BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x1fff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x13d0
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x13d0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	testl	%edi, %edi
    00000014: 	jle	.Ltmp1 # Offset: 20
    0000001a: 	leal	-0x1(%rdi), %eax
    0000001d: 	movl	%edi, %r13d
    00000020: 	movq	%rsi, %r14
    00000023: 	movq	%rsi, %rbx
    00000026: 	leaq	0x8(%rsi,%rax,8), %r12
    0000002b: 	leaq	DATAat0x1c150(%rip), %rbp
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2:
    00000038: 	movq	(%rbx), %rdx
    0000003b: 	movq	%rbp, %rsi
    0000003e: 	movl	$0x1, %edi
    00000043: 	xorl	%eax, %eax
    00000045: 	addq	$0x8, %rbx
    00000049: 	callq	__printf_chk@PLT # Offset: 73
    0000004e: 	cmpq	%r12, %rbx
    00000051: 	jne	.Ltmp2 # Offset: 81
    00000053: 	xorl	%eax, %eax
    00000055: 	leaq	DATAat0x1c136(%rip), %rsi
    0000005c: 	movl	$0x1, %edi
    00000061: 	callq	__printf_chk@PLT # Offset: 97
    00000066: 	cmpl	$0x1, %r13d
    0000006a: 	jg	.Ltmp3 # Offset: 106
.Ltmp4:
    00000070: 	movl	$0x5, %ebp
    00000075: 	movl	$0x5, %edi
    0000007a: 	movl	$0x5, %r13d
    00000080: 	movl	$0x5, %r12d
    00000086: 	movl	$0x5, %r14d
    0000008c: 	movl	$0x5, %r15d
    00000092: 	movl	$0x5, %r8d
    00000098: 	movl	$0x5, %ebx
.Ltmp5:
    0000009d: 	movl	%r8d, 0xc(%rsp)
    000000a2: 	callq	_Z11TestOneTypeIhEvT_ # Offset: 162
    000000a7: 	movl	0xc(%rsp), %edi
    000000ab: 	callq	_Z11TestOneTypeIaEvT_ # Offset: 171
    000000b0: 	movl	%ebp, %edi
    000000b2: 	callq	_Z11TestOneTypeItEvT_ # Offset: 178
    000000b7: 	movl	%r15d, %edi
    000000ba: 	callq	_Z11TestOneTypeIsEvT_ # Offset: 186
    000000bf: 	movl	%r14d, %edi
    000000c2: 	callq	_Z11TestOneTypeIjEvT_ # Offset: 194
    000000c7: 	movl	%ebx, %edi
    000000c9: 	callq	_Z11TestOneTypeIiEvT_ # Offset: 201
    000000ce: 	movl	iterations(%rip), %edx
    000000d4: 	movq	%r12, %rdi
    000000d7: 	testl	%edx, %edx
    000000d9: 	leal	0x7(%rdx), %eax
    000000dc: 	cmovnsl	%edx, %eax
    000000df: 	sarl	$0x3, %eax
    000000e2: 	movl	%eax, iterations(%rip)
    000000e8: 	callq	_Z11TestOneTypeImEvT_ # Offset: 232
    000000ed: 	movq	%r13, %rdi
    000000f0: 	callq	_Z11TestOneTypeIlEvT_ # Offset: 240
    000000f5: 	pxor	%xmm0, %xmm0
    000000f9: 	cvtsi2ss	%ebx, %xmm0
    000000fd: 	callq	_Z11TestOneTypeIfEvT_ # Offset: 253
    00000102: 	pxor	%xmm0, %xmm0
    00000106: 	cvtsi2sd	%ebx, %xmm0
    0000010a: 	callq	_Z11TestOneTypeIdEvT_ # Offset: 266
    0000010f: 	addq	$0x18, %rsp
    00000113: 	xorl	%eax, %eax
    00000115: 	popq	%rbx
    00000116: 	popq	%rbp
    00000117: 	popq	%r12
    00000119: 	popq	%r13
    0000011b: 	popq	%r14
    0000011d: 	popq	%r15
    0000011f: 	retq # Offset: 287
.Ltmp3:
    00000120: 	movq	0x8(%r14), %rdi
    00000124: 	movl	$0xa, %edx
    00000129: 	xorl	%esi, %esi
    0000012b: 	callq	strtol@PLT # Offset: 299
    00000130: 	movl	%eax, iterations(%rip)
    00000136: 	cmpl	$0x2, %r13d
    0000013a: 	jle	.Ltmp4 # Offset: 314
    00000140: 	movq	0x10(%r14), %rdi
    00000144: 	movl	$0xa, %edx
    00000149: 	xorl	%esi, %esi
    0000014b: 	callq	strtol@PLT # Offset: 331
    00000150: 	movl	%eax, init_value(%rip)
    00000156: 	cmpl	$0x3, %r13d
    0000015a: 	jle	.Ltmp4 # Offset: 346
    00000160: 	movq	0x18(%r14), %rdi
    00000164: 	movl	$0xa, %edx
    00000169: 	xorl	%esi, %esi
    0000016b: 	callq	strtol@PLT # Offset: 363
    00000170: 	movslq	%eax, %r12
    00000173: 	movl	%eax, %ebx
    00000175: 	movsbl	%al, %r8d
    00000179: 	movswl	%ax, %r15d
    0000017d: 	movl	%eax, %r14d
    00000180: 	movq	%r12, %r13
    00000183: 	movzbl	%al, %edi
    00000186: 	movzwl	%ax, %ebp
    00000189: 	jmp	.Ltmp5 # Offset: 393
.Ltmp1:
    0000018e: 	leaq	DATAat0x1c136(%rip), %rsi
    00000195: 	movl	$0x1, %edi
    0000019a: 	xorl	%eax, %eax
    0000019c: 	callq	__printf_chk@PLT # Offset: 412
    000001a1: 	jmp	.Ltmp4 # Offset: 417
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x1660
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1660
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x1ffe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1690
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1690
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	"completed.0/1"(%rip), %rdi
    00000007: 	leaq	"completed.0/1"(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp6 # Offset: 17
    00000013: 	movq	DATAat0x1ffe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp6 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp6:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x16c0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x16c0
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	"completed.0/1"(%rip), %rdi
    00000007: 	leaq	"completed.0/1"(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp7 # Offset: 34
    00000024: 	movq	DATAat0x1fff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp7 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x1700
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1700
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp8 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp9 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp9:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp8:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x1740
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x1740
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x1750
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x1750
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp10 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp11 # Offset: 38
.Ltmp10:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp12 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp11:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp12:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x1c008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x17f0
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x17f0
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp13 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp14 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp15:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp15 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp28:
    00000069: 	leaq	DATAat0x1c152(%rip), %rbp
    00000070: 	leaq	DATAat0x1c028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x1c068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp16 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x1c378(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x1c098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x1c370(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp17 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp21:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp18 # Offset: 244
    000000fa: 	movq	DATAat0x1c360(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp22:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x1c360(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp19 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp19:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x1c137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x1c378(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp20 # Offset: 398
.Ltmp17:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp21 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp22 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp18:
    000001c8: 	movq	DATAat0x1c368(%rip), %rsi
    000001cf: 	movq	DATAat0x1c360(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp19 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp20:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp16 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp23 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp24:
    00000210: 	addq	$0x10, %rax
.Ltmp23:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp24 # Offset: 542
.Ltmp29:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x1c0c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp25 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp26 # Offset: 592
.Ltmp25:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp13:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp26:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp27:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp27 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x1c112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp13 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp14:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp28 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp16:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp29 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1b20
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1b20
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp30 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp31 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp32:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp32 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp37:
    0000006a: 	leaq	DATAat0x1c152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x1c0f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x1c138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x1c152(%rip), %r8
    000000a1: 	leaq	DATAat0x1c126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp33 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp34:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x1c137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp34 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp33 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp35 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp36:
    00000140: 	addq	$0x10, %rax
.Ltmp35:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp36 # Offset: 334
.Ltmp38:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x1c0c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp30:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp31:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp37 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp33:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp38 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1cd0
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1cd0
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1cf0
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1cf0
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1d30
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1d30
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1d60
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d60
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1d90
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d90
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1dc0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1dc0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1df0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1df0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1e20
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1e20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1e50
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1e80
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1eb0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1eb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1ee0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1ee0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1f10
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1f10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1f40
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x1f40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x1f80
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1f80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x1fb0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1fb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x1fe0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1fe0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x2010
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2010
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x2040
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2040
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x2070
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2070
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x20a0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x20d0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x2100
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2100
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x2130
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2130
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x2160
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2160
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 38
  State       : disassembled
  Address     : 0x2190
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x2190
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp39 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp42:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp41:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp40 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp41 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp42 # Offset: 142
.Ltmp39:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp43 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp44 # Offset: 164
.Ltmp47:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp45 # Offset: 177
.Ltmp46:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp44 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp46 # Offset: 214
.Ltmp45:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp47 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp48 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp50:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp49 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp49:
    0000010a: 	addq	$0x20, %r13
.Ltmp44:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp50 # Offset: 275
.Ltmp48:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp51 # Offset: 283
.Ltmp57:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp52 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp53:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp53 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp52:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp40:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp41 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp42 # Offset: 389
    0000018b: 	jmp	.Ltmp39 # Offset: 395
.Ltmp43:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp48 # Offset: 405
.Ltmp56:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp54 # Offset: 422
.Ltmp55:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp48 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp55 # Offset: 463
.Ltmp54:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp56 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp57 # Offset: 482
.Ltmp51:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x2390
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x2390
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp58 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp59 # Offset: 63
.Ltmp58:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp60 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp61 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp65:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp62 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp63 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp61:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp64 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp65 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp60:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp66:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp65 # Offset: 248
.Ltmp59:
    000000fd: 	leaq	DATAat0x1c158(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp62:
    00000109: 	leaq	DATAat0x1c182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp63:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp64:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp66 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp67 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp67:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x24e0
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x24e0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp68 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp71:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp70:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp69 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp70 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp71 # Offset: 142
.Ltmp68:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp72 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp73 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp75:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp74 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp75 # Offset: 215
.Ltmp73:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp76 # Offset: 222
.Ltmp78:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp77 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp78 # Offset: 263
.Ltmp76:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp79 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp80:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp80 # Offset: 324
.Ltmp79:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp69:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp70 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp71 # Offset: 397
    00000193: 	jmp	.Ltmp68 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp77:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp78 # Offset: 425
    000001af: 	jmp	.Ltmp76 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp74:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp75 # Offset: 449
    000001c7: 	jmp	.Ltmp73 # Offset: 455
.Ltmp72:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp76 # Offset: 465
.Ltmp83:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp81 # Offset: 482
.Ltmp82:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp76 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp82 # Offset: 523
.Ltmp81:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp83 # Offset: 534
    00000218: 	jmp	.Ltmp76 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x2700
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2700
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp84 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp85 # Offset: 152
.Ltmp96:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp86 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp87 # Offset: 204
.Ltmp86:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp88 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp89 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp91:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp90 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp89:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp91 # Offset: 339
    00000155: 	jmp	.Ltmp92 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp85:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp93 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp94 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp95 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp95:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp98:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp96 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp88:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp92:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp91 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp93:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp97 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp98 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp98 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp97:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp98 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp98 # Offset: 696
.Ltmp87:
    000002bd: 	leaq	DATAat0x1c158(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp94:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp99 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp99:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp84:
    000002e0: 	leaq	DATAat0x1c198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp90:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x2a30
  Size        : 0x10c
  MaxSize     : 0x110
  Offset      : 0x2a30
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	movq	0x30(%rdi), %rbx
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	movq	0x40(%rdi), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp100 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %r13
    00000044: 	movq	%r13, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp101 # Offset: 74
    0000004c: 	testq	%r13, %r13
    0000004f: 	je	.Ltmp102 # Offset: 79
.Ltmp101:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp103 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp104 # Offset: 99
    00000069: 	movzbl	(%r13), %eax
    0000006e: 	movb	%al, 0x10(%rbx)
.Ltmp106:
    00000071: 	movq	%r12, 0x8(%rbx)
    00000075: 	movb	$0x0, (%rdi,%r12)
    0000007a: 	addq	$0x20, 0x30(%rbp)
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	subq	%fs:0x28, %rax
    0000008d: 	jne	.Ltmp105 # Offset: 141
    0000008f: 	addq	$0x18, %rsp
    00000093: 	popq	%rbx
    00000094: 	popq	%rbp
    00000095: 	popq	%r12
    00000097: 	popq	%r13
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp103:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp107:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%r13, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp106 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp100:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp105 # Offset: 222
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp104:
    000000f0: 	testq	%r12, %r12
    000000f3: 	je	.Ltmp106 # Offset: 243
    000000f9: 	jmp	.Ltmp107 # Offset: 249
.Ltmp102:
    000000fb: 	leaq	DATAat0x1c158(%rip), %rdi
    00000102: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 258
.Ltmp105:
    00000107: 	callq	__stack_chk_fail@PLT # Offset: 263
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_"

Binary Function "_Z22test_struct4_deref_optIi12test_struct1IiEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x2b40
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x2b40
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIi12test_struct1IiEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movl	%esi, %ebx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbp), %rax
    0000003d: 	xorl	%ebp, %ebp
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rax
    00000047: 	imull	(%rax), %ebx
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp108 # Offset: 82
.Ltmp117:
    00000054: 	imull	$0x1f40, init_value(%rip), %eax
    0000005e: 	cmpl	%eax, %ebx
    00000060: 	jne	.Ltmp109 # Offset: 96
.Ltmp108:
    00000066: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000074: 	subq	$0x20, %rax
    00000078: 	cmpq	%rax, %rbx
    0000007b: 	je	.Ltmp110 # Offset: 123
    00000081: 	leaq	0x10(%rbx), %rdi
    00000085: 	movq	%rdi, (%rbx)
    00000088: 	movq	(%r12), %rbp
    0000008c: 	movq	0x8(%r12), %r12
    00000091: 	movq	%rbp, %rax
    00000094: 	addq	%r12, %rax
    00000097: 	je	.Ltmp111 # Offset: 151
    00000099: 	testq	%rbp, %rbp
    0000009c: 	je	.Ltmp112 # Offset: 156
.Ltmp111:
    000000a2: 	movq	%r12, (%rsp)
    000000a6: 	cmpq	$0xf, %r12
    000000aa: 	ja	.Ltmp113 # Offset: 170
    000000b0: 	cmpq	$0x1, %r12
    000000b4: 	jne	.Ltmp114 # Offset: 180
    000000ba: 	movzbl	(%rbp), %eax
    000000be: 	movb	%al, 0x10(%rbx)
.Ltmp118:
    000000c1: 	movq	%r12, 0x8(%rbx)
    000000c5: 	movb	$0x0, (%rdi,%r12)
    000000ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d8: 	addq	$0x20, %rax
    000000dc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000ea: 	je	.Ltmp115 # Offset: 234
.Ltmp119:
    000000f0: 	movq	-0x20(%rax), %rbp
    000000f4: 	callq	clock@PLT # Offset: 244
    000000f9: 	movq	%rax, end_time(%rip)
    00000100: 	movq	0x8(%rsp), %rdx
    00000105: 	subq	%fs:0x28, %rdx
    0000010e: 	jne	.Ltmp116 # Offset: 270
    00000114: 	subq	start_time(%rip), %rax
    0000011b: 	pxor	%xmm0, %xmm0
    0000011f: 	movq	%rbp, %rdi
    00000122: 	cvtsi2sd	%rax, %xmm0
    00000127: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000012f: 	addq	$0x18, %rsp
    00000133: 	popq	%rbx
    00000134: 	popq	%rbp
    00000135: 	popq	%r12
    00000137: 	popq	%r13
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp109:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %ebp
    00000151: 	callq	__printf_chk@PLT # Offset: 337
    00000156: 	cmpl	iterations(%rip), %ebp
    0000015c: 	jl	.Ltmp117 # Offset: 348
    00000162: 	jmp	.Ltmp108 # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp113:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp120:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp118 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp110:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp119 # Offset: 460
.Ltmp115:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp119 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp114:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp118 # Offset: 491
    000001f1: 	jmp	.Ltmp120 # Offset: 497
.Ltmp116:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp112:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIi12test_struct1IiEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIs12test_struct1IsEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x2d50
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x2d50
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIs12test_struct1IsEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movl	%esi, %ebx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbp), %rax
    0000003d: 	xorl	%ebp, %ebp
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rax
    00000047: 	imulw	(%rax), %bx
    0000004b: 	movl	iterations(%rip), %eax
    00000051: 	testl	%eax, %eax
    00000053: 	jle	.Ltmp121 # Offset: 83
.Ltmp130:
    00000055: 	imulw	$0x1f40, init_value(%rip), %ax
    0000005e: 	cmpw	%ax, %bx
    00000061: 	jne	.Ltmp122 # Offset: 97
.Ltmp121:
    00000067: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000075: 	subq	$0x20, %rax
    00000079: 	cmpq	%rax, %rbx
    0000007c: 	je	.Ltmp123 # Offset: 124
    00000082: 	leaq	0x10(%rbx), %rdi
    00000086: 	movq	%rdi, (%rbx)
    00000089: 	movq	(%r12), %rbp
    0000008d: 	movq	0x8(%r12), %r12
    00000092: 	movq	%rbp, %rax
    00000095: 	addq	%r12, %rax
    00000098: 	je	.Ltmp124 # Offset: 152
    0000009a: 	testq	%rbp, %rbp
    0000009d: 	je	.Ltmp125 # Offset: 157
.Ltmp124:
    000000a3: 	movq	%r12, (%rsp)
    000000a7: 	cmpq	$0xf, %r12
    000000ab: 	ja	.Ltmp126 # Offset: 171
    000000b1: 	cmpq	$0x1, %r12
    000000b5: 	jne	.Ltmp127 # Offset: 181
    000000bb: 	movzbl	(%rbp), %eax
    000000bf: 	movb	%al, 0x10(%rbx)
.Ltmp131:
    000000c2: 	movq	%r12, 0x8(%rbx)
    000000c6: 	movb	$0x0, (%rdi,%r12)
    000000cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d9: 	addq	$0x20, %rax
    000000dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000eb: 	je	.Ltmp128 # Offset: 235
.Ltmp132:
    000000f1: 	movq	-0x20(%rax), %rbp
    000000f5: 	callq	clock@PLT # Offset: 245
    000000fa: 	movq	%rax, end_time(%rip)
    00000101: 	movq	0x8(%rsp), %rdx
    00000106: 	subq	%fs:0x28, %rdx
    0000010f: 	jne	.Ltmp129 # Offset: 271
    00000115: 	subq	start_time(%rip), %rax
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	movq	%rbp, %rdi
    00000123: 	cvtsi2sd	%rax, %xmm0
    00000128: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000130: 	addq	$0x18, %rsp
    00000134: 	popq	%rbx
    00000135: 	popq	%rbp
    00000136: 	popq	%r12
    00000138: 	popq	%r13
    0000013a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 314
    0000013f: 	nop # Size: 1
.Ltmp122:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %ebp
    00000151: 	callq	__printf_chk@PLT # Offset: 337
    00000156: 	cmpl	iterations(%rip), %ebp
    0000015c: 	jl	.Ltmp130 # Offset: 348
    00000162: 	jmp	.Ltmp121 # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp126:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp133:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp131 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp123:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp132 # Offset: 460
.Ltmp128:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp132 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp127:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp131 # Offset: 491
    000001f1: 	jmp	.Ltmp133 # Offset: 497
.Ltmp129:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp125:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIs12test_struct1IsEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIj12test_struct1IjEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x2f60
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x2f60
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIj12test_struct1IjEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movl	%esi, %ebx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbp), %rax
    0000003d: 	xorl	%ebp, %ebp
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rax
    00000047: 	imull	(%rax), %ebx
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp134 # Offset: 82
.Ltmp143:
    00000054: 	imull	$0x1f40, init_value(%rip), %eax
    0000005e: 	cmpl	%eax, %ebx
    00000060: 	jne	.Ltmp135 # Offset: 96
.Ltmp134:
    00000066: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000074: 	subq	$0x20, %rax
    00000078: 	cmpq	%rax, %rbx
    0000007b: 	je	.Ltmp136 # Offset: 123
    00000081: 	leaq	0x10(%rbx), %rdi
    00000085: 	movq	%rdi, (%rbx)
    00000088: 	movq	(%r12), %rbp
    0000008c: 	movq	0x8(%r12), %r12
    00000091: 	movq	%rbp, %rax
    00000094: 	addq	%r12, %rax
    00000097: 	je	.Ltmp137 # Offset: 151
    00000099: 	testq	%rbp, %rbp
    0000009c: 	je	.Ltmp138 # Offset: 156
.Ltmp137:
    000000a2: 	movq	%r12, (%rsp)
    000000a6: 	cmpq	$0xf, %r12
    000000aa: 	ja	.Ltmp139 # Offset: 170
    000000b0: 	cmpq	$0x1, %r12
    000000b4: 	jne	.Ltmp140 # Offset: 180
    000000ba: 	movzbl	(%rbp), %eax
    000000be: 	movb	%al, 0x10(%rbx)
.Ltmp144:
    000000c1: 	movq	%r12, 0x8(%rbx)
    000000c5: 	movb	$0x0, (%rdi,%r12)
    000000ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d8: 	addq	$0x20, %rax
    000000dc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000ea: 	je	.Ltmp141 # Offset: 234
.Ltmp145:
    000000f0: 	movq	-0x20(%rax), %rbp
    000000f4: 	callq	clock@PLT # Offset: 244
    000000f9: 	movq	%rax, end_time(%rip)
    00000100: 	movq	0x8(%rsp), %rdx
    00000105: 	subq	%fs:0x28, %rdx
    0000010e: 	jne	.Ltmp142 # Offset: 270
    00000114: 	subq	start_time(%rip), %rax
    0000011b: 	pxor	%xmm0, %xmm0
    0000011f: 	movq	%rbp, %rdi
    00000122: 	cvtsi2sd	%rax, %xmm0
    00000127: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000012f: 	addq	$0x18, %rsp
    00000133: 	popq	%rbx
    00000134: 	popq	%rbp
    00000135: 	popq	%r12
    00000137: 	popq	%r13
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp135:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %ebp
    00000151: 	callq	__printf_chk@PLT # Offset: 337
    00000156: 	cmpl	iterations(%rip), %ebp
    0000015c: 	jl	.Ltmp143 # Offset: 348
    00000162: 	jmp	.Ltmp134 # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp139:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp146:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp144 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp136:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp145 # Offset: 460
.Ltmp141:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp145 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp140:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp144 # Offset: 491
    000001f1: 	jmp	.Ltmp146 # Offset: 497
.Ltmp142:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp138:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIj12test_struct1IjEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIm12test_struct1ImEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x3170
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x3170
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIm12test_struct1ImEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movslq	%esi, %rbx
    0000001a: 	subq	$0x18, %rsp
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	callq	clock@PLT # Offset: 46
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	movq	0x8(%r12), %rax
    0000003f: 	xorl	%r12d, %r12d
    00000042: 	movq	0x8(%rax), %rax
    00000046: 	movq	0x8(%rax), %rax
    0000004a: 	imulq	(%rax), %rbx
    0000004e: 	movl	iterations(%rip), %eax
    00000054: 	testl	%eax, %eax
    00000056: 	jle	.Ltmp147 # Offset: 86
.Ltmp156:
    00000058: 	movslq	init_value(%rip), %rax
    0000005f: 	imulq	$0x1f40, %rax, %rax
    00000066: 	cmpq	%rax, %rbx
    00000069: 	jne	.Ltmp148 # Offset: 105
.Ltmp147:
    0000006f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000076: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007d: 	subq	$0x20, %rax
    00000081: 	cmpq	%rax, %rbx
    00000084: 	je	.Ltmp149 # Offset: 132
    0000008a: 	leaq	0x10(%rbx), %rdi
    0000008e: 	movq	0x8(%rbp), %r12
    00000092: 	movq	%rdi, (%rbx)
    00000095: 	movq	(%rbp), %r13
    00000099: 	movq	%r13, %rax
    0000009c: 	addq	%r12, %rax
    0000009f: 	je	.Ltmp150 # Offset: 159
    000000a1: 	testq	%r13, %r13
    000000a4: 	je	.Ltmp151 # Offset: 164
.Ltmp150:
    000000aa: 	movq	%r12, (%rsp)
    000000ae: 	cmpq	$0xf, %r12
    000000b2: 	ja	.Ltmp152 # Offset: 178
    000000b8: 	cmpq	$0x1, %r12
    000000bc: 	jne	.Ltmp153 # Offset: 188
    000000c2: 	movzbl	(%r13), %eax
    000000c7: 	movb	%al, 0x10(%rbx)
.Ltmp157:
    000000ca: 	movq	%r12, 0x8(%rbx)
    000000ce: 	movb	$0x0, (%rdi,%r12)
    000000d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e1: 	addq	$0x20, %rax
    000000e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f3: 	je	.Ltmp154 # Offset: 243
.Ltmp158:
    000000f9: 	movq	-0x20(%rax), %rbp
    000000fd: 	callq	clock@PLT # Offset: 253
    00000102: 	movq	%rax, end_time(%rip)
    00000109: 	movq	0x8(%rsp), %rdx
    0000010e: 	subq	%fs:0x28, %rdx
    00000117: 	jne	.Ltmp155 # Offset: 279
    0000011d: 	subq	start_time(%rip), %rax
    00000124: 	pxor	%xmm0, %xmm0
    00000128: 	movq	%rbp, %rdi
    0000012b: 	cvtsi2sd	%rax, %xmm0
    00000130: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000138: 	addq	$0x18, %rsp
    0000013c: 	popq	%rbx
    0000013d: 	popq	%rbp
    0000013e: 	popq	%r12
    00000140: 	popq	%r13
    00000142: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 322
    00000147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp148:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r13, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %r12d
    00000162: 	callq	__printf_chk@PLT # Offset: 354
    00000167: 	cmpl	iterations(%rip), %r12d
    0000016e: 	jl	.Ltmp156 # Offset: 366
    00000174: 	jmp	.Ltmp147 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp152:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp159:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp157 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp149:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp158 # Offset: 476
.Ltmp154:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp158 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp153:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp157 # Offset: 507
    00000201: 	jmp	.Ltmp159 # Offset: 513
.Ltmp155:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp151:
    00000208: 	leaq	DATAat0x1c158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIm12test_struct1ImEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIa12test_struct1IaEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x3390
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x3390
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIa12test_struct1IaEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movl	%esi, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbx), %rax
    0000003d: 	xorl	%ebx, %ebx
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rdx
    00000047: 	movzbl	(%rdx), %eax
    0000004a: 	movl	iterations(%rip), %edx
    00000050: 	imull	%ebp, %eax
    00000053: 	movl	%eax, %ebp
    00000055: 	testl	%edx, %edx
    00000057: 	jle	.Ltmp160 # Offset: 87
.Ltmp169:
    00000059: 	movzbl	init_value(%rip), %edx
    00000060: 	shll	$0x6, %edx
    00000063: 	cmpb	%dl, %bpl
    00000066: 	jne	.Ltmp161 # Offset: 102
.Ltmp160:
    0000006c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000073: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007a: 	subq	$0x20, %rax
    0000007e: 	cmpq	%rax, %rbx
    00000081: 	je	.Ltmp162 # Offset: 129
    00000087: 	leaq	0x10(%rbx), %rdi
    0000008b: 	movq	%rdi, (%rbx)
    0000008e: 	movq	(%r12), %rbp
    00000092: 	movq	0x8(%r12), %r12
    00000097: 	movq	%rbp, %rax
    0000009a: 	addq	%r12, %rax
    0000009d: 	je	.Ltmp163 # Offset: 157
    0000009f: 	testq	%rbp, %rbp
    000000a2: 	je	.Ltmp164 # Offset: 162
.Ltmp163:
    000000a8: 	movq	%r12, (%rsp)
    000000ac: 	cmpq	$0xf, %r12
    000000b0: 	ja	.Ltmp165 # Offset: 176
    000000b6: 	cmpq	$0x1, %r12
    000000ba: 	jne	.Ltmp166 # Offset: 186
    000000c0: 	movzbl	(%rbp), %eax
    000000c4: 	movb	%al, 0x10(%rbx)
.Ltmp170:
    000000c7: 	movq	%r12, 0x8(%rbx)
    000000cb: 	movb	$0x0, (%rdi,%r12)
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000de: 	addq	$0x20, %rax
    000000e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f0: 	je	.Ltmp167 # Offset: 240
.Ltmp171:
    000000f6: 	movq	-0x20(%rax), %rbp
    000000fa: 	callq	clock@PLT # Offset: 250
    000000ff: 	movq	%rax, end_time(%rip)
    00000106: 	movq	0x8(%rsp), %rdx
    0000010b: 	subq	%fs:0x28, %rdx
    00000114: 	jne	.Ltmp168 # Offset: 276
    0000011a: 	subq	start_time(%rip), %rax
    00000121: 	pxor	%xmm0, %xmm0
    00000125: 	movq	%rbp, %rdi
    00000128: 	cvtsi2sd	%rax, %xmm0
    0000012d: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000135: 	addq	$0x18, %rsp
    00000139: 	popq	%rbx
    0000013a: 	popq	%rbp
    0000013b: 	popq	%r12
    0000013d: 	popq	%r13
    0000013f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 319
    00000144: 	nopl	(%rax) # Size: 4
.Ltmp161:
    00000148: 	movq	(%r12), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r13, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %ebx
    00000159: 	callq	__printf_chk@PLT # Offset: 345
    0000015e: 	cmpl	iterations(%rip), %ebx
    00000164: 	jl	.Ltmp169 # Offset: 356
    0000016a: 	jmp	.Ltmp160 # Offset: 362
    0000016f: 	nop # Size: 1
.Ltmp165:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp172:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp170 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp162:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp171 # Offset: 460
.Ltmp167:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp171 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp166:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp170 # Offset: 491
    000001f1: 	jmp	.Ltmp172 # Offset: 497
.Ltmp168:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp164:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIa12test_struct1IaEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIt12test_struct1ItEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x35a0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x35a0
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIt12test_struct1ItEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movl	%esi, %ebx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbp), %rax
    0000003d: 	xorl	%ebp, %ebp
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rax
    00000047: 	imulw	(%rax), %bx
    0000004b: 	movl	iterations(%rip), %eax
    00000051: 	testl	%eax, %eax
    00000053: 	jle	.Ltmp173 # Offset: 83
.Ltmp182:
    00000055: 	imulw	$0x1f40, init_value(%rip), %ax
    0000005e: 	cmpw	%ax, %bx
    00000061: 	jne	.Ltmp174 # Offset: 97
.Ltmp173:
    00000067: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000075: 	subq	$0x20, %rax
    00000079: 	cmpq	%rax, %rbx
    0000007c: 	je	.Ltmp175 # Offset: 124
    00000082: 	leaq	0x10(%rbx), %rdi
    00000086: 	movq	%rdi, (%rbx)
    00000089: 	movq	(%r12), %rbp
    0000008d: 	movq	0x8(%r12), %r12
    00000092: 	movq	%rbp, %rax
    00000095: 	addq	%r12, %rax
    00000098: 	je	.Ltmp176 # Offset: 152
    0000009a: 	testq	%rbp, %rbp
    0000009d: 	je	.Ltmp177 # Offset: 157
.Ltmp176:
    000000a3: 	movq	%r12, (%rsp)
    000000a7: 	cmpq	$0xf, %r12
    000000ab: 	ja	.Ltmp178 # Offset: 171
    000000b1: 	cmpq	$0x1, %r12
    000000b5: 	jne	.Ltmp179 # Offset: 181
    000000bb: 	movzbl	(%rbp), %eax
    000000bf: 	movb	%al, 0x10(%rbx)
.Ltmp183:
    000000c2: 	movq	%r12, 0x8(%rbx)
    000000c6: 	movb	$0x0, (%rdi,%r12)
    000000cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d9: 	addq	$0x20, %rax
    000000dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000eb: 	je	.Ltmp180 # Offset: 235
.Ltmp184:
    000000f1: 	movq	-0x20(%rax), %rbp
    000000f5: 	callq	clock@PLT # Offset: 245
    000000fa: 	movq	%rax, end_time(%rip)
    00000101: 	movq	0x8(%rsp), %rdx
    00000106: 	subq	%fs:0x28, %rdx
    0000010f: 	jne	.Ltmp181 # Offset: 271
    00000115: 	subq	start_time(%rip), %rax
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	movq	%rbp, %rdi
    00000123: 	cvtsi2sd	%rax, %xmm0
    00000128: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000130: 	addq	$0x18, %rsp
    00000134: 	popq	%rbx
    00000135: 	popq	%rbp
    00000136: 	popq	%r12
    00000138: 	popq	%r13
    0000013a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 314
    0000013f: 	nop # Size: 1
.Ltmp174:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %ebp
    00000151: 	callq	__printf_chk@PLT # Offset: 337
    00000156: 	cmpl	iterations(%rip), %ebp
    0000015c: 	jl	.Ltmp182 # Offset: 348
    00000162: 	jmp	.Ltmp173 # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp178:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp185:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp183 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp175:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp184 # Offset: 460
.Ltmp180:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp184 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp179:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp183 # Offset: 491
    000001f1: 	jmp	.Ltmp185 # Offset: 497
.Ltmp181:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp177:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIt12test_struct1ItEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIh12test_struct1IhEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x37b0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x37b0
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIh12test_struct1IhEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	movl	%esi, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	subq	$0x18, %rsp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movq	0x8(%rbx), %rax
    0000003d: 	xorl	%ebx, %ebx
    0000003f: 	movq	0x8(%rax), %rax
    00000043: 	movq	0x8(%rax), %rdx
    00000047: 	movzbl	(%rdx), %eax
    0000004a: 	movl	iterations(%rip), %edx
    00000050: 	imull	%ebp, %eax
    00000053: 	movl	%eax, %ebp
    00000055: 	testl	%edx, %edx
    00000057: 	jle	.Ltmp186 # Offset: 87
.Ltmp195:
    00000059: 	movzbl	init_value(%rip), %edx
    00000060: 	shll	$0x6, %edx
    00000063: 	cmpb	%dl, %bpl
    00000066: 	jne	.Ltmp187 # Offset: 102
.Ltmp186:
    0000006c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000073: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007a: 	subq	$0x20, %rax
    0000007e: 	cmpq	%rax, %rbx
    00000081: 	je	.Ltmp188 # Offset: 129
    00000087: 	leaq	0x10(%rbx), %rdi
    0000008b: 	movq	%rdi, (%rbx)
    0000008e: 	movq	(%r12), %rbp
    00000092: 	movq	0x8(%r12), %r12
    00000097: 	movq	%rbp, %rax
    0000009a: 	addq	%r12, %rax
    0000009d: 	je	.Ltmp189 # Offset: 157
    0000009f: 	testq	%rbp, %rbp
    000000a2: 	je	.Ltmp190 # Offset: 162
.Ltmp189:
    000000a8: 	movq	%r12, (%rsp)
    000000ac: 	cmpq	$0xf, %r12
    000000b0: 	ja	.Ltmp191 # Offset: 176
    000000b6: 	cmpq	$0x1, %r12
    000000ba: 	jne	.Ltmp192 # Offset: 186
    000000c0: 	movzbl	(%rbp), %eax
    000000c4: 	movb	%al, 0x10(%rbx)
.Ltmp196:
    000000c7: 	movq	%r12, 0x8(%rbx)
    000000cb: 	movb	$0x0, (%rdi,%r12)
    000000d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000de: 	addq	$0x20, %rax
    000000e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f0: 	je	.Ltmp193 # Offset: 240
.Ltmp197:
    000000f6: 	movq	-0x20(%rax), %rbp
    000000fa: 	callq	clock@PLT # Offset: 250
    000000ff: 	movq	%rax, end_time(%rip)
    00000106: 	movq	0x8(%rsp), %rdx
    0000010b: 	subq	%fs:0x28, %rdx
    00000114: 	jne	.Ltmp194 # Offset: 276
    0000011a: 	subq	start_time(%rip), %rax
    00000121: 	pxor	%xmm0, %xmm0
    00000125: 	movq	%rbp, %rdi
    00000128: 	cvtsi2sd	%rax, %xmm0
    0000012d: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000135: 	addq	$0x18, %rsp
    00000139: 	popq	%rbx
    0000013a: 	popq	%rbp
    0000013b: 	popq	%r12
    0000013d: 	popq	%r13
    0000013f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 319
    00000144: 	nopl	(%rax) # Size: 4
.Ltmp187:
    00000148: 	movq	(%r12), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r13, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %ebx
    00000159: 	callq	__printf_chk@PLT # Offset: 345
    0000015e: 	cmpl	iterations(%rip), %ebx
    00000164: 	jl	.Ltmp195 # Offset: 356
    0000016a: 	jmp	.Ltmp186 # Offset: 362
    0000016f: 	nop # Size: 1
.Ltmp191:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp198:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp196 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp188:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp197 # Offset: 460
.Ltmp193:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp197 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp192:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp196 # Offset: 491
    000001f1: 	jmp	.Ltmp198 # Offset: 497
.Ltmp194:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp190:
    000001f8: 	leaq	DATAat0x1c158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIh12test_struct1IhEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_struct4_deref_optIl12test_struct1IlEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x39c0
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x39c0
  Section     : .text
  Orc Section : .local.text._Z22test_struct4_deref_optIl12test_struct1IlEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movslq	%esi, %rbx
    0000001a: 	subq	$0x18, %rsp
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	callq	clock@PLT # Offset: 46
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	movq	0x8(%r12), %rax
    0000003f: 	xorl	%r12d, %r12d
    00000042: 	movq	0x8(%rax), %rax
    00000046: 	movq	0x8(%rax), %rax
    0000004a: 	imulq	(%rax), %rbx
    0000004e: 	movl	iterations(%rip), %eax
    00000054: 	testl	%eax, %eax
    00000056: 	jle	.Ltmp199 # Offset: 86
.Ltmp208:
    00000058: 	movslq	init_value(%rip), %rax
    0000005f: 	imulq	$0x1f40, %rax, %rax
    00000066: 	cmpq	%rax, %rbx
    00000069: 	jne	.Ltmp200 # Offset: 105
.Ltmp199:
    0000006f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000076: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007d: 	subq	$0x20, %rax
    00000081: 	cmpq	%rax, %rbx
    00000084: 	je	.Ltmp201 # Offset: 132
    0000008a: 	leaq	0x10(%rbx), %rdi
    0000008e: 	movq	0x8(%rbp), %r12
    00000092: 	movq	%rdi, (%rbx)
    00000095: 	movq	(%rbp), %r13
    00000099: 	movq	%r13, %rax
    0000009c: 	addq	%r12, %rax
    0000009f: 	je	.Ltmp202 # Offset: 159
    000000a1: 	testq	%r13, %r13
    000000a4: 	je	.Ltmp203 # Offset: 164
.Ltmp202:
    000000aa: 	movq	%r12, (%rsp)
    000000ae: 	cmpq	$0xf, %r12
    000000b2: 	ja	.Ltmp204 # Offset: 178
    000000b8: 	cmpq	$0x1, %r12
    000000bc: 	jne	.Ltmp205 # Offset: 188
    000000c2: 	movzbl	(%r13), %eax
    000000c7: 	movb	%al, 0x10(%rbx)
.Ltmp209:
    000000ca: 	movq	%r12, 0x8(%rbx)
    000000ce: 	movb	$0x0, (%rdi,%r12)
    000000d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e1: 	addq	$0x20, %rax
    000000e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f3: 	je	.Ltmp206 # Offset: 243
.Ltmp210:
    000000f9: 	movq	-0x20(%rax), %rbp
    000000fd: 	callq	clock@PLT # Offset: 253
    00000102: 	movq	%rax, end_time(%rip)
    00000109: 	movq	0x8(%rsp), %rdx
    0000010e: 	subq	%fs:0x28, %rdx
    00000117: 	jne	.Ltmp207 # Offset: 279
    0000011d: 	subq	start_time(%rip), %rax
    00000124: 	pxor	%xmm0, %xmm0
    00000128: 	movq	%rbp, %rdi
    0000012b: 	cvtsi2sd	%rax, %xmm0
    00000130: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000138: 	addq	$0x18, %rsp
    0000013c: 	popq	%rbx
    0000013d: 	popq	%rbp
    0000013e: 	popq	%r12
    00000140: 	popq	%r13
    00000142: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 322
    00000147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp200:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r13, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %r12d
    00000162: 	callq	__printf_chk@PLT # Offset: 354
    00000167: 	cmpl	iterations(%rip), %r12d
    0000016e: 	jl	.Ltmp208 # Offset: 366
    00000174: 	jmp	.Ltmp199 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp204:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp211:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp209 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp201:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp210 # Offset: 476
.Ltmp206:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp210 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp205:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp209 # Offset: 507
    00000201: 	jmp	.Ltmp211 # Offset: 513
.Ltmp207:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp203:
    00000208: 	leaq	DATAat0x1c158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_struct4_deref_optIl12test_struct1IlEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIh21test_struct_arrayListIhEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x3be0
  Size        : 0x234
  MaxSize     : 0x240
  Offset      : 0x3be0
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIh21test_struct_arrayListIhEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	(%rbx), %rcx
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	movq	0x28(%rbx), %rax
    0000003c: 	movq	(%rax,%r13,8), %rdx
    00000040: 	movq	0x20(%rbx), %rax
    00000044: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000004b: 	movq	(%rax,%rdx,8), %rdx
    0000004f: 	movq	0x18(%rbx), %rax
    00000053: 	movq	(%rax,%rdx,8), %rdx
    00000057: 	movq	0x10(%rbx), %rax
    0000005b: 	movq	(%rax,%rdx,8), %rdx
    0000005f: 	movq	0x8(%rbx), %rax
    00000063: 	xorl	%ebx, %ebx
    00000065: 	movq	(%rax,%rdx,8), %rdx
    00000069: 	movzbl	(%rcx,%rdx), %eax
    0000006d: 	movl	iterations(%rip), %edx
    00000073: 	imull	%ebp, %eax
    00000076: 	movl	%eax, %ebp
    00000078: 	testl	%edx, %edx
    0000007a: 	jle	.Ltmp212 # Offset: 122
.Ltmp221:
    0000007c: 	movzbl	init_value(%rip), %edx
    00000083: 	shll	$0x6, %edx
    00000086: 	cmpb	%dl, %bpl
    00000089: 	jne	.Ltmp213 # Offset: 137
.Ltmp212:
    0000008f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000096: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009d: 	subq	$0x20, %rax
    000000a1: 	cmpq	%rax, %rbx
    000000a4: 	je	.Ltmp214 # Offset: 164
    000000aa: 	leaq	0x10(%rbx), %rdi
    000000ae: 	movq	%rdi, (%rbx)
    000000b1: 	movq	(%r12), %rbp
    000000b5: 	movq	0x8(%r12), %r12
    000000ba: 	movq	%rbp, %rax
    000000bd: 	addq	%r12, %rax
    000000c0: 	je	.Ltmp215 # Offset: 192
    000000c2: 	testq	%rbp, %rbp
    000000c5: 	je	.Ltmp216 # Offset: 197
.Ltmp215:
    000000cb: 	movq	%r12, (%rsp)
    000000cf: 	cmpq	$0xf, %r12
    000000d3: 	ja	.Ltmp217 # Offset: 211
    000000d9: 	cmpq	$0x1, %r12
    000000dd: 	jne	.Ltmp218 # Offset: 221
    000000e3: 	movzbl	(%rbp), %eax
    000000e7: 	movb	%al, 0x10(%rbx)
.Ltmp222:
    000000ea: 	movq	%r12, 0x8(%rbx)
    000000ee: 	movb	$0x0, (%rdi,%r12)
    000000f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000101: 	addq	$0x20, %rax
    00000105: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000010c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000113: 	je	.Ltmp219 # Offset: 275
.Ltmp223:
    00000119: 	movq	-0x20(%rax), %rbp
    0000011d: 	callq	clock@PLT # Offset: 285
    00000122: 	movq	%rax, end_time(%rip)
    00000129: 	movq	0x8(%rsp), %rdx
    0000012e: 	subq	%fs:0x28, %rdx
    00000137: 	jne	.Ltmp220 # Offset: 311
    0000013d: 	subq	start_time(%rip), %rax
    00000144: 	pxor	%xmm0, %xmm0
    00000148: 	movq	%rbp, %rdi
    0000014b: 	cvtsi2sd	%rax, %xmm0
    00000150: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000158: 	addq	$0x18, %rsp
    0000015c: 	popq	%rbx
    0000015d: 	popq	%rbp
    0000015e: 	popq	%r12
    00000160: 	popq	%r13
    00000162: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp213:
    00000170: 	movq	(%r12), %rdx
    00000174: 	xorl	%eax, %eax
    00000176: 	movq	%r13, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	addl	$0x1, %ebx
    00000181: 	callq	__printf_chk@PLT # Offset: 385
    00000186: 	cmpl	%ebx, iterations(%rip)
    0000018c: 	jg	.Ltmp221 # Offset: 396
    00000192: 	jmp	.Ltmp212 # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp217:
    000001a0: 	movq	%rbx, %rdi
    000001a3: 	movq	%rsp, %rsi
    000001a6: 	xorl	%edx, %edx
    000001a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 424
    000001ad: 	movq	%rax, (%rbx)
    000001b0: 	movq	%rax, %rdi
    000001b3: 	movq	(%rsp), %rax
    000001b7: 	movq	%rax, 0x10(%rbx)
.Ltmp224:
    000001bb: 	movq	%r12, %rdx
    000001be: 	movq	%rbp, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	(%rsp), %r12
    000001ca: 	movq	(%rbx), %rdi
    000001cd: 	jmp	.Ltmp222 # Offset: 461
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp214:
    000001d8: 	movq	%r12, %rsi
    000001db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 482
    000001e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fc: 	jne	.Ltmp223 # Offset: 508
.Ltmp219:
    00000202: 	movq	-0x8(%rdx), %rax
    00000206: 	addq	$0x200, %rax
    0000020c: 	jmp	.Ltmp223 # Offset: 524
    00000211: 	nopl	(%rax) # Size: 7
.Ltmp218:
    00000218: 	testq	%r12, %r12
    0000021b: 	je	.Ltmp222 # Offset: 539
    00000221: 	jmp	.Ltmp224 # Offset: 545
.Ltmp220:
    00000223: 	callq	__stack_chk_fail@PLT # Offset: 547
.Ltmp216:
    00000228: 	leaq	DATAat0x1c158(%rip), %rdi
    0000022f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 559
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIh21test_struct_arrayListIhEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIa21test_struct_arrayListIaEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x3e20
  Size        : 0x234
  MaxSize     : 0x240
  Offset      : 0x3e20
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIa21test_struct_arrayListIaEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	(%rbx), %rcx
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	movq	0x28(%rbx), %rax
    0000003c: 	movq	(%rax,%r13,8), %rdx
    00000040: 	movq	0x20(%rbx), %rax
    00000044: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000004b: 	movq	(%rax,%rdx,8), %rdx
    0000004f: 	movq	0x18(%rbx), %rax
    00000053: 	movq	(%rax,%rdx,8), %rdx
    00000057: 	movq	0x10(%rbx), %rax
    0000005b: 	movq	(%rax,%rdx,8), %rdx
    0000005f: 	movq	0x8(%rbx), %rax
    00000063: 	xorl	%ebx, %ebx
    00000065: 	movq	(%rax,%rdx,8), %rdx
    00000069: 	movzbl	(%rcx,%rdx), %eax
    0000006d: 	movl	iterations(%rip), %edx
    00000073: 	imull	%ebp, %eax
    00000076: 	movl	%eax, %ebp
    00000078: 	testl	%edx, %edx
    0000007a: 	jle	.Ltmp225 # Offset: 122
.Ltmp234:
    0000007c: 	movzbl	init_value(%rip), %edx
    00000083: 	shll	$0x6, %edx
    00000086: 	cmpb	%dl, %bpl
    00000089: 	jne	.Ltmp226 # Offset: 137
.Ltmp225:
    0000008f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000096: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009d: 	subq	$0x20, %rax
    000000a1: 	cmpq	%rax, %rbx
    000000a4: 	je	.Ltmp227 # Offset: 164
    000000aa: 	leaq	0x10(%rbx), %rdi
    000000ae: 	movq	%rdi, (%rbx)
    000000b1: 	movq	(%r12), %rbp
    000000b5: 	movq	0x8(%r12), %r12
    000000ba: 	movq	%rbp, %rax
    000000bd: 	addq	%r12, %rax
    000000c0: 	je	.Ltmp228 # Offset: 192
    000000c2: 	testq	%rbp, %rbp
    000000c5: 	je	.Ltmp229 # Offset: 197
.Ltmp228:
    000000cb: 	movq	%r12, (%rsp)
    000000cf: 	cmpq	$0xf, %r12
    000000d3: 	ja	.Ltmp230 # Offset: 211
    000000d9: 	cmpq	$0x1, %r12
    000000dd: 	jne	.Ltmp231 # Offset: 221
    000000e3: 	movzbl	(%rbp), %eax
    000000e7: 	movb	%al, 0x10(%rbx)
.Ltmp235:
    000000ea: 	movq	%r12, 0x8(%rbx)
    000000ee: 	movb	$0x0, (%rdi,%r12)
    000000f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000101: 	addq	$0x20, %rax
    00000105: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000010c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000113: 	je	.Ltmp232 # Offset: 275
.Ltmp236:
    00000119: 	movq	-0x20(%rax), %rbp
    0000011d: 	callq	clock@PLT # Offset: 285
    00000122: 	movq	%rax, end_time(%rip)
    00000129: 	movq	0x8(%rsp), %rdx
    0000012e: 	subq	%fs:0x28, %rdx
    00000137: 	jne	.Ltmp233 # Offset: 311
    0000013d: 	subq	start_time(%rip), %rax
    00000144: 	pxor	%xmm0, %xmm0
    00000148: 	movq	%rbp, %rdi
    0000014b: 	cvtsi2sd	%rax, %xmm0
    00000150: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000158: 	addq	$0x18, %rsp
    0000015c: 	popq	%rbx
    0000015d: 	popq	%rbp
    0000015e: 	popq	%r12
    00000160: 	popq	%r13
    00000162: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp226:
    00000170: 	movq	(%r12), %rdx
    00000174: 	xorl	%eax, %eax
    00000176: 	movq	%r13, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	addl	$0x1, %ebx
    00000181: 	callq	__printf_chk@PLT # Offset: 385
    00000186: 	cmpl	iterations(%rip), %ebx
    0000018c: 	jl	.Ltmp234 # Offset: 396
    00000192: 	jmp	.Ltmp225 # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp230:
    000001a0: 	movq	%rbx, %rdi
    000001a3: 	movq	%rsp, %rsi
    000001a6: 	xorl	%edx, %edx
    000001a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 424
    000001ad: 	movq	%rax, (%rbx)
    000001b0: 	movq	%rax, %rdi
    000001b3: 	movq	(%rsp), %rax
    000001b7: 	movq	%rax, 0x10(%rbx)
.Ltmp237:
    000001bb: 	movq	%r12, %rdx
    000001be: 	movq	%rbp, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	(%rsp), %r12
    000001ca: 	movq	(%rbx), %rdi
    000001cd: 	jmp	.Ltmp235 # Offset: 461
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp227:
    000001d8: 	movq	%r12, %rsi
    000001db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 482
    000001e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fc: 	jne	.Ltmp236 # Offset: 508
.Ltmp232:
    00000202: 	movq	-0x8(%rdx), %rax
    00000206: 	addq	$0x200, %rax
    0000020c: 	jmp	.Ltmp236 # Offset: 524
    00000211: 	nopl	(%rax) # Size: 7
.Ltmp231:
    00000218: 	testq	%r12, %r12
    0000021b: 	je	.Ltmp235 # Offset: 539
    00000221: 	jmp	.Ltmp237 # Offset: 545
.Ltmp233:
    00000223: 	callq	__stack_chk_fail@PLT # Offset: 547
.Ltmp229:
    00000228: 	leaq	DATAat0x1c158(%rip), %rdi
    0000022f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 559
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIa21test_struct_arrayListIaEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIs21test_struct_arrayListIsEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x4060
  Size        : 0x224
  MaxSize     : 0x230
  Offset      : 0x4060
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIs21test_struct_arrayListIsEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movq	0x28(%rbx), %rax
    00000039: 	movq	(%rax,%r13,8), %rdx
    0000003d: 	movq	0x20(%rbx), %rax
    00000041: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000048: 	movq	(%rax,%rdx,8), %rdx
    0000004c: 	movq	0x18(%rbx), %rax
    00000050: 	movq	(%rax,%rdx,8), %rdx
    00000054: 	movq	0x10(%rbx), %rax
    00000058: 	movq	(%rax,%rdx,8), %rdx
    0000005c: 	movq	0x8(%rbx), %rax
    00000060: 	movq	(%rax,%rdx,8), %rdx
    00000064: 	movq	(%rbx), %rax
    00000067: 	xorl	%ebx, %ebx
    00000069: 	imulw	(%rax,%rdx,2), %bp
    0000006e: 	movl	iterations(%rip), %eax
    00000074: 	testl	%eax, %eax
    00000076: 	jle	.Ltmp238 # Offset: 118
.Ltmp247:
    00000078: 	imulw	$0x1f40, init_value(%rip), %ax
    00000081: 	cmpw	%ax, %bp
    00000084: 	jne	.Ltmp239 # Offset: 132
.Ltmp238:
    0000008a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000091: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000098: 	subq	$0x20, %rax
    0000009c: 	cmpq	%rax, %rbx
    0000009f: 	je	.Ltmp240 # Offset: 159
    000000a5: 	leaq	0x10(%rbx), %rdi
    000000a9: 	movq	%rdi, (%rbx)
    000000ac: 	movq	(%r12), %rbp
    000000b0: 	movq	0x8(%r12), %r12
    000000b5: 	movq	%rbp, %rax
    000000b8: 	addq	%r12, %rax
    000000bb: 	je	.Ltmp241 # Offset: 187
    000000bd: 	testq	%rbp, %rbp
    000000c0: 	je	.Ltmp242 # Offset: 192
.Ltmp241:
    000000c6: 	movq	%r12, (%rsp)
    000000ca: 	cmpq	$0xf, %r12
    000000ce: 	ja	.Ltmp243 # Offset: 206
    000000d4: 	cmpq	$0x1, %r12
    000000d8: 	jne	.Ltmp244 # Offset: 216
    000000de: 	movzbl	(%rbp), %eax
    000000e2: 	movb	%al, 0x10(%rbx)
.Ltmp248:
    000000e5: 	movq	%r12, 0x8(%rbx)
    000000e9: 	movb	$0x0, (%rdi,%r12)
    000000ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fc: 	addq	$0x20, %rax
    00000100: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000107: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010e: 	je	.Ltmp245 # Offset: 270
.Ltmp249:
    00000114: 	movq	-0x20(%rax), %rbp
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	movq	%rax, end_time(%rip)
    00000124: 	movq	0x8(%rsp), %rdx
    00000129: 	subq	%fs:0x28, %rdx
    00000132: 	jne	.Ltmp246 # Offset: 306
    00000138: 	subq	start_time(%rip), %rax
    0000013f: 	pxor	%xmm0, %xmm0
    00000143: 	movq	%rbp, %rdi
    00000146: 	cvtsi2sd	%rax, %xmm0
    0000014b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000153: 	addq	$0x18, %rsp
    00000157: 	popq	%rbx
    00000158: 	popq	%rbp
    00000159: 	popq	%r12
    0000015b: 	popq	%r13
    0000015d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp239:
    00000168: 	movq	(%r12), %rdx
    0000016c: 	xorl	%eax, %eax
    0000016e: 	movq	%r13, %rsi
    00000171: 	movl	$0x1, %edi
    00000176: 	addl	$0x1, %ebx
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	iterations(%rip), %ebx
    00000184: 	jl	.Ltmp247 # Offset: 388
    0000018a: 	jmp	.Ltmp238 # Offset: 394
    0000018f: 	nop # Size: 1
.Ltmp243:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp250:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp248 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp240:
    000001c8: 	movq	%r12, %rsi
    000001cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 466
    000001d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ec: 	jne	.Ltmp249 # Offset: 492
.Ltmp245:
    000001f2: 	movq	-0x8(%rdx), %rax
    000001f6: 	addq	$0x200, %rax
    000001fc: 	jmp	.Ltmp249 # Offset: 508
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp244:
    00000208: 	testq	%r12, %r12
    0000020b: 	je	.Ltmp248 # Offset: 523
    00000211: 	jmp	.Ltmp250 # Offset: 529
.Ltmp246:
    00000213: 	callq	__stack_chk_fail@PLT # Offset: 531
.Ltmp242:
    00000218: 	leaq	DATAat0x1c158(%rip), %rdi
    0000021f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 543
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIs21test_struct_arrayListIsEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIt21test_struct_arrayListItEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0x4290
  Size        : 0x224
  MaxSize     : 0x230
  Offset      : 0x4290
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIt21test_struct_arrayListItEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movq	0x28(%rbx), %rax
    00000039: 	movq	(%rax,%r13,8), %rdx
    0000003d: 	movq	0x20(%rbx), %rax
    00000041: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000048: 	movq	(%rax,%rdx,8), %rdx
    0000004c: 	movq	0x18(%rbx), %rax
    00000050: 	movq	(%rax,%rdx,8), %rdx
    00000054: 	movq	0x10(%rbx), %rax
    00000058: 	movq	(%rax,%rdx,8), %rdx
    0000005c: 	movq	0x8(%rbx), %rax
    00000060: 	movq	(%rax,%rdx,8), %rdx
    00000064: 	movq	(%rbx), %rax
    00000067: 	xorl	%ebx, %ebx
    00000069: 	imulw	(%rax,%rdx,2), %bp
    0000006e: 	movl	iterations(%rip), %eax
    00000074: 	testl	%eax, %eax
    00000076: 	jle	.Ltmp251 # Offset: 118
.Ltmp260:
    00000078: 	imulw	$0x1f40, init_value(%rip), %ax
    00000081: 	cmpw	%ax, %bp
    00000084: 	jne	.Ltmp252 # Offset: 132
.Ltmp251:
    0000008a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000091: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000098: 	subq	$0x20, %rax
    0000009c: 	cmpq	%rax, %rbx
    0000009f: 	je	.Ltmp253 # Offset: 159
    000000a5: 	leaq	0x10(%rbx), %rdi
    000000a9: 	movq	%rdi, (%rbx)
    000000ac: 	movq	(%r12), %rbp
    000000b0: 	movq	0x8(%r12), %r12
    000000b5: 	movq	%rbp, %rax
    000000b8: 	addq	%r12, %rax
    000000bb: 	je	.Ltmp254 # Offset: 187
    000000bd: 	testq	%rbp, %rbp
    000000c0: 	je	.Ltmp255 # Offset: 192
.Ltmp254:
    000000c6: 	movq	%r12, (%rsp)
    000000ca: 	cmpq	$0xf, %r12
    000000ce: 	ja	.Ltmp256 # Offset: 206
    000000d4: 	cmpq	$0x1, %r12
    000000d8: 	jne	.Ltmp257 # Offset: 216
    000000de: 	movzbl	(%rbp), %eax
    000000e2: 	movb	%al, 0x10(%rbx)
.Ltmp261:
    000000e5: 	movq	%r12, 0x8(%rbx)
    000000e9: 	movb	$0x0, (%rdi,%r12)
    000000ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fc: 	addq	$0x20, %rax
    00000100: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000107: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010e: 	je	.Ltmp258 # Offset: 270
.Ltmp262:
    00000114: 	movq	-0x20(%rax), %rbp
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	movq	%rax, end_time(%rip)
    00000124: 	movq	0x8(%rsp), %rdx
    00000129: 	subq	%fs:0x28, %rdx
    00000132: 	jne	.Ltmp259 # Offset: 306
    00000138: 	subq	start_time(%rip), %rax
    0000013f: 	pxor	%xmm0, %xmm0
    00000143: 	movq	%rbp, %rdi
    00000146: 	cvtsi2sd	%rax, %xmm0
    0000014b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000153: 	addq	$0x18, %rsp
    00000157: 	popq	%rbx
    00000158: 	popq	%rbp
    00000159: 	popq	%r12
    0000015b: 	popq	%r13
    0000015d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp252:
    00000168: 	movq	(%r12), %rdx
    0000016c: 	xorl	%eax, %eax
    0000016e: 	movq	%r13, %rsi
    00000171: 	movl	$0x1, %edi
    00000176: 	addl	$0x1, %ebx
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebx, iterations(%rip)
    00000184: 	jg	.Ltmp260 # Offset: 388
    0000018a: 	jmp	.Ltmp251 # Offset: 394
    0000018f: 	nop # Size: 1
.Ltmp256:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp263:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp261 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp253:
    000001c8: 	movq	%r12, %rsi
    000001cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 466
    000001d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ec: 	jne	.Ltmp262 # Offset: 492
.Ltmp258:
    000001f2: 	movq	-0x8(%rdx), %rax
    000001f6: 	addq	$0x200, %rax
    000001fc: 	jmp	.Ltmp262 # Offset: 508
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp257:
    00000208: 	testq	%r12, %r12
    0000020b: 	je	.Ltmp261 # Offset: 523
    00000211: 	jmp	.Ltmp263 # Offset: 529
.Ltmp259:
    00000213: 	callq	__stack_chk_fail@PLT # Offset: 531
.Ltmp255:
    00000218: 	leaq	DATAat0x1c158(%rip), %rdi
    0000021f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 543
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIt21test_struct_arrayListItEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIj21test_struct_arrayListIjEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x44c0
  Size        : 0x224
  MaxSize     : 0x230
  Offset      : 0x44c0
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIj21test_struct_arrayListIjEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movq	0x28(%rbx), %rax
    00000039: 	movq	(%rax,%r13,8), %rdx
    0000003d: 	movq	0x20(%rbx), %rax
    00000041: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000048: 	movq	(%rax,%rdx,8), %rdx
    0000004c: 	movq	0x18(%rbx), %rax
    00000050: 	movq	(%rax,%rdx,8), %rdx
    00000054: 	movq	0x10(%rbx), %rax
    00000058: 	movq	(%rax,%rdx,8), %rdx
    0000005c: 	movq	0x8(%rbx), %rax
    00000060: 	movq	(%rax,%rdx,8), %rdx
    00000064: 	movq	(%rbx), %rax
    00000067: 	xorl	%ebx, %ebx
    00000069: 	imull	(%rax,%rdx,4), %ebp
    0000006d: 	movl	iterations(%rip), %eax
    00000073: 	testl	%eax, %eax
    00000075: 	jle	.Ltmp264 # Offset: 117
.Ltmp273:
    00000077: 	imull	$0x1f40, init_value(%rip), %eax
    00000081: 	cmpl	%eax, %ebp
    00000083: 	jne	.Ltmp265 # Offset: 131
.Ltmp264:
    00000089: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000090: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000097: 	subq	$0x20, %rax
    0000009b: 	cmpq	%rax, %rbx
    0000009e: 	je	.Ltmp266 # Offset: 158
    000000a4: 	leaq	0x10(%rbx), %rdi
    000000a8: 	movq	%rdi, (%rbx)
    000000ab: 	movq	(%r12), %rbp
    000000af: 	movq	0x8(%r12), %r12
    000000b4: 	movq	%rbp, %rax
    000000b7: 	addq	%r12, %rax
    000000ba: 	je	.Ltmp267 # Offset: 186
    000000bc: 	testq	%rbp, %rbp
    000000bf: 	je	.Ltmp268 # Offset: 191
.Ltmp267:
    000000c5: 	movq	%r12, (%rsp)
    000000c9: 	cmpq	$0xf, %r12
    000000cd: 	ja	.Ltmp269 # Offset: 205
    000000d3: 	cmpq	$0x1, %r12
    000000d7: 	jne	.Ltmp270 # Offset: 215
    000000dd: 	movzbl	(%rbp), %eax
    000000e1: 	movb	%al, 0x10(%rbx)
.Ltmp274:
    000000e4: 	movq	%r12, 0x8(%rbx)
    000000e8: 	movb	$0x0, (%rdi,%r12)
    000000ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fb: 	addq	$0x20, %rax
    000000ff: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000106: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010d: 	je	.Ltmp271 # Offset: 269
.Ltmp275:
    00000113: 	movq	-0x20(%rax), %rbp
    00000117: 	callq	clock@PLT # Offset: 279
    0000011c: 	movq	%rax, end_time(%rip)
    00000123: 	movq	0x8(%rsp), %rdx
    00000128: 	subq	%fs:0x28, %rdx
    00000131: 	jne	.Ltmp272 # Offset: 305
    00000137: 	subq	start_time(%rip), %rax
    0000013e: 	pxor	%xmm0, %xmm0
    00000142: 	movq	%rbp, %rdi
    00000145: 	cvtsi2sd	%rax, %xmm0
    0000014a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000152: 	addq	$0x18, %rsp
    00000156: 	popq	%rbx
    00000157: 	popq	%rbp
    00000158: 	popq	%r12
    0000015a: 	popq	%r13
    0000015c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 348
    00000161: 	nopl	(%rax) # Size: 7
.Ltmp265:
    00000168: 	movq	(%r12), %rdx
    0000016c: 	xorl	%eax, %eax
    0000016e: 	movq	%r13, %rsi
    00000171: 	movl	$0x1, %edi
    00000176: 	addl	$0x1, %ebx
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebx, iterations(%rip)
    00000184: 	jg	.Ltmp273 # Offset: 388
    0000018a: 	jmp	.Ltmp264 # Offset: 394
    0000018f: 	nop # Size: 1
.Ltmp269:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp276:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp274 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp266:
    000001c8: 	movq	%r12, %rsi
    000001cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 466
    000001d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ec: 	jne	.Ltmp275 # Offset: 492
.Ltmp271:
    000001f2: 	movq	-0x8(%rdx), %rax
    000001f6: 	addq	$0x200, %rax
    000001fc: 	jmp	.Ltmp275 # Offset: 508
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp270:
    00000208: 	testq	%r12, %r12
    0000020b: 	je	.Ltmp274 # Offset: 523
    00000211: 	jmp	.Ltmp276 # Offset: 529
.Ltmp272:
    00000213: 	callq	__stack_chk_fail@PLT # Offset: 531
.Ltmp268:
    00000218: 	leaq	DATAat0x1c158(%rip), %rdi
    0000021f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 543
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIj21test_struct_arrayListIjEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIm21test_struct_arrayListImEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x46f0
  Size        : 0x234
  MaxSize     : 0x240
  Offset      : 0x46f0
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIm21test_struct_arrayListImEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rcx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movslq	%edx, %rbx
    00000016: 	subq	$0x18, %rsp
    0000001a: 	movq	%fs:0x28, %rax
    00000023: 	movq	%rax, 0x8(%rsp)
    00000028: 	xorl	%eax, %eax
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	movq	0x28(%r12), %rax
    0000003b: 	movq	(%rax,%r13,8), %rdx
    0000003f: 	movq	0x20(%r12), %rax
    00000044: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000004b: 	movq	(%rax,%rdx,8), %rdx
    0000004f: 	movq	0x18(%r12), %rax
    00000054: 	movq	(%rax,%rdx,8), %rdx
    00000058: 	movq	0x10(%r12), %rax
    0000005d: 	movq	(%rax,%rdx,8), %rdx
    00000061: 	movq	0x8(%r12), %rax
    00000066: 	movq	(%rax,%rdx,8), %rdx
    0000006a: 	movq	(%r12), %rax
    0000006e: 	xorl	%r12d, %r12d
    00000071: 	imulq	(%rax,%rdx,8), %rbx
    00000076: 	movl	iterations(%rip), %eax
    0000007c: 	testl	%eax, %eax
    0000007e: 	jle	.Ltmp277 # Offset: 126
.Ltmp286:
    00000080: 	movslq	init_value(%rip), %rax
    00000087: 	imulq	$0x1f40, %rax, %rax
    0000008e: 	cmpq	%rax, %rbx
    00000091: 	jne	.Ltmp278 # Offset: 145
.Ltmp277:
    00000097: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a5: 	subq	$0x20, %rax
    000000a9: 	cmpq	%rax, %rbx
    000000ac: 	je	.Ltmp279 # Offset: 172
    000000b2: 	leaq	0x10(%rbx), %rdi
    000000b6: 	movq	0x8(%rbp), %r12
    000000ba: 	movq	%rdi, (%rbx)
    000000bd: 	movq	(%rbp), %r13
    000000c1: 	movq	%r13, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp280 # Offset: 199
    000000c9: 	testq	%r13, %r13
    000000cc: 	je	.Ltmp281 # Offset: 204
.Ltmp280:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp282 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp283 # Offset: 228
    000000ea: 	movzbl	(%r13), %eax
    000000ef: 	movb	%al, 0x10(%rbx)
.Ltmp287:
    000000f2: 	movq	%r12, 0x8(%rbx)
    000000f6: 	movb	$0x0, (%rdi,%r12)
    000000fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000102: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000109: 	addq	$0x20, %rax
    0000010d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000114: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011b: 	je	.Ltmp284 # Offset: 283
.Ltmp288:
    00000121: 	movq	-0x20(%rax), %rbp
    00000125: 	callq	clock@PLT # Offset: 293
    0000012a: 	movq	%rax, end_time(%rip)
    00000131: 	movq	0x8(%rsp), %rdx
    00000136: 	subq	%fs:0x28, %rdx
    0000013f: 	jne	.Ltmp285 # Offset: 319
    00000145: 	subq	start_time(%rip), %rax
    0000014c: 	pxor	%xmm0, %xmm0
    00000150: 	movq	%rbp, %rdi
    00000153: 	cvtsi2sd	%rax, %xmm0
    00000158: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000160: 	addq	$0x18, %rsp
    00000164: 	popq	%rbx
    00000165: 	popq	%rbp
    00000166: 	popq	%r12
    00000168: 	popq	%r13
    0000016a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 362
    0000016f: 	nop # Size: 1
.Ltmp278:
    00000170: 	movq	(%rbp), %rdx
    00000174: 	xorl	%eax, %eax
    00000176: 	movq	%r13, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	addl	$0x1, %r12d
    00000182: 	callq	__printf_chk@PLT # Offset: 386
    00000187: 	cmpl	%r12d, iterations(%rip)
    0000018e: 	jg	.Ltmp286 # Offset: 398
    00000194: 	jmp	.Ltmp277 # Offset: 404
    00000199: 	nopl	(%rax) # Size: 7
.Ltmp282:
    000001a0: 	movq	%rbx, %rdi
    000001a3: 	movq	%rsp, %rsi
    000001a6: 	xorl	%edx, %edx
    000001a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 424
    000001ad: 	movq	%rax, (%rbx)
    000001b0: 	movq	%rax, %rdi
    000001b3: 	movq	(%rsp), %rax
    000001b7: 	movq	%rax, 0x10(%rbx)
.Ltmp289:
    000001bb: 	movq	%r12, %rdx
    000001be: 	movq	%r13, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	(%rsp), %r12
    000001ca: 	movq	(%rbx), %rdi
    000001cd: 	jmp	.Ltmp287 # Offset: 461
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp279:
    000001d8: 	movq	%rbp, %rsi
    000001db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 482
    000001e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fc: 	jne	.Ltmp288 # Offset: 508
.Ltmp284:
    00000202: 	movq	-0x8(%rdx), %rax
    00000206: 	addq	$0x200, %rax
    0000020c: 	jmp	.Ltmp288 # Offset: 524
    00000211: 	nopl	(%rax) # Size: 7
.Ltmp283:
    00000218: 	testq	%r12, %r12
    0000021b: 	je	.Ltmp287 # Offset: 539
    00000221: 	jmp	.Ltmp289 # Offset: 545
.Ltmp285:
    00000223: 	callq	__stack_chk_fail@PLT # Offset: 547
.Ltmp281:
    00000228: 	leaq	DATAat0x1c158(%rip), %rdi
    0000022f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 559
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIm21test_struct_arrayListImEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIi21test_struct_arrayListIiEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x4930
  Size        : 0x224
  MaxSize     : 0x230
  Offset      : 0x4930
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIi21test_struct_arrayListIiEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rcx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edx, %ebp
    00000011: 	pushq	%rbx
    00000012: 	movq	%rdi, %rbx
    00000015: 	subq	$0x18, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movq	0x28(%rbx), %rax
    00000039: 	movq	(%rax,%r13,8), %rdx
    0000003d: 	movq	0x20(%rbx), %rax
    00000041: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000048: 	movq	(%rax,%rdx,8), %rdx
    0000004c: 	movq	0x18(%rbx), %rax
    00000050: 	movq	(%rax,%rdx,8), %rdx
    00000054: 	movq	0x10(%rbx), %rax
    00000058: 	movq	(%rax,%rdx,8), %rdx
    0000005c: 	movq	0x8(%rbx), %rax
    00000060: 	movq	(%rax,%rdx,8), %rdx
    00000064: 	movq	(%rbx), %rax
    00000067: 	xorl	%ebx, %ebx
    00000069: 	imull	(%rax,%rdx,4), %ebp
    0000006d: 	movl	iterations(%rip), %eax
    00000073: 	testl	%eax, %eax
    00000075: 	jle	.Ltmp290 # Offset: 117
.Ltmp299:
    00000077: 	imull	$0x1f40, init_value(%rip), %eax
    00000081: 	cmpl	%eax, %ebp
    00000083: 	jne	.Ltmp291 # Offset: 131
.Ltmp290:
    00000089: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000090: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000097: 	subq	$0x20, %rax
    0000009b: 	cmpq	%rax, %rbx
    0000009e: 	je	.Ltmp292 # Offset: 158
    000000a4: 	leaq	0x10(%rbx), %rdi
    000000a8: 	movq	%rdi, (%rbx)
    000000ab: 	movq	(%r12), %rbp
    000000af: 	movq	0x8(%r12), %r12
    000000b4: 	movq	%rbp, %rax
    000000b7: 	addq	%r12, %rax
    000000ba: 	je	.Ltmp293 # Offset: 186
    000000bc: 	testq	%rbp, %rbp
    000000bf: 	je	.Ltmp294 # Offset: 191
.Ltmp293:
    000000c5: 	movq	%r12, (%rsp)
    000000c9: 	cmpq	$0xf, %r12
    000000cd: 	ja	.Ltmp295 # Offset: 205
    000000d3: 	cmpq	$0x1, %r12
    000000d7: 	jne	.Ltmp296 # Offset: 215
    000000dd: 	movzbl	(%rbp), %eax
    000000e1: 	movb	%al, 0x10(%rbx)
.Ltmp300:
    000000e4: 	movq	%r12, 0x8(%rbx)
    000000e8: 	movb	$0x0, (%rdi,%r12)
    000000ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fb: 	addq	$0x20, %rax
    000000ff: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000106: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010d: 	je	.Ltmp297 # Offset: 269
.Ltmp301:
    00000113: 	movq	-0x20(%rax), %rbp
    00000117: 	callq	clock@PLT # Offset: 279
    0000011c: 	movq	%rax, end_time(%rip)
    00000123: 	movq	0x8(%rsp), %rdx
    00000128: 	subq	%fs:0x28, %rdx
    00000131: 	jne	.Ltmp298 # Offset: 305
    00000137: 	subq	start_time(%rip), %rax
    0000013e: 	pxor	%xmm0, %xmm0
    00000142: 	movq	%rbp, %rdi
    00000145: 	cvtsi2sd	%rax, %xmm0
    0000014a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000152: 	addq	$0x18, %rsp
    00000156: 	popq	%rbx
    00000157: 	popq	%rbp
    00000158: 	popq	%r12
    0000015a: 	popq	%r13
    0000015c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 348
    00000161: 	nopl	(%rax) # Size: 7
.Ltmp291:
    00000168: 	movq	(%r12), %rdx
    0000016c: 	xorl	%eax, %eax
    0000016e: 	movq	%r13, %rsi
    00000171: 	movl	$0x1, %edi
    00000176: 	addl	$0x1, %ebx
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	iterations(%rip), %ebx
    00000184: 	jl	.Ltmp299 # Offset: 388
    0000018a: 	jmp	.Ltmp290 # Offset: 394
    0000018f: 	nop # Size: 1
.Ltmp295:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp302:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp300 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp292:
    000001c8: 	movq	%r12, %rsi
    000001cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 466
    000001d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ec: 	jne	.Ltmp301 # Offset: 492
.Ltmp297:
    000001f2: 	movq	-0x8(%rdx), %rax
    000001f6: 	addq	$0x200, %rax
    000001fc: 	jmp	.Ltmp301 # Offset: 508
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp296:
    00000208: 	testq	%r12, %r12
    0000020b: 	je	.Ltmp300 # Offset: 523
    00000211: 	jmp	.Ltmp302 # Offset: 529
.Ltmp298:
    00000213: 	callq	__stack_chk_fail@PLT # Offset: 531
.Ltmp294:
    00000218: 	leaq	DATAat0x1c158(%rip), %rdi
    0000021f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 543
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIi21test_struct_arrayListIiEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z31test_struct_arrayList_deref_optIl21test_struct_arrayListIlEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 58
  State       : disassembled
  Address     : 0x4b60
  Size        : 0x234
  MaxSize     : 0x240
  Offset      : 0x4b60
  Section     : .text
  Orc Section : .local.text._Z31test_struct_arrayList_deref_optIl21test_struct_arrayListIlEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rsi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rcx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movslq	%edx, %rbx
    00000016: 	subq	$0x18, %rsp
    0000001a: 	movq	%fs:0x28, %rax
    00000023: 	movq	%rax, 0x8(%rsp)
    00000028: 	xorl	%eax, %eax
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	movq	0x28(%r12), %rax
    0000003b: 	movq	(%rax,%r13,8), %rdx
    0000003f: 	movq	0x20(%r12), %rax
    00000044: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000004b: 	movq	(%rax,%rdx,8), %rdx
    0000004f: 	movq	0x18(%r12), %rax
    00000054: 	movq	(%rax,%rdx,8), %rdx
    00000058: 	movq	0x10(%r12), %rax
    0000005d: 	movq	(%rax,%rdx,8), %rdx
    00000061: 	movq	0x8(%r12), %rax
    00000066: 	movq	(%rax,%rdx,8), %rdx
    0000006a: 	movq	(%r12), %rax
    0000006e: 	xorl	%r12d, %r12d
    00000071: 	imulq	(%rax,%rdx,8), %rbx
    00000076: 	movl	iterations(%rip), %eax
    0000007c: 	testl	%eax, %eax
    0000007e: 	jle	.Ltmp303 # Offset: 126
.Ltmp312:
    00000080: 	movslq	init_value(%rip), %rax
    00000087: 	imulq	$0x1f40, %rax, %rax
    0000008e: 	cmpq	%rax, %rbx
    00000091: 	jne	.Ltmp304 # Offset: 145
.Ltmp303:
    00000097: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a5: 	subq	$0x20, %rax
    000000a9: 	cmpq	%rax, %rbx
    000000ac: 	je	.Ltmp305 # Offset: 172
    000000b2: 	leaq	0x10(%rbx), %rdi
    000000b6: 	movq	0x8(%rbp), %r12
    000000ba: 	movq	%rdi, (%rbx)
    000000bd: 	movq	(%rbp), %r13
    000000c1: 	movq	%r13, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp306 # Offset: 199
    000000c9: 	testq	%r13, %r13
    000000cc: 	je	.Ltmp307 # Offset: 204
.Ltmp306:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp308 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp309 # Offset: 228
    000000ea: 	movzbl	(%r13), %eax
    000000ef: 	movb	%al, 0x10(%rbx)
.Ltmp313:
    000000f2: 	movq	%r12, 0x8(%rbx)
    000000f6: 	movb	$0x0, (%rdi,%r12)
    000000fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000102: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000109: 	addq	$0x20, %rax
    0000010d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000114: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011b: 	je	.Ltmp310 # Offset: 283
.Ltmp314:
    00000121: 	movq	-0x20(%rax), %rbp
    00000125: 	callq	clock@PLT # Offset: 293
    0000012a: 	movq	%rax, end_time(%rip)
    00000131: 	movq	0x8(%rsp), %rdx
    00000136: 	subq	%fs:0x28, %rdx
    0000013f: 	jne	.Ltmp311 # Offset: 319
    00000145: 	subq	start_time(%rip), %rax
    0000014c: 	pxor	%xmm0, %xmm0
    00000150: 	movq	%rbp, %rdi
    00000153: 	cvtsi2sd	%rax, %xmm0
    00000158: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000160: 	addq	$0x18, %rsp
    00000164: 	popq	%rbx
    00000165: 	popq	%rbp
    00000166: 	popq	%r12
    00000168: 	popq	%r13
    0000016a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 362
    0000016f: 	nop # Size: 1
.Ltmp304:
    00000170: 	movq	(%rbp), %rdx
    00000174: 	xorl	%eax, %eax
    00000176: 	movq	%r13, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	addl	$0x1, %r12d
    00000182: 	callq	__printf_chk@PLT # Offset: 386
    00000187: 	cmpl	%r12d, iterations(%rip)
    0000018e: 	jg	.Ltmp312 # Offset: 398
    00000194: 	jmp	.Ltmp303 # Offset: 404
    00000199: 	nopl	(%rax) # Size: 7
.Ltmp308:
    000001a0: 	movq	%rbx, %rdi
    000001a3: 	movq	%rsp, %rsi
    000001a6: 	xorl	%edx, %edx
    000001a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 424
    000001ad: 	movq	%rax, (%rbx)
    000001b0: 	movq	%rax, %rdi
    000001b3: 	movq	(%rsp), %rax
    000001b7: 	movq	%rax, 0x10(%rbx)
.Ltmp315:
    000001bb: 	movq	%r12, %rdx
    000001be: 	movq	%r13, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	(%rsp), %r12
    000001ca: 	movq	(%rbx), %rdi
    000001cd: 	jmp	.Ltmp313 # Offset: 461
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp305:
    000001d8: 	movq	%rbp, %rsi
    000001db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 482
    000001e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fc: 	jne	.Ltmp314 # Offset: 508
.Ltmp310:
    00000202: 	movq	-0x8(%rdx), %rax
    00000206: 	addq	$0x200, %rax
    0000020c: 	jmp	.Ltmp314 # Offset: 524
    00000211: 	nopl	(%rax) # Size: 7
.Ltmp309:
    00000218: 	testq	%r12, %r12
    0000021b: 	je	.Ltmp313 # Offset: 539
    00000221: 	jmp	.Ltmp315 # Offset: 545
.Ltmp311:
    00000223: 	callq	__stack_chk_fail@PLT # Offset: 547
.Ltmp307:
    00000228: 	leaq	DATAat0x1c158(%rip), %rdi
    0000022f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 559
DWARF CFI Instructions:
    <empty>
End of Function "_Z31test_struct_arrayList_deref_optIl21test_struct_arrayListIlEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeItEvT_" after disassembly {
  Number      : 59
  State       : disassembled
  Address     : 0x4da0
  Size        : 0x2250
  MaxSize     : 0x2250
  Offset      : 0x4da0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeItEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x4000(%rsp), %r11
.Ltmp316:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp316 # Offset: 37
    00000027: 	subq	$0x1b8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm6
    0000003e: 	movq	%fs:0x28, %rax
    00000047: 	movq	%rax, 0x41a8(%rsp)
    0000004f: 	xorl	%eax, %eax
    00000051: 	movl	%edi, %ebp
    00000053: 	leaq	0x140(%rsp), %rax
    0000005b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000062: 	movq	%rax, %xmm0
    00000067: 	leaq	0x100(%rsp), %rax
    0000006f: 	movq	$0x8, 0x98(%rsp)
    0000007b: 	leaq	0x320(%rsp), %r12
    00000083: 	movq	%rax, %xmm3
    00000088: 	leaq	0x230(%rsp), %rax
    00000090: 	movb	$0x0, 0xa8(%rsp)
    00000098: 	leaq	0x41a0(%rsp), %rbx
    000000a0: 	movq	%rax, %xmm2
    000000a5: 	leaq	0xa0(%rsp), %rax
    000000ad: 	punpcklqdq	%xmm0, %xmm3
    000000b1: 	movaps	%xmm5, 0x70(%rsp)
    000000b6: 	movq	%rax, 0x28(%rsp)
    000000bb: 	punpcklqdq	%xmm0, %xmm2
    000000bf: 	movq	%rax, 0x90(%rsp)
    000000c7: 	movabsq	$0x745f3631746e6975, %rax
    000000d1: 	movq	%rax, 0xa0(%rsp)
    000000d9: 	leaq	0x70(%rsp), %rax
    000000de: 	movq	%rax, %rsi
    000000e1: 	movq	%rax, 0x30(%rsp)
    000000e6: 	movaps	%xmm3, 0x10(%rsp)
    000000eb: 	movaps	%xmm2, (%rsp)
    000000ef: 	movaps	%xmm6, 0x80(%rsp)
    000000f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 247
    000000fc: 	movl	init_value(%rip), %esi
    00000102: 	movdqa	0x10(%rsp), %xmm3
    00000108: 	movdqa	(%rsp), %xmm2
    0000010d: 	movl	%esi, 0x20(%rsp)
    00000111: 	movl	%esi, %eax
    00000113: 	movzwl	%si, %esi
    00000116: 	shll	$0x10, %eax
    00000119: 	orl	%eax, %esi
    0000011b: 	movq	%r12, %rax
    0000011e: 	movd	0x20(%rsp), %xmm0
    00000124: 	punpcklwd	%xmm0, %xmm0
    00000128: 	pshufd	$0x0, %xmm0, %xmm0
    0000012d: 	movdqa	%xmm0, %xmm1
    00000131: 	nopl	(%rax) # Size: 7
.Ltmp317:
    00000138: 	movaps	%xmm1, (%rax)
    0000013b: 	addq	$0x10, %rax
    0000013f: 	cmpq	%rax, %rbx
    00000142: 	jne	.Ltmp317 # Offset: 322
    00000144: 	leaq	0x50(%rsp), %rax
    00000149: 	movzwl	%bp, %r8d
    0000014d: 	leal	0x2(%rbp), %edi
    00000150: 	movl	0x20(%rsp), %r9d
    00000155: 	movq	%rax, 0x78(%rsp)
    0000015a: 	leaq	0x60(%rsp), %rax
    0000015f: 	movabsq	$-0x7777777777777777, %rcx
    00000169: 	leaq	0x90(%rsp), %r15
    00000171: 	movq	%rax, 0x58(%rsp)
    00000176: 	leaq	0x46(%rsp), %rax
    0000017b: 	movd	%r9d, %xmm4
    00000180: 	movq	%rax, 0x68(%rsp)
    00000185: 	movq	%r8, %rax
    00000188: 	mulq	%rcx
    0000018b: 	movl	%esi, 0x138(%rsp)
    00000192: 	movzwl	%di, %esi
    00000195: 	movaps	%xmm0, 0x100(%rsp)
    0000019d: 	movaps	%xmm0, 0x110(%rsp)
    000001a5: 	movq	%rdx, %rax
    000001a8: 	andq	$-0x10, %rdx
    000001ac: 	movaps	%xmm0, 0x120(%rsp)
    000001b4: 	pshuflw	$0x0, %xmm4, %xmm0
    000001b9: 	shrq	$0x4, %rax
    000001bd: 	movw	%r9w, 0x46(%rsp)
    000001c3: 	movq	%xmm0, 0x130(%rsp)
    000001cc: 	subq	%rax, %rdx
    000001cf: 	leaq	(%rdx,%rdx), %rax
    000001d3: 	subq	%rax, %r8
    000001d6: 	movq	%rsi, %rax
    000001d9: 	mulq	%rcx
    000001dc: 	movq	%r8, 0x10(%rsp)
    000001e1: 	movq	%rdx, %rax
    000001e4: 	andq	$-0x10, %rdx
    000001e8: 	shrq	$0x4, %rax
    000001ec: 	subq	%rax, %rdx
    000001ef: 	movq	%rsi, %rax
    000001f2: 	addq	%rdx, %rdx
    000001f5: 	subq	%rdx, %rax
    000001f8: 	xorl	%edx, %edx
    000001fa: 	movq	%rax, %xmm0
    000001ff: 	leal	(%rbp,%rbp), %eax
    00000203: 	divw	%di
    00000206: 	punpcklqdq	%xmm0, %xmm0
    0000020a: 	movaps	%xmm0, 0x140(%rsp)
    00000212: 	movaps	%xmm0, 0x150(%rsp)
    0000021a: 	movaps	%xmm0, 0x160(%rsp)
    00000222: 	movaps	%xmm0, 0x170(%rsp)
    0000022a: 	movaps	%xmm0, 0x180(%rsp)
    00000232: 	movaps	%xmm0, 0x190(%rsp)
    0000023a: 	movaps	%xmm0, 0x1a0(%rsp)
    00000242: 	movaps	%xmm0, 0x1b0(%rsp)
    0000024a: 	movaps	%xmm0, 0x1c0(%rsp)
    00000252: 	movaps	%xmm0, 0x1d0(%rsp)
    0000025a: 	movaps	%xmm0, 0x1e0(%rsp)
    00000262: 	movaps	%xmm0, 0x1f0(%rsp)
    0000026a: 	movaps	%xmm0, 0x200(%rsp)
    00000272: 	addl	%ebp, %eax
    00000274: 	movaps	%xmm0, 0x210(%rsp)
    0000027c: 	leaq	0xb0(%rsp), %rbp
    00000284: 	movzwl	%ax, %esi
    00000287: 	movaps	%xmm0, 0x220(%rsp)
    0000028f: 	movq	%rbp, %rdi
    00000292: 	movq	%rsi, %rax
    00000295: 	mulq	%rcx
    00000298: 	movq	%rdx, %rax
    0000029b: 	andq	$-0x10, %rdx
    0000029f: 	shrq	$0x4, %rax
    000002a3: 	subq	%rax, %rdx
    000002a6: 	movq	%rsi, %rax
    000002a9: 	movq	%r15, %rsi
    000002ac: 	addq	%rdx, %rdx
    000002af: 	subq	%rdx, %rax
    000002b2: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002b9: 	movq	%rax, %xmm0
    000002be: 	punpcklqdq	%xmm0, %xmm0
    000002c2: 	movaps	%xmm0, 0x230(%rsp)
    000002ca: 	movaps	%xmm0, 0x240(%rsp)
    000002d2: 	movaps	%xmm0, 0x250(%rsp)
    000002da: 	movaps	%xmm0, 0x260(%rsp)
    000002e2: 	movaps	%xmm0, 0x270(%rsp)
    000002ea: 	movaps	%xmm0, 0x280(%rsp)
    000002f2: 	movaps	%xmm0, 0x290(%rsp)
    000002fa: 	movaps	%xmm0, 0x2a0(%rsp)
    00000302: 	movaps	%xmm0, 0x2b0(%rsp)
    0000030a: 	movaps	%xmm0, 0x2c0(%rsp)
    00000312: 	movaps	%xmm0, 0x2d0(%rsp)
    0000031a: 	movaps	%xmm0, 0x2e0(%rsp)
    00000322: 	movaps	%xmm0, 0x2f0(%rsp)
    0000032a: 	movaps	%xmm0, 0x300(%rsp)
    00000332: 	movaps	%xmm0, 0x310(%rsp)
    0000033a: 	movaps	%xmm3, 0xd0(%rsp)
    00000342: 	movaps	%xmm2, 0xe0(%rsp)
    0000034a: 	movaps	%xmm2, 0xf0(%rsp)
    00000352: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 850
    00000357: 	callq	clock@PLT # Offset: 855
    0000035c: 	movl	iterations(%rip), %ecx
    00000362: 	xorl	%r13d, %r13d
    00000365: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000036c: 	movq	%rax, start_time(%rip)
    00000373: 	testl	%ecx, %ecx
    00000375: 	jle	.Ltmp318 # Offset: 885
    0000037b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp321:
    00000380: 	movq	%r12, %rax
    00000383: 	pxor	%xmm0, %xmm0
    00000387: 	nopw	(%rax,%rax) # Size: 9
.Ltmp319:
    00000390: 	paddw	(%rax), %xmm0
    00000394: 	addq	$0x10, %rax
    00000398: 	cmpq	%rax, %rbx
    0000039b: 	jne	.Ltmp319 # Offset: 923
    0000039d: 	imulw	$0x1f40, init_value(%rip), %dx
    000003a6: 	movdqa	%xmm0, %xmm1
    000003aa: 	psrldq	$0x8, %xmm1
    000003af: 	paddw	%xmm1, %xmm0
    000003b3: 	movdqa	%xmm0, %xmm1
    000003b7: 	psrldq	$0x4, %xmm1
    000003bc: 	paddw	%xmm1, %xmm0
    000003c0: 	movdqa	%xmm0, %xmm1
    000003c4: 	psrldq	$0x2, %xmm1
    000003c9: 	paddw	%xmm1, %xmm0
    000003cd: 	pextrw	$0x0, %xmm0, %eax
    000003d2: 	cmpw	%ax, %dx
    000003d5: 	je	.Ltmp320 # Offset: 981
    000003d7: 	movq	0xb0(%rsp), %rdx
    000003df: 	movq	%r14, %rsi
    000003e2: 	movl	$0x1, %edi
    000003e7: 	xorl	%eax, %eax
    000003e9: 	callq	__printf_chk@PLT # Offset: 1001
    000003ee: 	movl	iterations(%rip), %ecx
.Ltmp320:
    000003f4: 	addl	$0x1, %r13d
    000003f8: 	cmpl	%ecx, %r13d
    000003fb: 	jl	.Ltmp321 # Offset: 1019
.Ltmp318:
    000003fd: 	movq	%rbp, %rsi
    00000400: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000407: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1031
    0000040c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000413: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000041a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000421: 	je	.Ltmp322 # Offset: 1057
.Ltmp472:
    00000427: 	movq	-0x20(%rax), %r13
    0000042b: 	callq	clock@PLT # Offset: 1067
    00000430: 	pxor	%xmm0, %xmm0
    00000434: 	movq	%rax, end_time(%rip)
    0000043b: 	movq	%r13, %rdi
    0000043e: 	subq	start_time(%rip), %rax
    00000445: 	cvtsi2sd	%rax, %xmm0
    0000044a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000452: 	callq	_Z13record_resultdPKc # Offset: 1106
    00000457: 	movq	0xb0(%rsp), %rdi
    0000045f: 	leaq	0xc0(%rsp), %rax
    00000467: 	movq	%rax, (%rsp)
    0000046b: 	cmpq	%rax, %rdi
    0000046e: 	je	.Ltmp323 # Offset: 1134
    00000470: 	movq	0xc0(%rsp), %rax
    00000478: 	leaq	0x1(%rax), %rsi
    0000047c: 	callq	_ZdlPvm@PLT # Offset: 1148
.Ltmp323:
    00000481: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000488: 	movq	%r15, %rsi
    0000048b: 	movq	%rbp, %rdi
    0000048e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1166
    00000493: 	callq	clock@PLT # Offset: 1171
    00000498: 	movl	iterations(%rip), %ecx
    0000049e: 	xorl	%r13d, %r13d
    000004a1: 	leaq	DATAat0x1c1c8(%rip), %r14
    000004a8: 	movq	%rax, start_time(%rip)
    000004af: 	testl	%ecx, %ecx
    000004b1: 	jle	.Ltmp324 # Offset: 1201
    000004b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp327:
    000004b8: 	movq	%r12, %rax
    000004bb: 	pxor	%xmm0, %xmm0
    000004bf: 	nop # Size: 1
.Ltmp325:
    000004c0: 	paddw	(%rax), %xmm0
    000004c4: 	addq	$0x10, %rax
    000004c8: 	cmpq	%rax, %rbx
    000004cb: 	jne	.Ltmp325 # Offset: 1227
    000004cd: 	imulw	$0x1f40, init_value(%rip), %dx
    000004d6: 	movdqa	%xmm0, %xmm1
    000004da: 	psrldq	$0x8, %xmm1
    000004df: 	paddw	%xmm1, %xmm0
    000004e3: 	movdqa	%xmm0, %xmm1
    000004e7: 	psrldq	$0x4, %xmm1
    000004ec: 	paddw	%xmm1, %xmm0
    000004f0: 	movdqa	%xmm0, %xmm1
    000004f4: 	psrldq	$0x2, %xmm1
    000004f9: 	paddw	%xmm1, %xmm0
    000004fd: 	pextrw	$0x0, %xmm0, %eax
    00000502: 	cmpw	%ax, %dx
    00000505: 	je	.Ltmp326 # Offset: 1285
    00000507: 	movq	0xb0(%rsp), %rdx
    0000050f: 	movq	%r14, %rsi
    00000512: 	movl	$0x1, %edi
    00000517: 	xorl	%eax, %eax
    00000519: 	callq	__printf_chk@PLT # Offset: 1305
    0000051e: 	movl	iterations(%rip), %ecx
.Ltmp326:
    00000524: 	addl	$0x1, %r13d
    00000528: 	cmpl	%ecx, %r13d
    0000052b: 	jl	.Ltmp327 # Offset: 1323
.Ltmp324:
    0000052d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000534: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000053b: 	subq	$0x20, %rax
    0000053f: 	cmpq	%rax, %r14
    00000542: 	je	.Ltmp328 # Offset: 1346
    00000548: 	leaq	0x10(%r14), %rdi
    0000054c: 	movq	0xb8(%rsp), %r13
    00000554: 	movq	%rdi, (%r14)
    00000557: 	movq	0xb0(%rsp), %rax
    0000055f: 	movq	%rax, %rsi
    00000562: 	movq	%rax, 0x38(%rsp)
    00000567: 	addq	%r13, %rsi
    0000056a: 	je	.Ltmp329 # Offset: 1386
    0000056c: 	testq	%rax, %rax
    0000056f: 	je	.Ltmp330 # Offset: 1391
.Ltmp329:
    00000575: 	movq	%r13, 0x48(%rsp)
    0000057a: 	cmpq	$0xf, %r13
    0000057e: 	ja	.Ltmp331 # Offset: 1406
    00000584: 	cmpq	$0x1, %r13
    00000588: 	jne	.Ltmp332 # Offset: 1416
    0000058e: 	movq	0x38(%rsp), %rax
    00000593: 	movzbl	(%rax), %eax
    00000596: 	movb	%al, 0x10(%r14)
.Ltmp458:
    0000059a: 	movq	%r13, 0x8(%r14)
    0000059e: 	movb	$0x0, (%rdi,%r13)
    000005a3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005b1: 	addq	$0x20, %rax
    000005b5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000005bc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000005c3: 	je	.Ltmp333 # Offset: 1475
.Ltmp478:
    000005c9: 	movq	-0x20(%rax), %r13
    000005cd: 	callq	clock@PLT # Offset: 1485
    000005d2: 	pxor	%xmm0, %xmm0
    000005d6: 	movq	%rax, end_time(%rip)
    000005dd: 	movq	%r13, %rdi
    000005e0: 	subq	start_time(%rip), %rax
    000005e7: 	cvtsi2sd	%rax, %xmm0
    000005ec: 	divsd	DATAat0x1c370(%rip), %xmm0
    000005f4: 	callq	_Z13record_resultdPKc # Offset: 1524
    000005f9: 	movq	0xb0(%rsp), %rdi
    00000601: 	cmpq	(%rsp), %rdi
    00000605: 	je	.Ltmp334 # Offset: 1541
    00000607: 	movq	0xc0(%rsp), %rax
    0000060f: 	leaq	0x1(%rax), %rsi
    00000613: 	callq	_ZdlPvm@PLT # Offset: 1555
.Ltmp334:
    00000618: 	leaq	DATAat0x1c208(%rip), %rdx
    0000061f: 	movq	%r15, %rsi
    00000622: 	movq	%rbp, %rdi
    00000625: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1573
    0000062a: 	callq	clock@PLT # Offset: 1578
    0000062f: 	movl	iterations(%rip), %ecx
    00000635: 	xorl	%r13d, %r13d
    00000638: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000063f: 	movq	%rax, start_time(%rip)
    00000646: 	testl	%ecx, %ecx
    00000648: 	jle	.Ltmp335 # Offset: 1608
    0000064e: 	nop # Size: 2
.Ltmp338:
    00000650: 	movq	%r12, %rax
    00000653: 	pxor	%xmm0, %xmm0
    00000657: 	nopw	(%rax,%rax) # Size: 9
.Ltmp336:
    00000660: 	paddw	(%rax), %xmm0
    00000664: 	addq	$0x10, %rax
    00000668: 	cmpq	%rax, %rbx
    0000066b: 	jne	.Ltmp336 # Offset: 1643
    0000066d: 	imulw	$0x1f40, init_value(%rip), %dx
    00000676: 	movdqa	%xmm0, %xmm1
    0000067a: 	psrldq	$0x8, %xmm1
    0000067f: 	paddw	%xmm1, %xmm0
    00000683: 	movdqa	%xmm0, %xmm1
    00000687: 	psrldq	$0x4, %xmm1
    0000068c: 	paddw	%xmm1, %xmm0
    00000690: 	movdqa	%xmm0, %xmm1
    00000694: 	psrldq	$0x2, %xmm1
    00000699: 	paddw	%xmm1, %xmm0
    0000069d: 	pextrw	$0x0, %xmm0, %eax
    000006a2: 	cmpw	%ax, %dx
    000006a5: 	je	.Ltmp337 # Offset: 1701
    000006a7: 	movq	0xb0(%rsp), %rdx
    000006af: 	movq	%r14, %rsi
    000006b2: 	movl	$0x1, %edi
    000006b7: 	xorl	%eax, %eax
    000006b9: 	callq	__printf_chk@PLT # Offset: 1721
    000006be: 	movl	iterations(%rip), %ecx
.Ltmp337:
    000006c4: 	addl	$0x1, %r13d
    000006c8: 	cmpl	%ecx, %r13d
    000006cb: 	jl	.Ltmp338 # Offset: 1739
.Ltmp335:
    000006cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000006d4: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000006db: 	subq	$0x20, %rax
    000006df: 	cmpq	%rax, %r14
    000006e2: 	je	.Ltmp339 # Offset: 1762
    000006e8: 	leaq	0x10(%r14), %rdi
    000006ec: 	movq	0xb8(%rsp), %r13
    000006f4: 	movq	%rdi, (%r14)
    000006f7: 	movq	0xb0(%rsp), %rax
    000006ff: 	movq	%rax, %rsi
    00000702: 	movq	%rax, 0x38(%rsp)
    00000707: 	addq	%r13, %rsi
    0000070a: 	je	.Ltmp340 # Offset: 1802
    0000070c: 	testq	%rax, %rax
    0000070f: 	je	.Ltmp341 # Offset: 1807
.Ltmp340:
    00000715: 	movq	%r13, 0x48(%rsp)
    0000071a: 	cmpq	$0xf, %r13
    0000071e: 	ja	.Ltmp342 # Offset: 1822
    00000724: 	cmpq	$0x1, %r13
    00000728: 	jne	.Ltmp343 # Offset: 1832
    0000072e: 	movq	0x38(%rsp), %rax
    00000733: 	movzbl	(%rax), %eax
    00000736: 	movb	%al, 0x10(%r14)
.Ltmp499:
    0000073a: 	movq	%r13, 0x8(%r14)
    0000073e: 	movb	$0x0, (%rdi,%r13)
    00000743: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000074a: 	addq	$0x20, %rax
    0000074e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp489:
    00000755: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000075c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000763: 	je	.Ltmp344 # Offset: 1891
.Ltmp488:
    00000769: 	movq	-0x20(%rax), %r13
    0000076d: 	callq	clock@PLT # Offset: 1901
    00000772: 	pxor	%xmm0, %xmm0
    00000776: 	movq	%rax, end_time(%rip)
    0000077d: 	movq	%r13, %rdi
    00000780: 	subq	start_time(%rip), %rax
    00000787: 	cvtsi2sd	%rax, %xmm0
    0000078c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000794: 	callq	_Z13record_resultdPKc # Offset: 1940
    00000799: 	movq	0xb0(%rsp), %rdi
    000007a1: 	cmpq	(%rsp), %rdi
    000007a5: 	je	.Ltmp345 # Offset: 1957
    000007a7: 	movq	0xc0(%rsp), %rax
    000007af: 	leaq	0x1(%rax), %rsi
    000007b3: 	callq	_ZdlPvm@PLT # Offset: 1971
.Ltmp345:
    000007b8: 	leaq	DATAat0x1c21d(%rip), %rdx
    000007bf: 	movq	%r15, %rsi
    000007c2: 	movq	%rbp, %rdi
    000007c5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1989
    000007ca: 	callq	clock@PLT # Offset: 1994
    000007cf: 	movl	iterations(%rip), %ecx
    000007d5: 	xorl	%r13d, %r13d
    000007d8: 	leaq	DATAat0x1c1c8(%rip), %r14
    000007df: 	movq	%rax, start_time(%rip)
    000007e6: 	testl	%ecx, %ecx
    000007e8: 	jle	.Ltmp346 # Offset: 2024
    000007ee: 	nop # Size: 2
.Ltmp349:
    000007f0: 	movq	%r12, %rax
    000007f3: 	pxor	%xmm0, %xmm0
    000007f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp347:
    00000800: 	paddw	(%rax), %xmm0
    00000804: 	addq	$0x10, %rax
    00000808: 	cmpq	%rax, %rbx
    0000080b: 	jne	.Ltmp347 # Offset: 2059
    0000080d: 	imulw	$0x1f40, init_value(%rip), %dx
    00000816: 	movdqa	%xmm0, %xmm1
    0000081a: 	psrldq	$0x8, %xmm1
    0000081f: 	paddw	%xmm1, %xmm0
    00000823: 	movdqa	%xmm0, %xmm1
    00000827: 	psrldq	$0x4, %xmm1
    0000082c: 	paddw	%xmm1, %xmm0
    00000830: 	movdqa	%xmm0, %xmm1
    00000834: 	psrldq	$0x2, %xmm1
    00000839: 	paddw	%xmm1, %xmm0
    0000083d: 	pextrw	$0x0, %xmm0, %eax
    00000842: 	cmpw	%ax, %dx
    00000845: 	je	.Ltmp348 # Offset: 2117
    00000847: 	movq	0xb0(%rsp), %rdx
    0000084f: 	movq	%r14, %rsi
    00000852: 	movl	$0x1, %edi
    00000857: 	xorl	%eax, %eax
    00000859: 	callq	__printf_chk@PLT # Offset: 2137
    0000085e: 	movl	iterations(%rip), %ecx
.Ltmp348:
    00000864: 	addl	$0x1, %r13d
    00000868: 	cmpl	%ecx, %r13d
    0000086b: 	jl	.Ltmp349 # Offset: 2155
.Ltmp346:
    0000086d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000874: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000087b: 	subq	$0x20, %rax
    0000087f: 	cmpq	%rax, %r14
    00000882: 	je	.Ltmp350 # Offset: 2178
    00000888: 	leaq	0x10(%r14), %rdi
    0000088c: 	movq	0xb8(%rsp), %r13
    00000894: 	movq	%rdi, (%r14)
    00000897: 	movq	0xb0(%rsp), %rax
    0000089f: 	movq	%rax, %rsi
    000008a2: 	movq	%rax, 0x38(%rsp)
    000008a7: 	addq	%r13, %rsi
    000008aa: 	je	.Ltmp351 # Offset: 2218
    000008ac: 	testq	%rax, %rax
    000008af: 	je	.Ltmp352 # Offset: 2223
.Ltmp351:
    000008b5: 	movq	%r13, 0x48(%rsp)
    000008ba: 	cmpq	$0xf, %r13
    000008be: 	ja	.Ltmp353 # Offset: 2238
    000008c4: 	cmpq	$0x1, %r13
    000008c8: 	jne	.Ltmp354 # Offset: 2248
    000008ce: 	movq	0x38(%rsp), %rax
    000008d3: 	movzbl	(%rax), %eax
    000008d6: 	movb	%al, 0x10(%r14)
.Ltmp497:
    000008da: 	movq	%r13, 0x8(%r14)
    000008de: 	movb	$0x0, (%rdi,%r13)
    000008e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008ea: 	addq	$0x20, %rax
    000008ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp487:
    000008f5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000903: 	je	.Ltmp355 # Offset: 2307
.Ltmp481:
    00000909: 	movq	-0x20(%rax), %r13
    0000090d: 	callq	clock@PLT # Offset: 2317
    00000912: 	pxor	%xmm0, %xmm0
    00000916: 	movq	%rax, end_time(%rip)
    0000091d: 	movq	%r13, %rdi
    00000920: 	subq	start_time(%rip), %rax
    00000927: 	cvtsi2sd	%rax, %xmm0
    0000092c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000934: 	callq	_Z13record_resultdPKc # Offset: 2356
    00000939: 	movq	0xb0(%rsp), %rdi
    00000941: 	cmpq	(%rsp), %rdi
    00000945: 	je	.Ltmp356 # Offset: 2373
    00000947: 	movq	0xc0(%rsp), %rax
    0000094f: 	leaq	0x1(%rax), %rsi
    00000953: 	callq	_ZdlPvm@PLT # Offset: 2387
.Ltmp356:
    00000958: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000095f: 	movq	%r15, %rsi
    00000962: 	movq	%rbp, %rdi
    00000965: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2405
    0000096a: 	callq	clock@PLT # Offset: 2410
    0000096f: 	movl	iterations(%rip), %ecx
    00000975: 	xorl	%r13d, %r13d
    00000978: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000097f: 	movq	%rax, start_time(%rip)
    00000986: 	testl	%ecx, %ecx
    00000988: 	jle	.Ltmp357 # Offset: 2440
    0000098e: 	nop # Size: 2
.Ltmp360:
    00000990: 	movq	%r12, %rax
    00000993: 	pxor	%xmm0, %xmm0
    00000997: 	nopw	(%rax,%rax) # Size: 9
.Ltmp358:
    000009a0: 	paddw	(%rax), %xmm0
    000009a4: 	addq	$0x10, %rax
    000009a8: 	cmpq	%rbx, %rax
    000009ab: 	jne	.Ltmp358 # Offset: 2475
    000009ad: 	imulw	$0x1f40, init_value(%rip), %dx
    000009b6: 	movdqa	%xmm0, %xmm1
    000009ba: 	psrldq	$0x8, %xmm1
    000009bf: 	paddw	%xmm1, %xmm0
    000009c3: 	movdqa	%xmm0, %xmm1
    000009c7: 	psrldq	$0x4, %xmm1
    000009cc: 	paddw	%xmm1, %xmm0
    000009d0: 	movdqa	%xmm0, %xmm1
    000009d4: 	psrldq	$0x2, %xmm1
    000009d9: 	paddw	%xmm1, %xmm0
    000009dd: 	pextrw	$0x0, %xmm0, %eax
    000009e2: 	cmpw	%ax, %dx
    000009e5: 	je	.Ltmp359 # Offset: 2533
    000009e7: 	movq	0xb0(%rsp), %rdx
    000009ef: 	movq	%r14, %rsi
    000009f2: 	movl	$0x1, %edi
    000009f7: 	xorl	%eax, %eax
    000009f9: 	callq	__printf_chk@PLT # Offset: 2553
    000009fe: 	movl	iterations(%rip), %ecx
.Ltmp359:
    00000a04: 	addl	$0x1, %r13d
    00000a08: 	cmpl	%ecx, %r13d
    00000a0b: 	jl	.Ltmp360 # Offset: 2571
.Ltmp357:
    00000a0d: 	movq	%rbp, %rsi
    00000a10: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a17: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2583
    00000a1c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a23: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a31: 	je	.Ltmp361 # Offset: 2609
.Ltmp480:
    00000a37: 	movq	-0x20(%rax), %r13
    00000a3b: 	callq	clock@PLT # Offset: 2619
    00000a40: 	pxor	%xmm0, %xmm0
    00000a44: 	movq	%rax, end_time(%rip)
    00000a4b: 	movq	%r13, %rdi
    00000a4e: 	subq	start_time(%rip), %rax
    00000a55: 	cvtsi2sd	%rax, %xmm0
    00000a5a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000a62: 	callq	_Z13record_resultdPKc # Offset: 2658
    00000a67: 	movq	0xb0(%rsp), %rdi
    00000a6f: 	cmpq	(%rsp), %rdi
    00000a73: 	je	.Ltmp362 # Offset: 2675
    00000a75: 	movq	0xc0(%rsp), %rax
    00000a7d: 	leaq	0x1(%rax), %rsi
    00000a81: 	callq	_ZdlPvm@PLT # Offset: 2689
.Ltmp362:
    00000a86: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000a8d: 	movq	%r15, %rsi
    00000a90: 	movq	%rbp, %rdi
    00000a93: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2707
    00000a98: 	callq	clock@PLT # Offset: 2712
    00000a9d: 	movl	iterations(%rip), %ecx
    00000aa3: 	xorl	%r13d, %r13d
    00000aa6: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000aad: 	movq	%rax, start_time(%rip)
    00000ab4: 	testl	%ecx, %ecx
    00000ab6: 	jle	.Ltmp363 # Offset: 2742
    00000abc: 	nopl	(%rax) # Size: 4
.Ltmp366:
    00000ac0: 	movq	%r12, %rax
    00000ac3: 	pxor	%xmm0, %xmm0
    00000ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp364:
    00000ad0: 	paddw	(%rax), %xmm0
    00000ad4: 	addq	$0x10, %rax
    00000ad8: 	cmpq	%rax, %rbx
    00000adb: 	jne	.Ltmp364 # Offset: 2779
    00000add: 	imulw	$0x1f40, init_value(%rip), %dx
    00000ae6: 	movdqa	%xmm0, %xmm1
    00000aea: 	psrldq	$0x8, %xmm1
    00000aef: 	paddw	%xmm1, %xmm0
    00000af3: 	movdqa	%xmm0, %xmm1
    00000af7: 	psrldq	$0x4, %xmm1
    00000afc: 	paddw	%xmm1, %xmm0
    00000b00: 	movdqa	%xmm0, %xmm1
    00000b04: 	psrldq	$0x2, %xmm1
    00000b09: 	paddw	%xmm1, %xmm0
    00000b0d: 	pextrw	$0x0, %xmm0, %eax
    00000b12: 	cmpw	%ax, %dx
    00000b15: 	je	.Ltmp365 # Offset: 2837
    00000b17: 	movq	0xb0(%rsp), %rdx
    00000b1f: 	movq	%r14, %rsi
    00000b22: 	movl	$0x1, %edi
    00000b27: 	xorl	%eax, %eax
    00000b29: 	callq	__printf_chk@PLT # Offset: 2857
    00000b2e: 	movl	iterations(%rip), %ecx
.Ltmp365:
    00000b34: 	addl	$0x1, %r13d
    00000b38: 	cmpl	%ecx, %r13d
    00000b3b: 	jl	.Ltmp366 # Offset: 2875
.Ltmp363:
    00000b3d: 	movq	%rbp, %rsi
    00000b40: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b47: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2887
    00000b4c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b53: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b5a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b61: 	je	.Ltmp367 # Offset: 2913
.Ltmp479:
    00000b67: 	movq	-0x20(%rax), %r12
    00000b6b: 	callq	clock@PLT # Offset: 2923
    00000b70: 	pxor	%xmm0, %xmm0
    00000b74: 	movq	%rax, end_time(%rip)
    00000b7b: 	movq	%r12, %rdi
    00000b7e: 	subq	start_time(%rip), %rax
    00000b85: 	cvtsi2sd	%rax, %xmm0
    00000b8a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b92: 	callq	_Z13record_resultdPKc # Offset: 2962
    00000b97: 	movq	0xb0(%rsp), %rdi
    00000b9f: 	cmpq	(%rsp), %rdi
    00000ba3: 	je	.Ltmp368 # Offset: 2979
    00000ba5: 	movq	0xc0(%rsp), %rax
    00000bad: 	leaq	0x1(%rax), %rsi
    00000bb1: 	callq	_ZdlPvm@PLT # Offset: 2993
.Ltmp368:
    00000bb6: 	leaq	DATAat0x1c265(%rip), %rdx
    00000bbd: 	movq	%r15, %rsi
    00000bc0: 	movq	%rbp, %rdi
    00000bc3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3011
    00000bc8: 	callq	clock@PLT # Offset: 3016
    00000bcd: 	xorl	%r12d, %r12d
    00000bd0: 	imulw	$0x1f40, 0x20(%rsp), %bx
    00000bd7: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000bde: 	movq	%rax, start_time(%rip)
    00000be5: 	movl	iterations(%rip), %eax
    00000beb: 	testl	%eax, %eax
    00000bed: 	jle	.Ltmp369 # Offset: 3053
.Ltmp459:
    00000bef: 	imulw	$0x1f40, init_value(%rip), %ax
    00000bf8: 	cmpw	%ax, %bx
    00000bfb: 	jne	.Ltmp370 # Offset: 3067
.Ltmp369:
    00000c01: 	movq	%rbp, %rsi
    00000c04: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c0b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3083
    00000c10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c17: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c25: 	je	.Ltmp371 # Offset: 3109
.Ltmp475:
    00000c2b: 	movq	-0x20(%rax), %r12
    00000c2f: 	callq	clock@PLT # Offset: 3119
    00000c34: 	pxor	%xmm0, %xmm0
    00000c38: 	movq	%rax, end_time(%rip)
    00000c3f: 	movq	%r12, %rdi
    00000c42: 	subq	start_time(%rip), %rax
    00000c49: 	cvtsi2sd	%rax, %xmm0
    00000c4e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000c56: 	callq	_Z13record_resultdPKc # Offset: 3158
    00000c5b: 	movq	0xb0(%rsp), %rdi
    00000c63: 	cmpq	(%rsp), %rdi
    00000c67: 	je	.Ltmp372 # Offset: 3175
    00000c69: 	movq	0xc0(%rsp), %rax
    00000c71: 	leaq	0x1(%rax), %rsi
    00000c75: 	callq	_ZdlPvm@PLT # Offset: 3189
.Ltmp372:
    00000c7a: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000c81: 	movq	%r15, %rsi
    00000c84: 	movq	%rbp, %rdi
    00000c87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3207
    00000c8c: 	callq	clock@PLT # Offset: 3212
    00000c91: 	movl	iterations(%rip), %r14d
    00000c98: 	xorl	%r12d, %r12d
    00000c9b: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000ca2: 	movq	%rax, start_time(%rip)
    00000ca9: 	testl	%r14d, %r14d
    00000cac: 	jle	.Ltmp373 # Offset: 3244
    00000cae: 	nop # Size: 2
.Ltmp460:
    00000cb0: 	imulw	$0x1f40, init_value(%rip), %ax
    00000cb9: 	cmpw	%ax, %bx
    00000cbc: 	jne	.Ltmp374 # Offset: 3260
.Ltmp373:
    00000cc2: 	movq	%rbp, %rsi
    00000cc5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ccc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3276
    00000cd1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cd8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cdf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ce6: 	je	.Ltmp375 # Offset: 3302
.Ltmp476:
    00000cec: 	movq	-0x20(%rax), %r12
    00000cf0: 	callq	clock@PLT # Offset: 3312
    00000cf5: 	pxor	%xmm0, %xmm0
    00000cf9: 	movq	%rax, end_time(%rip)
    00000d00: 	movq	%r12, %rdi
    00000d03: 	subq	start_time(%rip), %rax
    00000d0a: 	cvtsi2sd	%rax, %xmm0
    00000d0f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d17: 	callq	_Z13record_resultdPKc # Offset: 3351
    00000d1c: 	movq	0xb0(%rsp), %rdi
    00000d24: 	cmpq	(%rsp), %rdi
    00000d28: 	je	.Ltmp376 # Offset: 3368
    00000d2a: 	movq	0xc0(%rsp), %rax
    00000d32: 	leaq	0x1(%rax), %rsi
    00000d36: 	callq	_ZdlPvm@PLT # Offset: 3382
.Ltmp376:
    00000d3b: 	leaq	DATAat0x1c289(%rip), %rdx
    00000d42: 	movq	%r15, %rsi
    00000d45: 	movq	%rbp, %rdi
    00000d48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3400
    00000d4d: 	callq	clock@PLT # Offset: 3405
    00000d52: 	movl	iterations(%rip), %r11d
    00000d59: 	xorl	%r12d, %r12d
    00000d5c: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000d63: 	movq	%rax, start_time(%rip)
    00000d6a: 	testl	%r11d, %r11d
    00000d6d: 	jle	.Ltmp377 # Offset: 3437
    00000d6f: 	nop # Size: 1
.Ltmp461:
    00000d70: 	imulw	$0x1f40, init_value(%rip), %ax
    00000d79: 	cmpw	%ax, %bx
    00000d7c: 	jne	.Ltmp378 # Offset: 3452
.Ltmp377:
    00000d82: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d89: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000d90: 	subq	$0x20, %rax
    00000d94: 	cmpq	%rax, %r13
    00000d97: 	je	.Ltmp379 # Offset: 3479
    00000d9d: 	leaq	0x10(%r13), %rdi
    00000da1: 	movq	0xb8(%rsp), %r12
    00000da9: 	movq	%rdi, (%r13)
    00000dad: 	movq	0xb0(%rsp), %r14
    00000db5: 	movq	%r14, %rax
    00000db8: 	addq	%r12, %rax
    00000dbb: 	je	.Ltmp380 # Offset: 3515
    00000dbd: 	testq	%r14, %r14
    00000dc0: 	je	.Ltmp381 # Offset: 3520
.Ltmp380:
    00000dc6: 	movq	%r12, 0x48(%rsp)
    00000dcb: 	cmpq	$0xf, %r12
    00000dcf: 	ja	.Ltmp382 # Offset: 3535
    00000dd5: 	cmpq	$0x1, %r12
    00000dd9: 	jne	.Ltmp383 # Offset: 3545
    00000ddf: 	movzbl	(%r14), %eax
    00000de3: 	movb	%al, 0x10(%r13)
.Ltmp503:
    00000de7: 	movq	%r12, 0x8(%r13)
    00000deb: 	movb	$0x0, (%rdi,%r12)
    00000df0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000df7: 	addq	$0x20, %rax
    00000dfb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp474:
    00000e02: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e09: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e10: 	je	.Ltmp384 # Offset: 3600
.Ltmp473:
    00000e16: 	movq	-0x20(%rax), %r12
    00000e1a: 	callq	clock@PLT # Offset: 3610
    00000e1f: 	pxor	%xmm0, %xmm0
    00000e23: 	movq	%rax, end_time(%rip)
    00000e2a: 	movq	%r12, %rdi
    00000e2d: 	subq	start_time(%rip), %rax
    00000e34: 	cvtsi2sd	%rax, %xmm0
    00000e39: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e41: 	callq	_Z13record_resultdPKc # Offset: 3649
    00000e46: 	movq	0xb0(%rsp), %rdi
    00000e4e: 	cmpq	(%rsp), %rdi
    00000e52: 	je	.Ltmp385 # Offset: 3666
    00000e54: 	movq	0xc0(%rsp), %rax
    00000e5c: 	leaq	0x1(%rax), %rsi
    00000e60: 	callq	_ZdlPvm@PLT # Offset: 3680
.Ltmp385:
    00000e65: 	leaq	DATAat0x1c298(%rip), %rdx
    00000e6c: 	movq	%r15, %rsi
    00000e6f: 	movq	%rbp, %rdi
    00000e72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3698
    00000e77: 	movq	0x30(%rsp), %rdi
    00000e7c: 	movq	%rbp, %rdx
    00000e7f: 	movl	$0x1f40, %esi
    00000e84: 	callq	_Z22test_struct4_deref_optIt12test_struct1ItEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3716
    00000e89: 	movq	0xb0(%rsp), %rdi
    00000e91: 	cmpq	(%rsp), %rdi
    00000e95: 	je	.Ltmp386 # Offset: 3733
    00000e97: 	movq	0xc0(%rsp), %rax
    00000e9f: 	leaq	0x1(%rax), %rsi
    00000ea3: 	callq	_ZdlPvm@PLT # Offset: 3747
.Ltmp386:
    00000ea8: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000eaf: 	movq	%r15, %rsi
    00000eb2: 	movq	%rbp, %rdi
    00000eb5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3765
    00000eba: 	callq	clock@PLT # Offset: 3770
    00000ebf: 	movl	iterations(%rip), %r10d
    00000ec6: 	xorl	%r12d, %r12d
    00000ec9: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000ed0: 	movq	%rax, start_time(%rip)
    00000ed7: 	testl	%r10d, %r10d
    00000eda: 	jle	.Ltmp387 # Offset: 3802
    00000edc: 	nopl	(%rax) # Size: 4
.Ltmp462:
    00000ee0: 	imulw	$0x1f40, init_value(%rip), %ax
    00000ee9: 	cmpw	%ax, %bx
    00000eec: 	jne	.Ltmp388 # Offset: 3820
.Ltmp387:
    00000ef2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ef9: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000f00: 	subq	$0x20, %rax
    00000f04: 	cmpq	%rax, %r13
    00000f07: 	je	.Ltmp389 # Offset: 3847
    00000f0d: 	leaq	0x10(%r13), %rdi
    00000f11: 	movq	0xb8(%rsp), %r12
    00000f19: 	movq	%rdi, (%r13)
    00000f1d: 	movq	0xb0(%rsp), %r14
    00000f25: 	movq	%r14, %rax
    00000f28: 	addq	%r12, %rax
    00000f2b: 	je	.Ltmp390 # Offset: 3883
    00000f2d: 	testq	%r14, %r14
    00000f30: 	je	.Ltmp391 # Offset: 3888
.Ltmp390:
    00000f36: 	movq	%r12, 0x48(%rsp)
    00000f3b: 	cmpq	$0xf, %r12
    00000f3f: 	ja	.Ltmp392 # Offset: 3903
    00000f45: 	cmpq	$0x1, %r12
    00000f49: 	jne	.Ltmp393 # Offset: 3913
    00000f4f: 	movzbl	(%r14), %eax
    00000f53: 	movb	%al, 0x10(%r13)
.Ltmp506:
    00000f57: 	movq	%r12, 0x8(%r13)
    00000f5b: 	movb	$0x0, (%rdi,%r12)
    00000f60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f67: 	addq	$0x20, %rax
    00000f6b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp490:
    00000f72: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f79: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f80: 	je	.Ltmp394 # Offset: 3968
.Ltmp483:
    00000f86: 	movq	-0x20(%rax), %r12
    00000f8a: 	callq	clock@PLT # Offset: 3978
    00000f8f: 	pxor	%xmm0, %xmm0
    00000f93: 	movq	%rax, end_time(%rip)
    00000f9a: 	movq	%r12, %rdi
    00000f9d: 	subq	start_time(%rip), %rax
    00000fa4: 	cvtsi2sd	%rax, %xmm0
    00000fa9: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000fb1: 	callq	_Z13record_resultdPKc # Offset: 4017
    00000fb6: 	movq	0xb0(%rsp), %rdi
    00000fbe: 	cmpq	(%rsp), %rdi
    00000fc2: 	je	.Ltmp395 # Offset: 4034
    00000fc4: 	movq	0xc0(%rsp), %rax
    00000fcc: 	leaq	0x1(%rax), %rsi
    00000fd0: 	callq	_ZdlPvm@PLT # Offset: 4048
.Ltmp395:
    00000fd5: 	leaq	DATAat0x1c2be(%rip), %rdx
    00000fdc: 	movq	%r15, %rsi
    00000fdf: 	movq	%rbp, %rdi
    00000fe2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4066
    00000fe7: 	callq	clock@PLT # Offset: 4071
    00000fec: 	movl	iterations(%rip), %r9d
    00000ff3: 	xorl	%r12d, %r12d
    00000ff6: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000ffd: 	movq	%rax, start_time(%rip)
    00001004: 	testl	%r9d, %r9d
    00001007: 	jle	.Ltmp396 # Offset: 4103
    00001009: 	nopl	(%rax) # Size: 7
.Ltmp469:
    00001010: 	imulw	$0x1f40, init_value(%rip), %ax
    00001019: 	cmpw	%ax, %bx
    0000101c: 	jne	.Ltmp397 # Offset: 4124
.Ltmp396:
    00001022: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001029: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001030: 	subq	$0x20, %rax
    00001034: 	cmpq	%rax, %rbx
    00001037: 	je	.Ltmp398 # Offset: 4151
    0000103d: 	leaq	0x10(%rbx), %rdi
    00001041: 	movq	0xb8(%rsp), %r12
    00001049: 	movq	%rdi, (%rbx)
    0000104c: 	movq	0xb0(%rsp), %r13
    00001054: 	movq	%r13, %rax
    00001057: 	addq	%r12, %rax
    0000105a: 	je	.Ltmp399 # Offset: 4186
    0000105c: 	testq	%r13, %r13
    0000105f: 	je	.Ltmp400 # Offset: 4191
.Ltmp399:
    00001065: 	movq	%r12, 0x48(%rsp)
    0000106a: 	cmpq	$0xf, %r12
    0000106e: 	ja	.Ltmp401 # Offset: 4206
    00001074: 	cmpq	$0x1, %r12
    00001078: 	jne	.Ltmp402 # Offset: 4216
    0000107e: 	movzbl	(%r13), %eax
    00001083: 	movb	%al, 0x10(%rbx)
.Ltmp505:
    00001086: 	movq	%r12, 0x8(%rbx)
    0000108a: 	movb	$0x0, (%rdi,%r12)
    0000108f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001096: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000109d: 	addq	$0x20, %rax
    000010a1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010a8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000010af: 	je	.Ltmp403 # Offset: 4271
.Ltmp484:
    000010b5: 	movq	-0x20(%rax), %r12
    000010b9: 	callq	clock@PLT # Offset: 4281
    000010be: 	pxor	%xmm0, %xmm0
    000010c2: 	movq	%rax, end_time(%rip)
    000010c9: 	movq	%r12, %rdi
    000010cc: 	subq	start_time(%rip), %rax
    000010d3: 	cvtsi2sd	%rax, %xmm0
    000010d8: 	divsd	DATAat0x1c370(%rip), %xmm0
    000010e0: 	callq	_Z13record_resultdPKc # Offset: 4320
    000010e5: 	movq	0xb0(%rsp), %rdi
    000010ed: 	cmpq	(%rsp), %rdi
    000010f1: 	je	.Ltmp404 # Offset: 4337
    000010f3: 	movq	0xc0(%rsp), %rax
    000010fb: 	leaq	0x1(%rax), %rsi
    000010ff: 	callq	_ZdlPvm@PLT # Offset: 4351
.Ltmp404:
    00001104: 	leaq	DATAat0x1c225(%rip), %rdx
    0000110b: 	movq	%r15, %rsi
    0000110e: 	movq	%rbp, %rdi
    00001111: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4369
    00001116: 	callq	clock@PLT # Offset: 4374
    0000111b: 	movl	iterations(%rip), %r8d
    00001122: 	xorl	%r12d, %r12d
    00001125: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000112c: 	movq	%rax, start_time(%rip)
    00001133: 	movq	0x10(%rsp), %rax
    00001138: 	leaq	(,%rax,8), %r14
    00001140: 	movq	0x230(%rsp,%r14), %rax
    00001148: 	movq	0x140(%rsp,%rax,8), %rax
    00001150: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %bx
    0000115a: 	testl	%r8d, %r8d
    0000115d: 	jle	.Ltmp405 # Offset: 4445
.Ltmp468:
    0000115f: 	imulw	$0x1f40, init_value(%rip), %ax
    00001168: 	cmpw	%ax, %bx
    0000116b: 	jne	.Ltmp406 # Offset: 4459
.Ltmp405:
    00001171: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001178: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000117f: 	subq	$0x20, %rax
    00001183: 	cmpq	%rax, %r13
    00001186: 	je	.Ltmp407 # Offset: 4486
    0000118c: 	leaq	0x10(%r13), %rdi
    00001190: 	movq	0xb8(%rsp), %r12
    00001198: 	movq	%rdi, (%r13)
    0000119c: 	movq	0xb0(%rsp), %rax
    000011a4: 	movq	%rax, %rsi
    000011a7: 	movq	%rax, 0x20(%rsp)
    000011ac: 	addq	%r12, %rsi
    000011af: 	je	.Ltmp408 # Offset: 4527
    000011b1: 	testq	%rax, %rax
    000011b4: 	je	.Ltmp409 # Offset: 4532
.Ltmp408:
    000011ba: 	movq	%r12, 0x48(%rsp)
    000011bf: 	cmpq	$0xf, %r12
    000011c3: 	ja	.Ltmp410 # Offset: 4547
    000011c9: 	cmpq	$0x1, %r12
    000011cd: 	jne	.Ltmp411 # Offset: 4557
    000011d3: 	movq	0x20(%rsp), %rax
    000011d8: 	movzbl	(%rax), %eax
    000011db: 	movb	%al, 0x10(%r13)
.Ltmp508:
    000011df: 	movq	%r12, 0x8(%r13)
    000011e3: 	movb	$0x0, (%rdi,%r12)
    000011e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f6: 	addq	$0x20, %rax
    000011fa: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001201: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001208: 	je	.Ltmp412 # Offset: 4616
.Ltmp482:
    0000120e: 	movq	-0x20(%rax), %r12
    00001212: 	callq	clock@PLT # Offset: 4626
    00001217: 	pxor	%xmm0, %xmm0
    0000121b: 	movq	%rax, end_time(%rip)
    00001222: 	movq	%r12, %rdi
    00001225: 	subq	start_time(%rip), %rax
    0000122c: 	cvtsi2sd	%rax, %xmm0
    00001231: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001239: 	callq	_Z13record_resultdPKc # Offset: 4665
    0000123e: 	movq	0xb0(%rsp), %rdi
    00001246: 	cmpq	(%rsp), %rdi
    0000124a: 	je	.Ltmp413 # Offset: 4682
    0000124c: 	movq	0xc0(%rsp), %rax
    00001254: 	leaq	0x1(%rax), %rsi
    00001258: 	callq	_ZdlPvm@PLT # Offset: 4696
.Ltmp413:
    0000125d: 	leaq	DATAat0x1c242(%rip), %rdx
    00001264: 	movq	%r15, %rsi
    00001267: 	movq	%rbp, %rdi
    0000126a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4714
    0000126f: 	callq	clock@PLT # Offset: 4719
    00001274: 	movl	iterations(%rip), %edi
    0000127a: 	xorl	%r12d, %r12d
    0000127d: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001284: 	movq	%rax, start_time(%rip)
    0000128b: 	testl	%edi, %edi
    0000128d: 	jle	.Ltmp414 # Offset: 4749
.Ltmp467:
    0000128f: 	imulw	$0x1f40, init_value(%rip), %ax
    00001298: 	cmpw	%ax, %bx
    0000129b: 	jne	.Ltmp415 # Offset: 4763
.Ltmp414:
    000012a1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012a8: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000012af: 	subq	$0x20, %rax
    000012b3: 	cmpq	%rax, %r13
    000012b6: 	je	.Ltmp416 # Offset: 4790
    000012bc: 	leaq	0x10(%r13), %rdi
    000012c0: 	movq	0xb8(%rsp), %r12
    000012c8: 	movq	%rdi, (%r13)
    000012cc: 	movq	0xb0(%rsp), %rax
    000012d4: 	movq	%rax, %rsi
    000012d7: 	movq	%rax, 0x20(%rsp)
    000012dc: 	addq	%r12, %rsi
    000012df: 	je	.Ltmp417 # Offset: 4831
    000012e1: 	testq	%rax, %rax
    000012e4: 	je	.Ltmp418 # Offset: 4836
.Ltmp417:
    000012ea: 	movq	%r12, 0x48(%rsp)
    000012ef: 	cmpq	$0xf, %r12
    000012f3: 	ja	.Ltmp419 # Offset: 4851
    000012f9: 	cmpq	$0x1, %r12
    000012fd: 	jne	.Ltmp420 # Offset: 4861
    00001303: 	movq	0x20(%rsp), %rax
    00001308: 	movzbl	(%rax), %eax
    0000130b: 	movb	%al, 0x10(%r13)
.Ltmp501:
    0000130f: 	movq	%r12, 0x8(%r13)
    00001313: 	movb	$0x0, (%rdi,%r12)
    00001318: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000131f: 	addq	$0x20, %rax
    00001323: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp486:
    0000132a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001331: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001338: 	je	.Ltmp421 # Offset: 4920
.Ltmp485:
    0000133e: 	movq	-0x20(%rax), %r12
    00001342: 	callq	clock@PLT # Offset: 4930
    00001347: 	pxor	%xmm0, %xmm0
    0000134b: 	movq	%rax, end_time(%rip)
    00001352: 	movq	%r12, %rdi
    00001355: 	subq	start_time(%rip), %rax
    0000135c: 	cvtsi2sd	%rax, %xmm0
    00001361: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001369: 	callq	_Z13record_resultdPKc # Offset: 4969
    0000136e: 	movq	0xb0(%rsp), %rdi
    00001376: 	cmpq	(%rsp), %rdi
    0000137a: 	je	.Ltmp422 # Offset: 4986
    0000137c: 	movq	0xc0(%rsp), %rax
    00001384: 	leaq	0x1(%rax), %rsi
    00001388: 	callq	_ZdlPvm@PLT # Offset: 5000
.Ltmp422:
    0000138d: 	leaq	DATAat0x1c257(%rip), %rdx
    00001394: 	movq	%r15, %rsi
    00001397: 	movq	%rbp, %rdi
    0000139a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5018
    0000139f: 	callq	clock@PLT # Offset: 5023
    000013a4: 	movl	iterations(%rip), %esi
    000013aa: 	xorl	%r12d, %r12d
    000013ad: 	leaq	DATAat0x1c1c8(%rip), %r13
    000013b4: 	movq	%rax, start_time(%rip)
    000013bb: 	testl	%esi, %esi
    000013bd: 	jle	.Ltmp423 # Offset: 5053
.Ltmp465:
    000013bf: 	imulw	$0x1f40, init_value(%rip), %ax
    000013c8: 	cmpw	%ax, %bx
    000013cb: 	jne	.Ltmp424 # Offset: 5067
.Ltmp423:
    000013d1: 	movq	%rbp, %rsi
    000013d4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013db: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5083
    000013e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013e7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013f5: 	je	.Ltmp425 # Offset: 5109
.Ltmp471:
    000013fb: 	movq	-0x20(%rax), %r12
    000013ff: 	callq	clock@PLT # Offset: 5119
    00001404: 	pxor	%xmm0, %xmm0
    00001408: 	movq	%rax, end_time(%rip)
    0000140f: 	movq	%r12, %rdi
    00001412: 	subq	start_time(%rip), %rax
    00001419: 	cvtsi2sd	%rax, %xmm0
    0000141e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001426: 	callq	_Z13record_resultdPKc # Offset: 5158
    0000142b: 	movq	0xb0(%rsp), %rdi
    00001433: 	cmpq	(%rsp), %rdi
    00001437: 	je	.Ltmp426 # Offset: 5175
    00001439: 	movq	0xc0(%rsp), %rax
    00001441: 	leaq	0x1(%rax), %rsi
    00001445: 	callq	_ZdlPvm@PLT # Offset: 5189
.Ltmp426:
    0000144a: 	leaq	DATAat0x1c338(%rip), %rdx
    00001451: 	movq	%r15, %rsi
    00001454: 	movq	%rbp, %rdi
    00001457: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5207
    0000145c: 	movq	0x10(%rsp), %rsi
    00001461: 	leaq	0xd0(%rsp), %rdi
    00001469: 	movq	%rbp, %rcx
    0000146c: 	movl	$0x1f40, %edx
    00001471: 	callq	_Z31test_struct_arrayList_deref_optIt21test_struct_arrayListItEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5233
    00001476: 	movq	0xb0(%rsp), %rdi
    0000147e: 	cmpq	(%rsp), %rdi
    00001482: 	je	.Ltmp427 # Offset: 5250
    00001484: 	movq	0xc0(%rsp), %rax
    0000148c: 	leaq	0x1(%rax), %rsi
    00001490: 	callq	_ZdlPvm@PLT # Offset: 5264
.Ltmp427:
    00001495: 	leaq	DATAat0x1c2ce(%rip), %rdx
    0000149c: 	movq	%r15, %rsi
    0000149f: 	movq	%rbp, %rdi
    000014a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5282
    000014a7: 	callq	clock@PLT # Offset: 5287
    000014ac: 	movl	iterations(%rip), %ecx
    000014b2: 	movq	%rax, start_time(%rip)
    000014b9: 	testl	%ecx, %ecx
    000014bb: 	jle	.Ltmp428 # Offset: 5307
    000014bd: 	movq	0x140(%rsp,%r14), %rax
    000014c5: 	xorl	%ebx, %ebx
    000014c7: 	leaq	DATAat0x1c1c8(%rip), %r13
    000014ce: 	movq	0x230(%rsp,%rax,8), %rax
    000014d6: 	movq	0x140(%rsp,%rax,8), %rax
    000014de: 	movq	0x230(%rsp,%rax,8), %rax
    000014e6: 	movq	0x140(%rsp,%rax,8), %rax
    000014ee: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %r12w
    000014f9: 	nopl	(%rax) # Size: 7
.Ltmp464:
    00001500: 	imulw	$0x1f40, init_value(%rip), %ax
    00001509: 	cmpw	%r12w, %ax
    0000150d: 	jne	.Ltmp429 # Offset: 5389
.Ltmp428:
    00001513: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000151a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001521: 	subq	$0x20, %rax
    00001525: 	cmpq	%rax, %rbx
    00001528: 	je	.Ltmp430 # Offset: 5416
    0000152e: 	leaq	0x10(%rbx), %rdi
    00001532: 	movq	0xb8(%rsp), %r12
    0000153a: 	movq	%rdi, (%rbx)
    0000153d: 	movq	0xb0(%rsp), %r13
    00001545: 	movq	%r13, %rax
    00001548: 	addq	%r12, %rax
    0000154b: 	je	.Ltmp431 # Offset: 5451
    0000154d: 	testq	%r13, %r13
    00001550: 	je	.Ltmp432 # Offset: 5456
.Ltmp431:
    00001556: 	movq	%r12, 0x48(%rsp)
    0000155b: 	cmpq	$0xf, %r12
    0000155f: 	ja	.Ltmp433 # Offset: 5471
    00001565: 	cmpq	$0x1, %r12
    00001569: 	jne	.Ltmp434 # Offset: 5481
    0000156f: 	movzbl	(%r13), %eax
    00001574: 	movb	%al, 0x10(%rbx)
.Ltmp510:
    00001577: 	movq	%r12, 0x8(%rbx)
    0000157b: 	movb	$0x0, (%rdi,%r12)
    00001580: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001587: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000158e: 	addq	$0x20, %rax
    00001592: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001599: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000015a0: 	je	.Ltmp435 # Offset: 5536
.Ltmp470:
    000015a6: 	movq	-0x20(%rax), %r12
    000015aa: 	callq	clock@PLT # Offset: 5546
    000015af: 	pxor	%xmm0, %xmm0
    000015b3: 	movq	%rax, end_time(%rip)
    000015ba: 	movq	%r12, %rdi
    000015bd: 	subq	start_time(%rip), %rax
    000015c4: 	cvtsi2sd	%rax, %xmm0
    000015c9: 	divsd	DATAat0x1c370(%rip), %xmm0
    000015d1: 	callq	_Z13record_resultdPKc # Offset: 5585
    000015d6: 	movq	0xb0(%rsp), %rdi
    000015de: 	cmpq	(%rsp), %rdi
    000015e2: 	je	.Ltmp436 # Offset: 5602
    000015e4: 	movq	0xc0(%rsp), %rax
    000015ec: 	leaq	0x1(%rax), %rsi
    000015f0: 	callq	_ZdlPvm@PLT # Offset: 5616
.Ltmp436:
    000015f5: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000015fc: 	movq	%r15, %rsi
    000015ff: 	movq	%rbp, %rdi
    00001602: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5634
    00001607: 	callq	clock@PLT # Offset: 5639
    0000160c: 	movl	iterations(%rip), %edx
    00001612: 	movq	%rax, start_time(%rip)
    00001619: 	testl	%edx, %edx
    0000161b: 	jle	.Ltmp437 # Offset: 5659
    0000161d: 	movq	0x140(%rsp,%r14), %rax
    00001625: 	xorl	%ebx, %ebx
    00001627: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000162e: 	movq	0x230(%rsp,%rax,8), %rax
    00001636: 	movq	0x140(%rsp,%rax,8), %rax
    0000163e: 	movq	0x230(%rsp,%rax,8), %rax
    00001646: 	movq	0x140(%rsp,%rax,8), %rax
    0000164e: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %r12w
    00001659: 	nopl	(%rax) # Size: 7
.Ltmp466:
    00001660: 	imulw	$0x1f40, init_value(%rip), %ax
    00001669: 	cmpw	%r12w, %ax
    0000166d: 	jne	.Ltmp438 # Offset: 5741
.Ltmp437:
    00001673: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000167a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001681: 	subq	$0x20, %rax
    00001685: 	cmpq	%rax, %rbx
    00001688: 	je	.Ltmp439 # Offset: 5768
    0000168e: 	leaq	0x10(%rbx), %rdi
    00001692: 	movq	0xb8(%rsp), %r12
    0000169a: 	movq	%rdi, (%rbx)
    0000169d: 	movq	0xb0(%rsp), %r13
    000016a5: 	movq	%r13, %rax
    000016a8: 	addq	%r12, %rax
    000016ab: 	je	.Ltmp440 # Offset: 5803
    000016ad: 	testq	%r13, %r13
    000016b0: 	je	.Ltmp441 # Offset: 5808
.Ltmp440:
    000016b6: 	movq	%r12, 0x48(%rsp)
    000016bb: 	cmpq	$0xf, %r12
    000016bf: 	ja	.Ltmp442 # Offset: 5823
    000016c5: 	cmpq	$0x1, %r12
    000016c9: 	jne	.Ltmp443 # Offset: 5833
    000016cf: 	movzbl	(%r13), %eax
    000016d4: 	movb	%al, 0x10(%rbx)
.Ltmp494:
    000016d7: 	movq	%r12, 0x8(%rbx)
    000016db: 	movb	$0x0, (%rdi,%r12)
    000016e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016e7: 	addq	$0x20, %rax
    000016eb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp493:
    000016f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001700: 	je	.Ltmp444 # Offset: 5888
.Ltmp492:
    00001706: 	movq	-0x20(%rax), %r12
    0000170a: 	callq	clock@PLT # Offset: 5898
    0000170f: 	pxor	%xmm0, %xmm0
    00001713: 	movq	%rax, end_time(%rip)
    0000171a: 	movq	%r12, %rdi
    0000171d: 	subq	start_time(%rip), %rax
    00001724: 	cvtsi2sd	%rax, %xmm0
    00001729: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001731: 	callq	_Z13record_resultdPKc # Offset: 5937
    00001736: 	movq	0xb0(%rsp), %rdi
    0000173e: 	cmpq	(%rsp), %rdi
    00001742: 	je	.Ltmp445 # Offset: 5954
    00001744: 	movq	0xc0(%rsp), %rax
    0000174c: 	leaq	0x1(%rax), %rsi
    00001750: 	callq	_ZdlPvm@PLT # Offset: 5968
.Ltmp445:
    00001755: 	leaq	DATAat0x1c301(%rip), %rdx
    0000175c: 	movq	%r15, %rsi
    0000175f: 	movq	%rbp, %rdi
    00001762: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5986
    00001767: 	callq	clock@PLT # Offset: 5991
    0000176c: 	movq	%rax, start_time(%rip)
    00001773: 	movl	iterations(%rip), %eax
    00001779: 	testl	%eax, %eax
    0000177b: 	jle	.Ltmp446 # Offset: 6011
    0000177d: 	movq	0x140(%rsp,%r14), %rax
    00001785: 	xorl	%ebx, %ebx
    00001787: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000178e: 	movq	0x230(%rsp,%rax,8), %rax
    00001796: 	movq	0x140(%rsp,%rax,8), %rax
    0000179e: 	movq	0x230(%rsp,%rax,8), %rax
    000017a6: 	movq	0x140(%rsp,%rax,8), %rax
    000017ae: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %r12w
    000017b9: 	nopl	(%rax) # Size: 7
.Ltmp463:
    000017c0: 	imulw	$0x1f40, init_value(%rip), %ax
    000017c9: 	cmpw	%r12w, %ax
    000017cd: 	jne	.Ltmp447 # Offset: 6093
.Ltmp446:
    000017d3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017da: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017e1: 	subq	$0x20, %rax
    000017e5: 	cmpq	%rax, %rbx
    000017e8: 	je	.Ltmp448 # Offset: 6120
    000017ee: 	leaq	0x10(%rbx), %rdi
    000017f2: 	movq	0xb8(%rsp), %r12
    000017fa: 	movq	%rdi, (%rbx)
    000017fd: 	movq	0xb0(%rsp), %r13
    00001805: 	movq	%r13, %rax
    00001808: 	addq	%r12, %rax
    0000180b: 	je	.Ltmp449 # Offset: 6155
    0000180d: 	testq	%r13, %r13
    00001810: 	je	.Ltmp450 # Offset: 6160
.Ltmp449:
    00001816: 	movq	%r12, 0x48(%rsp)
    0000181b: 	cmpq	$0xf, %r12
    0000181f: 	ja	.Ltmp451 # Offset: 6175
    00001825: 	cmpq	$0x1, %r12
    00001829: 	jne	.Ltmp452 # Offset: 6185
    0000182f: 	movzbl	(%r13), %eax
    00001834: 	movb	%al, 0x10(%rbx)
.Ltmp495:
    00001837: 	movq	%r12, 0x8(%rbx)
    0000183b: 	movb	$0x0, (%rdi,%r12)
    00001840: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001847: 	addq	$0x20, %rax
    0000184b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp491:
    00001852: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001859: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001860: 	je	.Ltmp453 # Offset: 6240
.Ltmp477:
    00001866: 	movq	-0x20(%rax), %r12
    0000186a: 	callq	clock@PLT # Offset: 6250
    0000186f: 	pxor	%xmm0, %xmm0
    00001873: 	movq	%rax, end_time(%rip)
    0000187a: 	movq	%r12, %rdi
    0000187d: 	subq	start_time(%rip), %rax
    00001884: 	cvtsi2sd	%rax, %xmm0
    00001889: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001891: 	callq	_Z13record_resultdPKc # Offset: 6289
    00001896: 	movq	0xb0(%rsp), %rdi
    0000189e: 	cmpq	(%rsp), %rdi
    000018a2: 	je	.Ltmp454 # Offset: 6306
    000018a4: 	movq	0xc0(%rsp), %rax
    000018ac: 	leaq	0x1(%rax), %rsi
    000018b0: 	callq	_ZdlPvm@PLT # Offset: 6320
.Ltmp454:
    000018b5: 	leaq	DATAat0x1c31b(%rip), %rdx
    000018bc: 	movq	%r15, %rsi
    000018bf: 	movq	%rbp, %rdi
    000018c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6338
    000018c7: 	movl	iterations(%rip), %edx
    000018cd: 	xorl	%r8d, %r8d
    000018d0: 	xorl	%ecx, %ecx
    000018d2: 	movl	$0x1f40, %esi
    000018d7: 	movq	0xb0(%rsp), %rdi
    000018df: 	callq	_Z9summarizePKciiii # Offset: 6367
    000018e4: 	movq	0xb0(%rsp), %rdi
    000018ec: 	cmpq	(%rsp), %rdi
    000018f0: 	je	.Ltmp455 # Offset: 6384
    000018f2: 	movq	0xc0(%rsp), %rax
    000018fa: 	leaq	0x1(%rax), %rsi
    000018fe: 	callq	_ZdlPvm@PLT # Offset: 6398
.Ltmp455:
    00001903: 	movq	0x90(%rsp), %rdi
    0000190b: 	cmpq	0x28(%rsp), %rdi
    00001910: 	je	.Ltmp456 # Offset: 6416
    00001912: 	movq	0xa0(%rsp), %rax
    0000191a: 	leaq	0x1(%rax), %rsi
    0000191e: 	callq	_ZdlPvm@PLT # Offset: 6430
.Ltmp456:
    00001923: 	movq	0x41a8(%rsp), %rax
    0000192b: 	subq	%fs:0x28, %rax
    00001934: 	jne	.Ltmp457 # Offset: 6452
    0000193a: 	addq	$0x41b8, %rsp
    00001941: 	popq	%rbx
    00001942: 	popq	%rbp
    00001943: 	popq	%r12
    00001945: 	popq	%r13
    00001947: 	popq	%r14
    00001949: 	popq	%r15
    0000194b: 	retq # Offset: 6475
.Ltmp331:
    0000194c: 	leaq	0x48(%rsp), %rsi
    00001951: 	xorl	%edx, %edx
    00001953: 	movq	%r14, %rdi
    00001956: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6486
    0000195b: 	movq	%rax, (%r14)
    0000195e: 	movq	%rax, %rdi
    00001961: 	movq	0x48(%rsp), %rax
    00001966: 	movq	%rax, 0x10(%r14)
.Ltmp509:
    0000196a: 	movq	0x38(%rsp), %rsi
    0000196f: 	movq	%r13, %rdx
    00001972: 	callq	memcpy@PLT # Offset: 6514
    00001977: 	movq	0x48(%rsp), %r13
    0000197c: 	movq	(%r14), %rdi
    0000197f: 	jmp	.Ltmp458 # Offset: 6527
    00001984: 	nopl	(%rax) # Size: 4
.Ltmp370:
    00001988: 	movq	0xb0(%rsp), %rdx
    00001990: 	movq	%r13, %rsi
    00001993: 	movl	$0x1, %edi
    00001998: 	xorl	%eax, %eax
    0000199a: 	callq	__printf_chk@PLT # Offset: 6554
    0000199f: 	addl	$0x1, %r12d
    000019a3: 	cmpl	iterations(%rip), %r12d
    000019aa: 	jl	.Ltmp459 # Offset: 6570
    000019b0: 	jmp	.Ltmp369 # Offset: 6576
    000019b5: 	nopl	(%rax) # Size: 3
.Ltmp374:
    000019b8: 	movq	0xb0(%rsp), %rdx
    000019c0: 	movq	%r13, %rsi
    000019c3: 	movl	$0x1, %edi
    000019c8: 	xorl	%eax, %eax
    000019ca: 	callq	__printf_chk@PLT # Offset: 6602
    000019cf: 	addl	$0x1, %r12d
    000019d3: 	cmpl	iterations(%rip), %r12d
    000019da: 	jl	.Ltmp460 # Offset: 6618
    000019e0: 	jmp	.Ltmp373 # Offset: 6624
    000019e5: 	nopl	(%rax) # Size: 3
.Ltmp378:
    000019e8: 	movq	0xb0(%rsp), %rdx
    000019f0: 	movq	%r13, %rsi
    000019f3: 	movl	$0x1, %edi
    000019f8: 	xorl	%eax, %eax
    000019fa: 	callq	__printf_chk@PLT # Offset: 6650
    000019ff: 	addl	$0x1, %r12d
    00001a03: 	cmpl	iterations(%rip), %r12d
    00001a0a: 	jl	.Ltmp461 # Offset: 6666
    00001a10: 	jmp	.Ltmp377 # Offset: 6672
    00001a15: 	nopl	(%rax) # Size: 3
.Ltmp388:
    00001a18: 	movq	0xb0(%rsp), %rdx
    00001a20: 	movq	%r13, %rsi
    00001a23: 	movl	$0x1, %edi
    00001a28: 	xorl	%eax, %eax
    00001a2a: 	callq	__printf_chk@PLT # Offset: 6698
    00001a2f: 	addl	$0x1, %r12d
    00001a33: 	cmpl	iterations(%rip), %r12d
    00001a3a: 	jl	.Ltmp462 # Offset: 6714
    00001a40: 	jmp	.Ltmp387 # Offset: 6720
    00001a45: 	nopl	(%rax) # Size: 3
.Ltmp447:
    00001a48: 	movq	0xb0(%rsp), %rdx
    00001a50: 	movq	%r13, %rsi
    00001a53: 	movl	$0x1, %edi
    00001a58: 	xorl	%eax, %eax
    00001a5a: 	callq	__printf_chk@PLT # Offset: 6746
    00001a5f: 	addl	$0x1, %ebx
    00001a62: 	cmpl	iterations(%rip), %ebx
    00001a68: 	jl	.Ltmp463 # Offset: 6760
    00001a6e: 	jmp	.Ltmp446 # Offset: 6766
    00001a73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp429:
    00001a78: 	movq	0xb0(%rsp), %rdx
    00001a80: 	movq	%r13, %rsi
    00001a83: 	movl	$0x1, %edi
    00001a88: 	xorl	%eax, %eax
    00001a8a: 	callq	__printf_chk@PLT # Offset: 6794
    00001a8f: 	addl	$0x1, %ebx
    00001a92: 	cmpl	%ebx, iterations(%rip)
    00001a98: 	jg	.Ltmp464 # Offset: 6808
    00001a9e: 	jmp	.Ltmp428 # Offset: 6814
    00001aa3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp424:
    00001aa8: 	movq	0xb0(%rsp), %rdx
    00001ab0: 	movq	%r13, %rsi
    00001ab3: 	movl	$0x1, %edi
    00001ab8: 	xorl	%eax, %eax
    00001aba: 	callq	__printf_chk@PLT # Offset: 6842
    00001abf: 	addl	$0x1, %r12d
    00001ac3: 	cmpl	iterations(%rip), %r12d
    00001aca: 	jl	.Ltmp465 # Offset: 6858
    00001ad0: 	jmp	.Ltmp423 # Offset: 6864
    00001ad5: 	nopl	(%rax) # Size: 3
.Ltmp438:
    00001ad8: 	movq	0xb0(%rsp), %rdx
    00001ae0: 	movq	%r13, %rsi
    00001ae3: 	movl	$0x1, %edi
    00001ae8: 	xorl	%eax, %eax
    00001aea: 	callq	__printf_chk@PLT # Offset: 6890
    00001aef: 	addl	$0x1, %ebx
    00001af2: 	cmpl	iterations(%rip), %ebx
    00001af8: 	jl	.Ltmp466 # Offset: 6904
    00001afe: 	jmp	.Ltmp437 # Offset: 6910
    00001b03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp415:
    00001b08: 	movq	0xb0(%rsp), %rdx
    00001b10: 	movq	%r13, %rsi
    00001b13: 	movl	$0x1, %edi
    00001b18: 	xorl	%eax, %eax
    00001b1a: 	callq	__printf_chk@PLT # Offset: 6938
    00001b1f: 	addl	$0x1, %r12d
    00001b23: 	cmpl	iterations(%rip), %r12d
    00001b2a: 	jl	.Ltmp467 # Offset: 6954
    00001b30: 	jmp	.Ltmp414 # Offset: 6960
    00001b35: 	nopl	(%rax) # Size: 3
.Ltmp406:
    00001b38: 	movq	0xb0(%rsp), %rdx
    00001b40: 	movq	%r13, %rsi
    00001b43: 	movl	$0x1, %edi
    00001b48: 	xorl	%eax, %eax
    00001b4a: 	callq	__printf_chk@PLT # Offset: 6986
    00001b4f: 	addl	$0x1, %r12d
    00001b53: 	cmpl	iterations(%rip), %r12d
    00001b5a: 	jl	.Ltmp468 # Offset: 7002
    00001b60: 	jmp	.Ltmp405 # Offset: 7008
    00001b65: 	nopl	(%rax) # Size: 3
.Ltmp397:
    00001b68: 	movq	0xb0(%rsp), %rdx
    00001b70: 	movq	%r13, %rsi
    00001b73: 	movl	$0x1, %edi
    00001b78: 	xorl	%eax, %eax
    00001b7a: 	callq	__printf_chk@PLT # Offset: 7034
    00001b7f: 	addl	$0x1, %r12d
    00001b83: 	cmpl	iterations(%rip), %r12d
    00001b8a: 	jl	.Ltmp469 # Offset: 7050
    00001b90: 	jmp	.Ltmp396 # Offset: 7056
    00001b95: 	nopl	(%rax) # Size: 3
.Ltmp430:
    00001b98: 	movq	%rbp, %rsi
    00001b9b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ba2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7074
    00001ba7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bae: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bb5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bbc: 	jne	.Ltmp470 # Offset: 7100
.Ltmp435:
    00001bc2: 	movq	-0x8(%rdx), %rax
    00001bc6: 	addq	$0x200, %rax
    00001bcc: 	jmp	.Ltmp470 # Offset: 7116
.Ltmp425:
    00001bd1: 	movq	-0x8(%rdx), %rax
    00001bd5: 	addq	$0x200, %rax
    00001bdb: 	jmp	.Ltmp471 # Offset: 7131
.Ltmp322:
    00001be0: 	movq	-0x8(%rdx), %rax
    00001be4: 	addq	$0x200, %rax
    00001bea: 	jmp	.Ltmp472 # Offset: 7146
.Ltmp384:
    00001bef: 	movq	-0x8(%rdx), %rax
    00001bf3: 	addq	$0x200, %rax
    00001bf9: 	jmp	.Ltmp473 # Offset: 7161
.Ltmp379:
    00001bfe: 	movq	%rbp, %rsi
    00001c01: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c08: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7176
    00001c0d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c14: 	jmp	.Ltmp474 # Offset: 7188
.Ltmp371:
    00001c19: 	movq	-0x8(%rdx), %rax
    00001c1d: 	addq	$0x200, %rax
    00001c23: 	jmp	.Ltmp475 # Offset: 7203
.Ltmp375:
    00001c28: 	movq	-0x8(%rdx), %rax
    00001c2c: 	addq	$0x200, %rax
    00001c32: 	jmp	.Ltmp476 # Offset: 7218
.Ltmp453:
    00001c37: 	movq	-0x8(%rdx), %rax
    00001c3b: 	addq	$0x200, %rax
    00001c41: 	jmp	.Ltmp477 # Offset: 7233
.Ltmp328:
    00001c46: 	movq	%rbp, %rsi
    00001c49: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c50: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7248
    00001c55: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c5c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c63: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c6a: 	jne	.Ltmp478 # Offset: 7274
.Ltmp333:
    00001c70: 	movq	-0x8(%rdx), %rax
    00001c74: 	addq	$0x200, %rax
    00001c7a: 	jmp	.Ltmp478 # Offset: 7290
.Ltmp367:
    00001c7f: 	movq	-0x8(%rdx), %rax
    00001c83: 	addq	$0x200, %rax
    00001c89: 	jmp	.Ltmp479 # Offset: 7305
.Ltmp361:
    00001c8e: 	movq	-0x8(%rdx), %rax
    00001c92: 	addq	$0x200, %rax
    00001c98: 	jmp	.Ltmp480 # Offset: 7320
.Ltmp355:
    00001c9d: 	movq	-0x8(%rdx), %rax
    00001ca1: 	addq	$0x200, %rax
    00001ca7: 	jmp	.Ltmp481 # Offset: 7335
.Ltmp407:
    00001cac: 	movq	%rbp, %rsi
    00001caf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cb6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7350
    00001cbb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cc2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001cc9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cd0: 	jne	.Ltmp482 # Offset: 7376
.Ltmp412:
    00001cd6: 	movq	-0x8(%rdx), %rax
    00001cda: 	addq	$0x200, %rax
    00001ce0: 	jmp	.Ltmp482 # Offset: 7392
.Ltmp394:
    00001ce5: 	movq	-0x8(%rdx), %rax
    00001ce9: 	addq	$0x200, %rax
    00001cef: 	jmp	.Ltmp483 # Offset: 7407
.Ltmp398:
    00001cf4: 	movq	%rbp, %rsi
    00001cf7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cfe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7422
    00001d03: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d0a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d11: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d18: 	jne	.Ltmp484 # Offset: 7448
.Ltmp403:
    00001d1e: 	movq	-0x8(%rdx), %rax
    00001d22: 	addq	$0x200, %rax
    00001d28: 	jmp	.Ltmp484 # Offset: 7464
.Ltmp421:
    00001d2d: 	movq	-0x8(%rdx), %rax
    00001d31: 	addq	$0x200, %rax
    00001d37: 	jmp	.Ltmp485 # Offset: 7479
.Ltmp416:
    00001d3c: 	movq	%rbp, %rsi
    00001d3f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d46: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7494
    00001d4b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d52: 	jmp	.Ltmp486 # Offset: 7506
.Ltmp350:
    00001d57: 	movq	%rbp, %rsi
    00001d5a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d61: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7521
    00001d66: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d6d: 	jmp	.Ltmp487 # Offset: 7533
.Ltmp344:
    00001d72: 	movq	-0x8(%rdx), %rax
    00001d76: 	addq	$0x200, %rax
    00001d7c: 	jmp	.Ltmp488 # Offset: 7548
.Ltmp339:
    00001d81: 	movq	%rbp, %rsi
    00001d84: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d8b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7563
    00001d90: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d97: 	jmp	.Ltmp489 # Offset: 7575
.Ltmp389:
    00001d9c: 	movq	%rbp, %rsi
    00001d9f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001da6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7590
    00001dab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db2: 	jmp	.Ltmp490 # Offset: 7602
.Ltmp448:
    00001db7: 	movq	%rbp, %rsi
    00001dba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dc1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7617
    00001dc6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dcd: 	jmp	.Ltmp491 # Offset: 7629
.Ltmp444:
    00001dd2: 	movq	-0x8(%rdx), %rax
    00001dd6: 	addq	$0x200, %rax
    00001ddc: 	jmp	.Ltmp492 # Offset: 7644
.Ltmp439:
    00001de1: 	movq	%rbp, %rsi
    00001de4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001deb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7659
    00001df0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001df7: 	jmp	.Ltmp493 # Offset: 7671
.Ltmp443:
    00001dfc: 	testq	%r12, %r12
    00001dff: 	je	.Ltmp494 # Offset: 7679
.Ltmp511:
    00001e05: 	movq	%r12, %rdx
    00001e08: 	movq	%r13, %rsi
    00001e0b: 	callq	memcpy@PLT # Offset: 7691
    00001e10: 	movq	0x48(%rsp), %r12
    00001e15: 	movq	(%rbx), %rdi
    00001e18: 	jmp	.Ltmp494 # Offset: 7704
.Ltmp452:
    00001e1d: 	testq	%r12, %r12
    00001e20: 	je	.Ltmp495 # Offset: 7712
    00001e26: 	jmp	.Ltmp496 # Offset: 7718
    00001e2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp354:
    00001e30: 	testq	%r13, %r13
    00001e33: 	je	.Ltmp497 # Offset: 7731
    00001e39: 	jmp	.Ltmp498 # Offset: 7737
    00001e3e: 	nop # Size: 2
.Ltmp343:
    00001e40: 	testq	%r13, %r13
    00001e43: 	je	.Ltmp499 # Offset: 7747
    00001e49: 	jmp	.Ltmp500 # Offset: 7753
    00001e4e: 	nop # Size: 2
.Ltmp420:
    00001e50: 	testq	%r12, %r12
    00001e53: 	je	.Ltmp501 # Offset: 7763
    00001e59: 	jmp	.Ltmp502 # Offset: 7769
    00001e5e: 	nop # Size: 2
.Ltmp383:
    00001e60: 	testq	%r12, %r12
    00001e63: 	je	.Ltmp503 # Offset: 7779
    00001e69: 	jmp	.Ltmp504 # Offset: 7785
    00001e6e: 	nop # Size: 2
.Ltmp402:
    00001e70: 	testq	%r12, %r12
    00001e73: 	je	.Ltmp505 # Offset: 7795
.Ltmp513:
    00001e79: 	movq	%r12, %rdx
    00001e7c: 	movq	%r13, %rsi
    00001e7f: 	callq	memcpy@PLT # Offset: 7807
    00001e84: 	movq	0x48(%rsp), %r12
    00001e89: 	movq	(%rbx), %rdi
    00001e8c: 	jmp	.Ltmp505 # Offset: 7820
.Ltmp393:
    00001e91: 	testq	%r12, %r12
    00001e94: 	je	.Ltmp506 # Offset: 7828
    00001e9a: 	jmp	.Ltmp507 # Offset: 7834
    00001e9f: 	nop # Size: 1
.Ltmp411:
    00001ea0: 	testq	%r12, %r12
    00001ea3: 	je	.Ltmp508 # Offset: 7843
.Ltmp514:
    00001ea9: 	movq	0x20(%rsp), %rsi
    00001eae: 	movq	%r12, %rdx
    00001eb1: 	callq	memcpy@PLT # Offset: 7857
    00001eb6: 	movq	0x48(%rsp), %r12
    00001ebb: 	movq	(%r13), %rdi
    00001ebf: 	jmp	.Ltmp508 # Offset: 7871
.Ltmp332:
    00001ec4: 	testq	%r13, %r13
    00001ec7: 	je	.Ltmp458 # Offset: 7879
    00001ecd: 	jmp	.Ltmp509 # Offset: 7885
    00001ed2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp434:
    00001ed8: 	testq	%r12, %r12
    00001edb: 	je	.Ltmp510 # Offset: 7899
.Ltmp512:
    00001ee1: 	movq	%r12, %rdx
    00001ee4: 	movq	%r13, %rsi
    00001ee7: 	callq	memcpy@PLT # Offset: 7911
    00001eec: 	movq	0x48(%rsp), %r12
    00001ef1: 	movq	(%rbx), %rdi
    00001ef4: 	jmp	.Ltmp510 # Offset: 7924
.Ltmp451:
    00001ef9: 	leaq	0x48(%rsp), %rsi
    00001efe: 	xorl	%edx, %edx
    00001f00: 	movq	%rbx, %rdi
    00001f03: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7939
    00001f08: 	movq	%rax, (%rbx)
    00001f0b: 	movq	%rax, %rdi
    00001f0e: 	movq	0x48(%rsp), %rax
    00001f13: 	movq	%rax, 0x10(%rbx)
.Ltmp496:
    00001f17: 	movq	%r12, %rdx
    00001f1a: 	movq	%r13, %rsi
    00001f1d: 	callq	memcpy@PLT # Offset: 7965
    00001f22: 	movq	0x48(%rsp), %r12
    00001f27: 	movq	(%rbx), %rdi
    00001f2a: 	jmp	.Ltmp495 # Offset: 7978
.Ltmp353:
    00001f2f: 	leaq	0x48(%rsp), %rsi
    00001f34: 	xorl	%edx, %edx
    00001f36: 	movq	%r14, %rdi
    00001f39: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7993
    00001f3e: 	movq	%rax, (%r14)
    00001f41: 	movq	%rax, %rdi
    00001f44: 	movq	0x48(%rsp), %rax
    00001f49: 	movq	%rax, 0x10(%r14)
.Ltmp498:
    00001f4d: 	movq	0x38(%rsp), %rsi
    00001f52: 	movq	%r13, %rdx
    00001f55: 	callq	memcpy@PLT # Offset: 8021
    00001f5a: 	movq	0x48(%rsp), %r13
    00001f5f: 	movq	(%r14), %rdi
    00001f62: 	jmp	.Ltmp497 # Offset: 8034
.Ltmp342:
    00001f67: 	leaq	0x48(%rsp), %rsi
    00001f6c: 	xorl	%edx, %edx
    00001f6e: 	movq	%r14, %rdi
    00001f71: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8049
    00001f76: 	movq	%rax, (%r14)
    00001f79: 	movq	%rax, %rdi
    00001f7c: 	movq	0x48(%rsp), %rax
    00001f81: 	movq	%rax, 0x10(%r14)
.Ltmp500:
    00001f85: 	movq	0x38(%rsp), %rsi
    00001f8a: 	movq	%r13, %rdx
    00001f8d: 	callq	memcpy@PLT # Offset: 8077
    00001f92: 	movq	0x48(%rsp), %r13
    00001f97: 	movq	(%r14), %rdi
    00001f9a: 	jmp	.Ltmp499 # Offset: 8090
.Ltmp442:
    00001f9f: 	leaq	0x48(%rsp), %rsi
    00001fa4: 	xorl	%edx, %edx
    00001fa6: 	movq	%rbx, %rdi
    00001fa9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8105
    00001fae: 	movq	%rax, (%rbx)
    00001fb1: 	movq	%rax, %rdi
    00001fb4: 	movq	0x48(%rsp), %rax
    00001fb9: 	movq	%rax, 0x10(%rbx)
    00001fbd: 	jmp	.Ltmp511 # Offset: 8125
.Ltmp433:
    00001fc2: 	leaq	0x48(%rsp), %rsi
    00001fc7: 	xorl	%edx, %edx
    00001fc9: 	movq	%rbx, %rdi
    00001fcc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8140
    00001fd1: 	movq	%rax, (%rbx)
    00001fd4: 	movq	%rax, %rdi
    00001fd7: 	movq	0x48(%rsp), %rax
    00001fdc: 	movq	%rax, 0x10(%rbx)
    00001fe0: 	jmp	.Ltmp512 # Offset: 8160
.Ltmp419:
    00001fe5: 	leaq	0x48(%rsp), %rsi
    00001fea: 	xorl	%edx, %edx
    00001fec: 	movq	%r13, %rdi
    00001fef: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8175
    00001ff4: 	movq	%rax, (%r13)
    00001ff8: 	movq	%rax, %rdi
    00001ffb: 	movq	0x48(%rsp), %rax
    00002000: 	movq	%rax, 0x10(%r13)
.Ltmp502:
    00002004: 	movq	0x20(%rsp), %rsi
    00002009: 	movq	%r12, %rdx
    0000200c: 	callq	memcpy@PLT # Offset: 8204
    00002011: 	movq	0x48(%rsp), %r12
    00002016: 	movq	(%r13), %rdi
    0000201a: 	jmp	.Ltmp501 # Offset: 8218
.Ltmp382:
    0000201f: 	leaq	0x48(%rsp), %rsi
    00002024: 	xorl	%edx, %edx
    00002026: 	movq	%r13, %rdi
    00002029: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8233
    0000202e: 	movq	%rax, (%r13)
    00002032: 	movq	%rax, %rdi
    00002035: 	movq	0x48(%rsp), %rax
    0000203a: 	movq	%rax, 0x10(%r13)
.Ltmp504:
    0000203e: 	movq	%r12, %rdx
    00002041: 	movq	%r14, %rsi
    00002044: 	callq	memcpy@PLT # Offset: 8260
    00002049: 	movq	0x48(%rsp), %r12
    0000204e: 	movq	(%r13), %rdi
    00002052: 	jmp	.Ltmp503 # Offset: 8274
.Ltmp392:
    00002057: 	leaq	0x48(%rsp), %rsi
    0000205c: 	xorl	%edx, %edx
    0000205e: 	movq	%r13, %rdi
    00002061: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8289
    00002066: 	movq	%rax, (%r13)
    0000206a: 	movq	%rax, %rdi
    0000206d: 	movq	0x48(%rsp), %rax
    00002072: 	movq	%rax, 0x10(%r13)
.Ltmp507:
    00002076: 	movq	%r12, %rdx
    00002079: 	movq	%r14, %rsi
    0000207c: 	callq	memcpy@PLT # Offset: 8316
    00002081: 	movq	0x48(%rsp), %r12
    00002086: 	movq	(%r13), %rdi
    0000208a: 	jmp	.Ltmp506 # Offset: 8330
.Ltmp401:
    0000208f: 	leaq	0x48(%rsp), %rsi
    00002094: 	xorl	%edx, %edx
    00002096: 	movq	%rbx, %rdi
    00002099: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8345
    0000209e: 	movq	%rax, (%rbx)
    000020a1: 	movq	%rax, %rdi
    000020a4: 	movq	0x48(%rsp), %rax
    000020a9: 	movq	%rax, 0x10(%rbx)
    000020ad: 	jmp	.Ltmp513 # Offset: 8365
.Ltmp410:
    000020b2: 	leaq	0x48(%rsp), %rsi
    000020b7: 	xorl	%edx, %edx
    000020b9: 	movq	%r13, %rdi
    000020bc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8380
    000020c1: 	movq	%rax, (%r13)
    000020c5: 	movq	%rax, %rdi
    000020c8: 	movq	0x48(%rsp), %rax
    000020cd: 	movq	%rax, 0x10(%r13)
    000020d1: 	jmp	.Ltmp514 # Offset: 8401
.Ltmp341:
    000020d6: 	leaq	DATAat0x1c158(%rip), %rdi
    000020dd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8413
.Ltmp352:
    000020e2: 	leaq	DATAat0x1c158(%rip), %rdi
    000020e9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8425
.Ltmp381:
    000020ee: 	leaq	DATAat0x1c158(%rip), %rdi
    000020f5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8437
.Ltmp391:
    000020fa: 	leaq	DATAat0x1c158(%rip), %rdi
    00002101: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8449
.Ltmp400:
    00002106: 	leaq	DATAat0x1c158(%rip), %rdi
    0000210d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8461
.Ltmp409:
    00002112: 	leaq	DATAat0x1c158(%rip), %rdi
    00002119: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8473
.Ltmp418:
    0000211e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002125: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8485
.Ltmp432:
    0000212a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002131: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8497
.Ltmp441:
    00002136: 	leaq	DATAat0x1c158(%rip), %rdi
    0000213d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8509
.Ltmp450:
    00002142: 	leaq	DATAat0x1c158(%rip), %rdi
    00002149: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8521
.Ltmp457:
    0000214e: 	callq	__stack_chk_fail@PLT # Offset: 8526
.Ltmp330:
    00002153: 	leaq	DATAat0x1c158(%rip), %rdi
    0000215a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8538
    0000215f: 	endbr64
.Ltmp516:
    00002163: 	movq	%rax, %rbp
    00002166: 	jmp	.Ltmp515 # Offset: 8550
    0000216b: 	endbr64
    0000216f: 	jmp	.Ltmp516 # Offset: 8559
    00002171: 	endbr64
    00002175: 	jmp	.Ltmp516 # Offset: 8565
    00002177: 	endbr64
    0000217b: 	jmp	.Ltmp516 # Offset: 8571
    0000217d: 	endbr64
    00002181: 	jmp	.Ltmp516 # Offset: 8577
    00002183: 	endbr64
    00002187: 	jmp	.Ltmp516 # Offset: 8583
    00002189: 	endbr64
    0000218d: 	jmp	.Ltmp516 # Offset: 8589
    0000218f: 	endbr64
    00002193: 	jmp	.Ltmp516 # Offset: 8595
    00002195: 	endbr64
    00002199: 	jmp	.Ltmp516 # Offset: 8601
    0000219b: 	endbr64
    0000219f: 	jmp	.Ltmp516 # Offset: 8607
    000021a1: 	endbr64
    000021a5: 	jmp	.Ltmp516 # Offset: 8613
    000021a7: 	endbr64
    000021ab: 	jmp	.Ltmp516 # Offset: 8619
    000021ad: 	endbr64
    000021b1: 	jmp	.Ltmp516 # Offset: 8625
    000021b3: 	endbr64
    000021b7: 	jmp	.Ltmp516 # Offset: 8631
    000021b9: 	endbr64
    000021bd: 	jmp	.Ltmp516 # Offset: 8637
    000021bf: 	endbr64
    000021c3: 	movq	%rax, %rbp
    000021c6: 	jmp	.Ltmp517 # Offset: 8646
    000021c8: 	endbr64
    000021cc: 	movq	%rax, %rbp
    000021cf: 	jmp	.Ltmp518 # Offset: 8655
    000021d1: 	endbr64
    000021d5: 	jmp	.Ltmp516 # Offset: 8661
.Ltmp517:
    000021d7: 	movq	0xb0(%rsp), %rdi
    000021df: 	leaq	0xc0(%rsp), %rax
    000021e7: 	cmpq	%rax, %rdi
    000021ea: 	je	.Ltmp518 # Offset: 8682
.Ltmp520:
    000021ec: 	movq	0xc0(%rsp), %rax
    000021f4: 	leaq	0x1(%rax), %rsi
    000021f8: 	callq	_ZdlPvm@PLT # Offset: 8696
.Ltmp518:
    000021fd: 	movq	0x90(%rsp), %rdi
    00002205: 	cmpq	0x28(%rsp), %rdi
    0000220a: 	je	.Ltmp519 # Offset: 8714
    0000220c: 	movq	0xa0(%rsp), %rax
    00002214: 	leaq	0x1(%rax), %rsi
    00002218: 	callq	_ZdlPvm@PLT # Offset: 8728
.Ltmp519:
    0000221d: 	movq	%rbp, %rdi
    00002220: 	callq	_Unwind_Resume@PLT # Offset: 8736
    00002225: 	endbr64
    00002229: 	jmp	.Ltmp516 # Offset: 8745
    0000222e: 	endbr64
    00002232: 	jmp	.Ltmp516 # Offset: 8754
    00002237: 	endbr64
    0000223b: 	jmp	.Ltmp516 # Offset: 8763
.Ltmp515:
    00002240: 	movq	0xb0(%rsp), %rdi
    00002248: 	cmpq	(%rsp), %rdi
    0000224c: 	jne	.Ltmp520 # Offset: 8780
    0000224e: 	jmp	.Ltmp518 # Offset: 8782
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeItEvT_"

Binary Function "_Z11TestOneTypeIjEvT_" after disassembly {
  Number      : 60
  State       : disassembled
  Address     : 0x6ff0
  Size        : 0x21d9
  MaxSize     : 0x21e0
  Offset      : 0x6ff0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIjEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x8000(%rsp), %r11
.Ltmp521:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp521 # Offset: 37
    00000027: 	subq	$0x78, %rsp
    0000002b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm4
    00000033: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm5
    0000003b: 	movq	%fs:0x28, %rax
    00000044: 	movq	%rax, 0x8068(%rsp)
    0000004c: 	xorl	%eax, %eax
    0000004e: 	movl	%edi, %r12d
    00000051: 	leaq	0x180(%rsp), %rax
    00000059: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000060: 	movq	%rax, %xmm0
    00000065: 	leaq	0x100(%rsp), %rax
    0000006d: 	movq	$0x8, 0x98(%rsp)
    00000079: 	leaq	0x360(%rsp), %rbp
    00000081: 	movq	%rax, %xmm2
    00000086: 	leaq	0x270(%rsp), %rax
    0000008e: 	movb	$0x0, 0xa8(%rsp)
    00000096: 	leaq	0x8060(%rsp), %rbx
    0000009e: 	movq	%rax, %xmm1
    000000a3: 	leaq	0xa0(%rsp), %rax
    000000ab: 	punpcklqdq	%xmm0, %xmm2
    000000af: 	movaps	%xmm4, 0x70(%rsp)
    000000b4: 	movq	%rax, 0x30(%rsp)
    000000b9: 	punpcklqdq	%xmm0, %xmm1
    000000bd: 	movq	%rax, 0x90(%rsp)
    000000c5: 	movabsq	$0x745f3233746e6975, %rax
    000000cf: 	movq	%rax, 0xa0(%rsp)
    000000d7: 	leaq	0x70(%rsp), %rax
    000000dc: 	movq	%rax, %rsi
    000000df: 	movq	%rax, 0x38(%rsp)
    000000e4: 	movaps	%xmm2, 0x20(%rsp)
    000000e9: 	movaps	%xmm1, (%rsp)
    000000ed: 	movaps	%xmm5, 0x80(%rsp)
    000000f5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 245
    000000fa: 	movl	init_value(%rip), %eax
    00000100: 	movdqa	0x20(%rsp), %xmm2
    00000106: 	movdqa	(%rsp), %xmm1
    0000010b: 	movd	%eax, %xmm6
    0000010f: 	movl	%eax, 0x18(%rsp)
    00000113: 	movq	%rbp, %rax
    00000116: 	pshufd	$0x0, %xmm6, %xmm0
    0000011b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp522:
    00000120: 	movaps	%xmm0, (%rax)
    00000123: 	addq	$0x10, %rax
    00000127: 	cmpq	%rbx, %rax
    0000012a: 	jne	.Ltmp522 # Offset: 298
    0000012c: 	leaq	0x50(%rsp), %rax
    00000131: 	movl	%r12d, %edi
    00000134: 	movabsq	$-0x7777777777777777, %rcx
    0000013e: 	movl	0x18(%rsp), %r9d
    00000143: 	movq	%rax, 0x78(%rsp)
    00000148: 	leaq	0x60(%rsp), %rax
    0000014d: 	leal	0x2(%r12), %esi
    00000152: 	movq	%rax, 0x58(%rsp)
    00000157: 	leaq	0x44(%rsp), %rax
    0000015c: 	movd	%r9d, %xmm3
    00000161: 	leaq	0x90(%rsp), %r13
    00000169: 	movq	%rax, 0x68(%rsp)
    0000016e: 	movq	%rdi, %rax
    00000171: 	mulq	%rcx
    00000174: 	movaps	%xmm0, 0x100(%rsp)
    0000017c: 	movaps	%xmm0, 0x110(%rsp)
    00000184: 	movaps	%xmm0, 0x120(%rsp)
    0000018c: 	movq	%rdx, %rax
    0000018f: 	andq	$-0x10, %rdx
    00000193: 	movaps	%xmm0, 0x130(%rsp)
    0000019b: 	shrq	$0x4, %rax
    0000019f: 	movaps	%xmm0, 0x140(%rsp)
    000001a7: 	subq	%rax, %rdx
    000001aa: 	movaps	%xmm0, 0x150(%rsp)
    000001b2: 	leaq	(%rdx,%rdx), %rax
    000001b6: 	movaps	%xmm0, 0x160(%rsp)
    000001be: 	pshufd	$0xe0, %xmm3, %xmm0
    000001c3: 	subq	%rax, %rdi
    000001c6: 	movl	%r9d, 0x44(%rsp)
    000001cb: 	movq	%rdi, 0x20(%rsp)
    000001d0: 	movl	%esi, %edi
    000001d2: 	movq	%xmm0, 0x170(%rsp)
    000001db: 	movq	%rdi, %rax
    000001de: 	mulq	%rcx
    000001e1: 	movq	%rdx, %rax
    000001e4: 	andq	$-0x10, %rdx
    000001e8: 	shrq	$0x4, %rax
    000001ec: 	subq	%rax, %rdx
    000001ef: 	movq	%rdi, %rax
    000001f2: 	addq	%rdx, %rdx
    000001f5: 	subq	%rdx, %rax
    000001f8: 	xorl	%edx, %edx
    000001fa: 	movq	%rax, %xmm0
    000001ff: 	leal	(%r12,%r12), %eax
    00000203: 	divl	%esi
    00000205: 	punpcklqdq	%xmm0, %xmm0
    00000209: 	movaps	%xmm0, 0x180(%rsp)
    00000211: 	movaps	%xmm0, 0x190(%rsp)
    00000219: 	movaps	%xmm0, 0x1a0(%rsp)
    00000221: 	movaps	%xmm0, 0x1b0(%rsp)
    00000229: 	movaps	%xmm0, 0x1c0(%rsp)
    00000231: 	movaps	%xmm0, 0x1d0(%rsp)
    00000239: 	movaps	%xmm0, 0x1e0(%rsp)
    00000241: 	movaps	%xmm0, 0x1f0(%rsp)
    00000249: 	movaps	%xmm0, 0x200(%rsp)
    00000251: 	movaps	%xmm0, 0x210(%rsp)
    00000259: 	movaps	%xmm0, 0x220(%rsp)
    00000261: 	movaps	%xmm0, 0x230(%rsp)
    00000269: 	movaps	%xmm0, 0x240(%rsp)
    00000271: 	leal	(%rax,%r12), %esi
    00000275: 	movaps	%xmm0, 0x250(%rsp)
    0000027d: 	leaq	0xb0(%rsp), %r12
    00000285: 	movq	%rsi, %rax
    00000288: 	movaps	%xmm0, 0x260(%rsp)
    00000290: 	movq	%r12, %rdi
    00000293: 	mulq	%rcx
    00000296: 	movq	%rdx, %rax
    00000299: 	andq	$-0x10, %rdx
    0000029d: 	shrq	$0x4, %rax
    000002a1: 	subq	%rax, %rdx
    000002a4: 	movq	%rsi, %rax
    000002a7: 	movq	%r13, %rsi
    000002aa: 	addq	%rdx, %rdx
    000002ad: 	subq	%rdx, %rax
    000002b0: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002b7: 	movq	%rax, %xmm0
    000002bc: 	punpcklqdq	%xmm0, %xmm0
    000002c0: 	movaps	%xmm0, 0x270(%rsp)
    000002c8: 	movaps	%xmm0, 0x280(%rsp)
    000002d0: 	movaps	%xmm0, 0x290(%rsp)
    000002d8: 	movaps	%xmm0, 0x2a0(%rsp)
    000002e0: 	movaps	%xmm0, 0x2b0(%rsp)
    000002e8: 	movaps	%xmm0, 0x2c0(%rsp)
    000002f0: 	movaps	%xmm0, 0x2d0(%rsp)
    000002f8: 	movaps	%xmm0, 0x2e0(%rsp)
    00000300: 	movaps	%xmm0, 0x2f0(%rsp)
    00000308: 	movaps	%xmm0, 0x300(%rsp)
    00000310: 	movaps	%xmm0, 0x310(%rsp)
    00000318: 	movaps	%xmm0, 0x320(%rsp)
    00000320: 	movaps	%xmm0, 0x330(%rsp)
    00000328: 	movaps	%xmm0, 0x340(%rsp)
    00000330: 	movaps	%xmm0, 0x350(%rsp)
    00000338: 	movaps	%xmm2, 0xd0(%rsp)
    00000340: 	movaps	%xmm1, 0xe0(%rsp)
    00000348: 	movaps	%xmm1, 0xf0(%rsp)
    00000350: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 848
    00000355: 	callq	clock@PLT # Offset: 853
    0000035a: 	movl	iterations(%rip), %ecx
    00000360: 	xorl	%r14d, %r14d
    00000363: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000036a: 	movq	%rax, start_time(%rip)
    00000371: 	testl	%ecx, %ecx
    00000373: 	jle	.Ltmp523 # Offset: 883
    00000375: 	nopl	(%rax) # Size: 3
.Ltmp526:
    00000378: 	movq	%rbp, %rax
    0000037b: 	pxor	%xmm0, %xmm0
    0000037f: 	nop # Size: 1
.Ltmp524:
    00000380: 	paddd	(%rax), %xmm0
    00000384: 	addq	$0x10, %rax
    00000388: 	cmpq	%rax, %rbx
    0000038b: 	jne	.Ltmp524 # Offset: 907
    0000038d: 	imull	$0x1f40, init_value(%rip), %edx
    00000397: 	movdqa	%xmm0, %xmm1
    0000039b: 	psrldq	$0x8, %xmm1
    000003a0: 	paddd	%xmm1, %xmm0
    000003a4: 	movdqa	%xmm0, %xmm1
    000003a8: 	psrldq	$0x4, %xmm1
    000003ad: 	paddd	%xmm1, %xmm0
    000003b1: 	movd	%xmm0, %eax
    000003b5: 	cmpl	%eax, %edx
    000003b7: 	je	.Ltmp525 # Offset: 951
    000003b9: 	movq	0xb0(%rsp), %rdx
    000003c1: 	movq	%r15, %rsi
    000003c4: 	movl	$0x1, %edi
    000003c9: 	xorl	%eax, %eax
    000003cb: 	callq	__printf_chk@PLT # Offset: 971
    000003d0: 	movl	iterations(%rip), %ecx
.Ltmp525:
    000003d6: 	addl	$0x1, %r14d
    000003da: 	cmpl	%ecx, %r14d
    000003dd: 	jl	.Ltmp526 # Offset: 989
.Ltmp523:
    000003df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003e6: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    000003ed: 	subq	$0x20, %rax
    000003f1: 	cmpq	%rax, %r15
    000003f4: 	je	.Ltmp527 # Offset: 1012
    000003fa: 	leaq	0x10(%r15), %rdi
    000003fe: 	movq	0xb8(%rsp), %r14
    00000406: 	movq	%rdi, (%r15)
    00000409: 	movq	0xb0(%rsp), %rax
    00000411: 	movq	%rax, %rsi
    00000414: 	movq	%rax, (%rsp)
    00000418: 	addq	%r14, %rsi
    0000041b: 	je	.Ltmp528 # Offset: 1051
    0000041d: 	testq	%rax, %rax
    00000420: 	je	.Ltmp529 # Offset: 1056
.Ltmp528:
    00000426: 	movq	%r14, 0x48(%rsp)
    0000042b: 	cmpq	$0xf, %r14
    0000042f: 	ja	.Ltmp530 # Offset: 1071
    00000435: 	cmpq	$0x1, %r14
    00000439: 	jne	.Ltmp531 # Offset: 1081
    0000043f: 	movq	(%rsp), %rax
    00000443: 	movzbl	(%rax), %eax
    00000446: 	movb	%al, 0x10(%r15)
.Ltmp663:
    0000044a: 	movq	%r14, 0x8(%r15)
    0000044e: 	movb	$0x0, (%rdi,%r14)
    00000453: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000045a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000461: 	addq	$0x20, %rax
    00000465: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000046c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000473: 	je	.Ltmp532 # Offset: 1139
.Ltmp676:
    00000479: 	movq	-0x20(%rax), %r14
    0000047d: 	callq	clock@PLT # Offset: 1149
    00000482: 	pxor	%xmm0, %xmm0
    00000486: 	movq	%rax, end_time(%rip)
    0000048d: 	movq	%r14, %rdi
    00000490: 	subq	start_time(%rip), %rax
    00000497: 	cvtsi2sd	%rax, %xmm0
    0000049c: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004a4: 	callq	_Z13record_resultdPKc # Offset: 1188
    000004a9: 	movq	0xb0(%rsp), %rdi
    000004b1: 	leaq	0xc0(%rsp), %rax
    000004b9: 	movq	%rax, (%rsp)
    000004bd: 	cmpq	%rax, %rdi
    000004c0: 	je	.Ltmp533 # Offset: 1216
    000004c2: 	movq	0xc0(%rsp), %rax
    000004ca: 	leaq	0x1(%rax), %rsi
    000004ce: 	callq	_ZdlPvm@PLT # Offset: 1230
.Ltmp533:
    000004d3: 	leaq	DATAat0x1c1f4(%rip), %rdx
    000004da: 	movq	%r13, %rsi
    000004dd: 	movq	%r12, %rdi
    000004e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1248
    000004e5: 	callq	clock@PLT # Offset: 1253
    000004ea: 	movl	iterations(%rip), %ecx
    000004f0: 	xorl	%r14d, %r14d
    000004f3: 	leaq	DATAat0x1c1c8(%rip), %r15
    000004fa: 	movq	%rax, start_time(%rip)
    00000501: 	testl	%ecx, %ecx
    00000503: 	jle	.Ltmp534 # Offset: 1283
    00000505: 	nopl	(%rax) # Size: 3
.Ltmp537:
    00000508: 	movq	%rbp, %rax
    0000050b: 	pxor	%xmm0, %xmm0
    0000050f: 	nop # Size: 1
.Ltmp535:
    00000510: 	paddd	(%rax), %xmm0
    00000514: 	addq	$0x10, %rax
    00000518: 	cmpq	%rbx, %rax
    0000051b: 	jne	.Ltmp535 # Offset: 1307
    0000051d: 	imull	$0x1f40, init_value(%rip), %edx
    00000527: 	movdqa	%xmm0, %xmm1
    0000052b: 	psrldq	$0x8, %xmm1
    00000530: 	paddd	%xmm1, %xmm0
    00000534: 	movdqa	%xmm0, %xmm1
    00000538: 	psrldq	$0x4, %xmm1
    0000053d: 	paddd	%xmm1, %xmm0
    00000541: 	movd	%xmm0, %eax
    00000545: 	cmpl	%eax, %edx
    00000547: 	je	.Ltmp536 # Offset: 1351
    00000549: 	movq	0xb0(%rsp), %rdx
    00000551: 	movq	%r15, %rsi
    00000554: 	movl	$0x1, %edi
    00000559: 	xorl	%eax, %eax
    0000055b: 	callq	__printf_chk@PLT # Offset: 1371
    00000560: 	movl	iterations(%rip), %ecx
.Ltmp536:
    00000566: 	addl	$0x1, %r14d
    0000056a: 	cmpl	%ecx, %r14d
    0000056d: 	jl	.Ltmp537 # Offset: 1389
.Ltmp534:
    0000056f: 	movq	%r12, %rsi
    00000572: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000579: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1401
    0000057e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000585: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000058c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000593: 	je	.Ltmp538 # Offset: 1427
.Ltmp697:
    00000599: 	movq	-0x20(%rax), %r14
    0000059d: 	callq	clock@PLT # Offset: 1437
    000005a2: 	pxor	%xmm0, %xmm0
    000005a6: 	movq	%rax, end_time(%rip)
    000005ad: 	movq	%r14, %rdi
    000005b0: 	subq	start_time(%rip), %rax
    000005b7: 	cvtsi2sd	%rax, %xmm0
    000005bc: 	divsd	DATAat0x1c370(%rip), %xmm0
    000005c4: 	callq	_Z13record_resultdPKc # Offset: 1476
    000005c9: 	movq	0xb0(%rsp), %rdi
    000005d1: 	cmpq	(%rsp), %rdi
    000005d5: 	je	.Ltmp539 # Offset: 1493
    000005d7: 	movq	0xc0(%rsp), %rax
    000005df: 	leaq	0x1(%rax), %rsi
    000005e3: 	callq	_ZdlPvm@PLT # Offset: 1507
.Ltmp539:
    000005e8: 	leaq	DATAat0x1c208(%rip), %rdx
    000005ef: 	movq	%r13, %rsi
    000005f2: 	movq	%r12, %rdi
    000005f5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1525
    000005fa: 	callq	clock@PLT # Offset: 1530
    000005ff: 	movl	iterations(%rip), %ecx
    00000605: 	xorl	%r14d, %r14d
    00000608: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000060f: 	movq	%rax, start_time(%rip)
    00000616: 	testl	%ecx, %ecx
    00000618: 	jle	.Ltmp540 # Offset: 1560
    0000061a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp543:
    00000620: 	movq	%rbp, %rax
    00000623: 	pxor	%xmm0, %xmm0
    00000627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp541:
    00000630: 	paddd	(%rax), %xmm0
    00000634: 	addq	$0x10, %rax
    00000638: 	cmpq	%rbx, %rax
    0000063b: 	jne	.Ltmp541 # Offset: 1595
    0000063d: 	imull	$0x1f40, init_value(%rip), %edx
    00000647: 	movdqa	%xmm0, %xmm1
    0000064b: 	psrldq	$0x8, %xmm1
    00000650: 	paddd	%xmm1, %xmm0
    00000654: 	movdqa	%xmm0, %xmm1
    00000658: 	psrldq	$0x4, %xmm1
    0000065d: 	paddd	%xmm1, %xmm0
    00000661: 	movd	%xmm0, %eax
    00000665: 	cmpl	%eax, %edx
    00000667: 	je	.Ltmp542 # Offset: 1639
    00000669: 	movq	0xb0(%rsp), %rdx
    00000671: 	movq	%r15, %rsi
    00000674: 	movl	$0x1, %edi
    00000679: 	xorl	%eax, %eax
    0000067b: 	callq	__printf_chk@PLT # Offset: 1659
    00000680: 	movl	iterations(%rip), %ecx
.Ltmp542:
    00000686: 	addl	$0x1, %r14d
    0000068a: 	cmpl	%ecx, %r14d
    0000068d: 	jl	.Ltmp543 # Offset: 1677
.Ltmp540:
    0000068f: 	movq	%r12, %rsi
    00000692: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000699: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1689
    0000069e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006b3: 	je	.Ltmp544 # Offset: 1715
.Ltmp696:
    000006b9: 	movq	-0x20(%rax), %r14
    000006bd: 	callq	clock@PLT # Offset: 1725
    000006c2: 	pxor	%xmm0, %xmm0
    000006c6: 	movq	%rax, end_time(%rip)
    000006cd: 	movq	%r14, %rdi
    000006d0: 	subq	start_time(%rip), %rax
    000006d7: 	cvtsi2sd	%rax, %xmm0
    000006dc: 	divsd	DATAat0x1c370(%rip), %xmm0
    000006e4: 	callq	_Z13record_resultdPKc # Offset: 1764
    000006e9: 	movq	0xb0(%rsp), %rdi
    000006f1: 	cmpq	(%rsp), %rdi
    000006f5: 	je	.Ltmp545 # Offset: 1781
    000006f7: 	movq	0xc0(%rsp), %rax
    000006ff: 	leaq	0x1(%rax), %rsi
    00000703: 	callq	_ZdlPvm@PLT # Offset: 1795
.Ltmp545:
    00000708: 	leaq	DATAat0x1c21d(%rip), %rdx
    0000070f: 	movq	%r13, %rsi
    00000712: 	movq	%r12, %rdi
    00000715: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1813
    0000071a: 	callq	clock@PLT # Offset: 1818
    0000071f: 	movl	iterations(%rip), %ecx
    00000725: 	xorl	%r14d, %r14d
    00000728: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000072f: 	movq	%rax, start_time(%rip)
    00000736: 	testl	%ecx, %ecx
    00000738: 	jle	.Ltmp546 # Offset: 1848
    0000073a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp549:
    00000740: 	movq	%rbp, %rax
    00000743: 	pxor	%xmm0, %xmm0
    00000747: 	nopw	(%rax,%rax) # Size: 9
.Ltmp547:
    00000750: 	paddd	(%rax), %xmm0
    00000754: 	addq	$0x10, %rax
    00000758: 	cmpq	%rbx, %rax
    0000075b: 	jne	.Ltmp547 # Offset: 1883
    0000075d: 	imull	$0x1f40, init_value(%rip), %edx
    00000767: 	movdqa	%xmm0, %xmm1
    0000076b: 	psrldq	$0x8, %xmm1
    00000770: 	paddd	%xmm1, %xmm0
    00000774: 	movdqa	%xmm0, %xmm1
    00000778: 	psrldq	$0x4, %xmm1
    0000077d: 	paddd	%xmm1, %xmm0
    00000781: 	movd	%xmm0, %eax
    00000785: 	cmpl	%eax, %edx
    00000787: 	je	.Ltmp548 # Offset: 1927
    00000789: 	movq	0xb0(%rsp), %rdx
    00000791: 	movq	%r15, %rsi
    00000794: 	movl	$0x1, %edi
    00000799: 	xorl	%eax, %eax
    0000079b: 	callq	__printf_chk@PLT # Offset: 1947
    000007a0: 	movl	iterations(%rip), %ecx
.Ltmp548:
    000007a6: 	addl	$0x1, %r14d
    000007aa: 	cmpl	%ecx, %r14d
    000007ad: 	jl	.Ltmp549 # Offset: 1965
.Ltmp546:
    000007af: 	movq	%r12, %rsi
    000007b2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1977
    000007be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007d3: 	je	.Ltmp550 # Offset: 2003
.Ltmp695:
    000007d9: 	movq	-0x20(%rax), %r14
    000007dd: 	callq	clock@PLT # Offset: 2013
    000007e2: 	pxor	%xmm0, %xmm0
    000007e6: 	movq	%rax, end_time(%rip)
    000007ed: 	movq	%r14, %rdi
    000007f0: 	subq	start_time(%rip), %rax
    000007f7: 	cvtsi2sd	%rax, %xmm0
    000007fc: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000804: 	callq	_Z13record_resultdPKc # Offset: 2052
    00000809: 	movq	0xb0(%rsp), %rdi
    00000811: 	cmpq	(%rsp), %rdi
    00000815: 	je	.Ltmp551 # Offset: 2069
    00000817: 	movq	0xc0(%rsp), %rax
    0000081f: 	leaq	0x1(%rax), %rsi
    00000823: 	callq	_ZdlPvm@PLT # Offset: 2083
.Ltmp551:
    00000828: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000082f: 	movq	%r13, %rsi
    00000832: 	movq	%r12, %rdi
    00000835: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2101
    0000083a: 	callq	clock@PLT # Offset: 2106
    0000083f: 	movl	iterations(%rip), %ecx
    00000845: 	xorl	%r14d, %r14d
    00000848: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000084f: 	movq	%rax, start_time(%rip)
    00000856: 	testl	%ecx, %ecx
    00000858: 	jle	.Ltmp552 # Offset: 2136
    0000085a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp555:
    00000860: 	movq	%rbp, %rax
    00000863: 	pxor	%xmm0, %xmm0
    00000867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp553:
    00000870: 	paddd	(%rax), %xmm0
    00000874: 	addq	$0x10, %rax
    00000878: 	cmpq	%rbx, %rax
    0000087b: 	jne	.Ltmp553 # Offset: 2171
    0000087d: 	imull	$0x1f40, init_value(%rip), %edx
    00000887: 	movdqa	%xmm0, %xmm1
    0000088b: 	psrldq	$0x8, %xmm1
    00000890: 	paddd	%xmm1, %xmm0
    00000894: 	movdqa	%xmm0, %xmm1
    00000898: 	psrldq	$0x4, %xmm1
    0000089d: 	paddd	%xmm1, %xmm0
    000008a1: 	movd	%xmm0, %eax
    000008a5: 	cmpl	%eax, %edx
    000008a7: 	je	.Ltmp554 # Offset: 2215
    000008a9: 	movq	0xb0(%rsp), %rdx
    000008b1: 	movq	%r15, %rsi
    000008b4: 	movl	$0x1, %edi
    000008b9: 	xorl	%eax, %eax
    000008bb: 	callq	__printf_chk@PLT # Offset: 2235
    000008c0: 	movl	iterations(%rip), %ecx
.Ltmp554:
    000008c6: 	addl	$0x1, %r14d
    000008ca: 	cmpl	%ecx, %r14d
    000008cd: 	jl	.Ltmp555 # Offset: 2253
.Ltmp552:
    000008cf: 	movq	%r12, %rsi
    000008d2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008d9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2265
    000008de: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008e5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008f3: 	je	.Ltmp556 # Offset: 2291
.Ltmp694:
    000008f9: 	movq	-0x20(%rax), %r14
    000008fd: 	callq	clock@PLT # Offset: 2301
    00000902: 	pxor	%xmm0, %xmm0
    00000906: 	movq	%rax, end_time(%rip)
    0000090d: 	movq	%r14, %rdi
    00000910: 	subq	start_time(%rip), %rax
    00000917: 	cvtsi2sd	%rax, %xmm0
    0000091c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000924: 	callq	_Z13record_resultdPKc # Offset: 2340
    00000929: 	movq	0xb0(%rsp), %rdi
    00000931: 	cmpq	(%rsp), %rdi
    00000935: 	je	.Ltmp557 # Offset: 2357
    00000937: 	movq	0xc0(%rsp), %rax
    0000093f: 	leaq	0x1(%rax), %rsi
    00000943: 	callq	_ZdlPvm@PLT # Offset: 2371
.Ltmp557:
    00000948: 	leaq	DATAat0x1c24f(%rip), %rdx
    0000094f: 	movq	%r13, %rsi
    00000952: 	movq	%r12, %rdi
    00000955: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2389
    0000095a: 	callq	clock@PLT # Offset: 2394
    0000095f: 	movl	iterations(%rip), %ecx
    00000965: 	xorl	%r14d, %r14d
    00000968: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000096f: 	movq	%rax, start_time(%rip)
    00000976: 	testl	%ecx, %ecx
    00000978: 	jle	.Ltmp558 # Offset: 2424
    0000097a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp561:
    00000980: 	movq	%rbp, %rax
    00000983: 	pxor	%xmm0, %xmm0
    00000987: 	nopw	(%rax,%rax) # Size: 9
.Ltmp559:
    00000990: 	paddd	(%rax), %xmm0
    00000994: 	addq	$0x10, %rax
    00000998: 	cmpq	%rax, %rbx
    0000099b: 	jne	.Ltmp559 # Offset: 2459
    0000099d: 	imull	$0x1f40, init_value(%rip), %edx
    000009a7: 	movdqa	%xmm0, %xmm1
    000009ab: 	psrldq	$0x8, %xmm1
    000009b0: 	paddd	%xmm1, %xmm0
    000009b4: 	movdqa	%xmm0, %xmm1
    000009b8: 	psrldq	$0x4, %xmm1
    000009bd: 	paddd	%xmm1, %xmm0
    000009c1: 	movd	%xmm0, %eax
    000009c5: 	cmpl	%eax, %edx
    000009c7: 	je	.Ltmp560 # Offset: 2503
    000009c9: 	movq	0xb0(%rsp), %rdx
    000009d1: 	movq	%r15, %rsi
    000009d4: 	movl	$0x1, %edi
    000009d9: 	xorl	%eax, %eax
    000009db: 	callq	__printf_chk@PLT # Offset: 2523
    000009e0: 	movl	iterations(%rip), %ecx
.Ltmp560:
    000009e6: 	addl	$0x1, %r14d
    000009ea: 	cmpl	%ecx, %r14d
    000009ed: 	jl	.Ltmp561 # Offset: 2541
.Ltmp558:
    000009ef: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000009fd: 	subq	$0x20, %rax
    00000a01: 	cmpq	%rax, %rbx
    00000a04: 	je	.Ltmp562 # Offset: 2564
    00000a0a: 	leaq	0x10(%rbx), %rdi
    00000a0e: 	movq	0xb8(%rsp), %r14
    00000a16: 	movq	%rdi, (%rbx)
    00000a19: 	movq	0xb0(%rsp), %rbp
    00000a21: 	movq	%rbp, %rax
    00000a24: 	addq	%r14, %rax
    00000a27: 	je	.Ltmp563 # Offset: 2599
    00000a29: 	testq	%rbp, %rbp
    00000a2c: 	je	.Ltmp564 # Offset: 2604
.Ltmp563:
    00000a32: 	movq	%r14, 0x48(%rsp)
    00000a37: 	cmpq	$0xf, %r14
    00000a3b: 	ja	.Ltmp565 # Offset: 2619
    00000a41: 	cmpq	$0x1, %r14
    00000a45: 	jne	.Ltmp566 # Offset: 2629
    00000a4b: 	movzbl	(%rbp), %eax
    00000a4f: 	movb	%al, 0x10(%rbx)
.Ltmp699:
    00000a52: 	movq	%r14, 0x8(%rbx)
    00000a56: 	movb	$0x0, (%rdi,%r14)
    00000a5b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a62: 	addq	$0x20, %rax
    00000a66: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp693:
    00000a6d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a74: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a7b: 	je	.Ltmp567 # Offset: 2683
.Ltmp680:
    00000a81: 	movq	-0x20(%rax), %rbp
    00000a85: 	callq	clock@PLT # Offset: 2693
    00000a8a: 	pxor	%xmm0, %xmm0
    00000a8e: 	movq	%rax, end_time(%rip)
    00000a95: 	movq	%rbp, %rdi
    00000a98: 	subq	start_time(%rip), %rax
    00000a9f: 	cvtsi2sd	%rax, %xmm0
    00000aa4: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000aac: 	callq	_Z13record_resultdPKc # Offset: 2732
    00000ab1: 	movq	0xb0(%rsp), %rdi
    00000ab9: 	cmpq	(%rsp), %rdi
    00000abd: 	je	.Ltmp568 # Offset: 2749
    00000abf: 	movq	0xc0(%rsp), %rax
    00000ac7: 	leaq	0x1(%rax), %rsi
    00000acb: 	callq	_ZdlPvm@PLT # Offset: 2763
.Ltmp568:
    00000ad0: 	leaq	DATAat0x1c265(%rip), %rdx
    00000ad7: 	movq	%r13, %rsi
    00000ada: 	movq	%r12, %rdi
    00000add: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2781
    00000ae2: 	callq	clock@PLT # Offset: 2786
    00000ae7: 	xorl	%ebp, %ebp
    00000ae9: 	imull	$0x1f40, 0x18(%rsp), %ebx
    00000af1: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000af8: 	movq	%rax, start_time(%rip)
    00000aff: 	movl	iterations(%rip), %eax
    00000b05: 	testl	%eax, %eax
    00000b07: 	jle	.Ltmp569 # Offset: 2823
.Ltmp665:
    00000b09: 	imull	$0x1f40, init_value(%rip), %eax
    00000b13: 	cmpl	%eax, %ebx
    00000b15: 	jne	.Ltmp570 # Offset: 2837
.Ltmp569:
    00000b1b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b22: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000b29: 	subq	$0x20, %rax
    00000b2d: 	cmpq	%rax, %rbp
    00000b30: 	je	.Ltmp571 # Offset: 2864
    00000b36: 	leaq	0x10(%rbp), %rdi
    00000b3a: 	movq	0xb8(%rsp), %r14
    00000b42: 	movq	%rdi, (%rbp)
    00000b46: 	movq	0xb0(%rsp), %r15
    00000b4e: 	movq	%r15, %rax
    00000b51: 	addq	%r14, %rax
    00000b54: 	je	.Ltmp572 # Offset: 2900
    00000b56: 	testq	%r15, %r15
    00000b59: 	je	.Ltmp573 # Offset: 2905
.Ltmp572:
    00000b5f: 	movq	%r14, 0x48(%rsp)
    00000b64: 	cmpq	$0xf, %r14
    00000b68: 	ja	.Ltmp574 # Offset: 2920
    00000b6e: 	cmpq	$0x1, %r14
    00000b72: 	jne	.Ltmp575 # Offset: 2930
    00000b78: 	movzbl	(%r15), %eax
    00000b7c: 	movb	%al, 0x10(%rbp)
.Ltmp715:
    00000b7f: 	movq	%r14, 0x8(%rbp)
    00000b83: 	movb	$0x0, (%rdi,%r14)
    00000b88: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b8f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b96: 	addq	$0x20, %rax
    00000b9a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ba1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000ba8: 	je	.Ltmp576 # Offset: 2984
.Ltmp681:
    00000bae: 	movq	-0x20(%rax), %rbp
    00000bb2: 	callq	clock@PLT # Offset: 2994
    00000bb7: 	pxor	%xmm0, %xmm0
    00000bbb: 	movq	%rax, end_time(%rip)
    00000bc2: 	movq	%rbp, %rdi
    00000bc5: 	subq	start_time(%rip), %rax
    00000bcc: 	cvtsi2sd	%rax, %xmm0
    00000bd1: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000bd9: 	callq	_Z13record_resultdPKc # Offset: 3033
    00000bde: 	movq	0xb0(%rsp), %rdi
    00000be6: 	cmpq	(%rsp), %rdi
    00000bea: 	je	.Ltmp577 # Offset: 3050
    00000bec: 	movq	0xc0(%rsp), %rax
    00000bf4: 	leaq	0x1(%rax), %rsi
    00000bf8: 	callq	_ZdlPvm@PLT # Offset: 3064
.Ltmp577:
    00000bfd: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000c04: 	movq	%r13, %rsi
    00000c07: 	movq	%r12, %rdi
    00000c0a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3082
    00000c0f: 	callq	clock@PLT # Offset: 3087
    00000c14: 	movl	iterations(%rip), %r15d
    00000c1b: 	xorl	%ebp, %ebp
    00000c1d: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000c24: 	movq	%rax, start_time(%rip)
    00000c2b: 	testl	%r15d, %r15d
    00000c2e: 	jle	.Ltmp578 # Offset: 3118
.Ltmp664:
    00000c30: 	imull	$0x1f40, init_value(%rip), %eax
    00000c3a: 	cmpl	%eax, %ebx
    00000c3c: 	jne	.Ltmp579 # Offset: 3132
.Ltmp578:
    00000c42: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c49: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000c50: 	subq	$0x20, %rax
    00000c54: 	cmpq	%rax, %rbp
    00000c57: 	je	.Ltmp580 # Offset: 3159
    00000c5d: 	leaq	0x10(%rbp), %rdi
    00000c61: 	movq	0xb8(%rsp), %r14
    00000c69: 	movq	%rdi, (%rbp)
    00000c6d: 	movq	0xb0(%rsp), %r15
    00000c75: 	movq	%r15, %rax
    00000c78: 	addq	%r14, %rax
    00000c7b: 	je	.Ltmp581 # Offset: 3195
    00000c7d: 	testq	%r15, %r15
    00000c80: 	je	.Ltmp582 # Offset: 3200
.Ltmp581:
    00000c86: 	movq	%r14, 0x48(%rsp)
    00000c8b: 	cmpq	$0xf, %r14
    00000c8f: 	ja	.Ltmp583 # Offset: 3215
    00000c95: 	cmpq	$0x1, %r14
    00000c99: 	jne	.Ltmp584 # Offset: 3225
    00000c9f: 	movzbl	(%r15), %eax
    00000ca3: 	movb	%al, 0x10(%rbp)
.Ltmp700:
    00000ca6: 	movq	%r14, 0x8(%rbp)
    00000caa: 	movb	$0x0, (%rdi,%r14)
    00000caf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cb6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cbd: 	addq	$0x20, %rax
    00000cc1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000cc8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000ccf: 	je	.Ltmp585 # Offset: 3279
.Ltmp679:
    00000cd5: 	movq	-0x20(%rax), %rbp
    00000cd9: 	callq	clock@PLT # Offset: 3289
    00000cde: 	pxor	%xmm0, %xmm0
    00000ce2: 	movq	%rax, end_time(%rip)
    00000ce9: 	movq	%rbp, %rdi
    00000cec: 	subq	start_time(%rip), %rax
    00000cf3: 	cvtsi2sd	%rax, %xmm0
    00000cf8: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d00: 	callq	_Z13record_resultdPKc # Offset: 3328
    00000d05: 	movq	0xb0(%rsp), %rdi
    00000d0d: 	cmpq	(%rsp), %rdi
    00000d11: 	je	.Ltmp586 # Offset: 3345
    00000d13: 	movq	0xc0(%rsp), %rax
    00000d1b: 	leaq	0x1(%rax), %rsi
    00000d1f: 	callq	_ZdlPvm@PLT # Offset: 3359
.Ltmp586:
    00000d24: 	leaq	DATAat0x1c289(%rip), %rdx
    00000d2b: 	movq	%r13, %rsi
    00000d2e: 	movq	%r12, %rdi
    00000d31: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3377
    00000d36: 	callq	clock@PLT # Offset: 3382
    00000d3b: 	movl	iterations(%rip), %r11d
    00000d42: 	xorl	%ebp, %ebp
    00000d44: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000d4b: 	movq	%rax, start_time(%rip)
    00000d52: 	testl	%r11d, %r11d
    00000d55: 	jle	.Ltmp587 # Offset: 3413
    00000d57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp666:
    00000d60: 	imull	$0x1f40, init_value(%rip), %eax
    00000d6a: 	cmpl	%eax, %ebx
    00000d6c: 	jne	.Ltmp588 # Offset: 3436
.Ltmp587:
    00000d72: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d79: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000d80: 	subq	$0x20, %rax
    00000d84: 	cmpq	%rax, %rbp
    00000d87: 	je	.Ltmp589 # Offset: 3463
    00000d8d: 	leaq	0x10(%rbp), %rdi
    00000d91: 	movq	0xb8(%rsp), %r14
    00000d99: 	movq	%rdi, (%rbp)
    00000d9d: 	movq	0xb0(%rsp), %r15
    00000da5: 	movq	%r15, %rax
    00000da8: 	addq	%r14, %rax
    00000dab: 	je	.Ltmp590 # Offset: 3499
    00000dad: 	testq	%r15, %r15
    00000db0: 	je	.Ltmp591 # Offset: 3504
.Ltmp590:
    00000db6: 	movq	%r14, 0x48(%rsp)
    00000dbb: 	cmpq	$0xf, %r14
    00000dbf: 	ja	.Ltmp592 # Offset: 3519
    00000dc5: 	cmpq	$0x1, %r14
    00000dc9: 	jne	.Ltmp593 # Offset: 3529
    00000dcf: 	movzbl	(%r15), %eax
    00000dd3: 	movb	%al, 0x10(%rbp)
.Ltmp714:
    00000dd6: 	movq	%r14, 0x8(%rbp)
    00000dda: 	movb	$0x0, (%rdi,%r14)
    00000ddf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000de6: 	addq	$0x20, %rax
    00000dea: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp678:
    00000df1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000df8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dff: 	je	.Ltmp594 # Offset: 3583
.Ltmp677:
    00000e05: 	movq	-0x20(%rax), %rbp
    00000e09: 	callq	clock@PLT # Offset: 3593
    00000e0e: 	pxor	%xmm0, %xmm0
    00000e12: 	movq	%rax, end_time(%rip)
    00000e19: 	movq	%rbp, %rdi
    00000e1c: 	subq	start_time(%rip), %rax
    00000e23: 	cvtsi2sd	%rax, %xmm0
    00000e28: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e30: 	callq	_Z13record_resultdPKc # Offset: 3632
    00000e35: 	movq	0xb0(%rsp), %rdi
    00000e3d: 	cmpq	(%rsp), %rdi
    00000e41: 	je	.Ltmp595 # Offset: 3649
    00000e43: 	movq	0xc0(%rsp), %rax
    00000e4b: 	leaq	0x1(%rax), %rsi
    00000e4f: 	callq	_ZdlPvm@PLT # Offset: 3663
.Ltmp595:
    00000e54: 	leaq	DATAat0x1c298(%rip), %rdx
    00000e5b: 	movq	%r13, %rsi
    00000e5e: 	movq	%r12, %rdi
    00000e61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3681
    00000e66: 	movq	0x38(%rsp), %rdi
    00000e6b: 	movq	%r12, %rdx
    00000e6e: 	movl	$0x1f40, %esi
    00000e73: 	callq	_Z22test_struct4_deref_optIj12test_struct1IjEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3699
    00000e78: 	movq	0xb0(%rsp), %rdi
    00000e80: 	cmpq	(%rsp), %rdi
    00000e84: 	je	.Ltmp596 # Offset: 3716
    00000e86: 	movq	0xc0(%rsp), %rax
    00000e8e: 	leaq	0x1(%rax), %rsi
    00000e92: 	callq	_ZdlPvm@PLT # Offset: 3730
.Ltmp596:
    00000e97: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000e9e: 	movq	%r13, %rsi
    00000ea1: 	movq	%r12, %rdi
    00000ea4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3748
    00000ea9: 	callq	clock@PLT # Offset: 3753
    00000eae: 	movl	iterations(%rip), %r10d
    00000eb5: 	xorl	%ebp, %ebp
    00000eb7: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000ebe: 	movq	%rax, start_time(%rip)
    00000ec5: 	testl	%r10d, %r10d
    00000ec8: 	jle	.Ltmp597 # Offset: 3784
    00000eca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp673:
    00000ed0: 	imull	$0x1f40, init_value(%rip), %eax
    00000eda: 	cmpl	%eax, %ebx
    00000edc: 	jne	.Ltmp598 # Offset: 3804
.Ltmp597:
    00000ee2: 	movq	%r12, %rsi
    00000ee5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000eec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3820
    00000ef1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ef8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000eff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f06: 	je	.Ltmp599 # Offset: 3846
.Ltmp686:
    00000f0c: 	movq	-0x20(%rax), %rbp
    00000f10: 	callq	clock@PLT # Offset: 3856
    00000f15: 	pxor	%xmm0, %xmm0
    00000f19: 	movq	%rax, end_time(%rip)
    00000f20: 	movq	%rbp, %rdi
    00000f23: 	subq	start_time(%rip), %rax
    00000f2a: 	cvtsi2sd	%rax, %xmm0
    00000f2f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000f37: 	callq	_Z13record_resultdPKc # Offset: 3895
    00000f3c: 	movq	0xb0(%rsp), %rdi
    00000f44: 	cmpq	(%rsp), %rdi
    00000f48: 	je	.Ltmp600 # Offset: 3912
    00000f4a: 	movq	0xc0(%rsp), %rax
    00000f52: 	leaq	0x1(%rax), %rsi
    00000f56: 	callq	_ZdlPvm@PLT # Offset: 3926
.Ltmp600:
    00000f5b: 	leaq	DATAat0x1c2be(%rip), %rdx
    00000f62: 	movq	%r13, %rsi
    00000f65: 	movq	%r12, %rdi
    00000f68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3944
    00000f6d: 	callq	clock@PLT # Offset: 3949
    00000f72: 	movl	iterations(%rip), %r9d
    00000f79: 	xorl	%ebp, %ebp
    00000f7b: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000f82: 	movq	%rax, start_time(%rip)
    00000f89: 	testl	%r9d, %r9d
    00000f8c: 	jle	.Ltmp601 # Offset: 3980
    00000f8e: 	nop # Size: 2
.Ltmp672:
    00000f90: 	imull	$0x1f40, init_value(%rip), %eax
    00000f9a: 	cmpl	%eax, %ebx
    00000f9c: 	jne	.Ltmp602 # Offset: 3996
.Ltmp601:
    00000fa2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fa9: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000fb0: 	subq	$0x20, %rax
    00000fb4: 	cmpq	%rax, %rbx
    00000fb7: 	je	.Ltmp603 # Offset: 4023
    00000fbd: 	leaq	0x10(%rbx), %rdi
    00000fc1: 	movq	0xb8(%rsp), %r14
    00000fc9: 	movq	%rdi, (%rbx)
    00000fcc: 	movq	0xb0(%rsp), %rbp
    00000fd4: 	movq	%rbp, %rax
    00000fd7: 	addq	%r14, %rax
    00000fda: 	je	.Ltmp604 # Offset: 4058
    00000fdc: 	testq	%rbp, %rbp
    00000fdf: 	je	.Ltmp605 # Offset: 4063
.Ltmp604:
    00000fe5: 	movq	%r14, 0x48(%rsp)
    00000fea: 	cmpq	$0xf, %r14
    00000fee: 	ja	.Ltmp606 # Offset: 4078
    00000ff4: 	cmpq	$0x1, %r14
    00000ff8: 	jne	.Ltmp607 # Offset: 4088
    00000ffe: 	movzbl	(%rbp), %eax
    00001002: 	movb	%al, 0x10(%rbx)
.Ltmp706:
    00001005: 	movq	%r14, 0x8(%rbx)
    00001009: 	movb	$0x0, (%rdi,%r14)
    0000100e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001015: 	addq	$0x20, %rax
    00001019: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp685:
    00001020: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001027: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000102e: 	je	.Ltmp608 # Offset: 4142
.Ltmp675:
    00001034: 	movq	-0x20(%rax), %rbp
    00001038: 	callq	clock@PLT # Offset: 4152
    0000103d: 	pxor	%xmm0, %xmm0
    00001041: 	movq	%rax, end_time(%rip)
    00001048: 	movq	%rbp, %rdi
    0000104b: 	subq	start_time(%rip), %rax
    00001052: 	cvtsi2sd	%rax, %xmm0
    00001057: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000105f: 	callq	_Z13record_resultdPKc # Offset: 4191
    00001064: 	movq	0xb0(%rsp), %rdi
    0000106c: 	cmpq	(%rsp), %rdi
    00001070: 	je	.Ltmp609 # Offset: 4208
    00001072: 	movq	0xc0(%rsp), %rax
    0000107a: 	leaq	0x1(%rax), %rsi
    0000107e: 	callq	_ZdlPvm@PLT # Offset: 4222
.Ltmp609:
    00001083: 	leaq	DATAat0x1c225(%rip), %rdx
    0000108a: 	movq	%r13, %rsi
    0000108d: 	movq	%r12, %rdi
    00001090: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4240
    00001095: 	callq	clock@PLT # Offset: 4245
    0000109a: 	movl	iterations(%rip), %r8d
    000010a1: 	xorl	%ebp, %ebp
    000010a3: 	leaq	DATAat0x1c1c8(%rip), %r14
    000010aa: 	movq	%rax, start_time(%rip)
    000010b1: 	movq	0x20(%rsp), %rax
    000010b6: 	leaq	(,%rax,8), %r15
    000010be: 	movq	0x270(%rsp,%r15), %rax
    000010c6: 	movq	0x180(%rsp,%rax,8), %rax
    000010ce: 	imull	$0x1f40, 0x100(%rsp,%rax,4), %ebx
    000010d9: 	testl	%r8d, %r8d
    000010dc: 	jle	.Ltmp610 # Offset: 4316
.Ltmp674:
    000010de: 	imull	$0x1f40, init_value(%rip), %eax
    000010e8: 	cmpl	%eax, %ebx
    000010ea: 	jne	.Ltmp611 # Offset: 4330
.Ltmp610:
    000010f0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010f7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000010fe: 	subq	$0x20, %rax
    00001102: 	cmpq	%rax, %rbp
    00001105: 	je	.Ltmp612 # Offset: 4357
    0000110b: 	leaq	0x10(%rbp), %rdi
    0000110f: 	movq	0xb8(%rsp), %r14
    00001117: 	movq	%rdi, (%rbp)
    0000111b: 	movq	0xb0(%rsp), %rax
    00001123: 	movq	%rax, %rsi
    00001126: 	movq	%rax, 0x18(%rsp)
    0000112b: 	addq	%r14, %rsi
    0000112e: 	je	.Ltmp613 # Offset: 4398
    00001130: 	testq	%rax, %rax
    00001133: 	je	.Ltmp614 # Offset: 4403
.Ltmp613:
    00001139: 	movq	%r14, 0x48(%rsp)
    0000113e: 	cmpq	$0xf, %r14
    00001142: 	ja	.Ltmp615 # Offset: 4418
    00001148: 	cmpq	$0x1, %r14
    0000114c: 	jne	.Ltmp616 # Offset: 4428
    00001152: 	movq	0x18(%rsp), %rax
    00001157: 	movzbl	(%rax), %eax
    0000115a: 	movb	%al, 0x10(%rbp)
.Ltmp704:
    0000115d: 	movq	%r14, 0x8(%rbp)
    00001161: 	movb	$0x0, (%rdi,%r14)
    00001166: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000116d: 	addq	$0x20, %rax
    00001171: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp692:
    00001178: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000117f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001186: 	je	.Ltmp617 # Offset: 4486
.Ltmp691:
    0000118c: 	movq	-0x20(%rax), %rbp
    00001190: 	callq	clock@PLT # Offset: 4496
    00001195: 	pxor	%xmm0, %xmm0
    00001199: 	movq	%rax, end_time(%rip)
    000011a0: 	movq	%rbp, %rdi
    000011a3: 	subq	start_time(%rip), %rax
    000011aa: 	cvtsi2sd	%rax, %xmm0
    000011af: 	divsd	DATAat0x1c370(%rip), %xmm0
    000011b7: 	callq	_Z13record_resultdPKc # Offset: 4535
    000011bc: 	movq	0xb0(%rsp), %rdi
    000011c4: 	cmpq	(%rsp), %rdi
    000011c8: 	je	.Ltmp618 # Offset: 4552
    000011ca: 	movq	0xc0(%rsp), %rax
    000011d2: 	leaq	0x1(%rax), %rsi
    000011d6: 	callq	_ZdlPvm@PLT # Offset: 4566
.Ltmp618:
    000011db: 	leaq	DATAat0x1c242(%rip), %rdx
    000011e2: 	movq	%r13, %rsi
    000011e5: 	movq	%r12, %rdi
    000011e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4584
    000011ed: 	callq	clock@PLT # Offset: 4589
    000011f2: 	movl	iterations(%rip), %edi
    000011f8: 	xorl	%ebp, %ebp
    000011fa: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001201: 	movq	%rax, start_time(%rip)
    00001208: 	testl	%edi, %edi
    0000120a: 	jle	.Ltmp619 # Offset: 4618
.Ltmp671:
    0000120c: 	imull	$0x1f40, init_value(%rip), %eax
    00001216: 	cmpl	%eax, %ebx
    00001218: 	jne	.Ltmp620 # Offset: 4632
.Ltmp619:
    0000121e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001225: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000122c: 	subq	$0x20, %rax
    00001230: 	cmpq	%rax, %rbp
    00001233: 	je	.Ltmp621 # Offset: 4659
    00001239: 	leaq	0x10(%rbp), %rdi
    0000123d: 	movq	0xb8(%rsp), %r14
    00001245: 	movq	%rdi, (%rbp)
    00001249: 	movq	0xb0(%rsp), %rax
    00001251: 	movq	%rax, %rsi
    00001254: 	movq	%rax, 0x18(%rsp)
    00001259: 	addq	%r14, %rsi
    0000125c: 	je	.Ltmp622 # Offset: 4700
    0000125e: 	testq	%rax, %rax
    00001261: 	je	.Ltmp623 # Offset: 4705
.Ltmp622:
    00001267: 	movq	%r14, 0x48(%rsp)
    0000126c: 	cmpq	$0xf, %r14
    00001270: 	ja	.Ltmp624 # Offset: 4720
    00001276: 	cmpq	$0x1, %r14
    0000127a: 	jne	.Ltmp625 # Offset: 4730
    00001280: 	movq	0x18(%rsp), %rax
    00001285: 	movzbl	(%rax), %eax
    00001288: 	movb	%al, 0x10(%rbp)
.Ltmp710:
    0000128b: 	movq	%r14, 0x8(%rbp)
    0000128f: 	movb	$0x0, (%rdi,%r14)
    00001294: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000129b: 	addq	$0x20, %rax
    0000129f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp690:
    000012a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012b4: 	je	.Ltmp626 # Offset: 4788
.Ltmp688:
    000012ba: 	movq	-0x20(%rax), %rbp
    000012be: 	callq	clock@PLT # Offset: 4798
    000012c3: 	pxor	%xmm0, %xmm0
    000012c7: 	movq	%rax, end_time(%rip)
    000012ce: 	movq	%rbp, %rdi
    000012d1: 	subq	start_time(%rip), %rax
    000012d8: 	cvtsi2sd	%rax, %xmm0
    000012dd: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012e5: 	callq	_Z13record_resultdPKc # Offset: 4837
    000012ea: 	movq	0xb0(%rsp), %rdi
    000012f2: 	cmpq	(%rsp), %rdi
    000012f6: 	je	.Ltmp627 # Offset: 4854
    000012f8: 	movq	0xc0(%rsp), %rax
    00001300: 	leaq	0x1(%rax), %rsi
    00001304: 	callq	_ZdlPvm@PLT # Offset: 4868
.Ltmp627:
    00001309: 	leaq	DATAat0x1c257(%rip), %rdx
    00001310: 	movq	%r13, %rsi
    00001313: 	movq	%r12, %rdi
    00001316: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4886
    0000131b: 	callq	clock@PLT # Offset: 4891
    00001320: 	movl	iterations(%rip), %esi
    00001326: 	xorl	%ebp, %ebp
    00001328: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000132f: 	movq	%rax, start_time(%rip)
    00001336: 	testl	%esi, %esi
    00001338: 	jle	.Ltmp628 # Offset: 4920
.Ltmp669:
    0000133a: 	imull	$0x1f40, init_value(%rip), %eax
    00001344: 	cmpl	%eax, %ebx
    00001346: 	jne	.Ltmp629 # Offset: 4934
.Ltmp628:
    0000134c: 	movq	%r12, %rsi
    0000134f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001356: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4950
    0000135b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001362: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001369: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001370: 	je	.Ltmp630 # Offset: 4976
.Ltmp689:
    00001376: 	movq	-0x20(%rax), %rbp
    0000137a: 	callq	clock@PLT # Offset: 4986
    0000137f: 	pxor	%xmm0, %xmm0
    00001383: 	movq	%rax, end_time(%rip)
    0000138a: 	movq	%rbp, %rdi
    0000138d: 	subq	start_time(%rip), %rax
    00001394: 	cvtsi2sd	%rax, %xmm0
    00001399: 	divsd	DATAat0x1c370(%rip), %xmm0
    000013a1: 	callq	_Z13record_resultdPKc # Offset: 5025
    000013a6: 	movq	0xb0(%rsp), %rdi
    000013ae: 	cmpq	(%rsp), %rdi
    000013b2: 	je	.Ltmp631 # Offset: 5042
    000013b4: 	movq	0xc0(%rsp), %rax
    000013bc: 	leaq	0x1(%rax), %rsi
    000013c0: 	callq	_ZdlPvm@PLT # Offset: 5056
.Ltmp631:
    000013c5: 	leaq	DATAat0x1c338(%rip), %rdx
    000013cc: 	movq	%r13, %rsi
    000013cf: 	movq	%r12, %rdi
    000013d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5074
    000013d7: 	movq	0x20(%rsp), %rsi
    000013dc: 	leaq	0xd0(%rsp), %rdi
    000013e4: 	movq	%r12, %rcx
    000013e7: 	movl	$0x1f40, %edx
    000013ec: 	callq	_Z31test_struct_arrayList_deref_optIj21test_struct_arrayListIjEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5100
    000013f1: 	movq	0xb0(%rsp), %rdi
    000013f9: 	cmpq	(%rsp), %rdi
    000013fd: 	je	.Ltmp632 # Offset: 5117
    000013ff: 	movq	0xc0(%rsp), %rax
    00001407: 	leaq	0x1(%rax), %rsi
    0000140b: 	callq	_ZdlPvm@PLT # Offset: 5131
.Ltmp632:
    00001410: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001417: 	movq	%r13, %rsi
    0000141a: 	movq	%r12, %rdi
    0000141d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5149
    00001422: 	callq	clock@PLT # Offset: 5154
    00001427: 	movl	iterations(%rip), %ecx
    0000142d: 	movq	%rax, start_time(%rip)
    00001434: 	testl	%ecx, %ecx
    00001436: 	jle	.Ltmp633 # Offset: 5174
    00001438: 	movq	0x180(%rsp,%r15), %rax
    00001440: 	xorl	%ebx, %ebx
    00001442: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001449: 	movq	0x270(%rsp,%rax,8), %rax
    00001451: 	movq	0x180(%rsp,%rax,8), %rax
    00001459: 	movq	0x270(%rsp,%rax,8), %rax
    00001461: 	movq	0x180(%rsp,%rax,8), %rax
    00001469: 	imull	$0x1f40, 0x100(%rsp,%rax,4), %ebp
    00001474: 	nopl	(%rax) # Size: 4
.Ltmp670:
    00001478: 	imull	$0x1f40, init_value(%rip), %eax
    00001482: 	cmpl	%ebp, %eax
    00001484: 	jne	.Ltmp634 # Offset: 5252
.Ltmp633:
    0000148a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001491: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001498: 	subq	$0x20, %rax
    0000149c: 	cmpq	%rax, %rbx
    0000149f: 	je	.Ltmp635 # Offset: 5279
    000014a5: 	leaq	0x10(%rbx), %rdi
    000014a9: 	movq	0xb8(%rsp), %r14
    000014b1: 	movq	%rdi, (%rbx)
    000014b4: 	movq	0xb0(%rsp), %rbp
    000014bc: 	movq	%rbp, %rax
    000014bf: 	addq	%r14, %rax
    000014c2: 	je	.Ltmp636 # Offset: 5314
    000014c4: 	testq	%rbp, %rbp
    000014c7: 	je	.Ltmp637 # Offset: 5319
.Ltmp636:
    000014cd: 	movq	%r14, 0x48(%rsp)
    000014d2: 	cmpq	$0xf, %r14
    000014d6: 	ja	.Ltmp638 # Offset: 5334
    000014dc: 	cmpq	$0x1, %r14
    000014e0: 	jne	.Ltmp639 # Offset: 5344
    000014e6: 	movzbl	(%rbp), %eax
    000014ea: 	movb	%al, 0x10(%rbx)
.Ltmp708:
    000014ed: 	movq	%r14, 0x8(%rbx)
    000014f1: 	movb	$0x0, (%rdi,%r14)
    000014f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014fd: 	addq	$0x20, %rax
    00001501: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp684:
    00001508: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000150f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001516: 	je	.Ltmp640 # Offset: 5398
.Ltmp683:
    0000151c: 	movq	-0x20(%rax), %rbp
    00001520: 	callq	clock@PLT # Offset: 5408
    00001525: 	pxor	%xmm0, %xmm0
    00001529: 	movq	%rax, end_time(%rip)
    00001530: 	movq	%rbp, %rdi
    00001533: 	subq	start_time(%rip), %rax
    0000153a: 	cvtsi2sd	%rax, %xmm0
    0000153f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001547: 	callq	_Z13record_resultdPKc # Offset: 5447
    0000154c: 	movq	0xb0(%rsp), %rdi
    00001554: 	cmpq	(%rsp), %rdi
    00001558: 	je	.Ltmp641 # Offset: 5464
    0000155a: 	movq	0xc0(%rsp), %rax
    00001562: 	leaq	0x1(%rax), %rsi
    00001566: 	callq	_ZdlPvm@PLT # Offset: 5478
.Ltmp641:
    0000156b: 	leaq	DATAat0x1c2e7(%rip), %rdx
    00001572: 	movq	%r13, %rsi
    00001575: 	movq	%r12, %rdi
    00001578: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5496
    0000157d: 	callq	clock@PLT # Offset: 5501
    00001582: 	movl	iterations(%rip), %edx
    00001588: 	movq	%rax, start_time(%rip)
    0000158f: 	testl	%edx, %edx
    00001591: 	jle	.Ltmp642 # Offset: 5521
    00001593: 	movq	0x180(%rsp,%r15), %rax
    0000159b: 	xorl	%ebx, %ebx
    0000159d: 	leaq	DATAat0x1c1c8(%rip), %r14
    000015a4: 	movq	0x270(%rsp,%rax,8), %rax
    000015ac: 	movq	0x180(%rsp,%rax,8), %rax
    000015b4: 	movq	0x270(%rsp,%rax,8), %rax
    000015bc: 	movq	0x180(%rsp,%rax,8), %rax
    000015c4: 	imull	$0x1f40, 0x100(%rsp,%rax,4), %ebp
    000015cf: 	nop # Size: 1
.Ltmp668:
    000015d0: 	imull	$0x1f40, init_value(%rip), %eax
    000015da: 	cmpl	%ebp, %eax
    000015dc: 	jne	.Ltmp643 # Offset: 5596
.Ltmp642:
    000015e2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000015f0: 	subq	$0x20, %rax
    000015f4: 	cmpq	%rax, %rbx
    000015f7: 	je	.Ltmp644 # Offset: 5623
    000015fd: 	leaq	0x10(%rbx), %rdi
    00001601: 	movq	0xb8(%rsp), %r14
    00001609: 	movq	%rdi, (%rbx)
    0000160c: 	movq	0xb0(%rsp), %rbp
    00001614: 	movq	%rbp, %rax
    00001617: 	addq	%r14, %rax
    0000161a: 	je	.Ltmp645 # Offset: 5658
    0000161c: 	testq	%rbp, %rbp
    0000161f: 	je	.Ltmp646 # Offset: 5663
.Ltmp645:
    00001625: 	movq	%r14, 0x48(%rsp)
    0000162a: 	cmpq	$0xf, %r14
    0000162e: 	ja	.Ltmp647 # Offset: 5678
    00001634: 	cmpq	$0x1, %r14
    00001638: 	jne	.Ltmp648 # Offset: 5688
    0000163e: 	movzbl	(%rbp), %eax
    00001642: 	movb	%al, 0x10(%rbx)
.Ltmp702:
    00001645: 	movq	%r14, 0x8(%rbx)
    00001649: 	movb	$0x0, (%rdi,%r14)
    0000164e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001655: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000165c: 	addq	$0x20, %rax
    00001660: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001667: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000166e: 	je	.Ltmp649 # Offset: 5742
.Ltmp687:
    00001674: 	movq	-0x20(%rax), %rbp
    00001678: 	callq	clock@PLT # Offset: 5752
    0000167d: 	pxor	%xmm0, %xmm0
    00001681: 	movq	%rax, end_time(%rip)
    00001688: 	movq	%rbp, %rdi
    0000168b: 	subq	start_time(%rip), %rax
    00001692: 	cvtsi2sd	%rax, %xmm0
    00001697: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000169f: 	callq	_Z13record_resultdPKc # Offset: 5791
    000016a4: 	movq	0xb0(%rsp), %rdi
    000016ac: 	cmpq	(%rsp), %rdi
    000016b0: 	je	.Ltmp650 # Offset: 5808
    000016b2: 	movq	0xc0(%rsp), %rax
    000016ba: 	leaq	0x1(%rax), %rsi
    000016be: 	callq	_ZdlPvm@PLT # Offset: 5822
.Ltmp650:
    000016c3: 	leaq	DATAat0x1c301(%rip), %rdx
    000016ca: 	movq	%r13, %rsi
    000016cd: 	movq	%r12, %rdi
    000016d0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5840
    000016d5: 	callq	clock@PLT # Offset: 5845
    000016da: 	movq	%rax, start_time(%rip)
    000016e1: 	movl	iterations(%rip), %eax
    000016e7: 	testl	%eax, %eax
    000016e9: 	jle	.Ltmp651 # Offset: 5865
    000016eb: 	movq	0x180(%rsp,%r15), %rax
    000016f3: 	xorl	%ebx, %ebx
    000016f5: 	leaq	DATAat0x1c1c8(%rip), %r14
    000016fc: 	movq	0x270(%rsp,%rax,8), %rax
    00001704: 	movq	0x180(%rsp,%rax,8), %rax
    0000170c: 	movq	0x270(%rsp,%rax,8), %rax
    00001714: 	movq	0x180(%rsp,%rax,8), %rax
    0000171c: 	imull	$0x1f40, 0x100(%rsp,%rax,4), %ebp
    00001727: 	nopw	(%rax,%rax) # Size: 9
.Ltmp667:
    00001730: 	imull	$0x1f40, init_value(%rip), %eax
    0000173a: 	cmpl	%ebp, %eax
    0000173c: 	jne	.Ltmp652 # Offset: 5948
.Ltmp651:
    00001742: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001749: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001750: 	subq	$0x20, %rax
    00001754: 	cmpq	%rax, %rbx
    00001757: 	je	.Ltmp653 # Offset: 5975
    0000175d: 	leaq	0x10(%rbx), %rdi
    00001761: 	movq	0xb8(%rsp), %r14
    00001769: 	movq	%rdi, (%rbx)
    0000176c: 	movq	0xb0(%rsp), %rbp
    00001774: 	movq	%rbp, %rax
    00001777: 	addq	%r14, %rax
    0000177a: 	je	.Ltmp654 # Offset: 6010
    0000177c: 	testq	%rbp, %rbp
    0000177f: 	je	.Ltmp655 # Offset: 6015
.Ltmp654:
    00001785: 	movq	%r14, 0x48(%rsp)
    0000178a: 	cmpq	$0xf, %r14
    0000178e: 	ja	.Ltmp656 # Offset: 6030
    00001794: 	cmpq	$0x1, %r14
    00001798: 	jne	.Ltmp657 # Offset: 6040
    0000179e: 	movzbl	(%rbp), %eax
    000017a2: 	movb	%al, 0x10(%rbx)
.Ltmp712:
    000017a5: 	movq	%r14, 0x8(%rbx)
    000017a9: 	movb	$0x0, (%rdi,%r14)
    000017ae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017b5: 	addq	$0x20, %rax
    000017b9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp698:
    000017c0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ce: 	je	.Ltmp658 # Offset: 6094
.Ltmp682:
    000017d4: 	movq	-0x20(%rax), %rbp
    000017d8: 	callq	clock@PLT # Offset: 6104
    000017dd: 	pxor	%xmm0, %xmm0
    000017e1: 	movq	%rax, end_time(%rip)
    000017e8: 	movq	%rbp, %rdi
    000017eb: 	subq	start_time(%rip), %rax
    000017f2: 	cvtsi2sd	%rax, %xmm0
    000017f7: 	divsd	DATAat0x1c370(%rip), %xmm0
    000017ff: 	callq	_Z13record_resultdPKc # Offset: 6143
    00001804: 	movq	0xb0(%rsp), %rdi
    0000180c: 	cmpq	(%rsp), %rdi
    00001810: 	je	.Ltmp659 # Offset: 6160
    00001812: 	movq	0xc0(%rsp), %rax
    0000181a: 	leaq	0x1(%rax), %rsi
    0000181e: 	callq	_ZdlPvm@PLT # Offset: 6174
.Ltmp659:
    00001823: 	leaq	DATAat0x1c31b(%rip), %rdx
    0000182a: 	movq	%r13, %rsi
    0000182d: 	movq	%r12, %rdi
    00001830: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6192
    00001835: 	movl	iterations(%rip), %edx
    0000183b: 	xorl	%r8d, %r8d
    0000183e: 	xorl	%ecx, %ecx
    00001840: 	movl	$0x1f40, %esi
    00001845: 	movq	0xb0(%rsp), %rdi
    0000184d: 	callq	_Z9summarizePKciiii # Offset: 6221
    00001852: 	movq	0xb0(%rsp), %rdi
    0000185a: 	cmpq	(%rsp), %rdi
    0000185e: 	je	.Ltmp660 # Offset: 6238
    00001860: 	movq	0xc0(%rsp), %rax
    00001868: 	leaq	0x1(%rax), %rsi
    0000186c: 	callq	_ZdlPvm@PLT # Offset: 6252
.Ltmp660:
    00001871: 	movq	0x90(%rsp), %rdi
    00001879: 	cmpq	0x30(%rsp), %rdi
    0000187e: 	je	.Ltmp661 # Offset: 6270
    00001880: 	movq	0xa0(%rsp), %rax
    00001888: 	leaq	0x1(%rax), %rsi
    0000188c: 	callq	_ZdlPvm@PLT # Offset: 6284
.Ltmp661:
    00001891: 	movq	0x8068(%rsp), %rax
    00001899: 	subq	%fs:0x28, %rax
    000018a2: 	jne	.Ltmp662 # Offset: 6306
    000018a8: 	addq	$0x8078, %rsp
    000018af: 	popq	%rbx
    000018b0: 	popq	%rbp
    000018b1: 	popq	%r12
    000018b3: 	popq	%r13
    000018b5: 	popq	%r14
    000018b7: 	popq	%r15
    000018b9: 	retq # Offset: 6329
.Ltmp530:
    000018ba: 	leaq	0x48(%rsp), %rsi
    000018bf: 	xorl	%edx, %edx
    000018c1: 	movq	%r15, %rdi
    000018c4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6340
    000018c9: 	movq	%rax, (%r15)
    000018cc: 	movq	%rax, %rdi
    000018cf: 	movq	0x48(%rsp), %rax
    000018d4: 	movq	%rax, 0x10(%r15)
.Ltmp709:
    000018d8: 	movq	(%rsp), %rsi
    000018dc: 	movq	%r14, %rdx
    000018df: 	callq	memcpy@PLT # Offset: 6367
    000018e4: 	movq	0x48(%rsp), %r14
    000018e9: 	movq	(%r15), %rdi
    000018ec: 	jmp	.Ltmp663 # Offset: 6380
    000018f1: 	nopl	(%rax) # Size: 7
.Ltmp579:
    000018f8: 	movq	0xb0(%rsp), %rdx
    00001900: 	movq	%r14, %rsi
    00001903: 	movl	$0x1, %edi
    00001908: 	xorl	%eax, %eax
    0000190a: 	callq	__printf_chk@PLT # Offset: 6410
    0000190f: 	addl	$0x1, %ebp
    00001912: 	cmpl	iterations(%rip), %ebp
    00001918: 	jl	.Ltmp664 # Offset: 6424
    0000191e: 	jmp	.Ltmp578 # Offset: 6430
    00001923: 	nopl	(%rax,%rax) # Size: 5
.Ltmp570:
    00001928: 	movq	0xb0(%rsp), %rdx
    00001930: 	movq	%r14, %rsi
    00001933: 	movl	$0x1, %edi
    00001938: 	xorl	%eax, %eax
    0000193a: 	callq	__printf_chk@PLT # Offset: 6458
    0000193f: 	addl	$0x1, %ebp
    00001942: 	cmpl	iterations(%rip), %ebp
    00001948: 	jl	.Ltmp665 # Offset: 6472
    0000194e: 	jmp	.Ltmp569 # Offset: 6478
    00001953: 	nopl	(%rax,%rax) # Size: 5
.Ltmp588:
    00001958: 	movq	0xb0(%rsp), %rdx
    00001960: 	movq	%r14, %rsi
    00001963: 	movl	$0x1, %edi
    00001968: 	xorl	%eax, %eax
    0000196a: 	callq	__printf_chk@PLT # Offset: 6506
    0000196f: 	addl	$0x1, %ebp
    00001972: 	cmpl	iterations(%rip), %ebp
    00001978: 	jl	.Ltmp666 # Offset: 6520
    0000197e: 	jmp	.Ltmp587 # Offset: 6526
    00001983: 	nopl	(%rax,%rax) # Size: 5
.Ltmp652:
    00001988: 	movq	0xb0(%rsp), %rdx
    00001990: 	movq	%r14, %rsi
    00001993: 	movl	$0x1, %edi
    00001998: 	xorl	%eax, %eax
    0000199a: 	callq	__printf_chk@PLT # Offset: 6554
    0000199f: 	addl	$0x1, %ebx
    000019a2: 	cmpl	iterations(%rip), %ebx
    000019a8: 	jl	.Ltmp667 # Offset: 6568
    000019ae: 	jmp	.Ltmp651 # Offset: 6574
    000019b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp643:
    000019b8: 	movq	0xb0(%rsp), %rdx
    000019c0: 	movq	%r14, %rsi
    000019c3: 	movl	$0x1, %edi
    000019c8: 	xorl	%eax, %eax
    000019ca: 	callq	__printf_chk@PLT # Offset: 6602
    000019cf: 	addl	$0x1, %ebx
    000019d2: 	cmpl	iterations(%rip), %ebx
    000019d8: 	jl	.Ltmp668 # Offset: 6616
    000019de: 	jmp	.Ltmp642 # Offset: 6622
    000019e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp629:
    000019e8: 	movq	0xb0(%rsp), %rdx
    000019f0: 	movq	%r14, %rsi
    000019f3: 	movl	$0x1, %edi
    000019f8: 	xorl	%eax, %eax
    000019fa: 	callq	__printf_chk@PLT # Offset: 6650
    000019ff: 	addl	$0x1, %ebp
    00001a02: 	cmpl	iterations(%rip), %ebp
    00001a08: 	jl	.Ltmp669 # Offset: 6664
    00001a0e: 	jmp	.Ltmp628 # Offset: 6670
    00001a13: 	nopl	(%rax,%rax) # Size: 5
.Ltmp634:
    00001a18: 	movq	0xb0(%rsp), %rdx
    00001a20: 	movq	%r14, %rsi
    00001a23: 	movl	$0x1, %edi
    00001a28: 	xorl	%eax, %eax
    00001a2a: 	callq	__printf_chk@PLT # Offset: 6698
    00001a2f: 	addl	$0x1, %ebx
    00001a32: 	cmpl	iterations(%rip), %ebx
    00001a38: 	jl	.Ltmp670 # Offset: 6712
    00001a3e: 	jmp	.Ltmp633 # Offset: 6718
    00001a43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp620:
    00001a48: 	movq	0xb0(%rsp), %rdx
    00001a50: 	movq	%r14, %rsi
    00001a53: 	movl	$0x1, %edi
    00001a58: 	xorl	%eax, %eax
    00001a5a: 	callq	__printf_chk@PLT # Offset: 6746
    00001a5f: 	addl	$0x1, %ebp
    00001a62: 	cmpl	iterations(%rip), %ebp
    00001a68: 	jl	.Ltmp671 # Offset: 6760
    00001a6e: 	jmp	.Ltmp619 # Offset: 6766
    00001a73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp602:
    00001a78: 	movq	0xb0(%rsp), %rdx
    00001a80: 	movq	%r14, %rsi
    00001a83: 	movl	$0x1, %edi
    00001a88: 	xorl	%eax, %eax
    00001a8a: 	callq	__printf_chk@PLT # Offset: 6794
    00001a8f: 	addl	$0x1, %ebp
    00001a92: 	cmpl	iterations(%rip), %ebp
    00001a98: 	jl	.Ltmp672 # Offset: 6808
    00001a9e: 	jmp	.Ltmp601 # Offset: 6814
    00001aa3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp598:
    00001aa8: 	movq	0xb0(%rsp), %rdx
    00001ab0: 	movq	%r14, %rsi
    00001ab3: 	movl	$0x1, %edi
    00001ab8: 	xorl	%eax, %eax
    00001aba: 	callq	__printf_chk@PLT # Offset: 6842
    00001abf: 	addl	$0x1, %ebp
    00001ac2: 	cmpl	iterations(%rip), %ebp
    00001ac8: 	jl	.Ltmp673 # Offset: 6856
    00001ace: 	jmp	.Ltmp597 # Offset: 6862
    00001ad3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp611:
    00001ad8: 	movq	0xb0(%rsp), %rdx
    00001ae0: 	movq	%r14, %rsi
    00001ae3: 	movl	$0x1, %edi
    00001ae8: 	xorl	%eax, %eax
    00001aea: 	callq	__printf_chk@PLT # Offset: 6890
    00001aef: 	addl	$0x1, %ebp
    00001af2: 	cmpl	iterations(%rip), %ebp
    00001af8: 	jl	.Ltmp674 # Offset: 6904
    00001afe: 	jmp	.Ltmp610 # Offset: 6910
.Ltmp608:
    00001b03: 	movq	-0x8(%rdx), %rax
    00001b07: 	addq	$0x200, %rax
    00001b0d: 	jmp	.Ltmp675 # Offset: 6925
.Ltmp527:
    00001b12: 	movq	%r12, %rsi
    00001b15: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b1c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6940
    00001b21: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b28: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b2f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b36: 	jne	.Ltmp676 # Offset: 6966
.Ltmp532:
    00001b3c: 	movq	-0x8(%rdx), %rax
    00001b40: 	addq	$0x200, %rax
    00001b46: 	jmp	.Ltmp676 # Offset: 6982
.Ltmp594:
    00001b4b: 	movq	-0x8(%rdx), %rax
    00001b4f: 	addq	$0x200, %rax
    00001b55: 	jmp	.Ltmp677 # Offset: 6997
.Ltmp589:
    00001b5a: 	movq	%r12, %rsi
    00001b5d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b64: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7012
    00001b69: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b70: 	jmp	.Ltmp678 # Offset: 7024
.Ltmp580:
    00001b75: 	movq	%r12, %rsi
    00001b78: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b7f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7039
    00001b84: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b8b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b92: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b99: 	jne	.Ltmp679 # Offset: 7065
.Ltmp585:
    00001b9f: 	movq	-0x8(%rdx), %rax
    00001ba3: 	addq	$0x200, %rax
    00001ba9: 	jmp	.Ltmp679 # Offset: 7081
.Ltmp567:
    00001bae: 	movq	-0x8(%rdx), %rax
    00001bb2: 	addq	$0x200, %rax
    00001bb8: 	jmp	.Ltmp680 # Offset: 7096
.Ltmp571:
    00001bbd: 	movq	%r12, %rsi
    00001bc0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bc7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7111
    00001bcc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bd3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bda: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001be1: 	jne	.Ltmp681 # Offset: 7137
.Ltmp576:
    00001be7: 	movq	-0x8(%rdx), %rax
    00001beb: 	addq	$0x200, %rax
    00001bf1: 	jmp	.Ltmp681 # Offset: 7153
.Ltmp658:
    00001bf6: 	movq	-0x8(%rdx), %rax
    00001bfa: 	addq	$0x200, %rax
    00001c00: 	jmp	.Ltmp682 # Offset: 7168
.Ltmp640:
    00001c05: 	movq	-0x8(%rdx), %rax
    00001c09: 	addq	$0x200, %rax
    00001c0f: 	jmp	.Ltmp683 # Offset: 7183
.Ltmp635:
    00001c14: 	movq	%r12, %rsi
    00001c17: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c1e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7198
    00001c23: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c2a: 	jmp	.Ltmp684 # Offset: 7210
.Ltmp603:
    00001c2f: 	movq	%r12, %rsi
    00001c32: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c39: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7225
    00001c3e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c45: 	jmp	.Ltmp685 # Offset: 7237
.Ltmp599:
    00001c4a: 	movq	-0x8(%rdx), %rax
    00001c4e: 	addq	$0x200, %rax
    00001c54: 	jmp	.Ltmp686 # Offset: 7252
.Ltmp644:
    00001c59: 	movq	%r12, %rsi
    00001c5c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c63: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7267
    00001c68: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c6f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c7d: 	jne	.Ltmp687 # Offset: 7293
.Ltmp649:
    00001c83: 	movq	-0x8(%rdx), %rax
    00001c87: 	addq	$0x200, %rax
    00001c8d: 	jmp	.Ltmp687 # Offset: 7309
.Ltmp626:
    00001c92: 	movq	-0x8(%rdx), %rax
    00001c96: 	addq	$0x200, %rax
    00001c9c: 	jmp	.Ltmp688 # Offset: 7324
.Ltmp630:
    00001ca1: 	movq	-0x8(%rdx), %rax
    00001ca5: 	addq	$0x200, %rax
    00001cab: 	jmp	.Ltmp689 # Offset: 7339
.Ltmp621:
    00001cb0: 	movq	%r12, %rsi
    00001cb3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7354
    00001cbf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cc6: 	jmp	.Ltmp690 # Offset: 7366
.Ltmp617:
    00001ccb: 	movq	-0x8(%rdx), %rax
    00001ccf: 	addq	$0x200, %rax
    00001cd5: 	jmp	.Ltmp691 # Offset: 7381
.Ltmp612:
    00001cda: 	movq	%r12, %rsi
    00001cdd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ce4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7396
    00001ce9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cf0: 	jmp	.Ltmp692 # Offset: 7408
.Ltmp562:
    00001cf5: 	movq	%r12, %rsi
    00001cf8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cff: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7423
    00001d04: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d0b: 	jmp	.Ltmp693 # Offset: 7435
.Ltmp556:
    00001d10: 	movq	-0x8(%rdx), %rax
    00001d14: 	addq	$0x200, %rax
    00001d1a: 	jmp	.Ltmp694 # Offset: 7450
.Ltmp550:
    00001d1f: 	movq	-0x8(%rdx), %rax
    00001d23: 	addq	$0x200, %rax
    00001d29: 	jmp	.Ltmp695 # Offset: 7465
.Ltmp544:
    00001d2e: 	movq	-0x8(%rdx), %rax
    00001d32: 	addq	$0x200, %rax
    00001d38: 	jmp	.Ltmp696 # Offset: 7480
.Ltmp538:
    00001d3d: 	movq	-0x8(%rdx), %rax
    00001d41: 	addq	$0x200, %rax
    00001d47: 	jmp	.Ltmp697 # Offset: 7495
.Ltmp653:
    00001d4c: 	movq	%r12, %rsi
    00001d4f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d56: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7510
    00001d5b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d62: 	jmp	.Ltmp698 # Offset: 7522
.Ltmp566:
    00001d67: 	testq	%r14, %r14
    00001d6a: 	je	.Ltmp699 # Offset: 7530
.Ltmp718:
    00001d70: 	movq	%r14, %rdx
    00001d73: 	movq	%rbp, %rsi
    00001d76: 	callq	memcpy@PLT # Offset: 7542
    00001d7b: 	movq	0x48(%rsp), %r14
    00001d80: 	movq	(%rbx), %rdi
    00001d83: 	jmp	.Ltmp699 # Offset: 7555
.Ltmp584:
    00001d88: 	testq	%r14, %r14
    00001d8b: 	je	.Ltmp700 # Offset: 7563
    00001d91: 	jmp	.Ltmp701 # Offset: 7569
    00001d96: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp648:
    00001da0: 	testq	%r14, %r14
    00001da3: 	je	.Ltmp702 # Offset: 7587
    00001da9: 	jmp	.Ltmp703 # Offset: 7593
    00001dae: 	nop # Size: 2
.Ltmp616:
    00001db0: 	testq	%r14, %r14
    00001db3: 	je	.Ltmp704 # Offset: 7603
    00001db9: 	jmp	.Ltmp705 # Offset: 7609
    00001dbe: 	nop # Size: 2
.Ltmp607:
    00001dc0: 	testq	%r14, %r14
    00001dc3: 	je	.Ltmp706 # Offset: 7619
    00001dc9: 	jmp	.Ltmp707 # Offset: 7625
    00001dce: 	nop # Size: 2
.Ltmp639:
    00001dd0: 	testq	%r14, %r14
    00001dd3: 	je	.Ltmp708 # Offset: 7635
.Ltmp719:
    00001dd9: 	movq	%r14, %rdx
    00001ddc: 	movq	%rbp, %rsi
    00001ddf: 	callq	memcpy@PLT # Offset: 7647
    00001de4: 	movq	0x48(%rsp), %r14
    00001de9: 	movq	(%rbx), %rdi
    00001dec: 	jmp	.Ltmp708 # Offset: 7660
.Ltmp531:
    00001df1: 	testq	%r14, %r14
    00001df4: 	je	.Ltmp663 # Offset: 7668
    00001dfa: 	jmp	.Ltmp709 # Offset: 7674
    00001dff: 	nop # Size: 1
.Ltmp625:
    00001e00: 	testq	%r14, %r14
    00001e03: 	je	.Ltmp710 # Offset: 7683
    00001e09: 	jmp	.Ltmp711 # Offset: 7689
    00001e0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp657:
    00001e10: 	testq	%r14, %r14
    00001e13: 	je	.Ltmp712 # Offset: 7699
    00001e19: 	jmp	.Ltmp713 # Offset: 7705
    00001e1e: 	nop # Size: 2
.Ltmp593:
    00001e20: 	testq	%r14, %r14
    00001e23: 	je	.Ltmp714 # Offset: 7715
.Ltmp716:
    00001e29: 	movq	%r14, %rdx
    00001e2c: 	movq	%r15, %rsi
    00001e2f: 	callq	memcpy@PLT # Offset: 7727
    00001e34: 	movq	0x48(%rsp), %r14
    00001e39: 	movq	(%rbp), %rdi
    00001e3d: 	jmp	.Ltmp714 # Offset: 7741
.Ltmp575:
    00001e42: 	testq	%r14, %r14
    00001e45: 	je	.Ltmp715 # Offset: 7749
.Ltmp717:
    00001e4b: 	movq	%r14, %rdx
    00001e4e: 	movq	%r15, %rsi
    00001e51: 	callq	memcpy@PLT # Offset: 7761
    00001e56: 	movq	0x48(%rsp), %r14
    00001e5b: 	movq	(%rbp), %rdi
    00001e5f: 	jmp	.Ltmp715 # Offset: 7775
.Ltmp624:
    00001e64: 	leaq	0x48(%rsp), %rsi
    00001e69: 	xorl	%edx, %edx
    00001e6b: 	movq	%rbp, %rdi
    00001e6e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7790
    00001e73: 	movq	%rax, (%rbp)
    00001e77: 	movq	%rax, %rdi
    00001e7a: 	movq	0x48(%rsp), %rax
    00001e7f: 	movq	%rax, 0x10(%rbp)
.Ltmp711:
    00001e83: 	movq	0x18(%rsp), %rsi
    00001e88: 	movq	%r14, %rdx
    00001e8b: 	callq	memcpy@PLT # Offset: 7819
    00001e90: 	movq	0x48(%rsp), %r14
    00001e95: 	movq	(%rbp), %rdi
    00001e99: 	jmp	.Ltmp710 # Offset: 7833
.Ltmp583:
    00001e9e: 	leaq	0x48(%rsp), %rsi
    00001ea3: 	xorl	%edx, %edx
    00001ea5: 	movq	%rbp, %rdi
    00001ea8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7848
    00001ead: 	movq	%rax, (%rbp)
    00001eb1: 	movq	%rax, %rdi
    00001eb4: 	movq	0x48(%rsp), %rax
    00001eb9: 	movq	%rax, 0x10(%rbp)
.Ltmp701:
    00001ebd: 	movq	%r14, %rdx
    00001ec0: 	movq	%r15, %rsi
    00001ec3: 	callq	memcpy@PLT # Offset: 7875
    00001ec8: 	movq	0x48(%rsp), %r14
    00001ecd: 	movq	(%rbp), %rdi
    00001ed1: 	jmp	.Ltmp700 # Offset: 7889
.Ltmp647:
    00001ed6: 	leaq	0x48(%rsp), %rsi
    00001edb: 	xorl	%edx, %edx
    00001edd: 	movq	%rbx, %rdi
    00001ee0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7904
    00001ee5: 	movq	%rax, (%rbx)
    00001ee8: 	movq	%rax, %rdi
    00001eeb: 	movq	0x48(%rsp), %rax
    00001ef0: 	movq	%rax, 0x10(%rbx)
.Ltmp703:
    00001ef4: 	movq	%r14, %rdx
    00001ef7: 	movq	%rbp, %rsi
    00001efa: 	callq	memcpy@PLT # Offset: 7930
    00001eff: 	movq	0x48(%rsp), %r14
    00001f04: 	movq	(%rbx), %rdi
    00001f07: 	jmp	.Ltmp702 # Offset: 7943
.Ltmp606:
    00001f0c: 	leaq	0x48(%rsp), %rsi
    00001f11: 	xorl	%edx, %edx
    00001f13: 	movq	%rbx, %rdi
    00001f16: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7958
    00001f1b: 	movq	%rax, (%rbx)
    00001f1e: 	movq	%rax, %rdi
    00001f21: 	movq	0x48(%rsp), %rax
    00001f26: 	movq	%rax, 0x10(%rbx)
.Ltmp707:
    00001f2a: 	movq	%r14, %rdx
    00001f2d: 	movq	%rbp, %rsi
    00001f30: 	callq	memcpy@PLT # Offset: 7984
    00001f35: 	movq	0x48(%rsp), %r14
    00001f3a: 	movq	(%rbx), %rdi
    00001f3d: 	jmp	.Ltmp706 # Offset: 7997
.Ltmp656:
    00001f42: 	leaq	0x48(%rsp), %rsi
    00001f47: 	xorl	%edx, %edx
    00001f49: 	movq	%rbx, %rdi
    00001f4c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8012
    00001f51: 	movq	%rax, (%rbx)
    00001f54: 	movq	%rax, %rdi
    00001f57: 	movq	0x48(%rsp), %rax
    00001f5c: 	movq	%rax, 0x10(%rbx)
.Ltmp713:
    00001f60: 	movq	%r14, %rdx
    00001f63: 	movq	%rbp, %rsi
    00001f66: 	callq	memcpy@PLT # Offset: 8038
    00001f6b: 	movq	0x48(%rsp), %r14
    00001f70: 	movq	(%rbx), %rdi
    00001f73: 	jmp	.Ltmp712 # Offset: 8051
.Ltmp615:
    00001f78: 	leaq	0x48(%rsp), %rsi
    00001f7d: 	xorl	%edx, %edx
    00001f7f: 	movq	%rbp, %rdi
    00001f82: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8066
    00001f87: 	movq	%rax, (%rbp)
    00001f8b: 	movq	%rax, %rdi
    00001f8e: 	movq	0x48(%rsp), %rax
    00001f93: 	movq	%rax, 0x10(%rbp)
.Ltmp705:
    00001f97: 	movq	0x18(%rsp), %rsi
    00001f9c: 	movq	%r14, %rdx
    00001f9f: 	callq	memcpy@PLT # Offset: 8095
    00001fa4: 	movq	0x48(%rsp), %r14
    00001fa9: 	movq	(%rbp), %rdi
    00001fad: 	jmp	.Ltmp704 # Offset: 8109
.Ltmp592:
    00001fb2: 	leaq	0x48(%rsp), %rsi
    00001fb7: 	xorl	%edx, %edx
    00001fb9: 	movq	%rbp, %rdi
    00001fbc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8124
    00001fc1: 	movq	%rax, (%rbp)
    00001fc5: 	movq	%rax, %rdi
    00001fc8: 	movq	0x48(%rsp), %rax
    00001fcd: 	movq	%rax, 0x10(%rbp)
    00001fd1: 	jmp	.Ltmp716 # Offset: 8145
.Ltmp574:
    00001fd6: 	leaq	0x48(%rsp), %rsi
    00001fdb: 	xorl	%edx, %edx
    00001fdd: 	movq	%rbp, %rdi
    00001fe0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8160
    00001fe5: 	movq	%rax, (%rbp)
    00001fe9: 	movq	%rax, %rdi
    00001fec: 	movq	0x48(%rsp), %rax
    00001ff1: 	movq	%rax, 0x10(%rbp)
    00001ff5: 	jmp	.Ltmp717 # Offset: 8181
.Ltmp565:
    00001ffa: 	leaq	0x48(%rsp), %rsi
    00001fff: 	xorl	%edx, %edx
    00002001: 	movq	%rbx, %rdi
    00002004: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8196
    00002009: 	movq	%rax, (%rbx)
    0000200c: 	movq	%rax, %rdi
    0000200f: 	movq	0x48(%rsp), %rax
    00002014: 	movq	%rax, 0x10(%rbx)
    00002018: 	jmp	.Ltmp718 # Offset: 8216
.Ltmp638:
    0000201d: 	leaq	0x48(%rsp), %rsi
    00002022: 	xorl	%edx, %edx
    00002024: 	movq	%rbx, %rdi
    00002027: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8231
    0000202c: 	movq	%rax, (%rbx)
    0000202f: 	movq	%rax, %rdi
    00002032: 	movq	0x48(%rsp), %rax
    00002037: 	movq	%rax, 0x10(%rbx)
    0000203b: 	jmp	.Ltmp719 # Offset: 8251
.Ltmp564:
    00002040: 	leaq	DATAat0x1c158(%rip), %rdi
    00002047: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8263
.Ltmp573:
    0000204c: 	leaq	DATAat0x1c158(%rip), %rdi
    00002053: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8275
.Ltmp582:
    00002058: 	leaq	DATAat0x1c158(%rip), %rdi
    0000205f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8287
.Ltmp591:
    00002064: 	leaq	DATAat0x1c158(%rip), %rdi
    0000206b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8299
.Ltmp605:
    00002070: 	leaq	DATAat0x1c158(%rip), %rdi
    00002077: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8311
.Ltmp614:
    0000207c: 	leaq	DATAat0x1c158(%rip), %rdi
    00002083: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8323
.Ltmp623:
    00002088: 	leaq	DATAat0x1c158(%rip), %rdi
    0000208f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8335
.Ltmp637:
    00002094: 	leaq	DATAat0x1c158(%rip), %rdi
    0000209b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8347
.Ltmp646:
    000020a0: 	leaq	DATAat0x1c158(%rip), %rdi
    000020a7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8359
.Ltmp655:
    000020ac: 	leaq	DATAat0x1c158(%rip), %rdi
    000020b3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8371
.Ltmp662:
    000020b8: 	callq	__stack_chk_fail@PLT # Offset: 8376
.Ltmp529:
    000020bd: 	leaq	DATAat0x1c158(%rip), %rdi
    000020c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8388
    000020c9: 	endbr64
.Ltmp721:
    000020cd: 	movq	%rax, %rbp
    000020d0: 	jmp	.Ltmp720 # Offset: 8400
    000020d5: 	endbr64
    000020d9: 	jmp	.Ltmp721 # Offset: 8409
    000020db: 	endbr64
    000020df: 	jmp	.Ltmp721 # Offset: 8415
    000020e1: 	endbr64
    000020e5: 	jmp	.Ltmp721 # Offset: 8421
    000020e7: 	endbr64
    000020eb: 	jmp	.Ltmp721 # Offset: 8427
    000020ed: 	endbr64
    000020f1: 	jmp	.Ltmp721 # Offset: 8433
    000020f3: 	endbr64
    000020f7: 	jmp	.Ltmp721 # Offset: 8439
    000020f9: 	endbr64
    000020fd: 	movq	%rax, %rbp
    00002100: 	jmp	.Ltmp722 # Offset: 8448
    00002102: 	endbr64
    00002106: 	movq	%rax, %rbp
    00002109: 	jmp	.Ltmp723 # Offset: 8457
    0000210b: 	endbr64
    0000210f: 	jmp	.Ltmp721 # Offset: 8463
.Ltmp722:
    00002111: 	movq	0xb0(%rsp), %rdi
    00002119: 	leaq	0xc0(%rsp), %rax
    00002121: 	cmpq	%rax, %rdi
    00002124: 	je	.Ltmp723 # Offset: 8484
.Ltmp725:
    00002126: 	movq	0xc0(%rsp), %rax
    0000212e: 	leaq	0x1(%rax), %rsi
    00002132: 	callq	_ZdlPvm@PLT # Offset: 8498
.Ltmp723:
    00002137: 	movq	0x90(%rsp), %rdi
    0000213f: 	cmpq	0x30(%rsp), %rdi
    00002144: 	je	.Ltmp724 # Offset: 8516
    00002146: 	movq	0xa0(%rsp), %rax
    0000214e: 	leaq	0x1(%rax), %rsi
    00002152: 	callq	_ZdlPvm@PLT # Offset: 8530
.Ltmp724:
    00002157: 	movq	%rbp, %rdi
    0000215a: 	callq	_Unwind_Resume@PLT # Offset: 8538
    0000215f: 	endbr64
    00002163: 	jmp	.Ltmp721 # Offset: 8547
    00002168: 	endbr64
    0000216c: 	jmp	.Ltmp721 # Offset: 8556
    00002171: 	endbr64
    00002175: 	jmp	.Ltmp721 # Offset: 8565
    0000217a: 	endbr64
    0000217e: 	jmp	.Ltmp721 # Offset: 8574
    00002183: 	endbr64
    00002187: 	jmp	.Ltmp721 # Offset: 8583
    0000218c: 	endbr64
    00002190: 	jmp	.Ltmp721 # Offset: 8592
    00002195: 	endbr64
    00002199: 	jmp	.Ltmp721 # Offset: 8601
    0000219e: 	endbr64
    000021a2: 	jmp	.Ltmp721 # Offset: 8610
    000021a7: 	endbr64
    000021ab: 	jmp	.Ltmp721 # Offset: 8619
    000021b0: 	endbr64
    000021b4: 	jmp	.Ltmp721 # Offset: 8628
    000021b9: 	endbr64
    000021bd: 	jmp	.Ltmp721 # Offset: 8637
.Ltmp720:
    000021c2: 	movq	0xb0(%rsp), %rdi
    000021ca: 	cmpq	(%rsp), %rdi
    000021ce: 	jne	.Ltmp725 # Offset: 8654
    000021d4: 	jmp	.Ltmp723 # Offset: 8660
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIjEvT_"

Binary Function "_Z11TestOneTypeIdEvT_" after disassembly {
  Number      : 61
  State       : disassembled
  Address     : 0x91d0
  Size        : 0x2a2d
  MaxSize     : 0x2a30
  Offset      : 0x91d0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIdEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp726:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp726 # Offset: 37
    00000027: 	subq	$0xda8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003e: 	movl	$0x656c, %edi
    00000043: 	movsd	%xmm0, (%rsp)
    00000048: 	leaq	0x60(%rsp), %rsi
    0000004d: 	leaq	0x390(%rsp), %rbp
    00000055: 	movq	%fs:0x28, %rax
    0000005e: 	movq	%rax, 0xfd98(%rsp)
    00000066: 	xorl	%eax, %eax
    00000068: 	leaq	0x90(%rsp), %rax
    00000070: 	movw	%di, 0x94(%rsp)
    00000078: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000007f: 	movq	%rax, 0x50(%rsp)
    00000084: 	leaq	0xfd90(%rsp), %rbx
    0000008c: 	movq	%rax, 0x80(%rsp)
    00000094: 	movl	$0x62756f64, 0x90(%rsp)
    0000009f: 	movq	$0x6, 0x88(%rsp)
    000000ab: 	movb	$0x0, 0x96(%rsp)
    000000b3: 	movq	%rsi, 0x48(%rsp)
    000000b8: 	movaps	%xmm3, 0x60(%rsp)
    000000bd: 	movaps	%xmm4, 0x70(%rsp)
    000000c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 194
    000000c7: 	pxor	%xmm5, %xmm5
    000000cb: 	movsd	(%rsp), %xmm0
    000000d0: 	movq	%rbp, %rax
    000000d3: 	cvtsi2sdl	init_value(%rip), %xmm5
    000000db: 	movapd	%xmm5, %xmm1
    000000df: 	movsd	%xmm5, 0x10(%rsp)
    000000e5: 	unpcklpd	%xmm1, %xmm1
    000000e9: 	nopl	(%rax) # Size: 7
.Ltmp727:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rax, %rbx
    000000fa: 	jne	.Ltmp727 # Offset: 250
    000000fc: 	movsd	DATAat0x1c388(%rip), %xmm2
    00000104: 	movsd	DATAat0x1c380(%rip), %xmm3
    0000010c: 	comisd	%xmm2, %xmm0
    00000110: 	addsd	%xmm0, %xmm3
    00000114: 	jae	.Ltmp728 # Offset: 276
    0000011a: 	cvttsd2si	%xmm0, %rcx
.Ltmp892:
    0000011f: 	movq	%rcx, %rax
    00000122: 	movaps	%xmm1, 0xc0(%rsp)
    0000012a: 	movabsq	$-0x7777777777777777, %rdx
    00000134: 	mulq	%rdx
    00000137: 	movaps	%xmm1, 0xd0(%rsp)
    0000013f: 	movaps	%xmm1, 0xe0(%rsp)
    00000147: 	movaps	%xmm1, 0xf0(%rsp)
    0000014f: 	movq	%rdx, %rax
    00000152: 	andq	$-0x10, %rdx
    00000156: 	movaps	%xmm1, 0x100(%rsp)
    0000015e: 	shrq	$0x4, %rax
    00000162: 	movaps	%xmm1, 0x110(%rsp)
    0000016a: 	subq	%rax, %rdx
    0000016d: 	movaps	%xmm1, 0x120(%rsp)
    00000175: 	leaq	(%rdx,%rdx), %rax
    00000179: 	movaps	%xmm1, 0x130(%rsp)
    00000181: 	subq	%rax, %rcx
    00000184: 	comisd	%xmm2, %xmm3
    00000188: 	movaps	%xmm1, 0x140(%rsp)
    00000190: 	movq	%rcx, 0x58(%rsp)
    00000195: 	movaps	%xmm1, 0x150(%rsp)
    0000019d: 	movaps	%xmm1, 0x160(%rsp)
    000001a5: 	movaps	%xmm1, 0x170(%rsp)
    000001ad: 	movaps	%xmm1, 0x180(%rsp)
    000001b5: 	movaps	%xmm1, 0x190(%rsp)
    000001bd: 	movaps	%xmm1, 0x1a0(%rsp)
    000001c5: 	jae	.Ltmp729 # Offset: 453
    000001cb: 	cvttsd2si	%xmm3, %rcx
.Ltmp891:
    000001d0: 	movabsq	$-0x7777777777777777, %rdx
    000001da: 	movq	%rcx, %rax
    000001dd: 	mulq	%rdx
    000001e0: 	movq	%rdx, %rax
    000001e3: 	andq	$-0x10, %rdx
    000001e7: 	shrq	$0x4, %rax
    000001eb: 	subq	%rax, %rdx
    000001ee: 	movq	%rcx, %rax
    000001f1: 	addq	%rdx, %rdx
    000001f4: 	subq	%rdx, %rax
    000001f7: 	movq	%rax, %xmm1
    000001fc: 	punpcklqdq	%xmm1, %xmm1
    00000200: 	movaps	%xmm1, 0x1b0(%rsp)
    00000208: 	movaps	%xmm1, 0x1c0(%rsp)
    00000210: 	movaps	%xmm1, 0x1d0(%rsp)
    00000218: 	movaps	%xmm1, 0x1e0(%rsp)
    00000220: 	movaps	%xmm1, 0x1f0(%rsp)
    00000228: 	movaps	%xmm1, 0x200(%rsp)
    00000230: 	movaps	%xmm1, 0x210(%rsp)
    00000238: 	movaps	%xmm1, 0x220(%rsp)
    00000240: 	movaps	%xmm1, 0x230(%rsp)
    00000248: 	movaps	%xmm1, 0x240(%rsp)
    00000250: 	movaps	%xmm1, 0x250(%rsp)
    00000258: 	movaps	%xmm1, 0x260(%rsp)
    00000260: 	movaps	%xmm1, 0x270(%rsp)
    00000268: 	movaps	%xmm1, 0x280(%rsp)
    00000270: 	movaps	%xmm1, 0x290(%rsp)
    00000278: 	movapd	%xmm0, %xmm1
    0000027c: 	addsd	%xmm0, %xmm1
    00000280: 	divsd	%xmm3, %xmm1
    00000284: 	addsd	%xmm1, %xmm0
    00000288: 	comisd	%xmm2, %xmm0
    0000028c: 	jae	.Ltmp730 # Offset: 652
    00000292: 	cvttsd2si	%xmm0, %rcx
.Ltmp890:
    00000297: 	movq	%rcx, %rax
    0000029a: 	leaq	0xa0(%rsp), %r12
    000002a2: 	movabsq	$-0x7777777777777777, %rdx
    000002ac: 	mulq	%rdx
    000002af: 	leaq	0x80(%rsp), %r15
    000002b7: 	movq	%r12, %rdi
    000002ba: 	movq	%r15, %rsi
    000002bd: 	movq	%rdx, %rax
    000002c0: 	andq	$-0x10, %rdx
    000002c4: 	shrq	$0x4, %rax
    000002c8: 	subq	%rax, %rdx
    000002cb: 	movq	%rcx, %rax
    000002ce: 	addq	%rdx, %rdx
    000002d1: 	subq	%rdx, %rax
    000002d4: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002db: 	movq	%rax, %xmm0
    000002e0: 	punpcklqdq	%xmm0, %xmm0
    000002e4: 	movaps	%xmm0, 0x2a0(%rsp)
    000002ec: 	movaps	%xmm0, 0x2b0(%rsp)
    000002f4: 	movaps	%xmm0, 0x2c0(%rsp)
    000002fc: 	movaps	%xmm0, 0x2d0(%rsp)
    00000304: 	movaps	%xmm0, 0x2e0(%rsp)
    0000030c: 	movaps	%xmm0, 0x2f0(%rsp)
    00000314: 	movaps	%xmm0, 0x300(%rsp)
    0000031c: 	movaps	%xmm0, 0x310(%rsp)
    00000324: 	movaps	%xmm0, 0x320(%rsp)
    0000032c: 	movaps	%xmm0, 0x330(%rsp)
    00000334: 	movaps	%xmm0, 0x340(%rsp)
    0000033c: 	movaps	%xmm0, 0x350(%rsp)
    00000344: 	movaps	%xmm0, 0x360(%rsp)
    0000034c: 	movaps	%xmm0, 0x370(%rsp)
    00000354: 	movaps	%xmm0, 0x380(%rsp)
    0000035c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 860
    00000361: 	callq	clock@PLT # Offset: 865
    00000366: 	movl	iterations(%rip), %edx
    0000036c: 	movq	%rax, start_time(%rip)
    00000373: 	testl	%edx, %edx
    00000375: 	jle	.Ltmp731 # Offset: 885
    0000037b: 	movsd	DATAat0x1c390(%rip), %xmm4
    00000383: 	pxor	%xmm3, %xmm3
    00000387: 	xorl	%r13d, %r13d
    0000038a: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000392: 	movsd	DATAat0x1c398(%rip), %xmm6
    0000039a: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    000003a2: 	movsd	%xmm3, 0x30(%rsp)
    000003a8: 	leaq	DATAat0x1c1c8(%rip), %r14
    000003af: 	movsd	%xmm4, 0x20(%rsp)
    000003b5: 	movaps	%xmm5, (%rsp)
    000003b9: 	movsd	%xmm6, 0x28(%rsp)
    000003bf: 	movsd	%xmm7, 0x18(%rsp)
    000003c5: 	nopl	(%rax) # Size: 3
.Ltmp735:
    000003c8: 	movq	%rbp, %rax
    000003cb: 	pxor	%xmm0, %xmm0
    000003cf: 	nop # Size: 1
.Ltmp732:
    000003d0: 	movsd	(%rax), %xmm1
    000003d4: 	addq	$0x10, %rax
    000003d8: 	addsd	%xmm1, %xmm0
    000003dc: 	movsd	-0x8(%rax), %xmm1
    000003e1: 	addsd	%xmm1, %xmm0
    000003e5: 	cmpq	%rax, %rbx
    000003e8: 	jne	.Ltmp732 # Offset: 1000
    000003ea: 	pxor	%xmm2, %xmm2
    000003ee: 	movapd	(%rsp), %xmm3
    000003f3: 	movapd	%xmm0, %xmm1
    000003f7: 	cvtsi2sdl	init_value(%rip), %xmm2
    000003ff: 	mulsd	0x20(%rsp), %xmm2
    00000405: 	andpd	%xmm0, %xmm3
    00000409: 	comisd	0x28(%rsp), %xmm3
    0000040f: 	subsd	%xmm2, %xmm1
    00000413: 	jbe	.Ltmp733 # Offset: 1043
    00000415: 	divsd	%xmm0, %xmm1
.Ltmp733:
    00000419: 	andpd	(%rsp), %xmm1
    0000041e: 	movsd	0x18(%rsp), %xmm3
    00000424: 	comisd	%xmm1, %xmm3
    00000428: 	jbe	.Ltmp734 # Offset: 1064
.Ltmp889:
    0000042e: 	addl	$0x1, %r13d
    00000432: 	cmpl	%edx, %r13d
    00000435: 	jl	.Ltmp735 # Offset: 1077
.Ltmp731:
    00000437: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000043e: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000445: 	subq	$0x20, %rax
    00000449: 	cmpq	%rax, %r14
    0000044c: 	je	.Ltmp736 # Offset: 1100
    00000452: 	leaq	0x10(%r14), %rdi
    00000456: 	movq	0xa8(%rsp), %r13
    0000045e: 	movq	%rdi, (%r14)
    00000461: 	movq	0xa0(%rsp), %rax
    00000469: 	movq	%rax, %rcx
    0000046c: 	movq	%rax, (%rsp)
    00000470: 	addq	%r13, %rcx
    00000473: 	je	.Ltmp737 # Offset: 1139
    00000475: 	testq	%rax, %rax
    00000478: 	je	.Ltmp738 # Offset: 1144
.Ltmp737:
    0000047e: 	movq	%r13, 0x60(%rsp)
    00000483: 	cmpq	$0xf, %r13
    00000487: 	ja	.Ltmp739 # Offset: 1159
    0000048d: 	cmpq	$0x1, %r13
    00000491: 	jne	.Ltmp740 # Offset: 1169
    00000497: 	movq	(%rsp), %rax
    0000049b: 	movzbl	(%rax), %eax
    0000049e: 	movb	%al, 0x10(%r14)
.Ltmp893:
    000004a2: 	movq	%r13, 0x8(%r14)
    000004a6: 	movb	$0x0, (%rdi,%r13)
    000004ab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004b9: 	addq	$0x20, %rax
    000004bd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004c4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000004cb: 	je	.Ltmp741 # Offset: 1227
.Ltmp918:
    000004d1: 	movq	-0x20(%rax), %r13
    000004d5: 	callq	clock@PLT # Offset: 1237
    000004da: 	pxor	%xmm0, %xmm0
    000004de: 	movq	%rax, end_time(%rip)
    000004e5: 	movq	%r13, %rdi
    000004e8: 	subq	start_time(%rip), %rax
    000004ef: 	cvtsi2sd	%rax, %xmm0
    000004f4: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004fc: 	callq	_Z13record_resultdPKc # Offset: 1276
    00000501: 	movq	0xa0(%rsp), %rdi
    00000509: 	leaq	0xb0(%rsp), %rax
    00000511: 	movq	%rax, 0x38(%rsp)
    00000516: 	cmpq	%rax, %rdi
    00000519: 	je	.Ltmp742 # Offset: 1305
    0000051b: 	movq	0xb0(%rsp), %rax
    00000523: 	leaq	0x1(%rax), %rsi
    00000527: 	callq	_ZdlPvm@PLT # Offset: 1319
.Ltmp742:
    0000052c: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000533: 	movq	%r15, %rsi
    00000536: 	movq	%r12, %rdi
    00000539: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1337
    0000053e: 	callq	clock@PLT # Offset: 1342
    00000543: 	movl	iterations(%rip), %edx
    00000549: 	movq	%rax, start_time(%rip)
    00000550: 	testl	%edx, %edx
    00000552: 	jle	.Ltmp743 # Offset: 1362
    00000558: 	movsd	DATAat0x1c390(%rip), %xmm4
    00000560: 	pxor	%xmm3, %xmm3
    00000564: 	xorl	%r13d, %r13d
    00000567: 	movq	DATAat0x1c3b0(%rip), %xmm5
    0000056f: 	movsd	DATAat0x1c398(%rip), %xmm6
    00000577: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    0000057f: 	movsd	%xmm3, 0x30(%rsp)
    00000585: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000058c: 	movsd	%xmm4, 0x20(%rsp)
    00000592: 	movaps	%xmm5, (%rsp)
    00000596: 	movsd	%xmm6, 0x28(%rsp)
    0000059c: 	movsd	%xmm7, 0x18(%rsp)
    000005a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp747:
    000005a8: 	movq	%rbp, %rax
    000005ab: 	pxor	%xmm0, %xmm0
    000005af: 	nop # Size: 1
.Ltmp744:
    000005b0: 	movsd	(%rax), %xmm1
    000005b4: 	addq	$0x10, %rax
    000005b8: 	addsd	%xmm1, %xmm0
    000005bc: 	movsd	-0x8(%rax), %xmm1
    000005c1: 	addsd	%xmm1, %xmm0
    000005c5: 	cmpq	%rbx, %rax
    000005c8: 	jne	.Ltmp744 # Offset: 1480
    000005ca: 	pxor	%xmm2, %xmm2
    000005ce: 	movapd	(%rsp), %xmm3
    000005d3: 	movapd	%xmm0, %xmm1
    000005d7: 	cvtsi2sdl	init_value(%rip), %xmm2
    000005df: 	mulsd	0x20(%rsp), %xmm2
    000005e5: 	andpd	%xmm0, %xmm3
    000005e9: 	comisd	0x28(%rsp), %xmm3
    000005ef: 	subsd	%xmm2, %xmm1
    000005f3: 	jbe	.Ltmp745 # Offset: 1523
    000005f5: 	divsd	%xmm0, %xmm1
.Ltmp745:
    000005f9: 	andpd	(%rsp), %xmm1
    000005fe: 	movsd	0x18(%rsp), %xmm3
    00000604: 	comisd	%xmm1, %xmm3
    00000608: 	jbe	.Ltmp746 # Offset: 1544
.Ltmp903:
    0000060e: 	addl	$0x1, %r13d
    00000612: 	cmpl	%edx, %r13d
    00000615: 	jl	.Ltmp747 # Offset: 1557
.Ltmp743:
    00000617: 	movq	%r12, %rsi
    0000061a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000621: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1569
    00000626: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000062d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000634: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000063b: 	je	.Ltmp748 # Offset: 1595
.Ltmp921:
    00000641: 	movq	-0x20(%rax), %r13
    00000645: 	callq	clock@PLT # Offset: 1605
    0000064a: 	pxor	%xmm0, %xmm0
    0000064e: 	movq	%rax, end_time(%rip)
    00000655: 	movq	%r13, %rdi
    00000658: 	subq	start_time(%rip), %rax
    0000065f: 	cvtsi2sd	%rax, %xmm0
    00000664: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000066c: 	callq	_Z13record_resultdPKc # Offset: 1644
    00000671: 	movq	0xa0(%rsp), %rdi
    00000679: 	cmpq	0x38(%rsp), %rdi
    0000067e: 	je	.Ltmp749 # Offset: 1662
    00000680: 	movq	0xb0(%rsp), %rax
    00000688: 	leaq	0x1(%rax), %rsi
    0000068c: 	callq	_ZdlPvm@PLT # Offset: 1676
.Ltmp749:
    00000691: 	leaq	DATAat0x1c208(%rip), %rdx
    00000698: 	movq	%r15, %rsi
    0000069b: 	movq	%r12, %rdi
    0000069e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1694
    000006a3: 	callq	clock@PLT # Offset: 1699
    000006a8: 	movl	iterations(%rip), %edx
    000006ae: 	movq	%rax, start_time(%rip)
    000006b5: 	testl	%edx, %edx
    000006b7: 	jle	.Ltmp750 # Offset: 1719
    000006bd: 	movsd	DATAat0x1c390(%rip), %xmm4
    000006c5: 	pxor	%xmm3, %xmm3
    000006c9: 	xorl	%r13d, %r13d
    000006cc: 	movq	DATAat0x1c3b0(%rip), %xmm5
    000006d4: 	movsd	DATAat0x1c398(%rip), %xmm6
    000006dc: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    000006e4: 	movsd	%xmm3, 0x30(%rsp)
    000006ea: 	leaq	DATAat0x1c1c8(%rip), %r14
    000006f1: 	movsd	%xmm4, 0x20(%rsp)
    000006f7: 	movaps	%xmm5, (%rsp)
    000006fb: 	movsd	%xmm6, 0x28(%rsp)
    00000701: 	movsd	%xmm7, 0x18(%rsp)
    00000707: 	nopw	(%rax,%rax) # Size: 9
.Ltmp754:
    00000710: 	movq	%rbp, %rax
    00000713: 	pxor	%xmm0, %xmm0
    00000717: 	nopw	(%rax,%rax) # Size: 9
.Ltmp751:
    00000720: 	movsd	(%rax), %xmm1
    00000724: 	addq	$0x10, %rax
    00000728: 	addsd	%xmm1, %xmm0
    0000072c: 	movsd	-0x8(%rax), %xmm1
    00000731: 	addsd	%xmm1, %xmm0
    00000735: 	cmpq	%rbx, %rax
    00000738: 	jne	.Ltmp751 # Offset: 1848
    0000073a: 	pxor	%xmm2, %xmm2
    0000073e: 	movapd	(%rsp), %xmm3
    00000743: 	movapd	%xmm0, %xmm1
    00000747: 	cvtsi2sdl	init_value(%rip), %xmm2
    0000074f: 	mulsd	0x20(%rsp), %xmm2
    00000755: 	andpd	%xmm0, %xmm3
    00000759: 	comisd	0x28(%rsp), %xmm3
    0000075f: 	subsd	%xmm2, %xmm1
    00000763: 	jbe	.Ltmp752 # Offset: 1891
    00000765: 	divsd	%xmm0, %xmm1
.Ltmp752:
    00000769: 	andpd	(%rsp), %xmm1
    0000076e: 	movsd	0x18(%rsp), %xmm4
    00000774: 	comisd	%xmm1, %xmm4
    00000778: 	jbe	.Ltmp753 # Offset: 1912
.Ltmp902:
    0000077e: 	addl	$0x1, %r13d
    00000782: 	cmpl	%edx, %r13d
    00000785: 	jl	.Ltmp754 # Offset: 1925
.Ltmp750:
    00000787: 	movq	%r12, %rsi
    0000078a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000791: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1937
    00000796: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000079d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007ab: 	je	.Ltmp755 # Offset: 1963
.Ltmp937:
    000007b1: 	movq	-0x20(%rax), %r13
    000007b5: 	callq	clock@PLT # Offset: 1973
    000007ba: 	pxor	%xmm0, %xmm0
    000007be: 	movq	%rax, end_time(%rip)
    000007c5: 	movq	%r13, %rdi
    000007c8: 	subq	start_time(%rip), %rax
    000007cf: 	cvtsi2sd	%rax, %xmm0
    000007d4: 	divsd	DATAat0x1c370(%rip), %xmm0
    000007dc: 	callq	_Z13record_resultdPKc # Offset: 2012
    000007e1: 	movq	0xa0(%rsp), %rdi
    000007e9: 	cmpq	0x38(%rsp), %rdi
    000007ee: 	je	.Ltmp756 # Offset: 2030
    000007f0: 	movq	0xb0(%rsp), %rax
    000007f8: 	leaq	0x1(%rax), %rsi
    000007fc: 	callq	_ZdlPvm@PLT # Offset: 2044
.Ltmp756:
    00000801: 	leaq	DATAat0x1c21d(%rip), %rdx
    00000808: 	movq	%r15, %rsi
    0000080b: 	movq	%r12, %rdi
    0000080e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2062
    00000813: 	callq	clock@PLT # Offset: 2067
    00000818: 	movl	iterations(%rip), %edx
    0000081e: 	movq	%rax, start_time(%rip)
    00000825: 	testl	%edx, %edx
    00000827: 	jle	.Ltmp757 # Offset: 2087
    0000082d: 	movsd	DATAat0x1c390(%rip), %xmm4
    00000835: 	pxor	%xmm3, %xmm3
    00000839: 	xorl	%r13d, %r13d
    0000083c: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000844: 	movsd	DATAat0x1c398(%rip), %xmm6
    0000084c: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00000854: 	movsd	%xmm3, 0x30(%rsp)
    0000085a: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000861: 	movsd	%xmm4, 0x20(%rsp)
    00000867: 	movaps	%xmm5, (%rsp)
    0000086b: 	movsd	%xmm6, 0x28(%rsp)
    00000871: 	movsd	%xmm7, 0x18(%rsp)
    00000877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp761:
    00000880: 	movq	%rbp, %rax
    00000883: 	pxor	%xmm0, %xmm0
    00000887: 	nopw	(%rax,%rax) # Size: 9
.Ltmp758:
    00000890: 	movsd	(%rax), %xmm1
    00000894: 	addq	$0x10, %rax
    00000898: 	addsd	%xmm1, %xmm0
    0000089c: 	movsd	-0x8(%rax), %xmm1
    000008a1: 	addsd	%xmm1, %xmm0
    000008a5: 	cmpq	%rbx, %rax
    000008a8: 	jne	.Ltmp758 # Offset: 2216
    000008aa: 	pxor	%xmm2, %xmm2
    000008ae: 	movapd	(%rsp), %xmm3
    000008b3: 	movapd	%xmm0, %xmm1
    000008b7: 	cvtsi2sdl	init_value(%rip), %xmm2
    000008bf: 	mulsd	0x20(%rsp), %xmm2
    000008c5: 	andpd	%xmm0, %xmm3
    000008c9: 	comisd	0x28(%rsp), %xmm3
    000008cf: 	subsd	%xmm2, %xmm1
    000008d3: 	jbe	.Ltmp759 # Offset: 2259
    000008d5: 	divsd	%xmm0, %xmm1
.Ltmp759:
    000008d9: 	andpd	(%rsp), %xmm1
    000008de: 	movsd	0x18(%rsp), %xmm7
    000008e4: 	comisd	%xmm1, %xmm7
    000008e8: 	jbe	.Ltmp760 # Offset: 2280
.Ltmp901:
    000008ee: 	addl	$0x1, %r13d
    000008f2: 	cmpl	%edx, %r13d
    000008f5: 	jl	.Ltmp761 # Offset: 2293
.Ltmp757:
    000008f7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008fe: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000905: 	subq	$0x20, %rax
    00000909: 	cmpq	%rax, %r14
    0000090c: 	je	.Ltmp762 # Offset: 2316
    00000912: 	leaq	0x10(%r14), %rdi
    00000916: 	movq	0xa8(%rsp), %r13
    0000091e: 	movq	%rdi, (%r14)
    00000921: 	movq	0xa0(%rsp), %rax
    00000929: 	movq	%rax, %rcx
    0000092c: 	movq	%rax, (%rsp)
    00000930: 	addq	%r13, %rcx
    00000933: 	je	.Ltmp763 # Offset: 2355
    00000935: 	testq	%rax, %rax
    00000938: 	je	.Ltmp764 # Offset: 2360
.Ltmp763:
    0000093e: 	movq	%r13, 0x60(%rsp)
    00000943: 	cmpq	$0xf, %r13
    00000947: 	ja	.Ltmp765 # Offset: 2375
    0000094d: 	cmpq	$0x1, %r13
    00000951: 	jne	.Ltmp766 # Offset: 2385
    00000957: 	movq	(%rsp), %rax
    0000095b: 	movzbl	(%rax), %eax
    0000095e: 	movb	%al, 0x10(%r14)
.Ltmp943:
    00000962: 	movq	%r13, 0x8(%r14)
    00000966: 	movb	$0x0, (%rdi,%r13)
    0000096b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000972: 	addq	$0x20, %rax
    00000976: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp938:
    0000097d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000984: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000098b: 	je	.Ltmp767 # Offset: 2443
.Ltmp924:
    00000991: 	movq	-0x20(%rax), %r13
    00000995: 	callq	clock@PLT # Offset: 2453
    0000099a: 	pxor	%xmm0, %xmm0
    0000099e: 	movq	%rax, end_time(%rip)
    000009a5: 	movq	%r13, %rdi
    000009a8: 	subq	start_time(%rip), %rax
    000009af: 	cvtsi2sd	%rax, %xmm0
    000009b4: 	divsd	DATAat0x1c370(%rip), %xmm0
    000009bc: 	callq	_Z13record_resultdPKc # Offset: 2492
    000009c1: 	movq	0xa0(%rsp), %rdi
    000009c9: 	cmpq	0x38(%rsp), %rdi
    000009ce: 	je	.Ltmp768 # Offset: 2510
    000009d0: 	movq	0xb0(%rsp), %rax
    000009d8: 	leaq	0x1(%rax), %rsi
    000009dc: 	callq	_ZdlPvm@PLT # Offset: 2524
.Ltmp768:
    000009e1: 	leaq	DATAat0x1c23a(%rip), %rdx
    000009e8: 	movq	%r15, %rsi
    000009eb: 	movq	%r12, %rdi
    000009ee: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2542
    000009f3: 	callq	clock@PLT # Offset: 2547
    000009f8: 	movl	iterations(%rip), %edx
    000009fe: 	movq	%rax, start_time(%rip)
    00000a05: 	testl	%edx, %edx
    00000a07: 	jle	.Ltmp769 # Offset: 2567
    00000a0d: 	movsd	DATAat0x1c390(%rip), %xmm4
    00000a15: 	pxor	%xmm3, %xmm3
    00000a19: 	xorl	%r13d, %r13d
    00000a1c: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000a24: 	movsd	DATAat0x1c398(%rip), %xmm6
    00000a2c: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00000a34: 	movsd	%xmm3, 0x30(%rsp)
    00000a3a: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000a41: 	movsd	%xmm4, 0x20(%rsp)
    00000a47: 	movaps	%xmm5, (%rsp)
    00000a4b: 	movsd	%xmm6, 0x28(%rsp)
    00000a51: 	movsd	%xmm7, 0x18(%rsp)
    00000a57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp773:
    00000a60: 	movq	%rbp, %rax
    00000a63: 	pxor	%xmm0, %xmm0
    00000a67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp770:
    00000a70: 	movsd	(%rax), %xmm1
    00000a74: 	addq	$0x10, %rax
    00000a78: 	addsd	%xmm1, %xmm0
    00000a7c: 	movsd	-0x8(%rax), %xmm1
    00000a81: 	addsd	%xmm1, %xmm0
    00000a85: 	cmpq	%rbx, %rax
    00000a88: 	jne	.Ltmp770 # Offset: 2696
    00000a8a: 	pxor	%xmm2, %xmm2
    00000a8e: 	movapd	(%rsp), %xmm5
    00000a93: 	movapd	%xmm0, %xmm1
    00000a97: 	cvtsi2sdl	init_value(%rip), %xmm2
    00000a9f: 	mulsd	0x20(%rsp), %xmm2
    00000aa5: 	andpd	%xmm0, %xmm5
    00000aa9: 	comisd	0x28(%rsp), %xmm5
    00000aaf: 	subsd	%xmm2, %xmm1
    00000ab3: 	jbe	.Ltmp771 # Offset: 2739
    00000ab5: 	divsd	%xmm0, %xmm1
.Ltmp771:
    00000ab9: 	andpd	(%rsp), %xmm1
    00000abe: 	movsd	0x18(%rsp), %xmm6
    00000ac4: 	comisd	%xmm1, %xmm6
    00000ac8: 	jbe	.Ltmp772 # Offset: 2760
.Ltmp906:
    00000ace: 	addl	$0x1, %r13d
    00000ad2: 	cmpl	%edx, %r13d
    00000ad5: 	jl	.Ltmp773 # Offset: 2773
.Ltmp769:
    00000ad7: 	movq	%r12, %rsi
    00000ada: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ae1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2785
    00000ae6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aed: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000af4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000afb: 	je	.Ltmp774 # Offset: 2811
.Ltmp925:
    00000b01: 	movq	-0x20(%rax), %r13
    00000b05: 	callq	clock@PLT # Offset: 2821
    00000b0a: 	pxor	%xmm0, %xmm0
    00000b0e: 	movq	%rax, end_time(%rip)
    00000b15: 	movq	%r13, %rdi
    00000b18: 	subq	start_time(%rip), %rax
    00000b1f: 	cvtsi2sd	%rax, %xmm0
    00000b24: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b2c: 	callq	_Z13record_resultdPKc # Offset: 2860
    00000b31: 	movq	0xa0(%rsp), %rdi
    00000b39: 	cmpq	0x38(%rsp), %rdi
    00000b3e: 	je	.Ltmp775 # Offset: 2878
    00000b40: 	movq	0xb0(%rsp), %rax
    00000b48: 	leaq	0x1(%rax), %rsi
    00000b4c: 	callq	_ZdlPvm@PLT # Offset: 2892
.Ltmp775:
    00000b51: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000b58: 	movq	%r15, %rsi
    00000b5b: 	movq	%r12, %rdi
    00000b5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2910
    00000b63: 	callq	clock@PLT # Offset: 2915
    00000b68: 	movl	iterations(%rip), %edx
    00000b6e: 	movq	%rax, start_time(%rip)
    00000b75: 	testl	%edx, %edx
    00000b77: 	jle	.Ltmp776 # Offset: 2935
    00000b7d: 	movsd	DATAat0x1c390(%rip), %xmm4
    00000b85: 	pxor	%xmm3, %xmm3
    00000b89: 	xorl	%r13d, %r13d
    00000b8c: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000b94: 	movsd	DATAat0x1c398(%rip), %xmm6
    00000b9c: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00000ba4: 	movsd	%xmm3, 0x30(%rsp)
    00000baa: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000bb1: 	movsd	%xmm4, 0x20(%rsp)
    00000bb7: 	movaps	%xmm5, (%rsp)
    00000bbb: 	movsd	%xmm6, 0x28(%rsp)
    00000bc1: 	movsd	%xmm7, 0x18(%rsp)
    00000bc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp780:
    00000bd0: 	movq	%rbp, %rax
    00000bd3: 	pxor	%xmm0, %xmm0
    00000bd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp777:
    00000be0: 	movsd	(%rax), %xmm1
    00000be4: 	addq	$0x10, %rax
    00000be8: 	addsd	%xmm1, %xmm0
    00000bec: 	movsd	-0x8(%rax), %xmm1
    00000bf1: 	addsd	%xmm1, %xmm0
    00000bf5: 	cmpq	%rbx, %rax
    00000bf8: 	jne	.Ltmp777 # Offset: 3064
    00000bfa: 	pxor	%xmm2, %xmm2
    00000bfe: 	movapd	(%rsp), %xmm6
    00000c03: 	movapd	%xmm0, %xmm1
    00000c07: 	cvtsi2sdl	init_value(%rip), %xmm2
    00000c0f: 	mulsd	0x20(%rsp), %xmm2
    00000c15: 	andpd	%xmm0, %xmm6
    00000c19: 	comisd	0x28(%rsp), %xmm6
    00000c1f: 	subsd	%xmm2, %xmm1
    00000c23: 	jbe	.Ltmp778 # Offset: 3107
    00000c25: 	divsd	%xmm0, %xmm1
.Ltmp778:
    00000c29: 	andpd	(%rsp), %xmm1
    00000c2e: 	movsd	0x18(%rsp), %xmm5
    00000c34: 	comisd	%xmm1, %xmm5
    00000c38: 	jbe	.Ltmp779 # Offset: 3128
.Ltmp907:
    00000c3e: 	addl	$0x1, %r13d
    00000c42: 	cmpl	%edx, %r13d
    00000c45: 	jl	.Ltmp780 # Offset: 3141
.Ltmp776:
    00000c47: 	movq	%r12, %rsi
    00000c4a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c51: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3153
    00000c56: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c5d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c64: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c6b: 	je	.Ltmp781 # Offset: 3179
.Ltmp926:
    00000c71: 	movq	-0x20(%rax), %rbp
    00000c75: 	callq	clock@PLT # Offset: 3189
    00000c7a: 	pxor	%xmm0, %xmm0
    00000c7e: 	movq	%rax, end_time(%rip)
    00000c85: 	movq	%rbp, %rdi
    00000c88: 	subq	start_time(%rip), %rax
    00000c8f: 	cvtsi2sd	%rax, %xmm0
    00000c94: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000c9c: 	callq	_Z13record_resultdPKc # Offset: 3228
    00000ca1: 	movq	0xa0(%rsp), %rdi
    00000ca9: 	cmpq	0x38(%rsp), %rdi
    00000cae: 	je	.Ltmp782 # Offset: 3246
    00000cb0: 	movq	0xb0(%rsp), %rax
    00000cb8: 	leaq	0x1(%rax), %rsi
    00000cbc: 	callq	_ZdlPvm@PLT # Offset: 3260
.Ltmp782:
    00000cc1: 	leaq	DATAat0x1c265(%rip), %rdx
    00000cc8: 	movq	%r15, %rsi
    00000ccb: 	movq	%r12, %rdi
    00000cce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3278
    00000cd3: 	callq	clock@PLT # Offset: 3283
    00000cd8: 	movsd	DATAat0x1c390(%rip), %xmm6
    00000ce0: 	movsd	0x10(%rsp), %xmm7
    00000ce6: 	movl	iterations(%rip), %esi
    00000cec: 	movq	%rax, start_time(%rip)
    00000cf3: 	mulsd	%xmm6, %xmm7
    00000cf7: 	movsd	%xmm6, 0x20(%rsp)
    00000cfd: 	movsd	%xmm7, 0x40(%rsp)
    00000d03: 	testl	%esi, %esi
    00000d05: 	jle	.Ltmp783 # Offset: 3333
    00000d07: 	movq	DATAat0x1c3b0(%rip), %xmm4
    00000d0f: 	movsd	DATAat0x1c398(%rip), %xmm3
    00000d17: 	movapd	%xmm7, %xmm0
    00000d1b: 	xorl	%ebx, %ebx
    00000d1d: 	andpd	%xmm4, %xmm0
    00000d21: 	movaps	%xmm4, (%rsp)
    00000d25: 	comisd	%xmm3, %xmm0
    00000d29: 	ja	.Ltmp784 # Offset: 3369
    00000d2f: 	movsd	DATAat0x1c3a0(%rip), %xmm6
    00000d37: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000d3e: 	movsd	%xmm6, 0x18(%rsp)
    00000d44: 	movapd	%xmm6, %xmm5
.Ltmp908:
    00000d48: 	pxor	%xmm0, %xmm0
    00000d4c: 	movsd	0x40(%rsp), %xmm1
    00000d52: 	cvtsi2sdl	init_value(%rip), %xmm0
    00000d5a: 	mulsd	0x20(%rsp), %xmm0
    00000d60: 	subsd	%xmm0, %xmm1
    00000d64: 	andpd	(%rsp), %xmm1
    00000d69: 	comisd	%xmm1, %xmm5
    00000d6d: 	movsd	%xmm1, 0x28(%rsp)
    00000d73: 	jbe	.Ltmp785 # Offset: 3443
.Ltmp783:
    00000d79: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d80: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000d87: 	subq	$0x20, %rax
    00000d8b: 	cmpq	%rax, %rbx
    00000d8e: 	je	.Ltmp786 # Offset: 3470
    00000d94: 	leaq	0x10(%rbx), %rdi
    00000d98: 	movq	0xa8(%rsp), %r13
    00000da0: 	movq	%rdi, (%rbx)
    00000da3: 	movq	0xa0(%rsp), %rbp
    00000dab: 	movq	%rbp, %rax
    00000dae: 	addq	%r13, %rax
    00000db1: 	je	.Ltmp787 # Offset: 3505
    00000db3: 	testq	%rbp, %rbp
    00000db6: 	je	.Ltmp788 # Offset: 3510
.Ltmp787:
    00000dbc: 	movq	%r13, 0x60(%rsp)
    00000dc1: 	cmpq	$0xf, %r13
    00000dc5: 	ja	.Ltmp789 # Offset: 3525
    00000dcb: 	cmpq	$0x1, %r13
    00000dcf: 	jne	.Ltmp790 # Offset: 3535
    00000dd5: 	movzbl	(%rbp), %eax
    00000dd9: 	movb	%al, 0x10(%rbx)
.Ltmp946:
    00000ddc: 	movq	%r13, 0x8(%rbx)
    00000de0: 	movb	$0x0, (%rdi,%r13)
    00000de5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dec: 	addq	$0x20, %rax
    00000df0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp923:
    00000df7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000dfe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e05: 	je	.Ltmp791 # Offset: 3589
.Ltmp922:
    00000e0b: 	movq	-0x20(%rax), %rbp
    00000e0f: 	callq	clock@PLT # Offset: 3599
    00000e14: 	pxor	%xmm0, %xmm0
    00000e18: 	movq	%rax, end_time(%rip)
    00000e1f: 	movq	%rbp, %rdi
    00000e22: 	subq	start_time(%rip), %rax
    00000e29: 	cvtsi2sd	%rax, %xmm0
    00000e2e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e36: 	callq	_Z13record_resultdPKc # Offset: 3638
    00000e3b: 	movq	0xa0(%rsp), %rdi
    00000e43: 	cmpq	0x38(%rsp), %rdi
    00000e48: 	je	.Ltmp792 # Offset: 3656
    00000e4a: 	movq	0xb0(%rsp), %rax
    00000e52: 	leaq	0x1(%rax), %rsi
    00000e56: 	callq	_ZdlPvm@PLT # Offset: 3670
.Ltmp792:
    00000e5b: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000e62: 	movq	%r15, %rsi
    00000e65: 	movq	%r12, %rdi
    00000e68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3688
    00000e6d: 	callq	clock@PLT # Offset: 3693
    00000e72: 	movl	iterations(%rip), %edx
    00000e78: 	movq	%rax, start_time(%rip)
    00000e7f: 	testl	%edx, %edx
    00000e81: 	jle	.Ltmp793 # Offset: 3713
    00000e87: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000e8f: 	movsd	DATAat0x1c398(%rip), %xmm6
    00000e97: 	pxor	%xmm4, %xmm4
    00000e9b: 	xorl	%ebx, %ebx
    00000e9d: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00000ea5: 	movsd	%xmm4, 0x30(%rsp)
    00000eab: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000eb2: 	movaps	%xmm5, (%rsp)
    00000eb6: 	movsd	%xmm6, 0x28(%rsp)
    00000ebc: 	movsd	%xmm7, 0x18(%rsp)
    00000ec2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp797:
    00000ec8: 	movl	$0x1f40, %eax
    00000ecd: 	pxor	%xmm0, %xmm0
    00000ed1: 	nopl	(%rax) # Size: 7
.Ltmp794:
    00000ed8: 	addsd	0x10(%rsp), %xmm0
    00000ede: 	subl	$0x1, %eax
    00000ee1: 	jne	.Ltmp794 # Offset: 3809
    00000ee3: 	pxor	%xmm2, %xmm2
    00000ee7: 	movapd	(%rsp), %xmm7
    00000eec: 	movapd	%xmm0, %xmm1
    00000ef0: 	cvtsi2sdl	init_value(%rip), %xmm2
    00000ef8: 	mulsd	0x20(%rsp), %xmm2
    00000efe: 	andpd	%xmm0, %xmm7
    00000f02: 	comisd	0x28(%rsp), %xmm7
    00000f08: 	subsd	%xmm2, %xmm1
    00000f0c: 	jbe	.Ltmp795 # Offset: 3852
    00000f0e: 	divsd	%xmm0, %xmm1
.Ltmp795:
    00000f12: 	andpd	(%rsp), %xmm1
    00000f17: 	movsd	0x18(%rsp), %xmm5
    00000f1d: 	comisd	%xmm1, %xmm5
    00000f21: 	jbe	.Ltmp796 # Offset: 3873
.Ltmp905:
    00000f27: 	addl	$0x1, %ebx
    00000f2a: 	cmpl	%edx, %ebx
    00000f2c: 	jl	.Ltmp797 # Offset: 3884
.Ltmp793:
    00000f2e: 	movq	%r12, %rsi
    00000f31: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f38: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3896
    00000f3d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f44: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f4b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f52: 	je	.Ltmp798 # Offset: 3922
.Ltmp920:
    00000f58: 	movq	-0x20(%rax), %rbp
    00000f5c: 	callq	clock@PLT # Offset: 3932
    00000f61: 	pxor	%xmm0, %xmm0
    00000f65: 	movq	%rax, end_time(%rip)
    00000f6c: 	movq	%rbp, %rdi
    00000f6f: 	subq	start_time(%rip), %rax
    00000f76: 	cvtsi2sd	%rax, %xmm0
    00000f7b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000f83: 	callq	_Z13record_resultdPKc # Offset: 3971
    00000f88: 	movq	0xa0(%rsp), %rdi
    00000f90: 	cmpq	0x38(%rsp), %rdi
    00000f95: 	je	.Ltmp799 # Offset: 3989
    00000f97: 	movq	0xb0(%rsp), %rax
    00000f9f: 	leaq	0x1(%rax), %rsi
    00000fa3: 	callq	_ZdlPvm@PLT # Offset: 4003
.Ltmp799:
    00000fa8: 	leaq	DATAat0x1c289(%rip), %rdx
    00000faf: 	movq	%r15, %rsi
    00000fb2: 	movq	%r12, %rdi
    00000fb5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4021
    00000fba: 	callq	clock@PLT # Offset: 4026
    00000fbf: 	movl	iterations(%rip), %edx
    00000fc5: 	movq	%rax, start_time(%rip)
    00000fcc: 	testl	%edx, %edx
    00000fce: 	jle	.Ltmp800 # Offset: 4046
    00000fd4: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000fdc: 	movsd	DATAat0x1c398(%rip), %xmm6
    00000fe4: 	pxor	%xmm4, %xmm4
    00000fe8: 	xorl	%ebx, %ebx
    00000fea: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00000ff2: 	movsd	%xmm4, 0x30(%rsp)
    00000ff8: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000fff: 	movaps	%xmm5, (%rsp)
    00001003: 	movsd	%xmm6, 0x28(%rsp)
    00001009: 	movsd	%xmm7, 0x18(%rsp)
    0000100f: 	nop # Size: 1
.Ltmp804:
    00001010: 	movl	$0x1f40, %eax
    00001015: 	pxor	%xmm0, %xmm0
    00001019: 	nopl	(%rax) # Size: 7
.Ltmp801:
    00001020: 	addsd	0x10(%rsp), %xmm0
    00001026: 	subl	$0x1, %eax
    00001029: 	jne	.Ltmp801 # Offset: 4137
    0000102b: 	pxor	%xmm2, %xmm2
    0000102f: 	movapd	(%rsp), %xmm4
    00001034: 	movapd	%xmm0, %xmm1
    00001038: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001040: 	mulsd	0x20(%rsp), %xmm2
    00001046: 	andpd	%xmm0, %xmm4
    0000104a: 	comisd	0x28(%rsp), %xmm4
    00001050: 	subsd	%xmm2, %xmm1
    00001054: 	jbe	.Ltmp802 # Offset: 4180
    00001056: 	divsd	%xmm0, %xmm1
.Ltmp802:
    0000105a: 	andpd	(%rsp), %xmm1
    0000105f: 	movsd	0x18(%rsp), %xmm6
    00001065: 	comisd	%xmm1, %xmm6
    00001069: 	jbe	.Ltmp803 # Offset: 4201
.Ltmp904:
    0000106f: 	addl	$0x1, %ebx
    00001072: 	cmpl	%edx, %ebx
    00001074: 	jl	.Ltmp804 # Offset: 4212
.Ltmp800:
    00001076: 	movq	%r12, %rsi
    00001079: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001080: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4224
    00001085: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000108c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001093: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000109a: 	je	.Ltmp805 # Offset: 4250
.Ltmp919:
    000010a0: 	movq	-0x20(%rax), %rbp
    000010a4: 	callq	clock@PLT # Offset: 4260
    000010a9: 	pxor	%xmm0, %xmm0
    000010ad: 	movq	%rax, end_time(%rip)
    000010b4: 	movq	%rbp, %rdi
    000010b7: 	subq	start_time(%rip), %rax
    000010be: 	cvtsi2sd	%rax, %xmm0
    000010c3: 	divsd	DATAat0x1c370(%rip), %xmm0
    000010cb: 	callq	_Z13record_resultdPKc # Offset: 4299
    000010d0: 	movq	0xa0(%rsp), %rdi
    000010d8: 	cmpq	0x38(%rsp), %rdi
    000010dd: 	je	.Ltmp806 # Offset: 4317
    000010df: 	movq	0xb0(%rsp), %rax
    000010e7: 	leaq	0x1(%rax), %rsi
    000010eb: 	callq	_ZdlPvm@PLT # Offset: 4331
.Ltmp806:
    000010f0: 	leaq	DATAat0x1c298(%rip), %rdx
    000010f7: 	movq	%r15, %rsi
    000010fa: 	movq	%r12, %rdi
    000010fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4349
    00001102: 	callq	clock@PLT # Offset: 4354
    00001107: 	movl	iterations(%rip), %ecx
    0000110d: 	movq	%rax, start_time(%rip)
    00001114: 	testl	%ecx, %ecx
    00001116: 	jle	.Ltmp807 # Offset: 4374
    00001118: 	movq	DATAat0x1c3b0(%rip), %xmm7
    00001120: 	movsd	0x40(%rsp), %xmm0
    00001126: 	xorl	%ebx, %ebx
    00001128: 	movsd	DATAat0x1c398(%rip), %xmm4
    00001130: 	andpd	%xmm7, %xmm0
    00001134: 	movaps	%xmm7, (%rsp)
    00001138: 	comisd	%xmm4, %xmm0
    0000113c: 	ja	.Ltmp808 # Offset: 4412
    00001142: 	movsd	DATAat0x1c3a0(%rip), %xmm6
    0000114a: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001151: 	movsd	%xmm6, 0x18(%rsp)
    00001157: 	movapd	%xmm6, %xmm7
.Ltmp911:
    0000115b: 	pxor	%xmm0, %xmm0
    0000115f: 	movsd	0x40(%rsp), %xmm1
    00001165: 	cvtsi2sdl	init_value(%rip), %xmm0
    0000116d: 	mulsd	0x20(%rsp), %xmm0
    00001173: 	subsd	%xmm0, %xmm1
    00001177: 	andpd	(%rsp), %xmm1
    0000117c: 	comisd	%xmm1, %xmm7
    00001180: 	movsd	%xmm1, 0x28(%rsp)
    00001186: 	jbe	.Ltmp809 # Offset: 4486
.Ltmp807:
    0000118c: 	movq	%r12, %rsi
    0000118f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001196: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4502
    0000119b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011a2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011a9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011b0: 	je	.Ltmp810 # Offset: 4528
.Ltmp930:
    000011b6: 	movq	-0x20(%rax), %rbp
    000011ba: 	callq	clock@PLT # Offset: 4538
    000011bf: 	pxor	%xmm0, %xmm0
    000011c3: 	movq	%rax, end_time(%rip)
    000011ca: 	movq	%rbp, %rdi
    000011cd: 	subq	start_time(%rip), %rax
    000011d4: 	cvtsi2sd	%rax, %xmm0
    000011d9: 	divsd	DATAat0x1c370(%rip), %xmm0
    000011e1: 	callq	_Z13record_resultdPKc # Offset: 4577
    000011e6: 	movq	0xa0(%rsp), %rdi
    000011ee: 	cmpq	0x38(%rsp), %rdi
    000011f3: 	je	.Ltmp811 # Offset: 4595
    000011f5: 	movq	0xb0(%rsp), %rax
    000011fd: 	leaq	0x1(%rax), %rsi
    00001201: 	callq	_ZdlPvm@PLT # Offset: 4609
.Ltmp811:
    00001206: 	leaq	DATAat0x1c2af(%rip), %rdx
    0000120d: 	movq	%r15, %rsi
    00001210: 	movq	%r12, %rdi
    00001213: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4627
    00001218: 	callq	clock@PLT # Offset: 4632
    0000121d: 	movl	iterations(%rip), %edx
    00001223: 	movq	%rax, start_time(%rip)
    0000122a: 	testl	%edx, %edx
    0000122c: 	jle	.Ltmp812 # Offset: 4652
    00001232: 	movq	DATAat0x1c3b0(%rip), %xmm6
    0000123a: 	movsd	DATAat0x1c398(%rip), %xmm7
    00001242: 	pxor	%xmm5, %xmm5
    00001246: 	xorl	%ebx, %ebx
    00001248: 	movsd	DATAat0x1c3a0(%rip), %xmm3
    00001250: 	movsd	%xmm5, 0x30(%rsp)
    00001256: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000125d: 	movaps	%xmm6, (%rsp)
    00001261: 	movsd	%xmm7, 0x28(%rsp)
    00001267: 	movsd	%xmm3, 0x18(%rsp)
    0000126d: 	nopl	(%rax) # Size: 3
.Ltmp816:
    00001270: 	movl	$0x1f40, %eax
    00001275: 	pxor	%xmm0, %xmm0
    00001279: 	nopl	(%rax) # Size: 7
.Ltmp813:
    00001280: 	addsd	0x10(%rsp), %xmm0
    00001286: 	subl	$0x1, %eax
    00001289: 	jne	.Ltmp813 # Offset: 4745
    0000128b: 	pxor	%xmm2, %xmm2
    0000128f: 	movapd	(%rsp), %xmm3
    00001294: 	movapd	%xmm0, %xmm1
    00001298: 	cvtsi2sdl	init_value(%rip), %xmm2
    000012a0: 	mulsd	0x20(%rsp), %xmm2
    000012a6: 	andpd	%xmm0, %xmm3
    000012aa: 	comisd	0x28(%rsp), %xmm3
    000012b0: 	subsd	%xmm2, %xmm1
    000012b4: 	jbe	.Ltmp814 # Offset: 4788
    000012b6: 	divsd	%xmm0, %xmm1
.Ltmp814:
    000012ba: 	andpd	(%rsp), %xmm1
    000012bf: 	movsd	0x18(%rsp), %xmm6
    000012c5: 	comisd	%xmm1, %xmm6
    000012c9: 	jbe	.Ltmp815 # Offset: 4809
.Ltmp898:
    000012cf: 	addl	$0x1, %ebx
    000012d2: 	cmpl	%edx, %ebx
    000012d4: 	jl	.Ltmp816 # Offset: 4820
.Ltmp812:
    000012d6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000012e4: 	subq	$0x20, %rax
    000012e8: 	cmpq	%rax, %rbx
    000012eb: 	je	.Ltmp817 # Offset: 4843
    000012f1: 	leaq	0x10(%rbx), %rdi
    000012f5: 	movq	0xa8(%rsp), %r13
    000012fd: 	movq	%rdi, (%rbx)
    00001300: 	movq	0xa0(%rsp), %rbp
    00001308: 	movq	%rbp, %rax
    0000130b: 	addq	%r13, %rax
    0000130e: 	je	.Ltmp818 # Offset: 4878
    00001310: 	testq	%rbp, %rbp
    00001313: 	je	.Ltmp819 # Offset: 4883
.Ltmp818:
    00001319: 	movq	%r13, 0x60(%rsp)
    0000131e: 	cmpq	$0xf, %r13
    00001322: 	ja	.Ltmp820 # Offset: 4898
    00001328: 	cmpq	$0x1, %r13
    0000132c: 	jne	.Ltmp821 # Offset: 4908
    00001332: 	movzbl	(%rbp), %eax
    00001336: 	movb	%al, 0x10(%rbx)
.Ltmp939:
    00001339: 	movq	%r13, 0x8(%rbx)
    0000133d: 	movb	$0x0, (%rdi,%r13)
    00001342: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001349: 	addq	$0x20, %rax
    0000134d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp935:
    00001354: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000135b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001362: 	je	.Ltmp822 # Offset: 4962
.Ltmp934:
    00001368: 	movq	-0x20(%rax), %rbp
    0000136c: 	callq	clock@PLT # Offset: 4972
    00001371: 	pxor	%xmm0, %xmm0
    00001375: 	movq	%rax, end_time(%rip)
    0000137c: 	movq	%rbp, %rdi
    0000137f: 	subq	start_time(%rip), %rax
    00001386: 	cvtsi2sd	%rax, %xmm0
    0000138b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001393: 	callq	_Z13record_resultdPKc # Offset: 5011
    00001398: 	movq	0xa0(%rsp), %rdi
    000013a0: 	cmpq	0x38(%rsp), %rdi
    000013a5: 	je	.Ltmp823 # Offset: 5029
    000013a7: 	movq	0xb0(%rsp), %rax
    000013af: 	leaq	0x1(%rax), %rsi
    000013b3: 	callq	_ZdlPvm@PLT # Offset: 5043
.Ltmp823:
    000013b8: 	leaq	DATAat0x1c2be(%rip), %rdx
    000013bf: 	movq	%r15, %rsi
    000013c2: 	movq	%r12, %rdi
    000013c5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5061
    000013ca: 	callq	clock@PLT # Offset: 5066
    000013cf: 	movl	iterations(%rip), %edx
    000013d5: 	movq	%rax, start_time(%rip)
    000013dc: 	testl	%edx, %edx
    000013de: 	jle	.Ltmp824 # Offset: 5086
    000013e4: 	movq	DATAat0x1c3b0(%rip), %xmm6
    000013ec: 	movsd	DATAat0x1c398(%rip), %xmm7
    000013f4: 	pxor	%xmm5, %xmm5
    000013f8: 	xorl	%ebx, %ebx
    000013fa: 	movsd	DATAat0x1c3a0(%rip), %xmm3
    00001402: 	movsd	%xmm5, 0x30(%rsp)
    00001408: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000140f: 	movaps	%xmm6, (%rsp)
    00001413: 	movsd	%xmm7, 0x28(%rsp)
    00001419: 	movsd	%xmm3, 0x18(%rsp)
    0000141f: 	nop # Size: 1
.Ltmp828:
    00001420: 	movl	$0x1f40, %eax
    00001425: 	pxor	%xmm0, %xmm0
    00001429: 	nopl	(%rax) # Size: 7
.Ltmp825:
    00001430: 	addsd	0x10(%rsp), %xmm0
    00001436: 	subl	$0x1, %eax
    00001439: 	jne	.Ltmp825 # Offset: 5177
    0000143b: 	pxor	%xmm2, %xmm2
    0000143f: 	movapd	(%rsp), %xmm5
    00001444: 	movapd	%xmm0, %xmm1
    00001448: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001450: 	mulsd	0x20(%rsp), %xmm2
    00001456: 	andpd	%xmm0, %xmm5
    0000145a: 	comisd	0x28(%rsp), %xmm5
    00001460: 	subsd	%xmm2, %xmm1
    00001464: 	jbe	.Ltmp826 # Offset: 5220
    00001466: 	divsd	%xmm0, %xmm1
.Ltmp826:
    0000146a: 	andpd	(%rsp), %xmm1
    0000146f: 	movsd	0x18(%rsp), %xmm5
    00001475: 	comisd	%xmm1, %xmm5
    00001479: 	jbe	.Ltmp827 # Offset: 5241
.Ltmp896:
    0000147f: 	addl	$0x1, %ebx
    00001482: 	cmpl	%edx, %ebx
    00001484: 	jl	.Ltmp828 # Offset: 5252
.Ltmp824:
    00001486: 	movq	%r12, %rsi
    00001489: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001490: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5264
    00001495: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000149c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014aa: 	je	.Ltmp829 # Offset: 5290
.Ltmp927:
    000014b0: 	movq	-0x20(%rax), %rbp
    000014b4: 	callq	clock@PLT # Offset: 5300
    000014b9: 	pxor	%xmm0, %xmm0
    000014bd: 	movq	%rax, end_time(%rip)
    000014c4: 	movq	%rbp, %rdi
    000014c7: 	subq	start_time(%rip), %rax
    000014ce: 	cvtsi2sd	%rax, %xmm0
    000014d3: 	divsd	DATAat0x1c370(%rip), %xmm0
    000014db: 	callq	_Z13record_resultdPKc # Offset: 5339
    000014e0: 	movq	0xa0(%rsp), %rdi
    000014e8: 	cmpq	0x38(%rsp), %rdi
    000014ed: 	je	.Ltmp830 # Offset: 5357
    000014ef: 	movq	0xb0(%rsp), %rax
    000014f7: 	leaq	0x1(%rax), %rsi
    000014fb: 	callq	_ZdlPvm@PLT # Offset: 5371
.Ltmp830:
    00001500: 	leaq	DATAat0x1c225(%rip), %rdx
    00001507: 	movq	%r15, %rsi
    0000150a: 	movq	%r12, %rdi
    0000150d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5389
    00001512: 	callq	clock@PLT # Offset: 5394
    00001517: 	movq	0x58(%rsp), %rbx
    0000151c: 	movl	iterations(%rip), %edx
    00001522: 	movq	%rax, start_time(%rip)
    00001529: 	shlq	$0x3, %rbx
    0000152d: 	movq	0x2a0(%rsp,%rbx), %rax
    00001535: 	movq	0x1b0(%rsp,%rax,8), %rax
    0000153d: 	movsd	0xc0(%rsp,%rax,8), %xmm4
    00001546: 	movsd	%xmm4, 0x10(%rsp)
    0000154c: 	mulsd	0x20(%rsp), %xmm4
    00001552: 	movsd	%xmm4, 0x28(%rsp)
    00001558: 	testl	%edx, %edx
    0000155a: 	jle	.Ltmp831 # Offset: 5466
    0000155c: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00001564: 	movapd	%xmm4, %xmm0
    00001568: 	xorl	%ebp, %ebp
    0000156a: 	andpd	%xmm5, %xmm0
    0000156e: 	movaps	%xmm5, (%rsp)
    00001572: 	movsd	DATAat0x1c398(%rip), %xmm5
    0000157a: 	comisd	%xmm5, %xmm0
    0000157e: 	ja	.Ltmp832 # Offset: 5502
    00001584: 	movsd	DATAat0x1c3a0(%rip), %xmm3
    0000158c: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001593: 	movsd	%xmm3, 0x18(%rsp)
    00001599: 	movapd	%xmm3, %xmm4
.Ltmp909:
    0000159d: 	pxor	%xmm0, %xmm0
    000015a1: 	movsd	0x28(%rsp), %xmm1
    000015a7: 	cvtsi2sdl	init_value(%rip), %xmm0
    000015af: 	mulsd	0x20(%rsp), %xmm0
    000015b5: 	subsd	%xmm0, %xmm1
    000015b9: 	andpd	(%rsp), %xmm1
    000015be: 	comisd	%xmm1, %xmm4
    000015c2: 	movsd	%xmm1, 0x30(%rsp)
    000015c8: 	jbe	.Ltmp833 # Offset: 5576
.Ltmp831:
    000015ce: 	movq	%r12, %rsi
    000015d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5592
    000015dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015f2: 	je	.Ltmp834 # Offset: 5618
.Ltmp917:
    000015f8: 	movq	-0x20(%rax), %rbp
    000015fc: 	callq	clock@PLT # Offset: 5628
    00001601: 	pxor	%xmm0, %xmm0
    00001605: 	movq	%rax, end_time(%rip)
    0000160c: 	movq	%rbp, %rdi
    0000160f: 	subq	start_time(%rip), %rax
    00001616: 	cvtsi2sd	%rax, %xmm0
    0000161b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001623: 	callq	_Z13record_resultdPKc # Offset: 5667
    00001628: 	movq	0xa0(%rsp), %rdi
    00001630: 	cmpq	0x38(%rsp), %rdi
    00001635: 	je	.Ltmp835 # Offset: 5685
    00001637: 	movq	0xb0(%rsp), %rax
    0000163f: 	leaq	0x1(%rax), %rsi
    00001643: 	callq	_ZdlPvm@PLT # Offset: 5699
.Ltmp835:
    00001648: 	leaq	DATAat0x1c242(%rip), %rdx
    0000164f: 	movq	%r15, %rsi
    00001652: 	movq	%r12, %rdi
    00001655: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5717
    0000165a: 	callq	clock@PLT # Offset: 5722
    0000165f: 	movl	iterations(%rip), %edx
    00001665: 	movq	%rax, start_time(%rip)
    0000166c: 	testl	%edx, %edx
    0000166e: 	jle	.Ltmp836 # Offset: 5742
    00001674: 	movq	DATAat0x1c3b0(%rip), %xmm7
    0000167c: 	movsd	DATAat0x1c398(%rip), %xmm3
    00001684: 	pxor	%xmm6, %xmm6
    00001688: 	xorl	%ebp, %ebp
    0000168a: 	movsd	DATAat0x1c3a0(%rip), %xmm4
    00001692: 	movsd	%xmm6, 0x30(%rsp)
    00001698: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000169f: 	movaps	%xmm7, (%rsp)
    000016a3: 	movsd	%xmm3, 0x28(%rsp)
    000016a9: 	movsd	%xmm4, 0x18(%rsp)
    000016af: 	nop # Size: 1
.Ltmp840:
    000016b0: 	movl	$0x1f40, %eax
    000016b5: 	pxor	%xmm0, %xmm0
    000016b9: 	nopl	(%rax) # Size: 7
.Ltmp837:
    000016c0: 	addsd	0x10(%rsp), %xmm0
    000016c6: 	subl	$0x1, %eax
    000016c9: 	jne	.Ltmp837 # Offset: 5833
    000016cb: 	pxor	%xmm2, %xmm2
    000016cf: 	movapd	(%rsp), %xmm6
    000016d4: 	movapd	%xmm0, %xmm1
    000016d8: 	cvtsi2sdl	init_value(%rip), %xmm2
    000016e0: 	mulsd	0x20(%rsp), %xmm2
    000016e6: 	andpd	%xmm0, %xmm6
    000016ea: 	comisd	0x28(%rsp), %xmm6
    000016f0: 	subsd	%xmm2, %xmm1
    000016f4: 	jbe	.Ltmp838 # Offset: 5876
    000016f6: 	divsd	%xmm0, %xmm1
.Ltmp838:
    000016fa: 	andpd	(%rsp), %xmm1
    000016ff: 	movsd	0x18(%rsp), %xmm5
    00001705: 	comisd	%xmm1, %xmm5
    00001709: 	jbe	.Ltmp839 # Offset: 5897
.Ltmp895:
    0000170f: 	addl	$0x1, %ebp
    00001712: 	cmpl	%edx, %ebp
    00001714: 	jl	.Ltmp840 # Offset: 5908
.Ltmp836:
    00001716: 	movq	%r12, %rsi
    00001719: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001720: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5920
    00001725: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000172c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001733: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000173a: 	je	.Ltmp841 # Offset: 5946
.Ltmp928:
    00001740: 	movq	-0x20(%rax), %rbp
    00001744: 	callq	clock@PLT # Offset: 5956
    00001749: 	pxor	%xmm0, %xmm0
    0000174d: 	movq	%rax, end_time(%rip)
    00001754: 	movq	%rbp, %rdi
    00001757: 	subq	start_time(%rip), %rax
    0000175e: 	cvtsi2sd	%rax, %xmm0
    00001763: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000176b: 	callq	_Z13record_resultdPKc # Offset: 5995
    00001770: 	movq	0xa0(%rsp), %rdi
    00001778: 	cmpq	0x38(%rsp), %rdi
    0000177d: 	je	.Ltmp842 # Offset: 6013
    0000177f: 	movq	0xb0(%rsp), %rax
    00001787: 	leaq	0x1(%rax), %rsi
    0000178b: 	callq	_ZdlPvm@PLT # Offset: 6027
.Ltmp842:
    00001790: 	leaq	DATAat0x1c257(%rip), %rdx
    00001797: 	movq	%r15, %rsi
    0000179a: 	movq	%r12, %rdi
    0000179d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6045
    000017a2: 	callq	clock@PLT # Offset: 6050
    000017a7: 	movl	iterations(%rip), %edx
    000017ad: 	movq	%rax, start_time(%rip)
    000017b4: 	testl	%edx, %edx
    000017b6: 	jle	.Ltmp843 # Offset: 6070
    000017bc: 	movq	DATAat0x1c3b0(%rip), %xmm7
    000017c4: 	movsd	DATAat0x1c398(%rip), %xmm3
    000017cc: 	pxor	%xmm6, %xmm6
    000017d0: 	xorl	%ebp, %ebp
    000017d2: 	movsd	DATAat0x1c3a0(%rip), %xmm4
    000017da: 	movsd	%xmm6, 0x30(%rsp)
    000017e0: 	leaq	DATAat0x1c1c8(%rip), %r13
    000017e7: 	movaps	%xmm7, (%rsp)
    000017eb: 	movsd	%xmm3, 0x28(%rsp)
    000017f1: 	movsd	%xmm4, 0x18(%rsp)
    000017f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp847:
    00001800: 	movl	$0x1f40, %eax
    00001805: 	pxor	%xmm0, %xmm0
    00001809: 	nopl	(%rax) # Size: 7
.Ltmp844:
    00001810: 	addsd	0x10(%rsp), %xmm0
    00001816: 	subl	$0x1, %eax
    00001819: 	jne	.Ltmp844 # Offset: 6169
    0000181b: 	pxor	%xmm2, %xmm2
    0000181f: 	movapd	(%rsp), %xmm7
    00001824: 	movapd	%xmm0, %xmm1
    00001828: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001830: 	mulsd	0x20(%rsp), %xmm2
    00001836: 	andpd	%xmm0, %xmm7
    0000183a: 	comisd	0x28(%rsp), %xmm7
    00001840: 	subsd	%xmm2, %xmm1
    00001844: 	jbe	.Ltmp845 # Offset: 6212
    00001846: 	divsd	%xmm0, %xmm1
.Ltmp845:
    0000184a: 	andpd	(%rsp), %xmm1
    0000184f: 	movsd	0x18(%rsp), %xmm3
    00001855: 	comisd	%xmm1, %xmm3
    00001859: 	jbe	.Ltmp846 # Offset: 6233
.Ltmp897:
    0000185f: 	addl	$0x1, %ebp
    00001862: 	cmpl	%edx, %ebp
    00001864: 	jl	.Ltmp847 # Offset: 6244
.Ltmp843:
    00001866: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000186d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001874: 	subq	$0x20, %rax
    00001878: 	cmpq	%rax, %rbp
    0000187b: 	je	.Ltmp848 # Offset: 6267
    00001881: 	leaq	0x10(%rbp), %rdi
    00001885: 	movq	0xa8(%rsp), %r13
    0000188d: 	movq	%rdi, (%rbp)
    00001891: 	movq	0xa0(%rsp), %r14
    00001899: 	movq	%r14, %rax
    0000189c: 	addq	%r13, %rax
    0000189f: 	je	.Ltmp849 # Offset: 6303
    000018a1: 	testq	%r14, %r14
    000018a4: 	je	.Ltmp850 # Offset: 6308
.Ltmp849:
    000018aa: 	movq	%r13, 0x60(%rsp)
    000018af: 	cmpq	$0xf, %r13
    000018b3: 	ja	.Ltmp851 # Offset: 6323
    000018b9: 	cmpq	$0x1, %r13
    000018bd: 	jne	.Ltmp852 # Offset: 6333
    000018c3: 	movzbl	(%r14), %eax
    000018c7: 	movb	%al, 0x10(%rbp)
.Ltmp944:
    000018ca: 	movq	%r13, 0x8(%rbp)
    000018ce: 	movb	$0x0, (%rdi,%r13)
    000018d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018e1: 	addq	$0x20, %rax
    000018e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000018f3: 	je	.Ltmp853 # Offset: 6387
.Ltmp929:
    000018f9: 	movq	-0x20(%rax), %rbp
    000018fd: 	callq	clock@PLT # Offset: 6397
    00001902: 	pxor	%xmm0, %xmm0
    00001906: 	movq	%rax, end_time(%rip)
    0000190d: 	movq	%rbp, %rdi
    00001910: 	subq	start_time(%rip), %rax
    00001917: 	cvtsi2sd	%rax, %xmm0
    0000191c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001924: 	callq	_Z13record_resultdPKc # Offset: 6436
    00001929: 	movq	0xa0(%rsp), %rdi
    00001931: 	cmpq	0x38(%rsp), %rdi
    00001936: 	je	.Ltmp854 # Offset: 6454
    00001938: 	movq	0xb0(%rsp), %rax
    00001940: 	leaq	0x1(%rax), %rsi
    00001944: 	callq	_ZdlPvm@PLT # Offset: 6468
.Ltmp854:
    00001949: 	leaq	DATAat0x1c338(%rip), %rdx
    00001950: 	movq	%r15, %rsi
    00001953: 	movq	%r12, %rdi
    00001956: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6486
    0000195b: 	callq	clock@PLT # Offset: 6491
    00001960: 	movq	%rax, start_time(%rip)
    00001967: 	movq	0x1b0(%rsp,%rbx), %rax
    0000196f: 	movq	0x2a0(%rsp,%rax,8), %rax
    00001977: 	movq	0x1b0(%rsp,%rax,8), %rax
    0000197f: 	movq	0x2a0(%rsp,%rax,8), %rax
    00001987: 	movq	0x1b0(%rsp,%rax,8), %rax
    0000198f: 	movsd	0xc0(%rsp,%rax,8), %xmm3
    00001998: 	movl	iterations(%rip), %eax
    0000199e: 	movsd	%xmm3, 0x10(%rsp)
    000019a4: 	mulsd	0x20(%rsp), %xmm3
    000019aa: 	movsd	%xmm3, 0x28(%rsp)
    000019b0: 	testl	%eax, %eax
    000019b2: 	jle	.Ltmp855 # Offset: 6578
    000019b4: 	movapd	%xmm3, %xmm0
    000019b8: 	movq	DATAat0x1c3b0(%rip), %xmm3
    000019c0: 	movsd	DATAat0x1c398(%rip), %xmm6
    000019c8: 	xorl	%ebx, %ebx
    000019ca: 	andpd	%xmm3, %xmm0
    000019ce: 	movaps	%xmm3, (%rsp)
    000019d2: 	comisd	%xmm6, %xmm0
    000019d6: 	ja	.Ltmp856 # Offset: 6614
    000019dc: 	movsd	DATAat0x1c3a0(%rip), %xmm6
    000019e4: 	leaq	DATAat0x1c1c8(%rip), %rbp
    000019eb: 	movsd	%xmm6, 0x18(%rsp)
    000019f1: 	movapd	%xmm6, %xmm3
.Ltmp910:
    000019f5: 	pxor	%xmm0, %xmm0
    000019f9: 	movsd	0x28(%rsp), %xmm1
    000019ff: 	cvtsi2sdl	init_value(%rip), %xmm0
    00001a07: 	mulsd	0x20(%rsp), %xmm0
    00001a0d: 	subsd	%xmm0, %xmm1
    00001a11: 	andpd	(%rsp), %xmm1
    00001a16: 	comisd	%xmm1, %xmm3
    00001a1a: 	movsd	%xmm1, 0x30(%rsp)
    00001a20: 	jbe	.Ltmp857 # Offset: 6688
.Ltmp855:
    00001a26: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001a2d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001a34: 	subq	$0x20, %rax
    00001a38: 	cmpq	%rax, %rbx
    00001a3b: 	je	.Ltmp858 # Offset: 6715
    00001a41: 	leaq	0x10(%rbx), %rdi
    00001a45: 	movq	0xa8(%rsp), %r13
    00001a4d: 	movq	%rdi, (%rbx)
    00001a50: 	movq	0xa0(%rsp), %rbp
    00001a58: 	movq	%rbp, %rax
    00001a5b: 	addq	%r13, %rax
    00001a5e: 	je	.Ltmp859 # Offset: 6750
    00001a60: 	testq	%rbp, %rbp
    00001a63: 	je	.Ltmp860 # Offset: 6755
.Ltmp859:
    00001a69: 	movq	%r13, 0x60(%rsp)
    00001a6e: 	cmpq	$0xf, %r13
    00001a72: 	ja	.Ltmp861 # Offset: 6770
    00001a78: 	cmpq	$0x1, %r13
    00001a7c: 	jne	.Ltmp862 # Offset: 6780
    00001a82: 	movzbl	(%rbp), %eax
    00001a86: 	movb	%al, 0x10(%rbx)
.Ltmp941:
    00001a89: 	movq	%r13, 0x8(%rbx)
    00001a8d: 	movb	$0x0, (%rdi,%r13)
    00001a92: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a99: 	addq	$0x20, %rax
    00001a9d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp933:
    00001aa4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001aab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ab2: 	je	.Ltmp863 # Offset: 6834
.Ltmp932:
    00001ab8: 	movq	-0x20(%rax), %rbp
    00001abc: 	callq	clock@PLT # Offset: 6844
    00001ac1: 	pxor	%xmm0, %xmm0
    00001ac5: 	movq	%rax, end_time(%rip)
    00001acc: 	movq	%rbp, %rdi
    00001acf: 	subq	start_time(%rip), %rax
    00001ad6: 	cvtsi2sd	%rax, %xmm0
    00001adb: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001ae3: 	callq	_Z13record_resultdPKc # Offset: 6883
    00001ae8: 	movq	0xa0(%rsp), %rdi
    00001af0: 	cmpq	0x38(%rsp), %rdi
    00001af5: 	je	.Ltmp864 # Offset: 6901
    00001af7: 	movq	0xb0(%rsp), %rax
    00001aff: 	leaq	0x1(%rax), %rsi
    00001b03: 	callq	_ZdlPvm@PLT # Offset: 6915
.Ltmp864:
    00001b08: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001b0f: 	movq	%r15, %rsi
    00001b12: 	movq	%r12, %rdi
    00001b15: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6933
    00001b1a: 	callq	clock@PLT # Offset: 6938
    00001b1f: 	movl	iterations(%rip), %edx
    00001b25: 	movq	%rax, start_time(%rip)
    00001b2c: 	testl	%edx, %edx
    00001b2e: 	jle	.Ltmp865 # Offset: 6958
    00001b34: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00001b3c: 	movsd	DATAat0x1c398(%rip), %xmm4
    00001b44: 	pxor	%xmm7, %xmm7
    00001b48: 	xorl	%ebx, %ebx
    00001b4a: 	movsd	DATAat0x1c3a0(%rip), %xmm5
    00001b52: 	movsd	%xmm7, 0x30(%rsp)
    00001b58: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001b5f: 	movaps	%xmm3, (%rsp)
    00001b63: 	movsd	%xmm4, 0x28(%rsp)
    00001b69: 	movsd	%xmm5, 0x18(%rsp)
    00001b6f: 	nop # Size: 1
.Ltmp869:
    00001b70: 	movl	$0x1f40, %eax
    00001b75: 	pxor	%xmm0, %xmm0
    00001b79: 	nopl	(%rax) # Size: 7
.Ltmp866:
    00001b80: 	addsd	0x10(%rsp), %xmm0
    00001b86: 	subl	$0x1, %eax
    00001b89: 	jne	.Ltmp866 # Offset: 7049
    00001b8b: 	pxor	%xmm2, %xmm2
    00001b8f: 	movapd	(%rsp), %xmm4
    00001b94: 	movapd	%xmm0, %xmm1
    00001b98: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001ba0: 	mulsd	0x20(%rsp), %xmm2
    00001ba6: 	andpd	%xmm0, %xmm4
    00001baa: 	comisd	0x28(%rsp), %xmm4
    00001bb0: 	subsd	%xmm2, %xmm1
    00001bb4: 	jbe	.Ltmp867 # Offset: 7092
    00001bb6: 	divsd	%xmm0, %xmm1
.Ltmp867:
    00001bba: 	andpd	(%rsp), %xmm1
    00001bbf: 	movsd	0x18(%rsp), %xmm3
    00001bc5: 	comisd	%xmm1, %xmm3
    00001bc9: 	jbe	.Ltmp868 # Offset: 7113
.Ltmp900:
    00001bcf: 	addl	$0x1, %ebx
    00001bd2: 	cmpl	%edx, %ebx
    00001bd4: 	jl	.Ltmp869 # Offset: 7124
.Ltmp865:
    00001bd6: 	movq	%r12, %rsi
    00001bd9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001be0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7136
    00001be5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bf3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bfa: 	je	.Ltmp870 # Offset: 7162
.Ltmp936:
    00001c00: 	movq	-0x20(%rax), %rbp
    00001c04: 	callq	clock@PLT # Offset: 7172
    00001c09: 	pxor	%xmm0, %xmm0
    00001c0d: 	movq	%rax, end_time(%rip)
    00001c14: 	movq	%rbp, %rdi
    00001c17: 	subq	start_time(%rip), %rax
    00001c1e: 	cvtsi2sd	%rax, %xmm0
    00001c23: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001c2b: 	callq	_Z13record_resultdPKc # Offset: 7211
    00001c30: 	movq	0xa0(%rsp), %rdi
    00001c38: 	cmpq	0x38(%rsp), %rdi
    00001c3d: 	je	.Ltmp871 # Offset: 7229
    00001c3f: 	movq	0xb0(%rsp), %rax
    00001c47: 	leaq	0x1(%rax), %rsi
    00001c4b: 	callq	_ZdlPvm@PLT # Offset: 7243
.Ltmp871:
    00001c50: 	leaq	DATAat0x1c2e7(%rip), %rdx
    00001c57: 	movq	%r15, %rsi
    00001c5a: 	movq	%r12, %rdi
    00001c5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7261
    00001c62: 	callq	clock@PLT # Offset: 7266
    00001c67: 	movl	iterations(%rip), %edx
    00001c6d: 	movq	%rax, start_time(%rip)
    00001c74: 	testl	%edx, %edx
    00001c76: 	jle	.Ltmp872 # Offset: 7286
    00001c7c: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00001c84: 	movsd	DATAat0x1c398(%rip), %xmm4
    00001c8c: 	pxor	%xmm7, %xmm7
    00001c90: 	xorl	%ebx, %ebx
    00001c92: 	movsd	DATAat0x1c3a0(%rip), %xmm5
    00001c9a: 	movsd	%xmm7, 0x30(%rsp)
    00001ca0: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001ca7: 	movaps	%xmm3, (%rsp)
    00001cab: 	movsd	%xmm4, 0x28(%rsp)
    00001cb1: 	movsd	%xmm5, 0x18(%rsp)
    00001cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp876:
    00001cc0: 	movl	$0x1f40, %eax
    00001cc5: 	pxor	%xmm0, %xmm0
    00001cc9: 	nopl	(%rax) # Size: 7
.Ltmp873:
    00001cd0: 	addsd	0x10(%rsp), %xmm0
    00001cd6: 	subl	$0x1, %eax
    00001cd9: 	jne	.Ltmp873 # Offset: 7385
    00001cdb: 	pxor	%xmm2, %xmm2
    00001cdf: 	movapd	(%rsp), %xmm3
    00001ce4: 	movapd	%xmm0, %xmm1
    00001ce8: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001cf0: 	mulsd	0x20(%rsp), %xmm2
    00001cf6: 	andpd	%xmm0, %xmm3
    00001cfa: 	comisd	0x28(%rsp), %xmm3
    00001d00: 	subsd	%xmm2, %xmm1
    00001d04: 	jbe	.Ltmp874 # Offset: 7428
    00001d06: 	divsd	%xmm0, %xmm1
.Ltmp874:
    00001d0a: 	andpd	(%rsp), %xmm1
    00001d0f: 	movsd	0x18(%rsp), %xmm4
    00001d15: 	comisd	%xmm1, %xmm4
    00001d19: 	jbe	.Ltmp875 # Offset: 7449
.Ltmp899:
    00001d1f: 	addl	$0x1, %ebx
    00001d22: 	cmpl	%edx, %ebx
    00001d24: 	jl	.Ltmp876 # Offset: 7460
.Ltmp872:
    00001d26: 	movq	%r12, %rsi
    00001d29: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7472
    00001d35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d4a: 	je	.Ltmp877 # Offset: 7498
.Ltmp931:
    00001d50: 	movq	-0x20(%rax), %rbp
    00001d54: 	callq	clock@PLT # Offset: 7508
    00001d59: 	pxor	%xmm0, %xmm0
    00001d5d: 	movq	%rax, end_time(%rip)
    00001d64: 	movq	%rbp, %rdi
    00001d67: 	subq	start_time(%rip), %rax
    00001d6e: 	cvtsi2sd	%rax, %xmm0
    00001d73: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001d7b: 	callq	_Z13record_resultdPKc # Offset: 7547
    00001d80: 	movq	0xa0(%rsp), %rdi
    00001d88: 	cmpq	0x38(%rsp), %rdi
    00001d8d: 	je	.Ltmp878 # Offset: 7565
    00001d8f: 	movq	0xb0(%rsp), %rax
    00001d97: 	leaq	0x1(%rax), %rsi
    00001d9b: 	callq	_ZdlPvm@PLT # Offset: 7579
.Ltmp878:
    00001da0: 	leaq	DATAat0x1c301(%rip), %rdx
    00001da7: 	movq	%r15, %rsi
    00001daa: 	movq	%r12, %rdi
    00001dad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7597
    00001db2: 	callq	clock@PLT # Offset: 7602
    00001db7: 	movl	iterations(%rip), %edx
    00001dbd: 	movq	%rax, start_time(%rip)
    00001dc4: 	testl	%edx, %edx
    00001dc6: 	jle	.Ltmp879 # Offset: 7622
    00001dcc: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00001dd4: 	movsd	DATAat0x1c398(%rip), %xmm4
    00001ddc: 	pxor	%xmm7, %xmm7
    00001de0: 	xorl	%ebx, %ebx
    00001de2: 	movsd	DATAat0x1c3a0(%rip), %xmm5
    00001dea: 	movsd	%xmm7, 0x30(%rsp)
    00001df0: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001df7: 	movaps	%xmm3, (%rsp)
    00001dfb: 	movsd	%xmm4, 0x28(%rsp)
    00001e01: 	movsd	%xmm5, 0x18(%rsp)
    00001e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp883:
    00001e10: 	movl	$0x1f40, %eax
    00001e15: 	pxor	%xmm0, %xmm0
    00001e19: 	nopl	(%rax) # Size: 7
.Ltmp880:
    00001e20: 	addsd	0x10(%rsp), %xmm0
    00001e26: 	subl	$0x1, %eax
    00001e29: 	jne	.Ltmp880 # Offset: 7721
    00001e2b: 	pxor	%xmm2, %xmm2
    00001e2f: 	movapd	(%rsp), %xmm5
    00001e34: 	movapd	%xmm0, %xmm1
    00001e38: 	cvtsi2sdl	init_value(%rip), %xmm2
    00001e40: 	mulsd	0x20(%rsp), %xmm2
    00001e46: 	andpd	%xmm0, %xmm5
    00001e4a: 	comisd	0x28(%rsp), %xmm5
    00001e50: 	subsd	%xmm2, %xmm1
    00001e54: 	jbe	.Ltmp881 # Offset: 7764
    00001e56: 	divsd	%xmm0, %xmm1
.Ltmp881:
    00001e5a: 	andpd	(%rsp), %xmm1
    00001e5f: 	movsd	0x18(%rsp), %xmm7
    00001e65: 	comisd	%xmm1, %xmm7
    00001e69: 	jbe	.Ltmp882 # Offset: 7785
.Ltmp894:
    00001e6f: 	addl	$0x1, %ebx
    00001e72: 	cmpl	%edx, %ebx
    00001e74: 	jl	.Ltmp883 # Offset: 7796
.Ltmp879:
    00001e76: 	movq	%r12, %rsi
    00001e79: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e80: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7808
    00001e85: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e8c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e93: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e9a: 	je	.Ltmp884 # Offset: 7834
.Ltmp916:
    00001ea0: 	movq	-0x20(%rax), %rbp
    00001ea4: 	callq	clock@PLT # Offset: 7844
    00001ea9: 	pxor	%xmm0, %xmm0
    00001ead: 	movq	%rax, end_time(%rip)
    00001eb4: 	movq	%rbp, %rdi
    00001eb7: 	subq	start_time(%rip), %rax
    00001ebe: 	cvtsi2sd	%rax, %xmm0
    00001ec3: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001ecb: 	callq	_Z13record_resultdPKc # Offset: 7883
    00001ed0: 	movq	0xa0(%rsp), %rdi
    00001ed8: 	cmpq	0x38(%rsp), %rdi
    00001edd: 	je	.Ltmp885 # Offset: 7901
    00001edf: 	movq	0xb0(%rsp), %rax
    00001ee7: 	leaq	0x1(%rax), %rsi
    00001eeb: 	callq	_ZdlPvm@PLT # Offset: 7915
.Ltmp885:
    00001ef0: 	leaq	DATAat0x1c31b(%rip), %rdx
    00001ef7: 	movq	%r15, %rsi
    00001efa: 	movq	%r12, %rdi
    00001efd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7933
    00001f02: 	movl	iterations(%rip), %edx
    00001f08: 	xorl	%r8d, %r8d
    00001f0b: 	xorl	%ecx, %ecx
    00001f0d: 	movl	$0x1f40, %esi
    00001f12: 	movq	0xa0(%rsp), %rdi
    00001f1a: 	callq	_Z9summarizePKciiii # Offset: 7962
    00001f1f: 	movq	0xa0(%rsp), %rdi
    00001f27: 	cmpq	0x38(%rsp), %rdi
    00001f2c: 	je	.Ltmp886 # Offset: 7980
    00001f2e: 	movq	0xb0(%rsp), %rax
    00001f36: 	leaq	0x1(%rax), %rsi
    00001f3a: 	callq	_ZdlPvm@PLT # Offset: 7994
.Ltmp886:
    00001f3f: 	movq	0x80(%rsp), %rdi
    00001f47: 	cmpq	0x50(%rsp), %rdi
    00001f4c: 	je	.Ltmp887 # Offset: 8012
    00001f4e: 	movq	0x90(%rsp), %rax
    00001f56: 	leaq	0x1(%rax), %rsi
    00001f5a: 	callq	_ZdlPvm@PLT # Offset: 8026
.Ltmp887:
    00001f5f: 	movq	0xfd98(%rsp), %rax
    00001f67: 	subq	%fs:0x28, %rax
    00001f70: 	jne	.Ltmp888 # Offset: 8048
    00001f76: 	addq	$0xfda8, %rsp
    00001f7d: 	popq	%rbx
    00001f7e: 	popq	%rbp
    00001f7f: 	popq	%r12
    00001f81: 	popq	%r13
    00001f83: 	popq	%r14
    00001f85: 	popq	%r15
    00001f87: 	retq # Offset: 8071
    00001f88: 	nopl	(%rax,%rax) # Size: 8
.Ltmp734:
    00001f90: 	movq	0xa0(%rsp), %rdx
    00001f98: 	movq	%r14, %rsi
    00001f9b: 	movl	$0x1, %edi
    00001fa0: 	xorl	%eax, %eax
    00001fa2: 	callq	__printf_chk@PLT # Offset: 8098
    00001fa7: 	movl	iterations(%rip), %edx
    00001fad: 	jmp	.Ltmp889 # Offset: 8109
.Ltmp730:
    00001fb2: 	subsd	%xmm2, %xmm0
    00001fb6: 	cvttsd2si	%xmm0, %rcx
    00001fbb: 	btcq	$0x3f, %rcx
    00001fc0: 	jmp	.Ltmp890 # Offset: 8128
.Ltmp729:
    00001fc5: 	movapd	%xmm3, %xmm1
    00001fc9: 	subsd	%xmm2, %xmm1
    00001fcd: 	cvttsd2si	%xmm1, %rcx
    00001fd2: 	btcq	$0x3f, %rcx
    00001fd7: 	jmp	.Ltmp891 # Offset: 8151
.Ltmp728:
    00001fdc: 	movapd	%xmm0, %xmm4
    00001fe0: 	subsd	%xmm2, %xmm4
    00001fe4: 	cvttsd2si	%xmm4, %rcx
    00001fe9: 	btcq	$0x3f, %rcx
    00001fee: 	jmp	.Ltmp892 # Offset: 8174
.Ltmp739:
    00001ff3: 	movq	0x48(%rsp), %rsi
    00001ff8: 	xorl	%edx, %edx
    00001ffa: 	movq	%r14, %rdi
    00001ffd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8189
    00002002: 	movq	%rax, (%r14)
    00002005: 	movq	%rax, %rdi
    00002008: 	movq	0x60(%rsp), %rax
    0000200d: 	movq	%rax, 0x10(%r14)
.Ltmp942:
    00002011: 	movq	(%rsp), %rsi
    00002015: 	movq	%r13, %rdx
    00002018: 	callq	memcpy@PLT # Offset: 8216
    0000201d: 	movq	0x60(%rsp), %r13
    00002022: 	movq	(%r14), %rdi
    00002025: 	jmp	.Ltmp893 # Offset: 8229
    0000202a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp882:
    00002030: 	movq	0xa0(%rsp), %rdx
    00002038: 	movq	%rbp, %rsi
    0000203b: 	movl	$0x1, %edi
    00002040: 	xorl	%eax, %eax
    00002042: 	callq	__printf_chk@PLT # Offset: 8258
    00002047: 	movl	iterations(%rip), %edx
    0000204d: 	jmp	.Ltmp894 # Offset: 8269
    00002052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp839:
    00002058: 	movq	0xa0(%rsp), %rdx
    00002060: 	movq	%r13, %rsi
    00002063: 	movl	$0x1, %edi
    00002068: 	xorl	%eax, %eax
    0000206a: 	callq	__printf_chk@PLT # Offset: 8298
    0000206f: 	movl	iterations(%rip), %edx
    00002075: 	jmp	.Ltmp895 # Offset: 8309
    0000207a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp827:
    00002080: 	movq	0xa0(%rsp), %rdx
    00002088: 	movq	%rbp, %rsi
    0000208b: 	movl	$0x1, %edi
    00002090: 	xorl	%eax, %eax
    00002092: 	callq	__printf_chk@PLT # Offset: 8338
    00002097: 	movl	iterations(%rip), %edx
    0000209d: 	jmp	.Ltmp896 # Offset: 8349
    000020a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp846:
    000020a8: 	movq	0xa0(%rsp), %rdx
    000020b0: 	movq	%r13, %rsi
    000020b3: 	movl	$0x1, %edi
    000020b8: 	xorl	%eax, %eax
    000020ba: 	callq	__printf_chk@PLT # Offset: 8378
    000020bf: 	movl	iterations(%rip), %edx
    000020c5: 	jmp	.Ltmp897 # Offset: 8389
    000020ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp815:
    000020d0: 	movq	0xa0(%rsp), %rdx
    000020d8: 	movq	%rbp, %rsi
    000020db: 	movl	$0x1, %edi
    000020e0: 	xorl	%eax, %eax
    000020e2: 	callq	__printf_chk@PLT # Offset: 8418
    000020e7: 	movl	iterations(%rip), %edx
    000020ed: 	jmp	.Ltmp898 # Offset: 8429
    000020f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp875:
    000020f8: 	movq	0xa0(%rsp), %rdx
    00002100: 	movq	%rbp, %rsi
    00002103: 	movl	$0x1, %edi
    00002108: 	xorl	%eax, %eax
    0000210a: 	callq	__printf_chk@PLT # Offset: 8458
    0000210f: 	movl	iterations(%rip), %edx
    00002115: 	jmp	.Ltmp899 # Offset: 8469
    0000211a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp868:
    00002120: 	movq	0xa0(%rsp), %rdx
    00002128: 	movq	%rbp, %rsi
    0000212b: 	movl	$0x1, %edi
    00002130: 	xorl	%eax, %eax
    00002132: 	callq	__printf_chk@PLT # Offset: 8498
    00002137: 	movl	iterations(%rip), %edx
    0000213d: 	jmp	.Ltmp900 # Offset: 8509
    00002142: 	nopw	(%rax,%rax) # Size: 6
.Ltmp760:
    00002148: 	movq	0xa0(%rsp), %rdx
    00002150: 	movq	%r14, %rsi
    00002153: 	movl	$0x1, %edi
    00002158: 	xorl	%eax, %eax
    0000215a: 	callq	__printf_chk@PLT # Offset: 8538
    0000215f: 	movl	iterations(%rip), %edx
    00002165: 	jmp	.Ltmp901 # Offset: 8549
    0000216a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp753:
    00002170: 	movq	0xa0(%rsp), %rdx
    00002178: 	movq	%r14, %rsi
    0000217b: 	movl	$0x1, %edi
    00002180: 	xorl	%eax, %eax
    00002182: 	callq	__printf_chk@PLT # Offset: 8578
    00002187: 	movl	iterations(%rip), %edx
    0000218d: 	jmp	.Ltmp902 # Offset: 8589
    00002192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp746:
    00002198: 	movq	0xa0(%rsp), %rdx
    000021a0: 	movq	%r14, %rsi
    000021a3: 	movl	$0x1, %edi
    000021a8: 	xorl	%eax, %eax
    000021aa: 	callq	__printf_chk@PLT # Offset: 8618
    000021af: 	movl	iterations(%rip), %edx
    000021b5: 	jmp	.Ltmp903 # Offset: 8629
    000021ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp803:
    000021c0: 	movq	0xa0(%rsp), %rdx
    000021c8: 	movq	%rbp, %rsi
    000021cb: 	movl	$0x1, %edi
    000021d0: 	xorl	%eax, %eax
    000021d2: 	callq	__printf_chk@PLT # Offset: 8658
    000021d7: 	movl	iterations(%rip), %edx
    000021dd: 	jmp	.Ltmp904 # Offset: 8669
    000021e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp796:
    000021e8: 	movq	0xa0(%rsp), %rdx
    000021f0: 	movq	%rbp, %rsi
    000021f3: 	movl	$0x1, %edi
    000021f8: 	xorl	%eax, %eax
    000021fa: 	callq	__printf_chk@PLT # Offset: 8698
    000021ff: 	movl	iterations(%rip), %edx
    00002205: 	jmp	.Ltmp905 # Offset: 8709
    0000220a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp772:
    00002210: 	movq	0xa0(%rsp), %rdx
    00002218: 	movq	%r14, %rsi
    0000221b: 	movl	$0x1, %edi
    00002220: 	xorl	%eax, %eax
    00002222: 	callq	__printf_chk@PLT # Offset: 8738
    00002227: 	movl	iterations(%rip), %edx
    0000222d: 	jmp	.Ltmp906 # Offset: 8749
    00002232: 	nopw	(%rax,%rax) # Size: 6
.Ltmp779:
    00002238: 	movq	0xa0(%rsp), %rdx
    00002240: 	movq	%r14, %rsi
    00002243: 	movl	$0x1, %edi
    00002248: 	xorl	%eax, %eax
    0000224a: 	callq	__printf_chk@PLT # Offset: 8778
    0000224f: 	movl	iterations(%rip), %edx
    00002255: 	jmp	.Ltmp907 # Offset: 8789
    0000225a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp785:
    00002260: 	movq	0xa0(%rsp), %rdx
    00002268: 	movq	%rbp, %rsi
    0000226b: 	movl	$0x1, %edi
    00002270: 	xorl	%eax, %eax
    00002272: 	callq	__printf_chk@PLT # Offset: 8818
    00002277: 	addl	$0x1, %ebx
    0000227a: 	cmpl	iterations(%rip), %ebx
    00002280: 	jge	.Ltmp783 # Offset: 8832
    00002286: 	movsd	0x18(%rsp), %xmm4
    0000228c: 	comisd	0x28(%rsp), %xmm4
    00002292: 	ja	.Ltmp783 # Offset: 8850
    00002298: 	movapd	%xmm4, %xmm5
    0000229c: 	jmp	.Ltmp908 # Offset: 8860
    000022a1: 	nopl	(%rax) # Size: 7
.Ltmp833:
    000022a8: 	movq	0xa0(%rsp), %rdx
    000022b0: 	movq	%r13, %rsi
    000022b3: 	movl	$0x1, %edi
    000022b8: 	xorl	%eax, %eax
    000022ba: 	callq	__printf_chk@PLT # Offset: 8890
    000022bf: 	addl	$0x1, %ebp
    000022c2: 	cmpl	iterations(%rip), %ebp
    000022c8: 	jge	.Ltmp831 # Offset: 8904
    000022ce: 	movsd	0x18(%rsp), %xmm6
    000022d4: 	comisd	0x30(%rsp), %xmm6
    000022da: 	ja	.Ltmp831 # Offset: 8922
    000022e0: 	movapd	%xmm6, %xmm4
    000022e4: 	jmp	.Ltmp909 # Offset: 8932
    000022e9: 	nopl	(%rax) # Size: 7
.Ltmp857:
    000022f0: 	movq	0xa0(%rsp), %rdx
    000022f8: 	movq	%rbp, %rsi
    000022fb: 	movl	$0x1, %edi
    00002300: 	xorl	%eax, %eax
    00002302: 	callq	__printf_chk@PLT # Offset: 8962
    00002307: 	addl	$0x1, %ebx
    0000230a: 	cmpl	iterations(%rip), %ebx
    00002310: 	jge	.Ltmp855 # Offset: 8976
    00002316: 	movsd	0x18(%rsp), %xmm4
    0000231c: 	comisd	0x30(%rsp), %xmm4
    00002322: 	ja	.Ltmp855 # Offset: 8994
    00002328: 	movapd	%xmm4, %xmm3
    0000232c: 	jmp	.Ltmp910 # Offset: 9004
    00002331: 	nopl	(%rax) # Size: 7
.Ltmp809:
    00002338: 	movq	0xa0(%rsp), %rdx
    00002340: 	movq	%rbp, %rsi
    00002343: 	movl	$0x1, %edi
    00002348: 	xorl	%eax, %eax
    0000234a: 	callq	__printf_chk@PLT # Offset: 9034
    0000234f: 	addl	$0x1, %ebx
    00002352: 	cmpl	iterations(%rip), %ebx
    00002358: 	jge	.Ltmp807 # Offset: 9048
    0000235e: 	movsd	0x18(%rsp), %xmm7
    00002364: 	comisd	0x28(%rsp), %xmm7
    0000236a: 	ja	.Ltmp807 # Offset: 9066
    00002370: 	jmp	.Ltmp911 # Offset: 9072
.Ltmp856:
    00002375: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    0000237d: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00002384: 	movsd	%xmm7, 0x18(%rsp)
.Ltmp912:
    0000238a: 	pxor	%xmm1, %xmm1
    0000238e: 	movsd	0x28(%rsp), %xmm5
    00002394: 	cvtsi2sdl	init_value(%rip), %xmm1
    0000239c: 	mulsd	0x20(%rsp), %xmm1
    000023a2: 	movapd	%xmm5, %xmm0
    000023a6: 	subsd	%xmm1, %xmm0
    000023aa: 	divsd	%xmm5, %xmm0
    000023ae: 	andpd	(%rsp), %xmm0
    000023b3: 	comisd	%xmm0, %xmm7
    000023b7: 	movsd	%xmm0, 0x30(%rsp)
    000023bd: 	ja	.Ltmp855 # Offset: 9149
    000023c3: 	movq	0xa0(%rsp), %rdx
    000023cb: 	movq	%rbp, %rsi
    000023ce: 	movl	$0x1, %edi
    000023d3: 	xorl	%eax, %eax
    000023d5: 	callq	__printf_chk@PLT # Offset: 9173
    000023da: 	addl	$0x1, %ebx
    000023dd: 	cmpl	iterations(%rip), %ebx
    000023e3: 	jge	.Ltmp855 # Offset: 9187
    000023e9: 	movsd	0x18(%rsp), %xmm7
    000023ef: 	comisd	0x30(%rsp), %xmm7
    000023f5: 	ja	.Ltmp855 # Offset: 9205
    000023fb: 	jmp	.Ltmp912 # Offset: 9211
.Ltmp808:
    000023fd: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00002405: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000240c: 	movsd	%xmm7, 0x18(%rsp)
.Ltmp913:
    00002412: 	pxor	%xmm1, %xmm1
    00002416: 	movsd	0x40(%rsp), %xmm5
    0000241c: 	cvtsi2sdl	init_value(%rip), %xmm1
    00002424: 	mulsd	0x20(%rsp), %xmm1
    0000242a: 	movapd	%xmm5, %xmm0
    0000242e: 	subsd	%xmm1, %xmm0
    00002432: 	divsd	%xmm5, %xmm0
    00002436: 	movsd	0x18(%rsp), %xmm5
    0000243c: 	andpd	(%rsp), %xmm0
    00002441: 	comisd	%xmm0, %xmm5
    00002445: 	movsd	%xmm0, 0x28(%rsp)
    0000244b: 	ja	.Ltmp807 # Offset: 9291
    00002451: 	movq	0xa0(%rsp), %rdx
    00002459: 	movq	%rbp, %rsi
    0000245c: 	movl	$0x1, %edi
    00002461: 	xorl	%eax, %eax
    00002463: 	callq	__printf_chk@PLT # Offset: 9315
    00002468: 	addl	$0x1, %ebx
    0000246b: 	cmpl	iterations(%rip), %ebx
    00002471: 	jge	.Ltmp807 # Offset: 9329
    00002477: 	movsd	0x18(%rsp), %xmm3
    0000247d: 	comisd	0x28(%rsp), %xmm3
    00002483: 	ja	.Ltmp807 # Offset: 9347
    00002489: 	jmp	.Ltmp913 # Offset: 9353
.Ltmp784:
    0000248b: 	movsd	DATAat0x1c3a0(%rip), %xmm7
    00002493: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000249a: 	movsd	%xmm7, 0x18(%rsp)
    000024a0: 	movapd	%xmm7, %xmm3
.Ltmp914:
    000024a4: 	pxor	%xmm1, %xmm1
    000024a8: 	movsd	0x40(%rsp), %xmm6
    000024ae: 	cvtsi2sdl	init_value(%rip), %xmm1
    000024b6: 	mulsd	0x20(%rsp), %xmm1
    000024bc: 	movapd	%xmm6, %xmm0
    000024c0: 	subsd	%xmm1, %xmm0
    000024c4: 	divsd	%xmm6, %xmm0
    000024c8: 	andpd	(%rsp), %xmm0
    000024cd: 	comisd	%xmm0, %xmm3
    000024d1: 	movsd	%xmm0, 0x28(%rsp)
    000024d7: 	ja	.Ltmp783 # Offset: 9431
    000024dd: 	movq	0xa0(%rsp), %rdx
    000024e5: 	movq	%rbp, %rsi
    000024e8: 	movl	$0x1, %edi
    000024ed: 	xorl	%eax, %eax
    000024ef: 	callq	__printf_chk@PLT # Offset: 9455
    000024f4: 	addl	$0x1, %ebx
    000024f7: 	cmpl	iterations(%rip), %ebx
    000024fd: 	jge	.Ltmp783 # Offset: 9469
    00002503: 	movsd	0x18(%rsp), %xmm4
    00002509: 	comisd	0x28(%rsp), %xmm4
    0000250f: 	ja	.Ltmp783 # Offset: 9487
    00002515: 	movapd	%xmm4, %xmm3
    00002519: 	jmp	.Ltmp914 # Offset: 9497
.Ltmp832:
    0000251b: 	movsd	DATAat0x1c3a0(%rip), %xmm5
    00002523: 	leaq	DATAat0x1c1c8(%rip), %r13
    0000252a: 	movsd	%xmm5, 0x18(%rsp)
.Ltmp915:
    00002530: 	pxor	%xmm1, %xmm1
    00002534: 	movsd	0x28(%rsp), %xmm6
    0000253a: 	cvtsi2sdl	init_value(%rip), %xmm1
    00002542: 	mulsd	0x20(%rsp), %xmm1
    00002548: 	movapd	%xmm6, %xmm0
    0000254c: 	subsd	%xmm1, %xmm0
    00002550: 	divsd	%xmm6, %xmm0
    00002554: 	movsd	0x18(%rsp), %xmm6
    0000255a: 	andpd	(%rsp), %xmm0
    0000255f: 	comisd	%xmm0, %xmm6
    00002563: 	movsd	%xmm0, 0x30(%rsp)
    00002569: 	ja	.Ltmp831 # Offset: 9577
    0000256f: 	movq	0xa0(%rsp), %rdx
    00002577: 	movq	%r13, %rsi
    0000257a: 	movl	$0x1, %edi
    0000257f: 	xorl	%eax, %eax
    00002581: 	callq	__printf_chk@PLT # Offset: 9601
    00002586: 	addl	$0x1, %ebp
    00002589: 	cmpl	iterations(%rip), %ebp
    0000258f: 	jge	.Ltmp831 # Offset: 9615
    00002595: 	movsd	0x18(%rsp), %xmm5
    0000259b: 	comisd	0x30(%rsp), %xmm5
    000025a1: 	ja	.Ltmp831 # Offset: 9633
    000025a7: 	jmp	.Ltmp915 # Offset: 9639
.Ltmp884:
    000025a9: 	movq	-0x8(%rdx), %rax
    000025ad: 	addq	$0x200, %rax
    000025b3: 	jmp	.Ltmp916 # Offset: 9651
.Ltmp834:
    000025b8: 	movq	-0x8(%rdx), %rax
    000025bc: 	addq	$0x200, %rax
    000025c2: 	jmp	.Ltmp917 # Offset: 9666
.Ltmp736:
    000025c7: 	movq	%r12, %rsi
    000025ca: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000025d1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9681
    000025d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000025e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025eb: 	jne	.Ltmp918 # Offset: 9707
.Ltmp741:
    000025f1: 	movq	-0x8(%rdx), %rax
    000025f5: 	addq	$0x200, %rax
    000025fb: 	jmp	.Ltmp918 # Offset: 9723
.Ltmp805:
    00002600: 	movq	-0x8(%rdx), %rax
    00002604: 	addq	$0x200, %rax
    0000260a: 	jmp	.Ltmp919 # Offset: 9738
.Ltmp798:
    0000260f: 	movq	-0x8(%rdx), %rax
    00002613: 	addq	$0x200, %rax
    00002619: 	jmp	.Ltmp920 # Offset: 9753
.Ltmp748:
    0000261e: 	movq	-0x8(%rdx), %rax
    00002622: 	addq	$0x200, %rax
    00002628: 	jmp	.Ltmp921 # Offset: 9768
.Ltmp791:
    0000262d: 	movq	-0x8(%rdx), %rax
    00002631: 	addq	$0x200, %rax
    00002637: 	jmp	.Ltmp922 # Offset: 9783
.Ltmp786:
    0000263c: 	movq	%r12, %rsi
    0000263f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002646: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9798
    0000264b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002652: 	jmp	.Ltmp923 # Offset: 9810
.Ltmp767:
    00002657: 	movq	-0x8(%rdx), %rax
    0000265b: 	addq	$0x200, %rax
    00002661: 	jmp	.Ltmp924 # Offset: 9825
.Ltmp774:
    00002666: 	movq	-0x8(%rdx), %rax
    0000266a: 	addq	$0x200, %rax
    00002670: 	jmp	.Ltmp925 # Offset: 9840
.Ltmp781:
    00002675: 	movq	-0x8(%rdx), %rax
    00002679: 	addq	$0x200, %rax
    0000267f: 	jmp	.Ltmp926 # Offset: 9855
.Ltmp829:
    00002684: 	movq	-0x8(%rdx), %rax
    00002688: 	addq	$0x200, %rax
    0000268e: 	jmp	.Ltmp927 # Offset: 9870
.Ltmp841:
    00002693: 	movq	-0x8(%rdx), %rax
    00002697: 	addq	$0x200, %rax
    0000269d: 	jmp	.Ltmp928 # Offset: 9885
.Ltmp848:
    000026a2: 	movq	%r12, %rsi
    000026a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000026ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9900
    000026b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000026bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000026c6: 	jne	.Ltmp929 # Offset: 9926
.Ltmp853:
    000026cc: 	movq	-0x8(%rdx), %rax
    000026d0: 	addq	$0x200, %rax
    000026d6: 	jmp	.Ltmp929 # Offset: 9942
.Ltmp810:
    000026db: 	movq	-0x8(%rdx), %rax
    000026df: 	addq	$0x200, %rax
    000026e5: 	jmp	.Ltmp930 # Offset: 9957
.Ltmp877:
    000026ea: 	movq	-0x8(%rdx), %rax
    000026ee: 	addq	$0x200, %rax
    000026f4: 	jmp	.Ltmp931 # Offset: 9972
.Ltmp863:
    000026f9: 	movq	-0x8(%rdx), %rax
    000026fd: 	addq	$0x200, %rax
    00002703: 	jmp	.Ltmp932 # Offset: 9987
.Ltmp858:
    00002708: 	movq	%r12, %rsi
    0000270b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002712: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10002
    00002717: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000271e: 	jmp	.Ltmp933 # Offset: 10014
.Ltmp822:
    00002723: 	movq	-0x8(%rdx), %rax
    00002727: 	addq	$0x200, %rax
    0000272d: 	jmp	.Ltmp934 # Offset: 10029
.Ltmp817:
    00002732: 	movq	%r12, %rsi
    00002735: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000273c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10044
    00002741: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002748: 	jmp	.Ltmp935 # Offset: 10056
.Ltmp870:
    0000274d: 	movq	-0x8(%rdx), %rax
    00002751: 	addq	$0x200, %rax
    00002757: 	jmp	.Ltmp936 # Offset: 10071
.Ltmp755:
    0000275c: 	movq	-0x8(%rdx), %rax
    00002760: 	addq	$0x200, %rax
    00002766: 	jmp	.Ltmp937 # Offset: 10086
.Ltmp762:
    0000276b: 	movq	%r12, %rsi
    0000276e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002775: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10101
    0000277a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002781: 	jmp	.Ltmp938 # Offset: 10113
.Ltmp821:
    00002786: 	testq	%r13, %r13
    00002789: 	je	.Ltmp939 # Offset: 10121
    0000278f: 	jmp	.Ltmp940 # Offset: 10127
    00002794: 	nopl	(%rax) # Size: 4
.Ltmp862:
    00002798: 	testq	%r13, %r13
    0000279b: 	je	.Ltmp941 # Offset: 10139
.Ltmp949:
    000027a1: 	movq	%r13, %rdx
    000027a4: 	movq	%rbp, %rsi
    000027a7: 	callq	memcpy@PLT # Offset: 10151
    000027ac: 	movq	0x60(%rsp), %r13
    000027b1: 	movq	(%rbx), %rdi
    000027b4: 	jmp	.Ltmp941 # Offset: 10164
.Ltmp740:
    000027b9: 	testq	%r13, %r13
    000027bc: 	je	.Ltmp893 # Offset: 10172
    000027c2: 	jmp	.Ltmp942 # Offset: 10178
    000027c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp766:
    000027d0: 	testq	%r13, %r13
    000027d3: 	je	.Ltmp943 # Offset: 10195
.Ltmp948:
    000027d9: 	movq	(%rsp), %rsi
    000027dd: 	movq	%r13, %rdx
    000027e0: 	callq	memcpy@PLT # Offset: 10208
    000027e5: 	movq	0x60(%rsp), %r13
    000027ea: 	movq	(%r14), %rdi
    000027ed: 	jmp	.Ltmp943 # Offset: 10221
.Ltmp852:
    000027f2: 	testq	%r13, %r13
    000027f5: 	je	.Ltmp944 # Offset: 10229
    000027fb: 	jmp	.Ltmp945 # Offset: 10235
    000027fd: 	nopl	(%rax) # Size: 3
.Ltmp790:
    00002800: 	testq	%r13, %r13
    00002803: 	je	.Ltmp946 # Offset: 10243
    00002809: 	jmp	.Ltmp947 # Offset: 10249
    0000280b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp789:
    00002810: 	movq	0x48(%rsp), %rsi
    00002815: 	xorl	%edx, %edx
    00002817: 	movq	%rbx, %rdi
    0000281a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10266
    0000281f: 	movq	%rax, (%rbx)
    00002822: 	movq	%rax, %rdi
    00002825: 	movq	0x60(%rsp), %rax
    0000282a: 	movq	%rax, 0x10(%rbx)
.Ltmp947:
    0000282e: 	movq	%r13, %rdx
    00002831: 	movq	%rbp, %rsi
    00002834: 	callq	memcpy@PLT # Offset: 10292
    00002839: 	movq	0x60(%rsp), %r13
    0000283e: 	movq	(%rbx), %rdi
    00002841: 	jmp	.Ltmp946 # Offset: 10305
.Ltmp851:
    00002846: 	movq	0x48(%rsp), %rsi
    0000284b: 	xorl	%edx, %edx
    0000284d: 	movq	%rbp, %rdi
    00002850: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10320
    00002855: 	movq	%rax, (%rbp)
    00002859: 	movq	%rax, %rdi
    0000285c: 	movq	0x60(%rsp), %rax
    00002861: 	movq	%rax, 0x10(%rbp)
.Ltmp945:
    00002865: 	movq	%r13, %rdx
    00002868: 	movq	%r14, %rsi
    0000286b: 	callq	memcpy@PLT # Offset: 10347
    00002870: 	movq	0x60(%rsp), %r13
    00002875: 	movq	(%rbp), %rdi
    00002879: 	jmp	.Ltmp944 # Offset: 10361
.Ltmp765:
    0000287e: 	movq	0x48(%rsp), %rsi
    00002883: 	xorl	%edx, %edx
    00002885: 	movq	%r14, %rdi
    00002888: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10376
    0000288d: 	movq	%rax, (%r14)
    00002890: 	movq	%rax, %rdi
    00002893: 	movq	0x60(%rsp), %rax
    00002898: 	movq	%rax, 0x10(%r14)
    0000289c: 	jmp	.Ltmp948 # Offset: 10396
.Ltmp820:
    000028a1: 	movq	0x48(%rsp), %rsi
    000028a6: 	xorl	%edx, %edx
    000028a8: 	movq	%rbx, %rdi
    000028ab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10411
    000028b0: 	movq	%rax, (%rbx)
    000028b3: 	movq	%rax, %rdi
    000028b6: 	movq	0x60(%rsp), %rax
    000028bb: 	movq	%rax, 0x10(%rbx)
.Ltmp940:
    000028bf: 	movq	%r13, %rdx
    000028c2: 	movq	%rbp, %rsi
    000028c5: 	callq	memcpy@PLT # Offset: 10437
    000028ca: 	movq	0x60(%rsp), %r13
    000028cf: 	movq	(%rbx), %rdi
    000028d2: 	jmp	.Ltmp939 # Offset: 10450
.Ltmp861:
    000028d7: 	movq	0x48(%rsp), %rsi
    000028dc: 	xorl	%edx, %edx
    000028de: 	movq	%rbx, %rdi
    000028e1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10465
    000028e6: 	movq	%rax, (%rbx)
    000028e9: 	movq	%rax, %rdi
    000028ec: 	movq	0x60(%rsp), %rax
    000028f1: 	movq	%rax, 0x10(%rbx)
    000028f5: 	jmp	.Ltmp949 # Offset: 10485
.Ltmp764:
    000028fa: 	leaq	DATAat0x1c158(%rip), %rdi
    00002901: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10497
.Ltmp788:
    00002906: 	leaq	DATAat0x1c158(%rip), %rdi
    0000290d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10509
.Ltmp819:
    00002912: 	leaq	DATAat0x1c158(%rip), %rdi
    00002919: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10521
.Ltmp850:
    0000291e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002925: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10533
.Ltmp860:
    0000292a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002931: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10545
.Ltmp888:
    00002936: 	callq	__stack_chk_fail@PLT # Offset: 10550
.Ltmp738:
    0000293b: 	leaq	DATAat0x1c158(%rip), %rdi
    00002942: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10562
    00002947: 	endbr64
.Ltmp951:
    0000294b: 	movq	%rax, %rbp
    0000294e: 	jmp	.Ltmp950 # Offset: 10574
    00002950: 	endbr64
    00002954: 	jmp	.Ltmp951 # Offset: 10580
    00002956: 	endbr64
    0000295a: 	jmp	.Ltmp951 # Offset: 10586
    0000295c: 	endbr64
    00002960: 	jmp	.Ltmp951 # Offset: 10592
    00002962: 	endbr64
    00002966: 	jmp	.Ltmp951 # Offset: 10598
    00002968: 	endbr64
    0000296c: 	jmp	.Ltmp951 # Offset: 10604
    0000296e: 	endbr64
    00002972: 	jmp	.Ltmp951 # Offset: 10610
    00002974: 	endbr64
    00002978: 	jmp	.Ltmp951 # Offset: 10616
    0000297a: 	endbr64
    0000297e: 	jmp	.Ltmp951 # Offset: 10622
    00002980: 	endbr64
    00002984: 	jmp	.Ltmp951 # Offset: 10628
    00002986: 	endbr64
    0000298a: 	jmp	.Ltmp951 # Offset: 10634
    0000298c: 	endbr64
    00002990: 	jmp	.Ltmp951 # Offset: 10640
    00002992: 	endbr64
    00002996: 	jmp	.Ltmp951 # Offset: 10646
    00002998: 	endbr64
    0000299c: 	jmp	.Ltmp951 # Offset: 10652
    0000299e: 	endbr64
    000029a2: 	jmp	.Ltmp951 # Offset: 10658
    000029a4: 	endbr64
    000029a8: 	jmp	.Ltmp951 # Offset: 10664
    000029aa: 	endbr64
    000029ae: 	jmp	.Ltmp951 # Offset: 10670
    000029b0: 	endbr64
    000029b4: 	jmp	.Ltmp951 # Offset: 10676
    000029b6: 	endbr64
    000029ba: 	jmp	.Ltmp951 # Offset: 10682
    000029bc: 	endbr64
    000029c0: 	movq	%rax, %rbp
    000029c3: 	jmp	.Ltmp952 # Offset: 10691
    000029c5: 	endbr64
    000029c9: 	movq	%rax, %rbp
    000029cc: 	jmp	.Ltmp953 # Offset: 10700
.Ltmp950:
    000029ce: 	movq	0xa0(%rsp), %rdi
    000029d6: 	cmpq	0x38(%rsp), %rdi
    000029db: 	je	.Ltmp953 # Offset: 10715
.Ltmp955:
    000029dd: 	movq	0xb0(%rsp), %rax
    000029e5: 	leaq	0x1(%rax), %rsi
    000029e9: 	callq	_ZdlPvm@PLT # Offset: 10729
.Ltmp953:
    000029ee: 	movq	0x80(%rsp), %rdi
    000029f6: 	cmpq	0x50(%rsp), %rdi
    000029fb: 	je	.Ltmp954 # Offset: 10747
    000029fd: 	movq	0x90(%rsp), %rax
    00002a05: 	leaq	0x1(%rax), %rsi
    00002a09: 	callq	_ZdlPvm@PLT # Offset: 10761
.Ltmp954:
    00002a0e: 	movq	%rbp, %rdi
    00002a11: 	callq	_Unwind_Resume@PLT # Offset: 10769
.Ltmp952:
    00002a16: 	movq	0xa0(%rsp), %rdi
    00002a1e: 	leaq	0xb0(%rsp), %rax
    00002a26: 	cmpq	%rax, %rdi
    00002a29: 	jne	.Ltmp955 # Offset: 10793
    00002a2b: 	jmp	.Ltmp953 # Offset: 10795
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIdEvT_"

Binary Function "_Z11TestOneTypeIfEvT_" after disassembly {
  Number      : 62
  State       : disassembled
  Address     : 0xbc00
  Size        : 0x2c69
  MaxSize     : 0x2c70
  Offset      : 0xbc00
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIfEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x8000(%rsp), %r11
.Ltmp956:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp956 # Offset: 37
    00000027: 	subq	$0x48, %rsp
    0000002b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    00000033: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000042: 	movss	%xmm0, 0x20(%rsp)
    00000048: 	leaq	0x70(%rsp), %rsi
    0000004d: 	leaq	0x330(%rsp), %rbp
    00000055: 	movq	%fs:0x28, %rax
    0000005e: 	movq	%rax, 0x8038(%rsp)
    00000066: 	xorl	%eax, %eax
    00000068: 	leaq	0xa0(%rsp), %rax
    00000070: 	movaps	%xmm5, 0x70(%rsp)
    00000075: 	leaq	0x8030(%rsp), %rbx
    0000007d: 	movq	%rax, 0x68(%rsp)
    00000082: 	movq	%rax, 0x90(%rsp)
    0000008a: 	movl	$0x616f6c66, 0xa0(%rsp)
    00000095: 	movb	$0x74, 0xa4(%rsp)
    0000009d: 	movq	$0x5, 0x98(%rsp)
    000000a9: 	movb	$0x0, 0xa5(%rsp)
    000000b1: 	movq	%rsi, 0x60(%rsp)
    000000b6: 	movaps	%xmm4, 0x80(%rsp)
    000000be: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 190
    000000c3: 	pxor	%xmm5, %xmm5
    000000c7: 	movss	0x20(%rsp), %xmm2
    000000cd: 	movq	%rbp, %rax
    000000d0: 	cvtsi2ssl	init_value(%rip), %xmm5
    000000d8: 	movaps	%xmm5, %xmm1
    000000db: 	movss	%xmm5, 0xc(%rsp)
    000000e1: 	shufps	$0x0, %xmm1, %xmm1
    000000e5: 	nopl	(%rax) # Size: 3
.Ltmp957:
    000000e8: 	movaps	%xmm1, (%rax)
    000000eb: 	addq	$0x10, %rax
    000000ef: 	cmpq	%rax, %rbx
    000000f2: 	jne	.Ltmp957 # Offset: 242
    000000f4: 	comiss	DATAat0x1c3d0(%rip), %xmm2
    000000fb: 	movss	DATAat0x1c384(%rip), %xmm3
    00000103: 	addss	%xmm2, %xmm3
    00000107: 	jae	.Ltmp958 # Offset: 263
    0000010d: 	cvttss2si	%xmm2, %rcx
.Ltmp1132:
    00000112: 	movq	%rcx, %rax
    00000115: 	movss	0xc(%rsp), %xmm0
    0000011b: 	movabsq	$-0x7777777777777777, %rdx
    00000125: 	movaps	%xmm1, 0xd0(%rsp)
    0000012d: 	mulq	%rdx
    00000130: 	movaps	%xmm1, 0xe0(%rsp)
    00000138: 	shufps	$0xe0, %xmm0, %xmm0
    0000013c: 	movaps	%xmm1, 0xf0(%rsp)
    00000144: 	movaps	%xmm1, 0x100(%rsp)
    0000014c: 	movq	%rdx, %rax
    0000014f: 	andq	$-0x10, %rdx
    00000153: 	movaps	%xmm1, 0x110(%rsp)
    0000015b: 	shrq	$0x4, %rax
    0000015f: 	movaps	%xmm1, 0x120(%rsp)
    00000167: 	subq	%rax, %rdx
    0000016a: 	movaps	%xmm1, 0x130(%rsp)
    00000172: 	leaq	(%rdx,%rdx), %rax
    00000176: 	movlps	%xmm0, 0x140(%rsp)
    0000017e: 	subq	%rax, %rcx
    00000181: 	comiss	DATAat0x1c3d0(%rip), %xmm3
    00000188: 	movq	%rcx, 0x58(%rsp)
    0000018d: 	jae	.Ltmp959 # Offset: 397
    00000193: 	cvttss2si	%xmm3, %rcx
.Ltmp1131:
    00000198: 	movabsq	$-0x7777777777777777, %rdx
    000001a2: 	movaps	%xmm2, %xmm0
    000001a5: 	movq	%rcx, %rax
    000001a8: 	mulq	%rdx
    000001ab: 	addss	%xmm2, %xmm0
    000001af: 	divss	%xmm3, %xmm0
    000001b3: 	movq	%rdx, %rax
    000001b6: 	andq	$-0x10, %rdx
    000001ba: 	shrq	$0x4, %rax
    000001be: 	subq	%rax, %rdx
    000001c1: 	movq	%rcx, %rax
    000001c4: 	addq	%rdx, %rdx
    000001c7: 	subq	%rdx, %rax
    000001ca: 	movq	%rax, %xmm1
    000001cf: 	punpcklqdq	%xmm1, %xmm1
    000001d3: 	movaps	%xmm1, 0x150(%rsp)
    000001db: 	movaps	%xmm1, 0x160(%rsp)
    000001e3: 	movaps	%xmm1, 0x170(%rsp)
    000001eb: 	movaps	%xmm1, 0x180(%rsp)
    000001f3: 	movaps	%xmm1, 0x190(%rsp)
    000001fb: 	movaps	%xmm1, 0x1a0(%rsp)
    00000203: 	movaps	%xmm1, 0x1b0(%rsp)
    0000020b: 	movaps	%xmm1, 0x1c0(%rsp)
    00000213: 	movaps	%xmm1, 0x1d0(%rsp)
    0000021b: 	movaps	%xmm1, 0x1e0(%rsp)
    00000223: 	movaps	%xmm1, 0x1f0(%rsp)
    0000022b: 	addss	%xmm2, %xmm0
    0000022f: 	comiss	DATAat0x1c3d0(%rip), %xmm0
    00000236: 	movaps	%xmm1, 0x200(%rsp)
    0000023e: 	movaps	%xmm1, 0x210(%rsp)
    00000246: 	movaps	%xmm1, 0x220(%rsp)
    0000024e: 	movaps	%xmm1, 0x230(%rsp)
    00000256: 	jae	.Ltmp960 # Offset: 598
    0000025c: 	cvttss2si	%xmm0, %rcx
.Ltmp1130:
    00000261: 	movq	%rcx, %rax
    00000264: 	leaq	0xb0(%rsp), %r12
    0000026c: 	movabsq	$-0x7777777777777777, %rdx
    00000276: 	mulq	%rdx
    00000279: 	leaq	0x90(%rsp), %r14
    00000281: 	movq	%r12, %rdi
    00000284: 	movq	%r14, %rsi
    00000287: 	movq	%rdx, %rax
    0000028a: 	andq	$-0x10, %rdx
    0000028e: 	shrq	$0x4, %rax
    00000292: 	subq	%rax, %rdx
    00000295: 	movq	%rcx, %rax
    00000298: 	addq	%rdx, %rdx
    0000029b: 	subq	%rdx, %rax
    0000029e: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002a5: 	movq	%rax, %xmm0
    000002aa: 	punpcklqdq	%xmm0, %xmm0
    000002ae: 	movaps	%xmm0, 0x240(%rsp)
    000002b6: 	movaps	%xmm0, 0x250(%rsp)
    000002be: 	movaps	%xmm0, 0x260(%rsp)
    000002c6: 	movaps	%xmm0, 0x270(%rsp)
    000002ce: 	movaps	%xmm0, 0x280(%rsp)
    000002d6: 	movaps	%xmm0, 0x290(%rsp)
    000002de: 	movaps	%xmm0, 0x2a0(%rsp)
    000002e6: 	movaps	%xmm0, 0x2b0(%rsp)
    000002ee: 	movaps	%xmm0, 0x2c0(%rsp)
    000002f6: 	movaps	%xmm0, 0x2d0(%rsp)
    000002fe: 	movaps	%xmm0, 0x2e0(%rsp)
    00000306: 	movaps	%xmm0, 0x2f0(%rsp)
    0000030e: 	movaps	%xmm0, 0x300(%rsp)
    00000316: 	movaps	%xmm0, 0x310(%rsp)
    0000031e: 	movaps	%xmm0, 0x320(%rsp)
    00000326: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 806
    0000032b: 	callq	clock@PLT # Offset: 811
    00000330: 	movl	iterations(%rip), %edx
    00000336: 	movq	%rax, start_time(%rip)
    0000033d: 	testl	%edx, %edx
    0000033f: 	jle	.Ltmp961 # Offset: 831
    00000345: 	pxor	%xmm5, %xmm5
    00000349: 	movss	DATAat0x1c3d4(%rip), %xmm6
    00000351: 	movsd	DATAat0x1c378(%rip), %xmm3
    00000359: 	movss	DATAat0x1c3c0(%rip), %xmm4
    00000361: 	movq	DATAat0x1c3b0(%rip), %xmm7
    00000369: 	movss	%xmm5, 0x28(%rsp)
    0000036f: 	xorl	%r13d, %r13d
    00000372: 	movsd	DATAat0x1c3a8(%rip), %xmm5
    0000037a: 	movss	%xmm6, 0x50(%rsp)
    00000380: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000387: 	movaps	%xmm4, 0x30(%rsp)
    0000038c: 	movsd	%xmm3, 0x40(%rsp)
    00000392: 	movaps	%xmm7, 0x10(%rsp)
    00000397: 	movsd	%xmm5, 0x20(%rsp)
    0000039d: 	nopl	(%rax) # Size: 3
.Ltmp965:
    000003a0: 	movq	%rbp, %rax
    000003a3: 	pxor	%xmm1, %xmm1
    000003a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp962:
    000003b0: 	movaps	(%rax), %xmm0
    000003b3: 	addq	$0x10, %rax
    000003b7: 	addss	%xmm0, %xmm1
    000003bb: 	movaps	%xmm0, %xmm2
    000003be: 	shufps	$0x55, %xmm0, %xmm2
    000003c2: 	addss	%xmm1, %xmm2
    000003c6: 	movaps	%xmm0, %xmm1
    000003c9: 	unpckhps	%xmm0, %xmm1
    000003cc: 	shufps	$0xff, %xmm0, %xmm0
    000003d0: 	addss	%xmm1, %xmm2
    000003d4: 	movaps	%xmm0, %xmm1
    000003d7: 	addss	%xmm2, %xmm1
    000003db: 	cmpq	%rax, %rbx
    000003de: 	jne	.Ltmp962 # Offset: 990
    000003e0: 	pxor	%xmm2, %xmm2
    000003e4: 	movaps	0x30(%rsp), %xmm3
    000003e9: 	movaps	%xmm1, %xmm0
    000003ec: 	cvtsi2ssl	init_value(%rip), %xmm2
    000003f4: 	mulss	0x50(%rsp), %xmm2
    000003fa: 	andps	%xmm1, %xmm3
    000003fd: 	subss	%xmm2, %xmm0
    00000401: 	pxor	%xmm2, %xmm2
    00000405: 	cvtss2sd	%xmm3, %xmm2
    00000409: 	comisd	0x40(%rsp), %xmm2
    0000040f: 	jbe	.Ltmp963 # Offset: 1039
    00000411: 	divss	%xmm1, %xmm0
.Ltmp963:
    00000415: 	movsd	0x20(%rsp), %xmm3
    0000041b: 	cvtss2sd	%xmm0, %xmm0
    0000041f: 	andpd	0x10(%rsp), %xmm0
    00000425: 	comisd	%xmm0, %xmm3
    00000429: 	jbe	.Ltmp964 # Offset: 1065
.Ltmp1011:
    0000042f: 	addl	$0x1, %r13d
    00000433: 	cmpl	%edx, %r13d
    00000436: 	jl	.Ltmp965 # Offset: 1078
.Ltmp961:
    0000043c: 	movq	%r12, %rsi
    0000043f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000446: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1094
    0000044b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000452: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000459: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000460: 	je	.Ltmp966 # Offset: 1120
.Ltmp1161:
    00000466: 	movq	-0x20(%rax), %r13
    0000046a: 	callq	clock@PLT # Offset: 1130
    0000046f: 	pxor	%xmm0, %xmm0
    00000473: 	movq	%rax, end_time(%rip)
    0000047a: 	movq	%r13, %rdi
    0000047d: 	subq	start_time(%rip), %rax
    00000484: 	cvtsi2sd	%rax, %xmm0
    00000489: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000491: 	callq	_Z13record_resultdPKc # Offset: 1169
    00000496: 	movq	0xb0(%rsp), %rdi
    0000049e: 	leaq	0xc0(%rsp), %rax
    000004a6: 	movq	%rax, 0x48(%rsp)
    000004ab: 	cmpq	%rax, %rdi
    000004ae: 	je	.Ltmp967 # Offset: 1198
    000004b0: 	movq	0xc0(%rsp), %rax
    000004b8: 	leaq	0x1(%rax), %rsi
    000004bc: 	callq	_ZdlPvm@PLT # Offset: 1212
.Ltmp967:
    000004c1: 	leaq	DATAat0x1c1f4(%rip), %rdx
    000004c8: 	movq	%r14, %rsi
    000004cb: 	movq	%r12, %rdi
    000004ce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1230
    000004d3: 	callq	clock@PLT # Offset: 1235
    000004d8: 	movl	iterations(%rip), %edx
    000004de: 	movq	%rax, start_time(%rip)
    000004e5: 	testl	%edx, %edx
    000004e7: 	jle	.Ltmp968 # Offset: 1255
    000004ed: 	pxor	%xmm6, %xmm6
    000004f1: 	movss	DATAat0x1c3d4(%rip), %xmm4
    000004f9: 	movsd	DATAat0x1c378(%rip), %xmm7
    00000501: 	movss	DATAat0x1c3c0(%rip), %xmm3
    00000509: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00000511: 	movss	%xmm6, 0x28(%rsp)
    00000517: 	xorl	%r13d, %r13d
    0000051a: 	movsd	DATAat0x1c3a8(%rip), %xmm6
    00000522: 	movss	%xmm4, 0x50(%rsp)
    00000528: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000052f: 	movaps	%xmm3, 0x30(%rsp)
    00000534: 	movsd	%xmm7, 0x40(%rsp)
    0000053a: 	movaps	%xmm5, 0x10(%rsp)
    0000053f: 	movsd	%xmm6, 0x20(%rsp)
    00000545: 	nopl	(%rax) # Size: 3
.Ltmp972:
    00000548: 	movq	%rbp, %rax
    0000054b: 	pxor	%xmm1, %xmm1
    0000054f: 	nop # Size: 1
.Ltmp969:
    00000550: 	movaps	(%rax), %xmm0
    00000553: 	addq	$0x10, %rax
    00000557: 	addss	%xmm0, %xmm1
    0000055b: 	movaps	%xmm0, %xmm2
    0000055e: 	shufps	$0x55, %xmm0, %xmm2
    00000562: 	addss	%xmm2, %xmm1
    00000566: 	movaps	%xmm0, %xmm2
    00000569: 	unpckhps	%xmm0, %xmm2
    0000056c: 	shufps	$0xff, %xmm0, %xmm0
    00000570: 	addss	%xmm2, %xmm1
    00000574: 	addss	%xmm0, %xmm1
    00000578: 	cmpq	%rbx, %rax
    0000057b: 	jne	.Ltmp969 # Offset: 1403
    0000057d: 	pxor	%xmm2, %xmm2
    00000581: 	movaps	0x30(%rsp), %xmm3
    00000586: 	movaps	%xmm1, %xmm0
    00000589: 	cvtsi2ssl	init_value(%rip), %xmm2
    00000591: 	mulss	0x50(%rsp), %xmm2
    00000597: 	andps	%xmm1, %xmm3
    0000059a: 	subss	%xmm2, %xmm0
    0000059e: 	pxor	%xmm2, %xmm2
    000005a2: 	cvtss2sd	%xmm3, %xmm2
    000005a6: 	comisd	0x40(%rsp), %xmm2
    000005ac: 	jbe	.Ltmp970 # Offset: 1452
    000005ae: 	divss	%xmm1, %xmm0
.Ltmp970:
    000005b2: 	movsd	0x20(%rsp), %xmm3
    000005b8: 	cvtss2sd	%xmm0, %xmm0
    000005bc: 	andpd	0x10(%rsp), %xmm0
    000005c2: 	comisd	%xmm0, %xmm3
    000005c6: 	jbe	.Ltmp971 # Offset: 1478
.Ltmp1010:
    000005cc: 	addl	$0x1, %r13d
    000005d0: 	cmpl	%edx, %r13d
    000005d3: 	jl	.Ltmp972 # Offset: 1491
.Ltmp968:
    000005d9: 	movq	%r12, %rsi
    000005dc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000005e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1507
    000005e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005ef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005f6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005fd: 	je	.Ltmp973 # Offset: 1533
.Ltmp1160:
    00000603: 	movq	-0x20(%rax), %r13
    00000607: 	callq	clock@PLT # Offset: 1543
    0000060c: 	pxor	%xmm0, %xmm0
    00000610: 	movq	%rax, end_time(%rip)
    00000617: 	movq	%r13, %rdi
    0000061a: 	subq	start_time(%rip), %rax
    00000621: 	cvtsi2sd	%rax, %xmm0
    00000626: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000062e: 	callq	_Z13record_resultdPKc # Offset: 1582
    00000633: 	movq	0xb0(%rsp), %rdi
    0000063b: 	cmpq	0x48(%rsp), %rdi
    00000640: 	je	.Ltmp974 # Offset: 1600
    00000642: 	movq	0xc0(%rsp), %rax
    0000064a: 	leaq	0x1(%rax), %rsi
    0000064e: 	callq	_ZdlPvm@PLT # Offset: 1614
.Ltmp974:
    00000653: 	leaq	DATAat0x1c208(%rip), %rdx
    0000065a: 	movq	%r14, %rsi
    0000065d: 	movq	%r12, %rdi
    00000660: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1632
    00000665: 	callq	clock@PLT # Offset: 1637
    0000066a: 	movl	iterations(%rip), %edx
    00000670: 	movq	%rax, start_time(%rip)
    00000677: 	testl	%edx, %edx
    00000679: 	jle	.Ltmp975 # Offset: 1657
    0000067f: 	pxor	%xmm4, %xmm4
    00000683: 	movss	DATAat0x1c3d4(%rip), %xmm3
    0000068b: 	movsd	DATAat0x1c378(%rip), %xmm5
    00000693: 	movss	DATAat0x1c3c0(%rip), %xmm7
    0000069b: 	movq	DATAat0x1c3b0(%rip), %xmm6
    000006a3: 	movss	%xmm4, 0x28(%rsp)
    000006a9: 	xorl	%r13d, %r13d
    000006ac: 	movsd	DATAat0x1c3a8(%rip), %xmm4
    000006b4: 	movss	%xmm3, 0x50(%rsp)
    000006ba: 	leaq	DATAat0x1c1c8(%rip), %r15
    000006c1: 	movaps	%xmm7, 0x30(%rsp)
    000006c6: 	movsd	%xmm5, 0x40(%rsp)
    000006cc: 	movaps	%xmm6, 0x10(%rsp)
    000006d1: 	movsd	%xmm4, 0x20(%rsp)
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp979:
    000006e0: 	movq	%rbp, %rax
    000006e3: 	pxor	%xmm0, %xmm0
    000006e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp976:
    000006f0: 	movaps	(%rax), %xmm2
    000006f3: 	addq	$0x10, %rax
    000006f7: 	addss	%xmm2, %xmm0
    000006fb: 	movaps	%xmm2, %xmm1
    000006fe: 	shufps	$0x55, %xmm2, %xmm1
    00000702: 	addss	%xmm0, %xmm1
    00000706: 	movaps	%xmm2, %xmm0
    00000709: 	unpckhps	%xmm2, %xmm0
    0000070c: 	shufps	$0xff, %xmm2, %xmm2
    00000710: 	addss	%xmm1, %xmm0
    00000714: 	addss	%xmm2, %xmm0
    00000718: 	cmpq	%rbx, %rax
    0000071b: 	jne	.Ltmp976 # Offset: 1819
    0000071d: 	pxor	%xmm2, %xmm2
    00000721: 	movaps	0x30(%rsp), %xmm3
    00000726: 	movaps	%xmm0, %xmm1
    00000729: 	cvtsi2ssl	init_value(%rip), %xmm2
    00000731: 	mulss	0x50(%rsp), %xmm2
    00000737: 	andps	%xmm0, %xmm3
    0000073a: 	subss	%xmm2, %xmm1
    0000073e: 	pxor	%xmm2, %xmm2
    00000742: 	cvtss2sd	%xmm3, %xmm2
    00000746: 	comisd	0x40(%rsp), %xmm2
    0000074c: 	jbe	.Ltmp977 # Offset: 1868
    0000074e: 	divss	%xmm0, %xmm1
.Ltmp977:
    00000752: 	movsd	0x20(%rsp), %xmm6
    00000758: 	cvtss2sd	%xmm1, %xmm1
    0000075c: 	andpd	0x10(%rsp), %xmm1
    00000762: 	comisd	%xmm1, %xmm6
    00000766: 	jbe	.Ltmp978 # Offset: 1894
.Ltmp1009:
    0000076c: 	addl	$0x1, %r13d
    00000770: 	cmpl	%edx, %r13d
    00000773: 	jl	.Ltmp979 # Offset: 1907
.Ltmp975:
    00000779: 	movq	%r12, %rsi
    0000077c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000783: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1923
    00000788: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000078f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000796: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000079d: 	je	.Ltmp980 # Offset: 1949
.Ltmp1159:
    000007a3: 	movq	-0x20(%rax), %r13
    000007a7: 	callq	clock@PLT # Offset: 1959
    000007ac: 	pxor	%xmm0, %xmm0
    000007b0: 	movq	%rax, end_time(%rip)
    000007b7: 	movq	%r13, %rdi
    000007ba: 	subq	start_time(%rip), %rax
    000007c1: 	cvtsi2sd	%rax, %xmm0
    000007c6: 	divsd	DATAat0x1c370(%rip), %xmm0
    000007ce: 	callq	_Z13record_resultdPKc # Offset: 1998
    000007d3: 	movq	0xb0(%rsp), %rdi
    000007db: 	cmpq	0x48(%rsp), %rdi
    000007e0: 	je	.Ltmp981 # Offset: 2016
    000007e2: 	movq	0xc0(%rsp), %rax
    000007ea: 	leaq	0x1(%rax), %rsi
    000007ee: 	callq	_ZdlPvm@PLT # Offset: 2030
.Ltmp981:
    000007f3: 	leaq	DATAat0x1c21d(%rip), %rdx
    000007fa: 	movq	%r14, %rsi
    000007fd: 	movq	%r12, %rdi
    00000800: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2048
    00000805: 	callq	clock@PLT # Offset: 2053
    0000080a: 	movl	iterations(%rip), %edx
    00000810: 	movq	%rax, start_time(%rip)
    00000817: 	testl	%edx, %edx
    00000819: 	jle	.Ltmp982 # Offset: 2073
    0000081f: 	pxor	%xmm3, %xmm3
    00000823: 	movss	DATAat0x1c3d4(%rip), %xmm7
    0000082b: 	movsd	DATAat0x1c378(%rip), %xmm6
    00000833: 	movss	DATAat0x1c3c0(%rip), %xmm5
    0000083b: 	movq	DATAat0x1c3b0(%rip), %xmm4
    00000843: 	movss	%xmm3, 0x28(%rsp)
    00000849: 	xorl	%r13d, %r13d
    0000084c: 	movsd	DATAat0x1c3a8(%rip), %xmm3
    00000854: 	movss	%xmm7, 0x50(%rsp)
    0000085a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000861: 	movaps	%xmm5, 0x30(%rsp)
    00000866: 	movsd	%xmm6, 0x40(%rsp)
    0000086c: 	movaps	%xmm4, 0x10(%rsp)
    00000871: 	movsd	%xmm3, 0x20(%rsp)
    00000877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp986:
    00000880: 	movq	%rbp, %rax
    00000883: 	pxor	%xmm1, %xmm1
    00000887: 	nopw	(%rax,%rax) # Size: 9
.Ltmp983:
    00000890: 	movaps	(%rax), %xmm0
    00000893: 	addq	$0x10, %rax
    00000897: 	addss	%xmm0, %xmm1
    0000089b: 	movaps	%xmm0, %xmm2
    0000089e: 	shufps	$0x55, %xmm0, %xmm2
    000008a2: 	addss	%xmm1, %xmm2
    000008a6: 	movaps	%xmm0, %xmm1
    000008a9: 	unpckhps	%xmm0, %xmm1
    000008ac: 	shufps	$0xff, %xmm0, %xmm0
    000008b0: 	addss	%xmm1, %xmm2
    000008b4: 	movaps	%xmm0, %xmm1
    000008b7: 	addss	%xmm2, %xmm1
    000008bb: 	cmpq	%rax, %rbx
    000008be: 	jne	.Ltmp983 # Offset: 2238
    000008c0: 	pxor	%xmm2, %xmm2
    000008c4: 	movaps	0x30(%rsp), %xmm3
    000008c9: 	movaps	%xmm1, %xmm0
    000008cc: 	cvtsi2ssl	init_value(%rip), %xmm2
    000008d4: 	mulss	0x50(%rsp), %xmm2
    000008da: 	andps	%xmm1, %xmm3
    000008dd: 	subss	%xmm2, %xmm0
    000008e1: 	pxor	%xmm2, %xmm2
    000008e5: 	cvtss2sd	%xmm3, %xmm2
    000008e9: 	comisd	0x40(%rsp), %xmm2
    000008ef: 	jbe	.Ltmp984 # Offset: 2287
    000008f1: 	divss	%xmm1, %xmm0
.Ltmp984:
    000008f5: 	movsd	0x20(%rsp), %xmm5
    000008fb: 	cvtss2sd	%xmm0, %xmm0
    000008ff: 	andpd	0x10(%rsp), %xmm0
    00000905: 	comisd	%xmm0, %xmm5
    00000909: 	jbe	.Ltmp985 # Offset: 2313
.Ltmp1008:
    0000090f: 	addl	$0x1, %r13d
    00000913: 	cmpl	%edx, %r13d
    00000916: 	jl	.Ltmp986 # Offset: 2326
.Ltmp982:
    0000091c: 	movq	%r12, %rsi
    0000091f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000926: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2342
    0000092b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000932: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000939: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000940: 	je	.Ltmp987 # Offset: 2368
.Ltmp1147:
    00000946: 	movq	-0x20(%rax), %r13
    0000094a: 	callq	clock@PLT # Offset: 2378
    0000094f: 	pxor	%xmm0, %xmm0
    00000953: 	movq	%rax, end_time(%rip)
    0000095a: 	movq	%r13, %rdi
    0000095d: 	subq	start_time(%rip), %rax
    00000964: 	cvtsi2sd	%rax, %xmm0
    00000969: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000971: 	callq	_Z13record_resultdPKc # Offset: 2417
    00000976: 	movq	0xb0(%rsp), %rdi
    0000097e: 	cmpq	0x48(%rsp), %rdi
    00000983: 	je	.Ltmp988 # Offset: 2435
    00000985: 	movq	0xc0(%rsp), %rax
    0000098d: 	leaq	0x1(%rax), %rsi
    00000991: 	callq	_ZdlPvm@PLT # Offset: 2449
.Ltmp988:
    00000996: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000099d: 	movq	%r14, %rsi
    000009a0: 	movq	%r12, %rdi
    000009a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2467
    000009a8: 	callq	clock@PLT # Offset: 2472
    000009ad: 	movl	iterations(%rip), %edx
    000009b3: 	movq	%rax, start_time(%rip)
    000009ba: 	testl	%edx, %edx
    000009bc: 	jle	.Ltmp989 # Offset: 2492
    000009c2: 	pxor	%xmm7, %xmm7
    000009c6: 	movss	DATAat0x1c3d4(%rip), %xmm5
    000009ce: 	movsd	DATAat0x1c378(%rip), %xmm4
    000009d6: 	movss	DATAat0x1c3c0(%rip), %xmm6
    000009de: 	movq	DATAat0x1c3b0(%rip), %xmm3
    000009e6: 	movss	%xmm7, 0x28(%rsp)
    000009ec: 	xorl	%r13d, %r13d
    000009ef: 	movsd	DATAat0x1c3a8(%rip), %xmm7
    000009f7: 	movss	%xmm5, 0x50(%rsp)
    000009fd: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000a04: 	movaps	%xmm6, 0x30(%rsp)
    00000a09: 	movsd	%xmm4, 0x40(%rsp)
    00000a0f: 	movaps	%xmm3, 0x10(%rsp)
    00000a14: 	movsd	%xmm7, 0x20(%rsp)
    00000a1a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp993:
    00000a20: 	movq	%rbp, %rax
    00000a23: 	pxor	%xmm0, %xmm0
    00000a27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp990:
    00000a30: 	movaps	(%rax), %xmm2
    00000a33: 	addq	$0x10, %rax
    00000a37: 	addss	%xmm2, %xmm0
    00000a3b: 	movaps	%xmm2, %xmm1
    00000a3e: 	shufps	$0x55, %xmm2, %xmm1
    00000a42: 	addss	%xmm0, %xmm1
    00000a46: 	movaps	%xmm2, %xmm0
    00000a49: 	unpckhps	%xmm2, %xmm0
    00000a4c: 	shufps	$0xff, %xmm2, %xmm2
    00000a50: 	addss	%xmm1, %xmm0
    00000a54: 	addss	%xmm2, %xmm0
    00000a58: 	cmpq	%rbx, %rax
    00000a5b: 	jne	.Ltmp990 # Offset: 2651
    00000a5d: 	pxor	%xmm2, %xmm2
    00000a61: 	movaps	0x30(%rsp), %xmm7
    00000a66: 	movaps	%xmm0, %xmm1
    00000a69: 	cvtsi2ssl	init_value(%rip), %xmm2
    00000a71: 	mulss	0x50(%rsp), %xmm2
    00000a77: 	andps	%xmm0, %xmm7
    00000a7a: 	subss	%xmm2, %xmm1
    00000a7e: 	pxor	%xmm2, %xmm2
    00000a82: 	cvtss2sd	%xmm7, %xmm2
    00000a86: 	comisd	0x40(%rsp), %xmm2
    00000a8c: 	jbe	.Ltmp991 # Offset: 2700
    00000a8e: 	divss	%xmm0, %xmm1
.Ltmp991:
    00000a92: 	movsd	0x20(%rsp), %xmm4
    00000a98: 	cvtss2sd	%xmm1, %xmm1
    00000a9c: 	andpd	0x10(%rsp), %xmm1
    00000aa2: 	comisd	%xmm1, %xmm4
    00000aa6: 	jbe	.Ltmp992 # Offset: 2726
.Ltmp1007:
    00000aac: 	addl	$0x1, %r13d
    00000ab0: 	cmpl	%edx, %r13d
    00000ab3: 	jl	.Ltmp993 # Offset: 2739
.Ltmp989:
    00000ab9: 	movq	%r12, %rsi
    00000abc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ac3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2755
    00000ac8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000acf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ad6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000add: 	je	.Ltmp994 # Offset: 2781
.Ltmp1146:
    00000ae3: 	movq	-0x20(%rax), %r13
    00000ae7: 	callq	clock@PLT # Offset: 2791
    00000aec: 	pxor	%xmm0, %xmm0
    00000af0: 	movq	%rax, end_time(%rip)
    00000af7: 	movq	%r13, %rdi
    00000afa: 	subq	start_time(%rip), %rax
    00000b01: 	cvtsi2sd	%rax, %xmm0
    00000b06: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b0e: 	callq	_Z13record_resultdPKc # Offset: 2830
    00000b13: 	movq	0xb0(%rsp), %rdi
    00000b1b: 	cmpq	0x48(%rsp), %rdi
    00000b20: 	je	.Ltmp995 # Offset: 2848
    00000b22: 	movq	0xc0(%rsp), %rax
    00000b2a: 	leaq	0x1(%rax), %rsi
    00000b2e: 	callq	_ZdlPvm@PLT # Offset: 2862
.Ltmp995:
    00000b33: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000b3a: 	movq	%r14, %rsi
    00000b3d: 	movq	%r12, %rdi
    00000b40: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2880
    00000b45: 	callq	clock@PLT # Offset: 2885
    00000b4a: 	movl	iterations(%rip), %edx
    00000b50: 	movq	%rax, start_time(%rip)
    00000b57: 	testl	%edx, %edx
    00000b59: 	jle	.Ltmp996 # Offset: 2905
    00000b5f: 	pxor	%xmm5, %xmm5
    00000b63: 	movss	DATAat0x1c3d4(%rip), %xmm6
    00000b6b: 	movsd	DATAat0x1c378(%rip), %xmm3
    00000b73: 	movss	DATAat0x1c3c0(%rip), %xmm4
    00000b7b: 	movq	DATAat0x1c3b0(%rip), %xmm7
    00000b83: 	movss	%xmm5, 0x28(%rsp)
    00000b89: 	xorl	%r13d, %r13d
    00000b8c: 	movsd	DATAat0x1c3a8(%rip), %xmm5
    00000b94: 	movss	%xmm6, 0x50(%rsp)
    00000b9a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000ba1: 	movaps	%xmm4, 0x30(%rsp)
    00000ba6: 	movsd	%xmm3, 0x40(%rsp)
    00000bac: 	movaps	%xmm7, 0x10(%rsp)
    00000bb1: 	movsd	%xmm5, 0x20(%rsp)
    00000bb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1000:
    00000bc0: 	movq	%rbp, %rax
    00000bc3: 	pxor	%xmm0, %xmm0
    00000bc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp997:
    00000bd0: 	movaps	(%rax), %xmm2
    00000bd3: 	addq	$0x10, %rax
    00000bd7: 	addss	%xmm2, %xmm0
    00000bdb: 	movaps	%xmm2, %xmm1
    00000bde: 	shufps	$0x55, %xmm2, %xmm1
    00000be2: 	addss	%xmm0, %xmm1
    00000be6: 	movaps	%xmm2, %xmm0
    00000be9: 	unpckhps	%xmm2, %xmm0
    00000bec: 	shufps	$0xff, %xmm2, %xmm2
    00000bf0: 	addss	%xmm1, %xmm0
    00000bf4: 	addss	%xmm2, %xmm0
    00000bf8: 	cmpq	%rbx, %rax
    00000bfb: 	jne	.Ltmp997 # Offset: 3067
    00000bfd: 	pxor	%xmm2, %xmm2
    00000c01: 	movaps	0x30(%rsp), %xmm4
    00000c06: 	movaps	%xmm0, %xmm1
    00000c09: 	cvtsi2ssl	init_value(%rip), %xmm2
    00000c11: 	mulss	0x50(%rsp), %xmm2
    00000c17: 	andps	%xmm0, %xmm4
    00000c1a: 	subss	%xmm2, %xmm1
    00000c1e: 	pxor	%xmm2, %xmm2
    00000c22: 	cvtss2sd	%xmm4, %xmm2
    00000c26: 	comisd	0x40(%rsp), %xmm2
    00000c2c: 	jbe	.Ltmp998 # Offset: 3116
    00000c2e: 	divss	%xmm0, %xmm1
.Ltmp998:
    00000c32: 	movsd	0x20(%rsp), %xmm7
    00000c38: 	cvtss2sd	%xmm1, %xmm1
    00000c3c: 	andpd	0x10(%rsp), %xmm1
    00000c42: 	comisd	%xmm1, %xmm7
    00000c46: 	jbe	.Ltmp999 # Offset: 3142
.Ltmp1006:
    00000c4c: 	addl	$0x1, %r13d
    00000c50: 	cmpl	%edx, %r13d
    00000c53: 	jl	.Ltmp1000 # Offset: 3155
.Ltmp996:
    00000c59: 	movq	%r12, %rsi
    00000c5c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c63: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3171
    00000c68: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c6f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c7d: 	je	.Ltmp1001 # Offset: 3197
.Ltmp1164:
    00000c83: 	movq	-0x20(%rax), %rbp
    00000c87: 	callq	clock@PLT # Offset: 3207
    00000c8c: 	pxor	%xmm0, %xmm0
    00000c90: 	movq	%rax, end_time(%rip)
    00000c97: 	movq	%rbp, %rdi
    00000c9a: 	subq	start_time(%rip), %rax
    00000ca1: 	cvtsi2sd	%rax, %xmm0
    00000ca6: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000cae: 	callq	_Z13record_resultdPKc # Offset: 3246
    00000cb3: 	movq	0xb0(%rsp), %rdi
    00000cbb: 	cmpq	0x48(%rsp), %rdi
    00000cc0: 	je	.Ltmp1002 # Offset: 3264
    00000cc2: 	movq	0xc0(%rsp), %rax
    00000cca: 	leaq	0x1(%rax), %rsi
    00000cce: 	callq	_ZdlPvm@PLT # Offset: 3278
.Ltmp1002:
    00000cd3: 	leaq	DATAat0x1c265(%rip), %rdx
    00000cda: 	movq	%r14, %rsi
    00000cdd: 	movq	%r12, %rdi
    00000ce0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3296
    00000ce5: 	callq	clock@PLT # Offset: 3301
    00000cea: 	movss	DATAat0x1c3d4(%rip), %xmm6
    00000cf2: 	movss	0xc(%rsp), %xmm3
    00000cf8: 	movl	iterations(%rip), %esi
    00000cfe: 	movq	%rax, start_time(%rip)
    00000d05: 	mulss	%xmm6, %xmm3
    00000d09: 	movss	%xmm6, 0x50(%rsp)
    00000d0f: 	movss	%xmm3, 0x54(%rsp)
    00000d15: 	testl	%esi, %esi
    00000d17: 	jle	.Ltmp1003 # Offset: 3351
    00000d1d: 	movaps	%xmm3, %xmm0
    00000d20: 	movsd	DATAat0x1c378(%rip), %xmm6
    00000d28: 	xorl	%ebx, %ebx
    00000d2a: 	andps	DATAat0x1c3c0(%rip), %xmm0
    00000d31: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00000d39: 	cvtss2sd	%xmm0, %xmm0
    00000d3d: 	comisd	%xmm6, %xmm0
    00000d41: 	movaps	%xmm3, 0x10(%rsp)
    00000d46: 	ja	.Ltmp1004 # Offset: 3398
    00000d4c: 	movsd	DATAat0x1c3a8(%rip), %xmm7
    00000d54: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000d5b: 	movsd	%xmm7, 0x20(%rsp)
    00000d61: 	movapd	%xmm7, %xmm4
.Ltmp1005:
    00000d65: 	pxor	%xmm1, %xmm1
    00000d69: 	movss	0x54(%rsp), %xmm0
    00000d6f: 	cvtsi2ssl	init_value(%rip), %xmm1
    00000d77: 	mulss	0x50(%rsp), %xmm1
    00000d7d: 	subss	%xmm1, %xmm0
    00000d81: 	cvtss2sd	%xmm0, %xmm0
    00000d85: 	andpd	0x10(%rsp), %xmm0
    00000d8b: 	comisd	%xmm0, %xmm4
    00000d8f: 	movsd	%xmm0, 0x28(%rsp)
    00000d95: 	ja	.Ltmp1003 # Offset: 3477
    00000d9b: 	movq	0xb0(%rsp), %rdx
    00000da3: 	movq	%rbp, %rsi
    00000da6: 	movl	$0x1, %edi
    00000dab: 	xorl	%eax, %eax
    00000dad: 	callq	__printf_chk@PLT # Offset: 3501
    00000db2: 	addl	$0x1, %ebx
    00000db5: 	cmpl	iterations(%rip), %ebx
    00000dbb: 	jge	.Ltmp1003 # Offset: 3515
    00000dc1: 	movsd	0x20(%rsp), %xmm3
    00000dc7: 	comisd	0x28(%rsp), %xmm3
    00000dcd: 	ja	.Ltmp1003 # Offset: 3533
    00000dd3: 	movapd	%xmm3, %xmm4
    00000dd7: 	jmp	.Ltmp1005 # Offset: 3543
    00000dd9: 	nopl	(%rax) # Size: 7
.Ltmp999:
    00000de0: 	movq	0xb0(%rsp), %rdx
    00000de8: 	movq	%r15, %rsi
    00000deb: 	movl	$0x1, %edi
    00000df0: 	xorl	%eax, %eax
    00000df2: 	callq	__printf_chk@PLT # Offset: 3570
    00000df7: 	movl	iterations(%rip), %edx
    00000dfd: 	jmp	.Ltmp1006 # Offset: 3581
    00000e02: 	nopw	(%rax,%rax) # Size: 6
.Ltmp992:
    00000e08: 	movq	0xb0(%rsp), %rdx
    00000e10: 	movq	%r15, %rsi
    00000e13: 	movl	$0x1, %edi
    00000e18: 	xorl	%eax, %eax
    00000e1a: 	callq	__printf_chk@PLT # Offset: 3610
    00000e1f: 	movl	iterations(%rip), %edx
    00000e25: 	jmp	.Ltmp1007 # Offset: 3621
    00000e2a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp985:
    00000e30: 	movq	0xb0(%rsp), %rdx
    00000e38: 	movq	%r15, %rsi
    00000e3b: 	movl	$0x1, %edi
    00000e40: 	xorl	%eax, %eax
    00000e42: 	callq	__printf_chk@PLT # Offset: 3650
    00000e47: 	movl	iterations(%rip), %edx
    00000e4d: 	jmp	.Ltmp1008 # Offset: 3661
    00000e52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp978:
    00000e58: 	movq	0xb0(%rsp), %rdx
    00000e60: 	movq	%r15, %rsi
    00000e63: 	movl	$0x1, %edi
    00000e68: 	xorl	%eax, %eax
    00000e6a: 	callq	__printf_chk@PLT # Offset: 3690
    00000e6f: 	movl	iterations(%rip), %edx
    00000e75: 	jmp	.Ltmp1009 # Offset: 3701
    00000e7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp971:
    00000e80: 	movq	0xb0(%rsp), %rdx
    00000e88: 	movq	%r15, %rsi
    00000e8b: 	movl	$0x1, %edi
    00000e90: 	xorl	%eax, %eax
    00000e92: 	callq	__printf_chk@PLT # Offset: 3730
    00000e97: 	movl	iterations(%rip), %edx
    00000e9d: 	jmp	.Ltmp1010 # Offset: 3741
    00000ea2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp964:
    00000ea8: 	movq	0xb0(%rsp), %rdx
    00000eb0: 	movq	%r15, %rsi
    00000eb3: 	movl	$0x1, %edi
    00000eb8: 	xorl	%eax, %eax
    00000eba: 	callq	__printf_chk@PLT # Offset: 3770
    00000ebf: 	movl	iterations(%rip), %edx
    00000ec5: 	jmp	.Ltmp1011 # Offset: 3781
.Ltmp1004:
    00000eca: 	movsd	DATAat0x1c3a8(%rip), %xmm5
    00000ed2: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000ed9: 	movsd	%xmm5, 0x20(%rsp)
.Ltmp1012:
    00000edf: 	pxor	%xmm1, %xmm1
    00000ee3: 	movss	0x54(%rsp), %xmm4
    00000ee9: 	cvtsi2ssl	init_value(%rip), %xmm1
    00000ef1: 	mulss	0x50(%rsp), %xmm1
    00000ef7: 	movaps	%xmm4, %xmm0
    00000efa: 	subss	%xmm1, %xmm0
    00000efe: 	divss	%xmm4, %xmm0
    00000f02: 	cvtss2sd	%xmm0, %xmm0
    00000f06: 	andpd	0x10(%rsp), %xmm0
    00000f0c: 	comisd	%xmm0, %xmm5
    00000f10: 	movsd	%xmm0, 0x28(%rsp)
    00000f16: 	ja	.Ltmp1003 # Offset: 3862
    00000f18: 	movq	0xb0(%rsp), %rdx
    00000f20: 	movq	%rbp, %rsi
    00000f23: 	movl	$0x1, %edi
    00000f28: 	xorl	%eax, %eax
    00000f2a: 	callq	__printf_chk@PLT # Offset: 3882
    00000f2f: 	addl	$0x1, %ebx
    00000f32: 	cmpl	iterations(%rip), %ebx
    00000f38: 	jge	.Ltmp1003 # Offset: 3896
    00000f3a: 	movsd	0x20(%rsp), %xmm5
    00000f40: 	comisd	0x28(%rsp), %xmm5
    00000f46: 	jbe	.Ltmp1012 # Offset: 3910
    00000f48: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1003:
    00000f50: 	movq	%r12, %rsi
    00000f53: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f5a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3930
    00000f5f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f66: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f6d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f74: 	je	.Ltmp1013 # Offset: 3956
.Ltmp1151:
    00000f7a: 	movq	-0x20(%rax), %rbp
    00000f7e: 	callq	clock@PLT # Offset: 3966
    00000f83: 	pxor	%xmm0, %xmm0
    00000f87: 	movq	%rax, end_time(%rip)
    00000f8e: 	movq	%rbp, %rdi
    00000f91: 	subq	start_time(%rip), %rax
    00000f98: 	cvtsi2sd	%rax, %xmm0
    00000f9d: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000fa5: 	callq	_Z13record_resultdPKc # Offset: 4005
    00000faa: 	movq	0xb0(%rsp), %rdi
    00000fb2: 	cmpq	0x48(%rsp), %rdi
    00000fb7: 	je	.Ltmp1014 # Offset: 4023
    00000fb9: 	movq	0xc0(%rsp), %rax
    00000fc1: 	leaq	0x1(%rax), %rsi
    00000fc5: 	callq	_ZdlPvm@PLT # Offset: 4037
.Ltmp1014:
    00000fca: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000fd1: 	movq	%r14, %rsi
    00000fd4: 	movq	%r12, %rdi
    00000fd7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4055
    00000fdc: 	callq	clock@PLT # Offset: 4060
    00000fe1: 	movl	iterations(%rip), %edx
    00000fe7: 	movq	%rax, start_time(%rip)
    00000fee: 	testl	%edx, %edx
    00000ff0: 	jle	.Ltmp1015 # Offset: 4080
    00000ff6: 	pxor	%xmm4, %xmm4
    00000ffa: 	movsd	DATAat0x1c378(%rip), %xmm7
    00001002: 	xorl	%ebx, %ebx
    00001004: 	movq	DATAat0x1c3b0(%rip), %xmm5
    0000100c: 	movss	%xmm4, 0x28(%rsp)
    00001012: 	movsd	DATAat0x1c3a8(%rip), %xmm4
    0000101a: 	movss	DATAat0x1c3c0(%rip), %xmm3
    00001022: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001029: 	movaps	%xmm3, 0x30(%rsp)
    0000102e: 	movsd	%xmm7, 0x40(%rsp)
    00001034: 	movaps	%xmm5, 0x10(%rsp)
    00001039: 	movsd	%xmm4, 0x20(%rsp)
    0000103f: 	nop # Size: 1
.Ltmp1019:
    00001040: 	movl	$0x1f40, %eax
    00001045: 	pxor	%xmm0, %xmm0
    00001049: 	nopl	(%rax) # Size: 7
.Ltmp1016:
    00001050: 	addss	0xc(%rsp), %xmm0
    00001056: 	subl	$0x1, %eax
    00001059: 	jne	.Ltmp1016 # Offset: 4185
    0000105b: 	pxor	%xmm2, %xmm2
    0000105f: 	movaps	0x30(%rsp), %xmm5
    00001064: 	movaps	%xmm0, %xmm1
    00001067: 	cvtsi2ssl	init_value(%rip), %xmm2
    0000106f: 	mulss	0x50(%rsp), %xmm2
    00001075: 	andps	%xmm0, %xmm5
    00001078: 	subss	%xmm2, %xmm1
    0000107c: 	pxor	%xmm2, %xmm2
    00001080: 	cvtss2sd	%xmm5, %xmm2
    00001084: 	comisd	0x40(%rsp), %xmm2
    0000108a: 	jbe	.Ltmp1017 # Offset: 4234
    0000108c: 	divss	%xmm0, %xmm1
.Ltmp1017:
    00001090: 	movsd	0x20(%rsp), %xmm7
    00001096: 	cvtss2sd	%xmm1, %xmm1
    0000109a: 	andpd	0x10(%rsp), %xmm1
    000010a0: 	comisd	%xmm1, %xmm7
    000010a4: 	jbe	.Ltmp1018 # Offset: 4260
.Ltmp1033:
    000010aa: 	addl	$0x1, %ebx
    000010ad: 	cmpl	%edx, %ebx
    000010af: 	jl	.Ltmp1019 # Offset: 4271
.Ltmp1015:
    000010b1: 	movq	%r12, %rsi
    000010b4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000010bb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4283
    000010c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010d5: 	je	.Ltmp1020 # Offset: 4309
.Ltmp1150:
    000010db: 	movq	-0x20(%rax), %rbp
    000010df: 	callq	clock@PLT # Offset: 4319
    000010e4: 	pxor	%xmm0, %xmm0
    000010e8: 	movq	%rax, end_time(%rip)
    000010ef: 	movq	%rbp, %rdi
    000010f2: 	subq	start_time(%rip), %rax
    000010f9: 	cvtsi2sd	%rax, %xmm0
    000010fe: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001106: 	callq	_Z13record_resultdPKc # Offset: 4358
    0000110b: 	movq	0xb0(%rsp), %rdi
    00001113: 	cmpq	0x48(%rsp), %rdi
    00001118: 	je	.Ltmp1021 # Offset: 4376
    0000111a: 	movq	0xc0(%rsp), %rax
    00001122: 	leaq	0x1(%rax), %rsi
    00001126: 	callq	_ZdlPvm@PLT # Offset: 4390
.Ltmp1021:
    0000112b: 	leaq	DATAat0x1c289(%rip), %rdx
    00001132: 	movq	%r14, %rsi
    00001135: 	movq	%r12, %rdi
    00001138: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4408
    0000113d: 	callq	clock@PLT # Offset: 4413
    00001142: 	movl	iterations(%rip), %edx
    00001148: 	movq	%rax, start_time(%rip)
    0000114f: 	testl	%edx, %edx
    00001151: 	jle	.Ltmp1022 # Offset: 4433
    00001157: 	pxor	%xmm3, %xmm3
    0000115b: 	movsd	DATAat0x1c378(%rip), %xmm5
    00001163: 	xorl	%ebx, %ebx
    00001165: 	movq	DATAat0x1c3b0(%rip), %xmm4
    0000116d: 	movss	%xmm3, 0x28(%rsp)
    00001173: 	movsd	DATAat0x1c3a8(%rip), %xmm3
    0000117b: 	movss	DATAat0x1c3c0(%rip), %xmm7
    00001183: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000118a: 	movaps	%xmm7, 0x30(%rsp)
    0000118f: 	movsd	%xmm5, 0x40(%rsp)
    00001195: 	movaps	%xmm4, 0x10(%rsp)
    0000119a: 	movsd	%xmm3, 0x20(%rsp)
.Ltmp1026:
    000011a0: 	movl	$0x1f40, %eax
    000011a5: 	pxor	%xmm0, %xmm0
    000011a9: 	nopl	(%rax) # Size: 7
.Ltmp1023:
    000011b0: 	addss	0xc(%rsp), %xmm0
    000011b6: 	subl	$0x1, %eax
    000011b9: 	jne	.Ltmp1023 # Offset: 4537
    000011bb: 	pxor	%xmm2, %xmm2
    000011bf: 	movaps	0x30(%rsp), %xmm6
    000011c4: 	movaps	%xmm0, %xmm1
    000011c7: 	cvtsi2ssl	init_value(%rip), %xmm2
    000011cf: 	mulss	0x50(%rsp), %xmm2
    000011d5: 	andps	%xmm0, %xmm6
    000011d8: 	subss	%xmm2, %xmm1
    000011dc: 	pxor	%xmm2, %xmm2
    000011e0: 	cvtss2sd	%xmm6, %xmm2
    000011e4: 	comisd	0x40(%rsp), %xmm2
    000011ea: 	jbe	.Ltmp1024 # Offset: 4586
    000011ec: 	divss	%xmm0, %xmm1
.Ltmp1024:
    000011f0: 	movsd	0x20(%rsp), %xmm3
    000011f6: 	cvtss2sd	%xmm1, %xmm1
    000011fa: 	andpd	0x10(%rsp), %xmm1
    00001200: 	comisd	%xmm1, %xmm3
    00001204: 	jbe	.Ltmp1025 # Offset: 4612
.Ltmp1032:
    0000120a: 	addl	$0x1, %ebx
    0000120d: 	cmpl	%edx, %ebx
    0000120f: 	jl	.Ltmp1026 # Offset: 4623
.Ltmp1022:
    00001211: 	movq	%r12, %rsi
    00001214: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000121b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4635
    00001220: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001227: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000122e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001235: 	je	.Ltmp1027 # Offset: 4661
.Ltmp1149:
    0000123b: 	movq	-0x20(%rax), %rbp
    0000123f: 	callq	clock@PLT # Offset: 4671
    00001244: 	pxor	%xmm0, %xmm0
    00001248: 	movq	%rax, end_time(%rip)
    0000124f: 	movq	%rbp, %rdi
    00001252: 	subq	start_time(%rip), %rax
    00001259: 	cvtsi2sd	%rax, %xmm0
    0000125e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001266: 	callq	_Z13record_resultdPKc # Offset: 4710
    0000126b: 	movq	0xb0(%rsp), %rdi
    00001273: 	cmpq	0x48(%rsp), %rdi
    00001278: 	je	.Ltmp1028 # Offset: 4728
    0000127a: 	movq	0xc0(%rsp), %rax
    00001282: 	leaq	0x1(%rax), %rsi
    00001286: 	callq	_ZdlPvm@PLT # Offset: 4742
.Ltmp1028:
    0000128b: 	leaq	DATAat0x1c298(%rip), %rdx
    00001292: 	movq	%r14, %rsi
    00001295: 	movq	%r12, %rdi
    00001298: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4760
    0000129d: 	callq	clock@PLT # Offset: 4765
    000012a2: 	movl	iterations(%rip), %ecx
    000012a8: 	movq	%rax, start_time(%rip)
    000012af: 	testl	%ecx, %ecx
    000012b1: 	jle	.Ltmp1029 # Offset: 4785
    000012b7: 	movss	0x54(%rsp), %xmm0
    000012bd: 	movsd	DATAat0x1c378(%rip), %xmm7
    000012c5: 	xorl	%ebx, %ebx
    000012c7: 	andps	DATAat0x1c3c0(%rip), %xmm0
    000012ce: 	cvtss2sd	%xmm0, %xmm0
    000012d2: 	comisd	%xmm7, %xmm0
    000012d6: 	jbe	.Ltmp1030 # Offset: 4822
    000012dc: 	movq	DATAat0x1c3b0(%rip), %xmm4
    000012e4: 	movsd	DATAat0x1c3a8(%rip), %xmm3
    000012ec: 	leaq	DATAat0x1c1c8(%rip), %rbp
    000012f3: 	movaps	%xmm4, 0x10(%rsp)
    000012f8: 	movapd	%xmm3, %xmm4
    000012fc: 	movsd	%xmm3, 0x20(%rsp)
.Ltmp1031:
    00001302: 	pxor	%xmm1, %xmm1
    00001306: 	movss	0x54(%rsp), %xmm7
    0000130c: 	cvtsi2ssl	init_value(%rip), %xmm1
    00001314: 	mulss	0x50(%rsp), %xmm1
    0000131a: 	movaps	%xmm7, %xmm0
    0000131d: 	subss	%xmm1, %xmm0
    00001321: 	divss	%xmm7, %xmm0
    00001325: 	cvtss2sd	%xmm0, %xmm0
    00001329: 	andpd	0x10(%rsp), %xmm0
    0000132f: 	comisd	%xmm0, %xmm4
    00001333: 	movsd	%xmm0, 0x28(%rsp)
    00001339: 	ja	.Ltmp1029 # Offset: 4921
    0000133f: 	movq	0xb0(%rsp), %rdx
    00001347: 	movq	%rbp, %rsi
    0000134a: 	movl	$0x1, %edi
    0000134f: 	xorl	%eax, %eax
    00001351: 	callq	__printf_chk@PLT # Offset: 4945
    00001356: 	addl	$0x1, %ebx
    00001359: 	cmpl	iterations(%rip), %ebx
    0000135f: 	jge	.Ltmp1029 # Offset: 4959
    00001365: 	movsd	0x20(%rsp), %xmm5
    0000136b: 	comisd	0x28(%rsp), %xmm5
    00001371: 	ja	.Ltmp1029 # Offset: 4977
    00001377: 	movapd	%xmm5, %xmm4
    0000137b: 	jmp	.Ltmp1031 # Offset: 4987
    0000137d: 	nopl	(%rax) # Size: 3
.Ltmp1025:
    00001380: 	movq	0xb0(%rsp), %rdx
    00001388: 	movq	%rbp, %rsi
    0000138b: 	movl	$0x1, %edi
    00001390: 	xorl	%eax, %eax
    00001392: 	callq	__printf_chk@PLT # Offset: 5010
    00001397: 	movl	iterations(%rip), %edx
    0000139d: 	jmp	.Ltmp1032 # Offset: 5021
    000013a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1018:
    000013a8: 	movq	0xb0(%rsp), %rdx
    000013b0: 	movq	%rbp, %rsi
    000013b3: 	movl	$0x1, %edi
    000013b8: 	xorl	%eax, %eax
    000013ba: 	callq	__printf_chk@PLT # Offset: 5050
    000013bf: 	movl	iterations(%rip), %edx
    000013c5: 	jmp	.Ltmp1033 # Offset: 5061
.Ltmp1030:
    000013ca: 	movq	DATAat0x1c3b0(%rip), %xmm6
    000013d2: 	movsd	DATAat0x1c3a8(%rip), %xmm7
    000013da: 	leaq	DATAat0x1c1c8(%rip), %rbp
    000013e1: 	movaps	%xmm6, 0x10(%rsp)
    000013e6: 	movsd	%xmm7, 0x20(%rsp)
.Ltmp1034:
    000013ec: 	pxor	%xmm1, %xmm1
    000013f0: 	movss	0x54(%rsp), %xmm0
    000013f6: 	cvtsi2ssl	init_value(%rip), %xmm1
    000013fe: 	mulss	0x50(%rsp), %xmm1
    00001404: 	subss	%xmm1, %xmm0
    00001408: 	cvtss2sd	%xmm0, %xmm0
    0000140c: 	andpd	0x10(%rsp), %xmm0
    00001412: 	comisd	%xmm0, %xmm7
    00001416: 	movsd	%xmm0, 0x28(%rsp)
    0000141c: 	ja	.Ltmp1029 # Offset: 5148
    0000141e: 	movq	0xb0(%rsp), %rdx
    00001426: 	movq	%rbp, %rsi
    00001429: 	movl	$0x1, %edi
    0000142e: 	xorl	%eax, %eax
    00001430: 	callq	__printf_chk@PLT # Offset: 5168
    00001435: 	addl	$0x1, %ebx
    00001438: 	cmpl	iterations(%rip), %ebx
    0000143e: 	jge	.Ltmp1029 # Offset: 5182
    00001440: 	movsd	0x20(%rsp), %xmm7
    00001446: 	comisd	0x28(%rsp), %xmm7
    0000144c: 	jbe	.Ltmp1034 # Offset: 5196
    0000144e: 	nop # Size: 2
.Ltmp1029:
    00001450: 	movq	%r12, %rsi
    00001453: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000145a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5210
    0000145f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001466: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001474: 	je	.Ltmp1035 # Offset: 5236
.Ltmp1145:
    0000147a: 	movq	-0x20(%rax), %rbp
    0000147e: 	callq	clock@PLT # Offset: 5246
    00001483: 	pxor	%xmm0, %xmm0
    00001487: 	movq	%rax, end_time(%rip)
    0000148e: 	movq	%rbp, %rdi
    00001491: 	subq	start_time(%rip), %rax
    00001498: 	cvtsi2sd	%rax, %xmm0
    0000149d: 	divsd	DATAat0x1c370(%rip), %xmm0
    000014a5: 	callq	_Z13record_resultdPKc # Offset: 5285
    000014aa: 	movq	0xb0(%rsp), %rdi
    000014b2: 	cmpq	0x48(%rsp), %rdi
    000014b7: 	je	.Ltmp1036 # Offset: 5303
    000014b9: 	movq	0xc0(%rsp), %rax
    000014c1: 	leaq	0x1(%rax), %rsi
    000014c5: 	callq	_ZdlPvm@PLT # Offset: 5317
.Ltmp1036:
    000014ca: 	leaq	DATAat0x1c2af(%rip), %rdx
    000014d1: 	movq	%r14, %rsi
    000014d4: 	movq	%r12, %rdi
    000014d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5335
    000014dc: 	callq	clock@PLT # Offset: 5340
    000014e1: 	movl	iterations(%rip), %edx
    000014e7: 	movq	%rax, start_time(%rip)
    000014ee: 	testl	%edx, %edx
    000014f0: 	jle	.Ltmp1037 # Offset: 5360
    000014f6: 	pxor	%xmm5, %xmm5
    000014fa: 	movsd	DATAat0x1c378(%rip), %xmm4
    00001502: 	xorl	%ebx, %ebx
    00001504: 	movq	DATAat0x1c3b0(%rip), %xmm3
    0000150c: 	movss	%xmm5, 0x28(%rsp)
    00001512: 	movsd	DATAat0x1c3a8(%rip), %xmm5
    0000151a: 	movss	DATAat0x1c3c0(%rip), %xmm6
    00001522: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001529: 	movaps	%xmm6, 0x30(%rsp)
    0000152e: 	movsd	%xmm4, 0x40(%rsp)
    00001534: 	movaps	%xmm3, 0x10(%rsp)
    00001539: 	movsd	%xmm5, 0x20(%rsp)
    0000153f: 	nop # Size: 1
.Ltmp1041:
    00001540: 	movl	$0x1f40, %eax
    00001545: 	pxor	%xmm0, %xmm0
    00001549: 	nopl	(%rax) # Size: 7
.Ltmp1038:
    00001550: 	addss	0xc(%rsp), %xmm0
    00001556: 	subl	$0x1, %eax
    00001559: 	jne	.Ltmp1038 # Offset: 5465
    0000155b: 	pxor	%xmm2, %xmm2
    0000155f: 	movaps	0x30(%rsp), %xmm3
    00001564: 	movaps	%xmm0, %xmm1
    00001567: 	cvtsi2ssl	init_value(%rip), %xmm2
    0000156f: 	mulss	0x50(%rsp), %xmm2
    00001575: 	andps	%xmm0, %xmm3
    00001578: 	subss	%xmm2, %xmm1
    0000157c: 	pxor	%xmm2, %xmm2
    00001580: 	cvtss2sd	%xmm3, %xmm2
    00001584: 	comisd	0x40(%rsp), %xmm2
    0000158a: 	jbe	.Ltmp1039 # Offset: 5514
    0000158c: 	divss	%xmm0, %xmm1
.Ltmp1039:
    00001590: 	movsd	0x20(%rsp), %xmm3
    00001596: 	cvtss2sd	%xmm1, %xmm1
    0000159a: 	andpd	0x10(%rsp), %xmm1
    000015a0: 	comisd	%xmm1, %xmm3
    000015a4: 	jbe	.Ltmp1040 # Offset: 5540
.Ltmp1129:
    000015aa: 	addl	$0x1, %ebx
    000015ad: 	cmpl	%edx, %ebx
    000015af: 	jl	.Ltmp1041 # Offset: 5551
.Ltmp1037:
    000015b1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015b8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000015bf: 	subq	$0x20, %rax
    000015c3: 	cmpq	%rax, %rbx
    000015c6: 	je	.Ltmp1042 # Offset: 5574
    000015cc: 	leaq	0x10(%rbx), %rdi
    000015d0: 	movq	0xb8(%rsp), %r13
    000015d8: 	movq	%rdi, (%rbx)
    000015db: 	movq	0xb0(%rsp), %rbp
    000015e3: 	movq	%rbp, %rax
    000015e6: 	addq	%r13, %rax
    000015e9: 	je	.Ltmp1043 # Offset: 5609
    000015eb: 	testq	%rbp, %rbp
    000015ee: 	je	.Ltmp1044 # Offset: 5614
.Ltmp1043:
    000015f4: 	movq	%r13, 0x70(%rsp)
    000015f9: 	cmpq	$0xf, %r13
    000015fd: 	ja	.Ltmp1045 # Offset: 5629
    00001603: 	cmpq	$0x1, %r13
    00001607: 	jne	.Ltmp1046 # Offset: 5639
    0000160d: 	movzbl	(%rbp), %eax
    00001611: 	movb	%al, 0x10(%rbx)
.Ltmp1133:
    00001614: 	movq	%r13, 0x8(%rbx)
    00001618: 	movb	$0x0, (%rdi,%r13)
    0000161d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001624: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000162b: 	addq	$0x20, %rax
    0000162f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001636: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000163d: 	je	.Ltmp1047 # Offset: 5693
.Ltmp1144:
    00001643: 	movq	-0x20(%rax), %rbp
    00001647: 	callq	clock@PLT # Offset: 5703
    0000164c: 	pxor	%xmm0, %xmm0
    00001650: 	movq	%rax, end_time(%rip)
    00001657: 	movq	%rbp, %rdi
    0000165a: 	subq	start_time(%rip), %rax
    00001661: 	cvtsi2sd	%rax, %xmm0
    00001666: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000166e: 	callq	_Z13record_resultdPKc # Offset: 5742
    00001673: 	movq	0xb0(%rsp), %rdi
    0000167b: 	cmpq	0x48(%rsp), %rdi
    00001680: 	je	.Ltmp1048 # Offset: 5760
    00001682: 	movq	0xc0(%rsp), %rax
    0000168a: 	leaq	0x1(%rax), %rsi
    0000168e: 	callq	_ZdlPvm@PLT # Offset: 5774
.Ltmp1048:
    00001693: 	leaq	DATAat0x1c2be(%rip), %rdx
    0000169a: 	movq	%r14, %rsi
    0000169d: 	movq	%r12, %rdi
    000016a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5792
    000016a5: 	callq	clock@PLT # Offset: 5797
    000016aa: 	movl	iterations(%rip), %edx
    000016b0: 	movq	%rax, start_time(%rip)
    000016b7: 	testl	%edx, %edx
    000016b9: 	jle	.Ltmp1049 # Offset: 5817
    000016bf: 	pxor	%xmm6, %xmm6
    000016c3: 	movsd	DATAat0x1c378(%rip), %xmm3
    000016cb: 	xorl	%ebx, %ebx
    000016cd: 	movq	DATAat0x1c3b0(%rip), %xmm5
    000016d5: 	movss	%xmm6, 0x28(%rsp)
    000016db: 	movsd	DATAat0x1c3a8(%rip), %xmm6
    000016e3: 	movss	DATAat0x1c3c0(%rip), %xmm4
    000016eb: 	leaq	DATAat0x1c1c8(%rip), %rbp
    000016f2: 	movaps	%xmm4, 0x30(%rsp)
    000016f7: 	movsd	%xmm3, 0x40(%rsp)
    000016fd: 	movaps	%xmm5, 0x10(%rsp)
    00001702: 	movsd	%xmm6, 0x20(%rsp)
    00001708: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1053:
    00001710: 	movl	$0x1f40, %eax
    00001715: 	pxor	%xmm0, %xmm0
    00001719: 	nopl	(%rax) # Size: 7
.Ltmp1050:
    00001720: 	addss	0xc(%rsp), %xmm0
    00001726: 	subl	$0x1, %eax
    00001729: 	jne	.Ltmp1050 # Offset: 5929
    0000172b: 	pxor	%xmm2, %xmm2
    0000172f: 	movaps	0x30(%rsp), %xmm7
    00001734: 	movaps	%xmm0, %xmm1
    00001737: 	cvtsi2ssl	init_value(%rip), %xmm2
    0000173f: 	mulss	0x50(%rsp), %xmm2
    00001745: 	andps	%xmm0, %xmm7
    00001748: 	subss	%xmm2, %xmm1
    0000174c: 	pxor	%xmm2, %xmm2
    00001750: 	cvtss2sd	%xmm7, %xmm2
    00001754: 	comisd	0x40(%rsp), %xmm2
    0000175a: 	jbe	.Ltmp1051 # Offset: 5978
    0000175c: 	divss	%xmm0, %xmm1
.Ltmp1051:
    00001760: 	movsd	0x20(%rsp), %xmm4
    00001766: 	cvtss2sd	%xmm1, %xmm1
    0000176a: 	andpd	0x10(%rsp), %xmm1
    00001770: 	comisd	%xmm1, %xmm4
    00001774: 	jbe	.Ltmp1052 # Offset: 6004
.Ltmp1139:
    0000177a: 	addl	$0x1, %ebx
    0000177d: 	cmpl	%edx, %ebx
    0000177f: 	jl	.Ltmp1053 # Offset: 6015
.Ltmp1049:
    00001781: 	movq	%r12, %rsi
    00001784: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000178b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6027
    00001790: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001797: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000179e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017a5: 	je	.Ltmp1054 # Offset: 6053
.Ltmp1158:
    000017ab: 	movq	-0x20(%rax), %rbp
    000017af: 	callq	clock@PLT # Offset: 6063
    000017b4: 	pxor	%xmm0, %xmm0
    000017b8: 	movq	%rax, end_time(%rip)
    000017bf: 	movq	%rbp, %rdi
    000017c2: 	subq	start_time(%rip), %rax
    000017c9: 	cvtsi2sd	%rax, %xmm0
    000017ce: 	divsd	DATAat0x1c370(%rip), %xmm0
    000017d6: 	callq	_Z13record_resultdPKc # Offset: 6102
    000017db: 	movq	0xb0(%rsp), %rdi
    000017e3: 	cmpq	0x48(%rsp), %rdi
    000017e8: 	je	.Ltmp1055 # Offset: 6120
    000017ea: 	movq	0xc0(%rsp), %rax
    000017f2: 	leaq	0x1(%rax), %rsi
    000017f6: 	callq	_ZdlPvm@PLT # Offset: 6134
.Ltmp1055:
    000017fb: 	leaq	DATAat0x1c225(%rip), %rdx
    00001802: 	movq	%r14, %rsi
    00001805: 	movq	%r12, %rdi
    00001808: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6152
    0000180d: 	callq	clock@PLT # Offset: 6157
    00001812: 	movq	0x58(%rsp), %rbx
    00001817: 	movl	iterations(%rip), %edx
    0000181d: 	movq	%rax, start_time(%rip)
    00001824: 	shlq	$0x3, %rbx
    00001828: 	movq	0x240(%rsp,%rbx), %rax
    00001830: 	movq	0x150(%rsp,%rax,8), %rax
    00001838: 	movss	0xd0(%rsp,%rax,4), %xmm7
    00001841: 	movss	%xmm7, 0xc(%rsp)
    00001847: 	mulss	0x50(%rsp), %xmm7
    0000184d: 	movss	%xmm7, 0x28(%rsp)
    00001853: 	testl	%edx, %edx
    00001855: 	jle	.Ltmp1056 # Offset: 6229
    00001857: 	movsd	DATAat0x1c378(%rip), %xmm4
    0000185f: 	movaps	%xmm7, %xmm0
    00001862: 	xorl	%ebp, %ebp
    00001864: 	andps	DATAat0x1c3c0(%rip), %xmm0
    0000186b: 	cvtss2sd	%xmm0, %xmm0
    0000186f: 	comisd	%xmm4, %xmm0
    00001873: 	ja	.Ltmp1057 # Offset: 6259
    00001879: 	movsd	DATAat0x1c3a8(%rip), %xmm6
    00001881: 	movq	DATAat0x1c3b0(%rip), %xmm5
    00001889: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001890: 	movaps	%xmm5, 0x10(%rsp)
    00001895: 	movapd	%xmm6, %xmm3
    00001899: 	movsd	%xmm6, 0x20(%rsp)
.Ltmp1140:
    0000189f: 	pxor	%xmm1, %xmm1
    000018a3: 	movss	0x28(%rsp), %xmm0
    000018a9: 	cvtsi2ssl	init_value(%rip), %xmm1
    000018b1: 	mulss	0x50(%rsp), %xmm1
    000018b7: 	subss	%xmm1, %xmm0
    000018bb: 	cvtss2sd	%xmm0, %xmm0
    000018bf: 	andpd	0x10(%rsp), %xmm0
    000018c5: 	comisd	%xmm0, %xmm3
    000018c9: 	movsd	%xmm0, 0x40(%rsp)
    000018cf: 	jbe	.Ltmp1058 # Offset: 6351
.Ltmp1056:
    000018d5: 	movq	%r12, %rsi
    000018d8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6367
    000018e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018eb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018f2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018f9: 	je	.Ltmp1059 # Offset: 6393
.Ltmp1157:
    000018ff: 	movq	-0x20(%rax), %rbp
    00001903: 	callq	clock@PLT # Offset: 6403
    00001908: 	pxor	%xmm0, %xmm0
    0000190c: 	movq	%rax, end_time(%rip)
    00001913: 	movq	%rbp, %rdi
    00001916: 	subq	start_time(%rip), %rax
    0000191d: 	cvtsi2sd	%rax, %xmm0
    00001922: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000192a: 	callq	_Z13record_resultdPKc # Offset: 6442
    0000192f: 	movq	0xb0(%rsp), %rdi
    00001937: 	cmpq	0x48(%rsp), %rdi
    0000193c: 	je	.Ltmp1060 # Offset: 6460
    0000193e: 	movq	0xc0(%rsp), %rax
    00001946: 	leaq	0x1(%rax), %rsi
    0000194a: 	callq	_ZdlPvm@PLT # Offset: 6474
.Ltmp1060:
    0000194f: 	leaq	DATAat0x1c242(%rip), %rdx
    00001956: 	movq	%r14, %rsi
    00001959: 	movq	%r12, %rdi
    0000195c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6492
    00001961: 	callq	clock@PLT # Offset: 6497
    00001966: 	movl	iterations(%rip), %edx
    0000196c: 	movq	%rax, start_time(%rip)
    00001973: 	testl	%edx, %edx
    00001975: 	jle	.Ltmp1061 # Offset: 6517
    0000197b: 	pxor	%xmm3, %xmm3
    0000197f: 	movsd	DATAat0x1c378(%rip), %xmm5
    00001987: 	xorl	%ebp, %ebp
    00001989: 	movq	DATAat0x1c3b0(%rip), %xmm6
    00001991: 	movss	%xmm3, 0x28(%rsp)
    00001997: 	movsd	DATAat0x1c3a8(%rip), %xmm3
    0000199f: 	movss	DATAat0x1c3c0(%rip), %xmm7
    000019a7: 	leaq	DATAat0x1c1c8(%rip), %r13
    000019ae: 	movaps	%xmm7, 0x30(%rsp)
    000019b3: 	movsd	%xmm5, 0x40(%rsp)
    000019b9: 	movaps	%xmm6, 0x10(%rsp)
    000019be: 	movsd	%xmm3, 0x20(%rsp)
    000019c4: 	nopl	(%rax) # Size: 4
.Ltmp1065:
    000019c8: 	movl	$0x1f40, %eax
    000019cd: 	pxor	%xmm0, %xmm0
    000019d1: 	nopl	(%rax) # Size: 7
.Ltmp1062:
    000019d8: 	addss	0xc(%rsp), %xmm0
    000019de: 	subl	$0x1, %eax
    000019e1: 	jne	.Ltmp1062 # Offset: 6625
    000019e3: 	pxor	%xmm2, %xmm2
    000019e7: 	movaps	0x30(%rsp), %xmm4
    000019ec: 	movaps	%xmm0, %xmm1
    000019ef: 	cvtsi2ssl	init_value(%rip), %xmm2
    000019f7: 	mulss	0x50(%rsp), %xmm2
    000019fd: 	andps	%xmm0, %xmm4
    00001a00: 	subss	%xmm2, %xmm1
    00001a04: 	pxor	%xmm2, %xmm2
    00001a08: 	cvtss2sd	%xmm4, %xmm2
    00001a0c: 	comisd	0x40(%rsp), %xmm2
    00001a12: 	jbe	.Ltmp1063 # Offset: 6674
    00001a14: 	divss	%xmm0, %xmm1
.Ltmp1063:
    00001a18: 	movsd	0x20(%rsp), %xmm4
    00001a1e: 	cvtss2sd	%xmm1, %xmm1
    00001a22: 	andpd	0x10(%rsp), %xmm1
    00001a28: 	comisd	%xmm1, %xmm4
    00001a2c: 	jbe	.Ltmp1064 # Offset: 6700
.Ltmp1138:
    00001a32: 	addl	$0x1, %ebp
    00001a35: 	cmpl	%edx, %ebp
    00001a37: 	jl	.Ltmp1065 # Offset: 6711
.Ltmp1061:
    00001a39: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001a40: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001a47: 	subq	$0x20, %rax
    00001a4b: 	cmpq	%rax, %rbp
    00001a4e: 	je	.Ltmp1066 # Offset: 6734
    00001a54: 	leaq	0x10(%rbp), %rdi
    00001a58: 	movq	0xb8(%rsp), %r13
    00001a60: 	movq	%rdi, (%rbp)
    00001a64: 	movq	0xb0(%rsp), %r15
    00001a6c: 	movq	%r15, %rax
    00001a6f: 	addq	%r13, %rax
    00001a72: 	je	.Ltmp1067 # Offset: 6770
    00001a74: 	testq	%r15, %r15
    00001a77: 	je	.Ltmp1068 # Offset: 6775
.Ltmp1067:
    00001a7d: 	movq	%r13, 0x70(%rsp)
    00001a82: 	cmpq	$0xf, %r13
    00001a86: 	ja	.Ltmp1069 # Offset: 6790
    00001a8c: 	cmpq	$0x1, %r13
    00001a90: 	jne	.Ltmp1070 # Offset: 6800
    00001a96: 	movzbl	(%r15), %eax
    00001a9a: 	movb	%al, 0x10(%rbp)
.Ltmp1175:
    00001a9d: 	movq	%r13, 0x8(%rbp)
    00001aa1: 	movb	$0x0, (%rdi,%r13)
    00001aa6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001aad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ab4: 	addq	$0x20, %rax
    00001ab8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001abf: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001ac6: 	je	.Ltmp1071 # Offset: 6854
.Ltmp1152:
    00001acc: 	movq	-0x20(%rax), %rbp
    00001ad0: 	callq	clock@PLT # Offset: 6864
    00001ad5: 	pxor	%xmm0, %xmm0
    00001ad9: 	movq	%rax, end_time(%rip)
    00001ae0: 	movq	%rbp, %rdi
    00001ae3: 	subq	start_time(%rip), %rax
    00001aea: 	cvtsi2sd	%rax, %xmm0
    00001aef: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001af7: 	callq	_Z13record_resultdPKc # Offset: 6903
    00001afc: 	movq	0xb0(%rsp), %rdi
    00001b04: 	cmpq	0x48(%rsp), %rdi
    00001b09: 	je	.Ltmp1072 # Offset: 6921
    00001b0b: 	movq	0xc0(%rsp), %rax
    00001b13: 	leaq	0x1(%rax), %rsi
    00001b17: 	callq	_ZdlPvm@PLT # Offset: 6935
.Ltmp1072:
    00001b1c: 	leaq	DATAat0x1c257(%rip), %rdx
    00001b23: 	movq	%r14, %rsi
    00001b26: 	movq	%r12, %rdi
    00001b29: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6953
    00001b2e: 	callq	clock@PLT # Offset: 6958
    00001b33: 	movl	iterations(%rip), %edx
    00001b39: 	movq	%rax, start_time(%rip)
    00001b40: 	testl	%edx, %edx
    00001b42: 	jle	.Ltmp1073 # Offset: 6978
    00001b48: 	pxor	%xmm7, %xmm7
    00001b4c: 	movsd	DATAat0x1c378(%rip), %xmm6
    00001b54: 	xorl	%ebp, %ebp
    00001b56: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00001b5e: 	movss	%xmm7, 0x28(%rsp)
    00001b64: 	movsd	DATAat0x1c3a8(%rip), %xmm7
    00001b6c: 	movss	DATAat0x1c3c0(%rip), %xmm5
    00001b74: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001b7b: 	movaps	%xmm5, 0x30(%rsp)
    00001b80: 	movsd	%xmm6, 0x40(%rsp)
    00001b86: 	movaps	%xmm3, 0x10(%rsp)
    00001b8b: 	movsd	%xmm7, 0x20(%rsp)
    00001b91: 	nopl	(%rax) # Size: 7
.Ltmp1077:
    00001b98: 	movl	$0x1f40, %eax
    00001b9d: 	pxor	%xmm0, %xmm0
    00001ba1: 	nopl	(%rax) # Size: 7
.Ltmp1074:
    00001ba8: 	addss	0xc(%rsp), %xmm0
    00001bae: 	subl	$0x1, %eax
    00001bb1: 	jne	.Ltmp1074 # Offset: 7089
    00001bb3: 	pxor	%xmm2, %xmm2
    00001bb7: 	movaps	0x30(%rsp), %xmm5
    00001bbc: 	movaps	%xmm0, %xmm1
    00001bbf: 	cvtsi2ssl	init_value(%rip), %xmm2
    00001bc7: 	mulss	0x50(%rsp), %xmm2
    00001bcd: 	andps	%xmm0, %xmm5
    00001bd0: 	subss	%xmm2, %xmm1
    00001bd4: 	pxor	%xmm2, %xmm2
    00001bd8: 	cvtss2sd	%xmm5, %xmm2
    00001bdc: 	comisd	0x40(%rsp), %xmm2
    00001be2: 	jbe	.Ltmp1075 # Offset: 7138
    00001be4: 	divss	%xmm0, %xmm1
.Ltmp1075:
    00001be8: 	movsd	0x20(%rsp), %xmm7
    00001bee: 	cvtss2sd	%xmm1, %xmm1
    00001bf2: 	andpd	0x10(%rsp), %xmm1
    00001bf8: 	comisd	%xmm1, %xmm7
    00001bfc: 	jbe	.Ltmp1076 # Offset: 7164
.Ltmp1137:
    00001c02: 	addl	$0x1, %ebp
    00001c05: 	cmpl	%edx, %ebp
    00001c07: 	jl	.Ltmp1077 # Offset: 7175
.Ltmp1073:
    00001c09: 	movq	%r12, %rsi
    00001c0c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c13: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7187
    00001c18: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c1f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c26: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c2d: 	je	.Ltmp1078 # Offset: 7213
.Ltmp1154:
    00001c33: 	movq	-0x20(%rax), %rbp
    00001c37: 	callq	clock@PLT # Offset: 7223
    00001c3c: 	pxor	%xmm0, %xmm0
    00001c40: 	movq	%rax, end_time(%rip)
    00001c47: 	movq	%rbp, %rdi
    00001c4a: 	subq	start_time(%rip), %rax
    00001c51: 	cvtsi2sd	%rax, %xmm0
    00001c56: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001c5e: 	callq	_Z13record_resultdPKc # Offset: 7262
    00001c63: 	movq	0xb0(%rsp), %rdi
    00001c6b: 	cmpq	0x48(%rsp), %rdi
    00001c70: 	je	.Ltmp1079 # Offset: 7280
    00001c72: 	movq	0xc0(%rsp), %rax
    00001c7a: 	leaq	0x1(%rax), %rsi
    00001c7e: 	callq	_ZdlPvm@PLT # Offset: 7294
.Ltmp1079:
    00001c83: 	leaq	DATAat0x1c338(%rip), %rdx
    00001c8a: 	movq	%r14, %rsi
    00001c8d: 	movq	%r12, %rdi
    00001c90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7312
    00001c95: 	callq	clock@PLT # Offset: 7317
    00001c9a: 	movq	%rax, start_time(%rip)
    00001ca1: 	movq	0x150(%rsp,%rbx), %rax
    00001ca9: 	movq	0x240(%rsp,%rax,8), %rax
    00001cb1: 	movq	0x150(%rsp,%rax,8), %rax
    00001cb9: 	movq	0x240(%rsp,%rax,8), %rax
    00001cc1: 	movq	0x150(%rsp,%rax,8), %rax
    00001cc9: 	movss	0xd0(%rsp,%rax,4), %xmm4
    00001cd2: 	movl	iterations(%rip), %eax
    00001cd8: 	movss	%xmm4, 0xc(%rsp)
    00001cde: 	mulss	0x50(%rsp), %xmm4
    00001ce4: 	movss	%xmm4, 0x28(%rsp)
    00001cea: 	testl	%eax, %eax
    00001cec: 	jle	.Ltmp1080 # Offset: 7404
    00001cee: 	movsd	DATAat0x1c378(%rip), %xmm5
    00001cf6: 	movaps	%xmm4, %xmm0
    00001cf9: 	xorl	%ebx, %ebx
    00001cfb: 	andps	DATAat0x1c3c0(%rip), %xmm0
    00001d02: 	cvtss2sd	%xmm0, %xmm0
    00001d06: 	comisd	%xmm5, %xmm0
    00001d0a: 	ja	.Ltmp1081 # Offset: 7434
    00001d10: 	movsd	DATAat0x1c3a8(%rip), %xmm5
    00001d18: 	movq	DATAat0x1c3b0(%rip), %xmm3
    00001d20: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001d27: 	movaps	%xmm3, 0x10(%rsp)
    00001d2c: 	movapd	%xmm5, %xmm7
    00001d30: 	movsd	%xmm5, 0x20(%rsp)
.Ltmp1141:
    00001d36: 	pxor	%xmm1, %xmm1
    00001d3a: 	movss	0x28(%rsp), %xmm0
    00001d40: 	cvtsi2ssl	init_value(%rip), %xmm1
    00001d48: 	mulss	0x50(%rsp), %xmm1
    00001d4e: 	subss	%xmm1, %xmm0
    00001d52: 	cvtss2sd	%xmm0, %xmm0
    00001d56: 	andpd	0x10(%rsp), %xmm0
    00001d5c: 	comisd	%xmm0, %xmm7
    00001d60: 	movsd	%xmm0, 0x40(%rsp)
    00001d66: 	jbe	.Ltmp1082 # Offset: 7526
.Ltmp1080:
    00001d6c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001d73: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001d7a: 	subq	$0x20, %rax
    00001d7e: 	cmpq	%rax, %rbx
    00001d81: 	je	.Ltmp1083 # Offset: 7553
    00001d87: 	leaq	0x10(%rbx), %rdi
    00001d8b: 	movq	0xb8(%rsp), %r13
    00001d93: 	movq	%rdi, (%rbx)
    00001d96: 	movq	0xb0(%rsp), %rbp
    00001d9e: 	movq	%rbp, %rax
    00001da1: 	addq	%r13, %rax
    00001da4: 	je	.Ltmp1084 # Offset: 7588
    00001da6: 	testq	%rbp, %rbp
    00001da9: 	je	.Ltmp1085 # Offset: 7593
.Ltmp1084:
    00001daf: 	movq	%r13, 0x70(%rsp)
    00001db4: 	cmpq	$0xf, %r13
    00001db8: 	ja	.Ltmp1086 # Offset: 7608
    00001dbe: 	cmpq	$0x1, %r13
    00001dc2: 	jne	.Ltmp1087 # Offset: 7618
    00001dc8: 	movzbl	(%rbp), %eax
    00001dcc: 	movb	%al, 0x10(%rbx)
.Ltmp1173:
    00001dcf: 	movq	%r13, 0x8(%rbx)
    00001dd3: 	movb	$0x0, (%rdi,%r13)
    00001dd8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ddf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001de6: 	addq	$0x20, %rax
    00001dea: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001df1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001df8: 	je	.Ltmp1088 # Offset: 7672
.Ltmp1153:
    00001dfe: 	movq	-0x20(%rax), %rbp
    00001e02: 	callq	clock@PLT # Offset: 7682
    00001e07: 	pxor	%xmm0, %xmm0
    00001e0b: 	movq	%rax, end_time(%rip)
    00001e12: 	movq	%rbp, %rdi
    00001e15: 	subq	start_time(%rip), %rax
    00001e1c: 	cvtsi2sd	%rax, %xmm0
    00001e21: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001e29: 	callq	_Z13record_resultdPKc # Offset: 7721
    00001e2e: 	movq	0xb0(%rsp), %rdi
    00001e36: 	cmpq	0x48(%rsp), %rdi
    00001e3b: 	je	.Ltmp1089 # Offset: 7739
    00001e3d: 	movq	0xc0(%rsp), %rax
    00001e45: 	leaq	0x1(%rax), %rsi
    00001e49: 	callq	_ZdlPvm@PLT # Offset: 7753
.Ltmp1089:
    00001e4e: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001e55: 	movq	%r14, %rsi
    00001e58: 	movq	%r12, %rdi
    00001e5b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7771
    00001e60: 	callq	clock@PLT # Offset: 7776
    00001e65: 	movl	iterations(%rip), %edx
    00001e6b: 	movq	%rax, start_time(%rip)
    00001e72: 	testl	%edx, %edx
    00001e74: 	jle	.Ltmp1090 # Offset: 7796
    00001e7a: 	pxor	%xmm6, %xmm6
    00001e7e: 	movsd	DATAat0x1c378(%rip), %xmm3
    00001e86: 	xorl	%ebx, %ebx
    00001e88: 	movq	DATAat0x1c3b0(%rip), %xmm7
    00001e90: 	movss	%xmm6, 0x28(%rsp)
    00001e96: 	movsd	DATAat0x1c3a8(%rip), %xmm6
    00001e9e: 	movss	DATAat0x1c3c0(%rip), %xmm4
    00001ea6: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00001ead: 	movaps	%xmm4, 0x30(%rsp)
    00001eb2: 	movsd	%xmm3, 0x40(%rsp)
    00001eb8: 	movaps	%xmm7, 0x10(%rsp)
    00001ebd: 	movsd	%xmm6, 0x20(%rsp)
    00001ec3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1094:
    00001ec8: 	movl	$0x1f40, %eax
    00001ecd: 	pxor	%xmm0, %xmm0
    00001ed1: 	nopl	(%rax) # Size: 7
.Ltmp1091:
    00001ed8: 	addss	0xc(%rsp), %xmm0
    00001ede: 	subl	$0x1, %eax
    00001ee1: 	jne	.Ltmp1091 # Offset: 7905
    00001ee3: 	pxor	%xmm2, %xmm2
    00001ee7: 	movaps	0x30(%rsp), %xmm6
    00001eec: 	movaps	%xmm0, %xmm1
    00001eef: 	cvtsi2ssl	init_value(%rip), %xmm2
    00001ef7: 	mulss	0x50(%rsp), %xmm2
    00001efd: 	andps	%xmm0, %xmm6
    00001f00: 	subss	%xmm2, %xmm1
    00001f04: 	pxor	%xmm2, %xmm2
    00001f08: 	cvtss2sd	%xmm6, %xmm2
    00001f0c: 	comisd	0x40(%rsp), %xmm2
    00001f12: 	jbe	.Ltmp1092 # Offset: 7954
    00001f14: 	divss	%xmm0, %xmm1
.Ltmp1092:
    00001f18: 	movsd	0x20(%rsp), %xmm7
    00001f1e: 	cvtss2sd	%xmm1, %xmm1
    00001f22: 	andpd	0x10(%rsp), %xmm1
    00001f28: 	comisd	%xmm1, %xmm7
    00001f2c: 	jbe	.Ltmp1093 # Offset: 7980
.Ltmp1136:
    00001f32: 	addl	$0x1, %ebx
    00001f35: 	cmpl	%edx, %ebx
    00001f37: 	jl	.Ltmp1094 # Offset: 7991
.Ltmp1090:
    00001f39: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001f40: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001f47: 	subq	$0x20, %rax
    00001f4b: 	cmpq	%rax, %rbx
    00001f4e: 	je	.Ltmp1095 # Offset: 8014
    00001f54: 	leaq	0x10(%rbx), %rdi
    00001f58: 	movq	0xb8(%rsp), %r13
    00001f60: 	movq	%rdi, (%rbx)
    00001f63: 	movq	0xb0(%rsp), %rbp
    00001f6b: 	movq	%rbp, %rax
    00001f6e: 	addq	%r13, %rax
    00001f71: 	je	.Ltmp1096 # Offset: 8049
    00001f73: 	testq	%rbp, %rbp
    00001f76: 	je	.Ltmp1097 # Offset: 8054
.Ltmp1096:
    00001f7c: 	movq	%r13, 0x70(%rsp)
    00001f81: 	cmpq	$0xf, %r13
    00001f85: 	ja	.Ltmp1098 # Offset: 8069
    00001f8b: 	cmpq	$0x1, %r13
    00001f8f: 	jne	.Ltmp1099 # Offset: 8079
    00001f95: 	movzbl	(%rbp), %eax
    00001f99: 	movb	%al, 0x10(%rbx)
.Ltmp1170:
    00001f9c: 	movq	%r13, 0x8(%rbx)
    00001fa0: 	movb	$0x0, (%rdi,%r13)
    00001fa5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fac: 	addq	$0x20, %rax
    00001fb0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1156:
    00001fb7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001fbe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fc5: 	je	.Ltmp1100 # Offset: 8133
.Ltmp1155:
    00001fcb: 	movq	-0x20(%rax), %rbp
    00001fcf: 	callq	clock@PLT # Offset: 8143
    00001fd4: 	pxor	%xmm0, %xmm0
    00001fd8: 	movq	%rax, end_time(%rip)
    00001fdf: 	movq	%rbp, %rdi
    00001fe2: 	subq	start_time(%rip), %rax
    00001fe9: 	cvtsi2sd	%rax, %xmm0
    00001fee: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001ff6: 	callq	_Z13record_resultdPKc # Offset: 8182
    00001ffb: 	movq	0xb0(%rsp), %rdi
    00002003: 	cmpq	0x48(%rsp), %rdi
    00002008: 	je	.Ltmp1101 # Offset: 8200
    0000200a: 	movq	0xc0(%rsp), %rax
    00002012: 	leaq	0x1(%rax), %rsi
    00002016: 	callq	_ZdlPvm@PLT # Offset: 8214
.Ltmp1101:
    0000201b: 	leaq	DATAat0x1c2e7(%rip), %rdx
    00002022: 	movq	%r14, %rsi
    00002025: 	movq	%r12, %rdi
    00002028: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8232
    0000202d: 	callq	clock@PLT # Offset: 8237
    00002032: 	movl	iterations(%rip), %edx
    00002038: 	movq	%rax, start_time(%rip)
    0000203f: 	testl	%edx, %edx
    00002041: 	jle	.Ltmp1102 # Offset: 8257
    00002047: 	pxor	%xmm4, %xmm4
    0000204b: 	movsd	DATAat0x1c378(%rip), %xmm7
    00002053: 	xorl	%ebx, %ebx
    00002055: 	movq	DATAat0x1c3b0(%rip), %xmm6
    0000205d: 	movss	%xmm4, 0x28(%rsp)
    00002063: 	movsd	DATAat0x1c3a8(%rip), %xmm4
    0000206b: 	movss	DATAat0x1c3c0(%rip), %xmm3
    00002073: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000207a: 	movaps	%xmm3, 0x30(%rsp)
    0000207f: 	movsd	%xmm7, 0x40(%rsp)
    00002085: 	movaps	%xmm6, 0x10(%rsp)
    0000208a: 	movsd	%xmm4, 0x20(%rsp)
.Ltmp1106:
    00002090: 	movl	$0x1f40, %eax
    00002095: 	pxor	%xmm0, %xmm0
    00002099: 	nopl	(%rax) # Size: 7
.Ltmp1103:
    000020a0: 	addss	0xc(%rsp), %xmm0
    000020a6: 	subl	$0x1, %eax
    000020a9: 	jne	.Ltmp1103 # Offset: 8361
    000020ab: 	pxor	%xmm2, %xmm2
    000020af: 	movaps	0x30(%rsp), %xmm3
    000020b4: 	movaps	%xmm0, %xmm1
    000020b7: 	cvtsi2ssl	init_value(%rip), %xmm2
    000020bf: 	mulss	0x50(%rsp), %xmm2
    000020c5: 	andps	%xmm0, %xmm3
    000020c8: 	subss	%xmm2, %xmm1
    000020cc: 	pxor	%xmm2, %xmm2
    000020d0: 	cvtss2sd	%xmm3, %xmm2
    000020d4: 	comisd	0x40(%rsp), %xmm2
    000020da: 	jbe	.Ltmp1104 # Offset: 8410
    000020dc: 	divss	%xmm0, %xmm1
.Ltmp1104:
    000020e0: 	movsd	0x20(%rsp), %xmm6
    000020e6: 	cvtss2sd	%xmm1, %xmm1
    000020ea: 	andpd	0x10(%rsp), %xmm1
    000020f0: 	comisd	%xmm1, %xmm6
    000020f4: 	jbe	.Ltmp1105 # Offset: 8436
.Ltmp1135:
    000020fa: 	addl	$0x1, %ebx
    000020fd: 	cmpl	%edx, %ebx
    000020ff: 	jl	.Ltmp1106 # Offset: 8447
.Ltmp1102:
    00002101: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002108: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000210f: 	subq	$0x20, %rax
    00002113: 	cmpq	%rax, %rbx
    00002116: 	je	.Ltmp1107 # Offset: 8470
    0000211c: 	leaq	0x10(%rbx), %rdi
    00002120: 	movq	0xb8(%rsp), %r13
    00002128: 	movq	%rdi, (%rbx)
    0000212b: 	movq	0xb0(%rsp), %rbp
    00002133: 	movq	%rbp, %rax
    00002136: 	addq	%r13, %rax
    00002139: 	je	.Ltmp1108 # Offset: 8505
    0000213b: 	testq	%rbp, %rbp
    0000213e: 	je	.Ltmp1109 # Offset: 8510
.Ltmp1108:
    00002144: 	movq	%r13, 0x70(%rsp)
    00002149: 	cmpq	$0xf, %r13
    0000214d: 	ja	.Ltmp1110 # Offset: 8525
    00002153: 	cmpq	$0x1, %r13
    00002157: 	jne	.Ltmp1111 # Offset: 8535
    0000215d: 	movzbl	(%rbp), %eax
    00002161: 	movb	%al, 0x10(%rbx)
.Ltmp1166:
    00002164: 	movq	%r13, 0x8(%rbx)
    00002168: 	movb	$0x0, (%rdi,%r13)
    0000216d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002174: 	addq	$0x20, %rax
    00002178: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1163:
    0000217f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002186: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000218d: 	je	.Ltmp1112 # Offset: 8589
.Ltmp1162:
    00002193: 	movq	-0x20(%rax), %rbp
    00002197: 	callq	clock@PLT # Offset: 8599
    0000219c: 	pxor	%xmm0, %xmm0
    000021a0: 	movq	%rax, end_time(%rip)
    000021a7: 	movq	%rbp, %rdi
    000021aa: 	subq	start_time(%rip), %rax
    000021b1: 	cvtsi2sd	%rax, %xmm0
    000021b6: 	divsd	DATAat0x1c370(%rip), %xmm0
    000021be: 	callq	_Z13record_resultdPKc # Offset: 8638
    000021c3: 	movq	0xb0(%rsp), %rdi
    000021cb: 	cmpq	0x48(%rsp), %rdi
    000021d0: 	je	.Ltmp1113 # Offset: 8656
    000021d2: 	movq	0xc0(%rsp), %rax
    000021da: 	leaq	0x1(%rax), %rsi
    000021de: 	callq	_ZdlPvm@PLT # Offset: 8670
.Ltmp1113:
    000021e3: 	leaq	DATAat0x1c301(%rip), %rdx
    000021ea: 	movq	%r14, %rsi
    000021ed: 	movq	%r12, %rdi
    000021f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8688
    000021f5: 	callq	clock@PLT # Offset: 8693
    000021fa: 	movl	iterations(%rip), %edx
    00002200: 	movq	%rax, start_time(%rip)
    00002207: 	testl	%edx, %edx
    00002209: 	jle	.Ltmp1114 # Offset: 8713
    0000220f: 	movsd	DATAat0x1c378(%rip), %xmm5
    00002217: 	movq	DATAat0x1c3b0(%rip), %xmm6
    0000221f: 	pxor	%xmm3, %xmm3
    00002223: 	xorl	%ebx, %ebx
    00002225: 	movsd	DATAat0x1c3a8(%rip), %xmm4
    0000222d: 	movss	DATAat0x1c3c0(%rip), %xmm7
    00002235: 	movss	%xmm3, 0x28(%rsp)
    0000223b: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00002242: 	movaps	%xmm7, 0x30(%rsp)
    00002247: 	movsd	%xmm5, 0x40(%rsp)
    0000224d: 	movaps	%xmm6, 0x10(%rsp)
    00002252: 	movsd	%xmm4, 0x20(%rsp)
    00002258: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1118:
    00002260: 	movl	$0x1f40, %eax
    00002265: 	pxor	%xmm0, %xmm0
    00002269: 	nopl	(%rax) # Size: 7
.Ltmp1115:
    00002270: 	addss	0xc(%rsp), %xmm0
    00002276: 	subl	$0x1, %eax
    00002279: 	jne	.Ltmp1115 # Offset: 8825
    0000227b: 	pxor	%xmm2, %xmm2
    0000227f: 	movaps	0x30(%rsp), %xmm7
    00002284: 	movaps	%xmm0, %xmm1
    00002287: 	cvtsi2ssl	init_value(%rip), %xmm2
    0000228f: 	mulss	0x50(%rsp), %xmm2
    00002295: 	andps	%xmm0, %xmm7
    00002298: 	subss	%xmm2, %xmm1
    0000229c: 	pxor	%xmm2, %xmm2
    000022a0: 	cvtss2sd	%xmm7, %xmm2
    000022a4: 	comisd	0x40(%rsp), %xmm2
    000022aa: 	jbe	.Ltmp1116 # Offset: 8874
    000022ac: 	divss	%xmm0, %xmm1
.Ltmp1116:
    000022b0: 	movsd	0x20(%rsp), %xmm5
    000022b6: 	cvtss2sd	%xmm1, %xmm1
    000022ba: 	andpd	0x10(%rsp), %xmm1
    000022c0: 	comisd	%xmm1, %xmm5
    000022c4: 	jbe	.Ltmp1117 # Offset: 8900
.Ltmp1134:
    000022ca: 	addl	$0x1, %ebx
    000022cd: 	cmpl	%edx, %ebx
    000022cf: 	jl	.Ltmp1118 # Offset: 8911
.Ltmp1114:
    000022d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000022d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000022df: 	subq	$0x20, %rax
    000022e3: 	cmpq	%rax, %rbx
    000022e6: 	je	.Ltmp1119 # Offset: 8934
    000022ec: 	leaq	0x10(%rbx), %rdi
    000022f0: 	movq	0xb8(%rsp), %r13
    000022f8: 	movq	%rdi, (%rbx)
    000022fb: 	movq	0xb0(%rsp), %rbp
    00002303: 	movq	%rbp, %rax
    00002306: 	addq	%r13, %rax
    00002309: 	je	.Ltmp1120 # Offset: 8969
    0000230b: 	testq	%rbp, %rbp
    0000230e: 	je	.Ltmp1121 # Offset: 8974
.Ltmp1120:
    00002314: 	movq	%r13, 0x70(%rsp)
    00002319: 	cmpq	$0xf, %r13
    0000231d: 	ja	.Ltmp1122 # Offset: 8989
    00002323: 	cmpq	$0x1, %r13
    00002327: 	jne	.Ltmp1123 # Offset: 8999
    0000232d: 	movzbl	(%rbp), %eax
    00002331: 	movb	%al, 0x10(%rbx)
.Ltmp1168:
    00002334: 	movq	%r13, 0x8(%rbx)
    00002338: 	movb	$0x0, (%rdi,%r13)
    0000233d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002344: 	addq	$0x20, %rax
    00002348: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1165:
    0000234f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002356: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000235d: 	je	.Ltmp1124 # Offset: 9053
.Ltmp1148:
    00002363: 	movq	-0x20(%rax), %rbp
    00002367: 	callq	clock@PLT # Offset: 9063
    0000236c: 	pxor	%xmm0, %xmm0
    00002370: 	movq	%rax, end_time(%rip)
    00002377: 	movq	%rbp, %rdi
    0000237a: 	subq	start_time(%rip), %rax
    00002381: 	cvtsi2sd	%rax, %xmm0
    00002386: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000238e: 	callq	_Z13record_resultdPKc # Offset: 9102
    00002393: 	movq	0xb0(%rsp), %rdi
    0000239b: 	cmpq	0x48(%rsp), %rdi
    000023a0: 	je	.Ltmp1125 # Offset: 9120
    000023a2: 	movq	0xc0(%rsp), %rax
    000023aa: 	leaq	0x1(%rax), %rsi
    000023ae: 	callq	_ZdlPvm@PLT # Offset: 9134
.Ltmp1125:
    000023b3: 	leaq	DATAat0x1c31b(%rip), %rdx
    000023ba: 	movq	%r14, %rsi
    000023bd: 	movq	%r12, %rdi
    000023c0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9152
    000023c5: 	movl	iterations(%rip), %edx
    000023cb: 	xorl	%r8d, %r8d
    000023ce: 	xorl	%ecx, %ecx
    000023d0: 	movl	$0x1f40, %esi
    000023d5: 	movq	0xb0(%rsp), %rdi
    000023dd: 	callq	_Z9summarizePKciiii # Offset: 9181
    000023e2: 	movq	0xb0(%rsp), %rdi
    000023ea: 	cmpq	0x48(%rsp), %rdi
    000023ef: 	je	.Ltmp1126 # Offset: 9199
    000023f1: 	movq	0xc0(%rsp), %rax
    000023f9: 	leaq	0x1(%rax), %rsi
    000023fd: 	callq	_ZdlPvm@PLT # Offset: 9213
.Ltmp1126:
    00002402: 	movq	0x90(%rsp), %rdi
    0000240a: 	cmpq	0x68(%rsp), %rdi
    0000240f: 	je	.Ltmp1127 # Offset: 9231
    00002411: 	movq	0xa0(%rsp), %rax
    00002419: 	leaq	0x1(%rax), %rsi
    0000241d: 	callq	_ZdlPvm@PLT # Offset: 9245
.Ltmp1127:
    00002422: 	movq	0x8038(%rsp), %rax
    0000242a: 	subq	%fs:0x28, %rax
    00002433: 	jne	.Ltmp1128 # Offset: 9267
    00002439: 	addq	$0x8048, %rsp
    00002440: 	popq	%rbx
    00002441: 	popq	%rbp
    00002442: 	popq	%r12
    00002444: 	popq	%r13
    00002446: 	popq	%r14
    00002448: 	popq	%r15
    0000244a: 	retq # Offset: 9290
    0000244b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1040:
    00002450: 	movq	0xb0(%rsp), %rdx
    00002458: 	movq	%rbp, %rsi
    0000245b: 	movl	$0x1, %edi
    00002460: 	xorl	%eax, %eax
    00002462: 	callq	__printf_chk@PLT # Offset: 9314
    00002467: 	movl	iterations(%rip), %edx
    0000246d: 	jmp	.Ltmp1129 # Offset: 9325
    00002472: 	nopw	(%rax,%rax) # Size: 6
.Ltmp960:
    00002478: 	subss	DATAat0x1c3d0(%rip), %xmm0
    00002480: 	cvttss2si	%xmm0, %rcx
    00002485: 	btcq	$0x3f, %rcx
    0000248a: 	jmp	.Ltmp1130 # Offset: 9354
    0000248f: 	nop # Size: 1
.Ltmp959:
    00002490: 	movaps	%xmm3, %xmm0
    00002493: 	subss	DATAat0x1c3d0(%rip), %xmm0
    0000249b: 	cvttss2si	%xmm0, %rcx
    000024a0: 	btcq	$0x3f, %rcx
    000024a5: 	jmp	.Ltmp1131 # Offset: 9381
    000024aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp958:
    000024b0: 	movaps	%xmm2, %xmm0
    000024b3: 	subss	DATAat0x1c3d0(%rip), %xmm0
    000024bb: 	cvttss2si	%xmm0, %rcx
    000024c0: 	btcq	$0x3f, %rcx
    000024c5: 	jmp	.Ltmp1132 # Offset: 9413
.Ltmp1045:
    000024ca: 	movq	0x60(%rsp), %rsi
    000024cf: 	xorl	%edx, %edx
    000024d1: 	movq	%rbx, %rdi
    000024d4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9428
    000024d9: 	movq	%rax, (%rbx)
    000024dc: 	movq	%rax, %rdi
    000024df: 	movq	0x70(%rsp), %rax
    000024e4: 	movq	%rax, 0x10(%rbx)
.Ltmp1172:
    000024e8: 	movq	%r13, %rdx
    000024eb: 	movq	%rbp, %rsi
    000024ee: 	callq	memcpy@PLT # Offset: 9454
    000024f3: 	movq	0x70(%rsp), %r13
    000024f8: 	movq	(%rbx), %rdi
    000024fb: 	jmp	.Ltmp1133 # Offset: 9467
.Ltmp1117:
    00002500: 	movq	0xb0(%rsp), %rdx
    00002508: 	movq	%rbp, %rsi
    0000250b: 	movl	$0x1, %edi
    00002510: 	xorl	%eax, %eax
    00002512: 	callq	__printf_chk@PLT # Offset: 9490
    00002517: 	movl	iterations(%rip), %edx
    0000251d: 	jmp	.Ltmp1134 # Offset: 9501
    00002522: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1105:
    00002528: 	movq	0xb0(%rsp), %rdx
    00002530: 	movq	%rbp, %rsi
    00002533: 	movl	$0x1, %edi
    00002538: 	xorl	%eax, %eax
    0000253a: 	callq	__printf_chk@PLT # Offset: 9530
    0000253f: 	movl	iterations(%rip), %edx
    00002545: 	jmp	.Ltmp1135 # Offset: 9541
    0000254a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1093:
    00002550: 	movq	0xb0(%rsp), %rdx
    00002558: 	movq	%rbp, %rsi
    0000255b: 	movl	$0x1, %edi
    00002560: 	xorl	%eax, %eax
    00002562: 	callq	__printf_chk@PLT # Offset: 9570
    00002567: 	movl	iterations(%rip), %edx
    0000256d: 	jmp	.Ltmp1136 # Offset: 9581
    00002572: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1076:
    00002578: 	movq	0xb0(%rsp), %rdx
    00002580: 	movq	%r13, %rsi
    00002583: 	movl	$0x1, %edi
    00002588: 	xorl	%eax, %eax
    0000258a: 	callq	__printf_chk@PLT # Offset: 9610
    0000258f: 	movl	iterations(%rip), %edx
    00002595: 	jmp	.Ltmp1137 # Offset: 9621
    0000259a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1064:
    000025a0: 	movq	0xb0(%rsp), %rdx
    000025a8: 	movq	%r13, %rsi
    000025ab: 	movl	$0x1, %edi
    000025b0: 	xorl	%eax, %eax
    000025b2: 	callq	__printf_chk@PLT # Offset: 9650
    000025b7: 	movl	iterations(%rip), %edx
    000025bd: 	jmp	.Ltmp1138 # Offset: 9661
    000025c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1052:
    000025c8: 	movq	0xb0(%rsp), %rdx
    000025d0: 	movq	%rbp, %rsi
    000025d3: 	movl	$0x1, %edi
    000025d8: 	xorl	%eax, %eax
    000025da: 	callq	__printf_chk@PLT # Offset: 9690
    000025df: 	movl	iterations(%rip), %edx
    000025e5: 	jmp	.Ltmp1139 # Offset: 9701
    000025ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1058:
    000025f0: 	movq	0xb0(%rsp), %rdx
    000025f8: 	movq	%r13, %rsi
    000025fb: 	movl	$0x1, %edi
    00002600: 	xorl	%eax, %eax
    00002602: 	callq	__printf_chk@PLT # Offset: 9730
    00002607: 	addl	$0x1, %ebp
    0000260a: 	cmpl	iterations(%rip), %ebp
    00002610: 	jge	.Ltmp1056 # Offset: 9744
    00002616: 	movsd	0x20(%rsp), %xmm3
    0000261c: 	comisd	0x40(%rsp), %xmm3
    00002622: 	ja	.Ltmp1056 # Offset: 9762
    00002628: 	jmp	.Ltmp1140 # Offset: 9768
    0000262d: 	nopl	(%rax) # Size: 3
.Ltmp1082:
    00002630: 	movq	0xb0(%rsp), %rdx
    00002638: 	movq	%rbp, %rsi
    0000263b: 	movl	$0x1, %edi
    00002640: 	xorl	%eax, %eax
    00002642: 	callq	__printf_chk@PLT # Offset: 9794
    00002647: 	addl	$0x1, %ebx
    0000264a: 	cmpl	iterations(%rip), %ebx
    00002650: 	jge	.Ltmp1080 # Offset: 9808
    00002656: 	movsd	0x20(%rsp), %xmm4
    0000265c: 	comisd	0x40(%rsp), %xmm4
    00002662: 	ja	.Ltmp1080 # Offset: 9826
    00002668: 	movapd	%xmm4, %xmm7
    0000266c: 	jmp	.Ltmp1141 # Offset: 9836
.Ltmp1057:
    00002671: 	movsd	DATAat0x1c3a8(%rip), %xmm4
    00002679: 	movq	DATAat0x1c3b0(%rip), %xmm7
    00002681: 	leaq	DATAat0x1c1c8(%rip), %r13
    00002688: 	movaps	%xmm7, 0x10(%rsp)
    0000268d: 	movapd	%xmm4, %xmm5
    00002691: 	movsd	%xmm4, 0x20(%rsp)
.Ltmp1142:
    00002697: 	pxor	%xmm1, %xmm1
    0000269b: 	movss	0x28(%rsp), %xmm3
    000026a1: 	cvtsi2ssl	init_value(%rip), %xmm1
    000026a9: 	mulss	0x50(%rsp), %xmm1
    000026af: 	movaps	%xmm3, %xmm0
    000026b2: 	subss	%xmm1, %xmm0
    000026b6: 	divss	%xmm3, %xmm0
    000026ba: 	cvtss2sd	%xmm0, %xmm0
    000026be: 	andpd	0x10(%rsp), %xmm0
    000026c4: 	comisd	%xmm0, %xmm5
    000026c8: 	movsd	%xmm0, 0x40(%rsp)
    000026ce: 	ja	.Ltmp1056 # Offset: 9934
    000026d4: 	movq	0xb0(%rsp), %rdx
    000026dc: 	movq	%r13, %rsi
    000026df: 	movl	$0x1, %edi
    000026e4: 	xorl	%eax, %eax
    000026e6: 	callq	__printf_chk@PLT # Offset: 9958
    000026eb: 	addl	$0x1, %ebp
    000026ee: 	cmpl	iterations(%rip), %ebp
    000026f4: 	jge	.Ltmp1056 # Offset: 9972
    000026fa: 	movsd	0x20(%rsp), %xmm6
    00002700: 	comisd	0x40(%rsp), %xmm6
    00002706: 	ja	.Ltmp1056 # Offset: 9990
    0000270c: 	movapd	%xmm6, %xmm5
    00002710: 	jmp	.Ltmp1142 # Offset: 10000
.Ltmp1081:
    00002712: 	movq	DATAat0x1c3b0(%rip), %xmm6
    0000271a: 	movsd	DATAat0x1c3a8(%rip), %xmm7
    00002722: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00002729: 	movaps	%xmm6, 0x10(%rsp)
    0000272e: 	movsd	%xmm7, 0x20(%rsp)
.Ltmp1143:
    00002734: 	pxor	%xmm1, %xmm1
    00002738: 	movss	0x28(%rsp), %xmm4
    0000273e: 	cvtsi2ssl	init_value(%rip), %xmm1
    00002746: 	mulss	0x50(%rsp), %xmm1
    0000274c: 	movaps	%xmm4, %xmm0
    0000274f: 	subss	%xmm1, %xmm0
    00002753: 	divss	%xmm4, %xmm0
    00002757: 	cvtss2sd	%xmm0, %xmm0
    0000275b: 	andpd	0x10(%rsp), %xmm0
    00002761: 	comisd	%xmm0, %xmm7
    00002765: 	movsd	%xmm0, 0x40(%rsp)
    0000276b: 	ja	.Ltmp1080 # Offset: 10091
    00002771: 	movq	0xb0(%rsp), %rdx
    00002779: 	movq	%rbp, %rsi
    0000277c: 	movl	$0x1, %edi
    00002781: 	xorl	%eax, %eax
    00002783: 	callq	__printf_chk@PLT # Offset: 10115
    00002788: 	addl	$0x1, %ebx
    0000278b: 	cmpl	iterations(%rip), %ebx
    00002791: 	jge	.Ltmp1080 # Offset: 10129
    00002797: 	movsd	0x20(%rsp), %xmm7
    0000279d: 	comisd	0x40(%rsp), %xmm7
    000027a3: 	ja	.Ltmp1080 # Offset: 10147
    000027a9: 	jmp	.Ltmp1143 # Offset: 10153
.Ltmp1042:
    000027ab: 	movq	%r12, %rsi
    000027ae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000027b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10165
    000027ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027c1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000027c8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027cf: 	jne	.Ltmp1144 # Offset: 10191
.Ltmp1047:
    000027d5: 	movq	-0x8(%rdx), %rax
    000027d9: 	addq	$0x200, %rax
    000027df: 	jmp	.Ltmp1144 # Offset: 10207
.Ltmp1035:
    000027e4: 	movq	-0x8(%rdx), %rax
    000027e8: 	addq	$0x200, %rax
    000027ee: 	jmp	.Ltmp1145 # Offset: 10222
.Ltmp994:
    000027f3: 	movq	-0x8(%rdx), %rax
    000027f7: 	addq	$0x200, %rax
    000027fd: 	jmp	.Ltmp1146 # Offset: 10237
.Ltmp987:
    00002802: 	movq	-0x8(%rdx), %rax
    00002806: 	addq	$0x200, %rax
    0000280c: 	jmp	.Ltmp1147 # Offset: 10252
.Ltmp1124:
    00002811: 	movq	-0x8(%rdx), %rax
    00002815: 	addq	$0x200, %rax
    0000281b: 	jmp	.Ltmp1148 # Offset: 10267
.Ltmp1027:
    00002820: 	movq	-0x8(%rdx), %rax
    00002824: 	addq	$0x200, %rax
    0000282a: 	jmp	.Ltmp1149 # Offset: 10282
.Ltmp1020:
    0000282f: 	movq	-0x8(%rdx), %rax
    00002833: 	addq	$0x200, %rax
    00002839: 	jmp	.Ltmp1150 # Offset: 10297
.Ltmp1013:
    0000283e: 	movq	-0x8(%rdx), %rax
    00002842: 	addq	$0x200, %rax
    00002848: 	jmp	.Ltmp1151 # Offset: 10312
.Ltmp1066:
    0000284d: 	movq	%r12, %rsi
    00002850: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002857: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10327
    0000285c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002863: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000286a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002871: 	jne	.Ltmp1152 # Offset: 10353
.Ltmp1071:
    00002877: 	movq	-0x8(%rdx), %rax
    0000287b: 	addq	$0x200, %rax
    00002881: 	jmp	.Ltmp1152 # Offset: 10369
.Ltmp1083:
    00002886: 	movq	%r12, %rsi
    00002889: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002890: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10384
    00002895: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000289c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000028a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028aa: 	jne	.Ltmp1153 # Offset: 10410
.Ltmp1088:
    000028b0: 	movq	-0x8(%rdx), %rax
    000028b4: 	addq	$0x200, %rax
    000028ba: 	jmp	.Ltmp1153 # Offset: 10426
.Ltmp1078:
    000028bf: 	movq	-0x8(%rdx), %rax
    000028c3: 	addq	$0x200, %rax
    000028c9: 	jmp	.Ltmp1154 # Offset: 10441
.Ltmp1100:
    000028ce: 	movq	-0x8(%rdx), %rax
    000028d2: 	addq	$0x200, %rax
    000028d8: 	jmp	.Ltmp1155 # Offset: 10456
.Ltmp1095:
    000028dd: 	movq	%r12, %rsi
    000028e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000028e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10471
    000028ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028f3: 	jmp	.Ltmp1156 # Offset: 10483
.Ltmp1059:
    000028f8: 	movq	-0x8(%rdx), %rax
    000028fc: 	addq	$0x200, %rax
    00002902: 	jmp	.Ltmp1157 # Offset: 10498
.Ltmp1054:
    00002907: 	movq	-0x8(%rdx), %rax
    0000290b: 	addq	$0x200, %rax
    00002911: 	jmp	.Ltmp1158 # Offset: 10513
.Ltmp980:
    00002916: 	movq	-0x8(%rdx), %rax
    0000291a: 	addq	$0x200, %rax
    00002920: 	jmp	.Ltmp1159 # Offset: 10528
.Ltmp973:
    00002925: 	movq	-0x8(%rdx), %rax
    00002929: 	addq	$0x200, %rax
    0000292f: 	jmp	.Ltmp1160 # Offset: 10543
.Ltmp966:
    00002934: 	movq	-0x8(%rdx), %rax
    00002938: 	addq	$0x200, %rax
    0000293e: 	jmp	.Ltmp1161 # Offset: 10558
.Ltmp1112:
    00002943: 	movq	-0x8(%rdx), %rax
    00002947: 	addq	$0x200, %rax
    0000294d: 	jmp	.Ltmp1162 # Offset: 10573
.Ltmp1107:
    00002952: 	movq	%r12, %rsi
    00002955: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000295c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10588
    00002961: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002968: 	jmp	.Ltmp1163 # Offset: 10600
.Ltmp1001:
    0000296d: 	movq	-0x8(%rdx), %rax
    00002971: 	addq	$0x200, %rax
    00002977: 	jmp	.Ltmp1164 # Offset: 10615
.Ltmp1119:
    0000297c: 	movq	%r12, %rsi
    0000297f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002986: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10630
    0000298b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002992: 	jmp	.Ltmp1165 # Offset: 10642
.Ltmp1111:
    00002997: 	testq	%r13, %r13
    0000299a: 	je	.Ltmp1166 # Offset: 10650
    000029a0: 	jmp	.Ltmp1167 # Offset: 10656
    000029a5: 	nopl	(%rax) # Size: 3
.Ltmp1123:
    000029a8: 	testq	%r13, %r13
    000029ab: 	je	.Ltmp1168 # Offset: 10667
    000029b1: 	jmp	.Ltmp1169 # Offset: 10673
    000029b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1099:
    000029c0: 	testq	%r13, %r13
    000029c3: 	je	.Ltmp1170 # Offset: 10691
    000029c9: 	jmp	.Ltmp1171 # Offset: 10697
    000029ce: 	nop # Size: 2
.Ltmp1046:
    000029d0: 	testq	%r13, %r13
    000029d3: 	je	.Ltmp1133 # Offset: 10707
    000029d9: 	jmp	.Ltmp1172 # Offset: 10713
    000029de: 	nop # Size: 2
.Ltmp1087:
    000029e0: 	testq	%r13, %r13
    000029e3: 	je	.Ltmp1173 # Offset: 10723
    000029e9: 	jmp	.Ltmp1174 # Offset: 10729
    000029eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1070:
    000029f0: 	testq	%r13, %r13
    000029f3: 	je	.Ltmp1175 # Offset: 10739
.Ltmp1176:
    000029f9: 	movq	%r13, %rdx
    000029fc: 	movq	%r15, %rsi
    000029ff: 	callq	memcpy@PLT # Offset: 10751
    00002a04: 	movq	0x70(%rsp), %r13
    00002a09: 	movq	(%rbp), %rdi
    00002a0d: 	jmp	.Ltmp1175 # Offset: 10765
.Ltmp1086:
    00002a12: 	movq	0x60(%rsp), %rsi
    00002a17: 	xorl	%edx, %edx
    00002a19: 	movq	%rbx, %rdi
    00002a1c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10780
    00002a21: 	movq	%rax, (%rbx)
    00002a24: 	movq	%rax, %rdi
    00002a27: 	movq	0x70(%rsp), %rax
    00002a2c: 	movq	%rax, 0x10(%rbx)
.Ltmp1174:
    00002a30: 	movq	%r13, %rdx
    00002a33: 	movq	%rbp, %rsi
    00002a36: 	callq	memcpy@PLT # Offset: 10806
    00002a3b: 	movq	0x70(%rsp), %r13
    00002a40: 	movq	(%rbx), %rdi
    00002a43: 	jmp	.Ltmp1173 # Offset: 10819
.Ltmp1122:
    00002a48: 	movq	0x60(%rsp), %rsi
    00002a4d: 	xorl	%edx, %edx
    00002a4f: 	movq	%rbx, %rdi
    00002a52: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10834
    00002a57: 	movq	%rax, (%rbx)
    00002a5a: 	movq	%rax, %rdi
    00002a5d: 	movq	0x70(%rsp), %rax
    00002a62: 	movq	%rax, 0x10(%rbx)
.Ltmp1169:
    00002a66: 	movq	%r13, %rdx
    00002a69: 	movq	%rbp, %rsi
    00002a6c: 	callq	memcpy@PLT # Offset: 10860
    00002a71: 	movq	0x70(%rsp), %r13
    00002a76: 	movq	(%rbx), %rdi
    00002a79: 	jmp	.Ltmp1168 # Offset: 10873
.Ltmp1110:
    00002a7e: 	movq	0x60(%rsp), %rsi
    00002a83: 	xorl	%edx, %edx
    00002a85: 	movq	%rbx, %rdi
    00002a88: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10888
    00002a8d: 	movq	%rax, (%rbx)
    00002a90: 	movq	%rax, %rdi
    00002a93: 	movq	0x70(%rsp), %rax
    00002a98: 	movq	%rax, 0x10(%rbx)
.Ltmp1167:
    00002a9c: 	movq	%r13, %rdx
    00002a9f: 	movq	%rbp, %rsi
    00002aa2: 	callq	memcpy@PLT # Offset: 10914
    00002aa7: 	movq	0x70(%rsp), %r13
    00002aac: 	movq	(%rbx), %rdi
    00002aaf: 	jmp	.Ltmp1166 # Offset: 10927
.Ltmp1098:
    00002ab4: 	movq	0x60(%rsp), %rsi
    00002ab9: 	xorl	%edx, %edx
    00002abb: 	movq	%rbx, %rdi
    00002abe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10942
    00002ac3: 	movq	%rax, (%rbx)
    00002ac6: 	movq	%rax, %rdi
    00002ac9: 	movq	0x70(%rsp), %rax
    00002ace: 	movq	%rax, 0x10(%rbx)
.Ltmp1171:
    00002ad2: 	movq	%r13, %rdx
    00002ad5: 	movq	%rbp, %rsi
    00002ad8: 	callq	memcpy@PLT # Offset: 10968
    00002add: 	movq	0x70(%rsp), %r13
    00002ae2: 	movq	(%rbx), %rdi
    00002ae5: 	jmp	.Ltmp1170 # Offset: 10981
.Ltmp1069:
    00002aea: 	movq	0x60(%rsp), %rsi
    00002aef: 	xorl	%edx, %edx
    00002af1: 	movq	%rbp, %rdi
    00002af4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10996
    00002af9: 	movq	%rax, (%rbp)
    00002afd: 	movq	%rax, %rdi
    00002b00: 	movq	0x70(%rsp), %rax
    00002b05: 	movq	%rax, 0x10(%rbp)
    00002b09: 	jmp	.Ltmp1176 # Offset: 11017
.Ltmp1068:
    00002b0e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b15: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11029
.Ltmp1085:
    00002b1a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b21: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11041
.Ltmp1097:
    00002b26: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b2d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11053
.Ltmp1109:
    00002b32: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b39: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11065
.Ltmp1121:
    00002b3e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b45: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11077
.Ltmp1128:
    00002b4a: 	callq	__stack_chk_fail@PLT # Offset: 11082
.Ltmp1044:
    00002b4f: 	leaq	DATAat0x1c158(%rip), %rdi
    00002b56: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11094
    00002b5b: 	endbr64
.Ltmp1178:
    00002b5f: 	movq	%rax, %rbp
    00002b62: 	jmp	.Ltmp1177 # Offset: 11106
    00002b64: 	endbr64
    00002b68: 	jmp	.Ltmp1178 # Offset: 11112
    00002b6a: 	endbr64
    00002b6e: 	jmp	.Ltmp1178 # Offset: 11118
    00002b70: 	endbr64
    00002b74: 	jmp	.Ltmp1178 # Offset: 11124
    00002b76: 	endbr64
    00002b7a: 	movq	%rax, %rbp
    00002b7d: 	jmp	.Ltmp1179 # Offset: 11133
.Ltmp1177:
    00002b7f: 	movq	0xb0(%rsp), %rdi
    00002b87: 	cmpq	0x48(%rsp), %rdi
    00002b8c: 	je	.Ltmp1179 # Offset: 11148
.Ltmp1182:
    00002b8e: 	movq	0xc0(%rsp), %rax
    00002b96: 	leaq	0x1(%rax), %rsi
    00002b9a: 	callq	_ZdlPvm@PLT # Offset: 11162
.Ltmp1179:
    00002b9f: 	movq	0x90(%rsp), %rdi
    00002ba7: 	cmpq	0x68(%rsp), %rdi
    00002bac: 	je	.Ltmp1180 # Offset: 11180
    00002bae: 	movq	0xa0(%rsp), %rax
    00002bb6: 	leaq	0x1(%rax), %rsi
    00002bba: 	callq	_ZdlPvm@PLT # Offset: 11194
.Ltmp1180:
    00002bbf: 	movq	%rbp, %rdi
    00002bc2: 	callq	_Unwind_Resume@PLT # Offset: 11202
    00002bc7: 	endbr64
    00002bcb: 	jmp	.Ltmp1178 # Offset: 11211
    00002bcd: 	endbr64
    00002bd1: 	jmp	.Ltmp1178 # Offset: 11217
    00002bd3: 	endbr64
    00002bd7: 	jmp	.Ltmp1178 # Offset: 11223
    00002bd9: 	endbr64
    00002bdd: 	jmp	.Ltmp1178 # Offset: 11229
    00002bdf: 	endbr64
    00002be3: 	jmp	.Ltmp1178 # Offset: 11235
    00002be8: 	endbr64
    00002bec: 	jmp	.Ltmp1178 # Offset: 11244
    00002bf1: 	endbr64
    00002bf5: 	jmp	.Ltmp1178 # Offset: 11253
    00002bfa: 	endbr64
    00002bfe: 	jmp	.Ltmp1178 # Offset: 11262
    00002c03: 	endbr64
    00002c07: 	jmp	.Ltmp1178 # Offset: 11271
    00002c0c: 	endbr64
    00002c10: 	jmp	.Ltmp1178 # Offset: 11280
    00002c15: 	endbr64
    00002c19: 	movq	%rax, %rbp
    00002c1c: 	jmp	.Ltmp1181 # Offset: 11292
    00002c1e: 	endbr64
    00002c22: 	jmp	.Ltmp1178 # Offset: 11298
.Ltmp1181:
    00002c27: 	movq	0xb0(%rsp), %rdi
    00002c2f: 	leaq	0xc0(%rsp), %rax
    00002c37: 	cmpq	%rax, %rdi
    00002c3a: 	jne	.Ltmp1182 # Offset: 11322
    00002c40: 	jmp	.Ltmp1179 # Offset: 11328
    00002c45: 	endbr64
    00002c49: 	jmp	.Ltmp1178 # Offset: 11337
    00002c4e: 	endbr64
    00002c52: 	jmp	.Ltmp1178 # Offset: 11346
    00002c57: 	endbr64
    00002c5b: 	jmp	.Ltmp1178 # Offset: 11355
    00002c60: 	endbr64
    00002c64: 	jmp	.Ltmp1178 # Offset: 11364
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIfEvT_"

Binary Function "_Z11TestOneTypeIaEvT_" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0xe870
  Size        : 0x22a2
  MaxSize     : 0x22b0
  Offset      : 0xe870
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIaEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x258, %rsp
    0000002d: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000035: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003d: 	movq	%fs:0x28, %rax
    00000046: 	movq	%rax, 0x2248(%rsp)
    0000004e: 	xorl	%eax, %eax
    00000050: 	movl	%edi, %ebx
    00000052: 	leaq	0x100(%rsp), %rax
    0000005a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000061: 	movq	%rax, %xmm0
    00000066: 	leaq	0x2e0(%rsp), %rax
    0000006e: 	movl	$0x38746e69, 0xa0(%rsp)
    00000079: 	leaq	0x300(%rsp), %r13
    00000081: 	movq	%rax, %xmm2
    00000086: 	leaq	0x1f0(%rsp), %rax
    0000008e: 	movq	$0x6, 0x98(%rsp)
    0000009a: 	leaq	0xb0(%rsp), %rbp
    000000a2: 	movq	%rax, %xmm1
    000000a7: 	punpcklqdq	%xmm0, %xmm2
    000000ab: 	movaps	%xmm3, 0x70(%rsp)
    000000b0: 	leaq	0xa0(%rsp), %rax
    000000b8: 	movq	%rax, 0x18(%rsp)
    000000bd: 	punpcklqdq	%xmm0, %xmm1
    000000c1: 	leaq	0x90(%rsp), %r12
    000000c9: 	movq	%rax, 0x90(%rsp)
    000000d1: 	movl	$0x745f, %eax
    000000d6: 	movw	%ax, 0xa4(%rsp)
    000000de: 	leaq	0x70(%rsp), %rax
    000000e3: 	movq	%rax, %rsi
    000000e6: 	movq	%rax, 0x28(%rsp)
    000000eb: 	movaps	%xmm2, 0x30(%rsp)
    000000f0: 	movaps	%xmm1, (%rsp)
    000000f4: 	movb	$0x0, 0xa6(%rsp)
    000000fc: 	movaps	%xmm4, 0x80(%rsp)
    00000104: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 260
    00000109: 	movl	$0x3e8, %ecx
    0000010e: 	movq	%r13, %rdi
    00000111: 	leal	0x2(%rbx), %esi
    00000114: 	movl	init_value(%rip), %r11d
    0000011b: 	movabsq	$0x101010101010101, %r9
    00000125: 	movzbl	%r11b, %r10d
    00000129: 	movl	%r11d, 0x20(%rsp)
    0000012e: 	movq	%r10, %r8
    00000131: 	movb	%r11b, 0x47(%rsp)
    00000136: 	imulq	%r9, %r8
    0000013a: 	movq	%r8, %rax
    0000013d: 	movq	%r8, 0x2f0(%rsp)
    00000145: 	rep		stosq	%rax, %es:(%rdi)
    00000148: 	leaq	0x50(%rsp), %rax
    0000014d: 	movsbq	%bl, %rdi
    00000151: 	movabsq	$-0x7777777777777777, %rcx
    0000015b: 	movq	%rax, 0x78(%rsp)
    00000160: 	leaq	0x60(%rsp), %rax
    00000165: 	movq	%rax, 0x58(%rsp)
    0000016a: 	leaq	0x47(%rsp), %rax
    0000016f: 	movq	%rax, 0x68(%rsp)
    00000174: 	movq	%rdi, %rax
    00000177: 	mulq	%rcx
    0000017a: 	movq	%rdx, %rax
    0000017d: 	andq	$-0x10, %rdx
    00000181: 	shrq	$0x4, %rax
    00000185: 	subq	%rax, %rdx
    00000188: 	leaq	(%rdx,%rdx), %rax
    0000018c: 	subq	%rax, %rdi
    0000018f: 	movq	%r10, %rax
    00000192: 	mulq	%r9
    00000195: 	movq	%rdi, 0x10(%rsp)
    0000019a: 	movsbq	%sil, %rdi
    0000019e: 	movsbl	%sil, %esi
    000001a2: 	movq	%rax, 0x2e0(%rsp)
    000001aa: 	movzbl	%r11b, %eax
    000001ae: 	addq	%r8, %rdx
    000001b1: 	imull	$0x1010101, %eax, %eax
    000001b7: 	movq	%rdx, 0x2e8(%rsp)
    000001bf: 	movzbl	%r11b, %edx
    000001c3: 	movl	%eax, 0x2f8(%rsp)
    000001ca: 	movl	%r11d, %eax
    000001cd: 	shll	$0x8, %eax
    000001d0: 	addl	%edx, %eax
    000001d2: 	movw	%ax, 0x2fc(%rsp)
    000001da: 	movq	%rdi, %rax
    000001dd: 	mulq	%rcx
    000001e0: 	movq	%rdx, %rax
    000001e3: 	andq	$-0x10, %rdx
    000001e7: 	shrq	$0x4, %rax
    000001eb: 	subq	%rax, %rdx
    000001ee: 	movq	%rdi, %rax
    000001f1: 	movq	%rbp, %rdi
    000001f4: 	addq	%rdx, %rdx
    000001f7: 	subq	%rdx, %rax
    000001fa: 	movq	%rax, %xmm0
    000001ff: 	leal	(%rbx,%rbx), %eax
    00000202: 	movsbl	%al, %eax
    00000205: 	punpcklqdq	%xmm0, %xmm0
    00000209: 	cltd
    0000020a: 	movaps	%xmm0, 0x100(%rsp)
    00000212: 	idivl	%esi
    00000214: 	movaps	%xmm0, 0x110(%rsp)
    0000021c: 	movaps	%xmm0, 0x120(%rsp)
    00000224: 	movaps	%xmm0, 0x130(%rsp)
    0000022c: 	movaps	%xmm0, 0x140(%rsp)
    00000234: 	movaps	%xmm0, 0x150(%rsp)
    0000023c: 	movaps	%xmm0, 0x160(%rsp)
    00000244: 	movaps	%xmm0, 0x170(%rsp)
    0000024c: 	movaps	%xmm0, 0x180(%rsp)
    00000254: 	movaps	%xmm0, 0x190(%rsp)
    0000025c: 	movaps	%xmm0, 0x1a0(%rsp)
    00000264: 	movaps	%xmm0, 0x1b0(%rsp)
    0000026c: 	movaps	%xmm0, 0x1c0(%rsp)
    00000274: 	movaps	%xmm0, 0x1d0(%rsp)
    0000027c: 	movaps	%xmm0, 0x1e0(%rsp)
    00000284: 	leal	(%rbx,%rax), %esi
    00000287: 	movsbq	%sil, %rsi
    0000028b: 	movq	%rsi, %rax
    0000028e: 	mulq	%rcx
    00000291: 	movq	%rdx, %rax
    00000294: 	andq	$-0x10, %rdx
    00000298: 	shrq	$0x4, %rax
    0000029c: 	subq	%rax, %rdx
    0000029f: 	movq	%rsi, %rax
    000002a2: 	movq	%r12, %rsi
    000002a5: 	addq	%rdx, %rdx
    000002a8: 	subq	%rdx, %rax
    000002ab: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002b2: 	movq	%rax, %xmm0
    000002b7: 	punpcklqdq	%xmm0, %xmm0
    000002bb: 	movaps	%xmm0, 0x1f0(%rsp)
    000002c3: 	movaps	%xmm0, 0x200(%rsp)
    000002cb: 	movaps	%xmm0, 0x210(%rsp)
    000002d3: 	movaps	%xmm0, 0x220(%rsp)
    000002db: 	movaps	%xmm0, 0x230(%rsp)
    000002e3: 	movdqa	(%rsp), %xmm1
    000002e8: 	movdqa	0x30(%rsp), %xmm2
    000002ee: 	movaps	%xmm0, 0x240(%rsp)
    000002f6: 	movaps	%xmm0, 0x250(%rsp)
    000002fe: 	movaps	%xmm0, 0x260(%rsp)
    00000306: 	movaps	%xmm0, 0x270(%rsp)
    0000030e: 	movaps	%xmm0, 0x280(%rsp)
    00000316: 	movaps	%xmm0, 0x290(%rsp)
    0000031e: 	movaps	%xmm0, 0x2a0(%rsp)
    00000326: 	movaps	%xmm0, 0x2b0(%rsp)
    0000032e: 	movaps	%xmm0, 0x2c0(%rsp)
    00000336: 	movaps	%xmm0, 0x2d0(%rsp)
    0000033e: 	movaps	%xmm2, 0xd0(%rsp)
    00000346: 	movaps	%xmm1, 0xe0(%rsp)
    0000034e: 	movaps	%xmm1, 0xf0(%rsp)
    00000356: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 854
    0000035b: 	callq	clock@PLT # Offset: 859
    00000360: 	movl	iterations(%rip), %ecx
    00000366: 	xorl	%r14d, %r14d
    00000369: 	leaq	0x2240(%rsp), %rbx
    00000371: 	movq	%rax, start_time(%rip)
    00000378: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000037f: 	testl	%ecx, %ecx
    00000381: 	jle	.Ltmp1183 # Offset: 897
    00000383: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1186:
    00000388: 	movq	%r13, %rax
    0000038b: 	pxor	%xmm0, %xmm0
    0000038f: 	nop # Size: 1
.Ltmp1184:
    00000390: 	paddb	(%rax), %xmm0
    00000394: 	addq	$0x10, %rax
    00000398: 	cmpq	%rax, %rbx
    0000039b: 	jne	.Ltmp1184 # Offset: 923
    0000039d: 	movdqa	%xmm0, %xmm1
    000003a1: 	movzbl	init_value(%rip), %edx
    000003a8: 	psrldq	$0x8, %xmm1
    000003ad: 	paddb	%xmm1, %xmm0
    000003b1: 	pxor	%xmm1, %xmm1
    000003b5: 	shll	$0x6, %edx
    000003b8: 	psadbw	%xmm1, %xmm0
    000003bc: 	movd	%xmm0, %eax
    000003c0: 	cmpb	%al, %dl
    000003c2: 	je	.Ltmp1185 # Offset: 962
    000003c4: 	movq	0xb0(%rsp), %rdx
    000003cc: 	movq	%r15, %rsi
    000003cf: 	movl	$0x1, %edi
    000003d4: 	xorl	%eax, %eax
    000003d6: 	callq	__printf_chk@PLT # Offset: 982
    000003db: 	movl	iterations(%rip), %ecx
.Ltmp1185:
    000003e1: 	addl	$0x1, %r14d
    000003e5: 	cmpl	%ecx, %r14d
    000003e8: 	jl	.Ltmp1186 # Offset: 1000
.Ltmp1183:
    000003ea: 	movq	%rbp, %rsi
    000003ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1012
    000003f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000400: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000407: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000040e: 	je	.Ltmp1187 # Offset: 1038
.Ltmp1364:
    00000414: 	movq	-0x20(%rax), %r14
    00000418: 	callq	clock@PLT # Offset: 1048
    0000041d: 	pxor	%xmm0, %xmm0
    00000421: 	movq	%rax, end_time(%rip)
    00000428: 	movq	%r14, %rdi
    0000042b: 	subq	start_time(%rip), %rax
    00000432: 	cvtsi2sd	%rax, %xmm0
    00000437: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000043f: 	callq	_Z13record_resultdPKc # Offset: 1087
    00000444: 	movq	0xb0(%rsp), %rdi
    0000044c: 	leaq	0xc0(%rsp), %rax
    00000454: 	movq	%rax, (%rsp)
    00000458: 	cmpq	%rax, %rdi
    0000045b: 	je	.Ltmp1188 # Offset: 1115
    0000045d: 	movq	0xc0(%rsp), %rax
    00000465: 	leaq	0x1(%rax), %rsi
    00000469: 	callq	_ZdlPvm@PLT # Offset: 1129
.Ltmp1188:
    0000046e: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000475: 	movq	%r12, %rsi
    00000478: 	movq	%rbp, %rdi
    0000047b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1147
    00000480: 	callq	clock@PLT # Offset: 1152
    00000485: 	movl	iterations(%rip), %ecx
    0000048b: 	xorl	%r14d, %r14d
    0000048e: 	leaq	0x2240(%rsp), %rbx
    00000496: 	movq	%rax, start_time(%rip)
    0000049d: 	leaq	DATAat0x1c1c8(%rip), %r15
    000004a4: 	testl	%ecx, %ecx
    000004a6: 	jle	.Ltmp1189 # Offset: 1190
    000004a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1192:
    000004b0: 	movq	%r13, %rax
    000004b3: 	pxor	%xmm0, %xmm0
    000004b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1190:
    000004c0: 	paddb	(%rax), %xmm0
    000004c4: 	addq	$0x10, %rax
    000004c8: 	cmpq	%rbx, %rax
    000004cb: 	jne	.Ltmp1190 # Offset: 1227
    000004cd: 	movdqa	%xmm0, %xmm1
    000004d1: 	movzbl	init_value(%rip), %edx
    000004d8: 	psrldq	$0x8, %xmm1
    000004dd: 	paddb	%xmm1, %xmm0
    000004e1: 	pxor	%xmm1, %xmm1
    000004e5: 	shll	$0x6, %edx
    000004e8: 	psadbw	%xmm1, %xmm0
    000004ec: 	movd	%xmm0, %eax
    000004f0: 	cmpb	%al, %dl
    000004f2: 	je	.Ltmp1191 # Offset: 1266
    000004f4: 	movq	0xb0(%rsp), %rdx
    000004fc: 	movq	%r15, %rsi
    000004ff: 	movl	$0x1, %edi
    00000504: 	xorl	%eax, %eax
    00000506: 	callq	__printf_chk@PLT # Offset: 1286
    0000050b: 	movl	iterations(%rip), %ecx
.Ltmp1191:
    00000511: 	addl	$0x1, %r14d
    00000515: 	cmpl	%ecx, %r14d
    00000518: 	jl	.Ltmp1192 # Offset: 1304
.Ltmp1189:
    0000051a: 	movq	%rbp, %rsi
    0000051d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000524: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1316
    00000529: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000530: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000537: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000053e: 	je	.Ltmp1193 # Offset: 1342
.Ltmp1363:
    00000544: 	movq	-0x20(%rax), %r14
    00000548: 	callq	clock@PLT # Offset: 1352
    0000054d: 	pxor	%xmm0, %xmm0
    00000551: 	movq	%rax, end_time(%rip)
    00000558: 	movq	%r14, %rdi
    0000055b: 	subq	start_time(%rip), %rax
    00000562: 	cvtsi2sd	%rax, %xmm0
    00000567: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000056f: 	callq	_Z13record_resultdPKc # Offset: 1391
    00000574: 	movq	0xb0(%rsp), %rdi
    0000057c: 	cmpq	(%rsp), %rdi
    00000580: 	je	.Ltmp1194 # Offset: 1408
    00000582: 	movq	0xc0(%rsp), %rax
    0000058a: 	leaq	0x1(%rax), %rsi
    0000058e: 	callq	_ZdlPvm@PLT # Offset: 1422
.Ltmp1194:
    00000593: 	leaq	DATAat0x1c208(%rip), %rdx
    0000059a: 	movq	%r12, %rsi
    0000059d: 	movq	%rbp, %rdi
    000005a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1440
    000005a5: 	callq	clock@PLT # Offset: 1445
    000005aa: 	movl	iterations(%rip), %ecx
    000005b0: 	xorl	%r14d, %r14d
    000005b3: 	leaq	0x2240(%rsp), %rbx
    000005bb: 	movq	%rax, start_time(%rip)
    000005c2: 	leaq	DATAat0x1c1c8(%rip), %r15
    000005c9: 	testl	%ecx, %ecx
    000005cb: 	jle	.Ltmp1195 # Offset: 1483
    000005cd: 	nopl	(%rax) # Size: 3
.Ltmp1198:
    000005d0: 	movq	%r13, %rax
    000005d3: 	pxor	%xmm0, %xmm0
    000005d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1196:
    000005e0: 	paddb	(%rax), %xmm0
    000005e4: 	addq	$0x10, %rax
    000005e8: 	cmpq	%rbx, %rax
    000005eb: 	jne	.Ltmp1196 # Offset: 1515
    000005ed: 	movdqa	%xmm0, %xmm1
    000005f1: 	movzbl	init_value(%rip), %edx
    000005f8: 	psrldq	$0x8, %xmm1
    000005fd: 	paddb	%xmm1, %xmm0
    00000601: 	pxor	%xmm1, %xmm1
    00000605: 	shll	$0x6, %edx
    00000608: 	psadbw	%xmm1, %xmm0
    0000060c: 	movd	%xmm0, %eax
    00000610: 	cmpb	%al, %dl
    00000612: 	je	.Ltmp1197 # Offset: 1554
    00000614: 	movq	0xb0(%rsp), %rdx
    0000061c: 	movq	%r15, %rsi
    0000061f: 	movl	$0x1, %edi
    00000624: 	xorl	%eax, %eax
    00000626: 	callq	__printf_chk@PLT # Offset: 1574
    0000062b: 	movl	iterations(%rip), %ecx
.Ltmp1197:
    00000631: 	addl	$0x1, %r14d
    00000635: 	cmpl	%ecx, %r14d
    00000638: 	jl	.Ltmp1198 # Offset: 1592
.Ltmp1195:
    0000063a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000641: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000648: 	subq	$0x20, %rax
    0000064c: 	cmpq	%rax, %rbx
    0000064f: 	je	.Ltmp1199 # Offset: 1615
    00000655: 	leaq	0x10(%rbx), %rdi
    00000659: 	movq	0xb8(%rsp), %r14
    00000661: 	movq	%rdi, (%rbx)
    00000664: 	movq	0xb0(%rsp), %r15
    0000066c: 	movq	%r15, %rax
    0000066f: 	addq	%r14, %rax
    00000672: 	je	.Ltmp1200 # Offset: 1650
    00000674: 	testq	%r15, %r15
    00000677: 	je	.Ltmp1201 # Offset: 1655
.Ltmp1200:
    0000067d: 	movq	%r14, 0x48(%rsp)
    00000682: 	cmpq	$0xf, %r14
    00000686: 	ja	.Ltmp1202 # Offset: 1670
    0000068c: 	cmpq	$0x1, %r14
    00000690: 	jne	.Ltmp1203 # Offset: 1680
    00000696: 	movzbl	(%r15), %eax
    0000069a: 	movb	%al, 0x10(%rbx)
.Ltmp1328:
    0000069d: 	movq	%r14, 0x8(%rbx)
    000006a1: 	movb	$0x0, (%rdi,%r14)
    000006a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006ad: 	addq	$0x20, %rax
    000006b1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1362:
    000006b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006c6: 	je	.Ltmp1204 # Offset: 1734
.Ltmp1353:
    000006cc: 	movq	-0x20(%rax), %r14
    000006d0: 	callq	clock@PLT # Offset: 1744
    000006d5: 	pxor	%xmm0, %xmm0
    000006d9: 	movq	%rax, end_time(%rip)
    000006e0: 	movq	%r14, %rdi
    000006e3: 	subq	start_time(%rip), %rax
    000006ea: 	cvtsi2sd	%rax, %xmm0
    000006ef: 	divsd	DATAat0x1c370(%rip), %xmm0
    000006f7: 	callq	_Z13record_resultdPKc # Offset: 1783
    000006fc: 	movq	0xb0(%rsp), %rdi
    00000704: 	cmpq	(%rsp), %rdi
    00000708: 	je	.Ltmp1205 # Offset: 1800
    0000070a: 	movq	0xc0(%rsp), %rax
    00000712: 	leaq	0x1(%rax), %rsi
    00000716: 	callq	_ZdlPvm@PLT # Offset: 1814
.Ltmp1205:
    0000071b: 	leaq	DATAat0x1c21d(%rip), %rdx
    00000722: 	movq	%r12, %rsi
    00000725: 	movq	%rbp, %rdi
    00000728: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1832
    0000072d: 	callq	clock@PLT # Offset: 1837
    00000732: 	movl	iterations(%rip), %ecx
    00000738: 	xorl	%r14d, %r14d
    0000073b: 	leaq	0x2240(%rsp), %rbx
    00000743: 	movq	%rax, start_time(%rip)
    0000074a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000751: 	testl	%ecx, %ecx
    00000753: 	jle	.Ltmp1206 # Offset: 1875
    00000755: 	nopl	(%rax) # Size: 3
.Ltmp1209:
    00000758: 	movq	%r13, %rax
    0000075b: 	pxor	%xmm0, %xmm0
    0000075f: 	nop # Size: 1
.Ltmp1207:
    00000760: 	paddb	(%rax), %xmm0
    00000764: 	addq	$0x10, %rax
    00000768: 	cmpq	%rbx, %rax
    0000076b: 	jne	.Ltmp1207 # Offset: 1899
    0000076d: 	movdqa	%xmm0, %xmm1
    00000771: 	movzbl	init_value(%rip), %edx
    00000778: 	psrldq	$0x8, %xmm1
    0000077d: 	paddb	%xmm1, %xmm0
    00000781: 	pxor	%xmm1, %xmm1
    00000785: 	shll	$0x6, %edx
    00000788: 	psadbw	%xmm1, %xmm0
    0000078c: 	movd	%xmm0, %eax
    00000790: 	cmpb	%al, %dl
    00000792: 	je	.Ltmp1208 # Offset: 1938
    00000794: 	movq	0xb0(%rsp), %rdx
    0000079c: 	movq	%r15, %rsi
    0000079f: 	movl	$0x1, %edi
    000007a4: 	xorl	%eax, %eax
    000007a6: 	callq	__printf_chk@PLT # Offset: 1958
    000007ab: 	movl	iterations(%rip), %ecx
.Ltmp1208:
    000007b1: 	addl	$0x1, %r14d
    000007b5: 	cmpl	%ecx, %r14d
    000007b8: 	jl	.Ltmp1209 # Offset: 1976
.Ltmp1206:
    000007ba: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007c1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000007c8: 	subq	$0x20, %rax
    000007cc: 	cmpq	%rax, %rbx
    000007cf: 	je	.Ltmp1210 # Offset: 1999
    000007d5: 	leaq	0x10(%rbx), %rdi
    000007d9: 	movq	0xb8(%rsp), %r14
    000007e1: 	movq	%rdi, (%rbx)
    000007e4: 	movq	0xb0(%rsp), %r15
    000007ec: 	movq	%r15, %rax
    000007ef: 	addq	%r14, %rax
    000007f2: 	je	.Ltmp1211 # Offset: 2034
    000007f4: 	testq	%r15, %r15
    000007f7: 	je	.Ltmp1212 # Offset: 2039
.Ltmp1211:
    000007fd: 	movq	%r14, 0x48(%rsp)
    00000802: 	cmpq	$0xf, %r14
    00000806: 	ja	.Ltmp1213 # Offset: 2054
    0000080c: 	cmpq	$0x1, %r14
    00000810: 	jne	.Ltmp1214 # Offset: 2064
    00000816: 	movzbl	(%r15), %eax
    0000081a: 	movb	%al, 0x10(%rbx)
.Ltmp1365:
    0000081d: 	movq	%r14, 0x8(%rbx)
    00000821: 	movb	$0x0, (%rdi,%r14)
    00000826: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000082d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000834: 	addq	$0x20, %rax
    00000838: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000083f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000846: 	je	.Ltmp1215 # Offset: 2118
.Ltmp1352:
    0000084c: 	movq	-0x20(%rax), %r14
    00000850: 	callq	clock@PLT # Offset: 2128
    00000855: 	pxor	%xmm0, %xmm0
    00000859: 	movq	%rax, end_time(%rip)
    00000860: 	movq	%r14, %rdi
    00000863: 	subq	start_time(%rip), %rax
    0000086a: 	cvtsi2sd	%rax, %xmm0
    0000086f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000877: 	callq	_Z13record_resultdPKc # Offset: 2167
    0000087c: 	movq	0xb0(%rsp), %rdi
    00000884: 	cmpq	(%rsp), %rdi
    00000888: 	je	.Ltmp1216 # Offset: 2184
    0000088a: 	movq	0xc0(%rsp), %rax
    00000892: 	leaq	0x1(%rax), %rsi
    00000896: 	callq	_ZdlPvm@PLT # Offset: 2198
.Ltmp1216:
    0000089b: 	leaq	DATAat0x1c23a(%rip), %rdx
    000008a2: 	movq	%r12, %rsi
    000008a5: 	movq	%rbp, %rdi
    000008a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2216
    000008ad: 	callq	clock@PLT # Offset: 2221
    000008b2: 	movl	iterations(%rip), %ecx
    000008b8: 	xorl	%r14d, %r14d
    000008bb: 	leaq	0x2240(%rsp), %rbx
    000008c3: 	movq	%rax, start_time(%rip)
    000008ca: 	leaq	DATAat0x1c1c8(%rip), %r15
    000008d1: 	testl	%ecx, %ecx
    000008d3: 	jle	.Ltmp1217 # Offset: 2259
    000008d5: 	nopl	(%rax) # Size: 3
.Ltmp1220:
    000008d8: 	movq	%r13, %rax
    000008db: 	pxor	%xmm0, %xmm0
    000008df: 	nop # Size: 1
.Ltmp1218:
    000008e0: 	paddb	(%rax), %xmm0
    000008e4: 	addq	$0x10, %rax
    000008e8: 	cmpq	%rax, %rbx
    000008eb: 	jne	.Ltmp1218 # Offset: 2283
    000008ed: 	movdqa	%xmm0, %xmm1
    000008f1: 	movzbl	init_value(%rip), %edx
    000008f8: 	psrldq	$0x8, %xmm1
    000008fd: 	paddb	%xmm1, %xmm0
    00000901: 	pxor	%xmm1, %xmm1
    00000905: 	shll	$0x6, %edx
    00000908: 	psadbw	%xmm1, %xmm0
    0000090c: 	movd	%xmm0, %eax
    00000910: 	cmpb	%al, %dl
    00000912: 	je	.Ltmp1219 # Offset: 2322
    00000914: 	movq	0xb0(%rsp), %rdx
    0000091c: 	movq	%r15, %rsi
    0000091f: 	movl	$0x1, %edi
    00000924: 	xorl	%eax, %eax
    00000926: 	callq	__printf_chk@PLT # Offset: 2342
    0000092b: 	movl	iterations(%rip), %ecx
.Ltmp1219:
    00000931: 	addl	$0x1, %r14d
    00000935: 	cmpl	%ecx, %r14d
    00000938: 	jl	.Ltmp1220 # Offset: 2360
.Ltmp1217:
    0000093a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000941: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000948: 	subq	$0x20, %rax
    0000094c: 	cmpq	%rax, %rbx
    0000094f: 	je	.Ltmp1221 # Offset: 2383
    00000955: 	leaq	0x10(%rbx), %rdi
    00000959: 	movq	0xb8(%rsp), %r14
    00000961: 	movq	%rdi, (%rbx)
    00000964: 	movq	0xb0(%rsp), %r15
    0000096c: 	movq	%r15, %rax
    0000096f: 	addq	%r14, %rax
    00000972: 	je	.Ltmp1222 # Offset: 2418
    00000974: 	testq	%r15, %r15
    00000977: 	je	.Ltmp1223 # Offset: 2423
.Ltmp1222:
    0000097d: 	movq	%r14, 0x48(%rsp)
    00000982: 	cmpq	$0xf, %r14
    00000986: 	ja	.Ltmp1224 # Offset: 2438
    0000098c: 	cmpq	$0x1, %r14
    00000990: 	jne	.Ltmp1225 # Offset: 2448
    00000996: 	movzbl	(%r15), %eax
    0000099a: 	movb	%al, 0x10(%rbx)
.Ltmp1380:
    0000099d: 	movq	%r14, 0x8(%rbx)
    000009a1: 	movb	$0x0, (%rdi,%r14)
    000009a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009ad: 	addq	$0x20, %rax
    000009b1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1358:
    000009b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000009bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009c6: 	je	.Ltmp1226 # Offset: 2502
.Ltmp1357:
    000009cc: 	movq	-0x20(%rax), %r14
    000009d0: 	callq	clock@PLT # Offset: 2512
    000009d5: 	pxor	%xmm0, %xmm0
    000009d9: 	movq	%rax, end_time(%rip)
    000009e0: 	movq	%r14, %rdi
    000009e3: 	subq	start_time(%rip), %rax
    000009ea: 	cvtsi2sd	%rax, %xmm0
    000009ef: 	divsd	DATAat0x1c370(%rip), %xmm0
    000009f7: 	callq	_Z13record_resultdPKc # Offset: 2551
    000009fc: 	movq	0xb0(%rsp), %rdi
    00000a04: 	cmpq	(%rsp), %rdi
    00000a08: 	je	.Ltmp1227 # Offset: 2568
    00000a0a: 	movq	0xc0(%rsp), %rax
    00000a12: 	leaq	0x1(%rax), %rsi
    00000a16: 	callq	_ZdlPvm@PLT # Offset: 2582
.Ltmp1227:
    00000a1b: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000a22: 	movq	%r12, %rsi
    00000a25: 	movq	%rbp, %rdi
    00000a28: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2600
    00000a2d: 	callq	clock@PLT # Offset: 2605
    00000a32: 	movl	iterations(%rip), %ecx
    00000a38: 	xorl	%r14d, %r14d
    00000a3b: 	leaq	0x2240(%rsp), %rbx
    00000a43: 	movq	%rax, start_time(%rip)
    00000a4a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000a51: 	testl	%ecx, %ecx
    00000a53: 	jle	.Ltmp1228 # Offset: 2643
    00000a55: 	nopl	(%rax) # Size: 3
.Ltmp1231:
    00000a58: 	movq	%r13, %rax
    00000a5b: 	pxor	%xmm0, %xmm0
    00000a5f: 	nop # Size: 1
.Ltmp1229:
    00000a60: 	paddb	(%rax), %xmm0
    00000a64: 	addq	$0x10, %rax
    00000a68: 	cmpq	%rax, %rbx
    00000a6b: 	jne	.Ltmp1229 # Offset: 2667
    00000a6d: 	movdqa	%xmm0, %xmm1
    00000a71: 	movzbl	init_value(%rip), %edx
    00000a78: 	psrldq	$0x8, %xmm1
    00000a7d: 	paddb	%xmm1, %xmm0
    00000a81: 	pxor	%xmm1, %xmm1
    00000a85: 	shll	$0x6, %edx
    00000a88: 	psadbw	%xmm1, %xmm0
    00000a8c: 	movd	%xmm0, %eax
    00000a90: 	cmpb	%al, %dl
    00000a92: 	je	.Ltmp1230 # Offset: 2706
    00000a94: 	movq	0xb0(%rsp), %rdx
    00000a9c: 	movq	%r15, %rsi
    00000a9f: 	movl	$0x1, %edi
    00000aa4: 	xorl	%eax, %eax
    00000aa6: 	callq	__printf_chk@PLT # Offset: 2726
    00000aab: 	movl	iterations(%rip), %ecx
.Ltmp1230:
    00000ab1: 	addl	$0x1, %r14d
    00000ab5: 	cmpl	%ecx, %r14d
    00000ab8: 	jl	.Ltmp1231 # Offset: 2744
.Ltmp1228:
    00000aba: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ac1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000ac8: 	subq	$0x20, %rax
    00000acc: 	cmpq	%rax, %rbx
    00000acf: 	je	.Ltmp1232 # Offset: 2767
    00000ad5: 	leaq	0x10(%rbx), %rdi
    00000ad9: 	movq	0xb8(%rsp), %r13
    00000ae1: 	movq	%rdi, (%rbx)
    00000ae4: 	movq	0xb0(%rsp), %r14
    00000aec: 	movq	%r14, %rax
    00000aef: 	addq	%r13, %rax
    00000af2: 	je	.Ltmp1233 # Offset: 2802
    00000af4: 	testq	%r14, %r14
    00000af7: 	je	.Ltmp1234 # Offset: 2807
.Ltmp1233:
    00000afd: 	movq	%r13, 0x48(%rsp)
    00000b02: 	cmpq	$0xf, %r13
    00000b06: 	ja	.Ltmp1235 # Offset: 2822
    00000b0c: 	cmpq	$0x1, %r13
    00000b10: 	jne	.Ltmp1236 # Offset: 2832
    00000b16: 	movzbl	(%r14), %eax
    00000b1a: 	movb	%al, 0x10(%rbx)
.Ltmp1377:
    00000b1d: 	movq	%r13, 0x8(%rbx)
    00000b21: 	movb	$0x0, (%rdi,%r13)
    00000b26: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b2d: 	addq	$0x20, %rax
    00000b31: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1356:
    00000b38: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000b3f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b46: 	je	.Ltmp1237 # Offset: 2886
.Ltmp1340:
    00000b4c: 	movq	-0x20(%rax), %r13
    00000b50: 	callq	clock@PLT # Offset: 2896
    00000b55: 	pxor	%xmm0, %xmm0
    00000b59: 	movq	%rax, end_time(%rip)
    00000b60: 	movq	%r13, %rdi
    00000b63: 	subq	start_time(%rip), %rax
    00000b6a: 	cvtsi2sd	%rax, %xmm0
    00000b6f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b77: 	callq	_Z13record_resultdPKc # Offset: 2935
    00000b7c: 	movq	0xb0(%rsp), %rdi
    00000b84: 	cmpq	(%rsp), %rdi
    00000b88: 	je	.Ltmp1238 # Offset: 2952
    00000b8a: 	movq	0xc0(%rsp), %rax
    00000b92: 	leaq	0x1(%rax), %rsi
    00000b96: 	callq	_ZdlPvm@PLT # Offset: 2966
.Ltmp1238:
    00000b9b: 	leaq	DATAat0x1c265(%rip), %rdx
    00000ba2: 	movq	%r12, %rsi
    00000ba5: 	movq	%rbp, %rdi
    00000ba8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2984
    00000bad: 	callq	clock@PLT # Offset: 2989
    00000bb2: 	movzbl	0x20(%rsp), %ebx
    00000bb7: 	xorl	%r13d, %r13d
    00000bba: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000bc1: 	movq	%rax, start_time(%rip)
    00000bc8: 	movl	iterations(%rip), %eax
    00000bce: 	shll	$0x6, %ebx
    00000bd1: 	testl	%eax, %eax
    00000bd3: 	jle	.Ltmp1239 # Offset: 3027
    00000bd5: 	nopl	(%rax) # Size: 3
.Ltmp1330:
    00000bd8: 	movzbl	init_value(%rip), %eax
    00000bdf: 	shll	$0x6, %eax
    00000be2: 	cmpb	%al, %bl
    00000be4: 	jne	.Ltmp1240 # Offset: 3044
.Ltmp1239:
    00000bea: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000bf1: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000bf8: 	subq	$0x20, %rax
    00000bfc: 	cmpq	%rax, %r14
    00000bff: 	je	.Ltmp1241 # Offset: 3071
    00000c05: 	leaq	0x10(%r14), %rdi
    00000c09: 	movq	0xb8(%rsp), %r13
    00000c11: 	movq	%rdi, (%r14)
    00000c14: 	movq	0xb0(%rsp), %r15
    00000c1c: 	movq	%r15, %rax
    00000c1f: 	addq	%r13, %rax
    00000c22: 	je	.Ltmp1242 # Offset: 3106
    00000c24: 	testq	%r15, %r15
    00000c27: 	je	.Ltmp1243 # Offset: 3111
.Ltmp1242:
    00000c2d: 	movq	%r13, 0x48(%rsp)
    00000c32: 	cmpq	$0xf, %r13
    00000c36: 	ja	.Ltmp1244 # Offset: 3126
    00000c3c: 	cmpq	$0x1, %r13
    00000c40: 	jne	.Ltmp1245 # Offset: 3136
    00000c46: 	movzbl	(%r15), %eax
    00000c4a: 	movb	%al, 0x10(%r14)
.Ltmp1374:
    00000c4e: 	movq	%r13, 0x8(%r14)
    00000c52: 	movb	$0x0, (%rdi,%r13)
    00000c57: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c5e: 	addq	$0x20, %rax
    00000c62: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1355:
    00000c69: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c70: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c77: 	je	.Ltmp1246 # Offset: 3191
.Ltmp1354:
    00000c7d: 	movq	-0x20(%rax), %r13
    00000c81: 	callq	clock@PLT # Offset: 3201
    00000c86: 	pxor	%xmm0, %xmm0
    00000c8a: 	movq	%rax, end_time(%rip)
    00000c91: 	movq	%r13, %rdi
    00000c94: 	subq	start_time(%rip), %rax
    00000c9b: 	cvtsi2sd	%rax, %xmm0
    00000ca0: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000ca8: 	callq	_Z13record_resultdPKc # Offset: 3240
    00000cad: 	movq	0xb0(%rsp), %rdi
    00000cb5: 	cmpq	(%rsp), %rdi
    00000cb9: 	je	.Ltmp1247 # Offset: 3257
    00000cbb: 	movq	0xc0(%rsp), %rax
    00000cc3: 	leaq	0x1(%rax), %rsi
    00000cc7: 	callq	_ZdlPvm@PLT # Offset: 3271
.Ltmp1247:
    00000ccc: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000cd3: 	movq	%r12, %rsi
    00000cd6: 	movq	%rbp, %rdi
    00000cd9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3289
    00000cde: 	callq	clock@PLT # Offset: 3294
    00000ce3: 	movl	iterations(%rip), %r15d
    00000cea: 	xorl	%r13d, %r13d
    00000ced: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000cf4: 	movq	%rax, start_time(%rip)
    00000cfb: 	testl	%r15d, %r15d
    00000cfe: 	jle	.Ltmp1248 # Offset: 3326
.Ltmp1335:
    00000d00: 	movzbl	init_value(%rip), %eax
    00000d07: 	shll	$0x6, %eax
    00000d0a: 	cmpb	%al, %bl
    00000d0c: 	jne	.Ltmp1249 # Offset: 3340
.Ltmp1248:
    00000d12: 	movq	%rbp, %rsi
    00000d15: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d1c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3356
    00000d21: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d28: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d2f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d36: 	je	.Ltmp1250 # Offset: 3382
.Ltmp1349:
    00000d3c: 	movq	-0x20(%rax), %r13
    00000d40: 	callq	clock@PLT # Offset: 3392
    00000d45: 	pxor	%xmm0, %xmm0
    00000d49: 	movq	%rax, end_time(%rip)
    00000d50: 	movq	%r13, %rdi
    00000d53: 	subq	start_time(%rip), %rax
    00000d5a: 	cvtsi2sd	%rax, %xmm0
    00000d5f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d67: 	callq	_Z13record_resultdPKc # Offset: 3431
    00000d6c: 	movq	0xb0(%rsp), %rdi
    00000d74: 	cmpq	(%rsp), %rdi
    00000d78: 	je	.Ltmp1251 # Offset: 3448
    00000d7a: 	movq	0xc0(%rsp), %rax
    00000d82: 	leaq	0x1(%rax), %rsi
    00000d86: 	callq	_ZdlPvm@PLT # Offset: 3462
.Ltmp1251:
    00000d8b: 	leaq	DATAat0x1c289(%rip), %rdx
    00000d92: 	movq	%r12, %rsi
    00000d95: 	movq	%rbp, %rdi
    00000d98: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3480
    00000d9d: 	callq	clock@PLT # Offset: 3485
    00000da2: 	movl	iterations(%rip), %r11d
    00000da9: 	xorl	%r13d, %r13d
    00000dac: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000db3: 	movq	%rax, start_time(%rip)
    00000dba: 	testl	%r11d, %r11d
    00000dbd: 	jle	.Ltmp1252 # Offset: 3517
.Ltmp1334:
    00000dbf: 	movzbl	init_value(%rip), %eax
    00000dc6: 	shll	$0x6, %eax
    00000dc9: 	cmpb	%al, %bl
    00000dcb: 	jne	.Ltmp1253 # Offset: 3531
.Ltmp1252:
    00000dd1: 	movq	%rbp, %rsi
    00000dd4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ddb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3547
    00000de0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000de7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000df5: 	je	.Ltmp1254 # Offset: 3573
.Ltmp1348:
    00000dfb: 	movq	-0x20(%rax), %r13
    00000dff: 	callq	clock@PLT # Offset: 3583
    00000e04: 	pxor	%xmm0, %xmm0
    00000e08: 	movq	%rax, end_time(%rip)
    00000e0f: 	movq	%r13, %rdi
    00000e12: 	subq	start_time(%rip), %rax
    00000e19: 	cvtsi2sd	%rax, %xmm0
    00000e1e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e26: 	callq	_Z13record_resultdPKc # Offset: 3622
    00000e2b: 	movq	0xb0(%rsp), %rdi
    00000e33: 	cmpq	(%rsp), %rdi
    00000e37: 	je	.Ltmp1255 # Offset: 3639
    00000e39: 	movq	0xc0(%rsp), %rax
    00000e41: 	leaq	0x1(%rax), %rsi
    00000e45: 	callq	_ZdlPvm@PLT # Offset: 3653
.Ltmp1255:
    00000e4a: 	leaq	DATAat0x1c298(%rip), %rdx
    00000e51: 	movq	%r12, %rsi
    00000e54: 	movq	%rbp, %rdi
    00000e57: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3671
    00000e5c: 	movq	0x28(%rsp), %rdi
    00000e61: 	movq	%rbp, %rdx
    00000e64: 	movl	$0x1f40, %esi
    00000e69: 	callq	_Z22test_struct4_deref_optIa12test_struct1IaEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3689
    00000e6e: 	movq	0xb0(%rsp), %rdi
    00000e76: 	cmpq	(%rsp), %rdi
    00000e7a: 	je	.Ltmp1256 # Offset: 3706
    00000e7c: 	movq	0xc0(%rsp), %rax
    00000e84: 	leaq	0x1(%rax), %rsi
    00000e88: 	callq	_ZdlPvm@PLT # Offset: 3720
.Ltmp1256:
    00000e8d: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000e94: 	movq	%r12, %rsi
    00000e97: 	movq	%rbp, %rdi
    00000e9a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3738
    00000e9f: 	callq	clock@PLT # Offset: 3743
    00000ea4: 	movl	iterations(%rip), %r10d
    00000eab: 	xorl	%r13d, %r13d
    00000eae: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000eb5: 	movq	%rax, start_time(%rip)
    00000ebc: 	testl	%r10d, %r10d
    00000ebf: 	jle	.Ltmp1257 # Offset: 3775
    00000ec1: 	nopl	(%rax) # Size: 7
.Ltmp1333:
    00000ec8: 	movzbl	init_value(%rip), %eax
    00000ecf: 	shll	$0x6, %eax
    00000ed2: 	cmpb	%al, %bl
    00000ed4: 	jne	.Ltmp1258 # Offset: 3796
.Ltmp1257:
    00000eda: 	movq	%rbp, %rsi
    00000edd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ee4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3812
    00000ee9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ef0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ef7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000efe: 	je	.Ltmp1259 # Offset: 3838
.Ltmp1351:
    00000f04: 	movq	-0x20(%rax), %r13
    00000f08: 	callq	clock@PLT # Offset: 3848
    00000f0d: 	pxor	%xmm0, %xmm0
    00000f11: 	movq	%rax, end_time(%rip)
    00000f18: 	movq	%r13, %rdi
    00000f1b: 	subq	start_time(%rip), %rax
    00000f22: 	cvtsi2sd	%rax, %xmm0
    00000f27: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000f2f: 	callq	_Z13record_resultdPKc # Offset: 3887
    00000f34: 	movq	0xb0(%rsp), %rdi
    00000f3c: 	cmpq	(%rsp), %rdi
    00000f40: 	je	.Ltmp1260 # Offset: 3904
    00000f42: 	movq	0xc0(%rsp), %rax
    00000f4a: 	leaq	0x1(%rax), %rsi
    00000f4e: 	callq	_ZdlPvm@PLT # Offset: 3918
.Ltmp1260:
    00000f53: 	leaq	DATAat0x1c2be(%rip), %rdx
    00000f5a: 	movq	%r12, %rsi
    00000f5d: 	movq	%rbp, %rdi
    00000f60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3936
    00000f65: 	callq	clock@PLT # Offset: 3941
    00000f6a: 	movl	iterations(%rip), %r9d
    00000f71: 	xorl	%r13d, %r13d
    00000f74: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000f7b: 	movq	%rax, start_time(%rip)
    00000f82: 	testl	%r9d, %r9d
    00000f85: 	jle	.Ltmp1261 # Offset: 3973
.Ltmp1332:
    00000f87: 	movzbl	init_value(%rip), %eax
    00000f8e: 	shll	$0x6, %eax
    00000f91: 	cmpb	%al, %bl
    00000f93: 	jne	.Ltmp1262 # Offset: 3987
.Ltmp1261:
    00000f99: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fa0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000fa7: 	subq	$0x20, %rax
    00000fab: 	cmpq	%rax, %rbx
    00000fae: 	je	.Ltmp1263 # Offset: 4014
    00000fb4: 	leaq	0x10(%rbx), %rdi
    00000fb8: 	movq	0xb8(%rsp), %r13
    00000fc0: 	movq	%rdi, (%rbx)
    00000fc3: 	movq	0xb0(%rsp), %r14
    00000fcb: 	movq	%r14, %rax
    00000fce: 	addq	%r13, %rax
    00000fd1: 	je	.Ltmp1264 # Offset: 4049
    00000fd3: 	testq	%r14, %r14
    00000fd6: 	je	.Ltmp1265 # Offset: 4054
.Ltmp1264:
    00000fdc: 	movq	%r13, 0x48(%rsp)
    00000fe1: 	cmpq	$0xf, %r13
    00000fe5: 	ja	.Ltmp1266 # Offset: 4069
    00000feb: 	cmpq	$0x1, %r13
    00000fef: 	jne	.Ltmp1267 # Offset: 4079
    00000ff5: 	movzbl	(%r14), %eax
    00000ff9: 	movb	%al, 0x10(%rbx)
.Ltmp1382:
    00000ffc: 	movq	%r13, 0x8(%rbx)
    00001000: 	movb	$0x0, (%rdi,%r13)
    00001005: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000100c: 	addq	$0x20, %rax
    00001010: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1350:
    00001017: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000101e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001025: 	je	.Ltmp1268 # Offset: 4133
.Ltmp1341:
    0000102b: 	movq	-0x20(%rax), %r13
    0000102f: 	callq	clock@PLT # Offset: 4143
    00001034: 	pxor	%xmm0, %xmm0
    00001038: 	movq	%rax, end_time(%rip)
    0000103f: 	movq	%r13, %rdi
    00001042: 	subq	start_time(%rip), %rax
    00001049: 	cvtsi2sd	%rax, %xmm0
    0000104e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001056: 	callq	_Z13record_resultdPKc # Offset: 4182
    0000105b: 	movq	0xb0(%rsp), %rdi
    00001063: 	cmpq	(%rsp), %rdi
    00001067: 	je	.Ltmp1269 # Offset: 4199
    00001069: 	movq	0xc0(%rsp), %rax
    00001071: 	leaq	0x1(%rax), %rsi
    00001075: 	callq	_ZdlPvm@PLT # Offset: 4213
.Ltmp1269:
    0000107a: 	leaq	DATAat0x1c225(%rip), %rdx
    00001081: 	movq	%r12, %rsi
    00001084: 	movq	%rbp, %rdi
    00001087: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4231
    0000108c: 	callq	clock@PLT # Offset: 4236
    00001091: 	movl	iterations(%rip), %r8d
    00001098: 	xorl	%r13d, %r13d
    0000109b: 	leaq	DATAat0x1c1c8(%rip), %r14
    000010a2: 	movq	%rax, start_time(%rip)
    000010a9: 	movq	0x10(%rsp), %rax
    000010ae: 	leaq	(,%rax,8), %r15
    000010b6: 	movq	0x1f0(%rsp,%r15), %rax
    000010be: 	movq	0x100(%rsp,%rax,8), %rax
    000010c6: 	movzbl	0x2e0(%rsp,%rax), %ebx
    000010ce: 	shll	$0x6, %ebx
    000010d1: 	testl	%r8d, %r8d
    000010d4: 	jle	.Ltmp1270 # Offset: 4308
.Ltmp1331:
    000010d6: 	movzbl	init_value(%rip), %eax
    000010dd: 	shll	$0x6, %eax
    000010e0: 	cmpb	%al, %bl
    000010e2: 	jne	.Ltmp1271 # Offset: 4322
.Ltmp1270:
    000010e8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010ef: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000010f6: 	subq	$0x20, %rax
    000010fa: 	cmpq	%rax, %r14
    000010fd: 	je	.Ltmp1272 # Offset: 4349
    00001103: 	leaq	0x10(%r14), %rdi
    00001107: 	movq	0xb8(%rsp), %r13
    0000110f: 	movq	%rdi, (%r14)
    00001112: 	movq	0xb0(%rsp), %rax
    0000111a: 	movq	%rax, %rsi
    0000111d: 	movq	%rax, 0x20(%rsp)
    00001122: 	addq	%r13, %rsi
    00001125: 	je	.Ltmp1273 # Offset: 4389
    00001127: 	testq	%rax, %rax
    0000112a: 	je	.Ltmp1274 # Offset: 4394
.Ltmp1273:
    00001130: 	movq	%r13, 0x48(%rsp)
    00001135: 	cmpq	$0xf, %r13
    00001139: 	ja	.Ltmp1275 # Offset: 4409
    0000113f: 	cmpq	$0x1, %r13
    00001143: 	jne	.Ltmp1276 # Offset: 4419
    00001149: 	movq	0x20(%rsp), %rax
    0000114e: 	movzbl	(%rax), %eax
    00001151: 	movb	%al, 0x10(%r14)
.Ltmp1376:
    00001155: 	movq	%r13, 0x8(%r14)
    00001159: 	movb	$0x0, (%rdi,%r13)
    0000115e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001165: 	addq	$0x20, %rax
    00001169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1343:
    00001170: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001177: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000117e: 	je	.Ltmp1277 # Offset: 4478
.Ltmp1342:
    00001184: 	movq	-0x20(%rax), %r13
    00001188: 	callq	clock@PLT # Offset: 4488
    0000118d: 	pxor	%xmm0, %xmm0
    00001191: 	movq	%rax, end_time(%rip)
    00001198: 	movq	%r13, %rdi
    0000119b: 	subq	start_time(%rip), %rax
    000011a2: 	cvtsi2sd	%rax, %xmm0
    000011a7: 	divsd	DATAat0x1c370(%rip), %xmm0
    000011af: 	callq	_Z13record_resultdPKc # Offset: 4527
    000011b4: 	movq	0xb0(%rsp), %rdi
    000011bc: 	cmpq	(%rsp), %rdi
    000011c0: 	je	.Ltmp1278 # Offset: 4544
    000011c2: 	movq	0xc0(%rsp), %rax
    000011ca: 	leaq	0x1(%rax), %rsi
    000011ce: 	callq	_ZdlPvm@PLT # Offset: 4558
.Ltmp1278:
    000011d3: 	leaq	DATAat0x1c242(%rip), %rdx
    000011da: 	movq	%r12, %rsi
    000011dd: 	movq	%rbp, %rdi
    000011e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4576
    000011e5: 	callq	clock@PLT # Offset: 4581
    000011ea: 	movl	iterations(%rip), %edi
    000011f0: 	xorl	%r13d, %r13d
    000011f3: 	leaq	DATAat0x1c1c8(%rip), %r14
    000011fa: 	movq	%rax, start_time(%rip)
    00001201: 	testl	%edi, %edi
    00001203: 	jle	.Ltmp1279 # Offset: 4611
    00001205: 	nopl	(%rax) # Size: 3
.Ltmp1337:
    00001208: 	movzbl	init_value(%rip), %eax
    0000120f: 	shll	$0x6, %eax
    00001212: 	cmpb	%al, %bl
    00001214: 	jne	.Ltmp1280 # Offset: 4628
.Ltmp1279:
    0000121a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001221: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001228: 	subq	$0x20, %rax
    0000122c: 	cmpq	%rax, %r14
    0000122f: 	je	.Ltmp1281 # Offset: 4655
    00001235: 	leaq	0x10(%r14), %rdi
    00001239: 	movq	0xb8(%rsp), %r13
    00001241: 	movq	%rdi, (%r14)
    00001244: 	movq	0xb0(%rsp), %rax
    0000124c: 	movq	%rax, %rsi
    0000124f: 	movq	%rax, 0x20(%rsp)
    00001254: 	addq	%r13, %rsi
    00001257: 	je	.Ltmp1282 # Offset: 4695
    00001259: 	testq	%rax, %rax
    0000125c: 	je	.Ltmp1283 # Offset: 4700
.Ltmp1282:
    00001262: 	movq	%r13, 0x48(%rsp)
    00001267: 	cmpq	$0xf, %r13
    0000126b: 	ja	.Ltmp1284 # Offset: 4715
    00001271: 	cmpq	$0x1, %r13
    00001275: 	jne	.Ltmp1285 # Offset: 4725
    0000127b: 	movq	0x20(%rsp), %rax
    00001280: 	movzbl	(%rax), %eax
    00001283: 	movb	%al, 0x10(%r14)
.Ltmp1371:
    00001287: 	movq	%r13, 0x8(%r14)
    0000128b: 	movb	$0x0, (%rdi,%r13)
    00001290: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001297: 	addq	$0x20, %rax
    0000129b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1347:
    000012a2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012a9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012b0: 	je	.Ltmp1286 # Offset: 4784
.Ltmp1346:
    000012b6: 	movq	-0x20(%rax), %r13
    000012ba: 	callq	clock@PLT # Offset: 4794
    000012bf: 	pxor	%xmm0, %xmm0
    000012c3: 	movq	%rax, end_time(%rip)
    000012ca: 	movq	%r13, %rdi
    000012cd: 	subq	start_time(%rip), %rax
    000012d4: 	cvtsi2sd	%rax, %xmm0
    000012d9: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012e1: 	callq	_Z13record_resultdPKc # Offset: 4833
    000012e6: 	movq	0xb0(%rsp), %rdi
    000012ee: 	cmpq	(%rsp), %rdi
    000012f2: 	je	.Ltmp1287 # Offset: 4850
    000012f4: 	movq	0xc0(%rsp), %rax
    000012fc: 	leaq	0x1(%rax), %rsi
    00001300: 	callq	_ZdlPvm@PLT # Offset: 4864
.Ltmp1287:
    00001305: 	leaq	DATAat0x1c257(%rip), %rdx
    0000130c: 	movq	%r12, %rsi
    0000130f: 	movq	%rbp, %rdi
    00001312: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4882
    00001317: 	callq	clock@PLT # Offset: 4887
    0000131c: 	movl	iterations(%rip), %esi
    00001322: 	xorl	%r13d, %r13d
    00001325: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000132c: 	movq	%rax, start_time(%rip)
    00001333: 	testl	%esi, %esi
    00001335: 	jle	.Ltmp1288 # Offset: 4917
    00001337: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1336:
    00001340: 	movzbl	init_value(%rip), %eax
    00001347: 	shll	$0x6, %eax
    0000134a: 	cmpb	%al, %bl
    0000134c: 	jne	.Ltmp1289 # Offset: 4940
.Ltmp1288:
    00001352: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001359: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001360: 	subq	$0x20, %rax
    00001364: 	cmpq	%rax, %rbx
    00001367: 	je	.Ltmp1290 # Offset: 4967
    0000136d: 	leaq	0x10(%rbx), %rdi
    00001371: 	movq	0xb8(%rsp), %r13
    00001379: 	movq	%rdi, (%rbx)
    0000137c: 	movq	0xb0(%rsp), %r14
    00001384: 	movq	%r14, %rax
    00001387: 	addq	%r13, %rax
    0000138a: 	je	.Ltmp1291 # Offset: 5002
    0000138c: 	testq	%r14, %r14
    0000138f: 	je	.Ltmp1292 # Offset: 5007
.Ltmp1291:
    00001395: 	movq	%r13, 0x48(%rsp)
    0000139a: 	cmpq	$0xf, %r13
    0000139e: 	ja	.Ltmp1293 # Offset: 5022
    000013a4: 	cmpq	$0x1, %r13
    000013a8: 	jne	.Ltmp1294 # Offset: 5032
    000013ae: 	movzbl	(%r14), %eax
    000013b2: 	movb	%al, 0x10(%rbx)
.Ltmp1373:
    000013b5: 	movq	%r13, 0x8(%rbx)
    000013b9: 	movb	$0x0, (%rdi,%r13)
    000013be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013cc: 	addq	$0x20, %rax
    000013d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013d7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000013de: 	je	.Ltmp1295 # Offset: 5086
.Ltmp1345:
    000013e4: 	movq	-0x20(%rax), %r13
    000013e8: 	callq	clock@PLT # Offset: 5096
    000013ed: 	pxor	%xmm0, %xmm0
    000013f1: 	movq	%rax, end_time(%rip)
    000013f8: 	movq	%r13, %rdi
    000013fb: 	subq	start_time(%rip), %rax
    00001402: 	cvtsi2sd	%rax, %xmm0
    00001407: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000140f: 	callq	_Z13record_resultdPKc # Offset: 5135
    00001414: 	movq	0xb0(%rsp), %rdi
    0000141c: 	cmpq	(%rsp), %rdi
    00001420: 	je	.Ltmp1296 # Offset: 5152
    00001422: 	movq	0xc0(%rsp), %rax
    0000142a: 	leaq	0x1(%rax), %rsi
    0000142e: 	callq	_ZdlPvm@PLT # Offset: 5166
.Ltmp1296:
    00001433: 	leaq	DATAat0x1c338(%rip), %rdx
    0000143a: 	movq	%r12, %rsi
    0000143d: 	movq	%rbp, %rdi
    00001440: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5184
    00001445: 	movq	0x10(%rsp), %rsi
    0000144a: 	leaq	0xd0(%rsp), %rdi
    00001452: 	movq	%rbp, %rcx
    00001455: 	movl	$0x1f40, %edx
    0000145a: 	callq	_Z31test_struct_arrayList_deref_optIa21test_struct_arrayListIaEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5210
    0000145f: 	movq	0xb0(%rsp), %rdi
    00001467: 	cmpq	(%rsp), %rdi
    0000146b: 	je	.Ltmp1297 # Offset: 5227
    0000146d: 	movq	0xc0(%rsp), %rax
    00001475: 	leaq	0x1(%rax), %rsi
    00001479: 	callq	_ZdlPvm@PLT # Offset: 5241
.Ltmp1297:
    0000147e: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001485: 	movq	%r12, %rsi
    00001488: 	movq	%rbp, %rdi
    0000148b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5259
    00001490: 	callq	clock@PLT # Offset: 5264
    00001495: 	movl	iterations(%rip), %ecx
    0000149b: 	movq	%rax, start_time(%rip)
    000014a2: 	testl	%ecx, %ecx
    000014a4: 	jle	.Ltmp1298 # Offset: 5284
    000014a6: 	movq	0x100(%rsp,%r15), %rax
    000014ae: 	xorl	%ebx, %ebx
    000014b0: 	leaq	DATAat0x1c1c8(%rip), %r14
    000014b7: 	movq	0x1f0(%rsp,%rax,8), %rax
    000014bf: 	movq	0x100(%rsp,%rax,8), %rax
    000014c7: 	movq	0x1f0(%rsp,%rax,8), %rax
    000014cf: 	movq	0x100(%rsp,%rax,8), %rax
    000014d7: 	movzbl	0x2e0(%rsp,%rax), %r13d
    000014e0: 	shll	$0x6, %r13d
.Ltmp1338:
    000014e4: 	movzbl	init_value(%rip), %eax
    000014eb: 	shll	$0x6, %eax
    000014ee: 	cmpb	%r13b, %al
    000014f1: 	jne	.Ltmp1299 # Offset: 5361
.Ltmp1298:
    000014f7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000014fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001505: 	subq	$0x20, %rax
    00001509: 	cmpq	%rax, %rbx
    0000150c: 	je	.Ltmp1300 # Offset: 5388
    00001512: 	leaq	0x10(%rbx), %rdi
    00001516: 	movq	0xb8(%rsp), %r13
    0000151e: 	movq	%rdi, (%rbx)
    00001521: 	movq	0xb0(%rsp), %r14
    00001529: 	movq	%r14, %rax
    0000152c: 	addq	%r13, %rax
    0000152f: 	je	.Ltmp1301 # Offset: 5423
    00001531: 	testq	%r14, %r14
    00001534: 	je	.Ltmp1302 # Offset: 5428
.Ltmp1301:
    0000153a: 	movq	%r13, 0x48(%rsp)
    0000153f: 	cmpq	$0xf, %r13
    00001543: 	ja	.Ltmp1303 # Offset: 5443
    00001549: 	cmpq	$0x1, %r13
    0000154d: 	jne	.Ltmp1304 # Offset: 5453
    00001553: 	movzbl	(%r14), %eax
    00001557: 	movb	%al, 0x10(%rbx)
.Ltmp1379:
    0000155a: 	movq	%r13, 0x8(%rbx)
    0000155e: 	movb	$0x0, (%rdi,%r13)
    00001563: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000156a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001571: 	addq	$0x20, %rax
    00001575: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000157c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001583: 	je	.Ltmp1305 # Offset: 5507
.Ltmp1344:
    00001589: 	movq	-0x20(%rax), %r13
    0000158d: 	callq	clock@PLT # Offset: 5517
    00001592: 	pxor	%xmm0, %xmm0
    00001596: 	movq	%rax, end_time(%rip)
    0000159d: 	movq	%r13, %rdi
    000015a0: 	subq	start_time(%rip), %rax
    000015a7: 	cvtsi2sd	%rax, %xmm0
    000015ac: 	divsd	DATAat0x1c370(%rip), %xmm0
    000015b4: 	callq	_Z13record_resultdPKc # Offset: 5556
    000015b9: 	movq	0xb0(%rsp), %rdi
    000015c1: 	cmpq	(%rsp), %rdi
    000015c5: 	je	.Ltmp1306 # Offset: 5573
    000015c7: 	movq	0xc0(%rsp), %rax
    000015cf: 	leaq	0x1(%rax), %rsi
    000015d3: 	callq	_ZdlPvm@PLT # Offset: 5587
.Ltmp1306:
    000015d8: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000015df: 	movq	%r12, %rsi
    000015e2: 	movq	%rbp, %rdi
    000015e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5605
    000015ea: 	callq	clock@PLT # Offset: 5610
    000015ef: 	movl	iterations(%rip), %edx
    000015f5: 	movq	%rax, start_time(%rip)
    000015fc: 	testl	%edx, %edx
    000015fe: 	jle	.Ltmp1307 # Offset: 5630
    00001600: 	movq	0x100(%rsp,%r15), %rax
    00001608: 	xorl	%ebx, %ebx
    0000160a: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001611: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001619: 	movq	0x100(%rsp,%rax,8), %rax
    00001621: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001629: 	movq	0x100(%rsp,%rax,8), %rax
    00001631: 	movzbl	0x2e0(%rsp,%rax), %r13d
    0000163a: 	shll	$0x6, %r13d
    0000163e: 	nop # Size: 2
.Ltmp1339:
    00001640: 	movzbl	init_value(%rip), %eax
    00001647: 	shll	$0x6, %eax
    0000164a: 	cmpb	%r13b, %al
    0000164d: 	jne	.Ltmp1308 # Offset: 5709
.Ltmp1307:
    00001653: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000165a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001661: 	subq	$0x20, %rax
    00001665: 	cmpq	%rax, %rbx
    00001668: 	je	.Ltmp1309 # Offset: 5736
    0000166e: 	leaq	0x10(%rbx), %rdi
    00001672: 	movq	0xb8(%rsp), %r13
    0000167a: 	movq	%rdi, (%rbx)
    0000167d: 	movq	0xb0(%rsp), %r14
    00001685: 	movq	%r14, %rax
    00001688: 	addq	%r13, %rax
    0000168b: 	je	.Ltmp1310 # Offset: 5771
    0000168d: 	testq	%r14, %r14
    00001690: 	je	.Ltmp1311 # Offset: 5776
.Ltmp1310:
    00001696: 	movq	%r13, 0x48(%rsp)
    0000169b: 	cmpq	$0xf, %r13
    0000169f: 	ja	.Ltmp1312 # Offset: 5791
    000016a5: 	cmpq	$0x1, %r13
    000016a9: 	jne	.Ltmp1313 # Offset: 5801
    000016af: 	movzbl	(%r14), %eax
    000016b3: 	movb	%al, 0x10(%rbx)
.Ltmp1369:
    000016b6: 	movq	%r13, 0x8(%rbx)
    000016ba: 	movb	$0x0, (%rdi,%r13)
    000016bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016c6: 	addq	$0x20, %rax
    000016ca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1361:
    000016d1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016df: 	je	.Ltmp1314 # Offset: 5855
.Ltmp1360:
    000016e5: 	movq	-0x20(%rax), %r13
    000016e9: 	callq	clock@PLT # Offset: 5865
    000016ee: 	pxor	%xmm0, %xmm0
    000016f2: 	movq	%rax, end_time(%rip)
    000016f9: 	movq	%r13, %rdi
    000016fc: 	subq	start_time(%rip), %rax
    00001703: 	cvtsi2sd	%rax, %xmm0
    00001708: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001710: 	callq	_Z13record_resultdPKc # Offset: 5904
    00001715: 	movq	0xb0(%rsp), %rdi
    0000171d: 	cmpq	(%rsp), %rdi
    00001721: 	je	.Ltmp1315 # Offset: 5921
    00001723: 	movq	0xc0(%rsp), %rax
    0000172b: 	leaq	0x1(%rax), %rsi
    0000172f: 	callq	_ZdlPvm@PLT # Offset: 5935
.Ltmp1315:
    00001734: 	leaq	DATAat0x1c301(%rip), %rdx
    0000173b: 	movq	%r12, %rsi
    0000173e: 	movq	%rbp, %rdi
    00001741: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5953
    00001746: 	callq	clock@PLT # Offset: 5958
    0000174b: 	movq	%rax, start_time(%rip)
    00001752: 	movl	iterations(%rip), %eax
    00001758: 	testl	%eax, %eax
    0000175a: 	jle	.Ltmp1316 # Offset: 5978
    0000175c: 	movq	0x100(%rsp,%r15), %rax
    00001764: 	xorl	%ebx, %ebx
    00001766: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000176d: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001775: 	movq	0x100(%rsp,%rax,8), %rax
    0000177d: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001785: 	movq	0x100(%rsp,%rax,8), %rax
    0000178d: 	movzbl	0x2e0(%rsp,%rax), %r13d
    00001796: 	shll	$0x6, %r13d
.Ltmp1329:
    0000179a: 	movzbl	init_value(%rip), %eax
    000017a1: 	shll	$0x6, %eax
    000017a4: 	cmpb	%r13b, %al
    000017a7: 	jne	.Ltmp1317 # Offset: 6055
.Ltmp1316:
    000017ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017bb: 	subq	$0x20, %rax
    000017bf: 	cmpq	%rax, %rbx
    000017c2: 	je	.Ltmp1318 # Offset: 6082
    000017c8: 	leaq	0x10(%rbx), %rdi
    000017cc: 	movq	0xb8(%rsp), %r13
    000017d4: 	movq	%rdi, (%rbx)
    000017d7: 	movq	0xb0(%rsp), %r14
    000017df: 	movq	%r14, %rax
    000017e2: 	addq	%r13, %rax
    000017e5: 	je	.Ltmp1319 # Offset: 6117
    000017e7: 	testq	%r14, %r14
    000017ea: 	je	.Ltmp1320 # Offset: 6122
.Ltmp1319:
    000017f0: 	movq	%r13, 0x48(%rsp)
    000017f5: 	cmpq	$0xf, %r13
    000017f9: 	ja	.Ltmp1321 # Offset: 6137
    000017ff: 	cmpq	$0x1, %r13
    00001803: 	jne	.Ltmp1322 # Offset: 6147
    00001809: 	movzbl	(%r14), %eax
    0000180d: 	movb	%al, 0x10(%rbx)
.Ltmp1367:
    00001810: 	movq	%r13, 0x8(%rbx)
    00001814: 	movb	$0x0, (%rdi,%r13)
    00001819: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001820: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001827: 	addq	$0x20, %rax
    0000182b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001832: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001839: 	je	.Ltmp1323 # Offset: 6201
.Ltmp1359:
    0000183f: 	movq	-0x20(%rax), %r13
    00001843: 	callq	clock@PLT # Offset: 6211
    00001848: 	pxor	%xmm0, %xmm0
    0000184c: 	movq	%rax, end_time(%rip)
    00001853: 	movq	%r13, %rdi
    00001856: 	subq	start_time(%rip), %rax
    0000185d: 	cvtsi2sd	%rax, %xmm0
    00001862: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000186a: 	callq	_Z13record_resultdPKc # Offset: 6250
    0000186f: 	movq	0xb0(%rsp), %rdi
    00001877: 	cmpq	(%rsp), %rdi
    0000187b: 	je	.Ltmp1324 # Offset: 6267
    0000187d: 	movq	0xc0(%rsp), %rax
    00001885: 	leaq	0x1(%rax), %rsi
    00001889: 	callq	_ZdlPvm@PLT # Offset: 6281
.Ltmp1324:
    0000188e: 	leaq	DATAat0x1c31b(%rip), %rdx
    00001895: 	movq	%r12, %rsi
    00001898: 	movq	%rbp, %rdi
    0000189b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6299
    000018a0: 	movl	iterations(%rip), %edx
    000018a6: 	xorl	%r8d, %r8d
    000018a9: 	xorl	%ecx, %ecx
    000018ab: 	movl	$0x1f40, %esi
    000018b0: 	movq	0xb0(%rsp), %rdi
    000018b8: 	callq	_Z9summarizePKciiii # Offset: 6328
    000018bd: 	movq	0xb0(%rsp), %rdi
    000018c5: 	cmpq	(%rsp), %rdi
    000018c9: 	je	.Ltmp1325 # Offset: 6345
    000018cb: 	movq	0xc0(%rsp), %rax
    000018d3: 	leaq	0x1(%rax), %rsi
    000018d7: 	callq	_ZdlPvm@PLT # Offset: 6359
.Ltmp1325:
    000018dc: 	movq	0x90(%rsp), %rdi
    000018e4: 	cmpq	0x18(%rsp), %rdi
    000018e9: 	je	.Ltmp1326 # Offset: 6377
    000018eb: 	movq	0xa0(%rsp), %rax
    000018f3: 	leaq	0x1(%rax), %rsi
    000018f7: 	callq	_ZdlPvm@PLT # Offset: 6391
.Ltmp1326:
    000018fc: 	movq	0x2248(%rsp), %rax
    00001904: 	subq	%fs:0x28, %rax
    0000190d: 	jne	.Ltmp1327 # Offset: 6413
    00001913: 	addq	$0x2258, %rsp
    0000191a: 	popq	%rbx
    0000191b: 	popq	%rbp
    0000191c: 	popq	%r12
    0000191e: 	popq	%r13
    00001920: 	popq	%r14
    00001922: 	popq	%r15
    00001924: 	retq # Offset: 6436
.Ltmp1202:
    00001925: 	leaq	0x48(%rsp), %rsi
    0000192a: 	xorl	%edx, %edx
    0000192c: 	movq	%rbx, %rdi
    0000192f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6447
    00001934: 	movq	%rax, (%rbx)
    00001937: 	movq	%rax, %rdi
    0000193a: 	movq	0x48(%rsp), %rax
    0000193f: 	movq	%rax, 0x10(%rbx)
.Ltmp1368:
    00001943: 	movq	%r14, %rdx
    00001946: 	movq	%r15, %rsi
    00001949: 	callq	memcpy@PLT # Offset: 6473
    0000194e: 	movq	0x48(%rsp), %r14
    00001953: 	movq	(%rbx), %rdi
    00001956: 	jmp	.Ltmp1328 # Offset: 6486
    0000195b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1317:
    00001960: 	movq	0xb0(%rsp), %rdx
    00001968: 	movq	%r14, %rsi
    0000196b: 	movl	$0x1, %edi
    00001970: 	xorl	%eax, %eax
    00001972: 	callq	__printf_chk@PLT # Offset: 6514
    00001977: 	addl	$0x1, %ebx
    0000197a: 	cmpl	iterations(%rip), %ebx
    00001980: 	jl	.Ltmp1329 # Offset: 6528
    00001986: 	jmp	.Ltmp1316 # Offset: 6534
    0000198b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1240:
    00001990: 	movq	0xb0(%rsp), %rdx
    00001998: 	movq	%r14, %rsi
    0000199b: 	movl	$0x1, %edi
    000019a0: 	xorl	%eax, %eax
    000019a2: 	callq	__printf_chk@PLT # Offset: 6562
    000019a7: 	addl	$0x1, %r13d
    000019ab: 	cmpl	%r13d, iterations(%rip)
    000019b2: 	jg	.Ltmp1330 # Offset: 6578
    000019b8: 	jmp	.Ltmp1239 # Offset: 6584
    000019bd: 	nopl	(%rax) # Size: 3
.Ltmp1271:
    000019c0: 	movq	0xb0(%rsp), %rdx
    000019c8: 	movq	%r14, %rsi
    000019cb: 	movl	$0x1, %edi
    000019d0: 	xorl	%eax, %eax
    000019d2: 	callq	__printf_chk@PLT # Offset: 6610
    000019d7: 	addl	$0x1, %r13d
    000019db: 	cmpl	iterations(%rip), %r13d
    000019e2: 	jl	.Ltmp1331 # Offset: 6626
    000019e8: 	jmp	.Ltmp1270 # Offset: 6632
    000019ed: 	nopl	(%rax) # Size: 3
.Ltmp1262:
    000019f0: 	movq	0xb0(%rsp), %rdx
    000019f8: 	movq	%r14, %rsi
    000019fb: 	movl	$0x1, %edi
    00001a00: 	xorl	%eax, %eax
    00001a02: 	callq	__printf_chk@PLT # Offset: 6658
    00001a07: 	addl	$0x1, %r13d
    00001a0b: 	cmpl	iterations(%rip), %r13d
    00001a12: 	jl	.Ltmp1332 # Offset: 6674
    00001a18: 	jmp	.Ltmp1261 # Offset: 6680
    00001a1d: 	nopl	(%rax) # Size: 3
.Ltmp1258:
    00001a20: 	movq	0xb0(%rsp), %rdx
    00001a28: 	movq	%r14, %rsi
    00001a2b: 	movl	$0x1, %edi
    00001a30: 	xorl	%eax, %eax
    00001a32: 	callq	__printf_chk@PLT # Offset: 6706
    00001a37: 	addl	$0x1, %r13d
    00001a3b: 	cmpl	iterations(%rip), %r13d
    00001a42: 	jl	.Ltmp1333 # Offset: 6722
    00001a48: 	jmp	.Ltmp1257 # Offset: 6728
    00001a4d: 	nopl	(%rax) # Size: 3
.Ltmp1253:
    00001a50: 	movq	0xb0(%rsp), %rdx
    00001a58: 	movq	%r14, %rsi
    00001a5b: 	movl	$0x1, %edi
    00001a60: 	xorl	%eax, %eax
    00001a62: 	callq	__printf_chk@PLT # Offset: 6754
    00001a67: 	addl	$0x1, %r13d
    00001a6b: 	cmpl	iterations(%rip), %r13d
    00001a72: 	jl	.Ltmp1334 # Offset: 6770
    00001a78: 	jmp	.Ltmp1252 # Offset: 6776
    00001a7d: 	nopl	(%rax) # Size: 3
.Ltmp1249:
    00001a80: 	movq	0xb0(%rsp), %rdx
    00001a88: 	movq	%r14, %rsi
    00001a8b: 	movl	$0x1, %edi
    00001a90: 	xorl	%eax, %eax
    00001a92: 	callq	__printf_chk@PLT # Offset: 6802
    00001a97: 	addl	$0x1, %r13d
    00001a9b: 	cmpl	iterations(%rip), %r13d
    00001aa2: 	jl	.Ltmp1335 # Offset: 6818
    00001aa8: 	jmp	.Ltmp1248 # Offset: 6824
    00001aad: 	nopl	(%rax) # Size: 3
.Ltmp1289:
    00001ab0: 	movq	0xb0(%rsp), %rdx
    00001ab8: 	movq	%r14, %rsi
    00001abb: 	movl	$0x1, %edi
    00001ac0: 	xorl	%eax, %eax
    00001ac2: 	callq	__printf_chk@PLT # Offset: 6850
    00001ac7: 	addl	$0x1, %r13d
    00001acb: 	cmpl	iterations(%rip), %r13d
    00001ad2: 	jl	.Ltmp1336 # Offset: 6866
    00001ad8: 	jmp	.Ltmp1288 # Offset: 6872
    00001add: 	nopl	(%rax) # Size: 3
.Ltmp1280:
    00001ae0: 	movq	0xb0(%rsp), %rdx
    00001ae8: 	movq	%r14, %rsi
    00001aeb: 	movl	$0x1, %edi
    00001af0: 	xorl	%eax, %eax
    00001af2: 	callq	__printf_chk@PLT # Offset: 6898
    00001af7: 	addl	$0x1, %r13d
    00001afb: 	cmpl	iterations(%rip), %r13d
    00001b02: 	jl	.Ltmp1337 # Offset: 6914
    00001b08: 	jmp	.Ltmp1279 # Offset: 6920
    00001b0d: 	nopl	(%rax) # Size: 3
.Ltmp1299:
    00001b10: 	movq	0xb0(%rsp), %rdx
    00001b18: 	movq	%r14, %rsi
    00001b1b: 	movl	$0x1, %edi
    00001b20: 	xorl	%eax, %eax
    00001b22: 	callq	__printf_chk@PLT # Offset: 6946
    00001b27: 	addl	$0x1, %ebx
    00001b2a: 	cmpl	iterations(%rip), %ebx
    00001b30: 	jl	.Ltmp1338 # Offset: 6960
    00001b36: 	jmp	.Ltmp1298 # Offset: 6966
    00001b3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1308:
    00001b40: 	movq	0xb0(%rsp), %rdx
    00001b48: 	movq	%r14, %rsi
    00001b4b: 	movl	$0x1, %edi
    00001b50: 	xorl	%eax, %eax
    00001b52: 	callq	__printf_chk@PLT # Offset: 6994
    00001b57: 	addl	$0x1, %ebx
    00001b5a: 	cmpl	iterations(%rip), %ebx
    00001b60: 	jl	.Ltmp1339 # Offset: 7008
    00001b66: 	jmp	.Ltmp1307 # Offset: 7014
    00001b6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1237:
    00001b70: 	movq	-0x8(%rdx), %rax
    00001b74: 	addq	$0x200, %rax
    00001b7a: 	jmp	.Ltmp1340 # Offset: 7034
.Ltmp1268:
    00001b7f: 	movq	-0x8(%rdx), %rax
    00001b83: 	addq	$0x200, %rax
    00001b89: 	jmp	.Ltmp1341 # Offset: 7049
.Ltmp1277:
    00001b8e: 	movq	-0x8(%rdx), %rax
    00001b92: 	addq	$0x200, %rax
    00001b98: 	jmp	.Ltmp1342 # Offset: 7064
.Ltmp1272:
    00001b9d: 	movq	%rbp, %rsi
    00001ba0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ba7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7079
    00001bac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bb3: 	jmp	.Ltmp1343 # Offset: 7091
.Ltmp1300:
    00001bb8: 	movq	%rbp, %rsi
    00001bbb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bc2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7106
    00001bc7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bd5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bdc: 	jne	.Ltmp1344 # Offset: 7132
.Ltmp1305:
    00001be2: 	movq	-0x8(%rdx), %rax
    00001be6: 	addq	$0x200, %rax
    00001bec: 	jmp	.Ltmp1344 # Offset: 7148
.Ltmp1290:
    00001bf1: 	movq	%rbp, %rsi
    00001bf4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bfb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7163
    00001c00: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c07: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c0e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c15: 	jne	.Ltmp1345 # Offset: 7189
.Ltmp1295:
    00001c1b: 	movq	-0x8(%rdx), %rax
    00001c1f: 	addq	$0x200, %rax
    00001c25: 	jmp	.Ltmp1345 # Offset: 7205
.Ltmp1286:
    00001c2a: 	movq	-0x8(%rdx), %rax
    00001c2e: 	addq	$0x200, %rax
    00001c34: 	jmp	.Ltmp1346 # Offset: 7220
.Ltmp1281:
    00001c39: 	movq	%rbp, %rsi
    00001c3c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c43: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7235
    00001c48: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c4f: 	jmp	.Ltmp1347 # Offset: 7247
.Ltmp1254:
    00001c54: 	movq	-0x8(%rdx), %rax
    00001c58: 	addq	$0x200, %rax
    00001c5e: 	jmp	.Ltmp1348 # Offset: 7262
.Ltmp1250:
    00001c63: 	movq	-0x8(%rdx), %rax
    00001c67: 	addq	$0x200, %rax
    00001c6d: 	jmp	.Ltmp1349 # Offset: 7277
.Ltmp1263:
    00001c72: 	movq	%rbp, %rsi
    00001c75: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c7c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7292
    00001c81: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c88: 	jmp	.Ltmp1350 # Offset: 7304
.Ltmp1259:
    00001c8d: 	movq	-0x8(%rdx), %rax
    00001c91: 	addq	$0x200, %rax
    00001c97: 	jmp	.Ltmp1351 # Offset: 7319
.Ltmp1210:
    00001c9c: 	movq	%rbp, %rsi
    00001c9f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ca6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7334
    00001cab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cb2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001cb9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cc0: 	jne	.Ltmp1352 # Offset: 7360
.Ltmp1215:
    00001cc6: 	movq	-0x8(%rdx), %rax
    00001cca: 	addq	$0x200, %rax
    00001cd0: 	jmp	.Ltmp1352 # Offset: 7376
.Ltmp1204:
    00001cd5: 	movq	-0x8(%rdx), %rax
    00001cd9: 	addq	$0x200, %rax
    00001cdf: 	jmp	.Ltmp1353 # Offset: 7391
.Ltmp1246:
    00001ce4: 	movq	-0x8(%rdx), %rax
    00001ce8: 	addq	$0x200, %rax
    00001cee: 	jmp	.Ltmp1354 # Offset: 7406
.Ltmp1241:
    00001cf3: 	movq	%rbp, %rsi
    00001cf6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cfd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7421
    00001d02: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d09: 	jmp	.Ltmp1355 # Offset: 7433
.Ltmp1232:
    00001d0e: 	movq	%rbp, %rsi
    00001d11: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d18: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7448
    00001d1d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d24: 	jmp	.Ltmp1356 # Offset: 7460
.Ltmp1226:
    00001d29: 	movq	-0x8(%rdx), %rax
    00001d2d: 	addq	$0x200, %rax
    00001d33: 	jmp	.Ltmp1357 # Offset: 7475
.Ltmp1221:
    00001d38: 	movq	%rbp, %rsi
    00001d3b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d42: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7490
    00001d47: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d4e: 	jmp	.Ltmp1358 # Offset: 7502
.Ltmp1318:
    00001d53: 	movq	%rbp, %rsi
    00001d56: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d5d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7517
    00001d62: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d69: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d70: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d77: 	jne	.Ltmp1359 # Offset: 7543
.Ltmp1323:
    00001d7d: 	movq	-0x8(%rdx), %rax
    00001d81: 	addq	$0x200, %rax
    00001d87: 	jmp	.Ltmp1359 # Offset: 7559
.Ltmp1314:
    00001d8c: 	movq	-0x8(%rdx), %rax
    00001d90: 	addq	$0x200, %rax
    00001d96: 	jmp	.Ltmp1360 # Offset: 7574
.Ltmp1309:
    00001d9b: 	movq	%rbp, %rsi
    00001d9e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001da5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7589
    00001daa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db1: 	jmp	.Ltmp1361 # Offset: 7601
.Ltmp1199:
    00001db6: 	movq	%rbp, %rsi
    00001db9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dc0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7616
    00001dc5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dcc: 	jmp	.Ltmp1362 # Offset: 7628
.Ltmp1193:
    00001dd1: 	movq	-0x8(%rdx), %rax
    00001dd5: 	addq	$0x200, %rax
    00001ddb: 	jmp	.Ltmp1363 # Offset: 7643
.Ltmp1187:
    00001de0: 	movq	-0x8(%rdx), %rax
    00001de4: 	addq	$0x200, %rax
    00001dea: 	jmp	.Ltmp1364 # Offset: 7658
.Ltmp1214:
    00001def: 	testq	%r14, %r14
    00001df2: 	je	.Ltmp1365 # Offset: 7666
    00001df8: 	jmp	.Ltmp1366 # Offset: 7672
    00001dfd: 	nopl	(%rax) # Size: 3
.Ltmp1322:
    00001e00: 	testq	%r13, %r13
    00001e03: 	je	.Ltmp1367 # Offset: 7683
.Ltmp1383:
    00001e09: 	movq	%r13, %rdx
    00001e0c: 	movq	%r14, %rsi
    00001e0f: 	callq	memcpy@PLT # Offset: 7695
    00001e14: 	movq	0x48(%rsp), %r13
    00001e19: 	movq	(%rbx), %rdi
    00001e1c: 	jmp	.Ltmp1367 # Offset: 7708
.Ltmp1203:
    00001e21: 	testq	%r14, %r14
    00001e24: 	je	.Ltmp1328 # Offset: 7716
    00001e2a: 	jmp	.Ltmp1368 # Offset: 7722
    00001e2f: 	nop # Size: 1
.Ltmp1313:
    00001e30: 	testq	%r13, %r13
    00001e33: 	je	.Ltmp1369 # Offset: 7731
    00001e39: 	jmp	.Ltmp1370 # Offset: 7737
    00001e3e: 	nop # Size: 2
.Ltmp1285:
    00001e40: 	testq	%r13, %r13
    00001e43: 	je	.Ltmp1371 # Offset: 7747
    00001e49: 	jmp	.Ltmp1372 # Offset: 7753
    00001e4e: 	nop # Size: 2
.Ltmp1294:
    00001e50: 	testq	%r13, %r13
    00001e53: 	je	.Ltmp1373 # Offset: 7763
.Ltmp1384:
    00001e59: 	movq	%r13, %rdx
    00001e5c: 	movq	%r14, %rsi
    00001e5f: 	callq	memcpy@PLT # Offset: 7775
    00001e64: 	movq	0x48(%rsp), %r13
    00001e69: 	movq	(%rbx), %rdi
    00001e6c: 	jmp	.Ltmp1373 # Offset: 7788
.Ltmp1245:
    00001e71: 	testq	%r13, %r13
    00001e74: 	je	.Ltmp1374 # Offset: 7796
    00001e7a: 	jmp	.Ltmp1375 # Offset: 7802
    00001e7f: 	nop # Size: 1
.Ltmp1276:
    00001e80: 	testq	%r13, %r13
    00001e83: 	je	.Ltmp1376 # Offset: 7811
.Ltmp1386:
    00001e89: 	movq	0x20(%rsp), %rsi
    00001e8e: 	movq	%r13, %rdx
    00001e91: 	callq	memcpy@PLT # Offset: 7825
    00001e96: 	movq	0x48(%rsp), %r13
    00001e9b: 	movq	(%r14), %rdi
    00001e9e: 	jmp	.Ltmp1376 # Offset: 7838
.Ltmp1236:
    00001ea3: 	testq	%r13, %r13
    00001ea6: 	je	.Ltmp1377 # Offset: 7846
    00001eac: 	jmp	.Ltmp1378 # Offset: 7852
    00001eb1: 	nopl	(%rax) # Size: 7
.Ltmp1304:
    00001eb8: 	testq	%r13, %r13
    00001ebb: 	je	.Ltmp1379 # Offset: 7867
.Ltmp1385:
    00001ec1: 	movq	%r13, %rdx
    00001ec4: 	movq	%r14, %rsi
    00001ec7: 	callq	memcpy@PLT # Offset: 7879
    00001ecc: 	movq	0x48(%rsp), %r13
    00001ed1: 	movq	(%rbx), %rdi
    00001ed4: 	jmp	.Ltmp1379 # Offset: 7892
.Ltmp1225:
    00001ed9: 	testq	%r14, %r14
    00001edc: 	je	.Ltmp1380 # Offset: 7900
    00001ee2: 	jmp	.Ltmp1381 # Offset: 7906
    00001ee7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1267:
    00001ef0: 	testq	%r13, %r13
    00001ef3: 	je	.Ltmp1382 # Offset: 7923
.Ltmp1387:
    00001ef9: 	movq	%r13, %rdx
    00001efc: 	movq	%r14, %rsi
    00001eff: 	callq	memcpy@PLT # Offset: 7935
    00001f04: 	movq	0x48(%rsp), %r13
    00001f09: 	movq	(%rbx), %rdi
    00001f0c: 	jmp	.Ltmp1382 # Offset: 7948
.Ltmp1312:
    00001f11: 	leaq	0x48(%rsp), %rsi
    00001f16: 	xorl	%edx, %edx
    00001f18: 	movq	%rbx, %rdi
    00001f1b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7963
    00001f20: 	movq	%rax, (%rbx)
    00001f23: 	movq	%rax, %rdi
    00001f26: 	movq	0x48(%rsp), %rax
    00001f2b: 	movq	%rax, 0x10(%rbx)
.Ltmp1370:
    00001f2f: 	movq	%r13, %rdx
    00001f32: 	movq	%r14, %rsi
    00001f35: 	callq	memcpy@PLT # Offset: 7989
    00001f3a: 	movq	0x48(%rsp), %r13
    00001f3f: 	movq	(%rbx), %rdi
    00001f42: 	jmp	.Ltmp1369 # Offset: 8002
.Ltmp1213:
    00001f47: 	leaq	0x48(%rsp), %rsi
    00001f4c: 	xorl	%edx, %edx
    00001f4e: 	movq	%rbx, %rdi
    00001f51: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8017
    00001f56: 	movq	%rax, (%rbx)
    00001f59: 	movq	%rax, %rdi
    00001f5c: 	movq	0x48(%rsp), %rax
    00001f61: 	movq	%rax, 0x10(%rbx)
.Ltmp1366:
    00001f65: 	movq	%r14, %rdx
    00001f68: 	movq	%r15, %rsi
    00001f6b: 	callq	memcpy@PLT # Offset: 8043
    00001f70: 	movq	0x48(%rsp), %r14
    00001f75: 	movq	(%rbx), %rdi
    00001f78: 	jmp	.Ltmp1365 # Offset: 8056
.Ltmp1321:
    00001f7d: 	leaq	0x48(%rsp), %rsi
    00001f82: 	xorl	%edx, %edx
    00001f84: 	movq	%rbx, %rdi
    00001f87: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8071
    00001f8c: 	movq	%rax, (%rbx)
    00001f8f: 	movq	%rax, %rdi
    00001f92: 	movq	0x48(%rsp), %rax
    00001f97: 	movq	%rax, 0x10(%rbx)
    00001f9b: 	jmp	.Ltmp1383 # Offset: 8091
.Ltmp1284:
    00001fa0: 	leaq	0x48(%rsp), %rsi
    00001fa5: 	xorl	%edx, %edx
    00001fa7: 	movq	%r14, %rdi
    00001faa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8106
    00001faf: 	movq	%rax, (%r14)
    00001fb2: 	movq	%rax, %rdi
    00001fb5: 	movq	0x48(%rsp), %rax
    00001fba: 	movq	%rax, 0x10(%r14)
.Ltmp1372:
    00001fbe: 	movq	0x20(%rsp), %rsi
    00001fc3: 	movq	%r13, %rdx
    00001fc6: 	callq	memcpy@PLT # Offset: 8134
    00001fcb: 	movq	0x48(%rsp), %r13
    00001fd0: 	movq	(%r14), %rdi
    00001fd3: 	jmp	.Ltmp1371 # Offset: 8147
.Ltmp1235:
    00001fd8: 	leaq	0x48(%rsp), %rsi
    00001fdd: 	xorl	%edx, %edx
    00001fdf: 	movq	%rbx, %rdi
    00001fe2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8162
    00001fe7: 	movq	%rax, (%rbx)
    00001fea: 	movq	%rax, %rdi
    00001fed: 	movq	0x48(%rsp), %rax
    00001ff2: 	movq	%rax, 0x10(%rbx)
.Ltmp1378:
    00001ff6: 	movq	%r13, %rdx
    00001ff9: 	movq	%r14, %rsi
    00001ffc: 	callq	memcpy@PLT # Offset: 8188
    00002001: 	movq	0x48(%rsp), %r13
    00002006: 	movq	(%rbx), %rdi
    00002009: 	jmp	.Ltmp1377 # Offset: 8201
.Ltmp1244:
    0000200e: 	leaq	0x48(%rsp), %rsi
    00002013: 	xorl	%edx, %edx
    00002015: 	movq	%r14, %rdi
    00002018: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8216
    0000201d: 	movq	%rax, (%r14)
    00002020: 	movq	%rax, %rdi
    00002023: 	movq	0x48(%rsp), %rax
    00002028: 	movq	%rax, 0x10(%r14)
.Ltmp1375:
    0000202c: 	movq	%r13, %rdx
    0000202f: 	movq	%r15, %rsi
    00002032: 	callq	memcpy@PLT # Offset: 8242
    00002037: 	movq	0x48(%rsp), %r13
    0000203c: 	movq	(%r14), %rdi
    0000203f: 	jmp	.Ltmp1374 # Offset: 8255
.Ltmp1224:
    00002044: 	leaq	0x48(%rsp), %rsi
    00002049: 	xorl	%edx, %edx
    0000204b: 	movq	%rbx, %rdi
    0000204e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8270
    00002053: 	movq	%rax, (%rbx)
    00002056: 	movq	%rax, %rdi
    00002059: 	movq	0x48(%rsp), %rax
    0000205e: 	movq	%rax, 0x10(%rbx)
.Ltmp1381:
    00002062: 	movq	%r14, %rdx
    00002065: 	movq	%r15, %rsi
    00002068: 	callq	memcpy@PLT # Offset: 8296
    0000206d: 	movq	0x48(%rsp), %r14
    00002072: 	movq	(%rbx), %rdi
    00002075: 	jmp	.Ltmp1380 # Offset: 8309
.Ltmp1293:
    0000207a: 	leaq	0x48(%rsp), %rsi
    0000207f: 	xorl	%edx, %edx
    00002081: 	movq	%rbx, %rdi
    00002084: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8324
    00002089: 	movq	%rax, (%rbx)
    0000208c: 	movq	%rax, %rdi
    0000208f: 	movq	0x48(%rsp), %rax
    00002094: 	movq	%rax, 0x10(%rbx)
    00002098: 	jmp	.Ltmp1384 # Offset: 8344
.Ltmp1303:
    0000209d: 	leaq	0x48(%rsp), %rsi
    000020a2: 	xorl	%edx, %edx
    000020a4: 	movq	%rbx, %rdi
    000020a7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8359
    000020ac: 	movq	%rax, (%rbx)
    000020af: 	movq	%rax, %rdi
    000020b2: 	movq	0x48(%rsp), %rax
    000020b7: 	movq	%rax, 0x10(%rbx)
    000020bb: 	jmp	.Ltmp1385 # Offset: 8379
.Ltmp1275:
    000020c0: 	leaq	0x48(%rsp), %rsi
    000020c5: 	xorl	%edx, %edx
    000020c7: 	movq	%r14, %rdi
    000020ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8394
    000020cf: 	movq	%rax, (%r14)
    000020d2: 	movq	%rax, %rdi
    000020d5: 	movq	0x48(%rsp), %rax
    000020da: 	movq	%rax, 0x10(%r14)
    000020de: 	jmp	.Ltmp1386 # Offset: 8414
.Ltmp1266:
    000020e3: 	leaq	0x48(%rsp), %rsi
    000020e8: 	xorl	%edx, %edx
    000020ea: 	movq	%rbx, %rdi
    000020ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8429
    000020f2: 	movq	%rax, (%rbx)
    000020f5: 	movq	%rax, %rdi
    000020f8: 	movq	0x48(%rsp), %rax
    000020fd: 	movq	%rax, 0x10(%rbx)
    00002101: 	jmp	.Ltmp1387 # Offset: 8449
.Ltmp1212:
    00002106: 	leaq	DATAat0x1c158(%rip), %rdi
    0000210d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8461
.Ltmp1223:
    00002112: 	leaq	DATAat0x1c158(%rip), %rdi
    00002119: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8473
.Ltmp1234:
    0000211e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002125: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8485
.Ltmp1243:
    0000212a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002131: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8497
.Ltmp1265:
    00002136: 	leaq	DATAat0x1c158(%rip), %rdi
    0000213d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8509
.Ltmp1274:
    00002142: 	leaq	DATAat0x1c158(%rip), %rdi
    00002149: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8521
.Ltmp1283:
    0000214e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002155: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8533
.Ltmp1292:
    0000215a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002161: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8545
.Ltmp1302:
    00002166: 	leaq	DATAat0x1c158(%rip), %rdi
    0000216d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8557
.Ltmp1311:
    00002172: 	leaq	DATAat0x1c158(%rip), %rdi
    00002179: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8569
.Ltmp1320:
    0000217e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002185: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8581
.Ltmp1327:
    0000218a: 	callq	__stack_chk_fail@PLT # Offset: 8586
.Ltmp1201:
    0000218f: 	leaq	DATAat0x1c158(%rip), %rdi
    00002196: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8598
    0000219b: 	endbr64
.Ltmp1389:
    0000219f: 	movq	%rax, %rbp
    000021a2: 	jmp	.Ltmp1388 # Offset: 8610
    000021a7: 	endbr64
    000021ab: 	jmp	.Ltmp1389 # Offset: 8619
    000021ad: 	endbr64
    000021b1: 	jmp	.Ltmp1389 # Offset: 8625
    000021b3: 	endbr64
    000021b7: 	jmp	.Ltmp1389 # Offset: 8631
    000021b9: 	endbr64
    000021bd: 	jmp	.Ltmp1389 # Offset: 8637
    000021bf: 	endbr64
    000021c3: 	jmp	.Ltmp1389 # Offset: 8643
    000021c5: 	endbr64
    000021c9: 	jmp	.Ltmp1389 # Offset: 8649
    000021cb: 	endbr64
    000021cf: 	jmp	.Ltmp1389 # Offset: 8655
    000021d1: 	endbr64
    000021d5: 	jmp	.Ltmp1389 # Offset: 8661
    000021d7: 	endbr64
    000021db: 	movq	%rax, %rbp
    000021de: 	jmp	.Ltmp1390 # Offset: 8670
    000021e0: 	endbr64
    000021e4: 	movq	%rax, %rbp
    000021e7: 	jmp	.Ltmp1391 # Offset: 8679
    000021e9: 	endbr64
    000021ed: 	jmp	.Ltmp1389 # Offset: 8685
    000021ef: 	endbr64
    000021f3: 	jmp	.Ltmp1389 # Offset: 8691
.Ltmp1390:
    000021f5: 	movq	0xb0(%rsp), %rdi
    000021fd: 	leaq	0xc0(%rsp), %rax
    00002205: 	cmpq	%rax, %rdi
    00002208: 	je	.Ltmp1391 # Offset: 8712
.Ltmp1393:
    0000220a: 	movq	0xc0(%rsp), %rax
    00002212: 	leaq	0x1(%rax), %rsi
    00002216: 	callq	_ZdlPvm@PLT # Offset: 8726
.Ltmp1391:
    0000221b: 	movq	0x90(%rsp), %rdi
    00002223: 	cmpq	0x18(%rsp), %rdi
    00002228: 	je	.Ltmp1392 # Offset: 8744
    0000222a: 	movq	0xa0(%rsp), %rax
    00002232: 	leaq	0x1(%rax), %rsi
    00002236: 	callq	_ZdlPvm@PLT # Offset: 8758
.Ltmp1392:
    0000223b: 	movq	%rbp, %rdi
    0000223e: 	callq	_Unwind_Resume@PLT # Offset: 8766
    00002243: 	endbr64
    00002247: 	jmp	.Ltmp1389 # Offset: 8775
    0000224c: 	endbr64
    00002250: 	jmp	.Ltmp1389 # Offset: 8784
    00002255: 	endbr64
    00002259: 	jmp	.Ltmp1389 # Offset: 8793
    0000225e: 	endbr64
    00002262: 	jmp	.Ltmp1389 # Offset: 8802
    00002267: 	endbr64
    0000226b: 	jmp	.Ltmp1389 # Offset: 8811
    00002270: 	endbr64
    00002274: 	jmp	.Ltmp1389 # Offset: 8820
    00002279: 	endbr64
    0000227d: 	jmp	.Ltmp1389 # Offset: 8829
    00002282: 	endbr64
    00002286: 	jmp	.Ltmp1389 # Offset: 8838
.Ltmp1388:
    0000228b: 	movq	0xb0(%rsp), %rdi
    00002293: 	cmpq	(%rsp), %rdi
    00002297: 	jne	.Ltmp1393 # Offset: 8855
    0000229d: 	jmp	.Ltmp1391 # Offset: 8861
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIaEvT_"

Binary Function "_Z11TestOneTypeIhEvT_" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x10b20
  Size        : 0x22ba
  MaxSize     : 0x22c0
  Offset      : 0x10b20
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x258, %rsp
    0000002d: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000035: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003d: 	movq	%fs:0x28, %rax
    00000046: 	movq	%rax, 0x2248(%rsp)
    0000004e: 	xorl	%eax, %eax
    00000050: 	movl	%edi, %ebx
    00000052: 	leaq	0x100(%rsp), %rax
    0000005a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000061: 	movq	%rax, %xmm0
    00000066: 	leaq	0x2e0(%rsp), %rax
    0000006e: 	movl	$0x746e6975, 0xa0(%rsp)
    00000079: 	leaq	0x300(%rsp), %r13
    00000081: 	movq	%rax, %xmm2
    00000086: 	leaq	0x1f0(%rsp), %rax
    0000008e: 	movb	$0x74, 0xa6(%rsp)
    00000096: 	leaq	0xb0(%rsp), %rbp
    0000009e: 	movq	%rax, %xmm1
    000000a3: 	leaq	0xa0(%rsp), %rax
    000000ab: 	punpcklqdq	%xmm0, %xmm2
    000000af: 	movq	$0x7, 0x98(%rsp)
    000000bb: 	movq	%rax, 0x18(%rsp)
    000000c0: 	punpcklqdq	%xmm0, %xmm1
    000000c4: 	leaq	0x90(%rsp), %r12
    000000cc: 	movq	%rax, 0x90(%rsp)
    000000d4: 	movl	$0x5f38, %eax
    000000d9: 	movw	%ax, 0xa4(%rsp)
    000000e1: 	leaq	0x70(%rsp), %rax
    000000e6: 	movq	%rax, %rsi
    000000e9: 	movq	%rax, 0x28(%rsp)
    000000ee: 	movaps	%xmm2, 0x30(%rsp)
    000000f3: 	movaps	%xmm1, (%rsp)
    000000f7: 	movb	$0x0, 0xa7(%rsp)
    000000ff: 	movaps	%xmm3, 0x70(%rsp)
    00000104: 	movaps	%xmm4, 0x80(%rsp)
    0000010c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 268
    00000111: 	movl	$0x3e8, %ecx
    00000116: 	movq	%r13, %rdi
    00000119: 	leal	0x2(%rbx), %esi
    0000011c: 	movl	init_value(%rip), %r11d
    00000123: 	movabsq	$0x101010101010101, %r9
    0000012d: 	movzbl	%r11b, %r10d
    00000131: 	movl	%r11d, 0x20(%rsp)
    00000136: 	movq	%r10, %r8
    00000139: 	movb	%r11b, 0x47(%rsp)
    0000013e: 	imulq	%r9, %r8
    00000142: 	movq	%r8, %rax
    00000145: 	movq	%r8, 0x2f0(%rsp)
    0000014d: 	rep		stosq	%rax, %es:(%rdi)
    00000150: 	leaq	0x50(%rsp), %rax
    00000155: 	movzbl	%bl, %edi
    00000158: 	movabsq	$-0x7777777777777777, %rcx
    00000162: 	movq	%rax, 0x78(%rsp)
    00000167: 	leaq	0x60(%rsp), %rax
    0000016c: 	movq	%rax, 0x58(%rsp)
    00000171: 	leaq	0x47(%rsp), %rax
    00000176: 	movq	%rax, 0x68(%rsp)
    0000017b: 	movq	%rdi, %rax
    0000017e: 	mulq	%rcx
    00000181: 	movq	%rdx, %rax
    00000184: 	andq	$-0x10, %rdx
    00000188: 	shrq	$0x4, %rax
    0000018c: 	subq	%rax, %rdx
    0000018f: 	leaq	(%rdx,%rdx), %rax
    00000193: 	subq	%rax, %rdi
    00000196: 	movq	%r10, %rax
    00000199: 	mulq	%r9
    0000019c: 	movq	%rdi, 0x10(%rsp)
    000001a1: 	movzbl	%sil, %edi
    000001a5: 	movq	%rax, 0x2e0(%rsp)
    000001ad: 	movzbl	%r11b, %eax
    000001b1: 	addq	%r8, %rdx
    000001b4: 	imull	$0x1010101, %eax, %eax
    000001ba: 	movq	%rdx, 0x2e8(%rsp)
    000001c2: 	movzbl	%r11b, %edx
    000001c6: 	movl	%eax, 0x2f8(%rsp)
    000001cd: 	movl	%r11d, %eax
    000001d0: 	shll	$0x8, %eax
    000001d3: 	addl	%edx, %eax
    000001d5: 	movw	%ax, 0x2fc(%rsp)
    000001dd: 	movq	%rdi, %rax
    000001e0: 	mulq	%rcx
    000001e3: 	movq	%rdx, %rax
    000001e6: 	andq	$-0x10, %rdx
    000001ea: 	shrq	$0x4, %rax
    000001ee: 	subq	%rax, %rdx
    000001f1: 	movq	%rdi, %rax
    000001f4: 	movq	%rbp, %rdi
    000001f7: 	addq	%rdx, %rdx
    000001fa: 	subq	%rdx, %rax
    000001fd: 	movq	%rax, %xmm0
    00000202: 	leal	(%rbx,%rbx), %eax
    00000205: 	movzbl	%al, %eax
    00000208: 	punpcklqdq	%xmm0, %xmm0
    0000020c: 	divb	%sil
    0000020f: 	movaps	%xmm0, 0x100(%rsp)
    00000217: 	movaps	%xmm0, 0x110(%rsp)
    0000021f: 	movaps	%xmm0, 0x120(%rsp)
    00000227: 	movaps	%xmm0, 0x130(%rsp)
    0000022f: 	movaps	%xmm0, 0x140(%rsp)
    00000237: 	movaps	%xmm0, 0x150(%rsp)
    0000023f: 	movaps	%xmm0, 0x160(%rsp)
    00000247: 	movaps	%xmm0, 0x170(%rsp)
    0000024f: 	movaps	%xmm0, 0x180(%rsp)
    00000257: 	movaps	%xmm0, 0x190(%rsp)
    0000025f: 	movaps	%xmm0, 0x1a0(%rsp)
    00000267: 	movaps	%xmm0, 0x1b0(%rsp)
    0000026f: 	movaps	%xmm0, 0x1c0(%rsp)
    00000277: 	movaps	%xmm0, 0x1d0(%rsp)
    0000027f: 	movaps	%xmm0, 0x1e0(%rsp)
    00000287: 	leal	(%rax,%rbx), %esi
    0000028a: 	movzbl	%sil, %esi
    0000028e: 	movq	%rsi, %rax
    00000291: 	mulq	%rcx
    00000294: 	movq	%rdx, %rax
    00000297: 	andq	$-0x10, %rdx
    0000029b: 	shrq	$0x4, %rax
    0000029f: 	subq	%rax, %rdx
    000002a2: 	movq	%rsi, %rax
    000002a5: 	movq	%r12, %rsi
    000002a8: 	addq	%rdx, %rdx
    000002ab: 	subq	%rdx, %rax
    000002ae: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002b5: 	movq	%rax, %xmm0
    000002ba: 	punpcklqdq	%xmm0, %xmm0
    000002be: 	movaps	%xmm0, 0x1f0(%rsp)
    000002c6: 	movaps	%xmm0, 0x200(%rsp)
    000002ce: 	movaps	%xmm0, 0x210(%rsp)
    000002d6: 	movaps	%xmm0, 0x220(%rsp)
    000002de: 	movaps	%xmm0, 0x230(%rsp)
    000002e6: 	movdqa	(%rsp), %xmm1
    000002eb: 	movdqa	0x30(%rsp), %xmm2
    000002f1: 	movaps	%xmm0, 0x240(%rsp)
    000002f9: 	movaps	%xmm0, 0x250(%rsp)
    00000301: 	movaps	%xmm0, 0x260(%rsp)
    00000309: 	movaps	%xmm0, 0x270(%rsp)
    00000311: 	movaps	%xmm0, 0x280(%rsp)
    00000319: 	movaps	%xmm0, 0x290(%rsp)
    00000321: 	movaps	%xmm0, 0x2a0(%rsp)
    00000329: 	movaps	%xmm0, 0x2b0(%rsp)
    00000331: 	movaps	%xmm0, 0x2c0(%rsp)
    00000339: 	movaps	%xmm0, 0x2d0(%rsp)
    00000341: 	movaps	%xmm2, 0xd0(%rsp)
    00000349: 	movaps	%xmm1, 0xe0(%rsp)
    00000351: 	movaps	%xmm1, 0xf0(%rsp)
    00000359: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 857
    0000035e: 	callq	clock@PLT # Offset: 862
    00000363: 	movl	iterations(%rip), %ecx
    00000369: 	xorl	%r14d, %r14d
    0000036c: 	leaq	0x2240(%rsp), %rbx
    00000374: 	movq	%rax, start_time(%rip)
    0000037b: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000382: 	testl	%ecx, %ecx
    00000384: 	jle	.Ltmp1394 # Offset: 900
    00000386: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1397:
    00000390: 	movq	%r13, %rax
    00000393: 	pxor	%xmm0, %xmm0
    00000397: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1395:
    000003a0: 	paddb	(%rax), %xmm0
    000003a4: 	addq	$0x10, %rax
    000003a8: 	cmpq	%rbx, %rax
    000003ab: 	jne	.Ltmp1395 # Offset: 939
    000003ad: 	movdqa	%xmm0, %xmm1
    000003b1: 	movzbl	init_value(%rip), %edx
    000003b8: 	psrldq	$0x8, %xmm1
    000003bd: 	paddb	%xmm1, %xmm0
    000003c1: 	pxor	%xmm1, %xmm1
    000003c5: 	shll	$0x6, %edx
    000003c8: 	psadbw	%xmm1, %xmm0
    000003cc: 	movd	%xmm0, %eax
    000003d0: 	cmpb	%al, %dl
    000003d2: 	je	.Ltmp1396 # Offset: 978
    000003d4: 	movq	0xb0(%rsp), %rdx
    000003dc: 	movq	%r15, %rsi
    000003df: 	movl	$0x1, %edi
    000003e4: 	xorl	%eax, %eax
    000003e6: 	callq	__printf_chk@PLT # Offset: 998
    000003eb: 	movl	iterations(%rip), %ecx
.Ltmp1396:
    000003f1: 	addl	$0x1, %r14d
    000003f5: 	cmpl	%ecx, %r14d
    000003f8: 	jl	.Ltmp1397 # Offset: 1016
.Ltmp1394:
    000003fa: 	movq	%rbp, %rsi
    000003fd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000404: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1028
    00000409: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000410: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000417: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000041e: 	je	.Ltmp1398 # Offset: 1054
.Ltmp1554:
    00000424: 	movq	-0x20(%rax), %r14
    00000428: 	callq	clock@PLT # Offset: 1064
    0000042d: 	pxor	%xmm0, %xmm0
    00000431: 	movq	%rax, end_time(%rip)
    00000438: 	movq	%r14, %rdi
    0000043b: 	subq	start_time(%rip), %rax
    00000442: 	cvtsi2sd	%rax, %xmm0
    00000447: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000044f: 	callq	_Z13record_resultdPKc # Offset: 1103
    00000454: 	movq	0xb0(%rsp), %rdi
    0000045c: 	leaq	0xc0(%rsp), %rax
    00000464: 	movq	%rax, (%rsp)
    00000468: 	cmpq	%rax, %rdi
    0000046b: 	je	.Ltmp1399 # Offset: 1131
    0000046d: 	movq	0xc0(%rsp), %rax
    00000475: 	leaq	0x1(%rax), %rsi
    00000479: 	callq	_ZdlPvm@PLT # Offset: 1145
.Ltmp1399:
    0000047e: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000485: 	movq	%r12, %rsi
    00000488: 	movq	%rbp, %rdi
    0000048b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1163
    00000490: 	callq	clock@PLT # Offset: 1168
    00000495: 	movl	iterations(%rip), %ecx
    0000049b: 	xorl	%r14d, %r14d
    0000049e: 	leaq	0x2240(%rsp), %rbx
    000004a6: 	movq	%rax, start_time(%rip)
    000004ad: 	leaq	DATAat0x1c1c8(%rip), %r15
    000004b4: 	testl	%ecx, %ecx
    000004b6: 	jle	.Ltmp1400 # Offset: 1206
    000004b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1403:
    000004c0: 	movq	%r13, %rax
    000004c3: 	pxor	%xmm0, %xmm0
    000004c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1401:
    000004d0: 	paddb	(%rax), %xmm0
    000004d4: 	addq	$0x10, %rax
    000004d8: 	cmpq	%rbx, %rax
    000004db: 	jne	.Ltmp1401 # Offset: 1243
    000004dd: 	movdqa	%xmm0, %xmm1
    000004e1: 	movzbl	init_value(%rip), %edx
    000004e8: 	psrldq	$0x8, %xmm1
    000004ed: 	paddb	%xmm1, %xmm0
    000004f1: 	pxor	%xmm1, %xmm1
    000004f5: 	shll	$0x6, %edx
    000004f8: 	psadbw	%xmm1, %xmm0
    000004fc: 	movd	%xmm0, %eax
    00000500: 	cmpb	%al, %dl
    00000502: 	je	.Ltmp1402 # Offset: 1282
    00000504: 	movq	0xb0(%rsp), %rdx
    0000050c: 	movq	%r15, %rsi
    0000050f: 	movl	$0x1, %edi
    00000514: 	xorl	%eax, %eax
    00000516: 	callq	__printf_chk@PLT # Offset: 1302
    0000051b: 	movl	iterations(%rip), %ecx
.Ltmp1402:
    00000521: 	addl	$0x1, %r14d
    00000525: 	cmpl	%ecx, %r14d
    00000528: 	jl	.Ltmp1403 # Offset: 1320
.Ltmp1400:
    0000052a: 	movq	%rbp, %rsi
    0000052d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000534: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1332
    00000539: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000540: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000547: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000054e: 	je	.Ltmp1404 # Offset: 1358
.Ltmp1553:
    00000554: 	movq	-0x20(%rax), %r14
    00000558: 	callq	clock@PLT # Offset: 1368
    0000055d: 	pxor	%xmm0, %xmm0
    00000561: 	movq	%rax, end_time(%rip)
    00000568: 	movq	%r14, %rdi
    0000056b: 	subq	start_time(%rip), %rax
    00000572: 	cvtsi2sd	%rax, %xmm0
    00000577: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000057f: 	callq	_Z13record_resultdPKc # Offset: 1407
    00000584: 	movq	0xb0(%rsp), %rdi
    0000058c: 	cmpq	(%rsp), %rdi
    00000590: 	je	.Ltmp1405 # Offset: 1424
    00000592: 	movq	0xc0(%rsp), %rax
    0000059a: 	leaq	0x1(%rax), %rsi
    0000059e: 	callq	_ZdlPvm@PLT # Offset: 1438
.Ltmp1405:
    000005a3: 	leaq	DATAat0x1c208(%rip), %rdx
    000005aa: 	movq	%r12, %rsi
    000005ad: 	movq	%rbp, %rdi
    000005b0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1456
    000005b5: 	callq	clock@PLT # Offset: 1461
    000005ba: 	movl	iterations(%rip), %ecx
    000005c0: 	xorl	%r14d, %r14d
    000005c3: 	leaq	0x2240(%rsp), %rbx
    000005cb: 	movq	%rax, start_time(%rip)
    000005d2: 	leaq	DATAat0x1c1c8(%rip), %r15
    000005d9: 	testl	%ecx, %ecx
    000005db: 	jle	.Ltmp1406 # Offset: 1499
    000005dd: 	nopl	(%rax) # Size: 3
.Ltmp1409:
    000005e0: 	movq	%r13, %rax
    000005e3: 	pxor	%xmm0, %xmm0
    000005e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1407:
    000005f0: 	paddb	(%rax), %xmm0
    000005f4: 	addq	$0x10, %rax
    000005f8: 	cmpq	%rax, %rbx
    000005fb: 	jne	.Ltmp1407 # Offset: 1531
    000005fd: 	movdqa	%xmm0, %xmm1
    00000601: 	movzbl	init_value(%rip), %edx
    00000608: 	psrldq	$0x8, %xmm1
    0000060d: 	paddb	%xmm1, %xmm0
    00000611: 	pxor	%xmm1, %xmm1
    00000615: 	shll	$0x6, %edx
    00000618: 	psadbw	%xmm1, %xmm0
    0000061c: 	movd	%xmm0, %eax
    00000620: 	cmpb	%al, %dl
    00000622: 	je	.Ltmp1408 # Offset: 1570
    00000624: 	movq	0xb0(%rsp), %rdx
    0000062c: 	movq	%r15, %rsi
    0000062f: 	movl	$0x1, %edi
    00000634: 	xorl	%eax, %eax
    00000636: 	callq	__printf_chk@PLT # Offset: 1590
    0000063b: 	movl	iterations(%rip), %ecx
.Ltmp1408:
    00000641: 	addl	$0x1, %r14d
    00000645: 	cmpl	%ecx, %r14d
    00000648: 	jl	.Ltmp1409 # Offset: 1608
.Ltmp1406:
    0000064a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000651: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000658: 	subq	$0x20, %rax
    0000065c: 	cmpq	%rax, %rbx
    0000065f: 	je	.Ltmp1410 # Offset: 1631
    00000665: 	leaq	0x10(%rbx), %rdi
    00000669: 	movq	0xb8(%rsp), %r14
    00000671: 	movq	%rdi, (%rbx)
    00000674: 	movq	0xb0(%rsp), %r15
    0000067c: 	movq	%r15, %rax
    0000067f: 	addq	%r14, %rax
    00000682: 	je	.Ltmp1411 # Offset: 1666
    00000684: 	testq	%r15, %r15
    00000687: 	je	.Ltmp1412 # Offset: 1671
.Ltmp1411:
    0000068d: 	movq	%r14, 0x48(%rsp)
    00000692: 	cmpq	$0xf, %r14
    00000696: 	ja	.Ltmp1413 # Offset: 1686
    0000069c: 	cmpq	$0x1, %r14
    000006a0: 	jne	.Ltmp1414 # Offset: 1696
    000006a6: 	movzbl	(%r15), %eax
    000006aa: 	movb	%al, 0x10(%rbx)
.Ltmp1539:
    000006ad: 	movq	%r14, 0x8(%rbx)
    000006b1: 	movb	$0x0, (%rdi,%r14)
    000006b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006c4: 	addq	$0x20, %rax
    000006c8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006cf: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000006d6: 	je	.Ltmp1415 # Offset: 1750
.Ltmp1552:
    000006dc: 	movq	-0x20(%rax), %r14
    000006e0: 	callq	clock@PLT # Offset: 1760
    000006e5: 	pxor	%xmm0, %xmm0
    000006e9: 	movq	%rax, end_time(%rip)
    000006f0: 	movq	%r14, %rdi
    000006f3: 	subq	start_time(%rip), %rax
    000006fa: 	cvtsi2sd	%rax, %xmm0
    000006ff: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000707: 	callq	_Z13record_resultdPKc # Offset: 1799
    0000070c: 	movq	0xb0(%rsp), %rdi
    00000714: 	cmpq	(%rsp), %rdi
    00000718: 	je	.Ltmp1416 # Offset: 1816
    0000071a: 	movq	0xc0(%rsp), %rax
    00000722: 	leaq	0x1(%rax), %rsi
    00000726: 	callq	_ZdlPvm@PLT # Offset: 1830
.Ltmp1416:
    0000072b: 	leaq	DATAat0x1c21d(%rip), %rdx
    00000732: 	movq	%r12, %rsi
    00000735: 	movq	%rbp, %rdi
    00000738: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1848
    0000073d: 	callq	clock@PLT # Offset: 1853
    00000742: 	movl	iterations(%rip), %ecx
    00000748: 	xorl	%r14d, %r14d
    0000074b: 	leaq	0x2240(%rsp), %rbx
    00000753: 	movq	%rax, start_time(%rip)
    0000075a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000761: 	testl	%ecx, %ecx
    00000763: 	jle	.Ltmp1417 # Offset: 1891
    00000765: 	nopl	(%rax) # Size: 3
.Ltmp1420:
    00000768: 	movq	%r13, %rax
    0000076b: 	pxor	%xmm0, %xmm0
    0000076f: 	nop # Size: 1
.Ltmp1418:
    00000770: 	paddb	(%rax), %xmm0
    00000774: 	addq	$0x10, %rax
    00000778: 	cmpq	%rbx, %rax
    0000077b: 	jne	.Ltmp1418 # Offset: 1915
    0000077d: 	movdqa	%xmm0, %xmm1
    00000781: 	movzbl	init_value(%rip), %edx
    00000788: 	psrldq	$0x8, %xmm1
    0000078d: 	paddb	%xmm1, %xmm0
    00000791: 	pxor	%xmm1, %xmm1
    00000795: 	shll	$0x6, %edx
    00000798: 	psadbw	%xmm1, %xmm0
    0000079c: 	movd	%xmm0, %eax
    000007a0: 	cmpb	%al, %dl
    000007a2: 	je	.Ltmp1419 # Offset: 1954
    000007a4: 	movq	0xb0(%rsp), %rdx
    000007ac: 	movq	%r15, %rsi
    000007af: 	movl	$0x1, %edi
    000007b4: 	xorl	%eax, %eax
    000007b6: 	callq	__printf_chk@PLT # Offset: 1974
    000007bb: 	movl	iterations(%rip), %ecx
.Ltmp1419:
    000007c1: 	addl	$0x1, %r14d
    000007c5: 	cmpl	%ecx, %r14d
    000007c8: 	jl	.Ltmp1420 # Offset: 1992
.Ltmp1417:
    000007ca: 	movq	%rbp, %rsi
    000007cd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2004
    000007d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007e0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007e7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007ee: 	je	.Ltmp1421 # Offset: 2030
.Ltmp1558:
    000007f4: 	movq	-0x20(%rax), %r14
    000007f8: 	callq	clock@PLT # Offset: 2040
    000007fd: 	pxor	%xmm0, %xmm0
    00000801: 	movq	%rax, end_time(%rip)
    00000808: 	movq	%r14, %rdi
    0000080b: 	subq	start_time(%rip), %rax
    00000812: 	cvtsi2sd	%rax, %xmm0
    00000817: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000081f: 	callq	_Z13record_resultdPKc # Offset: 2079
    00000824: 	movq	0xb0(%rsp), %rdi
    0000082c: 	cmpq	(%rsp), %rdi
    00000830: 	je	.Ltmp1422 # Offset: 2096
    00000832: 	movq	0xc0(%rsp), %rax
    0000083a: 	leaq	0x1(%rax), %rsi
    0000083e: 	callq	_ZdlPvm@PLT # Offset: 2110
.Ltmp1422:
    00000843: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000084a: 	movq	%r12, %rsi
    0000084d: 	movq	%rbp, %rdi
    00000850: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2128
    00000855: 	callq	clock@PLT # Offset: 2133
    0000085a: 	movl	iterations(%rip), %ecx
    00000860: 	xorl	%r14d, %r14d
    00000863: 	leaq	0x2240(%rsp), %rbx
    0000086b: 	movq	%rax, start_time(%rip)
    00000872: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000879: 	testl	%ecx, %ecx
    0000087b: 	jle	.Ltmp1423 # Offset: 2171
    0000087d: 	nopl	(%rax) # Size: 3
.Ltmp1426:
    00000880: 	movq	%r13, %rax
    00000883: 	pxor	%xmm0, %xmm0
    00000887: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1424:
    00000890: 	paddb	(%rax), %xmm0
    00000894: 	addq	$0x10, %rax
    00000898: 	cmpq	%rax, %rbx
    0000089b: 	jne	.Ltmp1424 # Offset: 2203
    0000089d: 	movdqa	%xmm0, %xmm1
    000008a1: 	movzbl	init_value(%rip), %edx
    000008a8: 	psrldq	$0x8, %xmm1
    000008ad: 	paddb	%xmm1, %xmm0
    000008b1: 	pxor	%xmm1, %xmm1
    000008b5: 	shll	$0x6, %edx
    000008b8: 	psadbw	%xmm1, %xmm0
    000008bc: 	movd	%xmm0, %eax
    000008c0: 	cmpb	%al, %dl
    000008c2: 	je	.Ltmp1425 # Offset: 2242
    000008c4: 	movq	0xb0(%rsp), %rdx
    000008cc: 	movq	%r15, %rsi
    000008cf: 	movl	$0x1, %edi
    000008d4: 	xorl	%eax, %eax
    000008d6: 	callq	__printf_chk@PLT # Offset: 2262
    000008db: 	movl	iterations(%rip), %ecx
.Ltmp1425:
    000008e1: 	addl	$0x1, %r14d
    000008e5: 	cmpl	%ecx, %r14d
    000008e8: 	jl	.Ltmp1426 # Offset: 2280
.Ltmp1423:
    000008ea: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000008f8: 	subq	$0x20, %rax
    000008fc: 	cmpq	%rax, %rbx
    000008ff: 	je	.Ltmp1427 # Offset: 2303
    00000905: 	leaq	0x10(%rbx), %rdi
    00000909: 	movq	0xb8(%rsp), %r14
    00000911: 	movq	%rdi, (%rbx)
    00000914: 	movq	0xb0(%rsp), %r15
    0000091c: 	movq	%r15, %rax
    0000091f: 	addq	%r14, %rax
    00000922: 	je	.Ltmp1428 # Offset: 2338
    00000924: 	testq	%r15, %r15
    00000927: 	je	.Ltmp1429 # Offset: 2343
.Ltmp1428:
    0000092d: 	movq	%r14, 0x48(%rsp)
    00000932: 	cmpq	$0xf, %r14
    00000936: 	ja	.Ltmp1430 # Offset: 2358
    0000093c: 	cmpq	$0x1, %r14
    00000940: 	jne	.Ltmp1431 # Offset: 2368
    00000946: 	movzbl	(%r15), %eax
    0000094a: 	movb	%al, 0x10(%rbx)
.Ltmp1593:
    0000094d: 	movq	%r14, 0x8(%rbx)
    00000951: 	movb	$0x0, (%rdi,%r14)
    00000956: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000095d: 	addq	$0x20, %rax
    00000961: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1567:
    00000968: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000096f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000976: 	je	.Ltmp1432 # Offset: 2422
.Ltmp1566:
    0000097c: 	movq	-0x20(%rax), %r14
    00000980: 	callq	clock@PLT # Offset: 2432
    00000985: 	pxor	%xmm0, %xmm0
    00000989: 	movq	%rax, end_time(%rip)
    00000990: 	movq	%r14, %rdi
    00000993: 	subq	start_time(%rip), %rax
    0000099a: 	cvtsi2sd	%rax, %xmm0
    0000099f: 	divsd	DATAat0x1c370(%rip), %xmm0
    000009a7: 	callq	_Z13record_resultdPKc # Offset: 2471
    000009ac: 	movq	0xb0(%rsp), %rdi
    000009b4: 	cmpq	(%rsp), %rdi
    000009b8: 	je	.Ltmp1433 # Offset: 2488
    000009ba: 	movq	0xc0(%rsp), %rax
    000009c2: 	leaq	0x1(%rax), %rsi
    000009c6: 	callq	_ZdlPvm@PLT # Offset: 2502
.Ltmp1433:
    000009cb: 	leaq	DATAat0x1c24f(%rip), %rdx
    000009d2: 	movq	%r12, %rsi
    000009d5: 	movq	%rbp, %rdi
    000009d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2520
    000009dd: 	callq	clock@PLT # Offset: 2525
    000009e2: 	movl	iterations(%rip), %ecx
    000009e8: 	xorl	%r14d, %r14d
    000009eb: 	leaq	0x2240(%rsp), %rbx
    000009f3: 	movq	%rax, start_time(%rip)
    000009fa: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000a01: 	testl	%ecx, %ecx
    00000a03: 	jle	.Ltmp1434 # Offset: 2563
    00000a05: 	nopl	(%rax) # Size: 3
.Ltmp1437:
    00000a08: 	movq	%r13, %rax
    00000a0b: 	pxor	%xmm0, %xmm0
    00000a0f: 	nop # Size: 1
.Ltmp1435:
    00000a10: 	paddb	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	cmpq	%rax, %rbx
    00000a1b: 	jne	.Ltmp1435 # Offset: 2587
    00000a1d: 	movdqa	%xmm0, %xmm1
    00000a21: 	movzbl	init_value(%rip), %edx
    00000a28: 	psrldq	$0x8, %xmm1
    00000a2d: 	paddb	%xmm1, %xmm0
    00000a31: 	pxor	%xmm1, %xmm1
    00000a35: 	shll	$0x6, %edx
    00000a38: 	psadbw	%xmm1, %xmm0
    00000a3c: 	movd	%xmm0, %eax
    00000a40: 	cmpb	%al, %dl
    00000a42: 	je	.Ltmp1436 # Offset: 2626
    00000a44: 	movq	0xb0(%rsp), %rdx
    00000a4c: 	movq	%r15, %rsi
    00000a4f: 	movl	$0x1, %edi
    00000a54: 	xorl	%eax, %eax
    00000a56: 	callq	__printf_chk@PLT # Offset: 2646
    00000a5b: 	movl	iterations(%rip), %ecx
.Ltmp1436:
    00000a61: 	addl	$0x1, %r14d
    00000a65: 	cmpl	%ecx, %r14d
    00000a68: 	jl	.Ltmp1437 # Offset: 2664
.Ltmp1434:
    00000a6a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a71: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a78: 	subq	$0x20, %rax
    00000a7c: 	cmpq	%rax, %rbx
    00000a7f: 	je	.Ltmp1438 # Offset: 2687
    00000a85: 	leaq	0x10(%rbx), %rdi
    00000a89: 	movq	0xb8(%rsp), %r13
    00000a91: 	movq	%rdi, (%rbx)
    00000a94: 	movq	0xb0(%rsp), %r14
    00000a9c: 	movq	%r14, %rax
    00000a9f: 	addq	%r13, %rax
    00000aa2: 	je	.Ltmp1439 # Offset: 2722
    00000aa4: 	testq	%r14, %r14
    00000aa7: 	je	.Ltmp1440 # Offset: 2727
.Ltmp1439:
    00000aad: 	movq	%r13, 0x48(%rsp)
    00000ab2: 	cmpq	$0xf, %r13
    00000ab6: 	ja	.Ltmp1441 # Offset: 2742
    00000abc: 	cmpq	$0x1, %r13
    00000ac0: 	jne	.Ltmp1442 # Offset: 2752
    00000ac6: 	movzbl	(%r14), %eax
    00000aca: 	movb	%al, 0x10(%rbx)
.Ltmp1595:
    00000acd: 	movq	%r13, 0x8(%rbx)
    00000ad1: 	movb	$0x0, (%rdi,%r13)
    00000ad6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000add: 	addq	$0x20, %rax
    00000ae1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1561:
    00000ae8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000aef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000af6: 	je	.Ltmp1443 # Offset: 2806
.Ltmp1560:
    00000afc: 	movq	-0x20(%rax), %r13
    00000b00: 	callq	clock@PLT # Offset: 2816
    00000b05: 	pxor	%xmm0, %xmm0
    00000b09: 	movq	%rax, end_time(%rip)
    00000b10: 	movq	%r13, %rdi
    00000b13: 	subq	start_time(%rip), %rax
    00000b1a: 	cvtsi2sd	%rax, %xmm0
    00000b1f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b27: 	callq	_Z13record_resultdPKc # Offset: 2855
    00000b2c: 	movq	0xb0(%rsp), %rdi
    00000b34: 	cmpq	(%rsp), %rdi
    00000b38: 	je	.Ltmp1444 # Offset: 2872
    00000b3a: 	movq	0xc0(%rsp), %rax
    00000b42: 	leaq	0x1(%rax), %rsi
    00000b46: 	callq	_ZdlPvm@PLT # Offset: 2886
.Ltmp1444:
    00000b4b: 	leaq	DATAat0x1c265(%rip), %rdx
    00000b52: 	movq	%r12, %rsi
    00000b55: 	movq	%rbp, %rdi
    00000b58: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2904
    00000b5d: 	callq	clock@PLT # Offset: 2909
    00000b62: 	movzbl	0x20(%rsp), %ebx
    00000b67: 	xorl	%r13d, %r13d
    00000b6a: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000b71: 	movq	%rax, start_time(%rip)
    00000b78: 	movl	iterations(%rip), %eax
    00000b7e: 	shll	$0x6, %ebx
    00000b81: 	testl	%eax, %eax
    00000b83: 	jle	.Ltmp1445 # Offset: 2947
    00000b85: 	nopl	(%rax) # Size: 3
.Ltmp1540:
    00000b88: 	movzbl	init_value(%rip), %eax
    00000b8f: 	shll	$0x6, %eax
    00000b92: 	cmpb	%al, %bl
    00000b94: 	jne	.Ltmp1446 # Offset: 2964
.Ltmp1445:
    00000b9a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ba1: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000ba8: 	subq	$0x20, %rax
    00000bac: 	cmpq	%rax, %r14
    00000baf: 	je	.Ltmp1447 # Offset: 2991
    00000bb5: 	leaq	0x10(%r14), %rdi
    00000bb9: 	movq	0xb8(%rsp), %r13
    00000bc1: 	movq	%rdi, (%r14)
    00000bc4: 	movq	0xb0(%rsp), %r15
    00000bcc: 	movq	%r15, %rax
    00000bcf: 	addq	%r13, %rax
    00000bd2: 	je	.Ltmp1448 # Offset: 3026
    00000bd4: 	testq	%r15, %r15
    00000bd7: 	je	.Ltmp1449 # Offset: 3031
.Ltmp1448:
    00000bdd: 	movq	%r13, 0x48(%rsp)
    00000be2: 	cmpq	$0xf, %r13
    00000be6: 	ja	.Ltmp1450 # Offset: 3046
    00000bec: 	cmpq	$0x1, %r13
    00000bf0: 	jne	.Ltmp1451 # Offset: 3056
    00000bf6: 	movzbl	(%r15), %eax
    00000bfa: 	movb	%al, 0x10(%r14)
.Ltmp1587:
    00000bfe: 	movq	%r13, 0x8(%r14)
    00000c02: 	movb	$0x0, (%rdi,%r13)
    00000c07: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c0e: 	addq	$0x20, %rax
    00000c12: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1559:
    00000c19: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c20: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c27: 	je	.Ltmp1452 # Offset: 3111
.Ltmp1556:
    00000c2d: 	movq	-0x20(%rax), %r13
    00000c31: 	callq	clock@PLT # Offset: 3121
    00000c36: 	pxor	%xmm0, %xmm0
    00000c3a: 	movq	%rax, end_time(%rip)
    00000c41: 	movq	%r13, %rdi
    00000c44: 	subq	start_time(%rip), %rax
    00000c4b: 	cvtsi2sd	%rax, %xmm0
    00000c50: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000c58: 	callq	_Z13record_resultdPKc # Offset: 3160
    00000c5d: 	movq	0xb0(%rsp), %rdi
    00000c65: 	cmpq	(%rsp), %rdi
    00000c69: 	je	.Ltmp1453 # Offset: 3177
    00000c6b: 	movq	0xc0(%rsp), %rax
    00000c73: 	leaq	0x1(%rax), %rsi
    00000c77: 	callq	_ZdlPvm@PLT # Offset: 3191
.Ltmp1453:
    00000c7c: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000c83: 	movq	%r12, %rsi
    00000c86: 	movq	%rbp, %rdi
    00000c89: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3209
    00000c8e: 	callq	clock@PLT # Offset: 3214
    00000c93: 	movl	iterations(%rip), %r15d
    00000c9a: 	xorl	%r13d, %r13d
    00000c9d: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000ca4: 	movq	%rax, start_time(%rip)
    00000cab: 	testl	%r15d, %r15d
    00000cae: 	jle	.Ltmp1454 # Offset: 3246
.Ltmp1542:
    00000cb0: 	movzbl	init_value(%rip), %eax
    00000cb7: 	shll	$0x6, %eax
    00000cba: 	cmpb	%al, %bl
    00000cbc: 	jne	.Ltmp1455 # Offset: 3260
.Ltmp1454:
    00000cc2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000cc9: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000cd0: 	subq	$0x20, %rax
    00000cd4: 	cmpq	%rax, %r14
    00000cd7: 	je	.Ltmp1456 # Offset: 3287
    00000cdd: 	leaq	0x10(%r14), %rdi
    00000ce1: 	movq	0xb8(%rsp), %r13
    00000ce9: 	movq	%rdi, (%r14)
    00000cec: 	movq	0xb0(%rsp), %r15
    00000cf4: 	movq	%r15, %rax
    00000cf7: 	addq	%r13, %rax
    00000cfa: 	je	.Ltmp1457 # Offset: 3322
    00000cfc: 	testq	%r15, %r15
    00000cff: 	je	.Ltmp1458 # Offset: 3327
.Ltmp1457:
    00000d05: 	movq	%r13, 0x48(%rsp)
    00000d0a: 	cmpq	$0xf, %r13
    00000d0e: 	ja	.Ltmp1459 # Offset: 3342
    00000d14: 	cmpq	$0x1, %r13
    00000d18: 	jne	.Ltmp1460 # Offset: 3352
    00000d1e: 	movzbl	(%r15), %eax
    00000d22: 	movb	%al, 0x10(%r14)
.Ltmp1585:
    00000d26: 	movq	%r13, 0x8(%r14)
    00000d2a: 	movb	$0x0, (%rdi,%r13)
    00000d2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d36: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d3d: 	addq	$0x20, %rax
    00000d41: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d48: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000d4f: 	je	.Ltmp1461 # Offset: 3407
.Ltmp1557:
    00000d55: 	movq	-0x20(%rax), %r13
    00000d59: 	callq	clock@PLT # Offset: 3417
    00000d5e: 	pxor	%xmm0, %xmm0
    00000d62: 	movq	%rax, end_time(%rip)
    00000d69: 	movq	%r13, %rdi
    00000d6c: 	subq	start_time(%rip), %rax
    00000d73: 	cvtsi2sd	%rax, %xmm0
    00000d78: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d80: 	callq	_Z13record_resultdPKc # Offset: 3456
    00000d85: 	movq	0xb0(%rsp), %rdi
    00000d8d: 	cmpq	(%rsp), %rdi
    00000d91: 	je	.Ltmp1462 # Offset: 3473
    00000d93: 	movq	0xc0(%rsp), %rax
    00000d9b: 	leaq	0x1(%rax), %rsi
    00000d9f: 	callq	_ZdlPvm@PLT # Offset: 3487
.Ltmp1462:
    00000da4: 	leaq	DATAat0x1c289(%rip), %rdx
    00000dab: 	movq	%r12, %rsi
    00000dae: 	movq	%rbp, %rdi
    00000db1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3505
    00000db6: 	callq	clock@PLT # Offset: 3510
    00000dbb: 	movl	iterations(%rip), %r11d
    00000dc2: 	xorl	%r13d, %r13d
    00000dc5: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000dcc: 	movq	%rax, start_time(%rip)
    00000dd3: 	testl	%r11d, %r11d
    00000dd6: 	jle	.Ltmp1463 # Offset: 3542
.Ltmp1541:
    00000dd8: 	movzbl	init_value(%rip), %eax
    00000ddf: 	shll	$0x6, %eax
    00000de2: 	cmpb	%al, %bl
    00000de4: 	jne	.Ltmp1464 # Offset: 3556
.Ltmp1463:
    00000dea: 	movq	%rbp, %rsi
    00000ded: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000df4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3572
    00000df9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e0e: 	je	.Ltmp1465 # Offset: 3598
.Ltmp1555:
    00000e14: 	movq	-0x20(%rax), %r13
    00000e18: 	callq	clock@PLT # Offset: 3608
    00000e1d: 	pxor	%xmm0, %xmm0
    00000e21: 	movq	%rax, end_time(%rip)
    00000e28: 	movq	%r13, %rdi
    00000e2b: 	subq	start_time(%rip), %rax
    00000e32: 	cvtsi2sd	%rax, %xmm0
    00000e37: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e3f: 	callq	_Z13record_resultdPKc # Offset: 3647
    00000e44: 	movq	0xb0(%rsp), %rdi
    00000e4c: 	cmpq	(%rsp), %rdi
    00000e50: 	je	.Ltmp1466 # Offset: 3664
    00000e52: 	movq	0xc0(%rsp), %rax
    00000e5a: 	leaq	0x1(%rax), %rsi
    00000e5e: 	callq	_ZdlPvm@PLT # Offset: 3678
.Ltmp1466:
    00000e63: 	leaq	DATAat0x1c298(%rip), %rdx
    00000e6a: 	movq	%r12, %rsi
    00000e6d: 	movq	%rbp, %rdi
    00000e70: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3696
    00000e75: 	movq	0x28(%rsp), %rdi
    00000e7a: 	movq	%rbp, %rdx
    00000e7d: 	movl	$0x1f40, %esi
    00000e82: 	callq	_Z22test_struct4_deref_optIh12test_struct1IhEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3714
    00000e87: 	movq	0xb0(%rsp), %rdi
    00000e8f: 	cmpq	(%rsp), %rdi
    00000e93: 	je	.Ltmp1467 # Offset: 3731
    00000e95: 	movq	0xc0(%rsp), %rax
    00000e9d: 	leaq	0x1(%rax), %rsi
    00000ea1: 	callq	_ZdlPvm@PLT # Offset: 3745
.Ltmp1467:
    00000ea6: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000ead: 	movq	%r12, %rsi
    00000eb0: 	movq	%rbp, %rdi
    00000eb3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3763
    00000eb8: 	callq	clock@PLT # Offset: 3768
    00000ebd: 	movl	iterations(%rip), %r10d
    00000ec4: 	xorl	%r13d, %r13d
    00000ec7: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000ece: 	movq	%rax, start_time(%rip)
    00000ed5: 	testl	%r10d, %r10d
    00000ed8: 	jle	.Ltmp1468 # Offset: 3800
.Ltmp1549:
    00000eda: 	movzbl	init_value(%rip), %eax
    00000ee1: 	shll	$0x6, %eax
    00000ee4: 	cmpb	%al, %bl
    00000ee6: 	jne	.Ltmp1469 # Offset: 3814
.Ltmp1468:
    00000eec: 	movq	%rbp, %rsi
    00000eef: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ef6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3830
    00000efb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f02: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f09: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f10: 	je	.Ltmp1470 # Offset: 3856
.Ltmp1562:
    00000f16: 	movq	-0x20(%rax), %r13
    00000f1a: 	callq	clock@PLT # Offset: 3866
    00000f1f: 	pxor	%xmm0, %xmm0
    00000f23: 	movq	%rax, end_time(%rip)
    00000f2a: 	movq	%r13, %rdi
    00000f2d: 	subq	start_time(%rip), %rax
    00000f34: 	cvtsi2sd	%rax, %xmm0
    00000f39: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000f41: 	callq	_Z13record_resultdPKc # Offset: 3905
    00000f46: 	movq	0xb0(%rsp), %rdi
    00000f4e: 	cmpq	(%rsp), %rdi
    00000f52: 	je	.Ltmp1471 # Offset: 3922
    00000f54: 	movq	0xc0(%rsp), %rax
    00000f5c: 	leaq	0x1(%rax), %rsi
    00000f60: 	callq	_ZdlPvm@PLT # Offset: 3936
.Ltmp1471:
    00000f65: 	leaq	DATAat0x1c2be(%rip), %rdx
    00000f6c: 	movq	%r12, %rsi
    00000f6f: 	movq	%rbp, %rdi
    00000f72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3954
    00000f77: 	callq	clock@PLT # Offset: 3959
    00000f7c: 	movl	iterations(%rip), %r9d
    00000f83: 	xorl	%r13d, %r13d
    00000f86: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000f8d: 	movq	%rax, start_time(%rip)
    00000f94: 	testl	%r9d, %r9d
    00000f97: 	jle	.Ltmp1472 # Offset: 3991
    00000f99: 	nopl	(%rax) # Size: 7
.Ltmp1548:
    00000fa0: 	movzbl	init_value(%rip), %eax
    00000fa7: 	shll	$0x6, %eax
    00000faa: 	cmpb	%al, %bl
    00000fac: 	jne	.Ltmp1473 # Offset: 4012
.Ltmp1472:
    00000fb2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fb9: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000fc0: 	subq	$0x20, %rax
    00000fc4: 	cmpq	%rax, %rbx
    00000fc7: 	je	.Ltmp1474 # Offset: 4039
    00000fcd: 	leaq	0x10(%rbx), %rdi
    00000fd1: 	movq	0xb8(%rsp), %r13
    00000fd9: 	movq	%rdi, (%rbx)
    00000fdc: 	movq	0xb0(%rsp), %r14
    00000fe4: 	movq	%r14, %rax
    00000fe7: 	addq	%r13, %rax
    00000fea: 	je	.Ltmp1475 # Offset: 4074
    00000fec: 	testq	%r14, %r14
    00000fef: 	je	.Ltmp1476 # Offset: 4079
.Ltmp1475:
    00000ff5: 	movq	%r13, 0x48(%rsp)
    00000ffa: 	cmpq	$0xf, %r13
    00000ffe: 	ja	.Ltmp1477 # Offset: 4094
    00001004: 	cmpq	$0x1, %r13
    00001008: 	jne	.Ltmp1478 # Offset: 4104
    0000100e: 	movzbl	(%r14), %eax
    00001012: 	movb	%al, 0x10(%rbx)
.Ltmp1591:
    00001015: 	movq	%r13, 0x8(%rbx)
    00001019: 	movb	$0x0, (%rdi,%r13)
    0000101e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001025: 	addq	$0x20, %rax
    00001029: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1565:
    00001030: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001037: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000103e: 	je	.Ltmp1479 # Offset: 4158
.Ltmp1563:
    00001044: 	movq	-0x20(%rax), %r13
    00001048: 	callq	clock@PLT # Offset: 4168
    0000104d: 	pxor	%xmm0, %xmm0
    00001051: 	movq	%rax, end_time(%rip)
    00001058: 	movq	%r13, %rdi
    0000105b: 	subq	start_time(%rip), %rax
    00001062: 	cvtsi2sd	%rax, %xmm0
    00001067: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000106f: 	callq	_Z13record_resultdPKc # Offset: 4207
    00001074: 	movq	0xb0(%rsp), %rdi
    0000107c: 	cmpq	(%rsp), %rdi
    00001080: 	je	.Ltmp1480 # Offset: 4224
    00001082: 	movq	0xc0(%rsp), %rax
    0000108a: 	leaq	0x1(%rax), %rsi
    0000108e: 	callq	_ZdlPvm@PLT # Offset: 4238
.Ltmp1480:
    00001093: 	leaq	DATAat0x1c225(%rip), %rdx
    0000109a: 	movq	%r12, %rsi
    0000109d: 	movq	%rbp, %rdi
    000010a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4256
    000010a5: 	callq	clock@PLT # Offset: 4261
    000010aa: 	movl	iterations(%rip), %r8d
    000010b1: 	xorl	%r13d, %r13d
    000010b4: 	leaq	DATAat0x1c1c8(%rip), %r14
    000010bb: 	movq	%rax, start_time(%rip)
    000010c2: 	movq	0x10(%rsp), %rax
    000010c7: 	leaq	(,%rax,8), %r15
    000010cf: 	movq	0x1f0(%rsp,%r15), %rax
    000010d7: 	movq	0x100(%rsp,%rax,8), %rax
    000010df: 	movzbl	0x2e0(%rsp,%rax), %ebx
    000010e7: 	shll	$0x6, %ebx
    000010ea: 	testl	%r8d, %r8d
    000010ed: 	jle	.Ltmp1481 # Offset: 4333
.Ltmp1550:
    000010ef: 	movzbl	init_value(%rip), %eax
    000010f6: 	shll	$0x6, %eax
    000010f9: 	cmpb	%al, %bl
    000010fb: 	jne	.Ltmp1482 # Offset: 4347
.Ltmp1481:
    00001101: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001108: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000110f: 	subq	$0x20, %rax
    00001113: 	cmpq	%rax, %r14
    00001116: 	je	.Ltmp1483 # Offset: 4374
    0000111c: 	leaq	0x10(%r14), %rdi
    00001120: 	movq	0xb8(%rsp), %r13
    00001128: 	movq	%rdi, (%r14)
    0000112b: 	movq	0xb0(%rsp), %rax
    00001133: 	movq	%rax, %rsi
    00001136: 	movq	%rax, 0x20(%rsp)
    0000113b: 	addq	%r13, %rsi
    0000113e: 	je	.Ltmp1484 # Offset: 4414
    00001140: 	testq	%rax, %rax
    00001143: 	je	.Ltmp1485 # Offset: 4419
.Ltmp1484:
    00001149: 	movq	%r13, 0x48(%rsp)
    0000114e: 	cmpq	$0xf, %r13
    00001152: 	ja	.Ltmp1486 # Offset: 4434
    00001158: 	cmpq	$0x1, %r13
    0000115c: 	jne	.Ltmp1487 # Offset: 4444
    00001162: 	movq	0x20(%rsp), %rax
    00001167: 	movzbl	(%rax), %eax
    0000116a: 	movb	%al, 0x10(%r14)
.Ltmp1578:
    0000116e: 	movq	%r13, 0x8(%r14)
    00001172: 	movb	$0x0, (%rdi,%r13)
    00001177: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000117e: 	addq	$0x20, %rax
    00001182: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1569:
    00001189: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001190: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001197: 	je	.Ltmp1488 # Offset: 4503
.Ltmp1568:
    0000119d: 	movq	-0x20(%rax), %r13
    000011a1: 	callq	clock@PLT # Offset: 4513
    000011a6: 	pxor	%xmm0, %xmm0
    000011aa: 	movq	%rax, end_time(%rip)
    000011b1: 	movq	%r13, %rdi
    000011b4: 	subq	start_time(%rip), %rax
    000011bb: 	cvtsi2sd	%rax, %xmm0
    000011c0: 	divsd	DATAat0x1c370(%rip), %xmm0
    000011c8: 	callq	_Z13record_resultdPKc # Offset: 4552
    000011cd: 	movq	0xb0(%rsp), %rdi
    000011d5: 	cmpq	(%rsp), %rdi
    000011d9: 	je	.Ltmp1489 # Offset: 4569
    000011db: 	movq	0xc0(%rsp), %rax
    000011e3: 	leaq	0x1(%rax), %rsi
    000011e7: 	callq	_ZdlPvm@PLT # Offset: 4583
.Ltmp1489:
    000011ec: 	leaq	DATAat0x1c242(%rip), %rdx
    000011f3: 	movq	%r12, %rsi
    000011f6: 	movq	%rbp, %rdi
    000011f9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4601
    000011fe: 	callq	clock@PLT # Offset: 4606
    00001203: 	movl	iterations(%rip), %edi
    00001209: 	xorl	%r13d, %r13d
    0000120c: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001213: 	movq	%rax, start_time(%rip)
    0000121a: 	testl	%edi, %edi
    0000121c: 	jle	.Ltmp1490 # Offset: 4636
    0000121e: 	nop # Size: 2
.Ltmp1547:
    00001220: 	movzbl	init_value(%rip), %eax
    00001227: 	shll	$0x6, %eax
    0000122a: 	cmpb	%al, %bl
    0000122c: 	jne	.Ltmp1491 # Offset: 4652
.Ltmp1490:
    00001232: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001239: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001240: 	subq	$0x20, %rax
    00001244: 	cmpq	%rax, %r14
    00001247: 	je	.Ltmp1492 # Offset: 4679
    0000124d: 	leaq	0x10(%r14), %rdi
    00001251: 	movq	0xb8(%rsp), %r13
    00001259: 	movq	%rdi, (%r14)
    0000125c: 	movq	0xb0(%rsp), %rax
    00001264: 	movq	%rax, %rsi
    00001267: 	movq	%rax, 0x20(%rsp)
    0000126c: 	addq	%r13, %rsi
    0000126f: 	je	.Ltmp1493 # Offset: 4719
    00001271: 	testq	%rax, %rax
    00001274: 	je	.Ltmp1494 # Offset: 4724
.Ltmp1493:
    0000127a: 	movq	%r13, 0x48(%rsp)
    0000127f: 	cmpq	$0xf, %r13
    00001283: 	ja	.Ltmp1495 # Offset: 4739
    00001289: 	cmpq	$0x1, %r13
    0000128d: 	jne	.Ltmp1496 # Offset: 4749
    00001293: 	movq	0x20(%rsp), %rax
    00001298: 	movzbl	(%rax), %eax
    0000129b: 	movb	%al, 0x10(%r14)
.Ltmp1589:
    0000129f: 	movq	%r13, 0x8(%r14)
    000012a3: 	movb	$0x0, (%rdi,%r13)
    000012a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012b6: 	addq	$0x20, %rax
    000012ba: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012c1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000012c8: 	je	.Ltmp1497 # Offset: 4808
.Ltmp1564:
    000012ce: 	movq	-0x20(%rax), %r13
    000012d2: 	callq	clock@PLT # Offset: 4818
    000012d7: 	pxor	%xmm0, %xmm0
    000012db: 	movq	%rax, end_time(%rip)
    000012e2: 	movq	%r13, %rdi
    000012e5: 	subq	start_time(%rip), %rax
    000012ec: 	cvtsi2sd	%rax, %xmm0
    000012f1: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012f9: 	callq	_Z13record_resultdPKc # Offset: 4857
    000012fe: 	movq	0xb0(%rsp), %rdi
    00001306: 	cmpq	(%rsp), %rdi
    0000130a: 	je	.Ltmp1498 # Offset: 4874
    0000130c: 	movq	0xc0(%rsp), %rax
    00001314: 	leaq	0x1(%rax), %rsi
    00001318: 	callq	_ZdlPvm@PLT # Offset: 4888
.Ltmp1498:
    0000131d: 	leaq	DATAat0x1c257(%rip), %rdx
    00001324: 	movq	%r12, %rsi
    00001327: 	movq	%rbp, %rdi
    0000132a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4906
    0000132f: 	callq	clock@PLT # Offset: 4911
    00001334: 	movl	iterations(%rip), %esi
    0000133a: 	xorl	%r13d, %r13d
    0000133d: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001344: 	movq	%rax, start_time(%rip)
    0000134b: 	testl	%esi, %esi
    0000134d: 	jle	.Ltmp1499 # Offset: 4941
.Ltmp1546:
    0000134f: 	movzbl	init_value(%rip), %eax
    00001356: 	shll	$0x6, %eax
    00001359: 	cmpb	%al, %bl
    0000135b: 	jne	.Ltmp1500 # Offset: 4955
.Ltmp1499:
    00001361: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001368: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000136f: 	subq	$0x20, %rax
    00001373: 	cmpq	%rax, %rbx
    00001376: 	je	.Ltmp1501 # Offset: 4982
    0000137c: 	leaq	0x10(%rbx), %rdi
    00001380: 	movq	0xb8(%rsp), %r13
    00001388: 	movq	%rdi, (%rbx)
    0000138b: 	movq	0xb0(%rsp), %r14
    00001393: 	movq	%r14, %rax
    00001396: 	addq	%r13, %rax
    00001399: 	je	.Ltmp1502 # Offset: 5017
    0000139b: 	testq	%r14, %r14
    0000139e: 	je	.Ltmp1503 # Offset: 5022
.Ltmp1502:
    000013a4: 	movq	%r13, 0x48(%rsp)
    000013a9: 	cmpq	$0xf, %r13
    000013ad: 	ja	.Ltmp1504 # Offset: 5037
    000013b3: 	cmpq	$0x1, %r13
    000013b7: 	jne	.Ltmp1505 # Offset: 5047
    000013bd: 	movzbl	(%r14), %eax
    000013c1: 	movb	%al, 0x10(%rbx)
.Ltmp1575:
    000013c4: 	movq	%r13, 0x8(%rbx)
    000013c8: 	movb	$0x0, (%rdi,%r13)
    000013cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013db: 	addq	$0x20, %rax
    000013df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013e6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000013ed: 	je	.Ltmp1506 # Offset: 5101
.Ltmp1571:
    000013f3: 	movq	-0x20(%rax), %r13
    000013f7: 	callq	clock@PLT # Offset: 5111
    000013fc: 	pxor	%xmm0, %xmm0
    00001400: 	movq	%rax, end_time(%rip)
    00001407: 	movq	%r13, %rdi
    0000140a: 	subq	start_time(%rip), %rax
    00001411: 	cvtsi2sd	%rax, %xmm0
    00001416: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000141e: 	callq	_Z13record_resultdPKc # Offset: 5150
    00001423: 	movq	0xb0(%rsp), %rdi
    0000142b: 	cmpq	(%rsp), %rdi
    0000142f: 	je	.Ltmp1507 # Offset: 5167
    00001431: 	movq	0xc0(%rsp), %rax
    00001439: 	leaq	0x1(%rax), %rsi
    0000143d: 	callq	_ZdlPvm@PLT # Offset: 5181
.Ltmp1507:
    00001442: 	leaq	DATAat0x1c338(%rip), %rdx
    00001449: 	movq	%r12, %rsi
    0000144c: 	movq	%rbp, %rdi
    0000144f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5199
    00001454: 	movq	0x10(%rsp), %rsi
    00001459: 	leaq	0xd0(%rsp), %rdi
    00001461: 	movq	%rbp, %rcx
    00001464: 	movl	$0x1f40, %edx
    00001469: 	callq	_Z31test_struct_arrayList_deref_optIh21test_struct_arrayListIhEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5225
    0000146e: 	movq	0xb0(%rsp), %rdi
    00001476: 	cmpq	(%rsp), %rdi
    0000147a: 	je	.Ltmp1508 # Offset: 5242
    0000147c: 	movq	0xc0(%rsp), %rax
    00001484: 	leaq	0x1(%rax), %rsi
    00001488: 	callq	_ZdlPvm@PLT # Offset: 5256
.Ltmp1508:
    0000148d: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001494: 	movq	%r12, %rsi
    00001497: 	movq	%rbp, %rdi
    0000149a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5274
    0000149f: 	callq	clock@PLT # Offset: 5279
    000014a4: 	movl	iterations(%rip), %ecx
    000014aa: 	movq	%rax, start_time(%rip)
    000014b1: 	testl	%ecx, %ecx
    000014b3: 	jle	.Ltmp1509 # Offset: 5299
    000014b5: 	movq	0x100(%rsp,%r15), %rax
    000014bd: 	xorl	%ebx, %ebx
    000014bf: 	leaq	DATAat0x1c1c8(%rip), %r14
    000014c6: 	movq	0x1f0(%rsp,%rax,8), %rax
    000014ce: 	movq	0x100(%rsp,%rax,8), %rax
    000014d6: 	movq	0x1f0(%rsp,%rax,8), %rax
    000014de: 	movq	0x100(%rsp,%rax,8), %rax
    000014e6: 	movzbl	0x2e0(%rsp,%rax), %r13d
    000014ef: 	shll	$0x6, %r13d
.Ltmp1545:
    000014f3: 	movzbl	init_value(%rip), %eax
    000014fa: 	shll	$0x6, %eax
    000014fd: 	cmpb	%r13b, %al
    00001500: 	jne	.Ltmp1510 # Offset: 5376
.Ltmp1509:
    00001506: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000150d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001514: 	subq	$0x20, %rax
    00001518: 	cmpq	%rax, %rbx
    0000151b: 	je	.Ltmp1511 # Offset: 5403
    00001521: 	leaq	0x10(%rbx), %rdi
    00001525: 	movq	0xb8(%rsp), %r13
    0000152d: 	movq	%rdi, (%rbx)
    00001530: 	movq	0xb0(%rsp), %r14
    00001538: 	movq	%r14, %rax
    0000153b: 	addq	%r13, %rax
    0000153e: 	je	.Ltmp1512 # Offset: 5438
    00001540: 	testq	%r14, %r14
    00001543: 	je	.Ltmp1513 # Offset: 5443
.Ltmp1512:
    00001549: 	movq	%r13, 0x48(%rsp)
    0000154e: 	cmpq	$0xf, %r13
    00001552: 	ja	.Ltmp1514 # Offset: 5458
    00001558: 	cmpq	$0x1, %r13
    0000155c: 	jne	.Ltmp1515 # Offset: 5468
    00001562: 	movzbl	(%r14), %eax
    00001566: 	movb	%al, 0x10(%rbx)
.Ltmp1582:
    00001569: 	movq	%r13, 0x8(%rbx)
    0000156d: 	movb	$0x0, (%rdi,%r13)
    00001572: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001579: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001580: 	addq	$0x20, %rax
    00001584: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000158b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001592: 	je	.Ltmp1516 # Offset: 5522
.Ltmp1570:
    00001598: 	movq	-0x20(%rax), %r13
    0000159c: 	callq	clock@PLT # Offset: 5532
    000015a1: 	pxor	%xmm0, %xmm0
    000015a5: 	movq	%rax, end_time(%rip)
    000015ac: 	movq	%r13, %rdi
    000015af: 	subq	start_time(%rip), %rax
    000015b6: 	cvtsi2sd	%rax, %xmm0
    000015bb: 	divsd	DATAat0x1c370(%rip), %xmm0
    000015c3: 	callq	_Z13record_resultdPKc # Offset: 5571
    000015c8: 	movq	0xb0(%rsp), %rdi
    000015d0: 	cmpq	(%rsp), %rdi
    000015d4: 	je	.Ltmp1517 # Offset: 5588
    000015d6: 	movq	0xc0(%rsp), %rax
    000015de: 	leaq	0x1(%rax), %rsi
    000015e2: 	callq	_ZdlPvm@PLT # Offset: 5602
.Ltmp1517:
    000015e7: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000015ee: 	movq	%r12, %rsi
    000015f1: 	movq	%rbp, %rdi
    000015f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5620
    000015f9: 	callq	clock@PLT # Offset: 5625
    000015fe: 	movl	iterations(%rip), %edx
    00001604: 	movq	%rax, start_time(%rip)
    0000160b: 	testl	%edx, %edx
    0000160d: 	jle	.Ltmp1518 # Offset: 5645
    0000160f: 	movq	0x100(%rsp,%r15), %rax
    00001617: 	xorl	%ebx, %ebx
    00001619: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001620: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001628: 	movq	0x100(%rsp,%rax,8), %rax
    00001630: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001638: 	movq	0x100(%rsp,%rax,8), %rax
    00001640: 	movzbl	0x2e0(%rsp,%rax), %r13d
    00001649: 	shll	$0x6, %r13d
    0000164d: 	nopl	(%rax) # Size: 3
.Ltmp1544:
    00001650: 	movzbl	init_value(%rip), %eax
    00001657: 	shll	$0x6, %eax
    0000165a: 	cmpb	%r13b, %al
    0000165d: 	jne	.Ltmp1519 # Offset: 5725
.Ltmp1518:
    00001663: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000166a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001671: 	subq	$0x20, %rax
    00001675: 	cmpq	%rax, %rbx
    00001678: 	je	.Ltmp1520 # Offset: 5752
    0000167e: 	leaq	0x10(%rbx), %rdi
    00001682: 	movq	0xb8(%rsp), %r13
    0000168a: 	movq	%rdi, (%rbx)
    0000168d: 	movq	0xb0(%rsp), %r14
    00001695: 	movq	%r14, %rax
    00001698: 	addq	%r13, %rax
    0000169b: 	je	.Ltmp1521 # Offset: 5787
    0000169d: 	testq	%r14, %r14
    000016a0: 	je	.Ltmp1522 # Offset: 5792
.Ltmp1521:
    000016a6: 	movq	%r13, 0x48(%rsp)
    000016ab: 	cmpq	$0xf, %r13
    000016af: 	ja	.Ltmp1523 # Offset: 5807
    000016b5: 	cmpq	$0x1, %r13
    000016b9: 	jne	.Ltmp1524 # Offset: 5817
    000016bf: 	movzbl	(%r14), %eax
    000016c3: 	movb	%al, 0x10(%rbx)
.Ltmp1577:
    000016c6: 	movq	%r13, 0x8(%rbx)
    000016ca: 	movb	$0x0, (%rdi,%r13)
    000016cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016d6: 	addq	$0x20, %rax
    000016da: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1574:
    000016e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016ef: 	je	.Ltmp1525 # Offset: 5871
.Ltmp1573:
    000016f5: 	movq	-0x20(%rax), %r13
    000016f9: 	callq	clock@PLT # Offset: 5881
    000016fe: 	pxor	%xmm0, %xmm0
    00001702: 	movq	%rax, end_time(%rip)
    00001709: 	movq	%r13, %rdi
    0000170c: 	subq	start_time(%rip), %rax
    00001713: 	cvtsi2sd	%rax, %xmm0
    00001718: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001720: 	callq	_Z13record_resultdPKc # Offset: 5920
    00001725: 	movq	0xb0(%rsp), %rdi
    0000172d: 	cmpq	(%rsp), %rdi
    00001731: 	je	.Ltmp1526 # Offset: 5937
    00001733: 	movq	0xc0(%rsp), %rax
    0000173b: 	leaq	0x1(%rax), %rsi
    0000173f: 	callq	_ZdlPvm@PLT # Offset: 5951
.Ltmp1526:
    00001744: 	leaq	DATAat0x1c301(%rip), %rdx
    0000174b: 	movq	%r12, %rsi
    0000174e: 	movq	%rbp, %rdi
    00001751: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5969
    00001756: 	callq	clock@PLT # Offset: 5974
    0000175b: 	movq	%rax, start_time(%rip)
    00001762: 	movl	iterations(%rip), %eax
    00001768: 	testl	%eax, %eax
    0000176a: 	jle	.Ltmp1527 # Offset: 5994
    0000176c: 	movq	0x100(%rsp,%r15), %rax
    00001774: 	xorl	%ebx, %ebx
    00001776: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000177d: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001785: 	movq	0x100(%rsp,%rax,8), %rax
    0000178d: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001795: 	movq	0x100(%rsp,%rax,8), %rax
    0000179d: 	movzbl	0x2e0(%rsp,%rax), %r13d
    000017a6: 	shll	$0x6, %r13d
.Ltmp1543:
    000017aa: 	movzbl	init_value(%rip), %eax
    000017b1: 	shll	$0x6, %eax
    000017b4: 	cmpb	%r13b, %al
    000017b7: 	jne	.Ltmp1528 # Offset: 6071
.Ltmp1527:
    000017bd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017cb: 	subq	$0x20, %rax
    000017cf: 	cmpq	%rax, %rbx
    000017d2: 	je	.Ltmp1529 # Offset: 6098
    000017d8: 	leaq	0x10(%rbx), %rdi
    000017dc: 	movq	0xb8(%rsp), %r13
    000017e4: 	movq	%rdi, (%rbx)
    000017e7: 	movq	0xb0(%rsp), %r14
    000017ef: 	movq	%r14, %rax
    000017f2: 	addq	%r13, %rax
    000017f5: 	je	.Ltmp1530 # Offset: 6133
    000017f7: 	testq	%r14, %r14
    000017fa: 	je	.Ltmp1531 # Offset: 6138
.Ltmp1530:
    00001800: 	movq	%r13, 0x48(%rsp)
    00001805: 	cmpq	$0xf, %r13
    00001809: 	ja	.Ltmp1532 # Offset: 6153
    0000180f: 	cmpq	$0x1, %r13
    00001813: 	jne	.Ltmp1533 # Offset: 6163
    00001819: 	movzbl	(%r14), %eax
    0000181d: 	movb	%al, 0x10(%rbx)
.Ltmp1580:
    00001820: 	movq	%r13, 0x8(%rbx)
    00001824: 	movb	$0x0, (%rdi,%r13)
    00001829: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001830: 	addq	$0x20, %rax
    00001834: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1572:
    0000183b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001842: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001849: 	je	.Ltmp1534 # Offset: 6217
.Ltmp1551:
    0000184f: 	movq	-0x20(%rax), %r13
    00001853: 	callq	clock@PLT # Offset: 6227
    00001858: 	pxor	%xmm0, %xmm0
    0000185c: 	movq	%rax, end_time(%rip)
    00001863: 	movq	%r13, %rdi
    00001866: 	subq	start_time(%rip), %rax
    0000186d: 	cvtsi2sd	%rax, %xmm0
    00001872: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000187a: 	callq	_Z13record_resultdPKc # Offset: 6266
    0000187f: 	movq	0xb0(%rsp), %rdi
    00001887: 	cmpq	(%rsp), %rdi
    0000188b: 	je	.Ltmp1535 # Offset: 6283
    0000188d: 	movq	0xc0(%rsp), %rax
    00001895: 	leaq	0x1(%rax), %rsi
    00001899: 	callq	_ZdlPvm@PLT # Offset: 6297
.Ltmp1535:
    0000189e: 	leaq	DATAat0x1c31b(%rip), %rdx
    000018a5: 	movq	%r12, %rsi
    000018a8: 	movq	%rbp, %rdi
    000018ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6315
    000018b0: 	movl	iterations(%rip), %edx
    000018b6: 	xorl	%r8d, %r8d
    000018b9: 	xorl	%ecx, %ecx
    000018bb: 	movl	$0x1f40, %esi
    000018c0: 	movq	0xb0(%rsp), %rdi
    000018c8: 	callq	_Z9summarizePKciiii # Offset: 6344
    000018cd: 	movq	0xb0(%rsp), %rdi
    000018d5: 	cmpq	(%rsp), %rdi
    000018d9: 	je	.Ltmp1536 # Offset: 6361
    000018db: 	movq	0xc0(%rsp), %rax
    000018e3: 	leaq	0x1(%rax), %rsi
    000018e7: 	callq	_ZdlPvm@PLT # Offset: 6375
.Ltmp1536:
    000018ec: 	movq	0x90(%rsp), %rdi
    000018f4: 	cmpq	0x18(%rsp), %rdi
    000018f9: 	je	.Ltmp1537 # Offset: 6393
    000018fb: 	movq	0xa0(%rsp), %rax
    00001903: 	leaq	0x1(%rax), %rsi
    00001907: 	callq	_ZdlPvm@PLT # Offset: 6407
.Ltmp1537:
    0000190c: 	movq	0x2248(%rsp), %rax
    00001914: 	subq	%fs:0x28, %rax
    0000191d: 	jne	.Ltmp1538 # Offset: 6429
    00001923: 	addq	$0x2258, %rsp
    0000192a: 	popq	%rbx
    0000192b: 	popq	%rbp
    0000192c: 	popq	%r12
    0000192e: 	popq	%r13
    00001930: 	popq	%r14
    00001932: 	popq	%r15
    00001934: 	retq # Offset: 6452
.Ltmp1413:
    00001935: 	leaq	0x48(%rsp), %rsi
    0000193a: 	xorl	%edx, %edx
    0000193c: 	movq	%rbx, %rdi
    0000193f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6463
    00001944: 	movq	%rax, (%rbx)
    00001947: 	movq	%rax, %rdi
    0000194a: 	movq	0x48(%rsp), %rax
    0000194f: 	movq	%rax, 0x10(%rbx)
.Ltmp1584:
    00001953: 	movq	%r14, %rdx
    00001956: 	movq	%r15, %rsi
    00001959: 	callq	memcpy@PLT # Offset: 6489
    0000195e: 	movq	0x48(%rsp), %r14
    00001963: 	movq	(%rbx), %rdi
    00001966: 	jmp	.Ltmp1539 # Offset: 6502
    0000196b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1446:
    00001970: 	movq	0xb0(%rsp), %rdx
    00001978: 	movq	%r14, %rsi
    0000197b: 	movl	$0x1, %edi
    00001980: 	xorl	%eax, %eax
    00001982: 	callq	__printf_chk@PLT # Offset: 6530
    00001987: 	addl	$0x1, %r13d
    0000198b: 	cmpl	iterations(%rip), %r13d
    00001992: 	jl	.Ltmp1540 # Offset: 6546
    00001998: 	jmp	.Ltmp1445 # Offset: 6552
    0000199d: 	nopl	(%rax) # Size: 3
.Ltmp1464:
    000019a0: 	movq	0xb0(%rsp), %rdx
    000019a8: 	movq	%r14, %rsi
    000019ab: 	movl	$0x1, %edi
    000019b0: 	xorl	%eax, %eax
    000019b2: 	callq	__printf_chk@PLT # Offset: 6578
    000019b7: 	addl	$0x1, %r13d
    000019bb: 	cmpl	iterations(%rip), %r13d
    000019c2: 	jl	.Ltmp1541 # Offset: 6594
    000019c8: 	jmp	.Ltmp1463 # Offset: 6600
    000019cd: 	nopl	(%rax) # Size: 3
.Ltmp1455:
    000019d0: 	movq	0xb0(%rsp), %rdx
    000019d8: 	movq	%r14, %rsi
    000019db: 	movl	$0x1, %edi
    000019e0: 	xorl	%eax, %eax
    000019e2: 	callq	__printf_chk@PLT # Offset: 6626
    000019e7: 	addl	$0x1, %r13d
    000019eb: 	cmpl	iterations(%rip), %r13d
    000019f2: 	jl	.Ltmp1542 # Offset: 6642
    000019f8: 	jmp	.Ltmp1454 # Offset: 6648
    000019fd: 	nopl	(%rax) # Size: 3
.Ltmp1528:
    00001a00: 	movq	0xb0(%rsp), %rdx
    00001a08: 	movq	%r14, %rsi
    00001a0b: 	movl	$0x1, %edi
    00001a10: 	xorl	%eax, %eax
    00001a12: 	callq	__printf_chk@PLT # Offset: 6674
    00001a17: 	addl	$0x1, %ebx
    00001a1a: 	cmpl	iterations(%rip), %ebx
    00001a20: 	jl	.Ltmp1543 # Offset: 6688
    00001a26: 	jmp	.Ltmp1527 # Offset: 6694
    00001a2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1519:
    00001a30: 	movq	0xb0(%rsp), %rdx
    00001a38: 	movq	%r14, %rsi
    00001a3b: 	movl	$0x1, %edi
    00001a40: 	xorl	%eax, %eax
    00001a42: 	callq	__printf_chk@PLT # Offset: 6722
    00001a47: 	addl	$0x1, %ebx
    00001a4a: 	cmpl	iterations(%rip), %ebx
    00001a50: 	jl	.Ltmp1544 # Offset: 6736
    00001a56: 	jmp	.Ltmp1518 # Offset: 6742
    00001a5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1510:
    00001a60: 	movq	0xb0(%rsp), %rdx
    00001a68: 	movq	%r14, %rsi
    00001a6b: 	movl	$0x1, %edi
    00001a70: 	xorl	%eax, %eax
    00001a72: 	callq	__printf_chk@PLT # Offset: 6770
    00001a77: 	addl	$0x1, %ebx
    00001a7a: 	cmpl	iterations(%rip), %ebx
    00001a80: 	jl	.Ltmp1545 # Offset: 6784
    00001a86: 	jmp	.Ltmp1509 # Offset: 6790
    00001a8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1500:
    00001a90: 	movq	0xb0(%rsp), %rdx
    00001a98: 	movq	%r14, %rsi
    00001a9b: 	movl	$0x1, %edi
    00001aa0: 	xorl	%eax, %eax
    00001aa2: 	callq	__printf_chk@PLT # Offset: 6818
    00001aa7: 	addl	$0x1, %r13d
    00001aab: 	cmpl	iterations(%rip), %r13d
    00001ab2: 	jl	.Ltmp1546 # Offset: 6834
    00001ab8: 	jmp	.Ltmp1499 # Offset: 6840
    00001abd: 	nopl	(%rax) # Size: 3
.Ltmp1491:
    00001ac0: 	movq	0xb0(%rsp), %rdx
    00001ac8: 	movq	%r14, %rsi
    00001acb: 	movl	$0x1, %edi
    00001ad0: 	xorl	%eax, %eax
    00001ad2: 	callq	__printf_chk@PLT # Offset: 6866
    00001ad7: 	addl	$0x1, %r13d
    00001adb: 	cmpl	iterations(%rip), %r13d
    00001ae2: 	jl	.Ltmp1547 # Offset: 6882
    00001ae8: 	jmp	.Ltmp1490 # Offset: 6888
    00001aed: 	nopl	(%rax) # Size: 3
.Ltmp1473:
    00001af0: 	movq	0xb0(%rsp), %rdx
    00001af8: 	movq	%r14, %rsi
    00001afb: 	movl	$0x1, %edi
    00001b00: 	xorl	%eax, %eax
    00001b02: 	callq	__printf_chk@PLT # Offset: 6914
    00001b07: 	addl	$0x1, %r13d
    00001b0b: 	cmpl	iterations(%rip), %r13d
    00001b12: 	jl	.Ltmp1548 # Offset: 6930
    00001b18: 	jmp	.Ltmp1472 # Offset: 6936
    00001b1d: 	nopl	(%rax) # Size: 3
.Ltmp1469:
    00001b20: 	movq	0xb0(%rsp), %rdx
    00001b28: 	movq	%r14, %rsi
    00001b2b: 	movl	$0x1, %edi
    00001b30: 	xorl	%eax, %eax
    00001b32: 	callq	__printf_chk@PLT # Offset: 6962
    00001b37: 	addl	$0x1, %r13d
    00001b3b: 	cmpl	iterations(%rip), %r13d
    00001b42: 	jl	.Ltmp1549 # Offset: 6978
    00001b48: 	jmp	.Ltmp1468 # Offset: 6984
    00001b4d: 	nopl	(%rax) # Size: 3
.Ltmp1482:
    00001b50: 	movq	0xb0(%rsp), %rdx
    00001b58: 	movq	%r14, %rsi
    00001b5b: 	movl	$0x1, %edi
    00001b60: 	xorl	%eax, %eax
    00001b62: 	callq	__printf_chk@PLT # Offset: 7010
    00001b67: 	addl	$0x1, %r13d
    00001b6b: 	cmpl	iterations(%rip), %r13d
    00001b72: 	jl	.Ltmp1550 # Offset: 7026
    00001b78: 	jmp	.Ltmp1481 # Offset: 7032
.Ltmp1534:
    00001b7d: 	movq	-0x8(%rdx), %rax
    00001b81: 	addq	$0x200, %rax
    00001b87: 	jmp	.Ltmp1551 # Offset: 7047
.Ltmp1410:
    00001b8c: 	movq	%rbp, %rsi
    00001b8f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b96: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7062
    00001b9b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ba2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001ba9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bb0: 	jne	.Ltmp1552 # Offset: 7088
.Ltmp1415:
    00001bb6: 	movq	-0x8(%rdx), %rax
    00001bba: 	addq	$0x200, %rax
    00001bc0: 	jmp	.Ltmp1552 # Offset: 7104
.Ltmp1404:
    00001bc5: 	movq	-0x8(%rdx), %rax
    00001bc9: 	addq	$0x200, %rax
    00001bcf: 	jmp	.Ltmp1553 # Offset: 7119
.Ltmp1398:
    00001bd4: 	movq	-0x8(%rdx), %rax
    00001bd8: 	addq	$0x200, %rax
    00001bde: 	jmp	.Ltmp1554 # Offset: 7134
.Ltmp1465:
    00001be3: 	movq	-0x8(%rdx), %rax
    00001be7: 	addq	$0x200, %rax
    00001bed: 	jmp	.Ltmp1555 # Offset: 7149
.Ltmp1452:
    00001bf2: 	movq	-0x8(%rdx), %rax
    00001bf6: 	addq	$0x200, %rax
    00001bfc: 	jmp	.Ltmp1556 # Offset: 7164
.Ltmp1456:
    00001c01: 	movq	%rbp, %rsi
    00001c04: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c0b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7179
    00001c10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c17: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c25: 	jne	.Ltmp1557 # Offset: 7205
.Ltmp1461:
    00001c2b: 	movq	-0x8(%rdx), %rax
    00001c2f: 	addq	$0x200, %rax
    00001c35: 	jmp	.Ltmp1557 # Offset: 7221
.Ltmp1421:
    00001c3a: 	movq	-0x8(%rdx), %rax
    00001c3e: 	addq	$0x200, %rax
    00001c44: 	jmp	.Ltmp1558 # Offset: 7236
.Ltmp1447:
    00001c49: 	movq	%rbp, %rsi
    00001c4c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c53: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7251
    00001c58: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c5f: 	jmp	.Ltmp1559 # Offset: 7263
.Ltmp1443:
    00001c64: 	movq	-0x8(%rdx), %rax
    00001c68: 	addq	$0x200, %rax
    00001c6e: 	jmp	.Ltmp1560 # Offset: 7278
.Ltmp1438:
    00001c73: 	movq	%rbp, %rsi
    00001c76: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7293
    00001c82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c89: 	jmp	.Ltmp1561 # Offset: 7305
.Ltmp1470:
    00001c8e: 	movq	-0x8(%rdx), %rax
    00001c92: 	addq	$0x200, %rax
    00001c98: 	jmp	.Ltmp1562 # Offset: 7320
.Ltmp1479:
    00001c9d: 	movq	-0x8(%rdx), %rax
    00001ca1: 	addq	$0x200, %rax
    00001ca7: 	jmp	.Ltmp1563 # Offset: 7335
.Ltmp1492:
    00001cac: 	movq	%rbp, %rsi
    00001caf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cb6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7350
    00001cbb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cc2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001cc9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cd0: 	jne	.Ltmp1564 # Offset: 7376
.Ltmp1497:
    00001cd6: 	movq	-0x8(%rdx), %rax
    00001cda: 	addq	$0x200, %rax
    00001ce0: 	jmp	.Ltmp1564 # Offset: 7392
.Ltmp1474:
    00001ce5: 	movq	%rbp, %rsi
    00001ce8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7407
    00001cf4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cfb: 	jmp	.Ltmp1565 # Offset: 7419
.Ltmp1432:
    00001d00: 	movq	-0x8(%rdx), %rax
    00001d04: 	addq	$0x200, %rax
    00001d0a: 	jmp	.Ltmp1566 # Offset: 7434
.Ltmp1427:
    00001d0f: 	movq	%rbp, %rsi
    00001d12: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d19: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7449
    00001d1e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d25: 	jmp	.Ltmp1567 # Offset: 7461
.Ltmp1488:
    00001d2a: 	movq	-0x8(%rdx), %rax
    00001d2e: 	addq	$0x200, %rax
    00001d34: 	jmp	.Ltmp1568 # Offset: 7476
.Ltmp1483:
    00001d39: 	movq	%rbp, %rsi
    00001d3c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d43: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7491
    00001d48: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d4f: 	jmp	.Ltmp1569 # Offset: 7503
.Ltmp1511:
    00001d54: 	movq	%rbp, %rsi
    00001d57: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d5e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7518
    00001d63: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d6a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d71: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d78: 	jne	.Ltmp1570 # Offset: 7544
.Ltmp1516:
    00001d7e: 	movq	-0x8(%rdx), %rax
    00001d82: 	addq	$0x200, %rax
    00001d88: 	jmp	.Ltmp1570 # Offset: 7560
.Ltmp1501:
    00001d8d: 	movq	%rbp, %rsi
    00001d90: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d97: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7575
    00001d9c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001da3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001daa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001db1: 	jne	.Ltmp1571 # Offset: 7601
.Ltmp1506:
    00001db7: 	movq	-0x8(%rdx), %rax
    00001dbb: 	addq	$0x200, %rax
    00001dc1: 	jmp	.Ltmp1571 # Offset: 7617
.Ltmp1529:
    00001dc6: 	movq	%rbp, %rsi
    00001dc9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dd0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7632
    00001dd5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ddc: 	jmp	.Ltmp1572 # Offset: 7644
.Ltmp1525:
    00001de1: 	movq	-0x8(%rdx), %rax
    00001de5: 	addq	$0x200, %rax
    00001deb: 	jmp	.Ltmp1573 # Offset: 7659
.Ltmp1520:
    00001df0: 	movq	%rbp, %rsi
    00001df3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dfa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7674
    00001dff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e06: 	jmp	.Ltmp1574 # Offset: 7686
.Ltmp1505:
    00001e0b: 	testq	%r13, %r13
    00001e0e: 	je	.Ltmp1575 # Offset: 7694
    00001e14: 	jmp	.Ltmp1576 # Offset: 7700
    00001e19: 	nopl	(%rax) # Size: 7
.Ltmp1524:
    00001e20: 	testq	%r13, %r13
    00001e23: 	je	.Ltmp1577 # Offset: 7715
.Ltmp1596:
    00001e29: 	movq	%r13, %rdx
    00001e2c: 	movq	%r14, %rsi
    00001e2f: 	callq	memcpy@PLT # Offset: 7727
    00001e34: 	movq	0x48(%rsp), %r13
    00001e39: 	movq	(%rbx), %rdi
    00001e3c: 	jmp	.Ltmp1577 # Offset: 7740
.Ltmp1487:
    00001e41: 	testq	%r13, %r13
    00001e44: 	je	.Ltmp1578 # Offset: 7748
    00001e4a: 	jmp	.Ltmp1579 # Offset: 7754
    00001e4f: 	nop # Size: 1
.Ltmp1533:
    00001e50: 	testq	%r13, %r13
    00001e53: 	je	.Ltmp1580 # Offset: 7763
    00001e59: 	jmp	.Ltmp1581 # Offset: 7769
    00001e5e: 	nop # Size: 2
.Ltmp1515:
    00001e60: 	testq	%r13, %r13
    00001e63: 	je	.Ltmp1582 # Offset: 7779
    00001e69: 	jmp	.Ltmp1583 # Offset: 7785
    00001e6e: 	nop # Size: 2
.Ltmp1414:
    00001e70: 	testq	%r14, %r14
    00001e73: 	je	.Ltmp1539 # Offset: 7795
    00001e79: 	jmp	.Ltmp1584 # Offset: 7801
    00001e7e: 	nop # Size: 2
.Ltmp1460:
    00001e80: 	testq	%r13, %r13
    00001e83: 	je	.Ltmp1585 # Offset: 7811
    00001e89: 	jmp	.Ltmp1586 # Offset: 7817
    00001e8e: 	nop # Size: 2
.Ltmp1451:
    00001e90: 	testq	%r13, %r13
    00001e93: 	je	.Ltmp1587 # Offset: 7827
    00001e99: 	jmp	.Ltmp1588 # Offset: 7833
    00001e9e: 	nop # Size: 2
.Ltmp1496:
    00001ea0: 	testq	%r13, %r13
    00001ea3: 	je	.Ltmp1589 # Offset: 7843
    00001ea9: 	jmp	.Ltmp1590 # Offset: 7849
    00001eae: 	nop # Size: 2
.Ltmp1478:
    00001eb0: 	testq	%r13, %r13
    00001eb3: 	je	.Ltmp1591 # Offset: 7859
    00001eb9: 	jmp	.Ltmp1592 # Offset: 7865
    00001ebe: 	nop # Size: 2
.Ltmp1431:
    00001ec0: 	testq	%r14, %r14
    00001ec3: 	je	.Ltmp1593 # Offset: 7875
    00001ec9: 	jmp	.Ltmp1594 # Offset: 7881
    00001ece: 	nop # Size: 2
.Ltmp1442:
    00001ed0: 	testq	%r13, %r13
    00001ed3: 	je	.Ltmp1595 # Offset: 7891
.Ltmp1597:
    00001ed9: 	movq	%r13, %rdx
    00001edc: 	movq	%r14, %rsi
    00001edf: 	callq	memcpy@PLT # Offset: 7903
    00001ee4: 	movq	0x48(%rsp), %r13
    00001ee9: 	movq	(%rbx), %rdi
    00001eec: 	jmp	.Ltmp1595 # Offset: 7916
.Ltmp1459:
    00001ef1: 	leaq	0x48(%rsp), %rsi
    00001ef6: 	xorl	%edx, %edx
    00001ef8: 	movq	%r14, %rdi
    00001efb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7931
    00001f00: 	movq	%rax, (%r14)
    00001f03: 	movq	%rax, %rdi
    00001f06: 	movq	0x48(%rsp), %rax
    00001f0b: 	movq	%rax, 0x10(%r14)
.Ltmp1586:
    00001f0f: 	movq	%r13, %rdx
    00001f12: 	movq	%r15, %rsi
    00001f15: 	callq	memcpy@PLT # Offset: 7957
    00001f1a: 	movq	0x48(%rsp), %r13
    00001f1f: 	movq	(%r14), %rdi
    00001f22: 	jmp	.Ltmp1585 # Offset: 7970
.Ltmp1486:
    00001f27: 	leaq	0x48(%rsp), %rsi
    00001f2c: 	xorl	%edx, %edx
    00001f2e: 	movq	%r14, %rdi
    00001f31: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7985
    00001f36: 	movq	%rax, (%r14)
    00001f39: 	movq	%rax, %rdi
    00001f3c: 	movq	0x48(%rsp), %rax
    00001f41: 	movq	%rax, 0x10(%r14)
.Ltmp1579:
    00001f45: 	movq	0x20(%rsp), %rsi
    00001f4a: 	movq	%r13, %rdx
    00001f4d: 	callq	memcpy@PLT # Offset: 8013
    00001f52: 	movq	0x48(%rsp), %r13
    00001f57: 	movq	(%r14), %rdi
    00001f5a: 	jmp	.Ltmp1578 # Offset: 8026
.Ltmp1504:
    00001f5f: 	leaq	0x48(%rsp), %rsi
    00001f64: 	xorl	%edx, %edx
    00001f66: 	movq	%rbx, %rdi
    00001f69: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8041
    00001f6e: 	movq	%rax, (%rbx)
    00001f71: 	movq	%rax, %rdi
    00001f74: 	movq	0x48(%rsp), %rax
    00001f79: 	movq	%rax, 0x10(%rbx)
.Ltmp1576:
    00001f7d: 	movq	%r13, %rdx
    00001f80: 	movq	%r14, %rsi
    00001f83: 	callq	memcpy@PLT # Offset: 8067
    00001f88: 	movq	0x48(%rsp), %r13
    00001f8d: 	movq	(%rbx), %rdi
    00001f90: 	jmp	.Ltmp1575 # Offset: 8080
.Ltmp1532:
    00001f95: 	leaq	0x48(%rsp), %rsi
    00001f9a: 	xorl	%edx, %edx
    00001f9c: 	movq	%rbx, %rdi
    00001f9f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8095
    00001fa4: 	movq	%rax, (%rbx)
    00001fa7: 	movq	%rax, %rdi
    00001faa: 	movq	0x48(%rsp), %rax
    00001faf: 	movq	%rax, 0x10(%rbx)
.Ltmp1581:
    00001fb3: 	movq	%r13, %rdx
    00001fb6: 	movq	%r14, %rsi
    00001fb9: 	callq	memcpy@PLT # Offset: 8121
    00001fbe: 	movq	0x48(%rsp), %r13
    00001fc3: 	movq	(%rbx), %rdi
    00001fc6: 	jmp	.Ltmp1580 # Offset: 8134
.Ltmp1430:
    00001fcb: 	leaq	0x48(%rsp), %rsi
    00001fd0: 	xorl	%edx, %edx
    00001fd2: 	movq	%rbx, %rdi
    00001fd5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8149
    00001fda: 	movq	%rax, (%rbx)
    00001fdd: 	movq	%rax, %rdi
    00001fe0: 	movq	0x48(%rsp), %rax
    00001fe5: 	movq	%rax, 0x10(%rbx)
.Ltmp1594:
    00001fe9: 	movq	%r14, %rdx
    00001fec: 	movq	%r15, %rsi
    00001fef: 	callq	memcpy@PLT # Offset: 8175
    00001ff4: 	movq	0x48(%rsp), %r14
    00001ff9: 	movq	(%rbx), %rdi
    00001ffc: 	jmp	.Ltmp1593 # Offset: 8188
.Ltmp1514:
    00002001: 	leaq	0x48(%rsp), %rsi
    00002006: 	xorl	%edx, %edx
    00002008: 	movq	%rbx, %rdi
    0000200b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8203
    00002010: 	movq	%rax, (%rbx)
    00002013: 	movq	%rax, %rdi
    00002016: 	movq	0x48(%rsp), %rax
    0000201b: 	movq	%rax, 0x10(%rbx)
.Ltmp1583:
    0000201f: 	movq	%r13, %rdx
    00002022: 	movq	%r14, %rsi
    00002025: 	callq	memcpy@PLT # Offset: 8229
    0000202a: 	movq	0x48(%rsp), %r13
    0000202f: 	movq	(%rbx), %rdi
    00002032: 	jmp	.Ltmp1582 # Offset: 8242
.Ltmp1523:
    00002037: 	leaq	0x48(%rsp), %rsi
    0000203c: 	xorl	%edx, %edx
    0000203e: 	movq	%rbx, %rdi
    00002041: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8257
    00002046: 	movq	%rax, (%rbx)
    00002049: 	movq	%rax, %rdi
    0000204c: 	movq	0x48(%rsp), %rax
    00002051: 	movq	%rax, 0x10(%rbx)
    00002055: 	jmp	.Ltmp1596 # Offset: 8277
.Ltmp1450:
    0000205a: 	leaq	0x48(%rsp), %rsi
    0000205f: 	xorl	%edx, %edx
    00002061: 	movq	%r14, %rdi
    00002064: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8292
    00002069: 	movq	%rax, (%r14)
    0000206c: 	movq	%rax, %rdi
    0000206f: 	movq	0x48(%rsp), %rax
    00002074: 	movq	%rax, 0x10(%r14)
.Ltmp1588:
    00002078: 	movq	%r13, %rdx
    0000207b: 	movq	%r15, %rsi
    0000207e: 	callq	memcpy@PLT # Offset: 8318
    00002083: 	movq	0x48(%rsp), %r13
    00002088: 	movq	(%r14), %rdi
    0000208b: 	jmp	.Ltmp1587 # Offset: 8331
.Ltmp1495:
    00002090: 	leaq	0x48(%rsp), %rsi
    00002095: 	xorl	%edx, %edx
    00002097: 	movq	%r14, %rdi
    0000209a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8346
    0000209f: 	movq	%rax, (%r14)
    000020a2: 	movq	%rax, %rdi
    000020a5: 	movq	0x48(%rsp), %rax
    000020aa: 	movq	%rax, 0x10(%r14)
.Ltmp1590:
    000020ae: 	movq	0x20(%rsp), %rsi
    000020b3: 	movq	%r13, %rdx
    000020b6: 	callq	memcpy@PLT # Offset: 8374
    000020bb: 	movq	0x48(%rsp), %r13
    000020c0: 	movq	(%r14), %rdi
    000020c3: 	jmp	.Ltmp1589 # Offset: 8387
.Ltmp1441:
    000020c8: 	leaq	0x48(%rsp), %rsi
    000020cd: 	xorl	%edx, %edx
    000020cf: 	movq	%rbx, %rdi
    000020d2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8402
    000020d7: 	movq	%rax, (%rbx)
    000020da: 	movq	%rax, %rdi
    000020dd: 	movq	0x48(%rsp), %rax
    000020e2: 	movq	%rax, 0x10(%rbx)
    000020e6: 	jmp	.Ltmp1597 # Offset: 8422
.Ltmp1477:
    000020eb: 	leaq	0x48(%rsp), %rsi
    000020f0: 	xorl	%edx, %edx
    000020f2: 	movq	%rbx, %rdi
    000020f5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8437
    000020fa: 	movq	%rax, (%rbx)
    000020fd: 	movq	%rax, %rdi
    00002100: 	movq	0x48(%rsp), %rax
    00002105: 	movq	%rax, 0x10(%rbx)
.Ltmp1592:
    00002109: 	movq	%r13, %rdx
    0000210c: 	movq	%r14, %rsi
    0000210f: 	callq	memcpy@PLT # Offset: 8463
    00002114: 	movq	0x48(%rsp), %r13
    00002119: 	movq	(%rbx), %rdi
    0000211c: 	jmp	.Ltmp1591 # Offset: 8476
.Ltmp1429:
    00002121: 	leaq	DATAat0x1c158(%rip), %rdi
    00002128: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8488
.Ltmp1440:
    0000212d: 	leaq	DATAat0x1c158(%rip), %rdi
    00002134: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8500
.Ltmp1449:
    00002139: 	leaq	DATAat0x1c158(%rip), %rdi
    00002140: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8512
.Ltmp1458:
    00002145: 	leaq	DATAat0x1c158(%rip), %rdi
    0000214c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8524
.Ltmp1476:
    00002151: 	leaq	DATAat0x1c158(%rip), %rdi
    00002158: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8536
.Ltmp1485:
    0000215d: 	leaq	DATAat0x1c158(%rip), %rdi
    00002164: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8548
.Ltmp1494:
    00002169: 	leaq	DATAat0x1c158(%rip), %rdi
    00002170: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8560
.Ltmp1503:
    00002175: 	leaq	DATAat0x1c158(%rip), %rdi
    0000217c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8572
.Ltmp1513:
    00002181: 	leaq	DATAat0x1c158(%rip), %rdi
    00002188: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8584
.Ltmp1522:
    0000218d: 	leaq	DATAat0x1c158(%rip), %rdi
    00002194: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8596
.Ltmp1531:
    00002199: 	leaq	DATAat0x1c158(%rip), %rdi
    000021a0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8608
.Ltmp1538:
    000021a5: 	callq	__stack_chk_fail@PLT # Offset: 8613
.Ltmp1412:
    000021aa: 	leaq	DATAat0x1c158(%rip), %rdi
    000021b1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8625
    000021b6: 	endbr64
.Ltmp1599:
    000021ba: 	movq	%rax, %rbp
    000021bd: 	jmp	.Ltmp1598 # Offset: 8637
    000021bf: 	endbr64
    000021c3: 	jmp	.Ltmp1599 # Offset: 8643
    000021c5: 	endbr64
    000021c9: 	jmp	.Ltmp1599 # Offset: 8649
    000021cb: 	endbr64
    000021cf: 	jmp	.Ltmp1599 # Offset: 8655
    000021d1: 	endbr64
    000021d5: 	jmp	.Ltmp1599 # Offset: 8661
    000021d7: 	endbr64
    000021db: 	movq	%rax, %rbp
    000021de: 	jmp	.Ltmp1600 # Offset: 8670
    000021e3: 	endbr64
    000021e7: 	jmp	.Ltmp1599 # Offset: 8679
    000021e9: 	endbr64
    000021ed: 	jmp	.Ltmp1599 # Offset: 8685
    000021ef: 	endbr64
    000021f3: 	jmp	.Ltmp1599 # Offset: 8691
    000021f5: 	endbr64
    000021f9: 	jmp	.Ltmp1599 # Offset: 8697
    000021fb: 	endbr64
    000021ff: 	jmp	.Ltmp1599 # Offset: 8703
    00002201: 	endbr64
    00002205: 	jmp	.Ltmp1599 # Offset: 8709
    00002207: 	endbr64
    0000220b: 	jmp	.Ltmp1599 # Offset: 8715
    0000220d: 	endbr64
    00002211: 	movq	%rax, %rbp
    00002214: 	jmp	.Ltmp1601 # Offset: 8724
.Ltmp1598:
    00002216: 	movq	0xb0(%rsp), %rdi
    0000221e: 	cmpq	(%rsp), %rdi
    00002222: 	je	.Ltmp1601 # Offset: 8738
.Ltmp1603:
    00002224: 	movq	0xc0(%rsp), %rax
    0000222c: 	leaq	0x1(%rax), %rsi
    00002230: 	callq	_ZdlPvm@PLT # Offset: 8752
.Ltmp1601:
    00002235: 	movq	0x90(%rsp), %rdi
    0000223d: 	cmpq	0x18(%rsp), %rdi
    00002242: 	je	.Ltmp1602 # Offset: 8770
    00002244: 	movq	0xa0(%rsp), %rax
    0000224c: 	leaq	0x1(%rax), %rsi
    00002250: 	callq	_ZdlPvm@PLT # Offset: 8784
.Ltmp1602:
    00002255: 	movq	%rbp, %rdi
    00002258: 	callq	_Unwind_Resume@PLT # Offset: 8792
    0000225d: 	endbr64
    00002261: 	jmp	.Ltmp1599 # Offset: 8801
    00002266: 	endbr64
    0000226a: 	jmp	.Ltmp1599 # Offset: 8810
    0000226f: 	endbr64
    00002273: 	jmp	.Ltmp1599 # Offset: 8819
    00002278: 	endbr64
    0000227c: 	jmp	.Ltmp1599 # Offset: 8828
    00002281: 	endbr64
    00002285: 	jmp	.Ltmp1599 # Offset: 8837
    0000228a: 	endbr64
    0000228e: 	jmp	.Ltmp1599 # Offset: 8846
    00002293: 	endbr64
    00002297: 	jmp	.Ltmp1599 # Offset: 8855
.Ltmp1600:
    0000229c: 	movq	0xb0(%rsp), %rdi
    000022a4: 	leaq	0xc0(%rsp), %rax
    000022ac: 	cmpq	%rax, %rdi
    000022af: 	jne	.Ltmp1603 # Offset: 8879
    000022b5: 	jmp	.Ltmp1601 # Offset: 8885
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvT_"

Binary Function "_Z11TestOneTypeIsEvT_" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x12de0
  Size        : 0x2341
  MaxSize     : 0x2350
  Offset      : 0x12de0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIsEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x4000(%rsp), %r11
.Ltmp1604:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1604 # Offset: 37
    00000027: 	subq	$0x1b8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm6
    0000003e: 	movq	%fs:0x28, %rax
    00000047: 	movq	%rax, 0x41a8(%rsp)
    0000004f: 	xorl	%eax, %eax
    00000051: 	movl	%edi, %r12d
    00000054: 	leaq	0x140(%rsp), %rax
    0000005c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000063: 	movq	%rax, %xmm0
    00000068: 	leaq	0x100(%rsp), %rax
    00000070: 	movl	$0x31746e69, 0xa0(%rsp)
    0000007b: 	leaq	0x320(%rsp), %rbp
    00000083: 	movq	%rax, %xmm3
    00000088: 	leaq	0x230(%rsp), %rax
    00000090: 	movb	$0x74, 0xa6(%rsp)
    00000098: 	leaq	0x41a0(%rsp), %rbx
    000000a0: 	movq	%rax, %xmm2
    000000a5: 	leaq	0xa0(%rsp), %rax
    000000ad: 	punpcklqdq	%xmm0, %xmm3
    000000b1: 	movq	$0x7, 0x98(%rsp)
    000000bd: 	movq	%rax, 0x28(%rsp)
    000000c2: 	punpcklqdq	%xmm0, %xmm2
    000000c6: 	movq	%rax, 0x90(%rsp)
    000000ce: 	movl	$0x5f36, %eax
    000000d3: 	movw	%ax, 0xa4(%rsp)
    000000db: 	leaq	0x70(%rsp), %rax
    000000e0: 	movq	%rax, %rsi
    000000e3: 	movq	%rax, 0x30(%rsp)
    000000e8: 	movaps	%xmm3, 0x10(%rsp)
    000000ed: 	movaps	%xmm2, (%rsp)
    000000f1: 	movb	$0x0, 0xa7(%rsp)
    000000f9: 	movaps	%xmm5, 0x70(%rsp)
    000000fe: 	movaps	%xmm6, 0x80(%rsp)
    00000106: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 262
    0000010b: 	movl	init_value(%rip), %esi
    00000111: 	movdqa	0x10(%rsp), %xmm3
    00000117: 	movdqa	(%rsp), %xmm2
    0000011c: 	movd	%esi, %xmm0
    00000120: 	movl	%esi, %eax
    00000122: 	movl	%esi, 0x20(%rsp)
    00000126: 	movzwl	%si, %edi
    00000129: 	punpcklwd	%xmm0, %xmm0
    0000012d: 	shll	$0x10, %eax
    00000130: 	pshufd	$0x0, %xmm0, %xmm0
    00000135: 	orl	%eax, %edi
    00000137: 	movq	%rbp, %rax
    0000013a: 	movdqa	%xmm0, %xmm1
    0000013e: 	nop # Size: 2
.Ltmp1605:
    00000140: 	movaps	%xmm1, (%rax)
    00000143: 	addq	$0x10, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	jne	.Ltmp1605 # Offset: 330
    0000014c: 	leaq	0x50(%rsp), %rax
    00000151: 	movswq	%r12w, %r8
    00000155: 	leal	0x2(%r12), %esi
    0000015a: 	movabsq	$-0x7777777777777777, %rcx
    00000164: 	movq	%rax, 0x78(%rsp)
    00000169: 	leaq	0x60(%rsp), %rax
    0000016e: 	movl	0x20(%rsp), %r9d
    00000173: 	leaq	0x90(%rsp), %r13
    0000017b: 	movq	%rax, 0x58(%rsp)
    00000180: 	leaq	0x46(%rsp), %rax
    00000185: 	movq	%rax, 0x68(%rsp)
    0000018a: 	movq	%r8, %rax
    0000018d: 	movd	%r9d, %xmm4
    00000192: 	mulq	%rcx
    00000195: 	movl	%edi, 0x138(%rsp)
    0000019c: 	movswq	%si, %rdi
    000001a0: 	movswl	%si, %esi
    000001a3: 	movaps	%xmm0, 0x100(%rsp)
    000001ab: 	movaps	%xmm0, 0x110(%rsp)
    000001b3: 	movq	%rdx, %rax
    000001b6: 	andq	$-0x10, %rdx
    000001ba: 	movaps	%xmm0, 0x120(%rsp)
    000001c2: 	pshuflw	$0x0, %xmm4, %xmm0
    000001c7: 	shrq	$0x4, %rax
    000001cb: 	movw	%r9w, 0x46(%rsp)
    000001d1: 	movq	%xmm0, 0x130(%rsp)
    000001da: 	subq	%rax, %rdx
    000001dd: 	leaq	(%rdx,%rdx), %rax
    000001e1: 	subq	%rax, %r8
    000001e4: 	movq	%rdi, %rax
    000001e7: 	mulq	%rcx
    000001ea: 	movq	%r8, 0x10(%rsp)
    000001ef: 	movq	%rdx, %rax
    000001f2: 	andq	$-0x10, %rdx
    000001f6: 	shrq	$0x4, %rax
    000001fa: 	subq	%rax, %rdx
    000001fd: 	movq	%rdi, %rax
    00000200: 	addq	%rdx, %rdx
    00000203: 	subq	%rdx, %rax
    00000206: 	movq	%rax, %xmm0
    0000020b: 	leal	(%r12,%r12), %eax
    0000020f: 	cwtl
    00000210: 	punpcklqdq	%xmm0, %xmm0
    00000214: 	cltd
    00000215: 	movaps	%xmm0, 0x140(%rsp)
    0000021d: 	idivl	%esi
    0000021f: 	movaps	%xmm0, 0x150(%rsp)
    00000227: 	movaps	%xmm0, 0x160(%rsp)
    0000022f: 	movaps	%xmm0, 0x170(%rsp)
    00000237: 	movaps	%xmm0, 0x180(%rsp)
    0000023f: 	movaps	%xmm0, 0x190(%rsp)
    00000247: 	movaps	%xmm0, 0x1a0(%rsp)
    0000024f: 	movaps	%xmm0, 0x1b0(%rsp)
    00000257: 	movaps	%xmm0, 0x1c0(%rsp)
    0000025f: 	movaps	%xmm0, 0x1d0(%rsp)
    00000267: 	movaps	%xmm0, 0x1e0(%rsp)
    0000026f: 	movq	%r13, %rsi
    00000272: 	movaps	%xmm0, 0x1f0(%rsp)
    0000027a: 	movaps	%xmm0, 0x200(%rsp)
    00000282: 	movaps	%xmm0, 0x210(%rsp)
    0000028a: 	movaps	%xmm0, 0x220(%rsp)
    00000292: 	addl	%eax, %r12d
    00000295: 	movswq	%r12w, %r12
    00000299: 	movq	%r12, %rax
    0000029c: 	mulq	%rcx
    0000029f: 	movq	%rdx, %rax
    000002a2: 	andq	$-0x10, %rdx
    000002a6: 	shrq	$0x4, %rax
    000002aa: 	subq	%rax, %rdx
    000002ad: 	movq	%r12, %rax
    000002b0: 	leaq	0xb0(%rsp), %r12
    000002b8: 	addq	%rdx, %rdx
    000002bb: 	movq	%r12, %rdi
    000002be: 	subq	%rdx, %rax
    000002c1: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002c8: 	movq	%rax, %xmm0
    000002cd: 	punpcklqdq	%xmm0, %xmm0
    000002d1: 	movaps	%xmm0, 0x230(%rsp)
    000002d9: 	movaps	%xmm0, 0x240(%rsp)
    000002e1: 	movaps	%xmm0, 0x250(%rsp)
    000002e9: 	movaps	%xmm0, 0x260(%rsp)
    000002f1: 	movaps	%xmm0, 0x270(%rsp)
    000002f9: 	movaps	%xmm0, 0x280(%rsp)
    00000301: 	movaps	%xmm0, 0x290(%rsp)
    00000309: 	movaps	%xmm0, 0x2a0(%rsp)
    00000311: 	movaps	%xmm0, 0x2b0(%rsp)
    00000319: 	movaps	%xmm0, 0x2c0(%rsp)
    00000321: 	movaps	%xmm0, 0x2d0(%rsp)
    00000329: 	movaps	%xmm0, 0x2e0(%rsp)
    00000331: 	movaps	%xmm0, 0x2f0(%rsp)
    00000339: 	movaps	%xmm0, 0x300(%rsp)
    00000341: 	movaps	%xmm0, 0x310(%rsp)
    00000349: 	movaps	%xmm3, 0xd0(%rsp)
    00000351: 	movaps	%xmm2, 0xe0(%rsp)
    00000359: 	movaps	%xmm2, 0xf0(%rsp)
    00000361: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 865
    00000366: 	callq	clock@PLT # Offset: 870
    0000036b: 	movl	iterations(%rip), %ecx
    00000371: 	xorl	%r14d, %r14d
    00000374: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000037b: 	movq	%rax, start_time(%rip)
    00000382: 	testl	%ecx, %ecx
    00000384: 	jle	.Ltmp1606 # Offset: 900
    0000038a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1609:
    00000390: 	movq	%rbp, %rax
    00000393: 	pxor	%xmm0, %xmm0
    00000397: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1607:
    000003a0: 	paddw	(%rax), %xmm0
    000003a4: 	addq	$0x10, %rax
    000003a8: 	cmpq	%rax, %rbx
    000003ab: 	jne	.Ltmp1607 # Offset: 939
    000003ad: 	imulw	$0x1f40, init_value(%rip), %dx
    000003b6: 	movdqa	%xmm0, %xmm1
    000003ba: 	psrldq	$0x8, %xmm1
    000003bf: 	paddw	%xmm1, %xmm0
    000003c3: 	movdqa	%xmm0, %xmm1
    000003c7: 	psrldq	$0x4, %xmm1
    000003cc: 	paddw	%xmm1, %xmm0
    000003d0: 	movdqa	%xmm0, %xmm1
    000003d4: 	psrldq	$0x2, %xmm1
    000003d9: 	paddw	%xmm1, %xmm0
    000003dd: 	pextrw	$0x0, %xmm0, %eax
    000003e2: 	cmpw	%ax, %dx
    000003e5: 	je	.Ltmp1608 # Offset: 997
    000003e7: 	movq	0xb0(%rsp), %rdx
    000003ef: 	movq	%r15, %rsi
    000003f2: 	movl	$0x1, %edi
    000003f7: 	xorl	%eax, %eax
    000003f9: 	callq	__printf_chk@PLT # Offset: 1017
    000003fe: 	movl	iterations(%rip), %ecx
.Ltmp1608:
    00000404: 	addl	$0x1, %r14d
    00000408: 	cmpl	%ecx, %r14d
    0000040b: 	jl	.Ltmp1609 # Offset: 1035
.Ltmp1606:
    0000040d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000414: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    0000041b: 	subq	$0x20, %rax
    0000041f: 	cmpq	%rax, %r15
    00000422: 	je	.Ltmp1610 # Offset: 1058
    00000428: 	leaq	0x10(%r15), %rdi
    0000042c: 	movq	0xb8(%rsp), %r14
    00000434: 	movq	%rdi, (%r15)
    00000437: 	movq	0xb0(%rsp), %rax
    0000043f: 	movq	%rax, %rsi
    00000442: 	movq	%rax, (%rsp)
    00000446: 	addq	%r14, %rsi
    00000449: 	je	.Ltmp1611 # Offset: 1097
    0000044b: 	testq	%rax, %rax
    0000044e: 	je	.Ltmp1612 # Offset: 1102
.Ltmp1611:
    00000454: 	movq	%r14, 0x48(%rsp)
    00000459: 	cmpq	$0xf, %r14
    0000045d: 	ja	.Ltmp1613 # Offset: 1117
    00000463: 	cmpq	$0x1, %r14
    00000467: 	jne	.Ltmp1614 # Offset: 1127
    0000046d: 	movq	(%rsp), %rax
    00000471: 	movzbl	(%rax), %eax
    00000474: 	movb	%al, 0x10(%r15)
.Ltmp1751:
    00000478: 	movq	%r14, 0x8(%r15)
    0000047c: 	movb	$0x0, (%rdi,%r14)
    00000481: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000488: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000048f: 	addq	$0x20, %rax
    00000493: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000049a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000004a1: 	je	.Ltmp1615 # Offset: 1185
.Ltmp1768:
    000004a7: 	movq	-0x20(%rax), %r14
    000004ab: 	callq	clock@PLT # Offset: 1195
    000004b0: 	pxor	%xmm0, %xmm0
    000004b4: 	movq	%rax, end_time(%rip)
    000004bb: 	movq	%r14, %rdi
    000004be: 	subq	start_time(%rip), %rax
    000004c5: 	cvtsi2sd	%rax, %xmm0
    000004ca: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004d2: 	callq	_Z13record_resultdPKc # Offset: 1234
    000004d7: 	movq	0xb0(%rsp), %rdi
    000004df: 	leaq	0xc0(%rsp), %rax
    000004e7: 	movq	%rax, (%rsp)
    000004eb: 	cmpq	%rax, %rdi
    000004ee: 	je	.Ltmp1616 # Offset: 1262
    000004f0: 	movq	0xc0(%rsp), %rax
    000004f8: 	leaq	0x1(%rax), %rsi
    000004fc: 	callq	_ZdlPvm@PLT # Offset: 1276
.Ltmp1616:
    00000501: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000508: 	movq	%r13, %rsi
    0000050b: 	movq	%r12, %rdi
    0000050e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1294
    00000513: 	callq	clock@PLT # Offset: 1299
    00000518: 	movl	iterations(%rip), %ecx
    0000051e: 	xorl	%r14d, %r14d
    00000521: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000528: 	movq	%rax, start_time(%rip)
    0000052f: 	testl	%ecx, %ecx
    00000531: 	jle	.Ltmp1617 # Offset: 1329
    00000533: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1620:
    00000538: 	movq	%rbp, %rax
    0000053b: 	pxor	%xmm0, %xmm0
    0000053f: 	nop # Size: 1
.Ltmp1618:
    00000540: 	paddw	(%rax), %xmm0
    00000544: 	addq	$0x10, %rax
    00000548: 	cmpq	%rax, %rbx
    0000054b: 	jne	.Ltmp1618 # Offset: 1355
    0000054d: 	imulw	$0x1f40, init_value(%rip), %dx
    00000556: 	movdqa	%xmm0, %xmm1
    0000055a: 	psrldq	$0x8, %xmm1
    0000055f: 	paddw	%xmm1, %xmm0
    00000563: 	movdqa	%xmm0, %xmm1
    00000567: 	psrldq	$0x4, %xmm1
    0000056c: 	paddw	%xmm1, %xmm0
    00000570: 	movdqa	%xmm0, %xmm1
    00000574: 	psrldq	$0x2, %xmm1
    00000579: 	paddw	%xmm1, %xmm0
    0000057d: 	pextrw	$0x0, %xmm0, %eax
    00000582: 	cmpw	%ax, %dx
    00000585: 	je	.Ltmp1619 # Offset: 1413
    00000587: 	movq	0xb0(%rsp), %rdx
    0000058f: 	movq	%r15, %rsi
    00000592: 	movl	$0x1, %edi
    00000597: 	xorl	%eax, %eax
    00000599: 	callq	__printf_chk@PLT # Offset: 1433
    0000059e: 	movl	iterations(%rip), %ecx
.Ltmp1619:
    000005a4: 	addl	$0x1, %r14d
    000005a8: 	cmpl	%ecx, %r14d
    000005ab: 	jl	.Ltmp1620 # Offset: 1451
.Ltmp1617:
    000005ad: 	movq	%r12, %rsi
    000005b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000005b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1463
    000005bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005d1: 	je	.Ltmp1621 # Offset: 1489
.Ltmp1773:
    000005d7: 	movq	-0x20(%rax), %r14
    000005db: 	callq	clock@PLT # Offset: 1499
    000005e0: 	pxor	%xmm0, %xmm0
    000005e4: 	movq	%rax, end_time(%rip)
    000005eb: 	movq	%r14, %rdi
    000005ee: 	subq	start_time(%rip), %rax
    000005f5: 	cvtsi2sd	%rax, %xmm0
    000005fa: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000602: 	callq	_Z13record_resultdPKc # Offset: 1538
    00000607: 	movq	0xb0(%rsp), %rdi
    0000060f: 	cmpq	(%rsp), %rdi
    00000613: 	je	.Ltmp1622 # Offset: 1555
    00000615: 	movq	0xc0(%rsp), %rax
    0000061d: 	leaq	0x1(%rax), %rsi
    00000621: 	callq	_ZdlPvm@PLT # Offset: 1569
.Ltmp1622:
    00000626: 	leaq	DATAat0x1c208(%rip), %rdx
    0000062d: 	movq	%r13, %rsi
    00000630: 	movq	%r12, %rdi
    00000633: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1587
    00000638: 	callq	clock@PLT # Offset: 1592
    0000063d: 	movl	iterations(%rip), %ecx
    00000643: 	xorl	%r14d, %r14d
    00000646: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000064d: 	movq	%rax, start_time(%rip)
    00000654: 	testl	%ecx, %ecx
    00000656: 	jle	.Ltmp1623 # Offset: 1622
    0000065c: 	nopl	(%rax) # Size: 4
.Ltmp1626:
    00000660: 	movq	%rbp, %rax
    00000663: 	pxor	%xmm0, %xmm0
    00000667: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1624:
    00000670: 	paddw	(%rax), %xmm0
    00000674: 	addq	$0x10, %rax
    00000678: 	cmpq	%rax, %rbx
    0000067b: 	jne	.Ltmp1624 # Offset: 1659
    0000067d: 	imulw	$0x1f40, init_value(%rip), %dx
    00000686: 	movdqa	%xmm0, %xmm1
    0000068a: 	psrldq	$0x8, %xmm1
    0000068f: 	paddw	%xmm1, %xmm0
    00000693: 	movdqa	%xmm0, %xmm1
    00000697: 	psrldq	$0x4, %xmm1
    0000069c: 	paddw	%xmm1, %xmm0
    000006a0: 	movdqa	%xmm0, %xmm1
    000006a4: 	psrldq	$0x2, %xmm1
    000006a9: 	paddw	%xmm1, %xmm0
    000006ad: 	pextrw	$0x0, %xmm0, %eax
    000006b2: 	cmpw	%ax, %dx
    000006b5: 	je	.Ltmp1625 # Offset: 1717
    000006b7: 	movq	0xb0(%rsp), %rdx
    000006bf: 	movq	%r15, %rsi
    000006c2: 	movl	$0x1, %edi
    000006c7: 	xorl	%eax, %eax
    000006c9: 	callq	__printf_chk@PLT # Offset: 1737
    000006ce: 	movl	iterations(%rip), %ecx
.Ltmp1625:
    000006d4: 	addl	$0x1, %r14d
    000006d8: 	cmpl	%ecx, %r14d
    000006db: 	jl	.Ltmp1626 # Offset: 1755
.Ltmp1623:
    000006dd: 	movq	%r12, %rsi
    000006e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000006e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1767
    000006ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006f3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000701: 	je	.Ltmp1627 # Offset: 1793
.Ltmp1772:
    00000707: 	movq	-0x20(%rax), %r14
    0000070b: 	callq	clock@PLT # Offset: 1803
    00000710: 	pxor	%xmm0, %xmm0
    00000714: 	movq	%rax, end_time(%rip)
    0000071b: 	movq	%r14, %rdi
    0000071e: 	subq	start_time(%rip), %rax
    00000725: 	cvtsi2sd	%rax, %xmm0
    0000072a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000732: 	callq	_Z13record_resultdPKc # Offset: 1842
    00000737: 	movq	0xb0(%rsp), %rdi
    0000073f: 	cmpq	(%rsp), %rdi
    00000743: 	je	.Ltmp1628 # Offset: 1859
    00000745: 	movq	0xc0(%rsp), %rax
    0000074d: 	leaq	0x1(%rax), %rsi
    00000751: 	callq	_ZdlPvm@PLT # Offset: 1873
.Ltmp1628:
    00000756: 	leaq	DATAat0x1c21d(%rip), %rdx
    0000075d: 	movq	%r13, %rsi
    00000760: 	movq	%r12, %rdi
    00000763: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1891
    00000768: 	callq	clock@PLT # Offset: 1896
    0000076d: 	movl	iterations(%rip), %ecx
    00000773: 	xorl	%r14d, %r14d
    00000776: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000077d: 	movq	%rax, start_time(%rip)
    00000784: 	testl	%ecx, %ecx
    00000786: 	jle	.Ltmp1629 # Offset: 1926
    0000078c: 	nopl	(%rax) # Size: 4
.Ltmp1632:
    00000790: 	movq	%rbp, %rax
    00000793: 	pxor	%xmm0, %xmm0
    00000797: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1630:
    000007a0: 	paddw	(%rax), %xmm0
    000007a4: 	addq	$0x10, %rax
    000007a8: 	cmpq	%rax, %rbx
    000007ab: 	jne	.Ltmp1630 # Offset: 1963
    000007ad: 	imulw	$0x1f40, init_value(%rip), %dx
    000007b6: 	movdqa	%xmm0, %xmm1
    000007ba: 	psrldq	$0x8, %xmm1
    000007bf: 	paddw	%xmm1, %xmm0
    000007c3: 	movdqa	%xmm0, %xmm1
    000007c7: 	psrldq	$0x4, %xmm1
    000007cc: 	paddw	%xmm1, %xmm0
    000007d0: 	movdqa	%xmm0, %xmm1
    000007d4: 	psrldq	$0x2, %xmm1
    000007d9: 	paddw	%xmm1, %xmm0
    000007dd: 	pextrw	$0x0, %xmm0, %eax
    000007e2: 	cmpw	%ax, %dx
    000007e5: 	je	.Ltmp1631 # Offset: 2021
    000007e7: 	movq	0xb0(%rsp), %rdx
    000007ef: 	movq	%r15, %rsi
    000007f2: 	movl	$0x1, %edi
    000007f7: 	xorl	%eax, %eax
    000007f9: 	callq	__printf_chk@PLT # Offset: 2041
    000007fe: 	movl	iterations(%rip), %ecx
.Ltmp1631:
    00000804: 	addl	$0x1, %r14d
    00000808: 	cmpl	%ecx, %r14d
    0000080b: 	jl	.Ltmp1632 # Offset: 2059
.Ltmp1629:
    0000080d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000814: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    0000081b: 	subq	$0x20, %rax
    0000081f: 	cmpq	%rax, %r15
    00000822: 	je	.Ltmp1633 # Offset: 2082
    00000828: 	leaq	0x10(%r15), %rdi
    0000082c: 	movq	0xb8(%rsp), %r14
    00000834: 	movq	%rdi, (%r15)
    00000837: 	movq	0xb0(%rsp), %rax
    0000083f: 	movq	%rax, %rsi
    00000842: 	movq	%rax, 0x38(%rsp)
    00000847: 	addq	%r14, %rsi
    0000084a: 	je	.Ltmp1634 # Offset: 2122
    0000084c: 	testq	%rax, %rax
    0000084f: 	je	.Ltmp1635 # Offset: 2127
.Ltmp1634:
    00000855: 	movq	%r14, 0x48(%rsp)
    0000085a: 	cmpq	$0xf, %r14
    0000085e: 	ja	.Ltmp1636 # Offset: 2142
    00000864: 	cmpq	$0x1, %r14
    00000868: 	jne	.Ltmp1637 # Offset: 2152
    0000086e: 	movq	0x38(%rsp), %rax
    00000873: 	movzbl	(%rax), %eax
    00000876: 	movb	%al, 0x10(%r15)
.Ltmp1800:
    0000087a: 	movq	%r14, 0x8(%r15)
    0000087e: 	movb	$0x0, (%rdi,%r14)
    00000883: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000088a: 	addq	$0x20, %rax
    0000088e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1771:
    00000895: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000089c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008a3: 	je	.Ltmp1638 # Offset: 2211
.Ltmp1770:
    000008a9: 	movq	-0x20(%rax), %r14
    000008ad: 	callq	clock@PLT # Offset: 2221
    000008b2: 	pxor	%xmm0, %xmm0
    000008b6: 	movq	%rax, end_time(%rip)
    000008bd: 	movq	%r14, %rdi
    000008c0: 	subq	start_time(%rip), %rax
    000008c7: 	cvtsi2sd	%rax, %xmm0
    000008cc: 	divsd	DATAat0x1c370(%rip), %xmm0
    000008d4: 	callq	_Z13record_resultdPKc # Offset: 2260
    000008d9: 	movq	0xb0(%rsp), %rdi
    000008e1: 	cmpq	(%rsp), %rdi
    000008e5: 	je	.Ltmp1639 # Offset: 2277
    000008e7: 	movq	0xc0(%rsp), %rax
    000008ef: 	leaq	0x1(%rax), %rsi
    000008f3: 	callq	_ZdlPvm@PLT # Offset: 2291
.Ltmp1639:
    000008f8: 	leaq	DATAat0x1c23a(%rip), %rdx
    000008ff: 	movq	%r13, %rsi
    00000902: 	movq	%r12, %rdi
    00000905: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2309
    0000090a: 	callq	clock@PLT # Offset: 2314
    0000090f: 	movl	iterations(%rip), %ecx
    00000915: 	xorl	%r14d, %r14d
    00000918: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000091f: 	movq	%rax, start_time(%rip)
    00000926: 	testl	%ecx, %ecx
    00000928: 	jle	.Ltmp1640 # Offset: 2344
    0000092e: 	nop # Size: 2
.Ltmp1643:
    00000930: 	movq	%rbp, %rax
    00000933: 	pxor	%xmm0, %xmm0
    00000937: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1641:
    00000940: 	paddw	(%rax), %xmm0
    00000944: 	addq	$0x10, %rax
    00000948: 	cmpq	%rax, %rbx
    0000094b: 	jne	.Ltmp1641 # Offset: 2379
    0000094d: 	imulw	$0x1f40, init_value(%rip), %dx
    00000956: 	movdqa	%xmm0, %xmm1
    0000095a: 	psrldq	$0x8, %xmm1
    0000095f: 	paddw	%xmm1, %xmm0
    00000963: 	movdqa	%xmm0, %xmm1
    00000967: 	psrldq	$0x4, %xmm1
    0000096c: 	paddw	%xmm1, %xmm0
    00000970: 	movdqa	%xmm0, %xmm1
    00000974: 	psrldq	$0x2, %xmm1
    00000979: 	paddw	%xmm1, %xmm0
    0000097d: 	pextrw	$0x0, %xmm0, %eax
    00000982: 	cmpw	%ax, %dx
    00000985: 	je	.Ltmp1642 # Offset: 2437
    00000987: 	movq	0xb0(%rsp), %rdx
    0000098f: 	movq	%r15, %rsi
    00000992: 	movl	$0x1, %edi
    00000997: 	xorl	%eax, %eax
    00000999: 	callq	__printf_chk@PLT # Offset: 2457
    0000099e: 	movl	iterations(%rip), %ecx
.Ltmp1642:
    000009a4: 	addl	$0x1, %r14d
    000009a8: 	cmpl	%ecx, %r14d
    000009ab: 	jl	.Ltmp1643 # Offset: 2475
.Ltmp1640:
    000009ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009b4: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    000009bb: 	subq	$0x20, %rax
    000009bf: 	cmpq	%rax, %r15
    000009c2: 	je	.Ltmp1644 # Offset: 2498
    000009c8: 	leaq	0x10(%r15), %rdi
    000009cc: 	movq	0xb8(%rsp), %r14
    000009d4: 	movq	%rdi, (%r15)
    000009d7: 	movq	0xb0(%rsp), %rax
    000009df: 	movq	%rax, %rsi
    000009e2: 	movq	%rax, 0x38(%rsp)
    000009e7: 	addq	%r14, %rsi
    000009ea: 	je	.Ltmp1645 # Offset: 2538
    000009ec: 	testq	%rax, %rax
    000009ef: 	je	.Ltmp1646 # Offset: 2543
.Ltmp1645:
    000009f5: 	movq	%r14, 0x48(%rsp)
    000009fa: 	cmpq	$0xf, %r14
    000009fe: 	ja	.Ltmp1647 # Offset: 2558
    00000a04: 	cmpq	$0x1, %r14
    00000a08: 	jne	.Ltmp1648 # Offset: 2568
    00000a0e: 	movq	0x38(%rsp), %rax
    00000a13: 	movzbl	(%rax), %eax
    00000a16: 	movb	%al, 0x10(%r15)
.Ltmp1799:
    00000a1a: 	movq	%r14, 0x8(%r15)
    00000a1e: 	movb	$0x0, (%rdi,%r14)
    00000a23: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a31: 	addq	$0x20, %rax
    00000a35: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a3c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000a43: 	je	.Ltmp1649 # Offset: 2627
.Ltmp1769:
    00000a49: 	movq	-0x20(%rax), %r14
    00000a4d: 	callq	clock@PLT # Offset: 2637
    00000a52: 	pxor	%xmm0, %xmm0
    00000a56: 	movq	%rax, end_time(%rip)
    00000a5d: 	movq	%r14, %rdi
    00000a60: 	subq	start_time(%rip), %rax
    00000a67: 	cvtsi2sd	%rax, %xmm0
    00000a6c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000a74: 	callq	_Z13record_resultdPKc # Offset: 2676
    00000a79: 	movq	0xb0(%rsp), %rdi
    00000a81: 	cmpq	(%rsp), %rdi
    00000a85: 	je	.Ltmp1650 # Offset: 2693
    00000a87: 	movq	0xc0(%rsp), %rax
    00000a8f: 	leaq	0x1(%rax), %rsi
    00000a93: 	callq	_ZdlPvm@PLT # Offset: 2707
.Ltmp1650:
    00000a98: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000a9f: 	movq	%r13, %rsi
    00000aa2: 	movq	%r12, %rdi
    00000aa5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2725
    00000aaa: 	callq	clock@PLT # Offset: 2730
    00000aaf: 	movl	iterations(%rip), %ecx
    00000ab5: 	xorl	%r14d, %r14d
    00000ab8: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000abf: 	movq	%rax, start_time(%rip)
    00000ac6: 	testl	%ecx, %ecx
    00000ac8: 	jle	.Ltmp1651 # Offset: 2760
    00000ace: 	nop # Size: 2
.Ltmp1654:
    00000ad0: 	movq	%rbp, %rax
    00000ad3: 	pxor	%xmm0, %xmm0
    00000ad7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1652:
    00000ae0: 	paddw	(%rax), %xmm0
    00000ae4: 	addq	$0x10, %rax
    00000ae8: 	cmpq	%rbx, %rax
    00000aeb: 	jne	.Ltmp1652 # Offset: 2795
    00000aed: 	imulw	$0x1f40, init_value(%rip), %dx
    00000af6: 	movdqa	%xmm0, %xmm1
    00000afa: 	psrldq	$0x8, %xmm1
    00000aff: 	paddw	%xmm1, %xmm0
    00000b03: 	movdqa	%xmm0, %xmm1
    00000b07: 	psrldq	$0x4, %xmm1
    00000b0c: 	paddw	%xmm1, %xmm0
    00000b10: 	movdqa	%xmm0, %xmm1
    00000b14: 	psrldq	$0x2, %xmm1
    00000b19: 	paddw	%xmm1, %xmm0
    00000b1d: 	pextrw	$0x0, %xmm0, %eax
    00000b22: 	cmpw	%ax, %dx
    00000b25: 	je	.Ltmp1653 # Offset: 2853
    00000b27: 	movq	0xb0(%rsp), %rdx
    00000b2f: 	movq	%r15, %rsi
    00000b32: 	movl	$0x1, %edi
    00000b37: 	xorl	%eax, %eax
    00000b39: 	callq	__printf_chk@PLT # Offset: 2873
    00000b3e: 	movl	iterations(%rip), %ecx
.Ltmp1653:
    00000b44: 	addl	$0x1, %r14d
    00000b48: 	cmpl	%ecx, %r14d
    00000b4b: 	jl	.Ltmp1654 # Offset: 2891
.Ltmp1651:
    00000b4d: 	movq	%r12, %rsi
    00000b50: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b57: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2903
    00000b5c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b63: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b6a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b71: 	je	.Ltmp1655 # Offset: 2929
.Ltmp1775:
    00000b77: 	movq	-0x20(%rax), %rbp
    00000b7b: 	callq	clock@PLT # Offset: 2939
    00000b80: 	pxor	%xmm0, %xmm0
    00000b84: 	movq	%rax, end_time(%rip)
    00000b8b: 	movq	%rbp, %rdi
    00000b8e: 	subq	start_time(%rip), %rax
    00000b95: 	cvtsi2sd	%rax, %xmm0
    00000b9a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000ba2: 	callq	_Z13record_resultdPKc # Offset: 2978
    00000ba7: 	movq	0xb0(%rsp), %rdi
    00000baf: 	cmpq	(%rsp), %rdi
    00000bb3: 	je	.Ltmp1656 # Offset: 2995
    00000bb5: 	movq	0xc0(%rsp), %rax
    00000bbd: 	leaq	0x1(%rax), %rsi
    00000bc1: 	callq	_ZdlPvm@PLT # Offset: 3009
.Ltmp1656:
    00000bc6: 	leaq	DATAat0x1c265(%rip), %rdx
    00000bcd: 	movq	%r13, %rsi
    00000bd0: 	movq	%r12, %rdi
    00000bd3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3027
    00000bd8: 	callq	clock@PLT # Offset: 3032
    00000bdd: 	xorl	%ebp, %ebp
    00000bdf: 	imulw	$0x1f40, 0x20(%rsp), %bx
    00000be6: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000bed: 	movq	%rax, start_time(%rip)
    00000bf4: 	movl	iterations(%rip), %eax
    00000bfa: 	testl	%eax, %eax
    00000bfc: 	jle	.Ltmp1657 # Offset: 3068
.Ltmp1752:
    00000bfe: 	imulw	$0x1f40, init_value(%rip), %ax
    00000c07: 	cmpw	%ax, %bx
    00000c0a: 	jne	.Ltmp1658 # Offset: 3082
.Ltmp1657:
    00000c10: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c17: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000c1e: 	subq	$0x20, %rax
    00000c22: 	cmpq	%rax, %rbp
    00000c25: 	je	.Ltmp1659 # Offset: 3109
    00000c2b: 	leaq	0x10(%rbp), %rdi
    00000c2f: 	movq	0xb8(%rsp), %r14
    00000c37: 	movq	%rdi, (%rbp)
    00000c3b: 	movq	0xb0(%rsp), %r15
    00000c43: 	movq	%r15, %rax
    00000c46: 	addq	%r14, %rax
    00000c49: 	je	.Ltmp1660 # Offset: 3145
    00000c4b: 	testq	%r15, %r15
    00000c4e: 	je	.Ltmp1661 # Offset: 3150
.Ltmp1660:
    00000c54: 	movq	%r14, 0x48(%rsp)
    00000c59: 	cmpq	$0xf, %r14
    00000c5d: 	ja	.Ltmp1662 # Offset: 3165
    00000c63: 	cmpq	$0x1, %r14
    00000c67: 	jne	.Ltmp1663 # Offset: 3175
    00000c6d: 	movzbl	(%r15), %eax
    00000c71: 	movb	%al, 0x10(%rbp)
.Ltmp1802:
    00000c74: 	movq	%r14, 0x8(%rbp)
    00000c78: 	movb	$0x0, (%rdi,%r14)
    00000c7d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c84: 	addq	$0x20, %rax
    00000c88: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1774:
    00000c8f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c96: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c9d: 	je	.Ltmp1664 # Offset: 3229
.Ltmp1765:
    00000ca3: 	movq	-0x20(%rax), %rbp
    00000ca7: 	callq	clock@PLT # Offset: 3239
    00000cac: 	pxor	%xmm0, %xmm0
    00000cb0: 	movq	%rax, end_time(%rip)
    00000cb7: 	movq	%rbp, %rdi
    00000cba: 	subq	start_time(%rip), %rax
    00000cc1: 	cvtsi2sd	%rax, %xmm0
    00000cc6: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000cce: 	callq	_Z13record_resultdPKc # Offset: 3278
    00000cd3: 	movq	0xb0(%rsp), %rdi
    00000cdb: 	cmpq	(%rsp), %rdi
    00000cdf: 	je	.Ltmp1665 # Offset: 3295
    00000ce1: 	movq	0xc0(%rsp), %rax
    00000ce9: 	leaq	0x1(%rax), %rsi
    00000ced: 	callq	_ZdlPvm@PLT # Offset: 3309
.Ltmp1665:
    00000cf2: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000cf9: 	movq	%r13, %rsi
    00000cfc: 	movq	%r12, %rdi
    00000cff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3327
    00000d04: 	callq	clock@PLT # Offset: 3332
    00000d09: 	movl	iterations(%rip), %r15d
    00000d10: 	xorl	%ebp, %ebp
    00000d12: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000d19: 	movq	%rax, start_time(%rip)
    00000d20: 	testl	%r15d, %r15d
    00000d23: 	jle	.Ltmp1666 # Offset: 3363
    00000d25: 	nopl	(%rax) # Size: 3
.Ltmp1753:
    00000d28: 	imulw	$0x1f40, init_value(%rip), %ax
    00000d31: 	cmpw	%ax, %bx
    00000d34: 	jne	.Ltmp1667 # Offset: 3380
.Ltmp1666:
    00000d3a: 	movq	%r12, %rsi
    00000d3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d44: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3396
    00000d49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d50: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d57: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d5e: 	je	.Ltmp1668 # Offset: 3422
.Ltmp1766:
    00000d64: 	movq	-0x20(%rax), %rbp
    00000d68: 	callq	clock@PLT # Offset: 3432
    00000d6d: 	pxor	%xmm0, %xmm0
    00000d71: 	movq	%rax, end_time(%rip)
    00000d78: 	movq	%rbp, %rdi
    00000d7b: 	subq	start_time(%rip), %rax
    00000d82: 	cvtsi2sd	%rax, %xmm0
    00000d87: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d8f: 	callq	_Z13record_resultdPKc # Offset: 3471
    00000d94: 	movq	0xb0(%rsp), %rdi
    00000d9c: 	cmpq	(%rsp), %rdi
    00000da0: 	je	.Ltmp1669 # Offset: 3488
    00000da2: 	movq	0xc0(%rsp), %rax
    00000daa: 	leaq	0x1(%rax), %rsi
    00000dae: 	callq	_ZdlPvm@PLT # Offset: 3502
.Ltmp1669:
    00000db3: 	leaq	DATAat0x1c289(%rip), %rdx
    00000dba: 	movq	%r13, %rsi
    00000dbd: 	movq	%r12, %rdi
    00000dc0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3520
    00000dc5: 	callq	clock@PLT # Offset: 3525
    00000dca: 	movl	iterations(%rip), %r11d
    00000dd1: 	xorl	%ebp, %ebp
    00000dd3: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000dda: 	movq	%rax, start_time(%rip)
    00000de1: 	testl	%r11d, %r11d
    00000de4: 	jle	.Ltmp1670 # Offset: 3556
    00000de6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1754:
    00000df0: 	imulw	$0x1f40, init_value(%rip), %ax
    00000df9: 	cmpw	%ax, %bx
    00000dfc: 	jne	.Ltmp1671 # Offset: 3580
.Ltmp1670:
    00000e02: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e09: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000e10: 	subq	$0x20, %rax
    00000e14: 	cmpq	%rax, %rbp
    00000e17: 	je	.Ltmp1672 # Offset: 3607
    00000e1d: 	leaq	0x10(%rbp), %rdi
    00000e21: 	movq	0xb8(%rsp), %r14
    00000e29: 	movq	%rdi, (%rbp)
    00000e2d: 	movq	0xb0(%rsp), %r15
    00000e35: 	movq	%r15, %rax
    00000e38: 	addq	%r14, %rax
    00000e3b: 	je	.Ltmp1673 # Offset: 3643
    00000e3d: 	testq	%r15, %r15
    00000e40: 	je	.Ltmp1674 # Offset: 3648
.Ltmp1673:
    00000e46: 	movq	%r14, 0x48(%rsp)
    00000e4b: 	cmpq	$0xf, %r14
    00000e4f: 	ja	.Ltmp1675 # Offset: 3663
    00000e55: 	cmpq	$0x1, %r14
    00000e59: 	jne	.Ltmp1676 # Offset: 3673
    00000e5f: 	movzbl	(%r15), %eax
    00000e63: 	movb	%al, 0x10(%rbp)
.Ltmp1792:
    00000e66: 	movq	%r14, 0x8(%rbp)
    00000e6a: 	movb	$0x0, (%rdi,%r14)
    00000e6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e76: 	addq	$0x20, %rax
    00000e7a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1785:
    00000e81: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e88: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e8f: 	je	.Ltmp1677 # Offset: 3727
.Ltmp1784:
    00000e95: 	movq	-0x20(%rax), %rbp
    00000e99: 	callq	clock@PLT # Offset: 3737
    00000e9e: 	pxor	%xmm0, %xmm0
    00000ea2: 	movq	%rax, end_time(%rip)
    00000ea9: 	movq	%rbp, %rdi
    00000eac: 	subq	start_time(%rip), %rax
    00000eb3: 	cvtsi2sd	%rax, %xmm0
    00000eb8: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000ec0: 	callq	_Z13record_resultdPKc # Offset: 3776
    00000ec5: 	movq	0xb0(%rsp), %rdi
    00000ecd: 	cmpq	(%rsp), %rdi
    00000ed1: 	je	.Ltmp1678 # Offset: 3793
    00000ed3: 	movq	0xc0(%rsp), %rax
    00000edb: 	leaq	0x1(%rax), %rsi
    00000edf: 	callq	_ZdlPvm@PLT # Offset: 3807
.Ltmp1678:
    00000ee4: 	leaq	DATAat0x1c298(%rip), %rdx
    00000eeb: 	movq	%r13, %rsi
    00000eee: 	movq	%r12, %rdi
    00000ef1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3825
    00000ef6: 	movq	0x30(%rsp), %rdi
    00000efb: 	movq	%r12, %rdx
    00000efe: 	movl	$0x1f40, %esi
    00000f03: 	callq	_Z22test_struct4_deref_optIs12test_struct1IsEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3843
    00000f08: 	movq	0xb0(%rsp), %rdi
    00000f10: 	cmpq	(%rsp), %rdi
    00000f14: 	je	.Ltmp1679 # Offset: 3860
    00000f16: 	movq	0xc0(%rsp), %rax
    00000f1e: 	leaq	0x1(%rax), %rsi
    00000f22: 	callq	_ZdlPvm@PLT # Offset: 3874
.Ltmp1679:
    00000f27: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000f2e: 	movq	%r13, %rsi
    00000f31: 	movq	%r12, %rdi
    00000f34: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3892
    00000f39: 	callq	clock@PLT # Offset: 3897
    00000f3e: 	movl	iterations(%rip), %r10d
    00000f45: 	xorl	%ebp, %ebp
    00000f47: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000f4e: 	movq	%rax, start_time(%rip)
    00000f55: 	testl	%r10d, %r10d
    00000f58: 	jle	.Ltmp1680 # Offset: 3928
    00000f5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1760:
    00000f60: 	imulw	$0x1f40, init_value(%rip), %ax
    00000f69: 	cmpw	%ax, %bx
    00000f6c: 	jne	.Ltmp1681 # Offset: 3948
.Ltmp1680:
    00000f72: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f79: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000f80: 	subq	$0x20, %rax
    00000f84: 	cmpq	%rax, %rbp
    00000f87: 	je	.Ltmp1682 # Offset: 3975
    00000f8d: 	leaq	0x10(%rbp), %rdi
    00000f91: 	movq	0xb8(%rsp), %r14
    00000f99: 	movq	%rdi, (%rbp)
    00000f9d: 	movq	0xb0(%rsp), %r15
    00000fa5: 	movq	%r15, %rax
    00000fa8: 	addq	%r14, %rax
    00000fab: 	je	.Ltmp1683 # Offset: 4011
    00000fad: 	testq	%r15, %r15
    00000fb0: 	je	.Ltmp1684 # Offset: 4016
.Ltmp1683:
    00000fb6: 	movq	%r14, 0x48(%rsp)
    00000fbb: 	cmpq	$0xf, %r14
    00000fbf: 	ja	.Ltmp1685 # Offset: 4031
    00000fc5: 	cmpq	$0x1, %r14
    00000fc9: 	jne	.Ltmp1686 # Offset: 4041
    00000fcf: 	movzbl	(%r15), %eax
    00000fd3: 	movb	%al, 0x10(%rbp)
.Ltmp1805:
    00000fd6: 	movq	%r14, 0x8(%rbp)
    00000fda: 	movb	$0x0, (%rdi,%r14)
    00000fdf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fe6: 	addq	$0x20, %rax
    00000fea: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1777:
    00000ff1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ff8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fff: 	je	.Ltmp1687 # Offset: 4095
.Ltmp1776:
    00001005: 	movq	-0x20(%rax), %rbp
    00001009: 	callq	clock@PLT # Offset: 4105
    0000100e: 	pxor	%xmm0, %xmm0
    00001012: 	movq	%rax, end_time(%rip)
    00001019: 	movq	%rbp, %rdi
    0000101c: 	subq	start_time(%rip), %rax
    00001023: 	cvtsi2sd	%rax, %xmm0
    00001028: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001030: 	callq	_Z13record_resultdPKc # Offset: 4144
    00001035: 	movq	0xb0(%rsp), %rdi
    0000103d: 	cmpq	(%rsp), %rdi
    00001041: 	je	.Ltmp1688 # Offset: 4161
    00001043: 	movq	0xc0(%rsp), %rax
    0000104b: 	leaq	0x1(%rax), %rsi
    0000104f: 	callq	_ZdlPvm@PLT # Offset: 4175
.Ltmp1688:
    00001054: 	leaq	DATAat0x1c2be(%rip), %rdx
    0000105b: 	movq	%r13, %rsi
    0000105e: 	movq	%r12, %rdi
    00001061: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4193
    00001066: 	callq	clock@PLT # Offset: 4198
    0000106b: 	movl	iterations(%rip), %r9d
    00001072: 	xorl	%ebp, %ebp
    00001074: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000107b: 	movq	%rax, start_time(%rip)
    00001082: 	testl	%r9d, %r9d
    00001085: 	jle	.Ltmp1689 # Offset: 4229
.Ltmp1759:
    00001087: 	imulw	$0x1f40, init_value(%rip), %ax
    00001090: 	cmpw	%ax, %bx
    00001093: 	jne	.Ltmp1690 # Offset: 4243
.Ltmp1689:
    00001099: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000010a7: 	subq	$0x20, %rax
    000010ab: 	cmpq	%rax, %rbx
    000010ae: 	je	.Ltmp1691 # Offset: 4270
    000010b4: 	leaq	0x10(%rbx), %rdi
    000010b8: 	movq	0xb8(%rsp), %r14
    000010c0: 	movq	%rdi, (%rbx)
    000010c3: 	movq	0xb0(%rsp), %rbp
    000010cb: 	movq	%rbp, %rax
    000010ce: 	addq	%r14, %rax
    000010d1: 	je	.Ltmp1692 # Offset: 4305
    000010d3: 	testq	%rbp, %rbp
    000010d6: 	je	.Ltmp1693 # Offset: 4310
.Ltmp1692:
    000010dc: 	movq	%r14, 0x48(%rsp)
    000010e1: 	cmpq	$0xf, %r14
    000010e5: 	ja	.Ltmp1694 # Offset: 4325
    000010eb: 	cmpq	$0x1, %r14
    000010ef: 	jne	.Ltmp1695 # Offset: 4335
    000010f5: 	movzbl	(%rbp), %eax
    000010f9: 	movb	%al, 0x10(%rbx)
.Ltmp1796:
    000010fc: 	movq	%r14, 0x8(%rbx)
    00001100: 	movb	$0x0, (%rdi,%r14)
    00001105: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000110c: 	addq	$0x20, %rax
    00001110: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1779:
    00001117: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000111e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001125: 	je	.Ltmp1696 # Offset: 4389
.Ltmp1763:
    0000112b: 	movq	-0x20(%rax), %rbp
    0000112f: 	callq	clock@PLT # Offset: 4399
    00001134: 	pxor	%xmm0, %xmm0
    00001138: 	movq	%rax, end_time(%rip)
    0000113f: 	movq	%rbp, %rdi
    00001142: 	subq	start_time(%rip), %rax
    00001149: 	cvtsi2sd	%rax, %xmm0
    0000114e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001156: 	callq	_Z13record_resultdPKc # Offset: 4438
    0000115b: 	movq	0xb0(%rsp), %rdi
    00001163: 	cmpq	(%rsp), %rdi
    00001167: 	je	.Ltmp1697 # Offset: 4455
    00001169: 	movq	0xc0(%rsp), %rax
    00001171: 	leaq	0x1(%rax), %rsi
    00001175: 	callq	_ZdlPvm@PLT # Offset: 4469
.Ltmp1697:
    0000117a: 	leaq	DATAat0x1c225(%rip), %rdx
    00001181: 	movq	%r13, %rsi
    00001184: 	movq	%r12, %rdi
    00001187: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4487
    0000118c: 	callq	clock@PLT # Offset: 4492
    00001191: 	movl	iterations(%rip), %r8d
    00001198: 	xorl	%ebp, %ebp
    0000119a: 	leaq	DATAat0x1c1c8(%rip), %r14
    000011a1: 	movq	%rax, start_time(%rip)
    000011a8: 	movq	0x10(%rsp), %rax
    000011ad: 	leaq	(,%rax,8), %r15
    000011b5: 	movq	0x230(%rsp,%r15), %rax
    000011bd: 	movq	0x140(%rsp,%rax,8), %rax
    000011c5: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %bx
    000011cf: 	testl	%r8d, %r8d
    000011d2: 	jle	.Ltmp1698 # Offset: 4562
    000011d4: 	nopl	(%rax) # Size: 4
.Ltmp1761:
    000011d8: 	imulw	$0x1f40, init_value(%rip), %ax
    000011e1: 	cmpw	%ax, %bx
    000011e4: 	jne	.Ltmp1699 # Offset: 4580
.Ltmp1698:
    000011ea: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000011f8: 	subq	$0x20, %rax
    000011fc: 	cmpq	%rax, %rbp
    000011ff: 	je	.Ltmp1700 # Offset: 4607
    00001205: 	leaq	0x10(%rbp), %rdi
    00001209: 	movq	0xb8(%rsp), %r14
    00001211: 	movq	%rdi, (%rbp)
    00001215: 	movq	0xb0(%rsp), %rax
    0000121d: 	movq	%rax, %rsi
    00001220: 	movq	%rax, 0x20(%rsp)
    00001225: 	addq	%r14, %rsi
    00001228: 	je	.Ltmp1701 # Offset: 4648
    0000122a: 	testq	%rax, %rax
    0000122d: 	je	.Ltmp1702 # Offset: 4653
.Ltmp1701:
    00001233: 	movq	%r14, 0x48(%rsp)
    00001238: 	cmpq	$0xf, %r14
    0000123c: 	ja	.Ltmp1703 # Offset: 4668
    00001242: 	cmpq	$0x1, %r14
    00001246: 	jne	.Ltmp1704 # Offset: 4678
    0000124c: 	movq	0x20(%rsp), %rax
    00001251: 	movzbl	(%rax), %eax
    00001254: 	movb	%al, 0x10(%rbp)
.Ltmp1798:
    00001257: 	movq	%r14, 0x8(%rbp)
    0000125b: 	movb	$0x0, (%rdi,%r14)
    00001260: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001267: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000126e: 	addq	$0x20, %rax
    00001272: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001279: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001280: 	je	.Ltmp1705 # Offset: 4736
.Ltmp1764:
    00001286: 	movq	-0x20(%rax), %rbp
    0000128a: 	callq	clock@PLT # Offset: 4746
    0000128f: 	pxor	%xmm0, %xmm0
    00001293: 	movq	%rax, end_time(%rip)
    0000129a: 	movq	%rbp, %rdi
    0000129d: 	subq	start_time(%rip), %rax
    000012a4: 	cvtsi2sd	%rax, %xmm0
    000012a9: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012b1: 	callq	_Z13record_resultdPKc # Offset: 4785
    000012b6: 	movq	0xb0(%rsp), %rdi
    000012be: 	cmpq	(%rsp), %rdi
    000012c2: 	je	.Ltmp1706 # Offset: 4802
    000012c4: 	movq	0xc0(%rsp), %rax
    000012cc: 	leaq	0x1(%rax), %rsi
    000012d0: 	callq	_ZdlPvm@PLT # Offset: 4816
.Ltmp1706:
    000012d5: 	leaq	DATAat0x1c242(%rip), %rdx
    000012dc: 	movq	%r13, %rsi
    000012df: 	movq	%r12, %rdi
    000012e2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4834
    000012e7: 	callq	clock@PLT # Offset: 4839
    000012ec: 	movl	iterations(%rip), %edi
    000012f2: 	xorl	%ebp, %ebp
    000012f4: 	leaq	DATAat0x1c1c8(%rip), %r14
    000012fb: 	movq	%rax, start_time(%rip)
    00001302: 	testl	%edi, %edi
    00001304: 	jle	.Ltmp1707 # Offset: 4868
.Ltmp1762:
    00001306: 	imulw	$0x1f40, init_value(%rip), %ax
    0000130f: 	cmpw	%ax, %bx
    00001312: 	jne	.Ltmp1708 # Offset: 4882
.Ltmp1707:
    00001318: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000131f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001326: 	subq	$0x20, %rax
    0000132a: 	cmpq	%rax, %rbp
    0000132d: 	je	.Ltmp1709 # Offset: 4909
    00001333: 	leaq	0x10(%rbp), %rdi
    00001337: 	movq	0xb8(%rsp), %r14
    0000133f: 	movq	%rdi, (%rbp)
    00001343: 	movq	0xb0(%rsp), %rax
    0000134b: 	movq	%rax, %rsi
    0000134e: 	movq	%rax, 0x20(%rsp)
    00001353: 	addq	%r14, %rsi
    00001356: 	je	.Ltmp1710 # Offset: 4950
    00001358: 	testq	%rax, %rax
    0000135b: 	je	.Ltmp1711 # Offset: 4955
.Ltmp1710:
    00001361: 	movq	%r14, 0x48(%rsp)
    00001366: 	cmpq	$0xf, %r14
    0000136a: 	ja	.Ltmp1712 # Offset: 4970
    00001370: 	cmpq	$0x1, %r14
    00001374: 	jne	.Ltmp1713 # Offset: 4980
    0000137a: 	movq	0x20(%rsp), %rax
    0000137f: 	movzbl	(%rax), %eax
    00001382: 	movb	%al, 0x10(%rbp)
.Ltmp1794:
    00001385: 	movq	%r14, 0x8(%rbp)
    00001389: 	movb	$0x0, (%rdi,%r14)
    0000138e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001395: 	addq	$0x20, %rax
    00001399: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1783:
    000013a0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013a7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ae: 	je	.Ltmp1714 # Offset: 5038
.Ltmp1782:
    000013b4: 	movq	-0x20(%rax), %rbp
    000013b8: 	callq	clock@PLT # Offset: 5048
    000013bd: 	pxor	%xmm0, %xmm0
    000013c1: 	movq	%rax, end_time(%rip)
    000013c8: 	movq	%rbp, %rdi
    000013cb: 	subq	start_time(%rip), %rax
    000013d2: 	cvtsi2sd	%rax, %xmm0
    000013d7: 	divsd	DATAat0x1c370(%rip), %xmm0
    000013df: 	callq	_Z13record_resultdPKc # Offset: 5087
    000013e4: 	movq	0xb0(%rsp), %rdi
    000013ec: 	cmpq	(%rsp), %rdi
    000013f0: 	je	.Ltmp1715 # Offset: 5104
    000013f2: 	movq	0xc0(%rsp), %rax
    000013fa: 	leaq	0x1(%rax), %rsi
    000013fe: 	callq	_ZdlPvm@PLT # Offset: 5118
.Ltmp1715:
    00001403: 	leaq	DATAat0x1c257(%rip), %rdx
    0000140a: 	movq	%r13, %rsi
    0000140d: 	movq	%r12, %rdi
    00001410: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5136
    00001415: 	callq	clock@PLT # Offset: 5141
    0000141a: 	movl	iterations(%rip), %esi
    00001420: 	xorl	%ebp, %ebp
    00001422: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001429: 	movq	%rax, start_time(%rip)
    00001430: 	testl	%esi, %esi
    00001432: 	jle	.Ltmp1716 # Offset: 5170
.Ltmp1758:
    00001434: 	imulw	$0x1f40, init_value(%rip), %ax
    0000143d: 	cmpw	%ax, %bx
    00001440: 	jne	.Ltmp1717 # Offset: 5184
.Ltmp1716:
    00001446: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000144d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001454: 	subq	$0x20, %rax
    00001458: 	cmpq	%rax, %rbx
    0000145b: 	je	.Ltmp1718 # Offset: 5211
    00001461: 	leaq	0x10(%rbx), %rdi
    00001465: 	movq	0xb8(%rsp), %r14
    0000146d: 	movq	%rdi, (%rbx)
    00001470: 	movq	0xb0(%rsp), %rbp
    00001478: 	movq	%rbp, %rax
    0000147b: 	addq	%r14, %rax
    0000147e: 	je	.Ltmp1719 # Offset: 5246
    00001480: 	testq	%rbp, %rbp
    00001483: 	je	.Ltmp1720 # Offset: 5251
.Ltmp1719:
    00001489: 	movq	%r14, 0x48(%rsp)
    0000148e: 	cmpq	$0xf, %r14
    00001492: 	ja	.Ltmp1721 # Offset: 5266
    00001498: 	cmpq	$0x1, %r14
    0000149c: 	jne	.Ltmp1722 # Offset: 5276
    000014a2: 	movzbl	(%rbp), %eax
    000014a6: 	movb	%al, 0x10(%rbx)
.Ltmp1790:
    000014a9: 	movq	%r14, 0x8(%rbx)
    000014ad: 	movb	$0x0, (%rdi,%r14)
    000014b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014b9: 	addq	$0x20, %rax
    000014bd: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1781:
    000014c4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014d2: 	je	.Ltmp1723 # Offset: 5330
.Ltmp1780:
    000014d8: 	movq	-0x20(%rax), %rbp
    000014dc: 	callq	clock@PLT # Offset: 5340
    000014e1: 	pxor	%xmm0, %xmm0
    000014e5: 	movq	%rax, end_time(%rip)
    000014ec: 	movq	%rbp, %rdi
    000014ef: 	subq	start_time(%rip), %rax
    000014f6: 	cvtsi2sd	%rax, %xmm0
    000014fb: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001503: 	callq	_Z13record_resultdPKc # Offset: 5379
    00001508: 	movq	0xb0(%rsp), %rdi
    00001510: 	cmpq	(%rsp), %rdi
    00001514: 	je	.Ltmp1724 # Offset: 5396
    00001516: 	movq	0xc0(%rsp), %rax
    0000151e: 	leaq	0x1(%rax), %rsi
    00001522: 	callq	_ZdlPvm@PLT # Offset: 5410
.Ltmp1724:
    00001527: 	leaq	DATAat0x1c338(%rip), %rdx
    0000152e: 	movq	%r13, %rsi
    00001531: 	movq	%r12, %rdi
    00001534: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5428
    00001539: 	movq	0x10(%rsp), %rsi
    0000153e: 	leaq	0xd0(%rsp), %rdi
    00001546: 	movq	%r12, %rcx
    00001549: 	movl	$0x1f40, %edx
    0000154e: 	callq	_Z31test_struct_arrayList_deref_optIs21test_struct_arrayListIsEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5454
    00001553: 	movq	0xb0(%rsp), %rdi
    0000155b: 	cmpq	(%rsp), %rdi
    0000155f: 	je	.Ltmp1725 # Offset: 5471
    00001561: 	movq	0xc0(%rsp), %rax
    00001569: 	leaq	0x1(%rax), %rsi
    0000156d: 	callq	_ZdlPvm@PLT # Offset: 5485
.Ltmp1725:
    00001572: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001579: 	movq	%r13, %rsi
    0000157c: 	movq	%r12, %rdi
    0000157f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5503
    00001584: 	callq	clock@PLT # Offset: 5508
    00001589: 	movl	iterations(%rip), %ecx
    0000158f: 	movq	%rax, start_time(%rip)
    00001596: 	testl	%ecx, %ecx
    00001598: 	jle	.Ltmp1726 # Offset: 5528
    0000159a: 	movq	0x140(%rsp,%r15), %rax
    000015a2: 	xorl	%ebx, %ebx
    000015a4: 	leaq	DATAat0x1c1c8(%rip), %r14
    000015ab: 	movq	0x230(%rsp,%rax,8), %rax
    000015b3: 	movq	0x140(%rsp,%rax,8), %rax
    000015bb: 	movq	0x230(%rsp,%rax,8), %rax
    000015c3: 	movq	0x140(%rsp,%rax,8), %rax
    000015cb: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %bp
    000015d5: 	nopl	(%rax) # Size: 3
.Ltmp1757:
    000015d8: 	imulw	$0x1f40, init_value(%rip), %ax
    000015e1: 	cmpw	%bp, %ax
    000015e4: 	jne	.Ltmp1727 # Offset: 5604
.Ltmp1726:
    000015ea: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000015f8: 	subq	$0x20, %rax
    000015fc: 	cmpq	%rax, %rbx
    000015ff: 	je	.Ltmp1728 # Offset: 5631
    00001605: 	leaq	0x10(%rbx), %rdi
    00001609: 	movq	0xb8(%rsp), %r14
    00001611: 	movq	%rdi, (%rbx)
    00001614: 	movq	0xb0(%rsp), %rbp
    0000161c: 	movq	%rbp, %rax
    0000161f: 	addq	%r14, %rax
    00001622: 	je	.Ltmp1729 # Offset: 5666
    00001624: 	testq	%rbp, %rbp
    00001627: 	je	.Ltmp1730 # Offset: 5671
.Ltmp1729:
    0000162d: 	movq	%r14, 0x48(%rsp)
    00001632: 	cmpq	$0xf, %r14
    00001636: 	ja	.Ltmp1731 # Offset: 5686
    0000163c: 	cmpq	$0x1, %r14
    00001640: 	jne	.Ltmp1732 # Offset: 5696
    00001646: 	movzbl	(%rbp), %eax
    0000164a: 	movb	%al, 0x10(%rbx)
.Ltmp1788:
    0000164d: 	movq	%r14, 0x8(%rbx)
    00001651: 	movb	$0x0, (%rdi,%r14)
    00001656: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000165d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001664: 	addq	$0x20, %rax
    00001668: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000166f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001676: 	je	.Ltmp1733 # Offset: 5750
.Ltmp1778:
    0000167c: 	movq	-0x20(%rax), %rbp
    00001680: 	callq	clock@PLT # Offset: 5760
    00001685: 	pxor	%xmm0, %xmm0
    00001689: 	movq	%rax, end_time(%rip)
    00001690: 	movq	%rbp, %rdi
    00001693: 	subq	start_time(%rip), %rax
    0000169a: 	cvtsi2sd	%rax, %xmm0
    0000169f: 	divsd	DATAat0x1c370(%rip), %xmm0
    000016a7: 	callq	_Z13record_resultdPKc # Offset: 5799
    000016ac: 	movq	0xb0(%rsp), %rdi
    000016b4: 	cmpq	(%rsp), %rdi
    000016b8: 	je	.Ltmp1734 # Offset: 5816
    000016ba: 	movq	0xc0(%rsp), %rax
    000016c2: 	leaq	0x1(%rax), %rsi
    000016c6: 	callq	_ZdlPvm@PLT # Offset: 5830
.Ltmp1734:
    000016cb: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000016d2: 	movq	%r13, %rsi
    000016d5: 	movq	%r12, %rdi
    000016d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5848
    000016dd: 	callq	clock@PLT # Offset: 5853
    000016e2: 	movl	iterations(%rip), %edx
    000016e8: 	movq	%rax, start_time(%rip)
    000016ef: 	testl	%edx, %edx
    000016f1: 	jle	.Ltmp1735 # Offset: 5873
    000016f3: 	movq	0x140(%rsp,%r15), %rax
    000016fb: 	xorl	%ebx, %ebx
    000016fd: 	leaq	DATAat0x1c1c8(%rip), %r14
    00001704: 	movq	0x230(%rsp,%rax,8), %rax
    0000170c: 	movq	0x140(%rsp,%rax,8), %rax
    00001714: 	movq	0x230(%rsp,%rax,8), %rax
    0000171c: 	movq	0x140(%rsp,%rax,8), %rax
    00001724: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %bp
    0000172e: 	nop # Size: 2
.Ltmp1756:
    00001730: 	imulw	$0x1f40, init_value(%rip), %ax
    00001739: 	cmpw	%bp, %ax
    0000173c: 	jne	.Ltmp1736 # Offset: 5948
.Ltmp1735:
    00001742: 	movq	%r12, %rsi
    00001745: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000174c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5964
    00001751: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001758: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000175f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001766: 	je	.Ltmp1737 # Offset: 5990
.Ltmp1787:
    0000176c: 	movq	-0x20(%rax), %rbp
    00001770: 	callq	clock@PLT # Offset: 6000
    00001775: 	pxor	%xmm0, %xmm0
    00001779: 	movq	%rax, end_time(%rip)
    00001780: 	movq	%rbp, %rdi
    00001783: 	subq	start_time(%rip), %rax
    0000178a: 	cvtsi2sd	%rax, %xmm0
    0000178f: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001797: 	callq	_Z13record_resultdPKc # Offset: 6039
    0000179c: 	movq	0xb0(%rsp), %rdi
    000017a4: 	cmpq	(%rsp), %rdi
    000017a8: 	je	.Ltmp1738 # Offset: 6056
    000017aa: 	movq	0xc0(%rsp), %rax
    000017b2: 	leaq	0x1(%rax), %rsi
    000017b6: 	callq	_ZdlPvm@PLT # Offset: 6070
.Ltmp1738:
    000017bb: 	leaq	DATAat0x1c301(%rip), %rdx
    000017c2: 	movq	%r13, %rsi
    000017c5: 	movq	%r12, %rdi
    000017c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6088
    000017cd: 	callq	clock@PLT # Offset: 6093
    000017d2: 	movq	%rax, start_time(%rip)
    000017d9: 	movl	iterations(%rip), %eax
    000017df: 	testl	%eax, %eax
    000017e1: 	jle	.Ltmp1739 # Offset: 6113
    000017e3: 	movq	0x140(%rsp,%r15), %rax
    000017eb: 	xorl	%ebx, %ebx
    000017ed: 	leaq	DATAat0x1c1c8(%rip), %r14
    000017f4: 	movq	0x230(%rsp,%rax,8), %rax
    000017fc: 	movq	0x140(%rsp,%rax,8), %rax
    00001804: 	movq	0x230(%rsp,%rax,8), %rax
    0000180c: 	movq	0x140(%rsp,%rax,8), %rax
    00001814: 	imulw	$0x1f40, 0x100(%rsp,%rax,2), %bp
.Ltmp1755:
    0000181e: 	imulw	$0x1f40, init_value(%rip), %ax
    00001827: 	cmpw	%bp, %ax
    0000182a: 	jne	.Ltmp1740 # Offset: 6186
.Ltmp1739:
    00001830: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001837: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000183e: 	subq	$0x20, %rax
    00001842: 	cmpq	%rax, %rbx
    00001845: 	je	.Ltmp1741 # Offset: 6213
    0000184b: 	leaq	0x10(%rbx), %rdi
    0000184f: 	movq	0xb8(%rsp), %r14
    00001857: 	movq	%rdi, (%rbx)
    0000185a: 	movq	0xb0(%rsp), %rbp
    00001862: 	movq	%rbp, %rax
    00001865: 	addq	%r14, %rax
    00001868: 	je	.Ltmp1742 # Offset: 6248
    0000186a: 	testq	%rbp, %rbp
    0000186d: 	je	.Ltmp1743 # Offset: 6253
.Ltmp1742:
    00001873: 	movq	%r14, 0x48(%rsp)
    00001878: 	cmpq	$0xf, %r14
    0000187c: 	ja	.Ltmp1744 # Offset: 6268
    00001882: 	cmpq	$0x1, %r14
    00001886: 	jne	.Ltmp1745 # Offset: 6278
    0000188c: 	movzbl	(%rbp), %eax
    00001890: 	movb	%al, 0x10(%rbx)
.Ltmp1804:
    00001893: 	movq	%r14, 0x8(%rbx)
    00001897: 	movb	$0x0, (%rdi,%r14)
    0000189c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018a3: 	addq	$0x20, %rax
    000018a7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1786:
    000018ae: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018bc: 	je	.Ltmp1746 # Offset: 6332
.Ltmp1767:
    000018c2: 	movq	-0x20(%rax), %rbp
    000018c6: 	callq	clock@PLT # Offset: 6342
    000018cb: 	pxor	%xmm0, %xmm0
    000018cf: 	movq	%rax, end_time(%rip)
    000018d6: 	movq	%rbp, %rdi
    000018d9: 	subq	start_time(%rip), %rax
    000018e0: 	cvtsi2sd	%rax, %xmm0
    000018e5: 	divsd	DATAat0x1c370(%rip), %xmm0
    000018ed: 	callq	_Z13record_resultdPKc # Offset: 6381
    000018f2: 	movq	0xb0(%rsp), %rdi
    000018fa: 	cmpq	(%rsp), %rdi
    000018fe: 	je	.Ltmp1747 # Offset: 6398
    00001900: 	movq	0xc0(%rsp), %rax
    00001908: 	leaq	0x1(%rax), %rsi
    0000190c: 	callq	_ZdlPvm@PLT # Offset: 6412
.Ltmp1747:
    00001911: 	leaq	DATAat0x1c31b(%rip), %rdx
    00001918: 	movq	%r13, %rsi
    0000191b: 	movq	%r12, %rdi
    0000191e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6430
    00001923: 	movl	iterations(%rip), %edx
    00001929: 	xorl	%r8d, %r8d
    0000192c: 	xorl	%ecx, %ecx
    0000192e: 	movl	$0x1f40, %esi
    00001933: 	movq	0xb0(%rsp), %rdi
    0000193b: 	callq	_Z9summarizePKciiii # Offset: 6459
    00001940: 	movq	0xb0(%rsp), %rdi
    00001948: 	cmpq	(%rsp), %rdi
    0000194c: 	je	.Ltmp1748 # Offset: 6476
    0000194e: 	movq	0xc0(%rsp), %rax
    00001956: 	leaq	0x1(%rax), %rsi
    0000195a: 	callq	_ZdlPvm@PLT # Offset: 6490
.Ltmp1748:
    0000195f: 	movq	0x90(%rsp), %rdi
    00001967: 	cmpq	0x28(%rsp), %rdi
    0000196c: 	je	.Ltmp1749 # Offset: 6508
    0000196e: 	movq	0xa0(%rsp), %rax
    00001976: 	leaq	0x1(%rax), %rsi
    0000197a: 	callq	_ZdlPvm@PLT # Offset: 6522
.Ltmp1749:
    0000197f: 	movq	0x41a8(%rsp), %rax
    00001987: 	subq	%fs:0x28, %rax
    00001990: 	jne	.Ltmp1750 # Offset: 6544
    00001996: 	addq	$0x41b8, %rsp
    0000199d: 	popq	%rbx
    0000199e: 	popq	%rbp
    0000199f: 	popq	%r12
    000019a1: 	popq	%r13
    000019a3: 	popq	%r14
    000019a5: 	popq	%r15
    000019a7: 	retq # Offset: 6567
.Ltmp1613:
    000019a8: 	leaq	0x48(%rsp), %rsi
    000019ad: 	xorl	%edx, %edx
    000019af: 	movq	%r15, %rdi
    000019b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6578
    000019b7: 	movq	%rax, (%r15)
    000019ba: 	movq	%rax, %rdi
    000019bd: 	movq	0x48(%rsp), %rax
    000019c2: 	movq	%rax, 0x10(%r15)
.Ltmp1806:
    000019c6: 	movq	(%rsp), %rsi
    000019ca: 	movq	%r14, %rdx
    000019cd: 	callq	memcpy@PLT # Offset: 6605
    000019d2: 	movq	0x48(%rsp), %r14
    000019d7: 	movq	(%r15), %rdi
    000019da: 	jmp	.Ltmp1751 # Offset: 6618
    000019df: 	nop # Size: 1
.Ltmp1658:
    000019e0: 	movq	0xb0(%rsp), %rdx
    000019e8: 	movq	%r14, %rsi
    000019eb: 	movl	$0x1, %edi
    000019f0: 	xorl	%eax, %eax
    000019f2: 	callq	__printf_chk@PLT # Offset: 6642
    000019f7: 	addl	$0x1, %ebp
    000019fa: 	cmpl	iterations(%rip), %ebp
    00001a00: 	jl	.Ltmp1752 # Offset: 6656
    00001a06: 	jmp	.Ltmp1657 # Offset: 6662
    00001a0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1667:
    00001a10: 	movq	0xb0(%rsp), %rdx
    00001a18: 	movq	%r14, %rsi
    00001a1b: 	movl	$0x1, %edi
    00001a20: 	xorl	%eax, %eax
    00001a22: 	callq	__printf_chk@PLT # Offset: 6690
    00001a27: 	addl	$0x1, %ebp
    00001a2a: 	cmpl	iterations(%rip), %ebp
    00001a30: 	jl	.Ltmp1753 # Offset: 6704
    00001a36: 	jmp	.Ltmp1666 # Offset: 6710
    00001a3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1671:
    00001a40: 	movq	0xb0(%rsp), %rdx
    00001a48: 	movq	%r14, %rsi
    00001a4b: 	movl	$0x1, %edi
    00001a50: 	xorl	%eax, %eax
    00001a52: 	callq	__printf_chk@PLT # Offset: 6738
    00001a57: 	addl	$0x1, %ebp
    00001a5a: 	cmpl	iterations(%rip), %ebp
    00001a60: 	jl	.Ltmp1754 # Offset: 6752
    00001a66: 	jmp	.Ltmp1670 # Offset: 6758
    00001a6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1740:
    00001a70: 	movq	0xb0(%rsp), %rdx
    00001a78: 	movq	%r14, %rsi
    00001a7b: 	movl	$0x1, %edi
    00001a80: 	xorl	%eax, %eax
    00001a82: 	callq	__printf_chk@PLT # Offset: 6786
    00001a87: 	addl	$0x1, %ebx
    00001a8a: 	cmpl	iterations(%rip), %ebx
    00001a90: 	jl	.Ltmp1755 # Offset: 6800
    00001a96: 	jmp	.Ltmp1739 # Offset: 6806
    00001a9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1736:
    00001aa0: 	movq	0xb0(%rsp), %rdx
    00001aa8: 	movq	%r14, %rsi
    00001aab: 	movl	$0x1, %edi
    00001ab0: 	xorl	%eax, %eax
    00001ab2: 	callq	__printf_chk@PLT # Offset: 6834
    00001ab7: 	addl	$0x1, %ebx
    00001aba: 	cmpl	iterations(%rip), %ebx
    00001ac0: 	jl	.Ltmp1756 # Offset: 6848
    00001ac6: 	jmp	.Ltmp1735 # Offset: 6854
    00001acb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1727:
    00001ad0: 	movq	0xb0(%rsp), %rdx
    00001ad8: 	movq	%r14, %rsi
    00001adb: 	movl	$0x1, %edi
    00001ae0: 	xorl	%eax, %eax
    00001ae2: 	callq	__printf_chk@PLT # Offset: 6882
    00001ae7: 	addl	$0x1, %ebx
    00001aea: 	cmpl	iterations(%rip), %ebx
    00001af0: 	jl	.Ltmp1757 # Offset: 6896
    00001af6: 	jmp	.Ltmp1726 # Offset: 6902
    00001afb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1717:
    00001b00: 	movq	0xb0(%rsp), %rdx
    00001b08: 	movq	%r14, %rsi
    00001b0b: 	movl	$0x1, %edi
    00001b10: 	xorl	%eax, %eax
    00001b12: 	callq	__printf_chk@PLT # Offset: 6930
    00001b17: 	addl	$0x1, %ebp
    00001b1a: 	cmpl	iterations(%rip), %ebp
    00001b20: 	jl	.Ltmp1758 # Offset: 6944
    00001b26: 	jmp	.Ltmp1716 # Offset: 6950
    00001b2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1690:
    00001b30: 	movq	0xb0(%rsp), %rdx
    00001b38: 	movq	%r14, %rsi
    00001b3b: 	movl	$0x1, %edi
    00001b40: 	xorl	%eax, %eax
    00001b42: 	callq	__printf_chk@PLT # Offset: 6978
    00001b47: 	addl	$0x1, %ebp
    00001b4a: 	cmpl	iterations(%rip), %ebp
    00001b50: 	jl	.Ltmp1759 # Offset: 6992
    00001b56: 	jmp	.Ltmp1689 # Offset: 6998
    00001b5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1681:
    00001b60: 	movq	0xb0(%rsp), %rdx
    00001b68: 	movq	%r14, %rsi
    00001b6b: 	movl	$0x1, %edi
    00001b70: 	xorl	%eax, %eax
    00001b72: 	callq	__printf_chk@PLT # Offset: 7026
    00001b77: 	addl	$0x1, %ebp
    00001b7a: 	cmpl	iterations(%rip), %ebp
    00001b80: 	jl	.Ltmp1760 # Offset: 7040
    00001b86: 	jmp	.Ltmp1680 # Offset: 7046
    00001b8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1699:
    00001b90: 	movq	0xb0(%rsp), %rdx
    00001b98: 	movq	%r14, %rsi
    00001b9b: 	movl	$0x1, %edi
    00001ba0: 	xorl	%eax, %eax
    00001ba2: 	callq	__printf_chk@PLT # Offset: 7074
    00001ba7: 	addl	$0x1, %ebp
    00001baa: 	cmpl	iterations(%rip), %ebp
    00001bb0: 	jl	.Ltmp1761 # Offset: 7088
    00001bb6: 	jmp	.Ltmp1698 # Offset: 7094
    00001bbb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1708:
    00001bc0: 	movq	0xb0(%rsp), %rdx
    00001bc8: 	movq	%r14, %rsi
    00001bcb: 	movl	$0x1, %edi
    00001bd0: 	xorl	%eax, %eax
    00001bd2: 	callq	__printf_chk@PLT # Offset: 7122
    00001bd7: 	addl	$0x1, %ebp
    00001bda: 	cmpl	iterations(%rip), %ebp
    00001be0: 	jl	.Ltmp1762 # Offset: 7136
    00001be6: 	jmp	.Ltmp1707 # Offset: 7142
.Ltmp1696:
    00001beb: 	movq	-0x8(%rdx), %rax
    00001bef: 	addq	$0x200, %rax
    00001bf5: 	jmp	.Ltmp1763 # Offset: 7157
.Ltmp1700:
    00001bfa: 	movq	%r12, %rsi
    00001bfd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c04: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7172
    00001c09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c10: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c1e: 	jne	.Ltmp1764 # Offset: 7198
.Ltmp1705:
    00001c24: 	movq	-0x8(%rdx), %rax
    00001c28: 	addq	$0x200, %rax
    00001c2e: 	jmp	.Ltmp1764 # Offset: 7214
.Ltmp1664:
    00001c33: 	movq	-0x8(%rdx), %rax
    00001c37: 	addq	$0x200, %rax
    00001c3d: 	jmp	.Ltmp1765 # Offset: 7229
.Ltmp1668:
    00001c42: 	movq	-0x8(%rdx), %rax
    00001c46: 	addq	$0x200, %rax
    00001c4c: 	jmp	.Ltmp1766 # Offset: 7244
.Ltmp1746:
    00001c51: 	movq	-0x8(%rdx), %rax
    00001c55: 	addq	$0x200, %rax
    00001c5b: 	jmp	.Ltmp1767 # Offset: 7259
.Ltmp1610:
    00001c60: 	movq	%r12, %rsi
    00001c63: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c6a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7274
    00001c6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c76: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c7d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c84: 	jne	.Ltmp1768 # Offset: 7300
.Ltmp1615:
    00001c8a: 	movq	-0x8(%rdx), %rax
    00001c8e: 	addq	$0x200, %rax
    00001c94: 	jmp	.Ltmp1768 # Offset: 7316
.Ltmp1644:
    00001c99: 	movq	%r12, %rsi
    00001c9c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ca3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7331
    00001ca8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001caf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001cb6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cbd: 	jne	.Ltmp1769 # Offset: 7357
.Ltmp1649:
    00001cc3: 	movq	-0x8(%rdx), %rax
    00001cc7: 	addq	$0x200, %rax
    00001ccd: 	jmp	.Ltmp1769 # Offset: 7373
.Ltmp1638:
    00001cd2: 	movq	-0x8(%rdx), %rax
    00001cd6: 	addq	$0x200, %rax
    00001cdc: 	jmp	.Ltmp1770 # Offset: 7388
.Ltmp1633:
    00001ce1: 	movq	%r12, %rsi
    00001ce4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ceb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7403
    00001cf0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cf7: 	jmp	.Ltmp1771 # Offset: 7415
.Ltmp1627:
    00001cfc: 	movq	-0x8(%rdx), %rax
    00001d00: 	addq	$0x200, %rax
    00001d06: 	jmp	.Ltmp1772 # Offset: 7430
.Ltmp1621:
    00001d0b: 	movq	-0x8(%rdx), %rax
    00001d0f: 	addq	$0x200, %rax
    00001d15: 	jmp	.Ltmp1773 # Offset: 7445
.Ltmp1659:
    00001d1a: 	movq	%r12, %rsi
    00001d1d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d24: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7460
    00001d29: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d30: 	jmp	.Ltmp1774 # Offset: 7472
.Ltmp1655:
    00001d35: 	movq	-0x8(%rdx), %rax
    00001d39: 	addq	$0x200, %rax
    00001d3f: 	jmp	.Ltmp1775 # Offset: 7487
.Ltmp1687:
    00001d44: 	movq	-0x8(%rdx), %rax
    00001d48: 	addq	$0x200, %rax
    00001d4e: 	jmp	.Ltmp1776 # Offset: 7502
.Ltmp1682:
    00001d53: 	movq	%r12, %rsi
    00001d56: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d5d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7517
    00001d62: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d69: 	jmp	.Ltmp1777 # Offset: 7529
.Ltmp1728:
    00001d6e: 	movq	%r12, %rsi
    00001d71: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d78: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7544
    00001d7d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d84: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d8b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d92: 	jne	.Ltmp1778 # Offset: 7570
.Ltmp1733:
    00001d98: 	movq	-0x8(%rdx), %rax
    00001d9c: 	addq	$0x200, %rax
    00001da2: 	jmp	.Ltmp1778 # Offset: 7586
.Ltmp1691:
    00001da7: 	movq	%r12, %rsi
    00001daa: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001db1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7601
    00001db6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dbd: 	jmp	.Ltmp1779 # Offset: 7613
.Ltmp1723:
    00001dc2: 	movq	-0x8(%rdx), %rax
    00001dc6: 	addq	$0x200, %rax
    00001dcc: 	jmp	.Ltmp1780 # Offset: 7628
.Ltmp1718:
    00001dd1: 	movq	%r12, %rsi
    00001dd4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ddb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7643
    00001de0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001de7: 	jmp	.Ltmp1781 # Offset: 7655
.Ltmp1714:
    00001dec: 	movq	-0x8(%rdx), %rax
    00001df0: 	addq	$0x200, %rax
    00001df6: 	jmp	.Ltmp1782 # Offset: 7670
.Ltmp1709:
    00001dfb: 	movq	%r12, %rsi
    00001dfe: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e05: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7685
    00001e0a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e11: 	jmp	.Ltmp1783 # Offset: 7697
.Ltmp1677:
    00001e16: 	movq	-0x8(%rdx), %rax
    00001e1a: 	addq	$0x200, %rax
    00001e20: 	jmp	.Ltmp1784 # Offset: 7712
.Ltmp1672:
    00001e25: 	movq	%r12, %rsi
    00001e28: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e2f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7727
    00001e34: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e3b: 	jmp	.Ltmp1785 # Offset: 7739
.Ltmp1741:
    00001e40: 	movq	%r12, %rsi
    00001e43: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e4a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7754
    00001e4f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e56: 	jmp	.Ltmp1786 # Offset: 7766
.Ltmp1737:
    00001e5b: 	movq	-0x8(%rdx), %rax
    00001e5f: 	addq	$0x200, %rax
    00001e65: 	jmp	.Ltmp1787 # Offset: 7781
.Ltmp1732:
    00001e6a: 	testq	%r14, %r14
    00001e6d: 	je	.Ltmp1788 # Offset: 7789
    00001e73: 	jmp	.Ltmp1789 # Offset: 7795
    00001e78: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1722:
    00001e80: 	testq	%r14, %r14
    00001e83: 	je	.Ltmp1790 # Offset: 7811
    00001e89: 	jmp	.Ltmp1791 # Offset: 7817
    00001e8e: 	nop # Size: 2
.Ltmp1676:
    00001e90: 	testq	%r14, %r14
    00001e93: 	je	.Ltmp1792 # Offset: 7827
    00001e99: 	jmp	.Ltmp1793 # Offset: 7833
    00001e9e: 	nop # Size: 2
.Ltmp1713:
    00001ea0: 	testq	%r14, %r14
    00001ea3: 	je	.Ltmp1794 # Offset: 7843
    00001ea9: 	jmp	.Ltmp1795 # Offset: 7849
    00001eae: 	nop # Size: 2
.Ltmp1695:
    00001eb0: 	testq	%r14, %r14
    00001eb3: 	je	.Ltmp1796 # Offset: 7859
    00001eb9: 	jmp	.Ltmp1797 # Offset: 7865
    00001ebe: 	nop # Size: 2
.Ltmp1704:
    00001ec0: 	testq	%r14, %r14
    00001ec3: 	je	.Ltmp1798 # Offset: 7875
.Ltmp1809:
    00001ec9: 	movq	0x20(%rsp), %rsi
    00001ece: 	movq	%r14, %rdx
    00001ed1: 	callq	memcpy@PLT # Offset: 7889
    00001ed6: 	movq	0x48(%rsp), %r14
    00001edb: 	movq	(%rbp), %rdi
    00001edf: 	jmp	.Ltmp1798 # Offset: 7903
.Ltmp1648:
    00001ee4: 	testq	%r14, %r14
    00001ee7: 	je	.Ltmp1799 # Offset: 7911
.Ltmp1807:
    00001eed: 	movq	0x38(%rsp), %rsi
    00001ef2: 	movq	%r14, %rdx
    00001ef5: 	callq	memcpy@PLT # Offset: 7925
    00001efa: 	movq	0x48(%rsp), %r14
    00001eff: 	movq	(%r15), %rdi
    00001f02: 	jmp	.Ltmp1799 # Offset: 7938
.Ltmp1637:
    00001f07: 	testq	%r14, %r14
    00001f0a: 	je	.Ltmp1800 # Offset: 7946
    00001f10: 	jmp	.Ltmp1801 # Offset: 7952
    00001f15: 	nopl	(%rax) # Size: 3
.Ltmp1663:
    00001f18: 	testq	%r14, %r14
    00001f1b: 	je	.Ltmp1802 # Offset: 7963
    00001f21: 	jmp	.Ltmp1803 # Offset: 7969
    00001f26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1745:
    00001f30: 	testq	%r14, %r14
    00001f33: 	je	.Ltmp1804 # Offset: 7987
.Ltmp1810:
    00001f39: 	movq	%r14, %rdx
    00001f3c: 	movq	%rbp, %rsi
    00001f3f: 	callq	memcpy@PLT # Offset: 7999
    00001f44: 	movq	0x48(%rsp), %r14
    00001f49: 	movq	(%rbx), %rdi
    00001f4c: 	jmp	.Ltmp1804 # Offset: 8012
.Ltmp1686:
    00001f51: 	testq	%r14, %r14
    00001f54: 	je	.Ltmp1805 # Offset: 8020
.Ltmp1808:
    00001f5a: 	movq	%r14, %rdx
    00001f5d: 	movq	%r15, %rsi
    00001f60: 	callq	memcpy@PLT # Offset: 8032
    00001f65: 	movq	0x48(%rsp), %r14
    00001f6a: 	movq	(%rbp), %rdi
    00001f6e: 	jmp	.Ltmp1805 # Offset: 8046
.Ltmp1614:
    00001f73: 	testq	%r14, %r14
    00001f76: 	je	.Ltmp1751 # Offset: 8054
    00001f7c: 	jmp	.Ltmp1806 # Offset: 8060
    00001f81: 	nopl	(%rax) # Size: 7
.Ltmp1731:
    00001f88: 	leaq	0x48(%rsp), %rsi
    00001f8d: 	xorl	%edx, %edx
    00001f8f: 	movq	%rbx, %rdi
    00001f92: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8082
    00001f97: 	movq	%rax, (%rbx)
    00001f9a: 	movq	%rax, %rdi
    00001f9d: 	movq	0x48(%rsp), %rax
    00001fa2: 	movq	%rax, 0x10(%rbx)
.Ltmp1789:
    00001fa6: 	movq	%r14, %rdx
    00001fa9: 	movq	%rbp, %rsi
    00001fac: 	callq	memcpy@PLT # Offset: 8108
    00001fb1: 	movq	0x48(%rsp), %r14
    00001fb6: 	movq	(%rbx), %rdi
    00001fb9: 	jmp	.Ltmp1788 # Offset: 8121
.Ltmp1721:
    00001fbe: 	leaq	0x48(%rsp), %rsi
    00001fc3: 	xorl	%edx, %edx
    00001fc5: 	movq	%rbx, %rdi
    00001fc8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8136
    00001fcd: 	movq	%rax, (%rbx)
    00001fd0: 	movq	%rax, %rdi
    00001fd3: 	movq	0x48(%rsp), %rax
    00001fd8: 	movq	%rax, 0x10(%rbx)
.Ltmp1791:
    00001fdc: 	movq	%r14, %rdx
    00001fdf: 	movq	%rbp, %rsi
    00001fe2: 	callq	memcpy@PLT # Offset: 8162
    00001fe7: 	movq	0x48(%rsp), %r14
    00001fec: 	movq	(%rbx), %rdi
    00001fef: 	jmp	.Ltmp1790 # Offset: 8175
.Ltmp1694:
    00001ff4: 	leaq	0x48(%rsp), %rsi
    00001ff9: 	xorl	%edx, %edx
    00001ffb: 	movq	%rbx, %rdi
    00001ffe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8190
    00002003: 	movq	%rax, (%rbx)
    00002006: 	movq	%rax, %rdi
    00002009: 	movq	0x48(%rsp), %rax
    0000200e: 	movq	%rax, 0x10(%rbx)
.Ltmp1797:
    00002012: 	movq	%r14, %rdx
    00002015: 	movq	%rbp, %rsi
    00002018: 	callq	memcpy@PLT # Offset: 8216
    0000201d: 	movq	0x48(%rsp), %r14
    00002022: 	movq	(%rbx), %rdi
    00002025: 	jmp	.Ltmp1796 # Offset: 8229
.Ltmp1675:
    0000202a: 	leaq	0x48(%rsp), %rsi
    0000202f: 	xorl	%edx, %edx
    00002031: 	movq	%rbp, %rdi
    00002034: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8244
    00002039: 	movq	%rax, (%rbp)
    0000203d: 	movq	%rax, %rdi
    00002040: 	movq	0x48(%rsp), %rax
    00002045: 	movq	%rax, 0x10(%rbp)
.Ltmp1793:
    00002049: 	movq	%r14, %rdx
    0000204c: 	movq	%r15, %rsi
    0000204f: 	callq	memcpy@PLT # Offset: 8271
    00002054: 	movq	0x48(%rsp), %r14
    00002059: 	movq	(%rbp), %rdi
    0000205d: 	jmp	.Ltmp1792 # Offset: 8285
.Ltmp1712:
    00002062: 	leaq	0x48(%rsp), %rsi
    00002067: 	xorl	%edx, %edx
    00002069: 	movq	%rbp, %rdi
    0000206c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8300
    00002071: 	movq	%rax, (%rbp)
    00002075: 	movq	%rax, %rdi
    00002078: 	movq	0x48(%rsp), %rax
    0000207d: 	movq	%rax, 0x10(%rbp)
.Ltmp1795:
    00002081: 	movq	0x20(%rsp), %rsi
    00002086: 	movq	%r14, %rdx
    00002089: 	callq	memcpy@PLT # Offset: 8329
    0000208e: 	movq	0x48(%rsp), %r14
    00002093: 	movq	(%rbp), %rdi
    00002097: 	jmp	.Ltmp1794 # Offset: 8343
.Ltmp1636:
    0000209c: 	leaq	0x48(%rsp), %rsi
    000020a1: 	xorl	%edx, %edx
    000020a3: 	movq	%r15, %rdi
    000020a6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8358
    000020ab: 	movq	%rax, (%r15)
    000020ae: 	movq	%rax, %rdi
    000020b1: 	movq	0x48(%rsp), %rax
    000020b6: 	movq	%rax, 0x10(%r15)
.Ltmp1801:
    000020ba: 	movq	0x38(%rsp), %rsi
    000020bf: 	movq	%r14, %rdx
    000020c2: 	callq	memcpy@PLT # Offset: 8386
    000020c7: 	movq	0x48(%rsp), %r14
    000020cc: 	movq	(%r15), %rdi
    000020cf: 	jmp	.Ltmp1800 # Offset: 8399
.Ltmp1662:
    000020d4: 	leaq	0x48(%rsp), %rsi
    000020d9: 	xorl	%edx, %edx
    000020db: 	movq	%rbp, %rdi
    000020de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8414
    000020e3: 	movq	%rax, (%rbp)
    000020e7: 	movq	%rax, %rdi
    000020ea: 	movq	0x48(%rsp), %rax
    000020ef: 	movq	%rax, 0x10(%rbp)
.Ltmp1803:
    000020f3: 	movq	%r14, %rdx
    000020f6: 	movq	%r15, %rsi
    000020f9: 	callq	memcpy@PLT # Offset: 8441
    000020fe: 	movq	0x48(%rsp), %r14
    00002103: 	movq	(%rbp), %rdi
    00002107: 	jmp	.Ltmp1802 # Offset: 8455
.Ltmp1647:
    0000210c: 	leaq	0x48(%rsp), %rsi
    00002111: 	xorl	%edx, %edx
    00002113: 	movq	%r15, %rdi
    00002116: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8470
    0000211b: 	movq	%rax, (%r15)
    0000211e: 	movq	%rax, %rdi
    00002121: 	movq	0x48(%rsp), %rax
    00002126: 	movq	%rax, 0x10(%r15)
    0000212a: 	jmp	.Ltmp1807 # Offset: 8490
.Ltmp1685:
    0000212f: 	leaq	0x48(%rsp), %rsi
    00002134: 	xorl	%edx, %edx
    00002136: 	movq	%rbp, %rdi
    00002139: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8505
    0000213e: 	movq	%rax, (%rbp)
    00002142: 	movq	%rax, %rdi
    00002145: 	movq	0x48(%rsp), %rax
    0000214a: 	movq	%rax, 0x10(%rbp)
    0000214e: 	jmp	.Ltmp1808 # Offset: 8526
.Ltmp1703:
    00002153: 	leaq	0x48(%rsp), %rsi
    00002158: 	xorl	%edx, %edx
    0000215a: 	movq	%rbp, %rdi
    0000215d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8541
    00002162: 	movq	%rax, (%rbp)
    00002166: 	movq	%rax, %rdi
    00002169: 	movq	0x48(%rsp), %rax
    0000216e: 	movq	%rax, 0x10(%rbp)
    00002172: 	jmp	.Ltmp1809 # Offset: 8562
.Ltmp1744:
    00002177: 	leaq	0x48(%rsp), %rsi
    0000217c: 	xorl	%edx, %edx
    0000217e: 	movq	%rbx, %rdi
    00002181: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8577
    00002186: 	movq	%rax, (%rbx)
    00002189: 	movq	%rax, %rdi
    0000218c: 	movq	0x48(%rsp), %rax
    00002191: 	movq	%rax, 0x10(%rbx)
    00002195: 	jmp	.Ltmp1810 # Offset: 8597
.Ltmp1635:
    0000219a: 	leaq	DATAat0x1c158(%rip), %rdi
    000021a1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8609
.Ltmp1646:
    000021a6: 	leaq	DATAat0x1c158(%rip), %rdi
    000021ad: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8621
.Ltmp1661:
    000021b2: 	leaq	DATAat0x1c158(%rip), %rdi
    000021b9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8633
.Ltmp1674:
    000021be: 	leaq	DATAat0x1c158(%rip), %rdi
    000021c5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8645
.Ltmp1684:
    000021ca: 	leaq	DATAat0x1c158(%rip), %rdi
    000021d1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8657
.Ltmp1693:
    000021d6: 	leaq	DATAat0x1c158(%rip), %rdi
    000021dd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8669
.Ltmp1702:
    000021e2: 	leaq	DATAat0x1c158(%rip), %rdi
    000021e9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8681
.Ltmp1711:
    000021ee: 	leaq	DATAat0x1c158(%rip), %rdi
    000021f5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8693
.Ltmp1720:
    000021fa: 	leaq	DATAat0x1c158(%rip), %rdi
    00002201: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8705
.Ltmp1730:
    00002206: 	leaq	DATAat0x1c158(%rip), %rdi
    0000220d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8717
.Ltmp1743:
    00002212: 	leaq	DATAat0x1c158(%rip), %rdi
    00002219: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8729
.Ltmp1750:
    0000221e: 	callq	__stack_chk_fail@PLT # Offset: 8734
.Ltmp1612:
    00002223: 	leaq	DATAat0x1c158(%rip), %rdi
    0000222a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8746
    0000222f: 	endbr64
    00002233: 	movq	%rax, %rbp
    00002236: 	jmp	.Ltmp1811 # Offset: 8758
    00002238: 	endbr64
.Ltmp1813:
    0000223c: 	movq	%rax, %rbp
    0000223f: 	jmp	.Ltmp1812 # Offset: 8767
    00002241: 	endbr64
    00002245: 	jmp	.Ltmp1813 # Offset: 8773
    00002247: 	endbr64
    0000224b: 	jmp	.Ltmp1813 # Offset: 8779
.Ltmp1811:
    0000224d: 	movq	0xb0(%rsp), %rdi
    00002255: 	leaq	0xc0(%rsp), %rax
    0000225d: 	cmpq	%rax, %rdi
    00002260: 	je	.Ltmp1814 # Offset: 8800
.Ltmp1816:
    00002262: 	movq	0xc0(%rsp), %rax
    0000226a: 	leaq	0x1(%rax), %rsi
    0000226e: 	callq	_ZdlPvm@PLT # Offset: 8814
.Ltmp1814:
    00002273: 	movq	0x90(%rsp), %rdi
    0000227b: 	cmpq	0x28(%rsp), %rdi
    00002280: 	je	.Ltmp1815 # Offset: 8832
    00002282: 	movq	0xa0(%rsp), %rax
    0000228a: 	leaq	0x1(%rax), %rsi
    0000228e: 	callq	_ZdlPvm@PLT # Offset: 8846
.Ltmp1815:
    00002293: 	movq	%rbp, %rdi
    00002296: 	callq	_Unwind_Resume@PLT # Offset: 8854
    0000229b: 	endbr64
    0000229f: 	jmp	.Ltmp1813 # Offset: 8863
.Ltmp1812:
    000022a1: 	movq	0xb0(%rsp), %rdi
    000022a9: 	cmpq	(%rsp), %rdi
    000022ad: 	jne	.Ltmp1816 # Offset: 8877
    000022af: 	jmp	.Ltmp1814 # Offset: 8879
    000022b1: 	endbr64
    000022b5: 	movq	%rax, %rbp
    000022b8: 	jmp	.Ltmp1814 # Offset: 8888
    000022ba: 	endbr64
    000022be: 	jmp	.Ltmp1813 # Offset: 8894
    000022c3: 	endbr64
    000022c7: 	jmp	.Ltmp1813 # Offset: 8903
    000022cc: 	endbr64
    000022d0: 	jmp	.Ltmp1813 # Offset: 8912
    000022d5: 	endbr64
    000022d9: 	jmp	.Ltmp1813 # Offset: 8921
    000022de: 	endbr64
    000022e2: 	jmp	.Ltmp1813 # Offset: 8930
    000022e7: 	endbr64
    000022eb: 	jmp	.Ltmp1813 # Offset: 8939
    000022f0: 	endbr64
    000022f4: 	jmp	.Ltmp1813 # Offset: 8948
    000022f9: 	endbr64
    000022fd: 	jmp	.Ltmp1813 # Offset: 8957
    00002302: 	endbr64
    00002306: 	jmp	.Ltmp1813 # Offset: 8966
    0000230b: 	endbr64
    0000230f: 	jmp	.Ltmp1813 # Offset: 8975
    00002314: 	endbr64
    00002318: 	jmp	.Ltmp1813 # Offset: 8984
    0000231d: 	endbr64
    00002321: 	jmp	.Ltmp1813 # Offset: 8993
    00002326: 	endbr64
    0000232a: 	jmp	.Ltmp1813 # Offset: 9002
    0000232f: 	endbr64
    00002333: 	jmp	.Ltmp1813 # Offset: 9011
    00002338: 	endbr64
    0000233c: 	jmp	.Ltmp1813 # Offset: 9020
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIsEvT_"

Binary Function "_Z11TestOneTypeImEvT_" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x15130
  Size        : 0x22da
  MaxSize     : 0x22e0
  Offset      : 0x15130
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeImEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp1817:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1817 # Offset: 37
    00000027: 	subq	$0xde8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003e: 	movq	%fs:0x28, %rax
    00000047: 	movq	%rax, 0xfdd8(%rsp)
    0000004f: 	xorl	%eax, %eax
    00000051: 	movq	%rdi, %r12
    00000054: 	leaq	0x1f0(%rsp), %rax
    0000005c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000063: 	movq	%rax, %xmm0
    00000068: 	leaq	0x100(%rsp), %rax
    00000070: 	movq	$0x8, 0x98(%rsp)
    0000007c: 	leaq	0x3d0(%rsp), %rbp
    00000084: 	movq	%rax, %xmm2
    00000089: 	leaq	0x2e0(%rsp), %rax
    00000091: 	movb	$0x0, 0xa8(%rsp)
    00000099: 	leaq	0xfdd0(%rsp), %rbx
    000000a1: 	movq	%rax, %xmm1
    000000a6: 	leaq	0xa0(%rsp), %rax
    000000ae: 	punpcklqdq	%xmm0, %xmm2
    000000b2: 	movaps	%xmm3, 0x70(%rsp)
    000000b7: 	movq	%rax, 0x28(%rsp)
    000000bc: 	punpcklqdq	%xmm0, %xmm1
    000000c0: 	movq	%rax, 0x90(%rsp)
    000000c8: 	movabsq	$0x745f3436746e6975, %rax
    000000d2: 	movq	%rax, 0xa0(%rsp)
    000000da: 	leaq	0x70(%rsp), %rax
    000000df: 	movq	%rax, %rsi
    000000e2: 	movq	%rax, 0x30(%rsp)
    000000e7: 	movaps	%xmm2, 0x10(%rsp)
    000000ec: 	movaps	%xmm1, (%rsp)
    000000f0: 	movaps	%xmm4, 0x80(%rsp)
    000000f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 248
    000000fd: 	movdqa	0x10(%rsp), %xmm2
    00000103: 	movdqa	(%rsp), %xmm1
    00000108: 	movslq	init_value(%rip), %rax
    0000010f: 	movq	%rax, %xmm0
    00000114: 	movq	%rax, 0x20(%rsp)
    00000119: 	movq	%rbp, %rax
    0000011c: 	punpcklqdq	%xmm0, %xmm0
.Ltmp1818:
    00000120: 	movaps	%xmm0, (%rax)
    00000123: 	addq	$0x10, %rax
    00000127: 	cmpq	%rbx, %rax
    0000012a: 	jne	.Ltmp1818 # Offset: 298
    0000012c: 	leaq	0x50(%rsp), %rax
    00000131: 	leaq	0x2(%r12), %rsi
    00000136: 	movq	%r12, %rdi
    00000139: 	movabsq	$-0x7777777777777777, %rcx
    00000143: 	movq	%rax, 0x78(%rsp)
    00000148: 	leaq	0x60(%rsp), %rax
    0000014d: 	leaq	0x90(%rsp), %r15
    00000155: 	movq	%rax, 0x58(%rsp)
    0000015a: 	leaq	0x40(%rsp), %rax
    0000015f: 	movq	%rax, 0x68(%rsp)
    00000164: 	movq	0x20(%rsp), %rax
    00000169: 	movaps	%xmm0, 0x100(%rsp)
    00000171: 	movq	%rax, 0x40(%rsp)
    00000176: 	movq	%r12, %rax
    00000179: 	mulq	%rcx
    0000017c: 	movaps	%xmm0, 0x110(%rsp)
    00000184: 	movaps	%xmm0, 0x120(%rsp)
    0000018c: 	movaps	%xmm0, 0x130(%rsp)
    00000194: 	movq	%rdx, %rax
    00000197: 	andq	$-0x10, %rdx
    0000019b: 	movaps	%xmm0, 0x140(%rsp)
    000001a3: 	shrq	$0x4, %rax
    000001a7: 	movaps	%xmm0, 0x150(%rsp)
    000001af: 	subq	%rax, %rdx
    000001b2: 	movaps	%xmm0, 0x160(%rsp)
    000001ba: 	leaq	(%rdx,%rdx), %rax
    000001be: 	movaps	%xmm0, 0x170(%rsp)
    000001c6: 	subq	%rax, %rdi
    000001c9: 	movq	%rsi, %rax
    000001cc: 	movaps	%xmm0, 0x180(%rsp)
    000001d4: 	mulq	%rcx
    000001d7: 	movaps	%xmm0, 0x190(%rsp)
    000001df: 	movaps	%xmm0, 0x1a0(%rsp)
    000001e7: 	movaps	%xmm0, 0x1b0(%rsp)
    000001ef: 	movq	%rdx, %rax
    000001f2: 	andq	$-0x10, %rdx
    000001f6: 	movaps	%xmm0, 0x1c0(%rsp)
    000001fe: 	shrq	$0x4, %rax
    00000202: 	movaps	%xmm0, 0x1d0(%rsp)
    0000020a: 	subq	%rax, %rdx
    0000020d: 	movq	%rsi, %rax
    00000210: 	movq	%rdi, 0x10(%rsp)
    00000215: 	addq	%rdx, %rdx
    00000218: 	movaps	%xmm0, 0x1e0(%rsp)
    00000220: 	subq	%rdx, %rax
    00000223: 	xorl	%edx, %edx
    00000225: 	movq	%rax, %xmm0
    0000022a: 	leaq	(%r12,%r12), %rax
    0000022e: 	divq	%rsi
    00000231: 	punpcklqdq	%xmm0, %xmm0
    00000235: 	movaps	%xmm0, 0x1f0(%rsp)
    0000023d: 	movaps	%xmm0, 0x200(%rsp)
    00000245: 	movaps	%xmm0, 0x210(%rsp)
    0000024d: 	movaps	%xmm0, 0x220(%rsp)
    00000255: 	movaps	%xmm0, 0x230(%rsp)
    0000025d: 	movaps	%xmm0, 0x240(%rsp)
    00000265: 	movaps	%xmm0, 0x250(%rsp)
    0000026d: 	movaps	%xmm0, 0x260(%rsp)
    00000275: 	movaps	%xmm0, 0x270(%rsp)
    0000027d: 	movaps	%xmm0, 0x280(%rsp)
    00000285: 	movaps	%xmm0, 0x290(%rsp)
    0000028d: 	movaps	%xmm0, 0x2a0(%rsp)
    00000295: 	movaps	%xmm0, 0x2b0(%rsp)
    0000029d: 	leaq	(%rax,%r12), %rsi
    000002a1: 	movaps	%xmm0, 0x2c0(%rsp)
    000002a9: 	leaq	0xb0(%rsp), %r12
    000002b1: 	movq	%rsi, %rax
    000002b4: 	movaps	%xmm0, 0x2d0(%rsp)
    000002bc: 	movq	%r12, %rdi
    000002bf: 	mulq	%rcx
    000002c2: 	movaps	%xmm2, 0xd0(%rsp)
    000002ca: 	movaps	%xmm1, 0xe0(%rsp)
    000002d2: 	movaps	%xmm1, 0xf0(%rsp)
    000002da: 	movq	%rdx, %rax
    000002dd: 	andq	$-0x10, %rdx
    000002e1: 	shrq	$0x4, %rax
    000002e5: 	subq	%rax, %rdx
    000002e8: 	movq	%rsi, %rax
    000002eb: 	movq	%r15, %rsi
    000002ee: 	addq	%rdx, %rdx
    000002f1: 	subq	%rdx, %rax
    000002f4: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002fb: 	movq	%rax, %xmm0
    00000300: 	punpcklqdq	%xmm0, %xmm0
    00000304: 	movaps	%xmm0, 0x2e0(%rsp)
    0000030c: 	movaps	%xmm0, 0x2f0(%rsp)
    00000314: 	movaps	%xmm0, 0x300(%rsp)
    0000031c: 	movaps	%xmm0, 0x310(%rsp)
    00000324: 	movaps	%xmm0, 0x320(%rsp)
    0000032c: 	movaps	%xmm0, 0x330(%rsp)
    00000334: 	movaps	%xmm0, 0x340(%rsp)
    0000033c: 	movaps	%xmm0, 0x350(%rsp)
    00000344: 	movaps	%xmm0, 0x360(%rsp)
    0000034c: 	movaps	%xmm0, 0x370(%rsp)
    00000354: 	movaps	%xmm0, 0x380(%rsp)
    0000035c: 	movaps	%xmm0, 0x390(%rsp)
    00000364: 	movaps	%xmm0, 0x3a0(%rsp)
    0000036c: 	movaps	%xmm0, 0x3b0(%rsp)
    00000374: 	movaps	%xmm0, 0x3c0(%rsp)
    0000037c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 892
    00000381: 	callq	clock@PLT # Offset: 897
    00000386: 	movl	iterations(%rip), %ecx
    0000038c: 	xorl	%r13d, %r13d
    0000038f: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000396: 	movq	%rax, start_time(%rip)
    0000039d: 	testl	%ecx, %ecx
    0000039f: 	jle	.Ltmp1819 # Offset: 927
    000003a1: 	nopl	(%rax) # Size: 7
.Ltmp1822:
    000003a8: 	movq	%rbp, %rax
    000003ab: 	pxor	%xmm0, %xmm0
    000003af: 	nop # Size: 1
.Ltmp1820:
    000003b0: 	paddq	(%rax), %xmm0
    000003b4: 	addq	$0x10, %rax
    000003b8: 	cmpq	%rbx, %rax
    000003bb: 	jne	.Ltmp1820 # Offset: 955
    000003bd: 	movslq	init_value(%rip), %rdx
    000003c4: 	movdqa	%xmm0, %xmm1
    000003c8: 	psrldq	$0x8, %xmm1
    000003cd: 	imulq	$0x1f40, %rdx, %rdx
    000003d4: 	paddq	%xmm1, %xmm0
    000003d8: 	movq	%xmm0, %rax
    000003dd: 	cmpq	%rax, %rdx
    000003e0: 	je	.Ltmp1821 # Offset: 992
    000003e2: 	movq	0xb0(%rsp), %rdx
    000003ea: 	movq	%r14, %rsi
    000003ed: 	movl	$0x1, %edi
    000003f2: 	xorl	%eax, %eax
    000003f4: 	callq	__printf_chk@PLT # Offset: 1012
    000003f9: 	movl	iterations(%rip), %ecx
.Ltmp1821:
    000003ff: 	addl	$0x1, %r13d
    00000403: 	cmpl	%ecx, %r13d
    00000406: 	jl	.Ltmp1822 # Offset: 1030
.Ltmp1819:
    00000408: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000040f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000416: 	subq	$0x20, %rax
    0000041a: 	cmpq	%rax, %r14
    0000041d: 	je	.Ltmp1823 # Offset: 1053
    00000423: 	leaq	0x10(%r14), %rdi
    00000427: 	movq	0xb8(%rsp), %r13
    0000042f: 	movq	%rdi, (%r14)
    00000432: 	movq	0xb0(%rsp), %rax
    0000043a: 	movq	%rax, %rsi
    0000043d: 	movq	%rax, (%rsp)
    00000441: 	addq	%r13, %rsi
    00000444: 	je	.Ltmp1824 # Offset: 1092
    00000446: 	testq	%rax, %rax
    00000449: 	je	.Ltmp1825 # Offset: 1097
.Ltmp1824:
    0000044f: 	movq	%r13, 0x48(%rsp)
    00000454: 	cmpq	$0xf, %r13
    00000458: 	ja	.Ltmp1826 # Offset: 1112
    0000045e: 	cmpq	$0x1, %r13
    00000462: 	jne	.Ltmp1827 # Offset: 1122
    00000468: 	movq	(%rsp), %rax
    0000046c: 	movzbl	(%rax), %eax
    0000046f: 	movb	%al, 0x10(%r14)
.Ltmp1964:
    00000473: 	movq	%r13, 0x8(%r14)
    00000477: 	movb	$0x0, (%rdi,%r13)
    0000047c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000483: 	addq	$0x20, %rax
    00000487: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1999:
    0000048e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000495: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000049c: 	je	.Ltmp1828 # Offset: 1180
.Ltmp1992:
    000004a2: 	movq	-0x20(%rax), %r13
    000004a6: 	callq	clock@PLT # Offset: 1190
    000004ab: 	pxor	%xmm0, %xmm0
    000004af: 	movq	%rax, end_time(%rip)
    000004b6: 	movq	%r13, %rdi
    000004b9: 	subq	start_time(%rip), %rax
    000004c0: 	cvtsi2sd	%rax, %xmm0
    000004c5: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004cd: 	callq	_Z13record_resultdPKc # Offset: 1229
    000004d2: 	movq	0xb0(%rsp), %rdi
    000004da: 	leaq	0xc0(%rsp), %rax
    000004e2: 	movq	%rax, (%rsp)
    000004e6: 	cmpq	%rax, %rdi
    000004e9: 	je	.Ltmp1829 # Offset: 1257
    000004eb: 	movq	0xc0(%rsp), %rax
    000004f3: 	leaq	0x1(%rax), %rsi
    000004f7: 	callq	_ZdlPvm@PLT # Offset: 1271
.Ltmp1829:
    000004fc: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000503: 	movq	%r15, %rsi
    00000506: 	movq	%r12, %rdi
    00000509: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1289
    0000050e: 	callq	clock@PLT # Offset: 1294
    00000513: 	movl	iterations(%rip), %ecx
    00000519: 	xorl	%r13d, %r13d
    0000051c: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000523: 	movq	%rax, start_time(%rip)
    0000052a: 	testl	%ecx, %ecx
    0000052c: 	jle	.Ltmp1830 # Offset: 1324
    0000052e: 	nop # Size: 2
.Ltmp1833:
    00000530: 	movq	%rbp, %rax
    00000533: 	pxor	%xmm0, %xmm0
    00000537: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1831:
    00000540: 	paddq	(%rax), %xmm0
    00000544: 	addq	$0x10, %rax
    00000548: 	cmpq	%rbx, %rax
    0000054b: 	jne	.Ltmp1831 # Offset: 1355
    0000054d: 	movslq	init_value(%rip), %rdx
    00000554: 	movdqa	%xmm0, %xmm1
    00000558: 	psrldq	$0x8, %xmm1
    0000055d: 	imulq	$0x1f40, %rdx, %rdx
    00000564: 	paddq	%xmm1, %xmm0
    00000568: 	movq	%xmm0, %rax
    0000056d: 	cmpq	%rax, %rdx
    00000570: 	je	.Ltmp1832 # Offset: 1392
    00000572: 	movq	0xb0(%rsp), %rdx
    0000057a: 	movq	%r14, %rsi
    0000057d: 	movl	$0x1, %edi
    00000582: 	xorl	%eax, %eax
    00000584: 	callq	__printf_chk@PLT # Offset: 1412
    00000589: 	movl	iterations(%rip), %ecx
.Ltmp1832:
    0000058f: 	addl	$0x1, %r13d
    00000593: 	cmpl	%ecx, %r13d
    00000596: 	jl	.Ltmp1833 # Offset: 1430
.Ltmp1830:
    00000598: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000059f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000005a6: 	subq	$0x20, %rax
    000005aa: 	cmpq	%rax, %r14
    000005ad: 	je	.Ltmp1834 # Offset: 1453
    000005b3: 	leaq	0x10(%r14), %rdi
    000005b7: 	movq	0xb8(%rsp), %r13
    000005bf: 	movq	%rdi, (%r14)
    000005c2: 	movq	0xb0(%rsp), %rax
    000005ca: 	movq	%rax, %rsi
    000005cd: 	movq	%rax, 0x38(%rsp)
    000005d2: 	addq	%r13, %rsi
    000005d5: 	je	.Ltmp1835 # Offset: 1493
    000005d7: 	testq	%rax, %rax
    000005da: 	je	.Ltmp1836 # Offset: 1498
.Ltmp1835:
    000005e0: 	movq	%r13, 0x48(%rsp)
    000005e5: 	cmpq	$0xf, %r13
    000005e9: 	ja	.Ltmp1837 # Offset: 1513
    000005ef: 	cmpq	$0x1, %r13
    000005f3: 	jne	.Ltmp1838 # Offset: 1523
    000005f9: 	movq	0x38(%rsp), %rax
    000005fe: 	movzbl	(%rax), %eax
    00000601: 	movb	%al, 0x10(%r14)
.Ltmp2013:
    00000605: 	movq	%r13, 0x8(%r14)
    00000609: 	movb	$0x0, (%rdi,%r13)
    0000060e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000615: 	addq	$0x20, %rax
    00000619: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1991:
    00000620: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000627: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000062e: 	je	.Ltmp1839 # Offset: 1582
.Ltmp1990:
    00000634: 	movq	-0x20(%rax), %r13
    00000638: 	callq	clock@PLT # Offset: 1592
    0000063d: 	pxor	%xmm0, %xmm0
    00000641: 	movq	%rax, end_time(%rip)
    00000648: 	movq	%r13, %rdi
    0000064b: 	subq	start_time(%rip), %rax
    00000652: 	cvtsi2sd	%rax, %xmm0
    00000657: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000065f: 	callq	_Z13record_resultdPKc # Offset: 1631
    00000664: 	movq	0xb0(%rsp), %rdi
    0000066c: 	cmpq	(%rsp), %rdi
    00000670: 	je	.Ltmp1840 # Offset: 1648
    00000672: 	movq	0xc0(%rsp), %rax
    0000067a: 	leaq	0x1(%rax), %rsi
    0000067e: 	callq	_ZdlPvm@PLT # Offset: 1662
.Ltmp1840:
    00000683: 	leaq	DATAat0x1c208(%rip), %rdx
    0000068a: 	movq	%r15, %rsi
    0000068d: 	movq	%r12, %rdi
    00000690: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1680
    00000695: 	callq	clock@PLT # Offset: 1685
    0000069a: 	movl	iterations(%rip), %ecx
    000006a0: 	xorl	%r13d, %r13d
    000006a3: 	leaq	DATAat0x1c1c8(%rip), %r14
    000006aa: 	movq	%rax, start_time(%rip)
    000006b1: 	testl	%ecx, %ecx
    000006b3: 	jle	.Ltmp1841 # Offset: 1715
    000006b5: 	nopl	(%rax) # Size: 3
.Ltmp1844:
    000006b8: 	movq	%rbp, %rax
    000006bb: 	pxor	%xmm0, %xmm0
    000006bf: 	nop # Size: 1
.Ltmp1842:
    000006c0: 	paddq	(%rax), %xmm0
    000006c4: 	addq	$0x10, %rax
    000006c8: 	cmpq	%rbx, %rax
    000006cb: 	jne	.Ltmp1842 # Offset: 1739
    000006cd: 	movslq	init_value(%rip), %rdx
    000006d4: 	movdqa	%xmm0, %xmm1
    000006d8: 	psrldq	$0x8, %xmm1
    000006dd: 	imulq	$0x1f40, %rdx, %rdx
    000006e4: 	paddq	%xmm1, %xmm0
    000006e8: 	movq	%xmm0, %rax
    000006ed: 	cmpq	%rax, %rdx
    000006f0: 	je	.Ltmp1843 # Offset: 1776
    000006f2: 	movq	0xb0(%rsp), %rdx
    000006fa: 	movq	%r14, %rsi
    000006fd: 	movl	$0x1, %edi
    00000702: 	xorl	%eax, %eax
    00000704: 	callq	__printf_chk@PLT # Offset: 1796
    00000709: 	movl	iterations(%rip), %ecx
.Ltmp1843:
    0000070f: 	addl	$0x1, %r13d
    00000713: 	cmpl	%ecx, %r13d
    00000716: 	jl	.Ltmp1844 # Offset: 1814
.Ltmp1841:
    00000718: 	movq	%r12, %rsi
    0000071b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000722: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1826
    00000727: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000072e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000735: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000073c: 	je	.Ltmp1845 # Offset: 1852
.Ltmp1989:
    00000742: 	movq	-0x20(%rax), %r13
    00000746: 	callq	clock@PLT # Offset: 1862
    0000074b: 	pxor	%xmm0, %xmm0
    0000074f: 	movq	%rax, end_time(%rip)
    00000756: 	movq	%r13, %rdi
    00000759: 	subq	start_time(%rip), %rax
    00000760: 	cvtsi2sd	%rax, %xmm0
    00000765: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000076d: 	callq	_Z13record_resultdPKc # Offset: 1901
    00000772: 	movq	0xb0(%rsp), %rdi
    0000077a: 	cmpq	(%rsp), %rdi
    0000077e: 	je	.Ltmp1846 # Offset: 1918
    00000780: 	movq	0xc0(%rsp), %rax
    00000788: 	leaq	0x1(%rax), %rsi
    0000078c: 	callq	_ZdlPvm@PLT # Offset: 1932
.Ltmp1846:
    00000791: 	leaq	DATAat0x1c21d(%rip), %rdx
    00000798: 	movq	%r15, %rsi
    0000079b: 	movq	%r12, %rdi
    0000079e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1950
    000007a3: 	callq	clock@PLT # Offset: 1955
    000007a8: 	movl	iterations(%rip), %ecx
    000007ae: 	xorl	%r13d, %r13d
    000007b1: 	leaq	DATAat0x1c1c8(%rip), %r14
    000007b8: 	movq	%rax, start_time(%rip)
    000007bf: 	testl	%ecx, %ecx
    000007c1: 	jle	.Ltmp1847 # Offset: 1985
    000007c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1850:
    000007c8: 	movq	%rbp, %rax
    000007cb: 	pxor	%xmm0, %xmm0
    000007cf: 	nop # Size: 1
.Ltmp1848:
    000007d0: 	paddq	(%rax), %xmm0
    000007d4: 	addq	$0x10, %rax
    000007d8: 	cmpq	%rbx, %rax
    000007db: 	jne	.Ltmp1848 # Offset: 2011
    000007dd: 	movslq	init_value(%rip), %rdx
    000007e4: 	movdqa	%xmm0, %xmm1
    000007e8: 	psrldq	$0x8, %xmm1
    000007ed: 	imulq	$0x1f40, %rdx, %rdx
    000007f4: 	paddq	%xmm1, %xmm0
    000007f8: 	movq	%xmm0, %rax
    000007fd: 	cmpq	%rax, %rdx
    00000800: 	je	.Ltmp1849 # Offset: 2048
    00000802: 	movq	0xb0(%rsp), %rdx
    0000080a: 	movq	%r14, %rsi
    0000080d: 	movl	$0x1, %edi
    00000812: 	xorl	%eax, %eax
    00000814: 	callq	__printf_chk@PLT # Offset: 2068
    00000819: 	movl	iterations(%rip), %ecx
.Ltmp1849:
    0000081f: 	addl	$0x1, %r13d
    00000823: 	cmpl	%ecx, %r13d
    00000826: 	jl	.Ltmp1850 # Offset: 2086
.Ltmp1847:
    00000828: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000082f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000836: 	subq	$0x20, %rax
    0000083a: 	cmpq	%rax, %r14
    0000083d: 	je	.Ltmp1851 # Offset: 2109
    00000843: 	leaq	0x10(%r14), %rdi
    00000847: 	movq	0xb8(%rsp), %r13
    0000084f: 	movq	%rdi, (%r14)
    00000852: 	movq	0xb0(%rsp), %rax
    0000085a: 	movq	%rax, %rsi
    0000085d: 	movq	%rax, 0x38(%rsp)
    00000862: 	addq	%r13, %rsi
    00000865: 	je	.Ltmp1852 # Offset: 2149
    00000867: 	testq	%rax, %rax
    0000086a: 	je	.Ltmp1853 # Offset: 2154
.Ltmp1852:
    00000870: 	movq	%r13, 0x48(%rsp)
    00000875: 	cmpq	$0xf, %r13
    00000879: 	ja	.Ltmp1854 # Offset: 2169
    0000087f: 	cmpq	$0x1, %r13
    00000883: 	jne	.Ltmp1855 # Offset: 2179
    00000889: 	movq	0x38(%rsp), %rax
    0000088e: 	movzbl	(%rax), %eax
    00000891: 	movb	%al, 0x10(%r14)
.Ltmp2012:
    00000895: 	movq	%r13, 0x8(%r14)
    00000899: 	movb	$0x0, (%rdi,%r13)
    0000089e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008a5: 	addq	$0x20, %rax
    000008a9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1988:
    000008b0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008be: 	je	.Ltmp1856 # Offset: 2238
.Ltmp1987:
    000008c4: 	movq	-0x20(%rax), %r13
    000008c8: 	callq	clock@PLT # Offset: 2248
    000008cd: 	pxor	%xmm0, %xmm0
    000008d1: 	movq	%rax, end_time(%rip)
    000008d8: 	movq	%r13, %rdi
    000008db: 	subq	start_time(%rip), %rax
    000008e2: 	cvtsi2sd	%rax, %xmm0
    000008e7: 	divsd	DATAat0x1c370(%rip), %xmm0
    000008ef: 	callq	_Z13record_resultdPKc # Offset: 2287
    000008f4: 	movq	0xb0(%rsp), %rdi
    000008fc: 	cmpq	(%rsp), %rdi
    00000900: 	je	.Ltmp1857 # Offset: 2304
    00000902: 	movq	0xc0(%rsp), %rax
    0000090a: 	leaq	0x1(%rax), %rsi
    0000090e: 	callq	_ZdlPvm@PLT # Offset: 2318
.Ltmp1857:
    00000913: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000091a: 	movq	%r15, %rsi
    0000091d: 	movq	%r12, %rdi
    00000920: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2336
    00000925: 	callq	clock@PLT # Offset: 2341
    0000092a: 	movl	iterations(%rip), %ecx
    00000930: 	xorl	%r13d, %r13d
    00000933: 	leaq	DATAat0x1c1c8(%rip), %r14
    0000093a: 	movq	%rax, start_time(%rip)
    00000941: 	testl	%ecx, %ecx
    00000943: 	jle	.Ltmp1858 # Offset: 2371
    00000945: 	nopl	(%rax) # Size: 3
.Ltmp1861:
    00000948: 	movq	%rbp, %rax
    0000094b: 	pxor	%xmm0, %xmm0
    0000094f: 	nop # Size: 1
.Ltmp1859:
    00000950: 	paddq	(%rax), %xmm0
    00000954: 	addq	$0x10, %rax
    00000958: 	cmpq	%rbx, %rax
    0000095b: 	jne	.Ltmp1859 # Offset: 2395
    0000095d: 	movslq	init_value(%rip), %rdx
    00000964: 	movdqa	%xmm0, %xmm1
    00000968: 	psrldq	$0x8, %xmm1
    0000096d: 	imulq	$0x1f40, %rdx, %rdx
    00000974: 	paddq	%xmm1, %xmm0
    00000978: 	movq	%xmm0, %rax
    0000097d: 	cmpq	%rax, %rdx
    00000980: 	je	.Ltmp1860 # Offset: 2432
    00000982: 	movq	0xb0(%rsp), %rdx
    0000098a: 	movq	%r14, %rsi
    0000098d: 	movl	$0x1, %edi
    00000992: 	xorl	%eax, %eax
    00000994: 	callq	__printf_chk@PLT # Offset: 2452
    00000999: 	movl	iterations(%rip), %ecx
.Ltmp1860:
    0000099f: 	addl	$0x1, %r13d
    000009a3: 	cmpl	%ecx, %r13d
    000009a6: 	jl	.Ltmp1861 # Offset: 2470
.Ltmp1858:
    000009a8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009af: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000009b6: 	subq	$0x20, %rax
    000009ba: 	cmpq	%rax, %r14
    000009bd: 	je	.Ltmp1862 # Offset: 2493
    000009c3: 	leaq	0x10(%r14), %rdi
    000009c7: 	movq	0xb8(%rsp), %r13
    000009cf: 	movq	%rdi, (%r14)
    000009d2: 	movq	0xb0(%rsp), %rax
    000009da: 	movq	%rax, %rsi
    000009dd: 	movq	%rax, 0x38(%rsp)
    000009e2: 	addq	%r13, %rsi
    000009e5: 	je	.Ltmp1863 # Offset: 2533
    000009e7: 	testq	%rax, %rax
    000009ea: 	je	.Ltmp1864 # Offset: 2538
.Ltmp1863:
    000009f0: 	movq	%r13, 0x48(%rsp)
    000009f5: 	cmpq	$0xf, %r13
    000009f9: 	ja	.Ltmp1865 # Offset: 2553
    000009ff: 	cmpq	$0x1, %r13
    00000a03: 	jne	.Ltmp1866 # Offset: 2563
    00000a09: 	movq	0x38(%rsp), %rax
    00000a0e: 	movzbl	(%rax), %eax
    00000a11: 	movb	%al, 0x10(%r14)
.Ltmp2017:
    00000a15: 	movq	%r13, 0x8(%r14)
    00000a19: 	movb	$0x0, (%rdi,%r13)
    00000a1e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a25: 	addq	$0x20, %rax
    00000a29: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1986:
    00000a30: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a37: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a3e: 	je	.Ltmp1867 # Offset: 2622
.Ltmp1985:
    00000a44: 	movq	-0x20(%rax), %r13
    00000a48: 	callq	clock@PLT # Offset: 2632
    00000a4d: 	pxor	%xmm0, %xmm0
    00000a51: 	movq	%rax, end_time(%rip)
    00000a58: 	movq	%r13, %rdi
    00000a5b: 	subq	start_time(%rip), %rax
    00000a62: 	cvtsi2sd	%rax, %xmm0
    00000a67: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000a6f: 	callq	_Z13record_resultdPKc # Offset: 2671
    00000a74: 	movq	0xb0(%rsp), %rdi
    00000a7c: 	cmpq	(%rsp), %rdi
    00000a80: 	je	.Ltmp1868 # Offset: 2688
    00000a82: 	movq	0xc0(%rsp), %rax
    00000a8a: 	leaq	0x1(%rax), %rsi
    00000a8e: 	callq	_ZdlPvm@PLT # Offset: 2702
.Ltmp1868:
    00000a93: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000a9a: 	movq	%r15, %rsi
    00000a9d: 	movq	%r12, %rdi
    00000aa0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2720
    00000aa5: 	callq	clock@PLT # Offset: 2725
    00000aaa: 	movl	iterations(%rip), %ecx
    00000ab0: 	xorl	%r13d, %r13d
    00000ab3: 	leaq	DATAat0x1c1c8(%rip), %r14
    00000aba: 	movq	%rax, start_time(%rip)
    00000ac1: 	testl	%ecx, %ecx
    00000ac3: 	jle	.Ltmp1869 # Offset: 2755
    00000ac5: 	nopl	(%rax) # Size: 3
.Ltmp1872:
    00000ac8: 	movq	%rbp, %rax
    00000acb: 	pxor	%xmm0, %xmm0
    00000acf: 	nop # Size: 1
.Ltmp1870:
    00000ad0: 	paddq	(%rax), %xmm0
    00000ad4: 	addq	$0x10, %rax
    00000ad8: 	cmpq	%rbx, %rax
    00000adb: 	jne	.Ltmp1870 # Offset: 2779
    00000add: 	movslq	init_value(%rip), %rdx
    00000ae4: 	movdqa	%xmm0, %xmm1
    00000ae8: 	psrldq	$0x8, %xmm1
    00000aed: 	imulq	$0x1f40, %rdx, %rdx
    00000af4: 	paddq	%xmm1, %xmm0
    00000af8: 	movq	%xmm0, %rax
    00000afd: 	cmpq	%rax, %rdx
    00000b00: 	je	.Ltmp1871 # Offset: 2816
    00000b02: 	movq	0xb0(%rsp), %rdx
    00000b0a: 	movq	%r14, %rsi
    00000b0d: 	movl	$0x1, %edi
    00000b12: 	xorl	%eax, %eax
    00000b14: 	callq	__printf_chk@PLT # Offset: 2836
    00000b19: 	movl	iterations(%rip), %ecx
.Ltmp1871:
    00000b1f: 	addl	$0x1, %r13d
    00000b23: 	cmpl	%ecx, %r13d
    00000b26: 	jl	.Ltmp1872 # Offset: 2854
.Ltmp1869:
    00000b28: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000b36: 	subq	$0x20, %rax
    00000b3a: 	cmpq	%rax, %rbx
    00000b3d: 	je	.Ltmp1873 # Offset: 2877
    00000b43: 	leaq	0x10(%rbx), %rdi
    00000b47: 	movq	0xb8(%rsp), %r13
    00000b4f: 	movq	%rdi, (%rbx)
    00000b52: 	movq	0xb0(%rsp), %rbp
    00000b5a: 	movq	%rbp, %rax
    00000b5d: 	addq	%r13, %rax
    00000b60: 	je	.Ltmp1874 # Offset: 2912
    00000b62: 	testq	%rbp, %rbp
    00000b65: 	je	.Ltmp1875 # Offset: 2917
.Ltmp1874:
    00000b6b: 	movq	%r13, 0x48(%rsp)
    00000b70: 	cmpq	$0xf, %r13
    00000b74: 	ja	.Ltmp1876 # Offset: 2932
    00000b7a: 	cmpq	$0x1, %r13
    00000b7e: 	jne	.Ltmp1877 # Offset: 2942
    00000b84: 	movzbl	(%rbp), %eax
    00000b88: 	movb	%al, 0x10(%rbx)
.Ltmp2022:
    00000b8b: 	movq	%r13, 0x8(%rbx)
    00000b8f: 	movb	$0x0, (%rdi,%r13)
    00000b94: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b9b: 	addq	$0x20, %rax
    00000b9f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1984:
    00000ba6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000bad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bb4: 	je	.Ltmp1878 # Offset: 2996
.Ltmp1981:
    00000bba: 	movq	-0x20(%rax), %rbp
    00000bbe: 	callq	clock@PLT # Offset: 3006
    00000bc3: 	pxor	%xmm0, %xmm0
    00000bc7: 	movq	%rax, end_time(%rip)
    00000bce: 	movq	%rbp, %rdi
    00000bd1: 	subq	start_time(%rip), %rax
    00000bd8: 	cvtsi2sd	%rax, %xmm0
    00000bdd: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000be5: 	callq	_Z13record_resultdPKc # Offset: 3045
    00000bea: 	movq	0xb0(%rsp), %rdi
    00000bf2: 	cmpq	(%rsp), %rdi
    00000bf6: 	je	.Ltmp1879 # Offset: 3062
    00000bf8: 	movq	0xc0(%rsp), %rax
    00000c00: 	leaq	0x1(%rax), %rsi
    00000c04: 	callq	_ZdlPvm@PLT # Offset: 3076
.Ltmp1879:
    00000c09: 	leaq	DATAat0x1c265(%rip), %rdx
    00000c10: 	movq	%r15, %rsi
    00000c13: 	movq	%r12, %rdi
    00000c16: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3094
    00000c1b: 	callq	clock@PLT # Offset: 3099
    00000c20: 	xorl	%ebp, %ebp
    00000c22: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000c29: 	imulq	$0x1f40, 0x20(%rsp), %rbx
    00000c32: 	movq	%rax, start_time(%rip)
    00000c39: 	movl	iterations(%rip), %eax
    00000c3f: 	testl	%eax, %eax
    00000c41: 	jle	.Ltmp1880 # Offset: 3137
.Ltmp1968:
    00000c43: 	movslq	init_value(%rip), %rax
    00000c4a: 	imulq	$0x1f40, %rax, %rax
    00000c51: 	cmpq	%rax, %rbx
    00000c54: 	jne	.Ltmp1881 # Offset: 3156
.Ltmp1880:
    00000c5a: 	movq	%r12, %rsi
    00000c5d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c64: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3172
    00000c69: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c70: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c77: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c7e: 	je	.Ltmp1882 # Offset: 3198
.Ltmp2000:
    00000c84: 	movq	-0x20(%rax), %rbp
    00000c88: 	callq	clock@PLT # Offset: 3208
    00000c8d: 	pxor	%xmm0, %xmm0
    00000c91: 	movq	%rax, end_time(%rip)
    00000c98: 	movq	%rbp, %rdi
    00000c9b: 	subq	start_time(%rip), %rax
    00000ca2: 	cvtsi2sd	%rax, %xmm0
    00000ca7: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000caf: 	callq	_Z13record_resultdPKc # Offset: 3247
    00000cb4: 	movq	0xb0(%rsp), %rdi
    00000cbc: 	cmpq	(%rsp), %rdi
    00000cc0: 	je	.Ltmp1883 # Offset: 3264
    00000cc2: 	movq	0xc0(%rsp), %rax
    00000cca: 	leaq	0x1(%rax), %rsi
    00000cce: 	callq	_ZdlPvm@PLT # Offset: 3278
.Ltmp1883:
    00000cd3: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000cda: 	movq	%r15, %rsi
    00000cdd: 	movq	%r12, %rdi
    00000ce0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3296
    00000ce5: 	callq	clock@PLT # Offset: 3301
    00000cea: 	movl	iterations(%rip), %r14d
    00000cf1: 	xorl	%ebp, %ebp
    00000cf3: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000cfa: 	movq	%rax, start_time(%rip)
    00000d01: 	testl	%r14d, %r14d
    00000d04: 	jle	.Ltmp1884 # Offset: 3332
    00000d06: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1967:
    00000d10: 	movslq	init_value(%rip), %rax
    00000d17: 	imulq	$0x1f40, %rax, %rax
    00000d1e: 	cmpq	%rax, %rbx
    00000d21: 	jne	.Ltmp1885 # Offset: 3361
.Ltmp1884:
    00000d27: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d2e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000d35: 	subq	$0x20, %rax
    00000d39: 	cmpq	%rax, %rbp
    00000d3c: 	je	.Ltmp1886 # Offset: 3388
    00000d42: 	leaq	0x10(%rbp), %rdi
    00000d46: 	movq	0xb8(%rsp), %r13
    00000d4e: 	movq	%rdi, (%rbp)
    00000d52: 	movq	0xb0(%rsp), %r14
    00000d5a: 	movq	%r14, %rax
    00000d5d: 	addq	%r13, %rax
    00000d60: 	je	.Ltmp1887 # Offset: 3424
    00000d62: 	testq	%r14, %r14
    00000d65: 	je	.Ltmp1888 # Offset: 3429
.Ltmp1887:
    00000d6b: 	movq	%r13, 0x48(%rsp)
    00000d70: 	cmpq	$0xf, %r13
    00000d74: 	ja	.Ltmp1889 # Offset: 3444
    00000d7a: 	cmpq	$0x1, %r13
    00000d7e: 	jne	.Ltmp1890 # Offset: 3454
    00000d84: 	movzbl	(%r14), %eax
    00000d88: 	movb	%al, 0x10(%rbp)
.Ltmp2021:
    00000d8b: 	movq	%r13, 0x8(%rbp)
    00000d8f: 	movb	$0x0, (%rdi,%r13)
    00000d94: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d9b: 	addq	$0x20, %rax
    00000d9f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1983:
    00000da6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000dad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000db4: 	je	.Ltmp1891 # Offset: 3508
.Ltmp1978:
    00000dba: 	movq	-0x20(%rax), %rbp
    00000dbe: 	callq	clock@PLT # Offset: 3518
    00000dc3: 	pxor	%xmm0, %xmm0
    00000dc7: 	movq	%rax, end_time(%rip)
    00000dce: 	movq	%rbp, %rdi
    00000dd1: 	subq	start_time(%rip), %rax
    00000dd8: 	cvtsi2sd	%rax, %xmm0
    00000ddd: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000de5: 	callq	_Z13record_resultdPKc # Offset: 3557
    00000dea: 	movq	0xb0(%rsp), %rdi
    00000df2: 	cmpq	(%rsp), %rdi
    00000df6: 	je	.Ltmp1892 # Offset: 3574
    00000df8: 	movq	0xc0(%rsp), %rax
    00000e00: 	leaq	0x1(%rax), %rsi
    00000e04: 	callq	_ZdlPvm@PLT # Offset: 3588
.Ltmp1892:
    00000e09: 	leaq	DATAat0x1c289(%rip), %rdx
    00000e10: 	movq	%r15, %rsi
    00000e13: 	movq	%r12, %rdi
    00000e16: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3606
    00000e1b: 	callq	clock@PLT # Offset: 3611
    00000e20: 	movl	iterations(%rip), %r11d
    00000e27: 	xorl	%ebp, %ebp
    00000e29: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000e30: 	movq	%rax, start_time(%rip)
    00000e37: 	testl	%r11d, %r11d
    00000e3a: 	jle	.Ltmp1893 # Offset: 3642
    00000e3c: 	nopl	(%rax) # Size: 4
.Ltmp1975:
    00000e40: 	movslq	init_value(%rip), %rax
    00000e47: 	imulq	$0x1f40, %rax, %rax
    00000e4e: 	cmpq	%rax, %rbx
    00000e51: 	jne	.Ltmp1894 # Offset: 3665
.Ltmp1893:
    00000e57: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e5e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000e65: 	subq	$0x20, %rax
    00000e69: 	cmpq	%rax, %rbp
    00000e6c: 	je	.Ltmp1895 # Offset: 3692
    00000e72: 	leaq	0x10(%rbp), %rdi
    00000e76: 	movq	0xb8(%rsp), %r13
    00000e7e: 	movq	%rdi, (%rbp)
    00000e82: 	movq	0xb0(%rsp), %r14
    00000e8a: 	movq	%r14, %rax
    00000e8d: 	addq	%r13, %rax
    00000e90: 	je	.Ltmp1896 # Offset: 3728
    00000e92: 	testq	%r14, %r14
    00000e95: 	je	.Ltmp1897 # Offset: 3733
.Ltmp1896:
    00000e9b: 	movq	%r13, 0x48(%rsp)
    00000ea0: 	cmpq	$0xf, %r13
    00000ea4: 	ja	.Ltmp1898 # Offset: 3748
    00000eaa: 	cmpq	$0x1, %r13
    00000eae: 	jne	.Ltmp1899 # Offset: 3758
    00000eb4: 	movzbl	(%r14), %eax
    00000eb8: 	movb	%al, 0x10(%rbp)
.Ltmp2019:
    00000ebb: 	movq	%r13, 0x8(%rbp)
    00000ebf: 	movb	$0x0, (%rdi,%r13)
    00000ec4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ecb: 	addq	$0x20, %rax
    00000ecf: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1979:
    00000ed6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000edd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ee4: 	je	.Ltmp1900 # Offset: 3812
.Ltmp1976:
    00000eea: 	movq	-0x20(%rax), %rbp
    00000eee: 	callq	clock@PLT # Offset: 3822
    00000ef3: 	pxor	%xmm0, %xmm0
    00000ef7: 	movq	%rax, end_time(%rip)
    00000efe: 	movq	%rbp, %rdi
    00000f01: 	subq	start_time(%rip), %rax
    00000f08: 	cvtsi2sd	%rax, %xmm0
    00000f0d: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000f15: 	callq	_Z13record_resultdPKc # Offset: 3861
    00000f1a: 	movq	0xb0(%rsp), %rdi
    00000f22: 	cmpq	(%rsp), %rdi
    00000f26: 	je	.Ltmp1901 # Offset: 3878
    00000f28: 	movq	0xc0(%rsp), %rax
    00000f30: 	leaq	0x1(%rax), %rsi
    00000f34: 	callq	_ZdlPvm@PLT # Offset: 3892
.Ltmp1901:
    00000f39: 	leaq	DATAat0x1c298(%rip), %rdx
    00000f40: 	movq	%r15, %rsi
    00000f43: 	movq	%r12, %rdi
    00000f46: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3910
    00000f4b: 	movq	0x30(%rsp), %rdi
    00000f50: 	movq	%r12, %rdx
    00000f53: 	movl	$0x1f40, %esi
    00000f58: 	callq	_Z22test_struct4_deref_optIm12test_struct1ImEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3928
    00000f5d: 	movq	0xb0(%rsp), %rdi
    00000f65: 	cmpq	(%rsp), %rdi
    00000f69: 	je	.Ltmp1902 # Offset: 3945
    00000f6b: 	movq	0xc0(%rsp), %rax
    00000f73: 	leaq	0x1(%rax), %rsi
    00000f77: 	callq	_ZdlPvm@PLT # Offset: 3959
.Ltmp1902:
    00000f7c: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000f83: 	movq	%r15, %rsi
    00000f86: 	movq	%r12, %rdi
    00000f89: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3977
    00000f8e: 	callq	clock@PLT # Offset: 3982
    00000f93: 	movl	iterations(%rip), %r10d
    00000f9a: 	xorl	%ebp, %ebp
    00000f9c: 	leaq	DATAat0x1c1c8(%rip), %r13
    00000fa3: 	movq	%rax, start_time(%rip)
    00000faa: 	testl	%r10d, %r10d
    00000fad: 	jle	.Ltmp1903 # Offset: 4013
    00000faf: 	nop # Size: 1
.Ltmp1974:
    00000fb0: 	movslq	init_value(%rip), %rax
    00000fb7: 	imulq	$0x1f40, %rax, %rax
    00000fbe: 	cmpq	%rax, %rbx
    00000fc1: 	jne	.Ltmp1904 # Offset: 4033
.Ltmp1903:
    00000fc7: 	movq	%r12, %rsi
    00000fca: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000fd1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4049
    00000fd6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fdd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fe4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000feb: 	je	.Ltmp1905 # Offset: 4075
.Ltmp1977:
    00000ff1: 	movq	-0x20(%rax), %rbp
    00000ff5: 	callq	clock@PLT # Offset: 4085
    00000ffa: 	pxor	%xmm0, %xmm0
    00000ffe: 	movq	%rax, end_time(%rip)
    00001005: 	movq	%rbp, %rdi
    00001008: 	subq	start_time(%rip), %rax
    0000100f: 	cvtsi2sd	%rax, %xmm0
    00001014: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000101c: 	callq	_Z13record_resultdPKc # Offset: 4124
    00001021: 	movq	0xb0(%rsp), %rdi
    00001029: 	cmpq	(%rsp), %rdi
    0000102d: 	je	.Ltmp1906 # Offset: 4141
    0000102f: 	movq	0xc0(%rsp), %rax
    00001037: 	leaq	0x1(%rax), %rsi
    0000103b: 	callq	_ZdlPvm@PLT # Offset: 4155
.Ltmp1906:
    00001040: 	leaq	DATAat0x1c2be(%rip), %rdx
    00001047: 	movq	%r15, %rsi
    0000104a: 	movq	%r12, %rdi
    0000104d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4173
    00001052: 	callq	clock@PLT # Offset: 4178
    00001057: 	movl	iterations(%rip), %r9d
    0000105e: 	xorl	%ebp, %ebp
    00001060: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001067: 	movq	%rax, start_time(%rip)
    0000106e: 	testl	%r9d, %r9d
    00001071: 	jle	.Ltmp1907 # Offset: 4209
    00001073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1973:
    00001078: 	movslq	init_value(%rip), %rax
    0000107f: 	imulq	$0x1f40, %rax, %rax
    00001086: 	cmpq	%rax, %rbx
    00001089: 	jne	.Ltmp1908 # Offset: 4233
.Ltmp1907:
    0000108f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001096: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000109d: 	subq	$0x20, %rax
    000010a1: 	cmpq	%rax, %rbx
    000010a4: 	je	.Ltmp1909 # Offset: 4260
    000010aa: 	leaq	0x10(%rbx), %rdi
    000010ae: 	movq	0xb8(%rsp), %r13
    000010b6: 	movq	%rdi, (%rbx)
    000010b9: 	movq	0xb0(%rsp), %rbp
    000010c1: 	movq	%rbp, %rax
    000010c4: 	addq	%r13, %rax
    000010c7: 	je	.Ltmp1910 # Offset: 4295
    000010c9: 	testq	%rbp, %rbp
    000010cc: 	je	.Ltmp1911 # Offset: 4300
.Ltmp1910:
    000010d2: 	movq	%r13, 0x48(%rsp)
    000010d7: 	cmpq	$0xf, %r13
    000010db: 	ja	.Ltmp1912 # Offset: 4315
    000010e1: 	cmpq	$0x1, %r13
    000010e5: 	jne	.Ltmp1913 # Offset: 4325
    000010eb: 	movzbl	(%rbp), %eax
    000010ef: 	movb	%al, 0x10(%rbx)
.Ltmp2009:
    000010f2: 	movq	%r13, 0x8(%rbx)
    000010f6: 	movb	$0x0, (%rdi,%r13)
    000010fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001102: 	addq	$0x20, %rax
    00001106: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1994:
    0000110d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001114: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000111b: 	je	.Ltmp1914 # Offset: 4379
.Ltmp1993:
    00001121: 	movq	-0x20(%rax), %rbp
    00001125: 	callq	clock@PLT # Offset: 4389
    0000112a: 	pxor	%xmm0, %xmm0
    0000112e: 	movq	%rax, end_time(%rip)
    00001135: 	movq	%rbp, %rdi
    00001138: 	subq	start_time(%rip), %rax
    0000113f: 	cvtsi2sd	%rax, %xmm0
    00001144: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000114c: 	callq	_Z13record_resultdPKc # Offset: 4428
    00001151: 	movq	0xb0(%rsp), %rdi
    00001159: 	cmpq	(%rsp), %rdi
    0000115d: 	je	.Ltmp1915 # Offset: 4445
    0000115f: 	movq	0xc0(%rsp), %rax
    00001167: 	leaq	0x1(%rax), %rsi
    0000116b: 	callq	_ZdlPvm@PLT # Offset: 4459
.Ltmp1915:
    00001170: 	leaq	DATAat0x1c225(%rip), %rdx
    00001177: 	movq	%r15, %rsi
    0000117a: 	movq	%r12, %rdi
    0000117d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4477
    00001182: 	callq	clock@PLT # Offset: 4482
    00001187: 	movl	iterations(%rip), %r8d
    0000118e: 	xorl	%ebp, %ebp
    00001190: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001197: 	movq	%rax, start_time(%rip)
    0000119e: 	movq	0x10(%rsp), %rax
    000011a3: 	leaq	(,%rax,8), %r14
    000011ab: 	movq	0x2e0(%rsp,%r14), %rax
    000011b3: 	movq	0x1f0(%rsp,%rax,8), %rax
    000011bb: 	imulq	$0x1f40, 0x100(%rsp,%rax,8), %rbx
    000011c7: 	testl	%r8d, %r8d
    000011ca: 	jle	.Ltmp1916 # Offset: 4554
.Ltmp1972:
    000011cc: 	movslq	init_value(%rip), %rax
    000011d3: 	imulq	$0x1f40, %rax, %rax
    000011da: 	cmpq	%rax, %rbx
    000011dd: 	jne	.Ltmp1917 # Offset: 4573
.Ltmp1916:
    000011e3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011ea: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000011f1: 	subq	$0x20, %rax
    000011f5: 	cmpq	%rax, %r13
    000011f8: 	je	.Ltmp1918 # Offset: 4600
    000011fe: 	leaq	0x10(%r13), %rdi
    00001202: 	movq	0xb8(%rsp), %rbp
    0000120a: 	movq	%rdi, (%r13)
    0000120e: 	movq	0xb0(%rsp), %rax
    00001216: 	movq	%rax, %rsi
    00001219: 	movq	%rax, 0x20(%rsp)
    0000121e: 	addq	%rbp, %rsi
    00001221: 	je	.Ltmp1919 # Offset: 4641
    00001223: 	testq	%rax, %rax
    00001226: 	je	.Ltmp1920 # Offset: 4646
.Ltmp1919:
    0000122c: 	movq	%rbp, 0x48(%rsp)
    00001231: 	cmpq	$0xf, %rbp
    00001235: 	ja	.Ltmp1921 # Offset: 4661
    0000123b: 	cmpq	$0x1, %rbp
    0000123f: 	jne	.Ltmp1922 # Offset: 4671
    00001245: 	movq	0x20(%rsp), %rax
    0000124a: 	movzbl	(%rax), %eax
    0000124d: 	movb	%al, 0x10(%r13)
.Ltmp2015:
    00001251: 	movq	%rbp, 0x8(%r13)
    00001255: 	movb	$0x0, (%rdi,%rbp)
    00001259: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001260: 	addq	$0x20, %rax
    00001264: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1996:
    0000126b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001272: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001279: 	je	.Ltmp1923 # Offset: 4729
.Ltmp1995:
    0000127f: 	movq	-0x20(%rax), %rbp
    00001283: 	callq	clock@PLT # Offset: 4739
    00001288: 	pxor	%xmm0, %xmm0
    0000128c: 	movq	%rax, end_time(%rip)
    00001293: 	movq	%rbp, %rdi
    00001296: 	subq	start_time(%rip), %rax
    0000129d: 	cvtsi2sd	%rax, %xmm0
    000012a2: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012aa: 	callq	_Z13record_resultdPKc # Offset: 4778
    000012af: 	movq	0xb0(%rsp), %rdi
    000012b7: 	cmpq	(%rsp), %rdi
    000012bb: 	je	.Ltmp1924 # Offset: 4795
    000012bd: 	movq	0xc0(%rsp), %rax
    000012c5: 	leaq	0x1(%rax), %rsi
    000012c9: 	callq	_ZdlPvm@PLT # Offset: 4809
.Ltmp1924:
    000012ce: 	leaq	DATAat0x1c242(%rip), %rdx
    000012d5: 	movq	%r15, %rsi
    000012d8: 	movq	%r12, %rdi
    000012db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4827
    000012e0: 	callq	clock@PLT # Offset: 4832
    000012e5: 	movl	iterations(%rip), %edi
    000012eb: 	xorl	%ebp, %ebp
    000012ed: 	leaq	DATAat0x1c1c8(%rip), %r13
    000012f4: 	movq	%rax, start_time(%rip)
    000012fb: 	testl	%edi, %edi
    000012fd: 	jle	.Ltmp1925 # Offset: 4861
.Ltmp1970:
    000012ff: 	movslq	init_value(%rip), %rax
    00001306: 	imulq	$0x1f40, %rax, %rax
    0000130d: 	cmpq	%rax, %rbx
    00001310: 	jne	.Ltmp1926 # Offset: 4880
.Ltmp1925:
    00001316: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000131d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001324: 	subq	$0x20, %rax
    00001328: 	cmpq	%rax, %r13
    0000132b: 	je	.Ltmp1927 # Offset: 4907
    00001331: 	leaq	0x10(%r13), %rdi
    00001335: 	movq	0xb8(%rsp), %rbp
    0000133d: 	movq	%rdi, (%r13)
    00001341: 	movq	0xb0(%rsp), %rax
    00001349: 	movq	%rax, %rsi
    0000134c: 	movq	%rax, 0x20(%rsp)
    00001351: 	addq	%rbp, %rsi
    00001354: 	je	.Ltmp1928 # Offset: 4948
    00001356: 	testq	%rax, %rax
    00001359: 	je	.Ltmp1929 # Offset: 4953
.Ltmp1928:
    0000135f: 	movq	%rbp, 0x48(%rsp)
    00001364: 	cmpq	$0xf, %rbp
    00001368: 	ja	.Ltmp1930 # Offset: 4968
    0000136e: 	cmpq	$0x1, %rbp
    00001372: 	jne	.Ltmp1931 # Offset: 4978
    00001378: 	movq	0x20(%rsp), %rax
    0000137d: 	movzbl	(%rax), %eax
    00001380: 	movb	%al, 0x10(%r13)
.Ltmp2008:
    00001384: 	movq	%rbp, 0x8(%r13)
    00001388: 	movb	$0x0, (%rdi,%rbp)
    0000138c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001393: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000139a: 	addq	$0x20, %rax
    0000139e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013a5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000013ac: 	je	.Ltmp1932 # Offset: 5036
.Ltmp1997:
    000013b2: 	movq	-0x20(%rax), %rbp
    000013b6: 	callq	clock@PLT # Offset: 5046
    000013bb: 	pxor	%xmm0, %xmm0
    000013bf: 	movq	%rax, end_time(%rip)
    000013c6: 	movq	%rbp, %rdi
    000013c9: 	subq	start_time(%rip), %rax
    000013d0: 	cvtsi2sd	%rax, %xmm0
    000013d5: 	divsd	DATAat0x1c370(%rip), %xmm0
    000013dd: 	callq	_Z13record_resultdPKc # Offset: 5085
    000013e2: 	movq	0xb0(%rsp), %rdi
    000013ea: 	cmpq	(%rsp), %rdi
    000013ee: 	je	.Ltmp1933 # Offset: 5102
    000013f0: 	movq	0xc0(%rsp), %rax
    000013f8: 	leaq	0x1(%rax), %rsi
    000013fc: 	callq	_ZdlPvm@PLT # Offset: 5116
.Ltmp1933:
    00001401: 	leaq	DATAat0x1c257(%rip), %rdx
    00001408: 	movq	%r15, %rsi
    0000140b: 	movq	%r12, %rdi
    0000140e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5134
    00001413: 	callq	clock@PLT # Offset: 5139
    00001418: 	movl	iterations(%rip), %esi
    0000141e: 	xorl	%ebp, %ebp
    00001420: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001427: 	movq	%rax, start_time(%rip)
    0000142e: 	testl	%esi, %esi
    00001430: 	jle	.Ltmp1934 # Offset: 5168
.Ltmp1971:
    00001432: 	movslq	init_value(%rip), %rax
    00001439: 	imulq	$0x1f40, %rax, %rax
    00001440: 	cmpq	%rax, %rbx
    00001443: 	jne	.Ltmp1935 # Offset: 5187
.Ltmp1934:
    00001449: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001450: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001457: 	subq	$0x20, %rax
    0000145b: 	cmpq	%rax, %rbx
    0000145e: 	je	.Ltmp1936 # Offset: 5214
    00001464: 	leaq	0x10(%rbx), %rdi
    00001468: 	movq	0xb8(%rsp), %r13
    00001470: 	movq	%rdi, (%rbx)
    00001473: 	movq	0xb0(%rsp), %rbp
    0000147b: 	movq	%rbp, %rax
    0000147e: 	addq	%r13, %rax
    00001481: 	je	.Ltmp1937 # Offset: 5249
    00001483: 	testq	%rbp, %rbp
    00001486: 	je	.Ltmp1938 # Offset: 5254
.Ltmp1937:
    0000148c: 	movq	%r13, 0x48(%rsp)
    00001491: 	cmpq	$0xf, %r13
    00001495: 	ja	.Ltmp1939 # Offset: 5269
    0000149b: 	cmpq	$0x1, %r13
    0000149f: 	jne	.Ltmp1940 # Offset: 5279
    000014a5: 	movzbl	(%rbp), %eax
    000014a9: 	movb	%al, 0x10(%rbx)
.Ltmp2006:
    000014ac: 	movq	%r13, 0x8(%rbx)
    000014b0: 	movb	$0x0, (%rdi,%r13)
    000014b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014bc: 	addq	$0x20, %rax
    000014c0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2003:
    000014c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014d5: 	je	.Ltmp1941 # Offset: 5333
.Ltmp2002:
    000014db: 	movq	-0x20(%rax), %rbp
    000014df: 	callq	clock@PLT # Offset: 5343
    000014e4: 	pxor	%xmm0, %xmm0
    000014e8: 	movq	%rax, end_time(%rip)
    000014ef: 	movq	%rbp, %rdi
    000014f2: 	subq	start_time(%rip), %rax
    000014f9: 	cvtsi2sd	%rax, %xmm0
    000014fe: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001506: 	callq	_Z13record_resultdPKc # Offset: 5382
    0000150b: 	movq	0xb0(%rsp), %rdi
    00001513: 	cmpq	(%rsp), %rdi
    00001517: 	je	.Ltmp1942 # Offset: 5399
    00001519: 	movq	0xc0(%rsp), %rax
    00001521: 	leaq	0x1(%rax), %rsi
    00001525: 	callq	_ZdlPvm@PLT # Offset: 5413
.Ltmp1942:
    0000152a: 	leaq	DATAat0x1c338(%rip), %rdx
    00001531: 	movq	%r15, %rsi
    00001534: 	movq	%r12, %rdi
    00001537: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5431
    0000153c: 	movq	0x10(%rsp), %rsi
    00001541: 	leaq	0xd0(%rsp), %rdi
    00001549: 	movq	%r12, %rcx
    0000154c: 	movl	$0x1f40, %edx
    00001551: 	callq	_Z31test_struct_arrayList_deref_optIm21test_struct_arrayListImEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5457
    00001556: 	movq	0xb0(%rsp), %rdi
    0000155e: 	cmpq	(%rsp), %rdi
    00001562: 	je	.Ltmp1943 # Offset: 5474
    00001564: 	movq	0xc0(%rsp), %rax
    0000156c: 	leaq	0x1(%rax), %rsi
    00001570: 	callq	_ZdlPvm@PLT # Offset: 5488
.Ltmp1943:
    00001575: 	leaq	DATAat0x1c2ce(%rip), %rdx
    0000157c: 	movq	%r15, %rsi
    0000157f: 	movq	%r12, %rdi
    00001582: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5506
    00001587: 	callq	clock@PLT # Offset: 5511
    0000158c: 	movl	iterations(%rip), %ecx
    00001592: 	movq	%rax, start_time(%rip)
    00001599: 	testl	%ecx, %ecx
    0000159b: 	jle	.Ltmp1944 # Offset: 5531
    0000159d: 	movq	0x1f0(%rsp,%r14), %rax
    000015a5: 	xorl	%ebx, %ebx
    000015a7: 	leaq	DATAat0x1c1c8(%rip), %r13
    000015ae: 	movq	0x2e0(%rsp,%rax,8), %rax
    000015b6: 	movq	0x1f0(%rsp,%rax,8), %rax
    000015be: 	movq	0x2e0(%rsp,%rax,8), %rax
    000015c6: 	movq	0x1f0(%rsp,%rax,8), %rax
    000015ce: 	imulq	$0x1f40, 0x100(%rsp,%rax,8), %rbp
    000015da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1969:
    000015e0: 	movslq	init_value(%rip), %rax
    000015e7: 	imulq	$0x1f40, %rax, %rax
    000015ee: 	cmpq	%rbp, %rax
    000015f1: 	jne	.Ltmp1945 # Offset: 5617
.Ltmp1944:
    000015f7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001605: 	subq	$0x20, %rax
    00001609: 	cmpq	%rax, %rbx
    0000160c: 	je	.Ltmp1946 # Offset: 5644
    00001612: 	leaq	0x10(%rbx), %rdi
    00001616: 	movq	0xb8(%rsp), %r13
    0000161e: 	movq	%rdi, (%rbx)
    00001621: 	movq	0xb0(%rsp), %rbp
    00001629: 	movq	%rbp, %rax
    0000162c: 	addq	%r13, %rax
    0000162f: 	je	.Ltmp1947 # Offset: 5679
    00001631: 	testq	%rbp, %rbp
    00001634: 	je	.Ltmp1948 # Offset: 5684
.Ltmp1947:
    0000163a: 	movq	%r13, 0x48(%rsp)
    0000163f: 	cmpq	$0xf, %r13
    00001643: 	ja	.Ltmp1949 # Offset: 5699
    00001649: 	cmpq	$0x1, %r13
    0000164d: 	jne	.Ltmp1950 # Offset: 5709
    00001653: 	movzbl	(%rbp), %eax
    00001657: 	movb	%al, 0x10(%rbx)
.Ltmp2004:
    0000165a: 	movq	%r13, 0x8(%rbx)
    0000165e: 	movb	$0x0, (%rdi,%r13)
    00001663: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000166a: 	addq	$0x20, %rax
    0000166e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2001:
    00001675: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000167c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001683: 	je	.Ltmp1951 # Offset: 5763
.Ltmp1980:
    00001689: 	movq	-0x20(%rax), %rbp
    0000168d: 	callq	clock@PLT # Offset: 5773
    00001692: 	pxor	%xmm0, %xmm0
    00001696: 	movq	%rax, end_time(%rip)
    0000169d: 	movq	%rbp, %rdi
    000016a0: 	subq	start_time(%rip), %rax
    000016a7: 	cvtsi2sd	%rax, %xmm0
    000016ac: 	divsd	DATAat0x1c370(%rip), %xmm0
    000016b4: 	callq	_Z13record_resultdPKc # Offset: 5812
    000016b9: 	movq	0xb0(%rsp), %rdi
    000016c1: 	cmpq	(%rsp), %rdi
    000016c5: 	je	.Ltmp1952 # Offset: 5829
    000016c7: 	movq	0xc0(%rsp), %rax
    000016cf: 	leaq	0x1(%rax), %rsi
    000016d3: 	callq	_ZdlPvm@PLT # Offset: 5843
.Ltmp1952:
    000016d8: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000016df: 	movq	%r15, %rsi
    000016e2: 	movq	%r12, %rdi
    000016e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5861
    000016ea: 	callq	clock@PLT # Offset: 5866
    000016ef: 	movl	iterations(%rip), %edx
    000016f5: 	movq	%rax, start_time(%rip)
    000016fc: 	testl	%edx, %edx
    000016fe: 	jle	.Ltmp1953 # Offset: 5886
    00001700: 	movq	0x1f0(%rsp,%r14), %rax
    00001708: 	xorl	%ebx, %ebx
    0000170a: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001711: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001719: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001721: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001729: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001731: 	imulq	$0x1f40, 0x100(%rsp,%rax,8), %rbp
    0000173d: 	nopl	(%rax) # Size: 3
.Ltmp1965:
    00001740: 	movslq	init_value(%rip), %rax
    00001747: 	imulq	$0x1f40, %rax, %rax
    0000174e: 	cmpq	%rbp, %rax
    00001751: 	jne	.Ltmp1954 # Offset: 5969
.Ltmp1953:
    00001757: 	movq	%r12, %rsi
    0000175a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001761: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5985
    00001766: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000176d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001774: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000177b: 	je	.Ltmp1955 # Offset: 6011
.Ltmp1982:
    00001781: 	movq	-0x20(%rax), %rbp
    00001785: 	callq	clock@PLT # Offset: 6021
    0000178a: 	pxor	%xmm0, %xmm0
    0000178e: 	movq	%rax, end_time(%rip)
    00001795: 	movq	%rbp, %rdi
    00001798: 	subq	start_time(%rip), %rax
    0000179f: 	cvtsi2sd	%rax, %xmm0
    000017a4: 	divsd	DATAat0x1c370(%rip), %xmm0
    000017ac: 	callq	_Z13record_resultdPKc # Offset: 6060
    000017b1: 	movq	0xb0(%rsp), %rdi
    000017b9: 	cmpq	(%rsp), %rdi
    000017bd: 	je	.Ltmp1956 # Offset: 6077
    000017bf: 	movq	0xc0(%rsp), %rax
    000017c7: 	leaq	0x1(%rax), %rsi
    000017cb: 	callq	_ZdlPvm@PLT # Offset: 6091
.Ltmp1956:
    000017d0: 	leaq	DATAat0x1c301(%rip), %rdx
    000017d7: 	movq	%r15, %rsi
    000017da: 	movq	%r12, %rdi
    000017dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6109
    000017e2: 	callq	clock@PLT # Offset: 6114
    000017e7: 	movq	%rax, start_time(%rip)
    000017ee: 	movl	iterations(%rip), %eax
    000017f4: 	testl	%eax, %eax
    000017f6: 	jle	.Ltmp1957 # Offset: 6134
    000017f8: 	movq	0x1f0(%rsp,%r14), %rax
    00001800: 	xorl	%ebx, %ebx
    00001802: 	leaq	DATAat0x1c1c8(%rip), %r13
    00001809: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001811: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001819: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001821: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001829: 	imulq	$0x1f40, 0x100(%rsp,%rax,8), %rbp
    00001835: 	nopl	(%rax) # Size: 3
.Ltmp1966:
    00001838: 	movslq	init_value(%rip), %rax
    0000183f: 	imulq	$0x1f40, %rax, %rax
    00001846: 	cmpq	%rbp, %rax
    00001849: 	jne	.Ltmp1958 # Offset: 6217
.Ltmp1957:
    0000184f: 	movq	%r12, %rsi
    00001852: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001859: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6233
    0000185e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001865: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000186c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001873: 	je	.Ltmp1959 # Offset: 6259
.Ltmp1998:
    00001879: 	movq	-0x20(%rax), %rbp
    0000187d: 	callq	clock@PLT # Offset: 6269
    00001882: 	pxor	%xmm0, %xmm0
    00001886: 	movq	%rax, end_time(%rip)
    0000188d: 	movq	%rbp, %rdi
    00001890: 	subq	start_time(%rip), %rax
    00001897: 	cvtsi2sd	%rax, %xmm0
    0000189c: 	divsd	DATAat0x1c370(%rip), %xmm0
    000018a4: 	callq	_Z13record_resultdPKc # Offset: 6308
    000018a9: 	movq	0xb0(%rsp), %rdi
    000018b1: 	cmpq	(%rsp), %rdi
    000018b5: 	je	.Ltmp1960 # Offset: 6325
    000018b7: 	movq	0xc0(%rsp), %rax
    000018bf: 	leaq	0x1(%rax), %rsi
    000018c3: 	callq	_ZdlPvm@PLT # Offset: 6339
.Ltmp1960:
    000018c8: 	leaq	DATAat0x1c31b(%rip), %rdx
    000018cf: 	movq	%r15, %rsi
    000018d2: 	movq	%r12, %rdi
    000018d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6357
    000018da: 	movl	iterations(%rip), %edx
    000018e0: 	xorl	%r8d, %r8d
    000018e3: 	xorl	%ecx, %ecx
    000018e5: 	movl	$0x1f40, %esi
    000018ea: 	movq	0xb0(%rsp), %rdi
    000018f2: 	callq	_Z9summarizePKciiii # Offset: 6386
    000018f7: 	movq	0xb0(%rsp), %rdi
    000018ff: 	cmpq	(%rsp), %rdi
    00001903: 	je	.Ltmp1961 # Offset: 6403
    00001905: 	movq	0xc0(%rsp), %rax
    0000190d: 	leaq	0x1(%rax), %rsi
    00001911: 	callq	_ZdlPvm@PLT # Offset: 6417
.Ltmp1961:
    00001916: 	movq	0x90(%rsp), %rdi
    0000191e: 	cmpq	0x28(%rsp), %rdi
    00001923: 	je	.Ltmp1962 # Offset: 6435
    00001925: 	movq	0xa0(%rsp), %rax
    0000192d: 	leaq	0x1(%rax), %rsi
    00001931: 	callq	_ZdlPvm@PLT # Offset: 6449
.Ltmp1962:
    00001936: 	movq	0xfdd8(%rsp), %rax
    0000193e: 	subq	%fs:0x28, %rax
    00001947: 	jne	.Ltmp1963 # Offset: 6471
    0000194d: 	addq	$0xfde8, %rsp
    00001954: 	popq	%rbx
    00001955: 	popq	%rbp
    00001956: 	popq	%r12
    00001958: 	popq	%r13
    0000195a: 	popq	%r14
    0000195c: 	popq	%r15
    0000195e: 	retq # Offset: 6494
.Ltmp1826:
    0000195f: 	leaq	0x48(%rsp), %rsi
    00001964: 	xorl	%edx, %edx
    00001966: 	movq	%r14, %rdi
    00001969: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6505
    0000196e: 	movq	%rax, (%r14)
    00001971: 	movq	%rax, %rdi
    00001974: 	movq	0x48(%rsp), %rax
    00001979: 	movq	%rax, 0x10(%r14)
.Ltmp2011:
    0000197d: 	movq	(%rsp), %rsi
    00001981: 	movq	%r13, %rdx
    00001984: 	callq	memcpy@PLT # Offset: 6532
    00001989: 	movq	0x48(%rsp), %r13
    0000198e: 	movq	(%r14), %rdi
    00001991: 	jmp	.Ltmp1964 # Offset: 6545
    00001996: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1954:
    000019a0: 	movq	0xb0(%rsp), %rdx
    000019a8: 	movq	%r13, %rsi
    000019ab: 	movl	$0x1, %edi
    000019b0: 	xorl	%eax, %eax
    000019b2: 	callq	__printf_chk@PLT # Offset: 6578
    000019b7: 	addl	$0x1, %ebx
    000019ba: 	cmpl	iterations(%rip), %ebx
    000019c0: 	jl	.Ltmp1965 # Offset: 6592
    000019c6: 	jmp	.Ltmp1953 # Offset: 6598
    000019cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1958:
    000019d0: 	movq	0xb0(%rsp), %rdx
    000019d8: 	movq	%r13, %rsi
    000019db: 	movl	$0x1, %edi
    000019e0: 	xorl	%eax, %eax
    000019e2: 	callq	__printf_chk@PLT # Offset: 6626
    000019e7: 	addl	$0x1, %ebx
    000019ea: 	cmpl	iterations(%rip), %ebx
    000019f0: 	jl	.Ltmp1966 # Offset: 6640
    000019f6: 	jmp	.Ltmp1957 # Offset: 6646
    000019fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1885:
    00001a00: 	movq	0xb0(%rsp), %rdx
    00001a08: 	movq	%r13, %rsi
    00001a0b: 	movl	$0x1, %edi
    00001a10: 	xorl	%eax, %eax
    00001a12: 	callq	__printf_chk@PLT # Offset: 6674
    00001a17: 	addl	$0x1, %ebp
    00001a1a: 	cmpl	iterations(%rip), %ebp
    00001a20: 	jl	.Ltmp1967 # Offset: 6688
    00001a26: 	jmp	.Ltmp1884 # Offset: 6694
    00001a2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1881:
    00001a30: 	movq	0xb0(%rsp), %rdx
    00001a38: 	movq	%r13, %rsi
    00001a3b: 	movl	$0x1, %edi
    00001a40: 	xorl	%eax, %eax
    00001a42: 	callq	__printf_chk@PLT # Offset: 6722
    00001a47: 	addl	$0x1, %ebp
    00001a4a: 	cmpl	%ebp, iterations(%rip)
    00001a50: 	jg	.Ltmp1968 # Offset: 6736
    00001a56: 	jmp	.Ltmp1880 # Offset: 6742
    00001a5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1945:
    00001a60: 	movq	0xb0(%rsp), %rdx
    00001a68: 	movq	%r13, %rsi
    00001a6b: 	movl	$0x1, %edi
    00001a70: 	xorl	%eax, %eax
    00001a72: 	callq	__printf_chk@PLT # Offset: 6770
    00001a77: 	addl	$0x1, %ebx
    00001a7a: 	cmpl	iterations(%rip), %ebx
    00001a80: 	jl	.Ltmp1969 # Offset: 6784
    00001a86: 	jmp	.Ltmp1944 # Offset: 6790
    00001a8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1926:
    00001a90: 	movq	0xb0(%rsp), %rdx
    00001a98: 	movq	%r13, %rsi
    00001a9b: 	movl	$0x1, %edi
    00001aa0: 	xorl	%eax, %eax
    00001aa2: 	callq	__printf_chk@PLT # Offset: 6818
    00001aa7: 	addl	$0x1, %ebp
    00001aaa: 	cmpl	iterations(%rip), %ebp
    00001ab0: 	jl	.Ltmp1970 # Offset: 6832
    00001ab6: 	jmp	.Ltmp1925 # Offset: 6838
    00001abb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1935:
    00001ac0: 	movq	0xb0(%rsp), %rdx
    00001ac8: 	movq	%r13, %rsi
    00001acb: 	movl	$0x1, %edi
    00001ad0: 	xorl	%eax, %eax
    00001ad2: 	callq	__printf_chk@PLT # Offset: 6866
    00001ad7: 	addl	$0x1, %ebp
    00001ada: 	cmpl	iterations(%rip), %ebp
    00001ae0: 	jl	.Ltmp1971 # Offset: 6880
    00001ae6: 	jmp	.Ltmp1934 # Offset: 6886
    00001aeb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1917:
    00001af0: 	movq	0xb0(%rsp), %rdx
    00001af8: 	movq	%r13, %rsi
    00001afb: 	movl	$0x1, %edi
    00001b00: 	xorl	%eax, %eax
    00001b02: 	callq	__printf_chk@PLT # Offset: 6914
    00001b07: 	addl	$0x1, %ebp
    00001b0a: 	cmpl	iterations(%rip), %ebp
    00001b10: 	jl	.Ltmp1972 # Offset: 6928
    00001b16: 	jmp	.Ltmp1916 # Offset: 6934
    00001b1b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1908:
    00001b20: 	movq	0xb0(%rsp), %rdx
    00001b28: 	movq	%r13, %rsi
    00001b2b: 	movl	$0x1, %edi
    00001b30: 	xorl	%eax, %eax
    00001b32: 	callq	__printf_chk@PLT # Offset: 6962
    00001b37: 	addl	$0x1, %ebp
    00001b3a: 	cmpl	iterations(%rip), %ebp
    00001b40: 	jl	.Ltmp1973 # Offset: 6976
    00001b46: 	jmp	.Ltmp1907 # Offset: 6982
    00001b4b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1904:
    00001b50: 	movq	0xb0(%rsp), %rdx
    00001b58: 	movq	%r13, %rsi
    00001b5b: 	movl	$0x1, %edi
    00001b60: 	xorl	%eax, %eax
    00001b62: 	callq	__printf_chk@PLT # Offset: 7010
    00001b67: 	addl	$0x1, %ebp
    00001b6a: 	cmpl	iterations(%rip), %ebp
    00001b70: 	jl	.Ltmp1974 # Offset: 7024
    00001b76: 	jmp	.Ltmp1903 # Offset: 7030
    00001b7b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1894:
    00001b80: 	movq	0xb0(%rsp), %rdx
    00001b88: 	movq	%r13, %rsi
    00001b8b: 	movl	$0x1, %edi
    00001b90: 	xorl	%eax, %eax
    00001b92: 	callq	__printf_chk@PLT # Offset: 7058
    00001b97: 	addl	$0x1, %ebp
    00001b9a: 	cmpl	iterations(%rip), %ebp
    00001ba0: 	jl	.Ltmp1975 # Offset: 7072
    00001ba6: 	jmp	.Ltmp1893 # Offset: 7078
    00001bab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1900:
    00001bb0: 	movq	-0x8(%rdx), %rax
    00001bb4: 	addq	$0x200, %rax
    00001bba: 	jmp	.Ltmp1976 # Offset: 7098
.Ltmp1905:
    00001bbf: 	movq	-0x8(%rdx), %rax
    00001bc3: 	addq	$0x200, %rax
    00001bc9: 	jmp	.Ltmp1977 # Offset: 7113
.Ltmp1891:
    00001bce: 	movq	-0x8(%rdx), %rax
    00001bd2: 	addq	$0x200, %rax
    00001bd8: 	jmp	.Ltmp1978 # Offset: 7128
.Ltmp1895:
    00001bdd: 	movq	%r12, %rsi
    00001be0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001be7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7143
    00001bec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bf3: 	jmp	.Ltmp1979 # Offset: 7155
.Ltmp1951:
    00001bf8: 	movq	-0x8(%rdx), %rax
    00001bfc: 	addq	$0x200, %rax
    00001c02: 	jmp	.Ltmp1980 # Offset: 7170
.Ltmp1878:
    00001c07: 	movq	-0x8(%rdx), %rax
    00001c0b: 	addq	$0x200, %rax
    00001c11: 	jmp	.Ltmp1981 # Offset: 7185
.Ltmp1955:
    00001c16: 	movq	-0x8(%rdx), %rax
    00001c1a: 	addq	$0x200, %rax
    00001c20: 	jmp	.Ltmp1982 # Offset: 7200
.Ltmp1886:
    00001c25: 	movq	%r12, %rsi
    00001c28: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c2f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7215
    00001c34: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c3b: 	jmp	.Ltmp1983 # Offset: 7227
.Ltmp1873:
    00001c40: 	movq	%r12, %rsi
    00001c43: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c4a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7242
    00001c4f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c56: 	jmp	.Ltmp1984 # Offset: 7254
.Ltmp1867:
    00001c5b: 	movq	-0x8(%rdx), %rax
    00001c5f: 	addq	$0x200, %rax
    00001c65: 	jmp	.Ltmp1985 # Offset: 7269
.Ltmp1862:
    00001c6a: 	movq	%r12, %rsi
    00001c6d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c74: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7284
    00001c79: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c80: 	jmp	.Ltmp1986 # Offset: 7296
.Ltmp1856:
    00001c85: 	movq	-0x8(%rdx), %rax
    00001c89: 	addq	$0x200, %rax
    00001c8f: 	jmp	.Ltmp1987 # Offset: 7311
.Ltmp1851:
    00001c94: 	movq	%r12, %rsi
    00001c97: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c9e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7326
    00001ca3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001caa: 	jmp	.Ltmp1988 # Offset: 7338
.Ltmp1845:
    00001caf: 	movq	-0x8(%rdx), %rax
    00001cb3: 	addq	$0x200, %rax
    00001cb9: 	jmp	.Ltmp1989 # Offset: 7353
.Ltmp1839:
    00001cbe: 	movq	-0x8(%rdx), %rax
    00001cc2: 	addq	$0x200, %rax
    00001cc8: 	jmp	.Ltmp1990 # Offset: 7368
.Ltmp1834:
    00001ccd: 	movq	%r12, %rsi
    00001cd0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cd7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7383
    00001cdc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ce3: 	jmp	.Ltmp1991 # Offset: 7395
.Ltmp1828:
    00001ce8: 	movq	-0x8(%rdx), %rax
    00001cec: 	addq	$0x200, %rax
    00001cf2: 	jmp	.Ltmp1992 # Offset: 7410
.Ltmp1914:
    00001cf7: 	movq	-0x8(%rdx), %rax
    00001cfb: 	addq	$0x200, %rax
    00001d01: 	jmp	.Ltmp1993 # Offset: 7425
.Ltmp1909:
    00001d06: 	movq	%r12, %rsi
    00001d09: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d10: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7440
    00001d15: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d1c: 	jmp	.Ltmp1994 # Offset: 7452
.Ltmp1923:
    00001d21: 	movq	-0x8(%rdx), %rax
    00001d25: 	addq	$0x200, %rax
    00001d2b: 	jmp	.Ltmp1995 # Offset: 7467
.Ltmp1918:
    00001d30: 	movq	%r12, %rsi
    00001d33: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d3a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7482
    00001d3f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d46: 	jmp	.Ltmp1996 # Offset: 7494
.Ltmp1927:
    00001d4b: 	movq	%r12, %rsi
    00001d4e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d55: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7509
    00001d5a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d61: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d68: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d6f: 	jne	.Ltmp1997 # Offset: 7535
.Ltmp1932:
    00001d75: 	movq	-0x8(%rdx), %rax
    00001d79: 	addq	$0x200, %rax
    00001d7f: 	jmp	.Ltmp1997 # Offset: 7551
.Ltmp1959:
    00001d84: 	movq	-0x8(%rdx), %rax
    00001d88: 	addq	$0x200, %rax
    00001d8e: 	jmp	.Ltmp1998 # Offset: 7566
.Ltmp1823:
    00001d93: 	movq	%r12, %rsi
    00001d96: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d9d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7581
    00001da2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001da9: 	jmp	.Ltmp1999 # Offset: 7593
.Ltmp1882:
    00001dae: 	movq	-0x8(%rdx), %rax
    00001db2: 	addq	$0x200, %rax
    00001db8: 	jmp	.Ltmp2000 # Offset: 7608
.Ltmp1946:
    00001dbd: 	movq	%r12, %rsi
    00001dc0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dc7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7623
    00001dcc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dd3: 	jmp	.Ltmp2001 # Offset: 7635
.Ltmp1941:
    00001dd8: 	movq	-0x8(%rdx), %rax
    00001ddc: 	addq	$0x200, %rax
    00001de2: 	jmp	.Ltmp2002 # Offset: 7650
.Ltmp1936:
    00001de7: 	movq	%r12, %rsi
    00001dea: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001df1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7665
    00001df6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dfd: 	jmp	.Ltmp2003 # Offset: 7677
.Ltmp1950:
    00001e02: 	testq	%r13, %r13
    00001e05: 	je	.Ltmp2004 # Offset: 7685
    00001e0b: 	jmp	.Ltmp2005 # Offset: 7691
.Ltmp1940:
    00001e10: 	testq	%r13, %r13
    00001e13: 	je	.Ltmp2006 # Offset: 7699
    00001e19: 	jmp	.Ltmp2007 # Offset: 7705
    00001e1e: 	nop # Size: 2
.Ltmp1931:
    00001e20: 	testq	%rbp, %rbp
    00001e23: 	je	.Ltmp2008 # Offset: 7715
.Ltmp2026:
    00001e29: 	movq	0x20(%rsp), %rsi
    00001e2e: 	movq	%rbp, %rdx
    00001e31: 	callq	memcpy@PLT # Offset: 7729
    00001e36: 	movq	0x48(%rsp), %rbp
    00001e3b: 	movq	(%r13), %rdi
    00001e3f: 	jmp	.Ltmp2008 # Offset: 7743
.Ltmp1913:
    00001e44: 	testq	%r13, %r13
    00001e47: 	je	.Ltmp2009 # Offset: 7751
    00001e4d: 	jmp	.Ltmp2010 # Offset: 7757
    00001e52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1827:
    00001e58: 	testq	%r13, %r13
    00001e5b: 	je	.Ltmp1964 # Offset: 7771
    00001e61: 	jmp	.Ltmp2011 # Offset: 7777
    00001e66: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1855:
    00001e70: 	testq	%r13, %r13
    00001e73: 	je	.Ltmp2012 # Offset: 7795
.Ltmp2023:
    00001e79: 	movq	0x38(%rsp), %rsi
    00001e7e: 	movq	%r13, %rdx
    00001e81: 	callq	memcpy@PLT # Offset: 7809
    00001e86: 	movq	0x48(%rsp), %r13
    00001e8b: 	movq	(%r14), %rdi
    00001e8e: 	jmp	.Ltmp2012 # Offset: 7822
.Ltmp1838:
    00001e93: 	testq	%r13, %r13
    00001e96: 	je	.Ltmp2013 # Offset: 7830
    00001e9c: 	jmp	.Ltmp2014 # Offset: 7836
    00001ea1: 	nopl	(%rax) # Size: 7
.Ltmp1922:
    00001ea8: 	testq	%rbp, %rbp
    00001eab: 	je	.Ltmp2015 # Offset: 7851
    00001eb1: 	jmp	.Ltmp2016 # Offset: 7857
    00001eb6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1866:
    00001ec0: 	testq	%r13, %r13
    00001ec3: 	je	.Ltmp2017 # Offset: 7875
    00001ec9: 	jmp	.Ltmp2018 # Offset: 7881
    00001ecb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1899:
    00001ed0: 	testq	%r13, %r13
    00001ed3: 	je	.Ltmp2019 # Offset: 7891
    00001ed9: 	jmp	.Ltmp2020 # Offset: 7897
    00001ede: 	nop # Size: 2
.Ltmp1890:
    00001ee0: 	testq	%r13, %r13
    00001ee3: 	je	.Ltmp2021 # Offset: 7907
.Ltmp2025:
    00001ee9: 	movq	%r13, %rdx
    00001eec: 	movq	%r14, %rsi
    00001eef: 	callq	memcpy@PLT # Offset: 7919
    00001ef4: 	movq	0x48(%rsp), %r13
    00001ef9: 	movq	(%rbp), %rdi
    00001efd: 	jmp	.Ltmp2021 # Offset: 7933
.Ltmp1877:
    00001f02: 	testq	%r13, %r13
    00001f05: 	je	.Ltmp2022 # Offset: 7941
.Ltmp2024:
    00001f0b: 	movq	%r13, %rdx
    00001f0e: 	movq	%rbp, %rsi
    00001f11: 	callq	memcpy@PLT # Offset: 7953
    00001f16: 	movq	0x48(%rsp), %r13
    00001f1b: 	movq	(%rbx), %rdi
    00001f1e: 	jmp	.Ltmp2022 # Offset: 7966
.Ltmp1865:
    00001f23: 	leaq	0x48(%rsp), %rsi
    00001f28: 	xorl	%edx, %edx
    00001f2a: 	movq	%r14, %rdi
    00001f2d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7981
    00001f32: 	movq	%rax, (%r14)
    00001f35: 	movq	%rax, %rdi
    00001f38: 	movq	0x48(%rsp), %rax
    00001f3d: 	movq	%rax, 0x10(%r14)
.Ltmp2018:
    00001f41: 	movq	0x38(%rsp), %rsi
    00001f46: 	movq	%r13, %rdx
    00001f49: 	callq	memcpy@PLT # Offset: 8009
    00001f4e: 	movq	0x48(%rsp), %r13
    00001f53: 	movq	(%r14), %rdi
    00001f56: 	jmp	.Ltmp2017 # Offset: 8022
.Ltmp1837:
    00001f5b: 	leaq	0x48(%rsp), %rsi
    00001f60: 	xorl	%edx, %edx
    00001f62: 	movq	%r14, %rdi
    00001f65: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8037
    00001f6a: 	movq	%rax, (%r14)
    00001f6d: 	movq	%rax, %rdi
    00001f70: 	movq	0x48(%rsp), %rax
    00001f75: 	movq	%rax, 0x10(%r14)
.Ltmp2014:
    00001f79: 	movq	0x38(%rsp), %rsi
    00001f7e: 	movq	%r13, %rdx
    00001f81: 	callq	memcpy@PLT # Offset: 8065
    00001f86: 	movq	0x48(%rsp), %r13
    00001f8b: 	movq	(%r14), %rdi
    00001f8e: 	jmp	.Ltmp2013 # Offset: 8078
.Ltmp1912:
    00001f93: 	leaq	0x48(%rsp), %rsi
    00001f98: 	xorl	%edx, %edx
    00001f9a: 	movq	%rbx, %rdi
    00001f9d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8093
    00001fa2: 	movq	%rax, (%rbx)
    00001fa5: 	movq	%rax, %rdi
    00001fa8: 	movq	0x48(%rsp), %rax
    00001fad: 	movq	%rax, 0x10(%rbx)
.Ltmp2010:
    00001fb1: 	movq	%r13, %rdx
    00001fb4: 	movq	%rbp, %rsi
    00001fb7: 	callq	memcpy@PLT # Offset: 8119
    00001fbc: 	movq	0x48(%rsp), %r13
    00001fc1: 	movq	(%rbx), %rdi
    00001fc4: 	jmp	.Ltmp2009 # Offset: 8132
.Ltmp1854:
    00001fc9: 	leaq	0x48(%rsp), %rsi
    00001fce: 	xorl	%edx, %edx
    00001fd0: 	movq	%r14, %rdi
    00001fd3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8147
    00001fd8: 	movq	%rax, (%r14)
    00001fdb: 	movq	%rax, %rdi
    00001fde: 	movq	0x48(%rsp), %rax
    00001fe3: 	movq	%rax, 0x10(%r14)
    00001fe7: 	jmp	.Ltmp2023 # Offset: 8167
.Ltmp1898:
    00001fec: 	leaq	0x48(%rsp), %rsi
    00001ff1: 	xorl	%edx, %edx
    00001ff3: 	movq	%rbp, %rdi
    00001ff6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8182
    00001ffb: 	movq	%rax, (%rbp)
    00001fff: 	movq	%rax, %rdi
    00002002: 	movq	0x48(%rsp), %rax
    00002007: 	movq	%rax, 0x10(%rbp)
.Ltmp2020:
    0000200b: 	movq	%r13, %rdx
    0000200e: 	movq	%r14, %rsi
    00002011: 	callq	memcpy@PLT # Offset: 8209
    00002016: 	movq	0x48(%rsp), %r13
    0000201b: 	movq	(%rbp), %rdi
    0000201f: 	jmp	.Ltmp2019 # Offset: 8223
.Ltmp1939:
    00002024: 	leaq	0x48(%rsp), %rsi
    00002029: 	xorl	%edx, %edx
    0000202b: 	movq	%rbx, %rdi
    0000202e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8238
    00002033: 	movq	%rax, (%rbx)
    00002036: 	movq	%rax, %rdi
    00002039: 	movq	0x48(%rsp), %rax
    0000203e: 	movq	%rax, 0x10(%rbx)
.Ltmp2007:
    00002042: 	movq	%r13, %rdx
    00002045: 	movq	%rbp, %rsi
    00002048: 	callq	memcpy@PLT # Offset: 8264
    0000204d: 	movq	0x48(%rsp), %r13
    00002052: 	movq	(%rbx), %rdi
    00002055: 	jmp	.Ltmp2006 # Offset: 8277
.Ltmp1949:
    0000205a: 	leaq	0x48(%rsp), %rsi
    0000205f: 	xorl	%edx, %edx
    00002061: 	movq	%rbx, %rdi
    00002064: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8292
    00002069: 	movq	%rax, (%rbx)
    0000206c: 	movq	%rax, %rdi
    0000206f: 	movq	0x48(%rsp), %rax
    00002074: 	movq	%rax, 0x10(%rbx)
.Ltmp2005:
    00002078: 	movq	%r13, %rdx
    0000207b: 	movq	%rbp, %rsi
    0000207e: 	callq	memcpy@PLT # Offset: 8318
    00002083: 	movq	0x48(%rsp), %r13
    00002088: 	movq	(%rbx), %rdi
    0000208b: 	jmp	.Ltmp2004 # Offset: 8331
.Ltmp1921:
    00002090: 	leaq	0x48(%rsp), %rsi
    00002095: 	xorl	%edx, %edx
    00002097: 	movq	%r13, %rdi
    0000209a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8346
    0000209f: 	movq	%rax, (%r13)
    000020a3: 	movq	%rax, %rdi
    000020a6: 	movq	0x48(%rsp), %rax
    000020ab: 	movq	%rax, 0x10(%r13)
.Ltmp2016:
    000020af: 	movq	0x20(%rsp), %rsi
    000020b4: 	movq	%rbp, %rdx
    000020b7: 	callq	memcpy@PLT # Offset: 8375
    000020bc: 	movq	0x48(%rsp), %rbp
    000020c1: 	movq	(%r13), %rdi
    000020c5: 	jmp	.Ltmp2015 # Offset: 8389
.Ltmp1876:
    000020ca: 	leaq	0x48(%rsp), %rsi
    000020cf: 	xorl	%edx, %edx
    000020d1: 	movq	%rbx, %rdi
    000020d4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8404
    000020d9: 	movq	%rax, (%rbx)
    000020dc: 	movq	%rax, %rdi
    000020df: 	movq	0x48(%rsp), %rax
    000020e4: 	movq	%rax, 0x10(%rbx)
    000020e8: 	jmp	.Ltmp2024 # Offset: 8424
.Ltmp1889:
    000020ed: 	leaq	0x48(%rsp), %rsi
    000020f2: 	xorl	%edx, %edx
    000020f4: 	movq	%rbp, %rdi
    000020f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8439
    000020fc: 	movq	%rax, (%rbp)
    00002100: 	movq	%rax, %rdi
    00002103: 	movq	0x48(%rsp), %rax
    00002108: 	movq	%rax, 0x10(%rbp)
    0000210c: 	jmp	.Ltmp2025 # Offset: 8460
.Ltmp1930:
    00002111: 	leaq	0x48(%rsp), %rsi
    00002116: 	xorl	%edx, %edx
    00002118: 	movq	%r13, %rdi
    0000211b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8475
    00002120: 	movq	%rax, (%r13)
    00002124: 	movq	%rax, %rdi
    00002127: 	movq	0x48(%rsp), %rax
    0000212c: 	movq	%rax, 0x10(%r13)
    00002130: 	jmp	.Ltmp2026 # Offset: 8496
.Ltmp1836:
    00002135: 	leaq	DATAat0x1c158(%rip), %rdi
    0000213c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8508
.Ltmp1853:
    00002141: 	leaq	DATAat0x1c158(%rip), %rdi
    00002148: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8520
.Ltmp1864:
    0000214d: 	leaq	DATAat0x1c158(%rip), %rdi
    00002154: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8532
.Ltmp1875:
    00002159: 	leaq	DATAat0x1c158(%rip), %rdi
    00002160: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8544
.Ltmp1888:
    00002165: 	leaq	DATAat0x1c158(%rip), %rdi
    0000216c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8556
.Ltmp1897:
    00002171: 	leaq	DATAat0x1c158(%rip), %rdi
    00002178: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8568
.Ltmp1911:
    0000217d: 	leaq	DATAat0x1c158(%rip), %rdi
    00002184: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8580
.Ltmp1920:
    00002189: 	leaq	DATAat0x1c158(%rip), %rdi
    00002190: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8592
.Ltmp1929:
    00002195: 	leaq	DATAat0x1c158(%rip), %rdi
    0000219c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8604
.Ltmp1938:
    000021a1: 	leaq	DATAat0x1c158(%rip), %rdi
    000021a8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8616
.Ltmp1948:
    000021ad: 	leaq	DATAat0x1c158(%rip), %rdi
    000021b4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8628
.Ltmp1963:
    000021b9: 	callq	__stack_chk_fail@PLT # Offset: 8633
.Ltmp1825:
    000021be: 	leaq	DATAat0x1c158(%rip), %rdi
    000021c5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8645
    000021ca: 	endbr64
.Ltmp2028:
    000021ce: 	movq	%rax, %rbp
    000021d1: 	jmp	.Ltmp2027 # Offset: 8657
    000021d6: 	endbr64
    000021da: 	jmp	.Ltmp2028 # Offset: 8666
    000021dc: 	endbr64
    000021e0: 	jmp	.Ltmp2028 # Offset: 8672
    000021e2: 	endbr64
    000021e6: 	jmp	.Ltmp2028 # Offset: 8678
    000021e8: 	endbr64
    000021ec: 	jmp	.Ltmp2028 # Offset: 8684
    000021ee: 	endbr64
    000021f2: 	jmp	.Ltmp2028 # Offset: 8690
    000021f4: 	endbr64
    000021f8: 	jmp	.Ltmp2028 # Offset: 8696
    000021fa: 	endbr64
    000021fe: 	movq	%rax, %rbp
    00002201: 	jmp	.Ltmp2029 # Offset: 8705
    00002203: 	endbr64
    00002207: 	movq	%rax, %rbp
    0000220a: 	jmp	.Ltmp2030 # Offset: 8714
    0000220c: 	endbr64
    00002210: 	jmp	.Ltmp2028 # Offset: 8720
.Ltmp2029:
    00002212: 	movq	0xb0(%rsp), %rdi
    0000221a: 	leaq	0xc0(%rsp), %rax
    00002222: 	cmpq	%rax, %rdi
    00002225: 	je	.Ltmp2030 # Offset: 8741
.Ltmp2032:
    00002227: 	movq	0xc0(%rsp), %rax
    0000222f: 	leaq	0x1(%rax), %rsi
    00002233: 	callq	_ZdlPvm@PLT # Offset: 8755
.Ltmp2030:
    00002238: 	movq	0x90(%rsp), %rdi
    00002240: 	cmpq	0x28(%rsp), %rdi
    00002245: 	je	.Ltmp2031 # Offset: 8773
    00002247: 	movq	0xa0(%rsp), %rax
    0000224f: 	leaq	0x1(%rax), %rsi
    00002253: 	callq	_ZdlPvm@PLT # Offset: 8787
.Ltmp2031:
    00002258: 	movq	%rbp, %rdi
    0000225b: 	callq	_Unwind_Resume@PLT # Offset: 8795
    00002260: 	endbr64
    00002264: 	jmp	.Ltmp2028 # Offset: 8804
    00002269: 	endbr64
    0000226d: 	jmp	.Ltmp2028 # Offset: 8813
    00002272: 	endbr64
    00002276: 	jmp	.Ltmp2028 # Offset: 8822
    0000227b: 	endbr64
    0000227f: 	jmp	.Ltmp2028 # Offset: 8831
    00002284: 	endbr64
    00002288: 	jmp	.Ltmp2028 # Offset: 8840
    0000228d: 	endbr64
    00002291: 	jmp	.Ltmp2028 # Offset: 8849
    00002296: 	endbr64
    0000229a: 	jmp	.Ltmp2028 # Offset: 8858
    0000229f: 	endbr64
    000022a3: 	jmp	.Ltmp2028 # Offset: 8867
    000022a8: 	endbr64
    000022ac: 	jmp	.Ltmp2028 # Offset: 8876
    000022b1: 	endbr64
    000022b5: 	jmp	.Ltmp2028 # Offset: 8885
    000022ba: 	endbr64
    000022be: 	jmp	.Ltmp2028 # Offset: 8894
.Ltmp2027:
    000022c3: 	movq	0xb0(%rsp), %rdi
    000022cb: 	cmpq	(%rsp), %rdi
    000022cf: 	jne	.Ltmp2032 # Offset: 8911
    000022d5: 	jmp	.Ltmp2030 # Offset: 8917
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeImEvT_"

Binary Function "_Z11TestOneTypeIiEvT_" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x17410
  Size        : 0x22d8
  MaxSize     : 0x22e0
  Offset      : 0x17410
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x8000(%rsp), %r11
.Ltmp2033:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2033 # Offset: 37
    00000027: 	subq	$0x78, %rsp
    0000002b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm4
    00000033: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm5
    0000003b: 	movq	%fs:0x28, %rax
    00000044: 	movq	%rax, 0x8068(%rsp)
    0000004c: 	xorl	%eax, %eax
    0000004e: 	movl	%edi, %r13d
    00000051: 	leaq	0x180(%rsp), %rax
    00000059: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000060: 	movq	%rax, %xmm0
    00000065: 	leaq	0x100(%rsp), %rax
    0000006d: 	movl	$0x33746e69, 0xa0(%rsp)
    00000078: 	leaq	0x360(%rsp), %rbp
    00000080: 	movq	%rax, %xmm2
    00000085: 	leaq	0x270(%rsp), %rax
    0000008d: 	movb	$0x74, 0xa6(%rsp)
    00000095: 	leaq	0x8060(%rsp), %rbx
    0000009d: 	movq	%rax, %xmm1
    000000a2: 	leaq	0xa0(%rsp), %rax
    000000aa: 	punpcklqdq	%xmm0, %xmm2
    000000ae: 	movq	$0x7, 0x98(%rsp)
    000000ba: 	movq	%rax, 0x28(%rsp)
    000000bf: 	punpcklqdq	%xmm0, %xmm1
    000000c3: 	movq	%rax, 0x90(%rsp)
    000000cb: 	movl	$0x5f32, %eax
    000000d0: 	movw	%ax, 0xa4(%rsp)
    000000d8: 	leaq	0x70(%rsp), %rax
    000000dd: 	movq	%rax, %rsi
    000000e0: 	movq	%rax, 0x30(%rsp)
    000000e5: 	movaps	%xmm2, 0x10(%rsp)
    000000ea: 	movaps	%xmm1, (%rsp)
    000000ee: 	movb	$0x0, 0xa7(%rsp)
    000000f6: 	movaps	%xmm4, 0x70(%rsp)
    000000fb: 	movaps	%xmm5, 0x80(%rsp)
    00000103: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 259
    00000108: 	movl	init_value(%rip), %r12d
    0000010f: 	movdqa	(%rsp), %xmm1
    00000114: 	movq	%rbp, %rax
    00000117: 	movdqa	0x10(%rsp), %xmm2
    0000011d: 	movd	%r12d, %xmm6
    00000122: 	pshufd	$0x0, %xmm6, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2034:
    00000130: 	movaps	%xmm0, (%rax)
    00000133: 	addq	$0x10, %rax
    00000137: 	cmpq	%rax, %rbx
    0000013a: 	jne	.Ltmp2034 # Offset: 314
    0000013c: 	leaq	0x50(%rsp), %rax
    00000141: 	movslq	%r13d, %rsi
    00000144: 	leal	0x2(%r13), %edi
    00000148: 	movl	%r12d, 0x44(%rsp)
    0000014d: 	movq	%rax, 0x78(%rsp)
    00000152: 	leaq	0x60(%rsp), %rax
    00000157: 	movabsq	$-0x7777777777777777, %rcx
    00000161: 	movd	%r12d, %xmm3
    00000166: 	movq	%rax, 0x58(%rsp)
    0000016b: 	leaq	0x44(%rsp), %rax
    00000170: 	movq	%rax, 0x68(%rsp)
    00000175: 	movq	%rsi, %rax
    00000178: 	mulq	%rcx
    0000017b: 	movaps	%xmm0, 0x100(%rsp)
    00000183: 	movaps	%xmm0, 0x110(%rsp)
    0000018b: 	movaps	%xmm0, 0x120(%rsp)
    00000193: 	movq	%rdx, %rax
    00000196: 	andq	$-0x10, %rdx
    0000019a: 	movaps	%xmm0, 0x130(%rsp)
    000001a2: 	shrq	$0x4, %rax
    000001a6: 	movaps	%xmm0, 0x140(%rsp)
    000001ae: 	subq	%rax, %rdx
    000001b1: 	movaps	%xmm0, 0x150(%rsp)
    000001b9: 	leaq	(%rdx,%rdx), %rax
    000001bd: 	movaps	%xmm0, 0x160(%rsp)
    000001c5: 	pshufd	$0xe0, %xmm3, %xmm0
    000001ca: 	movq	%xmm0, 0x170(%rsp)
    000001d3: 	subq	%rax, %rsi
    000001d6: 	movq	%rsi, 0x20(%rsp)
    000001db: 	movslq	%edi, %rsi
    000001de: 	movq	%rsi, %rax
    000001e1: 	mulq	%rcx
    000001e4: 	movq	%rdx, %rax
    000001e7: 	andq	$-0x10, %rdx
    000001eb: 	shrq	$0x4, %rax
    000001ef: 	subq	%rax, %rdx
    000001f2: 	movq	%rsi, %rax
    000001f5: 	addq	%rdx, %rdx
    000001f8: 	subq	%rdx, %rax
    000001fb: 	movq	%rax, %xmm0
    00000200: 	leal	(%r13,%r13), %eax
    00000205: 	cltd
    00000206: 	punpcklqdq	%xmm0, %xmm0
    0000020a: 	idivl	%edi
    0000020c: 	movaps	%xmm0, 0x180(%rsp)
    00000214: 	movaps	%xmm0, 0x190(%rsp)
    0000021c: 	movaps	%xmm0, 0x1a0(%rsp)
    00000224: 	movaps	%xmm0, 0x1b0(%rsp)
    0000022c: 	movaps	%xmm0, 0x1c0(%rsp)
    00000234: 	movaps	%xmm0, 0x1d0(%rsp)
    0000023c: 	movaps	%xmm0, 0x1e0(%rsp)
    00000244: 	movaps	%xmm0, 0x1f0(%rsp)
    0000024c: 	movaps	%xmm0, 0x200(%rsp)
    00000254: 	movaps	%xmm0, 0x210(%rsp)
    0000025c: 	movaps	%xmm0, 0x220(%rsp)
    00000264: 	movaps	%xmm0, 0x230(%rsp)
    0000026c: 	movaps	%xmm0, 0x240(%rsp)
    00000274: 	movaps	%xmm0, 0x250(%rsp)
    0000027c: 	movaps	%xmm0, 0x260(%rsp)
    00000284: 	addl	%r13d, %eax
    00000287: 	leaq	0xb0(%rsp), %r13
    0000028f: 	movslq	%eax, %rsi
    00000292: 	movq	%r13, %rdi
    00000295: 	movq	%rsi, %rax
    00000298: 	mulq	%rcx
    0000029b: 	movq	%rdx, %rax
    0000029e: 	andq	$-0x10, %rdx
    000002a2: 	shrq	$0x4, %rax
    000002a6: 	subq	%rax, %rdx
    000002a9: 	movq	%rsi, %rax
    000002ac: 	addq	%rdx, %rdx
    000002af: 	subq	%rdx, %rax
    000002b2: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002b9: 	movq	%rax, %xmm0
    000002be: 	leaq	0x90(%rsp), %rax
    000002c6: 	punpcklqdq	%xmm0, %xmm0
    000002ca: 	movq	%rax, %rsi
    000002cd: 	movaps	%xmm0, 0x270(%rsp)
    000002d5: 	movaps	%xmm0, 0x280(%rsp)
    000002dd: 	movaps	%xmm0, 0x290(%rsp)
    000002e5: 	movaps	%xmm0, 0x2a0(%rsp)
    000002ed: 	movaps	%xmm0, 0x2b0(%rsp)
    000002f5: 	movq	%rax, 0x10(%rsp)
    000002fa: 	movaps	%xmm0, 0x2c0(%rsp)
    00000302: 	movaps	%xmm0, 0x2d0(%rsp)
    0000030a: 	movaps	%xmm0, 0x2e0(%rsp)
    00000312: 	movaps	%xmm0, 0x2f0(%rsp)
    0000031a: 	movaps	%xmm0, 0x300(%rsp)
    00000322: 	movaps	%xmm0, 0x310(%rsp)
    0000032a: 	movaps	%xmm0, 0x320(%rsp)
    00000332: 	movaps	%xmm0, 0x330(%rsp)
    0000033a: 	movaps	%xmm0, 0x340(%rsp)
    00000342: 	movaps	%xmm0, 0x350(%rsp)
    0000034a: 	movaps	%xmm2, 0xd0(%rsp)
    00000352: 	movaps	%xmm1, 0xe0(%rsp)
    0000035a: 	movaps	%xmm1, 0xf0(%rsp)
    00000362: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 866
    00000367: 	callq	clock@PLT # Offset: 871
    0000036c: 	movl	iterations(%rip), %ecx
    00000372: 	xorl	%r14d, %r14d
    00000375: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000037c: 	movq	%rax, start_time(%rip)
    00000383: 	testl	%ecx, %ecx
    00000385: 	jle	.Ltmp2035 # Offset: 901
    00000387: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2038:
    00000390: 	movq	%rbp, %rax
    00000393: 	pxor	%xmm0, %xmm0
    00000397: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2036:
    000003a0: 	paddd	(%rax), %xmm0
    000003a4: 	addq	$0x10, %rax
    000003a8: 	cmpq	%rbx, %rax
    000003ab: 	jne	.Ltmp2036 # Offset: 939
    000003ad: 	imull	$0x1f40, init_value(%rip), %edx
    000003b7: 	movdqa	%xmm0, %xmm1
    000003bb: 	psrldq	$0x8, %xmm1
    000003c0: 	paddd	%xmm1, %xmm0
    000003c4: 	movdqa	%xmm0, %xmm1
    000003c8: 	psrldq	$0x4, %xmm1
    000003cd: 	paddd	%xmm1, %xmm0
    000003d1: 	movd	%xmm0, %eax
    000003d5: 	cmpl	%eax, %edx
    000003d7: 	je	.Ltmp2037 # Offset: 983
    000003d9: 	movq	0xb0(%rsp), %rdx
    000003e1: 	movq	%r15, %rsi
    000003e4: 	movl	$0x1, %edi
    000003e9: 	xorl	%eax, %eax
    000003eb: 	callq	__printf_chk@PLT # Offset: 1003
    000003f0: 	movl	iterations(%rip), %ecx
.Ltmp2037:
    000003f6: 	addl	$0x1, %r14d
    000003fa: 	cmpl	%ecx, %r14d
    000003fd: 	jl	.Ltmp2038 # Offset: 1021
.Ltmp2035:
    000003ff: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000406: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    0000040d: 	subq	$0x20, %rax
    00000411: 	cmpq	%rax, %r15
    00000414: 	je	.Ltmp2039 # Offset: 1044
    0000041a: 	leaq	0x10(%r15), %rdi
    0000041e: 	movq	0xb8(%rsp), %r14
    00000426: 	movq	%rdi, (%r15)
    00000429: 	movq	0xb0(%rsp), %rax
    00000431: 	movq	%rax, %rsi
    00000434: 	movq	%rax, (%rsp)
    00000438: 	addq	%r14, %rsi
    0000043b: 	je	.Ltmp2040 # Offset: 1083
    0000043d: 	testq	%rax, %rax
    00000440: 	je	.Ltmp2041 # Offset: 1088
.Ltmp2040:
    00000446: 	movq	%r14, 0x48(%rsp)
    0000044b: 	cmpq	$0xf, %r14
    0000044f: 	ja	.Ltmp2042 # Offset: 1103
    00000455: 	cmpq	$0x1, %r14
    00000459: 	jne	.Ltmp2043 # Offset: 1113
    0000045f: 	movq	(%rsp), %rax
    00000463: 	movzbl	(%rax), %eax
    00000466: 	movb	%al, 0x10(%r15)
.Ltmp2180:
    0000046a: 	movq	%r14, 0x8(%r15)
    0000046e: 	movb	$0x0, (%rdi,%r14)
    00000473: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000047a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000481: 	addq	$0x20, %rax
    00000485: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000048c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000493: 	je	.Ltmp2044 # Offset: 1171
.Ltmp2195:
    00000499: 	movq	-0x20(%rax), %r14
    0000049d: 	callq	clock@PLT # Offset: 1181
    000004a2: 	pxor	%xmm0, %xmm0
    000004a6: 	movq	%rax, end_time(%rip)
    000004ad: 	movq	%r14, %rdi
    000004b0: 	subq	start_time(%rip), %rax
    000004b7: 	cvtsi2sd	%rax, %xmm0
    000004bc: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004c4: 	callq	_Z13record_resultdPKc # Offset: 1220
    000004c9: 	movq	0xb0(%rsp), %rdi
    000004d1: 	leaq	0xc0(%rsp), %rax
    000004d9: 	movq	%rax, (%rsp)
    000004dd: 	cmpq	%rax, %rdi
    000004e0: 	je	.Ltmp2045 # Offset: 1248
    000004e2: 	movq	0xc0(%rsp), %rax
    000004ea: 	leaq	0x1(%rax), %rsi
    000004ee: 	callq	_ZdlPvm@PLT # Offset: 1262
.Ltmp2045:
    000004f3: 	movq	0x10(%rsp), %rsi
    000004f8: 	leaq	DATAat0x1c1f4(%rip), %rdx
    000004ff: 	movq	%r13, %rdi
    00000502: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1282
    00000507: 	callq	clock@PLT # Offset: 1287
    0000050c: 	movl	iterations(%rip), %ecx
    00000512: 	xorl	%r14d, %r14d
    00000515: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000051c: 	movq	%rax, start_time(%rip)
    00000523: 	testl	%ecx, %ecx
    00000525: 	jle	.Ltmp2046 # Offset: 1317
    00000527: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2049:
    00000530: 	movq	%rbp, %rax
    00000533: 	pxor	%xmm0, %xmm0
    00000537: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2047:
    00000540: 	paddd	(%rax), %xmm0
    00000544: 	addq	$0x10, %rax
    00000548: 	cmpq	%rbx, %rax
    0000054b: 	jne	.Ltmp2047 # Offset: 1355
    0000054d: 	imull	$0x1f40, init_value(%rip), %edx
    00000557: 	movdqa	%xmm0, %xmm1
    0000055b: 	psrldq	$0x8, %xmm1
    00000560: 	paddd	%xmm1, %xmm0
    00000564: 	movdqa	%xmm0, %xmm1
    00000568: 	psrldq	$0x4, %xmm1
    0000056d: 	paddd	%xmm1, %xmm0
    00000571: 	movd	%xmm0, %eax
    00000575: 	cmpl	%eax, %edx
    00000577: 	je	.Ltmp2048 # Offset: 1399
    00000579: 	movq	0xb0(%rsp), %rdx
    00000581: 	movq	%r15, %rsi
    00000584: 	movl	$0x1, %edi
    00000589: 	xorl	%eax, %eax
    0000058b: 	callq	__printf_chk@PLT # Offset: 1419
    00000590: 	movl	iterations(%rip), %ecx
.Ltmp2048:
    00000596: 	addl	$0x1, %r14d
    0000059a: 	cmpl	%ecx, %r14d
    0000059d: 	jl	.Ltmp2049 # Offset: 1437
.Ltmp2046:
    0000059f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005a6: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000005ad: 	subq	$0x20, %rax
    000005b1: 	cmpq	%rax, %r14
    000005b4: 	je	.Ltmp2050 # Offset: 1460
    000005ba: 	leaq	0x10(%r14), %rdi
    000005be: 	movq	0xb8(%rsp), %r15
    000005c6: 	movq	%rdi, (%r14)
    000005c9: 	movq	0xb0(%rsp), %rax
    000005d1: 	movq	%rax, %rsi
    000005d4: 	movq	%rax, 0x38(%rsp)
    000005d9: 	addq	%r15, %rsi
    000005dc: 	je	.Ltmp2051 # Offset: 1500
    000005de: 	testq	%rax, %rax
    000005e1: 	je	.Ltmp2052 # Offset: 1505
.Ltmp2051:
    000005e7: 	movq	%r15, 0x48(%rsp)
    000005ec: 	cmpq	$0xf, %r15
    000005f0: 	ja	.Ltmp2053 # Offset: 1520
    000005f6: 	cmpq	$0x1, %r15
    000005fa: 	jne	.Ltmp2054 # Offset: 1530
    00000600: 	movq	0x38(%rsp), %rax
    00000605: 	movzbl	(%rax), %eax
    00000608: 	movb	%al, 0x10(%r14)
.Ltmp2227:
    0000060c: 	movq	%r15, 0x8(%r14)
    00000610: 	movb	$0x0, (%rdi,%r15)
    00000615: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000061c: 	addq	$0x20, %rax
    00000620: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2198:
    00000627: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000062e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000635: 	je	.Ltmp2055 # Offset: 1589
.Ltmp2197:
    0000063b: 	movq	-0x20(%rax), %r14
    0000063f: 	callq	clock@PLT # Offset: 1599
    00000644: 	pxor	%xmm0, %xmm0
    00000648: 	movq	%rax, end_time(%rip)
    0000064f: 	movq	%r14, %rdi
    00000652: 	subq	start_time(%rip), %rax
    00000659: 	cvtsi2sd	%rax, %xmm0
    0000065e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000666: 	callq	_Z13record_resultdPKc # Offset: 1638
    0000066b: 	movq	0xb0(%rsp), %rdi
    00000673: 	cmpq	(%rsp), %rdi
    00000677: 	je	.Ltmp2056 # Offset: 1655
    00000679: 	movq	0xc0(%rsp), %rax
    00000681: 	leaq	0x1(%rax), %rsi
    00000685: 	callq	_ZdlPvm@PLT # Offset: 1669
.Ltmp2056:
    0000068a: 	movq	0x10(%rsp), %rsi
    0000068f: 	leaq	DATAat0x1c208(%rip), %rdx
    00000696: 	movq	%r13, %rdi
    00000699: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1689
    0000069e: 	callq	clock@PLT # Offset: 1694
    000006a3: 	movl	iterations(%rip), %ecx
    000006a9: 	xorl	%r14d, %r14d
    000006ac: 	leaq	DATAat0x1c1c8(%rip), %r15
    000006b3: 	movq	%rax, start_time(%rip)
    000006ba: 	testl	%ecx, %ecx
    000006bc: 	jle	.Ltmp2057 # Offset: 1724
    000006be: 	nop # Size: 2
.Ltmp2060:
    000006c0: 	movq	%rbp, %rax
    000006c3: 	pxor	%xmm0, %xmm0
    000006c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2058:
    000006d0: 	paddd	(%rax), %xmm0
    000006d4: 	addq	$0x10, %rax
    000006d8: 	cmpq	%rax, %rbx
    000006db: 	jne	.Ltmp2058 # Offset: 1755
    000006dd: 	imull	$0x1f40, init_value(%rip), %edx
    000006e7: 	movdqa	%xmm0, %xmm1
    000006eb: 	psrldq	$0x8, %xmm1
    000006f0: 	paddd	%xmm1, %xmm0
    000006f4: 	movdqa	%xmm0, %xmm1
    000006f8: 	psrldq	$0x4, %xmm1
    000006fd: 	paddd	%xmm1, %xmm0
    00000701: 	movd	%xmm0, %eax
    00000705: 	cmpl	%eax, %edx
    00000707: 	je	.Ltmp2059 # Offset: 1799
    00000709: 	movq	0xb0(%rsp), %rdx
    00000711: 	movq	%r15, %rsi
    00000714: 	movl	$0x1, %edi
    00000719: 	xorl	%eax, %eax
    0000071b: 	callq	__printf_chk@PLT # Offset: 1819
    00000720: 	movl	iterations(%rip), %ecx
.Ltmp2059:
    00000726: 	addl	$0x1, %r14d
    0000072a: 	cmpl	%ecx, %r14d
    0000072d: 	jl	.Ltmp2060 # Offset: 1837
.Ltmp2057:
    0000072f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000736: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000073d: 	subq	$0x20, %rax
    00000741: 	cmpq	%rax, %r14
    00000744: 	je	.Ltmp2061 # Offset: 1860
    0000074a: 	leaq	0x10(%r14), %rdi
    0000074e: 	movq	0xb8(%rsp), %r15
    00000756: 	movq	%rdi, (%r14)
    00000759: 	movq	0xb0(%rsp), %rax
    00000761: 	movq	%rax, %rsi
    00000764: 	movq	%rax, 0x38(%rsp)
    00000769: 	addq	%r15, %rsi
    0000076c: 	je	.Ltmp2062 # Offset: 1900
    0000076e: 	testq	%rax, %rax
    00000771: 	je	.Ltmp2063 # Offset: 1905
.Ltmp2062:
    00000777: 	movq	%r15, 0x48(%rsp)
    0000077c: 	cmpq	$0xf, %r15
    00000780: 	ja	.Ltmp2064 # Offset: 1920
    00000786: 	cmpq	$0x1, %r15
    0000078a: 	jne	.Ltmp2065 # Offset: 1930
    00000790: 	movq	0x38(%rsp), %rax
    00000795: 	movzbl	(%rax), %eax
    00000798: 	movb	%al, 0x10(%r14)
.Ltmp2219:
    0000079c: 	movq	%r15, 0x8(%r14)
    000007a0: 	movb	$0x0, (%rdi,%r15)
    000007a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007b3: 	addq	$0x20, %rax
    000007b7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000007be: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000007c5: 	je	.Ltmp2066 # Offset: 1989
.Ltmp2196:
    000007cb: 	movq	-0x20(%rax), %r14
    000007cf: 	callq	clock@PLT # Offset: 1999
    000007d4: 	pxor	%xmm0, %xmm0
    000007d8: 	movq	%rax, end_time(%rip)
    000007df: 	movq	%r14, %rdi
    000007e2: 	subq	start_time(%rip), %rax
    000007e9: 	cvtsi2sd	%rax, %xmm0
    000007ee: 	divsd	DATAat0x1c370(%rip), %xmm0
    000007f6: 	callq	_Z13record_resultdPKc # Offset: 2038
    000007fb: 	movq	0xb0(%rsp), %rdi
    00000803: 	cmpq	(%rsp), %rdi
    00000807: 	je	.Ltmp2067 # Offset: 2055
    00000809: 	movq	0xc0(%rsp), %rax
    00000811: 	leaq	0x1(%rax), %rsi
    00000815: 	callq	_ZdlPvm@PLT # Offset: 2069
.Ltmp2067:
    0000081a: 	movq	0x10(%rsp), %rsi
    0000081f: 	leaq	DATAat0x1c21d(%rip), %rdx
    00000826: 	movq	%r13, %rdi
    00000829: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2089
    0000082e: 	callq	clock@PLT # Offset: 2094
    00000833: 	movl	iterations(%rip), %ecx
    00000839: 	xorl	%r14d, %r14d
    0000083c: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000843: 	movq	%rax, start_time(%rip)
    0000084a: 	testl	%ecx, %ecx
    0000084c: 	jle	.Ltmp2068 # Offset: 2124
    0000084e: 	nop # Size: 2
.Ltmp2071:
    00000850: 	movq	%rbp, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2069:
    00000860: 	paddd	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	cmpq	%rbx, %rax
    0000086b: 	jne	.Ltmp2069 # Offset: 2155
    0000086d: 	imull	$0x1f40, init_value(%rip), %edx
    00000877: 	movdqa	%xmm0, %xmm1
    0000087b: 	psrldq	$0x8, %xmm1
    00000880: 	paddd	%xmm1, %xmm0
    00000884: 	movdqa	%xmm0, %xmm1
    00000888: 	psrldq	$0x4, %xmm1
    0000088d: 	paddd	%xmm1, %xmm0
    00000891: 	movd	%xmm0, %eax
    00000895: 	cmpl	%eax, %edx
    00000897: 	je	.Ltmp2070 # Offset: 2199
    00000899: 	movq	0xb0(%rsp), %rdx
    000008a1: 	movq	%r15, %rsi
    000008a4: 	movl	$0x1, %edi
    000008a9: 	xorl	%eax, %eax
    000008ab: 	callq	__printf_chk@PLT # Offset: 2219
    000008b0: 	movl	iterations(%rip), %ecx
.Ltmp2070:
    000008b6: 	addl	$0x1, %r14d
    000008ba: 	cmpl	%ecx, %r14d
    000008bd: 	jl	.Ltmp2071 # Offset: 2237
.Ltmp2068:
    000008bf: 	movq	%r13, %rsi
    000008c2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008c9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2249
    000008ce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008d5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008e3: 	je	.Ltmp2072 # Offset: 2275
.Ltmp2202:
    000008e9: 	movq	-0x20(%rax), %r14
    000008ed: 	callq	clock@PLT # Offset: 2285
    000008f2: 	pxor	%xmm0, %xmm0
    000008f6: 	movq	%rax, end_time(%rip)
    000008fd: 	movq	%r14, %rdi
    00000900: 	subq	start_time(%rip), %rax
    00000907: 	cvtsi2sd	%rax, %xmm0
    0000090c: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000914: 	callq	_Z13record_resultdPKc # Offset: 2324
    00000919: 	movq	0xb0(%rsp), %rdi
    00000921: 	cmpq	(%rsp), %rdi
    00000925: 	je	.Ltmp2073 # Offset: 2341
    00000927: 	movq	0xc0(%rsp), %rax
    0000092f: 	leaq	0x1(%rax), %rsi
    00000933: 	callq	_ZdlPvm@PLT # Offset: 2355
.Ltmp2073:
    00000938: 	movq	0x10(%rsp), %rsi
    0000093d: 	leaq	DATAat0x1c23a(%rip), %rdx
    00000944: 	movq	%r13, %rdi
    00000947: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2375
    0000094c: 	callq	clock@PLT # Offset: 2380
    00000951: 	movl	iterations(%rip), %ecx
    00000957: 	xorl	%r14d, %r14d
    0000095a: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000961: 	movq	%rax, start_time(%rip)
    00000968: 	testl	%ecx, %ecx
    0000096a: 	jle	.Ltmp2074 # Offset: 2410
    0000096c: 	nopl	(%rax) # Size: 4
.Ltmp2077:
    00000970: 	movq	%rbp, %rax
    00000973: 	pxor	%xmm0, %xmm0
    00000977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2075:
    00000980: 	paddd	(%rax), %xmm0
    00000984: 	addq	$0x10, %rax
    00000988: 	cmpq	%rbx, %rax
    0000098b: 	jne	.Ltmp2075 # Offset: 2443
    0000098d: 	imull	$0x1f40, init_value(%rip), %edx
    00000997: 	movdqa	%xmm0, %xmm1
    0000099b: 	psrldq	$0x8, %xmm1
    000009a0: 	paddd	%xmm1, %xmm0
    000009a4: 	movdqa	%xmm0, %xmm1
    000009a8: 	psrldq	$0x4, %xmm1
    000009ad: 	paddd	%xmm1, %xmm0
    000009b1: 	movd	%xmm0, %eax
    000009b5: 	cmpl	%eax, %edx
    000009b7: 	je	.Ltmp2076 # Offset: 2487
    000009b9: 	movq	0xb0(%rsp), %rdx
    000009c1: 	movq	%r15, %rsi
    000009c4: 	movl	$0x1, %edi
    000009c9: 	xorl	%eax, %eax
    000009cb: 	callq	__printf_chk@PLT # Offset: 2507
    000009d0: 	movl	iterations(%rip), %ecx
.Ltmp2076:
    000009d6: 	addl	$0x1, %r14d
    000009da: 	cmpl	%ecx, %r14d
    000009dd: 	jl	.Ltmp2077 # Offset: 2525
.Ltmp2074:
    000009df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009e6: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000009ed: 	subq	$0x20, %rax
    000009f1: 	cmpq	%rax, %r14
    000009f4: 	je	.Ltmp2078 # Offset: 2548
    000009fa: 	leaq	0x10(%r14), %rdi
    000009fe: 	movq	0xb8(%rsp), %r15
    00000a06: 	movq	%rdi, (%r14)
    00000a09: 	movq	0xb0(%rsp), %rax
    00000a11: 	movq	%rax, %rsi
    00000a14: 	movq	%rax, 0x38(%rsp)
    00000a19: 	addq	%r15, %rsi
    00000a1c: 	je	.Ltmp2079 # Offset: 2588
    00000a1e: 	testq	%rax, %rax
    00000a21: 	je	.Ltmp2080 # Offset: 2593
.Ltmp2079:
    00000a27: 	movq	%r15, 0x48(%rsp)
    00000a2c: 	cmpq	$0xf, %r15
    00000a30: 	ja	.Ltmp2081 # Offset: 2608
    00000a36: 	cmpq	$0x1, %r15
    00000a3a: 	jne	.Ltmp2082 # Offset: 2618
    00000a40: 	movq	0x38(%rsp), %rax
    00000a45: 	movzbl	(%rax), %eax
    00000a48: 	movb	%al, 0x10(%r14)
.Ltmp2223:
    00000a4c: 	movq	%r15, 0x8(%r14)
    00000a50: 	movb	$0x0, (%rdi,%r15)
    00000a55: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a5c: 	addq	$0x20, %rax
    00000a60: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2201:
    00000a67: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a75: 	je	.Ltmp2083 # Offset: 2677
.Ltmp2200:
    00000a7b: 	movq	-0x20(%rax), %r14
    00000a7f: 	callq	clock@PLT # Offset: 2687
    00000a84: 	pxor	%xmm0, %xmm0
    00000a88: 	movq	%rax, end_time(%rip)
    00000a8f: 	movq	%r14, %rdi
    00000a92: 	subq	start_time(%rip), %rax
    00000a99: 	cvtsi2sd	%rax, %xmm0
    00000a9e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000aa6: 	callq	_Z13record_resultdPKc # Offset: 2726
    00000aab: 	movq	0xb0(%rsp), %rdi
    00000ab3: 	cmpq	(%rsp), %rdi
    00000ab7: 	je	.Ltmp2084 # Offset: 2743
    00000ab9: 	movq	0xc0(%rsp), %rax
    00000ac1: 	leaq	0x1(%rax), %rsi
    00000ac5: 	callq	_ZdlPvm@PLT # Offset: 2757
.Ltmp2084:
    00000aca: 	movq	0x10(%rsp), %rsi
    00000acf: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000ad6: 	movq	%r13, %rdi
    00000ad9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2777
    00000ade: 	callq	clock@PLT # Offset: 2782
    00000ae3: 	movl	iterations(%rip), %ecx
    00000ae9: 	xorl	%r14d, %r14d
    00000aec: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000af3: 	movq	%rax, start_time(%rip)
    00000afa: 	testl	%ecx, %ecx
    00000afc: 	jle	.Ltmp2085 # Offset: 2812
    00000afe: 	nop # Size: 2
.Ltmp2088:
    00000b00: 	movq	%rbp, %rax
    00000b03: 	pxor	%xmm0, %xmm0
    00000b07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2086:
    00000b10: 	paddd	(%rax), %xmm0
    00000b14: 	addq	$0x10, %rax
    00000b18: 	cmpq	%rbx, %rax
    00000b1b: 	jne	.Ltmp2086 # Offset: 2843
    00000b1d: 	imull	$0x1f40, init_value(%rip), %edx
    00000b27: 	movdqa	%xmm0, %xmm1
    00000b2b: 	psrldq	$0x8, %xmm1
    00000b30: 	paddd	%xmm1, %xmm0
    00000b34: 	movdqa	%xmm0, %xmm1
    00000b38: 	psrldq	$0x4, %xmm1
    00000b3d: 	paddd	%xmm1, %xmm0
    00000b41: 	movd	%xmm0, %eax
    00000b45: 	cmpl	%eax, %edx
    00000b47: 	je	.Ltmp2087 # Offset: 2887
    00000b49: 	movq	0xb0(%rsp), %rdx
    00000b51: 	movq	%r15, %rsi
    00000b54: 	movl	$0x1, %edi
    00000b59: 	xorl	%eax, %eax
    00000b5b: 	callq	__printf_chk@PLT # Offset: 2907
    00000b60: 	movl	iterations(%rip), %ecx
.Ltmp2087:
    00000b66: 	addl	$0x1, %r14d
    00000b6a: 	cmpl	%ecx, %r14d
    00000b6d: 	jl	.Ltmp2088 # Offset: 2925
.Ltmp2085:
    00000b6f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b76: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000b7d: 	subq	$0x20, %rax
    00000b81: 	cmpq	%rax, %rbx
    00000b84: 	je	.Ltmp2089 # Offset: 2948
    00000b8a: 	leaq	0x10(%rbx), %rdi
    00000b8e: 	movq	0xb8(%rsp), %r14
    00000b96: 	movq	%rdi, (%rbx)
    00000b99: 	movq	0xb0(%rsp), %rbp
    00000ba1: 	movq	%rbp, %rax
    00000ba4: 	addq	%r14, %rax
    00000ba7: 	je	.Ltmp2090 # Offset: 2983
    00000ba9: 	testq	%rbp, %rbp
    00000bac: 	je	.Ltmp2091 # Offset: 2988
.Ltmp2090:
    00000bb2: 	movq	%r14, 0x48(%rsp)
    00000bb7: 	cmpq	$0xf, %r14
    00000bbb: 	ja	.Ltmp2092 # Offset: 3003
    00000bc1: 	cmpq	$0x1, %r14
    00000bc5: 	jne	.Ltmp2093 # Offset: 3013
    00000bcb: 	movzbl	(%rbp), %eax
    00000bcf: 	movb	%al, 0x10(%rbx)
.Ltmp2218:
    00000bd2: 	movq	%r14, 0x8(%rbx)
    00000bd6: 	movb	$0x0, (%rdi,%r14)
    00000bdb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000be2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000be9: 	addq	$0x20, %rax
    00000bed: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000bf4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000bfb: 	je	.Ltmp2094 # Offset: 3067
.Ltmp2199:
    00000c01: 	movq	-0x20(%rax), %rbp
    00000c05: 	callq	clock@PLT # Offset: 3077
    00000c0a: 	pxor	%xmm0, %xmm0
    00000c0e: 	movq	%rax, end_time(%rip)
    00000c15: 	movq	%rbp, %rdi
    00000c18: 	subq	start_time(%rip), %rax
    00000c1f: 	cvtsi2sd	%rax, %xmm0
    00000c24: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000c2c: 	callq	_Z13record_resultdPKc # Offset: 3116
    00000c31: 	movq	0xb0(%rsp), %rdi
    00000c39: 	cmpq	(%rsp), %rdi
    00000c3d: 	je	.Ltmp2095 # Offset: 3133
    00000c3f: 	movq	0xc0(%rsp), %rax
    00000c47: 	leaq	0x1(%rax), %rsi
    00000c4b: 	callq	_ZdlPvm@PLT # Offset: 3147
.Ltmp2095:
    00000c50: 	movq	0x10(%rsp), %rsi
    00000c55: 	leaq	DATAat0x1c265(%rip), %rdx
    00000c5c: 	movq	%r13, %rdi
    00000c5f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3167
    00000c64: 	callq	clock@PLT # Offset: 3172
    00000c69: 	movl	iterations(%rip), %r15d
    00000c70: 	xorl	%ebx, %ebx
    00000c72: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000c79: 	movq	%rax, start_time(%rip)
    00000c80: 	testl	%r15d, %r15d
    00000c83: 	jle	.Ltmp2096 # Offset: 3203
.Ltmp2182:
    00000c85: 	cmpl	init_value(%rip), %r12d
    00000c8c: 	jne	.Ltmp2097 # Offset: 3212
.Ltmp2096:
    00000c92: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c99: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000ca0: 	subq	$0x20, %rax
    00000ca4: 	cmpq	%rax, %rbx
    00000ca7: 	je	.Ltmp2098 # Offset: 3239
    00000cad: 	leaq	0x10(%rbx), %rdi
    00000cb1: 	movq	0xb8(%rsp), %r14
    00000cb9: 	movq	%rdi, (%rbx)
    00000cbc: 	movq	0xb0(%rsp), %rbp
    00000cc4: 	movq	%rbp, %rax
    00000cc7: 	addq	%r14, %rax
    00000cca: 	je	.Ltmp2099 # Offset: 3274
    00000ccc: 	testq	%rbp, %rbp
    00000ccf: 	je	.Ltmp2100 # Offset: 3279
.Ltmp2099:
    00000cd5: 	movq	%r14, 0x48(%rsp)
    00000cda: 	cmpq	$0xf, %r14
    00000cde: 	ja	.Ltmp2101 # Offset: 3294
    00000ce4: 	cmpq	$0x1, %r14
    00000ce8: 	jne	.Ltmp2102 # Offset: 3304
    00000cee: 	movzbl	(%rbp), %eax
    00000cf2: 	movb	%al, 0x10(%rbx)
.Ltmp2216:
    00000cf5: 	movq	%r14, 0x8(%rbx)
    00000cf9: 	movb	$0x0, (%rdi,%r14)
    00000cfe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d0c: 	addq	$0x20, %rax
    00000d10: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d17: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000d1e: 	je	.Ltmp2103 # Offset: 3358
.Ltmp2208:
    00000d24: 	movq	-0x20(%rax), %rbp
    00000d28: 	callq	clock@PLT # Offset: 3368
    00000d2d: 	pxor	%xmm0, %xmm0
    00000d31: 	movq	%rax, end_time(%rip)
    00000d38: 	movq	%rbp, %rdi
    00000d3b: 	subq	start_time(%rip), %rax
    00000d42: 	cvtsi2sd	%rax, %xmm0
    00000d47: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d4f: 	callq	_Z13record_resultdPKc # Offset: 3407
    00000d54: 	movq	0xb0(%rsp), %rdi
    00000d5c: 	cmpq	(%rsp), %rdi
    00000d60: 	je	.Ltmp2104 # Offset: 3424
    00000d62: 	movq	0xc0(%rsp), %rax
    00000d6a: 	leaq	0x1(%rax), %rsi
    00000d6e: 	callq	_ZdlPvm@PLT # Offset: 3438
.Ltmp2104:
    00000d73: 	movq	0x10(%rsp), %rsi
    00000d78: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000d7f: 	movq	%r13, %rdi
    00000d82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3458
    00000d87: 	callq	clock@PLT # Offset: 3463
    00000d8c: 	movl	iterations(%rip), %r14d
    00000d93: 	xorl	%ebx, %ebx
    00000d95: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000d9c: 	movq	%rax, start_time(%rip)
    00000da3: 	testl	%r14d, %r14d
    00000da6: 	jle	.Ltmp2105 # Offset: 3494
    00000da8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2183:
    00000db0: 	cmpl	init_value(%rip), %r12d
    00000db7: 	jne	.Ltmp2106 # Offset: 3511
.Ltmp2105:
    00000dbd: 	movq	%r13, %rsi
    00000dc0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000dc7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3527
    00000dcc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dd3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dda: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000de1: 	je	.Ltmp2107 # Offset: 3553
.Ltmp2203:
    00000de7: 	movq	-0x20(%rax), %rbp
    00000deb: 	callq	clock@PLT # Offset: 3563
    00000df0: 	pxor	%xmm0, %xmm0
    00000df4: 	movq	%rax, end_time(%rip)
    00000dfb: 	movq	%rbp, %rdi
    00000dfe: 	subq	start_time(%rip), %rax
    00000e05: 	cvtsi2sd	%rax, %xmm0
    00000e0a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000e12: 	callq	_Z13record_resultdPKc # Offset: 3602
    00000e17: 	movq	0xb0(%rsp), %rdi
    00000e1f: 	cmpq	(%rsp), %rdi
    00000e23: 	je	.Ltmp2108 # Offset: 3619
    00000e25: 	movq	0xc0(%rsp), %rax
    00000e2d: 	leaq	0x1(%rax), %rsi
    00000e31: 	callq	_ZdlPvm@PLT # Offset: 3633
.Ltmp2108:
    00000e36: 	movq	0x10(%rsp), %rsi
    00000e3b: 	leaq	DATAat0x1c289(%rip), %rdx
    00000e42: 	movq	%r13, %rdi
    00000e45: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3653
    00000e4a: 	callq	clock@PLT # Offset: 3658
    00000e4f: 	movl	iterations(%rip), %r11d
    00000e56: 	xorl	%ebx, %ebx
    00000e58: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000e5f: 	movq	%rax, start_time(%rip)
    00000e66: 	testl	%r11d, %r11d
    00000e69: 	jle	.Ltmp2109 # Offset: 3689
    00000e6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2188:
    00000e70: 	cmpl	init_value(%rip), %r12d
    00000e77: 	jne	.Ltmp2110 # Offset: 3703
.Ltmp2109:
    00000e7d: 	movq	%r13, %rsi
    00000e80: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e87: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3719
    00000e8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e93: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e9a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ea1: 	je	.Ltmp2111 # Offset: 3745
.Ltmp2204:
    00000ea7: 	movq	-0x20(%rax), %rbp
    00000eab: 	callq	clock@PLT # Offset: 3755
    00000eb0: 	pxor	%xmm0, %xmm0
    00000eb4: 	movq	%rax, end_time(%rip)
    00000ebb: 	movq	%rbp, %rdi
    00000ebe: 	subq	start_time(%rip), %rax
    00000ec5: 	cvtsi2sd	%rax, %xmm0
    00000eca: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000ed2: 	callq	_Z13record_resultdPKc # Offset: 3794
    00000ed7: 	movq	0xb0(%rsp), %rdi
    00000edf: 	cmpq	(%rsp), %rdi
    00000ee3: 	je	.Ltmp2112 # Offset: 3811
    00000ee5: 	movq	0xc0(%rsp), %rax
    00000eed: 	leaq	0x1(%rax), %rsi
    00000ef1: 	callq	_ZdlPvm@PLT # Offset: 3825
.Ltmp2112:
    00000ef6: 	movq	0x10(%rsp), %rsi
    00000efb: 	leaq	DATAat0x1c298(%rip), %rdx
    00000f02: 	movq	%r13, %rdi
    00000f05: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3845
    00000f0a: 	movq	0x30(%rsp), %rdi
    00000f0f: 	movq	%r13, %rdx
    00000f12: 	movl	$0x1f40, %esi
    00000f17: 	callq	_Z22test_struct4_deref_optIi12test_struct1IiEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3863
    00000f1c: 	movq	0xb0(%rsp), %rdi
    00000f24: 	cmpq	(%rsp), %rdi
    00000f28: 	je	.Ltmp2113 # Offset: 3880
    00000f2a: 	movq	0xc0(%rsp), %rax
    00000f32: 	leaq	0x1(%rax), %rsi
    00000f36: 	callq	_ZdlPvm@PLT # Offset: 3894
.Ltmp2113:
    00000f3b: 	movq	0x10(%rsp), %rsi
    00000f40: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000f47: 	movq	%r13, %rdi
    00000f4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3914
    00000f4f: 	callq	clock@PLT # Offset: 3919
    00000f54: 	movl	iterations(%rip), %r10d
    00000f5b: 	xorl	%ebx, %ebx
    00000f5d: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000f64: 	movq	%rax, start_time(%rip)
    00000f6b: 	testl	%r10d, %r10d
    00000f6e: 	jle	.Ltmp2114 # Offset: 3950
.Ltmp2189:
    00000f70: 	cmpl	init_value(%rip), %r12d
    00000f77: 	jne	.Ltmp2115 # Offset: 3959
.Ltmp2114:
    00000f7d: 	movq	%r13, %rsi
    00000f80: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f87: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3975
    00000f8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f93: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f9a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fa1: 	je	.Ltmp2116 # Offset: 4001
.Ltmp2206:
    00000fa7: 	movq	-0x20(%rax), %rbp
    00000fab: 	callq	clock@PLT # Offset: 4011
    00000fb0: 	pxor	%xmm0, %xmm0
    00000fb4: 	movq	%rax, end_time(%rip)
    00000fbb: 	movq	%rbp, %rdi
    00000fbe: 	subq	start_time(%rip), %rax
    00000fc5: 	cvtsi2sd	%rax, %xmm0
    00000fca: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000fd2: 	callq	_Z13record_resultdPKc # Offset: 4050
    00000fd7: 	movq	0xb0(%rsp), %rdi
    00000fdf: 	cmpq	(%rsp), %rdi
    00000fe3: 	je	.Ltmp2117 # Offset: 4067
    00000fe5: 	movq	0xc0(%rsp), %rax
    00000fed: 	leaq	0x1(%rax), %rsi
    00000ff1: 	callq	_ZdlPvm@PLT # Offset: 4081
.Ltmp2117:
    00000ff6: 	movq	0x10(%rsp), %rsi
    00000ffb: 	leaq	DATAat0x1c2be(%rip), %rdx
    00001002: 	movq	%r13, %rdi
    00001005: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4101
    0000100a: 	callq	clock@PLT # Offset: 4106
    0000100f: 	movl	iterations(%rip), %r9d
    00001016: 	xorl	%ebx, %ebx
    00001018: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000101f: 	movq	%rax, start_time(%rip)
    00001026: 	testl	%r9d, %r9d
    00001029: 	jle	.Ltmp2118 # Offset: 4137
.Ltmp2187:
    0000102b: 	cmpl	init_value(%rip), %r12d
    00001032: 	jne	.Ltmp2119 # Offset: 4146
.Ltmp2118:
    00001038: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000103f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001046: 	subq	$0x20, %rax
    0000104a: 	cmpq	%rax, %rbx
    0000104d: 	je	.Ltmp2120 # Offset: 4173
    00001053: 	leaq	0x10(%rbx), %rdi
    00001057: 	movq	0xb8(%rsp), %r12
    0000105f: 	movq	%rdi, (%rbx)
    00001062: 	movq	0xb0(%rsp), %rbp
    0000106a: 	movq	%rbp, %rax
    0000106d: 	addq	%r12, %rax
    00001070: 	je	.Ltmp2121 # Offset: 4208
    00001072: 	testq	%rbp, %rbp
    00001075: 	je	.Ltmp2122 # Offset: 4213
.Ltmp2121:
    0000107b: 	movq	%r12, 0x48(%rsp)
    00001080: 	cmpq	$0xf, %r12
    00001084: 	ja	.Ltmp2123 # Offset: 4228
    0000108a: 	cmpq	$0x1, %r12
    0000108e: 	jne	.Ltmp2124 # Offset: 4238
    00001094: 	movzbl	(%rbp), %eax
    00001098: 	movb	%al, 0x10(%rbx)
.Ltmp2225:
    0000109b: 	movq	%r12, 0x8(%rbx)
    0000109f: 	movb	$0x0, (%rdi,%r12)
    000010a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010ab: 	addq	$0x20, %rax
    000010af: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2207:
    000010b6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010c4: 	je	.Ltmp2125 # Offset: 4292
.Ltmp2192:
    000010ca: 	movq	-0x20(%rax), %rbp
    000010ce: 	callq	clock@PLT # Offset: 4302
    000010d3: 	pxor	%xmm0, %xmm0
    000010d7: 	movq	%rax, end_time(%rip)
    000010de: 	movq	%rbp, %rdi
    000010e1: 	subq	start_time(%rip), %rax
    000010e8: 	cvtsi2sd	%rax, %xmm0
    000010ed: 	divsd	DATAat0x1c370(%rip), %xmm0
    000010f5: 	callq	_Z13record_resultdPKc # Offset: 4341
    000010fa: 	movq	0xb0(%rsp), %rdi
    00001102: 	cmpq	(%rsp), %rdi
    00001106: 	je	.Ltmp2126 # Offset: 4358
    00001108: 	movq	0xc0(%rsp), %rax
    00001110: 	leaq	0x1(%rax), %rsi
    00001114: 	callq	_ZdlPvm@PLT # Offset: 4372
.Ltmp2126:
    00001119: 	movq	0x10(%rsp), %rsi
    0000111e: 	leaq	DATAat0x1c225(%rip), %rdx
    00001125: 	movq	%r13, %rdi
    00001128: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4392
    0000112d: 	callq	clock@PLT # Offset: 4397
    00001132: 	movl	iterations(%rip), %r8d
    00001139: 	xorl	%ebp, %ebp
    0000113b: 	leaq	DATAat0x1c1c8(%rip), %r12
    00001142: 	movq	%rax, start_time(%rip)
    00001149: 	movq	0x20(%rsp), %rax
    0000114e: 	leaq	(,%rax,8), %r14
    00001156: 	movq	0x270(%rsp,%r14), %rax
    0000115e: 	movq	0x180(%rsp,%rax,8), %rax
    00001166: 	movl	0x100(%rsp,%rax,4), %ebx
    0000116d: 	testl	%r8d, %r8d
    00001170: 	jle	.Ltmp2127 # Offset: 4464
    00001172: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2190:
    00001178: 	cmpl	init_value(%rip), %ebx
    0000117e: 	jne	.Ltmp2128 # Offset: 4478
.Ltmp2127:
    00001184: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000118b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001192: 	subq	$0x20, %rax
    00001196: 	cmpq	%rax, %rbp
    00001199: 	je	.Ltmp2129 # Offset: 4505
    0000119f: 	leaq	0x10(%rbp), %rdi
    000011a3: 	movq	0xb8(%rsp), %r12
    000011ab: 	movq	%rdi, (%rbp)
    000011af: 	movq	0xb0(%rsp), %r15
    000011b7: 	movq	%r15, %rax
    000011ba: 	addq	%r12, %rax
    000011bd: 	je	.Ltmp2130 # Offset: 4541
    000011bf: 	testq	%r15, %r15
    000011c2: 	je	.Ltmp2131 # Offset: 4546
.Ltmp2130:
    000011c8: 	movq	%r12, 0x48(%rsp)
    000011cd: 	cmpq	$0xf, %r12
    000011d1: 	ja	.Ltmp2132 # Offset: 4561
    000011d7: 	cmpq	$0x1, %r12
    000011db: 	jne	.Ltmp2133 # Offset: 4571
    000011e1: 	movzbl	(%r15), %eax
    000011e5: 	movb	%al, 0x10(%rbp)
.Ltmp2221:
    000011e8: 	movq	%r12, 0x8(%rbp)
    000011ec: 	movb	$0x0, (%rdi,%r12)
    000011f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011f8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011ff: 	addq	$0x20, %rax
    00001203: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000120a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001211: 	je	.Ltmp2134 # Offset: 4625
.Ltmp2193:
    00001217: 	movq	-0x20(%rax), %rbp
    0000121b: 	callq	clock@PLT # Offset: 4635
    00001220: 	pxor	%xmm0, %xmm0
    00001224: 	movq	%rax, end_time(%rip)
    0000122b: 	movq	%rbp, %rdi
    0000122e: 	subq	start_time(%rip), %rax
    00001235: 	cvtsi2sd	%rax, %xmm0
    0000123a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001242: 	callq	_Z13record_resultdPKc # Offset: 4674
    00001247: 	movq	0xb0(%rsp), %rdi
    0000124f: 	cmpq	(%rsp), %rdi
    00001253: 	je	.Ltmp2135 # Offset: 4691
    00001255: 	movq	0xc0(%rsp), %rax
    0000125d: 	leaq	0x1(%rax), %rsi
    00001261: 	callq	_ZdlPvm@PLT # Offset: 4705
.Ltmp2135:
    00001266: 	movq	0x10(%rsp), %rsi
    0000126b: 	leaq	DATAat0x1c242(%rip), %rdx
    00001272: 	movq	%r13, %rdi
    00001275: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4725
    0000127a: 	callq	clock@PLT # Offset: 4730
    0000127f: 	movl	iterations(%rip), %edi
    00001285: 	xorl	%ebp, %ebp
    00001287: 	leaq	DATAat0x1c1c8(%rip), %r12
    0000128e: 	movq	%rax, start_time(%rip)
    00001295: 	testl	%edi, %edi
    00001297: 	jle	.Ltmp2136 # Offset: 4759
.Ltmp2191:
    00001299: 	cmpl	init_value(%rip), %ebx
    0000129f: 	jne	.Ltmp2137 # Offset: 4767
.Ltmp2136:
    000012a5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000012b3: 	subq	$0x20, %rax
    000012b7: 	cmpq	%rax, %rbp
    000012ba: 	je	.Ltmp2138 # Offset: 4794
    000012c0: 	leaq	0x10(%rbp), %rdi
    000012c4: 	movq	0xb8(%rsp), %r12
    000012cc: 	movq	%rdi, (%rbp)
    000012d0: 	movq	0xb0(%rsp), %r15
    000012d8: 	movq	%r15, %rax
    000012db: 	addq	%r12, %rax
    000012de: 	je	.Ltmp2139 # Offset: 4830
    000012e0: 	testq	%r15, %r15
    000012e3: 	je	.Ltmp2140 # Offset: 4835
.Ltmp2139:
    000012e9: 	movq	%r12, 0x48(%rsp)
    000012ee: 	cmpq	$0xf, %r12
    000012f2: 	ja	.Ltmp2141 # Offset: 4850
    000012f8: 	cmpq	$0x1, %r12
    000012fc: 	jne	.Ltmp2142 # Offset: 4860
    00001302: 	movzbl	(%r15), %eax
    00001306: 	movb	%al, 0x10(%rbp)
.Ltmp2214:
    00001309: 	movq	%r12, 0x8(%rbp)
    0000130d: 	movb	$0x0, (%rdi,%r12)
    00001312: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001319: 	addq	$0x20, %rax
    0000131d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2210:
    00001324: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000132b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001332: 	je	.Ltmp2143 # Offset: 4914
.Ltmp2209:
    00001338: 	movq	-0x20(%rax), %rbp
    0000133c: 	callq	clock@PLT # Offset: 4924
    00001341: 	pxor	%xmm0, %xmm0
    00001345: 	movq	%rax, end_time(%rip)
    0000134c: 	movq	%rbp, %rdi
    0000134f: 	subq	start_time(%rip), %rax
    00001356: 	cvtsi2sd	%rax, %xmm0
    0000135b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001363: 	callq	_Z13record_resultdPKc # Offset: 4963
    00001368: 	movq	0xb0(%rsp), %rdi
    00001370: 	cmpq	(%rsp), %rdi
    00001374: 	je	.Ltmp2144 # Offset: 4980
    00001376: 	movq	0xc0(%rsp), %rax
    0000137e: 	leaq	0x1(%rax), %rsi
    00001382: 	callq	_ZdlPvm@PLT # Offset: 4994
.Ltmp2144:
    00001387: 	movq	0x10(%rsp), %rsi
    0000138c: 	leaq	DATAat0x1c257(%rip), %rdx
    00001393: 	movq	%r13, %rdi
    00001396: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5014
    0000139b: 	callq	clock@PLT # Offset: 5019
    000013a0: 	movl	iterations(%rip), %esi
    000013a6: 	xorl	%ebp, %ebp
    000013a8: 	leaq	DATAat0x1c1c8(%rip), %r12
    000013af: 	movq	%rax, start_time(%rip)
    000013b6: 	testl	%esi, %esi
    000013b8: 	jle	.Ltmp2145 # Offset: 5048
.Ltmp2186:
    000013ba: 	cmpl	init_value(%rip), %ebx
    000013c0: 	jne	.Ltmp2146 # Offset: 5056
.Ltmp2145:
    000013c6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000013d4: 	subq	$0x20, %rax
    000013d8: 	cmpq	%rax, %rbx
    000013db: 	je	.Ltmp2147 # Offset: 5083
    000013e1: 	leaq	0x10(%rbx), %rdi
    000013e5: 	movq	0xb8(%rsp), %r12
    000013ed: 	movq	%rdi, (%rbx)
    000013f0: 	movq	0xb0(%rsp), %rbp
    000013f8: 	movq	%rbp, %rax
    000013fb: 	addq	%r12, %rax
    000013fe: 	je	.Ltmp2148 # Offset: 5118
    00001400: 	testq	%rbp, %rbp
    00001403: 	je	.Ltmp2149 # Offset: 5123
.Ltmp2148:
    00001409: 	movq	%r12, 0x48(%rsp)
    0000140e: 	cmpq	$0xf, %r12
    00001412: 	ja	.Ltmp2150 # Offset: 5138
    00001418: 	cmpq	$0x1, %r12
    0000141c: 	jne	.Ltmp2151 # Offset: 5148
    00001422: 	movzbl	(%rbp), %eax
    00001426: 	movb	%al, 0x10(%rbx)
.Ltmp2231:
    00001429: 	movq	%r12, 0x8(%rbx)
    0000142d: 	movb	$0x0, (%rdi,%r12)
    00001432: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001439: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001440: 	addq	$0x20, %rax
    00001444: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000144b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001452: 	je	.Ltmp2152 # Offset: 5202
.Ltmp2205:
    00001458: 	movq	-0x20(%rax), %rbp
    0000145c: 	callq	clock@PLT # Offset: 5212
    00001461: 	pxor	%xmm0, %xmm0
    00001465: 	movq	%rax, end_time(%rip)
    0000146c: 	movq	%rbp, %rdi
    0000146f: 	subq	start_time(%rip), %rax
    00001476: 	cvtsi2sd	%rax, %xmm0
    0000147b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001483: 	callq	_Z13record_resultdPKc # Offset: 5251
    00001488: 	movq	0xb0(%rsp), %rdi
    00001490: 	cmpq	(%rsp), %rdi
    00001494: 	je	.Ltmp2153 # Offset: 5268
    00001496: 	movq	0xc0(%rsp), %rax
    0000149e: 	leaq	0x1(%rax), %rsi
    000014a2: 	callq	_ZdlPvm@PLT # Offset: 5282
.Ltmp2153:
    000014a7: 	movq	0x10(%rsp), %rsi
    000014ac: 	leaq	DATAat0x1c338(%rip), %rdx
    000014b3: 	movq	%r13, %rdi
    000014b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5302
    000014bb: 	movq	0x20(%rsp), %rsi
    000014c0: 	leaq	0xd0(%rsp), %rdi
    000014c8: 	movq	%r13, %rcx
    000014cb: 	movl	$0x1f40, %edx
    000014d0: 	callq	_Z31test_struct_arrayList_deref_optIi21test_struct_arrayListIiEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5328
    000014d5: 	movq	0xb0(%rsp), %rdi
    000014dd: 	cmpq	(%rsp), %rdi
    000014e1: 	je	.Ltmp2154 # Offset: 5345
    000014e3: 	movq	0xc0(%rsp), %rax
    000014eb: 	leaq	0x1(%rax), %rsi
    000014ef: 	callq	_ZdlPvm@PLT # Offset: 5359
.Ltmp2154:
    000014f4: 	movq	0x10(%rsp), %rsi
    000014f9: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001500: 	movq	%r13, %rdi
    00001503: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5379
    00001508: 	callq	clock@PLT # Offset: 5384
    0000150d: 	movl	iterations(%rip), %ecx
    00001513: 	movq	%rax, start_time(%rip)
    0000151a: 	testl	%ecx, %ecx
    0000151c: 	jle	.Ltmp2155 # Offset: 5404
    0000151e: 	movq	0x180(%rsp,%r14), %rax
    00001526: 	xorl	%ebx, %ebx
    00001528: 	leaq	DATAat0x1c1c8(%rip), %r12
    0000152f: 	movq	0x270(%rsp,%rax,8), %rax
    00001537: 	movq	0x180(%rsp,%rax,8), %rax
    0000153f: 	movq	0x270(%rsp,%rax,8), %rax
    00001547: 	movq	0x180(%rsp,%rax,8), %rax
    0000154f: 	movl	0x100(%rsp,%rax,4), %ebp
    00001556: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2185:
    00001560: 	cmpl	%ebp, init_value(%rip)
    00001566: 	jne	.Ltmp2156 # Offset: 5478
.Ltmp2155:
    0000156c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001573: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000157a: 	subq	$0x20, %rax
    0000157e: 	cmpq	%rax, %rbx
    00001581: 	je	.Ltmp2157 # Offset: 5505
    00001587: 	leaq	0x10(%rbx), %rdi
    0000158b: 	movq	0xb8(%rsp), %r12
    00001593: 	movq	%rdi, (%rbx)
    00001596: 	movq	0xb0(%rsp), %rbp
    0000159e: 	movq	%rbp, %rax
    000015a1: 	addq	%r12, %rax
    000015a4: 	je	.Ltmp2158 # Offset: 5540
    000015a6: 	testq	%rbp, %rbp
    000015a9: 	je	.Ltmp2159 # Offset: 5545
.Ltmp2158:
    000015af: 	movq	%r12, 0x48(%rsp)
    000015b4: 	cmpq	$0xf, %r12
    000015b8: 	ja	.Ltmp2160 # Offset: 5560
    000015be: 	cmpq	$0x1, %r12
    000015c2: 	jne	.Ltmp2161 # Offset: 5570
    000015c8: 	movzbl	(%rbp), %eax
    000015cc: 	movb	%al, 0x10(%rbx)
.Ltmp2213:
    000015cf: 	movq	%r12, 0x8(%rbx)
    000015d3: 	movb	$0x0, (%rdi,%r12)
    000015d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015e6: 	addq	$0x20, %rax
    000015ea: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000015f1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000015f8: 	je	.Ltmp2162 # Offset: 5624
.Ltmp2212:
    000015fe: 	movq	-0x20(%rax), %rbp
    00001602: 	callq	clock@PLT # Offset: 5634
    00001607: 	pxor	%xmm0, %xmm0
    0000160b: 	movq	%rax, end_time(%rip)
    00001612: 	movq	%rbp, %rdi
    00001615: 	subq	start_time(%rip), %rax
    0000161c: 	cvtsi2sd	%rax, %xmm0
    00001621: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001629: 	callq	_Z13record_resultdPKc # Offset: 5673
    0000162e: 	movq	0xb0(%rsp), %rdi
    00001636: 	cmpq	(%rsp), %rdi
    0000163a: 	je	.Ltmp2163 # Offset: 5690
    0000163c: 	movq	0xc0(%rsp), %rax
    00001644: 	leaq	0x1(%rax), %rsi
    00001648: 	callq	_ZdlPvm@PLT # Offset: 5704
.Ltmp2163:
    0000164d: 	movq	0x10(%rsp), %rsi
    00001652: 	leaq	DATAat0x1c2e7(%rip), %rdx
    00001659: 	movq	%r13, %rdi
    0000165c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5724
    00001661: 	callq	clock@PLT # Offset: 5729
    00001666: 	movl	iterations(%rip), %edx
    0000166c: 	movq	%rax, start_time(%rip)
    00001673: 	testl	%edx, %edx
    00001675: 	jle	.Ltmp2164 # Offset: 5749
    00001677: 	movq	0x180(%rsp,%r14), %rax
    0000167f: 	xorl	%ebx, %ebx
    00001681: 	leaq	DATAat0x1c1c8(%rip), %r12
    00001688: 	movq	0x270(%rsp,%rax,8), %rax
    00001690: 	movq	0x180(%rsp,%rax,8), %rax
    00001698: 	movq	0x270(%rsp,%rax,8), %rax
    000016a0: 	movq	0x180(%rsp,%rax,8), %rax
    000016a8: 	movl	0x100(%rsp,%rax,4), %ebp
    000016af: 	nop # Size: 1
.Ltmp2184:
    000016b0: 	cmpl	%ebp, init_value(%rip)
    000016b6: 	jne	.Ltmp2165 # Offset: 5814
.Ltmp2164:
    000016bc: 	movq	%r13, %rsi
    000016bf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016c6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5830
    000016cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016d2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016e0: 	je	.Ltmp2166 # Offset: 5856
.Ltmp2211:
    000016e6: 	movq	-0x20(%rax), %rbp
    000016ea: 	callq	clock@PLT # Offset: 5866
    000016ef: 	pxor	%xmm0, %xmm0
    000016f3: 	movq	%rax, end_time(%rip)
    000016fa: 	movq	%rbp, %rdi
    000016fd: 	subq	start_time(%rip), %rax
    00001704: 	cvtsi2sd	%rax, %xmm0
    00001709: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001711: 	callq	_Z13record_resultdPKc # Offset: 5905
    00001716: 	movq	0xb0(%rsp), %rdi
    0000171e: 	cmpq	(%rsp), %rdi
    00001722: 	je	.Ltmp2167 # Offset: 5922
    00001724: 	movq	0xc0(%rsp), %rax
    0000172c: 	leaq	0x1(%rax), %rsi
    00001730: 	callq	_ZdlPvm@PLT # Offset: 5936
.Ltmp2167:
    00001735: 	movq	0x10(%rsp), %rsi
    0000173a: 	leaq	DATAat0x1c301(%rip), %rdx
    00001741: 	movq	%r13, %rdi
    00001744: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5956
    00001749: 	callq	clock@PLT # Offset: 5961
    0000174e: 	movq	%rax, start_time(%rip)
    00001755: 	movl	iterations(%rip), %eax
    0000175b: 	testl	%eax, %eax
    0000175d: 	jle	.Ltmp2168 # Offset: 5981
    0000175f: 	movq	0x180(%rsp,%r14), %rax
    00001767: 	xorl	%ebx, %ebx
    00001769: 	leaq	DATAat0x1c1c8(%rip), %r12
    00001770: 	movq	0x270(%rsp,%rax,8), %rax
    00001778: 	movq	0x180(%rsp,%rax,8), %rax
    00001780: 	movq	0x270(%rsp,%rax,8), %rax
    00001788: 	movq	0x180(%rsp,%rax,8), %rax
    00001790: 	movl	0x100(%rsp,%rax,4), %ebp
.Ltmp2181:
    00001797: 	cmpl	%ebp, init_value(%rip)
    0000179d: 	jne	.Ltmp2169 # Offset: 6045
.Ltmp2168:
    000017a3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017b1: 	subq	$0x20, %rax
    000017b5: 	cmpq	%rax, %rbx
    000017b8: 	je	.Ltmp2170 # Offset: 6072
    000017be: 	leaq	0x10(%rbx), %rdi
    000017c2: 	movq	0xb8(%rsp), %r12
    000017ca: 	movq	%rdi, (%rbx)
    000017cd: 	movq	0xb0(%rsp), %rbp
    000017d5: 	movq	%rbp, %rax
    000017d8: 	addq	%r12, %rax
    000017db: 	je	.Ltmp2171 # Offset: 6107
    000017dd: 	testq	%rbp, %rbp
    000017e0: 	je	.Ltmp2172 # Offset: 6112
.Ltmp2171:
    000017e6: 	movq	%r12, 0x48(%rsp)
    000017eb: 	cmpq	$0xf, %r12
    000017ef: 	ja	.Ltmp2173 # Offset: 6127
    000017f5: 	cmpq	$0x1, %r12
    000017f9: 	jne	.Ltmp2174 # Offset: 6137
    000017ff: 	movzbl	(%rbp), %eax
    00001803: 	movb	%al, 0x10(%rbx)
.Ltmp2229:
    00001806: 	movq	%r12, 0x8(%rbx)
    0000180a: 	movb	$0x0, (%rdi,%r12)
    0000180f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001816: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000181d: 	addq	$0x20, %rax
    00001821: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001828: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000182f: 	je	.Ltmp2175 # Offset: 6191
.Ltmp2194:
    00001835: 	movq	-0x20(%rax), %rbp
    00001839: 	callq	clock@PLT # Offset: 6201
    0000183e: 	pxor	%xmm0, %xmm0
    00001842: 	movq	%rax, end_time(%rip)
    00001849: 	movq	%rbp, %rdi
    0000184c: 	subq	start_time(%rip), %rax
    00001853: 	cvtsi2sd	%rax, %xmm0
    00001858: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001860: 	callq	_Z13record_resultdPKc # Offset: 6240
    00001865: 	movq	0xb0(%rsp), %rdi
    0000186d: 	cmpq	(%rsp), %rdi
    00001871: 	je	.Ltmp2176 # Offset: 6257
    00001873: 	movq	0xc0(%rsp), %rax
    0000187b: 	leaq	0x1(%rax), %rsi
    0000187f: 	callq	_ZdlPvm@PLT # Offset: 6271
.Ltmp2176:
    00001884: 	movq	0x10(%rsp), %rsi
    00001889: 	leaq	DATAat0x1c31b(%rip), %rdx
    00001890: 	movq	%r13, %rdi
    00001893: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6291
    00001898: 	movl	iterations(%rip), %edx
    0000189e: 	xorl	%r8d, %r8d
    000018a1: 	xorl	%ecx, %ecx
    000018a3: 	movl	$0x1f40, %esi
    000018a8: 	movq	0xb0(%rsp), %rdi
    000018b0: 	callq	_Z9summarizePKciiii # Offset: 6320
    000018b5: 	movq	0xb0(%rsp), %rdi
    000018bd: 	cmpq	(%rsp), %rdi
    000018c1: 	je	.Ltmp2177 # Offset: 6337
    000018c3: 	movq	0xc0(%rsp), %rax
    000018cb: 	leaq	0x1(%rax), %rsi
    000018cf: 	callq	_ZdlPvm@PLT # Offset: 6351
.Ltmp2177:
    000018d4: 	movq	0x90(%rsp), %rdi
    000018dc: 	cmpq	0x28(%rsp), %rdi
    000018e1: 	je	.Ltmp2178 # Offset: 6369
    000018e3: 	movq	0xa0(%rsp), %rax
    000018eb: 	leaq	0x1(%rax), %rsi
    000018ef: 	callq	_ZdlPvm@PLT # Offset: 6383
.Ltmp2178:
    000018f4: 	movq	0x8068(%rsp), %rax
    000018fc: 	subq	%fs:0x28, %rax
    00001905: 	jne	.Ltmp2179 # Offset: 6405
    0000190b: 	addq	$0x8078, %rsp
    00001912: 	popq	%rbx
    00001913: 	popq	%rbp
    00001914: 	popq	%r12
    00001916: 	popq	%r13
    00001918: 	popq	%r14
    0000191a: 	popq	%r15
    0000191c: 	retq # Offset: 6428
.Ltmp2042:
    0000191d: 	leaq	0x48(%rsp), %rsi
    00001922: 	xorl	%edx, %edx
    00001924: 	movq	%r15, %rdi
    00001927: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6439
    0000192c: 	movq	%rax, (%r15)
    0000192f: 	movq	%rax, %rdi
    00001932: 	movq	0x48(%rsp), %rax
    00001937: 	movq	%rax, 0x10(%r15)
.Ltmp2232:
    0000193b: 	movq	(%rsp), %rsi
    0000193f: 	movq	%r14, %rdx
    00001942: 	callq	memcpy@PLT # Offset: 6466
    00001947: 	movq	0x48(%rsp), %r14
    0000194c: 	movq	(%r15), %rdi
    0000194f: 	jmp	.Ltmp2180 # Offset: 6479
    00001954: 	nopl	(%rax) # Size: 4
.Ltmp2169:
    00001958: 	movq	0xb0(%rsp), %rdx
    00001960: 	movq	%r12, %rsi
    00001963: 	movl	$0x1, %edi
    00001968: 	xorl	%eax, %eax
    0000196a: 	callq	__printf_chk@PLT # Offset: 6506
    0000196f: 	addl	$0x1, %ebx
    00001972: 	cmpl	iterations(%rip), %ebx
    00001978: 	jl	.Ltmp2181 # Offset: 6520
    0000197e: 	jmp	.Ltmp2168 # Offset: 6526
    00001983: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2097:
    00001988: 	movq	0xb0(%rsp), %rdx
    00001990: 	movq	%rbp, %rsi
    00001993: 	movl	$0x1, %edi
    00001998: 	xorl	%eax, %eax
    0000199a: 	callq	__printf_chk@PLT # Offset: 6554
    0000199f: 	addl	$0x1, %ebx
    000019a2: 	cmpl	iterations(%rip), %ebx
    000019a8: 	jl	.Ltmp2182 # Offset: 6568
    000019ae: 	jmp	.Ltmp2096 # Offset: 6574
    000019b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2106:
    000019b8: 	movq	0xb0(%rsp), %rdx
    000019c0: 	movq	%rbp, %rsi
    000019c3: 	movl	$0x1, %edi
    000019c8: 	xorl	%eax, %eax
    000019ca: 	callq	__printf_chk@PLT # Offset: 6602
    000019cf: 	addl	$0x1, %ebx
    000019d2: 	cmpl	iterations(%rip), %ebx
    000019d8: 	jl	.Ltmp2183 # Offset: 6616
    000019de: 	jmp	.Ltmp2105 # Offset: 6622
    000019e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2165:
    000019e8: 	movq	0xb0(%rsp), %rdx
    000019f0: 	movq	%r12, %rsi
    000019f3: 	movl	$0x1, %edi
    000019f8: 	xorl	%eax, %eax
    000019fa: 	callq	__printf_chk@PLT # Offset: 6650
    000019ff: 	addl	$0x1, %ebx
    00001a02: 	cmpl	iterations(%rip), %ebx
    00001a08: 	jl	.Ltmp2184 # Offset: 6664
    00001a0e: 	jmp	.Ltmp2164 # Offset: 6670
    00001a13: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2156:
    00001a18: 	movq	0xb0(%rsp), %rdx
    00001a20: 	movq	%r12, %rsi
    00001a23: 	movl	$0x1, %edi
    00001a28: 	xorl	%eax, %eax
    00001a2a: 	callq	__printf_chk@PLT # Offset: 6698
    00001a2f: 	addl	$0x1, %ebx
    00001a32: 	cmpl	iterations(%rip), %ebx
    00001a38: 	jl	.Ltmp2185 # Offset: 6712
    00001a3e: 	jmp	.Ltmp2155 # Offset: 6718
    00001a43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2146:
    00001a48: 	movq	0xb0(%rsp), %rdx
    00001a50: 	movq	%r12, %rsi
    00001a53: 	movl	$0x1, %edi
    00001a58: 	xorl	%eax, %eax
    00001a5a: 	callq	__printf_chk@PLT # Offset: 6746
    00001a5f: 	addl	$0x1, %ebp
    00001a62: 	cmpl	iterations(%rip), %ebp
    00001a68: 	jl	.Ltmp2186 # Offset: 6760
    00001a6e: 	jmp	.Ltmp2145 # Offset: 6766
    00001a73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2119:
    00001a78: 	movq	0xb0(%rsp), %rdx
    00001a80: 	movq	%rbp, %rsi
    00001a83: 	movl	$0x1, %edi
    00001a88: 	xorl	%eax, %eax
    00001a8a: 	callq	__printf_chk@PLT # Offset: 6794
    00001a8f: 	addl	$0x1, %ebx
    00001a92: 	cmpl	iterations(%rip), %ebx
    00001a98: 	jl	.Ltmp2187 # Offset: 6808
    00001a9e: 	jmp	.Ltmp2118 # Offset: 6814
    00001aa3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2110:
    00001aa8: 	movq	0xb0(%rsp), %rdx
    00001ab0: 	movq	%rbp, %rsi
    00001ab3: 	movl	$0x1, %edi
    00001ab8: 	xorl	%eax, %eax
    00001aba: 	callq	__printf_chk@PLT # Offset: 6842
    00001abf: 	addl	$0x1, %ebx
    00001ac2: 	cmpl	iterations(%rip), %ebx
    00001ac8: 	jl	.Ltmp2188 # Offset: 6856
    00001ace: 	jmp	.Ltmp2109 # Offset: 6862
    00001ad3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2115:
    00001ad8: 	movq	0xb0(%rsp), %rdx
    00001ae0: 	movq	%rbp, %rsi
    00001ae3: 	movl	$0x1, %edi
    00001ae8: 	xorl	%eax, %eax
    00001aea: 	callq	__printf_chk@PLT # Offset: 6890
    00001aef: 	addl	$0x1, %ebx
    00001af2: 	cmpl	iterations(%rip), %ebx
    00001af8: 	jl	.Ltmp2189 # Offset: 6904
    00001afe: 	jmp	.Ltmp2114 # Offset: 6910
    00001b03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2128:
    00001b08: 	movq	0xb0(%rsp), %rdx
    00001b10: 	movq	%r12, %rsi
    00001b13: 	movl	$0x1, %edi
    00001b18: 	xorl	%eax, %eax
    00001b1a: 	callq	__printf_chk@PLT # Offset: 6938
    00001b1f: 	addl	$0x1, %ebp
    00001b22: 	cmpl	iterations(%rip), %ebp
    00001b28: 	jl	.Ltmp2190 # Offset: 6952
    00001b2e: 	jmp	.Ltmp2127 # Offset: 6958
    00001b33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2137:
    00001b38: 	movq	0xb0(%rsp), %rdx
    00001b40: 	movq	%r12, %rsi
    00001b43: 	movl	$0x1, %edi
    00001b48: 	xorl	%eax, %eax
    00001b4a: 	callq	__printf_chk@PLT # Offset: 6986
    00001b4f: 	addl	$0x1, %ebp
    00001b52: 	cmpl	iterations(%rip), %ebp
    00001b58: 	jl	.Ltmp2191 # Offset: 7000
    00001b5e: 	jmp	.Ltmp2136 # Offset: 7006
.Ltmp2125:
    00001b63: 	movq	-0x8(%rdx), %rax
    00001b67: 	addq	$0x200, %rax
    00001b6d: 	jmp	.Ltmp2192 # Offset: 7021
.Ltmp2129:
    00001b72: 	movq	%r13, %rsi
    00001b75: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b7c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7036
    00001b81: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b88: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b8f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b96: 	jne	.Ltmp2193 # Offset: 7062
.Ltmp2134:
    00001b9c: 	movq	-0x8(%rdx), %rax
    00001ba0: 	addq	$0x200, %rax
    00001ba6: 	jmp	.Ltmp2193 # Offset: 7078
.Ltmp2170:
    00001bab: 	movq	%r13, %rsi
    00001bae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bb5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7093
    00001bba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bc1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bc8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bcf: 	jne	.Ltmp2194 # Offset: 7119
.Ltmp2175:
    00001bd5: 	movq	-0x8(%rdx), %rax
    00001bd9: 	addq	$0x200, %rax
    00001bdf: 	jmp	.Ltmp2194 # Offset: 7135
.Ltmp2039:
    00001be4: 	movq	%r13, %rsi
    00001be7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bee: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7150
    00001bf3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bfa: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c01: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c08: 	jne	.Ltmp2195 # Offset: 7176
.Ltmp2044:
    00001c0e: 	movq	-0x8(%rdx), %rax
    00001c12: 	addq	$0x200, %rax
    00001c18: 	jmp	.Ltmp2195 # Offset: 7192
.Ltmp2061:
    00001c1d: 	movq	%r13, %rsi
    00001c20: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7207
    00001c2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c33: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c41: 	jne	.Ltmp2196 # Offset: 7233
.Ltmp2066:
    00001c47: 	movq	-0x8(%rdx), %rax
    00001c4b: 	addq	$0x200, %rax
    00001c51: 	jmp	.Ltmp2196 # Offset: 7249
.Ltmp2055:
    00001c56: 	movq	-0x8(%rdx), %rax
    00001c5a: 	addq	$0x200, %rax
    00001c60: 	jmp	.Ltmp2197 # Offset: 7264
.Ltmp2050:
    00001c65: 	movq	%r13, %rsi
    00001c68: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c6f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7279
    00001c74: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c7b: 	jmp	.Ltmp2198 # Offset: 7291
.Ltmp2089:
    00001c80: 	movq	%r13, %rsi
    00001c83: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c8a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7306
    00001c8f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c96: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c9d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ca4: 	jne	.Ltmp2199 # Offset: 7332
.Ltmp2094:
    00001caa: 	movq	-0x8(%rdx), %rax
    00001cae: 	addq	$0x200, %rax
    00001cb4: 	jmp	.Ltmp2199 # Offset: 7348
.Ltmp2083:
    00001cb9: 	movq	-0x8(%rdx), %rax
    00001cbd: 	addq	$0x200, %rax
    00001cc3: 	jmp	.Ltmp2200 # Offset: 7363
.Ltmp2078:
    00001cc8: 	movq	%r13, %rsi
    00001ccb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cd2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7378
    00001cd7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cde: 	jmp	.Ltmp2201 # Offset: 7390
.Ltmp2072:
    00001ce3: 	movq	-0x8(%rdx), %rax
    00001ce7: 	addq	$0x200, %rax
    00001ced: 	jmp	.Ltmp2202 # Offset: 7405
.Ltmp2107:
    00001cf2: 	movq	-0x8(%rdx), %rax
    00001cf6: 	addq	$0x200, %rax
    00001cfc: 	jmp	.Ltmp2203 # Offset: 7420
.Ltmp2111:
    00001d01: 	movq	-0x8(%rdx), %rax
    00001d05: 	addq	$0x200, %rax
    00001d0b: 	jmp	.Ltmp2204 # Offset: 7435
.Ltmp2147:
    00001d10: 	movq	%r13, %rsi
    00001d13: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d1a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7450
    00001d1f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d26: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d2d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d34: 	jne	.Ltmp2205 # Offset: 7476
.Ltmp2152:
    00001d3a: 	movq	-0x8(%rdx), %rax
    00001d3e: 	addq	$0x200, %rax
    00001d44: 	jmp	.Ltmp2205 # Offset: 7492
.Ltmp2116:
    00001d49: 	movq	-0x8(%rdx), %rax
    00001d4d: 	addq	$0x200, %rax
    00001d53: 	jmp	.Ltmp2206 # Offset: 7507
.Ltmp2120:
    00001d58: 	movq	%r13, %rsi
    00001d5b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d62: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7522
    00001d67: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d6e: 	jmp	.Ltmp2207 # Offset: 7534
.Ltmp2098:
    00001d73: 	movq	%r13, %rsi
    00001d76: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7549
    00001d82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d89: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d90: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d97: 	jne	.Ltmp2208 # Offset: 7575
.Ltmp2103:
    00001d9d: 	movq	-0x8(%rdx), %rax
    00001da1: 	addq	$0x200, %rax
    00001da7: 	jmp	.Ltmp2208 # Offset: 7591
.Ltmp2143:
    00001dac: 	movq	-0x8(%rdx), %rax
    00001db0: 	addq	$0x200, %rax
    00001db6: 	jmp	.Ltmp2209 # Offset: 7606
.Ltmp2138:
    00001dbb: 	movq	%r13, %rsi
    00001dbe: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dc5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7621
    00001dca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dd1: 	jmp	.Ltmp2210 # Offset: 7633
.Ltmp2166:
    00001dd6: 	movq	-0x8(%rdx), %rax
    00001dda: 	addq	$0x200, %rax
    00001de0: 	jmp	.Ltmp2211 # Offset: 7648
.Ltmp2157:
    00001de5: 	movq	%r13, %rsi
    00001de8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001def: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7663
    00001df4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dfb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001e02: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e09: 	jne	.Ltmp2212 # Offset: 7689
.Ltmp2162:
    00001e0f: 	movq	-0x8(%rdx), %rax
    00001e13: 	addq	$0x200, %rax
    00001e19: 	jmp	.Ltmp2212 # Offset: 7705
.Ltmp2161:
    00001e1e: 	testq	%r12, %r12
    00001e21: 	je	.Ltmp2213 # Offset: 7713
.Ltmp2233:
    00001e27: 	movq	%r12, %rdx
    00001e2a: 	movq	%rbp, %rsi
    00001e2d: 	callq	memcpy@PLT # Offset: 7725
    00001e32: 	movq	0x48(%rsp), %r12
    00001e37: 	movq	(%rbx), %rdi
    00001e3a: 	jmp	.Ltmp2213 # Offset: 7738
.Ltmp2142:
    00001e3f: 	testq	%r12, %r12
    00001e42: 	je	.Ltmp2214 # Offset: 7746
    00001e48: 	jmp	.Ltmp2215 # Offset: 7752
    00001e4d: 	nopl	(%rax) # Size: 3
.Ltmp2102:
    00001e50: 	testq	%r14, %r14
    00001e53: 	je	.Ltmp2216 # Offset: 7763
    00001e59: 	jmp	.Ltmp2217 # Offset: 7769
    00001e5e: 	nop # Size: 2
.Ltmp2093:
    00001e60: 	testq	%r14, %r14
    00001e63: 	je	.Ltmp2218 # Offset: 7779
.Ltmp2234:
    00001e69: 	movq	%r14, %rdx
    00001e6c: 	movq	%rbp, %rsi
    00001e6f: 	callq	memcpy@PLT # Offset: 7791
    00001e74: 	movq	0x48(%rsp), %r14
    00001e79: 	movq	(%rbx), %rdi
    00001e7c: 	jmp	.Ltmp2218 # Offset: 7804
.Ltmp2065:
    00001e81: 	testq	%r15, %r15
    00001e84: 	je	.Ltmp2219 # Offset: 7812
    00001e8a: 	jmp	.Ltmp2220 # Offset: 7818
    00001e8f: 	nop # Size: 1
.Ltmp2133:
    00001e90: 	testq	%r12, %r12
    00001e93: 	je	.Ltmp2221 # Offset: 7827
    00001e99: 	jmp	.Ltmp2222 # Offset: 7833
    00001e9e: 	nop # Size: 2
.Ltmp2082:
    00001ea0: 	testq	%r15, %r15
    00001ea3: 	je	.Ltmp2223 # Offset: 7843
    00001ea9: 	jmp	.Ltmp2224 # Offset: 7849
    00001eae: 	nop # Size: 2
.Ltmp2124:
    00001eb0: 	testq	%r12, %r12
    00001eb3: 	je	.Ltmp2225 # Offset: 7859
    00001eb9: 	jmp	.Ltmp2226 # Offset: 7865
    00001ebe: 	nop # Size: 2
.Ltmp2054:
    00001ec0: 	testq	%r15, %r15
    00001ec3: 	je	.Ltmp2227 # Offset: 7875
    00001ec9: 	jmp	.Ltmp2228 # Offset: 7881
    00001ece: 	nop # Size: 2
.Ltmp2174:
    00001ed0: 	testq	%r12, %r12
    00001ed3: 	je	.Ltmp2229 # Offset: 7891
    00001ed9: 	jmp	.Ltmp2230 # Offset: 7897
    00001ede: 	nop # Size: 2
.Ltmp2151:
    00001ee0: 	testq	%r12, %r12
    00001ee3: 	je	.Ltmp2231 # Offset: 7907
.Ltmp2235:
    00001ee9: 	movq	%r12, %rdx
    00001eec: 	movq	%rbp, %rsi
    00001eef: 	callq	memcpy@PLT # Offset: 7919
    00001ef4: 	movq	0x48(%rsp), %r12
    00001ef9: 	movq	(%rbx), %rdi
    00001efc: 	jmp	.Ltmp2231 # Offset: 7932
.Ltmp2043:
    00001f01: 	testq	%r14, %r14
    00001f04: 	je	.Ltmp2180 # Offset: 7940
    00001f0a: 	jmp	.Ltmp2232 # Offset: 7946
    00001f0f: 	nop # Size: 1
.Ltmp2081:
    00001f10: 	leaq	0x48(%rsp), %rsi
    00001f15: 	xorl	%edx, %edx
    00001f17: 	movq	%r14, %rdi
    00001f1a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7962
    00001f1f: 	movq	%rax, (%r14)
    00001f22: 	movq	%rax, %rdi
    00001f25: 	movq	0x48(%rsp), %rax
    00001f2a: 	movq	%rax, 0x10(%r14)
.Ltmp2224:
    00001f2e: 	movq	0x38(%rsp), %rsi
    00001f33: 	movq	%r15, %rdx
    00001f36: 	callq	memcpy@PLT # Offset: 7990
    00001f3b: 	movq	0x48(%rsp), %r15
    00001f40: 	movq	(%r14), %rdi
    00001f43: 	jmp	.Ltmp2223 # Offset: 8003
.Ltmp2141:
    00001f48: 	leaq	0x48(%rsp), %rsi
    00001f4d: 	xorl	%edx, %edx
    00001f4f: 	movq	%rbp, %rdi
    00001f52: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8018
    00001f57: 	movq	%rax, (%rbp)
    00001f5b: 	movq	%rax, %rdi
    00001f5e: 	movq	0x48(%rsp), %rax
    00001f63: 	movq	%rax, 0x10(%rbp)
.Ltmp2215:
    00001f67: 	movq	%r12, %rdx
    00001f6a: 	movq	%r15, %rsi
    00001f6d: 	callq	memcpy@PLT # Offset: 8045
    00001f72: 	movq	0x48(%rsp), %r12
    00001f77: 	movq	(%rbp), %rdi
    00001f7b: 	jmp	.Ltmp2214 # Offset: 8059
.Ltmp2101:
    00001f80: 	leaq	0x48(%rsp), %rsi
    00001f85: 	xorl	%edx, %edx
    00001f87: 	movq	%rbx, %rdi
    00001f8a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8074
    00001f8f: 	movq	%rax, (%rbx)
    00001f92: 	movq	%rax, %rdi
    00001f95: 	movq	0x48(%rsp), %rax
    00001f9a: 	movq	%rax, 0x10(%rbx)
.Ltmp2217:
    00001f9e: 	movq	%r14, %rdx
    00001fa1: 	movq	%rbp, %rsi
    00001fa4: 	callq	memcpy@PLT # Offset: 8100
    00001fa9: 	movq	0x48(%rsp), %r14
    00001fae: 	movq	(%rbx), %rdi
    00001fb1: 	jmp	.Ltmp2216 # Offset: 8113
.Ltmp2160:
    00001fb6: 	leaq	0x48(%rsp), %rsi
    00001fbb: 	xorl	%edx, %edx
    00001fbd: 	movq	%rbx, %rdi
    00001fc0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8128
    00001fc5: 	movq	%rax, (%rbx)
    00001fc8: 	movq	%rax, %rdi
    00001fcb: 	movq	0x48(%rsp), %rax
    00001fd0: 	movq	%rax, 0x10(%rbx)
    00001fd4: 	jmp	.Ltmp2233 # Offset: 8148
.Ltmp2123:
    00001fd9: 	leaq	0x48(%rsp), %rsi
    00001fde: 	xorl	%edx, %edx
    00001fe0: 	movq	%rbx, %rdi
    00001fe3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8163
    00001fe8: 	movq	%rax, (%rbx)
    00001feb: 	movq	%rax, %rdi
    00001fee: 	movq	0x48(%rsp), %rax
    00001ff3: 	movq	%rax, 0x10(%rbx)
.Ltmp2226:
    00001ff7: 	movq	%r12, %rdx
    00001ffa: 	movq	%rbp, %rsi
    00001ffd: 	callq	memcpy@PLT # Offset: 8189
    00002002: 	movq	0x48(%rsp), %r12
    00002007: 	movq	(%rbx), %rdi
    0000200a: 	jmp	.Ltmp2225 # Offset: 8202
.Ltmp2064:
    0000200f: 	leaq	0x48(%rsp), %rsi
    00002014: 	xorl	%edx, %edx
    00002016: 	movq	%r14, %rdi
    00002019: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8217
    0000201e: 	movq	%rax, (%r14)
    00002021: 	movq	%rax, %rdi
    00002024: 	movq	0x48(%rsp), %rax
    00002029: 	movq	%rax, 0x10(%r14)
.Ltmp2220:
    0000202d: 	movq	0x38(%rsp), %rsi
    00002032: 	movq	%r15, %rdx
    00002035: 	callq	memcpy@PLT # Offset: 8245
    0000203a: 	movq	0x48(%rsp), %r15
    0000203f: 	movq	(%r14), %rdi
    00002042: 	jmp	.Ltmp2219 # Offset: 8258
.Ltmp2053:
    00002047: 	leaq	0x48(%rsp), %rsi
    0000204c: 	xorl	%edx, %edx
    0000204e: 	movq	%r14, %rdi
    00002051: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8273
    00002056: 	movq	%rax, (%r14)
    00002059: 	movq	%rax, %rdi
    0000205c: 	movq	0x48(%rsp), %rax
    00002061: 	movq	%rax, 0x10(%r14)
.Ltmp2228:
    00002065: 	movq	0x38(%rsp), %rsi
    0000206a: 	movq	%r15, %rdx
    0000206d: 	callq	memcpy@PLT # Offset: 8301
    00002072: 	movq	0x48(%rsp), %r15
    00002077: 	movq	(%r14), %rdi
    0000207a: 	jmp	.Ltmp2227 # Offset: 8314
.Ltmp2173:
    0000207f: 	leaq	0x48(%rsp), %rsi
    00002084: 	xorl	%edx, %edx
    00002086: 	movq	%rbx, %rdi
    00002089: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8329
    0000208e: 	movq	%rax, (%rbx)
    00002091: 	movq	%rax, %rdi
    00002094: 	movq	0x48(%rsp), %rax
    00002099: 	movq	%rax, 0x10(%rbx)
.Ltmp2230:
    0000209d: 	movq	%r12, %rdx
    000020a0: 	movq	%rbp, %rsi
    000020a3: 	callq	memcpy@PLT # Offset: 8355
    000020a8: 	movq	0x48(%rsp), %r12
    000020ad: 	movq	(%rbx), %rdi
    000020b0: 	jmp	.Ltmp2229 # Offset: 8368
.Ltmp2132:
    000020b5: 	leaq	0x48(%rsp), %rsi
    000020ba: 	xorl	%edx, %edx
    000020bc: 	movq	%rbp, %rdi
    000020bf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8383
    000020c4: 	movq	%rax, (%rbp)
    000020c8: 	movq	%rax, %rdi
    000020cb: 	movq	0x48(%rsp), %rax
    000020d0: 	movq	%rax, 0x10(%rbp)
.Ltmp2222:
    000020d4: 	movq	%r12, %rdx
    000020d7: 	movq	%r15, %rsi
    000020da: 	callq	memcpy@PLT # Offset: 8410
    000020df: 	movq	0x48(%rsp), %r12
    000020e4: 	movq	(%rbp), %rdi
    000020e8: 	jmp	.Ltmp2221 # Offset: 8424
.Ltmp2092:
    000020ed: 	leaq	0x48(%rsp), %rsi
    000020f2: 	xorl	%edx, %edx
    000020f4: 	movq	%rbx, %rdi
    000020f7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8439
    000020fc: 	movq	%rax, (%rbx)
    000020ff: 	movq	%rax, %rdi
    00002102: 	movq	0x48(%rsp), %rax
    00002107: 	movq	%rax, 0x10(%rbx)
    0000210b: 	jmp	.Ltmp2234 # Offset: 8459
.Ltmp2150:
    00002110: 	leaq	0x48(%rsp), %rsi
    00002115: 	xorl	%edx, %edx
    00002117: 	movq	%rbx, %rdi
    0000211a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8474
    0000211f: 	movq	%rax, (%rbx)
    00002122: 	movq	%rax, %rdi
    00002125: 	movq	0x48(%rsp), %rax
    0000212a: 	movq	%rax, 0x10(%rbx)
    0000212e: 	jmp	.Ltmp2235 # Offset: 8494
.Ltmp2052:
    00002133: 	leaq	DATAat0x1c158(%rip), %rdi
    0000213a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8506
.Ltmp2063:
    0000213f: 	leaq	DATAat0x1c158(%rip), %rdi
    00002146: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8518
.Ltmp2080:
    0000214b: 	leaq	DATAat0x1c158(%rip), %rdi
    00002152: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8530
.Ltmp2091:
    00002157: 	leaq	DATAat0x1c158(%rip), %rdi
    0000215e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8542
.Ltmp2100:
    00002163: 	leaq	DATAat0x1c158(%rip), %rdi
    0000216a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8554
.Ltmp2122:
    0000216f: 	leaq	DATAat0x1c158(%rip), %rdi
    00002176: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8566
.Ltmp2131:
    0000217b: 	leaq	DATAat0x1c158(%rip), %rdi
    00002182: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8578
.Ltmp2140:
    00002187: 	leaq	DATAat0x1c158(%rip), %rdi
    0000218e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8590
.Ltmp2149:
    00002193: 	leaq	DATAat0x1c158(%rip), %rdi
    0000219a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8602
.Ltmp2159:
    0000219f: 	leaq	DATAat0x1c158(%rip), %rdi
    000021a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8614
.Ltmp2172:
    000021ab: 	leaq	DATAat0x1c158(%rip), %rdi
    000021b2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8626
.Ltmp2179:
    000021b7: 	callq	__stack_chk_fail@PLT # Offset: 8631
.Ltmp2041:
    000021bc: 	leaq	DATAat0x1c158(%rip), %rdi
    000021c3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8643
    000021c8: 	endbr64
.Ltmp2237:
    000021cc: 	movq	%rax, %rbp
    000021cf: 	jmp	.Ltmp2236 # Offset: 8655
    000021d4: 	endbr64
    000021d8: 	jmp	.Ltmp2237 # Offset: 8664
    000021da: 	endbr64
    000021de: 	jmp	.Ltmp2237 # Offset: 8670
    000021e0: 	endbr64
    000021e4: 	jmp	.Ltmp2237 # Offset: 8676
    000021e6: 	endbr64
    000021ea: 	jmp	.Ltmp2237 # Offset: 8682
    000021ec: 	endbr64
    000021f0: 	jmp	.Ltmp2237 # Offset: 8688
    000021f2: 	endbr64
    000021f6: 	jmp	.Ltmp2237 # Offset: 8694
    000021f8: 	endbr64
    000021fc: 	movq	%rax, %rbp
    000021ff: 	jmp	.Ltmp2238 # Offset: 8703
    00002201: 	endbr64
    00002205: 	movq	%rax, %rbp
    00002208: 	jmp	.Ltmp2239 # Offset: 8712
    0000220a: 	endbr64
    0000220e: 	jmp	.Ltmp2237 # Offset: 8718
.Ltmp2238:
    00002210: 	movq	0xb0(%rsp), %rdi
    00002218: 	leaq	0xc0(%rsp), %rax
    00002220: 	cmpq	%rax, %rdi
    00002223: 	je	.Ltmp2239 # Offset: 8739
.Ltmp2241:
    00002225: 	movq	0xc0(%rsp), %rax
    0000222d: 	leaq	0x1(%rax), %rsi
    00002231: 	callq	_ZdlPvm@PLT # Offset: 8753
.Ltmp2239:
    00002236: 	movq	0x90(%rsp), %rdi
    0000223e: 	cmpq	0x28(%rsp), %rdi
    00002243: 	je	.Ltmp2240 # Offset: 8771
    00002245: 	movq	0xa0(%rsp), %rax
    0000224d: 	leaq	0x1(%rax), %rsi
    00002251: 	callq	_ZdlPvm@PLT # Offset: 8785
.Ltmp2240:
    00002256: 	movq	%rbp, %rdi
    00002259: 	callq	_Unwind_Resume@PLT # Offset: 8793
    0000225e: 	endbr64
    00002262: 	jmp	.Ltmp2237 # Offset: 8802
    00002267: 	endbr64
    0000226b: 	jmp	.Ltmp2237 # Offset: 8811
    00002270: 	endbr64
    00002274: 	jmp	.Ltmp2237 # Offset: 8820
    00002279: 	endbr64
    0000227d: 	jmp	.Ltmp2237 # Offset: 8829
    00002282: 	endbr64
    00002286: 	jmp	.Ltmp2237 # Offset: 8838
    0000228b: 	endbr64
    0000228f: 	jmp	.Ltmp2237 # Offset: 8847
    00002294: 	endbr64
    00002298: 	jmp	.Ltmp2237 # Offset: 8856
    0000229d: 	endbr64
    000022a1: 	jmp	.Ltmp2237 # Offset: 8865
    000022a6: 	endbr64
    000022aa: 	jmp	.Ltmp2237 # Offset: 8874
    000022af: 	endbr64
    000022b3: 	jmp	.Ltmp2237 # Offset: 8883
    000022b8: 	endbr64
    000022bc: 	jmp	.Ltmp2237 # Offset: 8892
.Ltmp2236:
    000022c1: 	movq	0xb0(%rsp), %rdi
    000022c9: 	cmpq	(%rsp), %rdi
    000022cd: 	jne	.Ltmp2241 # Offset: 8909
    000022d3: 	jmp	.Ltmp2239 # Offset: 8915
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvT_"

Binary Function "_Z11TestOneTypeIlEvT_" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x196f0
  Size        : 0x22bf
  MaxSize     : 0x22bf
  Offset      : 0x196f0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlEvT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2242:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2242 # Offset: 37
    00000027: 	subq	$0xde8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm3
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003e: 	movq	%fs:0x28, %rax
    00000047: 	movq	%rax, 0xfdd8(%rsp)
    0000004f: 	xorl	%eax, %eax
    00000051: 	movq	%rdi, %r13
    00000054: 	leaq	0x1f0(%rsp), %rax
    0000005c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000063: 	movq	%rax, %xmm0
    00000068: 	leaq	0x100(%rsp), %rax
    00000070: 	movl	$0x36746e69, 0xa0(%rsp)
    0000007b: 	leaq	0x3d0(%rsp), %rbp
    00000083: 	movq	%rax, %xmm2
    00000088: 	leaq	0x2e0(%rsp), %rax
    00000090: 	movb	$0x74, 0xa6(%rsp)
    00000098: 	leaq	0xfdd0(%rsp), %rbx
    000000a0: 	movq	%rax, %xmm1
    000000a5: 	leaq	0xa0(%rsp), %rax
    000000ad: 	punpcklqdq	%xmm0, %xmm2
    000000b1: 	movq	$0x7, 0x98(%rsp)
    000000bd: 	movq	%rax, 0x28(%rsp)
    000000c2: 	punpcklqdq	%xmm0, %xmm1
    000000c6: 	movq	%rax, 0x90(%rsp)
    000000ce: 	movl	$0x5f34, %eax
    000000d3: 	movw	%ax, 0xa4(%rsp)
    000000db: 	leaq	0x70(%rsp), %rax
    000000e0: 	movq	%rax, %rsi
    000000e3: 	movq	%rax, 0x30(%rsp)
    000000e8: 	movaps	%xmm2, 0x10(%rsp)
    000000ed: 	movaps	%xmm1, (%rsp)
    000000f1: 	movb	$0x0, 0xa7(%rsp)
    000000f9: 	movaps	%xmm3, 0x70(%rsp)
    000000fe: 	movaps	%xmm4, 0x80(%rsp)
    00000106: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 262
    0000010b: 	movslq	init_value(%rip), %r12
    00000112: 	movdqa	(%rsp), %xmm1
    00000117: 	movq	%rbp, %rax
    0000011a: 	movdqa	0x10(%rsp), %xmm2
    00000120: 	movq	%r12, %xmm0
    00000125: 	punpcklqdq	%xmm0, %xmm0
    00000129: 	nopl	(%rax) # Size: 7
.Ltmp2243:
    00000130: 	movaps	%xmm0, (%rax)
    00000133: 	addq	$0x10, %rax
    00000137: 	cmpq	%rbx, %rax
    0000013a: 	jne	.Ltmp2243 # Offset: 314
    0000013c: 	leaq	0x50(%rsp), %rax
    00000141: 	leaq	0x2(%r13), %rsi
    00000145: 	movq	%r13, %rdi
    00000148: 	movq	%r12, 0x40(%rsp)
    0000014d: 	movabsq	$-0x7777777777777777, %rcx
    00000157: 	movq	%rax, 0x78(%rsp)
    0000015c: 	leaq	0x60(%rsp), %rax
    00000161: 	movq	%rax, 0x58(%rsp)
    00000166: 	leaq	0x40(%rsp), %rax
    0000016b: 	movq	%rax, 0x68(%rsp)
    00000170: 	movq	%r13, %rax
    00000173: 	mulq	%rcx
    00000176: 	movaps	%xmm0, 0x100(%rsp)
    0000017e: 	movaps	%xmm0, 0x110(%rsp)
    00000186: 	movaps	%xmm0, 0x120(%rsp)
    0000018e: 	movq	%rdx, %rax
    00000191: 	andq	$-0x10, %rdx
    00000195: 	movaps	%xmm0, 0x130(%rsp)
    0000019d: 	shrq	$0x4, %rax
    000001a1: 	movaps	%xmm0, 0x140(%rsp)
    000001a9: 	subq	%rax, %rdx
    000001ac: 	movaps	%xmm0, 0x150(%rsp)
    000001b4: 	leaq	(%rdx,%rdx), %rax
    000001b8: 	movaps	%xmm0, 0x160(%rsp)
    000001c0: 	subq	%rax, %rdi
    000001c3: 	movq	%rsi, %rax
    000001c6: 	movaps	%xmm0, 0x170(%rsp)
    000001ce: 	mulq	%rcx
    000001d1: 	movaps	%xmm0, 0x180(%rsp)
    000001d9: 	movaps	%xmm0, 0x190(%rsp)
    000001e1: 	movaps	%xmm0, 0x1a0(%rsp)
    000001e9: 	movq	%rdx, %rax
    000001ec: 	andq	$-0x10, %rdx
    000001f0: 	movaps	%xmm0, 0x1b0(%rsp)
    000001f8: 	shrq	$0x4, %rax
    000001fc: 	movaps	%xmm0, 0x1c0(%rsp)
    00000204: 	subq	%rax, %rdx
    00000207: 	movq	%rsi, %rax
    0000020a: 	movq	%rdi, 0x20(%rsp)
    0000020f: 	addq	%rdx, %rdx
    00000212: 	movaps	%xmm0, 0x1d0(%rsp)
    0000021a: 	subq	%rdx, %rax
    0000021d: 	movaps	%xmm0, 0x1e0(%rsp)
    00000225: 	movq	%rax, %xmm0
    0000022a: 	leaq	(%r13,%r13), %rax
    0000022f: 	cqto
    00000231: 	punpcklqdq	%xmm0, %xmm0
    00000235: 	idivq	%rsi
    00000238: 	movaps	%xmm0, 0x1f0(%rsp)
    00000240: 	movaps	%xmm0, 0x200(%rsp)
    00000248: 	movaps	%xmm0, 0x210(%rsp)
    00000250: 	movaps	%xmm0, 0x220(%rsp)
    00000258: 	movaps	%xmm0, 0x230(%rsp)
    00000260: 	movaps	%xmm0, 0x240(%rsp)
    00000268: 	movaps	%xmm0, 0x250(%rsp)
    00000270: 	movaps	%xmm0, 0x260(%rsp)
    00000278: 	movaps	%xmm0, 0x270(%rsp)
    00000280: 	movaps	%xmm0, 0x280(%rsp)
    00000288: 	movaps	%xmm0, 0x290(%rsp)
    00000290: 	movaps	%xmm0, 0x2a0(%rsp)
    00000298: 	movaps	%xmm0, 0x2b0(%rsp)
    000002a0: 	movaps	%xmm0, 0x2c0(%rsp)
    000002a8: 	movaps	%xmm0, 0x2d0(%rsp)
    000002b0: 	movaps	%xmm2, 0xd0(%rsp)
    000002b8: 	movaps	%xmm1, 0xe0(%rsp)
    000002c0: 	movaps	%xmm1, 0xf0(%rsp)
    000002c8: 	leaq	(%rax,%r13), %rsi
    000002cc: 	leaq	0xb0(%rsp), %r13
    000002d4: 	movq	%rsi, %rax
    000002d7: 	movq	%r13, %rdi
    000002da: 	mulq	%rcx
    000002dd: 	movq	%rdx, %rax
    000002e0: 	andq	$-0x10, %rdx
    000002e4: 	shrq	$0x4, %rax
    000002e8: 	subq	%rax, %rdx
    000002eb: 	movq	%rsi, %rax
    000002ee: 	addq	%rdx, %rdx
    000002f1: 	subq	%rdx, %rax
    000002f4: 	leaq	DATAat0x1c1d8(%rip), %rdx
    000002fb: 	movq	%rax, %xmm0
    00000300: 	leaq	0x90(%rsp), %rax
    00000308: 	punpcklqdq	%xmm0, %xmm0
    0000030c: 	movq	%rax, %rsi
    0000030f: 	movq	%rax, 0x10(%rsp)
    00000314: 	movaps	%xmm0, 0x2e0(%rsp)
    0000031c: 	movaps	%xmm0, 0x2f0(%rsp)
    00000324: 	movaps	%xmm0, 0x300(%rsp)
    0000032c: 	movaps	%xmm0, 0x310(%rsp)
    00000334: 	movaps	%xmm0, 0x320(%rsp)
    0000033c: 	movaps	%xmm0, 0x330(%rsp)
    00000344: 	movaps	%xmm0, 0x340(%rsp)
    0000034c: 	movaps	%xmm0, 0x350(%rsp)
    00000354: 	movaps	%xmm0, 0x360(%rsp)
    0000035c: 	movaps	%xmm0, 0x370(%rsp)
    00000364: 	movaps	%xmm0, 0x380(%rsp)
    0000036c: 	movaps	%xmm0, 0x390(%rsp)
    00000374: 	movaps	%xmm0, 0x3a0(%rsp)
    0000037c: 	movaps	%xmm0, 0x3b0(%rsp)
    00000384: 	movaps	%xmm0, 0x3c0(%rsp)
    0000038c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 908
    00000391: 	callq	clock@PLT # Offset: 913
    00000396: 	movl	iterations(%rip), %ecx
    0000039c: 	xorl	%r14d, %r14d
    0000039f: 	leaq	DATAat0x1c1c8(%rip), %r15
    000003a6: 	movq	%rax, start_time(%rip)
    000003ad: 	testl	%ecx, %ecx
    000003af: 	jle	.Ltmp2244 # Offset: 943
    000003b1: 	nopl	(%rax) # Size: 7
.Ltmp2247:
    000003b8: 	movq	%rbp, %rax
    000003bb: 	pxor	%xmm0, %xmm0
    000003bf: 	nop # Size: 1
.Ltmp2245:
    000003c0: 	paddq	(%rax), %xmm0
    000003c4: 	addq	$0x10, %rax
    000003c8: 	cmpq	%rbx, %rax
    000003cb: 	jne	.Ltmp2245 # Offset: 971
    000003cd: 	movslq	init_value(%rip), %rdx
    000003d4: 	movdqa	%xmm0, %xmm1
    000003d8: 	psrldq	$0x8, %xmm1
    000003dd: 	imulq	$0x1f40, %rdx, %rdx
    000003e4: 	paddq	%xmm1, %xmm0
    000003e8: 	movq	%xmm0, %rax
    000003ed: 	cmpq	%rax, %rdx
    000003f0: 	je	.Ltmp2246 # Offset: 1008
    000003f2: 	movq	0xb0(%rsp), %rdx
    000003fa: 	movq	%r15, %rsi
    000003fd: 	movl	$0x1, %edi
    00000402: 	xorl	%eax, %eax
    00000404: 	callq	__printf_chk@PLT # Offset: 1028
    00000409: 	movl	iterations(%rip), %ecx
.Ltmp2246:
    0000040f: 	addl	$0x1, %r14d
    00000413: 	cmpl	%ecx, %r14d
    00000416: 	jl	.Ltmp2247 # Offset: 1046
.Ltmp2244:
    00000418: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000041f: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    00000426: 	subq	$0x20, %rax
    0000042a: 	cmpq	%rax, %r15
    0000042d: 	je	.Ltmp2248 # Offset: 1069
    00000433: 	leaq	0x10(%r15), %rdi
    00000437: 	movq	0xb8(%rsp), %r14
    0000043f: 	movq	%rdi, (%r15)
    00000442: 	movq	0xb0(%rsp), %rax
    0000044a: 	movq	%rax, %rsi
    0000044d: 	movq	%rax, (%rsp)
    00000451: 	addq	%r14, %rsi
    00000454: 	je	.Ltmp2249 # Offset: 1108
    00000456: 	testq	%rax, %rax
    00000459: 	je	.Ltmp2250 # Offset: 1113
.Ltmp2249:
    0000045f: 	movq	%r14, 0x48(%rsp)
    00000464: 	cmpq	$0xf, %r14
    00000468: 	ja	.Ltmp2251 # Offset: 1128
    0000046e: 	cmpq	$0x1, %r14
    00000472: 	jne	.Ltmp2252 # Offset: 1138
    00000478: 	movq	(%rsp), %rax
    0000047c: 	movzbl	(%rax), %eax
    0000047f: 	movb	%al, 0x10(%r15)
.Ltmp2389:
    00000483: 	movq	%r14, 0x8(%r15)
    00000487: 	movb	$0x0, (%rdi,%r14)
    0000048c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000493: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000049a: 	addq	$0x20, %rax
    0000049e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004a5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000004ac: 	je	.Ltmp2253 # Offset: 1196
.Ltmp2406:
    000004b2: 	movq	-0x20(%rax), %r14
    000004b6: 	callq	clock@PLT # Offset: 1206
    000004bb: 	pxor	%xmm0, %xmm0
    000004bf: 	movq	%rax, end_time(%rip)
    000004c6: 	movq	%r14, %rdi
    000004c9: 	subq	start_time(%rip), %rax
    000004d0: 	cvtsi2sd	%rax, %xmm0
    000004d5: 	divsd	DATAat0x1c370(%rip), %xmm0
    000004dd: 	callq	_Z13record_resultdPKc # Offset: 1245
    000004e2: 	movq	0xb0(%rsp), %rdi
    000004ea: 	leaq	0xc0(%rsp), %rax
    000004f2: 	movq	%rax, (%rsp)
    000004f6: 	cmpq	%rax, %rdi
    000004f9: 	je	.Ltmp2254 # Offset: 1273
    000004fb: 	movq	0xc0(%rsp), %rax
    00000503: 	leaq	0x1(%rax), %rsi
    00000507: 	callq	_ZdlPvm@PLT # Offset: 1287
.Ltmp2254:
    0000050c: 	movq	0x10(%rsp), %rsi
    00000511: 	leaq	DATAat0x1c1f4(%rip), %rdx
    00000518: 	movq	%r13, %rdi
    0000051b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1307
    00000520: 	callq	clock@PLT # Offset: 1312
    00000525: 	movl	iterations(%rip), %ecx
    0000052b: 	xorl	%r14d, %r14d
    0000052e: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000535: 	movq	%rax, start_time(%rip)
    0000053c: 	testl	%ecx, %ecx
    0000053e: 	jle	.Ltmp2255 # Offset: 1342
.Ltmp2258:
    00000540: 	movq	%rbp, %rax
    00000543: 	pxor	%xmm0, %xmm0
    00000547: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2256:
    00000550: 	paddq	(%rax), %xmm0
    00000554: 	addq	$0x10, %rax
    00000558: 	cmpq	%rbx, %rax
    0000055b: 	jne	.Ltmp2256 # Offset: 1371
    0000055d: 	movslq	init_value(%rip), %rdx
    00000564: 	movdqa	%xmm0, %xmm1
    00000568: 	psrldq	$0x8, %xmm1
    0000056d: 	imulq	$0x1f40, %rdx, %rdx
    00000574: 	paddq	%xmm1, %xmm0
    00000578: 	movq	%xmm0, %rax
    0000057d: 	cmpq	%rax, %rdx
    00000580: 	je	.Ltmp2257 # Offset: 1408
    00000582: 	movq	0xb0(%rsp), %rdx
    0000058a: 	movq	%r15, %rsi
    0000058d: 	movl	$0x1, %edi
    00000592: 	xorl	%eax, %eax
    00000594: 	callq	__printf_chk@PLT # Offset: 1428
    00000599: 	movl	iterations(%rip), %ecx
.Ltmp2257:
    0000059f: 	addl	$0x1, %r14d
    000005a3: 	cmpl	%ecx, %r14d
    000005a6: 	jl	.Ltmp2258 # Offset: 1446
.Ltmp2255:
    000005a8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005af: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000005b6: 	subq	$0x20, %rax
    000005ba: 	cmpq	%rax, %r14
    000005bd: 	je	.Ltmp2259 # Offset: 1469
    000005c3: 	leaq	0x10(%r14), %rdi
    000005c7: 	movq	0xb8(%rsp), %r15
    000005cf: 	movq	%rdi, (%r14)
    000005d2: 	movq	0xb0(%rsp), %rax
    000005da: 	movq	%rax, %rsi
    000005dd: 	movq	%rax, 0x38(%rsp)
    000005e2: 	addq	%r15, %rsi
    000005e5: 	je	.Ltmp2260 # Offset: 1509
    000005e7: 	testq	%rax, %rax
    000005ea: 	je	.Ltmp2261 # Offset: 1514
.Ltmp2260:
    000005f0: 	movq	%r15, 0x48(%rsp)
    000005f5: 	cmpq	$0xf, %r15
    000005f9: 	ja	.Ltmp2262 # Offset: 1529
    000005ff: 	cmpq	$0x1, %r15
    00000603: 	jne	.Ltmp2263 # Offset: 1539
    00000609: 	movq	0x38(%rsp), %rax
    0000060e: 	movzbl	(%rax), %eax
    00000611: 	movb	%al, 0x10(%r14)
.Ltmp2444:
    00000615: 	movq	%r15, 0x8(%r14)
    00000619: 	movb	$0x0, (%rdi,%r15)
    0000061e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000625: 	addq	$0x20, %rax
    00000629: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2409:
    00000630: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000637: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000063e: 	je	.Ltmp2264 # Offset: 1598
.Ltmp2408:
    00000644: 	movq	-0x20(%rax), %r14
    00000648: 	callq	clock@PLT # Offset: 1608
    0000064d: 	pxor	%xmm0, %xmm0
    00000651: 	movq	%rax, end_time(%rip)
    00000658: 	movq	%r14, %rdi
    0000065b: 	subq	start_time(%rip), %rax
    00000662: 	cvtsi2sd	%rax, %xmm0
    00000667: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000066f: 	callq	_Z13record_resultdPKc # Offset: 1647
    00000674: 	movq	0xb0(%rsp), %rdi
    0000067c: 	cmpq	(%rsp), %rdi
    00000680: 	je	.Ltmp2265 # Offset: 1664
    00000682: 	movq	0xc0(%rsp), %rax
    0000068a: 	leaq	0x1(%rax), %rsi
    0000068e: 	callq	_ZdlPvm@PLT # Offset: 1678
.Ltmp2265:
    00000693: 	movq	0x10(%rsp), %rsi
    00000698: 	leaq	DATAat0x1c208(%rip), %rdx
    0000069f: 	movq	%r13, %rdi
    000006a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1698
    000006a7: 	callq	clock@PLT # Offset: 1703
    000006ac: 	movl	iterations(%rip), %ecx
    000006b2: 	xorl	%r14d, %r14d
    000006b5: 	leaq	DATAat0x1c1c8(%rip), %r15
    000006bc: 	movq	%rax, start_time(%rip)
    000006c3: 	testl	%ecx, %ecx
    000006c5: 	jle	.Ltmp2266 # Offset: 1733
    000006c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2269:
    000006d0: 	movq	%rbp, %rax
    000006d3: 	pxor	%xmm0, %xmm0
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2267:
    000006e0: 	paddq	(%rax), %xmm0
    000006e4: 	addq	$0x10, %rax
    000006e8: 	cmpq	%rbx, %rax
    000006eb: 	jne	.Ltmp2267 # Offset: 1771
    000006ed: 	movslq	init_value(%rip), %rdx
    000006f4: 	movdqa	%xmm0, %xmm1
    000006f8: 	psrldq	$0x8, %xmm1
    000006fd: 	imulq	$0x1f40, %rdx, %rdx
    00000704: 	paddq	%xmm1, %xmm0
    00000708: 	movq	%xmm0, %rax
    0000070d: 	cmpq	%rax, %rdx
    00000710: 	je	.Ltmp2268 # Offset: 1808
    00000712: 	movq	0xb0(%rsp), %rdx
    0000071a: 	movq	%r15, %rsi
    0000071d: 	movl	$0x1, %edi
    00000722: 	xorl	%eax, %eax
    00000724: 	callq	__printf_chk@PLT # Offset: 1828
    00000729: 	movl	iterations(%rip), %ecx
.Ltmp2268:
    0000072f: 	addl	$0x1, %r14d
    00000733: 	cmpl	%ecx, %r14d
    00000736: 	jl	.Ltmp2269 # Offset: 1846
.Ltmp2266:
    00000738: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000073f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000746: 	subq	$0x20, %rax
    0000074a: 	cmpq	%rax, %r14
    0000074d: 	je	.Ltmp2270 # Offset: 1869
    00000753: 	leaq	0x10(%r14), %rdi
    00000757: 	movq	0xb8(%rsp), %r15
    0000075f: 	movq	%rdi, (%r14)
    00000762: 	movq	0xb0(%rsp), %rax
    0000076a: 	movq	%rax, %rsi
    0000076d: 	movq	%rax, 0x38(%rsp)
    00000772: 	addq	%r15, %rsi
    00000775: 	je	.Ltmp2271 # Offset: 1909
    00000777: 	testq	%rax, %rax
    0000077a: 	je	.Ltmp2272 # Offset: 1914
.Ltmp2271:
    00000780: 	movq	%r15, 0x48(%rsp)
    00000785: 	cmpq	$0xf, %r15
    00000789: 	ja	.Ltmp2273 # Offset: 1929
    0000078f: 	cmpq	$0x1, %r15
    00000793: 	jne	.Ltmp2274 # Offset: 1939
    00000799: 	movq	0x38(%rsp), %rax
    0000079e: 	movzbl	(%rax), %eax
    000007a1: 	movb	%al, 0x10(%r14)
.Ltmp2439:
    000007a5: 	movq	%r15, 0x8(%r14)
    000007a9: 	movb	$0x0, (%rdi,%r15)
    000007ae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007bc: 	addq	$0x20, %rax
    000007c0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000007c7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000007ce: 	je	.Ltmp2275 # Offset: 1998
.Ltmp2407:
    000007d4: 	movq	-0x20(%rax), %r14
    000007d8: 	callq	clock@PLT # Offset: 2008
    000007dd: 	pxor	%xmm0, %xmm0
    000007e1: 	movq	%rax, end_time(%rip)
    000007e8: 	movq	%r14, %rdi
    000007eb: 	subq	start_time(%rip), %rax
    000007f2: 	cvtsi2sd	%rax, %xmm0
    000007f7: 	divsd	DATAat0x1c370(%rip), %xmm0
    000007ff: 	callq	_Z13record_resultdPKc # Offset: 2047
    00000804: 	movq	0xb0(%rsp), %rdi
    0000080c: 	cmpq	(%rsp), %rdi
    00000810: 	je	.Ltmp2276 # Offset: 2064
    00000812: 	movq	0xc0(%rsp), %rax
    0000081a: 	leaq	0x1(%rax), %rsi
    0000081e: 	callq	_ZdlPvm@PLT # Offset: 2078
.Ltmp2276:
    00000823: 	movq	0x10(%rsp), %rsi
    00000828: 	leaq	DATAat0x1c21d(%rip), %rdx
    0000082f: 	movq	%r13, %rdi
    00000832: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2098
    00000837: 	callq	clock@PLT # Offset: 2103
    0000083c: 	movl	iterations(%rip), %ecx
    00000842: 	xorl	%r14d, %r14d
    00000845: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000084c: 	movq	%rax, start_time(%rip)
    00000853: 	testl	%ecx, %ecx
    00000855: 	jle	.Ltmp2277 # Offset: 2133
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2280:
    00000860: 	movq	%rbp, %rax
    00000863: 	pxor	%xmm0, %xmm0
    00000867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2278:
    00000870: 	paddq	(%rax), %xmm0
    00000874: 	addq	$0x10, %rax
    00000878: 	cmpq	%rbx, %rax
    0000087b: 	jne	.Ltmp2278 # Offset: 2171
    0000087d: 	movslq	init_value(%rip), %rdx
    00000884: 	movdqa	%xmm0, %xmm1
    00000888: 	psrldq	$0x8, %xmm1
    0000088d: 	imulq	$0x1f40, %rdx, %rdx
    00000894: 	paddq	%xmm1, %xmm0
    00000898: 	movq	%xmm0, %rax
    0000089d: 	cmpq	%rax, %rdx
    000008a0: 	je	.Ltmp2279 # Offset: 2208
    000008a2: 	movq	0xb0(%rsp), %rdx
    000008aa: 	movq	%r15, %rsi
    000008ad: 	movl	$0x1, %edi
    000008b2: 	xorl	%eax, %eax
    000008b4: 	callq	__printf_chk@PLT # Offset: 2228
    000008b9: 	movl	iterations(%rip), %ecx
.Ltmp2279:
    000008bf: 	addl	$0x1, %r14d
    000008c3: 	cmpl	%ecx, %r14d
    000008c6: 	jl	.Ltmp2280 # Offset: 2246
.Ltmp2277:
    000008c8: 	movq	%r13, %rsi
    000008cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2258
    000008d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008de: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008ec: 	je	.Ltmp2281 # Offset: 2284
.Ltmp2417:
    000008f2: 	movq	-0x20(%rax), %r14
    000008f6: 	callq	clock@PLT # Offset: 2294
    000008fb: 	pxor	%xmm0, %xmm0
    000008ff: 	movq	%rax, end_time(%rip)
    00000906: 	movq	%r14, %rdi
    00000909: 	subq	start_time(%rip), %rax
    00000910: 	cvtsi2sd	%rax, %xmm0
    00000915: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000091d: 	callq	_Z13record_resultdPKc # Offset: 2333
    00000922: 	movq	0xb0(%rsp), %rdi
    0000092a: 	cmpq	(%rsp), %rdi
    0000092e: 	je	.Ltmp2282 # Offset: 2350
    00000930: 	movq	0xc0(%rsp), %rax
    00000938: 	leaq	0x1(%rax), %rsi
    0000093c: 	callq	_ZdlPvm@PLT # Offset: 2364
.Ltmp2282:
    00000941: 	movq	0x10(%rsp), %rsi
    00000946: 	leaq	DATAat0x1c23a(%rip), %rdx
    0000094d: 	movq	%r13, %rdi
    00000950: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2384
    00000955: 	callq	clock@PLT # Offset: 2389
    0000095a: 	movl	iterations(%rip), %ecx
    00000960: 	xorl	%r14d, %r14d
    00000963: 	leaq	DATAat0x1c1c8(%rip), %r15
    0000096a: 	movq	%rax, start_time(%rip)
    00000971: 	testl	%ecx, %ecx
    00000973: 	jle	.Ltmp2283 # Offset: 2419
    00000975: 	nopl	(%rax) # Size: 3
.Ltmp2286:
    00000978: 	movq	%rbp, %rax
    0000097b: 	pxor	%xmm0, %xmm0
    0000097f: 	nop # Size: 1
.Ltmp2284:
    00000980: 	paddq	(%rax), %xmm0
    00000984: 	addq	$0x10, %rax
    00000988: 	cmpq	%rbx, %rax
    0000098b: 	jne	.Ltmp2284 # Offset: 2443
    0000098d: 	movslq	init_value(%rip), %rdx
    00000994: 	movdqa	%xmm0, %xmm1
    00000998: 	psrldq	$0x8, %xmm1
    0000099d: 	imulq	$0x1f40, %rdx, %rdx
    000009a4: 	paddq	%xmm1, %xmm0
    000009a8: 	movq	%xmm0, %rax
    000009ad: 	cmpq	%rax, %rdx
    000009b0: 	je	.Ltmp2285 # Offset: 2480
    000009b2: 	movq	0xb0(%rsp), %rdx
    000009ba: 	movq	%r15, %rsi
    000009bd: 	movl	$0x1, %edi
    000009c2: 	xorl	%eax, %eax
    000009c4: 	callq	__printf_chk@PLT # Offset: 2500
    000009c9: 	movl	iterations(%rip), %ecx
.Ltmp2285:
    000009cf: 	addl	$0x1, %r14d
    000009d3: 	cmpl	%ecx, %r14d
    000009d6: 	jl	.Ltmp2286 # Offset: 2518
.Ltmp2283:
    000009d8: 	movq	%r13, %rsi
    000009db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000009e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2530
    000009e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009fc: 	je	.Ltmp2287 # Offset: 2556
.Ltmp2416:
    00000a02: 	movq	-0x20(%rax), %r14
    00000a06: 	callq	clock@PLT # Offset: 2566
    00000a0b: 	pxor	%xmm0, %xmm0
    00000a0f: 	movq	%rax, end_time(%rip)
    00000a16: 	movq	%r14, %rdi
    00000a19: 	subq	start_time(%rip), %rax
    00000a20: 	cvtsi2sd	%rax, %xmm0
    00000a25: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000a2d: 	callq	_Z13record_resultdPKc # Offset: 2605
    00000a32: 	movq	0xb0(%rsp), %rdi
    00000a3a: 	cmpq	(%rsp), %rdi
    00000a3e: 	je	.Ltmp2288 # Offset: 2622
    00000a40: 	movq	0xc0(%rsp), %rax
    00000a48: 	leaq	0x1(%rax), %rsi
    00000a4c: 	callq	_ZdlPvm@PLT # Offset: 2636
.Ltmp2288:
    00000a51: 	movq	0x10(%rsp), %rsi
    00000a56: 	leaq	DATAat0x1c24f(%rip), %rdx
    00000a5d: 	movq	%r13, %rdi
    00000a60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2656
    00000a65: 	callq	clock@PLT # Offset: 2661
    00000a6a: 	movl	iterations(%rip), %ecx
    00000a70: 	xorl	%r14d, %r14d
    00000a73: 	leaq	DATAat0x1c1c8(%rip), %r15
    00000a7a: 	movq	%rax, start_time(%rip)
    00000a81: 	testl	%ecx, %ecx
    00000a83: 	jle	.Ltmp2289 # Offset: 2691
    00000a85: 	nopl	(%rax) # Size: 3
.Ltmp2292:
    00000a88: 	movq	%rbp, %rax
    00000a8b: 	pxor	%xmm0, %xmm0
    00000a8f: 	nop # Size: 1
.Ltmp2290:
    00000a90: 	paddq	(%rax), %xmm0
    00000a94: 	addq	$0x10, %rax
    00000a98: 	cmpq	%rbx, %rax
    00000a9b: 	jne	.Ltmp2290 # Offset: 2715
    00000a9d: 	movslq	init_value(%rip), %rdx
    00000aa4: 	movdqa	%xmm0, %xmm1
    00000aa8: 	psrldq	$0x8, %xmm1
    00000aad: 	imulq	$0x1f40, %rdx, %rdx
    00000ab4: 	paddq	%xmm1, %xmm0
    00000ab8: 	movq	%xmm0, %rax
    00000abd: 	cmpq	%rax, %rdx
    00000ac0: 	je	.Ltmp2291 # Offset: 2752
    00000ac2: 	movq	0xb0(%rsp), %rdx
    00000aca: 	movq	%r15, %rsi
    00000acd: 	movl	$0x1, %edi
    00000ad2: 	xorl	%eax, %eax
    00000ad4: 	callq	__printf_chk@PLT # Offset: 2772
    00000ad9: 	movl	iterations(%rip), %ecx
.Ltmp2291:
    00000adf: 	addl	$0x1, %r14d
    00000ae3: 	cmpl	%ecx, %r14d
    00000ae6: 	jl	.Ltmp2292 # Offset: 2790
.Ltmp2289:
    00000ae8: 	movq	%r13, %rsi
    00000aeb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000af2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2802
    00000af7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000afe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b0c: 	je	.Ltmp2293 # Offset: 2828
.Ltmp2415:
    00000b12: 	movq	-0x20(%rax), %rbp
    00000b16: 	callq	clock@PLT # Offset: 2838
    00000b1b: 	pxor	%xmm0, %xmm0
    00000b1f: 	movq	%rax, end_time(%rip)
    00000b26: 	movq	%rbp, %rdi
    00000b29: 	subq	start_time(%rip), %rax
    00000b30: 	cvtsi2sd	%rax, %xmm0
    00000b35: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000b3d: 	callq	_Z13record_resultdPKc # Offset: 2877
    00000b42: 	movq	0xb0(%rsp), %rdi
    00000b4a: 	cmpq	(%rsp), %rdi
    00000b4e: 	je	.Ltmp2294 # Offset: 2894
    00000b50: 	movq	0xc0(%rsp), %rax
    00000b58: 	leaq	0x1(%rax), %rsi
    00000b5c: 	callq	_ZdlPvm@PLT # Offset: 2908
.Ltmp2294:
    00000b61: 	movq	0x10(%rsp), %rsi
    00000b66: 	leaq	DATAat0x1c265(%rip), %rdx
    00000b6d: 	movq	%r13, %rdi
    00000b70: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2928
    00000b75: 	callq	clock@PLT # Offset: 2933
    00000b7a: 	movl	iterations(%rip), %r15d
    00000b81: 	xorl	%ebx, %ebx
    00000b83: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000b8a: 	movq	%rax, start_time(%rip)
    00000b91: 	testl	%r15d, %r15d
    00000b94: 	jle	.Ltmp2295 # Offset: 2964
.Ltmp2390:
    00000b96: 	movslq	init_value(%rip), %rax
    00000b9d: 	cmpq	%rax, %r12
    00000ba0: 	jne	.Ltmp2296 # Offset: 2976
.Ltmp2295:
    00000ba6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000bad: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000bb4: 	subq	$0x20, %rax
    00000bb8: 	cmpq	%rax, %rbx
    00000bbb: 	je	.Ltmp2297 # Offset: 3003
    00000bc1: 	leaq	0x10(%rbx), %rdi
    00000bc5: 	movq	0xb8(%rsp), %r14
    00000bcd: 	movq	%rdi, (%rbx)
    00000bd0: 	movq	0xb0(%rsp), %rbp
    00000bd8: 	movq	%rbp, %rax
    00000bdb: 	addq	%r14, %rax
    00000bde: 	je	.Ltmp2298 # Offset: 3038
    00000be0: 	testq	%rbp, %rbp
    00000be3: 	je	.Ltmp2299 # Offset: 3043
.Ltmp2298:
    00000be9: 	movq	%r14, 0x48(%rsp)
    00000bee: 	cmpq	$0xf, %r14
    00000bf2: 	ja	.Ltmp2300 # Offset: 3058
    00000bf8: 	cmpq	$0x1, %r14
    00000bfc: 	jne	.Ltmp2301 # Offset: 3068
    00000c02: 	movzbl	(%rbp), %eax
    00000c06: 	movb	%al, 0x10(%rbx)
.Ltmp2430:
    00000c09: 	movq	%r14, 0x8(%rbx)
    00000c0d: 	movb	$0x0, (%rdi,%r14)
    00000c12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c19: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c20: 	addq	$0x20, %rax
    00000c24: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c2b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000c32: 	je	.Ltmp2302 # Offset: 3122
.Ltmp2414:
    00000c38: 	movq	-0x20(%rax), %rbp
    00000c3c: 	callq	clock@PLT # Offset: 3132
    00000c41: 	pxor	%xmm0, %xmm0
    00000c45: 	movq	%rax, end_time(%rip)
    00000c4c: 	movq	%rbp, %rdi
    00000c4f: 	subq	start_time(%rip), %rax
    00000c56: 	cvtsi2sd	%rax, %xmm0
    00000c5b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000c63: 	callq	_Z13record_resultdPKc # Offset: 3171
    00000c68: 	movq	0xb0(%rsp), %rdi
    00000c70: 	cmpq	(%rsp), %rdi
    00000c74: 	je	.Ltmp2303 # Offset: 3188
    00000c76: 	movq	0xc0(%rsp), %rax
    00000c7e: 	leaq	0x1(%rax), %rsi
    00000c82: 	callq	_ZdlPvm@PLT # Offset: 3202
.Ltmp2303:
    00000c87: 	movq	0x10(%rsp), %rsi
    00000c8c: 	leaq	DATAat0x1c27b(%rip), %rdx
    00000c93: 	movq	%r13, %rdi
    00000c96: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3222
    00000c9b: 	callq	clock@PLT # Offset: 3227
    00000ca0: 	movl	iterations(%rip), %r14d
    00000ca7: 	xorl	%ebx, %ebx
    00000ca9: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000cb0: 	movq	%rax, start_time(%rip)
    00000cb7: 	testl	%r14d, %r14d
    00000cba: 	jle	.Ltmp2304 # Offset: 3258
    00000cbc: 	nopl	(%rax) # Size: 4
.Ltmp2392:
    00000cc0: 	movslq	init_value(%rip), %rax
    00000cc7: 	cmpq	%rax, %r12
    00000cca: 	jne	.Ltmp2305 # Offset: 3274
.Ltmp2304:
    00000cd0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000cd7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000cde: 	subq	$0x20, %rax
    00000ce2: 	cmpq	%rax, %rbx
    00000ce5: 	je	.Ltmp2306 # Offset: 3301
    00000ceb: 	leaq	0x10(%rbx), %rdi
    00000cef: 	movq	0xb8(%rsp), %r14
    00000cf7: 	movq	%rdi, (%rbx)
    00000cfa: 	movq	0xb0(%rsp), %rbp
    00000d02: 	movq	%rbp, %rax
    00000d05: 	addq	%r14, %rax
    00000d08: 	je	.Ltmp2307 # Offset: 3336
    00000d0a: 	testq	%rbp, %rbp
    00000d0d: 	je	.Ltmp2308 # Offset: 3341
.Ltmp2307:
    00000d13: 	movq	%r14, 0x48(%rsp)
    00000d18: 	cmpq	$0xf, %r14
    00000d1c: 	ja	.Ltmp2309 # Offset: 3356
    00000d22: 	cmpq	$0x1, %r14
    00000d26: 	jne	.Ltmp2310 # Offset: 3366
    00000d2c: 	movzbl	(%rbp), %eax
    00000d30: 	movb	%al, 0x10(%rbx)
.Ltmp2437:
    00000d33: 	movq	%r14, 0x8(%rbx)
    00000d37: 	movb	$0x0, (%rdi,%r14)
    00000d3c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d43: 	addq	$0x20, %rax
    00000d47: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2423:
    00000d4e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d55: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d5c: 	je	.Ltmp2311 # Offset: 3420
.Ltmp2404:
    00000d62: 	movq	-0x20(%rax), %rbp
    00000d66: 	callq	clock@PLT # Offset: 3430
    00000d6b: 	pxor	%xmm0, %xmm0
    00000d6f: 	movq	%rax, end_time(%rip)
    00000d76: 	movq	%rbp, %rdi
    00000d79: 	subq	start_time(%rip), %rax
    00000d80: 	cvtsi2sd	%rax, %xmm0
    00000d85: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000d8d: 	callq	_Z13record_resultdPKc # Offset: 3469
    00000d92: 	movq	0xb0(%rsp), %rdi
    00000d9a: 	cmpq	(%rsp), %rdi
    00000d9e: 	je	.Ltmp2312 # Offset: 3486
    00000da0: 	movq	0xc0(%rsp), %rax
    00000da8: 	leaq	0x1(%rax), %rsi
    00000dac: 	callq	_ZdlPvm@PLT # Offset: 3500
.Ltmp2312:
    00000db1: 	movq	0x10(%rsp), %rsi
    00000db6: 	leaq	DATAat0x1c289(%rip), %rdx
    00000dbd: 	movq	%r13, %rdi
    00000dc0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3520
    00000dc5: 	callq	clock@PLT # Offset: 3525
    00000dca: 	movl	iterations(%rip), %r11d
    00000dd1: 	xorl	%ebx, %ebx
    00000dd3: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000dda: 	movq	%rax, start_time(%rip)
    00000de1: 	testl	%r11d, %r11d
    00000de4: 	jle	.Ltmp2313 # Offset: 3556
    00000de6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2391:
    00000df0: 	movslq	init_value(%rip), %rax
    00000df7: 	cmpq	%rax, %r12
    00000dfa: 	jne	.Ltmp2314 # Offset: 3578
.Ltmp2313:
    00000e00: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e07: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e0e: 	subq	$0x20, %rax
    00000e12: 	cmpq	%rax, %rbx
    00000e15: 	je	.Ltmp2315 # Offset: 3605
    00000e1b: 	leaq	0x10(%rbx), %rdi
    00000e1f: 	movq	0xb8(%rsp), %r14
    00000e27: 	movq	%rdi, (%rbx)
    00000e2a: 	movq	0xb0(%rsp), %rbp
    00000e32: 	movq	%rbp, %rax
    00000e35: 	addq	%r14, %rax
    00000e38: 	je	.Ltmp2316 # Offset: 3640
    00000e3a: 	testq	%rbp, %rbp
    00000e3d: 	je	.Ltmp2317 # Offset: 3645
.Ltmp2316:
    00000e43: 	movq	%r14, 0x48(%rsp)
    00000e48: 	cmpq	$0xf, %r14
    00000e4c: 	ja	.Ltmp2318 # Offset: 3660
    00000e52: 	cmpq	$0x1, %r14
    00000e56: 	jne	.Ltmp2319 # Offset: 3670
    00000e5c: 	movzbl	(%rbp), %eax
    00000e60: 	movb	%al, 0x10(%rbx)
.Ltmp2442:
    00000e63: 	movq	%r14, 0x8(%rbx)
    00000e67: 	movb	$0x0, (%rdi,%r14)
    00000e6c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e73: 	addq	$0x20, %rax
    00000e77: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2422:
    00000e7e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e85: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e8c: 	je	.Ltmp2320 # Offset: 3724
.Ltmp2411:
    00000e92: 	movq	-0x20(%rax), %rbp
    00000e96: 	callq	clock@PLT # Offset: 3734
    00000e9b: 	pxor	%xmm0, %xmm0
    00000e9f: 	movq	%rax, end_time(%rip)
    00000ea6: 	movq	%rbp, %rdi
    00000ea9: 	subq	start_time(%rip), %rax
    00000eb0: 	cvtsi2sd	%rax, %xmm0
    00000eb5: 	divsd	DATAat0x1c370(%rip), %xmm0
    00000ebd: 	callq	_Z13record_resultdPKc # Offset: 3773
    00000ec2: 	movq	0xb0(%rsp), %rdi
    00000eca: 	cmpq	(%rsp), %rdi
    00000ece: 	je	.Ltmp2321 # Offset: 3790
    00000ed0: 	movq	0xc0(%rsp), %rax
    00000ed8: 	leaq	0x1(%rax), %rsi
    00000edc: 	callq	_ZdlPvm@PLT # Offset: 3804
.Ltmp2321:
    00000ee1: 	movq	0x10(%rsp), %rsi
    00000ee6: 	leaq	DATAat0x1c298(%rip), %rdx
    00000eed: 	movq	%r13, %rdi
    00000ef0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3824
    00000ef5: 	movq	0x30(%rsp), %rdi
    00000efa: 	movq	%r13, %rdx
    00000efd: 	movl	$0x1f40, %esi
    00000f02: 	callq	_Z22test_struct4_deref_optIl12test_struct1IlEEvPKT0_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3842
    00000f07: 	movq	0xb0(%rsp), %rdi
    00000f0f: 	cmpq	(%rsp), %rdi
    00000f13: 	je	.Ltmp2322 # Offset: 3859
    00000f15: 	movq	0xc0(%rsp), %rax
    00000f1d: 	leaq	0x1(%rax), %rsi
    00000f21: 	callq	_ZdlPvm@PLT # Offset: 3873
.Ltmp2322:
    00000f26: 	movq	0x10(%rsp), %rsi
    00000f2b: 	leaq	DATAat0x1c2af(%rip), %rdx
    00000f32: 	movq	%r13, %rdi
    00000f35: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3893
    00000f3a: 	callq	clock@PLT # Offset: 3898
    00000f3f: 	movl	iterations(%rip), %r10d
    00000f46: 	xorl	%ebx, %ebx
    00000f48: 	leaq	DATAat0x1c1c8(%rip), %rbp
    00000f4f: 	movq	%rax, start_time(%rip)
    00000f56: 	testl	%r10d, %r10d
    00000f59: 	jle	.Ltmp2323 # Offset: 3929
    00000f5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2400:
    00000f60: 	movslq	init_value(%rip), %rax
    00000f67: 	cmpq	%rax, %r12
    00000f6a: 	jne	.Ltmp2324 # Offset: 3946
.Ltmp2323:
    00000f70: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f77: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000f7e: 	subq	$0x20, %rax
    00000f82: 	cmpq	%rax, %rbx
    00000f85: 	je	.Ltmp2325 # Offset: 3973
    00000f8b: 	leaq	0x10(%rbx), %rdi
    00000f8f: 	movq	0xb8(%rsp), %r14
    00000f97: 	movq	%rdi, (%rbx)
    00000f9a: 	movq	0xb0(%rsp), %rbp
    00000fa2: 	movq	%rbp, %rax
    00000fa5: 	addq	%r14, %rax
    00000fa8: 	je	.Ltmp2326 # Offset: 4008
    00000faa: 	testq	%rbp, %rbp
    00000fad: 	je	.Ltmp2327 # Offset: 4013
.Ltmp2326:
    00000fb3: 	movq	%r14, 0x48(%rsp)
    00000fb8: 	cmpq	$0xf, %r14
    00000fbc: 	ja	.Ltmp2328 # Offset: 4028
    00000fc2: 	cmpq	$0x1, %r14
    00000fc6: 	jne	.Ltmp2329 # Offset: 4038
    00000fcc: 	movzbl	(%rbp), %eax
    00000fd0: 	movb	%al, 0x10(%rbx)
.Ltmp2435:
    00000fd3: 	movq	%r14, 0x8(%rbx)
    00000fd7: 	movb	$0x0, (%rdi,%r14)
    00000fdc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fe3: 	addq	$0x20, %rax
    00000fe7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2413:
    00000fee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ff5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ffc: 	je	.Ltmp2330 # Offset: 4092
.Ltmp2412:
    00001002: 	movq	-0x20(%rax), %rbp
    00001006: 	callq	clock@PLT # Offset: 4102
    0000100b: 	pxor	%xmm0, %xmm0
    0000100f: 	movq	%rax, end_time(%rip)
    00001016: 	movq	%rbp, %rdi
    00001019: 	subq	start_time(%rip), %rax
    00001020: 	cvtsi2sd	%rax, %xmm0
    00001025: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000102d: 	callq	_Z13record_resultdPKc # Offset: 4141
    00001032: 	movq	0xb0(%rsp), %rdi
    0000103a: 	cmpq	(%rsp), %rdi
    0000103e: 	je	.Ltmp2331 # Offset: 4158
    00001040: 	movq	0xc0(%rsp), %rax
    00001048: 	leaq	0x1(%rax), %rsi
    0000104c: 	callq	_ZdlPvm@PLT # Offset: 4172
.Ltmp2331:
    00001051: 	movq	0x10(%rsp), %rsi
    00001056: 	leaq	DATAat0x1c2be(%rip), %rdx
    0000105d: 	movq	%r13, %rdi
    00001060: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4192
    00001065: 	callq	clock@PLT # Offset: 4197
    0000106a: 	movl	iterations(%rip), %r9d
    00001071: 	xorl	%ebx, %ebx
    00001073: 	leaq	DATAat0x1c1c8(%rip), %rbp
    0000107a: 	movq	%rax, start_time(%rip)
    00001081: 	testl	%r9d, %r9d
    00001084: 	jle	.Ltmp2332 # Offset: 4228
.Ltmp2399:
    00001086: 	movslq	init_value(%rip), %rax
    0000108d: 	cmpq	%rax, %r12
    00001090: 	jne	.Ltmp2333 # Offset: 4240
.Ltmp2332:
    00001096: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000109d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000010a4: 	subq	$0x20, %rax
    000010a8: 	cmpq	%rax, %rbx
    000010ab: 	je	.Ltmp2334 # Offset: 4267
    000010b1: 	leaq	0x10(%rbx), %rdi
    000010b5: 	movq	0xb8(%rsp), %r12
    000010bd: 	movq	%rdi, (%rbx)
    000010c0: 	movq	0xb0(%rsp), %rbp
    000010c8: 	movq	%rbp, %rax
    000010cb: 	addq	%r12, %rax
    000010ce: 	je	.Ltmp2335 # Offset: 4302
    000010d0: 	testq	%rbp, %rbp
    000010d3: 	je	.Ltmp2336 # Offset: 4307
.Ltmp2335:
    000010d9: 	movq	%r12, 0x48(%rsp)
    000010de: 	cmpq	$0xf, %r12
    000010e2: 	ja	.Ltmp2337 # Offset: 4322
    000010e8: 	cmpq	$0x1, %r12
    000010ec: 	jne	.Ltmp2338 # Offset: 4332
    000010f2: 	movzbl	(%rbp), %eax
    000010f6: 	movb	%al, 0x10(%rbx)
.Ltmp2433:
    000010f9: 	movq	%r12, 0x8(%rbx)
    000010fd: 	movb	$0x0, (%rdi,%r12)
    00001102: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001109: 	addq	$0x20, %rax
    0000110d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2410:
    00001114: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000111b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001122: 	je	.Ltmp2339 # Offset: 4386
.Ltmp2402:
    00001128: 	movq	-0x20(%rax), %rbp
    0000112c: 	callq	clock@PLT # Offset: 4396
    00001131: 	pxor	%xmm0, %xmm0
    00001135: 	movq	%rax, end_time(%rip)
    0000113c: 	movq	%rbp, %rdi
    0000113f: 	subq	start_time(%rip), %rax
    00001146: 	cvtsi2sd	%rax, %xmm0
    0000114b: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001153: 	callq	_Z13record_resultdPKc # Offset: 4435
    00001158: 	movq	0xb0(%rsp), %rdi
    00001160: 	cmpq	(%rsp), %rdi
    00001164: 	je	.Ltmp2340 # Offset: 4452
    00001166: 	movq	0xc0(%rsp), %rax
    0000116e: 	leaq	0x1(%rax), %rsi
    00001172: 	callq	_ZdlPvm@PLT # Offset: 4466
.Ltmp2340:
    00001177: 	movq	0x10(%rsp), %rsi
    0000117c: 	leaq	DATAat0x1c225(%rip), %rdx
    00001183: 	movq	%r13, %rdi
    00001186: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4486
    0000118b: 	callq	clock@PLT # Offset: 4491
    00001190: 	movl	iterations(%rip), %r8d
    00001197: 	xorl	%ebp, %ebp
    00001199: 	leaq	DATAat0x1c1c8(%rip), %r12
    000011a0: 	movq	%rax, start_time(%rip)
    000011a7: 	movq	0x20(%rsp), %rax
    000011ac: 	leaq	(,%rax,8), %r14
    000011b4: 	movq	0x2e0(%rsp,%r14), %rax
    000011bc: 	movq	0x1f0(%rsp,%rax,8), %rax
    000011c4: 	movq	0x100(%rsp,%rax,8), %rbx
    000011cc: 	testl	%r8d, %r8d
    000011cf: 	jle	.Ltmp2341 # Offset: 4559
    000011d1: 	nopl	(%rax) # Size: 7
.Ltmp2398:
    000011d8: 	movslq	init_value(%rip), %rax
    000011df: 	cmpq	%rax, %rbx
    000011e2: 	jne	.Ltmp2342 # Offset: 4578
.Ltmp2341:
    000011e8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000011f6: 	subq	$0x20, %rax
    000011fa: 	cmpq	%rax, %rbp
    000011fd: 	je	.Ltmp2343 # Offset: 4605
    00001203: 	leaq	0x10(%rbp), %rdi
    00001207: 	movq	0xb8(%rsp), %r12
    0000120f: 	movq	%rdi, (%rbp)
    00001213: 	movq	0xb0(%rsp), %r15
    0000121b: 	movq	%r15, %rax
    0000121e: 	addq	%r12, %rax
    00001221: 	je	.Ltmp2344 # Offset: 4641
    00001223: 	testq	%r15, %r15
    00001226: 	je	.Ltmp2345 # Offset: 4646
.Ltmp2344:
    0000122c: 	movq	%r12, 0x48(%rsp)
    00001231: 	cmpq	$0xf, %r12
    00001235: 	ja	.Ltmp2346 # Offset: 4661
    0000123b: 	cmpq	$0x1, %r12
    0000123f: 	jne	.Ltmp2347 # Offset: 4671
    00001245: 	movzbl	(%r15), %eax
    00001249: 	movb	%al, 0x10(%rbp)
.Ltmp2432:
    0000124c: 	movq	%r12, 0x8(%rbp)
    00001250: 	movb	$0x0, (%rdi,%r12)
    00001255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000125c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001263: 	addq	$0x20, %rax
    00001267: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000126e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001275: 	je	.Ltmp2348 # Offset: 4725
.Ltmp2403:
    0000127b: 	movq	-0x20(%rax), %rbp
    0000127f: 	callq	clock@PLT # Offset: 4735
    00001284: 	pxor	%xmm0, %xmm0
    00001288: 	movq	%rax, end_time(%rip)
    0000128f: 	movq	%rbp, %rdi
    00001292: 	subq	start_time(%rip), %rax
    00001299: 	cvtsi2sd	%rax, %xmm0
    0000129e: 	divsd	DATAat0x1c370(%rip), %xmm0
    000012a6: 	callq	_Z13record_resultdPKc # Offset: 4774
    000012ab: 	movq	0xb0(%rsp), %rdi
    000012b3: 	cmpq	(%rsp), %rdi
    000012b7: 	je	.Ltmp2349 # Offset: 4791
    000012b9: 	movq	0xc0(%rsp), %rax
    000012c1: 	leaq	0x1(%rax), %rsi
    000012c5: 	callq	_ZdlPvm@PLT # Offset: 4805
.Ltmp2349:
    000012ca: 	movq	0x10(%rsp), %rsi
    000012cf: 	leaq	DATAat0x1c242(%rip), %rdx
    000012d6: 	movq	%r13, %rdi
    000012d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4825
    000012de: 	callq	clock@PLT # Offset: 4830
    000012e3: 	movl	iterations(%rip), %edi
    000012e9: 	xorl	%ebp, %ebp
    000012eb: 	leaq	DATAat0x1c1c8(%rip), %r12
    000012f2: 	movq	%rax, start_time(%rip)
    000012f9: 	testl	%edi, %edi
    000012fb: 	jle	.Ltmp2350 # Offset: 4859
.Ltmp2397:
    000012fd: 	movslq	init_value(%rip), %rax
    00001304: 	cmpq	%rax, %rbx
    00001307: 	jne	.Ltmp2351 # Offset: 4871
.Ltmp2350:
    0000130d: 	movq	%r13, %rsi
    00001310: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001317: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4887
    0000131c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001323: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000132a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001331: 	je	.Ltmp2352 # Offset: 4913
.Ltmp2401:
    00001337: 	movq	-0x20(%rax), %rbp
    0000133b: 	callq	clock@PLT # Offset: 4923
    00001340: 	pxor	%xmm0, %xmm0
    00001344: 	movq	%rax, end_time(%rip)
    0000134b: 	movq	%rbp, %rdi
    0000134e: 	subq	start_time(%rip), %rax
    00001355: 	cvtsi2sd	%rax, %xmm0
    0000135a: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001362: 	callq	_Z13record_resultdPKc # Offset: 4962
    00001367: 	movq	0xb0(%rsp), %rdi
    0000136f: 	cmpq	(%rsp), %rdi
    00001373: 	je	.Ltmp2353 # Offset: 4979
    00001375: 	movq	0xc0(%rsp), %rax
    0000137d: 	leaq	0x1(%rax), %rsi
    00001381: 	callq	_ZdlPvm@PLT # Offset: 4993
.Ltmp2353:
    00001386: 	movq	0x10(%rsp), %rsi
    0000138b: 	leaq	DATAat0x1c257(%rip), %rdx
    00001392: 	movq	%r13, %rdi
    00001395: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5013
    0000139a: 	callq	clock@PLT # Offset: 5018
    0000139f: 	movl	iterations(%rip), %esi
    000013a5: 	xorl	%ebp, %ebp
    000013a7: 	leaq	DATAat0x1c1c8(%rip), %r12
    000013ae: 	movq	%rax, start_time(%rip)
    000013b5: 	testl	%esi, %esi
    000013b7: 	jle	.Ltmp2354 # Offset: 5047
.Ltmp2396:
    000013b9: 	movslq	init_value(%rip), %rax
    000013c0: 	cmpq	%rax, %rbx
    000013c3: 	jne	.Ltmp2355 # Offset: 5059
.Ltmp2354:
    000013c9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000013d7: 	subq	$0x20, %rax
    000013db: 	cmpq	%rax, %rbx
    000013de: 	je	.Ltmp2356 # Offset: 5086
    000013e4: 	leaq	0x10(%rbx), %rdi
    000013e8: 	movq	0xb8(%rsp), %r12
    000013f0: 	movq	%rdi, (%rbx)
    000013f3: 	movq	0xb0(%rsp), %rbp
    000013fb: 	movq	%rbp, %rax
    000013fe: 	addq	%r12, %rax
    00001401: 	je	.Ltmp2357 # Offset: 5121
    00001403: 	testq	%rbp, %rbp
    00001406: 	je	.Ltmp2358 # Offset: 5126
.Ltmp2357:
    0000140c: 	movq	%r12, 0x48(%rsp)
    00001411: 	cmpq	$0xf, %r12
    00001415: 	ja	.Ltmp2359 # Offset: 5141
    0000141b: 	cmpq	$0x1, %r12
    0000141f: 	jne	.Ltmp2360 # Offset: 5151
    00001425: 	movzbl	(%rbp), %eax
    00001429: 	movb	%al, 0x10(%rbx)
.Ltmp2426:
    0000142c: 	movq	%r12, 0x8(%rbx)
    00001430: 	movb	$0x0, (%rdi,%r12)
    00001435: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000143c: 	addq	$0x20, %rax
    00001440: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2421:
    00001447: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000144e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001455: 	je	.Ltmp2361 # Offset: 5205
.Ltmp2419:
    0000145b: 	movq	-0x20(%rax), %rbp
    0000145f: 	callq	clock@PLT # Offset: 5215
    00001464: 	pxor	%xmm0, %xmm0
    00001468: 	movq	%rax, end_time(%rip)
    0000146f: 	movq	%rbp, %rdi
    00001472: 	subq	start_time(%rip), %rax
    00001479: 	cvtsi2sd	%rax, %xmm0
    0000147e: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001486: 	callq	_Z13record_resultdPKc # Offset: 5254
    0000148b: 	movq	0xb0(%rsp), %rdi
    00001493: 	cmpq	(%rsp), %rdi
    00001497: 	je	.Ltmp2362 # Offset: 5271
    00001499: 	movq	0xc0(%rsp), %rax
    000014a1: 	leaq	0x1(%rax), %rsi
    000014a5: 	callq	_ZdlPvm@PLT # Offset: 5285
.Ltmp2362:
    000014aa: 	movq	0x10(%rsp), %rsi
    000014af: 	leaq	DATAat0x1c338(%rip), %rdx
    000014b6: 	movq	%r13, %rdi
    000014b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5305
    000014be: 	movq	0x20(%rsp), %rsi
    000014c3: 	leaq	0xd0(%rsp), %rdi
    000014cb: 	movq	%r13, %rcx
    000014ce: 	movl	$0x1f40, %edx
    000014d3: 	callq	_Z31test_struct_arrayList_deref_optIl21test_struct_arrayListIlEEvPKT0_miNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5331
    000014d8: 	movq	0xb0(%rsp), %rdi
    000014e0: 	cmpq	(%rsp), %rdi
    000014e4: 	je	.Ltmp2363 # Offset: 5348
    000014e6: 	movq	0xc0(%rsp), %rax
    000014ee: 	leaq	0x1(%rax), %rsi
    000014f2: 	callq	_ZdlPvm@PLT # Offset: 5362
.Ltmp2363:
    000014f7: 	movq	0x10(%rsp), %rsi
    000014fc: 	leaq	DATAat0x1c2ce(%rip), %rdx
    00001503: 	movq	%r13, %rdi
    00001506: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5382
    0000150b: 	callq	clock@PLT # Offset: 5387
    00001510: 	movl	iterations(%rip), %ecx
    00001516: 	movq	%rax, start_time(%rip)
    0000151d: 	testl	%ecx, %ecx
    0000151f: 	jle	.Ltmp2364 # Offset: 5407
    00001521: 	movq	0x1f0(%rsp,%r14), %rax
    00001529: 	xorl	%ebx, %ebx
    0000152b: 	leaq	DATAat0x1c1c8(%rip), %r12
    00001532: 	movq	0x2e0(%rsp,%rax,8), %rax
    0000153a: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001542: 	movq	0x2e0(%rsp,%rax,8), %rax
    0000154a: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001552: 	movq	0x100(%rsp,%rax,8), %rbp
    0000155a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2394:
    00001560: 	movslq	init_value(%rip), %rax
    00001567: 	cmpq	%rbp, %rax
    0000156a: 	jne	.Ltmp2365 # Offset: 5482
.Ltmp2364:
    00001570: 	movq	%r13, %rsi
    00001573: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000157a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5498
    0000157f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001586: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000158d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001594: 	je	.Ltmp2366 # Offset: 5524
.Ltmp2420:
    0000159a: 	movq	-0x20(%rax), %rbp
    0000159e: 	callq	clock@PLT # Offset: 5534
    000015a3: 	pxor	%xmm0, %xmm0
    000015a7: 	movq	%rax, end_time(%rip)
    000015ae: 	movq	%rbp, %rdi
    000015b1: 	subq	start_time(%rip), %rax
    000015b8: 	cvtsi2sd	%rax, %xmm0
    000015bd: 	divsd	DATAat0x1c370(%rip), %xmm0
    000015c5: 	callq	_Z13record_resultdPKc # Offset: 5573
    000015ca: 	movq	0xb0(%rsp), %rdi
    000015d2: 	cmpq	(%rsp), %rdi
    000015d6: 	je	.Ltmp2367 # Offset: 5590
    000015d8: 	movq	0xc0(%rsp), %rax
    000015e0: 	leaq	0x1(%rax), %rsi
    000015e4: 	callq	_ZdlPvm@PLT # Offset: 5604
.Ltmp2367:
    000015e9: 	movq	0x10(%rsp), %rsi
    000015ee: 	leaq	DATAat0x1c2e7(%rip), %rdx
    000015f5: 	movq	%r13, %rdi
    000015f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5624
    000015fd: 	callq	clock@PLT # Offset: 5629
    00001602: 	movl	iterations(%rip), %edx
    00001608: 	movq	%rax, start_time(%rip)
    0000160f: 	testl	%edx, %edx
    00001611: 	jle	.Ltmp2368 # Offset: 5649
    00001613: 	movq	0x1f0(%rsp,%r14), %rax
    0000161b: 	xorl	%ebx, %ebx
    0000161d: 	leaq	DATAat0x1c1c8(%rip), %r12
    00001624: 	movq	0x2e0(%rsp,%rax,8), %rax
    0000162c: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001634: 	movq	0x2e0(%rsp,%rax,8), %rax
    0000163c: 	movq	0x1f0(%rsp,%rax,8), %rax
    00001644: 	movq	0x100(%rsp,%rax,8), %rbp
    0000164c: 	nopl	(%rax) # Size: 4
.Ltmp2395:
    00001650: 	movslq	init_value(%rip), %rax
    00001657: 	cmpq	%rbp, %rax
    0000165a: 	jne	.Ltmp2369 # Offset: 5722
.Ltmp2368:
    00001660: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001667: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000166e: 	subq	$0x20, %rax
    00001672: 	cmpq	%rax, %rbx
    00001675: 	je	.Ltmp2370 # Offset: 5749
    0000167b: 	leaq	0x10(%rbx), %rdi
    0000167f: 	movq	0xb8(%rsp), %r12
    00001687: 	movq	%rdi, (%rbx)
    0000168a: 	movq	0xb0(%rsp), %rbp
    00001692: 	movq	%rbp, %rax
    00001695: 	addq	%r12, %rax
    00001698: 	je	.Ltmp2371 # Offset: 5784
    0000169a: 	testq	%rbp, %rbp
    0000169d: 	je	.Ltmp2372 # Offset: 5789
.Ltmp2371:
    000016a3: 	movq	%r12, 0x48(%rsp)
    000016a8: 	cmpq	$0xf, %r12
    000016ac: 	ja	.Ltmp2373 # Offset: 5804
    000016b2: 	cmpq	$0x1, %r12
    000016b6: 	jne	.Ltmp2374 # Offset: 5814
    000016bc: 	movzbl	(%rbp), %eax
    000016c0: 	movb	%al, 0x10(%rbx)
.Ltmp2428:
    000016c3: 	movq	%r12, 0x8(%rbx)
    000016c7: 	movb	$0x0, (%rdi,%r12)
    000016cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016d3: 	addq	$0x20, %rax
    000016d7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2425:
    000016de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016ec: 	je	.Ltmp2375 # Offset: 5868
.Ltmp2424:
    000016f2: 	movq	-0x20(%rax), %rbp
    000016f6: 	callq	clock@PLT # Offset: 5878
    000016fb: 	pxor	%xmm0, %xmm0
    000016ff: 	movq	%rax, end_time(%rip)
    00001706: 	movq	%rbp, %rdi
    00001709: 	subq	start_time(%rip), %rax
    00001710: 	cvtsi2sd	%rax, %xmm0
    00001715: 	divsd	DATAat0x1c370(%rip), %xmm0
    0000171d: 	callq	_Z13record_resultdPKc # Offset: 5917
    00001722: 	movq	0xb0(%rsp), %rdi
    0000172a: 	cmpq	(%rsp), %rdi
    0000172e: 	je	.Ltmp2376 # Offset: 5934
    00001730: 	movq	0xc0(%rsp), %rax
    00001738: 	leaq	0x1(%rax), %rsi
    0000173c: 	callq	_ZdlPvm@PLT # Offset: 5948
.Ltmp2376:
    00001741: 	movq	0x10(%rsp), %rsi
    00001746: 	leaq	DATAat0x1c301(%rip), %rdx
    0000174d: 	movq	%r13, %rdi
    00001750: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5968
    00001755: 	callq	clock@PLT # Offset: 5973
    0000175a: 	movq	%rax, start_time(%rip)
    00001761: 	movl	iterations(%rip), %eax
    00001767: 	testl	%eax, %eax
    00001769: 	jle	.Ltmp2377 # Offset: 5993
    0000176b: 	movq	0x1f0(%rsp,%r14), %rax
    00001773: 	xorl	%ebx, %ebx
    00001775: 	leaq	DATAat0x1c1c8(%rip), %r12
    0000177c: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001784: 	movq	0x1f0(%rsp,%rax,8), %rax
    0000178c: 	movq	0x2e0(%rsp,%rax,8), %rax
    00001794: 	movq	0x1f0(%rsp,%rax,8), %rax
    0000179c: 	movq	0x100(%rsp,%rax,8), %rbp
.Ltmp2393:
    000017a4: 	movslq	init_value(%rip), %rax
    000017ab: 	cmpq	%rbp, %rax
    000017ae: 	jne	.Ltmp2378 # Offset: 6062
.Ltmp2377:
    000017b4: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017bb: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017c2: 	subq	$0x20, %rax
    000017c6: 	cmpq	%rax, %rbx
    000017c9: 	je	.Ltmp2379 # Offset: 6089
    000017cf: 	leaq	0x10(%rbx), %rdi
    000017d3: 	movq	0xb8(%rsp), %r12
    000017db: 	movq	%rdi, (%rbx)
    000017de: 	movq	0xb0(%rsp), %rbp
    000017e6: 	movq	%rbp, %rax
    000017e9: 	addq	%r12, %rax
    000017ec: 	je	.Ltmp2380 # Offset: 6124
    000017ee: 	testq	%rbp, %rbp
    000017f1: 	je	.Ltmp2381 # Offset: 6129
.Ltmp2380:
    000017f7: 	movq	%r12, 0x48(%rsp)
    000017fc: 	cmpq	$0xf, %r12
    00001800: 	ja	.Ltmp2382 # Offset: 6144
    00001806: 	cmpq	$0x1, %r12
    0000180a: 	jne	.Ltmp2383 # Offset: 6154
    00001810: 	movzbl	(%rbp), %eax
    00001814: 	movb	%al, 0x10(%rbx)
.Ltmp2440:
    00001817: 	movq	%r12, 0x8(%rbx)
    0000181b: 	movb	$0x0, (%rdi,%r12)
    00001820: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001827: 	addq	$0x20, %rax
    0000182b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2418:
    00001832: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001839: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001840: 	je	.Ltmp2384 # Offset: 6208
.Ltmp2405:
    00001846: 	movq	-0x20(%rax), %rbp
    0000184a: 	callq	clock@PLT # Offset: 6218
    0000184f: 	pxor	%xmm0, %xmm0
    00001853: 	movq	%rax, end_time(%rip)
    0000185a: 	movq	%rbp, %rdi
    0000185d: 	subq	start_time(%rip), %rax
    00001864: 	cvtsi2sd	%rax, %xmm0
    00001869: 	divsd	DATAat0x1c370(%rip), %xmm0
    00001871: 	callq	_Z13record_resultdPKc # Offset: 6257
    00001876: 	movq	0xb0(%rsp), %rdi
    0000187e: 	cmpq	(%rsp), %rdi
    00001882: 	je	.Ltmp2385 # Offset: 6274
    00001884: 	movq	0xc0(%rsp), %rax
    0000188c: 	leaq	0x1(%rax), %rsi
    00001890: 	callq	_ZdlPvm@PLT # Offset: 6288
.Ltmp2385:
    00001895: 	movq	0x10(%rsp), %rsi
    0000189a: 	leaq	DATAat0x1c31b(%rip), %rdx
    000018a1: 	movq	%r13, %rdi
    000018a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6308
    000018a9: 	movl	iterations(%rip), %edx
    000018af: 	xorl	%r8d, %r8d
    000018b2: 	xorl	%ecx, %ecx
    000018b4: 	movl	$0x1f40, %esi
    000018b9: 	movq	0xb0(%rsp), %rdi
    000018c1: 	callq	_Z9summarizePKciiii # Offset: 6337
    000018c6: 	movq	0xb0(%rsp), %rdi
    000018ce: 	cmpq	(%rsp), %rdi
    000018d2: 	je	.Ltmp2386 # Offset: 6354
    000018d4: 	movq	0xc0(%rsp), %rax
    000018dc: 	leaq	0x1(%rax), %rsi
    000018e0: 	callq	_ZdlPvm@PLT # Offset: 6368
.Ltmp2386:
    000018e5: 	movq	0x90(%rsp), %rdi
    000018ed: 	cmpq	0x28(%rsp), %rdi
    000018f2: 	je	.Ltmp2387 # Offset: 6386
    000018f4: 	movq	0xa0(%rsp), %rax
    000018fc: 	leaq	0x1(%rax), %rsi
    00001900: 	callq	_ZdlPvm@PLT # Offset: 6400
.Ltmp2387:
    00001905: 	movq	0xfdd8(%rsp), %rax
    0000190d: 	subq	%fs:0x28, %rax
    00001916: 	jne	.Ltmp2388 # Offset: 6422
    0000191c: 	addq	$0xfde8, %rsp
    00001923: 	popq	%rbx
    00001924: 	popq	%rbp
    00001925: 	popq	%r12
    00001927: 	popq	%r13
    00001929: 	popq	%r14
    0000192b: 	popq	%r15
    0000192d: 	retq # Offset: 6445
.Ltmp2251:
    0000192e: 	leaq	0x48(%rsp), %rsi
    00001933: 	xorl	%edx, %edx
    00001935: 	movq	%r15, %rdi
    00001938: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6456
    0000193d: 	movq	%rax, (%r15)
    00001940: 	movq	%rax, %rdi
    00001943: 	movq	0x48(%rsp), %rax
    00001948: 	movq	%rax, 0x10(%r15)
.Ltmp2429:
    0000194c: 	movq	(%rsp), %rsi
    00001950: 	movq	%r14, %rdx
    00001953: 	callq	memcpy@PLT # Offset: 6483
    00001958: 	movq	0x48(%rsp), %r14
    0000195d: 	movq	(%r15), %rdi
    00001960: 	jmp	.Ltmp2389 # Offset: 6496
    00001965: 	nopl	(%rax) # Size: 3
.Ltmp2296:
    00001968: 	movq	0xb0(%rsp), %rdx
    00001970: 	movq	%rbp, %rsi
    00001973: 	movl	$0x1, %edi
    00001978: 	xorl	%eax, %eax
    0000197a: 	callq	__printf_chk@PLT # Offset: 6522
    0000197f: 	addl	$0x1, %ebx
    00001982: 	cmpl	iterations(%rip), %ebx
    00001988: 	jl	.Ltmp2390 # Offset: 6536
    0000198e: 	jmp	.Ltmp2295 # Offset: 6542
    00001993: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2314:
    00001998: 	movq	0xb0(%rsp), %rdx
    000019a0: 	movq	%rbp, %rsi
    000019a3: 	movl	$0x1, %edi
    000019a8: 	xorl	%eax, %eax
    000019aa: 	callq	__printf_chk@PLT # Offset: 6570
    000019af: 	addl	$0x1, %ebx
    000019b2: 	cmpl	iterations(%rip), %ebx
    000019b8: 	jl	.Ltmp2391 # Offset: 6584
    000019be: 	jmp	.Ltmp2313 # Offset: 6590
    000019c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2305:
    000019c8: 	movq	0xb0(%rsp), %rdx
    000019d0: 	movq	%rbp, %rsi
    000019d3: 	movl	$0x1, %edi
    000019d8: 	xorl	%eax, %eax
    000019da: 	callq	__printf_chk@PLT # Offset: 6618
    000019df: 	addl	$0x1, %ebx
    000019e2: 	cmpl	iterations(%rip), %ebx
    000019e8: 	jl	.Ltmp2392 # Offset: 6632
    000019ee: 	jmp	.Ltmp2304 # Offset: 6638
    000019f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2378:
    000019f8: 	movq	0xb0(%rsp), %rdx
    00001a00: 	movq	%r12, %rsi
    00001a03: 	movl	$0x1, %edi
    00001a08: 	xorl	%eax, %eax
    00001a0a: 	callq	__printf_chk@PLT # Offset: 6666
    00001a0f: 	addl	$0x1, %ebx
    00001a12: 	cmpl	iterations(%rip), %ebx
    00001a18: 	jl	.Ltmp2393 # Offset: 6680
    00001a1e: 	jmp	.Ltmp2377 # Offset: 6686
    00001a23: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2365:
    00001a28: 	movq	0xb0(%rsp), %rdx
    00001a30: 	movq	%r12, %rsi
    00001a33: 	movl	$0x1, %edi
    00001a38: 	xorl	%eax, %eax
    00001a3a: 	callq	__printf_chk@PLT # Offset: 6714
    00001a3f: 	addl	$0x1, %ebx
    00001a42: 	cmpl	iterations(%rip), %ebx
    00001a48: 	jl	.Ltmp2394 # Offset: 6728
    00001a4e: 	jmp	.Ltmp2364 # Offset: 6734
    00001a53: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2369:
    00001a58: 	movq	0xb0(%rsp), %rdx
    00001a60: 	movq	%r12, %rsi
    00001a63: 	movl	$0x1, %edi
    00001a68: 	xorl	%eax, %eax
    00001a6a: 	callq	__printf_chk@PLT # Offset: 6762
    00001a6f: 	addl	$0x1, %ebx
    00001a72: 	cmpl	iterations(%rip), %ebx
    00001a78: 	jl	.Ltmp2395 # Offset: 6776
    00001a7e: 	jmp	.Ltmp2368 # Offset: 6782
    00001a83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2355:
    00001a88: 	movq	0xb0(%rsp), %rdx
    00001a90: 	movq	%r12, %rsi
    00001a93: 	movl	$0x1, %edi
    00001a98: 	xorl	%eax, %eax
    00001a9a: 	callq	__printf_chk@PLT # Offset: 6810
    00001a9f: 	addl	$0x1, %ebp
    00001aa2: 	cmpl	iterations(%rip), %ebp
    00001aa8: 	jl	.Ltmp2396 # Offset: 6824
    00001aae: 	jmp	.Ltmp2354 # Offset: 6830
    00001ab3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2351:
    00001ab8: 	movq	0xb0(%rsp), %rdx
    00001ac0: 	movq	%r12, %rsi
    00001ac3: 	movl	$0x1, %edi
    00001ac8: 	xorl	%eax, %eax
    00001aca: 	callq	__printf_chk@PLT # Offset: 6858
    00001acf: 	addl	$0x1, %ebp
    00001ad2: 	cmpl	iterations(%rip), %ebp
    00001ad8: 	jl	.Ltmp2397 # Offset: 6872
    00001ade: 	jmp	.Ltmp2350 # Offset: 6878
    00001ae3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2342:
    00001ae8: 	movq	0xb0(%rsp), %rdx
    00001af0: 	movq	%r12, %rsi
    00001af3: 	movl	$0x1, %edi
    00001af8: 	xorl	%eax, %eax
    00001afa: 	callq	__printf_chk@PLT # Offset: 6906
    00001aff: 	addl	$0x1, %ebp
    00001b02: 	cmpl	iterations(%rip), %ebp
    00001b08: 	jl	.Ltmp2398 # Offset: 6920
    00001b0e: 	jmp	.Ltmp2341 # Offset: 6926
    00001b13: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2333:
    00001b18: 	movq	0xb0(%rsp), %rdx
    00001b20: 	movq	%rbp, %rsi
    00001b23: 	movl	$0x1, %edi
    00001b28: 	xorl	%eax, %eax
    00001b2a: 	callq	__printf_chk@PLT # Offset: 6954
    00001b2f: 	addl	$0x1, %ebx
    00001b32: 	cmpl	iterations(%rip), %ebx
    00001b38: 	jl	.Ltmp2399 # Offset: 6968
    00001b3e: 	jmp	.Ltmp2332 # Offset: 6974
    00001b43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2324:
    00001b48: 	movq	0xb0(%rsp), %rdx
    00001b50: 	movq	%rbp, %rsi
    00001b53: 	movl	$0x1, %edi
    00001b58: 	xorl	%eax, %eax
    00001b5a: 	callq	__printf_chk@PLT # Offset: 7002
    00001b5f: 	addl	$0x1, %ebx
    00001b62: 	cmpl	iterations(%rip), %ebx
    00001b68: 	jl	.Ltmp2400 # Offset: 7016
    00001b6e: 	jmp	.Ltmp2323 # Offset: 7022
    00001b73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2352:
    00001b78: 	movq	-0x8(%rdx), %rax
    00001b7c: 	addq	$0x200, %rax
    00001b82: 	jmp	.Ltmp2401 # Offset: 7042
.Ltmp2339:
    00001b87: 	movq	-0x8(%rdx), %rax
    00001b8b: 	addq	$0x200, %rax
    00001b91: 	jmp	.Ltmp2402 # Offset: 7057
.Ltmp2343:
    00001b96: 	movq	%r13, %rsi
    00001b99: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ba0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7072
    00001ba5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bb3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bba: 	jne	.Ltmp2403 # Offset: 7098
.Ltmp2348:
    00001bc0: 	movq	-0x8(%rdx), %rax
    00001bc4: 	addq	$0x200, %rax
    00001bca: 	jmp	.Ltmp2403 # Offset: 7114
.Ltmp2311:
    00001bcf: 	movq	-0x8(%rdx), %rax
    00001bd3: 	addq	$0x200, %rax
    00001bd9: 	jmp	.Ltmp2404 # Offset: 7129
.Ltmp2384:
    00001bde: 	movq	-0x8(%rdx), %rax
    00001be2: 	addq	$0x200, %rax
    00001be8: 	jmp	.Ltmp2405 # Offset: 7144
.Ltmp2248:
    00001bed: 	movq	%r13, %rsi
    00001bf0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bf7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7159
    00001bfc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c03: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c0a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c11: 	jne	.Ltmp2406 # Offset: 7185
.Ltmp2253:
    00001c17: 	movq	-0x8(%rdx), %rax
    00001c1b: 	addq	$0x200, %rax
    00001c21: 	jmp	.Ltmp2406 # Offset: 7201
.Ltmp2270:
    00001c26: 	movq	%r13, %rsi
    00001c29: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7216
    00001c35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c3c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c4a: 	jne	.Ltmp2407 # Offset: 7242
.Ltmp2275:
    00001c50: 	movq	-0x8(%rdx), %rax
    00001c54: 	addq	$0x200, %rax
    00001c5a: 	jmp	.Ltmp2407 # Offset: 7258
.Ltmp2264:
    00001c5f: 	movq	-0x8(%rdx), %rax
    00001c63: 	addq	$0x200, %rax
    00001c69: 	jmp	.Ltmp2408 # Offset: 7273
.Ltmp2259:
    00001c6e: 	movq	%r13, %rsi
    00001c71: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c78: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7288
    00001c7d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c84: 	jmp	.Ltmp2409 # Offset: 7300
.Ltmp2334:
    00001c89: 	movq	%r13, %rsi
    00001c8c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c93: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7315
    00001c98: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c9f: 	jmp	.Ltmp2410 # Offset: 7327
.Ltmp2320:
    00001ca4: 	movq	-0x8(%rdx), %rax
    00001ca8: 	addq	$0x200, %rax
    00001cae: 	jmp	.Ltmp2411 # Offset: 7342
.Ltmp2330:
    00001cb3: 	movq	-0x8(%rdx), %rax
    00001cb7: 	addq	$0x200, %rax
    00001cbd: 	jmp	.Ltmp2412 # Offset: 7357
.Ltmp2325:
    00001cc2: 	movq	%r13, %rsi
    00001cc5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ccc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7372
    00001cd1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cd8: 	jmp	.Ltmp2413 # Offset: 7384
.Ltmp2297:
    00001cdd: 	movq	%r13, %rsi
    00001ce0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ce7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7399
    00001cec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cf3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001cfa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d01: 	jne	.Ltmp2414 # Offset: 7425
.Ltmp2302:
    00001d07: 	movq	-0x8(%rdx), %rax
    00001d0b: 	addq	$0x200, %rax
    00001d11: 	jmp	.Ltmp2414 # Offset: 7441
.Ltmp2293:
    00001d16: 	movq	-0x8(%rdx), %rax
    00001d1a: 	addq	$0x200, %rax
    00001d20: 	jmp	.Ltmp2415 # Offset: 7456
.Ltmp2287:
    00001d25: 	movq	-0x8(%rdx), %rax
    00001d29: 	addq	$0x200, %rax
    00001d2f: 	jmp	.Ltmp2416 # Offset: 7471
.Ltmp2281:
    00001d34: 	movq	-0x8(%rdx), %rax
    00001d38: 	addq	$0x200, %rax
    00001d3e: 	jmp	.Ltmp2417 # Offset: 7486
.Ltmp2379:
    00001d43: 	movq	%r13, %rsi
    00001d46: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d4d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7501
    00001d52: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d59: 	jmp	.Ltmp2418 # Offset: 7513
.Ltmp2361:
    00001d5e: 	movq	-0x8(%rdx), %rax
    00001d62: 	addq	$0x200, %rax
    00001d68: 	jmp	.Ltmp2419 # Offset: 7528
.Ltmp2366:
    00001d6d: 	movq	-0x8(%rdx), %rax
    00001d71: 	addq	$0x200, %rax
    00001d77: 	jmp	.Ltmp2420 # Offset: 7543
.Ltmp2356:
    00001d7c: 	movq	%r13, %rsi
    00001d7f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d86: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7558
    00001d8b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d92: 	jmp	.Ltmp2421 # Offset: 7570
.Ltmp2315:
    00001d97: 	movq	%r13, %rsi
    00001d9a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001da1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7585
    00001da6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dad: 	jmp	.Ltmp2422 # Offset: 7597
.Ltmp2306:
    00001db2: 	movq	%r13, %rsi
    00001db5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dbc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7612
    00001dc1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001dc8: 	jmp	.Ltmp2423 # Offset: 7624
.Ltmp2375:
    00001dcd: 	movq	-0x8(%rdx), %rax
    00001dd1: 	addq	$0x200, %rax
    00001dd7: 	jmp	.Ltmp2424 # Offset: 7639
.Ltmp2370:
    00001ddc: 	movq	%r13, %rsi
    00001ddf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001de6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7654
    00001deb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001df2: 	jmp	.Ltmp2425 # Offset: 7666
.Ltmp2360:
    00001df7: 	testq	%r12, %r12
    00001dfa: 	je	.Ltmp2426 # Offset: 7674
    00001e00: 	jmp	.Ltmp2427 # Offset: 7680
    00001e05: 	nopl	(%rax) # Size: 3
.Ltmp2374:
    00001e08: 	testq	%r12, %r12
    00001e0b: 	je	.Ltmp2428 # Offset: 7691
.Ltmp2445:
    00001e11: 	movq	%r12, %rdx
    00001e14: 	movq	%rbp, %rsi
    00001e17: 	callq	memcpy@PLT # Offset: 7703
    00001e1c: 	movq	0x48(%rsp), %r12
    00001e21: 	movq	(%rbx), %rdi
    00001e24: 	jmp	.Ltmp2428 # Offset: 7716
.Ltmp2252:
    00001e29: 	testq	%r14, %r14
    00001e2c: 	je	.Ltmp2389 # Offset: 7724
    00001e32: 	jmp	.Ltmp2429 # Offset: 7730
    00001e37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2301:
    00001e40: 	testq	%r14, %r14
    00001e43: 	je	.Ltmp2430 # Offset: 7747
    00001e49: 	jmp	.Ltmp2431 # Offset: 7753
    00001e4e: 	nop # Size: 2
.Ltmp2347:
    00001e50: 	testq	%r12, %r12
    00001e53: 	je	.Ltmp2432 # Offset: 7763
.Ltmp2446:
    00001e59: 	movq	%r12, %rdx
    00001e5c: 	movq	%r15, %rsi
    00001e5f: 	callq	memcpy@PLT # Offset: 7775
    00001e64: 	movq	0x48(%rsp), %r12
    00001e69: 	movq	(%rbp), %rdi
    00001e6d: 	jmp	.Ltmp2432 # Offset: 7789
.Ltmp2338:
    00001e72: 	testq	%r12, %r12
    00001e75: 	je	.Ltmp2433 # Offset: 7797
    00001e7b: 	jmp	.Ltmp2434 # Offset: 7803
.Ltmp2329:
    00001e80: 	testq	%r14, %r14
    00001e83: 	je	.Ltmp2435 # Offset: 7811
    00001e89: 	jmp	.Ltmp2436 # Offset: 7817
    00001e8e: 	nop # Size: 2
.Ltmp2310:
    00001e90: 	testq	%r14, %r14
    00001e93: 	je	.Ltmp2437 # Offset: 7827
    00001e99: 	jmp	.Ltmp2438 # Offset: 7833
    00001e9e: 	nop # Size: 2
.Ltmp2274:
    00001ea0: 	testq	%r15, %r15
    00001ea3: 	je	.Ltmp2439 # Offset: 7843
.Ltmp2447:
    00001ea9: 	movq	0x38(%rsp), %rsi
    00001eae: 	movq	%r15, %rdx
    00001eb1: 	callq	memcpy@PLT # Offset: 7857
    00001eb6: 	movq	0x48(%rsp), %r15
    00001ebb: 	movq	(%r14), %rdi
    00001ebe: 	jmp	.Ltmp2439 # Offset: 7870
.Ltmp2383:
    00001ec3: 	testq	%r12, %r12
    00001ec6: 	je	.Ltmp2440 # Offset: 7878
    00001ecc: 	jmp	.Ltmp2441 # Offset: 7884
    00001ed1: 	nopl	(%rax) # Size: 7
.Ltmp2319:
    00001ed8: 	testq	%r14, %r14
    00001edb: 	je	.Ltmp2442 # Offset: 7899
    00001ee1: 	jmp	.Ltmp2443 # Offset: 7905
    00001ee6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2263:
    00001ef0: 	testq	%r15, %r15
    00001ef3: 	je	.Ltmp2444 # Offset: 7923
.Ltmp2448:
    00001ef9: 	movq	0x38(%rsp), %rsi
    00001efe: 	movq	%r15, %rdx
    00001f01: 	callq	memcpy@PLT # Offset: 7937
    00001f06: 	movq	0x48(%rsp), %r15
    00001f0b: 	movq	(%r14), %rdi
    00001f0e: 	jmp	.Ltmp2444 # Offset: 7950
.Ltmp2300:
    00001f13: 	leaq	0x48(%rsp), %rsi
    00001f18: 	xorl	%edx, %edx
    00001f1a: 	movq	%rbx, %rdi
    00001f1d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7965
    00001f22: 	movq	%rax, (%rbx)
    00001f25: 	movq	%rax, %rdi
    00001f28: 	movq	0x48(%rsp), %rax
    00001f2d: 	movq	%rax, 0x10(%rbx)
.Ltmp2431:
    00001f31: 	movq	%r14, %rdx
    00001f34: 	movq	%rbp, %rsi
    00001f37: 	callq	memcpy@PLT # Offset: 7991
    00001f3c: 	movq	0x48(%rsp), %r14
    00001f41: 	movq	(%rbx), %rdi
    00001f44: 	jmp	.Ltmp2430 # Offset: 8004
.Ltmp2373:
    00001f49: 	leaq	0x48(%rsp), %rsi
    00001f4e: 	xorl	%edx, %edx
    00001f50: 	movq	%rbx, %rdi
    00001f53: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8019
    00001f58: 	movq	%rax, (%rbx)
    00001f5b: 	movq	%rax, %rdi
    00001f5e: 	movq	0x48(%rsp), %rax
    00001f63: 	movq	%rax, 0x10(%rbx)
    00001f67: 	jmp	.Ltmp2445 # Offset: 8039
.Ltmp2359:
    00001f6c: 	leaq	0x48(%rsp), %rsi
    00001f71: 	xorl	%edx, %edx
    00001f73: 	movq	%rbx, %rdi
    00001f76: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8054
    00001f7b: 	movq	%rax, (%rbx)
    00001f7e: 	movq	%rax, %rdi
    00001f81: 	movq	0x48(%rsp), %rax
    00001f86: 	movq	%rax, 0x10(%rbx)
.Ltmp2427:
    00001f8a: 	movq	%r12, %rdx
    00001f8d: 	movq	%rbp, %rsi
    00001f90: 	callq	memcpy@PLT # Offset: 8080
    00001f95: 	movq	0x48(%rsp), %r12
    00001f9a: 	movq	(%rbx), %rdi
    00001f9d: 	jmp	.Ltmp2426 # Offset: 8093
.Ltmp2309:
    00001fa2: 	leaq	0x48(%rsp), %rsi
    00001fa7: 	xorl	%edx, %edx
    00001fa9: 	movq	%rbx, %rdi
    00001fac: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8108
    00001fb1: 	movq	%rax, (%rbx)
    00001fb4: 	movq	%rax, %rdi
    00001fb7: 	movq	0x48(%rsp), %rax
    00001fbc: 	movq	%rax, 0x10(%rbx)
.Ltmp2438:
    00001fc0: 	movq	%r14, %rdx
    00001fc3: 	movq	%rbp, %rsi
    00001fc6: 	callq	memcpy@PLT # Offset: 8134
    00001fcb: 	movq	0x48(%rsp), %r14
    00001fd0: 	movq	(%rbx), %rdi
    00001fd3: 	jmp	.Ltmp2437 # Offset: 8147
.Ltmp2337:
    00001fd8: 	leaq	0x48(%rsp), %rsi
    00001fdd: 	xorl	%edx, %edx
    00001fdf: 	movq	%rbx, %rdi
    00001fe2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8162
    00001fe7: 	movq	%rax, (%rbx)
    00001fea: 	movq	%rax, %rdi
    00001fed: 	movq	0x48(%rsp), %rax
    00001ff2: 	movq	%rax, 0x10(%rbx)
.Ltmp2434:
    00001ff6: 	movq	%r12, %rdx
    00001ff9: 	movq	%rbp, %rsi
    00001ffc: 	callq	memcpy@PLT # Offset: 8188
    00002001: 	movq	0x48(%rsp), %r12
    00002006: 	movq	(%rbx), %rdi
    00002009: 	jmp	.Ltmp2433 # Offset: 8201
.Ltmp2328:
    0000200e: 	leaq	0x48(%rsp), %rsi
    00002013: 	xorl	%edx, %edx
    00002015: 	movq	%rbx, %rdi
    00002018: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8216
    0000201d: 	movq	%rax, (%rbx)
    00002020: 	movq	%rax, %rdi
    00002023: 	movq	0x48(%rsp), %rax
    00002028: 	movq	%rax, 0x10(%rbx)
.Ltmp2436:
    0000202c: 	movq	%r14, %rdx
    0000202f: 	movq	%rbp, %rsi
    00002032: 	callq	memcpy@PLT # Offset: 8242
    00002037: 	movq	0x48(%rsp), %r14
    0000203c: 	movq	(%rbx), %rdi
    0000203f: 	jmp	.Ltmp2435 # Offset: 8255
.Ltmp2346:
    00002044: 	leaq	0x48(%rsp), %rsi
    00002049: 	xorl	%edx, %edx
    0000204b: 	movq	%rbp, %rdi
    0000204e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8270
    00002053: 	movq	%rax, (%rbp)
    00002057: 	movq	%rax, %rdi
    0000205a: 	movq	0x48(%rsp), %rax
    0000205f: 	movq	%rax, 0x10(%rbp)
    00002063: 	jmp	.Ltmp2446 # Offset: 8291
.Ltmp2382:
    00002068: 	leaq	0x48(%rsp), %rsi
    0000206d: 	xorl	%edx, %edx
    0000206f: 	movq	%rbx, %rdi
    00002072: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8306
    00002077: 	movq	%rax, (%rbx)
    0000207a: 	movq	%rax, %rdi
    0000207d: 	movq	0x48(%rsp), %rax
    00002082: 	movq	%rax, 0x10(%rbx)
.Ltmp2441:
    00002086: 	movq	%r12, %rdx
    00002089: 	movq	%rbp, %rsi
    0000208c: 	callq	memcpy@PLT # Offset: 8332
    00002091: 	movq	0x48(%rsp), %r12
    00002096: 	movq	(%rbx), %rdi
    00002099: 	jmp	.Ltmp2440 # Offset: 8345
.Ltmp2318:
    0000209e: 	leaq	0x48(%rsp), %rsi
    000020a3: 	xorl	%edx, %edx
    000020a5: 	movq	%rbx, %rdi
    000020a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8360
    000020ad: 	movq	%rax, (%rbx)
    000020b0: 	movq	%rax, %rdi
    000020b3: 	movq	0x48(%rsp), %rax
    000020b8: 	movq	%rax, 0x10(%rbx)
.Ltmp2443:
    000020bc: 	movq	%r14, %rdx
    000020bf: 	movq	%rbp, %rsi
    000020c2: 	callq	memcpy@PLT # Offset: 8386
    000020c7: 	movq	0x48(%rsp), %r14
    000020cc: 	movq	(%rbx), %rdi
    000020cf: 	jmp	.Ltmp2442 # Offset: 8399
.Ltmp2273:
    000020d4: 	leaq	0x48(%rsp), %rsi
    000020d9: 	xorl	%edx, %edx
    000020db: 	movq	%r14, %rdi
    000020de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8414
    000020e3: 	movq	%rax, (%r14)
    000020e6: 	movq	%rax, %rdi
    000020e9: 	movq	0x48(%rsp), %rax
    000020ee: 	movq	%rax, 0x10(%r14)
    000020f2: 	jmp	.Ltmp2447 # Offset: 8434
.Ltmp2262:
    000020f7: 	leaq	0x48(%rsp), %rsi
    000020fc: 	xorl	%edx, %edx
    000020fe: 	movq	%r14, %rdi
    00002101: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8449
    00002106: 	movq	%rax, (%r14)
    00002109: 	movq	%rax, %rdi
    0000210c: 	movq	0x48(%rsp), %rax
    00002111: 	movq	%rax, 0x10(%r14)
    00002115: 	jmp	.Ltmp2448 # Offset: 8469
.Ltmp2261:
    0000211a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002121: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8481
.Ltmp2272:
    00002126: 	leaq	DATAat0x1c158(%rip), %rdi
    0000212d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8493
.Ltmp2299:
    00002132: 	leaq	DATAat0x1c158(%rip), %rdi
    00002139: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8505
.Ltmp2308:
    0000213e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002145: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8517
.Ltmp2317:
    0000214a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002151: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8529
.Ltmp2327:
    00002156: 	leaq	DATAat0x1c158(%rip), %rdi
    0000215d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8541
.Ltmp2336:
    00002162: 	leaq	DATAat0x1c158(%rip), %rdi
    00002169: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8553
.Ltmp2345:
    0000216e: 	leaq	DATAat0x1c158(%rip), %rdi
    00002175: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8565
.Ltmp2358:
    0000217a: 	leaq	DATAat0x1c158(%rip), %rdi
    00002181: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8577
.Ltmp2372:
    00002186: 	leaq	DATAat0x1c158(%rip), %rdi
    0000218d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8589
.Ltmp2381:
    00002192: 	leaq	DATAat0x1c158(%rip), %rdi
    00002199: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8601
.Ltmp2388:
    0000219e: 	callq	__stack_chk_fail@PLT # Offset: 8606
.Ltmp2250:
    000021a3: 	leaq	DATAat0x1c158(%rip), %rdi
    000021aa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8618
    000021af: 	endbr64
.Ltmp2450:
    000021b3: 	movq	%rax, %rbp
    000021b6: 	jmp	.Ltmp2449 # Offset: 8630
    000021bb: 	endbr64
    000021bf: 	jmp	.Ltmp2450 # Offset: 8639
    000021c1: 	endbr64
    000021c5: 	jmp	.Ltmp2450 # Offset: 8645
    000021c7: 	endbr64
    000021cb: 	jmp	.Ltmp2450 # Offset: 8651
    000021cd: 	endbr64
    000021d1: 	jmp	.Ltmp2450 # Offset: 8657
    000021d3: 	endbr64
    000021d7: 	jmp	.Ltmp2450 # Offset: 8663
    000021d9: 	endbr64
    000021dd: 	jmp	.Ltmp2450 # Offset: 8669
    000021df: 	endbr64
    000021e3: 	movq	%rax, %rbp
    000021e6: 	jmp	.Ltmp2451 # Offset: 8678
    000021e8: 	endbr64
    000021ec: 	movq	%rax, %rbp
    000021ef: 	jmp	.Ltmp2452 # Offset: 8687
    000021f1: 	endbr64
    000021f5: 	jmp	.Ltmp2450 # Offset: 8693
.Ltmp2451:
    000021f7: 	movq	0xb0(%rsp), %rdi
    000021ff: 	leaq	0xc0(%rsp), %rax
    00002207: 	cmpq	%rax, %rdi
    0000220a: 	je	.Ltmp2452 # Offset: 8714
.Ltmp2454:
    0000220c: 	movq	0xc0(%rsp), %rax
    00002214: 	leaq	0x1(%rax), %rsi
    00002218: 	callq	_ZdlPvm@PLT # Offset: 8728
.Ltmp2452:
    0000221d: 	movq	0x90(%rsp), %rdi
    00002225: 	cmpq	0x28(%rsp), %rdi
    0000222a: 	je	.Ltmp2453 # Offset: 8746
    0000222c: 	movq	0xa0(%rsp), %rax
    00002234: 	leaq	0x1(%rax), %rsi
    00002238: 	callq	_ZdlPvm@PLT # Offset: 8760
.Ltmp2453:
    0000223d: 	movq	%rbp, %rdi
    00002240: 	callq	_Unwind_Resume@PLT # Offset: 8768
    00002245: 	endbr64
    00002249: 	jmp	.Ltmp2450 # Offset: 8777
    0000224e: 	endbr64
    00002252: 	jmp	.Ltmp2450 # Offset: 8786
    00002257: 	endbr64
    0000225b: 	jmp	.Ltmp2450 # Offset: 8795
    00002260: 	endbr64
    00002264: 	jmp	.Ltmp2450 # Offset: 8804
    00002269: 	endbr64
    0000226d: 	jmp	.Ltmp2450 # Offset: 8813
    00002272: 	endbr64
    00002276: 	jmp	.Ltmp2450 # Offset: 8822
    0000227b: 	endbr64
    0000227f: 	jmp	.Ltmp2450 # Offset: 8831
    00002284: 	endbr64
    00002288: 	jmp	.Ltmp2450 # Offset: 8840
    0000228d: 	endbr64
    00002291: 	jmp	.Ltmp2450 # Offset: 8849
    00002296: 	endbr64
    0000229a: 	jmp	.Ltmp2450 # Offset: 8858
    0000229f: 	endbr64
    000022a3: 	jmp	.Ltmp2450 # Offset: 8867
.Ltmp2449:
    000022a8: 	movq	0xb0(%rsp), %rdi
    000022b0: 	cmpq	(%rsp), %rdi
    000022b4: 	jne	.Ltmp2454 # Offset: 8884
    000022ba: 	jmp	.Ltmp2452 # Offset: 8890
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlEvT_"

Binary Function "_fini" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x1b9b0
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x1b9b0
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 70 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 2024 instructions were shortened
BOLT-INFO: removed 377 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 65 out of 96 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x2031fc
