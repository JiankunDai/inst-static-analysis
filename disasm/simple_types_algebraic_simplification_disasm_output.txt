BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x3e028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x3dff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x13f0
  Size        : 0x152
  MaxSize     : 0x160
  Offset      : 0x13f0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	subq	$0x10, %rsp
    00000010: 	testl	%edi, %edi
    00000012: 	jle	.Ltmp1 # Offset: 18
    00000018: 	leal	-0x1(%rdi), %eax
    0000001b: 	movl	%edi, %r13d
    0000001e: 	movq	%rsi, %r14
    00000021: 	movq	%rsi, %rbx
    00000024: 	leaq	0x8(%rsi,%rax,8), %r12
    00000029: 	leaq	DATAat0x38042(%rip), %rbp
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x38028(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000068: 	movsd	DATAat0x385d0(%rip), %xmm0
.Ltmp5:
    00000070: 	movsd	%xmm0, 0x8(%rsp)
    00000076: 	callq	_Z11TestOneTypeIaEvd # Offset: 118
    0000007b: 	movsd	0x8(%rsp), %xmm0
    00000081: 	callq	_Z11TestOneTypeIhEvd # Offset: 129
    00000086: 	movsd	0x8(%rsp), %xmm0
    0000008c: 	callq	_Z11TestOneTypeIsEvd # Offset: 140
    00000091: 	movsd	0x8(%rsp), %xmm0
    00000097: 	callq	_Z11TestOneTypeItEvd # Offset: 151
    0000009c: 	movsd	0x8(%rsp), %xmm0
    000000a2: 	callq	_Z11TestOneTypeIiEvd # Offset: 162
    000000a7: 	movsd	0x8(%rsp), %xmm0
    000000ad: 	callq	_Z11TestOneTypeIjEvd # Offset: 173
    000000b2: 	movsd	0x8(%rsp), %xmm0
    000000b8: 	callq	_Z11TestOneTypeIlEvd # Offset: 184
    000000bd: 	movsd	0x8(%rsp), %xmm0
    000000c3: 	callq	_Z11TestOneTypeImEvd # Offset: 195
    000000c8: 	movsd	0x8(%rsp), %xmm0
    000000ce: 	callq	_Z16TestOneTypeFloatIfEvd # Offset: 206
    000000d3: 	movsd	0x8(%rsp), %xmm0
    000000d9: 	callq	_Z16TestOneTypeFloatIdEvd # Offset: 217
    000000de: 	addq	$0x10, %rsp
    000000e2: 	xorl	%eax, %eax
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	popq	%r14
    000000ec: 	retq # Offset: 236
.Ltmp3:
    000000ed: 	movq	0x8(%r14), %rdi
    000000f1: 	movl	$0xa, %edx
    000000f6: 	xorl	%esi, %esi
    000000f8: 	callq	strtol@PLT # Offset: 248
    000000fd: 	movl	%eax, iterations(%rip)
    00000103: 	cmpl	$0x2, %r13d
    00000107: 	jle	.Ltmp4 # Offset: 263
    0000010d: 	movq	0x10(%r14), %rdi
    00000111: 	xorl	%esi, %esi
    00000113: 	callq	strtod@PLT # Offset: 275
    00000118: 	movsd	%xmm0, init_value(%rip)
    00000120: 	cmpl	$0x3, %r13d
    00000124: 	jle	.Ltmp4 # Offset: 292
    0000012a: 	movq	0x18(%r14), %rdi
    0000012e: 	xorl	%esi, %esi
    00000130: 	callq	strtod@PLT # Offset: 304
    00000135: 	jmp	.Ltmp5 # Offset: 309
.Ltmp1:
    0000013a: 	leaq	DATAat0x38028(%rip), %rsi
    00000141: 	movl	$0x1, %edi
    00000146: 	xorl	%eax, %eax
    00000148: 	callq	__printf_chk@PLT # Offset: 328
    0000014d: 	jmp	.Ltmp4 # Offset: 333
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x1630
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1630
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x3dfe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1660
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1660
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp6 # Offset: 17
    00000013: 	movq	DATAat0x3dfe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp6 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp6:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x1690
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1690
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp7 # Offset: 34
    00000024: 	movq	DATAat0x3dff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp7 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x16d0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x16d0
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp8 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp9 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp9:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp8:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x1710
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x1710
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z9summarizePKciiii.constprop.0/1(*2)" after disassembly {
  All names   : _Z9summarizePKciiii.constprop.0/1
                _Z9summarizePKciiii.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 10
  State       : disassembled
  Address     : 0x1720
  Size        : 0x25e
  MaxSize     : 0x260
  Offset      : 0x1720
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x28, %rsp
    0000000e: 	movl	current_test(%rip), %eax
    00000014: 	testl	%eax, %eax
    00000016: 	je	.Ltmp10 # Offset: 22
    0000001c: 	movq	%rdi, %r12
    0000001f: 	movl	%esi, %r13d
    00000022: 	jle	.Ltmp11 # Offset: 34
    00000028: 	movq	results(%rip), %rdx
    0000002f: 	subl	$0x1, %eax
    00000032: 	movl	$0xc, %ebx
    00000037: 	shlq	$0x4, %rax
    0000003b: 	leaq	0x8(%rdx), %r14
    0000003f: 	leaq	0x18(%rdx,%rax), %rbp
    00000044: 	nopl	(%rax) # Size: 4
.Ltmp12:
    00000048: 	movq	(%r14), %rdi
    0000004b: 	callq	strlen@PLT # Offset: 75
    00000050: 	cmpl	%eax, %ebx
    00000052: 	cmovll	%eax, %ebx
    00000055: 	addq	$0x10, %r14
    00000059: 	cmpq	%r14, %rbp
    0000005c: 	jne	.Ltmp12 # Offset: 92
    0000005e: 	leal	-0xc(%rbx), %edx
.Ltmp22:
    00000061: 	leaq	DATAat0x38044(%rip), %r14
    00000068: 	leaq	DATAat0x38048(%rip), %rsi
    0000006f: 	movl	$0x1, %edi
    00000074: 	xorl	%eax, %eax
    00000076: 	movq	%r14, %rcx
    00000079: 	callq	__printf_chk@PLT # Offset: 121
    0000007e: 	movq	%r14, %rcx
    00000081: 	movl	%ebx, %edx
    00000083: 	movl	$0x1, %edi
    00000088: 	leaq	DATAat0x38088(%rip), %rsi
    0000008f: 	xorl	%eax, %eax
    00000091: 	callq	__printf_chk@PLT # Offset: 145
    00000096: 	movl	current_test(%rip), %eax
    0000009c: 	testl	%eax, %eax
    0000009e: 	jle	.Ltmp13 # Offset: 158
    000000a4: 	pxor	%xmm0, %xmm0
    000000a8: 	movsd	DATAat0x385e8(%rip), %xmm3
    000000b0: 	leaq	DATAat0x380b8(%rip), %rbp
    000000b7: 	cvtsi2sd	%r13d, %xmm0
    000000bc: 	mulsd	DATAat0x385d8(%rip), %xmm0
    000000c4: 	xorl	%r13d, %r13d
    000000c7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000000cf: 	movsd	%xmm0, 0x18(%rsp)
    000000d5: 	jmp	.Ltmp14 # Offset: 213
    000000da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp18:
    000000e0: 	comisd	%xmm0, %xmm3
    000000e4: 	ja	.Ltmp15 # Offset: 228
    000000ea: 	movq	DATAat0x385c8(%rip), %rdi
    000000f1: 	movq	%rdi, %xmm2
.Ltmp19:
    000000f6: 	comisd	%xmm0, %xmm3
    000000fa: 	movq	DATAat0x385c8(%rip), %rsi
    00000101: 	movq	%rsi, %xmm1
    00000106: 	ja	.Ltmp16 # Offset: 262
    00000108: 	movsd	0x18(%rsp), %xmm1
    0000010e: 	divsd	%xmm0, %xmm1
.Ltmp16:
    00000112: 	movq	0x8(%rax), %r14
    00000116: 	movsd	%xmm0, 0x10(%rsp)
    0000011c: 	addq	$0x1, %r13
    00000120: 	movsd	%xmm1, 0x8(%rsp)
    00000126: 	movq	%r14, %rdi
    00000129: 	movsd	%xmm2, (%rsp)
    0000012e: 	callq	strlen@PLT # Offset: 302
    00000133: 	movsd	(%rsp), %xmm2
    00000138: 	movl	%ebx, %ecx
    0000013a: 	movq	%rbp, %rsi
    0000013d: 	movsd	0x8(%rsp), %xmm1
    00000143: 	subl	%eax, %ecx
    00000145: 	movq	%r14, %r9
    00000148: 	movl	%r15d, %edx
    0000014b: 	movsd	0x10(%rsp), %xmm0
    00000151: 	movl	$0x1, %edi
    00000156: 	movl	$0x3, %eax
    0000015b: 	leaq	DATAat0x38029(%rip), %r8
    00000162: 	callq	__printf_chk@PLT # Offset: 354
    00000167: 	movl	current_test(%rip), %eax
    0000016d: 	movq	DATAat0x385e8(%rip), %rsi
    00000174: 	cmpl	%r13d, %eax
    00000177: 	movq	%rsi, %xmm3
    0000017c: 	jle	.Ltmp17 # Offset: 380
.Ltmp14:
    0000017e: 	movq	results(%rip), %rax
    00000185: 	movq	%r13, %rdx
    00000188: 	movl	%r13d, %r15d
    0000018b: 	shlq	$0x4, %rdx
    0000018f: 	movsd	(%rax), %xmm1
    00000193: 	addq	%rdx, %rax
    00000196: 	movsd	(%rax), %xmm0
    0000019a: 	comisd	%xmm1, %xmm3
    0000019e: 	ja	.Ltmp18 # Offset: 414
    000001a4: 	movapd	%xmm0, %xmm2
    000001a8: 	divsd	%xmm1, %xmm2
    000001ac: 	jmp	.Ltmp19 # Offset: 428
    000001b1: 	nopl	(%rax) # Size: 7
.Ltmp15:
    000001b8: 	movq	DATAat0x385d0(%rip), %rsi
    000001bf: 	movq	DATAat0x385c8(%rip), %rdi
    000001c6: 	movq	%rsi, %xmm2
    000001cb: 	movq	%rdi, %xmm1
    000001d0: 	jmp	.Ltmp16 # Offset: 464
    000001d5: 	nopl	(%rax) # Size: 3
.Ltmp17:
    000001d8: 	testl	%eax, %eax
    000001da: 	jle	.Ltmp13 # Offset: 474
    000001dc: 	movq	results(%rip), %rdx
    000001e3: 	leal	-0x1(%rax), %ecx
    000001e6: 	pxor	%xmm0, %xmm0
    000001ea: 	shlq	$0x4, %rcx
    000001ee: 	leaq	0x10(%rdx), %rax
    000001f2: 	addq	%rax, %rcx
    000001f5: 	jmp	.Ltmp20 # Offset: 501
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp21:
    00000200: 	addq	$0x10, %rax
.Ltmp20:
    00000204: 	addsd	(%rdx), %xmm0
    00000208: 	movq	%rax, %rdx
    0000020b: 	cmpq	%rax, %rcx
    0000020e: 	jne	.Ltmp21 # Offset: 526
.Ltmp23:
    00000210: 	movq	%r12, %rdx
    00000213: 	movl	$0x1, %edi
    00000218: 	movl	$0x1, %eax
    0000021d: 	leaq	DATAat0x380e8(%rip), %rsi
    00000224: 	callq	__printf_chk@PLT # Offset: 548
    00000229: 	movl	$0x0, current_test(%rip)
.Ltmp10:
    00000233: 	addq	$0x28, %rsp
    00000237: 	popq	%rbx
    00000238: 	popq	%rbp
    00000239: 	popq	%r12
    0000023b: 	popq	%r13
    0000023d: 	popq	%r14
    0000023f: 	popq	%r15
    00000241: 	retq # Offset: 577
    00000242: 	nopw	(%rax,%rax) # Size: 6
.Ltmp11:
    00000248: 	xorl	%edx, %edx
    0000024a: 	movl	$0xc, %ebx
    0000024f: 	jmp	.Ltmp22 # Offset: 591
    00000254: 	nopl	(%rax) # Size: 4
.Ltmp13:
    00000258: 	pxor	%xmm0, %xmm0
    0000025c: 	jmp	.Ltmp23 # Offset: 604
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii.constprop.0/1(*2)"

Binary Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
                _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 11
  State       : disassembled
  Address     : 0x1980
  Size        : 0xd3
  MaxSize     : 0xe0
  Offset      : 0x1980
  Section     : .text
  Orc Section : .local.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	pushq	%r13
    00000002: 	pushq	%r12
    00000004: 	leaq	0x10(%rdi), %r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	xorl	%eax, %eax
    0000001e: 	movq	%r12, (%rdi)
    00000021: 	testq	%rsi, %rsi
    00000024: 	je	.Ltmp24 # Offset: 36
    0000002a: 	movq	%rdi, %rbx
    0000002d: 	movq	%rsi, %rdi
    00000030: 	movq	%rsi, %rbp
    00000033: 	callq	strlen@PLT # Offset: 51
    00000038: 	movq	%rax, (%rsp)
    0000003c: 	movq	%rax, %r13
    0000003f: 	cmpq	$0xf, %rax
    00000043: 	ja	.Ltmp25 # Offset: 67
    00000045: 	cmpq	$0x1, %rax
    00000049: 	jne	.Ltmp26 # Offset: 73
    0000004b: 	movzbl	(%rbp), %edx
    0000004f: 	movb	%dl, 0x10(%rbx)
.Ltmp28:
    00000052: 	movq	%rax, 0x8(%rbx)
    00000056: 	movb	$0x0, (%r12,%rax)
    0000005b: 	movq	0x8(%rsp), %rax
    00000060: 	subq	%fs:0x28, %rax
    00000069: 	jne	.Ltmp27 # Offset: 105
    0000006b: 	addq	$0x18, %rsp
    0000006f: 	popq	%rbx
    00000070: 	popq	%rbp
    00000071: 	popq	%r12
    00000073: 	popq	%r13
    00000075: 	retq # Offset: 117
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp26:
    00000080: 	testq	%rax, %rax
    00000083: 	je	.Ltmp28 # Offset: 131
    00000085: 	jmp	.Ltmp29 # Offset: 133
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp25:
    00000090: 	movq	%rsp, %rsi
    00000093: 	xorl	%edx, %edx
    00000095: 	movq	%rbx, %rdi
    00000098: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 152
    0000009d: 	movq	%rax, (%rbx)
    000000a0: 	movq	%rax, %r12
    000000a3: 	movq	(%rsp), %rax
    000000a7: 	movq	%rax, 0x10(%rbx)
.Ltmp29:
    000000ab: 	movq	%r12, %rdi
    000000ae: 	movq	%r13, %rdx
    000000b1: 	movq	%rbp, %rsi
    000000b4: 	callq	memcpy@PLT # Offset: 180
    000000b9: 	movq	(%rsp), %rax
    000000bd: 	movq	(%rbx), %r12
    000000c0: 	jmp	.Ltmp28 # Offset: 192
.Ltmp27:
    000000c2: 	callq	__stack_chk_fail@PLT # Offset: 194
.Ltmp24:
    000000c7: 	leaq	DATAat0x38110(%rip), %rdi
    000000ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 206
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1a60
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x1a60
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp30 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp31 # Offset: 38
.Ltmp30:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp32 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp31:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp32:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x38140(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1b00
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x1b00
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp33 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp34 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp35:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp35 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp48:
    00000069: 	leaq	DATAat0x38044(%rip), %rbp
    00000070: 	leaq	DATAat0x38048(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x38088(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp36 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x385e8(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x380b8(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp37 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp41:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp38 # Offset: 244
    000000fa: 	movq	DATAat0x385c8(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp42:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x385c8(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp39 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp39:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x38029(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x385e8(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp40 # Offset: 398
.Ltmp37:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp41 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp42 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp38:
    000001c8: 	movq	DATAat0x385d0(%rip), %rsi
    000001cf: 	movq	DATAat0x385c8(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp39 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp40:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp36 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp43 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp44:
    00000210: 	addq	$0x10, %rax
.Ltmp43:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp44 # Offset: 542
.Ltmp49:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x380e8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp45 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp46 # Offset: 592
.Ltmp45:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp33:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp46:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp47:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp47 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x38004(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp33 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp34:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp48 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp36:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp49 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1e30
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1e30
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp50 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp51 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp52:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp52 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp57:
    0000006a: 	leaq	DATAat0x38044(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x38160(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x3802a(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x38044(%rip), %r8
    000000a1: 	leaq	DATAat0x38018(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp53 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp54:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x38029(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp54 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp53 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp55 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp56:
    00000140: 	addq	$0x10, %rax
.Ltmp55:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp56 # Offset: 334
.Ltmp58:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x380e8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp50:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp51:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp57 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp53:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp58 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1fe0
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1fe0
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x2000
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x2000
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x2040
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2040
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x2070
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2070
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x20a0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x20d0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x2100
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2100
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x2130
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2130
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x2160
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2160
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x2190
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2190
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x21c0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x21c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x21f0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x21f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x2220
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2220
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x2250
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x2250
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x2290
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2290
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x22c0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x22c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x22f0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x22f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x2320
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2320
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2350
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2350
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x2380
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2380
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x23b0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x23b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x23e0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x23e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x2410
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2410
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x2440
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2440
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x2470
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2470
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 40
  State       : disassembled
  Address     : 0x24a0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x24a0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp59 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp62:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp61:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp60 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp61 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp62 # Offset: 142
.Ltmp59:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp63 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp64 # Offset: 164
.Ltmp67:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp65 # Offset: 177
.Ltmp66:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp64 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp66 # Offset: 214
.Ltmp65:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp67 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp68 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp70:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp69 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp69:
    0000010a: 	addq	$0x20, %r13
.Ltmp64:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp70 # Offset: 275
.Ltmp68:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp71 # Offset: 283
.Ltmp77:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp72 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp73:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp73 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp72:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp60:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp61 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp62 # Offset: 389
    0000018b: 	jmp	.Ltmp59 # Offset: 395
.Ltmp63:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp68 # Offset: 405
.Ltmp76:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp74 # Offset: 422
.Ltmp75:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp68 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp75 # Offset: 463
.Ltmp74:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp76 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp77 # Offset: 482
.Ltmp71:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x26a0
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x26a0
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp78 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp79 # Offset: 63
.Ltmp78:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp80 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp81 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp85:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp82 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp83 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp81:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp84 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp85 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp80:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp86:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp85 # Offset: 248
.Ltmp79:
    000000fd: 	leaq	DATAat0x38110(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp82:
    00000109: 	leaq	DATAat0x38182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp83:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp84:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp86 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp87 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp87:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x27f0
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x27f0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp88 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp91:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp90:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp89 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp90 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp91 # Offset: 142
.Ltmp88:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp92 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp93 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp95:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp94 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp95 # Offset: 215
.Ltmp93:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp96 # Offset: 222
.Ltmp98:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp97 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp98 # Offset: 263
.Ltmp96:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp99 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp100:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp100 # Offset: 324
.Ltmp99:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp89:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp90 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp91 # Offset: 397
    00000193: 	jmp	.Ltmp88 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp97:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp98 # Offset: 425
    000001af: 	jmp	.Ltmp96 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp94:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp95 # Offset: 449
    000001c7: 	jmp	.Ltmp93 # Offset: 455
.Ltmp92:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp96 # Offset: 465
.Ltmp103:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp101 # Offset: 482
.Ltmp102:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp96 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp102 # Offset: 523
.Ltmp101:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp103 # Offset: 534
    00000218: 	jmp	.Ltmp96 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x2a10
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2a10
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp104 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp105 # Offset: 152
.Ltmp116:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp106 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp107 # Offset: 204
.Ltmp106:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp108 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp109 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp111:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp110 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp109:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp111 # Offset: 339
    00000155: 	jmp	.Ltmp112 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp105:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp113 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp114 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp115 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp115:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp118:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp116 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp108:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp112:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp111 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp113:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp117 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp118 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp118 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp117:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp118 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp118 # Offset: 696
.Ltmp107:
    000002bd: 	leaq	DATAat0x38110(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp114:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp119 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp119:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp104:
    000002e0: 	leaq	DATAat0x38198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp110:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x2d40
  Size        : 0x10c
  MaxSize     : 0x110
  Offset      : 0x2d40
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	movq	0x30(%rdi), %rbx
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	movq	0x40(%rdi), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp120 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %r13
    00000044: 	movq	%r13, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp121 # Offset: 74
    0000004c: 	testq	%r13, %r13
    0000004f: 	je	.Ltmp122 # Offset: 79
.Ltmp121:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp123 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp124 # Offset: 99
    00000069: 	movzbl	(%r13), %eax
    0000006e: 	movb	%al, 0x10(%rbx)
.Ltmp126:
    00000071: 	movq	%r12, 0x8(%rbx)
    00000075: 	movb	$0x0, (%rdi,%r12)
    0000007a: 	addq	$0x20, 0x30(%rbp)
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	subq	%fs:0x28, %rax
    0000008d: 	jne	.Ltmp125 # Offset: 141
    0000008f: 	addq	$0x18, %rsp
    00000093: 	popq	%rbx
    00000094: 	popq	%rbp
    00000095: 	popq	%r12
    00000097: 	popq	%r13
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp123:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp127:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%r13, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp126 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp120:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp125 # Offset: 222
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp124:
    000000f0: 	testq	%r12, %r12
    000000f3: 	je	.Ltmp126 # Offset: 243
    000000f9: 	jmp	.Ltmp127 # Offset: 249
.Ltmp122:
    000000fb: 	leaq	DATAat0x38110(%rip), %rdi
    00000102: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 258
.Ltmp125:
    00000107: 	callq	__stack_chk_fail@PLT # Offset: 263
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_"

Binary Function "_Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 45
  State       : disassembled
  Address     : 0x2e50
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x2e50
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp128 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp131:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp129:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp129 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	cmpb	%al, %dl
    00000091: 	je	.Ltmp130 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%r12, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp128 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp131 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp130:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp131 # Offset: 207
.Ltmp128:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp132 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp133 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp134 # Offset: 262
.Ltmp133:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp135 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp136 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp139:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp137 # Offset: 340
.Ltmp140:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp138 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp135:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp141:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp139 # Offset: 471
.Ltmp132:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp140 # Offset: 512
.Ltmp137:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp140 # Offset: 528
.Ltmp136:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp139 # Offset: 536
    0000021e: 	jmp	.Ltmp141 # Offset: 542
.Ltmp138:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp134:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 46
  State       : disassembled
  Address     : 0x3090
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3090
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp142 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp145:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp143:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp143 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	cmpb	%al, %dl
    00000093: 	je	.Ltmp144 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%r12, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp142 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp145 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp144:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp145 # Offset: 207
.Ltmp142:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp146 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp147 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp148 # Offset: 262
.Ltmp147:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp149 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp150 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp153:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp151 # Offset: 340
.Ltmp154:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp152 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp149:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp155:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp153 # Offset: 471
.Ltmp146:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp154 # Offset: 512
.Ltmp151:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp154 # Offset: 528
.Ltmp150:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp153 # Offset: 536
    0000021e: 	jmp	.Ltmp155 # Offset: 542
.Ltmp152:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp148:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 47
  State       : disassembled
  Address     : 0x32d0
  Size        : 0x232
  MaxSize     : 0x240
  Offset      : 0x32d0
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp156 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbx), %r13
    0000004e: 	leaq	DATAat0x381c8(%rip), %rbp
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp159:
    00000058: 	movq	%rbx, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp157:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	psubb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %r13
    0000006f: 	jne	.Ltmp157 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	addb	%dl, %al
    00000091: 	je	.Ltmp158 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%rbp, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp156 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp159 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp158:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp159 # Offset: 207
.Ltmp156:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp160 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	%rdi, (%rbx)
    000000f3: 	movq	(%r12), %rbp
    000000f7: 	movq	0x8(%r12), %r12
    000000fc: 	movq	%rbp, %rax
    000000ff: 	addq	%r12, %rax
    00000102: 	je	.Ltmp161 # Offset: 258
    00000104: 	testq	%rbp, %rbp
    00000107: 	je	.Ltmp162 # Offset: 263
.Ltmp161:
    0000010d: 	movq	%r12, (%rsp)
    00000111: 	cmpq	$0xf, %r12
    00000115: 	ja	.Ltmp163 # Offset: 277
    0000011b: 	cmpq	$0x1, %r12
    0000011f: 	jne	.Ltmp164 # Offset: 287
    00000125: 	movzbl	(%rbp), %eax
    00000129: 	movb	%al, 0x10(%rbx)
.Ltmp167:
    0000012c: 	movq	%r12, 0x8(%rbx)
    00000130: 	movb	$0x0, (%rdi,%r12)
    00000135: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000143: 	addq	$0x20, %rax
    00000147: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000155: 	je	.Ltmp165 # Offset: 341
.Ltmp168:
    0000015b: 	movq	-0x20(%rax), %rbp
    0000015f: 	callq	clock@PLT # Offset: 351
    00000164: 	movq	%rax, end_time(%rip)
    0000016b: 	movq	0x8(%rsp), %rdx
    00000170: 	subq	%fs:0x28, %rdx
    00000179: 	jne	.Ltmp166 # Offset: 377
    0000017f: 	subq	start_time(%rip), %rax
    00000186: 	pxor	%xmm0, %xmm0
    0000018a: 	movq	%rbp, %rdi
    0000018d: 	cvtsi2sd	%rax, %xmm0
    00000192: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000019a: 	addq	$0x10, %rsp
    0000019e: 	popq	%rbx
    0000019f: 	popq	%rbp
    000001a0: 	popq	%r12
    000001a2: 	popq	%r13
    000001a4: 	popq	%r14
    000001a6: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 422
.Ltmp163:
    000001ab: 	movq	%rbx, %rdi
    000001ae: 	movq	%rsp, %rsi
    000001b1: 	xorl	%edx, %edx
    000001b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 435
    000001b8: 	movq	%rax, (%rbx)
    000001bb: 	movq	%rax, %rdi
    000001be: 	movq	(%rsp), %rax
    000001c2: 	movq	%rax, 0x10(%rbx)
.Ltmp169:
    000001c6: 	movq	%r12, %rdx
    000001c9: 	movq	%rbp, %rsi
    000001cc: 	callq	memcpy@PLT # Offset: 460
    000001d1: 	movq	(%rsp), %r12
    000001d5: 	movq	(%rbx), %rdi
    000001d8: 	jmp	.Ltmp167 # Offset: 472
.Ltmp160:
    000001dd: 	movq	%r12, %rsi
    000001e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 487
    000001ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000201: 	jne	.Ltmp168 # Offset: 513
.Ltmp165:
    00000207: 	movq	-0x8(%rdx), %rax
    0000020b: 	addq	$0x200, %rax
    00000211: 	jmp	.Ltmp168 # Offset: 529
.Ltmp164:
    00000216: 	testq	%r12, %r12
    00000219: 	je	.Ltmp167 # Offset: 537
    0000021f: 	jmp	.Ltmp169 # Offset: 543
.Ltmp166:
    00000221: 	callq	__stack_chk_fail@PLT # Offset: 545
.Ltmp162:
    00000226: 	leaq	DATAat0x38110(%rip), %rdi
    0000022d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 557
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 48
  State       : disassembled
  Address     : 0x3510
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3510
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp170 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp173:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp171:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp171 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	cmpb	%al, %dl
    00000091: 	je	.Ltmp172 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%r12, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp170 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp173 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp172:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp173 # Offset: 207
.Ltmp170:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp174 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp175 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp176 # Offset: 262
.Ltmp175:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp177 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp178 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp181:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp179 # Offset: 340
.Ltmp182:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp180 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp177:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp183:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp181 # Offset: 471
.Ltmp174:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp182 # Offset: 512
.Ltmp179:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp182 # Offset: 528
.Ltmp178:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp181 # Offset: 536
    0000021e: 	jmp	.Ltmp183 # Offset: 542
.Ltmp180:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp176:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 49
  State       : disassembled
  Address     : 0x3750
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3750
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp184 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp187:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp185:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp185 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	cmpb	%al, %dl
    00000093: 	je	.Ltmp186 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%r12, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp184 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp187 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp186:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp187 # Offset: 207
.Ltmp184:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp188 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp189 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp190 # Offset: 262
.Ltmp189:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp191 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp192 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp195:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp193 # Offset: 340
.Ltmp196:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp194 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp191:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp197:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp195 # Offset: 471
.Ltmp188:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp196 # Offset: 512
.Ltmp193:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp196 # Offset: 528
.Ltmp192:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp195 # Offset: 536
    0000021e: 	jmp	.Ltmp197 # Offset: 542
.Ltmp194:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp190:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 50
  State       : disassembled
  Address     : 0x3990
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3990
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp198 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp201:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp199:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp199 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	cmpb	%al, %dl
    00000091: 	je	.Ltmp200 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%r12, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp198 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp201 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp200:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp201 # Offset: 207
.Ltmp198:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp202 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp203 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp204 # Offset: 262
.Ltmp203:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp205 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp206 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp209:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp207 # Offset: 340
.Ltmp210:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp208 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp205:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp211:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp209 # Offset: 471
.Ltmp202:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp210 # Offset: 512
.Ltmp207:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp210 # Offset: 528
.Ltmp206:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp209 # Offset: 536
    0000021e: 	jmp	.Ltmp211 # Offset: 542
.Ltmp208:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp204:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 51
  State       : disassembled
  Address     : 0x3bd0
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3bd0
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp212 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp215:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp213:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp213 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	cmpb	%al, %dl
    00000091: 	je	.Ltmp214 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%r12, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp212 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp215 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp214:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp215 # Offset: 207
.Ltmp212:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp216 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp217 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp218 # Offset: 262
.Ltmp217:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp219 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp220 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp223:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp221 # Offset: 340
.Ltmp224:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp222 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp219:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp225:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp223 # Offset: 471
.Ltmp216:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp224 # Offset: 512
.Ltmp221:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp224 # Offset: 528
.Ltmp220:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp223 # Offset: 536
    0000021e: 	jmp	.Ltmp225 # Offset: 542
.Ltmp222:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp218:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 52
  State       : disassembled
  Address     : 0x3e10
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x3e10
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp226 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp229:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp227:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp227 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	cmpb	%al, %dl
    00000093: 	je	.Ltmp228 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%r12, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp226 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp229 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp228:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp229 # Offset: 207
.Ltmp226:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp230 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp231 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp232 # Offset: 262
.Ltmp231:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp233 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp234 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp237:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp235 # Offset: 340
.Ltmp238:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp236 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp233:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp239:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp237 # Offset: 471
.Ltmp230:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp238 # Offset: 512
.Ltmp235:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp238 # Offset: 528
.Ltmp234:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp237 # Offset: 536
    0000021e: 	jmp	.Ltmp239 # Offset: 542
.Ltmp236:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp232:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 53
  State       : disassembled
  Address     : 0x4050
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x4050
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp240 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x381c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp243:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp241:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp241 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	cmpb	%al, %dl
    00000093: 	je	.Ltmp242 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%r12, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp240 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp243 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp242:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp243 # Offset: 207
.Ltmp240:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp244 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp245 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp246 # Offset: 262
.Ltmp245:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp247 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp248 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp251:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp249 # Offset: 340
.Ltmp252:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp250 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp247:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp253:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp251 # Offset: 471
.Ltmp244:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp252 # Offset: 512
.Ltmp249:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp252 # Offset: 528
.Ltmp248:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp251 # Offset: 536
    0000021e: 	jmp	.Ltmp253 # Offset: 542
.Ltmp250:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp246:
    00000225: 	leaq	DATAat0x38110(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 54
  State       : disassembled
  Address     : 0x4290
  Size        : 0x232
  MaxSize     : 0x240
  Offset      : 0x4290
  Section     : .text
  Orc Section : .local.text._Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movq	%rsi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	%rdi, %rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp254 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbx), %r13
    0000004e: 	leaq	DATAat0x381c8(%rip), %rbp
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp257:
    00000058: 	movq	%rbx, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp255:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	psubb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %r13
    0000006f: 	jne	.Ltmp255 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	addb	%dl, %al
    00000093: 	je	.Ltmp256 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%rbp, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp254 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp257 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp256:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp257 # Offset: 207
.Ltmp254:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp258 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	%rdi, (%rbx)
    000000f3: 	movq	(%r12), %rbp
    000000f7: 	movq	0x8(%r12), %r12
    000000fc: 	movq	%rbp, %rax
    000000ff: 	addq	%r12, %rax
    00000102: 	je	.Ltmp259 # Offset: 258
    00000104: 	testq	%rbp, %rbp
    00000107: 	je	.Ltmp260 # Offset: 263
.Ltmp259:
    0000010d: 	movq	%r12, (%rsp)
    00000111: 	cmpq	$0xf, %r12
    00000115: 	ja	.Ltmp261 # Offset: 277
    0000011b: 	cmpq	$0x1, %r12
    0000011f: 	jne	.Ltmp262 # Offset: 287
    00000125: 	movzbl	(%rbp), %eax
    00000129: 	movb	%al, 0x10(%rbx)
.Ltmp265:
    0000012c: 	movq	%r12, 0x8(%rbx)
    00000130: 	movb	$0x0, (%rdi,%r12)
    00000135: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000143: 	addq	$0x20, %rax
    00000147: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000155: 	je	.Ltmp263 # Offset: 341
.Ltmp266:
    0000015b: 	movq	-0x20(%rax), %rbp
    0000015f: 	callq	clock@PLT # Offset: 351
    00000164: 	movq	%rax, end_time(%rip)
    0000016b: 	movq	0x8(%rsp), %rdx
    00000170: 	subq	%fs:0x28, %rdx
    00000179: 	jne	.Ltmp264 # Offset: 377
    0000017f: 	subq	start_time(%rip), %rax
    00000186: 	pxor	%xmm0, %xmm0
    0000018a: 	movq	%rbp, %rdi
    0000018d: 	cvtsi2sd	%rax, %xmm0
    00000192: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000019a: 	addq	$0x10, %rsp
    0000019e: 	popq	%rbx
    0000019f: 	popq	%rbp
    000001a0: 	popq	%r12
    000001a2: 	popq	%r13
    000001a4: 	popq	%r14
    000001a6: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 422
.Ltmp261:
    000001ab: 	movq	%rbx, %rdi
    000001ae: 	movq	%rsp, %rsi
    000001b1: 	xorl	%edx, %edx
    000001b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 435
    000001b8: 	movq	%rax, (%rbx)
    000001bb: 	movq	%rax, %rdi
    000001be: 	movq	(%rsp), %rax
    000001c2: 	movq	%rax, 0x10(%rbx)
.Ltmp267:
    000001c6: 	movq	%r12, %rdx
    000001c9: 	movq	%rbp, %rsi
    000001cc: 	callq	memcpy@PLT # Offset: 460
    000001d1: 	movq	(%rsp), %r12
    000001d5: 	movq	(%rbx), %rdi
    000001d8: 	jmp	.Ltmp265 # Offset: 472
.Ltmp258:
    000001dd: 	movq	%r12, %rsi
    000001e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 487
    000001ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000201: 	jne	.Ltmp266 # Offset: 513
.Ltmp263:
    00000207: 	movq	-0x8(%rdx), %rax
    0000020b: 	addq	$0x200, %rax
    00000211: 	jmp	.Ltmp266 # Offset: 529
.Ltmp262:
    00000216: 	testq	%r12, %r12
    00000219: 	je	.Ltmp265 # Offset: 537
    0000021f: 	jmp	.Ltmp267 # Offset: 543
.Ltmp264:
    00000221: 	callq	__stack_chk_fail@PLT # Offset: 545
.Ltmp260:
    00000226: 	leaq	DATAat0x38110(%rip), %rdi
    0000022d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 557
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z10test_2termIi15custom_2term_orIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x44d0
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x44d0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi15custom_2term_orIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp268 # Offset: 67
    00000049: 	leal	-0x1(%r15), %r12d
    0000004d: 	leal	-0x2(%r15), %eax
    00000051: 	movl	0x4(%rbx), %r10d
    00000055: 	xorl	%r14d, %r14d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r12d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	leaq	DATAat0x381c8(%rip), %r13
    0000006e: 	shrl	$0x2, %eax
    00000071: 	subl	$0x1, %eax
    00000074: 	shlq	$0x4, %rax
    00000078: 	leaq	0x10(%rbx,%rax), %rbp
    0000007d: 	movl	%r12d, %eax
    00000080: 	andl	$-0x4, %eax
    00000083: 	movl	%eax, 0x10(%rsp)
    00000087: 	addl	$0x1, %eax
    0000008a: 	movl	%eax, 0x14(%rsp)
    0000008e: 	nop # Size: 2
.Ltmp275:
    00000090: 	movl	(%rbx), %edx
    00000092: 	orl	%r10d, %edx
    00000095: 	cmpl	$0x1, %r15d
    00000099: 	jle	.Ltmp269 # Offset: 153
    0000009f: 	cmpl	$0x2, 0xc(%rsp)
    000000a4: 	jbe	.Ltmp270 # Offset: 164
    000000aa: 	movq	%rbx, %rax
    000000ad: 	pxor	%xmm1, %xmm1
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp271:
    000000b8: 	movdqu	(%rax), %xmm0
    000000bc: 	movdqu	0x4(%rax), %xmm3
    000000c1: 	addq	$0x10, %rax
    000000c5: 	por	%xmm3, %xmm0
    000000c9: 	paddd	%xmm0, %xmm1
    000000cd: 	cmpq	%rbp, %rax
    000000d0: 	jne	.Ltmp271 # Offset: 208
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x8, %xmm0
    000000db: 	paddd	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x4, %xmm0
    000000e8: 	paddd	%xmm0, %xmm1
    000000ec: 	movd	%xmm1, %eax
    000000f0: 	addl	%eax, %edx
    000000f2: 	cmpl	%r12d, 0x10(%rsp)
    000000f7: 	je	.Ltmp269 # Offset: 247
    000000fd: 	movl	0x14(%rsp), %eax
.Ltmp283:
    00000101: 	movslq	%eax, %rcx
    00000104: 	leal	0x1(%rax), %esi
    00000107: 	shlq	$0x2, %rcx
    0000010b: 	leaq	(%rbx,%rcx), %rdi
    0000010f: 	cmpl	%r12d, %esi
    00000112: 	jge	.Ltmp272 # Offset: 274
    00000118: 	cmpl	%eax, %r15d
    0000011b: 	jle	.Ltmp272 # Offset: 283
    00000121: 	movl	(%rdi), %esi
    00000123: 	movl	-0x4(%rdi), %r11d
    00000127: 	leal	0x3(%rax), %r8d
    0000012b: 	movl	0x4(%rbx,%rcx), %edi
    0000012f: 	orl	%esi, %r11d
    00000132: 	addl	%r11d, %edx
    00000135: 	orl	%edi, %esi
    00000137: 	addl	%esi, %edx
    00000139: 	leal	0x2(%rax), %esi
    0000013c: 	cmpl	%r8d, %r12d
    0000013f: 	jle	.Ltmp273 # Offset: 319
    00000141: 	orl	0x8(%rbx,%rcx), %edi
    00000145: 	movl	0xc(%rbx,%rcx), %r8d
    0000014a: 	leal	0x4(%rax), %esi
    0000014d: 	addl	%edx, %edi
    0000014f: 	movl	0x8(%rbx,%rcx), %edx
    00000153: 	orl	%r8d, %edx
    00000156: 	addl	%edi, %edx
    00000158: 	leal	0x5(%rax), %edi
    0000015b: 	cmpl	%edi, %r12d
    0000015e: 	jle	.Ltmp273 # Offset: 350
    00000160: 	movl	0x10(%rbx,%rcx), %esi
    00000164: 	orl	%esi, %r8d
    00000167: 	orl	0x14(%rbx,%rcx), %esi
    0000016b: 	addl	%edx, %r8d
    0000016e: 	leal	(%rsi,%r8), %edx
    00000172: 	leal	0x6(%rax), %esi
.Ltmp273:
    00000175: 	movslq	%esi, %rcx
    00000178: 	movl	(%rbx,%rcx,4), %eax
    0000017b: 	movl	-0x4(%rbx,%rcx,4), %r11d
    00000180: 	leaq	(,%rcx,4), %rdi
    00000188: 	leal	0x1(%rsi), %ecx
    0000018b: 	orl	%eax, %r11d
    0000018e: 	addl	%r11d, %edx
    00000191: 	cmpl	%ecx, %r15d
    00000194: 	jle	.Ltmp269 # Offset: 404
    00000196: 	orl	0x4(%rbx,%rdi), %eax
    0000019a: 	addl	$0x2, %esi
    0000019d: 	addl	%eax, %edx
    0000019f: 	cmpl	%esi, %r15d
    000001a2: 	jle	.Ltmp269 # Offset: 418
    000001a4: 	movl	0x8(%rbx,%rdi), %eax
    000001a8: 	orl	0x4(%rbx,%rdi), %eax
    000001ac: 	addl	%eax, %edx
.Ltmp269:
    000001ae: 	cvttsd2si	%xmm2, %eax
    000001b2: 	imull	$0x1f40, %eax, %eax
    000001b8: 	cmpl	%edx, %eax
    000001ba: 	je	.Ltmp274 # Offset: 442
    000001bc: 	movl	current_test(%rip), %edx
    000001c2: 	movq	%r13, %rsi
    000001c5: 	movl	$0x1, %edi
    000001ca: 	xorl	%eax, %eax
    000001cc: 	addl	$0x1, %r14d
    000001d0: 	callq	__printf_chk@PLT # Offset: 464
    000001d5: 	movl	iterations(%rip), %r9d
    000001dc: 	cmpl	%r9d, %r14d
    000001df: 	jge	.Ltmp268 # Offset: 479
    000001e1: 	movl	0x4(%rbx), %r10d
    000001e5: 	movsd	init_value(%rip), %xmm2
    000001ed: 	jmp	.Ltmp275 # Offset: 493
    000001f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp274:
    000001f8: 	addl	$0x1, %r14d
    000001fc: 	cmpl	%r9d, %r14d
    000001ff: 	jl	.Ltmp275 # Offset: 511
.Ltmp268:
    00000205: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000213: 	subq	$0x20, %rax
    00000217: 	cmpq	%rax, %rbx
    0000021a: 	je	.Ltmp276 # Offset: 538
    00000220: 	movq	0x18(%rsp), %rax
    00000225: 	leaq	0x10(%rbx), %rdi
    00000229: 	movq	%rdi, (%rbx)
    0000022c: 	movq	(%rax), %rbp
    0000022f: 	movq	0x8(%rax), %r12
    00000233: 	movq	%rbp, %rax
    00000236: 	addq	%r12, %rax
    00000239: 	je	.Ltmp277 # Offset: 569
    0000023b: 	testq	%rbp, %rbp
    0000023e: 	je	.Ltmp278 # Offset: 574
.Ltmp277:
    00000244: 	movq	%r12, 0x20(%rsp)
    00000249: 	cmpq	$0xf, %r12
    0000024d: 	ja	.Ltmp279 # Offset: 589
    00000253: 	cmpq	$0x1, %r12
    00000257: 	jne	.Ltmp280 # Offset: 599
    0000025d: 	movzbl	(%rbp), %eax
    00000261: 	movb	%al, 0x10(%rbx)
.Ltmp284:
    00000264: 	movq	%r12, 0x8(%rbx)
    00000268: 	movb	$0x0, (%rdi,%r12)
    0000026d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000274: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027b: 	addq	$0x20, %rax
    0000027f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000286: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000028d: 	je	.Ltmp281 # Offset: 653
.Ltmp285:
    00000293: 	movq	-0x20(%rax), %rbp
    00000297: 	callq	clock@PLT # Offset: 663
    0000029c: 	movq	%rax, end_time(%rip)
    000002a3: 	movq	0x28(%rsp), %rdx
    000002a8: 	subq	%fs:0x28, %rdx
    000002b1: 	jne	.Ltmp282 # Offset: 689
    000002b7: 	subq	start_time(%rip), %rax
    000002be: 	pxor	%xmm0, %xmm0
    000002c2: 	movq	%rbp, %rdi
    000002c5: 	cvtsi2sd	%rax, %xmm0
    000002ca: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002d2: 	addq	$0x38, %rsp
    000002d6: 	popq	%rbx
    000002d7: 	popq	%rbp
    000002d8: 	popq	%r12
    000002da: 	popq	%r13
    000002dc: 	popq	%r14
    000002de: 	popq	%r15
    000002e0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 736
.Ltmp270:
    000002e5: 	movl	$0x1, %eax
    000002ea: 	jmp	.Ltmp283 # Offset: 746
.Ltmp272:
    000002ef: 	movl	%eax, %esi
    000002f1: 	jmp	.Ltmp273 # Offset: 753
.Ltmp279:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x20(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x20(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp286:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x20(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp284 # Offset: 807
.Ltmp276:
    0000032c: 	movq	0x18(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp285 # Offset: 850
.Ltmp281:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp285 # Offset: 866
.Ltmp280:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp284 # Offset: 874
    00000370: 	jmp	.Ltmp286 # Offset: 880
.Ltmp282:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp278:
    00000377: 	leaq	DATAat0x38110(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi15custom_2term_orIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIs16custom_2term_xorIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x4860
  Size        : 0x3d2
  MaxSize     : 0x3e0
  Offset      : 0x4860
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs16custom_2term_xorIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp287 # Offset: 67
    00000049: 	leal	-0x1(%r13), %r15d
    0000004d: 	leal	-0x2(%r13), %eax
    00000051: 	xorl	%r14d, %r14d
    00000054: 	movl	%eax, (%rsp)
    00000057: 	movl	%r15d, %eax
    0000005a: 	movl	%r15d, %r12d
    0000005d: 	shrl	$0x3, %eax
    00000060: 	andl	$-0x8, %r12d
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%rbx,%rax), %rbp
    00000070: 	leal	0x1(%r12), %eax
    00000075: 	movl	%eax, 0x4(%rsp)
.Ltmp295:
    00000079: 	movzwl	0x2(%rbx), %r10d
.Ltmp303:
    0000007e: 	movzwl	(%rbx), %edx
    00000081: 	xorl	%r10d, %edx
    00000084: 	cmpl	$0x1, %r13d
    00000088: 	jle	.Ltmp288 # Offset: 136
    0000008e: 	cmpl	$0x6, (%rsp)
    00000092: 	jbe	.Ltmp289 # Offset: 146
    00000098: 	movq	%rbx, %rax
    0000009b: 	pxor	%xmm1, %xmm1
    0000009f: 	nop # Size: 1
.Ltmp290:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	0x2(%rax), %xmm2
    000000a9: 	addq	$0x10, %rax
    000000ad: 	pxor	%xmm2, %xmm0
    000000b1: 	paddw	%xmm0, %xmm1
    000000b5: 	cmpq	%rbp, %rax
    000000b8: 	jne	.Ltmp290 # Offset: 184
    000000ba: 	movdqa	%xmm1, %xmm0
    000000be: 	psrldq	$0x8, %xmm0
    000000c3: 	paddw	%xmm0, %xmm1
    000000c7: 	movdqa	%xmm1, %xmm0
    000000cb: 	psrldq	$0x4, %xmm0
    000000d0: 	paddw	%xmm0, %xmm1
    000000d4: 	movdqa	%xmm1, %xmm0
    000000d8: 	psrldq	$0x2, %xmm0
    000000dd: 	paddw	%xmm0, %xmm1
    000000e1: 	pextrw	$0x0, %xmm1, %eax
    000000e6: 	addl	%eax, %edx
    000000e8: 	cmpl	%r15d, %r12d
    000000eb: 	je	.Ltmp288 # Offset: 235
    000000f1: 	movl	0x4(%rsp), %ecx
    000000f5: 	movl	%r12d, %edi
.Ltmp304:
    000000f8: 	movl	%r13d, %eax
    000000fb: 	subl	%edi, %eax
    000000fd: 	leal	-0x1(%rax), %esi
    00000100: 	subl	$0x2, %eax
    00000103: 	cmpl	$0x2, %eax
    00000106: 	jbe	.Ltmp291 # Offset: 262
    00000108: 	leal	0x1(%rdi), %eax
    0000010b: 	movq	-0x2(%rbx,%rax,2), %xmm0
    00000111: 	movq	(%rbx,%rax,2), %xmm1
    00000116: 	pxor	%xmm1, %xmm0
    0000011a: 	pextrw	$0x1, %xmm0, %edi
    0000011f: 	pextrw	$0x0, %xmm0, %eax
    00000124: 	addl	%edi, %eax
    00000126: 	pextrw	$0x2, %xmm0, %edi
    0000012b: 	addl	%edi, %eax
    0000012d: 	pextrw	$0x3, %xmm0, %edi
    00000132: 	addl	%edi, %eax
    00000134: 	addl	%eax, %edx
    00000136: 	movl	%esi, %eax
    00000138: 	andl	$-0x4, %eax
    0000013b: 	addl	%eax, %ecx
    0000013d: 	cmpl	%eax, %esi
    0000013f: 	je	.Ltmp288 # Offset: 319
.Ltmp291:
    00000145: 	movslq	%ecx, %rax
    00000148: 	leal	0x1(%rcx), %esi
    0000014b: 	addq	%rax, %rax
    0000014e: 	leaq	(%rbx,%rax), %r8
    00000152: 	cmpl	%r15d, %esi
    00000155: 	jge	.Ltmp292 # Offset: 341
    0000015b: 	cmpl	%ecx, %r13d
    0000015e: 	jle	.Ltmp292 # Offset: 350
    00000164: 	movzwl	(%r8), %esi
    00000168: 	movzwl	-0x2(%r8), %r11d
    0000016d: 	movzwl	0x2(%rbx,%rax), %edi
    00000172: 	xorl	%esi, %r11d
    00000175: 	movl	%r11d, %r8d
    00000178: 	xorl	%edi, %esi
    0000017a: 	addl	%r8d, %edx
    0000017d: 	leal	0x3(%rcx), %r8d
    00000181: 	addl	%esi, %edx
    00000183: 	leal	0x2(%rcx), %esi
    00000186: 	cmpl	%r8d, %r15d
    00000189: 	jle	.Ltmp293 # Offset: 393
    0000018b: 	xorw	0x4(%rbx,%rax), %di
    00000190: 	movzwl	0x6(%rbx,%rax), %r8d
    00000196: 	leal	0x4(%rcx), %esi
    00000199: 	addl	%edx, %edi
    0000019b: 	movzwl	0x4(%rbx,%rax), %edx
    000001a0: 	xorl	%r8d, %edx
    000001a3: 	addl	%edi, %edx
    000001a5: 	leal	0x5(%rcx), %edi
    000001a8: 	cmpl	%edi, %r15d
    000001ab: 	jle	.Ltmp293 # Offset: 427
    000001ad: 	movzwl	0x8(%rbx,%rax), %esi
    000001b2: 	movzwl	0xa(%rbx,%rax), %edi
    000001b7: 	xorl	%esi, %edi
    000001b9: 	xorl	%r8d, %esi
    000001bc: 	leal	(%rsi,%rdx), %eax
    000001bf: 	leal	0x6(%rcx), %esi
    000001c2: 	leal	(%rdi,%rax), %edx
.Ltmp293:
    000001c5: 	movslq	%esi, %rcx
    000001c8: 	movzwl	(%rbx,%rcx,2), %eax
    000001cc: 	movzwl	-0x2(%rbx,%rcx,2), %r11d
    000001d2: 	leaq	(%rcx,%rcx), %rdi
    000001d6: 	xorl	%eax, %r11d
    000001d9: 	movl	%r11d, %ecx
    000001dc: 	addl	%ecx, %edx
    000001de: 	leal	0x1(%rsi), %ecx
    000001e1: 	cmpl	%ecx, %r13d
    000001e4: 	jle	.Ltmp288 # Offset: 484
    000001e6: 	xorw	0x2(%rbx,%rdi), %ax
    000001eb: 	addl	$0x2, %esi
    000001ee: 	addl	%eax, %edx
    000001f0: 	cmpl	%esi, %r13d
    000001f3: 	jle	.Ltmp288 # Offset: 499
    000001f5: 	movzwl	0x2(%rbx,%rdi), %eax
    000001fa: 	xorw	0x4(%rbx,%rdi), %ax
    000001ff: 	addl	%eax, %edx
.Ltmp288:
    00000201: 	testw	%dx, %dx
    00000204: 	je	.Ltmp294 # Offset: 516
    0000020a: 	movl	current_test(%rip), %edx
    00000210: 	leaq	DATAat0x381c8(%rip), %rsi
    00000217: 	movl	$0x1, %edi
    0000021c: 	xorl	%eax, %eax
    0000021e: 	addl	$0x1, %r14d
    00000222: 	callq	__printf_chk@PLT # Offset: 546
    00000227: 	movl	iterations(%rip), %r9d
    0000022e: 	cmpl	%r9d, %r14d
    00000231: 	jl	.Ltmp295 # Offset: 561
.Ltmp287:
    00000237: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000023e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000245: 	subq	$0x20, %rax
    00000249: 	cmpq	%rax, %rbx
    0000024c: 	je	.Ltmp296 # Offset: 588
    00000252: 	movq	0x8(%rsp), %rax
    00000257: 	leaq	0x10(%rbx), %rdi
    0000025b: 	movq	%rdi, (%rbx)
    0000025e: 	movq	(%rax), %rbp
    00000261: 	movq	0x8(%rax), %r12
    00000265: 	movq	%rbp, %rax
    00000268: 	addq	%r12, %rax
    0000026b: 	je	.Ltmp297 # Offset: 619
    0000026d: 	testq	%rbp, %rbp
    00000270: 	je	.Ltmp298 # Offset: 624
.Ltmp297:
    00000276: 	movq	%r12, 0x10(%rsp)
    0000027b: 	cmpq	$0xf, %r12
    0000027f: 	ja	.Ltmp299 # Offset: 639
    00000285: 	cmpq	$0x1, %r12
    00000289: 	jne	.Ltmp300 # Offset: 649
    0000028f: 	movzbl	(%rbp), %eax
    00000293: 	movb	%al, 0x10(%rbx)
.Ltmp305:
    00000296: 	movq	%r12, 0x8(%rbx)
    0000029a: 	movb	$0x0, (%rdi,%r12)
    0000029f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ad: 	addq	$0x20, %rax
    000002b1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002bf: 	je	.Ltmp301 # Offset: 703
.Ltmp306:
    000002c5: 	movq	-0x20(%rax), %rbp
    000002c9: 	callq	clock@PLT # Offset: 713
    000002ce: 	movq	%rax, end_time(%rip)
    000002d5: 	movq	0x18(%rsp), %rdx
    000002da: 	subq	%fs:0x28, %rdx
    000002e3: 	jne	.Ltmp302 # Offset: 739
    000002e9: 	subq	start_time(%rip), %rax
    000002f0: 	pxor	%xmm0, %xmm0
    000002f4: 	movq	%rbp, %rdi
    000002f7: 	cvtsi2sd	%rax, %xmm0
    000002fc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000304: 	addq	$0x28, %rsp
    00000308: 	popq	%rbx
    00000309: 	popq	%rbp
    0000030a: 	popq	%r12
    0000030c: 	popq	%r13
    0000030e: 	popq	%r14
    00000310: 	popq	%r15
    00000312: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 786
    00000317: 	nopw	(%rax,%rax) # Size: 9
.Ltmp294:
    00000320: 	addl	$0x1, %r14d
    00000324: 	cmpl	%r9d, %r14d
    00000327: 	jl	.Ltmp303 # Offset: 807
    0000032d: 	jmp	.Ltmp287 # Offset: 813
.Ltmp289:
    00000332: 	xorl	%edi, %edi
    00000334: 	movl	$0x1, %ecx
    00000339: 	jmp	.Ltmp304 # Offset: 825
.Ltmp299:
    0000033e: 	movq	%rbx, %rdi
    00000341: 	leaq	0x10(%rsp), %rsi
    00000346: 	xorl	%edx, %edx
    00000348: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 840
    0000034d: 	movq	%rax, (%rbx)
    00000350: 	movq	%rax, %rdi
    00000353: 	movq	0x10(%rsp), %rax
    00000358: 	movq	%rax, 0x10(%rbx)
.Ltmp307:
    0000035c: 	movq	%r12, %rdx
    0000035f: 	movq	%rbp, %rsi
    00000362: 	callq	memcpy@PLT # Offset: 866
    00000367: 	movq	0x10(%rsp), %r12
    0000036c: 	movq	(%rbx), %rdi
    0000036f: 	jmp	.Ltmp305 # Offset: 879
.Ltmp292:
    00000374: 	movl	%ecx, %esi
    00000376: 	jmp	.Ltmp293 # Offset: 886
.Ltmp296:
    0000037b: 	movq	0x8(%rsp), %rsi
    00000380: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000387: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 903
    0000038c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000393: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000039a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a1: 	jne	.Ltmp306 # Offset: 929
.Ltmp301:
    000003a7: 	movq	-0x8(%rdx), %rax
    000003ab: 	addq	$0x200, %rax
    000003b1: 	jmp	.Ltmp306 # Offset: 945
.Ltmp300:
    000003b6: 	testq	%r12, %r12
    000003b9: 	je	.Ltmp305 # Offset: 953
    000003bf: 	jmp	.Ltmp307 # Offset: 959
.Ltmp302:
    000003c1: 	callq	__stack_chk_fail@PLT # Offset: 961
.Ltmp298:
    000003c6: 	leaq	DATAat0x38110(%rip), %rdi
    000003cd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 973
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs16custom_2term_xorIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi16custom_2term_xorIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x4c40
  Size        : 0x36b
  MaxSize     : 0x370
  Offset      : 0x4c40
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi16custom_2term_xorIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp308 # Offset: 67
    00000049: 	leal	-0x1(%r15), %r12d
    0000004d: 	leal	-0x2(%r15), %eax
    00000051: 	movl	0x4(%rbx), %r10d
    00000055: 	xorl	%r14d, %r14d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r12d, %eax
    0000005f: 	leaq	DATAat0x381c8(%rip), %r13
    00000066: 	shrl	$0x2, %eax
    00000069: 	subl	$0x1, %eax
    0000006c: 	shlq	$0x4, %rax
    00000070: 	leaq	0x10(%rbx,%rax), %rbp
    00000075: 	movl	%r12d, %eax
    00000078: 	andl	$-0x4, %eax
    0000007b: 	movl	%eax, 0x10(%rsp)
    0000007f: 	addl	$0x1, %eax
    00000082: 	movl	%eax, 0x14(%rsp)
    00000086: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp315:
    00000090: 	movl	(%rbx), %edx
    00000092: 	xorl	%r10d, %edx
    00000095: 	cmpl	$0x1, %r15d
    00000099: 	jle	.Ltmp309 # Offset: 153
    0000009f: 	cmpl	$0x2, 0xc(%rsp)
    000000a4: 	jbe	.Ltmp310 # Offset: 164
    000000aa: 	movq	%rbx, %rax
    000000ad: 	pxor	%xmm1, %xmm1
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp311:
    000000b8: 	movdqu	(%rax), %xmm0
    000000bc: 	movdqu	0x4(%rax), %xmm2
    000000c1: 	addq	$0x10, %rax
    000000c5: 	pxor	%xmm2, %xmm0
    000000c9: 	paddd	%xmm0, %xmm1
    000000cd: 	cmpq	%rbp, %rax
    000000d0: 	jne	.Ltmp311 # Offset: 208
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x8, %xmm0
    000000db: 	paddd	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x4, %xmm0
    000000e8: 	paddd	%xmm0, %xmm1
    000000ec: 	movd	%xmm1, %eax
    000000f0: 	addl	%eax, %edx
    000000f2: 	cmpl	%r12d, 0x10(%rsp)
    000000f7: 	je	.Ltmp309 # Offset: 247
    000000fd: 	movl	0x14(%rsp), %eax
.Ltmp323:
    00000101: 	movslq	%eax, %rcx
    00000104: 	leal	0x1(%rax), %esi
    00000107: 	shlq	$0x2, %rcx
    0000010b: 	leaq	(%rbx,%rcx), %rdi
    0000010f: 	cmpl	%r12d, %esi
    00000112: 	jge	.Ltmp312 # Offset: 274
    00000118: 	cmpl	%eax, %r15d
    0000011b: 	jle	.Ltmp312 # Offset: 283
    00000121: 	movl	(%rdi), %esi
    00000123: 	movl	-0x4(%rdi), %r11d
    00000127: 	leal	0x3(%rax), %r8d
    0000012b: 	movl	0x4(%rbx,%rcx), %edi
    0000012f: 	xorl	%esi, %r11d
    00000132: 	addl	%r11d, %edx
    00000135: 	xorl	%edi, %esi
    00000137: 	addl	%esi, %edx
    00000139: 	leal	0x2(%rax), %esi
    0000013c: 	cmpl	%r8d, %r12d
    0000013f: 	jle	.Ltmp313 # Offset: 319
    00000141: 	xorl	0x8(%rbx,%rcx), %edi
    00000145: 	movl	0xc(%rbx,%rcx), %r8d
    0000014a: 	leal	0x4(%rax), %esi
    0000014d: 	addl	%edx, %edi
    0000014f: 	movl	0x8(%rbx,%rcx), %edx
    00000153: 	xorl	%r8d, %edx
    00000156: 	addl	%edi, %edx
    00000158: 	leal	0x5(%rax), %edi
    0000015b: 	cmpl	%edi, %r12d
    0000015e: 	jle	.Ltmp313 # Offset: 350
    00000160: 	movl	0x10(%rbx,%rcx), %esi
    00000164: 	xorl	%esi, %r8d
    00000167: 	xorl	0x14(%rbx,%rcx), %esi
    0000016b: 	addl	%edx, %r8d
    0000016e: 	leal	(%rsi,%r8), %edx
    00000172: 	leal	0x6(%rax), %esi
.Ltmp313:
    00000175: 	movslq	%esi, %rcx
    00000178: 	movl	(%rbx,%rcx,4), %eax
    0000017b: 	movl	-0x4(%rbx,%rcx,4), %r11d
    00000180: 	leaq	(,%rcx,4), %rdi
    00000188: 	leal	0x1(%rsi), %ecx
    0000018b: 	xorl	%eax, %r11d
    0000018e: 	addl	%r11d, %edx
    00000191: 	cmpl	%ecx, %r15d
    00000194: 	jle	.Ltmp309 # Offset: 404
    00000196: 	xorl	0x4(%rbx,%rdi), %eax
    0000019a: 	addl	$0x2, %esi
    0000019d: 	addl	%eax, %edx
    0000019f: 	cmpl	%esi, %r15d
    000001a2: 	jle	.Ltmp309 # Offset: 418
    000001a4: 	movl	0x4(%rbx,%rdi), %eax
    000001a8: 	xorl	0x8(%rbx,%rdi), %eax
    000001ac: 	addl	%eax, %edx
.Ltmp309:
    000001ae: 	testl	%edx, %edx
    000001b0: 	je	.Ltmp314 # Offset: 432
    000001b2: 	movl	current_test(%rip), %edx
    000001b8: 	movq	%r13, %rsi
    000001bb: 	movl	$0x1, %edi
    000001c0: 	xorl	%eax, %eax
    000001c2: 	addl	$0x1, %r14d
    000001c6: 	callq	__printf_chk@PLT # Offset: 454
    000001cb: 	movl	iterations(%rip), %r9d
    000001d2: 	cmpl	%r9d, %r14d
    000001d5: 	jge	.Ltmp308 # Offset: 469
    000001d7: 	movl	0x4(%rbx), %r10d
    000001db: 	jmp	.Ltmp315 # Offset: 475
.Ltmp314:
    000001e0: 	addl	$0x1, %r14d
    000001e4: 	cmpl	%r9d, %r14d
    000001e7: 	jl	.Ltmp315 # Offset: 487
.Ltmp308:
    000001ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001fb: 	subq	$0x20, %rax
    000001ff: 	cmpq	%rax, %rbx
    00000202: 	je	.Ltmp316 # Offset: 514
    00000208: 	movq	0x18(%rsp), %rax
    0000020d: 	leaq	0x10(%rbx), %rdi
    00000211: 	movq	%rdi, (%rbx)
    00000214: 	movq	(%rax), %rbp
    00000217: 	movq	0x8(%rax), %r12
    0000021b: 	movq	%rbp, %rax
    0000021e: 	addq	%r12, %rax
    00000221: 	je	.Ltmp317 # Offset: 545
    00000223: 	testq	%rbp, %rbp
    00000226: 	je	.Ltmp318 # Offset: 550
.Ltmp317:
    0000022c: 	movq	%r12, 0x20(%rsp)
    00000231: 	cmpq	$0xf, %r12
    00000235: 	ja	.Ltmp319 # Offset: 565
    0000023b: 	cmpq	$0x1, %r12
    0000023f: 	jne	.Ltmp320 # Offset: 575
    00000245: 	movzbl	(%rbp), %eax
    00000249: 	movb	%al, 0x10(%rbx)
.Ltmp324:
    0000024c: 	movq	%r12, 0x8(%rbx)
    00000250: 	movb	$0x0, (%rdi,%r12)
    00000255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000263: 	addq	$0x20, %rax
    00000267: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000275: 	je	.Ltmp321 # Offset: 629
.Ltmp325:
    0000027b: 	movq	-0x20(%rax), %rbp
    0000027f: 	callq	clock@PLT # Offset: 639
    00000284: 	movq	%rax, end_time(%rip)
    0000028b: 	movq	0x28(%rsp), %rdx
    00000290: 	subq	%fs:0x28, %rdx
    00000299: 	jne	.Ltmp322 # Offset: 665
    0000029f: 	subq	start_time(%rip), %rax
    000002a6: 	pxor	%xmm0, %xmm0
    000002aa: 	movq	%rbp, %rdi
    000002ad: 	cvtsi2sd	%rax, %xmm0
    000002b2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002ba: 	addq	$0x38, %rsp
    000002be: 	popq	%rbx
    000002bf: 	popq	%rbp
    000002c0: 	popq	%r12
    000002c2: 	popq	%r13
    000002c4: 	popq	%r14
    000002c6: 	popq	%r15
    000002c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 712
.Ltmp310:
    000002cd: 	movl	$0x1, %eax
    000002d2: 	jmp	.Ltmp323 # Offset: 722
.Ltmp312:
    000002d7: 	movl	%eax, %esi
    000002d9: 	jmp	.Ltmp313 # Offset: 729
.Ltmp319:
    000002de: 	movq	%rbx, %rdi
    000002e1: 	leaq	0x20(%rsp), %rsi
    000002e6: 	xorl	%edx, %edx
    000002e8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 744
    000002ed: 	movq	%rax, (%rbx)
    000002f0: 	movq	%rax, %rdi
    000002f3: 	movq	0x20(%rsp), %rax
    000002f8: 	movq	%rax, 0x10(%rbx)
.Ltmp326:
    000002fc: 	movq	%r12, %rdx
    000002ff: 	movq	%rbp, %rsi
    00000302: 	callq	memcpy@PLT # Offset: 770
    00000307: 	movq	0x20(%rsp), %r12
    0000030c: 	movq	(%rbx), %rdi
    0000030f: 	jmp	.Ltmp324 # Offset: 783
.Ltmp316:
    00000314: 	movq	0x18(%rsp), %rsi
    00000319: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000320: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 800
    00000325: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000032c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000333: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033a: 	jne	.Ltmp325 # Offset: 826
.Ltmp321:
    00000340: 	movq	-0x8(%rdx), %rax
    00000344: 	addq	$0x200, %rax
    0000034a: 	jmp	.Ltmp325 # Offset: 842
.Ltmp320:
    0000034f: 	testq	%r12, %r12
    00000352: 	je	.Ltmp324 # Offset: 850
    00000358: 	jmp	.Ltmp326 # Offset: 856
.Ltmp322:
    0000035a: 	callq	__stack_chk_fail@PLT # Offset: 858
.Ltmp318:
    0000035f: 	leaq	DATAat0x38110(%rip), %rdi
    00000366: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 870
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi16custom_2term_xorIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl16custom_2term_andIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 58
  State       : disassembled
  Address     : 0x4fb0
  Size        : 0x2b4
  MaxSize     : 0x2c0
  Offset      : 0x4fb0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl16custom_2term_andIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movl	%esi, %ebx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %esi
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%esi, %esi
    00000040: 	jle	.Ltmp327 # Offset: 64
    00000046: 	leal	-0x1(%rbx), %ebp
    00000049: 	movq	0x8(%r14), %rdi
    0000004d: 	xorl	%r13d, %r13d
    00000050: 	movsd	init_value(%rip), %xmm2
    00000058: 	movl	%ebp, %eax
    0000005a: 	leaq	DATAat0x381c8(%rip), %r12
    00000061: 	shrl	%eax
    00000063: 	subl	$0x1, %eax
    00000066: 	shlq	$0x4, %rax
    0000006a: 	leaq	0x10(%r14,%rax), %r15
    0000006f: 	movl	%ebp, %eax
    00000071: 	andl	$-0x2, %eax
    00000074: 	movl	%eax, (%rsp)
    00000077: 	movl	%ebp, %eax
    00000079: 	orl	$0x1, %eax
    0000007c: 	movl	%eax, 0x4(%rsp)
.Ltmp332:
    00000080: 	movq	(%r14), %rdx
    00000083: 	andq	%rdi, %rdx
    00000086: 	cmpl	$0x1, %ebx
    00000089: 	jle	.Ltmp328 # Offset: 137
    0000008b: 	cmpl	$0x2, %ebx
    0000008e: 	je	.Ltmp329 # Offset: 142
    00000094: 	movq	%r14, %rax
    00000097: 	pxor	%xmm1, %xmm1
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp330:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	0x8(%rax), %xmm3
    000000a9: 	addq	$0x10, %rax
    000000ad: 	pand	%xmm3, %xmm0
    000000b1: 	paddq	%xmm0, %xmm1
    000000b5: 	cmpq	%rax, %r15
    000000b8: 	jne	.Ltmp330 # Offset: 184
    000000ba: 	movdqa	%xmm1, %xmm0
    000000be: 	psrldq	$0x8, %xmm0
    000000c3: 	paddq	%xmm0, %xmm1
    000000c7: 	movq	%xmm1, %rax
    000000cc: 	addq	%rax, %rdx
    000000cf: 	cmpl	%ebp, (%rsp)
    000000d2: 	je	.Ltmp328 # Offset: 210
    000000d4: 	movslq	0x4(%rsp), %rax
.Ltmp340:
    000000d9: 	movq	-0x8(%r14,%rax,8), %r10
    000000de: 	andq	(%r14,%rax,8), %r10
    000000e2: 	addq	%r10, %rdx
.Ltmp328:
    000000e5: 	cvttsd2si	%xmm2, %rax
    000000ea: 	imulq	$0x1f40, %rax, %rax
    000000f1: 	cmpq	%rdx, %rax
    000000f4: 	je	.Ltmp331 # Offset: 244
    000000f6: 	movl	current_test(%rip), %edx
    000000fc: 	movq	%r12, %rsi
    000000ff: 	movl	$0x1, %edi
    00000104: 	xorl	%eax, %eax
    00000106: 	addl	$0x1, %r13d
    0000010a: 	callq	__printf_chk@PLT # Offset: 266
    0000010f: 	movl	iterations(%rip), %esi
    00000115: 	cmpl	%esi, %r13d
    00000118: 	jge	.Ltmp327 # Offset: 280
    0000011a: 	movq	0x8(%r14), %rdi
    0000011e: 	movsd	init_value(%rip), %xmm2
    00000126: 	jmp	.Ltmp332 # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp331:
    00000130: 	addl	$0x1, %r13d
    00000134: 	cmpl	%esi, %r13d
    00000137: 	jl	.Ltmp332 # Offset: 311
.Ltmp327:
    0000013d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000144: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000014b: 	subq	$0x20, %rax
    0000014f: 	cmpq	%rax, %rbx
    00000152: 	je	.Ltmp333 # Offset: 338
    00000158: 	movq	0x8(%rsp), %rax
    0000015d: 	leaq	0x10(%rbx), %rdi
    00000161: 	movq	%rdi, (%rbx)
    00000164: 	movq	(%rax), %rbp
    00000167: 	movq	0x8(%rax), %r12
    0000016b: 	movq	%rbp, %rax
    0000016e: 	addq	%r12, %rax
    00000171: 	je	.Ltmp334 # Offset: 369
    00000173: 	testq	%rbp, %rbp
    00000176: 	je	.Ltmp335 # Offset: 374
.Ltmp334:
    0000017c: 	movq	%r12, 0x10(%rsp)
    00000181: 	cmpq	$0xf, %r12
    00000185: 	ja	.Ltmp336 # Offset: 389
    0000018b: 	cmpq	$0x1, %r12
    0000018f: 	jne	.Ltmp337 # Offset: 399
    00000195: 	movzbl	(%rbp), %eax
    00000199: 	movb	%al, 0x10(%rbx)
.Ltmp341:
    0000019c: 	movq	%r12, 0x8(%rbx)
    000001a0: 	movb	$0x0, (%rdi,%r12)
    000001a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001b3: 	addq	$0x20, %rax
    000001b7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001be: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001c5: 	je	.Ltmp338 # Offset: 453
.Ltmp342:
    000001cb: 	movq	-0x20(%rax), %rbp
    000001cf: 	callq	clock@PLT # Offset: 463
    000001d4: 	movq	%rax, end_time(%rip)
    000001db: 	movq	0x18(%rsp), %rdx
    000001e0: 	subq	%fs:0x28, %rdx
    000001e9: 	jne	.Ltmp339 # Offset: 489
    000001ef: 	subq	start_time(%rip), %rax
    000001f6: 	pxor	%xmm0, %xmm0
    000001fa: 	movq	%rbp, %rdi
    000001fd: 	cvtsi2sd	%rax, %xmm0
    00000202: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000020a: 	addq	$0x28, %rsp
    0000020e: 	popq	%rbx
    0000020f: 	popq	%rbp
    00000210: 	popq	%r12
    00000212: 	popq	%r13
    00000214: 	popq	%r14
    00000216: 	popq	%r15
    00000218: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 536
.Ltmp329:
    0000021d: 	movl	$0x1, %eax
    00000222: 	jmp	.Ltmp340 # Offset: 546
.Ltmp336:
    00000227: 	movq	%rbx, %rdi
    0000022a: 	leaq	0x10(%rsp), %rsi
    0000022f: 	xorl	%edx, %edx
    00000231: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 561
    00000236: 	movq	%rax, (%rbx)
    00000239: 	movq	%rax, %rdi
    0000023c: 	movq	0x10(%rsp), %rax
    00000241: 	movq	%rax, 0x10(%rbx)
.Ltmp343:
    00000245: 	movq	%r12, %rdx
    00000248: 	movq	%rbp, %rsi
    0000024b: 	callq	memcpy@PLT # Offset: 587
    00000250: 	movq	0x10(%rsp), %r12
    00000255: 	movq	(%rbx), %rdi
    00000258: 	jmp	.Ltmp341 # Offset: 600
.Ltmp333:
    0000025d: 	movq	0x8(%rsp), %rsi
    00000262: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000269: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 617
    0000026e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000275: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000027c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000283: 	jne	.Ltmp342 # Offset: 643
.Ltmp338:
    00000289: 	movq	-0x8(%rdx), %rax
    0000028d: 	addq	$0x200, %rax
    00000293: 	jmp	.Ltmp342 # Offset: 659
.Ltmp337:
    00000298: 	testq	%r12, %r12
    0000029b: 	je	.Ltmp341 # Offset: 667
    000002a1: 	jmp	.Ltmp343 # Offset: 673
.Ltmp339:
    000002a3: 	callq	__stack_chk_fail@PLT # Offset: 675
.Ltmp335:
    000002a8: 	leaq	DATAat0x38110(%rip), %rdi
    000002af: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 687
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl16custom_2term_andIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj15custom_2term_orIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 59
  State       : disassembled
  Address     : 0x5270
  Size        : 0x383
  MaxSize     : 0x390
  Offset      : 0x5270
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj15custom_2term_orIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp344 # Offset: 67
    00000049: 	leal	-0x1(%r15), %r12d
    0000004d: 	leal	-0x2(%r15), %eax
    00000051: 	movl	0x4(%rbx), %r10d
    00000055: 	xorl	%r14d, %r14d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r12d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm2
    00000067: 	leaq	DATAat0x381c8(%rip), %r13
    0000006e: 	shrl	$0x2, %eax
    00000071: 	subl	$0x1, %eax
    00000074: 	shlq	$0x4, %rax
    00000078: 	leaq	0x10(%rbx,%rax), %rbp
    0000007d: 	movl	%r12d, %eax
    00000080: 	andl	$-0x4, %eax
    00000083: 	movl	%eax, 0x10(%rsp)
    00000087: 	addl	$0x1, %eax
    0000008a: 	movl	%eax, 0x14(%rsp)
    0000008e: 	nop # Size: 2
.Ltmp351:
    00000090: 	movl	(%rbx), %edx
    00000092: 	orl	%r10d, %edx
    00000095: 	cmpl	$0x1, %r15d
    00000099: 	jle	.Ltmp345 # Offset: 153
    0000009f: 	cmpl	$0x2, 0xc(%rsp)
    000000a4: 	jbe	.Ltmp346 # Offset: 164
    000000aa: 	movq	%rbx, %rax
    000000ad: 	pxor	%xmm1, %xmm1
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp347:
    000000b8: 	movdqu	(%rax), %xmm0
    000000bc: 	movdqu	0x4(%rax), %xmm3
    000000c1: 	addq	$0x10, %rax
    000000c5: 	por	%xmm3, %xmm0
    000000c9: 	paddd	%xmm0, %xmm1
    000000cd: 	cmpq	%rbp, %rax
    000000d0: 	jne	.Ltmp347 # Offset: 208
    000000d2: 	movdqa	%xmm1, %xmm0
    000000d6: 	psrldq	$0x8, %xmm0
    000000db: 	paddd	%xmm0, %xmm1
    000000df: 	movdqa	%xmm1, %xmm0
    000000e3: 	psrldq	$0x4, %xmm0
    000000e8: 	paddd	%xmm0, %xmm1
    000000ec: 	movd	%xmm1, %eax
    000000f0: 	addl	%eax, %edx
    000000f2: 	cmpl	%r12d, 0x10(%rsp)
    000000f7: 	je	.Ltmp345 # Offset: 247
    000000fd: 	movl	0x14(%rsp), %eax
.Ltmp359:
    00000101: 	movslq	%eax, %rcx
    00000104: 	leal	0x1(%rax), %esi
    00000107: 	shlq	$0x2, %rcx
    0000010b: 	leaq	(%rbx,%rcx), %rdi
    0000010f: 	cmpl	%r12d, %esi
    00000112: 	jge	.Ltmp348 # Offset: 274
    00000118: 	cmpl	%eax, %r15d
    0000011b: 	jle	.Ltmp348 # Offset: 283
    00000121: 	movl	(%rdi), %esi
    00000123: 	movl	-0x4(%rdi), %r11d
    00000127: 	leal	0x3(%rax), %r8d
    0000012b: 	movl	0x4(%rbx,%rcx), %edi
    0000012f: 	orl	%esi, %r11d
    00000132: 	addl	%r11d, %edx
    00000135: 	orl	%edi, %esi
    00000137: 	addl	%esi, %edx
    00000139: 	leal	0x2(%rax), %esi
    0000013c: 	cmpl	%r8d, %r12d
    0000013f: 	jle	.Ltmp349 # Offset: 319
    00000141: 	orl	0x8(%rbx,%rcx), %edi
    00000145: 	movl	0xc(%rbx,%rcx), %r8d
    0000014a: 	leal	0x4(%rax), %esi
    0000014d: 	addl	%edx, %edi
    0000014f: 	movl	0x8(%rbx,%rcx), %edx
    00000153: 	orl	%r8d, %edx
    00000156: 	addl	%edi, %edx
    00000158: 	leal	0x5(%rax), %edi
    0000015b: 	cmpl	%edi, %r12d
    0000015e: 	jle	.Ltmp349 # Offset: 350
    00000160: 	movl	0x10(%rbx,%rcx), %esi
    00000164: 	orl	%esi, %r8d
    00000167: 	orl	0x14(%rbx,%rcx), %esi
    0000016b: 	addl	%edx, %r8d
    0000016e: 	leal	(%rsi,%r8), %edx
    00000172: 	leal	0x6(%rax), %esi
.Ltmp349:
    00000175: 	movslq	%esi, %rcx
    00000178: 	movl	(%rbx,%rcx,4), %eax
    0000017b: 	movl	-0x4(%rbx,%rcx,4), %r11d
    00000180: 	leaq	(,%rcx,4), %rdi
    00000188: 	leal	0x1(%rsi), %ecx
    0000018b: 	orl	%eax, %r11d
    0000018e: 	addl	%r11d, %edx
    00000191: 	cmpl	%ecx, %r15d
    00000194: 	jle	.Ltmp345 # Offset: 404
    00000196: 	orl	0x4(%rbx,%rdi), %eax
    0000019a: 	addl	$0x2, %esi
    0000019d: 	addl	%eax, %edx
    0000019f: 	cmpl	%esi, %r15d
    000001a2: 	jle	.Ltmp345 # Offset: 418
    000001a4: 	movl	0x8(%rbx,%rdi), %eax
    000001a8: 	orl	0x4(%rbx,%rdi), %eax
    000001ac: 	addl	%eax, %edx
.Ltmp345:
    000001ae: 	cvttsd2si	%xmm2, %rax
    000001b3: 	imull	$0x1f40, %eax, %eax
    000001b9: 	cmpl	%edx, %eax
    000001bb: 	je	.Ltmp350 # Offset: 443
    000001bd: 	movl	current_test(%rip), %edx
    000001c3: 	movq	%r13, %rsi
    000001c6: 	movl	$0x1, %edi
    000001cb: 	xorl	%eax, %eax
    000001cd: 	addl	$0x1, %r14d
    000001d1: 	callq	__printf_chk@PLT # Offset: 465
    000001d6: 	movl	iterations(%rip), %r9d
    000001dd: 	cmpl	%r9d, %r14d
    000001e0: 	jge	.Ltmp344 # Offset: 480
    000001e2: 	movl	0x4(%rbx), %r10d
    000001e6: 	movsd	init_value(%rip), %xmm2
    000001ee: 	jmp	.Ltmp351 # Offset: 494
    000001f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp350:
    000001f8: 	addl	$0x1, %r14d
    000001fc: 	cmpl	%r9d, %r14d
    000001ff: 	jl	.Ltmp351 # Offset: 511
.Ltmp344:
    00000205: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000213: 	subq	$0x20, %rax
    00000217: 	cmpq	%rax, %rbx
    0000021a: 	je	.Ltmp352 # Offset: 538
    00000220: 	movq	0x18(%rsp), %rax
    00000225: 	leaq	0x10(%rbx), %rdi
    00000229: 	movq	%rdi, (%rbx)
    0000022c: 	movq	(%rax), %rbp
    0000022f: 	movq	0x8(%rax), %r12
    00000233: 	movq	%rbp, %rax
    00000236: 	addq	%r12, %rax
    00000239: 	je	.Ltmp353 # Offset: 569
    0000023b: 	testq	%rbp, %rbp
    0000023e: 	je	.Ltmp354 # Offset: 574
.Ltmp353:
    00000244: 	movq	%r12, 0x20(%rsp)
    00000249: 	cmpq	$0xf, %r12
    0000024d: 	ja	.Ltmp355 # Offset: 589
    00000253: 	cmpq	$0x1, %r12
    00000257: 	jne	.Ltmp356 # Offset: 599
    0000025d: 	movzbl	(%rbp), %eax
    00000261: 	movb	%al, 0x10(%rbx)
.Ltmp360:
    00000264: 	movq	%r12, 0x8(%rbx)
    00000268: 	movb	$0x0, (%rdi,%r12)
    0000026d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000274: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000027b: 	addq	$0x20, %rax
    0000027f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000286: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000028d: 	je	.Ltmp357 # Offset: 653
.Ltmp361:
    00000293: 	movq	-0x20(%rax), %rbp
    00000297: 	callq	clock@PLT # Offset: 663
    0000029c: 	movq	%rax, end_time(%rip)
    000002a3: 	movq	0x28(%rsp), %rdx
    000002a8: 	subq	%fs:0x28, %rdx
    000002b1: 	jne	.Ltmp358 # Offset: 689
    000002b7: 	subq	start_time(%rip), %rax
    000002be: 	pxor	%xmm0, %xmm0
    000002c2: 	movq	%rbp, %rdi
    000002c5: 	cvtsi2sd	%rax, %xmm0
    000002ca: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002d2: 	addq	$0x38, %rsp
    000002d6: 	popq	%rbx
    000002d7: 	popq	%rbp
    000002d8: 	popq	%r12
    000002da: 	popq	%r13
    000002dc: 	popq	%r14
    000002de: 	popq	%r15
    000002e0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 736
.Ltmp346:
    000002e5: 	movl	$0x1, %eax
    000002ea: 	jmp	.Ltmp359 # Offset: 746
.Ltmp348:
    000002ef: 	movl	%eax, %esi
    000002f1: 	jmp	.Ltmp349 # Offset: 753
.Ltmp355:
    000002f6: 	movq	%rbx, %rdi
    000002f9: 	leaq	0x20(%rsp), %rsi
    000002fe: 	xorl	%edx, %edx
    00000300: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 768
    00000305: 	movq	%rax, (%rbx)
    00000308: 	movq	%rax, %rdi
    0000030b: 	movq	0x20(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp362:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%rbp, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	0x20(%rsp), %r12
    00000324: 	movq	(%rbx), %rdi
    00000327: 	jmp	.Ltmp360 # Offset: 807
.Ltmp352:
    0000032c: 	movq	0x18(%rsp), %rsi
    00000331: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000338: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 824
    0000033d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000344: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000352: 	jne	.Ltmp361 # Offset: 850
.Ltmp357:
    00000358: 	movq	-0x8(%rdx), %rax
    0000035c: 	addq	$0x200, %rax
    00000362: 	jmp	.Ltmp361 # Offset: 866
.Ltmp356:
    00000367: 	testq	%r12, %r12
    0000036a: 	je	.Ltmp360 # Offset: 874
    00000370: 	jmp	.Ltmp362 # Offset: 880
.Ltmp358:
    00000372: 	callq	__stack_chk_fail@PLT # Offset: 882
.Ltmp354:
    00000377: 	leaq	DATAat0x38110(%rip), %rdi
    0000037e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 894
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj15custom_2term_orIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl16custom_2term_xorIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 60
  State       : disassembled
  Address     : 0x5600
  Size        : 0x2a4
  MaxSize     : 0x2b0
  Offset      : 0x5600
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl16custom_2term_xorIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movl	%esi, %ebx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %esi
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%esi, %esi
    00000040: 	jle	.Ltmp363 # Offset: 64
    00000046: 	leal	-0x1(%rbx), %ebp
    00000049: 	movq	0x8(%r14), %rdi
    0000004d: 	xorl	%r13d, %r13d
    00000050: 	leaq	DATAat0x381c8(%rip), %r12
    00000057: 	movl	%ebp, %eax
    00000059: 	shrl	%eax
    0000005b: 	subl	$0x1, %eax
    0000005e: 	shlq	$0x4, %rax
    00000062: 	leaq	0x10(%r14,%rax), %r15
    00000067: 	movl	%ebp, %eax
    00000069: 	andl	$-0x2, %eax
    0000006c: 	movl	%eax, (%rsp)
    0000006f: 	movl	%ebp, %eax
    00000071: 	orl	$0x1, %eax
    00000074: 	movl	%eax, 0x4(%rsp)
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp368:
    00000080: 	movq	(%r14), %rdx
    00000083: 	xorq	%rdi, %rdx
    00000086: 	cmpl	$0x1, %ebx
    00000089: 	jle	.Ltmp364 # Offset: 137
    0000008b: 	cmpl	$0x2, %ebx
    0000008e: 	je	.Ltmp365 # Offset: 142
    00000094: 	movq	%r14, %rax
    00000097: 	pxor	%xmm1, %xmm1
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp366:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	movdqu	0x8(%rax), %xmm2
    000000a9: 	addq	$0x10, %rax
    000000ad: 	pxor	%xmm2, %xmm0
    000000b1: 	paddq	%xmm0, %xmm1
    000000b5: 	cmpq	%rax, %r15
    000000b8: 	jne	.Ltmp366 # Offset: 184
    000000ba: 	movdqa	%xmm1, %xmm0
    000000be: 	psrldq	$0x8, %xmm0
    000000c3: 	paddq	%xmm0, %xmm1
    000000c7: 	movq	%xmm1, %rax
    000000cc: 	addq	%rax, %rdx
    000000cf: 	cmpl	%ebp, (%rsp)
    000000d2: 	je	.Ltmp364 # Offset: 210
    000000d4: 	movslq	0x4(%rsp), %rax
.Ltmp376:
    000000d9: 	movq	-0x8(%r14,%rax,8), %r10
    000000de: 	xorq	(%r14,%rax,8), %r10
    000000e2: 	addq	%r10, %rdx
.Ltmp364:
    000000e5: 	testq	%rdx, %rdx
    000000e8: 	je	.Ltmp367 # Offset: 232
    000000ea: 	movl	current_test(%rip), %edx
    000000f0: 	movq	%r12, %rsi
    000000f3: 	movl	$0x1, %edi
    000000f8: 	xorl	%eax, %eax
    000000fa: 	addl	$0x1, %r13d
    000000fe: 	callq	__printf_chk@PLT # Offset: 254
    00000103: 	movl	iterations(%rip), %esi
    00000109: 	cmpl	%esi, %r13d
    0000010c: 	jge	.Ltmp363 # Offset: 268
    0000010e: 	movq	0x8(%r14), %rdi
    00000112: 	jmp	.Ltmp368 # Offset: 274
    00000117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp367:
    00000120: 	addl	$0x1, %r13d
    00000124: 	cmpl	%esi, %r13d
    00000127: 	jl	.Ltmp368 # Offset: 295
.Ltmp363:
    0000012d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000013b: 	subq	$0x20, %rax
    0000013f: 	cmpq	%rax, %rbx
    00000142: 	je	.Ltmp369 # Offset: 322
    00000148: 	movq	0x8(%rsp), %rax
    0000014d: 	leaq	0x10(%rbx), %rdi
    00000151: 	movq	%rdi, (%rbx)
    00000154: 	movq	(%rax), %rbp
    00000157: 	movq	0x8(%rax), %r12
    0000015b: 	movq	%rbp, %rax
    0000015e: 	addq	%r12, %rax
    00000161: 	je	.Ltmp370 # Offset: 353
    00000163: 	testq	%rbp, %rbp
    00000166: 	je	.Ltmp371 # Offset: 358
.Ltmp370:
    0000016c: 	movq	%r12, 0x10(%rsp)
    00000171: 	cmpq	$0xf, %r12
    00000175: 	ja	.Ltmp372 # Offset: 373
    0000017b: 	cmpq	$0x1, %r12
    0000017f: 	jne	.Ltmp373 # Offset: 383
    00000185: 	movzbl	(%rbp), %eax
    00000189: 	movb	%al, 0x10(%rbx)
.Ltmp377:
    0000018c: 	movq	%r12, 0x8(%rbx)
    00000190: 	movb	$0x0, (%rdi,%r12)
    00000195: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000019c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a3: 	addq	$0x20, %rax
    000001a7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ae: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001b5: 	je	.Ltmp374 # Offset: 437
.Ltmp378:
    000001bb: 	movq	-0x20(%rax), %rbp
    000001bf: 	callq	clock@PLT # Offset: 447
    000001c4: 	movq	%rax, end_time(%rip)
    000001cb: 	movq	0x18(%rsp), %rdx
    000001d0: 	subq	%fs:0x28, %rdx
    000001d9: 	jne	.Ltmp375 # Offset: 473
    000001df: 	subq	start_time(%rip), %rax
    000001e6: 	pxor	%xmm0, %xmm0
    000001ea: 	movq	%rbp, %rdi
    000001ed: 	cvtsi2sd	%rax, %xmm0
    000001f2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001fa: 	addq	$0x28, %rsp
    000001fe: 	popq	%rbx
    000001ff: 	popq	%rbp
    00000200: 	popq	%r12
    00000202: 	popq	%r13
    00000204: 	popq	%r14
    00000206: 	popq	%r15
    00000208: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 520
.Ltmp365:
    0000020d: 	movl	$0x1, %eax
    00000212: 	jmp	.Ltmp376 # Offset: 530
.Ltmp372:
    00000217: 	movq	%rbx, %rdi
    0000021a: 	leaq	0x10(%rsp), %rsi
    0000021f: 	xorl	%edx, %edx
    00000221: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 545
    00000226: 	movq	%rax, (%rbx)
    00000229: 	movq	%rax, %rdi
    0000022c: 	movq	0x10(%rsp), %rax
    00000231: 	movq	%rax, 0x10(%rbx)
.Ltmp379:
    00000235: 	movq	%r12, %rdx
    00000238: 	movq	%rbp, %rsi
    0000023b: 	callq	memcpy@PLT # Offset: 571
    00000240: 	movq	0x10(%rsp), %r12
    00000245: 	movq	(%rbx), %rdi
    00000248: 	jmp	.Ltmp377 # Offset: 584
.Ltmp369:
    0000024d: 	movq	0x8(%rsp), %rsi
    00000252: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000259: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 601
    0000025e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000265: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000273: 	jne	.Ltmp378 # Offset: 627
.Ltmp374:
    00000279: 	movq	-0x8(%rdx), %rax
    0000027d: 	addq	$0x200, %rax
    00000283: 	jmp	.Ltmp378 # Offset: 643
.Ltmp373:
    00000288: 	testq	%r12, %r12
    0000028b: 	je	.Ltmp377 # Offset: 651
    00000291: 	jmp	.Ltmp379 # Offset: 657
.Ltmp375:
    00000293: 	callq	__stack_chk_fail@PLT # Offset: 659
.Ltmp371:
    00000298: 	leaq	DATAat0x38110(%rip), %rdi
    0000029f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 671
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl16custom_2term_xorIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm19custom_2term_or_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 61
  State       : disassembled
  Address     : 0x58b0
  Size        : 0x2fe
  MaxSize     : 0x300
  Offset      : 0x58b0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm19custom_2term_or_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movl	%esi, %ebx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %esi
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%esi, %esi
    00000040: 	jle	.Ltmp380 # Offset: 64
    00000046: 	leal	-0x1(%rbx), %ebp
    00000049: 	movq	0x8(%r15), %rdi
    0000004d: 	xorl	%r14d, %r14d
    00000050: 	movsd	DATAat0x385f0(%rip), %xmm3
    00000058: 	movl	%ebp, %eax
    0000005a: 	movsd	init_value(%rip), %xmm2
    00000062: 	leaq	DATAat0x381c8(%rip), %r13
    00000069: 	shrl	%eax
    0000006b: 	subl	$0x1, %eax
    0000006e: 	shlq	$0x4, %rax
    00000072: 	leaq	0x10(%r15,%rax), %r12
    00000077: 	movl	%ebp, %eax
    00000079: 	andl	$-0x2, %eax
    0000007c: 	movl	%eax, (%rsp)
    0000007f: 	movl	%ebp, %eax
    00000081: 	orl	$0x1, %eax
    00000084: 	movl	%eax, 0x4(%rsp)
    00000088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp386:
    00000090: 	movq	(%r15), %rcx
    00000093: 	orq	%rdi, %rcx
    00000096: 	cmpl	$0x1, %ebx
    00000099: 	jle	.Ltmp381 # Offset: 153
    0000009b: 	cmpl	$0x2, %ebx
    0000009e: 	je	.Ltmp382 # Offset: 158
    000000a4: 	movq	%r15, %rax
    000000a7: 	pxor	%xmm1, %xmm1
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp383:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	0x8(%rax), %xmm4
    000000b9: 	addq	$0x10, %rax
    000000bd: 	por	%xmm4, %xmm0
    000000c1: 	paddq	%xmm0, %xmm1
    000000c5: 	cmpq	%rax, %r12
    000000c8: 	jne	.Ltmp383 # Offset: 200
    000000ca: 	movdqa	%xmm1, %xmm0
    000000ce: 	psrldq	$0x8, %xmm0
    000000d3: 	paddq	%xmm0, %xmm1
    000000d7: 	movq	%xmm1, %rax
    000000dc: 	addq	%rax, %rcx
    000000df: 	cmpl	%ebp, (%rsp)
    000000e2: 	je	.Ltmp381 # Offset: 226
    000000e4: 	movslq	0x4(%rsp), %rax
.Ltmp395:
    000000e9: 	movq	-0x8(%r15,%rax,8), %rdx
    000000ee: 	orq	(%r15,%rax,8), %rdx
    000000f2: 	addq	%rdx, %rcx
.Ltmp381:
    000000f5: 	comisd	%xmm3, %xmm2
    000000f9: 	jae	.Ltmp384 # Offset: 249
    000000ff: 	cvttsd2si	%xmm2, %rax
.Ltmp394:
    00000104: 	imulq	$0x1f40, %rax, %rax
    0000010b: 	cmpq	%rcx, %rax
    0000010e: 	je	.Ltmp385 # Offset: 270
    00000110: 	movl	current_test(%rip), %edx
    00000116: 	movq	%r13, %rsi
    00000119: 	movl	$0x1, %edi
    0000011e: 	xorl	%eax, %eax
    00000120: 	addl	$0x1, %r14d
    00000124: 	callq	__printf_chk@PLT # Offset: 292
    00000129: 	movl	iterations(%rip), %esi
    0000012f: 	cmpl	%esi, %r14d
    00000132: 	jge	.Ltmp380 # Offset: 306
    00000134: 	movq	DATAat0x385f0(%rip), %rax
    0000013b: 	movq	0x8(%r15), %rdi
    0000013f: 	movsd	init_value(%rip), %xmm2
    00000147: 	movq	%rax, %xmm3
    0000014c: 	jmp	.Ltmp386 # Offset: 332
    00000151: 	nopl	(%rax) # Size: 7
.Ltmp385:
    00000158: 	addl	$0x1, %r14d
    0000015c: 	cmpl	%esi, %r14d
    0000015f: 	jl	.Ltmp386 # Offset: 351
.Ltmp380:
    00000165: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000173: 	subq	$0x20, %rax
    00000177: 	cmpq	%rax, %rbx
    0000017a: 	je	.Ltmp387 # Offset: 378
    00000180: 	movq	0x8(%rsp), %rax
    00000185: 	leaq	0x10(%rbx), %rdi
    00000189: 	movq	%rdi, (%rbx)
    0000018c: 	movq	(%rax), %rbp
    0000018f: 	movq	0x8(%rax), %r12
    00000193: 	movq	%rbp, %rax
    00000196: 	addq	%r12, %rax
    00000199: 	je	.Ltmp388 # Offset: 409
    0000019b: 	testq	%rbp, %rbp
    0000019e: 	je	.Ltmp389 # Offset: 414
.Ltmp388:
    000001a4: 	movq	%r12, 0x10(%rsp)
    000001a9: 	cmpq	$0xf, %r12
    000001ad: 	ja	.Ltmp390 # Offset: 429
    000001b3: 	cmpq	$0x1, %r12
    000001b7: 	jne	.Ltmp391 # Offset: 439
    000001bd: 	movzbl	(%rbp), %eax
    000001c1: 	movb	%al, 0x10(%rbx)
.Ltmp396:
    000001c4: 	movq	%r12, 0x8(%rbx)
    000001c8: 	movb	$0x0, (%rdi,%r12)
    000001cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001db: 	addq	$0x20, %rax
    000001df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ed: 	je	.Ltmp392 # Offset: 493
.Ltmp397:
    000001f3: 	movq	-0x20(%rax), %rbp
    000001f7: 	callq	clock@PLT # Offset: 503
    000001fc: 	movq	%rax, end_time(%rip)
    00000203: 	movq	0x18(%rsp), %rdx
    00000208: 	subq	%fs:0x28, %rdx
    00000211: 	jne	.Ltmp393 # Offset: 529
    00000217: 	subq	start_time(%rip), %rax
    0000021e: 	pxor	%xmm0, %xmm0
    00000222: 	movq	%rbp, %rdi
    00000225: 	cvtsi2sd	%rax, %xmm0
    0000022a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000232: 	addq	$0x28, %rsp
    00000236: 	popq	%rbx
    00000237: 	popq	%rbp
    00000238: 	popq	%r12
    0000023a: 	popq	%r13
    0000023c: 	popq	%r14
    0000023e: 	popq	%r15
    00000240: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 576
    00000245: 	nopl	(%rax) # Size: 3
.Ltmp384:
    00000248: 	movabsq	$-0x8000000000000000, %rdx
    00000252: 	movapd	%xmm2, %xmm0
    00000256: 	subsd	%xmm3, %xmm0
    0000025a: 	cvttsd2si	%xmm0, %rax
    0000025f: 	xorq	%rdx, %rax
    00000262: 	jmp	.Ltmp394 # Offset: 610
.Ltmp382:
    00000267: 	movl	$0x1, %eax
    0000026c: 	jmp	.Ltmp395 # Offset: 620
.Ltmp390:
    00000271: 	movq	%rbx, %rdi
    00000274: 	leaq	0x10(%rsp), %rsi
    00000279: 	xorl	%edx, %edx
    0000027b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 635
    00000280: 	movq	%rax, (%rbx)
    00000283: 	movq	%rax, %rdi
    00000286: 	movq	0x10(%rsp), %rax
    0000028b: 	movq	%rax, 0x10(%rbx)
.Ltmp398:
    0000028f: 	movq	%r12, %rdx
    00000292: 	movq	%rbp, %rsi
    00000295: 	callq	memcpy@PLT # Offset: 661
    0000029a: 	movq	0x10(%rsp), %r12
    0000029f: 	movq	(%rbx), %rdi
    000002a2: 	jmp	.Ltmp396 # Offset: 674
.Ltmp387:
    000002a7: 	movq	0x8(%rsp), %rsi
    000002ac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002b3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 691
    000002b8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002bf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002cd: 	jne	.Ltmp397 # Offset: 717
.Ltmp392:
    000002d3: 	movq	-0x8(%rdx), %rax
    000002d7: 	addq	$0x200, %rax
    000002dd: 	jmp	.Ltmp397 # Offset: 733
.Ltmp391:
    000002e2: 	testq	%r12, %r12
    000002e5: 	je	.Ltmp396 # Offset: 741
    000002eb: 	jmp	.Ltmp398 # Offset: 747
.Ltmp393:
    000002ed: 	callq	__stack_chk_fail@PLT # Offset: 749
.Ltmp389:
    000002f2: 	leaq	DATAat0x38110(%rip), %rdi
    000002f9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 761
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm19custom_2term_or_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIs20custom_2term_sub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 62
  State       : disassembled
  Address     : 0x5bb0
  Size        : 0x3f2
  MaxSize     : 0x400
  Offset      : 0x5bb0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs20custom_2term_sub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp399 # Offset: 67
    00000049: 	leal	-0x1(%r13), %r15d
    0000004d: 	leal	-0x2(%r13), %eax
    00000051: 	xorl	%r14d, %r14d
    00000054: 	movl	%eax, (%rsp)
    00000057: 	movl	%r15d, %eax
    0000005a: 	movl	%r15d, %r12d
    0000005d: 	shrl	$0x3, %eax
    00000060: 	andl	$-0x8, %r12d
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%rbx,%rax), %rbp
    00000070: 	leal	0x1(%r12), %eax
    00000075: 	movl	%eax, 0x4(%rsp)
.Ltmp407:
    00000079: 	movzwl	(%rbx), %r11d
.Ltmp415:
    0000007d: 	movl	%r11d, %eax
    00000080: 	subw	0x2(%rbx), %ax
    00000084: 	imull	%eax, %eax
    00000087: 	movl	%eax, %ecx
    00000089: 	movl	%eax, %edx
    0000008b: 	cmpl	$0x1, %r13d
    0000008f: 	jle	.Ltmp400 # Offset: 143
    00000095: 	cmpl	$0x6, (%rsp)
    00000099: 	jbe	.Ltmp401 # Offset: 153
    0000009f: 	movq	%rbx, %rax
    000000a2: 	pxor	%xmm1, %xmm1
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp402:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	0x2(%rax), %xmm2
    000000b9: 	addq	$0x10, %rax
    000000bd: 	psubw	%xmm2, %xmm0
    000000c1: 	pmullw	%xmm0, %xmm0
    000000c5: 	paddw	%xmm0, %xmm1
    000000c9: 	cmpq	%rbp, %rax
    000000cc: 	jne	.Ltmp402 # Offset: 204
    000000ce: 	movdqa	%xmm1, %xmm0
    000000d2: 	psrldq	$0x8, %xmm0
    000000d7: 	paddw	%xmm0, %xmm1
    000000db: 	movdqa	%xmm1, %xmm0
    000000df: 	psrldq	$0x4, %xmm0
    000000e4: 	paddw	%xmm0, %xmm1
    000000e8: 	movdqa	%xmm1, %xmm0
    000000ec: 	psrldq	$0x2, %xmm0
    000000f1: 	paddw	%xmm0, %xmm1
    000000f5: 	pextrw	$0x0, %xmm1, %edx
    000000fa: 	addl	%ecx, %edx
    000000fc: 	cmpl	%r15d, %r12d
    000000ff: 	je	.Ltmp400 # Offset: 255
    00000105: 	movl	0x4(%rsp), %ecx
    00000109: 	movl	%r12d, %edi
.Ltmp416:
    0000010c: 	movl	%r13d, %eax
    0000010f: 	subl	%edi, %eax
    00000111: 	leal	-0x1(%rax), %esi
    00000114: 	subl	$0x2, %eax
    00000117: 	cmpl	$0x2, %eax
    0000011a: 	jbe	.Ltmp403 # Offset: 282
    0000011c: 	leal	0x1(%rdi), %eax
    0000011f: 	movq	-0x2(%rbx,%rax,2), %xmm0
    00000125: 	movq	(%rbx,%rax,2), %xmm1
    0000012a: 	psubw	%xmm1, %xmm0
    0000012e: 	pmullw	%xmm0, %xmm0
    00000132: 	pextrw	$0x1, %xmm0, %edi
    00000137: 	pextrw	$0x0, %xmm0, %eax
    0000013c: 	addl	%edi, %eax
    0000013e: 	pextrw	$0x2, %xmm0, %edi
    00000143: 	addl	%edi, %eax
    00000145: 	pextrw	$0x3, %xmm0, %edi
    0000014a: 	addl	%edi, %eax
    0000014c: 	addl	%eax, %edx
    0000014e: 	movl	%esi, %eax
    00000150: 	andl	$-0x4, %eax
    00000153: 	addl	%eax, %ecx
    00000155: 	cmpl	%eax, %esi
    00000157: 	je	.Ltmp400 # Offset: 343
.Ltmp403:
    0000015d: 	movslq	%ecx, %rdi
    00000160: 	leal	0x1(%rcx), %esi
    00000163: 	addq	%rdi, %rdi
    00000166: 	leaq	(%rbx,%rdi), %rax
    0000016a: 	cmpl	%r15d, %esi
    0000016d: 	jge	.Ltmp404 # Offset: 365
    00000173: 	cmpl	%ecx, %r13d
    00000176: 	jle	.Ltmp404 # Offset: 374
    0000017c: 	movzwl	(%rax), %esi
    0000017f: 	movzwl	-0x2(%rax), %eax
    00000183: 	movzwl	0x2(%rbx,%rdi), %r8d
    00000189: 	subl	%esi, %eax
    0000018b: 	imull	%eax, %eax
    0000018e: 	subl	%r8d, %esi
    00000191: 	imull	%esi, %esi
    00000194: 	addl	%edx, %eax
    00000196: 	leal	(%rax,%rsi), %edx
    00000199: 	leal	0x3(%rcx), %esi
    0000019c: 	leal	0x2(%rcx), %eax
    0000019f: 	cmpl	%esi, %r15d
    000001a2: 	jle	.Ltmp405 # Offset: 418
    000001a4: 	movzwl	0x4(%rbx,%rdi), %eax
    000001a9: 	movzwl	0x6(%rbx,%rdi), %esi
    000001ae: 	subl	%eax, %r8d
    000001b1: 	subl	%esi, %eax
    000001b3: 	imull	%r8d, %r8d
    000001b7: 	imull	%eax, %eax
    000001ba: 	addl	%edx, %r8d
    000001bd: 	leal	(%r8,%rax), %edx
    000001c1: 	leal	0x5(%rcx), %r8d
    000001c5: 	leal	0x4(%rcx), %eax
    000001c8: 	cmpl	%r8d, %r15d
    000001cb: 	jle	.Ltmp405 # Offset: 459
    000001cd: 	movzwl	0x8(%rbx,%rdi), %eax
    000001d2: 	subl	%eax, %esi
    000001d4: 	subw	0xa(%rbx,%rdi), %ax
    000001d9: 	imull	%esi, %esi
    000001dc: 	imull	%eax, %eax
    000001df: 	addl	%edx, %esi
    000001e1: 	leal	(%rsi,%rax), %edx
    000001e4: 	leal	0x6(%rcx), %eax
.Ltmp405:
    000001e7: 	movslq	%eax, %rcx
    000001ea: 	leaq	(%rcx,%rcx), %rsi
    000001ee: 	movzwl	(%rbx,%rcx,2), %ecx
    000001f2: 	movzwl	-0x2(%rbx,%rsi), %edi
    000001f7: 	subl	%ecx, %edi
    000001f9: 	imull	%edi, %edi
    000001fc: 	addl	%edi, %edx
    000001fe: 	leal	0x1(%rax), %edi
    00000201: 	cmpl	%edi, %r13d
    00000204: 	jle	.Ltmp400 # Offset: 516
    00000206: 	subw	0x2(%rbx,%rsi), %cx
    0000020b: 	addl	$0x2, %eax
    0000020e: 	imull	%ecx, %ecx
    00000211: 	addl	%ecx, %edx
    00000213: 	cmpl	%eax, %r13d
    00000216: 	jle	.Ltmp400 # Offset: 534
    00000218: 	movzwl	0x2(%rbx,%rsi), %eax
    0000021d: 	subw	0x4(%rbx,%rsi), %ax
    00000222: 	imull	%eax, %eax
    00000225: 	addl	%eax, %edx
.Ltmp400:
    00000227: 	testw	%dx, %dx
    0000022a: 	je	.Ltmp406 # Offset: 554
    00000230: 	movl	current_test(%rip), %edx
    00000236: 	leaq	DATAat0x381c8(%rip), %rsi
    0000023d: 	movl	$0x1, %edi
    00000242: 	xorl	%eax, %eax
    00000244: 	addl	$0x1, %r14d
    00000248: 	callq	__printf_chk@PLT # Offset: 584
    0000024d: 	movl	iterations(%rip), %r10d
    00000254: 	cmpl	%r10d, %r14d
    00000257: 	jl	.Ltmp407 # Offset: 599
.Ltmp399:
    0000025d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000264: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000026b: 	subq	$0x20, %rax
    0000026f: 	cmpq	%rax, %rbx
    00000272: 	je	.Ltmp408 # Offset: 626
    00000278: 	movq	0x8(%rsp), %rax
    0000027d: 	leaq	0x10(%rbx), %rdi
    00000281: 	movq	%rdi, (%rbx)
    00000284: 	movq	(%rax), %rbp
    00000287: 	movq	0x8(%rax), %r12
    0000028b: 	movq	%rbp, %rax
    0000028e: 	addq	%r12, %rax
    00000291: 	je	.Ltmp409 # Offset: 657
    00000293: 	testq	%rbp, %rbp
    00000296: 	je	.Ltmp410 # Offset: 662
.Ltmp409:
    0000029c: 	movq	%r12, 0x10(%rsp)
    000002a1: 	cmpq	$0xf, %r12
    000002a5: 	ja	.Ltmp411 # Offset: 677
    000002ab: 	cmpq	$0x1, %r12
    000002af: 	jne	.Ltmp412 # Offset: 687
    000002b5: 	movzbl	(%rbp), %eax
    000002b9: 	movb	%al, 0x10(%rbx)
.Ltmp417:
    000002bc: 	movq	%r12, 0x8(%rbx)
    000002c0: 	movb	$0x0, (%rdi,%r12)
    000002c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002d3: 	addq	$0x20, %rax
    000002d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002de: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002e5: 	je	.Ltmp413 # Offset: 741
.Ltmp418:
    000002eb: 	movq	-0x20(%rax), %rbp
    000002ef: 	callq	clock@PLT # Offset: 751
    000002f4: 	movq	%rax, end_time(%rip)
    000002fb: 	movq	0x18(%rsp), %rdx
    00000300: 	subq	%fs:0x28, %rdx
    00000309: 	jne	.Ltmp414 # Offset: 777
    0000030f: 	subq	start_time(%rip), %rax
    00000316: 	pxor	%xmm0, %xmm0
    0000031a: 	movq	%rbp, %rdi
    0000031d: 	cvtsi2sd	%rax, %xmm0
    00000322: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000032a: 	addq	$0x28, %rsp
    0000032e: 	popq	%rbx
    0000032f: 	popq	%rbp
    00000330: 	popq	%r12
    00000332: 	popq	%r13
    00000334: 	popq	%r14
    00000336: 	popq	%r15
    00000338: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 824
    0000033d: 	nopl	(%rax) # Size: 3
.Ltmp406:
    00000340: 	addl	$0x1, %r14d
    00000344: 	cmpl	%r10d, %r14d
    00000347: 	jl	.Ltmp415 # Offset: 839
    0000034d: 	jmp	.Ltmp399 # Offset: 845
.Ltmp401:
    00000352: 	xorl	%edi, %edi
    00000354: 	movl	$0x1, %ecx
    00000359: 	jmp	.Ltmp416 # Offset: 857
.Ltmp411:
    0000035e: 	movq	%rbx, %rdi
    00000361: 	leaq	0x10(%rsp), %rsi
    00000366: 	xorl	%edx, %edx
    00000368: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 872
    0000036d: 	movq	%rax, (%rbx)
    00000370: 	movq	%rax, %rdi
    00000373: 	movq	0x10(%rsp), %rax
    00000378: 	movq	%rax, 0x10(%rbx)
.Ltmp419:
    0000037c: 	movq	%r12, %rdx
    0000037f: 	movq	%rbp, %rsi
    00000382: 	callq	memcpy@PLT # Offset: 898
    00000387: 	movq	0x10(%rsp), %r12
    0000038c: 	movq	(%rbx), %rdi
    0000038f: 	jmp	.Ltmp417 # Offset: 911
.Ltmp404:
    00000394: 	movl	%ecx, %eax
    00000396: 	jmp	.Ltmp405 # Offset: 918
.Ltmp408:
    0000039b: 	movq	0x8(%rsp), %rsi
    000003a0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 935
    000003ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003b3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003c1: 	jne	.Ltmp418 # Offset: 961
.Ltmp413:
    000003c7: 	movq	-0x8(%rdx), %rax
    000003cb: 	addq	$0x200, %rax
    000003d1: 	jmp	.Ltmp418 # Offset: 977
.Ltmp412:
    000003d6: 	testq	%r12, %r12
    000003d9: 	je	.Ltmp417 # Offset: 985
    000003df: 	jmp	.Ltmp419 # Offset: 991
.Ltmp414:
    000003e1: 	callq	__stack_chk_fail@PLT # Offset: 993
.Ltmp410:
    000003e6: 	leaq	DATAat0x38110(%rip), %rdi
    000003ed: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1005
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs20custom_2term_sub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIs20custom_2term_add_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x5fb0
  Size        : 0x40a
  MaxSize     : 0x410
  Offset      : 0x5fb0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs20custom_2term_add_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp420 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, (%rsp)
    00000059: 	movl	%r14d, %eax
    0000005c: 	movl	%r14d, %r15d
    0000005f: 	shrl	$0x3, %eax
    00000062: 	andl	$-0x8, %r15d
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%rbx,%rax), %rbp
    00000072: 	leal	0x1(%r15), %eax
    00000076: 	movl	%eax, 0x4(%rsp)
.Ltmp428:
    0000007a: 	movzwl	(%rbx), %r11d
    0000007e: 	movzwl	0x2(%rbx), %r10d
    00000083: 	movsd	init_value(%rip), %xmm2
.Ltmp436:
    0000008b: 	leal	(%r11,%r10), %eax
    0000008f: 	imull	%eax, %eax
    00000092: 	movl	%eax, %edx
    00000094: 	cmpl	$0x1, %r12d
    00000098: 	jle	.Ltmp421 # Offset: 152
    0000009e: 	cmpl	$0x6, (%rsp)
    000000a2: 	jbe	.Ltmp422 # Offset: 162
    000000a8: 	movq	%rbx, %rax
    000000ab: 	pxor	%xmm1, %xmm1
    000000af: 	nop # Size: 1
.Ltmp423:
    000000b0: 	movdqu	0x2(%rax), %xmm0
    000000b5: 	movdqu	(%rax), %xmm3
    000000b9: 	addq	$0x10, %rax
    000000bd: 	paddw	%xmm3, %xmm0
    000000c1: 	pmullw	%xmm0, %xmm0
    000000c5: 	paddw	%xmm0, %xmm1
    000000c9: 	cmpq	%rbp, %rax
    000000cc: 	jne	.Ltmp423 # Offset: 204
    000000ce: 	movdqa	%xmm1, %xmm0
    000000d2: 	psrldq	$0x8, %xmm0
    000000d7: 	paddw	%xmm0, %xmm1
    000000db: 	movdqa	%xmm1, %xmm0
    000000df: 	psrldq	$0x4, %xmm0
    000000e4: 	paddw	%xmm0, %xmm1
    000000e8: 	movdqa	%xmm1, %xmm0
    000000ec: 	psrldq	$0x2, %xmm0
    000000f1: 	paddw	%xmm0, %xmm1
    000000f5: 	pextrw	$0x0, %xmm1, %eax
    000000fa: 	addl	%edx, %eax
    000000fc: 	cmpl	%r14d, %r15d
    000000ff: 	je	.Ltmp421 # Offset: 255
    00000105: 	movl	0x4(%rsp), %edx
    00000109: 	movl	%r15d, %edi
.Ltmp437:
    0000010c: 	movl	%r12d, %esi
    0000010f: 	subl	%edi, %esi
    00000111: 	leal	-0x1(%rsi), %ecx
    00000114: 	subl	$0x2, %esi
    00000117: 	cmpl	$0x2, %esi
    0000011a: 	jbe	.Ltmp424 # Offset: 282
    0000011c: 	leal	0x1(%rdi), %esi
    0000011f: 	movq	-0x2(%rbx,%rsi,2), %xmm0
    00000125: 	movq	(%rbx,%rsi,2), %xmm1
    0000012a: 	paddw	%xmm1, %xmm0
    0000012e: 	pmullw	%xmm0, %xmm0
    00000132: 	pextrw	$0x0, %xmm0, %esi
    00000137: 	pextrw	$0x1, %xmm0, %edi
    0000013c: 	addl	%esi, %edi
    0000013e: 	pextrw	$0x2, %xmm0, %esi
    00000143: 	addl	%edi, %esi
    00000145: 	pextrw	$0x3, %xmm0, %edi
    0000014a: 	addl	%edi, %esi
    0000014c: 	addl	%esi, %eax
    0000014e: 	movl	%ecx, %esi
    00000150: 	andl	$-0x4, %esi
    00000153: 	addl	%esi, %edx
    00000155: 	cmpl	%esi, %ecx
    00000157: 	je	.Ltmp421 # Offset: 343
.Ltmp424:
    0000015d: 	movslq	%edx, %rdi
    00000160: 	leal	0x1(%rdx), %ecx
    00000163: 	addq	%rdi, %rdi
    00000166: 	leaq	(%rbx,%rdi), %rsi
    0000016a: 	cmpl	%r14d, %ecx
    0000016d: 	jge	.Ltmp425 # Offset: 365
    00000173: 	cmpl	%edx, %r12d
    00000176: 	jle	.Ltmp425 # Offset: 374
    0000017c: 	movzwl	(%rsi), %ecx
    0000017f: 	movzwl	-0x2(%rsi), %r8d
    00000184: 	addl	%ecx, %r8d
    00000187: 	movl	%r8d, %esi
    0000018a: 	movzwl	0x2(%rbx,%rdi), %r8d
    00000190: 	imull	%esi, %esi
    00000193: 	addl	%r8d, %ecx
    00000196: 	imull	%ecx, %ecx
    00000199: 	addl	%eax, %esi
    0000019b: 	leal	(%rsi,%rcx), %eax
    0000019e: 	leal	0x3(%rdx), %esi
    000001a1: 	leal	0x2(%rdx), %ecx
    000001a4: 	cmpl	%esi, %r14d
    000001a7: 	jle	.Ltmp426 # Offset: 423
    000001a9: 	movzwl	0x6(%rbx,%rdi), %esi
    000001ae: 	movzwl	0x4(%rbx,%rdi), %ecx
    000001b3: 	addw	0x4(%rbx,%rdi), %r8w
    000001b9: 	imull	%r8d, %r8d
    000001bd: 	addl	%esi, %ecx
    000001bf: 	imull	%ecx, %ecx
    000001c2: 	addl	%eax, %r8d
    000001c5: 	leal	(%r8,%rcx), %eax
    000001c9: 	leal	0x5(%rdx), %r8d
    000001cd: 	leal	0x4(%rdx), %ecx
    000001d0: 	cmpl	%r8d, %r14d
    000001d3: 	jle	.Ltmp426 # Offset: 467
    000001d5: 	movzwl	0x8(%rbx,%rdi), %ecx
    000001da: 	addl	%ecx, %esi
    000001dc: 	addw	0xa(%rbx,%rdi), %cx
    000001e1: 	imull	%esi, %esi
    000001e4: 	imull	%ecx, %ecx
    000001e7: 	addl	%eax, %esi
    000001e9: 	leal	(%rsi,%rcx), %eax
    000001ec: 	leal	0x6(%rdx), %ecx
.Ltmp426:
    000001ef: 	movslq	%ecx, %rsi
    000001f2: 	movzwl	(%rbx,%rsi,2), %edx
    000001f6: 	movzwl	-0x2(%rbx,%rsi,2), %r8d
    000001fc: 	leaq	(%rsi,%rsi), %rdi
    00000200: 	addl	%edx, %r8d
    00000203: 	movl	%r8d, %esi
    00000206: 	imull	%esi, %esi
    00000209: 	addl	%esi, %eax
    0000020b: 	leal	0x1(%rcx), %esi
    0000020e: 	cmpl	%esi, %r12d
    00000211: 	jle	.Ltmp421 # Offset: 529
    00000213: 	movzwl	0x2(%rbx,%rdi), %esi
    00000218: 	addl	$0x2, %ecx
    0000021b: 	addl	%esi, %edx
    0000021d: 	imull	%edx, %edx
    00000220: 	addl	%edx, %eax
    00000222: 	cmpl	%ecx, %r12d
    00000225: 	jle	.Ltmp421 # Offset: 549
    00000227: 	addw	0x4(%rbx,%rdi), %si
    0000022c: 	imull	%esi, %esi
    0000022f: 	addl	%esi, %eax
.Ltmp421:
    00000231: 	cvttsd2si	%xmm2, %edx
    00000235: 	addl	%edx, %edx
    00000237: 	imull	%edx, %edx
    0000023a: 	imulw	$0x1f40, %dx, %dx
    0000023f: 	cmpw	%ax, %dx
    00000242: 	je	.Ltmp427 # Offset: 578
    00000248: 	movl	current_test(%rip), %edx
    0000024e: 	leaq	DATAat0x381c8(%rip), %rsi
    00000255: 	movl	$0x1, %edi
    0000025a: 	xorl	%eax, %eax
    0000025c: 	addl	$0x1, %r13d
    00000260: 	callq	__printf_chk@PLT # Offset: 608
    00000265: 	movl	iterations(%rip), %r9d
    0000026c: 	cmpl	%r9d, %r13d
    0000026f: 	jl	.Ltmp428 # Offset: 623
.Ltmp420:
    00000275: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000027c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000283: 	subq	$0x20, %rax
    00000287: 	cmpq	%rax, %rbx
    0000028a: 	je	.Ltmp429 # Offset: 650
    00000290: 	movq	0x8(%rsp), %rax
    00000295: 	leaq	0x10(%rbx), %rdi
    00000299: 	movq	%rdi, (%rbx)
    0000029c: 	movq	(%rax), %rbp
    0000029f: 	movq	0x8(%rax), %r12
    000002a3: 	movq	%rbp, %rax
    000002a6: 	addq	%r12, %rax
    000002a9: 	je	.Ltmp430 # Offset: 681
    000002ab: 	testq	%rbp, %rbp
    000002ae: 	je	.Ltmp431 # Offset: 686
.Ltmp430:
    000002b4: 	movq	%r12, 0x10(%rsp)
    000002b9: 	cmpq	$0xf, %r12
    000002bd: 	ja	.Ltmp432 # Offset: 701
    000002c3: 	cmpq	$0x1, %r12
    000002c7: 	jne	.Ltmp433 # Offset: 711
    000002cd: 	movzbl	(%rbp), %eax
    000002d1: 	movb	%al, 0x10(%rbx)
.Ltmp438:
    000002d4: 	movq	%r12, 0x8(%rbx)
    000002d8: 	movb	$0x0, (%rdi,%r12)
    000002dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002eb: 	addq	$0x20, %rax
    000002ef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002f6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002fd: 	je	.Ltmp434 # Offset: 765
.Ltmp439:
    00000303: 	movq	-0x20(%rax), %rbp
    00000307: 	callq	clock@PLT # Offset: 775
    0000030c: 	movq	%rax, end_time(%rip)
    00000313: 	movq	0x18(%rsp), %rdx
    00000318: 	subq	%fs:0x28, %rdx
    00000321: 	jne	.Ltmp435 # Offset: 801
    00000327: 	subq	start_time(%rip), %rax
    0000032e: 	pxor	%xmm0, %xmm0
    00000332: 	movq	%rbp, %rdi
    00000335: 	cvtsi2sd	%rax, %xmm0
    0000033a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000342: 	addq	$0x28, %rsp
    00000346: 	popq	%rbx
    00000347: 	popq	%rbp
    00000348: 	popq	%r12
    0000034a: 	popq	%r13
    0000034c: 	popq	%r14
    0000034e: 	popq	%r15
    00000350: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 848
    00000355: 	nopl	(%rax) # Size: 3
.Ltmp427:
    00000358: 	addl	$0x1, %r13d
    0000035c: 	cmpl	%r9d, %r13d
    0000035f: 	jl	.Ltmp436 # Offset: 863
    00000365: 	jmp	.Ltmp420 # Offset: 869
.Ltmp422:
    0000036a: 	xorl	%edi, %edi
    0000036c: 	movl	$0x1, %edx
    00000371: 	jmp	.Ltmp437 # Offset: 881
.Ltmp432:
    00000376: 	movq	%rbx, %rdi
    00000379: 	leaq	0x10(%rsp), %rsi
    0000037e: 	xorl	%edx, %edx
    00000380: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 896
    00000385: 	movq	%rax, (%rbx)
    00000388: 	movq	%rax, %rdi
    0000038b: 	movq	0x10(%rsp), %rax
    00000390: 	movq	%rax, 0x10(%rbx)
.Ltmp440:
    00000394: 	movq	%r12, %rdx
    00000397: 	movq	%rbp, %rsi
    0000039a: 	callq	memcpy@PLT # Offset: 922
    0000039f: 	movq	0x10(%rsp), %r12
    000003a4: 	movq	(%rbx), %rdi
    000003a7: 	jmp	.Ltmp438 # Offset: 935
.Ltmp425:
    000003ac: 	movl	%edx, %ecx
    000003ae: 	jmp	.Ltmp426 # Offset: 942
.Ltmp429:
    000003b3: 	movq	0x8(%rsp), %rsi
    000003b8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 959
    000003c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003cb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003d9: 	jne	.Ltmp439 # Offset: 985
.Ltmp434:
    000003df: 	movq	-0x8(%rdx), %rax
    000003e3: 	addq	$0x200, %rax
    000003e9: 	jmp	.Ltmp439 # Offset: 1001
.Ltmp433:
    000003ee: 	testq	%r12, %r12
    000003f1: 	je	.Ltmp438 # Offset: 1009
    000003f7: 	jmp	.Ltmp440 # Offset: 1015
.Ltmp435:
    000003f9: 	callq	__stack_chk_fail@PLT # Offset: 1017
.Ltmp431:
    000003fe: 	leaq	DATAat0x38110(%rip), %rdi
    00000405: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1029
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs20custom_2term_add_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj20custom_2term_add_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x63c0
  Size        : 0x3d3
  MaxSize     : 0x3e0
  Offset      : 0x63c0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj20custom_2term_add_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp441 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r10d
    00000055: 	movl	(%rbx), %r9d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm3
    00000067: 	xorl	%r13d, %r13d
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	leaq	DATAat0x381c8(%rip), %r12
    00000074: 	subl	$0x1, %eax
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%rbx,%rax), %rbp
    00000080: 	movl	%r15d, %eax
    00000083: 	andl	$-0x4, %eax
    00000086: 	movl	%eax, 0x10(%rsp)
    0000008a: 	addl	$0x1, %eax
    0000008d: 	movl	%eax, 0x14(%rsp)
    00000091: 	nopl	(%rax) # Size: 7
.Ltmp448:
    00000098: 	leal	(%r10,%r9), %edx
    0000009c: 	imull	%edx, %edx
    0000009f: 	cmpl	$0x1, %r14d
    000000a3: 	jle	.Ltmp442 # Offset: 163
    000000a9: 	cmpl	$0x2, 0xc(%rsp)
    000000ae: 	jbe	.Ltmp443 # Offset: 174
    000000b4: 	movq	%rbx, %rax
    000000b7: 	pxor	%xmm2, %xmm2
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp444:
    000000c0: 	movdqu	(%rax), %xmm0
    000000c4: 	movdqu	0x4(%rax), %xmm4
    000000c9: 	addq	$0x10, %rax
    000000cd: 	paddd	%xmm4, %xmm0
    000000d1: 	movdqa	%xmm0, %xmm1
    000000d5: 	pmuludq	%xmm0, %xmm1
    000000d9: 	psrlq	$0x20, %xmm0
    000000de: 	pmuludq	%xmm0, %xmm0
    000000e2: 	pshufd	$0x8, %xmm1, %xmm1
    000000e7: 	pshufd	$0x8, %xmm0, %xmm0
    000000ec: 	punpckldq	%xmm0, %xmm1
    000000f0: 	paddd	%xmm1, %xmm2
    000000f4: 	cmpq	%rbp, %rax
    000000f7: 	jne	.Ltmp444 # Offset: 247
    000000f9: 	movdqa	%xmm2, %xmm0
    000000fd: 	psrldq	$0x8, %xmm0
    00000102: 	paddd	%xmm0, %xmm2
    00000106: 	movdqa	%xmm2, %xmm0
    0000010a: 	psrldq	$0x4, %xmm0
    0000010f: 	paddd	%xmm0, %xmm2
    00000113: 	movd	%xmm2, %eax
    00000117: 	addl	%eax, %edx
    00000119: 	cmpl	%r15d, 0x10(%rsp)
    0000011e: 	je	.Ltmp442 # Offset: 286
    00000124: 	movl	0x14(%rsp), %ecx
.Ltmp456:
    00000128: 	movslq	%ecx, %rsi
    0000012b: 	leal	0x1(%rcx), %eax
    0000012e: 	shlq	$0x2, %rsi
    00000132: 	leaq	(%rbx,%rsi), %rdi
    00000136: 	cmpl	%r15d, %eax
    00000139: 	jge	.Ltmp445 # Offset: 313
    0000013f: 	cmpl	%ecx, %r14d
    00000142: 	jle	.Ltmp445 # Offset: 322
    00000148: 	movl	(%rdi), %eax
    0000014a: 	movl	-0x4(%rdi), %r11d
    0000014e: 	addl	%eax, %r11d
    00000151: 	movl	%r11d, %edi
    00000154: 	imull	%r11d, %edi
    00000158: 	leal	0x3(%rcx), %r11d
    0000015c: 	addl	%edi, %edx
    0000015e: 	movl	0x4(%rbx,%rsi), %edi
    00000162: 	addl	%edi, %eax
    00000164: 	imull	%eax, %eax
    00000167: 	addl	%eax, %edx
    00000169: 	leal	0x2(%rcx), %eax
    0000016c: 	cmpl	%r11d, %r15d
    0000016f: 	jle	.Ltmp446 # Offset: 367
    00000171: 	movl	0xc(%rbx,%rsi), %r11d
    00000176: 	movl	0x8(%rbx,%rsi), %eax
    0000017a: 	addl	0x8(%rbx,%rsi), %edi
    0000017e: 	imull	%edi, %edi
    00000181: 	addl	%r11d, %eax
    00000184: 	imull	%eax, %eax
    00000187: 	addl	%edx, %edi
    00000189: 	leal	(%rax,%rdi), %edx
    0000018c: 	leal	0x5(%rcx), %edi
    0000018f: 	leal	0x4(%rcx), %eax
    00000192: 	cmpl	%edi, %r15d
    00000195: 	jle	.Ltmp446 # Offset: 405
    00000197: 	movl	0x10(%rbx,%rsi), %eax
    0000019b: 	addl	%eax, %r11d
    0000019e: 	addl	0x14(%rbx,%rsi), %eax
    000001a2: 	imull	%r11d, %r11d
    000001a6: 	imull	%eax, %eax
    000001a9: 	addl	%edx, %r11d
    000001ac: 	leal	(%rax,%r11), %edx
    000001b0: 	leal	0x6(%rcx), %eax
.Ltmp446:
    000001b3: 	movslq	%eax, %rsi
    000001b6: 	movl	(%rbx,%rsi,4), %ecx
    000001b9: 	movl	-0x4(%rbx,%rsi,4), %r11d
    000001be: 	leaq	(,%rsi,4), %rdi
    000001c6: 	addl	%ecx, %r11d
    000001c9: 	movl	%r11d, %esi
    000001cc: 	imull	%r11d, %esi
    000001d0: 	addl	%esi, %edx
    000001d2: 	leal	0x1(%rax), %esi
    000001d5: 	cmpl	%esi, %r14d
    000001d8: 	jle	.Ltmp442 # Offset: 472
    000001da: 	movl	0x4(%rbx,%rdi), %esi
    000001de: 	addl	$0x2, %eax
    000001e1: 	addl	%esi, %ecx
    000001e3: 	imull	%ecx, %ecx
    000001e6: 	addl	%ecx, %edx
    000001e8: 	cmpl	%eax, %r14d
    000001eb: 	jle	.Ltmp442 # Offset: 491
    000001ed: 	addl	0x8(%rbx,%rdi), %esi
    000001f1: 	imull	%esi, %esi
    000001f4: 	addl	%esi, %edx
.Ltmp442:
    000001f6: 	cvttsd2si	%xmm3, %rax
    000001fb: 	addl	%eax, %eax
    000001fd: 	imull	%eax, %eax
    00000200: 	imull	$0x1f40, %eax, %eax
    00000206: 	cmpl	%edx, %eax
    00000208: 	je	.Ltmp447 # Offset: 520
    0000020a: 	movl	current_test(%rip), %edx
    00000210: 	movq	%r12, %rsi
    00000213: 	movl	$0x1, %edi
    00000218: 	xorl	%eax, %eax
    0000021a: 	addl	$0x1, %r13d
    0000021e: 	callq	__printf_chk@PLT # Offset: 542
    00000223: 	movl	iterations(%rip), %r8d
    0000022a: 	cmpl	%r8d, %r13d
    0000022d: 	jge	.Ltmp441 # Offset: 557
    0000022f: 	movl	0x4(%rbx), %r10d
    00000233: 	movl	(%rbx), %r9d
    00000236: 	movsd	init_value(%rip), %xmm3
    0000023e: 	jmp	.Ltmp448 # Offset: 574
    00000243: 	nopl	(%rax,%rax) # Size: 5
.Ltmp447:
    00000248: 	addl	$0x1, %r13d
    0000024c: 	cmpl	%r8d, %r13d
    0000024f: 	jl	.Ltmp448 # Offset: 591
.Ltmp441:
    00000255: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000263: 	subq	$0x20, %rax
    00000267: 	cmpq	%rax, %rbx
    0000026a: 	je	.Ltmp449 # Offset: 618
    00000270: 	movq	0x18(%rsp), %rax
    00000275: 	leaq	0x10(%rbx), %rdi
    00000279: 	movq	%rdi, (%rbx)
    0000027c: 	movq	(%rax), %rbp
    0000027f: 	movq	0x8(%rax), %r12
    00000283: 	movq	%rbp, %rax
    00000286: 	addq	%r12, %rax
    00000289: 	je	.Ltmp450 # Offset: 649
    0000028b: 	testq	%rbp, %rbp
    0000028e: 	je	.Ltmp451 # Offset: 654
.Ltmp450:
    00000294: 	movq	%r12, 0x20(%rsp)
    00000299: 	cmpq	$0xf, %r12
    0000029d: 	ja	.Ltmp452 # Offset: 669
    000002a3: 	cmpq	$0x1, %r12
    000002a7: 	jne	.Ltmp453 # Offset: 679
    000002ad: 	movzbl	(%rbp), %eax
    000002b1: 	movb	%al, 0x10(%rbx)
.Ltmp457:
    000002b4: 	movq	%r12, 0x8(%rbx)
    000002b8: 	movb	$0x0, (%rdi,%r12)
    000002bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002cb: 	addq	$0x20, %rax
    000002cf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002dd: 	je	.Ltmp454 # Offset: 733
.Ltmp458:
    000002e3: 	movq	-0x20(%rax), %rbp
    000002e7: 	callq	clock@PLT # Offset: 743
    000002ec: 	movq	%rax, end_time(%rip)
    000002f3: 	movq	0x28(%rsp), %rdx
    000002f8: 	subq	%fs:0x28, %rdx
    00000301: 	jne	.Ltmp455 # Offset: 769
    00000307: 	subq	start_time(%rip), %rax
    0000030e: 	pxor	%xmm0, %xmm0
    00000312: 	movq	%rbp, %rdi
    00000315: 	cvtsi2sd	%rax, %xmm0
    0000031a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000322: 	addq	$0x38, %rsp
    00000326: 	popq	%rbx
    00000327: 	popq	%rbp
    00000328: 	popq	%r12
    0000032a: 	popq	%r13
    0000032c: 	popq	%r14
    0000032e: 	popq	%r15
    00000330: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 816
.Ltmp443:
    00000335: 	movl	$0x1, %ecx
    0000033a: 	jmp	.Ltmp456 # Offset: 826
.Ltmp445:
    0000033f: 	movl	%ecx, %eax
    00000341: 	jmp	.Ltmp446 # Offset: 833
.Ltmp452:
    00000346: 	movq	%rbx, %rdi
    00000349: 	leaq	0x20(%rsp), %rsi
    0000034e: 	xorl	%edx, %edx
    00000350: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 848
    00000355: 	movq	%rax, (%rbx)
    00000358: 	movq	%rax, %rdi
    0000035b: 	movq	0x20(%rsp), %rax
    00000360: 	movq	%rax, 0x10(%rbx)
.Ltmp459:
    00000364: 	movq	%r12, %rdx
    00000367: 	movq	%rbp, %rsi
    0000036a: 	callq	memcpy@PLT # Offset: 874
    0000036f: 	movq	0x20(%rsp), %r12
    00000374: 	movq	(%rbx), %rdi
    00000377: 	jmp	.Ltmp457 # Offset: 887
.Ltmp449:
    0000037c: 	movq	0x18(%rsp), %rsi
    00000381: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000388: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 904
    0000038d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000394: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000039b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a2: 	jne	.Ltmp458 # Offset: 930
.Ltmp454:
    000003a8: 	movq	-0x8(%rdx), %rax
    000003ac: 	addq	$0x200, %rax
    000003b2: 	jmp	.Ltmp458 # Offset: 946
.Ltmp453:
    000003b7: 	testq	%r12, %r12
    000003ba: 	je	.Ltmp457 # Offset: 954
    000003c0: 	jmp	.Ltmp459 # Offset: 960
.Ltmp455:
    000003c2: 	callq	__stack_chk_fail@PLT # Offset: 962
.Ltmp451:
    000003c7: 	leaq	DATAat0x38110(%rip), %rdi
    000003ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 974
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj20custom_2term_add_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt20custom_2term_sub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x67a0
  Size        : 0x3ea
  MaxSize     : 0x3f0
  Offset      : 0x67a0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt20custom_2term_sub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp460 # Offset: 67
    00000049: 	leal	-0x1(%r13), %r15d
    0000004d: 	leal	-0x2(%r13), %eax
    00000051: 	xorl	%r14d, %r14d
    00000054: 	movl	%eax, (%rsp)
    00000057: 	movl	%r15d, %eax
    0000005a: 	movl	%r15d, %r12d
    0000005d: 	shrl	$0x3, %eax
    00000060: 	andl	$-0x8, %r12d
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%rbx,%rax), %rbp
    00000070: 	leal	0x1(%r12), %eax
    00000075: 	movl	%eax, 0x4(%rsp)
.Ltmp468:
    00000079: 	movzwl	(%rbx), %r10d
.Ltmp476:
    0000007d: 	movl	%r10d, %edx
    00000080: 	subw	0x2(%rbx), %dx
    00000084: 	imull	%edx, %edx
    00000087: 	cmpl	$0x1, %r13d
    0000008b: 	jle	.Ltmp461 # Offset: 139
    00000091: 	cmpl	$0x6, (%rsp)
    00000095: 	jbe	.Ltmp462 # Offset: 149
    0000009b: 	movq	%rbx, %rax
    0000009e: 	pxor	%xmm1, %xmm1
    000000a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp463:
    000000a8: 	movdqu	(%rax), %xmm0
    000000ac: 	movdqu	0x2(%rax), %xmm2
    000000b1: 	addq	$0x10, %rax
    000000b5: 	psubw	%xmm2, %xmm0
    000000b9: 	pmullw	%xmm0, %xmm0
    000000bd: 	paddw	%xmm0, %xmm1
    000000c1: 	cmpq	%rbp, %rax
    000000c4: 	jne	.Ltmp463 # Offset: 196
    000000c6: 	movdqa	%xmm1, %xmm0
    000000ca: 	psrldq	$0x8, %xmm0
    000000cf: 	paddw	%xmm0, %xmm1
    000000d3: 	movdqa	%xmm1, %xmm0
    000000d7: 	psrldq	$0x4, %xmm0
    000000dc: 	paddw	%xmm0, %xmm1
    000000e0: 	movdqa	%xmm1, %xmm0
    000000e4: 	psrldq	$0x2, %xmm0
    000000e9: 	paddw	%xmm0, %xmm1
    000000ed: 	pextrw	$0x0, %xmm1, %eax
    000000f2: 	addl	%eax, %edx
    000000f4: 	cmpl	%r15d, %r12d
    000000f7: 	je	.Ltmp461 # Offset: 247
    000000fd: 	movl	0x4(%rsp), %ecx
    00000101: 	movl	%r12d, %edi
.Ltmp477:
    00000104: 	movl	%r13d, %eax
    00000107: 	subl	%edi, %eax
    00000109: 	leal	-0x1(%rax), %esi
    0000010c: 	subl	$0x2, %eax
    0000010f: 	cmpl	$0x2, %eax
    00000112: 	jbe	.Ltmp464 # Offset: 274
    00000114: 	leal	0x1(%rdi), %eax
    00000117: 	movq	-0x2(%rbx,%rax,2), %xmm0
    0000011d: 	movq	(%rbx,%rax,2), %xmm1
    00000122: 	psubw	%xmm1, %xmm0
    00000126: 	pmullw	%xmm0, %xmm0
    0000012a: 	pextrw	$0x0, %xmm0, %eax
    0000012f: 	pextrw	$0x1, %xmm0, %edi
    00000134: 	addl	%edi, %eax
    00000136: 	addl	%edx, %eax
    00000138: 	pextrw	$0x2, %xmm0, %edx
    0000013d: 	addl	%edx, %eax
    0000013f: 	pextrw	$0x3, %xmm0, %edx
    00000144: 	addl	%eax, %edx
    00000146: 	movl	%esi, %eax
    00000148: 	andl	$-0x4, %eax
    0000014b: 	addl	%eax, %ecx
    0000014d: 	cmpl	%eax, %esi
    0000014f: 	je	.Ltmp461 # Offset: 335
.Ltmp464:
    00000155: 	movslq	%ecx, %rdi
    00000158: 	leal	0x1(%rcx), %esi
    0000015b: 	addq	%rdi, %rdi
    0000015e: 	leaq	(%rbx,%rdi), %rax
    00000162: 	cmpl	%r15d, %esi
    00000165: 	jge	.Ltmp465 # Offset: 357
    0000016b: 	cmpl	%ecx, %r13d
    0000016e: 	jle	.Ltmp465 # Offset: 366
    00000174: 	movzwl	(%rax), %esi
    00000177: 	movzwl	-0x2(%rax), %eax
    0000017b: 	movzwl	0x2(%rbx,%rdi), %r8d
    00000181: 	subl	%esi, %eax
    00000183: 	imull	%eax, %eax
    00000186: 	subl	%r8d, %esi
    00000189: 	imull	%esi, %esi
    0000018c: 	addl	%edx, %eax
    0000018e: 	leal	(%rsi,%rax), %edx
    00000191: 	leal	0x3(%rcx), %esi
    00000194: 	leal	0x2(%rcx), %eax
    00000197: 	cmpl	%esi, %r15d
    0000019a: 	jle	.Ltmp466 # Offset: 410
    0000019c: 	movzwl	0x4(%rbx,%rdi), %eax
    000001a1: 	movzwl	0x6(%rbx,%rdi), %esi
    000001a6: 	subl	%eax, %r8d
    000001a9: 	subl	%esi, %eax
    000001ab: 	imull	%r8d, %r8d
    000001af: 	imull	%eax, %eax
    000001b2: 	addl	%edx, %r8d
    000001b5: 	leal	(%rax,%r8), %edx
    000001b9: 	leal	0x5(%rcx), %r8d
    000001bd: 	leal	0x4(%rcx), %eax
    000001c0: 	cmpl	%r8d, %r15d
    000001c3: 	jle	.Ltmp466 # Offset: 451
    000001c5: 	movzwl	0x8(%rbx,%rdi), %eax
    000001ca: 	subl	%eax, %esi
    000001cc: 	subw	0xa(%rbx,%rdi), %ax
    000001d1: 	imull	%esi, %esi
    000001d4: 	imull	%eax, %eax
    000001d7: 	addl	%edx, %esi
    000001d9: 	leal	(%rax,%rsi), %edx
    000001dc: 	leal	0x6(%rcx), %eax
.Ltmp466:
    000001df: 	movslq	%eax, %rcx
    000001e2: 	leaq	(%rcx,%rcx), %rsi
    000001e6: 	movzwl	(%rbx,%rcx,2), %ecx
    000001ea: 	movzwl	-0x2(%rbx,%rsi), %edi
    000001ef: 	subl	%ecx, %edi
    000001f1: 	imull	%edi, %edi
    000001f4: 	addl	%edi, %edx
    000001f6: 	leal	0x1(%rax), %edi
    000001f9: 	cmpl	%edi, %r13d
    000001fc: 	jle	.Ltmp461 # Offset: 508
    000001fe: 	subw	0x2(%rbx,%rsi), %cx
    00000203: 	addl	$0x2, %eax
    00000206: 	imull	%ecx, %ecx
    00000209: 	addl	%ecx, %edx
    0000020b: 	cmpl	%eax, %r13d
    0000020e: 	jle	.Ltmp461 # Offset: 526
    00000210: 	movzwl	0x2(%rbx,%rsi), %eax
    00000215: 	subw	0x4(%rbx,%rsi), %ax
    0000021a: 	imull	%eax, %eax
    0000021d: 	addl	%eax, %edx
.Ltmp461:
    0000021f: 	testw	%dx, %dx
    00000222: 	je	.Ltmp467 # Offset: 546
    00000228: 	movl	current_test(%rip), %edx
    0000022e: 	leaq	DATAat0x381c8(%rip), %rsi
    00000235: 	movl	$0x1, %edi
    0000023a: 	xorl	%eax, %eax
    0000023c: 	addl	$0x1, %r14d
    00000240: 	callq	__printf_chk@PLT # Offset: 576
    00000245: 	movl	iterations(%rip), %r9d
    0000024c: 	cmpl	%r14d, %r9d
    0000024f: 	jg	.Ltmp468 # Offset: 591
.Ltmp460:
    00000255: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000263: 	subq	$0x20, %rax
    00000267: 	cmpq	%rax, %rbx
    0000026a: 	je	.Ltmp469 # Offset: 618
    00000270: 	movq	0x8(%rsp), %rax
    00000275: 	leaq	0x10(%rbx), %rdi
    00000279: 	movq	%rdi, (%rbx)
    0000027c: 	movq	(%rax), %rbp
    0000027f: 	movq	0x8(%rax), %r12
    00000283: 	movq	%rbp, %rax
    00000286: 	addq	%r12, %rax
    00000289: 	je	.Ltmp470 # Offset: 649
    0000028b: 	testq	%rbp, %rbp
    0000028e: 	je	.Ltmp471 # Offset: 654
.Ltmp470:
    00000294: 	movq	%r12, 0x10(%rsp)
    00000299: 	cmpq	$0xf, %r12
    0000029d: 	ja	.Ltmp472 # Offset: 669
    000002a3: 	cmpq	$0x1, %r12
    000002a7: 	jne	.Ltmp473 # Offset: 679
    000002ad: 	movzbl	(%rbp), %eax
    000002b1: 	movb	%al, 0x10(%rbx)
.Ltmp478:
    000002b4: 	movq	%r12, 0x8(%rbx)
    000002b8: 	movb	$0x0, (%rdi,%r12)
    000002bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002cb: 	addq	$0x20, %rax
    000002cf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002dd: 	je	.Ltmp474 # Offset: 733
.Ltmp479:
    000002e3: 	movq	-0x20(%rax), %rbp
    000002e7: 	callq	clock@PLT # Offset: 743
    000002ec: 	movq	%rax, end_time(%rip)
    000002f3: 	movq	0x18(%rsp), %rdx
    000002f8: 	subq	%fs:0x28, %rdx
    00000301: 	jne	.Ltmp475 # Offset: 769
    00000307: 	subq	start_time(%rip), %rax
    0000030e: 	pxor	%xmm0, %xmm0
    00000312: 	movq	%rbp, %rdi
    00000315: 	cvtsi2sd	%rax, %xmm0
    0000031a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000322: 	addq	$0x28, %rsp
    00000326: 	popq	%rbx
    00000327: 	popq	%rbp
    00000328: 	popq	%r12
    0000032a: 	popq	%r13
    0000032c: 	popq	%r14
    0000032e: 	popq	%r15
    00000330: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 816
    00000335: 	nopl	(%rax) # Size: 3
.Ltmp467:
    00000338: 	addl	$0x1, %r14d
    0000033c: 	cmpl	%r9d, %r14d
    0000033f: 	jl	.Ltmp476 # Offset: 831
    00000345: 	jmp	.Ltmp460 # Offset: 837
.Ltmp462:
    0000034a: 	xorl	%edi, %edi
    0000034c: 	movl	$0x1, %ecx
    00000351: 	jmp	.Ltmp477 # Offset: 849
.Ltmp472:
    00000356: 	movq	%rbx, %rdi
    00000359: 	leaq	0x10(%rsp), %rsi
    0000035e: 	xorl	%edx, %edx
    00000360: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 864
    00000365: 	movq	%rax, (%rbx)
    00000368: 	movq	%rax, %rdi
    0000036b: 	movq	0x10(%rsp), %rax
    00000370: 	movq	%rax, 0x10(%rbx)
.Ltmp480:
    00000374: 	movq	%r12, %rdx
    00000377: 	movq	%rbp, %rsi
    0000037a: 	callq	memcpy@PLT # Offset: 890
    0000037f: 	movq	0x10(%rsp), %r12
    00000384: 	movq	(%rbx), %rdi
    00000387: 	jmp	.Ltmp478 # Offset: 903
.Ltmp465:
    0000038c: 	movl	%ecx, %eax
    0000038e: 	jmp	.Ltmp466 # Offset: 910
.Ltmp469:
    00000393: 	movq	0x8(%rsp), %rsi
    00000398: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000039f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 927
    000003a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b9: 	jne	.Ltmp479 # Offset: 953
.Ltmp474:
    000003bf: 	movq	-0x8(%rdx), %rax
    000003c3: 	addq	$0x200, %rax
    000003c9: 	jmp	.Ltmp479 # Offset: 969
.Ltmp473:
    000003ce: 	testq	%r12, %r12
    000003d1: 	je	.Ltmp478 # Offset: 977
    000003d7: 	jmp	.Ltmp480 # Offset: 983
.Ltmp475:
    000003d9: 	callq	__stack_chk_fail@PLT # Offset: 985
.Ltmp471:
    000003de: 	leaq	DATAat0x38110(%rip), %rdi
    000003e5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 997
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt20custom_2term_sub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj20custom_2term_sub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x6b90
  Size        : 0x39b
  MaxSize     : 0x3a0
  Offset      : 0x6b90
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj20custom_2term_sub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp481 # Offset: 67
    00000049: 	leal	-0x1(%r15), %r12d
    0000004d: 	leal	-0x2(%r15), %eax
    00000051: 	movl	(%rbx), %r10d
    00000054: 	xorl	%r14d, %r14d
    00000057: 	movl	%eax, 0xc(%rsp)
    0000005b: 	movl	%r12d, %eax
    0000005e: 	leaq	DATAat0x381c8(%rip), %r13
    00000065: 	shrl	$0x2, %eax
    00000068: 	subl	$0x1, %eax
    0000006b: 	shlq	$0x4, %rax
    0000006f: 	leaq	0x10(%rbx,%rax), %rbp
    00000074: 	movl	%r12d, %eax
    00000077: 	andl	$-0x4, %eax
    0000007a: 	movl	%eax, 0x10(%rsp)
    0000007e: 	addl	$0x1, %eax
    00000081: 	movl	%eax, 0x14(%rsp)
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp488:
    00000088: 	movl	%r10d, %edx
    0000008b: 	subl	0x4(%rbx), %edx
    0000008e: 	imull	%edx, %edx
    00000091: 	cmpl	$0x1, %r15d
    00000095: 	jle	.Ltmp482 # Offset: 149
    0000009b: 	cmpl	$0x2, 0xc(%rsp)
    000000a0: 	jbe	.Ltmp483 # Offset: 160
    000000a6: 	movq	%rbx, %rax
    000000a9: 	pxor	%xmm2, %xmm2
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp484:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	0x4(%rax), %xmm3
    000000b9: 	addq	$0x10, %rax
    000000bd: 	psubd	%xmm3, %xmm0
    000000c1: 	movdqa	%xmm0, %xmm1
    000000c5: 	pmuludq	%xmm0, %xmm1
    000000c9: 	psrlq	$0x20, %xmm0
    000000ce: 	pmuludq	%xmm0, %xmm0
    000000d2: 	pshufd	$0x8, %xmm1, %xmm1
    000000d7: 	pshufd	$0x8, %xmm0, %xmm0
    000000dc: 	punpckldq	%xmm0, %xmm1
    000000e0: 	paddd	%xmm1, %xmm2
    000000e4: 	cmpq	%rbp, %rax
    000000e7: 	jne	.Ltmp484 # Offset: 231
    000000e9: 	movdqa	%xmm2, %xmm0
    000000ed: 	psrldq	$0x8, %xmm0
    000000f2: 	paddd	%xmm0, %xmm2
    000000f6: 	movdqa	%xmm2, %xmm0
    000000fa: 	psrldq	$0x4, %xmm0
    000000ff: 	paddd	%xmm0, %xmm2
    00000103: 	movd	%xmm2, %eax
    00000107: 	addl	%eax, %edx
    00000109: 	cmpl	%r12d, 0x10(%rsp)
    0000010e: 	je	.Ltmp482 # Offset: 270
    00000114: 	movl	0x14(%rsp), %esi
.Ltmp496:
    00000118: 	movslq	%esi, %rdi
    0000011b: 	leal	0x1(%rsi), %ecx
    0000011e: 	shlq	$0x2, %rdi
    00000122: 	leaq	(%rbx,%rdi), %rax
    00000126: 	cmpl	%r12d, %ecx
    00000129: 	jge	.Ltmp485 # Offset: 297
    0000012f: 	cmpl	%esi, %r15d
    00000132: 	jle	.Ltmp485 # Offset: 306
    00000138: 	movl	(%rax), %ecx
    0000013a: 	movl	-0x4(%rax), %eax
    0000013d: 	movl	0x4(%rbx,%rdi), %r8d
    00000142: 	subl	%ecx, %eax
    00000144: 	imull	%eax, %eax
    00000147: 	subl	%r8d, %ecx
    0000014a: 	imull	%ecx, %ecx
    0000014d: 	addl	%edx, %eax
    0000014f: 	leal	(%rcx,%rax), %edx
    00000152: 	leal	0x3(%rsi), %ecx
    00000155: 	leal	0x2(%rsi), %eax
    00000158: 	cmpl	%ecx, %r12d
    0000015b: 	jle	.Ltmp486 # Offset: 347
    0000015d: 	movl	0x8(%rbx,%rdi), %eax
    00000161: 	movl	0xc(%rbx,%rdi), %ecx
    00000165: 	subl	%eax, %r8d
    00000168: 	subl	%ecx, %eax
    0000016a: 	imull	%r8d, %r8d
    0000016e: 	imull	%eax, %eax
    00000171: 	addl	%edx, %r8d
    00000174: 	leal	(%rax,%r8), %edx
    00000178: 	leal	0x5(%rsi), %r8d
    0000017c: 	leal	0x4(%rsi), %eax
    0000017f: 	cmpl	%r8d, %r12d
    00000182: 	jle	.Ltmp486 # Offset: 386
    00000184: 	movl	0x10(%rbx,%rdi), %eax
    00000188: 	subl	%eax, %ecx
    0000018a: 	subl	0x14(%rbx,%rdi), %eax
    0000018e: 	imull	%ecx, %ecx
    00000191: 	imull	%eax, %eax
    00000194: 	addl	%edx, %ecx
    00000196: 	leal	(%rax,%rcx), %edx
    00000199: 	leal	0x6(%rsi), %eax
.Ltmp486:
    0000019c: 	movslq	%eax, %rcx
    0000019f: 	leaq	(,%rcx,4), %rsi
    000001a7: 	movl	(%rbx,%rcx,4), %ecx
    000001aa: 	movl	-0x4(%rbx,%rsi), %edi
    000001ae: 	subl	%ecx, %edi
    000001b0: 	imull	%edi, %edi
    000001b3: 	addl	%edi, %edx
    000001b5: 	leal	0x1(%rax), %edi
    000001b8: 	cmpl	%edi, %r15d
    000001bb: 	jle	.Ltmp482 # Offset: 443
    000001bd: 	subl	0x4(%rbx,%rsi), %ecx
    000001c1: 	addl	$0x2, %eax
    000001c4: 	imull	%ecx, %ecx
    000001c7: 	addl	%ecx, %edx
    000001c9: 	cmpl	%eax, %r15d
    000001cc: 	jle	.Ltmp482 # Offset: 460
    000001ce: 	movl	0x4(%rbx,%rsi), %eax
    000001d2: 	subl	0x8(%rbx,%rsi), %eax
    000001d6: 	imull	%eax, %eax
    000001d9: 	addl	%eax, %edx
.Ltmp482:
    000001db: 	testl	%edx, %edx
    000001dd: 	je	.Ltmp487 # Offset: 477
    000001df: 	movl	current_test(%rip), %edx
    000001e5: 	movq	%r13, %rsi
    000001e8: 	movl	$0x1, %edi
    000001ed: 	xorl	%eax, %eax
    000001ef: 	addl	$0x1, %r14d
    000001f3: 	callq	__printf_chk@PLT # Offset: 499
    000001f8: 	movl	iterations(%rip), %r9d
    000001ff: 	cmpl	%r9d, %r14d
    00000202: 	jge	.Ltmp481 # Offset: 514
    00000204: 	movl	(%rbx), %r10d
    00000207: 	jmp	.Ltmp488 # Offset: 519
    0000020c: 	nopl	(%rax) # Size: 4
.Ltmp487:
    00000210: 	addl	$0x1, %r14d
    00000214: 	cmpl	%r9d, %r14d
    00000217: 	jl	.Ltmp488 # Offset: 535
.Ltmp481:
    0000021d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000022b: 	subq	$0x20, %rax
    0000022f: 	cmpq	%rax, %rbx
    00000232: 	je	.Ltmp489 # Offset: 562
    00000238: 	movq	0x18(%rsp), %rax
    0000023d: 	leaq	0x10(%rbx), %rdi
    00000241: 	movq	%rdi, (%rbx)
    00000244: 	movq	(%rax), %rbp
    00000247: 	movq	0x8(%rax), %r12
    0000024b: 	movq	%rbp, %rax
    0000024e: 	addq	%r12, %rax
    00000251: 	je	.Ltmp490 # Offset: 593
    00000253: 	testq	%rbp, %rbp
    00000256: 	je	.Ltmp491 # Offset: 598
.Ltmp490:
    0000025c: 	movq	%r12, 0x20(%rsp)
    00000261: 	cmpq	$0xf, %r12
    00000265: 	ja	.Ltmp492 # Offset: 613
    0000026b: 	cmpq	$0x1, %r12
    0000026f: 	jne	.Ltmp493 # Offset: 623
    00000275: 	movzbl	(%rbp), %eax
    00000279: 	movb	%al, 0x10(%rbx)
.Ltmp497:
    0000027c: 	movq	%r12, 0x8(%rbx)
    00000280: 	movb	$0x0, (%rdi,%r12)
    00000285: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000028c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000293: 	addq	$0x20, %rax
    00000297: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a5: 	je	.Ltmp494 # Offset: 677
.Ltmp498:
    000002ab: 	movq	-0x20(%rax), %rbp
    000002af: 	callq	clock@PLT # Offset: 687
    000002b4: 	movq	%rax, end_time(%rip)
    000002bb: 	movq	0x28(%rsp), %rdx
    000002c0: 	subq	%fs:0x28, %rdx
    000002c9: 	jne	.Ltmp495 # Offset: 713
    000002cf: 	subq	start_time(%rip), %rax
    000002d6: 	pxor	%xmm0, %xmm0
    000002da: 	movq	%rbp, %rdi
    000002dd: 	cvtsi2sd	%rax, %xmm0
    000002e2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002ea: 	addq	$0x38, %rsp
    000002ee: 	popq	%rbx
    000002ef: 	popq	%rbp
    000002f0: 	popq	%r12
    000002f2: 	popq	%r13
    000002f4: 	popq	%r14
    000002f6: 	popq	%r15
    000002f8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 760
.Ltmp483:
    000002fd: 	movl	$0x1, %esi
    00000302: 	jmp	.Ltmp496 # Offset: 770
.Ltmp485:
    00000307: 	movl	%esi, %eax
    00000309: 	jmp	.Ltmp486 # Offset: 777
.Ltmp492:
    0000030e: 	movq	%rbx, %rdi
    00000311: 	leaq	0x20(%rsp), %rsi
    00000316: 	xorl	%edx, %edx
    00000318: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 792
    0000031d: 	movq	%rax, (%rbx)
    00000320: 	movq	%rax, %rdi
    00000323: 	movq	0x20(%rsp), %rax
    00000328: 	movq	%rax, 0x10(%rbx)
.Ltmp499:
    0000032c: 	movq	%r12, %rdx
    0000032f: 	movq	%rbp, %rsi
    00000332: 	callq	memcpy@PLT # Offset: 818
    00000337: 	movq	0x20(%rsp), %r12
    0000033c: 	movq	(%rbx), %rdi
    0000033f: 	jmp	.Ltmp497 # Offset: 831
.Ltmp489:
    00000344: 	movq	0x18(%rsp), %rsi
    00000349: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000350: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 848
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036a: 	jne	.Ltmp498 # Offset: 874
.Ltmp494:
    00000370: 	movq	-0x8(%rdx), %rax
    00000374: 	addq	$0x200, %rax
    0000037a: 	jmp	.Ltmp498 # Offset: 890
.Ltmp493:
    0000037f: 	testq	%r12, %r12
    00000382: 	je	.Ltmp497 # Offset: 898
    00000388: 	jmp	.Ltmp499 # Offset: 904
.Ltmp495:
    0000038a: 	callq	__stack_chk_fail@PLT # Offset: 906
.Ltmp491:
    0000038f: 	leaq	DATAat0x38110(%rip), %rdi
    00000396: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 918
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj20custom_2term_sub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt20custom_2term_add_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x6f30
  Size        : 0x412
  MaxSize     : 0x420
  Offset      : 0x6f30
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt20custom_2term_add_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp500 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, 0xc(%rsp)
    0000005a: 	movl	%r14d, %eax
    0000005d: 	shrl	$0x3, %eax
    00000060: 	subl	$0x1, %eax
    00000063: 	shlq	$0x4, %rax
    00000067: 	leaq	0x10(%rbx,%rax), %rbp
    0000006c: 	movl	%r14d, %eax
    0000006f: 	andl	$-0x8, %eax
    00000072: 	movl	%eax, 0x10(%rsp)
    00000076: 	addl	$0x1, %eax
    00000079: 	movl	%eax, 0x14(%rsp)
.Ltmp508:
    0000007d: 	cvttsd2si	init_value(%rip), %r9d
    00000086: 	movzwl	0x2(%rbx), %r11d
    0000008b: 	movzwl	(%rbx), %r10d
.Ltmp516:
    0000008f: 	leal	(%r11,%r10), %eax
    00000093: 	imull	%eax, %eax
    00000096: 	cmpl	$0x1, %r12d
    0000009a: 	jle	.Ltmp501 # Offset: 154
    000000a0: 	cmpl	$0x6, 0xc(%rsp)
    000000a5: 	jbe	.Ltmp502 # Offset: 165
    000000ab: 	movq	%rbx, %rdx
    000000ae: 	pxor	%xmm1, %xmm1
    000000b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp503:
    000000b8: 	movdqu	(%rdx), %xmm0
    000000bc: 	movdqu	0x2(%rdx), %xmm2
    000000c1: 	addq	$0x10, %rdx
    000000c5: 	paddw	%xmm2, %xmm0
    000000c9: 	pmullw	%xmm0, %xmm0
    000000cd: 	paddw	%xmm0, %xmm1
    000000d1: 	cmpq	%rbp, %rdx
    000000d4: 	jne	.Ltmp503 # Offset: 212
    000000d6: 	movdqa	%xmm1, %xmm0
    000000da: 	movl	0x10(%rsp), %esi
    000000de: 	psrldq	$0x8, %xmm0
    000000e3: 	paddw	%xmm0, %xmm1
    000000e7: 	movdqa	%xmm1, %xmm0
    000000eb: 	psrldq	$0x4, %xmm0
    000000f0: 	paddw	%xmm0, %xmm1
    000000f4: 	movdqa	%xmm1, %xmm0
    000000f8: 	psrldq	$0x2, %xmm0
    000000fd: 	paddw	%xmm0, %xmm1
    00000101: 	pextrw	$0x0, %xmm1, %edx
    00000106: 	addl	%edx, %eax
    00000108: 	cmpl	%r14d, %esi
    0000010b: 	je	.Ltmp501 # Offset: 267
    00000111: 	movl	0x14(%rsp), %edx
    00000115: 	movl	%esi, %edi
.Ltmp517:
    00000117: 	movl	%r12d, %ecx
    0000011a: 	subl	%edi, %ecx
    0000011c: 	leal	-0x1(%rcx), %esi
    0000011f: 	subl	$0x2, %ecx
    00000122: 	cmpl	$0x2, %ecx
    00000125: 	jbe	.Ltmp504 # Offset: 293
    00000127: 	leal	0x1(%rdi), %ecx
    0000012a: 	movq	-0x2(%rbx,%rcx,2), %xmm0
    00000130: 	movq	(%rbx,%rcx,2), %xmm1
    00000135: 	paddw	%xmm1, %xmm0
    00000139: 	pmullw	%xmm0, %xmm0
    0000013d: 	pextrw	$0x0, %xmm0, %ecx
    00000142: 	pextrw	$0x1, %xmm0, %edi
    00000147: 	addl	%edi, %ecx
    00000149: 	addl	%eax, %ecx
    0000014b: 	pextrw	$0x2, %xmm0, %eax
    00000150: 	addl	%eax, %ecx
    00000152: 	pextrw	$0x3, %xmm0, %eax
    00000157: 	addl	%ecx, %eax
    00000159: 	movl	%esi, %ecx
    0000015b: 	andl	$-0x4, %ecx
    0000015e: 	addl	%ecx, %edx
    00000160: 	cmpl	%ecx, %esi
    00000162: 	je	.Ltmp501 # Offset: 354
.Ltmp504:
    00000168: 	movslq	%edx, %rcx
    0000016b: 	leal	0x1(%rdx), %edi
    0000016e: 	addq	%rcx, %rcx
    00000171: 	leaq	(%rbx,%rcx), %rsi
    00000175: 	cmpl	%r14d, %edi
    00000178: 	jge	.Ltmp505 # Offset: 376
    0000017e: 	cmpl	%edx, %r12d
    00000181: 	jle	.Ltmp505 # Offset: 385
    00000187: 	movzwl	(%rsi), %edi
    0000018a: 	movzwl	-0x2(%rsi), %r15d
    0000018f: 	addl	%edi, %r15d
    00000192: 	movl	%r15d, %esi
    00000195: 	leal	0x3(%rdx), %r15d
    00000199: 	imull	%esi, %esi
    0000019c: 	addl	%esi, %eax
    0000019e: 	movzwl	0x2(%rbx,%rcx), %esi
    000001a3: 	addl	%esi, %edi
    000001a5: 	imull	%edi, %edi
    000001a8: 	addl	%edi, %eax
    000001aa: 	leal	0x2(%rdx), %edi
    000001ad: 	cmpl	%r15d, %r14d
    000001b0: 	jle	.Ltmp506 # Offset: 432
    000001b2: 	addw	0x4(%rbx,%rcx), %si
    000001b7: 	movzwl	0x4(%rbx,%rcx), %edi
    000001bc: 	leal	0x5(%rdx), %r15d
    000001c0: 	imull	%esi, %esi
    000001c3: 	addl	%esi, %eax
    000001c5: 	movzwl	0x6(%rbx,%rcx), %esi
    000001ca: 	addl	%esi, %edi
    000001cc: 	imull	%edi, %edi
    000001cf: 	addl	%edi, %eax
    000001d1: 	leal	0x4(%rdx), %edi
    000001d4: 	cmpl	%r15d, %r14d
    000001d7: 	jle	.Ltmp506 # Offset: 471
    000001d9: 	movzwl	0x8(%rbx,%rcx), %edi
    000001de: 	addl	%edi, %esi
    000001e0: 	addw	0xa(%rbx,%rcx), %di
    000001e5: 	imull	%esi, %esi
    000001e8: 	imull	%edi, %edi
    000001eb: 	addl	%eax, %esi
    000001ed: 	leal	(%rdi,%rsi), %eax
    000001f0: 	leal	0x6(%rdx), %edi
.Ltmp506:
    000001f3: 	movslq	%edi, %rdx
    000001f6: 	movzwl	(%rbx,%rdx,2), %esi
    000001fa: 	movzwl	-0x2(%rbx,%rdx,2), %r15d
    00000200: 	leaq	(%rdx,%rdx), %rcx
    00000204: 	addl	%esi, %r15d
    00000207: 	movl	%r15d, %edx
    0000020a: 	imull	%edx, %edx
    0000020d: 	addl	%edx, %eax
    0000020f: 	leal	0x1(%rdi), %edx
    00000212: 	cmpl	%edx, %r12d
    00000215: 	jle	.Ltmp501 # Offset: 533
    00000217: 	movzwl	0x2(%rbx,%rcx), %edx
    0000021c: 	addl	$0x2, %edi
    0000021f: 	addl	%edx, %esi
    00000221: 	imull	%esi, %esi
    00000224: 	addl	%esi, %eax
    00000226: 	cmpl	%edi, %r12d
    00000229: 	jle	.Ltmp501 # Offset: 553
    0000022b: 	addw	0x4(%rbx,%rcx), %dx
    00000230: 	imull	%edx, %edx
    00000233: 	addl	%edx, %eax
.Ltmp501:
    00000235: 	leal	(%r9,%r9), %edx
    00000239: 	imull	%edx, %edx
    0000023c: 	imulw	$0x1f40, %dx, %dx
    00000241: 	cmpw	%ax, %dx
    00000244: 	je	.Ltmp507 # Offset: 580
    0000024a: 	movl	current_test(%rip), %edx
    00000250: 	leaq	DATAat0x381c8(%rip), %rsi
    00000257: 	movl	$0x1, %edi
    0000025c: 	xorl	%eax, %eax
    0000025e: 	addl	$0x1, %r13d
    00000262: 	callq	__printf_chk@PLT # Offset: 610
    00000267: 	movl	iterations(%rip), %r8d
    0000026e: 	cmpl	%r13d, %r8d
    00000271: 	jg	.Ltmp508 # Offset: 625
.Ltmp500:
    00000277: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000027e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000285: 	subq	$0x20, %rax
    00000289: 	cmpq	%rax, %rbx
    0000028c: 	je	.Ltmp509 # Offset: 652
    00000292: 	movq	0x18(%rsp), %rax
    00000297: 	leaq	0x10(%rbx), %rdi
    0000029b: 	movq	%rdi, (%rbx)
    0000029e: 	movq	(%rax), %rbp
    000002a1: 	movq	0x8(%rax), %r12
    000002a5: 	movq	%rbp, %rax
    000002a8: 	addq	%r12, %rax
    000002ab: 	je	.Ltmp510 # Offset: 683
    000002ad: 	testq	%rbp, %rbp
    000002b0: 	je	.Ltmp511 # Offset: 688
.Ltmp510:
    000002b6: 	movq	%r12, 0x20(%rsp)
    000002bb: 	cmpq	$0xf, %r12
    000002bf: 	ja	.Ltmp512 # Offset: 703
    000002c5: 	cmpq	$0x1, %r12
    000002c9: 	jne	.Ltmp513 # Offset: 713
    000002cf: 	movzbl	(%rbp), %eax
    000002d3: 	movb	%al, 0x10(%rbx)
.Ltmp518:
    000002d6: 	movq	%r12, 0x8(%rbx)
    000002da: 	movb	$0x0, (%rdi,%r12)
    000002df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ed: 	addq	$0x20, %rax
    000002f1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002f8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002ff: 	je	.Ltmp514 # Offset: 767
.Ltmp519:
    00000305: 	movq	-0x20(%rax), %rbp
    00000309: 	callq	clock@PLT # Offset: 777
    0000030e: 	movq	%rax, end_time(%rip)
    00000315: 	movq	0x28(%rsp), %rdx
    0000031a: 	subq	%fs:0x28, %rdx
    00000323: 	jne	.Ltmp515 # Offset: 803
    00000329: 	subq	start_time(%rip), %rax
    00000330: 	pxor	%xmm0, %xmm0
    00000334: 	movq	%rbp, %rdi
    00000337: 	cvtsi2sd	%rax, %xmm0
    0000033c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000344: 	addq	$0x38, %rsp
    00000348: 	popq	%rbx
    00000349: 	popq	%rbp
    0000034a: 	popq	%r12
    0000034c: 	popq	%r13
    0000034e: 	popq	%r14
    00000350: 	popq	%r15
    00000352: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 850
    00000357: 	nopw	(%rax,%rax) # Size: 9
.Ltmp507:
    00000360: 	addl	$0x1, %r13d
    00000364: 	cmpl	%r8d, %r13d
    00000367: 	jl	.Ltmp516 # Offset: 871
    0000036d: 	jmp	.Ltmp500 # Offset: 877
.Ltmp502:
    00000372: 	xorl	%edi, %edi
    00000374: 	movl	$0x1, %edx
    00000379: 	jmp	.Ltmp517 # Offset: 889
.Ltmp512:
    0000037e: 	movq	%rbx, %rdi
    00000381: 	leaq	0x20(%rsp), %rsi
    00000386: 	xorl	%edx, %edx
    00000388: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 904
    0000038d: 	movq	%rax, (%rbx)
    00000390: 	movq	%rax, %rdi
    00000393: 	movq	0x20(%rsp), %rax
    00000398: 	movq	%rax, 0x10(%rbx)
.Ltmp520:
    0000039c: 	movq	%r12, %rdx
    0000039f: 	movq	%rbp, %rsi
    000003a2: 	callq	memcpy@PLT # Offset: 930
    000003a7: 	movq	0x20(%rsp), %r12
    000003ac: 	movq	(%rbx), %rdi
    000003af: 	jmp	.Ltmp518 # Offset: 943
.Ltmp505:
    000003b4: 	movl	%edx, %edi
    000003b6: 	jmp	.Ltmp506 # Offset: 950
.Ltmp509:
    000003bb: 	movq	0x18(%rsp), %rsi
    000003c0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003c7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 967
    000003cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003d3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003e1: 	jne	.Ltmp519 # Offset: 993
.Ltmp514:
    000003e7: 	movq	-0x8(%rdx), %rax
    000003eb: 	addq	$0x200, %rax
    000003f1: 	jmp	.Ltmp519 # Offset: 1009
.Ltmp513:
    000003f6: 	testq	%r12, %r12
    000003f9: 	je	.Ltmp518 # Offset: 1017
    000003ff: 	jmp	.Ltmp520 # Offset: 1023
.Ltmp515:
    00000401: 	callq	__stack_chk_fail@PLT # Offset: 1025
.Ltmp511:
    00000406: 	leaq	DATAat0x38110(%rip), %rdi
    0000040d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1037
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt20custom_2term_add_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm20custom_2term_sub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x7350
  Size        : 0x282
  MaxSize     : 0x290
  Offset      : 0x7350
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm20custom_2term_sub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %edi
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	testl	%edi, %edi
    0000003f: 	jle	.Ltmp521 # Offset: 63
    00000045: 	leal	-0x4(%r14), %eax
    00000049: 	movq	(%r13), %rsi
    0000004d: 	xorl	%r15d, %r15d
    00000050: 	leaq	DATAat0x381c8(%rip), %rbp
    00000057: 	shrl	%eax
    00000059: 	leaq	0x5(%rax,%rax), %rbx
    0000005e: 	nop # Size: 2
.Ltmp527:
    00000060: 	movq	%rsi, %rcx
    00000063: 	subq	0x8(%r13), %rcx
    00000067: 	movq	%rsi, %r9
    0000006a: 	imulq	%rcx, %rcx
    0000006e: 	cmpl	$0x1, %r14d
    00000072: 	jle	.Ltmp522 # Offset: 114
    00000074: 	cmpl	$0x3, %r14d
    00000078: 	jle	.Ltmp523 # Offset: 120
    0000007e: 	movl	$0x3, %r8d
.Ltmp524:
    00000084: 	movq	-0x10(%r13,%r8,8), %rax
    00000089: 	movq	%r9, %rdx
    0000008c: 	movq	-0x8(%r13,%r8,8), %r9
    00000091: 	subq	%rax, %rdx
    00000094: 	subq	%r9, %rax
    00000097: 	imulq	%rdx, %rdx
    0000009b: 	imulq	%rax, %rax
    0000009f: 	addq	%rax, %rdx
    000000a2: 	addq	%rdx, %rcx
    000000a5: 	movslq	%r8d, %rdx
    000000a8: 	addq	$0x2, %r8
    000000ac: 	cmpq	%r8, %rbx
    000000af: 	jne	.Ltmp524 # Offset: 175
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp525:
    000000b8: 	movq	-0x8(%r13,%rdx,8), %rax
    000000bd: 	subq	(%r13,%rdx,8), %rax
    000000c2: 	addq	$0x1, %rdx
    000000c6: 	imulq	%rax, %rax
    000000ca: 	addq	%rax, %rcx
    000000cd: 	cmpl	%edx, %r14d
    000000d0: 	jg	.Ltmp525 # Offset: 208
.Ltmp522:
    000000d2: 	testq	%rcx, %rcx
    000000d5: 	je	.Ltmp526 # Offset: 213
    000000d7: 	movl	current_test(%rip), %edx
    000000dd: 	movl	$0x1, %edi
    000000e2: 	movq	%rbp, %rsi
    000000e5: 	xorl	%eax, %eax
    000000e7: 	addl	$0x1, %r15d
    000000eb: 	callq	__printf_chk@PLT # Offset: 235
    000000f0: 	movl	iterations(%rip), %edi
    000000f6: 	cmpl	%r15d, %edi
    000000f9: 	jle	.Ltmp521 # Offset: 249
    000000fb: 	movq	(%r13), %rsi
    000000ff: 	jmp	.Ltmp527 # Offset: 255
    00000104: 	nopl	(%rax) # Size: 4
.Ltmp526:
    00000108: 	addl	$0x1, %r15d
    0000010c: 	cmpl	%edi, %r15d
    0000010f: 	jl	.Ltmp527 # Offset: 271
.Ltmp521:
    00000115: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000123: 	subq	$0x20, %rax
    00000127: 	cmpq	%rax, %rbx
    0000012a: 	je	.Ltmp528 # Offset: 298
    00000130: 	leaq	0x10(%rbx), %rdi
    00000134: 	movq	%rdi, (%rbx)
    00000137: 	movq	(%r12), %rbp
    0000013b: 	movq	0x8(%r12), %r12
    00000140: 	movq	%rbp, %rax
    00000143: 	addq	%r12, %rax
    00000146: 	je	.Ltmp529 # Offset: 326
    00000148: 	testq	%rbp, %rbp
    0000014b: 	je	.Ltmp530 # Offset: 331
.Ltmp529:
    00000151: 	movq	%r12, (%rsp)
    00000155: 	cmpq	$0xf, %r12
    00000159: 	ja	.Ltmp531 # Offset: 345
    0000015f: 	cmpq	$0x1, %r12
    00000163: 	jne	.Ltmp532 # Offset: 355
    00000169: 	movzbl	(%rbp), %eax
    0000016d: 	movb	%al, 0x10(%rbx)
.Ltmp535:
    00000170: 	movq	%r12, 0x8(%rbx)
    00000174: 	movb	$0x0, (%rdi,%r12)
    00000179: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000180: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000187: 	addq	$0x20, %rax
    0000018b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000192: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000199: 	je	.Ltmp533 # Offset: 409
.Ltmp536:
    0000019f: 	movq	-0x20(%rax), %rbp
    000001a3: 	callq	clock@PLT # Offset: 419
    000001a8: 	movq	%rax, end_time(%rip)
    000001af: 	movq	0x8(%rsp), %rdx
    000001b4: 	subq	%fs:0x28, %rdx
    000001bd: 	jne	.Ltmp534 # Offset: 445
    000001c3: 	subq	start_time(%rip), %rax
    000001ca: 	pxor	%xmm0, %xmm0
    000001ce: 	movq	%rbp, %rdi
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001de: 	addq	$0x18, %rsp
    000001e2: 	popq	%rbx
    000001e3: 	popq	%rbp
    000001e4: 	popq	%r12
    000001e6: 	popq	%r13
    000001e8: 	popq	%r14
    000001ea: 	popq	%r15
    000001ec: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 492
.Ltmp523:
    000001f1: 	movl	$0x1, %edx
    000001f6: 	jmp	.Ltmp525 # Offset: 502
.Ltmp531:
    000001fb: 	movq	%rbx, %rdi
    000001fe: 	movq	%rsp, %rsi
    00000201: 	xorl	%edx, %edx
    00000203: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 515
    00000208: 	movq	%rax, (%rbx)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	(%rsp), %rax
    00000212: 	movq	%rax, 0x10(%rbx)
.Ltmp537:
    00000216: 	movq	%r12, %rdx
    00000219: 	movq	%rbp, %rsi
    0000021c: 	callq	memcpy@PLT # Offset: 540
    00000221: 	movq	(%rsp), %r12
    00000225: 	movq	(%rbx), %rdi
    00000228: 	jmp	.Ltmp535 # Offset: 552
.Ltmp528:
    0000022d: 	movq	%r12, %rsi
    00000230: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000237: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 567
    0000023c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000243: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000251: 	jne	.Ltmp536 # Offset: 593
.Ltmp533:
    00000257: 	movq	-0x8(%rdx), %rax
    0000025b: 	addq	$0x200, %rax
    00000261: 	jmp	.Ltmp536 # Offset: 609
.Ltmp532:
    00000266: 	testq	%r12, %r12
    00000269: 	je	.Ltmp535 # Offset: 617
    0000026f: 	jmp	.Ltmp537 # Offset: 623
.Ltmp534:
    00000271: 	callq	__stack_chk_fail@PLT # Offset: 625
.Ltmp530:
    00000276: 	leaq	DATAat0x38110(%rip), %rdi
    0000027d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 637
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm20custom_2term_sub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl20custom_2term_sub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x75e0
  Size        : 0x282
  MaxSize     : 0x290
  Offset      : 0x75e0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl20custom_2term_sub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %edi
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	testl	%edi, %edi
    0000003f: 	jle	.Ltmp538 # Offset: 63
    00000045: 	leal	-0x4(%r14), %eax
    00000049: 	movq	(%r13), %rsi
    0000004d: 	xorl	%r15d, %r15d
    00000050: 	leaq	DATAat0x381c8(%rip), %rbp
    00000057: 	shrl	%eax
    00000059: 	leaq	0x5(%rax,%rax), %rbx
    0000005e: 	nop # Size: 2
.Ltmp544:
    00000060: 	movq	%rsi, %rcx
    00000063: 	subq	0x8(%r13), %rcx
    00000067: 	movq	%rsi, %r9
    0000006a: 	imulq	%rcx, %rcx
    0000006e: 	cmpl	$0x1, %r14d
    00000072: 	jle	.Ltmp539 # Offset: 114
    00000074: 	cmpl	$0x3, %r14d
    00000078: 	jle	.Ltmp540 # Offset: 120
    0000007e: 	movl	$0x3, %r8d
.Ltmp541:
    00000084: 	movq	-0x10(%r13,%r8,8), %rax
    00000089: 	movq	%r9, %rdx
    0000008c: 	movq	-0x8(%r13,%r8,8), %r9
    00000091: 	subq	%rax, %rdx
    00000094: 	subq	%r9, %rax
    00000097: 	imulq	%rdx, %rdx
    0000009b: 	imulq	%rax, %rax
    0000009f: 	addq	%rcx, %rdx
    000000a2: 	leaq	(%rax,%rdx), %rcx
    000000a6: 	movslq	%r8d, %rdx
    000000a9: 	addq	$0x2, %r8
    000000ad: 	cmpq	%r8, %rbx
    000000b0: 	jne	.Ltmp541 # Offset: 176
    000000b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp542:
    000000b8: 	movq	-0x8(%r13,%rdx,8), %rax
    000000bd: 	subq	(%r13,%rdx,8), %rax
    000000c2: 	addq	$0x1, %rdx
    000000c6: 	imulq	%rax, %rax
    000000ca: 	addq	%rax, %rcx
    000000cd: 	cmpl	%edx, %r14d
    000000d0: 	jg	.Ltmp542 # Offset: 208
.Ltmp539:
    000000d2: 	testq	%rcx, %rcx
    000000d5: 	je	.Ltmp543 # Offset: 213
    000000d7: 	movl	current_test(%rip), %edx
    000000dd: 	movl	$0x1, %edi
    000000e2: 	movq	%rbp, %rsi
    000000e5: 	xorl	%eax, %eax
    000000e7: 	addl	$0x1, %r15d
    000000eb: 	callq	__printf_chk@PLT # Offset: 235
    000000f0: 	movl	iterations(%rip), %edi
    000000f6: 	cmpl	%r15d, %edi
    000000f9: 	jle	.Ltmp538 # Offset: 249
    000000fb: 	movq	(%r13), %rsi
    000000ff: 	jmp	.Ltmp544 # Offset: 255
    00000104: 	nopl	(%rax) # Size: 4
.Ltmp543:
    00000108: 	addl	$0x1, %r15d
    0000010c: 	cmpl	%edi, %r15d
    0000010f: 	jl	.Ltmp544 # Offset: 271
.Ltmp538:
    00000115: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000123: 	subq	$0x20, %rax
    00000127: 	cmpq	%rax, %rbx
    0000012a: 	je	.Ltmp545 # Offset: 298
    00000130: 	leaq	0x10(%rbx), %rdi
    00000134: 	movq	%rdi, (%rbx)
    00000137: 	movq	(%r12), %rbp
    0000013b: 	movq	0x8(%r12), %r12
    00000140: 	movq	%rbp, %rax
    00000143: 	addq	%r12, %rax
    00000146: 	je	.Ltmp546 # Offset: 326
    00000148: 	testq	%rbp, %rbp
    0000014b: 	je	.Ltmp547 # Offset: 331
.Ltmp546:
    00000151: 	movq	%r12, (%rsp)
    00000155: 	cmpq	$0xf, %r12
    00000159: 	ja	.Ltmp548 # Offset: 345
    0000015f: 	cmpq	$0x1, %r12
    00000163: 	jne	.Ltmp549 # Offset: 355
    00000169: 	movzbl	(%rbp), %eax
    0000016d: 	movb	%al, 0x10(%rbx)
.Ltmp552:
    00000170: 	movq	%r12, 0x8(%rbx)
    00000174: 	movb	$0x0, (%rdi,%r12)
    00000179: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000180: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000187: 	addq	$0x20, %rax
    0000018b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000192: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000199: 	je	.Ltmp550 # Offset: 409
.Ltmp553:
    0000019f: 	movq	-0x20(%rax), %rbp
    000001a3: 	callq	clock@PLT # Offset: 419
    000001a8: 	movq	%rax, end_time(%rip)
    000001af: 	movq	0x8(%rsp), %rdx
    000001b4: 	subq	%fs:0x28, %rdx
    000001bd: 	jne	.Ltmp551 # Offset: 445
    000001c3: 	subq	start_time(%rip), %rax
    000001ca: 	pxor	%xmm0, %xmm0
    000001ce: 	movq	%rbp, %rdi
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001de: 	addq	$0x18, %rsp
    000001e2: 	popq	%rbx
    000001e3: 	popq	%rbp
    000001e4: 	popq	%r12
    000001e6: 	popq	%r13
    000001e8: 	popq	%r14
    000001ea: 	popq	%r15
    000001ec: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 492
.Ltmp540:
    000001f1: 	movl	$0x1, %edx
    000001f6: 	jmp	.Ltmp542 # Offset: 502
.Ltmp548:
    000001fb: 	movq	%rbx, %rdi
    000001fe: 	movq	%rsp, %rsi
    00000201: 	xorl	%edx, %edx
    00000203: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 515
    00000208: 	movq	%rax, (%rbx)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	(%rsp), %rax
    00000212: 	movq	%rax, 0x10(%rbx)
.Ltmp554:
    00000216: 	movq	%r12, %rdx
    00000219: 	movq	%rbp, %rsi
    0000021c: 	callq	memcpy@PLT # Offset: 540
    00000221: 	movq	(%rsp), %r12
    00000225: 	movq	(%rbx), %rdi
    00000228: 	jmp	.Ltmp552 # Offset: 552
.Ltmp545:
    0000022d: 	movq	%r12, %rsi
    00000230: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000237: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 567
    0000023c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000243: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000251: 	jne	.Ltmp553 # Offset: 593
.Ltmp550:
    00000257: 	movq	-0x8(%rdx), %rax
    0000025b: 	addq	$0x200, %rax
    00000261: 	jmp	.Ltmp553 # Offset: 609
.Ltmp549:
    00000266: 	testq	%r12, %r12
    00000269: 	je	.Ltmp552 # Offset: 617
    0000026f: 	jmp	.Ltmp554 # Offset: 623
.Ltmp551:
    00000271: 	callq	__stack_chk_fail@PLT # Offset: 625
.Ltmp547:
    00000276: 	leaq	DATAat0x38110(%rip), %rdi
    0000027d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 637
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl20custom_2term_sub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm20custom_2term_add_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x7870
  Size        : 0x2ec
  MaxSize     : 0x2f0
  Offset      : 0x7870
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm20custom_2term_add_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdi, %r14
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp555 # Offset: 67
    00000049: 	leal	-0x4(%r15), %eax
    0000004d: 	movq	(%r14), %rdi
    00000050: 	movq	0x8(%r14), %r9
    00000054: 	xorl	%r13d, %r13d
    00000057: 	shrl	%eax
    00000059: 	movsd	DATAat0x385f0(%rip), %xmm1
    00000061: 	movsd	init_value(%rip), %xmm0
    00000069: 	movabsq	$-0x8000000000000000, %rbp
    00000073: 	leaq	0x5(%rax,%rax), %rbx
    00000078: 	leaq	DATAat0x381c8(%rip), %r12
    0000007f: 	nop # Size: 1
.Ltmp562:
    00000080: 	leaq	(%rdi,%r9), %rcx
    00000084: 	movq	%rdi, %r10
    00000087: 	imulq	%rcx, %rcx
    0000008b: 	cmpl	$0x1, %r15d
    0000008f: 	jle	.Ltmp556 # Offset: 143
    00000091: 	cmpl	$0x3, %r15d
    00000095: 	jle	.Ltmp557 # Offset: 149
    0000009b: 	movl	$0x3, %esi
.Ltmp558:
    000000a0: 	movq	-0x10(%r14,%rsi,8), %rdx
    000000a5: 	movq	-0x10(%r14,%rsi,8), %rax
    000000aa: 	addq	%r10, %rdx
    000000ad: 	movq	-0x8(%r14,%rsi,8), %r10
    000000b2: 	imulq	%rdx, %rdx
    000000b6: 	addq	%r10, %rax
    000000b9: 	imulq	%rax, %rax
    000000bd: 	addq	%rdx, %rax
    000000c0: 	movslq	%esi, %rdx
    000000c3: 	addq	$0x2, %rsi
    000000c7: 	addq	%rax, %rcx
    000000ca: 	cmpq	%rsi, %rbx
    000000cd: 	jne	.Ltmp558 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp559:
    000000d0: 	movq	(%r14,%rdx,8), %rax
    000000d4: 	addq	-0x8(%r14,%rdx,8), %rax
    000000d9: 	addq	$0x1, %rdx
    000000dd: 	imulq	%rax, %rax
    000000e1: 	addq	%rax, %rcx
    000000e4: 	cmpl	%edx, %r15d
    000000e7: 	jg	.Ltmp559 # Offset: 231
.Ltmp556:
    000000e9: 	comisd	%xmm1, %xmm0
    000000ed: 	jae	.Ltmp560 # Offset: 237
    000000f3: 	cvttsd2si	%xmm0, %rax
.Ltmp570:
    000000f8: 	addq	%rax, %rax
    000000fb: 	imulq	%rax, %rax
    000000ff: 	imulq	$0x1f40, %rax, %rax
    00000106: 	cmpq	%rcx, %rax
    00000109: 	je	.Ltmp561 # Offset: 265
    0000010b: 	movl	current_test(%rip), %edx
    00000111: 	movq	%r12, %rsi
    00000114: 	movl	$0x1, %edi
    00000119: 	xorl	%eax, %eax
    0000011b: 	addl	$0x1, %r13d
    0000011f: 	callq	__printf_chk@PLT # Offset: 287
    00000124: 	movl	iterations(%rip), %r8d
    0000012b: 	cmpl	%r13d, %r8d
    0000012e: 	jle	.Ltmp555 # Offset: 302
    00000130: 	movq	DATAat0x385f0(%rip), %rax
    00000137: 	movq	(%r14), %rdi
    0000013a: 	movq	0x8(%r14), %r9
    0000013e: 	movsd	init_value(%rip), %xmm0
    00000146: 	movq	%rax, %xmm1
    0000014b: 	jmp	.Ltmp562 # Offset: 331
.Ltmp561:
    00000150: 	addl	$0x1, %r13d
    00000154: 	cmpl	%r8d, %r13d
    00000157: 	jl	.Ltmp562 # Offset: 343
.Ltmp555:
    0000015d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000164: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000016b: 	subq	$0x20, %rax
    0000016f: 	cmpq	%rax, %rbx
    00000172: 	je	.Ltmp563 # Offset: 370
    00000178: 	movq	0x8(%rsp), %rax
    0000017d: 	leaq	0x10(%rbx), %rdi
    00000181: 	movq	%rdi, (%rbx)
    00000184: 	movq	(%rax), %rbp
    00000187: 	movq	0x8(%rax), %r12
    0000018b: 	movq	%rbp, %rax
    0000018e: 	addq	%r12, %rax
    00000191: 	je	.Ltmp564 # Offset: 401
    00000193: 	testq	%rbp, %rbp
    00000196: 	je	.Ltmp565 # Offset: 406
.Ltmp564:
    0000019c: 	movq	%r12, 0x10(%rsp)
    000001a1: 	cmpq	$0xf, %r12
    000001a5: 	ja	.Ltmp566 # Offset: 421
    000001ab: 	cmpq	$0x1, %r12
    000001af: 	jne	.Ltmp567 # Offset: 431
    000001b5: 	movzbl	(%rbp), %eax
    000001b9: 	movb	%al, 0x10(%rbx)
.Ltmp571:
    000001bc: 	movq	%r12, 0x8(%rbx)
    000001c0: 	movb	$0x0, (%rdi,%r12)
    000001c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d3: 	addq	$0x20, %rax
    000001d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001de: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e5: 	je	.Ltmp568 # Offset: 485
.Ltmp572:
    000001eb: 	movq	-0x20(%rax), %rbp
    000001ef: 	callq	clock@PLT # Offset: 495
    000001f4: 	movq	%rax, end_time(%rip)
    000001fb: 	movq	0x18(%rsp), %rdx
    00000200: 	subq	%fs:0x28, %rdx
    00000209: 	jne	.Ltmp569 # Offset: 521
    0000020f: 	subq	start_time(%rip), %rax
    00000216: 	pxor	%xmm0, %xmm0
    0000021a: 	movq	%rbp, %rdi
    0000021d: 	cvtsi2sd	%rax, %xmm0
    00000222: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000022a: 	addq	$0x28, %rsp
    0000022e: 	popq	%rbx
    0000022f: 	popq	%rbp
    00000230: 	popq	%r12
    00000232: 	popq	%r13
    00000234: 	popq	%r14
    00000236: 	popq	%r15
    00000238: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 568
    0000023d: 	nopl	(%rax) # Size: 3
.Ltmp560:
    00000240: 	movapd	%xmm0, %xmm2
    00000244: 	subsd	%xmm1, %xmm2
    00000248: 	cvttsd2si	%xmm2, %rax
    0000024d: 	xorq	%rbp, %rax
    00000250: 	jmp	.Ltmp570 # Offset: 592
.Ltmp557:
    00000255: 	movl	$0x1, %edx
    0000025a: 	jmp	.Ltmp559 # Offset: 602
.Ltmp566:
    0000025f: 	movq	%rbx, %rdi
    00000262: 	leaq	0x10(%rsp), %rsi
    00000267: 	xorl	%edx, %edx
    00000269: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 617
    0000026e: 	movq	%rax, (%rbx)
    00000271: 	movq	%rax, %rdi
    00000274: 	movq	0x10(%rsp), %rax
    00000279: 	movq	%rax, 0x10(%rbx)
.Ltmp573:
    0000027d: 	movq	%r12, %rdx
    00000280: 	movq	%rbp, %rsi
    00000283: 	callq	memcpy@PLT # Offset: 643
    00000288: 	movq	0x10(%rsp), %r12
    0000028d: 	movq	(%rbx), %rdi
    00000290: 	jmp	.Ltmp571 # Offset: 656
.Ltmp563:
    00000295: 	movq	0x8(%rsp), %rsi
    0000029a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 673
    000002a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ad: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002bb: 	jne	.Ltmp572 # Offset: 699
.Ltmp568:
    000002c1: 	movq	-0x8(%rdx), %rax
    000002c5: 	addq	$0x200, %rax
    000002cb: 	jmp	.Ltmp572 # Offset: 715
.Ltmp567:
    000002d0: 	testq	%r12, %r12
    000002d3: 	je	.Ltmp571 # Offset: 723
    000002d9: 	jmp	.Ltmp573 # Offset: 729
.Ltmp569:
    000002db: 	callq	__stack_chk_fail@PLT # Offset: 731
.Ltmp565:
    000002e0: 	leaq	DATAat0x38110(%rip), %rdi
    000002e7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 743
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm20custom_2term_add_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi20custom_2term_sub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x7b60
  Size        : 0x39b
  MaxSize     : 0x3a0
  Offset      : 0x7b60
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi20custom_2term_sub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r9d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r9d, %r9d
    00000043: 	jle	.Ltmp574 # Offset: 67
    00000049: 	leal	-0x1(%r15), %r12d
    0000004d: 	leal	-0x2(%r15), %eax
    00000051: 	movl	(%rbx), %r10d
    00000054: 	xorl	%r14d, %r14d
    00000057: 	movl	%eax, 0xc(%rsp)
    0000005b: 	movl	%r12d, %eax
    0000005e: 	leaq	DATAat0x381c8(%rip), %r13
    00000065: 	shrl	$0x2, %eax
    00000068: 	subl	$0x1, %eax
    0000006b: 	shlq	$0x4, %rax
    0000006f: 	leaq	0x10(%rbx,%rax), %rbp
    00000074: 	movl	%r12d, %eax
    00000077: 	andl	$-0x4, %eax
    0000007a: 	movl	%eax, 0x10(%rsp)
    0000007e: 	addl	$0x1, %eax
    00000081: 	movl	%eax, 0x14(%rsp)
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp581:
    00000088: 	movl	%r10d, %edx
    0000008b: 	subl	0x4(%rbx), %edx
    0000008e: 	imull	%edx, %edx
    00000091: 	cmpl	$0x1, %r15d
    00000095: 	jle	.Ltmp575 # Offset: 149
    0000009b: 	cmpl	$0x2, 0xc(%rsp)
    000000a0: 	jbe	.Ltmp576 # Offset: 160
    000000a6: 	movq	%rbx, %rax
    000000a9: 	pxor	%xmm2, %xmm2
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp577:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	0x4(%rax), %xmm3
    000000b9: 	addq	$0x10, %rax
    000000bd: 	psubd	%xmm3, %xmm0
    000000c1: 	movdqa	%xmm0, %xmm1
    000000c5: 	pmuludq	%xmm0, %xmm1
    000000c9: 	psrlq	$0x20, %xmm0
    000000ce: 	pmuludq	%xmm0, %xmm0
    000000d2: 	pshufd	$0x8, %xmm1, %xmm1
    000000d7: 	pshufd	$0x8, %xmm0, %xmm0
    000000dc: 	punpckldq	%xmm0, %xmm1
    000000e0: 	paddd	%xmm1, %xmm2
    000000e4: 	cmpq	%rbp, %rax
    000000e7: 	jne	.Ltmp577 # Offset: 231
    000000e9: 	movdqa	%xmm2, %xmm0
    000000ed: 	psrldq	$0x8, %xmm0
    000000f2: 	paddd	%xmm0, %xmm2
    000000f6: 	movdqa	%xmm2, %xmm0
    000000fa: 	psrldq	$0x4, %xmm0
    000000ff: 	paddd	%xmm0, %xmm2
    00000103: 	movd	%xmm2, %eax
    00000107: 	addl	%eax, %edx
    00000109: 	cmpl	%r12d, 0x10(%rsp)
    0000010e: 	je	.Ltmp575 # Offset: 270
    00000114: 	movl	0x14(%rsp), %esi
.Ltmp589:
    00000118: 	movslq	%esi, %rdi
    0000011b: 	leal	0x1(%rsi), %ecx
    0000011e: 	shlq	$0x2, %rdi
    00000122: 	leaq	(%rbx,%rdi), %rax
    00000126: 	cmpl	%r12d, %ecx
    00000129: 	jge	.Ltmp578 # Offset: 297
    0000012f: 	cmpl	%esi, %r15d
    00000132: 	jle	.Ltmp578 # Offset: 306
    00000138: 	movl	(%rax), %ecx
    0000013a: 	movl	-0x4(%rax), %eax
    0000013d: 	movl	0x4(%rbx,%rdi), %r8d
    00000142: 	subl	%ecx, %eax
    00000144: 	imull	%eax, %eax
    00000147: 	subl	%r8d, %ecx
    0000014a: 	imull	%ecx, %ecx
    0000014d: 	addl	%edx, %eax
    0000014f: 	leal	(%rcx,%rax), %edx
    00000152: 	leal	0x3(%rsi), %ecx
    00000155: 	leal	0x2(%rsi), %eax
    00000158: 	cmpl	%ecx, %r12d
    0000015b: 	jle	.Ltmp579 # Offset: 347
    0000015d: 	movl	0x8(%rbx,%rdi), %eax
    00000161: 	movl	0xc(%rbx,%rdi), %ecx
    00000165: 	subl	%eax, %r8d
    00000168: 	subl	%ecx, %eax
    0000016a: 	imull	%r8d, %r8d
    0000016e: 	imull	%eax, %eax
    00000171: 	addl	%edx, %r8d
    00000174: 	leal	(%rax,%r8), %edx
    00000178: 	leal	0x5(%rsi), %r8d
    0000017c: 	leal	0x4(%rsi), %eax
    0000017f: 	cmpl	%r8d, %r12d
    00000182: 	jle	.Ltmp579 # Offset: 386
    00000184: 	movl	0x10(%rbx,%rdi), %eax
    00000188: 	subl	%eax, %ecx
    0000018a: 	subl	0x14(%rbx,%rdi), %eax
    0000018e: 	imull	%ecx, %ecx
    00000191: 	imull	%eax, %eax
    00000194: 	addl	%edx, %ecx
    00000196: 	leal	(%rax,%rcx), %edx
    00000199: 	leal	0x6(%rsi), %eax
.Ltmp579:
    0000019c: 	movslq	%eax, %rcx
    0000019f: 	leaq	(,%rcx,4), %rsi
    000001a7: 	movl	(%rbx,%rcx,4), %ecx
    000001aa: 	movl	-0x4(%rbx,%rsi), %edi
    000001ae: 	subl	%ecx, %edi
    000001b0: 	imull	%edi, %edi
    000001b3: 	addl	%edi, %edx
    000001b5: 	leal	0x1(%rax), %edi
    000001b8: 	cmpl	%edi, %r15d
    000001bb: 	jle	.Ltmp575 # Offset: 443
    000001bd: 	subl	0x4(%rbx,%rsi), %ecx
    000001c1: 	addl	$0x2, %eax
    000001c4: 	imull	%ecx, %ecx
    000001c7: 	addl	%ecx, %edx
    000001c9: 	cmpl	%eax, %r15d
    000001cc: 	jle	.Ltmp575 # Offset: 460
    000001ce: 	movl	0x4(%rbx,%rsi), %eax
    000001d2: 	subl	0x8(%rbx,%rsi), %eax
    000001d6: 	imull	%eax, %eax
    000001d9: 	addl	%eax, %edx
.Ltmp575:
    000001db: 	testl	%edx, %edx
    000001dd: 	je	.Ltmp580 # Offset: 477
    000001df: 	movl	current_test(%rip), %edx
    000001e5: 	movq	%r13, %rsi
    000001e8: 	movl	$0x1, %edi
    000001ed: 	xorl	%eax, %eax
    000001ef: 	addl	$0x1, %r14d
    000001f3: 	callq	__printf_chk@PLT # Offset: 499
    000001f8: 	movl	iterations(%rip), %r9d
    000001ff: 	cmpl	%r9d, %r14d
    00000202: 	jge	.Ltmp574 # Offset: 514
    00000204: 	movl	(%rbx), %r10d
    00000207: 	jmp	.Ltmp581 # Offset: 519
    0000020c: 	nopl	(%rax) # Size: 4
.Ltmp580:
    00000210: 	addl	$0x1, %r14d
    00000214: 	cmpl	%r9d, %r14d
    00000217: 	jl	.Ltmp581 # Offset: 535
.Ltmp574:
    0000021d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000022b: 	subq	$0x20, %rax
    0000022f: 	cmpq	%rax, %rbx
    00000232: 	je	.Ltmp582 # Offset: 562
    00000238: 	movq	0x18(%rsp), %rax
    0000023d: 	leaq	0x10(%rbx), %rdi
    00000241: 	movq	%rdi, (%rbx)
    00000244: 	movq	(%rax), %rbp
    00000247: 	movq	0x8(%rax), %r12
    0000024b: 	movq	%rbp, %rax
    0000024e: 	addq	%r12, %rax
    00000251: 	je	.Ltmp583 # Offset: 593
    00000253: 	testq	%rbp, %rbp
    00000256: 	je	.Ltmp584 # Offset: 598
.Ltmp583:
    0000025c: 	movq	%r12, 0x20(%rsp)
    00000261: 	cmpq	$0xf, %r12
    00000265: 	ja	.Ltmp585 # Offset: 613
    0000026b: 	cmpq	$0x1, %r12
    0000026f: 	jne	.Ltmp586 # Offset: 623
    00000275: 	movzbl	(%rbp), %eax
    00000279: 	movb	%al, 0x10(%rbx)
.Ltmp590:
    0000027c: 	movq	%r12, 0x8(%rbx)
    00000280: 	movb	$0x0, (%rdi,%r12)
    00000285: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000028c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000293: 	addq	$0x20, %rax
    00000297: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002a5: 	je	.Ltmp587 # Offset: 677
.Ltmp591:
    000002ab: 	movq	-0x20(%rax), %rbp
    000002af: 	callq	clock@PLT # Offset: 687
    000002b4: 	movq	%rax, end_time(%rip)
    000002bb: 	movq	0x28(%rsp), %rdx
    000002c0: 	subq	%fs:0x28, %rdx
    000002c9: 	jne	.Ltmp588 # Offset: 713
    000002cf: 	subq	start_time(%rip), %rax
    000002d6: 	pxor	%xmm0, %xmm0
    000002da: 	movq	%rbp, %rdi
    000002dd: 	cvtsi2sd	%rax, %xmm0
    000002e2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002ea: 	addq	$0x38, %rsp
    000002ee: 	popq	%rbx
    000002ef: 	popq	%rbp
    000002f0: 	popq	%r12
    000002f2: 	popq	%r13
    000002f4: 	popq	%r14
    000002f6: 	popq	%r15
    000002f8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 760
.Ltmp576:
    000002fd: 	movl	$0x1, %esi
    00000302: 	jmp	.Ltmp589 # Offset: 770
.Ltmp578:
    00000307: 	movl	%esi, %eax
    00000309: 	jmp	.Ltmp579 # Offset: 777
.Ltmp585:
    0000030e: 	movq	%rbx, %rdi
    00000311: 	leaq	0x20(%rsp), %rsi
    00000316: 	xorl	%edx, %edx
    00000318: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 792
    0000031d: 	movq	%rax, (%rbx)
    00000320: 	movq	%rax, %rdi
    00000323: 	movq	0x20(%rsp), %rax
    00000328: 	movq	%rax, 0x10(%rbx)
.Ltmp592:
    0000032c: 	movq	%r12, %rdx
    0000032f: 	movq	%rbp, %rsi
    00000332: 	callq	memcpy@PLT # Offset: 818
    00000337: 	movq	0x20(%rsp), %r12
    0000033c: 	movq	(%rbx), %rdi
    0000033f: 	jmp	.Ltmp590 # Offset: 831
.Ltmp582:
    00000344: 	movq	0x18(%rsp), %rsi
    00000349: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000350: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 848
    00000355: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036a: 	jne	.Ltmp591 # Offset: 874
.Ltmp587:
    00000370: 	movq	-0x8(%rdx), %rax
    00000374: 	addq	$0x200, %rax
    0000037a: 	jmp	.Ltmp591 # Offset: 890
.Ltmp586:
    0000037f: 	testq	%r12, %r12
    00000382: 	je	.Ltmp590 # Offset: 898
    00000388: 	jmp	.Ltmp592 # Offset: 904
.Ltmp588:
    0000038a: 	callq	__stack_chk_fail@PLT # Offset: 906
.Ltmp584:
    0000038f: 	leaq	DATAat0x38110(%rip), %rdi
    00000396: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 918
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi20custom_2term_sub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi20custom_2term_add_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 72
  State       : disassembled
  Address     : 0x7f00
  Size        : 0x3d3
  MaxSize     : 0x3e0
  Offset      : 0x7f00
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi20custom_2term_add_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r8d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r8d, %r8d
    00000043: 	jle	.Ltmp593 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r10d
    00000055: 	movl	(%rbx), %r9d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	movsd	init_value(%rip), %xmm3
    00000067: 	xorl	%r13d, %r13d
    0000006a: 	shrl	$0x2, %eax
    0000006d: 	leaq	DATAat0x381c8(%rip), %r12
    00000074: 	subl	$0x1, %eax
    00000077: 	shlq	$0x4, %rax
    0000007b: 	leaq	0x10(%rbx,%rax), %rbp
    00000080: 	movl	%r15d, %eax
    00000083: 	andl	$-0x4, %eax
    00000086: 	movl	%eax, 0x10(%rsp)
    0000008a: 	addl	$0x1, %eax
    0000008d: 	movl	%eax, 0x14(%rsp)
    00000091: 	nopl	(%rax) # Size: 7
.Ltmp600:
    00000098: 	leal	(%r10,%r9), %edx
    0000009c: 	imull	%edx, %edx
    0000009f: 	cmpl	$0x1, %r14d
    000000a3: 	jle	.Ltmp594 # Offset: 163
    000000a9: 	cmpl	$0x2, 0xc(%rsp)
    000000ae: 	jbe	.Ltmp595 # Offset: 174
    000000b4: 	movq	%rbx, %rax
    000000b7: 	pxor	%xmm2, %xmm2
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp596:
    000000c0: 	movdqu	(%rax), %xmm0
    000000c4: 	movdqu	0x4(%rax), %xmm4
    000000c9: 	addq	$0x10, %rax
    000000cd: 	paddd	%xmm4, %xmm0
    000000d1: 	movdqa	%xmm0, %xmm1
    000000d5: 	pmuludq	%xmm0, %xmm1
    000000d9: 	psrlq	$0x20, %xmm0
    000000de: 	pmuludq	%xmm0, %xmm0
    000000e2: 	pshufd	$0x8, %xmm1, %xmm1
    000000e7: 	pshufd	$0x8, %xmm0, %xmm0
    000000ec: 	punpckldq	%xmm0, %xmm1
    000000f0: 	paddd	%xmm1, %xmm2
    000000f4: 	cmpq	%rbp, %rax
    000000f7: 	jne	.Ltmp596 # Offset: 247
    000000f9: 	movdqa	%xmm2, %xmm0
    000000fd: 	psrldq	$0x8, %xmm0
    00000102: 	paddd	%xmm0, %xmm2
    00000106: 	movdqa	%xmm2, %xmm0
    0000010a: 	psrldq	$0x4, %xmm0
    0000010f: 	paddd	%xmm0, %xmm2
    00000113: 	movd	%xmm2, %eax
    00000117: 	addl	%eax, %edx
    00000119: 	cmpl	%r15d, 0x10(%rsp)
    0000011e: 	je	.Ltmp594 # Offset: 286
    00000124: 	movl	0x14(%rsp), %ecx
.Ltmp608:
    00000128: 	movslq	%ecx, %rsi
    0000012b: 	leal	0x1(%rcx), %eax
    0000012e: 	shlq	$0x2, %rsi
    00000132: 	leaq	(%rbx,%rsi), %rdi
    00000136: 	cmpl	%r15d, %eax
    00000139: 	jge	.Ltmp597 # Offset: 313
    0000013f: 	cmpl	%ecx, %r14d
    00000142: 	jle	.Ltmp597 # Offset: 322
    00000148: 	movl	(%rdi), %eax
    0000014a: 	movl	-0x4(%rdi), %r11d
    0000014e: 	addl	%eax, %r11d
    00000151: 	movl	%r11d, %edi
    00000154: 	imull	%r11d, %edi
    00000158: 	leal	0x3(%rcx), %r11d
    0000015c: 	addl	%edi, %edx
    0000015e: 	movl	0x4(%rbx,%rsi), %edi
    00000162: 	addl	%edi, %eax
    00000164: 	imull	%eax, %eax
    00000167: 	addl	%eax, %edx
    00000169: 	leal	0x2(%rcx), %eax
    0000016c: 	cmpl	%r11d, %r15d
    0000016f: 	jle	.Ltmp598 # Offset: 367
    00000171: 	movl	0xc(%rbx,%rsi), %r11d
    00000176: 	movl	0x8(%rbx,%rsi), %eax
    0000017a: 	addl	0x8(%rbx,%rsi), %edi
    0000017e: 	imull	%edi, %edi
    00000181: 	addl	%r11d, %eax
    00000184: 	imull	%eax, %eax
    00000187: 	addl	%edx, %edi
    00000189: 	leal	(%rax,%rdi), %edx
    0000018c: 	leal	0x5(%rcx), %edi
    0000018f: 	leal	0x4(%rcx), %eax
    00000192: 	cmpl	%edi, %r15d
    00000195: 	jle	.Ltmp598 # Offset: 405
    00000197: 	movl	0x10(%rbx,%rsi), %eax
    0000019b: 	addl	%eax, %r11d
    0000019e: 	addl	0x14(%rbx,%rsi), %eax
    000001a2: 	imull	%r11d, %r11d
    000001a6: 	imull	%eax, %eax
    000001a9: 	addl	%edx, %r11d
    000001ac: 	leal	(%rax,%r11), %edx
    000001b0: 	leal	0x6(%rcx), %eax
.Ltmp598:
    000001b3: 	movslq	%eax, %rsi
    000001b6: 	movl	(%rbx,%rsi,4), %ecx
    000001b9: 	movl	-0x4(%rbx,%rsi,4), %r11d
    000001be: 	leaq	(,%rsi,4), %rdi
    000001c6: 	addl	%ecx, %r11d
    000001c9: 	movl	%r11d, %esi
    000001cc: 	imull	%r11d, %esi
    000001d0: 	addl	%esi, %edx
    000001d2: 	leal	0x1(%rax), %esi
    000001d5: 	cmpl	%esi, %r14d
    000001d8: 	jle	.Ltmp594 # Offset: 472
    000001da: 	movl	0x4(%rbx,%rdi), %esi
    000001de: 	addl	$0x2, %eax
    000001e1: 	addl	%esi, %ecx
    000001e3: 	imull	%ecx, %ecx
    000001e6: 	addl	%ecx, %edx
    000001e8: 	cmpl	%eax, %r14d
    000001eb: 	jle	.Ltmp594 # Offset: 491
    000001ed: 	addl	0x8(%rbx,%rdi), %esi
    000001f1: 	imull	%esi, %esi
    000001f4: 	addl	%esi, %edx
.Ltmp594:
    000001f6: 	cvttsd2si	%xmm3, %eax
    000001fa: 	addl	%eax, %eax
    000001fc: 	imull	%eax, %eax
    000001ff: 	imull	$0x1f40, %eax, %eax
    00000205: 	cmpl	%edx, %eax
    00000207: 	je	.Ltmp599 # Offset: 519
    00000209: 	movl	current_test(%rip), %edx
    0000020f: 	movq	%r12, %rsi
    00000212: 	movl	$0x1, %edi
    00000217: 	xorl	%eax, %eax
    00000219: 	addl	$0x1, %r13d
    0000021d: 	callq	__printf_chk@PLT # Offset: 541
    00000222: 	movl	iterations(%rip), %r8d
    00000229: 	cmpl	%r8d, %r13d
    0000022c: 	jge	.Ltmp593 # Offset: 556
    0000022e: 	movl	0x4(%rbx), %r10d
    00000232: 	movl	(%rbx), %r9d
    00000235: 	movsd	init_value(%rip), %xmm3
    0000023d: 	jmp	.Ltmp600 # Offset: 573
    00000242: 	nopw	(%rax,%rax) # Size: 6
.Ltmp599:
    00000248: 	addl	$0x1, %r13d
    0000024c: 	cmpl	%r8d, %r13d
    0000024f: 	jl	.Ltmp600 # Offset: 591
.Ltmp593:
    00000255: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000263: 	subq	$0x20, %rax
    00000267: 	cmpq	%rax, %rbx
    0000026a: 	je	.Ltmp601 # Offset: 618
    00000270: 	movq	0x18(%rsp), %rax
    00000275: 	leaq	0x10(%rbx), %rdi
    00000279: 	movq	%rdi, (%rbx)
    0000027c: 	movq	(%rax), %rbp
    0000027f: 	movq	0x8(%rax), %r12
    00000283: 	movq	%rbp, %rax
    00000286: 	addq	%r12, %rax
    00000289: 	je	.Ltmp602 # Offset: 649
    0000028b: 	testq	%rbp, %rbp
    0000028e: 	je	.Ltmp603 # Offset: 654
.Ltmp602:
    00000294: 	movq	%r12, 0x20(%rsp)
    00000299: 	cmpq	$0xf, %r12
    0000029d: 	ja	.Ltmp604 # Offset: 669
    000002a3: 	cmpq	$0x1, %r12
    000002a7: 	jne	.Ltmp605 # Offset: 679
    000002ad: 	movzbl	(%rbp), %eax
    000002b1: 	movb	%al, 0x10(%rbx)
.Ltmp609:
    000002b4: 	movq	%r12, 0x8(%rbx)
    000002b8: 	movb	$0x0, (%rdi,%r12)
    000002bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002cb: 	addq	$0x20, %rax
    000002cf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002dd: 	je	.Ltmp606 # Offset: 733
.Ltmp610:
    000002e3: 	movq	-0x20(%rax), %rbp
    000002e7: 	callq	clock@PLT # Offset: 743
    000002ec: 	movq	%rax, end_time(%rip)
    000002f3: 	movq	0x28(%rsp), %rdx
    000002f8: 	subq	%fs:0x28, %rdx
    00000301: 	jne	.Ltmp607 # Offset: 769
    00000307: 	subq	start_time(%rip), %rax
    0000030e: 	pxor	%xmm0, %xmm0
    00000312: 	movq	%rbp, %rdi
    00000315: 	cvtsi2sd	%rax, %xmm0
    0000031a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000322: 	addq	$0x38, %rsp
    00000326: 	popq	%rbx
    00000327: 	popq	%rbp
    00000328: 	popq	%r12
    0000032a: 	popq	%r13
    0000032c: 	popq	%r14
    0000032e: 	popq	%r15
    00000330: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 816
.Ltmp595:
    00000335: 	movl	$0x1, %ecx
    0000033a: 	jmp	.Ltmp608 # Offset: 826
.Ltmp597:
    0000033f: 	movl	%ecx, %eax
    00000341: 	jmp	.Ltmp598 # Offset: 833
.Ltmp604:
    00000346: 	movq	%rbx, %rdi
    00000349: 	leaq	0x20(%rsp), %rsi
    0000034e: 	xorl	%edx, %edx
    00000350: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 848
    00000355: 	movq	%rax, (%rbx)
    00000358: 	movq	%rax, %rdi
    0000035b: 	movq	0x20(%rsp), %rax
    00000360: 	movq	%rax, 0x10(%rbx)
.Ltmp611:
    00000364: 	movq	%r12, %rdx
    00000367: 	movq	%rbp, %rsi
    0000036a: 	callq	memcpy@PLT # Offset: 874
    0000036f: 	movq	0x20(%rsp), %r12
    00000374: 	movq	(%rbx), %rdi
    00000377: 	jmp	.Ltmp609 # Offset: 887
.Ltmp601:
    0000037c: 	movq	0x18(%rsp), %rsi
    00000381: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000388: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 904
    0000038d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000394: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000039b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a2: 	jne	.Ltmp610 # Offset: 930
.Ltmp606:
    000003a8: 	movq	-0x8(%rdx), %rax
    000003ac: 	addq	$0x200, %rax
    000003b2: 	jmp	.Ltmp610 # Offset: 946
.Ltmp605:
    000003b7: 	testq	%r12, %r12
    000003ba: 	je	.Ltmp609 # Offset: 954
    000003c0: 	jmp	.Ltmp611 # Offset: 960
.Ltmp607:
    000003c2: 	callq	__stack_chk_fail@PLT # Offset: 962
.Ltmp603:
    000003c7: 	leaq	DATAat0x38110(%rip), %rdi
    000003ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 974
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi20custom_2term_add_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl20custom_2term_add_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0x82e0
  Size        : 0x2b2
  MaxSize     : 0x2c0
  Offset      : 0x82e0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl20custom_2term_add_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %edi
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	testl	%edi, %edi
    0000003f: 	jle	.Ltmp612 # Offset: 63
    00000045: 	leal	-0x4(%r14), %eax
    00000049: 	movq	(%r13), %rsi
    0000004d: 	movq	0x8(%r13), %r8
    00000051: 	xorl	%r15d, %r15d
    00000054: 	shrl	%eax
    00000056: 	movsd	init_value(%rip), %xmm0
    0000005e: 	leaq	DATAat0x381c8(%rip), %rbp
    00000065: 	leaq	0x5(%rax,%rax), %rbx
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp618:
    00000070: 	leaq	(%rsi,%r8), %rcx
    00000074: 	movq	%rsi, %r10
    00000077: 	imulq	%rcx, %rcx
    0000007b: 	cmpl	$0x1, %r14d
    0000007f: 	jle	.Ltmp613 # Offset: 127
    00000081: 	cmpl	$0x3, %r14d
    00000085: 	jle	.Ltmp614 # Offset: 133
    0000008b: 	movl	$0x3, %r9d
.Ltmp615:
    00000091: 	movq	-0x10(%r13,%r9,8), %rax
    00000096: 	addq	%r10, %rax
    00000099: 	movq	-0x8(%r13,%r9,8), %r10
    0000009e: 	imulq	%rax, %rax
    000000a2: 	leaq	(%rax,%rcx), %rdx
    000000a6: 	movq	-0x10(%r13,%r9,8), %rax
    000000ab: 	addq	%r10, %rax
    000000ae: 	imulq	%rax, %rax
    000000b2: 	leaq	(%rax,%rdx), %rcx
    000000b6: 	movslq	%r9d, %rdx
    000000b9: 	addq	$0x2, %r9
    000000bd: 	cmpq	%r9, %rbx
    000000c0: 	jne	.Ltmp615 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp616:
    000000c8: 	movq	(%r13,%rdx,8), %rax
    000000cd: 	addq	-0x8(%r13,%rdx,8), %rax
    000000d2: 	addq	$0x1, %rdx
    000000d6: 	imulq	%rax, %rax
    000000da: 	addq	%rax, %rcx
    000000dd: 	cmpl	%edx, %r14d
    000000e0: 	jg	.Ltmp616 # Offset: 224
.Ltmp613:
    000000e2: 	cvttsd2si	%xmm0, %rax
    000000e7: 	addq	%rax, %rax
    000000ea: 	imulq	%rax, %rax
    000000ee: 	imulq	$0x1f40, %rax, %rax
    000000f5: 	cmpq	%rcx, %rax
    000000f8: 	je	.Ltmp617 # Offset: 248
    000000fa: 	movl	current_test(%rip), %edx
    00000100: 	movl	$0x1, %edi
    00000105: 	movq	%rbp, %rsi
    00000108: 	xorl	%eax, %eax
    0000010a: 	addl	$0x1, %r15d
    0000010e: 	callq	__printf_chk@PLT # Offset: 270
    00000113: 	movl	iterations(%rip), %edi
    00000119: 	cmpl	%r15d, %edi
    0000011c: 	jle	.Ltmp612 # Offset: 284
    0000011e: 	movq	(%r13), %rsi
    00000122: 	movq	0x8(%r13), %r8
    00000126: 	movsd	init_value(%rip), %xmm0
    0000012e: 	jmp	.Ltmp618 # Offset: 302
    00000133: 	nopl	(%rax,%rax) # Size: 5
.Ltmp617:
    00000138: 	addl	$0x1, %r15d
    0000013c: 	cmpl	%edi, %r15d
    0000013f: 	jl	.Ltmp618 # Offset: 319
.Ltmp612:
    00000145: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000014c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000153: 	subq	$0x20, %rax
    00000157: 	cmpq	%rax, %rbx
    0000015a: 	je	.Ltmp619 # Offset: 346
    00000160: 	leaq	0x10(%rbx), %rdi
    00000164: 	movq	%rdi, (%rbx)
    00000167: 	movq	(%r12), %rbp
    0000016b: 	movq	0x8(%r12), %r12
    00000170: 	movq	%rbp, %rax
    00000173: 	addq	%r12, %rax
    00000176: 	je	.Ltmp620 # Offset: 374
    00000178: 	testq	%rbp, %rbp
    0000017b: 	je	.Ltmp621 # Offset: 379
.Ltmp620:
    00000181: 	movq	%r12, (%rsp)
    00000185: 	cmpq	$0xf, %r12
    00000189: 	ja	.Ltmp622 # Offset: 393
    0000018f: 	cmpq	$0x1, %r12
    00000193: 	jne	.Ltmp623 # Offset: 403
    00000199: 	movzbl	(%rbp), %eax
    0000019d: 	movb	%al, 0x10(%rbx)
.Ltmp626:
    000001a0: 	movq	%r12, 0x8(%rbx)
    000001a4: 	movb	$0x0, (%rdi,%r12)
    000001a9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001b7: 	addq	$0x20, %rax
    000001bb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001c9: 	je	.Ltmp624 # Offset: 457
.Ltmp627:
    000001cf: 	movq	-0x20(%rax), %rbp
    000001d3: 	callq	clock@PLT # Offset: 467
    000001d8: 	movq	%rax, end_time(%rip)
    000001df: 	movq	0x8(%rsp), %rdx
    000001e4: 	subq	%fs:0x28, %rdx
    000001ed: 	jne	.Ltmp625 # Offset: 493
    000001f3: 	subq	start_time(%rip), %rax
    000001fa: 	pxor	%xmm0, %xmm0
    000001fe: 	movq	%rbp, %rdi
    00000201: 	cvtsi2sd	%rax, %xmm0
    00000206: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000020e: 	addq	$0x18, %rsp
    00000212: 	popq	%rbx
    00000213: 	popq	%rbp
    00000214: 	popq	%r12
    00000216: 	popq	%r13
    00000218: 	popq	%r14
    0000021a: 	popq	%r15
    0000021c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 540
.Ltmp614:
    00000221: 	movl	$0x1, %edx
    00000226: 	jmp	.Ltmp616 # Offset: 550
.Ltmp622:
    0000022b: 	movq	%rbx, %rdi
    0000022e: 	movq	%rsp, %rsi
    00000231: 	xorl	%edx, %edx
    00000233: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 563
    00000238: 	movq	%rax, (%rbx)
    0000023b: 	movq	%rax, %rdi
    0000023e: 	movq	(%rsp), %rax
    00000242: 	movq	%rax, 0x10(%rbx)
.Ltmp628:
    00000246: 	movq	%r12, %rdx
    00000249: 	movq	%rbp, %rsi
    0000024c: 	callq	memcpy@PLT # Offset: 588
    00000251: 	movq	(%rsp), %r12
    00000255: 	movq	(%rbx), %rdi
    00000258: 	jmp	.Ltmp626 # Offset: 600
.Ltmp619:
    0000025d: 	movq	%r12, %rsi
    00000260: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000267: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 615
    0000026c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000273: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000027a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000281: 	jne	.Ltmp627 # Offset: 641
.Ltmp624:
    00000287: 	movq	-0x8(%rdx), %rax
    0000028b: 	addq	$0x200, %rax
    00000291: 	jmp	.Ltmp627 # Offset: 657
.Ltmp623:
    00000296: 	testq	%r12, %r12
    00000299: 	je	.Ltmp626 # Offset: 665
    0000029f: 	jmp	.Ltmp628 # Offset: 671
.Ltmp625:
    000002a1: 	callq	__stack_chk_fail@PLT # Offset: 673
.Ltmp621:
    000002a6: 	leaq	DATAat0x38110(%rip), %rdi
    000002ad: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 685
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl20custom_2term_add_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 74
  State       : disassembled
  Address     : 0x85a0
  Size        : 0x302
  MaxSize     : 0x310
  Offset      : 0x85a0
  Section     : .text
  Orc Section : .local.text._Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	pushq	%r15
    00000002: 	movl	%ecx, %r15d
    00000005: 	pushq	%r14
    00000007: 	movl	%edx, %r14d
    0000000a: 	pushq	%r13
    0000000c: 	pushq	%r12
    0000000e: 	movl	%esi, %r12d
    00000011: 	pushq	%rbp
    00000012: 	movl	%r8d, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	subq	$0x58, %rsp
    0000001d: 	movq	%r9, 0x38(%rsp)
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x48(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movl	iterations(%rip), %esi
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	testl	%esi, %esi
    00000046: 	jle	.Ltmp629 # Offset: 70
    0000004c: 	addl	%r15d, %ebp
    0000004f: 	movl	%r12d, %eax
    00000052: 	movdqa	DATAat0x38620(%rip), %xmm3
    0000005a: 	movsd	init_value(%rip), %xmm7
    00000062: 	leal	(%rbp,%r14), %r15d
    00000067: 	leaq	0x1f40(%rbx), %r13
    0000006e: 	xorl	%r14d, %r14d
    00000071: 	imull	%r15d, %eax
    00000075: 	movd	%r15d, %xmm6
    0000007a: 	leaq	DATAat0x381c8(%rip), %rbp
    00000081: 	punpcklbw	%xmm6, %xmm6
    00000085: 	punpcklwd	%xmm6, %xmm6
    00000089: 	movl	%eax, %r12d
    0000008c: 	pshufd	$0x0, %xmm6, %xmm6
    00000091: 	movd	%r12d, %xmm4
    00000096: 	movdqa	%xmm6, %xmm5
    0000009a: 	punpcklbw	%xmm4, %xmm4
    0000009e: 	punpcklbw	%xmm6, %xmm5
    000000a2: 	punpcklwd	%xmm4, %xmm4
    000000a6: 	pshufd	$0x0, %xmm4, %xmm4
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp632:
    000000b0: 	movdqa	%xmm6, %xmm8
    000000b5: 	movq	%rbx, %rdx
    000000b8: 	pxor	%xmm2, %xmm2
    000000bc: 	punpckhbw	%xmm6, %xmm8
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp630:
    000000c8: 	movdqu	(%rdx), %xmm0
    000000cc: 	paddb	%xmm4, %xmm2
    000000d0: 	addq	$0x10, %rdx
    000000d4: 	movdqa	%xmm0, %xmm1
    000000d8: 	punpcklbw	%xmm0, %xmm1
    000000dc: 	punpckhbw	%xmm0, %xmm0
    000000e0: 	pmullw	%xmm5, %xmm1
    000000e4: 	pmullw	%xmm8, %xmm0
    000000e9: 	pand	%xmm3, %xmm1
    000000ed: 	pand	%xmm3, %xmm0
    000000f1: 	packuswb	%xmm0, %xmm1
    000000f5: 	paddb	%xmm1, %xmm2
    000000f9: 	cmpq	%rdx, %r13
    000000fc: 	jne	.Ltmp630 # Offset: 252
    000000fe: 	cvttsd2si	%xmm7, %ecx
    00000102: 	movdqa	%xmm2, %xmm0
    00000106: 	psrldq	$0x8, %xmm0
    0000010b: 	paddb	%xmm0, %xmm2
    0000010f: 	pxor	%xmm0, %xmm0
    00000113: 	psadbw	%xmm0, %xmm2
    00000117: 	movl	%ecx, %eax
    00000119: 	movd	%xmm2, %edx
    0000011d: 	imull	%r15d, %eax
    00000121: 	addl	%r12d, %eax
    00000124: 	shll	$0x6, %eax
    00000127: 	cmpb	%dl, %al
    00000129: 	je	.Ltmp631 # Offset: 297
    0000012b: 	movl	current_test(%rip), %edx
    00000131: 	movq	%rbp, %rsi
    00000134: 	movl	$0x1, %edi
    00000139: 	xorl	%eax, %eax
    0000013b: 	movaps	%xmm5, 0x20(%rsp)
    00000140: 	addl	$0x1, %r14d
    00000144: 	movaps	%xmm6, 0x10(%rsp)
    00000149: 	movaps	%xmm4, (%rsp)
    0000014d: 	callq	__printf_chk@PLT # Offset: 333
    00000152: 	movl	iterations(%rip), %esi
    00000158: 	cmpl	%r14d, %esi
    0000015b: 	jle	.Ltmp629 # Offset: 347
    0000015d: 	movsd	init_value(%rip), %xmm7
    00000165: 	movdqa	(%rsp), %xmm4
    0000016a: 	movdqa	0x10(%rsp), %xmm6
    00000170: 	movdqa	0x20(%rsp), %xmm5
    00000176: 	movdqa	DATAat0x38620(%rip), %xmm3
    0000017e: 	jmp	.Ltmp632 # Offset: 382
    00000183: 	nopl	(%rax,%rax) # Size: 5
.Ltmp631:
    00000188: 	addl	$0x1, %r14d
    0000018c: 	cmpl	%esi, %r14d
    0000018f: 	jl	.Ltmp632 # Offset: 399
.Ltmp629:
    00000195: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000019c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001a3: 	subq	$0x20, %rax
    000001a7: 	cmpq	%rax, %rbx
    000001aa: 	je	.Ltmp633 # Offset: 426
    000001b0: 	movq	0x38(%rsp), %rax
    000001b5: 	leaq	0x10(%rbx), %rdi
    000001b9: 	movq	%rdi, (%rbx)
    000001bc: 	movq	(%rax), %rbp
    000001bf: 	movq	0x8(%rax), %r12
    000001c3: 	movq	%rbp, %rax
    000001c6: 	addq	%r12, %rax
    000001c9: 	je	.Ltmp634 # Offset: 457
    000001cb: 	testq	%rbp, %rbp
    000001ce: 	je	.Ltmp635 # Offset: 462
.Ltmp634:
    000001d4: 	movq	%r12, 0x40(%rsp)
    000001d9: 	cmpq	$0xf, %r12
    000001dd: 	ja	.Ltmp636 # Offset: 477
    000001e3: 	cmpq	$0x1, %r12
    000001e7: 	jne	.Ltmp637 # Offset: 487
    000001ed: 	movzbl	(%rbp), %eax
    000001f1: 	movb	%al, 0x10(%rbx)
.Ltmp640:
    000001f4: 	movq	%r12, 0x8(%rbx)
    000001f8: 	movb	$0x0, (%rdi,%r12)
    000001fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000204: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000020b: 	addq	$0x20, %rax
    0000020f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000216: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000021d: 	je	.Ltmp638 # Offset: 541
.Ltmp641:
    00000223: 	movq	-0x20(%rax), %rbp
    00000227: 	callq	clock@PLT # Offset: 551
    0000022c: 	movq	%rax, end_time(%rip)
    00000233: 	movq	0x48(%rsp), %rdx
    00000238: 	subq	%fs:0x28, %rdx
    00000241: 	jne	.Ltmp639 # Offset: 577
    00000247: 	subq	start_time(%rip), %rax
    0000024e: 	pxor	%xmm0, %xmm0
    00000252: 	movq	%rbp, %rdi
    00000255: 	cvtsi2sd	%rax, %xmm0
    0000025a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000262: 	addq	$0x58, %rsp
    00000266: 	popq	%rbx
    00000267: 	popq	%rbp
    00000268: 	popq	%r12
    0000026a: 	popq	%r13
    0000026c: 	popq	%r14
    0000026e: 	popq	%r15
    00000270: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 624
.Ltmp636:
    00000275: 	movq	%rbx, %rdi
    00000278: 	leaq	0x40(%rsp), %rsi
    0000027d: 	xorl	%edx, %edx
    0000027f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 639
    00000284: 	movq	%rax, (%rbx)
    00000287: 	movq	%rax, %rdi
    0000028a: 	movq	0x40(%rsp), %rax
    0000028f: 	movq	%rax, 0x10(%rbx)
.Ltmp642:
    00000293: 	movq	%r12, %rdx
    00000296: 	movq	%rbp, %rsi
    00000299: 	callq	memcpy@PLT # Offset: 665
    0000029e: 	movq	0x40(%rsp), %r12
    000002a3: 	movq	(%rbx), %rdi
    000002a6: 	jmp	.Ltmp640 # Offset: 678
.Ltmp633:
    000002ab: 	movq	0x38(%rsp), %rsi
    000002b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 695
    000002bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002c3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002d1: 	jne	.Ltmp641 # Offset: 721
.Ltmp638:
    000002d7: 	movq	-0x8(%rdx), %rax
    000002db: 	addq	$0x200, %rax
    000002e1: 	jmp	.Ltmp641 # Offset: 737
.Ltmp637:
    000002e6: 	testq	%r12, %r12
    000002e9: 	je	.Ltmp640 # Offset: 745
    000002ef: 	jmp	.Ltmp642 # Offset: 751
.Ltmp639:
    000002f1: 	callq	__stack_chk_fail@PLT # Offset: 753
.Ltmp635:
    000002f6: 	leaq	DATAat0x38110(%rip), %rdi
    000002fd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 765
DWARF CFI Instructions:
    <empty>
End of Function "_Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 75
  State       : disassembled
  Address     : 0x88b0
  Size        : 0x2fa
  MaxSize     : 0x300
  Offset      : 0x88b0
  Section     : .text
  Orc Section : .local.text._Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	pushq	%r15
    00000002: 	movl	%edx, %r15d
    00000005: 	pushq	%r14
    00000007: 	movl	%ecx, %r14d
    0000000a: 	pushq	%r13
    0000000c: 	movl	%esi, %r13d
    0000000f: 	pushq	%r12
    00000011: 	pushq	%rbp
    00000012: 	movq	%rdi, %rbp
    00000015: 	pushq	%rbx
    00000016: 	movl	%r8d, %ebx
    00000019: 	subq	$0x58, %rsp
    0000001d: 	movq	%r9, 0x38(%rsp)
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x48(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movl	iterations(%rip), %ecx
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	testl	%ecx, %ecx
    00000046: 	jle	.Ltmp643 # Offset: 70
    0000004c: 	addl	%r15d, %ebx
    0000004f: 	movl	%r13d, %eax
    00000052: 	movdqa	DATAat0x38620(%rip), %xmm3
    0000005a: 	leaq	DATAat0x381c8(%rip), %r12
    00000061: 	cvttsd2si	init_value(%rip), %esi
    00000069: 	leal	(%rbx,%r14), %r15d
    0000006d: 	xorl	%r14d, %r14d
    00000070: 	imull	%r15d, %eax
    00000074: 	movd	%r15d, %xmm6
    00000079: 	leaq	0x1f40(%rbp), %rbx
    00000080: 	punpcklbw	%xmm6, %xmm6
    00000084: 	punpcklwd	%xmm6, %xmm6
    00000088: 	movl	%eax, %r13d
    0000008b: 	pshufd	$0x0, %xmm6, %xmm6
    00000090: 	movd	%r13d, %xmm4
    00000095: 	movdqa	%xmm6, %xmm5
    00000099: 	punpcklbw	%xmm4, %xmm4
    0000009d: 	punpcklbw	%xmm6, %xmm5
    000000a1: 	punpcklwd	%xmm4, %xmm4
    000000a5: 	pshufd	$0x0, %xmm4, %xmm4
    000000aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp646:
    000000b0: 	movdqa	%xmm6, %xmm7
    000000b4: 	movq	%rbp, %rdx
    000000b7: 	pxor	%xmm2, %xmm2
    000000bb: 	punpckhbw	%xmm6, %xmm7
    000000bf: 	nop # Size: 1
.Ltmp644:
    000000c0: 	movdqu	(%rdx), %xmm0
    000000c4: 	addq	$0x10, %rdx
    000000c8: 	movdqa	%xmm0, %xmm1
    000000cc: 	punpcklbw	%xmm0, %xmm1
    000000d0: 	punpckhbw	%xmm0, %xmm0
    000000d4: 	pmullw	%xmm5, %xmm1
    000000d8: 	pmullw	%xmm7, %xmm0
    000000dc: 	pand	%xmm3, %xmm1
    000000e0: 	pand	%xmm3, %xmm0
    000000e4: 	packuswb	%xmm0, %xmm1
    000000e8: 	paddb	%xmm4, %xmm1
    000000ec: 	paddb	%xmm1, %xmm2
    000000f0: 	cmpq	%rdx, %rbx
    000000f3: 	jne	.Ltmp644 # Offset: 243
    000000f5: 	movl	%r15d, %eax
    000000f8: 	movdqa	%xmm2, %xmm0
    000000fc: 	imull	%esi, %eax
    000000ff: 	psrldq	$0x8, %xmm0
    00000104: 	paddb	%xmm0, %xmm2
    00000108: 	pxor	%xmm0, %xmm0
    0000010c: 	psadbw	%xmm0, %xmm2
    00000110: 	addl	%r13d, %eax
    00000113: 	movd	%xmm2, %edx
    00000117: 	shll	$0x6, %eax
    0000011a: 	cmpb	%dl, %al
    0000011c: 	je	.Ltmp645 # Offset: 284
    0000011e: 	movl	current_test(%rip), %edx
    00000124: 	movq	%r12, %rsi
    00000127: 	movl	$0x1, %edi
    0000012c: 	xorl	%eax, %eax
    0000012e: 	movaps	%xmm5, 0x20(%rsp)
    00000133: 	addl	$0x1, %r14d
    00000137: 	movaps	%xmm6, 0x10(%rsp)
    0000013c: 	movaps	%xmm4, (%rsp)
    00000140: 	callq	__printf_chk@PLT # Offset: 320
    00000145: 	movl	iterations(%rip), %ecx
    0000014b: 	cmpl	%ecx, %r14d
    0000014e: 	jge	.Ltmp643 # Offset: 334
    00000150: 	cvttsd2si	init_value(%rip), %esi
    00000158: 	movdqa	(%rsp), %xmm4
    0000015d: 	movdqa	0x10(%rsp), %xmm6
    00000163: 	movdqa	0x20(%rsp), %xmm5
    00000169: 	movdqa	DATAat0x38620(%rip), %xmm3
    00000171: 	jmp	.Ltmp646 # Offset: 369
    00000176: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp645:
    00000180: 	addl	$0x1, %r14d
    00000184: 	cmpl	%ecx, %r14d
    00000187: 	jl	.Ltmp646 # Offset: 391
.Ltmp643:
    0000018d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000194: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000019b: 	subq	$0x20, %rax
    0000019f: 	cmpq	%rax, %rbx
    000001a2: 	je	.Ltmp647 # Offset: 418
    000001a8: 	movq	0x38(%rsp), %rax
    000001ad: 	leaq	0x10(%rbx), %rdi
    000001b1: 	movq	%rdi, (%rbx)
    000001b4: 	movq	(%rax), %rbp
    000001b7: 	movq	0x8(%rax), %r12
    000001bb: 	movq	%rbp, %rax
    000001be: 	addq	%r12, %rax
    000001c1: 	je	.Ltmp648 # Offset: 449
    000001c3: 	testq	%rbp, %rbp
    000001c6: 	je	.Ltmp649 # Offset: 454
.Ltmp648:
    000001cc: 	movq	%r12, 0x40(%rsp)
    000001d1: 	cmpq	$0xf, %r12
    000001d5: 	ja	.Ltmp650 # Offset: 469
    000001db: 	cmpq	$0x1, %r12
    000001df: 	jne	.Ltmp651 # Offset: 479
    000001e5: 	movzbl	(%rbp), %eax
    000001e9: 	movb	%al, 0x10(%rbx)
.Ltmp654:
    000001ec: 	movq	%r12, 0x8(%rbx)
    000001f0: 	movb	$0x0, (%rdi,%r12)
    000001f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000203: 	addq	$0x20, %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000215: 	je	.Ltmp652 # Offset: 533
.Ltmp655:
    0000021b: 	movq	-0x20(%rax), %rbp
    0000021f: 	callq	clock@PLT # Offset: 543
    00000224: 	movq	%rax, end_time(%rip)
    0000022b: 	movq	0x48(%rsp), %rdx
    00000230: 	subq	%fs:0x28, %rdx
    00000239: 	jne	.Ltmp653 # Offset: 569
    0000023f: 	subq	start_time(%rip), %rax
    00000246: 	pxor	%xmm0, %xmm0
    0000024a: 	movq	%rbp, %rdi
    0000024d: 	cvtsi2sd	%rax, %xmm0
    00000252: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000025a: 	addq	$0x58, %rsp
    0000025e: 	popq	%rbx
    0000025f: 	popq	%rbp
    00000260: 	popq	%r12
    00000262: 	popq	%r13
    00000264: 	popq	%r14
    00000266: 	popq	%r15
    00000268: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 616
.Ltmp650:
    0000026d: 	movq	%rbx, %rdi
    00000270: 	leaq	0x40(%rsp), %rsi
    00000275: 	xorl	%edx, %edx
    00000277: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 631
    0000027c: 	movq	%rax, (%rbx)
    0000027f: 	movq	%rax, %rdi
    00000282: 	movq	0x40(%rsp), %rax
    00000287: 	movq	%rax, 0x10(%rbx)
.Ltmp656:
    0000028b: 	movq	%r12, %rdx
    0000028e: 	movq	%rbp, %rsi
    00000291: 	callq	memcpy@PLT # Offset: 657
    00000296: 	movq	0x40(%rsp), %r12
    0000029b: 	movq	(%rbx), %rdi
    0000029e: 	jmp	.Ltmp654 # Offset: 670
.Ltmp647:
    000002a3: 	movq	0x38(%rsp), %rsi
    000002a8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 687
    000002b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002bb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c9: 	jne	.Ltmp655 # Offset: 713
.Ltmp652:
    000002cf: 	movq	-0x8(%rdx), %rax
    000002d3: 	addq	$0x200, %rax
    000002d9: 	jmp	.Ltmp655 # Offset: 729
.Ltmp651:
    000002de: 	testq	%r12, %r12
    000002e1: 	je	.Ltmp654 # Offset: 737
    000002e7: 	jmp	.Ltmp656 # Offset: 743
.Ltmp653:
    000002e9: 	callq	__stack_chk_fail@PLT # Offset: 745
.Ltmp649:
    000002ee: 	leaq	DATAat0x38110(%rip), %rdi
    000002f5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 757
DWARF CFI Instructions:
    <empty>
End of Function "_Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z10test_2termIt23custom_2term_addsub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 76
  State       : disassembled
  Address     : 0x8bb0
  Size        : 0x432
  MaxSize     : 0x440
  Offset      : 0x8bb0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt23custom_2term_addsub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp657 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, (%rsp)
    00000059: 	movl	%r14d, %eax
    0000005c: 	movl	%r14d, %r15d
    0000005f: 	shrl	$0x3, %eax
    00000062: 	andl	$-0x8, %r15d
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%rbx,%rax), %rbp
    00000072: 	leal	0x1(%r15), %eax
    00000076: 	movl	%eax, 0x4(%rsp)
.Ltmp665:
    0000007a: 	movzwl	0x2(%rbx), %r9d
    0000007f: 	movzwl	(%rbx), %r8d
.Ltmp673:
    00000083: 	movl	%r8d, %edx
    00000086: 	leal	(%r9,%r8), %eax
    0000008a: 	subl	%r9d, %edx
    0000008d: 	imull	%eax, %edx
    00000090: 	cmpl	$0x1, %r12d
    00000094: 	jle	.Ltmp658 # Offset: 148
    0000009a: 	cmpl	$0x6, (%rsp)
    0000009e: 	jbe	.Ltmp659 # Offset: 158
    000000a4: 	movq	%rbx, %rax
    000000a7: 	pxor	%xmm2, %xmm2
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp660:
    000000b0: 	movdqu	0x2(%rax), %xmm3
    000000b5: 	movdqu	(%rax), %xmm1
    000000b9: 	addq	$0x10, %rax
    000000bd: 	movdqu	-0x10(%rax), %xmm0
    000000c2: 	paddw	%xmm3, %xmm1
    000000c6: 	psubw	%xmm3, %xmm0
    000000ca: 	pmullw	%xmm1, %xmm0
    000000ce: 	paddw	%xmm0, %xmm2
    000000d2: 	cmpq	%rbp, %rax
    000000d5: 	jne	.Ltmp660 # Offset: 213
    000000d7: 	movdqa	%xmm2, %xmm0
    000000db: 	psrldq	$0x8, %xmm0
    000000e0: 	paddw	%xmm0, %xmm2
    000000e4: 	movdqa	%xmm2, %xmm0
    000000e8: 	psrldq	$0x4, %xmm0
    000000ed: 	paddw	%xmm0, %xmm2
    000000f1: 	movdqa	%xmm2, %xmm0
    000000f5: 	psrldq	$0x2, %xmm0
    000000fa: 	paddw	%xmm0, %xmm2
    000000fe: 	pextrw	$0x0, %xmm2, %eax
    00000103: 	addl	%eax, %edx
    00000105: 	cmpl	%r14d, %r15d
    00000108: 	je	.Ltmp658 # Offset: 264
    0000010e: 	movl	0x4(%rsp), %ecx
    00000112: 	movl	%r15d, %edi
.Ltmp674:
    00000115: 	movl	%r12d, %eax
    00000118: 	subl	%edi, %eax
    0000011a: 	leal	-0x1(%rax), %esi
    0000011d: 	subl	$0x2, %eax
    00000120: 	cmpl	$0x2, %eax
    00000123: 	jbe	.Ltmp661 # Offset: 291
    00000125: 	leal	0x1(%rdi), %eax
    00000128: 	movq	-0x2(%rbx,%rax,2), %xmm2
    0000012e: 	movq	(%rbx,%rax,2), %xmm1
    00000133: 	movdqa	%xmm2, %xmm0
    00000137: 	psubw	%xmm1, %xmm0
    0000013b: 	paddw	%xmm2, %xmm1
    0000013f: 	pmullw	%xmm1, %xmm0
    00000143: 	pextrw	$0x0, %xmm0, %eax
    00000148: 	pextrw	$0x1, %xmm0, %edi
    0000014d: 	addl	%edi, %eax
    0000014f: 	addl	%edx, %eax
    00000151: 	pextrw	$0x2, %xmm0, %edx
    00000156: 	addl	%edx, %eax
    00000158: 	pextrw	$0x3, %xmm0, %edx
    0000015d: 	addl	%eax, %edx
    0000015f: 	movl	%esi, %eax
    00000161: 	andl	$-0x4, %eax
    00000164: 	addl	%eax, %ecx
    00000166: 	cmpl	%eax, %esi
    00000168: 	je	.Ltmp658 # Offset: 360
.Ltmp661:
    0000016e: 	movslq	%ecx, %rsi
    00000171: 	leal	0x1(%rcx), %edi
    00000174: 	addq	%rsi, %rsi
    00000177: 	leaq	(%rbx,%rsi), %rax
    0000017b: 	cmpl	%r14d, %edi
    0000017e: 	jge	.Ltmp662 # Offset: 382
    00000184: 	cmpl	%ecx, %r12d
    00000187: 	jle	.Ltmp662 # Offset: 391
    0000018d: 	movzwl	-0x2(%rax), %r11d
    00000192: 	movzwl	(%rax), %eax
    00000195: 	movl	%r11d, %edi
    00000198: 	addl	%eax, %r11d
    0000019b: 	subl	%eax, %edi
    0000019d: 	imull	%r11d, %edi
    000001a1: 	movzwl	0x2(%rbx,%rsi), %r11d
    000001a7: 	addl	%edx, %edi
    000001a9: 	movl	%eax, %edx
    000001ab: 	addl	%r11d, %eax
    000001ae: 	subl	%r11d, %edx
    000001b1: 	imull	%eax, %edx
    000001b4: 	leal	0x2(%rcx), %eax
    000001b7: 	addl	%edi, %edx
    000001b9: 	leal	0x3(%rcx), %edi
    000001bc: 	cmpl	%edi, %r14d
    000001bf: 	jle	.Ltmp663 # Offset: 447
    000001c1: 	movzwl	0x4(%rbx,%rsi), %eax
    000001c6: 	movl	%r11d, %edi
    000001c9: 	subl	%eax, %edi
    000001cb: 	addl	%eax, %r11d
    000001ce: 	imull	%r11d, %edi
    000001d2: 	movzwl	0x6(%rbx,%rsi), %r11d
    000001d8: 	addl	%edx, %edi
    000001da: 	movl	%eax, %edx
    000001dc: 	addl	%r11d, %eax
    000001df: 	subl	%r11d, %edx
    000001e2: 	imull	%eax, %edx
    000001e5: 	leal	0x4(%rcx), %eax
    000001e8: 	addl	%edi, %edx
    000001ea: 	leal	0x5(%rcx), %edi
    000001ed: 	cmpl	%edi, %r14d
    000001f0: 	jle	.Ltmp663 # Offset: 496
    000001f2: 	movzwl	0x8(%rbx,%rsi), %eax
    000001f7: 	movl	%r11d, %edi
    000001fa: 	movzwl	0xa(%rbx,%rsi), %esi
    000001ff: 	subl	%eax, %edi
    00000201: 	addl	%eax, %r11d
    00000204: 	imull	%r11d, %edi
    00000208: 	addl	%edx, %edi
    0000020a: 	movl	%eax, %edx
    0000020c: 	addl	%esi, %eax
    0000020e: 	subl	%esi, %edx
    00000210: 	imull	%eax, %edx
    00000213: 	leal	0x6(%rcx), %eax
    00000216: 	addl	%edi, %edx
.Ltmp663:
    00000218: 	movslq	%eax, %rcx
    0000021b: 	leaq	(%rcx,%rcx), %rdi
    0000021f: 	movzwl	(%rbx,%rcx,2), %ecx
    00000223: 	movzwl	-0x2(%rbx,%rdi), %esi
    00000228: 	movl	%esi, %r11d
    0000022b: 	addl	%ecx, %esi
    0000022d: 	subl	%ecx, %r11d
    00000230: 	imull	%esi, %r11d
    00000234: 	leal	0x1(%rax), %esi
    00000237: 	addl	%r11d, %edx
    0000023a: 	cmpl	%esi, %r12d
    0000023d: 	jle	.Ltmp658 # Offset: 573
    0000023f: 	movzwl	0x2(%rbx,%rdi), %esi
    00000244: 	movl	%ecx, %r11d
    00000247: 	addl	$0x2, %eax
    0000024a: 	subl	%esi, %r11d
    0000024d: 	addl	%esi, %ecx
    0000024f: 	imull	%ecx, %r11d
    00000253: 	addl	%r11d, %edx
    00000256: 	cmpl	%eax, %r12d
    00000259: 	jle	.Ltmp658 # Offset: 601
    0000025b: 	movzwl	0x4(%rbx,%rdi), %ecx
    00000260: 	leal	(%rsi,%rcx), %eax
    00000263: 	subl	%ecx, %esi
    00000265: 	imull	%esi, %eax
    00000268: 	addl	%eax, %edx
.Ltmp658:
    0000026a: 	testw	%dx, %dx
    0000026d: 	je	.Ltmp664 # Offset: 621
    00000273: 	movl	current_test(%rip), %edx
    00000279: 	leaq	DATAat0x381c8(%rip), %rsi
    00000280: 	movl	$0x1, %edi
    00000285: 	xorl	%eax, %eax
    00000287: 	addl	$0x1, %r13d
    0000028b: 	callq	__printf_chk@PLT # Offset: 651
    00000290: 	movl	iterations(%rip), %r10d
    00000297: 	cmpl	%r13d, %r10d
    0000029a: 	jg	.Ltmp665 # Offset: 666
.Ltmp657:
    000002a0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002ae: 	subq	$0x20, %rax
    000002b2: 	cmpq	%rax, %rbx
    000002b5: 	je	.Ltmp666 # Offset: 693
    000002bb: 	movq	0x8(%rsp), %rax
    000002c0: 	leaq	0x10(%rbx), %rdi
    000002c4: 	movq	%rdi, (%rbx)
    000002c7: 	movq	(%rax), %rbp
    000002ca: 	movq	0x8(%rax), %r12
    000002ce: 	movq	%rbp, %rax
    000002d1: 	addq	%r12, %rax
    000002d4: 	je	.Ltmp667 # Offset: 724
    000002d6: 	testq	%rbp, %rbp
    000002d9: 	je	.Ltmp668 # Offset: 729
.Ltmp667:
    000002df: 	movq	%r12, 0x10(%rsp)
    000002e4: 	cmpq	$0xf, %r12
    000002e8: 	ja	.Ltmp669 # Offset: 744
    000002ee: 	cmpq	$0x1, %r12
    000002f2: 	jne	.Ltmp670 # Offset: 754
    000002f8: 	movzbl	(%rbp), %eax
    000002fc: 	movb	%al, 0x10(%rbx)
.Ltmp675:
    000002ff: 	movq	%r12, 0x8(%rbx)
    00000303: 	movb	$0x0, (%rdi,%r12)
    00000308: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000030f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000316: 	addq	$0x20, %rax
    0000031a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000321: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000328: 	je	.Ltmp671 # Offset: 808
.Ltmp676:
    0000032e: 	movq	-0x20(%rax), %rbp
    00000332: 	callq	clock@PLT # Offset: 818
    00000337: 	movq	%rax, end_time(%rip)
    0000033e: 	movq	0x18(%rsp), %rdx
    00000343: 	subq	%fs:0x28, %rdx
    0000034c: 	jne	.Ltmp672 # Offset: 844
    00000352: 	subq	start_time(%rip), %rax
    00000359: 	pxor	%xmm0, %xmm0
    0000035d: 	movq	%rbp, %rdi
    00000360: 	cvtsi2sd	%rax, %xmm0
    00000365: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000036d: 	addq	$0x28, %rsp
    00000371: 	popq	%rbx
    00000372: 	popq	%rbp
    00000373: 	popq	%r12
    00000375: 	popq	%r13
    00000377: 	popq	%r14
    00000379: 	popq	%r15
    0000037b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 891
.Ltmp664:
    00000380: 	addl	$0x1, %r13d
    00000384: 	cmpl	%r10d, %r13d
    00000387: 	jl	.Ltmp673 # Offset: 903
    0000038d: 	jmp	.Ltmp657 # Offset: 909
.Ltmp659:
    00000392: 	xorl	%edi, %edi
    00000394: 	movl	$0x1, %ecx
    00000399: 	jmp	.Ltmp674 # Offset: 921
.Ltmp669:
    0000039e: 	movq	%rbx, %rdi
    000003a1: 	leaq	0x10(%rsp), %rsi
    000003a6: 	xorl	%edx, %edx
    000003a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 936
    000003ad: 	movq	%rax, (%rbx)
    000003b0: 	movq	%rax, %rdi
    000003b3: 	movq	0x10(%rsp), %rax
    000003b8: 	movq	%rax, 0x10(%rbx)
.Ltmp677:
    000003bc: 	movq	%r12, %rdx
    000003bf: 	movq	%rbp, %rsi
    000003c2: 	callq	memcpy@PLT # Offset: 962
    000003c7: 	movq	0x10(%rsp), %r12
    000003cc: 	movq	(%rbx), %rdi
    000003cf: 	jmp	.Ltmp675 # Offset: 975
.Ltmp662:
    000003d4: 	movl	%ecx, %eax
    000003d6: 	jmp	.Ltmp663 # Offset: 982
.Ltmp666:
    000003db: 	movq	0x8(%rsp), %rsi
    000003e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 999
    000003ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003f3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000401: 	jne	.Ltmp676 # Offset: 1025
.Ltmp671:
    00000407: 	movq	-0x8(%rdx), %rax
    0000040b: 	addq	$0x200, %rax
    00000411: 	jmp	.Ltmp676 # Offset: 1041
.Ltmp670:
    00000416: 	testq	%r12, %r12
    00000419: 	je	.Ltmp675 # Offset: 1049
    0000041f: 	jmp	.Ltmp677 # Offset: 1055
.Ltmp672:
    00000421: 	callq	__stack_chk_fail@PLT # Offset: 1057
.Ltmp668:
    00000426: 	leaq	DATAat0x38110(%rip), %rdi
    0000042d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1069
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt23custom_2term_addsub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl23custom_2term_addsub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0x8ff0
  Size        : 0x2a2
  MaxSize     : 0x2b0
  Offset      : 0x8ff0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl23custom_2term_addsub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp678 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %rdi
    0000004f: 	movq	(%r13), %rsi
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	leaq	DATAat0x381c8(%rip), %rbp
    0000005f: 	leaq	0x5(%rax,%rax), %rbx
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp684:
    00000068: 	movq	%rsi, %rcx
    0000006b: 	leaq	(%rdi,%rsi), %rax
    0000006f: 	movq	%rsi, %rdx
    00000072: 	subq	%rdi, %rcx
    00000075: 	imulq	%rax, %rcx
    00000079: 	cmpl	$0x1, %r14d
    0000007d: 	jle	.Ltmp679 # Offset: 125
    0000007f: 	cmpl	$0x3, %r14d
    00000083: 	jle	.Ltmp680 # Offset: 131
    00000089: 	movl	$0x3, %r9d
.Ltmp681:
    0000008f: 	movq	-0x10(%r13,%r9,8), %rax
    00000094: 	movq	%rdx, %r10
    00000097: 	subq	%rax, %r10
    0000009a: 	addq	%rax, %rdx
    0000009d: 	imulq	%rdx, %r10
    000000a1: 	movq	-0x8(%r13,%r9,8), %rdx
    000000a6: 	addq	%rcx, %r10
    000000a9: 	leaq	(%rax,%rdx), %rcx
    000000ad: 	subq	%rdx, %rax
    000000b0: 	imulq	%rax, %rcx
    000000b4: 	movslq	%r9d, %rax
    000000b7: 	addq	$0x2, %r9
    000000bb: 	addq	%r10, %rcx
    000000be: 	cmpq	%r9, %rbx
    000000c1: 	jne	.Ltmp681 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp682:
    000000c8: 	movq	-0x8(%r13,%rax,8), %rdx
    000000cd: 	movq	(%r13,%rax,8), %r9
    000000d2: 	addq	%rdx, %r9
    000000d5: 	subq	(%r13,%rax,8), %rdx
    000000da: 	addq	$0x1, %rax
    000000de: 	imulq	%r9, %rdx
    000000e2: 	addq	%rdx, %rcx
    000000e5: 	cmpl	%eax, %r14d
    000000e8: 	jg	.Ltmp682 # Offset: 232
.Ltmp679:
    000000ea: 	testq	%rcx, %rcx
    000000ed: 	je	.Ltmp683 # Offset: 237
    000000ef: 	movl	current_test(%rip), %edx
    000000f5: 	movq	%rbp, %rsi
    000000f8: 	movl	$0x1, %edi
    000000fd: 	xorl	%eax, %eax
    000000ff: 	addl	$0x1, %r15d
    00000103: 	callq	__printf_chk@PLT # Offset: 259
    00000108: 	movl	iterations(%rip), %r8d
    0000010f: 	cmpl	%r15d, %r8d
    00000112: 	jle	.Ltmp678 # Offset: 274
    00000114: 	movq	0x8(%r13), %rdi
    00000118: 	movq	(%r13), %rsi
    0000011c: 	jmp	.Ltmp684 # Offset: 284
    00000121: 	nopl	(%rax) # Size: 7
.Ltmp683:
    00000128: 	addl	$0x1, %r15d
    0000012c: 	cmpl	%r8d, %r15d
    0000012f: 	jl	.Ltmp684 # Offset: 303
.Ltmp678:
    00000135: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000143: 	subq	$0x20, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	je	.Ltmp685 # Offset: 330
    00000150: 	leaq	0x10(%rbx), %rdi
    00000154: 	movq	%rdi, (%rbx)
    00000157: 	movq	(%r12), %rbp
    0000015b: 	movq	0x8(%r12), %r12
    00000160: 	movq	%rbp, %rax
    00000163: 	addq	%r12, %rax
    00000166: 	je	.Ltmp686 # Offset: 358
    00000168: 	testq	%rbp, %rbp
    0000016b: 	je	.Ltmp687 # Offset: 363
.Ltmp686:
    00000171: 	movq	%r12, (%rsp)
    00000175: 	cmpq	$0xf, %r12
    00000179: 	ja	.Ltmp688 # Offset: 377
    0000017f: 	cmpq	$0x1, %r12
    00000183: 	jne	.Ltmp689 # Offset: 387
    00000189: 	movzbl	(%rbp), %eax
    0000018d: 	movb	%al, 0x10(%rbx)
.Ltmp692:
    00000190: 	movq	%r12, 0x8(%rbx)
    00000194: 	movb	$0x0, (%rdi,%r12)
    00000199: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a7: 	addq	$0x20, %rax
    000001ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001b9: 	je	.Ltmp690 # Offset: 441
.Ltmp693:
    000001bf: 	movq	-0x20(%rax), %rbp
    000001c3: 	callq	clock@PLT # Offset: 451
    000001c8: 	movq	%rax, end_time(%rip)
    000001cf: 	movq	0x8(%rsp), %rdx
    000001d4: 	subq	%fs:0x28, %rdx
    000001dd: 	jne	.Ltmp691 # Offset: 477
    000001e3: 	subq	start_time(%rip), %rax
    000001ea: 	pxor	%xmm0, %xmm0
    000001ee: 	movq	%rbp, %rdi
    000001f1: 	cvtsi2sd	%rax, %xmm0
    000001f6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001fe: 	addq	$0x18, %rsp
    00000202: 	popq	%rbx
    00000203: 	popq	%rbp
    00000204: 	popq	%r12
    00000206: 	popq	%r13
    00000208: 	popq	%r14
    0000020a: 	popq	%r15
    0000020c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 524
.Ltmp680:
    00000211: 	movl	$0x1, %eax
    00000216: 	jmp	.Ltmp682 # Offset: 534
.Ltmp688:
    0000021b: 	movq	%rbx, %rdi
    0000021e: 	movq	%rsp, %rsi
    00000221: 	xorl	%edx, %edx
    00000223: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 547
    00000228: 	movq	%rax, (%rbx)
    0000022b: 	movq	%rax, %rdi
    0000022e: 	movq	(%rsp), %rax
    00000232: 	movq	%rax, 0x10(%rbx)
.Ltmp694:
    00000236: 	movq	%r12, %rdx
    00000239: 	movq	%rbp, %rsi
    0000023c: 	callq	memcpy@PLT # Offset: 572
    00000241: 	movq	(%rsp), %r12
    00000245: 	movq	(%rbx), %rdi
    00000248: 	jmp	.Ltmp692 # Offset: 584
.Ltmp685:
    0000024d: 	movq	%r12, %rsi
    00000250: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000257: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 599
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000263: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000271: 	jne	.Ltmp693 # Offset: 625
.Ltmp690:
    00000277: 	movq	-0x8(%rdx), %rax
    0000027b: 	addq	$0x200, %rax
    00000281: 	jmp	.Ltmp693 # Offset: 641
.Ltmp689:
    00000286: 	testq	%r12, %r12
    00000289: 	je	.Ltmp692 # Offset: 649
    0000028f: 	jmp	.Ltmp694 # Offset: 655
.Ltmp691:
    00000291: 	callq	__stack_chk_fail@PLT # Offset: 657
.Ltmp687:
    00000296: 	leaq	DATAat0x38110(%rip), %rdi
    0000029d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 669
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl23custom_2term_addsub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIs19custom_2term_addsubIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 78
  State       : disassembled
  Address     : 0x92a0
  Size        : 0x3e2
  MaxSize     : 0x3f0
  Offset      : 0x92a0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs19custom_2term_addsubIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp695 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, (%rsp)
    00000059: 	movl	%r14d, %eax
    0000005c: 	movl	%r14d, %r15d
    0000005f: 	shrl	$0x3, %eax
    00000062: 	andl	$-0x8, %r15d
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%rbx,%rax), %rbp
    00000072: 	leal	0x1(%r15), %eax
    00000076: 	movl	%eax, 0x4(%rsp)
.Ltmp703:
    0000007a: 	movzwl	(%rbx), %r9d
    0000007e: 	movzwl	0x2(%rbx), %r8d
.Ltmp711:
    00000083: 	movl	%r9d, %edx
    00000086: 	movl	%r8d, %eax
    00000089: 	imull	%r8d, %eax
    0000008d: 	imull	%r9d, %edx
    00000091: 	subl	%eax, %edx
    00000093: 	movl	%edx, %eax
    00000095: 	cmpl	$0x1, %r12d
    00000099: 	jle	.Ltmp696 # Offset: 153
    0000009f: 	cmpl	$0x6, (%rsp)
    000000a3: 	jbe	.Ltmp697 # Offset: 163
    000000a9: 	movq	%rbx, %rax
    000000ac: 	pxor	%xmm0, %xmm0
.Ltmp698:
    000000b0: 	movdqu	(%rax), %xmm1
    000000b4: 	addq	$0x10, %rax
    000000b8: 	pmullw	%xmm1, %xmm1
    000000bc: 	paddw	%xmm1, %xmm0
    000000c0: 	movdqu	-0xe(%rax), %xmm1
    000000c5: 	pmullw	%xmm1, %xmm1
    000000c9: 	psubw	%xmm1, %xmm0
    000000cd: 	cmpq	%rbp, %rax
    000000d0: 	jne	.Ltmp698 # Offset: 208
    000000d2: 	movdqa	%xmm0, %xmm1
    000000d6: 	psrldq	$0x8, %xmm1
    000000db: 	paddw	%xmm1, %xmm0
    000000df: 	movdqa	%xmm0, %xmm1
    000000e3: 	psrldq	$0x4, %xmm1
    000000e8: 	paddw	%xmm1, %xmm0
    000000ec: 	movdqa	%xmm0, %xmm1
    000000f0: 	psrldq	$0x2, %xmm1
    000000f5: 	paddw	%xmm1, %xmm0
    000000f9: 	pextrw	$0x0, %xmm0, %eax
    000000fe: 	addl	%edx, %eax
    00000100: 	cmpl	%r14d, %r15d
    00000103: 	je	.Ltmp696 # Offset: 259
    00000109: 	movl	0x4(%rsp), %edx
    0000010d: 	movl	%r15d, %edi
.Ltmp712:
    00000110: 	movl	%r12d, %esi
    00000113: 	subl	%edi, %esi
    00000115: 	leal	-0x1(%rsi), %ecx
    00000118: 	subl	$0x2, %esi
    0000011b: 	cmpl	$0x2, %esi
    0000011e: 	jbe	.Ltmp699 # Offset: 286
    00000120: 	leal	0x1(%rdi), %esi
    00000123: 	movq	-0x2(%rbx,%rsi,2), %xmm0
    00000129: 	movq	(%rbx,%rsi,2), %xmm1
    0000012e: 	pmullw	%xmm0, %xmm0
    00000132: 	pmullw	%xmm1, %xmm1
    00000136: 	psubw	%xmm1, %xmm0
    0000013a: 	pextrw	$0x1, %xmm0, %edi
    0000013f: 	pextrw	$0x0, %xmm0, %esi
    00000144: 	addl	%edi, %esi
    00000146: 	pextrw	$0x2, %xmm0, %edi
    0000014b: 	addl	%edi, %esi
    0000014d: 	pextrw	$0x3, %xmm0, %edi
    00000152: 	addl	%edi, %esi
    00000154: 	addl	%esi, %eax
    00000156: 	movl	%ecx, %esi
    00000158: 	andl	$-0x4, %esi
    0000015b: 	addl	%esi, %edx
    0000015d: 	cmpl	%esi, %ecx
    0000015f: 	je	.Ltmp696 # Offset: 351
.Ltmp699:
    00000165: 	movslq	%edx, %rsi
    00000168: 	leal	0x1(%rdx), %ecx
    0000016b: 	addq	%rsi, %rsi
    0000016e: 	leaq	(%rbx,%rsi), %rdi
    00000172: 	cmpl	%r14d, %ecx
    00000175: 	jge	.Ltmp700 # Offset: 373
    0000017b: 	cmpl	%edx, %r12d
    0000017e: 	jle	.Ltmp700 # Offset: 382
    00000184: 	movzwl	-0x2(%rdi), %ecx
    00000188: 	leal	0x3(%rdx), %r11d
    0000018c: 	imull	%ecx, %ecx
    0000018f: 	leal	(%rcx,%rax), %edi
    00000192: 	movzwl	0x2(%rbx,%rsi), %eax
    00000197: 	imull	%eax, %eax
    0000019a: 	movl	%eax, %ecx
    0000019c: 	movl	%edi, %eax
    0000019e: 	subl	%ecx, %eax
    000001a0: 	leal	0x2(%rdx), %ecx
    000001a3: 	cmpl	%r11d, %r14d
    000001a6: 	jle	.Ltmp701 # Offset: 422
    000001a8: 	movzwl	0x6(%rbx,%rsi), %eax
    000001ad: 	leal	0x5(%rdx), %r11d
    000001b1: 	imull	%eax, %eax
    000001b4: 	movl	%eax, %ecx
    000001b6: 	movl	%edi, %eax
    000001b8: 	subl	%ecx, %eax
    000001ba: 	leal	0x4(%rdx), %ecx
    000001bd: 	cmpl	%r11d, %r14d
    000001c0: 	jle	.Ltmp701 # Offset: 448
    000001c2: 	movzwl	0xa(%rbx,%rsi), %eax
    000001c7: 	imull	%eax, %eax
    000001ca: 	movl	%eax, %ecx
    000001cc: 	movl	%edi, %eax
    000001ce: 	subl	%ecx, %eax
    000001d0: 	leal	0x6(%rdx), %ecx
.Ltmp701:
    000001d3: 	movslq	%ecx, %rdx
    000001d6: 	leaq	(%rdx,%rdx), %rdi
    000001da: 	movzwl	(%rbx,%rdx,2), %edx
    000001de: 	movzwl	-0x2(%rbx,%rdi), %esi
    000001e3: 	imull	%edx, %edx
    000001e6: 	imull	%esi, %esi
    000001e9: 	subl	%edx, %esi
    000001eb: 	addl	%esi, %eax
    000001ed: 	leal	0x1(%rcx), %esi
    000001f0: 	cmpl	%esi, %r12d
    000001f3: 	jle	.Ltmp696 # Offset: 499
    000001f5: 	movzwl	0x2(%rbx,%rdi), %esi
    000001fa: 	addl	$0x2, %ecx
    000001fd: 	imull	%esi, %esi
    00000200: 	subl	%esi, %edx
    00000202: 	addl	%edx, %eax
    00000204: 	cmpl	%ecx, %r12d
    00000207: 	jle	.Ltmp696 # Offset: 519
    00000209: 	movzwl	0x4(%rbx,%rdi), %edx
    0000020e: 	imull	%edx, %edx
    00000211: 	subl	%edx, %esi
    00000213: 	addl	%esi, %eax
.Ltmp696:
    00000215: 	testw	%ax, %ax
    00000218: 	je	.Ltmp702 # Offset: 536
    0000021e: 	movl	current_test(%rip), %edx
    00000224: 	leaq	DATAat0x381c8(%rip), %rsi
    0000022b: 	movl	$0x1, %edi
    00000230: 	xorl	%eax, %eax
    00000232: 	addl	$0x1, %r13d
    00000236: 	callq	__printf_chk@PLT # Offset: 566
    0000023b: 	movl	iterations(%rip), %r10d
    00000242: 	cmpl	%r10d, %r13d
    00000245: 	jl	.Ltmp703 # Offset: 581
.Ltmp695:
    0000024b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000252: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000259: 	subq	$0x20, %rax
    0000025d: 	cmpq	%rax, %rbx
    00000260: 	je	.Ltmp704 # Offset: 608
    00000266: 	movq	0x8(%rsp), %rax
    0000026b: 	leaq	0x10(%rbx), %rdi
    0000026f: 	movq	%rdi, (%rbx)
    00000272: 	movq	(%rax), %rbp
    00000275: 	movq	0x8(%rax), %r12
    00000279: 	movq	%rbp, %rax
    0000027c: 	addq	%r12, %rax
    0000027f: 	je	.Ltmp705 # Offset: 639
    00000281: 	testq	%rbp, %rbp
    00000284: 	je	.Ltmp706 # Offset: 644
.Ltmp705:
    0000028a: 	movq	%r12, 0x10(%rsp)
    0000028f: 	cmpq	$0xf, %r12
    00000293: 	ja	.Ltmp707 # Offset: 659
    00000299: 	cmpq	$0x1, %r12
    0000029d: 	jne	.Ltmp708 # Offset: 669
    000002a3: 	movzbl	(%rbp), %eax
    000002a7: 	movb	%al, 0x10(%rbx)
.Ltmp713:
    000002aa: 	movq	%r12, 0x8(%rbx)
    000002ae: 	movb	$0x0, (%rdi,%r12)
    000002b3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002c1: 	addq	$0x20, %rax
    000002c5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002cc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002d3: 	je	.Ltmp709 # Offset: 723
.Ltmp714:
    000002d9: 	movq	-0x20(%rax), %rbp
    000002dd: 	callq	clock@PLT # Offset: 733
    000002e2: 	movq	%rax, end_time(%rip)
    000002e9: 	movq	0x18(%rsp), %rdx
    000002ee: 	subq	%fs:0x28, %rdx
    000002f7: 	jne	.Ltmp710 # Offset: 759
    000002fd: 	subq	start_time(%rip), %rax
    00000304: 	pxor	%xmm0, %xmm0
    00000308: 	movq	%rbp, %rdi
    0000030b: 	cvtsi2sd	%rax, %xmm0
    00000310: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000318: 	addq	$0x28, %rsp
    0000031c: 	popq	%rbx
    0000031d: 	popq	%rbp
    0000031e: 	popq	%r12
    00000320: 	popq	%r13
    00000322: 	popq	%r14
    00000324: 	popq	%r15
    00000326: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 806
    0000032b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp702:
    00000330: 	addl	$0x1, %r13d
    00000334: 	cmpl	%r10d, %r13d
    00000337: 	jl	.Ltmp711 # Offset: 823
    0000033d: 	jmp	.Ltmp695 # Offset: 829
.Ltmp697:
    00000342: 	xorl	%edi, %edi
    00000344: 	movl	$0x1, %edx
    00000349: 	jmp	.Ltmp712 # Offset: 841
.Ltmp707:
    0000034e: 	movq	%rbx, %rdi
    00000351: 	leaq	0x10(%rsp), %rsi
    00000356: 	xorl	%edx, %edx
    00000358: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 856
    0000035d: 	movq	%rax, (%rbx)
    00000360: 	movq	%rax, %rdi
    00000363: 	movq	0x10(%rsp), %rax
    00000368: 	movq	%rax, 0x10(%rbx)
.Ltmp715:
    0000036c: 	movq	%r12, %rdx
    0000036f: 	movq	%rbp, %rsi
    00000372: 	callq	memcpy@PLT # Offset: 882
    00000377: 	movq	0x10(%rsp), %r12
    0000037c: 	movq	(%rbx), %rdi
    0000037f: 	jmp	.Ltmp713 # Offset: 895
.Ltmp700:
    00000384: 	movl	%edx, %ecx
    00000386: 	jmp	.Ltmp701 # Offset: 902
.Ltmp704:
    0000038b: 	movq	0x8(%rsp), %rsi
    00000390: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000397: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 919
    0000039c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003a3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b1: 	jne	.Ltmp714 # Offset: 945
.Ltmp709:
    000003b7: 	movq	-0x8(%rdx), %rax
    000003bb: 	addq	$0x200, %rax
    000003c1: 	jmp	.Ltmp714 # Offset: 961
.Ltmp708:
    000003c6: 	testq	%r12, %r12
    000003c9: 	je	.Ltmp713 # Offset: 969
    000003cf: 	jmp	.Ltmp715 # Offset: 975
.Ltmp710:
    000003d1: 	callq	__stack_chk_fail@PLT # Offset: 977
.Ltmp706:
    000003d6: 	leaq	DATAat0x38110(%rip), %rdi
    000003dd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 989
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs19custom_2term_addsubIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl19custom_2term_addsubIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 79
  State       : disassembled
  Address     : 0x9690
  Size        : 0x2aa
  MaxSize     : 0x2b0
  Offset      : 0x9690
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl19custom_2term_addsubIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r9d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r9d, %r9d
    00000041: 	jle	.Ltmp716 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %r8
    0000004f: 	movq	(%r13), %rdi
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	leaq	DATAat0x381c8(%rip), %rbp
    0000005f: 	leaq	0x5(%rax,%rax), %rbx
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp722:
    00000068: 	movq	%rdi, %rsi
    0000006b: 	movq	%r8, %rax
    0000006e: 	movq	%rdi, %r10
    00000071: 	imulq	%rdi, %rsi
    00000075: 	imulq	%r8, %rax
    00000079: 	subq	%rax, %rsi
    0000007c: 	cmpl	$0x1, %r14d
    00000080: 	jle	.Ltmp717 # Offset: 128
    00000082: 	cmpl	$0x3, %r14d
    00000086: 	jle	.Ltmp718 # Offset: 134
    0000008c: 	movl	$0x3, %ecx
.Ltmp719:
    00000091: 	movq	-0x10(%r13,%rcx,8), %rax
    00000096: 	movq	%r10, %rdx
    00000099: 	imulq	%r10, %rdx
    0000009d: 	movq	-0x8(%r13,%rcx,8), %r10
    000000a2: 	imulq	%rax, %rax
    000000a6: 	subq	%rax, %rdx
    000000a9: 	addq	%rsi, %rdx
    000000ac: 	movq	%r10, %rsi
    000000af: 	imulq	%r10, %rsi
    000000b3: 	subq	%rsi, %rax
    000000b6: 	leaq	(%rax,%rdx), %rsi
    000000ba: 	movslq	%ecx, %rdx
    000000bd: 	addq	$0x2, %rcx
    000000c1: 	cmpq	%rcx, %rbx
    000000c4: 	jne	.Ltmp719 # Offset: 196
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp720:
    000000d0: 	movq	(%r13,%rdx,8), %rcx
    000000d5: 	movq	-0x8(%r13,%rdx,8), %rax
    000000da: 	addq	$0x1, %rdx
    000000de: 	imulq	%rax, %rax
    000000e2: 	imulq	%rcx, %rcx
    000000e6: 	subq	%rcx, %rax
    000000e9: 	addq	%rax, %rsi
    000000ec: 	cmpl	%edx, %r14d
    000000ef: 	jg	.Ltmp720 # Offset: 239
.Ltmp717:
    000000f1: 	testq	%rsi, %rsi
    000000f4: 	je	.Ltmp721 # Offset: 244
    000000f6: 	movl	current_test(%rip), %edx
    000000fc: 	movq	%rbp, %rsi
    000000ff: 	movl	$0x1, %edi
    00000104: 	xorl	%eax, %eax
    00000106: 	addl	$0x1, %r15d
    0000010a: 	callq	__printf_chk@PLT # Offset: 266
    0000010f: 	movl	iterations(%rip), %r9d
    00000116: 	cmpl	%r15d, %r9d
    00000119: 	jle	.Ltmp716 # Offset: 281
    0000011b: 	movq	0x8(%r13), %r8
    0000011f: 	movq	(%r13), %rdi
    00000123: 	jmp	.Ltmp722 # Offset: 291
    00000128: 	nopl	(%rax,%rax) # Size: 8
.Ltmp721:
    00000130: 	addl	$0x1, %r15d
    00000134: 	cmpl	%r9d, %r15d
    00000137: 	jl	.Ltmp722 # Offset: 311
.Ltmp716:
    0000013d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000144: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000014b: 	subq	$0x20, %rax
    0000014f: 	cmpq	%rax, %rbx
    00000152: 	je	.Ltmp723 # Offset: 338
    00000158: 	leaq	0x10(%rbx), %rdi
    0000015c: 	movq	%rdi, (%rbx)
    0000015f: 	movq	(%r12), %rbp
    00000163: 	movq	0x8(%r12), %r12
    00000168: 	movq	%rbp, %rax
    0000016b: 	addq	%r12, %rax
    0000016e: 	je	.Ltmp724 # Offset: 366
    00000170: 	testq	%rbp, %rbp
    00000173: 	je	.Ltmp725 # Offset: 371
.Ltmp724:
    00000179: 	movq	%r12, (%rsp)
    0000017d: 	cmpq	$0xf, %r12
    00000181: 	ja	.Ltmp726 # Offset: 385
    00000187: 	cmpq	$0x1, %r12
    0000018b: 	jne	.Ltmp727 # Offset: 395
    00000191: 	movzbl	(%rbp), %eax
    00000195: 	movb	%al, 0x10(%rbx)
.Ltmp730:
    00000198: 	movq	%r12, 0x8(%rbx)
    0000019c: 	movb	$0x0, (%rdi,%r12)
    000001a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001af: 	addq	$0x20, %rax
    000001b3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ba: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001c1: 	je	.Ltmp728 # Offset: 449
.Ltmp731:
    000001c7: 	movq	-0x20(%rax), %rbp
    000001cb: 	callq	clock@PLT # Offset: 459
    000001d0: 	movq	%rax, end_time(%rip)
    000001d7: 	movq	0x8(%rsp), %rdx
    000001dc: 	subq	%fs:0x28, %rdx
    000001e5: 	jne	.Ltmp729 # Offset: 485
    000001eb: 	subq	start_time(%rip), %rax
    000001f2: 	pxor	%xmm0, %xmm0
    000001f6: 	movq	%rbp, %rdi
    000001f9: 	cvtsi2sd	%rax, %xmm0
    000001fe: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000206: 	addq	$0x18, %rsp
    0000020a: 	popq	%rbx
    0000020b: 	popq	%rbp
    0000020c: 	popq	%r12
    0000020e: 	popq	%r13
    00000210: 	popq	%r14
    00000212: 	popq	%r15
    00000214: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 532
.Ltmp718:
    00000219: 	movl	$0x1, %edx
    0000021e: 	jmp	.Ltmp720 # Offset: 542
.Ltmp726:
    00000223: 	movq	%rbx, %rdi
    00000226: 	movq	%rsp, %rsi
    00000229: 	xorl	%edx, %edx
    0000022b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 555
    00000230: 	movq	%rax, (%rbx)
    00000233: 	movq	%rax, %rdi
    00000236: 	movq	(%rsp), %rax
    0000023a: 	movq	%rax, 0x10(%rbx)
.Ltmp732:
    0000023e: 	movq	%r12, %rdx
    00000241: 	movq	%rbp, %rsi
    00000244: 	callq	memcpy@PLT # Offset: 580
    00000249: 	movq	(%rsp), %r12
    0000024d: 	movq	(%rbx), %rdi
    00000250: 	jmp	.Ltmp730 # Offset: 592
.Ltmp723:
    00000255: 	movq	%r12, %rsi
    00000258: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000025f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 607
    00000264: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000272: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000279: 	jne	.Ltmp731 # Offset: 633
.Ltmp728:
    0000027f: 	movq	-0x8(%rdx), %rax
    00000283: 	addq	$0x200, %rax
    00000289: 	jmp	.Ltmp731 # Offset: 649
.Ltmp727:
    0000028e: 	testq	%r12, %r12
    00000291: 	je	.Ltmp730 # Offset: 657
    00000297: 	jmp	.Ltmp732 # Offset: 663
.Ltmp729:
    00000299: 	callq	__stack_chk_fail@PLT # Offset: 665
.Ltmp725:
    0000029e: 	leaq	DATAat0x38110(%rip), %rdi
    000002a5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 677
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl19custom_2term_addsubIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi19custom_2term_addsubIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 80
  State       : disassembled
  Address     : 0x9940
  Size        : 0x3db
  MaxSize     : 0x3e0
  Offset      : 0x9940
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi19custom_2term_addsubIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp733 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r9d
    00000055: 	movl	(%rbx), %r8d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	xorl	%r13d, %r13d
    00000062: 	leaq	DATAat0x381c8(%rip), %r12
    00000069: 	shrl	$0x2, %eax
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	movl	%r15d, %eax
    0000007b: 	andl	$-0x4, %eax
    0000007e: 	movl	%eax, 0x10(%rsp)
    00000082: 	addl	$0x1, %eax
    00000085: 	movl	%eax, 0x14(%rsp)
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp740:
    00000090: 	movl	%r8d, %edx
    00000093: 	movl	%r9d, %eax
    00000096: 	imull	%r8d, %edx
    0000009a: 	imull	%r9d, %eax
    0000009e: 	subl	%eax, %edx
    000000a0: 	cmpl	$0x1, %r14d
    000000a4: 	jle	.Ltmp734 # Offset: 164
    000000aa: 	cmpl	$0x2, 0xc(%rsp)
    000000af: 	jbe	.Ltmp735 # Offset: 175
    000000b5: 	movq	%rbx, %rax
    000000b8: 	pxor	%xmm3, %xmm3
    000000bc: 	nopl	(%rax) # Size: 4
.Ltmp736:
    000000c0: 	movdqu	(%rax), %xmm1
    000000c4: 	movdqu	0x4(%rax), %xmm0
    000000c9: 	addq	$0x10, %rax
    000000cd: 	movdqa	%xmm1, %xmm2
    000000d1: 	pmuludq	%xmm1, %xmm2
    000000d5: 	psrlq	$0x20, %xmm1
    000000da: 	pmuludq	%xmm1, %xmm1
    000000de: 	pshufd	$0x8, %xmm2, %xmm2
    000000e3: 	pshufd	$0x8, %xmm1, %xmm1
    000000e8: 	punpckldq	%xmm1, %xmm2
    000000ec: 	movdqa	%xmm0, %xmm1
    000000f0: 	pmuludq	%xmm0, %xmm1
    000000f4: 	psrlq	$0x20, %xmm0
    000000f9: 	pmuludq	%xmm0, %xmm0
    000000fd: 	pshufd	$0x8, %xmm1, %xmm1
    00000102: 	pshufd	$0x8, %xmm0, %xmm0
    00000107: 	punpckldq	%xmm0, %xmm1
    0000010b: 	psubd	%xmm1, %xmm2
    0000010f: 	paddd	%xmm2, %xmm3
    00000113: 	cmpq	%rbp, %rax
    00000116: 	jne	.Ltmp736 # Offset: 278
    00000118: 	movdqa	%xmm3, %xmm0
    0000011c: 	psrldq	$0x8, %xmm0
    00000121: 	paddd	%xmm0, %xmm3
    00000125: 	movdqa	%xmm3, %xmm0
    00000129: 	psrldq	$0x4, %xmm0
    0000012e: 	paddd	%xmm0, %xmm3
    00000132: 	movd	%xmm3, %eax
    00000136: 	addl	%eax, %edx
    00000138: 	cmpl	%r15d, 0x10(%rsp)
    0000013d: 	je	.Ltmp734 # Offset: 317
    00000143: 	movl	0x14(%rsp), %esi
.Ltmp748:
    00000147: 	movslq	%esi, %rdi
    0000014a: 	leal	0x1(%rsi), %eax
    0000014d: 	shlq	$0x2, %rdi
    00000151: 	leaq	(%rbx,%rdi), %rcx
    00000155: 	cmpl	%r15d, %eax
    00000158: 	jge	.Ltmp737 # Offset: 344
    0000015e: 	cmpl	%esi, %r14d
    00000161: 	jle	.Ltmp737 # Offset: 353
    00000167: 	movl	-0x4(%rcx), %eax
    0000016a: 	movl	(%rcx), %ecx
    0000016c: 	movl	0x4(%rbx,%rdi), %r11d
    00000171: 	imull	%ecx, %ecx
    00000174: 	imull	%eax, %eax
    00000177: 	imull	%r11d, %r11d
    0000017b: 	subl	%ecx, %eax
    0000017d: 	addl	%edx, %eax
    0000017f: 	subl	%r11d, %ecx
    00000182: 	leal	(%rcx,%rax), %edx
    00000185: 	leal	0x3(%rsi), %ecx
    00000188: 	leal	0x2(%rsi), %eax
    0000018b: 	cmpl	%ecx, %r15d
    0000018e: 	jle	.Ltmp738 # Offset: 398
    00000190: 	movl	0x8(%rbx,%rdi), %eax
    00000194: 	movl	0xc(%rbx,%rdi), %ecx
    00000198: 	imull	%eax, %eax
    0000019b: 	imull	%ecx, %ecx
    0000019e: 	subl	%eax, %r11d
    000001a1: 	addl	%edx, %r11d
    000001a4: 	subl	%ecx, %eax
    000001a6: 	leal	(%rax,%r11), %edx
    000001aa: 	leal	0x5(%rsi), %r11d
    000001ae: 	leal	0x4(%rsi), %eax
    000001b1: 	cmpl	%r11d, %r15d
    000001b4: 	jle	.Ltmp738 # Offset: 436
    000001b6: 	movl	0x10(%rbx,%rdi), %eax
    000001ba: 	imull	%eax, %eax
    000001bd: 	subl	%eax, %ecx
    000001bf: 	addl	%edx, %ecx
    000001c1: 	movl	0x14(%rbx,%rdi), %edx
    000001c5: 	imull	%edx, %edx
    000001c8: 	subl	%edx, %eax
    000001ca: 	leal	(%rax,%rcx), %edx
    000001cd: 	leal	0x6(%rsi), %eax
.Ltmp738:
    000001d0: 	movslq	%eax, %rcx
    000001d3: 	leaq	(,%rcx,4), %rdi
    000001db: 	movl	(%rbx,%rcx,4), %ecx
    000001de: 	movl	-0x4(%rbx,%rdi), %esi
    000001e2: 	imull	%ecx, %ecx
    000001e5: 	imull	%esi, %esi
    000001e8: 	subl	%ecx, %esi
    000001ea: 	addl	%esi, %edx
    000001ec: 	leal	0x1(%rax), %esi
    000001ef: 	cmpl	%esi, %r14d
    000001f2: 	jle	.Ltmp734 # Offset: 498
    000001f4: 	movl	0x4(%rbx,%rdi), %esi
    000001f8: 	addl	$0x2, %eax
    000001fb: 	imull	%esi, %esi
    000001fe: 	subl	%esi, %ecx
    00000200: 	addl	%ecx, %edx
    00000202: 	cmpl	%eax, %r14d
    00000205: 	jle	.Ltmp734 # Offset: 517
    00000207: 	movl	0x8(%rbx,%rdi), %eax
    0000020b: 	imull	%eax, %eax
    0000020e: 	subl	%eax, %esi
    00000210: 	addl	%esi, %edx
.Ltmp734:
    00000212: 	testl	%edx, %edx
    00000214: 	je	.Ltmp739 # Offset: 532
    00000216: 	movl	current_test(%rip), %edx
    0000021c: 	movq	%r12, %rsi
    0000021f: 	movl	$0x1, %edi
    00000224: 	xorl	%eax, %eax
    00000226: 	addl	$0x1, %r13d
    0000022a: 	callq	__printf_chk@PLT # Offset: 554
    0000022f: 	movl	iterations(%rip), %r10d
    00000236: 	cmpl	%r10d, %r13d
    00000239: 	jge	.Ltmp733 # Offset: 569
    0000023b: 	movl	0x4(%rbx), %r9d
    0000023f: 	movl	(%rbx), %r8d
    00000242: 	jmp	.Ltmp740 # Offset: 578
    00000247: 	nopw	(%rax,%rax) # Size: 9
.Ltmp739:
    00000250: 	addl	$0x1, %r13d
    00000254: 	cmpl	%r10d, %r13d
    00000257: 	jl	.Ltmp740 # Offset: 599
.Ltmp733:
    0000025d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000264: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000026b: 	subq	$0x20, %rax
    0000026f: 	cmpq	%rax, %rbx
    00000272: 	je	.Ltmp741 # Offset: 626
    00000278: 	movq	0x18(%rsp), %rax
    0000027d: 	leaq	0x10(%rbx), %rdi
    00000281: 	movq	%rdi, (%rbx)
    00000284: 	movq	(%rax), %rbp
    00000287: 	movq	0x8(%rax), %r12
    0000028b: 	movq	%rbp, %rax
    0000028e: 	addq	%r12, %rax
    00000291: 	je	.Ltmp742 # Offset: 657
    00000293: 	testq	%rbp, %rbp
    00000296: 	je	.Ltmp743 # Offset: 662
.Ltmp742:
    0000029c: 	movq	%r12, 0x20(%rsp)
    000002a1: 	cmpq	$0xf, %r12
    000002a5: 	ja	.Ltmp744 # Offset: 677
    000002ab: 	cmpq	$0x1, %r12
    000002af: 	jne	.Ltmp745 # Offset: 687
    000002b5: 	movzbl	(%rbp), %eax
    000002b9: 	movb	%al, 0x10(%rbx)
.Ltmp749:
    000002bc: 	movq	%r12, 0x8(%rbx)
    000002c0: 	movb	$0x0, (%rdi,%r12)
    000002c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002d3: 	addq	$0x20, %rax
    000002d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002de: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002e5: 	je	.Ltmp746 # Offset: 741
.Ltmp750:
    000002eb: 	movq	-0x20(%rax), %rbp
    000002ef: 	callq	clock@PLT # Offset: 751
    000002f4: 	movq	%rax, end_time(%rip)
    000002fb: 	movq	0x28(%rsp), %rdx
    00000300: 	subq	%fs:0x28, %rdx
    00000309: 	jne	.Ltmp747 # Offset: 777
    0000030f: 	subq	start_time(%rip), %rax
    00000316: 	pxor	%xmm0, %xmm0
    0000031a: 	movq	%rbp, %rdi
    0000031d: 	cvtsi2sd	%rax, %xmm0
    00000322: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000032a: 	addq	$0x38, %rsp
    0000032e: 	popq	%rbx
    0000032f: 	popq	%rbp
    00000330: 	popq	%r12
    00000332: 	popq	%r13
    00000334: 	popq	%r14
    00000336: 	popq	%r15
    00000338: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 824
.Ltmp735:
    0000033d: 	movl	$0x1, %esi
    00000342: 	jmp	.Ltmp748 # Offset: 834
.Ltmp737:
    00000347: 	movl	%esi, %eax
    00000349: 	jmp	.Ltmp738 # Offset: 841
.Ltmp744:
    0000034e: 	movq	%rbx, %rdi
    00000351: 	leaq	0x20(%rsp), %rsi
    00000356: 	xorl	%edx, %edx
    00000358: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 856
    0000035d: 	movq	%rax, (%rbx)
    00000360: 	movq	%rax, %rdi
    00000363: 	movq	0x20(%rsp), %rax
    00000368: 	movq	%rax, 0x10(%rbx)
.Ltmp751:
    0000036c: 	movq	%r12, %rdx
    0000036f: 	movq	%rbp, %rsi
    00000372: 	callq	memcpy@PLT # Offset: 882
    00000377: 	movq	0x20(%rsp), %r12
    0000037c: 	movq	(%rbx), %rdi
    0000037f: 	jmp	.Ltmp749 # Offset: 895
.Ltmp741:
    00000384: 	movq	0x18(%rsp), %rsi
    00000389: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000390: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 912
    00000395: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000039c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003aa: 	jne	.Ltmp750 # Offset: 938
.Ltmp746:
    000003b0: 	movq	-0x8(%rdx), %rax
    000003b4: 	addq	$0x200, %rax
    000003ba: 	jmp	.Ltmp750 # Offset: 954
.Ltmp745:
    000003bf: 	testq	%r12, %r12
    000003c2: 	je	.Ltmp749 # Offset: 962
    000003c8: 	jmp	.Ltmp751 # Offset: 968
.Ltmp747:
    000003ca: 	callq	__stack_chk_fail@PLT # Offset: 970
.Ltmp743:
    000003cf: 	leaq	DATAat0x38110(%rip), %rdi
    000003d6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 982
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi19custom_2term_addsubIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj23custom_2term_addsub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 81
  State       : disassembled
  Address     : 0x9d20
  Size        : 0x3eb
  MaxSize     : 0x3f0
  Offset      : 0x9d20
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj23custom_2term_addsub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp752 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r9d
    00000055: 	movl	(%rbx), %r8d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	xorl	%r13d, %r13d
    00000062: 	leaq	DATAat0x381c8(%rip), %r12
    00000069: 	shrl	$0x2, %eax
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	movl	%r15d, %eax
    0000007b: 	andl	$-0x4, %eax
    0000007e: 	movl	%eax, 0x10(%rsp)
    00000082: 	addl	$0x1, %eax
    00000085: 	movl	%eax, 0x14(%rsp)
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp759:
    00000090: 	movl	%r8d, %edx
    00000093: 	leal	(%r9,%r8), %eax
    00000097: 	subl	%r9d, %edx
    0000009a: 	imull	%eax, %edx
    0000009d: 	cmpl	$0x1, %r14d
    000000a1: 	jle	.Ltmp753 # Offset: 161
    000000a7: 	cmpl	$0x2, 0xc(%rsp)
    000000ac: 	jbe	.Ltmp754 # Offset: 172
    000000b2: 	movq	%rbx, %rax
    000000b5: 	pxor	%xmm3, %xmm3
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp755:
    000000c0: 	movdqu	0x4(%rax), %xmm4
    000000c5: 	movdqu	(%rax), %xmm0
    000000c9: 	addq	$0x10, %rax
    000000cd: 	movdqu	-0x10(%rax), %xmm1
    000000d2: 	paddd	%xmm4, %xmm0
    000000d6: 	psubd	%xmm4, %xmm1
    000000da: 	movdqa	%xmm0, %xmm2
    000000de: 	pmuludq	%xmm1, %xmm2
    000000e2: 	psrlq	$0x20, %xmm0
    000000e7: 	psrlq	$0x20, %xmm1
    000000ec: 	pmuludq	%xmm1, %xmm0
    000000f0: 	pshufd	$0x8, %xmm2, %xmm1
    000000f5: 	pshufd	$0x8, %xmm0, %xmm0
    000000fa: 	punpckldq	%xmm0, %xmm1
    000000fe: 	paddd	%xmm1, %xmm3
    00000102: 	cmpq	%rbp, %rax
    00000105: 	jne	.Ltmp755 # Offset: 261
    00000107: 	movdqa	%xmm3, %xmm0
    0000010b: 	psrldq	$0x8, %xmm0
    00000110: 	paddd	%xmm0, %xmm3
    00000114: 	movdqa	%xmm3, %xmm0
    00000118: 	psrldq	$0x4, %xmm0
    0000011d: 	paddd	%xmm0, %xmm3
    00000121: 	movd	%xmm3, %eax
    00000125: 	addl	%eax, %edx
    00000127: 	cmpl	%r15d, 0x10(%rsp)
    0000012c: 	je	.Ltmp753 # Offset: 300
    00000132: 	movl	0x14(%rsp), %eax
.Ltmp767:
    00000136: 	movslq	%eax, %rsi
    00000139: 	leal	0x1(%rax), %edi
    0000013c: 	shlq	$0x2, %rsi
    00000140: 	leaq	(%rbx,%rsi), %rcx
    00000144: 	cmpl	%r15d, %edi
    00000147: 	jge	.Ltmp756 # Offset: 327
    0000014d: 	cmpl	%eax, %r14d
    00000150: 	jle	.Ltmp756 # Offset: 336
    00000156: 	movl	-0x4(%rcx), %edi
    00000159: 	movl	(%rcx), %ecx
    0000015b: 	movl	%edi, %r11d
    0000015e: 	addl	%ecx, %edi
    00000160: 	subl	%ecx, %r11d
    00000163: 	imull	%edi, %r11d
    00000167: 	movl	0x4(%rbx,%rsi), %edi
    0000016b: 	addl	%edx, %r11d
    0000016e: 	movl	%ecx, %edx
    00000170: 	addl	%edi, %ecx
    00000172: 	subl	%edi, %edx
    00000174: 	imull	%ecx, %edx
    00000177: 	leal	0x2(%rax), %ecx
    0000017a: 	addl	%r11d, %edx
    0000017d: 	leal	0x3(%rax), %r11d
    00000181: 	cmpl	%r11d, %r15d
    00000184: 	jle	.Ltmp757 # Offset: 388
    00000186: 	movl	0x8(%rbx,%rsi), %ecx
    0000018a: 	movl	%edi, %r11d
    0000018d: 	subl	%ecx, %r11d
    00000190: 	addl	%ecx, %edi
    00000192: 	imull	%edi, %r11d
    00000196: 	movl	0xc(%rbx,%rsi), %edi
    0000019a: 	addl	%edx, %r11d
    0000019d: 	movl	%ecx, %edx
    0000019f: 	addl	%edi, %ecx
    000001a1: 	subl	%edi, %edx
    000001a3: 	imull	%ecx, %edx
    000001a6: 	leal	0x4(%rax), %ecx
    000001a9: 	addl	%r11d, %edx
    000001ac: 	leal	0x5(%rax), %r11d
    000001b0: 	cmpl	%r11d, %r15d
    000001b3: 	jle	.Ltmp757 # Offset: 435
    000001b5: 	movl	0x10(%rbx,%rsi), %ecx
    000001b9: 	movl	0x14(%rbx,%rsi), %esi
    000001bd: 	leal	(%rcx,%rdi), %r11d
    000001c1: 	subl	%ecx, %edi
    000001c3: 	imull	%edi, %r11d
    000001c7: 	addl	%edx, %r11d
    000001ca: 	movl	%ecx, %edx
    000001cc: 	addl	%esi, %ecx
    000001ce: 	subl	%esi, %edx
    000001d0: 	imull	%ecx, %edx
    000001d3: 	leal	0x6(%rax), %ecx
    000001d6: 	addl	%r11d, %edx
.Ltmp757:
    000001d9: 	movslq	%ecx, %rax
    000001dc: 	leaq	(,%rax,4), %rdi
    000001e4: 	movl	(%rbx,%rax,4), %eax
    000001e7: 	movl	-0x4(%rbx,%rdi), %esi
    000001eb: 	movl	%esi, %r11d
    000001ee: 	addl	%eax, %esi
    000001f0: 	subl	%eax, %r11d
    000001f3: 	imull	%esi, %r11d
    000001f7: 	leal	0x1(%rcx), %esi
    000001fa: 	addl	%r11d, %edx
    000001fd: 	cmpl	%esi, %r14d
    00000200: 	jle	.Ltmp753 # Offset: 512
    00000202: 	movl	0x4(%rbx,%rdi), %esi
    00000206: 	movl	%eax, %r11d
    00000209: 	addl	$0x2, %ecx
    0000020c: 	subl	%esi, %r11d
    0000020f: 	addl	%esi, %eax
    00000211: 	imull	%eax, %r11d
    00000215: 	addl	%r11d, %edx
    00000218: 	cmpl	%ecx, %r14d
    0000021b: 	jle	.Ltmp753 # Offset: 539
    0000021d: 	movl	0x8(%rbx,%rdi), %ecx
    00000221: 	leal	(%rsi,%rcx), %eax
    00000224: 	subl	%ecx, %esi
    00000226: 	imull	%esi, %eax
    00000229: 	addl	%eax, %edx
.Ltmp753:
    0000022b: 	testl	%edx, %edx
    0000022d: 	je	.Ltmp758 # Offset: 557
    0000022f: 	movl	current_test(%rip), %edx
    00000235: 	movq	%r12, %rsi
    00000238: 	movl	$0x1, %edi
    0000023d: 	xorl	%eax, %eax
    0000023f: 	addl	$0x1, %r13d
    00000243: 	callq	__printf_chk@PLT # Offset: 579
    00000248: 	movl	iterations(%rip), %r10d
    0000024f: 	cmpl	%r13d, %r10d
    00000252: 	jle	.Ltmp752 # Offset: 594
    00000254: 	movl	0x4(%rbx), %r9d
    00000258: 	movl	(%rbx), %r8d
    0000025b: 	jmp	.Ltmp759 # Offset: 603
.Ltmp758:
    00000260: 	addl	$0x1, %r13d
    00000264: 	cmpl	%r10d, %r13d
    00000267: 	jl	.Ltmp759 # Offset: 615
.Ltmp752:
    0000026d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000274: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000027b: 	subq	$0x20, %rax
    0000027f: 	cmpq	%rax, %rbx
    00000282: 	je	.Ltmp760 # Offset: 642
    00000288: 	movq	0x18(%rsp), %rax
    0000028d: 	leaq	0x10(%rbx), %rdi
    00000291: 	movq	%rdi, (%rbx)
    00000294: 	movq	(%rax), %rbp
    00000297: 	movq	0x8(%rax), %r12
    0000029b: 	movq	%rbp, %rax
    0000029e: 	addq	%r12, %rax
    000002a1: 	je	.Ltmp761 # Offset: 673
    000002a3: 	testq	%rbp, %rbp
    000002a6: 	je	.Ltmp762 # Offset: 678
.Ltmp761:
    000002ac: 	movq	%r12, 0x20(%rsp)
    000002b1: 	cmpq	$0xf, %r12
    000002b5: 	ja	.Ltmp763 # Offset: 693
    000002bb: 	cmpq	$0x1, %r12
    000002bf: 	jne	.Ltmp764 # Offset: 703
    000002c5: 	movzbl	(%rbp), %eax
    000002c9: 	movb	%al, 0x10(%rbx)
.Ltmp768:
    000002cc: 	movq	%r12, 0x8(%rbx)
    000002d0: 	movb	$0x0, (%rdi,%r12)
    000002d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e3: 	addq	$0x20, %rax
    000002e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002f5: 	je	.Ltmp765 # Offset: 757
.Ltmp769:
    000002fb: 	movq	-0x20(%rax), %rbp
    000002ff: 	callq	clock@PLT # Offset: 767
    00000304: 	movq	%rax, end_time(%rip)
    0000030b: 	movq	0x28(%rsp), %rdx
    00000310: 	subq	%fs:0x28, %rdx
    00000319: 	jne	.Ltmp766 # Offset: 793
    0000031f: 	subq	start_time(%rip), %rax
    00000326: 	pxor	%xmm0, %xmm0
    0000032a: 	movq	%rbp, %rdi
    0000032d: 	cvtsi2sd	%rax, %xmm0
    00000332: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000033a: 	addq	$0x38, %rsp
    0000033e: 	popq	%rbx
    0000033f: 	popq	%rbp
    00000340: 	popq	%r12
    00000342: 	popq	%r13
    00000344: 	popq	%r14
    00000346: 	popq	%r15
    00000348: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 840
.Ltmp754:
    0000034d: 	movl	$0x1, %eax
    00000352: 	jmp	.Ltmp767 # Offset: 850
.Ltmp756:
    00000357: 	movl	%eax, %ecx
    00000359: 	jmp	.Ltmp757 # Offset: 857
.Ltmp763:
    0000035e: 	movq	%rbx, %rdi
    00000361: 	leaq	0x20(%rsp), %rsi
    00000366: 	xorl	%edx, %edx
    00000368: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 872
    0000036d: 	movq	%rax, (%rbx)
    00000370: 	movq	%rax, %rdi
    00000373: 	movq	0x20(%rsp), %rax
    00000378: 	movq	%rax, 0x10(%rbx)
.Ltmp770:
    0000037c: 	movq	%r12, %rdx
    0000037f: 	movq	%rbp, %rsi
    00000382: 	callq	memcpy@PLT # Offset: 898
    00000387: 	movq	0x20(%rsp), %r12
    0000038c: 	movq	(%rbx), %rdi
    0000038f: 	jmp	.Ltmp768 # Offset: 911
.Ltmp760:
    00000394: 	movq	0x18(%rsp), %rsi
    00000399: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 928
    000003a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003ba: 	jne	.Ltmp769 # Offset: 954
.Ltmp765:
    000003c0: 	movq	-0x8(%rdx), %rax
    000003c4: 	addq	$0x200, %rax
    000003ca: 	jmp	.Ltmp769 # Offset: 970
.Ltmp764:
    000003cf: 	testq	%r12, %r12
    000003d2: 	je	.Ltmp768 # Offset: 978
    000003d8: 	jmp	.Ltmp770 # Offset: 984
.Ltmp766:
    000003da: 	callq	__stack_chk_fail@PLT # Offset: 986
.Ltmp762:
    000003df: 	leaq	DATAat0x38110(%rip), %rdi
    000003e6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 998
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj23custom_2term_addsub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt19custom_2term_addsubItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 82
  State       : disassembled
  Address     : 0xa110
  Size        : 0x3e2
  MaxSize     : 0x3f0
  Offset      : 0xa110
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt19custom_2term_addsubItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp771 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, (%rsp)
    00000059: 	movl	%r14d, %eax
    0000005c: 	movl	%r14d, %r15d
    0000005f: 	shrl	$0x3, %eax
    00000062: 	andl	$-0x8, %r15d
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%rbx,%rax), %rbp
    00000072: 	leal	0x1(%r15), %eax
    00000076: 	movl	%eax, 0x4(%rsp)
.Ltmp779:
    0000007a: 	movzwl	0x2(%rbx), %r9d
    0000007f: 	movzwl	(%rbx), %r8d
.Ltmp787:
    00000083: 	movl	%r8d, %edx
    00000086: 	movl	%r9d, %eax
    00000089: 	imull	%r8d, %edx
    0000008d: 	imull	%r9d, %eax
    00000091: 	subl	%eax, %edx
    00000093: 	cmpl	$0x1, %r12d
    00000097: 	jle	.Ltmp772 # Offset: 151
    0000009d: 	cmpl	$0x6, (%rsp)
    000000a1: 	jbe	.Ltmp773 # Offset: 161
    000000a7: 	movq	%rbx, %rax
    000000aa: 	pxor	%xmm2, %xmm2
    000000ae: 	nop # Size: 2
.Ltmp774:
    000000b0: 	movdqu	(%rax), %xmm0
    000000b4: 	movdqu	0x2(%rax), %xmm1
    000000b9: 	addq	$0x10, %rax
    000000bd: 	pmullw	%xmm0, %xmm0
    000000c1: 	pmullw	%xmm1, %xmm1
    000000c5: 	psubw	%xmm1, %xmm0
    000000c9: 	paddw	%xmm0, %xmm2
    000000cd: 	cmpq	%rbp, %rax
    000000d0: 	jne	.Ltmp774 # Offset: 208
    000000d2: 	movdqa	%xmm2, %xmm0
    000000d6: 	psrldq	$0x8, %xmm0
    000000db: 	paddw	%xmm0, %xmm2
    000000df: 	movdqa	%xmm2, %xmm0
    000000e3: 	psrldq	$0x4, %xmm0
    000000e8: 	paddw	%xmm0, %xmm2
    000000ec: 	movdqa	%xmm2, %xmm0
    000000f0: 	psrldq	$0x2, %xmm0
    000000f5: 	paddw	%xmm0, %xmm2
    000000f9: 	pextrw	$0x0, %xmm2, %eax
    000000fe: 	addl	%eax, %edx
    00000100: 	cmpl	%r14d, %r15d
    00000103: 	je	.Ltmp772 # Offset: 259
    00000109: 	movl	0x4(%rsp), %eax
    0000010d: 	movl	%r15d, %edi
.Ltmp788:
    00000110: 	movl	%r12d, %esi
    00000113: 	subl	%edi, %esi
    00000115: 	leal	-0x1(%rsi), %ecx
    00000118: 	subl	$0x2, %esi
    0000011b: 	cmpl	$0x2, %esi
    0000011e: 	jbe	.Ltmp775 # Offset: 286
    00000120: 	leal	0x1(%rdi), %esi
    00000123: 	movq	(%rbx,%rsi,2), %xmm1
    00000128: 	movq	-0x2(%rbx,%rsi,2), %xmm0
    0000012e: 	pmullw	%xmm1, %xmm1
    00000132: 	pmullw	%xmm0, %xmm0
    00000136: 	psubw	%xmm1, %xmm0
    0000013a: 	pextrw	$0x0, %xmm0, %esi
    0000013f: 	pextrw	$0x1, %xmm0, %edi
    00000144: 	addl	%edi, %esi
    00000146: 	addl	%edx, %esi
    00000148: 	pextrw	$0x2, %xmm0, %edx
    0000014d: 	addl	%edx, %esi
    0000014f: 	pextrw	$0x3, %xmm0, %edx
    00000154: 	addl	%esi, %edx
    00000156: 	movl	%ecx, %esi
    00000158: 	andl	$-0x4, %esi
    0000015b: 	addl	%esi, %eax
    0000015d: 	cmpl	%esi, %ecx
    0000015f: 	je	.Ltmp772 # Offset: 351
.Ltmp775:
    00000165: 	movslq	%eax, %rsi
    00000168: 	leal	0x1(%rax), %ecx
    0000016b: 	addq	%rsi, %rsi
    0000016e: 	leaq	(%rbx,%rsi), %rdi
    00000172: 	cmpl	%r14d, %ecx
    00000175: 	jge	.Ltmp776 # Offset: 373
    0000017b: 	cmpl	%eax, %r12d
    0000017e: 	jle	.Ltmp776 # Offset: 382
    00000184: 	movzwl	-0x2(%rdi), %ecx
    00000188: 	movzwl	0x2(%rbx,%rsi), %edi
    0000018d: 	leal	0x3(%rax), %r11d
    00000191: 	imull	%ecx, %ecx
    00000194: 	imull	%edi, %edi
    00000197: 	addl	%edx, %ecx
    00000199: 	subl	%edi, %ecx
    0000019b: 	movl	%ecx, %edx
    0000019d: 	leal	0x2(%rax), %ecx
    000001a0: 	cmpl	%r11d, %r14d
    000001a3: 	jle	.Ltmp777 # Offset: 419
    000001a5: 	movzwl	0x6(%rbx,%rsi), %ecx
    000001aa: 	imull	%ecx, %ecx
    000001ad: 	movl	%ecx, %r11d
    000001b0: 	leal	0x4(%rax), %ecx
    000001b3: 	subl	%r11d, %edx
    000001b6: 	addl	%edi, %edx
    000001b8: 	leal	0x5(%rax), %edi
    000001bb: 	cmpl	%edi, %r14d
    000001be: 	jle	.Ltmp777 # Offset: 446
    000001c0: 	movzwl	0xa(%rbx,%rsi), %ecx
    000001c5: 	imull	%ecx, %ecx
    000001c8: 	subl	%ecx, %edx
    000001ca: 	leal	0x6(%rax), %ecx
    000001cd: 	addl	%r11d, %edx
.Ltmp777:
    000001d0: 	movslq	%ecx, %rax
    000001d3: 	leaq	(%rax,%rax), %rdi
    000001d7: 	movzwl	(%rbx,%rax,2), %eax
    000001db: 	movzwl	-0x2(%rbx,%rdi), %esi
    000001e0: 	imull	%eax, %eax
    000001e3: 	imull	%esi, %esi
    000001e6: 	subl	%eax, %esi
    000001e8: 	addl	%esi, %edx
    000001ea: 	leal	0x1(%rcx), %esi
    000001ed: 	cmpl	%esi, %r12d
    000001f0: 	jle	.Ltmp772 # Offset: 496
    000001f2: 	movzwl	0x2(%rbx,%rdi), %esi
    000001f7: 	addl	$0x2, %ecx
    000001fa: 	imull	%esi, %esi
    000001fd: 	subl	%esi, %eax
    000001ff: 	addl	%eax, %edx
    00000201: 	cmpl	%ecx, %r12d
    00000204: 	jle	.Ltmp772 # Offset: 516
    00000206: 	movzwl	0x4(%rbx,%rdi), %eax
    0000020b: 	imull	%eax, %eax
    0000020e: 	subl	%eax, %esi
    00000210: 	addl	%esi, %edx
.Ltmp772:
    00000212: 	testw	%dx, %dx
    00000215: 	je	.Ltmp778 # Offset: 533
    0000021b: 	movl	current_test(%rip), %edx
    00000221: 	leaq	DATAat0x381c8(%rip), %rsi
    00000228: 	movl	$0x1, %edi
    0000022d: 	xorl	%eax, %eax
    0000022f: 	addl	$0x1, %r13d
    00000233: 	callq	__printf_chk@PLT # Offset: 563
    00000238: 	movl	iterations(%rip), %r10d
    0000023f: 	cmpl	%r13d, %r10d
    00000242: 	jg	.Ltmp779 # Offset: 578
.Ltmp771:
    00000248: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000024f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000256: 	subq	$0x20, %rax
    0000025a: 	cmpq	%rax, %rbx
    0000025d: 	je	.Ltmp780 # Offset: 605
    00000263: 	movq	0x8(%rsp), %rax
    00000268: 	leaq	0x10(%rbx), %rdi
    0000026c: 	movq	%rdi, (%rbx)
    0000026f: 	movq	(%rax), %rbp
    00000272: 	movq	0x8(%rax), %r12
    00000276: 	movq	%rbp, %rax
    00000279: 	addq	%r12, %rax
    0000027c: 	je	.Ltmp781 # Offset: 636
    0000027e: 	testq	%rbp, %rbp
    00000281: 	je	.Ltmp782 # Offset: 641
.Ltmp781:
    00000287: 	movq	%r12, 0x10(%rsp)
    0000028c: 	cmpq	$0xf, %r12
    00000290: 	ja	.Ltmp783 # Offset: 656
    00000296: 	cmpq	$0x1, %r12
    0000029a: 	jne	.Ltmp784 # Offset: 666
    000002a0: 	movzbl	(%rbp), %eax
    000002a4: 	movb	%al, 0x10(%rbx)
.Ltmp789:
    000002a7: 	movq	%r12, 0x8(%rbx)
    000002ab: 	movb	$0x0, (%rdi,%r12)
    000002b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002be: 	addq	$0x20, %rax
    000002c2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002c9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002d0: 	je	.Ltmp785 # Offset: 720
.Ltmp790:
    000002d6: 	movq	-0x20(%rax), %rbp
    000002da: 	callq	clock@PLT # Offset: 730
    000002df: 	movq	%rax, end_time(%rip)
    000002e6: 	movq	0x18(%rsp), %rdx
    000002eb: 	subq	%fs:0x28, %rdx
    000002f4: 	jne	.Ltmp786 # Offset: 756
    000002fa: 	subq	start_time(%rip), %rax
    00000301: 	pxor	%xmm0, %xmm0
    00000305: 	movq	%rbp, %rdi
    00000308: 	cvtsi2sd	%rax, %xmm0
    0000030d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000315: 	addq	$0x28, %rsp
    00000319: 	popq	%rbx
    0000031a: 	popq	%rbp
    0000031b: 	popq	%r12
    0000031d: 	popq	%r13
    0000031f: 	popq	%r14
    00000321: 	popq	%r15
    00000323: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 803
    00000328: 	nopl	(%rax,%rax) # Size: 8
.Ltmp778:
    00000330: 	addl	$0x1, %r13d
    00000334: 	cmpl	%r10d, %r13d
    00000337: 	jl	.Ltmp787 # Offset: 823
    0000033d: 	jmp	.Ltmp771 # Offset: 829
.Ltmp773:
    00000342: 	xorl	%edi, %edi
    00000344: 	movl	$0x1, %eax
    00000349: 	jmp	.Ltmp788 # Offset: 841
.Ltmp783:
    0000034e: 	movq	%rbx, %rdi
    00000351: 	leaq	0x10(%rsp), %rsi
    00000356: 	xorl	%edx, %edx
    00000358: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 856
    0000035d: 	movq	%rax, (%rbx)
    00000360: 	movq	%rax, %rdi
    00000363: 	movq	0x10(%rsp), %rax
    00000368: 	movq	%rax, 0x10(%rbx)
.Ltmp791:
    0000036c: 	movq	%r12, %rdx
    0000036f: 	movq	%rbp, %rsi
    00000372: 	callq	memcpy@PLT # Offset: 882
    00000377: 	movq	0x10(%rsp), %r12
    0000037c: 	movq	(%rbx), %rdi
    0000037f: 	jmp	.Ltmp789 # Offset: 895
.Ltmp776:
    00000384: 	movl	%eax, %ecx
    00000386: 	jmp	.Ltmp777 # Offset: 902
.Ltmp780:
    0000038b: 	movq	0x8(%rsp), %rsi
    00000390: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000397: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 919
    0000039c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003a3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b1: 	jne	.Ltmp790 # Offset: 945
.Ltmp785:
    000003b7: 	movq	-0x8(%rdx), %rax
    000003bb: 	addq	$0x200, %rax
    000003c1: 	jmp	.Ltmp790 # Offset: 961
.Ltmp784:
    000003c6: 	testq	%r12, %r12
    000003c9: 	je	.Ltmp789 # Offset: 969
    000003cf: 	jmp	.Ltmp791 # Offset: 975
.Ltmp786:
    000003d1: 	callq	__stack_chk_fail@PLT # Offset: 977
.Ltmp782:
    000003d6: 	leaq	DATAat0x38110(%rip), %rdi
    000003dd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 989
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt19custom_2term_addsubItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi23custom_2term_addsub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 83
  State       : disassembled
  Address     : 0xa500
  Size        : 0x3eb
  MaxSize     : 0x3f0
  Offset      : 0xa500
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi23custom_2term_addsub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp792 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r9d
    00000055: 	movl	(%rbx), %r8d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	xorl	%r13d, %r13d
    00000062: 	leaq	DATAat0x381c8(%rip), %r12
    00000069: 	shrl	$0x2, %eax
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	movl	%r15d, %eax
    0000007b: 	andl	$-0x4, %eax
    0000007e: 	movl	%eax, 0x10(%rsp)
    00000082: 	addl	$0x1, %eax
    00000085: 	movl	%eax, 0x14(%rsp)
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp799:
    00000090: 	movl	%r8d, %edx
    00000093: 	leal	(%r9,%r8), %eax
    00000097: 	subl	%r9d, %edx
    0000009a: 	imull	%eax, %edx
    0000009d: 	cmpl	$0x1, %r14d
    000000a1: 	jle	.Ltmp793 # Offset: 161
    000000a7: 	cmpl	$0x2, 0xc(%rsp)
    000000ac: 	jbe	.Ltmp794 # Offset: 172
    000000b2: 	movq	%rbx, %rax
    000000b5: 	pxor	%xmm3, %xmm3
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp795:
    000000c0: 	movdqu	0x4(%rax), %xmm4
    000000c5: 	movdqu	(%rax), %xmm0
    000000c9: 	addq	$0x10, %rax
    000000cd: 	movdqu	-0x10(%rax), %xmm1
    000000d2: 	paddd	%xmm4, %xmm0
    000000d6: 	psubd	%xmm4, %xmm1
    000000da: 	movdqa	%xmm0, %xmm2
    000000de: 	pmuludq	%xmm1, %xmm2
    000000e2: 	psrlq	$0x20, %xmm0
    000000e7: 	psrlq	$0x20, %xmm1
    000000ec: 	pmuludq	%xmm1, %xmm0
    000000f0: 	pshufd	$0x8, %xmm2, %xmm1
    000000f5: 	pshufd	$0x8, %xmm0, %xmm0
    000000fa: 	punpckldq	%xmm0, %xmm1
    000000fe: 	paddd	%xmm1, %xmm3
    00000102: 	cmpq	%rbp, %rax
    00000105: 	jne	.Ltmp795 # Offset: 261
    00000107: 	movdqa	%xmm3, %xmm0
    0000010b: 	psrldq	$0x8, %xmm0
    00000110: 	paddd	%xmm0, %xmm3
    00000114: 	movdqa	%xmm3, %xmm0
    00000118: 	psrldq	$0x4, %xmm0
    0000011d: 	paddd	%xmm0, %xmm3
    00000121: 	movd	%xmm3, %eax
    00000125: 	addl	%eax, %edx
    00000127: 	cmpl	%r15d, 0x10(%rsp)
    0000012c: 	je	.Ltmp793 # Offset: 300
    00000132: 	movl	0x14(%rsp), %eax
.Ltmp807:
    00000136: 	movslq	%eax, %rsi
    00000139: 	leal	0x1(%rax), %edi
    0000013c: 	shlq	$0x2, %rsi
    00000140: 	leaq	(%rbx,%rsi), %rcx
    00000144: 	cmpl	%r15d, %edi
    00000147: 	jge	.Ltmp796 # Offset: 327
    0000014d: 	cmpl	%eax, %r14d
    00000150: 	jle	.Ltmp796 # Offset: 336
    00000156: 	movl	-0x4(%rcx), %edi
    00000159: 	movl	(%rcx), %ecx
    0000015b: 	movl	%edi, %r11d
    0000015e: 	addl	%ecx, %edi
    00000160: 	subl	%ecx, %r11d
    00000163: 	imull	%edi, %r11d
    00000167: 	movl	0x4(%rbx,%rsi), %edi
    0000016b: 	addl	%edx, %r11d
    0000016e: 	movl	%ecx, %edx
    00000170: 	addl	%edi, %ecx
    00000172: 	subl	%edi, %edx
    00000174: 	imull	%ecx, %edx
    00000177: 	leal	0x2(%rax), %ecx
    0000017a: 	addl	%r11d, %edx
    0000017d: 	leal	0x3(%rax), %r11d
    00000181: 	cmpl	%r11d, %r15d
    00000184: 	jle	.Ltmp797 # Offset: 388
    00000186: 	movl	0x8(%rbx,%rsi), %ecx
    0000018a: 	movl	%edi, %r11d
    0000018d: 	subl	%ecx, %r11d
    00000190: 	addl	%ecx, %edi
    00000192: 	imull	%edi, %r11d
    00000196: 	movl	0xc(%rbx,%rsi), %edi
    0000019a: 	addl	%edx, %r11d
    0000019d: 	movl	%ecx, %edx
    0000019f: 	addl	%edi, %ecx
    000001a1: 	subl	%edi, %edx
    000001a3: 	imull	%ecx, %edx
    000001a6: 	leal	0x4(%rax), %ecx
    000001a9: 	addl	%r11d, %edx
    000001ac: 	leal	0x5(%rax), %r11d
    000001b0: 	cmpl	%r11d, %r15d
    000001b3: 	jle	.Ltmp797 # Offset: 435
    000001b5: 	movl	0x10(%rbx,%rsi), %ecx
    000001b9: 	movl	0x14(%rbx,%rsi), %esi
    000001bd: 	leal	(%rcx,%rdi), %r11d
    000001c1: 	subl	%ecx, %edi
    000001c3: 	imull	%edi, %r11d
    000001c7: 	addl	%edx, %r11d
    000001ca: 	movl	%ecx, %edx
    000001cc: 	addl	%esi, %ecx
    000001ce: 	subl	%esi, %edx
    000001d0: 	imull	%ecx, %edx
    000001d3: 	leal	0x6(%rax), %ecx
    000001d6: 	addl	%r11d, %edx
.Ltmp797:
    000001d9: 	movslq	%ecx, %rax
    000001dc: 	leaq	(,%rax,4), %rdi
    000001e4: 	movl	(%rbx,%rax,4), %eax
    000001e7: 	movl	-0x4(%rbx,%rdi), %esi
    000001eb: 	movl	%esi, %r11d
    000001ee: 	addl	%eax, %esi
    000001f0: 	subl	%eax, %r11d
    000001f3: 	imull	%esi, %r11d
    000001f7: 	leal	0x1(%rcx), %esi
    000001fa: 	addl	%r11d, %edx
    000001fd: 	cmpl	%esi, %r14d
    00000200: 	jle	.Ltmp793 # Offset: 512
    00000202: 	movl	0x4(%rbx,%rdi), %esi
    00000206: 	movl	%eax, %r11d
    00000209: 	addl	$0x2, %ecx
    0000020c: 	subl	%esi, %r11d
    0000020f: 	addl	%esi, %eax
    00000211: 	imull	%eax, %r11d
    00000215: 	addl	%r11d, %edx
    00000218: 	cmpl	%ecx, %r14d
    0000021b: 	jle	.Ltmp793 # Offset: 539
    0000021d: 	movl	0x8(%rbx,%rdi), %ecx
    00000221: 	leal	(%rsi,%rcx), %eax
    00000224: 	subl	%ecx, %esi
    00000226: 	imull	%esi, %eax
    00000229: 	addl	%eax, %edx
.Ltmp793:
    0000022b: 	testl	%edx, %edx
    0000022d: 	je	.Ltmp798 # Offset: 557
    0000022f: 	movl	current_test(%rip), %edx
    00000235: 	movq	%r12, %rsi
    00000238: 	movl	$0x1, %edi
    0000023d: 	xorl	%eax, %eax
    0000023f: 	addl	$0x1, %r13d
    00000243: 	callq	__printf_chk@PLT # Offset: 579
    00000248: 	movl	iterations(%rip), %r10d
    0000024f: 	cmpl	%r10d, %r13d
    00000252: 	jge	.Ltmp792 # Offset: 594
    00000254: 	movl	0x4(%rbx), %r9d
    00000258: 	movl	(%rbx), %r8d
    0000025b: 	jmp	.Ltmp799 # Offset: 603
.Ltmp798:
    00000260: 	addl	$0x1, %r13d
    00000264: 	cmpl	%r10d, %r13d
    00000267: 	jl	.Ltmp799 # Offset: 615
.Ltmp792:
    0000026d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000274: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000027b: 	subq	$0x20, %rax
    0000027f: 	cmpq	%rax, %rbx
    00000282: 	je	.Ltmp800 # Offset: 642
    00000288: 	movq	0x18(%rsp), %rax
    0000028d: 	leaq	0x10(%rbx), %rdi
    00000291: 	movq	%rdi, (%rbx)
    00000294: 	movq	(%rax), %rbp
    00000297: 	movq	0x8(%rax), %r12
    0000029b: 	movq	%rbp, %rax
    0000029e: 	addq	%r12, %rax
    000002a1: 	je	.Ltmp801 # Offset: 673
    000002a3: 	testq	%rbp, %rbp
    000002a6: 	je	.Ltmp802 # Offset: 678
.Ltmp801:
    000002ac: 	movq	%r12, 0x20(%rsp)
    000002b1: 	cmpq	$0xf, %r12
    000002b5: 	ja	.Ltmp803 # Offset: 693
    000002bb: 	cmpq	$0x1, %r12
    000002bf: 	jne	.Ltmp804 # Offset: 703
    000002c5: 	movzbl	(%rbp), %eax
    000002c9: 	movb	%al, 0x10(%rbx)
.Ltmp808:
    000002cc: 	movq	%r12, 0x8(%rbx)
    000002d0: 	movb	$0x0, (%rdi,%r12)
    000002d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e3: 	addq	$0x20, %rax
    000002e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002f5: 	je	.Ltmp805 # Offset: 757
.Ltmp809:
    000002fb: 	movq	-0x20(%rax), %rbp
    000002ff: 	callq	clock@PLT # Offset: 767
    00000304: 	movq	%rax, end_time(%rip)
    0000030b: 	movq	0x28(%rsp), %rdx
    00000310: 	subq	%fs:0x28, %rdx
    00000319: 	jne	.Ltmp806 # Offset: 793
    0000031f: 	subq	start_time(%rip), %rax
    00000326: 	pxor	%xmm0, %xmm0
    0000032a: 	movq	%rbp, %rdi
    0000032d: 	cvtsi2sd	%rax, %xmm0
    00000332: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000033a: 	addq	$0x38, %rsp
    0000033e: 	popq	%rbx
    0000033f: 	popq	%rbp
    00000340: 	popq	%r12
    00000342: 	popq	%r13
    00000344: 	popq	%r14
    00000346: 	popq	%r15
    00000348: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 840
.Ltmp794:
    0000034d: 	movl	$0x1, %eax
    00000352: 	jmp	.Ltmp807 # Offset: 850
.Ltmp796:
    00000357: 	movl	%eax, %ecx
    00000359: 	jmp	.Ltmp797 # Offset: 857
.Ltmp803:
    0000035e: 	movq	%rbx, %rdi
    00000361: 	leaq	0x20(%rsp), %rsi
    00000366: 	xorl	%edx, %edx
    00000368: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 872
    0000036d: 	movq	%rax, (%rbx)
    00000370: 	movq	%rax, %rdi
    00000373: 	movq	0x20(%rsp), %rax
    00000378: 	movq	%rax, 0x10(%rbx)
.Ltmp810:
    0000037c: 	movq	%r12, %rdx
    0000037f: 	movq	%rbp, %rsi
    00000382: 	callq	memcpy@PLT # Offset: 898
    00000387: 	movq	0x20(%rsp), %r12
    0000038c: 	movq	(%rbx), %rdi
    0000038f: 	jmp	.Ltmp808 # Offset: 911
.Ltmp800:
    00000394: 	movq	0x18(%rsp), %rsi
    00000399: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 928
    000003a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003ba: 	jne	.Ltmp809 # Offset: 954
.Ltmp805:
    000003c0: 	movq	-0x8(%rdx), %rax
    000003c4: 	addq	$0x200, %rax
    000003ca: 	jmp	.Ltmp809 # Offset: 970
.Ltmp804:
    000003cf: 	testq	%r12, %r12
    000003d2: 	je	.Ltmp808 # Offset: 978
    000003d8: 	jmp	.Ltmp810 # Offset: 984
.Ltmp806:
    000003da: 	callq	__stack_chk_fail@PLT # Offset: 986
.Ltmp802:
    000003df: 	leaq	DATAat0x38110(%rip), %rdi
    000003e6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 998
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi23custom_2term_addsub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj19custom_2term_addsubIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 84
  State       : disassembled
  Address     : 0xa8f0
  Size        : 0x3b3
  MaxSize     : 0x3c0
  Offset      : 0xa8f0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj19custom_2term_addsubIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp811 # Offset: 67
    00000049: 	leal	-0x1(%r14), %r15d
    0000004d: 	leal	-0x2(%r14), %eax
    00000051: 	movl	0x4(%rbx), %r9d
    00000055: 	movl	(%rbx), %r8d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%r15d, %eax
    0000005f: 	xorl	%r13d, %r13d
    00000062: 	leaq	DATAat0x381c8(%rip), %r12
    00000069: 	shrl	$0x2, %eax
    0000006c: 	subl	$0x1, %eax
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	movl	%r15d, %eax
    0000007b: 	andl	$-0x4, %eax
    0000007e: 	movl	%eax, 0x10(%rsp)
    00000082: 	addl	$0x1, %eax
    00000085: 	movl	%eax, 0x14(%rsp)
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp818:
    00000090: 	movl	%r8d, %edx
    00000093: 	movl	%r9d, %eax
    00000096: 	imull	%r8d, %edx
    0000009a: 	imull	%r9d, %eax
    0000009e: 	subl	%eax, %edx
    000000a0: 	cmpl	$0x1, %r14d
    000000a4: 	jle	.Ltmp812 # Offset: 164
    000000aa: 	cmpl	$0x2, 0xc(%rsp)
    000000af: 	jbe	.Ltmp813 # Offset: 175
    000000b5: 	movq	%rbx, %rax
    000000b8: 	pxor	%xmm3, %xmm3
    000000bc: 	nopl	(%rax) # Size: 4
.Ltmp814:
    000000c0: 	movdqu	(%rax), %xmm1
    000000c4: 	movdqu	0x4(%rax), %xmm0
    000000c9: 	addq	$0x10, %rax
    000000cd: 	movdqa	%xmm1, %xmm2
    000000d1: 	pmuludq	%xmm1, %xmm2
    000000d5: 	psrlq	$0x20, %xmm1
    000000da: 	pmuludq	%xmm1, %xmm1
    000000de: 	pshufd	$0x8, %xmm2, %xmm2
    000000e3: 	pshufd	$0x8, %xmm1, %xmm1
    000000e8: 	punpckldq	%xmm1, %xmm2
    000000ec: 	movdqa	%xmm0, %xmm1
    000000f0: 	pmuludq	%xmm0, %xmm1
    000000f4: 	psrlq	$0x20, %xmm0
    000000f9: 	pmuludq	%xmm0, %xmm0
    000000fd: 	pshufd	$0x8, %xmm1, %xmm1
    00000102: 	pshufd	$0x8, %xmm0, %xmm0
    00000107: 	punpckldq	%xmm0, %xmm1
    0000010b: 	psubd	%xmm1, %xmm2
    0000010f: 	paddd	%xmm2, %xmm3
    00000113: 	cmpq	%rbp, %rax
    00000116: 	jne	.Ltmp814 # Offset: 278
    00000118: 	movdqa	%xmm3, %xmm0
    0000011c: 	psrldq	$0x8, %xmm0
    00000121: 	paddd	%xmm0, %xmm3
    00000125: 	movdqa	%xmm3, %xmm0
    00000129: 	psrldq	$0x4, %xmm0
    0000012e: 	paddd	%xmm0, %xmm3
    00000132: 	movd	%xmm3, %eax
    00000136: 	addl	%eax, %edx
    00000138: 	cmpl	%r15d, 0x10(%rsp)
    0000013d: 	je	.Ltmp812 # Offset: 317
    00000143: 	movl	0x14(%rsp), %eax
.Ltmp826:
    00000147: 	movslq	%eax, %rsi
    0000014a: 	leal	0x1(%rax), %ecx
    0000014d: 	shlq	$0x2, %rsi
    00000151: 	leaq	(%rbx,%rsi), %rdi
    00000155: 	cmpl	%r15d, %ecx
    00000158: 	jge	.Ltmp815 # Offset: 344
    0000015e: 	cmpl	%eax, %r14d
    00000161: 	jle	.Ltmp815 # Offset: 353
    00000167: 	movl	-0x4(%rdi), %ecx
    0000016a: 	movl	0x4(%rbx,%rsi), %edi
    0000016e: 	leal	0x3(%rax), %r11d
    00000172: 	imull	%ecx, %ecx
    00000175: 	imull	%edi, %edi
    00000178: 	addl	%edx, %ecx
    0000017a: 	subl	%edi, %ecx
    0000017c: 	movl	%ecx, %edx
    0000017e: 	leal	0x2(%rax), %ecx
    00000181: 	cmpl	%r11d, %r15d
    00000184: 	jle	.Ltmp816 # Offset: 388
    00000186: 	movl	0xc(%rbx,%rsi), %ecx
    0000018a: 	imull	%ecx, %ecx
    0000018d: 	subl	%ecx, %edx
    0000018f: 	movl	%ecx, %r11d
    00000192: 	leal	0x4(%rax), %ecx
    00000195: 	addl	%edi, %edx
    00000197: 	leal	0x5(%rax), %edi
    0000019a: 	cmpl	%edi, %r15d
    0000019d: 	jle	.Ltmp816 # Offset: 413
    0000019f: 	movl	0x14(%rbx,%rsi), %ecx
    000001a3: 	imull	%ecx, %ecx
    000001a6: 	subl	%ecx, %edx
    000001a8: 	leal	0x6(%rax), %ecx
    000001ab: 	addl	%r11d, %edx
.Ltmp816:
    000001ae: 	movslq	%ecx, %rax
    000001b1: 	leaq	(,%rax,4), %rdi
    000001b9: 	movl	(%rbx,%rax,4), %eax
    000001bc: 	movl	-0x4(%rbx,%rdi), %esi
    000001c0: 	imull	%eax, %eax
    000001c3: 	imull	%esi, %esi
    000001c6: 	subl	%eax, %esi
    000001c8: 	addl	%esi, %edx
    000001ca: 	leal	0x1(%rcx), %esi
    000001cd: 	cmpl	%esi, %r14d
    000001d0: 	jle	.Ltmp812 # Offset: 464
    000001d2: 	movl	0x4(%rbx,%rdi), %esi
    000001d6: 	addl	$0x2, %ecx
    000001d9: 	imull	%esi, %esi
    000001dc: 	subl	%esi, %eax
    000001de: 	addl	%eax, %edx
    000001e0: 	cmpl	%ecx, %r14d
    000001e3: 	jle	.Ltmp812 # Offset: 483
    000001e5: 	movl	0x8(%rbx,%rdi), %eax
    000001e9: 	imull	%eax, %eax
    000001ec: 	subl	%eax, %esi
    000001ee: 	addl	%esi, %edx
.Ltmp812:
    000001f0: 	testl	%edx, %edx
    000001f2: 	je	.Ltmp817 # Offset: 498
    000001f4: 	movl	current_test(%rip), %edx
    000001fa: 	movq	%r12, %rsi
    000001fd: 	movl	$0x1, %edi
    00000202: 	xorl	%eax, %eax
    00000204: 	addl	$0x1, %r13d
    00000208: 	callq	__printf_chk@PLT # Offset: 520
    0000020d: 	movl	iterations(%rip), %r10d
    00000214: 	cmpl	%r13d, %r10d
    00000217: 	jle	.Ltmp811 # Offset: 535
    00000219: 	movl	0x4(%rbx), %r9d
    0000021d: 	movl	(%rbx), %r8d
    00000220: 	jmp	.Ltmp818 # Offset: 544
    00000225: 	nopl	(%rax) # Size: 3
.Ltmp817:
    00000228: 	addl	$0x1, %r13d
    0000022c: 	cmpl	%r10d, %r13d
    0000022f: 	jl	.Ltmp818 # Offset: 559
.Ltmp811:
    00000235: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000243: 	subq	$0x20, %rax
    00000247: 	cmpq	%rax, %rbx
    0000024a: 	je	.Ltmp819 # Offset: 586
    00000250: 	movq	0x18(%rsp), %rax
    00000255: 	leaq	0x10(%rbx), %rdi
    00000259: 	movq	%rdi, (%rbx)
    0000025c: 	movq	(%rax), %rbp
    0000025f: 	movq	0x8(%rax), %r12
    00000263: 	movq	%rbp, %rax
    00000266: 	addq	%r12, %rax
    00000269: 	je	.Ltmp820 # Offset: 617
    0000026b: 	testq	%rbp, %rbp
    0000026e: 	je	.Ltmp821 # Offset: 622
.Ltmp820:
    00000274: 	movq	%r12, 0x20(%rsp)
    00000279: 	cmpq	$0xf, %r12
    0000027d: 	ja	.Ltmp822 # Offset: 637
    00000283: 	cmpq	$0x1, %r12
    00000287: 	jne	.Ltmp823 # Offset: 647
    0000028d: 	movzbl	(%rbp), %eax
    00000291: 	movb	%al, 0x10(%rbx)
.Ltmp827:
    00000294: 	movq	%r12, 0x8(%rbx)
    00000298: 	movb	$0x0, (%rdi,%r12)
    0000029d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ab: 	addq	$0x20, %rax
    000002af: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000002bd: 	je	.Ltmp824 # Offset: 701
.Ltmp828:
    000002c3: 	movq	-0x20(%rax), %rbp
    000002c7: 	callq	clock@PLT # Offset: 711
    000002cc: 	movq	%rax, end_time(%rip)
    000002d3: 	movq	0x28(%rsp), %rdx
    000002d8: 	subq	%fs:0x28, %rdx
    000002e1: 	jne	.Ltmp825 # Offset: 737
    000002e7: 	subq	start_time(%rip), %rax
    000002ee: 	pxor	%xmm0, %xmm0
    000002f2: 	movq	%rbp, %rdi
    000002f5: 	cvtsi2sd	%rax, %xmm0
    000002fa: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000302: 	addq	$0x38, %rsp
    00000306: 	popq	%rbx
    00000307: 	popq	%rbp
    00000308: 	popq	%r12
    0000030a: 	popq	%r13
    0000030c: 	popq	%r14
    0000030e: 	popq	%r15
    00000310: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 784
.Ltmp813:
    00000315: 	movl	$0x1, %eax
    0000031a: 	jmp	.Ltmp826 # Offset: 794
.Ltmp815:
    0000031f: 	movl	%eax, %ecx
    00000321: 	jmp	.Ltmp816 # Offset: 801
.Ltmp822:
    00000326: 	movq	%rbx, %rdi
    00000329: 	leaq	0x20(%rsp), %rsi
    0000032e: 	xorl	%edx, %edx
    00000330: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 816
    00000335: 	movq	%rax, (%rbx)
    00000338: 	movq	%rax, %rdi
    0000033b: 	movq	0x20(%rsp), %rax
    00000340: 	movq	%rax, 0x10(%rbx)
.Ltmp829:
    00000344: 	movq	%r12, %rdx
    00000347: 	movq	%rbp, %rsi
    0000034a: 	callq	memcpy@PLT # Offset: 842
    0000034f: 	movq	0x20(%rsp), %r12
    00000354: 	movq	(%rbx), %rdi
    00000357: 	jmp	.Ltmp827 # Offset: 855
.Ltmp819:
    0000035c: 	movq	0x18(%rsp), %rsi
    00000361: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000368: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 872
    0000036d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000374: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000037b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000382: 	jne	.Ltmp828 # Offset: 898
.Ltmp824:
    00000388: 	movq	-0x8(%rdx), %rax
    0000038c: 	addq	$0x200, %rax
    00000392: 	jmp	.Ltmp828 # Offset: 914
.Ltmp823:
    00000397: 	testq	%r12, %r12
    0000039a: 	je	.Ltmp827 # Offset: 922
    000003a0: 	jmp	.Ltmp829 # Offset: 928
.Ltmp825:
    000003a2: 	callq	__stack_chk_fail@PLT # Offset: 930
.Ltmp821:
    000003a7: 	leaq	DATAat0x38110(%rip), %rdi
    000003ae: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 942
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj19custom_2term_addsubIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm19custom_2term_addsubImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0xacb0
  Size        : 0x29a
  MaxSize     : 0x2a0
  Offset      : 0xacb0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm19custom_2term_addsubImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r9d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r9d, %r9d
    00000041: 	jle	.Ltmp830 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %r8
    0000004f: 	movq	(%r13), %rdi
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	leaq	DATAat0x381c8(%rip), %rbp
    0000005f: 	leaq	0x5(%rax,%rax), %rbx
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp836:
    00000068: 	movq	%rdi, %rsi
    0000006b: 	movq	%r8, %rdx
    0000006e: 	movq	%rdi, %rax
    00000071: 	imulq	%rdi, %rsi
    00000075: 	imulq	%r8, %rdx
    00000079: 	subq	%rdx, %rsi
    0000007c: 	cmpl	$0x1, %r14d
    00000080: 	jle	.Ltmp831 # Offset: 128
    00000082: 	cmpl	$0x3, %r14d
    00000086: 	jle	.Ltmp832 # Offset: 134
    0000008c: 	movl	$0x3, %ecx
.Ltmp833:
    00000091: 	imulq	%rax, %rax
    00000095: 	movq	%rax, %rdx
    00000098: 	movq	-0x8(%r13,%rcx,8), %rax
    0000009d: 	movq	%rax, %r10
    000000a0: 	imulq	%rax, %r10
    000000a4: 	subq	%r10, %rdx
    000000a7: 	addq	%rdx, %rsi
    000000aa: 	movslq	%ecx, %rdx
    000000ad: 	addq	$0x2, %rcx
    000000b1: 	cmpq	%rcx, %rbx
    000000b4: 	jne	.Ltmp833 # Offset: 180
    000000b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp834:
    000000c0: 	movq	(%r13,%rdx,8), %rcx
    000000c5: 	movq	-0x8(%r13,%rdx,8), %rax
    000000ca: 	addq	$0x1, %rdx
    000000ce: 	imulq	%rax, %rax
    000000d2: 	imulq	%rcx, %rcx
    000000d6: 	subq	%rcx, %rax
    000000d9: 	addq	%rax, %rsi
    000000dc: 	cmpl	%edx, %r14d
    000000df: 	jg	.Ltmp834 # Offset: 223
.Ltmp831:
    000000e1: 	testq	%rsi, %rsi
    000000e4: 	je	.Ltmp835 # Offset: 228
    000000e6: 	movl	current_test(%rip), %edx
    000000ec: 	movq	%rbp, %rsi
    000000ef: 	movl	$0x1, %edi
    000000f4: 	xorl	%eax, %eax
    000000f6: 	addl	$0x1, %r15d
    000000fa: 	callq	__printf_chk@PLT # Offset: 250
    000000ff: 	movl	iterations(%rip), %r9d
    00000106: 	cmpl	%r9d, %r15d
    00000109: 	jge	.Ltmp830 # Offset: 265
    0000010b: 	movq	0x8(%r13), %r8
    0000010f: 	movq	(%r13), %rdi
    00000113: 	jmp	.Ltmp836 # Offset: 275
    00000118: 	nopl	(%rax,%rax) # Size: 8
.Ltmp835:
    00000120: 	addl	$0x1, %r15d
    00000124: 	cmpl	%r9d, %r15d
    00000127: 	jl	.Ltmp836 # Offset: 295
.Ltmp830:
    0000012d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000013b: 	subq	$0x20, %rax
    0000013f: 	cmpq	%rax, %rbx
    00000142: 	je	.Ltmp837 # Offset: 322
    00000148: 	leaq	0x10(%rbx), %rdi
    0000014c: 	movq	%rdi, (%rbx)
    0000014f: 	movq	(%r12), %rbp
    00000153: 	movq	0x8(%r12), %r12
    00000158: 	movq	%rbp, %rax
    0000015b: 	addq	%r12, %rax
    0000015e: 	je	.Ltmp838 # Offset: 350
    00000160: 	testq	%rbp, %rbp
    00000163: 	je	.Ltmp839 # Offset: 355
.Ltmp838:
    00000169: 	movq	%r12, (%rsp)
    0000016d: 	cmpq	$0xf, %r12
    00000171: 	ja	.Ltmp840 # Offset: 369
    00000177: 	cmpq	$0x1, %r12
    0000017b: 	jne	.Ltmp841 # Offset: 379
    00000181: 	movzbl	(%rbp), %eax
    00000185: 	movb	%al, 0x10(%rbx)
.Ltmp844:
    00000188: 	movq	%r12, 0x8(%rbx)
    0000018c: 	movb	$0x0, (%rdi,%r12)
    00000191: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000198: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000019f: 	addq	$0x20, %rax
    000001a3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001aa: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001b1: 	je	.Ltmp842 # Offset: 433
.Ltmp845:
    000001b7: 	movq	-0x20(%rax), %rbp
    000001bb: 	callq	clock@PLT # Offset: 443
    000001c0: 	movq	%rax, end_time(%rip)
    000001c7: 	movq	0x8(%rsp), %rdx
    000001cc: 	subq	%fs:0x28, %rdx
    000001d5: 	jne	.Ltmp843 # Offset: 469
    000001db: 	subq	start_time(%rip), %rax
    000001e2: 	pxor	%xmm0, %xmm0
    000001e6: 	movq	%rbp, %rdi
    000001e9: 	cvtsi2sd	%rax, %xmm0
    000001ee: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001f6: 	addq	$0x18, %rsp
    000001fa: 	popq	%rbx
    000001fb: 	popq	%rbp
    000001fc: 	popq	%r12
    000001fe: 	popq	%r13
    00000200: 	popq	%r14
    00000202: 	popq	%r15
    00000204: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 516
.Ltmp832:
    00000209: 	movl	$0x1, %edx
    0000020e: 	jmp	.Ltmp834 # Offset: 526
.Ltmp840:
    00000213: 	movq	%rbx, %rdi
    00000216: 	movq	%rsp, %rsi
    00000219: 	xorl	%edx, %edx
    0000021b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 539
    00000220: 	movq	%rax, (%rbx)
    00000223: 	movq	%rax, %rdi
    00000226: 	movq	(%rsp), %rax
    0000022a: 	movq	%rax, 0x10(%rbx)
.Ltmp846:
    0000022e: 	movq	%r12, %rdx
    00000231: 	movq	%rbp, %rsi
    00000234: 	callq	memcpy@PLT # Offset: 564
    00000239: 	movq	(%rsp), %r12
    0000023d: 	movq	(%rbx), %rdi
    00000240: 	jmp	.Ltmp844 # Offset: 576
.Ltmp837:
    00000245: 	movq	%r12, %rsi
    00000248: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000024f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 591
    00000254: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000262: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000269: 	jne	.Ltmp845 # Offset: 617
.Ltmp842:
    0000026f: 	movq	-0x8(%rdx), %rax
    00000273: 	addq	$0x200, %rax
    00000279: 	jmp	.Ltmp845 # Offset: 633
.Ltmp841:
    0000027e: 	testq	%r12, %r12
    00000281: 	je	.Ltmp844 # Offset: 641
    00000287: 	jmp	.Ltmp846 # Offset: 647
.Ltmp843:
    00000289: 	callq	__stack_chk_fail@PLT # Offset: 649
.Ltmp839:
    0000028e: 	leaq	DATAat0x38110(%rip), %rdi
    00000295: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 661
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm19custom_2term_addsubImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIs23custom_2term_addsub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0xaf50
  Size        : 0x442
  MaxSize     : 0x450
  Offset      : 0xaf50
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs23custom_2term_addsub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r11d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r11d, %r11d
    00000043: 	jle	.Ltmp847 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, 0xc(%rsp)
    0000005a: 	movl	%r14d, %eax
    0000005d: 	shrl	$0x3, %eax
    00000060: 	subl	$0x1, %eax
    00000063: 	shlq	$0x4, %rax
    00000067: 	leaq	0x10(%rbx,%rax), %rbp
    0000006c: 	movl	%r14d, %eax
    0000006f: 	andl	$-0x8, %eax
    00000072: 	movl	%eax, 0x10(%rsp)
    00000076: 	addl	$0x1, %eax
    00000079: 	movl	%eax, 0x14(%rsp)
.Ltmp855:
    0000007d: 	movzwl	(%rbx), %r10d
    00000081: 	movzwl	0x2(%rbx), %r9d
.Ltmp863:
    00000086: 	movl	%r10d, %edx
    00000089: 	leal	(%r10,%r9), %eax
    0000008d: 	subl	%r9d, %edx
    00000090: 	imull	%eax, %edx
    00000093: 	movl	%edx, %eax
    00000095: 	cmpl	$0x1, %r12d
    00000099: 	jle	.Ltmp848 # Offset: 153
    0000009f: 	cmpl	$0x6, 0xc(%rsp)
    000000a4: 	jbe	.Ltmp849 # Offset: 164
    000000aa: 	movq	%rbx, %rax
    000000ad: 	pxor	%xmm2, %xmm2
    000000b1: 	nopl	(%rax) # Size: 7
.Ltmp850:
    000000b8: 	movdqu	(%rax), %xmm3
    000000bc: 	movdqu	0x2(%rax), %xmm1
    000000c1: 	addq	$0x10, %rax
    000000c5: 	movdqu	-0xe(%rax), %xmm4
    000000ca: 	movdqa	%xmm3, %xmm0
    000000ce: 	paddw	%xmm3, %xmm1
    000000d2: 	psubw	%xmm4, %xmm0
    000000d6: 	pmullw	%xmm1, %xmm0
    000000da: 	paddw	%xmm0, %xmm2
    000000de: 	cmpq	%rbp, %rax
    000000e1: 	jne	.Ltmp850 # Offset: 225
    000000e3: 	movdqa	%xmm2, %xmm0
    000000e7: 	movl	0x10(%rsp), %esi
    000000eb: 	psrldq	$0x8, %xmm0
    000000f0: 	paddw	%xmm0, %xmm2
    000000f4: 	movdqa	%xmm2, %xmm0
    000000f8: 	psrldq	$0x4, %xmm0
    000000fd: 	paddw	%xmm0, %xmm2
    00000101: 	movdqa	%xmm2, %xmm0
    00000105: 	psrldq	$0x2, %xmm0
    0000010a: 	paddw	%xmm0, %xmm2
    0000010e: 	pextrw	$0x0, %xmm2, %eax
    00000113: 	addl	%edx, %eax
    00000115: 	cmpl	%r14d, %esi
    00000118: 	je	.Ltmp848 # Offset: 280
    0000011e: 	movl	0x14(%rsp), %edx
    00000122: 	movl	%esi, %edi
.Ltmp864:
    00000124: 	movl	%r12d, %ecx
    00000127: 	subl	%edi, %ecx
    00000129: 	leal	-0x1(%rcx), %esi
    0000012c: 	subl	$0x2, %ecx
    0000012f: 	cmpl	$0x2, %ecx
    00000132: 	jbe	.Ltmp851 # Offset: 306
    00000134: 	leal	0x1(%rdi), %ecx
    00000137: 	movq	-0x2(%rbx,%rcx,2), %xmm1
    0000013d: 	movq	(%rbx,%rcx,2), %xmm2
    00000142: 	movdqa	%xmm1, %xmm0
    00000146: 	paddw	%xmm2, %xmm1
    0000014a: 	psubw	%xmm2, %xmm0
    0000014e: 	pmullw	%xmm1, %xmm0
    00000152: 	pextrw	$0x1, %xmm0, %edi
    00000157: 	pextrw	$0x0, %xmm0, %ecx
    0000015c: 	addl	%edi, %ecx
    0000015e: 	pextrw	$0x2, %xmm0, %edi
    00000163: 	addl	%edi, %ecx
    00000165: 	pextrw	$0x3, %xmm0, %edi
    0000016a: 	addl	%edi, %ecx
    0000016c: 	addl	%ecx, %eax
    0000016e: 	movl	%esi, %ecx
    00000170: 	andl	$-0x4, %ecx
    00000173: 	addl	%ecx, %edx
    00000175: 	cmpl	%ecx, %esi
    00000177: 	je	.Ltmp848 # Offset: 375
.Ltmp851:
    0000017d: 	movslq	%edx, %rsi
    00000180: 	leal	0x1(%rdx), %edi
    00000183: 	addq	%rsi, %rsi
    00000186: 	leaq	(%rbx,%rsi), %rcx
    0000018a: 	cmpl	%r14d, %edi
    0000018d: 	jge	.Ltmp852 # Offset: 397
    00000193: 	cmpl	%edx, %r12d
    00000196: 	jle	.Ltmp852 # Offset: 406
    0000019c: 	movzwl	-0x2(%rcx), %r15d
    000001a1: 	movzwl	(%rcx), %ecx
    000001a4: 	movzwl	0x2(%rbx,%rsi), %r8d
    000001aa: 	movl	%r15d, %edi
    000001ad: 	addl	%ecx, %r15d
    000001b0: 	subl	%ecx, %edi
    000001b2: 	imull	%r15d, %edi
    000001b6: 	addl	%eax, %edi
    000001b8: 	movl	%ecx, %eax
    000001ba: 	addl	%r8d, %ecx
    000001bd: 	subl	%r8d, %eax
    000001c0: 	imull	%ecx, %eax
    000001c3: 	leal	0x2(%rdx), %ecx
    000001c6: 	addl	%edi, %eax
    000001c8: 	leal	0x3(%rdx), %edi
    000001cb: 	cmpl	%edi, %r14d
    000001ce: 	jle	.Ltmp853 # Offset: 462
    000001d0: 	movzwl	0x4(%rbx,%rsi), %ecx
    000001d5: 	movl	%r8d, %edi
    000001d8: 	movzwl	0x6(%rbx,%rsi), %r15d
    000001de: 	subl	%ecx, %edi
    000001e0: 	addl	%ecx, %r8d
    000001e3: 	imull	%r8d, %edi
    000001e7: 	addl	%eax, %edi
    000001e9: 	movl	%ecx, %eax
    000001eb: 	addl	%r15d, %ecx
    000001ee: 	subl	%r15d, %eax
    000001f1: 	imull	%ecx, %eax
    000001f4: 	leal	0x4(%rdx), %ecx
    000001f7: 	addl	%edi, %eax
    000001f9: 	leal	0x5(%rdx), %edi
    000001fc: 	cmpl	%edi, %r14d
    000001ff: 	jle	.Ltmp853 # Offset: 511
    00000201: 	movzwl	0x8(%rbx,%rsi), %ecx
    00000206: 	movzwl	0xa(%rbx,%rsi), %edi
    0000020b: 	leal	(%rcx,%r15), %esi
    0000020f: 	subl	%ecx, %r15d
    00000212: 	imull	%r15d, %esi
    00000216: 	addl	%eax, %esi
    00000218: 	movl	%ecx, %eax
    0000021a: 	addl	%edi, %ecx
    0000021c: 	subl	%edi, %eax
    0000021e: 	imull	%ecx, %eax
    00000221: 	leal	0x6(%rdx), %ecx
    00000224: 	addl	%esi, %eax
.Ltmp853:
    00000226: 	movslq	%ecx, %rdx
    00000229: 	leaq	(%rdx,%rdx), %rdi
    0000022d: 	movzwl	(%rbx,%rdx,2), %edx
    00000231: 	movzwl	-0x2(%rbx,%rdi), %esi
    00000236: 	movl	%esi, %r8d
    00000239: 	addl	%edx, %esi
    0000023b: 	subl	%edx, %r8d
    0000023e: 	imull	%esi, %r8d
    00000242: 	leal	0x1(%rcx), %esi
    00000245: 	addl	%r8d, %eax
    00000248: 	cmpl	%esi, %r12d
    0000024b: 	jle	.Ltmp848 # Offset: 587
    0000024d: 	movzwl	0x2(%rbx,%rdi), %esi
    00000252: 	movl	%edx, %r8d
    00000255: 	addl	$0x2, %ecx
    00000258: 	subl	%esi, %r8d
    0000025b: 	addl	%esi, %edx
    0000025d: 	imull	%edx, %r8d
    00000261: 	addl	%r8d, %eax
    00000264: 	cmpl	%ecx, %r12d
    00000267: 	jle	.Ltmp848 # Offset: 615
    00000269: 	movzwl	0x4(%rbx,%rdi), %ecx
    0000026e: 	leal	(%rcx,%rsi), %edx
    00000271: 	subl	%ecx, %esi
    00000273: 	imull	%esi, %edx
    00000276: 	addl	%edx, %eax
.Ltmp848:
    00000278: 	testw	%ax, %ax
    0000027b: 	je	.Ltmp854 # Offset: 635
    00000281: 	movl	current_test(%rip), %edx
    00000287: 	leaq	DATAat0x381c8(%rip), %rsi
    0000028e: 	movl	$0x1, %edi
    00000293: 	xorl	%eax, %eax
    00000295: 	addl	$0x1, %r13d
    00000299: 	callq	__printf_chk@PLT # Offset: 665
    0000029e: 	movl	iterations(%rip), %r11d
    000002a5: 	cmpl	%r13d, %r11d
    000002a8: 	jg	.Ltmp855 # Offset: 680
.Ltmp847:
    000002ae: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002bc: 	subq	$0x20, %rax
    000002c0: 	cmpq	%rax, %rbx
    000002c3: 	je	.Ltmp856 # Offset: 707
    000002c9: 	movq	0x18(%rsp), %rax
    000002ce: 	leaq	0x10(%rbx), %rdi
    000002d2: 	movq	%rdi, (%rbx)
    000002d5: 	movq	(%rax), %rbp
    000002d8: 	movq	0x8(%rax), %r12
    000002dc: 	movq	%rbp, %rax
    000002df: 	addq	%r12, %rax
    000002e2: 	je	.Ltmp857 # Offset: 738
    000002e4: 	testq	%rbp, %rbp
    000002e7: 	je	.Ltmp858 # Offset: 743
.Ltmp857:
    000002ed: 	movq	%r12, 0x20(%rsp)
    000002f2: 	cmpq	$0xf, %r12
    000002f6: 	ja	.Ltmp859 # Offset: 758
    000002fc: 	cmpq	$0x1, %r12
    00000300: 	jne	.Ltmp860 # Offset: 768
    00000306: 	movzbl	(%rbp), %eax
    0000030a: 	movb	%al, 0x10(%rbx)
.Ltmp865:
    0000030d: 	movq	%r12, 0x8(%rbx)
    00000311: 	movb	$0x0, (%rdi,%r12)
    00000316: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000031d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000324: 	addq	$0x20, %rax
    00000328: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000336: 	je	.Ltmp861 # Offset: 822
.Ltmp866:
    0000033c: 	movq	-0x20(%rax), %rbp
    00000340: 	callq	clock@PLT # Offset: 832
    00000345: 	movq	%rax, end_time(%rip)
    0000034c: 	movq	0x28(%rsp), %rdx
    00000351: 	subq	%fs:0x28, %rdx
    0000035a: 	jne	.Ltmp862 # Offset: 858
    00000360: 	subq	start_time(%rip), %rax
    00000367: 	pxor	%xmm0, %xmm0
    0000036b: 	movq	%rbp, %rdi
    0000036e: 	cvtsi2sd	%rax, %xmm0
    00000373: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000037b: 	addq	$0x38, %rsp
    0000037f: 	popq	%rbx
    00000380: 	popq	%rbp
    00000381: 	popq	%r12
    00000383: 	popq	%r13
    00000385: 	popq	%r14
    00000387: 	popq	%r15
    00000389: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 905
    0000038e: 	nop # Size: 2
.Ltmp854:
    00000390: 	addl	$0x1, %r13d
    00000394: 	cmpl	%r11d, %r13d
    00000397: 	jl	.Ltmp863 # Offset: 919
    0000039d: 	jmp	.Ltmp847 # Offset: 925
.Ltmp849:
    000003a2: 	xorl	%edi, %edi
    000003a4: 	movl	$0x1, %edx
    000003a9: 	jmp	.Ltmp864 # Offset: 937
.Ltmp859:
    000003ae: 	movq	%rbx, %rdi
    000003b1: 	leaq	0x20(%rsp), %rsi
    000003b6: 	xorl	%edx, %edx
    000003b8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 952
    000003bd: 	movq	%rax, (%rbx)
    000003c0: 	movq	%rax, %rdi
    000003c3: 	movq	0x20(%rsp), %rax
    000003c8: 	movq	%rax, 0x10(%rbx)
.Ltmp867:
    000003cc: 	movq	%r12, %rdx
    000003cf: 	movq	%rbp, %rsi
    000003d2: 	callq	memcpy@PLT # Offset: 978
    000003d7: 	movq	0x20(%rsp), %r12
    000003dc: 	movq	(%rbx), %rdi
    000003df: 	jmp	.Ltmp865 # Offset: 991
.Ltmp852:
    000003e4: 	movl	%edx, %ecx
    000003e6: 	jmp	.Ltmp853 # Offset: 998
.Ltmp856:
    000003eb: 	movq	0x18(%rsp), %rsi
    000003f0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1015
    000003fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000403: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000040a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000411: 	jne	.Ltmp866 # Offset: 1041
.Ltmp861:
    00000417: 	movq	-0x8(%rdx), %rax
    0000041b: 	addq	$0x200, %rax
    00000421: 	jmp	.Ltmp866 # Offset: 1057
.Ltmp860:
    00000426: 	testq	%r12, %r12
    00000429: 	je	.Ltmp865 # Offset: 1065
    0000042f: 	jmp	.Ltmp867 # Offset: 1071
.Ltmp862:
    00000431: 	callq	__stack_chk_fail@PLT # Offset: 1073
.Ltmp858:
    00000436: 	leaq	DATAat0x38110(%rip), %rdi
    0000043d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1085
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs23custom_2term_addsub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm23custom_2term_addsub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 87
  State       : disassembled
  Address     : 0xb3a0
  Size        : 0x2a2
  MaxSize     : 0x2b0
  Offset      : 0xb3a0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm23custom_2term_addsub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r8d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r8d, %r8d
    00000041: 	jle	.Ltmp868 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %rdi
    0000004f: 	movq	(%r13), %rsi
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	leaq	DATAat0x381c8(%rip), %rbp
    0000005f: 	leaq	0x5(%rax,%rax), %rbx
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp874:
    00000068: 	movq	%rsi, %rcx
    0000006b: 	leaq	(%rdi,%rsi), %rax
    0000006f: 	movq	%rsi, %rdx
    00000072: 	subq	%rdi, %rcx
    00000075: 	imulq	%rax, %rcx
    00000079: 	cmpl	$0x1, %r14d
    0000007d: 	jle	.Ltmp869 # Offset: 125
    0000007f: 	cmpl	$0x3, %r14d
    00000083: 	jle	.Ltmp870 # Offset: 131
    00000089: 	movl	$0x3, %r9d
.Ltmp871:
    0000008f: 	movq	-0x10(%r13,%r9,8), %rax
    00000094: 	movq	%rdx, %r11
    00000097: 	subq	%rax, %r11
    0000009a: 	addq	%rax, %rdx
    0000009d: 	imulq	%rdx, %r11
    000000a1: 	movq	-0x8(%r13,%r9,8), %rdx
    000000a6: 	leaq	(%rax,%rdx), %r10
    000000aa: 	subq	%rdx, %rax
    000000ad: 	imulq	%rax, %r10
    000000b1: 	movslq	%r9d, %rax
    000000b4: 	addq	$0x2, %r9
    000000b8: 	addq	%r11, %r10
    000000bb: 	addq	%r10, %rcx
    000000be: 	cmpq	%r9, %rbx
    000000c1: 	jne	.Ltmp871 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp872:
    000000c8: 	movq	-0x8(%r13,%rax,8), %rdx
    000000cd: 	movq	(%r13,%rax,8), %r9
    000000d2: 	addq	%rdx, %r9
    000000d5: 	subq	(%r13,%rax,8), %rdx
    000000da: 	addq	$0x1, %rax
    000000de: 	imulq	%r9, %rdx
    000000e2: 	addq	%rdx, %rcx
    000000e5: 	cmpl	%eax, %r14d
    000000e8: 	jg	.Ltmp872 # Offset: 232
.Ltmp869:
    000000ea: 	testq	%rcx, %rcx
    000000ed: 	je	.Ltmp873 # Offset: 237
    000000ef: 	movl	current_test(%rip), %edx
    000000f5: 	movq	%rbp, %rsi
    000000f8: 	movl	$0x1, %edi
    000000fd: 	xorl	%eax, %eax
    000000ff: 	addl	$0x1, %r15d
    00000103: 	callq	__printf_chk@PLT # Offset: 259
    00000108: 	movl	iterations(%rip), %r8d
    0000010f: 	cmpl	%r8d, %r15d
    00000112: 	jge	.Ltmp868 # Offset: 274
    00000114: 	movq	0x8(%r13), %rdi
    00000118: 	movq	(%r13), %rsi
    0000011c: 	jmp	.Ltmp874 # Offset: 284
    00000121: 	nopl	(%rax) # Size: 7
.Ltmp873:
    00000128: 	addl	$0x1, %r15d
    0000012c: 	cmpl	%r8d, %r15d
    0000012f: 	jl	.Ltmp874 # Offset: 303
.Ltmp868:
    00000135: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000013c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000143: 	subq	$0x20, %rax
    00000147: 	cmpq	%rax, %rbx
    0000014a: 	je	.Ltmp875 # Offset: 330
    00000150: 	leaq	0x10(%rbx), %rdi
    00000154: 	movq	%rdi, (%rbx)
    00000157: 	movq	(%r12), %rbp
    0000015b: 	movq	0x8(%r12), %r12
    00000160: 	movq	%rbp, %rax
    00000163: 	addq	%r12, %rax
    00000166: 	je	.Ltmp876 # Offset: 358
    00000168: 	testq	%rbp, %rbp
    0000016b: 	je	.Ltmp877 # Offset: 363
.Ltmp876:
    00000171: 	movq	%r12, (%rsp)
    00000175: 	cmpq	$0xf, %r12
    00000179: 	ja	.Ltmp878 # Offset: 377
    0000017f: 	cmpq	$0x1, %r12
    00000183: 	jne	.Ltmp879 # Offset: 387
    00000189: 	movzbl	(%rbp), %eax
    0000018d: 	movb	%al, 0x10(%rbx)
.Ltmp882:
    00000190: 	movq	%r12, 0x8(%rbx)
    00000194: 	movb	$0x0, (%rdi,%r12)
    00000199: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001a7: 	addq	$0x20, %rax
    000001ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001b2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001b9: 	je	.Ltmp880 # Offset: 441
.Ltmp883:
    000001bf: 	movq	-0x20(%rax), %rbp
    000001c3: 	callq	clock@PLT # Offset: 451
    000001c8: 	movq	%rax, end_time(%rip)
    000001cf: 	movq	0x8(%rsp), %rdx
    000001d4: 	subq	%fs:0x28, %rdx
    000001dd: 	jne	.Ltmp881 # Offset: 477
    000001e3: 	subq	start_time(%rip), %rax
    000001ea: 	pxor	%xmm0, %xmm0
    000001ee: 	movq	%rbp, %rdi
    000001f1: 	cvtsi2sd	%rax, %xmm0
    000001f6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001fe: 	addq	$0x18, %rsp
    00000202: 	popq	%rbx
    00000203: 	popq	%rbp
    00000204: 	popq	%r12
    00000206: 	popq	%r13
    00000208: 	popq	%r14
    0000020a: 	popq	%r15
    0000020c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 524
.Ltmp870:
    00000211: 	movl	$0x1, %eax
    00000216: 	jmp	.Ltmp872 # Offset: 534
.Ltmp878:
    0000021b: 	movq	%rbx, %rdi
    0000021e: 	movq	%rsp, %rsi
    00000221: 	xorl	%edx, %edx
    00000223: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 547
    00000228: 	movq	%rax, (%rbx)
    0000022b: 	movq	%rax, %rdi
    0000022e: 	movq	(%rsp), %rax
    00000232: 	movq	%rax, 0x10(%rbx)
.Ltmp884:
    00000236: 	movq	%r12, %rdx
    00000239: 	movq	%rbp, %rsi
    0000023c: 	callq	memcpy@PLT # Offset: 572
    00000241: 	movq	(%rsp), %r12
    00000245: 	movq	(%rbx), %rdi
    00000248: 	jmp	.Ltmp882 # Offset: 584
.Ltmp875:
    0000024d: 	movq	%r12, %rsi
    00000250: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000257: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 599
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000263: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000271: 	jne	.Ltmp883 # Offset: 625
.Ltmp880:
    00000277: 	movq	-0x8(%rdx), %rax
    0000027b: 	addq	$0x200, %rax
    00000281: 	jmp	.Ltmp883 # Offset: 641
.Ltmp879:
    00000286: 	testq	%r12, %r12
    00000289: 	je	.Ltmp882 # Offset: 649
    0000028f: 	jmp	.Ltmp884 # Offset: 655
.Ltmp881:
    00000291: 	callq	__stack_chk_fail@PLT # Offset: 657
.Ltmp877:
    00000296: 	leaq	DATAat0x38110(%rip), %rdi
    0000029d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 669
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm23custom_2term_addsub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt16custom_2term_xorItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 88
  State       : disassembled
  Address     : 0xb650
  Size        : 0x442
  MaxSize     : 0x450
  Offset      : 0xb650
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt16custom_2term_xorItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x18(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r10d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r10d, %r10d
    00000043: 	jle	.Ltmp885 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, (%rsp)
    00000059: 	movl	%r14d, %eax
    0000005c: 	movl	%r14d, %r15d
    0000005f: 	shrl	$0x3, %eax
    00000062: 	andl	$-0x8, %r15d
    00000066: 	subl	$0x1, %eax
    00000069: 	shlq	$0x4, %rax
    0000006d: 	leaq	0x10(%rbx,%rax), %rbp
    00000072: 	leal	0x1(%r15), %eax
    00000076: 	movl	%eax, 0x4(%rsp)
.Ltmp893:
    0000007a: 	movzwl	0x2(%rbx), %r9d
    0000007f: 	movzwl	(%rbx), %r8d
.Ltmp901:
    00000083: 	movl	%r9d, %edx
    00000086: 	movl	%r9d, %eax
    00000089: 	andl	%r8d, %edx
    0000008c: 	orl	%r8d, %eax
    0000008f: 	notl	%edx
    00000091: 	andl	%eax, %edx
    00000093: 	cmpl	$0x1, %r12d
    00000097: 	jle	.Ltmp886 # Offset: 151
    0000009d: 	cmpl	$0x6, (%rsp)
    000000a1: 	jbe	.Ltmp887 # Offset: 161
    000000a7: 	movq	%rbx, %rax
    000000aa: 	pxor	%xmm2, %xmm2
    000000ae: 	nop # Size: 2
.Ltmp888:
    000000b0: 	movdqu	0x2(%rax), %xmm3
    000000b5: 	movdqu	(%rax), %xmm1
    000000b9: 	addq	$0x10, %rax
    000000bd: 	movdqu	-0x10(%rax), %xmm0
    000000c2: 	pand	%xmm3, %xmm1
    000000c6: 	por	%xmm3, %xmm0
    000000ca: 	pandn	%xmm0, %xmm1
    000000ce: 	paddw	%xmm1, %xmm2
    000000d2: 	cmpq	%rbp, %rax
    000000d5: 	jne	.Ltmp888 # Offset: 213
    000000d7: 	movdqa	%xmm2, %xmm0
    000000db: 	psrldq	$0x8, %xmm0
    000000e0: 	paddw	%xmm0, %xmm2
    000000e4: 	movdqa	%xmm2, %xmm0
    000000e8: 	psrldq	$0x4, %xmm0
    000000ed: 	paddw	%xmm0, %xmm2
    000000f1: 	movdqa	%xmm2, %xmm0
    000000f5: 	psrldq	$0x2, %xmm0
    000000fa: 	paddw	%xmm0, %xmm2
    000000fe: 	pextrw	$0x0, %xmm2, %eax
    00000103: 	addl	%eax, %edx
    00000105: 	cmpl	%r14d, %r15d
    00000108: 	je	.Ltmp886 # Offset: 264
    0000010e: 	movl	0x4(%rsp), %ecx
    00000112: 	movl	%r15d, %edi
.Ltmp902:
    00000115: 	movl	%r12d, %eax
    00000118: 	subl	%edi, %eax
    0000011a: 	leal	-0x1(%rax), %esi
    0000011d: 	subl	$0x2, %eax
    00000120: 	cmpl	$0x2, %eax
    00000123: 	jbe	.Ltmp889 # Offset: 291
    00000125: 	leal	0x1(%rdi), %eax
    00000128: 	movq	(%rbx,%rax,2), %xmm1
    0000012d: 	movq	-0x2(%rbx,%rax,2), %xmm2
    00000133: 	movdqa	%xmm1, %xmm0
    00000137: 	por	%xmm2, %xmm1
    0000013b: 	pand	%xmm2, %xmm0
    0000013f: 	pandn	%xmm1, %xmm0
    00000143: 	pextrw	$0x0, %xmm0, %eax
    00000148: 	pextrw	$0x1, %xmm0, %edi
    0000014d: 	addl	%edi, %eax
    0000014f: 	addl	%edx, %eax
    00000151: 	pextrw	$0x2, %xmm0, %edx
    00000156: 	addl	%edx, %eax
    00000158: 	pextrw	$0x3, %xmm0, %edx
    0000015d: 	addl	%eax, %edx
    0000015f: 	movl	%esi, %eax
    00000161: 	andl	$-0x4, %eax
    00000164: 	addl	%eax, %ecx
    00000166: 	cmpl	%esi, %eax
    00000168: 	je	.Ltmp886 # Offset: 360
.Ltmp889:
    0000016e: 	movslq	%ecx, %rdi
    00000171: 	leal	0x1(%rcx), %esi
    00000174: 	addq	%rdi, %rdi
    00000177: 	leaq	(%rbx,%rdi), %rax
    0000017b: 	cmpl	%r14d, %esi
    0000017e: 	jge	.Ltmp890 # Offset: 382
    00000184: 	cmpl	%ecx, %r12d
    00000187: 	jle	.Ltmp890 # Offset: 391
    0000018d: 	movzwl	-0x2(%rax), %r11d
    00000192: 	movzwl	(%rax), %esi
    00000195: 	movl	%r11d, %eax
    00000198: 	orl	%esi, %r11d
    0000019b: 	andl	%esi, %eax
    0000019d: 	notl	%eax
    0000019f: 	andl	%r11d, %eax
    000001a2: 	movzwl	0x2(%rbx,%rdi), %r11d
    000001a8: 	addl	%edx, %eax
    000001aa: 	movl	%esi, %edx
    000001ac: 	andl	%r11d, %edx
    000001af: 	orl	%r11d, %esi
    000001b2: 	notl	%edx
    000001b4: 	andl	%esi, %edx
    000001b6: 	leal	0x3(%rcx), %esi
    000001b9: 	addl	%eax, %edx
    000001bb: 	leal	0x2(%rcx), %eax
    000001be: 	cmpl	%esi, %r14d
    000001c1: 	jle	.Ltmp891 # Offset: 449
    000001c3: 	movzwl	0x4(%rbx,%rdi), %esi
    000001c8: 	movl	%r11d, %eax
    000001cb: 	andl	%esi, %eax
    000001cd: 	orl	%esi, %r11d
    000001d0: 	notl	%eax
    000001d2: 	andl	%r11d, %eax
    000001d5: 	movzwl	0x6(%rbx,%rdi), %r11d
    000001db: 	addl	%edx, %eax
    000001dd: 	movl	%esi, %edx
    000001df: 	andl	%r11d, %edx
    000001e2: 	orl	%r11d, %esi
    000001e5: 	notl	%edx
    000001e7: 	andl	%esi, %edx
    000001e9: 	leal	0x5(%rcx), %esi
    000001ec: 	addl	%eax, %edx
    000001ee: 	leal	0x4(%rcx), %eax
    000001f1: 	cmpl	%esi, %r14d
    000001f4: 	jle	.Ltmp891 # Offset: 500
    000001f6: 	movzwl	0x8(%rbx,%rdi), %esi
    000001fb: 	movzwl	0xa(%rbx,%rdi), %edi
    00000200: 	movl	%esi, %eax
    00000202: 	andl	%r11d, %eax
    00000205: 	orl	%esi, %r11d
    00000208: 	notl	%eax
    0000020a: 	andl	%r11d, %eax
    0000020d: 	addl	%edx, %eax
    0000020f: 	movl	%esi, %edx
    00000211: 	orl	%edi, %esi
    00000213: 	andl	%edi, %edx
    00000215: 	notl	%edx
    00000217: 	andl	%esi, %edx
    00000219: 	addl	%eax, %edx
    0000021b: 	leal	0x6(%rcx), %eax
.Ltmp891:
    0000021e: 	movslq	%eax, %rcx
    00000221: 	leaq	(%rcx,%rcx), %rdi
    00000225: 	movzwl	(%rbx,%rcx,2), %ecx
    00000229: 	movzwl	-0x2(%rbx,%rdi), %esi
    0000022e: 	movzwl	-0x2(%rbx,%rdi), %r11d
    00000234: 	andl	%ecx, %esi
    00000236: 	orl	%ecx, %r11d
    00000239: 	notl	%esi
    0000023b: 	andl	%r11d, %esi
    0000023e: 	addl	%esi, %edx
    00000240: 	leal	0x1(%rax), %esi
    00000243: 	cmpl	%esi, %r12d
    00000246: 	jle	.Ltmp886 # Offset: 582
    00000248: 	movzwl	0x2(%rbx,%rdi), %esi
    0000024d: 	movl	%ecx, %r11d
    00000250: 	addl	$0x2, %eax
    00000253: 	andl	%esi, %r11d
    00000256: 	orl	%esi, %ecx
    00000258: 	notl	%r11d
    0000025b: 	andl	%ecx, %r11d
    0000025e: 	addl	%r11d, %edx
    00000261: 	cmpl	%eax, %r12d
    00000264: 	jle	.Ltmp886 # Offset: 612
    00000266: 	movzwl	0x4(%rbx,%rdi), %ecx
    0000026b: 	movl	%esi, %eax
    0000026d: 	andl	%ecx, %eax
    0000026f: 	orl	%ecx, %esi
    00000271: 	notl	%eax
    00000273: 	andl	%esi, %eax
    00000275: 	addl	%eax, %edx
.Ltmp886:
    00000277: 	testw	%dx, %dx
    0000027a: 	je	.Ltmp892 # Offset: 634
    00000280: 	movl	current_test(%rip), %edx
    00000286: 	leaq	DATAat0x381c8(%rip), %rsi
    0000028d: 	movl	$0x1, %edi
    00000292: 	xorl	%eax, %eax
    00000294: 	addl	$0x1, %r13d
    00000298: 	callq	__printf_chk@PLT # Offset: 664
    0000029d: 	movl	iterations(%rip), %r10d
    000002a4: 	cmpl	%r13d, %r10d
    000002a7: 	jg	.Ltmp893 # Offset: 679
.Ltmp885:
    000002ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002bb: 	subq	$0x20, %rax
    000002bf: 	cmpq	%rax, %rbx
    000002c2: 	je	.Ltmp894 # Offset: 706
    000002c8: 	movq	0x8(%rsp), %rax
    000002cd: 	leaq	0x10(%rbx), %rdi
    000002d1: 	movq	%rdi, (%rbx)
    000002d4: 	movq	(%rax), %rbp
    000002d7: 	movq	0x8(%rax), %r12
    000002db: 	movq	%rbp, %rax
    000002de: 	addq	%r12, %rax
    000002e1: 	je	.Ltmp895 # Offset: 737
    000002e3: 	testq	%rbp, %rbp
    000002e6: 	je	.Ltmp896 # Offset: 742
.Ltmp895:
    000002ec: 	movq	%r12, 0x10(%rsp)
    000002f1: 	cmpq	$0xf, %r12
    000002f5: 	ja	.Ltmp897 # Offset: 757
    000002fb: 	cmpq	$0x1, %r12
    000002ff: 	jne	.Ltmp898 # Offset: 767
    00000305: 	movzbl	(%rbp), %eax
    00000309: 	movb	%al, 0x10(%rbx)
.Ltmp903:
    0000030c: 	movq	%r12, 0x8(%rbx)
    00000310: 	movb	$0x0, (%rdi,%r12)
    00000315: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000031c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000323: 	addq	$0x20, %rax
    00000327: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000032e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000335: 	je	.Ltmp899 # Offset: 821
.Ltmp904:
    0000033b: 	movq	-0x20(%rax), %rbp
    0000033f: 	callq	clock@PLT # Offset: 831
    00000344: 	movq	%rax, end_time(%rip)
    0000034b: 	movq	0x18(%rsp), %rdx
    00000350: 	subq	%fs:0x28, %rdx
    00000359: 	jne	.Ltmp900 # Offset: 857
    0000035f: 	subq	start_time(%rip), %rax
    00000366: 	pxor	%xmm0, %xmm0
    0000036a: 	movq	%rbp, %rdi
    0000036d: 	cvtsi2sd	%rax, %xmm0
    00000372: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000037a: 	addq	$0x28, %rsp
    0000037e: 	popq	%rbx
    0000037f: 	popq	%rbp
    00000380: 	popq	%r12
    00000382: 	popq	%r13
    00000384: 	popq	%r14
    00000386: 	popq	%r15
    00000388: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 904
    0000038d: 	nopl	(%rax) # Size: 3
.Ltmp892:
    00000390: 	addl	$0x1, %r13d
    00000394: 	cmpl	%r10d, %r13d
    00000397: 	jl	.Ltmp901 # Offset: 919
    0000039d: 	jmp	.Ltmp885 # Offset: 925
.Ltmp887:
    000003a2: 	xorl	%edi, %edi
    000003a4: 	movl	$0x1, %ecx
    000003a9: 	jmp	.Ltmp902 # Offset: 937
.Ltmp897:
    000003ae: 	movq	%rbx, %rdi
    000003b1: 	leaq	0x10(%rsp), %rsi
    000003b6: 	xorl	%edx, %edx
    000003b8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 952
    000003bd: 	movq	%rax, (%rbx)
    000003c0: 	movq	%rax, %rdi
    000003c3: 	movq	0x10(%rsp), %rax
    000003c8: 	movq	%rax, 0x10(%rbx)
.Ltmp905:
    000003cc: 	movq	%r12, %rdx
    000003cf: 	movq	%rbp, %rsi
    000003d2: 	callq	memcpy@PLT # Offset: 978
    000003d7: 	movq	0x10(%rsp), %r12
    000003dc: 	movq	(%rbx), %rdi
    000003df: 	jmp	.Ltmp903 # Offset: 991
.Ltmp890:
    000003e4: 	movl	%ecx, %eax
    000003e6: 	jmp	.Ltmp891 # Offset: 998
.Ltmp894:
    000003eb: 	movq	0x8(%rsp), %rsi
    000003f0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1015
    000003fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000403: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000040a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000411: 	jne	.Ltmp904 # Offset: 1041
.Ltmp899:
    00000417: 	movq	-0x8(%rdx), %rax
    0000041b: 	addq	$0x200, %rax
    00000421: 	jmp	.Ltmp904 # Offset: 1057
.Ltmp898:
    00000426: 	testq	%r12, %r12
    00000429: 	je	.Ltmp903 # Offset: 1065
    0000042f: 	jmp	.Ltmp905 # Offset: 1071
.Ltmp900:
    00000431: 	callq	__stack_chk_fail@PLT # Offset: 1073
.Ltmp896:
    00000436: 	leaq	DATAat0x38110(%rip), %rdi
    0000043d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1085
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt16custom_2term_xorItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 89
  State       : disassembled
  Address     : 0xbaa0
  Size        : 0x5b0
  MaxSize     : 0x5b0
  Offset      : 0xbaa0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	movq	%rdi, %rbx
    0000000d: 	subq	$0x38, %rsp
    00000011: 	movq	%rsi, 0x18(%rsp)
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x28(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	movl	%eax, 0x14(%rsp)
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp906 # Offset: 62
    00000044: 	movzbl	(%rbx), %eax
    00000047: 	movl	$0x0, 0xc(%rsp)
    0000004f: 	leaq	0x1f30(%rbx), %rbp
    00000056: 	movdqa	DATAat0x38620(%rip), %xmm4
    0000005e: 	movzbl	0x1f31(%rbx), %r14d
    00000066: 	movb	%al, 0x13(%rsp)
    0000006a: 	movzbl	0x1(%rbx), %eax
    0000006e: 	movzbl	0x1f32(%rbx), %r13d
    00000076: 	movzbl	0x1f33(%rbx), %r12d
    0000007e: 	movb	%al, 0x10(%rsp)
    00000082: 	movzbl	0x1f30(%rbx), %eax
    00000089: 	movzbl	0x1f34(%rbx), %r11d
    00000091: 	movzbl	0x1f35(%rbx), %r10d
    00000099: 	movb	%al, 0x12(%rsp)
    0000009d: 	movzbl	0x1f38(%rbx), %eax
    000000a4: 	movzbl	0x1f36(%rbx), %r9d
    000000ac: 	movzbl	0x1f37(%rbx), %r8d
    000000b4: 	movb	%al, 0x7(%rsp)
    000000b8: 	movzbl	0x1f39(%rbx), %eax
    000000bf: 	movzbl	0x1f3c(%rbx), %r15d
    000000c7: 	movzbl	0x1f3d(%rbx), %edi
    000000ce: 	movb	%al, 0x8(%rsp)
    000000d2: 	movzbl	0x1f3a(%rbx), %eax
    000000d9: 	movzbl	0x1f3e(%rbx), %esi
    000000e0: 	movb	%al, 0x9(%rsp)
    000000e4: 	movzbl	0x1f3b(%rbx), %eax
    000000eb: 	movb	%al, 0xa(%rsp)
    000000ef: 	movzbl	0x1f3f(%rbx), %eax
    000000f6: 	movb	%al, 0xb(%rsp)
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp909:
    00000100: 	movzbl	0x10(%rsp), %ecx
    00000105: 	movzbl	0x13(%rsp), %edx
    0000010a: 	pxor	%xmm2, %xmm2
    0000010e: 	leal	(%rdx,%rcx,2), %eax
    00000111: 	imull	%edx, %eax
    00000114: 	movl	%eax, %edx
    00000116: 	movl	%ecx, %eax
    00000118: 	imull	%ecx, %eax
    0000011b: 	addl	%edx, %eax
    0000011d: 	movb	%al, 0x11(%rsp)
    00000121: 	movq	%rbx, %rax
    00000124: 	nopl	(%rax) # Size: 4
.Ltmp907:
    00000128: 	movdqu	0x1(%rax), %xmm0
    0000012d: 	movdqu	(%rax), %xmm1
    00000131: 	addq	$0x10, %rax
    00000135: 	movdqa	%xmm0, %xmm3
    00000139: 	movdqa	%xmm1, %xmm5
    0000013d: 	paddb	%xmm0, %xmm3
    00000141: 	punpcklbw	%xmm1, %xmm5
    00000145: 	paddb	%xmm1, %xmm3
    00000149: 	punpckhbw	%xmm1, %xmm1
    0000014d: 	movdqa	%xmm3, %xmm6
    00000151: 	punpcklbw	%xmm3, %xmm6
    00000155: 	punpckhbw	%xmm3, %xmm3
    00000159: 	pmullw	%xmm6, %xmm5
    0000015d: 	pmullw	%xmm3, %xmm1
    00000161: 	pand	%xmm4, %xmm5
    00000165: 	pand	%xmm4, %xmm1
    00000169: 	movdqa	%xmm5, %xmm3
    0000016d: 	packuswb	%xmm1, %xmm3
    00000171: 	movdqa	%xmm0, %xmm1
    00000175: 	punpcklbw	%xmm0, %xmm1
    00000179: 	punpckhbw	%xmm0, %xmm0
    0000017d: 	pmullw	%xmm1, %xmm1
    00000181: 	pmullw	%xmm0, %xmm0
    00000185: 	pand	%xmm4, %xmm1
    00000189: 	pand	%xmm4, %xmm0
    0000018d: 	packuswb	%xmm0, %xmm1
    00000191: 	paddb	%xmm1, %xmm2
    00000195: 	paddb	%xmm3, %xmm2
    00000199: 	cmpq	%rbp, %rax
    0000019c: 	jne	.Ltmp907 # Offset: 412
    0000019e: 	movzbl	0x12(%rsp), %ecx
    000001a3: 	movdqa	%xmm2, %xmm0
    000001a7: 	pxor	%xmm7, %xmm7
    000001ab: 	psrldq	$0x8, %xmm0
    000001b0: 	leal	(%rcx,%r14,2), %eax
    000001b4: 	paddb	%xmm0, %xmm2
    000001b8: 	imull	%ecx, %eax
    000001bb: 	psadbw	%xmm7, %xmm2
    000001bf: 	movd	%xmm2, %edx
    000001c3: 	movl	%eax, %ecx
    000001c5: 	movl	%r14d, %eax
    000001c8: 	imull	%r14d, %eax
    000001cc: 	addl	%eax, %ecx
    000001ce: 	movzbl	0x11(%rsp), %eax
    000001d3: 	addl	%edx, %eax
    000001d5: 	leal	(%r14,%r13,2), %edx
    000001d9: 	addl	%eax, %ecx
    000001db: 	movl	%edx, %eax
    000001dd: 	imull	%r14d, %eax
    000001e1: 	movl	%eax, %edx
    000001e3: 	movl	%r13d, %eax
    000001e6: 	imull	%r13d, %eax
    000001ea: 	addl	%eax, %edx
    000001ec: 	addl	%ecx, %edx
    000001ee: 	leal	(%r13,%r12,2), %ecx
    000001f3: 	movl	%ecx, %eax
    000001f5: 	imull	%r13d, %eax
    000001f9: 	movl	%eax, %ecx
    000001fb: 	movl	%r12d, %eax
    000001fe: 	imull	%r12d, %eax
    00000202: 	addl	%eax, %ecx
    00000204: 	addl	%edx, %ecx
    00000206: 	leal	(%r12,%r11,2), %edx
    0000020a: 	movl	%edx, %eax
    0000020c: 	imull	%r12d, %eax
    00000210: 	movl	%eax, %edx
    00000212: 	movl	%r11d, %eax
    00000215: 	imull	%r11d, %eax
    00000219: 	addl	%eax, %edx
    0000021b: 	addl	%ecx, %edx
    0000021d: 	leal	(%r11,%r10,2), %ecx
    00000221: 	movl	%ecx, %eax
    00000223: 	imull	%r11d, %eax
    00000227: 	movl	%eax, %ecx
    00000229: 	movl	%r10d, %eax
    0000022c: 	imull	%r10d, %eax
    00000230: 	addl	%eax, %ecx
    00000232: 	addl	%edx, %ecx
    00000234: 	leal	(%r10,%r9,2), %edx
    00000238: 	movl	%edx, %eax
    0000023a: 	imull	%r10d, %eax
    0000023e: 	movl	%eax, %edx
    00000240: 	movl	%r9d, %eax
    00000243: 	imull	%r9d, %eax
    00000247: 	addl	%eax, %edx
    00000249: 	addl	%ecx, %edx
    0000024b: 	leal	(%r9,%r8,2), %ecx
    0000024f: 	movl	%ecx, %eax
    00000251: 	imull	%r9d, %eax
    00000255: 	movl	%eax, %ecx
    00000257: 	movl	%r8d, %eax
    0000025a: 	imull	%r8d, %eax
    0000025e: 	addl	%eax, %ecx
    00000260: 	movzbl	0x7(%rsp), %eax
    00000265: 	addl	%edx, %ecx
    00000267: 	leal	(%r8,%rax,2), %edx
    0000026b: 	movl	%edx, %eax
    0000026d: 	imull	%r8d, %eax
    00000271: 	movl	%eax, %edx
    00000273: 	movzbl	0x7(%rsp), %eax
    00000278: 	imull	%eax, %eax
    0000027b: 	addl	%eax, %edx
    0000027d: 	movzbl	0x8(%rsp), %eax
    00000282: 	addl	%ecx, %edx
    00000284: 	movzbl	0x7(%rsp), %ecx
    00000289: 	leal	(%rcx,%rax,2), %ecx
    0000028c: 	movzbl	0x7(%rsp), %eax
    00000291: 	imull	%ecx, %eax
    00000294: 	movl	%eax, %ecx
    00000296: 	movzbl	0x8(%rsp), %eax
    0000029b: 	imull	%eax, %eax
    0000029e: 	addl	%eax, %ecx
    000002a0: 	movzbl	0x9(%rsp), %eax
    000002a5: 	addl	%edx, %ecx
    000002a7: 	movzbl	0x8(%rsp), %edx
    000002ac: 	leal	(%rdx,%rax,2), %edx
    000002af: 	movzbl	0x8(%rsp), %eax
    000002b4: 	imull	%edx, %eax
    000002b7: 	movl	%eax, %edx
    000002b9: 	movzbl	0x9(%rsp), %eax
    000002be: 	imull	%eax, %eax
    000002c1: 	addl	%eax, %edx
    000002c3: 	movzbl	0xa(%rsp), %eax
    000002c8: 	addl	%ecx, %edx
    000002ca: 	movzbl	0x9(%rsp), %ecx
    000002cf: 	leal	(%rcx,%rax,2), %ecx
    000002d2: 	movzbl	0x9(%rsp), %eax
    000002d7: 	imull	%ecx, %eax
    000002da: 	movl	%eax, %ecx
    000002dc: 	movzbl	0xa(%rsp), %eax
    000002e1: 	imull	%eax, %eax
    000002e4: 	addl	%eax, %ecx
    000002e6: 	movzbl	0xa(%rsp), %eax
    000002eb: 	addl	%edx, %ecx
    000002ed: 	leal	(%rax,%r15,2), %edx
    000002f1: 	movzbl	0xa(%rsp), %eax
    000002f6: 	imull	%edx, %eax
    000002f9: 	movl	%eax, %edx
    000002fb: 	movl	%r15d, %eax
    000002fe: 	imull	%r15d, %eax
    00000302: 	addl	%eax, %edx
    00000304: 	addl	%ecx, %edx
    00000306: 	leal	(%r15,%rdi,2), %ecx
    0000030a: 	movl	%ecx, %eax
    0000030c: 	imull	%r15d, %eax
    00000310: 	movl	%eax, %ecx
    00000312: 	movl	%edi, %eax
    00000314: 	imull	%edi, %eax
    00000317: 	addl	%eax, %ecx
    00000319: 	addl	%edx, %ecx
    0000031b: 	leal	(%rdi,%rsi,2), %edx
    0000031e: 	movl	%edx, %eax
    00000320: 	imull	%edi, %eax
    00000323: 	movl	%eax, %edx
    00000325: 	movl	%esi, %eax
    00000327: 	imull	%esi, %eax
    0000032a: 	addl	%eax, %edx
    0000032c: 	movzbl	0xb(%rsp), %eax
    00000331: 	addl	%ecx, %edx
    00000333: 	leal	(%rsi,%rax,2), %eax
    00000336: 	imull	%esi, %eax
    00000339: 	movl	%eax, %ecx
    0000033b: 	movzbl	0xb(%rsp), %eax
    00000340: 	imull	%eax, %eax
    00000343: 	addl	%eax, %ecx
    00000345: 	addb	%dl, %cl
    00000347: 	je	.Ltmp908 # Offset: 839
    0000034d: 	movl	current_test(%rip), %edx
    00000353: 	leaq	DATAat0x381c8(%rip), %rsi
    0000035a: 	movl	$0x1, %edi
    0000035f: 	xorl	%eax, %eax
    00000361: 	callq	__printf_chk@PLT # Offset: 865
    00000366: 	addl	$0x1, 0xc(%rsp)
    0000036b: 	movl	iterations(%rip), %esi
    00000371: 	movl	0xc(%rsp), %eax
    00000375: 	movl	%esi, 0x14(%rsp)
    00000379: 	cmpl	%eax, %esi
    0000037b: 	jle	.Ltmp906 # Offset: 891
    00000381: 	movzbl	(%rbx), %eax
    00000384: 	movzbl	0x1f31(%rbx), %r14d
    0000038c: 	movzbl	0x1f32(%rbx), %r13d
    00000394: 	movzbl	0x1f33(%rbx), %r12d
    0000039c: 	movb	%al, 0x13(%rsp)
    000003a0: 	movzbl	0x1(%rbx), %eax
    000003a4: 	movzbl	0x1f34(%rbx), %r11d
    000003ac: 	movzbl	0x1f35(%rbx), %r10d
    000003b4: 	movb	%al, 0x10(%rsp)
    000003b8: 	movzbl	0x1f30(%rbx), %eax
    000003bf: 	movzbl	0x1f36(%rbx), %r9d
    000003c7: 	movzbl	0x1f37(%rbx), %r8d
    000003cf: 	movb	%al, 0x12(%rsp)
    000003d3: 	movzbl	0x1f38(%rbx), %eax
    000003da: 	movzbl	0x1f3c(%rbx), %r15d
    000003e2: 	movzbl	0x1f3d(%rbx), %edi
    000003e9: 	movb	%al, 0x7(%rsp)
    000003ed: 	movzbl	0x1f39(%rbx), %eax
    000003f4: 	movzbl	0x1f3e(%rbx), %esi
    000003fb: 	movdqa	DATAat0x38620(%rip), %xmm4
    00000403: 	movb	%al, 0x8(%rsp)
    00000407: 	movzbl	0x1f3a(%rbx), %eax
    0000040e: 	movb	%al, 0x9(%rsp)
    00000412: 	movzbl	0x1f3b(%rbx), %eax
    00000419: 	movb	%al, 0xa(%rsp)
    0000041d: 	movzbl	0x1f3f(%rbx), %eax
    00000424: 	movb	%al, 0xb(%rsp)
    00000428: 	jmp	.Ltmp909 # Offset: 1064
    0000042d: 	nopl	(%rax) # Size: 3
.Ltmp908:
    00000430: 	addl	$0x1, 0xc(%rsp)
    00000435: 	movl	0xc(%rsp), %eax
    00000439: 	cmpl	0x14(%rsp), %eax
    0000043d: 	jl	.Ltmp909 # Offset: 1085
.Ltmp906:
    00000443: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000044a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000451: 	subq	$0x20, %rax
    00000455: 	cmpq	%rax, %rbx
    00000458: 	je	.Ltmp910 # Offset: 1112
    0000045e: 	movq	0x18(%rsp), %rax
    00000463: 	leaq	0x10(%rbx), %rdi
    00000467: 	movq	%rdi, (%rbx)
    0000046a: 	movq	(%rax), %rbp
    0000046d: 	movq	0x8(%rax), %r12
    00000471: 	movq	%rbp, %rax
    00000474: 	addq	%r12, %rax
    00000477: 	je	.Ltmp911 # Offset: 1143
    00000479: 	testq	%rbp, %rbp
    0000047c: 	je	.Ltmp912 # Offset: 1148
.Ltmp911:
    00000482: 	movq	%r12, 0x20(%rsp)
    00000487: 	cmpq	$0xf, %r12
    0000048b: 	ja	.Ltmp913 # Offset: 1163
    00000491: 	cmpq	$0x1, %r12
    00000495: 	jne	.Ltmp914 # Offset: 1173
    0000049b: 	movzbl	(%rbp), %eax
    0000049f: 	movb	%al, 0x10(%rbx)
.Ltmp917:
    000004a2: 	movq	%r12, 0x8(%rbx)
    000004a6: 	movb	$0x0, (%rdi,%r12)
    000004ab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004b9: 	addq	$0x20, %rax
    000004bd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004c4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000004cb: 	je	.Ltmp915 # Offset: 1227
.Ltmp918:
    000004d1: 	movq	-0x20(%rax), %rbp
    000004d5: 	callq	clock@PLT # Offset: 1237
    000004da: 	movq	%rax, end_time(%rip)
    000004e1: 	movq	0x28(%rsp), %rdx
    000004e6: 	subq	%fs:0x28, %rdx
    000004ef: 	jne	.Ltmp916 # Offset: 1263
    000004f5: 	subq	start_time(%rip), %rax
    000004fc: 	pxor	%xmm0, %xmm0
    00000500: 	movq	%rbp, %rdi
    00000503: 	cvtsi2sd	%rax, %xmm0
    00000508: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000510: 	addq	$0x38, %rsp
    00000514: 	popq	%rbx
    00000515: 	popq	%rbp
    00000516: 	popq	%r12
    00000518: 	popq	%r13
    0000051a: 	popq	%r14
    0000051c: 	popq	%r15
    0000051e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1310
.Ltmp913:
    00000523: 	movq	%rbx, %rdi
    00000526: 	leaq	0x20(%rsp), %rsi
    0000052b: 	xorl	%edx, %edx
    0000052d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1325
    00000532: 	movq	%rax, (%rbx)
    00000535: 	movq	%rax, %rdi
    00000538: 	movq	0x20(%rsp), %rax
    0000053d: 	movq	%rax, 0x10(%rbx)
.Ltmp919:
    00000541: 	movq	%r12, %rdx
    00000544: 	movq	%rbp, %rsi
    00000547: 	callq	memcpy@PLT # Offset: 1351
    0000054c: 	movq	0x20(%rsp), %r12
    00000551: 	movq	(%rbx), %rdi
    00000554: 	jmp	.Ltmp917 # Offset: 1364
.Ltmp910:
    00000559: 	movq	0x18(%rsp), %rsi
    0000055e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000565: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1381
    0000056a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000571: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000578: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000057f: 	jne	.Ltmp918 # Offset: 1407
.Ltmp915:
    00000585: 	movq	-0x8(%rdx), %rax
    00000589: 	addq	$0x200, %rax
    0000058f: 	jmp	.Ltmp918 # Offset: 1423
.Ltmp914:
    00000594: 	testq	%r12, %r12
    00000597: 	je	.Ltmp917 # Offset: 1431
    0000059d: 	jmp	.Ltmp919 # Offset: 1437
.Ltmp916:
    0000059f: 	callq	__stack_chk_fail@PLT # Offset: 1439
.Ltmp912:
    000005a4: 	leaq	DATAat0x38110(%rip), %rdi
    000005ab: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1451
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 90
  State       : disassembled
  Address     : 0xc050
  Size        : 0x698
  MaxSize     : 0x6a0
  Offset      : 0xc050
  Section     : .text
  Orc Section : .local.text._Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	pushq	%r15
    00000002: 	movq	%rdi, %r15
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x48, %rsp
    00000011: 	movq	%rsi, 0x28(%rsp)
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x38(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	movl	%eax, 0x24(%rsp)
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp920 # Offset: 62
    00000044: 	movzbl	(%r15), %eax
    00000048: 	movl	$0x0, 0x14(%rsp)
    00000050: 	leaq	0x1f30(%r15), %r14
    00000057: 	movdqa	DATAat0x38620(%rip), %xmm3
    0000005f: 	movb	%al, 0x19(%rsp)
    00000063: 	movzbl	0x1(%r15), %eax
    00000068: 	movb	%al, 0x1a(%rsp)
    0000006c: 	movzbl	0x1f30(%r15), %eax
    00000074: 	movb	%al, 0xa(%rsp)
    00000078: 	movzbl	0x1f31(%r15), %eax
    00000080: 	movb	%al, 0x6(%rsp)
    00000084: 	movzbl	0x1f32(%r15), %eax
    0000008c: 	movb	%al, 0x7(%rsp)
    00000090: 	movzbl	0x1f33(%r15), %eax
    00000098: 	movb	%al, 0xb(%rsp)
    0000009c: 	movzbl	0x1f34(%r15), %eax
    000000a4: 	movb	%al, 0xc(%rsp)
    000000a8: 	movzbl	0x1f35(%r15), %eax
    000000b0: 	movb	%al, 0xd(%rsp)
    000000b4: 	movzbl	0x1f36(%r15), %eax
    000000bc: 	movb	%al, 0xe(%rsp)
    000000c0: 	movzbl	0x1f37(%r15), %eax
    000000c8: 	movb	%al, 0xf(%rsp)
    000000cc: 	movzbl	0x1f38(%r15), %eax
    000000d4: 	movb	%al, 0x10(%rsp)
    000000d8: 	movzbl	0x1f39(%r15), %eax
    000000e0: 	movb	%al, 0x11(%rsp)
    000000e4: 	movzbl	0x1f3a(%r15), %eax
    000000ec: 	movb	%al, 0x12(%rsp)
    000000f0: 	movzbl	0x1f3b(%r15), %eax
    000000f8: 	movb	%al, 0x13(%rsp)
    000000fc: 	movzbl	0x1f3c(%r15), %eax
    00000104: 	movb	%al, 0x18(%rsp)
    00000108: 	movzbl	0x1f3d(%r15), %eax
    00000110: 	movb	%al, 0x8(%rsp)
    00000114: 	movzbl	0x1f3e(%r15), %eax
    0000011c: 	movb	%al, 0x9(%rsp)
    00000120: 	movzbl	0x1f3f(%r15), %eax
    00000128: 	movb	%al, 0x1b(%rsp)
    0000012c: 	nopl	(%rax) # Size: 4
.Ltmp923:
    00000130: 	movzbl	0x1a(%rsp), %eax
    00000135: 	pxor	%xmm5, %xmm5
    00000139: 	movl	%eax, %esi
    0000013b: 	imull	%esi, %eax
    0000013e: 	movl	%eax, %edx
    00000140: 	movzbl	0x19(%rsp), %eax
    00000145: 	movl	%eax, %ecx
    00000147: 	imull	%ecx, %eax
    0000014a: 	addl	%eax, %edx
    0000014c: 	movl	%ecx, %eax
    0000014e: 	imull	%esi, %eax
    00000151: 	addl	%eax, %eax
    00000153: 	subl	%eax, %edx
    00000155: 	movq	%r15, %rax
    00000158: 	movb	%dl, 0x1c(%rsp)
    0000015c: 	nopl	(%rax) # Size: 4
.Ltmp921:
    00000160: 	movdqu	0x1(%rax), %xmm0
    00000165: 	movdqu	(%rax), %xmm1
    00000169: 	addq	$0x10, %rax
    0000016d: 	movdqa	%xmm0, %xmm7
    00000171: 	movdqa	%xmm0, %xmm6
    00000175: 	punpcklbw	%xmm0, %xmm7
    00000179: 	punpckhbw	%xmm0, %xmm6
    0000017d: 	movdqa	%xmm7, %xmm2
    00000181: 	movdqa	%xmm6, %xmm0
    00000185: 	pmullw	%xmm7, %xmm2
    00000189: 	pmullw	%xmm6, %xmm0
    0000018d: 	pand	%xmm3, %xmm2
    00000191: 	pand	%xmm3, %xmm0
    00000195: 	packuswb	%xmm0, %xmm2
    00000199: 	movdqa	%xmm1, %xmm0
    0000019d: 	punpcklbw	%xmm1, %xmm0
    000001a1: 	punpckhbw	%xmm1, %xmm1
    000001a5: 	movdqa	%xmm0, %xmm4
    000001a9: 	movdqa	%xmm1, %xmm8
    000001ae: 	pmullw	%xmm0, %xmm4
    000001b2: 	pmullw	%xmm1, %xmm8
    000001b7: 	pmullw	%xmm7, %xmm0
    000001bb: 	pmullw	%xmm6, %xmm1
    000001bf: 	pand	%xmm3, %xmm4
    000001c3: 	pand	%xmm3, %xmm8
    000001c8: 	pand	%xmm3, %xmm0
    000001cc: 	pand	%xmm3, %xmm1
    000001d0: 	packuswb	%xmm8, %xmm4
    000001d5: 	packuswb	%xmm1, %xmm0
    000001d9: 	paddb	%xmm4, %xmm2
    000001dd: 	paddb	%xmm0, %xmm0
    000001e1: 	psubb	%xmm0, %xmm5
    000001e5: 	paddb	%xmm2, %xmm5
    000001e9: 	cmpq	%r14, %rax
    000001ec: 	jne	.Ltmp921 # Offset: 492
    000001f2: 	movzbl	0x6(%rsp), %eax
    000001f7: 	movdqa	%xmm5, %xmm0
    000001fb: 	pxor	%xmm6, %xmm6
    000001ff: 	psrldq	$0x8, %xmm0
    00000204: 	imull	%eax, %eax
    00000207: 	paddb	%xmm0, %xmm5
    0000020b: 	psadbw	%xmm6, %xmm5
    0000020f: 	movd	%xmm5, 0x20(%rsp)
    00000215: 	movl	%eax, %r12d
    00000218: 	movzbl	0x7(%rsp), %eax
    0000021d: 	imull	%eax, %eax
    00000220: 	movl	%eax, %ebp
    00000222: 	movzbl	0xb(%rsp), %eax
    00000227: 	imull	%eax, %eax
    0000022a: 	movl	%eax, %ebx
    0000022c: 	movzbl	0xc(%rsp), %eax
    00000231: 	imull	%eax, %eax
    00000234: 	movl	%eax, %r11d
    00000237: 	movzbl	0xd(%rsp), %eax
    0000023c: 	imull	%eax, %eax
    0000023f: 	movl	%eax, %r10d
    00000242: 	movzbl	0xe(%rsp), %eax
    00000247: 	imull	%eax, %eax
    0000024a: 	movl	%eax, %r9d
    0000024d: 	movzbl	0xf(%rsp), %eax
    00000252: 	imull	%eax, %eax
    00000255: 	movl	%eax, %r8d
    00000258: 	movzbl	0x10(%rsp), %eax
    0000025d: 	imull	%eax, %eax
    00000260: 	movl	%eax, %edi
    00000262: 	movzbl	0x11(%rsp), %eax
    00000267: 	imull	%eax, %eax
    0000026a: 	movl	%eax, %esi
    0000026c: 	movzbl	0x12(%rsp), %eax
    00000271: 	imull	%eax, %eax
    00000274: 	movl	%eax, %ecx
    00000276: 	movzbl	0x13(%rsp), %eax
    0000027b: 	imull	%eax, %eax
    0000027e: 	movl	%eax, %edx
    00000280: 	movzbl	0x18(%rsp), %eax
    00000285: 	imull	%eax, %eax
    00000288: 	movb	%al, 0x1f(%rsp)
    0000028c: 	movzbl	0x8(%rsp), %eax
    00000291: 	imull	%eax, %eax
    00000294: 	movb	%al, 0x1e(%rsp)
    00000298: 	movzbl	0x9(%rsp), %eax
    0000029d: 	imull	%eax, %eax
    000002a0: 	movb	%al, 0x1d(%rsp)
    000002a4: 	movzbl	0xa(%rsp), %eax
    000002a9: 	imull	%eax, %eax
    000002ac: 	leal	(%rax,%r12), %r13d
    000002b0: 	movzbl	0xa(%rsp), %eax
    000002b5: 	addl	%ebp, %r12d
    000002b8: 	addl	%ebx, %ebp
    000002ba: 	mulb	0x6(%rsp)
    000002be: 	addl	%r11d, %ebx
    000002c1: 	addl	%eax, %eax
    000002c3: 	subl	%eax, %r13d
    000002c6: 	movzbl	0x1c(%rsp), %eax
    000002cb: 	addb	0x20(%rsp), %al
    000002cf: 	addl	%eax, %r13d
    000002d2: 	movzbl	0x6(%rsp), %eax
    000002d7: 	mulb	0x7(%rsp)
    000002db: 	addl	%eax, %eax
    000002dd: 	subl	%eax, %r12d
    000002e0: 	movzbl	0x7(%rsp), %eax
    000002e5: 	addl	%r13d, %r12d
    000002e8: 	movzbl	0xb(%rsp), %r13d
    000002ee: 	imull	%r13d, %eax
    000002f2: 	addl	%eax, %eax
    000002f4: 	subl	%eax, %ebp
    000002f6: 	movl	%r13d, %eax
    000002f9: 	addl	%r12d, %ebp
    000002fc: 	movzbl	0xc(%rsp), %r12d
    00000302: 	imull	%r12d, %eax
    00000306: 	addl	%eax, %eax
    00000308: 	addl	%r10d, %r11d
    0000030b: 	addl	%r9d, %r10d
    0000030e: 	addl	%r8d, %r9d
    00000311: 	subl	%eax, %ebx
    00000313: 	movl	%r12d, %eax
    00000316: 	addl	%edi, %r8d
    00000319: 	addl	%esi, %edi
    0000031b: 	addl	%ebp, %ebx
    0000031d: 	movzbl	0xd(%rsp), %ebp
    00000322: 	addl	%ecx, %esi
    00000324: 	imull	%ebp, %eax
    00000327: 	addl	%eax, %eax
    00000329: 	subl	%eax, %r11d
    0000032c: 	movl	%ebp, %eax
    0000032e: 	addl	%ebx, %r11d
    00000331: 	movzbl	0xe(%rsp), %ebx
    00000336: 	imull	%ebx, %eax
    00000339: 	addl	%eax, %eax
    0000033b: 	subl	%eax, %r10d
    0000033e: 	movl	%ebx, %eax
    00000340: 	movzbl	0xf(%rsp), %ebx
    00000345: 	addl	%r11d, %r10d
    00000348: 	imull	%ebx, %eax
    0000034b: 	addl	%eax, %eax
    0000034d: 	subl	%eax, %r9d
    00000350: 	movl	%ebx, %eax
    00000352: 	movzbl	0x10(%rsp), %ebx
    00000357: 	addl	%r10d, %r9d
    0000035a: 	imull	%ebx, %eax
    0000035d: 	addl	%eax, %eax
    0000035f: 	subl	%eax, %r8d
    00000362: 	movl	%ebx, %eax
    00000364: 	movzbl	0x11(%rsp), %ebx
    00000369: 	addl	%r9d, %r8d
    0000036c: 	imull	%ebx, %eax
    0000036f: 	addl	%eax, %eax
    00000371: 	subl	%eax, %edi
    00000373: 	movl	%ebx, %eax
    00000375: 	movzbl	0x12(%rsp), %ebx
    0000037a: 	addl	%r8d, %edi
    0000037d: 	imull	%ebx, %eax
    00000380: 	addl	%eax, %eax
    00000382: 	subl	%eax, %esi
    00000384: 	movl	%ebx, %eax
    00000386: 	movzbl	0x1f(%rsp), %ebx
    0000038b: 	addl	%edi, %esi
    0000038d: 	movzbl	0x13(%rsp), %edi
    00000392: 	addl	%edx, %ecx
    00000394: 	addl	%ebx, %edx
    00000396: 	imull	%edi, %eax
    00000399: 	addl	%eax, %eax
    0000039b: 	subl	%eax, %ecx
    0000039d: 	movl	%edi, %eax
    0000039f: 	movzbl	0x1e(%rsp), %edi
    000003a4: 	addl	%esi, %ecx
    000003a6: 	movzbl	0x18(%rsp), %esi
    000003ab: 	imull	%esi, %eax
    000003ae: 	addl	%eax, %eax
    000003b0: 	subl	%eax, %edx
    000003b2: 	movzbl	0x8(%rsp), %eax
    000003b7: 	addl	%ecx, %edx
    000003b9: 	movl	%ebx, %ecx
    000003bb: 	imull	%esi, %eax
    000003be: 	addl	%edi, %ecx
    000003c0: 	addl	%eax, %eax
    000003c2: 	subl	%eax, %ecx
    000003c4: 	movzbl	0x9(%rsp), %eax
    000003c9: 	mulb	0x8(%rsp)
    000003cd: 	addl	%edx, %ecx
    000003cf: 	movl	%edi, %edx
    000003d1: 	movzbl	0x1d(%rsp), %edi
    000003d6: 	addl	%eax, %eax
    000003d8: 	addl	%edi, %edx
    000003da: 	subl	%eax, %edx
    000003dc: 	movzbl	0x1b(%rsp), %eax
    000003e1: 	addl	%ecx, %edx
    000003e3: 	movl	%eax, %esi
    000003e5: 	imull	%esi, %eax
    000003e8: 	leal	(%rax,%rdi), %ecx
    000003eb: 	movzbl	0x9(%rsp), %eax
    000003f0: 	imull	%esi, %eax
    000003f3: 	addl	%eax, %eax
    000003f5: 	subl	%eax, %ecx
    000003f7: 	addb	%dl, %cl
    000003f9: 	je	.Ltmp922 # Offset: 1017
    000003ff: 	movl	current_test(%rip), %edx
    00000405: 	leaq	DATAat0x381c8(%rip), %rsi
    0000040c: 	movl	$0x1, %edi
    00000411: 	xorl	%eax, %eax
    00000413: 	callq	__printf_chk@PLT # Offset: 1043
    00000418: 	addl	$0x1, 0x14(%rsp)
    0000041d: 	movl	iterations(%rip), %edx
    00000423: 	movl	0x14(%rsp), %eax
    00000427: 	movl	%edx, 0x24(%rsp)
    0000042b: 	cmpl	%eax, %edx
    0000042d: 	jle	.Ltmp920 # Offset: 1069
    00000433: 	movzbl	(%r15), %eax
    00000437: 	movb	%al, 0x19(%rsp)
    0000043b: 	movzbl	0x1(%r15), %eax
    00000440: 	movb	%al, 0x1a(%rsp)
    00000444: 	movzbl	0x1f30(%r15), %eax
    0000044c: 	movb	%al, 0xa(%rsp)
    00000450: 	movzbl	0x1f31(%r15), %eax
    00000458: 	movb	%al, 0x6(%rsp)
    0000045c: 	movzbl	0x1f32(%r15), %eax
    00000464: 	movb	%al, 0x7(%rsp)
    00000468: 	movzbl	0x1f33(%r15), %eax
    00000470: 	movb	%al, 0xb(%rsp)
    00000474: 	movzbl	0x1f34(%r15), %eax
    0000047c: 	movb	%al, 0xc(%rsp)
    00000480: 	movzbl	0x1f35(%r15), %eax
    00000488: 	movb	%al, 0xd(%rsp)
    0000048c: 	movzbl	0x1f36(%r15), %eax
    00000494: 	movb	%al, 0xe(%rsp)
    00000498: 	movzbl	0x1f37(%r15), %eax
    000004a0: 	movb	%al, 0xf(%rsp)
    000004a4: 	movzbl	0x1f38(%r15), %eax
    000004ac: 	movb	%al, 0x10(%rsp)
    000004b0: 	movzbl	0x1f39(%r15), %eax
    000004b8: 	movb	%al, 0x11(%rsp)
    000004bc: 	movzbl	0x1f3a(%r15), %eax
    000004c4: 	movb	%al, 0x12(%rsp)
    000004c8: 	movzbl	0x1f3b(%r15), %eax
    000004d0: 	movb	%al, 0x13(%rsp)
    000004d4: 	movzbl	0x1f3c(%r15), %eax
    000004dc: 	movb	%al, 0x18(%rsp)
    000004e0: 	movzbl	0x1f3d(%r15), %eax
    000004e8: 	movb	%al, 0x8(%rsp)
    000004ec: 	movzbl	0x1f3e(%r15), %eax
    000004f4: 	movdqa	DATAat0x38620(%rip), %xmm3
    000004fc: 	movb	%al, 0x9(%rsp)
    00000500: 	movzbl	0x1f3f(%r15), %eax
    00000508: 	movb	%al, 0x1b(%rsp)
    0000050c: 	jmp	.Ltmp923 # Offset: 1292
    00000511: 	nopl	(%rax) # Size: 7
.Ltmp922:
    00000518: 	addl	$0x1, 0x14(%rsp)
    0000051d: 	movl	0x14(%rsp), %eax
    00000521: 	cmpl	0x24(%rsp), %eax
    00000525: 	jl	.Ltmp923 # Offset: 1317
.Ltmp920:
    0000052b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000532: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000539: 	subq	$0x20, %rax
    0000053d: 	cmpq	%rax, %rbx
    00000540: 	je	.Ltmp924 # Offset: 1344
    00000546: 	movq	0x28(%rsp), %rax
    0000054b: 	leaq	0x10(%rbx), %rdi
    0000054f: 	movq	%rdi, (%rbx)
    00000552: 	movq	(%rax), %rbp
    00000555: 	movq	0x8(%rax), %r12
    00000559: 	movq	%rbp, %rax
    0000055c: 	addq	%r12, %rax
    0000055f: 	je	.Ltmp925 # Offset: 1375
    00000561: 	testq	%rbp, %rbp
    00000564: 	je	.Ltmp926 # Offset: 1380
.Ltmp925:
    0000056a: 	movq	%r12, 0x30(%rsp)
    0000056f: 	cmpq	$0xf, %r12
    00000573: 	ja	.Ltmp927 # Offset: 1395
    00000579: 	cmpq	$0x1, %r12
    0000057d: 	jne	.Ltmp928 # Offset: 1405
    00000583: 	movzbl	(%rbp), %eax
    00000587: 	movb	%al, 0x10(%rbx)
.Ltmp931:
    0000058a: 	movq	%r12, 0x8(%rbx)
    0000058e: 	movb	$0x0, (%rdi,%r12)
    00000593: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000059a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005a1: 	addq	$0x20, %rax
    000005a5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000005ac: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000005b3: 	je	.Ltmp929 # Offset: 1459
.Ltmp932:
    000005b9: 	movq	-0x20(%rax), %rbp
    000005bd: 	callq	clock@PLT # Offset: 1469
    000005c2: 	movq	%rax, end_time(%rip)
    000005c9: 	movq	0x38(%rsp), %rdx
    000005ce: 	subq	%fs:0x28, %rdx
    000005d7: 	jne	.Ltmp930 # Offset: 1495
    000005dd: 	subq	start_time(%rip), %rax
    000005e4: 	pxor	%xmm0, %xmm0
    000005e8: 	movq	%rbp, %rdi
    000005eb: 	cvtsi2sd	%rax, %xmm0
    000005f0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000005f8: 	addq	$0x48, %rsp
    000005fc: 	popq	%rbx
    000005fd: 	popq	%rbp
    000005fe: 	popq	%r12
    00000600: 	popq	%r13
    00000602: 	popq	%r14
    00000604: 	popq	%r15
    00000606: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1542
.Ltmp927:
    0000060b: 	movq	%rbx, %rdi
    0000060e: 	leaq	0x30(%rsp), %rsi
    00000613: 	xorl	%edx, %edx
    00000615: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1557
    0000061a: 	movq	%rax, (%rbx)
    0000061d: 	movq	%rax, %rdi
    00000620: 	movq	0x30(%rsp), %rax
    00000625: 	movq	%rax, 0x10(%rbx)
.Ltmp933:
    00000629: 	movq	%r12, %rdx
    0000062c: 	movq	%rbp, %rsi
    0000062f: 	callq	memcpy@PLT # Offset: 1583
    00000634: 	movq	0x30(%rsp), %r12
    00000639: 	movq	(%rbx), %rdi
    0000063c: 	jmp	.Ltmp931 # Offset: 1596
.Ltmp924:
    00000641: 	movq	0x28(%rsp), %rsi
    00000646: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000064d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1613
    00000652: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000659: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000660: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000667: 	jne	.Ltmp932 # Offset: 1639
.Ltmp929:
    0000066d: 	movq	-0x8(%rdx), %rax
    00000671: 	addq	$0x200, %rax
    00000677: 	jmp	.Ltmp932 # Offset: 1655
.Ltmp928:
    0000067c: 	testq	%r12, %r12
    0000067f: 	je	.Ltmp931 # Offset: 1663
    00000685: 	jmp	.Ltmp933 # Offset: 1669
.Ltmp930:
    00000687: 	callq	__stack_chk_fail@PLT # Offset: 1671
.Ltmp926:
    0000068c: 	leaq	DATAat0x38110(%rip), %rdi
    00000693: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1683
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIaEvd" after disassembly {
  Number      : 91
  State       : disassembled
  Address     : 0xc6f0
  Size        : 0x42d4
  MaxSize     : 0x42e0
  Offset      : 0xc6f0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIaEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0xb8, %rsp
    0000002d: 	leaq	DATAat0x38571(%rip), %rsi
    00000034: 	leaq	0xc0(%rsp), %rbx
    0000003c: 	movsd	%xmm0, (%rsp)
    00000041: 	leaq	0x160(%rsp), %r15
    00000049: 	movq	%fs:0x28, %rax
    00000052: 	movq	%rax, 0x20a8(%rsp)
    0000005a: 	xorl	%eax, %eax
    0000005c: 	movq	%rbx, %rdi
    0000005f: 	movq	%rbx, 0x50(%rsp)
    00000064: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 100
    00000069: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    00000071: 	leaq	0xa0(%rsp), %rsi
    00000079: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000080: 	movaps	%xmm5, 0xa0(%rsp)
    00000088: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm5
    00000090: 	movaps	%xmm5, 0xb0(%rsp)
    00000098: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 152
    0000009d: 	movsd	(%rsp), %xmm0
    000000a2: 	movq	%r15, %rdi
    000000a5: 	movq	%rbx, %rsi
    000000a8: 	cvttsd2si	init_value(%rip), %eax
    000000b0: 	movl	$0x3e8, %ecx
    000000b5: 	movabsq	$0x101010101010101, %rdx
    000000bf: 	cvttsd2si	%xmm0, %r14d
    000000c4: 	movzbl	%al, %eax
    000000c7: 	imulq	%rdx, %rax
    000000cb: 	rep		stosq	%rax, %es:(%rdi)
    000000ce: 	leal	(%r14,%r14), %eax
    000000d2: 	leal	0x2(%r14), %ecx
    000000d6: 	movb	%al, 0x68(%rsp)
    000000da: 	movsbl	%al, %eax
    000000dd: 	movb	%cl, 0x6f(%rsp)
    000000e1: 	cltd
    000000e2: 	movsbl	%cl, %ecx
    000000e5: 	movl	%eax, 0x5c(%rsp)
    000000e9: 	idivl	%ecx
    000000eb: 	movl	%ecx, 0x60(%rsp)
    000000ef: 	leaq	DATAat0x381d8(%rip), %rdx
    000000f6: 	addl	%r14d, %eax
    000000f9: 	movb	%al, 0x40(%rsp)
    000000fd: 	leaq	0x140(%rsp), %rax
    00000105: 	movq	%rax, %rdi
    00000108: 	movq	%rax, 0x10(%rsp)
    0000010d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 269
    00000112: 	callq	clock@PLT # Offset: 274
    00000117: 	movl	iterations(%rip), %ecx
    0000011d: 	xorl	%ebp, %ebp
    0000011f: 	leaq	0x20a0(%rsp), %rbx
    00000127: 	movq	%rax, start_time(%rip)
    0000012e: 	leaq	DATAat0x381c8(%rip), %r12
    00000135: 	testl	%ecx, %ecx
    00000137: 	jle	.Ltmp934 # Offset: 311
    00000139: 	nopl	(%rax) # Size: 7
.Ltmp937:
    00000140: 	movq	%r15, %rax
    00000143: 	pxor	%xmm0, %xmm0
    00000147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp935:
    00000150: 	paddb	(%rax), %xmm0
    00000154: 	addq	$0x10, %rax
    00000158: 	cmpq	%rbx, %rax
    0000015b: 	jne	.Ltmp935 # Offset: 347
    0000015d: 	movdqa	%xmm0, %xmm1
    00000161: 	cvttsd2si	init_value(%rip), %edx
    00000169: 	psrldq	$0x8, %xmm1
    0000016e: 	paddb	%xmm1, %xmm0
    00000172: 	pxor	%xmm1, %xmm1
    00000176: 	psadbw	%xmm1, %xmm0
    0000017a: 	movd	%xmm0, %eax
    0000017e: 	shll	$0x6, %edx
    00000181: 	cmpb	%al, %dl
    00000183: 	je	.Ltmp936 # Offset: 387
    00000185: 	movl	current_test(%rip), %edx
    0000018b: 	movq	%r12, %rsi
    0000018e: 	movl	$0x1, %edi
    00000193: 	xorl	%eax, %eax
    00000195: 	callq	__printf_chk@PLT # Offset: 405
    0000019a: 	movl	iterations(%rip), %ecx
.Ltmp936:
    000001a0: 	addl	$0x1, %ebp
    000001a3: 	cmpl	%ecx, %ebp
    000001a5: 	jl	.Ltmp937 # Offset: 421
.Ltmp934:
    000001a7: 	movq	0x10(%rsp), %rsi
    000001ac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 435
    000001b8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001bf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001c6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cd: 	je	.Ltmp938 # Offset: 461
.Ltmp1138:
    000001d3: 	movq	-0x20(%rax), %rbp
    000001d7: 	callq	clock@PLT # Offset: 471
    000001dc: 	pxor	%xmm0, %xmm0
    000001e0: 	movq	%rax, end_time(%rip)
    000001e7: 	movq	%rbp, %rdi
    000001ea: 	subq	start_time(%rip), %rax
    000001f1: 	cvtsi2sd	%rax, %xmm0
    000001f6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001fe: 	callq	_Z13record_resultdPKc # Offset: 510
    00000203: 	movq	0x140(%rsp), %rdi
    0000020b: 	leaq	0x150(%rsp), %rax
    00000213: 	movq	%rax, 0x18(%rsp)
    00000218: 	cmpq	%rax, %rdi
    0000021b: 	je	.Ltmp939 # Offset: 539
    0000021d: 	movq	0x150(%rsp), %rax
    00000225: 	leaq	0x1(%rax), %rsi
    00000229: 	callq	_ZdlPvm@PLT # Offset: 553
.Ltmp939:
    0000022e: 	movq	0x50(%rsp), %rsi
    00000233: 	movq	0x10(%rsp), %rdi
    00000238: 	leaq	DATAat0x381de(%rip), %rdx
    0000023f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 575
    00000244: 	callq	clock@PLT # Offset: 580
    00000249: 	movl	iterations(%rip), %ecx
    0000024f: 	xorl	%ebp, %ebp
    00000251: 	leaq	0x20a0(%rsp), %rbx
    00000259: 	movq	%rax, start_time(%rip)
    00000260: 	leaq	DATAat0x381c8(%rip), %r12
    00000267: 	testl	%ecx, %ecx
    00000269: 	jle	.Ltmp940 # Offset: 617
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp943:
    00000270: 	movq	%r15, %rax
    00000273: 	pxor	%xmm0, %xmm0
    00000277: 	nopw	(%rax,%rax) # Size: 9
.Ltmp941:
    00000280: 	paddb	(%rax), %xmm0
    00000284: 	addq	$0x10, %rax
    00000288: 	cmpq	%rbx, %rax
    0000028b: 	jne	.Ltmp941 # Offset: 651
    0000028d: 	movdqa	%xmm0, %xmm1
    00000291: 	cvttsd2si	init_value(%rip), %edx
    00000299: 	psrldq	$0x8, %xmm1
    0000029e: 	paddb	%xmm1, %xmm0
    000002a2: 	pxor	%xmm1, %xmm1
    000002a6: 	psadbw	%xmm1, %xmm0
    000002aa: 	movd	%xmm0, %eax
    000002ae: 	shll	$0x6, %edx
    000002b1: 	cmpb	%al, %dl
    000002b3: 	je	.Ltmp942 # Offset: 691
    000002b5: 	movl	current_test(%rip), %edx
    000002bb: 	movq	%r12, %rsi
    000002be: 	movl	$0x1, %edi
    000002c3: 	xorl	%eax, %eax
    000002c5: 	callq	__printf_chk@PLT # Offset: 709
    000002ca: 	movl	iterations(%rip), %ecx
.Ltmp942:
    000002d0: 	addl	$0x1, %ebp
    000002d3: 	cmpl	%ecx, %ebp
    000002d5: 	jl	.Ltmp943 # Offset: 725
.Ltmp940:
    000002d7: 	movq	0x10(%rsp), %rsi
    000002dc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 739
    000002e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002f6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002fd: 	je	.Ltmp944 # Offset: 765
.Ltmp1180:
    00000303: 	movq	-0x20(%rax), %rbp
    00000307: 	callq	clock@PLT # Offset: 775
    0000030c: 	pxor	%xmm0, %xmm0
    00000310: 	movq	%rax, end_time(%rip)
    00000317: 	movq	%rbp, %rdi
    0000031a: 	subq	start_time(%rip), %rax
    00000321: 	cvtsi2sd	%rax, %xmm0
    00000326: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000032e: 	callq	_Z13record_resultdPKc # Offset: 814
    00000333: 	movq	0x140(%rsp), %rdi
    0000033b: 	cmpq	0x18(%rsp), %rdi
    00000340: 	je	.Ltmp945 # Offset: 832
    00000342: 	movq	0x150(%rsp), %rax
    0000034a: 	leaq	0x1(%rax), %rsi
    0000034e: 	callq	_ZdlPvm@PLT # Offset: 846
.Ltmp945:
    00000353: 	movq	0x50(%rsp), %rsi
    00000358: 	movq	0x10(%rsp), %rdi
    0000035d: 	leaq	DATAat0x381e8(%rip), %rdx
    00000364: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 868
    00000369: 	callq	clock@PLT # Offset: 873
    0000036e: 	movl	iterations(%rip), %ecx
    00000374: 	xorl	%ebp, %ebp
    00000376: 	leaq	0x20a0(%rsp), %rbx
    0000037e: 	movq	%rax, start_time(%rip)
    00000385: 	leaq	DATAat0x381c8(%rip), %r12
    0000038c: 	testl	%ecx, %ecx
    0000038e: 	jle	.Ltmp946 # Offset: 910
.Ltmp949:
    00000390: 	movq	%r15, %rax
    00000393: 	pxor	%xmm0, %xmm0
    00000397: 	nopw	(%rax,%rax) # Size: 9
.Ltmp947:
    000003a0: 	paddb	(%rax), %xmm0
    000003a4: 	addq	$0x10, %rax
    000003a8: 	cmpq	%rax, %rbx
    000003ab: 	jne	.Ltmp947 # Offset: 939
    000003ad: 	movdqa	%xmm0, %xmm1
    000003b1: 	cvttsd2si	init_value(%rip), %edx
    000003b9: 	psrldq	$0x8, %xmm1
    000003be: 	paddb	%xmm1, %xmm0
    000003c2: 	pxor	%xmm1, %xmm1
    000003c6: 	psadbw	%xmm1, %xmm0
    000003ca: 	movd	%xmm0, %eax
    000003ce: 	shll	$0x6, %edx
    000003d1: 	cmpb	%al, %dl
    000003d3: 	je	.Ltmp948 # Offset: 979
    000003d5: 	movl	current_test(%rip), %edx
    000003db: 	movq	%r12, %rsi
    000003de: 	movl	$0x1, %edi
    000003e3: 	xorl	%eax, %eax
    000003e5: 	callq	__printf_chk@PLT # Offset: 997
    000003ea: 	movl	iterations(%rip), %ecx
.Ltmp948:
    000003f0: 	addl	$0x1, %ebp
    000003f3: 	cmpl	%ecx, %ebp
    000003f5: 	jl	.Ltmp949 # Offset: 1013
.Ltmp946:
    000003f7: 	movq	0x10(%rsp), %rsi
    000003fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000403: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1027
    00000408: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000040f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000416: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000041d: 	je	.Ltmp950 # Offset: 1053
.Ltmp1179:
    00000423: 	movq	-0x20(%rax), %rbp
    00000427: 	callq	clock@PLT # Offset: 1063
    0000042c: 	pxor	%xmm0, %xmm0
    00000430: 	movq	%rax, end_time(%rip)
    00000437: 	movq	%rbp, %rdi
    0000043a: 	subq	start_time(%rip), %rax
    00000441: 	cvtsi2sd	%rax, %xmm0
    00000446: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000044e: 	callq	_Z13record_resultdPKc # Offset: 1102
    00000453: 	movq	0x140(%rsp), %rdi
    0000045b: 	cmpq	0x18(%rsp), %rdi
    00000460: 	je	.Ltmp951 # Offset: 1120
    00000462: 	movq	0x150(%rsp), %rax
    0000046a: 	leaq	0x1(%rax), %rsi
    0000046e: 	callq	_ZdlPvm@PLT # Offset: 1134
.Ltmp951:
    00000473: 	movq	0x10(%rsp), %rbx
    00000478: 	movq	0x50(%rsp), %rsi
    0000047d: 	leaq	DATAat0x381f7(%rip), %rdx
    00000484: 	movq	%rbx, %rdi
    00000487: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1159
    0000048c: 	movq	%rbx, %rsi
    0000048f: 	movq	%r15, %rdi
    00000492: 	callq	"_Z14test_constantSIa13custom_negateIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1170
    00000497: 	movq	0x140(%rsp), %rdi
    0000049f: 	cmpq	0x18(%rsp), %rdi
    000004a4: 	je	.Ltmp952 # Offset: 1188
    000004a6: 	movq	0x150(%rsp), %rax
    000004ae: 	leaq	0x1(%rax), %rsi
    000004b2: 	callq	_ZdlPvm@PLT # Offset: 1202
.Ltmp952:
    000004b7: 	movq	0x50(%rsp), %rsi
    000004bc: 	movq	0x10(%rsp), %rdi
    000004c1: 	leaq	DATAat0x381ff(%rip), %rdx
    000004c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1224
    000004cd: 	callq	clock@PLT # Offset: 1229
    000004d2: 	movl	iterations(%rip), %ecx
    000004d8: 	xorl	%ebp, %ebp
    000004da: 	leaq	0x20a0(%rsp), %rbx
    000004e2: 	movq	%rax, start_time(%rip)
    000004e9: 	leaq	DATAat0x381c8(%rip), %r12
    000004f0: 	testl	%ecx, %ecx
    000004f2: 	jle	.Ltmp953 # Offset: 1266
    000004f4: 	nopl	(%rax) # Size: 4
.Ltmp956:
    000004f8: 	movq	%r15, %rax
    000004fb: 	pxor	%xmm0, %xmm0
    000004ff: 	nop # Size: 1
.Ltmp954:
    00000500: 	paddb	(%rax), %xmm0
    00000504: 	addq	$0x10, %rax
    00000508: 	cmpq	%rbx, %rax
    0000050b: 	jne	.Ltmp954 # Offset: 1291
    0000050d: 	movdqa	%xmm0, %xmm1
    00000511: 	cvttsd2si	init_value(%rip), %edx
    00000519: 	psrldq	$0x8, %xmm1
    0000051e: 	paddb	%xmm1, %xmm0
    00000522: 	pxor	%xmm1, %xmm1
    00000526: 	psadbw	%xmm1, %xmm0
    0000052a: 	movd	%xmm0, %eax
    0000052e: 	shll	$0x6, %edx
    00000531: 	cmpb	%al, %dl
    00000533: 	je	.Ltmp955 # Offset: 1331
    00000535: 	movl	current_test(%rip), %edx
    0000053b: 	movq	%r12, %rsi
    0000053e: 	movl	$0x1, %edi
    00000543: 	xorl	%eax, %eax
    00000545: 	callq	__printf_chk@PLT # Offset: 1349
    0000054a: 	movl	iterations(%rip), %ecx
.Ltmp955:
    00000550: 	addl	$0x1, %ebp
    00000553: 	cmpl	%ecx, %ebp
    00000555: 	jl	.Ltmp956 # Offset: 1365
.Ltmp953:
    00000557: 	movq	0x10(%rsp), %rsi
    0000055c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000563: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1379
    00000568: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000056f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000576: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000057d: 	je	.Ltmp957 # Offset: 1405
.Ltmp1178:
    00000583: 	movq	-0x20(%rax), %rbp
    00000587: 	callq	clock@PLT # Offset: 1415
    0000058c: 	pxor	%xmm0, %xmm0
    00000590: 	movq	%rax, end_time(%rip)
    00000597: 	movq	%rbp, %rdi
    0000059a: 	subq	start_time(%rip), %rax
    000005a1: 	cvtsi2sd	%rax, %xmm0
    000005a6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000005ae: 	callq	_Z13record_resultdPKc # Offset: 1454
    000005b3: 	movq	0x140(%rsp), %rdi
    000005bb: 	cmpq	0x18(%rsp), %rdi
    000005c0: 	je	.Ltmp958 # Offset: 1472
    000005c2: 	movq	0x150(%rsp), %rax
    000005ca: 	leaq	0x1(%rax), %rsi
    000005ce: 	callq	_ZdlPvm@PLT # Offset: 1486
.Ltmp958:
    000005d3: 	movq	0x50(%rsp), %rsi
    000005d8: 	movq	0x10(%rsp), %rdi
    000005dd: 	leaq	DATAat0x3820d(%rip), %rdx
    000005e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1508
    000005e9: 	callq	clock@PLT # Offset: 1513
    000005ee: 	movl	iterations(%rip), %ecx
    000005f4: 	xorl	%ebp, %ebp
    000005f6: 	leaq	0x20a0(%rsp), %rbx
    000005fe: 	movq	%rax, start_time(%rip)
    00000605: 	leaq	DATAat0x381c8(%rip), %r12
    0000060c: 	testl	%ecx, %ecx
    0000060e: 	jle	.Ltmp959 # Offset: 1550
.Ltmp962:
    00000610: 	movq	%r15, %rax
    00000613: 	pxor	%xmm0, %xmm0
    00000617: 	nopw	(%rax,%rax) # Size: 9
.Ltmp960:
    00000620: 	psubb	(%rax), %xmm0
    00000624: 	addq	$0x10, %rax
    00000628: 	cmpq	%rbx, %rax
    0000062b: 	jne	.Ltmp960 # Offset: 1579
    0000062d: 	movdqa	%xmm0, %xmm1
    00000631: 	cvttsd2si	init_value(%rip), %edx
    00000639: 	psrldq	$0x8, %xmm1
    0000063e: 	paddb	%xmm1, %xmm0
    00000642: 	pxor	%xmm1, %xmm1
    00000646: 	psadbw	%xmm1, %xmm0
    0000064a: 	movd	%xmm0, %eax
    0000064e: 	shll	$0x6, %edx
    00000651: 	addb	%dl, %al
    00000653: 	je	.Ltmp961 # Offset: 1619
    00000655: 	movl	current_test(%rip), %edx
    0000065b: 	movq	%r12, %rsi
    0000065e: 	movl	$0x1, %edi
    00000663: 	xorl	%eax, %eax
    00000665: 	callq	__printf_chk@PLT # Offset: 1637
    0000066a: 	movl	iterations(%rip), %ecx
.Ltmp961:
    00000670: 	addl	$0x1, %ebp
    00000673: 	cmpl	%ecx, %ebp
    00000675: 	jl	.Ltmp962 # Offset: 1653
.Ltmp959:
    00000677: 	movq	0x10(%rsp), %rsi
    0000067c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000683: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1667
    00000688: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000068f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000696: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000069d: 	je	.Ltmp963 # Offset: 1693
.Ltmp1177:
    000006a3: 	movq	-0x20(%rax), %rbp
    000006a7: 	callq	clock@PLT # Offset: 1703
    000006ac: 	pxor	%xmm0, %xmm0
    000006b0: 	movq	%rax, end_time(%rip)
    000006b7: 	movq	%rbp, %rdi
    000006ba: 	subq	start_time(%rip), %rax
    000006c1: 	cvtsi2sd	%rax, %xmm0
    000006c6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006ce: 	callq	_Z13record_resultdPKc # Offset: 1742
    000006d3: 	movq	0x140(%rsp), %rdi
    000006db: 	cmpq	0x18(%rsp), %rdi
    000006e0: 	je	.Ltmp964 # Offset: 1760
    000006e2: 	movq	0x150(%rsp), %rax
    000006ea: 	leaq	0x1(%rax), %rsi
    000006ee: 	callq	_ZdlPvm@PLT # Offset: 1774
.Ltmp964:
    000006f3: 	movq	0x50(%rsp), %rsi
    000006f8: 	movq	0x10(%rsp), %rdi
    000006fd: 	leaq	DATAat0x38219(%rip), %rdx
    00000704: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1796
    00000709: 	callq	clock@PLT # Offset: 1801
    0000070e: 	movl	iterations(%rip), %ecx
    00000714: 	xorl	%ebp, %ebp
    00000716: 	leaq	0x20a0(%rsp), %rbx
    0000071e: 	movq	%rax, start_time(%rip)
    00000725: 	leaq	DATAat0x381c8(%rip), %r12
    0000072c: 	testl	%ecx, %ecx
    0000072e: 	jle	.Ltmp965 # Offset: 1838
.Ltmp968:
    00000730: 	movq	%r15, %rax
    00000733: 	pxor	%xmm0, %xmm0
    00000737: 	nopw	(%rax,%rax) # Size: 9
.Ltmp966:
    00000740: 	paddb	(%rax), %xmm0
    00000744: 	addq	$0x10, %rax
    00000748: 	cmpq	%rax, %rbx
    0000074b: 	jne	.Ltmp966 # Offset: 1867
    0000074d: 	movdqa	%xmm0, %xmm1
    00000751: 	cvttsd2si	init_value(%rip), %edx
    00000759: 	psrldq	$0x8, %xmm1
    0000075e: 	paddb	%xmm1, %xmm0
    00000762: 	pxor	%xmm1, %xmm1
    00000766: 	psadbw	%xmm1, %xmm0
    0000076a: 	movd	%xmm0, %eax
    0000076e: 	shll	$0x6, %edx
    00000771: 	cmpb	%al, %dl
    00000773: 	je	.Ltmp967 # Offset: 1907
    00000775: 	movl	current_test(%rip), %edx
    0000077b: 	movq	%r12, %rsi
    0000077e: 	movl	$0x1, %edi
    00000783: 	xorl	%eax, %eax
    00000785: 	callq	__printf_chk@PLT # Offset: 1925
    0000078a: 	movl	iterations(%rip), %ecx
.Ltmp967:
    00000790: 	addl	$0x1, %ebp
    00000793: 	cmpl	%ecx, %ebp
    00000795: 	jl	.Ltmp968 # Offset: 1941
.Ltmp965:
    00000797: 	movq	0x10(%rsp), %rsi
    0000079c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007a3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1955
    000007a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007af: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007b6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007bd: 	je	.Ltmp969 # Offset: 1981
.Ltmp1176:
    000007c3: 	movq	-0x20(%rax), %rbp
    000007c7: 	callq	clock@PLT # Offset: 1991
    000007cc: 	pxor	%xmm0, %xmm0
    000007d0: 	movq	%rax, end_time(%rip)
    000007d7: 	movq	%rbp, %rdi
    000007da: 	subq	start_time(%rip), %rax
    000007e1: 	cvtsi2sd	%rax, %xmm0
    000007e6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000007ee: 	callq	_Z13record_resultdPKc # Offset: 2030
    000007f3: 	movq	0x140(%rsp), %rdi
    000007fb: 	cmpq	0x18(%rsp), %rdi
    00000800: 	je	.Ltmp970 # Offset: 2048
    00000802: 	movq	0x150(%rsp), %rax
    0000080a: 	leaq	0x1(%rax), %rsi
    0000080e: 	callq	_ZdlPvm@PLT # Offset: 2062
.Ltmp970:
    00000813: 	movq	0x50(%rsp), %rsi
    00000818: 	movq	0x10(%rsp), %rdi
    0000081d: 	leaq	DATAat0x38224(%rip), %rdx
    00000824: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2084
    00000829: 	callq	clock@PLT # Offset: 2089
    0000082e: 	movl	iterations(%rip), %ecx
    00000834: 	xorl	%ebp, %ebp
    00000836: 	leaq	0x20a0(%rsp), %rbx
    0000083e: 	movq	%rax, start_time(%rip)
    00000845: 	leaq	DATAat0x381c8(%rip), %r12
    0000084c: 	testl	%ecx, %ecx
    0000084e: 	jle	.Ltmp971 # Offset: 2126
.Ltmp974:
    00000850: 	movq	%r15, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp972:
    00000860: 	paddb	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	cmpq	%rbx, %rax
    0000086b: 	jne	.Ltmp972 # Offset: 2155
    0000086d: 	movdqa	%xmm0, %xmm1
    00000871: 	cvttsd2si	init_value(%rip), %edx
    00000879: 	psrldq	$0x8, %xmm1
    0000087e: 	paddb	%xmm1, %xmm0
    00000882: 	pxor	%xmm1, %xmm1
    00000886: 	psadbw	%xmm1, %xmm0
    0000088a: 	movd	%xmm0, %eax
    0000088e: 	shll	$0x6, %edx
    00000891: 	cmpb	%al, %dl
    00000893: 	je	.Ltmp973 # Offset: 2195
    00000895: 	movl	current_test(%rip), %edx
    0000089b: 	movq	%r12, %rsi
    0000089e: 	movl	$0x1, %edi
    000008a3: 	xorl	%eax, %eax
    000008a5: 	callq	__printf_chk@PLT # Offset: 2213
    000008aa: 	movl	iterations(%rip), %ecx
.Ltmp973:
    000008b0: 	addl	$0x1, %ebp
    000008b3: 	cmpl	%ecx, %ebp
    000008b5: 	jl	.Ltmp974 # Offset: 2229
.Ltmp971:
    000008b7: 	movq	0x10(%rsp), %rsi
    000008bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2243
    000008c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008dd: 	je	.Ltmp975 # Offset: 2269
.Ltmp1175:
    000008e3: 	movq	-0x20(%rax), %rbp
    000008e7: 	callq	clock@PLT # Offset: 2279
    000008ec: 	pxor	%xmm0, %xmm0
    000008f0: 	movq	%rax, end_time(%rip)
    000008f7: 	movq	%rbp, %rdi
    000008fa: 	subq	start_time(%rip), %rax
    00000901: 	cvtsi2sd	%rax, %xmm0
    00000906: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000090e: 	callq	_Z13record_resultdPKc # Offset: 2318
    00000913: 	movq	0x140(%rsp), %rdi
    0000091b: 	cmpq	0x18(%rsp), %rdi
    00000920: 	je	.Ltmp976 # Offset: 2336
    00000922: 	movq	0x150(%rsp), %rax
    0000092a: 	leaq	0x1(%rax), %rsi
    0000092e: 	callq	_ZdlPvm@PLT # Offset: 2350
.Ltmp976:
    00000933: 	movq	0x10(%rsp), %rbx
    00000938: 	movq	0x50(%rsp), %rsi
    0000093d: 	leaq	DATAat0x38233(%rip), %rdx
    00000944: 	movq	%rbx, %rdi
    00000947: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2375
    0000094c: 	movq	%rbx, %rsi
    0000094f: 	movq	%r15, %rdi
    00000952: 	callq	"_Z14test_constantSIa15custom_and_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2386
    00000957: 	movq	0x140(%rsp), %rdi
    0000095f: 	cmpq	0x18(%rsp), %rdi
    00000964: 	je	.Ltmp977 # Offset: 2404
    00000966: 	movq	0x150(%rsp), %rax
    0000096e: 	leaq	0x1(%rax), %rsi
    00000972: 	callq	_ZdlPvm@PLT # Offset: 2418
.Ltmp977:
    00000977: 	movq	0x10(%rsp), %rbx
    0000097c: 	movq	0x50(%rsp), %rsi
    00000981: 	leaq	DATAat0x3823d(%rip), %rdx
    00000988: 	movq	%rbx, %rdi
    0000098b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2443
    00000990: 	movq	%rbx, %rsi
    00000993: 	movq	%r15, %rdi
    00000996: 	callq	"_Z14test_constantSIa14custom_or_selfIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2454
    0000099b: 	movq	0x140(%rsp), %rdi
    000009a3: 	cmpq	0x18(%rsp), %rdi
    000009a8: 	je	.Ltmp978 # Offset: 2472
    000009aa: 	movq	0x150(%rsp), %rax
    000009b2: 	leaq	0x1(%rax), %rsi
    000009b6: 	callq	_ZdlPvm@PLT # Offset: 2486
.Ltmp978:
    000009bb: 	movq	0x50(%rsp), %rsi
    000009c0: 	movq	0x10(%rsp), %rdi
    000009c5: 	leaq	DATAat0x38246(%rip), %rdx
    000009cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2508
    000009d1: 	callq	clock@PLT # Offset: 2513
    000009d6: 	movl	iterations(%rip), %ecx
    000009dc: 	xorl	%ebp, %ebp
    000009de: 	leaq	0x20a0(%rsp), %rbx
    000009e6: 	movq	%rax, start_time(%rip)
    000009ed: 	leaq	DATAat0x381c8(%rip), %r12
    000009f4: 	testl	%ecx, %ecx
    000009f6: 	jle	.Ltmp979 # Offset: 2550
    000009f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp982:
    00000a00: 	movq	%r15, %rax
    00000a03: 	pxor	%xmm0, %xmm0
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp980:
    00000a10: 	paddb	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	cmpq	%rbx, %rax
    00000a1b: 	jne	.Ltmp980 # Offset: 2587
    00000a1d: 	movdqa	%xmm0, %xmm1
    00000a21: 	cvttsd2si	init_value(%rip), %edx
    00000a29: 	psrldq	$0x8, %xmm1
    00000a2e: 	paddb	%xmm1, %xmm0
    00000a32: 	pxor	%xmm1, %xmm1
    00000a36: 	psadbw	%xmm1, %xmm0
    00000a3a: 	movd	%xmm0, %eax
    00000a3e: 	shll	$0x6, %edx
    00000a41: 	cmpb	%al, %dl
    00000a43: 	je	.Ltmp981 # Offset: 2627
    00000a45: 	movl	current_test(%rip), %edx
    00000a4b: 	movq	%r12, %rsi
    00000a4e: 	movl	$0x1, %edi
    00000a53: 	xorl	%eax, %eax
    00000a55: 	callq	__printf_chk@PLT # Offset: 2645
    00000a5a: 	movl	iterations(%rip), %ecx
.Ltmp981:
    00000a60: 	addl	$0x1, %ebp
    00000a63: 	cmpl	%ecx, %ebp
    00000a65: 	jl	.Ltmp982 # Offset: 2661
.Ltmp979:
    00000a67: 	movq	0x10(%rsp), %rsi
    00000a6c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a73: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2675
    00000a78: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a7f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a86: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a8d: 	je	.Ltmp983 # Offset: 2701
.Ltmp1174:
    00000a93: 	movq	-0x20(%rax), %rbp
    00000a97: 	callq	clock@PLT # Offset: 2711
    00000a9c: 	pxor	%xmm0, %xmm0
    00000aa0: 	movq	%rax, end_time(%rip)
    00000aa7: 	movq	%rbp, %rdi
    00000aaa: 	subq	start_time(%rip), %rax
    00000ab1: 	cvtsi2sd	%rax, %xmm0
    00000ab6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000abe: 	callq	_Z13record_resultdPKc # Offset: 2750
    00000ac3: 	movq	0x140(%rsp), %rdi
    00000acb: 	cmpq	0x18(%rsp), %rdi
    00000ad0: 	je	.Ltmp984 # Offset: 2768
    00000ad2: 	movq	0x150(%rsp), %rax
    00000ada: 	leaq	0x1(%rax), %rsi
    00000ade: 	callq	_ZdlPvm@PLT # Offset: 2782
.Ltmp984:
    00000ae3: 	movq	0x50(%rsp), %rsi
    00000ae8: 	movq	0x10(%rsp), %rdi
    00000aed: 	leaq	DATAat0x3824f(%rip), %rdx
    00000af4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2804
    00000af9: 	callq	clock@PLT # Offset: 2809
    00000afe: 	movl	iterations(%rip), %ecx
    00000b04: 	xorl	%ebp, %ebp
    00000b06: 	leaq	0x20a0(%rsp), %rbx
    00000b0e: 	movq	%rax, start_time(%rip)
    00000b15: 	leaq	DATAat0x381c8(%rip), %r12
    00000b1c: 	testl	%ecx, %ecx
    00000b1e: 	jle	.Ltmp985 # Offset: 2846
.Ltmp988:
    00000b20: 	movq	%r15, %rax
    00000b23: 	pxor	%xmm0, %xmm0
    00000b27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp986:
    00000b30: 	paddb	(%rax), %xmm0
    00000b34: 	addq	$0x10, %rax
    00000b38: 	cmpq	%rax, %rbx
    00000b3b: 	jne	.Ltmp986 # Offset: 2875
    00000b3d: 	movdqa	%xmm0, %xmm1
    00000b41: 	cvttsd2si	init_value(%rip), %edx
    00000b49: 	psrldq	$0x8, %xmm1
    00000b4e: 	paddb	%xmm1, %xmm0
    00000b52: 	pxor	%xmm1, %xmm1
    00000b56: 	psadbw	%xmm1, %xmm0
    00000b5a: 	movd	%xmm0, %eax
    00000b5e: 	shll	$0x6, %edx
    00000b61: 	cmpb	%al, %dl
    00000b63: 	je	.Ltmp987 # Offset: 2915
    00000b65: 	movl	current_test(%rip), %edx
    00000b6b: 	movq	%r12, %rsi
    00000b6e: 	movl	$0x1, %edi
    00000b73: 	xorl	%eax, %eax
    00000b75: 	callq	__printf_chk@PLT # Offset: 2933
    00000b7a: 	movl	iterations(%rip), %ecx
.Ltmp987:
    00000b80: 	addl	$0x1, %ebp
    00000b83: 	cmpl	%ecx, %ebp
    00000b85: 	jl	.Ltmp988 # Offset: 2949
.Ltmp985:
    00000b87: 	movq	0x10(%rsp), %rsi
    00000b8c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b93: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2963
    00000b98: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b9f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ba6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bad: 	je	.Ltmp989 # Offset: 2989
.Ltmp1173:
    00000bb3: 	movq	-0x20(%rax), %rbp
    00000bb7: 	callq	clock@PLT # Offset: 2999
    00000bbc: 	pxor	%xmm0, %xmm0
    00000bc0: 	movq	%rax, end_time(%rip)
    00000bc7: 	movq	%rbp, %rdi
    00000bca: 	subq	start_time(%rip), %rax
    00000bd1: 	cvtsi2sd	%rax, %xmm0
    00000bd6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000bde: 	callq	_Z13record_resultdPKc # Offset: 3038
    00000be3: 	movq	0x140(%rsp), %rdi
    00000beb: 	cmpq	0x18(%rsp), %rdi
    00000bf0: 	je	.Ltmp990 # Offset: 3056
    00000bf2: 	movq	0x150(%rsp), %rax
    00000bfa: 	leaq	0x1(%rax), %rsi
    00000bfe: 	callq	_ZdlPvm@PLT # Offset: 3070
.Ltmp990:
    00000c03: 	movq	0x10(%rsp), %rbx
    00000c08: 	movq	0x50(%rsp), %rsi
    00000c0d: 	leaq	DATAat0x38259(%rip), %rdx
    00000c14: 	movq	%rbx, %rdi
    00000c17: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3095
    00000c1c: 	movq	%rbx, %rsi
    00000c1f: 	movq	%r15, %rdi
    00000c22: 	callq	"_Z14test_constantSIa18custom_andnot_zeroIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3106
    00000c27: 	movq	0x140(%rsp), %rdi
    00000c2f: 	cmpq	0x18(%rsp), %rdi
    00000c34: 	je	.Ltmp991 # Offset: 3124
    00000c36: 	movq	0x150(%rsp), %rax
    00000c3e: 	leaq	0x1(%rax), %rsi
    00000c42: 	callq	_ZdlPvm@PLT # Offset: 3138
.Ltmp991:
    00000c47: 	movq	0x10(%rsp), %rbx
    00000c4c: 	movq	0x50(%rsp), %rsi
    00000c51: 	leaq	DATAat0x38266(%rip), %rdx
    00000c58: 	movq	%rbx, %rdi
    00000c5b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3163
    00000c60: 	movq	%rbx, %rsi
    00000c63: 	movq	%r15, %rdi
    00000c66: 	callq	"_Z14test_constantSIa20custom_algebra_mixedIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 3174
    00000c6b: 	movq	0x140(%rsp), %rdi
    00000c73: 	cmpq	0x18(%rsp), %rdi
    00000c78: 	je	.Ltmp992 # Offset: 3192
    00000c7a: 	movq	0x150(%rsp), %rax
    00000c82: 	leaq	0x1(%rax), %rsi
    00000c86: 	callq	_ZdlPvm@PLT # Offset: 3206
.Ltmp992:
    00000c8b: 	movq	0x50(%rsp), %rbx
    00000c90: 	leaq	0xe0(%rsp), %rdi
    00000c98: 	leaq	DATAat0x38275(%rip), %rdx
    00000c9f: 	movq	%rbx, %rsi
    00000ca2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3234
    00000ca7: 	movl	iterations(%rip), %esi
    00000cad: 	movq	0xe0(%rsp), %rdi
    00000cb5: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3253
    00000cba: 	movq	%rbx, %rsi
    00000cbd: 	movq	0x10(%rsp), %rbx
    00000cc2: 	leaq	DATAat0x381e2(%rip), %rdx
    00000cc9: 	movq	%rbx, %rdi
    00000ccc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3276
    00000cd1: 	callq	clock@PLT # Offset: 3281
    00000cd6: 	movq	%rbx, %rsi
    00000cd9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ce0: 	movq	%rax, start_time(%rip)
    00000ce7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3303
    00000cec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cf3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cfa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d01: 	je	.Ltmp993 # Offset: 3329
.Ltmp1172:
    00000d07: 	movq	-0x20(%rax), %rbp
    00000d0b: 	callq	clock@PLT # Offset: 3339
    00000d10: 	pxor	%xmm0, %xmm0
    00000d14: 	movq	%rax, end_time(%rip)
    00000d1b: 	movq	%rbp, %rdi
    00000d1e: 	subq	start_time(%rip), %rax
    00000d25: 	cvtsi2sd	%rax, %xmm0
    00000d2a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000d32: 	callq	_Z13record_resultdPKc # Offset: 3378
    00000d37: 	movq	0x140(%rsp), %rdi
    00000d3f: 	cmpq	0x18(%rsp), %rdi
    00000d44: 	je	.Ltmp994 # Offset: 3396
    00000d46: 	movq	0x150(%rsp), %rax
    00000d4e: 	leaq	0x1(%rax), %rsi
    00000d52: 	callq	_ZdlPvm@PLT # Offset: 3410
.Ltmp994:
    00000d57: 	movq	0x10(%rsp), %rbx
    00000d5c: 	movq	0x50(%rsp), %rsi
    00000d61: 	leaq	DATAat0x3828f(%rip), %rdx
    00000d68: 	movq	%rbx, %rdi
    00000d6b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3435
    00000d70: 	callq	clock@PLT # Offset: 3440
    00000d75: 	movq	%rbx, %rsi
    00000d78: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d7f: 	movq	%rax, start_time(%rip)
    00000d86: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3462
    00000d8b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d92: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d99: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000da0: 	je	.Ltmp995 # Offset: 3488
.Ltmp1171:
    00000da6: 	movq	-0x20(%rax), %rbp
    00000daa: 	callq	clock@PLT # Offset: 3498
    00000daf: 	pxor	%xmm0, %xmm0
    00000db3: 	movq	%rax, end_time(%rip)
    00000dba: 	movq	%rbp, %rdi
    00000dbd: 	subq	start_time(%rip), %rax
    00000dc4: 	cvtsi2sd	%rax, %xmm0
    00000dc9: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000dd1: 	callq	_Z13record_resultdPKc # Offset: 3537
    00000dd6: 	movq	0x140(%rsp), %rdi
    00000dde: 	cmpq	0x18(%rsp), %rdi
    00000de3: 	je	.Ltmp996 # Offset: 3555
    00000de5: 	movq	0x150(%rsp), %rax
    00000ded: 	leaq	0x1(%rax), %rsi
    00000df1: 	callq	_ZdlPvm@PLT # Offset: 3569
.Ltmp996:
    00000df6: 	movq	0x10(%rsp), %rbx
    00000dfb: 	movq	0x50(%rsp), %rsi
    00000e00: 	leaq	DATAat0x3829b(%rip), %rdx
    00000e07: 	movq	%rbx, %rdi
    00000e0a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3594
    00000e0f: 	callq	clock@PLT # Offset: 3599
    00000e14: 	movq	%rbx, %rsi
    00000e17: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e1e: 	movq	%rax, start_time(%rip)
    00000e25: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3621
    00000e2a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e31: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e38: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e3f: 	je	.Ltmp997 # Offset: 3647
.Ltmp1170:
    00000e45: 	movq	-0x20(%rax), %rbp
    00000e49: 	callq	clock@PLT # Offset: 3657
    00000e4e: 	pxor	%xmm0, %xmm0
    00000e52: 	movq	%rax, end_time(%rip)
    00000e59: 	movq	%rbp, %rdi
    00000e5c: 	subq	start_time(%rip), %rax
    00000e63: 	cvtsi2sd	%rax, %xmm0
    00000e68: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e70: 	callq	_Z13record_resultdPKc # Offset: 3696
    00000e75: 	movq	0x140(%rsp), %rdi
    00000e7d: 	cmpq	0x18(%rsp), %rdi
    00000e82: 	je	.Ltmp998 # Offset: 3714
    00000e84: 	movq	0x150(%rsp), %rax
    00000e8c: 	leaq	0x1(%rax), %rsi
    00000e90: 	callq	_ZdlPvm@PLT # Offset: 3728
.Ltmp998:
    00000e95: 	movq	0x10(%rsp), %rbx
    00000e9a: 	movq	0x50(%rsp), %rsi
    00000e9f: 	leaq	DATAat0x382aa(%rip), %rdx
    00000ea6: 	movq	%rbx, %rdi
    00000ea9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3753
    00000eae: 	callq	clock@PLT # Offset: 3758
    00000eb3: 	movq	%rbx, %rsi
    00000eb6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ebd: 	movq	%rax, start_time(%rip)
    00000ec4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3780
    00000ec9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ed0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ed7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ede: 	je	.Ltmp999 # Offset: 3806
.Ltmp1169:
    00000ee4: 	movq	-0x20(%rax), %rbp
    00000ee8: 	callq	clock@PLT # Offset: 3816
    00000eed: 	pxor	%xmm0, %xmm0
    00000ef1: 	movq	%rax, end_time(%rip)
    00000ef8: 	movq	%rbp, %rdi
    00000efb: 	subq	start_time(%rip), %rax
    00000f02: 	cvtsi2sd	%rax, %xmm0
    00000f07: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f0f: 	callq	_Z13record_resultdPKc # Offset: 3855
    00000f14: 	movq	0x140(%rsp), %rdi
    00000f1c: 	cmpq	0x18(%rsp), %rdi
    00000f21: 	je	.Ltmp1000 # Offset: 3873
    00000f23: 	movq	0x150(%rsp), %rax
    00000f2b: 	leaq	0x1(%rax), %rsi
    00000f2f: 	callq	_ZdlPvm@PLT # Offset: 3887
.Ltmp1000:
    00000f34: 	movq	0x10(%rsp), %rbx
    00000f39: 	movq	0x50(%rsp), %rsi
    00000f3e: 	leaq	DATAat0x382f3(%rip), %rdx
    00000f45: 	movq	%rbx, %rdi
    00000f48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3912
    00000f4d: 	callq	clock@PLT # Offset: 3917
    00000f52: 	movq	%rbx, %rsi
    00000f55: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f5c: 	movq	%rax, start_time(%rip)
    00000f63: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3939
    00000f68: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f6f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f7d: 	je	.Ltmp1001 # Offset: 3965
.Ltmp1168:
    00000f83: 	movq	-0x20(%rax), %rbp
    00000f87: 	callq	clock@PLT # Offset: 3975
    00000f8c: 	pxor	%xmm0, %xmm0
    00000f90: 	movq	%rax, end_time(%rip)
    00000f97: 	movq	%rbp, %rdi
    00000f9a: 	subq	start_time(%rip), %rax
    00000fa1: 	cvtsi2sd	%rax, %xmm0
    00000fa6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000fae: 	callq	_Z13record_resultdPKc # Offset: 4014
    00000fb3: 	movq	0x140(%rsp), %rdi
    00000fbb: 	cmpq	0x18(%rsp), %rdi
    00000fc0: 	je	.Ltmp1002 # Offset: 4032
    00000fc2: 	movq	0x150(%rsp), %rax
    00000fca: 	leaq	0x1(%rax), %rsi
    00000fce: 	callq	_ZdlPvm@PLT # Offset: 4046
.Ltmp1002:
    00000fd3: 	movq	0x10(%rsp), %rbx
    00000fd8: 	movq	0x50(%rsp), %rsi
    00000fdd: 	leaq	DATAat0x382b3(%rip), %rdx
    00000fe4: 	movq	%rbx, %rdi
    00000fe7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4071
    00000fec: 	callq	clock@PLT # Offset: 4076
    00000ff1: 	movq	%rbx, %rsi
    00000ff4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ffb: 	movq	%rax, start_time(%rip)
    00001002: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4098
    00001007: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000100e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001015: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000101c: 	je	.Ltmp1003 # Offset: 4124
.Ltmp1167:
    00001022: 	movq	-0x20(%rax), %rbp
    00001026: 	callq	clock@PLT # Offset: 4134
    0000102b: 	pxor	%xmm0, %xmm0
    0000102f: 	movq	%rax, end_time(%rip)
    00001036: 	movq	%rbp, %rdi
    00001039: 	subq	start_time(%rip), %rax
    00001040: 	cvtsi2sd	%rax, %xmm0
    00001045: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000104d: 	callq	_Z13record_resultdPKc # Offset: 4173
    00001052: 	movq	0x140(%rsp), %rdi
    0000105a: 	cmpq	0x18(%rsp), %rdi
    0000105f: 	je	.Ltmp1004 # Offset: 4191
    00001061: 	movq	0x150(%rsp), %rax
    00001069: 	leaq	0x1(%rax), %rsi
    0000106d: 	callq	_ZdlPvm@PLT # Offset: 4205
.Ltmp1004:
    00001072: 	movq	0x10(%rsp), %rbx
    00001077: 	movq	0x50(%rsp), %rsi
    0000107c: 	leaq	DATAat0x382c3(%rip), %rdx
    00001083: 	movq	%rbx, %rdi
    00001086: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4230
    0000108b: 	callq	clock@PLT # Offset: 4235
    00001090: 	movq	%rbx, %rsi
    00001093: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000109a: 	movq	%rax, start_time(%rip)
    000010a1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4257
    000010a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010ad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010bb: 	je	.Ltmp1005 # Offset: 4283
.Ltmp1166:
    000010c1: 	movq	-0x20(%rax), %rbp
    000010c5: 	callq	clock@PLT # Offset: 4293
    000010ca: 	pxor	%xmm0, %xmm0
    000010ce: 	movq	%rax, end_time(%rip)
    000010d5: 	movq	%rbp, %rdi
    000010d8: 	subq	start_time(%rip), %rax
    000010df: 	cvtsi2sd	%rax, %xmm0
    000010e4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000010ec: 	callq	_Z13record_resultdPKc # Offset: 4332
    000010f1: 	movq	0x140(%rsp), %rdi
    000010f9: 	cmpq	0x18(%rsp), %rdi
    000010fe: 	je	.Ltmp1006 # Offset: 4350
    00001100: 	movq	0x150(%rsp), %rax
    00001108: 	leaq	0x1(%rax), %rsi
    0000110c: 	callq	_ZdlPvm@PLT # Offset: 4364
.Ltmp1006:
    00001111: 	movq	0x10(%rsp), %rbx
    00001116: 	movq	0x50(%rsp), %rsi
    0000111b: 	leaq	DATAat0x382d6(%rip), %rdx
    00001122: 	movq	%rbx, %rdi
    00001125: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4389
    0000112a: 	callq	clock@PLT # Offset: 4394
    0000112f: 	movq	%rbx, %rsi
    00001132: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001139: 	movq	%rax, start_time(%rip)
    00001140: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4416
    00001145: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000114c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001153: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000115a: 	je	.Ltmp1007 # Offset: 4442
.Ltmp1165:
    00001160: 	movq	-0x20(%rax), %rbp
    00001164: 	callq	clock@PLT # Offset: 4452
    00001169: 	pxor	%xmm0, %xmm0
    0000116d: 	movq	%rax, end_time(%rip)
    00001174: 	movq	%rbp, %rdi
    00001177: 	subq	start_time(%rip), %rax
    0000117e: 	cvtsi2sd	%rax, %xmm0
    00001183: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000118b: 	callq	_Z13record_resultdPKc # Offset: 4491
    00001190: 	movq	0x140(%rsp), %rdi
    00001198: 	cmpq	0x18(%rsp), %rdi
    0000119d: 	je	.Ltmp1008 # Offset: 4509
    0000119f: 	movq	0x150(%rsp), %rax
    000011a7: 	leaq	0x1(%rax), %rsi
    000011ab: 	callq	_ZdlPvm@PLT # Offset: 4523
.Ltmp1008:
    000011b0: 	movq	0x10(%rsp), %rbx
    000011b5: 	movq	0x50(%rsp), %rsi
    000011ba: 	leaq	DATAat0x382e6(%rip), %rdx
    000011c1: 	movq	%rbx, %rdi
    000011c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4548
    000011c9: 	callq	clock@PLT # Offset: 4553
    000011ce: 	movq	%rbx, %rsi
    000011d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011d8: 	movq	%rax, start_time(%rip)
    000011df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4575
    000011e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011eb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011f2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f9: 	je	.Ltmp1009 # Offset: 4601
.Ltmp1164:
    000011ff: 	movq	-0x20(%rax), %rbp
    00001203: 	callq	clock@PLT # Offset: 4611
    00001208: 	pxor	%xmm0, %xmm0
    0000120c: 	movq	%rax, end_time(%rip)
    00001213: 	movq	%rbp, %rdi
    00001216: 	subq	start_time(%rip), %rax
    0000121d: 	cvtsi2sd	%rax, %xmm0
    00001222: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000122a: 	callq	_Z13record_resultdPKc # Offset: 4650
    0000122f: 	movq	0x140(%rsp), %rdi
    00001237: 	cmpq	0x18(%rsp), %rdi
    0000123c: 	je	.Ltmp1010 # Offset: 4668
    0000123e: 	movq	0x150(%rsp), %rax
    00001246: 	leaq	0x1(%rax), %rsi
    0000124a: 	callq	_ZdlPvm@PLT # Offset: 4682
.Ltmp1010:
    0000124f: 	movq	0x10(%rsp), %rbx
    00001254: 	movq	0x50(%rsp), %rsi
    00001259: 	leaq	DATAat0x382ff(%rip), %rdx
    00001260: 	movq	%rbx, %rdi
    00001263: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4707
    00001268: 	callq	clock@PLT # Offset: 4712
    0000126d: 	movq	%rbx, %rsi
    00001270: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001277: 	movq	%rax, start_time(%rip)
    0000127e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4734
    00001283: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000128a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001291: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001298: 	je	.Ltmp1011 # Offset: 4760
.Ltmp1163:
    0000129e: 	movq	-0x20(%rax), %rbp
    000012a2: 	callq	clock@PLT # Offset: 4770
    000012a7: 	pxor	%xmm0, %xmm0
    000012ab: 	movq	%rax, end_time(%rip)
    000012b2: 	movq	%rbp, %rdi
    000012b5: 	subq	start_time(%rip), %rax
    000012bc: 	cvtsi2sd	%rax, %xmm0
    000012c1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012c9: 	callq	_Z13record_resultdPKc # Offset: 4809
    000012ce: 	movq	0x140(%rsp), %rdi
    000012d6: 	cmpq	0x18(%rsp), %rdi
    000012db: 	je	.Ltmp1012 # Offset: 4827
    000012dd: 	movq	0x150(%rsp), %rax
    000012e5: 	leaq	0x1(%rax), %rsi
    000012e9: 	callq	_ZdlPvm@PLT # Offset: 4841
.Ltmp1012:
    000012ee: 	movq	0x10(%rsp), %rbx
    000012f3: 	movq	0x50(%rsp), %rsi
    000012f8: 	leaq	DATAat0x38315(%rip), %rdx
    000012ff: 	movq	%rbx, %rdi
    00001302: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4866
    00001307: 	callq	clock@PLT # Offset: 4871
    0000130c: 	movq	%rbx, %rsi
    0000130f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001316: 	movq	%rax, start_time(%rip)
    0000131d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4893
    00001322: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001329: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001330: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001337: 	je	.Ltmp1013 # Offset: 4919
.Ltmp1162:
    0000133d: 	movq	-0x20(%rax), %rbp
    00001341: 	callq	clock@PLT # Offset: 4929
    00001346: 	pxor	%xmm0, %xmm0
    0000134a: 	movq	%rax, end_time(%rip)
    00001351: 	movq	%rbp, %rdi
    00001354: 	subq	start_time(%rip), %rax
    0000135b: 	cvtsi2sd	%rax, %xmm0
    00001360: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001368: 	callq	_Z13record_resultdPKc # Offset: 4968
    0000136d: 	movq	0x140(%rsp), %rdi
    00001375: 	cmpq	0x18(%rsp), %rdi
    0000137a: 	je	.Ltmp1014 # Offset: 4986
    0000137c: 	movq	0x150(%rsp), %rax
    00001384: 	leaq	0x1(%rax), %rsi
    00001388: 	callq	_ZdlPvm@PLT # Offset: 5000
.Ltmp1014:
    0000138d: 	movq	0x10(%rsp), %rbx
    00001392: 	movq	0x50(%rsp), %rsi
    00001397: 	leaq	DATAat0x3831f(%rip), %rdx
    0000139e: 	movq	%rbx, %rdi
    000013a1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5025
    000013a6: 	callq	clock@PLT # Offset: 5030
    000013ab: 	movq	%rbx, %rsi
    000013ae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013b5: 	movq	%rax, start_time(%rip)
    000013bc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5052
    000013c1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013c8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013cf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013d6: 	je	.Ltmp1015 # Offset: 5078
.Ltmp1161:
    000013dc: 	movq	-0x20(%rax), %rbp
    000013e0: 	callq	clock@PLT # Offset: 5088
    000013e5: 	pxor	%xmm0, %xmm0
    000013e9: 	movq	%rax, end_time(%rip)
    000013f0: 	movq	%rbp, %rdi
    000013f3: 	subq	start_time(%rip), %rax
    000013fa: 	cvtsi2sd	%rax, %xmm0
    000013ff: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001407: 	callq	_Z13record_resultdPKc # Offset: 5127
    0000140c: 	movq	0x140(%rsp), %rdi
    00001414: 	cmpq	0x18(%rsp), %rdi
    00001419: 	je	.Ltmp1016 # Offset: 5145
    0000141b: 	movq	0x150(%rsp), %rax
    00001423: 	leaq	0x1(%rax), %rsi
    00001427: 	callq	_ZdlPvm@PLT # Offset: 5159
.Ltmp1016:
    0000142c: 	movq	0x10(%rsp), %rbx
    00001431: 	movq	0x50(%rsp), %rsi
    00001436: 	leaq	DATAat0x38329(%rip), %rdx
    0000143d: 	movq	%rbx, %rdi
    00001440: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5184
    00001445: 	callq	clock@PLT # Offset: 5189
    0000144a: 	movq	%rbx, %rsi
    0000144d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001454: 	movq	%rax, start_time(%rip)
    0000145b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5211
    00001460: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001467: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001475: 	je	.Ltmp1017 # Offset: 5237
.Ltmp1160:
    0000147b: 	movq	-0x20(%rax), %rbp
    0000147f: 	callq	clock@PLT # Offset: 5247
    00001484: 	pxor	%xmm0, %xmm0
    00001488: 	movq	%rax, end_time(%rip)
    0000148f: 	movq	%rbp, %rdi
    00001492: 	subq	start_time(%rip), %rax
    00001499: 	cvtsi2sd	%rax, %xmm0
    0000149e: 	divsd	DATAat0x385e0(%rip), %xmm0
    000014a6: 	callq	_Z13record_resultdPKc # Offset: 5286
    000014ab: 	movq	0x140(%rsp), %rdi
    000014b3: 	cmpq	0x18(%rsp), %rdi
    000014b8: 	je	.Ltmp1018 # Offset: 5304
    000014ba: 	movq	0x150(%rsp), %rax
    000014c2: 	leaq	0x1(%rax), %rsi
    000014c6: 	callq	_ZdlPvm@PLT # Offset: 5318
.Ltmp1018:
    000014cb: 	movq	0x10(%rsp), %rbx
    000014d0: 	movq	0x50(%rsp), %rsi
    000014d5: 	leaq	DATAat0x38339(%rip), %rdx
    000014dc: 	movq	%rbx, %rdi
    000014df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5343
    000014e4: 	callq	clock@PLT # Offset: 5348
    000014e9: 	movq	%rbx, %rsi
    000014ec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014f3: 	movq	%rax, start_time(%rip)
    000014fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5370
    000014ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001506: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000150d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001514: 	je	.Ltmp1019 # Offset: 5396
.Ltmp1159:
    0000151a: 	movq	-0x20(%rax), %rbp
    0000151e: 	callq	clock@PLT # Offset: 5406
    00001523: 	pxor	%xmm0, %xmm0
    00001527: 	movq	%rax, end_time(%rip)
    0000152e: 	movq	%rbp, %rdi
    00001531: 	subq	start_time(%rip), %rax
    00001538: 	cvtsi2sd	%rax, %xmm0
    0000153d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001545: 	callq	_Z13record_resultdPKc # Offset: 5445
    0000154a: 	movq	0x140(%rsp), %rdi
    00001552: 	cmpq	0x18(%rsp), %rdi
    00001557: 	je	.Ltmp1020 # Offset: 5463
    00001559: 	movq	0x150(%rsp), %rax
    00001561: 	leaq	0x1(%rax), %rsi
    00001565: 	callq	_ZdlPvm@PLT # Offset: 5477
.Ltmp1020:
    0000156a: 	movq	0x10(%rsp), %rbx
    0000156f: 	movq	0x50(%rsp), %rsi
    00001574: 	leaq	DATAat0x38351(%rip), %rdx
    0000157b: 	movq	%rbx, %rdi
    0000157e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5502
    00001583: 	callq	clock@PLT # Offset: 5507
    00001588: 	movq	%rbx, %rsi
    0000158b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001592: 	movq	%rax, start_time(%rip)
    00001599: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5529
    0000159e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015b3: 	je	.Ltmp1021 # Offset: 5555
.Ltmp1158:
    000015b9: 	movq	-0x20(%rax), %rbp
    000015bd: 	callq	clock@PLT # Offset: 5565
    000015c2: 	pxor	%xmm0, %xmm0
    000015c6: 	movq	%rax, end_time(%rip)
    000015cd: 	movq	%rbp, %rdi
    000015d0: 	subq	start_time(%rip), %rax
    000015d7: 	cvtsi2sd	%rax, %xmm0
    000015dc: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015e4: 	callq	_Z13record_resultdPKc # Offset: 5604
    000015e9: 	movq	0x140(%rsp), %rdi
    000015f1: 	cmpq	0x18(%rsp), %rdi
    000015f6: 	je	.Ltmp1022 # Offset: 5622
    000015f8: 	movq	0x150(%rsp), %rax
    00001600: 	leaq	0x1(%rax), %rsi
    00001604: 	callq	_ZdlPvm@PLT # Offset: 5636
.Ltmp1022:
    00001609: 	movq	0x10(%rsp), %rbx
    0000160e: 	movq	0x50(%rsp), %rsi
    00001613: 	leaq	DATAat0x38369(%rip), %rdx
    0000161a: 	movq	%rbx, %rdi
    0000161d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5661
    00001622: 	callq	clock@PLT # Offset: 5666
    00001627: 	movq	%rbx, %rsi
    0000162a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001631: 	movq	%rax, start_time(%rip)
    00001638: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5688
    0000163d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001644: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000164b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001652: 	je	.Ltmp1023 # Offset: 5714
.Ltmp1157:
    00001658: 	movq	-0x20(%rax), %rbp
    0000165c: 	callq	clock@PLT # Offset: 5724
    00001661: 	pxor	%xmm0, %xmm0
    00001665: 	movq	%rax, end_time(%rip)
    0000166c: 	movq	%rbp, %rdi
    0000166f: 	subq	start_time(%rip), %rax
    00001676: 	cvtsi2sd	%rax, %xmm0
    0000167b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001683: 	callq	_Z13record_resultdPKc # Offset: 5763
    00001688: 	movq	0x140(%rsp), %rdi
    00001690: 	cmpq	0x18(%rsp), %rdi
    00001695: 	je	.Ltmp1024 # Offset: 5781
    00001697: 	movq	0x150(%rsp), %rax
    0000169f: 	leaq	0x1(%rax), %rsi
    000016a3: 	callq	_ZdlPvm@PLT # Offset: 5795
.Ltmp1024:
    000016a8: 	movq	0x10(%rsp), %rbx
    000016ad: 	movq	0x50(%rsp), %rsi
    000016b2: 	leaq	DATAat0x38381(%rip), %rdx
    000016b9: 	movq	%rbx, %rdi
    000016bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5820
    000016c1: 	callq	clock@PLT # Offset: 5825
    000016c6: 	movq	%rbx, %rsi
    000016c9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016d0: 	movq	%rax, start_time(%rip)
    000016d7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5847
    000016dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016e3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016f1: 	je	.Ltmp1025 # Offset: 5873
.Ltmp1156:
    000016f7: 	movq	-0x20(%rax), %rbp
    000016fb: 	callq	clock@PLT # Offset: 5883
    00001700: 	pxor	%xmm0, %xmm0
    00001704: 	movq	%rax, end_time(%rip)
    0000170b: 	movq	%rbp, %rdi
    0000170e: 	subq	start_time(%rip), %rax
    00001715: 	cvtsi2sd	%rax, %xmm0
    0000171a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001722: 	callq	_Z13record_resultdPKc # Offset: 5922
    00001727: 	movq	0x140(%rsp), %rdi
    0000172f: 	cmpq	0x18(%rsp), %rdi
    00001734: 	je	.Ltmp1026 # Offset: 5940
    00001736: 	movq	0x150(%rsp), %rax
    0000173e: 	leaq	0x1(%rax), %rsi
    00001742: 	callq	_ZdlPvm@PLT # Offset: 5954
.Ltmp1026:
    00001747: 	movq	0x50(%rsp), %rbx
    0000174c: 	leaq	0x100(%rsp), %rdi
    00001754: 	leaq	DATAat0x384a0(%rip), %rdx
    0000175b: 	movq	%rbx, %rsi
    0000175e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5982
    00001763: 	movl	iterations(%rip), %esi
    00001769: 	movq	0x100(%rsp), %rdi
    00001771: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 6001
    00001776: 	movq	0x10(%rsp), %rdi
    0000177b: 	leaq	DATAat0x384c8(%rip), %rdx
    00001782: 	movq	%rbx, %rsi
    00001785: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6021
    0000178a: 	movsbl	0x40(%rsp), %eax
    0000178f: 	movsbl	%r14b, %r13d
    00001793: 	movl	%eax, 0x64(%rsp)
    00001797: 	callq	clock@PLT # Offset: 6039
    0000179c: 	movl	iterations(%rip), %esi
    000017a2: 	movq	%rax, start_time(%rip)
    000017a9: 	testl	%esi, %esi
    000017ab: 	jle	.Ltmp1027 # Offset: 6059
    000017b1: 	movl	0x5c(%rsp), %eax
    000017b5: 	movdqa	DATAat0x38620(%rip), %xmm5
    000017bd: 	xorl	%ebp, %ebp
    000017bf: 	leaq	0x20a0(%rsp), %rbx
    000017c7: 	leal	(%rax,%r13), %r12d
    000017cb: 	addl	0x60(%rsp), %r12d
    000017d0: 	addb	0x64(%rsp), %r12b
    000017d5: 	movaps	%xmm5, (%rsp)
    000017d9: 	movd	%r12d, %xmm0
    000017de: 	punpcklbw	%xmm0, %xmm0
    000017e2: 	punpcklwd	%xmm0, %xmm0
    000017e6: 	pshufd	$0x0, %xmm0, %xmm5
    000017eb: 	movaps	%xmm5, 0x30(%rsp)
    000017f0: 	punpcklbw	%xmm5, %xmm5
    000017f4: 	movaps	%xmm5, 0x20(%rsp)
    000017f9: 	nopl	(%rax) # Size: 7
.Ltmp1030:
    00001800: 	movdqa	0x30(%rsp), %xmm7
    00001806: 	movq	%r15, %rax
    00001809: 	pxor	%xmm2, %xmm2
    0000180d: 	movdqa	%xmm7, %xmm3
    00001811: 	punpckhbw	%xmm7, %xmm3
    00001815: 	nopl	(%rax) # Size: 3
.Ltmp1028:
    00001818: 	movdqa	(%rax), %xmm0
    0000181c: 	movdqa	(%rsp), %xmm6
    00001821: 	addq	$0x10, %rax
    00001825: 	movdqa	%xmm0, %xmm1
    00001829: 	punpcklbw	%xmm0, %xmm1
    0000182d: 	punpckhbw	%xmm0, %xmm0
    00001831: 	pmullw	0x20(%rsp), %xmm1
    00001837: 	pand	%xmm6, %xmm1
    0000183b: 	pmullw	%xmm3, %xmm0
    0000183f: 	pand	%xmm6, %xmm0
    00001843: 	packuswb	%xmm0, %xmm1
    00001847: 	paddb	%xmm1, %xmm2
    0000184b: 	cmpq	%rbx, %rax
    0000184e: 	jne	.Ltmp1028 # Offset: 6222
    00001850: 	cvttsd2si	init_value(%rip), %ecx
    00001858: 	movdqa	%xmm2, %xmm0
    0000185c: 	psrldq	$0x8, %xmm0
    00001861: 	paddb	%xmm0, %xmm2
    00001865: 	pxor	%xmm0, %xmm0
    00001869: 	psadbw	%xmm0, %xmm2
    0000186d: 	movl	%ecx, %eax
    0000186f: 	movd	%xmm2, %edx
    00001873: 	imull	%r12d, %eax
    00001877: 	shll	$0x6, %eax
    0000187a: 	cmpb	%dl, %al
    0000187c: 	je	.Ltmp1029 # Offset: 6268
    0000187e: 	movl	current_test(%rip), %edx
    00001884: 	leaq	DATAat0x381c8(%rip), %rsi
    0000188b: 	movl	$0x1, %edi
    00001890: 	xorl	%eax, %eax
    00001892: 	callq	__printf_chk@PLT # Offset: 6290
    00001897: 	movl	iterations(%rip), %esi
.Ltmp1029:
    0000189d: 	addl	$0x1, %ebp
    000018a0: 	cmpl	%esi, %ebp
    000018a2: 	jl	.Ltmp1030 # Offset: 6306
.Ltmp1027:
    000018a8: 	movq	0x10(%rsp), %rsi
    000018ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6324
    000018b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018ce: 	je	.Ltmp1031 # Offset: 6350
.Ltmp1155:
    000018d4: 	movq	-0x20(%rax), %rbp
    000018d8: 	callq	clock@PLT # Offset: 6360
    000018dd: 	pxor	%xmm0, %xmm0
    000018e1: 	movq	%rax, end_time(%rip)
    000018e8: 	movq	%rbp, %rdi
    000018eb: 	subq	start_time(%rip), %rax
    000018f2: 	cvtsi2sd	%rax, %xmm0
    000018f7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018ff: 	callq	_Z13record_resultdPKc # Offset: 6399
    00001904: 	movq	0x140(%rsp), %rdi
    0000190c: 	cmpq	0x18(%rsp), %rdi
    00001911: 	je	.Ltmp1032 # Offset: 6417
    00001913: 	movq	0x150(%rsp), %rax
    0000191b: 	leaq	0x1(%rax), %rsi
    0000191f: 	callq	_ZdlPvm@PLT # Offset: 6431
.Ltmp1032:
    00001924: 	movq	0x50(%rsp), %rsi
    00001929: 	movq	0x10(%rsp), %rdi
    0000192e: 	leaq	DATAat0x384e8(%rip), %rdx
    00001935: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6453
    0000193a: 	callq	clock@PLT # Offset: 6458
    0000193f: 	movl	iterations(%rip), %esi
    00001945: 	movq	%rax, start_time(%rip)
    0000194c: 	testl	%esi, %esi
    0000194e: 	jle	.Ltmp1033 # Offset: 6478
    00001954: 	movl	0x5c(%rsp), %eax
    00001958: 	movdqa	DATAat0x38620(%rip), %xmm5
    00001960: 	xorl	%ebp, %ebp
    00001962: 	leaq	0x20a0(%rsp), %rbx
    0000196a: 	leal	(%rax,%r13), %r12d
    0000196e: 	addl	0x60(%rsp), %r12d
    00001973: 	addb	0x64(%rsp), %r12b
    00001978: 	movaps	%xmm5, (%rsp)
    0000197c: 	movd	%r12d, %xmm0
    00001981: 	punpcklbw	%xmm0, %xmm0
    00001985: 	punpcklwd	%xmm0, %xmm0
    00001989: 	pshufd	$0x0, %xmm0, %xmm5
    0000198e: 	movaps	%xmm5, 0x30(%rsp)
    00001993: 	punpcklbw	%xmm5, %xmm5
    00001997: 	movaps	%xmm5, 0x20(%rsp)
    0000199c: 	nopl	(%rax) # Size: 4
.Ltmp1036:
    000019a0: 	movdqa	0x30(%rsp), %xmm6
    000019a6: 	movq	%r15, %rax
    000019a9: 	pxor	%xmm2, %xmm2
    000019ad: 	movdqa	%xmm6, %xmm3
    000019b1: 	punpckhbw	%xmm6, %xmm3
    000019b5: 	nopl	(%rax) # Size: 3
.Ltmp1034:
    000019b8: 	movdqa	(%rax), %xmm0
    000019bc: 	movdqa	(%rsp), %xmm7
    000019c1: 	addq	$0x10, %rax
    000019c5: 	movdqa	%xmm0, %xmm1
    000019c9: 	punpcklbw	%xmm0, %xmm1
    000019cd: 	punpckhbw	%xmm0, %xmm0
    000019d1: 	pmullw	0x20(%rsp), %xmm1
    000019d7: 	pand	%xmm7, %xmm1
    000019db: 	pmullw	%xmm3, %xmm0
    000019df: 	pand	%xmm7, %xmm0
    000019e3: 	packuswb	%xmm0, %xmm1
    000019e7: 	paddb	%xmm1, %xmm2
    000019eb: 	cmpq	%rbx, %rax
    000019ee: 	jne	.Ltmp1034 # Offset: 6638
    000019f0: 	cvttsd2si	init_value(%rip), %ecx
    000019f8: 	movdqa	%xmm2, %xmm0
    000019fc: 	psrldq	$0x8, %xmm0
    00001a01: 	paddb	%xmm0, %xmm2
    00001a05: 	pxor	%xmm0, %xmm0
    00001a09: 	psadbw	%xmm0, %xmm2
    00001a0d: 	movl	%ecx, %eax
    00001a0f: 	movd	%xmm2, %edx
    00001a13: 	imull	%r12d, %eax
    00001a17: 	shll	$0x6, %eax
    00001a1a: 	cmpb	%dl, %al
    00001a1c: 	je	.Ltmp1035 # Offset: 6684
    00001a1e: 	movl	current_test(%rip), %edx
    00001a24: 	leaq	DATAat0x381c8(%rip), %rsi
    00001a2b: 	movl	$0x1, %edi
    00001a30: 	xorl	%eax, %eax
    00001a32: 	callq	__printf_chk@PLT # Offset: 6706
    00001a37: 	movl	iterations(%rip), %esi
.Ltmp1035:
    00001a3d: 	addl	$0x1, %ebp
    00001a40: 	cmpl	%esi, %ebp
    00001a42: 	jl	.Ltmp1036 # Offset: 6722
.Ltmp1033:
    00001a48: 	movq	0x10(%rsp), %rsi
    00001a4d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a54: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6740
    00001a59: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a60: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a67: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a6e: 	je	.Ltmp1037 # Offset: 6766
.Ltmp1154:
    00001a74: 	movq	-0x20(%rax), %rbp
    00001a78: 	callq	clock@PLT # Offset: 6776
    00001a7d: 	pxor	%xmm0, %xmm0
    00001a81: 	movq	%rax, end_time(%rip)
    00001a88: 	movq	%rbp, %rdi
    00001a8b: 	subq	start_time(%rip), %rax
    00001a92: 	cvtsi2sd	%rax, %xmm0
    00001a97: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a9f: 	callq	_Z13record_resultdPKc # Offset: 6815
    00001aa4: 	movq	0x140(%rsp), %rdi
    00001aac: 	cmpq	0x18(%rsp), %rdi
    00001ab1: 	je	.Ltmp1038 # Offset: 6833
    00001ab3: 	movq	0x150(%rsp), %rax
    00001abb: 	leaq	0x1(%rax), %rsi
    00001abf: 	callq	_ZdlPvm@PLT # Offset: 6847
.Ltmp1038:
    00001ac4: 	movq	0x50(%rsp), %rsi
    00001ac9: 	movq	0x10(%rsp), %rdi
    00001ace: 	leaq	DATAat0x38508(%rip), %rdx
    00001ad5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6869
    00001ada: 	callq	clock@PLT # Offset: 6874
    00001adf: 	movl	iterations(%rip), %esi
    00001ae5: 	movq	%rax, start_time(%rip)
    00001aec: 	testl	%esi, %esi
    00001aee: 	jle	.Ltmp1039 # Offset: 6894
    00001af4: 	movl	%r13d, %r12d
    00001af7: 	subl	0x5c(%rsp), %r12d
    00001afc: 	addl	0x60(%rsp), %r12d
    00001b01: 	xorl	%ebp, %ebp
    00001b03: 	subb	0x64(%rsp), %r12b
    00001b08: 	movdqa	DATAat0x38620(%rip), %xmm6
    00001b10: 	leaq	0x20a0(%rsp), %rbx
    00001b18: 	movd	%r12d, %xmm0
    00001b1d: 	punpcklbw	%xmm0, %xmm0
    00001b21: 	movaps	%xmm6, (%rsp)
    00001b25: 	punpcklwd	%xmm0, %xmm0
    00001b29: 	pshufd	$0x0, %xmm0, %xmm5
    00001b2e: 	movaps	%xmm5, 0x30(%rsp)
    00001b33: 	punpcklbw	%xmm5, %xmm5
    00001b37: 	movaps	%xmm5, 0x20(%rsp)
    00001b3c: 	nopl	(%rax) # Size: 4
.Ltmp1042:
    00001b40: 	movdqa	0x30(%rsp), %xmm7
    00001b46: 	movq	%r15, %rax
    00001b49: 	pxor	%xmm2, %xmm2
    00001b4d: 	movdqa	%xmm7, %xmm3
    00001b51: 	punpckhbw	%xmm7, %xmm3
    00001b55: 	nopl	(%rax) # Size: 3
.Ltmp1040:
    00001b58: 	movdqa	(%rax), %xmm0
    00001b5c: 	movdqa	(%rsp), %xmm4
    00001b61: 	addq	$0x10, %rax
    00001b65: 	movdqa	%xmm0, %xmm1
    00001b69: 	punpcklbw	%xmm0, %xmm1
    00001b6d: 	punpckhbw	%xmm0, %xmm0
    00001b71: 	pmullw	0x20(%rsp), %xmm1
    00001b77: 	pand	%xmm4, %xmm1
    00001b7b: 	pmullw	%xmm3, %xmm0
    00001b7f: 	pand	%xmm4, %xmm0
    00001b83: 	packuswb	%xmm0, %xmm1
    00001b87: 	paddb	%xmm1, %xmm2
    00001b8b: 	cmpq	%rax, %rbx
    00001b8e: 	jne	.Ltmp1040 # Offset: 7054
    00001b90: 	cvttsd2si	init_value(%rip), %ecx
    00001b98: 	movdqa	%xmm2, %xmm0
    00001b9c: 	psrldq	$0x8, %xmm0
    00001ba1: 	paddb	%xmm0, %xmm2
    00001ba5: 	pxor	%xmm0, %xmm0
    00001ba9: 	psadbw	%xmm0, %xmm2
    00001bad: 	movl	%ecx, %eax
    00001baf: 	movd	%xmm2, %edx
    00001bb3: 	imull	%r12d, %eax
    00001bb7: 	shll	$0x6, %eax
    00001bba: 	cmpb	%dl, %al
    00001bbc: 	je	.Ltmp1041 # Offset: 7100
    00001bbe: 	movl	current_test(%rip), %edx
    00001bc4: 	leaq	DATAat0x381c8(%rip), %rsi
    00001bcb: 	movl	$0x1, %edi
    00001bd0: 	xorl	%eax, %eax
    00001bd2: 	callq	__printf_chk@PLT # Offset: 7122
    00001bd7: 	movl	iterations(%rip), %esi
.Ltmp1041:
    00001bdd: 	addl	$0x1, %ebp
    00001be0: 	cmpl	%esi, %ebp
    00001be2: 	jl	.Ltmp1042 # Offset: 7138
.Ltmp1039:
    00001be8: 	movq	0x10(%rsp), %rsi
    00001bed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bf4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7156
    00001bf9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c0e: 	je	.Ltmp1043 # Offset: 7182
.Ltmp1153:
    00001c14: 	movq	-0x20(%rax), %rbp
    00001c18: 	callq	clock@PLT # Offset: 7192
    00001c1d: 	pxor	%xmm0, %xmm0
    00001c21: 	movq	%rax, end_time(%rip)
    00001c28: 	movq	%rbp, %rdi
    00001c2b: 	subq	start_time(%rip), %rax
    00001c32: 	cvtsi2sd	%rax, %xmm0
    00001c37: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001c3f: 	callq	_Z13record_resultdPKc # Offset: 7231
    00001c44: 	movq	0x140(%rsp), %rdi
    00001c4c: 	cmpq	0x18(%rsp), %rdi
    00001c51: 	je	.Ltmp1044 # Offset: 7249
    00001c53: 	movq	0x150(%rsp), %rax
    00001c5b: 	leaq	0x1(%rax), %rsi
    00001c5f: 	callq	_ZdlPvm@PLT # Offset: 7263
.Ltmp1044:
    00001c64: 	movq	0x50(%rsp), %rsi
    00001c69: 	movq	0x10(%rsp), %rdi
    00001c6e: 	leaq	DATAat0x3839a(%rip), %rdx
    00001c75: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7285
    00001c7a: 	callq	clock@PLT # Offset: 7290
    00001c7f: 	movl	iterations(%rip), %esi
    00001c85: 	movq	%rax, start_time(%rip)
    00001c8c: 	testl	%esi, %esi
    00001c8e: 	jle	.Ltmp1045 # Offset: 7310
    00001c94: 	movzbl	0x68(%rsp), %r12d
    00001c9a: 	addb	0x6f(%rsp), %r12b
    00001c9f: 	xorl	%ebp, %ebp
    00001ca1: 	leaq	0x20a0(%rsp), %rbx
    00001ca9: 	addl	%r14d, %r12d
    00001cac: 	addb	0x40(%rsp), %r12b
    00001cb1: 	movdqa	DATAat0x38620(%rip), %xmm4
    00001cb9: 	movd	%r12d, %xmm0
    00001cbe: 	punpcklbw	%xmm0, %xmm0
    00001cc2: 	movaps	%xmm4, (%rsp)
    00001cc6: 	punpcklwd	%xmm0, %xmm0
    00001cca: 	pshufd	$0x0, %xmm0, %xmm7
    00001ccf: 	movdqa	%xmm7, %xmm5
    00001cd3: 	movaps	%xmm7, 0x30(%rsp)
    00001cd8: 	punpcklbw	%xmm7, %xmm5
    00001cdc: 	movaps	%xmm5, 0x20(%rsp)
    00001ce1: 	nopl	(%rax) # Size: 7
.Ltmp1048:
    00001ce8: 	movdqa	0x30(%rsp), %xmm6
    00001cee: 	movq	%r15, %rax
    00001cf1: 	pxor	%xmm2, %xmm2
    00001cf5: 	movdqa	%xmm6, %xmm3
    00001cf9: 	punpckhbw	%xmm6, %xmm3
    00001cfd: 	nopl	(%rax) # Size: 3
.Ltmp1046:
    00001d00: 	movdqa	(%rax), %xmm0
    00001d04: 	movdqa	(%rsp), %xmm6
    00001d09: 	addq	$0x10, %rax
    00001d0d: 	movdqa	%xmm0, %xmm1
    00001d11: 	punpcklbw	%xmm0, %xmm1
    00001d15: 	punpckhbw	%xmm0, %xmm0
    00001d19: 	pmullw	0x20(%rsp), %xmm1
    00001d1f: 	pand	%xmm6, %xmm1
    00001d23: 	pmullw	%xmm3, %xmm0
    00001d27: 	pand	%xmm6, %xmm0
    00001d2b: 	packuswb	%xmm0, %xmm1
    00001d2f: 	paddb	%xmm1, %xmm2
    00001d33: 	cmpq	%rbx, %rax
    00001d36: 	jne	.Ltmp1046 # Offset: 7478
    00001d38: 	cvttsd2si	init_value(%rip), %ecx
    00001d40: 	movdqa	%xmm2, %xmm0
    00001d44: 	psrldq	$0x8, %xmm0
    00001d49: 	paddb	%xmm0, %xmm2
    00001d4d: 	pxor	%xmm0, %xmm0
    00001d51: 	psadbw	%xmm0, %xmm2
    00001d55: 	movl	%ecx, %eax
    00001d57: 	movd	%xmm2, %edx
    00001d5b: 	imull	%r12d, %eax
    00001d5f: 	shll	$0x6, %eax
    00001d62: 	cmpb	%dl, %al
    00001d64: 	je	.Ltmp1047 # Offset: 7524
    00001d66: 	movl	current_test(%rip), %edx
    00001d6c: 	leaq	DATAat0x381c8(%rip), %rsi
    00001d73: 	movl	$0x1, %edi
    00001d78: 	xorl	%eax, %eax
    00001d7a: 	callq	__printf_chk@PLT # Offset: 7546
    00001d7f: 	movl	iterations(%rip), %esi
.Ltmp1047:
    00001d85: 	addl	$0x1, %ebp
    00001d88: 	cmpl	%esi, %ebp
    00001d8a: 	jl	.Ltmp1048 # Offset: 7562
.Ltmp1045:
    00001d90: 	movq	0x10(%rsp), %rsi
    00001d95: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d9c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7580
    00001da1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001da8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001daf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001db6: 	je	.Ltmp1049 # Offset: 7606
.Ltmp1152:
    00001dbc: 	movq	-0x20(%rax), %rbp
    00001dc0: 	callq	clock@PLT # Offset: 7616
    00001dc5: 	pxor	%xmm0, %xmm0
    00001dc9: 	movq	%rax, end_time(%rip)
    00001dd0: 	movq	%rbp, %rdi
    00001dd3: 	subq	start_time(%rip), %rax
    00001dda: 	cvtsi2sd	%rax, %xmm0
    00001ddf: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001de7: 	callq	_Z13record_resultdPKc # Offset: 7655
    00001dec: 	movq	0x140(%rsp), %rdi
    00001df4: 	cmpq	0x18(%rsp), %rdi
    00001df9: 	je	.Ltmp1050 # Offset: 7673
    00001dfb: 	movq	0x150(%rsp), %rax
    00001e03: 	leaq	0x1(%rax), %rsi
    00001e07: 	callq	_ZdlPvm@PLT # Offset: 7687
.Ltmp1050:
    00001e0c: 	movq	0x50(%rsp), %rsi
    00001e11: 	movq	0x10(%rsp), %rdi
    00001e16: 	leaq	DATAat0x383b1(%rip), %rdx
    00001e1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7709
    00001e22: 	callq	clock@PLT # Offset: 7714
    00001e27: 	movl	iterations(%rip), %esi
    00001e2d: 	movq	%rax, start_time(%rip)
    00001e34: 	testl	%esi, %esi
    00001e36: 	jle	.Ltmp1051 # Offset: 7734
    00001e3c: 	movzbl	0x68(%rsp), %r12d
    00001e42: 	addb	0x6f(%rsp), %r12b
    00001e47: 	xorl	%ebp, %ebp
    00001e49: 	leaq	0x20a0(%rsp), %rbx
    00001e51: 	addl	%r14d, %r12d
    00001e54: 	addb	0x40(%rsp), %r12b
    00001e59: 	movdqa	DATAat0x38620(%rip), %xmm6
    00001e61: 	movd	%r12d, %xmm0
    00001e66: 	punpcklbw	%xmm0, %xmm0
    00001e6a: 	movaps	%xmm6, (%rsp)
    00001e6e: 	punpcklwd	%xmm0, %xmm0
    00001e72: 	pshufd	$0x0, %xmm0, %xmm5
    00001e77: 	movaps	%xmm5, 0x30(%rsp)
    00001e7c: 	punpcklbw	%xmm5, %xmm5
    00001e80: 	movaps	%xmm5, 0x20(%rsp)
    00001e85: 	nopl	(%rax) # Size: 3
.Ltmp1054:
    00001e88: 	movdqa	0x30(%rsp), %xmm5
    00001e8e: 	movq	%r15, %rax
    00001e91: 	pxor	%xmm2, %xmm2
    00001e95: 	movdqa	%xmm5, %xmm3
    00001e99: 	punpckhbw	%xmm5, %xmm3
    00001e9d: 	nopl	(%rax) # Size: 3
.Ltmp1052:
    00001ea0: 	movdqa	(%rax), %xmm0
    00001ea4: 	movdqa	(%rsp), %xmm7
    00001ea9: 	addq	$0x10, %rax
    00001ead: 	movdqa	%xmm0, %xmm1
    00001eb1: 	punpcklbw	%xmm0, %xmm1
    00001eb5: 	punpckhbw	%xmm0, %xmm0
    00001eb9: 	pmullw	0x20(%rsp), %xmm1
    00001ebf: 	pand	%xmm7, %xmm1
    00001ec3: 	pmullw	%xmm3, %xmm0
    00001ec7: 	pand	%xmm7, %xmm0
    00001ecb: 	packuswb	%xmm0, %xmm1
    00001ecf: 	paddb	%xmm1, %xmm2
    00001ed3: 	cmpq	%rbx, %rax
    00001ed6: 	jne	.Ltmp1052 # Offset: 7894
    00001ed8: 	cvttsd2si	init_value(%rip), %ecx
    00001ee0: 	movdqa	%xmm2, %xmm0
    00001ee4: 	psrldq	$0x8, %xmm0
    00001ee9: 	paddb	%xmm0, %xmm2
    00001eed: 	pxor	%xmm0, %xmm0
    00001ef1: 	psadbw	%xmm0, %xmm2
    00001ef5: 	movl	%ecx, %eax
    00001ef7: 	movd	%xmm2, %edx
    00001efb: 	imull	%r12d, %eax
    00001eff: 	shll	$0x6, %eax
    00001f02: 	cmpb	%dl, %al
    00001f04: 	je	.Ltmp1053 # Offset: 7940
    00001f06: 	movl	current_test(%rip), %edx
    00001f0c: 	leaq	DATAat0x381c8(%rip), %rsi
    00001f13: 	movl	$0x1, %edi
    00001f18: 	xorl	%eax, %eax
    00001f1a: 	callq	__printf_chk@PLT # Offset: 7962
    00001f1f: 	movl	iterations(%rip), %esi
.Ltmp1053:
    00001f25: 	addl	$0x1, %ebp
    00001f28: 	cmpl	%esi, %ebp
    00001f2a: 	jl	.Ltmp1054 # Offset: 7978
.Ltmp1051:
    00001f30: 	movq	0x10(%rsp), %rsi
    00001f35: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f3c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7996
    00001f41: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f48: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f4f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f56: 	je	.Ltmp1055 # Offset: 8022
.Ltmp1151:
    00001f5c: 	movq	-0x20(%rax), %rbp
    00001f60: 	callq	clock@PLT # Offset: 8032
    00001f65: 	pxor	%xmm0, %xmm0
    00001f69: 	movq	%rax, end_time(%rip)
    00001f70: 	movq	%rbp, %rdi
    00001f73: 	subq	start_time(%rip), %rax
    00001f7a: 	cvtsi2sd	%rax, %xmm0
    00001f7f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001f87: 	callq	_Z13record_resultdPKc # Offset: 8071
    00001f8c: 	movq	0x140(%rsp), %rdi
    00001f94: 	cmpq	0x18(%rsp), %rdi
    00001f99: 	je	.Ltmp1056 # Offset: 8089
    00001f9b: 	movq	0x150(%rsp), %rax
    00001fa3: 	leaq	0x1(%rax), %rsi
    00001fa7: 	callq	_ZdlPvm@PLT # Offset: 8103
.Ltmp1056:
    00001fac: 	movq	0x50(%rsp), %rsi
    00001fb1: 	movq	0x10(%rsp), %rdi
    00001fb6: 	leaq	DATAat0x383c9(%rip), %rdx
    00001fbd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8125
    00001fc2: 	callq	clock@PLT # Offset: 8130
    00001fc7: 	movl	iterations(%rip), %esi
    00001fcd: 	movq	%rax, start_time(%rip)
    00001fd4: 	testl	%esi, %esi
    00001fd6: 	jle	.Ltmp1057 # Offset: 8150
    00001fdc: 	movzbl	0x6f(%rsp), %r12d
    00001fe2: 	movdqa	DATAat0x38620(%rip), %xmm4
    00001fea: 	xorl	%ebp, %ebp
    00001fec: 	leaq	0x20a0(%rsp), %rbx
    00001ff4: 	addl	%r14d, %r12d
    00001ff7: 	subb	0x68(%rsp), %r12b
    00001ffc: 	subb	0x40(%rsp), %r12b
    00002001: 	movaps	%xmm4, (%rsp)
    00002005: 	movd	%r12d, %xmm0
    0000200a: 	punpcklbw	%xmm0, %xmm0
    0000200e: 	punpcklwd	%xmm0, %xmm0
    00002012: 	pshufd	$0x0, %xmm0, %xmm7
    00002017: 	movdqa	%xmm7, %xmm5
    0000201b: 	movaps	%xmm7, 0x30(%rsp)
    00002020: 	punpcklbw	%xmm7, %xmm5
    00002024: 	movaps	%xmm5, 0x20(%rsp)
    00002029: 	nopl	(%rax) # Size: 7
.Ltmp1060:
    00002030: 	movdqa	0x30(%rsp), %xmm4
    00002036: 	movq	%r15, %rax
    00002039: 	pxor	%xmm2, %xmm2
    0000203d: 	movdqa	%xmm4, %xmm3
    00002041: 	punpckhbw	%xmm4, %xmm3
    00002045: 	nopl	(%rax) # Size: 3
.Ltmp1058:
    00002048: 	movdqa	(%rax), %xmm0
    0000204c: 	movdqa	(%rsp), %xmm4
    00002051: 	addq	$0x10, %rax
    00002055: 	movdqa	%xmm0, %xmm1
    00002059: 	punpcklbw	%xmm0, %xmm1
    0000205d: 	punpckhbw	%xmm0, %xmm0
    00002061: 	pmullw	0x20(%rsp), %xmm1
    00002067: 	pand	%xmm4, %xmm1
    0000206b: 	pmullw	%xmm3, %xmm0
    0000206f: 	pand	%xmm4, %xmm0
    00002073: 	packuswb	%xmm0, %xmm1
    00002077: 	paddb	%xmm1, %xmm2
    0000207b: 	cmpq	%rax, %rbx
    0000207e: 	jne	.Ltmp1058 # Offset: 8318
    00002080: 	cvttsd2si	init_value(%rip), %ecx
    00002088: 	movdqa	%xmm2, %xmm0
    0000208c: 	psrldq	$0x8, %xmm0
    00002091: 	paddb	%xmm0, %xmm2
    00002095: 	pxor	%xmm0, %xmm0
    00002099: 	psadbw	%xmm0, %xmm2
    0000209d: 	movl	%ecx, %eax
    0000209f: 	movd	%xmm2, %edx
    000020a3: 	imull	%r12d, %eax
    000020a7: 	shll	$0x6, %eax
    000020aa: 	cmpb	%dl, %al
    000020ac: 	je	.Ltmp1059 # Offset: 8364
    000020ae: 	movl	current_test(%rip), %edx
    000020b4: 	leaq	DATAat0x381c8(%rip), %rsi
    000020bb: 	movl	$0x1, %edi
    000020c0: 	xorl	%eax, %eax
    000020c2: 	callq	__printf_chk@PLT # Offset: 8386
    000020c7: 	movl	iterations(%rip), %esi
.Ltmp1059:
    000020cd: 	addl	$0x1, %ebp
    000020d0: 	cmpl	%esi, %ebp
    000020d2: 	jl	.Ltmp1060 # Offset: 8402
.Ltmp1057:
    000020d8: 	movq	0x10(%rsp), %rsi
    000020dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8420
    000020e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020fe: 	je	.Ltmp1061 # Offset: 8446
.Ltmp1150:
    00002104: 	movq	-0x20(%rax), %rbp
    00002108: 	callq	clock@PLT # Offset: 8456
    0000210d: 	pxor	%xmm0, %xmm0
    00002111: 	movq	%rax, end_time(%rip)
    00002118: 	movq	%rbp, %rdi
    0000211b: 	subq	start_time(%rip), %rax
    00002122: 	cvtsi2sd	%rax, %xmm0
    00002127: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000212f: 	callq	_Z13record_resultdPKc # Offset: 8495
    00002134: 	movq	0x140(%rsp), %rdi
    0000213c: 	cmpq	0x18(%rsp), %rdi
    00002141: 	je	.Ltmp1062 # Offset: 8513
    00002143: 	movq	0x150(%rsp), %rax
    0000214b: 	leaq	0x1(%rax), %rsi
    0000214f: 	callq	_ZdlPvm@PLT # Offset: 8527
.Ltmp1062:
    00002154: 	movq	0x50(%rsp), %rsi
    00002159: 	movq	0x10(%rsp), %rdi
    0000215e: 	leaq	DATAat0x38528(%rip), %rdx
    00002165: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8549
    0000216a: 	callq	clock@PLT # Offset: 8554
    0000216f: 	movl	iterations(%rip), %ecx
    00002175: 	movq	%rax, start_time(%rip)
    0000217c: 	testl	%ecx, %ecx
    0000217e: 	jle	.Ltmp1063 # Offset: 8574
    00002184: 	movd	%r14d, %xmm0
    00002189: 	movl	0x5c(%rsp), %r12d
    0000218e: 	addl	0x60(%rsp), %r12d
    00002193: 	xorl	%ebp, %ebp
    00002195: 	punpcklbw	%xmm0, %xmm0
    00002199: 	addb	0x64(%rsp), %r12b
    0000219e: 	movdqa	DATAat0x38620(%rip), %xmm5
    000021a6: 	leaq	0x20a0(%rsp), %rbx
    000021ae: 	punpcklwd	%xmm0, %xmm0
    000021b2: 	pshufd	$0x0, %xmm0, %xmm6
    000021b7: 	movd	%r12d, %xmm0
    000021bc: 	movaps	%xmm5, (%rsp)
    000021c0: 	punpcklbw	%xmm0, %xmm0
    000021c4: 	movaps	%xmm6, 0x20(%rsp)
    000021c9: 	punpcklwd	%xmm0, %xmm0
    000021cd: 	pshufd	$0x0, %xmm0, %xmm4
    000021d2: 	movdqa	%xmm4, %xmm5
    000021d6: 	movaps	%xmm4, 0x40(%rsp)
    000021db: 	punpcklbw	%xmm4, %xmm5
    000021df: 	movaps	%xmm5, 0x30(%rsp)
    000021e4: 	nopl	(%rax) # Size: 4
.Ltmp1066:
    000021e8: 	movdqa	0x40(%rsp), %xmm7
    000021ee: 	movq	%r15, %rax
    000021f1: 	pxor	%xmm2, %xmm2
    000021f5: 	movdqa	%xmm7, %xmm3
    000021f9: 	punpckhbw	%xmm7, %xmm3
    000021fd: 	nopl	(%rax) # Size: 3
.Ltmp1064:
    00002200: 	movdqa	0x20(%rsp), %xmm0
    00002206: 	paddb	(%rax), %xmm0
    0000220a: 	addq	$0x10, %rax
    0000220e: 	movdqa	(%rsp), %xmm6
    00002213: 	movdqa	%xmm0, %xmm1
    00002217: 	punpcklbw	%xmm0, %xmm1
    0000221b: 	punpckhbw	%xmm0, %xmm0
    0000221f: 	pmullw	0x30(%rsp), %xmm1
    00002225: 	pand	%xmm6, %xmm1
    00002229: 	pmullw	%xmm3, %xmm0
    0000222d: 	pand	%xmm6, %xmm0
    00002231: 	packuswb	%xmm0, %xmm1
    00002235: 	paddb	%xmm1, %xmm2
    00002239: 	cmpq	%rbx, %rax
    0000223c: 	jne	.Ltmp1064 # Offset: 8764
    0000223e: 	cvttsd2si	init_value(%rip), %eax
    00002246: 	movdqa	%xmm2, %xmm0
    0000224a: 	psrldq	$0x8, %xmm0
    0000224f: 	paddb	%xmm0, %xmm2
    00002253: 	pxor	%xmm0, %xmm0
    00002257: 	psadbw	%xmm0, %xmm2
    0000225b: 	addl	%r13d, %eax
    0000225e: 	movd	%xmm2, %edx
    00002262: 	imull	%r12d, %eax
    00002266: 	shll	$0x6, %eax
    00002269: 	cmpb	%dl, %al
    0000226b: 	je	.Ltmp1065 # Offset: 8811
    0000226d: 	movl	current_test(%rip), %edx
    00002273: 	leaq	DATAat0x381c8(%rip), %rsi
    0000227a: 	movl	$0x1, %edi
    0000227f: 	xorl	%eax, %eax
    00002281: 	callq	__printf_chk@PLT # Offset: 8833
    00002286: 	movl	iterations(%rip), %ecx
.Ltmp1065:
    0000228c: 	addl	$0x1, %ebp
    0000228f: 	cmpl	%ecx, %ebp
    00002291: 	jl	.Ltmp1066 # Offset: 8849
.Ltmp1063:
    00002297: 	movq	0x10(%rsp), %rsi
    0000229c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022a3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8867
    000022a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022af: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022b6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022bd: 	je	.Ltmp1067 # Offset: 8893
.Ltmp1149:
    000022c3: 	movq	-0x20(%rax), %rbp
    000022c7: 	callq	clock@PLT # Offset: 8903
    000022cc: 	pxor	%xmm0, %xmm0
    000022d0: 	movq	%rax, end_time(%rip)
    000022d7: 	movq	%rbp, %rdi
    000022da: 	subq	start_time(%rip), %rax
    000022e1: 	cvtsi2sd	%rax, %xmm0
    000022e6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000022ee: 	callq	_Z13record_resultdPKc # Offset: 8942
    000022f3: 	movq	0x140(%rsp), %rdi
    000022fb: 	cmpq	0x18(%rsp), %rdi
    00002300: 	je	.Ltmp1068 # Offset: 8960
    00002302: 	movq	0x150(%rsp), %rax
    0000230a: 	leaq	0x1(%rax), %rsi
    0000230e: 	callq	_ZdlPvm@PLT # Offset: 8974
.Ltmp1068:
    00002313: 	movq	0x10(%rsp), %rbx
    00002318: 	movq	0x50(%rsp), %rsi
    0000231d: 	leaq	DATAat0x383e1(%rip), %rdx
    00002324: 	movq	%rbx, %rdi
    00002327: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8999
    0000232c: 	movl	0x64(%rsp), %r8d
    00002331: 	movl	0x60(%rsp), %ecx
    00002335: 	movq	%rbx, %r9
    00002338: 	movl	%r13d, %esi
    0000233b: 	movl	0x5c(%rsp), %edx
    0000233f: 	movq	%r15, %rdi
    00002342: 	callq	"_Z15test_variable4SIa33custom_poly_distributive_variableIaEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9026
    00002347: 	movq	0x140(%rsp), %rdi
    0000234f: 	cmpq	0x18(%rsp), %rdi
    00002354: 	je	.Ltmp1069 # Offset: 9044
    00002356: 	movq	0x150(%rsp), %rax
    0000235e: 	leaq	0x1(%rax), %rsi
    00002362: 	callq	_ZdlPvm@PLT # Offset: 9058
.Ltmp1069:
    00002367: 	movq	0x50(%rsp), %rbx
    0000236c: 	leaq	0x120(%rsp), %rdi
    00002374: 	leaq	DATAat0x3839a(%rip), %rdx
    0000237b: 	movq	%rbx, %rsi
    0000237e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9086
    00002383: 	movl	iterations(%rip), %esi
    00002389: 	movq	0x120(%rsp), %rdi
    00002391: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 9105
    00002396: 	movq	0x10(%rsp), %rdi
    0000239b: 	leaq	DATAat0x383fa(%rip), %rdx
    000023a2: 	movq	%rbx, %rsi
    000023a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9125
    000023aa: 	callq	clock@PLT # Offset: 9130
    000023af: 	movq	%rax, start_time(%rip)
    000023b6: 	movl	iterations(%rip), %eax
    000023bc: 	movl	%eax, 0x68(%rsp)
    000023c0: 	testl	%eax, %eax
    000023c2: 	jle	.Ltmp1070 # Offset: 9154
    000023c8: 	movdqa	DATAat0x38620(%rip), %xmm7
    000023d0: 	movl	$0x0, 0x20(%rsp)
    000023d8: 	leaq	0x2090(%rsp), %rbx
    000023e0: 	movaps	%xmm7, (%rsp)
    000023e4: 	nopl	(%rax) # Size: 4
.Ltmp1073:
    000023e8: 	movzbl	0x161(%rsp), %eax
    000023f0: 	addb	0x160(%rsp), %al
    000023f7: 	pxor	%xmm2, %xmm2
    000023fb: 	imull	%eax, %eax
    000023fe: 	movb	%al, 0x30(%rsp)
    00002402: 	movq	%r15, %rax
    00002405: 	nopl	(%rax) # Size: 3
.Ltmp1071:
    00002408: 	movdqu	0x1(%rax), %xmm0
    0000240d: 	paddb	(%rax), %xmm0
    00002411: 	addq	$0x10, %rax
    00002415: 	movdqa	(%rsp), %xmm7
    0000241a: 	movdqa	%xmm0, %xmm1
    0000241e: 	punpcklbw	%xmm0, %xmm1
    00002422: 	punpckhbw	%xmm0, %xmm0
    00002426: 	pmullw	%xmm1, %xmm1
    0000242a: 	pmullw	%xmm0, %xmm0
    0000242e: 	pand	%xmm7, %xmm1
    00002432: 	pand	%xmm7, %xmm0
    00002436: 	packuswb	%xmm0, %xmm1
    0000243a: 	paddb	%xmm1, %xmm2
    0000243e: 	cmpq	%rbx, %rax
    00002441: 	jne	.Ltmp1071 # Offset: 9281
    00002443: 	movdqa	%xmm2, %xmm0
    00002447: 	movzbl	0x2091(%rsp), %r10d
    00002450: 	movzbl	0x2090(%rsp), %eax
    00002458: 	movzbl	0x2098(%rsp), %r11d
    00002461: 	psrldq	$0x8, %xmm0
    00002466: 	addb	0x2099(%rsp), %r11b
    0000246e: 	movb	%r11b, 0x5c(%rsp)
    00002473: 	movzbl	0x209d(%rsp), %ebp
    0000247b: 	paddb	%xmm0, %xmm2
    0000247f: 	pxor	%xmm0, %xmm0
    00002483: 	movzbl	0x209e(%rsp), %r11d
    0000248c: 	addl	%r10d, %eax
    0000248f: 	psadbw	%xmm0, %xmm2
    00002493: 	movzbl	0x2097(%rsp), %edx
    0000249b: 	addb	0x2098(%rsp), %dl
    000024a2: 	imull	%eax, %eax
    000024a5: 	movzbl	0x2099(%rsp), %r14d
    000024ae: 	movd	%xmm2, 0x64(%rsp)
    000024b4: 	addb	0x209a(%rsp), %r14b
    000024bc: 	addl	%r11d, %ebp
    000024bf: 	movb	%dl, 0x40(%rsp)
    000024c3: 	addb	0x2092(%rsp), %r10b
    000024cb: 	movb	%r14b, 0x60(%rsp)
    000024d0: 	addb	0x209f(%rsp), %r11b
    000024d8: 	movzbl	0x2094(%rsp), %edi
    000024e0: 	movzbl	0x2095(%rsp), %esi
    000024e8: 	addb	0x2095(%rsp), %dil
    000024f0: 	addb	0x2096(%rsp), %sil
    000024f8: 	movzbl	0x2096(%rsp), %ecx
    00002500: 	movzbl	0x2092(%rsp), %r9d
    00002509: 	addb	0x2097(%rsp), %cl
    00002510: 	addb	0x2093(%rsp), %r9b
    00002518: 	movzbl	0x2093(%rsp), %r8d
    00002521: 	movzbl	0x209a(%rsp), %r14d
    0000252a: 	addb	0x2094(%rsp), %r8b
    00002532: 	addb	0x209b(%rsp), %r14b
    0000253a: 	movzbl	0x209b(%rsp), %r13d
    00002543: 	movzbl	0x209d(%rsp), %r12d
    0000254c: 	addb	0x209c(%rsp), %r13b
    00002554: 	addb	0x209c(%rsp), %r12b
    0000255c: 	movzbl	0x30(%rsp), %edx
    00002561: 	addb	0x64(%rsp), %dl
    00002565: 	movb	%dl, 0x30(%rsp)
    00002569: 	movzbl	0x30(%rsp), %edx
    0000256e: 	addl	%eax, %edx
    00002570: 	movl	%r10d, %eax
    00002573: 	imull	%r10d, %eax
    00002577: 	movl	%eax, %r10d
    0000257a: 	movl	%r9d, %eax
    0000257d: 	imull	%r9d, %eax
    00002581: 	addl	%edx, %r10d
    00002584: 	movl	%eax, %r9d
    00002587: 	movl	%r8d, %eax
    0000258a: 	imull	%r8d, %eax
    0000258e: 	addl	%r10d, %r9d
    00002591: 	movl	%eax, %r8d
    00002594: 	movl	%edi, %eax
    00002596: 	imull	%edi, %eax
    00002599: 	addl	%r9d, %r8d
    0000259c: 	movl	%eax, %edi
    0000259e: 	movl	%esi, %eax
    000025a0: 	imull	%esi, %eax
    000025a3: 	addl	%r8d, %edi
    000025a6: 	movl	%eax, %esi
    000025a8: 	movl	%ecx, %eax
    000025aa: 	imull	%ecx, %eax
    000025ad: 	addl	%edi, %esi
    000025af: 	movl	%eax, %ecx
    000025b1: 	movzbl	0x40(%rsp), %eax
    000025b6: 	addl	%esi, %ecx
    000025b8: 	imull	%eax, %eax
    000025bb: 	movl	%eax, %edx
    000025bd: 	movzbl	0x5c(%rsp), %eax
    000025c2: 	addl	%ecx, %edx
    000025c4: 	imull	%eax, %eax
    000025c7: 	addl	%eax, %edx
    000025c9: 	movzbl	0x60(%rsp), %eax
    000025ce: 	imull	%eax, %eax
    000025d1: 	addl	%eax, %edx
    000025d3: 	movl	%r14d, %eax
    000025d6: 	imull	%r14d, %eax
    000025da: 	movl	%eax, %r14d
    000025dd: 	movl	%r13d, %eax
    000025e0: 	imull	%r13d, %eax
    000025e4: 	addl	%edx, %r14d
    000025e7: 	movl	%eax, %r13d
    000025ea: 	movl	%r12d, %eax
    000025ed: 	imull	%r12d, %eax
    000025f1: 	addl	%r14d, %r13d
    000025f4: 	movl	%eax, %r12d
    000025f7: 	movl	%ebp, %eax
    000025f9: 	imull	%ebp, %eax
    000025fc: 	addl	%r13d, %r12d
    000025ff: 	movl	%eax, %ebp
    00002601: 	movl	%r11d, %eax
    00002604: 	imull	%r11d, %eax
    00002608: 	addl	%r12d, %ebp
    0000260b: 	addb	%al, %bpl
    0000260e: 	je	.Ltmp1072 # Offset: 9742
    00002610: 	movl	current_test(%rip), %edx
    00002616: 	leaq	DATAat0x381c8(%rip), %rsi
    0000261d: 	movl	$0x1, %edi
    00002622: 	xorl	%eax, %eax
    00002624: 	callq	__printf_chk@PLT # Offset: 9764
    00002629: 	movl	iterations(%rip), %eax
    0000262f: 	movl	%eax, 0x68(%rsp)
.Ltmp1072:
    00002633: 	addl	$0x1, 0x20(%rsp)
    00002638: 	movl	0x20(%rsp), %eax
    0000263c: 	cmpl	0x68(%rsp), %eax
    00002640: 	jl	.Ltmp1073 # Offset: 9792
.Ltmp1070:
    00002646: 	movq	0x10(%rsp), %rsi
    0000264b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002652: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9810
    00002657: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000265e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002665: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000266c: 	je	.Ltmp1074 # Offset: 9836
.Ltmp1148:
    00002672: 	movq	-0x20(%rax), %rbp
    00002676: 	callq	clock@PLT # Offset: 9846
    0000267b: 	pxor	%xmm0, %xmm0
    0000267f: 	movq	%rax, end_time(%rip)
    00002686: 	movq	%rbp, %rdi
    00002689: 	subq	start_time(%rip), %rax
    00002690: 	cvtsi2sd	%rax, %xmm0
    00002695: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000269d: 	callq	_Z13record_resultdPKc # Offset: 9885
    000026a2: 	movq	0x140(%rsp), %rdi
    000026aa: 	cmpq	0x18(%rsp), %rdi
    000026af: 	je	.Ltmp1075 # Offset: 9903
    000026b1: 	movq	0x150(%rsp), %rax
    000026b9: 	leaq	0x1(%rax), %rsi
    000026bd: 	callq	_ZdlPvm@PLT # Offset: 9917
.Ltmp1075:
    000026c2: 	movq	0x10(%rsp), %rbx
    000026c7: 	movq	0x50(%rsp), %rsi
    000026cc: 	leaq	DATAat0x38409(%rip), %rdx
    000026d3: 	movq	%rbx, %rdi
    000026d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9942
    000026db: 	movq	%rbx, %rsi
    000026de: 	movq	%r15, %rdi
    000026e1: 	callq	"_Z10test_2termIa16custom_2term_addIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9953
    000026e6: 	movq	0x140(%rsp), %rdi
    000026ee: 	cmpq	0x18(%rsp), %rdi
    000026f3: 	je	.Ltmp1076 # Offset: 9971
    000026f5: 	movq	0x150(%rsp), %rax
    000026fd: 	leaq	0x1(%rax), %rsi
    00002701: 	callq	_ZdlPvm@PLT # Offset: 9985
.Ltmp1076:
    00002706: 	movq	0x50(%rsp), %rsi
    0000270b: 	movq	0x10(%rsp), %rdi
    00002710: 	leaq	DATAat0x38414(%rip), %rdx
    00002717: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10007
    0000271c: 	callq	clock@PLT # Offset: 10012
    00002721: 	movq	%rax, start_time(%rip)
    00002728: 	movl	iterations(%rip), %eax
    0000272e: 	movl	%eax, 0x68(%rsp)
    00002732: 	testl	%eax, %eax
    00002734: 	jle	.Ltmp1077 # Offset: 10036
    0000273a: 	movdqa	DATAat0x38620(%rip), %xmm6
    00002742: 	xorl	%ebp, %ebp
    00002744: 	leaq	0x2090(%rsp), %rbx
    0000274c: 	movaps	%xmm6, (%rsp)
.Ltmp1080:
    00002750: 	movzbl	0x160(%rsp), %edx
    00002758: 	subb	0x161(%rsp), %dl
    0000275f: 	pxor	%xmm2, %xmm2
    00002763: 	movl	%edx, %eax
    00002765: 	imull	%edx, %eax
    00002768: 	movl	%eax, %edx
    0000276a: 	movq	%r15, %rax
    0000276d: 	nopl	(%rax) # Size: 3
.Ltmp1078:
    00002770: 	movdqa	(%rax), %xmm0
    00002774: 	movdqu	0x1(%rax), %xmm3
    00002779: 	addq	$0x10, %rax
    0000277d: 	movdqa	(%rsp), %xmm4
    00002782: 	psubb	%xmm3, %xmm0
    00002786: 	movdqa	%xmm0, %xmm1
    0000278a: 	punpcklbw	%xmm0, %xmm1
    0000278e: 	punpckhbw	%xmm0, %xmm0
    00002792: 	pmullw	%xmm1, %xmm1
    00002796: 	pmullw	%xmm0, %xmm0
    0000279a: 	pand	%xmm4, %xmm1
    0000279e: 	pand	%xmm4, %xmm0
    000027a2: 	packuswb	%xmm0, %xmm1
    000027a6: 	paddb	%xmm1, %xmm2
    000027aa: 	cmpq	%rbx, %rax
    000027ad: 	jne	.Ltmp1078 # Offset: 10157
    000027af: 	movzbl	0x2096(%rsp), %eax
    000027b7: 	movzbl	0x2091(%rsp), %edi
    000027bf: 	movdqa	%xmm2, %xmm0
    000027c3: 	movzbl	0x2092(%rsp), %esi
    000027cb: 	psrldq	$0x8, %xmm0
    000027d0: 	movzbl	0x2093(%rsp), %ecx
    000027d8: 	movzbl	0x2094(%rsp), %r10d
    000027e1: 	movl	%eax, %r11d
    000027e4: 	paddb	%xmm0, %xmm2
    000027e8: 	pxor	%xmm0, %xmm0
    000027ec: 	movzbl	0x2095(%rsp), %r9d
    000027f5: 	psadbw	%xmm0, %xmm2
    000027f9: 	movzbl	0x2090(%rsp), %r8d
    00002802: 	movzbl	0x2099(%rsp), %r14d
    0000280b: 	movd	%xmm2, 0x64(%rsp)
    00002811: 	addb	0x64(%rsp), %dl
    00002815: 	movzbl	0x209b(%rsp), %r12d
    0000281e: 	subl	%edi, %r8d
    00002821: 	subl	%esi, %edi
    00002823: 	subl	%ecx, %esi
    00002825: 	subl	%r10d, %ecx
    00002828: 	subl	%r9d, %r10d
    0000282b: 	subl	%eax, %r9d
    0000282e: 	movzbl	0x2098(%rsp), %eax
    00002836: 	movb	%r9b, 0x30(%rsp)
    0000283b: 	movzbl	0x2097(%rsp), %r9d
    00002844: 	movl	%eax, %r13d
    00002847: 	movb	%r10b, 0x20(%rsp)
    0000284c: 	movzbl	0x209d(%rsp), %r10d
    00002855: 	subl	%r9d, %r11d
    00002858: 	subl	%eax, %r9d
    0000285b: 	movl	%r8d, %eax
    0000285e: 	subl	%r14d, %r13d
    00002861: 	imull	%r8d, %eax
    00002865: 	movb	%r11b, 0x40(%rsp)
    0000286a: 	movzbl	0x209c(%rsp), %r11d
    00002873: 	movb	%r9b, 0x5c(%rsp)
    00002878: 	movzbl	0x209e(%rsp), %r9d
    00002881: 	movb	%r13b, 0x60(%rsp)
    00002886: 	movzbl	0x209a(%rsp), %r13d
    0000288f: 	movl	%eax, %r8d
    00002892: 	movl	%edi, %eax
    00002894: 	imull	%edi, %eax
    00002897: 	addl	%edx, %r8d
    0000289a: 	subl	%r13d, %r14d
    0000289d: 	subl	%r12d, %r13d
    000028a0: 	subl	%r11d, %r12d
    000028a3: 	subl	%r10d, %r11d
    000028a6: 	subl	%r9d, %r10d
    000028a9: 	subb	0x209f(%rsp), %r9b
    000028b1: 	movl	%eax, %edi
    000028b3: 	movl	%esi, %eax
    000028b5: 	imull	%esi, %eax
    000028b8: 	addl	%r8d, %edi
    000028bb: 	movl	%eax, %esi
    000028bd: 	movl	%ecx, %eax
    000028bf: 	imull	%ecx, %eax
    000028c2: 	addl	%edi, %esi
    000028c4: 	movl	%eax, %ecx
    000028c6: 	movzbl	0x20(%rsp), %eax
    000028cb: 	addl	%esi, %ecx
    000028cd: 	movl	%eax, %edx
    000028cf: 	imull	%edx, %eax
    000028d2: 	leal	(%rcx,%rax), %edx
    000028d5: 	movzbl	0x30(%rsp), %eax
    000028da: 	movl	%eax, %ecx
    000028dc: 	imull	%ecx, %eax
    000028df: 	addl	%eax, %edx
    000028e1: 	movzbl	0x40(%rsp), %eax
    000028e6: 	movl	%eax, %ecx
    000028e8: 	imull	%ecx, %eax
    000028eb: 	addl	%eax, %edx
    000028ed: 	movzbl	0x5c(%rsp), %eax
    000028f2: 	imull	%eax, %eax
    000028f5: 	addl	%eax, %edx
    000028f7: 	movzbl	0x60(%rsp), %eax
    000028fc: 	imull	%eax, %eax
    000028ff: 	addl	%eax, %edx
    00002901: 	movl	%r14d, %eax
    00002904: 	imull	%r14d, %eax
    00002908: 	movl	%eax, %r14d
    0000290b: 	movl	%r13d, %eax
    0000290e: 	imull	%r13d, %eax
    00002912: 	addl	%edx, %r14d
    00002915: 	movl	%eax, %r13d
    00002918: 	movl	%r12d, %eax
    0000291b: 	imull	%r12d, %eax
    0000291f: 	addl	%r14d, %r13d
    00002922: 	movl	%eax, %r12d
    00002925: 	movl	%r11d, %eax
    00002928: 	imull	%r11d, %eax
    0000292c: 	addl	%r13d, %r12d
    0000292f: 	movl	%eax, %r11d
    00002932: 	movl	%r10d, %eax
    00002935: 	imull	%r10d, %eax
    00002939: 	addl	%r12d, %r11d
    0000293c: 	movl	%eax, %r10d
    0000293f: 	movl	%r9d, %eax
    00002942: 	imull	%r9d, %eax
    00002946: 	addl	%r11d, %r10d
    00002949: 	addb	%al, %r10b
    0000294c: 	je	.Ltmp1079 # Offset: 10572
    0000294e: 	movl	current_test(%rip), %edx
    00002954: 	leaq	DATAat0x381c8(%rip), %rsi
    0000295b: 	movl	$0x1, %edi
    00002960: 	xorl	%eax, %eax
    00002962: 	callq	__printf_chk@PLT # Offset: 10594
    00002967: 	movl	iterations(%rip), %eax
    0000296d: 	movl	%eax, 0x68(%rsp)
.Ltmp1079:
    00002971: 	addl	$0x1, %ebp
    00002974: 	cmpl	0x68(%rsp), %ebp
    00002978: 	jl	.Ltmp1080 # Offset: 10616
.Ltmp1077:
    0000297e: 	movq	0x10(%rsp), %rsi
    00002983: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000298a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10634
    0000298f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002996: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000299d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029a4: 	je	.Ltmp1081 # Offset: 10660
.Ltmp1147:
    000029aa: 	movq	-0x20(%rax), %rbp
    000029ae: 	callq	clock@PLT # Offset: 10670
    000029b3: 	pxor	%xmm0, %xmm0
    000029b7: 	movq	%rax, end_time(%rip)
    000029be: 	movq	%rbp, %rdi
    000029c1: 	subq	start_time(%rip), %rax
    000029c8: 	cvtsi2sd	%rax, %xmm0
    000029cd: 	divsd	DATAat0x385e0(%rip), %xmm0
    000029d5: 	callq	_Z13record_resultdPKc # Offset: 10709
    000029da: 	movq	0x140(%rsp), %rdi
    000029e2: 	cmpq	0x18(%rsp), %rdi
    000029e7: 	je	.Ltmp1082 # Offset: 10727
    000029e9: 	movq	0x150(%rsp), %rax
    000029f1: 	leaq	0x1(%rax), %rsi
    000029f5: 	callq	_ZdlPvm@PLT # Offset: 10741
.Ltmp1082:
    000029fa: 	movq	0x10(%rsp), %rbx
    000029ff: 	movq	0x50(%rsp), %rsi
    00002a04: 	leaq	DATAat0x38423(%rip), %rdx
    00002a0b: 	movq	%rbx, %rdi
    00002a0e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10766
    00002a13: 	movq	%rbx, %rsi
    00002a16: 	movq	%r15, %rdi
    00002a19: 	callq	"_Z10test_2termIa16custom_2term_subIaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10777
    00002a1e: 	movq	0x140(%rsp), %rdi
    00002a26: 	cmpq	0x18(%rsp), %rdi
    00002a2b: 	je	.Ltmp1083 # Offset: 10795
    00002a2d: 	movq	0x150(%rsp), %rax
    00002a35: 	leaq	0x1(%rax), %rsi
    00002a39: 	callq	_ZdlPvm@PLT # Offset: 10809
.Ltmp1083:
    00002a3e: 	movq	0x50(%rsp), %rsi
    00002a43: 	movq	0x10(%rsp), %rdi
    00002a48: 	leaq	DATAat0x3842e(%rip), %rdx
    00002a4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10831
    00002a54: 	callq	clock@PLT # Offset: 10836
    00002a59: 	movq	%rax, start_time(%rip)
    00002a60: 	movl	iterations(%rip), %eax
    00002a66: 	movl	%eax, 0x40(%rsp)
    00002a6a: 	testl	%eax, %eax
    00002a6c: 	jle	.Ltmp1084 # Offset: 10860
    00002a72: 	movdqa	DATAat0x38620(%rip), %xmm5
    00002a7a: 	movl	$0x0, 0x20(%rsp)
    00002a82: 	leaq	0x2090(%rsp), %rbx
    00002a8a: 	movaps	%xmm5, (%rsp)
    00002a8e: 	nop # Size: 2
.Ltmp1087:
    00002a90: 	movzbl	0x160(%rsp), %edx
    00002a98: 	pxor	%xmm3, %xmm3
    00002a9c: 	movl	%edx, %r13d
    00002a9f: 	subb	0x161(%rsp), %r13b
    00002aa7: 	addb	0x161(%rsp), %dl
    00002aae: 	movl	%r13d, %eax
    00002ab1: 	imull	%edx, %eax
    00002ab4: 	movl	%eax, %r13d
    00002ab7: 	movq	%r15, %rax
    00002aba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1085:
    00002ac0: 	movdqa	(%rax), %xmm0
    00002ac4: 	movdqu	0x1(%rax), %xmm6
    00002ac9: 	addq	$0x10, %rax
    00002acd: 	movdqu	-0xf(%rax), %xmm2
    00002ad2: 	paddb	-0x10(%rax), %xmm2
    00002ad7: 	psubb	%xmm6, %xmm0
    00002adb: 	movdqa	(%rsp), %xmm5
    00002ae0: 	movdqa	%xmm0, %xmm1
    00002ae4: 	movdqa	%xmm2, %xmm4
    00002ae8: 	punpcklbw	%xmm0, %xmm1
    00002aec: 	punpcklbw	%xmm2, %xmm4
    00002af0: 	punpckhbw	%xmm0, %xmm0
    00002af4: 	punpckhbw	%xmm2, %xmm2
    00002af8: 	pmullw	%xmm4, %xmm1
    00002afc: 	pmullw	%xmm2, %xmm0
    00002b00: 	pand	%xmm5, %xmm1
    00002b04: 	pand	%xmm5, %xmm0
    00002b08: 	packuswb	%xmm0, %xmm1
    00002b0c: 	paddb	%xmm1, %xmm3
    00002b10: 	cmpq	%rbx, %rax
    00002b13: 	jne	.Ltmp1085 # Offset: 11027
    00002b15: 	movzbl	0x2091(%rsp), %r12d
    00002b1e: 	movzbl	0x2090(%rsp), %eax
    00002b26: 	movdqa	%xmm3, %xmm0
    00002b2a: 	psrldq	$0x8, %xmm0
    00002b2f: 	movzbl	0x2092(%rsp), %ebp
    00002b37: 	movzbl	0x2093(%rsp), %r11d
    00002b40: 	subl	%r12d, %eax
    00002b43: 	paddb	%xmm0, %xmm3
    00002b47: 	pxor	%xmm0, %xmm0
    00002b4b: 	movzbl	0x2094(%rsp), %r10d
    00002b54: 	movb	%al, 0x30(%rsp)
    00002b58: 	psadbw	%xmm0, %xmm3
    00002b5c: 	movzbl	0x2090(%rsp), %eax
    00002b64: 	movd	%xmm3, %edx
    00002b68: 	movzbl	0x2097(%rsp), %edi
    00002b70: 	movzbl	0x2095(%rsp), %r9d
    00002b79: 	addl	%r12d, %eax
    00002b7c: 	mulb	0x30(%rsp)
    00002b80: 	addl	%edx, %r13d
    00002b83: 	movzbl	0x2096(%rsp), %r8d
    00002b8c: 	movzbl	0x209c(%rsp), %esi
    00002b94: 	movzbl	0x209d(%rsp), %ecx
    00002b9c: 	movzbl	0x209e(%rsp), %r14d
    00002ba5: 	leal	(%rax,%r13), %edx
    00002ba9: 	movl	%r12d, %eax
    00002bac: 	addl	%ebp, %r12d
    00002baf: 	subl	%ebp, %eax
    00002bb1: 	imull	%r12d, %eax
    00002bb5: 	addl	%eax, %edx
    00002bb7: 	movl	%ebp, %eax
    00002bb9: 	addl	%r11d, %ebp
    00002bbc: 	subl	%r11d, %eax
    00002bbf: 	imull	%ebp, %eax
    00002bc2: 	addl	%eax, %edx
    00002bc4: 	movl	%r11d, %eax
    00002bc7: 	addl	%r10d, %r11d
    00002bca: 	subl	%r10d, %eax
    00002bcd: 	imull	%r11d, %eax
    00002bd1: 	addl	%eax, %edx
    00002bd3: 	movl	%r10d, %eax
    00002bd6: 	addl	%r9d, %r10d
    00002bd9: 	subl	%r9d, %eax
    00002bdc: 	imull	%r10d, %eax
    00002be0: 	addl	%eax, %edx
    00002be2: 	movl	%r9d, %eax
    00002be5: 	addl	%r8d, %r9d
    00002be8: 	subl	%r8d, %eax
    00002beb: 	imull	%r9d, %eax
    00002bef: 	addl	%eax, %edx
    00002bf1: 	movl	%r8d, %eax
    00002bf4: 	addl	%edi, %r8d
    00002bf7: 	subl	%edi, %eax
    00002bf9: 	imull	%r8d, %eax
    00002bfd: 	addl	%eax, %edx
    00002bff: 	movl	%edi, %eax
    00002c01: 	addb	0x2098(%rsp), %dil
    00002c09: 	subb	0x2098(%rsp), %al
    00002c10: 	imull	%edi, %eax
    00002c13: 	movzbl	0x2098(%rsp), %edi
    00002c1b: 	addl	%eax, %edx
    00002c1d: 	movzbl	0x2098(%rsp), %eax
    00002c25: 	subb	0x2099(%rsp), %al
    00002c2c: 	addb	0x2099(%rsp), %dil
    00002c34: 	imull	%edi, %eax
    00002c37: 	movzbl	0x2099(%rsp), %edi
    00002c3f: 	addb	0x209a(%rsp), %dil
    00002c47: 	addl	%eax, %edx
    00002c49: 	movzbl	0x2099(%rsp), %eax
    00002c51: 	subb	0x209a(%rsp), %al
    00002c58: 	imull	%edi, %eax
    00002c5b: 	movzbl	0x209a(%rsp), %edi
    00002c63: 	addb	0x209b(%rsp), %dil
    00002c6b: 	addl	%eax, %edx
    00002c6d: 	movzbl	0x209a(%rsp), %eax
    00002c75: 	subb	0x209b(%rsp), %al
    00002c7c: 	imull	%edi, %eax
    00002c7f: 	movzbl	0x209b(%rsp), %edi
    00002c87: 	addl	%esi, %edi
    00002c89: 	addl	%eax, %edx
    00002c8b: 	movzbl	0x209b(%rsp), %eax
    00002c93: 	subl	%esi, %eax
    00002c95: 	imull	%edi, %eax
    00002c98: 	addl	%eax, %edx
    00002c9a: 	leal	(%rcx,%rsi), %eax
    00002c9d: 	subl	%ecx, %esi
    00002c9f: 	imull	%esi, %eax
    00002ca2: 	leal	(%rdx,%rax), %esi
    00002ca5: 	movl	%ecx, %eax
    00002ca7: 	addl	%r14d, %ecx
    00002caa: 	movzbl	0x209f(%rsp), %edx
    00002cb2: 	subl	%r14d, %eax
    00002cb5: 	imull	%ecx, %eax
    00002cb8: 	addl	%r14d, %edx
    00002cbb: 	addl	%eax, %esi
    00002cbd: 	movl	%r14d, %eax
    00002cc0: 	subb	0x209f(%rsp), %al
    00002cc7: 	imull	%edx, %eax
    00002cca: 	addb	%al, %sil
    00002ccd: 	je	.Ltmp1086 # Offset: 11469
    00002ccf: 	movl	current_test(%rip), %edx
    00002cd5: 	leaq	DATAat0x381c8(%rip), %rsi
    00002cdc: 	movl	$0x1, %edi
    00002ce1: 	xorl	%eax, %eax
    00002ce3: 	callq	__printf_chk@PLT # Offset: 11491
    00002ce8: 	movl	iterations(%rip), %eax
    00002cee: 	movl	%eax, 0x40(%rsp)
.Ltmp1086:
    00002cf2: 	addl	$0x1, 0x20(%rsp)
    00002cf7: 	movl	0x20(%rsp), %eax
    00002cfb: 	cmpl	0x40(%rsp), %eax
    00002cff: 	jl	.Ltmp1087 # Offset: 11519
.Ltmp1084:
    00002d05: 	movq	0x10(%rsp), %rsi
    00002d0a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002d11: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11537
    00002d16: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d1d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d24: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d2b: 	je	.Ltmp1088 # Offset: 11563
.Ltmp1146:
    00002d31: 	movq	-0x20(%rax), %rbp
    00002d35: 	callq	clock@PLT # Offset: 11573
    00002d3a: 	pxor	%xmm0, %xmm0
    00002d3e: 	movq	%rax, end_time(%rip)
    00002d45: 	movq	%rbp, %rdi
    00002d48: 	subq	start_time(%rip), %rax
    00002d4f: 	cvtsi2sd	%rax, %xmm0
    00002d54: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d5c: 	callq	_Z13record_resultdPKc # Offset: 11612
    00002d61: 	movq	0x140(%rsp), %rdi
    00002d69: 	cmpq	0x18(%rsp), %rdi
    00002d6e: 	je	.Ltmp1089 # Offset: 11630
    00002d70: 	movq	0x150(%rsp), %rax
    00002d78: 	leaq	0x1(%rax), %rsi
    00002d7c: 	callq	_ZdlPvm@PLT # Offset: 11644
.Ltmp1089:
    00002d81: 	movq	0x50(%rsp), %rsi
    00002d86: 	movq	0x10(%rsp), %rdi
    00002d8b: 	leaq	DATAat0x38440(%rip), %rdx
    00002d92: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11666
    00002d97: 	callq	clock@PLT # Offset: 11671
    00002d9c: 	movq	%rax, start_time(%rip)
    00002da3: 	movl	iterations(%rip), %eax
    00002da9: 	movl	%eax, 0x68(%rsp)
    00002dad: 	testl	%eax, %eax
    00002daf: 	jle	.Ltmp1090 # Offset: 11695
    00002db5: 	movdqa	DATAat0x38620(%rip), %xmm4
    00002dbd: 	movl	$0x0, 0x20(%rsp)
    00002dc5: 	leaq	0x2090(%rsp), %rbx
    00002dcd: 	movaps	%xmm4, (%rsp)
    00002dd1: 	nopl	(%rax) # Size: 7
.Ltmp1093:
    00002dd8: 	movzbl	0x160(%rsp), %eax
    00002de0: 	movzbl	0x161(%rsp), %edx
    00002de8: 	pxor	%xmm1, %xmm1
    00002dec: 	imull	%eax, %eax
    00002def: 	movl	%eax, %ecx
    00002df1: 	movl	%edx, %eax
    00002df3: 	imull	%edx, %eax
    00002df6: 	movl	%eax, %edx
    00002df8: 	movq	%r15, %rax
    00002dfb: 	subl	%edx, %ecx
    00002dfd: 	movb	%cl, 0x5c(%rsp)
    00002e01: 	nopl	(%rax) # Size: 7
.Ltmp1091:
    00002e08: 	movdqa	(%rax), %xmm3
    00002e0c: 	movdqa	(%rsp), %xmm5
    00002e11: 	addq	$0x10, %rax
    00002e15: 	movdqu	-0xf(%rax), %xmm2
    00002e1a: 	movdqa	%xmm3, %xmm0
    00002e1e: 	punpcklbw	%xmm3, %xmm0
    00002e22: 	punpckhbw	%xmm3, %xmm3
    00002e26: 	pmullw	%xmm0, %xmm0
    00002e2a: 	pmullw	%xmm3, %xmm3
    00002e2e: 	pand	%xmm5, %xmm0
    00002e32: 	pand	%xmm5, %xmm3
    00002e36: 	packuswb	%xmm3, %xmm0
    00002e3a: 	paddb	%xmm0, %xmm1
    00002e3e: 	movdqa	%xmm2, %xmm0
    00002e42: 	punpcklbw	%xmm2, %xmm0
    00002e46: 	punpckhbw	%xmm2, %xmm2
    00002e4a: 	pmullw	%xmm0, %xmm0
    00002e4e: 	pmullw	%xmm2, %xmm2
    00002e52: 	pand	%xmm5, %xmm0
    00002e56: 	pand	%xmm5, %xmm2
    00002e5a: 	packuswb	%xmm2, %xmm0
    00002e5e: 	psubb	%xmm0, %xmm1
    00002e62: 	cmpq	%rax, %rbx
    00002e65: 	jne	.Ltmp1091 # Offset: 11877
    00002e67: 	movzbl	0x2091(%rsp), %r10d
    00002e70: 	movzbl	0x2094(%rsp), %edi
    00002e78: 	movdqa	%xmm1, %xmm0
    00002e7c: 	pxor	%xmm6, %xmm6
    00002e80: 	movzbl	0x2092(%rsp), %r9d
    00002e89: 	movzbl	0x2095(%rsp), %esi
    00002e91: 	psrldq	$0x8, %xmm0
    00002e96: 	movl	%r10d, %eax
    00002e99: 	movzbl	0x2096(%rsp), %ecx
    00002ea1: 	paddb	%xmm0, %xmm1
    00002ea5: 	movzbl	0x2093(%rsp), %r8d
    00002eae: 	imull	%r10d, %eax
    00002eb2: 	psadbw	%xmm6, %xmm1
    00002eb6: 	movzbl	0x2097(%rsp), %edx
    00002ebe: 	movzbl	0x209a(%rsp), %r14d
    00002ec7: 	movzbl	0x209b(%rsp), %r13d
    00002ed0: 	movd	%xmm1, 0x64(%rsp)
    00002ed6: 	movzbl	0x209c(%rsp), %r12d
    00002edf: 	movzbl	0x209d(%rsp), %ebp
    00002ee7: 	movzbl	0x209e(%rsp), %r11d
    00002ef0: 	movl	%eax, %r10d
    00002ef3: 	movl	%r9d, %eax
    00002ef6: 	imull	%r9d, %eax
    00002efa: 	movl	%eax, %r9d
    00002efd: 	movl	%r8d, %eax
    00002f00: 	imull	%r8d, %eax
    00002f04: 	movl	%eax, %r8d
    00002f07: 	movl	%edi, %eax
    00002f09: 	imull	%edi, %eax
    00002f0c: 	movl	%eax, %edi
    00002f0e: 	movl	%esi, %eax
    00002f10: 	imull	%esi, %eax
    00002f13: 	movl	%eax, %esi
    00002f15: 	movl	%ecx, %eax
    00002f17: 	imull	%ecx, %eax
    00002f1a: 	movl	%eax, %ecx
    00002f1c: 	movl	%edx, %eax
    00002f1e: 	imull	%edx, %eax
    00002f21: 	movzbl	0x5c(%rsp), %edx
    00002f26: 	addb	0x64(%rsp), %dl
    00002f2a: 	movb	%al, 0x40(%rsp)
    00002f2e: 	movzbl	0x2098(%rsp), %eax
    00002f36: 	imull	%eax, %eax
    00002f39: 	movb	%al, 0x30(%rsp)
    00002f3d: 	movzbl	0x2099(%rsp), %eax
    00002f45: 	imull	%eax, %eax
    00002f48: 	movb	%al, 0x60(%rsp)
    00002f4c: 	movl	%r14d, %eax
    00002f4f: 	imull	%r14d, %eax
    00002f53: 	movl	%eax, %r14d
    00002f56: 	movl	%r13d, %eax
    00002f59: 	imull	%r13d, %eax
    00002f5d: 	movl	%eax, %r13d
    00002f60: 	movl	%r12d, %eax
    00002f63: 	imull	%r12d, %eax
    00002f67: 	movl	%eax, %r12d
    00002f6a: 	movl	%ebp, %eax
    00002f6c: 	imull	%ebp, %eax
    00002f6f: 	movl	%eax, %ebp
    00002f71: 	movl	%r11d, %eax
    00002f74: 	imull	%r11d, %eax
    00002f78: 	movl	%eax, %r11d
    00002f7b: 	movzbl	0x2090(%rsp), %eax
    00002f83: 	imull	%eax, %eax
    00002f86: 	subl	%r10d, %eax
    00002f89: 	subl	%r9d, %r10d
    00002f8c: 	subl	%r8d, %r9d
    00002f8f: 	subl	%edi, %r8d
    00002f92: 	addl	%edx, %eax
    00002f94: 	subl	%esi, %edi
    00002f96: 	subl	%ecx, %esi
    00002f98: 	addl	%eax, %r10d
    00002f9b: 	movzbl	0x40(%rsp), %eax
    00002fa0: 	addl	%r10d, %r9d
    00002fa3: 	addl	%r9d, %r8d
    00002fa6: 	subl	%eax, %ecx
    00002fa8: 	addl	%r8d, %edi
    00002fab: 	addl	%edi, %esi
    00002fad: 	addl	%esi, %ecx
    00002faf: 	movzbl	0x30(%rsp), %esi
    00002fb4: 	subl	%esi, %eax
    00002fb6: 	movl	%eax, %edx
    00002fb8: 	addl	%ecx, %edx
    00002fba: 	movzbl	0x60(%rsp), %ecx
    00002fbf: 	subl	%ecx, %esi
    00002fc1: 	subl	%r14d, %ecx
    00002fc4: 	subl	%r13d, %r14d
    00002fc7: 	subl	%r12d, %r13d
    00002fca: 	movl	%esi, %eax
    00002fcc: 	subl	%ebp, %r12d
    00002fcf: 	subl	%r11d, %ebp
    00002fd2: 	addl	%edx, %eax
    00002fd4: 	movl	%ecx, %edx
    00002fd6: 	addl	%edx, %eax
    00002fd8: 	addl	%eax, %r14d
    00002fdb: 	movzbl	0x209f(%rsp), %eax
    00002fe3: 	addl	%r14d, %r13d
    00002fe6: 	imull	%eax, %eax
    00002fe9: 	addl	%r13d, %r12d
    00002fec: 	addl	%r12d, %ebp
    00002fef: 	subl	%eax, %r11d
    00002ff2: 	addb	%r11b, %bpl
    00002ff5: 	je	.Ltmp1092 # Offset: 12277
    00002ff7: 	movl	current_test(%rip), %edx
    00002ffd: 	leaq	DATAat0x381c8(%rip), %rsi
    00003004: 	movl	$0x1, %edi
    00003009: 	xorl	%eax, %eax
    0000300b: 	callq	__printf_chk@PLT # Offset: 12299
    00003010: 	movl	iterations(%rip), %eax
    00003016: 	movl	%eax, 0x68(%rsp)
.Ltmp1092:
    0000301a: 	addl	$0x1, 0x20(%rsp)
    0000301f: 	movl	0x20(%rsp), %eax
    00003023: 	cmpl	0x68(%rsp), %eax
    00003027: 	jl	.Ltmp1093 # Offset: 12327
.Ltmp1090:
    0000302d: 	movq	0x10(%rsp), %rsi
    00003032: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003039: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12345
    0000303e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003045: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000304c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003053: 	je	.Ltmp1094 # Offset: 12371
.Ltmp1145:
    00003059: 	movq	-0x20(%rax), %rbp
    0000305d: 	callq	clock@PLT # Offset: 12381
    00003062: 	pxor	%xmm0, %xmm0
    00003066: 	movq	%rax, end_time(%rip)
    0000306d: 	movq	%rbp, %rdi
    00003070: 	subq	start_time(%rip), %rax
    00003077: 	cvtsi2sd	%rax, %xmm0
    0000307c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003084: 	callq	_Z13record_resultdPKc # Offset: 12420
    00003089: 	movq	0x140(%rsp), %rdi
    00003091: 	cmpq	0x18(%rsp), %rdi
    00003096: 	je	.Ltmp1095 # Offset: 12438
    00003098: 	movq	0x150(%rsp), %rax
    000030a0: 	leaq	0x1(%rax), %rsi
    000030a4: 	callq	_ZdlPvm@PLT # Offset: 12452
.Ltmp1095:
    000030a9: 	movq	0x50(%rsp), %rsi
    000030ae: 	movq	0x10(%rsp), %rdi
    000030b3: 	leaq	DATAat0x3844e(%rip), %rdx
    000030ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12474
    000030bf: 	callq	clock@PLT # Offset: 12479
    000030c4: 	movl	iterations(%rip), %edx
    000030ca: 	xorl	%ebp, %ebp
    000030cc: 	leaq	0x2090(%rsp), %rbx
    000030d4: 	movq	%rax, start_time(%rip)
    000030db: 	leaq	DATAat0x381c8(%rip), %r12
    000030e2: 	testl	%edx, %edx
    000030e4: 	jle	.Ltmp1096 # Offset: 12516
    000030ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1099:
    000030f0: 	movzbl	0x161(%rsp), %edi
    000030f8: 	movq	%r15, %rax
    000030fb: 	xorb	0x160(%rsp), %dil
    00003103: 	pxor	%xmm0, %xmm0
    00003107: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1097:
    00003110: 	movdqu	0x1(%rax), %xmm1
    00003115: 	pxor	(%rax), %xmm1
    00003119: 	addq	$0x10, %rax
    0000311d: 	paddb	%xmm1, %xmm0
    00003121: 	cmpq	%rbx, %rax
    00003124: 	jne	.Ltmp1097 # Offset: 12580
    00003126: 	movdqa	%xmm0, %xmm1
    0000312a: 	movzbl	0x2099(%rsp), %esi
    00003132: 	movzbl	0x209e(%rsp), %ecx
    0000313a: 	psrldq	$0x8, %xmm1
    0000313f: 	paddb	%xmm1, %xmm0
    00003143: 	pxor	%xmm1, %xmm1
    00003147: 	psadbw	%xmm1, %xmm0
    0000314b: 	movq	0x2090(%rsp), %xmm1
    00003154: 	movd	%xmm0, %eax
    00003158: 	movq	0x2091(%rsp), %xmm0
    00003161: 	addl	%eax, %edi
    00003163: 	pxor	%xmm1, %xmm0
    00003167: 	pxor	%xmm1, %xmm1
    0000316b: 	movdqa	%xmm0, %xmm7
    0000316f: 	psadbw	%xmm1, %xmm7
    00003173: 	movq	%xmm7, 0x98(%rsp)
    0000317c: 	movq	%xmm7, %rax
    00003181: 	movl	%eax, %r8d
    00003184: 	movzbl	0x2098(%rsp), %eax
    0000318c: 	addl	%r8d, %edi
    0000318f: 	xorl	%esi, %eax
    00003191: 	xorb	0x209a(%rsp), %sil
    00003199: 	addl	%edi, %eax
    0000319b: 	addl	%esi, %eax
    0000319d: 	movzbl	0x209b(%rsp), %esi
    000031a5: 	xorb	0x209a(%rsp), %sil
    000031ad: 	addl	%esi, %eax
    000031af: 	movzbl	0x209c(%rsp), %esi
    000031b7: 	xorb	0x209b(%rsp), %sil
    000031bf: 	addl	%esi, %eax
    000031c1: 	movzbl	0x209c(%rsp), %esi
    000031c9: 	xorb	0x209d(%rsp), %sil
    000031d1: 	addl	%esi, %eax
    000031d3: 	movzbl	0x209d(%rsp), %esi
    000031db: 	xorl	%ecx, %esi
    000031dd: 	xorb	0x209f(%rsp), %cl
    000031e4: 	addl	%esi, %eax
    000031e6: 	addb	%cl, %al
    000031e8: 	je	.Ltmp1098 # Offset: 12776
    000031ea: 	movl	current_test(%rip), %edx
    000031f0: 	movq	%r12, %rsi
    000031f3: 	movl	$0x1, %edi
    000031f8: 	xorl	%eax, %eax
    000031fa: 	callq	__printf_chk@PLT # Offset: 12794
    000031ff: 	movl	iterations(%rip), %edx
.Ltmp1098:
    00003205: 	addl	$0x1, %ebp
    00003208: 	cmpl	%edx, %ebp
    0000320a: 	jl	.Ltmp1099 # Offset: 12810
.Ltmp1096:
    00003210: 	movq	0x10(%rsp), %rsi
    00003215: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000321c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12828
    00003221: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003228: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000322f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003236: 	je	.Ltmp1100 # Offset: 12854
.Ltmp1144:
    0000323c: 	movq	-0x20(%rax), %rbp
    00003240: 	callq	clock@PLT # Offset: 12864
    00003245: 	pxor	%xmm0, %xmm0
    00003249: 	movq	%rax, end_time(%rip)
    00003250: 	movq	%rbp, %rdi
    00003253: 	subq	start_time(%rip), %rax
    0000325a: 	cvtsi2sd	%rax, %xmm0
    0000325f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003267: 	callq	_Z13record_resultdPKc # Offset: 12903
    0000326c: 	movq	0x140(%rsp), %rdi
    00003274: 	cmpq	0x18(%rsp), %rdi
    00003279: 	je	.Ltmp1101 # Offset: 12921
    0000327b: 	movq	0x150(%rsp), %rax
    00003283: 	leaq	0x1(%rax), %rsi
    00003287: 	callq	_ZdlPvm@PLT # Offset: 12935
.Ltmp1101:
    0000328c: 	movq	0x50(%rsp), %rsi
    00003291: 	movq	0x10(%rsp), %rdi
    00003296: 	leaq	DATAat0x3845d(%rip), %rdx
    0000329d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12957
    000032a2: 	callq	clock@PLT # Offset: 12962
    000032a7: 	movl	iterations(%rip), %edx
    000032ad: 	xorl	%ebp, %ebp
    000032af: 	leaq	0x2090(%rsp), %rbx
    000032b7: 	movq	%rax, start_time(%rip)
    000032be: 	leaq	DATAat0x381c8(%rip), %r12
    000032c5: 	testl	%edx, %edx
    000032c7: 	jle	.Ltmp1102 # Offset: 12999
    000032cd: 	nopl	(%rax) # Size: 3
.Ltmp1105:
    000032d0: 	movzbl	0x161(%rsp), %edi
    000032d8: 	movq	%r15, %rax
    000032db: 	xorb	0x160(%rsp), %dil
    000032e3: 	pxor	%xmm0, %xmm0
    000032e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1103:
    000032f0: 	movdqu	0x1(%rax), %xmm1
    000032f5: 	pxor	(%rax), %xmm1
    000032f9: 	addq	$0x10, %rax
    000032fd: 	paddb	%xmm1, %xmm0
    00003301: 	cmpq	%rbx, %rax
    00003304: 	jne	.Ltmp1103 # Offset: 13060
    00003306: 	movdqa	%xmm0, %xmm1
    0000330a: 	movzbl	0x2099(%rsp), %esi
    00003312: 	movzbl	0x209e(%rsp), %ecx
    0000331a: 	psrldq	$0x8, %xmm1
    0000331f: 	paddb	%xmm1, %xmm0
    00003323: 	pxor	%xmm1, %xmm1
    00003327: 	psadbw	%xmm1, %xmm0
    0000332b: 	movq	0x2090(%rsp), %xmm1
    00003334: 	movd	%xmm0, %eax
    00003338: 	movq	0x2091(%rsp), %xmm0
    00003341: 	addl	%eax, %edi
    00003343: 	pxor	%xmm1, %xmm0
    00003347: 	pxor	%xmm1, %xmm1
    0000334b: 	movdqa	%xmm0, %xmm3
    0000334f: 	psadbw	%xmm1, %xmm3
    00003353: 	movq	%xmm3, 0x90(%rsp)
    0000335c: 	movq	%xmm3, %rax
    00003361: 	movl	%eax, %r8d
    00003364: 	movzbl	0x2098(%rsp), %eax
    0000336c: 	addl	%r8d, %edi
    0000336f: 	xorl	%esi, %eax
    00003371: 	xorb	0x209a(%rsp), %sil
    00003379: 	addl	%edi, %eax
    0000337b: 	addl	%esi, %eax
    0000337d: 	movzbl	0x209b(%rsp), %esi
    00003385: 	xorb	0x209a(%rsp), %sil
    0000338d: 	addl	%esi, %eax
    0000338f: 	movzbl	0x209c(%rsp), %esi
    00003397: 	xorb	0x209b(%rsp), %sil
    0000339f: 	addl	%esi, %eax
    000033a1: 	movzbl	0x209c(%rsp), %esi
    000033a9: 	xorb	0x209d(%rsp), %sil
    000033b1: 	addl	%esi, %eax
    000033b3: 	movzbl	0x209d(%rsp), %esi
    000033bb: 	xorl	%ecx, %esi
    000033bd: 	xorb	0x209f(%rsp), %cl
    000033c4: 	addl	%esi, %eax
    000033c6: 	addb	%cl, %al
    000033c8: 	je	.Ltmp1104 # Offset: 13256
    000033ca: 	movl	current_test(%rip), %edx
    000033d0: 	movq	%r12, %rsi
    000033d3: 	movl	$0x1, %edi
    000033d8: 	xorl	%eax, %eax
    000033da: 	callq	__printf_chk@PLT # Offset: 13274
    000033df: 	movl	iterations(%rip), %edx
.Ltmp1104:
    000033e5: 	addl	$0x1, %ebp
    000033e8: 	cmpl	%edx, %ebp
    000033ea: 	jl	.Ltmp1105 # Offset: 13290
.Ltmp1102:
    000033f0: 	movq	0x10(%rsp), %rsi
    000033f5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000033fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13308
    00003401: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003408: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000340f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003416: 	je	.Ltmp1106 # Offset: 13334
.Ltmp1143:
    0000341c: 	movq	-0x20(%rax), %rbp
    00003420: 	callq	clock@PLT # Offset: 13344
    00003425: 	pxor	%xmm0, %xmm0
    00003429: 	movq	%rax, end_time(%rip)
    00003430: 	movq	%rbp, %rdi
    00003433: 	subq	start_time(%rip), %rax
    0000343a: 	cvtsi2sd	%rax, %xmm0
    0000343f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003447: 	callq	_Z13record_resultdPKc # Offset: 13383
    0000344c: 	movq	0x140(%rsp), %rdi
    00003454: 	cmpq	0x18(%rsp), %rdi
    00003459: 	je	.Ltmp1107 # Offset: 13401
    0000345b: 	movq	0x150(%rsp), %rax
    00003463: 	leaq	0x1(%rax), %rsi
    00003467: 	callq	_ZdlPvm@PLT # Offset: 13415
.Ltmp1107:
    0000346c: 	movq	0x50(%rsp), %rsi
    00003471: 	movq	0x10(%rsp), %rdi
    00003476: 	leaq	DATAat0x38468(%rip), %rdx
    0000347d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13437
    00003482: 	callq	clock@PLT # Offset: 13442
    00003487: 	movl	iterations(%rip), %ecx
    0000348d: 	xorl	%ebp, %ebp
    0000348f: 	leaq	0x2090(%rsp), %rbx
    00003497: 	movq	%rax, start_time(%rip)
    0000349e: 	leaq	DATAat0x381c8(%rip), %r12
    000034a5: 	testl	%ecx, %ecx
    000034a7: 	jle	.Ltmp1108 # Offset: 13479
    000034ad: 	nopl	(%rax) # Size: 3
.Ltmp1111:
    000034b0: 	movzbl	0x161(%rsp), %r9d
    000034b9: 	movq	%r15, %rax
    000034bc: 	pxor	%xmm0, %xmm0
    000034c0: 	orb	0x160(%rsp), %r9b
    000034c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1109:
    000034d0: 	movdqu	0x1(%rax), %xmm1
    000034d5: 	por	(%rax), %xmm1
    000034d9: 	addq	$0x10, %rax
    000034dd: 	paddb	%xmm1, %xmm0
    000034e1: 	cmpq	%rax, %rbx
    000034e4: 	jne	.Ltmp1109 # Offset: 13540
    000034e6: 	movdqa	%xmm0, %xmm1
    000034ea: 	movzbl	0x2099(%rsp), %edi
    000034f2: 	movzbl	0x209e(%rsp), %esi
    000034fa: 	psrldq	$0x8, %xmm1
    000034ff: 	cvttsd2si	init_value(%rip), %edx
    00003507: 	paddb	%xmm1, %xmm0
    0000350b: 	pxor	%xmm1, %xmm1
    0000350f: 	psadbw	%xmm1, %xmm0
    00003513: 	movq	0x2090(%rsp), %xmm1
    0000351c: 	movd	%xmm0, %eax
    00003520: 	movq	0x2091(%rsp), %xmm0
    00003529: 	addl	%eax, %r9d
    0000352c: 	shll	$0x6, %edx
    0000352f: 	por	%xmm1, %xmm0
    00003533: 	pxor	%xmm1, %xmm1
    00003537: 	movdqa	%xmm0, %xmm7
    0000353b: 	psadbw	%xmm1, %xmm7
    0000353f: 	movq	%xmm7, 0x88(%rsp)
    00003548: 	movq	%xmm7, %rax
    0000354d: 	movl	%eax, %r8d
    00003550: 	movzbl	0x2098(%rsp), %eax
    00003558: 	addl	%r9d, %r8d
    0000355b: 	orl	%edi, %eax
    0000355d: 	orb	0x209a(%rsp), %dil
    00003565: 	addl	%r8d, %eax
    00003568: 	addl	%edi, %eax
    0000356a: 	movzbl	0x209b(%rsp), %edi
    00003572: 	orb	0x209a(%rsp), %dil
    0000357a: 	addl	%edi, %eax
    0000357c: 	movzbl	0x209c(%rsp), %edi
    00003584: 	orb	0x209b(%rsp), %dil
    0000358c: 	addl	%edi, %eax
    0000358e: 	movzbl	0x209c(%rsp), %edi
    00003596: 	orb	0x209d(%rsp), %dil
    0000359e: 	addl	%edi, %eax
    000035a0: 	movzbl	0x209d(%rsp), %edi
    000035a8: 	orl	%esi, %edi
    000035aa: 	orb	0x209f(%rsp), %sil
    000035b2: 	addl	%edi, %eax
    000035b4: 	addl	%esi, %eax
    000035b6: 	cmpb	%al, %dl
    000035b8: 	je	.Ltmp1110 # Offset: 13752
    000035ba: 	movl	current_test(%rip), %edx
    000035c0: 	movq	%r12, %rsi
    000035c3: 	movl	$0x1, %edi
    000035c8: 	xorl	%eax, %eax
    000035ca: 	callq	__printf_chk@PLT # Offset: 13770
    000035cf: 	movl	iterations(%rip), %ecx
.Ltmp1110:
    000035d5: 	addl	$0x1, %ebp
    000035d8: 	cmpl	%ecx, %ebp
    000035da: 	jl	.Ltmp1111 # Offset: 13786
.Ltmp1108:
    000035e0: 	movq	0x10(%rsp), %rsi
    000035e5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000035ec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13804
    000035f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000035f8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000035ff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003606: 	je	.Ltmp1112 # Offset: 13830
.Ltmp1142:
    0000360c: 	movq	-0x20(%rax), %rbp
    00003610: 	callq	clock@PLT # Offset: 13840
    00003615: 	pxor	%xmm0, %xmm0
    00003619: 	movq	%rax, end_time(%rip)
    00003620: 	movq	%rbp, %rdi
    00003623: 	subq	start_time(%rip), %rax
    0000362a: 	cvtsi2sd	%rax, %xmm0
    0000362f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003637: 	callq	_Z13record_resultdPKc # Offset: 13879
    0000363c: 	movq	0x140(%rsp), %rdi
    00003644: 	cmpq	0x18(%rsp), %rdi
    00003649: 	je	.Ltmp1113 # Offset: 13897
    0000364b: 	movq	0x150(%rsp), %rax
    00003653: 	leaq	0x1(%rax), %rsi
    00003657: 	callq	_ZdlPvm@PLT # Offset: 13911
.Ltmp1113:
    0000365c: 	movq	0x50(%rsp), %rsi
    00003661: 	movq	0x10(%rsp), %rdi
    00003666: 	leaq	DATAat0x38476(%rip), %rdx
    0000366d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13933
    00003672: 	callq	clock@PLT # Offset: 13938
    00003677: 	movl	iterations(%rip), %ecx
    0000367d: 	xorl	%ebp, %ebp
    0000367f: 	leaq	0x2090(%rsp), %rbx
    00003687: 	movq	%rax, start_time(%rip)
    0000368e: 	leaq	DATAat0x381c8(%rip), %r12
    00003695: 	testl	%ecx, %ecx
    00003697: 	jle	.Ltmp1114 # Offset: 13975
    0000369d: 	nopl	(%rax) # Size: 3
.Ltmp1117:
    000036a0: 	movzbl	0x161(%rsp), %r9d
    000036a9: 	movq	%r15, %rax
    000036ac: 	pxor	%xmm0, %xmm0
    000036b0: 	orb	0x160(%rsp), %r9b
    000036b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1115:
    000036c0: 	movdqu	0x1(%rax), %xmm1
    000036c5: 	por	(%rax), %xmm1
    000036c9: 	addq	$0x10, %rax
    000036cd: 	paddb	%xmm1, %xmm0
    000036d1: 	cmpq	%rbx, %rax
    000036d4: 	jne	.Ltmp1115 # Offset: 14036
    000036d6: 	movdqa	%xmm0, %xmm1
    000036da: 	movzbl	0x2099(%rsp), %edi
    000036e2: 	movzbl	0x209e(%rsp), %esi
    000036ea: 	psrldq	$0x8, %xmm1
    000036ef: 	cvttsd2si	init_value(%rip), %edx
    000036f7: 	paddb	%xmm1, %xmm0
    000036fb: 	pxor	%xmm1, %xmm1
    000036ff: 	psadbw	%xmm1, %xmm0
    00003703: 	movq	0x2090(%rsp), %xmm1
    0000370c: 	movd	%xmm0, %eax
    00003710: 	movq	0x2091(%rsp), %xmm0
    00003719: 	addl	%eax, %r9d
    0000371c: 	shll	$0x6, %edx
    0000371f: 	por	%xmm1, %xmm0
    00003723: 	pxor	%xmm1, %xmm1
    00003727: 	movdqa	%xmm0, %xmm6
    0000372b: 	psadbw	%xmm1, %xmm6
    0000372f: 	movq	%xmm6, 0x80(%rsp)
    00003738: 	movq	%xmm6, %rax
    0000373d: 	movl	%eax, %r8d
    00003740: 	movzbl	0x2098(%rsp), %eax
    00003748: 	addl	%r9d, %r8d
    0000374b: 	orl	%edi, %eax
    0000374d: 	orb	0x209a(%rsp), %dil
    00003755: 	addl	%r8d, %eax
    00003758: 	addl	%edi, %eax
    0000375a: 	movzbl	0x209b(%rsp), %edi
    00003762: 	orb	0x209a(%rsp), %dil
    0000376a: 	addl	%edi, %eax
    0000376c: 	movzbl	0x209c(%rsp), %edi
    00003774: 	orb	0x209b(%rsp), %dil
    0000377c: 	addl	%edi, %eax
    0000377e: 	movzbl	0x209c(%rsp), %edi
    00003786: 	orb	0x209d(%rsp), %dil
    0000378e: 	addl	%edi, %eax
    00003790: 	movzbl	0x209d(%rsp), %edi
    00003798: 	orl	%esi, %edi
    0000379a: 	orb	0x209f(%rsp), %sil
    000037a2: 	addl	%edi, %eax
    000037a4: 	addl	%esi, %eax
    000037a6: 	cmpb	%al, %dl
    000037a8: 	je	.Ltmp1116 # Offset: 14248
    000037aa: 	movl	current_test(%rip), %edx
    000037b0: 	movq	%r12, %rsi
    000037b3: 	movl	$0x1, %edi
    000037b8: 	xorl	%eax, %eax
    000037ba: 	callq	__printf_chk@PLT # Offset: 14266
    000037bf: 	movl	iterations(%rip), %ecx
.Ltmp1116:
    000037c5: 	addl	$0x1, %ebp
    000037c8: 	cmpl	%ecx, %ebp
    000037ca: 	jl	.Ltmp1117 # Offset: 14282
.Ltmp1114:
    000037d0: 	movq	0x10(%rsp), %rsi
    000037d5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000037dc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14300
    000037e1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000037e8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000037ef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000037f6: 	je	.Ltmp1118 # Offset: 14326
.Ltmp1141:
    000037fc: 	movq	-0x20(%rax), %rbp
    00003800: 	callq	clock@PLT # Offset: 14336
    00003805: 	pxor	%xmm0, %xmm0
    00003809: 	movq	%rax, end_time(%rip)
    00003810: 	movq	%rbp, %rdi
    00003813: 	subq	start_time(%rip), %rax
    0000381a: 	cvtsi2sd	%rax, %xmm0
    0000381f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003827: 	callq	_Z13record_resultdPKc # Offset: 14375
    0000382c: 	movq	0x140(%rsp), %rdi
    00003834: 	cmpq	0x18(%rsp), %rdi
    00003839: 	je	.Ltmp1119 # Offset: 14393
    0000383b: 	movq	0x150(%rsp), %rax
    00003843: 	leaq	0x1(%rax), %rsi
    00003847: 	callq	_ZdlPvm@PLT # Offset: 14407
.Ltmp1119:
    0000384c: 	movq	0x50(%rsp), %rsi
    00003851: 	movq	0x10(%rsp), %rdi
    00003856: 	leaq	DATAat0x38480(%rip), %rdx
    0000385d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14429
    00003862: 	callq	clock@PLT # Offset: 14434
    00003867: 	movl	iterations(%rip), %ecx
    0000386d: 	xorl	%ebp, %ebp
    0000386f: 	leaq	0x2090(%rsp), %rbx
    00003877: 	movq	%rax, start_time(%rip)
    0000387e: 	leaq	DATAat0x381c8(%rip), %r12
    00003885: 	testl	%ecx, %ecx
    00003887: 	jle	.Ltmp1120 # Offset: 14471
    0000388d: 	nopl	(%rax) # Size: 3
.Ltmp1123:
    00003890: 	movzbl	0x161(%rsp), %r9d
    00003899: 	movq	%r15, %rax
    0000389c: 	pxor	%xmm0, %xmm0
    000038a0: 	andb	0x160(%rsp), %r9b
    000038a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1121:
    000038b0: 	movdqu	0x1(%rax), %xmm1
    000038b5: 	pand	(%rax), %xmm1
    000038b9: 	addq	$0x10, %rax
    000038bd: 	paddb	%xmm1, %xmm0
    000038c1: 	cmpq	%rbx, %rax
    000038c4: 	jne	.Ltmp1121 # Offset: 14532
    000038c6: 	movdqa	%xmm0, %xmm1
    000038ca: 	movzbl	0x2099(%rsp), %edi
    000038d2: 	movzbl	0x209e(%rsp), %esi
    000038da: 	psrldq	$0x8, %xmm1
    000038df: 	cvttsd2si	init_value(%rip), %edx
    000038e7: 	paddb	%xmm1, %xmm0
    000038eb: 	pxor	%xmm1, %xmm1
    000038ef: 	psadbw	%xmm1, %xmm0
    000038f3: 	movq	0x2090(%rsp), %xmm1
    000038fc: 	movd	%xmm0, %eax
    00003900: 	movq	0x2091(%rsp), %xmm0
    00003909: 	addl	%eax, %r9d
    0000390c: 	shll	$0x6, %edx
    0000390f: 	pand	%xmm1, %xmm0
    00003913: 	pxor	%xmm1, %xmm1
    00003917: 	movdqa	%xmm0, %xmm3
    0000391b: 	psadbw	%xmm1, %xmm3
    0000391f: 	movq	%xmm3, %rax
    00003924: 	movq	%xmm3, 0x78(%rsp)
    0000392a: 	movl	%eax, %r8d
    0000392d: 	movzbl	0x2098(%rsp), %eax
    00003935: 	addl	%r9d, %r8d
    00003938: 	andl	%edi, %eax
    0000393a: 	andb	0x209a(%rsp), %dil
    00003942: 	addl	%r8d, %eax
    00003945: 	addl	%edi, %eax
    00003947: 	movzbl	0x209b(%rsp), %edi
    0000394f: 	andb	0x209a(%rsp), %dil
    00003957: 	addl	%edi, %eax
    00003959: 	movzbl	0x209c(%rsp), %edi
    00003961: 	andb	0x209b(%rsp), %dil
    00003969: 	addl	%edi, %eax
    0000396b: 	movzbl	0x209c(%rsp), %edi
    00003973: 	andb	0x209d(%rsp), %dil
    0000397b: 	addl	%edi, %eax
    0000397d: 	movzbl	0x209d(%rsp), %edi
    00003985: 	andl	%esi, %edi
    00003987: 	andb	0x209f(%rsp), %sil
    0000398f: 	addl	%edi, %eax
    00003991: 	addl	%esi, %eax
    00003993: 	cmpb	%al, %dl
    00003995: 	je	.Ltmp1122 # Offset: 14741
    00003997: 	movl	current_test(%rip), %edx
    0000399d: 	movq	%r12, %rsi
    000039a0: 	movl	$0x1, %edi
    000039a5: 	xorl	%eax, %eax
    000039a7: 	callq	__printf_chk@PLT # Offset: 14759
    000039ac: 	movl	iterations(%rip), %ecx
.Ltmp1122:
    000039b2: 	addl	$0x1, %ebp
    000039b5: 	cmpl	%ecx, %ebp
    000039b7: 	jl	.Ltmp1123 # Offset: 14775
.Ltmp1120:
    000039bd: 	movq	0x10(%rsp), %rsi
    000039c2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000039c9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14793
    000039ce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000039d5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000039dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000039e3: 	je	.Ltmp1124 # Offset: 14819
.Ltmp1140:
    000039e9: 	movq	-0x20(%rax), %rbp
    000039ed: 	callq	clock@PLT # Offset: 14829
    000039f2: 	pxor	%xmm0, %xmm0
    000039f6: 	movq	%rax, end_time(%rip)
    000039fd: 	movq	%rbp, %rdi
    00003a00: 	subq	start_time(%rip), %rax
    00003a07: 	cvtsi2sd	%rax, %xmm0
    00003a0c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003a14: 	callq	_Z13record_resultdPKc # Offset: 14868
    00003a19: 	movq	0x140(%rsp), %rdi
    00003a21: 	cmpq	0x18(%rsp), %rdi
    00003a26: 	je	.Ltmp1125 # Offset: 14886
    00003a28: 	movq	0x150(%rsp), %rax
    00003a30: 	leaq	0x1(%rax), %rsi
    00003a34: 	callq	_ZdlPvm@PLT # Offset: 14900
.Ltmp1125:
    00003a39: 	movq	0x50(%rsp), %rsi
    00003a3e: 	movq	0x10(%rsp), %rdi
    00003a43: 	leaq	DATAat0x3848f(%rip), %rdx
    00003a4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14922
    00003a4f: 	callq	clock@PLT # Offset: 14927
    00003a54: 	movl	iterations(%rip), %edx
    00003a5a: 	xorl	%ebp, %ebp
    00003a5c: 	leaq	0x2090(%rsp), %rbx
    00003a64: 	movq	%rax, start_time(%rip)
    00003a6b: 	leaq	DATAat0x381c8(%rip), %r12
    00003a72: 	testl	%edx, %edx
    00003a74: 	jle	.Ltmp1126 # Offset: 14964
    00003a7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1129:
    00003a80: 	movzbl	0x161(%rsp), %edi
    00003a88: 	movq	%r15, %rax
    00003a8b: 	andb	0x160(%rsp), %dil
    00003a93: 	pxor	%xmm0, %xmm0
    00003a97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1127:
    00003aa0: 	movdqu	0x1(%rax), %xmm1
    00003aa5: 	pand	(%rax), %xmm1
    00003aa9: 	addq	$0x10, %rax
    00003aad: 	paddb	%xmm1, %xmm0
    00003ab1: 	cmpq	%rbx, %rax
    00003ab4: 	jne	.Ltmp1127 # Offset: 15028
    00003ab6: 	movdqa	%xmm0, %xmm1
    00003aba: 	movzbl	0x2099(%rsp), %esi
    00003ac2: 	movzbl	0x209e(%rsp), %ecx
    00003aca: 	psrldq	$0x8, %xmm1
    00003acf: 	paddb	%xmm1, %xmm0
    00003ad3: 	pxor	%xmm1, %xmm1
    00003ad7: 	psadbw	%xmm1, %xmm0
    00003adb: 	movq	0x2090(%rsp), %xmm1
    00003ae4: 	movd	%xmm0, %eax
    00003ae8: 	movq	0x2091(%rsp), %xmm0
    00003af1: 	addl	%eax, %edi
    00003af3: 	pand	%xmm1, %xmm0
    00003af7: 	pxor	%xmm1, %xmm1
    00003afb: 	movdqa	%xmm0, %xmm5
    00003aff: 	psadbw	%xmm1, %xmm5
    00003b03: 	movq	%xmm5, %rax
    00003b08: 	movq	%xmm5, 0x70(%rsp)
    00003b0e: 	movl	%eax, %r8d
    00003b11: 	movzbl	0x2098(%rsp), %eax
    00003b19: 	addl	%r8d, %edi
    00003b1c: 	andl	%esi, %eax
    00003b1e: 	andb	0x209a(%rsp), %sil
    00003b26: 	addl	%edi, %eax
    00003b28: 	addl	%esi, %eax
    00003b2a: 	movzbl	0x209b(%rsp), %esi
    00003b32: 	andb	0x209a(%rsp), %sil
    00003b3a: 	addl	%esi, %eax
    00003b3c: 	movzbl	0x209c(%rsp), %esi
    00003b44: 	andb	0x209b(%rsp), %sil
    00003b4c: 	addl	%esi, %eax
    00003b4e: 	movzbl	0x209c(%rsp), %esi
    00003b56: 	andb	0x209d(%rsp), %sil
    00003b5e: 	addl	%esi, %eax
    00003b60: 	movzbl	0x209d(%rsp), %esi
    00003b68: 	andl	%ecx, %esi
    00003b6a: 	andb	0x209f(%rsp), %cl
    00003b71: 	addl	%esi, %eax
    00003b73: 	addl	%ecx, %eax
    00003b75: 	cvttsd2si	init_value(%rip), %ecx
    00003b7d: 	shll	$0x6, %ecx
    00003b80: 	cmpb	%cl, %al
    00003b82: 	je	.Ltmp1128 # Offset: 15234
    00003b84: 	movl	current_test(%rip), %edx
    00003b8a: 	movq	%r12, %rsi
    00003b8d: 	movl	$0x1, %edi
    00003b92: 	xorl	%eax, %eax
    00003b94: 	callq	__printf_chk@PLT # Offset: 15252
    00003b99: 	movl	iterations(%rip), %edx
.Ltmp1128:
    00003b9f: 	addl	$0x1, %ebp
    00003ba2: 	cmpl	%edx, %ebp
    00003ba4: 	jl	.Ltmp1129 # Offset: 15268
.Ltmp1126:
    00003baa: 	movq	0x10(%rsp), %rsi
    00003baf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003bb6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15286
    00003bbb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003bc2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003bc9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003bd0: 	je	.Ltmp1130 # Offset: 15312
.Ltmp1139:
    00003bd6: 	movq	-0x20(%rax), %rbp
    00003bda: 	callq	clock@PLT # Offset: 15322
    00003bdf: 	pxor	%xmm0, %xmm0
    00003be3: 	movq	%rax, end_time(%rip)
    00003bea: 	movq	%rbp, %rdi
    00003bed: 	subq	start_time(%rip), %rax
    00003bf4: 	cvtsi2sd	%rax, %xmm0
    00003bf9: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003c01: 	callq	_Z13record_resultdPKc # Offset: 15361
    00003c06: 	movq	0x140(%rsp), %rdi
    00003c0e: 	cmpq	0x18(%rsp), %rdi
    00003c13: 	je	.Ltmp1131 # Offset: 15379
    00003c15: 	movq	0x150(%rsp), %rax
    00003c1d: 	leaq	0x1(%rax), %rsi
    00003c21: 	callq	_ZdlPvm@PLT # Offset: 15393
.Ltmp1131:
    00003c26: 	movq	0x50(%rsp), %rsi
    00003c2b: 	movq	0x10(%rsp), %rdi
    00003c30: 	leaq	DATAat0x38550(%rip), %rdx
    00003c37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15415
    00003c3c: 	movl	iterations(%rip), %esi
    00003c42: 	movq	0x140(%rsp), %rdi
    00003c4a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 15434
    00003c4f: 	movq	0x140(%rsp), %rdi
    00003c57: 	cmpq	0x18(%rsp), %rdi
    00003c5c: 	je	.Ltmp1132 # Offset: 15452
    00003c5e: 	movq	0x150(%rsp), %rax
    00003c66: 	leaq	0x1(%rax), %rsi
    00003c6a: 	callq	_ZdlPvm@PLT # Offset: 15466
.Ltmp1132:
    00003c6f: 	movq	0x120(%rsp), %rdi
    00003c77: 	leaq	0x130(%rsp), %rax
    00003c7f: 	cmpq	%rax, %rdi
    00003c82: 	je	.Ltmp1133 # Offset: 15490
    00003c84: 	movq	0x130(%rsp), %rax
    00003c8c: 	leaq	0x1(%rax), %rsi
    00003c90: 	callq	_ZdlPvm@PLT # Offset: 15504
.Ltmp1133:
    00003c95: 	movq	0x100(%rsp), %rdi
    00003c9d: 	leaq	0x110(%rsp), %rax
    00003ca5: 	cmpq	%rax, %rdi
    00003ca8: 	je	.Ltmp1134 # Offset: 15528
    00003caa: 	movq	0x110(%rsp), %rax
    00003cb2: 	leaq	0x1(%rax), %rsi
    00003cb6: 	callq	_ZdlPvm@PLT # Offset: 15542
.Ltmp1134:
    00003cbb: 	movq	0xe0(%rsp), %rdi
    00003cc3: 	leaq	0xf0(%rsp), %rax
    00003ccb: 	cmpq	%rax, %rdi
    00003cce: 	je	.Ltmp1135 # Offset: 15566
    00003cd0: 	movq	0xf0(%rsp), %rax
    00003cd8: 	leaq	0x1(%rax), %rsi
    00003cdc: 	callq	_ZdlPvm@PLT # Offset: 15580
.Ltmp1135:
    00003ce1: 	movq	0xc0(%rsp), %rdi
    00003ce9: 	leaq	0xd0(%rsp), %rax
    00003cf1: 	cmpq	%rax, %rdi
    00003cf4: 	je	.Ltmp1136 # Offset: 15604
    00003cf6: 	movq	0xd0(%rsp), %rax
    00003cfe: 	leaq	0x1(%rax), %rsi
    00003d02: 	callq	_ZdlPvm@PLT # Offset: 15618
.Ltmp1136:
    00003d07: 	movq	0x20a8(%rsp), %rax
    00003d0f: 	subq	%fs:0x28, %rax
    00003d18: 	jne	.Ltmp1137 # Offset: 15640
    00003d1e: 	addq	$0x20b8, %rsp
    00003d25: 	popq	%rbx
    00003d26: 	popq	%rbp
    00003d27: 	popq	%r12
    00003d29: 	popq	%r13
    00003d2b: 	popq	%r14
    00003d2d: 	popq	%r15
    00003d2f: 	retq # Offset: 15663
.Ltmp938:
    00003d30: 	movq	-0x8(%rdx), %rax
    00003d34: 	addq	$0x200, %rax
    00003d3a: 	jmp	.Ltmp1138 # Offset: 15674
.Ltmp1130:
    00003d3f: 	movq	-0x8(%rdx), %rax
    00003d43: 	addq	$0x200, %rax
    00003d49: 	jmp	.Ltmp1139 # Offset: 15689
.Ltmp1124:
    00003d4e: 	movq	-0x8(%rdx), %rax
    00003d52: 	addq	$0x200, %rax
    00003d58: 	jmp	.Ltmp1140 # Offset: 15704
.Ltmp1118:
    00003d5d: 	movq	-0x8(%rdx), %rax
    00003d61: 	addq	$0x200, %rax
    00003d67: 	jmp	.Ltmp1141 # Offset: 15719
.Ltmp1112:
    00003d6c: 	movq	-0x8(%rdx), %rax
    00003d70: 	addq	$0x200, %rax
    00003d76: 	jmp	.Ltmp1142 # Offset: 15734
.Ltmp1106:
    00003d7b: 	movq	-0x8(%rdx), %rax
    00003d7f: 	addq	$0x200, %rax
    00003d85: 	jmp	.Ltmp1143 # Offset: 15749
.Ltmp1100:
    00003d8a: 	movq	-0x8(%rdx), %rax
    00003d8e: 	addq	$0x200, %rax
    00003d94: 	jmp	.Ltmp1144 # Offset: 15764
.Ltmp1094:
    00003d99: 	movq	-0x8(%rdx), %rax
    00003d9d: 	addq	$0x200, %rax
    00003da3: 	jmp	.Ltmp1145 # Offset: 15779
.Ltmp1088:
    00003da8: 	movq	-0x8(%rdx), %rax
    00003dac: 	addq	$0x200, %rax
    00003db2: 	jmp	.Ltmp1146 # Offset: 15794
.Ltmp1081:
    00003db7: 	movq	-0x8(%rdx), %rax
    00003dbb: 	addq	$0x200, %rax
    00003dc1: 	jmp	.Ltmp1147 # Offset: 15809
.Ltmp1074:
    00003dc6: 	movq	-0x8(%rdx), %rax
    00003dca: 	addq	$0x200, %rax
    00003dd0: 	jmp	.Ltmp1148 # Offset: 15824
.Ltmp1067:
    00003dd5: 	movq	-0x8(%rdx), %rax
    00003dd9: 	addq	$0x200, %rax
    00003ddf: 	jmp	.Ltmp1149 # Offset: 15839
.Ltmp1061:
    00003de4: 	movq	-0x8(%rdx), %rax
    00003de8: 	addq	$0x200, %rax
    00003dee: 	jmp	.Ltmp1150 # Offset: 15854
.Ltmp1055:
    00003df3: 	movq	-0x8(%rdx), %rax
    00003df7: 	addq	$0x200, %rax
    00003dfd: 	jmp	.Ltmp1151 # Offset: 15869
.Ltmp1049:
    00003e02: 	movq	-0x8(%rdx), %rax
    00003e06: 	addq	$0x200, %rax
    00003e0c: 	jmp	.Ltmp1152 # Offset: 15884
.Ltmp1043:
    00003e11: 	movq	-0x8(%rdx), %rax
    00003e15: 	addq	$0x200, %rax
    00003e1b: 	jmp	.Ltmp1153 # Offset: 15899
.Ltmp1037:
    00003e20: 	movq	-0x8(%rdx), %rax
    00003e24: 	addq	$0x200, %rax
    00003e2a: 	jmp	.Ltmp1154 # Offset: 15914
.Ltmp1031:
    00003e2f: 	movq	-0x8(%rdx), %rax
    00003e33: 	addq	$0x200, %rax
    00003e39: 	jmp	.Ltmp1155 # Offset: 15929
.Ltmp1025:
    00003e3e: 	movq	-0x8(%rdx), %rax
    00003e42: 	addq	$0x200, %rax
    00003e48: 	jmp	.Ltmp1156 # Offset: 15944
.Ltmp1023:
    00003e4d: 	movq	-0x8(%rdx), %rax
    00003e51: 	addq	$0x200, %rax
    00003e57: 	jmp	.Ltmp1157 # Offset: 15959
.Ltmp1021:
    00003e5c: 	movq	-0x8(%rdx), %rax
    00003e60: 	addq	$0x200, %rax
    00003e66: 	jmp	.Ltmp1158 # Offset: 15974
.Ltmp1019:
    00003e6b: 	movq	-0x8(%rdx), %rax
    00003e6f: 	addq	$0x200, %rax
    00003e75: 	jmp	.Ltmp1159 # Offset: 15989
.Ltmp1017:
    00003e7a: 	movq	-0x8(%rdx), %rax
    00003e7e: 	addq	$0x200, %rax
    00003e84: 	jmp	.Ltmp1160 # Offset: 16004
.Ltmp1015:
    00003e89: 	movq	-0x8(%rdx), %rax
    00003e8d: 	addq	$0x200, %rax
    00003e93: 	jmp	.Ltmp1161 # Offset: 16019
.Ltmp1013:
    00003e98: 	movq	-0x8(%rdx), %rax
    00003e9c: 	addq	$0x200, %rax
    00003ea2: 	jmp	.Ltmp1162 # Offset: 16034
.Ltmp1011:
    00003ea7: 	movq	-0x8(%rdx), %rax
    00003eab: 	addq	$0x200, %rax
    00003eb1: 	jmp	.Ltmp1163 # Offset: 16049
.Ltmp1009:
    00003eb6: 	movq	-0x8(%rdx), %rax
    00003eba: 	addq	$0x200, %rax
    00003ec0: 	jmp	.Ltmp1164 # Offset: 16064
.Ltmp1007:
    00003ec5: 	movq	-0x8(%rdx), %rax
    00003ec9: 	addq	$0x200, %rax
    00003ecf: 	jmp	.Ltmp1165 # Offset: 16079
.Ltmp1005:
    00003ed4: 	movq	-0x8(%rdx), %rax
    00003ed8: 	addq	$0x200, %rax
    00003ede: 	jmp	.Ltmp1166 # Offset: 16094
.Ltmp1003:
    00003ee3: 	movq	-0x8(%rdx), %rax
    00003ee7: 	addq	$0x200, %rax
    00003eed: 	jmp	.Ltmp1167 # Offset: 16109
.Ltmp1001:
    00003ef2: 	movq	-0x8(%rdx), %rax
    00003ef6: 	addq	$0x200, %rax
    00003efc: 	jmp	.Ltmp1168 # Offset: 16124
.Ltmp999:
    00003f01: 	movq	-0x8(%rdx), %rax
    00003f05: 	addq	$0x200, %rax
    00003f0b: 	jmp	.Ltmp1169 # Offset: 16139
.Ltmp997:
    00003f10: 	movq	-0x8(%rdx), %rax
    00003f14: 	addq	$0x200, %rax
    00003f1a: 	jmp	.Ltmp1170 # Offset: 16154
.Ltmp995:
    00003f1f: 	movq	-0x8(%rdx), %rax
    00003f23: 	addq	$0x200, %rax
    00003f29: 	jmp	.Ltmp1171 # Offset: 16169
.Ltmp993:
    00003f2e: 	movq	-0x8(%rdx), %rax
    00003f32: 	addq	$0x200, %rax
    00003f38: 	jmp	.Ltmp1172 # Offset: 16184
.Ltmp989:
    00003f3d: 	movq	-0x8(%rdx), %rax
    00003f41: 	addq	$0x200, %rax
    00003f47: 	jmp	.Ltmp1173 # Offset: 16199
.Ltmp983:
    00003f4c: 	movq	-0x8(%rdx), %rax
    00003f50: 	addq	$0x200, %rax
    00003f56: 	jmp	.Ltmp1174 # Offset: 16214
.Ltmp975:
    00003f5b: 	movq	-0x8(%rdx), %rax
    00003f5f: 	addq	$0x200, %rax
    00003f65: 	jmp	.Ltmp1175 # Offset: 16229
.Ltmp969:
    00003f6a: 	movq	-0x8(%rdx), %rax
    00003f6e: 	addq	$0x200, %rax
    00003f74: 	jmp	.Ltmp1176 # Offset: 16244
.Ltmp963:
    00003f79: 	movq	-0x8(%rdx), %rax
    00003f7d: 	addq	$0x200, %rax
    00003f83: 	jmp	.Ltmp1177 # Offset: 16259
.Ltmp957:
    00003f88: 	movq	-0x8(%rdx), %rax
    00003f8c: 	addq	$0x200, %rax
    00003f92: 	jmp	.Ltmp1178 # Offset: 16274
.Ltmp950:
    00003f97: 	movq	-0x8(%rdx), %rax
    00003f9b: 	addq	$0x200, %rax
    00003fa1: 	jmp	.Ltmp1179 # Offset: 16289
.Ltmp944:
    00003fa6: 	movq	-0x8(%rdx), %rax
    00003faa: 	addq	$0x200, %rax
    00003fb0: 	jmp	.Ltmp1180 # Offset: 16304
.Ltmp1137:
    00003fb5: 	callq	__stack_chk_fail@PLT # Offset: 16309
    00003fba: 	endbr64
.Ltmp1182:
    00003fbe: 	movq	%rax, %rbx
    00003fc1: 	jmp	.Ltmp1181 # Offset: 16321
    00003fc3: 	endbr64
    00003fc7: 	jmp	.Ltmp1182 # Offset: 16327
    00003fc9: 	endbr64
    00003fcd: 	jmp	.Ltmp1182 # Offset: 16333
    00003fcf: 	endbr64
    00003fd3: 	jmp	.Ltmp1182 # Offset: 16339
.Ltmp1181:
    00003fd5: 	movq	0x140(%rsp), %rdi
    00003fdd: 	cmpq	0x18(%rsp), %rdi
    00003fe2: 	je	.Ltmp1183 # Offset: 16354
    00003fe4: 	movq	0x150(%rsp), %rax
    00003fec: 	leaq	0x1(%rax), %rsi
    00003ff0: 	callq	_ZdlPvm@PLT # Offset: 16368
.Ltmp1183:
    00003ff5: 	movq	0xe0(%rsp), %rdi
    00003ffd: 	leaq	0xf0(%rsp), %rax
    00004005: 	cmpq	%rax, %rdi
    00004008: 	je	.Ltmp1184 # Offset: 16392
    0000400a: 	movq	0xf0(%rsp), %rax
    00004012: 	leaq	0x1(%rax), %rsi
    00004016: 	callq	_ZdlPvm@PLT # Offset: 16406
.Ltmp1184:
    0000401b: 	movq	0xc0(%rsp), %rdi
    00004023: 	leaq	0xd0(%rsp), %rax
    0000402b: 	cmpq	%rax, %rdi
    0000402e: 	je	.Ltmp1185 # Offset: 16430
    00004030: 	movq	0xd0(%rsp), %rax
    00004038: 	leaq	0x1(%rax), %rsi
    0000403c: 	callq	_ZdlPvm@PLT # Offset: 16444
.Ltmp1185:
    00004041: 	movq	%rbx, %rdi
    00004044: 	callq	_Unwind_Resume@PLT # Offset: 16452
    00004049: 	endbr64
    0000404d: 	jmp	.Ltmp1182 # Offset: 16461
    00004052: 	endbr64
    00004056: 	jmp	.Ltmp1182 # Offset: 16470
    0000405b: 	endbr64
    0000405f: 	jmp	.Ltmp1182 # Offset: 16479
    00004064: 	endbr64
    00004068: 	jmp	.Ltmp1182 # Offset: 16488
    0000406d: 	endbr64
.Ltmp1187:
    00004071: 	movq	%rax, %rbx
    00004074: 	jmp	.Ltmp1186 # Offset: 16500
    00004076: 	endbr64
    0000407a: 	jmp	.Ltmp1187 # Offset: 16506
    0000407c: 	endbr64
    00004080: 	jmp	.Ltmp1187 # Offset: 16512
    00004082: 	endbr64
    00004086: 	jmp	.Ltmp1187 # Offset: 16518
.Ltmp1186:
    00004088: 	movq	0x140(%rsp), %rdi
    00004090: 	cmpq	0x18(%rsp), %rdi
    00004095: 	je	.Ltmp1184 # Offset: 16533
.Ltmp1190:
    00004097: 	movq	0x150(%rsp), %rax
    0000409f: 	leaq	0x1(%rax), %rsi
    000040a3: 	callq	_ZdlPvm@PLT # Offset: 16547
    000040a8: 	jmp	.Ltmp1184 # Offset: 16552
    000040ad: 	endbr64
    000040b1: 	jmp	.Ltmp1182 # Offset: 16561
    000040b6: 	endbr64
    000040ba: 	movq	%rax, %rbx
    000040bd: 	jmp	.Ltmp1183 # Offset: 16573
    000040c2: 	endbr64
    000040c6: 	jmp	.Ltmp1187 # Offset: 16582
    000040c8: 	endbr64
    000040cc: 	jmp	.Ltmp1182 # Offset: 16588
    000040d1: 	endbr64
    000040d5: 	jmp	.Ltmp1187 # Offset: 16597
    000040d7: 	endbr64
    000040db: 	jmp	.Ltmp1187 # Offset: 16603
    000040dd: 	endbr64
    000040e1: 	jmp	.Ltmp1182 # Offset: 16609
    000040e6: 	endbr64
    000040ea: 	jmp	.Ltmp1187 # Offset: 16618
    000040ec: 	endbr64
    000040f0: 	jmp	.Ltmp1187 # Offset: 16624
    000040f5: 	endbr64
    000040f9: 	jmp	.Ltmp1187 # Offset: 16633
    000040fe: 	endbr64
    00004102: 	jmp	.Ltmp1187 # Offset: 16642
    00004107: 	endbr64
    0000410b: 	jmp	.Ltmp1187 # Offset: 16651
    00004110: 	endbr64
    00004114: 	jmp	.Ltmp1187 # Offset: 16660
    00004119: 	endbr64
    0000411d: 	movq	%rax, %rbx
    00004120: 	jmp	.Ltmp1184 # Offset: 16672
    00004125: 	endbr64
    00004129: 	movq	%rax, %rbx
    0000412c: 	jmp	.Ltmp1188 # Offset: 16684
    0000412e: 	endbr64
.Ltmp1191:
    00004132: 	movq	%rax, %rbx
    00004135: 	jmp	.Ltmp1189 # Offset: 16693
.Ltmp1188:
    00004137: 	movq	0x140(%rsp), %rdi
    0000413f: 	leaq	0x150(%rsp), %rax
    00004147: 	cmpq	%rax, %rdi
    0000414a: 	jne	.Ltmp1190 # Offset: 16714
    00004150: 	jmp	.Ltmp1184 # Offset: 16720
    00004155: 	endbr64
    00004159: 	jmp	.Ltmp1191 # Offset: 16729
    0000415b: 	endbr64
    0000415f: 	jmp	.Ltmp1191 # Offset: 16735
    00004161: 	endbr64
    00004165: 	jmp	.Ltmp1191 # Offset: 16741
    00004167: 	endbr64
    0000416b: 	jmp	.Ltmp1191 # Offset: 16747
.Ltmp1189:
    0000416d: 	movq	0x140(%rsp), %rdi
    00004175: 	cmpq	0x18(%rsp), %rdi
    0000417a: 	je	.Ltmp1192 # Offset: 16762
    0000417c: 	movq	0x150(%rsp), %rax
    00004184: 	leaq	0x1(%rax), %rsi
    00004188: 	callq	_ZdlPvm@PLT # Offset: 16776
.Ltmp1192:
    0000418d: 	movq	0x120(%rsp), %rdi
    00004195: 	leaq	0x130(%rsp), %rax
    0000419d: 	cmpq	%rax, %rdi
    000041a0: 	je	.Ltmp1193 # Offset: 16800
    000041a2: 	movq	0x130(%rsp), %rax
    000041aa: 	leaq	0x1(%rax), %rsi
    000041ae: 	callq	_ZdlPvm@PLT # Offset: 16814
.Ltmp1193:
    000041b3: 	movq	0x100(%rsp), %rdi
    000041bb: 	leaq	0x110(%rsp), %rax
    000041c3: 	cmpq	%rax, %rdi
    000041c6: 	je	.Ltmp1183 # Offset: 16838
    000041cc: 	movq	0x110(%rsp), %rax
    000041d4: 	leaq	0x1(%rax), %rsi
    000041d8: 	callq	_ZdlPvm@PLT # Offset: 16856
    000041dd: 	jmp	.Ltmp1183 # Offset: 16861
    000041e2: 	endbr64
    000041e6: 	jmp	.Ltmp1191 # Offset: 16870
    000041eb: 	endbr64
    000041ef: 	jmp	.Ltmp1191 # Offset: 16879
    000041f4: 	endbr64
    000041f8: 	jmp	.Ltmp1191 # Offset: 16888
    000041fd: 	endbr64
    00004201: 	jmp	.Ltmp1191 # Offset: 16897
    00004206: 	endbr64
    0000420a: 	jmp	.Ltmp1191 # Offset: 16906
    0000420f: 	endbr64
    00004213: 	jmp	.Ltmp1191 # Offset: 16915
    00004218: 	endbr64
    0000421c: 	jmp	.Ltmp1191 # Offset: 16924
    00004221: 	endbr64
    00004225: 	movq	%rax, %rbx
    00004228: 	jmp	.Ltmp1192 # Offset: 16936
    0000422d: 	endbr64
.Ltmp1195:
    00004231: 	movq	%rax, %rbx
    00004234: 	jmp	.Ltmp1194 # Offset: 16948
    00004236: 	endbr64
    0000423a: 	jmp	.Ltmp1195 # Offset: 16954
    0000423c: 	endbr64
    00004240: 	jmp	.Ltmp1195 # Offset: 16960
    00004242: 	endbr64
    00004246: 	movq	%rax, %rbx
    00004249: 	jmp	.Ltmp1193 # Offset: 16969
.Ltmp1194:
    0000424e: 	movq	0x140(%rsp), %rdi
    00004256: 	cmpq	0x18(%rsp), %rdi
    0000425b: 	je	.Ltmp1193 # Offset: 16987
    00004261: 	movq	0x150(%rsp), %rax
    00004269: 	leaq	0x1(%rax), %rsi
    0000426d: 	callq	_ZdlPvm@PLT # Offset: 17005
    00004272: 	jmp	.Ltmp1193 # Offset: 17010
    00004277: 	endbr64
    0000427b: 	jmp	.Ltmp1191 # Offset: 17019
    00004280: 	endbr64
    00004284: 	jmp	.Ltmp1195 # Offset: 17028
    00004286: 	endbr64
    0000428a: 	jmp	.Ltmp1195 # Offset: 17034
    0000428c: 	endbr64
    00004290: 	jmp	.Ltmp1195 # Offset: 17040
    00004292: 	endbr64
    00004296: 	jmp	.Ltmp1182 # Offset: 17046
    0000429b: 	endbr64
    0000429f: 	jmp	.Ltmp1182 # Offset: 17055
    000042a4: 	endbr64
    000042a8: 	jmp	.Ltmp1195 # Offset: 17064
    000042aa: 	endbr64
    000042ae: 	jmp	.Ltmp1195 # Offset: 17070
    000042b0: 	endbr64
    000042b4: 	jmp	.Ltmp1182 # Offset: 17076
    000042b9: 	endbr64
    000042bd: 	jmp	.Ltmp1182 # Offset: 17085
    000042c2: 	endbr64
    000042c6: 	jmp	.Ltmp1182 # Offset: 17094
    000042cb: 	endbr64
    000042cf: 	jmp	.Ltmp1182 # Offset: 17103
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIaEvd"

Binary Function "_Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 92
  State       : disassembled
  Address     : 0x109d0
  Size        : 0x580
  MaxSize     : 0x580
  Offset      : 0x109d0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	movq	%rdi, %rbx
    0000000d: 	subq	$0x38, %rsp
    00000011: 	movq	%rsi, 0x18(%rsp)
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x28(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	movl	%eax, 0x14(%rsp)
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp1196 # Offset: 62
    00000044: 	movzbl	0x1(%rbx), %eax
    00000048: 	movl	$0x0, 0x8(%rsp)
    00000050: 	leaq	0x1f30(%rbx), %rbp
    00000057: 	movdqa	DATAat0x38620(%rip), %xmm5
    0000005f: 	movzbl	0x1f31(%rbx), %r12d
    00000067: 	movb	%al, 0x7(%rsp)
    0000006b: 	movzbl	(%rbx), %eax
    0000006e: 	movzbl	0x1f32(%rbx), %r11d
    00000076: 	movzbl	0x1f33(%rbx), %r10d
    0000007e: 	movb	%al, 0xc(%rsp)
    00000082: 	movzbl	0x1f30(%rbx), %eax
    00000089: 	movzbl	0x1f34(%rbx), %r9d
    00000091: 	movzbl	0x1f35(%rbx), %r8d
    00000099: 	movb	%al, 0x5(%rsp)
    0000009d: 	movzbl	0x1f37(%rbx), %eax
    000000a4: 	movzbl	0x1f36(%rbx), %edi
    000000ab: 	movzbl	0x1f3a(%rbx), %r14d
    000000b3: 	movb	%al, 0x2(%rsp)
    000000b7: 	movzbl	0x1f38(%rbx), %eax
    000000be: 	movzbl	0x1f3b(%rbx), %r15d
    000000c6: 	movzbl	0x1f3c(%rbx), %r13d
    000000ce: 	movb	%al, 0x3(%rsp)
    000000d2: 	movzbl	0x1f39(%rbx), %eax
    000000d9: 	movzbl	0x1f3d(%rbx), %edx
    000000e0: 	movzbl	0x1f3e(%rbx), %esi
    000000e7: 	movb	%al, 0x4(%rsp)
    000000eb: 	movzbl	0x1f3f(%rbx), %eax
    000000f2: 	movb	%al, 0x6(%rsp)
    000000f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1199:
    00000100: 	movzbl	0xc(%rsp), %eax
    00000105: 	pxor	%xmm6, %xmm6
    00000109: 	movl	%eax, %ecx
    0000010b: 	imull	%ecx, %eax
    0000010e: 	movb	%al, 0xe(%rsp)
    00000112: 	movzbl	0x7(%rsp), %eax
    00000117: 	imull	%eax, %eax
    0000011a: 	movb	%al, 0xf(%rsp)
    0000011e: 	movzbl	0x7(%rsp), %eax
    00000123: 	imull	%ecx, %eax
    00000126: 	addl	%eax, %eax
    00000128: 	movb	%al, 0xd(%rsp)
    0000012c: 	movq	%rbx, %rax
    0000012f: 	nop # Size: 1
.Ltmp1197:
    00000130: 	movdqu	0x1(%rax), %xmm1
    00000135: 	movdqu	(%rax), %xmm0
    00000139: 	addq	$0x10, %rax
    0000013d: 	movdqa	%xmm1, %xmm2
    00000141: 	movdqa	%xmm0, %xmm3
    00000145: 	punpcklbw	%xmm1, %xmm2
    00000149: 	punpckhbw	%xmm1, %xmm1
    0000014d: 	punpcklbw	%xmm0, %xmm3
    00000151: 	movdqa	%xmm2, %xmm4
    00000155: 	punpckhbw	%xmm0, %xmm0
    00000159: 	movdqa	%xmm1, %xmm7
    0000015d: 	pmullw	%xmm3, %xmm4
    00000161: 	pmullw	%xmm0, %xmm7
    00000165: 	pmullw	%xmm2, %xmm2
    00000169: 	pmullw	%xmm1, %xmm1
    0000016d: 	pmullw	%xmm3, %xmm3
    00000171: 	pmullw	%xmm0, %xmm0
    00000175: 	pand	%xmm5, %xmm4
    00000179: 	pand	%xmm5, %xmm7
    0000017d: 	packuswb	%xmm7, %xmm4
    00000181: 	pand	%xmm5, %xmm2
    00000185: 	pand	%xmm5, %xmm1
    00000189: 	pand	%xmm5, %xmm3
    0000018d: 	pand	%xmm5, %xmm0
    00000191: 	paddb	%xmm4, %xmm4
    00000195: 	packuswb	%xmm1, %xmm2
    00000199: 	packuswb	%xmm0, %xmm3
    0000019d: 	psubb	%xmm4, %xmm6
    000001a1: 	paddb	%xmm3, %xmm2
    000001a5: 	paddb	%xmm2, %xmm6
    000001a9: 	cmpq	%rbp, %rax
    000001ac: 	jne	.Ltmp1197 # Offset: 428
    000001ae: 	movl	%esi, %eax
    000001b0: 	movdqa	%xmm6, %xmm0
    000001b4: 	pxor	%xmm7, %xmm7
    000001b8: 	imull	%esi, %eax
    000001bb: 	psrldq	$0x8, %xmm0
    000001c0: 	paddb	%xmm0, %xmm6
    000001c4: 	psadbw	%xmm7, %xmm6
    000001c8: 	movl	%eax, %ecx
    000001ca: 	movl	%edx, %eax
    000001cc: 	movd	%xmm6, 0x10(%rsp)
    000001d2: 	imull	%edx, %eax
    000001d5: 	addl	%eax, %ecx
    000001d7: 	movl	%r13d, %eax
    000001da: 	imull	%r13d, %eax
    000001de: 	addl	%eax, %ecx
    000001e0: 	movl	%r12d, %eax
    000001e3: 	imull	%r12d, %eax
    000001e7: 	addl	%eax, %ecx
    000001e9: 	movl	%r11d, %eax
    000001ec: 	imull	%r11d, %eax
    000001f0: 	addl	%eax, %ecx
    000001f2: 	movl	%r10d, %eax
    000001f5: 	imull	%r10d, %eax
    000001f9: 	addl	%eax, %ecx
    000001fb: 	movl	%r9d, %eax
    000001fe: 	imull	%r9d, %eax
    00000202: 	addl	%eax, %ecx
    00000204: 	movl	%r8d, %eax
    00000207: 	imull	%r8d, %eax
    0000020b: 	addl	%eax, %ecx
    0000020d: 	movl	%edi, %eax
    0000020f: 	imull	%edi, %eax
    00000212: 	addl	%eax, %ecx
    00000214: 	movzbl	0x2(%rsp), %eax
    00000219: 	imull	%eax, %eax
    0000021c: 	addl	%eax, %ecx
    0000021e: 	movzbl	0x3(%rsp), %eax
    00000223: 	imull	%eax, %eax
    00000226: 	addl	%eax, %ecx
    00000228: 	movzbl	0x4(%rsp), %eax
    0000022d: 	imull	%eax, %eax
    00000230: 	addl	%eax, %ecx
    00000232: 	movl	%r14d, %eax
    00000235: 	imull	%r14d, %eax
    00000239: 	addl	%eax, %ecx
    0000023b: 	movl	%r15d, %eax
    0000023e: 	imull	%r15d, %eax
    00000242: 	addl	%eax, %ecx
    00000244: 	movzbl	0xe(%rsp), %eax
    00000249: 	leal	(%rax,%rcx,2), %ecx
    0000024c: 	movzbl	0x5(%rsp), %eax
    00000251: 	addb	0xf(%rsp), %cl
    00000255: 	imull	%eax, %eax
    00000258: 	addl	%eax, %ecx
    0000025a: 	movzbl	0x6(%rsp), %eax
    0000025f: 	imull	%eax, %eax
    00000262: 	addl	%eax, %ecx
    00000264: 	movzbl	0x5(%rsp), %eax
    00000269: 	subb	0xd(%rsp), %cl
    0000026d: 	imull	%r12d, %eax
    00000271: 	addl	%eax, %eax
    00000273: 	subl	%eax, %ecx
    00000275: 	movl	%r12d, %eax
    00000278: 	imull	%r11d, %eax
    0000027c: 	addl	%eax, %eax
    0000027e: 	subl	%eax, %ecx
    00000280: 	movl	%r11d, %eax
    00000283: 	imull	%r10d, %eax
    00000287: 	addl	%eax, %eax
    00000289: 	subl	%eax, %ecx
    0000028b: 	movl	%r10d, %eax
    0000028e: 	imull	%r9d, %eax
    00000292: 	addl	%eax, %eax
    00000294: 	subl	%eax, %ecx
    00000296: 	movl	%r9d, %eax
    00000299: 	imull	%r8d, %eax
    0000029d: 	addl	%eax, %eax
    0000029f: 	subl	%eax, %ecx
    000002a1: 	movl	%r8d, %eax
    000002a4: 	imull	%edi, %eax
    000002a7: 	addl	%eax, %eax
    000002a9: 	subl	%eax, %ecx
    000002ab: 	movzbl	0x2(%rsp), %eax
    000002b0: 	imull	%edi, %eax
    000002b3: 	addl	%eax, %eax
    000002b5: 	subl	%eax, %ecx
    000002b7: 	movzbl	0x2(%rsp), %eax
    000002bc: 	mulb	0x3(%rsp)
    000002c0: 	addl	%eax, %eax
    000002c2: 	subl	%eax, %ecx
    000002c4: 	movzbl	0x3(%rsp), %eax
    000002c9: 	mulb	0x4(%rsp)
    000002cd: 	addl	%eax, %eax
    000002cf: 	subl	%eax, %ecx
    000002d1: 	movzbl	0x4(%rsp), %eax
    000002d6: 	imull	%r14d, %eax
    000002da: 	addl	%eax, %eax
    000002dc: 	subl	%eax, %ecx
    000002de: 	movl	%r14d, %eax
    000002e1: 	imull	%r15d, %eax
    000002e5: 	addl	%eax, %eax
    000002e7: 	subl	%eax, %ecx
    000002e9: 	movl	%r15d, %eax
    000002ec: 	imull	%r13d, %eax
    000002f0: 	addl	%eax, %eax
    000002f2: 	subl	%eax, %ecx
    000002f4: 	movl	%edx, %eax
    000002f6: 	imull	%r13d, %eax
    000002fa: 	addl	%eax, %eax
    000002fc: 	subl	%eax, %ecx
    000002fe: 	movl	%esi, %eax
    00000300: 	imull	%edx, %eax
    00000303: 	addl	%eax, %eax
    00000305: 	subl	%eax, %ecx
    00000307: 	movzbl	0x6(%rsp), %eax
    0000030c: 	imull	%esi, %eax
    0000030f: 	addl	%eax, %eax
    00000311: 	subl	%eax, %ecx
    00000313: 	addb	0x10(%rsp), %cl
    00000317: 	je	.Ltmp1198 # Offset: 791
    0000031d: 	movl	current_test(%rip), %edx
    00000323: 	leaq	DATAat0x381c8(%rip), %rsi
    0000032a: 	movl	$0x1, %edi
    0000032f: 	xorl	%eax, %eax
    00000331: 	callq	__printf_chk@PLT # Offset: 817
    00000336: 	addl	$0x1, 0x8(%rsp)
    0000033b: 	movl	iterations(%rip), %edx
    00000341: 	movl	0x8(%rsp), %eax
    00000345: 	movl	%edx, 0x14(%rsp)
    00000349: 	cmpl	%eax, %edx
    0000034b: 	jle	.Ltmp1196 # Offset: 843
    00000351: 	movzbl	0x1(%rbx), %eax
    00000355: 	movzbl	0x1f31(%rbx), %r12d
    0000035d: 	movzbl	0x1f32(%rbx), %r11d
    00000365: 	movzbl	0x1f33(%rbx), %r10d
    0000036d: 	movb	%al, 0x7(%rsp)
    00000371: 	movzbl	(%rbx), %eax
    00000374: 	movzbl	0x1f34(%rbx), %r9d
    0000037c: 	movzbl	0x1f35(%rbx), %r8d
    00000384: 	movb	%al, 0xc(%rsp)
    00000388: 	movzbl	0x1f30(%rbx), %eax
    0000038f: 	movzbl	0x1f36(%rbx), %edi
    00000396: 	movzbl	0x1f3a(%rbx), %r14d
    0000039e: 	movb	%al, 0x5(%rsp)
    000003a2: 	movzbl	0x1f37(%rbx), %eax
    000003a9: 	movzbl	0x1f3b(%rbx), %r15d
    000003b1: 	movzbl	0x1f3c(%rbx), %r13d
    000003b9: 	movb	%al, 0x2(%rsp)
    000003bd: 	movzbl	0x1f38(%rbx), %eax
    000003c4: 	movzbl	0x1f3d(%rbx), %edx
    000003cb: 	movzbl	0x1f3e(%rbx), %esi
    000003d2: 	movb	%al, 0x3(%rsp)
    000003d6: 	movzbl	0x1f39(%rbx), %eax
    000003dd: 	movdqa	DATAat0x38620(%rip), %xmm5
    000003e5: 	movb	%al, 0x4(%rsp)
    000003e9: 	movzbl	0x1f3f(%rbx), %eax
    000003f0: 	movb	%al, 0x6(%rsp)
    000003f4: 	jmp	.Ltmp1199 # Offset: 1012
    000003f9: 	nopl	(%rax) # Size: 7
.Ltmp1198:
    00000400: 	addl	$0x1, 0x8(%rsp)
    00000405: 	movl	0x8(%rsp), %eax
    00000409: 	cmpl	0x14(%rsp), %eax
    0000040d: 	jl	.Ltmp1199 # Offset: 1037
.Ltmp1196:
    00000413: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000041a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000421: 	subq	$0x20, %rax
    00000425: 	cmpq	%rax, %rbx
    00000428: 	je	.Ltmp1200 # Offset: 1064
    0000042e: 	movq	0x18(%rsp), %rax
    00000433: 	leaq	0x10(%rbx), %rdi
    00000437: 	movq	%rdi, (%rbx)
    0000043a: 	movq	(%rax), %rbp
    0000043d: 	movq	0x8(%rax), %r12
    00000441: 	movq	%rbp, %rax
    00000444: 	addq	%r12, %rax
    00000447: 	je	.Ltmp1201 # Offset: 1095
    00000449: 	testq	%rbp, %rbp
    0000044c: 	je	.Ltmp1202 # Offset: 1100
.Ltmp1201:
    00000452: 	movq	%r12, 0x20(%rsp)
    00000457: 	cmpq	$0xf, %r12
    0000045b: 	ja	.Ltmp1203 # Offset: 1115
    00000461: 	cmpq	$0x1, %r12
    00000465: 	jne	.Ltmp1204 # Offset: 1125
    0000046b: 	movzbl	(%rbp), %eax
    0000046f: 	movb	%al, 0x10(%rbx)
.Ltmp1207:
    00000472: 	movq	%r12, 0x8(%rbx)
    00000476: 	movb	$0x0, (%rdi,%r12)
    0000047b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000482: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000489: 	addq	$0x20, %rax
    0000048d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000494: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000049b: 	je	.Ltmp1205 # Offset: 1179
.Ltmp1208:
    000004a1: 	movq	-0x20(%rax), %rbp
    000004a5: 	callq	clock@PLT # Offset: 1189
    000004aa: 	movq	%rax, end_time(%rip)
    000004b1: 	movq	0x28(%rsp), %rdx
    000004b6: 	subq	%fs:0x28, %rdx
    000004bf: 	jne	.Ltmp1206 # Offset: 1215
    000004c5: 	subq	start_time(%rip), %rax
    000004cc: 	pxor	%xmm0, %xmm0
    000004d0: 	movq	%rbp, %rdi
    000004d3: 	cvtsi2sd	%rax, %xmm0
    000004d8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000004e0: 	addq	$0x38, %rsp
    000004e4: 	popq	%rbx
    000004e5: 	popq	%rbp
    000004e6: 	popq	%r12
    000004e8: 	popq	%r13
    000004ea: 	popq	%r14
    000004ec: 	popq	%r15
    000004ee: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1262
.Ltmp1203:
    000004f3: 	movq	%rbx, %rdi
    000004f6: 	leaq	0x20(%rsp), %rsi
    000004fb: 	xorl	%edx, %edx
    000004fd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1277
    00000502: 	movq	%rax, (%rbx)
    00000505: 	movq	%rax, %rdi
    00000508: 	movq	0x20(%rsp), %rax
    0000050d: 	movq	%rax, 0x10(%rbx)
.Ltmp1209:
    00000511: 	movq	%r12, %rdx
    00000514: 	movq	%rbp, %rsi
    00000517: 	callq	memcpy@PLT # Offset: 1303
    0000051c: 	movq	0x20(%rsp), %r12
    00000521: 	movq	(%rbx), %rdi
    00000524: 	jmp	.Ltmp1207 # Offset: 1316
.Ltmp1200:
    00000529: 	movq	0x18(%rsp), %rsi
    0000052e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000535: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1333
    0000053a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000541: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000548: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000054f: 	jne	.Ltmp1208 # Offset: 1359
.Ltmp1205:
    00000555: 	movq	-0x8(%rdx), %rax
    00000559: 	addq	$0x200, %rax
    0000055f: 	jmp	.Ltmp1208 # Offset: 1375
.Ltmp1204:
    00000564: 	testq	%r12, %r12
    00000567: 	je	.Ltmp1207 # Offset: 1383
    0000056d: 	jmp	.Ltmp1209 # Offset: 1389
.Ltmp1206:
    0000056f: 	callq	__stack_chk_fail@PLT # Offset: 1391
.Ltmp1202:
    00000574: 	leaq	DATAat0x38110(%rip), %rdi
    0000057b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1403
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_algebraic_simplification.cpp/1
  Number      : 93
  State       : disassembled
  Address     : 0x10f50
  Size        : 0x5d0
  MaxSize     : 0x5d0
  Offset      : 0x10f50
  Section     : .text
  Orc Section : .local.text._Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x48, %rsp
    00000011: 	movq	%rsi, 0x28(%rsp)
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x38(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	movl	%eax, 0x24(%rsp)
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp1210 # Offset: 62
    00000044: 	movzbl	0x1(%r13), %eax
    00000049: 	movl	$0x0, 0x4(%rsp)
    00000051: 	leaq	0x1f30(%r13), %r15
    00000058: 	movdqa	DATAat0x38620(%rip), %xmm3
    00000060: 	movb	%al, 0x23(%rsp)
    00000064: 	movzbl	(%r13), %eax
    00000069: 	movb	%al, 0x11(%rsp)
    0000006d: 	movzbl	0x1f30(%r13), %eax
    00000075: 	movb	%al, 0xa(%rsp)
    00000079: 	movzbl	0x1f31(%r13), %eax
    00000081: 	movb	%al, 0xe(%rsp)
    00000085: 	movzbl	0x1f32(%r13), %eax
    0000008d: 	movb	%al, 0xf(%rsp)
    00000091: 	movzbl	0x1f33(%r13), %eax
    00000099: 	movb	%al, 0x10(%rsp)
    0000009d: 	movzbl	0x1f34(%r13), %eax
    000000a5: 	movb	%al, 0x12(%rsp)
    000000a9: 	movzbl	0x1f35(%r13), %eax
    000000b1: 	movb	%al, 0x13(%rsp)
    000000b5: 	movzbl	0x1f36(%r13), %eax
    000000bd: 	movb	%al, 0x14(%rsp)
    000000c1: 	movzbl	0x1f37(%r13), %eax
    000000c9: 	movb	%al, 0x15(%rsp)
    000000cd: 	movzbl	0x1f38(%r13), %eax
    000000d5: 	movb	%al, 0x16(%rsp)
    000000d9: 	movzbl	0x1f39(%r13), %eax
    000000e1: 	movb	%al, 0x17(%rsp)
    000000e5: 	movzbl	0x1f3a(%r13), %eax
    000000ed: 	movb	%al, 0x18(%rsp)
    000000f1: 	movzbl	0x1f3b(%r13), %eax
    000000f9: 	movb	%al, 0x19(%rsp)
    000000fd: 	movzbl	0x1f3c(%r13), %eax
    00000105: 	movb	%al, 0x1a(%rsp)
    00000109: 	movzbl	0x1f3d(%r13), %eax
    00000111: 	movb	%al, 0x1b(%rsp)
    00000115: 	movzbl	0x1f3e(%r13), %eax
    0000011d: 	movb	%al, 0xc(%rsp)
    00000121: 	movzbl	0x1f3f(%r13), %eax
    00000129: 	movb	%al, 0xd(%rsp)
    0000012d: 	nopl	(%rax) # Size: 3
.Ltmp1213:
    00000130: 	movzbl	0x11(%rsp), %eax
    00000135: 	movzbl	0x23(%rsp), %esi
    0000013a: 	pxor	%xmm4, %xmm4
    0000013e: 	movl	%eax, %ecx
    00000140: 	imull	%ecx, %eax
    00000143: 	movl	%eax, %r14d
    00000146: 	leal	(%rsi,%rcx,2), %eax
    00000149: 	imull	%esi, %eax
    0000014c: 	movb	%al, 0x20(%rsp)
    00000150: 	movq	%r13, %rax
    00000153: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1211:
    00000158: 	movdqu	(%rax), %xmm0
    0000015c: 	movdqu	0x1(%rax), %xmm1
    00000161: 	addq	$0x10, %rax
    00000165: 	movdqa	%xmm0, %xmm5
    00000169: 	movdqa	%xmm1, %xmm2
    0000016d: 	paddb	%xmm0, %xmm5
    00000171: 	punpcklbw	%xmm1, %xmm2
    00000175: 	paddb	%xmm1, %xmm5
    00000179: 	punpckhbw	%xmm1, %xmm1
    0000017d: 	movdqa	%xmm5, %xmm6
    00000181: 	punpcklbw	%xmm5, %xmm6
    00000185: 	punpckhbw	%xmm5, %xmm5
    00000189: 	pmullw	%xmm6, %xmm2
    0000018d: 	pmullw	%xmm5, %xmm1
    00000191: 	pand	%xmm3, %xmm2
    00000195: 	pand	%xmm3, %xmm1
    00000199: 	packuswb	%xmm1, %xmm2
    0000019d: 	movdqa	%xmm0, %xmm1
    000001a1: 	punpcklbw	%xmm0, %xmm1
    000001a5: 	punpckhbw	%xmm0, %xmm0
    000001a9: 	pmullw	%xmm1, %xmm1
    000001ad: 	pmullw	%xmm0, %xmm0
    000001b1: 	pand	%xmm3, %xmm1
    000001b5: 	pand	%xmm3, %xmm0
    000001b9: 	packuswb	%xmm0, %xmm1
    000001bd: 	paddb	%xmm1, %xmm2
    000001c1: 	paddb	%xmm2, %xmm4
    000001c5: 	cmpq	%r15, %rax
    000001c8: 	jne	.Ltmp1211 # Offset: 456
    000001ca: 	movzbl	0xe(%rsp), %eax
    000001cf: 	movzbl	0xf(%rsp), %edi
    000001d4: 	movdqa	%xmm4, %xmm0
    000001d8: 	movzbl	0x12(%rsp), %edx
    000001dd: 	movzbl	0x14(%rsp), %esi
    000001e2: 	psrldq	$0x8, %xmm0
    000001e7: 	leal	(%rax,%rax), %r12d
    000001eb: 	movzbl	0x16(%rsp), %eax
    000001f0: 	leal	(%rdi,%rdi), %ebp
    000001f3: 	movzbl	0x10(%rsp), %ebx
    000001f8: 	leal	(%rdx,%rdx), %r11d
    000001fc: 	movzbl	0x17(%rsp), %edx
    00000201: 	leal	(%rsi,%rsi), %r9d
    00000205: 	movzbl	0x13(%rsp), %ecx
    0000020a: 	leal	(%rax,%rax), %edi
    0000020d: 	movzbl	0x19(%rsp), %eax
    00000212: 	addl	%ebx, %ebx
    00000214: 	movzbl	0x15(%rsp), %r8d
    0000021a: 	leal	(%rdx,%rdx), %esi
    0000021d: 	leal	(%rcx,%rcx), %r10d
    00000221: 	movzbl	0x18(%rsp), %ecx
    00000226: 	leal	(%rax,%rax), %edx
    00000229: 	movzbl	0x1a(%rsp), %eax
    0000022e: 	addl	%r8d, %r8d
    00000231: 	paddb	%xmm0, %xmm4
    00000235: 	pxor	%xmm0, %xmm0
    00000239: 	addl	%ecx, %ecx
    0000023b: 	addl	%eax, %eax
    0000023d: 	psadbw	%xmm0, %xmm4
    00000241: 	movb	%al, 0x22(%rsp)
    00000245: 	movzbl	0x1b(%rsp), %eax
    0000024a: 	movd	%xmm4, 0x1c(%rsp)
    00000250: 	addl	%eax, %eax
    00000252: 	movb	%al, 0x21(%rsp)
    00000256: 	movzbl	0xc(%rsp), %eax
    0000025b: 	addl	%eax, %eax
    0000025d: 	movb	%al, 0xb(%rsp)
    00000261: 	movzbl	0xa(%rsp), %eax
    00000266: 	imull	%eax, %eax
    00000269: 	addl	%eax, %r14d
    0000026c: 	movzbl	0xa(%rsp), %eax
    00000271: 	addb	0x20(%rsp), %r14b
    00000276: 	leal	(%r12,%rax,2), %eax
    0000027a: 	mulb	0xe(%rsp)
    0000027e: 	addl	%eax, %r14d
    00000281: 	movzbl	0xd(%rsp), %eax
    00000286: 	addb	0xb(%rsp), %al
    0000028a: 	mulb	0xd(%rsp)
    0000028e: 	addl	%eax, %r14d
    00000291: 	leal	(%r12,%rbp), %eax
    00000295: 	mulb	0xf(%rsp)
    00000299: 	leal	(%r14,%rax), %r12d
    0000029d: 	leal	(%rbp,%rbx), %eax
    000002a1: 	mulb	0x10(%rsp)
    000002a5: 	leal	(%r12,%rax), %ebp
    000002a9: 	leal	(%r11,%rbx), %eax
    000002ad: 	mulb	0x12(%rsp)
    000002b1: 	leal	(%rbp,%rax), %ebx
    000002b5: 	leal	(%r10,%r11), %eax
    000002b9: 	mulb	0x13(%rsp)
    000002bd: 	leal	(%rbx,%rax), %r11d
    000002c1: 	leal	(%r9,%r10), %eax
    000002c5: 	mulb	0x14(%rsp)
    000002c9: 	leal	(%r11,%rax), %r10d
    000002cd: 	leal	(%r8,%r9), %eax
    000002d1: 	mulb	0x15(%rsp)
    000002d5: 	leal	(%r10,%rax), %r9d
    000002d9: 	leal	(%rdi,%r8), %eax
    000002dd: 	mulb	0x16(%rsp)
    000002e1: 	leal	(%r9,%rax), %r8d
    000002e5: 	leal	(%rsi,%rdi), %eax
    000002e8: 	mulb	0x17(%rsp)
    000002ec: 	movzbl	0x22(%rsp), %ebx
    000002f1: 	leal	(%r8,%rax), %edi
    000002f5: 	leal	(%rcx,%rsi), %eax
    000002f8: 	mulb	0x18(%rsp)
    000002fc: 	leal	(%rdi,%rax), %esi
    000002ff: 	leal	(%rdx,%rcx), %eax
    00000302: 	mulb	0x19(%rsp)
    00000306: 	leal	(%rsi,%rax), %ecx
    00000309: 	leal	(%rbx,%rdx), %eax
    0000030c: 	mulb	0x1a(%rsp)
    00000310: 	leal	(%rcx,%rax), %edx
    00000313: 	movl	%ebx, %eax
    00000315: 	movzbl	0x21(%rsp), %ebx
    0000031a: 	addl	%ebx, %eax
    0000031c: 	mulb	0x1b(%rsp)
    00000320: 	addl	%eax, %edx
    00000322: 	movzbl	0xb(%rsp), %eax
    00000327: 	addl	%ebx, %eax
    00000329: 	mulb	0xc(%rsp)
    0000032d: 	addl	%eax, %edx
    0000032f: 	addb	0x1c(%rsp), %dl
    00000333: 	je	.Ltmp1212 # Offset: 819
    00000339: 	movl	current_test(%rip), %edx
    0000033f: 	leaq	DATAat0x381c8(%rip), %rsi
    00000346: 	movl	$0x1, %edi
    0000034b: 	xorl	%eax, %eax
    0000034d: 	callq	__printf_chk@PLT # Offset: 845
    00000352: 	addl	$0x1, 0x4(%rsp)
    00000357: 	movl	iterations(%rip), %edx
    0000035d: 	movl	0x4(%rsp), %eax
    00000361: 	movl	%edx, 0x24(%rsp)
    00000365: 	cmpl	%eax, %edx
    00000367: 	jle	.Ltmp1210 # Offset: 871
    0000036d: 	movzbl	0x1(%r13), %eax
    00000372: 	movb	%al, 0x23(%rsp)
    00000376: 	movzbl	(%r13), %eax
    0000037b: 	movb	%al, 0x11(%rsp)
    0000037f: 	movzbl	0x1f30(%r13), %eax
    00000387: 	movb	%al, 0xa(%rsp)
    0000038b: 	movzbl	0x1f31(%r13), %eax
    00000393: 	movb	%al, 0xe(%rsp)
    00000397: 	movzbl	0x1f32(%r13), %eax
    0000039f: 	movb	%al, 0xf(%rsp)
    000003a3: 	movzbl	0x1f33(%r13), %eax
    000003ab: 	movb	%al, 0x10(%rsp)
    000003af: 	movzbl	0x1f34(%r13), %eax
    000003b7: 	movb	%al, 0x12(%rsp)
    000003bb: 	movzbl	0x1f35(%r13), %eax
    000003c3: 	movb	%al, 0x13(%rsp)
    000003c7: 	movzbl	0x1f36(%r13), %eax
    000003cf: 	movb	%al, 0x14(%rsp)
    000003d3: 	movzbl	0x1f37(%r13), %eax
    000003db: 	movb	%al, 0x15(%rsp)
    000003df: 	movzbl	0x1f38(%r13), %eax
    000003e7: 	movb	%al, 0x16(%rsp)
    000003eb: 	movzbl	0x1f39(%r13), %eax
    000003f3: 	movb	%al, 0x17(%rsp)
    000003f7: 	movzbl	0x1f3a(%r13), %eax
    000003ff: 	movb	%al, 0x18(%rsp)
    00000403: 	movzbl	0x1f3b(%r13), %eax
    0000040b: 	movb	%al, 0x19(%rsp)
    0000040f: 	movzbl	0x1f3c(%r13), %eax
    00000417: 	movb	%al, 0x1a(%rsp)
    0000041b: 	movzbl	0x1f3d(%r13), %eax
    00000423: 	movb	%al, 0x1b(%rsp)
    00000427: 	movzbl	0x1f3e(%r13), %eax
    0000042f: 	movdqa	DATAat0x38620(%rip), %xmm3
    00000437: 	movb	%al, 0xc(%rsp)
    0000043b: 	movzbl	0x1f3f(%r13), %eax
    00000443: 	movb	%al, 0xd(%rsp)
    00000447: 	jmp	.Ltmp1213 # Offset: 1095
    0000044c: 	nopl	(%rax) # Size: 4
.Ltmp1212:
    00000450: 	addl	$0x1, 0x4(%rsp)
    00000455: 	movl	0x4(%rsp), %eax
    00000459: 	cmpl	0x24(%rsp), %eax
    0000045d: 	jl	.Ltmp1213 # Offset: 1117
.Ltmp1210:
    00000463: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000046a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000471: 	subq	$0x20, %rax
    00000475: 	cmpq	%rax, %rbx
    00000478: 	je	.Ltmp1214 # Offset: 1144
    0000047e: 	movq	0x28(%rsp), %rax
    00000483: 	leaq	0x10(%rbx), %rdi
    00000487: 	movq	%rdi, (%rbx)
    0000048a: 	movq	(%rax), %rbp
    0000048d: 	movq	0x8(%rax), %r12
    00000491: 	movq	%rbp, %rax
    00000494: 	addq	%r12, %rax
    00000497: 	je	.Ltmp1215 # Offset: 1175
    00000499: 	testq	%rbp, %rbp
    0000049c: 	je	.Ltmp1216 # Offset: 1180
.Ltmp1215:
    000004a2: 	movq	%r12, 0x30(%rsp)
    000004a7: 	cmpq	$0xf, %r12
    000004ab: 	ja	.Ltmp1217 # Offset: 1195
    000004b1: 	cmpq	$0x1, %r12
    000004b5: 	jne	.Ltmp1218 # Offset: 1205
    000004bb: 	movzbl	(%rbp), %eax
    000004bf: 	movb	%al, 0x10(%rbx)
.Ltmp1221:
    000004c2: 	movq	%r12, 0x8(%rbx)
    000004c6: 	movb	$0x0, (%rdi,%r12)
    000004cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004d9: 	addq	$0x20, %rax
    000004dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000004eb: 	je	.Ltmp1219 # Offset: 1259
.Ltmp1222:
    000004f1: 	movq	-0x20(%rax), %rbp
    000004f5: 	callq	clock@PLT # Offset: 1269
    000004fa: 	movq	%rax, end_time(%rip)
    00000501: 	movq	0x38(%rsp), %rdx
    00000506: 	subq	%fs:0x28, %rdx
    0000050f: 	jne	.Ltmp1220 # Offset: 1295
    00000515: 	subq	start_time(%rip), %rax
    0000051c: 	pxor	%xmm0, %xmm0
    00000520: 	movq	%rbp, %rdi
    00000523: 	cvtsi2sd	%rax, %xmm0
    00000528: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000530: 	addq	$0x48, %rsp
    00000534: 	popq	%rbx
    00000535: 	popq	%rbp
    00000536: 	popq	%r12
    00000538: 	popq	%r13
    0000053a: 	popq	%r14
    0000053c: 	popq	%r15
    0000053e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1342
.Ltmp1217:
    00000543: 	movq	%rbx, %rdi
    00000546: 	leaq	0x30(%rsp), %rsi
    0000054b: 	xorl	%edx, %edx
    0000054d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1357
    00000552: 	movq	%rax, (%rbx)
    00000555: 	movq	%rax, %rdi
    00000558: 	movq	0x30(%rsp), %rax
    0000055d: 	movq	%rax, 0x10(%rbx)
.Ltmp1223:
    00000561: 	movq	%r12, %rdx
    00000564: 	movq	%rbp, %rsi
    00000567: 	callq	memcpy@PLT # Offset: 1383
    0000056c: 	movq	0x30(%rsp), %r12
    00000571: 	movq	(%rbx), %rdi
    00000574: 	jmp	.Ltmp1221 # Offset: 1396
.Ltmp1214:
    00000579: 	movq	0x28(%rsp), %rsi
    0000057e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000585: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1413
    0000058a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000591: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000598: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000059f: 	jne	.Ltmp1222 # Offset: 1439
.Ltmp1219:
    000005a5: 	movq	-0x8(%rdx), %rax
    000005a9: 	addq	$0x200, %rax
    000005af: 	jmp	.Ltmp1222 # Offset: 1455
.Ltmp1218:
    000005b4: 	testq	%r12, %r12
    000005b7: 	je	.Ltmp1221 # Offset: 1463
    000005bd: 	jmp	.Ltmp1223 # Offset: 1469
.Ltmp1220:
    000005bf: 	callq	__stack_chk_fail@PLT # Offset: 1471
.Ltmp1216:
    000005c4: 	leaq	DATAat0x38110(%rip), %rdi
    000005cb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1483
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIhEvd" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0x11520
  Size        : 0x4245
  MaxSize     : 0x4250
  Offset      : 0x11520
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0xb8, %rsp
    0000002d: 	leaq	DATAat0x38570(%rip), %rsi
    00000034: 	leaq	0xc0(%rsp), %rbx
    0000003c: 	movsd	%xmm0, (%rsp)
    00000041: 	leaq	0x160(%rsp), %r15
    00000049: 	movq	%fs:0x28, %rax
    00000052: 	movq	%rax, 0x20a8(%rsp)
    0000005a: 	xorl	%eax, %eax
    0000005c: 	movq	%rbx, %rdi
    0000005f: 	movq	%rbx, 0x50(%rsp)
    00000064: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 100
    00000069: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm4
    00000071: 	leaq	0xa0(%rsp), %rsi
    00000079: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000080: 	movaps	%xmm4, 0xa0(%rsp)
    00000088: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000090: 	movaps	%xmm4, 0xb0(%rsp)
    00000098: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 152
    0000009d: 	movsd	(%rsp), %xmm0
    000000a2: 	movq	%r15, %rdi
    000000a5: 	movq	%rbx, %rsi
    000000a8: 	cvttsd2si	init_value(%rip), %eax
    000000b0: 	movl	$0x3e8, %ecx
    000000b5: 	movabsq	$0x101010101010101, %rdx
    000000bf: 	cvttsd2si	%xmm0, %r13d
    000000c4: 	movzbl	%al, %eax
    000000c7: 	imulq	%rdx, %rax
    000000cb: 	leaq	DATAat0x381d8(%rip), %rdx
    000000d2: 	rep		stosq	%rax, %es:(%rdi)
    000000d5: 	leal	(%r13,%r13), %eax
    000000da: 	leal	0x2(%r13), %edi
    000000de: 	movb	%al, 0x40(%rsp)
    000000e2: 	movzbl	%al, %eax
    000000e5: 	divb	%dil
    000000e8: 	movb	%dil, 0x6e(%rsp)
    000000ed: 	addl	%r13d, %eax
    000000f0: 	movb	%al, 0x6f(%rsp)
    000000f4: 	leaq	0x140(%rsp), %rax
    000000fc: 	movq	%rax, %rdi
    000000ff: 	movq	%rax, 0x10(%rsp)
    00000104: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 260
    00000109: 	callq	clock@PLT # Offset: 265
    0000010e: 	movl	iterations(%rip), %ecx
    00000114: 	movl	%r13d, %r14d
    00000117: 	xorl	%ebp, %ebp
    00000119: 	movq	%rax, start_time(%rip)
    00000120: 	leaq	0x20a0(%rsp), %rbx
    00000128: 	leaq	DATAat0x381c8(%rip), %r12
    0000012f: 	testl	%ecx, %ecx
    00000131: 	jle	.Ltmp1224 # Offset: 305
    00000133: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1227:
    00000138: 	movq	%r15, %rax
    0000013b: 	pxor	%xmm0, %xmm0
    0000013f: 	nop # Size: 1
.Ltmp1225:
    00000140: 	paddb	(%rax), %xmm0
    00000144: 	addq	$0x10, %rax
    00000148: 	cmpq	%rax, %rbx
    0000014b: 	jne	.Ltmp1225 # Offset: 331
    0000014d: 	movdqa	%xmm0, %xmm1
    00000151: 	cvttsd2si	init_value(%rip), %edx
    00000159: 	psrldq	$0x8, %xmm1
    0000015e: 	paddb	%xmm1, %xmm0
    00000162: 	pxor	%xmm1, %xmm1
    00000166: 	psadbw	%xmm1, %xmm0
    0000016a: 	movd	%xmm0, %eax
    0000016e: 	shll	$0x6, %edx
    00000171: 	cmpb	%al, %dl
    00000173: 	je	.Ltmp1226 # Offset: 371
    00000175: 	movl	current_test(%rip), %edx
    0000017b: 	movq	%r12, %rsi
    0000017e: 	movl	$0x1, %edi
    00000183: 	xorl	%eax, %eax
    00000185: 	callq	__printf_chk@PLT # Offset: 389
    0000018a: 	movl	iterations(%rip), %ecx
.Ltmp1226:
    00000190: 	addl	$0x1, %ebp
    00000193: 	cmpl	%ecx, %ebp
    00000195: 	jl	.Ltmp1227 # Offset: 405
.Ltmp1224:
    00000197: 	movq	0x10(%rsp), %rsi
    0000019c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001a3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 419
    000001a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001af: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001b6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bd: 	je	.Ltmp1228 # Offset: 445
.Ltmp1428:
    000001c3: 	movq	-0x20(%rax), %rbp
    000001c7: 	callq	clock@PLT # Offset: 455
    000001cc: 	pxor	%xmm0, %xmm0
    000001d0: 	movq	%rax, end_time(%rip)
    000001d7: 	movq	%rbp, %rdi
    000001da: 	subq	start_time(%rip), %rax
    000001e1: 	cvtsi2sd	%rax, %xmm0
    000001e6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001ee: 	callq	_Z13record_resultdPKc # Offset: 494
    000001f3: 	movq	0x140(%rsp), %rdi
    000001fb: 	leaq	0x150(%rsp), %rax
    00000203: 	movq	%rax, 0x18(%rsp)
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	je	.Ltmp1229 # Offset: 523
    0000020d: 	movq	0x150(%rsp), %rax
    00000215: 	leaq	0x1(%rax), %rsi
    00000219: 	callq	_ZdlPvm@PLT # Offset: 537
.Ltmp1229:
    0000021e: 	movq	0x50(%rsp), %rsi
    00000223: 	movq	0x10(%rsp), %rdi
    00000228: 	leaq	DATAat0x381de(%rip), %rdx
    0000022f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 559
    00000234: 	callq	clock@PLT # Offset: 564
    00000239: 	movl	iterations(%rip), %ecx
    0000023f: 	xorl	%ebp, %ebp
    00000241: 	leaq	0x20a0(%rsp), %rbx
    00000249: 	movq	%rax, start_time(%rip)
    00000250: 	leaq	DATAat0x381c8(%rip), %r12
    00000257: 	testl	%ecx, %ecx
    00000259: 	jle	.Ltmp1230 # Offset: 601
    0000025b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1233:
    00000260: 	movq	%r15, %rax
    00000263: 	pxor	%xmm0, %xmm0
    00000267: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1231:
    00000270: 	paddb	(%rax), %xmm0
    00000274: 	addq	$0x10, %rax
    00000278: 	cmpq	%rbx, %rax
    0000027b: 	jne	.Ltmp1231 # Offset: 635
    0000027d: 	movdqa	%xmm0, %xmm1
    00000281: 	cvttsd2si	init_value(%rip), %edx
    00000289: 	psrldq	$0x8, %xmm1
    0000028e: 	paddb	%xmm1, %xmm0
    00000292: 	pxor	%xmm1, %xmm1
    00000296: 	psadbw	%xmm1, %xmm0
    0000029a: 	movd	%xmm0, %eax
    0000029e: 	shll	$0x6, %edx
    000002a1: 	cmpb	%al, %dl
    000002a3: 	je	.Ltmp1232 # Offset: 675
    000002a5: 	movl	current_test(%rip), %edx
    000002ab: 	movq	%r12, %rsi
    000002ae: 	movl	$0x1, %edi
    000002b3: 	xorl	%eax, %eax
    000002b5: 	callq	__printf_chk@PLT # Offset: 693
    000002ba: 	movl	iterations(%rip), %ecx
.Ltmp1232:
    000002c0: 	addl	$0x1, %ebp
    000002c3: 	cmpl	%ecx, %ebp
    000002c5: 	jl	.Ltmp1233 # Offset: 709
.Ltmp1230:
    000002c7: 	movq	0x10(%rsp), %rsi
    000002cc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002d3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 723
    000002d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002df: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002ed: 	je	.Ltmp1234 # Offset: 749
.Ltmp1470:
    000002f3: 	movq	-0x20(%rax), %rbp
    000002f7: 	callq	clock@PLT # Offset: 759
    000002fc: 	pxor	%xmm0, %xmm0
    00000300: 	movq	%rax, end_time(%rip)
    00000307: 	movq	%rbp, %rdi
    0000030a: 	subq	start_time(%rip), %rax
    00000311: 	cvtsi2sd	%rax, %xmm0
    00000316: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000031e: 	callq	_Z13record_resultdPKc # Offset: 798
    00000323: 	movq	0x140(%rsp), %rdi
    0000032b: 	cmpq	0x18(%rsp), %rdi
    00000330: 	je	.Ltmp1235 # Offset: 816
    00000332: 	movq	0x150(%rsp), %rax
    0000033a: 	leaq	0x1(%rax), %rsi
    0000033e: 	callq	_ZdlPvm@PLT # Offset: 830
.Ltmp1235:
    00000343: 	movq	0x50(%rsp), %rsi
    00000348: 	movq	0x10(%rsp), %rdi
    0000034d: 	leaq	DATAat0x381e8(%rip), %rdx
    00000354: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 852
    00000359: 	callq	clock@PLT # Offset: 857
    0000035e: 	movl	iterations(%rip), %ecx
    00000364: 	xorl	%ebp, %ebp
    00000366: 	leaq	0x20a0(%rsp), %rbx
    0000036e: 	movq	%rax, start_time(%rip)
    00000375: 	leaq	DATAat0x381c8(%rip), %r12
    0000037c: 	testl	%ecx, %ecx
    0000037e: 	jle	.Ltmp1236 # Offset: 894
.Ltmp1239:
    00000380: 	movq	%r15, %rax
    00000383: 	pxor	%xmm0, %xmm0
    00000387: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1237:
    00000390: 	paddb	(%rax), %xmm0
    00000394: 	addq	$0x10, %rax
    00000398: 	cmpq	%rbx, %rax
    0000039b: 	jne	.Ltmp1237 # Offset: 923
    0000039d: 	movdqa	%xmm0, %xmm1
    000003a1: 	cvttsd2si	init_value(%rip), %edx
    000003a9: 	psrldq	$0x8, %xmm1
    000003ae: 	paddb	%xmm1, %xmm0
    000003b2: 	pxor	%xmm1, %xmm1
    000003b6: 	psadbw	%xmm1, %xmm0
    000003ba: 	movd	%xmm0, %eax
    000003be: 	shll	$0x6, %edx
    000003c1: 	cmpb	%al, %dl
    000003c3: 	je	.Ltmp1238 # Offset: 963
    000003c5: 	movl	current_test(%rip), %edx
    000003cb: 	movq	%r12, %rsi
    000003ce: 	movl	$0x1, %edi
    000003d3: 	xorl	%eax, %eax
    000003d5: 	callq	__printf_chk@PLT # Offset: 981
    000003da: 	movl	iterations(%rip), %ecx
.Ltmp1238:
    000003e0: 	addl	$0x1, %ebp
    000003e3: 	cmpl	%ecx, %ebp
    000003e5: 	jl	.Ltmp1239 # Offset: 997
.Ltmp1236:
    000003e7: 	movq	0x10(%rsp), %rsi
    000003ec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003f3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1011
    000003f8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003ff: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000406: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000040d: 	je	.Ltmp1240 # Offset: 1037
.Ltmp1469:
    00000413: 	movq	-0x20(%rax), %rbp
    00000417: 	callq	clock@PLT # Offset: 1047
    0000041c: 	pxor	%xmm0, %xmm0
    00000420: 	movq	%rax, end_time(%rip)
    00000427: 	movq	%rbp, %rdi
    0000042a: 	subq	start_time(%rip), %rax
    00000431: 	cvtsi2sd	%rax, %xmm0
    00000436: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000043e: 	callq	_Z13record_resultdPKc # Offset: 1086
    00000443: 	movq	0x140(%rsp), %rdi
    0000044b: 	cmpq	0x18(%rsp), %rdi
    00000450: 	je	.Ltmp1241 # Offset: 1104
    00000452: 	movq	0x150(%rsp), %rax
    0000045a: 	leaq	0x1(%rax), %rsi
    0000045e: 	callq	_ZdlPvm@PLT # Offset: 1118
.Ltmp1241:
    00000463: 	movq	0x50(%rsp), %rsi
    00000468: 	movq	0x10(%rsp), %rdi
    0000046d: 	leaq	DATAat0x381f7(%rip), %rdx
    00000474: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1140
    00000479: 	callq	clock@PLT # Offset: 1145
    0000047e: 	movl	iterations(%rip), %ecx
    00000484: 	xorl	%ebp, %ebp
    00000486: 	leaq	0x20a0(%rsp), %rbx
    0000048e: 	movq	%rax, start_time(%rip)
    00000495: 	leaq	DATAat0x381c8(%rip), %r12
    0000049c: 	testl	%ecx, %ecx
    0000049e: 	jle	.Ltmp1242 # Offset: 1182
.Ltmp1245:
    000004a0: 	movq	%r15, %rax
    000004a3: 	pxor	%xmm0, %xmm0
    000004a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1243:
    000004b0: 	psubb	(%rax), %xmm0
    000004b4: 	addq	$0x10, %rax
    000004b8: 	cmpq	%rbx, %rax
    000004bb: 	jne	.Ltmp1243 # Offset: 1211
    000004bd: 	movdqa	%xmm0, %xmm1
    000004c1: 	cvttsd2si	init_value(%rip), %edx
    000004c9: 	psrldq	$0x8, %xmm1
    000004ce: 	paddb	%xmm1, %xmm0
    000004d2: 	pxor	%xmm1, %xmm1
    000004d6: 	psadbw	%xmm1, %xmm0
    000004da: 	movd	%xmm0, %eax
    000004de: 	shll	$0x6, %edx
    000004e1: 	addb	%dl, %al
    000004e3: 	je	.Ltmp1244 # Offset: 1251
    000004e5: 	movl	current_test(%rip), %edx
    000004eb: 	movq	%r12, %rsi
    000004ee: 	movl	$0x1, %edi
    000004f3: 	xorl	%eax, %eax
    000004f5: 	callq	__printf_chk@PLT # Offset: 1269
    000004fa: 	movl	iterations(%rip), %ecx
.Ltmp1244:
    00000500: 	addl	$0x1, %ebp
    00000503: 	cmpl	%ecx, %ebp
    00000505: 	jl	.Ltmp1245 # Offset: 1285
.Ltmp1242:
    00000507: 	movq	0x10(%rsp), %rsi
    0000050c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000513: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1299
    00000518: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000051f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000526: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000052d: 	je	.Ltmp1246 # Offset: 1325
.Ltmp1468:
    00000533: 	movq	-0x20(%rax), %rbp
    00000537: 	callq	clock@PLT # Offset: 1335
    0000053c: 	pxor	%xmm0, %xmm0
    00000540: 	movq	%rax, end_time(%rip)
    00000547: 	movq	%rbp, %rdi
    0000054a: 	subq	start_time(%rip), %rax
    00000551: 	cvtsi2sd	%rax, %xmm0
    00000556: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000055e: 	callq	_Z13record_resultdPKc # Offset: 1374
    00000563: 	movq	0x140(%rsp), %rdi
    0000056b: 	cmpq	0x18(%rsp), %rdi
    00000570: 	je	.Ltmp1247 # Offset: 1392
    00000572: 	movq	0x150(%rsp), %rax
    0000057a: 	leaq	0x1(%rax), %rsi
    0000057e: 	callq	_ZdlPvm@PLT # Offset: 1406
.Ltmp1247:
    00000583: 	movq	0x10(%rsp), %rbx
    00000588: 	movq	0x50(%rsp), %rsi
    0000058d: 	leaq	DATAat0x381ff(%rip), %rdx
    00000594: 	movq	%rbx, %rdi
    00000597: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1431
    0000059c: 	movq	%rbx, %rsi
    0000059f: 	movq	%r15, %rdi
    000005a2: 	callq	"_Z14test_constantSIh19custom_negate_twiceIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1442
    000005a7: 	movq	0x140(%rsp), %rdi
    000005af: 	cmpq	0x18(%rsp), %rdi
    000005b4: 	je	.Ltmp1248 # Offset: 1460
    000005b6: 	movq	0x150(%rsp), %rax
    000005be: 	leaq	0x1(%rax), %rsi
    000005c2: 	callq	_ZdlPvm@PLT # Offset: 1474
.Ltmp1248:
    000005c7: 	movq	0x10(%rsp), %rbx
    000005cc: 	movq	0x50(%rsp), %rsi
    000005d1: 	leaq	DATAat0x3820d(%rip), %rdx
    000005d8: 	movq	%rbx, %rdi
    000005db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1499
    000005e0: 	movq	%rbx, %rsi
    000005e3: 	movq	%r15, %rdi
    000005e6: 	callq	"_Z14test_constantSIh17custom_zero_minusIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1510
    000005eb: 	movq	0x140(%rsp), %rdi
    000005f3: 	cmpq	0x18(%rsp), %rdi
    000005f8: 	je	.Ltmp1249 # Offset: 1528
    000005fa: 	movq	0x150(%rsp), %rax
    00000602: 	leaq	0x1(%rax), %rsi
    00000606: 	callq	_ZdlPvm@PLT # Offset: 1542
.Ltmp1249:
    0000060b: 	movq	0x50(%rsp), %rsi
    00000610: 	movq	0x10(%rsp), %rdi
    00000615: 	leaq	DATAat0x38219(%rip), %rdx
    0000061c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1564
    00000621: 	callq	clock@PLT # Offset: 1569
    00000626: 	movl	iterations(%rip), %ecx
    0000062c: 	xorl	%ebp, %ebp
    0000062e: 	leaq	0x20a0(%rsp), %rbx
    00000636: 	movq	%rax, start_time(%rip)
    0000063d: 	leaq	DATAat0x381c8(%rip), %r12
    00000644: 	testl	%ecx, %ecx
    00000646: 	jle	.Ltmp1250 # Offset: 1606
    00000648: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1253:
    00000650: 	movq	%r15, %rax
    00000653: 	pxor	%xmm0, %xmm0
    00000657: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1251:
    00000660: 	paddb	(%rax), %xmm0
    00000664: 	addq	$0x10, %rax
    00000668: 	cmpq	%rbx, %rax
    0000066b: 	jne	.Ltmp1251 # Offset: 1643
    0000066d: 	movdqa	%xmm0, %xmm1
    00000671: 	cvttsd2si	init_value(%rip), %edx
    00000679: 	psrldq	$0x8, %xmm1
    0000067e: 	paddb	%xmm1, %xmm0
    00000682: 	pxor	%xmm1, %xmm1
    00000686: 	psadbw	%xmm1, %xmm0
    0000068a: 	movd	%xmm0, %eax
    0000068e: 	shll	$0x6, %edx
    00000691: 	cmpb	%al, %dl
    00000693: 	je	.Ltmp1252 # Offset: 1683
    00000695: 	movl	current_test(%rip), %edx
    0000069b: 	movq	%r12, %rsi
    0000069e: 	movl	$0x1, %edi
    000006a3: 	xorl	%eax, %eax
    000006a5: 	callq	__printf_chk@PLT # Offset: 1701
    000006aa: 	movl	iterations(%rip), %ecx
.Ltmp1252:
    000006b0: 	addl	$0x1, %ebp
    000006b3: 	cmpl	%ecx, %ebp
    000006b5: 	jl	.Ltmp1253 # Offset: 1717
.Ltmp1250:
    000006b7: 	movq	0x10(%rsp), %rsi
    000006bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000006c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1731
    000006c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006dd: 	je	.Ltmp1254 # Offset: 1757
.Ltmp1467:
    000006e3: 	movq	-0x20(%rax), %rbp
    000006e7: 	callq	clock@PLT # Offset: 1767
    000006ec: 	pxor	%xmm0, %xmm0
    000006f0: 	movq	%rax, end_time(%rip)
    000006f7: 	movq	%rbp, %rdi
    000006fa: 	subq	start_time(%rip), %rax
    00000701: 	cvtsi2sd	%rax, %xmm0
    00000706: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000070e: 	callq	_Z13record_resultdPKc # Offset: 1806
    00000713: 	movq	0x140(%rsp), %rdi
    0000071b: 	cmpq	0x18(%rsp), %rdi
    00000720: 	je	.Ltmp1255 # Offset: 1824
    00000722: 	movq	0x150(%rsp), %rax
    0000072a: 	leaq	0x1(%rax), %rsi
    0000072e: 	callq	_ZdlPvm@PLT # Offset: 1838
.Ltmp1255:
    00000733: 	movq	0x10(%rsp), %rbx
    00000738: 	movq	0x50(%rsp), %rsi
    0000073d: 	leaq	DATAat0x38224(%rip), %rdx
    00000744: 	movq	%rbx, %rdi
    00000747: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1863
    0000074c: 	movq	%rbx, %rsi
    0000074f: 	movq	%r15, %rdi
    00000752: 	callq	"_Z14test_constantSIh19custom_divideby_oneIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1874
    00000757: 	movq	0x140(%rsp), %rdi
    0000075f: 	cmpq	0x18(%rsp), %rdi
    00000764: 	je	.Ltmp1256 # Offset: 1892
    00000766: 	movq	0x150(%rsp), %rax
    0000076e: 	leaq	0x1(%rax), %rsi
    00000772: 	callq	_ZdlPvm@PLT # Offset: 1906
.Ltmp1256:
    00000777: 	movq	0x10(%rsp), %rbx
    0000077c: 	movq	0x50(%rsp), %rsi
    00000781: 	leaq	DATAat0x38233(%rip), %rdx
    00000788: 	movq	%rbx, %rdi
    0000078b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1931
    00000790: 	movq	%rbx, %rsi
    00000793: 	movq	%r15, %rdi
    00000796: 	callq	"_Z14test_constantSIh15custom_and_selfIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1942
    0000079b: 	movq	0x140(%rsp), %rdi
    000007a3: 	cmpq	0x18(%rsp), %rdi
    000007a8: 	je	.Ltmp1257 # Offset: 1960
    000007aa: 	movq	0x150(%rsp), %rax
    000007b2: 	leaq	0x1(%rax), %rsi
    000007b6: 	callq	_ZdlPvm@PLT # Offset: 1974
.Ltmp1257:
    000007bb: 	movq	0x50(%rsp), %rsi
    000007c0: 	movq	0x10(%rsp), %rdi
    000007c5: 	leaq	DATAat0x3823d(%rip), %rdx
    000007cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1996
    000007d1: 	callq	clock@PLT # Offset: 2001
    000007d6: 	movl	iterations(%rip), %ecx
    000007dc: 	xorl	%ebp, %ebp
    000007de: 	leaq	0x20a0(%rsp), %rbx
    000007e6: 	movq	%rax, start_time(%rip)
    000007ed: 	leaq	DATAat0x381c8(%rip), %r12
    000007f4: 	testl	%ecx, %ecx
    000007f6: 	jle	.Ltmp1258 # Offset: 2038
    000007f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1261:
    00000800: 	movq	%r15, %rax
    00000803: 	pxor	%xmm0, %xmm0
    00000807: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1259:
    00000810: 	paddb	(%rax), %xmm0
    00000814: 	addq	$0x10, %rax
    00000818: 	cmpq	%rax, %rbx
    0000081b: 	jne	.Ltmp1259 # Offset: 2075
    0000081d: 	movdqa	%xmm0, %xmm1
    00000821: 	cvttsd2si	init_value(%rip), %edx
    00000829: 	psrldq	$0x8, %xmm1
    0000082e: 	paddb	%xmm1, %xmm0
    00000832: 	pxor	%xmm1, %xmm1
    00000836: 	psadbw	%xmm1, %xmm0
    0000083a: 	movd	%xmm0, %eax
    0000083e: 	shll	$0x6, %edx
    00000841: 	cmpb	%al, %dl
    00000843: 	je	.Ltmp1260 # Offset: 2115
    00000845: 	movl	current_test(%rip), %edx
    0000084b: 	movq	%r12, %rsi
    0000084e: 	movl	$0x1, %edi
    00000853: 	xorl	%eax, %eax
    00000855: 	callq	__printf_chk@PLT # Offset: 2133
    0000085a: 	movl	iterations(%rip), %ecx
.Ltmp1260:
    00000860: 	addl	$0x1, %ebp
    00000863: 	cmpl	%ecx, %ebp
    00000865: 	jl	.Ltmp1261 # Offset: 2149
.Ltmp1258:
    00000867: 	movq	0x10(%rsp), %rsi
    0000086c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000873: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2163
    00000878: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000087f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000886: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000088d: 	je	.Ltmp1262 # Offset: 2189
.Ltmp1466:
    00000893: 	movq	-0x20(%rax), %rbp
    00000897: 	callq	clock@PLT # Offset: 2199
    0000089c: 	pxor	%xmm0, %xmm0
    000008a0: 	movq	%rax, end_time(%rip)
    000008a7: 	movq	%rbp, %rdi
    000008aa: 	subq	start_time(%rip), %rax
    000008b1: 	cvtsi2sd	%rax, %xmm0
    000008b6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000008be: 	callq	_Z13record_resultdPKc # Offset: 2238
    000008c3: 	movq	0x140(%rsp), %rdi
    000008cb: 	cmpq	0x18(%rsp), %rdi
    000008d0: 	je	.Ltmp1263 # Offset: 2256
    000008d2: 	movq	0x150(%rsp), %rax
    000008da: 	leaq	0x1(%rax), %rsi
    000008de: 	callq	_ZdlPvm@PLT # Offset: 2270
.Ltmp1263:
    000008e3: 	movq	0x50(%rsp), %rsi
    000008e8: 	movq	0x10(%rsp), %rdi
    000008ed: 	leaq	DATAat0x38246(%rip), %rdx
    000008f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2292
    000008f9: 	callq	clock@PLT # Offset: 2297
    000008fe: 	movl	iterations(%rip), %ecx
    00000904: 	xorl	%ebp, %ebp
    00000906: 	leaq	0x20a0(%rsp), %rbx
    0000090e: 	movq	%rax, start_time(%rip)
    00000915: 	leaq	DATAat0x381c8(%rip), %r12
    0000091c: 	testl	%ecx, %ecx
    0000091e: 	jle	.Ltmp1264 # Offset: 2334
.Ltmp1267:
    00000920: 	movq	%r15, %rax
    00000923: 	pxor	%xmm0, %xmm0
    00000927: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1265:
    00000930: 	paddb	(%rax), %xmm0
    00000934: 	addq	$0x10, %rax
    00000938: 	cmpq	%rbx, %rax
    0000093b: 	jne	.Ltmp1265 # Offset: 2363
    0000093d: 	movdqa	%xmm0, %xmm1
    00000941: 	cvttsd2si	init_value(%rip), %edx
    00000949: 	psrldq	$0x8, %xmm1
    0000094e: 	paddb	%xmm1, %xmm0
    00000952: 	pxor	%xmm1, %xmm1
    00000956: 	psadbw	%xmm1, %xmm0
    0000095a: 	movd	%xmm0, %eax
    0000095e: 	shll	$0x6, %edx
    00000961: 	cmpb	%al, %dl
    00000963: 	je	.Ltmp1266 # Offset: 2403
    00000965: 	movl	current_test(%rip), %edx
    0000096b: 	movq	%r12, %rsi
    0000096e: 	movl	$0x1, %edi
    00000973: 	xorl	%eax, %eax
    00000975: 	callq	__printf_chk@PLT # Offset: 2421
    0000097a: 	movl	iterations(%rip), %ecx
.Ltmp1266:
    00000980: 	addl	$0x1, %ebp
    00000983: 	cmpl	%ecx, %ebp
    00000985: 	jl	.Ltmp1267 # Offset: 2437
.Ltmp1264:
    00000987: 	movq	0x10(%rsp), %rsi
    0000098c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000993: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2451
    00000998: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000099f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009ad: 	je	.Ltmp1268 # Offset: 2477
.Ltmp1465:
    000009b3: 	movq	-0x20(%rax), %rbp
    000009b7: 	callq	clock@PLT # Offset: 2487
    000009bc: 	pxor	%xmm0, %xmm0
    000009c0: 	movq	%rax, end_time(%rip)
    000009c7: 	movq	%rbp, %rdi
    000009ca: 	subq	start_time(%rip), %rax
    000009d1: 	cvtsi2sd	%rax, %xmm0
    000009d6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000009de: 	callq	_Z13record_resultdPKc # Offset: 2526
    000009e3: 	movq	0x140(%rsp), %rdi
    000009eb: 	cmpq	0x18(%rsp), %rdi
    000009f0: 	je	.Ltmp1269 # Offset: 2544
    000009f2: 	movq	0x150(%rsp), %rax
    000009fa: 	leaq	0x1(%rax), %rsi
    000009fe: 	callq	_ZdlPvm@PLT # Offset: 2558
.Ltmp1269:
    00000a03: 	movq	0x50(%rsp), %rsi
    00000a08: 	movq	0x10(%rsp), %rdi
    00000a0d: 	leaq	DATAat0x3824f(%rip), %rdx
    00000a14: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2580
    00000a19: 	callq	clock@PLT # Offset: 2585
    00000a1e: 	movl	iterations(%rip), %ecx
    00000a24: 	xorl	%ebp, %ebp
    00000a26: 	leaq	0x20a0(%rsp), %rbx
    00000a2e: 	movq	%rax, start_time(%rip)
    00000a35: 	leaq	DATAat0x381c8(%rip), %r12
    00000a3c: 	testl	%ecx, %ecx
    00000a3e: 	jle	.Ltmp1270 # Offset: 2622
.Ltmp1273:
    00000a40: 	movq	%r15, %rax
    00000a43: 	pxor	%xmm0, %xmm0
    00000a47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1271:
    00000a50: 	paddb	(%rax), %xmm0
    00000a54: 	addq	$0x10, %rax
    00000a58: 	cmpq	%rax, %rbx
    00000a5b: 	jne	.Ltmp1271 # Offset: 2651
    00000a5d: 	movdqa	%xmm0, %xmm1
    00000a61: 	cvttsd2si	init_value(%rip), %edx
    00000a69: 	psrldq	$0x8, %xmm1
    00000a6e: 	paddb	%xmm1, %xmm0
    00000a72: 	pxor	%xmm1, %xmm1
    00000a76: 	psadbw	%xmm1, %xmm0
    00000a7a: 	movd	%xmm0, %eax
    00000a7e: 	shll	$0x6, %edx
    00000a81: 	cmpb	%al, %dl
    00000a83: 	je	.Ltmp1272 # Offset: 2691
    00000a85: 	movl	current_test(%rip), %edx
    00000a8b: 	movq	%r12, %rsi
    00000a8e: 	movl	$0x1, %edi
    00000a93: 	xorl	%eax, %eax
    00000a95: 	callq	__printf_chk@PLT # Offset: 2709
    00000a9a: 	movl	iterations(%rip), %ecx
.Ltmp1272:
    00000aa0: 	addl	$0x1, %ebp
    00000aa3: 	cmpl	%ecx, %ebp
    00000aa5: 	jl	.Ltmp1273 # Offset: 2725
.Ltmp1270:
    00000aa7: 	movq	0x10(%rsp), %rsi
    00000aac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ab3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2739
    00000ab8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000abf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ac6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000acd: 	je	.Ltmp1274 # Offset: 2765
.Ltmp1464:
    00000ad3: 	movq	-0x20(%rax), %rbp
    00000ad7: 	callq	clock@PLT # Offset: 2775
    00000adc: 	pxor	%xmm0, %xmm0
    00000ae0: 	movq	%rax, end_time(%rip)
    00000ae7: 	movq	%rbp, %rdi
    00000aea: 	subq	start_time(%rip), %rax
    00000af1: 	cvtsi2sd	%rax, %xmm0
    00000af6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000afe: 	callq	_Z13record_resultdPKc # Offset: 2814
    00000b03: 	movq	0x140(%rsp), %rdi
    00000b0b: 	cmpq	0x18(%rsp), %rdi
    00000b10: 	je	.Ltmp1275 # Offset: 2832
    00000b12: 	movq	0x150(%rsp), %rax
    00000b1a: 	leaq	0x1(%rax), %rsi
    00000b1e: 	callq	_ZdlPvm@PLT # Offset: 2846
.Ltmp1275:
    00000b23: 	movq	0x10(%rsp), %rbx
    00000b28: 	movq	0x50(%rsp), %rsi
    00000b2d: 	leaq	DATAat0x38259(%rip), %rdx
    00000b34: 	movq	%rbx, %rdi
    00000b37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2871
    00000b3c: 	movq	%rbx, %rsi
    00000b3f: 	movq	%r15, %rdi
    00000b42: 	callq	"_Z14test_constantSIh18custom_andnot_zeroIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 2882
    00000b47: 	movq	0x140(%rsp), %rdi
    00000b4f: 	cmpq	0x18(%rsp), %rdi
    00000b54: 	je	.Ltmp1276 # Offset: 2900
    00000b56: 	movq	0x150(%rsp), %rax
    00000b5e: 	leaq	0x1(%rax), %rsi
    00000b62: 	callq	_ZdlPvm@PLT # Offset: 2914
.Ltmp1276:
    00000b67: 	movq	0x50(%rsp), %rsi
    00000b6c: 	movq	0x10(%rsp), %rdi
    00000b71: 	leaq	DATAat0x38266(%rip), %rdx
    00000b78: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2936
    00000b7d: 	callq	clock@PLT # Offset: 2941
    00000b82: 	movl	iterations(%rip), %ecx
    00000b88: 	xorl	%ebp, %ebp
    00000b8a: 	leaq	0x20a0(%rsp), %rbx
    00000b92: 	movq	%rax, start_time(%rip)
    00000b99: 	leaq	DATAat0x381c8(%rip), %r12
    00000ba0: 	testl	%ecx, %ecx
    00000ba2: 	jle	.Ltmp1277 # Offset: 2978
    00000ba4: 	nopl	(%rax) # Size: 4
.Ltmp1280:
    00000ba8: 	movq	%r15, %rax
    00000bab: 	pxor	%xmm0, %xmm0
    00000baf: 	nop # Size: 1
.Ltmp1278:
    00000bb0: 	paddb	(%rax), %xmm0
    00000bb4: 	addq	$0x10, %rax
    00000bb8: 	cmpq	%rbx, %rax
    00000bbb: 	jne	.Ltmp1278 # Offset: 3003
    00000bbd: 	movdqa	%xmm0, %xmm1
    00000bc1: 	cvttsd2si	init_value(%rip), %edx
    00000bc9: 	psrldq	$0x8, %xmm1
    00000bce: 	paddb	%xmm1, %xmm0
    00000bd2: 	pxor	%xmm1, %xmm1
    00000bd6: 	psadbw	%xmm1, %xmm0
    00000bda: 	movd	%xmm0, %eax
    00000bde: 	shll	$0x6, %edx
    00000be1: 	cmpb	%al, %dl
    00000be3: 	je	.Ltmp1279 # Offset: 3043
    00000be5: 	movl	current_test(%rip), %edx
    00000beb: 	movq	%r12, %rsi
    00000bee: 	movl	$0x1, %edi
    00000bf3: 	xorl	%eax, %eax
    00000bf5: 	callq	__printf_chk@PLT # Offset: 3061
    00000bfa: 	movl	iterations(%rip), %ecx
.Ltmp1279:
    00000c00: 	addl	$0x1, %ebp
    00000c03: 	cmpl	%ecx, %ebp
    00000c05: 	jl	.Ltmp1280 # Offset: 3077
.Ltmp1277:
    00000c07: 	movq	0x10(%rsp), %rsi
    00000c0c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c13: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3091
    00000c18: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c1f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c26: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c2d: 	je	.Ltmp1281 # Offset: 3117
.Ltmp1463:
    00000c33: 	movq	-0x20(%rax), %rbp
    00000c37: 	callq	clock@PLT # Offset: 3127
    00000c3c: 	pxor	%xmm0, %xmm0
    00000c40: 	movq	%rax, end_time(%rip)
    00000c47: 	movq	%rbp, %rdi
    00000c4a: 	subq	start_time(%rip), %rax
    00000c51: 	cvtsi2sd	%rax, %xmm0
    00000c56: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c5e: 	callq	_Z13record_resultdPKc # Offset: 3166
    00000c63: 	movq	0x140(%rsp), %rdi
    00000c6b: 	cmpq	0x18(%rsp), %rdi
    00000c70: 	je	.Ltmp1282 # Offset: 3184
    00000c72: 	movq	0x150(%rsp), %rax
    00000c7a: 	leaq	0x1(%rax), %rsi
    00000c7e: 	callq	_ZdlPvm@PLT # Offset: 3198
.Ltmp1282:
    00000c83: 	movq	0x50(%rsp), %rbx
    00000c88: 	leaq	0xe0(%rsp), %rdi
    00000c90: 	leaq	DATAat0x38275(%rip), %rdx
    00000c97: 	movq	%rbx, %rsi
    00000c9a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3226
    00000c9f: 	movl	iterations(%rip), %esi
    00000ca5: 	movq	0xe0(%rsp), %rdi
    00000cad: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3245
    00000cb2: 	movq	%rbx, %rsi
    00000cb5: 	movq	0x10(%rsp), %rbx
    00000cba: 	leaq	DATAat0x381e2(%rip), %rdx
    00000cc1: 	movq	%rbx, %rdi
    00000cc4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3268
    00000cc9: 	callq	clock@PLT # Offset: 3273
    00000cce: 	movq	%rbx, %rsi
    00000cd1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000cd8: 	movq	%rax, start_time(%rip)
    00000cdf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3295
    00000ce4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ceb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cf2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cf9: 	je	.Ltmp1283 # Offset: 3321
.Ltmp1462:
    00000cff: 	movq	-0x20(%rax), %rbp
    00000d03: 	callq	clock@PLT # Offset: 3331
    00000d08: 	pxor	%xmm0, %xmm0
    00000d0c: 	movq	%rax, end_time(%rip)
    00000d13: 	movq	%rbp, %rdi
    00000d16: 	subq	start_time(%rip), %rax
    00000d1d: 	cvtsi2sd	%rax, %xmm0
    00000d22: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000d2a: 	callq	_Z13record_resultdPKc # Offset: 3370
    00000d2f: 	movq	0x140(%rsp), %rdi
    00000d37: 	cmpq	0x18(%rsp), %rdi
    00000d3c: 	je	.Ltmp1284 # Offset: 3388
    00000d3e: 	movq	0x150(%rsp), %rax
    00000d46: 	leaq	0x1(%rax), %rsi
    00000d4a: 	callq	_ZdlPvm@PLT # Offset: 3402
.Ltmp1284:
    00000d4f: 	movq	0x10(%rsp), %rbx
    00000d54: 	movq	0x50(%rsp), %rsi
    00000d59: 	leaq	DATAat0x3828f(%rip), %rdx
    00000d60: 	movq	%rbx, %rdi
    00000d63: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3427
    00000d68: 	callq	clock@PLT # Offset: 3432
    00000d6d: 	movq	%rbx, %rsi
    00000d70: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d77: 	movq	%rax, start_time(%rip)
    00000d7e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3454
    00000d83: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d8a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d91: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d98: 	je	.Ltmp1285 # Offset: 3480
.Ltmp1461:
    00000d9e: 	movq	-0x20(%rax), %rbp
    00000da2: 	callq	clock@PLT # Offset: 3490
    00000da7: 	pxor	%xmm0, %xmm0
    00000dab: 	movq	%rax, end_time(%rip)
    00000db2: 	movq	%rbp, %rdi
    00000db5: 	subq	start_time(%rip), %rax
    00000dbc: 	cvtsi2sd	%rax, %xmm0
    00000dc1: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000dc9: 	callq	_Z13record_resultdPKc # Offset: 3529
    00000dce: 	movq	0x140(%rsp), %rdi
    00000dd6: 	cmpq	0x18(%rsp), %rdi
    00000ddb: 	je	.Ltmp1286 # Offset: 3547
    00000ddd: 	movq	0x150(%rsp), %rax
    00000de5: 	leaq	0x1(%rax), %rsi
    00000de9: 	callq	_ZdlPvm@PLT # Offset: 3561
.Ltmp1286:
    00000dee: 	movq	0x10(%rsp), %rbx
    00000df3: 	movq	0x50(%rsp), %rsi
    00000df8: 	leaq	DATAat0x3829b(%rip), %rdx
    00000dff: 	movq	%rbx, %rdi
    00000e02: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3586
    00000e07: 	callq	clock@PLT # Offset: 3591
    00000e0c: 	movq	%rbx, %rsi
    00000e0f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e16: 	movq	%rax, start_time(%rip)
    00000e1d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3613
    00000e22: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e29: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e30: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e37: 	je	.Ltmp1287 # Offset: 3639
.Ltmp1460:
    00000e3d: 	movq	-0x20(%rax), %rbp
    00000e41: 	callq	clock@PLT # Offset: 3649
    00000e46: 	pxor	%xmm0, %xmm0
    00000e4a: 	movq	%rax, end_time(%rip)
    00000e51: 	movq	%rbp, %rdi
    00000e54: 	subq	start_time(%rip), %rax
    00000e5b: 	cvtsi2sd	%rax, %xmm0
    00000e60: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e68: 	callq	_Z13record_resultdPKc # Offset: 3688
    00000e6d: 	movq	0x140(%rsp), %rdi
    00000e75: 	cmpq	0x18(%rsp), %rdi
    00000e7a: 	je	.Ltmp1288 # Offset: 3706
    00000e7c: 	movq	0x150(%rsp), %rax
    00000e84: 	leaq	0x1(%rax), %rsi
    00000e88: 	callq	_ZdlPvm@PLT # Offset: 3720
.Ltmp1288:
    00000e8d: 	movq	0x10(%rsp), %rbx
    00000e92: 	movq	0x50(%rsp), %rsi
    00000e97: 	leaq	DATAat0x382aa(%rip), %rdx
    00000e9e: 	movq	%rbx, %rdi
    00000ea1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3745
    00000ea6: 	callq	clock@PLT # Offset: 3750
    00000eab: 	movq	%rbx, %rsi
    00000eae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000eb5: 	movq	%rax, start_time(%rip)
    00000ebc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3772
    00000ec1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ec8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ecf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ed6: 	je	.Ltmp1289 # Offset: 3798
.Ltmp1459:
    00000edc: 	movq	-0x20(%rax), %rbp
    00000ee0: 	callq	clock@PLT # Offset: 3808
    00000ee5: 	pxor	%xmm0, %xmm0
    00000ee9: 	movq	%rax, end_time(%rip)
    00000ef0: 	movq	%rbp, %rdi
    00000ef3: 	subq	start_time(%rip), %rax
    00000efa: 	cvtsi2sd	%rax, %xmm0
    00000eff: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f07: 	callq	_Z13record_resultdPKc # Offset: 3847
    00000f0c: 	movq	0x140(%rsp), %rdi
    00000f14: 	cmpq	0x18(%rsp), %rdi
    00000f19: 	je	.Ltmp1290 # Offset: 3865
    00000f1b: 	movq	0x150(%rsp), %rax
    00000f23: 	leaq	0x1(%rax), %rsi
    00000f27: 	callq	_ZdlPvm@PLT # Offset: 3879
.Ltmp1290:
    00000f2c: 	movq	0x10(%rsp), %rbx
    00000f31: 	movq	0x50(%rsp), %rsi
    00000f36: 	leaq	DATAat0x382f3(%rip), %rdx
    00000f3d: 	movq	%rbx, %rdi
    00000f40: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3904
    00000f45: 	callq	clock@PLT # Offset: 3909
    00000f4a: 	movq	%rbx, %rsi
    00000f4d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f54: 	movq	%rax, start_time(%rip)
    00000f5b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3931
    00000f60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f67: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f75: 	je	.Ltmp1291 # Offset: 3957
.Ltmp1458:
    00000f7b: 	movq	-0x20(%rax), %rbp
    00000f7f: 	callq	clock@PLT # Offset: 3967
    00000f84: 	pxor	%xmm0, %xmm0
    00000f88: 	movq	%rax, end_time(%rip)
    00000f8f: 	movq	%rbp, %rdi
    00000f92: 	subq	start_time(%rip), %rax
    00000f99: 	cvtsi2sd	%rax, %xmm0
    00000f9e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000fa6: 	callq	_Z13record_resultdPKc # Offset: 4006
    00000fab: 	movq	0x140(%rsp), %rdi
    00000fb3: 	cmpq	0x18(%rsp), %rdi
    00000fb8: 	je	.Ltmp1292 # Offset: 4024
    00000fba: 	movq	0x150(%rsp), %rax
    00000fc2: 	leaq	0x1(%rax), %rsi
    00000fc6: 	callq	_ZdlPvm@PLT # Offset: 4038
.Ltmp1292:
    00000fcb: 	movq	0x10(%rsp), %rbx
    00000fd0: 	movq	0x50(%rsp), %rsi
    00000fd5: 	leaq	DATAat0x382b3(%rip), %rdx
    00000fdc: 	movq	%rbx, %rdi
    00000fdf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4063
    00000fe4: 	callq	clock@PLT # Offset: 4068
    00000fe9: 	movq	%rbx, %rsi
    00000fec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ff3: 	movq	%rax, start_time(%rip)
    00000ffa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4090
    00000fff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001006: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000100d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001014: 	je	.Ltmp1293 # Offset: 4116
.Ltmp1457:
    0000101a: 	movq	-0x20(%rax), %rbp
    0000101e: 	callq	clock@PLT # Offset: 4126
    00001023: 	pxor	%xmm0, %xmm0
    00001027: 	movq	%rax, end_time(%rip)
    0000102e: 	movq	%rbp, %rdi
    00001031: 	subq	start_time(%rip), %rax
    00001038: 	cvtsi2sd	%rax, %xmm0
    0000103d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001045: 	callq	_Z13record_resultdPKc # Offset: 4165
    0000104a: 	movq	0x140(%rsp), %rdi
    00001052: 	cmpq	0x18(%rsp), %rdi
    00001057: 	je	.Ltmp1294 # Offset: 4183
    00001059: 	movq	0x150(%rsp), %rax
    00001061: 	leaq	0x1(%rax), %rsi
    00001065: 	callq	_ZdlPvm@PLT # Offset: 4197
.Ltmp1294:
    0000106a: 	movq	0x10(%rsp), %rbx
    0000106f: 	movq	0x50(%rsp), %rsi
    00001074: 	leaq	DATAat0x382c3(%rip), %rdx
    0000107b: 	movq	%rbx, %rdi
    0000107e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4222
    00001083: 	callq	clock@PLT # Offset: 4227
    00001088: 	movq	%rbx, %rsi
    0000108b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001092: 	movq	%rax, start_time(%rip)
    00001099: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4249
    0000109e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010b3: 	je	.Ltmp1295 # Offset: 4275
.Ltmp1456:
    000010b9: 	movq	-0x20(%rax), %rbp
    000010bd: 	callq	clock@PLT # Offset: 4285
    000010c2: 	pxor	%xmm0, %xmm0
    000010c6: 	movq	%rax, end_time(%rip)
    000010cd: 	movq	%rbp, %rdi
    000010d0: 	subq	start_time(%rip), %rax
    000010d7: 	cvtsi2sd	%rax, %xmm0
    000010dc: 	divsd	DATAat0x385e0(%rip), %xmm0
    000010e4: 	callq	_Z13record_resultdPKc # Offset: 4324
    000010e9: 	movq	0x140(%rsp), %rdi
    000010f1: 	cmpq	0x18(%rsp), %rdi
    000010f6: 	je	.Ltmp1296 # Offset: 4342
    000010f8: 	movq	0x150(%rsp), %rax
    00001100: 	leaq	0x1(%rax), %rsi
    00001104: 	callq	_ZdlPvm@PLT # Offset: 4356
.Ltmp1296:
    00001109: 	movq	0x10(%rsp), %rbx
    0000110e: 	movq	0x50(%rsp), %rsi
    00001113: 	leaq	DATAat0x382d6(%rip), %rdx
    0000111a: 	movq	%rbx, %rdi
    0000111d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4381
    00001122: 	callq	clock@PLT # Offset: 4386
    00001127: 	movq	%rbx, %rsi
    0000112a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001131: 	movq	%rax, start_time(%rip)
    00001138: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4408
    0000113d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001144: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000114b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001152: 	je	.Ltmp1297 # Offset: 4434
.Ltmp1455:
    00001158: 	movq	-0x20(%rax), %rbp
    0000115c: 	callq	clock@PLT # Offset: 4444
    00001161: 	pxor	%xmm0, %xmm0
    00001165: 	movq	%rax, end_time(%rip)
    0000116c: 	movq	%rbp, %rdi
    0000116f: 	subq	start_time(%rip), %rax
    00001176: 	cvtsi2sd	%rax, %xmm0
    0000117b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001183: 	callq	_Z13record_resultdPKc # Offset: 4483
    00001188: 	movq	0x140(%rsp), %rdi
    00001190: 	cmpq	0x18(%rsp), %rdi
    00001195: 	je	.Ltmp1298 # Offset: 4501
    00001197: 	movq	0x150(%rsp), %rax
    0000119f: 	leaq	0x1(%rax), %rsi
    000011a3: 	callq	_ZdlPvm@PLT # Offset: 4515
.Ltmp1298:
    000011a8: 	movq	0x10(%rsp), %rbx
    000011ad: 	movq	0x50(%rsp), %rsi
    000011b2: 	leaq	DATAat0x382e6(%rip), %rdx
    000011b9: 	movq	%rbx, %rdi
    000011bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4540
    000011c1: 	callq	clock@PLT # Offset: 4545
    000011c6: 	movq	%rbx, %rsi
    000011c9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011d0: 	movq	%rax, start_time(%rip)
    000011d7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4567
    000011dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011e3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f1: 	je	.Ltmp1299 # Offset: 4593
.Ltmp1454:
    000011f7: 	movq	-0x20(%rax), %rbp
    000011fb: 	callq	clock@PLT # Offset: 4603
    00001200: 	pxor	%xmm0, %xmm0
    00001204: 	movq	%rax, end_time(%rip)
    0000120b: 	movq	%rbp, %rdi
    0000120e: 	subq	start_time(%rip), %rax
    00001215: 	cvtsi2sd	%rax, %xmm0
    0000121a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001222: 	callq	_Z13record_resultdPKc # Offset: 4642
    00001227: 	movq	0x140(%rsp), %rdi
    0000122f: 	cmpq	0x18(%rsp), %rdi
    00001234: 	je	.Ltmp1300 # Offset: 4660
    00001236: 	movq	0x150(%rsp), %rax
    0000123e: 	leaq	0x1(%rax), %rsi
    00001242: 	callq	_ZdlPvm@PLT # Offset: 4674
.Ltmp1300:
    00001247: 	movq	0x10(%rsp), %rbx
    0000124c: 	movq	0x50(%rsp), %rsi
    00001251: 	leaq	DATAat0x382ff(%rip), %rdx
    00001258: 	movq	%rbx, %rdi
    0000125b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4699
    00001260: 	callq	clock@PLT # Offset: 4704
    00001265: 	movq	%rbx, %rsi
    00001268: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000126f: 	movq	%rax, start_time(%rip)
    00001276: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4726
    0000127b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001282: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001290: 	je	.Ltmp1301 # Offset: 4752
.Ltmp1453:
    00001296: 	movq	-0x20(%rax), %rbp
    0000129a: 	callq	clock@PLT # Offset: 4762
    0000129f: 	pxor	%xmm0, %xmm0
    000012a3: 	movq	%rax, end_time(%rip)
    000012aa: 	movq	%rbp, %rdi
    000012ad: 	subq	start_time(%rip), %rax
    000012b4: 	cvtsi2sd	%rax, %xmm0
    000012b9: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012c1: 	callq	_Z13record_resultdPKc # Offset: 4801
    000012c6: 	movq	0x140(%rsp), %rdi
    000012ce: 	cmpq	0x18(%rsp), %rdi
    000012d3: 	je	.Ltmp1302 # Offset: 4819
    000012d5: 	movq	0x150(%rsp), %rax
    000012dd: 	leaq	0x1(%rax), %rsi
    000012e1: 	callq	_ZdlPvm@PLT # Offset: 4833
.Ltmp1302:
    000012e6: 	movq	0x10(%rsp), %rbx
    000012eb: 	movq	0x50(%rsp), %rsi
    000012f0: 	leaq	DATAat0x38315(%rip), %rdx
    000012f7: 	movq	%rbx, %rdi
    000012fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4858
    000012ff: 	callq	clock@PLT # Offset: 4863
    00001304: 	movq	%rbx, %rsi
    00001307: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000130e: 	movq	%rax, start_time(%rip)
    00001315: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4885
    0000131a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001321: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001328: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000132f: 	je	.Ltmp1303 # Offset: 4911
.Ltmp1452:
    00001335: 	movq	-0x20(%rax), %rbp
    00001339: 	callq	clock@PLT # Offset: 4921
    0000133e: 	pxor	%xmm0, %xmm0
    00001342: 	movq	%rax, end_time(%rip)
    00001349: 	movq	%rbp, %rdi
    0000134c: 	subq	start_time(%rip), %rax
    00001353: 	cvtsi2sd	%rax, %xmm0
    00001358: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001360: 	callq	_Z13record_resultdPKc # Offset: 4960
    00001365: 	movq	0x140(%rsp), %rdi
    0000136d: 	cmpq	0x18(%rsp), %rdi
    00001372: 	je	.Ltmp1304 # Offset: 4978
    00001374: 	movq	0x150(%rsp), %rax
    0000137c: 	leaq	0x1(%rax), %rsi
    00001380: 	callq	_ZdlPvm@PLT # Offset: 4992
.Ltmp1304:
    00001385: 	movq	0x10(%rsp), %rbx
    0000138a: 	movq	0x50(%rsp), %rsi
    0000138f: 	leaq	DATAat0x3831f(%rip), %rdx
    00001396: 	movq	%rbx, %rdi
    00001399: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5017
    0000139e: 	callq	clock@PLT # Offset: 5022
    000013a3: 	movq	%rbx, %rsi
    000013a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013ad: 	movq	%rax, start_time(%rip)
    000013b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5044
    000013b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013c0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ce: 	je	.Ltmp1305 # Offset: 5070
.Ltmp1451:
    000013d4: 	movq	-0x20(%rax), %rbp
    000013d8: 	callq	clock@PLT # Offset: 5080
    000013dd: 	pxor	%xmm0, %xmm0
    000013e1: 	movq	%rax, end_time(%rip)
    000013e8: 	movq	%rbp, %rdi
    000013eb: 	subq	start_time(%rip), %rax
    000013f2: 	cvtsi2sd	%rax, %xmm0
    000013f7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013ff: 	callq	_Z13record_resultdPKc # Offset: 5119
    00001404: 	movq	0x140(%rsp), %rdi
    0000140c: 	cmpq	0x18(%rsp), %rdi
    00001411: 	je	.Ltmp1306 # Offset: 5137
    00001413: 	movq	0x150(%rsp), %rax
    0000141b: 	leaq	0x1(%rax), %rsi
    0000141f: 	callq	_ZdlPvm@PLT # Offset: 5151
.Ltmp1306:
    00001424: 	movq	0x10(%rsp), %rbx
    00001429: 	movq	0x50(%rsp), %rsi
    0000142e: 	leaq	DATAat0x38329(%rip), %rdx
    00001435: 	movq	%rbx, %rdi
    00001438: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5176
    0000143d: 	callq	clock@PLT # Offset: 5181
    00001442: 	movq	%rbx, %rsi
    00001445: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000144c: 	movq	%rax, start_time(%rip)
    00001453: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5203
    00001458: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000145f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001466: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000146d: 	je	.Ltmp1307 # Offset: 5229
.Ltmp1450:
    00001473: 	movq	-0x20(%rax), %rbp
    00001477: 	callq	clock@PLT # Offset: 5239
    0000147c: 	pxor	%xmm0, %xmm0
    00001480: 	movq	%rax, end_time(%rip)
    00001487: 	movq	%rbp, %rdi
    0000148a: 	subq	start_time(%rip), %rax
    00001491: 	cvtsi2sd	%rax, %xmm0
    00001496: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000149e: 	callq	_Z13record_resultdPKc # Offset: 5278
    000014a3: 	movq	0x140(%rsp), %rdi
    000014ab: 	cmpq	0x18(%rsp), %rdi
    000014b0: 	je	.Ltmp1308 # Offset: 5296
    000014b2: 	movq	0x150(%rsp), %rax
    000014ba: 	leaq	0x1(%rax), %rsi
    000014be: 	callq	_ZdlPvm@PLT # Offset: 5310
.Ltmp1308:
    000014c3: 	movq	0x10(%rsp), %rbx
    000014c8: 	movq	0x50(%rsp), %rsi
    000014cd: 	leaq	DATAat0x38339(%rip), %rdx
    000014d4: 	movq	%rbx, %rdi
    000014d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5335
    000014dc: 	callq	clock@PLT # Offset: 5340
    000014e1: 	movq	%rbx, %rsi
    000014e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014eb: 	movq	%rax, start_time(%rip)
    000014f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5362
    000014f7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014fe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001505: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150c: 	je	.Ltmp1309 # Offset: 5388
.Ltmp1449:
    00001512: 	movq	-0x20(%rax), %rbp
    00001516: 	callq	clock@PLT # Offset: 5398
    0000151b: 	pxor	%xmm0, %xmm0
    0000151f: 	movq	%rax, end_time(%rip)
    00001526: 	movq	%rbp, %rdi
    00001529: 	subq	start_time(%rip), %rax
    00001530: 	cvtsi2sd	%rax, %xmm0
    00001535: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000153d: 	callq	_Z13record_resultdPKc # Offset: 5437
    00001542: 	movq	0x140(%rsp), %rdi
    0000154a: 	cmpq	0x18(%rsp), %rdi
    0000154f: 	je	.Ltmp1310 # Offset: 5455
    00001551: 	movq	0x150(%rsp), %rax
    00001559: 	leaq	0x1(%rax), %rsi
    0000155d: 	callq	_ZdlPvm@PLT # Offset: 5469
.Ltmp1310:
    00001562: 	movq	0x10(%rsp), %rbx
    00001567: 	movq	0x50(%rsp), %rsi
    0000156c: 	leaq	DATAat0x38351(%rip), %rdx
    00001573: 	movq	%rbx, %rdi
    00001576: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5494
    0000157b: 	callq	clock@PLT # Offset: 5499
    00001580: 	movq	%rbx, %rsi
    00001583: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000158a: 	movq	%rax, start_time(%rip)
    00001591: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5521
    00001596: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000159d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015ab: 	je	.Ltmp1311 # Offset: 5547
.Ltmp1448:
    000015b1: 	movq	-0x20(%rax), %rbp
    000015b5: 	callq	clock@PLT # Offset: 5557
    000015ba: 	pxor	%xmm0, %xmm0
    000015be: 	movq	%rax, end_time(%rip)
    000015c5: 	movq	%rbp, %rdi
    000015c8: 	subq	start_time(%rip), %rax
    000015cf: 	cvtsi2sd	%rax, %xmm0
    000015d4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015dc: 	callq	_Z13record_resultdPKc # Offset: 5596
    000015e1: 	movq	0x140(%rsp), %rdi
    000015e9: 	cmpq	0x18(%rsp), %rdi
    000015ee: 	je	.Ltmp1312 # Offset: 5614
    000015f0: 	movq	0x150(%rsp), %rax
    000015f8: 	leaq	0x1(%rax), %rsi
    000015fc: 	callq	_ZdlPvm@PLT # Offset: 5628
.Ltmp1312:
    00001601: 	movq	0x10(%rsp), %rbx
    00001606: 	movq	0x50(%rsp), %rsi
    0000160b: 	leaq	DATAat0x38369(%rip), %rdx
    00001612: 	movq	%rbx, %rdi
    00001615: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5653
    0000161a: 	callq	clock@PLT # Offset: 5658
    0000161f: 	movq	%rbx, %rsi
    00001622: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001629: 	movq	%rax, start_time(%rip)
    00001630: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5680
    00001635: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000163c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001643: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000164a: 	je	.Ltmp1313 # Offset: 5706
.Ltmp1447:
    00001650: 	movq	-0x20(%rax), %rbp
    00001654: 	callq	clock@PLT # Offset: 5716
    00001659: 	pxor	%xmm0, %xmm0
    0000165d: 	movq	%rax, end_time(%rip)
    00001664: 	movq	%rbp, %rdi
    00001667: 	subq	start_time(%rip), %rax
    0000166e: 	cvtsi2sd	%rax, %xmm0
    00001673: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000167b: 	callq	_Z13record_resultdPKc # Offset: 5755
    00001680: 	movq	0x140(%rsp), %rdi
    00001688: 	cmpq	0x18(%rsp), %rdi
    0000168d: 	je	.Ltmp1314 # Offset: 5773
    0000168f: 	movq	0x150(%rsp), %rax
    00001697: 	leaq	0x1(%rax), %rsi
    0000169b: 	callq	_ZdlPvm@PLT # Offset: 5787
.Ltmp1314:
    000016a0: 	movq	0x10(%rsp), %rbx
    000016a5: 	movq	0x50(%rsp), %rsi
    000016aa: 	leaq	DATAat0x38381(%rip), %rdx
    000016b1: 	movq	%rbx, %rdi
    000016b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5812
    000016b9: 	callq	clock@PLT # Offset: 5817
    000016be: 	movq	%rbx, %rsi
    000016c1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016c8: 	movq	%rax, start_time(%rip)
    000016cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5839
    000016d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016db: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016e2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016e9: 	je	.Ltmp1315 # Offset: 5865
.Ltmp1446:
    000016ef: 	movq	-0x20(%rax), %rbp
    000016f3: 	callq	clock@PLT # Offset: 5875
    000016f8: 	pxor	%xmm0, %xmm0
    000016fc: 	movq	%rax, end_time(%rip)
    00001703: 	movq	%rbp, %rdi
    00001706: 	subq	start_time(%rip), %rax
    0000170d: 	cvtsi2sd	%rax, %xmm0
    00001712: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000171a: 	callq	_Z13record_resultdPKc # Offset: 5914
    0000171f: 	movq	0x140(%rsp), %rdi
    00001727: 	cmpq	0x18(%rsp), %rdi
    0000172c: 	je	.Ltmp1316 # Offset: 5932
    0000172e: 	movq	0x150(%rsp), %rax
    00001736: 	leaq	0x1(%rax), %rsi
    0000173a: 	callq	_ZdlPvm@PLT # Offset: 5946
.Ltmp1316:
    0000173f: 	movq	0x50(%rsp), %rbx
    00001744: 	leaq	0x100(%rsp), %rdi
    0000174c: 	leaq	DATAat0x384a0(%rip), %rdx
    00001753: 	movq	%rbx, %rsi
    00001756: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5974
    0000175b: 	movl	iterations(%rip), %esi
    00001761: 	movq	0x100(%rsp), %rdi
    00001769: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5993
    0000176e: 	movq	0x10(%rsp), %rdi
    00001773: 	leaq	DATAat0x384c8(%rip), %rdx
    0000177a: 	movq	%rbx, %rsi
    0000177d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6013
    00001782: 	movzbl	0x6f(%rsp), %eax
    00001787: 	movl	%eax, 0x5c(%rsp)
    0000178b: 	movzbl	0x6e(%rsp), %eax
    00001790: 	movl	%eax, 0x60(%rsp)
    00001794: 	movzbl	0x40(%rsp), %eax
    00001799: 	movl	%eax, 0x64(%rsp)
    0000179d: 	movzbl	%r13b, %eax
    000017a1: 	movl	%eax, 0x68(%rsp)
    000017a5: 	callq	clock@PLT # Offset: 6053
    000017aa: 	movl	iterations(%rip), %esi
    000017b0: 	movq	%rax, start_time(%rip)
    000017b7: 	testl	%esi, %esi
    000017b9: 	jle	.Ltmp1317 # Offset: 6073
    000017bf: 	movl	0x64(%rsp), %r12d
    000017c4: 	addl	0x68(%rsp), %r12d
    000017c9: 	xorl	%ebp, %ebp
    000017cb: 	leaq	0x20a0(%rsp), %rbx
    000017d3: 	addl	0x60(%rsp), %r12d
    000017d8: 	addb	0x5c(%rsp), %r12b
    000017dd: 	movd	%r12d, %xmm0
    000017e2: 	movdqa	DATAat0x38620(%rip), %xmm4
    000017ea: 	punpcklbw	%xmm0, %xmm0
    000017ee: 	punpcklwd	%xmm0, %xmm0
    000017f2: 	movaps	%xmm4, (%rsp)
    000017f6: 	pshufd	$0x0, %xmm0, %xmm4
    000017fb: 	movaps	%xmm4, 0x30(%rsp)
    00001800: 	punpcklbw	%xmm4, %xmm4
    00001804: 	movaps	%xmm4, 0x20(%rsp)
    00001809: 	nopl	(%rax) # Size: 7
.Ltmp1320:
    00001810: 	movdqa	0x30(%rsp), %xmm4
    00001816: 	movq	%r15, %rax
    00001819: 	pxor	%xmm2, %xmm2
    0000181d: 	movdqa	%xmm4, %xmm3
    00001821: 	punpckhbw	%xmm4, %xmm3
    00001825: 	nopl	(%rax) # Size: 3
.Ltmp1318:
    00001828: 	movdqa	(%rax), %xmm0
    0000182c: 	movdqa	(%rsp), %xmm6
    00001831: 	addq	$0x10, %rax
    00001835: 	movdqa	%xmm0, %xmm1
    00001839: 	punpcklbw	%xmm0, %xmm1
    0000183d: 	punpckhbw	%xmm0, %xmm0
    00001841: 	pmullw	0x20(%rsp), %xmm1
    00001847: 	pand	%xmm6, %xmm1
    0000184b: 	pmullw	%xmm3, %xmm0
    0000184f: 	pand	%xmm6, %xmm0
    00001853: 	packuswb	%xmm0, %xmm1
    00001857: 	paddb	%xmm1, %xmm2
    0000185b: 	cmpq	%rbx, %rax
    0000185e: 	jne	.Ltmp1318 # Offset: 6238
    00001860: 	cvttsd2si	init_value(%rip), %ecx
    00001868: 	movdqa	%xmm2, %xmm0
    0000186c: 	psrldq	$0x8, %xmm0
    00001871: 	paddb	%xmm0, %xmm2
    00001875: 	pxor	%xmm0, %xmm0
    00001879: 	psadbw	%xmm0, %xmm2
    0000187d: 	movl	%ecx, %eax
    0000187f: 	movd	%xmm2, %edx
    00001883: 	imull	%r12d, %eax
    00001887: 	shll	$0x6, %eax
    0000188a: 	cmpb	%dl, %al
    0000188c: 	je	.Ltmp1319 # Offset: 6284
    0000188e: 	movl	current_test(%rip), %edx
    00001894: 	leaq	DATAat0x381c8(%rip), %rsi
    0000189b: 	movl	$0x1, %edi
    000018a0: 	xorl	%eax, %eax
    000018a2: 	callq	__printf_chk@PLT # Offset: 6306
    000018a7: 	movl	iterations(%rip), %esi
.Ltmp1319:
    000018ad: 	addl	$0x1, %ebp
    000018b0: 	cmpl	%esi, %ebp
    000018b2: 	jl	.Ltmp1320 # Offset: 6322
.Ltmp1317:
    000018b8: 	movq	0x10(%rsp), %rsi
    000018bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6340
    000018c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018d0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018de: 	je	.Ltmp1321 # Offset: 6366
.Ltmp1445:
    000018e4: 	movq	-0x20(%rax), %rbp
    000018e8: 	callq	clock@PLT # Offset: 6376
    000018ed: 	pxor	%xmm0, %xmm0
    000018f1: 	movq	%rax, end_time(%rip)
    000018f8: 	movq	%rbp, %rdi
    000018fb: 	subq	start_time(%rip), %rax
    00001902: 	cvtsi2sd	%rax, %xmm0
    00001907: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000190f: 	callq	_Z13record_resultdPKc # Offset: 6415
    00001914: 	movq	0x140(%rsp), %rdi
    0000191c: 	cmpq	0x18(%rsp), %rdi
    00001921: 	je	.Ltmp1322 # Offset: 6433
    00001923: 	movq	0x150(%rsp), %rax
    0000192b: 	leaq	0x1(%rax), %rsi
    0000192f: 	callq	_ZdlPvm@PLT # Offset: 6447
.Ltmp1322:
    00001934: 	movq	0x50(%rsp), %rsi
    00001939: 	movq	0x10(%rsp), %rdi
    0000193e: 	leaq	DATAat0x384e8(%rip), %rdx
    00001945: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6469
    0000194a: 	callq	clock@PLT # Offset: 6474
    0000194f: 	movl	iterations(%rip), %esi
    00001955: 	movq	%rax, start_time(%rip)
    0000195c: 	testl	%esi, %esi
    0000195e: 	jle	.Ltmp1323 # Offset: 6494
    00001964: 	movl	0x64(%rsp), %r12d
    00001969: 	addl	0x68(%rsp), %r12d
    0000196e: 	xorl	%ebp, %ebp
    00001970: 	leaq	0x20a0(%rsp), %rbx
    00001978: 	addl	0x60(%rsp), %r12d
    0000197d: 	addb	0x5c(%rsp), %r12b
    00001982: 	movd	%r12d, %xmm0
    00001987: 	movdqa	DATAat0x38620(%rip), %xmm4
    0000198f: 	punpcklbw	%xmm0, %xmm0
    00001993: 	punpcklwd	%xmm0, %xmm0
    00001997: 	movaps	%xmm4, (%rsp)
    0000199b: 	pshufd	$0x0, %xmm0, %xmm4
    000019a0: 	movaps	%xmm4, 0x30(%rsp)
    000019a5: 	punpcklbw	%xmm4, %xmm4
    000019a9: 	movaps	%xmm4, 0x20(%rsp)
    000019ae: 	nop # Size: 2
.Ltmp1326:
    000019b0: 	movdqa	0x30(%rsp), %xmm4
    000019b6: 	movq	%r15, %rax
    000019b9: 	pxor	%xmm2, %xmm2
    000019bd: 	movdqa	%xmm4, %xmm3
    000019c1: 	punpckhbw	%xmm4, %xmm3
    000019c5: 	nopl	(%rax) # Size: 3
.Ltmp1324:
    000019c8: 	movdqa	(%rax), %xmm0
    000019cc: 	movdqa	(%rsp), %xmm7
    000019d1: 	addq	$0x10, %rax
    000019d5: 	movdqa	%xmm0, %xmm1
    000019d9: 	punpcklbw	%xmm0, %xmm1
    000019dd: 	punpckhbw	%xmm0, %xmm0
    000019e1: 	pmullw	0x20(%rsp), %xmm1
    000019e7: 	pand	%xmm7, %xmm1
    000019eb: 	pmullw	%xmm3, %xmm0
    000019ef: 	pand	%xmm7, %xmm0
    000019f3: 	packuswb	%xmm0, %xmm1
    000019f7: 	paddb	%xmm1, %xmm2
    000019fb: 	cmpq	%rbx, %rax
    000019fe: 	jne	.Ltmp1324 # Offset: 6654
    00001a00: 	cvttsd2si	init_value(%rip), %ecx
    00001a08: 	movdqa	%xmm2, %xmm0
    00001a0c: 	psrldq	$0x8, %xmm0
    00001a11: 	paddb	%xmm0, %xmm2
    00001a15: 	pxor	%xmm0, %xmm0
    00001a19: 	psadbw	%xmm0, %xmm2
    00001a1d: 	movl	%ecx, %eax
    00001a1f: 	movd	%xmm2, %edx
    00001a23: 	imull	%r12d, %eax
    00001a27: 	shll	$0x6, %eax
    00001a2a: 	cmpb	%dl, %al
    00001a2c: 	je	.Ltmp1325 # Offset: 6700
    00001a2e: 	movl	current_test(%rip), %edx
    00001a34: 	leaq	DATAat0x381c8(%rip), %rsi
    00001a3b: 	movl	$0x1, %edi
    00001a40: 	xorl	%eax, %eax
    00001a42: 	callq	__printf_chk@PLT # Offset: 6722
    00001a47: 	movl	iterations(%rip), %esi
.Ltmp1325:
    00001a4d: 	addl	$0x1, %ebp
    00001a50: 	cmpl	%esi, %ebp
    00001a52: 	jl	.Ltmp1326 # Offset: 6738
.Ltmp1323:
    00001a58: 	movq	0x10(%rsp), %rsi
    00001a5d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a64: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6756
    00001a69: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a70: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a77: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a7e: 	je	.Ltmp1327 # Offset: 6782
.Ltmp1444:
    00001a84: 	movq	-0x20(%rax), %rbp
    00001a88: 	callq	clock@PLT # Offset: 6792
    00001a8d: 	pxor	%xmm0, %xmm0
    00001a91: 	movq	%rax, end_time(%rip)
    00001a98: 	movq	%rbp, %rdi
    00001a9b: 	subq	start_time(%rip), %rax
    00001aa2: 	cvtsi2sd	%rax, %xmm0
    00001aa7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001aaf: 	callq	_Z13record_resultdPKc # Offset: 6831
    00001ab4: 	movq	0x140(%rsp), %rdi
    00001abc: 	cmpq	0x18(%rsp), %rdi
    00001ac1: 	je	.Ltmp1328 # Offset: 6849
    00001ac3: 	movq	0x150(%rsp), %rax
    00001acb: 	leaq	0x1(%rax), %rsi
    00001acf: 	callq	_ZdlPvm@PLT # Offset: 6863
.Ltmp1328:
    00001ad4: 	movq	0x50(%rsp), %rsi
    00001ad9: 	movq	0x10(%rsp), %rdi
    00001ade: 	leaq	DATAat0x38508(%rip), %rdx
    00001ae5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6885
    00001aea: 	callq	clock@PLT # Offset: 6890
    00001aef: 	movl	iterations(%rip), %esi
    00001af5: 	movq	%rax, start_time(%rip)
    00001afc: 	testl	%esi, %esi
    00001afe: 	jle	.Ltmp1329 # Offset: 6910
    00001b04: 	movl	0x68(%rsp), %r12d
    00001b09: 	subl	0x64(%rsp), %r12d
    00001b0e: 	xorl	%ebp, %ebp
    00001b10: 	leaq	0x20a0(%rsp), %rbx
    00001b18: 	addl	0x60(%rsp), %r12d
    00001b1d: 	subb	0x5c(%rsp), %r12b
    00001b22: 	movd	%r12d, %xmm0
    00001b27: 	movdqa	DATAat0x38620(%rip), %xmm5
    00001b2f: 	punpcklbw	%xmm0, %xmm0
    00001b33: 	punpcklwd	%xmm0, %xmm0
    00001b37: 	movaps	%xmm5, (%rsp)
    00001b3b: 	pshufd	$0x0, %xmm0, %xmm4
    00001b40: 	movaps	%xmm4, 0x30(%rsp)
    00001b45: 	punpcklbw	%xmm4, %xmm4
    00001b49: 	movaps	%xmm4, 0x20(%rsp)
    00001b4e: 	nop # Size: 2
.Ltmp1332:
    00001b50: 	movdqa	0x30(%rsp), %xmm5
    00001b56: 	movq	%r15, %rax
    00001b59: 	pxor	%xmm2, %xmm2
    00001b5d: 	movdqa	%xmm5, %xmm3
    00001b61: 	punpckhbw	%xmm5, %xmm3
    00001b65: 	nopl	(%rax) # Size: 3
.Ltmp1330:
    00001b68: 	movdqa	(%rax), %xmm0
    00001b6c: 	movdqa	(%rsp), %xmm4
    00001b71: 	addq	$0x10, %rax
    00001b75: 	movdqa	%xmm0, %xmm1
    00001b79: 	punpcklbw	%xmm0, %xmm1
    00001b7d: 	punpckhbw	%xmm0, %xmm0
    00001b81: 	pmullw	0x20(%rsp), %xmm1
    00001b87: 	pand	%xmm4, %xmm1
    00001b8b: 	pmullw	%xmm3, %xmm0
    00001b8f: 	pand	%xmm4, %xmm0
    00001b93: 	packuswb	%xmm0, %xmm1
    00001b97: 	paddb	%xmm1, %xmm2
    00001b9b: 	cmpq	%rbx, %rax
    00001b9e: 	jne	.Ltmp1330 # Offset: 7070
    00001ba0: 	cvttsd2si	init_value(%rip), %ecx
    00001ba8: 	movdqa	%xmm2, %xmm0
    00001bac: 	psrldq	$0x8, %xmm0
    00001bb1: 	paddb	%xmm0, %xmm2
    00001bb5: 	pxor	%xmm0, %xmm0
    00001bb9: 	psadbw	%xmm0, %xmm2
    00001bbd: 	movl	%ecx, %eax
    00001bbf: 	movd	%xmm2, %edx
    00001bc3: 	imull	%r12d, %eax
    00001bc7: 	shll	$0x6, %eax
    00001bca: 	cmpb	%dl, %al
    00001bcc: 	je	.Ltmp1331 # Offset: 7116
    00001bce: 	movl	current_test(%rip), %edx
    00001bd4: 	leaq	DATAat0x381c8(%rip), %rsi
    00001bdb: 	movl	$0x1, %edi
    00001be0: 	xorl	%eax, %eax
    00001be2: 	callq	__printf_chk@PLT # Offset: 7138
    00001be7: 	movl	iterations(%rip), %esi
.Ltmp1331:
    00001bed: 	addl	$0x1, %ebp
    00001bf0: 	cmpl	%esi, %ebp
    00001bf2: 	jl	.Ltmp1332 # Offset: 7154
.Ltmp1329:
    00001bf8: 	movq	0x10(%rsp), %rsi
    00001bfd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c04: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7172
    00001c09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c10: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c1e: 	je	.Ltmp1333 # Offset: 7198
.Ltmp1443:
    00001c24: 	movq	-0x20(%rax), %rbp
    00001c28: 	callq	clock@PLT # Offset: 7208
    00001c2d: 	pxor	%xmm0, %xmm0
    00001c31: 	movq	%rax, end_time(%rip)
    00001c38: 	movq	%rbp, %rdi
    00001c3b: 	subq	start_time(%rip), %rax
    00001c42: 	cvtsi2sd	%rax, %xmm0
    00001c47: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001c4f: 	callq	_Z13record_resultdPKc # Offset: 7247
    00001c54: 	movq	0x140(%rsp), %rdi
    00001c5c: 	cmpq	0x18(%rsp), %rdi
    00001c61: 	je	.Ltmp1334 # Offset: 7265
    00001c63: 	movq	0x150(%rsp), %rax
    00001c6b: 	leaq	0x1(%rax), %rsi
    00001c6f: 	callq	_ZdlPvm@PLT # Offset: 7279
.Ltmp1334:
    00001c74: 	movq	0x50(%rsp), %rsi
    00001c79: 	movq	0x10(%rsp), %rdi
    00001c7e: 	leaq	DATAat0x3839a(%rip), %rdx
    00001c85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7301
    00001c8a: 	callq	clock@PLT # Offset: 7306
    00001c8f: 	movl	iterations(%rip), %esi
    00001c95: 	movq	%rax, start_time(%rip)
    00001c9c: 	testl	%esi, %esi
    00001c9e: 	jle	.Ltmp1335 # Offset: 7326
    00001ca4: 	movzbl	0x40(%rsp), %r12d
    00001caa: 	addb	0x6e(%rsp), %r12b
    00001caf: 	xorl	%ebp, %ebp
    00001cb1: 	leaq	0x20a0(%rsp), %rbx
    00001cb9: 	addl	%r13d, %r12d
    00001cbc: 	addb	0x6f(%rsp), %r12b
    00001cc1: 	movdqa	DATAat0x38620(%rip), %xmm6
    00001cc9: 	movd	%r12d, %xmm0
    00001cce: 	punpcklbw	%xmm0, %xmm0
    00001cd2: 	movaps	%xmm6, (%rsp)
    00001cd6: 	punpcklwd	%xmm0, %xmm0
    00001cda: 	pshufd	$0x0, %xmm0, %xmm7
    00001cdf: 	movdqa	%xmm7, %xmm4
    00001ce3: 	movaps	%xmm7, 0x30(%rsp)
    00001ce8: 	punpcklbw	%xmm7, %xmm4
    00001cec: 	movaps	%xmm4, 0x20(%rsp)
    00001cf1: 	nopl	(%rax) # Size: 7
.Ltmp1338:
    00001cf8: 	movdqa	0x30(%rsp), %xmm6
    00001cfe: 	movq	%r15, %rax
    00001d01: 	pxor	%xmm2, %xmm2
    00001d05: 	movdqa	%xmm6, %xmm3
    00001d09: 	punpckhbw	%xmm6, %xmm3
    00001d0d: 	nopl	(%rax) # Size: 3
.Ltmp1336:
    00001d10: 	movdqa	(%rax), %xmm0
    00001d14: 	movdqa	(%rsp), %xmm6
    00001d19: 	addq	$0x10, %rax
    00001d1d: 	movdqa	%xmm0, %xmm1
    00001d21: 	punpcklbw	%xmm0, %xmm1
    00001d25: 	punpckhbw	%xmm0, %xmm0
    00001d29: 	pmullw	0x20(%rsp), %xmm1
    00001d2f: 	pand	%xmm6, %xmm1
    00001d33: 	pmullw	%xmm3, %xmm0
    00001d37: 	pand	%xmm6, %xmm0
    00001d3b: 	packuswb	%xmm0, %xmm1
    00001d3f: 	paddb	%xmm1, %xmm2
    00001d43: 	cmpq	%rax, %rbx
    00001d46: 	jne	.Ltmp1336 # Offset: 7494
    00001d48: 	cvttsd2si	init_value(%rip), %ecx
    00001d50: 	movdqa	%xmm2, %xmm0
    00001d54: 	psrldq	$0x8, %xmm0
    00001d59: 	paddb	%xmm0, %xmm2
    00001d5d: 	pxor	%xmm0, %xmm0
    00001d61: 	psadbw	%xmm0, %xmm2
    00001d65: 	movl	%ecx, %eax
    00001d67: 	movd	%xmm2, %edx
    00001d6b: 	imull	%r12d, %eax
    00001d6f: 	shll	$0x6, %eax
    00001d72: 	cmpb	%dl, %al
    00001d74: 	je	.Ltmp1337 # Offset: 7540
    00001d76: 	movl	current_test(%rip), %edx
    00001d7c: 	leaq	DATAat0x381c8(%rip), %rsi
    00001d83: 	movl	$0x1, %edi
    00001d88: 	xorl	%eax, %eax
    00001d8a: 	callq	__printf_chk@PLT # Offset: 7562
    00001d8f: 	movl	iterations(%rip), %esi
.Ltmp1337:
    00001d95: 	addl	$0x1, %ebp
    00001d98: 	cmpl	%esi, %ebp
    00001d9a: 	jl	.Ltmp1338 # Offset: 7578
.Ltmp1335:
    00001da0: 	movq	0x10(%rsp), %rsi
    00001da5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7596
    00001db1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dbf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dc6: 	je	.Ltmp1339 # Offset: 7622
.Ltmp1442:
    00001dcc: 	movq	-0x20(%rax), %rbp
    00001dd0: 	callq	clock@PLT # Offset: 7632
    00001dd5: 	pxor	%xmm0, %xmm0
    00001dd9: 	movq	%rax, end_time(%rip)
    00001de0: 	movq	%rbp, %rdi
    00001de3: 	subq	start_time(%rip), %rax
    00001dea: 	cvtsi2sd	%rax, %xmm0
    00001def: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001df7: 	callq	_Z13record_resultdPKc # Offset: 7671
    00001dfc: 	movq	0x140(%rsp), %rdi
    00001e04: 	cmpq	0x18(%rsp), %rdi
    00001e09: 	je	.Ltmp1340 # Offset: 7689
    00001e0b: 	movq	0x150(%rsp), %rax
    00001e13: 	leaq	0x1(%rax), %rsi
    00001e17: 	callq	_ZdlPvm@PLT # Offset: 7703
.Ltmp1340:
    00001e1c: 	movq	0x50(%rsp), %rsi
    00001e21: 	movq	0x10(%rsp), %rdi
    00001e26: 	leaq	DATAat0x383b1(%rip), %rdx
    00001e2d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7725
    00001e32: 	callq	clock@PLT # Offset: 7730
    00001e37: 	movl	iterations(%rip), %esi
    00001e3d: 	movq	%rax, start_time(%rip)
    00001e44: 	testl	%esi, %esi
    00001e46: 	jle	.Ltmp1341 # Offset: 7750
    00001e4c: 	movzbl	0x40(%rsp), %r12d
    00001e52: 	addb	0x6e(%rsp), %r12b
    00001e57: 	xorl	%ebp, %ebp
    00001e59: 	leaq	0x20a0(%rsp), %rbx
    00001e61: 	addl	%r13d, %r12d
    00001e64: 	addb	0x6f(%rsp), %r12b
    00001e69: 	movdqa	DATAat0x38620(%rip), %xmm5
    00001e71: 	movd	%r12d, %xmm0
    00001e76: 	punpcklbw	%xmm0, %xmm0
    00001e7a: 	movaps	%xmm5, (%rsp)
    00001e7e: 	punpcklwd	%xmm0, %xmm0
    00001e82: 	pshufd	$0x0, %xmm0, %xmm4
    00001e87: 	movaps	%xmm4, 0x30(%rsp)
    00001e8c: 	punpcklbw	%xmm4, %xmm4
    00001e90: 	movaps	%xmm4, 0x20(%rsp)
    00001e95: 	nopl	(%rax) # Size: 3
.Ltmp1344:
    00001e98: 	movdqa	0x30(%rsp), %xmm7
    00001e9e: 	movq	%r15, %rax
    00001ea1: 	pxor	%xmm2, %xmm2
    00001ea5: 	movdqa	%xmm7, %xmm3
    00001ea9: 	punpckhbw	%xmm7, %xmm3
    00001ead: 	nopl	(%rax) # Size: 3
.Ltmp1342:
    00001eb0: 	movdqa	(%rax), %xmm0
    00001eb4: 	movdqa	(%rsp), %xmm7
    00001eb9: 	addq	$0x10, %rax
    00001ebd: 	movdqa	%xmm0, %xmm1
    00001ec1: 	punpcklbw	%xmm0, %xmm1
    00001ec5: 	punpckhbw	%xmm0, %xmm0
    00001ec9: 	pmullw	0x20(%rsp), %xmm1
    00001ecf: 	pand	%xmm7, %xmm1
    00001ed3: 	pmullw	%xmm3, %xmm0
    00001ed7: 	pand	%xmm7, %xmm0
    00001edb: 	packuswb	%xmm0, %xmm1
    00001edf: 	paddb	%xmm1, %xmm2
    00001ee3: 	cmpq	%rbx, %rax
    00001ee6: 	jne	.Ltmp1342 # Offset: 7910
    00001ee8: 	cvttsd2si	init_value(%rip), %ecx
    00001ef0: 	movdqa	%xmm2, %xmm0
    00001ef4: 	psrldq	$0x8, %xmm0
    00001ef9: 	paddb	%xmm0, %xmm2
    00001efd: 	pxor	%xmm0, %xmm0
    00001f01: 	psadbw	%xmm0, %xmm2
    00001f05: 	movl	%ecx, %eax
    00001f07: 	movd	%xmm2, %edx
    00001f0b: 	imull	%r12d, %eax
    00001f0f: 	shll	$0x6, %eax
    00001f12: 	cmpb	%dl, %al
    00001f14: 	je	.Ltmp1343 # Offset: 7956
    00001f16: 	movl	current_test(%rip), %edx
    00001f1c: 	leaq	DATAat0x381c8(%rip), %rsi
    00001f23: 	movl	$0x1, %edi
    00001f28: 	xorl	%eax, %eax
    00001f2a: 	callq	__printf_chk@PLT # Offset: 7978
    00001f2f: 	movl	iterations(%rip), %esi
.Ltmp1343:
    00001f35: 	addl	$0x1, %ebp
    00001f38: 	cmpl	%esi, %ebp
    00001f3a: 	jl	.Ltmp1344 # Offset: 7994
.Ltmp1341:
    00001f40: 	movq	0x10(%rsp), %rsi
    00001f45: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f4c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8012
    00001f51: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f58: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f5f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f66: 	je	.Ltmp1345 # Offset: 8038
.Ltmp1441:
    00001f6c: 	movq	-0x20(%rax), %rbp
    00001f70: 	callq	clock@PLT # Offset: 8048
    00001f75: 	pxor	%xmm0, %xmm0
    00001f79: 	movq	%rax, end_time(%rip)
    00001f80: 	movq	%rbp, %rdi
    00001f83: 	subq	start_time(%rip), %rax
    00001f8a: 	cvtsi2sd	%rax, %xmm0
    00001f8f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001f97: 	callq	_Z13record_resultdPKc # Offset: 8087
    00001f9c: 	movq	0x140(%rsp), %rdi
    00001fa4: 	cmpq	0x18(%rsp), %rdi
    00001fa9: 	je	.Ltmp1346 # Offset: 8105
    00001fab: 	movq	0x150(%rsp), %rax
    00001fb3: 	leaq	0x1(%rax), %rsi
    00001fb7: 	callq	_ZdlPvm@PLT # Offset: 8119
.Ltmp1346:
    00001fbc: 	movq	0x50(%rsp), %rsi
    00001fc1: 	movq	0x10(%rsp), %rdi
    00001fc6: 	leaq	DATAat0x383c9(%rip), %rdx
    00001fcd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8141
    00001fd2: 	callq	clock@PLT # Offset: 8146
    00001fd7: 	movl	iterations(%rip), %esi
    00001fdd: 	movq	%rax, start_time(%rip)
    00001fe4: 	testl	%esi, %esi
    00001fe6: 	jle	.Ltmp1347 # Offset: 8166
    00001fec: 	movzbl	0x6e(%rsp), %r12d
    00001ff2: 	movdqa	DATAat0x38620(%rip), %xmm6
    00001ffa: 	xorl	%ebp, %ebp
    00001ffc: 	leaq	0x20a0(%rsp), %rbx
    00002004: 	addl	%r13d, %r12d
    00002007: 	subb	0x40(%rsp), %r12b
    0000200c: 	subb	0x6f(%rsp), %r12b
    00002011: 	movaps	%xmm6, (%rsp)
    00002015: 	movd	%r12d, %xmm0
    0000201a: 	punpcklbw	%xmm0, %xmm0
    0000201e: 	punpcklwd	%xmm0, %xmm0
    00002022: 	pshufd	$0x0, %xmm0, %xmm7
    00002027: 	movdqa	%xmm7, %xmm4
    0000202b: 	movaps	%xmm7, 0x30(%rsp)
    00002030: 	punpcklbw	%xmm7, %xmm4
    00002034: 	movaps	%xmm4, 0x20(%rsp)
    00002039: 	nopl	(%rax) # Size: 7
.Ltmp1350:
    00002040: 	movdqa	0x30(%rsp), %xmm4
    00002046: 	movq	%r15, %rax
    00002049: 	pxor	%xmm2, %xmm2
    0000204d: 	movdqa	%xmm4, %xmm3
    00002051: 	punpckhbw	%xmm4, %xmm3
    00002055: 	nopl	(%rax) # Size: 3
.Ltmp1348:
    00002058: 	movdqa	(%rax), %xmm0
    0000205c: 	movdqa	(%rsp), %xmm4
    00002061: 	addq	$0x10, %rax
    00002065: 	movdqa	%xmm0, %xmm1
    00002069: 	punpcklbw	%xmm0, %xmm1
    0000206d: 	punpckhbw	%xmm0, %xmm0
    00002071: 	pmullw	0x20(%rsp), %xmm1
    00002077: 	pand	%xmm4, %xmm1
    0000207b: 	pmullw	%xmm3, %xmm0
    0000207f: 	pand	%xmm4, %xmm0
    00002083: 	packuswb	%xmm0, %xmm1
    00002087: 	paddb	%xmm1, %xmm2
    0000208b: 	cmpq	%rax, %rbx
    0000208e: 	jne	.Ltmp1348 # Offset: 8334
    00002090: 	cvttsd2si	init_value(%rip), %ecx
    00002098: 	movdqa	%xmm2, %xmm0
    0000209c: 	psrldq	$0x8, %xmm0
    000020a1: 	paddb	%xmm0, %xmm2
    000020a5: 	pxor	%xmm0, %xmm0
    000020a9: 	psadbw	%xmm0, %xmm2
    000020ad: 	movl	%ecx, %eax
    000020af: 	movd	%xmm2, %edx
    000020b3: 	imull	%r12d, %eax
    000020b7: 	shll	$0x6, %eax
    000020ba: 	cmpb	%dl, %al
    000020bc: 	je	.Ltmp1349 # Offset: 8380
    000020be: 	movl	current_test(%rip), %edx
    000020c4: 	leaq	DATAat0x381c8(%rip), %rsi
    000020cb: 	movl	$0x1, %edi
    000020d0: 	xorl	%eax, %eax
    000020d2: 	callq	__printf_chk@PLT # Offset: 8402
    000020d7: 	movl	iterations(%rip), %esi
.Ltmp1349:
    000020dd: 	addl	$0x1, %ebp
    000020e0: 	cmpl	%esi, %ebp
    000020e2: 	jl	.Ltmp1350 # Offset: 8418
.Ltmp1347:
    000020e8: 	movq	0x10(%rsp), %rsi
    000020ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8436
    000020f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002100: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002107: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000210e: 	je	.Ltmp1351 # Offset: 8462
.Ltmp1440:
    00002114: 	movq	-0x20(%rax), %rbp
    00002118: 	callq	clock@PLT # Offset: 8472
    0000211d: 	pxor	%xmm0, %xmm0
    00002121: 	movq	%rax, end_time(%rip)
    00002128: 	movq	%rbp, %rdi
    0000212b: 	subq	start_time(%rip), %rax
    00002132: 	cvtsi2sd	%rax, %xmm0
    00002137: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000213f: 	callq	_Z13record_resultdPKc # Offset: 8511
    00002144: 	movq	0x140(%rsp), %rdi
    0000214c: 	cmpq	0x18(%rsp), %rdi
    00002151: 	je	.Ltmp1352 # Offset: 8529
    00002153: 	movq	0x150(%rsp), %rax
    0000215b: 	leaq	0x1(%rax), %rsi
    0000215f: 	callq	_ZdlPvm@PLT # Offset: 8543
.Ltmp1352:
    00002164: 	movq	0x50(%rsp), %rsi
    00002169: 	movq	0x10(%rsp), %rdi
    0000216e: 	leaq	DATAat0x38528(%rip), %rdx
    00002175: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8565
    0000217a: 	callq	clock@PLT # Offset: 8570
    0000217f: 	movl	iterations(%rip), %ecx
    00002185: 	movq	%rax, start_time(%rip)
    0000218c: 	testl	%ecx, %ecx
    0000218e: 	jle	.Ltmp1353 # Offset: 8590
    00002194: 	movd	%r14d, %xmm0
    00002199: 	movl	0x60(%rsp), %r12d
    0000219e: 	addl	0x64(%rsp), %r12d
    000021a3: 	xorl	%ebp, %ebp
    000021a5: 	punpcklbw	%xmm0, %xmm0
    000021a9: 	addb	0x5c(%rsp), %r12b
    000021ae: 	movdqa	DATAat0x38620(%rip), %xmm5
    000021b6: 	leaq	0x20a0(%rsp), %rbx
    000021be: 	punpcklwd	%xmm0, %xmm0
    000021c2: 	leaq	DATAat0x381c8(%rip), %r13
    000021c9: 	pshufd	$0x0, %xmm0, %xmm4
    000021ce: 	movd	%r12d, %xmm0
    000021d3: 	movaps	%xmm5, (%rsp)
    000021d7: 	punpcklbw	%xmm0, %xmm0
    000021db: 	movaps	%xmm4, 0x20(%rsp)
    000021e0: 	punpcklwd	%xmm0, %xmm0
    000021e4: 	pshufd	$0x0, %xmm0, %xmm6
    000021e9: 	movdqa	%xmm6, %xmm4
    000021ed: 	movaps	%xmm6, 0x40(%rsp)
    000021f2: 	punpcklbw	%xmm6, %xmm4
    000021f6: 	movaps	%xmm4, 0x30(%rsp)
    000021fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1356:
    00002200: 	movdqa	0x40(%rsp), %xmm5
    00002206: 	movq	%r15, %rax
    00002209: 	pxor	%xmm2, %xmm2
    0000220d: 	movdqa	%xmm5, %xmm3
    00002211: 	punpckhbw	%xmm5, %xmm3
    00002215: 	nopl	(%rax) # Size: 3
.Ltmp1354:
    00002218: 	movdqa	0x20(%rsp), %xmm0
    0000221e: 	paddb	(%rax), %xmm0
    00002222: 	addq	$0x10, %rax
    00002226: 	movdqa	(%rsp), %xmm6
    0000222b: 	movdqa	%xmm0, %xmm1
    0000222f: 	punpcklbw	%xmm0, %xmm1
    00002233: 	punpckhbw	%xmm0, %xmm0
    00002237: 	pmullw	0x30(%rsp), %xmm1
    0000223d: 	pand	%xmm6, %xmm1
    00002241: 	pmullw	%xmm3, %xmm0
    00002245: 	pand	%xmm6, %xmm0
    00002249: 	packuswb	%xmm0, %xmm1
    0000224d: 	paddb	%xmm1, %xmm2
    00002251: 	cmpq	%rbx, %rax
    00002254: 	jne	.Ltmp1354 # Offset: 8788
    00002256: 	cvttsd2si	init_value(%rip), %eax
    0000225e: 	movdqa	%xmm2, %xmm0
    00002262: 	psrldq	$0x8, %xmm0
    00002267: 	paddb	%xmm0, %xmm2
    0000226b: 	pxor	%xmm0, %xmm0
    0000226f: 	psadbw	%xmm0, %xmm2
    00002273: 	addl	%r14d, %eax
    00002276: 	movd	%xmm2, %edx
    0000227a: 	imull	%r12d, %eax
    0000227e: 	shll	$0x6, %eax
    00002281: 	cmpb	%dl, %al
    00002283: 	je	.Ltmp1355 # Offset: 8835
    00002285: 	movl	current_test(%rip), %edx
    0000228b: 	movq	%r13, %rsi
    0000228e: 	movl	$0x1, %edi
    00002293: 	xorl	%eax, %eax
    00002295: 	callq	__printf_chk@PLT # Offset: 8853
    0000229a: 	movl	iterations(%rip), %ecx
.Ltmp1355:
    000022a0: 	addl	$0x1, %ebp
    000022a3: 	cmpl	%ecx, %ebp
    000022a5: 	jl	.Ltmp1356 # Offset: 8869
.Ltmp1353:
    000022ab: 	movq	0x10(%rsp), %rsi
    000022b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8887
    000022bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022d1: 	je	.Ltmp1357 # Offset: 8913
.Ltmp1439:
    000022d7: 	movq	-0x20(%rax), %rbp
    000022db: 	callq	clock@PLT # Offset: 8923
    000022e0: 	pxor	%xmm0, %xmm0
    000022e4: 	movq	%rax, end_time(%rip)
    000022eb: 	movq	%rbp, %rdi
    000022ee: 	subq	start_time(%rip), %rax
    000022f5: 	cvtsi2sd	%rax, %xmm0
    000022fa: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002302: 	callq	_Z13record_resultdPKc # Offset: 8962
    00002307: 	movq	0x140(%rsp), %rdi
    0000230f: 	cmpq	0x18(%rsp), %rdi
    00002314: 	je	.Ltmp1358 # Offset: 8980
    00002316: 	movq	0x150(%rsp), %rax
    0000231e: 	leaq	0x1(%rax), %rsi
    00002322: 	callq	_ZdlPvm@PLT # Offset: 8994
.Ltmp1358:
    00002327: 	movq	0x10(%rsp), %rbx
    0000232c: 	movq	0x50(%rsp), %rsi
    00002331: 	leaq	DATAat0x383e1(%rip), %rdx
    00002338: 	movq	%rbx, %rdi
    0000233b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9019
    00002340: 	movl	0x5c(%rsp), %r8d
    00002345: 	movl	0x60(%rsp), %ecx
    00002349: 	movq	%rbx, %r9
    0000234c: 	movq	%r15, %rdi
    0000234f: 	movl	0x64(%rsp), %edx
    00002353: 	movl	0x68(%rsp), %esi
    00002357: 	callq	"_Z15test_variable4SIh33custom_poly_distributive_variableIhEEvPT_iS2_S2_S2_S2_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9047
    0000235c: 	movq	0x140(%rsp), %rdi
    00002364: 	cmpq	0x18(%rsp), %rdi
    00002369: 	je	.Ltmp1359 # Offset: 9065
    0000236b: 	movq	0x150(%rsp), %rax
    00002373: 	leaq	0x1(%rax), %rsi
    00002377: 	callq	_ZdlPvm@PLT # Offset: 9079
.Ltmp1359:
    0000237c: 	movq	0x50(%rsp), %rbx
    00002381: 	leaq	0x120(%rsp), %rdi
    00002389: 	leaq	DATAat0x3839a(%rip), %rdx
    00002390: 	movq	%rbx, %rsi
    00002393: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9107
    00002398: 	movl	iterations(%rip), %esi
    0000239e: 	movq	0x120(%rsp), %rdi
    000023a6: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 9126
    000023ab: 	movq	0x10(%rsp), %rdi
    000023b0: 	leaq	DATAat0x383fa(%rip), %rdx
    000023b7: 	movq	%rbx, %rsi
    000023ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9146
    000023bf: 	callq	clock@PLT # Offset: 9151
    000023c4: 	movq	%rax, start_time(%rip)
    000023cb: 	movl	iterations(%rip), %eax
    000023d1: 	movl	%eax, 0x64(%rsp)
    000023d5: 	testl	%eax, %eax
    000023d7: 	jle	.Ltmp1360 # Offset: 9175
    000023dd: 	movdqa	DATAat0x38620(%rip), %xmm7
    000023e5: 	movl	$0x0, 0x20(%rsp)
    000023ed: 	leaq	0x2090(%rsp), %rbx
    000023f5: 	movaps	%xmm7, (%rsp)
    000023f9: 	nopl	(%rax) # Size: 7
.Ltmp1363:
    00002400: 	movzbl	0x160(%rsp), %eax
    00002408: 	addb	0x161(%rsp), %al
    0000240f: 	pxor	%xmm2, %xmm2
    00002413: 	imull	%eax, %eax
    00002416: 	movb	%al, 0x30(%rsp)
    0000241a: 	movq	%r15, %rax
    0000241d: 	nopl	(%rax) # Size: 3
.Ltmp1361:
    00002420: 	movdqu	0x1(%rax), %xmm0
    00002425: 	paddb	(%rax), %xmm0
    00002429: 	addq	$0x10, %rax
    0000242d: 	movdqa	(%rsp), %xmm3
    00002432: 	movdqa	%xmm0, %xmm1
    00002436: 	punpcklbw	%xmm0, %xmm1
    0000243a: 	punpckhbw	%xmm0, %xmm0
    0000243e: 	pmullw	%xmm1, %xmm1
    00002442: 	pmullw	%xmm0, %xmm0
    00002446: 	pand	%xmm3, %xmm1
    0000244a: 	pand	%xmm3, %xmm0
    0000244e: 	packuswb	%xmm0, %xmm1
    00002452: 	paddb	%xmm1, %xmm2
    00002456: 	cmpq	%rbx, %rax
    00002459: 	jne	.Ltmp1361 # Offset: 9305
    0000245b: 	movzbl	0x2091(%rsp), %r11d
    00002464: 	movzbl	0x2090(%rsp), %eax
    0000246c: 	movdqa	%xmm2, %xmm0
    00002470: 	movzbl	0x209a(%rsp), %ebp
    00002478: 	psrldq	$0x8, %xmm0
    0000247d: 	addb	0x209b(%rsp), %bpl
    00002485: 	addl	%r11d, %eax
    00002488: 	movb	%bpl, 0x5c(%rsp)
    0000248d: 	paddb	%xmm0, %xmm2
    00002491: 	movzbl	0x209e(%rsp), %ebp
    00002499: 	movzbl	0x209d(%rsp), %r12d
    000024a2: 	pxor	%xmm0, %xmm0
    000024a6: 	imull	%eax, %eax
    000024a9: 	addb	0x2092(%rsp), %r11b
    000024b1: 	addb	0x30(%rsp), %al
    000024b5: 	psadbw	%xmm0, %xmm2
    000024b9: 	movzbl	0x2099(%rsp), %r14d
    000024c2: 	addb	0x209a(%rsp), %r14b
    000024ca: 	addl	%ebp, %r12d
    000024cd: 	movzbl	0x2092(%rsp), %r10d
    000024d6: 	movd	%xmm2, 0x60(%rsp)
    000024dc: 	addb	0x2093(%rsp), %r10b
    000024e4: 	movb	%r14b, 0x40(%rsp)
    000024e9: 	addb	0x209f(%rsp), %bpl
    000024f1: 	movzbl	0x2095(%rsp), %edi
    000024f9: 	movzbl	0x2096(%rsp), %esi
    00002501: 	addb	0x2096(%rsp), %dil
    00002509: 	addb	0x2097(%rsp), %sil
    00002511: 	movzbl	0x2097(%rsp), %ecx
    00002519: 	movzbl	0x2093(%rsp), %r9d
    00002522: 	addb	0x2098(%rsp), %cl
    00002529: 	addb	0x2094(%rsp), %r9b
    00002531: 	movzbl	0x2094(%rsp), %r8d
    0000253a: 	movzbl	0x2098(%rsp), %edx
    00002542: 	addb	0x2095(%rsp), %r8b
    0000254a: 	movzbl	0x209b(%rsp), %r14d
    00002553: 	addb	0x2099(%rsp), %dl
    0000255a: 	addb	0x209c(%rsp), %r14b
    00002562: 	movzbl	0x209d(%rsp), %r13d
    0000256b: 	addb	0x209c(%rsp), %r13b
    00002573: 	movb	%al, 0x30(%rsp)
    00002577: 	movl	%r11d, %eax
    0000257a: 	imull	%r11d, %eax
    0000257e: 	movzbl	0x30(%rsp), %r11d
    00002584: 	addl	%eax, %r11d
    00002587: 	movl	%r10d, %eax
    0000258a: 	imull	%r10d, %eax
    0000258e: 	movl	%eax, %r10d
    00002591: 	movl	%r9d, %eax
    00002594: 	imull	%r9d, %eax
    00002598: 	addl	%r11d, %r10d
    0000259b: 	movl	%eax, %r9d
    0000259e: 	movl	%r8d, %eax
    000025a1: 	imull	%r8d, %eax
    000025a5: 	addl	%r10d, %r9d
    000025a8: 	movl	%eax, %r8d
    000025ab: 	movl	%edi, %eax
    000025ad: 	imull	%edi, %eax
    000025b0: 	addl	%r9d, %r8d
    000025b3: 	movl	%eax, %edi
    000025b5: 	movl	%esi, %eax
    000025b7: 	imull	%esi, %eax
    000025ba: 	addl	%r8d, %edi
    000025bd: 	movl	%eax, %esi
    000025bf: 	movl	%ecx, %eax
    000025c1: 	imull	%ecx, %eax
    000025c4: 	addl	%edi, %esi
    000025c6: 	movl	%eax, %ecx
    000025c8: 	movl	%edx, %eax
    000025ca: 	imull	%edx, %eax
    000025cd: 	addl	%esi, %ecx
    000025cf: 	movl	%eax, %edx
    000025d1: 	movzbl	0x40(%rsp), %eax
    000025d6: 	addl	%ecx, %edx
    000025d8: 	imull	%eax, %eax
    000025db: 	addl	%eax, %edx
    000025dd: 	movzbl	0x5c(%rsp), %eax
    000025e2: 	imull	%eax, %eax
    000025e5: 	addl	%eax, %edx
    000025e7: 	movl	%r14d, %eax
    000025ea: 	imull	%r14d, %eax
    000025ee: 	movl	%eax, %r14d
    000025f1: 	movl	%r13d, %eax
    000025f4: 	imull	%r13d, %eax
    000025f8: 	addl	%edx, %r14d
    000025fb: 	movl	%eax, %r13d
    000025fe: 	movl	%r12d, %eax
    00002601: 	imull	%r12d, %eax
    00002605: 	addl	%r14d, %r13d
    00002608: 	movl	%eax, %r12d
    0000260b: 	movl	%ebp, %eax
    0000260d: 	imull	%ebp, %eax
    00002610: 	addl	%r13d, %r12d
    00002613: 	movl	%eax, %ebp
    00002615: 	addl	%ebp, %r12d
    00002618: 	addb	0x60(%rsp), %r12b
    0000261d: 	je	.Ltmp1362 # Offset: 9757
    0000261f: 	movl	current_test(%rip), %edx
    00002625: 	leaq	DATAat0x381c8(%rip), %rsi
    0000262c: 	movl	$0x1, %edi
    00002631: 	xorl	%eax, %eax
    00002633: 	callq	__printf_chk@PLT # Offset: 9779
    00002638: 	movl	iterations(%rip), %eax
    0000263e: 	movl	%eax, 0x64(%rsp)
.Ltmp1362:
    00002642: 	addl	$0x1, 0x20(%rsp)
    00002647: 	movl	0x20(%rsp), %eax
    0000264b: 	cmpl	0x64(%rsp), %eax
    0000264f: 	jl	.Ltmp1363 # Offset: 9807
.Ltmp1360:
    00002655: 	movq	0x10(%rsp), %rsi
    0000265a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002661: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9825
    00002666: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000266d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002674: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000267b: 	je	.Ltmp1364 # Offset: 9851
.Ltmp1438:
    00002681: 	movq	-0x20(%rax), %rbp
    00002685: 	callq	clock@PLT # Offset: 9861
    0000268a: 	pxor	%xmm0, %xmm0
    0000268e: 	movq	%rax, end_time(%rip)
    00002695: 	movq	%rbp, %rdi
    00002698: 	subq	start_time(%rip), %rax
    0000269f: 	cvtsi2sd	%rax, %xmm0
    000026a4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000026ac: 	callq	_Z13record_resultdPKc # Offset: 9900
    000026b1: 	movq	0x140(%rsp), %rdi
    000026b9: 	cmpq	0x18(%rsp), %rdi
    000026be: 	je	.Ltmp1365 # Offset: 9918
    000026c0: 	movq	0x150(%rsp), %rax
    000026c8: 	leaq	0x1(%rax), %rsi
    000026cc: 	callq	_ZdlPvm@PLT # Offset: 9932
.Ltmp1365:
    000026d1: 	movq	0x10(%rsp), %rbx
    000026d6: 	movq	0x50(%rsp), %rsi
    000026db: 	leaq	DATAat0x38409(%rip), %rdx
    000026e2: 	movq	%rbx, %rdi
    000026e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9957
    000026ea: 	movq	%rbx, %rsi
    000026ed: 	movq	%r15, %rdi
    000026f0: 	callq	"_Z10test_2termIh16custom_2term_addIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9968
    000026f5: 	movq	0x140(%rsp), %rdi
    000026fd: 	cmpq	0x18(%rsp), %rdi
    00002702: 	je	.Ltmp1366 # Offset: 9986
    00002704: 	movq	0x150(%rsp), %rax
    0000270c: 	leaq	0x1(%rax), %rsi
    00002710: 	callq	_ZdlPvm@PLT # Offset: 10000
.Ltmp1366:
    00002715: 	movq	0x50(%rsp), %rsi
    0000271a: 	movq	0x10(%rsp), %rdi
    0000271f: 	leaq	DATAat0x38414(%rip), %rdx
    00002726: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10022
    0000272b: 	callq	clock@PLT # Offset: 10027
    00002730: 	movq	%rax, start_time(%rip)
    00002737: 	movl	iterations(%rip), %eax
    0000273d: 	movl	%eax, 0x64(%rsp)
    00002741: 	testl	%eax, %eax
    00002743: 	jle	.Ltmp1367 # Offset: 10051
    00002749: 	movdqa	DATAat0x38620(%rip), %xmm5
    00002751: 	xorl	%ebp, %ebp
    00002753: 	leaq	0x2090(%rsp), %rbx
    0000275b: 	movaps	%xmm5, (%rsp)
    0000275f: 	nop # Size: 1
.Ltmp1370:
    00002760: 	movzbl	0x160(%rsp), %eax
    00002768: 	subb	0x161(%rsp), %al
    0000276f: 	pxor	%xmm2, %xmm2
    00002773: 	imull	%eax, %eax
    00002776: 	movb	%al, 0x20(%rsp)
    0000277a: 	movq	%r15, %rax
    0000277d: 	nopl	(%rax) # Size: 3
.Ltmp1368:
    00002780: 	movdqa	(%rax), %xmm0
    00002784: 	movdqu	0x1(%rax), %xmm4
    00002789: 	addq	$0x10, %rax
    0000278d: 	movdqa	(%rsp), %xmm7
    00002792: 	psubb	%xmm4, %xmm0
    00002796: 	movdqa	%xmm0, %xmm1
    0000279a: 	punpcklbw	%xmm0, %xmm1
    0000279e: 	punpckhbw	%xmm0, %xmm0
    000027a2: 	pmullw	%xmm1, %xmm1
    000027a6: 	pmullw	%xmm0, %xmm0
    000027aa: 	pand	%xmm7, %xmm1
    000027ae: 	pand	%xmm7, %xmm0
    000027b2: 	packuswb	%xmm0, %xmm1
    000027b6: 	paddb	%xmm1, %xmm2
    000027ba: 	cmpq	%rbx, %rax
    000027bd: 	jne	.Ltmp1368 # Offset: 10173
    000027bf: 	movzbl	0x2091(%rsp), %r9d
    000027c8: 	movzbl	0x2090(%rsp), %eax
    000027d0: 	movdqa	%xmm2, %xmm0
    000027d4: 	movzbl	0x2092(%rsp), %r8d
    000027dd: 	movzbl	0x2093(%rsp), %edi
    000027e5: 	psrldq	$0x8, %xmm0
    000027ea: 	subl	%r9d, %eax
    000027ed: 	movzbl	0x2094(%rsp), %edx
    000027f5: 	paddb	%xmm0, %xmm2
    000027f9: 	movzbl	0x2095(%rsp), %ecx
    00002801: 	subl	%r8d, %r9d
    00002804: 	imull	%eax, %eax
    00002807: 	subl	%edi, %r8d
    0000280a: 	addb	0x20(%rsp), %al
    0000280e: 	movb	%al, 0x20(%rsp)
    00002812: 	movl	%r9d, %eax
    00002815: 	subl	%edx, %edi
    00002817: 	subl	%ecx, %edx
    00002819: 	imull	%r9d, %eax
    0000281d: 	movzbl	0x20(%rsp), %r9d
    00002823: 	movb	%dl, 0x30(%rsp)
    00002827: 	pxor	%xmm0, %xmm0
    0000282b: 	movzbl	0x2096(%rsp), %edx
    00002833: 	psadbw	%xmm0, %xmm2
    00002837: 	movzbl	0x2097(%rsp), %esi
    0000283f: 	movzbl	0x209a(%rsp), %r14d
    00002848: 	movd	%xmm2, 0x60(%rsp)
    0000284e: 	movzbl	0x209b(%rsp), %r13d
    00002857: 	movzbl	0x209c(%rsp), %r12d
    00002860: 	addl	%eax, %r9d
    00002863: 	movl	%r8d, %eax
    00002866: 	subl	%edx, %ecx
    00002868: 	imull	%r8d, %eax
    0000286c: 	movb	%cl, 0x40(%rsp)
    00002870: 	subl	%esi, %edx
    00002872: 	movzbl	0x2098(%rsp), %ecx
    0000287a: 	movzbl	0x209d(%rsp), %r11d
    00002883: 	movb	%dl, 0x5c(%rsp)
    00002887: 	subl	%ecx, %esi
    00002889: 	movzbl	0x2099(%rsp), %edx
    00002891: 	movzbl	0x209e(%rsp), %r10d
    0000289a: 	movl	%eax, %r8d
    0000289d: 	movl	%edi, %eax
    0000289f: 	imull	%edi, %eax
    000028a2: 	addl	%r9d, %r8d
    000028a5: 	subl	%edx, %ecx
    000028a7: 	subl	%r14d, %edx
    000028aa: 	subl	%r13d, %r14d
    000028ad: 	subl	%r12d, %r13d
    000028b0: 	subl	%r11d, %r12d
    000028b3: 	subl	%r10d, %r11d
    000028b6: 	subb	0x209f(%rsp), %r10b
    000028be: 	movl	%eax, %edi
    000028c0: 	movzbl	0x30(%rsp), %eax
    000028c5: 	addl	%r8d, %edi
    000028c8: 	movl	%eax, %r8d
    000028cb: 	imull	%r8d, %eax
    000028cf: 	addl	%eax, %edi
    000028d1: 	movzbl	0x40(%rsp), %eax
    000028d6: 	imull	%eax, %eax
    000028d9: 	addl	%eax, %edi
    000028db: 	movzbl	0x5c(%rsp), %eax
    000028e0: 	imull	%eax, %eax
    000028e3: 	addl	%eax, %edi
    000028e5: 	movl	%esi, %eax
    000028e7: 	imull	%esi, %eax
    000028ea: 	movl	%eax, %esi
    000028ec: 	movl	%ecx, %eax
    000028ee: 	imull	%ecx, %eax
    000028f1: 	addl	%edi, %esi
    000028f3: 	movl	%eax, %ecx
    000028f5: 	movl	%edx, %eax
    000028f7: 	addl	%esi, %ecx
    000028f9: 	imull	%edx, %eax
    000028fc: 	movl	%eax, %edx
    000028fe: 	movl	%r14d, %eax
    00002901: 	imull	%r14d, %eax
    00002905: 	addl	%ecx, %edx
    00002907: 	movl	%eax, %r14d
    0000290a: 	movl	%r13d, %eax
    0000290d: 	imull	%r13d, %eax
    00002911: 	addl	%edx, %r14d
    00002914: 	movl	%eax, %r13d
    00002917: 	movl	%r12d, %eax
    0000291a: 	imull	%r12d, %eax
    0000291e: 	addl	%r14d, %r13d
    00002921: 	movl	%eax, %r12d
    00002924: 	movl	%r11d, %eax
    00002927: 	imull	%r11d, %eax
    0000292b: 	addl	%r13d, %r12d
    0000292e: 	movl	%eax, %r11d
    00002931: 	movl	%r10d, %eax
    00002934: 	imull	%r10d, %eax
    00002938: 	addl	%r12d, %r11d
    0000293b: 	movl	%eax, %r10d
    0000293e: 	addl	%r10d, %r11d
    00002941: 	addb	0x60(%rsp), %r11b
    00002946: 	je	.Ltmp1369 # Offset: 10566
    00002948: 	movl	current_test(%rip), %edx
    0000294e: 	leaq	DATAat0x381c8(%rip), %rsi
    00002955: 	movl	$0x1, %edi
    0000295a: 	xorl	%eax, %eax
    0000295c: 	callq	__printf_chk@PLT # Offset: 10588
    00002961: 	movl	iterations(%rip), %eax
    00002967: 	movl	%eax, 0x64(%rsp)
.Ltmp1369:
    0000296b: 	addl	$0x1, %ebp
    0000296e: 	cmpl	0x64(%rsp), %ebp
    00002972: 	jl	.Ltmp1370 # Offset: 10610
.Ltmp1367:
    00002978: 	movq	0x10(%rsp), %rsi
    0000297d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002984: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10628
    00002989: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002990: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002997: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000299e: 	je	.Ltmp1371 # Offset: 10654
.Ltmp1437:
    000029a4: 	movq	-0x20(%rax), %rbp
    000029a8: 	callq	clock@PLT # Offset: 10664
    000029ad: 	pxor	%xmm0, %xmm0
    000029b1: 	movq	%rax, end_time(%rip)
    000029b8: 	movq	%rbp, %rdi
    000029bb: 	subq	start_time(%rip), %rax
    000029c2: 	cvtsi2sd	%rax, %xmm0
    000029c7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000029cf: 	callq	_Z13record_resultdPKc # Offset: 10703
    000029d4: 	movq	0x140(%rsp), %rdi
    000029dc: 	cmpq	0x18(%rsp), %rdi
    000029e1: 	je	.Ltmp1372 # Offset: 10721
    000029e3: 	movq	0x150(%rsp), %rax
    000029eb: 	leaq	0x1(%rax), %rsi
    000029ef: 	callq	_ZdlPvm@PLT # Offset: 10735
.Ltmp1372:
    000029f4: 	movq	0x10(%rsp), %rbx
    000029f9: 	movq	0x50(%rsp), %rsi
    000029fe: 	leaq	DATAat0x38423(%rip), %rdx
    00002a05: 	movq	%rbx, %rdi
    00002a08: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10760
    00002a0d: 	movq	%rbx, %rsi
    00002a10: 	movq	%r15, %rdi
    00002a13: 	callq	"_Z10test_2termIh16custom_2term_subIhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10771
    00002a18: 	movq	0x140(%rsp), %rdi
    00002a20: 	cmpq	0x18(%rsp), %rdi
    00002a25: 	je	.Ltmp1373 # Offset: 10789
    00002a27: 	movq	0x150(%rsp), %rax
    00002a2f: 	leaq	0x1(%rax), %rsi
    00002a33: 	callq	_ZdlPvm@PLT # Offset: 10803
.Ltmp1373:
    00002a38: 	movq	0x50(%rsp), %rsi
    00002a3d: 	movq	0x10(%rsp), %rdi
    00002a42: 	leaq	DATAat0x3842e(%rip), %rdx
    00002a49: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10825
    00002a4e: 	callq	clock@PLT # Offset: 10830
    00002a53: 	movq	%rax, start_time(%rip)
    00002a5a: 	movl	iterations(%rip), %eax
    00002a60: 	movl	%eax, 0x5c(%rsp)
    00002a64: 	testl	%eax, %eax
    00002a66: 	jle	.Ltmp1374 # Offset: 10854
    00002a6c: 	movdqa	DATAat0x38620(%rip), %xmm4
    00002a74: 	movl	$0x0, 0x20(%rsp)
    00002a7c: 	leaq	0x2090(%rsp), %rbx
    00002a84: 	movaps	%xmm4, (%rsp)
    00002a88: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1377:
    00002a90: 	movzbl	0x160(%rsp), %edx
    00002a98: 	pxor	%xmm3, %xmm3
    00002a9c: 	movl	%edx, %eax
    00002a9e: 	addb	0x161(%rsp), %dl
    00002aa5: 	subb	0x161(%rsp), %al
    00002aac: 	imull	%edx, %eax
    00002aaf: 	movb	%al, 0x30(%rsp)
    00002ab3: 	movq	%r15, %rax
    00002ab6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1375:
    00002ac0: 	movdqu	0x1(%rax), %xmm4
    00002ac5: 	movdqa	(%rax), %xmm0
    00002ac9: 	addq	$0x10, %rax
    00002acd: 	movdqu	-0xf(%rax), %xmm2
    00002ad2: 	paddb	-0x10(%rax), %xmm2
    00002ad7: 	psubb	%xmm4, %xmm0
    00002adb: 	movdqa	(%rsp), %xmm5
    00002ae0: 	movdqa	%xmm0, %xmm1
    00002ae4: 	movdqa	%xmm2, %xmm4
    00002ae8: 	punpcklbw	%xmm0, %xmm1
    00002aec: 	punpcklbw	%xmm2, %xmm4
    00002af0: 	punpckhbw	%xmm0, %xmm0
    00002af4: 	punpckhbw	%xmm2, %xmm2
    00002af8: 	pmullw	%xmm4, %xmm1
    00002afc: 	pmullw	%xmm2, %xmm0
    00002b00: 	pand	%xmm5, %xmm1
    00002b04: 	pand	%xmm5, %xmm0
    00002b08: 	packuswb	%xmm0, %xmm1
    00002b0c: 	paddb	%xmm1, %xmm3
    00002b10: 	cmpq	%rbx, %rax
    00002b13: 	jne	.Ltmp1375 # Offset: 11027
    00002b15: 	movzbl	0x2090(%rsp), %r14d
    00002b1e: 	movdqa	%xmm3, %xmm0
    00002b22: 	movzbl	0x2091(%rsp), %r12d
    00002b2b: 	movzbl	0x2092(%rsp), %ebp
    00002b33: 	psrldq	$0x8, %xmm0
    00002b38: 	movzbl	0x2093(%rsp), %r11d
    00002b41: 	movl	%r14d, %eax
    00002b44: 	addl	%r12d, %r14d
    00002b47: 	paddb	%xmm0, %xmm3
    00002b4b: 	movzbl	0x2094(%rsp), %r10d
    00002b54: 	subl	%r12d, %eax
    00002b57: 	movzbl	0x2097(%rsp), %edi
    00002b5f: 	movzbl	0x2095(%rsp), %r9d
    00002b68: 	pxor	%xmm0, %xmm0
    00002b6c: 	imull	%r14d, %eax
    00002b70: 	movzbl	0x30(%rsp), %r14d
    00002b76: 	movzbl	0x2096(%rsp), %r8d
    00002b7f: 	psadbw	%xmm0, %xmm3
    00002b83: 	movzbl	0x2098(%rsp), %esi
    00002b8b: 	movd	%xmm3, 0x40(%rsp)
    00002b91: 	movzbl	0x209c(%rsp), %ecx
    00002b99: 	movzbl	0x209d(%rsp), %edx
    00002ba1: 	movzbl	0x209e(%rsp), %r13d
    00002baa: 	addl	%eax, %r14d
    00002bad: 	movl	%r12d, %eax
    00002bb0: 	addl	%ebp, %r12d
    00002bb3: 	subl	%ebp, %eax
    00002bb5: 	imull	%r12d, %eax
    00002bb9: 	leal	(%r14,%rax), %r12d
    00002bbd: 	movl	%ebp, %eax
    00002bbf: 	addl	%r11d, %ebp
    00002bc2: 	subl	%r11d, %eax
    00002bc5: 	imull	%ebp, %eax
    00002bc8: 	leal	(%r12,%rax), %ebp
    00002bcc: 	movl	%r11d, %eax
    00002bcf: 	addl	%r10d, %r11d
    00002bd2: 	subl	%r10d, %eax
    00002bd5: 	imull	%r11d, %eax
    00002bd9: 	leal	(%rbp,%rax), %r11d
    00002bde: 	movl	%r10d, %eax
    00002be1: 	addl	%r9d, %r10d
    00002be4: 	subl	%r9d, %eax
    00002be7: 	imull	%r10d, %eax
    00002beb: 	leal	(%r11,%rax), %r10d
    00002bef: 	movl	%r9d, %eax
    00002bf2: 	addl	%r8d, %r9d
    00002bf5: 	subl	%r8d, %eax
    00002bf8: 	imull	%r9d, %eax
    00002bfc: 	leal	(%r10,%rax), %r9d
    00002c00: 	movl	%r8d, %eax
    00002c03: 	addl	%edi, %r8d
    00002c06: 	subl	%edi, %eax
    00002c08: 	imull	%r8d, %eax
    00002c0c: 	leal	(%r9,%rax), %r8d
    00002c10: 	movl	%edi, %eax
    00002c12: 	addl	%esi, %edi
    00002c14: 	subl	%esi, %eax
    00002c16: 	imull	%edi, %eax
    00002c19: 	leal	(%r8,%rax), %edi
    00002c1d: 	movl	%esi, %eax
    00002c1f: 	addb	0x2099(%rsp), %sil
    00002c27: 	subb	0x2099(%rsp), %al
    00002c2e: 	imull	%esi, %eax
    00002c31: 	leal	(%rdi,%rax), %esi
    00002c34: 	movzbl	0x2099(%rsp), %eax
    00002c3c: 	movzbl	0x2099(%rsp), %edi
    00002c44: 	subb	0x209a(%rsp), %al
    00002c4b: 	addb	0x209a(%rsp), %dil
    00002c53: 	imull	%edi, %eax
    00002c56: 	movzbl	0x209a(%rsp), %edi
    00002c5e: 	addl	%eax, %esi
    00002c60: 	movzbl	0x209a(%rsp), %eax
    00002c68: 	subb	0x209b(%rsp), %al
    00002c6f: 	addb	0x209b(%rsp), %dil
    00002c77: 	imull	%edi, %eax
    00002c7a: 	movzbl	0x209b(%rsp), %edi
    00002c82: 	addl	%ecx, %edi
    00002c84: 	addl	%eax, %esi
    00002c86: 	movzbl	0x209b(%rsp), %eax
    00002c8e: 	subl	%ecx, %eax
    00002c90: 	imull	%edi, %eax
    00002c93: 	addl	%eax, %esi
    00002c95: 	leal	(%rdx,%rcx), %eax
    00002c98: 	subl	%edx, %ecx
    00002c9a: 	imull	%ecx, %eax
    00002c9d: 	leal	(%rsi,%rax), %ecx
    00002ca0: 	leal	(%rdx,%r13), %eax
    00002ca4: 	subl	%r13d, %edx
    00002ca7: 	imull	%edx, %eax
    00002caa: 	leal	(%rcx,%rax), %edx
    00002cad: 	movzbl	0x209f(%rsp), %ecx
    00002cb5: 	movl	%r13d, %eax
    00002cb8: 	subb	0x209f(%rsp), %al
    00002cbf: 	addl	%r13d, %ecx
    00002cc2: 	imull	%ecx, %eax
    00002cc5: 	addl	%eax, %edx
    00002cc7: 	addb	0x40(%rsp), %dl
    00002ccb: 	je	.Ltmp1376 # Offset: 11467
    00002ccd: 	movl	current_test(%rip), %edx
    00002cd3: 	leaq	DATAat0x381c8(%rip), %rsi
    00002cda: 	movl	$0x1, %edi
    00002cdf: 	xorl	%eax, %eax
    00002ce1: 	callq	__printf_chk@PLT # Offset: 11489
    00002ce6: 	movl	iterations(%rip), %eax
    00002cec: 	movl	%eax, 0x5c(%rsp)
.Ltmp1376:
    00002cf0: 	addl	$0x1, 0x20(%rsp)
    00002cf5: 	movl	0x20(%rsp), %eax
    00002cf9: 	cmpl	0x5c(%rsp), %eax
    00002cfd: 	jl	.Ltmp1377 # Offset: 11517
.Ltmp1374:
    00002d03: 	movq	0x10(%rsp), %rsi
    00002d08: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002d0f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11535
    00002d14: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d1b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d22: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d29: 	je	.Ltmp1378 # Offset: 11561
.Ltmp1436:
    00002d2f: 	movq	-0x20(%rax), %rbp
    00002d33: 	callq	clock@PLT # Offset: 11571
    00002d38: 	pxor	%xmm0, %xmm0
    00002d3c: 	movq	%rax, end_time(%rip)
    00002d43: 	movq	%rbp, %rdi
    00002d46: 	subq	start_time(%rip), %rax
    00002d4d: 	cvtsi2sd	%rax, %xmm0
    00002d52: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d5a: 	callq	_Z13record_resultdPKc # Offset: 11610
    00002d5f: 	movq	0x140(%rsp), %rdi
    00002d67: 	cmpq	0x18(%rsp), %rdi
    00002d6c: 	je	.Ltmp1379 # Offset: 11628
    00002d6e: 	movq	0x150(%rsp), %rax
    00002d76: 	leaq	0x1(%rax), %rsi
    00002d7a: 	callq	_ZdlPvm@PLT # Offset: 11642
.Ltmp1379:
    00002d7f: 	movq	0x50(%rsp), %rsi
    00002d84: 	movq	0x10(%rsp), %rdi
    00002d89: 	leaq	DATAat0x38440(%rip), %rdx
    00002d90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11664
    00002d95: 	callq	clock@PLT # Offset: 11669
    00002d9a: 	movl	iterations(%rip), %esi
    00002da0: 	movq	%rax, start_time(%rip)
    00002da7: 	testl	%esi, %esi
    00002da9: 	jle	.Ltmp1380 # Offset: 11689
    00002daf: 	movdqa	DATAat0x38620(%rip), %xmm6
    00002db7: 	xorl	%ebp, %ebp
    00002db9: 	leaq	0x2090(%rsp), %rbx
    00002dc1: 	leaq	DATAat0x381c8(%rip), %r12
    00002dc8: 	movaps	%xmm6, (%rsp)
    00002dcc: 	nopl	(%rax) # Size: 4
.Ltmp1383:
    00002dd0: 	movzbl	0x160(%rsp), %r9d
    00002dd9: 	movzbl	0x161(%rsp), %edi
    00002de1: 	movq	%r15, %rdx
    00002de4: 	pxor	%xmm3, %xmm3
    00002de8: 	movl	%r9d, %eax
    00002deb: 	imull	%r9d, %eax
    00002def: 	movl	%eax, %r9d
    00002df2: 	movl	%edi, %eax
    00002df4: 	imull	%edi, %eax
    00002df7: 	movl	%eax, %edi
    00002df9: 	nopl	(%rax) # Size: 7
.Ltmp1381:
    00002e00: 	movdqa	(%rdx), %xmm1
    00002e04: 	movdqa	(%rsp), %xmm5
    00002e09: 	addq	$0x10, %rdx
    00002e0d: 	movdqu	-0xf(%rdx), %xmm0
    00002e12: 	movdqa	%xmm1, %xmm2
    00002e16: 	punpcklbw	%xmm1, %xmm2
    00002e1a: 	punpckhbw	%xmm1, %xmm1
    00002e1e: 	pmullw	%xmm2, %xmm2
    00002e22: 	pmullw	%xmm1, %xmm1
    00002e26: 	pand	%xmm5, %xmm2
    00002e2a: 	pand	%xmm5, %xmm1
    00002e2e: 	packuswb	%xmm1, %xmm2
    00002e32: 	movdqa	%xmm0, %xmm1
    00002e36: 	punpcklbw	%xmm0, %xmm1
    00002e3a: 	punpckhbw	%xmm0, %xmm0
    00002e3e: 	pmullw	%xmm1, %xmm1
    00002e42: 	pmullw	%xmm0, %xmm0
    00002e46: 	pand	%xmm5, %xmm1
    00002e4a: 	pand	%xmm5, %xmm0
    00002e4e: 	packuswb	%xmm0, %xmm1
    00002e52: 	psubb	%xmm1, %xmm2
    00002e56: 	paddb	%xmm2, %xmm3
    00002e5a: 	cmpq	%rbx, %rdx
    00002e5d: 	jne	.Ltmp1381 # Offset: 11869
    00002e5f: 	movzbl	0x2090(%rsp), %ecx
    00002e67: 	movdqa	%xmm3, %xmm0
    00002e6b: 	movzbl	0x209f(%rsp), %r8d
    00002e74: 	psrldq	$0x8, %xmm0
    00002e79: 	movl	%ecx, %eax
    00002e7b: 	paddb	%xmm0, %xmm3
    00002e7f: 	pxor	%xmm0, %xmm0
    00002e83: 	imull	%ecx, %eax
    00002e86: 	psadbw	%xmm0, %xmm3
    00002e8a: 	movd	%xmm3, %edx
    00002e8e: 	movl	%eax, %ecx
    00002e90: 	movl	%r8d, %eax
    00002e93: 	imull	%r8d, %eax
    00002e97: 	addl	%r9d, %ecx
    00002e9a: 	subl	%edi, %ecx
    00002e9c: 	movl	%eax, %r8d
    00002e9f: 	subl	%r8d, %ecx
    00002ea2: 	addb	%dl, %cl
    00002ea4: 	je	.Ltmp1382 # Offset: 11940
    00002ea6: 	movl	current_test(%rip), %edx
    00002eac: 	movq	%r12, %rsi
    00002eaf: 	movl	$0x1, %edi
    00002eb4: 	xorl	%eax, %eax
    00002eb6: 	callq	__printf_chk@PLT # Offset: 11958
    00002ebb: 	movl	iterations(%rip), %esi
.Ltmp1382:
    00002ec1: 	addl	$0x1, %ebp
    00002ec4: 	cmpl	%esi, %ebp
    00002ec6: 	jl	.Ltmp1383 # Offset: 11974
.Ltmp1380:
    00002ecc: 	movq	0x10(%rsp), %rsi
    00002ed1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ed8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11992
    00002edd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ee4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002eeb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ef2: 	je	.Ltmp1384 # Offset: 12018
.Ltmp1435:
    00002ef8: 	movq	-0x20(%rax), %rbp
    00002efc: 	callq	clock@PLT # Offset: 12028
    00002f01: 	pxor	%xmm0, %xmm0
    00002f05: 	movq	%rax, end_time(%rip)
    00002f0c: 	movq	%rbp, %rdi
    00002f0f: 	subq	start_time(%rip), %rax
    00002f16: 	cvtsi2sd	%rax, %xmm0
    00002f1b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002f23: 	callq	_Z13record_resultdPKc # Offset: 12067
    00002f28: 	movq	0x140(%rsp), %rdi
    00002f30: 	cmpq	0x18(%rsp), %rdi
    00002f35: 	je	.Ltmp1385 # Offset: 12085
    00002f37: 	movq	0x150(%rsp), %rax
    00002f3f: 	leaq	0x1(%rax), %rsi
    00002f43: 	callq	_ZdlPvm@PLT # Offset: 12099
.Ltmp1385:
    00002f48: 	movq	0x50(%rsp), %rsi
    00002f4d: 	movq	0x10(%rsp), %rdi
    00002f52: 	leaq	DATAat0x3844e(%rip), %rdx
    00002f59: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12121
    00002f5e: 	callq	clock@PLT # Offset: 12126
    00002f63: 	movl	iterations(%rip), %ecx
    00002f69: 	xorl	%ebp, %ebp
    00002f6b: 	leaq	0x2090(%rsp), %rbx
    00002f73: 	movq	%rax, start_time(%rip)
    00002f7a: 	leaq	DATAat0x381c8(%rip), %r12
    00002f81: 	testl	%ecx, %ecx
    00002f83: 	jle	.Ltmp1386 # Offset: 12163
    00002f89: 	nopl	(%rax) # Size: 7
.Ltmp1389:
    00002f90: 	movzbl	0x161(%rsp), %r8d
    00002f99: 	movq	%r15, %rax
    00002f9c: 	pxor	%xmm0, %xmm0
    00002fa0: 	xorb	0x160(%rsp), %r8b
    00002fa8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1387:
    00002fb0: 	movdqu	0x1(%rax), %xmm1
    00002fb5: 	pxor	(%rax), %xmm1
    00002fb9: 	addq	$0x10, %rax
    00002fbd: 	paddb	%xmm1, %xmm0
    00002fc1: 	cmpq	%rbx, %rax
    00002fc4: 	jne	.Ltmp1387 # Offset: 12228
    00002fc6: 	movdqa	%xmm0, %xmm1
    00002fca: 	movzbl	0x209e(%rsp), %edi
    00002fd2: 	movzbl	0x2099(%rsp), %r9d
    00002fdb: 	psrldq	$0x8, %xmm1
    00002fe0: 	paddb	%xmm1, %xmm0
    00002fe4: 	pxor	%xmm1, %xmm1
    00002fe8: 	psadbw	%xmm1, %xmm0
    00002fec: 	movq	0x2090(%rsp), %xmm1
    00002ff5: 	movd	%xmm0, %esi
    00002ff9: 	movq	0x2091(%rsp), %xmm0
    00003002: 	pxor	%xmm1, %xmm0
    00003006: 	pxor	%xmm1, %xmm1
    0000300a: 	movdqa	%xmm0, %xmm3
    0000300e: 	psadbw	%xmm1, %xmm3
    00003012: 	movq	%xmm3, 0x98(%rsp)
    0000301b: 	movq	%xmm3, %rax
    00003020: 	movl	%eax, %edx
    00003022: 	movzbl	0x2098(%rsp), %eax
    0000302a: 	xorl	%r9d, %eax
    0000302d: 	xorb	0x209a(%rsp), %r9b
    00003035: 	addl	%r8d, %eax
    00003038: 	movzbl	0x209b(%rsp), %r8d
    00003041: 	xorb	0x209a(%rsp), %r8b
    00003049: 	addl	%r9d, %eax
    0000304c: 	addl	%r8d, %eax
    0000304f: 	movzbl	0x209c(%rsp), %r8d
    00003058: 	xorb	0x209b(%rsp), %r8b
    00003060: 	addl	%r8d, %eax
    00003063: 	movzbl	0x209c(%rsp), %r8d
    0000306c: 	xorb	0x209d(%rsp), %r8b
    00003074: 	addl	%r8d, %eax
    00003077: 	movzbl	0x209d(%rsp), %r8d
    00003080: 	xorl	%edi, %r8d
    00003083: 	xorb	0x209f(%rsp), %dil
    0000308b: 	addl	%r8d, %eax
    0000308e: 	addl	%edi, %eax
    00003090: 	addl	%esi, %eax
    00003092: 	addb	%dl, %al
    00003094: 	je	.Ltmp1388 # Offset: 12436
    00003096: 	movl	current_test(%rip), %edx
    0000309c: 	movq	%r12, %rsi
    0000309f: 	movl	$0x1, %edi
    000030a4: 	xorl	%eax, %eax
    000030a6: 	callq	__printf_chk@PLT # Offset: 12454
    000030ab: 	movl	iterations(%rip), %ecx
.Ltmp1388:
    000030b1: 	addl	$0x1, %ebp
    000030b4: 	cmpl	%ecx, %ebp
    000030b6: 	jl	.Ltmp1389 # Offset: 12470
.Ltmp1386:
    000030bc: 	movq	0x10(%rsp), %rsi
    000030c1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000030c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12488
    000030cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000030d4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000030db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000030e2: 	je	.Ltmp1390 # Offset: 12514
.Ltmp1434:
    000030e8: 	movq	-0x20(%rax), %rbp
    000030ec: 	callq	clock@PLT # Offset: 12524
    000030f1: 	pxor	%xmm0, %xmm0
    000030f5: 	movq	%rax, end_time(%rip)
    000030fc: 	movq	%rbp, %rdi
    000030ff: 	subq	start_time(%rip), %rax
    00003106: 	cvtsi2sd	%rax, %xmm0
    0000310b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003113: 	callq	_Z13record_resultdPKc # Offset: 12563
    00003118: 	movq	0x140(%rsp), %rdi
    00003120: 	cmpq	0x18(%rsp), %rdi
    00003125: 	je	.Ltmp1391 # Offset: 12581
    00003127: 	movq	0x150(%rsp), %rax
    0000312f: 	leaq	0x1(%rax), %rsi
    00003133: 	callq	_ZdlPvm@PLT # Offset: 12595
.Ltmp1391:
    00003138: 	movq	0x50(%rsp), %rsi
    0000313d: 	movq	0x10(%rsp), %rdi
    00003142: 	leaq	DATAat0x3845d(%rip), %rdx
    00003149: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12617
    0000314e: 	callq	clock@PLT # Offset: 12622
    00003153: 	movl	iterations(%rip), %r13d
    0000315a: 	xorl	%ebp, %ebp
    0000315c: 	leaq	0x2090(%rsp), %rbx
    00003164: 	movq	%rax, start_time(%rip)
    0000316b: 	leaq	DATAat0x381c8(%rip), %r14
    00003172: 	testl	%r13d, %r13d
    00003175: 	jle	.Ltmp1392 # Offset: 12661
    0000317b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1395:
    00003180: 	movzbl	0x161(%rsp), %r11d
    00003189: 	andb	0x160(%rsp), %r11b
    00003191: 	pxor	%xmm1, %xmm1
    00003195: 	movzbl	0x161(%rsp), %eax
    0000319d: 	notl	%r11d
    000031a0: 	orb	0x160(%rsp), %al
    000031a7: 	andl	%eax, %r11d
    000031aa: 	movq	%r15, %rax
    000031ad: 	nopl	(%rax) # Size: 3
.Ltmp1393:
    000031b0: 	movdqu	0x1(%rax), %xmm2
    000031b5: 	movdqu	0x1(%rax), %xmm0
    000031ba: 	addq	$0x10, %rax
    000031be: 	pand	-0x10(%rax), %xmm2
    000031c3: 	por	-0x10(%rax), %xmm0
    000031c8: 	pandn	%xmm0, %xmm2
    000031cc: 	paddb	%xmm2, %xmm1
    000031d0: 	cmpq	%rbx, %rax
    000031d3: 	jne	.Ltmp1393 # Offset: 12755
    000031d5: 	movdqa	%xmm1, %xmm0
    000031d9: 	pxor	%xmm6, %xmm6
    000031dd: 	pxor	%xmm7, %xmm7
    000031e1: 	movzbl	0x2099(%rsp), %r9d
    000031ea: 	psrldq	$0x8, %xmm0
    000031ef: 	movzbl	0x209b(%rsp), %edi
    000031f7: 	movzbl	0x2098(%rsp), %r10d
    00003200: 	paddb	%xmm0, %xmm1
    00003204: 	movzbl	0x209c(%rsp), %esi
    0000320c: 	movq	0x2090(%rsp), %xmm0
    00003215: 	psadbw	%xmm6, %xmm1
    00003219: 	orl	%r9d, %r10d
    0000321c: 	movzbl	0x209a(%rsp), %r8d
    00003225: 	movzbl	0x209d(%rsp), %ecx
    0000322d: 	movd	%xmm1, %eax
    00003231: 	movdqa	%xmm0, %xmm2
    00003235: 	movq	0x2091(%rsp), %xmm1
    0000323e: 	pand	%xmm1, %xmm2
    00003242: 	por	%xmm1, %xmm0
    00003246: 	pandn	%xmm0, %xmm2
    0000324a: 	movdqa	%xmm2, %xmm6
    0000324e: 	psadbw	%xmm7, %xmm6
    00003252: 	movq	%xmm6, 0x90(%rsp)
    0000325b: 	movq	%xmm6, %rdx
    00003260: 	movl	%edx, %r12d
    00003263: 	movzbl	0x2098(%rsp), %edx
    0000326b: 	andl	%r9d, %edx
    0000326e: 	notl	%edx
    00003270: 	andl	%r10d, %edx
    00003273: 	movl	%r8d, %r10d
    00003276: 	andl	%r9d, %r10d
    00003279: 	orl	%r8d, %r9d
    0000327c: 	addl	%r11d, %edx
    0000327f: 	notl	%r10d
    00003282: 	andl	%r9d, %r10d
    00003285: 	addl	%edx, %r10d
    00003288: 	movl	%edi, %edx
    0000328a: 	andl	%r8d, %edx
    0000328d: 	orl	%edi, %r8d
    00003290: 	notl	%edx
    00003292: 	andl	%r8d, %edx
    00003295: 	movl	%esi, %r8d
    00003298: 	andl	%edi, %r8d
    0000329b: 	orl	%esi, %edi
    0000329d: 	addl	%r10d, %edx
    000032a0: 	notl	%r8d
    000032a3: 	andl	%r8d, %edi
    000032a6: 	addl	%edi, %edx
    000032a8: 	movl	%esi, %edi
    000032aa: 	orl	%ecx, %esi
    000032ac: 	andl	%ecx, %edi
    000032ae: 	notl	%edi
    000032b0: 	andl	%edi, %esi
    000032b2: 	addl	%esi, %edx
    000032b4: 	movzbl	0x209e(%rsp), %esi
    000032bc: 	andl	%ecx, %esi
    000032be: 	orb	0x209e(%rsp), %cl
    000032c5: 	notl	%esi
    000032c7: 	andl	%esi, %ecx
    000032c9: 	addl	%ecx, %edx
    000032cb: 	movzbl	0x209e(%rsp), %ecx
    000032d3: 	andb	0x209f(%rsp), %cl
    000032da: 	movl	%ecx, %esi
    000032dc: 	movzbl	0x209e(%rsp), %ecx
    000032e4: 	orb	0x209f(%rsp), %cl
    000032eb: 	notl	%esi
    000032ed: 	andl	%esi, %ecx
    000032ef: 	addl	%ecx, %edx
    000032f1: 	addl	%edx, %eax
    000032f3: 	addb	%r12b, %al
    000032f6: 	je	.Ltmp1394 # Offset: 13046
    000032f8: 	movl	current_test(%rip), %edx
    000032fe: 	movq	%r14, %rsi
    00003301: 	movl	$0x1, %edi
    00003306: 	xorl	%eax, %eax
    00003308: 	callq	__printf_chk@PLT # Offset: 13064
    0000330d: 	movl	iterations(%rip), %r13d
.Ltmp1394:
    00003314: 	addl	$0x1, %ebp
    00003317: 	cmpl	%r13d, %ebp
    0000331a: 	jl	.Ltmp1395 # Offset: 13082
.Ltmp1392:
    00003320: 	movq	0x10(%rsp), %rsi
    00003325: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000332c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13100
    00003331: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003338: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000333f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003346: 	je	.Ltmp1396 # Offset: 13126
.Ltmp1433:
    0000334c: 	movq	-0x20(%rax), %rbp
    00003350: 	callq	clock@PLT # Offset: 13136
    00003355: 	pxor	%xmm0, %xmm0
    00003359: 	movq	%rax, end_time(%rip)
    00003360: 	movq	%rbp, %rdi
    00003363: 	subq	start_time(%rip), %rax
    0000336a: 	cvtsi2sd	%rax, %xmm0
    0000336f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003377: 	callq	_Z13record_resultdPKc # Offset: 13175
    0000337c: 	movq	0x140(%rsp), %rdi
    00003384: 	cmpq	0x18(%rsp), %rdi
    00003389: 	je	.Ltmp1397 # Offset: 13193
    0000338b: 	movq	0x150(%rsp), %rax
    00003393: 	leaq	0x1(%rax), %rsi
    00003397: 	callq	_ZdlPvm@PLT # Offset: 13207
.Ltmp1397:
    0000339c: 	movq	0x50(%rsp), %rsi
    000033a1: 	movq	0x10(%rsp), %rdi
    000033a6: 	leaq	DATAat0x38468(%rip), %rdx
    000033ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13229
    000033b2: 	callq	clock@PLT # Offset: 13234
    000033b7: 	movl	iterations(%rip), %ecx
    000033bd: 	xorl	%ebp, %ebp
    000033bf: 	leaq	0x2090(%rsp), %rbx
    000033c7: 	movq	%rax, start_time(%rip)
    000033ce: 	leaq	DATAat0x381c8(%rip), %r12
    000033d5: 	testl	%ecx, %ecx
    000033d7: 	jle	.Ltmp1398 # Offset: 13271
    000033dd: 	nopl	(%rax) # Size: 3
.Ltmp1401:
    000033e0: 	movzbl	0x161(%rsp), %r9d
    000033e9: 	movq	%r15, %rax
    000033ec: 	pxor	%xmm0, %xmm0
    000033f0: 	orb	0x160(%rsp), %r9b
    000033f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1399:
    00003400: 	movdqu	0x1(%rax), %xmm1
    00003405: 	por	(%rax), %xmm1
    00003409: 	addq	$0x10, %rax
    0000340d: 	paddb	%xmm1, %xmm0
    00003411: 	cmpq	%rbx, %rax
    00003414: 	jne	.Ltmp1399 # Offset: 13332
    00003416: 	movdqa	%xmm0, %xmm1
    0000341a: 	cvttsd2si	init_value(%rip), %edx
    00003422: 	movzbl	0x2099(%rsp), %r10d
    0000342b: 	movzbl	0x209e(%rsp), %r8d
    00003434: 	psrldq	$0x8, %xmm1
    00003439: 	paddb	%xmm1, %xmm0
    0000343d: 	pxor	%xmm1, %xmm1
    00003441: 	psadbw	%xmm1, %xmm0
    00003445: 	movq	0x2090(%rsp), %xmm1
    0000344e: 	movd	%xmm0, %edi
    00003452: 	shll	$0x6, %edx
    00003455: 	movq	0x2091(%rsp), %xmm0
    0000345e: 	por	%xmm1, %xmm0
    00003462: 	pxor	%xmm1, %xmm1
    00003466: 	movdqa	%xmm0, %xmm7
    0000346a: 	psadbw	%xmm1, %xmm7
    0000346e: 	movq	%xmm7, 0x88(%rsp)
    00003477: 	movq	%xmm7, %rax
    0000347c: 	movl	%eax, %esi
    0000347e: 	movzbl	0x2098(%rsp), %eax
    00003486: 	orl	%r10d, %eax
    00003489: 	orb	0x209a(%rsp), %r10b
    00003491: 	addl	%r9d, %eax
    00003494: 	movl	%r10d, %r9d
    00003497: 	addl	%r9d, %eax
    0000349a: 	movzbl	0x209b(%rsp), %r9d
    000034a3: 	orb	0x209a(%rsp), %r9b
    000034ab: 	addl	%r9d, %eax
    000034ae: 	movzbl	0x209c(%rsp), %r9d
    000034b7: 	orb	0x209b(%rsp), %r9b
    000034bf: 	addl	%r9d, %eax
    000034c2: 	movzbl	0x209c(%rsp), %r9d
    000034cb: 	orb	0x209d(%rsp), %r9b
    000034d3: 	addl	%r9d, %eax
    000034d6: 	movzbl	0x209d(%rsp), %r9d
    000034df: 	orl	%r8d, %r9d
    000034e2: 	orb	0x209f(%rsp), %r8b
    000034ea: 	addl	%r9d, %eax
    000034ed: 	addl	%r8d, %eax
    000034f0: 	addl	%edi, %eax
    000034f2: 	addl	%esi, %eax
    000034f4: 	cmpb	%al, %dl
    000034f6: 	je	.Ltmp1400 # Offset: 13558
    000034f8: 	movl	current_test(%rip), %edx
    000034fe: 	movq	%r12, %rsi
    00003501: 	movl	$0x1, %edi
    00003506: 	xorl	%eax, %eax
    00003508: 	callq	__printf_chk@PLT # Offset: 13576
    0000350d: 	movl	iterations(%rip), %ecx
.Ltmp1400:
    00003513: 	addl	$0x1, %ebp
    00003516: 	cmpl	%ecx, %ebp
    00003518: 	jl	.Ltmp1401 # Offset: 13592
.Ltmp1398:
    0000351e: 	movq	0x10(%rsp), %rsi
    00003523: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000352a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13610
    0000352f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003536: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000353d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003544: 	je	.Ltmp1402 # Offset: 13636
.Ltmp1432:
    0000354a: 	movq	-0x20(%rax), %rbp
    0000354e: 	callq	clock@PLT # Offset: 13646
    00003553: 	pxor	%xmm0, %xmm0
    00003557: 	movq	%rax, end_time(%rip)
    0000355e: 	movq	%rbp, %rdi
    00003561: 	subq	start_time(%rip), %rax
    00003568: 	cvtsi2sd	%rax, %xmm0
    0000356d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003575: 	callq	_Z13record_resultdPKc # Offset: 13685
    0000357a: 	movq	0x140(%rsp), %rdi
    00003582: 	cmpq	0x18(%rsp), %rdi
    00003587: 	je	.Ltmp1403 # Offset: 13703
    00003589: 	movq	0x150(%rsp), %rax
    00003591: 	leaq	0x1(%rax), %rsi
    00003595: 	callq	_ZdlPvm@PLT # Offset: 13717
.Ltmp1403:
    0000359a: 	movq	0x50(%rsp), %rsi
    0000359f: 	movq	0x10(%rsp), %rdi
    000035a4: 	leaq	DATAat0x38476(%rip), %rdx
    000035ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13739
    000035b0: 	callq	clock@PLT # Offset: 13744
    000035b5: 	movl	iterations(%rip), %ecx
    000035bb: 	xorl	%ebp, %ebp
    000035bd: 	leaq	0x2090(%rsp), %rbx
    000035c5: 	movq	%rax, start_time(%rip)
    000035cc: 	leaq	DATAat0x381c8(%rip), %r12
    000035d3: 	testl	%ecx, %ecx
    000035d5: 	jle	.Ltmp1404 # Offset: 13781
    000035db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1407:
    000035e0: 	movzbl	0x161(%rsp), %r9d
    000035e9: 	movq	%r15, %rax
    000035ec: 	pxor	%xmm0, %xmm0
    000035f0: 	orb	0x160(%rsp), %r9b
    000035f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1405:
    00003600: 	movdqu	0x1(%rax), %xmm1
    00003605: 	por	(%rax), %xmm1
    00003609: 	addq	$0x10, %rax
    0000360d: 	paddb	%xmm1, %xmm0
    00003611: 	cmpq	%rbx, %rax
    00003614: 	jne	.Ltmp1405 # Offset: 13844
    00003616: 	movdqa	%xmm0, %xmm1
    0000361a: 	cvttsd2si	init_value(%rip), %edx
    00003622: 	movzbl	0x2099(%rsp), %r10d
    0000362b: 	movzbl	0x209e(%rsp), %r8d
    00003634: 	psrldq	$0x8, %xmm1
    00003639: 	paddb	%xmm1, %xmm0
    0000363d: 	pxor	%xmm1, %xmm1
    00003641: 	psadbw	%xmm1, %xmm0
    00003645: 	movq	0x2090(%rsp), %xmm1
    0000364e: 	movd	%xmm0, %edi
    00003652: 	shll	$0x6, %edx
    00003655: 	movq	0x2091(%rsp), %xmm0
    0000365e: 	por	%xmm1, %xmm0
    00003662: 	pxor	%xmm1, %xmm1
    00003666: 	movdqa	%xmm0, %xmm3
    0000366a: 	psadbw	%xmm1, %xmm3
    0000366e: 	movq	%xmm3, 0x80(%rsp)
    00003677: 	movq	%xmm3, %rax
    0000367c: 	movl	%eax, %esi
    0000367e: 	movzbl	0x2098(%rsp), %eax
    00003686: 	orl	%r10d, %eax
    00003689: 	orb	0x209a(%rsp), %r10b
    00003691: 	addl	%r9d, %eax
    00003694: 	movl	%r10d, %r9d
    00003697: 	addl	%r9d, %eax
    0000369a: 	movzbl	0x209b(%rsp), %r9d
    000036a3: 	orb	0x209a(%rsp), %r9b
    000036ab: 	addl	%r9d, %eax
    000036ae: 	movzbl	0x209c(%rsp), %r9d
    000036b7: 	orb	0x209b(%rsp), %r9b
    000036bf: 	addl	%r9d, %eax
    000036c2: 	movzbl	0x209c(%rsp), %r9d
    000036cb: 	orb	0x209d(%rsp), %r9b
    000036d3: 	addl	%r9d, %eax
    000036d6: 	movzbl	0x209d(%rsp), %r9d
    000036df: 	orl	%r8d, %r9d
    000036e2: 	orb	0x209f(%rsp), %r8b
    000036ea: 	addl	%r9d, %eax
    000036ed: 	addl	%r8d, %eax
    000036f0: 	addl	%edi, %eax
    000036f2: 	addl	%esi, %eax
    000036f4: 	cmpb	%al, %dl
    000036f6: 	je	.Ltmp1406 # Offset: 14070
    000036f8: 	movl	current_test(%rip), %edx
    000036fe: 	movq	%r12, %rsi
    00003701: 	movl	$0x1, %edi
    00003706: 	xorl	%eax, %eax
    00003708: 	callq	__printf_chk@PLT # Offset: 14088
    0000370d: 	movl	iterations(%rip), %ecx
.Ltmp1406:
    00003713: 	addl	$0x1, %ebp
    00003716: 	cmpl	%ecx, %ebp
    00003718: 	jl	.Ltmp1407 # Offset: 14104
.Ltmp1404:
    0000371e: 	movq	0x10(%rsp), %rsi
    00003723: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000372a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14122
    0000372f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003736: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000373d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003744: 	je	.Ltmp1408 # Offset: 14148
.Ltmp1431:
    0000374a: 	movq	-0x20(%rax), %rbp
    0000374e: 	callq	clock@PLT # Offset: 14158
    00003753: 	pxor	%xmm0, %xmm0
    00003757: 	movq	%rax, end_time(%rip)
    0000375e: 	movq	%rbp, %rdi
    00003761: 	subq	start_time(%rip), %rax
    00003768: 	cvtsi2sd	%rax, %xmm0
    0000376d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003775: 	callq	_Z13record_resultdPKc # Offset: 14197
    0000377a: 	movq	0x140(%rsp), %rdi
    00003782: 	cmpq	0x18(%rsp), %rdi
    00003787: 	je	.Ltmp1409 # Offset: 14215
    00003789: 	movq	0x150(%rsp), %rax
    00003791: 	leaq	0x1(%rax), %rsi
    00003795: 	callq	_ZdlPvm@PLT # Offset: 14229
.Ltmp1409:
    0000379a: 	movq	0x50(%rsp), %rsi
    0000379f: 	movq	0x10(%rsp), %rdi
    000037a4: 	leaq	DATAat0x38480(%rip), %rdx
    000037ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14251
    000037b0: 	callq	clock@PLT # Offset: 14256
    000037b5: 	movl	iterations(%rip), %ecx
    000037bb: 	xorl	%ebp, %ebp
    000037bd: 	leaq	0x2090(%rsp), %rbx
    000037c5: 	movq	%rax, start_time(%rip)
    000037cc: 	leaq	DATAat0x381c8(%rip), %r12
    000037d3: 	testl	%ecx, %ecx
    000037d5: 	jle	.Ltmp1410 # Offset: 14293
    000037db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1413:
    000037e0: 	movzbl	0x161(%rsp), %r9d
    000037e9: 	movq	%r15, %rax
    000037ec: 	pxor	%xmm0, %xmm0
    000037f0: 	andb	0x160(%rsp), %r9b
    000037f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1411:
    00003800: 	movdqu	0x1(%rax), %xmm1
    00003805: 	pand	(%rax), %xmm1
    00003809: 	addq	$0x10, %rax
    0000380d: 	paddb	%xmm1, %xmm0
    00003811: 	cmpq	%rbx, %rax
    00003814: 	jne	.Ltmp1411 # Offset: 14356
    00003816: 	movdqa	%xmm0, %xmm1
    0000381a: 	cvttsd2si	init_value(%rip), %edx
    00003822: 	movzbl	0x2099(%rsp), %r10d
    0000382b: 	movzbl	0x209e(%rsp), %r8d
    00003834: 	psrldq	$0x8, %xmm1
    00003839: 	paddb	%xmm1, %xmm0
    0000383d: 	pxor	%xmm1, %xmm1
    00003841: 	psadbw	%xmm1, %xmm0
    00003845: 	movq	0x2090(%rsp), %xmm1
    0000384e: 	movd	%xmm0, %edi
    00003852: 	shll	$0x6, %edx
    00003855: 	movq	0x2091(%rsp), %xmm0
    0000385e: 	pand	%xmm1, %xmm0
    00003862: 	pxor	%xmm1, %xmm1
    00003866: 	movdqa	%xmm0, %xmm6
    0000386a: 	psadbw	%xmm1, %xmm6
    0000386e: 	movq	%xmm6, %rax
    00003873: 	movq	%xmm6, 0x78(%rsp)
    00003879: 	movl	%eax, %esi
    0000387b: 	movzbl	0x2098(%rsp), %eax
    00003883: 	andl	%r10d, %eax
    00003886: 	andb	0x209a(%rsp), %r10b
    0000388e: 	addl	%r9d, %eax
    00003891: 	movl	%r10d, %r9d
    00003894: 	addl	%r9d, %eax
    00003897: 	movzbl	0x209b(%rsp), %r9d
    000038a0: 	andb	0x209a(%rsp), %r9b
    000038a8: 	addl	%r9d, %eax
    000038ab: 	movzbl	0x209c(%rsp), %r9d
    000038b4: 	andb	0x209b(%rsp), %r9b
    000038bc: 	addl	%r9d, %eax
    000038bf: 	movzbl	0x209c(%rsp), %r9d
    000038c8: 	andb	0x209d(%rsp), %r9b
    000038d0: 	addl	%r9d, %eax
    000038d3: 	movzbl	0x209d(%rsp), %r9d
    000038dc: 	andl	%r8d, %r9d
    000038df: 	andb	0x209f(%rsp), %r8b
    000038e7: 	addl	%r9d, %eax
    000038ea: 	addl	%r8d, %eax
    000038ed: 	addl	%edi, %eax
    000038ef: 	addl	%esi, %eax
    000038f1: 	cmpb	%al, %dl
    000038f3: 	je	.Ltmp1412 # Offset: 14579
    000038f5: 	movl	current_test(%rip), %edx
    000038fb: 	movq	%r12, %rsi
    000038fe: 	movl	$0x1, %edi
    00003903: 	xorl	%eax, %eax
    00003905: 	callq	__printf_chk@PLT # Offset: 14597
    0000390a: 	movl	iterations(%rip), %ecx
.Ltmp1412:
    00003910: 	addl	$0x1, %ebp
    00003913: 	cmpl	%ecx, %ebp
    00003915: 	jl	.Ltmp1413 # Offset: 14613
.Ltmp1410:
    0000391b: 	movq	0x10(%rsp), %rsi
    00003920: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003927: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14631
    0000392c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003933: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000393a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003941: 	je	.Ltmp1414 # Offset: 14657
.Ltmp1430:
    00003947: 	movq	-0x20(%rax), %rbp
    0000394b: 	callq	clock@PLT # Offset: 14667
    00003950: 	pxor	%xmm0, %xmm0
    00003954: 	movq	%rax, end_time(%rip)
    0000395b: 	movq	%rbp, %rdi
    0000395e: 	subq	start_time(%rip), %rax
    00003965: 	cvtsi2sd	%rax, %xmm0
    0000396a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003972: 	callq	_Z13record_resultdPKc # Offset: 14706
    00003977: 	movq	0x140(%rsp), %rdi
    0000397f: 	cmpq	0x18(%rsp), %rdi
    00003984: 	je	.Ltmp1415 # Offset: 14724
    00003986: 	movq	0x150(%rsp), %rax
    0000398e: 	leaq	0x1(%rax), %rsi
    00003992: 	callq	_ZdlPvm@PLT # Offset: 14738
.Ltmp1415:
    00003997: 	movq	0x50(%rsp), %rsi
    0000399c: 	movq	0x10(%rsp), %rdi
    000039a1: 	leaq	DATAat0x3848f(%rip), %rdx
    000039a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14760
    000039ad: 	callq	clock@PLT # Offset: 14765
    000039b2: 	movl	iterations(%rip), %ecx
    000039b8: 	xorl	%ebp, %ebp
    000039ba: 	leaq	0x2090(%rsp), %rbx
    000039c2: 	movq	%rax, start_time(%rip)
    000039c9: 	leaq	DATAat0x381c8(%rip), %r12
    000039d0: 	testl	%ecx, %ecx
    000039d2: 	jle	.Ltmp1416 # Offset: 14802
    000039d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1419:
    000039e0: 	movzbl	0x161(%rsp), %r9d
    000039e9: 	movq	%r15, %rax
    000039ec: 	pxor	%xmm0, %xmm0
    000039f0: 	andb	0x160(%rsp), %r9b
    000039f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1417:
    00003a00: 	movdqu	0x1(%rax), %xmm1
    00003a05: 	pand	(%rax), %xmm1
    00003a09: 	addq	$0x10, %rax
    00003a0d: 	paddb	%xmm1, %xmm0
    00003a11: 	cmpq	%rbx, %rax
    00003a14: 	jne	.Ltmp1417 # Offset: 14868
    00003a16: 	movdqa	%xmm0, %xmm1
    00003a1a: 	cvttsd2si	init_value(%rip), %edx
    00003a22: 	movzbl	0x2099(%rsp), %r10d
    00003a2b: 	movzbl	0x209e(%rsp), %r8d
    00003a34: 	psrldq	$0x8, %xmm1
    00003a39: 	paddb	%xmm1, %xmm0
    00003a3d: 	pxor	%xmm1, %xmm1
    00003a41: 	psadbw	%xmm1, %xmm0
    00003a45: 	movq	0x2090(%rsp), %xmm1
    00003a4e: 	movd	%xmm0, %edi
    00003a52: 	shll	$0x6, %edx
    00003a55: 	movq	0x2091(%rsp), %xmm0
    00003a5e: 	pand	%xmm1, %xmm0
    00003a62: 	pxor	%xmm1, %xmm1
    00003a66: 	movdqa	%xmm0, %xmm7
    00003a6a: 	psadbw	%xmm1, %xmm7
    00003a6e: 	movq	%xmm7, %rax
    00003a73: 	movq	%xmm7, 0x70(%rsp)
    00003a79: 	movl	%eax, %esi
    00003a7b: 	movzbl	0x2098(%rsp), %eax
    00003a83: 	andl	%r10d, %eax
    00003a86: 	andb	0x209a(%rsp), %r10b
    00003a8e: 	addl	%r9d, %eax
    00003a91: 	movl	%r10d, %r9d
    00003a94: 	addl	%r9d, %eax
    00003a97: 	movzbl	0x209b(%rsp), %r9d
    00003aa0: 	andb	0x209a(%rsp), %r9b
    00003aa8: 	addl	%r9d, %eax
    00003aab: 	movzbl	0x209c(%rsp), %r9d
    00003ab4: 	andb	0x209b(%rsp), %r9b
    00003abc: 	addl	%r9d, %eax
    00003abf: 	movzbl	0x209c(%rsp), %r9d
    00003ac8: 	andb	0x209d(%rsp), %r9b
    00003ad0: 	addl	%r9d, %eax
    00003ad3: 	movzbl	0x209d(%rsp), %r9d
    00003adc: 	andl	%r8d, %r9d
    00003adf: 	andb	0x209f(%rsp), %r8b
    00003ae7: 	addl	%r9d, %eax
    00003aea: 	addl	%r8d, %eax
    00003aed: 	addl	%edi, %eax
    00003aef: 	addl	%esi, %eax
    00003af1: 	cmpb	%al, %dl
    00003af3: 	je	.Ltmp1418 # Offset: 15091
    00003af5: 	movl	current_test(%rip), %edx
    00003afb: 	movq	%r12, %rsi
    00003afe: 	movl	$0x1, %edi
    00003b03: 	xorl	%eax, %eax
    00003b05: 	callq	__printf_chk@PLT # Offset: 15109
    00003b0a: 	movl	iterations(%rip), %ecx
.Ltmp1418:
    00003b10: 	addl	$0x1, %ebp
    00003b13: 	cmpl	%ecx, %ebp
    00003b15: 	jl	.Ltmp1419 # Offset: 15125
.Ltmp1416:
    00003b1b: 	movq	0x10(%rsp), %rsi
    00003b20: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003b27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 15143
    00003b2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003b33: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003b3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003b41: 	je	.Ltmp1420 # Offset: 15169
.Ltmp1429:
    00003b47: 	movq	-0x20(%rax), %rbp
    00003b4b: 	callq	clock@PLT # Offset: 15179
    00003b50: 	pxor	%xmm0, %xmm0
    00003b54: 	movq	%rax, end_time(%rip)
    00003b5b: 	movq	%rbp, %rdi
    00003b5e: 	subq	start_time(%rip), %rax
    00003b65: 	cvtsi2sd	%rax, %xmm0
    00003b6a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003b72: 	callq	_Z13record_resultdPKc # Offset: 15218
    00003b77: 	movq	0x140(%rsp), %rdi
    00003b7f: 	cmpq	0x18(%rsp), %rdi
    00003b84: 	je	.Ltmp1421 # Offset: 15236
    00003b86: 	movq	0x150(%rsp), %rax
    00003b8e: 	leaq	0x1(%rax), %rsi
    00003b92: 	callq	_ZdlPvm@PLT # Offset: 15250
.Ltmp1421:
    00003b97: 	movq	0x50(%rsp), %rsi
    00003b9c: 	movq	0x10(%rsp), %rdi
    00003ba1: 	leaq	DATAat0x38550(%rip), %rdx
    00003ba8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 15272
    00003bad: 	movl	iterations(%rip), %esi
    00003bb3: 	movq	0x140(%rsp), %rdi
    00003bbb: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 15291
    00003bc0: 	movq	0x140(%rsp), %rdi
    00003bc8: 	cmpq	0x18(%rsp), %rdi
    00003bcd: 	je	.Ltmp1422 # Offset: 15309
    00003bcf: 	movq	0x150(%rsp), %rax
    00003bd7: 	leaq	0x1(%rax), %rsi
    00003bdb: 	callq	_ZdlPvm@PLT # Offset: 15323
.Ltmp1422:
    00003be0: 	movq	0x120(%rsp), %rdi
    00003be8: 	leaq	0x130(%rsp), %rax
    00003bf0: 	cmpq	%rax, %rdi
    00003bf3: 	je	.Ltmp1423 # Offset: 15347
    00003bf5: 	movq	0x130(%rsp), %rax
    00003bfd: 	leaq	0x1(%rax), %rsi
    00003c01: 	callq	_ZdlPvm@PLT # Offset: 15361
.Ltmp1423:
    00003c06: 	movq	0x100(%rsp), %rdi
    00003c0e: 	leaq	0x110(%rsp), %rax
    00003c16: 	cmpq	%rax, %rdi
    00003c19: 	je	.Ltmp1424 # Offset: 15385
    00003c1b: 	movq	0x110(%rsp), %rax
    00003c23: 	leaq	0x1(%rax), %rsi
    00003c27: 	callq	_ZdlPvm@PLT # Offset: 15399
.Ltmp1424:
    00003c2c: 	movq	0xe0(%rsp), %rdi
    00003c34: 	leaq	0xf0(%rsp), %rax
    00003c3c: 	cmpq	%rax, %rdi
    00003c3f: 	je	.Ltmp1425 # Offset: 15423
    00003c41: 	movq	0xf0(%rsp), %rax
    00003c49: 	leaq	0x1(%rax), %rsi
    00003c4d: 	callq	_ZdlPvm@PLT # Offset: 15437
.Ltmp1425:
    00003c52: 	movq	0xc0(%rsp), %rdi
    00003c5a: 	leaq	0xd0(%rsp), %rax
    00003c62: 	cmpq	%rax, %rdi
    00003c65: 	je	.Ltmp1426 # Offset: 15461
    00003c67: 	movq	0xd0(%rsp), %rax
    00003c6f: 	leaq	0x1(%rax), %rsi
    00003c73: 	callq	_ZdlPvm@PLT # Offset: 15475
.Ltmp1426:
    00003c78: 	movq	0x20a8(%rsp), %rax
    00003c80: 	subq	%fs:0x28, %rax
    00003c89: 	jne	.Ltmp1427 # Offset: 15497
    00003c8f: 	addq	$0x20b8, %rsp
    00003c96: 	popq	%rbx
    00003c97: 	popq	%rbp
    00003c98: 	popq	%r12
    00003c9a: 	popq	%r13
    00003c9c: 	popq	%r14
    00003c9e: 	popq	%r15
    00003ca0: 	retq # Offset: 15520
.Ltmp1228:
    00003ca1: 	movq	-0x8(%rdx), %rax
    00003ca5: 	addq	$0x200, %rax
    00003cab: 	jmp	.Ltmp1428 # Offset: 15531
.Ltmp1420:
    00003cb0: 	movq	-0x8(%rdx), %rax
    00003cb4: 	addq	$0x200, %rax
    00003cba: 	jmp	.Ltmp1429 # Offset: 15546
.Ltmp1414:
    00003cbf: 	movq	-0x8(%rdx), %rax
    00003cc3: 	addq	$0x200, %rax
    00003cc9: 	jmp	.Ltmp1430 # Offset: 15561
.Ltmp1408:
    00003cce: 	movq	-0x8(%rdx), %rax
    00003cd2: 	addq	$0x200, %rax
    00003cd8: 	jmp	.Ltmp1431 # Offset: 15576
.Ltmp1402:
    00003cdd: 	movq	-0x8(%rdx), %rax
    00003ce1: 	addq	$0x200, %rax
    00003ce7: 	jmp	.Ltmp1432 # Offset: 15591
.Ltmp1396:
    00003cec: 	movq	-0x8(%rdx), %rax
    00003cf0: 	addq	$0x200, %rax
    00003cf6: 	jmp	.Ltmp1433 # Offset: 15606
.Ltmp1390:
    00003cfb: 	movq	-0x8(%rdx), %rax
    00003cff: 	addq	$0x200, %rax
    00003d05: 	jmp	.Ltmp1434 # Offset: 15621
.Ltmp1384:
    00003d0a: 	movq	-0x8(%rdx), %rax
    00003d0e: 	addq	$0x200, %rax
    00003d14: 	jmp	.Ltmp1435 # Offset: 15636
.Ltmp1378:
    00003d19: 	movq	-0x8(%rdx), %rax
    00003d1d: 	addq	$0x200, %rax
    00003d23: 	jmp	.Ltmp1436 # Offset: 15651
.Ltmp1371:
    00003d28: 	movq	-0x8(%rdx), %rax
    00003d2c: 	addq	$0x200, %rax
    00003d32: 	jmp	.Ltmp1437 # Offset: 15666
.Ltmp1364:
    00003d37: 	movq	-0x8(%rdx), %rax
    00003d3b: 	addq	$0x200, %rax
    00003d41: 	jmp	.Ltmp1438 # Offset: 15681
.Ltmp1357:
    00003d46: 	movq	-0x8(%rdx), %rax
    00003d4a: 	addq	$0x200, %rax
    00003d50: 	jmp	.Ltmp1439 # Offset: 15696
.Ltmp1351:
    00003d55: 	movq	-0x8(%rdx), %rax
    00003d59: 	addq	$0x200, %rax
    00003d5f: 	jmp	.Ltmp1440 # Offset: 15711
.Ltmp1345:
    00003d64: 	movq	-0x8(%rdx), %rax
    00003d68: 	addq	$0x200, %rax
    00003d6e: 	jmp	.Ltmp1441 # Offset: 15726
.Ltmp1339:
    00003d73: 	movq	-0x8(%rdx), %rax
    00003d77: 	addq	$0x200, %rax
    00003d7d: 	jmp	.Ltmp1442 # Offset: 15741
.Ltmp1333:
    00003d82: 	movq	-0x8(%rdx), %rax
    00003d86: 	addq	$0x200, %rax
    00003d8c: 	jmp	.Ltmp1443 # Offset: 15756
.Ltmp1327:
    00003d91: 	movq	-0x8(%rdx), %rax
    00003d95: 	addq	$0x200, %rax
    00003d9b: 	jmp	.Ltmp1444 # Offset: 15771
.Ltmp1321:
    00003da0: 	movq	-0x8(%rdx), %rax
    00003da4: 	addq	$0x200, %rax
    00003daa: 	jmp	.Ltmp1445 # Offset: 15786
.Ltmp1315:
    00003daf: 	movq	-0x8(%rdx), %rax
    00003db3: 	addq	$0x200, %rax
    00003db9: 	jmp	.Ltmp1446 # Offset: 15801
.Ltmp1313:
    00003dbe: 	movq	-0x8(%rdx), %rax
    00003dc2: 	addq	$0x200, %rax
    00003dc8: 	jmp	.Ltmp1447 # Offset: 15816
.Ltmp1311:
    00003dcd: 	movq	-0x8(%rdx), %rax
    00003dd1: 	addq	$0x200, %rax
    00003dd7: 	jmp	.Ltmp1448 # Offset: 15831
.Ltmp1309:
    00003ddc: 	movq	-0x8(%rdx), %rax
    00003de0: 	addq	$0x200, %rax
    00003de6: 	jmp	.Ltmp1449 # Offset: 15846
.Ltmp1307:
    00003deb: 	movq	-0x8(%rdx), %rax
    00003def: 	addq	$0x200, %rax
    00003df5: 	jmp	.Ltmp1450 # Offset: 15861
.Ltmp1305:
    00003dfa: 	movq	-0x8(%rdx), %rax
    00003dfe: 	addq	$0x200, %rax
    00003e04: 	jmp	.Ltmp1451 # Offset: 15876
.Ltmp1303:
    00003e09: 	movq	-0x8(%rdx), %rax
    00003e0d: 	addq	$0x200, %rax
    00003e13: 	jmp	.Ltmp1452 # Offset: 15891
.Ltmp1301:
    00003e18: 	movq	-0x8(%rdx), %rax
    00003e1c: 	addq	$0x200, %rax
    00003e22: 	jmp	.Ltmp1453 # Offset: 15906
.Ltmp1299:
    00003e27: 	movq	-0x8(%rdx), %rax
    00003e2b: 	addq	$0x200, %rax
    00003e31: 	jmp	.Ltmp1454 # Offset: 15921
.Ltmp1297:
    00003e36: 	movq	-0x8(%rdx), %rax
    00003e3a: 	addq	$0x200, %rax
    00003e40: 	jmp	.Ltmp1455 # Offset: 15936
.Ltmp1295:
    00003e45: 	movq	-0x8(%rdx), %rax
    00003e49: 	addq	$0x200, %rax
    00003e4f: 	jmp	.Ltmp1456 # Offset: 15951
.Ltmp1293:
    00003e54: 	movq	-0x8(%rdx), %rax
    00003e58: 	addq	$0x200, %rax
    00003e5e: 	jmp	.Ltmp1457 # Offset: 15966
.Ltmp1291:
    00003e63: 	movq	-0x8(%rdx), %rax
    00003e67: 	addq	$0x200, %rax
    00003e6d: 	jmp	.Ltmp1458 # Offset: 15981
.Ltmp1289:
    00003e72: 	movq	-0x8(%rdx), %rax
    00003e76: 	addq	$0x200, %rax
    00003e7c: 	jmp	.Ltmp1459 # Offset: 15996
.Ltmp1287:
    00003e81: 	movq	-0x8(%rdx), %rax
    00003e85: 	addq	$0x200, %rax
    00003e8b: 	jmp	.Ltmp1460 # Offset: 16011
.Ltmp1285:
    00003e90: 	movq	-0x8(%rdx), %rax
    00003e94: 	addq	$0x200, %rax
    00003e9a: 	jmp	.Ltmp1461 # Offset: 16026
.Ltmp1283:
    00003e9f: 	movq	-0x8(%rdx), %rax
    00003ea3: 	addq	$0x200, %rax
    00003ea9: 	jmp	.Ltmp1462 # Offset: 16041
.Ltmp1281:
    00003eae: 	movq	-0x8(%rdx), %rax
    00003eb2: 	addq	$0x200, %rax
    00003eb8: 	jmp	.Ltmp1463 # Offset: 16056
.Ltmp1274:
    00003ebd: 	movq	-0x8(%rdx), %rax
    00003ec1: 	addq	$0x200, %rax
    00003ec7: 	jmp	.Ltmp1464 # Offset: 16071
.Ltmp1268:
    00003ecc: 	movq	-0x8(%rdx), %rax
    00003ed0: 	addq	$0x200, %rax
    00003ed6: 	jmp	.Ltmp1465 # Offset: 16086
.Ltmp1262:
    00003edb: 	movq	-0x8(%rdx), %rax
    00003edf: 	addq	$0x200, %rax
    00003ee5: 	jmp	.Ltmp1466 # Offset: 16101
.Ltmp1254:
    00003eea: 	movq	-0x8(%rdx), %rax
    00003eee: 	addq	$0x200, %rax
    00003ef4: 	jmp	.Ltmp1467 # Offset: 16116
.Ltmp1246:
    00003ef9: 	movq	-0x8(%rdx), %rax
    00003efd: 	addq	$0x200, %rax
    00003f03: 	jmp	.Ltmp1468 # Offset: 16131
.Ltmp1240:
    00003f08: 	movq	-0x8(%rdx), %rax
    00003f0c: 	addq	$0x200, %rax
    00003f12: 	jmp	.Ltmp1469 # Offset: 16146
.Ltmp1234:
    00003f17: 	movq	-0x8(%rdx), %rax
    00003f1b: 	addq	$0x200, %rax
    00003f21: 	jmp	.Ltmp1470 # Offset: 16161
.Ltmp1427:
    00003f26: 	callq	__stack_chk_fail@PLT # Offset: 16166
    00003f2b: 	endbr64
.Ltmp1472:
    00003f2f: 	movq	%rax, %rbx
    00003f32: 	jmp	.Ltmp1471 # Offset: 16178
    00003f34: 	endbr64
    00003f38: 	jmp	.Ltmp1472 # Offset: 16184
    00003f3a: 	endbr64
    00003f3e: 	jmp	.Ltmp1472 # Offset: 16190
    00003f40: 	endbr64
    00003f44: 	jmp	.Ltmp1472 # Offset: 16196
.Ltmp1471:
    00003f46: 	movq	0x140(%rsp), %rdi
    00003f4e: 	cmpq	0x18(%rsp), %rdi
    00003f53: 	je	.Ltmp1473 # Offset: 16211
    00003f55: 	movq	0x150(%rsp), %rax
    00003f5d: 	leaq	0x1(%rax), %rsi
    00003f61: 	callq	_ZdlPvm@PLT # Offset: 16225
.Ltmp1473:
    00003f66: 	movq	0xe0(%rsp), %rdi
    00003f6e: 	leaq	0xf0(%rsp), %rax
    00003f76: 	cmpq	%rax, %rdi
    00003f79: 	je	.Ltmp1474 # Offset: 16249
    00003f7b: 	movq	0xf0(%rsp), %rax
    00003f83: 	leaq	0x1(%rax), %rsi
    00003f87: 	callq	_ZdlPvm@PLT # Offset: 16263
.Ltmp1474:
    00003f8c: 	movq	0xc0(%rsp), %rdi
    00003f94: 	leaq	0xd0(%rsp), %rax
    00003f9c: 	cmpq	%rax, %rdi
    00003f9f: 	je	.Ltmp1475 # Offset: 16287
    00003fa1: 	movq	0xd0(%rsp), %rax
    00003fa9: 	leaq	0x1(%rax), %rsi
    00003fad: 	callq	_ZdlPvm@PLT # Offset: 16301
.Ltmp1475:
    00003fb2: 	movq	%rbx, %rdi
    00003fb5: 	callq	_Unwind_Resume@PLT # Offset: 16309
    00003fba: 	endbr64
    00003fbe: 	jmp	.Ltmp1472 # Offset: 16318
    00003fc3: 	endbr64
    00003fc7: 	jmp	.Ltmp1472 # Offset: 16327
    00003fcc: 	endbr64
    00003fd0: 	jmp	.Ltmp1472 # Offset: 16336
    00003fd5: 	endbr64
    00003fd9: 	jmp	.Ltmp1472 # Offset: 16345
    00003fde: 	endbr64
.Ltmp1477:
    00003fe2: 	movq	%rax, %rbx
    00003fe5: 	jmp	.Ltmp1476 # Offset: 16357
    00003fe7: 	endbr64
    00003feb: 	jmp	.Ltmp1477 # Offset: 16363
    00003fed: 	endbr64
    00003ff1: 	jmp	.Ltmp1477 # Offset: 16369
    00003ff3: 	endbr64
    00003ff7: 	jmp	.Ltmp1477 # Offset: 16375
.Ltmp1476:
    00003ff9: 	movq	0x140(%rsp), %rdi
    00004001: 	cmpq	0x18(%rsp), %rdi
    00004006: 	je	.Ltmp1474 # Offset: 16390
.Ltmp1480:
    00004008: 	movq	0x150(%rsp), %rax
    00004010: 	leaq	0x1(%rax), %rsi
    00004014: 	callq	_ZdlPvm@PLT # Offset: 16404
    00004019: 	jmp	.Ltmp1474 # Offset: 16409
    0000401e: 	endbr64
    00004022: 	jmp	.Ltmp1472 # Offset: 16418
    00004027: 	endbr64
    0000402b: 	jmp	.Ltmp1472 # Offset: 16427
    00004030: 	endbr64
    00004034: 	jmp	.Ltmp1472 # Offset: 16436
    00004039: 	endbr64
    0000403d: 	movq	%rax, %rbx
    00004040: 	jmp	.Ltmp1473 # Offset: 16448
    00004045: 	endbr64
    00004049: 	jmp	.Ltmp1477 # Offset: 16457
    0000404b: 	endbr64
    0000404f: 	jmp	.Ltmp1477 # Offset: 16463
    00004051: 	endbr64
    00004055: 	jmp	.Ltmp1477 # Offset: 16469
    00004057: 	endbr64
    0000405b: 	jmp	.Ltmp1477 # Offset: 16475
    0000405d: 	endbr64
    00004061: 	jmp	.Ltmp1477 # Offset: 16481
    00004066: 	endbr64
    0000406a: 	jmp	.Ltmp1477 # Offset: 16490
    0000406f: 	endbr64
    00004073: 	jmp	.Ltmp1477 # Offset: 16499
    00004078: 	endbr64
    0000407c: 	jmp	.Ltmp1477 # Offset: 16508
    00004081: 	endbr64
    00004085: 	jmp	.Ltmp1477 # Offset: 16517
    0000408a: 	endbr64
    0000408e: 	movq	%rax, %rbx
    00004091: 	jmp	.Ltmp1474 # Offset: 16529
    00004096: 	endbr64
    0000409a: 	movq	%rax, %rbx
    0000409d: 	jmp	.Ltmp1478 # Offset: 16541
    0000409f: 	endbr64
.Ltmp1481:
    000040a3: 	movq	%rax, %rbx
    000040a6: 	jmp	.Ltmp1479 # Offset: 16550
.Ltmp1478:
    000040a8: 	movq	0x140(%rsp), %rdi
    000040b0: 	leaq	0x150(%rsp), %rax
    000040b8: 	cmpq	%rax, %rdi
    000040bb: 	jne	.Ltmp1480 # Offset: 16571
    000040c1: 	jmp	.Ltmp1474 # Offset: 16577
    000040c6: 	endbr64
    000040ca: 	jmp	.Ltmp1481 # Offset: 16586
    000040cc: 	endbr64
    000040d0: 	jmp	.Ltmp1481 # Offset: 16592
    000040d2: 	endbr64
    000040d6: 	jmp	.Ltmp1481 # Offset: 16598
    000040d8: 	endbr64
    000040dc: 	jmp	.Ltmp1481 # Offset: 16604
.Ltmp1479:
    000040de: 	movq	0x140(%rsp), %rdi
    000040e6: 	cmpq	0x18(%rsp), %rdi
    000040eb: 	je	.Ltmp1482 # Offset: 16619
    000040ed: 	movq	0x150(%rsp), %rax
    000040f5: 	leaq	0x1(%rax), %rsi
    000040f9: 	callq	_ZdlPvm@PLT # Offset: 16633
.Ltmp1482:
    000040fe: 	movq	0x120(%rsp), %rdi
    00004106: 	leaq	0x130(%rsp), %rax
    0000410e: 	cmpq	%rax, %rdi
    00004111: 	je	.Ltmp1483 # Offset: 16657
    00004113: 	movq	0x130(%rsp), %rax
    0000411b: 	leaq	0x1(%rax), %rsi
    0000411f: 	callq	_ZdlPvm@PLT # Offset: 16671
.Ltmp1483:
    00004124: 	movq	0x100(%rsp), %rdi
    0000412c: 	leaq	0x110(%rsp), %rax
    00004134: 	cmpq	%rax, %rdi
    00004137: 	je	.Ltmp1473 # Offset: 16695
    0000413d: 	movq	0x110(%rsp), %rax
    00004145: 	leaq	0x1(%rax), %rsi
    00004149: 	callq	_ZdlPvm@PLT # Offset: 16713
    0000414e: 	jmp	.Ltmp1473 # Offset: 16718
    00004153: 	endbr64
    00004157: 	jmp	.Ltmp1481 # Offset: 16727
    0000415c: 	endbr64
    00004160: 	jmp	.Ltmp1481 # Offset: 16736
    00004165: 	endbr64
    00004169: 	jmp	.Ltmp1481 # Offset: 16745
    0000416e: 	endbr64
    00004172: 	jmp	.Ltmp1481 # Offset: 16754
    00004177: 	endbr64
    0000417b: 	jmp	.Ltmp1481 # Offset: 16763
    00004180: 	endbr64
    00004184: 	jmp	.Ltmp1481 # Offset: 16772
    00004189: 	endbr64
    0000418d: 	jmp	.Ltmp1481 # Offset: 16781
    00004192: 	endbr64
    00004196: 	movq	%rax, %rbx
    00004199: 	jmp	.Ltmp1482 # Offset: 16793
    0000419e: 	endbr64
.Ltmp1485:
    000041a2: 	movq	%rax, %rbx
    000041a5: 	jmp	.Ltmp1484 # Offset: 16805
    000041a7: 	endbr64
    000041ab: 	jmp	.Ltmp1485 # Offset: 16811
    000041ad: 	endbr64
    000041b1: 	jmp	.Ltmp1485 # Offset: 16817
    000041b3: 	endbr64
    000041b7: 	movq	%rax, %rbx
    000041ba: 	jmp	.Ltmp1483 # Offset: 16826
.Ltmp1484:
    000041bf: 	movq	0x140(%rsp), %rdi
    000041c7: 	cmpq	0x18(%rsp), %rdi
    000041cc: 	je	.Ltmp1483 # Offset: 16844
    000041d2: 	movq	0x150(%rsp), %rax
    000041da: 	leaq	0x1(%rax), %rsi
    000041de: 	callq	_ZdlPvm@PLT # Offset: 16862
    000041e3: 	jmp	.Ltmp1483 # Offset: 16867
    000041e8: 	endbr64
    000041ec: 	jmp	.Ltmp1481 # Offset: 16876
    000041f1: 	endbr64
    000041f5: 	jmp	.Ltmp1485 # Offset: 16885
    000041f7: 	endbr64
    000041fb: 	jmp	.Ltmp1485 # Offset: 16891
    000041fd: 	endbr64
    00004201: 	jmp	.Ltmp1485 # Offset: 16897
    00004203: 	endbr64
    00004207: 	jmp	.Ltmp1472 # Offset: 16903
    0000420c: 	endbr64
    00004210: 	jmp	.Ltmp1472 # Offset: 16912
    00004215: 	endbr64
    00004219: 	jmp	.Ltmp1485 # Offset: 16921
    0000421b: 	endbr64
    0000421f: 	jmp	.Ltmp1485 # Offset: 16927
    00004221: 	endbr64
    00004225: 	jmp	.Ltmp1472 # Offset: 16933
    0000422a: 	endbr64
    0000422e: 	jmp	.Ltmp1472 # Offset: 16942
    00004233: 	endbr64
    00004237: 	jmp	.Ltmp1472 # Offset: 16951
    0000423c: 	endbr64
    00004240: 	jmp	.Ltmp1472 # Offset: 16960
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvd"

Binary Function "_Z10test_2termIi16custom_2term_subIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0x15770
  Size        : 0x481
  MaxSize     : 0x490
  Offset      : 0x15770
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi16custom_2term_subIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r15d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r15d, %r15d
    00000043: 	jle	.Ltmp1486 # Offset: 67
    00000049: 	leal	-0x1(%r13), %r14d
    0000004d: 	leal	-0x2(%r13), %eax
    00000051: 	xorl	%r12d, %r12d
    00000054: 	movl	%eax, 0xc(%rsp)
    00000058: 	movl	%r14d, %eax
    0000005b: 	shrl	$0x2, %eax
    0000005e: 	subl	$0x1, %eax
    00000061: 	shlq	$0x4, %rax
    00000065: 	leaq	0x10(%rbx,%rax), %rbp
    0000006a: 	movl	%r14d, %eax
    0000006d: 	andl	$-0x4, %eax
    00000070: 	movl	%eax, 0x10(%rsp)
    00000074: 	addl	$0x1, %eax
    00000077: 	movl	%eax, 0x14(%rsp)
.Ltmp1493:
    0000007b: 	movl	0x4(%rbx), %r8d
    0000007f: 	movl	(%rbx), %edi
.Ltmp1501:
    00000081: 	movl	%r8d, %edx
    00000084: 	movl	%edi, %eax
    00000086: 	imull	%edi, %edx
    00000089: 	imull	%edi, %eax
    0000008c: 	addl	%edx, %edx
    0000008e: 	subl	%edx, %eax
    00000090: 	movl	%r8d, %edx
    00000093: 	imull	%r8d, %edx
    00000097: 	addl	%edx, %eax
    00000099: 	cmpl	$0x1, %r13d
    0000009d: 	jle	.Ltmp1487 # Offset: 157
    000000a3: 	cmpl	$0x2, 0xc(%rsp)
    000000a8: 	jbe	.Ltmp1488 # Offset: 168
    000000ae: 	movq	%rbx, %rdx
    000000b1: 	pxor	%xmm4, %xmm4
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp1489:
    000000b8: 	movdqu	(%rdx), %xmm0
    000000bc: 	movdqu	0x4(%rdx), %xmm1
    000000c1: 	addq	$0x10, %rdx
    000000c5: 	movdqa	%xmm0, %xmm5
    000000c9: 	movdqa	%xmm0, %xmm2
    000000cd: 	psrlq	$0x20, %xmm5
    000000d2: 	pmuludq	%xmm0, %xmm2
    000000d6: 	movdqa	%xmm5, %xmm3
    000000da: 	pmuludq	%xmm1, %xmm0
    000000de: 	pmuludq	%xmm5, %xmm3
    000000e2: 	pshufd	$0x8, %xmm2, %xmm2
    000000e7: 	pshufd	$0x8, %xmm0, %xmm0
    000000ec: 	pshufd	$0x8, %xmm3, %xmm3
    000000f1: 	punpckldq	%xmm3, %xmm2
    000000f5: 	movdqa	%xmm1, %xmm3
    000000f9: 	psrlq	$0x20, %xmm3
    000000fe: 	pmuludq	%xmm1, %xmm1
    00000102: 	pmuludq	%xmm3, %xmm5
    00000106: 	pmuludq	%xmm3, %xmm3
    0000010a: 	pshufd	$0x8, %xmm1, %xmm1
    0000010f: 	pshufd	$0x8, %xmm5, %xmm5
    00000114: 	pshufd	$0x8, %xmm3, %xmm3
    00000119: 	punpckldq	%xmm5, %xmm0
    0000011d: 	punpckldq	%xmm3, %xmm1
    00000121: 	pslld	$0x1, %xmm0
    00000126: 	psubd	%xmm0, %xmm2
    0000012a: 	paddd	%xmm1, %xmm2
    0000012e: 	paddd	%xmm2, %xmm4
    00000132: 	cmpq	%rbp, %rdx
    00000135: 	jne	.Ltmp1489 # Offset: 309
    00000137: 	movdqa	%xmm4, %xmm0
    0000013b: 	psrldq	$0x8, %xmm0
    00000140: 	paddd	%xmm0, %xmm4
    00000144: 	movdqa	%xmm4, %xmm0
    00000148: 	psrldq	$0x4, %xmm0
    0000014d: 	paddd	%xmm0, %xmm4
    00000151: 	movd	%xmm4, %edx
    00000155: 	addl	%edx, %eax
    00000157: 	cmpl	%r14d, 0x10(%rsp)
    0000015c: 	je	.Ltmp1487 # Offset: 348
    00000162: 	movl	0x14(%rsp), %edx
.Ltmp1502:
    00000166: 	movslq	%edx, %rcx
    00000169: 	leal	0x1(%rdx), %esi
    0000016c: 	shlq	$0x2, %rcx
    00000170: 	leaq	(%rbx,%rcx), %r9
    00000174: 	cmpl	%r14d, %esi
    00000177: 	jge	.Ltmp1490 # Offset: 375
    0000017d: 	cmpl	%edx, %r13d
    00000180: 	jle	.Ltmp1490 # Offset: 384
    00000186: 	movl	-0x4(%r9), %esi
    0000018a: 	movl	(%r9), %r10d
    0000018d: 	movl	%esi, %r9d
    00000190: 	movl	%r10d, %r11d
    00000193: 	imull	%esi, %r9d
    00000197: 	imull	%r10d, %esi
    0000019b: 	imull	%r10d, %r11d
    0000019f: 	addl	%esi, %esi
    000001a1: 	subl	%esi, %r9d
    000001a4: 	leal	(%r9,%r11), %esi
    000001a8: 	addl	%esi, %eax
    000001aa: 	movl	0x4(%rbx,%rcx), %esi
    000001ae: 	imull	%esi, %r10d
    000001b2: 	movl	%esi, %r9d
    000001b5: 	imull	%esi, %r9d
    000001b9: 	addl	%r10d, %r10d
    000001bc: 	subl	%r10d, %r11d
    000001bf: 	leal	0x2(%rdx), %r10d
    000001c3: 	addl	%r9d, %r11d
    000001c6: 	addl	%r11d, %eax
    000001c9: 	leal	0x3(%rdx), %r11d
    000001cd: 	cmpl	%r11d, %r14d
    000001d0: 	jle	.Ltmp1491 # Offset: 464
    000001d2: 	movl	0x8(%rbx,%rcx), %r10d
    000001d7: 	imull	%r10d, %esi
    000001db: 	movl	%r10d, %r11d
    000001de: 	imull	%r10d, %r11d
    000001e2: 	addl	%esi, %esi
    000001e4: 	subl	%esi, %r9d
    000001e7: 	movl	0xc(%rbx,%rcx), %esi
    000001eb: 	addl	%r11d, %r9d
    000001ee: 	imull	%esi, %r10d
    000001f2: 	addl	%r9d, %eax
    000001f5: 	movl	%esi, %r9d
    000001f8: 	imull	%esi, %r9d
    000001fc: 	addl	%r10d, %r10d
    000001ff: 	subl	%r10d, %r11d
    00000202: 	leal	0x4(%rdx), %r10d
    00000206: 	addl	%r9d, %r11d
    00000209: 	addl	%r11d, %eax
    0000020c: 	leal	0x5(%rdx), %r11d
    00000210: 	cmpl	%r11d, %r14d
    00000213: 	jle	.Ltmp1491 # Offset: 531
    00000215: 	movl	0x10(%rbx,%rcx), %r10d
    0000021a: 	movl	0x14(%rbx,%rcx), %ecx
    0000021e: 	imull	%r10d, %esi
    00000222: 	movl	%r10d, %r11d
    00000225: 	imull	%r10d, %r11d
    00000229: 	imull	%ecx, %r10d
    0000022d: 	addl	%esi, %esi
    0000022f: 	imull	%ecx, %ecx
    00000232: 	subl	%esi, %r9d
    00000235: 	addl	%r10d, %r10d
    00000238: 	addl	%r11d, %r9d
    0000023b: 	subl	%r10d, %r11d
    0000023e: 	addl	%r9d, %eax
    00000241: 	leal	0x6(%rdx), %r10d
    00000245: 	addl	%ecx, %r11d
    00000248: 	addl	%r11d, %eax
.Ltmp1491:
    0000024b: 	movslq	%r10d, %rdx
    0000024e: 	leaq	(,%rdx,4), %r9
    00000256: 	movl	(%rbx,%rdx,4), %edx
    00000259: 	movl	-0x4(%rbx,%r9), %ecx
    0000025e: 	movl	%edx, %esi
    00000260: 	movl	%ecx, %r11d
    00000263: 	imull	%edx, %esi
    00000266: 	imull	%ecx, %r11d
    0000026a: 	imull	%edx, %ecx
    0000026d: 	addl	%ecx, %ecx
    0000026f: 	subl	%ecx, %r11d
    00000272: 	leal	(%r11,%rsi), %ecx
    00000276: 	addl	%ecx, %eax
    00000278: 	leal	0x1(%r10), %ecx
    0000027c: 	cmpl	%ecx, %r13d
    0000027f: 	jle	.Ltmp1487 # Offset: 639
    00000281: 	movl	0x4(%rbx,%r9), %ecx
    00000286: 	addl	$0x2, %r10d
    0000028a: 	imull	%ecx, %edx
    0000028d: 	addl	%edx, %edx
    0000028f: 	subl	%edx, %esi
    00000291: 	movl	%ecx, %edx
    00000293: 	imull	%ecx, %edx
    00000296: 	addl	%edx, %esi
    00000298: 	addl	%esi, %eax
    0000029a: 	cmpl	%r10d, %r13d
    0000029d: 	jle	.Ltmp1487 # Offset: 669
    0000029f: 	movl	0x8(%rbx,%r9), %esi
    000002a4: 	imull	%esi, %ecx
    000002a7: 	imull	%esi, %esi
    000002aa: 	addl	%ecx, %ecx
    000002ac: 	subl	%ecx, %edx
    000002ae: 	addl	%esi, %edx
    000002b0: 	addl	%edx, %eax
.Ltmp1487:
    000002b2: 	testl	%eax, %eax
    000002b4: 	je	.Ltmp1492 # Offset: 692
    000002ba: 	movl	current_test(%rip), %edx
    000002c0: 	leaq	DATAat0x381c8(%rip), %rsi
    000002c7: 	movl	$0x1, %edi
    000002cc: 	xorl	%eax, %eax
    000002ce: 	addl	$0x1, %r12d
    000002d2: 	callq	__printf_chk@PLT # Offset: 722
    000002d7: 	movl	iterations(%rip), %r15d
    000002de: 	cmpl	%r15d, %r12d
    000002e1: 	jl	.Ltmp1493 # Offset: 737
.Ltmp1486:
    000002e7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002f5: 	subq	$0x20, %rax
    000002f9: 	cmpq	%rax, %rbx
    000002fc: 	je	.Ltmp1494 # Offset: 764
    00000302: 	movq	0x18(%rsp), %rax
    00000307: 	leaq	0x10(%rbx), %rdi
    0000030b: 	movq	%rdi, (%rbx)
    0000030e: 	movq	(%rax), %rbp
    00000311: 	movq	0x8(%rax), %r12
    00000315: 	movq	%rbp, %rax
    00000318: 	addq	%r12, %rax
    0000031b: 	je	.Ltmp1495 # Offset: 795
    0000031d: 	testq	%rbp, %rbp
    00000320: 	je	.Ltmp1496 # Offset: 800
.Ltmp1495:
    00000326: 	movq	%r12, 0x20(%rsp)
    0000032b: 	cmpq	$0xf, %r12
    0000032f: 	ja	.Ltmp1497 # Offset: 815
    00000335: 	cmpq	$0x1, %r12
    00000339: 	jne	.Ltmp1498 # Offset: 825
    0000033f: 	movzbl	(%rbp), %eax
    00000343: 	movb	%al, 0x10(%rbx)
.Ltmp1503:
    00000346: 	movq	%r12, 0x8(%rbx)
    0000034a: 	movb	$0x0, (%rdi,%r12)
    0000034f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000356: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035d: 	addq	$0x20, %rax
    00000361: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000368: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000036f: 	je	.Ltmp1499 # Offset: 879
.Ltmp1504:
    00000375: 	movq	-0x20(%rax), %rbp
    00000379: 	callq	clock@PLT # Offset: 889
    0000037e: 	movq	%rax, end_time(%rip)
    00000385: 	movq	0x28(%rsp), %rdx
    0000038a: 	subq	%fs:0x28, %rdx
    00000393: 	jne	.Ltmp1500 # Offset: 915
    00000399: 	subq	start_time(%rip), %rax
    000003a0: 	pxor	%xmm0, %xmm0
    000003a4: 	movq	%rbp, %rdi
    000003a7: 	cvtsi2sd	%rax, %xmm0
    000003ac: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003b4: 	addq	$0x38, %rsp
    000003b8: 	popq	%rbx
    000003b9: 	popq	%rbp
    000003ba: 	popq	%r12
    000003bc: 	popq	%r13
    000003be: 	popq	%r14
    000003c0: 	popq	%r15
    000003c2: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 962
    000003c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1492:
    000003d0: 	addl	$0x1, %r12d
    000003d4: 	cmpl	%r15d, %r12d
    000003d7: 	jl	.Ltmp1501 # Offset: 983
    000003dd: 	jmp	.Ltmp1486 # Offset: 989
.Ltmp1488:
    000003e2: 	movl	$0x1, %edx
    000003e7: 	jmp	.Ltmp1502 # Offset: 999
.Ltmp1490:
    000003ec: 	movl	%edx, %r10d
    000003ef: 	jmp	.Ltmp1491 # Offset: 1007
.Ltmp1497:
    000003f4: 	movq	%rbx, %rdi
    000003f7: 	leaq	0x20(%rsp), %rsi
    000003fc: 	xorl	%edx, %edx
    000003fe: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1022
    00000403: 	movq	%rax, (%rbx)
    00000406: 	movq	%rax, %rdi
    00000409: 	movq	0x20(%rsp), %rax
    0000040e: 	movq	%rax, 0x10(%rbx)
.Ltmp1505:
    00000412: 	movq	%r12, %rdx
    00000415: 	movq	%rbp, %rsi
    00000418: 	callq	memcpy@PLT # Offset: 1048
    0000041d: 	movq	0x20(%rsp), %r12
    00000422: 	movq	(%rbx), %rdi
    00000425: 	jmp	.Ltmp1503 # Offset: 1061
.Ltmp1494:
    0000042a: 	movq	0x18(%rsp), %rsi
    0000042f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000436: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1078
    0000043b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000442: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000449: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000450: 	jne	.Ltmp1504 # Offset: 1104
.Ltmp1499:
    00000456: 	movq	-0x8(%rdx), %rax
    0000045a: 	addq	$0x200, %rax
    00000460: 	jmp	.Ltmp1504 # Offset: 1120
.Ltmp1498:
    00000465: 	testq	%r12, %r12
    00000468: 	je	.Ltmp1503 # Offset: 1128
    0000046e: 	jmp	.Ltmp1505 # Offset: 1134
.Ltmp1500:
    00000470: 	callq	__stack_chk_fail@PLT # Offset: 1136
.Ltmp1496:
    00000475: 	leaq	DATAat0x38110(%rip), %rdi
    0000047c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1148
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi16custom_2term_subIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt16custom_2term_subItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 96
  State       : disassembled
  Address     : 0x15c00
  Size        : 0x4f7
  MaxSize     : 0x500
  Offset      : 0x15c00
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt16custom_2term_subItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r15d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r15d, %r15d
    00000043: 	jle	.Ltmp1506 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	movzwl	(%rbx), %edi
    00000056: 	xorl	%r13d, %r13d
    00000059: 	movl	%eax, 0x8(%rsp)
    0000005d: 	movl	%r14d, %eax
    00000060: 	movzwl	0x2(%rbx), %r8d
    00000065: 	shrl	$0x3, %eax
    00000068: 	subl	$0x1, %eax
    0000006b: 	shlq	$0x4, %rax
    0000006f: 	leaq	0x10(%rbx,%rax), %rbp
    00000074: 	movl	%r14d, %eax
    00000077: 	andl	$-0x8, %eax
    0000007a: 	movq	%rbp, (%rsp)
    0000007e: 	movl	%eax, 0xc(%rsp)
    00000082: 	addl	$0x1, %eax
    00000085: 	movl	%eax, 0x10(%rsp)
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp1514:
    00000090: 	movl	%r8d, %eax
    00000093: 	movl	%edi, %edx
    00000095: 	imull	%edi, %edx
    00000098: 	imull	%r8d, %eax
    0000009c: 	addl	%edx, %eax
    0000009e: 	movl	%r8d, %edx
    000000a1: 	imull	%edi, %edx
    000000a4: 	addl	%edx, %edx
    000000a6: 	subl	%edx, %eax
    000000a8: 	cmpl	$0x1, %r12d
    000000ac: 	jle	.Ltmp1507 # Offset: 172
    000000b2: 	cmpl	$0x6, 0x8(%rsp)
    000000b7: 	jbe	.Ltmp1508 # Offset: 183
    000000bd: 	movq	(%rsp), %rbp
    000000c1: 	movq	%rbx, %rdx
    000000c4: 	pxor	%xmm1, %xmm1
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1509:
    000000d0: 	movdqu	(%rdx), %xmm0
    000000d4: 	movdqu	0x2(%rdx), %xmm3
    000000d9: 	addq	$0x10, %rdx
    000000dd: 	movdqa	%xmm0, %xmm4
    000000e1: 	movdqa	%xmm3, %xmm2
    000000e5: 	pmullw	%xmm0, %xmm4
    000000e9: 	pmullw	%xmm3, %xmm0
    000000ed: 	pmullw	%xmm3, %xmm2
    000000f1: 	psllw	$0x1, %xmm0
    000000f6: 	paddw	%xmm4, %xmm2
    000000fa: 	psubw	%xmm0, %xmm1
    000000fe: 	paddw	%xmm2, %xmm1
    00000102: 	cmpq	%rbp, %rdx
    00000105: 	jne	.Ltmp1509 # Offset: 261
    00000107: 	movdqa	%xmm1, %xmm0
    0000010b: 	movl	0xc(%rsp), %ecx
    0000010f: 	movq	%rbp, (%rsp)
    00000113: 	psrldq	$0x8, %xmm0
    00000118: 	paddw	%xmm0, %xmm1
    0000011c: 	movdqa	%xmm1, %xmm0
    00000120: 	psrldq	$0x4, %xmm0
    00000125: 	paddw	%xmm0, %xmm1
    00000129: 	movdqa	%xmm1, %xmm0
    0000012d: 	psrldq	$0x2, %xmm0
    00000132: 	paddw	%xmm0, %xmm1
    00000136: 	pextrw	$0x0, %xmm1, %edx
    0000013b: 	addl	%edx, %eax
    0000013d: 	cmpl	%r14d, %ecx
    00000140: 	je	.Ltmp1507 # Offset: 320
    00000146: 	movl	0x10(%rsp), %edx
    0000014a: 	movl	%ecx, %r9d
.Ltmp1522:
    0000014d: 	movl	%r12d, %esi
    00000150: 	subl	%r9d, %esi
    00000153: 	leal	-0x1(%rsi), %ecx
    00000156: 	subl	$0x2, %esi
    00000159: 	cmpl	$0x2, %esi
    0000015c: 	jbe	.Ltmp1510 # Offset: 348
    0000015e: 	leal	0x1(%r9), %esi
    00000162: 	movq	(%rbx,%rsi,2), %xmm2
    00000167: 	movq	-0x2(%rbx,%rsi,2), %xmm1
    0000016d: 	movdqa	%xmm2, %xmm3
    00000171: 	movdqa	%xmm1, %xmm0
    00000175: 	pmullw	%xmm1, %xmm0
    00000179: 	psllw	$0x1, %xmm1
    0000017e: 	pmullw	%xmm2, %xmm3
    00000182: 	pmullw	%xmm2, %xmm1
    00000186: 	paddw	%xmm3, %xmm0
    0000018a: 	psubw	%xmm1, %xmm0
    0000018e: 	pextrw	$0x0, %xmm0, %esi
    00000193: 	pextrw	$0x1, %xmm0, %r9d
    00000199: 	addl	%r9d, %esi
    0000019c: 	addl	%eax, %esi
    0000019e: 	pextrw	$0x2, %xmm0, %eax
    000001a3: 	addl	%eax, %esi
    000001a5: 	pextrw	$0x3, %xmm0, %eax
    000001aa: 	addl	%esi, %eax
    000001ac: 	movl	%ecx, %esi
    000001ae: 	andl	$-0x4, %esi
    000001b1: 	addl	%esi, %edx
    000001b3: 	cmpl	%esi, %ecx
    000001b5: 	je	.Ltmp1507 # Offset: 437
.Ltmp1510:
    000001bb: 	movslq	%edx, %rcx
    000001be: 	leal	0x1(%rdx), %r9d
    000001c2: 	addq	%rcx, %rcx
    000001c5: 	leaq	(%rbx,%rcx), %rsi
    000001c9: 	cmpl	%r14d, %r9d
    000001cc: 	jge	.Ltmp1511 # Offset: 460
    000001d2: 	cmpl	%edx, %r12d
    000001d5: 	jle	.Ltmp1511 # Offset: 469
    000001db: 	movzwl	(%rsi), %r9d
    000001df: 	movzwl	-0x2(%rsi), %r10d
    000001e4: 	movzwl	0x2(%rbx,%rcx), %esi
    000001e9: 	movl	%esi, %r11d
    000001ec: 	imull	%esi, %r11d
    000001f0: 	movl	%r11d, %ebp
    000001f3: 	movl	%r9d, %r11d
    000001f6: 	imull	%r9d, %r11d
    000001fa: 	leal	(%rax,%r11,2), %eax
    000001fe: 	movl	%r10d, %r11d
    00000201: 	imull	%r10d, %r11d
    00000205: 	imull	%r9d, %r10d
    00000209: 	imull	%esi, %r9d
    0000020d: 	addl	%r11d, %eax
    00000210: 	addl	%r10d, %r10d
    00000213: 	addl	%ebp, %eax
    00000215: 	subl	%r10d, %eax
    00000218: 	addl	%r9d, %r9d
    0000021b: 	leal	0x3(%rdx), %r10d
    0000021f: 	subl	%r9d, %eax
    00000222: 	leal	0x2(%rdx), %r9d
    00000226: 	cmpl	%r10d, %r14d
    00000229: 	jle	.Ltmp1512 # Offset: 553
    0000022f: 	movzwl	0x6(%rbx,%rcx), %r11d
    00000235: 	movzwl	0x4(%rbx,%rcx), %r10d
    0000023b: 	movl	%r11d, %r9d
    0000023e: 	imull	%r10d, %esi
    00000242: 	imull	%r11d, %r9d
    00000246: 	addl	%esi, %esi
    00000248: 	movw	%r9w, 0x16(%rsp)
    0000024e: 	movl	%r10d, %r9d
    00000251: 	imull	%r10d, %r9d
    00000255: 	imull	%r11d, %r10d
    00000259: 	leal	(%rbp,%r9,2), %r9d
    0000025e: 	movzwl	0x16(%rsp), %ebp
    00000263: 	addl	%r10d, %r10d
    00000266: 	addl	%ebp, %r9d
    00000269: 	subl	%esi, %r9d
    0000026c: 	leal	0x5(%rdx), %esi
    0000026f: 	addl	%eax, %r9d
    00000272: 	movl	%r9d, %eax
    00000275: 	leal	0x4(%rdx), %r9d
    00000279: 	subl	%r10d, %eax
    0000027c: 	cmpl	%esi, %r14d
    0000027f: 	jle	.Ltmp1512 # Offset: 639
    00000281: 	movzwl	0x8(%rbx,%rcx), %esi
    00000286: 	movzwl	0xa(%rbx,%rcx), %r9d
    0000028c: 	movl	%esi, %r10d
    0000028f: 	imull	%esi, %r11d
    00000293: 	movl	%r9d, %ecx
    00000296: 	imull	%esi, %r10d
    0000029a: 	imull	%r9d, %ecx
    0000029e: 	imull	%r9d, %esi
    000002a2: 	leal	0x6(%rdx), %r9d
    000002a6: 	leal	(%rbp,%r10,2), %r10d
    000002ab: 	addl	%r10d, %ecx
    000002ae: 	leal	(%r11,%r11), %r10d
    000002b2: 	subl	%r10d, %ecx
    000002b5: 	addl	%ecx, %eax
    000002b7: 	leal	(%rsi,%rsi), %ecx
    000002ba: 	subl	%ecx, %eax
.Ltmp1512:
    000002bc: 	movslq	%r9d, %rdx
    000002bf: 	leaq	(%rdx,%rdx), %r10
    000002c3: 	movzwl	(%rbx,%rdx,2), %edx
    000002c7: 	movzwl	-0x2(%rbx,%r10), %ecx
    000002cd: 	movl	%edx, %esi
    000002cf: 	movl	%ecx, %r11d
    000002d2: 	imull	%edx, %esi
    000002d5: 	imull	%ecx, %r11d
    000002d9: 	imull	%edx, %ecx
    000002dc: 	addl	%esi, %eax
    000002de: 	addl	%r11d, %eax
    000002e1: 	addl	%ecx, %ecx
    000002e3: 	subl	%ecx, %eax
    000002e5: 	leal	0x1(%r9), %ecx
    000002e9: 	cmpl	%ecx, %r12d
    000002ec: 	jle	.Ltmp1507 # Offset: 748
    000002ee: 	movzwl	0x2(%rbx,%r10), %ecx
    000002f4: 	addl	$0x2, %r9d
    000002f8: 	movl	%ecx, %r11d
    000002fb: 	imull	%ecx, %edx
    000002fe: 	imull	%ecx, %r11d
    00000302: 	addl	%edx, %edx
    00000304: 	addl	%r11d, %esi
    00000307: 	subl	%edx, %esi
    00000309: 	addl	%esi, %eax
    0000030b: 	cmpl	%r9d, %r12d
    0000030e: 	jle	.Ltmp1507 # Offset: 782
    00000310: 	movzwl	0x4(%rbx,%r10), %esi
    00000316: 	movl	%esi, %edx
    00000318: 	imull	%esi, %ecx
    0000031b: 	imull	%esi, %edx
    0000031e: 	addl	%ecx, %ecx
    00000320: 	addl	%r11d, %edx
    00000323: 	subl	%ecx, %edx
    00000325: 	addl	%edx, %eax
.Ltmp1507:
    00000327: 	testw	%ax, %ax
    0000032a: 	je	.Ltmp1513 # Offset: 810
    0000032c: 	movl	current_test(%rip), %edx
    00000332: 	leaq	DATAat0x381c8(%rip), %rsi
    00000339: 	movl	$0x1, %edi
    0000033e: 	xorl	%eax, %eax
    00000340: 	addl	$0x1, %r13d
    00000344: 	callq	__printf_chk@PLT # Offset: 836
    00000349: 	movl	iterations(%rip), %r15d
    00000350: 	cmpl	%r13d, %r15d
    00000353: 	jle	.Ltmp1506 # Offset: 851
    00000355: 	movzwl	0x2(%rbx), %r8d
    0000035a: 	movzwl	(%rbx), %edi
    0000035d: 	jmp	.Ltmp1514 # Offset: 861
    00000362: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1513:
    00000368: 	addl	$0x1, %r13d
    0000036c: 	cmpl	%r15d, %r13d
    0000036f: 	jl	.Ltmp1514 # Offset: 879
.Ltmp1506:
    00000375: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000037c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000383: 	subq	$0x20, %rax
    00000387: 	cmpq	%rax, %rbx
    0000038a: 	je	.Ltmp1515 # Offset: 906
    00000390: 	movq	0x18(%rsp), %rax
    00000395: 	leaq	0x10(%rbx), %rdi
    00000399: 	movq	%rdi, (%rbx)
    0000039c: 	movq	(%rax), %rbp
    0000039f: 	movq	0x8(%rax), %r12
    000003a3: 	movq	%rbp, %rax
    000003a6: 	addq	%r12, %rax
    000003a9: 	je	.Ltmp1516 # Offset: 937
    000003ab: 	testq	%rbp, %rbp
    000003ae: 	je	.Ltmp1517 # Offset: 942
.Ltmp1516:
    000003b4: 	movq	%r12, 0x20(%rsp)
    000003b9: 	cmpq	$0xf, %r12
    000003bd: 	ja	.Ltmp1518 # Offset: 957
    000003c3: 	cmpq	$0x1, %r12
    000003c7: 	jne	.Ltmp1519 # Offset: 967
    000003cd: 	movzbl	(%rbp), %eax
    000003d1: 	movb	%al, 0x10(%rbx)
.Ltmp1523:
    000003d4: 	movq	%r12, 0x8(%rbx)
    000003d8: 	movb	$0x0, (%rdi,%r12)
    000003dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003eb: 	addq	$0x20, %rax
    000003ef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003f6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003fd: 	je	.Ltmp1520 # Offset: 1021
.Ltmp1524:
    00000403: 	movq	-0x20(%rax), %rbp
    00000407: 	callq	clock@PLT # Offset: 1031
    0000040c: 	movq	%rax, end_time(%rip)
    00000413: 	movq	0x28(%rsp), %rdx
    00000418: 	subq	%fs:0x28, %rdx
    00000421: 	jne	.Ltmp1521 # Offset: 1057
    00000427: 	subq	start_time(%rip), %rax
    0000042e: 	pxor	%xmm0, %xmm0
    00000432: 	movq	%rbp, %rdi
    00000435: 	cvtsi2sd	%rax, %xmm0
    0000043a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000442: 	addq	$0x38, %rsp
    00000446: 	popq	%rbx
    00000447: 	popq	%rbp
    00000448: 	popq	%r12
    0000044a: 	popq	%r13
    0000044c: 	popq	%r14
    0000044e: 	popq	%r15
    00000450: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1104
.Ltmp1508:
    00000455: 	xorl	%r9d, %r9d
    00000458: 	movl	$0x1, %edx
    0000045d: 	jmp	.Ltmp1522 # Offset: 1117
.Ltmp1518:
    00000462: 	movq	%rbx, %rdi
    00000465: 	leaq	0x20(%rsp), %rsi
    0000046a: 	xorl	%edx, %edx
    0000046c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1132
    00000471: 	movq	%rax, (%rbx)
    00000474: 	movq	%rax, %rdi
    00000477: 	movq	0x20(%rsp), %rax
    0000047c: 	movq	%rax, 0x10(%rbx)
.Ltmp1525:
    00000480: 	movq	%r12, %rdx
    00000483: 	movq	%rbp, %rsi
    00000486: 	callq	memcpy@PLT # Offset: 1158
    0000048b: 	movq	0x20(%rsp), %r12
    00000490: 	movq	(%rbx), %rdi
    00000493: 	jmp	.Ltmp1523 # Offset: 1171
.Ltmp1511:
    00000498: 	movl	%edx, %r9d
    0000049b: 	jmp	.Ltmp1512 # Offset: 1179
.Ltmp1515:
    000004a0: 	movq	0x18(%rsp), %rsi
    000004a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1196
    000004b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c6: 	jne	.Ltmp1524 # Offset: 1222
.Ltmp1520:
    000004cc: 	movq	-0x8(%rdx), %rax
    000004d0: 	addq	$0x200, %rax
    000004d6: 	jmp	.Ltmp1524 # Offset: 1238
.Ltmp1519:
    000004db: 	testq	%r12, %r12
    000004de: 	je	.Ltmp1523 # Offset: 1246
    000004e4: 	jmp	.Ltmp1525 # Offset: 1252
.Ltmp1521:
    000004e6: 	callq	__stack_chk_fail@PLT # Offset: 1254
.Ltmp1517:
    000004eb: 	leaq	DATAat0x38110(%rip), %rdi
    000004f2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1266
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt16custom_2term_subItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIl16custom_2term_addIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0x16100
  Size        : 0x2ea
  MaxSize     : 0x2f0
  Offset      : 0x16100
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl16custom_2term_addIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r9d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r9d, %r9d
    00000041: 	jle	.Ltmp1526 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %r8
    0000004f: 	movq	(%r13), %rdi
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	movsd	init_value(%rip), %xmm0
    00000060: 	leaq	DATAat0x381c8(%rip), %rbp
    00000067: 	leaq	0x5(%rax,%rax), %rbx
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp1532:
    00000070: 	movq	%r8, %rcx
    00000073: 	movq	%rdi, %rdx
    00000076: 	movq	%rdi, %rax
    00000079: 	imulq	%rdi, %rdx
    0000007d: 	imulq	%rdi, %rcx
    00000081: 	leaq	(%rdx,%rcx,2), %rsi
    00000085: 	movq	%r8, %rdx
    00000088: 	imulq	%r8, %rdx
    0000008c: 	addq	%rdx, %rsi
    0000008f: 	cmpl	$0x1, %r14d
    00000093: 	jle	.Ltmp1527 # Offset: 147
    00000099: 	cmpl	$0x3, %r14d
    0000009d: 	jle	.Ltmp1528 # Offset: 157
    000000a3: 	movl	$0x3, %edx
.Ltmp1529:
    000000a8: 	movq	-0x10(%r13,%rdx,8), %rcx
    000000ad: 	movq	%rcx, %r11
    000000b0: 	movq	%rcx, %r10
    000000b3: 	imulq	%rax, %r11
    000000b7: 	imulq	%rax, %rax
    000000bb: 	imulq	%rcx, %r10
    000000bf: 	leaq	(%rax,%r11,2), %r11
    000000c3: 	movq	-0x8(%r13,%rdx,8), %rax
    000000c8: 	addq	%r10, %r11
    000000cb: 	imulq	%rax, %rcx
    000000cf: 	addq	%rsi, %r11
    000000d2: 	leaq	(%r10,%rcx,2), %rsi
    000000d6: 	movq	%rax, %rcx
    000000d9: 	imulq	%rax, %rcx
    000000dd: 	addq	%rcx, %rsi
    000000e0: 	movslq	%edx, %rcx
    000000e3: 	addq	$0x2, %rdx
    000000e7: 	addq	%r11, %rsi
    000000ea: 	cmpq	%rdx, %rbx
    000000ed: 	jne	.Ltmp1529 # Offset: 237
    000000ef: 	nop # Size: 1
.Ltmp1530:
    000000f0: 	movq	-0x8(%r13,%rcx,8), %rdx
    000000f5: 	movq	(%r13,%rcx,8), %rax
    000000fa: 	addq	$0x1, %rcx
    000000fe: 	movq	%rdx, %r10
    00000101: 	imulq	%rdx, %rdx
    00000105: 	imulq	%rax, %r10
    00000109: 	imulq	%rax, %rax
    0000010d: 	leaq	(%rdx,%r10,2), %rdx
    00000111: 	addq	%rdx, %rax
    00000114: 	addq	%rax, %rsi
    00000117: 	cmpl	%ecx, %r14d
    0000011a: 	jg	.Ltmp1530 # Offset: 282
.Ltmp1527:
    0000011c: 	cvttsd2si	%xmm0, %rax
    00000121: 	imulq	%rax, %rax
    00000125: 	imulq	$0x7d00, %rax, %rax
    0000012c: 	cmpq	%rsi, %rax
    0000012f: 	je	.Ltmp1531 # Offset: 303
    00000131: 	movl	current_test(%rip), %edx
    00000137: 	movq	%rbp, %rsi
    0000013a: 	movl	$0x1, %edi
    0000013f: 	xorl	%eax, %eax
    00000141: 	addl	$0x1, %r15d
    00000145: 	callq	__printf_chk@PLT # Offset: 325
    0000014a: 	movl	iterations(%rip), %r9d
    00000151: 	cmpl	%r15d, %r9d
    00000154: 	jle	.Ltmp1526 # Offset: 340
    00000156: 	movq	0x8(%r13), %r8
    0000015a: 	movq	(%r13), %rdi
    0000015e: 	movsd	init_value(%rip), %xmm0
    00000166: 	jmp	.Ltmp1532 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1531:
    00000170: 	addl	$0x1, %r15d
    00000174: 	cmpl	%r9d, %r15d
    00000177: 	jl	.Ltmp1532 # Offset: 375
.Ltmp1526:
    0000017d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000018b: 	subq	$0x20, %rax
    0000018f: 	cmpq	%rax, %rbx
    00000192: 	je	.Ltmp1533 # Offset: 402
    00000198: 	leaq	0x10(%rbx), %rdi
    0000019c: 	movq	%rdi, (%rbx)
    0000019f: 	movq	(%r12), %rbp
    000001a3: 	movq	0x8(%r12), %r12
    000001a8: 	movq	%rbp, %rax
    000001ab: 	addq	%r12, %rax
    000001ae: 	je	.Ltmp1534 # Offset: 430
    000001b0: 	testq	%rbp, %rbp
    000001b3: 	je	.Ltmp1535 # Offset: 435
.Ltmp1534:
    000001b9: 	movq	%r12, (%rsp)
    000001bd: 	cmpq	$0xf, %r12
    000001c1: 	ja	.Ltmp1536 # Offset: 449
    000001c7: 	cmpq	$0x1, %r12
    000001cb: 	jne	.Ltmp1537 # Offset: 459
    000001d1: 	movzbl	(%rbp), %eax
    000001d5: 	movb	%al, 0x10(%rbx)
.Ltmp1540:
    000001d8: 	movq	%r12, 0x8(%rbx)
    000001dc: 	movb	$0x0, (%rdi,%r12)
    000001e1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ef: 	addq	$0x20, %rax
    000001f3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fa: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000201: 	je	.Ltmp1538 # Offset: 513
.Ltmp1541:
    00000207: 	movq	-0x20(%rax), %rbp
    0000020b: 	callq	clock@PLT # Offset: 523
    00000210: 	movq	%rax, end_time(%rip)
    00000217: 	movq	0x8(%rsp), %rdx
    0000021c: 	subq	%fs:0x28, %rdx
    00000225: 	jne	.Ltmp1539 # Offset: 549
    0000022b: 	subq	start_time(%rip), %rax
    00000232: 	pxor	%xmm0, %xmm0
    00000236: 	movq	%rbp, %rdi
    00000239: 	cvtsi2sd	%rax, %xmm0
    0000023e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000246: 	addq	$0x18, %rsp
    0000024a: 	popq	%rbx
    0000024b: 	popq	%rbp
    0000024c: 	popq	%r12
    0000024e: 	popq	%r13
    00000250: 	popq	%r14
    00000252: 	popq	%r15
    00000254: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 596
.Ltmp1528:
    00000259: 	movl	$0x1, %ecx
    0000025e: 	jmp	.Ltmp1530 # Offset: 606
.Ltmp1536:
    00000263: 	movq	%rbx, %rdi
    00000266: 	movq	%rsp, %rsi
    00000269: 	xorl	%edx, %edx
    0000026b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 619
    00000270: 	movq	%rax, (%rbx)
    00000273: 	movq	%rax, %rdi
    00000276: 	movq	(%rsp), %rax
    0000027a: 	movq	%rax, 0x10(%rbx)
.Ltmp1542:
    0000027e: 	movq	%r12, %rdx
    00000281: 	movq	%rbp, %rsi
    00000284: 	callq	memcpy@PLT # Offset: 644
    00000289: 	movq	(%rsp), %r12
    0000028d: 	movq	(%rbx), %rdi
    00000290: 	jmp	.Ltmp1540 # Offset: 656
.Ltmp1533:
    00000295: 	movq	%r12, %rsi
    00000298: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000029f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 671
    000002a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ab: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002b9: 	jne	.Ltmp1541 # Offset: 697
.Ltmp1538:
    000002bf: 	movq	-0x8(%rdx), %rax
    000002c3: 	addq	$0x200, %rax
    000002c9: 	jmp	.Ltmp1541 # Offset: 713
.Ltmp1537:
    000002ce: 	testq	%r12, %r12
    000002d1: 	je	.Ltmp1540 # Offset: 721
    000002d7: 	jmp	.Ltmp1542 # Offset: 727
.Ltmp1539:
    000002d9: 	callq	__stack_chk_fail@PLT # Offset: 729
.Ltmp1535:
    000002de: 	leaq	DATAat0x38110(%rip), %rdi
    000002e5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 741
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl16custom_2term_addIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIj16custom_2term_addIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 98
  State       : disassembled
  Address     : 0x163f0
  Size        : 0x45d
  MaxSize     : 0x460
  Offset      : 0x163f0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj16custom_2term_addIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	movl	%eax, 0x8(%rsp)
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp1543 # Offset: 69
    0000004b: 	leal	-0x1(%r13), %r15d
    0000004f: 	leal	-0x2(%r13), %eax
    00000053: 	movl	0x4(%rbx), %r9d
    00000057: 	movl	(%rbx), %edi
    00000059: 	movl	%eax, 0xc(%rsp)
    0000005d: 	movl	%r15d, %eax
    00000060: 	xorl	%r12d, %r12d
    00000063: 	movl	%r13d, %r14d
    00000066: 	shrl	$0x2, %eax
    00000069: 	movsd	init_value(%rip), %xmm4
    00000071: 	subl	$0x1, %eax
    00000074: 	shlq	$0x4, %rax
    00000078: 	leaq	0x10(%rbx,%rax), %rbp
    0000007d: 	movl	%r15d, %eax
    00000080: 	andl	$-0x4, %eax
    00000083: 	movl	%eax, 0x10(%rsp)
    00000087: 	addl	$0x1, %eax
    0000008a: 	movl	%eax, 0x14(%rsp)
    0000008e: 	nop # Size: 2
.Ltmp1550:
    00000090: 	leal	(%r9,%rdi,2), %eax
    00000094: 	movl	%edi, %edx
    00000096: 	imull	%r9d, %eax
    0000009a: 	imull	%edi, %edx
    0000009d: 	addl	%edx, %eax
    0000009f: 	cmpl	$0x1, %r14d
    000000a3: 	jle	.Ltmp1544 # Offset: 163
    000000a9: 	cmpl	$0x2, 0xc(%rsp)
    000000ae: 	jbe	.Ltmp1545 # Offset: 174
    000000b4: 	movq	%rbx, %rdx
    000000b7: 	pxor	%xmm3, %xmm3
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1546:
    000000c0: 	movdqu	(%rdx), %xmm0
    000000c4: 	movdqu	0x4(%rdx), %xmm5
    000000c9: 	addq	$0x10, %rdx
    000000cd: 	movdqa	%xmm0, %xmm1
    000000d1: 	pslld	$0x1, %xmm1
    000000d6: 	paddd	%xmm5, %xmm1
    000000da: 	movdqa	%xmm1, %xmm2
    000000de: 	psrlq	$0x20, %xmm1
    000000e3: 	pmuludq	%xmm5, %xmm2
    000000e7: 	psrlq	$0x20, %xmm5
    000000ec: 	pmuludq	%xmm5, %xmm1
    000000f0: 	pshufd	$0x8, %xmm2, %xmm2
    000000f5: 	pshufd	$0x8, %xmm1, %xmm1
    000000fa: 	punpckldq	%xmm1, %xmm2
    000000fe: 	movdqa	%xmm0, %xmm1
    00000102: 	pmuludq	%xmm0, %xmm1
    00000106: 	psrlq	$0x20, %xmm0
    0000010b: 	pmuludq	%xmm0, %xmm0
    0000010f: 	pshufd	$0x8, %xmm1, %xmm1
    00000114: 	pshufd	$0x8, %xmm0, %xmm0
    00000119: 	punpckldq	%xmm0, %xmm1
    0000011d: 	paddd	%xmm1, %xmm2
    00000121: 	paddd	%xmm2, %xmm3
    00000125: 	cmpq	%rbp, %rdx
    00000128: 	jne	.Ltmp1546 # Offset: 296
    0000012a: 	movdqa	%xmm3, %xmm0
    0000012e: 	psrldq	$0x8, %xmm0
    00000133: 	paddd	%xmm0, %xmm3
    00000137: 	movdqa	%xmm3, %xmm0
    0000013b: 	psrldq	$0x4, %xmm0
    00000140: 	paddd	%xmm0, %xmm3
    00000144: 	movd	%xmm3, %edx
    00000148: 	addl	%edx, %eax
    0000014a: 	cmpl	%r15d, 0x10(%rsp)
    0000014f: 	je	.Ltmp1544 # Offset: 335
    00000155: 	movl	0x14(%rsp), %edx
.Ltmp1558:
    00000159: 	movslq	%edx, %rcx
    0000015c: 	leal	0x1(%rdx), %r8d
    00000160: 	shlq	$0x2, %rcx
    00000164: 	leaq	(%rbx,%rcx), %rsi
    00000168: 	cmpl	%r15d, %r8d
    0000016b: 	jge	.Ltmp1547 # Offset: 363
    00000171: 	cmpl	%edx, %r14d
    00000174: 	jle	.Ltmp1547 # Offset: 372
    0000017a: 	movl	-0x4(%rsi), %r10d
    0000017e: 	movl	(%rsi), %esi
    00000180: 	movl	0x4(%rbx,%rcx), %r8d
    00000185: 	leal	(%rsi,%rsi), %r13d
    00000189: 	movl	%esi, 0x4(%rsp)
    0000018d: 	movl	%r10d, %esi
    00000190: 	imull	%r10d, %esi
    00000194: 	leal	(%r13,%r8), %r11d
    00000199: 	imull	%r8d, %r11d
    0000019d: 	addl	%eax, %esi
    0000019f: 	leal	(%r13,%r10,2), %eax
    000001a4: 	leal	0x3(%rdx), %r10d
    000001a8: 	imull	0x4(%rsp), %eax
    000001ad: 	addl	%r11d, %esi
    000001b0: 	addl	%esi, %eax
    000001b2: 	leal	0x2(%rdx), %esi
    000001b5: 	cmpl	%r10d, %r15d
    000001b8: 	jle	.Ltmp1548 # Offset: 440
    000001ba: 	movl	0x8(%rbx,%rcx), %r11d
    000001bf: 	movl	0xc(%rbx,%rcx), %r10d
    000001c4: 	leal	(%r11,%r11), %esi
    000001c8: 	leal	(%rsi,%r8,2), %r13d
    000001cc: 	addl	%r10d, %esi
    000001cf: 	imull	%r10d, %esi
    000001d3: 	imull	%r13d, %r11d
    000001d7: 	imull	%r8d, %r8d
    000001db: 	addl	%esi, %r11d
    000001de: 	leal	0x4(%rdx), %esi
    000001e1: 	addl	%r8d, %r11d
    000001e4: 	leal	0x5(%rdx), %r8d
    000001e8: 	addl	%r11d, %eax
    000001eb: 	cmpl	%r8d, %r15d
    000001ee: 	jle	.Ltmp1548 # Offset: 494
    000001f0: 	movl	0x10(%rbx,%rcx), %r8d
    000001f5: 	movl	0x14(%rbx,%rcx), %r11d
    000001fa: 	leal	(%r8,%r8), %esi
    000001fe: 	leal	(%rsi,%r10,2), %ecx
    00000202: 	addl	%r11d, %esi
    00000205: 	imull	%r11d, %esi
    00000209: 	imull	%r8d, %ecx
    0000020d: 	imull	%r10d, %r10d
    00000211: 	addl	%esi, %ecx
    00000213: 	leal	0x6(%rdx), %esi
    00000216: 	addl	%r10d, %ecx
    00000219: 	addl	%ecx, %eax
.Ltmp1548:
    0000021b: 	movslq	%esi, %rdx
    0000021e: 	leaq	(,%rdx,4), %r8
    00000226: 	movl	(%rbx,%rdx,4), %edx
    00000229: 	movl	-0x4(%rbx,%r8), %r10d
    0000022e: 	movl	%r10d, %ecx
    00000231: 	imull	%r10d, %ecx
    00000235: 	addl	%eax, %ecx
    00000237: 	leal	(%rdx,%r10,2), %eax
    0000023b: 	imull	%edx, %eax
    0000023e: 	addl	%ecx, %eax
    00000240: 	leal	0x1(%rsi), %ecx
    00000243: 	cmpl	%ecx, %r14d
    00000246: 	jle	.Ltmp1544 # Offset: 582
    00000248: 	movl	0x4(%rbx,%r8), %ecx
    0000024d: 	addl	$0x2, %esi
    00000250: 	leal	(%rcx,%rdx,2), %r10d
    00000254: 	imull	%ecx, %r10d
    00000258: 	imull	%edx, %edx
    0000025b: 	addl	%edx, %r10d
    0000025e: 	addl	%r10d, %eax
    00000261: 	cmpl	%esi, %r14d
    00000264: 	jle	.Ltmp1544 # Offset: 612
    00000266: 	movl	0x8(%rbx,%r8), %esi
    0000026b: 	leal	(%rsi,%rcx,2), %edx
    0000026e: 	imull	%esi, %edx
    00000271: 	imull	%ecx, %ecx
    00000274: 	addl	%ecx, %edx
    00000276: 	addl	%edx, %eax
.Ltmp1544:
    00000278: 	cvttsd2si	%xmm4, %rdx
    0000027d: 	imull	%edx, %edx
    00000280: 	imull	$0x7d00, %edx, %edx
    00000286: 	cmpl	%eax, %edx
    00000288: 	je	.Ltmp1549 # Offset: 648
    0000028a: 	movl	current_test(%rip), %edx
    00000290: 	leaq	DATAat0x381c8(%rip), %rsi
    00000297: 	movl	$0x1, %edi
    0000029c: 	xorl	%eax, %eax
    0000029e: 	addl	$0x1, %r12d
    000002a2: 	callq	__printf_chk@PLT # Offset: 674
    000002a7: 	movl	iterations(%rip), %eax
    000002ad: 	movl	%eax, 0x8(%rsp)
    000002b1: 	cmpl	%r12d, %eax
    000002b4: 	jle	.Ltmp1543 # Offset: 692
    000002b6: 	movl	0x4(%rbx), %r9d
    000002ba: 	movl	(%rbx), %edi
    000002bc: 	movsd	init_value(%rip), %xmm4
    000002c4: 	jmp	.Ltmp1550 # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp1549:
    000002d0: 	addl	$0x1, %r12d
    000002d4: 	cmpl	0x8(%rsp), %r12d
    000002d9: 	jl	.Ltmp1550 # Offset: 729
.Ltmp1543:
    000002df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002ed: 	subq	$0x20, %rax
    000002f1: 	cmpq	%rax, %rbx
    000002f4: 	je	.Ltmp1551 # Offset: 756
    000002fa: 	movq	0x18(%rsp), %rax
    000002ff: 	leaq	0x10(%rbx), %rdi
    00000303: 	movq	%rdi, (%rbx)
    00000306: 	movq	(%rax), %rbp
    00000309: 	movq	0x8(%rax), %r12
    0000030d: 	movq	%rbp, %rax
    00000310: 	addq	%r12, %rax
    00000313: 	je	.Ltmp1552 # Offset: 787
    00000315: 	testq	%rbp, %rbp
    00000318: 	je	.Ltmp1553 # Offset: 792
.Ltmp1552:
    0000031e: 	movq	%r12, 0x20(%rsp)
    00000323: 	cmpq	$0xf, %r12
    00000327: 	ja	.Ltmp1554 # Offset: 807
    0000032d: 	cmpq	$0x1, %r12
    00000331: 	jne	.Ltmp1555 # Offset: 817
    00000337: 	movzbl	(%rbp), %eax
    0000033b: 	movb	%al, 0x10(%rbx)
.Ltmp1559:
    0000033e: 	movq	%r12, 0x8(%rbx)
    00000342: 	movb	$0x0, (%rdi,%r12)
    00000347: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000355: 	addq	$0x20, %rax
    00000359: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000360: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000367: 	je	.Ltmp1556 # Offset: 871
.Ltmp1560:
    0000036d: 	movq	-0x20(%rax), %rbp
    00000371: 	callq	clock@PLT # Offset: 881
    00000376: 	movq	%rax, end_time(%rip)
    0000037d: 	movq	0x28(%rsp), %rdx
    00000382: 	subq	%fs:0x28, %rdx
    0000038b: 	jne	.Ltmp1557 # Offset: 907
    00000391: 	subq	start_time(%rip), %rax
    00000398: 	pxor	%xmm0, %xmm0
    0000039c: 	movq	%rbp, %rdi
    0000039f: 	cvtsi2sd	%rax, %xmm0
    000003a4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003ac: 	addq	$0x38, %rsp
    000003b0: 	popq	%rbx
    000003b1: 	popq	%rbp
    000003b2: 	popq	%r12
    000003b4: 	popq	%r13
    000003b6: 	popq	%r14
    000003b8: 	popq	%r15
    000003ba: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 954
.Ltmp1545:
    000003bf: 	movl	$0x1, %edx
    000003c4: 	jmp	.Ltmp1558 # Offset: 964
.Ltmp1547:
    000003c9: 	movl	%edx, %esi
    000003cb: 	jmp	.Ltmp1548 # Offset: 971
.Ltmp1554:
    000003d0: 	movq	%rbx, %rdi
    000003d3: 	leaq	0x20(%rsp), %rsi
    000003d8: 	xorl	%edx, %edx
    000003da: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 986
    000003df: 	movq	%rax, (%rbx)
    000003e2: 	movq	%rax, %rdi
    000003e5: 	movq	0x20(%rsp), %rax
    000003ea: 	movq	%rax, 0x10(%rbx)
.Ltmp1561:
    000003ee: 	movq	%r12, %rdx
    000003f1: 	movq	%rbp, %rsi
    000003f4: 	callq	memcpy@PLT # Offset: 1012
    000003f9: 	movq	0x20(%rsp), %r12
    000003fe: 	movq	(%rbx), %rdi
    00000401: 	jmp	.Ltmp1559 # Offset: 1025
.Ltmp1551:
    00000406: 	movq	0x18(%rsp), %rsi
    0000040b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000412: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1042
    00000417: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000041e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000425: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000042c: 	jne	.Ltmp1560 # Offset: 1068
.Ltmp1556:
    00000432: 	movq	-0x8(%rdx), %rax
    00000436: 	addq	$0x200, %rax
    0000043c: 	jmp	.Ltmp1560 # Offset: 1084
.Ltmp1555:
    00000441: 	testq	%r12, %r12
    00000444: 	je	.Ltmp1559 # Offset: 1092
    0000044a: 	jmp	.Ltmp1561 # Offset: 1098
.Ltmp1557:
    0000044c: 	callq	__stack_chk_fail@PLT # Offset: 1100
.Ltmp1553:
    00000451: 	leaq	DATAat0x38110(%rip), %rdi
    00000458: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1112
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj16custom_2term_addIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIt16custom_2term_addItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 99
  State       : disassembled
  Address     : 0x16850
  Size        : 0x49d
  MaxSize     : 0x4a0
  Offset      : 0x16850
  Section     : .text
  Orc Section : .local.text._Z10test_2termIt16custom_2term_addItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	movl	%eax, 0x8(%rsp)
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp1562 # Offset: 69
    0000004b: 	leal	-0x1(%r12), %edi
    00000050: 	leal	-0x2(%r12), %eax
    00000055: 	xorl	%r13d, %r13d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%edi, %eax
    0000005e: 	shrl	$0x3, %eax
    00000061: 	movl	%edi, 0x4(%rsp)
    00000065: 	andl	$-0x8, %edi
    00000068: 	subl	$0x1, %eax
    0000006b: 	movl	%edi, 0x10(%rsp)
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	leal	0x1(%rdi), %eax
    0000007b: 	movl	%eax, 0x14(%rsp)
.Ltmp1570:
    0000007f: 	cvttsd2si	init_value(%rip), %r9d
    00000088: 	movzwl	0x2(%rbx), %r10d
    0000008d: 	movzwl	(%rbx), %edi
.Ltmp1578:
    00000090: 	leal	(%r10,%rdi,2), %eax
    00000094: 	movl	%edi, %edx
    00000096: 	imull	%r10d, %eax
    0000009a: 	imull	%edi, %edx
    0000009d: 	addl	%edx, %eax
    0000009f: 	cmpl	$0x1, %r12d
    000000a3: 	jle	.Ltmp1563 # Offset: 163
    000000a9: 	cmpl	$0x6, 0xc(%rsp)
    000000ae: 	jbe	.Ltmp1564 # Offset: 174
    000000b4: 	movq	%rbx, %rdx
    000000b7: 	pxor	%xmm2, %xmm2
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1565:
    000000c0: 	movdqu	(%rdx), %xmm1
    000000c4: 	movdqu	0x2(%rdx), %xmm3
    000000c9: 	addq	$0x10, %rdx
    000000cd: 	movdqa	%xmm1, %xmm0
    000000d1: 	pmullw	%xmm1, %xmm1
    000000d5: 	psllw	$0x1, %xmm0
    000000da: 	paddw	%xmm3, %xmm0
    000000de: 	pmullw	%xmm3, %xmm0
    000000e2: 	paddw	%xmm1, %xmm0
    000000e6: 	paddw	%xmm0, %xmm2
    000000ea: 	cmpq	%rbp, %rdx
    000000ed: 	jne	.Ltmp1565 # Offset: 237
    000000ef: 	movdqa	%xmm2, %xmm0
    000000f3: 	movl	0x10(%rsp), %esi
    000000f7: 	movl	0x4(%rsp), %ecx
    000000fb: 	psrldq	$0x8, %xmm0
    00000100: 	paddw	%xmm0, %xmm2
    00000104: 	movdqa	%xmm2, %xmm0
    00000108: 	psrldq	$0x4, %xmm0
    0000010d: 	paddw	%xmm0, %xmm2
    00000111: 	movdqa	%xmm2, %xmm0
    00000115: 	psrldq	$0x2, %xmm0
    0000011a: 	paddw	%xmm0, %xmm2
    0000011e: 	pextrw	$0x0, %xmm2, %edx
    00000123: 	addl	%edx, %eax
    00000125: 	cmpl	%ecx, %esi
    00000127: 	je	.Ltmp1563 # Offset: 295
    0000012d: 	movl	0x14(%rsp), %edx
    00000131: 	movl	%esi, %r8d
.Ltmp1579:
    00000134: 	movl	%r12d, %ecx
    00000137: 	subl	%r8d, %ecx
    0000013a: 	leal	-0x1(%rcx), %esi
    0000013d: 	subl	$0x2, %ecx
    00000140: 	cmpl	$0x2, %ecx
    00000143: 	jbe	.Ltmp1566 # Offset: 323
    00000145: 	leal	0x1(%r8), %ecx
    00000149: 	movq	-0x2(%rbx,%rcx,2), %xmm1
    0000014f: 	movq	(%rbx,%rcx,2), %xmm2
    00000154: 	movdqa	%xmm1, %xmm0
    00000158: 	pmullw	%xmm1, %xmm1
    0000015c: 	psllw	$0x1, %xmm0
    00000161: 	paddw	%xmm2, %xmm0
    00000165: 	pmullw	%xmm2, %xmm0
    00000169: 	paddw	%xmm1, %xmm0
    0000016d: 	pextrw	$0x0, %xmm0, %ecx
    00000172: 	pextrw	$0x1, %xmm0, %r8d
    00000178: 	addl	%r8d, %ecx
    0000017b: 	addl	%eax, %ecx
    0000017d: 	pextrw	$0x2, %xmm0, %eax
    00000182: 	addl	%eax, %ecx
    00000184: 	pextrw	$0x3, %xmm0, %eax
    00000189: 	addl	%ecx, %eax
    0000018b: 	movl	%esi, %ecx
    0000018d: 	andl	$-0x4, %ecx
    00000190: 	addl	%ecx, %edx
    00000192: 	cmpl	%ecx, %esi
    00000194: 	je	.Ltmp1563 # Offset: 404
.Ltmp1566:
    0000019a: 	movslq	%edx, %rsi
    0000019d: 	leal	0x1(%rdx), %ecx
    000001a0: 	addq	%rsi, %rsi
    000001a3: 	leaq	(%rbx,%rsi), %r8
    000001a7: 	cmpl	0x4(%rsp), %ecx
    000001ab: 	jge	.Ltmp1567 # Offset: 427
    000001b1: 	cmpl	%edx, %r12d
    000001b4: 	jle	.Ltmp1567 # Offset: 436
    000001ba: 	movzwl	-0x2(%r8), %ecx
    000001bf: 	movzwl	(%r8), %r11d
    000001c3: 	movzwl	0x2(%rbx,%rsi), %r8d
    000001c9: 	movl	%ecx, %r15d
    000001cc: 	leal	(%r11,%r11), %r14d
    000001d0: 	imull	%ecx, %r15d
    000001d4: 	leal	(%r14,%rcx,2), %ecx
    000001d8: 	imull	%r11d, %ecx
    000001dc: 	leal	0x3(%rdx), %r11d
    000001e0: 	addl	%r15d, %eax
    000001e3: 	leal	(%r14,%r8), %r15d
    000001e7: 	imull	%r8d, %r15d
    000001eb: 	addl	%r15d, %eax
    000001ee: 	addl	%ecx, %eax
    000001f0: 	leal	0x2(%rdx), %ecx
    000001f3: 	cmpl	%r11d, 0x4(%rsp)
    000001f8: 	jle	.Ltmp1568 # Offset: 504
    000001fa: 	movzwl	0x4(%rbx,%rsi), %r14d
    00000200: 	movzwl	0x6(%rbx,%rsi), %r11d
    00000206: 	leal	(%r14,%r14), %ecx
    0000020a: 	leal	(%rcx,%r8,2), %r15d
    0000020e: 	addl	%r11d, %ecx
    00000211: 	imull	%r15d, %r14d
    00000215: 	imull	%r11d, %ecx
    00000219: 	imull	%r8d, %r8d
    0000021d: 	addl	%r14d, %ecx
    00000220: 	addl	%r8d, %ecx
    00000223: 	leal	0x5(%rdx), %r8d
    00000227: 	addl	%ecx, %eax
    00000229: 	leal	0x4(%rdx), %ecx
    0000022c: 	cmpl	%r8d, 0x4(%rsp)
    00000231: 	jle	.Ltmp1568 # Offset: 561
    00000233: 	movzwl	0x8(%rbx,%rsi), %r14d
    00000239: 	movzwl	0xa(%rbx,%rsi), %esi
    0000023e: 	leal	(%r14,%r14), %r8d
    00000242: 	leal	(%r8,%r11,2), %ecx
    00000246: 	addl	%esi, %r8d
    00000249: 	imull	%r14d, %ecx
    0000024d: 	imull	%esi, %r8d
    00000251: 	imull	%r11d, %r11d
    00000255: 	addl	%r8d, %ecx
    00000258: 	addl	%r11d, %ecx
    0000025b: 	addl	%ecx, %eax
    0000025d: 	leal	0x6(%rdx), %ecx
.Ltmp1568:
    00000260: 	movslq	%ecx, %rdx
    00000263: 	leaq	(%rdx,%rdx), %r8
    00000267: 	movzwl	(%rbx,%rdx,2), %esi
    0000026b: 	movzwl	-0x2(%rbx,%r8), %edx
    00000271: 	movl	%edx, %r11d
    00000274: 	imull	%edx, %r11d
    00000278: 	leal	(%rsi,%rdx,2), %edx
    0000027b: 	imull	%esi, %edx
    0000027e: 	addl	%eax, %r11d
    00000281: 	leal	(%rdx,%r11), %eax
    00000285: 	leal	0x1(%rcx), %edx
    00000288: 	cmpl	%edx, %r12d
    0000028b: 	jle	.Ltmp1563 # Offset: 651
    0000028d: 	movzwl	0x2(%rbx,%r8), %edx
    00000293: 	addl	$0x2, %ecx
    00000296: 	leal	(%rdx,%rsi,2), %r11d
    0000029a: 	imull	%edx, %r11d
    0000029e: 	imull	%esi, %esi
    000002a1: 	addl	%esi, %r11d
    000002a4: 	addl	%r11d, %eax
    000002a7: 	cmpl	%ecx, %r12d
    000002aa: 	jle	.Ltmp1563 # Offset: 682
    000002ac: 	movzwl	0x4(%rbx,%r8), %esi
    000002b2: 	leal	(%rsi,%rdx,2), %ecx
    000002b5: 	imull	%esi, %ecx
    000002b8: 	imull	%edx, %edx
    000002bb: 	addl	%ecx, %edx
    000002bd: 	addl	%edx, %eax
.Ltmp1563:
    000002bf: 	movl	%r9d, %edx
    000002c2: 	imull	%r9d, %edx
    000002c6: 	imulw	$0x7d00, %dx, %dx
    000002cb: 	cmpw	%ax, %dx
    000002ce: 	je	.Ltmp1569 # Offset: 718
    000002d4: 	movl	current_test(%rip), %edx
    000002da: 	leaq	DATAat0x381c8(%rip), %rsi
    000002e1: 	movl	$0x1, %edi
    000002e6: 	xorl	%eax, %eax
    000002e8: 	addl	$0x1, %r13d
    000002ec: 	callq	__printf_chk@PLT # Offset: 748
    000002f1: 	movl	iterations(%rip), %eax
    000002f7: 	movl	%eax, 0x8(%rsp)
    000002fb: 	cmpl	%r13d, %eax
    000002fe: 	jg	.Ltmp1570 # Offset: 766
.Ltmp1562:
    00000304: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000030b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000312: 	subq	$0x20, %rax
    00000316: 	cmpq	%rax, %rbx
    00000319: 	je	.Ltmp1571 # Offset: 793
    0000031f: 	movq	0x18(%rsp), %rax
    00000324: 	leaq	0x10(%rbx), %rdi
    00000328: 	movq	%rdi, (%rbx)
    0000032b: 	movq	(%rax), %rbp
    0000032e: 	movq	0x8(%rax), %r12
    00000332: 	movq	%rbp, %rax
    00000335: 	addq	%r12, %rax
    00000338: 	je	.Ltmp1572 # Offset: 824
    0000033a: 	testq	%rbp, %rbp
    0000033d: 	je	.Ltmp1573 # Offset: 829
.Ltmp1572:
    00000343: 	movq	%r12, 0x20(%rsp)
    00000348: 	cmpq	$0xf, %r12
    0000034c: 	ja	.Ltmp1574 # Offset: 844
    00000352: 	cmpq	$0x1, %r12
    00000356: 	jne	.Ltmp1575 # Offset: 854
    0000035c: 	movzbl	(%rbp), %eax
    00000360: 	movb	%al, 0x10(%rbx)
.Ltmp1580:
    00000363: 	movq	%r12, 0x8(%rbx)
    00000367: 	movb	$0x0, (%rdi,%r12)
    0000036c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000373: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000037a: 	addq	$0x20, %rax
    0000037e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000385: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000038c: 	je	.Ltmp1576 # Offset: 908
.Ltmp1581:
    00000392: 	movq	-0x20(%rax), %rbp
    00000396: 	callq	clock@PLT # Offset: 918
    0000039b: 	movq	%rax, end_time(%rip)
    000003a2: 	movq	0x28(%rsp), %rdx
    000003a7: 	subq	%fs:0x28, %rdx
    000003b0: 	jne	.Ltmp1577 # Offset: 944
    000003b6: 	subq	start_time(%rip), %rax
    000003bd: 	pxor	%xmm0, %xmm0
    000003c1: 	movq	%rbp, %rdi
    000003c4: 	cvtsi2sd	%rax, %xmm0
    000003c9: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003d1: 	addq	$0x38, %rsp
    000003d5: 	popq	%rbx
    000003d6: 	popq	%rbp
    000003d7: 	popq	%r12
    000003d9: 	popq	%r13
    000003db: 	popq	%r14
    000003dd: 	popq	%r15
    000003df: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 991
    000003e4: 	nopl	(%rax) # Size: 4
.Ltmp1569:
    000003e8: 	addl	$0x1, %r13d
    000003ec: 	cmpl	0x8(%rsp), %r13d
    000003f1: 	jl	.Ltmp1578 # Offset: 1009
    000003f7: 	jmp	.Ltmp1562 # Offset: 1015
.Ltmp1564:
    000003fc: 	xorl	%r8d, %r8d
    000003ff: 	movl	$0x1, %edx
    00000404: 	jmp	.Ltmp1579 # Offset: 1028
.Ltmp1574:
    00000409: 	movq	%rbx, %rdi
    0000040c: 	leaq	0x20(%rsp), %rsi
    00000411: 	xorl	%edx, %edx
    00000413: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1043
    00000418: 	movq	%rax, (%rbx)
    0000041b: 	movq	%rax, %rdi
    0000041e: 	movq	0x20(%rsp), %rax
    00000423: 	movq	%rax, 0x10(%rbx)
.Ltmp1582:
    00000427: 	movq	%r12, %rdx
    0000042a: 	movq	%rbp, %rsi
    0000042d: 	callq	memcpy@PLT # Offset: 1069
    00000432: 	movq	0x20(%rsp), %r12
    00000437: 	movq	(%rbx), %rdi
    0000043a: 	jmp	.Ltmp1580 # Offset: 1082
.Ltmp1567:
    0000043f: 	movl	%edx, %ecx
    00000441: 	jmp	.Ltmp1568 # Offset: 1089
.Ltmp1571:
    00000446: 	movq	0x18(%rsp), %rsi
    0000044b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000452: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1106
    00000457: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000045e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000465: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000046c: 	jne	.Ltmp1581 # Offset: 1132
.Ltmp1576:
    00000472: 	movq	-0x8(%rdx), %rax
    00000476: 	addq	$0x200, %rax
    0000047c: 	jmp	.Ltmp1581 # Offset: 1148
.Ltmp1575:
    00000481: 	testq	%r12, %r12
    00000484: 	je	.Ltmp1580 # Offset: 1156
    0000048a: 	jmp	.Ltmp1582 # Offset: 1162
.Ltmp1577:
    0000048c: 	callq	__stack_chk_fail@PLT # Offset: 1164
.Ltmp1573:
    00000491: 	leaq	DATAat0x38110(%rip), %rdi
    00000498: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1176
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIt16custom_2term_addItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeItEvd" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0x16cf0
  Size        : 0x3927
  MaxSize     : 0x3930
  Offset      : 0x16cf0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeItEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xfa8, %rsp
    00000039: 	leaq	DATAat0x38578(%rip), %rsi
    00000040: 	leaq	0x70(%rsp), %r14
    00000045: 	movsd	%xmm0, 0x8(%rsp)
    0000004b: 	leaq	0x110(%rsp), %rbp
    00000053: 	movq	%fs:0x28, %rax
    0000005c: 	movq	%rax, 0x3f98(%rsp)
    00000064: 	xorl	%eax, %eax
    00000066: 	movq	%r14, %rdi
    00000069: 	leaq	0x3f90(%rsp), %rbx
    00000071: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 113
    00000076: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    0000007e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm6
    00000086: 	leaq	0x50(%rsp), %rsi
    0000008b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000092: 	movaps	%xmm5, 0x50(%rsp)
    00000097: 	movaps	%xmm6, 0x60(%rsp)
    0000009c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 156
    000000a1: 	cvttsd2si	init_value(%rip), %eax
    000000a9: 	movsd	0x8(%rsp), %xmm0
    000000af: 	movd	%eax, %xmm1
    000000b3: 	movq	%rbp, %rax
    000000b6: 	punpcklwd	%xmm1, %xmm1
    000000ba: 	pshufd	$0x0, %xmm1, %xmm1
    000000bf: 	nop # Size: 1
.Ltmp1583:
    000000c0: 	movaps	%xmm1, (%rax)
    000000c3: 	addq	$0x10, %rax
    000000c7: 	cmpq	%rax, %rbx
    000000ca: 	jne	.Ltmp1583 # Offset: 202
    000000cc: 	cvttsd2si	%xmm0, %esi
    000000d0: 	xorl	%edx, %edx
    000000d2: 	leaq	0xf0(%rsp), %r15
    000000da: 	movl	%esi, %eax
    000000dc: 	movl	%esi, %edi
    000000de: 	movl	%esi, 0x40(%rsp)
    000000e2: 	addl	$0x2, %edi
    000000e5: 	addl	%eax, %eax
    000000e7: 	movw	%si, 0x34(%rsp)
    000000ec: 	movw	%ax, 0x3a(%rsp)
    000000f1: 	divw	%di
    000000f4: 	movw	%di, 0x3c(%rsp)
    000000f9: 	leaq	DATAat0x381d8(%rip), %rdx
    00000100: 	movq	%r15, %rdi
    00000103: 	addl	%esi, %eax
    00000105: 	movq	%r14, %rsi
    00000108: 	movw	%ax, 0x3e(%rsp)
    0000010d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 269
    00000112: 	callq	clock@PLT # Offset: 274
    00000117: 	movl	iterations(%rip), %ecx
    0000011d: 	xorl	%r12d, %r12d
    00000120: 	leaq	DATAat0x381c8(%rip), %r13
    00000127: 	movq	%rax, start_time(%rip)
    0000012e: 	testl	%ecx, %ecx
    00000130: 	jle	.Ltmp1584 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1587:
    00000138: 	movq	%rbp, %rax
    0000013b: 	pxor	%xmm0, %xmm0
    0000013f: 	nop # Size: 1
.Ltmp1585:
    00000140: 	paddw	(%rax), %xmm0
    00000144: 	addq	$0x10, %rax
    00000148: 	cmpq	%rax, %rbx
    0000014b: 	jne	.Ltmp1585 # Offset: 331
    0000014d: 	movdqa	%xmm0, %xmm1
    00000151: 	cvttsd2si	init_value(%rip), %eax
    00000159: 	psrldq	$0x8, %xmm1
    0000015e: 	paddw	%xmm1, %xmm0
    00000162: 	movdqa	%xmm0, %xmm1
    00000166: 	psrldq	$0x4, %xmm1
    0000016b: 	imulw	$0x1f40, %ax, %ax
    00000170: 	paddw	%xmm1, %xmm0
    00000174: 	movdqa	%xmm0, %xmm1
    00000178: 	psrldq	$0x2, %xmm1
    0000017d: 	paddw	%xmm1, %xmm0
    00000181: 	pextrw	$0x0, %xmm0, %edx
    00000186: 	cmpw	%dx, %ax
    00000189: 	je	.Ltmp1586 # Offset: 393
    0000018b: 	movl	current_test(%rip), %edx
    00000191: 	movq	%r13, %rsi
    00000194: 	movl	$0x1, %edi
    00000199: 	xorl	%eax, %eax
    0000019b: 	callq	__printf_chk@PLT # Offset: 411
    000001a0: 	movl	iterations(%rip), %ecx
.Ltmp1586:
    000001a6: 	addl	$0x1, %r12d
    000001aa: 	cmpl	%ecx, %r12d
    000001ad: 	jl	.Ltmp1587 # Offset: 429
.Ltmp1584:
    000001af: 	movq	%r15, %rsi
    000001b2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 441
    000001be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d3: 	je	.Ltmp1588 # Offset: 467
.Ltmp1793:
    000001d9: 	movq	-0x20(%rax), %r12
    000001dd: 	callq	clock@PLT # Offset: 477
    000001e2: 	pxor	%xmm0, %xmm0
    000001e6: 	movq	%rax, end_time(%rip)
    000001ed: 	movq	%r12, %rdi
    000001f0: 	subq	start_time(%rip), %rax
    000001f7: 	cvtsi2sd	%rax, %xmm0
    000001fc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000204: 	callq	_Z13record_resultdPKc # Offset: 516
    00000209: 	movq	0xf0(%rsp), %rdi
    00000211: 	leaq	0x100(%rsp), %rax
    00000219: 	movq	%rax, 0x8(%rsp)
    0000021e: 	cmpq	%rax, %rdi
    00000221: 	je	.Ltmp1589 # Offset: 545
    00000223: 	movq	0x100(%rsp), %rax
    0000022b: 	leaq	0x1(%rax), %rsi
    0000022f: 	callq	_ZdlPvm@PLT # Offset: 559
.Ltmp1589:
    00000234: 	leaq	DATAat0x381de(%rip), %rdx
    0000023b: 	movq	%r14, %rsi
    0000023e: 	movq	%r15, %rdi
    00000241: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 577
    00000246: 	callq	clock@PLT # Offset: 582
    0000024b: 	movl	iterations(%rip), %ecx
    00000251: 	xorl	%r12d, %r12d
    00000254: 	leaq	DATAat0x381c8(%rip), %r13
    0000025b: 	movq	%rax, start_time(%rip)
    00000262: 	testl	%ecx, %ecx
    00000264: 	jle	.Ltmp1590 # Offset: 612
    0000026a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1593:
    00000270: 	movq	%rbp, %rax
    00000273: 	pxor	%xmm0, %xmm0
    00000277: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1591:
    00000280: 	paddw	(%rax), %xmm0
    00000284: 	addq	$0x10, %rax
    00000288: 	cmpq	%rax, %rbx
    0000028b: 	jne	.Ltmp1591 # Offset: 651
    0000028d: 	movdqa	%xmm0, %xmm1
    00000291: 	cvttsd2si	init_value(%rip), %eax
    00000299: 	psrldq	$0x8, %xmm1
    0000029e: 	paddw	%xmm1, %xmm0
    000002a2: 	movdqa	%xmm0, %xmm1
    000002a6: 	psrldq	$0x4, %xmm1
    000002ab: 	imulw	$0x1f40, %ax, %ax
    000002b0: 	paddw	%xmm1, %xmm0
    000002b4: 	movdqa	%xmm0, %xmm1
    000002b8: 	psrldq	$0x2, %xmm1
    000002bd: 	paddw	%xmm1, %xmm0
    000002c1: 	pextrw	$0x0, %xmm0, %edx
    000002c6: 	cmpw	%dx, %ax
    000002c9: 	je	.Ltmp1592 # Offset: 713
    000002cb: 	movl	current_test(%rip), %edx
    000002d1: 	movq	%r13, %rsi
    000002d4: 	movl	$0x1, %edi
    000002d9: 	xorl	%eax, %eax
    000002db: 	callq	__printf_chk@PLT # Offset: 731
    000002e0: 	movl	iterations(%rip), %ecx
.Ltmp1592:
    000002e6: 	addl	$0x1, %r12d
    000002ea: 	cmpl	%ecx, %r12d
    000002ed: 	jl	.Ltmp1593 # Offset: 749
.Ltmp1590:
    000002ef: 	movq	%r15, %rsi
    000002f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 761
    000002fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000305: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000030c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000313: 	je	.Ltmp1594 # Offset: 787
.Ltmp1836:
    00000319: 	movq	-0x20(%rax), %r12
    0000031d: 	callq	clock@PLT # Offset: 797
    00000322: 	pxor	%xmm0, %xmm0
    00000326: 	movq	%rax, end_time(%rip)
    0000032d: 	movq	%r12, %rdi
    00000330: 	subq	start_time(%rip), %rax
    00000337: 	cvtsi2sd	%rax, %xmm0
    0000033c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000344: 	callq	_Z13record_resultdPKc # Offset: 836
    00000349: 	movq	0xf0(%rsp), %rdi
    00000351: 	cmpq	0x8(%rsp), %rdi
    00000356: 	je	.Ltmp1595 # Offset: 854
    00000358: 	movq	0x100(%rsp), %rax
    00000360: 	leaq	0x1(%rax), %rsi
    00000364: 	callq	_ZdlPvm@PLT # Offset: 868
.Ltmp1595:
    00000369: 	leaq	DATAat0x381e8(%rip), %rdx
    00000370: 	movq	%r14, %rsi
    00000373: 	movq	%r15, %rdi
    00000376: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 886
    0000037b: 	callq	clock@PLT # Offset: 891
    00000380: 	movl	iterations(%rip), %ecx
    00000386: 	xorl	%r12d, %r12d
    00000389: 	leaq	DATAat0x381c8(%rip), %r13
    00000390: 	movq	%rax, start_time(%rip)
    00000397: 	testl	%ecx, %ecx
    00000399: 	jle	.Ltmp1596 # Offset: 921
    0000039f: 	nop # Size: 1
.Ltmp1599:
    000003a0: 	movq	%rbp, %rax
    000003a3: 	pxor	%xmm0, %xmm0
    000003a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1597:
    000003b0: 	paddw	(%rax), %xmm0
    000003b4: 	addq	$0x10, %rax
    000003b8: 	cmpq	%rax, %rbx
    000003bb: 	jne	.Ltmp1597 # Offset: 955
    000003bd: 	movdqa	%xmm0, %xmm1
    000003c1: 	cvttsd2si	init_value(%rip), %eax
    000003c9: 	psrldq	$0x8, %xmm1
    000003ce: 	paddw	%xmm1, %xmm0
    000003d2: 	movdqa	%xmm0, %xmm1
    000003d6: 	psrldq	$0x4, %xmm1
    000003db: 	imulw	$0x1f40, %ax, %ax
    000003e0: 	paddw	%xmm1, %xmm0
    000003e4: 	movdqa	%xmm0, %xmm1
    000003e8: 	psrldq	$0x2, %xmm1
    000003ed: 	paddw	%xmm1, %xmm0
    000003f1: 	pextrw	$0x0, %xmm0, %edx
    000003f6: 	cmpw	%dx, %ax
    000003f9: 	je	.Ltmp1598 # Offset: 1017
    000003fb: 	movl	current_test(%rip), %edx
    00000401: 	movq	%r13, %rsi
    00000404: 	movl	$0x1, %edi
    00000409: 	xorl	%eax, %eax
    0000040b: 	callq	__printf_chk@PLT # Offset: 1035
    00000410: 	movl	iterations(%rip), %ecx
.Ltmp1598:
    00000416: 	addl	$0x1, %r12d
    0000041a: 	cmpl	%ecx, %r12d
    0000041d: 	jl	.Ltmp1599 # Offset: 1053
.Ltmp1596:
    0000041f: 	movq	%r15, %rsi
    00000422: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000429: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1065
    0000042e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000435: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000043c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000443: 	je	.Ltmp1600 # Offset: 1091
.Ltmp1835:
    00000449: 	movq	-0x20(%rax), %r12
    0000044d: 	callq	clock@PLT # Offset: 1101
    00000452: 	pxor	%xmm0, %xmm0
    00000456: 	movq	%rax, end_time(%rip)
    0000045d: 	movq	%r12, %rdi
    00000460: 	subq	start_time(%rip), %rax
    00000467: 	cvtsi2sd	%rax, %xmm0
    0000046c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000474: 	callq	_Z13record_resultdPKc # Offset: 1140
    00000479: 	movq	0xf0(%rsp), %rdi
    00000481: 	cmpq	0x8(%rsp), %rdi
    00000486: 	je	.Ltmp1601 # Offset: 1158
    00000488: 	movq	0x100(%rsp), %rax
    00000490: 	leaq	0x1(%rax), %rsi
    00000494: 	callq	_ZdlPvm@PLT # Offset: 1172
.Ltmp1601:
    00000499: 	leaq	DATAat0x381f7(%rip), %rdx
    000004a0: 	movq	%r14, %rsi
    000004a3: 	movq	%r15, %rdi
    000004a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1190
    000004ab: 	callq	clock@PLT # Offset: 1195
    000004b0: 	movl	iterations(%rip), %ecx
    000004b6: 	xorl	%r12d, %r12d
    000004b9: 	leaq	DATAat0x381c8(%rip), %r13
    000004c0: 	movq	%rax, start_time(%rip)
    000004c7: 	testl	%ecx, %ecx
    000004c9: 	jle	.Ltmp1602 # Offset: 1225
    000004cf: 	nop # Size: 1
.Ltmp1605:
    000004d0: 	movq	%rbp, %rax
    000004d3: 	pxor	%xmm0, %xmm0
    000004d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1603:
    000004e0: 	psubw	(%rax), %xmm0
    000004e4: 	addq	$0x10, %rax
    000004e8: 	cmpq	%rax, %rbx
    000004eb: 	jne	.Ltmp1603 # Offset: 1259
    000004ed: 	movdqa	%xmm0, %xmm1
    000004f1: 	cvttsd2si	init_value(%rip), %eax
    000004f9: 	psrldq	$0x8, %xmm1
    000004fe: 	paddw	%xmm1, %xmm0
    00000502: 	movdqa	%xmm0, %xmm1
    00000506: 	psrldq	$0x4, %xmm1
    0000050b: 	imulw	$0xe0c0, %ax, %ax
    00000510: 	paddw	%xmm1, %xmm0
    00000514: 	movdqa	%xmm0, %xmm1
    00000518: 	psrldq	$0x2, %xmm1
    0000051d: 	paddw	%xmm1, %xmm0
    00000521: 	pextrw	$0x0, %xmm0, %edx
    00000526: 	cmpw	%dx, %ax
    00000529: 	je	.Ltmp1604 # Offset: 1321
    0000052b: 	movl	current_test(%rip), %edx
    00000531: 	movq	%r13, %rsi
    00000534: 	movl	$0x1, %edi
    00000539: 	xorl	%eax, %eax
    0000053b: 	callq	__printf_chk@PLT # Offset: 1339
    00000540: 	movl	iterations(%rip), %ecx
.Ltmp1604:
    00000546: 	addl	$0x1, %r12d
    0000054a: 	cmpl	%ecx, %r12d
    0000054d: 	jl	.Ltmp1605 # Offset: 1357
.Ltmp1602:
    0000054f: 	movq	%r15, %rsi
    00000552: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000559: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1369
    0000055e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000565: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000056c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000573: 	je	.Ltmp1606 # Offset: 1395
.Ltmp1834:
    00000579: 	movq	-0x20(%rax), %r12
    0000057d: 	callq	clock@PLT # Offset: 1405
    00000582: 	pxor	%xmm0, %xmm0
    00000586: 	movq	%rax, end_time(%rip)
    0000058d: 	movq	%r12, %rdi
    00000590: 	subq	start_time(%rip), %rax
    00000597: 	cvtsi2sd	%rax, %xmm0
    0000059c: 	divsd	DATAat0x385e0(%rip), %xmm0
    000005a4: 	callq	_Z13record_resultdPKc # Offset: 1444
    000005a9: 	movq	0xf0(%rsp), %rdi
    000005b1: 	cmpq	0x8(%rsp), %rdi
    000005b6: 	je	.Ltmp1607 # Offset: 1462
    000005b8: 	movq	0x100(%rsp), %rax
    000005c0: 	leaq	0x1(%rax), %rsi
    000005c4: 	callq	_ZdlPvm@PLT # Offset: 1476
.Ltmp1607:
    000005c9: 	leaq	DATAat0x381ff(%rip), %rdx
    000005d0: 	movq	%r14, %rsi
    000005d3: 	movq	%r15, %rdi
    000005d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1494
    000005db: 	callq	clock@PLT # Offset: 1499
    000005e0: 	movl	iterations(%rip), %ecx
    000005e6: 	xorl	%r12d, %r12d
    000005e9: 	leaq	DATAat0x381c8(%rip), %r13
    000005f0: 	movq	%rax, start_time(%rip)
    000005f7: 	testl	%ecx, %ecx
    000005f9: 	jle	.Ltmp1608 # Offset: 1529
    000005ff: 	nop # Size: 1
.Ltmp1611:
    00000600: 	movq	%rbp, %rax
    00000603: 	pxor	%xmm0, %xmm0
    00000607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1609:
    00000610: 	paddw	(%rax), %xmm0
    00000614: 	addq	$0x10, %rax
    00000618: 	cmpq	%rbx, %rax
    0000061b: 	jne	.Ltmp1609 # Offset: 1563
    0000061d: 	movdqa	%xmm0, %xmm1
    00000621: 	cvttsd2si	init_value(%rip), %eax
    00000629: 	psrldq	$0x8, %xmm1
    0000062e: 	paddw	%xmm1, %xmm0
    00000632: 	movdqa	%xmm0, %xmm1
    00000636: 	psrldq	$0x4, %xmm1
    0000063b: 	imulw	$0x1f40, %ax, %ax
    00000640: 	paddw	%xmm1, %xmm0
    00000644: 	movdqa	%xmm0, %xmm1
    00000648: 	psrldq	$0x2, %xmm1
    0000064d: 	paddw	%xmm1, %xmm0
    00000651: 	pextrw	$0x0, %xmm0, %edx
    00000656: 	cmpw	%dx, %ax
    00000659: 	je	.Ltmp1610 # Offset: 1625
    0000065b: 	movl	current_test(%rip), %edx
    00000661: 	movq	%r13, %rsi
    00000664: 	movl	$0x1, %edi
    00000669: 	xorl	%eax, %eax
    0000066b: 	callq	__printf_chk@PLT # Offset: 1643
    00000670: 	movl	iterations(%rip), %ecx
.Ltmp1610:
    00000676: 	addl	$0x1, %r12d
    0000067a: 	cmpl	%ecx, %r12d
    0000067d: 	jl	.Ltmp1611 # Offset: 1661
.Ltmp1608:
    0000067f: 	movq	%r15, %rsi
    00000682: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000689: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1673
    0000068e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000695: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000069c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006a3: 	je	.Ltmp1612 # Offset: 1699
.Ltmp1833:
    000006a9: 	movq	-0x20(%rax), %r12
    000006ad: 	callq	clock@PLT # Offset: 1709
    000006b2: 	pxor	%xmm0, %xmm0
    000006b6: 	movq	%rax, end_time(%rip)
    000006bd: 	movq	%r12, %rdi
    000006c0: 	subq	start_time(%rip), %rax
    000006c7: 	cvtsi2sd	%rax, %xmm0
    000006cc: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006d4: 	callq	_Z13record_resultdPKc # Offset: 1748
    000006d9: 	movq	0xf0(%rsp), %rdi
    000006e1: 	cmpq	0x8(%rsp), %rdi
    000006e6: 	je	.Ltmp1613 # Offset: 1766
    000006e8: 	movq	0x100(%rsp), %rax
    000006f0: 	leaq	0x1(%rax), %rsi
    000006f4: 	callq	_ZdlPvm@PLT # Offset: 1780
.Ltmp1613:
    000006f9: 	leaq	DATAat0x3820d(%rip), %rdx
    00000700: 	movq	%r14, %rsi
    00000703: 	movq	%r15, %rdi
    00000706: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1798
    0000070b: 	callq	clock@PLT # Offset: 1803
    00000710: 	movl	iterations(%rip), %ecx
    00000716: 	xorl	%r12d, %r12d
    00000719: 	leaq	DATAat0x381c8(%rip), %r13
    00000720: 	movq	%rax, start_time(%rip)
    00000727: 	testl	%ecx, %ecx
    00000729: 	jle	.Ltmp1614 # Offset: 1833
    0000072f: 	nop # Size: 1
.Ltmp1617:
    00000730: 	movq	%rbp, %rax
    00000733: 	pxor	%xmm0, %xmm0
    00000737: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1615:
    00000740: 	psubw	(%rax), %xmm0
    00000744: 	addq	$0x10, %rax
    00000748: 	cmpq	%rax, %rbx
    0000074b: 	jne	.Ltmp1615 # Offset: 1867
    0000074d: 	movdqa	%xmm0, %xmm1
    00000751: 	cvttsd2si	init_value(%rip), %eax
    00000759: 	psrldq	$0x8, %xmm1
    0000075e: 	paddw	%xmm1, %xmm0
    00000762: 	movdqa	%xmm0, %xmm1
    00000766: 	psrldq	$0x4, %xmm1
    0000076b: 	imulw	$0xe0c0, %ax, %ax
    00000770: 	paddw	%xmm1, %xmm0
    00000774: 	movdqa	%xmm0, %xmm1
    00000778: 	psrldq	$0x2, %xmm1
    0000077d: 	paddw	%xmm1, %xmm0
    00000781: 	pextrw	$0x0, %xmm0, %edx
    00000786: 	cmpw	%dx, %ax
    00000789: 	je	.Ltmp1616 # Offset: 1929
    0000078b: 	movl	current_test(%rip), %edx
    00000791: 	movq	%r13, %rsi
    00000794: 	movl	$0x1, %edi
    00000799: 	xorl	%eax, %eax
    0000079b: 	callq	__printf_chk@PLT # Offset: 1947
    000007a0: 	movl	iterations(%rip), %ecx
.Ltmp1616:
    000007a6: 	addl	$0x1, %r12d
    000007aa: 	cmpl	%ecx, %r12d
    000007ad: 	jl	.Ltmp1617 # Offset: 1965
.Ltmp1614:
    000007af: 	movq	%r15, %rsi
    000007b2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1977
    000007be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007d3: 	je	.Ltmp1618 # Offset: 2003
.Ltmp1832:
    000007d9: 	movq	-0x20(%rax), %r12
    000007dd: 	callq	clock@PLT # Offset: 2013
    000007e2: 	pxor	%xmm0, %xmm0
    000007e6: 	movq	%rax, end_time(%rip)
    000007ed: 	movq	%r12, %rdi
    000007f0: 	subq	start_time(%rip), %rax
    000007f7: 	cvtsi2sd	%rax, %xmm0
    000007fc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000804: 	callq	_Z13record_resultdPKc # Offset: 2052
    00000809: 	movq	0xf0(%rsp), %rdi
    00000811: 	cmpq	0x8(%rsp), %rdi
    00000816: 	je	.Ltmp1619 # Offset: 2070
    00000818: 	movq	0x100(%rsp), %rax
    00000820: 	leaq	0x1(%rax), %rsi
    00000824: 	callq	_ZdlPvm@PLT # Offset: 2084
.Ltmp1619:
    00000829: 	leaq	DATAat0x38219(%rip), %rdx
    00000830: 	movq	%r14, %rsi
    00000833: 	movq	%r15, %rdi
    00000836: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2102
    0000083b: 	callq	clock@PLT # Offset: 2107
    00000840: 	movl	iterations(%rip), %ecx
    00000846: 	xorl	%r12d, %r12d
    00000849: 	leaq	DATAat0x381c8(%rip), %r13
    00000850: 	movq	%rax, start_time(%rip)
    00000857: 	testl	%ecx, %ecx
    00000859: 	jle	.Ltmp1620 # Offset: 2137
    0000085f: 	nop # Size: 1
.Ltmp1623:
    00000860: 	movq	%rbp, %rax
    00000863: 	pxor	%xmm0, %xmm0
    00000867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1621:
    00000870: 	paddw	(%rax), %xmm0
    00000874: 	addq	$0x10, %rax
    00000878: 	cmpq	%rax, %rbx
    0000087b: 	jne	.Ltmp1621 # Offset: 2171
    0000087d: 	movdqa	%xmm0, %xmm1
    00000881: 	cvttsd2si	init_value(%rip), %eax
    00000889: 	psrldq	$0x8, %xmm1
    0000088e: 	paddw	%xmm1, %xmm0
    00000892: 	movdqa	%xmm0, %xmm1
    00000896: 	psrldq	$0x4, %xmm1
    0000089b: 	imulw	$0x1f40, %ax, %ax
    000008a0: 	paddw	%xmm1, %xmm0
    000008a4: 	movdqa	%xmm0, %xmm1
    000008a8: 	psrldq	$0x2, %xmm1
    000008ad: 	paddw	%xmm1, %xmm0
    000008b1: 	pextrw	$0x0, %xmm0, %edx
    000008b6: 	cmpw	%dx, %ax
    000008b9: 	je	.Ltmp1622 # Offset: 2233
    000008bb: 	movl	current_test(%rip), %edx
    000008c1: 	movq	%r13, %rsi
    000008c4: 	movl	$0x1, %edi
    000008c9: 	xorl	%eax, %eax
    000008cb: 	callq	__printf_chk@PLT # Offset: 2251
    000008d0: 	movl	iterations(%rip), %ecx
.Ltmp1622:
    000008d6: 	addl	$0x1, %r12d
    000008da: 	cmpl	%ecx, %r12d
    000008dd: 	jl	.Ltmp1623 # Offset: 2269
.Ltmp1620:
    000008df: 	movq	%r15, %rsi
    000008e2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008e9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2281
    000008ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008f5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000903: 	je	.Ltmp1624 # Offset: 2307
.Ltmp1831:
    00000909: 	movq	-0x20(%rax), %r12
    0000090d: 	callq	clock@PLT # Offset: 2317
    00000912: 	pxor	%xmm0, %xmm0
    00000916: 	movq	%rax, end_time(%rip)
    0000091d: 	movq	%r12, %rdi
    00000920: 	subq	start_time(%rip), %rax
    00000927: 	cvtsi2sd	%rax, %xmm0
    0000092c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000934: 	callq	_Z13record_resultdPKc # Offset: 2356
    00000939: 	movq	0xf0(%rsp), %rdi
    00000941: 	cmpq	0x8(%rsp), %rdi
    00000946: 	je	.Ltmp1625 # Offset: 2374
    00000948: 	movq	0x100(%rsp), %rax
    00000950: 	leaq	0x1(%rax), %rsi
    00000954: 	callq	_ZdlPvm@PLT # Offset: 2388
.Ltmp1625:
    00000959: 	leaq	DATAat0x38224(%rip), %rdx
    00000960: 	movq	%r14, %rsi
    00000963: 	movq	%r15, %rdi
    00000966: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2406
    0000096b: 	callq	clock@PLT # Offset: 2411
    00000970: 	movl	iterations(%rip), %ecx
    00000976: 	xorl	%r12d, %r12d
    00000979: 	leaq	DATAat0x381c8(%rip), %r13
    00000980: 	movq	%rax, start_time(%rip)
    00000987: 	testl	%ecx, %ecx
    00000989: 	jle	.Ltmp1626 # Offset: 2441
    0000098f: 	nop # Size: 1
.Ltmp1629:
    00000990: 	movq	%rbp, %rax
    00000993: 	pxor	%xmm0, %xmm0
    00000997: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1627:
    000009a0: 	paddw	(%rax), %xmm0
    000009a4: 	addq	$0x10, %rax
    000009a8: 	cmpq	%rbx, %rax
    000009ab: 	jne	.Ltmp1627 # Offset: 2475
    000009ad: 	movdqa	%xmm0, %xmm1
    000009b1: 	cvttsd2si	init_value(%rip), %eax
    000009b9: 	psrldq	$0x8, %xmm1
    000009be: 	paddw	%xmm1, %xmm0
    000009c2: 	movdqa	%xmm0, %xmm1
    000009c6: 	psrldq	$0x4, %xmm1
    000009cb: 	imulw	$0x1f40, %ax, %ax
    000009d0: 	paddw	%xmm1, %xmm0
    000009d4: 	movdqa	%xmm0, %xmm1
    000009d8: 	psrldq	$0x2, %xmm1
    000009dd: 	paddw	%xmm1, %xmm0
    000009e1: 	pextrw	$0x0, %xmm0, %edx
    000009e6: 	cmpw	%dx, %ax
    000009e9: 	je	.Ltmp1628 # Offset: 2537
    000009eb: 	movl	current_test(%rip), %edx
    000009f1: 	movq	%r13, %rsi
    000009f4: 	movl	$0x1, %edi
    000009f9: 	xorl	%eax, %eax
    000009fb: 	callq	__printf_chk@PLT # Offset: 2555
    00000a00: 	movl	iterations(%rip), %ecx
.Ltmp1628:
    00000a06: 	addl	$0x1, %r12d
    00000a0a: 	cmpl	%ecx, %r12d
    00000a0d: 	jl	.Ltmp1629 # Offset: 2573
.Ltmp1626:
    00000a0f: 	movq	%r15, %rsi
    00000a12: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a19: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2585
    00000a1e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a25: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a2c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a33: 	je	.Ltmp1630 # Offset: 2611
.Ltmp1830:
    00000a39: 	movq	-0x20(%rax), %r12
    00000a3d: 	callq	clock@PLT # Offset: 2621
    00000a42: 	pxor	%xmm0, %xmm0
    00000a46: 	movq	%rax, end_time(%rip)
    00000a4d: 	movq	%r12, %rdi
    00000a50: 	subq	start_time(%rip), %rax
    00000a57: 	cvtsi2sd	%rax, %xmm0
    00000a5c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000a64: 	callq	_Z13record_resultdPKc # Offset: 2660
    00000a69: 	movq	0xf0(%rsp), %rdi
    00000a71: 	cmpq	0x8(%rsp), %rdi
    00000a76: 	je	.Ltmp1631 # Offset: 2678
    00000a78: 	movq	0x100(%rsp), %rax
    00000a80: 	leaq	0x1(%rax), %rsi
    00000a84: 	callq	_ZdlPvm@PLT # Offset: 2692
.Ltmp1631:
    00000a89: 	leaq	DATAat0x38233(%rip), %rdx
    00000a90: 	movq	%r14, %rsi
    00000a93: 	movq	%r15, %rdi
    00000a96: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2710
    00000a9b: 	callq	clock@PLT # Offset: 2715
    00000aa0: 	movl	iterations(%rip), %ecx
    00000aa6: 	xorl	%r12d, %r12d
    00000aa9: 	leaq	DATAat0x381c8(%rip), %r13
    00000ab0: 	movq	%rax, start_time(%rip)
    00000ab7: 	testl	%ecx, %ecx
    00000ab9: 	jle	.Ltmp1632 # Offset: 2745
    00000abf: 	nop # Size: 1
.Ltmp1635:
    00000ac0: 	movq	%rbp, %rax
    00000ac3: 	pxor	%xmm0, %xmm0
    00000ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1633:
    00000ad0: 	paddw	(%rax), %xmm0
    00000ad4: 	addq	$0x10, %rax
    00000ad8: 	cmpq	%rbx, %rax
    00000adb: 	jne	.Ltmp1633 # Offset: 2779
    00000add: 	movdqa	%xmm0, %xmm1
    00000ae1: 	cvttsd2si	init_value(%rip), %eax
    00000ae9: 	psrldq	$0x8, %xmm1
    00000aee: 	paddw	%xmm1, %xmm0
    00000af2: 	movdqa	%xmm0, %xmm1
    00000af6: 	psrldq	$0x4, %xmm1
    00000afb: 	imulw	$0x1f40, %ax, %ax
    00000b00: 	paddw	%xmm1, %xmm0
    00000b04: 	movdqa	%xmm0, %xmm1
    00000b08: 	psrldq	$0x2, %xmm1
    00000b0d: 	paddw	%xmm1, %xmm0
    00000b11: 	pextrw	$0x0, %xmm0, %edx
    00000b16: 	cmpw	%dx, %ax
    00000b19: 	je	.Ltmp1634 # Offset: 2841
    00000b1b: 	movl	current_test(%rip), %edx
    00000b21: 	movq	%r13, %rsi
    00000b24: 	movl	$0x1, %edi
    00000b29: 	xorl	%eax, %eax
    00000b2b: 	callq	__printf_chk@PLT # Offset: 2859
    00000b30: 	movl	iterations(%rip), %ecx
.Ltmp1634:
    00000b36: 	addl	$0x1, %r12d
    00000b3a: 	cmpl	%ecx, %r12d
    00000b3d: 	jl	.Ltmp1635 # Offset: 2877
.Ltmp1632:
    00000b3f: 	movq	%r15, %rsi
    00000b42: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b49: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2889
    00000b4e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b55: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b5c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b63: 	je	.Ltmp1636 # Offset: 2915
.Ltmp1829:
    00000b69: 	movq	-0x20(%rax), %r12
    00000b6d: 	callq	clock@PLT # Offset: 2925
    00000b72: 	pxor	%xmm0, %xmm0
    00000b76: 	movq	%rax, end_time(%rip)
    00000b7d: 	movq	%r12, %rdi
    00000b80: 	subq	start_time(%rip), %rax
    00000b87: 	cvtsi2sd	%rax, %xmm0
    00000b8c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000b94: 	callq	_Z13record_resultdPKc # Offset: 2964
    00000b99: 	movq	0xf0(%rsp), %rdi
    00000ba1: 	cmpq	0x8(%rsp), %rdi
    00000ba6: 	je	.Ltmp1637 # Offset: 2982
    00000ba8: 	movq	0x100(%rsp), %rax
    00000bb0: 	leaq	0x1(%rax), %rsi
    00000bb4: 	callq	_ZdlPvm@PLT # Offset: 2996
.Ltmp1637:
    00000bb9: 	leaq	DATAat0x3823d(%rip), %rdx
    00000bc0: 	movq	%r14, %rsi
    00000bc3: 	movq	%r15, %rdi
    00000bc6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3014
    00000bcb: 	callq	clock@PLT # Offset: 3019
    00000bd0: 	movl	iterations(%rip), %ecx
    00000bd6: 	xorl	%r12d, %r12d
    00000bd9: 	leaq	DATAat0x381c8(%rip), %r13
    00000be0: 	movq	%rax, start_time(%rip)
    00000be7: 	testl	%ecx, %ecx
    00000be9: 	jle	.Ltmp1638 # Offset: 3049
    00000bef: 	nop # Size: 1
.Ltmp1641:
    00000bf0: 	movq	%rbp, %rax
    00000bf3: 	pxor	%xmm0, %xmm0
    00000bf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1639:
    00000c00: 	paddw	(%rax), %xmm0
    00000c04: 	addq	$0x10, %rax
    00000c08: 	cmpq	%rax, %rbx
    00000c0b: 	jne	.Ltmp1639 # Offset: 3083
    00000c0d: 	movdqa	%xmm0, %xmm1
    00000c11: 	cvttsd2si	init_value(%rip), %eax
    00000c19: 	psrldq	$0x8, %xmm1
    00000c1e: 	paddw	%xmm1, %xmm0
    00000c22: 	movdqa	%xmm0, %xmm1
    00000c26: 	psrldq	$0x4, %xmm1
    00000c2b: 	imulw	$0x1f40, %ax, %ax
    00000c30: 	paddw	%xmm1, %xmm0
    00000c34: 	movdqa	%xmm0, %xmm1
    00000c38: 	psrldq	$0x2, %xmm1
    00000c3d: 	paddw	%xmm1, %xmm0
    00000c41: 	pextrw	$0x0, %xmm0, %edx
    00000c46: 	cmpw	%dx, %ax
    00000c49: 	je	.Ltmp1640 # Offset: 3145
    00000c4b: 	movl	current_test(%rip), %edx
    00000c51: 	movq	%r13, %rsi
    00000c54: 	movl	$0x1, %edi
    00000c59: 	xorl	%eax, %eax
    00000c5b: 	callq	__printf_chk@PLT # Offset: 3163
    00000c60: 	movl	iterations(%rip), %ecx
.Ltmp1640:
    00000c66: 	addl	$0x1, %r12d
    00000c6a: 	cmpl	%ecx, %r12d
    00000c6d: 	jl	.Ltmp1641 # Offset: 3181
.Ltmp1638:
    00000c6f: 	movq	%r15, %rsi
    00000c72: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c79: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3193
    00000c7e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c85: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c8c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c93: 	je	.Ltmp1642 # Offset: 3219
.Ltmp1828:
    00000c99: 	movq	-0x20(%rax), %r12
    00000c9d: 	callq	clock@PLT # Offset: 3229
    00000ca2: 	pxor	%xmm0, %xmm0
    00000ca6: 	movq	%rax, end_time(%rip)
    00000cad: 	movq	%r12, %rdi
    00000cb0: 	subq	start_time(%rip), %rax
    00000cb7: 	cvtsi2sd	%rax, %xmm0
    00000cbc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000cc4: 	callq	_Z13record_resultdPKc # Offset: 3268
    00000cc9: 	movq	0xf0(%rsp), %rdi
    00000cd1: 	cmpq	0x8(%rsp), %rdi
    00000cd6: 	je	.Ltmp1643 # Offset: 3286
    00000cd8: 	movq	0x100(%rsp), %rax
    00000ce0: 	leaq	0x1(%rax), %rsi
    00000ce4: 	callq	_ZdlPvm@PLT # Offset: 3300
.Ltmp1643:
    00000ce9: 	leaq	DATAat0x38246(%rip), %rdx
    00000cf0: 	movq	%r14, %rsi
    00000cf3: 	movq	%r15, %rdi
    00000cf6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3318
    00000cfb: 	callq	clock@PLT # Offset: 3323
    00000d00: 	movl	iterations(%rip), %ecx
    00000d06: 	xorl	%r12d, %r12d
    00000d09: 	leaq	DATAat0x381c8(%rip), %r13
    00000d10: 	movq	%rax, start_time(%rip)
    00000d17: 	testl	%ecx, %ecx
    00000d19: 	jle	.Ltmp1644 # Offset: 3353
    00000d1f: 	nop # Size: 1
.Ltmp1647:
    00000d20: 	movq	%rbp, %rax
    00000d23: 	pxor	%xmm0, %xmm0
    00000d27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1645:
    00000d30: 	paddw	(%rax), %xmm0
    00000d34: 	addq	$0x10, %rax
    00000d38: 	cmpq	%rbx, %rax
    00000d3b: 	jne	.Ltmp1645 # Offset: 3387
    00000d3d: 	movdqa	%xmm0, %xmm1
    00000d41: 	cvttsd2si	init_value(%rip), %eax
    00000d49: 	psrldq	$0x8, %xmm1
    00000d4e: 	paddw	%xmm1, %xmm0
    00000d52: 	movdqa	%xmm0, %xmm1
    00000d56: 	psrldq	$0x4, %xmm1
    00000d5b: 	imulw	$0x1f40, %ax, %ax
    00000d60: 	paddw	%xmm1, %xmm0
    00000d64: 	movdqa	%xmm0, %xmm1
    00000d68: 	psrldq	$0x2, %xmm1
    00000d6d: 	paddw	%xmm1, %xmm0
    00000d71: 	pextrw	$0x0, %xmm0, %edx
    00000d76: 	cmpw	%dx, %ax
    00000d79: 	je	.Ltmp1646 # Offset: 3449
    00000d7b: 	movl	current_test(%rip), %edx
    00000d81: 	movq	%r13, %rsi
    00000d84: 	movl	$0x1, %edi
    00000d89: 	xorl	%eax, %eax
    00000d8b: 	callq	__printf_chk@PLT # Offset: 3467
    00000d90: 	movl	iterations(%rip), %ecx
.Ltmp1646:
    00000d96: 	addl	$0x1, %r12d
    00000d9a: 	cmpl	%ecx, %r12d
    00000d9d: 	jl	.Ltmp1647 # Offset: 3485
.Ltmp1644:
    00000d9f: 	movq	%r15, %rsi
    00000da2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000da9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3497
    00000dae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000db5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dbc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dc3: 	je	.Ltmp1648 # Offset: 3523
.Ltmp1827:
    00000dc9: 	movq	-0x20(%rax), %r12
    00000dcd: 	callq	clock@PLT # Offset: 3533
    00000dd2: 	pxor	%xmm0, %xmm0
    00000dd6: 	movq	%rax, end_time(%rip)
    00000ddd: 	movq	%r12, %rdi
    00000de0: 	subq	start_time(%rip), %rax
    00000de7: 	cvtsi2sd	%rax, %xmm0
    00000dec: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000df4: 	callq	_Z13record_resultdPKc # Offset: 3572
    00000df9: 	movq	0xf0(%rsp), %rdi
    00000e01: 	cmpq	0x8(%rsp), %rdi
    00000e06: 	je	.Ltmp1649 # Offset: 3590
    00000e08: 	movq	0x100(%rsp), %rax
    00000e10: 	leaq	0x1(%rax), %rsi
    00000e14: 	callq	_ZdlPvm@PLT # Offset: 3604
.Ltmp1649:
    00000e19: 	leaq	DATAat0x3824f(%rip), %rdx
    00000e20: 	movq	%r14, %rsi
    00000e23: 	movq	%r15, %rdi
    00000e26: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3622
    00000e2b: 	callq	clock@PLT # Offset: 3627
    00000e30: 	movl	iterations(%rip), %ecx
    00000e36: 	xorl	%r12d, %r12d
    00000e39: 	leaq	DATAat0x381c8(%rip), %r13
    00000e40: 	movq	%rax, start_time(%rip)
    00000e47: 	testl	%ecx, %ecx
    00000e49: 	jle	.Ltmp1650 # Offset: 3657
    00000e4f: 	nop # Size: 1
.Ltmp1653:
    00000e50: 	movq	%rbp, %rax
    00000e53: 	pxor	%xmm0, %xmm0
    00000e57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1651:
    00000e60: 	paddw	(%rax), %xmm0
    00000e64: 	addq	$0x10, %rax
    00000e68: 	cmpq	%rax, %rbx
    00000e6b: 	jne	.Ltmp1651 # Offset: 3691
    00000e6d: 	movdqa	%xmm0, %xmm1
    00000e71: 	cvttsd2si	init_value(%rip), %eax
    00000e79: 	psrldq	$0x8, %xmm1
    00000e7e: 	paddw	%xmm1, %xmm0
    00000e82: 	movdqa	%xmm0, %xmm1
    00000e86: 	psrldq	$0x4, %xmm1
    00000e8b: 	imulw	$0x1f40, %ax, %ax
    00000e90: 	paddw	%xmm1, %xmm0
    00000e94: 	movdqa	%xmm0, %xmm1
    00000e98: 	psrldq	$0x2, %xmm1
    00000e9d: 	paddw	%xmm1, %xmm0
    00000ea1: 	pextrw	$0x0, %xmm0, %edx
    00000ea6: 	cmpw	%dx, %ax
    00000ea9: 	je	.Ltmp1652 # Offset: 3753
    00000eab: 	movl	current_test(%rip), %edx
    00000eb1: 	movq	%r13, %rsi
    00000eb4: 	movl	$0x1, %edi
    00000eb9: 	xorl	%eax, %eax
    00000ebb: 	callq	__printf_chk@PLT # Offset: 3771
    00000ec0: 	movl	iterations(%rip), %ecx
.Ltmp1652:
    00000ec6: 	addl	$0x1, %r12d
    00000eca: 	cmpl	%ecx, %r12d
    00000ecd: 	jl	.Ltmp1653 # Offset: 3789
.Ltmp1650:
    00000ecf: 	movq	%r15, %rsi
    00000ed2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ed9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3801
    00000ede: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ee5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000eec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ef3: 	je	.Ltmp1654 # Offset: 3827
.Ltmp1826:
    00000ef9: 	movq	-0x20(%rax), %r12
    00000efd: 	callq	clock@PLT # Offset: 3837
    00000f02: 	pxor	%xmm0, %xmm0
    00000f06: 	movq	%rax, end_time(%rip)
    00000f0d: 	movq	%r12, %rdi
    00000f10: 	subq	start_time(%rip), %rax
    00000f17: 	cvtsi2sd	%rax, %xmm0
    00000f1c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f24: 	callq	_Z13record_resultdPKc # Offset: 3876
    00000f29: 	movq	0xf0(%rsp), %rdi
    00000f31: 	cmpq	0x8(%rsp), %rdi
    00000f36: 	je	.Ltmp1655 # Offset: 3894
    00000f38: 	movq	0x100(%rsp), %rax
    00000f40: 	leaq	0x1(%rax), %rsi
    00000f44: 	callq	_ZdlPvm@PLT # Offset: 3908
.Ltmp1655:
    00000f49: 	leaq	DATAat0x38259(%rip), %rdx
    00000f50: 	movq	%r14, %rsi
    00000f53: 	movq	%r15, %rdi
    00000f56: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3926
    00000f5b: 	callq	clock@PLT # Offset: 3931
    00000f60: 	movl	iterations(%rip), %ecx
    00000f66: 	xorl	%r12d, %r12d
    00000f69: 	leaq	DATAat0x381c8(%rip), %r13
    00000f70: 	movq	%rax, start_time(%rip)
    00000f77: 	testl	%ecx, %ecx
    00000f79: 	jle	.Ltmp1656 # Offset: 3961
    00000f7f: 	nop # Size: 1
.Ltmp1659:
    00000f80: 	movq	%rbp, %rax
    00000f83: 	pxor	%xmm0, %xmm0
    00000f87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1657:
    00000f90: 	paddw	(%rax), %xmm0
    00000f94: 	addq	$0x10, %rax
    00000f98: 	cmpq	%rbx, %rax
    00000f9b: 	jne	.Ltmp1657 # Offset: 3995
    00000f9d: 	movdqa	%xmm0, %xmm1
    00000fa1: 	cvttsd2si	init_value(%rip), %eax
    00000fa9: 	psrldq	$0x8, %xmm1
    00000fae: 	paddw	%xmm1, %xmm0
    00000fb2: 	movdqa	%xmm0, %xmm1
    00000fb6: 	psrldq	$0x4, %xmm1
    00000fbb: 	imulw	$0x1f40, %ax, %ax
    00000fc0: 	paddw	%xmm1, %xmm0
    00000fc4: 	movdqa	%xmm0, %xmm1
    00000fc8: 	psrldq	$0x2, %xmm1
    00000fcd: 	paddw	%xmm1, %xmm0
    00000fd1: 	pextrw	$0x0, %xmm0, %edx
    00000fd6: 	cmpw	%dx, %ax
    00000fd9: 	je	.Ltmp1658 # Offset: 4057
    00000fdb: 	movl	current_test(%rip), %edx
    00000fe1: 	movq	%r13, %rsi
    00000fe4: 	movl	$0x1, %edi
    00000fe9: 	xorl	%eax, %eax
    00000feb: 	callq	__printf_chk@PLT # Offset: 4075
    00000ff0: 	movl	iterations(%rip), %ecx
.Ltmp1658:
    00000ff6: 	addl	$0x1, %r12d
    00000ffa: 	cmpl	%ecx, %r12d
    00000ffd: 	jl	.Ltmp1659 # Offset: 4093
.Ltmp1656:
    00000fff: 	movq	%r15, %rsi
    00001002: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001009: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4105
    0000100e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001015: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000101c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001023: 	je	.Ltmp1660 # Offset: 4131
.Ltmp1825:
    00001029: 	movq	-0x20(%rax), %r12
    0000102d: 	callq	clock@PLT # Offset: 4141
    00001032: 	pxor	%xmm0, %xmm0
    00001036: 	movq	%rax, end_time(%rip)
    0000103d: 	movq	%r12, %rdi
    00001040: 	subq	start_time(%rip), %rax
    00001047: 	cvtsi2sd	%rax, %xmm0
    0000104c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001054: 	callq	_Z13record_resultdPKc # Offset: 4180
    00001059: 	movq	0xf0(%rsp), %rdi
    00001061: 	cmpq	0x8(%rsp), %rdi
    00001066: 	je	.Ltmp1661 # Offset: 4198
    00001068: 	movq	0x100(%rsp), %rax
    00001070: 	leaq	0x1(%rax), %rsi
    00001074: 	callq	_ZdlPvm@PLT # Offset: 4212
.Ltmp1661:
    00001079: 	leaq	DATAat0x38266(%rip), %rdx
    00001080: 	movq	%r14, %rsi
    00001083: 	movq	%r15, %rdi
    00001086: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4230
    0000108b: 	callq	clock@PLT # Offset: 4235
    00001090: 	movl	iterations(%rip), %ecx
    00001096: 	xorl	%r12d, %r12d
    00001099: 	leaq	DATAat0x381c8(%rip), %r13
    000010a0: 	movq	%rax, start_time(%rip)
    000010a7: 	testl	%ecx, %ecx
    000010a9: 	jle	.Ltmp1662 # Offset: 4265
    000010af: 	nop # Size: 1
.Ltmp1665:
    000010b0: 	movq	%rbp, %rax
    000010b3: 	pxor	%xmm0, %xmm0
    000010b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1663:
    000010c0: 	paddw	(%rax), %xmm0
    000010c4: 	addq	$0x10, %rax
    000010c8: 	cmpq	%rbx, %rax
    000010cb: 	jne	.Ltmp1663 # Offset: 4299
    000010cd: 	movdqa	%xmm0, %xmm1
    000010d1: 	cvttsd2si	init_value(%rip), %eax
    000010d9: 	psrldq	$0x8, %xmm1
    000010de: 	paddw	%xmm1, %xmm0
    000010e2: 	movdqa	%xmm0, %xmm1
    000010e6: 	psrldq	$0x4, %xmm1
    000010eb: 	imulw	$0x1f40, %ax, %ax
    000010f0: 	paddw	%xmm1, %xmm0
    000010f4: 	movdqa	%xmm0, %xmm1
    000010f8: 	psrldq	$0x2, %xmm1
    000010fd: 	paddw	%xmm1, %xmm0
    00001101: 	pextrw	$0x0, %xmm0, %edx
    00001106: 	cmpw	%dx, %ax
    00001109: 	je	.Ltmp1664 # Offset: 4361
    0000110b: 	movl	current_test(%rip), %edx
    00001111: 	movq	%r13, %rsi
    00001114: 	movl	$0x1, %edi
    00001119: 	xorl	%eax, %eax
    0000111b: 	callq	__printf_chk@PLT # Offset: 4379
    00001120: 	movl	iterations(%rip), %ecx
.Ltmp1664:
    00001126: 	addl	$0x1, %r12d
    0000112a: 	cmpl	%ecx, %r12d
    0000112d: 	jl	.Ltmp1665 # Offset: 4397
.Ltmp1662:
    0000112f: 	movq	%r15, %rsi
    00001132: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001139: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4409
    0000113e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001145: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000114c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001153: 	je	.Ltmp1666 # Offset: 4435
.Ltmp1824:
    00001159: 	movq	-0x20(%rax), %r12
    0000115d: 	callq	clock@PLT # Offset: 4445
    00001162: 	pxor	%xmm0, %xmm0
    00001166: 	movq	%rax, end_time(%rip)
    0000116d: 	movq	%r12, %rdi
    00001170: 	subq	start_time(%rip), %rax
    00001177: 	cvtsi2sd	%rax, %xmm0
    0000117c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001184: 	callq	_Z13record_resultdPKc # Offset: 4484
    00001189: 	movq	0xf0(%rsp), %rdi
    00001191: 	cmpq	0x8(%rsp), %rdi
    00001196: 	je	.Ltmp1667 # Offset: 4502
    00001198: 	movq	0x100(%rsp), %rax
    000011a0: 	leaq	0x1(%rax), %rsi
    000011a4: 	callq	_ZdlPvm@PLT # Offset: 4516
.Ltmp1667:
    000011a9: 	leaq	0x90(%rsp), %rdi
    000011b1: 	leaq	DATAat0x38275(%rip), %rdx
    000011b8: 	movq	%r14, %rsi
    000011bb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4539
    000011c0: 	movl	iterations(%rip), %esi
    000011c6: 	movq	0x90(%rsp), %rdi
    000011ce: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4558
    000011d3: 	leaq	DATAat0x381e2(%rip), %rdx
    000011da: 	movq	%r14, %rsi
    000011dd: 	movq	%r15, %rdi
    000011e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4576
    000011e5: 	callq	clock@PLT # Offset: 4581
    000011ea: 	movq	%r15, %rsi
    000011ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011f4: 	movq	%rax, start_time(%rip)
    000011fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4603
    00001200: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001207: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000120e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001215: 	je	.Ltmp1668 # Offset: 4629
.Ltmp1823:
    0000121b: 	movq	-0x20(%rax), %r12
    0000121f: 	callq	clock@PLT # Offset: 4639
    00001224: 	pxor	%xmm0, %xmm0
    00001228: 	movq	%rax, end_time(%rip)
    0000122f: 	movq	%r12, %rdi
    00001232: 	subq	start_time(%rip), %rax
    00001239: 	cvtsi2sd	%rax, %xmm0
    0000123e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001246: 	callq	_Z13record_resultdPKc # Offset: 4678
    0000124b: 	movq	0xf0(%rsp), %rdi
    00001253: 	cmpq	0x8(%rsp), %rdi
    00001258: 	je	.Ltmp1669 # Offset: 4696
    0000125a: 	movq	0x100(%rsp), %rax
    00001262: 	leaq	0x1(%rax), %rsi
    00001266: 	callq	_ZdlPvm@PLT # Offset: 4710
.Ltmp1669:
    0000126b: 	leaq	DATAat0x3828f(%rip), %rdx
    00001272: 	movq	%r14, %rsi
    00001275: 	movq	%r15, %rdi
    00001278: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4728
    0000127d: 	callq	clock@PLT # Offset: 4733
    00001282: 	movq	%r15, %rsi
    00001285: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000128c: 	movq	%rax, start_time(%rip)
    00001293: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4755
    00001298: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000129f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012ad: 	je	.Ltmp1670 # Offset: 4781
.Ltmp1822:
    000012b3: 	movq	-0x20(%rax), %r12
    000012b7: 	callq	clock@PLT # Offset: 4791
    000012bc: 	pxor	%xmm0, %xmm0
    000012c0: 	movq	%rax, end_time(%rip)
    000012c7: 	movq	%r12, %rdi
    000012ca: 	subq	start_time(%rip), %rax
    000012d1: 	cvtsi2sd	%rax, %xmm0
    000012d6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012de: 	callq	_Z13record_resultdPKc # Offset: 4830
    000012e3: 	movq	0xf0(%rsp), %rdi
    000012eb: 	cmpq	0x8(%rsp), %rdi
    000012f0: 	je	.Ltmp1671 # Offset: 4848
    000012f2: 	movq	0x100(%rsp), %rax
    000012fa: 	leaq	0x1(%rax), %rsi
    000012fe: 	callq	_ZdlPvm@PLT # Offset: 4862
.Ltmp1671:
    00001303: 	leaq	DATAat0x3829b(%rip), %rdx
    0000130a: 	movq	%r14, %rsi
    0000130d: 	movq	%r15, %rdi
    00001310: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4880
    00001315: 	callq	clock@PLT # Offset: 4885
    0000131a: 	movq	%r15, %rsi
    0000131d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001324: 	movq	%rax, start_time(%rip)
    0000132b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4907
    00001330: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001337: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000133e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001345: 	je	.Ltmp1672 # Offset: 4933
.Ltmp1821:
    0000134b: 	movq	-0x20(%rax), %r12
    0000134f: 	callq	clock@PLT # Offset: 4943
    00001354: 	pxor	%xmm0, %xmm0
    00001358: 	movq	%rax, end_time(%rip)
    0000135f: 	movq	%r12, %rdi
    00001362: 	subq	start_time(%rip), %rax
    00001369: 	cvtsi2sd	%rax, %xmm0
    0000136e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001376: 	callq	_Z13record_resultdPKc # Offset: 4982
    0000137b: 	movq	0xf0(%rsp), %rdi
    00001383: 	cmpq	0x8(%rsp), %rdi
    00001388: 	je	.Ltmp1673 # Offset: 5000
    0000138a: 	movq	0x100(%rsp), %rax
    00001392: 	leaq	0x1(%rax), %rsi
    00001396: 	callq	_ZdlPvm@PLT # Offset: 5014
.Ltmp1673:
    0000139b: 	leaq	DATAat0x382aa(%rip), %rdx
    000013a2: 	movq	%r14, %rsi
    000013a5: 	movq	%r15, %rdi
    000013a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5032
    000013ad: 	callq	clock@PLT # Offset: 5037
    000013b2: 	movq	%r15, %rsi
    000013b5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013bc: 	movq	%rax, start_time(%rip)
    000013c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5059
    000013c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013cf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013dd: 	je	.Ltmp1674 # Offset: 5085
.Ltmp1820:
    000013e3: 	movq	-0x20(%rax), %r12
    000013e7: 	callq	clock@PLT # Offset: 5095
    000013ec: 	pxor	%xmm0, %xmm0
    000013f0: 	movq	%rax, end_time(%rip)
    000013f7: 	movq	%r12, %rdi
    000013fa: 	subq	start_time(%rip), %rax
    00001401: 	cvtsi2sd	%rax, %xmm0
    00001406: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000140e: 	callq	_Z13record_resultdPKc # Offset: 5134
    00001413: 	movq	0xf0(%rsp), %rdi
    0000141b: 	cmpq	0x8(%rsp), %rdi
    00001420: 	je	.Ltmp1675 # Offset: 5152
    00001422: 	movq	0x100(%rsp), %rax
    0000142a: 	leaq	0x1(%rax), %rsi
    0000142e: 	callq	_ZdlPvm@PLT # Offset: 5166
.Ltmp1675:
    00001433: 	leaq	DATAat0x382f3(%rip), %rdx
    0000143a: 	movq	%r14, %rsi
    0000143d: 	movq	%r15, %rdi
    00001440: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5184
    00001445: 	callq	clock@PLT # Offset: 5189
    0000144a: 	movq	%r15, %rsi
    0000144d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001454: 	movq	%rax, start_time(%rip)
    0000145b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5211
    00001460: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001467: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001475: 	je	.Ltmp1676 # Offset: 5237
.Ltmp1819:
    0000147b: 	movq	-0x20(%rax), %r12
    0000147f: 	callq	clock@PLT # Offset: 5247
    00001484: 	pxor	%xmm0, %xmm0
    00001488: 	movq	%rax, end_time(%rip)
    0000148f: 	movq	%r12, %rdi
    00001492: 	subq	start_time(%rip), %rax
    00001499: 	cvtsi2sd	%rax, %xmm0
    0000149e: 	divsd	DATAat0x385e0(%rip), %xmm0
    000014a6: 	callq	_Z13record_resultdPKc # Offset: 5286
    000014ab: 	movq	0xf0(%rsp), %rdi
    000014b3: 	cmpq	0x8(%rsp), %rdi
    000014b8: 	je	.Ltmp1677 # Offset: 5304
    000014ba: 	movq	0x100(%rsp), %rax
    000014c2: 	leaq	0x1(%rax), %rsi
    000014c6: 	callq	_ZdlPvm@PLT # Offset: 5318
.Ltmp1677:
    000014cb: 	leaq	DATAat0x382b3(%rip), %rdx
    000014d2: 	movq	%r14, %rsi
    000014d5: 	movq	%r15, %rdi
    000014d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5336
    000014dd: 	callq	clock@PLT # Offset: 5341
    000014e2: 	movq	%r15, %rsi
    000014e5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014ec: 	movq	%rax, start_time(%rip)
    000014f3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5363
    000014f8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014ff: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001506: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150d: 	je	.Ltmp1678 # Offset: 5389
.Ltmp1818:
    00001513: 	movq	-0x20(%rax), %r12
    00001517: 	callq	clock@PLT # Offset: 5399
    0000151c: 	pxor	%xmm0, %xmm0
    00001520: 	movq	%rax, end_time(%rip)
    00001527: 	movq	%r12, %rdi
    0000152a: 	subq	start_time(%rip), %rax
    00001531: 	cvtsi2sd	%rax, %xmm0
    00001536: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000153e: 	callq	_Z13record_resultdPKc # Offset: 5438
    00001543: 	movq	0xf0(%rsp), %rdi
    0000154b: 	cmpq	0x8(%rsp), %rdi
    00001550: 	je	.Ltmp1679 # Offset: 5456
    00001552: 	movq	0x100(%rsp), %rax
    0000155a: 	leaq	0x1(%rax), %rsi
    0000155e: 	callq	_ZdlPvm@PLT # Offset: 5470
.Ltmp1679:
    00001563: 	leaq	DATAat0x382c3(%rip), %rdx
    0000156a: 	movq	%r14, %rsi
    0000156d: 	movq	%r15, %rdi
    00001570: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5488
    00001575: 	callq	clock@PLT # Offset: 5493
    0000157a: 	movq	%r15, %rsi
    0000157d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001584: 	movq	%rax, start_time(%rip)
    0000158b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5515
    00001590: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001597: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000159e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015a5: 	je	.Ltmp1680 # Offset: 5541
.Ltmp1817:
    000015ab: 	movq	-0x20(%rax), %r12
    000015af: 	callq	clock@PLT # Offset: 5551
    000015b4: 	pxor	%xmm0, %xmm0
    000015b8: 	movq	%rax, end_time(%rip)
    000015bf: 	movq	%r12, %rdi
    000015c2: 	subq	start_time(%rip), %rax
    000015c9: 	cvtsi2sd	%rax, %xmm0
    000015ce: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015d6: 	callq	_Z13record_resultdPKc # Offset: 5590
    000015db: 	movq	0xf0(%rsp), %rdi
    000015e3: 	cmpq	0x8(%rsp), %rdi
    000015e8: 	je	.Ltmp1681 # Offset: 5608
    000015ea: 	movq	0x100(%rsp), %rax
    000015f2: 	leaq	0x1(%rax), %rsi
    000015f6: 	callq	_ZdlPvm@PLT # Offset: 5622
.Ltmp1681:
    000015fb: 	leaq	DATAat0x382d6(%rip), %rdx
    00001602: 	movq	%r14, %rsi
    00001605: 	movq	%r15, %rdi
    00001608: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5640
    0000160d: 	callq	clock@PLT # Offset: 5645
    00001612: 	movq	%r15, %rsi
    00001615: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000161c: 	movq	%rax, start_time(%rip)
    00001623: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5667
    00001628: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000162f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001636: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000163d: 	je	.Ltmp1682 # Offset: 5693
.Ltmp1816:
    00001643: 	movq	-0x20(%rax), %r12
    00001647: 	callq	clock@PLT # Offset: 5703
    0000164c: 	pxor	%xmm0, %xmm0
    00001650: 	movq	%rax, end_time(%rip)
    00001657: 	movq	%r12, %rdi
    0000165a: 	subq	start_time(%rip), %rax
    00001661: 	cvtsi2sd	%rax, %xmm0
    00001666: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000166e: 	callq	_Z13record_resultdPKc # Offset: 5742
    00001673: 	movq	0xf0(%rsp), %rdi
    0000167b: 	cmpq	0x8(%rsp), %rdi
    00001680: 	je	.Ltmp1683 # Offset: 5760
    00001682: 	movq	0x100(%rsp), %rax
    0000168a: 	leaq	0x1(%rax), %rsi
    0000168e: 	callq	_ZdlPvm@PLT # Offset: 5774
.Ltmp1683:
    00001693: 	leaq	DATAat0x382e6(%rip), %rdx
    0000169a: 	movq	%r14, %rsi
    0000169d: 	movq	%r15, %rdi
    000016a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5792
    000016a5: 	callq	clock@PLT # Offset: 5797
    000016aa: 	movq	%r15, %rsi
    000016ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016b4: 	movq	%rax, start_time(%rip)
    000016bb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5819
    000016c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016d5: 	je	.Ltmp1684 # Offset: 5845
.Ltmp1815:
    000016db: 	movq	-0x20(%rax), %r12
    000016df: 	callq	clock@PLT # Offset: 5855
    000016e4: 	pxor	%xmm0, %xmm0
    000016e8: 	movq	%rax, end_time(%rip)
    000016ef: 	movq	%r12, %rdi
    000016f2: 	subq	start_time(%rip), %rax
    000016f9: 	cvtsi2sd	%rax, %xmm0
    000016fe: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001706: 	callq	_Z13record_resultdPKc # Offset: 5894
    0000170b: 	movq	0xf0(%rsp), %rdi
    00001713: 	cmpq	0x8(%rsp), %rdi
    00001718: 	je	.Ltmp1685 # Offset: 5912
    0000171a: 	movq	0x100(%rsp), %rax
    00001722: 	leaq	0x1(%rax), %rsi
    00001726: 	callq	_ZdlPvm@PLT # Offset: 5926
.Ltmp1685:
    0000172b: 	leaq	DATAat0x382ff(%rip), %rdx
    00001732: 	movq	%r14, %rsi
    00001735: 	movq	%r15, %rdi
    00001738: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5944
    0000173d: 	callq	clock@PLT # Offset: 5949
    00001742: 	movq	%r15, %rsi
    00001745: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000174c: 	movq	%rax, start_time(%rip)
    00001753: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5971
    00001758: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000175f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001766: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000176d: 	je	.Ltmp1686 # Offset: 5997
.Ltmp1814:
    00001773: 	movq	-0x20(%rax), %r12
    00001777: 	callq	clock@PLT # Offset: 6007
    0000177c: 	pxor	%xmm0, %xmm0
    00001780: 	movq	%rax, end_time(%rip)
    00001787: 	movq	%r12, %rdi
    0000178a: 	subq	start_time(%rip), %rax
    00001791: 	cvtsi2sd	%rax, %xmm0
    00001796: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000179e: 	callq	_Z13record_resultdPKc # Offset: 6046
    000017a3: 	movq	0xf0(%rsp), %rdi
    000017ab: 	cmpq	0x8(%rsp), %rdi
    000017b0: 	je	.Ltmp1687 # Offset: 6064
    000017b2: 	movq	0x100(%rsp), %rax
    000017ba: 	leaq	0x1(%rax), %rsi
    000017be: 	callq	_ZdlPvm@PLT # Offset: 6078
.Ltmp1687:
    000017c3: 	leaq	DATAat0x38315(%rip), %rdx
    000017ca: 	movq	%r14, %rsi
    000017cd: 	movq	%r15, %rdi
    000017d0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6096
    000017d5: 	callq	clock@PLT # Offset: 6101
    000017da: 	movq	%r15, %rsi
    000017dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017e4: 	movq	%rax, start_time(%rip)
    000017eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6123
    000017f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017f7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017fe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001805: 	je	.Ltmp1688 # Offset: 6149
.Ltmp1813:
    0000180b: 	movq	-0x20(%rax), %r12
    0000180f: 	callq	clock@PLT # Offset: 6159
    00001814: 	pxor	%xmm0, %xmm0
    00001818: 	movq	%rax, end_time(%rip)
    0000181f: 	movq	%r12, %rdi
    00001822: 	subq	start_time(%rip), %rax
    00001829: 	cvtsi2sd	%rax, %xmm0
    0000182e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001836: 	callq	_Z13record_resultdPKc # Offset: 6198
    0000183b: 	movq	0xf0(%rsp), %rdi
    00001843: 	cmpq	0x8(%rsp), %rdi
    00001848: 	je	.Ltmp1689 # Offset: 6216
    0000184a: 	movq	0x100(%rsp), %rax
    00001852: 	leaq	0x1(%rax), %rsi
    00001856: 	callq	_ZdlPvm@PLT # Offset: 6230
.Ltmp1689:
    0000185b: 	leaq	DATAat0x3831f(%rip), %rdx
    00001862: 	movq	%r14, %rsi
    00001865: 	movq	%r15, %rdi
    00001868: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6248
    0000186d: 	callq	clock@PLT # Offset: 6253
    00001872: 	movq	%r15, %rsi
    00001875: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000187c: 	movq	%rax, start_time(%rip)
    00001883: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6275
    00001888: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000188f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001896: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000189d: 	je	.Ltmp1690 # Offset: 6301
.Ltmp1812:
    000018a3: 	movq	-0x20(%rax), %r12
    000018a7: 	callq	clock@PLT # Offset: 6311
    000018ac: 	pxor	%xmm0, %xmm0
    000018b0: 	movq	%rax, end_time(%rip)
    000018b7: 	movq	%r12, %rdi
    000018ba: 	subq	start_time(%rip), %rax
    000018c1: 	cvtsi2sd	%rax, %xmm0
    000018c6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018ce: 	callq	_Z13record_resultdPKc # Offset: 6350
    000018d3: 	movq	0xf0(%rsp), %rdi
    000018db: 	cmpq	0x8(%rsp), %rdi
    000018e0: 	je	.Ltmp1691 # Offset: 6368
    000018e2: 	movq	0x100(%rsp), %rax
    000018ea: 	leaq	0x1(%rax), %rsi
    000018ee: 	callq	_ZdlPvm@PLT # Offset: 6382
.Ltmp1691:
    000018f3: 	leaq	DATAat0x38329(%rip), %rdx
    000018fa: 	movq	%r14, %rsi
    000018fd: 	movq	%r15, %rdi
    00001900: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6400
    00001905: 	callq	clock@PLT # Offset: 6405
    0000190a: 	movq	%r15, %rsi
    0000190d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001914: 	movq	%rax, start_time(%rip)
    0000191b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6427
    00001920: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001927: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000192e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001935: 	je	.Ltmp1692 # Offset: 6453
.Ltmp1811:
    0000193b: 	movq	-0x20(%rax), %r12
    0000193f: 	callq	clock@PLT # Offset: 6463
    00001944: 	pxor	%xmm0, %xmm0
    00001948: 	movq	%rax, end_time(%rip)
    0000194f: 	movq	%r12, %rdi
    00001952: 	subq	start_time(%rip), %rax
    00001959: 	cvtsi2sd	%rax, %xmm0
    0000195e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001966: 	callq	_Z13record_resultdPKc # Offset: 6502
    0000196b: 	movq	0xf0(%rsp), %rdi
    00001973: 	cmpq	0x8(%rsp), %rdi
    00001978: 	je	.Ltmp1693 # Offset: 6520
    0000197a: 	movq	0x100(%rsp), %rax
    00001982: 	leaq	0x1(%rax), %rsi
    00001986: 	callq	_ZdlPvm@PLT # Offset: 6534
.Ltmp1693:
    0000198b: 	leaq	DATAat0x38339(%rip), %rdx
    00001992: 	movq	%r14, %rsi
    00001995: 	movq	%r15, %rdi
    00001998: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6552
    0000199d: 	callq	clock@PLT # Offset: 6557
    000019a2: 	movq	%r15, %rsi
    000019a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019ac: 	movq	%rax, start_time(%rip)
    000019b3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6579
    000019b8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019bf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019c6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019cd: 	je	.Ltmp1694 # Offset: 6605
.Ltmp1810:
    000019d3: 	movq	-0x20(%rax), %r12
    000019d7: 	callq	clock@PLT # Offset: 6615
    000019dc: 	pxor	%xmm0, %xmm0
    000019e0: 	movq	%rax, end_time(%rip)
    000019e7: 	movq	%r12, %rdi
    000019ea: 	subq	start_time(%rip), %rax
    000019f1: 	cvtsi2sd	%rax, %xmm0
    000019f6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000019fe: 	callq	_Z13record_resultdPKc # Offset: 6654
    00001a03: 	movq	0xf0(%rsp), %rdi
    00001a0b: 	cmpq	0x8(%rsp), %rdi
    00001a10: 	je	.Ltmp1695 # Offset: 6672
    00001a12: 	movq	0x100(%rsp), %rax
    00001a1a: 	leaq	0x1(%rax), %rsi
    00001a1e: 	callq	_ZdlPvm@PLT # Offset: 6686
.Ltmp1695:
    00001a23: 	leaq	DATAat0x38351(%rip), %rdx
    00001a2a: 	movq	%r14, %rsi
    00001a2d: 	movq	%r15, %rdi
    00001a30: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6704
    00001a35: 	callq	clock@PLT # Offset: 6709
    00001a3a: 	movq	%r15, %rsi
    00001a3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a44: 	movq	%rax, start_time(%rip)
    00001a4b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6731
    00001a50: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a57: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a5e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a65: 	je	.Ltmp1696 # Offset: 6757
.Ltmp1809:
    00001a6b: 	movq	-0x20(%rax), %r12
    00001a6f: 	callq	clock@PLT # Offset: 6767
    00001a74: 	pxor	%xmm0, %xmm0
    00001a78: 	movq	%rax, end_time(%rip)
    00001a7f: 	movq	%r12, %rdi
    00001a82: 	subq	start_time(%rip), %rax
    00001a89: 	cvtsi2sd	%rax, %xmm0
    00001a8e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a96: 	callq	_Z13record_resultdPKc # Offset: 6806
    00001a9b: 	movq	0xf0(%rsp), %rdi
    00001aa3: 	cmpq	0x8(%rsp), %rdi
    00001aa8: 	je	.Ltmp1697 # Offset: 6824
    00001aaa: 	movq	0x100(%rsp), %rax
    00001ab2: 	leaq	0x1(%rax), %rsi
    00001ab6: 	callq	_ZdlPvm@PLT # Offset: 6838
.Ltmp1697:
    00001abb: 	leaq	DATAat0x38369(%rip), %rdx
    00001ac2: 	movq	%r14, %rsi
    00001ac5: 	movq	%r15, %rdi
    00001ac8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6856
    00001acd: 	callq	clock@PLT # Offset: 6861
    00001ad2: 	movq	%r15, %rsi
    00001ad5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001adc: 	movq	%rax, start_time(%rip)
    00001ae3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6883
    00001ae8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001aef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001af6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001afd: 	je	.Ltmp1698 # Offset: 6909
.Ltmp1808:
    00001b03: 	movq	-0x20(%rax), %r12
    00001b07: 	callq	clock@PLT # Offset: 6919
    00001b0c: 	pxor	%xmm0, %xmm0
    00001b10: 	movq	%rax, end_time(%rip)
    00001b17: 	movq	%r12, %rdi
    00001b1a: 	subq	start_time(%rip), %rax
    00001b21: 	cvtsi2sd	%rax, %xmm0
    00001b26: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b2e: 	callq	_Z13record_resultdPKc # Offset: 6958
    00001b33: 	movq	0xf0(%rsp), %rdi
    00001b3b: 	cmpq	0x8(%rsp), %rdi
    00001b40: 	je	.Ltmp1699 # Offset: 6976
    00001b42: 	movq	0x100(%rsp), %rax
    00001b4a: 	leaq	0x1(%rax), %rsi
    00001b4e: 	callq	_ZdlPvm@PLT # Offset: 6990
.Ltmp1699:
    00001b53: 	leaq	DATAat0x38381(%rip), %rdx
    00001b5a: 	movq	%r14, %rsi
    00001b5d: 	movq	%r15, %rdi
    00001b60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7008
    00001b65: 	callq	clock@PLT # Offset: 7013
    00001b6a: 	movq	%r15, %rsi
    00001b6d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b74: 	movq	%rax, start_time(%rip)
    00001b7b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7035
    00001b80: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b87: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b8e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b95: 	je	.Ltmp1700 # Offset: 7061
.Ltmp1807:
    00001b9b: 	movq	-0x20(%rax), %r12
    00001b9f: 	callq	clock@PLT # Offset: 7071
    00001ba4: 	pxor	%xmm0, %xmm0
    00001ba8: 	movq	%rax, end_time(%rip)
    00001baf: 	movq	%r12, %rdi
    00001bb2: 	subq	start_time(%rip), %rax
    00001bb9: 	cvtsi2sd	%rax, %xmm0
    00001bbe: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001bc6: 	callq	_Z13record_resultdPKc # Offset: 7110
    00001bcb: 	movq	0xf0(%rsp), %rdi
    00001bd3: 	cmpq	0x8(%rsp), %rdi
    00001bd8: 	je	.Ltmp1701 # Offset: 7128
    00001bda: 	movq	0x100(%rsp), %rax
    00001be2: 	leaq	0x1(%rax), %rsi
    00001be6: 	callq	_ZdlPvm@PLT # Offset: 7142
.Ltmp1701:
    00001beb: 	leaq	0xb0(%rsp), %rdi
    00001bf3: 	leaq	DATAat0x384a0(%rip), %rdx
    00001bfa: 	movq	%r14, %rsi
    00001bfd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7165
    00001c02: 	movl	iterations(%rip), %esi
    00001c08: 	movq	0xb0(%rsp), %rdi
    00001c10: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 7184
    00001c15: 	leaq	DATAat0x384c8(%rip), %rdx
    00001c1c: 	movq	%r14, %rsi
    00001c1f: 	movq	%r15, %rdi
    00001c22: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7202
    00001c27: 	movzwl	0x3e(%rsp), %eax
    00001c2c: 	movl	%eax, 0x20(%rsp)
    00001c30: 	movzwl	0x3c(%rsp), %eax
    00001c35: 	movl	%eax, 0x44(%rsp)
    00001c39: 	movzwl	0x3a(%rsp), %eax
    00001c3e: 	movl	%eax, 0x48(%rsp)
    00001c42: 	movzwl	0x40(%rsp), %eax
    00001c47: 	movl	%eax, 0x4c(%rsp)
    00001c4b: 	callq	clock@PLT # Offset: 7243
    00001c50: 	movl	iterations(%rip), %ecx
    00001c56: 	movq	%rax, start_time(%rip)
    00001c5d: 	testl	%ecx, %ecx
    00001c5f: 	jle	.Ltmp1702 # Offset: 7263
    00001c65: 	movl	0x48(%rsp), %r13d
    00001c6a: 	addl	0x4c(%rsp), %r13d
    00001c6f: 	xorl	%r12d, %r12d
    00001c72: 	addl	0x44(%rsp), %r13d
    00001c77: 	addw	0x20(%rsp), %r13w
    00001c7d: 	movd	%r13d, %xmm0
    00001c82: 	punpcklwd	%xmm0, %xmm0
    00001c86: 	pshufd	$0x0, %xmm0, %xmm7
    00001c8b: 	movaps	%xmm7, 0x10(%rsp)
.Ltmp1705:
    00001c90: 	movq	%rbp, %rax
    00001c93: 	pxor	%xmm0, %xmm0
    00001c97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1703:
    00001ca0: 	movdqa	0x10(%rsp), %xmm1
    00001ca6: 	addq	$0x10, %rax
    00001caa: 	pmullw	-0x10(%rax), %xmm1
    00001caf: 	paddw	%xmm1, %xmm0
    00001cb3: 	cmpq	%rbx, %rax
    00001cb6: 	jne	.Ltmp1703 # Offset: 7350
    00001cb8: 	movdqa	%xmm0, %xmm1
    00001cbc: 	cvttsd2si	init_value(%rip), %eax
    00001cc4: 	psrldq	$0x8, %xmm1
    00001cc9: 	paddw	%xmm1, %xmm0
    00001ccd: 	movdqa	%xmm0, %xmm1
    00001cd1: 	psrldq	$0x4, %xmm1
    00001cd6: 	imull	%r13d, %eax
    00001cda: 	paddw	%xmm1, %xmm0
    00001cde: 	movdqa	%xmm0, %xmm1
    00001ce2: 	psrldq	$0x2, %xmm1
    00001ce7: 	imulw	$0x1f40, %ax, %ax
    00001cec: 	paddw	%xmm1, %xmm0
    00001cf0: 	pextrw	$0x0, %xmm0, %edx
    00001cf5: 	cmpw	%dx, %ax
    00001cf8: 	je	.Ltmp1704 # Offset: 7416
    00001cfa: 	movl	current_test(%rip), %edx
    00001d00: 	leaq	DATAat0x381c8(%rip), %rsi
    00001d07: 	movl	$0x1, %edi
    00001d0c: 	xorl	%eax, %eax
    00001d0e: 	callq	__printf_chk@PLT # Offset: 7438
    00001d13: 	movl	iterations(%rip), %ecx
.Ltmp1704:
    00001d19: 	addl	$0x1, %r12d
    00001d1d: 	cmpl	%ecx, %r12d
    00001d20: 	jl	.Ltmp1705 # Offset: 7456
.Ltmp1702:
    00001d26: 	movq	%r15, %rsi
    00001d29: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7472
    00001d35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d4a: 	je	.Ltmp1706 # Offset: 7498
.Ltmp1806:
    00001d50: 	movq	-0x20(%rax), %r12
    00001d54: 	callq	clock@PLT # Offset: 7508
    00001d59: 	pxor	%xmm0, %xmm0
    00001d5d: 	movq	%rax, end_time(%rip)
    00001d64: 	movq	%r12, %rdi
    00001d67: 	subq	start_time(%rip), %rax
    00001d6e: 	cvtsi2sd	%rax, %xmm0
    00001d73: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001d7b: 	callq	_Z13record_resultdPKc # Offset: 7547
    00001d80: 	movq	0xf0(%rsp), %rdi
    00001d88: 	cmpq	0x8(%rsp), %rdi
    00001d8d: 	je	.Ltmp1707 # Offset: 7565
    00001d8f: 	movq	0x100(%rsp), %rax
    00001d97: 	leaq	0x1(%rax), %rsi
    00001d9b: 	callq	_ZdlPvm@PLT # Offset: 7579
.Ltmp1707:
    00001da0: 	leaq	DATAat0x384e8(%rip), %rdx
    00001da7: 	movq	%r14, %rsi
    00001daa: 	movq	%r15, %rdi
    00001dad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7597
    00001db2: 	callq	clock@PLT # Offset: 7602
    00001db7: 	movl	iterations(%rip), %ecx
    00001dbd: 	movq	%rax, start_time(%rip)
    00001dc4: 	testl	%ecx, %ecx
    00001dc6: 	jle	.Ltmp1708 # Offset: 7622
    00001dcc: 	movl	0x48(%rsp), %r13d
    00001dd1: 	addl	0x4c(%rsp), %r13d
    00001dd6: 	xorl	%r12d, %r12d
    00001dd9: 	addl	0x44(%rsp), %r13d
    00001dde: 	addw	0x20(%rsp), %r13w
    00001de4: 	movd	%r13d, %xmm0
    00001de9: 	punpcklwd	%xmm0, %xmm0
    00001ded: 	pshufd	$0x0, %xmm0, %xmm7
    00001df2: 	movaps	%xmm7, 0x10(%rsp)
    00001df7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1711:
    00001e00: 	movq	%rbp, %rax
    00001e03: 	pxor	%xmm0, %xmm0
    00001e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1709:
    00001e10: 	movdqa	0x10(%rsp), %xmm1
    00001e16: 	addq	$0x10, %rax
    00001e1a: 	pmullw	-0x10(%rax), %xmm1
    00001e1f: 	paddw	%xmm1, %xmm0
    00001e23: 	cmpq	%rbx, %rax
    00001e26: 	jne	.Ltmp1709 # Offset: 7718
    00001e28: 	movdqa	%xmm0, %xmm1
    00001e2c: 	cvttsd2si	init_value(%rip), %eax
    00001e34: 	psrldq	$0x8, %xmm1
    00001e39: 	paddw	%xmm1, %xmm0
    00001e3d: 	movdqa	%xmm0, %xmm1
    00001e41: 	psrldq	$0x4, %xmm1
    00001e46: 	imull	%r13d, %eax
    00001e4a: 	paddw	%xmm1, %xmm0
    00001e4e: 	movdqa	%xmm0, %xmm1
    00001e52: 	psrldq	$0x2, %xmm1
    00001e57: 	imulw	$0x1f40, %ax, %ax
    00001e5c: 	paddw	%xmm1, %xmm0
    00001e60: 	pextrw	$0x0, %xmm0, %edx
    00001e65: 	cmpw	%dx, %ax
    00001e68: 	je	.Ltmp1710 # Offset: 7784
    00001e6a: 	movl	current_test(%rip), %edx
    00001e70: 	leaq	DATAat0x381c8(%rip), %rsi
    00001e77: 	movl	$0x1, %edi
    00001e7c: 	xorl	%eax, %eax
    00001e7e: 	callq	__printf_chk@PLT # Offset: 7806
    00001e83: 	movl	iterations(%rip), %ecx
.Ltmp1710:
    00001e89: 	addl	$0x1, %r12d
    00001e8d: 	cmpl	%ecx, %r12d
    00001e90: 	jl	.Ltmp1711 # Offset: 7824
.Ltmp1708:
    00001e96: 	movq	%r15, %rsi
    00001e99: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ea0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7840
    00001ea5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001eac: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001eb3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001eba: 	je	.Ltmp1712 # Offset: 7866
.Ltmp1805:
    00001ec0: 	movq	-0x20(%rax), %r12
    00001ec4: 	callq	clock@PLT # Offset: 7876
    00001ec9: 	pxor	%xmm0, %xmm0
    00001ecd: 	movq	%rax, end_time(%rip)
    00001ed4: 	movq	%r12, %rdi
    00001ed7: 	subq	start_time(%rip), %rax
    00001ede: 	cvtsi2sd	%rax, %xmm0
    00001ee3: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001eeb: 	callq	_Z13record_resultdPKc # Offset: 7915
    00001ef0: 	movq	0xf0(%rsp), %rdi
    00001ef8: 	cmpq	0x8(%rsp), %rdi
    00001efd: 	je	.Ltmp1713 # Offset: 7933
    00001eff: 	movq	0x100(%rsp), %rax
    00001f07: 	leaq	0x1(%rax), %rsi
    00001f0b: 	callq	_ZdlPvm@PLT # Offset: 7947
.Ltmp1713:
    00001f10: 	leaq	DATAat0x38508(%rip), %rdx
    00001f17: 	movq	%r14, %rsi
    00001f1a: 	movq	%r15, %rdi
    00001f1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7965
    00001f22: 	callq	clock@PLT # Offset: 7970
    00001f27: 	movl	iterations(%rip), %ecx
    00001f2d: 	movq	%rax, start_time(%rip)
    00001f34: 	testl	%ecx, %ecx
    00001f36: 	jle	.Ltmp1714 # Offset: 7990
    00001f3c: 	movl	0x4c(%rsp), %r13d
    00001f41: 	subl	0x48(%rsp), %r13d
    00001f46: 	xorl	%r12d, %r12d
    00001f49: 	addl	0x44(%rsp), %r13d
    00001f4e: 	subw	0x20(%rsp), %r13w
    00001f54: 	movd	%r13d, %xmm0
    00001f59: 	punpcklwd	%xmm0, %xmm0
    00001f5d: 	pshufd	$0x0, %xmm0, %xmm5
    00001f62: 	movaps	%xmm5, 0x10(%rsp)
    00001f67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1717:
    00001f70: 	movq	%rbp, %rax
    00001f73: 	pxor	%xmm0, %xmm0
    00001f77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1715:
    00001f80: 	movdqa	0x10(%rsp), %xmm1
    00001f86: 	addq	$0x10, %rax
    00001f8a: 	pmullw	-0x10(%rax), %xmm1
    00001f8f: 	paddw	%xmm1, %xmm0
    00001f93: 	cmpq	%rbx, %rax
    00001f96: 	jne	.Ltmp1715 # Offset: 8086
    00001f98: 	movdqa	%xmm0, %xmm1
    00001f9c: 	cvttsd2si	init_value(%rip), %eax
    00001fa4: 	psrldq	$0x8, %xmm1
    00001fa9: 	paddw	%xmm1, %xmm0
    00001fad: 	movdqa	%xmm0, %xmm1
    00001fb1: 	psrldq	$0x4, %xmm1
    00001fb6: 	imull	%r13d, %eax
    00001fba: 	paddw	%xmm1, %xmm0
    00001fbe: 	movdqa	%xmm0, %xmm1
    00001fc2: 	psrldq	$0x2, %xmm1
    00001fc7: 	imulw	$0x1f40, %ax, %ax
    00001fcc: 	paddw	%xmm1, %xmm0
    00001fd0: 	pextrw	$0x0, %xmm0, %edx
    00001fd5: 	cmpw	%dx, %ax
    00001fd8: 	je	.Ltmp1716 # Offset: 8152
    00001fda: 	movl	current_test(%rip), %edx
    00001fe0: 	leaq	DATAat0x381c8(%rip), %rsi
    00001fe7: 	movl	$0x1, %edi
    00001fec: 	xorl	%eax, %eax
    00001fee: 	callq	__printf_chk@PLT # Offset: 8174
    00001ff3: 	movl	iterations(%rip), %ecx
.Ltmp1716:
    00001ff9: 	addl	$0x1, %r12d
    00001ffd: 	cmpl	%ecx, %r12d
    00002000: 	jl	.Ltmp1717 # Offset: 8192
.Ltmp1714:
    00002006: 	movq	%r15, %rsi
    00002009: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002010: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8208
    00002015: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000201c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002023: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000202a: 	je	.Ltmp1718 # Offset: 8234
.Ltmp1804:
    00002030: 	movq	-0x20(%rax), %r12
    00002034: 	callq	clock@PLT # Offset: 8244
    00002039: 	pxor	%xmm0, %xmm0
    0000203d: 	movq	%rax, end_time(%rip)
    00002044: 	movq	%r12, %rdi
    00002047: 	subq	start_time(%rip), %rax
    0000204e: 	cvtsi2sd	%rax, %xmm0
    00002053: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000205b: 	callq	_Z13record_resultdPKc # Offset: 8283
    00002060: 	movq	0xf0(%rsp), %rdi
    00002068: 	cmpq	0x8(%rsp), %rdi
    0000206d: 	je	.Ltmp1719 # Offset: 8301
    0000206f: 	movq	0x100(%rsp), %rax
    00002077: 	leaq	0x1(%rax), %rsi
    0000207b: 	callq	_ZdlPvm@PLT # Offset: 8315
.Ltmp1719:
    00002080: 	leaq	DATAat0x3839a(%rip), %rdx
    00002087: 	movq	%r14, %rsi
    0000208a: 	movq	%r15, %rdi
    0000208d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8333
    00002092: 	callq	clock@PLT # Offset: 8338
    00002097: 	movl	iterations(%rip), %ecx
    0000209d: 	movq	%rax, start_time(%rip)
    000020a4: 	testl	%ecx, %ecx
    000020a6: 	jle	.Ltmp1720 # Offset: 8358
    000020ac: 	movzwl	0x3a(%rsp), %r13d
    000020b2: 	addw	0x3c(%rsp), %r13w
    000020b8: 	xorl	%r12d, %r12d
    000020bb: 	addw	0x40(%rsp), %r13w
    000020c1: 	addw	0x3e(%rsp), %r13w
    000020c7: 	movd	%r13d, %xmm0
    000020cc: 	punpcklwd	%xmm0, %xmm0
    000020d0: 	pshufd	$0x0, %xmm0, %xmm6
    000020d5: 	movaps	%xmm6, 0x10(%rsp)
    000020da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1723:
    000020e0: 	movq	%rbp, %rax
    000020e3: 	pxor	%xmm0, %xmm0
    000020e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1721:
    000020f0: 	movdqa	0x10(%rsp), %xmm1
    000020f6: 	addq	$0x10, %rax
    000020fa: 	pmullw	-0x10(%rax), %xmm1
    000020ff: 	paddw	%xmm1, %xmm0
    00002103: 	cmpq	%rbx, %rax
    00002106: 	jne	.Ltmp1721 # Offset: 8454
    00002108: 	movdqa	%xmm0, %xmm1
    0000210c: 	cvttsd2si	init_value(%rip), %eax
    00002114: 	psrldq	$0x8, %xmm1
    00002119: 	paddw	%xmm1, %xmm0
    0000211d: 	movdqa	%xmm0, %xmm1
    00002121: 	psrldq	$0x4, %xmm1
    00002126: 	imull	%r13d, %eax
    0000212a: 	paddw	%xmm1, %xmm0
    0000212e: 	movdqa	%xmm0, %xmm1
    00002132: 	psrldq	$0x2, %xmm1
    00002137: 	imulw	$0x1f40, %ax, %ax
    0000213c: 	paddw	%xmm1, %xmm0
    00002140: 	pextrw	$0x0, %xmm0, %edx
    00002145: 	cmpw	%dx, %ax
    00002148: 	je	.Ltmp1722 # Offset: 8520
    0000214a: 	movl	current_test(%rip), %edx
    00002150: 	leaq	DATAat0x381c8(%rip), %rsi
    00002157: 	movl	$0x1, %edi
    0000215c: 	xorl	%eax, %eax
    0000215e: 	callq	__printf_chk@PLT # Offset: 8542
    00002163: 	movl	iterations(%rip), %ecx
.Ltmp1722:
    00002169: 	addl	$0x1, %r12d
    0000216d: 	cmpl	%ecx, %r12d
    00002170: 	jl	.Ltmp1723 # Offset: 8560
.Ltmp1720:
    00002176: 	movq	%r15, %rsi
    00002179: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002180: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8576
    00002185: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000218c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002193: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000219a: 	je	.Ltmp1724 # Offset: 8602
.Ltmp1803:
    000021a0: 	movq	-0x20(%rax), %r12
    000021a4: 	callq	clock@PLT # Offset: 8612
    000021a9: 	pxor	%xmm0, %xmm0
    000021ad: 	movq	%rax, end_time(%rip)
    000021b4: 	movq	%r12, %rdi
    000021b7: 	subq	start_time(%rip), %rax
    000021be: 	cvtsi2sd	%rax, %xmm0
    000021c3: 	divsd	DATAat0x385e0(%rip), %xmm0
    000021cb: 	callq	_Z13record_resultdPKc # Offset: 8651
    000021d0: 	movq	0xf0(%rsp), %rdi
    000021d8: 	cmpq	0x8(%rsp), %rdi
    000021dd: 	je	.Ltmp1725 # Offset: 8669
    000021df: 	movq	0x100(%rsp), %rax
    000021e7: 	leaq	0x1(%rax), %rsi
    000021eb: 	callq	_ZdlPvm@PLT # Offset: 8683
.Ltmp1725:
    000021f0: 	leaq	DATAat0x383b1(%rip), %rdx
    000021f7: 	movq	%r14, %rsi
    000021fa: 	movq	%r15, %rdi
    000021fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8701
    00002202: 	callq	clock@PLT # Offset: 8706
    00002207: 	movl	iterations(%rip), %ecx
    0000220d: 	movq	%rax, start_time(%rip)
    00002214: 	testl	%ecx, %ecx
    00002216: 	jle	.Ltmp1726 # Offset: 8726
    0000221c: 	movzwl	0x3a(%rsp), %r13d
    00002222: 	addw	0x3c(%rsp), %r13w
    00002228: 	xorl	%r12d, %r12d
    0000222b: 	addw	0x40(%rsp), %r13w
    00002231: 	addw	0x3e(%rsp), %r13w
    00002237: 	movd	%r13d, %xmm0
    0000223c: 	punpcklwd	%xmm0, %xmm0
    00002240: 	pshufd	$0x0, %xmm0, %xmm7
    00002245: 	movaps	%xmm7, 0x10(%rsp)
    0000224a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1729:
    00002250: 	movq	%rbp, %rax
    00002253: 	pxor	%xmm0, %xmm0
    00002257: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1727:
    00002260: 	movdqa	0x10(%rsp), %xmm1
    00002266: 	addq	$0x10, %rax
    0000226a: 	pmullw	-0x10(%rax), %xmm1
    0000226f: 	paddw	%xmm1, %xmm0
    00002273: 	cmpq	%rbx, %rax
    00002276: 	jne	.Ltmp1727 # Offset: 8822
    00002278: 	movdqa	%xmm0, %xmm1
    0000227c: 	cvttsd2si	init_value(%rip), %eax
    00002284: 	psrldq	$0x8, %xmm1
    00002289: 	paddw	%xmm1, %xmm0
    0000228d: 	movdqa	%xmm0, %xmm1
    00002291: 	psrldq	$0x4, %xmm1
    00002296: 	imull	%r13d, %eax
    0000229a: 	paddw	%xmm1, %xmm0
    0000229e: 	movdqa	%xmm0, %xmm1
    000022a2: 	psrldq	$0x2, %xmm1
    000022a7: 	imulw	$0x1f40, %ax, %ax
    000022ac: 	paddw	%xmm1, %xmm0
    000022b0: 	pextrw	$0x0, %xmm0, %edx
    000022b5: 	cmpw	%dx, %ax
    000022b8: 	je	.Ltmp1728 # Offset: 8888
    000022ba: 	movl	current_test(%rip), %edx
    000022c0: 	leaq	DATAat0x381c8(%rip), %rsi
    000022c7: 	movl	$0x1, %edi
    000022cc: 	xorl	%eax, %eax
    000022ce: 	callq	__printf_chk@PLT # Offset: 8910
    000022d3: 	movl	iterations(%rip), %ecx
.Ltmp1728:
    000022d9: 	addl	$0x1, %r12d
    000022dd: 	cmpl	%ecx, %r12d
    000022e0: 	jl	.Ltmp1729 # Offset: 8928
.Ltmp1726:
    000022e6: 	movq	%r15, %rsi
    000022e9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8944
    000022f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002303: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000230a: 	je	.Ltmp1730 # Offset: 8970
.Ltmp1802:
    00002310: 	movq	-0x20(%rax), %r12
    00002314: 	callq	clock@PLT # Offset: 8980
    00002319: 	pxor	%xmm0, %xmm0
    0000231d: 	movq	%rax, end_time(%rip)
    00002324: 	movq	%r12, %rdi
    00002327: 	subq	start_time(%rip), %rax
    0000232e: 	cvtsi2sd	%rax, %xmm0
    00002333: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000233b: 	callq	_Z13record_resultdPKc # Offset: 9019
    00002340: 	movq	0xf0(%rsp), %rdi
    00002348: 	cmpq	0x8(%rsp), %rdi
    0000234d: 	je	.Ltmp1731 # Offset: 9037
    0000234f: 	movq	0x100(%rsp), %rax
    00002357: 	leaq	0x1(%rax), %rsi
    0000235b: 	callq	_ZdlPvm@PLT # Offset: 9051
.Ltmp1731:
    00002360: 	leaq	DATAat0x383c9(%rip), %rdx
    00002367: 	movq	%r14, %rsi
    0000236a: 	movq	%r15, %rdi
    0000236d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9069
    00002372: 	callq	clock@PLT # Offset: 9074
    00002377: 	movl	iterations(%rip), %ecx
    0000237d: 	movq	%rax, start_time(%rip)
    00002384: 	testl	%ecx, %ecx
    00002386: 	jle	.Ltmp1732 # Offset: 9094
    0000238c: 	movzwl	0x3c(%rsp), %eax
    00002391: 	addw	0x40(%rsp), %ax
    00002396: 	xorl	%r12d, %r12d
    00002399: 	subw	0x3a(%rsp), %ax
    0000239e: 	subw	0x3e(%rsp), %ax
    000023a3: 	movl	%eax, %r13d
    000023a6: 	movd	%r13d, %xmm0
    000023ab: 	punpcklwd	%xmm0, %xmm0
    000023af: 	pshufd	$0x0, %xmm0, %xmm5
    000023b4: 	movaps	%xmm5, 0x10(%rsp)
    000023b9: 	nopl	(%rax) # Size: 7
.Ltmp1735:
    000023c0: 	movq	%rbp, %rax
    000023c3: 	pxor	%xmm0, %xmm0
    000023c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1733:
    000023d0: 	movdqa	0x10(%rsp), %xmm1
    000023d6: 	addq	$0x10, %rax
    000023da: 	pmullw	-0x10(%rax), %xmm1
    000023df: 	paddw	%xmm1, %xmm0
    000023e3: 	cmpq	%rbx, %rax
    000023e6: 	jne	.Ltmp1733 # Offset: 9190
    000023e8: 	movdqa	%xmm0, %xmm1
    000023ec: 	cvttsd2si	init_value(%rip), %eax
    000023f4: 	psrldq	$0x8, %xmm1
    000023f9: 	paddw	%xmm1, %xmm0
    000023fd: 	movdqa	%xmm0, %xmm1
    00002401: 	psrldq	$0x4, %xmm1
    00002406: 	imull	%r13d, %eax
    0000240a: 	paddw	%xmm1, %xmm0
    0000240e: 	movdqa	%xmm0, %xmm1
    00002412: 	psrldq	$0x2, %xmm1
    00002417: 	imulw	$0x1f40, %ax, %ax
    0000241c: 	paddw	%xmm1, %xmm0
    00002420: 	pextrw	$0x0, %xmm0, %edx
    00002425: 	cmpw	%dx, %ax
    00002428: 	je	.Ltmp1734 # Offset: 9256
    0000242a: 	movl	current_test(%rip), %edx
    00002430: 	leaq	DATAat0x381c8(%rip), %rsi
    00002437: 	movl	$0x1, %edi
    0000243c: 	xorl	%eax, %eax
    0000243e: 	callq	__printf_chk@PLT # Offset: 9278
    00002443: 	movl	iterations(%rip), %ecx
.Ltmp1734:
    00002449: 	addl	$0x1, %r12d
    0000244d: 	cmpl	%ecx, %r12d
    00002450: 	jl	.Ltmp1735 # Offset: 9296
.Ltmp1732:
    00002456: 	movq	%r15, %rsi
    00002459: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002460: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9312
    00002465: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000246c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002473: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000247a: 	je	.Ltmp1736 # Offset: 9338
.Ltmp1801:
    00002480: 	movq	-0x20(%rax), %r12
    00002484: 	callq	clock@PLT # Offset: 9348
    00002489: 	pxor	%xmm0, %xmm0
    0000248d: 	movq	%rax, end_time(%rip)
    00002494: 	movq	%r12, %rdi
    00002497: 	subq	start_time(%rip), %rax
    0000249e: 	cvtsi2sd	%rax, %xmm0
    000024a3: 	divsd	DATAat0x385e0(%rip), %xmm0
    000024ab: 	callq	_Z13record_resultdPKc # Offset: 9387
    000024b0: 	movq	0xf0(%rsp), %rdi
    000024b8: 	cmpq	0x8(%rsp), %rdi
    000024bd: 	je	.Ltmp1737 # Offset: 9405
    000024bf: 	movq	0x100(%rsp), %rax
    000024c7: 	leaq	0x1(%rax), %rsi
    000024cb: 	callq	_ZdlPvm@PLT # Offset: 9419
.Ltmp1737:
    000024d0: 	leaq	DATAat0x38528(%rip), %rdx
    000024d7: 	movq	%r14, %rsi
    000024da: 	movq	%r15, %rdi
    000024dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9437
    000024e2: 	callq	clock@PLT # Offset: 9442
    000024e7: 	movl	iterations(%rip), %ecx
    000024ed: 	movq	%rax, start_time(%rip)
    000024f4: 	testl	%ecx, %ecx
    000024f6: 	jle	.Ltmp1738 # Offset: 9462
    000024fc: 	movd	0x34(%rsp), %xmm0
    00002502: 	movl	0x44(%rsp), %r13d
    00002507: 	addl	0x48(%rsp), %r13d
    0000250c: 	xorl	%r12d, %r12d
    0000250f: 	addw	0x20(%rsp), %r13w
    00002515: 	punpcklwd	%xmm0, %xmm0
    00002519: 	pshufd	$0x0, %xmm0, %xmm6
    0000251e: 	movd	%r13d, %xmm0
    00002523: 	punpcklwd	%xmm0, %xmm0
    00002527: 	movaps	%xmm6, 0x20(%rsp)
    0000252c: 	pshufd	$0x0, %xmm0, %xmm7
    00002531: 	movaps	%xmm7, 0x10(%rsp)
    00002536: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1741:
    00002540: 	movq	%rbp, %rax
    00002543: 	pxor	%xmm1, %xmm1
    00002547: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1739:
    00002550: 	movdqa	0x20(%rsp), %xmm0
    00002556: 	addq	$0x10, %rax
    0000255a: 	paddw	-0x10(%rax), %xmm0
    0000255f: 	pmullw	0x10(%rsp), %xmm0
    00002565: 	paddw	%xmm0, %xmm1
    00002569: 	cmpq	%rbx, %rax
    0000256c: 	jne	.Ltmp1739 # Offset: 9580
    0000256e: 	movdqa	%xmm1, %xmm0
    00002572: 	cvttsd2si	init_value(%rip), %eax
    0000257a: 	addw	0x34(%rsp), %ax
    0000257f: 	psrldq	$0x8, %xmm0
    00002584: 	imull	%r13d, %eax
    00002588: 	paddw	%xmm0, %xmm1
    0000258c: 	movdqa	%xmm1, %xmm0
    00002590: 	psrldq	$0x4, %xmm0
    00002595: 	imulw	$0x1f40, %ax, %ax
    0000259a: 	paddw	%xmm0, %xmm1
    0000259e: 	movdqa	%xmm1, %xmm0
    000025a2: 	psrldq	$0x2, %xmm0
    000025a7: 	paddw	%xmm0, %xmm1
    000025ab: 	pextrw	$0x0, %xmm1, %edx
    000025b0: 	cmpw	%dx, %ax
    000025b3: 	je	.Ltmp1740 # Offset: 9651
    000025b5: 	movl	current_test(%rip), %edx
    000025bb: 	leaq	DATAat0x381c8(%rip), %rsi
    000025c2: 	movl	$0x1, %edi
    000025c7: 	xorl	%eax, %eax
    000025c9: 	callq	__printf_chk@PLT # Offset: 9673
    000025ce: 	movl	iterations(%rip), %ecx
.Ltmp1740:
    000025d4: 	addl	$0x1, %r12d
    000025d8: 	cmpl	%ecx, %r12d
    000025db: 	jl	.Ltmp1741 # Offset: 9691
.Ltmp1738:
    000025e1: 	movq	%r15, %rsi
    000025e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000025eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9707
    000025f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025f7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000025fe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002605: 	je	.Ltmp1742 # Offset: 9733
.Ltmp1800:
    0000260b: 	movq	-0x20(%rax), %r12
    0000260f: 	callq	clock@PLT # Offset: 9743
    00002614: 	pxor	%xmm0, %xmm0
    00002618: 	movq	%rax, end_time(%rip)
    0000261f: 	movq	%r12, %rdi
    00002622: 	subq	start_time(%rip), %rax
    00002629: 	cvtsi2sd	%rax, %xmm0
    0000262e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002636: 	callq	_Z13record_resultdPKc # Offset: 9782
    0000263b: 	movq	0xf0(%rsp), %rdi
    00002643: 	cmpq	0x8(%rsp), %rdi
    00002648: 	je	.Ltmp1743 # Offset: 9800
    0000264a: 	movq	0x100(%rsp), %rax
    00002652: 	leaq	0x1(%rax), %rsi
    00002656: 	callq	_ZdlPvm@PLT # Offset: 9814
.Ltmp1743:
    0000265b: 	leaq	DATAat0x383e1(%rip), %rdx
    00002662: 	movq	%r14, %rsi
    00002665: 	movq	%r15, %rdi
    00002668: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9832
    0000266d: 	callq	clock@PLT # Offset: 9837
    00002672: 	movl	iterations(%rip), %ecx
    00002678: 	movq	%rax, start_time(%rip)
    0000267f: 	testl	%ecx, %ecx
    00002681: 	jle	.Ltmp1744 # Offset: 9857
    00002687: 	movzwl	0x3c(%rsp), %edx
    0000268c: 	movzwl	0x3a(%rsp), %esi
    00002691: 	xorl	%r12d, %r12d
    00002694: 	movzwl	0x3e(%rsp), %r9d
    0000269a: 	movl	0x40(%rsp), %r10d
    0000269f: 	movl	%edx, %eax
    000026a1: 	movl	%esi, %edi
    000026a3: 	addl	%edx, %esi
    000026a5: 	addl	%r9d, %eax
    000026a8: 	imull	%r10d, %edi
    000026ac: 	movl	%esi, %r13d
    000026af: 	imull	%r10d, %eax
    000026b3: 	addl	%r9d, %r13d
    000026b6: 	movd	%r13d, %xmm0
    000026bb: 	punpcklwd	%xmm0, %xmm0
    000026bf: 	movw	%di, 0x34(%rsp)
    000026c4: 	movl	%eax, %r8d
    000026c7: 	movw	%ax, 0x3a(%rsp)
    000026cc: 	movl	%edi, %eax
    000026ce: 	pshufd	$0x0, %xmm0, %xmm5
    000026d3: 	addl	%r8d, %eax
    000026d6: 	movaps	%xmm5, 0x20(%rsp)
    000026db: 	movd	%eax, %xmm0
    000026df: 	punpcklwd	%xmm0, %xmm0
    000026e3: 	pshufd	$0x0, %xmm0, %xmm6
    000026e8: 	movaps	%xmm6, 0x10(%rsp)
    000026ed: 	nopl	(%rax) # Size: 3
.Ltmp1747:
    000026f0: 	movq	%rbp, %rax
    000026f3: 	pxor	%xmm1, %xmm1
    000026f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1745:
    00002700: 	movdqa	0x20(%rsp), %xmm0
    00002706: 	pmullw	(%rax), %xmm0
    0000270a: 	paddw	0x10(%rsp), %xmm0
    00002710: 	addq	$0x10, %rax
    00002714: 	paddw	%xmm0, %xmm1
    00002718: 	cmpq	%rax, %rbx
    0000271b: 	jne	.Ltmp1745 # Offset: 10011
    0000271d: 	movdqa	%xmm1, %xmm0
    00002721: 	cvttsd2si	init_value(%rip), %eax
    00002729: 	psrldq	$0x8, %xmm0
    0000272e: 	paddw	%xmm0, %xmm1
    00002732: 	movdqa	%xmm1, %xmm0
    00002736: 	psrldq	$0x4, %xmm0
    0000273b: 	imull	%r13d, %eax
    0000273f: 	addw	0x3a(%rsp), %ax
    00002744: 	addw	0x34(%rsp), %ax
    00002749: 	imulw	$0x1f40, %ax, %ax
    0000274e: 	paddw	%xmm0, %xmm1
    00002752: 	movdqa	%xmm1, %xmm0
    00002756: 	psrldq	$0x2, %xmm0
    0000275b: 	paddw	%xmm0, %xmm1
    0000275f: 	pextrw	$0x0, %xmm1, %edx
    00002764: 	cmpw	%dx, %ax
    00002767: 	je	.Ltmp1746 # Offset: 10087
    00002769: 	movl	current_test(%rip), %edx
    0000276f: 	leaq	DATAat0x381c8(%rip), %rsi
    00002776: 	movl	$0x1, %edi
    0000277b: 	xorl	%eax, %eax
    0000277d: 	callq	__printf_chk@PLT # Offset: 10109
    00002782: 	movl	iterations(%rip), %ecx
.Ltmp1746:
    00002788: 	addl	$0x1, %r12d
    0000278c: 	cmpl	%ecx, %r12d
    0000278f: 	jl	.Ltmp1747 # Offset: 10127
.Ltmp1744:
    00002795: 	movq	%r15, %rsi
    00002798: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000279f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10143
    000027a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027ab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000027b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027b9: 	je	.Ltmp1748 # Offset: 10169
.Ltmp1799:
    000027bf: 	movq	-0x20(%rax), %r12
    000027c3: 	callq	clock@PLT # Offset: 10179
    000027c8: 	pxor	%xmm0, %xmm0
    000027cc: 	movq	%rax, end_time(%rip)
    000027d3: 	movq	%r12, %rdi
    000027d6: 	subq	start_time(%rip), %rax
    000027dd: 	cvtsi2sd	%rax, %xmm0
    000027e2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000027ea: 	callq	_Z13record_resultdPKc # Offset: 10218
    000027ef: 	movq	0xf0(%rsp), %rdi
    000027f7: 	cmpq	0x8(%rsp), %rdi
    000027fc: 	je	.Ltmp1749 # Offset: 10236
    000027fe: 	movq	0x100(%rsp), %rax
    00002806: 	leaq	0x1(%rax), %rsi
    0000280a: 	callq	_ZdlPvm@PLT # Offset: 10250
.Ltmp1749:
    0000280f: 	leaq	0xd0(%rsp), %rdi
    00002817: 	leaq	DATAat0x3839a(%rip), %rdx
    0000281e: 	movq	%r14, %rsi
    00002821: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10273
    00002826: 	movl	iterations(%rip), %esi
    0000282c: 	movq	0xd0(%rsp), %rdi
    00002834: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10292
    00002839: 	leaq	DATAat0x383fa(%rip), %rdx
    00002840: 	movq	%r14, %rsi
    00002843: 	movq	%r15, %rdi
    00002846: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10310
    0000284b: 	movq	%r15, %rdx
    0000284e: 	movl	$0x1f40, %esi
    00002853: 	movq	%rbp, %rdi
    00002856: 	callq	_Z10test_2termIt20custom_2term_add_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10326
    0000285b: 	movq	0xf0(%rsp), %rdi
    00002863: 	cmpq	0x8(%rsp), %rdi
    00002868: 	je	.Ltmp1750 # Offset: 10344
    0000286a: 	movq	0x100(%rsp), %rax
    00002872: 	leaq	0x1(%rax), %rsi
    00002876: 	callq	_ZdlPvm@PLT # Offset: 10358
.Ltmp1750:
    0000287b: 	leaq	DATAat0x38409(%rip), %rdx
    00002882: 	movq	%r14, %rsi
    00002885: 	movq	%r15, %rdi
    00002888: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10376
    0000288d: 	movq	%r15, %rdx
    00002890: 	movl	$0x1f40, %esi
    00002895: 	movq	%rbp, %rdi
    00002898: 	callq	_Z10test_2termIt16custom_2term_addItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10392
    0000289d: 	movq	0xf0(%rsp), %rdi
    000028a5: 	cmpq	0x8(%rsp), %rdi
    000028aa: 	je	.Ltmp1751 # Offset: 10410
    000028ac: 	movq	0x100(%rsp), %rax
    000028b4: 	leaq	0x1(%rax), %rsi
    000028b8: 	callq	_ZdlPvm@PLT # Offset: 10424
.Ltmp1751:
    000028bd: 	leaq	DATAat0x38414(%rip), %rdx
    000028c4: 	movq	%r14, %rsi
    000028c7: 	movq	%r15, %rdi
    000028ca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10442
    000028cf: 	movq	%r15, %rdx
    000028d2: 	movl	$0x1f40, %esi
    000028d7: 	movq	%rbp, %rdi
    000028da: 	callq	_Z10test_2termIt20custom_2term_sub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10458
    000028df: 	movq	0xf0(%rsp), %rdi
    000028e7: 	cmpq	0x8(%rsp), %rdi
    000028ec: 	je	.Ltmp1752 # Offset: 10476
    000028ee: 	movq	0x100(%rsp), %rax
    000028f6: 	leaq	0x1(%rax), %rsi
    000028fa: 	callq	_ZdlPvm@PLT # Offset: 10490
.Ltmp1752:
    000028ff: 	leaq	DATAat0x38423(%rip), %rdx
    00002906: 	movq	%r14, %rsi
    00002909: 	movq	%r15, %rdi
    0000290c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10508
    00002911: 	movq	%r15, %rdx
    00002914: 	movl	$0x1f40, %esi
    00002919: 	movq	%rbp, %rdi
    0000291c: 	callq	_Z10test_2termIt16custom_2term_subItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10524
    00002921: 	movq	0xf0(%rsp), %rdi
    00002929: 	cmpq	0x8(%rsp), %rdi
    0000292e: 	je	.Ltmp1753 # Offset: 10542
    00002930: 	movq	0x100(%rsp), %rax
    00002938: 	leaq	0x1(%rax), %rsi
    0000293c: 	callq	_ZdlPvm@PLT # Offset: 10556
.Ltmp1753:
    00002941: 	leaq	DATAat0x3842e(%rip), %rdx
    00002948: 	movq	%r14, %rsi
    0000294b: 	movq	%r15, %rdi
    0000294e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10574
    00002953: 	movq	%r15, %rdx
    00002956: 	movl	$0x1f40, %esi
    0000295b: 	movq	%rbp, %rdi
    0000295e: 	callq	_Z10test_2termIt23custom_2term_addsub_optItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10590
    00002963: 	movq	0xf0(%rsp), %rdi
    0000296b: 	cmpq	0x8(%rsp), %rdi
    00002970: 	je	.Ltmp1754 # Offset: 10608
    00002972: 	movq	0x100(%rsp), %rax
    0000297a: 	leaq	0x1(%rax), %rsi
    0000297e: 	callq	_ZdlPvm@PLT # Offset: 10622
.Ltmp1754:
    00002983: 	leaq	DATAat0x38440(%rip), %rdx
    0000298a: 	movq	%r14, %rsi
    0000298d: 	movq	%r15, %rdi
    00002990: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10640
    00002995: 	movq	%r15, %rdx
    00002998: 	movl	$0x1f40, %esi
    0000299d: 	movq	%rbp, %rdi
    000029a0: 	callq	_Z10test_2termIt19custom_2term_addsubItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10656
    000029a5: 	movq	0xf0(%rsp), %rdi
    000029ad: 	cmpq	0x8(%rsp), %rdi
    000029b2: 	je	.Ltmp1755 # Offset: 10674
    000029b4: 	movq	0x100(%rsp), %rax
    000029bc: 	leaq	0x1(%rax), %rsi
    000029c0: 	callq	_ZdlPvm@PLT # Offset: 10688
.Ltmp1755:
    000029c5: 	leaq	DATAat0x3844e(%rip), %rdx
    000029cc: 	movq	%r14, %rsi
    000029cf: 	movq	%r15, %rdi
    000029d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10706
    000029d7: 	callq	clock@PLT # Offset: 10711
    000029dc: 	movl	iterations(%rip), %edx
    000029e2: 	xorl	%r12d, %r12d
    000029e5: 	leaq	0x3e70(%rbp), %rbx
    000029ec: 	movq	%rax, start_time(%rip)
    000029f3: 	leaq	DATAat0x381c8(%rip), %r13
    000029fa: 	testl	%edx, %edx
    000029fc: 	jle	.Ltmp1756 # Offset: 10748
    00002a02: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1759:
    00002a08: 	movzwl	0x112(%rsp), %edi
    00002a10: 	movq	%rbp, %rax
    00002a13: 	xorw	0x110(%rsp), %di
    00002a1b: 	pxor	%xmm0, %xmm0
    00002a1f: 	nop # Size: 1
.Ltmp1757:
    00002a20: 	movdqu	0x2(%rax), %xmm1
    00002a25: 	pxor	(%rax), %xmm1
    00002a29: 	addq	$0x10, %rax
    00002a2d: 	paddw	%xmm1, %xmm0
    00002a31: 	cmpq	%rax, %rbx
    00002a34: 	jne	.Ltmp1757 # Offset: 10804
    00002a36: 	movdqa	%xmm0, %xmm1
    00002a3a: 	movzwl	0x3f8a(%rsp), %esi
    00002a42: 	movzwl	0x3f88(%rsp), %eax
    00002a4a: 	psrldq	$0x8, %xmm1
    00002a4f: 	movzwl	0x3f8c(%rsp), %ecx
    00002a57: 	movq	0x3f80(%rsp), %xmm2
    00002a60: 	paddw	%xmm1, %xmm0
    00002a64: 	xorl	%esi, %eax
    00002a66: 	movdqa	%xmm0, %xmm1
    00002a6a: 	xorl	%ecx, %esi
    00002a6c: 	addl	%edi, %eax
    00002a6e: 	xorw	0x3f8e(%rsp), %cx
    00002a76: 	psrldq	$0x4, %xmm1
    00002a7b: 	addl	%esi, %eax
    00002a7d: 	paddw	%xmm1, %xmm0
    00002a81: 	addl	%ecx, %eax
    00002a83: 	movq	0x3f82(%rsp), %xmm1
    00002a8c: 	pxor	%xmm2, %xmm1
    00002a90: 	pextrw	$0x0, %xmm1, %ecx
    00002a95: 	addl	%ecx, %eax
    00002a97: 	pextrw	$0x1, %xmm1, %ecx
    00002a9c: 	addl	%ecx, %eax
    00002a9e: 	pextrw	$0x2, %xmm1, %ecx
    00002aa3: 	addl	%ecx, %eax
    00002aa5: 	pextrw	$0x3, %xmm1, %ecx
    00002aaa: 	movdqa	%xmm0, %xmm1
    00002aae: 	psrldq	$0x2, %xmm1
    00002ab3: 	addl	%ecx, %eax
    00002ab5: 	paddw	%xmm1, %xmm0
    00002ab9: 	pextrw	$0x0, %xmm0, %ecx
    00002abe: 	addw	%cx, %ax
    00002ac1: 	je	.Ltmp1758 # Offset: 10945
    00002ac3: 	movl	current_test(%rip), %edx
    00002ac9: 	movq	%r13, %rsi
    00002acc: 	movl	$0x1, %edi
    00002ad1: 	xorl	%eax, %eax
    00002ad3: 	callq	__printf_chk@PLT # Offset: 10963
    00002ad8: 	movl	iterations(%rip), %edx
.Ltmp1758:
    00002ade: 	addl	$0x1, %r12d
    00002ae2: 	cmpl	%edx, %r12d
    00002ae5: 	jl	.Ltmp1759 # Offset: 10981
.Ltmp1756:
    00002aeb: 	movq	%r15, %rsi
    00002aee: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002af5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10997
    00002afa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b01: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b08: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b0f: 	je	.Ltmp1760 # Offset: 11023
.Ltmp1798:
    00002b15: 	movq	-0x20(%rax), %r12
    00002b19: 	callq	clock@PLT # Offset: 11033
    00002b1e: 	pxor	%xmm0, %xmm0
    00002b22: 	movq	%rax, end_time(%rip)
    00002b29: 	movq	%r12, %rdi
    00002b2c: 	subq	start_time(%rip), %rax
    00002b33: 	cvtsi2sd	%rax, %xmm0
    00002b38: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002b40: 	callq	_Z13record_resultdPKc # Offset: 11072
    00002b45: 	movq	0xf0(%rsp), %rdi
    00002b4d: 	cmpq	0x8(%rsp), %rdi
    00002b52: 	je	.Ltmp1761 # Offset: 11090
    00002b54: 	movq	0x100(%rsp), %rax
    00002b5c: 	leaq	0x1(%rax), %rsi
    00002b60: 	callq	_ZdlPvm@PLT # Offset: 11104
.Ltmp1761:
    00002b65: 	leaq	DATAat0x3845d(%rip), %rdx
    00002b6c: 	movq	%r14, %rsi
    00002b6f: 	movq	%r15, %rdi
    00002b72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11122
    00002b77: 	movq	%r15, %rdx
    00002b7a: 	movl	$0x1f40, %esi
    00002b7f: 	movq	%rbp, %rdi
    00002b82: 	callq	_Z10test_2termIt16custom_2term_xorItEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11138
    00002b87: 	movq	0xf0(%rsp), %rdi
    00002b8f: 	cmpq	0x8(%rsp), %rdi
    00002b94: 	je	.Ltmp1762 # Offset: 11156
    00002b96: 	movq	0x100(%rsp), %rax
    00002b9e: 	leaq	0x1(%rax), %rsi
    00002ba2: 	callq	_ZdlPvm@PLT # Offset: 11170
.Ltmp1762:
    00002ba7: 	leaq	DATAat0x38468(%rip), %rdx
    00002bae: 	movq	%r14, %rsi
    00002bb1: 	movq	%r15, %rdi
    00002bb4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11188
    00002bb9: 	callq	clock@PLT # Offset: 11193
    00002bbe: 	movl	iterations(%rip), %edx
    00002bc4: 	xorl	%r12d, %r12d
    00002bc7: 	leaq	0x3e70(%rbp), %rbx
    00002bce: 	movq	%rax, start_time(%rip)
    00002bd5: 	leaq	DATAat0x381c8(%rip), %r13
    00002bdc: 	testl	%edx, %edx
    00002bde: 	jle	.Ltmp1763 # Offset: 11230
    00002be4: 	nopl	(%rax) # Size: 4
.Ltmp1766:
    00002be8: 	movzwl	0x112(%rsp), %edi
    00002bf0: 	movq	%rbp, %rax
    00002bf3: 	orw	0x110(%rsp), %di
    00002bfb: 	pxor	%xmm0, %xmm0
    00002bff: 	nop # Size: 1
.Ltmp1764:
    00002c00: 	movdqu	0x2(%rax), %xmm1
    00002c05: 	por	(%rax), %xmm1
    00002c09: 	addq	$0x10, %rax
    00002c0d: 	paddw	%xmm1, %xmm0
    00002c11: 	cmpq	%rax, %rbx
    00002c14: 	jne	.Ltmp1764 # Offset: 11284
    00002c16: 	movdqa	%xmm0, %xmm1
    00002c1a: 	movzwl	0x3f8a(%rsp), %esi
    00002c22: 	movzwl	0x3f88(%rsp), %eax
    00002c2a: 	psrldq	$0x8, %xmm1
    00002c2f: 	movzwl	0x3f8c(%rsp), %ecx
    00002c37: 	movq	0x3f80(%rsp), %xmm2
    00002c40: 	paddw	%xmm1, %xmm0
    00002c44: 	orl	%esi, %eax
    00002c46: 	movdqa	%xmm0, %xmm1
    00002c4a: 	orl	%ecx, %esi
    00002c4c: 	addl	%edi, %eax
    00002c4e: 	orw	0x3f8e(%rsp), %cx
    00002c56: 	psrldq	$0x4, %xmm1
    00002c5b: 	addl	%esi, %eax
    00002c5d: 	paddw	%xmm1, %xmm0
    00002c61: 	addl	%ecx, %eax
    00002c63: 	movq	0x3f82(%rsp), %xmm1
    00002c6c: 	por	%xmm2, %xmm1
    00002c70: 	pextrw	$0x0, %xmm1, %ecx
    00002c75: 	addl	%ecx, %eax
    00002c77: 	pextrw	$0x1, %xmm1, %ecx
    00002c7c: 	addl	%ecx, %eax
    00002c7e: 	pextrw	$0x2, %xmm1, %ecx
    00002c83: 	addl	%ecx, %eax
    00002c85: 	pextrw	$0x3, %xmm1, %ecx
    00002c8a: 	movdqa	%xmm0, %xmm1
    00002c8e: 	psrldq	$0x2, %xmm1
    00002c93: 	addl	%ecx, %eax
    00002c95: 	paddw	%xmm1, %xmm0
    00002c99: 	pextrw	$0x0, %xmm0, %ecx
    00002c9e: 	addl	%ecx, %eax
    00002ca0: 	cvttsd2si	init_value(%rip), %ecx
    00002ca8: 	imulw	$0x1f40, %cx, %cx
    00002cad: 	cmpw	%cx, %ax
    00002cb0: 	je	.Ltmp1765 # Offset: 11440
    00002cb2: 	movl	current_test(%rip), %edx
    00002cb8: 	movq	%r13, %rsi
    00002cbb: 	movl	$0x1, %edi
    00002cc0: 	xorl	%eax, %eax
    00002cc2: 	callq	__printf_chk@PLT # Offset: 11458
    00002cc7: 	movl	iterations(%rip), %edx
.Ltmp1765:
    00002ccd: 	addl	$0x1, %r12d
    00002cd1: 	cmpl	%edx, %r12d
    00002cd4: 	jl	.Ltmp1766 # Offset: 11476
.Ltmp1763:
    00002cda: 	movq	%r15, %rsi
    00002cdd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ce4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11492
    00002ce9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002cf0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002cf7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002cfe: 	je	.Ltmp1767 # Offset: 11518
.Ltmp1797:
    00002d04: 	movq	-0x20(%rax), %r12
    00002d08: 	callq	clock@PLT # Offset: 11528
    00002d0d: 	pxor	%xmm0, %xmm0
    00002d11: 	movq	%rax, end_time(%rip)
    00002d18: 	movq	%r12, %rdi
    00002d1b: 	subq	start_time(%rip), %rax
    00002d22: 	cvtsi2sd	%rax, %xmm0
    00002d27: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d2f: 	callq	_Z13record_resultdPKc # Offset: 11567
    00002d34: 	movq	0xf0(%rsp), %rdi
    00002d3c: 	cmpq	0x8(%rsp), %rdi
    00002d41: 	je	.Ltmp1768 # Offset: 11585
    00002d43: 	movq	0x100(%rsp), %rax
    00002d4b: 	leaq	0x1(%rax), %rsi
    00002d4f: 	callq	_ZdlPvm@PLT # Offset: 11599
.Ltmp1768:
    00002d54: 	leaq	DATAat0x38476(%rip), %rdx
    00002d5b: 	movq	%r14, %rsi
    00002d5e: 	movq	%r15, %rdi
    00002d61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11617
    00002d66: 	callq	clock@PLT # Offset: 11622
    00002d6b: 	movl	iterations(%rip), %edx
    00002d71: 	xorl	%r12d, %r12d
    00002d74: 	leaq	0x3e70(%rbp), %rbx
    00002d7b: 	movq	%rax, start_time(%rip)
    00002d82: 	leaq	DATAat0x381c8(%rip), %r13
    00002d89: 	testl	%edx, %edx
    00002d8b: 	jle	.Ltmp1769 # Offset: 11659
    00002d91: 	nopl	(%rax) # Size: 7
.Ltmp1772:
    00002d98: 	movzwl	0x112(%rsp), %edi
    00002da0: 	movq	%rbp, %rax
    00002da3: 	orw	0x110(%rsp), %di
    00002dab: 	pxor	%xmm0, %xmm0
    00002daf: 	nop # Size: 1
.Ltmp1770:
    00002db0: 	movdqu	0x2(%rax), %xmm1
    00002db5: 	por	(%rax), %xmm1
    00002db9: 	addq	$0x10, %rax
    00002dbd: 	paddw	%xmm1, %xmm0
    00002dc1: 	cmpq	%rax, %rbx
    00002dc4: 	jne	.Ltmp1770 # Offset: 11716
    00002dc6: 	movdqa	%xmm0, %xmm1
    00002dca: 	movzwl	0x3f8a(%rsp), %esi
    00002dd2: 	movzwl	0x3f88(%rsp), %eax
    00002dda: 	psrldq	$0x8, %xmm1
    00002ddf: 	movzwl	0x3f8c(%rsp), %ecx
    00002de7: 	movq	0x3f80(%rsp), %xmm2
    00002df0: 	paddw	%xmm1, %xmm0
    00002df4: 	orl	%esi, %eax
    00002df6: 	movdqa	%xmm0, %xmm1
    00002dfa: 	orl	%ecx, %esi
    00002dfc: 	addl	%edi, %eax
    00002dfe: 	orw	0x3f8e(%rsp), %cx
    00002e06: 	psrldq	$0x4, %xmm1
    00002e0b: 	addl	%esi, %eax
    00002e0d: 	paddw	%xmm1, %xmm0
    00002e11: 	addl	%ecx, %eax
    00002e13: 	movq	0x3f82(%rsp), %xmm1
    00002e1c: 	por	%xmm2, %xmm1
    00002e20: 	pextrw	$0x0, %xmm1, %ecx
    00002e25: 	addl	%ecx, %eax
    00002e27: 	pextrw	$0x1, %xmm1, %ecx
    00002e2c: 	addl	%ecx, %eax
    00002e2e: 	pextrw	$0x2, %xmm1, %ecx
    00002e33: 	addl	%ecx, %eax
    00002e35: 	pextrw	$0x3, %xmm1, %ecx
    00002e3a: 	movdqa	%xmm0, %xmm1
    00002e3e: 	psrldq	$0x2, %xmm1
    00002e43: 	addl	%ecx, %eax
    00002e45: 	paddw	%xmm1, %xmm0
    00002e49: 	pextrw	$0x0, %xmm0, %ecx
    00002e4e: 	addl	%ecx, %eax
    00002e50: 	cvttsd2si	init_value(%rip), %ecx
    00002e58: 	imulw	$0x1f40, %cx, %cx
    00002e5d: 	cmpw	%cx, %ax
    00002e60: 	je	.Ltmp1771 # Offset: 11872
    00002e62: 	movl	current_test(%rip), %edx
    00002e68: 	movq	%r13, %rsi
    00002e6b: 	movl	$0x1, %edi
    00002e70: 	xorl	%eax, %eax
    00002e72: 	callq	__printf_chk@PLT # Offset: 11890
    00002e77: 	movl	iterations(%rip), %edx
.Ltmp1771:
    00002e7d: 	addl	$0x1, %r12d
    00002e81: 	cmpl	%edx, %r12d
    00002e84: 	jl	.Ltmp1772 # Offset: 11908
.Ltmp1769:
    00002e8a: 	movq	%r15, %rsi
    00002e8d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002e94: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11924
    00002e99: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ea0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ea7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002eae: 	je	.Ltmp1773 # Offset: 11950
.Ltmp1796:
    00002eb4: 	movq	-0x20(%rax), %r12
    00002eb8: 	callq	clock@PLT # Offset: 11960
    00002ebd: 	pxor	%xmm0, %xmm0
    00002ec1: 	movq	%rax, end_time(%rip)
    00002ec8: 	movq	%r12, %rdi
    00002ecb: 	subq	start_time(%rip), %rax
    00002ed2: 	cvtsi2sd	%rax, %xmm0
    00002ed7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002edf: 	callq	_Z13record_resultdPKc # Offset: 11999
    00002ee4: 	movq	0xf0(%rsp), %rdi
    00002eec: 	cmpq	0x8(%rsp), %rdi
    00002ef1: 	je	.Ltmp1774 # Offset: 12017
    00002ef3: 	movq	0x100(%rsp), %rax
    00002efb: 	leaq	0x1(%rax), %rsi
    00002eff: 	callq	_ZdlPvm@PLT # Offset: 12031
.Ltmp1774:
    00002f04: 	leaq	DATAat0x38480(%rip), %rdx
    00002f0b: 	movq	%r14, %rsi
    00002f0e: 	movq	%r15, %rdi
    00002f11: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12049
    00002f16: 	callq	clock@PLT # Offset: 12054
    00002f1b: 	movl	iterations(%rip), %edx
    00002f21: 	xorl	%r12d, %r12d
    00002f24: 	leaq	0x3e70(%rbp), %rbx
    00002f2b: 	movq	%rax, start_time(%rip)
    00002f32: 	leaq	DATAat0x381c8(%rip), %r13
    00002f39: 	testl	%edx, %edx
    00002f3b: 	jle	.Ltmp1775 # Offset: 12091
    00002f41: 	nopl	(%rax) # Size: 7
.Ltmp1778:
    00002f48: 	movzwl	0x112(%rsp), %edi
    00002f50: 	movq	%rbp, %rax
    00002f53: 	andw	0x110(%rsp), %di
    00002f5b: 	pxor	%xmm0, %xmm0
    00002f5f: 	nop # Size: 1
.Ltmp1776:
    00002f60: 	movdqu	0x2(%rax), %xmm1
    00002f65: 	pand	(%rax), %xmm1
    00002f69: 	addq	$0x10, %rax
    00002f6d: 	paddw	%xmm1, %xmm0
    00002f71: 	cmpq	%rax, %rbx
    00002f74: 	jne	.Ltmp1776 # Offset: 12148
    00002f76: 	movdqa	%xmm0, %xmm1
    00002f7a: 	movzwl	0x3f8a(%rsp), %esi
    00002f82: 	movzwl	0x3f88(%rsp), %eax
    00002f8a: 	psrldq	$0x8, %xmm1
    00002f8f: 	movzwl	0x3f8c(%rsp), %ecx
    00002f97: 	movq	0x3f80(%rsp), %xmm2
    00002fa0: 	paddw	%xmm1, %xmm0
    00002fa4: 	andl	%esi, %eax
    00002fa6: 	movdqa	%xmm0, %xmm1
    00002faa: 	andl	%ecx, %esi
    00002fac: 	addl	%edi, %eax
    00002fae: 	andw	0x3f8e(%rsp), %cx
    00002fb6: 	psrldq	$0x4, %xmm1
    00002fbb: 	addl	%esi, %eax
    00002fbd: 	paddw	%xmm1, %xmm0
    00002fc1: 	addl	%ecx, %eax
    00002fc3: 	movq	0x3f82(%rsp), %xmm1
    00002fcc: 	pand	%xmm2, %xmm1
    00002fd0: 	pextrw	$0x0, %xmm1, %ecx
    00002fd5: 	addl	%ecx, %eax
    00002fd7: 	pextrw	$0x1, %xmm1, %ecx
    00002fdc: 	addl	%ecx, %eax
    00002fde: 	pextrw	$0x2, %xmm1, %ecx
    00002fe3: 	addl	%ecx, %eax
    00002fe5: 	pextrw	$0x3, %xmm1, %ecx
    00002fea: 	movdqa	%xmm0, %xmm1
    00002fee: 	psrldq	$0x2, %xmm1
    00002ff3: 	addl	%ecx, %eax
    00002ff5: 	paddw	%xmm1, %xmm0
    00002ff9: 	pextrw	$0x0, %xmm0, %ecx
    00002ffe: 	addl	%ecx, %eax
    00003000: 	cvttsd2si	init_value(%rip), %ecx
    00003008: 	imulw	$0x1f40, %cx, %cx
    0000300d: 	cmpw	%cx, %ax
    00003010: 	je	.Ltmp1777 # Offset: 12304
    00003012: 	movl	current_test(%rip), %edx
    00003018: 	movq	%r13, %rsi
    0000301b: 	movl	$0x1, %edi
    00003020: 	xorl	%eax, %eax
    00003022: 	callq	__printf_chk@PLT # Offset: 12322
    00003027: 	movl	iterations(%rip), %edx
.Ltmp1777:
    0000302d: 	addl	$0x1, %r12d
    00003031: 	cmpl	%edx, %r12d
    00003034: 	jl	.Ltmp1778 # Offset: 12340
.Ltmp1775:
    0000303a: 	movq	%r15, %rsi
    0000303d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003044: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12356
    00003049: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003050: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003057: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000305e: 	je	.Ltmp1779 # Offset: 12382
.Ltmp1795:
    00003064: 	movq	-0x20(%rax), %r12
    00003068: 	callq	clock@PLT # Offset: 12392
    0000306d: 	pxor	%xmm0, %xmm0
    00003071: 	movq	%rax, end_time(%rip)
    00003078: 	movq	%r12, %rdi
    0000307b: 	subq	start_time(%rip), %rax
    00003082: 	cvtsi2sd	%rax, %xmm0
    00003087: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000308f: 	callq	_Z13record_resultdPKc # Offset: 12431
    00003094: 	movq	0xf0(%rsp), %rdi
    0000309c: 	cmpq	0x8(%rsp), %rdi
    000030a1: 	je	.Ltmp1780 # Offset: 12449
    000030a3: 	movq	0x100(%rsp), %rax
    000030ab: 	leaq	0x1(%rax), %rsi
    000030af: 	callq	_ZdlPvm@PLT # Offset: 12463
.Ltmp1780:
    000030b4: 	leaq	DATAat0x3848f(%rip), %rdx
    000030bb: 	movq	%r14, %rsi
    000030be: 	movq	%r15, %rdi
    000030c1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12481
    000030c6: 	callq	clock@PLT # Offset: 12486
    000030cb: 	movl	iterations(%rip), %edx
    000030d1: 	xorl	%r12d, %r12d
    000030d4: 	leaq	0x3e70(%rbp), %rbx
    000030db: 	movq	%rax, start_time(%rip)
    000030e2: 	leaq	DATAat0x381c8(%rip), %r13
    000030e9: 	testl	%edx, %edx
    000030eb: 	jle	.Ltmp1781 # Offset: 12523
    000030f1: 	nopl	(%rax) # Size: 7
.Ltmp1784:
    000030f8: 	movzwl	0x112(%rsp), %edi
    00003100: 	movq	%rbp, %rax
    00003103: 	andw	0x110(%rsp), %di
    0000310b: 	pxor	%xmm0, %xmm0
    0000310f: 	nop # Size: 1
.Ltmp1782:
    00003110: 	movdqu	0x2(%rax), %xmm1
    00003115: 	pand	(%rax), %xmm1
    00003119: 	addq	$0x10, %rax
    0000311d: 	paddw	%xmm1, %xmm0
    00003121: 	cmpq	%rbx, %rax
    00003124: 	jne	.Ltmp1782 # Offset: 12580
    00003126: 	movdqa	%xmm0, %xmm1
    0000312a: 	movzwl	0x3f8a(%rsp), %esi
    00003132: 	movzwl	0x3f88(%rsp), %eax
    0000313a: 	psrldq	$0x8, %xmm1
    0000313f: 	movzwl	0x3f8c(%rsp), %ecx
    00003147: 	movq	0x3f80(%rsp), %xmm2
    00003150: 	paddw	%xmm1, %xmm0
    00003154: 	andl	%esi, %eax
    00003156: 	movdqa	%xmm0, %xmm1
    0000315a: 	andl	%ecx, %esi
    0000315c: 	addl	%edi, %eax
    0000315e: 	andw	0x3f8e(%rsp), %cx
    00003166: 	psrldq	$0x4, %xmm1
    0000316b: 	addl	%esi, %eax
    0000316d: 	paddw	%xmm1, %xmm0
    00003171: 	addl	%ecx, %eax
    00003173: 	movq	0x3f82(%rsp), %xmm1
    0000317c: 	pand	%xmm2, %xmm1
    00003180: 	pextrw	$0x0, %xmm1, %ecx
    00003185: 	addl	%ecx, %eax
    00003187: 	pextrw	$0x1, %xmm1, %ecx
    0000318c: 	addl	%ecx, %eax
    0000318e: 	pextrw	$0x2, %xmm1, %ecx
    00003193: 	addl	%ecx, %eax
    00003195: 	pextrw	$0x3, %xmm1, %ecx
    0000319a: 	movdqa	%xmm0, %xmm1
    0000319e: 	psrldq	$0x2, %xmm1
    000031a3: 	addl	%ecx, %eax
    000031a5: 	paddw	%xmm1, %xmm0
    000031a9: 	pextrw	$0x0, %xmm0, %ecx
    000031ae: 	addl	%ecx, %eax
    000031b0: 	cvttsd2si	init_value(%rip), %ecx
    000031b8: 	imulw	$0x1f40, %cx, %cx
    000031bd: 	cmpw	%cx, %ax
    000031c0: 	je	.Ltmp1783 # Offset: 12736
    000031c2: 	movl	current_test(%rip), %edx
    000031c8: 	movq	%r13, %rsi
    000031cb: 	movl	$0x1, %edi
    000031d0: 	xorl	%eax, %eax
    000031d2: 	callq	__printf_chk@PLT # Offset: 12754
    000031d7: 	movl	iterations(%rip), %edx
.Ltmp1783:
    000031dd: 	addl	$0x1, %r12d
    000031e1: 	cmpl	%edx, %r12d
    000031e4: 	jl	.Ltmp1784 # Offset: 12772
.Ltmp1781:
    000031ea: 	movq	%r15, %rsi
    000031ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000031f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12788
    000031f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003200: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003207: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000320e: 	je	.Ltmp1785 # Offset: 12814
.Ltmp1794:
    00003214: 	movq	-0x20(%rax), %rbp
    00003218: 	callq	clock@PLT # Offset: 12824
    0000321d: 	pxor	%xmm0, %xmm0
    00003221: 	movq	%rax, end_time(%rip)
    00003228: 	movq	%rbp, %rdi
    0000322b: 	subq	start_time(%rip), %rax
    00003232: 	cvtsi2sd	%rax, %xmm0
    00003237: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000323f: 	callq	_Z13record_resultdPKc # Offset: 12863
    00003244: 	movq	0xf0(%rsp), %rdi
    0000324c: 	cmpq	0x8(%rsp), %rdi
    00003251: 	je	.Ltmp1786 # Offset: 12881
    00003253: 	movq	0x100(%rsp), %rax
    0000325b: 	leaq	0x1(%rax), %rsi
    0000325f: 	callq	_ZdlPvm@PLT # Offset: 12895
.Ltmp1786:
    00003264: 	leaq	DATAat0x38550(%rip), %rdx
    0000326b: 	movq	%r14, %rsi
    0000326e: 	movq	%r15, %rdi
    00003271: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12913
    00003276: 	movl	iterations(%rip), %esi
    0000327c: 	movq	0xf0(%rsp), %rdi
    00003284: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 12932
    00003289: 	movq	0xf0(%rsp), %rdi
    00003291: 	cmpq	0x8(%rsp), %rdi
    00003296: 	je	.Ltmp1787 # Offset: 12950
    00003298: 	movq	0x100(%rsp), %rax
    000032a0: 	leaq	0x1(%rax), %rsi
    000032a4: 	callq	_ZdlPvm@PLT # Offset: 12964
.Ltmp1787:
    000032a9: 	movq	0xd0(%rsp), %rdi
    000032b1: 	leaq	0xe0(%rsp), %rax
    000032b9: 	cmpq	%rax, %rdi
    000032bc: 	je	.Ltmp1788 # Offset: 12988
    000032be: 	movq	0xe0(%rsp), %rax
    000032c6: 	leaq	0x1(%rax), %rsi
    000032ca: 	callq	_ZdlPvm@PLT # Offset: 13002
.Ltmp1788:
    000032cf: 	movq	0xb0(%rsp), %rdi
    000032d7: 	leaq	0xc0(%rsp), %rax
    000032df: 	cmpq	%rax, %rdi
    000032e2: 	je	.Ltmp1789 # Offset: 13026
    000032e4: 	movq	0xc0(%rsp), %rax
    000032ec: 	leaq	0x1(%rax), %rsi
    000032f0: 	callq	_ZdlPvm@PLT # Offset: 13040
.Ltmp1789:
    000032f5: 	movq	0x90(%rsp), %rdi
    000032fd: 	leaq	0xa0(%rsp), %rax
    00003305: 	cmpq	%rax, %rdi
    00003308: 	je	.Ltmp1790 # Offset: 13064
    0000330a: 	movq	0xa0(%rsp), %rax
    00003312: 	leaq	0x1(%rax), %rsi
    00003316: 	callq	_ZdlPvm@PLT # Offset: 13078
.Ltmp1790:
    0000331b: 	movq	0x70(%rsp), %rdi
    00003320: 	leaq	0x80(%rsp), %rax
    00003328: 	cmpq	%rax, %rdi
    0000332b: 	je	.Ltmp1791 # Offset: 13099
    0000332d: 	movq	0x80(%rsp), %rax
    00003335: 	leaq	0x1(%rax), %rsi
    00003339: 	callq	_ZdlPvm@PLT # Offset: 13113
.Ltmp1791:
    0000333e: 	movq	0x3f98(%rsp), %rax
    00003346: 	subq	%fs:0x28, %rax
    0000334f: 	jne	.Ltmp1792 # Offset: 13135
    00003355: 	addq	$0x3fa8, %rsp
    0000335c: 	popq	%rbx
    0000335d: 	popq	%rbp
    0000335e: 	popq	%r12
    00003360: 	popq	%r13
    00003362: 	popq	%r14
    00003364: 	popq	%r15
    00003366: 	retq # Offset: 13158
.Ltmp1588:
    00003367: 	movq	-0x8(%rdx), %rax
    0000336b: 	addq	$0x200, %rax
    00003371: 	jmp	.Ltmp1793 # Offset: 13169
.Ltmp1785:
    00003376: 	movq	-0x8(%rdx), %rax
    0000337a: 	addq	$0x200, %rax
    00003380: 	jmp	.Ltmp1794 # Offset: 13184
.Ltmp1779:
    00003385: 	movq	-0x8(%rdx), %rax
    00003389: 	addq	$0x200, %rax
    0000338f: 	jmp	.Ltmp1795 # Offset: 13199
.Ltmp1773:
    00003394: 	movq	-0x8(%rdx), %rax
    00003398: 	addq	$0x200, %rax
    0000339e: 	jmp	.Ltmp1796 # Offset: 13214
.Ltmp1767:
    000033a3: 	movq	-0x8(%rdx), %rax
    000033a7: 	addq	$0x200, %rax
    000033ad: 	jmp	.Ltmp1797 # Offset: 13229
.Ltmp1760:
    000033b2: 	movq	-0x8(%rdx), %rax
    000033b6: 	addq	$0x200, %rax
    000033bc: 	jmp	.Ltmp1798 # Offset: 13244
.Ltmp1748:
    000033c1: 	movq	-0x8(%rdx), %rax
    000033c5: 	addq	$0x200, %rax
    000033cb: 	jmp	.Ltmp1799 # Offset: 13259
.Ltmp1742:
    000033d0: 	movq	-0x8(%rdx), %rax
    000033d4: 	addq	$0x200, %rax
    000033da: 	jmp	.Ltmp1800 # Offset: 13274
.Ltmp1736:
    000033df: 	movq	-0x8(%rdx), %rax
    000033e3: 	addq	$0x200, %rax
    000033e9: 	jmp	.Ltmp1801 # Offset: 13289
.Ltmp1730:
    000033ee: 	movq	-0x8(%rdx), %rax
    000033f2: 	addq	$0x200, %rax
    000033f8: 	jmp	.Ltmp1802 # Offset: 13304
.Ltmp1724:
    000033fd: 	movq	-0x8(%rdx), %rax
    00003401: 	addq	$0x200, %rax
    00003407: 	jmp	.Ltmp1803 # Offset: 13319
.Ltmp1718:
    0000340c: 	movq	-0x8(%rdx), %rax
    00003410: 	addq	$0x200, %rax
    00003416: 	jmp	.Ltmp1804 # Offset: 13334
.Ltmp1712:
    0000341b: 	movq	-0x8(%rdx), %rax
    0000341f: 	addq	$0x200, %rax
    00003425: 	jmp	.Ltmp1805 # Offset: 13349
.Ltmp1706:
    0000342a: 	movq	-0x8(%rdx), %rax
    0000342e: 	addq	$0x200, %rax
    00003434: 	jmp	.Ltmp1806 # Offset: 13364
.Ltmp1700:
    00003439: 	movq	-0x8(%rdx), %rax
    0000343d: 	addq	$0x200, %rax
    00003443: 	jmp	.Ltmp1807 # Offset: 13379
.Ltmp1698:
    00003448: 	movq	-0x8(%rdx), %rax
    0000344c: 	addq	$0x200, %rax
    00003452: 	jmp	.Ltmp1808 # Offset: 13394
.Ltmp1696:
    00003457: 	movq	-0x8(%rdx), %rax
    0000345b: 	addq	$0x200, %rax
    00003461: 	jmp	.Ltmp1809 # Offset: 13409
.Ltmp1694:
    00003466: 	movq	-0x8(%rdx), %rax
    0000346a: 	addq	$0x200, %rax
    00003470: 	jmp	.Ltmp1810 # Offset: 13424
.Ltmp1692:
    00003475: 	movq	-0x8(%rdx), %rax
    00003479: 	addq	$0x200, %rax
    0000347f: 	jmp	.Ltmp1811 # Offset: 13439
.Ltmp1690:
    00003484: 	movq	-0x8(%rdx), %rax
    00003488: 	addq	$0x200, %rax
    0000348e: 	jmp	.Ltmp1812 # Offset: 13454
.Ltmp1688:
    00003493: 	movq	-0x8(%rdx), %rax
    00003497: 	addq	$0x200, %rax
    0000349d: 	jmp	.Ltmp1813 # Offset: 13469
.Ltmp1686:
    000034a2: 	movq	-0x8(%rdx), %rax
    000034a6: 	addq	$0x200, %rax
    000034ac: 	jmp	.Ltmp1814 # Offset: 13484
.Ltmp1684:
    000034b1: 	movq	-0x8(%rdx), %rax
    000034b5: 	addq	$0x200, %rax
    000034bb: 	jmp	.Ltmp1815 # Offset: 13499
.Ltmp1682:
    000034c0: 	movq	-0x8(%rdx), %rax
    000034c4: 	addq	$0x200, %rax
    000034ca: 	jmp	.Ltmp1816 # Offset: 13514
.Ltmp1680:
    000034cf: 	movq	-0x8(%rdx), %rax
    000034d3: 	addq	$0x200, %rax
    000034d9: 	jmp	.Ltmp1817 # Offset: 13529
.Ltmp1678:
    000034de: 	movq	-0x8(%rdx), %rax
    000034e2: 	addq	$0x200, %rax
    000034e8: 	jmp	.Ltmp1818 # Offset: 13544
.Ltmp1676:
    000034ed: 	movq	-0x8(%rdx), %rax
    000034f1: 	addq	$0x200, %rax
    000034f7: 	jmp	.Ltmp1819 # Offset: 13559
.Ltmp1674:
    000034fc: 	movq	-0x8(%rdx), %rax
    00003500: 	addq	$0x200, %rax
    00003506: 	jmp	.Ltmp1820 # Offset: 13574
.Ltmp1672:
    0000350b: 	movq	-0x8(%rdx), %rax
    0000350f: 	addq	$0x200, %rax
    00003515: 	jmp	.Ltmp1821 # Offset: 13589
.Ltmp1670:
    0000351a: 	movq	-0x8(%rdx), %rax
    0000351e: 	addq	$0x200, %rax
    00003524: 	jmp	.Ltmp1822 # Offset: 13604
.Ltmp1668:
    00003529: 	movq	-0x8(%rdx), %rax
    0000352d: 	addq	$0x200, %rax
    00003533: 	jmp	.Ltmp1823 # Offset: 13619
.Ltmp1666:
    00003538: 	movq	-0x8(%rdx), %rax
    0000353c: 	addq	$0x200, %rax
    00003542: 	jmp	.Ltmp1824 # Offset: 13634
.Ltmp1660:
    00003547: 	movq	-0x8(%rdx), %rax
    0000354b: 	addq	$0x200, %rax
    00003551: 	jmp	.Ltmp1825 # Offset: 13649
.Ltmp1654:
    00003556: 	movq	-0x8(%rdx), %rax
    0000355a: 	addq	$0x200, %rax
    00003560: 	jmp	.Ltmp1826 # Offset: 13664
.Ltmp1648:
    00003565: 	movq	-0x8(%rdx), %rax
    00003569: 	addq	$0x200, %rax
    0000356f: 	jmp	.Ltmp1827 # Offset: 13679
.Ltmp1642:
    00003574: 	movq	-0x8(%rdx), %rax
    00003578: 	addq	$0x200, %rax
    0000357e: 	jmp	.Ltmp1828 # Offset: 13694
.Ltmp1636:
    00003583: 	movq	-0x8(%rdx), %rax
    00003587: 	addq	$0x200, %rax
    0000358d: 	jmp	.Ltmp1829 # Offset: 13709
.Ltmp1630:
    00003592: 	movq	-0x8(%rdx), %rax
    00003596: 	addq	$0x200, %rax
    0000359c: 	jmp	.Ltmp1830 # Offset: 13724
.Ltmp1624:
    000035a1: 	movq	-0x8(%rdx), %rax
    000035a5: 	addq	$0x200, %rax
    000035ab: 	jmp	.Ltmp1831 # Offset: 13739
.Ltmp1618:
    000035b0: 	movq	-0x8(%rdx), %rax
    000035b4: 	addq	$0x200, %rax
    000035ba: 	jmp	.Ltmp1832 # Offset: 13754
.Ltmp1612:
    000035bf: 	movq	-0x8(%rdx), %rax
    000035c3: 	addq	$0x200, %rax
    000035c9: 	jmp	.Ltmp1833 # Offset: 13769
.Ltmp1606:
    000035ce: 	movq	-0x8(%rdx), %rax
    000035d2: 	addq	$0x200, %rax
    000035d8: 	jmp	.Ltmp1834 # Offset: 13784
.Ltmp1600:
    000035dd: 	movq	-0x8(%rdx), %rax
    000035e1: 	addq	$0x200, %rax
    000035e7: 	jmp	.Ltmp1835 # Offset: 13799
.Ltmp1594:
    000035ec: 	movq	-0x8(%rdx), %rax
    000035f0: 	addq	$0x200, %rax
    000035f6: 	jmp	.Ltmp1836 # Offset: 13814
.Ltmp1792:
    000035fb: 	callq	__stack_chk_fail@PLT # Offset: 13819
    00003600: 	endbr64
.Ltmp1838:
    00003604: 	movq	%rax, %rbx
    00003607: 	jmp	.Ltmp1837 # Offset: 13831
    00003609: 	endbr64
    0000360d: 	jmp	.Ltmp1838 # Offset: 13837
    0000360f: 	endbr64
    00003613: 	jmp	.Ltmp1838 # Offset: 13843
    00003615: 	endbr64
    00003619: 	jmp	.Ltmp1838 # Offset: 13849
.Ltmp1837:
    0000361b: 	movq	0xf0(%rsp), %rdi
    00003623: 	cmpq	0x8(%rsp), %rdi
    00003628: 	je	.Ltmp1839 # Offset: 13864
.Ltmp1846:
    0000362a: 	movq	0x100(%rsp), %rax
    00003632: 	leaq	0x1(%rax), %rsi
    00003636: 	callq	_ZdlPvm@PLT # Offset: 13878
.Ltmp1839:
    0000363b: 	movq	0x70(%rsp), %rdi
    00003640: 	leaq	0x80(%rsp), %rax
    00003648: 	cmpq	%rax, %rdi
    0000364b: 	je	.Ltmp1840 # Offset: 13899
    0000364d: 	movq	0x80(%rsp), %rax
    00003655: 	leaq	0x1(%rax), %rsi
    00003659: 	callq	_ZdlPvm@PLT # Offset: 13913
.Ltmp1840:
    0000365e: 	movq	%rbx, %rdi
    00003661: 	callq	_Unwind_Resume@PLT # Offset: 13921
    00003666: 	endbr64
    0000366a: 	jmp	.Ltmp1838 # Offset: 13930
    0000366c: 	endbr64
    00003670: 	jmp	.Ltmp1838 # Offset: 13936
    00003672: 	endbr64
    00003676: 	jmp	.Ltmp1838 # Offset: 13942
    00003678: 	endbr64
    0000367c: 	jmp	.Ltmp1838 # Offset: 13948
    0000367e: 	endbr64
    00003682: 	jmp	.Ltmp1838 # Offset: 13954
    00003684: 	endbr64
    00003688: 	jmp	.Ltmp1838 # Offset: 13960
    0000368d: 	endbr64
    00003691: 	jmp	.Ltmp1838 # Offset: 13969
    00003696: 	endbr64
    0000369a: 	jmp	.Ltmp1838 # Offset: 13978
    0000369f: 	endbr64
.Ltmp1842:
    000036a3: 	movq	%rax, %rbx
    000036a6: 	jmp	.Ltmp1841 # Offset: 13990
    000036a8: 	endbr64
    000036ac: 	jmp	.Ltmp1842 # Offset: 13996
    000036ae: 	endbr64
    000036b2: 	jmp	.Ltmp1842 # Offset: 14002
    000036b4: 	endbr64
    000036b8: 	movq	%rax, %rbx
    000036bb: 	jmp	.Ltmp1843 # Offset: 14011
.Ltmp1841:
    000036bd: 	movq	0xf0(%rsp), %rdi
    000036c5: 	cmpq	0x8(%rsp), %rdi
    000036ca: 	je	.Ltmp1843 # Offset: 14026
    000036cc: 	movq	0x100(%rsp), %rax
    000036d4: 	leaq	0x1(%rax), %rsi
    000036d8: 	callq	_ZdlPvm@PLT # Offset: 14040
.Ltmp1843:
    000036dd: 	movq	0x90(%rsp), %rdi
    000036e5: 	leaq	0xa0(%rsp), %rax
    000036ed: 	cmpq	%rax, %rdi
    000036f0: 	je	.Ltmp1839 # Offset: 14064
    000036f6: 	movq	0xa0(%rsp), %rax
    000036fe: 	leaq	0x1(%rax), %rsi
    00003702: 	callq	_ZdlPvm@PLT # Offset: 14082
    00003707: 	jmp	.Ltmp1839 # Offset: 14087
    0000370c: 	endbr64
    00003710: 	jmp	.Ltmp1842 # Offset: 14096
    00003712: 	endbr64
    00003716: 	jmp	.Ltmp1842 # Offset: 14102
    00003718: 	endbr64
    0000371c: 	jmp	.Ltmp1842 # Offset: 14108
    0000371e: 	endbr64
    00003722: 	jmp	.Ltmp1842 # Offset: 14114
    00003727: 	endbr64
    0000372b: 	jmp	.Ltmp1842 # Offset: 14123
    00003730: 	endbr64
    00003734: 	jmp	.Ltmp1842 # Offset: 14132
    00003739: 	endbr64
    0000373d: 	jmp	.Ltmp1842 # Offset: 14141
    00003742: 	endbr64
    00003746: 	jmp	.Ltmp1842 # Offset: 14150
    0000374b: 	endbr64
    0000374f: 	jmp	.Ltmp1838 # Offset: 14159
    00003754: 	endbr64
.Ltmp1849:
    00003758: 	movq	%rax, %rbx
    0000375b: 	jmp	.Ltmp1844 # Offset: 14171
    0000375d: 	endbr64
    00003761: 	movq	%rax, %rbx
    00003764: 	jmp	.Ltmp1845 # Offset: 14180
    00003766: 	endbr64
    0000376a: 	movq	%rax, %rbx
    0000376d: 	jmp	.Ltmp1839 # Offset: 14189
.Ltmp1845:
    00003772: 	movq	0xf0(%rsp), %rdi
    0000377a: 	leaq	0x100(%rsp), %rax
    00003782: 	cmpq	%rax, %rdi
    00003785: 	jne	.Ltmp1846 # Offset: 14213
    0000378b: 	jmp	.Ltmp1839 # Offset: 14219
.Ltmp1844:
    00003790: 	movq	0xf0(%rsp), %rdi
    00003798: 	cmpq	0x8(%rsp), %rdi
    0000379d: 	je	.Ltmp1847 # Offset: 14237
    0000379f: 	movq	0x100(%rsp), %rax
    000037a7: 	leaq	0x1(%rax), %rsi
    000037ab: 	callq	_ZdlPvm@PLT # Offset: 14251
.Ltmp1847:
    000037b0: 	movq	0xd0(%rsp), %rdi
    000037b8: 	leaq	0xe0(%rsp), %rax
    000037c0: 	cmpq	%rax, %rdi
    000037c3: 	je	.Ltmp1848 # Offset: 14275
    000037c5: 	movq	0xe0(%rsp), %rax
    000037cd: 	leaq	0x1(%rax), %rsi
    000037d1: 	callq	_ZdlPvm@PLT # Offset: 14289
.Ltmp1848:
    000037d6: 	movq	0xb0(%rsp), %rdi
    000037de: 	leaq	0xc0(%rsp), %rax
    000037e6: 	cmpq	%rax, %rdi
    000037e9: 	je	.Ltmp1843 # Offset: 14313
    000037ef: 	movq	0xc0(%rsp), %rax
    000037f7: 	leaq	0x1(%rax), %rsi
    000037fb: 	callq	_ZdlPvm@PLT # Offset: 14331
    00003800: 	jmp	.Ltmp1843 # Offset: 14336
    00003805: 	endbr64
    00003809: 	jmp	.Ltmp1849 # Offset: 14345
    0000380e: 	endbr64
    00003812: 	jmp	.Ltmp1849 # Offset: 14354
    00003817: 	endbr64
    0000381b: 	jmp	.Ltmp1849 # Offset: 14363
    00003820: 	endbr64
    00003824: 	jmp	.Ltmp1849 # Offset: 14372
    00003829: 	endbr64
    0000382d: 	jmp	.Ltmp1842 # Offset: 14381
    00003832: 	endbr64
    00003836: 	jmp	.Ltmp1842 # Offset: 14390
    0000383b: 	endbr64
    0000383f: 	jmp	.Ltmp1842 # Offset: 14399
    00003844: 	endbr64
    00003848: 	jmp	.Ltmp1842 # Offset: 14408
    0000384d: 	endbr64
    00003851: 	jmp	.Ltmp1842 # Offset: 14417
    00003856: 	endbr64
    0000385a: 	jmp	.Ltmp1842 # Offset: 14426
    0000385f: 	endbr64
.Ltmp1851:
    00003863: 	movq	%rax, %rbx
    00003866: 	jmp	.Ltmp1850 # Offset: 14438
    0000386b: 	endbr64
    0000386f: 	movq	%rax, %rbx
    00003872: 	jmp	.Ltmp1848 # Offset: 14450
    00003877: 	endbr64
    0000387b: 	jmp	.Ltmp1851 # Offset: 14459
    0000387d: 	endbr64
    00003881: 	jmp	.Ltmp1851 # Offset: 14465
    00003883: 	endbr64
    00003887: 	jmp	.Ltmp1851 # Offset: 14471
    00003889: 	endbr64
    0000388d: 	jmp	.Ltmp1849 # Offset: 14477
    00003892: 	endbr64
    00003896: 	jmp	.Ltmp1849 # Offset: 14486
    0000389b: 	endbr64
    0000389f: 	jmp	.Ltmp1849 # Offset: 14495
    000038a4: 	endbr64
    000038a8: 	jmp	.Ltmp1851 # Offset: 14504
    000038aa: 	endbr64
    000038ae: 	jmp	.Ltmp1849 # Offset: 14510
    000038b3: 	endbr64
    000038b7: 	movq	%rax, %rbx
    000038ba: 	jmp	.Ltmp1847 # Offset: 14522
    000038bf: 	endbr64
    000038c3: 	jmp	.Ltmp1849 # Offset: 14531
    000038c8: 	endbr64
    000038cc: 	jmp	.Ltmp1849 # Offset: 14540
    000038d1: 	endbr64
    000038d5: 	jmp	.Ltmp1849 # Offset: 14549
    000038da: 	endbr64
    000038de: 	jmp	.Ltmp1849 # Offset: 14558
    000038e3: 	endbr64
    000038e7: 	jmp	.Ltmp1851 # Offset: 14567
    000038ec: 	endbr64
    000038f0: 	jmp	.Ltmp1851 # Offset: 14576
    000038f5: 	endbr64
    000038f9: 	jmp	.Ltmp1851 # Offset: 14585
.Ltmp1850:
    000038fe: 	movq	0xf0(%rsp), %rdi
    00003906: 	cmpq	0x8(%rsp), %rdi
    0000390b: 	je	.Ltmp1848 # Offset: 14603
    00003911: 	movq	0x100(%rsp), %rax
    00003919: 	leaq	0x1(%rax), %rsi
    0000391d: 	callq	_ZdlPvm@PLT # Offset: 14621
    00003922: 	jmp	.Ltmp1848 # Offset: 14626
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeItEvd"

Binary Function "_Z10test_2termIj16custom_2term_subIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0x1a620
  Size        : 0x4ab
  MaxSize     : 0x4b0
  Offset      : 0x1a620
  Section     : .text
  Orc Section : .local.text._Z10test_2termIj16custom_2term_subIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	movl	%eax, 0x4(%rsp)
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp1852 # Offset: 69
    0000004b: 	leal	-0x1(%r13), %r15d
    0000004f: 	leal	-0x2(%r13), %eax
    00000053: 	xorl	%r12d, %r12d
    00000056: 	movl	%eax, 0x8(%rsp)
    0000005a: 	movl	%r15d, %eax
    0000005d: 	shrl	$0x2, %eax
    00000060: 	subl	$0x1, %eax
    00000063: 	shlq	$0x4, %rax
    00000067: 	leaq	0x10(%rbx,%rax), %rbp
    0000006c: 	movl	%r15d, %eax
    0000006f: 	andl	$-0x4, %eax
    00000072: 	movl	%eax, 0xc(%rsp)
    00000076: 	addl	$0x1, %eax
    00000079: 	movl	%eax, 0x10(%rsp)
.Ltmp1859:
    0000007d: 	movl	0x4(%rbx), %r8d
    00000081: 	movl	(%rbx), %edi
.Ltmp1867:
    00000083: 	movl	%edi, %eax
    00000085: 	movl	%r8d, %edx
    00000088: 	imull	%r8d, %edx
    0000008c: 	imull	%edi, %eax
    0000008f: 	addl	%edx, %eax
    00000091: 	movl	%r8d, %edx
    00000094: 	imull	%edi, %edx
    00000097: 	addl	%edx, %edx
    00000099: 	subl	%edx, %eax
    0000009b: 	cmpl	$0x1, %r13d
    0000009f: 	jle	.Ltmp1853 # Offset: 159
    000000a5: 	cmpl	$0x2, 0x8(%rsp)
    000000aa: 	jbe	.Ltmp1854 # Offset: 170
    000000b0: 	movq	%rbx, %rdx
    000000b3: 	pxor	%xmm4, %xmm4
    000000b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1855:
    000000c0: 	movdqu	0x4(%rdx), %xmm5
    000000c5: 	movdqu	(%rdx), %xmm0
    000000c9: 	addq	$0x10, %rdx
    000000cd: 	movdqa	%xmm5, %xmm6
    000000d1: 	movdqa	%xmm5, %xmm1
    000000d5: 	movdqa	%xmm0, %xmm3
    000000d9: 	psrlq	$0x20, %xmm6
    000000de: 	pmuludq	%xmm5, %xmm1
    000000e2: 	movdqa	%xmm6, %xmm2
    000000e6: 	pmuludq	%xmm0, %xmm3
    000000ea: 	pmuludq	%xmm6, %xmm2
    000000ee: 	pshufd	$0x8, %xmm1, %xmm1
    000000f3: 	pshufd	$0x8, %xmm3, %xmm3
    000000f8: 	pshufd	$0x8, %xmm2, %xmm2
    000000fd: 	punpckldq	%xmm2, %xmm1
    00000101: 	movdqa	%xmm0, %xmm2
    00000105: 	psrlq	$0x20, %xmm2
    0000010a: 	pmuludq	%xmm5, %xmm0
    0000010e: 	movdqa	%xmm2, %xmm7
    00000112: 	pmuludq	%xmm2, %xmm7
    00000116: 	pmuludq	%xmm6, %xmm2
    0000011a: 	pshufd	$0x8, %xmm0, %xmm0
    0000011f: 	pshufd	$0x8, %xmm2, %xmm2
    00000124: 	pshufd	$0x8, %xmm7, %xmm7
    00000129: 	punpckldq	%xmm2, %xmm0
    0000012d: 	punpckldq	%xmm7, %xmm3
    00000131: 	pslld	$0x1, %xmm0
    00000136: 	paddd	%xmm3, %xmm1
    0000013a: 	psubd	%xmm0, %xmm4
    0000013e: 	paddd	%xmm1, %xmm4
    00000142: 	cmpq	%rbp, %rdx
    00000145: 	jne	.Ltmp1855 # Offset: 325
    0000014b: 	movdqa	%xmm4, %xmm0
    0000014f: 	psrldq	$0x8, %xmm0
    00000154: 	paddd	%xmm0, %xmm4
    00000158: 	movdqa	%xmm4, %xmm0
    0000015c: 	psrldq	$0x4, %xmm0
    00000161: 	paddd	%xmm0, %xmm4
    00000165: 	movd	%xmm4, %edx
    00000169: 	addl	%edx, %eax
    0000016b: 	cmpl	%r15d, 0xc(%rsp)
    00000170: 	je	.Ltmp1853 # Offset: 368
    00000176: 	movl	0x10(%rsp), %edx
.Ltmp1868:
    0000017a: 	movslq	%edx, %rcx
    0000017d: 	leal	0x1(%rdx), %r9d
    00000181: 	shlq	$0x2, %rcx
    00000185: 	leaq	(%rbx,%rcx), %rsi
    00000189: 	cmpl	%r15d, %r9d
    0000018c: 	jge	.Ltmp1856 # Offset: 396
    00000192: 	cmpl	%edx, %r13d
    00000195: 	jle	.Ltmp1856 # Offset: 405
    0000019b: 	movl	(%rsi), %r9d
    0000019e: 	movl	-0x4(%rsi), %r10d
    000001a2: 	movl	0x4(%rbx,%rcx), %esi
    000001a6: 	movl	%r9d, %r14d
    000001a9: 	imull	%r9d, %r14d
    000001ad: 	movl	%esi, %r11d
    000001b0: 	imull	%esi, %r11d
    000001b4: 	leal	(%rax,%r14,2), %eax
    000001b8: 	movl	%r10d, %r14d
    000001bb: 	imull	%r10d, %r14d
    000001bf: 	imull	%r9d, %r10d
    000001c3: 	imull	%esi, %r9d
    000001c7: 	addl	%r14d, %eax
    000001ca: 	addl	%r10d, %r10d
    000001cd: 	addl	%r11d, %eax
    000001d0: 	subl	%r10d, %eax
    000001d3: 	addl	%r9d, %r9d
    000001d6: 	leal	0x3(%rdx), %r10d
    000001da: 	subl	%r9d, %eax
    000001dd: 	leal	0x2(%rdx), %r9d
    000001e1: 	cmpl	%r10d, %r15d
    000001e4: 	jle	.Ltmp1857 # Offset: 484
    000001ea: 	movl	0xc(%rbx,%rcx), %r10d
    000001ef: 	movl	0x8(%rbx,%rcx), %r9d
    000001f4: 	movl	%r10d, %r14d
    000001f7: 	imull	%r9d, %esi
    000001fb: 	imull	%r10d, %r14d
    000001ff: 	addl	%esi, %esi
    00000201: 	movl	%r14d, 0x14(%rsp)
    00000206: 	movl	%r9d, %r14d
    00000209: 	imull	%r9d, %r14d
    0000020d: 	imull	%r10d, %r9d
    00000211: 	leal	(%r11,%r14,2), %r11d
    00000215: 	movl	0x14(%rsp), %r14d
    0000021a: 	addl	%r9d, %r9d
    0000021d: 	addl	%r14d, %r11d
    00000220: 	subl	%esi, %r11d
    00000223: 	leal	0x5(%rdx), %esi
    00000226: 	addl	%eax, %r11d
    00000229: 	movl	%r11d, %eax
    0000022c: 	subl	%r9d, %eax
    0000022f: 	leal	0x4(%rdx), %r9d
    00000233: 	cmpl	%esi, %r15d
    00000236: 	jle	.Ltmp1857 # Offset: 566
    00000238: 	movl	0x10(%rbx,%rcx), %esi
    0000023c: 	movl	0x14(%rbx,%rcx), %ecx
    00000240: 	movl	%esi, %r9d
    00000243: 	imull	%esi, %r10d
    00000247: 	movl	%ecx, %r11d
    0000024a: 	imull	%esi, %r9d
    0000024e: 	imull	%ecx, %r11d
    00000252: 	addl	%r10d, %r10d
    00000255: 	imull	%esi, %ecx
    00000258: 	leal	(%r14,%r9,2), %r9d
    0000025c: 	addl	%r11d, %r9d
    0000025f: 	subl	%r10d, %r9d
    00000262: 	addl	%ecx, %ecx
    00000264: 	addl	%eax, %r9d
    00000267: 	movl	%r9d, %eax
    0000026a: 	leal	0x6(%rdx), %r9d
    0000026e: 	subl	%ecx, %eax
.Ltmp1857:
    00000270: 	movslq	%r9d, %rdx
    00000273: 	leaq	(,%rdx,4), %r10
    0000027b: 	movl	(%rbx,%rdx,4), %edx
    0000027e: 	movl	-0x4(%rbx,%r10), %ecx
    00000283: 	movl	%edx, %esi
    00000285: 	movl	%ecx, %r11d
    00000288: 	imull	%edx, %esi
    0000028b: 	imull	%ecx, %r11d
    0000028f: 	imull	%edx, %ecx
    00000292: 	addl	%esi, %eax
    00000294: 	addl	%r11d, %eax
    00000297: 	addl	%ecx, %ecx
    00000299: 	subl	%ecx, %eax
    0000029b: 	leal	0x1(%r9), %ecx
    0000029f: 	cmpl	%ecx, %r13d
    000002a2: 	jle	.Ltmp1853 # Offset: 674
    000002a4: 	movl	0x4(%rbx,%r10), %ecx
    000002a9: 	addl	$0x2, %r9d
    000002ad: 	movl	%ecx, %r11d
    000002b0: 	imull	%ecx, %edx
    000002b3: 	imull	%ecx, %r11d
    000002b7: 	addl	%edx, %edx
    000002b9: 	addl	%r11d, %esi
    000002bc: 	subl	%edx, %esi
    000002be: 	addl	%esi, %eax
    000002c0: 	cmpl	%r9d, %r13d
    000002c3: 	jle	.Ltmp1853 # Offset: 707
    000002c5: 	movl	0x8(%rbx,%r10), %esi
    000002ca: 	movl	%esi, %edx
    000002cc: 	imull	%esi, %ecx
    000002cf: 	imull	%esi, %edx
    000002d2: 	addl	%ecx, %ecx
    000002d4: 	addl	%r11d, %edx
    000002d7: 	subl	%ecx, %edx
    000002d9: 	addl	%edx, %eax
.Ltmp1853:
    000002db: 	testl	%eax, %eax
    000002dd: 	je	.Ltmp1858 # Offset: 733
    000002e3: 	movl	current_test(%rip), %edx
    000002e9: 	leaq	DATAat0x381c8(%rip), %rsi
    000002f0: 	movl	$0x1, %edi
    000002f5: 	xorl	%eax, %eax
    000002f7: 	addl	$0x1, %r12d
    000002fb: 	callq	__printf_chk@PLT # Offset: 763
    00000300: 	movl	iterations(%rip), %eax
    00000306: 	movl	%eax, 0x4(%rsp)
    0000030a: 	cmpl	%eax, %r12d
    0000030d: 	jl	.Ltmp1859 # Offset: 781
.Ltmp1852:
    00000313: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000031a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000321: 	subq	$0x20, %rax
    00000325: 	cmpq	%rax, %rbx
    00000328: 	je	.Ltmp1860 # Offset: 808
    0000032e: 	movq	0x18(%rsp), %rax
    00000333: 	leaq	0x10(%rbx), %rdi
    00000337: 	movq	%rdi, (%rbx)
    0000033a: 	movq	(%rax), %rbp
    0000033d: 	movq	0x8(%rax), %r12
    00000341: 	movq	%rbp, %rax
    00000344: 	addq	%r12, %rax
    00000347: 	je	.Ltmp1861 # Offset: 839
    00000349: 	testq	%rbp, %rbp
    0000034c: 	je	.Ltmp1862 # Offset: 844
.Ltmp1861:
    00000352: 	movq	%r12, 0x20(%rsp)
    00000357: 	cmpq	$0xf, %r12
    0000035b: 	ja	.Ltmp1863 # Offset: 859
    00000361: 	cmpq	$0x1, %r12
    00000365: 	jne	.Ltmp1864 # Offset: 869
    0000036b: 	movzbl	(%rbp), %eax
    0000036f: 	movb	%al, 0x10(%rbx)
.Ltmp1869:
    00000372: 	movq	%r12, 0x8(%rbx)
    00000376: 	movb	$0x0, (%rdi,%r12)
    0000037b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000382: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000389: 	addq	$0x20, %rax
    0000038d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000394: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000039b: 	je	.Ltmp1865 # Offset: 923
.Ltmp1870:
    000003a1: 	movq	-0x20(%rax), %rbp
    000003a5: 	callq	clock@PLT # Offset: 933
    000003aa: 	movq	%rax, end_time(%rip)
    000003b1: 	movq	0x28(%rsp), %rdx
    000003b6: 	subq	%fs:0x28, %rdx
    000003bf: 	jne	.Ltmp1866 # Offset: 959
    000003c5: 	subq	start_time(%rip), %rax
    000003cc: 	pxor	%xmm0, %xmm0
    000003d0: 	movq	%rbp, %rdi
    000003d3: 	cvtsi2sd	%rax, %xmm0
    000003d8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003e0: 	addq	$0x38, %rsp
    000003e4: 	popq	%rbx
    000003e5: 	popq	%rbp
    000003e6: 	popq	%r12
    000003e8: 	popq	%r13
    000003ea: 	popq	%r14
    000003ec: 	popq	%r15
    000003ee: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1006
    000003f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1858:
    000003f8: 	addl	$0x1, %r12d
    000003fc: 	cmpl	0x4(%rsp), %r12d
    00000401: 	jl	.Ltmp1867 # Offset: 1025
    00000407: 	jmp	.Ltmp1852 # Offset: 1031
.Ltmp1854:
    0000040c: 	movl	$0x1, %edx
    00000411: 	jmp	.Ltmp1868 # Offset: 1041
.Ltmp1856:
    00000416: 	movl	%edx, %r9d
    00000419: 	jmp	.Ltmp1857 # Offset: 1049
.Ltmp1863:
    0000041e: 	movq	%rbx, %rdi
    00000421: 	leaq	0x20(%rsp), %rsi
    00000426: 	xorl	%edx, %edx
    00000428: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1064
    0000042d: 	movq	%rax, (%rbx)
    00000430: 	movq	%rax, %rdi
    00000433: 	movq	0x20(%rsp), %rax
    00000438: 	movq	%rax, 0x10(%rbx)
.Ltmp1871:
    0000043c: 	movq	%r12, %rdx
    0000043f: 	movq	%rbp, %rsi
    00000442: 	callq	memcpy@PLT # Offset: 1090
    00000447: 	movq	0x20(%rsp), %r12
    0000044c: 	movq	(%rbx), %rdi
    0000044f: 	jmp	.Ltmp1869 # Offset: 1103
.Ltmp1860:
    00000454: 	movq	0x18(%rsp), %rsi
    00000459: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000460: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1120
    00000465: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000046c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000473: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000047a: 	jne	.Ltmp1870 # Offset: 1146
.Ltmp1865:
    00000480: 	movq	-0x8(%rdx), %rax
    00000484: 	addq	$0x200, %rax
    0000048a: 	jmp	.Ltmp1870 # Offset: 1162
.Ltmp1864:
    0000048f: 	testq	%r12, %r12
    00000492: 	je	.Ltmp1869 # Offset: 1170
    00000498: 	jmp	.Ltmp1871 # Offset: 1176
.Ltmp1866:
    0000049a: 	callq	__stack_chk_fail@PLT # Offset: 1178
.Ltmp1862:
    0000049f: 	leaq	DATAat0x38110(%rip), %rdi
    000004a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1190
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIj16custom_2term_subIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIjEvd" after disassembly {
  Number      : 102
  State       : disassembled
  Address     : 0x1aad0
  Size        : 0x3739
  MaxSize     : 0x3740
  Offset      : 0x1aad0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIjEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0101:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp1872:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1872 # Offset: 37
    00000027: 	subq	$0xe18, %rsp
    0000002e: 	leaq	DATAat0x38581(%rip), %rsi
    00000035: 	leaq	0x60(%rsp), %r15
    0000003a: 	movsd	%xmm0, (%rsp)
    0000003f: 	leaq	0x100(%rsp), %r13
    00000047: 	movq	%fs:0x28, %rax
    00000050: 	movq	%rax, 0x7e08(%rsp)
    00000058: 	xorl	%eax, %eax
    0000005a: 	movq	%r15, %rdi
    0000005d: 	leaq	0x7e00(%rsp), %rbx
    00000065: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 101
    0000006a: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000072: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000007a: 	leaq	0x40(%rsp), %rsi
    0000007f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000086: 	movaps	%xmm6, 0x40(%rsp)
    0000008b: 	movaps	%xmm7, 0x50(%rsp)
    00000090: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 144
    00000095: 	movsd	(%rsp), %xmm0
    0000009a: 	cvttsd2si	init_value(%rip), %rax
    000000a3: 	movq	%rax, %xmm1
    000000a8: 	movq	%r13, %rax
    000000ab: 	pshufd	$0x0, %xmm1, %xmm1
.Ltmp1873:
    000000b0: 	movaps	%xmm1, (%rax)
    000000b3: 	addq	$0x10, %rax
    000000b7: 	cmpq	%rbx, %rax
    000000ba: 	jne	.Ltmp1873 # Offset: 186
    000000bc: 	cvttsd2si	%xmm0, %rdi
    000000c1: 	xorl	%edx, %edx
    000000c3: 	leaq	0xe0(%rsp), %r14
    000000cb: 	movl	%edi, %eax
    000000cd: 	movl	%edi, %esi
    000000cf: 	movq	%rdi, 0x38(%rsp)
    000000d4: 	addl	$0x2, %esi
    000000d7: 	addl	%eax, %eax
    000000d9: 	movl	%edi, 0x28(%rsp)
    000000dd: 	movl	%eax, 0x2c(%rsp)
    000000e1: 	divl	%esi
    000000e3: 	movl	%esi, 0x30(%rsp)
    000000e7: 	leaq	DATAat0x381d8(%rip), %rdx
    000000ee: 	movq	%r15, %rsi
    000000f1: 	addl	%edi, %eax
    000000f3: 	movq	%r14, %rdi
    000000f6: 	movl	%eax, 0x34(%rsp)
    000000fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 250
    000000ff: 	callq	clock@PLT # Offset: 255
    00000104: 	movl	iterations(%rip), %ecx
    0000010a: 	xorl	%ebp, %ebp
    0000010c: 	leaq	DATAat0x381c8(%rip), %r12
    00000113: 	movq	%rax, start_time(%rip)
    0000011a: 	testl	%ecx, %ecx
    0000011c: 	jle	.Ltmp1874 # Offset: 284
    0000011e: 	nop # Size: 2
.Ltmp1877:
    00000120: 	movq	%r13, %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1875:
    00000130: 	paddd	(%rax), %xmm0
    00000134: 	addq	$0x10, %rax
    00000138: 	cmpq	%rbx, %rax
    0000013b: 	jne	.Ltmp1875 # Offset: 315
    0000013d: 	cvttsd2si	init_value(%rip), %rdx
    00000146: 	movdqa	%xmm0, %xmm1
    0000014a: 	psrldq	$0x8, %xmm1
    0000014f: 	paddd	%xmm1, %xmm0
    00000153: 	movdqa	%xmm0, %xmm1
    00000157: 	psrldq	$0x4, %xmm1
    0000015c: 	imull	$0x1f40, %edx, %edx
    00000162: 	paddd	%xmm1, %xmm0
    00000166: 	movd	%xmm0, %eax
    0000016a: 	cmpl	%eax, %edx
    0000016c: 	je	.Ltmp1876 # Offset: 364
    0000016e: 	movl	current_test(%rip), %edx
    00000174: 	movq	%r12, %rsi
    00000177: 	movl	$0x1, %edi
    0000017c: 	xorl	%eax, %eax
    0000017e: 	callq	__printf_chk@PLT # Offset: 382
    00000183: 	movl	iterations(%rip), %ecx
.Ltmp1876:
    00000189: 	addl	$0x1, %ebp
    0000018c: 	cmpl	%ecx, %ebp
    0000018e: 	jl	.Ltmp1877 # Offset: 398
.Ltmp1874:
    00000190: 	movq	%r14, %rsi
    00000193: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000019a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 410
    0000019f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001b4: 	je	.Ltmp1878 # Offset: 436
.Ltmp2083:
    000001ba: 	movq	-0x20(%rax), %rbp
    000001be: 	callq	clock@PLT # Offset: 446
    000001c3: 	pxor	%xmm0, %xmm0
    000001c7: 	movq	%rax, end_time(%rip)
    000001ce: 	movq	%rbp, %rdi
    000001d1: 	subq	start_time(%rip), %rax
    000001d8: 	cvtsi2sd	%rax, %xmm0
    000001dd: 	divsd	DATAat0x385e0(%rip), %xmm0
    000001e5: 	callq	_Z13record_resultdPKc # Offset: 485
    000001ea: 	movq	0xe0(%rsp), %rdi
    000001f2: 	leaq	0xf0(%rsp), %rax
    000001fa: 	movq	%rax, 0x20(%rsp)
    000001ff: 	cmpq	%rax, %rdi
    00000202: 	je	.Ltmp1879 # Offset: 514
    00000204: 	movq	0xf0(%rsp), %rax
    0000020c: 	leaq	0x1(%rax), %rsi
    00000210: 	callq	_ZdlPvm@PLT # Offset: 528
.Ltmp1879:
    00000215: 	leaq	DATAat0x381de(%rip), %rdx
    0000021c: 	movq	%r15, %rsi
    0000021f: 	movq	%r14, %rdi
    00000222: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 546
    00000227: 	callq	clock@PLT # Offset: 551
    0000022c: 	movl	iterations(%rip), %ecx
    00000232: 	xorl	%ebp, %ebp
    00000234: 	leaq	DATAat0x381c8(%rip), %r12
    0000023b: 	movq	%rax, start_time(%rip)
    00000242: 	testl	%ecx, %ecx
    00000244: 	jle	.Ltmp1880 # Offset: 580
    00000246: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1883:
    00000250: 	movq	%r13, %rax
    00000253: 	pxor	%xmm0, %xmm0
    00000257: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1881:
    00000260: 	paddd	(%rax), %xmm0
    00000264: 	addq	$0x10, %rax
    00000268: 	cmpq	%rbx, %rax
    0000026b: 	jne	.Ltmp1881 # Offset: 619
    0000026d: 	cvttsd2si	init_value(%rip), %rdx
    00000276: 	movdqa	%xmm0, %xmm1
    0000027a: 	psrldq	$0x8, %xmm1
    0000027f: 	paddd	%xmm1, %xmm0
    00000283: 	movdqa	%xmm0, %xmm1
    00000287: 	psrldq	$0x4, %xmm1
    0000028c: 	imull	$0x1f40, %edx, %edx
    00000292: 	paddd	%xmm1, %xmm0
    00000296: 	movd	%xmm0, %eax
    0000029a: 	cmpl	%eax, %edx
    0000029c: 	je	.Ltmp1882 # Offset: 668
    0000029e: 	movl	current_test(%rip), %edx
    000002a4: 	movq	%r12, %rsi
    000002a7: 	movl	$0x1, %edi
    000002ac: 	xorl	%eax, %eax
    000002ae: 	callq	__printf_chk@PLT # Offset: 686
    000002b3: 	movl	iterations(%rip), %ecx
.Ltmp1882:
    000002b9: 	addl	$0x1, %ebp
    000002bc: 	cmpl	%ecx, %ebp
    000002be: 	jl	.Ltmp1883 # Offset: 702
.Ltmp1880:
    000002c0: 	movq	%r14, %rsi
    000002c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 714
    000002cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002d6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e4: 	je	.Ltmp1884 # Offset: 740
.Ltmp2126:
    000002ea: 	movq	-0x20(%rax), %rbp
    000002ee: 	callq	clock@PLT # Offset: 750
    000002f3: 	pxor	%xmm0, %xmm0
    000002f7: 	movq	%rax, end_time(%rip)
    000002fe: 	movq	%rbp, %rdi
    00000301: 	subq	start_time(%rip), %rax
    00000308: 	cvtsi2sd	%rax, %xmm0
    0000030d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000315: 	callq	_Z13record_resultdPKc # Offset: 789
    0000031a: 	movq	0xe0(%rsp), %rdi
    00000322: 	cmpq	0x20(%rsp), %rdi
    00000327: 	je	.Ltmp1885 # Offset: 807
    00000329: 	movq	0xf0(%rsp), %rax
    00000331: 	leaq	0x1(%rax), %rsi
    00000335: 	callq	_ZdlPvm@PLT # Offset: 821
.Ltmp1885:
    0000033a: 	leaq	DATAat0x381e8(%rip), %rdx
    00000341: 	movq	%r15, %rsi
    00000344: 	movq	%r14, %rdi
    00000347: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 839
    0000034c: 	callq	clock@PLT # Offset: 844
    00000351: 	movl	iterations(%rip), %ecx
    00000357: 	xorl	%ebp, %ebp
    00000359: 	leaq	DATAat0x381c8(%rip), %r12
    00000360: 	movq	%rax, start_time(%rip)
    00000367: 	testl	%ecx, %ecx
    00000369: 	jle	.Ltmp1886 # Offset: 873
    0000036b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1889:
    00000370: 	movq	%r13, %rax
    00000373: 	pxor	%xmm0, %xmm0
    00000377: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1887:
    00000380: 	paddd	(%rax), %xmm0
    00000384: 	addq	$0x10, %rax
    00000388: 	cmpq	%rbx, %rax
    0000038b: 	jne	.Ltmp1887 # Offset: 907
    0000038d: 	cvttsd2si	init_value(%rip), %rdx
    00000396: 	movdqa	%xmm0, %xmm1
    0000039a: 	psrldq	$0x8, %xmm1
    0000039f: 	paddd	%xmm1, %xmm0
    000003a3: 	movdqa	%xmm0, %xmm1
    000003a7: 	psrldq	$0x4, %xmm1
    000003ac: 	imull	$0x1f40, %edx, %edx
    000003b2: 	paddd	%xmm1, %xmm0
    000003b6: 	movd	%xmm0, %eax
    000003ba: 	cmpl	%eax, %edx
    000003bc: 	je	.Ltmp1888 # Offset: 956
    000003be: 	movl	current_test(%rip), %edx
    000003c4: 	movq	%r12, %rsi
    000003c7: 	movl	$0x1, %edi
    000003cc: 	xorl	%eax, %eax
    000003ce: 	callq	__printf_chk@PLT # Offset: 974
    000003d3: 	movl	iterations(%rip), %ecx
.Ltmp1888:
    000003d9: 	addl	$0x1, %ebp
    000003dc: 	cmpl	%ecx, %ebp
    000003de: 	jl	.Ltmp1889 # Offset: 990
.Ltmp1886:
    000003e0: 	movq	%r14, %rsi
    000003e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1002
    000003ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000404: 	je	.Ltmp1890 # Offset: 1028
.Ltmp2125:
    0000040a: 	movq	-0x20(%rax), %rbp
    0000040e: 	callq	clock@PLT # Offset: 1038
    00000413: 	pxor	%xmm0, %xmm0
    00000417: 	movq	%rax, end_time(%rip)
    0000041e: 	movq	%rbp, %rdi
    00000421: 	subq	start_time(%rip), %rax
    00000428: 	cvtsi2sd	%rax, %xmm0
    0000042d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000435: 	callq	_Z13record_resultdPKc # Offset: 1077
    0000043a: 	movq	0xe0(%rsp), %rdi
    00000442: 	cmpq	0x20(%rsp), %rdi
    00000447: 	je	.Ltmp1891 # Offset: 1095
    00000449: 	movq	0xf0(%rsp), %rax
    00000451: 	leaq	0x1(%rax), %rsi
    00000455: 	callq	_ZdlPvm@PLT # Offset: 1109
.Ltmp1891:
    0000045a: 	leaq	DATAat0x381f7(%rip), %rdx
    00000461: 	movq	%r15, %rsi
    00000464: 	movq	%r14, %rdi
    00000467: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1127
    0000046c: 	callq	clock@PLT # Offset: 1132
    00000471: 	movl	iterations(%rip), %ecx
    00000477: 	xorl	%ebp, %ebp
    00000479: 	leaq	DATAat0x381c8(%rip), %r12
    00000480: 	movq	%rax, start_time(%rip)
    00000487: 	testl	%ecx, %ecx
    00000489: 	jle	.Ltmp1892 # Offset: 1161
    0000048b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1895:
    00000490: 	movq	%r13, %rax
    00000493: 	pxor	%xmm0, %xmm0
    00000497: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1893:
    000004a0: 	psubd	(%rax), %xmm0
    000004a4: 	addq	$0x10, %rax
    000004a8: 	cmpq	%rbx, %rax
    000004ab: 	jne	.Ltmp1893 # Offset: 1195
    000004ad: 	cvttsd2si	init_value(%rip), %rdx
    000004b6: 	movdqa	%xmm0, %xmm1
    000004ba: 	psrldq	$0x8, %xmm1
    000004bf: 	paddd	%xmm1, %xmm0
    000004c3: 	movdqa	%xmm0, %xmm1
    000004c7: 	psrldq	$0x4, %xmm1
    000004cc: 	imull	$0xffffe0c0, %edx, %edx
    000004d2: 	paddd	%xmm1, %xmm0
    000004d6: 	movd	%xmm0, %eax
    000004da: 	cmpl	%eax, %edx
    000004dc: 	je	.Ltmp1894 # Offset: 1244
    000004de: 	movl	current_test(%rip), %edx
    000004e4: 	movq	%r12, %rsi
    000004e7: 	movl	$0x1, %edi
    000004ec: 	xorl	%eax, %eax
    000004ee: 	callq	__printf_chk@PLT # Offset: 1262
    000004f3: 	movl	iterations(%rip), %ecx
.Ltmp1894:
    000004f9: 	addl	$0x1, %ebp
    000004fc: 	cmpl	%ecx, %ebp
    000004fe: 	jl	.Ltmp1895 # Offset: 1278
.Ltmp1892:
    00000500: 	movq	%r14, %rsi
    00000503: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000050a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1290
    0000050f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000516: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000051d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000524: 	je	.Ltmp1896 # Offset: 1316
.Ltmp2124:
    0000052a: 	movq	-0x20(%rax), %rbp
    0000052e: 	callq	clock@PLT # Offset: 1326
    00000533: 	pxor	%xmm0, %xmm0
    00000537: 	movq	%rax, end_time(%rip)
    0000053e: 	movq	%rbp, %rdi
    00000541: 	subq	start_time(%rip), %rax
    00000548: 	cvtsi2sd	%rax, %xmm0
    0000054d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000555: 	callq	_Z13record_resultdPKc # Offset: 1365
    0000055a: 	movq	0xe0(%rsp), %rdi
    00000562: 	cmpq	0x20(%rsp), %rdi
    00000567: 	je	.Ltmp1897 # Offset: 1383
    00000569: 	movq	0xf0(%rsp), %rax
    00000571: 	leaq	0x1(%rax), %rsi
    00000575: 	callq	_ZdlPvm@PLT # Offset: 1397
.Ltmp1897:
    0000057a: 	leaq	DATAat0x381ff(%rip), %rdx
    00000581: 	movq	%r15, %rsi
    00000584: 	movq	%r14, %rdi
    00000587: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1415
    0000058c: 	callq	clock@PLT # Offset: 1420
    00000591: 	movl	iterations(%rip), %ecx
    00000597: 	xorl	%ebp, %ebp
    00000599: 	leaq	DATAat0x381c8(%rip), %r12
    000005a0: 	movq	%rax, start_time(%rip)
    000005a7: 	testl	%ecx, %ecx
    000005a9: 	jle	.Ltmp1898 # Offset: 1449
    000005ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1901:
    000005b0: 	movq	%r13, %rax
    000005b3: 	pxor	%xmm0, %xmm0
    000005b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1899:
    000005c0: 	paddd	(%rax), %xmm0
    000005c4: 	addq	$0x10, %rax
    000005c8: 	cmpq	%rbx, %rax
    000005cb: 	jne	.Ltmp1899 # Offset: 1483
    000005cd: 	cvttsd2si	init_value(%rip), %rdx
    000005d6: 	movdqa	%xmm0, %xmm1
    000005da: 	psrldq	$0x8, %xmm1
    000005df: 	paddd	%xmm1, %xmm0
    000005e3: 	movdqa	%xmm0, %xmm1
    000005e7: 	psrldq	$0x4, %xmm1
    000005ec: 	imull	$0x1f40, %edx, %edx
    000005f2: 	paddd	%xmm1, %xmm0
    000005f6: 	movd	%xmm0, %eax
    000005fa: 	cmpl	%eax, %edx
    000005fc: 	je	.Ltmp1900 # Offset: 1532
    000005fe: 	movl	current_test(%rip), %edx
    00000604: 	movq	%r12, %rsi
    00000607: 	movl	$0x1, %edi
    0000060c: 	xorl	%eax, %eax
    0000060e: 	callq	__printf_chk@PLT # Offset: 1550
    00000613: 	movl	iterations(%rip), %ecx
.Ltmp1900:
    00000619: 	addl	$0x1, %ebp
    0000061c: 	cmpl	%ecx, %ebp
    0000061e: 	jl	.Ltmp1901 # Offset: 1566
.Ltmp1898:
    00000620: 	movq	%r14, %rsi
    00000623: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000062a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1578
    0000062f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000636: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000063d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000644: 	je	.Ltmp1902 # Offset: 1604
.Ltmp2123:
    0000064a: 	movq	-0x20(%rax), %rbp
    0000064e: 	callq	clock@PLT # Offset: 1614
    00000653: 	pxor	%xmm0, %xmm0
    00000657: 	movq	%rax, end_time(%rip)
    0000065e: 	movq	%rbp, %rdi
    00000661: 	subq	start_time(%rip), %rax
    00000668: 	cvtsi2sd	%rax, %xmm0
    0000066d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000675: 	callq	_Z13record_resultdPKc # Offset: 1653
    0000067a: 	movq	0xe0(%rsp), %rdi
    00000682: 	cmpq	0x20(%rsp), %rdi
    00000687: 	je	.Ltmp1903 # Offset: 1671
    00000689: 	movq	0xf0(%rsp), %rax
    00000691: 	leaq	0x1(%rax), %rsi
    00000695: 	callq	_ZdlPvm@PLT # Offset: 1685
.Ltmp1903:
    0000069a: 	leaq	DATAat0x3820d(%rip), %rdx
    000006a1: 	movq	%r15, %rsi
    000006a4: 	movq	%r14, %rdi
    000006a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1703
    000006ac: 	callq	clock@PLT # Offset: 1708
    000006b1: 	movl	iterations(%rip), %ecx
    000006b7: 	xorl	%ebp, %ebp
    000006b9: 	leaq	DATAat0x381c8(%rip), %r12
    000006c0: 	movq	%rax, start_time(%rip)
    000006c7: 	testl	%ecx, %ecx
    000006c9: 	jle	.Ltmp1904 # Offset: 1737
    000006cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1907:
    000006d0: 	movq	%r13, %rax
    000006d3: 	pxor	%xmm0, %xmm0
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1905:
    000006e0: 	psubd	(%rax), %xmm0
    000006e4: 	addq	$0x10, %rax
    000006e8: 	cmpq	%rbx, %rax
    000006eb: 	jne	.Ltmp1905 # Offset: 1771
    000006ed: 	cvttsd2si	init_value(%rip), %rdx
    000006f6: 	movdqa	%xmm0, %xmm1
    000006fa: 	psrldq	$0x8, %xmm1
    000006ff: 	paddd	%xmm1, %xmm0
    00000703: 	movdqa	%xmm0, %xmm1
    00000707: 	psrldq	$0x4, %xmm1
    0000070c: 	imull	$0xffffe0c0, %edx, %edx
    00000712: 	paddd	%xmm1, %xmm0
    00000716: 	movd	%xmm0, %eax
    0000071a: 	cmpl	%eax, %edx
    0000071c: 	je	.Ltmp1906 # Offset: 1820
    0000071e: 	movl	current_test(%rip), %edx
    00000724: 	movq	%r12, %rsi
    00000727: 	movl	$0x1, %edi
    0000072c: 	xorl	%eax, %eax
    0000072e: 	callq	__printf_chk@PLT # Offset: 1838
    00000733: 	movl	iterations(%rip), %ecx
.Ltmp1906:
    00000739: 	addl	$0x1, %ebp
    0000073c: 	cmpl	%ecx, %ebp
    0000073e: 	jl	.Ltmp1907 # Offset: 1854
.Ltmp1904:
    00000740: 	movq	%r14, %rsi
    00000743: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000074a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1866
    0000074f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000756: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000075d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000764: 	je	.Ltmp1908 # Offset: 1892
.Ltmp2122:
    0000076a: 	movq	-0x20(%rax), %rbp
    0000076e: 	callq	clock@PLT # Offset: 1902
    00000773: 	pxor	%xmm0, %xmm0
    00000777: 	movq	%rax, end_time(%rip)
    0000077e: 	movq	%rbp, %rdi
    00000781: 	subq	start_time(%rip), %rax
    00000788: 	cvtsi2sd	%rax, %xmm0
    0000078d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000795: 	callq	_Z13record_resultdPKc # Offset: 1941
    0000079a: 	movq	0xe0(%rsp), %rdi
    000007a2: 	cmpq	0x20(%rsp), %rdi
    000007a7: 	je	.Ltmp1909 # Offset: 1959
    000007a9: 	movq	0xf0(%rsp), %rax
    000007b1: 	leaq	0x1(%rax), %rsi
    000007b5: 	callq	_ZdlPvm@PLT # Offset: 1973
.Ltmp1909:
    000007ba: 	leaq	DATAat0x38219(%rip), %rdx
    000007c1: 	movq	%r15, %rsi
    000007c4: 	movq	%r14, %rdi
    000007c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1991
    000007cc: 	callq	clock@PLT # Offset: 1996
    000007d1: 	movl	iterations(%rip), %ecx
    000007d7: 	xorl	%ebp, %ebp
    000007d9: 	leaq	DATAat0x381c8(%rip), %r12
    000007e0: 	movq	%rax, start_time(%rip)
    000007e7: 	testl	%ecx, %ecx
    000007e9: 	jle	.Ltmp1910 # Offset: 2025
    000007eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1913:
    000007f0: 	movq	%r13, %rax
    000007f3: 	pxor	%xmm0, %xmm0
    000007f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1911:
    00000800: 	paddd	(%rax), %xmm0
    00000804: 	addq	$0x10, %rax
    00000808: 	cmpq	%rbx, %rax
    0000080b: 	jne	.Ltmp1911 # Offset: 2059
    0000080d: 	cvttsd2si	init_value(%rip), %rdx
    00000816: 	movdqa	%xmm0, %xmm1
    0000081a: 	psrldq	$0x8, %xmm1
    0000081f: 	paddd	%xmm1, %xmm0
    00000823: 	movdqa	%xmm0, %xmm1
    00000827: 	psrldq	$0x4, %xmm1
    0000082c: 	imull	$0x1f40, %edx, %edx
    00000832: 	paddd	%xmm1, %xmm0
    00000836: 	movd	%xmm0, %eax
    0000083a: 	cmpl	%eax, %edx
    0000083c: 	je	.Ltmp1912 # Offset: 2108
    0000083e: 	movl	current_test(%rip), %edx
    00000844: 	movq	%r12, %rsi
    00000847: 	movl	$0x1, %edi
    0000084c: 	xorl	%eax, %eax
    0000084e: 	callq	__printf_chk@PLT # Offset: 2126
    00000853: 	movl	iterations(%rip), %ecx
.Ltmp1912:
    00000859: 	addl	$0x1, %ebp
    0000085c: 	cmpl	%ecx, %ebp
    0000085e: 	jl	.Ltmp1913 # Offset: 2142
.Ltmp1910:
    00000860: 	movq	%r14, %rsi
    00000863: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000086a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2154
    0000086f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000876: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000087d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000884: 	je	.Ltmp1914 # Offset: 2180
.Ltmp2121:
    0000088a: 	movq	-0x20(%rax), %rbp
    0000088e: 	callq	clock@PLT # Offset: 2190
    00000893: 	pxor	%xmm0, %xmm0
    00000897: 	movq	%rax, end_time(%rip)
    0000089e: 	movq	%rbp, %rdi
    000008a1: 	subq	start_time(%rip), %rax
    000008a8: 	cvtsi2sd	%rax, %xmm0
    000008ad: 	divsd	DATAat0x385e0(%rip), %xmm0
    000008b5: 	callq	_Z13record_resultdPKc # Offset: 2229
    000008ba: 	movq	0xe0(%rsp), %rdi
    000008c2: 	cmpq	0x20(%rsp), %rdi
    000008c7: 	je	.Ltmp1915 # Offset: 2247
    000008c9: 	movq	0xf0(%rsp), %rax
    000008d1: 	leaq	0x1(%rax), %rsi
    000008d5: 	callq	_ZdlPvm@PLT # Offset: 2261
.Ltmp1915:
    000008da: 	leaq	DATAat0x38224(%rip), %rdx
    000008e1: 	movq	%r15, %rsi
    000008e4: 	movq	%r14, %rdi
    000008e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2279
    000008ec: 	callq	clock@PLT # Offset: 2284
    000008f1: 	movl	iterations(%rip), %ecx
    000008f7: 	xorl	%ebp, %ebp
    000008f9: 	leaq	DATAat0x381c8(%rip), %r12
    00000900: 	movq	%rax, start_time(%rip)
    00000907: 	testl	%ecx, %ecx
    00000909: 	jle	.Ltmp1916 # Offset: 2313
    0000090b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1919:
    00000910: 	movq	%r13, %rax
    00000913: 	pxor	%xmm0, %xmm0
    00000917: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1917:
    00000920: 	paddd	(%rax), %xmm0
    00000924: 	addq	$0x10, %rax
    00000928: 	cmpq	%rbx, %rax
    0000092b: 	jne	.Ltmp1917 # Offset: 2347
    0000092d: 	cvttsd2si	init_value(%rip), %rdx
    00000936: 	movdqa	%xmm0, %xmm1
    0000093a: 	psrldq	$0x8, %xmm1
    0000093f: 	paddd	%xmm1, %xmm0
    00000943: 	movdqa	%xmm0, %xmm1
    00000947: 	psrldq	$0x4, %xmm1
    0000094c: 	imull	$0x1f40, %edx, %edx
    00000952: 	paddd	%xmm1, %xmm0
    00000956: 	movd	%xmm0, %eax
    0000095a: 	cmpl	%eax, %edx
    0000095c: 	je	.Ltmp1918 # Offset: 2396
    0000095e: 	movl	current_test(%rip), %edx
    00000964: 	movq	%r12, %rsi
    00000967: 	movl	$0x1, %edi
    0000096c: 	xorl	%eax, %eax
    0000096e: 	callq	__printf_chk@PLT # Offset: 2414
    00000973: 	movl	iterations(%rip), %ecx
.Ltmp1918:
    00000979: 	addl	$0x1, %ebp
    0000097c: 	cmpl	%ecx, %ebp
    0000097e: 	jl	.Ltmp1919 # Offset: 2430
.Ltmp1916:
    00000980: 	movq	%r14, %rsi
    00000983: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000098a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2442
    0000098f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000996: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000099d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009a4: 	je	.Ltmp1920 # Offset: 2468
.Ltmp2120:
    000009aa: 	movq	-0x20(%rax), %rbp
    000009ae: 	callq	clock@PLT # Offset: 2478
    000009b3: 	pxor	%xmm0, %xmm0
    000009b7: 	movq	%rax, end_time(%rip)
    000009be: 	movq	%rbp, %rdi
    000009c1: 	subq	start_time(%rip), %rax
    000009c8: 	cvtsi2sd	%rax, %xmm0
    000009cd: 	divsd	DATAat0x385e0(%rip), %xmm0
    000009d5: 	callq	_Z13record_resultdPKc # Offset: 2517
    000009da: 	movq	0xe0(%rsp), %rdi
    000009e2: 	cmpq	0x20(%rsp), %rdi
    000009e7: 	je	.Ltmp1921 # Offset: 2535
    000009e9: 	movq	0xf0(%rsp), %rax
    000009f1: 	leaq	0x1(%rax), %rsi
    000009f5: 	callq	_ZdlPvm@PLT # Offset: 2549
.Ltmp1921:
    000009fa: 	leaq	DATAat0x38233(%rip), %rdx
    00000a01: 	movq	%r15, %rsi
    00000a04: 	movq	%r14, %rdi
    00000a07: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2567
    00000a0c: 	callq	clock@PLT # Offset: 2572
    00000a11: 	movl	iterations(%rip), %ecx
    00000a17: 	xorl	%ebp, %ebp
    00000a19: 	leaq	DATAat0x381c8(%rip), %r12
    00000a20: 	movq	%rax, start_time(%rip)
    00000a27: 	testl	%ecx, %ecx
    00000a29: 	jle	.Ltmp1922 # Offset: 2601
    00000a2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1925:
    00000a30: 	movq	%r13, %rax
    00000a33: 	pxor	%xmm0, %xmm0
    00000a37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1923:
    00000a40: 	paddd	(%rax), %xmm0
    00000a44: 	addq	$0x10, %rax
    00000a48: 	cmpq	%rbx, %rax
    00000a4b: 	jne	.Ltmp1923 # Offset: 2635
    00000a4d: 	cvttsd2si	init_value(%rip), %rdx
    00000a56: 	movdqa	%xmm0, %xmm1
    00000a5a: 	psrldq	$0x8, %xmm1
    00000a5f: 	paddd	%xmm1, %xmm0
    00000a63: 	movdqa	%xmm0, %xmm1
    00000a67: 	psrldq	$0x4, %xmm1
    00000a6c: 	imull	$0x1f40, %edx, %edx
    00000a72: 	paddd	%xmm1, %xmm0
    00000a76: 	movd	%xmm0, %eax
    00000a7a: 	cmpl	%eax, %edx
    00000a7c: 	je	.Ltmp1924 # Offset: 2684
    00000a7e: 	movl	current_test(%rip), %edx
    00000a84: 	movq	%r12, %rsi
    00000a87: 	movl	$0x1, %edi
    00000a8c: 	xorl	%eax, %eax
    00000a8e: 	callq	__printf_chk@PLT # Offset: 2702
    00000a93: 	movl	iterations(%rip), %ecx
.Ltmp1924:
    00000a99: 	addl	$0x1, %ebp
    00000a9c: 	cmpl	%ecx, %ebp
    00000a9e: 	jl	.Ltmp1925 # Offset: 2718
.Ltmp1922:
    00000aa0: 	movq	%r14, %rsi
    00000aa3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000aaa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2730
    00000aaf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ab6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000abd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ac4: 	je	.Ltmp1926 # Offset: 2756
.Ltmp2119:
    00000aca: 	movq	-0x20(%rax), %rbp
    00000ace: 	callq	clock@PLT # Offset: 2766
    00000ad3: 	pxor	%xmm0, %xmm0
    00000ad7: 	movq	%rax, end_time(%rip)
    00000ade: 	movq	%rbp, %rdi
    00000ae1: 	subq	start_time(%rip), %rax
    00000ae8: 	cvtsi2sd	%rax, %xmm0
    00000aed: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000af5: 	callq	_Z13record_resultdPKc # Offset: 2805
    00000afa: 	movq	0xe0(%rsp), %rdi
    00000b02: 	cmpq	0x20(%rsp), %rdi
    00000b07: 	je	.Ltmp1927 # Offset: 2823
    00000b09: 	movq	0xf0(%rsp), %rax
    00000b11: 	leaq	0x1(%rax), %rsi
    00000b15: 	callq	_ZdlPvm@PLT # Offset: 2837
.Ltmp1927:
    00000b1a: 	leaq	DATAat0x3823d(%rip), %rdx
    00000b21: 	movq	%r15, %rsi
    00000b24: 	movq	%r14, %rdi
    00000b27: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2855
    00000b2c: 	callq	clock@PLT # Offset: 2860
    00000b31: 	movl	iterations(%rip), %ecx
    00000b37: 	xorl	%ebp, %ebp
    00000b39: 	leaq	DATAat0x381c8(%rip), %r12
    00000b40: 	movq	%rax, start_time(%rip)
    00000b47: 	testl	%ecx, %ecx
    00000b49: 	jle	.Ltmp1928 # Offset: 2889
    00000b4b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1931:
    00000b50: 	movq	%r13, %rax
    00000b53: 	pxor	%xmm0, %xmm0
    00000b57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1929:
    00000b60: 	paddd	(%rax), %xmm0
    00000b64: 	addq	$0x10, %rax
    00000b68: 	cmpq	%rbx, %rax
    00000b6b: 	jne	.Ltmp1929 # Offset: 2923
    00000b6d: 	cvttsd2si	init_value(%rip), %rdx
    00000b76: 	movdqa	%xmm0, %xmm1
    00000b7a: 	psrldq	$0x8, %xmm1
    00000b7f: 	paddd	%xmm1, %xmm0
    00000b83: 	movdqa	%xmm0, %xmm1
    00000b87: 	psrldq	$0x4, %xmm1
    00000b8c: 	imull	$0x1f40, %edx, %edx
    00000b92: 	paddd	%xmm1, %xmm0
    00000b96: 	movd	%xmm0, %eax
    00000b9a: 	cmpl	%eax, %edx
    00000b9c: 	je	.Ltmp1930 # Offset: 2972
    00000b9e: 	movl	current_test(%rip), %edx
    00000ba4: 	movq	%r12, %rsi
    00000ba7: 	movl	$0x1, %edi
    00000bac: 	xorl	%eax, %eax
    00000bae: 	callq	__printf_chk@PLT # Offset: 2990
    00000bb3: 	movl	iterations(%rip), %ecx
.Ltmp1930:
    00000bb9: 	addl	$0x1, %ebp
    00000bbc: 	cmpl	%ecx, %ebp
    00000bbe: 	jl	.Ltmp1931 # Offset: 3006
.Ltmp1928:
    00000bc0: 	movq	%r14, %rsi
    00000bc3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000bca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3018
    00000bcf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bd6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bdd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000be4: 	je	.Ltmp1932 # Offset: 3044
.Ltmp2118:
    00000bea: 	movq	-0x20(%rax), %rbp
    00000bee: 	callq	clock@PLT # Offset: 3054
    00000bf3: 	pxor	%xmm0, %xmm0
    00000bf7: 	movq	%rax, end_time(%rip)
    00000bfe: 	movq	%rbp, %rdi
    00000c01: 	subq	start_time(%rip), %rax
    00000c08: 	cvtsi2sd	%rax, %xmm0
    00000c0d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c15: 	callq	_Z13record_resultdPKc # Offset: 3093
    00000c1a: 	movq	0xe0(%rsp), %rdi
    00000c22: 	cmpq	0x20(%rsp), %rdi
    00000c27: 	je	.Ltmp1933 # Offset: 3111
    00000c29: 	movq	0xf0(%rsp), %rax
    00000c31: 	leaq	0x1(%rax), %rsi
    00000c35: 	callq	_ZdlPvm@PLT # Offset: 3125
.Ltmp1933:
    00000c3a: 	leaq	DATAat0x38246(%rip), %rdx
    00000c41: 	movq	%r15, %rsi
    00000c44: 	movq	%r14, %rdi
    00000c47: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3143
    00000c4c: 	callq	clock@PLT # Offset: 3148
    00000c51: 	movl	iterations(%rip), %ecx
    00000c57: 	xorl	%ebp, %ebp
    00000c59: 	leaq	DATAat0x381c8(%rip), %r12
    00000c60: 	movq	%rax, start_time(%rip)
    00000c67: 	testl	%ecx, %ecx
    00000c69: 	jle	.Ltmp1934 # Offset: 3177
    00000c6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1937:
    00000c70: 	movq	%r13, %rax
    00000c73: 	pxor	%xmm0, %xmm0
    00000c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1935:
    00000c80: 	paddd	(%rax), %xmm0
    00000c84: 	addq	$0x10, %rax
    00000c88: 	cmpq	%rbx, %rax
    00000c8b: 	jne	.Ltmp1935 # Offset: 3211
    00000c8d: 	cvttsd2si	init_value(%rip), %rdx
    00000c96: 	movdqa	%xmm0, %xmm1
    00000c9a: 	psrldq	$0x8, %xmm1
    00000c9f: 	paddd	%xmm1, %xmm0
    00000ca3: 	movdqa	%xmm0, %xmm1
    00000ca7: 	psrldq	$0x4, %xmm1
    00000cac: 	imull	$0x1f40, %edx, %edx
    00000cb2: 	paddd	%xmm1, %xmm0
    00000cb6: 	movd	%xmm0, %eax
    00000cba: 	cmpl	%eax, %edx
    00000cbc: 	je	.Ltmp1936 # Offset: 3260
    00000cbe: 	movl	current_test(%rip), %edx
    00000cc4: 	movq	%r12, %rsi
    00000cc7: 	movl	$0x1, %edi
    00000ccc: 	xorl	%eax, %eax
    00000cce: 	callq	__printf_chk@PLT # Offset: 3278
    00000cd3: 	movl	iterations(%rip), %ecx
.Ltmp1936:
    00000cd9: 	addl	$0x1, %ebp
    00000cdc: 	cmpl	%ecx, %ebp
    00000cde: 	jl	.Ltmp1937 # Offset: 3294
.Ltmp1934:
    00000ce0: 	movq	%r14, %rsi
    00000ce3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000cea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3306
    00000cef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cf6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cfd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d04: 	je	.Ltmp1938 # Offset: 3332
.Ltmp2117:
    00000d0a: 	movq	-0x20(%rax), %rbp
    00000d0e: 	callq	clock@PLT # Offset: 3342
    00000d13: 	pxor	%xmm0, %xmm0
    00000d17: 	movq	%rax, end_time(%rip)
    00000d1e: 	movq	%rbp, %rdi
    00000d21: 	subq	start_time(%rip), %rax
    00000d28: 	cvtsi2sd	%rax, %xmm0
    00000d2d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000d35: 	callq	_Z13record_resultdPKc # Offset: 3381
    00000d3a: 	movq	0xe0(%rsp), %rdi
    00000d42: 	cmpq	0x20(%rsp), %rdi
    00000d47: 	je	.Ltmp1939 # Offset: 3399
    00000d49: 	movq	0xf0(%rsp), %rax
    00000d51: 	leaq	0x1(%rax), %rsi
    00000d55: 	callq	_ZdlPvm@PLT # Offset: 3413
.Ltmp1939:
    00000d5a: 	leaq	DATAat0x3824f(%rip), %rdx
    00000d61: 	movq	%r15, %rsi
    00000d64: 	movq	%r14, %rdi
    00000d67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3431
    00000d6c: 	callq	clock@PLT # Offset: 3436
    00000d71: 	movl	iterations(%rip), %ecx
    00000d77: 	xorl	%ebp, %ebp
    00000d79: 	leaq	DATAat0x381c8(%rip), %r12
    00000d80: 	movq	%rax, start_time(%rip)
    00000d87: 	testl	%ecx, %ecx
    00000d89: 	jle	.Ltmp1940 # Offset: 3465
    00000d8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1943:
    00000d90: 	movq	%r13, %rax
    00000d93: 	pxor	%xmm0, %xmm0
    00000d97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1941:
    00000da0: 	paddd	(%rax), %xmm0
    00000da4: 	addq	$0x10, %rax
    00000da8: 	cmpq	%rbx, %rax
    00000dab: 	jne	.Ltmp1941 # Offset: 3499
    00000dad: 	cvttsd2si	init_value(%rip), %rdx
    00000db6: 	movdqa	%xmm0, %xmm1
    00000dba: 	psrldq	$0x8, %xmm1
    00000dbf: 	paddd	%xmm1, %xmm0
    00000dc3: 	movdqa	%xmm0, %xmm1
    00000dc7: 	psrldq	$0x4, %xmm1
    00000dcc: 	imull	$0x1f40, %edx, %edx
    00000dd2: 	paddd	%xmm1, %xmm0
    00000dd6: 	movd	%xmm0, %eax
    00000dda: 	cmpl	%eax, %edx
    00000ddc: 	je	.Ltmp1942 # Offset: 3548
    00000dde: 	movl	current_test(%rip), %edx
    00000de4: 	movq	%r12, %rsi
    00000de7: 	movl	$0x1, %edi
    00000dec: 	xorl	%eax, %eax
    00000dee: 	callq	__printf_chk@PLT # Offset: 3566
    00000df3: 	movl	iterations(%rip), %ecx
.Ltmp1942:
    00000df9: 	addl	$0x1, %ebp
    00000dfc: 	cmpl	%ecx, %ebp
    00000dfe: 	jl	.Ltmp1943 # Offset: 3582
.Ltmp1940:
    00000e00: 	movq	%r14, %rsi
    00000e03: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e0a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3594
    00000e0f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e16: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e1d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e24: 	je	.Ltmp1944 # Offset: 3620
.Ltmp2116:
    00000e2a: 	movq	-0x20(%rax), %rbp
    00000e2e: 	callq	clock@PLT # Offset: 3630
    00000e33: 	pxor	%xmm0, %xmm0
    00000e37: 	movq	%rax, end_time(%rip)
    00000e3e: 	movq	%rbp, %rdi
    00000e41: 	subq	start_time(%rip), %rax
    00000e48: 	cvtsi2sd	%rax, %xmm0
    00000e4d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e55: 	callq	_Z13record_resultdPKc # Offset: 3669
    00000e5a: 	movq	0xe0(%rsp), %rdi
    00000e62: 	cmpq	0x20(%rsp), %rdi
    00000e67: 	je	.Ltmp1945 # Offset: 3687
    00000e69: 	movq	0xf0(%rsp), %rax
    00000e71: 	leaq	0x1(%rax), %rsi
    00000e75: 	callq	_ZdlPvm@PLT # Offset: 3701
.Ltmp1945:
    00000e7a: 	leaq	DATAat0x38259(%rip), %rdx
    00000e81: 	movq	%r15, %rsi
    00000e84: 	movq	%r14, %rdi
    00000e87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3719
    00000e8c: 	callq	clock@PLT # Offset: 3724
    00000e91: 	movl	iterations(%rip), %ecx
    00000e97: 	xorl	%ebp, %ebp
    00000e99: 	leaq	DATAat0x381c8(%rip), %r12
    00000ea0: 	movq	%rax, start_time(%rip)
    00000ea7: 	testl	%ecx, %ecx
    00000ea9: 	jle	.Ltmp1946 # Offset: 3753
    00000eab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1949:
    00000eb0: 	movq	%r13, %rax
    00000eb3: 	pxor	%xmm0, %xmm0
    00000eb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1947:
    00000ec0: 	paddd	(%rax), %xmm0
    00000ec4: 	addq	$0x10, %rax
    00000ec8: 	cmpq	%rbx, %rax
    00000ecb: 	jne	.Ltmp1947 # Offset: 3787
    00000ecd: 	cvttsd2si	init_value(%rip), %rdx
    00000ed6: 	movdqa	%xmm0, %xmm1
    00000eda: 	psrldq	$0x8, %xmm1
    00000edf: 	paddd	%xmm1, %xmm0
    00000ee3: 	movdqa	%xmm0, %xmm1
    00000ee7: 	psrldq	$0x4, %xmm1
    00000eec: 	imull	$0x1f40, %edx, %edx
    00000ef2: 	paddd	%xmm1, %xmm0
    00000ef6: 	movd	%xmm0, %eax
    00000efa: 	cmpl	%eax, %edx
    00000efc: 	je	.Ltmp1948 # Offset: 3836
    00000efe: 	movl	current_test(%rip), %edx
    00000f04: 	movq	%r12, %rsi
    00000f07: 	movl	$0x1, %edi
    00000f0c: 	xorl	%eax, %eax
    00000f0e: 	callq	__printf_chk@PLT # Offset: 3854
    00000f13: 	movl	iterations(%rip), %ecx
.Ltmp1948:
    00000f19: 	addl	$0x1, %ebp
    00000f1c: 	cmpl	%ecx, %ebp
    00000f1e: 	jl	.Ltmp1949 # Offset: 3870
.Ltmp1946:
    00000f20: 	movq	%r14, %rsi
    00000f23: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f2a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3882
    00000f2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f36: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f3d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f44: 	je	.Ltmp1950 # Offset: 3908
.Ltmp2115:
    00000f4a: 	movq	-0x20(%rax), %rbp
    00000f4e: 	callq	clock@PLT # Offset: 3918
    00000f53: 	pxor	%xmm0, %xmm0
    00000f57: 	movq	%rax, end_time(%rip)
    00000f5e: 	movq	%rbp, %rdi
    00000f61: 	subq	start_time(%rip), %rax
    00000f68: 	cvtsi2sd	%rax, %xmm0
    00000f6d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f75: 	callq	_Z13record_resultdPKc # Offset: 3957
    00000f7a: 	movq	0xe0(%rsp), %rdi
    00000f82: 	cmpq	0x20(%rsp), %rdi
    00000f87: 	je	.Ltmp1951 # Offset: 3975
    00000f89: 	movq	0xf0(%rsp), %rax
    00000f91: 	leaq	0x1(%rax), %rsi
    00000f95: 	callq	_ZdlPvm@PLT # Offset: 3989
.Ltmp1951:
    00000f9a: 	leaq	DATAat0x38266(%rip), %rdx
    00000fa1: 	movq	%r15, %rsi
    00000fa4: 	movq	%r14, %rdi
    00000fa7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4007
    00000fac: 	callq	clock@PLT # Offset: 4012
    00000fb1: 	movl	iterations(%rip), %ecx
    00000fb7: 	xorl	%ebp, %ebp
    00000fb9: 	leaq	DATAat0x381c8(%rip), %r12
    00000fc0: 	movq	%rax, start_time(%rip)
    00000fc7: 	testl	%ecx, %ecx
    00000fc9: 	jle	.Ltmp1952 # Offset: 4041
    00000fcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1955:
    00000fd0: 	movq	%r13, %rax
    00000fd3: 	pxor	%xmm0, %xmm0
    00000fd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1953:
    00000fe0: 	paddd	(%rax), %xmm0
    00000fe4: 	addq	$0x10, %rax
    00000fe8: 	cmpq	%rbx, %rax
    00000feb: 	jne	.Ltmp1953 # Offset: 4075
    00000fed: 	cvttsd2si	init_value(%rip), %rdx
    00000ff6: 	movdqa	%xmm0, %xmm1
    00000ffa: 	psrldq	$0x8, %xmm1
    00000fff: 	paddd	%xmm1, %xmm0
    00001003: 	movdqa	%xmm0, %xmm1
    00001007: 	psrldq	$0x4, %xmm1
    0000100c: 	imull	$0x1f40, %edx, %edx
    00001012: 	paddd	%xmm1, %xmm0
    00001016: 	movd	%xmm0, %eax
    0000101a: 	cmpl	%eax, %edx
    0000101c: 	je	.Ltmp1954 # Offset: 4124
    0000101e: 	movl	current_test(%rip), %edx
    00001024: 	movq	%r12, %rsi
    00001027: 	movl	$0x1, %edi
    0000102c: 	xorl	%eax, %eax
    0000102e: 	callq	__printf_chk@PLT # Offset: 4142
    00001033: 	movl	iterations(%rip), %ecx
.Ltmp1954:
    00001039: 	addl	$0x1, %ebp
    0000103c: 	cmpl	%ecx, %ebp
    0000103e: 	jl	.Ltmp1955 # Offset: 4158
.Ltmp1952:
    00001040: 	movq	%r14, %rsi
    00001043: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000104a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4170
    0000104f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001056: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000105d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001064: 	je	.Ltmp1956 # Offset: 4196
.Ltmp2114:
    0000106a: 	movq	-0x20(%rax), %rbp
    0000106e: 	callq	clock@PLT # Offset: 4206
    00001073: 	pxor	%xmm0, %xmm0
    00001077: 	movq	%rax, end_time(%rip)
    0000107e: 	movq	%rbp, %rdi
    00001081: 	subq	start_time(%rip), %rax
    00001088: 	cvtsi2sd	%rax, %xmm0
    0000108d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001095: 	callq	_Z13record_resultdPKc # Offset: 4245
    0000109a: 	movq	0xe0(%rsp), %rdi
    000010a2: 	cmpq	0x20(%rsp), %rdi
    000010a7: 	je	.Ltmp1957 # Offset: 4263
    000010a9: 	movq	0xf0(%rsp), %rax
    000010b1: 	leaq	0x1(%rax), %rsi
    000010b5: 	callq	_ZdlPvm@PLT # Offset: 4277
.Ltmp1957:
    000010ba: 	leaq	0x80(%rsp), %rdi
    000010c2: 	leaq	DATAat0x38275(%rip), %rdx
    000010c9: 	movq	%r15, %rsi
    000010cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4300
    000010d1: 	movl	iterations(%rip), %esi
    000010d7: 	movq	0x80(%rsp), %rdi
    000010df: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4319
    000010e4: 	leaq	DATAat0x381e2(%rip), %rdx
    000010eb: 	movq	%r15, %rsi
    000010ee: 	movq	%r14, %rdi
    000010f1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4337
    000010f6: 	callq	clock@PLT # Offset: 4342
    000010fb: 	movq	%r14, %rsi
    000010fe: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001105: 	movq	%rax, start_time(%rip)
    0000110c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4364
    00001111: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001118: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000111f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001126: 	je	.Ltmp1958 # Offset: 4390
.Ltmp2113:
    0000112c: 	movq	-0x20(%rax), %rbp
    00001130: 	callq	clock@PLT # Offset: 4400
    00001135: 	pxor	%xmm0, %xmm0
    00001139: 	movq	%rax, end_time(%rip)
    00001140: 	movq	%rbp, %rdi
    00001143: 	subq	start_time(%rip), %rax
    0000114a: 	cvtsi2sd	%rax, %xmm0
    0000114f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001157: 	callq	_Z13record_resultdPKc # Offset: 4439
    0000115c: 	movq	0xe0(%rsp), %rdi
    00001164: 	cmpq	0x20(%rsp), %rdi
    00001169: 	je	.Ltmp1959 # Offset: 4457
    0000116b: 	movq	0xf0(%rsp), %rax
    00001173: 	leaq	0x1(%rax), %rsi
    00001177: 	callq	_ZdlPvm@PLT # Offset: 4471
.Ltmp1959:
    0000117c: 	leaq	DATAat0x3828f(%rip), %rdx
    00001183: 	movq	%r15, %rsi
    00001186: 	movq	%r14, %rdi
    00001189: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4489
    0000118e: 	callq	clock@PLT # Offset: 4494
    00001193: 	movq	%r14, %rsi
    00001196: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000119d: 	movq	%rax, start_time(%rip)
    000011a4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4516
    000011a9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011b0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011be: 	je	.Ltmp1960 # Offset: 4542
.Ltmp2112:
    000011c4: 	movq	-0x20(%rax), %rbp
    000011c8: 	callq	clock@PLT # Offset: 4552
    000011cd: 	pxor	%xmm0, %xmm0
    000011d1: 	movq	%rax, end_time(%rip)
    000011d8: 	movq	%rbp, %rdi
    000011db: 	subq	start_time(%rip), %rax
    000011e2: 	cvtsi2sd	%rax, %xmm0
    000011e7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000011ef: 	callq	_Z13record_resultdPKc # Offset: 4591
    000011f4: 	movq	0xe0(%rsp), %rdi
    000011fc: 	cmpq	0x20(%rsp), %rdi
    00001201: 	je	.Ltmp1961 # Offset: 4609
    00001203: 	movq	0xf0(%rsp), %rax
    0000120b: 	leaq	0x1(%rax), %rsi
    0000120f: 	callq	_ZdlPvm@PLT # Offset: 4623
.Ltmp1961:
    00001214: 	leaq	DATAat0x3829b(%rip), %rdx
    0000121b: 	movq	%r15, %rsi
    0000121e: 	movq	%r14, %rdi
    00001221: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4641
    00001226: 	callq	clock@PLT # Offset: 4646
    0000122b: 	movq	%r14, %rsi
    0000122e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001235: 	movq	%rax, start_time(%rip)
    0000123c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4668
    00001241: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001248: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000124f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001256: 	je	.Ltmp1962 # Offset: 4694
.Ltmp2111:
    0000125c: 	movq	-0x20(%rax), %rbp
    00001260: 	callq	clock@PLT # Offset: 4704
    00001265: 	pxor	%xmm0, %xmm0
    00001269: 	movq	%rax, end_time(%rip)
    00001270: 	movq	%rbp, %rdi
    00001273: 	subq	start_time(%rip), %rax
    0000127a: 	cvtsi2sd	%rax, %xmm0
    0000127f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001287: 	callq	_Z13record_resultdPKc # Offset: 4743
    0000128c: 	movq	0xe0(%rsp), %rdi
    00001294: 	cmpq	0x20(%rsp), %rdi
    00001299: 	je	.Ltmp1963 # Offset: 4761
    0000129b: 	movq	0xf0(%rsp), %rax
    000012a3: 	leaq	0x1(%rax), %rsi
    000012a7: 	callq	_ZdlPvm@PLT # Offset: 4775
.Ltmp1963:
    000012ac: 	leaq	DATAat0x382aa(%rip), %rdx
    000012b3: 	movq	%r15, %rsi
    000012b6: 	movq	%r14, %rdi
    000012b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4793
    000012be: 	callq	clock@PLT # Offset: 4798
    000012c3: 	movq	%r14, %rsi
    000012c6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012cd: 	movq	%rax, start_time(%rip)
    000012d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4820
    000012d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012e0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012e7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012ee: 	je	.Ltmp1964 # Offset: 4846
.Ltmp2110:
    000012f4: 	movq	-0x20(%rax), %rbp
    000012f8: 	callq	clock@PLT # Offset: 4856
    000012fd: 	pxor	%xmm0, %xmm0
    00001301: 	movq	%rax, end_time(%rip)
    00001308: 	movq	%rbp, %rdi
    0000130b: 	subq	start_time(%rip), %rax
    00001312: 	cvtsi2sd	%rax, %xmm0
    00001317: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000131f: 	callq	_Z13record_resultdPKc # Offset: 4895
    00001324: 	movq	0xe0(%rsp), %rdi
    0000132c: 	cmpq	0x20(%rsp), %rdi
    00001331: 	je	.Ltmp1965 # Offset: 4913
    00001333: 	movq	0xf0(%rsp), %rax
    0000133b: 	leaq	0x1(%rax), %rsi
    0000133f: 	callq	_ZdlPvm@PLT # Offset: 4927
.Ltmp1965:
    00001344: 	leaq	DATAat0x382f3(%rip), %rdx
    0000134b: 	movq	%r15, %rsi
    0000134e: 	movq	%r14, %rdi
    00001351: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4945
    00001356: 	callq	clock@PLT # Offset: 4950
    0000135b: 	movq	%r14, %rsi
    0000135e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001365: 	movq	%rax, start_time(%rip)
    0000136c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4972
    00001371: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001378: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000137f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001386: 	je	.Ltmp1966 # Offset: 4998
.Ltmp2109:
    0000138c: 	movq	-0x20(%rax), %rbp
    00001390: 	callq	clock@PLT # Offset: 5008
    00001395: 	pxor	%xmm0, %xmm0
    00001399: 	movq	%rax, end_time(%rip)
    000013a0: 	movq	%rbp, %rdi
    000013a3: 	subq	start_time(%rip), %rax
    000013aa: 	cvtsi2sd	%rax, %xmm0
    000013af: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013b7: 	callq	_Z13record_resultdPKc # Offset: 5047
    000013bc: 	movq	0xe0(%rsp), %rdi
    000013c4: 	cmpq	0x20(%rsp), %rdi
    000013c9: 	je	.Ltmp1967 # Offset: 5065
    000013cb: 	movq	0xf0(%rsp), %rax
    000013d3: 	leaq	0x1(%rax), %rsi
    000013d7: 	callq	_ZdlPvm@PLT # Offset: 5079
.Ltmp1967:
    000013dc: 	leaq	DATAat0x382b3(%rip), %rdx
    000013e3: 	movq	%r15, %rsi
    000013e6: 	movq	%r14, %rdi
    000013e9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5097
    000013ee: 	callq	clock@PLT # Offset: 5102
    000013f3: 	movq	%r14, %rsi
    000013f6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013fd: 	movq	%rax, start_time(%rip)
    00001404: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5124
    00001409: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001410: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001417: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000141e: 	je	.Ltmp1968 # Offset: 5150
.Ltmp2108:
    00001424: 	movq	-0x20(%rax), %rbp
    00001428: 	callq	clock@PLT # Offset: 5160
    0000142d: 	pxor	%xmm0, %xmm0
    00001431: 	movq	%rax, end_time(%rip)
    00001438: 	movq	%rbp, %rdi
    0000143b: 	subq	start_time(%rip), %rax
    00001442: 	cvtsi2sd	%rax, %xmm0
    00001447: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000144f: 	callq	_Z13record_resultdPKc # Offset: 5199
    00001454: 	movq	0xe0(%rsp), %rdi
    0000145c: 	cmpq	0x20(%rsp), %rdi
    00001461: 	je	.Ltmp1969 # Offset: 5217
    00001463: 	movq	0xf0(%rsp), %rax
    0000146b: 	leaq	0x1(%rax), %rsi
    0000146f: 	callq	_ZdlPvm@PLT # Offset: 5231
.Ltmp1969:
    00001474: 	leaq	DATAat0x382c3(%rip), %rdx
    0000147b: 	movq	%r15, %rsi
    0000147e: 	movq	%r14, %rdi
    00001481: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5249
    00001486: 	callq	clock@PLT # Offset: 5254
    0000148b: 	movq	%r14, %rsi
    0000148e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001495: 	movq	%rax, start_time(%rip)
    0000149c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5276
    000014a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014a8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014b6: 	je	.Ltmp1970 # Offset: 5302
.Ltmp2107:
    000014bc: 	movq	-0x20(%rax), %rbp
    000014c0: 	callq	clock@PLT # Offset: 5312
    000014c5: 	pxor	%xmm0, %xmm0
    000014c9: 	movq	%rax, end_time(%rip)
    000014d0: 	movq	%rbp, %rdi
    000014d3: 	subq	start_time(%rip), %rax
    000014da: 	cvtsi2sd	%rax, %xmm0
    000014df: 	divsd	DATAat0x385e0(%rip), %xmm0
    000014e7: 	callq	_Z13record_resultdPKc # Offset: 5351
    000014ec: 	movq	0xe0(%rsp), %rdi
    000014f4: 	cmpq	0x20(%rsp), %rdi
    000014f9: 	je	.Ltmp1971 # Offset: 5369
    000014fb: 	movq	0xf0(%rsp), %rax
    00001503: 	leaq	0x1(%rax), %rsi
    00001507: 	callq	_ZdlPvm@PLT # Offset: 5383
.Ltmp1971:
    0000150c: 	leaq	DATAat0x382d6(%rip), %rdx
    00001513: 	movq	%r15, %rsi
    00001516: 	movq	%r14, %rdi
    00001519: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5401
    0000151e: 	callq	clock@PLT # Offset: 5406
    00001523: 	movq	%r14, %rsi
    00001526: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000152d: 	movq	%rax, start_time(%rip)
    00001534: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5428
    00001539: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001540: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001547: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000154e: 	je	.Ltmp1972 # Offset: 5454
.Ltmp2106:
    00001554: 	movq	-0x20(%rax), %rbp
    00001558: 	callq	clock@PLT # Offset: 5464
    0000155d: 	pxor	%xmm0, %xmm0
    00001561: 	movq	%rax, end_time(%rip)
    00001568: 	movq	%rbp, %rdi
    0000156b: 	subq	start_time(%rip), %rax
    00001572: 	cvtsi2sd	%rax, %xmm0
    00001577: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000157f: 	callq	_Z13record_resultdPKc # Offset: 5503
    00001584: 	movq	0xe0(%rsp), %rdi
    0000158c: 	cmpq	0x20(%rsp), %rdi
    00001591: 	je	.Ltmp1973 # Offset: 5521
    00001593: 	movq	0xf0(%rsp), %rax
    0000159b: 	leaq	0x1(%rax), %rsi
    0000159f: 	callq	_ZdlPvm@PLT # Offset: 5535
.Ltmp1973:
    000015a4: 	leaq	DATAat0x382e6(%rip), %rdx
    000015ab: 	movq	%r15, %rsi
    000015ae: 	movq	%r14, %rdi
    000015b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5553
    000015b6: 	callq	clock@PLT # Offset: 5558
    000015bb: 	movq	%r14, %rsi
    000015be: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015c5: 	movq	%rax, start_time(%rip)
    000015cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5580
    000015d1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015d8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015e6: 	je	.Ltmp1974 # Offset: 5606
.Ltmp2105:
    000015ec: 	movq	-0x20(%rax), %rbp
    000015f0: 	callq	clock@PLT # Offset: 5616
    000015f5: 	pxor	%xmm0, %xmm0
    000015f9: 	movq	%rax, end_time(%rip)
    00001600: 	movq	%rbp, %rdi
    00001603: 	subq	start_time(%rip), %rax
    0000160a: 	cvtsi2sd	%rax, %xmm0
    0000160f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001617: 	callq	_Z13record_resultdPKc # Offset: 5655
    0000161c: 	movq	0xe0(%rsp), %rdi
    00001624: 	cmpq	0x20(%rsp), %rdi
    00001629: 	je	.Ltmp1975 # Offset: 5673
    0000162b: 	movq	0xf0(%rsp), %rax
    00001633: 	leaq	0x1(%rax), %rsi
    00001637: 	callq	_ZdlPvm@PLT # Offset: 5687
.Ltmp1975:
    0000163c: 	leaq	DATAat0x382ff(%rip), %rdx
    00001643: 	movq	%r15, %rsi
    00001646: 	movq	%r14, %rdi
    00001649: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5705
    0000164e: 	callq	clock@PLT # Offset: 5710
    00001653: 	movq	%r14, %rsi
    00001656: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000165d: 	movq	%rax, start_time(%rip)
    00001664: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5732
    00001669: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001670: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001677: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000167e: 	je	.Ltmp1976 # Offset: 5758
.Ltmp2104:
    00001684: 	movq	-0x20(%rax), %rbp
    00001688: 	callq	clock@PLT # Offset: 5768
    0000168d: 	pxor	%xmm0, %xmm0
    00001691: 	movq	%rax, end_time(%rip)
    00001698: 	movq	%rbp, %rdi
    0000169b: 	subq	start_time(%rip), %rax
    000016a2: 	cvtsi2sd	%rax, %xmm0
    000016a7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000016af: 	callq	_Z13record_resultdPKc # Offset: 5807
    000016b4: 	movq	0xe0(%rsp), %rdi
    000016bc: 	cmpq	0x20(%rsp), %rdi
    000016c1: 	je	.Ltmp1977 # Offset: 5825
    000016c3: 	movq	0xf0(%rsp), %rax
    000016cb: 	leaq	0x1(%rax), %rsi
    000016cf: 	callq	_ZdlPvm@PLT # Offset: 5839
.Ltmp1977:
    000016d4: 	leaq	DATAat0x38315(%rip), %rdx
    000016db: 	movq	%r15, %rsi
    000016de: 	movq	%r14, %rdi
    000016e1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5857
    000016e6: 	callq	clock@PLT # Offset: 5862
    000016eb: 	movq	%r14, %rsi
    000016ee: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016f5: 	movq	%rax, start_time(%rip)
    000016fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5884
    00001701: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001708: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000170f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001716: 	je	.Ltmp1978 # Offset: 5910
.Ltmp2103:
    0000171c: 	movq	-0x20(%rax), %rbp
    00001720: 	callq	clock@PLT # Offset: 5920
    00001725: 	pxor	%xmm0, %xmm0
    00001729: 	movq	%rax, end_time(%rip)
    00001730: 	movq	%rbp, %rdi
    00001733: 	subq	start_time(%rip), %rax
    0000173a: 	cvtsi2sd	%rax, %xmm0
    0000173f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001747: 	callq	_Z13record_resultdPKc # Offset: 5959
    0000174c: 	movq	0xe0(%rsp), %rdi
    00001754: 	cmpq	0x20(%rsp), %rdi
    00001759: 	je	.Ltmp1979 # Offset: 5977
    0000175b: 	movq	0xf0(%rsp), %rax
    00001763: 	leaq	0x1(%rax), %rsi
    00001767: 	callq	_ZdlPvm@PLT # Offset: 5991
.Ltmp1979:
    0000176c: 	leaq	DATAat0x3831f(%rip), %rdx
    00001773: 	movq	%r15, %rsi
    00001776: 	movq	%r14, %rdi
    00001779: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6009
    0000177e: 	callq	clock@PLT # Offset: 6014
    00001783: 	movq	%r14, %rsi
    00001786: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000178d: 	movq	%rax, start_time(%rip)
    00001794: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6036
    00001799: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017a0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017a7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ae: 	je	.Ltmp1980 # Offset: 6062
.Ltmp2102:
    000017b4: 	movq	-0x20(%rax), %rbp
    000017b8: 	callq	clock@PLT # Offset: 6072
    000017bd: 	pxor	%xmm0, %xmm0
    000017c1: 	movq	%rax, end_time(%rip)
    000017c8: 	movq	%rbp, %rdi
    000017cb: 	subq	start_time(%rip), %rax
    000017d2: 	cvtsi2sd	%rax, %xmm0
    000017d7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000017df: 	callq	_Z13record_resultdPKc # Offset: 6111
    000017e4: 	movq	0xe0(%rsp), %rdi
    000017ec: 	cmpq	0x20(%rsp), %rdi
    000017f1: 	je	.Ltmp1981 # Offset: 6129
    000017f3: 	movq	0xf0(%rsp), %rax
    000017fb: 	leaq	0x1(%rax), %rsi
    000017ff: 	callq	_ZdlPvm@PLT # Offset: 6143
.Ltmp1981:
    00001804: 	leaq	DATAat0x38329(%rip), %rdx
    0000180b: 	movq	%r15, %rsi
    0000180e: 	movq	%r14, %rdi
    00001811: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6161
    00001816: 	callq	clock@PLT # Offset: 6166
    0000181b: 	movq	%r14, %rsi
    0000181e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001825: 	movq	%rax, start_time(%rip)
    0000182c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6188
    00001831: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001838: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000183f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001846: 	je	.Ltmp1982 # Offset: 6214
.Ltmp2101:
    0000184c: 	movq	-0x20(%rax), %rbp
    00001850: 	callq	clock@PLT # Offset: 6224
    00001855: 	pxor	%xmm0, %xmm0
    00001859: 	movq	%rax, end_time(%rip)
    00001860: 	movq	%rbp, %rdi
    00001863: 	subq	start_time(%rip), %rax
    0000186a: 	cvtsi2sd	%rax, %xmm0
    0000186f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001877: 	callq	_Z13record_resultdPKc # Offset: 6263
    0000187c: 	movq	0xe0(%rsp), %rdi
    00001884: 	cmpq	0x20(%rsp), %rdi
    00001889: 	je	.Ltmp1983 # Offset: 6281
    0000188b: 	movq	0xf0(%rsp), %rax
    00001893: 	leaq	0x1(%rax), %rsi
    00001897: 	callq	_ZdlPvm@PLT # Offset: 6295
.Ltmp1983:
    0000189c: 	leaq	DATAat0x38339(%rip), %rdx
    000018a3: 	movq	%r15, %rsi
    000018a6: 	movq	%r14, %rdi
    000018a9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6313
    000018ae: 	callq	clock@PLT # Offset: 6318
    000018b3: 	movq	%r14, %rsi
    000018b6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018bd: 	movq	%rax, start_time(%rip)
    000018c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6340
    000018c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018d0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018de: 	je	.Ltmp1984 # Offset: 6366
.Ltmp2100:
    000018e4: 	movq	-0x20(%rax), %rbp
    000018e8: 	callq	clock@PLT # Offset: 6376
    000018ed: 	pxor	%xmm0, %xmm0
    000018f1: 	movq	%rax, end_time(%rip)
    000018f8: 	movq	%rbp, %rdi
    000018fb: 	subq	start_time(%rip), %rax
    00001902: 	cvtsi2sd	%rax, %xmm0
    00001907: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000190f: 	callq	_Z13record_resultdPKc # Offset: 6415
    00001914: 	movq	0xe0(%rsp), %rdi
    0000191c: 	cmpq	0x20(%rsp), %rdi
    00001921: 	je	.Ltmp1985 # Offset: 6433
    00001923: 	movq	0xf0(%rsp), %rax
    0000192b: 	leaq	0x1(%rax), %rsi
    0000192f: 	callq	_ZdlPvm@PLT # Offset: 6447
.Ltmp1985:
    00001934: 	leaq	DATAat0x38351(%rip), %rdx
    0000193b: 	movq	%r15, %rsi
    0000193e: 	movq	%r14, %rdi
    00001941: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6465
    00001946: 	callq	clock@PLT # Offset: 6470
    0000194b: 	movq	%r14, %rsi
    0000194e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001955: 	movq	%rax, start_time(%rip)
    0000195c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6492
    00001961: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001968: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000196f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001976: 	je	.Ltmp1986 # Offset: 6518
.Ltmp2099:
    0000197c: 	movq	-0x20(%rax), %rbp
    00001980: 	callq	clock@PLT # Offset: 6528
    00001985: 	pxor	%xmm0, %xmm0
    00001989: 	movq	%rax, end_time(%rip)
    00001990: 	movq	%rbp, %rdi
    00001993: 	subq	start_time(%rip), %rax
    0000199a: 	cvtsi2sd	%rax, %xmm0
    0000199f: 	divsd	DATAat0x385e0(%rip), %xmm0
    000019a7: 	callq	_Z13record_resultdPKc # Offset: 6567
    000019ac: 	movq	0xe0(%rsp), %rdi
    000019b4: 	cmpq	0x20(%rsp), %rdi
    000019b9: 	je	.Ltmp1987 # Offset: 6585
    000019bb: 	movq	0xf0(%rsp), %rax
    000019c3: 	leaq	0x1(%rax), %rsi
    000019c7: 	callq	_ZdlPvm@PLT # Offset: 6599
.Ltmp1987:
    000019cc: 	leaq	DATAat0x38369(%rip), %rdx
    000019d3: 	movq	%r15, %rsi
    000019d6: 	movq	%r14, %rdi
    000019d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6617
    000019de: 	callq	clock@PLT # Offset: 6622
    000019e3: 	movq	%r14, %rsi
    000019e6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019ed: 	movq	%rax, start_time(%rip)
    000019f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6644
    000019f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a0e: 	je	.Ltmp1988 # Offset: 6670
.Ltmp2098:
    00001a14: 	movq	-0x20(%rax), %rbp
    00001a18: 	callq	clock@PLT # Offset: 6680
    00001a1d: 	pxor	%xmm0, %xmm0
    00001a21: 	movq	%rax, end_time(%rip)
    00001a28: 	movq	%rbp, %rdi
    00001a2b: 	subq	start_time(%rip), %rax
    00001a32: 	cvtsi2sd	%rax, %xmm0
    00001a37: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a3f: 	callq	_Z13record_resultdPKc # Offset: 6719
    00001a44: 	movq	0xe0(%rsp), %rdi
    00001a4c: 	cmpq	0x20(%rsp), %rdi
    00001a51: 	je	.Ltmp1989 # Offset: 6737
    00001a53: 	movq	0xf0(%rsp), %rax
    00001a5b: 	leaq	0x1(%rax), %rsi
    00001a5f: 	callq	_ZdlPvm@PLT # Offset: 6751
.Ltmp1989:
    00001a64: 	leaq	DATAat0x38381(%rip), %rdx
    00001a6b: 	movq	%r15, %rsi
    00001a6e: 	movq	%r14, %rdi
    00001a71: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6769
    00001a76: 	callq	clock@PLT # Offset: 6774
    00001a7b: 	movq	%r14, %rsi
    00001a7e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a85: 	movq	%rax, start_time(%rip)
    00001a8c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6796
    00001a91: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a98: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a9f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001aa6: 	je	.Ltmp1990 # Offset: 6822
.Ltmp2097:
    00001aac: 	movq	-0x20(%rax), %rbp
    00001ab0: 	callq	clock@PLT # Offset: 6832
    00001ab5: 	pxor	%xmm0, %xmm0
    00001ab9: 	movq	%rax, end_time(%rip)
    00001ac0: 	movq	%rbp, %rdi
    00001ac3: 	subq	start_time(%rip), %rax
    00001aca: 	cvtsi2sd	%rax, %xmm0
    00001acf: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001ad7: 	callq	_Z13record_resultdPKc # Offset: 6871
    00001adc: 	movq	0xe0(%rsp), %rdi
    00001ae4: 	cmpq	0x20(%rsp), %rdi
    00001ae9: 	je	.Ltmp1991 # Offset: 6889
    00001aeb: 	movq	0xf0(%rsp), %rax
    00001af3: 	leaq	0x1(%rax), %rsi
    00001af7: 	callq	_ZdlPvm@PLT # Offset: 6903
.Ltmp1991:
    00001afc: 	leaq	0xa0(%rsp), %rdi
    00001b04: 	leaq	DATAat0x384a0(%rip), %rdx
    00001b0b: 	movq	%r15, %rsi
    00001b0e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6926
    00001b13: 	movl	iterations(%rip), %esi
    00001b19: 	movq	0xa0(%rsp), %rdi
    00001b21: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 6945
    00001b26: 	leaq	DATAat0x384c8(%rip), %rdx
    00001b2d: 	movq	%r15, %rsi
    00001b30: 	movq	%r14, %rdi
    00001b33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6963
    00001b38: 	callq	clock@PLT # Offset: 6968
    00001b3d: 	movl	iterations(%rip), %ecx
    00001b43: 	movq	%rax, start_time(%rip)
    00001b4a: 	testl	%ecx, %ecx
    00001b4c: 	jle	.Ltmp1992 # Offset: 6988
    00001b52: 	movl	0x2c(%rsp), %r12d
    00001b57: 	addl	0x30(%rsp), %r12d
    00001b5c: 	xorl	%ebp, %ebp
    00001b5e: 	addl	0x38(%rsp), %r12d
    00001b63: 	addl	0x34(%rsp), %r12d
    00001b68: 	movd	%r12d, %xmm7
    00001b6d: 	pshufd	$0x0, %xmm7, %xmm6
    00001b72: 	movaps	%xmm6, (%rsp)
    00001b76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1995:
    00001b80: 	movdqa	(%rsp), %xmm3
    00001b85: 	movq	%r13, %rax
    00001b88: 	pxor	%xmm2, %xmm2
    00001b8c: 	psrlq	$0x20, %xmm3
    00001b91: 	nopl	(%rax) # Size: 7
.Ltmp1993:
    00001b98: 	movdqa	(%rax), %xmm0
    00001b9c: 	movdqa	(%rsp), %xmm1
    00001ba1: 	pmuludq	(%rax), %xmm1
    00001ba5: 	pshufd	$0x8, %xmm1, %xmm1
    00001baa: 	addq	$0x10, %rax
    00001bae: 	psrlq	$0x20, %xmm0
    00001bb3: 	pmuludq	%xmm3, %xmm0
    00001bb7: 	pshufd	$0x8, %xmm0, %xmm0
    00001bbc: 	punpckldq	%xmm0, %xmm1
    00001bc0: 	paddd	%xmm1, %xmm2
    00001bc4: 	cmpq	%rbx, %rax
    00001bc7: 	jne	.Ltmp1993 # Offset: 7111
    00001bc9: 	cvttsd2si	init_value(%rip), %rdx
    00001bd2: 	movdqa	%xmm2, %xmm0
    00001bd6: 	psrldq	$0x8, %xmm0
    00001bdb: 	paddd	%xmm0, %xmm2
    00001bdf: 	movdqa	%xmm2, %xmm0
    00001be3: 	imull	%r12d, %edx
    00001be7: 	psrldq	$0x4, %xmm0
    00001bec: 	paddd	%xmm0, %xmm2
    00001bf0: 	movd	%xmm2, %eax
    00001bf4: 	imull	$0x1f40, %edx, %edx
    00001bfa: 	cmpl	%eax, %edx
    00001bfc: 	je	.Ltmp1994 # Offset: 7164
    00001bfe: 	movl	current_test(%rip), %edx
    00001c04: 	leaq	DATAat0x381c8(%rip), %rsi
    00001c0b: 	movl	$0x1, %edi
    00001c10: 	xorl	%eax, %eax
    00001c12: 	callq	__printf_chk@PLT # Offset: 7186
    00001c17: 	movl	iterations(%rip), %ecx
.Ltmp1994:
    00001c1d: 	addl	$0x1, %ebp
    00001c20: 	cmpl	%ecx, %ebp
    00001c22: 	jl	.Ltmp1995 # Offset: 7202
.Ltmp1992:
    00001c28: 	movq	%r14, %rsi
    00001c2b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c32: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7218
    00001c37: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c3e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c45: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c4c: 	je	.Ltmp1996 # Offset: 7244
.Ltmp2096:
    00001c52: 	movq	-0x20(%rax), %rbp
    00001c56: 	callq	clock@PLT # Offset: 7254
    00001c5b: 	pxor	%xmm0, %xmm0
    00001c5f: 	movq	%rax, end_time(%rip)
    00001c66: 	movq	%rbp, %rdi
    00001c69: 	subq	start_time(%rip), %rax
    00001c70: 	cvtsi2sd	%rax, %xmm0
    00001c75: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001c7d: 	callq	_Z13record_resultdPKc # Offset: 7293
    00001c82: 	movq	0xe0(%rsp), %rdi
    00001c8a: 	cmpq	0x20(%rsp), %rdi
    00001c8f: 	je	.Ltmp1997 # Offset: 7311
    00001c91: 	movq	0xf0(%rsp), %rax
    00001c99: 	leaq	0x1(%rax), %rsi
    00001c9d: 	callq	_ZdlPvm@PLT # Offset: 7325
.Ltmp1997:
    00001ca2: 	leaq	DATAat0x384e8(%rip), %rdx
    00001ca9: 	movq	%r15, %rsi
    00001cac: 	movq	%r14, %rdi
    00001caf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7343
    00001cb4: 	callq	clock@PLT # Offset: 7348
    00001cb9: 	movl	iterations(%rip), %ecx
    00001cbf: 	movq	%rax, start_time(%rip)
    00001cc6: 	testl	%ecx, %ecx
    00001cc8: 	jle	.Ltmp1998 # Offset: 7368
    00001cce: 	movl	0x2c(%rsp), %r12d
    00001cd3: 	addl	0x30(%rsp), %r12d
    00001cd8: 	xorl	%ebp, %ebp
    00001cda: 	addl	0x38(%rsp), %r12d
    00001cdf: 	addl	0x34(%rsp), %r12d
    00001ce4: 	movd	%r12d, %xmm7
    00001ce9: 	pshufd	$0x0, %xmm7, %xmm6
    00001cee: 	movaps	%xmm6, (%rsp)
    00001cf2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2001:
    00001cf8: 	movdqa	(%rsp), %xmm3
    00001cfd: 	movq	%r13, %rax
    00001d00: 	pxor	%xmm2, %xmm2
    00001d04: 	psrlq	$0x20, %xmm3
    00001d09: 	nopl	(%rax) # Size: 7
.Ltmp1999:
    00001d10: 	movdqa	(%rax), %xmm0
    00001d14: 	movdqa	(%rsp), %xmm1
    00001d19: 	pmuludq	(%rax), %xmm1
    00001d1d: 	pshufd	$0x8, %xmm1, %xmm1
    00001d22: 	addq	$0x10, %rax
    00001d26: 	psrlq	$0x20, %xmm0
    00001d2b: 	pmuludq	%xmm3, %xmm0
    00001d2f: 	pshufd	$0x8, %xmm0, %xmm0
    00001d34: 	punpckldq	%xmm0, %xmm1
    00001d38: 	paddd	%xmm1, %xmm2
    00001d3c: 	cmpq	%rbx, %rax
    00001d3f: 	jne	.Ltmp1999 # Offset: 7487
    00001d41: 	cvttsd2si	init_value(%rip), %rdx
    00001d4a: 	movdqa	%xmm2, %xmm0
    00001d4e: 	psrldq	$0x8, %xmm0
    00001d53: 	paddd	%xmm0, %xmm2
    00001d57: 	movdqa	%xmm2, %xmm0
    00001d5b: 	imull	%r12d, %edx
    00001d5f: 	psrldq	$0x4, %xmm0
    00001d64: 	paddd	%xmm0, %xmm2
    00001d68: 	movd	%xmm2, %eax
    00001d6c: 	imull	$0x1f40, %edx, %edx
    00001d72: 	cmpl	%eax, %edx
    00001d74: 	je	.Ltmp2000 # Offset: 7540
    00001d76: 	movl	current_test(%rip), %edx
    00001d7c: 	leaq	DATAat0x381c8(%rip), %rsi
    00001d83: 	movl	$0x1, %edi
    00001d88: 	xorl	%eax, %eax
    00001d8a: 	callq	__printf_chk@PLT # Offset: 7562
    00001d8f: 	movl	iterations(%rip), %ecx
.Ltmp2000:
    00001d95: 	addl	$0x1, %ebp
    00001d98: 	cmpl	%ecx, %ebp
    00001d9a: 	jl	.Ltmp2001 # Offset: 7578
.Ltmp1998:
    00001da0: 	movq	%r14, %rsi
    00001da3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001daa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7594
    00001daf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dbd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dc4: 	je	.Ltmp2002 # Offset: 7620
.Ltmp2095:
    00001dca: 	movq	-0x20(%rax), %rbp
    00001dce: 	callq	clock@PLT # Offset: 7630
    00001dd3: 	pxor	%xmm0, %xmm0
    00001dd7: 	movq	%rax, end_time(%rip)
    00001dde: 	movq	%rbp, %rdi
    00001de1: 	subq	start_time(%rip), %rax
    00001de8: 	cvtsi2sd	%rax, %xmm0
    00001ded: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001df5: 	callq	_Z13record_resultdPKc # Offset: 7669
    00001dfa: 	movq	0xe0(%rsp), %rdi
    00001e02: 	cmpq	0x20(%rsp), %rdi
    00001e07: 	je	.Ltmp2003 # Offset: 7687
    00001e09: 	movq	0xf0(%rsp), %rax
    00001e11: 	leaq	0x1(%rax), %rsi
    00001e15: 	callq	_ZdlPvm@PLT # Offset: 7701
.Ltmp2003:
    00001e1a: 	leaq	DATAat0x38508(%rip), %rdx
    00001e21: 	movq	%r15, %rsi
    00001e24: 	movq	%r14, %rdi
    00001e27: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7719
    00001e2c: 	callq	clock@PLT # Offset: 7724
    00001e31: 	movl	iterations(%rip), %ecx
    00001e37: 	movq	%rax, start_time(%rip)
    00001e3e: 	testl	%ecx, %ecx
    00001e40: 	jle	.Ltmp2004 # Offset: 7744
    00001e46: 	movl	0x30(%rsp), %r12d
    00001e4b: 	addl	0x38(%rsp), %r12d
    00001e50: 	xorl	%ebp, %ebp
    00001e52: 	subl	0x2c(%rsp), %r12d
    00001e57: 	subl	0x34(%rsp), %r12d
    00001e5c: 	movd	%r12d, %xmm7
    00001e61: 	pshufd	$0x0, %xmm7, %xmm6
    00001e66: 	movaps	%xmm6, (%rsp)
    00001e6a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2007:
    00001e70: 	movdqa	(%rsp), %xmm3
    00001e75: 	movq	%r13, %rax
    00001e78: 	pxor	%xmm2, %xmm2
    00001e7c: 	psrlq	$0x20, %xmm3
    00001e81: 	nopl	(%rax) # Size: 7
.Ltmp2005:
    00001e88: 	movdqa	(%rax), %xmm0
    00001e8c: 	movdqa	(%rsp), %xmm1
    00001e91: 	pmuludq	(%rax), %xmm1
    00001e95: 	pshufd	$0x8, %xmm1, %xmm1
    00001e9a: 	addq	$0x10, %rax
    00001e9e: 	psrlq	$0x20, %xmm0
    00001ea3: 	pmuludq	%xmm3, %xmm0
    00001ea7: 	pshufd	$0x8, %xmm0, %xmm0
    00001eac: 	punpckldq	%xmm0, %xmm1
    00001eb0: 	paddd	%xmm1, %xmm2
    00001eb4: 	cmpq	%rbx, %rax
    00001eb7: 	jne	.Ltmp2005 # Offset: 7863
    00001eb9: 	cvttsd2si	init_value(%rip), %rdx
    00001ec2: 	movdqa	%xmm2, %xmm0
    00001ec6: 	psrldq	$0x8, %xmm0
    00001ecb: 	paddd	%xmm0, %xmm2
    00001ecf: 	movdqa	%xmm2, %xmm0
    00001ed3: 	imull	%r12d, %edx
    00001ed7: 	psrldq	$0x4, %xmm0
    00001edc: 	paddd	%xmm0, %xmm2
    00001ee0: 	movd	%xmm2, %eax
    00001ee4: 	imull	$0x1f40, %edx, %edx
    00001eea: 	cmpl	%eax, %edx
    00001eec: 	je	.Ltmp2006 # Offset: 7916
    00001eee: 	movl	current_test(%rip), %edx
    00001ef4: 	leaq	DATAat0x381c8(%rip), %rsi
    00001efb: 	movl	$0x1, %edi
    00001f00: 	xorl	%eax, %eax
    00001f02: 	callq	__printf_chk@PLT # Offset: 7938
    00001f07: 	movl	iterations(%rip), %ecx
.Ltmp2006:
    00001f0d: 	addl	$0x1, %ebp
    00001f10: 	cmpl	%ecx, %ebp
    00001f12: 	jl	.Ltmp2007 # Offset: 7954
.Ltmp2004:
    00001f18: 	movq	%r14, %rsi
    00001f1b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f22: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7970
    00001f27: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f2e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f35: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f3c: 	je	.Ltmp2008 # Offset: 7996
.Ltmp2094:
    00001f42: 	movq	-0x20(%rax), %rbp
    00001f46: 	callq	clock@PLT # Offset: 8006
    00001f4b: 	pxor	%xmm0, %xmm0
    00001f4f: 	movq	%rax, end_time(%rip)
    00001f56: 	movq	%rbp, %rdi
    00001f59: 	subq	start_time(%rip), %rax
    00001f60: 	cvtsi2sd	%rax, %xmm0
    00001f65: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001f6d: 	callq	_Z13record_resultdPKc # Offset: 8045
    00001f72: 	movq	0xe0(%rsp), %rdi
    00001f7a: 	cmpq	0x20(%rsp), %rdi
    00001f7f: 	je	.Ltmp2009 # Offset: 8063
    00001f81: 	movq	0xf0(%rsp), %rax
    00001f89: 	leaq	0x1(%rax), %rsi
    00001f8d: 	callq	_ZdlPvm@PLT # Offset: 8077
.Ltmp2009:
    00001f92: 	leaq	DATAat0x3839a(%rip), %rdx
    00001f99: 	movq	%r15, %rsi
    00001f9c: 	movq	%r14, %rdi
    00001f9f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8095
    00001fa4: 	callq	clock@PLT # Offset: 8100
    00001fa9: 	movl	iterations(%rip), %ecx
    00001faf: 	movq	%rax, start_time(%rip)
    00001fb6: 	testl	%ecx, %ecx
    00001fb8: 	jle	.Ltmp2010 # Offset: 8120
    00001fbe: 	movl	0x34(%rsp), %edi
    00001fc2: 	movl	0x2c(%rsp), %eax
    00001fc6: 	xorl	%ebp, %ebp
    00001fc8: 	addl	0x30(%rsp), %eax
    00001fcc: 	addl	0x38(%rsp), %eax
    00001fd0: 	leal	(%rax,%rdi), %r12d
    00001fd4: 	movd	%r12d, %xmm7
    00001fd9: 	pshufd	$0x0, %xmm7, %xmm6
    00001fde: 	movaps	%xmm6, (%rsp)
    00001fe2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2013:
    00001fe8: 	movdqa	(%rsp), %xmm3
    00001fed: 	movq	%r13, %rax
    00001ff0: 	pxor	%xmm2, %xmm2
    00001ff4: 	psrlq	$0x20, %xmm3
    00001ff9: 	nopl	(%rax) # Size: 7
.Ltmp2011:
    00002000: 	movdqa	(%rax), %xmm0
    00002004: 	movdqa	(%rsp), %xmm1
    00002009: 	pmuludq	(%rax), %xmm1
    0000200d: 	pshufd	$0x8, %xmm1, %xmm1
    00002012: 	addq	$0x10, %rax
    00002016: 	psrlq	$0x20, %xmm0
    0000201b: 	pmuludq	%xmm3, %xmm0
    0000201f: 	pshufd	$0x8, %xmm0, %xmm0
    00002024: 	punpckldq	%xmm0, %xmm1
    00002028: 	paddd	%xmm1, %xmm2
    0000202c: 	cmpq	%rbx, %rax
    0000202f: 	jne	.Ltmp2011 # Offset: 8239
    00002031: 	cvttsd2si	init_value(%rip), %rdx
    0000203a: 	movdqa	%xmm2, %xmm0
    0000203e: 	psrldq	$0x8, %xmm0
    00002043: 	paddd	%xmm0, %xmm2
    00002047: 	movdqa	%xmm2, %xmm0
    0000204b: 	imull	%r12d, %edx
    0000204f: 	psrldq	$0x4, %xmm0
    00002054: 	paddd	%xmm0, %xmm2
    00002058: 	movd	%xmm2, %eax
    0000205c: 	imull	$0x1f40, %edx, %edx
    00002062: 	cmpl	%eax, %edx
    00002064: 	je	.Ltmp2012 # Offset: 8292
    00002066: 	movl	current_test(%rip), %edx
    0000206c: 	leaq	DATAat0x381c8(%rip), %rsi
    00002073: 	movl	$0x1, %edi
    00002078: 	xorl	%eax, %eax
    0000207a: 	callq	__printf_chk@PLT # Offset: 8314
    0000207f: 	movl	iterations(%rip), %ecx
.Ltmp2012:
    00002085: 	addl	$0x1, %ebp
    00002088: 	cmpl	%ecx, %ebp
    0000208a: 	jl	.Ltmp2013 # Offset: 8330
.Ltmp2010:
    00002090: 	movq	%r14, %rsi
    00002093: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000209a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8346
    0000209f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020b4: 	je	.Ltmp2014 # Offset: 8372
.Ltmp2093:
    000020ba: 	movq	-0x20(%rax), %rbp
    000020be: 	callq	clock@PLT # Offset: 8382
    000020c3: 	pxor	%xmm0, %xmm0
    000020c7: 	movq	%rax, end_time(%rip)
    000020ce: 	movq	%rbp, %rdi
    000020d1: 	subq	start_time(%rip), %rax
    000020d8: 	cvtsi2sd	%rax, %xmm0
    000020dd: 	divsd	DATAat0x385e0(%rip), %xmm0
    000020e5: 	callq	_Z13record_resultdPKc # Offset: 8421
    000020ea: 	movq	0xe0(%rsp), %rdi
    000020f2: 	cmpq	0x20(%rsp), %rdi
    000020f7: 	je	.Ltmp2015 # Offset: 8439
    000020f9: 	movq	0xf0(%rsp), %rax
    00002101: 	leaq	0x1(%rax), %rsi
    00002105: 	callq	_ZdlPvm@PLT # Offset: 8453
.Ltmp2015:
    0000210a: 	leaq	DATAat0x383b1(%rip), %rdx
    00002111: 	movq	%r15, %rsi
    00002114: 	movq	%r14, %rdi
    00002117: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8471
    0000211c: 	callq	clock@PLT # Offset: 8476
    00002121: 	movl	iterations(%rip), %ecx
    00002127: 	movq	%rax, start_time(%rip)
    0000212e: 	testl	%ecx, %ecx
    00002130: 	jle	.Ltmp2016 # Offset: 8496
    00002136: 	movl	0x34(%rsp), %edi
    0000213a: 	movl	0x2c(%rsp), %eax
    0000213e: 	xorl	%ebp, %ebp
    00002140: 	addl	0x30(%rsp), %eax
    00002144: 	addl	0x38(%rsp), %eax
    00002148: 	leal	(%rax,%rdi), %r12d
    0000214c: 	movd	%r12d, %xmm7
    00002151: 	pshufd	$0x0, %xmm7, %xmm6
    00002156: 	movaps	%xmm6, (%rsp)
    0000215a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2019:
    00002160: 	movdqa	(%rsp), %xmm3
    00002165: 	movq	%r13, %rax
    00002168: 	pxor	%xmm2, %xmm2
    0000216c: 	psrlq	$0x20, %xmm3
    00002171: 	nopl	(%rax) # Size: 7
.Ltmp2017:
    00002178: 	movdqa	(%rax), %xmm0
    0000217c: 	movdqa	(%rsp), %xmm1
    00002181: 	pmuludq	(%rax), %xmm1
    00002185: 	pshufd	$0x8, %xmm1, %xmm1
    0000218a: 	addq	$0x10, %rax
    0000218e: 	psrlq	$0x20, %xmm0
    00002193: 	pmuludq	%xmm3, %xmm0
    00002197: 	pshufd	$0x8, %xmm0, %xmm0
    0000219c: 	punpckldq	%xmm0, %xmm1
    000021a0: 	paddd	%xmm1, %xmm2
    000021a4: 	cmpq	%rbx, %rax
    000021a7: 	jne	.Ltmp2017 # Offset: 8615
    000021a9: 	cvttsd2si	init_value(%rip), %rdx
    000021b2: 	movdqa	%xmm2, %xmm0
    000021b6: 	psrldq	$0x8, %xmm0
    000021bb: 	paddd	%xmm0, %xmm2
    000021bf: 	movdqa	%xmm2, %xmm0
    000021c3: 	imull	%r12d, %edx
    000021c7: 	psrldq	$0x4, %xmm0
    000021cc: 	paddd	%xmm0, %xmm2
    000021d0: 	movd	%xmm2, %eax
    000021d4: 	imull	$0x1f40, %edx, %edx
    000021da: 	cmpl	%eax, %edx
    000021dc: 	je	.Ltmp2018 # Offset: 8668
    000021de: 	movl	current_test(%rip), %edx
    000021e4: 	leaq	DATAat0x381c8(%rip), %rsi
    000021eb: 	movl	$0x1, %edi
    000021f0: 	xorl	%eax, %eax
    000021f2: 	callq	__printf_chk@PLT # Offset: 8690
    000021f7: 	movl	iterations(%rip), %ecx
.Ltmp2018:
    000021fd: 	addl	$0x1, %ebp
    00002200: 	cmpl	%ecx, %ebp
    00002202: 	jl	.Ltmp2019 # Offset: 8706
.Ltmp2016:
    00002208: 	movq	%r14, %rsi
    0000220b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002212: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8722
    00002217: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000221e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002225: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000222c: 	je	.Ltmp2020 # Offset: 8748
.Ltmp2092:
    00002232: 	movq	-0x20(%rax), %rbp
    00002236: 	callq	clock@PLT # Offset: 8758
    0000223b: 	pxor	%xmm0, %xmm0
    0000223f: 	movq	%rax, end_time(%rip)
    00002246: 	movq	%rbp, %rdi
    00002249: 	subq	start_time(%rip), %rax
    00002250: 	cvtsi2sd	%rax, %xmm0
    00002255: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000225d: 	callq	_Z13record_resultdPKc # Offset: 8797
    00002262: 	movq	0xe0(%rsp), %rdi
    0000226a: 	cmpq	0x20(%rsp), %rdi
    0000226f: 	je	.Ltmp2021 # Offset: 8815
    00002271: 	movq	0xf0(%rsp), %rax
    00002279: 	leaq	0x1(%rax), %rsi
    0000227d: 	callq	_ZdlPvm@PLT # Offset: 8829
.Ltmp2021:
    00002282: 	leaq	DATAat0x383c9(%rip), %rdx
    00002289: 	movq	%r15, %rsi
    0000228c: 	movq	%r14, %rdi
    0000228f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8847
    00002294: 	callq	clock@PLT # Offset: 8852
    00002299: 	movl	iterations(%rip), %ecx
    0000229f: 	movq	%rax, start_time(%rip)
    000022a6: 	testl	%ecx, %ecx
    000022a8: 	jle	.Ltmp2022 # Offset: 8872
    000022ae: 	movl	0x30(%rsp), %eax
    000022b2: 	addl	0x38(%rsp), %eax
    000022b6: 	xorl	%ebp, %ebp
    000022b8: 	subl	0x2c(%rsp), %eax
    000022bc: 	subl	0x34(%rsp), %eax
    000022c0: 	movd	%eax, %xmm7
    000022c4: 	movl	%eax, %r12d
    000022c7: 	pshufd	$0x0, %xmm7, %xmm6
    000022cc: 	movaps	%xmm6, (%rsp)
.Ltmp2025:
    000022d0: 	movdqa	(%rsp), %xmm3
    000022d5: 	movq	%r13, %rax
    000022d8: 	pxor	%xmm2, %xmm2
    000022dc: 	psrlq	$0x20, %xmm3
    000022e1: 	nopl	(%rax) # Size: 7
.Ltmp2023:
    000022e8: 	movdqa	(%rax), %xmm0
    000022ec: 	movdqa	(%rsp), %xmm1
    000022f1: 	pmuludq	(%rax), %xmm1
    000022f5: 	pshufd	$0x8, %xmm1, %xmm1
    000022fa: 	addq	$0x10, %rax
    000022fe: 	psrlq	$0x20, %xmm0
    00002303: 	pmuludq	%xmm3, %xmm0
    00002307: 	pshufd	$0x8, %xmm0, %xmm0
    0000230c: 	punpckldq	%xmm0, %xmm1
    00002310: 	paddd	%xmm1, %xmm2
    00002314: 	cmpq	%rbx, %rax
    00002317: 	jne	.Ltmp2023 # Offset: 8983
    00002319: 	cvttsd2si	init_value(%rip), %rdx
    00002322: 	movdqa	%xmm2, %xmm0
    00002326: 	psrldq	$0x8, %xmm0
    0000232b: 	paddd	%xmm0, %xmm2
    0000232f: 	movdqa	%xmm2, %xmm0
    00002333: 	imull	%r12d, %edx
    00002337: 	psrldq	$0x4, %xmm0
    0000233c: 	paddd	%xmm0, %xmm2
    00002340: 	movd	%xmm2, %eax
    00002344: 	imull	$0x1f40, %edx, %edx
    0000234a: 	cmpl	%eax, %edx
    0000234c: 	je	.Ltmp2024 # Offset: 9036
    0000234e: 	movl	current_test(%rip), %edx
    00002354: 	leaq	DATAat0x381c8(%rip), %rsi
    0000235b: 	movl	$0x1, %edi
    00002360: 	xorl	%eax, %eax
    00002362: 	callq	__printf_chk@PLT # Offset: 9058
    00002367: 	movl	iterations(%rip), %ecx
.Ltmp2024:
    0000236d: 	addl	$0x1, %ebp
    00002370: 	cmpl	%ecx, %ebp
    00002372: 	jl	.Ltmp2025 # Offset: 9074
.Ltmp2022:
    00002378: 	movq	%r14, %rsi
    0000237b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002382: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9090
    00002387: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000238e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002395: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000239c: 	je	.Ltmp2026 # Offset: 9116
.Ltmp2091:
    000023a2: 	movq	-0x20(%rax), %rbp
    000023a6: 	callq	clock@PLT # Offset: 9126
    000023ab: 	pxor	%xmm0, %xmm0
    000023af: 	movq	%rax, end_time(%rip)
    000023b6: 	movq	%rbp, %rdi
    000023b9: 	subq	start_time(%rip), %rax
    000023c0: 	cvtsi2sd	%rax, %xmm0
    000023c5: 	divsd	DATAat0x385e0(%rip), %xmm0
    000023cd: 	callq	_Z13record_resultdPKc # Offset: 9165
    000023d2: 	movq	0xe0(%rsp), %rdi
    000023da: 	cmpq	0x20(%rsp), %rdi
    000023df: 	je	.Ltmp2027 # Offset: 9183
    000023e1: 	movq	0xf0(%rsp), %rax
    000023e9: 	leaq	0x1(%rax), %rsi
    000023ed: 	callq	_ZdlPvm@PLT # Offset: 9197
.Ltmp2027:
    000023f2: 	leaq	DATAat0x38528(%rip), %rdx
    000023f9: 	movq	%r15, %rsi
    000023fc: 	movq	%r14, %rdi
    000023ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9215
    00002404: 	callq	clock@PLT # Offset: 9220
    00002409: 	movl	iterations(%rip), %ecx
    0000240f: 	movq	%rax, start_time(%rip)
    00002416: 	testl	%ecx, %ecx
    00002418: 	jle	.Ltmp2028 # Offset: 9240
    0000241e: 	movl	0x34(%rsp), %edi
    00002422: 	movd	0x28(%rsp), %xmm7
    00002428: 	xorl	%ebp, %ebp
    0000242a: 	movl	0x2c(%rsp), %eax
    0000242e: 	addl	0x30(%rsp), %eax
    00002432: 	leal	(%rax,%rdi), %r12d
    00002436: 	pshufd	$0x0, %xmm7, %xmm6
    0000243b: 	movd	%r12d, %xmm7
    00002440: 	movaps	%xmm6, 0x10(%rsp)
    00002445: 	pshufd	$0x0, %xmm7, %xmm6
    0000244a: 	movaps	%xmm6, (%rsp)
    0000244e: 	nop # Size: 2
.Ltmp2031:
    00002450: 	movdqa	(%rsp), %xmm3
    00002455: 	movq	%r13, %rax
    00002458: 	pxor	%xmm2, %xmm2
    0000245c: 	psrlq	$0x20, %xmm3
    00002461: 	nopl	(%rax) # Size: 7
.Ltmp2029:
    00002468: 	movdqa	0x10(%rsp), %xmm0
    0000246e: 	movdqa	(%rsp), %xmm1
    00002473: 	addq	$0x10, %rax
    00002477: 	paddd	-0x10(%rax), %xmm0
    0000247c: 	pmuludq	%xmm0, %xmm1
    00002480: 	psrlq	$0x20, %xmm0
    00002485: 	pmuludq	%xmm3, %xmm0
    00002489: 	pshufd	$0x8, %xmm1, %xmm1
    0000248e: 	pshufd	$0x8, %xmm0, %xmm0
    00002493: 	punpckldq	%xmm0, %xmm1
    00002497: 	paddd	%xmm1, %xmm2
    0000249b: 	cmpq	%rbx, %rax
    0000249e: 	jne	.Ltmp2029 # Offset: 9374
    000024a0: 	cvttsd2si	init_value(%rip), %rdx
    000024a9: 	movdqa	%xmm2, %xmm0
    000024ad: 	addl	0x28(%rsp), %edx
    000024b1: 	psrldq	$0x8, %xmm0
    000024b6: 	imull	%r12d, %edx
    000024ba: 	paddd	%xmm0, %xmm2
    000024be: 	movdqa	%xmm2, %xmm0
    000024c2: 	psrldq	$0x4, %xmm0
    000024c7: 	imull	$0x1f40, %edx, %edx
    000024cd: 	paddd	%xmm0, %xmm2
    000024d1: 	movd	%xmm2, %eax
    000024d5: 	cmpl	%eax, %edx
    000024d7: 	je	.Ltmp2030 # Offset: 9431
    000024d9: 	movl	current_test(%rip), %edx
    000024df: 	leaq	DATAat0x381c8(%rip), %rsi
    000024e6: 	movl	$0x1, %edi
    000024eb: 	xorl	%eax, %eax
    000024ed: 	callq	__printf_chk@PLT # Offset: 9453
    000024f2: 	movl	iterations(%rip), %ecx
.Ltmp2030:
    000024f8: 	addl	$0x1, %ebp
    000024fb: 	cmpl	%ecx, %ebp
    000024fd: 	jl	.Ltmp2031 # Offset: 9469
.Ltmp2028:
    00002503: 	movq	%r14, %rsi
    00002506: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000250d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9485
    00002512: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002519: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002520: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002527: 	je	.Ltmp2032 # Offset: 9511
.Ltmp2090:
    0000252d: 	movq	-0x20(%rax), %rbp
    00002531: 	callq	clock@PLT # Offset: 9521
    00002536: 	pxor	%xmm0, %xmm0
    0000253a: 	movq	%rax, end_time(%rip)
    00002541: 	movq	%rbp, %rdi
    00002544: 	subq	start_time(%rip), %rax
    0000254b: 	cvtsi2sd	%rax, %xmm0
    00002550: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002558: 	callq	_Z13record_resultdPKc # Offset: 9560
    0000255d: 	movq	0xe0(%rsp), %rdi
    00002565: 	cmpq	0x20(%rsp), %rdi
    0000256a: 	je	.Ltmp2033 # Offset: 9578
    0000256c: 	movq	0xf0(%rsp), %rax
    00002574: 	leaq	0x1(%rax), %rsi
    00002578: 	callq	_ZdlPvm@PLT # Offset: 9592
.Ltmp2033:
    0000257d: 	leaq	DATAat0x383e1(%rip), %rdx
    00002584: 	movq	%r15, %rsi
    00002587: 	movq	%r14, %rdi
    0000258a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9610
    0000258f: 	callq	clock@PLT # Offset: 9615
    00002594: 	movl	iterations(%rip), %ecx
    0000259a: 	movq	%rax, start_time(%rip)
    000025a1: 	testl	%ecx, %ecx
    000025a3: 	jle	.Ltmp2034 # Offset: 9635
    000025a9: 	movl	0x30(%rsp), %esi
    000025ad: 	movl	0x2c(%rsp), %edi
    000025b1: 	xorl	%ebp, %ebp
    000025b3: 	movl	0x34(%rsp), %r8d
    000025b8: 	movq	0x38(%rsp), %rdx
    000025bd: 	movl	%esi, %eax
    000025bf: 	movl	%edi, %r12d
    000025c2: 	addl	%esi, %edi
    000025c4: 	addl	%r8d, %eax
    000025c7: 	imull	%edx, %r12d
    000025cb: 	imull	%edx, %eax
    000025ce: 	movl	%edi, %edx
    000025d0: 	addl	%r8d, %edx
    000025d3: 	movd	%edx, %xmm7
    000025d7: 	movl	%edx, 0x2c(%rsp)
    000025db: 	movl	%eax, 0x28(%rsp)
    000025df: 	addl	%r12d, %eax
    000025e2: 	pshufd	$0x0, %xmm7, %xmm6
    000025e7: 	movd	%eax, %xmm7
    000025eb: 	movaps	%xmm6, (%rsp)
    000025ef: 	pshufd	$0x0, %xmm7, %xmm6
    000025f4: 	movaps	%xmm6, 0x10(%rsp)
    000025f9: 	nopl	(%rax) # Size: 7
.Ltmp2037:
    00002600: 	movdqa	(%rsp), %xmm3
    00002605: 	movq	%r13, %rax
    00002608: 	pxor	%xmm2, %xmm2
    0000260c: 	psrlq	$0x20, %xmm3
    00002611: 	nopl	(%rax) # Size: 7
.Ltmp2035:
    00002618: 	movdqa	(%rax), %xmm1
    0000261c: 	movdqa	(%rsp), %xmm0
    00002621: 	pmuludq	(%rax), %xmm0
    00002625: 	pshufd	$0x8, %xmm0, %xmm0
    0000262a: 	addq	$0x10, %rax
    0000262e: 	psrlq	$0x20, %xmm1
    00002633: 	pmuludq	%xmm3, %xmm1
    00002637: 	pshufd	$0x8, %xmm1, %xmm1
    0000263c: 	punpckldq	%xmm1, %xmm0
    00002640: 	paddd	0x10(%rsp), %xmm0
    00002646: 	paddd	%xmm0, %xmm2
    0000264a: 	cmpq	%rbx, %rax
    0000264d: 	jne	.Ltmp2035 # Offset: 9805
    0000264f: 	cvttsd2si	init_value(%rip), %rdx
    00002658: 	movdqa	%xmm2, %xmm0
    0000265c: 	psrldq	$0x8, %xmm0
    00002661: 	imull	0x2c(%rsp), %edx
    00002666: 	addl	0x28(%rsp), %edx
    0000266a: 	paddd	%xmm0, %xmm2
    0000266e: 	addl	%r12d, %edx
    00002671: 	movdqa	%xmm2, %xmm0
    00002675: 	imull	$0x1f40, %edx, %edx
    0000267b: 	psrldq	$0x4, %xmm0
    00002680: 	paddd	%xmm0, %xmm2
    00002684: 	movd	%xmm2, %eax
    00002688: 	cmpl	%eax, %edx
    0000268a: 	je	.Ltmp2036 # Offset: 9866
    0000268c: 	movl	current_test(%rip), %edx
    00002692: 	leaq	DATAat0x381c8(%rip), %rsi
    00002699: 	movl	$0x1, %edi
    0000269e: 	xorl	%eax, %eax
    000026a0: 	callq	__printf_chk@PLT # Offset: 9888
    000026a5: 	movl	iterations(%rip), %ecx
.Ltmp2036:
    000026ab: 	addl	$0x1, %ebp
    000026ae: 	cmpl	%ecx, %ebp
    000026b0: 	jl	.Ltmp2037 # Offset: 9904
.Ltmp2034:
    000026b6: 	movq	%r14, %rsi
    000026b9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000026c0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9920
    000026c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026cc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000026d3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000026da: 	je	.Ltmp2038 # Offset: 9946
.Ltmp2089:
    000026e0: 	movq	-0x20(%rax), %rbp
    000026e4: 	callq	clock@PLT # Offset: 9956
    000026e9: 	pxor	%xmm0, %xmm0
    000026ed: 	movq	%rax, end_time(%rip)
    000026f4: 	movq	%rbp, %rdi
    000026f7: 	subq	start_time(%rip), %rax
    000026fe: 	cvtsi2sd	%rax, %xmm0
    00002703: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000270b: 	callq	_Z13record_resultdPKc # Offset: 9995
    00002710: 	movq	0xe0(%rsp), %rdi
    00002718: 	cmpq	0x20(%rsp), %rdi
    0000271d: 	je	.Ltmp2039 # Offset: 10013
    0000271f: 	movq	0xf0(%rsp), %rax
    00002727: 	leaq	0x1(%rax), %rsi
    0000272b: 	callq	_ZdlPvm@PLT # Offset: 10027
.Ltmp2039:
    00002730: 	leaq	0xc0(%rsp), %rdi
    00002738: 	leaq	DATAat0x3839a(%rip), %rdx
    0000273f: 	movq	%r15, %rsi
    00002742: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10050
    00002747: 	movl	iterations(%rip), %esi
    0000274d: 	movq	0xc0(%rsp), %rdi
    00002755: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10069
    0000275a: 	leaq	DATAat0x383fa(%rip), %rdx
    00002761: 	movq	%r15, %rsi
    00002764: 	movq	%r14, %rdi
    00002767: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10087
    0000276c: 	movq	%r14, %rdx
    0000276f: 	movl	$0x1f40, %esi
    00002774: 	movq	%r13, %rdi
    00002777: 	callq	_Z10test_2termIj20custom_2term_add_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10103
    0000277c: 	movq	0xe0(%rsp), %rdi
    00002784: 	cmpq	0x20(%rsp), %rdi
    00002789: 	je	.Ltmp2040 # Offset: 10121
    0000278b: 	movq	0xf0(%rsp), %rax
    00002793: 	leaq	0x1(%rax), %rsi
    00002797: 	callq	_ZdlPvm@PLT # Offset: 10135
.Ltmp2040:
    0000279c: 	leaq	DATAat0x38409(%rip), %rdx
    000027a3: 	movq	%r15, %rsi
    000027a6: 	movq	%r14, %rdi
    000027a9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10153
    000027ae: 	movq	%r14, %rdx
    000027b1: 	movl	$0x1f40, %esi
    000027b6: 	movq	%r13, %rdi
    000027b9: 	callq	_Z10test_2termIj16custom_2term_addIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10169
    000027be: 	movq	0xe0(%rsp), %rdi
    000027c6: 	cmpq	0x20(%rsp), %rdi
    000027cb: 	je	.Ltmp2041 # Offset: 10187
    000027cd: 	movq	0xf0(%rsp), %rax
    000027d5: 	leaq	0x1(%rax), %rsi
    000027d9: 	callq	_ZdlPvm@PLT # Offset: 10201
.Ltmp2041:
    000027de: 	leaq	DATAat0x38414(%rip), %rdx
    000027e5: 	movq	%r15, %rsi
    000027e8: 	movq	%r14, %rdi
    000027eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10219
    000027f0: 	movq	%r14, %rdx
    000027f3: 	movl	$0x1f40, %esi
    000027f8: 	movq	%r13, %rdi
    000027fb: 	callq	_Z10test_2termIj20custom_2term_sub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10235
    00002800: 	movq	0xe0(%rsp), %rdi
    00002808: 	cmpq	0x20(%rsp), %rdi
    0000280d: 	je	.Ltmp2042 # Offset: 10253
    0000280f: 	movq	0xf0(%rsp), %rax
    00002817: 	leaq	0x1(%rax), %rsi
    0000281b: 	callq	_ZdlPvm@PLT # Offset: 10267
.Ltmp2042:
    00002820: 	leaq	DATAat0x38423(%rip), %rdx
    00002827: 	movq	%r15, %rsi
    0000282a: 	movq	%r14, %rdi
    0000282d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10285
    00002832: 	movq	%r14, %rdx
    00002835: 	movl	$0x1f40, %esi
    0000283a: 	movq	%r13, %rdi
    0000283d: 	callq	_Z10test_2termIj16custom_2term_subIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10301
    00002842: 	movq	0xe0(%rsp), %rdi
    0000284a: 	cmpq	0x20(%rsp), %rdi
    0000284f: 	je	.Ltmp2043 # Offset: 10319
    00002851: 	movq	0xf0(%rsp), %rax
    00002859: 	leaq	0x1(%rax), %rsi
    0000285d: 	callq	_ZdlPvm@PLT # Offset: 10333
.Ltmp2043:
    00002862: 	leaq	DATAat0x3842e(%rip), %rdx
    00002869: 	movq	%r15, %rsi
    0000286c: 	movq	%r14, %rdi
    0000286f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10351
    00002874: 	movq	%r14, %rdx
    00002877: 	movl	$0x1f40, %esi
    0000287c: 	movq	%r13, %rdi
    0000287f: 	callq	_Z10test_2termIj23custom_2term_addsub_optIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10367
    00002884: 	movq	0xe0(%rsp), %rdi
    0000288c: 	cmpq	0x20(%rsp), %rdi
    00002891: 	je	.Ltmp2044 # Offset: 10385
    00002893: 	movq	0xf0(%rsp), %rax
    0000289b: 	leaq	0x1(%rax), %rsi
    0000289f: 	callq	_ZdlPvm@PLT # Offset: 10399
.Ltmp2044:
    000028a4: 	leaq	DATAat0x38440(%rip), %rdx
    000028ab: 	movq	%r15, %rsi
    000028ae: 	movq	%r14, %rdi
    000028b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10417
    000028b6: 	movq	%r14, %rdx
    000028b9: 	movl	$0x1f40, %esi
    000028be: 	movq	%r13, %rdi
    000028c1: 	callq	_Z10test_2termIj19custom_2term_addsubIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10433
    000028c6: 	movq	0xe0(%rsp), %rdi
    000028ce: 	cmpq	0x20(%rsp), %rdi
    000028d3: 	je	.Ltmp2045 # Offset: 10451
    000028d5: 	movq	0xf0(%rsp), %rax
    000028dd: 	leaq	0x1(%rax), %rsi
    000028e1: 	callq	_ZdlPvm@PLT # Offset: 10465
.Ltmp2045:
    000028e6: 	leaq	DATAat0x3844e(%rip), %rdx
    000028ed: 	movq	%r15, %rsi
    000028f0: 	movq	%r14, %rdi
    000028f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10483
    000028f8: 	callq	clock@PLT # Offset: 10488
    000028fd: 	movl	iterations(%rip), %ecx
    00002903: 	xorl	%ebp, %ebp
    00002905: 	leaq	0x7cf0(%r13), %rbx
    0000290c: 	movq	%rax, start_time(%rip)
    00002913: 	leaq	DATAat0x381c8(%rip), %r12
    0000291a: 	testl	%ecx, %ecx
    0000291c: 	jle	.Ltmp2046 # Offset: 10524
    00002922: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2049:
    00002928: 	movl	0x104(%rsp), %edx
    0000292f: 	movq	%r13, %rax
    00002932: 	xorl	0x100(%rsp), %edx
    00002939: 	pxor	%xmm0, %xmm0
    0000293d: 	nopl	(%rax) # Size: 3
.Ltmp2047:
    00002940: 	movdqu	0x4(%rax), %xmm1
    00002945: 	pxor	(%rax), %xmm1
    00002949: 	addq	$0x10, %rax
    0000294d: 	paddd	%xmm1, %xmm0
    00002951: 	cmpq	%rbx, %rax
    00002954: 	jne	.Ltmp2047 # Offset: 10580
    00002956: 	movdqa	%xmm0, %xmm1
    0000295a: 	movl	0x7df8(%rsp), %eax
    00002961: 	movq	0x7df0(%rsp), %xmm2
    0000296a: 	psrldq	$0x8, %xmm1
    0000296f: 	xorl	0x7dfc(%rsp), %eax
    00002976: 	paddd	%xmm1, %xmm0
    0000297a: 	addl	%edx, %eax
    0000297c: 	movq	0x7df4(%rsp), %xmm1
    00002985: 	pxor	%xmm2, %xmm1
    00002989: 	movd	%xmm1, %edx
    0000298d: 	pshufd	$0xe5, %xmm1, %xmm4
    00002992: 	movdqa	%xmm0, %xmm1
    00002996: 	psrldq	$0x4, %xmm1
    0000299b: 	addl	%edx, %eax
    0000299d: 	movd	%xmm4, %edx
    000029a1: 	paddd	%xmm1, %xmm0
    000029a5: 	addl	%edx, %eax
    000029a7: 	movd	%xmm0, %edx
    000029ab: 	addl	%edx, %eax
    000029ad: 	je	.Ltmp2048 # Offset: 10669
    000029af: 	movl	current_test(%rip), %edx
    000029b5: 	movq	%r12, %rsi
    000029b8: 	movl	$0x1, %edi
    000029bd: 	xorl	%eax, %eax
    000029bf: 	callq	__printf_chk@PLT # Offset: 10687
    000029c4: 	movl	iterations(%rip), %ecx
    000029ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2048:
    000029d0: 	addl	$0x1, %ebp
    000029d3: 	cmpl	%ecx, %ebp
    000029d5: 	jl	.Ltmp2049 # Offset: 10709
.Ltmp2046:
    000029db: 	movq	%r14, %rsi
    000029de: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000029e5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10725
    000029ea: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029f1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000029f8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029ff: 	je	.Ltmp2050 # Offset: 10751
.Ltmp2088:
    00002a05: 	movq	-0x20(%rax), %rbp
    00002a09: 	callq	clock@PLT # Offset: 10761
    00002a0e: 	pxor	%xmm0, %xmm0
    00002a12: 	movq	%rax, end_time(%rip)
    00002a19: 	movq	%rbp, %rdi
    00002a1c: 	subq	start_time(%rip), %rax
    00002a23: 	cvtsi2sd	%rax, %xmm0
    00002a28: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002a30: 	callq	_Z13record_resultdPKc # Offset: 10800
    00002a35: 	movq	0xe0(%rsp), %rdi
    00002a3d: 	cmpq	0x20(%rsp), %rdi
    00002a42: 	je	.Ltmp2051 # Offset: 10818
    00002a44: 	movq	0xf0(%rsp), %rax
    00002a4c: 	leaq	0x1(%rax), %rsi
    00002a50: 	callq	_ZdlPvm@PLT # Offset: 10832
.Ltmp2051:
    00002a55: 	leaq	DATAat0x3845d(%rip), %rdx
    00002a5c: 	movq	%r15, %rsi
    00002a5f: 	movq	%r14, %rdi
    00002a62: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10850
    00002a67: 	callq	clock@PLT # Offset: 10855
    00002a6c: 	movl	iterations(%rip), %ecx
    00002a72: 	xorl	%ebp, %ebp
    00002a74: 	leaq	0x7cf0(%r13), %rbx
    00002a7b: 	movq	%rax, start_time(%rip)
    00002a82: 	leaq	DATAat0x381c8(%rip), %r12
    00002a89: 	testl	%ecx, %ecx
    00002a8b: 	jle	.Ltmp2052 # Offset: 10891
    00002a91: 	nopl	(%rax) # Size: 7
.Ltmp2055:
    00002a98: 	movl	0x104(%rsp), %edx
    00002a9f: 	movq	%r13, %rax
    00002aa2: 	xorl	0x100(%rsp), %edx
    00002aa9: 	pxor	%xmm0, %xmm0
    00002aad: 	nopl	(%rax) # Size: 3
.Ltmp2053:
    00002ab0: 	movdqu	0x4(%rax), %xmm1
    00002ab5: 	pxor	(%rax), %xmm1
    00002ab9: 	addq	$0x10, %rax
    00002abd: 	paddd	%xmm1, %xmm0
    00002ac1: 	cmpq	%rax, %rbx
    00002ac4: 	jne	.Ltmp2053 # Offset: 10948
    00002ac6: 	movdqa	%xmm0, %xmm1
    00002aca: 	movl	0x7df8(%rsp), %eax
    00002ad1: 	movq	0x7df0(%rsp), %xmm2
    00002ada: 	psrldq	$0x8, %xmm1
    00002adf: 	xorl	0x7dfc(%rsp), %eax
    00002ae6: 	paddd	%xmm1, %xmm0
    00002aea: 	addl	%edx, %eax
    00002aec: 	movq	0x7df4(%rsp), %xmm1
    00002af5: 	pxor	%xmm2, %xmm1
    00002af9: 	movd	%xmm1, %edx
    00002afd: 	pshufd	$0xe5, %xmm1, %xmm5
    00002b02: 	movdqa	%xmm0, %xmm1
    00002b06: 	psrldq	$0x4, %xmm1
    00002b0b: 	addl	%edx, %eax
    00002b0d: 	movd	%xmm5, %edx
    00002b11: 	paddd	%xmm1, %xmm0
    00002b15: 	addl	%edx, %eax
    00002b17: 	movd	%xmm0, %edx
    00002b1b: 	addl	%edx, %eax
    00002b1d: 	je	.Ltmp2054 # Offset: 11037
    00002b1f: 	movl	current_test(%rip), %edx
    00002b25: 	movq	%r12, %rsi
    00002b28: 	movl	$0x1, %edi
    00002b2d: 	xorl	%eax, %eax
    00002b2f: 	callq	__printf_chk@PLT # Offset: 11055
    00002b34: 	movl	iterations(%rip), %ecx
    00002b3a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2054:
    00002b40: 	addl	$0x1, %ebp
    00002b43: 	cmpl	%ecx, %ebp
    00002b45: 	jl	.Ltmp2055 # Offset: 11077
.Ltmp2052:
    00002b4b: 	movq	%r14, %rsi
    00002b4e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b55: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11093
    00002b5a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b61: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b68: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b6f: 	je	.Ltmp2056 # Offset: 11119
.Ltmp2087:
    00002b75: 	movq	-0x20(%rax), %rbp
    00002b79: 	callq	clock@PLT # Offset: 11129
    00002b7e: 	pxor	%xmm0, %xmm0
    00002b82: 	movq	%rax, end_time(%rip)
    00002b89: 	movq	%rbp, %rdi
    00002b8c: 	subq	start_time(%rip), %rax
    00002b93: 	cvtsi2sd	%rax, %xmm0
    00002b98: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002ba0: 	callq	_Z13record_resultdPKc # Offset: 11168
    00002ba5: 	movq	0xe0(%rsp), %rdi
    00002bad: 	cmpq	0x20(%rsp), %rdi
    00002bb2: 	je	.Ltmp2057 # Offset: 11186
    00002bb4: 	movq	0xf0(%rsp), %rax
    00002bbc: 	leaq	0x1(%rax), %rsi
    00002bc0: 	callq	_ZdlPvm@PLT # Offset: 11200
.Ltmp2057:
    00002bc5: 	leaq	DATAat0x38468(%rip), %rdx
    00002bcc: 	movq	%r15, %rsi
    00002bcf: 	movq	%r14, %rdi
    00002bd2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11218
    00002bd7: 	callq	clock@PLT # Offset: 11223
    00002bdc: 	movl	iterations(%rip), %esi
    00002be2: 	xorl	%ebp, %ebp
    00002be4: 	leaq	0x7cf0(%r13), %rbx
    00002beb: 	movq	%rax, start_time(%rip)
    00002bf2: 	leaq	DATAat0x381c8(%rip), %r12
    00002bf9: 	testl	%esi, %esi
    00002bfb: 	jle	.Ltmp2058 # Offset: 11259
    00002c01: 	nopl	(%rax) # Size: 7
.Ltmp2061:
    00002c08: 	movl	0x104(%rsp), %edx
    00002c0f: 	movq	%r13, %rax
    00002c12: 	orl	0x100(%rsp), %edx
    00002c19: 	pxor	%xmm0, %xmm0
    00002c1d: 	nopl	(%rax) # Size: 3
.Ltmp2059:
    00002c20: 	movdqu	0x4(%rax), %xmm1
    00002c25: 	por	(%rax), %xmm1
    00002c29: 	addq	$0x10, %rax
    00002c2d: 	paddd	%xmm1, %xmm0
    00002c31: 	cmpq	%rax, %rbx
    00002c34: 	jne	.Ltmp2059 # Offset: 11316
    00002c36: 	movdqa	%xmm0, %xmm1
    00002c3a: 	movl	0x7df8(%rsp), %eax
    00002c41: 	movq	0x7df0(%rsp), %xmm2
    00002c4a: 	psrldq	$0x8, %xmm1
    00002c4f: 	orl	0x7dfc(%rsp), %eax
    00002c56: 	cvttsd2si	init_value(%rip), %rcx
    00002c5f: 	paddd	%xmm1, %xmm0
    00002c63: 	addl	%edx, %eax
    00002c65: 	movq	0x7df4(%rsp), %xmm1
    00002c6e: 	por	%xmm2, %xmm1
    00002c72: 	movd	%xmm1, %edx
    00002c76: 	pshufd	$0xe5, %xmm1, %xmm6
    00002c7b: 	movdqa	%xmm0, %xmm1
    00002c7f: 	psrldq	$0x4, %xmm1
    00002c84: 	imull	$0x1f40, %ecx, %ecx
    00002c8a: 	addl	%edx, %eax
    00002c8c: 	paddd	%xmm1, %xmm0
    00002c90: 	movd	%xmm6, %edx
    00002c94: 	addl	%edx, %eax
    00002c96: 	movd	%xmm0, %edx
    00002c9a: 	addl	%edx, %eax
    00002c9c: 	cmpl	%eax, %ecx
    00002c9e: 	je	.Ltmp2060 # Offset: 11422
    00002ca0: 	movl	current_test(%rip), %edx
    00002ca6: 	movq	%r12, %rsi
    00002ca9: 	movl	$0x1, %edi
    00002cae: 	xorl	%eax, %eax
    00002cb0: 	callq	__printf_chk@PLT # Offset: 11440
    00002cb5: 	movl	iterations(%rip), %esi
    00002cbb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2060:
    00002cc0: 	addl	$0x1, %ebp
    00002cc3: 	cmpl	%esi, %ebp
    00002cc5: 	jl	.Ltmp2061 # Offset: 11461
.Ltmp2058:
    00002ccb: 	movq	%r14, %rsi
    00002cce: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002cd5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11477
    00002cda: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ce1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ce8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002cef: 	je	.Ltmp2062 # Offset: 11503
.Ltmp2086:
    00002cf5: 	movq	-0x20(%rax), %rbp
    00002cf9: 	callq	clock@PLT # Offset: 11513
    00002cfe: 	pxor	%xmm0, %xmm0
    00002d02: 	movq	%rax, end_time(%rip)
    00002d09: 	movq	%rbp, %rdi
    00002d0c: 	subq	start_time(%rip), %rax
    00002d13: 	cvtsi2sd	%rax, %xmm0
    00002d18: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d20: 	callq	_Z13record_resultdPKc # Offset: 11552
    00002d25: 	movq	0xe0(%rsp), %rdi
    00002d2d: 	cmpq	0x20(%rsp), %rdi
    00002d32: 	je	.Ltmp2063 # Offset: 11570
    00002d34: 	movq	0xf0(%rsp), %rax
    00002d3c: 	leaq	0x1(%rax), %rsi
    00002d40: 	callq	_ZdlPvm@PLT # Offset: 11584
.Ltmp2063:
    00002d45: 	leaq	DATAat0x38476(%rip), %rdx
    00002d4c: 	movq	%r15, %rsi
    00002d4f: 	movq	%r14, %rdi
    00002d52: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11602
    00002d57: 	movq	%r14, %rdx
    00002d5a: 	movl	$0x1f40, %esi
    00002d5f: 	movq	%r13, %rdi
    00002d62: 	callq	_Z10test_2termIj15custom_2term_orIjEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11618
    00002d67: 	movq	0xe0(%rsp), %rdi
    00002d6f: 	cmpq	0x20(%rsp), %rdi
    00002d74: 	je	.Ltmp2064 # Offset: 11636
    00002d76: 	movq	0xf0(%rsp), %rax
    00002d7e: 	leaq	0x1(%rax), %rsi
    00002d82: 	callq	_ZdlPvm@PLT # Offset: 11650
.Ltmp2064:
    00002d87: 	leaq	DATAat0x38480(%rip), %rdx
    00002d8e: 	movq	%r15, %rsi
    00002d91: 	movq	%r14, %rdi
    00002d94: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11668
    00002d99: 	callq	clock@PLT # Offset: 11673
    00002d9e: 	movl	iterations(%rip), %esi
    00002da4: 	xorl	%ebp, %ebp
    00002da6: 	leaq	0x7cf0(%r13), %rbx
    00002dad: 	movq	%rax, start_time(%rip)
    00002db4: 	leaq	DATAat0x381c8(%rip), %r12
    00002dbb: 	testl	%esi, %esi
    00002dbd: 	jle	.Ltmp2065 # Offset: 11709
    00002dc3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2068:
    00002dc8: 	movl	0x104(%rsp), %edx
    00002dcf: 	movq	%r13, %rax
    00002dd2: 	andl	0x100(%rsp), %edx
    00002dd9: 	pxor	%xmm0, %xmm0
    00002ddd: 	nopl	(%rax) # Size: 3
.Ltmp2066:
    00002de0: 	movdqu	0x4(%rax), %xmm1
    00002de5: 	pand	(%rax), %xmm1
    00002de9: 	addq	$0x10, %rax
    00002ded: 	paddd	%xmm1, %xmm0
    00002df1: 	cmpq	%rbx, %rax
    00002df4: 	jne	.Ltmp2066 # Offset: 11764
    00002df6: 	movdqa	%xmm0, %xmm1
    00002dfa: 	movl	0x7df8(%rsp), %eax
    00002e01: 	movq	0x7df0(%rsp), %xmm2
    00002e0a: 	psrldq	$0x8, %xmm1
    00002e0f: 	andl	0x7dfc(%rsp), %eax
    00002e16: 	cvttsd2si	init_value(%rip), %rcx
    00002e1f: 	paddd	%xmm1, %xmm0
    00002e23: 	addl	%edx, %eax
    00002e25: 	movq	0x7df4(%rsp), %xmm1
    00002e2e: 	pand	%xmm2, %xmm1
    00002e32: 	movd	%xmm1, %edx
    00002e36: 	pshufd	$0xe5, %xmm1, %xmm7
    00002e3b: 	movdqa	%xmm0, %xmm1
    00002e3f: 	psrldq	$0x4, %xmm1
    00002e44: 	imull	$0x1f40, %ecx, %ecx
    00002e4a: 	addl	%edx, %eax
    00002e4c: 	paddd	%xmm1, %xmm0
    00002e50: 	movd	%xmm7, %edx
    00002e54: 	addl	%edx, %eax
    00002e56: 	movd	%xmm0, %edx
    00002e5a: 	addl	%edx, %eax
    00002e5c: 	cmpl	%eax, %ecx
    00002e5e: 	je	.Ltmp2067 # Offset: 11870
    00002e60: 	movl	current_test(%rip), %edx
    00002e66: 	movq	%r12, %rsi
    00002e69: 	movl	$0x1, %edi
    00002e6e: 	xorl	%eax, %eax
    00002e70: 	callq	__printf_chk@PLT # Offset: 11888
    00002e75: 	movl	iterations(%rip), %esi
    00002e7b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2067:
    00002e80: 	addl	$0x1, %ebp
    00002e83: 	cmpl	%esi, %ebp
    00002e85: 	jl	.Ltmp2068 # Offset: 11909
.Ltmp2065:
    00002e8b: 	movq	%r14, %rsi
    00002e8e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002e95: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11925
    00002e9a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ea1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ea8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002eaf: 	je	.Ltmp2069 # Offset: 11951
.Ltmp2085:
    00002eb5: 	movq	-0x20(%rax), %rbp
    00002eb9: 	callq	clock@PLT # Offset: 11961
    00002ebe: 	pxor	%xmm0, %xmm0
    00002ec2: 	movq	%rax, end_time(%rip)
    00002ec9: 	movq	%rbp, %rdi
    00002ecc: 	subq	start_time(%rip), %rax
    00002ed3: 	cvtsi2sd	%rax, %xmm0
    00002ed8: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002ee0: 	callq	_Z13record_resultdPKc # Offset: 12000
    00002ee5: 	movq	0xe0(%rsp), %rdi
    00002eed: 	cmpq	0x20(%rsp), %rdi
    00002ef2: 	je	.Ltmp2070 # Offset: 12018
    00002ef4: 	movq	0xf0(%rsp), %rax
    00002efc: 	leaq	0x1(%rax), %rsi
    00002f00: 	callq	_ZdlPvm@PLT # Offset: 12032
.Ltmp2070:
    00002f05: 	leaq	DATAat0x3848f(%rip), %rdx
    00002f0c: 	movq	%r15, %rsi
    00002f0f: 	movq	%r14, %rdi
    00002f12: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12050
    00002f17: 	callq	clock@PLT # Offset: 12055
    00002f1c: 	movl	iterations(%rip), %esi
    00002f22: 	xorl	%ebp, %ebp
    00002f24: 	leaq	0x7cf0(%r13), %rbx
    00002f2b: 	movq	%rax, start_time(%rip)
    00002f32: 	leaq	DATAat0x381c8(%rip), %r12
    00002f39: 	testl	%esi, %esi
    00002f3b: 	jle	.Ltmp2071 # Offset: 12091
    00002f41: 	nopl	(%rax) # Size: 7
.Ltmp2074:
    00002f48: 	movl	0x104(%rsp), %edx
    00002f4f: 	movq	%r13, %rax
    00002f52: 	andl	0x100(%rsp), %edx
    00002f59: 	pxor	%xmm0, %xmm0
    00002f5d: 	nopl	(%rax) # Size: 3
.Ltmp2072:
    00002f60: 	movdqu	0x4(%rax), %xmm1
    00002f65: 	pand	(%rax), %xmm1
    00002f69: 	addq	$0x10, %rax
    00002f6d: 	paddd	%xmm1, %xmm0
    00002f71: 	cmpq	%rbx, %rax
    00002f74: 	jne	.Ltmp2072 # Offset: 12148
    00002f76: 	movdqa	%xmm0, %xmm1
    00002f7a: 	movl	0x7df8(%rsp), %eax
    00002f81: 	movq	0x7df0(%rsp), %xmm2
    00002f8a: 	psrldq	$0x8, %xmm1
    00002f8f: 	andl	0x7dfc(%rsp), %eax
    00002f96: 	cvttsd2si	init_value(%rip), %rcx
    00002f9f: 	paddd	%xmm1, %xmm0
    00002fa3: 	addl	%edx, %eax
    00002fa5: 	movq	0x7df4(%rsp), %xmm1
    00002fae: 	pand	%xmm2, %xmm1
    00002fb2: 	movd	%xmm1, %edx
    00002fb6: 	pshufd	$0xe5, %xmm1, %xmm4
    00002fbb: 	movdqa	%xmm0, %xmm1
    00002fbf: 	psrldq	$0x4, %xmm1
    00002fc4: 	imull	$0x1f40, %ecx, %ecx
    00002fca: 	addl	%edx, %eax
    00002fcc: 	paddd	%xmm1, %xmm0
    00002fd0: 	movd	%xmm4, %edx
    00002fd4: 	addl	%edx, %eax
    00002fd6: 	movd	%xmm0, %edx
    00002fda: 	addl	%edx, %eax
    00002fdc: 	cmpl	%eax, %ecx
    00002fde: 	je	.Ltmp2073 # Offset: 12254
    00002fe0: 	movl	current_test(%rip), %edx
    00002fe6: 	movq	%r12, %rsi
    00002fe9: 	movl	$0x1, %edi
    00002fee: 	xorl	%eax, %eax
    00002ff0: 	callq	__printf_chk@PLT # Offset: 12272
    00002ff5: 	movl	iterations(%rip), %esi
    00002ffb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2073:
    00003000: 	addl	$0x1, %ebp
    00003003: 	cmpl	%esi, %ebp
    00003005: 	jl	.Ltmp2074 # Offset: 12293
.Ltmp2071:
    0000300b: 	movq	%r14, %rsi
    0000300e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003015: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12309
    0000301a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003021: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003028: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000302f: 	je	.Ltmp2075 # Offset: 12335
.Ltmp2084:
    00003035: 	movq	-0x20(%rax), %rbp
    00003039: 	callq	clock@PLT # Offset: 12345
    0000303e: 	pxor	%xmm0, %xmm0
    00003042: 	movq	%rax, end_time(%rip)
    00003049: 	movq	%rbp, %rdi
    0000304c: 	subq	start_time(%rip), %rax
    00003053: 	cvtsi2sd	%rax, %xmm0
    00003058: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003060: 	callq	_Z13record_resultdPKc # Offset: 12384
    00003065: 	movq	0xe0(%rsp), %rdi
    0000306d: 	cmpq	0x20(%rsp), %rdi
    00003072: 	je	.Ltmp2076 # Offset: 12402
    00003074: 	movq	0xf0(%rsp), %rax
    0000307c: 	leaq	0x1(%rax), %rsi
    00003080: 	callq	_ZdlPvm@PLT # Offset: 12416
.Ltmp2076:
    00003085: 	leaq	DATAat0x38550(%rip), %rdx
    0000308c: 	movq	%r15, %rsi
    0000308f: 	movq	%r14, %rdi
    00003092: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12434
    00003097: 	movl	iterations(%rip), %esi
    0000309d: 	movq	0xe0(%rsp), %rdi
    000030a5: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 12453
    000030aa: 	movq	0xe0(%rsp), %rdi
    000030b2: 	cmpq	0x20(%rsp), %rdi
    000030b7: 	je	.Ltmp2077 # Offset: 12471
    000030b9: 	movq	0xf0(%rsp), %rax
    000030c1: 	leaq	0x1(%rax), %rsi
    000030c5: 	callq	_ZdlPvm@PLT # Offset: 12485
.Ltmp2077:
    000030ca: 	movq	0xc0(%rsp), %rdi
    000030d2: 	leaq	0xd0(%rsp), %rax
    000030da: 	cmpq	%rax, %rdi
    000030dd: 	je	.Ltmp2078 # Offset: 12509
    000030df: 	movq	0xd0(%rsp), %rax
    000030e7: 	leaq	0x1(%rax), %rsi
    000030eb: 	callq	_ZdlPvm@PLT # Offset: 12523
.Ltmp2078:
    000030f0: 	movq	0xa0(%rsp), %rdi
    000030f8: 	leaq	0xb0(%rsp), %rax
    00003100: 	cmpq	%rax, %rdi
    00003103: 	je	.Ltmp2079 # Offset: 12547
    00003105: 	movq	0xb0(%rsp), %rax
    0000310d: 	leaq	0x1(%rax), %rsi
    00003111: 	callq	_ZdlPvm@PLT # Offset: 12561
.Ltmp2079:
    00003116: 	movq	0x80(%rsp), %rdi
    0000311e: 	leaq	0x90(%rsp), %rax
    00003126: 	cmpq	%rax, %rdi
    00003129: 	je	.Ltmp2080 # Offset: 12585
    0000312b: 	movq	0x90(%rsp), %rax
    00003133: 	leaq	0x1(%rax), %rsi
    00003137: 	callq	_ZdlPvm@PLT # Offset: 12599
.Ltmp2080:
    0000313c: 	movq	0x60(%rsp), %rdi
    00003141: 	leaq	0x70(%rsp), %rax
    00003146: 	cmpq	%rax, %rdi
    00003149: 	je	.Ltmp2081 # Offset: 12617
    0000314b: 	movq	0x70(%rsp), %rax
    00003150: 	leaq	0x1(%rax), %rsi
    00003154: 	callq	_ZdlPvm@PLT # Offset: 12628
.Ltmp2081:
    00003159: 	movq	0x7e08(%rsp), %rax
    00003161: 	subq	%fs:0x28, %rax
    0000316a: 	jne	.Ltmp2082 # Offset: 12650
    00003170: 	addq	$0x7e18, %rsp
    00003177: 	popq	%rbx
    00003178: 	popq	%rbp
    00003179: 	popq	%r12
    0000317b: 	popq	%r13
    0000317d: 	popq	%r14
    0000317f: 	popq	%r15
    00003181: 	retq # Offset: 12673
.Ltmp1878:
    00003182: 	movq	-0x8(%rdx), %rax
    00003186: 	addq	$0x200, %rax
    0000318c: 	jmp	.Ltmp2083 # Offset: 12684
.Ltmp2075:
    00003191: 	movq	-0x8(%rdx), %rax
    00003195: 	addq	$0x200, %rax
    0000319b: 	jmp	.Ltmp2084 # Offset: 12699
.Ltmp2069:
    000031a0: 	movq	-0x8(%rdx), %rax
    000031a4: 	addq	$0x200, %rax
    000031aa: 	jmp	.Ltmp2085 # Offset: 12714
.Ltmp2062:
    000031af: 	movq	-0x8(%rdx), %rax
    000031b3: 	addq	$0x200, %rax
    000031b9: 	jmp	.Ltmp2086 # Offset: 12729
.Ltmp2056:
    000031be: 	movq	-0x8(%rdx), %rax
    000031c2: 	addq	$0x200, %rax
    000031c8: 	jmp	.Ltmp2087 # Offset: 12744
.Ltmp2050:
    000031cd: 	movq	-0x8(%rdx), %rax
    000031d1: 	addq	$0x200, %rax
    000031d7: 	jmp	.Ltmp2088 # Offset: 12759
.Ltmp2038:
    000031dc: 	movq	-0x8(%rdx), %rax
    000031e0: 	addq	$0x200, %rax
    000031e6: 	jmp	.Ltmp2089 # Offset: 12774
.Ltmp2032:
    000031eb: 	movq	-0x8(%rdx), %rax
    000031ef: 	addq	$0x200, %rax
    000031f5: 	jmp	.Ltmp2090 # Offset: 12789
.Ltmp2026:
    000031fa: 	movq	-0x8(%rdx), %rax
    000031fe: 	addq	$0x200, %rax
    00003204: 	jmp	.Ltmp2091 # Offset: 12804
.Ltmp2020:
    00003209: 	movq	-0x8(%rdx), %rax
    0000320d: 	addq	$0x200, %rax
    00003213: 	jmp	.Ltmp2092 # Offset: 12819
.Ltmp2014:
    00003218: 	movq	-0x8(%rdx), %rax
    0000321c: 	addq	$0x200, %rax
    00003222: 	jmp	.Ltmp2093 # Offset: 12834
.Ltmp2008:
    00003227: 	movq	-0x8(%rdx), %rax
    0000322b: 	addq	$0x200, %rax
    00003231: 	jmp	.Ltmp2094 # Offset: 12849
.Ltmp2002:
    00003236: 	movq	-0x8(%rdx), %rax
    0000323a: 	addq	$0x200, %rax
    00003240: 	jmp	.Ltmp2095 # Offset: 12864
.Ltmp1996:
    00003245: 	movq	-0x8(%rdx), %rax
    00003249: 	addq	$0x200, %rax
    0000324f: 	jmp	.Ltmp2096 # Offset: 12879
.Ltmp1990:
    00003254: 	movq	-0x8(%rdx), %rax
    00003258: 	addq	$0x200, %rax
    0000325e: 	jmp	.Ltmp2097 # Offset: 12894
.Ltmp1988:
    00003263: 	movq	-0x8(%rdx), %rax
    00003267: 	addq	$0x200, %rax
    0000326d: 	jmp	.Ltmp2098 # Offset: 12909
.Ltmp1986:
    00003272: 	movq	-0x8(%rdx), %rax
    00003276: 	addq	$0x200, %rax
    0000327c: 	jmp	.Ltmp2099 # Offset: 12924
.Ltmp1984:
    00003281: 	movq	-0x8(%rdx), %rax
    00003285: 	addq	$0x200, %rax
    0000328b: 	jmp	.Ltmp2100 # Offset: 12939
.Ltmp1982:
    00003290: 	movq	-0x8(%rdx), %rax
    00003294: 	addq	$0x200, %rax
    0000329a: 	jmp	.Ltmp2101 # Offset: 12954
.Ltmp1980:
    0000329f: 	movq	-0x8(%rdx), %rax
    000032a3: 	addq	$0x200, %rax
    000032a9: 	jmp	.Ltmp2102 # Offset: 12969
.Ltmp1978:
    000032ae: 	movq	-0x8(%rdx), %rax
    000032b2: 	addq	$0x200, %rax
    000032b8: 	jmp	.Ltmp2103 # Offset: 12984
.Ltmp1976:
    000032bd: 	movq	-0x8(%rdx), %rax
    000032c1: 	addq	$0x200, %rax
    000032c7: 	jmp	.Ltmp2104 # Offset: 12999
.Ltmp1974:
    000032cc: 	movq	-0x8(%rdx), %rax
    000032d0: 	addq	$0x200, %rax
    000032d6: 	jmp	.Ltmp2105 # Offset: 13014
.Ltmp1972:
    000032db: 	movq	-0x8(%rdx), %rax
    000032df: 	addq	$0x200, %rax
    000032e5: 	jmp	.Ltmp2106 # Offset: 13029
.Ltmp1970:
    000032ea: 	movq	-0x8(%rdx), %rax
    000032ee: 	addq	$0x200, %rax
    000032f4: 	jmp	.Ltmp2107 # Offset: 13044
.Ltmp1968:
    000032f9: 	movq	-0x8(%rdx), %rax
    000032fd: 	addq	$0x200, %rax
    00003303: 	jmp	.Ltmp2108 # Offset: 13059
.Ltmp1966:
    00003308: 	movq	-0x8(%rdx), %rax
    0000330c: 	addq	$0x200, %rax
    00003312: 	jmp	.Ltmp2109 # Offset: 13074
.Ltmp1964:
    00003317: 	movq	-0x8(%rdx), %rax
    0000331b: 	addq	$0x200, %rax
    00003321: 	jmp	.Ltmp2110 # Offset: 13089
.Ltmp1962:
    00003326: 	movq	-0x8(%rdx), %rax
    0000332a: 	addq	$0x200, %rax
    00003330: 	jmp	.Ltmp2111 # Offset: 13104
.Ltmp1960:
    00003335: 	movq	-0x8(%rdx), %rax
    00003339: 	addq	$0x200, %rax
    0000333f: 	jmp	.Ltmp2112 # Offset: 13119
.Ltmp1958:
    00003344: 	movq	-0x8(%rdx), %rax
    00003348: 	addq	$0x200, %rax
    0000334e: 	jmp	.Ltmp2113 # Offset: 13134
.Ltmp1956:
    00003353: 	movq	-0x8(%rdx), %rax
    00003357: 	addq	$0x200, %rax
    0000335d: 	jmp	.Ltmp2114 # Offset: 13149
.Ltmp1950:
    00003362: 	movq	-0x8(%rdx), %rax
    00003366: 	addq	$0x200, %rax
    0000336c: 	jmp	.Ltmp2115 # Offset: 13164
.Ltmp1944:
    00003371: 	movq	-0x8(%rdx), %rax
    00003375: 	addq	$0x200, %rax
    0000337b: 	jmp	.Ltmp2116 # Offset: 13179
.Ltmp1938:
    00003380: 	movq	-0x8(%rdx), %rax
    00003384: 	addq	$0x200, %rax
    0000338a: 	jmp	.Ltmp2117 # Offset: 13194
.Ltmp1932:
    0000338f: 	movq	-0x8(%rdx), %rax
    00003393: 	addq	$0x200, %rax
    00003399: 	jmp	.Ltmp2118 # Offset: 13209
.Ltmp1926:
    0000339e: 	movq	-0x8(%rdx), %rax
    000033a2: 	addq	$0x200, %rax
    000033a8: 	jmp	.Ltmp2119 # Offset: 13224
.Ltmp1920:
    000033ad: 	movq	-0x8(%rdx), %rax
    000033b1: 	addq	$0x200, %rax
    000033b7: 	jmp	.Ltmp2120 # Offset: 13239
.Ltmp1914:
    000033bc: 	movq	-0x8(%rdx), %rax
    000033c0: 	addq	$0x200, %rax
    000033c6: 	jmp	.Ltmp2121 # Offset: 13254
.Ltmp1908:
    000033cb: 	movq	-0x8(%rdx), %rax
    000033cf: 	addq	$0x200, %rax
    000033d5: 	jmp	.Ltmp2122 # Offset: 13269
.Ltmp1902:
    000033da: 	movq	-0x8(%rdx), %rax
    000033de: 	addq	$0x200, %rax
    000033e4: 	jmp	.Ltmp2123 # Offset: 13284
.Ltmp1896:
    000033e9: 	movq	-0x8(%rdx), %rax
    000033ed: 	addq	$0x200, %rax
    000033f3: 	jmp	.Ltmp2124 # Offset: 13299
.Ltmp1890:
    000033f8: 	movq	-0x8(%rdx), %rax
    000033fc: 	addq	$0x200, %rax
    00003402: 	jmp	.Ltmp2125 # Offset: 13314
.Ltmp1884:
    00003407: 	movq	-0x8(%rdx), %rax
    0000340b: 	addq	$0x200, %rax
    00003411: 	jmp	.Ltmp2126 # Offset: 13329
.Ltmp2082:
    00003416: 	callq	__stack_chk_fail@PLT # Offset: 13334
    0000341b: 	endbr64
.Ltmp2128:
    0000341f: 	movq	%rax, %rbx
    00003422: 	jmp	.Ltmp2127 # Offset: 13346
    00003424: 	endbr64
    00003428: 	jmp	.Ltmp2128 # Offset: 13352
    0000342a: 	endbr64
    0000342e: 	jmp	.Ltmp2128 # Offset: 13358
    00003430: 	endbr64
    00003434: 	jmp	.Ltmp2128 # Offset: 13364
.Ltmp2127:
    00003436: 	movq	0xe0(%rsp), %rdi
    0000343e: 	cmpq	0x20(%rsp), %rdi
    00003443: 	je	.Ltmp2129 # Offset: 13379
.Ltmp2136:
    00003445: 	movq	0xf0(%rsp), %rax
    0000344d: 	leaq	0x1(%rax), %rsi
    00003451: 	callq	_ZdlPvm@PLT # Offset: 13393
.Ltmp2129:
    00003456: 	movq	0x60(%rsp), %rdi
    0000345b: 	leaq	0x70(%rsp), %rax
    00003460: 	cmpq	%rax, %rdi
    00003463: 	je	.Ltmp2130 # Offset: 13411
    00003465: 	movq	0x70(%rsp), %rax
    0000346a: 	leaq	0x1(%rax), %rsi
    0000346e: 	callq	_ZdlPvm@PLT # Offset: 13422
.Ltmp2130:
    00003473: 	movq	%rbx, %rdi
    00003476: 	callq	_Unwind_Resume@PLT # Offset: 13430
    0000347b: 	endbr64
    0000347f: 	jmp	.Ltmp2128 # Offset: 13439
    00003481: 	endbr64
    00003485: 	jmp	.Ltmp2128 # Offset: 13445
    00003487: 	endbr64
    0000348b: 	jmp	.Ltmp2128 # Offset: 13451
    0000348d: 	endbr64
    00003491: 	jmp	.Ltmp2128 # Offset: 13457
    00003493: 	endbr64
    00003497: 	jmp	.Ltmp2128 # Offset: 13463
    00003499: 	endbr64
    0000349d: 	jmp	.Ltmp2128 # Offset: 13469
    0000349f: 	endbr64
    000034a3: 	jmp	.Ltmp2128 # Offset: 13475
    000034a8: 	endbr64
    000034ac: 	jmp	.Ltmp2128 # Offset: 13484
    000034b1: 	endbr64
.Ltmp2132:
    000034b5: 	movq	%rax, %rbx
    000034b8: 	jmp	.Ltmp2131 # Offset: 13496
    000034ba: 	endbr64
    000034be: 	jmp	.Ltmp2132 # Offset: 13502
    000034c0: 	endbr64
    000034c4: 	jmp	.Ltmp2132 # Offset: 13508
    000034c6: 	endbr64
    000034ca: 	movq	%rax, %rbx
    000034cd: 	jmp	.Ltmp2133 # Offset: 13517
.Ltmp2131:
    000034cf: 	movq	0xe0(%rsp), %rdi
    000034d7: 	cmpq	0x20(%rsp), %rdi
    000034dc: 	je	.Ltmp2133 # Offset: 13532
    000034de: 	movq	0xf0(%rsp), %rax
    000034e6: 	leaq	0x1(%rax), %rsi
    000034ea: 	callq	_ZdlPvm@PLT # Offset: 13546
.Ltmp2133:
    000034ef: 	movq	0x80(%rsp), %rdi
    000034f7: 	leaq	0x90(%rsp), %rax
    000034ff: 	cmpq	%rax, %rdi
    00003502: 	je	.Ltmp2129 # Offset: 13570
    00003508: 	movq	0x90(%rsp), %rax
    00003510: 	leaq	0x1(%rax), %rsi
    00003514: 	callq	_ZdlPvm@PLT # Offset: 13588
    00003519: 	jmp	.Ltmp2129 # Offset: 13593
    0000351e: 	endbr64
    00003522: 	jmp	.Ltmp2132 # Offset: 13602
    00003524: 	endbr64
    00003528: 	jmp	.Ltmp2132 # Offset: 13608
    0000352a: 	endbr64
    0000352e: 	jmp	.Ltmp2132 # Offset: 13614
    00003530: 	endbr64
    00003534: 	jmp	.Ltmp2132 # Offset: 13620
    00003539: 	endbr64
    0000353d: 	jmp	.Ltmp2132 # Offset: 13629
    00003542: 	endbr64
    00003546: 	jmp	.Ltmp2132 # Offset: 13638
    0000354b: 	endbr64
    0000354f: 	jmp	.Ltmp2132 # Offset: 13647
    00003554: 	endbr64
    00003558: 	jmp	.Ltmp2132 # Offset: 13656
    0000355d: 	endbr64
    00003561: 	jmp	.Ltmp2128 # Offset: 13665
    00003566: 	endbr64
.Ltmp2139:
    0000356a: 	movq	%rax, %rbx
    0000356d: 	jmp	.Ltmp2134 # Offset: 13677
    0000356f: 	endbr64
    00003573: 	movq	%rax, %rbx
    00003576: 	jmp	.Ltmp2135 # Offset: 13686
    00003578: 	endbr64
    0000357c: 	movq	%rax, %rbx
    0000357f: 	jmp	.Ltmp2129 # Offset: 13695
.Ltmp2135:
    00003584: 	movq	0xe0(%rsp), %rdi
    0000358c: 	leaq	0xf0(%rsp), %rax
    00003594: 	cmpq	%rax, %rdi
    00003597: 	jne	.Ltmp2136 # Offset: 13719
    0000359d: 	jmp	.Ltmp2129 # Offset: 13725
.Ltmp2134:
    000035a2: 	movq	0xe0(%rsp), %rdi
    000035aa: 	cmpq	0x20(%rsp), %rdi
    000035af: 	je	.Ltmp2137 # Offset: 13743
    000035b1: 	movq	0xf0(%rsp), %rax
    000035b9: 	leaq	0x1(%rax), %rsi
    000035bd: 	callq	_ZdlPvm@PLT # Offset: 13757
.Ltmp2137:
    000035c2: 	movq	0xc0(%rsp), %rdi
    000035ca: 	leaq	0xd0(%rsp), %rax
    000035d2: 	cmpq	%rax, %rdi
    000035d5: 	je	.Ltmp2138 # Offset: 13781
    000035d7: 	movq	0xd0(%rsp), %rax
    000035df: 	leaq	0x1(%rax), %rsi
    000035e3: 	callq	_ZdlPvm@PLT # Offset: 13795
.Ltmp2138:
    000035e8: 	movq	0xa0(%rsp), %rdi
    000035f0: 	leaq	0xb0(%rsp), %rax
    000035f8: 	cmpq	%rax, %rdi
    000035fb: 	je	.Ltmp2133 # Offset: 13819
    00003601: 	movq	0xb0(%rsp), %rax
    00003609: 	leaq	0x1(%rax), %rsi
    0000360d: 	callq	_ZdlPvm@PLT # Offset: 13837
    00003612: 	jmp	.Ltmp2133 # Offset: 13842
    00003617: 	endbr64
    0000361b: 	jmp	.Ltmp2139 # Offset: 13851
    00003620: 	endbr64
    00003624: 	jmp	.Ltmp2139 # Offset: 13860
    00003629: 	endbr64
    0000362d: 	jmp	.Ltmp2139 # Offset: 13869
    00003632: 	endbr64
    00003636: 	jmp	.Ltmp2139 # Offset: 13878
    0000363b: 	endbr64
    0000363f: 	jmp	.Ltmp2132 # Offset: 13887
    00003644: 	endbr64
    00003648: 	jmp	.Ltmp2132 # Offset: 13896
    0000364d: 	endbr64
    00003651: 	jmp	.Ltmp2132 # Offset: 13905
    00003656: 	endbr64
    0000365a: 	jmp	.Ltmp2132 # Offset: 13914
    0000365f: 	endbr64
    00003663: 	jmp	.Ltmp2132 # Offset: 13923
    00003668: 	endbr64
    0000366c: 	jmp	.Ltmp2132 # Offset: 13932
    00003671: 	endbr64
.Ltmp2141:
    00003675: 	movq	%rax, %rbx
    00003678: 	jmp	.Ltmp2140 # Offset: 13944
    0000367d: 	endbr64
    00003681: 	movq	%rax, %rbx
    00003684: 	jmp	.Ltmp2138 # Offset: 13956
    00003689: 	endbr64
    0000368d: 	jmp	.Ltmp2141 # Offset: 13965
    0000368f: 	endbr64
    00003693: 	jmp	.Ltmp2141 # Offset: 13971
    00003695: 	endbr64
    00003699: 	jmp	.Ltmp2141 # Offset: 13977
    0000369b: 	endbr64
    0000369f: 	jmp	.Ltmp2139 # Offset: 13983
    000036a4: 	endbr64
    000036a8: 	jmp	.Ltmp2139 # Offset: 13992
    000036ad: 	endbr64
    000036b1: 	jmp	.Ltmp2139 # Offset: 14001
    000036b6: 	endbr64
    000036ba: 	jmp	.Ltmp2141 # Offset: 14010
    000036bc: 	endbr64
    000036c0: 	jmp	.Ltmp2139 # Offset: 14016
    000036c5: 	endbr64
    000036c9: 	movq	%rax, %rbx
    000036cc: 	jmp	.Ltmp2137 # Offset: 14028
    000036d1: 	endbr64
    000036d5: 	jmp	.Ltmp2139 # Offset: 14037
    000036da: 	endbr64
    000036de: 	jmp	.Ltmp2139 # Offset: 14046
    000036e3: 	endbr64
    000036e7: 	jmp	.Ltmp2139 # Offset: 14055
    000036ec: 	endbr64
    000036f0: 	jmp	.Ltmp2139 # Offset: 14064
    000036f5: 	endbr64
    000036f9: 	jmp	.Ltmp2141 # Offset: 14073
    000036fe: 	endbr64
    00003702: 	jmp	.Ltmp2141 # Offset: 14082
    00003707: 	endbr64
    0000370b: 	jmp	.Ltmp2141 # Offset: 14091
.Ltmp2140:
    00003710: 	movq	0xe0(%rsp), %rdi
    00003718: 	cmpq	0x20(%rsp), %rdi
    0000371d: 	je	.Ltmp2138 # Offset: 14109
    00003723: 	movq	0xf0(%rsp), %rax
    0000372b: 	leaq	0x1(%rax), %rsi
    0000372f: 	callq	_ZdlPvm@PLT # Offset: 14127
    00003734: 	jmp	.Ltmp2138 # Offset: 14132
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIjEvd"

Binary Function "_Z10test_2termIl16custom_2term_subIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 103
  State       : disassembled
  Address     : 0x1e210
  Size        : 0x2d2
  MaxSize     : 0x2e0
  Offset      : 0x1e210
  Section     : .text
  Orc Section : .local.text._Z10test_2termIl16custom_2term_subIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0102:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	movq	%rdx, %r12
    00000015: 	pushq	%rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movl	iterations(%rip), %r10d
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	testl	%r10d, %r10d
    00000041: 	jle	.Ltmp2142 # Offset: 65
    00000047: 	leal	-0x4(%r14), %eax
    0000004b: 	movq	0x8(%r13), %r9
    0000004f: 	movq	(%r13), %r8
    00000053: 	xorl	%r15d, %r15d
    00000056: 	shrl	%eax
    00000058: 	leaq	DATAat0x381c8(%rip), %rbp
    0000005f: 	leaq	0x5(%rax,%rax), %rbx
    00000064: 	nopl	(%rax) # Size: 4
.Ltmp2148:
    00000068: 	movq	%r9, %rdx
    0000006b: 	movq	%r8, %rdi
    0000006e: 	movq	%r8, %rax
    00000071: 	imulq	%r8, %rdx
    00000075: 	imulq	%r8, %rdi
    00000079: 	addq	%rdx, %rdx
    0000007c: 	subq	%rdx, %rdi
    0000007f: 	movq	%r9, %rdx
    00000082: 	imulq	%r9, %rdx
    00000086: 	addq	%rdx, %rdi
    00000089: 	cmpl	$0x1, %r14d
    0000008d: 	jle	.Ltmp2143 # Offset: 141
    00000093: 	cmpl	$0x3, %r14d
    00000097: 	jle	.Ltmp2144 # Offset: 151
    0000009d: 	movl	$0x3, %ecx
.Ltmp2145:
    000000a2: 	movq	-0x10(%r13,%rcx,8), %rdx
    000000a7: 	movq	%rax, %r11
    000000aa: 	imulq	%rax, %r11
    000000ae: 	imulq	%rdx, %rax
    000000b2: 	movq	%rdx, %rsi
    000000b5: 	imulq	%rdx, %rsi
    000000b9: 	addq	%rax, %rax
    000000bc: 	subq	%rax, %r11
    000000bf: 	leaq	(%r11,%rsi), %rax
    000000c3: 	addq	%rax, %rdi
    000000c6: 	movq	-0x8(%r13,%rcx,8), %rax
    000000cb: 	imulq	%rax, %rdx
    000000cf: 	addq	%rdx, %rdx
    000000d2: 	subq	%rdx, %rsi
    000000d5: 	movq	%rax, %rdx
    000000d8: 	imulq	%rax, %rdx
    000000dc: 	addq	%rdx, %rsi
    000000df: 	addq	%rsi, %rdi
    000000e2: 	movslq	%ecx, %rsi
    000000e5: 	addq	$0x2, %rcx
    000000e9: 	cmpq	%rcx, %rbx
    000000ec: 	jne	.Ltmp2145 # Offset: 236
    000000ee: 	nop # Size: 2
.Ltmp2146:
    000000f0: 	movq	-0x8(%r13,%rsi,8), %rax
    000000f5: 	movq	(%r13,%rsi,8), %rcx
    000000fa: 	addq	$0x1, %rsi
    000000fe: 	movq	%rax, %rdx
    00000101: 	imulq	%rax, %rdx
    00000105: 	imulq	%rcx, %rax
    00000109: 	imulq	%rcx, %rcx
    0000010d: 	addq	%rax, %rax
    00000110: 	subq	%rax, %rdx
    00000113: 	addq	%rcx, %rdx
    00000116: 	addq	%rdx, %rdi
    00000119: 	cmpl	%esi, %r14d
    0000011c: 	jg	.Ltmp2146 # Offset: 284
.Ltmp2143:
    0000011e: 	testq	%rdi, %rdi
    00000121: 	je	.Ltmp2147 # Offset: 289
    00000123: 	movl	current_test(%rip), %edx
    00000129: 	movq	%rbp, %rsi
    0000012c: 	movl	$0x1, %edi
    00000131: 	xorl	%eax, %eax
    00000133: 	addl	$0x1, %r15d
    00000137: 	callq	__printf_chk@PLT # Offset: 311
    0000013c: 	movl	iterations(%rip), %r10d
    00000143: 	cmpl	%r15d, %r10d
    00000146: 	jle	.Ltmp2142 # Offset: 326
    00000148: 	movq	0x8(%r13), %r9
    0000014c: 	movq	(%r13), %r8
    00000150: 	jmp	.Ltmp2148 # Offset: 336
    00000155: 	nopl	(%rax) # Size: 3
.Ltmp2147:
    00000158: 	addl	$0x1, %r15d
    0000015c: 	cmpl	%r10d, %r15d
    0000015f: 	jl	.Ltmp2148 # Offset: 351
.Ltmp2142:
    00000165: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000016c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000173: 	subq	$0x20, %rax
    00000177: 	cmpq	%rax, %rbx
    0000017a: 	je	.Ltmp2149 # Offset: 378
    00000180: 	leaq	0x10(%rbx), %rdi
    00000184: 	movq	%rdi, (%rbx)
    00000187: 	movq	(%r12), %rbp
    0000018b: 	movq	0x8(%r12), %r12
    00000190: 	movq	%rbp, %rax
    00000193: 	addq	%r12, %rax
    00000196: 	je	.Ltmp2150 # Offset: 406
    00000198: 	testq	%rbp, %rbp
    0000019b: 	je	.Ltmp2151 # Offset: 411
.Ltmp2150:
    000001a1: 	movq	%r12, (%rsp)
    000001a5: 	cmpq	$0xf, %r12
    000001a9: 	ja	.Ltmp2152 # Offset: 425
    000001af: 	cmpq	$0x1, %r12
    000001b3: 	jne	.Ltmp2153 # Offset: 435
    000001b9: 	movzbl	(%rbp), %eax
    000001bd: 	movb	%al, 0x10(%rbx)
.Ltmp2156:
    000001c0: 	movq	%r12, 0x8(%rbx)
    000001c4: 	movb	$0x0, (%rdi,%r12)
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d7: 	addq	$0x20, %rax
    000001db: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e9: 	je	.Ltmp2154 # Offset: 489
.Ltmp2157:
    000001ef: 	movq	-0x20(%rax), %rbp
    000001f3: 	callq	clock@PLT # Offset: 499
    000001f8: 	movq	%rax, end_time(%rip)
    000001ff: 	movq	0x8(%rsp), %rdx
    00000204: 	subq	%fs:0x28, %rdx
    0000020d: 	jne	.Ltmp2155 # Offset: 525
    00000213: 	subq	start_time(%rip), %rax
    0000021a: 	pxor	%xmm0, %xmm0
    0000021e: 	movq	%rbp, %rdi
    00000221: 	cvtsi2sd	%rax, %xmm0
    00000226: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000022e: 	addq	$0x18, %rsp
    00000232: 	popq	%rbx
    00000233: 	popq	%rbp
    00000234: 	popq	%r12
    00000236: 	popq	%r13
    00000238: 	popq	%r14
    0000023a: 	popq	%r15
    0000023c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 572
.Ltmp2144:
    00000241: 	movl	$0x1, %esi
    00000246: 	jmp	.Ltmp2146 # Offset: 582
.Ltmp2152:
    0000024b: 	movq	%rbx, %rdi
    0000024e: 	movq	%rsp, %rsi
    00000251: 	xorl	%edx, %edx
    00000253: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 595
    00000258: 	movq	%rax, (%rbx)
    0000025b: 	movq	%rax, %rdi
    0000025e: 	movq	(%rsp), %rax
    00000262: 	movq	%rax, 0x10(%rbx)
.Ltmp2158:
    00000266: 	movq	%r12, %rdx
    00000269: 	movq	%rbp, %rsi
    0000026c: 	callq	memcpy@PLT # Offset: 620
    00000271: 	movq	(%rsp), %r12
    00000275: 	movq	(%rbx), %rdi
    00000278: 	jmp	.Ltmp2156 # Offset: 632
.Ltmp2149:
    0000027d: 	movq	%r12, %rsi
    00000280: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000287: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 647
    0000028c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000293: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a1: 	jne	.Ltmp2157 # Offset: 673
.Ltmp2154:
    000002a7: 	movq	-0x8(%rdx), %rax
    000002ab: 	addq	$0x200, %rax
    000002b1: 	jmp	.Ltmp2157 # Offset: 689
.Ltmp2153:
    000002b6: 	testq	%r12, %r12
    000002b9: 	je	.Ltmp2156 # Offset: 697
    000002bf: 	jmp	.Ltmp2158 # Offset: 703
.Ltmp2155:
    000002c1: 	callq	__stack_chk_fail@PLT # Offset: 705
.Ltmp2151:
    000002c6: 	leaq	DATAat0x38110(%rip), %rdi
    000002cd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 717
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIl16custom_2term_subIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIlEvd" after disassembly {
  Number      : 104
  State       : disassembled
  Address     : 0x1e4f0
  Size        : 0x3447
  MaxSize     : 0x3450
  Offset      : 0x1e4f0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0103:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2159:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2159 # Offset: 37
    00000027: 	subq	$0xb18, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movsd	%xmm0, 0x10(%rsp)
    0000004b: 	leaq	0x40(%rsp), %rsi
    00000050: 	leaq	0xfb00(%rsp), %rbx
    00000058: 	movq	%fs:0x28, %rax
    00000061: 	movq	%rax, 0xfb08(%rsp)
    00000069: 	xorl	%eax, %eax
    0000006b: 	leaq	0x70(%rsp), %rax
    00000070: 	movl	$0x36746e69, 0x70(%rsp)
    00000078: 	movq	%rax, 0x38(%rsp)
    0000007d: 	movq	%rax, 0x60(%rsp)
    00000082: 	movl	$0x5f34, %eax
    00000087: 	movw	%ax, 0x74(%rsp)
    0000008c: 	movb	$0x74, 0x76(%rsp)
    00000091: 	movq	$0x7, 0x68(%rsp)
    0000009a: 	movb	$0x0, 0x77(%rsp)
    0000009f: 	movaps	%xmm2, 0x40(%rsp)
    000000a4: 	movaps	%xmm3, 0x50(%rsp)
    000000a9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 169
    000000ae: 	movsd	0x10(%rsp), %xmm0
    000000b4: 	cvttsd2si	init_value(%rip), %rax
    000000bd: 	movq	%rax, %xmm1
    000000c2: 	leaq	0x100(%rsp), %rax
    000000ca: 	movq	%rax, 0x8(%rsp)
    000000cf: 	punpcklqdq	%xmm1, %xmm1
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2160:
    000000d8: 	movaps	%xmm1, (%rax)
    000000db: 	addq	$0x10, %rax
    000000df: 	cmpq	%rax, %rbx
    000000e2: 	jne	.Ltmp2160 # Offset: 226
    000000e4: 	cvttsd2si	%xmm0, %rbp
    000000e9: 	leaq	0x2(%rbp), %rax
    000000ed: 	leaq	(%rbp,%rbp), %r12
    000000f2: 	movq	%rax, %rdi
    000000f5: 	movq	%rax, 0x30(%rsp)
    000000fa: 	movq	%r12, %rax
    000000fd: 	cqto
    000000ff: 	idivq	%rdi
    00000102: 	leaq	0xe0(%rsp), %rdi
    0000010a: 	leaq	DATAat0x381d8(%rip), %rdx
    00000111: 	movq	%rdi, 0x10(%rsp)
    00000116: 	leaq	(%rax,%rbp), %r13
    0000011a: 	leaq	0x60(%rsp), %rax
    0000011f: 	movq	%rax, %rsi
    00000122: 	movq	%rax, 0x20(%rsp)
    00000127: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 295
    0000012c: 	callq	clock@PLT # Offset: 300
    00000131: 	movl	iterations(%rip), %ecx
    00000137: 	xorl	%r14d, %r14d
    0000013a: 	leaq	DATAat0x381c8(%rip), %r15
    00000141: 	movq	%rax, start_time(%rip)
    00000148: 	testl	%ecx, %ecx
    0000014a: 	jle	.Ltmp2161 # Offset: 330
    0000014c: 	nopl	(%rax) # Size: 4
.Ltmp2164:
    00000150: 	movq	0x8(%rsp), %rax
    00000155: 	pxor	%xmm0, %xmm0
    00000159: 	nopl	(%rax) # Size: 7
.Ltmp2162:
    00000160: 	paddq	(%rax), %xmm0
    00000164: 	addq	$0x10, %rax
    00000168: 	cmpq	%rbx, %rax
    0000016b: 	jne	.Ltmp2162 # Offset: 363
    0000016d: 	cvttsd2si	init_value(%rip), %rdx
    00000176: 	movdqa	%xmm0, %xmm1
    0000017a: 	psrldq	$0x8, %xmm1
    0000017f: 	paddq	%xmm1, %xmm0
    00000183: 	movq	%xmm0, %rax
    00000188: 	imulq	$0x1f40, %rdx, %rdx
    0000018f: 	cmpq	%rax, %rdx
    00000192: 	je	.Ltmp2163 # Offset: 402
    00000194: 	movl	current_test(%rip), %edx
    0000019a: 	movq	%r15, %rsi
    0000019d: 	movl	$0x1, %edi
    000001a2: 	xorl	%eax, %eax
    000001a4: 	callq	__printf_chk@PLT # Offset: 420
    000001a9: 	movl	iterations(%rip), %ecx
.Ltmp2163:
    000001af: 	addl	$0x1, %r14d
    000001b3: 	cmpl	%ecx, %r14d
    000001b6: 	jl	.Ltmp2164 # Offset: 438
.Ltmp2161:
    000001b8: 	movq	0x10(%rsp), %rsi
    000001bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 452
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001de: 	je	.Ltmp2165 # Offset: 478
.Ltmp2365:
    000001e4: 	movq	-0x20(%rax), %r14
    000001e8: 	callq	clock@PLT # Offset: 488
    000001ed: 	pxor	%xmm0, %xmm0
    000001f1: 	movq	%rax, end_time(%rip)
    000001f8: 	movq	%r14, %rdi
    000001fb: 	subq	start_time(%rip), %rax
    00000202: 	cvtsi2sd	%rax, %xmm0
    00000207: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000020f: 	callq	_Z13record_resultdPKc # Offset: 527
    00000214: 	movq	0xe0(%rsp), %rdi
    0000021c: 	leaq	0xf0(%rsp), %rax
    00000224: 	movq	%rax, 0x18(%rsp)
    00000229: 	cmpq	%rax, %rdi
    0000022c: 	je	.Ltmp2166 # Offset: 556
    0000022e: 	movq	0xf0(%rsp), %rax
    00000236: 	leaq	0x1(%rax), %rsi
    0000023a: 	callq	_ZdlPvm@PLT # Offset: 570
.Ltmp2166:
    0000023f: 	movq	0x20(%rsp), %rsi
    00000244: 	movq	0x10(%rsp), %rdi
    00000249: 	leaq	DATAat0x381de(%rip), %rdx
    00000250: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 592
    00000255: 	callq	clock@PLT # Offset: 597
    0000025a: 	movl	iterations(%rip), %ecx
    00000260: 	xorl	%r14d, %r14d
    00000263: 	leaq	DATAat0x381c8(%rip), %r15
    0000026a: 	movq	%rax, start_time(%rip)
    00000271: 	testl	%ecx, %ecx
    00000273: 	jle	.Ltmp2167 # Offset: 627
    00000275: 	nopl	(%rax) # Size: 3
.Ltmp2170:
    00000278: 	movq	0x8(%rsp), %rax
    0000027d: 	pxor	%xmm0, %xmm0
    00000281: 	nopl	(%rax) # Size: 7
.Ltmp2168:
    00000288: 	paddq	(%rax), %xmm0
    0000028c: 	addq	$0x10, %rax
    00000290: 	cmpq	%rax, %rbx
    00000293: 	jne	.Ltmp2168 # Offset: 659
    00000295: 	cvttsd2si	init_value(%rip), %rdx
    0000029e: 	movdqa	%xmm0, %xmm1
    000002a2: 	psrldq	$0x8, %xmm1
    000002a7: 	paddq	%xmm1, %xmm0
    000002ab: 	movq	%xmm0, %rax
    000002b0: 	imulq	$0x1f40, %rdx, %rdx
    000002b7: 	cmpq	%rax, %rdx
    000002ba: 	je	.Ltmp2169 # Offset: 698
    000002bc: 	movl	current_test(%rip), %edx
    000002c2: 	movq	%r15, %rsi
    000002c5: 	movl	$0x1, %edi
    000002ca: 	xorl	%eax, %eax
    000002cc: 	callq	__printf_chk@PLT # Offset: 716
    000002d1: 	movl	iterations(%rip), %ecx
.Ltmp2169:
    000002d7: 	addl	$0x1, %r14d
    000002db: 	cmpl	%ecx, %r14d
    000002de: 	jl	.Ltmp2170 # Offset: 734
.Ltmp2167:
    000002e0: 	movq	0x10(%rsp), %rsi
    000002e5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002ec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 748
    000002f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002f8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002ff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000306: 	je	.Ltmp2171 # Offset: 774
.Ltmp2407:
    0000030c: 	movq	-0x20(%rax), %r14
    00000310: 	callq	clock@PLT # Offset: 784
    00000315: 	pxor	%xmm0, %xmm0
    00000319: 	movq	%rax, end_time(%rip)
    00000320: 	movq	%r14, %rdi
    00000323: 	subq	start_time(%rip), %rax
    0000032a: 	cvtsi2sd	%rax, %xmm0
    0000032f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000337: 	callq	_Z13record_resultdPKc # Offset: 823
    0000033c: 	movq	0xe0(%rsp), %rdi
    00000344: 	cmpq	0x18(%rsp), %rdi
    00000349: 	je	.Ltmp2172 # Offset: 841
    0000034b: 	movq	0xf0(%rsp), %rax
    00000353: 	leaq	0x1(%rax), %rsi
    00000357: 	callq	_ZdlPvm@PLT # Offset: 855
.Ltmp2172:
    0000035c: 	movq	0x20(%rsp), %rsi
    00000361: 	movq	0x10(%rsp), %rdi
    00000366: 	leaq	DATAat0x381e8(%rip), %rdx
    0000036d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 877
    00000372: 	callq	clock@PLT # Offset: 882
    00000377: 	movl	iterations(%rip), %ecx
    0000037d: 	xorl	%r14d, %r14d
    00000380: 	leaq	DATAat0x381c8(%rip), %r15
    00000387: 	movq	%rax, start_time(%rip)
    0000038e: 	testl	%ecx, %ecx
    00000390: 	jle	.Ltmp2173 # Offset: 912
    00000392: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2176:
    00000398: 	movq	0x8(%rsp), %rax
    0000039d: 	pxor	%xmm0, %xmm0
    000003a1: 	nopl	(%rax) # Size: 7
.Ltmp2174:
    000003a8: 	paddq	(%rax), %xmm0
    000003ac: 	addq	$0x10, %rax
    000003b0: 	cmpq	%rbx, %rax
    000003b3: 	jne	.Ltmp2174 # Offset: 947
    000003b5: 	cvttsd2si	init_value(%rip), %rdx
    000003be: 	movdqa	%xmm0, %xmm1
    000003c2: 	psrldq	$0x8, %xmm1
    000003c7: 	paddq	%xmm1, %xmm0
    000003cb: 	movq	%xmm0, %rax
    000003d0: 	imulq	$0x1f40, %rdx, %rdx
    000003d7: 	cmpq	%rax, %rdx
    000003da: 	je	.Ltmp2175 # Offset: 986
    000003dc: 	movl	current_test(%rip), %edx
    000003e2: 	movq	%r15, %rsi
    000003e5: 	movl	$0x1, %edi
    000003ea: 	xorl	%eax, %eax
    000003ec: 	callq	__printf_chk@PLT # Offset: 1004
    000003f1: 	movl	iterations(%rip), %ecx
.Ltmp2175:
    000003f7: 	addl	$0x1, %r14d
    000003fb: 	cmpl	%ecx, %r14d
    000003fe: 	jl	.Ltmp2176 # Offset: 1022
.Ltmp2173:
    00000400: 	movq	0x10(%rsp), %rsi
    00000405: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000040c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1036
    00000411: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000418: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000041f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000426: 	je	.Ltmp2177 # Offset: 1062
.Ltmp2406:
    0000042c: 	movq	-0x20(%rax), %r14
    00000430: 	callq	clock@PLT # Offset: 1072
    00000435: 	pxor	%xmm0, %xmm0
    00000439: 	movq	%rax, end_time(%rip)
    00000440: 	movq	%r14, %rdi
    00000443: 	subq	start_time(%rip), %rax
    0000044a: 	cvtsi2sd	%rax, %xmm0
    0000044f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000457: 	callq	_Z13record_resultdPKc # Offset: 1111
    0000045c: 	movq	0xe0(%rsp), %rdi
    00000464: 	cmpq	0x18(%rsp), %rdi
    00000469: 	je	.Ltmp2178 # Offset: 1129
    0000046b: 	movq	0xf0(%rsp), %rax
    00000473: 	leaq	0x1(%rax), %rsi
    00000477: 	callq	_ZdlPvm@PLT # Offset: 1143
.Ltmp2178:
    0000047c: 	movq	0x20(%rsp), %rsi
    00000481: 	movq	0x10(%rsp), %rdi
    00000486: 	leaq	DATAat0x381f7(%rip), %rdx
    0000048d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1165
    00000492: 	callq	clock@PLT # Offset: 1170
    00000497: 	movl	iterations(%rip), %ecx
    0000049d: 	xorl	%r14d, %r14d
    000004a0: 	leaq	DATAat0x381c8(%rip), %r15
    000004a7: 	movq	%rax, start_time(%rip)
    000004ae: 	testl	%ecx, %ecx
    000004b0: 	jle	.Ltmp2179 # Offset: 1200
    000004b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2182:
    000004b8: 	movq	0x8(%rsp), %rax
    000004bd: 	pxor	%xmm0, %xmm0
    000004c1: 	nopl	(%rax) # Size: 7
.Ltmp2180:
    000004c8: 	psubq	(%rax), %xmm0
    000004cc: 	addq	$0x10, %rax
    000004d0: 	cmpq	%rax, %rbx
    000004d3: 	jne	.Ltmp2180 # Offset: 1235
    000004d5: 	cvttsd2si	init_value(%rip), %rdx
    000004de: 	movdqa	%xmm0, %xmm1
    000004e2: 	psrldq	$0x8, %xmm1
    000004e7: 	paddq	%xmm1, %xmm0
    000004eb: 	movq	%xmm0, %rax
    000004f0: 	imulq	$-0x1f40, %rdx, %rdx
    000004f7: 	cmpq	%rax, %rdx
    000004fa: 	je	.Ltmp2181 # Offset: 1274
    000004fc: 	movl	current_test(%rip), %edx
    00000502: 	movq	%r15, %rsi
    00000505: 	movl	$0x1, %edi
    0000050a: 	xorl	%eax, %eax
    0000050c: 	callq	__printf_chk@PLT # Offset: 1292
    00000511: 	movl	iterations(%rip), %ecx
.Ltmp2181:
    00000517: 	addl	$0x1, %r14d
    0000051b: 	cmpl	%ecx, %r14d
    0000051e: 	jl	.Ltmp2182 # Offset: 1310
.Ltmp2179:
    00000520: 	movq	0x10(%rsp), %rsi
    00000525: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000052c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1324
    00000531: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000538: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000053f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000546: 	je	.Ltmp2183 # Offset: 1350
.Ltmp2405:
    0000054c: 	movq	-0x20(%rax), %r14
    00000550: 	callq	clock@PLT # Offset: 1360
    00000555: 	pxor	%xmm0, %xmm0
    00000559: 	movq	%rax, end_time(%rip)
    00000560: 	movq	%r14, %rdi
    00000563: 	subq	start_time(%rip), %rax
    0000056a: 	cvtsi2sd	%rax, %xmm0
    0000056f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000577: 	callq	_Z13record_resultdPKc # Offset: 1399
    0000057c: 	movq	0xe0(%rsp), %rdi
    00000584: 	cmpq	0x18(%rsp), %rdi
    00000589: 	je	.Ltmp2184 # Offset: 1417
    0000058b: 	movq	0xf0(%rsp), %rax
    00000593: 	leaq	0x1(%rax), %rsi
    00000597: 	callq	_ZdlPvm@PLT # Offset: 1431
.Ltmp2184:
    0000059c: 	movq	0x20(%rsp), %rsi
    000005a1: 	movq	0x10(%rsp), %rdi
    000005a6: 	leaq	DATAat0x381ff(%rip), %rdx
    000005ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1453
    000005b2: 	callq	clock@PLT # Offset: 1458
    000005b7: 	movl	iterations(%rip), %ecx
    000005bd: 	xorl	%r14d, %r14d
    000005c0: 	leaq	DATAat0x381c8(%rip), %r15
    000005c7: 	movq	%rax, start_time(%rip)
    000005ce: 	testl	%ecx, %ecx
    000005d0: 	jle	.Ltmp2185 # Offset: 1488
    000005d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2188:
    000005d8: 	movq	0x8(%rsp), %rax
    000005dd: 	pxor	%xmm0, %xmm0
    000005e1: 	nopl	(%rax) # Size: 7
.Ltmp2186:
    000005e8: 	paddq	(%rax), %xmm0
    000005ec: 	addq	$0x10, %rax
    000005f0: 	cmpq	%rbx, %rax
    000005f3: 	jne	.Ltmp2186 # Offset: 1523
    000005f5: 	cvttsd2si	init_value(%rip), %rdx
    000005fe: 	movdqa	%xmm0, %xmm1
    00000602: 	psrldq	$0x8, %xmm1
    00000607: 	paddq	%xmm1, %xmm0
    0000060b: 	movq	%xmm0, %rax
    00000610: 	imulq	$0x1f40, %rdx, %rdx
    00000617: 	cmpq	%rax, %rdx
    0000061a: 	je	.Ltmp2187 # Offset: 1562
    0000061c: 	movl	current_test(%rip), %edx
    00000622: 	movq	%r15, %rsi
    00000625: 	movl	$0x1, %edi
    0000062a: 	xorl	%eax, %eax
    0000062c: 	callq	__printf_chk@PLT # Offset: 1580
    00000631: 	movl	iterations(%rip), %ecx
.Ltmp2187:
    00000637: 	addl	$0x1, %r14d
    0000063b: 	cmpl	%ecx, %r14d
    0000063e: 	jl	.Ltmp2188 # Offset: 1598
.Ltmp2185:
    00000640: 	movq	0x10(%rsp), %rsi
    00000645: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000064c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1612
    00000651: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000658: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000065f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000666: 	je	.Ltmp2189 # Offset: 1638
.Ltmp2404:
    0000066c: 	movq	-0x20(%rax), %r14
    00000670: 	callq	clock@PLT # Offset: 1648
    00000675: 	pxor	%xmm0, %xmm0
    00000679: 	movq	%rax, end_time(%rip)
    00000680: 	movq	%r14, %rdi
    00000683: 	subq	start_time(%rip), %rax
    0000068a: 	cvtsi2sd	%rax, %xmm0
    0000068f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000697: 	callq	_Z13record_resultdPKc # Offset: 1687
    0000069c: 	movq	0xe0(%rsp), %rdi
    000006a4: 	cmpq	0x18(%rsp), %rdi
    000006a9: 	je	.Ltmp2190 # Offset: 1705
    000006ab: 	movq	0xf0(%rsp), %rax
    000006b3: 	leaq	0x1(%rax), %rsi
    000006b7: 	callq	_ZdlPvm@PLT # Offset: 1719
.Ltmp2190:
    000006bc: 	movq	0x20(%rsp), %rsi
    000006c1: 	movq	0x10(%rsp), %rdi
    000006c6: 	leaq	DATAat0x3820d(%rip), %rdx
    000006cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1741
    000006d2: 	callq	clock@PLT # Offset: 1746
    000006d7: 	movl	iterations(%rip), %ecx
    000006dd: 	xorl	%r14d, %r14d
    000006e0: 	leaq	DATAat0x381c8(%rip), %r15
    000006e7: 	movq	%rax, start_time(%rip)
    000006ee: 	testl	%ecx, %ecx
    000006f0: 	jle	.Ltmp2191 # Offset: 1776
    000006f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2194:
    000006f8: 	movq	0x8(%rsp), %rax
    000006fd: 	pxor	%xmm0, %xmm0
    00000701: 	nopl	(%rax) # Size: 7
.Ltmp2192:
    00000708: 	psubq	(%rax), %xmm0
    0000070c: 	addq	$0x10, %rax
    00000710: 	cmpq	%rax, %rbx
    00000713: 	jne	.Ltmp2192 # Offset: 1811
    00000715: 	cvttsd2si	init_value(%rip), %rdx
    0000071e: 	movdqa	%xmm0, %xmm1
    00000722: 	psrldq	$0x8, %xmm1
    00000727: 	paddq	%xmm1, %xmm0
    0000072b: 	movq	%xmm0, %rax
    00000730: 	imulq	$-0x1f40, %rdx, %rdx
    00000737: 	cmpq	%rax, %rdx
    0000073a: 	je	.Ltmp2193 # Offset: 1850
    0000073c: 	movl	current_test(%rip), %edx
    00000742: 	movq	%r15, %rsi
    00000745: 	movl	$0x1, %edi
    0000074a: 	xorl	%eax, %eax
    0000074c: 	callq	__printf_chk@PLT # Offset: 1868
    00000751: 	movl	iterations(%rip), %ecx
.Ltmp2193:
    00000757: 	addl	$0x1, %r14d
    0000075b: 	cmpl	%ecx, %r14d
    0000075e: 	jl	.Ltmp2194 # Offset: 1886
.Ltmp2191:
    00000760: 	movq	0x10(%rsp), %rsi
    00000765: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000076c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1900
    00000771: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000778: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000077f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000786: 	je	.Ltmp2195 # Offset: 1926
.Ltmp2403:
    0000078c: 	movq	-0x20(%rax), %r14
    00000790: 	callq	clock@PLT # Offset: 1936
    00000795: 	pxor	%xmm0, %xmm0
    00000799: 	movq	%rax, end_time(%rip)
    000007a0: 	movq	%r14, %rdi
    000007a3: 	subq	start_time(%rip), %rax
    000007aa: 	cvtsi2sd	%rax, %xmm0
    000007af: 	divsd	DATAat0x385e0(%rip), %xmm0
    000007b7: 	callq	_Z13record_resultdPKc # Offset: 1975
    000007bc: 	movq	0xe0(%rsp), %rdi
    000007c4: 	cmpq	0x18(%rsp), %rdi
    000007c9: 	je	.Ltmp2196 # Offset: 1993
    000007cb: 	movq	0xf0(%rsp), %rax
    000007d3: 	leaq	0x1(%rax), %rsi
    000007d7: 	callq	_ZdlPvm@PLT # Offset: 2007
.Ltmp2196:
    000007dc: 	movq	0x20(%rsp), %rsi
    000007e1: 	movq	0x10(%rsp), %rdi
    000007e6: 	leaq	DATAat0x38219(%rip), %rdx
    000007ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2029
    000007f2: 	callq	clock@PLT # Offset: 2034
    000007f7: 	movl	iterations(%rip), %ecx
    000007fd: 	xorl	%r14d, %r14d
    00000800: 	leaq	DATAat0x381c8(%rip), %r15
    00000807: 	movq	%rax, start_time(%rip)
    0000080e: 	testl	%ecx, %ecx
    00000810: 	jle	.Ltmp2197 # Offset: 2064
    00000812: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2200:
    00000818: 	movq	0x8(%rsp), %rax
    0000081d: 	pxor	%xmm0, %xmm0
    00000821: 	nopl	(%rax) # Size: 7
.Ltmp2198:
    00000828: 	paddq	(%rax), %xmm0
    0000082c: 	addq	$0x10, %rax
    00000830: 	cmpq	%rbx, %rax
    00000833: 	jne	.Ltmp2198 # Offset: 2099
    00000835: 	cvttsd2si	init_value(%rip), %rdx
    0000083e: 	movdqa	%xmm0, %xmm1
    00000842: 	psrldq	$0x8, %xmm1
    00000847: 	paddq	%xmm1, %xmm0
    0000084b: 	movq	%xmm0, %rax
    00000850: 	imulq	$0x1f40, %rdx, %rdx
    00000857: 	cmpq	%rax, %rdx
    0000085a: 	je	.Ltmp2199 # Offset: 2138
    0000085c: 	movl	current_test(%rip), %edx
    00000862: 	movq	%r15, %rsi
    00000865: 	movl	$0x1, %edi
    0000086a: 	xorl	%eax, %eax
    0000086c: 	callq	__printf_chk@PLT # Offset: 2156
    00000871: 	movl	iterations(%rip), %ecx
.Ltmp2199:
    00000877: 	addl	$0x1, %r14d
    0000087b: 	cmpl	%ecx, %r14d
    0000087e: 	jl	.Ltmp2200 # Offset: 2174
.Ltmp2197:
    00000880: 	movq	0x10(%rsp), %rsi
    00000885: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000088c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2188
    00000891: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000898: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000089f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008a6: 	je	.Ltmp2201 # Offset: 2214
.Ltmp2402:
    000008ac: 	movq	-0x20(%rax), %r14
    000008b0: 	callq	clock@PLT # Offset: 2224
    000008b5: 	pxor	%xmm0, %xmm0
    000008b9: 	movq	%rax, end_time(%rip)
    000008c0: 	movq	%r14, %rdi
    000008c3: 	subq	start_time(%rip), %rax
    000008ca: 	cvtsi2sd	%rax, %xmm0
    000008cf: 	divsd	DATAat0x385e0(%rip), %xmm0
    000008d7: 	callq	_Z13record_resultdPKc # Offset: 2263
    000008dc: 	movq	0xe0(%rsp), %rdi
    000008e4: 	cmpq	0x18(%rsp), %rdi
    000008e9: 	je	.Ltmp2202 # Offset: 2281
    000008eb: 	movq	0xf0(%rsp), %rax
    000008f3: 	leaq	0x1(%rax), %rsi
    000008f7: 	callq	_ZdlPvm@PLT # Offset: 2295
.Ltmp2202:
    000008fc: 	movq	0x20(%rsp), %rsi
    00000901: 	movq	0x10(%rsp), %rdi
    00000906: 	leaq	DATAat0x38224(%rip), %rdx
    0000090d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2317
    00000912: 	callq	clock@PLT # Offset: 2322
    00000917: 	movl	iterations(%rip), %ecx
    0000091d: 	xorl	%r14d, %r14d
    00000920: 	leaq	DATAat0x381c8(%rip), %r15
    00000927: 	movq	%rax, start_time(%rip)
    0000092e: 	testl	%ecx, %ecx
    00000930: 	jle	.Ltmp2203 # Offset: 2352
    00000932: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2206:
    00000938: 	movq	0x8(%rsp), %rax
    0000093d: 	pxor	%xmm0, %xmm0
    00000941: 	nopl	(%rax) # Size: 7
.Ltmp2204:
    00000948: 	paddq	(%rax), %xmm0
    0000094c: 	addq	$0x10, %rax
    00000950: 	cmpq	%rbx, %rax
    00000953: 	jne	.Ltmp2204 # Offset: 2387
    00000955: 	cvttsd2si	init_value(%rip), %rdx
    0000095e: 	movdqa	%xmm0, %xmm1
    00000962: 	psrldq	$0x8, %xmm1
    00000967: 	paddq	%xmm1, %xmm0
    0000096b: 	movq	%xmm0, %rax
    00000970: 	imulq	$0x1f40, %rdx, %rdx
    00000977: 	cmpq	%rax, %rdx
    0000097a: 	je	.Ltmp2205 # Offset: 2426
    0000097c: 	movl	current_test(%rip), %edx
    00000982: 	movq	%r15, %rsi
    00000985: 	movl	$0x1, %edi
    0000098a: 	xorl	%eax, %eax
    0000098c: 	callq	__printf_chk@PLT # Offset: 2444
    00000991: 	movl	iterations(%rip), %ecx
.Ltmp2205:
    00000997: 	addl	$0x1, %r14d
    0000099b: 	cmpl	%ecx, %r14d
    0000099e: 	jl	.Ltmp2206 # Offset: 2462
.Ltmp2203:
    000009a0: 	movq	0x10(%rsp), %rsi
    000009a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000009ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2476
    000009b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009b8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009c6: 	je	.Ltmp2207 # Offset: 2502
.Ltmp2401:
    000009cc: 	movq	-0x20(%rax), %r14
    000009d0: 	callq	clock@PLT # Offset: 2512
    000009d5: 	pxor	%xmm0, %xmm0
    000009d9: 	movq	%rax, end_time(%rip)
    000009e0: 	movq	%r14, %rdi
    000009e3: 	subq	start_time(%rip), %rax
    000009ea: 	cvtsi2sd	%rax, %xmm0
    000009ef: 	divsd	DATAat0x385e0(%rip), %xmm0
    000009f7: 	callq	_Z13record_resultdPKc # Offset: 2551
    000009fc: 	movq	0xe0(%rsp), %rdi
    00000a04: 	cmpq	0x18(%rsp), %rdi
    00000a09: 	je	.Ltmp2208 # Offset: 2569
    00000a0b: 	movq	0xf0(%rsp), %rax
    00000a13: 	leaq	0x1(%rax), %rsi
    00000a17: 	callq	_ZdlPvm@PLT # Offset: 2583
.Ltmp2208:
    00000a1c: 	movq	0x20(%rsp), %rsi
    00000a21: 	movq	0x10(%rsp), %rdi
    00000a26: 	leaq	DATAat0x38233(%rip), %rdx
    00000a2d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2605
    00000a32: 	callq	clock@PLT # Offset: 2610
    00000a37: 	movl	iterations(%rip), %ecx
    00000a3d: 	xorl	%r14d, %r14d
    00000a40: 	leaq	DATAat0x381c8(%rip), %r15
    00000a47: 	movq	%rax, start_time(%rip)
    00000a4e: 	testl	%ecx, %ecx
    00000a50: 	jle	.Ltmp2209 # Offset: 2640
    00000a52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2212:
    00000a58: 	movq	0x8(%rsp), %rax
    00000a5d: 	pxor	%xmm0, %xmm0
    00000a61: 	nopl	(%rax) # Size: 7
.Ltmp2210:
    00000a68: 	paddq	(%rax), %xmm0
    00000a6c: 	addq	$0x10, %rax
    00000a70: 	cmpq	%rax, %rbx
    00000a73: 	jne	.Ltmp2210 # Offset: 2675
    00000a75: 	cvttsd2si	init_value(%rip), %rdx
    00000a7e: 	movdqa	%xmm0, %xmm1
    00000a82: 	psrldq	$0x8, %xmm1
    00000a87: 	paddq	%xmm1, %xmm0
    00000a8b: 	movq	%xmm0, %rax
    00000a90: 	imulq	$0x1f40, %rdx, %rdx
    00000a97: 	cmpq	%rax, %rdx
    00000a9a: 	je	.Ltmp2211 # Offset: 2714
    00000a9c: 	movl	current_test(%rip), %edx
    00000aa2: 	movq	%r15, %rsi
    00000aa5: 	movl	$0x1, %edi
    00000aaa: 	xorl	%eax, %eax
    00000aac: 	callq	__printf_chk@PLT # Offset: 2732
    00000ab1: 	movl	iterations(%rip), %ecx
.Ltmp2211:
    00000ab7: 	addl	$0x1, %r14d
    00000abb: 	cmpl	%ecx, %r14d
    00000abe: 	jl	.Ltmp2212 # Offset: 2750
.Ltmp2209:
    00000ac0: 	movq	0x10(%rsp), %rsi
    00000ac5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000acc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2764
    00000ad1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ad8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000adf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ae6: 	je	.Ltmp2213 # Offset: 2790
.Ltmp2400:
    00000aec: 	movq	-0x20(%rax), %r14
    00000af0: 	callq	clock@PLT # Offset: 2800
    00000af5: 	pxor	%xmm0, %xmm0
    00000af9: 	movq	%rax, end_time(%rip)
    00000b00: 	movq	%r14, %rdi
    00000b03: 	subq	start_time(%rip), %rax
    00000b0a: 	cvtsi2sd	%rax, %xmm0
    00000b0f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000b17: 	callq	_Z13record_resultdPKc # Offset: 2839
    00000b1c: 	movq	0xe0(%rsp), %rdi
    00000b24: 	cmpq	0x18(%rsp), %rdi
    00000b29: 	je	.Ltmp2214 # Offset: 2857
    00000b2b: 	movq	0xf0(%rsp), %rax
    00000b33: 	leaq	0x1(%rax), %rsi
    00000b37: 	callq	_ZdlPvm@PLT # Offset: 2871
.Ltmp2214:
    00000b3c: 	movq	0x20(%rsp), %rsi
    00000b41: 	movq	0x10(%rsp), %rdi
    00000b46: 	leaq	DATAat0x3823d(%rip), %rdx
    00000b4d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2893
    00000b52: 	callq	clock@PLT # Offset: 2898
    00000b57: 	movl	iterations(%rip), %ecx
    00000b5d: 	xorl	%r14d, %r14d
    00000b60: 	leaq	DATAat0x381c8(%rip), %r15
    00000b67: 	movq	%rax, start_time(%rip)
    00000b6e: 	testl	%ecx, %ecx
    00000b70: 	jle	.Ltmp2215 # Offset: 2928
    00000b72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2218:
    00000b78: 	movq	0x8(%rsp), %rax
    00000b7d: 	pxor	%xmm0, %xmm0
    00000b81: 	nopl	(%rax) # Size: 7
.Ltmp2216:
    00000b88: 	paddq	(%rax), %xmm0
    00000b8c: 	addq	$0x10, %rax
    00000b90: 	cmpq	%rbx, %rax
    00000b93: 	jne	.Ltmp2216 # Offset: 2963
    00000b95: 	cvttsd2si	init_value(%rip), %rdx
    00000b9e: 	movdqa	%xmm0, %xmm1
    00000ba2: 	psrldq	$0x8, %xmm1
    00000ba7: 	paddq	%xmm1, %xmm0
    00000bab: 	movq	%xmm0, %rax
    00000bb0: 	imulq	$0x1f40, %rdx, %rdx
    00000bb7: 	cmpq	%rax, %rdx
    00000bba: 	je	.Ltmp2217 # Offset: 3002
    00000bbc: 	movl	current_test(%rip), %edx
    00000bc2: 	movq	%r15, %rsi
    00000bc5: 	movl	$0x1, %edi
    00000bca: 	xorl	%eax, %eax
    00000bcc: 	callq	__printf_chk@PLT # Offset: 3020
    00000bd1: 	movl	iterations(%rip), %ecx
.Ltmp2217:
    00000bd7: 	addl	$0x1, %r14d
    00000bdb: 	cmpl	%ecx, %r14d
    00000bde: 	jl	.Ltmp2218 # Offset: 3038
.Ltmp2215:
    00000be0: 	movq	0x10(%rsp), %rsi
    00000be5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000bec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3052
    00000bf1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bf8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c06: 	je	.Ltmp2219 # Offset: 3078
.Ltmp2399:
    00000c0c: 	movq	-0x20(%rax), %r14
    00000c10: 	callq	clock@PLT # Offset: 3088
    00000c15: 	pxor	%xmm0, %xmm0
    00000c19: 	movq	%rax, end_time(%rip)
    00000c20: 	movq	%r14, %rdi
    00000c23: 	subq	start_time(%rip), %rax
    00000c2a: 	cvtsi2sd	%rax, %xmm0
    00000c2f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c37: 	callq	_Z13record_resultdPKc # Offset: 3127
    00000c3c: 	movq	0xe0(%rsp), %rdi
    00000c44: 	cmpq	0x18(%rsp), %rdi
    00000c49: 	je	.Ltmp2220 # Offset: 3145
    00000c4b: 	movq	0xf0(%rsp), %rax
    00000c53: 	leaq	0x1(%rax), %rsi
    00000c57: 	callq	_ZdlPvm@PLT # Offset: 3159
.Ltmp2220:
    00000c5c: 	movq	0x20(%rsp), %rsi
    00000c61: 	movq	0x10(%rsp), %rdi
    00000c66: 	leaq	DATAat0x38246(%rip), %rdx
    00000c6d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3181
    00000c72: 	callq	clock@PLT # Offset: 3186
    00000c77: 	movl	iterations(%rip), %ecx
    00000c7d: 	xorl	%r14d, %r14d
    00000c80: 	leaq	DATAat0x381c8(%rip), %r15
    00000c87: 	movq	%rax, start_time(%rip)
    00000c8e: 	testl	%ecx, %ecx
    00000c90: 	jle	.Ltmp2221 # Offset: 3216
    00000c92: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2224:
    00000c98: 	movq	0x8(%rsp), %rax
    00000c9d: 	pxor	%xmm0, %xmm0
    00000ca1: 	nopl	(%rax) # Size: 7
.Ltmp2222:
    00000ca8: 	paddq	(%rax), %xmm0
    00000cac: 	addq	$0x10, %rax
    00000cb0: 	cmpq	%rax, %rbx
    00000cb3: 	jne	.Ltmp2222 # Offset: 3251
    00000cb5: 	cvttsd2si	init_value(%rip), %rdx
    00000cbe: 	movdqa	%xmm0, %xmm1
    00000cc2: 	psrldq	$0x8, %xmm1
    00000cc7: 	paddq	%xmm1, %xmm0
    00000ccb: 	movq	%xmm0, %rax
    00000cd0: 	imulq	$0x1f40, %rdx, %rdx
    00000cd7: 	cmpq	%rax, %rdx
    00000cda: 	je	.Ltmp2223 # Offset: 3290
    00000cdc: 	movl	current_test(%rip), %edx
    00000ce2: 	movq	%r15, %rsi
    00000ce5: 	movl	$0x1, %edi
    00000cea: 	xorl	%eax, %eax
    00000cec: 	callq	__printf_chk@PLT # Offset: 3308
    00000cf1: 	movl	iterations(%rip), %ecx
.Ltmp2223:
    00000cf7: 	addl	$0x1, %r14d
    00000cfb: 	cmpl	%ecx, %r14d
    00000cfe: 	jl	.Ltmp2224 # Offset: 3326
.Ltmp2221:
    00000d00: 	movq	0x10(%rsp), %rsi
    00000d05: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d0c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3340
    00000d11: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d18: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d1f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d26: 	je	.Ltmp2225 # Offset: 3366
.Ltmp2398:
    00000d2c: 	movq	-0x20(%rax), %r14
    00000d30: 	callq	clock@PLT # Offset: 3376
    00000d35: 	pxor	%xmm0, %xmm0
    00000d39: 	movq	%rax, end_time(%rip)
    00000d40: 	movq	%r14, %rdi
    00000d43: 	subq	start_time(%rip), %rax
    00000d4a: 	cvtsi2sd	%rax, %xmm0
    00000d4f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000d57: 	callq	_Z13record_resultdPKc # Offset: 3415
    00000d5c: 	movq	0xe0(%rsp), %rdi
    00000d64: 	cmpq	0x18(%rsp), %rdi
    00000d69: 	je	.Ltmp2226 # Offset: 3433
    00000d6b: 	movq	0xf0(%rsp), %rax
    00000d73: 	leaq	0x1(%rax), %rsi
    00000d77: 	callq	_ZdlPvm@PLT # Offset: 3447
.Ltmp2226:
    00000d7c: 	movq	0x20(%rsp), %rsi
    00000d81: 	movq	0x10(%rsp), %rdi
    00000d86: 	leaq	DATAat0x3824f(%rip), %rdx
    00000d8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3469
    00000d92: 	callq	clock@PLT # Offset: 3474
    00000d97: 	movl	iterations(%rip), %ecx
    00000d9d: 	xorl	%r14d, %r14d
    00000da0: 	leaq	DATAat0x381c8(%rip), %r15
    00000da7: 	movq	%rax, start_time(%rip)
    00000dae: 	testl	%ecx, %ecx
    00000db0: 	jle	.Ltmp2227 # Offset: 3504
    00000db2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2230:
    00000db8: 	movq	0x8(%rsp), %rax
    00000dbd: 	pxor	%xmm0, %xmm0
    00000dc1: 	nopl	(%rax) # Size: 7
.Ltmp2228:
    00000dc8: 	paddq	(%rax), %xmm0
    00000dcc: 	addq	$0x10, %rax
    00000dd0: 	cmpq	%rbx, %rax
    00000dd3: 	jne	.Ltmp2228 # Offset: 3539
    00000dd5: 	cvttsd2si	init_value(%rip), %rdx
    00000dde: 	movdqa	%xmm0, %xmm1
    00000de2: 	psrldq	$0x8, %xmm1
    00000de7: 	paddq	%xmm1, %xmm0
    00000deb: 	movq	%xmm0, %rax
    00000df0: 	imulq	$0x1f40, %rdx, %rdx
    00000df7: 	cmpq	%rax, %rdx
    00000dfa: 	je	.Ltmp2229 # Offset: 3578
    00000dfc: 	movl	current_test(%rip), %edx
    00000e02: 	movq	%r15, %rsi
    00000e05: 	movl	$0x1, %edi
    00000e0a: 	xorl	%eax, %eax
    00000e0c: 	callq	__printf_chk@PLT # Offset: 3596
    00000e11: 	movl	iterations(%rip), %ecx
.Ltmp2229:
    00000e17: 	addl	$0x1, %r14d
    00000e1b: 	cmpl	%ecx, %r14d
    00000e1e: 	jl	.Ltmp2230 # Offset: 3614
.Ltmp2227:
    00000e20: 	movq	0x10(%rsp), %rsi
    00000e25: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e2c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3628
    00000e31: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e38: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e3f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e46: 	je	.Ltmp2231 # Offset: 3654
.Ltmp2397:
    00000e4c: 	movq	-0x20(%rax), %r14
    00000e50: 	callq	clock@PLT # Offset: 3664
    00000e55: 	pxor	%xmm0, %xmm0
    00000e59: 	movq	%rax, end_time(%rip)
    00000e60: 	movq	%r14, %rdi
    00000e63: 	subq	start_time(%rip), %rax
    00000e6a: 	cvtsi2sd	%rax, %xmm0
    00000e6f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e77: 	callq	_Z13record_resultdPKc # Offset: 3703
    00000e7c: 	movq	0xe0(%rsp), %rdi
    00000e84: 	cmpq	0x18(%rsp), %rdi
    00000e89: 	je	.Ltmp2232 # Offset: 3721
    00000e8b: 	movq	0xf0(%rsp), %rax
    00000e93: 	leaq	0x1(%rax), %rsi
    00000e97: 	callq	_ZdlPvm@PLT # Offset: 3735
.Ltmp2232:
    00000e9c: 	movq	0x20(%rsp), %rsi
    00000ea1: 	movq	0x10(%rsp), %rdi
    00000ea6: 	leaq	DATAat0x38259(%rip), %rdx
    00000ead: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3757
    00000eb2: 	callq	clock@PLT # Offset: 3762
    00000eb7: 	movl	iterations(%rip), %ecx
    00000ebd: 	xorl	%r14d, %r14d
    00000ec0: 	leaq	DATAat0x381c8(%rip), %r15
    00000ec7: 	movq	%rax, start_time(%rip)
    00000ece: 	testl	%ecx, %ecx
    00000ed0: 	jle	.Ltmp2233 # Offset: 3792
    00000ed2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2236:
    00000ed8: 	movq	0x8(%rsp), %rax
    00000edd: 	pxor	%xmm0, %xmm0
    00000ee1: 	nopl	(%rax) # Size: 7
.Ltmp2234:
    00000ee8: 	paddq	(%rax), %xmm0
    00000eec: 	addq	$0x10, %rax
    00000ef0: 	cmpq	%rax, %rbx
    00000ef3: 	jne	.Ltmp2234 # Offset: 3827
    00000ef5: 	cvttsd2si	init_value(%rip), %rdx
    00000efe: 	movdqa	%xmm0, %xmm1
    00000f02: 	psrldq	$0x8, %xmm1
    00000f07: 	paddq	%xmm1, %xmm0
    00000f0b: 	movq	%xmm0, %rax
    00000f10: 	imulq	$0x1f40, %rdx, %rdx
    00000f17: 	cmpq	%rax, %rdx
    00000f1a: 	je	.Ltmp2235 # Offset: 3866
    00000f1c: 	movl	current_test(%rip), %edx
    00000f22: 	movq	%r15, %rsi
    00000f25: 	movl	$0x1, %edi
    00000f2a: 	xorl	%eax, %eax
    00000f2c: 	callq	__printf_chk@PLT # Offset: 3884
    00000f31: 	movl	iterations(%rip), %ecx
.Ltmp2235:
    00000f37: 	addl	$0x1, %r14d
    00000f3b: 	cmpl	%ecx, %r14d
    00000f3e: 	jl	.Ltmp2236 # Offset: 3902
.Ltmp2233:
    00000f40: 	movq	0x10(%rsp), %rsi
    00000f45: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f4c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3916
    00000f51: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f58: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f5f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f66: 	je	.Ltmp2237 # Offset: 3942
.Ltmp2396:
    00000f6c: 	movq	-0x20(%rax), %r14
    00000f70: 	callq	clock@PLT # Offset: 3952
    00000f75: 	pxor	%xmm0, %xmm0
    00000f79: 	movq	%rax, end_time(%rip)
    00000f80: 	movq	%r14, %rdi
    00000f83: 	subq	start_time(%rip), %rax
    00000f8a: 	cvtsi2sd	%rax, %xmm0
    00000f8f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f97: 	callq	_Z13record_resultdPKc # Offset: 3991
    00000f9c: 	movq	0xe0(%rsp), %rdi
    00000fa4: 	cmpq	0x18(%rsp), %rdi
    00000fa9: 	je	.Ltmp2238 # Offset: 4009
    00000fab: 	movq	0xf0(%rsp), %rax
    00000fb3: 	leaq	0x1(%rax), %rsi
    00000fb7: 	callq	_ZdlPvm@PLT # Offset: 4023
.Ltmp2238:
    00000fbc: 	movq	0x20(%rsp), %rsi
    00000fc1: 	movq	0x10(%rsp), %rdi
    00000fc6: 	leaq	DATAat0x38266(%rip), %rdx
    00000fcd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4045
    00000fd2: 	callq	clock@PLT # Offset: 4050
    00000fd7: 	movl	iterations(%rip), %ecx
    00000fdd: 	xorl	%r14d, %r14d
    00000fe0: 	leaq	DATAat0x381c8(%rip), %r15
    00000fe7: 	movq	%rax, start_time(%rip)
    00000fee: 	testl	%ecx, %ecx
    00000ff0: 	jle	.Ltmp2239 # Offset: 4080
    00000ff2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2242:
    00000ff8: 	movq	0x8(%rsp), %rax
    00000ffd: 	pxor	%xmm0, %xmm0
    00001001: 	nopl	(%rax) # Size: 7
.Ltmp2240:
    00001008: 	paddq	(%rax), %xmm0
    0000100c: 	addq	$0x10, %rax
    00001010: 	cmpq	%rbx, %rax
    00001013: 	jne	.Ltmp2240 # Offset: 4115
    00001015: 	cvttsd2si	init_value(%rip), %rdx
    0000101e: 	movdqa	%xmm0, %xmm1
    00001022: 	psrldq	$0x8, %xmm1
    00001027: 	paddq	%xmm1, %xmm0
    0000102b: 	movq	%xmm0, %rax
    00001030: 	imulq	$0x1f40, %rdx, %rdx
    00001037: 	cmpq	%rax, %rdx
    0000103a: 	je	.Ltmp2241 # Offset: 4154
    0000103c: 	movl	current_test(%rip), %edx
    00001042: 	movq	%r15, %rsi
    00001045: 	movl	$0x1, %edi
    0000104a: 	xorl	%eax, %eax
    0000104c: 	callq	__printf_chk@PLT # Offset: 4172
    00001051: 	movl	iterations(%rip), %ecx
.Ltmp2241:
    00001057: 	addl	$0x1, %r14d
    0000105b: 	cmpl	%ecx, %r14d
    0000105e: 	jl	.Ltmp2242 # Offset: 4190
.Ltmp2239:
    00001060: 	movq	0x10(%rsp), %rsi
    00001065: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000106c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4204
    00001071: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001078: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000107f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001086: 	je	.Ltmp2243 # Offset: 4230
.Ltmp2395:
    0000108c: 	movq	-0x20(%rax), %r14
    00001090: 	callq	clock@PLT # Offset: 4240
    00001095: 	pxor	%xmm0, %xmm0
    00001099: 	movq	%rax, end_time(%rip)
    000010a0: 	movq	%r14, %rdi
    000010a3: 	subq	start_time(%rip), %rax
    000010aa: 	cvtsi2sd	%rax, %xmm0
    000010af: 	divsd	DATAat0x385e0(%rip), %xmm0
    000010b7: 	callq	_Z13record_resultdPKc # Offset: 4279
    000010bc: 	movq	0xe0(%rsp), %rdi
    000010c4: 	cmpq	0x18(%rsp), %rdi
    000010c9: 	je	.Ltmp2244 # Offset: 4297
    000010cb: 	movq	0xf0(%rsp), %rax
    000010d3: 	leaq	0x1(%rax), %rsi
    000010d7: 	callq	_ZdlPvm@PLT # Offset: 4311
.Ltmp2244:
    000010dc: 	movq	0x20(%rsp), %r15
    000010e1: 	leaq	0x80(%rsp), %rdi
    000010e9: 	leaq	DATAat0x38275(%rip), %rdx
    000010f0: 	movq	%r15, %rsi
    000010f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4339
    000010f8: 	movl	iterations(%rip), %esi
    000010fe: 	movq	0x80(%rsp), %rdi
    00001106: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4358
    0000110b: 	movq	%r15, %rsi
    0000110e: 	movq	0x10(%rsp), %r15
    00001113: 	leaq	DATAat0x381e2(%rip), %rdx
    0000111a: 	movq	%r15, %rdi
    0000111d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4381
    00001122: 	callq	clock@PLT # Offset: 4386
    00001127: 	movq	%r15, %rsi
    0000112a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001131: 	movq	%rax, start_time(%rip)
    00001138: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4408
    0000113d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001144: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000114b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001152: 	je	.Ltmp2245 # Offset: 4434
.Ltmp2394:
    00001158: 	movq	-0x20(%rax), %r14
    0000115c: 	callq	clock@PLT # Offset: 4444
    00001161: 	pxor	%xmm0, %xmm0
    00001165: 	movq	%rax, end_time(%rip)
    0000116c: 	movq	%r14, %rdi
    0000116f: 	subq	start_time(%rip), %rax
    00001176: 	cvtsi2sd	%rax, %xmm0
    0000117b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001183: 	callq	_Z13record_resultdPKc # Offset: 4483
    00001188: 	movq	0xe0(%rsp), %rdi
    00001190: 	cmpq	0x18(%rsp), %rdi
    00001195: 	je	.Ltmp2246 # Offset: 4501
    00001197: 	movq	0xf0(%rsp), %rax
    0000119f: 	leaq	0x1(%rax), %rsi
    000011a3: 	callq	_ZdlPvm@PLT # Offset: 4515
.Ltmp2246:
    000011a8: 	movq	0x10(%rsp), %r15
    000011ad: 	movq	0x20(%rsp), %rsi
    000011b2: 	leaq	DATAat0x3828f(%rip), %rdx
    000011b9: 	movq	%r15, %rdi
    000011bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4540
    000011c1: 	callq	clock@PLT # Offset: 4545
    000011c6: 	movq	%r15, %rsi
    000011c9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011d0: 	movq	%rax, start_time(%rip)
    000011d7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4567
    000011dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011e3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f1: 	je	.Ltmp2247 # Offset: 4593
.Ltmp2393:
    000011f7: 	movq	-0x20(%rax), %r14
    000011fb: 	callq	clock@PLT # Offset: 4603
    00001200: 	pxor	%xmm0, %xmm0
    00001204: 	movq	%rax, end_time(%rip)
    0000120b: 	movq	%r14, %rdi
    0000120e: 	subq	start_time(%rip), %rax
    00001215: 	cvtsi2sd	%rax, %xmm0
    0000121a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001222: 	callq	_Z13record_resultdPKc # Offset: 4642
    00001227: 	movq	0xe0(%rsp), %rdi
    0000122f: 	cmpq	0x18(%rsp), %rdi
    00001234: 	je	.Ltmp2248 # Offset: 4660
    00001236: 	movq	0xf0(%rsp), %rax
    0000123e: 	leaq	0x1(%rax), %rsi
    00001242: 	callq	_ZdlPvm@PLT # Offset: 4674
.Ltmp2248:
    00001247: 	movq	0x10(%rsp), %r15
    0000124c: 	movq	0x20(%rsp), %rsi
    00001251: 	leaq	DATAat0x3829b(%rip), %rdx
    00001258: 	movq	%r15, %rdi
    0000125b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4699
    00001260: 	callq	clock@PLT # Offset: 4704
    00001265: 	movq	%r15, %rsi
    00001268: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000126f: 	movq	%rax, start_time(%rip)
    00001276: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4726
    0000127b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001282: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001290: 	je	.Ltmp2249 # Offset: 4752
.Ltmp2392:
    00001296: 	movq	-0x20(%rax), %r14
    0000129a: 	callq	clock@PLT # Offset: 4762
    0000129f: 	pxor	%xmm0, %xmm0
    000012a3: 	movq	%rax, end_time(%rip)
    000012aa: 	movq	%r14, %rdi
    000012ad: 	subq	start_time(%rip), %rax
    000012b4: 	cvtsi2sd	%rax, %xmm0
    000012b9: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012c1: 	callq	_Z13record_resultdPKc # Offset: 4801
    000012c6: 	movq	0xe0(%rsp), %rdi
    000012ce: 	cmpq	0x18(%rsp), %rdi
    000012d3: 	je	.Ltmp2250 # Offset: 4819
    000012d5: 	movq	0xf0(%rsp), %rax
    000012dd: 	leaq	0x1(%rax), %rsi
    000012e1: 	callq	_ZdlPvm@PLT # Offset: 4833
.Ltmp2250:
    000012e6: 	movq	0x10(%rsp), %r15
    000012eb: 	movq	0x20(%rsp), %rsi
    000012f0: 	leaq	DATAat0x382aa(%rip), %rdx
    000012f7: 	movq	%r15, %rdi
    000012fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4858
    000012ff: 	callq	clock@PLT # Offset: 4863
    00001304: 	movq	%r15, %rsi
    00001307: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000130e: 	movq	%rax, start_time(%rip)
    00001315: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4885
    0000131a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001321: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001328: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000132f: 	je	.Ltmp2251 # Offset: 4911
.Ltmp2391:
    00001335: 	movq	-0x20(%rax), %r14
    00001339: 	callq	clock@PLT # Offset: 4921
    0000133e: 	pxor	%xmm0, %xmm0
    00001342: 	movq	%rax, end_time(%rip)
    00001349: 	movq	%r14, %rdi
    0000134c: 	subq	start_time(%rip), %rax
    00001353: 	cvtsi2sd	%rax, %xmm0
    00001358: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001360: 	callq	_Z13record_resultdPKc # Offset: 4960
    00001365: 	movq	0xe0(%rsp), %rdi
    0000136d: 	cmpq	0x18(%rsp), %rdi
    00001372: 	je	.Ltmp2252 # Offset: 4978
    00001374: 	movq	0xf0(%rsp), %rax
    0000137c: 	leaq	0x1(%rax), %rsi
    00001380: 	callq	_ZdlPvm@PLT # Offset: 4992
.Ltmp2252:
    00001385: 	movq	0x10(%rsp), %r15
    0000138a: 	movq	0x20(%rsp), %rsi
    0000138f: 	leaq	DATAat0x382f3(%rip), %rdx
    00001396: 	movq	%r15, %rdi
    00001399: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5017
    0000139e: 	callq	clock@PLT # Offset: 5022
    000013a3: 	movq	%r15, %rsi
    000013a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013ad: 	movq	%rax, start_time(%rip)
    000013b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5044
    000013b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013c0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ce: 	je	.Ltmp2253 # Offset: 5070
.Ltmp2390:
    000013d4: 	movq	-0x20(%rax), %r14
    000013d8: 	callq	clock@PLT # Offset: 5080
    000013dd: 	pxor	%xmm0, %xmm0
    000013e1: 	movq	%rax, end_time(%rip)
    000013e8: 	movq	%r14, %rdi
    000013eb: 	subq	start_time(%rip), %rax
    000013f2: 	cvtsi2sd	%rax, %xmm0
    000013f7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013ff: 	callq	_Z13record_resultdPKc # Offset: 5119
    00001404: 	movq	0xe0(%rsp), %rdi
    0000140c: 	cmpq	0x18(%rsp), %rdi
    00001411: 	je	.Ltmp2254 # Offset: 5137
    00001413: 	movq	0xf0(%rsp), %rax
    0000141b: 	leaq	0x1(%rax), %rsi
    0000141f: 	callq	_ZdlPvm@PLT # Offset: 5151
.Ltmp2254:
    00001424: 	movq	0x10(%rsp), %r15
    00001429: 	movq	0x20(%rsp), %rsi
    0000142e: 	leaq	DATAat0x382b3(%rip), %rdx
    00001435: 	movq	%r15, %rdi
    00001438: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5176
    0000143d: 	callq	clock@PLT # Offset: 5181
    00001442: 	movq	%r15, %rsi
    00001445: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000144c: 	movq	%rax, start_time(%rip)
    00001453: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5203
    00001458: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000145f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001466: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000146d: 	je	.Ltmp2255 # Offset: 5229
.Ltmp2389:
    00001473: 	movq	-0x20(%rax), %r14
    00001477: 	callq	clock@PLT # Offset: 5239
    0000147c: 	pxor	%xmm0, %xmm0
    00001480: 	movq	%rax, end_time(%rip)
    00001487: 	movq	%r14, %rdi
    0000148a: 	subq	start_time(%rip), %rax
    00001491: 	cvtsi2sd	%rax, %xmm0
    00001496: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000149e: 	callq	_Z13record_resultdPKc # Offset: 5278
    000014a3: 	movq	0xe0(%rsp), %rdi
    000014ab: 	cmpq	0x18(%rsp), %rdi
    000014b0: 	je	.Ltmp2256 # Offset: 5296
    000014b2: 	movq	0xf0(%rsp), %rax
    000014ba: 	leaq	0x1(%rax), %rsi
    000014be: 	callq	_ZdlPvm@PLT # Offset: 5310
.Ltmp2256:
    000014c3: 	movq	0x10(%rsp), %r15
    000014c8: 	movq	0x20(%rsp), %rsi
    000014cd: 	leaq	DATAat0x382c3(%rip), %rdx
    000014d4: 	movq	%r15, %rdi
    000014d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5335
    000014dc: 	callq	clock@PLT # Offset: 5340
    000014e1: 	movq	%r15, %rsi
    000014e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014eb: 	movq	%rax, start_time(%rip)
    000014f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5362
    000014f7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014fe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001505: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150c: 	je	.Ltmp2257 # Offset: 5388
.Ltmp2388:
    00001512: 	movq	-0x20(%rax), %r14
    00001516: 	callq	clock@PLT # Offset: 5398
    0000151b: 	pxor	%xmm0, %xmm0
    0000151f: 	movq	%rax, end_time(%rip)
    00001526: 	movq	%r14, %rdi
    00001529: 	subq	start_time(%rip), %rax
    00001530: 	cvtsi2sd	%rax, %xmm0
    00001535: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000153d: 	callq	_Z13record_resultdPKc # Offset: 5437
    00001542: 	movq	0xe0(%rsp), %rdi
    0000154a: 	cmpq	0x18(%rsp), %rdi
    0000154f: 	je	.Ltmp2258 # Offset: 5455
    00001551: 	movq	0xf0(%rsp), %rax
    00001559: 	leaq	0x1(%rax), %rsi
    0000155d: 	callq	_ZdlPvm@PLT # Offset: 5469
.Ltmp2258:
    00001562: 	movq	0x10(%rsp), %r15
    00001567: 	movq	0x20(%rsp), %rsi
    0000156c: 	leaq	DATAat0x382d6(%rip), %rdx
    00001573: 	movq	%r15, %rdi
    00001576: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5494
    0000157b: 	callq	clock@PLT # Offset: 5499
    00001580: 	movq	%r15, %rsi
    00001583: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000158a: 	movq	%rax, start_time(%rip)
    00001591: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5521
    00001596: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000159d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015ab: 	je	.Ltmp2259 # Offset: 5547
.Ltmp2387:
    000015b1: 	movq	-0x20(%rax), %r14
    000015b5: 	callq	clock@PLT # Offset: 5557
    000015ba: 	pxor	%xmm0, %xmm0
    000015be: 	movq	%rax, end_time(%rip)
    000015c5: 	movq	%r14, %rdi
    000015c8: 	subq	start_time(%rip), %rax
    000015cf: 	cvtsi2sd	%rax, %xmm0
    000015d4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015dc: 	callq	_Z13record_resultdPKc # Offset: 5596
    000015e1: 	movq	0xe0(%rsp), %rdi
    000015e9: 	cmpq	0x18(%rsp), %rdi
    000015ee: 	je	.Ltmp2260 # Offset: 5614
    000015f0: 	movq	0xf0(%rsp), %rax
    000015f8: 	leaq	0x1(%rax), %rsi
    000015fc: 	callq	_ZdlPvm@PLT # Offset: 5628
.Ltmp2260:
    00001601: 	movq	0x10(%rsp), %r15
    00001606: 	movq	0x20(%rsp), %rsi
    0000160b: 	leaq	DATAat0x382e6(%rip), %rdx
    00001612: 	movq	%r15, %rdi
    00001615: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5653
    0000161a: 	callq	clock@PLT # Offset: 5658
    0000161f: 	movq	%r15, %rsi
    00001622: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001629: 	movq	%rax, start_time(%rip)
    00001630: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5680
    00001635: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000163c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001643: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000164a: 	je	.Ltmp2261 # Offset: 5706
.Ltmp2386:
    00001650: 	movq	-0x20(%rax), %r14
    00001654: 	callq	clock@PLT # Offset: 5716
    00001659: 	pxor	%xmm0, %xmm0
    0000165d: 	movq	%rax, end_time(%rip)
    00001664: 	movq	%r14, %rdi
    00001667: 	subq	start_time(%rip), %rax
    0000166e: 	cvtsi2sd	%rax, %xmm0
    00001673: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000167b: 	callq	_Z13record_resultdPKc # Offset: 5755
    00001680: 	movq	0xe0(%rsp), %rdi
    00001688: 	cmpq	0x18(%rsp), %rdi
    0000168d: 	je	.Ltmp2262 # Offset: 5773
    0000168f: 	movq	0xf0(%rsp), %rax
    00001697: 	leaq	0x1(%rax), %rsi
    0000169b: 	callq	_ZdlPvm@PLT # Offset: 5787
.Ltmp2262:
    000016a0: 	movq	0x10(%rsp), %r15
    000016a5: 	movq	0x20(%rsp), %rsi
    000016aa: 	leaq	DATAat0x382ff(%rip), %rdx
    000016b1: 	movq	%r15, %rdi
    000016b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5812
    000016b9: 	callq	clock@PLT # Offset: 5817
    000016be: 	movq	%r15, %rsi
    000016c1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016c8: 	movq	%rax, start_time(%rip)
    000016cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5839
    000016d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016db: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016e2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016e9: 	je	.Ltmp2263 # Offset: 5865
.Ltmp2385:
    000016ef: 	movq	-0x20(%rax), %r14
    000016f3: 	callq	clock@PLT # Offset: 5875
    000016f8: 	pxor	%xmm0, %xmm0
    000016fc: 	movq	%rax, end_time(%rip)
    00001703: 	movq	%r14, %rdi
    00001706: 	subq	start_time(%rip), %rax
    0000170d: 	cvtsi2sd	%rax, %xmm0
    00001712: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000171a: 	callq	_Z13record_resultdPKc # Offset: 5914
    0000171f: 	movq	0xe0(%rsp), %rdi
    00001727: 	cmpq	0x18(%rsp), %rdi
    0000172c: 	je	.Ltmp2264 # Offset: 5932
    0000172e: 	movq	0xf0(%rsp), %rax
    00001736: 	leaq	0x1(%rax), %rsi
    0000173a: 	callq	_ZdlPvm@PLT # Offset: 5946
.Ltmp2264:
    0000173f: 	movq	0x10(%rsp), %r15
    00001744: 	movq	0x20(%rsp), %rsi
    00001749: 	leaq	DATAat0x38315(%rip), %rdx
    00001750: 	movq	%r15, %rdi
    00001753: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5971
    00001758: 	callq	clock@PLT # Offset: 5976
    0000175d: 	movq	%r15, %rsi
    00001760: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001767: 	movq	%rax, start_time(%rip)
    0000176e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5998
    00001773: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000177a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001781: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001788: 	je	.Ltmp2265 # Offset: 6024
.Ltmp2384:
    0000178e: 	movq	-0x20(%rax), %r14
    00001792: 	callq	clock@PLT # Offset: 6034
    00001797: 	pxor	%xmm0, %xmm0
    0000179b: 	movq	%rax, end_time(%rip)
    000017a2: 	movq	%r14, %rdi
    000017a5: 	subq	start_time(%rip), %rax
    000017ac: 	cvtsi2sd	%rax, %xmm0
    000017b1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000017b9: 	callq	_Z13record_resultdPKc # Offset: 6073
    000017be: 	movq	0xe0(%rsp), %rdi
    000017c6: 	cmpq	0x18(%rsp), %rdi
    000017cb: 	je	.Ltmp2266 # Offset: 6091
    000017cd: 	movq	0xf0(%rsp), %rax
    000017d5: 	leaq	0x1(%rax), %rsi
    000017d9: 	callq	_ZdlPvm@PLT # Offset: 6105
.Ltmp2266:
    000017de: 	movq	0x10(%rsp), %r15
    000017e3: 	movq	0x20(%rsp), %rsi
    000017e8: 	leaq	DATAat0x3831f(%rip), %rdx
    000017ef: 	movq	%r15, %rdi
    000017f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6130
    000017f7: 	callq	clock@PLT # Offset: 6135
    000017fc: 	movq	%r15, %rsi
    000017ff: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001806: 	movq	%rax, start_time(%rip)
    0000180d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6157
    00001812: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001819: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001820: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001827: 	je	.Ltmp2267 # Offset: 6183
.Ltmp2383:
    0000182d: 	movq	-0x20(%rax), %r14
    00001831: 	callq	clock@PLT # Offset: 6193
    00001836: 	pxor	%xmm0, %xmm0
    0000183a: 	movq	%rax, end_time(%rip)
    00001841: 	movq	%r14, %rdi
    00001844: 	subq	start_time(%rip), %rax
    0000184b: 	cvtsi2sd	%rax, %xmm0
    00001850: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001858: 	callq	_Z13record_resultdPKc # Offset: 6232
    0000185d: 	movq	0xe0(%rsp), %rdi
    00001865: 	cmpq	0x18(%rsp), %rdi
    0000186a: 	je	.Ltmp2268 # Offset: 6250
    0000186c: 	movq	0xf0(%rsp), %rax
    00001874: 	leaq	0x1(%rax), %rsi
    00001878: 	callq	_ZdlPvm@PLT # Offset: 6264
.Ltmp2268:
    0000187d: 	movq	0x10(%rsp), %r15
    00001882: 	movq	0x20(%rsp), %rsi
    00001887: 	leaq	DATAat0x38329(%rip), %rdx
    0000188e: 	movq	%r15, %rdi
    00001891: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6289
    00001896: 	callq	clock@PLT # Offset: 6294
    0000189b: 	movq	%r15, %rsi
    0000189e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018a5: 	movq	%rax, start_time(%rip)
    000018ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6316
    000018b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018b8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018c6: 	je	.Ltmp2269 # Offset: 6342
.Ltmp2382:
    000018cc: 	movq	-0x20(%rax), %r14
    000018d0: 	callq	clock@PLT # Offset: 6352
    000018d5: 	pxor	%xmm0, %xmm0
    000018d9: 	movq	%rax, end_time(%rip)
    000018e0: 	movq	%r14, %rdi
    000018e3: 	subq	start_time(%rip), %rax
    000018ea: 	cvtsi2sd	%rax, %xmm0
    000018ef: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018f7: 	callq	_Z13record_resultdPKc # Offset: 6391
    000018fc: 	movq	0xe0(%rsp), %rdi
    00001904: 	cmpq	0x18(%rsp), %rdi
    00001909: 	je	.Ltmp2270 # Offset: 6409
    0000190b: 	movq	0xf0(%rsp), %rax
    00001913: 	leaq	0x1(%rax), %rsi
    00001917: 	callq	_ZdlPvm@PLT # Offset: 6423
.Ltmp2270:
    0000191c: 	movq	0x10(%rsp), %r15
    00001921: 	movq	0x20(%rsp), %rsi
    00001926: 	leaq	DATAat0x38339(%rip), %rdx
    0000192d: 	movq	%r15, %rdi
    00001930: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6448
    00001935: 	callq	clock@PLT # Offset: 6453
    0000193a: 	movq	%r15, %rsi
    0000193d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001944: 	movq	%rax, start_time(%rip)
    0000194b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6475
    00001950: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001957: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000195e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001965: 	je	.Ltmp2271 # Offset: 6501
.Ltmp2381:
    0000196b: 	movq	-0x20(%rax), %r14
    0000196f: 	callq	clock@PLT # Offset: 6511
    00001974: 	pxor	%xmm0, %xmm0
    00001978: 	movq	%rax, end_time(%rip)
    0000197f: 	movq	%r14, %rdi
    00001982: 	subq	start_time(%rip), %rax
    00001989: 	cvtsi2sd	%rax, %xmm0
    0000198e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001996: 	callq	_Z13record_resultdPKc # Offset: 6550
    0000199b: 	movq	0xe0(%rsp), %rdi
    000019a3: 	cmpq	0x18(%rsp), %rdi
    000019a8: 	je	.Ltmp2272 # Offset: 6568
    000019aa: 	movq	0xf0(%rsp), %rax
    000019b2: 	leaq	0x1(%rax), %rsi
    000019b6: 	callq	_ZdlPvm@PLT # Offset: 6582
.Ltmp2272:
    000019bb: 	movq	0x10(%rsp), %r15
    000019c0: 	movq	0x20(%rsp), %rsi
    000019c5: 	leaq	DATAat0x38351(%rip), %rdx
    000019cc: 	movq	%r15, %rdi
    000019cf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6607
    000019d4: 	callq	clock@PLT # Offset: 6612
    000019d9: 	movq	%r15, %rsi
    000019dc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019e3: 	movq	%rax, start_time(%rip)
    000019ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6634
    000019ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a04: 	je	.Ltmp2273 # Offset: 6660
.Ltmp2380:
    00001a0a: 	movq	-0x20(%rax), %r14
    00001a0e: 	callq	clock@PLT # Offset: 6670
    00001a13: 	pxor	%xmm0, %xmm0
    00001a17: 	movq	%rax, end_time(%rip)
    00001a1e: 	movq	%r14, %rdi
    00001a21: 	subq	start_time(%rip), %rax
    00001a28: 	cvtsi2sd	%rax, %xmm0
    00001a2d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a35: 	callq	_Z13record_resultdPKc # Offset: 6709
    00001a3a: 	movq	0xe0(%rsp), %rdi
    00001a42: 	cmpq	0x18(%rsp), %rdi
    00001a47: 	je	.Ltmp2274 # Offset: 6727
    00001a49: 	movq	0xf0(%rsp), %rax
    00001a51: 	leaq	0x1(%rax), %rsi
    00001a55: 	callq	_ZdlPvm@PLT # Offset: 6741
.Ltmp2274:
    00001a5a: 	movq	0x10(%rsp), %r15
    00001a5f: 	movq	0x20(%rsp), %rsi
    00001a64: 	leaq	DATAat0x38369(%rip), %rdx
    00001a6b: 	movq	%r15, %rdi
    00001a6e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6766
    00001a73: 	callq	clock@PLT # Offset: 6771
    00001a78: 	movq	%r15, %rsi
    00001a7b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a82: 	movq	%rax, start_time(%rip)
    00001a89: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6793
    00001a8e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a95: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a9c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001aa3: 	je	.Ltmp2275 # Offset: 6819
.Ltmp2379:
    00001aa9: 	movq	-0x20(%rax), %r14
    00001aad: 	callq	clock@PLT # Offset: 6829
    00001ab2: 	pxor	%xmm0, %xmm0
    00001ab6: 	movq	%rax, end_time(%rip)
    00001abd: 	movq	%r14, %rdi
    00001ac0: 	subq	start_time(%rip), %rax
    00001ac7: 	cvtsi2sd	%rax, %xmm0
    00001acc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001ad4: 	callq	_Z13record_resultdPKc # Offset: 6868
    00001ad9: 	movq	0xe0(%rsp), %rdi
    00001ae1: 	cmpq	0x18(%rsp), %rdi
    00001ae6: 	je	.Ltmp2276 # Offset: 6886
    00001ae8: 	movq	0xf0(%rsp), %rax
    00001af0: 	leaq	0x1(%rax), %rsi
    00001af4: 	callq	_ZdlPvm@PLT # Offset: 6900
.Ltmp2276:
    00001af9: 	movq	0x10(%rsp), %r15
    00001afe: 	movq	0x20(%rsp), %rsi
    00001b03: 	leaq	DATAat0x38381(%rip), %rdx
    00001b0a: 	movq	%r15, %rdi
    00001b0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6925
    00001b12: 	callq	clock@PLT # Offset: 6930
    00001b17: 	movq	%r15, %rsi
    00001b1a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b21: 	movq	%rax, start_time(%rip)
    00001b28: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6952
    00001b2d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b34: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b3b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b42: 	je	.Ltmp2277 # Offset: 6978
.Ltmp2378:
    00001b48: 	movq	-0x20(%rax), %r14
    00001b4c: 	callq	clock@PLT # Offset: 6988
    00001b51: 	pxor	%xmm0, %xmm0
    00001b55: 	movq	%rax, end_time(%rip)
    00001b5c: 	movq	%r14, %rdi
    00001b5f: 	subq	start_time(%rip), %rax
    00001b66: 	cvtsi2sd	%rax, %xmm0
    00001b6b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b73: 	callq	_Z13record_resultdPKc # Offset: 7027
    00001b78: 	movq	0xe0(%rsp), %rdi
    00001b80: 	cmpq	0x18(%rsp), %rdi
    00001b85: 	je	.Ltmp2278 # Offset: 7045
    00001b87: 	movq	0xf0(%rsp), %rax
    00001b8f: 	leaq	0x1(%rax), %rsi
    00001b93: 	callq	_ZdlPvm@PLT # Offset: 7059
.Ltmp2278:
    00001b98: 	movq	0x20(%rsp), %r15
    00001b9d: 	leaq	0xa0(%rsp), %rdi
    00001ba5: 	leaq	DATAat0x384a0(%rip), %rdx
    00001bac: 	movq	%r15, %rsi
    00001baf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7087
    00001bb4: 	movl	iterations(%rip), %esi
    00001bba: 	movq	0xa0(%rsp), %rdi
    00001bc2: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 7106
    00001bc7: 	movq	0x10(%rsp), %rdi
    00001bcc: 	leaq	DATAat0x384c8(%rip), %rdx
    00001bd3: 	movq	%r15, %rsi
    00001bd6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7126
    00001bdb: 	callq	clock@PLT # Offset: 7131
    00001be0: 	movl	iterations(%rip), %esi
    00001be6: 	movq	%rax, start_time(%rip)
    00001bed: 	testl	%esi, %esi
    00001bef: 	jle	.Ltmp2279 # Offset: 7151
    00001bf1: 	leaq	(%rbp,%r12), %r14
    00001bf6: 	addq	0x30(%rsp), %r14
    00001bfb: 	xorl	%r15d, %r15d
    00001bfe: 	addq	%r13, %r14
    00001c01: 	nopl	(%rax) # Size: 7
.Ltmp2282:
    00001c08: 	movq	0x8(%rsp), %rax
    00001c0d: 	xorl	%edx, %edx
    00001c0f: 	nop # Size: 1
.Ltmp2280:
    00001c10: 	movq	(%rax), %rcx
    00001c13: 	addq	$0x8, %rax
    00001c17: 	imulq	%r14, %rcx
    00001c1b: 	addq	%rcx, %rdx
    00001c1e: 	cmpq	%rax, %rbx
    00001c21: 	jne	.Ltmp2280 # Offset: 7201
    00001c23: 	cvttsd2si	init_value(%rip), %rax
    00001c2c: 	imulq	%r14, %rax
    00001c30: 	imulq	$0x1f40, %rax, %rax
    00001c37: 	cmpq	%rax, %rdx
    00001c3a: 	je	.Ltmp2281 # Offset: 7226
    00001c3c: 	movl	current_test(%rip), %edx
    00001c42: 	leaq	DATAat0x381c8(%rip), %rsi
    00001c49: 	movl	$0x1, %edi
    00001c4e: 	xorl	%eax, %eax
    00001c50: 	callq	__printf_chk@PLT # Offset: 7248
    00001c55: 	movl	iterations(%rip), %esi
.Ltmp2281:
    00001c5b: 	addl	$0x1, %r15d
    00001c5f: 	cmpl	%esi, %r15d
    00001c62: 	jl	.Ltmp2282 # Offset: 7266
.Ltmp2279:
    00001c64: 	movq	0x10(%rsp), %rsi
    00001c69: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7280
    00001c75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c7c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c83: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c8a: 	je	.Ltmp2283 # Offset: 7306
.Ltmp2377:
    00001c90: 	movq	-0x20(%rax), %r14
    00001c94: 	callq	clock@PLT # Offset: 7316
    00001c99: 	pxor	%xmm0, %xmm0
    00001c9d: 	movq	%rax, end_time(%rip)
    00001ca4: 	movq	%r14, %rdi
    00001ca7: 	subq	start_time(%rip), %rax
    00001cae: 	cvtsi2sd	%rax, %xmm0
    00001cb3: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001cbb: 	callq	_Z13record_resultdPKc # Offset: 7355
    00001cc0: 	movq	0xe0(%rsp), %rdi
    00001cc8: 	cmpq	0x18(%rsp), %rdi
    00001ccd: 	je	.Ltmp2284 # Offset: 7373
    00001ccf: 	movq	0xf0(%rsp), %rax
    00001cd7: 	leaq	0x1(%rax), %rsi
    00001cdb: 	callq	_ZdlPvm@PLT # Offset: 7387
.Ltmp2284:
    00001ce0: 	movq	0x20(%rsp), %rsi
    00001ce5: 	movq	0x10(%rsp), %rdi
    00001cea: 	leaq	DATAat0x384e8(%rip), %rdx
    00001cf1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7409
    00001cf6: 	callq	clock@PLT # Offset: 7414
    00001cfb: 	movl	iterations(%rip), %esi
    00001d01: 	movq	%rax, start_time(%rip)
    00001d08: 	testl	%esi, %esi
    00001d0a: 	jle	.Ltmp2285 # Offset: 7434
    00001d0c: 	leaq	(%rbp,%r12), %r14
    00001d11: 	addq	0x30(%rsp), %r14
    00001d16: 	xorl	%r15d, %r15d
    00001d19: 	addq	%r13, %r14
    00001d1c: 	nopl	(%rax) # Size: 4
.Ltmp2288:
    00001d20: 	movq	0x8(%rsp), %rax
    00001d25: 	xorl	%edx, %edx
    00001d27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2286:
    00001d30: 	movq	(%rax), %rcx
    00001d33: 	addq	$0x8, %rax
    00001d37: 	imulq	%r14, %rcx
    00001d3b: 	addq	%rcx, %rdx
    00001d3e: 	cmpq	%rbx, %rax
    00001d41: 	jne	.Ltmp2286 # Offset: 7489
    00001d43: 	cvttsd2si	init_value(%rip), %rax
    00001d4c: 	imulq	%r14, %rax
    00001d50: 	imulq	$0x1f40, %rax, %rax
    00001d57: 	cmpq	%rax, %rdx
    00001d5a: 	je	.Ltmp2287 # Offset: 7514
    00001d5c: 	movl	current_test(%rip), %edx
    00001d62: 	leaq	DATAat0x381c8(%rip), %rsi
    00001d69: 	movl	$0x1, %edi
    00001d6e: 	xorl	%eax, %eax
    00001d70: 	callq	__printf_chk@PLT # Offset: 7536
    00001d75: 	movl	iterations(%rip), %esi
.Ltmp2287:
    00001d7b: 	addl	$0x1, %r15d
    00001d7f: 	cmpl	%esi, %r15d
    00001d82: 	jl	.Ltmp2288 # Offset: 7554
.Ltmp2285:
    00001d84: 	movq	0x10(%rsp), %rsi
    00001d89: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d90: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7568
    00001d95: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d9c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001da3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001daa: 	je	.Ltmp2289 # Offset: 7594
.Ltmp2376:
    00001db0: 	movq	-0x20(%rax), %r14
    00001db4: 	callq	clock@PLT # Offset: 7604
    00001db9: 	pxor	%xmm0, %xmm0
    00001dbd: 	movq	%rax, end_time(%rip)
    00001dc4: 	movq	%r14, %rdi
    00001dc7: 	subq	start_time(%rip), %rax
    00001dce: 	cvtsi2sd	%rax, %xmm0
    00001dd3: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001ddb: 	callq	_Z13record_resultdPKc # Offset: 7643
    00001de0: 	movq	0xe0(%rsp), %rdi
    00001de8: 	cmpq	0x18(%rsp), %rdi
    00001ded: 	je	.Ltmp2290 # Offset: 7661
    00001def: 	movq	0xf0(%rsp), %rax
    00001df7: 	leaq	0x1(%rax), %rsi
    00001dfb: 	callq	_ZdlPvm@PLT # Offset: 7675
.Ltmp2290:
    00001e00: 	movq	0x20(%rsp), %rsi
    00001e05: 	movq	0x10(%rsp), %rdi
    00001e0a: 	leaq	DATAat0x38508(%rip), %rdx
    00001e11: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7697
    00001e16: 	callq	clock@PLT # Offset: 7702
    00001e1b: 	movl	iterations(%rip), %esi
    00001e21: 	movq	%rax, start_time(%rip)
    00001e28: 	testl	%esi, %esi
    00001e2a: 	jle	.Ltmp2291 # Offset: 7722
    00001e2c: 	movq	%rbp, %r14
    00001e2f: 	xorl	%r15d, %r15d
    00001e32: 	subq	%r12, %r14
    00001e35: 	addq	0x30(%rsp), %r14
    00001e3a: 	subq	%r13, %r14
    00001e3d: 	nopl	(%rax) # Size: 3
.Ltmp2294:
    00001e40: 	movq	0x8(%rsp), %rax
    00001e45: 	xorl	%edx, %edx
    00001e47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2292:
    00001e50: 	movq	(%rax), %rcx
    00001e53: 	addq	$0x8, %rax
    00001e57: 	imulq	%r14, %rcx
    00001e5b: 	addq	%rcx, %rdx
    00001e5e: 	cmpq	%rax, %rbx
    00001e61: 	jne	.Ltmp2292 # Offset: 7777
    00001e63: 	cvttsd2si	init_value(%rip), %rax
    00001e6c: 	imulq	%r14, %rax
    00001e70: 	imulq	$0x1f40, %rax, %rax
    00001e77: 	cmpq	%rax, %rdx
    00001e7a: 	je	.Ltmp2293 # Offset: 7802
    00001e7c: 	movl	current_test(%rip), %edx
    00001e82: 	leaq	DATAat0x381c8(%rip), %rsi
    00001e89: 	movl	$0x1, %edi
    00001e8e: 	xorl	%eax, %eax
    00001e90: 	callq	__printf_chk@PLT # Offset: 7824
    00001e95: 	movl	iterations(%rip), %esi
.Ltmp2293:
    00001e9b: 	addl	$0x1, %r15d
    00001e9f: 	cmpl	%esi, %r15d
    00001ea2: 	jl	.Ltmp2294 # Offset: 7842
.Ltmp2291:
    00001ea4: 	movq	0x10(%rsp), %rsi
    00001ea9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001eb0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7856
    00001eb5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ebc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ec3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001eca: 	je	.Ltmp2295 # Offset: 7882
.Ltmp2375:
    00001ed0: 	movq	-0x20(%rax), %r14
    00001ed4: 	callq	clock@PLT # Offset: 7892
    00001ed9: 	pxor	%xmm0, %xmm0
    00001edd: 	movq	%rax, end_time(%rip)
    00001ee4: 	movq	%r14, %rdi
    00001ee7: 	subq	start_time(%rip), %rax
    00001eee: 	cvtsi2sd	%rax, %xmm0
    00001ef3: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001efb: 	callq	_Z13record_resultdPKc # Offset: 7931
    00001f00: 	movq	0xe0(%rsp), %rdi
    00001f08: 	cmpq	0x18(%rsp), %rdi
    00001f0d: 	je	.Ltmp2296 # Offset: 7949
    00001f0f: 	movq	0xf0(%rsp), %rax
    00001f17: 	leaq	0x1(%rax), %rsi
    00001f1b: 	callq	_ZdlPvm@PLT # Offset: 7963
.Ltmp2296:
    00001f20: 	movq	0x20(%rsp), %rsi
    00001f25: 	movq	0x10(%rsp), %rdi
    00001f2a: 	leaq	DATAat0x3839a(%rip), %rdx
    00001f31: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7985
    00001f36: 	callq	clock@PLT # Offset: 7990
    00001f3b: 	movl	iterations(%rip), %edi
    00001f41: 	xorl	%r14d, %r14d
    00001f44: 	leaq	DATAat0x381c8(%rip), %r15
    00001f4b: 	movq	%rax, start_time(%rip)
    00001f52: 	testl	%edi, %edi
    00001f54: 	jle	.Ltmp2297 # Offset: 8020
    00001f5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2300:
    00001f60: 	movq	0x8(%rsp), %rcx
    00001f65: 	xorl	%esi, %esi
    00001f67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2298:
    00001f70: 	movq	(%rcx), %rdx
    00001f73: 	movq	%rbp, %r8
    00001f76: 	movq	%r12, %rax
    00001f79: 	addq	$0x8, %rcx
    00001f7d: 	imulq	%rdx, %r8
    00001f81: 	imulq	%rdx, %rax
    00001f85: 	addq	%r8, %rax
    00001f88: 	leaq	(%r8,%rdx,2), %r8
    00001f8c: 	imulq	%r13, %rdx
    00001f90: 	addq	%r8, %rax
    00001f93: 	addq	%rdx, %rax
    00001f96: 	addq	%rax, %rsi
    00001f99: 	cmpq	%rbx, %rcx
    00001f9c: 	jne	.Ltmp2298 # Offset: 8092
    00001f9e: 	cvttsd2si	init_value(%rip), %rdx
    00001fa7: 	movq	%rbp, %rcx
    00001faa: 	movq	%r12, %rax
    00001fad: 	imulq	%rdx, %rcx
    00001fb1: 	imulq	%rdx, %rax
    00001fb5: 	addq	%rcx, %rax
    00001fb8: 	leaq	(%rcx,%rdx,2), %rcx
    00001fbc: 	imulq	%r13, %rdx
    00001fc0: 	addq	%rcx, %rax
    00001fc3: 	addq	%rdx, %rax
    00001fc6: 	imulq	$0x1f40, %rax, %rax
    00001fcd: 	cmpq	%rax, %rsi
    00001fd0: 	je	.Ltmp2299 # Offset: 8144
    00001fd2: 	movl	current_test(%rip), %edx
    00001fd8: 	movq	%r15, %rsi
    00001fdb: 	movl	$0x1, %edi
    00001fe0: 	xorl	%eax, %eax
    00001fe2: 	callq	__printf_chk@PLT # Offset: 8162
    00001fe7: 	movl	iterations(%rip), %edi
.Ltmp2299:
    00001fed: 	addl	$0x1, %r14d
    00001ff1: 	cmpl	%edi, %r14d
    00001ff4: 	jl	.Ltmp2300 # Offset: 8180
.Ltmp2297:
    00001ffa: 	movq	0x10(%rsp), %rsi
    00001fff: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002006: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8198
    0000200b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002012: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002019: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002020: 	je	.Ltmp2301 # Offset: 8224
.Ltmp2374:
    00002026: 	movq	-0x20(%rax), %r14
    0000202a: 	callq	clock@PLT # Offset: 8234
    0000202f: 	pxor	%xmm0, %xmm0
    00002033: 	movq	%rax, end_time(%rip)
    0000203a: 	movq	%r14, %rdi
    0000203d: 	subq	start_time(%rip), %rax
    00002044: 	cvtsi2sd	%rax, %xmm0
    00002049: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002051: 	callq	_Z13record_resultdPKc # Offset: 8273
    00002056: 	movq	0xe0(%rsp), %rdi
    0000205e: 	cmpq	0x18(%rsp), %rdi
    00002063: 	je	.Ltmp2302 # Offset: 8291
    00002065: 	movq	0xf0(%rsp), %rax
    0000206d: 	leaq	0x1(%rax), %rsi
    00002071: 	callq	_ZdlPvm@PLT # Offset: 8305
.Ltmp2302:
    00002076: 	movq	0x20(%rsp), %rsi
    0000207b: 	movq	0x10(%rsp), %rdi
    00002080: 	leaq	DATAat0x383b1(%rip), %rdx
    00002087: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8327
    0000208c: 	callq	clock@PLT # Offset: 8332
    00002091: 	movl	iterations(%rip), %edi
    00002097: 	xorl	%r14d, %r14d
    0000209a: 	leaq	DATAat0x381c8(%rip), %r15
    000020a1: 	movq	%rax, start_time(%rip)
    000020a8: 	testl	%edi, %edi
    000020aa: 	jle	.Ltmp2303 # Offset: 8362
.Ltmp2306:
    000020b0: 	movq	0x8(%rsp), %rcx
    000020b5: 	xorl	%esi, %esi
    000020b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2304:
    000020c0: 	movq	(%rcx), %rdx
    000020c3: 	movq	%rbp, %r8
    000020c6: 	movq	%r12, %rax
    000020c9: 	addq	$0x8, %rcx
    000020cd: 	imulq	%rdx, %r8
    000020d1: 	imulq	%rdx, %rax
    000020d5: 	addq	%r8, %rax
    000020d8: 	leaq	(%r8,%rdx,2), %r8
    000020dc: 	imulq	%r13, %rdx
    000020e0: 	addq	%r8, %rax
    000020e3: 	addq	%rdx, %rax
    000020e6: 	addq	%rax, %rsi
    000020e9: 	cmpq	%rcx, %rbx
    000020ec: 	jne	.Ltmp2304 # Offset: 8428
    000020ee: 	cvttsd2si	init_value(%rip), %rdx
    000020f7: 	movq	%rbp, %rcx
    000020fa: 	movq	%r12, %rax
    000020fd: 	imulq	%rdx, %rcx
    00002101: 	imulq	%rdx, %rax
    00002105: 	addq	%rcx, %rax
    00002108: 	leaq	(%rcx,%rdx,2), %rcx
    0000210c: 	imulq	%r13, %rdx
    00002110: 	addq	%rcx, %rax
    00002113: 	addq	%rdx, %rax
    00002116: 	imulq	$0x1f40, %rax, %rax
    0000211d: 	cmpq	%rax, %rsi
    00002120: 	je	.Ltmp2305 # Offset: 8480
    00002122: 	movl	current_test(%rip), %edx
    00002128: 	movq	%r15, %rsi
    0000212b: 	movl	$0x1, %edi
    00002130: 	xorl	%eax, %eax
    00002132: 	callq	__printf_chk@PLT # Offset: 8498
    00002137: 	movl	iterations(%rip), %edi
.Ltmp2305:
    0000213d: 	addl	$0x1, %r14d
    00002141: 	cmpl	%edi, %r14d
    00002144: 	jl	.Ltmp2306 # Offset: 8516
.Ltmp2303:
    0000214a: 	movq	0x10(%rsp), %rsi
    0000214f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002156: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8534
    0000215b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002162: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002169: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002170: 	je	.Ltmp2307 # Offset: 8560
.Ltmp2373:
    00002176: 	movq	-0x20(%rax), %r14
    0000217a: 	callq	clock@PLT # Offset: 8570
    0000217f: 	pxor	%xmm0, %xmm0
    00002183: 	movq	%rax, end_time(%rip)
    0000218a: 	movq	%r14, %rdi
    0000218d: 	subq	start_time(%rip), %rax
    00002194: 	cvtsi2sd	%rax, %xmm0
    00002199: 	divsd	DATAat0x385e0(%rip), %xmm0
    000021a1: 	callq	_Z13record_resultdPKc # Offset: 8609
    000021a6: 	movq	0xe0(%rsp), %rdi
    000021ae: 	cmpq	0x18(%rsp), %rdi
    000021b3: 	je	.Ltmp2308 # Offset: 8627
    000021b5: 	movq	0xf0(%rsp), %rax
    000021bd: 	leaq	0x1(%rax), %rsi
    000021c1: 	callq	_ZdlPvm@PLT # Offset: 8641
.Ltmp2308:
    000021c6: 	movq	0x20(%rsp), %rsi
    000021cb: 	movq	0x10(%rsp), %rdi
    000021d0: 	leaq	DATAat0x383c9(%rip), %rdx
    000021d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8663
    000021dc: 	callq	clock@PLT # Offset: 8668
    000021e1: 	movl	iterations(%rip), %r8d
    000021e8: 	xorl	%r14d, %r14d
    000021eb: 	leaq	DATAat0x381c8(%rip), %r15
    000021f2: 	movq	%rax, start_time(%rip)
    000021f9: 	testl	%r8d, %r8d
    000021fc: 	jle	.Ltmp2309 # Offset: 8700
    00002202: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2312:
    00002208: 	movq	0x8(%rsp), %rcx
    0000220d: 	xorl	%edi, %edi
    0000220f: 	nop # Size: 1
.Ltmp2310:
    00002210: 	movq	(%rcx), %rax
    00002213: 	movq	%rbp, %rsi
    00002216: 	movq	%r12, %r9
    00002219: 	addq	$0x8, %rcx
    0000221d: 	imulq	%rax, %rsi
    00002221: 	imulq	%rax, %r9
    00002225: 	movq	%rsi, %rdx
    00002228: 	leaq	(%rsi,%rax,2), %rsi
    0000222c: 	imulq	%r13, %rax
    00002230: 	subq	%r9, %rdx
    00002233: 	addq	%rsi, %rdx
    00002236: 	subq	%rax, %rdx
    00002239: 	addq	%rdx, %rdi
    0000223c: 	cmpq	%rcx, %rbx
    0000223f: 	jne	.Ltmp2310 # Offset: 8767
    00002241: 	cvttsd2si	init_value(%rip), %rdx
    0000224a: 	movq	%rbp, %rcx
    0000224d: 	movq	%r12, %rsi
    00002250: 	imulq	%rdx, %rcx
    00002254: 	imulq	%rdx, %rsi
    00002258: 	movq	%rcx, %rax
    0000225b: 	leaq	(%rcx,%rdx,2), %rcx
    0000225f: 	imulq	%r13, %rdx
    00002263: 	subq	%rsi, %rax
    00002266: 	addq	%rcx, %rax
    00002269: 	subq	%rdx, %rax
    0000226c: 	imulq	$0x1f40, %rax, %rax
    00002273: 	cmpq	%rax, %rdi
    00002276: 	je	.Ltmp2311 # Offset: 8822
    00002278: 	movl	current_test(%rip), %edx
    0000227e: 	movq	%r15, %rsi
    00002281: 	movl	$0x1, %edi
    00002286: 	xorl	%eax, %eax
    00002288: 	callq	__printf_chk@PLT # Offset: 8840
    0000228d: 	movl	iterations(%rip), %r8d
.Ltmp2311:
    00002294: 	addl	$0x1, %r14d
    00002298: 	cmpl	%r8d, %r14d
    0000229b: 	jl	.Ltmp2312 # Offset: 8859
.Ltmp2309:
    000022a1: 	movq	0x10(%rsp), %rsi
    000022a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8877
    000022b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022c7: 	je	.Ltmp2313 # Offset: 8903
.Ltmp2372:
    000022cd: 	movq	-0x20(%rax), %r14
    000022d1: 	callq	clock@PLT # Offset: 8913
    000022d6: 	pxor	%xmm0, %xmm0
    000022da: 	movq	%rax, end_time(%rip)
    000022e1: 	movq	%r14, %rdi
    000022e4: 	subq	start_time(%rip), %rax
    000022eb: 	cvtsi2sd	%rax, %xmm0
    000022f0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000022f8: 	callq	_Z13record_resultdPKc # Offset: 8952
    000022fd: 	movq	0xe0(%rsp), %rdi
    00002305: 	cmpq	0x18(%rsp), %rdi
    0000230a: 	je	.Ltmp2314 # Offset: 8970
    0000230c: 	movq	0xf0(%rsp), %rax
    00002314: 	leaq	0x1(%rax), %rsi
    00002318: 	callq	_ZdlPvm@PLT # Offset: 8984
.Ltmp2314:
    0000231d: 	movq	0x20(%rsp), %rsi
    00002322: 	movq	0x10(%rsp), %rdi
    00002327: 	leaq	DATAat0x38528(%rip), %rdx
    0000232e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9006
    00002333: 	callq	clock@PLT # Offset: 9011
    00002338: 	movl	iterations(%rip), %esi
    0000233e: 	xorl	%r15d, %r15d
    00002341: 	movq	%rax, start_time(%rip)
    00002348: 	movq	0x30(%rsp), %rax
    0000234d: 	leaq	(%r12,%rax), %r14
    00002351: 	addq	%r13, %r14
    00002354: 	testl	%esi, %esi
    00002356: 	jle	.Ltmp2315 # Offset: 9046
    00002358: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2318:
    00002360: 	movq	0x8(%rsp), %rax
    00002365: 	xorl	%ecx, %ecx
    00002367: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2316:
    00002370: 	movq	(%rax), %rdx
    00002373: 	addq	$0x8, %rax
    00002377: 	addq	%rbp, %rdx
    0000237a: 	imulq	%r14, %rdx
    0000237e: 	addq	%rdx, %rcx
    00002381: 	cmpq	%rax, %rbx
    00002384: 	jne	.Ltmp2316 # Offset: 9092
    00002386: 	cvttsd2si	init_value(%rip), %rax
    0000238f: 	addq	%rbp, %rax
    00002392: 	imulq	%r14, %rax
    00002396: 	imulq	$0x1f40, %rax, %rax
    0000239d: 	cmpq	%rax, %rcx
    000023a0: 	je	.Ltmp2317 # Offset: 9120
    000023a2: 	movl	current_test(%rip), %edx
    000023a8: 	leaq	DATAat0x381c8(%rip), %rsi
    000023af: 	movl	$0x1, %edi
    000023b4: 	xorl	%eax, %eax
    000023b6: 	callq	__printf_chk@PLT # Offset: 9142
    000023bb: 	movl	iterations(%rip), %esi
.Ltmp2317:
    000023c1: 	addl	$0x1, %r15d
    000023c5: 	cmpl	%esi, %r15d
    000023c8: 	jl	.Ltmp2318 # Offset: 9160
.Ltmp2315:
    000023ca: 	movq	0x10(%rsp), %rsi
    000023cf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023d6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9174
    000023db: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023e2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023f0: 	je	.Ltmp2319 # Offset: 9200
.Ltmp2371:
    000023f6: 	movq	-0x20(%rax), %r14
    000023fa: 	callq	clock@PLT # Offset: 9210
    000023ff: 	pxor	%xmm0, %xmm0
    00002403: 	movq	%rax, end_time(%rip)
    0000240a: 	movq	%r14, %rdi
    0000240d: 	subq	start_time(%rip), %rax
    00002414: 	cvtsi2sd	%rax, %xmm0
    00002419: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002421: 	callq	_Z13record_resultdPKc # Offset: 9249
    00002426: 	movq	0xe0(%rsp), %rdi
    0000242e: 	cmpq	0x18(%rsp), %rdi
    00002433: 	je	.Ltmp2320 # Offset: 9267
    00002435: 	movq	0xf0(%rsp), %rax
    0000243d: 	leaq	0x1(%rax), %rsi
    00002441: 	callq	_ZdlPvm@PLT # Offset: 9281
.Ltmp2320:
    00002446: 	movq	0x20(%rsp), %rsi
    0000244b: 	movq	0x10(%rsp), %rdi
    00002450: 	leaq	DATAat0x383e1(%rip), %rdx
    00002457: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9303
    0000245c: 	callq	clock@PLT # Offset: 9308
    00002461: 	movl	iterations(%rip), %esi
    00002467: 	movq	%rax, start_time(%rip)
    0000246e: 	testl	%esi, %esi
    00002470: 	jle	.Ltmp2321 # Offset: 9328
    00002476: 	movq	0x30(%rsp), %r15
    0000247b: 	movq	%rbp, %r14
    0000247e: 	movl	$0x0, 0x2c(%rsp)
    00002486: 	imulq	%r12, %r14
    0000248a: 	imulq	%rbp, %r15
    0000248e: 	imulq	%r13, %rbp
    00002492: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2324:
    00002498: 	movq	0x8(%rsp), %rdx
    0000249d: 	movq	0x30(%rsp), %rdi
    000024a2: 	xorl	%ecx, %ecx
    000024a4: 	nopl	(%rax) # Size: 4
.Ltmp2322:
    000024a8: 	leaq	(%rdi,%r12), %rax
    000024ac: 	addq	$0x8, %rdx
    000024b0: 	addq	%r13, %rax
    000024b3: 	imulq	-0x8(%rdx), %rax
    000024b8: 	addq	%r14, %rax
    000024bb: 	addq	%r15, %rax
    000024be: 	addq	%rbp, %rax
    000024c1: 	addq	%rax, %rcx
    000024c4: 	cmpq	%rdx, %rbx
    000024c7: 	jne	.Ltmp2322 # Offset: 9415
    000024c9: 	cvttsd2si	init_value(%rip), %rdx
    000024d2: 	movq	0x30(%rsp), %rax
    000024d7: 	addq	%r12, %rax
    000024da: 	addq	%r13, %rax
    000024dd: 	imulq	%rdx, %rax
    000024e1: 	addq	%r14, %rax
    000024e4: 	addq	%r15, %rax
    000024e7: 	addq	%rbp, %rax
    000024ea: 	imulq	$0x1f40, %rax, %rax
    000024f1: 	cmpq	%rax, %rcx
    000024f4: 	je	.Ltmp2323 # Offset: 9460
    000024f6: 	movl	current_test(%rip), %edx
    000024fc: 	leaq	DATAat0x381c8(%rip), %rsi
    00002503: 	movl	$0x1, %edi
    00002508: 	xorl	%eax, %eax
    0000250a: 	callq	__printf_chk@PLT # Offset: 9482
    0000250f: 	movl	iterations(%rip), %esi
.Ltmp2323:
    00002515: 	addl	$0x1, 0x2c(%rsp)
    0000251a: 	movl	0x2c(%rsp), %eax
    0000251e: 	cmpl	%esi, %eax
    00002520: 	jl	.Ltmp2324 # Offset: 9504
.Ltmp2321:
    00002526: 	movq	0x10(%rsp), %rsi
    0000252b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002532: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9522
    00002537: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000253e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002545: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000254c: 	je	.Ltmp2325 # Offset: 9548
.Ltmp2370:
    00002552: 	movq	-0x20(%rax), %rbp
    00002556: 	callq	clock@PLT # Offset: 9558
    0000255b: 	pxor	%xmm0, %xmm0
    0000255f: 	movq	%rax, end_time(%rip)
    00002566: 	movq	%rbp, %rdi
    00002569: 	subq	start_time(%rip), %rax
    00002570: 	cvtsi2sd	%rax, %xmm0
    00002575: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000257d: 	callq	_Z13record_resultdPKc # Offset: 9597
    00002582: 	movq	0xe0(%rsp), %rdi
    0000258a: 	cmpq	0x18(%rsp), %rdi
    0000258f: 	je	.Ltmp2326 # Offset: 9615
    00002591: 	movq	0xf0(%rsp), %rax
    00002599: 	leaq	0x1(%rax), %rsi
    0000259d: 	callq	_ZdlPvm@PLT # Offset: 9629
.Ltmp2326:
    000025a2: 	movq	0x20(%rsp), %rbx
    000025a7: 	leaq	0xc0(%rsp), %rdi
    000025af: 	leaq	DATAat0x3839a(%rip), %rdx
    000025b6: 	movq	%rbx, %rsi
    000025b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9657
    000025be: 	movl	iterations(%rip), %esi
    000025c4: 	movq	0xc0(%rsp), %rdi
    000025cc: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 9676
    000025d1: 	movq	%rbx, %rsi
    000025d4: 	movq	0x10(%rsp), %rbx
    000025d9: 	leaq	DATAat0x383fa(%rip), %rdx
    000025e0: 	movq	%rbx, %rdi
    000025e3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9699
    000025e8: 	movq	0x8(%rsp), %rdi
    000025ed: 	movq	%rbx, %rdx
    000025f0: 	movl	$0x1f40, %esi
    000025f5: 	callq	_Z10test_2termIl20custom_2term_add_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9717
    000025fa: 	movq	0xe0(%rsp), %rdi
    00002602: 	cmpq	0x18(%rsp), %rdi
    00002607: 	je	.Ltmp2327 # Offset: 9735
    00002609: 	movq	0xf0(%rsp), %rax
    00002611: 	leaq	0x1(%rax), %rsi
    00002615: 	callq	_ZdlPvm@PLT # Offset: 9749
.Ltmp2327:
    0000261a: 	movq	0x10(%rsp), %rbx
    0000261f: 	movq	0x20(%rsp), %rsi
    00002624: 	leaq	DATAat0x38409(%rip), %rdx
    0000262b: 	movq	%rbx, %rdi
    0000262e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9774
    00002633: 	movq	0x8(%rsp), %rdi
    00002638: 	movq	%rbx, %rdx
    0000263b: 	movl	$0x1f40, %esi
    00002640: 	callq	_Z10test_2termIl16custom_2term_addIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9792
    00002645: 	movq	0xe0(%rsp), %rdi
    0000264d: 	cmpq	0x18(%rsp), %rdi
    00002652: 	je	.Ltmp2328 # Offset: 9810
    00002654: 	movq	0xf0(%rsp), %rax
    0000265c: 	leaq	0x1(%rax), %rsi
    00002660: 	callq	_ZdlPvm@PLT # Offset: 9824
.Ltmp2328:
    00002665: 	movq	0x10(%rsp), %rbx
    0000266a: 	movq	0x20(%rsp), %rsi
    0000266f: 	leaq	DATAat0x38414(%rip), %rdx
    00002676: 	movq	%rbx, %rdi
    00002679: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9849
    0000267e: 	movq	0x8(%rsp), %rdi
    00002683: 	movq	%rbx, %rdx
    00002686: 	movl	$0x1f40, %esi
    0000268b: 	callq	_Z10test_2termIl20custom_2term_sub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9867
    00002690: 	movq	0xe0(%rsp), %rdi
    00002698: 	cmpq	0x18(%rsp), %rdi
    0000269d: 	je	.Ltmp2329 # Offset: 9885
    0000269f: 	movq	0xf0(%rsp), %rax
    000026a7: 	leaq	0x1(%rax), %rsi
    000026ab: 	callq	_ZdlPvm@PLT # Offset: 9899
.Ltmp2329:
    000026b0: 	movq	0x10(%rsp), %rbx
    000026b5: 	movq	0x20(%rsp), %rsi
    000026ba: 	leaq	DATAat0x38423(%rip), %rdx
    000026c1: 	movq	%rbx, %rdi
    000026c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9924
    000026c9: 	movq	0x8(%rsp), %rdi
    000026ce: 	movq	%rbx, %rdx
    000026d1: 	movl	$0x1f40, %esi
    000026d6: 	callq	_Z10test_2termIl16custom_2term_subIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9942
    000026db: 	movq	0xe0(%rsp), %rdi
    000026e3: 	cmpq	0x18(%rsp), %rdi
    000026e8: 	je	.Ltmp2330 # Offset: 9960
    000026ea: 	movq	0xf0(%rsp), %rax
    000026f2: 	leaq	0x1(%rax), %rsi
    000026f6: 	callq	_ZdlPvm@PLT # Offset: 9974
.Ltmp2330:
    000026fb: 	movq	0x10(%rsp), %rbx
    00002700: 	movq	0x20(%rsp), %rsi
    00002705: 	leaq	DATAat0x3842e(%rip), %rdx
    0000270c: 	movq	%rbx, %rdi
    0000270f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9999
    00002714: 	movq	0x8(%rsp), %rdi
    00002719: 	movq	%rbx, %rdx
    0000271c: 	movl	$0x1f40, %esi
    00002721: 	callq	_Z10test_2termIl23custom_2term_addsub_optIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10017
    00002726: 	movq	0xe0(%rsp), %rdi
    0000272e: 	cmpq	0x18(%rsp), %rdi
    00002733: 	je	.Ltmp2331 # Offset: 10035
    00002735: 	movq	0xf0(%rsp), %rax
    0000273d: 	leaq	0x1(%rax), %rsi
    00002741: 	callq	_ZdlPvm@PLT # Offset: 10049
.Ltmp2331:
    00002746: 	movq	0x10(%rsp), %rbx
    0000274b: 	movq	0x20(%rsp), %rsi
    00002750: 	leaq	DATAat0x38440(%rip), %rdx
    00002757: 	movq	%rbx, %rdi
    0000275a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10074
    0000275f: 	movq	0x8(%rsp), %rdi
    00002764: 	movq	%rbx, %rdx
    00002767: 	movl	$0x1f40, %esi
    0000276c: 	callq	_Z10test_2termIl19custom_2term_addsubIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10092
    00002771: 	movq	0xe0(%rsp), %rdi
    00002779: 	cmpq	0x18(%rsp), %rdi
    0000277e: 	je	.Ltmp2332 # Offset: 10110
    00002780: 	movq	0xf0(%rsp), %rax
    00002788: 	leaq	0x1(%rax), %rsi
    0000278c: 	callq	_ZdlPvm@PLT # Offset: 10124
.Ltmp2332:
    00002791: 	movq	0x20(%rsp), %rsi
    00002796: 	movq	0x10(%rsp), %rdi
    0000279b: 	leaq	DATAat0x3844e(%rip), %rdx
    000027a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10146
    000027a7: 	callq	clock@PLT # Offset: 10151
    000027ac: 	movl	iterations(%rip), %ecx
    000027b2: 	xorl	%ebp, %ebp
    000027b4: 	leaq	DATAat0x381c8(%rip), %r12
    000027bb: 	movq	%rax, start_time(%rip)
    000027c2: 	movq	0x8(%rsp), %rax
    000027c7: 	leaq	0xf9f0(%rax), %rbx
    000027ce: 	testl	%ecx, %ecx
    000027d0: 	jle	.Ltmp2333 # Offset: 10192
    000027d6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2336:
    000027e0: 	movq	0x8(%rsp), %rax
    000027e5: 	movq	0x108(%rsp), %rdx
    000027ed: 	pxor	%xmm0, %xmm0
    000027f1: 	xorq	0x100(%rsp), %rdx
    000027f9: 	nopl	(%rax) # Size: 7
.Ltmp2334:
    00002800: 	movdqu	0x8(%rax), %xmm1
    00002805: 	pxor	(%rax), %xmm1
    00002809: 	addq	$0x10, %rax
    0000280d: 	paddq	%xmm1, %xmm0
    00002811: 	cmpq	%rbx, %rax
    00002814: 	jne	.Ltmp2334 # Offset: 10260
    00002816: 	movdqa	%xmm0, %xmm1
    0000281a: 	psrldq	$0x8, %xmm1
    0000281f: 	paddq	%xmm1, %xmm0
    00002823: 	movq	%xmm0, %rax
    00002828: 	addq	%rdx, %rax
    0000282b: 	movq	0xfaf0(%rsp), %rdx
    00002833: 	xorq	0xfaf8(%rsp), %rdx
    0000283b: 	addq	%rdx, %rax
    0000283e: 	je	.Ltmp2335 # Offset: 10302
    00002840: 	movl	current_test(%rip), %edx
    00002846: 	movq	%r12, %rsi
    00002849: 	movl	$0x1, %edi
    0000284e: 	xorl	%eax, %eax
    00002850: 	callq	__printf_chk@PLT # Offset: 10320
    00002855: 	movl	iterations(%rip), %ecx
    0000285b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2335:
    00002860: 	addl	$0x1, %ebp
    00002863: 	cmpl	%ecx, %ebp
    00002865: 	jl	.Ltmp2336 # Offset: 10341
.Ltmp2333:
    0000286b: 	movq	0x10(%rsp), %rsi
    00002870: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002877: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10359
    0000287c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002883: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000288a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002891: 	je	.Ltmp2337 # Offset: 10385
.Ltmp2369:
    00002897: 	movq	-0x20(%rax), %rbp
    0000289b: 	callq	clock@PLT # Offset: 10395
    000028a0: 	pxor	%xmm0, %xmm0
    000028a4: 	movq	%rax, end_time(%rip)
    000028ab: 	movq	%rbp, %rdi
    000028ae: 	subq	start_time(%rip), %rax
    000028b5: 	cvtsi2sd	%rax, %xmm0
    000028ba: 	divsd	DATAat0x385e0(%rip), %xmm0
    000028c2: 	callq	_Z13record_resultdPKc # Offset: 10434
    000028c7: 	movq	0xe0(%rsp), %rdi
    000028cf: 	cmpq	0x18(%rsp), %rdi
    000028d4: 	je	.Ltmp2338 # Offset: 10452
    000028d6: 	movq	0xf0(%rsp), %rax
    000028de: 	leaq	0x1(%rax), %rsi
    000028e2: 	callq	_ZdlPvm@PLT # Offset: 10466
.Ltmp2338:
    000028e7: 	movq	0x10(%rsp), %rbx
    000028ec: 	movq	0x20(%rsp), %rsi
    000028f1: 	leaq	DATAat0x3845d(%rip), %rdx
    000028f8: 	movq	%rbx, %rdi
    000028fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10491
    00002900: 	movq	0x8(%rsp), %rdi
    00002905: 	movq	%rbx, %rdx
    00002908: 	movl	$0x1f40, %esi
    0000290d: 	callq	_Z10test_2termIl16custom_2term_xorIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10509
    00002912: 	movq	0xe0(%rsp), %rdi
    0000291a: 	cmpq	0x18(%rsp), %rdi
    0000291f: 	je	.Ltmp2339 # Offset: 10527
    00002921: 	movq	0xf0(%rsp), %rax
    00002929: 	leaq	0x1(%rax), %rsi
    0000292d: 	callq	_ZdlPvm@PLT # Offset: 10541
.Ltmp2339:
    00002932: 	movq	0x20(%rsp), %rsi
    00002937: 	movq	0x10(%rsp), %rdi
    0000293c: 	leaq	DATAat0x38468(%rip), %rdx
    00002943: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10563
    00002948: 	callq	clock@PLT # Offset: 10568
    0000294d: 	movl	iterations(%rip), %esi
    00002953: 	xorl	%ebp, %ebp
    00002955: 	leaq	DATAat0x381c8(%rip), %r12
    0000295c: 	movq	%rax, start_time(%rip)
    00002963: 	movq	0x8(%rsp), %rax
    00002968: 	leaq	0xf9f0(%rax), %rbx
    0000296f: 	testl	%esi, %esi
    00002971: 	jle	.Ltmp2340 # Offset: 10609
    00002977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2343:
    00002980: 	movq	0x8(%rsp), %rax
    00002985: 	movq	0x108(%rsp), %rcx
    0000298d: 	pxor	%xmm0, %xmm0
    00002991: 	orq	0x100(%rsp), %rcx
    00002999: 	nopl	(%rax) # Size: 7
.Ltmp2341:
    000029a0: 	movdqu	0x8(%rax), %xmm1
    000029a5: 	por	(%rax), %xmm1
    000029a9: 	addq	$0x10, %rax
    000029ad: 	paddq	%xmm1, %xmm0
    000029b1: 	cmpq	%rax, %rbx
    000029b4: 	jne	.Ltmp2341 # Offset: 10676
    000029b6: 	cvttsd2si	init_value(%rip), %rdx
    000029bf: 	movdqa	%xmm0, %xmm1
    000029c3: 	psrldq	$0x8, %xmm1
    000029c8: 	paddq	%xmm1, %xmm0
    000029cc: 	movq	%xmm0, %rax
    000029d1: 	imulq	$0x1f40, %rdx, %rdx
    000029d8: 	addq	%rcx, %rax
    000029db: 	movq	0xfaf0(%rsp), %rcx
    000029e3: 	orq	0xfaf8(%rsp), %rcx
    000029eb: 	addq	%rcx, %rax
    000029ee: 	cmpq	%rax, %rdx
    000029f1: 	je	.Ltmp2342 # Offset: 10737
    000029f3: 	movl	current_test(%rip), %edx
    000029f9: 	movq	%r12, %rsi
    000029fc: 	movl	$0x1, %edi
    00002a01: 	xorl	%eax, %eax
    00002a03: 	callq	__printf_chk@PLT # Offset: 10755
    00002a08: 	movl	iterations(%rip), %esi
    00002a0e: 	nop # Size: 2
.Ltmp2342:
    00002a10: 	addl	$0x1, %ebp
    00002a13: 	cmpl	%esi, %ebp
    00002a15: 	jl	.Ltmp2343 # Offset: 10773
.Ltmp2340:
    00002a1b: 	movq	0x10(%rsp), %rsi
    00002a20: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10791
    00002a2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a33: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a41: 	je	.Ltmp2344 # Offset: 10817
.Ltmp2368:
    00002a47: 	movq	-0x20(%rax), %rbp
    00002a4b: 	callq	clock@PLT # Offset: 10827
    00002a50: 	pxor	%xmm0, %xmm0
    00002a54: 	movq	%rax, end_time(%rip)
    00002a5b: 	movq	%rbp, %rdi
    00002a5e: 	subq	start_time(%rip), %rax
    00002a65: 	cvtsi2sd	%rax, %xmm0
    00002a6a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002a72: 	callq	_Z13record_resultdPKc # Offset: 10866
    00002a77: 	movq	0xe0(%rsp), %rdi
    00002a7f: 	cmpq	0x18(%rsp), %rdi
    00002a84: 	je	.Ltmp2345 # Offset: 10884
    00002a86: 	movq	0xf0(%rsp), %rax
    00002a8e: 	leaq	0x1(%rax), %rsi
    00002a92: 	callq	_ZdlPvm@PLT # Offset: 10898
.Ltmp2345:
    00002a97: 	movq	0x20(%rsp), %rsi
    00002a9c: 	movq	0x10(%rsp), %rdi
    00002aa1: 	leaq	DATAat0x38476(%rip), %rdx
    00002aa8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10920
    00002aad: 	callq	clock@PLT # Offset: 10925
    00002ab2: 	movl	iterations(%rip), %esi
    00002ab8: 	xorl	%ebp, %ebp
    00002aba: 	leaq	DATAat0x381c8(%rip), %r12
    00002ac1: 	movq	%rax, start_time(%rip)
    00002ac8: 	movq	0x8(%rsp), %rax
    00002acd: 	leaq	0xf9f0(%rax), %rbx
    00002ad4: 	testl	%esi, %esi
    00002ad6: 	jle	.Ltmp2346 # Offset: 10966
    00002adc: 	nopl	(%rax) # Size: 4
.Ltmp2349:
    00002ae0: 	movq	0x8(%rsp), %rax
    00002ae5: 	movq	0x108(%rsp), %rcx
    00002aed: 	pxor	%xmm0, %xmm0
    00002af1: 	orq	0x100(%rsp), %rcx
    00002af9: 	nopl	(%rax) # Size: 7
.Ltmp2347:
    00002b00: 	movdqu	0x8(%rax), %xmm1
    00002b05: 	por	(%rax), %xmm1
    00002b09: 	addq	$0x10, %rax
    00002b0d: 	paddq	%xmm1, %xmm0
    00002b11: 	cmpq	%rbx, %rax
    00002b14: 	jne	.Ltmp2347 # Offset: 11028
    00002b16: 	cvttsd2si	init_value(%rip), %rdx
    00002b1f: 	movdqa	%xmm0, %xmm1
    00002b23: 	psrldq	$0x8, %xmm1
    00002b28: 	paddq	%xmm1, %xmm0
    00002b2c: 	movq	%xmm0, %rax
    00002b31: 	imulq	$0x1f40, %rdx, %rdx
    00002b38: 	addq	%rcx, %rax
    00002b3b: 	movq	0xfaf0(%rsp), %rcx
    00002b43: 	orq	0xfaf8(%rsp), %rcx
    00002b4b: 	addq	%rcx, %rax
    00002b4e: 	cmpq	%rax, %rdx
    00002b51: 	je	.Ltmp2348 # Offset: 11089
    00002b53: 	movl	current_test(%rip), %edx
    00002b59: 	movq	%r12, %rsi
    00002b5c: 	movl	$0x1, %edi
    00002b61: 	xorl	%eax, %eax
    00002b63: 	callq	__printf_chk@PLT # Offset: 11107
    00002b68: 	movl	iterations(%rip), %esi
    00002b6e: 	nop # Size: 2
.Ltmp2348:
    00002b70: 	addl	$0x1, %ebp
    00002b73: 	cmpl	%esi, %ebp
    00002b75: 	jl	.Ltmp2349 # Offset: 11125
.Ltmp2346:
    00002b7b: 	movq	0x10(%rsp), %rsi
    00002b80: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b87: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11143
    00002b8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b93: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b9a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ba1: 	je	.Ltmp2350 # Offset: 11169
.Ltmp2367:
    00002ba7: 	movq	-0x20(%rax), %rbp
    00002bab: 	callq	clock@PLT # Offset: 11179
    00002bb0: 	pxor	%xmm0, %xmm0
    00002bb4: 	movq	%rax, end_time(%rip)
    00002bbb: 	movq	%rbp, %rdi
    00002bbe: 	subq	start_time(%rip), %rax
    00002bc5: 	cvtsi2sd	%rax, %xmm0
    00002bca: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002bd2: 	callq	_Z13record_resultdPKc # Offset: 11218
    00002bd7: 	movq	0xe0(%rsp), %rdi
    00002bdf: 	cmpq	0x18(%rsp), %rdi
    00002be4: 	je	.Ltmp2351 # Offset: 11236
    00002be6: 	movq	0xf0(%rsp), %rax
    00002bee: 	leaq	0x1(%rax), %rsi
    00002bf2: 	callq	_ZdlPvm@PLT # Offset: 11250
.Ltmp2351:
    00002bf7: 	movq	0x20(%rsp), %rsi
    00002bfc: 	movq	0x10(%rsp), %rdi
    00002c01: 	leaq	DATAat0x38480(%rip), %rdx
    00002c08: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11272
    00002c0d: 	callq	clock@PLT # Offset: 11277
    00002c12: 	movl	iterations(%rip), %esi
    00002c18: 	xorl	%ebp, %ebp
    00002c1a: 	leaq	DATAat0x381c8(%rip), %r12
    00002c21: 	movq	%rax, start_time(%rip)
    00002c28: 	movq	0x8(%rsp), %rax
    00002c2d: 	leaq	0xf9f0(%rax), %rbx
    00002c34: 	testl	%esi, %esi
    00002c36: 	jle	.Ltmp2352 # Offset: 11318
    00002c3c: 	nopl	(%rax) # Size: 4
.Ltmp2355:
    00002c40: 	movq	0x8(%rsp), %rax
    00002c45: 	movq	0x108(%rsp), %rdi
    00002c4d: 	pxor	%xmm0, %xmm0
    00002c51: 	andq	0x100(%rsp), %rdi
    00002c59: 	nopl	(%rax) # Size: 7
.Ltmp2353:
    00002c60: 	movdqu	0x8(%rax), %xmm1
    00002c65: 	pand	(%rax), %xmm1
    00002c69: 	addq	$0x10, %rax
    00002c6d: 	paddq	%xmm1, %xmm0
    00002c71: 	cmpq	%rbx, %rax
    00002c74: 	jne	.Ltmp2353 # Offset: 11380
    00002c76: 	cvttsd2si	init_value(%rip), %rcx
    00002c7f: 	movdqa	%xmm0, %xmm1
    00002c83: 	movq	0xfaf8(%rsp), %rax
    00002c8b: 	psrldq	$0x8, %xmm1
    00002c90: 	andq	0xfaf0(%rsp), %rax
    00002c98: 	paddq	%xmm1, %xmm0
    00002c9c: 	movq	%rax, %rdx
    00002c9f: 	movq	%xmm0, %rax
    00002ca4: 	imulq	$0x1f40, %rcx, %rcx
    00002cab: 	addq	%rdi, %rax
    00002cae: 	addq	%rdx, %rax
    00002cb1: 	cmpq	%rax, %rcx
    00002cb4: 	je	.Ltmp2354 # Offset: 11444
    00002cb6: 	movl	current_test(%rip), %edx
    00002cbc: 	movq	%r12, %rsi
    00002cbf: 	movl	$0x1, %edi
    00002cc4: 	xorl	%eax, %eax
    00002cc6: 	callq	__printf_chk@PLT # Offset: 11462
    00002ccb: 	movl	iterations(%rip), %esi
    00002cd1: 	nopl	(%rax) # Size: 7
.Ltmp2354:
    00002cd8: 	addl	$0x1, %ebp
    00002cdb: 	cmpl	%esi, %ebp
    00002cdd: 	jl	.Ltmp2355 # Offset: 11485
.Ltmp2352:
    00002ce3: 	movq	0x10(%rsp), %rsi
    00002ce8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002cef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11503
    00002cf4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002cfb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d02: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d09: 	je	.Ltmp2356 # Offset: 11529
.Ltmp2366:
    00002d0f: 	movq	-0x20(%rax), %rbp
    00002d13: 	callq	clock@PLT # Offset: 11539
    00002d18: 	pxor	%xmm0, %xmm0
    00002d1c: 	movq	%rax, end_time(%rip)
    00002d23: 	movq	%rbp, %rdi
    00002d26: 	subq	start_time(%rip), %rax
    00002d2d: 	cvtsi2sd	%rax, %xmm0
    00002d32: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d3a: 	callq	_Z13record_resultdPKc # Offset: 11578
    00002d3f: 	movq	0xe0(%rsp), %rdi
    00002d47: 	cmpq	0x18(%rsp), %rdi
    00002d4c: 	je	.Ltmp2357 # Offset: 11596
    00002d4e: 	movq	0xf0(%rsp), %rax
    00002d56: 	leaq	0x1(%rax), %rsi
    00002d5a: 	callq	_ZdlPvm@PLT # Offset: 11610
.Ltmp2357:
    00002d5f: 	movq	0x10(%rsp), %rbx
    00002d64: 	movq	0x20(%rsp), %rsi
    00002d69: 	leaq	DATAat0x3848f(%rip), %rdx
    00002d70: 	movq	%rbx, %rdi
    00002d73: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11635
    00002d78: 	movq	0x8(%rsp), %rdi
    00002d7d: 	movq	%rbx, %rdx
    00002d80: 	movl	$0x1f40, %esi
    00002d85: 	callq	_Z10test_2termIl16custom_2term_andIlEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11653
    00002d8a: 	movq	0xe0(%rsp), %rdi
    00002d92: 	cmpq	0x18(%rsp), %rdi
    00002d97: 	je	.Ltmp2358 # Offset: 11671
    00002d99: 	movq	0xf0(%rsp), %rax
    00002da1: 	leaq	0x1(%rax), %rsi
    00002da5: 	callq	_ZdlPvm@PLT # Offset: 11685
.Ltmp2358:
    00002daa: 	movq	0x20(%rsp), %rsi
    00002daf: 	movq	0x10(%rsp), %rdi
    00002db4: 	leaq	DATAat0x38550(%rip), %rdx
    00002dbb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11707
    00002dc0: 	movl	iterations(%rip), %esi
    00002dc6: 	movq	0xe0(%rsp), %rdi
    00002dce: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 11726
    00002dd3: 	movq	0xe0(%rsp), %rdi
    00002ddb: 	cmpq	0x18(%rsp), %rdi
    00002de0: 	je	.Ltmp2359 # Offset: 11744
    00002de2: 	movq	0xf0(%rsp), %rax
    00002dea: 	leaq	0x1(%rax), %rsi
    00002dee: 	callq	_ZdlPvm@PLT # Offset: 11758
.Ltmp2359:
    00002df3: 	movq	0xc0(%rsp), %rdi
    00002dfb: 	leaq	0xd0(%rsp), %rax
    00002e03: 	cmpq	%rax, %rdi
    00002e06: 	je	.Ltmp2360 # Offset: 11782
    00002e08: 	movq	0xd0(%rsp), %rax
    00002e10: 	leaq	0x1(%rax), %rsi
    00002e14: 	callq	_ZdlPvm@PLT # Offset: 11796
.Ltmp2360:
    00002e19: 	movq	0xa0(%rsp), %rdi
    00002e21: 	leaq	0xb0(%rsp), %rax
    00002e29: 	cmpq	%rax, %rdi
    00002e2c: 	je	.Ltmp2361 # Offset: 11820
    00002e2e: 	movq	0xb0(%rsp), %rax
    00002e36: 	leaq	0x1(%rax), %rsi
    00002e3a: 	callq	_ZdlPvm@PLT # Offset: 11834
.Ltmp2361:
    00002e3f: 	movq	0x80(%rsp), %rdi
    00002e47: 	leaq	0x90(%rsp), %rax
    00002e4f: 	cmpq	%rax, %rdi
    00002e52: 	je	.Ltmp2362 # Offset: 11858
    00002e54: 	movq	0x90(%rsp), %rax
    00002e5c: 	leaq	0x1(%rax), %rsi
    00002e60: 	callq	_ZdlPvm@PLT # Offset: 11872
.Ltmp2362:
    00002e65: 	movq	0x60(%rsp), %rdi
    00002e6a: 	cmpq	0x38(%rsp), %rdi
    00002e6f: 	je	.Ltmp2363 # Offset: 11887
    00002e71: 	movq	0x70(%rsp), %rax
    00002e76: 	leaq	0x1(%rax), %rsi
    00002e7a: 	callq	_ZdlPvm@PLT # Offset: 11898
.Ltmp2363:
    00002e7f: 	movq	0xfb08(%rsp), %rax
    00002e87: 	subq	%fs:0x28, %rax
    00002e90: 	jne	.Ltmp2364 # Offset: 11920
    00002e96: 	addq	$0xfb18, %rsp
    00002e9d: 	popq	%rbx
    00002e9e: 	popq	%rbp
    00002e9f: 	popq	%r12
    00002ea1: 	popq	%r13
    00002ea3: 	popq	%r14
    00002ea5: 	popq	%r15
    00002ea7: 	retq # Offset: 11943
.Ltmp2165:
    00002ea8: 	movq	-0x8(%rdx), %rax
    00002eac: 	addq	$0x200, %rax
    00002eb2: 	jmp	.Ltmp2365 # Offset: 11954
.Ltmp2356:
    00002eb7: 	movq	-0x8(%rdx), %rax
    00002ebb: 	addq	$0x200, %rax
    00002ec1: 	jmp	.Ltmp2366 # Offset: 11969
.Ltmp2350:
    00002ec6: 	movq	-0x8(%rdx), %rax
    00002eca: 	addq	$0x200, %rax
    00002ed0: 	jmp	.Ltmp2367 # Offset: 11984
.Ltmp2344:
    00002ed5: 	movq	-0x8(%rdx), %rax
    00002ed9: 	addq	$0x200, %rax
    00002edf: 	jmp	.Ltmp2368 # Offset: 11999
.Ltmp2337:
    00002ee4: 	movq	-0x8(%rdx), %rax
    00002ee8: 	addq	$0x200, %rax
    00002eee: 	jmp	.Ltmp2369 # Offset: 12014
.Ltmp2325:
    00002ef3: 	movq	-0x8(%rdx), %rax
    00002ef7: 	addq	$0x200, %rax
    00002efd: 	jmp	.Ltmp2370 # Offset: 12029
.Ltmp2319:
    00002f02: 	movq	-0x8(%rdx), %rax
    00002f06: 	addq	$0x200, %rax
    00002f0c: 	jmp	.Ltmp2371 # Offset: 12044
.Ltmp2313:
    00002f11: 	movq	-0x8(%rdx), %rax
    00002f15: 	addq	$0x200, %rax
    00002f1b: 	jmp	.Ltmp2372 # Offset: 12059
.Ltmp2307:
    00002f20: 	movq	-0x8(%rdx), %rax
    00002f24: 	addq	$0x200, %rax
    00002f2a: 	jmp	.Ltmp2373 # Offset: 12074
.Ltmp2301:
    00002f2f: 	movq	-0x8(%rdx), %rax
    00002f33: 	addq	$0x200, %rax
    00002f39: 	jmp	.Ltmp2374 # Offset: 12089
.Ltmp2295:
    00002f3e: 	movq	-0x8(%rdx), %rax
    00002f42: 	addq	$0x200, %rax
    00002f48: 	jmp	.Ltmp2375 # Offset: 12104
.Ltmp2289:
    00002f4d: 	movq	-0x8(%rdx), %rax
    00002f51: 	addq	$0x200, %rax
    00002f57: 	jmp	.Ltmp2376 # Offset: 12119
.Ltmp2283:
    00002f5c: 	movq	-0x8(%rdx), %rax
    00002f60: 	addq	$0x200, %rax
    00002f66: 	jmp	.Ltmp2377 # Offset: 12134
.Ltmp2277:
    00002f6b: 	movq	-0x8(%rdx), %rax
    00002f6f: 	addq	$0x200, %rax
    00002f75: 	jmp	.Ltmp2378 # Offset: 12149
.Ltmp2275:
    00002f7a: 	movq	-0x8(%rdx), %rax
    00002f7e: 	addq	$0x200, %rax
    00002f84: 	jmp	.Ltmp2379 # Offset: 12164
.Ltmp2273:
    00002f89: 	movq	-0x8(%rdx), %rax
    00002f8d: 	addq	$0x200, %rax
    00002f93: 	jmp	.Ltmp2380 # Offset: 12179
.Ltmp2271:
    00002f98: 	movq	-0x8(%rdx), %rax
    00002f9c: 	addq	$0x200, %rax
    00002fa2: 	jmp	.Ltmp2381 # Offset: 12194
.Ltmp2269:
    00002fa7: 	movq	-0x8(%rdx), %rax
    00002fab: 	addq	$0x200, %rax
    00002fb1: 	jmp	.Ltmp2382 # Offset: 12209
.Ltmp2267:
    00002fb6: 	movq	-0x8(%rdx), %rax
    00002fba: 	addq	$0x200, %rax
    00002fc0: 	jmp	.Ltmp2383 # Offset: 12224
.Ltmp2265:
    00002fc5: 	movq	-0x8(%rdx), %rax
    00002fc9: 	addq	$0x200, %rax
    00002fcf: 	jmp	.Ltmp2384 # Offset: 12239
.Ltmp2263:
    00002fd4: 	movq	-0x8(%rdx), %rax
    00002fd8: 	addq	$0x200, %rax
    00002fde: 	jmp	.Ltmp2385 # Offset: 12254
.Ltmp2261:
    00002fe3: 	movq	-0x8(%rdx), %rax
    00002fe7: 	addq	$0x200, %rax
    00002fed: 	jmp	.Ltmp2386 # Offset: 12269
.Ltmp2259:
    00002ff2: 	movq	-0x8(%rdx), %rax
    00002ff6: 	addq	$0x200, %rax
    00002ffc: 	jmp	.Ltmp2387 # Offset: 12284
.Ltmp2257:
    00003001: 	movq	-0x8(%rdx), %rax
    00003005: 	addq	$0x200, %rax
    0000300b: 	jmp	.Ltmp2388 # Offset: 12299
.Ltmp2255:
    00003010: 	movq	-0x8(%rdx), %rax
    00003014: 	addq	$0x200, %rax
    0000301a: 	jmp	.Ltmp2389 # Offset: 12314
.Ltmp2253:
    0000301f: 	movq	-0x8(%rdx), %rax
    00003023: 	addq	$0x200, %rax
    00003029: 	jmp	.Ltmp2390 # Offset: 12329
.Ltmp2251:
    0000302e: 	movq	-0x8(%rdx), %rax
    00003032: 	addq	$0x200, %rax
    00003038: 	jmp	.Ltmp2391 # Offset: 12344
.Ltmp2249:
    0000303d: 	movq	-0x8(%rdx), %rax
    00003041: 	addq	$0x200, %rax
    00003047: 	jmp	.Ltmp2392 # Offset: 12359
.Ltmp2247:
    0000304c: 	movq	-0x8(%rdx), %rax
    00003050: 	addq	$0x200, %rax
    00003056: 	jmp	.Ltmp2393 # Offset: 12374
.Ltmp2245:
    0000305b: 	movq	-0x8(%rdx), %rax
    0000305f: 	addq	$0x200, %rax
    00003065: 	jmp	.Ltmp2394 # Offset: 12389
.Ltmp2243:
    0000306a: 	movq	-0x8(%rdx), %rax
    0000306e: 	addq	$0x200, %rax
    00003074: 	jmp	.Ltmp2395 # Offset: 12404
.Ltmp2237:
    00003079: 	movq	-0x8(%rdx), %rax
    0000307d: 	addq	$0x200, %rax
    00003083: 	jmp	.Ltmp2396 # Offset: 12419
.Ltmp2231:
    00003088: 	movq	-0x8(%rdx), %rax
    0000308c: 	addq	$0x200, %rax
    00003092: 	jmp	.Ltmp2397 # Offset: 12434
.Ltmp2225:
    00003097: 	movq	-0x8(%rdx), %rax
    0000309b: 	addq	$0x200, %rax
    000030a1: 	jmp	.Ltmp2398 # Offset: 12449
.Ltmp2219:
    000030a6: 	movq	-0x8(%rdx), %rax
    000030aa: 	addq	$0x200, %rax
    000030b0: 	jmp	.Ltmp2399 # Offset: 12464
.Ltmp2213:
    000030b5: 	movq	-0x8(%rdx), %rax
    000030b9: 	addq	$0x200, %rax
    000030bf: 	jmp	.Ltmp2400 # Offset: 12479
.Ltmp2207:
    000030c4: 	movq	-0x8(%rdx), %rax
    000030c8: 	addq	$0x200, %rax
    000030ce: 	jmp	.Ltmp2401 # Offset: 12494
.Ltmp2201:
    000030d3: 	movq	-0x8(%rdx), %rax
    000030d7: 	addq	$0x200, %rax
    000030dd: 	jmp	.Ltmp2402 # Offset: 12509
.Ltmp2195:
    000030e2: 	movq	-0x8(%rdx), %rax
    000030e6: 	addq	$0x200, %rax
    000030ec: 	jmp	.Ltmp2403 # Offset: 12524
.Ltmp2189:
    000030f1: 	movq	-0x8(%rdx), %rax
    000030f5: 	addq	$0x200, %rax
    000030fb: 	jmp	.Ltmp2404 # Offset: 12539
.Ltmp2183:
    00003100: 	movq	-0x8(%rdx), %rax
    00003104: 	addq	$0x200, %rax
    0000310a: 	jmp	.Ltmp2405 # Offset: 12554
.Ltmp2177:
    0000310f: 	movq	-0x8(%rdx), %rax
    00003113: 	addq	$0x200, %rax
    00003119: 	jmp	.Ltmp2406 # Offset: 12569
.Ltmp2171:
    0000311e: 	movq	-0x8(%rdx), %rax
    00003122: 	addq	$0x200, %rax
    00003128: 	jmp	.Ltmp2407 # Offset: 12584
.Ltmp2364:
    0000312d: 	callq	__stack_chk_fail@PLT # Offset: 12589
    00003132: 	endbr64
.Ltmp2409:
    00003136: 	movq	%rax, %rbx
    00003139: 	jmp	.Ltmp2408 # Offset: 12601
    0000313b: 	endbr64
    0000313f: 	jmp	.Ltmp2409 # Offset: 12607
    00003141: 	endbr64
    00003145: 	jmp	.Ltmp2409 # Offset: 12613
    00003147: 	endbr64
    0000314b: 	jmp	.Ltmp2409 # Offset: 12619
.Ltmp2408:
    0000314d: 	movq	0xe0(%rsp), %rdi
    00003155: 	cmpq	0x18(%rsp), %rdi
    0000315a: 	je	.Ltmp2410 # Offset: 12634
.Ltmp2420:
    0000315c: 	movq	0xf0(%rsp), %rax
    00003164: 	leaq	0x1(%rax), %rsi
    00003168: 	callq	_ZdlPvm@PLT # Offset: 12648
.Ltmp2410:
    0000316d: 	movq	0x60(%rsp), %rdi
    00003172: 	cmpq	0x38(%rsp), %rdi
    00003177: 	je	.Ltmp2411 # Offset: 12663
    00003179: 	movq	0x70(%rsp), %rax
    0000317e: 	leaq	0x1(%rax), %rsi
    00003182: 	callq	_ZdlPvm@PLT # Offset: 12674
.Ltmp2411:
    00003187: 	movq	%rbx, %rdi
    0000318a: 	callq	_Unwind_Resume@PLT # Offset: 12682
    0000318f: 	endbr64
    00003193: 	jmp	.Ltmp2409 # Offset: 12691
    00003195: 	endbr64
    00003199: 	jmp	.Ltmp2409 # Offset: 12697
    0000319b: 	endbr64
    0000319f: 	jmp	.Ltmp2409 # Offset: 12703
    000031a1: 	endbr64
    000031a5: 	jmp	.Ltmp2409 # Offset: 12709
    000031a7: 	endbr64
    000031ab: 	jmp	.Ltmp2409 # Offset: 12715
    000031ad: 	endbr64
    000031b1: 	jmp	.Ltmp2409 # Offset: 12721
    000031b3: 	endbr64
    000031b7: 	jmp	.Ltmp2409 # Offset: 12727
    000031bc: 	endbr64
    000031c0: 	jmp	.Ltmp2409 # Offset: 12736
    000031c5: 	endbr64
.Ltmp2413:
    000031c9: 	movq	%rax, %rbx
    000031cc: 	jmp	.Ltmp2412 # Offset: 12748
    000031ce: 	endbr64
    000031d2: 	jmp	.Ltmp2413 # Offset: 12754
    000031d4: 	endbr64
    000031d8: 	jmp	.Ltmp2413 # Offset: 12760
    000031da: 	endbr64
    000031de: 	movq	%rax, %rbx
    000031e1: 	jmp	.Ltmp2414 # Offset: 12769
.Ltmp2412:
    000031e3: 	movq	0xe0(%rsp), %rdi
    000031eb: 	cmpq	0x18(%rsp), %rdi
    000031f0: 	je	.Ltmp2414 # Offset: 12784
    000031f2: 	movq	0xf0(%rsp), %rax
    000031fa: 	leaq	0x1(%rax), %rsi
    000031fe: 	callq	_ZdlPvm@PLT # Offset: 12798
.Ltmp2414:
    00003203: 	movq	0x80(%rsp), %rdi
    0000320b: 	leaq	0x90(%rsp), %rax
    00003213: 	cmpq	%rax, %rdi
    00003216: 	je	.Ltmp2410 # Offset: 12822
    0000321c: 	movq	0x90(%rsp), %rax
    00003224: 	leaq	0x1(%rax), %rsi
    00003228: 	callq	_ZdlPvm@PLT # Offset: 12840
    0000322d: 	jmp	.Ltmp2410 # Offset: 12845
    00003232: 	endbr64
    00003236: 	jmp	.Ltmp2413 # Offset: 12854
    00003238: 	endbr64
    0000323c: 	jmp	.Ltmp2413 # Offset: 12860
    0000323e: 	endbr64
    00003242: 	jmp	.Ltmp2413 # Offset: 12866
    00003244: 	endbr64
    00003248: 	jmp	.Ltmp2413 # Offset: 12872
    0000324d: 	endbr64
    00003251: 	jmp	.Ltmp2413 # Offset: 12881
    00003256: 	endbr64
    0000325a: 	jmp	.Ltmp2413 # Offset: 12890
    0000325f: 	endbr64
    00003263: 	jmp	.Ltmp2413 # Offset: 12899
    00003268: 	endbr64
    0000326c: 	jmp	.Ltmp2413 # Offset: 12908
    00003271: 	endbr64
    00003275: 	jmp	.Ltmp2409 # Offset: 12917
    0000327a: 	endbr64
    0000327e: 	movq	%rax, %rbx
    00003281: 	jmp	.Ltmp2410 # Offset: 12929
    00003286: 	endbr64
.Ltmp2416:
    0000328a: 	movq	%rax, %rbx
    0000328d: 	jmp	.Ltmp2415 # Offset: 12941
    0000328f: 	endbr64
    00003293: 	jmp	.Ltmp2416 # Offset: 12947
    00003295: 	endbr64
    00003299: 	movq	%rax, %rbx
    0000329c: 	jmp	.Ltmp2417 # Offset: 12956
    000032a1: 	endbr64
    000032a5: 	jmp	.Ltmp2416 # Offset: 12965
    000032a7: 	endbr64
    000032ab: 	jmp	.Ltmp2416 # Offset: 12971
.Ltmp2415:
    000032ad: 	movq	0xe0(%rsp), %rdi
    000032b5: 	cmpq	0x18(%rsp), %rdi
    000032ba: 	je	.Ltmp2418 # Offset: 12986
    000032bc: 	movq	0xf0(%rsp), %rax
    000032c4: 	leaq	0x1(%rax), %rsi
    000032c8: 	callq	_ZdlPvm@PLT # Offset: 13000
.Ltmp2418:
    000032cd: 	movq	0xc0(%rsp), %rdi
    000032d5: 	leaq	0xd0(%rsp), %rax
    000032dd: 	cmpq	%rax, %rdi
    000032e0: 	je	.Ltmp2419 # Offset: 13024
    000032e2: 	movq	0xd0(%rsp), %rax
    000032ea: 	leaq	0x1(%rax), %rsi
    000032ee: 	callq	_ZdlPvm@PLT # Offset: 13038
.Ltmp2419:
    000032f3: 	movq	0xa0(%rsp), %rdi
    000032fb: 	leaq	0xb0(%rsp), %rax
    00003303: 	cmpq	%rax, %rdi
    00003306: 	je	.Ltmp2414 # Offset: 13062
    0000330c: 	movq	0xb0(%rsp), %rax
    00003314: 	leaq	0x1(%rax), %rsi
    00003318: 	callq	_ZdlPvm@PLT # Offset: 13080
    0000331d: 	jmp	.Ltmp2414 # Offset: 13085
    00003322: 	endbr64
    00003326: 	jmp	.Ltmp2416 # Offset: 13094
.Ltmp2417:
    0000332b: 	movq	0xe0(%rsp), %rdi
    00003333: 	leaq	0xf0(%rsp), %rax
    0000333b: 	cmpq	%rax, %rdi
    0000333e: 	jne	.Ltmp2420 # Offset: 13118
    00003344: 	jmp	.Ltmp2410 # Offset: 13124
    00003349: 	endbr64
    0000334d: 	jmp	.Ltmp2413 # Offset: 13133
    00003352: 	endbr64
    00003356: 	jmp	.Ltmp2413 # Offset: 13142
    0000335b: 	endbr64
    0000335f: 	jmp	.Ltmp2413 # Offset: 13151
    00003364: 	endbr64
    00003368: 	jmp	.Ltmp2413 # Offset: 13160
    0000336d: 	endbr64
    00003371: 	jmp	.Ltmp2413 # Offset: 13169
    00003376: 	endbr64
    0000337a: 	jmp	.Ltmp2413 # Offset: 13178
    0000337f: 	endbr64
.Ltmp2422:
    00003383: 	movq	%rax, %rbx
    00003386: 	jmp	.Ltmp2421 # Offset: 13190
    0000338b: 	endbr64
    0000338f: 	movq	%rax, %rbx
    00003392: 	jmp	.Ltmp2419 # Offset: 13202
    00003397: 	endbr64
    0000339b: 	jmp	.Ltmp2422 # Offset: 13211
    0000339d: 	endbr64
    000033a1: 	jmp	.Ltmp2422 # Offset: 13217
    000033a3: 	endbr64
    000033a7: 	jmp	.Ltmp2422 # Offset: 13223
    000033a9: 	endbr64
    000033ad: 	jmp	.Ltmp2416 # Offset: 13229
    000033b2: 	endbr64
    000033b6: 	jmp	.Ltmp2416 # Offset: 13238
    000033bb: 	endbr64
    000033bf: 	jmp	.Ltmp2416 # Offset: 13247
    000033c4: 	endbr64
    000033c8: 	jmp	.Ltmp2422 # Offset: 13256
    000033ca: 	endbr64
    000033ce: 	jmp	.Ltmp2416 # Offset: 13262
    000033d3: 	endbr64
    000033d7: 	movq	%rax, %rbx
    000033da: 	jmp	.Ltmp2418 # Offset: 13274
    000033df: 	endbr64
    000033e3: 	jmp	.Ltmp2416 # Offset: 13283
    000033e8: 	endbr64
    000033ec: 	jmp	.Ltmp2416 # Offset: 13292
    000033f1: 	endbr64
    000033f5: 	jmp	.Ltmp2416 # Offset: 13301
    000033fa: 	endbr64
    000033fe: 	jmp	.Ltmp2416 # Offset: 13310
    00003403: 	endbr64
    00003407: 	jmp	.Ltmp2422 # Offset: 13319
    0000340c: 	endbr64
    00003410: 	jmp	.Ltmp2422 # Offset: 13328
    00003415: 	endbr64
    00003419: 	jmp	.Ltmp2422 # Offset: 13337
.Ltmp2421:
    0000341e: 	movq	0xe0(%rsp), %rdi
    00003426: 	cmpq	0x18(%rsp), %rdi
    0000342b: 	je	.Ltmp2419 # Offset: 13355
    00003431: 	movq	0xf0(%rsp), %rax
    00003439: 	leaq	0x1(%rax), %rsi
    0000343d: 	callq	_ZdlPvm@PLT # Offset: 13373
    00003442: 	jmp	.Ltmp2419 # Offset: 13378
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlEvd"

Binary Function "_Z10test_2termIs16custom_2term_addIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 105
  State       : disassembled
  Address     : 0x21940
  Size        : 0x4a3
  MaxSize     : 0x4b0
  Offset      : 0x21940
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs16custom_2term_addIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0104:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r11d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r11d, %r11d
    00000043: 	jle	.Ltmp2423 # Offset: 67
    00000049: 	leal	-0x1(%r12), %r14d
    0000004e: 	leal	-0x2(%r12), %eax
    00000053: 	xorl	%r13d, %r13d
    00000056: 	movl	%eax, 0xc(%rsp)
    0000005a: 	movl	%r14d, %eax
    0000005d: 	shrl	$0x3, %eax
    00000060: 	subl	$0x1, %eax
    00000063: 	shlq	$0x4, %rax
    00000067: 	leaq	0x10(%rbx,%rax), %rbp
    0000006c: 	movl	%r14d, %eax
    0000006f: 	andl	$-0x8, %eax
    00000072: 	movl	%eax, 0x10(%rsp)
    00000076: 	addl	$0x1, %eax
    00000079: 	movl	%eax, 0x14(%rsp)
.Ltmp2431:
    0000007d: 	movzwl	(%rbx), %r10d
    00000081: 	movzwl	0x2(%rbx), %esi
    00000085: 	movsd	init_value(%rip), %xmm3
.Ltmp2439:
    0000008d: 	leal	(%r10,%rsi,2), %edx
    00000091: 	movl	%esi, %eax
    00000093: 	imull	%esi, %eax
    00000096: 	imull	%r10d, %edx
    0000009a: 	addl	%eax, %edx
    0000009c: 	movl	%edx, %eax
    0000009e: 	cmpl	$0x1, %r12d
    000000a2: 	jle	.Ltmp2424 # Offset: 162
    000000a8: 	cmpl	$0x6, 0xc(%rsp)
    000000ad: 	jbe	.Ltmp2425 # Offset: 173
    000000b3: 	movq	%rbx, %rax
    000000b6: 	pxor	%xmm1, %xmm1
    000000ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2426:
    000000c0: 	movdqu	0x2(%rax), %xmm0
    000000c5: 	movdqu	(%rax), %xmm4
    000000c9: 	addq	$0x10, %rax
    000000cd: 	movdqa	%xmm0, %xmm2
    000000d1: 	pmullw	%xmm0, %xmm0
    000000d5: 	psllw	$0x1, %xmm2
    000000da: 	paddw	%xmm4, %xmm2
    000000de: 	pmullw	%xmm4, %xmm2
    000000e2: 	paddw	%xmm0, %xmm1
    000000e6: 	paddw	%xmm2, %xmm1
    000000ea: 	cmpq	%rbp, %rax
    000000ed: 	jne	.Ltmp2426 # Offset: 237
    000000ef: 	movdqa	%xmm1, %xmm0
    000000f3: 	movl	0x10(%rsp), %ecx
    000000f7: 	psrldq	$0x8, %xmm0
    000000fc: 	paddw	%xmm0, %xmm1
    00000100: 	movdqa	%xmm1, %xmm0
    00000104: 	psrldq	$0x4, %xmm0
    00000109: 	paddw	%xmm0, %xmm1
    0000010d: 	movdqa	%xmm1, %xmm0
    00000111: 	psrldq	$0x2, %xmm0
    00000116: 	paddw	%xmm0, %xmm1
    0000011a: 	pextrw	$0x0, %xmm1, %eax
    0000011f: 	addl	%edx, %eax
    00000121: 	cmpl	%r14d, %ecx
    00000124: 	je	.Ltmp2424 # Offset: 292
    0000012a: 	movl	0x14(%rsp), %edx
    0000012e: 	movl	%ecx, %r8d
.Ltmp2440:
    00000131: 	movl	%r12d, %edi
    00000134: 	subl	%r8d, %edi
    00000137: 	leal	-0x1(%rdi), %ecx
    0000013a: 	subl	$0x2, %edi
    0000013d: 	cmpl	$0x2, %edi
    00000140: 	jbe	.Ltmp2427 # Offset: 320
    00000142: 	leal	0x1(%r8), %edi
    00000146: 	movq	(%rbx,%rdi,2), %xmm1
    0000014b: 	movq	-0x2(%rbx,%rdi,2), %xmm2
    00000151: 	movdqa	%xmm1, %xmm0
    00000155: 	pmullw	%xmm1, %xmm1
    00000159: 	psllw	$0x1, %xmm0
    0000015e: 	paddw	%xmm2, %xmm0
    00000162: 	pmullw	%xmm2, %xmm0
    00000166: 	paddw	%xmm1, %xmm0
    0000016a: 	pextrw	$0x0, %xmm0, %edi
    0000016f: 	pextrw	$0x1, %xmm0, %r8d
    00000175: 	addl	%edi, %r8d
    00000178: 	pextrw	$0x2, %xmm0, %edi
    0000017d: 	addl	%r8d, %edi
    00000180: 	pextrw	$0x3, %xmm0, %r8d
    00000186: 	addl	%r8d, %edi
    00000189: 	addl	%edi, %eax
    0000018b: 	movl	%ecx, %edi
    0000018d: 	andl	$-0x4, %edi
    00000190: 	addl	%edi, %edx
    00000192: 	cmpl	%ecx, %edi
    00000194: 	je	.Ltmp2424 # Offset: 404
.Ltmp2427:
    0000019a: 	movslq	%edx, %rdi
    0000019d: 	leal	0x1(%rdx), %ecx
    000001a0: 	addq	%rdi, %rdi
    000001a3: 	leaq	(%rbx,%rdi), %r8
    000001a7: 	cmpl	%r14d, %ecx
    000001aa: 	jge	.Ltmp2428 # Offset: 426
    000001b0: 	cmpl	%edx, %r12d
    000001b3: 	jle	.Ltmp2428 # Offset: 435
    000001b9: 	movzwl	-0x2(%r8), %ecx
    000001be: 	movzwl	(%r8), %r8d
    000001c2: 	movzwl	0x2(%rbx,%rdi), %r9d
    000001c8: 	leal	(%rcx,%r8,2), %r15d
    000001cc: 	imull	%ecx, %r15d
    000001d0: 	movl	%r8d, %ecx
    000001d3: 	imull	%r8d, %ecx
    000001d7: 	addl	%eax, %ecx
    000001d9: 	leal	(%r8,%r9,2), %eax
    000001dd: 	imull	%r8d, %eax
    000001e1: 	addl	%r15d, %ecx
    000001e4: 	leal	0x3(%rdx), %r8d
    000001e8: 	addl	%eax, %ecx
    000001ea: 	movl	%r9d, %eax
    000001ed: 	imull	%r9d, %eax
    000001f1: 	addl	%ecx, %eax
    000001f3: 	leal	0x2(%rdx), %ecx
    000001f6: 	cmpl	%r8d, %r14d
    000001f9: 	jle	.Ltmp2429 # Offset: 505
    000001fb: 	movzwl	0x4(%rbx,%rdi), %r8d
    00000201: 	movzwl	0x6(%rbx,%rdi), %r15d
    00000207: 	leal	(%r9,%r8,2), %ecx
    0000020b: 	imull	%ecx, %r9d
    0000020f: 	movl	%r8d, %ecx
    00000212: 	imull	%r8d, %ecx
    00000216: 	addl	%r9d, %ecx
    00000219: 	addl	%eax, %ecx
    0000021b: 	leal	(%r8,%r15,2), %eax
    0000021f: 	imull	%r8d, %eax
    00000223: 	movl	%r15d, %r8d
    00000226: 	imull	%r15d, %r8d
    0000022a: 	addl	%r8d, %eax
    0000022d: 	leal	0x5(%rdx), %r8d
    00000231: 	addl	%ecx, %eax
    00000233: 	leal	0x4(%rdx), %ecx
    00000236: 	cmpl	%r8d, %r14d
    00000239: 	jle	.Ltmp2429 # Offset: 569
    0000023b: 	movzwl	0x8(%rbx,%rdi), %r8d
    00000241: 	movzwl	0xa(%rbx,%rdi), %edi
    00000246: 	leal	(%r15,%r8,2), %ecx
    0000024a: 	movl	%r8d, %r9d
    0000024d: 	imull	%r15d, %ecx
    00000251: 	imull	%r8d, %r9d
    00000255: 	addl	%r9d, %ecx
    00000258: 	addl	%eax, %ecx
    0000025a: 	leal	(%r8,%rdi,2), %eax
    0000025e: 	imull	%r8d, %eax
    00000262: 	imull	%edi, %edi
    00000265: 	addl	%edi, %eax
    00000267: 	addl	%ecx, %eax
    00000269: 	leal	0x6(%rdx), %ecx
.Ltmp2429:
    0000026c: 	movslq	%ecx, %rdx
    0000026f: 	leaq	(%rdx,%rdx), %r8
    00000273: 	movzwl	(%rbx,%rdx,2), %edx
    00000277: 	movzwl	-0x2(%rbx,%r8), %edi
    0000027d: 	leal	(%rdi,%rdx,2), %r9d
    00000281: 	imull	%edi, %r9d
    00000285: 	movl	%edx, %edi
    00000287: 	imull	%edx, %edi
    0000028a: 	addl	%eax, %edi
    0000028c: 	leal	(%r9,%rdi), %eax
    00000290: 	leal	0x1(%rcx), %edi
    00000293: 	cmpl	%edi, %r12d
    00000296: 	jle	.Ltmp2424 # Offset: 662
    00000298: 	movzwl	0x2(%rbx,%r8), %edi
    0000029e: 	addl	$0x2, %ecx
    000002a1: 	leal	(%rdx,%rdi,2), %r9d
    000002a5: 	imull	%r9d, %edx
    000002a9: 	addl	%eax, %edx
    000002ab: 	movl	%edi, %eax
    000002ad: 	imull	%edi, %eax
    000002b0: 	addl	%edx, %eax
    000002b2: 	cmpl	%ecx, %r12d
    000002b5: 	jle	.Ltmp2424 # Offset: 693
    000002b7: 	movzwl	0x4(%rbx,%r8), %ecx
    000002bd: 	leal	(%rdi,%rcx,2), %edx
    000002c0: 	imull	%edi, %edx
    000002c3: 	imull	%ecx, %ecx
    000002c6: 	addl	%ecx, %edx
    000002c8: 	addl	%edx, %eax
.Ltmp2424:
    000002ca: 	cvttsd2si	%xmm3, %edx
    000002ce: 	imull	%edx, %edx
    000002d1: 	imulw	$0x7d00, %dx, %dx
    000002d6: 	cmpw	%ax, %dx
    000002d9: 	je	.Ltmp2430 # Offset: 729
    000002df: 	movl	current_test(%rip), %edx
    000002e5: 	leaq	DATAat0x381c8(%rip), %rsi
    000002ec: 	movl	$0x1, %edi
    000002f1: 	xorl	%eax, %eax
    000002f3: 	addl	$0x1, %r13d
    000002f7: 	callq	__printf_chk@PLT # Offset: 759
    000002fc: 	movl	iterations(%rip), %r11d
    00000303: 	cmpl	%r13d, %r11d
    00000306: 	jg	.Ltmp2431 # Offset: 774
.Ltmp2423:
    0000030c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000313: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000031a: 	subq	$0x20, %rax
    0000031e: 	cmpq	%rax, %rbx
    00000321: 	je	.Ltmp2432 # Offset: 801
    00000327: 	movq	0x18(%rsp), %rax
    0000032c: 	leaq	0x10(%rbx), %rdi
    00000330: 	movq	%rdi, (%rbx)
    00000333: 	movq	(%rax), %rbp
    00000336: 	movq	0x8(%rax), %r12
    0000033a: 	movq	%rbp, %rax
    0000033d: 	addq	%r12, %rax
    00000340: 	je	.Ltmp2433 # Offset: 832
    00000342: 	testq	%rbp, %rbp
    00000345: 	je	.Ltmp2434 # Offset: 837
.Ltmp2433:
    0000034b: 	movq	%r12, 0x20(%rsp)
    00000350: 	cmpq	$0xf, %r12
    00000354: 	ja	.Ltmp2435 # Offset: 852
    0000035a: 	cmpq	$0x1, %r12
    0000035e: 	jne	.Ltmp2436 # Offset: 862
    00000364: 	movzbl	(%rbp), %eax
    00000368: 	movb	%al, 0x10(%rbx)
.Ltmp2441:
    0000036b: 	movq	%r12, 0x8(%rbx)
    0000036f: 	movb	$0x0, (%rdi,%r12)
    00000374: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000037b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000382: 	addq	$0x20, %rax
    00000386: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000038d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000394: 	je	.Ltmp2437 # Offset: 916
.Ltmp2442:
    0000039a: 	movq	-0x20(%rax), %rbp
    0000039e: 	callq	clock@PLT # Offset: 926
    000003a3: 	movq	%rax, end_time(%rip)
    000003aa: 	movq	0x28(%rsp), %rdx
    000003af: 	subq	%fs:0x28, %rdx
    000003b8: 	jne	.Ltmp2438 # Offset: 952
    000003be: 	subq	start_time(%rip), %rax
    000003c5: 	pxor	%xmm0, %xmm0
    000003c9: 	movq	%rbp, %rdi
    000003cc: 	cvtsi2sd	%rax, %xmm0
    000003d1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003d9: 	addq	$0x38, %rsp
    000003dd: 	popq	%rbx
    000003de: 	popq	%rbp
    000003df: 	popq	%r12
    000003e1: 	popq	%r13
    000003e3: 	popq	%r14
    000003e5: 	popq	%r15
    000003e7: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 999
    000003ec: 	nopl	(%rax) # Size: 4
.Ltmp2430:
    000003f0: 	addl	$0x1, %r13d
    000003f4: 	cmpl	%r11d, %r13d
    000003f7: 	jl	.Ltmp2439 # Offset: 1015
    000003fd: 	jmp	.Ltmp2423 # Offset: 1021
.Ltmp2425:
    00000402: 	xorl	%r8d, %r8d
    00000405: 	movl	$0x1, %edx
    0000040a: 	jmp	.Ltmp2440 # Offset: 1034
.Ltmp2435:
    0000040f: 	movq	%rbx, %rdi
    00000412: 	leaq	0x20(%rsp), %rsi
    00000417: 	xorl	%edx, %edx
    00000419: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1049
    0000041e: 	movq	%rax, (%rbx)
    00000421: 	movq	%rax, %rdi
    00000424: 	movq	0x20(%rsp), %rax
    00000429: 	movq	%rax, 0x10(%rbx)
.Ltmp2443:
    0000042d: 	movq	%r12, %rdx
    00000430: 	movq	%rbp, %rsi
    00000433: 	callq	memcpy@PLT # Offset: 1075
    00000438: 	movq	0x20(%rsp), %r12
    0000043d: 	movq	(%rbx), %rdi
    00000440: 	jmp	.Ltmp2441 # Offset: 1088
.Ltmp2428:
    00000445: 	movl	%edx, %ecx
    00000447: 	jmp	.Ltmp2429 # Offset: 1095
.Ltmp2432:
    0000044c: 	movq	0x18(%rsp), %rsi
    00000451: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000458: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1112
    0000045d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000464: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000046b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000472: 	jne	.Ltmp2442 # Offset: 1138
.Ltmp2437:
    00000478: 	movq	-0x8(%rdx), %rax
    0000047c: 	addq	$0x200, %rax
    00000482: 	jmp	.Ltmp2442 # Offset: 1154
.Ltmp2436:
    00000487: 	testq	%r12, %r12
    0000048a: 	je	.Ltmp2441 # Offset: 1162
    00000490: 	jmp	.Ltmp2443 # Offset: 1168
.Ltmp2438:
    00000492: 	callq	__stack_chk_fail@PLT # Offset: 1170
.Ltmp2434:
    00000497: 	leaq	DATAat0x38110(%rip), %rdi
    0000049e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1182
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs16custom_2term_addIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIi16custom_2term_addIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 106
  State       : disassembled
  Address     : 0x21df0
  Size        : 0x491
  MaxSize     : 0x4a0
  Offset      : 0x21df0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIi16custom_2term_addIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0105:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movl	iterations(%rip), %r15d
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	testl	%r15d, %r15d
    00000043: 	jle	.Ltmp2444 # Offset: 67
    00000049: 	leal	-0x1(%r13), %r14d
    0000004d: 	leal	-0x2(%r13), %eax
    00000051: 	xorl	%r12d, %r12d
    00000054: 	movl	%eax, 0xc(%rsp)
    00000058: 	movl	%r14d, %eax
    0000005b: 	shrl	$0x2, %eax
    0000005e: 	subl	$0x1, %eax
    00000061: 	shlq	$0x4, %rax
    00000065: 	leaq	0x10(%rbx,%rax), %rbp
    0000006a: 	movl	%r14d, %eax
    0000006d: 	andl	$-0x4, %eax
    00000070: 	movl	%eax, 0x10(%rsp)
    00000074: 	addl	$0x1, %eax
    00000077: 	movl	%eax, 0x14(%rsp)
.Ltmp2451:
    0000007b: 	movl	0x4(%rbx), %edi
    0000007e: 	movl	(%rbx), %esi
    00000080: 	movsd	init_value(%rip), %xmm4
.Ltmp2459:
    00000088: 	movl	%edi, %edx
    0000008a: 	movl	%esi, %eax
    0000008c: 	imull	%esi, %edx
    0000008f: 	imull	%esi, %eax
    00000092: 	leal	(%rax,%rdx,2), %eax
    00000095: 	movl	%edi, %edx
    00000097: 	imull	%edi, %edx
    0000009a: 	addl	%edx, %eax
    0000009c: 	cmpl	$0x1, %r13d
    000000a0: 	jle	.Ltmp2445 # Offset: 160
    000000a6: 	cmpl	$0x2, 0xc(%rsp)
    000000ab: 	jbe	.Ltmp2446 # Offset: 171
    000000b1: 	movq	%rbx, %rdx
    000000b4: 	pxor	%xmm3, %xmm3
    000000b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2447:
    000000c0: 	movdqu	(%rdx), %xmm2
    000000c4: 	movdqu	0x4(%rdx), %xmm1
    000000c9: 	addq	$0x10, %rdx
    000000cd: 	movdqa	%xmm2, %xmm6
    000000d1: 	movdqa	%xmm1, %xmm5
    000000d5: 	movdqa	%xmm2, %xmm0
    000000d9: 	psrlq	$0x20, %xmm6
    000000de: 	psrlq	$0x20, %xmm5
    000000e3: 	pmuludq	%xmm1, %xmm0
    000000e7: 	pmuludq	%xmm2, %xmm2
    000000eb: 	movdqa	%xmm6, %xmm7
    000000ef: 	pmuludq	%xmm5, %xmm7
    000000f3: 	pmuludq	%xmm6, %xmm6
    000000f7: 	pmuludq	%xmm1, %xmm1
    000000fb: 	pmuludq	%xmm5, %xmm5
    000000ff: 	pshufd	$0x8, %xmm0, %xmm0
    00000104: 	pshufd	$0x8, %xmm2, %xmm2
    00000109: 	pshufd	$0x8, %xmm7, %xmm7
    0000010e: 	pshufd	$0x8, %xmm6, %xmm6
    00000113: 	punpckldq	%xmm7, %xmm0
    00000117: 	punpckldq	%xmm6, %xmm2
    0000011b: 	pshufd	$0x8, %xmm1, %xmm1
    00000120: 	pslld	$0x1, %xmm0
    00000125: 	pshufd	$0x8, %xmm5, %xmm5
    0000012a: 	paddd	%xmm2, %xmm0
    0000012e: 	punpckldq	%xmm5, %xmm1
    00000132: 	paddd	%xmm1, %xmm0
    00000136: 	paddd	%xmm0, %xmm3
    0000013a: 	cmpq	%rbp, %rdx
    0000013d: 	jne	.Ltmp2447 # Offset: 317
    0000013f: 	movdqa	%xmm3, %xmm0
    00000143: 	psrldq	$0x8, %xmm0
    00000148: 	paddd	%xmm0, %xmm3
    0000014c: 	movdqa	%xmm3, %xmm0
    00000150: 	psrldq	$0x4, %xmm0
    00000155: 	paddd	%xmm0, %xmm3
    00000159: 	movd	%xmm3, %edx
    0000015d: 	addl	%edx, %eax
    0000015f: 	cmpl	%r14d, 0x10(%rsp)
    00000164: 	je	.Ltmp2445 # Offset: 356
    0000016a: 	movl	0x14(%rsp), %edx
.Ltmp2460:
    0000016e: 	movslq	%edx, %rcx
    00000171: 	leal	0x1(%rdx), %r8d
    00000175: 	shlq	$0x2, %rcx
    00000179: 	leaq	(%rbx,%rcx), %r9
    0000017d: 	cmpl	%r14d, %r8d
    00000180: 	jge	.Ltmp2448 # Offset: 384
    00000186: 	cmpl	%edx, %r13d
    00000189: 	jle	.Ltmp2448 # Offset: 393
    0000018f: 	movl	-0x4(%r9), %r8d
    00000193: 	movl	(%r9), %r9d
    00000196: 	movl	%r8d, %r10d
    00000199: 	imull	%r8d, %r8d
    0000019d: 	movl	%r9d, %r11d
    000001a0: 	imull	%r9d, %r10d
    000001a4: 	imull	%r9d, %r11d
    000001a8: 	leal	(%r8,%r10,2), %r8d
    000001ac: 	addl	%r11d, %r8d
    000001af: 	addl	%r8d, %eax
    000001b2: 	movl	0x4(%rbx,%rcx), %r8d
    000001b7: 	imull	%r8d, %r9d
    000001bb: 	movl	%r8d, %r10d
    000001be: 	imull	%r8d, %r10d
    000001c2: 	leal	(%r11,%r9,2), %r9d
    000001c6: 	leal	0x3(%rdx), %r11d
    000001ca: 	addl	%r10d, %r9d
    000001cd: 	addl	%r9d, %eax
    000001d0: 	leal	0x2(%rdx), %r9d
    000001d4: 	cmpl	%r11d, %r14d
    000001d7: 	jle	.Ltmp2449 # Offset: 471
    000001d9: 	movl	0x8(%rbx,%rcx), %r9d
    000001de: 	imull	%r9d, %r8d
    000001e2: 	movl	%r9d, %r11d
    000001e5: 	imull	%r9d, %r11d
    000001e9: 	leal	(%r10,%r8,2), %r8d
    000001ed: 	addl	%r11d, %r8d
    000001f0: 	addl	%r8d, %eax
    000001f3: 	movl	0xc(%rbx,%rcx), %r8d
    000001f8: 	imull	%r8d, %r9d
    000001fc: 	movl	%r8d, %r10d
    000001ff: 	imull	%r8d, %r10d
    00000203: 	leal	(%r11,%r9,2), %r9d
    00000207: 	leal	0x5(%rdx), %r11d
    0000020b: 	addl	%r10d, %r9d
    0000020e: 	addl	%r9d, %eax
    00000211: 	leal	0x4(%rdx), %r9d
    00000215: 	cmpl	%r11d, %r14d
    00000218: 	jle	.Ltmp2449 # Offset: 536
    0000021a: 	movl	0x10(%rbx,%rcx), %r9d
    0000021f: 	movl	0x14(%rbx,%rcx), %ecx
    00000223: 	imull	%r9d, %r8d
    00000227: 	movl	%r9d, %r11d
    0000022a: 	imull	%r9d, %r11d
    0000022e: 	imull	%ecx, %r9d
    00000232: 	imull	%ecx, %ecx
    00000235: 	leal	(%r10,%r8,2), %r8d
    00000239: 	addl	%r11d, %r8d
    0000023c: 	addl	%eax, %r8d
    0000023f: 	leal	(%r11,%r9,2), %eax
    00000243: 	leal	0x6(%rdx), %r9d
    00000247: 	addl	%ecx, %eax
    00000249: 	addl	%r8d, %eax
.Ltmp2449:
    0000024c: 	movslq	%r9d, %rdx
    0000024f: 	leaq	(,%rdx,4), %r8
    00000257: 	movl	(%rbx,%rdx,4), %edx
    0000025a: 	movl	-0x4(%rbx,%r8), %ecx
    0000025f: 	movl	%edx, %r11d
    00000262: 	movl	%edx, %r10d
    00000265: 	imull	%ecx, %r11d
    00000269: 	imull	%ecx, %ecx
    0000026c: 	imull	%edx, %r10d
    00000270: 	leal	(%rcx,%r11,2), %ecx
    00000274: 	addl	%r10d, %ecx
    00000277: 	addl	%ecx, %eax
    00000279: 	leal	0x1(%r9), %ecx
    0000027d: 	cmpl	%ecx, %r13d
    00000280: 	jle	.Ltmp2445 # Offset: 640
    00000282: 	movl	0x4(%rbx,%r8), %ecx
    00000287: 	addl	$0x2, %r9d
    0000028b: 	imull	%ecx, %edx
    0000028e: 	leal	(%r10,%rdx,2), %r10d
    00000292: 	movl	%ecx, %edx
    00000294: 	imull	%ecx, %edx
    00000297: 	addl	%edx, %r10d
    0000029a: 	addl	%r10d, %eax
    0000029d: 	cmpl	%r9d, %r13d
    000002a0: 	jle	.Ltmp2445 # Offset: 672
    000002a2: 	movl	0x8(%rbx,%r8), %r8d
    000002a7: 	imull	%r8d, %ecx
    000002ab: 	imull	%r8d, %r8d
    000002af: 	leal	(%rdx,%rcx,2), %edx
    000002b2: 	addl	%r8d, %edx
    000002b5: 	addl	%edx, %eax
.Ltmp2445:
    000002b7: 	cvttsd2si	%xmm4, %edx
    000002bb: 	imull	%edx, %edx
    000002be: 	imull	$0x7d00, %edx, %edx
    000002c4: 	cmpl	%eax, %edx
    000002c6: 	je	.Ltmp2450 # Offset: 710
    000002cc: 	movl	current_test(%rip), %edx
    000002d2: 	leaq	DATAat0x381c8(%rip), %rsi
    000002d9: 	movl	$0x1, %edi
    000002de: 	xorl	%eax, %eax
    000002e0: 	addl	$0x1, %r12d
    000002e4: 	callq	__printf_chk@PLT # Offset: 740
    000002e9: 	movl	iterations(%rip), %r15d
    000002f0: 	cmpl	%r15d, %r12d
    000002f3: 	jl	.Ltmp2451 # Offset: 755
.Ltmp2444:
    000002f9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000300: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000307: 	subq	$0x20, %rax
    0000030b: 	cmpq	%rax, %rbx
    0000030e: 	je	.Ltmp2452 # Offset: 782
    00000314: 	movq	0x18(%rsp), %rax
    00000319: 	leaq	0x10(%rbx), %rdi
    0000031d: 	movq	%rdi, (%rbx)
    00000320: 	movq	(%rax), %rbp
    00000323: 	movq	0x8(%rax), %r12
    00000327: 	movq	%rbp, %rax
    0000032a: 	addq	%r12, %rax
    0000032d: 	je	.Ltmp2453 # Offset: 813
    0000032f: 	testq	%rbp, %rbp
    00000332: 	je	.Ltmp2454 # Offset: 818
.Ltmp2453:
    00000338: 	movq	%r12, 0x20(%rsp)
    0000033d: 	cmpq	$0xf, %r12
    00000341: 	ja	.Ltmp2455 # Offset: 833
    00000347: 	cmpq	$0x1, %r12
    0000034b: 	jne	.Ltmp2456 # Offset: 843
    00000351: 	movzbl	(%rbp), %eax
    00000355: 	movb	%al, 0x10(%rbx)
.Ltmp2461:
    00000358: 	movq	%r12, 0x8(%rbx)
    0000035c: 	movb	$0x0, (%rdi,%r12)
    00000361: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000368: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036f: 	addq	$0x20, %rax
    00000373: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000037a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000381: 	je	.Ltmp2457 # Offset: 897
.Ltmp2462:
    00000387: 	movq	-0x20(%rax), %rbp
    0000038b: 	callq	clock@PLT # Offset: 907
    00000390: 	movq	%rax, end_time(%rip)
    00000397: 	movq	0x28(%rsp), %rdx
    0000039c: 	subq	%fs:0x28, %rdx
    000003a5: 	jne	.Ltmp2458 # Offset: 933
    000003ab: 	subq	start_time(%rip), %rax
    000003b2: 	pxor	%xmm0, %xmm0
    000003b6: 	movq	%rbp, %rdi
    000003b9: 	cvtsi2sd	%rax, %xmm0
    000003be: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003c6: 	addq	$0x38, %rsp
    000003ca: 	popq	%rbx
    000003cb: 	popq	%rbp
    000003cc: 	popq	%r12
    000003ce: 	popq	%r13
    000003d0: 	popq	%r14
    000003d2: 	popq	%r15
    000003d4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 980
    000003d9: 	nopl	(%rax) # Size: 7
.Ltmp2450:
    000003e0: 	addl	$0x1, %r12d
    000003e4: 	cmpl	%r15d, %r12d
    000003e7: 	jl	.Ltmp2459 # Offset: 999
    000003ed: 	jmp	.Ltmp2444 # Offset: 1005
.Ltmp2446:
    000003f2: 	movl	$0x1, %edx
    000003f7: 	jmp	.Ltmp2460 # Offset: 1015
.Ltmp2448:
    000003fc: 	movl	%edx, %r9d
    000003ff: 	jmp	.Ltmp2449 # Offset: 1023
.Ltmp2455:
    00000404: 	movq	%rbx, %rdi
    00000407: 	leaq	0x20(%rsp), %rsi
    0000040c: 	xorl	%edx, %edx
    0000040e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1038
    00000413: 	movq	%rax, (%rbx)
    00000416: 	movq	%rax, %rdi
    00000419: 	movq	0x20(%rsp), %rax
    0000041e: 	movq	%rax, 0x10(%rbx)
.Ltmp2463:
    00000422: 	movq	%r12, %rdx
    00000425: 	movq	%rbp, %rsi
    00000428: 	callq	memcpy@PLT # Offset: 1064
    0000042d: 	movq	0x20(%rsp), %r12
    00000432: 	movq	(%rbx), %rdi
    00000435: 	jmp	.Ltmp2461 # Offset: 1077
.Ltmp2452:
    0000043a: 	movq	0x18(%rsp), %rsi
    0000043f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000446: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1094
    0000044b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000452: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000459: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000460: 	jne	.Ltmp2462 # Offset: 1120
.Ltmp2457:
    00000466: 	movq	-0x8(%rdx), %rax
    0000046a: 	addq	$0x200, %rax
    00000470: 	jmp	.Ltmp2462 # Offset: 1136
.Ltmp2456:
    00000475: 	testq	%r12, %r12
    00000478: 	je	.Ltmp2461 # Offset: 1144
    0000047e: 	jmp	.Ltmp2463 # Offset: 1150
.Ltmp2458:
    00000480: 	callq	__stack_chk_fail@PLT # Offset: 1152
.Ltmp2454:
    00000485: 	leaq	DATAat0x38110(%rip), %rdi
    0000048c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1164
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIi16custom_2term_addIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIiEvd" after disassembly {
  Number      : 107
  State       : disassembled
  Address     : 0x22290
  Size        : 0x399d
  MaxSize     : 0x39a0
  Offset      : 0x22290
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0106:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp2464:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2464 # Offset: 37
    00000027: 	subq	$0xe68, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm4
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm5
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movsd	%xmm0, (%rsp)
    0000004a: 	leaq	0x90(%rsp), %rsi
    00000052: 	leaq	0x150(%rsp), %rbp
    0000005a: 	movq	%fs:0x28, %rax
    00000063: 	movq	%rax, 0x7e58(%rsp)
    0000006b: 	xorl	%eax, %eax
    0000006d: 	leaq	0xc0(%rsp), %rax
    00000075: 	movl	$0x33746e69, 0xc0(%rsp)
    00000080: 	leaq	0x7e50(%rsp), %rbx
    00000088: 	movq	%rax, 0x88(%rsp)
    00000090: 	movq	%rax, 0xb0(%rsp)
    00000098: 	movl	$0x5f32, %eax
    0000009d: 	movw	%ax, 0xc4(%rsp)
    000000a5: 	movb	$0x74, 0xc6(%rsp)
    000000ad: 	movq	$0x7, 0xb8(%rsp)
    000000b9: 	movb	$0x0, 0xc7(%rsp)
    000000c1: 	movaps	%xmm4, 0x90(%rsp)
    000000c9: 	movaps	%xmm5, 0xa0(%rsp)
    000000d1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 209
    000000d6: 	cvttsd2si	init_value(%rip), %eax
    000000de: 	movsd	(%rsp), %xmm0
    000000e3: 	movd	%eax, %xmm1
    000000e7: 	movq	%rbp, %rax
    000000ea: 	pshufd	$0x0, %xmm1, %xmm1
    000000ef: 	nop # Size: 1
.Ltmp2465:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rax, %rbx
    000000fa: 	jne	.Ltmp2465 # Offset: 250
    000000fc: 	cvttsd2si	%xmm0, %edi
    00000100: 	leaq	0x130(%rsp), %r12
    00000108: 	leaq	0xb0(%rsp), %r15
    00000110: 	leal	(%rdi,%rdi), %eax
    00000113: 	leal	0x2(%rdi), %esi
    00000116: 	movl	%edi, 0x50(%rsp)
    0000011a: 	cltd
    0000011b: 	movl	%eax, 0x74(%rsp)
    0000011f: 	idivl	%esi
    00000121: 	movl	%esi, 0x7c(%rsp)
    00000125: 	leaq	DATAat0x381d8(%rip), %rdx
    0000012c: 	movq	%r15, %rsi
    0000012f: 	addl	%edi, %eax
    00000131: 	movq	%r12, %rdi
    00000134: 	movl	%eax, 0x78(%rsp)
    00000138: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 312
    0000013d: 	callq	clock@PLT # Offset: 317
    00000142: 	movl	iterations(%rip), %ecx
    00000148: 	xorl	%r13d, %r13d
    0000014b: 	leaq	DATAat0x381c8(%rip), %r14
    00000152: 	movq	%rax, start_time(%rip)
    00000159: 	testl	%ecx, %ecx
    0000015b: 	jle	.Ltmp2466 # Offset: 347
    0000015d: 	nopl	(%rax) # Size: 3
.Ltmp2469:
    00000160: 	movq	%rbp, %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2467:
    00000170: 	paddd	(%rax), %xmm0
    00000174: 	addq	$0x10, %rax
    00000178: 	cmpq	%rbx, %rax
    0000017b: 	jne	.Ltmp2467 # Offset: 379
    0000017d: 	movdqa	%xmm0, %xmm1
    00000181: 	cvttsd2si	init_value(%rip), %edx
    00000189: 	psrldq	$0x8, %xmm1
    0000018e: 	paddd	%xmm1, %xmm0
    00000192: 	movdqa	%xmm0, %xmm1
    00000196: 	psrldq	$0x4, %xmm1
    0000019b: 	imull	$0x1f40, %edx, %edx
    000001a1: 	paddd	%xmm1, %xmm0
    000001a5: 	movd	%xmm0, %eax
    000001a9: 	cmpl	%eax, %edx
    000001ab: 	je	.Ltmp2468 # Offset: 427
    000001ad: 	movl	current_test(%rip), %edx
    000001b3: 	movq	%r14, %rsi
    000001b6: 	movl	$0x1, %edi
    000001bb: 	xorl	%eax, %eax
    000001bd: 	callq	__printf_chk@PLT # Offset: 445
    000001c2: 	movl	iterations(%rip), %ecx
.Ltmp2468:
    000001c8: 	addl	$0x1, %r13d
    000001cc: 	cmpl	%ecx, %r13d
    000001cf: 	jl	.Ltmp2469 # Offset: 463
.Ltmp2466:
    000001d1: 	movq	%r12, %rsi
    000001d4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001db: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 475
    000001e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f5: 	je	.Ltmp2470 # Offset: 501
.Ltmp2670:
    000001fb: 	movq	-0x20(%rax), %r13
    000001ff: 	callq	clock@PLT # Offset: 511
    00000204: 	pxor	%xmm0, %xmm0
    00000208: 	movq	%rax, end_time(%rip)
    0000020f: 	movq	%r13, %rdi
    00000212: 	subq	start_time(%rip), %rax
    00000219: 	cvtsi2sd	%rax, %xmm0
    0000021e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000226: 	callq	_Z13record_resultdPKc # Offset: 550
    0000022b: 	movq	0x130(%rsp), %rdi
    00000233: 	leaq	0x140(%rsp), %rax
    0000023b: 	movq	%rax, 0x48(%rsp)
    00000240: 	cmpq	%rax, %rdi
    00000243: 	je	.Ltmp2471 # Offset: 579
    00000245: 	movq	0x140(%rsp), %rax
    0000024d: 	leaq	0x1(%rax), %rsi
    00000251: 	callq	_ZdlPvm@PLT # Offset: 593
.Ltmp2471:
    00000256: 	leaq	DATAat0x381de(%rip), %rdx
    0000025d: 	movq	%r15, %rsi
    00000260: 	movq	%r12, %rdi
    00000263: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 611
    00000268: 	callq	clock@PLT # Offset: 616
    0000026d: 	movl	iterations(%rip), %ecx
    00000273: 	xorl	%r13d, %r13d
    00000276: 	leaq	DATAat0x381c8(%rip), %r14
    0000027d: 	movq	%rax, start_time(%rip)
    00000284: 	testl	%ecx, %ecx
    00000286: 	jle	.Ltmp2472 # Offset: 646
    00000288: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2475:
    00000290: 	movq	%rbp, %rax
    00000293: 	pxor	%xmm0, %xmm0
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2473:
    000002a0: 	paddd	(%rax), %xmm0
    000002a4: 	addq	$0x10, %rax
    000002a8: 	cmpq	%rax, %rbx
    000002ab: 	jne	.Ltmp2473 # Offset: 683
    000002ad: 	movdqa	%xmm0, %xmm1
    000002b1: 	cvttsd2si	init_value(%rip), %edx
    000002b9: 	psrldq	$0x8, %xmm1
    000002be: 	paddd	%xmm1, %xmm0
    000002c2: 	movdqa	%xmm0, %xmm1
    000002c6: 	psrldq	$0x4, %xmm1
    000002cb: 	imull	$0x1f40, %edx, %edx
    000002d1: 	paddd	%xmm1, %xmm0
    000002d5: 	movd	%xmm0, %eax
    000002d9: 	cmpl	%eax, %edx
    000002db: 	je	.Ltmp2474 # Offset: 731
    000002dd: 	movl	current_test(%rip), %edx
    000002e3: 	movq	%r14, %rsi
    000002e6: 	movl	$0x1, %edi
    000002eb: 	xorl	%eax, %eax
    000002ed: 	callq	__printf_chk@PLT # Offset: 749
    000002f2: 	movl	iterations(%rip), %ecx
.Ltmp2474:
    000002f8: 	addl	$0x1, %r13d
    000002fc: 	cmpl	%ecx, %r13d
    000002ff: 	jl	.Ltmp2475 # Offset: 767
.Ltmp2472:
    00000301: 	movq	%r12, %rsi
    00000304: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000030b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 779
    00000310: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000317: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000031e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000325: 	je	.Ltmp2476 # Offset: 805
.Ltmp2712:
    0000032b: 	movq	-0x20(%rax), %r13
    0000032f: 	callq	clock@PLT # Offset: 815
    00000334: 	pxor	%xmm0, %xmm0
    00000338: 	movq	%rax, end_time(%rip)
    0000033f: 	movq	%r13, %rdi
    00000342: 	subq	start_time(%rip), %rax
    00000349: 	cvtsi2sd	%rax, %xmm0
    0000034e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000356: 	callq	_Z13record_resultdPKc # Offset: 854
    0000035b: 	movq	0x130(%rsp), %rdi
    00000363: 	cmpq	0x48(%rsp), %rdi
    00000368: 	je	.Ltmp2477 # Offset: 872
    0000036a: 	movq	0x140(%rsp), %rax
    00000372: 	leaq	0x1(%rax), %rsi
    00000376: 	callq	_ZdlPvm@PLT # Offset: 886
.Ltmp2477:
    0000037b: 	leaq	DATAat0x381e8(%rip), %rdx
    00000382: 	movq	%r15, %rsi
    00000385: 	movq	%r12, %rdi
    00000388: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 904
    0000038d: 	callq	clock@PLT # Offset: 909
    00000392: 	movl	iterations(%rip), %ecx
    00000398: 	xorl	%r13d, %r13d
    0000039b: 	leaq	DATAat0x381c8(%rip), %r14
    000003a2: 	movq	%rax, start_time(%rip)
    000003a9: 	testl	%ecx, %ecx
    000003ab: 	jle	.Ltmp2478 # Offset: 939
    000003ad: 	nopl	(%rax) # Size: 3
.Ltmp2481:
    000003b0: 	movq	%rbp, %rax
    000003b3: 	pxor	%xmm0, %xmm0
    000003b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2479:
    000003c0: 	paddd	(%rax), %xmm0
    000003c4: 	addq	$0x10, %rax
    000003c8: 	cmpq	%rbx, %rax
    000003cb: 	jne	.Ltmp2479 # Offset: 971
    000003cd: 	movdqa	%xmm0, %xmm1
    000003d1: 	cvttsd2si	init_value(%rip), %edx
    000003d9: 	psrldq	$0x8, %xmm1
    000003de: 	paddd	%xmm1, %xmm0
    000003e2: 	movdqa	%xmm0, %xmm1
    000003e6: 	psrldq	$0x4, %xmm1
    000003eb: 	imull	$0x1f40, %edx, %edx
    000003f1: 	paddd	%xmm1, %xmm0
    000003f5: 	movd	%xmm0, %eax
    000003f9: 	cmpl	%eax, %edx
    000003fb: 	je	.Ltmp2480 # Offset: 1019
    000003fd: 	movl	current_test(%rip), %edx
    00000403: 	movq	%r14, %rsi
    00000406: 	movl	$0x1, %edi
    0000040b: 	xorl	%eax, %eax
    0000040d: 	callq	__printf_chk@PLT # Offset: 1037
    00000412: 	movl	iterations(%rip), %ecx
.Ltmp2480:
    00000418: 	addl	$0x1, %r13d
    0000041c: 	cmpl	%ecx, %r13d
    0000041f: 	jl	.Ltmp2481 # Offset: 1055
.Ltmp2478:
    00000421: 	movq	%r12, %rsi
    00000424: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000042b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1067
    00000430: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000437: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000043e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000445: 	je	.Ltmp2482 # Offset: 1093
.Ltmp2711:
    0000044b: 	movq	-0x20(%rax), %r13
    0000044f: 	callq	clock@PLT # Offset: 1103
    00000454: 	pxor	%xmm0, %xmm0
    00000458: 	movq	%rax, end_time(%rip)
    0000045f: 	movq	%r13, %rdi
    00000462: 	subq	start_time(%rip), %rax
    00000469: 	cvtsi2sd	%rax, %xmm0
    0000046e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000476: 	callq	_Z13record_resultdPKc # Offset: 1142
    0000047b: 	movq	0x130(%rsp), %rdi
    00000483: 	cmpq	0x48(%rsp), %rdi
    00000488: 	je	.Ltmp2483 # Offset: 1160
    0000048a: 	movq	0x140(%rsp), %rax
    00000492: 	leaq	0x1(%rax), %rsi
    00000496: 	callq	_ZdlPvm@PLT # Offset: 1174
.Ltmp2483:
    0000049b: 	leaq	DATAat0x381f7(%rip), %rdx
    000004a2: 	movq	%r15, %rsi
    000004a5: 	movq	%r12, %rdi
    000004a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1192
    000004ad: 	callq	clock@PLT # Offset: 1197
    000004b2: 	movl	iterations(%rip), %ecx
    000004b8: 	xorl	%r13d, %r13d
    000004bb: 	leaq	DATAat0x381c8(%rip), %r14
    000004c2: 	movq	%rax, start_time(%rip)
    000004c9: 	testl	%ecx, %ecx
    000004cb: 	jle	.Ltmp2484 # Offset: 1227
    000004cd: 	nopl	(%rax) # Size: 3
.Ltmp2487:
    000004d0: 	movq	%rbp, %rax
    000004d3: 	pxor	%xmm0, %xmm0
    000004d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2485:
    000004e0: 	psubd	(%rax), %xmm0
    000004e4: 	addq	$0x10, %rax
    000004e8: 	cmpq	%rax, %rbx
    000004eb: 	jne	.Ltmp2485 # Offset: 1259
    000004ed: 	movdqa	%xmm0, %xmm1
    000004f1: 	cvttsd2si	init_value(%rip), %edx
    000004f9: 	psrldq	$0x8, %xmm1
    000004fe: 	paddd	%xmm1, %xmm0
    00000502: 	movdqa	%xmm0, %xmm1
    00000506: 	psrldq	$0x4, %xmm1
    0000050b: 	imull	$0xffffe0c0, %edx, %edx
    00000511: 	paddd	%xmm1, %xmm0
    00000515: 	movd	%xmm0, %eax
    00000519: 	cmpl	%eax, %edx
    0000051b: 	je	.Ltmp2486 # Offset: 1307
    0000051d: 	movl	current_test(%rip), %edx
    00000523: 	movq	%r14, %rsi
    00000526: 	movl	$0x1, %edi
    0000052b: 	xorl	%eax, %eax
    0000052d: 	callq	__printf_chk@PLT # Offset: 1325
    00000532: 	movl	iterations(%rip), %ecx
.Ltmp2486:
    00000538: 	addl	$0x1, %r13d
    0000053c: 	cmpl	%ecx, %r13d
    0000053f: 	jl	.Ltmp2487 # Offset: 1343
.Ltmp2484:
    00000541: 	movq	%r12, %rsi
    00000544: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000054b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1355
    00000550: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000557: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000055e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000565: 	je	.Ltmp2488 # Offset: 1381
.Ltmp2710:
    0000056b: 	movq	-0x20(%rax), %r13
    0000056f: 	callq	clock@PLT # Offset: 1391
    00000574: 	pxor	%xmm0, %xmm0
    00000578: 	movq	%rax, end_time(%rip)
    0000057f: 	movq	%r13, %rdi
    00000582: 	subq	start_time(%rip), %rax
    00000589: 	cvtsi2sd	%rax, %xmm0
    0000058e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000596: 	callq	_Z13record_resultdPKc # Offset: 1430
    0000059b: 	movq	0x130(%rsp), %rdi
    000005a3: 	cmpq	0x48(%rsp), %rdi
    000005a8: 	je	.Ltmp2489 # Offset: 1448
    000005aa: 	movq	0x140(%rsp), %rax
    000005b2: 	leaq	0x1(%rax), %rsi
    000005b6: 	callq	_ZdlPvm@PLT # Offset: 1462
.Ltmp2489:
    000005bb: 	leaq	DATAat0x381ff(%rip), %rdx
    000005c2: 	movq	%r15, %rsi
    000005c5: 	movq	%r12, %rdi
    000005c8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1480
    000005cd: 	callq	clock@PLT # Offset: 1485
    000005d2: 	movl	iterations(%rip), %ecx
    000005d8: 	xorl	%r13d, %r13d
    000005db: 	leaq	DATAat0x381c8(%rip), %r14
    000005e2: 	movq	%rax, start_time(%rip)
    000005e9: 	testl	%ecx, %ecx
    000005eb: 	jle	.Ltmp2490 # Offset: 1515
    000005ed: 	nopl	(%rax) # Size: 3
.Ltmp2493:
    000005f0: 	movq	%rbp, %rax
    000005f3: 	pxor	%xmm0, %xmm0
    000005f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2491:
    00000600: 	paddd	(%rax), %xmm0
    00000604: 	addq	$0x10, %rax
    00000608: 	cmpq	%rbx, %rax
    0000060b: 	jne	.Ltmp2491 # Offset: 1547
    0000060d: 	movdqa	%xmm0, %xmm1
    00000611: 	cvttsd2si	init_value(%rip), %edx
    00000619: 	psrldq	$0x8, %xmm1
    0000061e: 	paddd	%xmm1, %xmm0
    00000622: 	movdqa	%xmm0, %xmm1
    00000626: 	psrldq	$0x4, %xmm1
    0000062b: 	imull	$0x1f40, %edx, %edx
    00000631: 	paddd	%xmm1, %xmm0
    00000635: 	movd	%xmm0, %eax
    00000639: 	cmpl	%eax, %edx
    0000063b: 	je	.Ltmp2492 # Offset: 1595
    0000063d: 	movl	current_test(%rip), %edx
    00000643: 	movq	%r14, %rsi
    00000646: 	movl	$0x1, %edi
    0000064b: 	xorl	%eax, %eax
    0000064d: 	callq	__printf_chk@PLT # Offset: 1613
    00000652: 	movl	iterations(%rip), %ecx
.Ltmp2492:
    00000658: 	addl	$0x1, %r13d
    0000065c: 	cmpl	%ecx, %r13d
    0000065f: 	jl	.Ltmp2493 # Offset: 1631
.Ltmp2490:
    00000661: 	movq	%r12, %rsi
    00000664: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000066b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1643
    00000670: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000677: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000067e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000685: 	je	.Ltmp2494 # Offset: 1669
.Ltmp2709:
    0000068b: 	movq	-0x20(%rax), %r13
    0000068f: 	callq	clock@PLT # Offset: 1679
    00000694: 	pxor	%xmm0, %xmm0
    00000698: 	movq	%rax, end_time(%rip)
    0000069f: 	movq	%r13, %rdi
    000006a2: 	subq	start_time(%rip), %rax
    000006a9: 	cvtsi2sd	%rax, %xmm0
    000006ae: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006b6: 	callq	_Z13record_resultdPKc # Offset: 1718
    000006bb: 	movq	0x130(%rsp), %rdi
    000006c3: 	cmpq	0x48(%rsp), %rdi
    000006c8: 	je	.Ltmp2495 # Offset: 1736
    000006ca: 	movq	0x140(%rsp), %rax
    000006d2: 	leaq	0x1(%rax), %rsi
    000006d6: 	callq	_ZdlPvm@PLT # Offset: 1750
.Ltmp2495:
    000006db: 	leaq	DATAat0x3820d(%rip), %rdx
    000006e2: 	movq	%r15, %rsi
    000006e5: 	movq	%r12, %rdi
    000006e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1768
    000006ed: 	callq	clock@PLT # Offset: 1773
    000006f2: 	movl	iterations(%rip), %ecx
    000006f8: 	xorl	%r13d, %r13d
    000006fb: 	leaq	DATAat0x381c8(%rip), %r14
    00000702: 	movq	%rax, start_time(%rip)
    00000709: 	testl	%ecx, %ecx
    0000070b: 	jle	.Ltmp2496 # Offset: 1803
    0000070d: 	nopl	(%rax) # Size: 3
.Ltmp2499:
    00000710: 	movq	%rbp, %rax
    00000713: 	pxor	%xmm0, %xmm0
    00000717: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2497:
    00000720: 	psubd	(%rax), %xmm0
    00000724: 	addq	$0x10, %rax
    00000728: 	cmpq	%rax, %rbx
    0000072b: 	jne	.Ltmp2497 # Offset: 1835
    0000072d: 	movdqa	%xmm0, %xmm1
    00000731: 	cvttsd2si	init_value(%rip), %edx
    00000739: 	psrldq	$0x8, %xmm1
    0000073e: 	paddd	%xmm1, %xmm0
    00000742: 	movdqa	%xmm0, %xmm1
    00000746: 	psrldq	$0x4, %xmm1
    0000074b: 	imull	$0xffffe0c0, %edx, %edx
    00000751: 	paddd	%xmm1, %xmm0
    00000755: 	movd	%xmm0, %eax
    00000759: 	cmpl	%eax, %edx
    0000075b: 	je	.Ltmp2498 # Offset: 1883
    0000075d: 	movl	current_test(%rip), %edx
    00000763: 	movq	%r14, %rsi
    00000766: 	movl	$0x1, %edi
    0000076b: 	xorl	%eax, %eax
    0000076d: 	callq	__printf_chk@PLT # Offset: 1901
    00000772: 	movl	iterations(%rip), %ecx
.Ltmp2498:
    00000778: 	addl	$0x1, %r13d
    0000077c: 	cmpl	%ecx, %r13d
    0000077f: 	jl	.Ltmp2499 # Offset: 1919
.Ltmp2496:
    00000781: 	movq	%r12, %rsi
    00000784: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000078b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1931
    00000790: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000797: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000079e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007a5: 	je	.Ltmp2500 # Offset: 1957
.Ltmp2708:
    000007ab: 	movq	-0x20(%rax), %r13
    000007af: 	callq	clock@PLT # Offset: 1967
    000007b4: 	pxor	%xmm0, %xmm0
    000007b8: 	movq	%rax, end_time(%rip)
    000007bf: 	movq	%r13, %rdi
    000007c2: 	subq	start_time(%rip), %rax
    000007c9: 	cvtsi2sd	%rax, %xmm0
    000007ce: 	divsd	DATAat0x385e0(%rip), %xmm0
    000007d6: 	callq	_Z13record_resultdPKc # Offset: 2006
    000007db: 	movq	0x130(%rsp), %rdi
    000007e3: 	cmpq	0x48(%rsp), %rdi
    000007e8: 	je	.Ltmp2501 # Offset: 2024
    000007ea: 	movq	0x140(%rsp), %rax
    000007f2: 	leaq	0x1(%rax), %rsi
    000007f6: 	callq	_ZdlPvm@PLT # Offset: 2038
.Ltmp2501:
    000007fb: 	leaq	DATAat0x38219(%rip), %rdx
    00000802: 	movq	%r15, %rsi
    00000805: 	movq	%r12, %rdi
    00000808: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2056
    0000080d: 	callq	clock@PLT # Offset: 2061
    00000812: 	movl	iterations(%rip), %ecx
    00000818: 	xorl	%r13d, %r13d
    0000081b: 	leaq	DATAat0x381c8(%rip), %r14
    00000822: 	movq	%rax, start_time(%rip)
    00000829: 	testl	%ecx, %ecx
    0000082b: 	jle	.Ltmp2502 # Offset: 2091
    0000082d: 	nopl	(%rax) # Size: 3
.Ltmp2505:
    00000830: 	movq	%rbp, %rax
    00000833: 	pxor	%xmm0, %xmm0
    00000837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2503:
    00000840: 	paddd	(%rax), %xmm0
    00000844: 	addq	$0x10, %rax
    00000848: 	cmpq	%rbx, %rax
    0000084b: 	jne	.Ltmp2503 # Offset: 2123
    0000084d: 	movdqa	%xmm0, %xmm1
    00000851: 	cvttsd2si	init_value(%rip), %edx
    00000859: 	psrldq	$0x8, %xmm1
    0000085e: 	paddd	%xmm1, %xmm0
    00000862: 	movdqa	%xmm0, %xmm1
    00000866: 	psrldq	$0x4, %xmm1
    0000086b: 	imull	$0x1f40, %edx, %edx
    00000871: 	paddd	%xmm1, %xmm0
    00000875: 	movd	%xmm0, %eax
    00000879: 	cmpl	%eax, %edx
    0000087b: 	je	.Ltmp2504 # Offset: 2171
    0000087d: 	movl	current_test(%rip), %edx
    00000883: 	movq	%r14, %rsi
    00000886: 	movl	$0x1, %edi
    0000088b: 	xorl	%eax, %eax
    0000088d: 	callq	__printf_chk@PLT # Offset: 2189
    00000892: 	movl	iterations(%rip), %ecx
.Ltmp2504:
    00000898: 	addl	$0x1, %r13d
    0000089c: 	cmpl	%ecx, %r13d
    0000089f: 	jl	.Ltmp2505 # Offset: 2207
.Ltmp2502:
    000008a1: 	movq	%r12, %rsi
    000008a4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2219
    000008b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008b7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008c5: 	je	.Ltmp2506 # Offset: 2245
.Ltmp2707:
    000008cb: 	movq	-0x20(%rax), %r13
    000008cf: 	callq	clock@PLT # Offset: 2255
    000008d4: 	pxor	%xmm0, %xmm0
    000008d8: 	movq	%rax, end_time(%rip)
    000008df: 	movq	%r13, %rdi
    000008e2: 	subq	start_time(%rip), %rax
    000008e9: 	cvtsi2sd	%rax, %xmm0
    000008ee: 	divsd	DATAat0x385e0(%rip), %xmm0
    000008f6: 	callq	_Z13record_resultdPKc # Offset: 2294
    000008fb: 	movq	0x130(%rsp), %rdi
    00000903: 	cmpq	0x48(%rsp), %rdi
    00000908: 	je	.Ltmp2507 # Offset: 2312
    0000090a: 	movq	0x140(%rsp), %rax
    00000912: 	leaq	0x1(%rax), %rsi
    00000916: 	callq	_ZdlPvm@PLT # Offset: 2326
.Ltmp2507:
    0000091b: 	leaq	DATAat0x38224(%rip), %rdx
    00000922: 	movq	%r15, %rsi
    00000925: 	movq	%r12, %rdi
    00000928: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2344
    0000092d: 	callq	clock@PLT # Offset: 2349
    00000932: 	movl	iterations(%rip), %ecx
    00000938: 	xorl	%r13d, %r13d
    0000093b: 	leaq	DATAat0x381c8(%rip), %r14
    00000942: 	movq	%rax, start_time(%rip)
    00000949: 	testl	%ecx, %ecx
    0000094b: 	jle	.Ltmp2508 # Offset: 2379
    0000094d: 	nopl	(%rax) # Size: 3
.Ltmp2511:
    00000950: 	movq	%rbp, %rax
    00000953: 	pxor	%xmm0, %xmm0
    00000957: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2509:
    00000960: 	paddd	(%rax), %xmm0
    00000964: 	addq	$0x10, %rax
    00000968: 	cmpq	%rbx, %rax
    0000096b: 	jne	.Ltmp2509 # Offset: 2411
    0000096d: 	movdqa	%xmm0, %xmm1
    00000971: 	cvttsd2si	init_value(%rip), %edx
    00000979: 	psrldq	$0x8, %xmm1
    0000097e: 	paddd	%xmm1, %xmm0
    00000982: 	movdqa	%xmm0, %xmm1
    00000986: 	psrldq	$0x4, %xmm1
    0000098b: 	imull	$0x1f40, %edx, %edx
    00000991: 	paddd	%xmm1, %xmm0
    00000995: 	movd	%xmm0, %eax
    00000999: 	cmpl	%eax, %edx
    0000099b: 	je	.Ltmp2510 # Offset: 2459
    0000099d: 	movl	current_test(%rip), %edx
    000009a3: 	movq	%r14, %rsi
    000009a6: 	movl	$0x1, %edi
    000009ab: 	xorl	%eax, %eax
    000009ad: 	callq	__printf_chk@PLT # Offset: 2477
    000009b2: 	movl	iterations(%rip), %ecx
.Ltmp2510:
    000009b8: 	addl	$0x1, %r13d
    000009bc: 	cmpl	%ecx, %r13d
    000009bf: 	jl	.Ltmp2511 # Offset: 2495
.Ltmp2508:
    000009c1: 	movq	%r12, %rsi
    000009c4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000009cb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2507
    000009d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009d7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009e5: 	je	.Ltmp2512 # Offset: 2533
.Ltmp2706:
    000009eb: 	movq	-0x20(%rax), %r13
    000009ef: 	callq	clock@PLT # Offset: 2543
    000009f4: 	pxor	%xmm0, %xmm0
    000009f8: 	movq	%rax, end_time(%rip)
    000009ff: 	movq	%r13, %rdi
    00000a02: 	subq	start_time(%rip), %rax
    00000a09: 	cvtsi2sd	%rax, %xmm0
    00000a0e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000a16: 	callq	_Z13record_resultdPKc # Offset: 2582
    00000a1b: 	movq	0x130(%rsp), %rdi
    00000a23: 	cmpq	0x48(%rsp), %rdi
    00000a28: 	je	.Ltmp2513 # Offset: 2600
    00000a2a: 	movq	0x140(%rsp), %rax
    00000a32: 	leaq	0x1(%rax), %rsi
    00000a36: 	callq	_ZdlPvm@PLT # Offset: 2614
.Ltmp2513:
    00000a3b: 	leaq	DATAat0x38233(%rip), %rdx
    00000a42: 	movq	%r15, %rsi
    00000a45: 	movq	%r12, %rdi
    00000a48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2632
    00000a4d: 	callq	clock@PLT # Offset: 2637
    00000a52: 	movl	iterations(%rip), %ecx
    00000a58: 	xorl	%r13d, %r13d
    00000a5b: 	leaq	DATAat0x381c8(%rip), %r14
    00000a62: 	movq	%rax, start_time(%rip)
    00000a69: 	testl	%ecx, %ecx
    00000a6b: 	jle	.Ltmp2514 # Offset: 2667
    00000a6d: 	nopl	(%rax) # Size: 3
.Ltmp2517:
    00000a70: 	movq	%rbp, %rax
    00000a73: 	pxor	%xmm0, %xmm0
    00000a77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2515:
    00000a80: 	paddd	(%rax), %xmm0
    00000a84: 	addq	$0x10, %rax
    00000a88: 	cmpq	%rax, %rbx
    00000a8b: 	jne	.Ltmp2515 # Offset: 2699
    00000a8d: 	movdqa	%xmm0, %xmm1
    00000a91: 	cvttsd2si	init_value(%rip), %edx
    00000a99: 	psrldq	$0x8, %xmm1
    00000a9e: 	paddd	%xmm1, %xmm0
    00000aa2: 	movdqa	%xmm0, %xmm1
    00000aa6: 	psrldq	$0x4, %xmm1
    00000aab: 	imull	$0x1f40, %edx, %edx
    00000ab1: 	paddd	%xmm1, %xmm0
    00000ab5: 	movd	%xmm0, %eax
    00000ab9: 	cmpl	%eax, %edx
    00000abb: 	je	.Ltmp2516 # Offset: 2747
    00000abd: 	movl	current_test(%rip), %edx
    00000ac3: 	movq	%r14, %rsi
    00000ac6: 	movl	$0x1, %edi
    00000acb: 	xorl	%eax, %eax
    00000acd: 	callq	__printf_chk@PLT # Offset: 2765
    00000ad2: 	movl	iterations(%rip), %ecx
.Ltmp2516:
    00000ad8: 	addl	$0x1, %r13d
    00000adc: 	cmpl	%ecx, %r13d
    00000adf: 	jl	.Ltmp2517 # Offset: 2783
.Ltmp2514:
    00000ae1: 	movq	%r12, %rsi
    00000ae4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000aeb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2795
    00000af0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000af7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000afe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b05: 	je	.Ltmp2518 # Offset: 2821
.Ltmp2705:
    00000b0b: 	movq	-0x20(%rax), %r13
    00000b0f: 	callq	clock@PLT # Offset: 2831
    00000b14: 	pxor	%xmm0, %xmm0
    00000b18: 	movq	%rax, end_time(%rip)
    00000b1f: 	movq	%r13, %rdi
    00000b22: 	subq	start_time(%rip), %rax
    00000b29: 	cvtsi2sd	%rax, %xmm0
    00000b2e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000b36: 	callq	_Z13record_resultdPKc # Offset: 2870
    00000b3b: 	movq	0x130(%rsp), %rdi
    00000b43: 	cmpq	0x48(%rsp), %rdi
    00000b48: 	je	.Ltmp2519 # Offset: 2888
    00000b4a: 	movq	0x140(%rsp), %rax
    00000b52: 	leaq	0x1(%rax), %rsi
    00000b56: 	callq	_ZdlPvm@PLT # Offset: 2902
.Ltmp2519:
    00000b5b: 	leaq	DATAat0x3823d(%rip), %rdx
    00000b62: 	movq	%r15, %rsi
    00000b65: 	movq	%r12, %rdi
    00000b68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2920
    00000b6d: 	callq	clock@PLT # Offset: 2925
    00000b72: 	movl	iterations(%rip), %ecx
    00000b78: 	xorl	%r13d, %r13d
    00000b7b: 	leaq	DATAat0x381c8(%rip), %r14
    00000b82: 	movq	%rax, start_time(%rip)
    00000b89: 	testl	%ecx, %ecx
    00000b8b: 	jle	.Ltmp2520 # Offset: 2955
    00000b8d: 	nopl	(%rax) # Size: 3
.Ltmp2523:
    00000b90: 	movq	%rbp, %rax
    00000b93: 	pxor	%xmm0, %xmm0
    00000b97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2521:
    00000ba0: 	paddd	(%rax), %xmm0
    00000ba4: 	addq	$0x10, %rax
    00000ba8: 	cmpq	%rbx, %rax
    00000bab: 	jne	.Ltmp2521 # Offset: 2987
    00000bad: 	movdqa	%xmm0, %xmm1
    00000bb1: 	cvttsd2si	init_value(%rip), %edx
    00000bb9: 	psrldq	$0x8, %xmm1
    00000bbe: 	paddd	%xmm1, %xmm0
    00000bc2: 	movdqa	%xmm0, %xmm1
    00000bc6: 	psrldq	$0x4, %xmm1
    00000bcb: 	imull	$0x1f40, %edx, %edx
    00000bd1: 	paddd	%xmm1, %xmm0
    00000bd5: 	movd	%xmm0, %eax
    00000bd9: 	cmpl	%eax, %edx
    00000bdb: 	je	.Ltmp2522 # Offset: 3035
    00000bdd: 	movl	current_test(%rip), %edx
    00000be3: 	movq	%r14, %rsi
    00000be6: 	movl	$0x1, %edi
    00000beb: 	xorl	%eax, %eax
    00000bed: 	callq	__printf_chk@PLT # Offset: 3053
    00000bf2: 	movl	iterations(%rip), %ecx
.Ltmp2522:
    00000bf8: 	addl	$0x1, %r13d
    00000bfc: 	cmpl	%ecx, %r13d
    00000bff: 	jl	.Ltmp2523 # Offset: 3071
.Ltmp2520:
    00000c01: 	movq	%r12, %rsi
    00000c04: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c0b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3083
    00000c10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c17: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c25: 	je	.Ltmp2524 # Offset: 3109
.Ltmp2704:
    00000c2b: 	movq	-0x20(%rax), %r13
    00000c2f: 	callq	clock@PLT # Offset: 3119
    00000c34: 	pxor	%xmm0, %xmm0
    00000c38: 	movq	%rax, end_time(%rip)
    00000c3f: 	movq	%r13, %rdi
    00000c42: 	subq	start_time(%rip), %rax
    00000c49: 	cvtsi2sd	%rax, %xmm0
    00000c4e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c56: 	callq	_Z13record_resultdPKc # Offset: 3158
    00000c5b: 	movq	0x130(%rsp), %rdi
    00000c63: 	cmpq	0x48(%rsp), %rdi
    00000c68: 	je	.Ltmp2525 # Offset: 3176
    00000c6a: 	movq	0x140(%rsp), %rax
    00000c72: 	leaq	0x1(%rax), %rsi
    00000c76: 	callq	_ZdlPvm@PLT # Offset: 3190
.Ltmp2525:
    00000c7b: 	leaq	DATAat0x38246(%rip), %rdx
    00000c82: 	movq	%r15, %rsi
    00000c85: 	movq	%r12, %rdi
    00000c88: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3208
    00000c8d: 	callq	clock@PLT # Offset: 3213
    00000c92: 	movl	iterations(%rip), %ecx
    00000c98: 	xorl	%r13d, %r13d
    00000c9b: 	leaq	DATAat0x381c8(%rip), %r14
    00000ca2: 	movq	%rax, start_time(%rip)
    00000ca9: 	testl	%ecx, %ecx
    00000cab: 	jle	.Ltmp2526 # Offset: 3243
    00000cad: 	nopl	(%rax) # Size: 3
.Ltmp2529:
    00000cb0: 	movq	%rbp, %rax
    00000cb3: 	pxor	%xmm0, %xmm0
    00000cb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2527:
    00000cc0: 	paddd	(%rax), %xmm0
    00000cc4: 	addq	$0x10, %rax
    00000cc8: 	cmpq	%rax, %rbx
    00000ccb: 	jne	.Ltmp2527 # Offset: 3275
    00000ccd: 	movdqa	%xmm0, %xmm1
    00000cd1: 	cvttsd2si	init_value(%rip), %edx
    00000cd9: 	psrldq	$0x8, %xmm1
    00000cde: 	paddd	%xmm1, %xmm0
    00000ce2: 	movdqa	%xmm0, %xmm1
    00000ce6: 	psrldq	$0x4, %xmm1
    00000ceb: 	imull	$0x1f40, %edx, %edx
    00000cf1: 	paddd	%xmm1, %xmm0
    00000cf5: 	movd	%xmm0, %eax
    00000cf9: 	cmpl	%eax, %edx
    00000cfb: 	je	.Ltmp2528 # Offset: 3323
    00000cfd: 	movl	current_test(%rip), %edx
    00000d03: 	movq	%r14, %rsi
    00000d06: 	movl	$0x1, %edi
    00000d0b: 	xorl	%eax, %eax
    00000d0d: 	callq	__printf_chk@PLT # Offset: 3341
    00000d12: 	movl	iterations(%rip), %ecx
.Ltmp2528:
    00000d18: 	addl	$0x1, %r13d
    00000d1c: 	cmpl	%ecx, %r13d
    00000d1f: 	jl	.Ltmp2529 # Offset: 3359
.Ltmp2526:
    00000d21: 	movq	%r12, %rsi
    00000d24: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d2b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3371
    00000d30: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d37: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d3e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d45: 	je	.Ltmp2530 # Offset: 3397
.Ltmp2703:
    00000d4b: 	movq	-0x20(%rax), %r13
    00000d4f: 	callq	clock@PLT # Offset: 3407
    00000d54: 	pxor	%xmm0, %xmm0
    00000d58: 	movq	%rax, end_time(%rip)
    00000d5f: 	movq	%r13, %rdi
    00000d62: 	subq	start_time(%rip), %rax
    00000d69: 	cvtsi2sd	%rax, %xmm0
    00000d6e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000d76: 	callq	_Z13record_resultdPKc # Offset: 3446
    00000d7b: 	movq	0x130(%rsp), %rdi
    00000d83: 	cmpq	0x48(%rsp), %rdi
    00000d88: 	je	.Ltmp2531 # Offset: 3464
    00000d8a: 	movq	0x140(%rsp), %rax
    00000d92: 	leaq	0x1(%rax), %rsi
    00000d96: 	callq	_ZdlPvm@PLT # Offset: 3478
.Ltmp2531:
    00000d9b: 	leaq	DATAat0x3824f(%rip), %rdx
    00000da2: 	movq	%r15, %rsi
    00000da5: 	movq	%r12, %rdi
    00000da8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3496
    00000dad: 	callq	clock@PLT # Offset: 3501
    00000db2: 	movl	iterations(%rip), %ecx
    00000db8: 	xorl	%r13d, %r13d
    00000dbb: 	leaq	DATAat0x381c8(%rip), %r14
    00000dc2: 	movq	%rax, start_time(%rip)
    00000dc9: 	testl	%ecx, %ecx
    00000dcb: 	jle	.Ltmp2532 # Offset: 3531
    00000dcd: 	nopl	(%rax) # Size: 3
.Ltmp2535:
    00000dd0: 	movq	%rbp, %rax
    00000dd3: 	pxor	%xmm0, %xmm0
    00000dd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2533:
    00000de0: 	paddd	(%rax), %xmm0
    00000de4: 	addq	$0x10, %rax
    00000de8: 	cmpq	%rax, %rbx
    00000deb: 	jne	.Ltmp2533 # Offset: 3563
    00000ded: 	movdqa	%xmm0, %xmm1
    00000df1: 	cvttsd2si	init_value(%rip), %edx
    00000df9: 	psrldq	$0x8, %xmm1
    00000dfe: 	paddd	%xmm1, %xmm0
    00000e02: 	movdqa	%xmm0, %xmm1
    00000e06: 	psrldq	$0x4, %xmm1
    00000e0b: 	imull	$0x1f40, %edx, %edx
    00000e11: 	paddd	%xmm1, %xmm0
    00000e15: 	movd	%xmm0, %eax
    00000e19: 	cmpl	%eax, %edx
    00000e1b: 	je	.Ltmp2534 # Offset: 3611
    00000e1d: 	movl	current_test(%rip), %edx
    00000e23: 	movq	%r14, %rsi
    00000e26: 	movl	$0x1, %edi
    00000e2b: 	xorl	%eax, %eax
    00000e2d: 	callq	__printf_chk@PLT # Offset: 3629
    00000e32: 	movl	iterations(%rip), %ecx
.Ltmp2534:
    00000e38: 	addl	$0x1, %r13d
    00000e3c: 	cmpl	%ecx, %r13d
    00000e3f: 	jl	.Ltmp2535 # Offset: 3647
.Ltmp2532:
    00000e41: 	movq	%r12, %rsi
    00000e44: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e4b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3659
    00000e50: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e57: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e5e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e65: 	je	.Ltmp2536 # Offset: 3685
.Ltmp2702:
    00000e6b: 	movq	-0x20(%rax), %r13
    00000e6f: 	callq	clock@PLT # Offset: 3695
    00000e74: 	pxor	%xmm0, %xmm0
    00000e78: 	movq	%rax, end_time(%rip)
    00000e7f: 	movq	%r13, %rdi
    00000e82: 	subq	start_time(%rip), %rax
    00000e89: 	cvtsi2sd	%rax, %xmm0
    00000e8e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e96: 	callq	_Z13record_resultdPKc # Offset: 3734
    00000e9b: 	movq	0x130(%rsp), %rdi
    00000ea3: 	cmpq	0x48(%rsp), %rdi
    00000ea8: 	je	.Ltmp2537 # Offset: 3752
    00000eaa: 	movq	0x140(%rsp), %rax
    00000eb2: 	leaq	0x1(%rax), %rsi
    00000eb6: 	callq	_ZdlPvm@PLT # Offset: 3766
.Ltmp2537:
    00000ebb: 	leaq	DATAat0x38259(%rip), %rdx
    00000ec2: 	movq	%r15, %rsi
    00000ec5: 	movq	%r12, %rdi
    00000ec8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3784
    00000ecd: 	callq	clock@PLT # Offset: 3789
    00000ed2: 	movl	iterations(%rip), %ecx
    00000ed8: 	xorl	%r13d, %r13d
    00000edb: 	leaq	DATAat0x381c8(%rip), %r14
    00000ee2: 	movq	%rax, start_time(%rip)
    00000ee9: 	testl	%ecx, %ecx
    00000eeb: 	jle	.Ltmp2538 # Offset: 3819
    00000eed: 	nopl	(%rax) # Size: 3
.Ltmp2541:
    00000ef0: 	movq	%rbp, %rax
    00000ef3: 	pxor	%xmm0, %xmm0
    00000ef7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2539:
    00000f00: 	paddd	(%rax), %xmm0
    00000f04: 	addq	$0x10, %rax
    00000f08: 	cmpq	%rax, %rbx
    00000f0b: 	jne	.Ltmp2539 # Offset: 3851
    00000f0d: 	movdqa	%xmm0, %xmm1
    00000f11: 	cvttsd2si	init_value(%rip), %edx
    00000f19: 	psrldq	$0x8, %xmm1
    00000f1e: 	paddd	%xmm1, %xmm0
    00000f22: 	movdqa	%xmm0, %xmm1
    00000f26: 	psrldq	$0x4, %xmm1
    00000f2b: 	imull	$0x1f40, %edx, %edx
    00000f31: 	paddd	%xmm1, %xmm0
    00000f35: 	movd	%xmm0, %eax
    00000f39: 	cmpl	%eax, %edx
    00000f3b: 	je	.Ltmp2540 # Offset: 3899
    00000f3d: 	movl	current_test(%rip), %edx
    00000f43: 	movq	%r14, %rsi
    00000f46: 	movl	$0x1, %edi
    00000f4b: 	xorl	%eax, %eax
    00000f4d: 	callq	__printf_chk@PLT # Offset: 3917
    00000f52: 	movl	iterations(%rip), %ecx
.Ltmp2540:
    00000f58: 	addl	$0x1, %r13d
    00000f5c: 	cmpl	%ecx, %r13d
    00000f5f: 	jl	.Ltmp2541 # Offset: 3935
.Ltmp2538:
    00000f61: 	movq	%r12, %rsi
    00000f64: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f6b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3947
    00000f70: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f77: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f7e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f85: 	je	.Ltmp2542 # Offset: 3973
.Ltmp2701:
    00000f8b: 	movq	-0x20(%rax), %r13
    00000f8f: 	callq	clock@PLT # Offset: 3983
    00000f94: 	pxor	%xmm0, %xmm0
    00000f98: 	movq	%rax, end_time(%rip)
    00000f9f: 	movq	%r13, %rdi
    00000fa2: 	subq	start_time(%rip), %rax
    00000fa9: 	cvtsi2sd	%rax, %xmm0
    00000fae: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000fb6: 	callq	_Z13record_resultdPKc # Offset: 4022
    00000fbb: 	movq	0x130(%rsp), %rdi
    00000fc3: 	cmpq	0x48(%rsp), %rdi
    00000fc8: 	je	.Ltmp2543 # Offset: 4040
    00000fca: 	movq	0x140(%rsp), %rax
    00000fd2: 	leaq	0x1(%rax), %rsi
    00000fd6: 	callq	_ZdlPvm@PLT # Offset: 4054
.Ltmp2543:
    00000fdb: 	leaq	DATAat0x38266(%rip), %rdx
    00000fe2: 	movq	%r15, %rsi
    00000fe5: 	movq	%r12, %rdi
    00000fe8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4072
    00000fed: 	callq	clock@PLT # Offset: 4077
    00000ff2: 	movl	iterations(%rip), %ecx
    00000ff8: 	xorl	%r13d, %r13d
    00000ffb: 	leaq	DATAat0x381c8(%rip), %r14
    00001002: 	movq	%rax, start_time(%rip)
    00001009: 	testl	%ecx, %ecx
    0000100b: 	jle	.Ltmp2544 # Offset: 4107
    0000100d: 	nopl	(%rax) # Size: 3
.Ltmp2547:
    00001010: 	movq	%rbp, %rax
    00001013: 	pxor	%xmm0, %xmm0
    00001017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2545:
    00001020: 	paddd	(%rax), %xmm0
    00001024: 	addq	$0x10, %rax
    00001028: 	cmpq	%rax, %rbx
    0000102b: 	jne	.Ltmp2545 # Offset: 4139
    0000102d: 	movdqa	%xmm0, %xmm1
    00001031: 	cvttsd2si	init_value(%rip), %edx
    00001039: 	psrldq	$0x8, %xmm1
    0000103e: 	paddd	%xmm1, %xmm0
    00001042: 	movdqa	%xmm0, %xmm1
    00001046: 	psrldq	$0x4, %xmm1
    0000104b: 	imull	$0x1f40, %edx, %edx
    00001051: 	paddd	%xmm1, %xmm0
    00001055: 	movd	%xmm0, %eax
    00001059: 	cmpl	%eax, %edx
    0000105b: 	je	.Ltmp2546 # Offset: 4187
    0000105d: 	movl	current_test(%rip), %edx
    00001063: 	movq	%r14, %rsi
    00001066: 	movl	$0x1, %edi
    0000106b: 	xorl	%eax, %eax
    0000106d: 	callq	__printf_chk@PLT # Offset: 4205
    00001072: 	movl	iterations(%rip), %ecx
.Ltmp2546:
    00001078: 	addl	$0x1, %r13d
    0000107c: 	cmpl	%ecx, %r13d
    0000107f: 	jl	.Ltmp2547 # Offset: 4223
.Ltmp2544:
    00001081: 	movq	%r12, %rsi
    00001084: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000108b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4235
    00001090: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001097: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000109e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010a5: 	je	.Ltmp2548 # Offset: 4261
.Ltmp2700:
    000010ab: 	movq	-0x20(%rax), %r13
    000010af: 	callq	clock@PLT # Offset: 4271
    000010b4: 	pxor	%xmm0, %xmm0
    000010b8: 	movq	%rax, end_time(%rip)
    000010bf: 	movq	%r13, %rdi
    000010c2: 	subq	start_time(%rip), %rax
    000010c9: 	cvtsi2sd	%rax, %xmm0
    000010ce: 	divsd	DATAat0x385e0(%rip), %xmm0
    000010d6: 	callq	_Z13record_resultdPKc # Offset: 4310
    000010db: 	movq	0x130(%rsp), %rdi
    000010e3: 	cmpq	0x48(%rsp), %rdi
    000010e8: 	je	.Ltmp2549 # Offset: 4328
    000010ea: 	movq	0x140(%rsp), %rax
    000010f2: 	leaq	0x1(%rax), %rsi
    000010f6: 	callq	_ZdlPvm@PLT # Offset: 4342
.Ltmp2549:
    000010fb: 	leaq	0xd0(%rsp), %rdi
    00001103: 	leaq	DATAat0x38275(%rip), %rdx
    0000110a: 	movq	%r15, %rsi
    0000110d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4365
    00001112: 	movl	iterations(%rip), %esi
    00001118: 	movq	0xd0(%rsp), %rdi
    00001120: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4384
    00001125: 	leaq	DATAat0x381e2(%rip), %rdx
    0000112c: 	movq	%r15, %rsi
    0000112f: 	movq	%r12, %rdi
    00001132: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4402
    00001137: 	callq	clock@PLT # Offset: 4407
    0000113c: 	movq	%r12, %rsi
    0000113f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001146: 	movq	%rax, start_time(%rip)
    0000114d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4429
    00001152: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001159: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001160: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001167: 	je	.Ltmp2550 # Offset: 4455
.Ltmp2699:
    0000116d: 	movq	-0x20(%rax), %r13
    00001171: 	callq	clock@PLT # Offset: 4465
    00001176: 	pxor	%xmm0, %xmm0
    0000117a: 	movq	%rax, end_time(%rip)
    00001181: 	movq	%r13, %rdi
    00001184: 	subq	start_time(%rip), %rax
    0000118b: 	cvtsi2sd	%rax, %xmm0
    00001190: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001198: 	callq	_Z13record_resultdPKc # Offset: 4504
    0000119d: 	movq	0x130(%rsp), %rdi
    000011a5: 	cmpq	0x48(%rsp), %rdi
    000011aa: 	je	.Ltmp2551 # Offset: 4522
    000011ac: 	movq	0x140(%rsp), %rax
    000011b4: 	leaq	0x1(%rax), %rsi
    000011b8: 	callq	_ZdlPvm@PLT # Offset: 4536
.Ltmp2551:
    000011bd: 	leaq	DATAat0x3828f(%rip), %rdx
    000011c4: 	movq	%r15, %rsi
    000011c7: 	movq	%r12, %rdi
    000011ca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4554
    000011cf: 	callq	clock@PLT # Offset: 4559
    000011d4: 	movq	%r12, %rsi
    000011d7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011de: 	movq	%rax, start_time(%rip)
    000011e5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4581
    000011ea: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011f1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011f8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011ff: 	je	.Ltmp2552 # Offset: 4607
.Ltmp2698:
    00001205: 	movq	-0x20(%rax), %r13
    00001209: 	callq	clock@PLT # Offset: 4617
    0000120e: 	pxor	%xmm0, %xmm0
    00001212: 	movq	%rax, end_time(%rip)
    00001219: 	movq	%r13, %rdi
    0000121c: 	subq	start_time(%rip), %rax
    00001223: 	cvtsi2sd	%rax, %xmm0
    00001228: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001230: 	callq	_Z13record_resultdPKc # Offset: 4656
    00001235: 	movq	0x130(%rsp), %rdi
    0000123d: 	cmpq	0x48(%rsp), %rdi
    00001242: 	je	.Ltmp2553 # Offset: 4674
    00001244: 	movq	0x140(%rsp), %rax
    0000124c: 	leaq	0x1(%rax), %rsi
    00001250: 	callq	_ZdlPvm@PLT # Offset: 4688
.Ltmp2553:
    00001255: 	leaq	DATAat0x3829b(%rip), %rdx
    0000125c: 	movq	%r15, %rsi
    0000125f: 	movq	%r12, %rdi
    00001262: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4706
    00001267: 	callq	clock@PLT # Offset: 4711
    0000126c: 	movq	%r12, %rsi
    0000126f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001276: 	movq	%rax, start_time(%rip)
    0000127d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4733
    00001282: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001289: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001290: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001297: 	je	.Ltmp2554 # Offset: 4759
.Ltmp2697:
    0000129d: 	movq	-0x20(%rax), %r13
    000012a1: 	callq	clock@PLT # Offset: 4769
    000012a6: 	pxor	%xmm0, %xmm0
    000012aa: 	movq	%rax, end_time(%rip)
    000012b1: 	movq	%r13, %rdi
    000012b4: 	subq	start_time(%rip), %rax
    000012bb: 	cvtsi2sd	%rax, %xmm0
    000012c0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012c8: 	callq	_Z13record_resultdPKc # Offset: 4808
    000012cd: 	movq	0x130(%rsp), %rdi
    000012d5: 	cmpq	0x48(%rsp), %rdi
    000012da: 	je	.Ltmp2555 # Offset: 4826
    000012dc: 	movq	0x140(%rsp), %rax
    000012e4: 	leaq	0x1(%rax), %rsi
    000012e8: 	callq	_ZdlPvm@PLT # Offset: 4840
.Ltmp2555:
    000012ed: 	leaq	DATAat0x382aa(%rip), %rdx
    000012f4: 	movq	%r15, %rsi
    000012f7: 	movq	%r12, %rdi
    000012fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4858
    000012ff: 	callq	clock@PLT # Offset: 4863
    00001304: 	movq	%r12, %rsi
    00001307: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000130e: 	movq	%rax, start_time(%rip)
    00001315: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4885
    0000131a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001321: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001328: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000132f: 	je	.Ltmp2556 # Offset: 4911
.Ltmp2696:
    00001335: 	movq	-0x20(%rax), %r13
    00001339: 	callq	clock@PLT # Offset: 4921
    0000133e: 	pxor	%xmm0, %xmm0
    00001342: 	movq	%rax, end_time(%rip)
    00001349: 	movq	%r13, %rdi
    0000134c: 	subq	start_time(%rip), %rax
    00001353: 	cvtsi2sd	%rax, %xmm0
    00001358: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001360: 	callq	_Z13record_resultdPKc # Offset: 4960
    00001365: 	movq	0x130(%rsp), %rdi
    0000136d: 	cmpq	0x48(%rsp), %rdi
    00001372: 	je	.Ltmp2557 # Offset: 4978
    00001374: 	movq	0x140(%rsp), %rax
    0000137c: 	leaq	0x1(%rax), %rsi
    00001380: 	callq	_ZdlPvm@PLT # Offset: 4992
.Ltmp2557:
    00001385: 	leaq	DATAat0x382f3(%rip), %rdx
    0000138c: 	movq	%r15, %rsi
    0000138f: 	movq	%r12, %rdi
    00001392: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5010
    00001397: 	callq	clock@PLT # Offset: 5015
    0000139c: 	movq	%r12, %rsi
    0000139f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013a6: 	movq	%rax, start_time(%rip)
    000013ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5037
    000013b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013c7: 	je	.Ltmp2558 # Offset: 5063
.Ltmp2695:
    000013cd: 	movq	-0x20(%rax), %r13
    000013d1: 	callq	clock@PLT # Offset: 5073
    000013d6: 	pxor	%xmm0, %xmm0
    000013da: 	movq	%rax, end_time(%rip)
    000013e1: 	movq	%r13, %rdi
    000013e4: 	subq	start_time(%rip), %rax
    000013eb: 	cvtsi2sd	%rax, %xmm0
    000013f0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013f8: 	callq	_Z13record_resultdPKc # Offset: 5112
    000013fd: 	movq	0x130(%rsp), %rdi
    00001405: 	cmpq	0x48(%rsp), %rdi
    0000140a: 	je	.Ltmp2559 # Offset: 5130
    0000140c: 	movq	0x140(%rsp), %rax
    00001414: 	leaq	0x1(%rax), %rsi
    00001418: 	callq	_ZdlPvm@PLT # Offset: 5144
.Ltmp2559:
    0000141d: 	leaq	DATAat0x382b3(%rip), %rdx
    00001424: 	movq	%r15, %rsi
    00001427: 	movq	%r12, %rdi
    0000142a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5162
    0000142f: 	callq	clock@PLT # Offset: 5167
    00001434: 	movq	%r12, %rsi
    00001437: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000143e: 	movq	%rax, start_time(%rip)
    00001445: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5189
    0000144a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001451: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001458: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000145f: 	je	.Ltmp2560 # Offset: 5215
.Ltmp2694:
    00001465: 	movq	-0x20(%rax), %r13
    00001469: 	callq	clock@PLT # Offset: 5225
    0000146e: 	pxor	%xmm0, %xmm0
    00001472: 	movq	%rax, end_time(%rip)
    00001479: 	movq	%r13, %rdi
    0000147c: 	subq	start_time(%rip), %rax
    00001483: 	cvtsi2sd	%rax, %xmm0
    00001488: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001490: 	callq	_Z13record_resultdPKc # Offset: 5264
    00001495: 	movq	0x130(%rsp), %rdi
    0000149d: 	cmpq	0x48(%rsp), %rdi
    000014a2: 	je	.Ltmp2561 # Offset: 5282
    000014a4: 	movq	0x140(%rsp), %rax
    000014ac: 	leaq	0x1(%rax), %rsi
    000014b0: 	callq	_ZdlPvm@PLT # Offset: 5296
.Ltmp2561:
    000014b5: 	leaq	DATAat0x382c3(%rip), %rdx
    000014bc: 	movq	%r15, %rsi
    000014bf: 	movq	%r12, %rdi
    000014c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5314
    000014c7: 	callq	clock@PLT # Offset: 5319
    000014cc: 	movq	%r12, %rsi
    000014cf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014d6: 	movq	%rax, start_time(%rip)
    000014dd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5341
    000014e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014e9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014f0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014f7: 	je	.Ltmp2562 # Offset: 5367
.Ltmp2693:
    000014fd: 	movq	-0x20(%rax), %r13
    00001501: 	callq	clock@PLT # Offset: 5377
    00001506: 	pxor	%xmm0, %xmm0
    0000150a: 	movq	%rax, end_time(%rip)
    00001511: 	movq	%r13, %rdi
    00001514: 	subq	start_time(%rip), %rax
    0000151b: 	cvtsi2sd	%rax, %xmm0
    00001520: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001528: 	callq	_Z13record_resultdPKc # Offset: 5416
    0000152d: 	movq	0x130(%rsp), %rdi
    00001535: 	cmpq	0x48(%rsp), %rdi
    0000153a: 	je	.Ltmp2563 # Offset: 5434
    0000153c: 	movq	0x140(%rsp), %rax
    00001544: 	leaq	0x1(%rax), %rsi
    00001548: 	callq	_ZdlPvm@PLT # Offset: 5448
.Ltmp2563:
    0000154d: 	leaq	DATAat0x382d6(%rip), %rdx
    00001554: 	movq	%r15, %rsi
    00001557: 	movq	%r12, %rdi
    0000155a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5466
    0000155f: 	callq	clock@PLT # Offset: 5471
    00001564: 	movq	%r12, %rsi
    00001567: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000156e: 	movq	%rax, start_time(%rip)
    00001575: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5493
    0000157a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001581: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001588: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000158f: 	je	.Ltmp2564 # Offset: 5519
.Ltmp2692:
    00001595: 	movq	-0x20(%rax), %r13
    00001599: 	callq	clock@PLT # Offset: 5529
    0000159e: 	pxor	%xmm0, %xmm0
    000015a2: 	movq	%rax, end_time(%rip)
    000015a9: 	movq	%r13, %rdi
    000015ac: 	subq	start_time(%rip), %rax
    000015b3: 	cvtsi2sd	%rax, %xmm0
    000015b8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015c0: 	callq	_Z13record_resultdPKc # Offset: 5568
    000015c5: 	movq	0x130(%rsp), %rdi
    000015cd: 	cmpq	0x48(%rsp), %rdi
    000015d2: 	je	.Ltmp2565 # Offset: 5586
    000015d4: 	movq	0x140(%rsp), %rax
    000015dc: 	leaq	0x1(%rax), %rsi
    000015e0: 	callq	_ZdlPvm@PLT # Offset: 5600
.Ltmp2565:
    000015e5: 	leaq	DATAat0x382e6(%rip), %rdx
    000015ec: 	movq	%r15, %rsi
    000015ef: 	movq	%r12, %rdi
    000015f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5618
    000015f7: 	callq	clock@PLT # Offset: 5623
    000015fc: 	movq	%r12, %rsi
    000015ff: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001606: 	movq	%rax, start_time(%rip)
    0000160d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5645
    00001612: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001619: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001620: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001627: 	je	.Ltmp2566 # Offset: 5671
.Ltmp2691:
    0000162d: 	movq	-0x20(%rax), %r13
    00001631: 	callq	clock@PLT # Offset: 5681
    00001636: 	pxor	%xmm0, %xmm0
    0000163a: 	movq	%rax, end_time(%rip)
    00001641: 	movq	%r13, %rdi
    00001644: 	subq	start_time(%rip), %rax
    0000164b: 	cvtsi2sd	%rax, %xmm0
    00001650: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001658: 	callq	_Z13record_resultdPKc # Offset: 5720
    0000165d: 	movq	0x130(%rsp), %rdi
    00001665: 	cmpq	0x48(%rsp), %rdi
    0000166a: 	je	.Ltmp2567 # Offset: 5738
    0000166c: 	movq	0x140(%rsp), %rax
    00001674: 	leaq	0x1(%rax), %rsi
    00001678: 	callq	_ZdlPvm@PLT # Offset: 5752
.Ltmp2567:
    0000167d: 	leaq	DATAat0x382ff(%rip), %rdx
    00001684: 	movq	%r15, %rsi
    00001687: 	movq	%r12, %rdi
    0000168a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5770
    0000168f: 	callq	clock@PLT # Offset: 5775
    00001694: 	movq	%r12, %rsi
    00001697: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000169e: 	movq	%rax, start_time(%rip)
    000016a5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5797
    000016aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016b1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016bf: 	je	.Ltmp2568 # Offset: 5823
.Ltmp2690:
    000016c5: 	movq	-0x20(%rax), %r13
    000016c9: 	callq	clock@PLT # Offset: 5833
    000016ce: 	pxor	%xmm0, %xmm0
    000016d2: 	movq	%rax, end_time(%rip)
    000016d9: 	movq	%r13, %rdi
    000016dc: 	subq	start_time(%rip), %rax
    000016e3: 	cvtsi2sd	%rax, %xmm0
    000016e8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000016f0: 	callq	_Z13record_resultdPKc # Offset: 5872
    000016f5: 	movq	0x130(%rsp), %rdi
    000016fd: 	cmpq	0x48(%rsp), %rdi
    00001702: 	je	.Ltmp2569 # Offset: 5890
    00001704: 	movq	0x140(%rsp), %rax
    0000170c: 	leaq	0x1(%rax), %rsi
    00001710: 	callq	_ZdlPvm@PLT # Offset: 5904
.Ltmp2569:
    00001715: 	leaq	DATAat0x38315(%rip), %rdx
    0000171c: 	movq	%r15, %rsi
    0000171f: 	movq	%r12, %rdi
    00001722: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5922
    00001727: 	callq	clock@PLT # Offset: 5927
    0000172c: 	movq	%r12, %rsi
    0000172f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001736: 	movq	%rax, start_time(%rip)
    0000173d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5949
    00001742: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001749: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001750: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001757: 	je	.Ltmp2570 # Offset: 5975
.Ltmp2689:
    0000175d: 	movq	-0x20(%rax), %r13
    00001761: 	callq	clock@PLT # Offset: 5985
    00001766: 	pxor	%xmm0, %xmm0
    0000176a: 	movq	%rax, end_time(%rip)
    00001771: 	movq	%r13, %rdi
    00001774: 	subq	start_time(%rip), %rax
    0000177b: 	cvtsi2sd	%rax, %xmm0
    00001780: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001788: 	callq	_Z13record_resultdPKc # Offset: 6024
    0000178d: 	movq	0x130(%rsp), %rdi
    00001795: 	cmpq	0x48(%rsp), %rdi
    0000179a: 	je	.Ltmp2571 # Offset: 6042
    0000179c: 	movq	0x140(%rsp), %rax
    000017a4: 	leaq	0x1(%rax), %rsi
    000017a8: 	callq	_ZdlPvm@PLT # Offset: 6056
.Ltmp2571:
    000017ad: 	leaq	DATAat0x3831f(%rip), %rdx
    000017b4: 	movq	%r15, %rsi
    000017b7: 	movq	%r12, %rdi
    000017ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6074
    000017bf: 	callq	clock@PLT # Offset: 6079
    000017c4: 	movq	%r12, %rsi
    000017c7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017ce: 	movq	%rax, start_time(%rip)
    000017d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6101
    000017da: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017e1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ef: 	je	.Ltmp2572 # Offset: 6127
.Ltmp2688:
    000017f5: 	movq	-0x20(%rax), %r13
    000017f9: 	callq	clock@PLT # Offset: 6137
    000017fe: 	pxor	%xmm0, %xmm0
    00001802: 	movq	%rax, end_time(%rip)
    00001809: 	movq	%r13, %rdi
    0000180c: 	subq	start_time(%rip), %rax
    00001813: 	cvtsi2sd	%rax, %xmm0
    00001818: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001820: 	callq	_Z13record_resultdPKc # Offset: 6176
    00001825: 	movq	0x130(%rsp), %rdi
    0000182d: 	cmpq	0x48(%rsp), %rdi
    00001832: 	je	.Ltmp2573 # Offset: 6194
    00001834: 	movq	0x140(%rsp), %rax
    0000183c: 	leaq	0x1(%rax), %rsi
    00001840: 	callq	_ZdlPvm@PLT # Offset: 6208
.Ltmp2573:
    00001845: 	leaq	DATAat0x38329(%rip), %rdx
    0000184c: 	movq	%r15, %rsi
    0000184f: 	movq	%r12, %rdi
    00001852: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6226
    00001857: 	callq	clock@PLT # Offset: 6231
    0000185c: 	movq	%r12, %rsi
    0000185f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001866: 	movq	%rax, start_time(%rip)
    0000186d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6253
    00001872: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001879: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001880: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001887: 	je	.Ltmp2574 # Offset: 6279
.Ltmp2687:
    0000188d: 	movq	-0x20(%rax), %r13
    00001891: 	callq	clock@PLT # Offset: 6289
    00001896: 	pxor	%xmm0, %xmm0
    0000189a: 	movq	%rax, end_time(%rip)
    000018a1: 	movq	%r13, %rdi
    000018a4: 	subq	start_time(%rip), %rax
    000018ab: 	cvtsi2sd	%rax, %xmm0
    000018b0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018b8: 	callq	_Z13record_resultdPKc # Offset: 6328
    000018bd: 	movq	0x130(%rsp), %rdi
    000018c5: 	cmpq	0x48(%rsp), %rdi
    000018ca: 	je	.Ltmp2575 # Offset: 6346
    000018cc: 	movq	0x140(%rsp), %rax
    000018d4: 	leaq	0x1(%rax), %rsi
    000018d8: 	callq	_ZdlPvm@PLT # Offset: 6360
.Ltmp2575:
    000018dd: 	leaq	DATAat0x38339(%rip), %rdx
    000018e4: 	movq	%r15, %rsi
    000018e7: 	movq	%r12, %rdi
    000018ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6378
    000018ef: 	callq	clock@PLT # Offset: 6383
    000018f4: 	movq	%r12, %rsi
    000018f7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018fe: 	movq	%rax, start_time(%rip)
    00001905: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6405
    0000190a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001911: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001918: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000191f: 	je	.Ltmp2576 # Offset: 6431
.Ltmp2686:
    00001925: 	movq	-0x20(%rax), %r13
    00001929: 	callq	clock@PLT # Offset: 6441
    0000192e: 	pxor	%xmm0, %xmm0
    00001932: 	movq	%rax, end_time(%rip)
    00001939: 	movq	%r13, %rdi
    0000193c: 	subq	start_time(%rip), %rax
    00001943: 	cvtsi2sd	%rax, %xmm0
    00001948: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001950: 	callq	_Z13record_resultdPKc # Offset: 6480
    00001955: 	movq	0x130(%rsp), %rdi
    0000195d: 	cmpq	0x48(%rsp), %rdi
    00001962: 	je	.Ltmp2577 # Offset: 6498
    00001964: 	movq	0x140(%rsp), %rax
    0000196c: 	leaq	0x1(%rax), %rsi
    00001970: 	callq	_ZdlPvm@PLT # Offset: 6512
.Ltmp2577:
    00001975: 	leaq	DATAat0x38351(%rip), %rdx
    0000197c: 	movq	%r15, %rsi
    0000197f: 	movq	%r12, %rdi
    00001982: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6530
    00001987: 	callq	clock@PLT # Offset: 6535
    0000198c: 	movq	%r12, %rsi
    0000198f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001996: 	movq	%rax, start_time(%rip)
    0000199d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6557
    000019a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019a9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019b7: 	je	.Ltmp2578 # Offset: 6583
.Ltmp2685:
    000019bd: 	movq	-0x20(%rax), %r13
    000019c1: 	callq	clock@PLT # Offset: 6593
    000019c6: 	pxor	%xmm0, %xmm0
    000019ca: 	movq	%rax, end_time(%rip)
    000019d1: 	movq	%r13, %rdi
    000019d4: 	subq	start_time(%rip), %rax
    000019db: 	cvtsi2sd	%rax, %xmm0
    000019e0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000019e8: 	callq	_Z13record_resultdPKc # Offset: 6632
    000019ed: 	movq	0x130(%rsp), %rdi
    000019f5: 	cmpq	0x48(%rsp), %rdi
    000019fa: 	je	.Ltmp2579 # Offset: 6650
    000019fc: 	movq	0x140(%rsp), %rax
    00001a04: 	leaq	0x1(%rax), %rsi
    00001a08: 	callq	_ZdlPvm@PLT # Offset: 6664
.Ltmp2579:
    00001a0d: 	leaq	DATAat0x38369(%rip), %rdx
    00001a14: 	movq	%r15, %rsi
    00001a17: 	movq	%r12, %rdi
    00001a1a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6682
    00001a1f: 	callq	clock@PLT # Offset: 6687
    00001a24: 	movq	%r12, %rsi
    00001a27: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a2e: 	movq	%rax, start_time(%rip)
    00001a35: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6709
    00001a3a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a41: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a48: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a4f: 	je	.Ltmp2580 # Offset: 6735
.Ltmp2684:
    00001a55: 	movq	-0x20(%rax), %r13
    00001a59: 	callq	clock@PLT # Offset: 6745
    00001a5e: 	pxor	%xmm0, %xmm0
    00001a62: 	movq	%rax, end_time(%rip)
    00001a69: 	movq	%r13, %rdi
    00001a6c: 	subq	start_time(%rip), %rax
    00001a73: 	cvtsi2sd	%rax, %xmm0
    00001a78: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a80: 	callq	_Z13record_resultdPKc # Offset: 6784
    00001a85: 	movq	0x130(%rsp), %rdi
    00001a8d: 	cmpq	0x48(%rsp), %rdi
    00001a92: 	je	.Ltmp2581 # Offset: 6802
    00001a94: 	movq	0x140(%rsp), %rax
    00001a9c: 	leaq	0x1(%rax), %rsi
    00001aa0: 	callq	_ZdlPvm@PLT # Offset: 6816
.Ltmp2581:
    00001aa5: 	leaq	DATAat0x38381(%rip), %rdx
    00001aac: 	movq	%r15, %rsi
    00001aaf: 	movq	%r12, %rdi
    00001ab2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6834
    00001ab7: 	callq	clock@PLT # Offset: 6839
    00001abc: 	movq	%r12, %rsi
    00001abf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ac6: 	movq	%rax, start_time(%rip)
    00001acd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6861
    00001ad2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ad9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ae0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ae7: 	je	.Ltmp2582 # Offset: 6887
.Ltmp2683:
    00001aed: 	movq	-0x20(%rax), %r13
    00001af1: 	callq	clock@PLT # Offset: 6897
    00001af6: 	pxor	%xmm0, %xmm0
    00001afa: 	movq	%rax, end_time(%rip)
    00001b01: 	movq	%r13, %rdi
    00001b04: 	subq	start_time(%rip), %rax
    00001b0b: 	cvtsi2sd	%rax, %xmm0
    00001b10: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b18: 	callq	_Z13record_resultdPKc # Offset: 6936
    00001b1d: 	movq	0x130(%rsp), %rdi
    00001b25: 	cmpq	0x48(%rsp), %rdi
    00001b2a: 	je	.Ltmp2583 # Offset: 6954
    00001b2c: 	movq	0x140(%rsp), %rax
    00001b34: 	leaq	0x1(%rax), %rsi
    00001b38: 	callq	_ZdlPvm@PLT # Offset: 6968
.Ltmp2583:
    00001b3d: 	leaq	0xf0(%rsp), %rdi
    00001b45: 	leaq	DATAat0x384a0(%rip), %rdx
    00001b4c: 	movq	%r15, %rsi
    00001b4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6991
    00001b54: 	movl	iterations(%rip), %esi
    00001b5a: 	movq	0xf0(%rsp), %rdi
    00001b62: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 7010
    00001b67: 	leaq	DATAat0x384c8(%rip), %rdx
    00001b6e: 	movq	%r15, %rsi
    00001b71: 	movq	%r12, %rdi
    00001b74: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7028
    00001b79: 	callq	clock@PLT # Offset: 7033
    00001b7e: 	movl	iterations(%rip), %ecx
    00001b84: 	movq	%rax, start_time(%rip)
    00001b8b: 	testl	%ecx, %ecx
    00001b8d: 	jle	.Ltmp2584 # Offset: 7053
    00001b93: 	movl	0x50(%rsp), %r14d
    00001b98: 	addl	0x74(%rsp), %r14d
    00001b9d: 	xorl	%r13d, %r13d
    00001ba0: 	addl	0x7c(%rsp), %r14d
    00001ba5: 	addl	0x78(%rsp), %r14d
    00001baa: 	movd	%r14d, %xmm5
    00001baf: 	pshufd	$0x0, %xmm5, %xmm4
    00001bb4: 	movaps	%xmm4, (%rsp)
    00001bb8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2587:
    00001bc0: 	movdqa	(%rsp), %xmm3
    00001bc5: 	movq	%rbp, %rax
    00001bc8: 	pxor	%xmm2, %xmm2
    00001bcc: 	psrlq	$0x20, %xmm3
    00001bd1: 	nopl	(%rax) # Size: 7
.Ltmp2585:
    00001bd8: 	movdqa	(%rax), %xmm0
    00001bdc: 	movdqa	(%rsp), %xmm1
    00001be1: 	pmuludq	(%rax), %xmm1
    00001be5: 	pshufd	$0x8, %xmm1, %xmm1
    00001bea: 	addq	$0x10, %rax
    00001bee: 	psrlq	$0x20, %xmm0
    00001bf3: 	pmuludq	%xmm3, %xmm0
    00001bf7: 	pshufd	$0x8, %xmm0, %xmm0
    00001bfc: 	punpckldq	%xmm0, %xmm1
    00001c00: 	paddd	%xmm1, %xmm2
    00001c04: 	cmpq	%rax, %rbx
    00001c07: 	jne	.Ltmp2585 # Offset: 7175
    00001c09: 	cvttsd2si	init_value(%rip), %edx
    00001c11: 	movdqa	%xmm2, %xmm0
    00001c15: 	psrldq	$0x8, %xmm0
    00001c1a: 	paddd	%xmm0, %xmm2
    00001c1e: 	movdqa	%xmm2, %xmm0
    00001c22: 	imull	%r14d, %edx
    00001c26: 	psrldq	$0x4, %xmm0
    00001c2b: 	paddd	%xmm0, %xmm2
    00001c2f: 	movd	%xmm2, %eax
    00001c33: 	imull	$0x1f40, %edx, %edx
    00001c39: 	cmpl	%eax, %edx
    00001c3b: 	je	.Ltmp2586 # Offset: 7227
    00001c3d: 	movl	current_test(%rip), %edx
    00001c43: 	leaq	DATAat0x381c8(%rip), %rsi
    00001c4a: 	movl	$0x1, %edi
    00001c4f: 	xorl	%eax, %eax
    00001c51: 	callq	__printf_chk@PLT # Offset: 7249
    00001c56: 	movl	iterations(%rip), %ecx
.Ltmp2586:
    00001c5c: 	addl	$0x1, %r13d
    00001c60: 	cmpl	%ecx, %r13d
    00001c63: 	jl	.Ltmp2587 # Offset: 7267
.Ltmp2584:
    00001c69: 	movq	%r12, %rsi
    00001c6c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c73: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7283
    00001c78: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c7f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c86: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c8d: 	je	.Ltmp2588 # Offset: 7309
.Ltmp2682:
    00001c93: 	movq	-0x20(%rax), %r13
    00001c97: 	callq	clock@PLT # Offset: 7319
    00001c9c: 	pxor	%xmm0, %xmm0
    00001ca0: 	movq	%rax, end_time(%rip)
    00001ca7: 	movq	%r13, %rdi
    00001caa: 	subq	start_time(%rip), %rax
    00001cb1: 	cvtsi2sd	%rax, %xmm0
    00001cb6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001cbe: 	callq	_Z13record_resultdPKc # Offset: 7358
    00001cc3: 	movq	0x130(%rsp), %rdi
    00001ccb: 	cmpq	0x48(%rsp), %rdi
    00001cd0: 	je	.Ltmp2589 # Offset: 7376
    00001cd2: 	movq	0x140(%rsp), %rax
    00001cda: 	leaq	0x1(%rax), %rsi
    00001cde: 	callq	_ZdlPvm@PLT # Offset: 7390
.Ltmp2589:
    00001ce3: 	leaq	DATAat0x384e8(%rip), %rdx
    00001cea: 	movq	%r15, %rsi
    00001ced: 	movq	%r12, %rdi
    00001cf0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7408
    00001cf5: 	callq	clock@PLT # Offset: 7413
    00001cfa: 	movl	iterations(%rip), %ecx
    00001d00: 	movq	%rax, start_time(%rip)
    00001d07: 	testl	%ecx, %ecx
    00001d09: 	jle	.Ltmp2590 # Offset: 7433
    00001d0f: 	movl	0x50(%rsp), %r14d
    00001d14: 	addl	0x74(%rsp), %r14d
    00001d19: 	xorl	%r13d, %r13d
    00001d1c: 	addl	0x7c(%rsp), %r14d
    00001d21: 	addl	0x78(%rsp), %r14d
    00001d26: 	movd	%r14d, %xmm5
    00001d2b: 	pshufd	$0x0, %xmm5, %xmm4
    00001d30: 	movaps	%xmm4, (%rsp)
    00001d34: 	nopl	(%rax) # Size: 4
.Ltmp2593:
    00001d38: 	movdqa	(%rsp), %xmm3
    00001d3d: 	movq	%rbp, %rax
    00001d40: 	pxor	%xmm2, %xmm2
    00001d44: 	psrlq	$0x20, %xmm3
    00001d49: 	nopl	(%rax) # Size: 7
.Ltmp2591:
    00001d50: 	movdqa	(%rax), %xmm0
    00001d54: 	movdqa	(%rsp), %xmm1
    00001d59: 	pmuludq	(%rax), %xmm1
    00001d5d: 	pshufd	$0x8, %xmm1, %xmm1
    00001d62: 	addq	$0x10, %rax
    00001d66: 	psrlq	$0x20, %xmm0
    00001d6b: 	pmuludq	%xmm3, %xmm0
    00001d6f: 	pshufd	$0x8, %xmm0, %xmm0
    00001d74: 	punpckldq	%xmm0, %xmm1
    00001d78: 	paddd	%xmm1, %xmm2
    00001d7c: 	cmpq	%rax, %rbx
    00001d7f: 	jne	.Ltmp2591 # Offset: 7551
    00001d81: 	cvttsd2si	init_value(%rip), %edx
    00001d89: 	movdqa	%xmm2, %xmm0
    00001d8d: 	psrldq	$0x8, %xmm0
    00001d92: 	paddd	%xmm0, %xmm2
    00001d96: 	movdqa	%xmm2, %xmm0
    00001d9a: 	imull	%r14d, %edx
    00001d9e: 	psrldq	$0x4, %xmm0
    00001da3: 	paddd	%xmm0, %xmm2
    00001da7: 	movd	%xmm2, %eax
    00001dab: 	imull	$0x1f40, %edx, %edx
    00001db1: 	cmpl	%eax, %edx
    00001db3: 	je	.Ltmp2592 # Offset: 7603
    00001db5: 	movl	current_test(%rip), %edx
    00001dbb: 	leaq	DATAat0x381c8(%rip), %rsi
    00001dc2: 	movl	$0x1, %edi
    00001dc7: 	xorl	%eax, %eax
    00001dc9: 	callq	__printf_chk@PLT # Offset: 7625
    00001dce: 	movl	iterations(%rip), %ecx
.Ltmp2592:
    00001dd4: 	addl	$0x1, %r13d
    00001dd8: 	cmpl	%ecx, %r13d
    00001ddb: 	jl	.Ltmp2593 # Offset: 7643
.Ltmp2590:
    00001de1: 	movq	%r12, %rsi
    00001de4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001deb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7659
    00001df0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001df7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001dfe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e05: 	je	.Ltmp2594 # Offset: 7685
.Ltmp2681:
    00001e0b: 	movq	-0x20(%rax), %r13
    00001e0f: 	callq	clock@PLT # Offset: 7695
    00001e14: 	pxor	%xmm0, %xmm0
    00001e18: 	movq	%rax, end_time(%rip)
    00001e1f: 	movq	%r13, %rdi
    00001e22: 	subq	start_time(%rip), %rax
    00001e29: 	cvtsi2sd	%rax, %xmm0
    00001e2e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001e36: 	callq	_Z13record_resultdPKc # Offset: 7734
    00001e3b: 	movq	0x130(%rsp), %rdi
    00001e43: 	cmpq	0x48(%rsp), %rdi
    00001e48: 	je	.Ltmp2595 # Offset: 7752
    00001e4a: 	movq	0x140(%rsp), %rax
    00001e52: 	leaq	0x1(%rax), %rsi
    00001e56: 	callq	_ZdlPvm@PLT # Offset: 7766
.Ltmp2595:
    00001e5b: 	leaq	DATAat0x38508(%rip), %rdx
    00001e62: 	movq	%r15, %rsi
    00001e65: 	movq	%r12, %rdi
    00001e68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7784
    00001e6d: 	callq	clock@PLT # Offset: 7789
    00001e72: 	movl	iterations(%rip), %ecx
    00001e78: 	movq	%rax, start_time(%rip)
    00001e7f: 	testl	%ecx, %ecx
    00001e81: 	jle	.Ltmp2596 # Offset: 7809
    00001e87: 	movl	0x50(%rsp), %r14d
    00001e8c: 	subl	0x74(%rsp), %r14d
    00001e91: 	xorl	%r13d, %r13d
    00001e94: 	addl	0x7c(%rsp), %r14d
    00001e99: 	subl	0x78(%rsp), %r14d
    00001e9e: 	movd	%r14d, %xmm5
    00001ea3: 	pshufd	$0x0, %xmm5, %xmm4
    00001ea8: 	movaps	%xmm4, (%rsp)
    00001eac: 	nopl	(%rax) # Size: 4
.Ltmp2599:
    00001eb0: 	movdqa	(%rsp), %xmm3
    00001eb5: 	movq	%rbp, %rax
    00001eb8: 	pxor	%xmm2, %xmm2
    00001ebc: 	psrlq	$0x20, %xmm3
    00001ec1: 	nopl	(%rax) # Size: 7
.Ltmp2597:
    00001ec8: 	movdqa	(%rax), %xmm0
    00001ecc: 	movdqa	(%rsp), %xmm1
    00001ed1: 	pmuludq	(%rax), %xmm1
    00001ed5: 	pshufd	$0x8, %xmm1, %xmm1
    00001eda: 	addq	$0x10, %rax
    00001ede: 	psrlq	$0x20, %xmm0
    00001ee3: 	pmuludq	%xmm3, %xmm0
    00001ee7: 	pshufd	$0x8, %xmm0, %xmm0
    00001eec: 	punpckldq	%xmm0, %xmm1
    00001ef0: 	paddd	%xmm1, %xmm2
    00001ef4: 	cmpq	%rax, %rbx
    00001ef7: 	jne	.Ltmp2597 # Offset: 7927
    00001ef9: 	cvttsd2si	init_value(%rip), %edx
    00001f01: 	movdqa	%xmm2, %xmm0
    00001f05: 	psrldq	$0x8, %xmm0
    00001f0a: 	paddd	%xmm0, %xmm2
    00001f0e: 	movdqa	%xmm2, %xmm0
    00001f12: 	imull	%r14d, %edx
    00001f16: 	psrldq	$0x4, %xmm0
    00001f1b: 	paddd	%xmm0, %xmm2
    00001f1f: 	movd	%xmm2, %eax
    00001f23: 	imull	$0x1f40, %edx, %edx
    00001f29: 	cmpl	%eax, %edx
    00001f2b: 	je	.Ltmp2598 # Offset: 7979
    00001f2d: 	movl	current_test(%rip), %edx
    00001f33: 	leaq	DATAat0x381c8(%rip), %rsi
    00001f3a: 	movl	$0x1, %edi
    00001f3f: 	xorl	%eax, %eax
    00001f41: 	callq	__printf_chk@PLT # Offset: 8001
    00001f46: 	movl	iterations(%rip), %ecx
.Ltmp2598:
    00001f4c: 	addl	$0x1, %r13d
    00001f50: 	cmpl	%ecx, %r13d
    00001f53: 	jl	.Ltmp2599 # Offset: 8019
.Ltmp2596:
    00001f59: 	movq	%r12, %rsi
    00001f5c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f63: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8035
    00001f68: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f6f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f7d: 	je	.Ltmp2600 # Offset: 8061
.Ltmp2680:
    00001f83: 	movq	-0x20(%rax), %r13
    00001f87: 	callq	clock@PLT # Offset: 8071
    00001f8c: 	pxor	%xmm0, %xmm0
    00001f90: 	movq	%rax, end_time(%rip)
    00001f97: 	movq	%r13, %rdi
    00001f9a: 	subq	start_time(%rip), %rax
    00001fa1: 	cvtsi2sd	%rax, %xmm0
    00001fa6: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001fae: 	callq	_Z13record_resultdPKc # Offset: 8110
    00001fb3: 	movq	0x130(%rsp), %rdi
    00001fbb: 	cmpq	0x48(%rsp), %rdi
    00001fc0: 	je	.Ltmp2601 # Offset: 8128
    00001fc2: 	movq	0x140(%rsp), %rax
    00001fca: 	leaq	0x1(%rax), %rsi
    00001fce: 	callq	_ZdlPvm@PLT # Offset: 8142
.Ltmp2601:
    00001fd3: 	leaq	DATAat0x3839a(%rip), %rdx
    00001fda: 	movq	%r15, %rsi
    00001fdd: 	movq	%r12, %rdi
    00001fe0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8160
    00001fe5: 	callq	clock@PLT # Offset: 8165
    00001fea: 	movl	iterations(%rip), %ecx
    00001ff0: 	movq	%rax, start_time(%rip)
    00001ff7: 	testl	%ecx, %ecx
    00001ff9: 	jle	.Ltmp2602 # Offset: 8185
    00001fff: 	movd	0x50(%rsp), %xmm5
    00002005: 	xorl	%r13d, %r13d
    00002008: 	leaq	DATAat0x381c8(%rip), %r14
    0000200f: 	pshufd	$0x0, %xmm5, %xmm4
    00002014: 	movd	0x74(%rsp), %xmm5
    0000201a: 	movaps	%xmm4, 0x30(%rsp)
    0000201f: 	pshufd	$0x0, %xmm5, %xmm4
    00002024: 	movd	0x7c(%rsp), %xmm5
    0000202a: 	movaps	%xmm4, (%rsp)
    0000202e: 	pshufd	$0x0, %xmm5, %xmm4
    00002033: 	movd	0x78(%rsp), %xmm5
    00002039: 	movaps	%xmm4, 0x10(%rsp)
    0000203e: 	pshufd	$0x0, %xmm5, %xmm4
    00002043: 	movaps	%xmm4, 0x20(%rsp)
    00002048: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2605:
    00002050: 	movdqa	(%rsp), %xmm7
    00002055: 	movdqa	0x30(%rsp), %xmm6
    0000205b: 	movq	%rbp, %rax
    0000205e: 	pxor	%xmm3, %xmm3
    00002062: 	movdqa	0x10(%rsp), %xmm5
    00002068: 	movdqa	0x20(%rsp), %xmm4
    0000206e: 	psrlq	$0x20, %xmm7
    00002073: 	psrlq	$0x20, %xmm6
    00002078: 	psrlq	$0x20, %xmm5
    0000207d: 	psrlq	$0x20, %xmm4
    00002082: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2603:
    00002088: 	movdqa	(%rax), %xmm1
    0000208c: 	movdqa	(%rsp), %xmm0
    00002091: 	movdqa	%xmm7, %xmm8
    00002096: 	movdqa	%xmm6, %xmm9
    0000209b: 	addq	$0x10, %rax
    0000209f: 	movdqa	%xmm1, %xmm2
    000020a3: 	pmuludq	%xmm1, %xmm0
    000020a7: 	psrlq	$0x20, %xmm2
    000020ac: 	pmuludq	%xmm2, %xmm8
    000020b1: 	pmuludq	%xmm2, %xmm9
    000020b6: 	pshufd	$0x8, %xmm0, %xmm0
    000020bb: 	pshufd	$0x8, %xmm8, %xmm8
    000020c1: 	pshufd	$0x8, %xmm9, %xmm9
    000020c7: 	punpckldq	%xmm8, %xmm0
    000020cc: 	movdqa	0x30(%rsp), %xmm8
    000020d3: 	pmuludq	%xmm1, %xmm8
    000020d8: 	pshufd	$0x8, %xmm8, %xmm8
    000020de: 	punpckldq	%xmm9, %xmm8
    000020e3: 	movdqa	%xmm5, %xmm9
    000020e8: 	paddd	%xmm8, %xmm0
    000020ed: 	movdqa	0x10(%rsp), %xmm8
    000020f4: 	pmuludq	%xmm2, %xmm9
    000020f9: 	pmuludq	%xmm4, %xmm2
    000020fd: 	pmuludq	%xmm1, %xmm8
    00002102: 	pmuludq	0x20(%rsp), %xmm1
    00002108: 	pshufd	$0x8, %xmm1, %xmm1
    0000210d: 	pshufd	$0x8, %xmm9, %xmm9
    00002113: 	pshufd	$0x8, %xmm2, %xmm2
    00002118: 	pshufd	$0x8, %xmm8, %xmm8
    0000211e: 	punpckldq	%xmm2, %xmm1
    00002122: 	punpckldq	%xmm9, %xmm8
    00002127: 	paddd	%xmm8, %xmm0
    0000212c: 	paddd	%xmm1, %xmm0
    00002130: 	paddd	%xmm0, %xmm3
    00002134: 	cmpq	%rax, %rbx
    00002137: 	jne	.Ltmp2603 # Offset: 8503
    0000213d: 	cvttsd2si	init_value(%rip), %eax
    00002145: 	movl	0x50(%rsp), %esi
    00002149: 	movdqa	%xmm3, %xmm0
    0000214d: 	movl	0x74(%rsp), %edx
    00002151: 	psrldq	$0x8, %xmm0
    00002156: 	paddd	%xmm0, %xmm3
    0000215a: 	movdqa	%xmm3, %xmm0
    0000215e: 	imull	%eax, %esi
    00002161: 	psrldq	$0x4, %xmm0
    00002166: 	imull	%eax, %edx
    00002169: 	paddd	%xmm0, %xmm3
    0000216d: 	addl	%esi, %edx
    0000216f: 	leal	(%rsi,%rax,2), %esi
    00002172: 	imull	0x78(%rsp), %eax
    00002177: 	addl	%esi, %edx
    00002179: 	addl	%eax, %edx
    0000217b: 	movd	%xmm3, %eax
    0000217f: 	imull	$0x1f40, %edx, %edx
    00002185: 	cmpl	%eax, %edx
    00002187: 	je	.Ltmp2604 # Offset: 8583
    00002189: 	movl	current_test(%rip), %edx
    0000218f: 	movq	%r14, %rsi
    00002192: 	movl	$0x1, %edi
    00002197: 	xorl	%eax, %eax
    00002199: 	callq	__printf_chk@PLT # Offset: 8601
    0000219e: 	movl	iterations(%rip), %ecx
.Ltmp2604:
    000021a4: 	addl	$0x1, %r13d
    000021a8: 	cmpl	%ecx, %r13d
    000021ab: 	jl	.Ltmp2605 # Offset: 8619
.Ltmp2602:
    000021b1: 	movq	%r12, %rsi
    000021b4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021bb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8635
    000021c0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021c7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021ce: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021d5: 	je	.Ltmp2606 # Offset: 8661
.Ltmp2679:
    000021db: 	movq	-0x20(%rax), %r13
    000021df: 	callq	clock@PLT # Offset: 8671
    000021e4: 	pxor	%xmm0, %xmm0
    000021e8: 	movq	%rax, end_time(%rip)
    000021ef: 	movq	%r13, %rdi
    000021f2: 	subq	start_time(%rip), %rax
    000021f9: 	cvtsi2sd	%rax, %xmm0
    000021fe: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002206: 	callq	_Z13record_resultdPKc # Offset: 8710
    0000220b: 	movq	0x130(%rsp), %rdi
    00002213: 	cmpq	0x48(%rsp), %rdi
    00002218: 	je	.Ltmp2607 # Offset: 8728
    0000221a: 	movq	0x140(%rsp), %rax
    00002222: 	leaq	0x1(%rax), %rsi
    00002226: 	callq	_ZdlPvm@PLT # Offset: 8742
.Ltmp2607:
    0000222b: 	leaq	DATAat0x383b1(%rip), %rdx
    00002232: 	movq	%r15, %rsi
    00002235: 	movq	%r12, %rdi
    00002238: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8760
    0000223d: 	callq	clock@PLT # Offset: 8765
    00002242: 	movl	iterations(%rip), %ecx
    00002248: 	movq	%rax, start_time(%rip)
    0000224f: 	testl	%ecx, %ecx
    00002251: 	jle	.Ltmp2608 # Offset: 8785
    00002257: 	movd	0x50(%rsp), %xmm5
    0000225d: 	xorl	%r13d, %r13d
    00002260: 	leaq	DATAat0x381c8(%rip), %r14
    00002267: 	pshufd	$0x0, %xmm5, %xmm4
    0000226c: 	movd	0x74(%rsp), %xmm5
    00002272: 	movaps	%xmm4, 0x30(%rsp)
    00002277: 	pshufd	$0x0, %xmm5, %xmm4
    0000227c: 	movd	0x7c(%rsp), %xmm5
    00002282: 	movaps	%xmm4, (%rsp)
    00002286: 	pshufd	$0x0, %xmm5, %xmm4
    0000228b: 	movd	0x78(%rsp), %xmm5
    00002291: 	movaps	%xmm4, 0x10(%rsp)
    00002296: 	pshufd	$0x0, %xmm5, %xmm4
    0000229b: 	movaps	%xmm4, 0x20(%rsp)
.Ltmp2611:
    000022a0: 	movdqa	(%rsp), %xmm7
    000022a5: 	movdqa	0x30(%rsp), %xmm6
    000022ab: 	movq	%rbp, %rax
    000022ae: 	pxor	%xmm3, %xmm3
    000022b2: 	movdqa	0x10(%rsp), %xmm5
    000022b8: 	movdqa	0x20(%rsp), %xmm4
    000022be: 	psrlq	$0x20, %xmm7
    000022c3: 	psrlq	$0x20, %xmm6
    000022c8: 	psrlq	$0x20, %xmm5
    000022cd: 	psrlq	$0x20, %xmm4
    000022d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2609:
    000022d8: 	movdqa	(%rax), %xmm1
    000022dc: 	movdqa	(%rsp), %xmm0
    000022e1: 	movdqa	%xmm7, %xmm8
    000022e6: 	movdqa	%xmm6, %xmm9
    000022eb: 	addq	$0x10, %rax
    000022ef: 	movdqa	%xmm1, %xmm2
    000022f3: 	pmuludq	%xmm1, %xmm0
    000022f7: 	psrlq	$0x20, %xmm2
    000022fc: 	pmuludq	%xmm2, %xmm8
    00002301: 	pmuludq	%xmm2, %xmm9
    00002306: 	pshufd	$0x8, %xmm0, %xmm0
    0000230b: 	pshufd	$0x8, %xmm8, %xmm8
    00002311: 	pshufd	$0x8, %xmm9, %xmm9
    00002317: 	punpckldq	%xmm8, %xmm0
    0000231c: 	movdqa	0x30(%rsp), %xmm8
    00002323: 	pmuludq	%xmm1, %xmm8
    00002328: 	pshufd	$0x8, %xmm8, %xmm8
    0000232e: 	punpckldq	%xmm9, %xmm8
    00002333: 	movdqa	%xmm5, %xmm9
    00002338: 	paddd	%xmm8, %xmm0
    0000233d: 	movdqa	0x10(%rsp), %xmm8
    00002344: 	pmuludq	%xmm2, %xmm9
    00002349: 	pmuludq	%xmm4, %xmm2
    0000234d: 	pmuludq	%xmm1, %xmm8
    00002352: 	pmuludq	0x20(%rsp), %xmm1
    00002358: 	pshufd	$0x8, %xmm1, %xmm1
    0000235d: 	pshufd	$0x8, %xmm9, %xmm9
    00002363: 	pshufd	$0x8, %xmm2, %xmm2
    00002368: 	pshufd	$0x8, %xmm8, %xmm8
    0000236e: 	punpckldq	%xmm2, %xmm1
    00002372: 	punpckldq	%xmm9, %xmm8
    00002377: 	paddd	%xmm8, %xmm0
    0000237c: 	paddd	%xmm1, %xmm0
    00002380: 	paddd	%xmm0, %xmm3
    00002384: 	cmpq	%rax, %rbx
    00002387: 	jne	.Ltmp2609 # Offset: 9095
    0000238d: 	cvttsd2si	init_value(%rip), %eax
    00002395: 	movl	0x50(%rsp), %esi
    00002399: 	movdqa	%xmm3, %xmm0
    0000239d: 	movl	0x74(%rsp), %edx
    000023a1: 	psrldq	$0x8, %xmm0
    000023a6: 	paddd	%xmm0, %xmm3
    000023aa: 	movdqa	%xmm3, %xmm0
    000023ae: 	imull	%eax, %esi
    000023b1: 	psrldq	$0x4, %xmm0
    000023b6: 	imull	%eax, %edx
    000023b9: 	paddd	%xmm0, %xmm3
    000023bd: 	addl	%esi, %edx
    000023bf: 	leal	(%rsi,%rax,2), %esi
    000023c2: 	imull	0x78(%rsp), %eax
    000023c7: 	addl	%esi, %edx
    000023c9: 	addl	%eax, %edx
    000023cb: 	movd	%xmm3, %eax
    000023cf: 	imull	$0x1f40, %edx, %edx
    000023d5: 	cmpl	%eax, %edx
    000023d7: 	je	.Ltmp2610 # Offset: 9175
    000023d9: 	movl	current_test(%rip), %edx
    000023df: 	movq	%r14, %rsi
    000023e2: 	movl	$0x1, %edi
    000023e7: 	xorl	%eax, %eax
    000023e9: 	callq	__printf_chk@PLT # Offset: 9193
    000023ee: 	movl	iterations(%rip), %ecx
.Ltmp2610:
    000023f4: 	addl	$0x1, %r13d
    000023f8: 	cmpl	%ecx, %r13d
    000023fb: 	jl	.Ltmp2611 # Offset: 9211
.Ltmp2608:
    00002401: 	movq	%r12, %rsi
    00002404: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000240b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9227
    00002410: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002417: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000241e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002425: 	je	.Ltmp2612 # Offset: 9253
.Ltmp2678:
    0000242b: 	movq	-0x20(%rax), %r13
    0000242f: 	callq	clock@PLT # Offset: 9263
    00002434: 	pxor	%xmm0, %xmm0
    00002438: 	movq	%rax, end_time(%rip)
    0000243f: 	movq	%r13, %rdi
    00002442: 	subq	start_time(%rip), %rax
    00002449: 	cvtsi2sd	%rax, %xmm0
    0000244e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002456: 	callq	_Z13record_resultdPKc # Offset: 9302
    0000245b: 	movq	0x130(%rsp), %rdi
    00002463: 	cmpq	0x48(%rsp), %rdi
    00002468: 	je	.Ltmp2613 # Offset: 9320
    0000246a: 	movq	0x140(%rsp), %rax
    00002472: 	leaq	0x1(%rax), %rsi
    00002476: 	callq	_ZdlPvm@PLT # Offset: 9334
.Ltmp2613:
    0000247b: 	leaq	DATAat0x383c9(%rip), %rdx
    00002482: 	movq	%r15, %rsi
    00002485: 	movq	%r12, %rdi
    00002488: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9352
    0000248d: 	callq	clock@PLT # Offset: 9357
    00002492: 	movl	iterations(%rip), %ecx
    00002498: 	movq	%rax, start_time(%rip)
    0000249f: 	testl	%ecx, %ecx
    000024a1: 	jle	.Ltmp2614 # Offset: 9377
    000024a7: 	movd	0x50(%rsp), %xmm5
    000024ad: 	xorl	%r13d, %r13d
    000024b0: 	leaq	DATAat0x381c8(%rip), %r14
    000024b7: 	pshufd	$0x0, %xmm5, %xmm4
    000024bc: 	movd	0x74(%rsp), %xmm5
    000024c2: 	movaps	%xmm4, 0x30(%rsp)
    000024c7: 	pshufd	$0x0, %xmm5, %xmm4
    000024cc: 	movd	0x7c(%rsp), %xmm5
    000024d2: 	movaps	%xmm4, (%rsp)
    000024d6: 	pshufd	$0x0, %xmm5, %xmm4
    000024db: 	movd	0x78(%rsp), %xmm5
    000024e1: 	movaps	%xmm4, 0x10(%rsp)
    000024e6: 	pshufd	$0x0, %xmm5, %xmm4
    000024eb: 	movaps	%xmm4, 0x20(%rsp)
.Ltmp2617:
    000024f0: 	movdqa	0x30(%rsp), %xmm7
    000024f6: 	movdqa	(%rsp), %xmm6
    000024fb: 	movq	%rbp, %rax
    000024fe: 	pxor	%xmm3, %xmm3
    00002502: 	movdqa	0x10(%rsp), %xmm5
    00002508: 	movdqa	0x20(%rsp), %xmm4
    0000250e: 	psrlq	$0x20, %xmm7
    00002513: 	psrlq	$0x20, %xmm6
    00002518: 	psrlq	$0x20, %xmm5
    0000251d: 	psrlq	$0x20, %xmm4
    00002522: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2615:
    00002528: 	movdqa	(%rax), %xmm1
    0000252c: 	movdqa	0x30(%rsp), %xmm0
    00002532: 	movdqa	%xmm7, %xmm8
    00002537: 	movdqa	%xmm6, %xmm9
    0000253c: 	addq	$0x10, %rax
    00002540: 	movdqa	%xmm1, %xmm2
    00002544: 	pmuludq	%xmm1, %xmm0
    00002548: 	psrlq	$0x20, %xmm2
    0000254d: 	pmuludq	%xmm2, %xmm8
    00002552: 	pmuludq	%xmm2, %xmm9
    00002557: 	pshufd	$0x8, %xmm0, %xmm0
    0000255c: 	pshufd	$0x8, %xmm8, %xmm8
    00002562: 	pshufd	$0x8, %xmm9, %xmm9
    00002568: 	punpckldq	%xmm8, %xmm0
    0000256d: 	movdqa	(%rsp), %xmm8
    00002573: 	pmuludq	%xmm1, %xmm8
    00002578: 	pshufd	$0x8, %xmm8, %xmm8
    0000257e: 	punpckldq	%xmm9, %xmm8
    00002583: 	movdqa	%xmm5, %xmm9
    00002588: 	psubd	%xmm8, %xmm0
    0000258d: 	movdqa	0x10(%rsp), %xmm8
    00002594: 	pmuludq	%xmm2, %xmm9
    00002599: 	pmuludq	%xmm4, %xmm2
    0000259d: 	pmuludq	%xmm1, %xmm8
    000025a2: 	pmuludq	0x20(%rsp), %xmm1
    000025a8: 	pshufd	$0x8, %xmm1, %xmm1
    000025ad: 	pshufd	$0x8, %xmm9, %xmm9
    000025b3: 	pshufd	$0x8, %xmm2, %xmm2
    000025b8: 	pshufd	$0x8, %xmm8, %xmm8
    000025be: 	punpckldq	%xmm2, %xmm1
    000025c2: 	punpckldq	%xmm9, %xmm8
    000025c7: 	paddd	%xmm8, %xmm0
    000025cc: 	psubd	%xmm1, %xmm0
    000025d0: 	paddd	%xmm0, %xmm3
    000025d4: 	cmpq	%rax, %rbx
    000025d7: 	jne	.Ltmp2615 # Offset: 9687
    000025dd: 	cvttsd2si	init_value(%rip), %eax
    000025e5: 	movl	0x50(%rsp), %esi
    000025e9: 	movdqa	%xmm3, %xmm0
    000025ed: 	movl	0x74(%rsp), %edi
    000025f1: 	psrldq	$0x8, %xmm0
    000025f6: 	paddd	%xmm0, %xmm3
    000025fa: 	movdqa	%xmm3, %xmm0
    000025fe: 	imull	%eax, %esi
    00002601: 	psrldq	$0x4, %xmm0
    00002606: 	imull	%eax, %edi
    00002609: 	paddd	%xmm0, %xmm3
    0000260d: 	movl	%esi, %edx
    0000260f: 	leal	(%rsi,%rax,2), %esi
    00002612: 	imull	0x78(%rsp), %eax
    00002617: 	subl	%edi, %edx
    00002619: 	addl	%esi, %edx
    0000261b: 	subl	%eax, %edx
    0000261d: 	movd	%xmm3, %eax
    00002621: 	imull	$0x1f40, %edx, %edx
    00002627: 	cmpl	%eax, %edx
    00002629: 	je	.Ltmp2616 # Offset: 9769
    0000262b: 	movl	current_test(%rip), %edx
    00002631: 	movq	%r14, %rsi
    00002634: 	movl	$0x1, %edi
    00002639: 	xorl	%eax, %eax
    0000263b: 	callq	__printf_chk@PLT # Offset: 9787
    00002640: 	movl	iterations(%rip), %ecx
.Ltmp2616:
    00002646: 	addl	$0x1, %r13d
    0000264a: 	cmpl	%ecx, %r13d
    0000264d: 	jl	.Ltmp2617 # Offset: 9805
.Ltmp2614:
    00002653: 	movq	%r12, %rsi
    00002656: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000265d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9821
    00002662: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002669: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002670: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002677: 	je	.Ltmp2618 # Offset: 9847
.Ltmp2677:
    0000267d: 	movq	-0x20(%rax), %r13
    00002681: 	callq	clock@PLT # Offset: 9857
    00002686: 	pxor	%xmm0, %xmm0
    0000268a: 	movq	%rax, end_time(%rip)
    00002691: 	movq	%r13, %rdi
    00002694: 	subq	start_time(%rip), %rax
    0000269b: 	cvtsi2sd	%rax, %xmm0
    000026a0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000026a8: 	callq	_Z13record_resultdPKc # Offset: 9896
    000026ad: 	movq	0x130(%rsp), %rdi
    000026b5: 	cmpq	0x48(%rsp), %rdi
    000026ba: 	je	.Ltmp2619 # Offset: 9914
    000026bc: 	movq	0x140(%rsp), %rax
    000026c4: 	leaq	0x1(%rax), %rsi
    000026c8: 	callq	_ZdlPvm@PLT # Offset: 9928
.Ltmp2619:
    000026cd: 	leaq	DATAat0x38528(%rip), %rdx
    000026d4: 	movq	%r15, %rsi
    000026d7: 	movq	%r12, %rdi
    000026da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9946
    000026df: 	callq	clock@PLT # Offset: 9951
    000026e4: 	movl	iterations(%rip), %ecx
    000026ea: 	movq	%rax, start_time(%rip)
    000026f1: 	testl	%ecx, %ecx
    000026f3: 	jle	.Ltmp2620 # Offset: 9971
    000026f9: 	movd	0x50(%rsp), %xmm5
    000026ff: 	movl	0x74(%rsp), %r14d
    00002704: 	xorl	%r13d, %r13d
    00002707: 	addl	0x7c(%rsp), %r14d
    0000270c: 	addl	0x78(%rsp), %r14d
    00002711: 	pshufd	$0x0, %xmm5, %xmm4
    00002716: 	movd	%r14d, %xmm5
    0000271b: 	movaps	%xmm4, 0x30(%rsp)
    00002720: 	pshufd	$0x0, %xmm5, %xmm4
    00002725: 	movaps	%xmm4, (%rsp)
    00002729: 	nopl	(%rax) # Size: 7
.Ltmp2623:
    00002730: 	movdqa	(%rsp), %xmm3
    00002735: 	movq	%rbp, %rax
    00002738: 	pxor	%xmm2, %xmm2
    0000273c: 	psrlq	$0x20, %xmm3
    00002741: 	nopl	(%rax) # Size: 7
.Ltmp2621:
    00002748: 	movdqa	0x30(%rsp), %xmm0
    0000274e: 	movdqa	(%rsp), %xmm1
    00002753: 	addq	$0x10, %rax
    00002757: 	paddd	-0x10(%rax), %xmm0
    0000275c: 	pmuludq	%xmm0, %xmm1
    00002760: 	psrlq	$0x20, %xmm0
    00002765: 	pmuludq	%xmm3, %xmm0
    00002769: 	pshufd	$0x8, %xmm1, %xmm1
    0000276e: 	pshufd	$0x8, %xmm0, %xmm0
    00002773: 	punpckldq	%xmm0, %xmm1
    00002777: 	paddd	%xmm1, %xmm2
    0000277b: 	cmpq	%rax, %rbx
    0000277e: 	jne	.Ltmp2621 # Offset: 10110
    00002780: 	movdqa	%xmm2, %xmm0
    00002784: 	cvttsd2si	init_value(%rip), %edx
    0000278c: 	addl	0x50(%rsp), %edx
    00002790: 	psrldq	$0x8, %xmm0
    00002795: 	imull	%r14d, %edx
    00002799: 	paddd	%xmm0, %xmm2
    0000279d: 	movdqa	%xmm2, %xmm0
    000027a1: 	psrldq	$0x4, %xmm0
    000027a6: 	imull	$0x1f40, %edx, %edx
    000027ac: 	paddd	%xmm0, %xmm2
    000027b0: 	movd	%xmm2, %eax
    000027b4: 	cmpl	%eax, %edx
    000027b6: 	je	.Ltmp2622 # Offset: 10166
    000027b8: 	movl	current_test(%rip), %edx
    000027be: 	leaq	DATAat0x381c8(%rip), %rsi
    000027c5: 	movl	$0x1, %edi
    000027ca: 	xorl	%eax, %eax
    000027cc: 	callq	__printf_chk@PLT # Offset: 10188
    000027d1: 	movl	iterations(%rip), %ecx
.Ltmp2622:
    000027d7: 	addl	$0x1, %r13d
    000027db: 	cmpl	%ecx, %r13d
    000027de: 	jl	.Ltmp2623 # Offset: 10206
.Ltmp2620:
    000027e4: 	movq	%r12, %rsi
    000027e7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000027ee: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10222
    000027f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027fa: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002801: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002808: 	je	.Ltmp2624 # Offset: 10248
.Ltmp2676:
    0000280e: 	movq	-0x20(%rax), %r13
    00002812: 	callq	clock@PLT # Offset: 10258
    00002817: 	pxor	%xmm0, %xmm0
    0000281b: 	movq	%rax, end_time(%rip)
    00002822: 	movq	%r13, %rdi
    00002825: 	subq	start_time(%rip), %rax
    0000282c: 	cvtsi2sd	%rax, %xmm0
    00002831: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002839: 	callq	_Z13record_resultdPKc # Offset: 10297
    0000283e: 	movq	0x130(%rsp), %rdi
    00002846: 	cmpq	0x48(%rsp), %rdi
    0000284b: 	je	.Ltmp2625 # Offset: 10315
    0000284d: 	movq	0x140(%rsp), %rax
    00002855: 	leaq	0x1(%rax), %rsi
    00002859: 	callq	_ZdlPvm@PLT # Offset: 10329
.Ltmp2625:
    0000285e: 	leaq	DATAat0x383e1(%rip), %rdx
    00002865: 	movq	%r15, %rsi
    00002868: 	movq	%r12, %rdi
    0000286b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10347
    00002870: 	callq	clock@PLT # Offset: 10352
    00002875: 	movl	iterations(%rip), %ecx
    0000287b: 	movq	%rax, start_time(%rip)
    00002882: 	testl	%ecx, %ecx
    00002884: 	jle	.Ltmp2626 # Offset: 10372
    0000288a: 	movl	0x50(%rsp), %esi
    0000288e: 	movl	0x74(%rsp), %edx
    00002892: 	xorl	%r13d, %r13d
    00002895: 	movl	0x7c(%rsp), %r8d
    0000289a: 	movl	0x78(%rsp), %r9d
    0000289f: 	movl	%esi, %edi
    000028a1: 	movl	%esi, %eax
    000028a3: 	movd	%edx, %xmm5
    000028a7: 	imull	%edx, %edi
    000028aa: 	pshufd	$0x0, %xmm5, %xmm4
    000028af: 	movd	%r8d, %xmm5
    000028b4: 	imull	%r8d, %eax
    000028b8: 	movaps	%xmm4, (%rsp)
    000028bc: 	pshufd	$0x0, %xmm5, %xmm4
    000028c1: 	movd	%r9d, %xmm5
    000028c6: 	imull	%r9d, %esi
    000028ca: 	movaps	%xmm4, 0x10(%rsp)
    000028cf: 	pshufd	$0x0, %xmm5, %xmm4
    000028d4: 	movd	%edi, %xmm5
    000028d8: 	movaps	%xmm4, 0x20(%rsp)
    000028dd: 	pshufd	$0x0, %xmm5, %xmm4
    000028e2: 	movd	%eax, %xmm5
    000028e6: 	movl	%edi, 0x80(%rsp)
    000028ed: 	movaps	%xmm4, 0x30(%rsp)
    000028f2: 	pshufd	$0x0, %xmm5, %xmm4
    000028f7: 	movd	%esi, %xmm5
    000028fb: 	movl	%esi, %r14d
    000028fe: 	movl	%eax, 0x84(%rsp)
    00002905: 	movaps	%xmm4, 0x50(%rsp)
    0000290a: 	pshufd	$0x0, %xmm5, %xmm4
    0000290f: 	movaps	%xmm4, 0x60(%rsp)
    00002914: 	nopl	(%rax) # Size: 4
.Ltmp2629:
    00002918: 	movdqa	0x10(%rsp), %xmm5
    0000291e: 	movdqa	(%rsp), %xmm4
    00002923: 	movq	%rbp, %rax
    00002926: 	pxor	%xmm2, %xmm2
    0000292a: 	movdqa	0x20(%rsp), %xmm3
    00002930: 	psrlq	$0x20, %xmm5
    00002935: 	psrlq	$0x20, %xmm4
    0000293a: 	psrlq	$0x20, %xmm3
    0000293f: 	nop # Size: 1
.Ltmp2627:
    00002940: 	movdqa	(%rax), %xmm1
    00002944: 	movdqa	0x10(%rsp), %xmm0
    0000294a: 	movdqa	%xmm5, %xmm7
    0000294e: 	movdqa	%xmm4, %xmm8
    00002953: 	addq	$0x10, %rax
    00002957: 	movdqa	%xmm1, %xmm6
    0000295b: 	pmuludq	%xmm1, %xmm0
    0000295f: 	psrlq	$0x20, %xmm6
    00002964: 	pmuludq	%xmm6, %xmm7
    00002968: 	pmuludq	%xmm6, %xmm8
    0000296d: 	pmuludq	%xmm3, %xmm6
    00002971: 	pshufd	$0x8, %xmm0, %xmm0
    00002976: 	pshufd	$0x8, %xmm7, %xmm7
    0000297b: 	pshufd	$0x8, %xmm8, %xmm8
    00002981: 	punpckldq	%xmm7, %xmm0
    00002985: 	movdqa	(%rsp), %xmm7
    0000298a: 	pshufd	$0x8, %xmm6, %xmm6
    0000298f: 	pmuludq	%xmm1, %xmm7
    00002993: 	pmuludq	0x20(%rsp), %xmm1
    00002999: 	pshufd	$0x8, %xmm1, %xmm1
    0000299e: 	punpckldq	%xmm6, %xmm1
    000029a2: 	pshufd	$0x8, %xmm7, %xmm7
    000029a7: 	punpckldq	%xmm8, %xmm7
    000029ac: 	paddd	%xmm7, %xmm0
    000029b0: 	paddd	%xmm1, %xmm0
    000029b4: 	paddd	0x30(%rsp), %xmm0
    000029ba: 	paddd	0x50(%rsp), %xmm0
    000029c0: 	paddd	0x60(%rsp), %xmm0
    000029c6: 	paddd	%xmm0, %xmm2
    000029ca: 	cmpq	%rax, %rbx
    000029cd: 	jne	.Ltmp2627 # Offset: 10701
    000029d3: 	movl	0x7c(%rsp), %edi
    000029d7: 	movl	0x74(%rsp), %esi
    000029db: 	movdqa	%xmm2, %xmm0
    000029df: 	cvttsd2si	init_value(%rip), %eax
    000029e7: 	psrldq	$0x8, %xmm0
    000029ec: 	leal	(%rdi,%rsi), %edx
    000029ef: 	movl	0x78(%rsp), %edi
    000029f3: 	paddd	%xmm0, %xmm2
    000029f7: 	movdqa	%xmm2, %xmm0
    000029fb: 	addl	%edi, %edx
    000029fd: 	psrldq	$0x4, %xmm0
    00002a02: 	imull	%eax, %edx
    00002a05: 	addl	0x80(%rsp), %edx
    00002a0c: 	paddd	%xmm0, %xmm2
    00002a10: 	addl	0x84(%rsp), %edx
    00002a17: 	addl	%r14d, %edx
    00002a1a: 	movd	%xmm2, %eax
    00002a1e: 	imull	$0x1f40, %edx, %edx
    00002a24: 	cmpl	%eax, %edx
    00002a26: 	je	.Ltmp2628 # Offset: 10790
    00002a28: 	movl	current_test(%rip), %edx
    00002a2e: 	leaq	DATAat0x381c8(%rip), %rsi
    00002a35: 	movl	$0x1, %edi
    00002a3a: 	xorl	%eax, %eax
    00002a3c: 	callq	__printf_chk@PLT # Offset: 10812
    00002a41: 	movl	iterations(%rip), %ecx
.Ltmp2628:
    00002a47: 	addl	$0x1, %r13d
    00002a4b: 	cmpl	%ecx, %r13d
    00002a4e: 	jl	.Ltmp2629 # Offset: 10830
.Ltmp2626:
    00002a54: 	movq	%r12, %rsi
    00002a57: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a5e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10846
    00002a63: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a6a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a71: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a78: 	je	.Ltmp2630 # Offset: 10872
.Ltmp2675:
    00002a7e: 	movq	-0x20(%rax), %r13
    00002a82: 	callq	clock@PLT # Offset: 10882
    00002a87: 	pxor	%xmm0, %xmm0
    00002a8b: 	movq	%rax, end_time(%rip)
    00002a92: 	movq	%r13, %rdi
    00002a95: 	subq	start_time(%rip), %rax
    00002a9c: 	cvtsi2sd	%rax, %xmm0
    00002aa1: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002aa9: 	callq	_Z13record_resultdPKc # Offset: 10921
    00002aae: 	movq	0x130(%rsp), %rdi
    00002ab6: 	cmpq	0x48(%rsp), %rdi
    00002abb: 	je	.Ltmp2631 # Offset: 10939
    00002abd: 	movq	0x140(%rsp), %rax
    00002ac5: 	leaq	0x1(%rax), %rsi
    00002ac9: 	callq	_ZdlPvm@PLT # Offset: 10953
.Ltmp2631:
    00002ace: 	leaq	0x110(%rsp), %rdi
    00002ad6: 	leaq	DATAat0x3839a(%rip), %rdx
    00002add: 	movq	%r15, %rsi
    00002ae0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10976
    00002ae5: 	movl	iterations(%rip), %esi
    00002aeb: 	movq	0x110(%rsp), %rdi
    00002af3: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10995
    00002af8: 	leaq	DATAat0x383fa(%rip), %rdx
    00002aff: 	movq	%r15, %rsi
    00002b02: 	movq	%r12, %rdi
    00002b05: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11013
    00002b0a: 	movq	%r12, %rdx
    00002b0d: 	movl	$0x1f40, %esi
    00002b12: 	movq	%rbp, %rdi
    00002b15: 	callq	_Z10test_2termIi20custom_2term_add_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11029
    00002b1a: 	movq	0x130(%rsp), %rdi
    00002b22: 	cmpq	0x48(%rsp), %rdi
    00002b27: 	je	.Ltmp2632 # Offset: 11047
    00002b29: 	movq	0x140(%rsp), %rax
    00002b31: 	leaq	0x1(%rax), %rsi
    00002b35: 	callq	_ZdlPvm@PLT # Offset: 11061
.Ltmp2632:
    00002b3a: 	leaq	DATAat0x38409(%rip), %rdx
    00002b41: 	movq	%r15, %rsi
    00002b44: 	movq	%r12, %rdi
    00002b47: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11079
    00002b4c: 	movq	%r12, %rdx
    00002b4f: 	movl	$0x1f40, %esi
    00002b54: 	movq	%rbp, %rdi
    00002b57: 	callq	_Z10test_2termIi16custom_2term_addIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11095
    00002b5c: 	movq	0x130(%rsp), %rdi
    00002b64: 	cmpq	0x48(%rsp), %rdi
    00002b69: 	je	.Ltmp2633 # Offset: 11113
    00002b6b: 	movq	0x140(%rsp), %rax
    00002b73: 	leaq	0x1(%rax), %rsi
    00002b77: 	callq	_ZdlPvm@PLT # Offset: 11127
.Ltmp2633:
    00002b7c: 	leaq	DATAat0x38414(%rip), %rdx
    00002b83: 	movq	%r15, %rsi
    00002b86: 	movq	%r12, %rdi
    00002b89: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11145
    00002b8e: 	movq	%r12, %rdx
    00002b91: 	movl	$0x1f40, %esi
    00002b96: 	movq	%rbp, %rdi
    00002b99: 	callq	_Z10test_2termIi20custom_2term_sub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11161
    00002b9e: 	movq	0x130(%rsp), %rdi
    00002ba6: 	cmpq	0x48(%rsp), %rdi
    00002bab: 	je	.Ltmp2634 # Offset: 11179
    00002bad: 	movq	0x140(%rsp), %rax
    00002bb5: 	leaq	0x1(%rax), %rsi
    00002bb9: 	callq	_ZdlPvm@PLT # Offset: 11193
.Ltmp2634:
    00002bbe: 	leaq	DATAat0x38423(%rip), %rdx
    00002bc5: 	movq	%r15, %rsi
    00002bc8: 	movq	%r12, %rdi
    00002bcb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11211
    00002bd0: 	movq	%r12, %rdx
    00002bd3: 	movl	$0x1f40, %esi
    00002bd8: 	movq	%rbp, %rdi
    00002bdb: 	callq	_Z10test_2termIi16custom_2term_subIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11227
    00002be0: 	movq	0x130(%rsp), %rdi
    00002be8: 	cmpq	0x48(%rsp), %rdi
    00002bed: 	je	.Ltmp2635 # Offset: 11245
    00002bef: 	movq	0x140(%rsp), %rax
    00002bf7: 	leaq	0x1(%rax), %rsi
    00002bfb: 	callq	_ZdlPvm@PLT # Offset: 11259
.Ltmp2635:
    00002c00: 	leaq	DATAat0x3842e(%rip), %rdx
    00002c07: 	movq	%r15, %rsi
    00002c0a: 	movq	%r12, %rdi
    00002c0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11277
    00002c12: 	movq	%r12, %rdx
    00002c15: 	movl	$0x1f40, %esi
    00002c1a: 	movq	%rbp, %rdi
    00002c1d: 	callq	_Z10test_2termIi23custom_2term_addsub_optIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11293
    00002c22: 	movq	0x130(%rsp), %rdi
    00002c2a: 	cmpq	0x48(%rsp), %rdi
    00002c2f: 	je	.Ltmp2636 # Offset: 11311
    00002c31: 	movq	0x140(%rsp), %rax
    00002c39: 	leaq	0x1(%rax), %rsi
    00002c3d: 	callq	_ZdlPvm@PLT # Offset: 11325
.Ltmp2636:
    00002c42: 	leaq	DATAat0x38440(%rip), %rdx
    00002c49: 	movq	%r15, %rsi
    00002c4c: 	movq	%r12, %rdi
    00002c4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11343
    00002c54: 	movq	%r12, %rdx
    00002c57: 	movl	$0x1f40, %esi
    00002c5c: 	movq	%rbp, %rdi
    00002c5f: 	callq	_Z10test_2termIi19custom_2term_addsubIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11359
    00002c64: 	movq	0x130(%rsp), %rdi
    00002c6c: 	cmpq	0x48(%rsp), %rdi
    00002c71: 	je	.Ltmp2637 # Offset: 11377
    00002c73: 	movq	0x140(%rsp), %rax
    00002c7b: 	leaq	0x1(%rax), %rsi
    00002c7f: 	callq	_ZdlPvm@PLT # Offset: 11391
.Ltmp2637:
    00002c84: 	leaq	DATAat0x3844e(%rip), %rdx
    00002c8b: 	movq	%r15, %rsi
    00002c8e: 	movq	%r12, %rdi
    00002c91: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11409
    00002c96: 	callq	clock@PLT # Offset: 11414
    00002c9b: 	movl	iterations(%rip), %ecx
    00002ca1: 	xorl	%r13d, %r13d
    00002ca4: 	leaq	0x7cf0(%rbp), %rbx
    00002cab: 	movq	%rax, start_time(%rip)
    00002cb2: 	leaq	DATAat0x381c8(%rip), %r14
    00002cb9: 	testl	%ecx, %ecx
    00002cbb: 	jle	.Ltmp2638 # Offset: 11451
    00002cc1: 	nopl	(%rax) # Size: 7
.Ltmp2641:
    00002cc8: 	movl	0x154(%rsp), %edx
    00002ccf: 	movq	%rbp, %rax
    00002cd2: 	xorl	0x150(%rsp), %edx
    00002cd9: 	pxor	%xmm0, %xmm0
    00002cdd: 	nopl	(%rax) # Size: 3
.Ltmp2639:
    00002ce0: 	movdqu	0x4(%rax), %xmm1
    00002ce5: 	pxor	(%rax), %xmm1
    00002ce9: 	addq	$0x10, %rax
    00002ced: 	paddd	%xmm1, %xmm0
    00002cf1: 	cmpq	%rax, %rbx
    00002cf4: 	jne	.Ltmp2639 # Offset: 11508
    00002cf6: 	movq	0x7e40(%rsp), %xmm2
    00002cff: 	movdqa	%xmm0, %xmm1
    00002d03: 	psrldq	$0x8, %xmm1
    00002d08: 	paddd	%xmm1, %xmm0
    00002d0c: 	movq	0x7e44(%rsp), %xmm1
    00002d15: 	pxor	%xmm2, %xmm1
    00002d19: 	movdqa	%xmm0, %xmm2
    00002d1d: 	psrldq	$0x4, %xmm2
    00002d22: 	pshufd	$0xe5, %xmm1, %xmm4
    00002d27: 	movd	%xmm4, %esi
    00002d2b: 	paddd	%xmm2, %xmm0
    00002d2f: 	movd	%xmm0, %eax
    00002d33: 	addl	%edx, %eax
    00002d35: 	movd	%xmm1, %edx
    00002d39: 	addl	%esi, %edx
    00002d3b: 	addl	%edx, %eax
    00002d3d: 	movl	0x7e48(%rsp), %edx
    00002d44: 	xorl	0x7e4c(%rsp), %edx
    00002d4b: 	addl	%edx, %eax
    00002d4d: 	je	.Ltmp2640 # Offset: 11597
    00002d4f: 	movl	current_test(%rip), %edx
    00002d55: 	movq	%r14, %rsi
    00002d58: 	movl	$0x1, %edi
    00002d5d: 	xorl	%eax, %eax
    00002d5f: 	callq	__printf_chk@PLT # Offset: 11615
    00002d64: 	movl	iterations(%rip), %ecx
    00002d6a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2640:
    00002d70: 	addl	$0x1, %r13d
    00002d74: 	cmpl	%ecx, %r13d
    00002d77: 	jl	.Ltmp2641 # Offset: 11639
.Ltmp2638:
    00002d7d: 	movq	%r12, %rsi
    00002d80: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002d87: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11655
    00002d8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d93: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d9a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002da1: 	je	.Ltmp2642 # Offset: 11681
.Ltmp2674:
    00002da7: 	movq	-0x20(%rax), %r13
    00002dab: 	callq	clock@PLT # Offset: 11691
    00002db0: 	pxor	%xmm0, %xmm0
    00002db4: 	movq	%rax, end_time(%rip)
    00002dbb: 	movq	%r13, %rdi
    00002dbe: 	subq	start_time(%rip), %rax
    00002dc5: 	cvtsi2sd	%rax, %xmm0
    00002dca: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002dd2: 	callq	_Z13record_resultdPKc # Offset: 11730
    00002dd7: 	movq	0x130(%rsp), %rdi
    00002ddf: 	cmpq	0x48(%rsp), %rdi
    00002de4: 	je	.Ltmp2643 # Offset: 11748
    00002de6: 	movq	0x140(%rsp), %rax
    00002dee: 	leaq	0x1(%rax), %rsi
    00002df2: 	callq	_ZdlPvm@PLT # Offset: 11762
.Ltmp2643:
    00002df7: 	leaq	DATAat0x3845d(%rip), %rdx
    00002dfe: 	movq	%r15, %rsi
    00002e01: 	movq	%r12, %rdi
    00002e04: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11780
    00002e09: 	movq	%r12, %rdx
    00002e0c: 	movl	$0x1f40, %esi
    00002e11: 	movq	%rbp, %rdi
    00002e14: 	callq	_Z10test_2termIi16custom_2term_xorIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11796
    00002e19: 	movq	0x130(%rsp), %rdi
    00002e21: 	cmpq	0x48(%rsp), %rdi
    00002e26: 	je	.Ltmp2644 # Offset: 11814
    00002e28: 	movq	0x140(%rsp), %rax
    00002e30: 	leaq	0x1(%rax), %rsi
    00002e34: 	callq	_ZdlPvm@PLT # Offset: 11828
.Ltmp2644:
    00002e39: 	leaq	DATAat0x38468(%rip), %rdx
    00002e40: 	movq	%r15, %rsi
    00002e43: 	movq	%r12, %rdi
    00002e46: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11846
    00002e4b: 	callq	clock@PLT # Offset: 11851
    00002e50: 	movl	iterations(%rip), %esi
    00002e56: 	xorl	%r13d, %r13d
    00002e59: 	leaq	0x7cf0(%rbp), %rbx
    00002e60: 	movq	%rax, start_time(%rip)
    00002e67: 	leaq	DATAat0x381c8(%rip), %r14
    00002e6e: 	testl	%esi, %esi
    00002e70: 	jle	.Ltmp2645 # Offset: 11888
    00002e76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2648:
    00002e80: 	movl	0x154(%rsp), %edx
    00002e87: 	movq	%rbp, %rax
    00002e8a: 	orl	0x150(%rsp), %edx
    00002e91: 	pxor	%xmm0, %xmm0
    00002e95: 	nopl	(%rax) # Size: 3
.Ltmp2646:
    00002e98: 	movdqu	0x4(%rax), %xmm1
    00002e9d: 	por	(%rax), %xmm1
    00002ea1: 	addq	$0x10, %rax
    00002ea5: 	paddd	%xmm1, %xmm0
    00002ea9: 	cmpq	%rax, %rbx
    00002eac: 	jne	.Ltmp2646 # Offset: 11948
    00002eae: 	movdqa	%xmm0, %xmm1
    00002eb2: 	cvttsd2si	init_value(%rip), %ecx
    00002eba: 	movq	0x7e40(%rsp), %xmm2
    00002ec3: 	psrldq	$0x8, %xmm1
    00002ec8: 	paddd	%xmm1, %xmm0
    00002ecc: 	movq	0x7e44(%rsp), %xmm1
    00002ed5: 	por	%xmm2, %xmm1
    00002ed9: 	imull	$0x1f40, %ecx, %ecx
    00002edf: 	movdqa	%xmm0, %xmm2
    00002ee3: 	psrldq	$0x4, %xmm2
    00002ee8: 	pshufd	$0xe5, %xmm1, %xmm5
    00002eed: 	movd	%xmm5, %edi
    00002ef1: 	paddd	%xmm2, %xmm0
    00002ef5: 	movd	%xmm0, %eax
    00002ef9: 	addl	%edx, %eax
    00002efb: 	movd	%xmm1, %edx
    00002eff: 	addl	%edi, %edx
    00002f01: 	addl	%edx, %eax
    00002f03: 	movl	0x7e48(%rsp), %edx
    00002f0a: 	orl	0x7e4c(%rsp), %edx
    00002f11: 	addl	%edx, %eax
    00002f13: 	cmpl	%eax, %ecx
    00002f15: 	je	.Ltmp2647 # Offset: 12053
    00002f17: 	movl	current_test(%rip), %edx
    00002f1d: 	movq	%r14, %rsi
    00002f20: 	movl	$0x1, %edi
    00002f25: 	xorl	%eax, %eax
    00002f27: 	callq	__printf_chk@PLT # Offset: 12071
    00002f2c: 	movl	iterations(%rip), %esi
    00002f32: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2647:
    00002f38: 	addl	$0x1, %r13d
    00002f3c: 	cmpl	%esi, %r13d
    00002f3f: 	jl	.Ltmp2648 # Offset: 12095
.Ltmp2645:
    00002f45: 	movq	%r12, %rsi
    00002f48: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002f4f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12111
    00002f54: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f5b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f62: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f69: 	je	.Ltmp2649 # Offset: 12137
.Ltmp2673:
    00002f6f: 	movq	-0x20(%rax), %r13
    00002f73: 	callq	clock@PLT # Offset: 12147
    00002f78: 	pxor	%xmm0, %xmm0
    00002f7c: 	movq	%rax, end_time(%rip)
    00002f83: 	movq	%r13, %rdi
    00002f86: 	subq	start_time(%rip), %rax
    00002f8d: 	cvtsi2sd	%rax, %xmm0
    00002f92: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002f9a: 	callq	_Z13record_resultdPKc # Offset: 12186
    00002f9f: 	movq	0x130(%rsp), %rdi
    00002fa7: 	cmpq	0x48(%rsp), %rdi
    00002fac: 	je	.Ltmp2650 # Offset: 12204
    00002fae: 	movq	0x140(%rsp), %rax
    00002fb6: 	leaq	0x1(%rax), %rsi
    00002fba: 	callq	_ZdlPvm@PLT # Offset: 12218
.Ltmp2650:
    00002fbf: 	leaq	DATAat0x38476(%rip), %rdx
    00002fc6: 	movq	%r15, %rsi
    00002fc9: 	movq	%r12, %rdi
    00002fcc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12236
    00002fd1: 	movq	%r12, %rdx
    00002fd4: 	movl	$0x1f40, %esi
    00002fd9: 	movq	%rbp, %rdi
    00002fdc: 	callq	_Z10test_2termIi15custom_2term_orIiEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 12252
    00002fe1: 	movq	0x130(%rsp), %rdi
    00002fe9: 	cmpq	0x48(%rsp), %rdi
    00002fee: 	je	.Ltmp2651 # Offset: 12270
    00002ff0: 	movq	0x140(%rsp), %rax
    00002ff8: 	leaq	0x1(%rax), %rsi
    00002ffc: 	callq	_ZdlPvm@PLT # Offset: 12284
.Ltmp2651:
    00003001: 	leaq	DATAat0x38480(%rip), %rdx
    00003008: 	movq	%r15, %rsi
    0000300b: 	movq	%r12, %rdi
    0000300e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12302
    00003013: 	callq	clock@PLT # Offset: 12307
    00003018: 	movl	iterations(%rip), %esi
    0000301e: 	xorl	%r13d, %r13d
    00003021: 	leaq	0x7cf0(%rbp), %rbx
    00003028: 	movq	%rax, start_time(%rip)
    0000302f: 	leaq	DATAat0x381c8(%rip), %r14
    00003036: 	testl	%esi, %esi
    00003038: 	jle	.Ltmp2652 # Offset: 12344
    0000303e: 	nop # Size: 2
.Ltmp2655:
    00003040: 	movl	0x154(%rsp), %edx
    00003047: 	movq	%rbp, %rax
    0000304a: 	andl	0x150(%rsp), %edx
    00003051: 	pxor	%xmm0, %xmm0
    00003055: 	nopl	(%rax) # Size: 3
.Ltmp2653:
    00003058: 	movdqu	0x4(%rax), %xmm1
    0000305d: 	pand	(%rax), %xmm1
    00003061: 	addq	$0x10, %rax
    00003065: 	paddd	%xmm1, %xmm0
    00003069: 	cmpq	%rbx, %rax
    0000306c: 	jne	.Ltmp2653 # Offset: 12396
    0000306e: 	movdqa	%xmm0, %xmm1
    00003072: 	cvttsd2si	init_value(%rip), %ecx
    0000307a: 	movq	0x7e40(%rsp), %xmm2
    00003083: 	psrldq	$0x8, %xmm1
    00003088: 	paddd	%xmm1, %xmm0
    0000308c: 	movq	0x7e44(%rsp), %xmm1
    00003095: 	pand	%xmm2, %xmm1
    00003099: 	imull	$0x1f40, %ecx, %ecx
    0000309f: 	movdqa	%xmm0, %xmm2
    000030a3: 	psrldq	$0x4, %xmm2
    000030a8: 	pshufd	$0xe5, %xmm1, %xmm4
    000030ad: 	movd	%xmm4, %edi
    000030b1: 	paddd	%xmm2, %xmm0
    000030b5: 	movd	%xmm0, %eax
    000030b9: 	addl	%edx, %eax
    000030bb: 	movd	%xmm1, %edx
    000030bf: 	addl	%edi, %edx
    000030c1: 	addl	%edx, %eax
    000030c3: 	movl	0x7e48(%rsp), %edx
    000030ca: 	andl	0x7e4c(%rsp), %edx
    000030d1: 	addl	%edx, %eax
    000030d3: 	cmpl	%eax, %ecx
    000030d5: 	je	.Ltmp2654 # Offset: 12501
    000030d7: 	movl	current_test(%rip), %edx
    000030dd: 	movq	%r14, %rsi
    000030e0: 	movl	$0x1, %edi
    000030e5: 	xorl	%eax, %eax
    000030e7: 	callq	__printf_chk@PLT # Offset: 12519
    000030ec: 	movl	iterations(%rip), %esi
    000030f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2654:
    000030f8: 	addl	$0x1, %r13d
    000030fc: 	cmpl	%esi, %r13d
    000030ff: 	jl	.Ltmp2655 # Offset: 12543
.Ltmp2652:
    00003105: 	movq	%r12, %rsi
    00003108: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000310f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12559
    00003114: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000311b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003122: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003129: 	je	.Ltmp2656 # Offset: 12585
.Ltmp2672:
    0000312f: 	movq	-0x20(%rax), %r13
    00003133: 	callq	clock@PLT # Offset: 12595
    00003138: 	pxor	%xmm0, %xmm0
    0000313c: 	movq	%rax, end_time(%rip)
    00003143: 	movq	%r13, %rdi
    00003146: 	subq	start_time(%rip), %rax
    0000314d: 	cvtsi2sd	%rax, %xmm0
    00003152: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000315a: 	callq	_Z13record_resultdPKc # Offset: 12634
    0000315f: 	movq	0x130(%rsp), %rdi
    00003167: 	cmpq	0x48(%rsp), %rdi
    0000316c: 	je	.Ltmp2657 # Offset: 12652
    0000316e: 	movq	0x140(%rsp), %rax
    00003176: 	leaq	0x1(%rax), %rsi
    0000317a: 	callq	_ZdlPvm@PLT # Offset: 12666
.Ltmp2657:
    0000317f: 	leaq	DATAat0x3848f(%rip), %rdx
    00003186: 	movq	%r15, %rsi
    00003189: 	movq	%r12, %rdi
    0000318c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12684
    00003191: 	callq	clock@PLT # Offset: 12689
    00003196: 	movl	iterations(%rip), %esi
    0000319c: 	xorl	%r13d, %r13d
    0000319f: 	leaq	0x7cf0(%rbp), %rbx
    000031a6: 	movq	%rax, start_time(%rip)
    000031ad: 	leaq	DATAat0x381c8(%rip), %r14
    000031b4: 	testl	%esi, %esi
    000031b6: 	jle	.Ltmp2658 # Offset: 12726
    000031bc: 	nopl	(%rax) # Size: 4
.Ltmp2661:
    000031c0: 	movl	0x154(%rsp), %edx
    000031c7: 	movq	%rbp, %rax
    000031ca: 	andl	0x150(%rsp), %edx
    000031d1: 	pxor	%xmm0, %xmm0
    000031d5: 	nopl	(%rax) # Size: 3
.Ltmp2659:
    000031d8: 	movdqu	0x4(%rax), %xmm1
    000031dd: 	pand	(%rax), %xmm1
    000031e1: 	addq	$0x10, %rax
    000031e5: 	paddd	%xmm1, %xmm0
    000031e9: 	cmpq	%rbx, %rax
    000031ec: 	jne	.Ltmp2659 # Offset: 12780
    000031ee: 	movdqa	%xmm0, %xmm1
    000031f2: 	cvttsd2si	init_value(%rip), %ecx
    000031fa: 	movq	0x7e40(%rsp), %xmm2
    00003203: 	psrldq	$0x8, %xmm1
    00003208: 	paddd	%xmm1, %xmm0
    0000320c: 	movq	0x7e44(%rsp), %xmm1
    00003215: 	pand	%xmm2, %xmm1
    00003219: 	imull	$0x1f40, %ecx, %ecx
    0000321f: 	movdqa	%xmm0, %xmm2
    00003223: 	psrldq	$0x4, %xmm2
    00003228: 	pshufd	$0xe5, %xmm1, %xmm5
    0000322d: 	movd	%xmm5, %edi
    00003231: 	paddd	%xmm2, %xmm0
    00003235: 	movd	%xmm0, %eax
    00003239: 	addl	%edx, %eax
    0000323b: 	movd	%xmm1, %edx
    0000323f: 	addl	%edi, %edx
    00003241: 	addl	%edx, %eax
    00003243: 	movl	0x7e48(%rsp), %edx
    0000324a: 	andl	0x7e4c(%rsp), %edx
    00003251: 	addl	%edx, %eax
    00003253: 	cmpl	%eax, %ecx
    00003255: 	je	.Ltmp2660 # Offset: 12885
    00003257: 	movl	current_test(%rip), %edx
    0000325d: 	movq	%r14, %rsi
    00003260: 	movl	$0x1, %edi
    00003265: 	xorl	%eax, %eax
    00003267: 	callq	__printf_chk@PLT # Offset: 12903
    0000326c: 	movl	iterations(%rip), %esi
    00003272: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2660:
    00003278: 	addl	$0x1, %r13d
    0000327c: 	cmpl	%esi, %r13d
    0000327f: 	jl	.Ltmp2661 # Offset: 12927
.Ltmp2658:
    00003285: 	movq	%r12, %rsi
    00003288: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000328f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12943
    00003294: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000329b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000032a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000032a9: 	je	.Ltmp2662 # Offset: 12969
.Ltmp2671:
    000032af: 	movq	-0x20(%rax), %rbp
    000032b3: 	callq	clock@PLT # Offset: 12979
    000032b8: 	pxor	%xmm0, %xmm0
    000032bc: 	movq	%rax, end_time(%rip)
    000032c3: 	movq	%rbp, %rdi
    000032c6: 	subq	start_time(%rip), %rax
    000032cd: 	cvtsi2sd	%rax, %xmm0
    000032d2: 	divsd	DATAat0x385e0(%rip), %xmm0
    000032da: 	callq	_Z13record_resultdPKc # Offset: 13018
    000032df: 	movq	0x130(%rsp), %rdi
    000032e7: 	cmpq	0x48(%rsp), %rdi
    000032ec: 	je	.Ltmp2663 # Offset: 13036
    000032ee: 	movq	0x140(%rsp), %rax
    000032f6: 	leaq	0x1(%rax), %rsi
    000032fa: 	callq	_ZdlPvm@PLT # Offset: 13050
.Ltmp2663:
    000032ff: 	leaq	DATAat0x38550(%rip), %rdx
    00003306: 	movq	%r15, %rsi
    00003309: 	movq	%r12, %rdi
    0000330c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13068
    00003311: 	movl	iterations(%rip), %esi
    00003317: 	movq	0x130(%rsp), %rdi
    0000331f: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 13087
    00003324: 	movq	0x130(%rsp), %rdi
    0000332c: 	cmpq	0x48(%rsp), %rdi
    00003331: 	je	.Ltmp2664 # Offset: 13105
    00003333: 	movq	0x140(%rsp), %rax
    0000333b: 	leaq	0x1(%rax), %rsi
    0000333f: 	callq	_ZdlPvm@PLT # Offset: 13119
.Ltmp2664:
    00003344: 	movq	0x110(%rsp), %rdi
    0000334c: 	leaq	0x120(%rsp), %rax
    00003354: 	cmpq	%rax, %rdi
    00003357: 	je	.Ltmp2665 # Offset: 13143
    00003359: 	movq	0x120(%rsp), %rax
    00003361: 	leaq	0x1(%rax), %rsi
    00003365: 	callq	_ZdlPvm@PLT # Offset: 13157
.Ltmp2665:
    0000336a: 	movq	0xf0(%rsp), %rdi
    00003372: 	leaq	0x100(%rsp), %rax
    0000337a: 	cmpq	%rax, %rdi
    0000337d: 	je	.Ltmp2666 # Offset: 13181
    0000337f: 	movq	0x100(%rsp), %rax
    00003387: 	leaq	0x1(%rax), %rsi
    0000338b: 	callq	_ZdlPvm@PLT # Offset: 13195
.Ltmp2666:
    00003390: 	movq	0xd0(%rsp), %rdi
    00003398: 	leaq	0xe0(%rsp), %rax
    000033a0: 	cmpq	%rax, %rdi
    000033a3: 	je	.Ltmp2667 # Offset: 13219
    000033a5: 	movq	0xe0(%rsp), %rax
    000033ad: 	leaq	0x1(%rax), %rsi
    000033b1: 	callq	_ZdlPvm@PLT # Offset: 13233
.Ltmp2667:
    000033b6: 	movq	0xb0(%rsp), %rdi
    000033be: 	cmpq	0x88(%rsp), %rdi
    000033c6: 	je	.Ltmp2668 # Offset: 13254
    000033c8: 	movq	0xc0(%rsp), %rax
    000033d0: 	leaq	0x1(%rax), %rsi
    000033d4: 	callq	_ZdlPvm@PLT # Offset: 13268
.Ltmp2668:
    000033d9: 	movq	0x7e58(%rsp), %rax
    000033e1: 	subq	%fs:0x28, %rax
    000033ea: 	jne	.Ltmp2669 # Offset: 13290
    000033f0: 	addq	$0x7e68, %rsp
    000033f7: 	popq	%rbx
    000033f8: 	popq	%rbp
    000033f9: 	popq	%r12
    000033fb: 	popq	%r13
    000033fd: 	popq	%r14
    000033ff: 	popq	%r15
    00003401: 	retq # Offset: 13313
.Ltmp2470:
    00003402: 	movq	-0x8(%rdx), %rax
    00003406: 	addq	$0x200, %rax
    0000340c: 	jmp	.Ltmp2670 # Offset: 13324
.Ltmp2662:
    00003411: 	movq	-0x8(%rdx), %rax
    00003415: 	addq	$0x200, %rax
    0000341b: 	jmp	.Ltmp2671 # Offset: 13339
.Ltmp2656:
    00003420: 	movq	-0x8(%rdx), %rax
    00003424: 	addq	$0x200, %rax
    0000342a: 	jmp	.Ltmp2672 # Offset: 13354
.Ltmp2649:
    0000342f: 	movq	-0x8(%rdx), %rax
    00003433: 	addq	$0x200, %rax
    00003439: 	jmp	.Ltmp2673 # Offset: 13369
.Ltmp2642:
    0000343e: 	movq	-0x8(%rdx), %rax
    00003442: 	addq	$0x200, %rax
    00003448: 	jmp	.Ltmp2674 # Offset: 13384
.Ltmp2630:
    0000344d: 	movq	-0x8(%rdx), %rax
    00003451: 	addq	$0x200, %rax
    00003457: 	jmp	.Ltmp2675 # Offset: 13399
.Ltmp2624:
    0000345c: 	movq	-0x8(%rdx), %rax
    00003460: 	addq	$0x200, %rax
    00003466: 	jmp	.Ltmp2676 # Offset: 13414
.Ltmp2618:
    0000346b: 	movq	-0x8(%rdx), %rax
    0000346f: 	addq	$0x200, %rax
    00003475: 	jmp	.Ltmp2677 # Offset: 13429
.Ltmp2612:
    0000347a: 	movq	-0x8(%rdx), %rax
    0000347e: 	addq	$0x200, %rax
    00003484: 	jmp	.Ltmp2678 # Offset: 13444
.Ltmp2606:
    00003489: 	movq	-0x8(%rdx), %rax
    0000348d: 	addq	$0x200, %rax
    00003493: 	jmp	.Ltmp2679 # Offset: 13459
.Ltmp2600:
    00003498: 	movq	-0x8(%rdx), %rax
    0000349c: 	addq	$0x200, %rax
    000034a2: 	jmp	.Ltmp2680 # Offset: 13474
.Ltmp2594:
    000034a7: 	movq	-0x8(%rdx), %rax
    000034ab: 	addq	$0x200, %rax
    000034b1: 	jmp	.Ltmp2681 # Offset: 13489
.Ltmp2588:
    000034b6: 	movq	-0x8(%rdx), %rax
    000034ba: 	addq	$0x200, %rax
    000034c0: 	jmp	.Ltmp2682 # Offset: 13504
.Ltmp2582:
    000034c5: 	movq	-0x8(%rdx), %rax
    000034c9: 	addq	$0x200, %rax
    000034cf: 	jmp	.Ltmp2683 # Offset: 13519
.Ltmp2580:
    000034d4: 	movq	-0x8(%rdx), %rax
    000034d8: 	addq	$0x200, %rax
    000034de: 	jmp	.Ltmp2684 # Offset: 13534
.Ltmp2578:
    000034e3: 	movq	-0x8(%rdx), %rax
    000034e7: 	addq	$0x200, %rax
    000034ed: 	jmp	.Ltmp2685 # Offset: 13549
.Ltmp2576:
    000034f2: 	movq	-0x8(%rdx), %rax
    000034f6: 	addq	$0x200, %rax
    000034fc: 	jmp	.Ltmp2686 # Offset: 13564
.Ltmp2574:
    00003501: 	movq	-0x8(%rdx), %rax
    00003505: 	addq	$0x200, %rax
    0000350b: 	jmp	.Ltmp2687 # Offset: 13579
.Ltmp2572:
    00003510: 	movq	-0x8(%rdx), %rax
    00003514: 	addq	$0x200, %rax
    0000351a: 	jmp	.Ltmp2688 # Offset: 13594
.Ltmp2570:
    0000351f: 	movq	-0x8(%rdx), %rax
    00003523: 	addq	$0x200, %rax
    00003529: 	jmp	.Ltmp2689 # Offset: 13609
.Ltmp2568:
    0000352e: 	movq	-0x8(%rdx), %rax
    00003532: 	addq	$0x200, %rax
    00003538: 	jmp	.Ltmp2690 # Offset: 13624
.Ltmp2566:
    0000353d: 	movq	-0x8(%rdx), %rax
    00003541: 	addq	$0x200, %rax
    00003547: 	jmp	.Ltmp2691 # Offset: 13639
.Ltmp2564:
    0000354c: 	movq	-0x8(%rdx), %rax
    00003550: 	addq	$0x200, %rax
    00003556: 	jmp	.Ltmp2692 # Offset: 13654
.Ltmp2562:
    0000355b: 	movq	-0x8(%rdx), %rax
    0000355f: 	addq	$0x200, %rax
    00003565: 	jmp	.Ltmp2693 # Offset: 13669
.Ltmp2560:
    0000356a: 	movq	-0x8(%rdx), %rax
    0000356e: 	addq	$0x200, %rax
    00003574: 	jmp	.Ltmp2694 # Offset: 13684
.Ltmp2558:
    00003579: 	movq	-0x8(%rdx), %rax
    0000357d: 	addq	$0x200, %rax
    00003583: 	jmp	.Ltmp2695 # Offset: 13699
.Ltmp2556:
    00003588: 	movq	-0x8(%rdx), %rax
    0000358c: 	addq	$0x200, %rax
    00003592: 	jmp	.Ltmp2696 # Offset: 13714
.Ltmp2554:
    00003597: 	movq	-0x8(%rdx), %rax
    0000359b: 	addq	$0x200, %rax
    000035a1: 	jmp	.Ltmp2697 # Offset: 13729
.Ltmp2552:
    000035a6: 	movq	-0x8(%rdx), %rax
    000035aa: 	addq	$0x200, %rax
    000035b0: 	jmp	.Ltmp2698 # Offset: 13744
.Ltmp2550:
    000035b5: 	movq	-0x8(%rdx), %rax
    000035b9: 	addq	$0x200, %rax
    000035bf: 	jmp	.Ltmp2699 # Offset: 13759
.Ltmp2548:
    000035c4: 	movq	-0x8(%rdx), %rax
    000035c8: 	addq	$0x200, %rax
    000035ce: 	jmp	.Ltmp2700 # Offset: 13774
.Ltmp2542:
    000035d3: 	movq	-0x8(%rdx), %rax
    000035d7: 	addq	$0x200, %rax
    000035dd: 	jmp	.Ltmp2701 # Offset: 13789
.Ltmp2536:
    000035e2: 	movq	-0x8(%rdx), %rax
    000035e6: 	addq	$0x200, %rax
    000035ec: 	jmp	.Ltmp2702 # Offset: 13804
.Ltmp2530:
    000035f1: 	movq	-0x8(%rdx), %rax
    000035f5: 	addq	$0x200, %rax
    000035fb: 	jmp	.Ltmp2703 # Offset: 13819
.Ltmp2524:
    00003600: 	movq	-0x8(%rdx), %rax
    00003604: 	addq	$0x200, %rax
    0000360a: 	jmp	.Ltmp2704 # Offset: 13834
.Ltmp2518:
    0000360f: 	movq	-0x8(%rdx), %rax
    00003613: 	addq	$0x200, %rax
    00003619: 	jmp	.Ltmp2705 # Offset: 13849
.Ltmp2512:
    0000361e: 	movq	-0x8(%rdx), %rax
    00003622: 	addq	$0x200, %rax
    00003628: 	jmp	.Ltmp2706 # Offset: 13864
.Ltmp2506:
    0000362d: 	movq	-0x8(%rdx), %rax
    00003631: 	addq	$0x200, %rax
    00003637: 	jmp	.Ltmp2707 # Offset: 13879
.Ltmp2500:
    0000363c: 	movq	-0x8(%rdx), %rax
    00003640: 	addq	$0x200, %rax
    00003646: 	jmp	.Ltmp2708 # Offset: 13894
.Ltmp2494:
    0000364b: 	movq	-0x8(%rdx), %rax
    0000364f: 	addq	$0x200, %rax
    00003655: 	jmp	.Ltmp2709 # Offset: 13909
.Ltmp2488:
    0000365a: 	movq	-0x8(%rdx), %rax
    0000365e: 	addq	$0x200, %rax
    00003664: 	jmp	.Ltmp2710 # Offset: 13924
.Ltmp2482:
    00003669: 	movq	-0x8(%rdx), %rax
    0000366d: 	addq	$0x200, %rax
    00003673: 	jmp	.Ltmp2711 # Offset: 13939
.Ltmp2476:
    00003678: 	movq	-0x8(%rdx), %rax
    0000367c: 	addq	$0x200, %rax
    00003682: 	jmp	.Ltmp2712 # Offset: 13954
.Ltmp2669:
    00003687: 	callq	__stack_chk_fail@PLT # Offset: 13959
    0000368c: 	endbr64
.Ltmp2714:
    00003690: 	movq	%rax, %rbx
    00003693: 	jmp	.Ltmp2713 # Offset: 13971
    00003695: 	endbr64
    00003699: 	jmp	.Ltmp2714 # Offset: 13977
    0000369b: 	endbr64
    0000369f: 	jmp	.Ltmp2714 # Offset: 13983
    000036a1: 	endbr64
    000036a5: 	jmp	.Ltmp2714 # Offset: 13989
.Ltmp2713:
    000036a7: 	movq	0x130(%rsp), %rdi
    000036af: 	cmpq	0x48(%rsp), %rdi
    000036b4: 	je	.Ltmp2715 # Offset: 14004
.Ltmp2722:
    000036b6: 	movq	0x140(%rsp), %rax
    000036be: 	leaq	0x1(%rax), %rsi
    000036c2: 	callq	_ZdlPvm@PLT # Offset: 14018
.Ltmp2715:
    000036c7: 	movq	0xb0(%rsp), %rdi
    000036cf: 	cmpq	0x88(%rsp), %rdi
    000036d7: 	je	.Ltmp2716 # Offset: 14039
    000036d9: 	movq	0xc0(%rsp), %rax
    000036e1: 	leaq	0x1(%rax), %rsi
    000036e5: 	callq	_ZdlPvm@PLT # Offset: 14053
.Ltmp2716:
    000036ea: 	movq	%rbx, %rdi
    000036ed: 	callq	_Unwind_Resume@PLT # Offset: 14061
    000036f2: 	endbr64
    000036f6: 	jmp	.Ltmp2714 # Offset: 14070
    000036f8: 	endbr64
    000036fc: 	jmp	.Ltmp2714 # Offset: 14076
    000036fe: 	endbr64
    00003702: 	jmp	.Ltmp2714 # Offset: 14082
    00003704: 	endbr64
    00003708: 	jmp	.Ltmp2714 # Offset: 14088
    0000370a: 	endbr64
    0000370e: 	jmp	.Ltmp2714 # Offset: 14094
    00003710: 	endbr64
    00003714: 	jmp	.Ltmp2714 # Offset: 14100
    00003719: 	endbr64
    0000371d: 	jmp	.Ltmp2714 # Offset: 14109
    00003722: 	endbr64
    00003726: 	jmp	.Ltmp2714 # Offset: 14118
    0000372b: 	endbr64
.Ltmp2718:
    0000372f: 	movq	%rax, %rbx
    00003732: 	jmp	.Ltmp2717 # Offset: 14130
    00003734: 	endbr64
    00003738: 	jmp	.Ltmp2718 # Offset: 14136
    0000373a: 	endbr64
    0000373e: 	jmp	.Ltmp2718 # Offset: 14142
    00003740: 	endbr64
    00003744: 	movq	%rax, %rbx
    00003747: 	jmp	.Ltmp2719 # Offset: 14151
.Ltmp2717:
    00003749: 	movq	0x130(%rsp), %rdi
    00003751: 	cmpq	0x48(%rsp), %rdi
    00003756: 	je	.Ltmp2719 # Offset: 14166
    00003758: 	movq	0x140(%rsp), %rax
    00003760: 	leaq	0x1(%rax), %rsi
    00003764: 	callq	_ZdlPvm@PLT # Offset: 14180
.Ltmp2719:
    00003769: 	movq	0xd0(%rsp), %rdi
    00003771: 	leaq	0xe0(%rsp), %rax
    00003779: 	cmpq	%rax, %rdi
    0000377c: 	je	.Ltmp2715 # Offset: 14204
    00003782: 	movq	0xe0(%rsp), %rax
    0000378a: 	leaq	0x1(%rax), %rsi
    0000378e: 	callq	_ZdlPvm@PLT # Offset: 14222
    00003793: 	jmp	.Ltmp2715 # Offset: 14227
    00003798: 	endbr64
    0000379c: 	jmp	.Ltmp2718 # Offset: 14236
    0000379e: 	endbr64
    000037a2: 	jmp	.Ltmp2718 # Offset: 14242
    000037a4: 	endbr64
    000037a8: 	jmp	.Ltmp2718 # Offset: 14248
    000037aa: 	endbr64
    000037ae: 	jmp	.Ltmp2718 # Offset: 14254
    000037b3: 	endbr64
    000037b7: 	jmp	.Ltmp2718 # Offset: 14263
    000037bc: 	endbr64
    000037c0: 	jmp	.Ltmp2718 # Offset: 14272
    000037c5: 	endbr64
    000037c9: 	jmp	.Ltmp2718 # Offset: 14281
    000037ce: 	endbr64
    000037d2: 	jmp	.Ltmp2718 # Offset: 14290
    000037d7: 	endbr64
    000037db: 	jmp	.Ltmp2714 # Offset: 14299
    000037e0: 	endbr64
    000037e4: 	movq	%rax, %rbx
    000037e7: 	jmp	.Ltmp2715 # Offset: 14311
    000037ec: 	endbr64
    000037f0: 	movq	%rax, %rbx
    000037f3: 	jmp	.Ltmp2720 # Offset: 14323
    000037f5: 	endbr64
.Ltmp2723:
    000037f9: 	movq	%rax, %rbx
    000037fc: 	jmp	.Ltmp2721 # Offset: 14332
.Ltmp2720:
    000037fe: 	movq	0x130(%rsp), %rdi
    00003806: 	leaq	0x140(%rsp), %rax
    0000380e: 	cmpq	%rax, %rdi
    00003811: 	jne	.Ltmp2722 # Offset: 14353
    00003817: 	jmp	.Ltmp2715 # Offset: 14359
    0000381c: 	endbr64
    00003820: 	jmp	.Ltmp2723 # Offset: 14368
    00003822: 	endbr64
    00003826: 	jmp	.Ltmp2723 # Offset: 14374
    00003828: 	endbr64
    0000382c: 	jmp	.Ltmp2723 # Offset: 14380
    0000382e: 	endbr64
    00003832: 	jmp	.Ltmp2723 # Offset: 14386
.Ltmp2721:
    00003834: 	movq	0x130(%rsp), %rdi
    0000383c: 	cmpq	0x48(%rsp), %rdi
    00003841: 	je	.Ltmp2724 # Offset: 14401
    00003843: 	movq	0x140(%rsp), %rax
    0000384b: 	leaq	0x1(%rax), %rsi
    0000384f: 	callq	_ZdlPvm@PLT # Offset: 14415
.Ltmp2724:
    00003854: 	movq	0x110(%rsp), %rdi
    0000385c: 	leaq	0x120(%rsp), %rax
    00003864: 	cmpq	%rax, %rdi
    00003867: 	je	.Ltmp2725 # Offset: 14439
    00003869: 	movq	0x120(%rsp), %rax
    00003871: 	leaq	0x1(%rax), %rsi
    00003875: 	callq	_ZdlPvm@PLT # Offset: 14453
.Ltmp2725:
    0000387a: 	movq	0xf0(%rsp), %rdi
    00003882: 	leaq	0x100(%rsp), %rax
    0000388a: 	cmpq	%rax, %rdi
    0000388d: 	je	.Ltmp2719 # Offset: 14477
    00003893: 	movq	0x100(%rsp), %rax
    0000389b: 	leaq	0x1(%rax), %rsi
    0000389f: 	callq	_ZdlPvm@PLT # Offset: 14495
    000038a4: 	jmp	.Ltmp2719 # Offset: 14500
    000038a9: 	endbr64
    000038ad: 	jmp	.Ltmp2718 # Offset: 14509
    000038b2: 	endbr64
    000038b6: 	jmp	.Ltmp2718 # Offset: 14518
    000038bb: 	endbr64
    000038bf: 	jmp	.Ltmp2718 # Offset: 14527
    000038c4: 	endbr64
    000038c8: 	jmp	.Ltmp2718 # Offset: 14536
    000038cd: 	endbr64
.Ltmp2727:
    000038d1: 	movq	%rax, %rbx
    000038d4: 	jmp	.Ltmp2726 # Offset: 14548
    000038d6: 	endbr64
    000038da: 	movq	%rax, %rbx
    000038dd: 	jmp	.Ltmp2725 # Offset: 14557
.Ltmp2726:
    000038df: 	movq	0x130(%rsp), %rdi
    000038e7: 	cmpq	0x48(%rsp), %rdi
    000038ec: 	je	.Ltmp2725 # Offset: 14572
    000038ee: 	movq	0x140(%rsp), %rax
    000038f6: 	leaq	0x1(%rax), %rsi
    000038fa: 	callq	_ZdlPvm@PLT # Offset: 14586
    000038ff: 	jmp	.Ltmp2725 # Offset: 14591
    00003904: 	endbr64
    00003908: 	jmp	.Ltmp2718 # Offset: 14600
    0000390d: 	endbr64
    00003911: 	jmp	.Ltmp2718 # Offset: 14609
    00003916: 	endbr64
    0000391a: 	jmp	.Ltmp2727 # Offset: 14618
    0000391c: 	endbr64
    00003920: 	jmp	.Ltmp2727 # Offset: 14624
    00003922: 	endbr64
    00003926: 	jmp	.Ltmp2727 # Offset: 14630
    00003928: 	endbr64
    0000392c: 	jmp	.Ltmp2727 # Offset: 14636
    0000392e: 	endbr64
    00003932: 	jmp	.Ltmp2723 # Offset: 14642
    00003937: 	endbr64
    0000393b: 	jmp	.Ltmp2723 # Offset: 14651
    00003940: 	endbr64
    00003944: 	jmp	.Ltmp2723 # Offset: 14660
    00003949: 	endbr64
    0000394d: 	jmp	.Ltmp2723 # Offset: 14669
    00003952: 	endbr64
    00003956: 	jmp	.Ltmp2727 # Offset: 14678
    0000395b: 	endbr64
    0000395f: 	jmp	.Ltmp2727 # Offset: 14687
    00003964: 	endbr64
    00003968: 	jmp	.Ltmp2723 # Offset: 14696
    0000396d: 	endbr64
    00003971: 	jmp	.Ltmp2723 # Offset: 14705
    00003976: 	endbr64
    0000397a: 	jmp	.Ltmp2723 # Offset: 14714
    0000397f: 	endbr64
    00003983: 	jmp	.Ltmp2727 # Offset: 14723
    00003988: 	endbr64
    0000398c: 	jmp	.Ltmp2723 # Offset: 14732
    00003991: 	endbr64
    00003995: 	movq	%rax, %rbx
    00003998: 	jmp	.Ltmp2724 # Offset: 14744
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvd"

Binary Function "_Z10test_2termIm16custom_2term_addImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 108
  State       : disassembled
  Address     : 0x25c30
  Size        : 0x30c
  MaxSize     : 0x310
  Offset      : 0x25c30
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm16custom_2term_addImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0107:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movl	%esi, %ebp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %r11d
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%r11d, %r11d
    00000042: 	jle	.Ltmp2728 # Offset: 66
    00000048: 	leal	-0x4(%rbp), %eax
    0000004b: 	movq	0x8(%rbx), %r10
    0000004f: 	movq	(%rbx), %r9
    00000052: 	xorl	%r15d, %r15d
    00000055: 	shrl	%eax
    00000057: 	movsd	DATAat0x385f0(%rip), %xmm1
    0000005f: 	movsd	init_value(%rip), %xmm0
    00000067: 	movabsq	$-0x8000000000000000, %r13
    00000071: 	leaq	0x5(%rax,%rax), %r12
    00000076: 	leaq	DATAat0x381c8(%rip), %r14
    0000007d: 	nopl	(%rax) # Size: 3
.Ltmp2735:
    00000080: 	leaq	(%r10,%r9,2), %rsi
    00000084: 	movq	%r9, %rax
    00000087: 	movq	%r9, %rdx
    0000008a: 	imulq	%r10, %rsi
    0000008e: 	imulq	%r9, %rax
    00000092: 	addq	%rax, %rsi
    00000095: 	cmpl	$0x1, %ebp
    00000098: 	jle	.Ltmp2729 # Offset: 152
    0000009a: 	cmpl	$0x3, %ebp
    0000009d: 	jle	.Ltmp2730 # Offset: 157
    000000a3: 	movl	$0x3, %edi
.Ltmp2731:
    000000a8: 	movq	-0x10(%rbx,%rdi,8), %rax
    000000ad: 	leaq	(%rax,%rdx,2), %rcx
    000000b1: 	imulq	%rax, %rcx
    000000b5: 	imulq	%rdx, %rdx
    000000b9: 	addq	%rdx, %rcx
    000000bc: 	movq	-0x8(%rbx,%rdi,8), %rdx
    000000c1: 	leaq	(%rdx,%rax,2), %r8
    000000c5: 	imulq	%rax, %rax
    000000c9: 	imulq	%rdx, %r8
    000000cd: 	addq	%rax, %rcx
    000000d0: 	leaq	(%r8,%rcx), %rax
    000000d4: 	movslq	%edi, %rcx
    000000d7: 	addq	$0x2, %rdi
    000000db: 	addq	%rax, %rsi
    000000de: 	cmpq	%rdi, %r12
    000000e1: 	jne	.Ltmp2731 # Offset: 225
    000000e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2732:
    000000e8: 	movq	(%rbx,%rcx,8), %rdi
    000000ec: 	movq	-0x8(%rbx,%rcx,8), %rdx
    000000f1: 	addq	$0x1, %rcx
    000000f5: 	leaq	(%rdi,%rdx,2), %rax
    000000f9: 	imulq	%rdi, %rax
    000000fd: 	imulq	%rdx, %rdx
    00000101: 	addq	%rdx, %rax
    00000104: 	addq	%rax, %rsi
    00000107: 	cmpl	%ecx, %ebp
    00000109: 	jg	.Ltmp2732 # Offset: 265
.Ltmp2729:
    0000010b: 	comisd	%xmm1, %xmm0
    0000010f: 	jae	.Ltmp2733 # Offset: 271
    00000115: 	cvttsd2si	%xmm0, %rax
.Ltmp2743:
    0000011a: 	imulq	%rax, %rax
    0000011e: 	imulq	$0x7d00, %rax, %rax
    00000125: 	cmpq	%rsi, %rax
    00000128: 	je	.Ltmp2734 # Offset: 296
    0000012a: 	movl	current_test(%rip), %edx
    00000130: 	movq	%r14, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	xorl	%eax, %eax
    0000013a: 	addl	$0x1, %r15d
    0000013e: 	callq	__printf_chk@PLT # Offset: 318
    00000143: 	movl	iterations(%rip), %r11d
    0000014a: 	cmpl	%r11d, %r15d
    0000014d: 	jge	.Ltmp2728 # Offset: 333
    0000014f: 	movq	DATAat0x385f0(%rip), %rax
    00000156: 	movq	0x8(%rbx), %r10
    0000015a: 	movq	(%rbx), %r9
    0000015d: 	movsd	init_value(%rip), %xmm0
    00000165: 	movq	%rax, %xmm1
    0000016a: 	jmp	.Ltmp2735 # Offset: 362
    0000016f: 	nop # Size: 1
.Ltmp2734:
    00000170: 	addl	$0x1, %r15d
    00000174: 	cmpl	%r11d, %r15d
    00000177: 	jl	.Ltmp2735 # Offset: 375
.Ltmp2728:
    0000017d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000018b: 	subq	$0x20, %rax
    0000018f: 	cmpq	%rax, %rbx
    00000192: 	je	.Ltmp2736 # Offset: 402
    00000198: 	movq	0x8(%rsp), %rax
    0000019d: 	leaq	0x10(%rbx), %rdi
    000001a1: 	movq	%rdi, (%rbx)
    000001a4: 	movq	(%rax), %rbp
    000001a7: 	movq	0x8(%rax), %r12
    000001ab: 	movq	%rbp, %rax
    000001ae: 	addq	%r12, %rax
    000001b1: 	je	.Ltmp2737 # Offset: 433
    000001b3: 	testq	%rbp, %rbp
    000001b6: 	je	.Ltmp2738 # Offset: 438
.Ltmp2737:
    000001bc: 	movq	%r12, 0x10(%rsp)
    000001c1: 	cmpq	$0xf, %r12
    000001c5: 	ja	.Ltmp2739 # Offset: 453
    000001cb: 	cmpq	$0x1, %r12
    000001cf: 	jne	.Ltmp2740 # Offset: 463
    000001d5: 	movzbl	(%rbp), %eax
    000001d9: 	movb	%al, 0x10(%rbx)
.Ltmp2744:
    000001dc: 	movq	%r12, 0x8(%rbx)
    000001e0: 	movb	$0x0, (%rdi,%r12)
    000001e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f3: 	addq	$0x20, %rax
    000001f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000205: 	je	.Ltmp2741 # Offset: 517
.Ltmp2745:
    0000020b: 	movq	-0x20(%rax), %rbp
    0000020f: 	callq	clock@PLT # Offset: 527
    00000214: 	movq	%rax, end_time(%rip)
    0000021b: 	movq	0x18(%rsp), %rdx
    00000220: 	subq	%fs:0x28, %rdx
    00000229: 	jne	.Ltmp2742 # Offset: 553
    0000022f: 	subq	start_time(%rip), %rax
    00000236: 	pxor	%xmm0, %xmm0
    0000023a: 	movq	%rbp, %rdi
    0000023d: 	cvtsi2sd	%rax, %xmm0
    00000242: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000024a: 	addq	$0x28, %rsp
    0000024e: 	popq	%rbx
    0000024f: 	popq	%rbp
    00000250: 	popq	%r12
    00000252: 	popq	%r13
    00000254: 	popq	%r14
    00000256: 	popq	%r15
    00000258: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 600
    0000025d: 	nopl	(%rax) # Size: 3
.Ltmp2733:
    00000260: 	movapd	%xmm0, %xmm2
    00000264: 	subsd	%xmm1, %xmm2
    00000268: 	cvttsd2si	%xmm2, %rax
    0000026d: 	xorq	%r13, %rax
    00000270: 	jmp	.Ltmp2743 # Offset: 624
.Ltmp2730:
    00000275: 	movl	$0x1, %ecx
    0000027a: 	jmp	.Ltmp2732 # Offset: 634
.Ltmp2739:
    0000027f: 	movq	%rbx, %rdi
    00000282: 	leaq	0x10(%rsp), %rsi
    00000287: 	xorl	%edx, %edx
    00000289: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 649
    0000028e: 	movq	%rax, (%rbx)
    00000291: 	movq	%rax, %rdi
    00000294: 	movq	0x10(%rsp), %rax
    00000299: 	movq	%rax, 0x10(%rbx)
.Ltmp2746:
    0000029d: 	movq	%r12, %rdx
    000002a0: 	movq	%rbp, %rsi
    000002a3: 	callq	memcpy@PLT # Offset: 675
    000002a8: 	movq	0x10(%rsp), %r12
    000002ad: 	movq	(%rbx), %rdi
    000002b0: 	jmp	.Ltmp2744 # Offset: 688
.Ltmp2736:
    000002b5: 	movq	0x8(%rsp), %rsi
    000002ba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 705
    000002c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002cd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002db: 	jne	.Ltmp2745 # Offset: 731
.Ltmp2741:
    000002e1: 	movq	-0x8(%rdx), %rax
    000002e5: 	addq	$0x200, %rax
    000002eb: 	jmp	.Ltmp2745 # Offset: 747
.Ltmp2740:
    000002f0: 	testq	%r12, %r12
    000002f3: 	je	.Ltmp2744 # Offset: 755
    000002f9: 	jmp	.Ltmp2746 # Offset: 761
.Ltmp2742:
    000002fb: 	callq	__stack_chk_fail@PLT # Offset: 763
.Ltmp2738:
    00000300: 	leaq	DATAat0x38110(%rip), %rdi
    00000307: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm16custom_2term_addImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z10test_2termIm16custom_2term_subImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 109
  State       : disassembled
  Address     : 0x25f40
  Size        : 0x2ec
  MaxSize     : 0x2f0
  Offset      : 0x25f40
  Section     : .text
  Orc Section : .local.text._Z10test_2termIm16custom_2term_subImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0108:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movl	%esi, %ebp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x18(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	iterations(%rip), %r14d
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testl	%r14d, %r14d
    00000042: 	jle	.Ltmp2747 # Offset: 66
    00000048: 	leal	-0x4(%rbp), %eax
    0000004b: 	movq	0x8(%rbx), %r10
    0000004f: 	movq	(%rbx), %r9
    00000052: 	xorl	%r13d, %r13d
    00000055: 	shrl	%eax
    00000057: 	leaq	DATAat0x381c8(%rip), %r12
    0000005e: 	leaq	0x5(%rax,%rax), %rax
    00000063: 	movq	%rax, (%rsp)
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2753:
    00000070: 	movq	%r9, %rsi
    00000073: 	movq	%r10, %rdx
    00000076: 	movq	%r9, %rax
    00000079: 	imulq	%r10, %rdx
    0000007d: 	imulq	%r9, %rsi
    00000081: 	addq	%rdx, %rsi
    00000084: 	movq	%r10, %rdx
    00000087: 	imulq	%r9, %rdx
    0000008b: 	addq	%rdx, %rdx
    0000008e: 	subq	%rdx, %rsi
    00000091: 	cmpl	$0x1, %ebp
    00000094: 	jle	.Ltmp2748 # Offset: 148
    0000009a: 	cmpl	$0x3, %ebp
    0000009d: 	jle	.Ltmp2749 # Offset: 157
    000000a3: 	movl	$0x3, %edi
.Ltmp2750:
    000000a8: 	movq	-0x10(%rbx,%rdi,8), %rcx
    000000ad: 	movq	%rax, %r15
    000000b0: 	imulq	%rax, %r15
    000000b4: 	imulq	%rcx, %rax
    000000b8: 	movq	%rcx, %r11
    000000bb: 	imulq	%rcx, %r11
    000000bf: 	movq	%rax, %r8
    000000c2: 	movq	-0x8(%rbx,%rdi,8), %rax
    000000c7: 	addq	%r8, %r8
    000000ca: 	movq	%rax, %rdx
    000000cd: 	imulq	%rax, %rcx
    000000d1: 	imulq	%rax, %rdx
    000000d5: 	addq	%rcx, %rcx
    000000d8: 	addq	%r11, %rdx
    000000db: 	addq	%r15, %rdx
    000000de: 	subq	%r8, %rdx
    000000e1: 	addq	%r11, %rdx
    000000e4: 	subq	%rcx, %rdx
    000000e7: 	movslq	%edi, %rcx
    000000ea: 	addq	$0x2, %rdi
    000000ee: 	addq	%rdx, %rsi
    000000f1: 	cmpq	%rdi, (%rsp)
    000000f5: 	jne	.Ltmp2750 # Offset: 245
    000000f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2751:
    00000100: 	movq	(%rbx,%rcx,8), %rdi
    00000104: 	movq	-0x8(%rbx,%rcx,8), %rax
    00000109: 	addq	$0x1, %rcx
    0000010d: 	movq	%rax, %r8
    00000110: 	movq	%rdi, %rdx
    00000113: 	imulq	%rax, %r8
    00000117: 	imulq	%rdi, %rdx
    0000011b: 	imulq	%rdi, %rax
    0000011f: 	addq	%r8, %rdx
    00000122: 	addq	%rax, %rax
    00000125: 	subq	%rax, %rdx
    00000128: 	addq	%rdx, %rsi
    0000012b: 	cmpl	%ecx, %ebp
    0000012d: 	jg	.Ltmp2751 # Offset: 301
.Ltmp2748:
    0000012f: 	testq	%rsi, %rsi
    00000132: 	je	.Ltmp2752 # Offset: 306
    00000134: 	movl	current_test(%rip), %edx
    0000013a: 	movq	%r12, %rsi
    0000013d: 	movl	$0x1, %edi
    00000142: 	xorl	%eax, %eax
    00000144: 	addl	$0x1, %r13d
    00000148: 	callq	__printf_chk@PLT # Offset: 328
    0000014d: 	movl	iterations(%rip), %r14d
    00000154: 	cmpl	%r14d, %r13d
    00000157: 	jge	.Ltmp2747 # Offset: 343
    00000159: 	movq	0x8(%rbx), %r10
    0000015d: 	movq	(%rbx), %r9
    00000160: 	jmp	.Ltmp2753 # Offset: 352
    00000165: 	nopl	(%rax) # Size: 3
.Ltmp2752:
    00000168: 	addl	$0x1, %r13d
    0000016c: 	cmpl	%r14d, %r13d
    0000016f: 	jl	.Ltmp2753 # Offset: 367
.Ltmp2747:
    00000175: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000017c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000183: 	subq	$0x20, %rax
    00000187: 	cmpq	%rax, %rbx
    0000018a: 	je	.Ltmp2754 # Offset: 394
    00000190: 	movq	0x8(%rsp), %rax
    00000195: 	leaq	0x10(%rbx), %rdi
    00000199: 	movq	%rdi, (%rbx)
    0000019c: 	movq	(%rax), %rbp
    0000019f: 	movq	0x8(%rax), %r12
    000001a3: 	movq	%rbp, %rax
    000001a6: 	addq	%r12, %rax
    000001a9: 	je	.Ltmp2755 # Offset: 425
    000001ab: 	testq	%rbp, %rbp
    000001ae: 	je	.Ltmp2756 # Offset: 430
.Ltmp2755:
    000001b4: 	movq	%r12, 0x10(%rsp)
    000001b9: 	cmpq	$0xf, %r12
    000001bd: 	ja	.Ltmp2757 # Offset: 445
    000001c3: 	cmpq	$0x1, %r12
    000001c7: 	jne	.Ltmp2758 # Offset: 455
    000001cd: 	movzbl	(%rbp), %eax
    000001d1: 	movb	%al, 0x10(%rbx)
.Ltmp2761:
    000001d4: 	movq	%r12, 0x8(%rbx)
    000001d8: 	movb	$0x0, (%rdi,%r12)
    000001dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001eb: 	addq	$0x20, %rax
    000001ef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001fd: 	je	.Ltmp2759 # Offset: 509
.Ltmp2762:
    00000203: 	movq	-0x20(%rax), %rbp
    00000207: 	callq	clock@PLT # Offset: 519
    0000020c: 	movq	%rax, end_time(%rip)
    00000213: 	movq	0x18(%rsp), %rdx
    00000218: 	subq	%fs:0x28, %rdx
    00000221: 	jne	.Ltmp2760 # Offset: 545
    00000227: 	subq	start_time(%rip), %rax
    0000022e: 	pxor	%xmm0, %xmm0
    00000232: 	movq	%rbp, %rdi
    00000235: 	cvtsi2sd	%rax, %xmm0
    0000023a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000242: 	addq	$0x28, %rsp
    00000246: 	popq	%rbx
    00000247: 	popq	%rbp
    00000248: 	popq	%r12
    0000024a: 	popq	%r13
    0000024c: 	popq	%r14
    0000024e: 	popq	%r15
    00000250: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 592
.Ltmp2749:
    00000255: 	movl	$0x1, %ecx
    0000025a: 	jmp	.Ltmp2751 # Offset: 602
.Ltmp2757:
    0000025f: 	movq	%rbx, %rdi
    00000262: 	leaq	0x10(%rsp), %rsi
    00000267: 	xorl	%edx, %edx
    00000269: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 617
    0000026e: 	movq	%rax, (%rbx)
    00000271: 	movq	%rax, %rdi
    00000274: 	movq	0x10(%rsp), %rax
    00000279: 	movq	%rax, 0x10(%rbx)
.Ltmp2763:
    0000027d: 	movq	%r12, %rdx
    00000280: 	movq	%rbp, %rsi
    00000283: 	callq	memcpy@PLT # Offset: 643
    00000288: 	movq	0x10(%rsp), %r12
    0000028d: 	movq	(%rbx), %rdi
    00000290: 	jmp	.Ltmp2761 # Offset: 656
.Ltmp2754:
    00000295: 	movq	0x8(%rsp), %rsi
    0000029a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 673
    000002a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ad: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000002b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002bb: 	jne	.Ltmp2762 # Offset: 699
.Ltmp2759:
    000002c1: 	movq	-0x8(%rdx), %rax
    000002c5: 	addq	$0x200, %rax
    000002cb: 	jmp	.Ltmp2762 # Offset: 715
.Ltmp2758:
    000002d0: 	testq	%r12, %r12
    000002d3: 	je	.Ltmp2761 # Offset: 723
    000002d9: 	jmp	.Ltmp2763 # Offset: 729
.Ltmp2760:
    000002db: 	callq	__stack_chk_fail@PLT # Offset: 731
.Ltmp2756:
    000002e0: 	leaq	DATAat0x38110(%rip), %rdi
    000002e7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 743
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIm16custom_2term_subImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeImEvd" after disassembly {
  Number      : 110
  State       : disassembled
  Address     : 0x26230
  Size        : 0x3870
  MaxSize     : 0x3870
  Offset      : 0x26230
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeImEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0109:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2764:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2764 # Offset: 37
    00000027: 	subq	$0xb08, %rsp
    0000002e: 	leaq	DATAat0x3858a(%rip), %rsi
    00000035: 	movsd	%xmm0, (%rsp)
    0000003a: 	movq	%fs:0x28, %rax
    00000043: 	movq	%rax, 0xfaf8(%rsp)
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	0x50(%rsp), %rax
    00000052: 	movq	%rax, %rdi
    00000055: 	movq	%rax, 0x8(%rsp)
    0000005a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 90
    0000005f: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000067: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000006f: 	leaq	0x30(%rsp), %rsi
    00000074: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000007b: 	movaps	%xmm2, 0x30(%rsp)
    00000080: 	movaps	%xmm3, 0x40(%rsp)
    00000085: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 133
    0000008a: 	movsd	init_value(%rip), %xmm1
    00000092: 	movsd	(%rsp), %xmm0
    00000097: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000009f: 	jae	.Ltmp2765 # Offset: 159
    000000a5: 	cvttsd2si	%xmm1, %rax
.Ltmp3028:
    000000aa: 	movq	%rax, %xmm1
    000000af: 	leaq	0xf0(%rsp), %rbp
    000000b7: 	leaq	0xfaf0(%rsp), %rbx
    000000bf: 	punpcklqdq	%xmm1, %xmm1
    000000c3: 	movq	%rbp, %rax
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2766:
    000000d0: 	movaps	%xmm1, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp2766 # Offset: 218
    000000dc: 	comisd	DATAat0x385f0(%rip), %xmm0
    000000e4: 	jae	.Ltmp2767 # Offset: 228
    000000ea: 	cvttsd2si	%xmm0, %rax
    000000ef: 	movq	%rax, 0x10(%rsp)
    000000f4: 	movq	%rax, %rdi
.Ltmp3027:
    000000f7: 	leaq	0x2(%rdi), %rsi
    000000fb: 	leaq	(%rdi,%rdi), %rax
    000000ff: 	xorl	%edx, %edx
    00000101: 	movq	%rax, 0x18(%rsp)
    00000106: 	leaq	0xd0(%rsp), %r12
    0000010e: 	divq	%rsi
    00000111: 	movq	%rsi, 0x20(%rsp)
    00000116: 	movq	0x8(%rsp), %rsi
    0000011b: 	leaq	DATAat0x381d8(%rip), %rdx
    00000122: 	addq	%rdi, %rax
    00000125: 	movq	%r12, %rdi
    00000128: 	movq	%rax, 0x28(%rsp)
    0000012d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 301
    00000132: 	callq	clock@PLT # Offset: 306
    00000137: 	movl	iterations(%rip), %ecx
    0000013d: 	xorl	%r13d, %r13d
    00000140: 	movabsq	$-0x8000000000000000, %r14
    0000014a: 	movq	%rax, start_time(%rip)
    00000151: 	leaq	DATAat0x381c8(%rip), %r15
    00000158: 	testl	%ecx, %ecx
    0000015a: 	jle	.Ltmp2768 # Offset: 346
    0000015c: 	nopl	(%rax) # Size: 4
.Ltmp2772:
    00000160: 	movq	%rbp, %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2769:
    00000170: 	paddq	(%rax), %xmm0
    00000174: 	addq	$0x10, %rax
    00000178: 	cmpq	%rbx, %rax
    0000017b: 	jne	.Ltmp2769 # Offset: 379
    0000017d: 	movsd	init_value(%rip), %xmm1
    00000185: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000018d: 	jae	.Ltmp2770 # Offset: 397
    00000193: 	cvttsd2si	%xmm1, %rax
.Ltmp3026:
    00000198: 	movdqa	%xmm0, %xmm1
    0000019c: 	imulq	$0x1f40, %rax, %rdx
    000001a3: 	psrldq	$0x8, %xmm1
    000001a8: 	paddq	%xmm1, %xmm0
    000001ac: 	movq	%xmm0, %rax
    000001b1: 	cmpq	%rax, %rdx
    000001b4: 	je	.Ltmp2771 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	movq	%r15, %rsi
    000001bf: 	movl	$0x1, %edi
    000001c4: 	xorl	%eax, %eax
    000001c6: 	callq	__printf_chk@PLT # Offset: 454
    000001cb: 	movl	iterations(%rip), %ecx
.Ltmp2771:
    000001d1: 	addl	$0x1, %r13d
    000001d5: 	cmpl	%ecx, %r13d
    000001d8: 	jl	.Ltmp2772 # Offset: 472
.Ltmp2768:
    000001da: 	movq	%r12, %rsi
    000001dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 484
    000001e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001fe: 	je	.Ltmp2773 # Offset: 510
.Ltmp3029:
    00000204: 	movq	-0x20(%rax), %r13
    00000208: 	callq	clock@PLT # Offset: 520
    0000020d: 	pxor	%xmm0, %xmm0
    00000211: 	movq	%rax, end_time(%rip)
    00000218: 	movq	%r13, %rdi
    0000021b: 	subq	start_time(%rip), %rax
    00000222: 	cvtsi2sd	%rax, %xmm0
    00000227: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000022f: 	callq	_Z13record_resultdPKc # Offset: 559
    00000234: 	movq	0xd0(%rsp), %rdi
    0000023c: 	leaq	0xe0(%rsp), %rax
    00000244: 	movq	%rax, (%rsp)
    00000248: 	cmpq	%rax, %rdi
    0000024b: 	je	.Ltmp2774 # Offset: 587
    0000024d: 	movq	0xe0(%rsp), %rax
    00000255: 	leaq	0x1(%rax), %rsi
    00000259: 	callq	_ZdlPvm@PLT # Offset: 601
.Ltmp2774:
    0000025e: 	movq	0x8(%rsp), %rsi
    00000263: 	leaq	DATAat0x381de(%rip), %rdx
    0000026a: 	movq	%r12, %rdi
    0000026d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 621
    00000272: 	callq	clock@PLT # Offset: 626
    00000277: 	movl	iterations(%rip), %ecx
    0000027d: 	xorl	%r13d, %r13d
    00000280: 	movabsq	$-0x8000000000000000, %r14
    0000028a: 	movq	%rax, start_time(%rip)
    00000291: 	leaq	DATAat0x381c8(%rip), %r15
    00000298: 	testl	%ecx, %ecx
    0000029a: 	jle	.Ltmp2775 # Offset: 666
    0000029c: 	nopl	(%rax) # Size: 4
.Ltmp2779:
    000002a0: 	movq	%rbp, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2776:
    000002b0: 	paddq	(%rax), %xmm0
    000002b4: 	addq	$0x10, %rax
    000002b8: 	cmpq	%rbx, %rax
    000002bb: 	jne	.Ltmp2776 # Offset: 699
    000002bd: 	movsd	init_value(%rip), %xmm1
    000002c5: 	comisd	DATAat0x385f0(%rip), %xmm1
    000002cd: 	jae	.Ltmp2777 # Offset: 717
    000002d3: 	cvttsd2si	%xmm1, %rax
.Ltmp3025:
    000002d8: 	movdqa	%xmm0, %xmm1
    000002dc: 	imulq	$0x1f40, %rax, %rdx
    000002e3: 	psrldq	$0x8, %xmm1
    000002e8: 	paddq	%xmm1, %xmm0
    000002ec: 	movq	%xmm0, %rax
    000002f1: 	cmpq	%rax, %rdx
    000002f4: 	je	.Ltmp2778 # Offset: 756
    000002f6: 	movl	current_test(%rip), %edx
    000002fc: 	movq	%r15, %rsi
    000002ff: 	movl	$0x1, %edi
    00000304: 	xorl	%eax, %eax
    00000306: 	callq	__printf_chk@PLT # Offset: 774
    0000030b: 	movl	iterations(%rip), %ecx
.Ltmp2778:
    00000311: 	addl	$0x1, %r13d
    00000315: 	cmpl	%ecx, %r13d
    00000318: 	jl	.Ltmp2779 # Offset: 792
.Ltmp2775:
    0000031a: 	movq	%r12, %rsi
    0000031d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000324: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 804
    00000329: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000330: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000337: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033e: 	je	.Ltmp2780 # Offset: 830
.Ltmp3072:
    00000344: 	movq	-0x20(%rax), %r13
    00000348: 	callq	clock@PLT # Offset: 840
    0000034d: 	pxor	%xmm0, %xmm0
    00000351: 	movq	%rax, end_time(%rip)
    00000358: 	movq	%r13, %rdi
    0000035b: 	subq	start_time(%rip), %rax
    00000362: 	cvtsi2sd	%rax, %xmm0
    00000367: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000036f: 	callq	_Z13record_resultdPKc # Offset: 879
    00000374: 	movq	0xd0(%rsp), %rdi
    0000037c: 	cmpq	(%rsp), %rdi
    00000380: 	je	.Ltmp2781 # Offset: 896
    00000382: 	movq	0xe0(%rsp), %rax
    0000038a: 	leaq	0x1(%rax), %rsi
    0000038e: 	callq	_ZdlPvm@PLT # Offset: 910
.Ltmp2781:
    00000393: 	movq	0x8(%rsp), %rsi
    00000398: 	leaq	DATAat0x381e8(%rip), %rdx
    0000039f: 	movq	%r12, %rdi
    000003a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 930
    000003a7: 	callq	clock@PLT # Offset: 935
    000003ac: 	movl	iterations(%rip), %ecx
    000003b2: 	xorl	%r13d, %r13d
    000003b5: 	movabsq	$-0x8000000000000000, %r14
    000003bf: 	movq	%rax, start_time(%rip)
    000003c6: 	leaq	DATAat0x381c8(%rip), %r15
    000003cd: 	testl	%ecx, %ecx
    000003cf: 	jle	.Ltmp2782 # Offset: 975
    000003d1: 	nopl	(%rax) # Size: 7
.Ltmp2786:
    000003d8: 	movq	%rbp, %rax
    000003db: 	pxor	%xmm0, %xmm0
    000003df: 	nop # Size: 1
.Ltmp2783:
    000003e0: 	paddq	(%rax), %xmm0
    000003e4: 	addq	$0x10, %rax
    000003e8: 	cmpq	%rbx, %rax
    000003eb: 	jne	.Ltmp2783 # Offset: 1003
    000003ed: 	movsd	init_value(%rip), %xmm1
    000003f5: 	comisd	DATAat0x385f0(%rip), %xmm1
    000003fd: 	jae	.Ltmp2784 # Offset: 1021
    00000403: 	cvttsd2si	%xmm1, %rax
.Ltmp3024:
    00000408: 	movdqa	%xmm0, %xmm1
    0000040c: 	imulq	$0x1f40, %rax, %rdx
    00000413: 	psrldq	$0x8, %xmm1
    00000418: 	paddq	%xmm1, %xmm0
    0000041c: 	movq	%xmm0, %rax
    00000421: 	cmpq	%rax, %rdx
    00000424: 	je	.Ltmp2785 # Offset: 1060
    00000426: 	movl	current_test(%rip), %edx
    0000042c: 	movq	%r15, %rsi
    0000042f: 	movl	$0x1, %edi
    00000434: 	xorl	%eax, %eax
    00000436: 	callq	__printf_chk@PLT # Offset: 1078
    0000043b: 	movl	iterations(%rip), %ecx
.Ltmp2785:
    00000441: 	addl	$0x1, %r13d
    00000445: 	cmpl	%ecx, %r13d
    00000448: 	jl	.Ltmp2786 # Offset: 1096
.Ltmp2782:
    0000044a: 	movq	%r12, %rsi
    0000044d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000454: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1108
    00000459: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000460: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000467: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000046e: 	je	.Ltmp2787 # Offset: 1134
.Ltmp3071:
    00000474: 	movq	-0x20(%rax), %r13
    00000478: 	callq	clock@PLT # Offset: 1144
    0000047d: 	pxor	%xmm0, %xmm0
    00000481: 	movq	%rax, end_time(%rip)
    00000488: 	movq	%r13, %rdi
    0000048b: 	subq	start_time(%rip), %rax
    00000492: 	cvtsi2sd	%rax, %xmm0
    00000497: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000049f: 	callq	_Z13record_resultdPKc # Offset: 1183
    000004a4: 	movq	0xd0(%rsp), %rdi
    000004ac: 	cmpq	(%rsp), %rdi
    000004b0: 	je	.Ltmp2788 # Offset: 1200
    000004b2: 	movq	0xe0(%rsp), %rax
    000004ba: 	leaq	0x1(%rax), %rsi
    000004be: 	callq	_ZdlPvm@PLT # Offset: 1214
.Ltmp2788:
    000004c3: 	movq	0x8(%rsp), %rsi
    000004c8: 	leaq	DATAat0x381f7(%rip), %rdx
    000004cf: 	movq	%r12, %rdi
    000004d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1234
    000004d7: 	callq	clock@PLT # Offset: 1239
    000004dc: 	movl	iterations(%rip), %ecx
    000004e2: 	xorl	%r13d, %r13d
    000004e5: 	movabsq	$-0x8000000000000000, %r14
    000004ef: 	movq	%rax, start_time(%rip)
    000004f6: 	leaq	DATAat0x381c8(%rip), %r15
    000004fd: 	testl	%ecx, %ecx
    000004ff: 	jle	.Ltmp2789 # Offset: 1279
    00000501: 	nopl	(%rax) # Size: 7
.Ltmp2793:
    00000508: 	movq	%rbp, %rax
    0000050b: 	pxor	%xmm0, %xmm0
    0000050f: 	nop # Size: 1
.Ltmp2790:
    00000510: 	psubq	(%rax), %xmm0
    00000514: 	addq	$0x10, %rax
    00000518: 	cmpq	%rbx, %rax
    0000051b: 	jne	.Ltmp2790 # Offset: 1307
    0000051d: 	movsd	init_value(%rip), %xmm1
    00000525: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000052d: 	jae	.Ltmp2791 # Offset: 1325
    00000533: 	cvttsd2si	%xmm1, %rax
.Ltmp3023:
    00000538: 	movdqa	%xmm0, %xmm1
    0000053c: 	imulq	$-0x1f40, %rax, %rdx
    00000543: 	psrldq	$0x8, %xmm1
    00000548: 	paddq	%xmm1, %xmm0
    0000054c: 	movq	%xmm0, %rax
    00000551: 	cmpq	%rax, %rdx
    00000554: 	je	.Ltmp2792 # Offset: 1364
    00000556: 	movl	current_test(%rip), %edx
    0000055c: 	movq	%r15, %rsi
    0000055f: 	movl	$0x1, %edi
    00000564: 	xorl	%eax, %eax
    00000566: 	callq	__printf_chk@PLT # Offset: 1382
    0000056b: 	movl	iterations(%rip), %ecx
.Ltmp2792:
    00000571: 	addl	$0x1, %r13d
    00000575: 	cmpl	%ecx, %r13d
    00000578: 	jl	.Ltmp2793 # Offset: 1400
.Ltmp2789:
    0000057a: 	movq	%r12, %rsi
    0000057d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000584: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1412
    00000589: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000590: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000597: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000059e: 	je	.Ltmp2794 # Offset: 1438
.Ltmp3070:
    000005a4: 	movq	-0x20(%rax), %r13
    000005a8: 	callq	clock@PLT # Offset: 1448
    000005ad: 	pxor	%xmm0, %xmm0
    000005b1: 	movq	%rax, end_time(%rip)
    000005b8: 	movq	%r13, %rdi
    000005bb: 	subq	start_time(%rip), %rax
    000005c2: 	cvtsi2sd	%rax, %xmm0
    000005c7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000005cf: 	callq	_Z13record_resultdPKc # Offset: 1487
    000005d4: 	movq	0xd0(%rsp), %rdi
    000005dc: 	cmpq	(%rsp), %rdi
    000005e0: 	je	.Ltmp2795 # Offset: 1504
    000005e2: 	movq	0xe0(%rsp), %rax
    000005ea: 	leaq	0x1(%rax), %rsi
    000005ee: 	callq	_ZdlPvm@PLT # Offset: 1518
.Ltmp2795:
    000005f3: 	movq	0x8(%rsp), %rsi
    000005f8: 	leaq	DATAat0x381ff(%rip), %rdx
    000005ff: 	movq	%r12, %rdi
    00000602: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1538
    00000607: 	callq	clock@PLT # Offset: 1543
    0000060c: 	movl	iterations(%rip), %ecx
    00000612: 	xorl	%r13d, %r13d
    00000615: 	movabsq	$-0x8000000000000000, %r14
    0000061f: 	movq	%rax, start_time(%rip)
    00000626: 	leaq	DATAat0x381c8(%rip), %r15
    0000062d: 	testl	%ecx, %ecx
    0000062f: 	jle	.Ltmp2796 # Offset: 1583
    00000631: 	nopl	(%rax) # Size: 7
.Ltmp2800:
    00000638: 	movq	%rbp, %rax
    0000063b: 	pxor	%xmm0, %xmm0
    0000063f: 	nop # Size: 1
.Ltmp2797:
    00000640: 	paddq	(%rax), %xmm0
    00000644: 	addq	$0x10, %rax
    00000648: 	cmpq	%rbx, %rax
    0000064b: 	jne	.Ltmp2797 # Offset: 1611
    0000064d: 	movsd	init_value(%rip), %xmm1
    00000655: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000065d: 	jae	.Ltmp2798 # Offset: 1629
    00000663: 	cvttsd2si	%xmm1, %rax
.Ltmp3022:
    00000668: 	movdqa	%xmm0, %xmm1
    0000066c: 	imulq	$0x1f40, %rax, %rdx
    00000673: 	psrldq	$0x8, %xmm1
    00000678: 	paddq	%xmm1, %xmm0
    0000067c: 	movq	%xmm0, %rax
    00000681: 	cmpq	%rax, %rdx
    00000684: 	je	.Ltmp2799 # Offset: 1668
    00000686: 	movl	current_test(%rip), %edx
    0000068c: 	movq	%r15, %rsi
    0000068f: 	movl	$0x1, %edi
    00000694: 	xorl	%eax, %eax
    00000696: 	callq	__printf_chk@PLT # Offset: 1686
    0000069b: 	movl	iterations(%rip), %ecx
.Ltmp2799:
    000006a1: 	addl	$0x1, %r13d
    000006a5: 	cmpl	%ecx, %r13d
    000006a8: 	jl	.Ltmp2800 # Offset: 1704
.Ltmp2796:
    000006aa: 	movq	%r12, %rsi
    000006ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000006b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1716
    000006b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006c0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006ce: 	je	.Ltmp2801 # Offset: 1742
.Ltmp3069:
    000006d4: 	movq	-0x20(%rax), %r13
    000006d8: 	callq	clock@PLT # Offset: 1752
    000006dd: 	pxor	%xmm0, %xmm0
    000006e1: 	movq	%rax, end_time(%rip)
    000006e8: 	movq	%r13, %rdi
    000006eb: 	subq	start_time(%rip), %rax
    000006f2: 	cvtsi2sd	%rax, %xmm0
    000006f7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006ff: 	callq	_Z13record_resultdPKc # Offset: 1791
    00000704: 	movq	0xd0(%rsp), %rdi
    0000070c: 	cmpq	(%rsp), %rdi
    00000710: 	je	.Ltmp2802 # Offset: 1808
    00000712: 	movq	0xe0(%rsp), %rax
    0000071a: 	leaq	0x1(%rax), %rsi
    0000071e: 	callq	_ZdlPvm@PLT # Offset: 1822
.Ltmp2802:
    00000723: 	movq	0x8(%rsp), %rsi
    00000728: 	leaq	DATAat0x3820d(%rip), %rdx
    0000072f: 	movq	%r12, %rdi
    00000732: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1842
    00000737: 	callq	clock@PLT # Offset: 1847
    0000073c: 	movl	iterations(%rip), %ecx
    00000742: 	xorl	%r13d, %r13d
    00000745: 	movabsq	$-0x8000000000000000, %r14
    0000074f: 	movq	%rax, start_time(%rip)
    00000756: 	leaq	DATAat0x381c8(%rip), %r15
    0000075d: 	testl	%ecx, %ecx
    0000075f: 	jle	.Ltmp2803 # Offset: 1887
    00000761: 	nopl	(%rax) # Size: 7
.Ltmp2807:
    00000768: 	movq	%rbp, %rax
    0000076b: 	pxor	%xmm0, %xmm0
    0000076f: 	nop # Size: 1
.Ltmp2804:
    00000770: 	psubq	(%rax), %xmm0
    00000774: 	addq	$0x10, %rax
    00000778: 	cmpq	%rbx, %rax
    0000077b: 	jne	.Ltmp2804 # Offset: 1915
    0000077d: 	movsd	init_value(%rip), %xmm1
    00000785: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000078d: 	jae	.Ltmp2805 # Offset: 1933
    00000793: 	cvttsd2si	%xmm1, %rax
.Ltmp3021:
    00000798: 	movdqa	%xmm0, %xmm1
    0000079c: 	imulq	$-0x1f40, %rax, %rdx
    000007a3: 	psrldq	$0x8, %xmm1
    000007a8: 	paddq	%xmm1, %xmm0
    000007ac: 	movq	%xmm0, %rax
    000007b1: 	cmpq	%rax, %rdx
    000007b4: 	je	.Ltmp2806 # Offset: 1972
    000007b6: 	movl	current_test(%rip), %edx
    000007bc: 	movq	%r15, %rsi
    000007bf: 	movl	$0x1, %edi
    000007c4: 	xorl	%eax, %eax
    000007c6: 	callq	__printf_chk@PLT # Offset: 1990
    000007cb: 	movl	iterations(%rip), %ecx
.Ltmp2806:
    000007d1: 	addl	$0x1, %r13d
    000007d5: 	cmpl	%ecx, %r13d
    000007d8: 	jl	.Ltmp2807 # Offset: 2008
.Ltmp2803:
    000007da: 	movq	%r12, %rsi
    000007dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2020
    000007e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007fe: 	je	.Ltmp2808 # Offset: 2046
.Ltmp3068:
    00000804: 	movq	-0x20(%rax), %r13
    00000808: 	callq	clock@PLT # Offset: 2056
    0000080d: 	pxor	%xmm0, %xmm0
    00000811: 	movq	%rax, end_time(%rip)
    00000818: 	movq	%r13, %rdi
    0000081b: 	subq	start_time(%rip), %rax
    00000822: 	cvtsi2sd	%rax, %xmm0
    00000827: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000082f: 	callq	_Z13record_resultdPKc # Offset: 2095
    00000834: 	movq	0xd0(%rsp), %rdi
    0000083c: 	cmpq	(%rsp), %rdi
    00000840: 	je	.Ltmp2809 # Offset: 2112
    00000842: 	movq	0xe0(%rsp), %rax
    0000084a: 	leaq	0x1(%rax), %rsi
    0000084e: 	callq	_ZdlPvm@PLT # Offset: 2126
.Ltmp2809:
    00000853: 	movq	0x8(%rsp), %rsi
    00000858: 	leaq	DATAat0x38219(%rip), %rdx
    0000085f: 	movq	%r12, %rdi
    00000862: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2146
    00000867: 	callq	clock@PLT # Offset: 2151
    0000086c: 	movl	iterations(%rip), %ecx
    00000872: 	xorl	%r13d, %r13d
    00000875: 	movabsq	$-0x8000000000000000, %r14
    0000087f: 	movq	%rax, start_time(%rip)
    00000886: 	leaq	DATAat0x381c8(%rip), %r15
    0000088d: 	testl	%ecx, %ecx
    0000088f: 	jle	.Ltmp2810 # Offset: 2191
    00000891: 	nopl	(%rax) # Size: 7
.Ltmp2814:
    00000898: 	movq	%rbp, %rax
    0000089b: 	pxor	%xmm0, %xmm0
    0000089f: 	nop # Size: 1
.Ltmp2811:
    000008a0: 	paddq	(%rax), %xmm0
    000008a4: 	addq	$0x10, %rax
    000008a8: 	cmpq	%rbx, %rax
    000008ab: 	jne	.Ltmp2811 # Offset: 2219
    000008ad: 	movsd	init_value(%rip), %xmm1
    000008b5: 	comisd	DATAat0x385f0(%rip), %xmm1
    000008bd: 	jae	.Ltmp2812 # Offset: 2237
    000008c3: 	cvttsd2si	%xmm1, %rax
.Ltmp3020:
    000008c8: 	movdqa	%xmm0, %xmm1
    000008cc: 	imulq	$0x1f40, %rax, %rdx
    000008d3: 	psrldq	$0x8, %xmm1
    000008d8: 	paddq	%xmm1, %xmm0
    000008dc: 	movq	%xmm0, %rax
    000008e1: 	cmpq	%rax, %rdx
    000008e4: 	je	.Ltmp2813 # Offset: 2276
    000008e6: 	movl	current_test(%rip), %edx
    000008ec: 	movq	%r15, %rsi
    000008ef: 	movl	$0x1, %edi
    000008f4: 	xorl	%eax, %eax
    000008f6: 	callq	__printf_chk@PLT # Offset: 2294
    000008fb: 	movl	iterations(%rip), %ecx
.Ltmp2813:
    00000901: 	addl	$0x1, %r13d
    00000905: 	cmpl	%ecx, %r13d
    00000908: 	jl	.Ltmp2814 # Offset: 2312
.Ltmp2810:
    0000090a: 	movq	%r12, %rsi
    0000090d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000914: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2324
    00000919: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000920: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000927: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000092e: 	je	.Ltmp2815 # Offset: 2350
.Ltmp3067:
    00000934: 	movq	-0x20(%rax), %r13
    00000938: 	callq	clock@PLT # Offset: 2360
    0000093d: 	pxor	%xmm0, %xmm0
    00000941: 	movq	%rax, end_time(%rip)
    00000948: 	movq	%r13, %rdi
    0000094b: 	subq	start_time(%rip), %rax
    00000952: 	cvtsi2sd	%rax, %xmm0
    00000957: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000095f: 	callq	_Z13record_resultdPKc # Offset: 2399
    00000964: 	movq	0xd0(%rsp), %rdi
    0000096c: 	cmpq	(%rsp), %rdi
    00000970: 	je	.Ltmp2816 # Offset: 2416
    00000972: 	movq	0xe0(%rsp), %rax
    0000097a: 	leaq	0x1(%rax), %rsi
    0000097e: 	callq	_ZdlPvm@PLT # Offset: 2430
.Ltmp2816:
    00000983: 	movq	0x8(%rsp), %rsi
    00000988: 	leaq	DATAat0x38224(%rip), %rdx
    0000098f: 	movq	%r12, %rdi
    00000992: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2450
    00000997: 	callq	clock@PLT # Offset: 2455
    0000099c: 	movl	iterations(%rip), %ecx
    000009a2: 	xorl	%r13d, %r13d
    000009a5: 	movabsq	$-0x8000000000000000, %r14
    000009af: 	movq	%rax, start_time(%rip)
    000009b6: 	leaq	DATAat0x381c8(%rip), %r15
    000009bd: 	testl	%ecx, %ecx
    000009bf: 	jle	.Ltmp2817 # Offset: 2495
    000009c1: 	nopl	(%rax) # Size: 7
.Ltmp2821:
    000009c8: 	movq	%rbp, %rax
    000009cb: 	pxor	%xmm0, %xmm0
    000009cf: 	nop # Size: 1
.Ltmp2818:
    000009d0: 	paddq	(%rax), %xmm0
    000009d4: 	addq	$0x10, %rax
    000009d8: 	cmpq	%rbx, %rax
    000009db: 	jne	.Ltmp2818 # Offset: 2523
    000009dd: 	movsd	init_value(%rip), %xmm1
    000009e5: 	comisd	DATAat0x385f0(%rip), %xmm1
    000009ed: 	jae	.Ltmp2819 # Offset: 2541
    000009f3: 	cvttsd2si	%xmm1, %rax
.Ltmp3019:
    000009f8: 	movdqa	%xmm0, %xmm1
    000009fc: 	imulq	$0x1f40, %rax, %rdx
    00000a03: 	psrldq	$0x8, %xmm1
    00000a08: 	paddq	%xmm1, %xmm0
    00000a0c: 	movq	%xmm0, %rax
    00000a11: 	cmpq	%rax, %rdx
    00000a14: 	je	.Ltmp2820 # Offset: 2580
    00000a16: 	movl	current_test(%rip), %edx
    00000a1c: 	movq	%r15, %rsi
    00000a1f: 	movl	$0x1, %edi
    00000a24: 	xorl	%eax, %eax
    00000a26: 	callq	__printf_chk@PLT # Offset: 2598
    00000a2b: 	movl	iterations(%rip), %ecx
.Ltmp2820:
    00000a31: 	addl	$0x1, %r13d
    00000a35: 	cmpl	%ecx, %r13d
    00000a38: 	jl	.Ltmp2821 # Offset: 2616
.Ltmp2817:
    00000a3a: 	movq	%r12, %rsi
    00000a3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a44: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2628
    00000a49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a50: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a57: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a5e: 	je	.Ltmp2822 # Offset: 2654
.Ltmp3066:
    00000a64: 	movq	-0x20(%rax), %r13
    00000a68: 	callq	clock@PLT # Offset: 2664
    00000a6d: 	pxor	%xmm0, %xmm0
    00000a71: 	movq	%rax, end_time(%rip)
    00000a78: 	movq	%r13, %rdi
    00000a7b: 	subq	start_time(%rip), %rax
    00000a82: 	cvtsi2sd	%rax, %xmm0
    00000a87: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000a8f: 	callq	_Z13record_resultdPKc # Offset: 2703
    00000a94: 	movq	0xd0(%rsp), %rdi
    00000a9c: 	cmpq	(%rsp), %rdi
    00000aa0: 	je	.Ltmp2823 # Offset: 2720
    00000aa2: 	movq	0xe0(%rsp), %rax
    00000aaa: 	leaq	0x1(%rax), %rsi
    00000aae: 	callq	_ZdlPvm@PLT # Offset: 2734
.Ltmp2823:
    00000ab3: 	movq	0x8(%rsp), %rsi
    00000ab8: 	leaq	DATAat0x38233(%rip), %rdx
    00000abf: 	movq	%r12, %rdi
    00000ac2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2754
    00000ac7: 	callq	clock@PLT # Offset: 2759
    00000acc: 	movl	iterations(%rip), %ecx
    00000ad2: 	xorl	%r13d, %r13d
    00000ad5: 	movabsq	$-0x8000000000000000, %r14
    00000adf: 	movq	%rax, start_time(%rip)
    00000ae6: 	leaq	DATAat0x381c8(%rip), %r15
    00000aed: 	testl	%ecx, %ecx
    00000aef: 	jle	.Ltmp2824 # Offset: 2799
    00000af1: 	nopl	(%rax) # Size: 7
.Ltmp2828:
    00000af8: 	movq	%rbp, %rax
    00000afb: 	pxor	%xmm0, %xmm0
    00000aff: 	nop # Size: 1
.Ltmp2825:
    00000b00: 	paddq	(%rax), %xmm0
    00000b04: 	addq	$0x10, %rax
    00000b08: 	cmpq	%rbx, %rax
    00000b0b: 	jne	.Ltmp2825 # Offset: 2827
    00000b0d: 	movsd	init_value(%rip), %xmm1
    00000b15: 	comisd	DATAat0x385f0(%rip), %xmm1
    00000b1d: 	jae	.Ltmp2826 # Offset: 2845
    00000b23: 	cvttsd2si	%xmm1, %rax
.Ltmp3018:
    00000b28: 	movdqa	%xmm0, %xmm1
    00000b2c: 	imulq	$0x1f40, %rax, %rdx
    00000b33: 	psrldq	$0x8, %xmm1
    00000b38: 	paddq	%xmm1, %xmm0
    00000b3c: 	movq	%xmm0, %rax
    00000b41: 	cmpq	%rax, %rdx
    00000b44: 	je	.Ltmp2827 # Offset: 2884
    00000b46: 	movl	current_test(%rip), %edx
    00000b4c: 	movq	%r15, %rsi
    00000b4f: 	movl	$0x1, %edi
    00000b54: 	xorl	%eax, %eax
    00000b56: 	callq	__printf_chk@PLT # Offset: 2902
    00000b5b: 	movl	iterations(%rip), %ecx
.Ltmp2827:
    00000b61: 	addl	$0x1, %r13d
    00000b65: 	cmpl	%ecx, %r13d
    00000b68: 	jl	.Ltmp2828 # Offset: 2920
.Ltmp2824:
    00000b6a: 	movq	%r12, %rsi
    00000b6d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b74: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2932
    00000b79: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b80: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b87: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b8e: 	je	.Ltmp2829 # Offset: 2958
.Ltmp3065:
    00000b94: 	movq	-0x20(%rax), %r13
    00000b98: 	callq	clock@PLT # Offset: 2968
    00000b9d: 	pxor	%xmm0, %xmm0
    00000ba1: 	movq	%rax, end_time(%rip)
    00000ba8: 	movq	%r13, %rdi
    00000bab: 	subq	start_time(%rip), %rax
    00000bb2: 	cvtsi2sd	%rax, %xmm0
    00000bb7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000bbf: 	callq	_Z13record_resultdPKc # Offset: 3007
    00000bc4: 	movq	0xd0(%rsp), %rdi
    00000bcc: 	cmpq	(%rsp), %rdi
    00000bd0: 	je	.Ltmp2830 # Offset: 3024
    00000bd2: 	movq	0xe0(%rsp), %rax
    00000bda: 	leaq	0x1(%rax), %rsi
    00000bde: 	callq	_ZdlPvm@PLT # Offset: 3038
.Ltmp2830:
    00000be3: 	movq	0x8(%rsp), %rsi
    00000be8: 	leaq	DATAat0x3823d(%rip), %rdx
    00000bef: 	movq	%r12, %rdi
    00000bf2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3058
    00000bf7: 	callq	clock@PLT # Offset: 3063
    00000bfc: 	movl	iterations(%rip), %ecx
    00000c02: 	xorl	%r13d, %r13d
    00000c05: 	movabsq	$-0x8000000000000000, %r14
    00000c0f: 	movq	%rax, start_time(%rip)
    00000c16: 	leaq	DATAat0x381c8(%rip), %r15
    00000c1d: 	testl	%ecx, %ecx
    00000c1f: 	jle	.Ltmp2831 # Offset: 3103
    00000c21: 	nopl	(%rax) # Size: 7
.Ltmp2835:
    00000c28: 	movq	%rbp, %rax
    00000c2b: 	pxor	%xmm0, %xmm0
    00000c2f: 	nop # Size: 1
.Ltmp2832:
    00000c30: 	paddq	(%rax), %xmm0
    00000c34: 	addq	$0x10, %rax
    00000c38: 	cmpq	%rbx, %rax
    00000c3b: 	jne	.Ltmp2832 # Offset: 3131
    00000c3d: 	movsd	init_value(%rip), %xmm1
    00000c45: 	comisd	DATAat0x385f0(%rip), %xmm1
    00000c4d: 	jae	.Ltmp2833 # Offset: 3149
    00000c53: 	cvttsd2si	%xmm1, %rax
.Ltmp3017:
    00000c58: 	movdqa	%xmm0, %xmm1
    00000c5c: 	imulq	$0x1f40, %rax, %rdx
    00000c63: 	psrldq	$0x8, %xmm1
    00000c68: 	paddq	%xmm1, %xmm0
    00000c6c: 	movq	%xmm0, %rax
    00000c71: 	cmpq	%rax, %rdx
    00000c74: 	je	.Ltmp2834 # Offset: 3188
    00000c76: 	movl	current_test(%rip), %edx
    00000c7c: 	movq	%r15, %rsi
    00000c7f: 	movl	$0x1, %edi
    00000c84: 	xorl	%eax, %eax
    00000c86: 	callq	__printf_chk@PLT # Offset: 3206
    00000c8b: 	movl	iterations(%rip), %ecx
.Ltmp2834:
    00000c91: 	addl	$0x1, %r13d
    00000c95: 	cmpl	%ecx, %r13d
    00000c98: 	jl	.Ltmp2835 # Offset: 3224
.Ltmp2831:
    00000c9a: 	movq	%r12, %rsi
    00000c9d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ca4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3236
    00000ca9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cb0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cb7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cbe: 	je	.Ltmp2836 # Offset: 3262
.Ltmp3064:
    00000cc4: 	movq	-0x20(%rax), %r13
    00000cc8: 	callq	clock@PLT # Offset: 3272
    00000ccd: 	pxor	%xmm0, %xmm0
    00000cd1: 	movq	%rax, end_time(%rip)
    00000cd8: 	movq	%r13, %rdi
    00000cdb: 	subq	start_time(%rip), %rax
    00000ce2: 	cvtsi2sd	%rax, %xmm0
    00000ce7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000cef: 	callq	_Z13record_resultdPKc # Offset: 3311
    00000cf4: 	movq	0xd0(%rsp), %rdi
    00000cfc: 	cmpq	(%rsp), %rdi
    00000d00: 	je	.Ltmp2837 # Offset: 3328
    00000d02: 	movq	0xe0(%rsp), %rax
    00000d0a: 	leaq	0x1(%rax), %rsi
    00000d0e: 	callq	_ZdlPvm@PLT # Offset: 3342
.Ltmp2837:
    00000d13: 	movq	0x8(%rsp), %rsi
    00000d18: 	leaq	DATAat0x38246(%rip), %rdx
    00000d1f: 	movq	%r12, %rdi
    00000d22: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3362
    00000d27: 	callq	clock@PLT # Offset: 3367
    00000d2c: 	movl	iterations(%rip), %ecx
    00000d32: 	xorl	%r13d, %r13d
    00000d35: 	movabsq	$-0x8000000000000000, %r14
    00000d3f: 	movq	%rax, start_time(%rip)
    00000d46: 	leaq	DATAat0x381c8(%rip), %r15
    00000d4d: 	testl	%ecx, %ecx
    00000d4f: 	jle	.Ltmp2838 # Offset: 3407
    00000d51: 	nopl	(%rax) # Size: 7
.Ltmp2842:
    00000d58: 	movq	%rbp, %rax
    00000d5b: 	pxor	%xmm0, %xmm0
    00000d5f: 	nop # Size: 1
.Ltmp2839:
    00000d60: 	paddq	(%rax), %xmm0
    00000d64: 	addq	$0x10, %rax
    00000d68: 	cmpq	%rbx, %rax
    00000d6b: 	jne	.Ltmp2839 # Offset: 3435
    00000d6d: 	movsd	init_value(%rip), %xmm1
    00000d75: 	comisd	DATAat0x385f0(%rip), %xmm1
    00000d7d: 	jae	.Ltmp2840 # Offset: 3453
    00000d83: 	cvttsd2si	%xmm1, %rax
.Ltmp3016:
    00000d88: 	movdqa	%xmm0, %xmm1
    00000d8c: 	imulq	$0x1f40, %rax, %rdx
    00000d93: 	psrldq	$0x8, %xmm1
    00000d98: 	paddq	%xmm1, %xmm0
    00000d9c: 	movq	%xmm0, %rax
    00000da1: 	cmpq	%rax, %rdx
    00000da4: 	je	.Ltmp2841 # Offset: 3492
    00000da6: 	movl	current_test(%rip), %edx
    00000dac: 	movq	%r15, %rsi
    00000daf: 	movl	$0x1, %edi
    00000db4: 	xorl	%eax, %eax
    00000db6: 	callq	__printf_chk@PLT # Offset: 3510
    00000dbb: 	movl	iterations(%rip), %ecx
.Ltmp2841:
    00000dc1: 	addl	$0x1, %r13d
    00000dc5: 	cmpl	%ecx, %r13d
    00000dc8: 	jl	.Ltmp2842 # Offset: 3528
.Ltmp2838:
    00000dca: 	movq	%r12, %rsi
    00000dcd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000dd4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3540
    00000dd9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000de0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000de7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dee: 	je	.Ltmp2843 # Offset: 3566
.Ltmp3063:
    00000df4: 	movq	-0x20(%rax), %r13
    00000df8: 	callq	clock@PLT # Offset: 3576
    00000dfd: 	pxor	%xmm0, %xmm0
    00000e01: 	movq	%rax, end_time(%rip)
    00000e08: 	movq	%r13, %rdi
    00000e0b: 	subq	start_time(%rip), %rax
    00000e12: 	cvtsi2sd	%rax, %xmm0
    00000e17: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e1f: 	callq	_Z13record_resultdPKc # Offset: 3615
    00000e24: 	movq	0xd0(%rsp), %rdi
    00000e2c: 	cmpq	(%rsp), %rdi
    00000e30: 	je	.Ltmp2844 # Offset: 3632
    00000e32: 	movq	0xe0(%rsp), %rax
    00000e3a: 	leaq	0x1(%rax), %rsi
    00000e3e: 	callq	_ZdlPvm@PLT # Offset: 3646
.Ltmp2844:
    00000e43: 	movq	0x8(%rsp), %rsi
    00000e48: 	leaq	DATAat0x3824f(%rip), %rdx
    00000e4f: 	movq	%r12, %rdi
    00000e52: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3666
    00000e57: 	callq	clock@PLT # Offset: 3671
    00000e5c: 	movl	iterations(%rip), %ecx
    00000e62: 	xorl	%r13d, %r13d
    00000e65: 	movabsq	$-0x8000000000000000, %r14
    00000e6f: 	movq	%rax, start_time(%rip)
    00000e76: 	leaq	DATAat0x381c8(%rip), %r15
    00000e7d: 	testl	%ecx, %ecx
    00000e7f: 	jle	.Ltmp2845 # Offset: 3711
    00000e81: 	nopl	(%rax) # Size: 7
.Ltmp2849:
    00000e88: 	movq	%rbp, %rax
    00000e8b: 	pxor	%xmm0, %xmm0
    00000e8f: 	nop # Size: 1
.Ltmp2846:
    00000e90: 	paddq	(%rax), %xmm0
    00000e94: 	addq	$0x10, %rax
    00000e98: 	cmpq	%rbx, %rax
    00000e9b: 	jne	.Ltmp2846 # Offset: 3739
    00000e9d: 	movsd	init_value(%rip), %xmm1
    00000ea5: 	comisd	DATAat0x385f0(%rip), %xmm1
    00000ead: 	jae	.Ltmp2847 # Offset: 3757
    00000eb3: 	cvttsd2si	%xmm1, %rax
.Ltmp3015:
    00000eb8: 	movdqa	%xmm0, %xmm1
    00000ebc: 	imulq	$0x1f40, %rax, %rdx
    00000ec3: 	psrldq	$0x8, %xmm1
    00000ec8: 	paddq	%xmm1, %xmm0
    00000ecc: 	movq	%xmm0, %rax
    00000ed1: 	cmpq	%rax, %rdx
    00000ed4: 	je	.Ltmp2848 # Offset: 3796
    00000ed6: 	movl	current_test(%rip), %edx
    00000edc: 	movq	%r15, %rsi
    00000edf: 	movl	$0x1, %edi
    00000ee4: 	xorl	%eax, %eax
    00000ee6: 	callq	__printf_chk@PLT # Offset: 3814
    00000eeb: 	movl	iterations(%rip), %ecx
.Ltmp2848:
    00000ef1: 	addl	$0x1, %r13d
    00000ef5: 	cmpl	%ecx, %r13d
    00000ef8: 	jl	.Ltmp2849 # Offset: 3832
.Ltmp2845:
    00000efa: 	movq	%r12, %rsi
    00000efd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f04: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3844
    00000f09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f10: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f1e: 	je	.Ltmp2850 # Offset: 3870
.Ltmp3062:
    00000f24: 	movq	-0x20(%rax), %r13
    00000f28: 	callq	clock@PLT # Offset: 3880
    00000f2d: 	pxor	%xmm0, %xmm0
    00000f31: 	movq	%rax, end_time(%rip)
    00000f38: 	movq	%r13, %rdi
    00000f3b: 	subq	start_time(%rip), %rax
    00000f42: 	cvtsi2sd	%rax, %xmm0
    00000f47: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f4f: 	callq	_Z13record_resultdPKc # Offset: 3919
    00000f54: 	movq	0xd0(%rsp), %rdi
    00000f5c: 	cmpq	(%rsp), %rdi
    00000f60: 	je	.Ltmp2851 # Offset: 3936
    00000f62: 	movq	0xe0(%rsp), %rax
    00000f6a: 	leaq	0x1(%rax), %rsi
    00000f6e: 	callq	_ZdlPvm@PLT # Offset: 3950
.Ltmp2851:
    00000f73: 	movq	0x8(%rsp), %rsi
    00000f78: 	leaq	DATAat0x38259(%rip), %rdx
    00000f7f: 	movq	%r12, %rdi
    00000f82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3970
    00000f87: 	callq	clock@PLT # Offset: 3975
    00000f8c: 	movl	iterations(%rip), %ecx
    00000f92: 	xorl	%r13d, %r13d
    00000f95: 	movabsq	$-0x8000000000000000, %r14
    00000f9f: 	movq	%rax, start_time(%rip)
    00000fa6: 	leaq	DATAat0x381c8(%rip), %r15
    00000fad: 	testl	%ecx, %ecx
    00000faf: 	jle	.Ltmp2852 # Offset: 4015
    00000fb1: 	nopl	(%rax) # Size: 7
.Ltmp2856:
    00000fb8: 	movq	%rbp, %rax
    00000fbb: 	pxor	%xmm0, %xmm0
    00000fbf: 	nop # Size: 1
.Ltmp2853:
    00000fc0: 	paddq	(%rax), %xmm0
    00000fc4: 	addq	$0x10, %rax
    00000fc8: 	cmpq	%rbx, %rax
    00000fcb: 	jne	.Ltmp2853 # Offset: 4043
    00000fcd: 	movsd	init_value(%rip), %xmm1
    00000fd5: 	comisd	DATAat0x385f0(%rip), %xmm1
    00000fdd: 	jae	.Ltmp2854 # Offset: 4061
    00000fe3: 	cvttsd2si	%xmm1, %rax
.Ltmp3014:
    00000fe8: 	movdqa	%xmm0, %xmm1
    00000fec: 	imulq	$0x1f40, %rax, %rdx
    00000ff3: 	psrldq	$0x8, %xmm1
    00000ff8: 	paddq	%xmm1, %xmm0
    00000ffc: 	movq	%xmm0, %rax
    00001001: 	cmpq	%rax, %rdx
    00001004: 	je	.Ltmp2855 # Offset: 4100
    00001006: 	movl	current_test(%rip), %edx
    0000100c: 	movq	%r15, %rsi
    0000100f: 	movl	$0x1, %edi
    00001014: 	xorl	%eax, %eax
    00001016: 	callq	__printf_chk@PLT # Offset: 4118
    0000101b: 	movl	iterations(%rip), %ecx
.Ltmp2855:
    00001021: 	addl	$0x1, %r13d
    00001025: 	cmpl	%ecx, %r13d
    00001028: 	jl	.Ltmp2856 # Offset: 4136
.Ltmp2852:
    0000102a: 	movq	%r12, %rsi
    0000102d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001034: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4148
    00001039: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001040: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001047: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000104e: 	je	.Ltmp2857 # Offset: 4174
.Ltmp3061:
    00001054: 	movq	-0x20(%rax), %r13
    00001058: 	callq	clock@PLT # Offset: 4184
    0000105d: 	pxor	%xmm0, %xmm0
    00001061: 	movq	%rax, end_time(%rip)
    00001068: 	movq	%r13, %rdi
    0000106b: 	subq	start_time(%rip), %rax
    00001072: 	cvtsi2sd	%rax, %xmm0
    00001077: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000107f: 	callq	_Z13record_resultdPKc # Offset: 4223
    00001084: 	movq	0xd0(%rsp), %rdi
    0000108c: 	cmpq	(%rsp), %rdi
    00001090: 	je	.Ltmp2858 # Offset: 4240
    00001092: 	movq	0xe0(%rsp), %rax
    0000109a: 	leaq	0x1(%rax), %rsi
    0000109e: 	callq	_ZdlPvm@PLT # Offset: 4254
.Ltmp2858:
    000010a3: 	movq	0x8(%rsp), %rsi
    000010a8: 	leaq	DATAat0x38266(%rip), %rdx
    000010af: 	movq	%r12, %rdi
    000010b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4274
    000010b7: 	callq	clock@PLT # Offset: 4279
    000010bc: 	movl	iterations(%rip), %ecx
    000010c2: 	xorl	%r13d, %r13d
    000010c5: 	movabsq	$-0x8000000000000000, %r14
    000010cf: 	movq	%rax, start_time(%rip)
    000010d6: 	leaq	DATAat0x381c8(%rip), %r15
    000010dd: 	testl	%ecx, %ecx
    000010df: 	jle	.Ltmp2859 # Offset: 4319
    000010e1: 	nopl	(%rax) # Size: 7
.Ltmp2863:
    000010e8: 	movq	%rbp, %rax
    000010eb: 	pxor	%xmm0, %xmm0
    000010ef: 	nop # Size: 1
.Ltmp2860:
    000010f0: 	paddq	(%rax), %xmm0
    000010f4: 	addq	$0x10, %rax
    000010f8: 	cmpq	%rbx, %rax
    000010fb: 	jne	.Ltmp2860 # Offset: 4347
    000010fd: 	movsd	init_value(%rip), %xmm1
    00001105: 	comisd	DATAat0x385f0(%rip), %xmm1
    0000110d: 	jae	.Ltmp2861 # Offset: 4365
    00001113: 	cvttsd2si	%xmm1, %rax
.Ltmp3013:
    00001118: 	movdqa	%xmm0, %xmm1
    0000111c: 	imulq	$0x1f40, %rax, %rdx
    00001123: 	psrldq	$0x8, %xmm1
    00001128: 	paddq	%xmm1, %xmm0
    0000112c: 	movq	%xmm0, %rax
    00001131: 	cmpq	%rax, %rdx
    00001134: 	je	.Ltmp2862 # Offset: 4404
    00001136: 	movl	current_test(%rip), %edx
    0000113c: 	movq	%r15, %rsi
    0000113f: 	movl	$0x1, %edi
    00001144: 	xorl	%eax, %eax
    00001146: 	callq	__printf_chk@PLT # Offset: 4422
    0000114b: 	movl	iterations(%rip), %ecx
.Ltmp2862:
    00001151: 	addl	$0x1, %r13d
    00001155: 	cmpl	%ecx, %r13d
    00001158: 	jl	.Ltmp2863 # Offset: 4440
.Ltmp2859:
    0000115a: 	movq	%r12, %rsi
    0000115d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001164: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4452
    00001169: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001170: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001177: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000117e: 	je	.Ltmp2864 # Offset: 4478
.Ltmp3060:
    00001184: 	movq	-0x20(%rax), %r13
    00001188: 	callq	clock@PLT # Offset: 4488
    0000118d: 	pxor	%xmm0, %xmm0
    00001191: 	movq	%rax, end_time(%rip)
    00001198: 	movq	%r13, %rdi
    0000119b: 	subq	start_time(%rip), %rax
    000011a2: 	cvtsi2sd	%rax, %xmm0
    000011a7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000011af: 	callq	_Z13record_resultdPKc # Offset: 4527
    000011b4: 	movq	0xd0(%rsp), %rdi
    000011bc: 	cmpq	(%rsp), %rdi
    000011c0: 	je	.Ltmp2865 # Offset: 4544
    000011c2: 	movq	0xe0(%rsp), %rax
    000011ca: 	leaq	0x1(%rax), %rsi
    000011ce: 	callq	_ZdlPvm@PLT # Offset: 4558
.Ltmp2865:
    000011d3: 	movq	0x8(%rsp), %r15
    000011d8: 	leaq	0x70(%rsp), %rdi
    000011dd: 	leaq	DATAat0x38275(%rip), %rdx
    000011e4: 	movq	%r15, %rsi
    000011e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4583
    000011ec: 	movl	iterations(%rip), %esi
    000011f2: 	movq	0x70(%rsp), %rdi
    000011f7: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4599
    000011fc: 	leaq	DATAat0x381e2(%rip), %rdx
    00001203: 	movq	%r15, %rsi
    00001206: 	movq	%r12, %rdi
    00001209: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4617
    0000120e: 	callq	clock@PLT # Offset: 4622
    00001213: 	movq	%r12, %rsi
    00001216: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000121d: 	movq	%rax, start_time(%rip)
    00001224: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4644
    00001229: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001230: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001237: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000123e: 	je	.Ltmp2866 # Offset: 4670
.Ltmp3059:
    00001244: 	movq	-0x20(%rax), %r13
    00001248: 	callq	clock@PLT # Offset: 4680
    0000124d: 	pxor	%xmm0, %xmm0
    00001251: 	movq	%rax, end_time(%rip)
    00001258: 	movq	%r13, %rdi
    0000125b: 	subq	start_time(%rip), %rax
    00001262: 	cvtsi2sd	%rax, %xmm0
    00001267: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000126f: 	callq	_Z13record_resultdPKc # Offset: 4719
    00001274: 	movq	0xd0(%rsp), %rdi
    0000127c: 	cmpq	(%rsp), %rdi
    00001280: 	je	.Ltmp2867 # Offset: 4736
    00001282: 	movq	0xe0(%rsp), %rax
    0000128a: 	leaq	0x1(%rax), %rsi
    0000128e: 	callq	_ZdlPvm@PLT # Offset: 4750
.Ltmp2867:
    00001293: 	movq	0x8(%rsp), %rsi
    00001298: 	leaq	DATAat0x3828f(%rip), %rdx
    0000129f: 	movq	%r12, %rdi
    000012a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4770
    000012a7: 	callq	clock@PLT # Offset: 4775
    000012ac: 	movq	%r12, %rsi
    000012af: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012b6: 	movq	%rax, start_time(%rip)
    000012bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4797
    000012c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012d7: 	je	.Ltmp2868 # Offset: 4823
.Ltmp3058:
    000012dd: 	movq	-0x20(%rax), %r13
    000012e1: 	callq	clock@PLT # Offset: 4833
    000012e6: 	pxor	%xmm0, %xmm0
    000012ea: 	movq	%rax, end_time(%rip)
    000012f1: 	movq	%r13, %rdi
    000012f4: 	subq	start_time(%rip), %rax
    000012fb: 	cvtsi2sd	%rax, %xmm0
    00001300: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001308: 	callq	_Z13record_resultdPKc # Offset: 4872
    0000130d: 	movq	0xd0(%rsp), %rdi
    00001315: 	cmpq	(%rsp), %rdi
    00001319: 	je	.Ltmp2869 # Offset: 4889
    0000131b: 	movq	0xe0(%rsp), %rax
    00001323: 	leaq	0x1(%rax), %rsi
    00001327: 	callq	_ZdlPvm@PLT # Offset: 4903
.Ltmp2869:
    0000132c: 	movq	0x8(%rsp), %rsi
    00001331: 	leaq	DATAat0x3829b(%rip), %rdx
    00001338: 	movq	%r12, %rdi
    0000133b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4923
    00001340: 	callq	clock@PLT # Offset: 4928
    00001345: 	movq	%r12, %rsi
    00001348: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000134f: 	movq	%rax, start_time(%rip)
    00001356: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4950
    0000135b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001362: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001369: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001370: 	je	.Ltmp2870 # Offset: 4976
.Ltmp3057:
    00001376: 	movq	-0x20(%rax), %r13
    0000137a: 	callq	clock@PLT # Offset: 4986
    0000137f: 	pxor	%xmm0, %xmm0
    00001383: 	movq	%rax, end_time(%rip)
    0000138a: 	movq	%r13, %rdi
    0000138d: 	subq	start_time(%rip), %rax
    00001394: 	cvtsi2sd	%rax, %xmm0
    00001399: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013a1: 	callq	_Z13record_resultdPKc # Offset: 5025
    000013a6: 	movq	0xd0(%rsp), %rdi
    000013ae: 	cmpq	(%rsp), %rdi
    000013b2: 	je	.Ltmp2871 # Offset: 5042
    000013b4: 	movq	0xe0(%rsp), %rax
    000013bc: 	leaq	0x1(%rax), %rsi
    000013c0: 	callq	_ZdlPvm@PLT # Offset: 5056
.Ltmp2871:
    000013c5: 	movq	0x8(%rsp), %rsi
    000013ca: 	leaq	DATAat0x382aa(%rip), %rdx
    000013d1: 	movq	%r12, %rdi
    000013d4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5076
    000013d9: 	callq	clock@PLT # Offset: 5081
    000013de: 	movq	%r12, %rsi
    000013e1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013e8: 	movq	%rax, start_time(%rip)
    000013ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5103
    000013f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013fb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001402: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001409: 	je	.Ltmp2872 # Offset: 5129
.Ltmp3056:
    0000140f: 	movq	-0x20(%rax), %r13
    00001413: 	callq	clock@PLT # Offset: 5139
    00001418: 	pxor	%xmm0, %xmm0
    0000141c: 	movq	%rax, end_time(%rip)
    00001423: 	movq	%r13, %rdi
    00001426: 	subq	start_time(%rip), %rax
    0000142d: 	cvtsi2sd	%rax, %xmm0
    00001432: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000143a: 	callq	_Z13record_resultdPKc # Offset: 5178
    0000143f: 	movq	0xd0(%rsp), %rdi
    00001447: 	cmpq	(%rsp), %rdi
    0000144b: 	je	.Ltmp2873 # Offset: 5195
    0000144d: 	movq	0xe0(%rsp), %rax
    00001455: 	leaq	0x1(%rax), %rsi
    00001459: 	callq	_ZdlPvm@PLT # Offset: 5209
.Ltmp2873:
    0000145e: 	movq	0x8(%rsp), %rsi
    00001463: 	leaq	DATAat0x382f3(%rip), %rdx
    0000146a: 	movq	%r12, %rdi
    0000146d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5229
    00001472: 	callq	clock@PLT # Offset: 5234
    00001477: 	movq	%r12, %rsi
    0000147a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001481: 	movq	%rax, start_time(%rip)
    00001488: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5256
    0000148d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001494: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000149b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014a2: 	je	.Ltmp2874 # Offset: 5282
.Ltmp3055:
    000014a8: 	movq	-0x20(%rax), %r13
    000014ac: 	callq	clock@PLT # Offset: 5292
    000014b1: 	pxor	%xmm0, %xmm0
    000014b5: 	movq	%rax, end_time(%rip)
    000014bc: 	movq	%r13, %rdi
    000014bf: 	subq	start_time(%rip), %rax
    000014c6: 	cvtsi2sd	%rax, %xmm0
    000014cb: 	divsd	DATAat0x385e0(%rip), %xmm0
    000014d3: 	callq	_Z13record_resultdPKc # Offset: 5331
    000014d8: 	movq	0xd0(%rsp), %rdi
    000014e0: 	cmpq	(%rsp), %rdi
    000014e4: 	je	.Ltmp2875 # Offset: 5348
    000014e6: 	movq	0xe0(%rsp), %rax
    000014ee: 	leaq	0x1(%rax), %rsi
    000014f2: 	callq	_ZdlPvm@PLT # Offset: 5362
.Ltmp2875:
    000014f7: 	movq	0x8(%rsp), %rsi
    000014fc: 	leaq	DATAat0x382b3(%rip), %rdx
    00001503: 	movq	%r12, %rdi
    00001506: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5382
    0000150b: 	callq	clock@PLT # Offset: 5387
    00001510: 	movq	%r12, %rsi
    00001513: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000151a: 	movq	%rax, start_time(%rip)
    00001521: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5409
    00001526: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000152d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001534: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000153b: 	je	.Ltmp2876 # Offset: 5435
.Ltmp3054:
    00001541: 	movq	-0x20(%rax), %r13
    00001545: 	callq	clock@PLT # Offset: 5445
    0000154a: 	pxor	%xmm0, %xmm0
    0000154e: 	movq	%rax, end_time(%rip)
    00001555: 	movq	%r13, %rdi
    00001558: 	subq	start_time(%rip), %rax
    0000155f: 	cvtsi2sd	%rax, %xmm0
    00001564: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000156c: 	callq	_Z13record_resultdPKc # Offset: 5484
    00001571: 	movq	0xd0(%rsp), %rdi
    00001579: 	cmpq	(%rsp), %rdi
    0000157d: 	je	.Ltmp2877 # Offset: 5501
    0000157f: 	movq	0xe0(%rsp), %rax
    00001587: 	leaq	0x1(%rax), %rsi
    0000158b: 	callq	_ZdlPvm@PLT # Offset: 5515
.Ltmp2877:
    00001590: 	movq	0x8(%rsp), %rsi
    00001595: 	leaq	DATAat0x382c3(%rip), %rdx
    0000159c: 	movq	%r12, %rdi
    0000159f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5535
    000015a4: 	callq	clock@PLT # Offset: 5540
    000015a9: 	movq	%r12, %rsi
    000015ac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015b3: 	movq	%rax, start_time(%rip)
    000015ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5562
    000015bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015c6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015d4: 	je	.Ltmp2878 # Offset: 5588
.Ltmp3053:
    000015da: 	movq	-0x20(%rax), %r13
    000015de: 	callq	clock@PLT # Offset: 5598
    000015e3: 	pxor	%xmm0, %xmm0
    000015e7: 	movq	%rax, end_time(%rip)
    000015ee: 	movq	%r13, %rdi
    000015f1: 	subq	start_time(%rip), %rax
    000015f8: 	cvtsi2sd	%rax, %xmm0
    000015fd: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001605: 	callq	_Z13record_resultdPKc # Offset: 5637
    0000160a: 	movq	0xd0(%rsp), %rdi
    00001612: 	cmpq	(%rsp), %rdi
    00001616: 	je	.Ltmp2879 # Offset: 5654
    00001618: 	movq	0xe0(%rsp), %rax
    00001620: 	leaq	0x1(%rax), %rsi
    00001624: 	callq	_ZdlPvm@PLT # Offset: 5668
.Ltmp2879:
    00001629: 	movq	0x8(%rsp), %rsi
    0000162e: 	leaq	DATAat0x382d6(%rip), %rdx
    00001635: 	movq	%r12, %rdi
    00001638: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5688
    0000163d: 	callq	clock@PLT # Offset: 5693
    00001642: 	movq	%r12, %rsi
    00001645: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000164c: 	movq	%rax, start_time(%rip)
    00001653: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5715
    00001658: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000165f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001666: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000166d: 	je	.Ltmp2880 # Offset: 5741
.Ltmp3052:
    00001673: 	movq	-0x20(%rax), %r13
    00001677: 	callq	clock@PLT # Offset: 5751
    0000167c: 	pxor	%xmm0, %xmm0
    00001680: 	movq	%rax, end_time(%rip)
    00001687: 	movq	%r13, %rdi
    0000168a: 	subq	start_time(%rip), %rax
    00001691: 	cvtsi2sd	%rax, %xmm0
    00001696: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000169e: 	callq	_Z13record_resultdPKc # Offset: 5790
    000016a3: 	movq	0xd0(%rsp), %rdi
    000016ab: 	cmpq	(%rsp), %rdi
    000016af: 	je	.Ltmp2881 # Offset: 5807
    000016b1: 	movq	0xe0(%rsp), %rax
    000016b9: 	leaq	0x1(%rax), %rsi
    000016bd: 	callq	_ZdlPvm@PLT # Offset: 5821
.Ltmp2881:
    000016c2: 	movq	0x8(%rsp), %rsi
    000016c7: 	leaq	DATAat0x382e6(%rip), %rdx
    000016ce: 	movq	%r12, %rdi
    000016d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5841
    000016d6: 	callq	clock@PLT # Offset: 5846
    000016db: 	movq	%r12, %rsi
    000016de: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016e5: 	movq	%rax, start_time(%rip)
    000016ec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5868
    000016f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016f8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001706: 	je	.Ltmp2882 # Offset: 5894
.Ltmp3051:
    0000170c: 	movq	-0x20(%rax), %r13
    00001710: 	callq	clock@PLT # Offset: 5904
    00001715: 	pxor	%xmm0, %xmm0
    00001719: 	movq	%rax, end_time(%rip)
    00001720: 	movq	%r13, %rdi
    00001723: 	subq	start_time(%rip), %rax
    0000172a: 	cvtsi2sd	%rax, %xmm0
    0000172f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001737: 	callq	_Z13record_resultdPKc # Offset: 5943
    0000173c: 	movq	0xd0(%rsp), %rdi
    00001744: 	cmpq	(%rsp), %rdi
    00001748: 	je	.Ltmp2883 # Offset: 5960
    0000174a: 	movq	0xe0(%rsp), %rax
    00001752: 	leaq	0x1(%rax), %rsi
    00001756: 	callq	_ZdlPvm@PLT # Offset: 5974
.Ltmp2883:
    0000175b: 	movq	0x8(%rsp), %rsi
    00001760: 	leaq	DATAat0x382ff(%rip), %rdx
    00001767: 	movq	%r12, %rdi
    0000176a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5994
    0000176f: 	callq	clock@PLT # Offset: 5999
    00001774: 	movq	%r12, %rsi
    00001777: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000177e: 	movq	%rax, start_time(%rip)
    00001785: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6021
    0000178a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001791: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001798: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000179f: 	je	.Ltmp2884 # Offset: 6047
.Ltmp3050:
    000017a5: 	movq	-0x20(%rax), %r13
    000017a9: 	callq	clock@PLT # Offset: 6057
    000017ae: 	pxor	%xmm0, %xmm0
    000017b2: 	movq	%rax, end_time(%rip)
    000017b9: 	movq	%r13, %rdi
    000017bc: 	subq	start_time(%rip), %rax
    000017c3: 	cvtsi2sd	%rax, %xmm0
    000017c8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000017d0: 	callq	_Z13record_resultdPKc # Offset: 6096
    000017d5: 	movq	0xd0(%rsp), %rdi
    000017dd: 	cmpq	(%rsp), %rdi
    000017e1: 	je	.Ltmp2885 # Offset: 6113
    000017e3: 	movq	0xe0(%rsp), %rax
    000017eb: 	leaq	0x1(%rax), %rsi
    000017ef: 	callq	_ZdlPvm@PLT # Offset: 6127
.Ltmp2885:
    000017f4: 	movq	0x8(%rsp), %rsi
    000017f9: 	leaq	DATAat0x38315(%rip), %rdx
    00001800: 	movq	%r12, %rdi
    00001803: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6147
    00001808: 	callq	clock@PLT # Offset: 6152
    0000180d: 	movq	%r12, %rsi
    00001810: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001817: 	movq	%rax, start_time(%rip)
    0000181e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6174
    00001823: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000182a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001831: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001838: 	je	.Ltmp2886 # Offset: 6200
.Ltmp3049:
    0000183e: 	movq	-0x20(%rax), %r13
    00001842: 	callq	clock@PLT # Offset: 6210
    00001847: 	pxor	%xmm0, %xmm0
    0000184b: 	movq	%rax, end_time(%rip)
    00001852: 	movq	%r13, %rdi
    00001855: 	subq	start_time(%rip), %rax
    0000185c: 	cvtsi2sd	%rax, %xmm0
    00001861: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001869: 	callq	_Z13record_resultdPKc # Offset: 6249
    0000186e: 	movq	0xd0(%rsp), %rdi
    00001876: 	cmpq	(%rsp), %rdi
    0000187a: 	je	.Ltmp2887 # Offset: 6266
    0000187c: 	movq	0xe0(%rsp), %rax
    00001884: 	leaq	0x1(%rax), %rsi
    00001888: 	callq	_ZdlPvm@PLT # Offset: 6280
.Ltmp2887:
    0000188d: 	movq	0x8(%rsp), %rsi
    00001892: 	leaq	DATAat0x3831f(%rip), %rdx
    00001899: 	movq	%r12, %rdi
    0000189c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6300
    000018a1: 	callq	clock@PLT # Offset: 6305
    000018a6: 	movq	%r12, %rsi
    000018a9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018b0: 	movq	%rax, start_time(%rip)
    000018b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6327
    000018bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018d1: 	je	.Ltmp2888 # Offset: 6353
.Ltmp3048:
    000018d7: 	movq	-0x20(%rax), %r13
    000018db: 	callq	clock@PLT # Offset: 6363
    000018e0: 	pxor	%xmm0, %xmm0
    000018e4: 	movq	%rax, end_time(%rip)
    000018eb: 	movq	%r13, %rdi
    000018ee: 	subq	start_time(%rip), %rax
    000018f5: 	cvtsi2sd	%rax, %xmm0
    000018fa: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001902: 	callq	_Z13record_resultdPKc # Offset: 6402
    00001907: 	movq	0xd0(%rsp), %rdi
    0000190f: 	cmpq	(%rsp), %rdi
    00001913: 	je	.Ltmp2889 # Offset: 6419
    00001915: 	movq	0xe0(%rsp), %rax
    0000191d: 	leaq	0x1(%rax), %rsi
    00001921: 	callq	_ZdlPvm@PLT # Offset: 6433
.Ltmp2889:
    00001926: 	movq	0x8(%rsp), %rsi
    0000192b: 	leaq	DATAat0x38329(%rip), %rdx
    00001932: 	movq	%r12, %rdi
    00001935: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6453
    0000193a: 	callq	clock@PLT # Offset: 6458
    0000193f: 	movq	%r12, %rsi
    00001942: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001949: 	movq	%rax, start_time(%rip)
    00001950: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6480
    00001955: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000195c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001963: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000196a: 	je	.Ltmp2890 # Offset: 6506
.Ltmp3047:
    00001970: 	movq	-0x20(%rax), %r13
    00001974: 	callq	clock@PLT # Offset: 6516
    00001979: 	pxor	%xmm0, %xmm0
    0000197d: 	movq	%rax, end_time(%rip)
    00001984: 	movq	%r13, %rdi
    00001987: 	subq	start_time(%rip), %rax
    0000198e: 	cvtsi2sd	%rax, %xmm0
    00001993: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000199b: 	callq	_Z13record_resultdPKc # Offset: 6555
    000019a0: 	movq	0xd0(%rsp), %rdi
    000019a8: 	cmpq	(%rsp), %rdi
    000019ac: 	je	.Ltmp2891 # Offset: 6572
    000019ae: 	movq	0xe0(%rsp), %rax
    000019b6: 	leaq	0x1(%rax), %rsi
    000019ba: 	callq	_ZdlPvm@PLT # Offset: 6586
.Ltmp2891:
    000019bf: 	movq	0x8(%rsp), %rsi
    000019c4: 	leaq	DATAat0x38339(%rip), %rdx
    000019cb: 	movq	%r12, %rdi
    000019ce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6606
    000019d3: 	callq	clock@PLT # Offset: 6611
    000019d8: 	movq	%r12, %rsi
    000019db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019e2: 	movq	%rax, start_time(%rip)
    000019e9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6633
    000019ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019f5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a03: 	je	.Ltmp2892 # Offset: 6659
.Ltmp3046:
    00001a09: 	movq	-0x20(%rax), %r13
    00001a0d: 	callq	clock@PLT # Offset: 6669
    00001a12: 	pxor	%xmm0, %xmm0
    00001a16: 	movq	%rax, end_time(%rip)
    00001a1d: 	movq	%r13, %rdi
    00001a20: 	subq	start_time(%rip), %rax
    00001a27: 	cvtsi2sd	%rax, %xmm0
    00001a2c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a34: 	callq	_Z13record_resultdPKc # Offset: 6708
    00001a39: 	movq	0xd0(%rsp), %rdi
    00001a41: 	cmpq	(%rsp), %rdi
    00001a45: 	je	.Ltmp2893 # Offset: 6725
    00001a47: 	movq	0xe0(%rsp), %rax
    00001a4f: 	leaq	0x1(%rax), %rsi
    00001a53: 	callq	_ZdlPvm@PLT # Offset: 6739
.Ltmp2893:
    00001a58: 	movq	0x8(%rsp), %rsi
    00001a5d: 	leaq	DATAat0x38351(%rip), %rdx
    00001a64: 	movq	%r12, %rdi
    00001a67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6759
    00001a6c: 	callq	clock@PLT # Offset: 6764
    00001a71: 	movq	%r12, %rsi
    00001a74: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a7b: 	movq	%rax, start_time(%rip)
    00001a82: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6786
    00001a87: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a8e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a95: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a9c: 	je	.Ltmp2894 # Offset: 6812
.Ltmp3045:
    00001aa2: 	movq	-0x20(%rax), %r13
    00001aa6: 	callq	clock@PLT # Offset: 6822
    00001aab: 	pxor	%xmm0, %xmm0
    00001aaf: 	movq	%rax, end_time(%rip)
    00001ab6: 	movq	%r13, %rdi
    00001ab9: 	subq	start_time(%rip), %rax
    00001ac0: 	cvtsi2sd	%rax, %xmm0
    00001ac5: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001acd: 	callq	_Z13record_resultdPKc # Offset: 6861
    00001ad2: 	movq	0xd0(%rsp), %rdi
    00001ada: 	cmpq	(%rsp), %rdi
    00001ade: 	je	.Ltmp2895 # Offset: 6878
    00001ae0: 	movq	0xe0(%rsp), %rax
    00001ae8: 	leaq	0x1(%rax), %rsi
    00001aec: 	callq	_ZdlPvm@PLT # Offset: 6892
.Ltmp2895:
    00001af1: 	movq	0x8(%rsp), %rsi
    00001af6: 	leaq	DATAat0x38369(%rip), %rdx
    00001afd: 	movq	%r12, %rdi
    00001b00: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6912
    00001b05: 	callq	clock@PLT # Offset: 6917
    00001b0a: 	movq	%r12, %rsi
    00001b0d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b14: 	movq	%rax, start_time(%rip)
    00001b1b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6939
    00001b20: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b27: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b2e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b35: 	je	.Ltmp2896 # Offset: 6965
.Ltmp3044:
    00001b3b: 	movq	-0x20(%rax), %r13
    00001b3f: 	callq	clock@PLT # Offset: 6975
    00001b44: 	pxor	%xmm0, %xmm0
    00001b48: 	movq	%rax, end_time(%rip)
    00001b4f: 	movq	%r13, %rdi
    00001b52: 	subq	start_time(%rip), %rax
    00001b59: 	cvtsi2sd	%rax, %xmm0
    00001b5e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b66: 	callq	_Z13record_resultdPKc # Offset: 7014
    00001b6b: 	movq	0xd0(%rsp), %rdi
    00001b73: 	cmpq	(%rsp), %rdi
    00001b77: 	je	.Ltmp2897 # Offset: 7031
    00001b79: 	movq	0xe0(%rsp), %rax
    00001b81: 	leaq	0x1(%rax), %rsi
    00001b85: 	callq	_ZdlPvm@PLT # Offset: 7045
.Ltmp2897:
    00001b8a: 	movq	0x8(%rsp), %rsi
    00001b8f: 	leaq	DATAat0x38381(%rip), %rdx
    00001b96: 	movq	%r12, %rdi
    00001b99: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7065
    00001b9e: 	callq	clock@PLT # Offset: 7070
    00001ba3: 	movq	%r12, %rsi
    00001ba6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bad: 	movq	%rax, start_time(%rip)
    00001bb4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7092
    00001bb9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bc0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bc7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bce: 	je	.Ltmp2898 # Offset: 7118
.Ltmp3043:
    00001bd4: 	movq	-0x20(%rax), %r13
    00001bd8: 	callq	clock@PLT # Offset: 7128
    00001bdd: 	pxor	%xmm0, %xmm0
    00001be1: 	movq	%rax, end_time(%rip)
    00001be8: 	movq	%r13, %rdi
    00001beb: 	subq	start_time(%rip), %rax
    00001bf2: 	cvtsi2sd	%rax, %xmm0
    00001bf7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001bff: 	callq	_Z13record_resultdPKc # Offset: 7167
    00001c04: 	movq	0xd0(%rsp), %rdi
    00001c0c: 	cmpq	(%rsp), %rdi
    00001c10: 	je	.Ltmp2899 # Offset: 7184
    00001c12: 	movq	0xe0(%rsp), %rax
    00001c1a: 	leaq	0x1(%rax), %rsi
    00001c1e: 	callq	_ZdlPvm@PLT # Offset: 7198
.Ltmp2899:
    00001c23: 	movq	0x8(%rsp), %r15
    00001c28: 	leaq	0x90(%rsp), %rdi
    00001c30: 	leaq	DATAat0x384a0(%rip), %rdx
    00001c37: 	movq	%r15, %rsi
    00001c3a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7226
    00001c3f: 	movl	iterations(%rip), %esi
    00001c45: 	movq	0x90(%rsp), %rdi
    00001c4d: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 7245
    00001c52: 	leaq	DATAat0x384c8(%rip), %rdx
    00001c59: 	movq	%r15, %rsi
    00001c5c: 	movq	%r12, %rdi
    00001c5f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7263
    00001c64: 	callq	clock@PLT # Offset: 7268
    00001c69: 	movl	iterations(%rip), %esi
    00001c6f: 	movq	%rax, start_time(%rip)
    00001c76: 	testl	%esi, %esi
    00001c78: 	jle	.Ltmp2900 # Offset: 7288
    00001c7e: 	movq	0x18(%rsp), %r13
    00001c83: 	xorl	%r14d, %r14d
    00001c86: 	addq	0x20(%rsp), %r13
    00001c8b: 	leaq	DATAat0x381c8(%rip), %r15
    00001c92: 	addq	0x10(%rsp), %r13
    00001c97: 	addq	0x28(%rsp), %r13
    00001c9c: 	nopl	(%rax) # Size: 4
.Ltmp2904:
    00001ca0: 	movq	%rbp, %rax
    00001ca3: 	xorl	%edx, %edx
    00001ca5: 	nopl	(%rax) # Size: 3
.Ltmp2901:
    00001ca8: 	movq	(%rax), %rcx
    00001cab: 	addq	$0x8, %rax
    00001caf: 	imulq	%r13, %rcx
    00001cb3: 	addq	%rcx, %rdx
    00001cb6: 	cmpq	%rbx, %rax
    00001cb9: 	jne	.Ltmp2901 # Offset: 7353
    00001cbb: 	movsd	init_value(%rip), %xmm0
    00001cc3: 	comisd	DATAat0x385f0(%rip), %xmm0
    00001ccb: 	jae	.Ltmp2902 # Offset: 7371
    00001cd1: 	cvttsd2si	%xmm0, %rax
.Ltmp3012:
    00001cd6: 	imulq	%r13, %rax
    00001cda: 	imulq	$0x1f40, %rax, %rax
    00001ce1: 	cmpq	%rax, %rdx
    00001ce4: 	je	.Ltmp2903 # Offset: 7396
    00001ce6: 	movl	current_test(%rip), %edx
    00001cec: 	movq	%r15, %rsi
    00001cef: 	movl	$0x1, %edi
    00001cf4: 	xorl	%eax, %eax
    00001cf6: 	callq	__printf_chk@PLT # Offset: 7414
    00001cfb: 	movl	iterations(%rip), %esi
.Ltmp2903:
    00001d01: 	addl	$0x1, %r14d
    00001d05: 	cmpl	%esi, %r14d
    00001d08: 	jl	.Ltmp2904 # Offset: 7432
.Ltmp2900:
    00001d0a: 	movq	%r12, %rsi
    00001d0d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d14: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7444
    00001d19: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d20: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d27: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d2e: 	je	.Ltmp2905 # Offset: 7470
.Ltmp3042:
    00001d34: 	movq	-0x20(%rax), %r13
    00001d38: 	callq	clock@PLT # Offset: 7480
    00001d3d: 	pxor	%xmm0, %xmm0
    00001d41: 	movq	%rax, end_time(%rip)
    00001d48: 	movq	%r13, %rdi
    00001d4b: 	subq	start_time(%rip), %rax
    00001d52: 	cvtsi2sd	%rax, %xmm0
    00001d57: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001d5f: 	callq	_Z13record_resultdPKc # Offset: 7519
    00001d64: 	movq	0xd0(%rsp), %rdi
    00001d6c: 	cmpq	(%rsp), %rdi
    00001d70: 	je	.Ltmp2906 # Offset: 7536
    00001d72: 	movq	0xe0(%rsp), %rax
    00001d7a: 	leaq	0x1(%rax), %rsi
    00001d7e: 	callq	_ZdlPvm@PLT # Offset: 7550
.Ltmp2906:
    00001d83: 	movq	0x8(%rsp), %rsi
    00001d88: 	leaq	DATAat0x384e8(%rip), %rdx
    00001d8f: 	movq	%r12, %rdi
    00001d92: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7570
    00001d97: 	callq	clock@PLT # Offset: 7575
    00001d9c: 	movl	iterations(%rip), %esi
    00001da2: 	movq	%rax, start_time(%rip)
    00001da9: 	testl	%esi, %esi
    00001dab: 	jle	.Ltmp2907 # Offset: 7595
    00001db1: 	movq	0x18(%rsp), %r13
    00001db6: 	xorl	%r14d, %r14d
    00001db9: 	addq	0x20(%rsp), %r13
    00001dbe: 	leaq	DATAat0x381c8(%rip), %r15
    00001dc5: 	addq	0x10(%rsp), %r13
    00001dca: 	addq	0x28(%rsp), %r13
    00001dcf: 	nop # Size: 1
.Ltmp2911:
    00001dd0: 	movq	%rbp, %rax
    00001dd3: 	xorl	%edx, %edx
    00001dd5: 	nopl	(%rax) # Size: 3
.Ltmp2908:
    00001dd8: 	movq	(%rax), %rcx
    00001ddb: 	addq	$0x8, %rax
    00001ddf: 	imulq	%r13, %rcx
    00001de3: 	addq	%rcx, %rdx
    00001de6: 	cmpq	%rbx, %rax
    00001de9: 	jne	.Ltmp2908 # Offset: 7657
    00001deb: 	movsd	init_value(%rip), %xmm0
    00001df3: 	comisd	DATAat0x385f0(%rip), %xmm0
    00001dfb: 	jae	.Ltmp2909 # Offset: 7675
    00001e01: 	cvttsd2si	%xmm0, %rax
.Ltmp3011:
    00001e06: 	imulq	%r13, %rax
    00001e0a: 	imulq	$0x1f40, %rax, %rax
    00001e11: 	cmpq	%rax, %rdx
    00001e14: 	je	.Ltmp2910 # Offset: 7700
    00001e16: 	movl	current_test(%rip), %edx
    00001e1c: 	movq	%r15, %rsi
    00001e1f: 	movl	$0x1, %edi
    00001e24: 	xorl	%eax, %eax
    00001e26: 	callq	__printf_chk@PLT # Offset: 7718
    00001e2b: 	movl	iterations(%rip), %esi
.Ltmp2910:
    00001e31: 	addl	$0x1, %r14d
    00001e35: 	cmpl	%esi, %r14d
    00001e38: 	jl	.Ltmp2911 # Offset: 7736
.Ltmp2907:
    00001e3a: 	movq	%r12, %rsi
    00001e3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e44: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7748
    00001e49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e50: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e57: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e5e: 	je	.Ltmp2912 # Offset: 7774
.Ltmp3041:
    00001e64: 	movq	-0x20(%rax), %r13
    00001e68: 	callq	clock@PLT # Offset: 7784
    00001e6d: 	pxor	%xmm0, %xmm0
    00001e71: 	movq	%rax, end_time(%rip)
    00001e78: 	movq	%r13, %rdi
    00001e7b: 	subq	start_time(%rip), %rax
    00001e82: 	cvtsi2sd	%rax, %xmm0
    00001e87: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001e8f: 	callq	_Z13record_resultdPKc # Offset: 7823
    00001e94: 	movq	0xd0(%rsp), %rdi
    00001e9c: 	cmpq	(%rsp), %rdi
    00001ea0: 	je	.Ltmp2913 # Offset: 7840
    00001ea2: 	movq	0xe0(%rsp), %rax
    00001eaa: 	leaq	0x1(%rax), %rsi
    00001eae: 	callq	_ZdlPvm@PLT # Offset: 7854
.Ltmp2913:
    00001eb3: 	movq	0x8(%rsp), %rsi
    00001eb8: 	leaq	DATAat0x38508(%rip), %rdx
    00001ebf: 	movq	%r12, %rdi
    00001ec2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7874
    00001ec7: 	callq	clock@PLT # Offset: 7879
    00001ecc: 	movl	iterations(%rip), %esi
    00001ed2: 	movq	%rax, start_time(%rip)
    00001ed9: 	testl	%esi, %esi
    00001edb: 	jle	.Ltmp2914 # Offset: 7899
    00001ee1: 	movq	0x10(%rsp), %r13
    00001ee6: 	xorl	%r14d, %r14d
    00001ee9: 	addq	0x20(%rsp), %r13
    00001eee: 	leaq	DATAat0x381c8(%rip), %r15
    00001ef5: 	subq	0x18(%rsp), %r13
    00001efa: 	subq	0x28(%rsp), %r13
    00001eff: 	nop # Size: 1
.Ltmp2918:
    00001f00: 	movq	%rbp, %rax
    00001f03: 	xorl	%edx, %edx
    00001f05: 	nopl	(%rax) # Size: 3
.Ltmp2915:
    00001f08: 	movq	(%rax), %rcx
    00001f0b: 	addq	$0x8, %rax
    00001f0f: 	imulq	%r13, %rcx
    00001f13: 	addq	%rcx, %rdx
    00001f16: 	cmpq	%rbx, %rax
    00001f19: 	jne	.Ltmp2915 # Offset: 7961
    00001f1b: 	movsd	init_value(%rip), %xmm0
    00001f23: 	comisd	DATAat0x385f0(%rip), %xmm0
    00001f2b: 	jae	.Ltmp2916 # Offset: 7979
    00001f31: 	cvttsd2si	%xmm0, %rax
.Ltmp3010:
    00001f36: 	imulq	%r13, %rax
    00001f3a: 	imulq	$0x1f40, %rax, %rax
    00001f41: 	cmpq	%rax, %rdx
    00001f44: 	je	.Ltmp2917 # Offset: 8004
    00001f46: 	movl	current_test(%rip), %edx
    00001f4c: 	movq	%r15, %rsi
    00001f4f: 	movl	$0x1, %edi
    00001f54: 	xorl	%eax, %eax
    00001f56: 	callq	__printf_chk@PLT # Offset: 8022
    00001f5b: 	movl	iterations(%rip), %esi
.Ltmp2917:
    00001f61: 	addl	$0x1, %r14d
    00001f65: 	cmpl	%esi, %r14d
    00001f68: 	jl	.Ltmp2918 # Offset: 8040
.Ltmp2914:
    00001f6a: 	movq	%r12, %rsi
    00001f6d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f74: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8052
    00001f79: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f80: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f87: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f8e: 	je	.Ltmp2919 # Offset: 8078
.Ltmp3040:
    00001f94: 	movq	-0x20(%rax), %r13
    00001f98: 	callq	clock@PLT # Offset: 8088
    00001f9d: 	pxor	%xmm0, %xmm0
    00001fa1: 	movq	%rax, end_time(%rip)
    00001fa8: 	movq	%r13, %rdi
    00001fab: 	subq	start_time(%rip), %rax
    00001fb2: 	cvtsi2sd	%rax, %xmm0
    00001fb7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001fbf: 	callq	_Z13record_resultdPKc # Offset: 8127
    00001fc4: 	movq	0xd0(%rsp), %rdi
    00001fcc: 	cmpq	(%rsp), %rdi
    00001fd0: 	je	.Ltmp2920 # Offset: 8144
    00001fd2: 	movq	0xe0(%rsp), %rax
    00001fda: 	leaq	0x1(%rax), %rsi
    00001fde: 	callq	_ZdlPvm@PLT # Offset: 8158
.Ltmp2920:
    00001fe3: 	movq	0x8(%rsp), %rsi
    00001fe8: 	leaq	DATAat0x3839a(%rip), %rdx
    00001fef: 	movq	%r12, %rdi
    00001ff2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8178
    00001ff7: 	callq	clock@PLT # Offset: 8183
    00001ffc: 	movl	iterations(%rip), %esi
    00002002: 	movq	%rax, start_time(%rip)
    00002009: 	testl	%esi, %esi
    0000200b: 	jle	.Ltmp2921 # Offset: 8203
    00002011: 	movq	0x18(%rsp), %r13
    00002016: 	xorl	%r14d, %r14d
    00002019: 	addq	0x20(%rsp), %r13
    0000201e: 	leaq	DATAat0x381c8(%rip), %r15
    00002025: 	addq	0x10(%rsp), %r13
    0000202a: 	addq	0x28(%rsp), %r13
    0000202f: 	nop # Size: 1
.Ltmp2925:
    00002030: 	movq	%rbp, %rax
    00002033: 	xorl	%edx, %edx
    00002035: 	nopl	(%rax) # Size: 3
.Ltmp2922:
    00002038: 	movq	(%rax), %rcx
    0000203b: 	addq	$0x8, %rax
    0000203f: 	imulq	%r13, %rcx
    00002043: 	addq	%rcx, %rdx
    00002046: 	cmpq	%rbx, %rax
    00002049: 	jne	.Ltmp2922 # Offset: 8265
    0000204b: 	movsd	init_value(%rip), %xmm0
    00002053: 	comisd	DATAat0x385f0(%rip), %xmm0
    0000205b: 	jae	.Ltmp2923 # Offset: 8283
    00002061: 	cvttsd2si	%xmm0, %rax
.Ltmp3009:
    00002066: 	imulq	%r13, %rax
    0000206a: 	imulq	$0x1f40, %rax, %rax
    00002071: 	cmpq	%rax, %rdx
    00002074: 	je	.Ltmp2924 # Offset: 8308
    00002076: 	movl	current_test(%rip), %edx
    0000207c: 	movq	%r15, %rsi
    0000207f: 	movl	$0x1, %edi
    00002084: 	xorl	%eax, %eax
    00002086: 	callq	__printf_chk@PLT # Offset: 8326
    0000208b: 	movl	iterations(%rip), %esi
.Ltmp2924:
    00002091: 	addl	$0x1, %r14d
    00002095: 	cmpl	%esi, %r14d
    00002098: 	jl	.Ltmp2925 # Offset: 8344
.Ltmp2921:
    0000209a: 	movq	%r12, %rsi
    0000209d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020a4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8356
    000020a9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020b0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020be: 	je	.Ltmp2926 # Offset: 8382
.Ltmp3039:
    000020c4: 	movq	-0x20(%rax), %r13
    000020c8: 	callq	clock@PLT # Offset: 8392
    000020cd: 	pxor	%xmm0, %xmm0
    000020d1: 	movq	%rax, end_time(%rip)
    000020d8: 	movq	%r13, %rdi
    000020db: 	subq	start_time(%rip), %rax
    000020e2: 	cvtsi2sd	%rax, %xmm0
    000020e7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000020ef: 	callq	_Z13record_resultdPKc # Offset: 8431
    000020f4: 	movq	0xd0(%rsp), %rdi
    000020fc: 	cmpq	(%rsp), %rdi
    00002100: 	je	.Ltmp2927 # Offset: 8448
    00002102: 	movq	0xe0(%rsp), %rax
    0000210a: 	leaq	0x1(%rax), %rsi
    0000210e: 	callq	_ZdlPvm@PLT # Offset: 8462
.Ltmp2927:
    00002113: 	movq	0x8(%rsp), %rsi
    00002118: 	leaq	DATAat0x383b1(%rip), %rdx
    0000211f: 	movq	%r12, %rdi
    00002122: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8482
    00002127: 	callq	clock@PLT # Offset: 8487
    0000212c: 	movl	iterations(%rip), %esi
    00002132: 	movq	%rax, start_time(%rip)
    00002139: 	testl	%esi, %esi
    0000213b: 	jle	.Ltmp2928 # Offset: 8507
    00002141: 	movq	0x18(%rsp), %r13
    00002146: 	xorl	%r14d, %r14d
    00002149: 	addq	0x20(%rsp), %r13
    0000214e: 	leaq	DATAat0x381c8(%rip), %r15
    00002155: 	addq	0x10(%rsp), %r13
    0000215a: 	addq	0x28(%rsp), %r13
    0000215f: 	nop # Size: 1
.Ltmp2932:
    00002160: 	movq	%rbp, %rax
    00002163: 	xorl	%edx, %edx
    00002165: 	nopl	(%rax) # Size: 3
.Ltmp2929:
    00002168: 	movq	(%rax), %rcx
    0000216b: 	addq	$0x8, %rax
    0000216f: 	imulq	%r13, %rcx
    00002173: 	addq	%rcx, %rdx
    00002176: 	cmpq	%rbx, %rax
    00002179: 	jne	.Ltmp2929 # Offset: 8569
    0000217b: 	movsd	init_value(%rip), %xmm0
    00002183: 	comisd	DATAat0x385f0(%rip), %xmm0
    0000218b: 	jae	.Ltmp2930 # Offset: 8587
    00002191: 	cvttsd2si	%xmm0, %rax
.Ltmp3008:
    00002196: 	imulq	%r13, %rax
    0000219a: 	imulq	$0x1f40, %rax, %rax
    000021a1: 	cmpq	%rax, %rdx
    000021a4: 	je	.Ltmp2931 # Offset: 8612
    000021a6: 	movl	current_test(%rip), %edx
    000021ac: 	movq	%r15, %rsi
    000021af: 	movl	$0x1, %edi
    000021b4: 	xorl	%eax, %eax
    000021b6: 	callq	__printf_chk@PLT # Offset: 8630
    000021bb: 	movl	iterations(%rip), %esi
.Ltmp2931:
    000021c1: 	addl	$0x1, %r14d
    000021c5: 	cmpl	%esi, %r14d
    000021c8: 	jl	.Ltmp2932 # Offset: 8648
.Ltmp2928:
    000021ca: 	movq	%r12, %rsi
    000021cd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8660
    000021d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021e0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021e7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021ee: 	je	.Ltmp2933 # Offset: 8686
.Ltmp3038:
    000021f4: 	movq	-0x20(%rax), %r13
    000021f8: 	callq	clock@PLT # Offset: 8696
    000021fd: 	pxor	%xmm0, %xmm0
    00002201: 	movq	%rax, end_time(%rip)
    00002208: 	movq	%r13, %rdi
    0000220b: 	subq	start_time(%rip), %rax
    00002212: 	cvtsi2sd	%rax, %xmm0
    00002217: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000221f: 	callq	_Z13record_resultdPKc # Offset: 8735
    00002224: 	movq	0xd0(%rsp), %rdi
    0000222c: 	cmpq	(%rsp), %rdi
    00002230: 	je	.Ltmp2934 # Offset: 8752
    00002232: 	movq	0xe0(%rsp), %rax
    0000223a: 	leaq	0x1(%rax), %rsi
    0000223e: 	callq	_ZdlPvm@PLT # Offset: 8766
.Ltmp2934:
    00002243: 	movq	0x8(%rsp), %rsi
    00002248: 	leaq	DATAat0x383c9(%rip), %rdx
    0000224f: 	movq	%r12, %rdi
    00002252: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8786
    00002257: 	callq	clock@PLT # Offset: 8791
    0000225c: 	movl	iterations(%rip), %esi
    00002262: 	movq	%rax, start_time(%rip)
    00002269: 	testl	%esi, %esi
    0000226b: 	jle	.Ltmp2935 # Offset: 8811
    00002271: 	movq	0x10(%rsp), %r13
    00002276: 	xorl	%r14d, %r14d
    00002279: 	addq	0x20(%rsp), %r13
    0000227e: 	leaq	DATAat0x381c8(%rip), %r15
    00002285: 	subq	0x18(%rsp), %r13
    0000228a: 	subq	0x28(%rsp), %r13
    0000228f: 	nop # Size: 1
.Ltmp2939:
    00002290: 	movq	%rbp, %rax
    00002293: 	xorl	%edx, %edx
    00002295: 	nopl	(%rax) # Size: 3
.Ltmp2936:
    00002298: 	movq	(%rax), %rcx
    0000229b: 	addq	$0x8, %rax
    0000229f: 	imulq	%r13, %rcx
    000022a3: 	addq	%rcx, %rdx
    000022a6: 	cmpq	%rbx, %rax
    000022a9: 	jne	.Ltmp2936 # Offset: 8873
    000022ab: 	movsd	init_value(%rip), %xmm0
    000022b3: 	comisd	DATAat0x385f0(%rip), %xmm0
    000022bb: 	jae	.Ltmp2937 # Offset: 8891
    000022c1: 	cvttsd2si	%xmm0, %rax
.Ltmp3007:
    000022c6: 	imulq	%r13, %rax
    000022ca: 	imulq	$0x1f40, %rax, %rax
    000022d1: 	cmpq	%rax, %rdx
    000022d4: 	je	.Ltmp2938 # Offset: 8916
    000022d6: 	movl	current_test(%rip), %edx
    000022dc: 	movq	%r15, %rsi
    000022df: 	movl	$0x1, %edi
    000022e4: 	xorl	%eax, %eax
    000022e6: 	callq	__printf_chk@PLT # Offset: 8934
    000022eb: 	movl	iterations(%rip), %esi
.Ltmp2938:
    000022f1: 	addl	$0x1, %r14d
    000022f5: 	cmpl	%esi, %r14d
    000022f8: 	jl	.Ltmp2939 # Offset: 8952
.Ltmp2935:
    000022fa: 	movq	%r12, %rsi
    000022fd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002304: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8964
    00002309: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002310: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002317: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000231e: 	je	.Ltmp2940 # Offset: 8990
.Ltmp3037:
    00002324: 	movq	-0x20(%rax), %r13
    00002328: 	callq	clock@PLT # Offset: 9000
    0000232d: 	pxor	%xmm0, %xmm0
    00002331: 	movq	%rax, end_time(%rip)
    00002338: 	movq	%r13, %rdi
    0000233b: 	subq	start_time(%rip), %rax
    00002342: 	cvtsi2sd	%rax, %xmm0
    00002347: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000234f: 	callq	_Z13record_resultdPKc # Offset: 9039
    00002354: 	movq	0xd0(%rsp), %rdi
    0000235c: 	cmpq	(%rsp), %rdi
    00002360: 	je	.Ltmp2941 # Offset: 9056
    00002362: 	movq	0xe0(%rsp), %rax
    0000236a: 	leaq	0x1(%rax), %rsi
    0000236e: 	callq	_ZdlPvm@PLT # Offset: 9070
.Ltmp2941:
    00002373: 	movq	0x8(%rsp), %rsi
    00002378: 	leaq	DATAat0x38528(%rip), %rdx
    0000237f: 	movq	%r12, %rdi
    00002382: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9090
    00002387: 	callq	clock@PLT # Offset: 9095
    0000238c: 	movl	iterations(%rip), %esi
    00002392: 	movq	0x18(%rsp), %r13
    00002397: 	xorl	%r14d, %r14d
    0000239a: 	addq	0x20(%rsp), %r13
    0000239f: 	movq	%rax, start_time(%rip)
    000023a6: 	leaq	DATAat0x381c8(%rip), %r15
    000023ad: 	addq	0x28(%rsp), %r13
    000023b2: 	testl	%esi, %esi
    000023b4: 	jle	.Ltmp2942 # Offset: 9140
    000023ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2946:
    000023c0: 	movq	0x10(%rsp), %rdi
    000023c5: 	movq	%rbp, %rax
    000023c8: 	xorl	%ecx, %ecx
    000023ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2943:
    000023d0: 	movq	(%rax), %rdx
    000023d3: 	addq	$0x8, %rax
    000023d7: 	addq	%rdi, %rdx
    000023da: 	imulq	%r13, %rdx
    000023de: 	addq	%rdx, %rcx
    000023e1: 	cmpq	%rbx, %rax
    000023e4: 	jne	.Ltmp2943 # Offset: 9188
    000023e6: 	movsd	init_value(%rip), %xmm0
    000023ee: 	comisd	DATAat0x385f0(%rip), %xmm0
    000023f6: 	jae	.Ltmp2944 # Offset: 9206
    000023fc: 	cvttsd2si	%xmm0, %rax
.Ltmp3006:
    00002401: 	addq	0x10(%rsp), %rax
    00002406: 	imulq	%r13, %rax
    0000240a: 	imulq	$0x1f40, %rax, %rax
    00002411: 	cmpq	%rax, %rcx
    00002414: 	je	.Ltmp2945 # Offset: 9236
    00002416: 	movl	current_test(%rip), %edx
    0000241c: 	movq	%r15, %rsi
    0000241f: 	movl	$0x1, %edi
    00002424: 	xorl	%eax, %eax
    00002426: 	callq	__printf_chk@PLT # Offset: 9254
    0000242b: 	movl	iterations(%rip), %esi
.Ltmp2945:
    00002431: 	addl	$0x1, %r14d
    00002435: 	cmpl	%esi, %r14d
    00002438: 	jl	.Ltmp2946 # Offset: 9272
.Ltmp2942:
    0000243a: 	movq	%r12, %rsi
    0000243d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002444: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9284
    00002449: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002450: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002457: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000245e: 	je	.Ltmp2947 # Offset: 9310
.Ltmp3036:
    00002464: 	movq	-0x20(%rax), %r13
    00002468: 	callq	clock@PLT # Offset: 9320
    0000246d: 	pxor	%xmm0, %xmm0
    00002471: 	movq	%rax, end_time(%rip)
    00002478: 	movq	%r13, %rdi
    0000247b: 	subq	start_time(%rip), %rax
    00002482: 	cvtsi2sd	%rax, %xmm0
    00002487: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000248f: 	callq	_Z13record_resultdPKc # Offset: 9359
    00002494: 	movq	0xd0(%rsp), %rdi
    0000249c: 	cmpq	(%rsp), %rdi
    000024a0: 	je	.Ltmp2948 # Offset: 9376
    000024a2: 	movq	0xe0(%rsp), %rax
    000024aa: 	leaq	0x1(%rax), %rsi
    000024ae: 	callq	_ZdlPvm@PLT # Offset: 9390
.Ltmp2948:
    000024b3: 	movq	0x8(%rsp), %rsi
    000024b8: 	leaq	DATAat0x383e1(%rip), %rdx
    000024bf: 	movq	%r12, %rdi
    000024c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9410
    000024c7: 	callq	clock@PLT # Offset: 9415
    000024cc: 	movl	iterations(%rip), %esi
    000024d2: 	movq	%rax, start_time(%rip)
    000024d9: 	testl	%esi, %esi
    000024db: 	jle	.Ltmp2949 # Offset: 9435
    000024e1: 	movq	0x20(%rsp), %r8
    000024e6: 	movq	0x28(%rsp), %r9
    000024eb: 	xorl	%r15d, %r15d
    000024ee: 	movq	0x10(%rsp), %rcx
    000024f3: 	movq	0x18(%rsp), %rdx
    000024f8: 	movq	%r8, %rax
    000024fb: 	addq	%r9, %rax
    000024fe: 	movq	%rcx, %rdi
    00002501: 	imulq	%rcx, %rax
    00002505: 	imulq	%rdx, %rdi
    00002509: 	addq	%r8, %rdx
    0000250c: 	movq	%rdx, %r13
    0000250f: 	movq	%rax, 0x18(%rsp)
    00002514: 	addq	%r9, %r13
    00002517: 	movq	%rdi, 0x10(%rsp)
    0000251c: 	addq	%rax, %rdi
    0000251f: 	movq	%rdi, %r14
    00002522: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2953:
    00002528: 	movq	%rbp, %rax
    0000252b: 	xorl	%ecx, %ecx
    0000252d: 	nopl	(%rax) # Size: 3
.Ltmp2950:
    00002530: 	movq	(%rax), %rdx
    00002533: 	addq	$0x8, %rax
    00002537: 	imulq	%r13, %rdx
    0000253b: 	addq	%r14, %rdx
    0000253e: 	addq	%rdx, %rcx
    00002541: 	cmpq	%rbx, %rax
    00002544: 	jne	.Ltmp2950 # Offset: 9540
    00002546: 	movsd	init_value(%rip), %xmm0
    0000254e: 	comisd	DATAat0x385f0(%rip), %xmm0
    00002556: 	jae	.Ltmp2951 # Offset: 9558
    0000255c: 	cvttsd2si	%xmm0, %rax
.Ltmp3005:
    00002561: 	imulq	%r13, %rax
    00002565: 	addq	0x18(%rsp), %rax
    0000256a: 	addq	0x10(%rsp), %rax
    0000256f: 	imulq	$0x1f40, %rax, %rax
    00002576: 	cmpq	%rax, %rcx
    00002579: 	je	.Ltmp2952 # Offset: 9593
    0000257b: 	movl	current_test(%rip), %edx
    00002581: 	leaq	DATAat0x381c8(%rip), %rsi
    00002588: 	movl	$0x1, %edi
    0000258d: 	xorl	%eax, %eax
    0000258f: 	callq	__printf_chk@PLT # Offset: 9615
    00002594: 	movl	iterations(%rip), %esi
.Ltmp2952:
    0000259a: 	addl	$0x1, %r15d
    0000259e: 	cmpl	%esi, %r15d
    000025a1: 	jl	.Ltmp2953 # Offset: 9633
.Ltmp2949:
    000025a3: 	movq	%r12, %rsi
    000025a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000025ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9645
    000025b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000025c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025c7: 	je	.Ltmp2954 # Offset: 9671
.Ltmp3035:
    000025cd: 	movq	-0x20(%rax), %r13
    000025d1: 	callq	clock@PLT # Offset: 9681
    000025d6: 	pxor	%xmm0, %xmm0
    000025da: 	movq	%rax, end_time(%rip)
    000025e1: 	movq	%r13, %rdi
    000025e4: 	subq	start_time(%rip), %rax
    000025eb: 	cvtsi2sd	%rax, %xmm0
    000025f0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000025f8: 	callq	_Z13record_resultdPKc # Offset: 9720
    000025fd: 	movq	0xd0(%rsp), %rdi
    00002605: 	cmpq	(%rsp), %rdi
    00002609: 	je	.Ltmp2955 # Offset: 9737
    0000260b: 	movq	0xe0(%rsp), %rax
    00002613: 	leaq	0x1(%rax), %rsi
    00002617: 	callq	_ZdlPvm@PLT # Offset: 9751
.Ltmp2955:
    0000261c: 	movq	0x8(%rsp), %rbx
    00002621: 	leaq	0xb0(%rsp), %rdi
    00002629: 	leaq	DATAat0x3839a(%rip), %rdx
    00002630: 	movq	%rbx, %rsi
    00002633: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9779
    00002638: 	movl	iterations(%rip), %esi
    0000263e: 	movq	0xb0(%rsp), %rdi
    00002646: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 9798
    0000264b: 	leaq	DATAat0x383fa(%rip), %rdx
    00002652: 	movq	%rbx, %rsi
    00002655: 	movq	%r12, %rdi
    00002658: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9816
    0000265d: 	movq	%r12, %rdx
    00002660: 	movl	$0x1f40, %esi
    00002665: 	movq	%rbp, %rdi
    00002668: 	callq	_Z10test_2termIm20custom_2term_add_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9832
    0000266d: 	movq	0xd0(%rsp), %rdi
    00002675: 	cmpq	(%rsp), %rdi
    00002679: 	je	.Ltmp2956 # Offset: 9849
    0000267b: 	movq	0xe0(%rsp), %rax
    00002683: 	leaq	0x1(%rax), %rsi
    00002687: 	callq	_ZdlPvm@PLT # Offset: 9863
.Ltmp2956:
    0000268c: 	movq	0x8(%rsp), %rsi
    00002691: 	leaq	DATAat0x38409(%rip), %rdx
    00002698: 	movq	%r12, %rdi
    0000269b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9883
    000026a0: 	movq	%r12, %rdx
    000026a3: 	movl	$0x1f40, %esi
    000026a8: 	movq	%rbp, %rdi
    000026ab: 	callq	_Z10test_2termIm16custom_2term_addImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9899
    000026b0: 	movq	0xd0(%rsp), %rdi
    000026b8: 	cmpq	(%rsp), %rdi
    000026bc: 	je	.Ltmp2957 # Offset: 9916
    000026be: 	movq	0xe0(%rsp), %rax
    000026c6: 	leaq	0x1(%rax), %rsi
    000026ca: 	callq	_ZdlPvm@PLT # Offset: 9930
.Ltmp2957:
    000026cf: 	movq	0x8(%rsp), %rsi
    000026d4: 	leaq	DATAat0x38414(%rip), %rdx
    000026db: 	movq	%r12, %rdi
    000026de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9950
    000026e3: 	movq	%r12, %rdx
    000026e6: 	movl	$0x1f40, %esi
    000026eb: 	movq	%rbp, %rdi
    000026ee: 	callq	_Z10test_2termIm20custom_2term_sub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9966
    000026f3: 	movq	0xd0(%rsp), %rdi
    000026fb: 	cmpq	(%rsp), %rdi
    000026ff: 	je	.Ltmp2958 # Offset: 9983
    00002701: 	movq	0xe0(%rsp), %rax
    00002709: 	leaq	0x1(%rax), %rsi
    0000270d: 	callq	_ZdlPvm@PLT # Offset: 9997
.Ltmp2958:
    00002712: 	movq	0x8(%rsp), %rsi
    00002717: 	leaq	DATAat0x38423(%rip), %rdx
    0000271e: 	movq	%r12, %rdi
    00002721: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10017
    00002726: 	movq	%r12, %rdx
    00002729: 	movl	$0x1f40, %esi
    0000272e: 	movq	%rbp, %rdi
    00002731: 	callq	_Z10test_2termIm16custom_2term_subImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10033
    00002736: 	movq	0xd0(%rsp), %rdi
    0000273e: 	cmpq	(%rsp), %rdi
    00002742: 	je	.Ltmp2959 # Offset: 10050
    00002744: 	movq	0xe0(%rsp), %rax
    0000274c: 	leaq	0x1(%rax), %rsi
    00002750: 	callq	_ZdlPvm@PLT # Offset: 10064
.Ltmp2959:
    00002755: 	movq	0x8(%rsp), %rsi
    0000275a: 	leaq	DATAat0x3842e(%rip), %rdx
    00002761: 	movq	%r12, %rdi
    00002764: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10084
    00002769: 	movq	%r12, %rdx
    0000276c: 	movl	$0x1f40, %esi
    00002771: 	movq	%rbp, %rdi
    00002774: 	callq	_Z10test_2termIm23custom_2term_addsub_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10100
    00002779: 	movq	0xd0(%rsp), %rdi
    00002781: 	cmpq	(%rsp), %rdi
    00002785: 	je	.Ltmp2960 # Offset: 10117
    00002787: 	movq	0xe0(%rsp), %rax
    0000278f: 	leaq	0x1(%rax), %rsi
    00002793: 	callq	_ZdlPvm@PLT # Offset: 10131
.Ltmp2960:
    00002798: 	movq	0x8(%rsp), %rsi
    0000279d: 	leaq	DATAat0x38440(%rip), %rdx
    000027a4: 	movq	%r12, %rdi
    000027a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10151
    000027ac: 	movq	%r12, %rdx
    000027af: 	movl	$0x1f40, %esi
    000027b4: 	movq	%rbp, %rdi
    000027b7: 	callq	_Z10test_2termIm19custom_2term_addsubImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10167
    000027bc: 	movq	0xd0(%rsp), %rdi
    000027c4: 	cmpq	(%rsp), %rdi
    000027c8: 	je	.Ltmp2961 # Offset: 10184
    000027ca: 	movq	0xe0(%rsp), %rax
    000027d2: 	leaq	0x1(%rax), %rsi
    000027d6: 	callq	_ZdlPvm@PLT # Offset: 10198
.Ltmp2961:
    000027db: 	movq	0x8(%rsp), %rsi
    000027e0: 	leaq	DATAat0x3844e(%rip), %rdx
    000027e7: 	movq	%r12, %rdi
    000027ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10218
    000027ef: 	callq	clock@PLT # Offset: 10223
    000027f4: 	movl	iterations(%rip), %esi
    000027fa: 	xorl	%r13d, %r13d
    000027fd: 	leaq	0xf9f0(%rbp), %rbx
    00002804: 	movq	%rax, start_time(%rip)
    0000280b: 	leaq	DATAat0x381c8(%rip), %r14
    00002812: 	testl	%esi, %esi
    00002814: 	jle	.Ltmp2962 # Offset: 10260
    0000281a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2965:
    00002820: 	movq	0xf8(%rsp), %rcx
    00002828: 	movq	%rbp, %rax
    0000282b: 	xorq	0xf0(%rsp), %rcx
    00002833: 	pxor	%xmm0, %xmm0
    00002837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2963:
    00002840: 	movdqu	0x8(%rax), %xmm1
    00002845: 	pxor	(%rax), %xmm1
    00002849: 	addq	$0x10, %rax
    0000284d: 	paddq	%xmm1, %xmm0
    00002851: 	cmpq	%rax, %rbx
    00002854: 	jne	.Ltmp2963 # Offset: 10324
    00002856: 	movdqa	%xmm0, %xmm1
    0000285a: 	movq	0xfae0(%rsp), %rdx
    00002862: 	xorq	0xfae8(%rsp), %rdx
    0000286a: 	psrldq	$0x8, %xmm1
    0000286f: 	addq	%rcx, %rdx
    00002872: 	paddq	%xmm1, %xmm0
    00002876: 	movq	%xmm0, %rax
    0000287b: 	addq	%rax, %rdx
    0000287e: 	je	.Ltmp2964 # Offset: 10366
    00002880: 	movl	current_test(%rip), %edx
    00002886: 	movq	%r14, %rsi
    00002889: 	movl	$0x1, %edi
    0000288e: 	xorl	%eax, %eax
    00002890: 	callq	__printf_chk@PLT # Offset: 10384
    00002895: 	movl	iterations(%rip), %esi
    0000289b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2964:
    000028a0: 	addl	$0x1, %r13d
    000028a4: 	cmpl	%esi, %r13d
    000028a7: 	jl	.Ltmp2965 # Offset: 10407
.Ltmp2962:
    000028ad: 	movq	%r12, %rsi
    000028b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000028b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10423
    000028bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000028ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028d1: 	je	.Ltmp2966 # Offset: 10449
.Ltmp3034:
    000028d7: 	movq	-0x20(%rax), %r13
    000028db: 	callq	clock@PLT # Offset: 10459
    000028e0: 	pxor	%xmm0, %xmm0
    000028e4: 	movq	%rax, end_time(%rip)
    000028eb: 	movq	%r13, %rdi
    000028ee: 	subq	start_time(%rip), %rax
    000028f5: 	cvtsi2sd	%rax, %xmm0
    000028fa: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002902: 	callq	_Z13record_resultdPKc # Offset: 10498
    00002907: 	movq	0xd0(%rsp), %rdi
    0000290f: 	cmpq	(%rsp), %rdi
    00002913: 	je	.Ltmp2967 # Offset: 10515
    00002915: 	movq	0xe0(%rsp), %rax
    0000291d: 	leaq	0x1(%rax), %rsi
    00002921: 	callq	_ZdlPvm@PLT # Offset: 10529
.Ltmp2967:
    00002926: 	movq	0x8(%rsp), %rsi
    0000292b: 	leaq	DATAat0x3845d(%rip), %rdx
    00002932: 	movq	%r12, %rdi
    00002935: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10549
    0000293a: 	callq	clock@PLT # Offset: 10554
    0000293f: 	movl	iterations(%rip), %esi
    00002945: 	xorl	%r13d, %r13d
    00002948: 	leaq	0xf9f0(%rbp), %rbx
    0000294f: 	movq	%rax, start_time(%rip)
    00002956: 	leaq	DATAat0x381c8(%rip), %r14
    0000295d: 	testl	%esi, %esi
    0000295f: 	jle	.Ltmp2968 # Offset: 10591
    00002965: 	nopl	(%rax) # Size: 3
.Ltmp2971:
    00002968: 	movq	0xf8(%rsp), %rcx
    00002970: 	movq	%rbp, %rax
    00002973: 	xorq	0xf0(%rsp), %rcx
    0000297b: 	pxor	%xmm0, %xmm0
    0000297f: 	nop # Size: 1
.Ltmp2969:
    00002980: 	movdqu	0x8(%rax), %xmm1
    00002985: 	pxor	(%rax), %xmm1
    00002989: 	addq	$0x10, %rax
    0000298d: 	paddq	%xmm1, %xmm0
    00002991: 	cmpq	%rbx, %rax
    00002994: 	jne	.Ltmp2969 # Offset: 10644
    00002996: 	movdqa	%xmm0, %xmm1
    0000299a: 	movq	0xfae0(%rsp), %rdx
    000029a2: 	xorq	0xfae8(%rsp), %rdx
    000029aa: 	psrldq	$0x8, %xmm1
    000029af: 	addq	%rcx, %rdx
    000029b2: 	paddq	%xmm1, %xmm0
    000029b6: 	movq	%xmm0, %rax
    000029bb: 	addq	%rax, %rdx
    000029be: 	je	.Ltmp2970 # Offset: 10686
    000029c0: 	movl	current_test(%rip), %edx
    000029c6: 	movq	%r14, %rsi
    000029c9: 	movl	$0x1, %edi
    000029ce: 	xorl	%eax, %eax
    000029d0: 	callq	__printf_chk@PLT # Offset: 10704
    000029d5: 	movl	iterations(%rip), %esi
    000029db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2970:
    000029e0: 	addl	$0x1, %r13d
    000029e4: 	cmpl	%esi, %r13d
    000029e7: 	jl	.Ltmp2971 # Offset: 10727
.Ltmp2968:
    000029ed: 	movq	%r12, %rsi
    000029f0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000029f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10743
    000029fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a03: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a0a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a11: 	je	.Ltmp2972 # Offset: 10769
.Ltmp3033:
    00002a17: 	movq	-0x20(%rax), %r13
    00002a1b: 	callq	clock@PLT # Offset: 10779
    00002a20: 	pxor	%xmm0, %xmm0
    00002a24: 	movq	%rax, end_time(%rip)
    00002a2b: 	movq	%r13, %rdi
    00002a2e: 	subq	start_time(%rip), %rax
    00002a35: 	cvtsi2sd	%rax, %xmm0
    00002a3a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002a42: 	callq	_Z13record_resultdPKc # Offset: 10818
    00002a47: 	movq	0xd0(%rsp), %rdi
    00002a4f: 	cmpq	(%rsp), %rdi
    00002a53: 	je	.Ltmp2973 # Offset: 10835
    00002a55: 	movq	0xe0(%rsp), %rax
    00002a5d: 	leaq	0x1(%rax), %rsi
    00002a61: 	callq	_ZdlPvm@PLT # Offset: 10849
.Ltmp2973:
    00002a66: 	movq	0x8(%rsp), %rsi
    00002a6b: 	leaq	DATAat0x38468(%rip), %rdx
    00002a72: 	movq	%r12, %rdi
    00002a75: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10869
    00002a7a: 	movq	%r12, %rdx
    00002a7d: 	movl	$0x1f40, %esi
    00002a82: 	movq	%rbp, %rdi
    00002a85: 	callq	_Z10test_2termIm19custom_2term_or_optImEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10885
    00002a8a: 	movq	0xd0(%rsp), %rdi
    00002a92: 	cmpq	(%rsp), %rdi
    00002a96: 	je	.Ltmp2974 # Offset: 10902
    00002a98: 	movq	0xe0(%rsp), %rax
    00002aa0: 	leaq	0x1(%rax), %rsi
    00002aa4: 	callq	_ZdlPvm@PLT # Offset: 10916
.Ltmp2974:
    00002aa9: 	movq	0x8(%rsp), %rsi
    00002aae: 	leaq	DATAat0x38476(%rip), %rdx
    00002ab5: 	movq	%r12, %rdi
    00002ab8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10936
    00002abd: 	callq	clock@PLT # Offset: 10941
    00002ac2: 	movl	iterations(%rip), %esi
    00002ac8: 	xorl	%r14d, %r14d
    00002acb: 	leaq	0xf9f0(%rbp), %rbx
    00002ad2: 	movq	%rax, start_time(%rip)
    00002ad9: 	leaq	DATAat0x381c8(%rip), %r15
    00002ae0: 	movabsq	$-0x8000000000000000, %r13
    00002aea: 	testl	%esi, %esi
    00002aec: 	jle	.Ltmp2975 # Offset: 10988
    00002af2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2979:
    00002af8: 	movq	0xf8(%rsp), %rdx
    00002b00: 	movq	%rbp, %rax
    00002b03: 	orq	0xf0(%rsp), %rdx
    00002b0b: 	pxor	%xmm0, %xmm0
    00002b0f: 	nop # Size: 1
.Ltmp2976:
    00002b10: 	movdqu	0x8(%rax), %xmm1
    00002b15: 	por	(%rax), %xmm1
    00002b19: 	addq	$0x10, %rax
    00002b1d: 	paddq	%xmm1, %xmm0
    00002b21: 	cmpq	%rax, %rbx
    00002b24: 	jne	.Ltmp2976 # Offset: 11044
    00002b26: 	movsd	init_value(%rip), %xmm1
    00002b2e: 	comisd	DATAat0x385f0(%rip), %xmm1
    00002b36: 	jae	.Ltmp2977 # Offset: 11062
    00002b3c: 	cvttsd2si	%xmm1, %rax
.Ltmp3004:
    00002b41: 	movdqa	%xmm0, %xmm1
    00002b45: 	imulq	$0x1f40, %rax, %rcx
    00002b4c: 	movq	0xfae0(%rsp), %rax
    00002b54: 	orq	0xfae8(%rsp), %rax
    00002b5c: 	psrldq	$0x8, %xmm1
    00002b61: 	addq	%rdx, %rax
    00002b64: 	paddq	%xmm1, %xmm0
    00002b68: 	movq	%xmm0, %rdx
    00002b6d: 	addq	%rdx, %rax
    00002b70: 	cmpq	%rax, %rcx
    00002b73: 	je	.Ltmp2978 # Offset: 11123
    00002b75: 	movl	current_test(%rip), %edx
    00002b7b: 	movq	%r15, %rsi
    00002b7e: 	movl	$0x1, %edi
    00002b83: 	xorl	%eax, %eax
    00002b85: 	callq	__printf_chk@PLT # Offset: 11141
    00002b8a: 	movl	iterations(%rip), %esi
.Ltmp2978:
    00002b90: 	addl	$0x1, %r14d
    00002b94: 	cmpl	%esi, %r14d
    00002b97: 	jl	.Ltmp2979 # Offset: 11159
.Ltmp2975:
    00002b9d: 	movq	%r12, %rsi
    00002ba0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ba7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11175
    00002bac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002bb3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002bba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002bc1: 	je	.Ltmp2980 # Offset: 11201
.Ltmp3032:
    00002bc7: 	movq	-0x20(%rax), %r13
    00002bcb: 	callq	clock@PLT # Offset: 11211
    00002bd0: 	pxor	%xmm0, %xmm0
    00002bd4: 	movq	%rax, end_time(%rip)
    00002bdb: 	movq	%r13, %rdi
    00002bde: 	subq	start_time(%rip), %rax
    00002be5: 	cvtsi2sd	%rax, %xmm0
    00002bea: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002bf2: 	callq	_Z13record_resultdPKc # Offset: 11250
    00002bf7: 	movq	0xd0(%rsp), %rdi
    00002bff: 	cmpq	(%rsp), %rdi
    00002c03: 	je	.Ltmp2981 # Offset: 11267
    00002c05: 	movq	0xe0(%rsp), %rax
    00002c0d: 	leaq	0x1(%rax), %rsi
    00002c11: 	callq	_ZdlPvm@PLT # Offset: 11281
.Ltmp2981:
    00002c16: 	movq	0x8(%rsp), %rsi
    00002c1b: 	leaq	DATAat0x38480(%rip), %rdx
    00002c22: 	movq	%r12, %rdi
    00002c25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11301
    00002c2a: 	callq	clock@PLT # Offset: 11306
    00002c2f: 	movl	iterations(%rip), %esi
    00002c35: 	xorl	%r14d, %r14d
    00002c38: 	leaq	0xf9f0(%rbp), %rbx
    00002c3f: 	movq	%rax, start_time(%rip)
    00002c46: 	leaq	DATAat0x381c8(%rip), %r15
    00002c4d: 	movabsq	$-0x8000000000000000, %r13
    00002c57: 	testl	%esi, %esi
    00002c59: 	jle	.Ltmp2982 # Offset: 11353
    00002c5f: 	nop # Size: 1
.Ltmp2986:
    00002c60: 	movq	0xf8(%rsp), %rdx
    00002c68: 	movq	%rbp, %rax
    00002c6b: 	andq	0xf0(%rsp), %rdx
    00002c73: 	pxor	%xmm0, %xmm0
    00002c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2983:
    00002c80: 	movdqu	0x8(%rax), %xmm1
    00002c85: 	pand	(%rax), %xmm1
    00002c89: 	addq	$0x10, %rax
    00002c8d: 	paddq	%xmm1, %xmm0
    00002c91: 	cmpq	%rbx, %rax
    00002c94: 	jne	.Ltmp2983 # Offset: 11412
    00002c96: 	movsd	init_value(%rip), %xmm1
    00002c9e: 	comisd	DATAat0x385f0(%rip), %xmm1
    00002ca6: 	jae	.Ltmp2984 # Offset: 11430
    00002cac: 	cvttsd2si	%xmm1, %rax
.Ltmp3003:
    00002cb1: 	movdqa	%xmm0, %xmm1
    00002cb5: 	imulq	$0x1f40, %rax, %rcx
    00002cbc: 	movq	0xfae0(%rsp), %rax
    00002cc4: 	andq	0xfae8(%rsp), %rax
    00002ccc: 	psrldq	$0x8, %xmm1
    00002cd1: 	addq	%rdx, %rax
    00002cd4: 	paddq	%xmm1, %xmm0
    00002cd8: 	movq	%xmm0, %rdx
    00002cdd: 	addq	%rdx, %rax
    00002ce0: 	cmpq	%rax, %rcx
    00002ce3: 	je	.Ltmp2985 # Offset: 11491
    00002ce5: 	movl	current_test(%rip), %edx
    00002ceb: 	movq	%r15, %rsi
    00002cee: 	movl	$0x1, %edi
    00002cf3: 	xorl	%eax, %eax
    00002cf5: 	callq	__printf_chk@PLT # Offset: 11509
    00002cfa: 	movl	iterations(%rip), %esi
.Ltmp2985:
    00002d00: 	addl	$0x1, %r14d
    00002d04: 	cmpl	%esi, %r14d
    00002d07: 	jl	.Ltmp2986 # Offset: 11527
.Ltmp2982:
    00002d0d: 	movq	%r12, %rsi
    00002d10: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002d17: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11543
    00002d1c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d23: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d31: 	je	.Ltmp2987 # Offset: 11569
.Ltmp3031:
    00002d37: 	movq	-0x20(%rax), %r13
    00002d3b: 	callq	clock@PLT # Offset: 11579
    00002d40: 	pxor	%xmm0, %xmm0
    00002d44: 	movq	%rax, end_time(%rip)
    00002d4b: 	movq	%r13, %rdi
    00002d4e: 	subq	start_time(%rip), %rax
    00002d55: 	cvtsi2sd	%rax, %xmm0
    00002d5a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d62: 	callq	_Z13record_resultdPKc # Offset: 11618
    00002d67: 	movq	0xd0(%rsp), %rdi
    00002d6f: 	cmpq	(%rsp), %rdi
    00002d73: 	je	.Ltmp2988 # Offset: 11635
    00002d75: 	movq	0xe0(%rsp), %rax
    00002d7d: 	leaq	0x1(%rax), %rsi
    00002d81: 	callq	_ZdlPvm@PLT # Offset: 11649
.Ltmp2988:
    00002d86: 	movq	0x8(%rsp), %rsi
    00002d8b: 	leaq	DATAat0x3848f(%rip), %rdx
    00002d92: 	movq	%r12, %rdi
    00002d95: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11669
    00002d9a: 	callq	clock@PLT # Offset: 11674
    00002d9f: 	movl	iterations(%rip), %esi
    00002da5: 	xorl	%r14d, %r14d
    00002da8: 	leaq	0xf9f0(%rbp), %rbx
    00002daf: 	movq	%rax, start_time(%rip)
    00002db6: 	leaq	DATAat0x381c8(%rip), %r15
    00002dbd: 	movabsq	$-0x8000000000000000, %r13
    00002dc7: 	testl	%esi, %esi
    00002dc9: 	jle	.Ltmp2989 # Offset: 11721
    00002dcf: 	nop # Size: 1
.Ltmp2993:
    00002dd0: 	movq	0xf8(%rsp), %rdx
    00002dd8: 	movq	%rbp, %rax
    00002ddb: 	andq	0xf0(%rsp), %rdx
    00002de3: 	pxor	%xmm0, %xmm0
    00002de7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2990:
    00002df0: 	movdqu	0x8(%rax), %xmm1
    00002df5: 	pand	(%rax), %xmm1
    00002df9: 	addq	$0x10, %rax
    00002dfd: 	paddq	%xmm1, %xmm0
    00002e01: 	cmpq	%rbx, %rax
    00002e04: 	jne	.Ltmp2990 # Offset: 11780
    00002e06: 	movsd	init_value(%rip), %xmm1
    00002e0e: 	comisd	DATAat0x385f0(%rip), %xmm1
    00002e16: 	jae	.Ltmp2991 # Offset: 11798
    00002e1c: 	cvttsd2si	%xmm1, %rax
.Ltmp3002:
    00002e21: 	movdqa	%xmm0, %xmm1
    00002e25: 	imulq	$0x1f40, %rax, %rcx
    00002e2c: 	movq	0xfae8(%rsp), %rax
    00002e34: 	andq	0xfae0(%rsp), %rax
    00002e3c: 	psrldq	$0x8, %xmm1
    00002e41: 	addq	%rdx, %rax
    00002e44: 	paddq	%xmm1, %xmm0
    00002e48: 	movq	%xmm0, %rdx
    00002e4d: 	addq	%rdx, %rax
    00002e50: 	cmpq	%rax, %rcx
    00002e53: 	je	.Ltmp2992 # Offset: 11859
    00002e55: 	movl	current_test(%rip), %edx
    00002e5b: 	movq	%r15, %rsi
    00002e5e: 	movl	$0x1, %edi
    00002e63: 	xorl	%eax, %eax
    00002e65: 	callq	__printf_chk@PLT # Offset: 11877
    00002e6a: 	movl	iterations(%rip), %esi
.Ltmp2992:
    00002e70: 	addl	$0x1, %r14d
    00002e74: 	cmpl	%esi, %r14d
    00002e77: 	jl	.Ltmp2993 # Offset: 11895
.Ltmp2989:
    00002e7d: 	movq	%r12, %rsi
    00002e80: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002e87: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11911
    00002e8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002e93: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002e9a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ea1: 	je	.Ltmp2994 # Offset: 11937
.Ltmp3030:
    00002ea7: 	movq	-0x20(%rax), %rbp
    00002eab: 	callq	clock@PLT # Offset: 11947
    00002eb0: 	pxor	%xmm0, %xmm0
    00002eb4: 	movq	%rax, end_time(%rip)
    00002ebb: 	movq	%rbp, %rdi
    00002ebe: 	subq	start_time(%rip), %rax
    00002ec5: 	cvtsi2sd	%rax, %xmm0
    00002eca: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002ed2: 	callq	_Z13record_resultdPKc # Offset: 11986
    00002ed7: 	movq	0xd0(%rsp), %rdi
    00002edf: 	cmpq	(%rsp), %rdi
    00002ee3: 	je	.Ltmp2995 # Offset: 12003
    00002ee5: 	movq	0xe0(%rsp), %rax
    00002eed: 	leaq	0x1(%rax), %rsi
    00002ef1: 	callq	_ZdlPvm@PLT # Offset: 12017
.Ltmp2995:
    00002ef6: 	movq	0x8(%rsp), %rsi
    00002efb: 	leaq	DATAat0x38550(%rip), %rdx
    00002f02: 	movq	%r12, %rdi
    00002f05: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12037
    00002f0a: 	movl	iterations(%rip), %esi
    00002f10: 	movq	0xd0(%rsp), %rdi
    00002f18: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 12056
    00002f1d: 	movq	0xd0(%rsp), %rdi
    00002f25: 	cmpq	(%rsp), %rdi
    00002f29: 	je	.Ltmp2996 # Offset: 12073
    00002f2b: 	movq	0xe0(%rsp), %rax
    00002f33: 	leaq	0x1(%rax), %rsi
    00002f37: 	callq	_ZdlPvm@PLT # Offset: 12087
.Ltmp2996:
    00002f3c: 	movq	0xb0(%rsp), %rdi
    00002f44: 	leaq	0xc0(%rsp), %rax
    00002f4c: 	cmpq	%rax, %rdi
    00002f4f: 	je	.Ltmp2997 # Offset: 12111
    00002f51: 	movq	0xc0(%rsp), %rax
    00002f59: 	leaq	0x1(%rax), %rsi
    00002f5d: 	callq	_ZdlPvm@PLT # Offset: 12125
.Ltmp2997:
    00002f62: 	movq	0x90(%rsp), %rdi
    00002f6a: 	leaq	0xa0(%rsp), %rax
    00002f72: 	cmpq	%rax, %rdi
    00002f75: 	je	.Ltmp2998 # Offset: 12149
    00002f77: 	movq	0xa0(%rsp), %rax
    00002f7f: 	leaq	0x1(%rax), %rsi
    00002f83: 	callq	_ZdlPvm@PLT # Offset: 12163
.Ltmp2998:
    00002f88: 	movq	0x70(%rsp), %rdi
    00002f8d: 	leaq	0x80(%rsp), %rax
    00002f95: 	cmpq	%rax, %rdi
    00002f98: 	je	.Ltmp2999 # Offset: 12184
    00002f9a: 	movq	0x80(%rsp), %rax
    00002fa2: 	leaq	0x1(%rax), %rsi
    00002fa6: 	callq	_ZdlPvm@PLT # Offset: 12198
.Ltmp2999:
    00002fab: 	movq	0x50(%rsp), %rdi
    00002fb0: 	leaq	0x60(%rsp), %rax
    00002fb5: 	cmpq	%rax, %rdi
    00002fb8: 	je	.Ltmp3000 # Offset: 12216
    00002fba: 	movq	0x60(%rsp), %rax
    00002fbf: 	leaq	0x1(%rax), %rsi
    00002fc3: 	callq	_ZdlPvm@PLT # Offset: 12227
.Ltmp3000:
    00002fc8: 	movq	0xfaf8(%rsp), %rax
    00002fd0: 	subq	%fs:0x28, %rax
    00002fd9: 	jne	.Ltmp3001 # Offset: 12249
    00002fdf: 	addq	$0xfb08, %rsp
    00002fe6: 	popq	%rbx
    00002fe7: 	popq	%rbp
    00002fe8: 	popq	%r12
    00002fea: 	popq	%r13
    00002fec: 	popq	%r14
    00002fee: 	popq	%r15
    00002ff0: 	retq # Offset: 12272
    00002ff1: 	nopl	(%rax) # Size: 7
.Ltmp2991:
    00002ff8: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003000: 	cvttsd2si	%xmm1, %rax
    00003005: 	xorq	%r13, %rax
    00003008: 	jmp	.Ltmp3002 # Offset: 12296
    0000300d: 	nopl	(%rax) # Size: 3
.Ltmp2984:
    00003010: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003018: 	cvttsd2si	%xmm1, %rax
    0000301d: 	xorq	%r13, %rax
    00003020: 	jmp	.Ltmp3003 # Offset: 12320
    00003025: 	nopl	(%rax) # Size: 3
.Ltmp2977:
    00003028: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003030: 	cvttsd2si	%xmm1, %rax
    00003035: 	xorq	%r13, %rax
    00003038: 	jmp	.Ltmp3004 # Offset: 12344
    0000303d: 	nopl	(%rax) # Size: 3
.Ltmp2951:
    00003040: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003048: 	movabsq	$-0x8000000000000000, %rdi
    00003052: 	cvttsd2si	%xmm0, %rax
    00003057: 	xorq	%rdi, %rax
    0000305a: 	jmp	.Ltmp3005 # Offset: 12378
    0000305f: 	nop # Size: 1
.Ltmp2944:
    00003060: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003068: 	movabsq	$-0x8000000000000000, %rdi
    00003072: 	cvttsd2si	%xmm0, %rax
    00003077: 	xorq	%rdi, %rax
    0000307a: 	jmp	.Ltmp3006 # Offset: 12410
    0000307f: 	nop # Size: 1
.Ltmp2937:
    00003080: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003088: 	movabsq	$-0x8000000000000000, %rdi
    00003092: 	cvttsd2si	%xmm0, %rax
    00003097: 	xorq	%rdi, %rax
    0000309a: 	jmp	.Ltmp3007 # Offset: 12442
    0000309f: 	nop # Size: 1
.Ltmp2930:
    000030a0: 	subsd	DATAat0x385f0(%rip), %xmm0
    000030a8: 	movabsq	$-0x8000000000000000, %rdi
    000030b2: 	cvttsd2si	%xmm0, %rax
    000030b7: 	xorq	%rdi, %rax
    000030ba: 	jmp	.Ltmp3008 # Offset: 12474
    000030bf: 	nop # Size: 1
.Ltmp2923:
    000030c0: 	subsd	DATAat0x385f0(%rip), %xmm0
    000030c8: 	movabsq	$-0x8000000000000000, %rdi
    000030d2: 	cvttsd2si	%xmm0, %rax
    000030d7: 	xorq	%rdi, %rax
    000030da: 	jmp	.Ltmp3009 # Offset: 12506
    000030df: 	nop # Size: 1
.Ltmp2916:
    000030e0: 	subsd	DATAat0x385f0(%rip), %xmm0
    000030e8: 	movabsq	$-0x8000000000000000, %rdi
    000030f2: 	cvttsd2si	%xmm0, %rax
    000030f7: 	xorq	%rdi, %rax
    000030fa: 	jmp	.Ltmp3010 # Offset: 12538
    000030ff: 	nop # Size: 1
.Ltmp2909:
    00003100: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003108: 	movabsq	$-0x8000000000000000, %rdi
    00003112: 	cvttsd2si	%xmm0, %rax
    00003117: 	xorq	%rdi, %rax
    0000311a: 	jmp	.Ltmp3011 # Offset: 12570
    0000311f: 	nop # Size: 1
.Ltmp2902:
    00003120: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003128: 	movabsq	$-0x8000000000000000, %rdi
    00003132: 	cvttsd2si	%xmm0, %rax
    00003137: 	xorq	%rdi, %rax
    0000313a: 	jmp	.Ltmp3012 # Offset: 12602
    0000313f: 	nop # Size: 1
.Ltmp2861:
    00003140: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003148: 	cvttsd2si	%xmm1, %rax
    0000314d: 	xorq	%r14, %rax
    00003150: 	jmp	.Ltmp3013 # Offset: 12624
    00003155: 	nopl	(%rax) # Size: 3
.Ltmp2854:
    00003158: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003160: 	cvttsd2si	%xmm1, %rax
    00003165: 	xorq	%r14, %rax
    00003168: 	jmp	.Ltmp3014 # Offset: 12648
    0000316d: 	nopl	(%rax) # Size: 3
.Ltmp2847:
    00003170: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003178: 	cvttsd2si	%xmm1, %rax
    0000317d: 	xorq	%r14, %rax
    00003180: 	jmp	.Ltmp3015 # Offset: 12672
    00003185: 	nopl	(%rax) # Size: 3
.Ltmp2840:
    00003188: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003190: 	cvttsd2si	%xmm1, %rax
    00003195: 	xorq	%r14, %rax
    00003198: 	jmp	.Ltmp3016 # Offset: 12696
    0000319d: 	nopl	(%rax) # Size: 3
.Ltmp2833:
    000031a0: 	subsd	DATAat0x385f0(%rip), %xmm1
    000031a8: 	cvttsd2si	%xmm1, %rax
    000031ad: 	xorq	%r14, %rax
    000031b0: 	jmp	.Ltmp3017 # Offset: 12720
    000031b5: 	nopl	(%rax) # Size: 3
.Ltmp2826:
    000031b8: 	subsd	DATAat0x385f0(%rip), %xmm1
    000031c0: 	cvttsd2si	%xmm1, %rax
    000031c5: 	xorq	%r14, %rax
    000031c8: 	jmp	.Ltmp3018 # Offset: 12744
    000031cd: 	nopl	(%rax) # Size: 3
.Ltmp2819:
    000031d0: 	subsd	DATAat0x385f0(%rip), %xmm1
    000031d8: 	cvttsd2si	%xmm1, %rax
    000031dd: 	xorq	%r14, %rax
    000031e0: 	jmp	.Ltmp3019 # Offset: 12768
    000031e5: 	nopl	(%rax) # Size: 3
.Ltmp2812:
    000031e8: 	subsd	DATAat0x385f0(%rip), %xmm1
    000031f0: 	cvttsd2si	%xmm1, %rax
    000031f5: 	xorq	%r14, %rax
    000031f8: 	jmp	.Ltmp3020 # Offset: 12792
    000031fd: 	nopl	(%rax) # Size: 3
.Ltmp2805:
    00003200: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003208: 	cvttsd2si	%xmm1, %rax
    0000320d: 	xorq	%r14, %rax
    00003210: 	jmp	.Ltmp3021 # Offset: 12816
    00003215: 	nopl	(%rax) # Size: 3
.Ltmp2798:
    00003218: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003220: 	cvttsd2si	%xmm1, %rax
    00003225: 	xorq	%r14, %rax
    00003228: 	jmp	.Ltmp3022 # Offset: 12840
    0000322d: 	nopl	(%rax) # Size: 3
.Ltmp2791:
    00003230: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003238: 	cvttsd2si	%xmm1, %rax
    0000323d: 	xorq	%r14, %rax
    00003240: 	jmp	.Ltmp3023 # Offset: 12864
    00003245: 	nopl	(%rax) # Size: 3
.Ltmp2784:
    00003248: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003250: 	cvttsd2si	%xmm1, %rax
    00003255: 	xorq	%r14, %rax
    00003258: 	jmp	.Ltmp3024 # Offset: 12888
    0000325d: 	nopl	(%rax) # Size: 3
.Ltmp2777:
    00003260: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003268: 	cvttsd2si	%xmm1, %rax
    0000326d: 	xorq	%r14, %rax
    00003270: 	jmp	.Ltmp3025 # Offset: 12912
    00003275: 	nopl	(%rax) # Size: 3
.Ltmp2770:
    00003278: 	subsd	DATAat0x385f0(%rip), %xmm1
    00003280: 	cvttsd2si	%xmm1, %rax
    00003285: 	xorq	%r14, %rax
    00003288: 	jmp	.Ltmp3026 # Offset: 12936
.Ltmp2767:
    0000328d: 	subsd	DATAat0x385f0(%rip), %xmm0
    00003295: 	cvttsd2si	%xmm0, %rax
    0000329a: 	btcq	$0x3f, %rax
    0000329f: 	movq	%rax, 0x10(%rsp)
    000032a4: 	movq	%rax, %rdi
    000032a7: 	jmp	.Ltmp3027 # Offset: 12967
.Ltmp2765:
    000032ac: 	subsd	DATAat0x385f0(%rip), %xmm1
    000032b4: 	cvttsd2si	%xmm1, %rax
    000032b9: 	btcq	$0x3f, %rax
    000032be: 	jmp	.Ltmp3028 # Offset: 12990
.Ltmp2773:
    000032c3: 	movq	-0x8(%rdx), %rax
    000032c7: 	addq	$0x200, %rax
    000032cd: 	jmp	.Ltmp3029 # Offset: 13005
.Ltmp2994:
    000032d2: 	movq	-0x8(%rdx), %rax
    000032d6: 	addq	$0x200, %rax
    000032dc: 	jmp	.Ltmp3030 # Offset: 13020
.Ltmp2987:
    000032e1: 	movq	-0x8(%rdx), %rax
    000032e5: 	addq	$0x200, %rax
    000032eb: 	jmp	.Ltmp3031 # Offset: 13035
.Ltmp2980:
    000032f0: 	movq	-0x8(%rdx), %rax
    000032f4: 	addq	$0x200, %rax
    000032fa: 	jmp	.Ltmp3032 # Offset: 13050
.Ltmp2972:
    000032ff: 	movq	-0x8(%rdx), %rax
    00003303: 	addq	$0x200, %rax
    00003309: 	jmp	.Ltmp3033 # Offset: 13065
.Ltmp2966:
    0000330e: 	movq	-0x8(%rdx), %rax
    00003312: 	addq	$0x200, %rax
    00003318: 	jmp	.Ltmp3034 # Offset: 13080
.Ltmp2954:
    0000331d: 	movq	-0x8(%rdx), %rax
    00003321: 	addq	$0x200, %rax
    00003327: 	jmp	.Ltmp3035 # Offset: 13095
.Ltmp2947:
    0000332c: 	movq	-0x8(%rdx), %rax
    00003330: 	addq	$0x200, %rax
    00003336: 	jmp	.Ltmp3036 # Offset: 13110
.Ltmp2940:
    0000333b: 	movq	-0x8(%rdx), %rax
    0000333f: 	addq	$0x200, %rax
    00003345: 	jmp	.Ltmp3037 # Offset: 13125
.Ltmp2933:
    0000334a: 	movq	-0x8(%rdx), %rax
    0000334e: 	addq	$0x200, %rax
    00003354: 	jmp	.Ltmp3038 # Offset: 13140
.Ltmp2926:
    00003359: 	movq	-0x8(%rdx), %rax
    0000335d: 	addq	$0x200, %rax
    00003363: 	jmp	.Ltmp3039 # Offset: 13155
.Ltmp2919:
    00003368: 	movq	-0x8(%rdx), %rax
    0000336c: 	addq	$0x200, %rax
    00003372: 	jmp	.Ltmp3040 # Offset: 13170
.Ltmp2912:
    00003377: 	movq	-0x8(%rdx), %rax
    0000337b: 	addq	$0x200, %rax
    00003381: 	jmp	.Ltmp3041 # Offset: 13185
.Ltmp2905:
    00003386: 	movq	-0x8(%rdx), %rax
    0000338a: 	addq	$0x200, %rax
    00003390: 	jmp	.Ltmp3042 # Offset: 13200
.Ltmp2898:
    00003395: 	movq	-0x8(%rdx), %rax
    00003399: 	addq	$0x200, %rax
    0000339f: 	jmp	.Ltmp3043 # Offset: 13215
.Ltmp2896:
    000033a4: 	movq	-0x8(%rdx), %rax
    000033a8: 	addq	$0x200, %rax
    000033ae: 	jmp	.Ltmp3044 # Offset: 13230
.Ltmp2894:
    000033b3: 	movq	-0x8(%rdx), %rax
    000033b7: 	addq	$0x200, %rax
    000033bd: 	jmp	.Ltmp3045 # Offset: 13245
.Ltmp2892:
    000033c2: 	movq	-0x8(%rdx), %rax
    000033c6: 	addq	$0x200, %rax
    000033cc: 	jmp	.Ltmp3046 # Offset: 13260
.Ltmp2890:
    000033d1: 	movq	-0x8(%rdx), %rax
    000033d5: 	addq	$0x200, %rax
    000033db: 	jmp	.Ltmp3047 # Offset: 13275
.Ltmp2888:
    000033e0: 	movq	-0x8(%rdx), %rax
    000033e4: 	addq	$0x200, %rax
    000033ea: 	jmp	.Ltmp3048 # Offset: 13290
.Ltmp2886:
    000033ef: 	movq	-0x8(%rdx), %rax
    000033f3: 	addq	$0x200, %rax
    000033f9: 	jmp	.Ltmp3049 # Offset: 13305
.Ltmp2884:
    000033fe: 	movq	-0x8(%rdx), %rax
    00003402: 	addq	$0x200, %rax
    00003408: 	jmp	.Ltmp3050 # Offset: 13320
.Ltmp2882:
    0000340d: 	movq	-0x8(%rdx), %rax
    00003411: 	addq	$0x200, %rax
    00003417: 	jmp	.Ltmp3051 # Offset: 13335
.Ltmp2880:
    0000341c: 	movq	-0x8(%rdx), %rax
    00003420: 	addq	$0x200, %rax
    00003426: 	jmp	.Ltmp3052 # Offset: 13350
.Ltmp2878:
    0000342b: 	movq	-0x8(%rdx), %rax
    0000342f: 	addq	$0x200, %rax
    00003435: 	jmp	.Ltmp3053 # Offset: 13365
.Ltmp2876:
    0000343a: 	movq	-0x8(%rdx), %rax
    0000343e: 	addq	$0x200, %rax
    00003444: 	jmp	.Ltmp3054 # Offset: 13380
.Ltmp2874:
    00003449: 	movq	-0x8(%rdx), %rax
    0000344d: 	addq	$0x200, %rax
    00003453: 	jmp	.Ltmp3055 # Offset: 13395
.Ltmp2872:
    00003458: 	movq	-0x8(%rdx), %rax
    0000345c: 	addq	$0x200, %rax
    00003462: 	jmp	.Ltmp3056 # Offset: 13410
.Ltmp2870:
    00003467: 	movq	-0x8(%rdx), %rax
    0000346b: 	addq	$0x200, %rax
    00003471: 	jmp	.Ltmp3057 # Offset: 13425
.Ltmp2868:
    00003476: 	movq	-0x8(%rdx), %rax
    0000347a: 	addq	$0x200, %rax
    00003480: 	jmp	.Ltmp3058 # Offset: 13440
.Ltmp2866:
    00003485: 	movq	-0x8(%rdx), %rax
    00003489: 	addq	$0x200, %rax
    0000348f: 	jmp	.Ltmp3059 # Offset: 13455
.Ltmp2864:
    00003494: 	movq	-0x8(%rdx), %rax
    00003498: 	addq	$0x200, %rax
    0000349e: 	jmp	.Ltmp3060 # Offset: 13470
.Ltmp2857:
    000034a3: 	movq	-0x8(%rdx), %rax
    000034a7: 	addq	$0x200, %rax
    000034ad: 	jmp	.Ltmp3061 # Offset: 13485
.Ltmp2850:
    000034b2: 	movq	-0x8(%rdx), %rax
    000034b6: 	addq	$0x200, %rax
    000034bc: 	jmp	.Ltmp3062 # Offset: 13500
.Ltmp2843:
    000034c1: 	movq	-0x8(%rdx), %rax
    000034c5: 	addq	$0x200, %rax
    000034cb: 	jmp	.Ltmp3063 # Offset: 13515
.Ltmp2836:
    000034d0: 	movq	-0x8(%rdx), %rax
    000034d4: 	addq	$0x200, %rax
    000034da: 	jmp	.Ltmp3064 # Offset: 13530
.Ltmp2829:
    000034df: 	movq	-0x8(%rdx), %rax
    000034e3: 	addq	$0x200, %rax
    000034e9: 	jmp	.Ltmp3065 # Offset: 13545
.Ltmp2822:
    000034ee: 	movq	-0x8(%rdx), %rax
    000034f2: 	addq	$0x200, %rax
    000034f8: 	jmp	.Ltmp3066 # Offset: 13560
.Ltmp2815:
    000034fd: 	movq	-0x8(%rdx), %rax
    00003501: 	addq	$0x200, %rax
    00003507: 	jmp	.Ltmp3067 # Offset: 13575
.Ltmp2808:
    0000350c: 	movq	-0x8(%rdx), %rax
    00003510: 	addq	$0x200, %rax
    00003516: 	jmp	.Ltmp3068 # Offset: 13590
.Ltmp2801:
    0000351b: 	movq	-0x8(%rdx), %rax
    0000351f: 	addq	$0x200, %rax
    00003525: 	jmp	.Ltmp3069 # Offset: 13605
.Ltmp2794:
    0000352a: 	movq	-0x8(%rdx), %rax
    0000352e: 	addq	$0x200, %rax
    00003534: 	jmp	.Ltmp3070 # Offset: 13620
.Ltmp2787:
    00003539: 	movq	-0x8(%rdx), %rax
    0000353d: 	addq	$0x200, %rax
    00003543: 	jmp	.Ltmp3071 # Offset: 13635
.Ltmp2780:
    00003548: 	movq	-0x8(%rdx), %rax
    0000354c: 	addq	$0x200, %rax
    00003552: 	jmp	.Ltmp3072 # Offset: 13650
.Ltmp3001:
    00003557: 	callq	__stack_chk_fail@PLT # Offset: 13655
    0000355c: 	endbr64
.Ltmp3074:
    00003560: 	movq	%rax, %rbx
    00003563: 	jmp	.Ltmp3073 # Offset: 13667
    00003565: 	endbr64
    00003569: 	jmp	.Ltmp3074 # Offset: 13673
    0000356b: 	endbr64
    0000356f: 	jmp	.Ltmp3074 # Offset: 13679
    00003571: 	endbr64
    00003575: 	jmp	.Ltmp3074 # Offset: 13685
.Ltmp3073:
    00003577: 	movq	0xd0(%rsp), %rdi
    0000357f: 	cmpq	(%rsp), %rdi
    00003583: 	je	.Ltmp3075 # Offset: 13699
.Ltmp3082:
    00003585: 	movq	0xe0(%rsp), %rax
    0000358d: 	leaq	0x1(%rax), %rsi
    00003591: 	callq	_ZdlPvm@PLT # Offset: 13713
.Ltmp3075:
    00003596: 	movq	0x50(%rsp), %rdi
    0000359b: 	leaq	0x60(%rsp), %rax
    000035a0: 	cmpq	%rax, %rdi
    000035a3: 	je	.Ltmp3076 # Offset: 13731
    000035a5: 	movq	0x60(%rsp), %rax
    000035aa: 	leaq	0x1(%rax), %rsi
    000035ae: 	callq	_ZdlPvm@PLT # Offset: 13742
.Ltmp3076:
    000035b3: 	movq	%rbx, %rdi
    000035b6: 	callq	_Unwind_Resume@PLT # Offset: 13750
    000035bb: 	endbr64
    000035bf: 	jmp	.Ltmp3074 # Offset: 13759
    000035c1: 	endbr64
    000035c5: 	jmp	.Ltmp3074 # Offset: 13765
    000035c7: 	endbr64
    000035cb: 	jmp	.Ltmp3074 # Offset: 13771
    000035cd: 	endbr64
    000035d1: 	jmp	.Ltmp3074 # Offset: 13777
    000035d3: 	endbr64
    000035d7: 	jmp	.Ltmp3074 # Offset: 13783
    000035d9: 	endbr64
    000035dd: 	jmp	.Ltmp3074 # Offset: 13789
    000035df: 	endbr64
    000035e3: 	jmp	.Ltmp3074 # Offset: 13795
    000035e8: 	endbr64
    000035ec: 	jmp	.Ltmp3074 # Offset: 13804
    000035f1: 	endbr64
.Ltmp3078:
    000035f5: 	movq	%rax, %rbx
    000035f8: 	jmp	.Ltmp3077 # Offset: 13816
    000035fa: 	endbr64
    000035fe: 	jmp	.Ltmp3078 # Offset: 13822
    00003600: 	endbr64
    00003604: 	jmp	.Ltmp3078 # Offset: 13828
    00003606: 	endbr64
    0000360a: 	movq	%rax, %rbx
    0000360d: 	jmp	.Ltmp3079 # Offset: 13837
.Ltmp3077:
    0000360f: 	movq	0xd0(%rsp), %rdi
    00003617: 	cmpq	(%rsp), %rdi
    0000361b: 	je	.Ltmp3079 # Offset: 13851
    0000361d: 	movq	0xe0(%rsp), %rax
    00003625: 	leaq	0x1(%rax), %rsi
    00003629: 	callq	_ZdlPvm@PLT # Offset: 13865
.Ltmp3079:
    0000362e: 	movq	0x70(%rsp), %rdi
    00003633: 	leaq	0x80(%rsp), %rax
    0000363b: 	cmpq	%rax, %rdi
    0000363e: 	je	.Ltmp3075 # Offset: 13886
    00003644: 	movq	0x80(%rsp), %rax
    0000364c: 	leaq	0x1(%rax), %rsi
    00003650: 	callq	_ZdlPvm@PLT # Offset: 13904
    00003655: 	jmp	.Ltmp3075 # Offset: 13909
    0000365a: 	endbr64
    0000365e: 	jmp	.Ltmp3078 # Offset: 13918
    00003660: 	endbr64
    00003664: 	jmp	.Ltmp3078 # Offset: 13924
    00003666: 	endbr64
    0000366a: 	jmp	.Ltmp3078 # Offset: 13930
    0000366c: 	endbr64
    00003670: 	jmp	.Ltmp3078 # Offset: 13936
    00003672: 	endbr64
    00003676: 	jmp	.Ltmp3078 # Offset: 13942
    0000367b: 	endbr64
    0000367f: 	jmp	.Ltmp3078 # Offset: 13951
    00003684: 	endbr64
    00003688: 	jmp	.Ltmp3078 # Offset: 13960
    0000368d: 	endbr64
    00003691: 	jmp	.Ltmp3078 # Offset: 13969
    00003696: 	endbr64
    0000369a: 	jmp	.Ltmp3074 # Offset: 13978
    0000369f: 	endbr64
.Ltmp3085:
    000036a3: 	movq	%rax, %rbx
    000036a6: 	jmp	.Ltmp3080 # Offset: 13990
    000036a8: 	endbr64
    000036ac: 	movq	%rax, %rbx
    000036af: 	jmp	.Ltmp3081 # Offset: 13999
    000036b1: 	endbr64
    000036b5: 	movq	%rax, %rbx
    000036b8: 	jmp	.Ltmp3075 # Offset: 14008
.Ltmp3081:
    000036bd: 	movq	0xd0(%rsp), %rdi
    000036c5: 	leaq	0xe0(%rsp), %rax
    000036cd: 	cmpq	%rax, %rdi
    000036d0: 	jne	.Ltmp3082 # Offset: 14032
    000036d6: 	jmp	.Ltmp3075 # Offset: 14038
.Ltmp3080:
    000036db: 	movq	0xd0(%rsp), %rdi
    000036e3: 	cmpq	(%rsp), %rdi
    000036e7: 	je	.Ltmp3083 # Offset: 14055
    000036e9: 	movq	0xe0(%rsp), %rax
    000036f1: 	leaq	0x1(%rax), %rsi
    000036f5: 	callq	_ZdlPvm@PLT # Offset: 14069
.Ltmp3083:
    000036fa: 	movq	0xb0(%rsp), %rdi
    00003702: 	leaq	0xc0(%rsp), %rax
    0000370a: 	cmpq	%rax, %rdi
    0000370d: 	je	.Ltmp3084 # Offset: 14093
    0000370f: 	movq	0xc0(%rsp), %rax
    00003717: 	leaq	0x1(%rax), %rsi
    0000371b: 	callq	_ZdlPvm@PLT # Offset: 14107
.Ltmp3084:
    00003720: 	movq	0x90(%rsp), %rdi
    00003728: 	leaq	0xa0(%rsp), %rax
    00003730: 	cmpq	%rax, %rdi
    00003733: 	je	.Ltmp3079 # Offset: 14131
    00003739: 	movq	0xa0(%rsp), %rax
    00003741: 	leaq	0x1(%rax), %rsi
    00003745: 	callq	_ZdlPvm@PLT # Offset: 14149
    0000374a: 	jmp	.Ltmp3079 # Offset: 14154
    0000374f: 	endbr64
    00003753: 	jmp	.Ltmp3085 # Offset: 14163
    00003758: 	endbr64
    0000375c: 	jmp	.Ltmp3085 # Offset: 14172
    00003761: 	endbr64
    00003765: 	jmp	.Ltmp3085 # Offset: 14181
    0000376a: 	endbr64
    0000376e: 	jmp	.Ltmp3085 # Offset: 14190
    00003773: 	endbr64
    00003777: 	jmp	.Ltmp3078 # Offset: 14199
    0000377c: 	endbr64
    00003780: 	jmp	.Ltmp3078 # Offset: 14208
    00003785: 	endbr64
    00003789: 	jmp	.Ltmp3078 # Offset: 14217
    0000378e: 	endbr64
    00003792: 	jmp	.Ltmp3078 # Offset: 14226
    00003797: 	endbr64
    0000379b: 	jmp	.Ltmp3078 # Offset: 14235
    000037a0: 	endbr64
    000037a4: 	jmp	.Ltmp3078 # Offset: 14244
    000037a9: 	endbr64
.Ltmp3087:
    000037ad: 	movq	%rax, %rbx
    000037b0: 	jmp	.Ltmp3086 # Offset: 14256
    000037b5: 	endbr64
    000037b9: 	movq	%rax, %rbx
    000037bc: 	jmp	.Ltmp3084 # Offset: 14268
    000037c1: 	endbr64
    000037c5: 	jmp	.Ltmp3087 # Offset: 14277
    000037c7: 	endbr64
    000037cb: 	jmp	.Ltmp3087 # Offset: 14283
    000037cd: 	endbr64
    000037d1: 	jmp	.Ltmp3087 # Offset: 14289
    000037d3: 	endbr64
    000037d7: 	jmp	.Ltmp3085 # Offset: 14295
    000037dc: 	endbr64
    000037e0: 	jmp	.Ltmp3085 # Offset: 14304
    000037e5: 	endbr64
    000037e9: 	jmp	.Ltmp3085 # Offset: 14313
    000037ee: 	endbr64
    000037f2: 	jmp	.Ltmp3087 # Offset: 14322
    000037f4: 	endbr64
    000037f8: 	jmp	.Ltmp3085 # Offset: 14328
    000037fd: 	endbr64
    00003801: 	movq	%rax, %rbx
    00003804: 	jmp	.Ltmp3083 # Offset: 14340
    00003809: 	endbr64
    0000380d: 	jmp	.Ltmp3085 # Offset: 14349
    00003812: 	endbr64
    00003816: 	jmp	.Ltmp3085 # Offset: 14358
    0000381b: 	endbr64
    0000381f: 	jmp	.Ltmp3085 # Offset: 14367
    00003824: 	endbr64
    00003828: 	jmp	.Ltmp3085 # Offset: 14376
    0000382d: 	endbr64
    00003831: 	jmp	.Ltmp3087 # Offset: 14385
    00003836: 	endbr64
    0000383a: 	jmp	.Ltmp3087 # Offset: 14394
    0000383f: 	endbr64
    00003843: 	jmp	.Ltmp3087 # Offset: 14403
.Ltmp3086:
    00003848: 	movq	0xd0(%rsp), %rdi
    00003850: 	cmpq	(%rsp), %rdi
    00003854: 	je	.Ltmp3084 # Offset: 14420
    0000385a: 	movq	0xe0(%rsp), %rax
    00003862: 	leaq	0x1(%rax), %rsi
    00003866: 	callq	_ZdlPvm@PLT # Offset: 14438
    0000386b: 	jmp	.Ltmp3084 # Offset: 14443
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeImEvd"

Binary Function "_Z10test_2termIs16custom_2term_subIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 111
  State       : disassembled
  Address     : 0x29aa0
  Size        : 0x4c4
  MaxSize     : 0x4d0
  Offset      : 0x29aa0
  Section     : .text
  Orc Section : .local.text._Z10test_2termIs16custom_2term_subIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0110:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	movl	%eax, 0x8(%rsp)
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp3088 # Offset: 69
    0000004b: 	leal	-0x1(%r12), %edi
    00000050: 	leal	-0x2(%r12), %eax
    00000055: 	xorl	%r13d, %r13d
    00000058: 	movl	%eax, 0xc(%rsp)
    0000005c: 	movl	%edi, %eax
    0000005e: 	shrl	$0x3, %eax
    00000061: 	movl	%edi, 0x4(%rsp)
    00000065: 	andl	$-0x8, %edi
    00000068: 	subl	$0x1, %eax
    0000006b: 	movl	%edi, 0x10(%rsp)
    0000006f: 	shlq	$0x4, %rax
    00000073: 	leaq	0x10(%rbx,%rax), %rbp
    00000078: 	leal	0x1(%rdi), %eax
    0000007b: 	movl	%eax, 0x14(%rsp)
.Ltmp3096:
    0000007f: 	movzwl	(%rbx), %r14d
    00000083: 	movzwl	0x2(%rbx), %r11d
.Ltmp3104:
    00000088: 	movl	%r11d, %edx
    0000008b: 	movl	%r14d, %eax
    0000008e: 	imull	%r14d, %eax
    00000092: 	imull	%r11d, %edx
    00000096: 	addl	%eax, %edx
    00000098: 	movl	%r14d, %eax
    0000009b: 	imull	%r11d, %eax
    0000009f: 	addl	%eax, %eax
    000000a1: 	subl	%eax, %edx
    000000a3: 	movl	%edx, %eax
    000000a5: 	cmpl	$0x1, %r12d
    000000a9: 	jle	.Ltmp3089 # Offset: 169
    000000af: 	cmpl	$0x6, 0xc(%rsp)
    000000b4: 	jbe	.Ltmp3090 # Offset: 180
    000000ba: 	movq	%rbx, %rax
    000000bd: 	pxor	%xmm2, %xmm2
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp3091:
    000000c8: 	movdqu	0x2(%rax), %xmm0
    000000cd: 	movdqu	(%rax), %xmm1
    000000d1: 	addq	$0x10, %rax
    000000d5: 	movdqa	%xmm0, %xmm3
    000000d9: 	pmullw	%xmm0, %xmm0
    000000dd: 	pmullw	%xmm1, %xmm3
    000000e1: 	pmullw	%xmm1, %xmm1
    000000e5: 	psllw	$0x1, %xmm3
    000000ea: 	paddw	%xmm1, %xmm0
    000000ee: 	psubw	%xmm3, %xmm2
    000000f2: 	paddw	%xmm0, %xmm2
    000000f6: 	cmpq	%rbp, %rax
    000000f9: 	jne	.Ltmp3091 # Offset: 249
    000000fb: 	movdqa	%xmm2, %xmm0
    000000ff: 	movl	0x10(%rsp), %ecx
    00000103: 	movl	0x4(%rsp), %edi
    00000107: 	psrldq	$0x8, %xmm0
    0000010c: 	paddw	%xmm0, %xmm2
    00000110: 	movdqa	%xmm2, %xmm0
    00000114: 	psrldq	$0x4, %xmm0
    00000119: 	paddw	%xmm0, %xmm2
    0000011d: 	movdqa	%xmm2, %xmm0
    00000121: 	psrldq	$0x2, %xmm0
    00000126: 	paddw	%xmm0, %xmm2
    0000012a: 	pextrw	$0x0, %xmm2, %eax
    0000012f: 	addl	%edx, %eax
    00000131: 	cmpl	%edi, %ecx
    00000133: 	je	.Ltmp3089 # Offset: 307
    00000139: 	movl	0x14(%rsp), %edx
    0000013d: 	movl	%ecx, %edi
.Ltmp3105:
    0000013f: 	movl	%r12d, %esi
    00000142: 	subl	%edi, %esi
    00000144: 	leal	-0x1(%rsi), %ecx
    00000147: 	subl	$0x2, %esi
    0000014a: 	cmpl	$0x2, %esi
    0000014d: 	jbe	.Ltmp3092 # Offset: 333
    0000014f: 	leal	0x1(%rdi), %esi
    00000152: 	movq	-0x2(%rbx,%rsi,2), %xmm1
    00000158: 	movq	(%rbx,%rsi,2), %xmm2
    0000015d: 	movdqa	%xmm1, %xmm0
    00000161: 	movdqa	%xmm2, %xmm3
    00000165: 	pmullw	%xmm1, %xmm0
    00000169: 	psllw	$0x1, %xmm1
    0000016e: 	pmullw	%xmm2, %xmm3
    00000172: 	pmullw	%xmm2, %xmm1
    00000176: 	paddw	%xmm3, %xmm0
    0000017a: 	psubw	%xmm1, %xmm0
    0000017e: 	pextrw	$0x1, %xmm0, %edi
    00000183: 	pextrw	$0x0, %xmm0, %esi
    00000188: 	addl	%edi, %esi
    0000018a: 	pextrw	$0x2, %xmm0, %edi
    0000018f: 	addl	%edi, %esi
    00000191: 	pextrw	$0x3, %xmm0, %edi
    00000196: 	addl	%edi, %esi
    00000198: 	addl	%esi, %eax
    0000019a: 	movl	%ecx, %esi
    0000019c: 	andl	$-0x4, %esi
    0000019f: 	addl	%esi, %edx
    000001a1: 	cmpl	%ecx, %esi
    000001a3: 	je	.Ltmp3089 # Offset: 419
.Ltmp3092:
    000001a9: 	movslq	%edx, %r9
    000001ac: 	leal	0x1(%rdx), %esi
    000001af: 	addq	%r9, %r9
    000001b2: 	leaq	(%rbx,%r9), %rcx
    000001b6: 	cmpl	0x4(%rsp), %esi
    000001ba: 	jge	.Ltmp3093 # Offset: 442
    000001c0: 	cmpl	%edx, %r12d
    000001c3: 	jle	.Ltmp3093 # Offset: 451
    000001c9: 	movzwl	-0x2(%rcx), %edi
    000001cd: 	movzwl	(%rcx), %ecx
    000001d0: 	movzwl	0x2(%rbx,%r9), %r10d
    000001d6: 	movl	%ecx, %r8d
    000001d9: 	movl	%edi, %esi
    000001db: 	imull	%ecx, %r8d
    000001df: 	movl	%r10d, %r15d
    000001e2: 	imull	%edi, %esi
    000001e5: 	imull	%ecx, %edi
    000001e8: 	imull	%r10d, %r15d
    000001ec: 	addl	%r8d, %esi
    000001ef: 	imull	%r10d, %ecx
    000001f3: 	addl	%eax, %esi
    000001f5: 	addl	%edi, %edi
    000001f7: 	subl	%edi, %esi
    000001f9: 	addl	%r15d, %r8d
    000001fc: 	addl	%esi, %r8d
    000001ff: 	addl	%ecx, %ecx
    00000201: 	leal	0x3(%rdx), %esi
    00000204: 	movl	%r8d, %eax
    00000207: 	subl	%ecx, %eax
    00000209: 	leal	0x2(%rdx), %ecx
    0000020c: 	cmpl	%esi, 0x4(%rsp)
    00000210: 	jle	.Ltmp3094 # Offset: 528
    00000212: 	movzwl	0x4(%rbx,%r9), %ecx
    00000218: 	movzwl	0x6(%rbx,%r9), %edi
    0000021e: 	movl	%ecx, %esi
    00000220: 	imull	%ecx, %r10d
    00000224: 	movl	%edi, %r8d
    00000227: 	imull	%ecx, %esi
    0000022a: 	imull	%edi, %r8d
    0000022e: 	imull	%edi, %ecx
    00000231: 	addl	%r10d, %r10d
    00000234: 	addl	%esi, %r15d
    00000237: 	subl	%r10d, %r15d
    0000023a: 	addl	%r8d, %esi
    0000023d: 	addl	%ecx, %ecx
    0000023f: 	addl	%eax, %r15d
    00000242: 	subl	%ecx, %esi
    00000244: 	leal	0x4(%rdx), %ecx
    00000247: 	leal	(%r15,%rsi), %eax
    0000024b: 	leal	0x5(%rdx), %esi
    0000024e: 	cmpl	%esi, 0x4(%rsp)
    00000252: 	jle	.Ltmp3094 # Offset: 594
    00000254: 	movzwl	0x8(%rbx,%r9), %ecx
    0000025a: 	movzwl	0xa(%rbx,%r9), %r9d
    00000260: 	movl	%ecx, %esi
    00000262: 	imull	%ecx, %edi
    00000265: 	imull	%ecx, %esi
    00000268: 	imull	%r9d, %ecx
    0000026c: 	addl	%edi, %edi
    0000026e: 	addl	%esi, %r8d
    00000271: 	subl	%edi, %r8d
    00000274: 	addl	%ecx, %ecx
    00000276: 	addl	%eax, %r8d
    00000279: 	movl	%r9d, %eax
    0000027c: 	imull	%r9d, %eax
    00000280: 	addl	%esi, %eax
    00000282: 	subl	%ecx, %eax
    00000284: 	leal	0x6(%rdx), %ecx
    00000287: 	addl	%r8d, %eax
.Ltmp3094:
    0000028a: 	movslq	%ecx, %rdx
    0000028d: 	leaq	(%rdx,%rdx), %rdi
    00000291: 	movzwl	(%rbx,%rdx,2), %edx
    00000295: 	movzwl	-0x2(%rbx,%rdi), %esi
    0000029a: 	movl	%edx, %r9d
    0000029d: 	movl	%esi, %r8d
    000002a0: 	imull	%edx, %r9d
    000002a4: 	imull	%esi, %r8d
    000002a8: 	imull	%edx, %esi
    000002ab: 	addl	%r9d, %eax
    000002ae: 	addl	%r8d, %eax
    000002b1: 	addl	%esi, %esi
    000002b3: 	subl	%esi, %eax
    000002b5: 	leal	0x1(%rcx), %esi
    000002b8: 	cmpl	%esi, %r12d
    000002bb: 	jle	.Ltmp3089 # Offset: 699
    000002bd: 	movzwl	0x2(%rbx,%rdi), %esi
    000002c2: 	addl	$0x2, %ecx
    000002c5: 	movl	%esi, %r8d
    000002c8: 	imull	%esi, %edx
    000002cb: 	imull	%esi, %r8d
    000002cf: 	addl	%edx, %edx
    000002d1: 	addl	%r8d, %r9d
    000002d4: 	addl	%eax, %r9d
    000002d7: 	movl	%r9d, %eax
    000002da: 	subl	%edx, %eax
    000002dc: 	cmpl	%ecx, %r12d
    000002df: 	jle	.Ltmp3089 # Offset: 735
    000002e1: 	movzwl	0x4(%rbx,%rdi), %edx
    000002e6: 	movl	%edx, %ecx
    000002e8: 	imull	%edx, %ecx
    000002eb: 	imull	%esi, %edx
    000002ee: 	addl	%r8d, %ecx
    000002f1: 	addl	%edx, %edx
    000002f3: 	subl	%edx, %ecx
    000002f5: 	addl	%ecx, %eax
.Ltmp3089:
    000002f7: 	testw	%ax, %ax
    000002fa: 	je	.Ltmp3095 # Offset: 762
    00000300: 	movl	current_test(%rip), %edx
    00000306: 	leaq	DATAat0x381c8(%rip), %rsi
    0000030d: 	movl	$0x1, %edi
    00000312: 	xorl	%eax, %eax
    00000314: 	addl	$0x1, %r13d
    00000318: 	callq	__printf_chk@PLT # Offset: 792
    0000031d: 	movl	iterations(%rip), %eax
    00000323: 	movl	%eax, 0x8(%rsp)
    00000327: 	cmpl	%r13d, %eax
    0000032a: 	jg	.Ltmp3096 # Offset: 810
.Ltmp3088:
    00000330: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000337: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000033e: 	subq	$0x20, %rax
    00000342: 	cmpq	%rax, %rbx
    00000345: 	je	.Ltmp3097 # Offset: 837
    0000034b: 	movq	0x18(%rsp), %rax
    00000350: 	leaq	0x10(%rbx), %rdi
    00000354: 	movq	%rdi, (%rbx)
    00000357: 	movq	(%rax), %rbp
    0000035a: 	movq	0x8(%rax), %r12
    0000035e: 	movq	%rbp, %rax
    00000361: 	addq	%r12, %rax
    00000364: 	je	.Ltmp3098 # Offset: 868
    00000366: 	testq	%rbp, %rbp
    00000369: 	je	.Ltmp3099 # Offset: 873
.Ltmp3098:
    0000036f: 	movq	%r12, 0x20(%rsp)
    00000374: 	cmpq	$0xf, %r12
    00000378: 	ja	.Ltmp3100 # Offset: 888
    0000037e: 	cmpq	$0x1, %r12
    00000382: 	jne	.Ltmp3101 # Offset: 898
    00000388: 	movzbl	(%rbp), %eax
    0000038c: 	movb	%al, 0x10(%rbx)
.Ltmp3106:
    0000038f: 	movq	%r12, 0x8(%rbx)
    00000393: 	movb	$0x0, (%rdi,%r12)
    00000398: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000039f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a6: 	addq	$0x20, %rax
    000003aa: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003b8: 	je	.Ltmp3102 # Offset: 952
.Ltmp3107:
    000003be: 	movq	-0x20(%rax), %rbp
    000003c2: 	callq	clock@PLT # Offset: 962
    000003c7: 	movq	%rax, end_time(%rip)
    000003ce: 	movq	0x28(%rsp), %rdx
    000003d3: 	subq	%fs:0x28, %rdx
    000003dc: 	jne	.Ltmp3103 # Offset: 988
    000003e2: 	subq	start_time(%rip), %rax
    000003e9: 	pxor	%xmm0, %xmm0
    000003ed: 	movq	%rbp, %rdi
    000003f0: 	cvtsi2sd	%rax, %xmm0
    000003f5: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003fd: 	addq	$0x38, %rsp
    00000401: 	popq	%rbx
    00000402: 	popq	%rbp
    00000403: 	popq	%r12
    00000405: 	popq	%r13
    00000407: 	popq	%r14
    00000409: 	popq	%r15
    0000040b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 1035
.Ltmp3095:
    00000410: 	addl	$0x1, %r13d
    00000414: 	cmpl	0x8(%rsp), %r13d
    00000419: 	jl	.Ltmp3104 # Offset: 1049
    0000041f: 	jmp	.Ltmp3088 # Offset: 1055
.Ltmp3090:
    00000424: 	xorl	%edi, %edi
    00000426: 	movl	$0x1, %edx
    0000042b: 	jmp	.Ltmp3105 # Offset: 1067
.Ltmp3100:
    00000430: 	movq	%rbx, %rdi
    00000433: 	leaq	0x20(%rsp), %rsi
    00000438: 	xorl	%edx, %edx
    0000043a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1082
    0000043f: 	movq	%rax, (%rbx)
    00000442: 	movq	%rax, %rdi
    00000445: 	movq	0x20(%rsp), %rax
    0000044a: 	movq	%rax, 0x10(%rbx)
.Ltmp3108:
    0000044e: 	movq	%r12, %rdx
    00000451: 	movq	%rbp, %rsi
    00000454: 	callq	memcpy@PLT # Offset: 1108
    00000459: 	movq	0x20(%rsp), %r12
    0000045e: 	movq	(%rbx), %rdi
    00000461: 	jmp	.Ltmp3106 # Offset: 1121
.Ltmp3093:
    00000466: 	movl	%edx, %ecx
    00000468: 	jmp	.Ltmp3094 # Offset: 1128
.Ltmp3097:
    0000046d: 	movq	0x18(%rsp), %rsi
    00000472: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000479: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 1145
    0000047e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000485: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000048c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000493: 	jne	.Ltmp3107 # Offset: 1171
.Ltmp3102:
    00000499: 	movq	-0x8(%rdx), %rax
    0000049d: 	addq	$0x200, %rax
    000004a3: 	jmp	.Ltmp3107 # Offset: 1187
.Ltmp3101:
    000004a8: 	testq	%r12, %r12
    000004ab: 	je	.Ltmp3106 # Offset: 1195
    000004b1: 	jmp	.Ltmp3108 # Offset: 1201
.Ltmp3103:
    000004b3: 	callq	__stack_chk_fail@PLT # Offset: 1203
.Ltmp3099:
    000004b8: 	leaq	DATAat0x38110(%rip), %rdi
    000004bf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1215
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_2termIs16custom_2term_subIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIsEvd" after disassembly {
  Number      : 112
  State       : disassembled
  Address     : 0x29f70
  Size        : 0x38fd
  MaxSize     : 0x3900
  Offset      : 0x29f70
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIsEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0111:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xfa8, %rsp
    00000039: 	leaq	DATAat0x38579(%rip), %rsi
    00000040: 	leaq	0x70(%rsp), %r15
    00000045: 	movsd	%xmm0, 0x30(%rsp)
    0000004b: 	leaq	0x110(%rsp), %r13
    00000053: 	movq	%fs:0x28, %rax
    0000005c: 	movq	%rax, 0x3f98(%rsp)
    00000064: 	xorl	%eax, %eax
    00000066: 	movq	%r15, %rdi
    00000069: 	leaq	0x3f90(%rsp), %rbx
    00000071: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0/1" # Offset: 113
    00000076: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    0000007e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000086: 	leaq	0x50(%rsp), %rsi
    0000008b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000092: 	movaps	%xmm6, 0x50(%rsp)
    00000097: 	movaps	%xmm7, 0x60(%rsp)
    0000009c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 156
    000000a1: 	cvttsd2si	init_value(%rip), %eax
    000000a9: 	movsd	0x30(%rsp), %xmm0
    000000af: 	movd	%eax, %xmm1
    000000b3: 	movq	%r13, %rax
    000000b6: 	punpcklwd	%xmm1, %xmm1
    000000ba: 	pshufd	$0x0, %xmm1, %xmm1
    000000bf: 	nop # Size: 1
.Ltmp3109:
    000000c0: 	movaps	%xmm1, (%rax)
    000000c3: 	addq	$0x10, %rax
    000000c7: 	cmpq	%rbx, %rax
    000000ca: 	jne	.Ltmp3109 # Offset: 202
    000000cc: 	cvttsd2si	%xmm0, %esi
    000000d0: 	leaq	0xf0(%rsp), %r14
    000000d8: 	movl	%esi, %eax
    000000da: 	movl	%esi, %edx
    000000dc: 	movl	%esi, 0x38(%rsp)
    000000e0: 	addl	%eax, %eax
    000000e2: 	addl	$0x2, %edx
    000000e5: 	movw	%si, 0x4c(%rsp)
    000000ea: 	movw	%ax, 0x40(%rsp)
    000000ef: 	cwtl
    000000f0: 	movw	%dx, 0x42(%rsp)
    000000f5: 	movswl	%dx, %edx
    000000f8: 	movl	%edx, %edi
    000000fa: 	movl	%edx, 0x44(%rsp)
    000000fe: 	cltd
    000000ff: 	movl	%eax, 0x10(%rsp)
    00000103: 	idivl	%edi
    00000105: 	leaq	DATAat0x381d8(%rip), %rdx
    0000010c: 	movq	%r14, %rdi
    0000010f: 	addl	%esi, %eax
    00000111: 	movq	%r15, %rsi
    00000114: 	movw	%ax, 0x3c(%rsp)
    00000119: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 281
    0000011e: 	callq	clock@PLT # Offset: 286
    00000123: 	movl	iterations(%rip), %ecx
    00000129: 	xorl	%ebp, %ebp
    0000012b: 	leaq	DATAat0x381c8(%rip), %r12
    00000132: 	movq	%rax, start_time(%rip)
    00000139: 	testl	%ecx, %ecx
    0000013b: 	jle	.Ltmp3110 # Offset: 315
    00000141: 	nopl	(%rax) # Size: 7
.Ltmp3113:
    00000148: 	movq	%r13, %rax
    0000014b: 	pxor	%xmm0, %xmm0
    0000014f: 	nop # Size: 1
.Ltmp3111:
    00000150: 	paddw	(%rax), %xmm0
    00000154: 	addq	$0x10, %rax
    00000158: 	cmpq	%rbx, %rax
    0000015b: 	jne	.Ltmp3111 # Offset: 347
    0000015d: 	movdqa	%xmm0, %xmm1
    00000161: 	cvttsd2si	init_value(%rip), %eax
    00000169: 	psrldq	$0x8, %xmm1
    0000016e: 	paddw	%xmm1, %xmm0
    00000172: 	movdqa	%xmm0, %xmm1
    00000176: 	psrldq	$0x4, %xmm1
    0000017b: 	imulw	$0x1f40, %ax, %ax
    00000180: 	paddw	%xmm1, %xmm0
    00000184: 	movdqa	%xmm0, %xmm1
    00000188: 	psrldq	$0x2, %xmm1
    0000018d: 	paddw	%xmm1, %xmm0
    00000191: 	pextrw	$0x0, %xmm0, %edx
    00000196: 	cmpw	%dx, %ax
    00000199: 	je	.Ltmp3112 # Offset: 409
    0000019b: 	movl	current_test(%rip), %edx
    000001a1: 	movq	%r12, %rsi
    000001a4: 	movl	$0x1, %edi
    000001a9: 	xorl	%eax, %eax
    000001ab: 	callq	__printf_chk@PLT # Offset: 427
    000001b0: 	movl	iterations(%rip), %ecx
.Ltmp3112:
    000001b6: 	addl	$0x1, %ebp
    000001b9: 	cmpl	%ecx, %ebp
    000001bb: 	jl	.Ltmp3113 # Offset: 443
.Ltmp3110:
    000001bd: 	movq	%r14, %rsi
    000001c0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 455
    000001cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e1: 	je	.Ltmp3114 # Offset: 481
.Ltmp3319:
    000001e7: 	movq	-0x20(%rax), %rbp
    000001eb: 	callq	clock@PLT # Offset: 491
    000001f0: 	pxor	%xmm0, %xmm0
    000001f4: 	movq	%rax, end_time(%rip)
    000001fb: 	movq	%rbp, %rdi
    000001fe: 	subq	start_time(%rip), %rax
    00000205: 	cvtsi2sd	%rax, %xmm0
    0000020a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000212: 	callq	_Z13record_resultdPKc # Offset: 530
    00000217: 	movq	0xf0(%rsp), %rdi
    0000021f: 	leaq	0x100(%rsp), %rax
    00000227: 	movq	%rax, 0x30(%rsp)
    0000022c: 	cmpq	%rax, %rdi
    0000022f: 	je	.Ltmp3115 # Offset: 559
    00000231: 	movq	0x100(%rsp), %rax
    00000239: 	leaq	0x1(%rax), %rsi
    0000023d: 	callq	_ZdlPvm@PLT # Offset: 573
.Ltmp3115:
    00000242: 	leaq	DATAat0x381de(%rip), %rdx
    00000249: 	movq	%r15, %rsi
    0000024c: 	movq	%r14, %rdi
    0000024f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 591
    00000254: 	callq	clock@PLT # Offset: 596
    00000259: 	movl	iterations(%rip), %ecx
    0000025f: 	xorl	%ebp, %ebp
    00000261: 	leaq	DATAat0x381c8(%rip), %r12
    00000268: 	movq	%rax, start_time(%rip)
    0000026f: 	testl	%ecx, %ecx
    00000271: 	jle	.Ltmp3116 # Offset: 625
    00000273: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3119:
    00000278: 	movq	%r13, %rax
    0000027b: 	pxor	%xmm0, %xmm0
    0000027f: 	nop # Size: 1
.Ltmp3117:
    00000280: 	paddw	(%rax), %xmm0
    00000284: 	addq	$0x10, %rax
    00000288: 	cmpq	%rbx, %rax
    0000028b: 	jne	.Ltmp3117 # Offset: 651
    0000028d: 	movdqa	%xmm0, %xmm1
    00000291: 	cvttsd2si	init_value(%rip), %eax
    00000299: 	psrldq	$0x8, %xmm1
    0000029e: 	paddw	%xmm1, %xmm0
    000002a2: 	movdqa	%xmm0, %xmm1
    000002a6: 	psrldq	$0x4, %xmm1
    000002ab: 	imulw	$0x1f40, %ax, %ax
    000002b0: 	paddw	%xmm1, %xmm0
    000002b4: 	movdqa	%xmm0, %xmm1
    000002b8: 	psrldq	$0x2, %xmm1
    000002bd: 	paddw	%xmm1, %xmm0
    000002c1: 	pextrw	$0x0, %xmm0, %edx
    000002c6: 	cmpw	%dx, %ax
    000002c9: 	je	.Ltmp3118 # Offset: 713
    000002cb: 	movl	current_test(%rip), %edx
    000002d1: 	movq	%r12, %rsi
    000002d4: 	movl	$0x1, %edi
    000002d9: 	xorl	%eax, %eax
    000002db: 	callq	__printf_chk@PLT # Offset: 731
    000002e0: 	movl	iterations(%rip), %ecx
.Ltmp3118:
    000002e6: 	addl	$0x1, %ebp
    000002e9: 	cmpl	%ecx, %ebp
    000002eb: 	jl	.Ltmp3119 # Offset: 747
.Ltmp3116:
    000002ed: 	movq	%r14, %rsi
    000002f0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 759
    000002fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000303: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000030a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000311: 	je	.Ltmp3120 # Offset: 785
.Ltmp3362:
    00000317: 	movq	-0x20(%rax), %rbp
    0000031b: 	callq	clock@PLT # Offset: 795
    00000320: 	pxor	%xmm0, %xmm0
    00000324: 	movq	%rax, end_time(%rip)
    0000032b: 	movq	%rbp, %rdi
    0000032e: 	subq	start_time(%rip), %rax
    00000335: 	cvtsi2sd	%rax, %xmm0
    0000033a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000342: 	callq	_Z13record_resultdPKc # Offset: 834
    00000347: 	movq	0xf0(%rsp), %rdi
    0000034f: 	cmpq	0x30(%rsp), %rdi
    00000354: 	je	.Ltmp3121 # Offset: 852
    00000356: 	movq	0x100(%rsp), %rax
    0000035e: 	leaq	0x1(%rax), %rsi
    00000362: 	callq	_ZdlPvm@PLT # Offset: 866
.Ltmp3121:
    00000367: 	leaq	DATAat0x381e8(%rip), %rdx
    0000036e: 	movq	%r15, %rsi
    00000371: 	movq	%r14, %rdi
    00000374: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 884
    00000379: 	callq	clock@PLT # Offset: 889
    0000037e: 	movl	iterations(%rip), %ecx
    00000384: 	xorl	%ebp, %ebp
    00000386: 	leaq	DATAat0x381c8(%rip), %r12
    0000038d: 	movq	%rax, start_time(%rip)
    00000394: 	testl	%ecx, %ecx
    00000396: 	jle	.Ltmp3122 # Offset: 918
    0000039c: 	nopl	(%rax) # Size: 4
.Ltmp3125:
    000003a0: 	movq	%r13, %rax
    000003a3: 	pxor	%xmm0, %xmm0
    000003a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3123:
    000003b0: 	paddw	(%rax), %xmm0
    000003b4: 	addq	$0x10, %rax
    000003b8: 	cmpq	%rbx, %rax
    000003bb: 	jne	.Ltmp3123 # Offset: 955
    000003bd: 	movdqa	%xmm0, %xmm1
    000003c1: 	cvttsd2si	init_value(%rip), %eax
    000003c9: 	psrldq	$0x8, %xmm1
    000003ce: 	paddw	%xmm1, %xmm0
    000003d2: 	movdqa	%xmm0, %xmm1
    000003d6: 	psrldq	$0x4, %xmm1
    000003db: 	imulw	$0x1f40, %ax, %ax
    000003e0: 	paddw	%xmm1, %xmm0
    000003e4: 	movdqa	%xmm0, %xmm1
    000003e8: 	psrldq	$0x2, %xmm1
    000003ed: 	paddw	%xmm1, %xmm0
    000003f1: 	pextrw	$0x0, %xmm0, %edx
    000003f6: 	cmpw	%dx, %ax
    000003f9: 	je	.Ltmp3124 # Offset: 1017
    000003fb: 	movl	current_test(%rip), %edx
    00000401: 	movq	%r12, %rsi
    00000404: 	movl	$0x1, %edi
    00000409: 	xorl	%eax, %eax
    0000040b: 	callq	__printf_chk@PLT # Offset: 1035
    00000410: 	movl	iterations(%rip), %ecx
.Ltmp3124:
    00000416: 	addl	$0x1, %ebp
    00000419: 	cmpl	%ecx, %ebp
    0000041b: 	jl	.Ltmp3125 # Offset: 1051
.Ltmp3122:
    0000041d: 	movq	%r14, %rsi
    00000420: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000427: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1063
    0000042c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000433: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000043a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000441: 	je	.Ltmp3126 # Offset: 1089
.Ltmp3361:
    00000447: 	movq	-0x20(%rax), %rbp
    0000044b: 	callq	clock@PLT # Offset: 1099
    00000450: 	pxor	%xmm0, %xmm0
    00000454: 	movq	%rax, end_time(%rip)
    0000045b: 	movq	%rbp, %rdi
    0000045e: 	subq	start_time(%rip), %rax
    00000465: 	cvtsi2sd	%rax, %xmm0
    0000046a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000472: 	callq	_Z13record_resultdPKc # Offset: 1138
    00000477: 	movq	0xf0(%rsp), %rdi
    0000047f: 	cmpq	0x30(%rsp), %rdi
    00000484: 	je	.Ltmp3127 # Offset: 1156
    00000486: 	movq	0x100(%rsp), %rax
    0000048e: 	leaq	0x1(%rax), %rsi
    00000492: 	callq	_ZdlPvm@PLT # Offset: 1170
.Ltmp3127:
    00000497: 	leaq	DATAat0x381f7(%rip), %rdx
    0000049e: 	movq	%r15, %rsi
    000004a1: 	movq	%r14, %rdi
    000004a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1188
    000004a9: 	callq	clock@PLT # Offset: 1193
    000004ae: 	movl	iterations(%rip), %ecx
    000004b4: 	xorl	%ebp, %ebp
    000004b6: 	leaq	DATAat0x381c8(%rip), %r12
    000004bd: 	movq	%rax, start_time(%rip)
    000004c4: 	testl	%ecx, %ecx
    000004c6: 	jle	.Ltmp3128 # Offset: 1222
    000004cc: 	nopl	(%rax) # Size: 4
.Ltmp3131:
    000004d0: 	movq	%r13, %rax
    000004d3: 	pxor	%xmm0, %xmm0
    000004d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3129:
    000004e0: 	psubw	(%rax), %xmm0
    000004e4: 	addq	$0x10, %rax
    000004e8: 	cmpq	%rbx, %rax
    000004eb: 	jne	.Ltmp3129 # Offset: 1259
    000004ed: 	movdqa	%xmm0, %xmm1
    000004f1: 	cvttsd2si	init_value(%rip), %eax
    000004f9: 	psrldq	$0x8, %xmm1
    000004fe: 	paddw	%xmm1, %xmm0
    00000502: 	movdqa	%xmm0, %xmm1
    00000506: 	psrldq	$0x4, %xmm1
    0000050b: 	imulw	$0xe0c0, %ax, %ax
    00000510: 	paddw	%xmm1, %xmm0
    00000514: 	movdqa	%xmm0, %xmm1
    00000518: 	psrldq	$0x2, %xmm1
    0000051d: 	paddw	%xmm1, %xmm0
    00000521: 	pextrw	$0x0, %xmm0, %edx
    00000526: 	cmpw	%dx, %ax
    00000529: 	je	.Ltmp3130 # Offset: 1321
    0000052b: 	movl	current_test(%rip), %edx
    00000531: 	movq	%r12, %rsi
    00000534: 	movl	$0x1, %edi
    00000539: 	xorl	%eax, %eax
    0000053b: 	callq	__printf_chk@PLT # Offset: 1339
    00000540: 	movl	iterations(%rip), %ecx
.Ltmp3130:
    00000546: 	addl	$0x1, %ebp
    00000549: 	cmpl	%ecx, %ebp
    0000054b: 	jl	.Ltmp3131 # Offset: 1355
.Ltmp3128:
    0000054d: 	movq	%r14, %rsi
    00000550: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000557: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1367
    0000055c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000563: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000056a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000571: 	je	.Ltmp3132 # Offset: 1393
.Ltmp3360:
    00000577: 	movq	-0x20(%rax), %rbp
    0000057b: 	callq	clock@PLT # Offset: 1403
    00000580: 	pxor	%xmm0, %xmm0
    00000584: 	movq	%rax, end_time(%rip)
    0000058b: 	movq	%rbp, %rdi
    0000058e: 	subq	start_time(%rip), %rax
    00000595: 	cvtsi2sd	%rax, %xmm0
    0000059a: 	divsd	DATAat0x385e0(%rip), %xmm0
    000005a2: 	callq	_Z13record_resultdPKc # Offset: 1442
    000005a7: 	movq	0xf0(%rsp), %rdi
    000005af: 	cmpq	0x30(%rsp), %rdi
    000005b4: 	je	.Ltmp3133 # Offset: 1460
    000005b6: 	movq	0x100(%rsp), %rax
    000005be: 	leaq	0x1(%rax), %rsi
    000005c2: 	callq	_ZdlPvm@PLT # Offset: 1474
.Ltmp3133:
    000005c7: 	leaq	DATAat0x381ff(%rip), %rdx
    000005ce: 	movq	%r15, %rsi
    000005d1: 	movq	%r14, %rdi
    000005d4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1492
    000005d9: 	callq	clock@PLT # Offset: 1497
    000005de: 	movl	iterations(%rip), %ecx
    000005e4: 	xorl	%ebp, %ebp
    000005e6: 	leaq	DATAat0x381c8(%rip), %r12
    000005ed: 	movq	%rax, start_time(%rip)
    000005f4: 	testl	%ecx, %ecx
    000005f6: 	jle	.Ltmp3134 # Offset: 1526
    000005fc: 	nopl	(%rax) # Size: 4
.Ltmp3137:
    00000600: 	movq	%r13, %rax
    00000603: 	pxor	%xmm0, %xmm0
    00000607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3135:
    00000610: 	paddw	(%rax), %xmm0
    00000614: 	addq	$0x10, %rax
    00000618: 	cmpq	%rbx, %rax
    0000061b: 	jne	.Ltmp3135 # Offset: 1563
    0000061d: 	movdqa	%xmm0, %xmm1
    00000621: 	cvttsd2si	init_value(%rip), %eax
    00000629: 	psrldq	$0x8, %xmm1
    0000062e: 	paddw	%xmm1, %xmm0
    00000632: 	movdqa	%xmm0, %xmm1
    00000636: 	psrldq	$0x4, %xmm1
    0000063b: 	imulw	$0x1f40, %ax, %ax
    00000640: 	paddw	%xmm1, %xmm0
    00000644: 	movdqa	%xmm0, %xmm1
    00000648: 	psrldq	$0x2, %xmm1
    0000064d: 	paddw	%xmm1, %xmm0
    00000651: 	pextrw	$0x0, %xmm0, %edx
    00000656: 	cmpw	%dx, %ax
    00000659: 	je	.Ltmp3136 # Offset: 1625
    0000065b: 	movl	current_test(%rip), %edx
    00000661: 	movq	%r12, %rsi
    00000664: 	movl	$0x1, %edi
    00000669: 	xorl	%eax, %eax
    0000066b: 	callq	__printf_chk@PLT # Offset: 1643
    00000670: 	movl	iterations(%rip), %ecx
.Ltmp3136:
    00000676: 	addl	$0x1, %ebp
    00000679: 	cmpl	%ecx, %ebp
    0000067b: 	jl	.Ltmp3137 # Offset: 1659
.Ltmp3134:
    0000067d: 	movq	%r14, %rsi
    00000680: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000687: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1671
    0000068c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000693: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000069a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006a1: 	je	.Ltmp3138 # Offset: 1697
.Ltmp3359:
    000006a7: 	movq	-0x20(%rax), %rbp
    000006ab: 	callq	clock@PLT # Offset: 1707
    000006b0: 	pxor	%xmm0, %xmm0
    000006b4: 	movq	%rax, end_time(%rip)
    000006bb: 	movq	%rbp, %rdi
    000006be: 	subq	start_time(%rip), %rax
    000006c5: 	cvtsi2sd	%rax, %xmm0
    000006ca: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006d2: 	callq	_Z13record_resultdPKc # Offset: 1746
    000006d7: 	movq	0xf0(%rsp), %rdi
    000006df: 	cmpq	0x30(%rsp), %rdi
    000006e4: 	je	.Ltmp3139 # Offset: 1764
    000006e6: 	movq	0x100(%rsp), %rax
    000006ee: 	leaq	0x1(%rax), %rsi
    000006f2: 	callq	_ZdlPvm@PLT # Offset: 1778
.Ltmp3139:
    000006f7: 	leaq	DATAat0x3820d(%rip), %rdx
    000006fe: 	movq	%r15, %rsi
    00000701: 	movq	%r14, %rdi
    00000704: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1796
    00000709: 	callq	clock@PLT # Offset: 1801
    0000070e: 	movl	iterations(%rip), %ecx
    00000714: 	xorl	%ebp, %ebp
    00000716: 	leaq	DATAat0x381c8(%rip), %r12
    0000071d: 	movq	%rax, start_time(%rip)
    00000724: 	testl	%ecx, %ecx
    00000726: 	jle	.Ltmp3140 # Offset: 1830
    0000072c: 	nopl	(%rax) # Size: 4
.Ltmp3143:
    00000730: 	movq	%r13, %rax
    00000733: 	pxor	%xmm0, %xmm0
    00000737: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3141:
    00000740: 	psubw	(%rax), %xmm0
    00000744: 	addq	$0x10, %rax
    00000748: 	cmpq	%rbx, %rax
    0000074b: 	jne	.Ltmp3141 # Offset: 1867
    0000074d: 	movdqa	%xmm0, %xmm1
    00000751: 	cvttsd2si	init_value(%rip), %eax
    00000759: 	psrldq	$0x8, %xmm1
    0000075e: 	paddw	%xmm1, %xmm0
    00000762: 	movdqa	%xmm0, %xmm1
    00000766: 	psrldq	$0x4, %xmm1
    0000076b: 	imulw	$0xe0c0, %ax, %ax
    00000770: 	paddw	%xmm1, %xmm0
    00000774: 	movdqa	%xmm0, %xmm1
    00000778: 	psrldq	$0x2, %xmm1
    0000077d: 	paddw	%xmm1, %xmm0
    00000781: 	pextrw	$0x0, %xmm0, %edx
    00000786: 	cmpw	%dx, %ax
    00000789: 	je	.Ltmp3142 # Offset: 1929
    0000078b: 	movl	current_test(%rip), %edx
    00000791: 	movq	%r12, %rsi
    00000794: 	movl	$0x1, %edi
    00000799: 	xorl	%eax, %eax
    0000079b: 	callq	__printf_chk@PLT # Offset: 1947
    000007a0: 	movl	iterations(%rip), %ecx
.Ltmp3142:
    000007a6: 	addl	$0x1, %ebp
    000007a9: 	cmpl	%ecx, %ebp
    000007ab: 	jl	.Ltmp3143 # Offset: 1963
.Ltmp3140:
    000007ad: 	movq	%r14, %rsi
    000007b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1975
    000007bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007d1: 	je	.Ltmp3144 # Offset: 2001
.Ltmp3358:
    000007d7: 	movq	-0x20(%rax), %rbp
    000007db: 	callq	clock@PLT # Offset: 2011
    000007e0: 	pxor	%xmm0, %xmm0
    000007e4: 	movq	%rax, end_time(%rip)
    000007eb: 	movq	%rbp, %rdi
    000007ee: 	subq	start_time(%rip), %rax
    000007f5: 	cvtsi2sd	%rax, %xmm0
    000007fa: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000802: 	callq	_Z13record_resultdPKc # Offset: 2050
    00000807: 	movq	0xf0(%rsp), %rdi
    0000080f: 	cmpq	0x30(%rsp), %rdi
    00000814: 	je	.Ltmp3145 # Offset: 2068
    00000816: 	movq	0x100(%rsp), %rax
    0000081e: 	leaq	0x1(%rax), %rsi
    00000822: 	callq	_ZdlPvm@PLT # Offset: 2082
.Ltmp3145:
    00000827: 	leaq	DATAat0x38219(%rip), %rdx
    0000082e: 	movq	%r15, %rsi
    00000831: 	movq	%r14, %rdi
    00000834: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2100
    00000839: 	callq	clock@PLT # Offset: 2105
    0000083e: 	movl	iterations(%rip), %ecx
    00000844: 	xorl	%ebp, %ebp
    00000846: 	leaq	DATAat0x381c8(%rip), %r12
    0000084d: 	movq	%rax, start_time(%rip)
    00000854: 	testl	%ecx, %ecx
    00000856: 	jle	.Ltmp3146 # Offset: 2134
    0000085c: 	nopl	(%rax) # Size: 4
.Ltmp3149:
    00000860: 	movq	%r13, %rax
    00000863: 	pxor	%xmm0, %xmm0
    00000867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3147:
    00000870: 	paddw	(%rax), %xmm0
    00000874: 	addq	$0x10, %rax
    00000878: 	cmpq	%rbx, %rax
    0000087b: 	jne	.Ltmp3147 # Offset: 2171
    0000087d: 	movdqa	%xmm0, %xmm1
    00000881: 	cvttsd2si	init_value(%rip), %eax
    00000889: 	psrldq	$0x8, %xmm1
    0000088e: 	paddw	%xmm1, %xmm0
    00000892: 	movdqa	%xmm0, %xmm1
    00000896: 	psrldq	$0x4, %xmm1
    0000089b: 	imulw	$0x1f40, %ax, %ax
    000008a0: 	paddw	%xmm1, %xmm0
    000008a4: 	movdqa	%xmm0, %xmm1
    000008a8: 	psrldq	$0x2, %xmm1
    000008ad: 	paddw	%xmm1, %xmm0
    000008b1: 	pextrw	$0x0, %xmm0, %edx
    000008b6: 	cmpw	%dx, %ax
    000008b9: 	je	.Ltmp3148 # Offset: 2233
    000008bb: 	movl	current_test(%rip), %edx
    000008c1: 	movq	%r12, %rsi
    000008c4: 	movl	$0x1, %edi
    000008c9: 	xorl	%eax, %eax
    000008cb: 	callq	__printf_chk@PLT # Offset: 2251
    000008d0: 	movl	iterations(%rip), %ecx
.Ltmp3148:
    000008d6: 	addl	$0x1, %ebp
    000008d9: 	cmpl	%ecx, %ebp
    000008db: 	jl	.Ltmp3149 # Offset: 2267
.Ltmp3146:
    000008dd: 	movq	%r14, %rsi
    000008e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2279
    000008ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008f3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000901: 	je	.Ltmp3150 # Offset: 2305
.Ltmp3357:
    00000907: 	movq	-0x20(%rax), %rbp
    0000090b: 	callq	clock@PLT # Offset: 2315
    00000910: 	pxor	%xmm0, %xmm0
    00000914: 	movq	%rax, end_time(%rip)
    0000091b: 	movq	%rbp, %rdi
    0000091e: 	subq	start_time(%rip), %rax
    00000925: 	cvtsi2sd	%rax, %xmm0
    0000092a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000932: 	callq	_Z13record_resultdPKc # Offset: 2354
    00000937: 	movq	0xf0(%rsp), %rdi
    0000093f: 	cmpq	0x30(%rsp), %rdi
    00000944: 	je	.Ltmp3151 # Offset: 2372
    00000946: 	movq	0x100(%rsp), %rax
    0000094e: 	leaq	0x1(%rax), %rsi
    00000952: 	callq	_ZdlPvm@PLT # Offset: 2386
.Ltmp3151:
    00000957: 	leaq	DATAat0x38224(%rip), %rdx
    0000095e: 	movq	%r15, %rsi
    00000961: 	movq	%r14, %rdi
    00000964: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2404
    00000969: 	callq	clock@PLT # Offset: 2409
    0000096e: 	movl	iterations(%rip), %ecx
    00000974: 	xorl	%ebp, %ebp
    00000976: 	leaq	DATAat0x381c8(%rip), %r12
    0000097d: 	movq	%rax, start_time(%rip)
    00000984: 	testl	%ecx, %ecx
    00000986: 	jle	.Ltmp3152 # Offset: 2438
    0000098c: 	nopl	(%rax) # Size: 4
.Ltmp3155:
    00000990: 	movq	%r13, %rax
    00000993: 	pxor	%xmm0, %xmm0
    00000997: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3153:
    000009a0: 	paddw	(%rax), %xmm0
    000009a4: 	addq	$0x10, %rax
    000009a8: 	cmpq	%rbx, %rax
    000009ab: 	jne	.Ltmp3153 # Offset: 2475
    000009ad: 	movdqa	%xmm0, %xmm1
    000009b1: 	cvttsd2si	init_value(%rip), %eax
    000009b9: 	psrldq	$0x8, %xmm1
    000009be: 	paddw	%xmm1, %xmm0
    000009c2: 	movdqa	%xmm0, %xmm1
    000009c6: 	psrldq	$0x4, %xmm1
    000009cb: 	imulw	$0x1f40, %ax, %ax
    000009d0: 	paddw	%xmm1, %xmm0
    000009d4: 	movdqa	%xmm0, %xmm1
    000009d8: 	psrldq	$0x2, %xmm1
    000009dd: 	paddw	%xmm1, %xmm0
    000009e1: 	pextrw	$0x0, %xmm0, %edx
    000009e6: 	cmpw	%dx, %ax
    000009e9: 	je	.Ltmp3154 # Offset: 2537
    000009eb: 	movl	current_test(%rip), %edx
    000009f1: 	movq	%r12, %rsi
    000009f4: 	movl	$0x1, %edi
    000009f9: 	xorl	%eax, %eax
    000009fb: 	callq	__printf_chk@PLT # Offset: 2555
    00000a00: 	movl	iterations(%rip), %ecx
.Ltmp3154:
    00000a06: 	addl	$0x1, %ebp
    00000a09: 	cmpl	%ecx, %ebp
    00000a0b: 	jl	.Ltmp3155 # Offset: 2571
.Ltmp3152:
    00000a0d: 	movq	%r14, %rsi
    00000a10: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a17: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2583
    00000a1c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a23: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a31: 	je	.Ltmp3156 # Offset: 2609
.Ltmp3356:
    00000a37: 	movq	-0x20(%rax), %rbp
    00000a3b: 	callq	clock@PLT # Offset: 2619
    00000a40: 	pxor	%xmm0, %xmm0
    00000a44: 	movq	%rax, end_time(%rip)
    00000a4b: 	movq	%rbp, %rdi
    00000a4e: 	subq	start_time(%rip), %rax
    00000a55: 	cvtsi2sd	%rax, %xmm0
    00000a5a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000a62: 	callq	_Z13record_resultdPKc # Offset: 2658
    00000a67: 	movq	0xf0(%rsp), %rdi
    00000a6f: 	cmpq	0x30(%rsp), %rdi
    00000a74: 	je	.Ltmp3157 # Offset: 2676
    00000a76: 	movq	0x100(%rsp), %rax
    00000a7e: 	leaq	0x1(%rax), %rsi
    00000a82: 	callq	_ZdlPvm@PLT # Offset: 2690
.Ltmp3157:
    00000a87: 	leaq	DATAat0x38233(%rip), %rdx
    00000a8e: 	movq	%r15, %rsi
    00000a91: 	movq	%r14, %rdi
    00000a94: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2708
    00000a99: 	callq	clock@PLT # Offset: 2713
    00000a9e: 	movl	iterations(%rip), %ecx
    00000aa4: 	xorl	%ebp, %ebp
    00000aa6: 	leaq	DATAat0x381c8(%rip), %r12
    00000aad: 	movq	%rax, start_time(%rip)
    00000ab4: 	testl	%ecx, %ecx
    00000ab6: 	jle	.Ltmp3158 # Offset: 2742
    00000abc: 	nopl	(%rax) # Size: 4
.Ltmp3161:
    00000ac0: 	movq	%r13, %rax
    00000ac3: 	pxor	%xmm0, %xmm0
    00000ac7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3159:
    00000ad0: 	paddw	(%rax), %xmm0
    00000ad4: 	addq	$0x10, %rax
    00000ad8: 	cmpq	%rbx, %rax
    00000adb: 	jne	.Ltmp3159 # Offset: 2779
    00000add: 	movdqa	%xmm0, %xmm1
    00000ae1: 	cvttsd2si	init_value(%rip), %eax
    00000ae9: 	psrldq	$0x8, %xmm1
    00000aee: 	paddw	%xmm1, %xmm0
    00000af2: 	movdqa	%xmm0, %xmm1
    00000af6: 	psrldq	$0x4, %xmm1
    00000afb: 	imulw	$0x1f40, %ax, %ax
    00000b00: 	paddw	%xmm1, %xmm0
    00000b04: 	movdqa	%xmm0, %xmm1
    00000b08: 	psrldq	$0x2, %xmm1
    00000b0d: 	paddw	%xmm1, %xmm0
    00000b11: 	pextrw	$0x0, %xmm0, %edx
    00000b16: 	cmpw	%dx, %ax
    00000b19: 	je	.Ltmp3160 # Offset: 2841
    00000b1b: 	movl	current_test(%rip), %edx
    00000b21: 	movq	%r12, %rsi
    00000b24: 	movl	$0x1, %edi
    00000b29: 	xorl	%eax, %eax
    00000b2b: 	callq	__printf_chk@PLT # Offset: 2859
    00000b30: 	movl	iterations(%rip), %ecx
.Ltmp3160:
    00000b36: 	addl	$0x1, %ebp
    00000b39: 	cmpl	%ecx, %ebp
    00000b3b: 	jl	.Ltmp3161 # Offset: 2875
.Ltmp3158:
    00000b3d: 	movq	%r14, %rsi
    00000b40: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b47: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2887
    00000b4c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b53: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b5a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b61: 	je	.Ltmp3162 # Offset: 2913
.Ltmp3355:
    00000b67: 	movq	-0x20(%rax), %rbp
    00000b6b: 	callq	clock@PLT # Offset: 2923
    00000b70: 	pxor	%xmm0, %xmm0
    00000b74: 	movq	%rax, end_time(%rip)
    00000b7b: 	movq	%rbp, %rdi
    00000b7e: 	subq	start_time(%rip), %rax
    00000b85: 	cvtsi2sd	%rax, %xmm0
    00000b8a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000b92: 	callq	_Z13record_resultdPKc # Offset: 2962
    00000b97: 	movq	0xf0(%rsp), %rdi
    00000b9f: 	cmpq	0x30(%rsp), %rdi
    00000ba4: 	je	.Ltmp3163 # Offset: 2980
    00000ba6: 	movq	0x100(%rsp), %rax
    00000bae: 	leaq	0x1(%rax), %rsi
    00000bb2: 	callq	_ZdlPvm@PLT # Offset: 2994
.Ltmp3163:
    00000bb7: 	leaq	DATAat0x3823d(%rip), %rdx
    00000bbe: 	movq	%r15, %rsi
    00000bc1: 	movq	%r14, %rdi
    00000bc4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3012
    00000bc9: 	callq	clock@PLT # Offset: 3017
    00000bce: 	movl	iterations(%rip), %ecx
    00000bd4: 	xorl	%ebp, %ebp
    00000bd6: 	leaq	DATAat0x381c8(%rip), %r12
    00000bdd: 	movq	%rax, start_time(%rip)
    00000be4: 	testl	%ecx, %ecx
    00000be6: 	jle	.Ltmp3164 # Offset: 3046
    00000bec: 	nopl	(%rax) # Size: 4
.Ltmp3167:
    00000bf0: 	movq	%r13, %rax
    00000bf3: 	pxor	%xmm0, %xmm0
    00000bf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3165:
    00000c00: 	paddw	(%rax), %xmm0
    00000c04: 	addq	$0x10, %rax
    00000c08: 	cmpq	%rbx, %rax
    00000c0b: 	jne	.Ltmp3165 # Offset: 3083
    00000c0d: 	movdqa	%xmm0, %xmm1
    00000c11: 	cvttsd2si	init_value(%rip), %eax
    00000c19: 	psrldq	$0x8, %xmm1
    00000c1e: 	paddw	%xmm1, %xmm0
    00000c22: 	movdqa	%xmm0, %xmm1
    00000c26: 	psrldq	$0x4, %xmm1
    00000c2b: 	imulw	$0x1f40, %ax, %ax
    00000c30: 	paddw	%xmm1, %xmm0
    00000c34: 	movdqa	%xmm0, %xmm1
    00000c38: 	psrldq	$0x2, %xmm1
    00000c3d: 	paddw	%xmm1, %xmm0
    00000c41: 	pextrw	$0x0, %xmm0, %edx
    00000c46: 	cmpw	%dx, %ax
    00000c49: 	je	.Ltmp3166 # Offset: 3145
    00000c4b: 	movl	current_test(%rip), %edx
    00000c51: 	movq	%r12, %rsi
    00000c54: 	movl	$0x1, %edi
    00000c59: 	xorl	%eax, %eax
    00000c5b: 	callq	__printf_chk@PLT # Offset: 3163
    00000c60: 	movl	iterations(%rip), %ecx
.Ltmp3166:
    00000c66: 	addl	$0x1, %ebp
    00000c69: 	cmpl	%ecx, %ebp
    00000c6b: 	jl	.Ltmp3167 # Offset: 3179
.Ltmp3164:
    00000c6d: 	movq	%r14, %rsi
    00000c70: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c77: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3191
    00000c7c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c83: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c8a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c91: 	je	.Ltmp3168 # Offset: 3217
.Ltmp3354:
    00000c97: 	movq	-0x20(%rax), %rbp
    00000c9b: 	callq	clock@PLT # Offset: 3227
    00000ca0: 	pxor	%xmm0, %xmm0
    00000ca4: 	movq	%rax, end_time(%rip)
    00000cab: 	movq	%rbp, %rdi
    00000cae: 	subq	start_time(%rip), %rax
    00000cb5: 	cvtsi2sd	%rax, %xmm0
    00000cba: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000cc2: 	callq	_Z13record_resultdPKc # Offset: 3266
    00000cc7: 	movq	0xf0(%rsp), %rdi
    00000ccf: 	cmpq	0x30(%rsp), %rdi
    00000cd4: 	je	.Ltmp3169 # Offset: 3284
    00000cd6: 	movq	0x100(%rsp), %rax
    00000cde: 	leaq	0x1(%rax), %rsi
    00000ce2: 	callq	_ZdlPvm@PLT # Offset: 3298
.Ltmp3169:
    00000ce7: 	leaq	DATAat0x38246(%rip), %rdx
    00000cee: 	movq	%r15, %rsi
    00000cf1: 	movq	%r14, %rdi
    00000cf4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3316
    00000cf9: 	callq	clock@PLT # Offset: 3321
    00000cfe: 	movl	iterations(%rip), %ecx
    00000d04: 	xorl	%ebp, %ebp
    00000d06: 	leaq	DATAat0x381c8(%rip), %r12
    00000d0d: 	movq	%rax, start_time(%rip)
    00000d14: 	testl	%ecx, %ecx
    00000d16: 	jle	.Ltmp3170 # Offset: 3350
    00000d1c: 	nopl	(%rax) # Size: 4
.Ltmp3173:
    00000d20: 	movq	%r13, %rax
    00000d23: 	pxor	%xmm0, %xmm0
    00000d27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3171:
    00000d30: 	paddw	(%rax), %xmm0
    00000d34: 	addq	$0x10, %rax
    00000d38: 	cmpq	%rbx, %rax
    00000d3b: 	jne	.Ltmp3171 # Offset: 3387
    00000d3d: 	movdqa	%xmm0, %xmm1
    00000d41: 	cvttsd2si	init_value(%rip), %eax
    00000d49: 	psrldq	$0x8, %xmm1
    00000d4e: 	paddw	%xmm1, %xmm0
    00000d52: 	movdqa	%xmm0, %xmm1
    00000d56: 	psrldq	$0x4, %xmm1
    00000d5b: 	imulw	$0x1f40, %ax, %ax
    00000d60: 	paddw	%xmm1, %xmm0
    00000d64: 	movdqa	%xmm0, %xmm1
    00000d68: 	psrldq	$0x2, %xmm1
    00000d6d: 	paddw	%xmm1, %xmm0
    00000d71: 	pextrw	$0x0, %xmm0, %edx
    00000d76: 	cmpw	%dx, %ax
    00000d79: 	je	.Ltmp3172 # Offset: 3449
    00000d7b: 	movl	current_test(%rip), %edx
    00000d81: 	movq	%r12, %rsi
    00000d84: 	movl	$0x1, %edi
    00000d89: 	xorl	%eax, %eax
    00000d8b: 	callq	__printf_chk@PLT # Offset: 3467
    00000d90: 	movl	iterations(%rip), %ecx
.Ltmp3172:
    00000d96: 	addl	$0x1, %ebp
    00000d99: 	cmpl	%ecx, %ebp
    00000d9b: 	jl	.Ltmp3173 # Offset: 3483
.Ltmp3170:
    00000d9d: 	movq	%r14, %rsi
    00000da0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000da7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3495
    00000dac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000db3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dc1: 	je	.Ltmp3174 # Offset: 3521
.Ltmp3353:
    00000dc7: 	movq	-0x20(%rax), %rbp
    00000dcb: 	callq	clock@PLT # Offset: 3531
    00000dd0: 	pxor	%xmm0, %xmm0
    00000dd4: 	movq	%rax, end_time(%rip)
    00000ddb: 	movq	%rbp, %rdi
    00000dde: 	subq	start_time(%rip), %rax
    00000de5: 	cvtsi2sd	%rax, %xmm0
    00000dea: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000df2: 	callq	_Z13record_resultdPKc # Offset: 3570
    00000df7: 	movq	0xf0(%rsp), %rdi
    00000dff: 	cmpq	0x30(%rsp), %rdi
    00000e04: 	je	.Ltmp3175 # Offset: 3588
    00000e06: 	movq	0x100(%rsp), %rax
    00000e0e: 	leaq	0x1(%rax), %rsi
    00000e12: 	callq	_ZdlPvm@PLT # Offset: 3602
.Ltmp3175:
    00000e17: 	leaq	DATAat0x3824f(%rip), %rdx
    00000e1e: 	movq	%r15, %rsi
    00000e21: 	movq	%r14, %rdi
    00000e24: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3620
    00000e29: 	callq	clock@PLT # Offset: 3625
    00000e2e: 	movl	iterations(%rip), %ecx
    00000e34: 	xorl	%ebp, %ebp
    00000e36: 	leaq	DATAat0x381c8(%rip), %r12
    00000e3d: 	movq	%rax, start_time(%rip)
    00000e44: 	testl	%ecx, %ecx
    00000e46: 	jle	.Ltmp3176 # Offset: 3654
    00000e4c: 	nopl	(%rax) # Size: 4
.Ltmp3179:
    00000e50: 	movq	%r13, %rax
    00000e53: 	pxor	%xmm0, %xmm0
    00000e57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3177:
    00000e60: 	paddw	(%rax), %xmm0
    00000e64: 	addq	$0x10, %rax
    00000e68: 	cmpq	%rax, %rbx
    00000e6b: 	jne	.Ltmp3177 # Offset: 3691
    00000e6d: 	movdqa	%xmm0, %xmm1
    00000e71: 	cvttsd2si	init_value(%rip), %eax
    00000e79: 	psrldq	$0x8, %xmm1
    00000e7e: 	paddw	%xmm1, %xmm0
    00000e82: 	movdqa	%xmm0, %xmm1
    00000e86: 	psrldq	$0x4, %xmm1
    00000e8b: 	imulw	$0x1f40, %ax, %ax
    00000e90: 	paddw	%xmm1, %xmm0
    00000e94: 	movdqa	%xmm0, %xmm1
    00000e98: 	psrldq	$0x2, %xmm1
    00000e9d: 	paddw	%xmm1, %xmm0
    00000ea1: 	pextrw	$0x0, %xmm0, %edx
    00000ea6: 	cmpw	%dx, %ax
    00000ea9: 	je	.Ltmp3178 # Offset: 3753
    00000eab: 	movl	current_test(%rip), %edx
    00000eb1: 	movq	%r12, %rsi
    00000eb4: 	movl	$0x1, %edi
    00000eb9: 	xorl	%eax, %eax
    00000ebb: 	callq	__printf_chk@PLT # Offset: 3771
    00000ec0: 	movl	iterations(%rip), %ecx
.Ltmp3178:
    00000ec6: 	addl	$0x1, %ebp
    00000ec9: 	cmpl	%ecx, %ebp
    00000ecb: 	jl	.Ltmp3179 # Offset: 3787
.Ltmp3176:
    00000ecd: 	movq	%r14, %rsi
    00000ed0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ed7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3799
    00000edc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ee3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000eea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ef1: 	je	.Ltmp3180 # Offset: 3825
.Ltmp3352:
    00000ef7: 	movq	-0x20(%rax), %rbp
    00000efb: 	callq	clock@PLT # Offset: 3835
    00000f00: 	pxor	%xmm0, %xmm0
    00000f04: 	movq	%rax, end_time(%rip)
    00000f0b: 	movq	%rbp, %rdi
    00000f0e: 	subq	start_time(%rip), %rax
    00000f15: 	cvtsi2sd	%rax, %xmm0
    00000f1a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000f22: 	callq	_Z13record_resultdPKc # Offset: 3874
    00000f27: 	movq	0xf0(%rsp), %rdi
    00000f2f: 	cmpq	0x30(%rsp), %rdi
    00000f34: 	je	.Ltmp3181 # Offset: 3892
    00000f36: 	movq	0x100(%rsp), %rax
    00000f3e: 	leaq	0x1(%rax), %rsi
    00000f42: 	callq	_ZdlPvm@PLT # Offset: 3906
.Ltmp3181:
    00000f47: 	leaq	DATAat0x38259(%rip), %rdx
    00000f4e: 	movq	%r15, %rsi
    00000f51: 	movq	%r14, %rdi
    00000f54: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3924
    00000f59: 	callq	clock@PLT # Offset: 3929
    00000f5e: 	movl	iterations(%rip), %ecx
    00000f64: 	xorl	%ebp, %ebp
    00000f66: 	leaq	DATAat0x381c8(%rip), %r12
    00000f6d: 	movq	%rax, start_time(%rip)
    00000f74: 	testl	%ecx, %ecx
    00000f76: 	jle	.Ltmp3182 # Offset: 3958
    00000f7c: 	nopl	(%rax) # Size: 4
.Ltmp3185:
    00000f80: 	movq	%r13, %rax
    00000f83: 	pxor	%xmm0, %xmm0
    00000f87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3183:
    00000f90: 	paddw	(%rax), %xmm0
    00000f94: 	addq	$0x10, %rax
    00000f98: 	cmpq	%rbx, %rax
    00000f9b: 	jne	.Ltmp3183 # Offset: 3995
    00000f9d: 	movdqa	%xmm0, %xmm1
    00000fa1: 	cvttsd2si	init_value(%rip), %eax
    00000fa9: 	psrldq	$0x8, %xmm1
    00000fae: 	paddw	%xmm1, %xmm0
    00000fb2: 	movdqa	%xmm0, %xmm1
    00000fb6: 	psrldq	$0x4, %xmm1
    00000fbb: 	imulw	$0x1f40, %ax, %ax
    00000fc0: 	paddw	%xmm1, %xmm0
    00000fc4: 	movdqa	%xmm0, %xmm1
    00000fc8: 	psrldq	$0x2, %xmm1
    00000fcd: 	paddw	%xmm1, %xmm0
    00000fd1: 	pextrw	$0x0, %xmm0, %edx
    00000fd6: 	cmpw	%dx, %ax
    00000fd9: 	je	.Ltmp3184 # Offset: 4057
    00000fdb: 	movl	current_test(%rip), %edx
    00000fe1: 	movq	%r12, %rsi
    00000fe4: 	movl	$0x1, %edi
    00000fe9: 	xorl	%eax, %eax
    00000feb: 	callq	__printf_chk@PLT # Offset: 4075
    00000ff0: 	movl	iterations(%rip), %ecx
.Ltmp3184:
    00000ff6: 	addl	$0x1, %ebp
    00000ff9: 	cmpl	%ecx, %ebp
    00000ffb: 	jl	.Ltmp3185 # Offset: 4091
.Ltmp3182:
    00000ffd: 	movq	%r14, %rsi
    00001000: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001007: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4103
    0000100c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001013: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000101a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001021: 	je	.Ltmp3186 # Offset: 4129
.Ltmp3351:
    00001027: 	movq	-0x20(%rax), %rbp
    0000102b: 	callq	clock@PLT # Offset: 4139
    00001030: 	pxor	%xmm0, %xmm0
    00001034: 	movq	%rax, end_time(%rip)
    0000103b: 	movq	%rbp, %rdi
    0000103e: 	subq	start_time(%rip), %rax
    00001045: 	cvtsi2sd	%rax, %xmm0
    0000104a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001052: 	callq	_Z13record_resultdPKc # Offset: 4178
    00001057: 	movq	0xf0(%rsp), %rdi
    0000105f: 	cmpq	0x30(%rsp), %rdi
    00001064: 	je	.Ltmp3187 # Offset: 4196
    00001066: 	movq	0x100(%rsp), %rax
    0000106e: 	leaq	0x1(%rax), %rsi
    00001072: 	callq	_ZdlPvm@PLT # Offset: 4210
.Ltmp3187:
    00001077: 	leaq	DATAat0x38266(%rip), %rdx
    0000107e: 	movq	%r15, %rsi
    00001081: 	movq	%r14, %rdi
    00001084: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4228
    00001089: 	callq	clock@PLT # Offset: 4233
    0000108e: 	movl	iterations(%rip), %ecx
    00001094: 	xorl	%ebp, %ebp
    00001096: 	leaq	DATAat0x381c8(%rip), %r12
    0000109d: 	movq	%rax, start_time(%rip)
    000010a4: 	testl	%ecx, %ecx
    000010a6: 	jle	.Ltmp3188 # Offset: 4262
    000010ac: 	nopl	(%rax) # Size: 4
.Ltmp3191:
    000010b0: 	movq	%r13, %rax
    000010b3: 	pxor	%xmm0, %xmm0
    000010b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3189:
    000010c0: 	paddw	(%rax), %xmm0
    000010c4: 	addq	$0x10, %rax
    000010c8: 	cmpq	%rbx, %rax
    000010cb: 	jne	.Ltmp3189 # Offset: 4299
    000010cd: 	movdqa	%xmm0, %xmm1
    000010d1: 	cvttsd2si	init_value(%rip), %eax
    000010d9: 	psrldq	$0x8, %xmm1
    000010de: 	paddw	%xmm1, %xmm0
    000010e2: 	movdqa	%xmm0, %xmm1
    000010e6: 	psrldq	$0x4, %xmm1
    000010eb: 	imulw	$0x1f40, %ax, %ax
    000010f0: 	paddw	%xmm1, %xmm0
    000010f4: 	movdqa	%xmm0, %xmm1
    000010f8: 	psrldq	$0x2, %xmm1
    000010fd: 	paddw	%xmm1, %xmm0
    00001101: 	pextrw	$0x0, %xmm0, %edx
    00001106: 	cmpw	%dx, %ax
    00001109: 	je	.Ltmp3190 # Offset: 4361
    0000110b: 	movl	current_test(%rip), %edx
    00001111: 	movq	%r12, %rsi
    00001114: 	movl	$0x1, %edi
    00001119: 	xorl	%eax, %eax
    0000111b: 	callq	__printf_chk@PLT # Offset: 4379
    00001120: 	movl	iterations(%rip), %ecx
.Ltmp3190:
    00001126: 	addl	$0x1, %ebp
    00001129: 	cmpl	%ecx, %ebp
    0000112b: 	jl	.Ltmp3191 # Offset: 4395
.Ltmp3188:
    0000112d: 	movq	%r14, %rsi
    00001130: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001137: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4407
    0000113c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001143: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000114a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001151: 	je	.Ltmp3192 # Offset: 4433
.Ltmp3350:
    00001157: 	movq	-0x20(%rax), %rbp
    0000115b: 	callq	clock@PLT # Offset: 4443
    00001160: 	pxor	%xmm0, %xmm0
    00001164: 	movq	%rax, end_time(%rip)
    0000116b: 	movq	%rbp, %rdi
    0000116e: 	subq	start_time(%rip), %rax
    00001175: 	cvtsi2sd	%rax, %xmm0
    0000117a: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001182: 	callq	_Z13record_resultdPKc # Offset: 4482
    00001187: 	movq	0xf0(%rsp), %rdi
    0000118f: 	cmpq	0x30(%rsp), %rdi
    00001194: 	je	.Ltmp3193 # Offset: 4500
    00001196: 	movq	0x100(%rsp), %rax
    0000119e: 	leaq	0x1(%rax), %rsi
    000011a2: 	callq	_ZdlPvm@PLT # Offset: 4514
.Ltmp3193:
    000011a7: 	leaq	0x90(%rsp), %rdi
    000011af: 	leaq	DATAat0x38275(%rip), %rdx
    000011b6: 	movq	%r15, %rsi
    000011b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4537
    000011be: 	movl	iterations(%rip), %esi
    000011c4: 	movq	0x90(%rsp), %rdi
    000011cc: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4556
    000011d1: 	leaq	DATAat0x381e2(%rip), %rdx
    000011d8: 	movq	%r15, %rsi
    000011db: 	movq	%r14, %rdi
    000011de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4574
    000011e3: 	callq	clock@PLT # Offset: 4579
    000011e8: 	movq	%r14, %rsi
    000011eb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011f2: 	movq	%rax, start_time(%rip)
    000011f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4601
    000011fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001205: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000120c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001213: 	je	.Ltmp3194 # Offset: 4627
.Ltmp3349:
    00001219: 	movq	-0x20(%rax), %rbp
    0000121d: 	callq	clock@PLT # Offset: 4637
    00001222: 	pxor	%xmm0, %xmm0
    00001226: 	movq	%rax, end_time(%rip)
    0000122d: 	movq	%rbp, %rdi
    00001230: 	subq	start_time(%rip), %rax
    00001237: 	cvtsi2sd	%rax, %xmm0
    0000123c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001244: 	callq	_Z13record_resultdPKc # Offset: 4676
    00001249: 	movq	0xf0(%rsp), %rdi
    00001251: 	cmpq	0x30(%rsp), %rdi
    00001256: 	je	.Ltmp3195 # Offset: 4694
    00001258: 	movq	0x100(%rsp), %rax
    00001260: 	leaq	0x1(%rax), %rsi
    00001264: 	callq	_ZdlPvm@PLT # Offset: 4708
.Ltmp3195:
    00001269: 	leaq	DATAat0x3828f(%rip), %rdx
    00001270: 	movq	%r15, %rsi
    00001273: 	movq	%r14, %rdi
    00001276: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4726
    0000127b: 	callq	clock@PLT # Offset: 4731
    00001280: 	movq	%r14, %rsi
    00001283: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000128a: 	movq	%rax, start_time(%rip)
    00001291: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4753
    00001296: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000129d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012ab: 	je	.Ltmp3196 # Offset: 4779
.Ltmp3348:
    000012b1: 	movq	-0x20(%rax), %rbp
    000012b5: 	callq	clock@PLT # Offset: 4789
    000012ba: 	pxor	%xmm0, %xmm0
    000012be: 	movq	%rax, end_time(%rip)
    000012c5: 	movq	%rbp, %rdi
    000012c8: 	subq	start_time(%rip), %rax
    000012cf: 	cvtsi2sd	%rax, %xmm0
    000012d4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012dc: 	callq	_Z13record_resultdPKc # Offset: 4828
    000012e1: 	movq	0xf0(%rsp), %rdi
    000012e9: 	cmpq	0x30(%rsp), %rdi
    000012ee: 	je	.Ltmp3197 # Offset: 4846
    000012f0: 	movq	0x100(%rsp), %rax
    000012f8: 	leaq	0x1(%rax), %rsi
    000012fc: 	callq	_ZdlPvm@PLT # Offset: 4860
.Ltmp3197:
    00001301: 	leaq	DATAat0x3829b(%rip), %rdx
    00001308: 	movq	%r15, %rsi
    0000130b: 	movq	%r14, %rdi
    0000130e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4878
    00001313: 	callq	clock@PLT # Offset: 4883
    00001318: 	movq	%r14, %rsi
    0000131b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001322: 	movq	%rax, start_time(%rip)
    00001329: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4905
    0000132e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001335: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000133c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001343: 	je	.Ltmp3198 # Offset: 4931
.Ltmp3347:
    00001349: 	movq	-0x20(%rax), %rbp
    0000134d: 	callq	clock@PLT # Offset: 4941
    00001352: 	pxor	%xmm0, %xmm0
    00001356: 	movq	%rax, end_time(%rip)
    0000135d: 	movq	%rbp, %rdi
    00001360: 	subq	start_time(%rip), %rax
    00001367: 	cvtsi2sd	%rax, %xmm0
    0000136c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001374: 	callq	_Z13record_resultdPKc # Offset: 4980
    00001379: 	movq	0xf0(%rsp), %rdi
    00001381: 	cmpq	0x30(%rsp), %rdi
    00001386: 	je	.Ltmp3199 # Offset: 4998
    00001388: 	movq	0x100(%rsp), %rax
    00001390: 	leaq	0x1(%rax), %rsi
    00001394: 	callq	_ZdlPvm@PLT # Offset: 5012
.Ltmp3199:
    00001399: 	leaq	DATAat0x382aa(%rip), %rdx
    000013a0: 	movq	%r15, %rsi
    000013a3: 	movq	%r14, %rdi
    000013a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5030
    000013ab: 	callq	clock@PLT # Offset: 5035
    000013b0: 	movq	%r14, %rsi
    000013b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013ba: 	movq	%rax, start_time(%rip)
    000013c1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5057
    000013c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013cd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013db: 	je	.Ltmp3200 # Offset: 5083
.Ltmp3346:
    000013e1: 	movq	-0x20(%rax), %rbp
    000013e5: 	callq	clock@PLT # Offset: 5093
    000013ea: 	pxor	%xmm0, %xmm0
    000013ee: 	movq	%rax, end_time(%rip)
    000013f5: 	movq	%rbp, %rdi
    000013f8: 	subq	start_time(%rip), %rax
    000013ff: 	cvtsi2sd	%rax, %xmm0
    00001404: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000140c: 	callq	_Z13record_resultdPKc # Offset: 5132
    00001411: 	movq	0xf0(%rsp), %rdi
    00001419: 	cmpq	0x30(%rsp), %rdi
    0000141e: 	je	.Ltmp3201 # Offset: 5150
    00001420: 	movq	0x100(%rsp), %rax
    00001428: 	leaq	0x1(%rax), %rsi
    0000142c: 	callq	_ZdlPvm@PLT # Offset: 5164
.Ltmp3201:
    00001431: 	leaq	DATAat0x382f3(%rip), %rdx
    00001438: 	movq	%r15, %rsi
    0000143b: 	movq	%r14, %rdi
    0000143e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5182
    00001443: 	callq	clock@PLT # Offset: 5187
    00001448: 	movq	%r14, %rsi
    0000144b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001452: 	movq	%rax, start_time(%rip)
    00001459: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5209
    0000145e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001465: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001473: 	je	.Ltmp3202 # Offset: 5235
.Ltmp3345:
    00001479: 	movq	-0x20(%rax), %rbp
    0000147d: 	callq	clock@PLT # Offset: 5245
    00001482: 	pxor	%xmm0, %xmm0
    00001486: 	movq	%rax, end_time(%rip)
    0000148d: 	movq	%rbp, %rdi
    00001490: 	subq	start_time(%rip), %rax
    00001497: 	cvtsi2sd	%rax, %xmm0
    0000149c: 	divsd	DATAat0x385e0(%rip), %xmm0
    000014a4: 	callq	_Z13record_resultdPKc # Offset: 5284
    000014a9: 	movq	0xf0(%rsp), %rdi
    000014b1: 	cmpq	0x30(%rsp), %rdi
    000014b6: 	je	.Ltmp3203 # Offset: 5302
    000014b8: 	movq	0x100(%rsp), %rax
    000014c0: 	leaq	0x1(%rax), %rsi
    000014c4: 	callq	_ZdlPvm@PLT # Offset: 5316
.Ltmp3203:
    000014c9: 	leaq	DATAat0x382b3(%rip), %rdx
    000014d0: 	movq	%r15, %rsi
    000014d3: 	movq	%r14, %rdi
    000014d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5334
    000014db: 	callq	clock@PLT # Offset: 5339
    000014e0: 	movq	%r14, %rsi
    000014e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014ea: 	movq	%rax, start_time(%rip)
    000014f1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5361
    000014f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014fd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001504: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150b: 	je	.Ltmp3204 # Offset: 5387
.Ltmp3344:
    00001511: 	movq	-0x20(%rax), %rbp
    00001515: 	callq	clock@PLT # Offset: 5397
    0000151a: 	pxor	%xmm0, %xmm0
    0000151e: 	movq	%rax, end_time(%rip)
    00001525: 	movq	%rbp, %rdi
    00001528: 	subq	start_time(%rip), %rax
    0000152f: 	cvtsi2sd	%rax, %xmm0
    00001534: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000153c: 	callq	_Z13record_resultdPKc # Offset: 5436
    00001541: 	movq	0xf0(%rsp), %rdi
    00001549: 	cmpq	0x30(%rsp), %rdi
    0000154e: 	je	.Ltmp3205 # Offset: 5454
    00001550: 	movq	0x100(%rsp), %rax
    00001558: 	leaq	0x1(%rax), %rsi
    0000155c: 	callq	_ZdlPvm@PLT # Offset: 5468
.Ltmp3205:
    00001561: 	leaq	DATAat0x382c3(%rip), %rdx
    00001568: 	movq	%r15, %rsi
    0000156b: 	movq	%r14, %rdi
    0000156e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5486
    00001573: 	callq	clock@PLT # Offset: 5491
    00001578: 	movq	%r14, %rsi
    0000157b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001582: 	movq	%rax, start_time(%rip)
    00001589: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5513
    0000158e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001595: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000159c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015a3: 	je	.Ltmp3206 # Offset: 5539
.Ltmp3343:
    000015a9: 	movq	-0x20(%rax), %rbp
    000015ad: 	callq	clock@PLT # Offset: 5549
    000015b2: 	pxor	%xmm0, %xmm0
    000015b6: 	movq	%rax, end_time(%rip)
    000015bd: 	movq	%rbp, %rdi
    000015c0: 	subq	start_time(%rip), %rax
    000015c7: 	cvtsi2sd	%rax, %xmm0
    000015cc: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015d4: 	callq	_Z13record_resultdPKc # Offset: 5588
    000015d9: 	movq	0xf0(%rsp), %rdi
    000015e1: 	cmpq	0x30(%rsp), %rdi
    000015e6: 	je	.Ltmp3207 # Offset: 5606
    000015e8: 	movq	0x100(%rsp), %rax
    000015f0: 	leaq	0x1(%rax), %rsi
    000015f4: 	callq	_ZdlPvm@PLT # Offset: 5620
.Ltmp3207:
    000015f9: 	leaq	DATAat0x382d6(%rip), %rdx
    00001600: 	movq	%r15, %rsi
    00001603: 	movq	%r14, %rdi
    00001606: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5638
    0000160b: 	callq	clock@PLT # Offset: 5643
    00001610: 	movq	%r14, %rsi
    00001613: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000161a: 	movq	%rax, start_time(%rip)
    00001621: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5665
    00001626: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000162d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001634: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000163b: 	je	.Ltmp3208 # Offset: 5691
.Ltmp3342:
    00001641: 	movq	-0x20(%rax), %rbp
    00001645: 	callq	clock@PLT # Offset: 5701
    0000164a: 	pxor	%xmm0, %xmm0
    0000164e: 	movq	%rax, end_time(%rip)
    00001655: 	movq	%rbp, %rdi
    00001658: 	subq	start_time(%rip), %rax
    0000165f: 	cvtsi2sd	%rax, %xmm0
    00001664: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000166c: 	callq	_Z13record_resultdPKc # Offset: 5740
    00001671: 	movq	0xf0(%rsp), %rdi
    00001679: 	cmpq	0x30(%rsp), %rdi
    0000167e: 	je	.Ltmp3209 # Offset: 5758
    00001680: 	movq	0x100(%rsp), %rax
    00001688: 	leaq	0x1(%rax), %rsi
    0000168c: 	callq	_ZdlPvm@PLT # Offset: 5772
.Ltmp3209:
    00001691: 	leaq	DATAat0x382e6(%rip), %rdx
    00001698: 	movq	%r15, %rsi
    0000169b: 	movq	%r14, %rdi
    0000169e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5790
    000016a3: 	callq	clock@PLT # Offset: 5795
    000016a8: 	movq	%r14, %rsi
    000016ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016b2: 	movq	%rax, start_time(%rip)
    000016b9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5817
    000016be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016d3: 	je	.Ltmp3210 # Offset: 5843
.Ltmp3341:
    000016d9: 	movq	-0x20(%rax), %rbp
    000016dd: 	callq	clock@PLT # Offset: 5853
    000016e2: 	pxor	%xmm0, %xmm0
    000016e6: 	movq	%rax, end_time(%rip)
    000016ed: 	movq	%rbp, %rdi
    000016f0: 	subq	start_time(%rip), %rax
    000016f7: 	cvtsi2sd	%rax, %xmm0
    000016fc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001704: 	callq	_Z13record_resultdPKc # Offset: 5892
    00001709: 	movq	0xf0(%rsp), %rdi
    00001711: 	cmpq	0x30(%rsp), %rdi
    00001716: 	je	.Ltmp3211 # Offset: 5910
    00001718: 	movq	0x100(%rsp), %rax
    00001720: 	leaq	0x1(%rax), %rsi
    00001724: 	callq	_ZdlPvm@PLT # Offset: 5924
.Ltmp3211:
    00001729: 	leaq	DATAat0x382ff(%rip), %rdx
    00001730: 	movq	%r15, %rsi
    00001733: 	movq	%r14, %rdi
    00001736: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5942
    0000173b: 	callq	clock@PLT # Offset: 5947
    00001740: 	movq	%r14, %rsi
    00001743: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000174a: 	movq	%rax, start_time(%rip)
    00001751: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5969
    00001756: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000175d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001764: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000176b: 	je	.Ltmp3212 # Offset: 5995
.Ltmp3340:
    00001771: 	movq	-0x20(%rax), %rbp
    00001775: 	callq	clock@PLT # Offset: 6005
    0000177a: 	pxor	%xmm0, %xmm0
    0000177e: 	movq	%rax, end_time(%rip)
    00001785: 	movq	%rbp, %rdi
    00001788: 	subq	start_time(%rip), %rax
    0000178f: 	cvtsi2sd	%rax, %xmm0
    00001794: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000179c: 	callq	_Z13record_resultdPKc # Offset: 6044
    000017a1: 	movq	0xf0(%rsp), %rdi
    000017a9: 	cmpq	0x30(%rsp), %rdi
    000017ae: 	je	.Ltmp3213 # Offset: 6062
    000017b0: 	movq	0x100(%rsp), %rax
    000017b8: 	leaq	0x1(%rax), %rsi
    000017bc: 	callq	_ZdlPvm@PLT # Offset: 6076
.Ltmp3213:
    000017c1: 	leaq	DATAat0x38315(%rip), %rdx
    000017c8: 	movq	%r15, %rsi
    000017cb: 	movq	%r14, %rdi
    000017ce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6094
    000017d3: 	callq	clock@PLT # Offset: 6099
    000017d8: 	movq	%r14, %rsi
    000017db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017e2: 	movq	%rax, start_time(%rip)
    000017e9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6121
    000017ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017f5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001803: 	je	.Ltmp3214 # Offset: 6147
.Ltmp3339:
    00001809: 	movq	-0x20(%rax), %rbp
    0000180d: 	callq	clock@PLT # Offset: 6157
    00001812: 	pxor	%xmm0, %xmm0
    00001816: 	movq	%rax, end_time(%rip)
    0000181d: 	movq	%rbp, %rdi
    00001820: 	subq	start_time(%rip), %rax
    00001827: 	cvtsi2sd	%rax, %xmm0
    0000182c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001834: 	callq	_Z13record_resultdPKc # Offset: 6196
    00001839: 	movq	0xf0(%rsp), %rdi
    00001841: 	cmpq	0x30(%rsp), %rdi
    00001846: 	je	.Ltmp3215 # Offset: 6214
    00001848: 	movq	0x100(%rsp), %rax
    00001850: 	leaq	0x1(%rax), %rsi
    00001854: 	callq	_ZdlPvm@PLT # Offset: 6228
.Ltmp3215:
    00001859: 	leaq	DATAat0x3831f(%rip), %rdx
    00001860: 	movq	%r15, %rsi
    00001863: 	movq	%r14, %rdi
    00001866: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6246
    0000186b: 	callq	clock@PLT # Offset: 6251
    00001870: 	movq	%r14, %rsi
    00001873: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000187a: 	movq	%rax, start_time(%rip)
    00001881: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6273
    00001886: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000188d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001894: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000189b: 	je	.Ltmp3216 # Offset: 6299
.Ltmp3338:
    000018a1: 	movq	-0x20(%rax), %rbp
    000018a5: 	callq	clock@PLT # Offset: 6309
    000018aa: 	pxor	%xmm0, %xmm0
    000018ae: 	movq	%rax, end_time(%rip)
    000018b5: 	movq	%rbp, %rdi
    000018b8: 	subq	start_time(%rip), %rax
    000018bf: 	cvtsi2sd	%rax, %xmm0
    000018c4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018cc: 	callq	_Z13record_resultdPKc # Offset: 6348
    000018d1: 	movq	0xf0(%rsp), %rdi
    000018d9: 	cmpq	0x30(%rsp), %rdi
    000018de: 	je	.Ltmp3217 # Offset: 6366
    000018e0: 	movq	0x100(%rsp), %rax
    000018e8: 	leaq	0x1(%rax), %rsi
    000018ec: 	callq	_ZdlPvm@PLT # Offset: 6380
.Ltmp3217:
    000018f1: 	leaq	DATAat0x38329(%rip), %rdx
    000018f8: 	movq	%r15, %rsi
    000018fb: 	movq	%r14, %rdi
    000018fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6398
    00001903: 	callq	clock@PLT # Offset: 6403
    00001908: 	movq	%r14, %rsi
    0000190b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001912: 	movq	%rax, start_time(%rip)
    00001919: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6425
    0000191e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001925: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000192c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001933: 	je	.Ltmp3218 # Offset: 6451
.Ltmp3337:
    00001939: 	movq	-0x20(%rax), %rbp
    0000193d: 	callq	clock@PLT # Offset: 6461
    00001942: 	pxor	%xmm0, %xmm0
    00001946: 	movq	%rax, end_time(%rip)
    0000194d: 	movq	%rbp, %rdi
    00001950: 	subq	start_time(%rip), %rax
    00001957: 	cvtsi2sd	%rax, %xmm0
    0000195c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001964: 	callq	_Z13record_resultdPKc # Offset: 6500
    00001969: 	movq	0xf0(%rsp), %rdi
    00001971: 	cmpq	0x30(%rsp), %rdi
    00001976: 	je	.Ltmp3219 # Offset: 6518
    00001978: 	movq	0x100(%rsp), %rax
    00001980: 	leaq	0x1(%rax), %rsi
    00001984: 	callq	_ZdlPvm@PLT # Offset: 6532
.Ltmp3219:
    00001989: 	leaq	DATAat0x38339(%rip), %rdx
    00001990: 	movq	%r15, %rsi
    00001993: 	movq	%r14, %rdi
    00001996: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6550
    0000199b: 	callq	clock@PLT # Offset: 6555
    000019a0: 	movq	%r14, %rsi
    000019a3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019aa: 	movq	%rax, start_time(%rip)
    000019b1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6577
    000019b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019bd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019cb: 	je	.Ltmp3220 # Offset: 6603
.Ltmp3336:
    000019d1: 	movq	-0x20(%rax), %rbp
    000019d5: 	callq	clock@PLT # Offset: 6613
    000019da: 	pxor	%xmm0, %xmm0
    000019de: 	movq	%rax, end_time(%rip)
    000019e5: 	movq	%rbp, %rdi
    000019e8: 	subq	start_time(%rip), %rax
    000019ef: 	cvtsi2sd	%rax, %xmm0
    000019f4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000019fc: 	callq	_Z13record_resultdPKc # Offset: 6652
    00001a01: 	movq	0xf0(%rsp), %rdi
    00001a09: 	cmpq	0x30(%rsp), %rdi
    00001a0e: 	je	.Ltmp3221 # Offset: 6670
    00001a10: 	movq	0x100(%rsp), %rax
    00001a18: 	leaq	0x1(%rax), %rsi
    00001a1c: 	callq	_ZdlPvm@PLT # Offset: 6684
.Ltmp3221:
    00001a21: 	leaq	DATAat0x38351(%rip), %rdx
    00001a28: 	movq	%r15, %rsi
    00001a2b: 	movq	%r14, %rdi
    00001a2e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6702
    00001a33: 	callq	clock@PLT # Offset: 6707
    00001a38: 	movq	%r14, %rsi
    00001a3b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a42: 	movq	%rax, start_time(%rip)
    00001a49: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6729
    00001a4e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a55: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a5c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a63: 	je	.Ltmp3222 # Offset: 6755
.Ltmp3335:
    00001a69: 	movq	-0x20(%rax), %rbp
    00001a6d: 	callq	clock@PLT # Offset: 6765
    00001a72: 	pxor	%xmm0, %xmm0
    00001a76: 	movq	%rax, end_time(%rip)
    00001a7d: 	movq	%rbp, %rdi
    00001a80: 	subq	start_time(%rip), %rax
    00001a87: 	cvtsi2sd	%rax, %xmm0
    00001a8c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a94: 	callq	_Z13record_resultdPKc # Offset: 6804
    00001a99: 	movq	0xf0(%rsp), %rdi
    00001aa1: 	cmpq	0x30(%rsp), %rdi
    00001aa6: 	je	.Ltmp3223 # Offset: 6822
    00001aa8: 	movq	0x100(%rsp), %rax
    00001ab0: 	leaq	0x1(%rax), %rsi
    00001ab4: 	callq	_ZdlPvm@PLT # Offset: 6836
.Ltmp3223:
    00001ab9: 	leaq	DATAat0x38369(%rip), %rdx
    00001ac0: 	movq	%r15, %rsi
    00001ac3: 	movq	%r14, %rdi
    00001ac6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6854
    00001acb: 	callq	clock@PLT # Offset: 6859
    00001ad0: 	movq	%r14, %rsi
    00001ad3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ada: 	movq	%rax, start_time(%rip)
    00001ae1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6881
    00001ae6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001aed: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001af4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001afb: 	je	.Ltmp3224 # Offset: 6907
.Ltmp3334:
    00001b01: 	movq	-0x20(%rax), %rbp
    00001b05: 	callq	clock@PLT # Offset: 6917
    00001b0a: 	pxor	%xmm0, %xmm0
    00001b0e: 	movq	%rax, end_time(%rip)
    00001b15: 	movq	%rbp, %rdi
    00001b18: 	subq	start_time(%rip), %rax
    00001b1f: 	cvtsi2sd	%rax, %xmm0
    00001b24: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b2c: 	callq	_Z13record_resultdPKc # Offset: 6956
    00001b31: 	movq	0xf0(%rsp), %rdi
    00001b39: 	cmpq	0x30(%rsp), %rdi
    00001b3e: 	je	.Ltmp3225 # Offset: 6974
    00001b40: 	movq	0x100(%rsp), %rax
    00001b48: 	leaq	0x1(%rax), %rsi
    00001b4c: 	callq	_ZdlPvm@PLT # Offset: 6988
.Ltmp3225:
    00001b51: 	leaq	DATAat0x38381(%rip), %rdx
    00001b58: 	movq	%r15, %rsi
    00001b5b: 	movq	%r14, %rdi
    00001b5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7006
    00001b63: 	callq	clock@PLT # Offset: 7011
    00001b68: 	movq	%r14, %rsi
    00001b6b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b72: 	movq	%rax, start_time(%rip)
    00001b79: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7033
    00001b7e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b85: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b8c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b93: 	je	.Ltmp3226 # Offset: 7059
.Ltmp3333:
    00001b99: 	movq	-0x20(%rax), %rbp
    00001b9d: 	callq	clock@PLT # Offset: 7069
    00001ba2: 	pxor	%xmm0, %xmm0
    00001ba6: 	movq	%rax, end_time(%rip)
    00001bad: 	movq	%rbp, %rdi
    00001bb0: 	subq	start_time(%rip), %rax
    00001bb7: 	cvtsi2sd	%rax, %xmm0
    00001bbc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001bc4: 	callq	_Z13record_resultdPKc # Offset: 7108
    00001bc9: 	movq	0xf0(%rsp), %rdi
    00001bd1: 	cmpq	0x30(%rsp), %rdi
    00001bd6: 	je	.Ltmp3227 # Offset: 7126
    00001bd8: 	movq	0x100(%rsp), %rax
    00001be0: 	leaq	0x1(%rax), %rsi
    00001be4: 	callq	_ZdlPvm@PLT # Offset: 7140
.Ltmp3227:
    00001be9: 	leaq	0xb0(%rsp), %rdi
    00001bf1: 	leaq	DATAat0x384a0(%rip), %rdx
    00001bf8: 	movq	%r15, %rsi
    00001bfb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7163
    00001c00: 	movl	iterations(%rip), %esi
    00001c06: 	movq	0xb0(%rsp), %rdi
    00001c0e: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 7182
    00001c13: 	leaq	DATAat0x384c8(%rip), %rdx
    00001c1a: 	movq	%r15, %rsi
    00001c1d: 	movq	%r14, %rdi
    00001c20: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7200
    00001c25: 	movswl	0x3c(%rsp), %eax
    00001c2a: 	movl	%eax, 0x48(%rsp)
    00001c2e: 	movswl	0x38(%rsp), %eax
    00001c33: 	movl	%eax, 0x20(%rsp)
    00001c37: 	callq	clock@PLT # Offset: 7223
    00001c3c: 	movl	iterations(%rip), %ecx
    00001c42: 	movq	%rax, start_time(%rip)
    00001c49: 	testl	%ecx, %ecx
    00001c4b: 	jle	.Ltmp3228 # Offset: 7243
    00001c51: 	movl	0x10(%rsp), %r12d
    00001c56: 	addl	0x20(%rsp), %r12d
    00001c5b: 	xorl	%ebp, %ebp
    00001c5d: 	addl	0x44(%rsp), %r12d
    00001c62: 	addw	0x48(%rsp), %r12w
    00001c68: 	movd	%r12d, %xmm0
    00001c6d: 	punpcklwd	%xmm0, %xmm0
    00001c71: 	pshufd	$0x0, %xmm0, %xmm6
    00001c76: 	movaps	%xmm6, (%rsp)
    00001c7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3231:
    00001c80: 	movq	%r13, %rax
    00001c83: 	pxor	%xmm0, %xmm0
    00001c87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3229:
    00001c90: 	movdqa	(%rsp), %xmm1
    00001c95: 	addq	$0x10, %rax
    00001c99: 	pmullw	-0x10(%rax), %xmm1
    00001c9e: 	paddw	%xmm1, %xmm0
    00001ca2: 	cmpq	%rbx, %rax
    00001ca5: 	jne	.Ltmp3229 # Offset: 7333
    00001ca7: 	movdqa	%xmm0, %xmm1
    00001cab: 	cvttsd2si	init_value(%rip), %eax
    00001cb3: 	psrldq	$0x8, %xmm1
    00001cb8: 	paddw	%xmm1, %xmm0
    00001cbc: 	movdqa	%xmm0, %xmm1
    00001cc0: 	psrldq	$0x4, %xmm1
    00001cc5: 	imull	%r12d, %eax
    00001cc9: 	paddw	%xmm1, %xmm0
    00001ccd: 	movdqa	%xmm0, %xmm1
    00001cd1: 	psrldq	$0x2, %xmm1
    00001cd6: 	imulw	$0x1f40, %ax, %ax
    00001cdb: 	paddw	%xmm1, %xmm0
    00001cdf: 	pextrw	$0x0, %xmm0, %edx
    00001ce4: 	cmpw	%dx, %ax
    00001ce7: 	je	.Ltmp3230 # Offset: 7399
    00001ce9: 	movl	current_test(%rip), %edx
    00001cef: 	leaq	DATAat0x381c8(%rip), %rsi
    00001cf6: 	movl	$0x1, %edi
    00001cfb: 	xorl	%eax, %eax
    00001cfd: 	callq	__printf_chk@PLT # Offset: 7421
    00001d02: 	movl	iterations(%rip), %ecx
.Ltmp3230:
    00001d08: 	addl	$0x1, %ebp
    00001d0b: 	cmpl	%ecx, %ebp
    00001d0d: 	jl	.Ltmp3231 # Offset: 7437
.Ltmp3228:
    00001d13: 	movq	%r14, %rsi
    00001d16: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d1d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7453
    00001d22: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d29: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d30: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d37: 	je	.Ltmp3232 # Offset: 7479
.Ltmp3332:
    00001d3d: 	movq	-0x20(%rax), %rbp
    00001d41: 	callq	clock@PLT # Offset: 7489
    00001d46: 	pxor	%xmm0, %xmm0
    00001d4a: 	movq	%rax, end_time(%rip)
    00001d51: 	movq	%rbp, %rdi
    00001d54: 	subq	start_time(%rip), %rax
    00001d5b: 	cvtsi2sd	%rax, %xmm0
    00001d60: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001d68: 	callq	_Z13record_resultdPKc # Offset: 7528
    00001d6d: 	movq	0xf0(%rsp), %rdi
    00001d75: 	cmpq	0x30(%rsp), %rdi
    00001d7a: 	je	.Ltmp3233 # Offset: 7546
    00001d7c: 	movq	0x100(%rsp), %rax
    00001d84: 	leaq	0x1(%rax), %rsi
    00001d88: 	callq	_ZdlPvm@PLT # Offset: 7560
.Ltmp3233:
    00001d8d: 	leaq	DATAat0x384e8(%rip), %rdx
    00001d94: 	movq	%r15, %rsi
    00001d97: 	movq	%r14, %rdi
    00001d9a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7578
    00001d9f: 	callq	clock@PLT # Offset: 7583
    00001da4: 	movl	iterations(%rip), %ecx
    00001daa: 	movq	%rax, start_time(%rip)
    00001db1: 	testl	%ecx, %ecx
    00001db3: 	jle	.Ltmp3234 # Offset: 7603
    00001db9: 	movl	0x10(%rsp), %r12d
    00001dbe: 	addl	0x20(%rsp), %r12d
    00001dc3: 	xorl	%ebp, %ebp
    00001dc5: 	addl	0x44(%rsp), %r12d
    00001dca: 	addw	0x48(%rsp), %r12w
    00001dd0: 	movd	%r12d, %xmm0
    00001dd5: 	punpcklwd	%xmm0, %xmm0
    00001dd9: 	pshufd	$0x0, %xmm0, %xmm7
    00001dde: 	movaps	%xmm7, (%rsp)
    00001de2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3237:
    00001de8: 	movq	%r13, %rax
    00001deb: 	pxor	%xmm0, %xmm0
    00001def: 	nop # Size: 1
.Ltmp3235:
    00001df0: 	movdqa	(%rsp), %xmm1
    00001df5: 	addq	$0x10, %rax
    00001df9: 	pmullw	-0x10(%rax), %xmm1
    00001dfe: 	paddw	%xmm1, %xmm0
    00001e02: 	cmpq	%rbx, %rax
    00001e05: 	jne	.Ltmp3235 # Offset: 7685
    00001e07: 	movdqa	%xmm0, %xmm1
    00001e0b: 	cvttsd2si	init_value(%rip), %eax
    00001e13: 	psrldq	$0x8, %xmm1
    00001e18: 	paddw	%xmm1, %xmm0
    00001e1c: 	movdqa	%xmm0, %xmm1
    00001e20: 	psrldq	$0x4, %xmm1
    00001e25: 	imull	%r12d, %eax
    00001e29: 	paddw	%xmm1, %xmm0
    00001e2d: 	movdqa	%xmm0, %xmm1
    00001e31: 	psrldq	$0x2, %xmm1
    00001e36: 	imulw	$0x1f40, %ax, %ax
    00001e3b: 	paddw	%xmm1, %xmm0
    00001e3f: 	pextrw	$0x0, %xmm0, %edx
    00001e44: 	cmpw	%dx, %ax
    00001e47: 	je	.Ltmp3236 # Offset: 7751
    00001e49: 	movl	current_test(%rip), %edx
    00001e4f: 	leaq	DATAat0x381c8(%rip), %rsi
    00001e56: 	movl	$0x1, %edi
    00001e5b: 	xorl	%eax, %eax
    00001e5d: 	callq	__printf_chk@PLT # Offset: 7773
    00001e62: 	movl	iterations(%rip), %ecx
.Ltmp3236:
    00001e68: 	addl	$0x1, %ebp
    00001e6b: 	cmpl	%ecx, %ebp
    00001e6d: 	jl	.Ltmp3237 # Offset: 7789
.Ltmp3234:
    00001e73: 	movq	%r14, %rsi
    00001e76: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7805
    00001e82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e89: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e90: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e97: 	je	.Ltmp3238 # Offset: 7831
.Ltmp3331:
    00001e9d: 	movq	-0x20(%rax), %rbp
    00001ea1: 	callq	clock@PLT # Offset: 7841
    00001ea6: 	pxor	%xmm0, %xmm0
    00001eaa: 	movq	%rax, end_time(%rip)
    00001eb1: 	movq	%rbp, %rdi
    00001eb4: 	subq	start_time(%rip), %rax
    00001ebb: 	cvtsi2sd	%rax, %xmm0
    00001ec0: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001ec8: 	callq	_Z13record_resultdPKc # Offset: 7880
    00001ecd: 	movq	0xf0(%rsp), %rdi
    00001ed5: 	cmpq	0x30(%rsp), %rdi
    00001eda: 	je	.Ltmp3239 # Offset: 7898
    00001edc: 	movq	0x100(%rsp), %rax
    00001ee4: 	leaq	0x1(%rax), %rsi
    00001ee8: 	callq	_ZdlPvm@PLT # Offset: 7912
.Ltmp3239:
    00001eed: 	leaq	DATAat0x38508(%rip), %rdx
    00001ef4: 	movq	%r15, %rsi
    00001ef7: 	movq	%r14, %rdi
    00001efa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7930
    00001eff: 	callq	clock@PLT # Offset: 7935
    00001f04: 	movl	iterations(%rip), %ecx
    00001f0a: 	movq	%rax, start_time(%rip)
    00001f11: 	testl	%ecx, %ecx
    00001f13: 	jle	.Ltmp3240 # Offset: 7955
    00001f19: 	movl	0x20(%rsp), %r12d
    00001f1e: 	subl	0x10(%rsp), %r12d
    00001f23: 	xorl	%ebp, %ebp
    00001f25: 	addl	0x44(%rsp), %r12d
    00001f2a: 	subw	0x48(%rsp), %r12w
    00001f30: 	movd	%r12d, %xmm0
    00001f35: 	punpcklwd	%xmm0, %xmm0
    00001f39: 	pshufd	$0x0, %xmm0, %xmm6
    00001f3e: 	movaps	%xmm6, (%rsp)
    00001f42: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3243:
    00001f48: 	movq	%r13, %rax
    00001f4b: 	pxor	%xmm0, %xmm0
    00001f4f: 	nop # Size: 1
.Ltmp3241:
    00001f50: 	movdqa	(%rsp), %xmm1
    00001f55: 	addq	$0x10, %rax
    00001f59: 	pmullw	-0x10(%rax), %xmm1
    00001f5e: 	paddw	%xmm1, %xmm0
    00001f62: 	cmpq	%rbx, %rax
    00001f65: 	jne	.Ltmp3241 # Offset: 8037
    00001f67: 	movdqa	%xmm0, %xmm1
    00001f6b: 	cvttsd2si	init_value(%rip), %eax
    00001f73: 	psrldq	$0x8, %xmm1
    00001f78: 	paddw	%xmm1, %xmm0
    00001f7c: 	movdqa	%xmm0, %xmm1
    00001f80: 	psrldq	$0x4, %xmm1
    00001f85: 	imull	%r12d, %eax
    00001f89: 	paddw	%xmm1, %xmm0
    00001f8d: 	movdqa	%xmm0, %xmm1
    00001f91: 	psrldq	$0x2, %xmm1
    00001f96: 	imulw	$0x1f40, %ax, %ax
    00001f9b: 	paddw	%xmm1, %xmm0
    00001f9f: 	pextrw	$0x0, %xmm0, %edx
    00001fa4: 	cmpw	%dx, %ax
    00001fa7: 	je	.Ltmp3242 # Offset: 8103
    00001fa9: 	movl	current_test(%rip), %edx
    00001faf: 	leaq	DATAat0x381c8(%rip), %rsi
    00001fb6: 	movl	$0x1, %edi
    00001fbb: 	xorl	%eax, %eax
    00001fbd: 	callq	__printf_chk@PLT # Offset: 8125
    00001fc2: 	movl	iterations(%rip), %ecx
.Ltmp3242:
    00001fc8: 	addl	$0x1, %ebp
    00001fcb: 	cmpl	%ecx, %ebp
    00001fcd: 	jl	.Ltmp3243 # Offset: 8141
.Ltmp3240:
    00001fd3: 	movq	%r14, %rsi
    00001fd6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fdd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8157
    00001fe2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fe9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ff0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ff7: 	je	.Ltmp3244 # Offset: 8183
.Ltmp3330:
    00001ffd: 	movq	-0x20(%rax), %rbp
    00002001: 	callq	clock@PLT # Offset: 8193
    00002006: 	pxor	%xmm0, %xmm0
    0000200a: 	movq	%rax, end_time(%rip)
    00002011: 	movq	%rbp, %rdi
    00002014: 	subq	start_time(%rip), %rax
    0000201b: 	cvtsi2sd	%rax, %xmm0
    00002020: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002028: 	callq	_Z13record_resultdPKc # Offset: 8232
    0000202d: 	movq	0xf0(%rsp), %rdi
    00002035: 	cmpq	0x30(%rsp), %rdi
    0000203a: 	je	.Ltmp3245 # Offset: 8250
    0000203c: 	movq	0x100(%rsp), %rax
    00002044: 	leaq	0x1(%rax), %rsi
    00002048: 	callq	_ZdlPvm@PLT # Offset: 8264
.Ltmp3245:
    0000204d: 	leaq	DATAat0x3839a(%rip), %rdx
    00002054: 	movq	%r15, %rsi
    00002057: 	movq	%r14, %rdi
    0000205a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8282
    0000205f: 	callq	clock@PLT # Offset: 8287
    00002064: 	movl	iterations(%rip), %ecx
    0000206a: 	movq	%rax, start_time(%rip)
    00002071: 	testl	%ecx, %ecx
    00002073: 	jle	.Ltmp3246 # Offset: 8307
    00002079: 	movzwl	0x40(%rsp), %r12d
    0000207f: 	addw	0x42(%rsp), %r12w
    00002085: 	xorl	%ebp, %ebp
    00002087: 	addw	0x38(%rsp), %r12w
    0000208d: 	addw	0x3c(%rsp), %r12w
    00002093: 	movd	%r12d, %xmm0
    00002098: 	punpcklwd	%xmm0, %xmm0
    0000209c: 	pshufd	$0x0, %xmm0, %xmm7
    000020a1: 	movaps	%xmm7, (%rsp)
    000020a5: 	nopl	(%rax) # Size: 3
.Ltmp3249:
    000020a8: 	movq	%r13, %rax
    000020ab: 	pxor	%xmm0, %xmm0
    000020af: 	nop # Size: 1
.Ltmp3247:
    000020b0: 	movdqa	(%rsp), %xmm1
    000020b5: 	addq	$0x10, %rax
    000020b9: 	pmullw	-0x10(%rax), %xmm1
    000020be: 	paddw	%xmm1, %xmm0
    000020c2: 	cmpq	%rbx, %rax
    000020c5: 	jne	.Ltmp3247 # Offset: 8389
    000020c7: 	movdqa	%xmm0, %xmm1
    000020cb: 	cvttsd2si	init_value(%rip), %eax
    000020d3: 	psrldq	$0x8, %xmm1
    000020d8: 	paddw	%xmm1, %xmm0
    000020dc: 	movdqa	%xmm0, %xmm1
    000020e0: 	psrldq	$0x4, %xmm1
    000020e5: 	imull	%r12d, %eax
    000020e9: 	paddw	%xmm1, %xmm0
    000020ed: 	movdqa	%xmm0, %xmm1
    000020f1: 	psrldq	$0x2, %xmm1
    000020f6: 	imulw	$0x1f40, %ax, %ax
    000020fb: 	paddw	%xmm1, %xmm0
    000020ff: 	pextrw	$0x0, %xmm0, %edx
    00002104: 	cmpw	%dx, %ax
    00002107: 	je	.Ltmp3248 # Offset: 8455
    00002109: 	movl	current_test(%rip), %edx
    0000210f: 	leaq	DATAat0x381c8(%rip), %rsi
    00002116: 	movl	$0x1, %edi
    0000211b: 	xorl	%eax, %eax
    0000211d: 	callq	__printf_chk@PLT # Offset: 8477
    00002122: 	movl	iterations(%rip), %ecx
.Ltmp3248:
    00002128: 	addl	$0x1, %ebp
    0000212b: 	cmpl	%ecx, %ebp
    0000212d: 	jl	.Ltmp3249 # Offset: 8493
.Ltmp3246:
    00002133: 	movq	%r14, %rsi
    00002136: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000213d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8509
    00002142: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002149: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002150: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002157: 	je	.Ltmp3250 # Offset: 8535
.Ltmp3329:
    0000215d: 	movq	-0x20(%rax), %rbp
    00002161: 	callq	clock@PLT # Offset: 8545
    00002166: 	pxor	%xmm0, %xmm0
    0000216a: 	movq	%rax, end_time(%rip)
    00002171: 	movq	%rbp, %rdi
    00002174: 	subq	start_time(%rip), %rax
    0000217b: 	cvtsi2sd	%rax, %xmm0
    00002180: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002188: 	callq	_Z13record_resultdPKc # Offset: 8584
    0000218d: 	movq	0xf0(%rsp), %rdi
    00002195: 	cmpq	0x30(%rsp), %rdi
    0000219a: 	je	.Ltmp3251 # Offset: 8602
    0000219c: 	movq	0x100(%rsp), %rax
    000021a4: 	leaq	0x1(%rax), %rsi
    000021a8: 	callq	_ZdlPvm@PLT # Offset: 8616
.Ltmp3251:
    000021ad: 	leaq	DATAat0x383b1(%rip), %rdx
    000021b4: 	movq	%r15, %rsi
    000021b7: 	movq	%r14, %rdi
    000021ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8634
    000021bf: 	callq	clock@PLT # Offset: 8639
    000021c4: 	movl	iterations(%rip), %ecx
    000021ca: 	movq	%rax, start_time(%rip)
    000021d1: 	testl	%ecx, %ecx
    000021d3: 	jle	.Ltmp3252 # Offset: 8659
    000021d9: 	movzwl	0x40(%rsp), %r12d
    000021df: 	addw	0x42(%rsp), %r12w
    000021e5: 	xorl	%ebp, %ebp
    000021e7: 	addw	0x38(%rsp), %r12w
    000021ed: 	addw	0x3c(%rsp), %r12w
    000021f3: 	movd	%r12d, %xmm0
    000021f8: 	punpcklwd	%xmm0, %xmm0
    000021fc: 	pshufd	$0x0, %xmm0, %xmm6
    00002201: 	movaps	%xmm6, (%rsp)
    00002205: 	nopl	(%rax) # Size: 3
.Ltmp3255:
    00002208: 	movq	%r13, %rax
    0000220b: 	pxor	%xmm0, %xmm0
    0000220f: 	nop # Size: 1
.Ltmp3253:
    00002210: 	movdqa	(%rsp), %xmm1
    00002215: 	addq	$0x10, %rax
    00002219: 	pmullw	-0x10(%rax), %xmm1
    0000221e: 	paddw	%xmm1, %xmm0
    00002222: 	cmpq	%rbx, %rax
    00002225: 	jne	.Ltmp3253 # Offset: 8741
    00002227: 	movdqa	%xmm0, %xmm1
    0000222b: 	cvttsd2si	init_value(%rip), %eax
    00002233: 	psrldq	$0x8, %xmm1
    00002238: 	paddw	%xmm1, %xmm0
    0000223c: 	movdqa	%xmm0, %xmm1
    00002240: 	psrldq	$0x4, %xmm1
    00002245: 	imull	%r12d, %eax
    00002249: 	paddw	%xmm1, %xmm0
    0000224d: 	movdqa	%xmm0, %xmm1
    00002251: 	psrldq	$0x2, %xmm1
    00002256: 	imulw	$0x1f40, %ax, %ax
    0000225b: 	paddw	%xmm1, %xmm0
    0000225f: 	pextrw	$0x0, %xmm0, %edx
    00002264: 	cmpw	%dx, %ax
    00002267: 	je	.Ltmp3254 # Offset: 8807
    00002269: 	movl	current_test(%rip), %edx
    0000226f: 	leaq	DATAat0x381c8(%rip), %rsi
    00002276: 	movl	$0x1, %edi
    0000227b: 	xorl	%eax, %eax
    0000227d: 	callq	__printf_chk@PLT # Offset: 8829
    00002282: 	movl	iterations(%rip), %ecx
.Ltmp3254:
    00002288: 	addl	$0x1, %ebp
    0000228b: 	cmpl	%ecx, %ebp
    0000228d: 	jl	.Ltmp3255 # Offset: 8845
.Ltmp3252:
    00002293: 	movq	%r14, %rsi
    00002296: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000229d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8861
    000022a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022a9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022b7: 	je	.Ltmp3256 # Offset: 8887
.Ltmp3328:
    000022bd: 	movq	-0x20(%rax), %rbp
    000022c1: 	callq	clock@PLT # Offset: 8897
    000022c6: 	pxor	%xmm0, %xmm0
    000022ca: 	movq	%rax, end_time(%rip)
    000022d1: 	movq	%rbp, %rdi
    000022d4: 	subq	start_time(%rip), %rax
    000022db: 	cvtsi2sd	%rax, %xmm0
    000022e0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000022e8: 	callq	_Z13record_resultdPKc # Offset: 8936
    000022ed: 	movq	0xf0(%rsp), %rdi
    000022f5: 	cmpq	0x30(%rsp), %rdi
    000022fa: 	je	.Ltmp3257 # Offset: 8954
    000022fc: 	movq	0x100(%rsp), %rax
    00002304: 	leaq	0x1(%rax), %rsi
    00002308: 	callq	_ZdlPvm@PLT # Offset: 8968
.Ltmp3257:
    0000230d: 	leaq	DATAat0x383c9(%rip), %rdx
    00002314: 	movq	%r15, %rsi
    00002317: 	movq	%r14, %rdi
    0000231a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8986
    0000231f: 	callq	clock@PLT # Offset: 8991
    00002324: 	movl	iterations(%rip), %ecx
    0000232a: 	movq	%rax, start_time(%rip)
    00002331: 	testl	%ecx, %ecx
    00002333: 	jle	.Ltmp3258 # Offset: 9011
    00002339: 	movzwl	0x42(%rsp), %r12d
    0000233f: 	addw	0x38(%rsp), %r12w
    00002345: 	xorl	%ebp, %ebp
    00002347: 	subw	0x40(%rsp), %r12w
    0000234d: 	subw	0x3c(%rsp), %r12w
    00002353: 	movd	%r12d, %xmm0
    00002358: 	punpcklwd	%xmm0, %xmm0
    0000235c: 	pshufd	$0x0, %xmm0, %xmm7
    00002361: 	movaps	%xmm7, (%rsp)
    00002365: 	nopl	(%rax) # Size: 3
.Ltmp3261:
    00002368: 	movq	%r13, %rax
    0000236b: 	pxor	%xmm0, %xmm0
    0000236f: 	nop # Size: 1
.Ltmp3259:
    00002370: 	movdqa	(%rsp), %xmm1
    00002375: 	addq	$0x10, %rax
    00002379: 	pmullw	-0x10(%rax), %xmm1
    0000237e: 	paddw	%xmm1, %xmm0
    00002382: 	cmpq	%rbx, %rax
    00002385: 	jne	.Ltmp3259 # Offset: 9093
    00002387: 	movdqa	%xmm0, %xmm1
    0000238b: 	cvttsd2si	init_value(%rip), %eax
    00002393: 	psrldq	$0x8, %xmm1
    00002398: 	paddw	%xmm1, %xmm0
    0000239c: 	movdqa	%xmm0, %xmm1
    000023a0: 	psrldq	$0x4, %xmm1
    000023a5: 	imull	%r12d, %eax
    000023a9: 	paddw	%xmm1, %xmm0
    000023ad: 	movdqa	%xmm0, %xmm1
    000023b1: 	psrldq	$0x2, %xmm1
    000023b6: 	imulw	$0x1f40, %ax, %ax
    000023bb: 	paddw	%xmm1, %xmm0
    000023bf: 	pextrw	$0x0, %xmm0, %edx
    000023c4: 	cmpw	%dx, %ax
    000023c7: 	je	.Ltmp3260 # Offset: 9159
    000023c9: 	movl	current_test(%rip), %edx
    000023cf: 	leaq	DATAat0x381c8(%rip), %rsi
    000023d6: 	movl	$0x1, %edi
    000023db: 	xorl	%eax, %eax
    000023dd: 	callq	__printf_chk@PLT # Offset: 9181
    000023e2: 	movl	iterations(%rip), %ecx
.Ltmp3260:
    000023e8: 	addl	$0x1, %ebp
    000023eb: 	cmpl	%ecx, %ebp
    000023ed: 	jl	.Ltmp3261 # Offset: 9197
.Ltmp3258:
    000023f3: 	movq	%r14, %rsi
    000023f6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9213
    00002402: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002409: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002410: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002417: 	je	.Ltmp3262 # Offset: 9239
.Ltmp3327:
    0000241d: 	movq	-0x20(%rax), %rbp
    00002421: 	callq	clock@PLT # Offset: 9249
    00002426: 	pxor	%xmm0, %xmm0
    0000242a: 	movq	%rax, end_time(%rip)
    00002431: 	movq	%rbp, %rdi
    00002434: 	subq	start_time(%rip), %rax
    0000243b: 	cvtsi2sd	%rax, %xmm0
    00002440: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002448: 	callq	_Z13record_resultdPKc # Offset: 9288
    0000244d: 	movq	0xf0(%rsp), %rdi
    00002455: 	cmpq	0x30(%rsp), %rdi
    0000245a: 	je	.Ltmp3263 # Offset: 9306
    0000245c: 	movq	0x100(%rsp), %rax
    00002464: 	leaq	0x1(%rax), %rsi
    00002468: 	callq	_ZdlPvm@PLT # Offset: 9320
.Ltmp3263:
    0000246d: 	leaq	DATAat0x38528(%rip), %rdx
    00002474: 	movq	%r15, %rsi
    00002477: 	movq	%r14, %rdi
    0000247a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9338
    0000247f: 	callq	clock@PLT # Offset: 9343
    00002484: 	movl	iterations(%rip), %ecx
    0000248a: 	movq	%rax, start_time(%rip)
    00002491: 	testl	%ecx, %ecx
    00002493: 	jle	.Ltmp3264 # Offset: 9363
    00002499: 	movd	0x4c(%rsp), %xmm0
    0000249f: 	movl	0x10(%rsp), %r12d
    000024a4: 	addl	0x44(%rsp), %r12d
    000024a9: 	xorl	%ebp, %ebp
    000024ab: 	punpcklwd	%xmm0, %xmm0
    000024af: 	addw	0x48(%rsp), %r12w
    000024b5: 	pshufd	$0x0, %xmm0, %xmm6
    000024ba: 	movd	%r12d, %xmm0
    000024bf: 	punpcklwd	%xmm0, %xmm0
    000024c3: 	movaps	%xmm6, 0x10(%rsp)
    000024c8: 	pshufd	$0x0, %xmm0, %xmm7
    000024cd: 	movaps	%xmm7, (%rsp)
    000024d1: 	nopl	(%rax) # Size: 7
.Ltmp3267:
    000024d8: 	movq	%r13, %rax
    000024db: 	pxor	%xmm1, %xmm1
    000024df: 	nop # Size: 1
.Ltmp3265:
    000024e0: 	movdqa	0x10(%rsp), %xmm0
    000024e6: 	addq	$0x10, %rax
    000024ea: 	paddw	-0x10(%rax), %xmm0
    000024ef: 	pmullw	(%rsp), %xmm0
    000024f4: 	paddw	%xmm0, %xmm1
    000024f8: 	cmpq	%rbx, %rax
    000024fb: 	jne	.Ltmp3265 # Offset: 9467
    000024fd: 	movdqa	%xmm1, %xmm0
    00002501: 	cvttsd2si	init_value(%rip), %eax
    00002509: 	addw	0x20(%rsp), %ax
    0000250e: 	psrldq	$0x8, %xmm0
    00002513: 	imull	%r12d, %eax
    00002517: 	paddw	%xmm0, %xmm1
    0000251b: 	movdqa	%xmm1, %xmm0
    0000251f: 	psrldq	$0x4, %xmm0
    00002524: 	imulw	$0x1f40, %ax, %ax
    00002529: 	paddw	%xmm0, %xmm1
    0000252d: 	movdqa	%xmm1, %xmm0
    00002531: 	psrldq	$0x2, %xmm0
    00002536: 	paddw	%xmm0, %xmm1
    0000253a: 	pextrw	$0x0, %xmm1, %edx
    0000253f: 	cmpw	%dx, %ax
    00002542: 	je	.Ltmp3266 # Offset: 9538
    00002544: 	movl	current_test(%rip), %edx
    0000254a: 	leaq	DATAat0x381c8(%rip), %rsi
    00002551: 	movl	$0x1, %edi
    00002556: 	xorl	%eax, %eax
    00002558: 	callq	__printf_chk@PLT # Offset: 9560
    0000255d: 	movl	iterations(%rip), %ecx
.Ltmp3266:
    00002563: 	addl	$0x1, %ebp
    00002566: 	cmpl	%ecx, %ebp
    00002568: 	jl	.Ltmp3267 # Offset: 9576
.Ltmp3264:
    0000256e: 	movq	%r14, %rsi
    00002571: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002578: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9592
    0000257d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002584: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000258b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002592: 	je	.Ltmp3268 # Offset: 9618
.Ltmp3326:
    00002598: 	movq	-0x20(%rax), %rbp
    0000259c: 	callq	clock@PLT # Offset: 9628
    000025a1: 	pxor	%xmm0, %xmm0
    000025a5: 	movq	%rax, end_time(%rip)
    000025ac: 	movq	%rbp, %rdi
    000025af: 	subq	start_time(%rip), %rax
    000025b6: 	cvtsi2sd	%rax, %xmm0
    000025bb: 	divsd	DATAat0x385e0(%rip), %xmm0
    000025c3: 	callq	_Z13record_resultdPKc # Offset: 9667
    000025c8: 	movq	0xf0(%rsp), %rdi
    000025d0: 	cmpq	0x30(%rsp), %rdi
    000025d5: 	je	.Ltmp3269 # Offset: 9685
    000025d7: 	movq	0x100(%rsp), %rax
    000025df: 	leaq	0x1(%rax), %rsi
    000025e3: 	callq	_ZdlPvm@PLT # Offset: 9699
.Ltmp3269:
    000025e8: 	leaq	DATAat0x383e1(%rip), %rdx
    000025ef: 	movq	%r15, %rsi
    000025f2: 	movq	%r14, %rdi
    000025f5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9717
    000025fa: 	callq	clock@PLT # Offset: 9722
    000025ff: 	movl	iterations(%rip), %ecx
    00002605: 	movq	%rax, start_time(%rip)
    0000260c: 	testl	%ecx, %ecx
    0000260e: 	jle	.Ltmp3270 # Offset: 9742
    00002614: 	movzwl	0x40(%rsp), %esi
    00002619: 	movl	0x38(%rsp), %r10d
    0000261e: 	xorl	%ebp, %ebp
    00002620: 	movzwl	0x42(%rsp), %edx
    00002625: 	movzwl	0x3c(%rsp), %edi
    0000262a: 	movl	%esi, %eax
    0000262c: 	imull	%r10d, %eax
    00002630: 	addl	%edx, %esi
    00002632: 	movl	%esi, %r12d
    00002635: 	addl	%edi, %r12d
    00002638: 	movw	%ax, 0x38(%rsp)
    0000263d: 	movl	%edx, %eax
    0000263f: 	movd	%r12d, %xmm0
    00002644: 	addl	%edi, %eax
    00002646: 	punpcklwd	%xmm0, %xmm0
    0000264a: 	imull	%r10d, %eax
    0000264e: 	pshufd	$0x0, %xmm0, %xmm6
    00002653: 	movd	0x38(%rsp), %xmm0
    00002659: 	movaps	%xmm6, 0x20(%rsp)
    0000265e: 	punpcklwd	%xmm0, %xmm0
    00002662: 	movw	%ax, 0x3c(%rsp)
    00002667: 	pshufd	$0x0, %xmm0, %xmm7
    0000266c: 	movaps	%xmm7, 0x10(%rsp)
    00002671: 	movd	0x3c(%rsp), %xmm0
    00002677: 	punpcklwd	%xmm0, %xmm0
    0000267b: 	pshufd	$0x0, %xmm0, %xmm6
    00002680: 	movaps	%xmm6, (%rsp)
    00002684: 	nopl	(%rax) # Size: 4
.Ltmp3273:
    00002688: 	movq	%r13, %rax
    0000268b: 	pxor	%xmm0, %xmm0
    0000268f: 	nop # Size: 1
.Ltmp3271:
    00002690: 	movdqa	0x20(%rsp), %xmm1
    00002696: 	paddw	0x10(%rsp), %xmm0
    0000269c: 	pmullw	(%rax), %xmm1
    000026a0: 	addq	$0x10, %rax
    000026a4: 	paddw	(%rsp), %xmm1
    000026a9: 	paddw	%xmm1, %xmm0
    000026ad: 	cmpq	%rbx, %rax
    000026b0: 	jne	.Ltmp3271 # Offset: 9904
    000026b2: 	movdqa	%xmm0, %xmm1
    000026b6: 	cvttsd2si	init_value(%rip), %eax
    000026be: 	psrldq	$0x8, %xmm1
    000026c3: 	paddw	%xmm1, %xmm0
    000026c7: 	movdqa	%xmm0, %xmm1
    000026cb: 	psrldq	$0x4, %xmm1
    000026d0: 	imull	%r12d, %eax
    000026d4: 	addw	0x3c(%rsp), %ax
    000026d9: 	addw	0x38(%rsp), %ax
    000026de: 	imulw	$0x1f40, %ax, %ax
    000026e3: 	paddw	%xmm1, %xmm0
    000026e7: 	movdqa	%xmm0, %xmm1
    000026eb: 	psrldq	$0x2, %xmm1
    000026f0: 	paddw	%xmm1, %xmm0
    000026f4: 	pextrw	$0x0, %xmm0, %edx
    000026f9: 	cmpw	%dx, %ax
    000026fc: 	je	.Ltmp3272 # Offset: 9980
    000026fe: 	movl	current_test(%rip), %edx
    00002704: 	leaq	DATAat0x381c8(%rip), %rsi
    0000270b: 	movl	$0x1, %edi
    00002710: 	xorl	%eax, %eax
    00002712: 	callq	__printf_chk@PLT # Offset: 10002
    00002717: 	movl	iterations(%rip), %ecx
.Ltmp3272:
    0000271d: 	addl	$0x1, %ebp
    00002720: 	cmpl	%ecx, %ebp
    00002722: 	jl	.Ltmp3273 # Offset: 10018
.Ltmp3270:
    00002728: 	movq	%r14, %rsi
    0000272b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002732: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10034
    00002737: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000273e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002745: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000274c: 	je	.Ltmp3274 # Offset: 10060
.Ltmp3325:
    00002752: 	movq	-0x20(%rax), %rbp
    00002756: 	callq	clock@PLT # Offset: 10070
    0000275b: 	pxor	%xmm0, %xmm0
    0000275f: 	movq	%rax, end_time(%rip)
    00002766: 	movq	%rbp, %rdi
    00002769: 	subq	start_time(%rip), %rax
    00002770: 	cvtsi2sd	%rax, %xmm0
    00002775: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000277d: 	callq	_Z13record_resultdPKc # Offset: 10109
    00002782: 	movq	0xf0(%rsp), %rdi
    0000278a: 	cmpq	0x30(%rsp), %rdi
    0000278f: 	je	.Ltmp3275 # Offset: 10127
    00002791: 	movq	0x100(%rsp), %rax
    00002799: 	leaq	0x1(%rax), %rsi
    0000279d: 	callq	_ZdlPvm@PLT # Offset: 10141
.Ltmp3275:
    000027a2: 	leaq	0xd0(%rsp), %rdi
    000027aa: 	leaq	DATAat0x3839a(%rip), %rdx
    000027b1: 	movq	%r15, %rsi
    000027b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10164
    000027b9: 	movl	iterations(%rip), %esi
    000027bf: 	movq	0xd0(%rsp), %rdi
    000027c7: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10183
    000027cc: 	leaq	DATAat0x383fa(%rip), %rdx
    000027d3: 	movq	%r15, %rsi
    000027d6: 	movq	%r14, %rdi
    000027d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10201
    000027de: 	movq	%r14, %rdx
    000027e1: 	movl	$0x1f40, %esi
    000027e6: 	movq	%r13, %rdi
    000027e9: 	callq	_Z10test_2termIs20custom_2term_add_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10217
    000027ee: 	movq	0xf0(%rsp), %rdi
    000027f6: 	cmpq	0x30(%rsp), %rdi
    000027fb: 	je	.Ltmp3276 # Offset: 10235
    000027fd: 	movq	0x100(%rsp), %rax
    00002805: 	leaq	0x1(%rax), %rsi
    00002809: 	callq	_ZdlPvm@PLT # Offset: 10249
.Ltmp3276:
    0000280e: 	leaq	DATAat0x38409(%rip), %rdx
    00002815: 	movq	%r15, %rsi
    00002818: 	movq	%r14, %rdi
    0000281b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10267
    00002820: 	movq	%r14, %rdx
    00002823: 	movl	$0x1f40, %esi
    00002828: 	movq	%r13, %rdi
    0000282b: 	callq	_Z10test_2termIs16custom_2term_addIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10283
    00002830: 	movq	0xf0(%rsp), %rdi
    00002838: 	cmpq	0x30(%rsp), %rdi
    0000283d: 	je	.Ltmp3277 # Offset: 10301
    0000283f: 	movq	0x100(%rsp), %rax
    00002847: 	leaq	0x1(%rax), %rsi
    0000284b: 	callq	_ZdlPvm@PLT # Offset: 10315
.Ltmp3277:
    00002850: 	leaq	DATAat0x38414(%rip), %rdx
    00002857: 	movq	%r15, %rsi
    0000285a: 	movq	%r14, %rdi
    0000285d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10333
    00002862: 	movq	%r14, %rdx
    00002865: 	movl	$0x1f40, %esi
    0000286a: 	movq	%r13, %rdi
    0000286d: 	callq	_Z10test_2termIs20custom_2term_sub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10349
    00002872: 	movq	0xf0(%rsp), %rdi
    0000287a: 	cmpq	0x30(%rsp), %rdi
    0000287f: 	je	.Ltmp3278 # Offset: 10367
    00002881: 	movq	0x100(%rsp), %rax
    00002889: 	leaq	0x1(%rax), %rsi
    0000288d: 	callq	_ZdlPvm@PLT # Offset: 10381
.Ltmp3278:
    00002892: 	leaq	DATAat0x38423(%rip), %rdx
    00002899: 	movq	%r15, %rsi
    0000289c: 	movq	%r14, %rdi
    0000289f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10399
    000028a4: 	movq	%r14, %rdx
    000028a7: 	movl	$0x1f40, %esi
    000028ac: 	movq	%r13, %rdi
    000028af: 	callq	_Z10test_2termIs16custom_2term_subIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10415
    000028b4: 	movq	0xf0(%rsp), %rdi
    000028bc: 	cmpq	0x30(%rsp), %rdi
    000028c1: 	je	.Ltmp3279 # Offset: 10433
    000028c3: 	movq	0x100(%rsp), %rax
    000028cb: 	leaq	0x1(%rax), %rsi
    000028cf: 	callq	_ZdlPvm@PLT # Offset: 10447
.Ltmp3279:
    000028d4: 	leaq	DATAat0x3842e(%rip), %rdx
    000028db: 	movq	%r15, %rsi
    000028de: 	movq	%r14, %rdi
    000028e1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10465
    000028e6: 	movq	%r14, %rdx
    000028e9: 	movl	$0x1f40, %esi
    000028ee: 	movq	%r13, %rdi
    000028f1: 	callq	_Z10test_2termIs23custom_2term_addsub_optIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10481
    000028f6: 	movq	0xf0(%rsp), %rdi
    000028fe: 	cmpq	0x30(%rsp), %rdi
    00002903: 	je	.Ltmp3280 # Offset: 10499
    00002905: 	movq	0x100(%rsp), %rax
    0000290d: 	leaq	0x1(%rax), %rsi
    00002911: 	callq	_ZdlPvm@PLT # Offset: 10513
.Ltmp3280:
    00002916: 	leaq	DATAat0x38440(%rip), %rdx
    0000291d: 	movq	%r15, %rsi
    00002920: 	movq	%r14, %rdi
    00002923: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10531
    00002928: 	movq	%r14, %rdx
    0000292b: 	movl	$0x1f40, %esi
    00002930: 	movq	%r13, %rdi
    00002933: 	callq	_Z10test_2termIs19custom_2term_addsubIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10547
    00002938: 	movq	0xf0(%rsp), %rdi
    00002940: 	cmpq	0x30(%rsp), %rdi
    00002945: 	je	.Ltmp3281 # Offset: 10565
    00002947: 	movq	0x100(%rsp), %rax
    0000294f: 	leaq	0x1(%rax), %rsi
    00002953: 	callq	_ZdlPvm@PLT # Offset: 10579
.Ltmp3281:
    00002958: 	leaq	DATAat0x3844e(%rip), %rdx
    0000295f: 	movq	%r15, %rsi
    00002962: 	movq	%r14, %rdi
    00002965: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10597
    0000296a: 	callq	clock@PLT # Offset: 10602
    0000296f: 	movl	iterations(%rip), %edx
    00002975: 	xorl	%ebp, %ebp
    00002977: 	leaq	0x3e70(%r13), %rbx
    0000297e: 	movq	%rax, start_time(%rip)
    00002985: 	leaq	DATAat0x381c8(%rip), %r12
    0000298c: 	testl	%edx, %edx
    0000298e: 	jle	.Ltmp3282 # Offset: 10638
    00002994: 	nopl	(%rax) # Size: 4
.Ltmp3285:
    00002998: 	movzwl	0x112(%rsp), %edi
    000029a0: 	movq	%r13, %rax
    000029a3: 	xorw	0x110(%rsp), %di
    000029ab: 	pxor	%xmm0, %xmm0
    000029af: 	nop # Size: 1
.Ltmp3283:
    000029b0: 	movdqu	0x2(%rax), %xmm1
    000029b5: 	pxor	(%rax), %xmm1
    000029b9: 	addq	$0x10, %rax
    000029bd: 	paddw	%xmm1, %xmm0
    000029c1: 	cmpq	%rbx, %rax
    000029c4: 	jne	.Ltmp3283 # Offset: 10692
    000029c6: 	movdqa	%xmm0, %xmm1
    000029ca: 	movzwl	0x3f8a(%rsp), %esi
    000029d2: 	movq	0x3f80(%rsp), %xmm2
    000029db: 	psrldq	$0x8, %xmm1
    000029e0: 	movzwl	0x3f8c(%rsp), %ecx
    000029e8: 	paddw	%xmm1, %xmm0
    000029ec: 	movdqa	%xmm0, %xmm1
    000029f0: 	psrldq	$0x4, %xmm1
    000029f5: 	paddw	%xmm1, %xmm0
    000029f9: 	movq	0x3f82(%rsp), %xmm1
    00002a02: 	pxor	%xmm2, %xmm1
    00002a06: 	pextrw	$0x0, %xmm1, %r8d
    00002a0c: 	pextrw	$0x1, %xmm1, %eax
    00002a11: 	addl	%r8d, %eax
    00002a14: 	pextrw	$0x2, %xmm1, %r8d
    00002a1a: 	addl	%r8d, %eax
    00002a1d: 	pextrw	$0x3, %xmm1, %r8d
    00002a23: 	movdqa	%xmm0, %xmm1
    00002a27: 	psrldq	$0x2, %xmm1
    00002a2c: 	addl	%r8d, %eax
    00002a2f: 	paddw	%xmm1, %xmm0
    00002a33: 	pextrw	$0x0, %xmm0, %r8d
    00002a39: 	addl	%r8d, %edi
    00002a3c: 	addl	%edi, %eax
    00002a3e: 	movzwl	0x3f88(%rsp), %edi
    00002a46: 	xorl	%esi, %edi
    00002a48: 	xorl	%ecx, %esi
    00002a4a: 	xorw	0x3f8e(%rsp), %cx
    00002a52: 	addl	%edi, %eax
    00002a54: 	addl	%esi, %eax
    00002a56: 	addw	%cx, %ax
    00002a59: 	je	.Ltmp3284 # Offset: 10841
    00002a5b: 	movl	current_test(%rip), %edx
    00002a61: 	movq	%r12, %rsi
    00002a64: 	movl	$0x1, %edi
    00002a69: 	xorl	%eax, %eax
    00002a6b: 	callq	__printf_chk@PLT # Offset: 10859
    00002a70: 	movl	iterations(%rip), %edx
.Ltmp3284:
    00002a76: 	addl	$0x1, %ebp
    00002a79: 	cmpl	%edx, %ebp
    00002a7b: 	jl	.Ltmp3285 # Offset: 10875
.Ltmp3282:
    00002a81: 	movq	%r14, %rsi
    00002a84: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a8b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10891
    00002a90: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a97: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a9e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002aa5: 	je	.Ltmp3286 # Offset: 10917
.Ltmp3324:
    00002aab: 	movq	-0x20(%rax), %rbp
    00002aaf: 	callq	clock@PLT # Offset: 10927
    00002ab4: 	pxor	%xmm0, %xmm0
    00002ab8: 	movq	%rax, end_time(%rip)
    00002abf: 	movq	%rbp, %rdi
    00002ac2: 	subq	start_time(%rip), %rax
    00002ac9: 	cvtsi2sd	%rax, %xmm0
    00002ace: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002ad6: 	callq	_Z13record_resultdPKc # Offset: 10966
    00002adb: 	movq	0xf0(%rsp), %rdi
    00002ae3: 	cmpq	0x30(%rsp), %rdi
    00002ae8: 	je	.Ltmp3287 # Offset: 10984
    00002aea: 	movq	0x100(%rsp), %rax
    00002af2: 	leaq	0x1(%rax), %rsi
    00002af6: 	callq	_ZdlPvm@PLT # Offset: 10998
.Ltmp3287:
    00002afb: 	leaq	DATAat0x3845d(%rip), %rdx
    00002b02: 	movq	%r15, %rsi
    00002b05: 	movq	%r14, %rdi
    00002b08: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11016
    00002b0d: 	movq	%r14, %rdx
    00002b10: 	movl	$0x1f40, %esi
    00002b15: 	movq	%r13, %rdi
    00002b18: 	callq	_Z10test_2termIs16custom_2term_xorIsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 11032
    00002b1d: 	movq	0xf0(%rsp), %rdi
    00002b25: 	cmpq	0x30(%rsp), %rdi
    00002b2a: 	je	.Ltmp3288 # Offset: 11050
    00002b2c: 	movq	0x100(%rsp), %rax
    00002b34: 	leaq	0x1(%rax), %rsi
    00002b38: 	callq	_ZdlPvm@PLT # Offset: 11064
.Ltmp3288:
    00002b3d: 	leaq	DATAat0x38468(%rip), %rdx
    00002b44: 	movq	%r15, %rsi
    00002b47: 	movq	%r14, %rdi
    00002b4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11082
    00002b4f: 	callq	clock@PLT # Offset: 11087
    00002b54: 	movl	iterations(%rip), %edx
    00002b5a: 	xorl	%ebp, %ebp
    00002b5c: 	leaq	0x3e70(%r13), %rbx
    00002b63: 	movq	%rax, start_time(%rip)
    00002b6a: 	leaq	DATAat0x381c8(%rip), %r12
    00002b71: 	testl	%edx, %edx
    00002b73: 	jle	.Ltmp3289 # Offset: 11123
    00002b79: 	nopl	(%rax) # Size: 7
.Ltmp3292:
    00002b80: 	movzwl	0x112(%rsp), %edi
    00002b88: 	movq	%r13, %rax
    00002b8b: 	orw	0x110(%rsp), %di
    00002b93: 	pxor	%xmm0, %xmm0
    00002b97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3290:
    00002ba0: 	movdqu	0x2(%rax), %xmm1
    00002ba5: 	por	(%rax), %xmm1
    00002ba9: 	addq	$0x10, %rax
    00002bad: 	paddw	%xmm1, %xmm0
    00002bb1: 	cmpq	%rbx, %rax
    00002bb4: 	jne	.Ltmp3290 # Offset: 11188
    00002bb6: 	movdqa	%xmm0, %xmm1
    00002bba: 	movzwl	0x3f8a(%rsp), %esi
    00002bc2: 	movq	0x3f80(%rsp), %xmm2
    00002bcb: 	psrldq	$0x8, %xmm1
    00002bd0: 	movzwl	0x3f8c(%rsp), %ecx
    00002bd8: 	paddw	%xmm1, %xmm0
    00002bdc: 	movdqa	%xmm0, %xmm1
    00002be0: 	psrldq	$0x4, %xmm1
    00002be5: 	paddw	%xmm1, %xmm0
    00002be9: 	movq	0x3f82(%rsp), %xmm1
    00002bf2: 	por	%xmm2, %xmm1
    00002bf6: 	pextrw	$0x0, %xmm1, %r8d
    00002bfc: 	pextrw	$0x1, %xmm1, %eax
    00002c01: 	addl	%r8d, %eax
    00002c04: 	pextrw	$0x2, %xmm1, %r8d
    00002c0a: 	addl	%r8d, %eax
    00002c0d: 	pextrw	$0x3, %xmm1, %r8d
    00002c13: 	movdqa	%xmm0, %xmm1
    00002c17: 	psrldq	$0x2, %xmm1
    00002c1c: 	addl	%r8d, %eax
    00002c1f: 	paddw	%xmm1, %xmm0
    00002c23: 	pextrw	$0x0, %xmm0, %r8d
    00002c29: 	addl	%r8d, %edi
    00002c2c: 	addl	%edi, %eax
    00002c2e: 	movzwl	0x3f88(%rsp), %edi
    00002c36: 	orl	%esi, %edi
    00002c38: 	orl	%ecx, %esi
    00002c3a: 	orw	0x3f8e(%rsp), %cx
    00002c42: 	addl	%edi, %eax
    00002c44: 	addl	%esi, %eax
    00002c46: 	addl	%ecx, %eax
    00002c48: 	cvttsd2si	init_value(%rip), %ecx
    00002c50: 	imulw	$0x1f40, %cx, %cx
    00002c55: 	cmpw	%cx, %ax
    00002c58: 	je	.Ltmp3291 # Offset: 11352
    00002c5a: 	movl	current_test(%rip), %edx
    00002c60: 	movq	%r12, %rsi
    00002c63: 	movl	$0x1, %edi
    00002c68: 	xorl	%eax, %eax
    00002c6a: 	callq	__printf_chk@PLT # Offset: 11370
    00002c6f: 	movl	iterations(%rip), %edx
.Ltmp3291:
    00002c75: 	addl	$0x1, %ebp
    00002c78: 	cmpl	%edx, %ebp
    00002c7a: 	jl	.Ltmp3292 # Offset: 11386
.Ltmp3289:
    00002c80: 	movq	%r14, %rsi
    00002c83: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002c8a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11402
    00002c8f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c96: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c9d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ca4: 	je	.Ltmp3293 # Offset: 11428
.Ltmp3323:
    00002caa: 	movq	-0x20(%rax), %rbp
    00002cae: 	callq	clock@PLT # Offset: 11438
    00002cb3: 	pxor	%xmm0, %xmm0
    00002cb7: 	movq	%rax, end_time(%rip)
    00002cbe: 	movq	%rbp, %rdi
    00002cc1: 	subq	start_time(%rip), %rax
    00002cc8: 	cvtsi2sd	%rax, %xmm0
    00002ccd: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002cd5: 	callq	_Z13record_resultdPKc # Offset: 11477
    00002cda: 	movq	0xf0(%rsp), %rdi
    00002ce2: 	cmpq	0x30(%rsp), %rdi
    00002ce7: 	je	.Ltmp3294 # Offset: 11495
    00002ce9: 	movq	0x100(%rsp), %rax
    00002cf1: 	leaq	0x1(%rax), %rsi
    00002cf5: 	callq	_ZdlPvm@PLT # Offset: 11509
.Ltmp3294:
    00002cfa: 	leaq	DATAat0x38476(%rip), %rdx
    00002d01: 	movq	%r15, %rsi
    00002d04: 	movq	%r14, %rdi
    00002d07: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11527
    00002d0c: 	callq	clock@PLT # Offset: 11532
    00002d11: 	movl	iterations(%rip), %edx
    00002d17: 	xorl	%ebp, %ebp
    00002d19: 	leaq	0x3e70(%r13), %rbx
    00002d20: 	movq	%rax, start_time(%rip)
    00002d27: 	leaq	DATAat0x381c8(%rip), %r12
    00002d2e: 	testl	%edx, %edx
    00002d30: 	jle	.Ltmp3295 # Offset: 11568
    00002d36: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3298:
    00002d40: 	movzwl	0x112(%rsp), %edi
    00002d48: 	movq	%r13, %rax
    00002d4b: 	orw	0x110(%rsp), %di
    00002d53: 	pxor	%xmm0, %xmm0
    00002d57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3296:
    00002d60: 	movdqu	0x2(%rax), %xmm1
    00002d65: 	por	(%rax), %xmm1
    00002d69: 	addq	$0x10, %rax
    00002d6d: 	paddw	%xmm1, %xmm0
    00002d71: 	cmpq	%rbx, %rax
    00002d74: 	jne	.Ltmp3296 # Offset: 11636
    00002d76: 	movdqa	%xmm0, %xmm1
    00002d7a: 	movzwl	0x3f8a(%rsp), %esi
    00002d82: 	movq	0x3f80(%rsp), %xmm2
    00002d8b: 	psrldq	$0x8, %xmm1
    00002d90: 	movzwl	0x3f8c(%rsp), %ecx
    00002d98: 	paddw	%xmm1, %xmm0
    00002d9c: 	movdqa	%xmm0, %xmm1
    00002da0: 	psrldq	$0x4, %xmm1
    00002da5: 	paddw	%xmm1, %xmm0
    00002da9: 	movq	0x3f82(%rsp), %xmm1
    00002db2: 	por	%xmm2, %xmm1
    00002db6: 	pextrw	$0x0, %xmm1, %r8d
    00002dbc: 	pextrw	$0x1, %xmm1, %eax
    00002dc1: 	addl	%r8d, %eax
    00002dc4: 	pextrw	$0x2, %xmm1, %r8d
    00002dca: 	addl	%r8d, %eax
    00002dcd: 	pextrw	$0x3, %xmm1, %r8d
    00002dd3: 	movdqa	%xmm0, %xmm1
    00002dd7: 	psrldq	$0x2, %xmm1
    00002ddc: 	addl	%r8d, %eax
    00002ddf: 	paddw	%xmm1, %xmm0
    00002de3: 	pextrw	$0x0, %xmm0, %r8d
    00002de9: 	addl	%r8d, %edi
    00002dec: 	addl	%edi, %eax
    00002dee: 	movzwl	0x3f88(%rsp), %edi
    00002df6: 	orl	%esi, %edi
    00002df8: 	orl	%ecx, %esi
    00002dfa: 	orw	0x3f8e(%rsp), %cx
    00002e02: 	addl	%edi, %eax
    00002e04: 	addl	%esi, %eax
    00002e06: 	addl	%ecx, %eax
    00002e08: 	cvttsd2si	init_value(%rip), %ecx
    00002e10: 	imulw	$0x1f40, %cx, %cx
    00002e15: 	cmpw	%cx, %ax
    00002e18: 	je	.Ltmp3297 # Offset: 11800
    00002e1a: 	movl	current_test(%rip), %edx
    00002e20: 	movq	%r12, %rsi
    00002e23: 	movl	$0x1, %edi
    00002e28: 	xorl	%eax, %eax
    00002e2a: 	callq	__printf_chk@PLT # Offset: 11818
    00002e2f: 	movl	iterations(%rip), %edx
.Ltmp3297:
    00002e35: 	addl	$0x1, %ebp
    00002e38: 	cmpl	%edx, %ebp
    00002e3a: 	jl	.Ltmp3298 # Offset: 11834
.Ltmp3295:
    00002e40: 	movq	%r14, %rsi
    00002e43: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002e4a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11850
    00002e4f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002e56: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002e5d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002e64: 	je	.Ltmp3299 # Offset: 11876
.Ltmp3322:
    00002e6a: 	movq	-0x20(%rax), %rbp
    00002e6e: 	callq	clock@PLT # Offset: 11886
    00002e73: 	pxor	%xmm0, %xmm0
    00002e77: 	movq	%rax, end_time(%rip)
    00002e7e: 	movq	%rbp, %rdi
    00002e81: 	subq	start_time(%rip), %rax
    00002e88: 	cvtsi2sd	%rax, %xmm0
    00002e8d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002e95: 	callq	_Z13record_resultdPKc # Offset: 11925
    00002e9a: 	movq	0xf0(%rsp), %rdi
    00002ea2: 	cmpq	0x30(%rsp), %rdi
    00002ea7: 	je	.Ltmp3300 # Offset: 11943
    00002ea9: 	movq	0x100(%rsp), %rax
    00002eb1: 	leaq	0x1(%rax), %rsi
    00002eb5: 	callq	_ZdlPvm@PLT # Offset: 11957
.Ltmp3300:
    00002eba: 	leaq	DATAat0x38480(%rip), %rdx
    00002ec1: 	movq	%r15, %rsi
    00002ec4: 	movq	%r14, %rdi
    00002ec7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11975
    00002ecc: 	callq	clock@PLT # Offset: 11980
    00002ed1: 	movl	iterations(%rip), %ecx
    00002ed7: 	xorl	%ebp, %ebp
    00002ed9: 	leaq	0x3e70(%r13), %rbx
    00002ee0: 	movq	%rax, start_time(%rip)
    00002ee7: 	leaq	DATAat0x381c8(%rip), %r12
    00002eee: 	testl	%ecx, %ecx
    00002ef0: 	jle	.Ltmp3301 # Offset: 12016
    00002ef6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3304:
    00002f00: 	movzwl	0x112(%rsp), %r8d
    00002f09: 	movq	%r13, %rax
    00002f0c: 	pxor	%xmm0, %xmm0
    00002f10: 	andw	0x110(%rsp), %r8w
    00002f19: 	nopl	(%rax) # Size: 7
.Ltmp3302:
    00002f20: 	movdqu	0x2(%rax), %xmm1
    00002f25: 	pand	(%rax), %xmm1
    00002f29: 	addq	$0x10, %rax
    00002f2d: 	paddw	%xmm1, %xmm0
    00002f31: 	cmpq	%rax, %rbx
    00002f34: 	jne	.Ltmp3302 # Offset: 12084
    00002f36: 	movdqa	%xmm0, %xmm1
    00002f3a: 	cvttsd2si	init_value(%rip), %edx
    00002f42: 	movq	0x3f80(%rsp), %xmm2
    00002f4b: 	psrldq	$0x8, %xmm1
    00002f50: 	movzwl	0x3f8a(%rsp), %edi
    00002f58: 	movzwl	0x3f8c(%rsp), %esi
    00002f60: 	paddw	%xmm1, %xmm0
    00002f64: 	movdqa	%xmm0, %xmm1
    00002f68: 	psrldq	$0x4, %xmm1
    00002f6d: 	imulw	$0x1f40, %dx, %dx
    00002f72: 	paddw	%xmm1, %xmm0
    00002f76: 	movq	0x3f82(%rsp), %xmm1
    00002f7f: 	pand	%xmm2, %xmm1
    00002f83: 	pextrw	$0x0, %xmm1, %r9d
    00002f89: 	pextrw	$0x1, %xmm1, %eax
    00002f8e: 	addl	%r9d, %eax
    00002f91: 	pextrw	$0x2, %xmm1, %r9d
    00002f97: 	addl	%r9d, %eax
    00002f9a: 	pextrw	$0x3, %xmm1, %r9d
    00002fa0: 	movdqa	%xmm0, %xmm1
    00002fa4: 	psrldq	$0x2, %xmm1
    00002fa9: 	addl	%r9d, %eax
    00002fac: 	paddw	%xmm1, %xmm0
    00002fb0: 	pextrw	$0x0, %xmm0, %r9d
    00002fb6: 	addl	%r9d, %r8d
    00002fb9: 	addl	%r8d, %eax
    00002fbc: 	movzwl	0x3f88(%rsp), %r8d
    00002fc5: 	andl	%edi, %r8d
    00002fc8: 	andl	%esi, %edi
    00002fca: 	andw	0x3f8e(%rsp), %si
    00002fd2: 	addl	%r8d, %eax
    00002fd5: 	addl	%edi, %eax
    00002fd7: 	addl	%esi, %eax
    00002fd9: 	cmpw	%ax, %dx
    00002fdc: 	je	.Ltmp3303 # Offset: 12252
    00002fde: 	movl	current_test(%rip), %edx
    00002fe4: 	movq	%r12, %rsi
    00002fe7: 	movl	$0x1, %edi
    00002fec: 	xorl	%eax, %eax
    00002fee: 	callq	__printf_chk@PLT # Offset: 12270
    00002ff3: 	movl	iterations(%rip), %ecx
.Ltmp3303:
    00002ff9: 	addl	$0x1, %ebp
    00002ffc: 	cmpl	%ecx, %ebp
    00002ffe: 	jl	.Ltmp3304 # Offset: 12286
.Ltmp3301:
    00003004: 	movq	%r14, %rsi
    00003007: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000300e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12302
    00003013: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000301a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003021: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003028: 	je	.Ltmp3305 # Offset: 12328
.Ltmp3321:
    0000302e: 	movq	-0x20(%rax), %rbp
    00003032: 	callq	clock@PLT # Offset: 12338
    00003037: 	pxor	%xmm0, %xmm0
    0000303b: 	movq	%rax, end_time(%rip)
    00003042: 	movq	%rbp, %rdi
    00003045: 	subq	start_time(%rip), %rax
    0000304c: 	cvtsi2sd	%rax, %xmm0
    00003051: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003059: 	callq	_Z13record_resultdPKc # Offset: 12377
    0000305e: 	movq	0xf0(%rsp), %rdi
    00003066: 	cmpq	0x30(%rsp), %rdi
    0000306b: 	je	.Ltmp3306 # Offset: 12395
    0000306d: 	movq	0x100(%rsp), %rax
    00003075: 	leaq	0x1(%rax), %rsi
    00003079: 	callq	_ZdlPvm@PLT # Offset: 12409
.Ltmp3306:
    0000307e: 	leaq	DATAat0x3848f(%rip), %rdx
    00003085: 	movq	%r15, %rsi
    00003088: 	movq	%r14, %rdi
    0000308b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12427
    00003090: 	callq	clock@PLT # Offset: 12432
    00003095: 	movl	iterations(%rip), %edx
    0000309b: 	xorl	%ebp, %ebp
    0000309d: 	leaq	0x3e70(%r13), %rbx
    000030a4: 	movq	%rax, start_time(%rip)
    000030ab: 	leaq	DATAat0x381c8(%rip), %r12
    000030b2: 	testl	%edx, %edx
    000030b4: 	jle	.Ltmp3307 # Offset: 12468
    000030ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3310:
    000030c0: 	movzwl	0x112(%rsp), %edi
    000030c8: 	movq	%r13, %rax
    000030cb: 	andw	0x110(%rsp), %di
    000030d3: 	pxor	%xmm0, %xmm0
    000030d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3308:
    000030e0: 	movdqu	0x2(%rax), %xmm1
    000030e5: 	pand	(%rax), %xmm1
    000030e9: 	addq	$0x10, %rax
    000030ed: 	paddw	%xmm1, %xmm0
    000030f1: 	cmpq	%rbx, %rax
    000030f4: 	jne	.Ltmp3308 # Offset: 12532
    000030f6: 	movdqa	%xmm0, %xmm1
    000030fa: 	movzwl	0x3f8a(%rsp), %esi
    00003102: 	movq	0x3f80(%rsp), %xmm2
    0000310b: 	psrldq	$0x8, %xmm1
    00003110: 	movzwl	0x3f8c(%rsp), %ecx
    00003118: 	paddw	%xmm1, %xmm0
    0000311c: 	movdqa	%xmm0, %xmm1
    00003120: 	psrldq	$0x4, %xmm1
    00003125: 	paddw	%xmm1, %xmm0
    00003129: 	movq	0x3f82(%rsp), %xmm1
    00003132: 	pand	%xmm2, %xmm1
    00003136: 	pextrw	$0x0, %xmm1, %r8d
    0000313c: 	pextrw	$0x1, %xmm1, %eax
    00003141: 	addl	%r8d, %eax
    00003144: 	pextrw	$0x2, %xmm1, %r8d
    0000314a: 	addl	%r8d, %eax
    0000314d: 	pextrw	$0x3, %xmm1, %r8d
    00003153: 	movdqa	%xmm0, %xmm1
    00003157: 	psrldq	$0x2, %xmm1
    0000315c: 	addl	%r8d, %eax
    0000315f: 	paddw	%xmm1, %xmm0
    00003163: 	pextrw	$0x0, %xmm0, %r8d
    00003169: 	addl	%r8d, %edi
    0000316c: 	addl	%edi, %eax
    0000316e: 	movzwl	0x3f88(%rsp), %edi
    00003176: 	andl	%esi, %edi
    00003178: 	andl	%ecx, %esi
    0000317a: 	andw	0x3f8e(%rsp), %cx
    00003182: 	addl	%edi, %eax
    00003184: 	addl	%esi, %eax
    00003186: 	addl	%ecx, %eax
    00003188: 	cvttsd2si	init_value(%rip), %ecx
    00003190: 	imulw	$0x1f40, %cx, %cx
    00003195: 	cmpw	%cx, %ax
    00003198: 	je	.Ltmp3309 # Offset: 12696
    0000319a: 	movl	current_test(%rip), %edx
    000031a0: 	movq	%r12, %rsi
    000031a3: 	movl	$0x1, %edi
    000031a8: 	xorl	%eax, %eax
    000031aa: 	callq	__printf_chk@PLT # Offset: 12714
    000031af: 	movl	iterations(%rip), %edx
.Ltmp3309:
    000031b5: 	addl	$0x1, %ebp
    000031b8: 	cmpl	%edx, %ebp
    000031ba: 	jl	.Ltmp3310 # Offset: 12730
.Ltmp3307:
    000031c0: 	movq	%r14, %rsi
    000031c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000031ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12746
    000031cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000031d6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000031dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000031e4: 	je	.Ltmp3311 # Offset: 12772
.Ltmp3320:
    000031ea: 	movq	-0x20(%rax), %rbp
    000031ee: 	callq	clock@PLT # Offset: 12782
    000031f3: 	pxor	%xmm0, %xmm0
    000031f7: 	movq	%rax, end_time(%rip)
    000031fe: 	movq	%rbp, %rdi
    00003201: 	subq	start_time(%rip), %rax
    00003208: 	cvtsi2sd	%rax, %xmm0
    0000320d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003215: 	callq	_Z13record_resultdPKc # Offset: 12821
    0000321a: 	movq	0xf0(%rsp), %rdi
    00003222: 	cmpq	0x30(%rsp), %rdi
    00003227: 	je	.Ltmp3312 # Offset: 12839
    00003229: 	movq	0x100(%rsp), %rax
    00003231: 	leaq	0x1(%rax), %rsi
    00003235: 	callq	_ZdlPvm@PLT # Offset: 12853
.Ltmp3312:
    0000323a: 	leaq	DATAat0x38550(%rip), %rdx
    00003241: 	movq	%r15, %rsi
    00003244: 	movq	%r14, %rdi
    00003247: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12871
    0000324c: 	movl	iterations(%rip), %esi
    00003252: 	movq	0xf0(%rsp), %rdi
    0000325a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 12890
    0000325f: 	movq	0xf0(%rsp), %rdi
    00003267: 	cmpq	0x30(%rsp), %rdi
    0000326c: 	je	.Ltmp3313 # Offset: 12908
    0000326e: 	movq	0x100(%rsp), %rax
    00003276: 	leaq	0x1(%rax), %rsi
    0000327a: 	callq	_ZdlPvm@PLT # Offset: 12922
.Ltmp3313:
    0000327f: 	movq	0xd0(%rsp), %rdi
    00003287: 	leaq	0xe0(%rsp), %rax
    0000328f: 	cmpq	%rax, %rdi
    00003292: 	je	.Ltmp3314 # Offset: 12946
    00003294: 	movq	0xe0(%rsp), %rax
    0000329c: 	leaq	0x1(%rax), %rsi
    000032a0: 	callq	_ZdlPvm@PLT # Offset: 12960
.Ltmp3314:
    000032a5: 	movq	0xb0(%rsp), %rdi
    000032ad: 	leaq	0xc0(%rsp), %rax
    000032b5: 	cmpq	%rax, %rdi
    000032b8: 	je	.Ltmp3315 # Offset: 12984
    000032ba: 	movq	0xc0(%rsp), %rax
    000032c2: 	leaq	0x1(%rax), %rsi
    000032c6: 	callq	_ZdlPvm@PLT # Offset: 12998
.Ltmp3315:
    000032cb: 	movq	0x90(%rsp), %rdi
    000032d3: 	leaq	0xa0(%rsp), %rax
    000032db: 	cmpq	%rax, %rdi
    000032de: 	je	.Ltmp3316 # Offset: 13022
    000032e0: 	movq	0xa0(%rsp), %rax
    000032e8: 	leaq	0x1(%rax), %rsi
    000032ec: 	callq	_ZdlPvm@PLT # Offset: 13036
.Ltmp3316:
    000032f1: 	movq	0x70(%rsp), %rdi
    000032f6: 	leaq	0x80(%rsp), %rax
    000032fe: 	cmpq	%rax, %rdi
    00003301: 	je	.Ltmp3317 # Offset: 13057
    00003303: 	movq	0x80(%rsp), %rax
    0000330b: 	leaq	0x1(%rax), %rsi
    0000330f: 	callq	_ZdlPvm@PLT # Offset: 13071
.Ltmp3317:
    00003314: 	movq	0x3f98(%rsp), %rax
    0000331c: 	subq	%fs:0x28, %rax
    00003325: 	jne	.Ltmp3318 # Offset: 13093
    0000332b: 	addq	$0x3fa8, %rsp
    00003332: 	popq	%rbx
    00003333: 	popq	%rbp
    00003334: 	popq	%r12
    00003336: 	popq	%r13
    00003338: 	popq	%r14
    0000333a: 	popq	%r15
    0000333c: 	retq # Offset: 13116
.Ltmp3114:
    0000333d: 	movq	-0x8(%rdx), %rax
    00003341: 	addq	$0x200, %rax
    00003347: 	jmp	.Ltmp3319 # Offset: 13127
.Ltmp3311:
    0000334c: 	movq	-0x8(%rdx), %rax
    00003350: 	addq	$0x200, %rax
    00003356: 	jmp	.Ltmp3320 # Offset: 13142
.Ltmp3305:
    0000335b: 	movq	-0x8(%rdx), %rax
    0000335f: 	addq	$0x200, %rax
    00003365: 	jmp	.Ltmp3321 # Offset: 13157
.Ltmp3299:
    0000336a: 	movq	-0x8(%rdx), %rax
    0000336e: 	addq	$0x200, %rax
    00003374: 	jmp	.Ltmp3322 # Offset: 13172
.Ltmp3293:
    00003379: 	movq	-0x8(%rdx), %rax
    0000337d: 	addq	$0x200, %rax
    00003383: 	jmp	.Ltmp3323 # Offset: 13187
.Ltmp3286:
    00003388: 	movq	-0x8(%rdx), %rax
    0000338c: 	addq	$0x200, %rax
    00003392: 	jmp	.Ltmp3324 # Offset: 13202
.Ltmp3274:
    00003397: 	movq	-0x8(%rdx), %rax
    0000339b: 	addq	$0x200, %rax
    000033a1: 	jmp	.Ltmp3325 # Offset: 13217
.Ltmp3268:
    000033a6: 	movq	-0x8(%rdx), %rax
    000033aa: 	addq	$0x200, %rax
    000033b0: 	jmp	.Ltmp3326 # Offset: 13232
.Ltmp3262:
    000033b5: 	movq	-0x8(%rdx), %rax
    000033b9: 	addq	$0x200, %rax
    000033bf: 	jmp	.Ltmp3327 # Offset: 13247
.Ltmp3256:
    000033c4: 	movq	-0x8(%rdx), %rax
    000033c8: 	addq	$0x200, %rax
    000033ce: 	jmp	.Ltmp3328 # Offset: 13262
.Ltmp3250:
    000033d3: 	movq	-0x8(%rdx), %rax
    000033d7: 	addq	$0x200, %rax
    000033dd: 	jmp	.Ltmp3329 # Offset: 13277
.Ltmp3244:
    000033e2: 	movq	-0x8(%rdx), %rax
    000033e6: 	addq	$0x200, %rax
    000033ec: 	jmp	.Ltmp3330 # Offset: 13292
.Ltmp3238:
    000033f1: 	movq	-0x8(%rdx), %rax
    000033f5: 	addq	$0x200, %rax
    000033fb: 	jmp	.Ltmp3331 # Offset: 13307
.Ltmp3232:
    00003400: 	movq	-0x8(%rdx), %rax
    00003404: 	addq	$0x200, %rax
    0000340a: 	jmp	.Ltmp3332 # Offset: 13322
.Ltmp3226:
    0000340f: 	movq	-0x8(%rdx), %rax
    00003413: 	addq	$0x200, %rax
    00003419: 	jmp	.Ltmp3333 # Offset: 13337
.Ltmp3224:
    0000341e: 	movq	-0x8(%rdx), %rax
    00003422: 	addq	$0x200, %rax
    00003428: 	jmp	.Ltmp3334 # Offset: 13352
.Ltmp3222:
    0000342d: 	movq	-0x8(%rdx), %rax
    00003431: 	addq	$0x200, %rax
    00003437: 	jmp	.Ltmp3335 # Offset: 13367
.Ltmp3220:
    0000343c: 	movq	-0x8(%rdx), %rax
    00003440: 	addq	$0x200, %rax
    00003446: 	jmp	.Ltmp3336 # Offset: 13382
.Ltmp3218:
    0000344b: 	movq	-0x8(%rdx), %rax
    0000344f: 	addq	$0x200, %rax
    00003455: 	jmp	.Ltmp3337 # Offset: 13397
.Ltmp3216:
    0000345a: 	movq	-0x8(%rdx), %rax
    0000345e: 	addq	$0x200, %rax
    00003464: 	jmp	.Ltmp3338 # Offset: 13412
.Ltmp3214:
    00003469: 	movq	-0x8(%rdx), %rax
    0000346d: 	addq	$0x200, %rax
    00003473: 	jmp	.Ltmp3339 # Offset: 13427
.Ltmp3212:
    00003478: 	movq	-0x8(%rdx), %rax
    0000347c: 	addq	$0x200, %rax
    00003482: 	jmp	.Ltmp3340 # Offset: 13442
.Ltmp3210:
    00003487: 	movq	-0x8(%rdx), %rax
    0000348b: 	addq	$0x200, %rax
    00003491: 	jmp	.Ltmp3341 # Offset: 13457
.Ltmp3208:
    00003496: 	movq	-0x8(%rdx), %rax
    0000349a: 	addq	$0x200, %rax
    000034a0: 	jmp	.Ltmp3342 # Offset: 13472
.Ltmp3206:
    000034a5: 	movq	-0x8(%rdx), %rax
    000034a9: 	addq	$0x200, %rax
    000034af: 	jmp	.Ltmp3343 # Offset: 13487
.Ltmp3204:
    000034b4: 	movq	-0x8(%rdx), %rax
    000034b8: 	addq	$0x200, %rax
    000034be: 	jmp	.Ltmp3344 # Offset: 13502
.Ltmp3202:
    000034c3: 	movq	-0x8(%rdx), %rax
    000034c7: 	addq	$0x200, %rax
    000034cd: 	jmp	.Ltmp3345 # Offset: 13517
.Ltmp3200:
    000034d2: 	movq	-0x8(%rdx), %rax
    000034d6: 	addq	$0x200, %rax
    000034dc: 	jmp	.Ltmp3346 # Offset: 13532
.Ltmp3198:
    000034e1: 	movq	-0x8(%rdx), %rax
    000034e5: 	addq	$0x200, %rax
    000034eb: 	jmp	.Ltmp3347 # Offset: 13547
.Ltmp3196:
    000034f0: 	movq	-0x8(%rdx), %rax
    000034f4: 	addq	$0x200, %rax
    000034fa: 	jmp	.Ltmp3348 # Offset: 13562
.Ltmp3194:
    000034ff: 	movq	-0x8(%rdx), %rax
    00003503: 	addq	$0x200, %rax
    00003509: 	jmp	.Ltmp3349 # Offset: 13577
.Ltmp3192:
    0000350e: 	movq	-0x8(%rdx), %rax
    00003512: 	addq	$0x200, %rax
    00003518: 	jmp	.Ltmp3350 # Offset: 13592
.Ltmp3186:
    0000351d: 	movq	-0x8(%rdx), %rax
    00003521: 	addq	$0x200, %rax
    00003527: 	jmp	.Ltmp3351 # Offset: 13607
.Ltmp3180:
    0000352c: 	movq	-0x8(%rdx), %rax
    00003530: 	addq	$0x200, %rax
    00003536: 	jmp	.Ltmp3352 # Offset: 13622
.Ltmp3174:
    0000353b: 	movq	-0x8(%rdx), %rax
    0000353f: 	addq	$0x200, %rax
    00003545: 	jmp	.Ltmp3353 # Offset: 13637
.Ltmp3168:
    0000354a: 	movq	-0x8(%rdx), %rax
    0000354e: 	addq	$0x200, %rax
    00003554: 	jmp	.Ltmp3354 # Offset: 13652
.Ltmp3162:
    00003559: 	movq	-0x8(%rdx), %rax
    0000355d: 	addq	$0x200, %rax
    00003563: 	jmp	.Ltmp3355 # Offset: 13667
.Ltmp3156:
    00003568: 	movq	-0x8(%rdx), %rax
    0000356c: 	addq	$0x200, %rax
    00003572: 	jmp	.Ltmp3356 # Offset: 13682
.Ltmp3150:
    00003577: 	movq	-0x8(%rdx), %rax
    0000357b: 	addq	$0x200, %rax
    00003581: 	jmp	.Ltmp3357 # Offset: 13697
.Ltmp3144:
    00003586: 	movq	-0x8(%rdx), %rax
    0000358a: 	addq	$0x200, %rax
    00003590: 	jmp	.Ltmp3358 # Offset: 13712
.Ltmp3138:
    00003595: 	movq	-0x8(%rdx), %rax
    00003599: 	addq	$0x200, %rax
    0000359f: 	jmp	.Ltmp3359 # Offset: 13727
.Ltmp3132:
    000035a4: 	movq	-0x8(%rdx), %rax
    000035a8: 	addq	$0x200, %rax
    000035ae: 	jmp	.Ltmp3360 # Offset: 13742
.Ltmp3126:
    000035b3: 	movq	-0x8(%rdx), %rax
    000035b7: 	addq	$0x200, %rax
    000035bd: 	jmp	.Ltmp3361 # Offset: 13757
.Ltmp3120:
    000035c2: 	movq	-0x8(%rdx), %rax
    000035c6: 	addq	$0x200, %rax
    000035cc: 	jmp	.Ltmp3362 # Offset: 13772
.Ltmp3318:
    000035d1: 	callq	__stack_chk_fail@PLT # Offset: 13777
    000035d6: 	endbr64
.Ltmp3364:
    000035da: 	movq	%rax, %rbx
    000035dd: 	jmp	.Ltmp3363 # Offset: 13789
    000035df: 	endbr64
    000035e3: 	jmp	.Ltmp3364 # Offset: 13795
    000035e5: 	endbr64
    000035e9: 	jmp	.Ltmp3364 # Offset: 13801
    000035eb: 	endbr64
    000035ef: 	jmp	.Ltmp3364 # Offset: 13807
.Ltmp3363:
    000035f1: 	movq	0xf0(%rsp), %rdi
    000035f9: 	cmpq	0x30(%rsp), %rdi
    000035fe: 	je	.Ltmp3365 # Offset: 13822
.Ltmp3372:
    00003600: 	movq	0x100(%rsp), %rax
    00003608: 	leaq	0x1(%rax), %rsi
    0000360c: 	callq	_ZdlPvm@PLT # Offset: 13836
.Ltmp3365:
    00003611: 	movq	0x70(%rsp), %rdi
    00003616: 	leaq	0x80(%rsp), %rax
    0000361e: 	cmpq	%rax, %rdi
    00003621: 	je	.Ltmp3366 # Offset: 13857
    00003623: 	movq	0x80(%rsp), %rax
    0000362b: 	leaq	0x1(%rax), %rsi
    0000362f: 	callq	_ZdlPvm@PLT # Offset: 13871
.Ltmp3366:
    00003634: 	movq	%rbx, %rdi
    00003637: 	callq	_Unwind_Resume@PLT # Offset: 13879
    0000363c: 	endbr64
    00003640: 	jmp	.Ltmp3364 # Offset: 13888
    00003642: 	endbr64
    00003646: 	jmp	.Ltmp3364 # Offset: 13894
    00003648: 	endbr64
    0000364c: 	jmp	.Ltmp3364 # Offset: 13900
    0000364e: 	endbr64
    00003652: 	jmp	.Ltmp3364 # Offset: 13906
    00003654: 	endbr64
    00003658: 	jmp	.Ltmp3364 # Offset: 13912
    0000365a: 	endbr64
    0000365e: 	jmp	.Ltmp3364 # Offset: 13918
    00003663: 	endbr64
    00003667: 	jmp	.Ltmp3364 # Offset: 13927
    0000366c: 	endbr64
    00003670: 	jmp	.Ltmp3364 # Offset: 13936
    00003675: 	endbr64
.Ltmp3368:
    00003679: 	movq	%rax, %rbx
    0000367c: 	jmp	.Ltmp3367 # Offset: 13948
    0000367e: 	endbr64
    00003682: 	jmp	.Ltmp3368 # Offset: 13954
    00003684: 	endbr64
    00003688: 	jmp	.Ltmp3368 # Offset: 13960
    0000368a: 	endbr64
    0000368e: 	movq	%rax, %rbx
    00003691: 	jmp	.Ltmp3369 # Offset: 13969
.Ltmp3367:
    00003693: 	movq	0xf0(%rsp), %rdi
    0000369b: 	cmpq	0x30(%rsp), %rdi
    000036a0: 	je	.Ltmp3369 # Offset: 13984
    000036a2: 	movq	0x100(%rsp), %rax
    000036aa: 	leaq	0x1(%rax), %rsi
    000036ae: 	callq	_ZdlPvm@PLT # Offset: 13998
.Ltmp3369:
    000036b3: 	movq	0x90(%rsp), %rdi
    000036bb: 	leaq	0xa0(%rsp), %rax
    000036c3: 	cmpq	%rax, %rdi
    000036c6: 	je	.Ltmp3365 # Offset: 14022
    000036cc: 	movq	0xa0(%rsp), %rax
    000036d4: 	leaq	0x1(%rax), %rsi
    000036d8: 	callq	_ZdlPvm@PLT # Offset: 14040
    000036dd: 	jmp	.Ltmp3365 # Offset: 14045
    000036e2: 	endbr64
    000036e6: 	jmp	.Ltmp3368 # Offset: 14054
    000036e8: 	endbr64
    000036ec: 	jmp	.Ltmp3368 # Offset: 14060
    000036ee: 	endbr64
    000036f2: 	jmp	.Ltmp3368 # Offset: 14066
    000036f4: 	endbr64
    000036f8: 	jmp	.Ltmp3368 # Offset: 14072
    000036fd: 	endbr64
    00003701: 	jmp	.Ltmp3368 # Offset: 14081
    00003706: 	endbr64
    0000370a: 	jmp	.Ltmp3368 # Offset: 14090
    0000370f: 	endbr64
    00003713: 	jmp	.Ltmp3368 # Offset: 14099
    00003718: 	endbr64
    0000371c: 	jmp	.Ltmp3368 # Offset: 14108
    00003721: 	endbr64
    00003725: 	jmp	.Ltmp3364 # Offset: 14117
    0000372a: 	endbr64
.Ltmp3375:
    0000372e: 	movq	%rax, %rbx
    00003731: 	jmp	.Ltmp3370 # Offset: 14129
    00003733: 	endbr64
    00003737: 	movq	%rax, %rbx
    0000373a: 	jmp	.Ltmp3371 # Offset: 14138
    0000373c: 	endbr64
    00003740: 	movq	%rax, %rbx
    00003743: 	jmp	.Ltmp3365 # Offset: 14147
.Ltmp3371:
    00003748: 	movq	0xf0(%rsp), %rdi
    00003750: 	leaq	0x100(%rsp), %rax
    00003758: 	cmpq	%rax, %rdi
    0000375b: 	jne	.Ltmp3372 # Offset: 14171
    00003761: 	jmp	.Ltmp3365 # Offset: 14177
.Ltmp3370:
    00003766: 	movq	0xf0(%rsp), %rdi
    0000376e: 	cmpq	0x30(%rsp), %rdi
    00003773: 	je	.Ltmp3373 # Offset: 14195
    00003775: 	movq	0x100(%rsp), %rax
    0000377d: 	leaq	0x1(%rax), %rsi
    00003781: 	callq	_ZdlPvm@PLT # Offset: 14209
.Ltmp3373:
    00003786: 	movq	0xd0(%rsp), %rdi
    0000378e: 	leaq	0xe0(%rsp), %rax
    00003796: 	cmpq	%rax, %rdi
    00003799: 	je	.Ltmp3374 # Offset: 14233
    0000379b: 	movq	0xe0(%rsp), %rax
    000037a3: 	leaq	0x1(%rax), %rsi
    000037a7: 	callq	_ZdlPvm@PLT # Offset: 14247
.Ltmp3374:
    000037ac: 	movq	0xb0(%rsp), %rdi
    000037b4: 	leaq	0xc0(%rsp), %rax
    000037bc: 	cmpq	%rax, %rdi
    000037bf: 	je	.Ltmp3369 # Offset: 14271
    000037c5: 	movq	0xc0(%rsp), %rax
    000037cd: 	leaq	0x1(%rax), %rsi
    000037d1: 	callq	_ZdlPvm@PLT # Offset: 14289
    000037d6: 	jmp	.Ltmp3369 # Offset: 14294
    000037db: 	endbr64
    000037df: 	jmp	.Ltmp3375 # Offset: 14303
    000037e4: 	endbr64
    000037e8: 	jmp	.Ltmp3375 # Offset: 14312
    000037ed: 	endbr64
    000037f1: 	jmp	.Ltmp3375 # Offset: 14321
    000037f6: 	endbr64
    000037fa: 	jmp	.Ltmp3375 # Offset: 14330
    000037ff: 	endbr64
    00003803: 	jmp	.Ltmp3368 # Offset: 14339
    00003808: 	endbr64
    0000380c: 	jmp	.Ltmp3368 # Offset: 14348
    00003811: 	endbr64
    00003815: 	jmp	.Ltmp3368 # Offset: 14357
    0000381a: 	endbr64
    0000381e: 	jmp	.Ltmp3368 # Offset: 14366
    00003823: 	endbr64
    00003827: 	jmp	.Ltmp3368 # Offset: 14375
    0000382c: 	endbr64
    00003830: 	jmp	.Ltmp3368 # Offset: 14384
    00003835: 	endbr64
.Ltmp3377:
    00003839: 	movq	%rax, %rbx
    0000383c: 	jmp	.Ltmp3376 # Offset: 14396
    00003841: 	endbr64
    00003845: 	movq	%rax, %rbx
    00003848: 	jmp	.Ltmp3374 # Offset: 14408
    0000384d: 	endbr64
    00003851: 	jmp	.Ltmp3377 # Offset: 14417
    00003853: 	endbr64
    00003857: 	jmp	.Ltmp3377 # Offset: 14423
    00003859: 	endbr64
    0000385d: 	jmp	.Ltmp3377 # Offset: 14429
    0000385f: 	endbr64
    00003863: 	jmp	.Ltmp3375 # Offset: 14435
    00003868: 	endbr64
    0000386c: 	jmp	.Ltmp3375 # Offset: 14444
    00003871: 	endbr64
    00003875: 	jmp	.Ltmp3375 # Offset: 14453
    0000387a: 	endbr64
    0000387e: 	jmp	.Ltmp3377 # Offset: 14462
    00003880: 	endbr64
    00003884: 	jmp	.Ltmp3375 # Offset: 14468
    00003889: 	endbr64
    0000388d: 	movq	%rax, %rbx
    00003890: 	jmp	.Ltmp3373 # Offset: 14480
    00003895: 	endbr64
    00003899: 	jmp	.Ltmp3375 # Offset: 14489
    0000389e: 	endbr64
    000038a2: 	jmp	.Ltmp3375 # Offset: 14498
    000038a7: 	endbr64
    000038ab: 	jmp	.Ltmp3375 # Offset: 14507
    000038b0: 	endbr64
    000038b4: 	jmp	.Ltmp3375 # Offset: 14516
    000038b9: 	endbr64
    000038bd: 	jmp	.Ltmp3377 # Offset: 14525
    000038c2: 	endbr64
    000038c6: 	jmp	.Ltmp3377 # Offset: 14534
    000038cb: 	endbr64
    000038cf: 	jmp	.Ltmp3377 # Offset: 14543
.Ltmp3376:
    000038d4: 	movq	0xf0(%rsp), %rdi
    000038dc: 	cmpq	0x30(%rsp), %rdi
    000038e1: 	je	.Ltmp3374 # Offset: 14561
    000038e7: 	movq	0x100(%rsp), %rax
    000038ef: 	leaq	0x1(%rax), %rsi
    000038f3: 	callq	_ZdlPvm@PLT # Offset: 14579
    000038f8: 	jmp	.Ltmp3374 # Offset: 14584
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIsEvd"

Binary Function "_Z22test_constantSRepeatedId15custom_sub_zeroIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 113
  State       : disassembled
  Address     : 0x2d870
  Size        : 0x380
  MaxSize     : 0x380
  Offset      : 0x2d870
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedId15custom_sub_zeroIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0112:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3378 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	movq	DATAat0x38630(%rip), %xmm3
    0000004f: 	xorl	%r12d, %r12d
    00000052: 	pxor	%xmm5, %xmm5
    00000056: 	movsd	DATAat0x38600(%rip), %xmm4
    0000005e: 	leaq	0x10(%r13,%rax,8), %rbx
    00000063: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3383:
    00000068: 	cmpl	$0x1, %r14d
    0000006c: 	jle	.Ltmp3379 # Offset: 108
    00000072: 	movsd	(%r13), %xmm2
    00000078: 	leaq	0x8(%r13), %rax
    0000007c: 	movapd	%xmm5, %xmm0
.Ltmp3380:
    00000080: 	movapd	%xmm2, %xmm6
    00000084: 	movsd	(%rax), %xmm2
    00000088: 	addq	$0x8, %rax
    0000008c: 	movapd	%xmm2, %xmm1
    00000090: 	mulsd	%xmm2, %xmm1
    00000094: 	addsd	%xmm6, %xmm1
    00000098: 	addsd	%xmm1, %xmm0
    0000009c: 	subsd	%xmm1, %xmm0
    000000a0: 	addsd	%xmm1, %xmm0
    000000a4: 	subsd	%xmm1, %xmm0
    000000a8: 	addsd	%xmm1, %xmm0
    000000ac: 	subsd	%xmm1, %xmm0
    000000b0: 	addsd	%xmm1, %xmm0
    000000b4: 	subsd	%xmm1, %xmm0
    000000b8: 	addsd	%xmm1, %xmm0
    000000bc: 	subsd	%xmm1, %xmm0
    000000c0: 	addsd	%xmm1, %xmm0
    000000c4: 	subsd	%xmm1, %xmm0
    000000c8: 	addsd	%xmm1, %xmm0
    000000cc: 	subsd	%xmm1, %xmm0
    000000d0: 	addsd	%xmm1, %xmm0
    000000d4: 	subsd	%xmm1, %xmm0
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	subsd	%xmm1, %xmm0
    000000e0: 	addsd	%xmm1, %xmm0
    000000e4: 	subsd	%xmm1, %xmm0
    000000e8: 	addsd	%xmm1, %xmm0
    000000ec: 	subsd	%xmm1, %xmm0
    000000f0: 	addsd	%xmm1, %xmm0
    000000f4: 	subsd	%xmm1, %xmm0
    000000f8: 	addsd	%xmm1, %xmm0
    000000fc: 	subsd	%xmm1, %xmm0
    00000100: 	addsd	%xmm1, %xmm0
    00000104: 	subsd	%xmm1, %xmm0
    00000108: 	addsd	%xmm1, %xmm0
    0000010c: 	subsd	%xmm1, %xmm0
    00000110: 	addsd	%xmm1, %xmm0
    00000114: 	subsd	%xmm1, %xmm0
    00000118: 	addsd	%xmm1, %xmm0
    0000011c: 	subsd	%xmm1, %xmm0
    00000120: 	addsd	%xmm1, %xmm0
    00000124: 	subsd	%xmm1, %xmm0
    00000128: 	addsd	%xmm1, %xmm0
    0000012c: 	subsd	%xmm1, %xmm0
    00000130: 	addsd	%xmm1, %xmm0
    00000134: 	subsd	%xmm1, %xmm0
    00000138: 	addsd	%xmm1, %xmm0
    0000013c: 	subsd	%xmm1, %xmm0
    00000140: 	addsd	%xmm1, %xmm0
    00000144: 	subsd	%xmm1, %xmm0
    00000148: 	addsd	%xmm1, %xmm0
    0000014c: 	subsd	%xmm1, %xmm0
    00000150: 	addsd	%xmm1, %xmm0
    00000154: 	subsd	%xmm1, %xmm0
    00000158: 	addsd	%xmm1, %xmm0
    0000015c: 	subsd	%xmm1, %xmm0
    00000160: 	addsd	%xmm1, %xmm0
    00000164: 	subsd	%xmm1, %xmm0
    00000168: 	addsd	%xmm1, %xmm0
    0000016c: 	subsd	%xmm1, %xmm0
    00000170: 	addsd	%xmm1, %xmm0
    00000174: 	subsd	%xmm1, %xmm0
    00000178: 	addsd	%xmm1, %xmm0
    0000017c: 	subsd	%xmm1, %xmm0
    00000180: 	addsd	%xmm1, %xmm0
    00000184: 	subsd	%xmm1, %xmm0
    00000188: 	addsd	%xmm1, %xmm0
    0000018c: 	subsd	%xmm1, %xmm0
    00000190: 	addsd	%xmm1, %xmm0
    00000194: 	subsd	%xmm1, %xmm0
    00000198: 	cmpq	%rax, %rbx
    0000019b: 	jne	.Ltmp3380 # Offset: 411
    000001a1: 	movapd	%xmm0, %xmm1
    000001a5: 	andpd	%xmm3, %xmm1
    000001a9: 	comisd	DATAat0x385f8(%rip), %xmm1
    000001b1: 	jbe	.Ltmp3381 # Offset: 433
    000001b3: 	divsd	%xmm0, %xmm0
    000001b7: 	movapd	%xmm0, %xmm1
    000001bb: 	andpd	%xmm3, %xmm1
.Ltmp3381:
    000001bf: 	comisd	%xmm1, %xmm4
    000001c3: 	jbe	.Ltmp3382 # Offset: 451
.Ltmp3379:
    000001c9: 	addl	$0x1, %r12d
    000001cd: 	cmpl	%edx, %r12d
    000001d0: 	jl	.Ltmp3383 # Offset: 464
.Ltmp3378:
    000001d6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001e4: 	subq	$0x20, %rax
    000001e8: 	cmpq	%rax, %rbx
    000001eb: 	je	.Ltmp3384 # Offset: 491
    000001f1: 	leaq	0x10(%rbx), %rdi
    000001f5: 	movq	0x8(%rbp), %r12
    000001f9: 	movq	%rdi, (%rbx)
    000001fc: 	movq	(%rbp), %r13
    00000200: 	movq	%r13, %rax
    00000203: 	addq	%r12, %rax
    00000206: 	je	.Ltmp3385 # Offset: 518
    00000208: 	testq	%r13, %r13
    0000020b: 	je	.Ltmp3386 # Offset: 523
.Ltmp3385:
    00000211: 	movq	%r12, (%rsp)
    00000215: 	cmpq	$0xf, %r12
    00000219: 	ja	.Ltmp3387 # Offset: 537
    0000021f: 	cmpq	$0x1, %r12
    00000223: 	jne	.Ltmp3388 # Offset: 547
    00000229: 	movzbl	(%r13), %eax
    0000022e: 	movb	%al, 0x10(%rbx)
.Ltmp3391:
    00000231: 	movq	%r12, 0x8(%rbx)
    00000235: 	movb	$0x0, (%rdi,%r12)
    0000023a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000241: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000248: 	addq	$0x20, %rax
    0000024c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000253: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000025a: 	je	.Ltmp3389 # Offset: 602
.Ltmp3392:
    00000260: 	movq	-0x20(%rax), %rbp
    00000264: 	callq	clock@PLT # Offset: 612
    00000269: 	movq	%rax, end_time(%rip)
    00000270: 	movq	0x8(%rsp), %rdx
    00000275: 	subq	%fs:0x28, %rdx
    0000027e: 	jne	.Ltmp3390 # Offset: 638
    00000284: 	subq	start_time(%rip), %rax
    0000028b: 	pxor	%xmm0, %xmm0
    0000028f: 	movq	%rbp, %rdi
    00000292: 	cvtsi2sd	%rax, %xmm0
    00000297: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000029f: 	addq	$0x10, %rsp
    000002a3: 	popq	%rbx
    000002a4: 	popq	%rbp
    000002a5: 	popq	%r12
    000002a7: 	popq	%r13
    000002a9: 	popq	%r14
    000002ab: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 683
.Ltmp3382:
    000002b0: 	movl	current_test(%rip), %edx
    000002b6: 	xorl	%eax, %eax
    000002b8: 	movl	$0x1, %edi
    000002bd: 	addl	$0x1, %r12d
    000002c1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002c8: 	callq	__printf_chk@PLT # Offset: 712
    000002cd: 	movl	iterations(%rip), %edx
    000002d3: 	movq	DATAat0x38600(%rip), %rax
    000002da: 	pxor	%xmm5, %xmm5
    000002de: 	movq	DATAat0x38630(%rip), %xmm3
    000002e6: 	cmpl	%edx, %r12d
    000002e9: 	movq	%rax, %xmm4
    000002ee: 	jl	.Ltmp3383 # Offset: 750
    000002f4: 	jmp	.Ltmp3378 # Offset: 756
.Ltmp3387:
    000002f9: 	movq	%rbx, %rdi
    000002fc: 	movq	%rsp, %rsi
    000002ff: 	xorl	%edx, %edx
    00000301: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 769
    00000306: 	movq	%rax, (%rbx)
    00000309: 	movq	%rax, %rdi
    0000030c: 	movq	(%rsp), %rax
    00000310: 	movq	%rax, 0x10(%rbx)
.Ltmp3393:
    00000314: 	movq	%r12, %rdx
    00000317: 	movq	%r13, %rsi
    0000031a: 	callq	memcpy@PLT # Offset: 794
    0000031f: 	movq	(%rsp), %r12
    00000323: 	movq	(%rbx), %rdi
    00000326: 	jmp	.Ltmp3391 # Offset: 806
.Ltmp3384:
    0000032b: 	movq	%rbp, %rsi
    0000032e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000335: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 821
    0000033a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000341: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000348: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000034f: 	jne	.Ltmp3392 # Offset: 847
.Ltmp3389:
    00000355: 	movq	-0x8(%rdx), %rax
    00000359: 	addq	$0x200, %rax
    0000035f: 	jmp	.Ltmp3392 # Offset: 863
.Ltmp3388:
    00000364: 	testq	%r12, %r12
    00000367: 	je	.Ltmp3391 # Offset: 871
    0000036d: 	jmp	.Ltmp3393 # Offset: 877
.Ltmp3390:
    0000036f: 	callq	__stack_chk_fail@PLT # Offset: 879
.Ltmp3386:
    00000374: 	leaq	DATAat0x38110(%rip), %rdi
    0000037b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 891
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedId15custom_sub_zeroIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedIf15custom_sub_zeroIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 114
  State       : disassembled
  Address     : 0x2dbf0
  Size        : 0x384
  MaxSize     : 0x390
  Offset      : 0x2dbf0
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedIf15custom_sub_zeroIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0113:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3394 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	xorl	%r12d, %r12d
    0000004a: 	pxor	%xmm4, %xmm4
    0000004e: 	leaq	0x8(%r13,%rax,4), %rbx
    00000053: 	movss	DATAat0x38640(%rip), %xmm3
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3399:
    00000060: 	cmpl	$0x1, %r14d
    00000064: 	jle	.Ltmp3395 # Offset: 100
    0000006a: 	movss	(%r13), %xmm2
    00000070: 	leaq	0x4(%r13), %rax
    00000074: 	movaps	%xmm4, %xmm0
    00000077: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3396:
    00000080: 	movaps	%xmm2, %xmm5
    00000083: 	movss	(%rax), %xmm2
    00000087: 	addq	$0x4, %rax
    0000008b: 	movaps	%xmm2, %xmm1
    0000008e: 	mulss	%xmm2, %xmm1
    00000092: 	addss	%xmm5, %xmm1
    00000096: 	addss	%xmm1, %xmm0
    0000009a: 	subss	%xmm1, %xmm0
    0000009e: 	addss	%xmm1, %xmm0
    000000a2: 	subss	%xmm1, %xmm0
    000000a6: 	addss	%xmm1, %xmm0
    000000aa: 	subss	%xmm1, %xmm0
    000000ae: 	addss	%xmm1, %xmm0
    000000b2: 	subss	%xmm1, %xmm0
    000000b6: 	addss	%xmm1, %xmm0
    000000ba: 	subss	%xmm1, %xmm0
    000000be: 	addss	%xmm1, %xmm0
    000000c2: 	subss	%xmm1, %xmm0
    000000c6: 	addss	%xmm1, %xmm0
    000000ca: 	subss	%xmm1, %xmm0
    000000ce: 	addss	%xmm1, %xmm0
    000000d2: 	subss	%xmm1, %xmm0
    000000d6: 	addss	%xmm1, %xmm0
    000000da: 	subss	%xmm1, %xmm0
    000000de: 	addss	%xmm1, %xmm0
    000000e2: 	subss	%xmm1, %xmm0
    000000e6: 	addss	%xmm1, %xmm0
    000000ea: 	subss	%xmm1, %xmm0
    000000ee: 	addss	%xmm1, %xmm0
    000000f2: 	subss	%xmm1, %xmm0
    000000f6: 	addss	%xmm1, %xmm0
    000000fa: 	subss	%xmm1, %xmm0
    000000fe: 	addss	%xmm1, %xmm0
    00000102: 	subss	%xmm1, %xmm0
    00000106: 	addss	%xmm1, %xmm0
    0000010a: 	subss	%xmm1, %xmm0
    0000010e: 	addss	%xmm1, %xmm0
    00000112: 	subss	%xmm1, %xmm0
    00000116: 	addss	%xmm1, %xmm0
    0000011a: 	subss	%xmm1, %xmm0
    0000011e: 	addss	%xmm1, %xmm0
    00000122: 	subss	%xmm1, %xmm0
    00000126: 	addss	%xmm1, %xmm0
    0000012a: 	subss	%xmm1, %xmm0
    0000012e: 	addss	%xmm1, %xmm0
    00000132: 	subss	%xmm1, %xmm0
    00000136: 	addss	%xmm1, %xmm0
    0000013a: 	subss	%xmm1, %xmm0
    0000013e: 	addss	%xmm1, %xmm0
    00000142: 	subss	%xmm1, %xmm0
    00000146: 	addss	%xmm1, %xmm0
    0000014a: 	subss	%xmm1, %xmm0
    0000014e: 	addss	%xmm1, %xmm0
    00000152: 	subss	%xmm1, %xmm0
    00000156: 	addss	%xmm1, %xmm0
    0000015a: 	subss	%xmm1, %xmm0
    0000015e: 	addss	%xmm1, %xmm0
    00000162: 	subss	%xmm1, %xmm0
    00000166: 	addss	%xmm1, %xmm0
    0000016a: 	subss	%xmm1, %xmm0
    0000016e: 	addss	%xmm1, %xmm0
    00000172: 	subss	%xmm1, %xmm0
    00000176: 	addss	%xmm1, %xmm0
    0000017a: 	subss	%xmm1, %xmm0
    0000017e: 	addss	%xmm1, %xmm0
    00000182: 	subss	%xmm1, %xmm0
    00000186: 	addss	%xmm1, %xmm0
    0000018a: 	subss	%xmm1, %xmm0
    0000018e: 	addss	%xmm1, %xmm0
    00000192: 	subss	%xmm1, %xmm0
    00000196: 	cmpq	%rax, %rbx
    00000199: 	jne	.Ltmp3396 # Offset: 409
    0000019f: 	movaps	%xmm0, %xmm1
    000001a2: 	andps	%xmm3, %xmm1
    000001a5: 	cvtss2sd	%xmm1, %xmm1
    000001a9: 	comisd	DATAat0x385e8(%rip), %xmm1
    000001b1: 	jbe	.Ltmp3397 # Offset: 433
    000001b3: 	divss	%xmm0, %xmm0
.Ltmp3397:
    000001b7: 	movsd	DATAat0x38608(%rip), %xmm1
    000001bf: 	cvtss2sd	%xmm0, %xmm0
    000001c3: 	andpd	DATAat0x38630(%rip), %xmm0
    000001cb: 	comisd	%xmm0, %xmm1
    000001cf: 	jbe	.Ltmp3398 # Offset: 463
.Ltmp3395:
    000001d5: 	addl	$0x1, %r12d
    000001d9: 	cmpl	%edx, %r12d
    000001dc: 	jl	.Ltmp3399 # Offset: 476
.Ltmp3394:
    000001e2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001f0: 	subq	$0x20, %rax
    000001f4: 	cmpq	%rax, %rbx
    000001f7: 	je	.Ltmp3400 # Offset: 503
    000001fd: 	leaq	0x10(%rbx), %rdi
    00000201: 	movq	0x8(%rbp), %r12
    00000205: 	movq	%rdi, (%rbx)
    00000208: 	movq	(%rbp), %r13
    0000020c: 	movq	%r13, %rax
    0000020f: 	addq	%r12, %rax
    00000212: 	je	.Ltmp3401 # Offset: 530
    00000214: 	testq	%r13, %r13
    00000217: 	je	.Ltmp3402 # Offset: 535
.Ltmp3401:
    0000021d: 	movq	%r12, (%rsp)
    00000221: 	cmpq	$0xf, %r12
    00000225: 	ja	.Ltmp3403 # Offset: 549
    0000022b: 	cmpq	$0x1, %r12
    0000022f: 	jne	.Ltmp3404 # Offset: 559
    00000235: 	movzbl	(%r13), %eax
    0000023a: 	movb	%al, 0x10(%rbx)
.Ltmp3407:
    0000023d: 	movq	%r12, 0x8(%rbx)
    00000241: 	movb	$0x0, (%rdi,%r12)
    00000246: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000254: 	addq	$0x20, %rax
    00000258: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000025f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000266: 	je	.Ltmp3405 # Offset: 614
.Ltmp3408:
    0000026c: 	movq	-0x20(%rax), %rbp
    00000270: 	callq	clock@PLT # Offset: 624
    00000275: 	movq	%rax, end_time(%rip)
    0000027c: 	movq	0x8(%rsp), %rdx
    00000281: 	subq	%fs:0x28, %rdx
    0000028a: 	jne	.Ltmp3406 # Offset: 650
    00000290: 	subq	start_time(%rip), %rax
    00000297: 	pxor	%xmm0, %xmm0
    0000029b: 	movq	%rbp, %rdi
    0000029e: 	cvtsi2sd	%rax, %xmm0
    000002a3: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002ab: 	addq	$0x10, %rsp
    000002af: 	popq	%rbx
    000002b0: 	popq	%rbp
    000002b1: 	popq	%r12
    000002b3: 	popq	%r13
    000002b5: 	popq	%r14
    000002b7: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 695
    000002bc: 	nopl	(%rax) # Size: 4
.Ltmp3398:
    000002c0: 	movl	current_test(%rip), %edx
    000002c6: 	xorl	%eax, %eax
    000002c8: 	movl	$0x1, %edi
    000002cd: 	addl	$0x1, %r12d
    000002d1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002d8: 	callq	__printf_chk@PLT # Offset: 728
    000002dd: 	movl	iterations(%rip), %edx
    000002e3: 	pxor	%xmm4, %xmm4
    000002e7: 	movss	DATAat0x38640(%rip), %xmm3
    000002ef: 	cmpl	%edx, %r12d
    000002f2: 	jl	.Ltmp3399 # Offset: 754
    000002f8: 	jmp	.Ltmp3394 # Offset: 760
.Ltmp3403:
    000002fd: 	movq	%rbx, %rdi
    00000300: 	movq	%rsp, %rsi
    00000303: 	xorl	%edx, %edx
    00000305: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 773
    0000030a: 	movq	%rax, (%rbx)
    0000030d: 	movq	%rax, %rdi
    00000310: 	movq	(%rsp), %rax
    00000314: 	movq	%rax, 0x10(%rbx)
.Ltmp3409:
    00000318: 	movq	%r12, %rdx
    0000031b: 	movq	%r13, %rsi
    0000031e: 	callq	memcpy@PLT # Offset: 798
    00000323: 	movq	(%rsp), %r12
    00000327: 	movq	(%rbx), %rdi
    0000032a: 	jmp	.Ltmp3407 # Offset: 810
.Ltmp3400:
    0000032f: 	movq	%rbp, %rsi
    00000332: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000339: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 825
    0000033e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000345: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000034c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000353: 	jne	.Ltmp3408 # Offset: 851
.Ltmp3405:
    00000359: 	movq	-0x8(%rdx), %rax
    0000035d: 	addq	$0x200, %rax
    00000363: 	jmp	.Ltmp3408 # Offset: 867
.Ltmp3404:
    00000368: 	testq	%r12, %r12
    0000036b: 	je	.Ltmp3407 # Offset: 875
    00000371: 	jmp	.Ltmp3409 # Offset: 881
.Ltmp3406:
    00000373: 	callq	__stack_chk_fail@PLT # Offset: 883
.Ltmp3402:
    00000378: 	leaq	DATAat0x38110(%rip), %rdi
    0000037f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 895
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedIf15custom_sub_zeroIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedId20custom_subtract_selfIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 115
  State       : disassembled
  Address     : 0x2df80
  Size        : 0x390
  MaxSize     : 0x390
  Offset      : 0x2df80
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedId20custom_subtract_selfIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0114:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3410 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	movq	DATAat0x38630(%rip), %xmm3
    0000004f: 	xorl	%r12d, %r12d
    00000052: 	pxor	%xmm5, %xmm5
    00000056: 	movsd	DATAat0x38600(%rip), %xmm4
    0000005e: 	leaq	0x10(%r13,%rax,8), %rbx
    00000063: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3415:
    00000068: 	cmpl	$0x1, %r14d
    0000006c: 	jle	.Ltmp3411 # Offset: 108
    00000072: 	movsd	(%r13), %xmm2
    00000078: 	leaq	0x8(%r13), %rax
    0000007c: 	movapd	%xmm5, %xmm0
.Ltmp3412:
    00000080: 	movapd	%xmm2, %xmm6
    00000084: 	addq	$0x8, %rax
    00000088: 	subsd	%xmm2, %xmm6
    0000008c: 	movsd	-0x8(%rax), %xmm2
    00000091: 	movapd	%xmm2, %xmm1
    00000095: 	mulsd	%xmm2, %xmm1
    00000099: 	subsd	%xmm1, %xmm1
    0000009d: 	addsd	%xmm6, %xmm1
    000000a1: 	addsd	%xmm1, %xmm0
    000000a5: 	subsd	%xmm1, %xmm0
    000000a9: 	addsd	%xmm1, %xmm0
    000000ad: 	subsd	%xmm1, %xmm0
    000000b1: 	addsd	%xmm1, %xmm0
    000000b5: 	subsd	%xmm1, %xmm0
    000000b9: 	addsd	%xmm1, %xmm0
    000000bd: 	subsd	%xmm1, %xmm0
    000000c1: 	addsd	%xmm1, %xmm0
    000000c5: 	subsd	%xmm1, %xmm0
    000000c9: 	addsd	%xmm1, %xmm0
    000000cd: 	subsd	%xmm1, %xmm0
    000000d1: 	addsd	%xmm1, %xmm0
    000000d5: 	subsd	%xmm1, %xmm0
    000000d9: 	addsd	%xmm1, %xmm0
    000000dd: 	subsd	%xmm1, %xmm0
    000000e1: 	addsd	%xmm1, %xmm0
    000000e5: 	subsd	%xmm1, %xmm0
    000000e9: 	addsd	%xmm1, %xmm0
    000000ed: 	subsd	%xmm1, %xmm0
    000000f1: 	addsd	%xmm1, %xmm0
    000000f5: 	subsd	%xmm1, %xmm0
    000000f9: 	addsd	%xmm1, %xmm0
    000000fd: 	subsd	%xmm1, %xmm0
    00000101: 	addsd	%xmm1, %xmm0
    00000105: 	subsd	%xmm1, %xmm0
    00000109: 	addsd	%xmm1, %xmm0
    0000010d: 	subsd	%xmm1, %xmm0
    00000111: 	addsd	%xmm1, %xmm0
    00000115: 	subsd	%xmm1, %xmm0
    00000119: 	addsd	%xmm1, %xmm0
    0000011d: 	subsd	%xmm1, %xmm0
    00000121: 	addsd	%xmm1, %xmm0
    00000125: 	subsd	%xmm1, %xmm0
    00000129: 	addsd	%xmm1, %xmm0
    0000012d: 	subsd	%xmm1, %xmm0
    00000131: 	addsd	%xmm1, %xmm0
    00000135: 	subsd	%xmm1, %xmm0
    00000139: 	addsd	%xmm1, %xmm0
    0000013d: 	subsd	%xmm1, %xmm0
    00000141: 	addsd	%xmm1, %xmm0
    00000145: 	subsd	%xmm1, %xmm0
    00000149: 	addsd	%xmm1, %xmm0
    0000014d: 	subsd	%xmm1, %xmm0
    00000151: 	addsd	%xmm1, %xmm0
    00000155: 	subsd	%xmm1, %xmm0
    00000159: 	addsd	%xmm1, %xmm0
    0000015d: 	subsd	%xmm1, %xmm0
    00000161: 	addsd	%xmm1, %xmm0
    00000165: 	subsd	%xmm1, %xmm0
    00000169: 	addsd	%xmm1, %xmm0
    0000016d: 	subsd	%xmm1, %xmm0
    00000171: 	addsd	%xmm1, %xmm0
    00000175: 	subsd	%xmm1, %xmm0
    00000179: 	addsd	%xmm1, %xmm0
    0000017d: 	subsd	%xmm1, %xmm0
    00000181: 	addsd	%xmm1, %xmm0
    00000185: 	subsd	%xmm1, %xmm0
    00000189: 	addsd	%xmm1, %xmm0
    0000018d: 	subsd	%xmm1, %xmm0
    00000191: 	addsd	%xmm1, %xmm0
    00000195: 	subsd	%xmm1, %xmm0
    00000199: 	addsd	%xmm1, %xmm0
    0000019d: 	subsd	%xmm1, %xmm0
    000001a1: 	cmpq	%rax, %rbx
    000001a4: 	jne	.Ltmp3412 # Offset: 420
    000001aa: 	movapd	%xmm0, %xmm1
    000001ae: 	andpd	%xmm3, %xmm1
    000001b2: 	comisd	DATAat0x385f8(%rip), %xmm1
    000001ba: 	jbe	.Ltmp3413 # Offset: 442
    000001bc: 	divsd	%xmm0, %xmm0
    000001c0: 	movapd	%xmm0, %xmm1
    000001c4: 	andpd	%xmm3, %xmm1
.Ltmp3413:
    000001c8: 	comisd	%xmm1, %xmm4
    000001cc: 	jbe	.Ltmp3414 # Offset: 460
.Ltmp3411:
    000001d2: 	addl	$0x1, %r12d
    000001d6: 	cmpl	%edx, %r12d
    000001d9: 	jl	.Ltmp3415 # Offset: 473
.Ltmp3410:
    000001df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001ed: 	subq	$0x20, %rax
    000001f1: 	cmpq	%rax, %rbx
    000001f4: 	je	.Ltmp3416 # Offset: 500
    000001fa: 	leaq	0x10(%rbx), %rdi
    000001fe: 	movq	0x8(%rbp), %r12
    00000202: 	movq	%rdi, (%rbx)
    00000205: 	movq	(%rbp), %r13
    00000209: 	movq	%r13, %rax
    0000020c: 	addq	%r12, %rax
    0000020f: 	je	.Ltmp3417 # Offset: 527
    00000211: 	testq	%r13, %r13
    00000214: 	je	.Ltmp3418 # Offset: 532
.Ltmp3417:
    0000021a: 	movq	%r12, (%rsp)
    0000021e: 	cmpq	$0xf, %r12
    00000222: 	ja	.Ltmp3419 # Offset: 546
    00000228: 	cmpq	$0x1, %r12
    0000022c: 	jne	.Ltmp3420 # Offset: 556
    00000232: 	movzbl	(%r13), %eax
    00000237: 	movb	%al, 0x10(%rbx)
.Ltmp3423:
    0000023a: 	movq	%r12, 0x8(%rbx)
    0000023e: 	movb	$0x0, (%rdi,%r12)
    00000243: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000024a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000251: 	addq	$0x20, %rax
    00000255: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000025c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000263: 	je	.Ltmp3421 # Offset: 611
.Ltmp3424:
    00000269: 	movq	-0x20(%rax), %rbp
    0000026d: 	callq	clock@PLT # Offset: 621
    00000272: 	movq	%rax, end_time(%rip)
    00000279: 	movq	0x8(%rsp), %rdx
    0000027e: 	subq	%fs:0x28, %rdx
    00000287: 	jne	.Ltmp3422 # Offset: 647
    0000028d: 	subq	start_time(%rip), %rax
    00000294: 	pxor	%xmm0, %xmm0
    00000298: 	movq	%rbp, %rdi
    0000029b: 	cvtsi2sd	%rax, %xmm0
    000002a0: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002a8: 	addq	$0x10, %rsp
    000002ac: 	popq	%rbx
    000002ad: 	popq	%rbp
    000002ae: 	popq	%r12
    000002b0: 	popq	%r13
    000002b2: 	popq	%r14
    000002b4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 692
    000002b9: 	nopl	(%rax) # Size: 7
.Ltmp3414:
    000002c0: 	movl	current_test(%rip), %edx
    000002c6: 	xorl	%eax, %eax
    000002c8: 	movl	$0x1, %edi
    000002cd: 	addl	$0x1, %r12d
    000002d1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002d8: 	callq	__printf_chk@PLT # Offset: 728
    000002dd: 	movl	iterations(%rip), %edx
    000002e3: 	movq	DATAat0x38600(%rip), %rax
    000002ea: 	pxor	%xmm5, %xmm5
    000002ee: 	movq	DATAat0x38630(%rip), %xmm3
    000002f6: 	cmpl	%edx, %r12d
    000002f9: 	movq	%rax, %xmm4
    000002fe: 	jl	.Ltmp3415 # Offset: 766
    00000304: 	jmp	.Ltmp3410 # Offset: 772
.Ltmp3419:
    00000309: 	movq	%rbx, %rdi
    0000030c: 	movq	%rsp, %rsi
    0000030f: 	xorl	%edx, %edx
    00000311: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 785
    00000316: 	movq	%rax, (%rbx)
    00000319: 	movq	%rax, %rdi
    0000031c: 	movq	(%rsp), %rax
    00000320: 	movq	%rax, 0x10(%rbx)
.Ltmp3425:
    00000324: 	movq	%r12, %rdx
    00000327: 	movq	%r13, %rsi
    0000032a: 	callq	memcpy@PLT # Offset: 810
    0000032f: 	movq	(%rsp), %r12
    00000333: 	movq	(%rbx), %rdi
    00000336: 	jmp	.Ltmp3423 # Offset: 822
.Ltmp3416:
    0000033b: 	movq	%rbp, %rsi
    0000033e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000345: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 837
    0000034a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000351: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000358: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035f: 	jne	.Ltmp3424 # Offset: 863
.Ltmp3421:
    00000365: 	movq	-0x8(%rdx), %rax
    00000369: 	addq	$0x200, %rax
    0000036f: 	jmp	.Ltmp3424 # Offset: 879
.Ltmp3420:
    00000374: 	testq	%r12, %r12
    00000377: 	je	.Ltmp3423 # Offset: 887
    0000037d: 	jmp	.Ltmp3425 # Offset: 893
.Ltmp3422:
    0000037f: 	callq	__stack_chk_fail@PLT # Offset: 895
.Ltmp3418:
    00000384: 	leaq	DATAat0x38110(%rip), %rdi
    0000038b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 907
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedId20custom_subtract_selfIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedIf20custom_subtract_selfIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 116
  State       : disassembled
  Address     : 0x2e310
  Size        : 0x38c
  MaxSize     : 0x390
  Offset      : 0x2e310
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedIf20custom_subtract_selfIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0115:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3426 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	xorl	%r12d, %r12d
    0000004a: 	pxor	%xmm4, %xmm4
    0000004e: 	leaq	0x8(%r13,%rax,4), %rbx
    00000053: 	movss	DATAat0x38640(%rip), %xmm3
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3431:
    00000060: 	cmpl	$0x1, %r14d
    00000064: 	jle	.Ltmp3427 # Offset: 100
    0000006a: 	movss	(%r13), %xmm2
    00000070: 	leaq	0x4(%r13), %rax
    00000074: 	movaps	%xmm4, %xmm0
    00000077: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3428:
    00000080: 	movaps	%xmm2, %xmm5
    00000083: 	addq	$0x4, %rax
    00000087: 	subss	%xmm2, %xmm5
    0000008b: 	movss	-0x4(%rax), %xmm2
    00000090: 	movaps	%xmm2, %xmm1
    00000093: 	mulss	%xmm2, %xmm1
    00000097: 	subss	%xmm1, %xmm1
    0000009b: 	addss	%xmm5, %xmm1
    0000009f: 	addss	%xmm1, %xmm0
    000000a3: 	subss	%xmm1, %xmm0
    000000a7: 	addss	%xmm1, %xmm0
    000000ab: 	subss	%xmm1, %xmm0
    000000af: 	addss	%xmm1, %xmm0
    000000b3: 	subss	%xmm1, %xmm0
    000000b7: 	addss	%xmm1, %xmm0
    000000bb: 	subss	%xmm1, %xmm0
    000000bf: 	addss	%xmm1, %xmm0
    000000c3: 	subss	%xmm1, %xmm0
    000000c7: 	addss	%xmm1, %xmm0
    000000cb: 	subss	%xmm1, %xmm0
    000000cf: 	addss	%xmm1, %xmm0
    000000d3: 	subss	%xmm1, %xmm0
    000000d7: 	addss	%xmm1, %xmm0
    000000db: 	subss	%xmm1, %xmm0
    000000df: 	addss	%xmm1, %xmm0
    000000e3: 	subss	%xmm1, %xmm0
    000000e7: 	addss	%xmm1, %xmm0
    000000eb: 	subss	%xmm1, %xmm0
    000000ef: 	addss	%xmm1, %xmm0
    000000f3: 	subss	%xmm1, %xmm0
    000000f7: 	addss	%xmm1, %xmm0
    000000fb: 	subss	%xmm1, %xmm0
    000000ff: 	addss	%xmm1, %xmm0
    00000103: 	subss	%xmm1, %xmm0
    00000107: 	addss	%xmm1, %xmm0
    0000010b: 	subss	%xmm1, %xmm0
    0000010f: 	addss	%xmm1, %xmm0
    00000113: 	subss	%xmm1, %xmm0
    00000117: 	addss	%xmm1, %xmm0
    0000011b: 	subss	%xmm1, %xmm0
    0000011f: 	addss	%xmm1, %xmm0
    00000123: 	subss	%xmm1, %xmm0
    00000127: 	addss	%xmm1, %xmm0
    0000012b: 	subss	%xmm1, %xmm0
    0000012f: 	addss	%xmm1, %xmm0
    00000133: 	subss	%xmm1, %xmm0
    00000137: 	addss	%xmm1, %xmm0
    0000013b: 	subss	%xmm1, %xmm0
    0000013f: 	addss	%xmm1, %xmm0
    00000143: 	subss	%xmm1, %xmm0
    00000147: 	addss	%xmm1, %xmm0
    0000014b: 	subss	%xmm1, %xmm0
    0000014f: 	addss	%xmm1, %xmm0
    00000153: 	subss	%xmm1, %xmm0
    00000157: 	addss	%xmm1, %xmm0
    0000015b: 	subss	%xmm1, %xmm0
    0000015f: 	addss	%xmm1, %xmm0
    00000163: 	subss	%xmm1, %xmm0
    00000167: 	addss	%xmm1, %xmm0
    0000016b: 	subss	%xmm1, %xmm0
    0000016f: 	addss	%xmm1, %xmm0
    00000173: 	subss	%xmm1, %xmm0
    00000177: 	addss	%xmm1, %xmm0
    0000017b: 	subss	%xmm1, %xmm0
    0000017f: 	addss	%xmm1, %xmm0
    00000183: 	subss	%xmm1, %xmm0
    00000187: 	addss	%xmm1, %xmm0
    0000018b: 	subss	%xmm1, %xmm0
    0000018f: 	addss	%xmm1, %xmm0
    00000193: 	subss	%xmm1, %xmm0
    00000197: 	addss	%xmm1, %xmm0
    0000019b: 	subss	%xmm1, %xmm0
    0000019f: 	cmpq	%rax, %rbx
    000001a2: 	jne	.Ltmp3428 # Offset: 418
    000001a8: 	movaps	%xmm0, %xmm1
    000001ab: 	andps	%xmm3, %xmm1
    000001ae: 	cvtss2sd	%xmm1, %xmm1
    000001b2: 	comisd	DATAat0x385e8(%rip), %xmm1
    000001ba: 	jbe	.Ltmp3429 # Offset: 442
    000001bc: 	divss	%xmm0, %xmm0
.Ltmp3429:
    000001c0: 	movsd	DATAat0x38608(%rip), %xmm1
    000001c8: 	cvtss2sd	%xmm0, %xmm0
    000001cc: 	andpd	DATAat0x38630(%rip), %xmm0
    000001d4: 	comisd	%xmm0, %xmm1
    000001d8: 	jbe	.Ltmp3430 # Offset: 472
.Ltmp3427:
    000001de: 	addl	$0x1, %r12d
    000001e2: 	cmpl	%edx, %r12d
    000001e5: 	jl	.Ltmp3431 # Offset: 485
.Ltmp3426:
    000001eb: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001f2: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001f9: 	subq	$0x20, %rax
    000001fd: 	cmpq	%rax, %rbx
    00000200: 	je	.Ltmp3432 # Offset: 512
    00000206: 	leaq	0x10(%rbx), %rdi
    0000020a: 	movq	0x8(%rbp), %r12
    0000020e: 	movq	%rdi, (%rbx)
    00000211: 	movq	(%rbp), %r13
    00000215: 	movq	%r13, %rax
    00000218: 	addq	%r12, %rax
    0000021b: 	je	.Ltmp3433 # Offset: 539
    0000021d: 	testq	%r13, %r13
    00000220: 	je	.Ltmp3434 # Offset: 544
.Ltmp3433:
    00000226: 	movq	%r12, (%rsp)
    0000022a: 	cmpq	$0xf, %r12
    0000022e: 	ja	.Ltmp3435 # Offset: 558
    00000234: 	cmpq	$0x1, %r12
    00000238: 	jne	.Ltmp3436 # Offset: 568
    0000023e: 	movzbl	(%r13), %eax
    00000243: 	movb	%al, 0x10(%rbx)
.Ltmp3439:
    00000246: 	movq	%r12, 0x8(%rbx)
    0000024a: 	movb	$0x0, (%rdi,%r12)
    0000024f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000256: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000025d: 	addq	$0x20, %rax
    00000261: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000268: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000026f: 	je	.Ltmp3437 # Offset: 623
.Ltmp3440:
    00000275: 	movq	-0x20(%rax), %rbp
    00000279: 	callq	clock@PLT # Offset: 633
    0000027e: 	movq	%rax, end_time(%rip)
    00000285: 	movq	0x8(%rsp), %rdx
    0000028a: 	subq	%fs:0x28, %rdx
    00000293: 	jne	.Ltmp3438 # Offset: 659
    00000299: 	subq	start_time(%rip), %rax
    000002a0: 	pxor	%xmm0, %xmm0
    000002a4: 	movq	%rbp, %rdi
    000002a7: 	cvtsi2sd	%rax, %xmm0
    000002ac: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002b4: 	addq	$0x10, %rsp
    000002b8: 	popq	%rbx
    000002b9: 	popq	%rbp
    000002ba: 	popq	%r12
    000002bc: 	popq	%r13
    000002be: 	popq	%r14
    000002c0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 704
    000002c5: 	nopl	(%rax) # Size: 3
.Ltmp3430:
    000002c8: 	movl	current_test(%rip), %edx
    000002ce: 	xorl	%eax, %eax
    000002d0: 	movl	$0x1, %edi
    000002d5: 	addl	$0x1, %r12d
    000002d9: 	leaq	DATAat0x381c8(%rip), %rsi
    000002e0: 	callq	__printf_chk@PLT # Offset: 736
    000002e5: 	movl	iterations(%rip), %edx
    000002eb: 	pxor	%xmm4, %xmm4
    000002ef: 	movss	DATAat0x38640(%rip), %xmm3
    000002f7: 	cmpl	%edx, %r12d
    000002fa: 	jl	.Ltmp3431 # Offset: 762
    00000300: 	jmp	.Ltmp3426 # Offset: 768
.Ltmp3435:
    00000305: 	movq	%rbx, %rdi
    00000308: 	movq	%rsp, %rsi
    0000030b: 	xorl	%edx, %edx
    0000030d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 781
    00000312: 	movq	%rax, (%rbx)
    00000315: 	movq	%rax, %rdi
    00000318: 	movq	(%rsp), %rax
    0000031c: 	movq	%rax, 0x10(%rbx)
.Ltmp3441:
    00000320: 	movq	%r12, %rdx
    00000323: 	movq	%r13, %rsi
    00000326: 	callq	memcpy@PLT # Offset: 806
    0000032b: 	movq	(%rsp), %r12
    0000032f: 	movq	(%rbx), %rdi
    00000332: 	jmp	.Ltmp3439 # Offset: 818
.Ltmp3432:
    00000337: 	movq	%rbp, %rsi
    0000033a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000341: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 833
    00000346: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000034d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000354: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035b: 	jne	.Ltmp3440 # Offset: 859
.Ltmp3437:
    00000361: 	movq	-0x8(%rdx), %rax
    00000365: 	addq	$0x200, %rax
    0000036b: 	jmp	.Ltmp3440 # Offset: 875
.Ltmp3436:
    00000370: 	testq	%r12, %r12
    00000373: 	je	.Ltmp3439 # Offset: 883
    00000379: 	jmp	.Ltmp3441 # Offset: 889
.Ltmp3438:
    0000037b: 	callq	__stack_chk_fail@PLT # Offset: 891
.Ltmp3434:
    00000380: 	leaq	DATAat0x38110(%rip), %rdi
    00000387: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 903
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedIf20custom_subtract_selfIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedIf29custom_algebra_mixed_constantIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 117
  State       : disassembled
  Address     : 0x2e6a0
  Size        : 0x3a4
  MaxSize     : 0x3b0
  Offset      : 0x2e6a0
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedIf29custom_algebra_mixed_constantIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0116:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3442 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	xorl	%r12d, %r12d
    0000004a: 	pxor	%xmm3, %xmm3
    0000004e: 	leaq	0x8(%r13,%rax,4), %rbx
    00000053: 	movss	DATAat0x38640(%rip), %xmm4
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3447:
    00000060: 	cmpl	$0x1, %r14d
    00000064: 	jle	.Ltmp3443 # Offset: 100
    0000006a: 	movss	(%r13), %xmm2
    00000070: 	leaq	0x4(%r13), %rax
    00000074: 	movaps	%xmm3, %xmm0
    00000077: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3444:
    00000080: 	movaps	%xmm2, %xmm1
    00000083: 	movaps	%xmm3, %xmm5
    00000086: 	addq	$0x4, %rax
    0000008a: 	addss	%xmm3, %xmm1
    0000008e: 	subss	%xmm1, %xmm5
    00000092: 	movaps	%xmm3, %xmm1
    00000095: 	addss	%xmm2, %xmm5
    00000099: 	movss	-0x4(%rax), %xmm2
    0000009e: 	movaps	%xmm2, %xmm6
    000000a1: 	mulss	%xmm2, %xmm6
    000000a5: 	movaps	%xmm6, %xmm7
    000000a8: 	addss	%xmm3, %xmm7
    000000ac: 	subss	%xmm7, %xmm1
    000000b0: 	addss	%xmm6, %xmm1
    000000b4: 	addss	%xmm5, %xmm1
    000000b8: 	addss	%xmm1, %xmm0
    000000bc: 	subss	%xmm1, %xmm0
    000000c0: 	addss	%xmm1, %xmm0
    000000c4: 	subss	%xmm1, %xmm0
    000000c8: 	addss	%xmm1, %xmm0
    000000cc: 	subss	%xmm1, %xmm0
    000000d0: 	addss	%xmm1, %xmm0
    000000d4: 	subss	%xmm1, %xmm0
    000000d8: 	addss	%xmm1, %xmm0
    000000dc: 	subss	%xmm1, %xmm0
    000000e0: 	addss	%xmm1, %xmm0
    000000e4: 	subss	%xmm1, %xmm0
    000000e8: 	addss	%xmm1, %xmm0
    000000ec: 	subss	%xmm1, %xmm0
    000000f0: 	addss	%xmm1, %xmm0
    000000f4: 	subss	%xmm1, %xmm0
    000000f8: 	addss	%xmm1, %xmm0
    000000fc: 	subss	%xmm1, %xmm0
    00000100: 	addss	%xmm1, %xmm0
    00000104: 	subss	%xmm1, %xmm0
    00000108: 	addss	%xmm1, %xmm0
    0000010c: 	subss	%xmm1, %xmm0
    00000110: 	addss	%xmm1, %xmm0
    00000114: 	subss	%xmm1, %xmm0
    00000118: 	addss	%xmm1, %xmm0
    0000011c: 	subss	%xmm1, %xmm0
    00000120: 	addss	%xmm1, %xmm0
    00000124: 	subss	%xmm1, %xmm0
    00000128: 	addss	%xmm1, %xmm0
    0000012c: 	subss	%xmm1, %xmm0
    00000130: 	addss	%xmm1, %xmm0
    00000134: 	subss	%xmm1, %xmm0
    00000138: 	addss	%xmm1, %xmm0
    0000013c: 	subss	%xmm1, %xmm0
    00000140: 	addss	%xmm1, %xmm0
    00000144: 	subss	%xmm1, %xmm0
    00000148: 	addss	%xmm1, %xmm0
    0000014c: 	subss	%xmm1, %xmm0
    00000150: 	addss	%xmm1, %xmm0
    00000154: 	subss	%xmm1, %xmm0
    00000158: 	addss	%xmm1, %xmm0
    0000015c: 	subss	%xmm1, %xmm0
    00000160: 	addss	%xmm1, %xmm0
    00000164: 	subss	%xmm1, %xmm0
    00000168: 	addss	%xmm1, %xmm0
    0000016c: 	subss	%xmm1, %xmm0
    00000170: 	addss	%xmm1, %xmm0
    00000174: 	subss	%xmm1, %xmm0
    00000178: 	addss	%xmm1, %xmm0
    0000017c: 	subss	%xmm1, %xmm0
    00000180: 	addss	%xmm1, %xmm0
    00000184: 	subss	%xmm1, %xmm0
    00000188: 	addss	%xmm1, %xmm0
    0000018c: 	subss	%xmm1, %xmm0
    00000190: 	addss	%xmm1, %xmm0
    00000194: 	subss	%xmm1, %xmm0
    00000198: 	addss	%xmm1, %xmm0
    0000019c: 	subss	%xmm1, %xmm0
    000001a0: 	addss	%xmm1, %xmm0
    000001a4: 	subss	%xmm1, %xmm0
    000001a8: 	addss	%xmm1, %xmm0
    000001ac: 	subss	%xmm1, %xmm0
    000001b0: 	addss	%xmm1, %xmm0
    000001b4: 	subss	%xmm1, %xmm0
    000001b8: 	cmpq	%rax, %rbx
    000001bb: 	jne	.Ltmp3444 # Offset: 443
    000001c1: 	movaps	%xmm0, %xmm1
    000001c4: 	andps	%xmm4, %xmm1
    000001c7: 	cvtss2sd	%xmm1, %xmm1
    000001cb: 	comisd	DATAat0x385e8(%rip), %xmm1
    000001d3: 	jbe	.Ltmp3445 # Offset: 467
    000001d5: 	divss	%xmm0, %xmm0
.Ltmp3445:
    000001d9: 	movsd	DATAat0x38608(%rip), %xmm1
    000001e1: 	cvtss2sd	%xmm0, %xmm0
    000001e5: 	andpd	DATAat0x38630(%rip), %xmm0
    000001ed: 	comisd	%xmm0, %xmm1
    000001f1: 	jbe	.Ltmp3446 # Offset: 497
.Ltmp3443:
    000001f7: 	addl	$0x1, %r12d
    000001fb: 	cmpl	%edx, %r12d
    000001fe: 	jl	.Ltmp3447 # Offset: 510
.Ltmp3442:
    00000204: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000212: 	subq	$0x20, %rax
    00000216: 	cmpq	%rax, %rbx
    00000219: 	je	.Ltmp3448 # Offset: 537
    0000021f: 	leaq	0x10(%rbx), %rdi
    00000223: 	movq	0x8(%rbp), %r12
    00000227: 	movq	%rdi, (%rbx)
    0000022a: 	movq	(%rbp), %r13
    0000022e: 	movq	%r13, %rax
    00000231: 	addq	%r12, %rax
    00000234: 	je	.Ltmp3449 # Offset: 564
    00000236: 	testq	%r13, %r13
    00000239: 	je	.Ltmp3450 # Offset: 569
.Ltmp3449:
    0000023f: 	movq	%r12, (%rsp)
    00000243: 	cmpq	$0xf, %r12
    00000247: 	ja	.Ltmp3451 # Offset: 583
    0000024d: 	cmpq	$0x1, %r12
    00000251: 	jne	.Ltmp3452 # Offset: 593
    00000257: 	movzbl	(%r13), %eax
    0000025c: 	movb	%al, 0x10(%rbx)
.Ltmp3455:
    0000025f: 	movq	%r12, 0x8(%rbx)
    00000263: 	movb	$0x0, (%rdi,%r12)
    00000268: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000276: 	addq	$0x20, %rax
    0000027a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000281: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000288: 	je	.Ltmp3453 # Offset: 648
.Ltmp3456:
    0000028e: 	movq	-0x20(%rax), %rbp
    00000292: 	callq	clock@PLT # Offset: 658
    00000297: 	movq	%rax, end_time(%rip)
    0000029e: 	movq	0x8(%rsp), %rdx
    000002a3: 	subq	%fs:0x28, %rdx
    000002ac: 	jne	.Ltmp3454 # Offset: 684
    000002b2: 	subq	start_time(%rip), %rax
    000002b9: 	pxor	%xmm0, %xmm0
    000002bd: 	movq	%rbp, %rdi
    000002c0: 	cvtsi2sd	%rax, %xmm0
    000002c5: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002cd: 	addq	$0x10, %rsp
    000002d1: 	popq	%rbx
    000002d2: 	popq	%rbp
    000002d3: 	popq	%r12
    000002d5: 	popq	%r13
    000002d7: 	popq	%r14
    000002d9: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 729
    000002de: 	nop # Size: 2
.Ltmp3446:
    000002e0: 	movl	current_test(%rip), %edx
    000002e6: 	xorl	%eax, %eax
    000002e8: 	movl	$0x1, %edi
    000002ed: 	addl	$0x1, %r12d
    000002f1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002f8: 	callq	__printf_chk@PLT # Offset: 760
    000002fd: 	movl	iterations(%rip), %edx
    00000303: 	pxor	%xmm3, %xmm3
    00000307: 	movss	DATAat0x38640(%rip), %xmm4
    0000030f: 	cmpl	%edx, %r12d
    00000312: 	jl	.Ltmp3447 # Offset: 786
    00000318: 	jmp	.Ltmp3442 # Offset: 792
.Ltmp3451:
    0000031d: 	movq	%rbx, %rdi
    00000320: 	movq	%rsp, %rsi
    00000323: 	xorl	%edx, %edx
    00000325: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 805
    0000032a: 	movq	%rax, (%rbx)
    0000032d: 	movq	%rax, %rdi
    00000330: 	movq	(%rsp), %rax
    00000334: 	movq	%rax, 0x10(%rbx)
.Ltmp3457:
    00000338: 	movq	%r12, %rdx
    0000033b: 	movq	%r13, %rsi
    0000033e: 	callq	memcpy@PLT # Offset: 830
    00000343: 	movq	(%rsp), %r12
    00000347: 	movq	(%rbx), %rdi
    0000034a: 	jmp	.Ltmp3455 # Offset: 842
.Ltmp3448:
    0000034f: 	movq	%rbp, %rsi
    00000352: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000359: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 857
    0000035e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000365: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000373: 	jne	.Ltmp3456 # Offset: 883
.Ltmp3453:
    00000379: 	movq	-0x8(%rdx), %rax
    0000037d: 	addq	$0x200, %rax
    00000383: 	jmp	.Ltmp3456 # Offset: 899
.Ltmp3452:
    00000388: 	testq	%r12, %r12
    0000038b: 	je	.Ltmp3455 # Offset: 907
    00000391: 	jmp	.Ltmp3457 # Offset: 913
.Ltmp3454:
    00000393: 	callq	__stack_chk_fail@PLT # Offset: 915
.Ltmp3450:
    00000398: 	leaq	DATAat0x38110(%rip), %rdi
    0000039f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 927
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedIf29custom_algebra_mixed_constantIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedId29custom_algebra_mixed_constantIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 118
  State       : disassembled
  Address     : 0x2ea50
  Size        : 0x3a4
  MaxSize     : 0x3b0
  Offset      : 0x2ea50
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedId29custom_algebra_mixed_constantIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0117:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3458 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	movq	DATAat0x38630(%rip), %xmm4
    0000004f: 	xorl	%r12d, %r12d
    00000052: 	pxor	%xmm3, %xmm3
    00000056: 	leaq	0x10(%r13,%rax,8), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3463:
    00000060: 	cmpl	$0x1, %r14d
    00000064: 	jle	.Ltmp3459 # Offset: 100
    0000006a: 	movsd	(%r13), %xmm2
    00000070: 	leaq	0x8(%r13), %rax
    00000074: 	movapd	%xmm3, %xmm0
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3460:
    00000080: 	movapd	%xmm2, %xmm1
    00000084: 	movapd	%xmm3, %xmm5
    00000088: 	addq	$0x8, %rax
    0000008c: 	addsd	%xmm3, %xmm1
    00000090: 	subsd	%xmm1, %xmm5
    00000094: 	movapd	%xmm3, %xmm1
    00000098: 	addsd	%xmm2, %xmm5
    0000009c: 	movsd	-0x8(%rax), %xmm2
    000000a1: 	movapd	%xmm2, %xmm6
    000000a5: 	mulsd	%xmm2, %xmm6
    000000a9: 	movapd	%xmm6, %xmm7
    000000ad: 	addsd	%xmm3, %xmm7
    000000b1: 	subsd	%xmm7, %xmm1
    000000b5: 	addsd	%xmm6, %xmm1
    000000b9: 	addsd	%xmm5, %xmm1
    000000bd: 	addsd	%xmm1, %xmm0
    000000c1: 	subsd	%xmm1, %xmm0
    000000c5: 	addsd	%xmm1, %xmm0
    000000c9: 	subsd	%xmm1, %xmm0
    000000cd: 	addsd	%xmm1, %xmm0
    000000d1: 	subsd	%xmm1, %xmm0
    000000d5: 	addsd	%xmm1, %xmm0
    000000d9: 	subsd	%xmm1, %xmm0
    000000dd: 	addsd	%xmm1, %xmm0
    000000e1: 	subsd	%xmm1, %xmm0
    000000e5: 	addsd	%xmm1, %xmm0
    000000e9: 	subsd	%xmm1, %xmm0
    000000ed: 	addsd	%xmm1, %xmm0
    000000f1: 	subsd	%xmm1, %xmm0
    000000f5: 	addsd	%xmm1, %xmm0
    000000f9: 	subsd	%xmm1, %xmm0
    000000fd: 	addsd	%xmm1, %xmm0
    00000101: 	subsd	%xmm1, %xmm0
    00000105: 	addsd	%xmm1, %xmm0
    00000109: 	subsd	%xmm1, %xmm0
    0000010d: 	addsd	%xmm1, %xmm0
    00000111: 	subsd	%xmm1, %xmm0
    00000115: 	addsd	%xmm1, %xmm0
    00000119: 	subsd	%xmm1, %xmm0
    0000011d: 	addsd	%xmm1, %xmm0
    00000121: 	subsd	%xmm1, %xmm0
    00000125: 	addsd	%xmm1, %xmm0
    00000129: 	subsd	%xmm1, %xmm0
    0000012d: 	addsd	%xmm1, %xmm0
    00000131: 	subsd	%xmm1, %xmm0
    00000135: 	addsd	%xmm1, %xmm0
    00000139: 	subsd	%xmm1, %xmm0
    0000013d: 	addsd	%xmm1, %xmm0
    00000141: 	subsd	%xmm1, %xmm0
    00000145: 	addsd	%xmm1, %xmm0
    00000149: 	subsd	%xmm1, %xmm0
    0000014d: 	addsd	%xmm1, %xmm0
    00000151: 	subsd	%xmm1, %xmm0
    00000155: 	addsd	%xmm1, %xmm0
    00000159: 	subsd	%xmm1, %xmm0
    0000015d: 	addsd	%xmm1, %xmm0
    00000161: 	subsd	%xmm1, %xmm0
    00000165: 	addsd	%xmm1, %xmm0
    00000169: 	subsd	%xmm1, %xmm0
    0000016d: 	addsd	%xmm1, %xmm0
    00000171: 	subsd	%xmm1, %xmm0
    00000175: 	addsd	%xmm1, %xmm0
    00000179: 	subsd	%xmm1, %xmm0
    0000017d: 	addsd	%xmm1, %xmm0
    00000181: 	subsd	%xmm1, %xmm0
    00000185: 	addsd	%xmm1, %xmm0
    00000189: 	subsd	%xmm1, %xmm0
    0000018d: 	addsd	%xmm1, %xmm0
    00000191: 	subsd	%xmm1, %xmm0
    00000195: 	addsd	%xmm1, %xmm0
    00000199: 	subsd	%xmm1, %xmm0
    0000019d: 	addsd	%xmm1, %xmm0
    000001a1: 	subsd	%xmm1, %xmm0
    000001a5: 	addsd	%xmm1, %xmm0
    000001a9: 	subsd	%xmm1, %xmm0
    000001ad: 	addsd	%xmm1, %xmm0
    000001b1: 	subsd	%xmm1, %xmm0
    000001b5: 	addsd	%xmm1, %xmm0
    000001b9: 	subsd	%xmm1, %xmm0
    000001bd: 	cmpq	%rax, %rbx
    000001c0: 	jne	.Ltmp3460 # Offset: 448
    000001c6: 	movapd	%xmm0, %xmm1
    000001ca: 	andpd	%xmm4, %xmm1
    000001ce: 	comisd	DATAat0x385f8(%rip), %xmm1
    000001d6: 	jbe	.Ltmp3461 # Offset: 470
    000001d8: 	divsd	%xmm0, %xmm0
    000001dc: 	movapd	%xmm0, %xmm1
    000001e0: 	andpd	%xmm4, %xmm1
.Ltmp3461:
    000001e4: 	movsd	DATAat0x38600(%rip), %xmm0
    000001ec: 	comisd	%xmm1, %xmm0
    000001f0: 	jbe	.Ltmp3462 # Offset: 496
.Ltmp3459:
    000001f6: 	addl	$0x1, %r12d
    000001fa: 	cmpl	%edx, %r12d
    000001fd: 	jl	.Ltmp3463 # Offset: 509
.Ltmp3458:
    00000203: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000211: 	subq	$0x20, %rax
    00000215: 	cmpq	%rax, %rbx
    00000218: 	je	.Ltmp3464 # Offset: 536
    0000021e: 	leaq	0x10(%rbx), %rdi
    00000222: 	movq	0x8(%rbp), %r12
    00000226: 	movq	%rdi, (%rbx)
    00000229: 	movq	(%rbp), %r13
    0000022d: 	movq	%r13, %rax
    00000230: 	addq	%r12, %rax
    00000233: 	je	.Ltmp3465 # Offset: 563
    00000235: 	testq	%r13, %r13
    00000238: 	je	.Ltmp3466 # Offset: 568
.Ltmp3465:
    0000023e: 	movq	%r12, (%rsp)
    00000242: 	cmpq	$0xf, %r12
    00000246: 	ja	.Ltmp3467 # Offset: 582
    0000024c: 	cmpq	$0x1, %r12
    00000250: 	jne	.Ltmp3468 # Offset: 592
    00000256: 	movzbl	(%r13), %eax
    0000025b: 	movb	%al, 0x10(%rbx)
.Ltmp3471:
    0000025e: 	movq	%r12, 0x8(%rbx)
    00000262: 	movb	$0x0, (%rdi,%r12)
    00000267: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000275: 	addq	$0x20, %rax
    00000279: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000280: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000287: 	je	.Ltmp3469 # Offset: 647
.Ltmp3472:
    0000028d: 	movq	-0x20(%rax), %rbp
    00000291: 	callq	clock@PLT # Offset: 657
    00000296: 	movq	%rax, end_time(%rip)
    0000029d: 	movq	0x8(%rsp), %rdx
    000002a2: 	subq	%fs:0x28, %rdx
    000002ab: 	jne	.Ltmp3470 # Offset: 683
    000002b1: 	subq	start_time(%rip), %rax
    000002b8: 	pxor	%xmm0, %xmm0
    000002bc: 	movq	%rbp, %rdi
    000002bf: 	cvtsi2sd	%rax, %xmm0
    000002c4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002cc: 	addq	$0x10, %rsp
    000002d0: 	popq	%rbx
    000002d1: 	popq	%rbp
    000002d2: 	popq	%r12
    000002d4: 	popq	%r13
    000002d6: 	popq	%r14
    000002d8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 728
    000002dd: 	nopl	(%rax) # Size: 3
.Ltmp3462:
    000002e0: 	movl	current_test(%rip), %edx
    000002e6: 	xorl	%eax, %eax
    000002e8: 	movl	$0x1, %edi
    000002ed: 	addl	$0x1, %r12d
    000002f1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002f8: 	callq	__printf_chk@PLT # Offset: 760
    000002fd: 	movl	iterations(%rip), %edx
    00000303: 	pxor	%xmm3, %xmm3
    00000307: 	movq	DATAat0x38630(%rip), %xmm4
    0000030f: 	cmpl	%edx, %r12d
    00000312: 	jl	.Ltmp3463 # Offset: 786
    00000318: 	jmp	.Ltmp3458 # Offset: 792
.Ltmp3467:
    0000031d: 	movq	%rbx, %rdi
    00000320: 	movq	%rsp, %rsi
    00000323: 	xorl	%edx, %edx
    00000325: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 805
    0000032a: 	movq	%rax, (%rbx)
    0000032d: 	movq	%rax, %rdi
    00000330: 	movq	(%rsp), %rax
    00000334: 	movq	%rax, 0x10(%rbx)
.Ltmp3473:
    00000338: 	movq	%r12, %rdx
    0000033b: 	movq	%r13, %rsi
    0000033e: 	callq	memcpy@PLT # Offset: 830
    00000343: 	movq	(%rsp), %r12
    00000347: 	movq	(%rbx), %rdi
    0000034a: 	jmp	.Ltmp3471 # Offset: 842
.Ltmp3464:
    0000034f: 	movq	%rbp, %rsi
    00000352: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000359: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 857
    0000035e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000365: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000036c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000373: 	jne	.Ltmp3472 # Offset: 883
.Ltmp3469:
    00000379: 	movq	-0x8(%rdx), %rax
    0000037d: 	addq	$0x200, %rax
    00000383: 	jmp	.Ltmp3472 # Offset: 899
.Ltmp3468:
    00000388: 	testq	%r12, %r12
    0000038b: 	je	.Ltmp3471 # Offset: 907
    00000391: 	jmp	.Ltmp3473 # Offset: 913
.Ltmp3470:
    00000393: 	callq	__stack_chk_fail@PLT # Offset: 915
.Ltmp3466:
    00000398: 	leaq	DATAat0x38110(%rip), %rdi
    0000039f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 927
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedId29custom_algebra_mixed_constantIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z22test_constantSRepeatedIf20custom_algebra_mixedIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 119
  State       : disassembled
  Address     : 0x2ee00
  Size        : 0x3a8
  MaxSize     : 0x3b0
  Offset      : 0x2ee00
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedIf20custom_algebra_mixedIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0118:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3474 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	xorl	%r12d, %r12d
    0000004a: 	movss	DATAat0x38650(%rip), %xmm6
    00000052: 	leaq	0x8(%r13,%rax,4), %rbx
    00000057: 	movss	DATAat0x38640(%rip), %xmm7
    0000005f: 	nop # Size: 1
.Ltmp3479:
    00000060: 	cmpl	$0x1, %r14d
    00000064: 	jle	.Ltmp3475 # Offset: 100
    0000006a: 	pxor	%xmm4, %xmm4
    0000006e: 	movss	(%r13), %xmm3
    00000074: 	leaq	0x4(%r13), %rax
    00000078: 	movaps	%xmm4, %xmm1
    0000007b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3476:
    00000080: 	addss	%xmm4, %xmm3
    00000084: 	movaps	%xmm4, %xmm2
    00000087: 	movaps	%xmm4, %xmm5
    0000008a: 	addq	$0x4, %rax
    0000008e: 	subss	%xmm3, %xmm2
    00000092: 	movss	-0x4(%rax), %xmm3
    00000097: 	movaps	%xmm3, %xmm0
    0000009a: 	mulss	%xmm3, %xmm0
    0000009e: 	addss	%xmm4, %xmm0
    000000a2: 	subss	%xmm0, %xmm5
    000000a6: 	movaps	%xmm5, %xmm0
    000000a9: 	xorps	%xmm6, %xmm0
    000000ac: 	subss	%xmm2, %xmm0
    000000b0: 	xorps	%xmm6, %xmm2
    000000b3: 	subss	%xmm5, %xmm2
    000000b7: 	addss	%xmm0, %xmm1
    000000bb: 	subss	%xmm0, %xmm1
    000000bf: 	addss	%xmm0, %xmm1
    000000c3: 	subss	%xmm0, %xmm1
    000000c7: 	addss	%xmm0, %xmm1
    000000cb: 	subss	%xmm0, %xmm1
    000000cf: 	addss	%xmm0, %xmm1
    000000d3: 	subss	%xmm0, %xmm1
    000000d7: 	addss	%xmm0, %xmm1
    000000db: 	subss	%xmm0, %xmm1
    000000df: 	addss	%xmm0, %xmm1
    000000e3: 	subss	%xmm0, %xmm1
    000000e7: 	addss	%xmm0, %xmm1
    000000eb: 	subss	%xmm0, %xmm1
    000000ef: 	addss	%xmm0, %xmm1
    000000f3: 	subss	%xmm0, %xmm1
    000000f7: 	addss	%xmm0, %xmm1
    000000fb: 	subss	%xmm0, %xmm1
    000000ff: 	addss	%xmm0, %xmm1
    00000103: 	subss	%xmm0, %xmm1
    00000107: 	addss	%xmm0, %xmm1
    0000010b: 	subss	%xmm0, %xmm1
    0000010f: 	addss	%xmm0, %xmm1
    00000113: 	subss	%xmm0, %xmm1
    00000117: 	addss	%xmm0, %xmm1
    0000011b: 	subss	%xmm0, %xmm1
    0000011f: 	addss	%xmm0, %xmm1
    00000123: 	subss	%xmm0, %xmm1
    00000127: 	addss	%xmm0, %xmm1
    0000012b: 	subss	%xmm0, %xmm1
    0000012f: 	addss	%xmm0, %xmm1
    00000133: 	subss	%xmm0, %xmm1
    00000137: 	addss	%xmm0, %xmm1
    0000013b: 	subss	%xmm0, %xmm1
    0000013f: 	addss	%xmm0, %xmm1
    00000143: 	subss	%xmm0, %xmm1
    00000147: 	addss	%xmm0, %xmm1
    0000014b: 	subss	%xmm0, %xmm1
    0000014f: 	addss	%xmm0, %xmm1
    00000153: 	subss	%xmm0, %xmm1
    00000157: 	addss	%xmm0, %xmm1
    0000015b: 	subss	%xmm0, %xmm1
    0000015f: 	addss	%xmm1, %xmm0
    00000163: 	subss	%xmm2, %xmm0
    00000167: 	addss	%xmm2, %xmm0
    0000016b: 	subss	%xmm2, %xmm0
    0000016f: 	addss	%xmm2, %xmm0
    00000173: 	subss	%xmm2, %xmm0
    00000177: 	addss	%xmm2, %xmm0
    0000017b: 	subss	%xmm2, %xmm0
    0000017f: 	addss	%xmm2, %xmm0
    00000183: 	subss	%xmm2, %xmm0
    00000187: 	addss	%xmm2, %xmm0
    0000018b: 	subss	%xmm2, %xmm0
    0000018f: 	addss	%xmm2, %xmm0
    00000193: 	subss	%xmm2, %xmm0
    00000197: 	addss	%xmm2, %xmm0
    0000019b: 	subss	%xmm2, %xmm0
    0000019f: 	addss	%xmm2, %xmm0
    000001a3: 	subss	%xmm2, %xmm0
    000001a7: 	addss	%xmm2, %xmm0
    000001ab: 	subss	%xmm2, %xmm0
    000001af: 	addss	%xmm2, %xmm0
    000001b3: 	movaps	%xmm0, %xmm1
    000001b6: 	subss	%xmm2, %xmm1
    000001ba: 	cmpq	%rax, %rbx
    000001bd: 	jne	.Ltmp3476 # Offset: 445
    000001c3: 	movaps	%xmm1, %xmm0
    000001c6: 	andps	%xmm7, %xmm0
    000001c9: 	cvtss2sd	%xmm0, %xmm0
    000001cd: 	comisd	DATAat0x385e8(%rip), %xmm0
    000001d5: 	jbe	.Ltmp3477 # Offset: 469
    000001d7: 	divss	%xmm1, %xmm1
.Ltmp3477:
    000001db: 	movsd	DATAat0x38608(%rip), %xmm0
    000001e3: 	cvtss2sd	%xmm1, %xmm1
    000001e7: 	andpd	DATAat0x38630(%rip), %xmm1
    000001ef: 	comisd	%xmm1, %xmm0
    000001f3: 	jbe	.Ltmp3478 # Offset: 499
.Ltmp3475:
    000001f9: 	addl	$0x1, %r12d
    000001fd: 	cmpl	%edx, %r12d
    00000200: 	jl	.Ltmp3479 # Offset: 512
.Ltmp3474:
    00000206: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000214: 	subq	$0x20, %rax
    00000218: 	cmpq	%rax, %rbx
    0000021b: 	je	.Ltmp3480 # Offset: 539
    00000221: 	leaq	0x10(%rbx), %rdi
    00000225: 	movq	0x8(%rbp), %r12
    00000229: 	movq	%rdi, (%rbx)
    0000022c: 	movq	(%rbp), %r13
    00000230: 	movq	%r13, %rax
    00000233: 	addq	%r12, %rax
    00000236: 	je	.Ltmp3481 # Offset: 566
    00000238: 	testq	%r13, %r13
    0000023b: 	je	.Ltmp3482 # Offset: 571
.Ltmp3481:
    00000241: 	movq	%r12, (%rsp)
    00000245: 	cmpq	$0xf, %r12
    00000249: 	ja	.Ltmp3483 # Offset: 585
    0000024f: 	cmpq	$0x1, %r12
    00000253: 	jne	.Ltmp3484 # Offset: 595
    00000259: 	movzbl	(%r13), %eax
    0000025e: 	movb	%al, 0x10(%rbx)
.Ltmp3487:
    00000261: 	movq	%r12, 0x8(%rbx)
    00000265: 	movb	$0x0, (%rdi,%r12)
    0000026a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000271: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000278: 	addq	$0x20, %rax
    0000027c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000283: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000028a: 	je	.Ltmp3485 # Offset: 650
.Ltmp3488:
    00000290: 	movq	-0x20(%rax), %rbp
    00000294: 	callq	clock@PLT # Offset: 660
    00000299: 	movq	%rax, end_time(%rip)
    000002a0: 	movq	0x8(%rsp), %rdx
    000002a5: 	subq	%fs:0x28, %rdx
    000002ae: 	jne	.Ltmp3486 # Offset: 686
    000002b4: 	subq	start_time(%rip), %rax
    000002bb: 	pxor	%xmm0, %xmm0
    000002bf: 	movq	%rbp, %rdi
    000002c2: 	cvtsi2sd	%rax, %xmm0
    000002c7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002cf: 	addq	$0x10, %rsp
    000002d3: 	popq	%rbx
    000002d4: 	popq	%rbp
    000002d5: 	popq	%r12
    000002d7: 	popq	%r13
    000002d9: 	popq	%r14
    000002db: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 731
.Ltmp3478:
    000002e0: 	movl	current_test(%rip), %edx
    000002e6: 	xorl	%eax, %eax
    000002e8: 	movl	$0x1, %edi
    000002ed: 	addl	$0x1, %r12d
    000002f1: 	leaq	DATAat0x381c8(%rip), %rsi
    000002f8: 	callq	__printf_chk@PLT # Offset: 760
    000002fd: 	movl	iterations(%rip), %edx
    00000303: 	movss	DATAat0x38650(%rip), %xmm6
    0000030b: 	movss	DATAat0x38640(%rip), %xmm7
    00000313: 	cmpl	%edx, %r12d
    00000316: 	jl	.Ltmp3479 # Offset: 790
    0000031c: 	jmp	.Ltmp3474 # Offset: 796
.Ltmp3483:
    00000321: 	movq	%rbx, %rdi
    00000324: 	movq	%rsp, %rsi
    00000327: 	xorl	%edx, %edx
    00000329: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 809
    0000032e: 	movq	%rax, (%rbx)
    00000331: 	movq	%rax, %rdi
    00000334: 	movq	(%rsp), %rax
    00000338: 	movq	%rax, 0x10(%rbx)
.Ltmp3489:
    0000033c: 	movq	%r12, %rdx
    0000033f: 	movq	%r13, %rsi
    00000342: 	callq	memcpy@PLT # Offset: 834
    00000347: 	movq	(%rsp), %r12
    0000034b: 	movq	(%rbx), %rdi
    0000034e: 	jmp	.Ltmp3487 # Offset: 846
.Ltmp3480:
    00000353: 	movq	%rbp, %rsi
    00000356: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000035d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 861
    00000362: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000369: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000370: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000377: 	jne	.Ltmp3488 # Offset: 887
.Ltmp3485:
    0000037d: 	movq	-0x8(%rdx), %rax
    00000381: 	addq	$0x200, %rax
    00000387: 	jmp	.Ltmp3488 # Offset: 903
.Ltmp3484:
    0000038c: 	testq	%r12, %r12
    0000038f: 	je	.Ltmp3487 # Offset: 911
    00000395: 	jmp	.Ltmp3489 # Offset: 917
.Ltmp3486:
    00000397: 	callq	__stack_chk_fail@PLT # Offset: 919
.Ltmp3482:
    0000039c: 	leaq	DATAat0x38110(%rip), %rdi
    000003a3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 931
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedIf20custom_algebra_mixedIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16TestOneTypeFloatIfEvd" after disassembly {
  Number      : 120
  State       : disassembled
  Address     : 0x2f1b0
  Size        : 0x4423
  MaxSize     : 0x4430
  Offset      : 0x2f1b0
  Section     : .text
  Orc Section : .local.text._Z16TestOneTypeFloatIfEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0119:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp3490:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp3490 # Offset: 37
    00000027: 	subq	$0xec8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    0000003d: 	movq	%r15, %rdi
    00000040: 	movsd	%xmm0, 0x10(%rsp)
    00000046: 	leaq	0xd0(%rsp), %rsi
    0000004e: 	leaq	0x1b0(%rsp), %rbp
    00000056: 	movq	%fs:0x28, %rax
    0000005f: 	movq	%rax, 0x7eb8(%rsp)
    00000067: 	xorl	%eax, %eax
    00000069: 	movaps	%xmm7, 0xd0(%rsp)
    00000071: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000079: 	leaq	0x100(%rsp), %rax
    00000081: 	movq	%rax, 0xc8(%rsp)
    00000089: 	leaq	0x7eb0(%rsp), %rbx
    00000091: 	movq	%rax, 0xf0(%rsp)
    00000099: 	movl	$0x616f6c66, 0x100(%rsp)
    000000a4: 	movb	$0x74, 0x104(%rsp)
    000000ac: 	movq	$0x5, 0xf8(%rsp)
    000000b8: 	movb	$0x0, 0x105(%rsp)
    000000c0: 	movaps	%xmm7, 0xe0(%rsp)
    000000c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 200
    000000cd: 	movsd	0x10(%rsp), %xmm0
    000000d3: 	pxor	%xmm1, %xmm1
    000000d7: 	movq	%rbp, %rax
    000000da: 	cvtsd2ss	init_value(%rip), %xmm1
    000000e2: 	shufps	$0x0, %xmm1, %xmm1
    000000e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3491:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rbx, %rax
    000000fa: 	jne	.Ltmp3491 # Offset: 250
    000000fc: 	movss	DATAat0x38614(%rip), %xmm7
    00000104: 	pxor	%xmm5, %xmm5
    00000108: 	leaq	0x190(%rsp), %r12
    00000110: 	leaq	0xf0(%rsp), %r13
    00000118: 	cvtsd2ss	%xmm0, %xmm5
    0000011c: 	movaps	%xmm5, %xmm6
    0000011f: 	leaq	DATAat0x381d8(%rip), %rdx
    00000126: 	movq	%r13, %rsi
    00000129: 	addss	%xmm5, %xmm6
    0000012d: 	addss	%xmm5, %xmm7
    00000131: 	movq	%r12, %rdi
    00000134: 	movss	%xmm5, 0x3c(%rsp)
    0000013a: 	movss	%xmm6, 0x80(%rsp)
    00000143: 	divss	%xmm7, %xmm6
    00000147: 	movss	%xmm7, 0x84(%rsp)
    00000150: 	movaps	%xmm6, %xmm0
    00000153: 	addss	%xmm5, %xmm0
    00000157: 	movss	%xmm0, 0x88(%rsp)
    00000160: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 352
    00000165: 	callq	clock@PLT # Offset: 357
    0000016a: 	movl	iterations(%rip), %edx
    00000170: 	movq	%rax, start_time(%rip)
    00000177: 	testl	%edx, %edx
    00000179: 	jle	.Ltmp3492 # Offset: 377
    0000017f: 	movss	DATAat0x38670(%rip), %xmm4
    00000187: 	pxor	%xmm7, %xmm7
    0000018b: 	movss	DATAat0x38640(%rip), %xmm6
    00000193: 	xorl	%r14d, %r14d
    00000196: 	movss	%xmm7, 0x38(%rsp)
    0000019c: 	movsd	DATAat0x385e8(%rip), %xmm7
    000001a4: 	movss	%xmm4, 0x1c(%rsp)
    000001aa: 	movq	DATAat0x38630(%rip), %xmm4
    000001b2: 	movaps	%xmm6, (%rsp)
    000001b6: 	movsd	DATAat0x38608(%rip), %xmm6
    000001be: 	movsd	%xmm7, 0x10(%rsp)
    000001c4: 	movaps	%xmm4, 0x20(%rsp)
    000001c9: 	movsd	%xmm6, 0x30(%rsp)
    000001cf: 	nop # Size: 1
.Ltmp3496:
    000001d0: 	movq	%rbp, %rax
    000001d3: 	pxor	%xmm0, %xmm0
    000001d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3493:
    000001e0: 	movaps	(%rax), %xmm1
    000001e3: 	addq	$0x10, %rax
    000001e7: 	addss	%xmm1, %xmm0
    000001eb: 	movaps	%xmm1, %xmm2
    000001ee: 	shufps	$0x55, %xmm1, %xmm2
    000001f2: 	addss	%xmm0, %xmm2
    000001f6: 	movaps	%xmm1, %xmm0
    000001f9: 	unpckhps	%xmm1, %xmm0
    000001fc: 	shufps	$0xff, %xmm1, %xmm1
    00000200: 	addss	%xmm2, %xmm0
    00000204: 	addss	%xmm1, %xmm0
    00000208: 	cmpq	%rbx, %rax
    0000020b: 	jne	.Ltmp3493 # Offset: 523
    0000020d: 	pxor	%xmm2, %xmm2
    00000211: 	movaps	(%rsp), %xmm6
    00000215: 	movaps	%xmm0, %xmm1
    00000218: 	cvtsd2ss	init_value(%rip), %xmm2
    00000220: 	mulss	0x1c(%rsp), %xmm2
    00000226: 	andps	%xmm0, %xmm6
    00000229: 	subss	%xmm2, %xmm1
    0000022d: 	pxor	%xmm2, %xmm2
    00000231: 	cvtss2sd	%xmm6, %xmm2
    00000235: 	comisd	0x10(%rsp), %xmm2
    0000023b: 	jbe	.Ltmp3494 # Offset: 571
    0000023d: 	divss	%xmm0, %xmm1
.Ltmp3494:
    00000241: 	movsd	0x30(%rsp), %xmm5
    00000247: 	cvtss2sd	%xmm1, %xmm1
    0000024b: 	andpd	0x20(%rsp), %xmm1
    00000251: 	comisd	%xmm1, %xmm5
    00000255: 	jbe	.Ltmp3495 # Offset: 597
.Ltmp3728:
    0000025b: 	addl	$0x1, %r14d
    0000025f: 	cmpl	%edx, %r14d
    00000262: 	jl	.Ltmp3496 # Offset: 610
.Ltmp3492:
    00000268: 	movq	%r12, %rsi
    0000026b: 	movq	%r15, %rdi
    0000026e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 622
    00000273: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000027a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000281: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000288: 	je	.Ltmp3497 # Offset: 648
.Ltmp3729:
    0000028e: 	movq	-0x20(%rax), %r14
    00000292: 	callq	clock@PLT # Offset: 658
    00000297: 	pxor	%xmm0, %xmm0
    0000029b: 	movq	%rax, end_time(%rip)
    000002a2: 	movq	%r14, %rdi
    000002a5: 	subq	start_time(%rip), %rax
    000002ac: 	cvtsi2sd	%rax, %xmm0
    000002b1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002b9: 	callq	_Z13record_resultdPKc # Offset: 697
    000002be: 	movq	0x190(%rsp), %rdi
    000002c6: 	leaq	0x1a0(%rsp), %r14
    000002ce: 	cmpq	%r14, %rdi
    000002d1: 	je	.Ltmp3498 # Offset: 721
    000002d3: 	movq	0x1a0(%rsp), %rax
    000002db: 	leaq	0x1(%rax), %rsi
    000002df: 	callq	_ZdlPvm@PLT # Offset: 735
.Ltmp3498:
    000002e4: 	leaq	DATAat0x381de(%rip), %rdx
    000002eb: 	movq	%r13, %rsi
    000002ee: 	movq	%r12, %rdi
    000002f1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 753
    000002f6: 	callq	clock@PLT # Offset: 758
    000002fb: 	movl	iterations(%rip), %edx
    00000301: 	movq	%rax, start_time(%rip)
    00000308: 	testl	%edx, %edx
    0000030a: 	jle	.Ltmp3499 # Offset: 778
    00000310: 	movss	DATAat0x38670(%rip), %xmm4
    00000318: 	pxor	%xmm7, %xmm7
    0000031c: 	movsd	DATAat0x385e8(%rip), %xmm6
    00000324: 	movl	$0x0, 0x40(%rsp)
    0000032c: 	movss	%xmm7, 0x38(%rsp)
    00000332: 	movq	DATAat0x38630(%rip), %xmm7
    0000033a: 	movss	DATAat0x38640(%rip), %xmm5
    00000342: 	movss	%xmm4, 0x1c(%rsp)
    00000348: 	movsd	DATAat0x38608(%rip), %xmm4
    00000350: 	movaps	%xmm5, (%rsp)
    00000354: 	movsd	%xmm6, 0x10(%rsp)
    0000035a: 	movaps	%xmm7, 0x20(%rsp)
    0000035f: 	movsd	%xmm4, 0x30(%rsp)
    00000365: 	nopl	(%rax) # Size: 3
.Ltmp3503:
    00000368: 	movq	%rbp, %rax
    0000036b: 	pxor	%xmm0, %xmm0
    0000036f: 	pxor	%xmm3, %xmm3
    00000373: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3500:
    00000378: 	movaps	(%rax), %xmm1
    0000037b: 	addq	$0x10, %rax
    0000037f: 	addps	%xmm3, %xmm1
    00000382: 	addss	%xmm1, %xmm0
    00000386: 	movaps	%xmm1, %xmm2
    00000389: 	shufps	$0x55, %xmm1, %xmm2
    0000038d: 	addss	%xmm0, %xmm2
    00000391: 	movaps	%xmm1, %xmm0
    00000394: 	unpckhps	%xmm1, %xmm0
    00000397: 	shufps	$0xff, %xmm1, %xmm1
    0000039b: 	addss	%xmm2, %xmm0
    0000039f: 	addss	%xmm1, %xmm0
    000003a3: 	cmpq	%rbx, %rax
    000003a6: 	jne	.Ltmp3500 # Offset: 934
    000003a8: 	pxor	%xmm2, %xmm2
    000003ac: 	movaps	(%rsp), %xmm6
    000003b0: 	movaps	%xmm0, %xmm1
    000003b3: 	cvtsd2ss	init_value(%rip), %xmm2
    000003bb: 	addss	0x38(%rsp), %xmm2
    000003c1: 	mulss	0x1c(%rsp), %xmm2
    000003c7: 	andps	%xmm0, %xmm6
    000003ca: 	subss	%xmm2, %xmm1
    000003ce: 	pxor	%xmm2, %xmm2
    000003d2: 	cvtss2sd	%xmm6, %xmm2
    000003d6: 	comisd	0x10(%rsp), %xmm2
    000003dc: 	jbe	.Ltmp3501 # Offset: 988
    000003de: 	divss	%xmm0, %xmm1
.Ltmp3501:
    000003e2: 	movsd	0x30(%rsp), %xmm4
    000003e8: 	cvtss2sd	%xmm1, %xmm1
    000003ec: 	andpd	0x20(%rsp), %xmm1
    000003f2: 	comisd	%xmm1, %xmm4
    000003f6: 	jbe	.Ltmp3502 # Offset: 1014
.Ltmp3727:
    000003fc: 	addl	$0x1, 0x40(%rsp)
    00000401: 	movl	0x40(%rsp), %eax
    00000405: 	cmpl	%edx, %eax
    00000407: 	jl	.Ltmp3503 # Offset: 1031
.Ltmp3499:
    0000040d: 	movq	%r12, %rsi
    00000410: 	movq	%r15, %rdi
    00000413: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1043
    00000418: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000041f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000426: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000042d: 	je	.Ltmp3504 # Offset: 1069
.Ltmp3757:
    00000433: 	movq	-0x20(%rax), %rdi
    00000437: 	movq	%rdi, 0x10(%rsp)
    0000043c: 	callq	clock@PLT # Offset: 1084
    00000441: 	movq	0x10(%rsp), %rdi
    00000446: 	pxor	%xmm0, %xmm0
    0000044a: 	movq	%rax, end_time(%rip)
    00000451: 	subq	start_time(%rip), %rax
    00000458: 	cvtsi2sd	%rax, %xmm0
    0000045d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000465: 	callq	_Z13record_resultdPKc # Offset: 1125
    0000046a: 	movq	0x190(%rsp), %rdi
    00000472: 	cmpq	%r14, %rdi
    00000475: 	je	.Ltmp3505 # Offset: 1141
    00000477: 	movq	0x1a0(%rsp), %rax
    0000047f: 	leaq	0x1(%rax), %rsi
    00000483: 	callq	_ZdlPvm@PLT # Offset: 1155
.Ltmp3505:
    00000488: 	leaq	DATAat0x381e8(%rip), %rdx
    0000048f: 	movq	%r13, %rsi
    00000492: 	movq	%r12, %rdi
    00000495: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1173
    0000049a: 	callq	clock@PLT # Offset: 1178
    0000049f: 	movl	iterations(%rip), %edx
    000004a5: 	movq	%rax, start_time(%rip)
    000004ac: 	testl	%edx, %edx
    000004ae: 	jle	.Ltmp3506 # Offset: 1198
    000004b4: 	movss	DATAat0x38670(%rip), %xmm6
    000004bc: 	pxor	%xmm5, %xmm5
    000004c0: 	movsd	DATAat0x385e8(%rip), %xmm4
    000004c8: 	movl	$0x0, 0x40(%rsp)
    000004d0: 	movss	%xmm5, 0x38(%rsp)
    000004d6: 	movq	DATAat0x38630(%rip), %xmm5
    000004de: 	movss	DATAat0x38640(%rip), %xmm7
    000004e6: 	movss	%xmm6, 0x1c(%rsp)
    000004ec: 	movsd	DATAat0x38608(%rip), %xmm6
    000004f4: 	movaps	%xmm7, (%rsp)
    000004f8: 	movsd	%xmm4, 0x10(%rsp)
    000004fe: 	movaps	%xmm5, 0x20(%rsp)
    00000503: 	movsd	%xmm6, 0x30(%rsp)
    00000509: 	nopl	(%rax) # Size: 7
.Ltmp3510:
    00000510: 	movq	%rbp, %rax
    00000513: 	pxor	%xmm0, %xmm0
    00000517: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3507:
    00000520: 	movaps	(%rax), %xmm1
    00000523: 	addq	$0x10, %rax
    00000527: 	addss	%xmm1, %xmm0
    0000052b: 	movaps	%xmm1, %xmm2
    0000052e: 	shufps	$0x55, %xmm1, %xmm2
    00000532: 	addss	%xmm0, %xmm2
    00000536: 	movaps	%xmm1, %xmm0
    00000539: 	unpckhps	%xmm1, %xmm0
    0000053c: 	shufps	$0xff, %xmm1, %xmm1
    00000540: 	addss	%xmm2, %xmm0
    00000544: 	addss	%xmm1, %xmm0
    00000548: 	cmpq	%rbx, %rax
    0000054b: 	jne	.Ltmp3507 # Offset: 1355
    0000054d: 	pxor	%xmm2, %xmm2
    00000551: 	movaps	(%rsp), %xmm5
    00000555: 	movaps	%xmm0, %xmm1
    00000558: 	cvtsd2ss	init_value(%rip), %xmm2
    00000560: 	mulss	0x1c(%rsp), %xmm2
    00000566: 	andps	%xmm0, %xmm5
    00000569: 	subss	%xmm2, %xmm1
    0000056d: 	pxor	%xmm2, %xmm2
    00000571: 	cvtss2sd	%xmm5, %xmm2
    00000575: 	comisd	0x10(%rsp), %xmm2
    0000057b: 	jbe	.Ltmp3508 # Offset: 1403
    0000057d: 	divss	%xmm0, %xmm1
.Ltmp3508:
    00000581: 	movsd	0x30(%rsp), %xmm5
    00000587: 	cvtss2sd	%xmm1, %xmm1
    0000058b: 	andpd	0x20(%rsp), %xmm1
    00000591: 	comisd	%xmm1, %xmm5
    00000595: 	jbe	.Ltmp3509 # Offset: 1429
.Ltmp3726:
    0000059b: 	addl	$0x1, 0x40(%rsp)
    000005a0: 	movl	0x40(%rsp), %eax
    000005a4: 	cmpl	%edx, %eax
    000005a6: 	jl	.Ltmp3510 # Offset: 1446
.Ltmp3506:
    000005ac: 	movq	%r12, %rsi
    000005af: 	movq	%r15, %rdi
    000005b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1458
    000005b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005be: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005cc: 	je	.Ltmp3511 # Offset: 1484
.Ltmp3756:
    000005d2: 	movq	-0x20(%rax), %rdi
    000005d6: 	movq	%rdi, 0x10(%rsp)
    000005db: 	callq	clock@PLT # Offset: 1499
    000005e0: 	movq	0x10(%rsp), %rdi
    000005e5: 	pxor	%xmm0, %xmm0
    000005e9: 	movq	%rax, end_time(%rip)
    000005f0: 	subq	start_time(%rip), %rax
    000005f7: 	cvtsi2sd	%rax, %xmm0
    000005fc: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000604: 	callq	_Z13record_resultdPKc # Offset: 1540
    00000609: 	movq	0x190(%rsp), %rdi
    00000611: 	cmpq	%r14, %rdi
    00000614: 	je	.Ltmp3512 # Offset: 1556
    00000616: 	movq	0x1a0(%rsp), %rax
    0000061e: 	leaq	0x1(%rax), %rsi
    00000622: 	callq	_ZdlPvm@PLT # Offset: 1570
.Ltmp3512:
    00000627: 	leaq	DATAat0x381f7(%rip), %rdx
    0000062e: 	movq	%r13, %rsi
    00000631: 	movq	%r12, %rdi
    00000634: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1588
    00000639: 	callq	clock@PLT # Offset: 1593
    0000063e: 	movl	iterations(%rip), %edx
    00000644: 	movq	%rax, start_time(%rip)
    0000064b: 	testl	%edx, %edx
    0000064d: 	jle	.Ltmp3513 # Offset: 1613
    00000653: 	movss	DATAat0x38670(%rip), %xmm4
    0000065b: 	pxor	%xmm7, %xmm7
    0000065f: 	movsd	DATAat0x385e8(%rip), %xmm6
    00000667: 	movl	$0x0, 0x40(%rsp)
    0000066f: 	movss	%xmm7, 0x38(%rsp)
    00000675: 	movq	DATAat0x38630(%rip), %xmm7
    0000067d: 	movss	DATAat0x38640(%rip), %xmm5
    00000685: 	movss	%xmm4, 0x1c(%rsp)
    0000068b: 	movsd	DATAat0x38608(%rip), %xmm4
    00000693: 	movaps	%xmm5, (%rsp)
    00000697: 	movsd	%xmm6, 0x10(%rsp)
    0000069d: 	movaps	%xmm7, 0x20(%rsp)
    000006a2: 	movsd	%xmm4, 0x30(%rsp)
    000006a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3517:
    000006b0: 	movq	%rbp, %rax
    000006b3: 	pxor	%xmm1, %xmm1
    000006b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3514:
    000006c0: 	movaps	(%rax), %xmm0
    000006c3: 	addq	$0x10, %rax
    000006c7: 	subss	%xmm0, %xmm1
    000006cb: 	movaps	%xmm0, %xmm2
    000006ce: 	shufps	$0x55, %xmm0, %xmm2
    000006d2: 	subss	%xmm2, %xmm1
    000006d6: 	movaps	%xmm0, %xmm2
    000006d9: 	unpckhps	%xmm0, %xmm2
    000006dc: 	shufps	$0xff, %xmm0, %xmm0
    000006e0: 	subss	%xmm2, %xmm1
    000006e4: 	subss	%xmm0, %xmm1
    000006e8: 	cmpq	%rbx, %rax
    000006eb: 	jne	.Ltmp3514 # Offset: 1771
    000006ed: 	movaps	(%rsp), %xmm4
    000006f1: 	pxor	%xmm0, %xmm0
    000006f5: 	pxor	%xmm2, %xmm2
    000006f9: 	cvtsd2ss	init_value(%rip), %xmm0
    00000701: 	mulss	0x1c(%rsp), %xmm0
    00000707: 	andps	%xmm1, %xmm4
    0000070a: 	cvtss2sd	%xmm4, %xmm2
    0000070e: 	comisd	0x10(%rsp), %xmm2
    00000714: 	addss	%xmm1, %xmm0
    00000718: 	jbe	.Ltmp3515 # Offset: 1816
    0000071a: 	divss	%xmm1, %xmm0
.Ltmp3515:
    0000071e: 	movsd	0x30(%rsp), %xmm6
    00000724: 	cvtss2sd	%xmm0, %xmm0
    00000728: 	andpd	0x20(%rsp), %xmm0
    0000072e: 	comisd	%xmm0, %xmm6
    00000732: 	jbe	.Ltmp3516 # Offset: 1842
.Ltmp3725:
    00000738: 	addl	$0x1, 0x40(%rsp)
    0000073d: 	movl	0x40(%rsp), %eax
    00000741: 	cmpl	%edx, %eax
    00000743: 	jl	.Ltmp3517 # Offset: 1859
.Ltmp3513:
    00000749: 	movq	%r12, %rsi
    0000074c: 	movq	%r15, %rdi
    0000074f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1871
    00000754: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000075b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000762: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000769: 	je	.Ltmp3518 # Offset: 1897
.Ltmp3755:
    0000076f: 	movq	-0x20(%rax), %rdi
    00000773: 	movq	%rdi, 0x10(%rsp)
    00000778: 	callq	clock@PLT # Offset: 1912
    0000077d: 	movq	0x10(%rsp), %rdi
    00000782: 	pxor	%xmm0, %xmm0
    00000786: 	movq	%rax, end_time(%rip)
    0000078d: 	subq	start_time(%rip), %rax
    00000794: 	cvtsi2sd	%rax, %xmm0
    00000799: 	divsd	DATAat0x385e0(%rip), %xmm0
    000007a1: 	callq	_Z13record_resultdPKc # Offset: 1953
    000007a6: 	movq	0x190(%rsp), %rdi
    000007ae: 	cmpq	%r14, %rdi
    000007b1: 	je	.Ltmp3519 # Offset: 1969
    000007b3: 	movq	0x1a0(%rsp), %rax
    000007bb: 	leaq	0x1(%rax), %rsi
    000007bf: 	callq	_ZdlPvm@PLT # Offset: 1983
.Ltmp3519:
    000007c4: 	leaq	DATAat0x381ff(%rip), %rdx
    000007cb: 	movq	%r13, %rsi
    000007ce: 	movq	%r12, %rdi
    000007d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2001
    000007d6: 	callq	clock@PLT # Offset: 2006
    000007db: 	movl	iterations(%rip), %edx
    000007e1: 	movq	%rax, start_time(%rip)
    000007e8: 	testl	%edx, %edx
    000007ea: 	jle	.Ltmp3520 # Offset: 2026
    000007f0: 	movss	DATAat0x38670(%rip), %xmm6
    000007f8: 	pxor	%xmm5, %xmm5
    000007fc: 	movsd	DATAat0x385e8(%rip), %xmm4
    00000804: 	movl	$0x0, 0x40(%rsp)
    0000080c: 	movss	%xmm5, 0x38(%rsp)
    00000812: 	movq	DATAat0x38630(%rip), %xmm5
    0000081a: 	movss	DATAat0x38640(%rip), %xmm7
    00000822: 	movss	%xmm6, 0x1c(%rsp)
    00000828: 	movsd	DATAat0x38608(%rip), %xmm6
    00000830: 	movaps	%xmm7, (%rsp)
    00000834: 	movsd	%xmm4, 0x10(%rsp)
    0000083a: 	movaps	%xmm5, 0x20(%rsp)
    0000083f: 	movsd	%xmm6, 0x30(%rsp)
    00000845: 	nopl	(%rax) # Size: 3
.Ltmp3524:
    00000848: 	movq	%rbp, %rax
    0000084b: 	pxor	%xmm0, %xmm0
    0000084f: 	nop # Size: 1
.Ltmp3521:
    00000850: 	movaps	(%rax), %xmm1
    00000853: 	addq	$0x10, %rax
    00000857: 	addss	%xmm1, %xmm0
    0000085b: 	movaps	%xmm1, %xmm2
    0000085e: 	shufps	$0x55, %xmm1, %xmm2
    00000862: 	addss	%xmm0, %xmm2
    00000866: 	movaps	%xmm1, %xmm0
    00000869: 	unpckhps	%xmm1, %xmm0
    0000086c: 	shufps	$0xff, %xmm1, %xmm1
    00000870: 	addss	%xmm2, %xmm0
    00000874: 	addss	%xmm1, %xmm0
    00000878: 	cmpq	%rbx, %rax
    0000087b: 	jne	.Ltmp3521 # Offset: 2171
    0000087d: 	pxor	%xmm2, %xmm2
    00000881: 	movaps	(%rsp), %xmm6
    00000885: 	movaps	%xmm0, %xmm1
    00000888: 	cvtsd2ss	init_value(%rip), %xmm2
    00000890: 	mulss	0x1c(%rsp), %xmm2
    00000896: 	andps	%xmm0, %xmm6
    00000899: 	subss	%xmm2, %xmm1
    0000089d: 	pxor	%xmm2, %xmm2
    000008a1: 	cvtss2sd	%xmm6, %xmm2
    000008a5: 	comisd	0x10(%rsp), %xmm2
    000008ab: 	jbe	.Ltmp3522 # Offset: 2219
    000008ad: 	divss	%xmm0, %xmm1
.Ltmp3522:
    000008b1: 	movsd	0x30(%rsp), %xmm4
    000008b7: 	cvtss2sd	%xmm1, %xmm1
    000008bb: 	andpd	0x20(%rsp), %xmm1
    000008c1: 	comisd	%xmm1, %xmm4
    000008c5: 	jbe	.Ltmp3523 # Offset: 2245
.Ltmp3724:
    000008cb: 	addl	$0x1, 0x40(%rsp)
    000008d0: 	movl	0x40(%rsp), %eax
    000008d4: 	cmpl	%edx, %eax
    000008d6: 	jl	.Ltmp3524 # Offset: 2262
.Ltmp3520:
    000008dc: 	movq	%r12, %rsi
    000008df: 	movq	%r15, %rdi
    000008e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2274
    000008e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008fc: 	je	.Ltmp3525 # Offset: 2300
.Ltmp3754:
    00000902: 	movq	-0x20(%rax), %rdi
    00000906: 	movq	%rdi, 0x10(%rsp)
    0000090b: 	callq	clock@PLT # Offset: 2315
    00000910: 	movq	0x10(%rsp), %rdi
    00000915: 	pxor	%xmm0, %xmm0
    00000919: 	movq	%rax, end_time(%rip)
    00000920: 	subq	start_time(%rip), %rax
    00000927: 	cvtsi2sd	%rax, %xmm0
    0000092c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000934: 	callq	_Z13record_resultdPKc # Offset: 2356
    00000939: 	movq	0x190(%rsp), %rdi
    00000941: 	cmpq	%r14, %rdi
    00000944: 	je	.Ltmp3526 # Offset: 2372
    00000946: 	movq	0x1a0(%rsp), %rax
    0000094e: 	leaq	0x1(%rax), %rsi
    00000952: 	callq	_ZdlPvm@PLT # Offset: 2386
.Ltmp3526:
    00000957: 	leaq	DATAat0x3820d(%rip), %rdx
    0000095e: 	movq	%r13, %rsi
    00000961: 	movq	%r12, %rdi
    00000964: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2404
    00000969: 	callq	clock@PLT # Offset: 2409
    0000096e: 	movl	iterations(%rip), %edx
    00000974: 	movq	%rax, start_time(%rip)
    0000097b: 	testl	%edx, %edx
    0000097d: 	jle	.Ltmp3527 # Offset: 2429
    00000983: 	movss	DATAat0x38670(%rip), %xmm4
    0000098b: 	pxor	%xmm7, %xmm7
    0000098f: 	movsd	DATAat0x385e8(%rip), %xmm6
    00000997: 	movl	$0x0, 0x40(%rsp)
    0000099f: 	movss	%xmm7, 0x38(%rsp)
    000009a5: 	movq	DATAat0x38630(%rip), %xmm7
    000009ad: 	movss	DATAat0x38640(%rip), %xmm5
    000009b5: 	movss	%xmm4, 0x1c(%rsp)
    000009bb: 	movsd	DATAat0x38608(%rip), %xmm4
    000009c3: 	movaps	%xmm5, (%rsp)
    000009c7: 	movsd	%xmm6, 0x10(%rsp)
    000009cd: 	movaps	%xmm7, 0x20(%rsp)
    000009d2: 	movsd	%xmm4, 0x30(%rsp)
    000009d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3531:
    000009e0: 	movq	%rbp, %rax
    000009e3: 	pxor	%xmm0, %xmm0
    000009e7: 	pxor	%xmm3, %xmm3
    000009eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3528:
    000009f0: 	movaps	%xmm3, %xmm1
    000009f3: 	subps	(%rax), %xmm1
    000009f6: 	addq	$0x10, %rax
    000009fa: 	addss	%xmm1, %xmm0
    000009fe: 	movaps	%xmm1, %xmm2
    00000a01: 	shufps	$0x55, %xmm1, %xmm2
    00000a05: 	addss	%xmm0, %xmm2
    00000a09: 	movaps	%xmm1, %xmm0
    00000a0c: 	unpckhps	%xmm1, %xmm0
    00000a0f: 	shufps	$0xff, %xmm1, %xmm1
    00000a13: 	addss	%xmm2, %xmm0
    00000a17: 	addss	%xmm1, %xmm0
    00000a1b: 	cmpq	%rbx, %rax
    00000a1e: 	jne	.Ltmp3528 # Offset: 2590
    00000a20: 	movss	0x38(%rsp), %xmm2
    00000a26: 	pxor	%xmm1, %xmm1
    00000a2a: 	movaps	(%rsp), %xmm5
    00000a2e: 	cvtsd2ss	init_value(%rip), %xmm1
    00000a36: 	subss	%xmm1, %xmm2
    00000a3a: 	mulss	0x1c(%rsp), %xmm2
    00000a40: 	movaps	%xmm0, %xmm1
    00000a43: 	andps	%xmm0, %xmm5
    00000a46: 	subss	%xmm2, %xmm1
    00000a4a: 	pxor	%xmm2, %xmm2
    00000a4e: 	cvtss2sd	%xmm5, %xmm2
    00000a52: 	comisd	0x10(%rsp), %xmm2
    00000a58: 	jbe	.Ltmp3529 # Offset: 2648
    00000a5a: 	divss	%xmm0, %xmm1
.Ltmp3529:
    00000a5e: 	movsd	0x30(%rsp), %xmm5
    00000a64: 	cvtss2sd	%xmm1, %xmm1
    00000a68: 	andpd	0x20(%rsp), %xmm1
    00000a6e: 	comisd	%xmm1, %xmm5
    00000a72: 	jbe	.Ltmp3530 # Offset: 2674
.Ltmp3723:
    00000a78: 	addl	$0x1, 0x40(%rsp)
    00000a7d: 	movl	0x40(%rsp), %eax
    00000a81: 	cmpl	%edx, %eax
    00000a83: 	jl	.Ltmp3531 # Offset: 2691
.Ltmp3527:
    00000a89: 	movq	%r12, %rsi
    00000a8c: 	movq	%r15, %rdi
    00000a8f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2703
    00000a94: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a9b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000aa2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000aa9: 	je	.Ltmp3532 # Offset: 2729
.Ltmp3753:
    00000aaf: 	movq	-0x20(%rax), %rdi
    00000ab3: 	movq	%rdi, 0x10(%rsp)
    00000ab8: 	callq	clock@PLT # Offset: 2744
    00000abd: 	movq	0x10(%rsp), %rdi
    00000ac2: 	pxor	%xmm0, %xmm0
    00000ac6: 	movq	%rax, end_time(%rip)
    00000acd: 	subq	start_time(%rip), %rax
    00000ad4: 	cvtsi2sd	%rax, %xmm0
    00000ad9: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000ae1: 	callq	_Z13record_resultdPKc # Offset: 2785
    00000ae6: 	movq	0x190(%rsp), %rdi
    00000aee: 	cmpq	%r14, %rdi
    00000af1: 	je	.Ltmp3533 # Offset: 2801
    00000af3: 	movq	0x1a0(%rsp), %rax
    00000afb: 	leaq	0x1(%rax), %rsi
    00000aff: 	callq	_ZdlPvm@PLT # Offset: 2815
.Ltmp3533:
    00000b04: 	leaq	DATAat0x38219(%rip), %rdx
    00000b0b: 	movq	%r13, %rsi
    00000b0e: 	movq	%r12, %rdi
    00000b11: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2833
    00000b16: 	callq	clock@PLT # Offset: 2838
    00000b1b: 	movl	iterations(%rip), %edx
    00000b21: 	movq	%rax, start_time(%rip)
    00000b28: 	testl	%edx, %edx
    00000b2a: 	jle	.Ltmp3534 # Offset: 2858
    00000b30: 	movss	DATAat0x38670(%rip), %xmm6
    00000b38: 	pxor	%xmm5, %xmm5
    00000b3c: 	movsd	DATAat0x385e8(%rip), %xmm4
    00000b44: 	movl	$0x0, 0x40(%rsp)
    00000b4c: 	movss	%xmm5, 0x38(%rsp)
    00000b52: 	movq	DATAat0x38630(%rip), %xmm5
    00000b5a: 	movss	DATAat0x38640(%rip), %xmm7
    00000b62: 	movss	%xmm6, 0x1c(%rsp)
    00000b68: 	movsd	DATAat0x38608(%rip), %xmm6
    00000b70: 	movaps	%xmm7, (%rsp)
    00000b74: 	movsd	%xmm4, 0x10(%rsp)
    00000b7a: 	movaps	%xmm5, 0x20(%rsp)
    00000b7f: 	movsd	%xmm6, 0x30(%rsp)
    00000b85: 	nopl	(%rax) # Size: 3
.Ltmp3538:
    00000b88: 	movq	%rbp, %rax
    00000b8b: 	pxor	%xmm0, %xmm0
    00000b8f: 	nop # Size: 1
.Ltmp3535:
    00000b90: 	movaps	(%rax), %xmm1
    00000b93: 	addq	$0x10, %rax
    00000b97: 	addss	%xmm1, %xmm0
    00000b9b: 	movaps	%xmm1, %xmm2
    00000b9e: 	shufps	$0x55, %xmm1, %xmm2
    00000ba2: 	addss	%xmm0, %xmm2
    00000ba6: 	movaps	%xmm1, %xmm0
    00000ba9: 	unpckhps	%xmm1, %xmm0
    00000bac: 	shufps	$0xff, %xmm1, %xmm1
    00000bb0: 	addss	%xmm2, %xmm0
    00000bb4: 	addss	%xmm1, %xmm0
    00000bb8: 	cmpq	%rbx, %rax
    00000bbb: 	jne	.Ltmp3535 # Offset: 3003
    00000bbd: 	pxor	%xmm2, %xmm2
    00000bc1: 	movaps	(%rsp), %xmm4
    00000bc5: 	movaps	%xmm0, %xmm1
    00000bc8: 	cvtsd2ss	init_value(%rip), %xmm2
    00000bd0: 	mulss	0x1c(%rsp), %xmm2
    00000bd6: 	andps	%xmm0, %xmm4
    00000bd9: 	subss	%xmm2, %xmm1
    00000bdd: 	pxor	%xmm2, %xmm2
    00000be1: 	cvtss2sd	%xmm4, %xmm2
    00000be5: 	comisd	0x10(%rsp), %xmm2
    00000beb: 	jbe	.Ltmp3536 # Offset: 3051
    00000bed: 	divss	%xmm0, %xmm1
.Ltmp3536:
    00000bf1: 	movsd	0x30(%rsp), %xmm6
    00000bf7: 	cvtss2sd	%xmm1, %xmm1
    00000bfb: 	andpd	0x20(%rsp), %xmm1
    00000c01: 	comisd	%xmm1, %xmm6
    00000c05: 	jbe	.Ltmp3537 # Offset: 3077
.Ltmp3722:
    00000c0b: 	addl	$0x1, 0x40(%rsp)
    00000c10: 	movl	0x40(%rsp), %eax
    00000c14: 	cmpl	%edx, %eax
    00000c16: 	jl	.Ltmp3538 # Offset: 3094
.Ltmp3534:
    00000c1c: 	movq	%r12, %rsi
    00000c1f: 	movq	%r15, %rdi
    00000c22: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3106
    00000c27: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c2e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c35: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c3c: 	je	.Ltmp3539 # Offset: 3132
.Ltmp3752:
    00000c42: 	movq	-0x20(%rax), %rdi
    00000c46: 	movq	%rdi, 0x10(%rsp)
    00000c4b: 	callq	clock@PLT # Offset: 3147
    00000c50: 	movq	0x10(%rsp), %rdi
    00000c55: 	pxor	%xmm0, %xmm0
    00000c59: 	movq	%rax, end_time(%rip)
    00000c60: 	subq	start_time(%rip), %rax
    00000c67: 	cvtsi2sd	%rax, %xmm0
    00000c6c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c74: 	callq	_Z13record_resultdPKc # Offset: 3188
    00000c79: 	movq	0x190(%rsp), %rdi
    00000c81: 	cmpq	%r14, %rdi
    00000c84: 	je	.Ltmp3540 # Offset: 3204
    00000c86: 	movq	0x1a0(%rsp), %rax
    00000c8e: 	leaq	0x1(%rax), %rsi
    00000c92: 	callq	_ZdlPvm@PLT # Offset: 3218
.Ltmp3540:
    00000c97: 	leaq	DATAat0x38224(%rip), %rdx
    00000c9e: 	movq	%r13, %rsi
    00000ca1: 	movq	%r12, %rdi
    00000ca4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3236
    00000ca9: 	callq	clock@PLT # Offset: 3241
    00000cae: 	movl	iterations(%rip), %edx
    00000cb4: 	movq	%rax, start_time(%rip)
    00000cbb: 	testl	%edx, %edx
    00000cbd: 	jle	.Ltmp3541 # Offset: 3261
    00000cc3: 	movss	DATAat0x38670(%rip), %xmm4
    00000ccb: 	pxor	%xmm7, %xmm7
    00000ccf: 	movsd	DATAat0x385e8(%rip), %xmm6
    00000cd7: 	movl	$0x0, 0x40(%rsp)
    00000cdf: 	movss	%xmm7, 0x38(%rsp)
    00000ce5: 	movq	DATAat0x38630(%rip), %xmm7
    00000ced: 	movss	DATAat0x38640(%rip), %xmm5
    00000cf5: 	movss	%xmm4, 0x1c(%rsp)
    00000cfb: 	movsd	DATAat0x38608(%rip), %xmm4
    00000d03: 	movaps	%xmm5, (%rsp)
    00000d07: 	movsd	%xmm6, 0x10(%rsp)
    00000d0d: 	movaps	%xmm7, 0x20(%rsp)
    00000d12: 	movsd	%xmm4, 0x30(%rsp)
    00000d18: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3545:
    00000d20: 	movq	%rbp, %rax
    00000d23: 	pxor	%xmm0, %xmm0
    00000d27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3542:
    00000d30: 	movaps	(%rax), %xmm1
    00000d33: 	addq	$0x10, %rax
    00000d37: 	addss	%xmm1, %xmm0
    00000d3b: 	movaps	%xmm1, %xmm2
    00000d3e: 	shufps	$0x55, %xmm1, %xmm2
    00000d42: 	addss	%xmm0, %xmm2
    00000d46: 	movaps	%xmm1, %xmm0
    00000d49: 	unpckhps	%xmm1, %xmm0
    00000d4c: 	shufps	$0xff, %xmm1, %xmm1
    00000d50: 	addss	%xmm2, %xmm0
    00000d54: 	addss	%xmm1, %xmm0
    00000d58: 	cmpq	%rbx, %rax
    00000d5b: 	jne	.Ltmp3542 # Offset: 3419
    00000d5d: 	pxor	%xmm2, %xmm2
    00000d61: 	movaps	(%rsp), %xmm6
    00000d65: 	movaps	%xmm0, %xmm1
    00000d68: 	cvtsd2ss	init_value(%rip), %xmm2
    00000d70: 	mulss	0x1c(%rsp), %xmm2
    00000d76: 	andps	%xmm0, %xmm6
    00000d79: 	subss	%xmm2, %xmm1
    00000d7d: 	pxor	%xmm2, %xmm2
    00000d81: 	cvtss2sd	%xmm6, %xmm2
    00000d85: 	comisd	0x10(%rsp), %xmm2
    00000d8b: 	jbe	.Ltmp3543 # Offset: 3467
    00000d8d: 	divss	%xmm0, %xmm1
.Ltmp3543:
    00000d91: 	movsd	0x30(%rsp), %xmm4
    00000d97: 	cvtss2sd	%xmm1, %xmm1
    00000d9b: 	andpd	0x20(%rsp), %xmm1
    00000da1: 	comisd	%xmm1, %xmm4
    00000da5: 	jbe	.Ltmp3544 # Offset: 3493
.Ltmp3721:
    00000dab: 	addl	$0x1, 0x40(%rsp)
    00000db0: 	movl	0x40(%rsp), %eax
    00000db4: 	cmpl	%edx, %eax
    00000db6: 	jl	.Ltmp3545 # Offset: 3510
.Ltmp3541:
    00000dbc: 	movq	%r12, %rsi
    00000dbf: 	movq	%r15, %rdi
    00000dc2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3522
    00000dc7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dce: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000dd5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ddc: 	je	.Ltmp3546 # Offset: 3548
.Ltmp3751:
    00000de2: 	movq	-0x20(%rax), %rdi
    00000de6: 	movq	%rdi, 0x10(%rsp)
    00000deb: 	callq	clock@PLT # Offset: 3563
    00000df0: 	movq	0x10(%rsp), %rdi
    00000df5: 	pxor	%xmm0, %xmm0
    00000df9: 	movq	%rax, end_time(%rip)
    00000e00: 	subq	start_time(%rip), %rax
    00000e07: 	cvtsi2sd	%rax, %xmm0
    00000e0c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e14: 	callq	_Z13record_resultdPKc # Offset: 3604
    00000e19: 	movq	0x190(%rsp), %rdi
    00000e21: 	cmpq	%r14, %rdi
    00000e24: 	je	.Ltmp3547 # Offset: 3620
    00000e26: 	movq	0x1a0(%rsp), %rax
    00000e2e: 	leaq	0x1(%rax), %rsi
    00000e32: 	callq	_ZdlPvm@PLT # Offset: 3634
.Ltmp3547:
    00000e37: 	leaq	DATAat0x38266(%rip), %rdx
    00000e3e: 	movq	%r13, %rsi
    00000e41: 	movq	%r12, %rdi
    00000e44: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3652
    00000e49: 	callq	clock@PLT # Offset: 3657
    00000e4e: 	movl	iterations(%rip), %edx
    00000e54: 	movq	%rax, start_time(%rip)
    00000e5b: 	testl	%edx, %edx
    00000e5d: 	jle	.Ltmp3548 # Offset: 3677
    00000e63: 	movss	DATAat0x38670(%rip), %xmm6
    00000e6b: 	pxor	%xmm5, %xmm5
    00000e6f: 	movsd	DATAat0x385e8(%rip), %xmm4
    00000e77: 	movl	$0x0, 0x40(%rsp)
    00000e7f: 	movss	%xmm5, 0x38(%rsp)
    00000e85: 	movq	DATAat0x38630(%rip), %xmm5
    00000e8d: 	movss	DATAat0x38640(%rip), %xmm7
    00000e95: 	movss	%xmm6, 0x1c(%rsp)
    00000e9b: 	movsd	DATAat0x38608(%rip), %xmm6
    00000ea3: 	movaps	%xmm7, (%rsp)
    00000ea7: 	movsd	%xmm4, 0x10(%rsp)
    00000ead: 	movaps	%xmm5, 0x20(%rsp)
    00000eb2: 	movsd	%xmm6, 0x30(%rsp)
    00000eb8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3552:
    00000ec0: 	movq	%rbp, %rax
    00000ec3: 	pxor	%xmm1, %xmm1
    00000ec7: 	pxor	%xmm3, %xmm3
    00000ecb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3549:
    00000ed0: 	movaps	(%rax), %xmm2
    00000ed3: 	movaps	%xmm3, %xmm0
    00000ed6: 	addq	$0x10, %rax
    00000eda: 	addps	%xmm3, %xmm2
    00000edd: 	subps	%xmm2, %xmm0
    00000ee0: 	subss	%xmm0, %xmm1
    00000ee4: 	movaps	%xmm0, %xmm2
    00000ee7: 	shufps	$0x55, %xmm0, %xmm2
    00000eeb: 	subss	%xmm2, %xmm1
    00000eef: 	movaps	%xmm0, %xmm2
    00000ef2: 	unpckhps	%xmm0, %xmm2
    00000ef5: 	shufps	$0xff, %xmm0, %xmm0
    00000ef9: 	subss	%xmm2, %xmm1
    00000efd: 	subss	%xmm0, %xmm1
    00000f01: 	cmpq	%rbx, %rax
    00000f04: 	jne	.Ltmp3549 # Offset: 3844
    00000f06: 	movss	0x38(%rsp), %xmm5
    00000f0c: 	pxor	%xmm2, %xmm2
    00000f10: 	movss	0x1c(%rsp), %xmm0
    00000f16: 	cvtsd2ss	init_value(%rip), %xmm2
    00000f1e: 	movaps	(%rsp), %xmm4
    00000f22: 	addss	%xmm5, %xmm2
    00000f26: 	andps	%xmm1, %xmm4
    00000f29: 	subss	%xmm2, %xmm5
    00000f2d: 	pxor	%xmm2, %xmm2
    00000f31: 	cvtss2sd	%xmm4, %xmm2
    00000f35: 	comisd	0x10(%rsp), %xmm2
    00000f3b: 	mulss	%xmm5, %xmm0
    00000f3f: 	addss	%xmm1, %xmm0
    00000f43: 	jbe	.Ltmp3550 # Offset: 3907
    00000f45: 	divss	%xmm1, %xmm0
.Ltmp3550:
    00000f49: 	movsd	0x30(%rsp), %xmm5
    00000f4f: 	cvtss2sd	%xmm0, %xmm0
    00000f53: 	andpd	0x20(%rsp), %xmm0
    00000f59: 	comisd	%xmm0, %xmm5
    00000f5d: 	jbe	.Ltmp3551 # Offset: 3933
.Ltmp3720:
    00000f63: 	addl	$0x1, 0x40(%rsp)
    00000f68: 	movl	0x40(%rsp), %eax
    00000f6c: 	cmpl	%edx, %eax
    00000f6e: 	jl	.Ltmp3552 # Offset: 3950
.Ltmp3548:
    00000f74: 	movq	%r12, %rsi
    00000f77: 	movq	%r15, %rdi
    00000f7a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3962
    00000f7f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f86: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f8d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f94: 	je	.Ltmp3553 # Offset: 3988
.Ltmp3750:
    00000f9a: 	movq	-0x20(%rax), %rdi
    00000f9e: 	movq	%rdi, 0x10(%rsp)
    00000fa3: 	callq	clock@PLT # Offset: 4003
    00000fa8: 	movq	0x10(%rsp), %rdi
    00000fad: 	pxor	%xmm0, %xmm0
    00000fb1: 	movq	%rax, end_time(%rip)
    00000fb8: 	subq	start_time(%rip), %rax
    00000fbf: 	cvtsi2sd	%rax, %xmm0
    00000fc4: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000fcc: 	callq	_Z13record_resultdPKc # Offset: 4044
    00000fd1: 	movq	0x190(%rsp), %rdi
    00000fd9: 	cmpq	%r14, %rdi
    00000fdc: 	je	.Ltmp3554 # Offset: 4060
    00000fde: 	movq	0x1a0(%rsp), %rax
    00000fe6: 	leaq	0x1(%rax), %rsi
    00000fea: 	callq	_ZdlPvm@PLT # Offset: 4074
.Ltmp3554:
    00000fef: 	leaq	0x110(%rsp), %rdi
    00000ff7: 	leaq	DATAat0x38275(%rip), %rdx
    00000ffe: 	movq	%r13, %rsi
    00001001: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4097
    00001006: 	movl	iterations(%rip), %esi
    0000100c: 	movq	0x110(%rsp), %rdi
    00001014: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 4116
    00001019: 	leaq	DATAat0x381e2(%rip), %rdx
    00001020: 	movq	%r13, %rsi
    00001023: 	movq	%r12, %rdi
    00001026: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4134
    0000102b: 	callq	clock@PLT # Offset: 4139
    00001030: 	movq	%r12, %rsi
    00001033: 	movq	%r15, %rdi
    00001036: 	movq	%rax, start_time(%rip)
    0000103d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4157
    00001042: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001049: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001050: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001057: 	je	.Ltmp3555 # Offset: 4183
.Ltmp3749:
    0000105d: 	movq	-0x20(%rax), %rdi
    00001061: 	movq	%rdi, 0x10(%rsp)
    00001066: 	callq	clock@PLT # Offset: 4198
    0000106b: 	movq	0x10(%rsp), %rdi
    00001070: 	pxor	%xmm0, %xmm0
    00001074: 	movq	%rax, end_time(%rip)
    0000107b: 	subq	start_time(%rip), %rax
    00001082: 	cvtsi2sd	%rax, %xmm0
    00001087: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000108f: 	callq	_Z13record_resultdPKc # Offset: 4239
    00001094: 	movq	0x190(%rsp), %rdi
    0000109c: 	cmpq	%r14, %rdi
    0000109f: 	je	.Ltmp3556 # Offset: 4255
    000010a1: 	movq	0x1a0(%rsp), %rax
    000010a9: 	leaq	0x1(%rax), %rsi
    000010ad: 	callq	_ZdlPvm@PLT # Offset: 4269
.Ltmp3556:
    000010b2: 	leaq	DATAat0x3828f(%rip), %rdx
    000010b9: 	movq	%r13, %rsi
    000010bc: 	movq	%r12, %rdi
    000010bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4287
    000010c4: 	callq	clock@PLT # Offset: 4292
    000010c9: 	movl	iterations(%rip), %edx
    000010cf: 	movq	%rax, start_time(%rip)
    000010d6: 	testl	%edx, %edx
    000010d8: 	jle	.Ltmp3557 # Offset: 4312
    000010de: 	movss	DATAat0x38670(%rip), %xmm4
    000010e6: 	pxor	%xmm7, %xmm7
    000010ea: 	movsd	DATAat0x385e8(%rip), %xmm6
    000010f2: 	movl	$0x0, 0x40(%rsp)
    000010fa: 	movss	%xmm7, 0x38(%rsp)
    00001100: 	movq	DATAat0x38630(%rip), %xmm7
    00001108: 	movss	DATAat0x38640(%rip), %xmm5
    00001110: 	movss	%xmm4, 0x1c(%rsp)
    00001116: 	movsd	DATAat0x38608(%rip), %xmm4
    0000111e: 	movaps	%xmm5, (%rsp)
    00001122: 	movsd	%xmm6, 0x10(%rsp)
    00001128: 	movaps	%xmm7, 0x20(%rsp)
    0000112d: 	movsd	%xmm4, 0x30(%rsp)
    00001133: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3561:
    00001138: 	movq	%rbp, %rax
    0000113b: 	pxor	%xmm0, %xmm0
    0000113f: 	pxor	%xmm3, %xmm3
    00001143: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3558:
    00001148: 	movaps	(%rax), %xmm1
    0000114b: 	addq	$0x10, %rax
    0000114f: 	mulps	%xmm3, %xmm1
    00001152: 	addss	%xmm1, %xmm0
    00001156: 	movaps	%xmm1, %xmm2
    00001159: 	shufps	$0x55, %xmm1, %xmm2
    0000115d: 	addss	%xmm0, %xmm2
    00001161: 	movaps	%xmm1, %xmm0
    00001164: 	unpckhps	%xmm1, %xmm0
    00001167: 	shufps	$0xff, %xmm1, %xmm1
    0000116b: 	addss	%xmm2, %xmm0
    0000116f: 	addss	%xmm1, %xmm0
    00001173: 	cmpq	%rbx, %rax
    00001176: 	jne	.Ltmp3558 # Offset: 4470
    00001178: 	pxor	%xmm2, %xmm2
    0000117c: 	movaps	(%rsp), %xmm6
    00001180: 	movaps	%xmm0, %xmm1
    00001183: 	cvtsd2ss	init_value(%rip), %xmm2
    0000118b: 	mulss	0x38(%rsp), %xmm2
    00001191: 	mulss	0x1c(%rsp), %xmm2
    00001197: 	andps	%xmm0, %xmm6
    0000119a: 	subss	%xmm2, %xmm1
    0000119e: 	pxor	%xmm2, %xmm2
    000011a2: 	cvtss2sd	%xmm6, %xmm2
    000011a6: 	comisd	0x10(%rsp), %xmm2
    000011ac: 	jbe	.Ltmp3559 # Offset: 4524
    000011ae: 	divss	%xmm0, %xmm1
.Ltmp3559:
    000011b2: 	movsd	0x30(%rsp), %xmm4
    000011b8: 	cvtss2sd	%xmm1, %xmm1
    000011bc: 	andpd	0x20(%rsp), %xmm1
    000011c2: 	comisd	%xmm1, %xmm4
    000011c6: 	jbe	.Ltmp3560 # Offset: 4550
.Ltmp3719:
    000011cc: 	addl	$0x1, 0x40(%rsp)
    000011d1: 	movl	0x40(%rsp), %eax
    000011d5: 	cmpl	%edx, %eax
    000011d7: 	jl	.Ltmp3561 # Offset: 4567
.Ltmp3557:
    000011dd: 	movq	%r12, %rsi
    000011e0: 	movq	%r15, %rdi
    000011e3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4579
    000011e8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ef: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011f6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011fd: 	je	.Ltmp3562 # Offset: 4605
.Ltmp3748:
    00001203: 	movq	-0x20(%rax), %rdi
    00001207: 	movq	%rdi, 0x10(%rsp)
    0000120c: 	callq	clock@PLT # Offset: 4620
    00001211: 	movq	0x10(%rsp), %rdi
    00001216: 	pxor	%xmm0, %xmm0
    0000121a: 	movq	%rax, end_time(%rip)
    00001221: 	subq	start_time(%rip), %rax
    00001228: 	cvtsi2sd	%rax, %xmm0
    0000122d: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001235: 	callq	_Z13record_resultdPKc # Offset: 4661
    0000123a: 	movq	0x190(%rsp), %rdi
    00001242: 	cmpq	%r14, %rdi
    00001245: 	je	.Ltmp3563 # Offset: 4677
    00001247: 	movq	0x1a0(%rsp), %rax
    0000124f: 	leaq	0x1(%rax), %rsi
    00001253: 	callq	_ZdlPvm@PLT # Offset: 4691
.Ltmp3563:
    00001258: 	leaq	DATAat0x3829b(%rip), %rdx
    0000125f: 	movq	%r13, %rsi
    00001262: 	movq	%r12, %rdi
    00001265: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4709
    0000126a: 	callq	clock@PLT # Offset: 4714
    0000126f: 	movl	iterations(%rip), %edx
    00001275: 	movq	%rax, start_time(%rip)
    0000127c: 	testl	%edx, %edx
    0000127e: 	jle	.Ltmp3564 # Offset: 4734
    00001284: 	movss	DATAat0x38670(%rip), %xmm6
    0000128c: 	pxor	%xmm5, %xmm5
    00001290: 	movsd	DATAat0x385e8(%rip), %xmm4
    00001298: 	movl	$0x0, 0x40(%rsp)
    000012a0: 	movss	%xmm5, 0x38(%rsp)
    000012a6: 	movq	DATAat0x38630(%rip), %xmm5
    000012ae: 	movss	DATAat0x38640(%rip), %xmm7
    000012b6: 	movss	%xmm6, 0x1c(%rsp)
    000012bc: 	movsd	DATAat0x38608(%rip), %xmm6
    000012c4: 	movaps	%xmm7, (%rsp)
    000012c8: 	movsd	%xmm4, 0x10(%rsp)
    000012ce: 	movaps	%xmm5, 0x20(%rsp)
    000012d3: 	movsd	%xmm6, 0x30(%rsp)
    000012d9: 	nopl	(%rax) # Size: 7
.Ltmp3568:
    000012e0: 	movq	%rbp, %rax
    000012e3: 	pxor	%xmm1, %xmm1
    000012e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3565:
    000012f0: 	movaps	(%rax), %xmm0
    000012f3: 	addq	$0x10, %rax
    000012f7: 	subps	%xmm0, %xmm0
    000012fa: 	addss	%xmm0, %xmm1
    000012fe: 	movaps	%xmm0, %xmm2
    00001301: 	shufps	$0x55, %xmm0, %xmm2
    00001305: 	addss	%xmm1, %xmm2
    00001309: 	movaps	%xmm0, %xmm1
    0000130c: 	unpckhps	%xmm0, %xmm1
    0000130f: 	shufps	$0xff, %xmm0, %xmm0
    00001313: 	addss	%xmm2, %xmm1
    00001317: 	addss	%xmm0, %xmm1
    0000131b: 	cmpq	%rbx, %rax
    0000131e: 	jne	.Ltmp3565 # Offset: 4894
    00001320: 	pxor	%xmm0, %xmm0
    00001324: 	movss	0x1c(%rsp), %xmm2
    0000132a: 	movaps	(%rsp), %xmm4
    0000132e: 	cvtsd2ss	init_value(%rip), %xmm0
    00001336: 	subss	%xmm0, %xmm0
    0000133a: 	andps	%xmm1, %xmm4
    0000133d: 	mulss	%xmm0, %xmm2
    00001341: 	movaps	%xmm1, %xmm0
    00001344: 	subss	%xmm2, %xmm0
    00001348: 	pxor	%xmm2, %xmm2
    0000134c: 	cvtss2sd	%xmm4, %xmm2
    00001350: 	comisd	0x10(%rsp), %xmm2
    00001356: 	jbe	.Ltmp3566 # Offset: 4950
    00001358: 	divss	%xmm1, %xmm0
.Ltmp3566:
    0000135c: 	movsd	0x30(%rsp), %xmm5
    00001362: 	cvtss2sd	%xmm0, %xmm0
    00001366: 	andpd	0x20(%rsp), %xmm0
    0000136c: 	comisd	%xmm0, %xmm5
    00001370: 	jbe	.Ltmp3567 # Offset: 4976
.Ltmp3718:
    00001376: 	addl	$0x1, 0x40(%rsp)
    0000137b: 	movl	0x40(%rsp), %eax
    0000137f: 	cmpl	%edx, %eax
    00001381: 	jl	.Ltmp3568 # Offset: 4993
.Ltmp3564:
    00001387: 	movq	%r12, %rsi
    0000138a: 	movq	%r15, %rdi
    0000138d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5005
    00001392: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001399: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013a7: 	je	.Ltmp3569 # Offset: 5031
.Ltmp3747:
    000013ad: 	movq	-0x20(%rax), %rdi
    000013b1: 	movq	%rdi, 0x10(%rsp)
    000013b6: 	callq	clock@PLT # Offset: 5046
    000013bb: 	movq	0x10(%rsp), %rdi
    000013c0: 	pxor	%xmm0, %xmm0
    000013c4: 	movq	%rax, end_time(%rip)
    000013cb: 	subq	start_time(%rip), %rax
    000013d2: 	cvtsi2sd	%rax, %xmm0
    000013d7: 	divsd	DATAat0x385e0(%rip), %xmm0
    000013df: 	callq	_Z13record_resultdPKc # Offset: 5087
    000013e4: 	movq	0x190(%rsp), %rdi
    000013ec: 	cmpq	%r14, %rdi
    000013ef: 	je	.Ltmp3570 # Offset: 5103
    000013f1: 	movq	0x1a0(%rsp), %rax
    000013f9: 	leaq	0x1(%rax), %rsi
    000013fd: 	callq	_ZdlPvm@PLT # Offset: 5117
.Ltmp3570:
    00001402: 	leaq	DATAat0x38329(%rip), %rdx
    00001409: 	movq	%r13, %rsi
    0000140c: 	movq	%r12, %rdi
    0000140f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5135
    00001414: 	callq	clock@PLT # Offset: 5140
    00001419: 	movl	iterations(%rip), %edx
    0000141f: 	movq	%rax, start_time(%rip)
    00001426: 	testl	%edx, %edx
    00001428: 	jle	.Ltmp3571 # Offset: 5160
    0000142e: 	movss	DATAat0x38670(%rip), %xmm4
    00001436: 	pxor	%xmm7, %xmm7
    0000143a: 	movsd	DATAat0x385e8(%rip), %xmm6
    00001442: 	movl	$0x0, 0x40(%rsp)
    0000144a: 	movss	%xmm7, 0x38(%rsp)
    00001450: 	movq	DATAat0x38630(%rip), %xmm7
    00001458: 	movss	DATAat0x38640(%rip), %xmm5
    00001460: 	movss	%xmm4, 0x1c(%rsp)
    00001466: 	movsd	DATAat0x38608(%rip), %xmm4
    0000146e: 	movaps	%xmm5, (%rsp)
    00001472: 	movsd	%xmm6, 0x10(%rsp)
    00001478: 	movaps	%xmm7, 0x20(%rsp)
    0000147d: 	movsd	%xmm4, 0x30(%rsp)
    00001483: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3575:
    00001488: 	movq	%rbp, %rax
    0000148b: 	pxor	%xmm1, %xmm1
    0000148f: 	pxor	%xmm3, %xmm3
    00001493: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3572:
    00001498: 	movaps	(%rax), %xmm2
    0000149b: 	movaps	%xmm3, %xmm0
    0000149e: 	addq	$0x10, %rax
    000014a2: 	addps	%xmm3, %xmm2
    000014a5: 	subps	%xmm2, %xmm0
    000014a8: 	addps	-0x10(%rax), %xmm0
    000014ac: 	addss	%xmm0, %xmm1
    000014b0: 	movaps	%xmm0, %xmm2
    000014b3: 	shufps	$0x55, %xmm0, %xmm2
    000014b7: 	addss	%xmm1, %xmm2
    000014bb: 	movaps	%xmm0, %xmm1
    000014be: 	unpckhps	%xmm0, %xmm1
    000014c1: 	shufps	$0xff, %xmm0, %xmm0
    000014c5: 	addss	%xmm2, %xmm1
    000014c9: 	addss	%xmm0, %xmm1
    000014cd: 	cmpq	%rbx, %rax
    000014d0: 	jne	.Ltmp3572 # Offset: 5328
    000014d2: 	movss	0x38(%rsp), %xmm5
    000014d8: 	pxor	%xmm0, %xmm0
    000014dc: 	movaps	(%rsp), %xmm6
    000014e0: 	cvtsd2ss	init_value(%rip), %xmm0
    000014e8: 	movaps	%xmm5, %xmm3
    000014eb: 	andps	%xmm1, %xmm6
    000014ee: 	addss	%xmm0, %xmm3
    000014f2: 	subss	%xmm3, %xmm5
    000014f6: 	movaps	%xmm5, %xmm2
    000014f9: 	addss	%xmm0, %xmm2
    000014fd: 	mulss	0x1c(%rsp), %xmm2
    00001503: 	movaps	%xmm1, %xmm0
    00001506: 	subss	%xmm2, %xmm0
    0000150a: 	pxor	%xmm2, %xmm2
    0000150e: 	cvtss2sd	%xmm6, %xmm2
    00001512: 	comisd	0x10(%rsp), %xmm2
    00001518: 	jbe	.Ltmp3573 # Offset: 5400
    0000151a: 	divss	%xmm1, %xmm0
.Ltmp3573:
    0000151e: 	movsd	0x30(%rsp), %xmm6
    00001524: 	cvtss2sd	%xmm0, %xmm0
    00001528: 	andpd	0x20(%rsp), %xmm0
    0000152e: 	comisd	%xmm0, %xmm6
    00001532: 	jbe	.Ltmp3574 # Offset: 5426
.Ltmp3717:
    00001538: 	addl	$0x1, 0x40(%rsp)
    0000153d: 	movl	0x40(%rsp), %eax
    00001541: 	cmpl	%edx, %eax
    00001543: 	jl	.Ltmp3575 # Offset: 5443
.Ltmp3571:
    00001549: 	movq	%r12, %rsi
    0000154c: 	movq	%r15, %rdi
    0000154f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5455
    00001554: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000155b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001562: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001569: 	je	.Ltmp3576 # Offset: 5481
.Ltmp3746:
    0000156f: 	movq	-0x20(%rax), %rdi
    00001573: 	movq	%rdi, 0x10(%rsp)
    00001578: 	callq	clock@PLT # Offset: 5496
    0000157d: 	movq	0x10(%rsp), %rdi
    00001582: 	pxor	%xmm0, %xmm0
    00001586: 	movq	%rax, end_time(%rip)
    0000158d: 	subq	start_time(%rip), %rax
    00001594: 	cvtsi2sd	%rax, %xmm0
    00001599: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015a1: 	callq	_Z13record_resultdPKc # Offset: 5537
    000015a6: 	movq	0x190(%rsp), %rdi
    000015ae: 	cmpq	%r14, %rdi
    000015b1: 	je	.Ltmp3577 # Offset: 5553
    000015b3: 	movq	0x1a0(%rsp), %rax
    000015bb: 	leaq	0x1(%rax), %rsi
    000015bf: 	callq	_ZdlPvm@PLT # Offset: 5567
.Ltmp3577:
    000015c4: 	leaq	DATAat0x38339(%rip), %rdx
    000015cb: 	movq	%r13, %rsi
    000015ce: 	movq	%r12, %rdi
    000015d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5585
    000015d6: 	movq	%r12, %rdx
    000015d9: 	movl	$0x1f40, %esi
    000015de: 	movq	%rbp, %rdi
    000015e1: 	callq	_Z22test_constantSRepeatedIf15custom_sub_zeroIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5601
    000015e6: 	movq	0x190(%rsp), %rdi
    000015ee: 	cmpq	%r14, %rdi
    000015f1: 	je	.Ltmp3578 # Offset: 5617
    000015f3: 	movq	0x1a0(%rsp), %rax
    000015fb: 	leaq	0x1(%rax), %rsi
    000015ff: 	callq	_ZdlPvm@PLT # Offset: 5631
.Ltmp3578:
    00001604: 	leaq	DATAat0x38351(%rip), %rdx
    0000160b: 	movq	%r13, %rsi
    0000160e: 	movq	%r12, %rdi
    00001611: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5649
    00001616: 	movq	%r12, %rdx
    00001619: 	movl	$0x1f40, %esi
    0000161e: 	movq	%rbp, %rdi
    00001621: 	callq	_Z22test_constantSRepeatedIf20custom_algebra_mixedIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5665
    00001626: 	movq	0x190(%rsp), %rdi
    0000162e: 	cmpq	%r14, %rdi
    00001631: 	je	.Ltmp3579 # Offset: 5681
    00001633: 	movq	0x1a0(%rsp), %rax
    0000163b: 	leaq	0x1(%rax), %rsi
    0000163f: 	callq	_ZdlPvm@PLT # Offset: 5695
.Ltmp3579:
    00001644: 	leaq	DATAat0x38369(%rip), %rdx
    0000164b: 	movq	%r13, %rsi
    0000164e: 	movq	%r12, %rdi
    00001651: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5713
    00001656: 	movq	%r12, %rdx
    00001659: 	movl	$0x1f40, %esi
    0000165e: 	movq	%rbp, %rdi
    00001661: 	callq	_Z22test_constantSRepeatedIf20custom_subtract_selfIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5729
    00001666: 	movq	0x190(%rsp), %rdi
    0000166e: 	cmpq	%r14, %rdi
    00001671: 	je	.Ltmp3580 # Offset: 5745
    00001673: 	movq	0x1a0(%rsp), %rax
    0000167b: 	leaq	0x1(%rax), %rsi
    0000167f: 	callq	_ZdlPvm@PLT # Offset: 5759
.Ltmp3580:
    00001684: 	leaq	DATAat0x38381(%rip), %rdx
    0000168b: 	movq	%r13, %rsi
    0000168e: 	movq	%r12, %rdi
    00001691: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5777
    00001696: 	movq	%r12, %rdx
    00001699: 	movl	$0x1f40, %esi
    0000169e: 	movq	%rbp, %rdi
    000016a1: 	callq	_Z22test_constantSRepeatedIf29custom_algebra_mixed_constantIfEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5793
    000016a6: 	movq	0x190(%rsp), %rdi
    000016ae: 	cmpq	%r14, %rdi
    000016b1: 	je	.Ltmp3581 # Offset: 5809
    000016b3: 	movq	0x1a0(%rsp), %rax
    000016bb: 	leaq	0x1(%rax), %rsi
    000016bf: 	callq	_ZdlPvm@PLT # Offset: 5823
.Ltmp3581:
    000016c4: 	leaq	0x130(%rsp), %rdi
    000016cc: 	leaq	DATAat0x384a0(%rip), %rdx
    000016d3: 	movq	%r13, %rsi
    000016d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5846
    000016db: 	movl	iterations(%rip), %esi
    000016e1: 	movq	0x130(%rsp), %rdi
    000016e9: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5865
    000016ee: 	leaq	DATAat0x384c8(%rip), %rdx
    000016f5: 	movq	%r13, %rsi
    000016f8: 	movq	%r12, %rdi
    000016fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5883
    00001700: 	callq	clock@PLT # Offset: 5888
    00001705: 	movl	iterations(%rip), %edx
    0000170b: 	movq	%rax, start_time(%rip)
    00001712: 	testl	%edx, %edx
    00001714: 	jle	.Ltmp3582 # Offset: 5908
    0000171a: 	movss	0x3c(%rsp), %xmm0
    00001720: 	movss	DATAat0x38670(%rip), %xmm6
    00001728: 	movss	DATAat0x38640(%rip), %xmm4
    00001730: 	pxor	%xmm5, %xmm5
    00001734: 	addss	0x80(%rsp), %xmm0
    0000173d: 	movaps	%xmm4, (%rsp)
    00001741: 	addss	0x84(%rsp), %xmm0
    0000174a: 	movss	0x88(%rsp), %xmm7
    00001753: 	movsd	DATAat0x38608(%rip), %xmm4
    0000175b: 	movss	%xmm5, 0x38(%rsp)
    00001761: 	movss	%xmm6, 0x1c(%rsp)
    00001767: 	movsd	DATAat0x385e8(%rip), %xmm5
    0000176f: 	movq	DATAat0x38630(%rip), %xmm6
    00001777: 	addss	%xmm0, %xmm7
    0000177b: 	movl	$0x0, 0x40(%rsp)
    00001783: 	movsd	%xmm4, 0x30(%rsp)
    00001789: 	movsd	%xmm5, 0x10(%rsp)
    0000178f: 	movaps	%xmm7, %xmm4
    00001792: 	movss	%xmm7, 0x50(%rsp)
    00001798: 	shufps	$0x0, %xmm4, %xmm4
    0000179c: 	movaps	%xmm6, 0x20(%rsp)
    000017a1: 	movaps	%xmm4, 0x60(%rsp)
    000017a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3586:
    000017b0: 	movaps	0x60(%rsp), %xmm3
    000017b5: 	movq	%rbp, %rax
    000017b8: 	pxor	%xmm0, %xmm0
    000017bc: 	nopl	(%rax) # Size: 4
.Ltmp3583:
    000017c0: 	movaps	(%rax), %xmm1
    000017c3: 	addq	$0x10, %rax
    000017c7: 	mulps	%xmm3, %xmm1
    000017ca: 	addss	%xmm1, %xmm0
    000017ce: 	movaps	%xmm1, %xmm2
    000017d1: 	shufps	$0x55, %xmm1, %xmm2
    000017d5: 	addss	%xmm0, %xmm2
    000017d9: 	movaps	%xmm1, %xmm0
    000017dc: 	unpckhps	%xmm1, %xmm0
    000017df: 	shufps	$0xff, %xmm1, %xmm1
    000017e3: 	addss	%xmm2, %xmm0
    000017e7: 	addss	%xmm1, %xmm0
    000017eb: 	cmpq	%rbx, %rax
    000017ee: 	jne	.Ltmp3583 # Offset: 6126
    000017f0: 	pxor	%xmm2, %xmm2
    000017f4: 	movaps	(%rsp), %xmm5
    000017f8: 	movaps	%xmm0, %xmm1
    000017fb: 	cvtsd2ss	init_value(%rip), %xmm2
    00001803: 	mulss	0x50(%rsp), %xmm2
    00001809: 	mulss	0x1c(%rsp), %xmm2
    0000180f: 	andps	%xmm0, %xmm5
    00001812: 	subss	%xmm2, %xmm1
    00001816: 	pxor	%xmm2, %xmm2
    0000181a: 	cvtss2sd	%xmm5, %xmm2
    0000181e: 	comisd	0x10(%rsp), %xmm2
    00001824: 	jbe	.Ltmp3584 # Offset: 6180
    00001826: 	divss	%xmm0, %xmm1
.Ltmp3584:
    0000182a: 	movsd	0x30(%rsp), %xmm5
    00001830: 	cvtss2sd	%xmm1, %xmm1
    00001834: 	andpd	0x20(%rsp), %xmm1
    0000183a: 	comisd	%xmm1, %xmm5
    0000183e: 	jbe	.Ltmp3585 # Offset: 6206
.Ltmp3716:
    00001844: 	addl	$0x1, 0x40(%rsp)
    00001849: 	movl	0x40(%rsp), %eax
    0000184d: 	cmpl	%edx, %eax
    0000184f: 	jl	.Ltmp3586 # Offset: 6223
.Ltmp3582:
    00001855: 	movq	%r12, %rsi
    00001858: 	movq	%r15, %rdi
    0000185b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6235
    00001860: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001867: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000186e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001875: 	je	.Ltmp3587 # Offset: 6261
.Ltmp3745:
    0000187b: 	movq	-0x20(%rax), %rdi
    0000187f: 	movq	%rdi, 0x10(%rsp)
    00001884: 	callq	clock@PLT # Offset: 6276
    00001889: 	movq	0x10(%rsp), %rdi
    0000188e: 	pxor	%xmm0, %xmm0
    00001892: 	movq	%rax, end_time(%rip)
    00001899: 	subq	start_time(%rip), %rax
    000018a0: 	cvtsi2sd	%rax, %xmm0
    000018a5: 	divsd	DATAat0x385e0(%rip), %xmm0
    000018ad: 	callq	_Z13record_resultdPKc # Offset: 6317
    000018b2: 	movq	0x190(%rsp), %rdi
    000018ba: 	cmpq	%r14, %rdi
    000018bd: 	je	.Ltmp3588 # Offset: 6333
    000018bf: 	movq	0x1a0(%rsp), %rax
    000018c7: 	leaq	0x1(%rax), %rsi
    000018cb: 	callq	_ZdlPvm@PLT # Offset: 6347
.Ltmp3588:
    000018d0: 	leaq	DATAat0x384e8(%rip), %rdx
    000018d7: 	movq	%r13, %rsi
    000018da: 	movq	%r12, %rdi
    000018dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6365
    000018e2: 	callq	clock@PLT # Offset: 6370
    000018e7: 	movl	iterations(%rip), %edx
    000018ed: 	movq	%rax, start_time(%rip)
    000018f4: 	testl	%edx, %edx
    000018f6: 	jle	.Ltmp3589 # Offset: 6390
    000018fc: 	movss	0x3c(%rsp), %xmm0
    00001902: 	movss	DATAat0x38670(%rip), %xmm6
    0000190a: 	pxor	%xmm5, %xmm5
    0000190e: 	movss	DATAat0x38640(%rip), %xmm7
    00001916: 	addss	0x80(%rsp), %xmm0
    0000191f: 	movss	%xmm5, 0x38(%rsp)
    00001925: 	addss	0x84(%rsp), %xmm0
    0000192e: 	movss	0x88(%rsp), %xmm4
    00001937: 	movsd	DATAat0x385e8(%rip), %xmm5
    0000193f: 	movaps	%xmm7, (%rsp)
    00001943: 	movss	%xmm6, 0x1c(%rsp)
    00001949: 	movq	DATAat0x38630(%rip), %xmm6
    00001951: 	movsd	DATAat0x38608(%rip), %xmm7
    00001959: 	addss	%xmm0, %xmm4
    0000195d: 	movl	$0x0, 0x40(%rsp)
    00001965: 	movaps	%xmm6, 0x20(%rsp)
    0000196a: 	movsd	%xmm5, 0x10(%rsp)
    00001970: 	movaps	%xmm4, %xmm6
    00001973: 	movss	%xmm4, 0x50(%rsp)
    00001979: 	shufps	$0x0, %xmm6, %xmm6
    0000197d: 	movsd	%xmm7, 0x30(%rsp)
    00001983: 	movaps	%xmm6, 0x60(%rsp)
    00001988: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3593:
    00001990: 	movaps	0x60(%rsp), %xmm3
    00001995: 	movq	%rbp, %rax
    00001998: 	pxor	%xmm0, %xmm0
    0000199c: 	nopl	(%rax) # Size: 4
.Ltmp3590:
    000019a0: 	movaps	(%rax), %xmm1
    000019a3: 	addq	$0x10, %rax
    000019a7: 	mulps	%xmm3, %xmm1
    000019aa: 	addss	%xmm1, %xmm0
    000019ae: 	movaps	%xmm1, %xmm2
    000019b1: 	shufps	$0x55, %xmm1, %xmm2
    000019b5: 	addss	%xmm0, %xmm2
    000019b9: 	movaps	%xmm1, %xmm0
    000019bc: 	unpckhps	%xmm1, %xmm0
    000019bf: 	shufps	$0xff, %xmm1, %xmm1
    000019c3: 	addss	%xmm2, %xmm0
    000019c7: 	addss	%xmm1, %xmm0
    000019cb: 	cmpq	%rbx, %rax
    000019ce: 	jne	.Ltmp3590 # Offset: 6606
    000019d0: 	pxor	%xmm2, %xmm2
    000019d4: 	movaps	(%rsp), %xmm4
    000019d8: 	movaps	%xmm0, %xmm1
    000019db: 	cvtsd2ss	init_value(%rip), %xmm2
    000019e3: 	mulss	0x50(%rsp), %xmm2
    000019e9: 	mulss	0x1c(%rsp), %xmm2
    000019ef: 	andps	%xmm0, %xmm4
    000019f2: 	subss	%xmm2, %xmm1
    000019f6: 	pxor	%xmm2, %xmm2
    000019fa: 	cvtss2sd	%xmm4, %xmm2
    000019fe: 	comisd	0x10(%rsp), %xmm2
    00001a04: 	jbe	.Ltmp3591 # Offset: 6660
    00001a06: 	divss	%xmm0, %xmm1
.Ltmp3591:
    00001a0a: 	movsd	0x30(%rsp), %xmm4
    00001a10: 	cvtss2sd	%xmm1, %xmm1
    00001a14: 	andpd	0x20(%rsp), %xmm1
    00001a1a: 	comisd	%xmm1, %xmm4
    00001a1e: 	jbe	.Ltmp3592 # Offset: 6686
.Ltmp3715:
    00001a24: 	addl	$0x1, 0x40(%rsp)
    00001a29: 	movl	0x40(%rsp), %eax
    00001a2d: 	cmpl	%edx, %eax
    00001a2f: 	jl	.Ltmp3593 # Offset: 6703
.Ltmp3589:
    00001a35: 	movq	%r12, %rsi
    00001a38: 	movq	%r15, %rdi
    00001a3b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6715
    00001a40: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a47: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a4e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a55: 	je	.Ltmp3594 # Offset: 6741
.Ltmp3744:
    00001a5b: 	movq	-0x20(%rax), %rdi
    00001a5f: 	movq	%rdi, 0x10(%rsp)
    00001a64: 	callq	clock@PLT # Offset: 6756
    00001a69: 	movq	0x10(%rsp), %rdi
    00001a6e: 	pxor	%xmm0, %xmm0
    00001a72: 	movq	%rax, end_time(%rip)
    00001a79: 	subq	start_time(%rip), %rax
    00001a80: 	cvtsi2sd	%rax, %xmm0
    00001a85: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001a8d: 	callq	_Z13record_resultdPKc # Offset: 6797
    00001a92: 	movq	0x190(%rsp), %rdi
    00001a9a: 	cmpq	%r14, %rdi
    00001a9d: 	je	.Ltmp3595 # Offset: 6813
    00001a9f: 	movq	0x1a0(%rsp), %rax
    00001aa7: 	leaq	0x1(%rax), %rsi
    00001aab: 	callq	_ZdlPvm@PLT # Offset: 6827
.Ltmp3595:
    00001ab0: 	leaq	DATAat0x38508(%rip), %rdx
    00001ab7: 	movq	%r13, %rsi
    00001aba: 	movq	%r12, %rdi
    00001abd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6845
    00001ac2: 	callq	clock@PLT # Offset: 6850
    00001ac7: 	movl	iterations(%rip), %edx
    00001acd: 	movq	%rax, start_time(%rip)
    00001ad4: 	testl	%edx, %edx
    00001ad6: 	jle	.Ltmp3596 # Offset: 6870
    00001adc: 	movss	0x3c(%rsp), %xmm0
    00001ae2: 	movss	DATAat0x38670(%rip), %xmm4
    00001aea: 	pxor	%xmm7, %xmm7
    00001aee: 	movss	DATAat0x38640(%rip), %xmm5
    00001af6: 	subss	0x80(%rsp), %xmm0
    00001aff: 	movaps	%xmm5, (%rsp)
    00001b03: 	addss	0x84(%rsp), %xmm0
    00001b0c: 	movsd	DATAat0x38608(%rip), %xmm5
    00001b14: 	movss	%xmm7, 0x38(%rsp)
    00001b1a: 	movsd	DATAat0x385e8(%rip), %xmm7
    00001b22: 	movss	%xmm4, 0x1c(%rsp)
    00001b28: 	movq	DATAat0x38630(%rip), %xmm4
    00001b30: 	movaps	%xmm0, %xmm6
    00001b33: 	movl	$0x0, 0x40(%rsp)
    00001b3b: 	subss	0x88(%rsp), %xmm6
    00001b44: 	movsd	%xmm5, 0x30(%rsp)
    00001b4a: 	movsd	%xmm7, 0x10(%rsp)
    00001b50: 	movaps	%xmm6, %xmm5
    00001b53: 	movss	%xmm6, 0x50(%rsp)
    00001b59: 	shufps	$0x0, %xmm5, %xmm5
    00001b5d: 	movaps	%xmm4, 0x20(%rsp)
    00001b62: 	movaps	%xmm5, 0x60(%rsp)
    00001b67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3600:
    00001b70: 	movaps	0x60(%rsp), %xmm3
    00001b75: 	movq	%rbp, %rax
    00001b78: 	pxor	%xmm0, %xmm0
    00001b7c: 	nopl	(%rax) # Size: 4
.Ltmp3597:
    00001b80: 	movaps	(%rax), %xmm1
    00001b83: 	addq	$0x10, %rax
    00001b87: 	mulps	%xmm3, %xmm1
    00001b8a: 	addss	%xmm1, %xmm0
    00001b8e: 	movaps	%xmm1, %xmm2
    00001b91: 	shufps	$0x55, %xmm1, %xmm2
    00001b95: 	addss	%xmm0, %xmm2
    00001b99: 	movaps	%xmm1, %xmm0
    00001b9c: 	unpckhps	%xmm1, %xmm0
    00001b9f: 	shufps	$0xff, %xmm1, %xmm1
    00001ba3: 	addss	%xmm2, %xmm0
    00001ba7: 	addss	%xmm1, %xmm0
    00001bab: 	cmpq	%rbx, %rax
    00001bae: 	jne	.Ltmp3597 # Offset: 7086
    00001bb0: 	pxor	%xmm2, %xmm2
    00001bb4: 	movaps	(%rsp), %xmm6
    00001bb8: 	movaps	%xmm0, %xmm1
    00001bbb: 	cvtsd2ss	init_value(%rip), %xmm2
    00001bc3: 	mulss	0x50(%rsp), %xmm2
    00001bc9: 	mulss	0x1c(%rsp), %xmm2
    00001bcf: 	andps	%xmm0, %xmm6
    00001bd2: 	subss	%xmm2, %xmm1
    00001bd6: 	pxor	%xmm2, %xmm2
    00001bda: 	cvtss2sd	%xmm6, %xmm2
    00001bde: 	comisd	0x10(%rsp), %xmm2
    00001be4: 	jbe	.Ltmp3598 # Offset: 7140
    00001be6: 	divss	%xmm0, %xmm1
.Ltmp3598:
    00001bea: 	movsd	0x30(%rsp), %xmm6
    00001bf0: 	cvtss2sd	%xmm1, %xmm1
    00001bf4: 	andpd	0x20(%rsp), %xmm1
    00001bfa: 	comisd	%xmm1, %xmm6
    00001bfe: 	jbe	.Ltmp3599 # Offset: 7166
.Ltmp3714:
    00001c04: 	addl	$0x1, 0x40(%rsp)
    00001c09: 	movl	0x40(%rsp), %eax
    00001c0d: 	cmpl	%edx, %eax
    00001c0f: 	jl	.Ltmp3600 # Offset: 7183
.Ltmp3596:
    00001c15: 	movq	%r12, %rsi
    00001c18: 	movq	%r15, %rdi
    00001c1b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7195
    00001c20: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c27: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c2e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c35: 	je	.Ltmp3601 # Offset: 7221
.Ltmp3743:
    00001c3b: 	movq	-0x20(%rax), %rdi
    00001c3f: 	movq	%rdi, 0x10(%rsp)
    00001c44: 	callq	clock@PLT # Offset: 7236
    00001c49: 	movq	0x10(%rsp), %rdi
    00001c4e: 	pxor	%xmm0, %xmm0
    00001c52: 	movq	%rax, end_time(%rip)
    00001c59: 	subq	start_time(%rip), %rax
    00001c60: 	cvtsi2sd	%rax, %xmm0
    00001c65: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001c6d: 	callq	_Z13record_resultdPKc # Offset: 7277
    00001c72: 	movq	0x190(%rsp), %rdi
    00001c7a: 	cmpq	%r14, %rdi
    00001c7d: 	je	.Ltmp3602 # Offset: 7293
    00001c7f: 	movq	0x1a0(%rsp), %rax
    00001c87: 	leaq	0x1(%rax), %rsi
    00001c8b: 	callq	_ZdlPvm@PLT # Offset: 7307
.Ltmp3602:
    00001c90: 	leaq	DATAat0x3839a(%rip), %rdx
    00001c97: 	movq	%r13, %rsi
    00001c9a: 	movq	%r12, %rdi
    00001c9d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7325
    00001ca2: 	callq	clock@PLT # Offset: 7330
    00001ca7: 	movl	iterations(%rip), %edx
    00001cad: 	movq	%rax, start_time(%rip)
    00001cb4: 	testl	%edx, %edx
    00001cb6: 	jle	.Ltmp3603 # Offset: 7350
    00001cbc: 	movq	DATAat0x38630(%rip), %xmm4
    00001cc4: 	pxor	%xmm6, %xmm6
    00001cc8: 	movsd	DATAat0x38608(%rip), %xmm5
    00001cd0: 	movl	$0x0, 0x8c(%rsp)
    00001cdb: 	movss	%xmm6, 0x38(%rsp)
    00001ce1: 	movss	DATAat0x38670(%rip), %xmm6
    00001ce9: 	movsd	DATAat0x385e8(%rip), %xmm7
    00001cf1: 	movaps	%xmm4, 0x20(%rsp)
    00001cf6: 	movss	0x3c(%rsp), %xmm4
    00001cfc: 	movss	%xmm6, 0x1c(%rsp)
    00001d02: 	movss	DATAat0x38640(%rip), %xmm6
    00001d0a: 	shufps	$0x0, %xmm4, %xmm4
    00001d0e: 	movaps	%xmm6, (%rsp)
    00001d12: 	movss	0x80(%rsp), %xmm6
    00001d1b: 	movsd	%xmm5, 0x30(%rsp)
    00001d21: 	movss	0x84(%rsp), %xmm5
    00001d2a: 	movaps	%xmm4, 0x40(%rsp)
    00001d2f: 	shufps	$0x0, %xmm6, %xmm6
    00001d33: 	movss	0x88(%rsp), %xmm4
    00001d3c: 	shufps	$0x0, %xmm5, %xmm5
    00001d40: 	movsd	%xmm7, 0x10(%rsp)
    00001d46: 	shufps	$0x0, %xmm4, %xmm4
    00001d4a: 	movaps	%xmm6, 0x50(%rsp)
    00001d4f: 	movaps	%xmm5, 0x60(%rsp)
    00001d54: 	movaps	%xmm4, 0x70(%rsp)
    00001d59: 	nopl	(%rax) # Size: 7
.Ltmp3607:
    00001d60: 	movaps	0x40(%rsp), %xmm3
    00001d65: 	movaps	0x50(%rsp), %xmm4
    00001d6a: 	movq	%rbp, %rax
    00001d6d: 	pxor	%xmm2, %xmm2
    00001d71: 	movaps	0x60(%rsp), %xmm5
    00001d76: 	movaps	0x70(%rsp), %xmm6
    00001d7b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3604:
    00001d80: 	movaps	(%rax), %xmm1
    00001d83: 	movaps	%xmm4, %xmm0
    00001d86: 	movaps	%xmm3, %xmm7
    00001d89: 	addq	$0x10, %rax
    00001d8d: 	mulps	%xmm1, %xmm7
    00001d90: 	mulps	%xmm1, %xmm0
    00001d93: 	addps	%xmm7, %xmm0
    00001d96: 	movaps	%xmm5, %xmm7
    00001d99: 	mulps	%xmm1, %xmm7
    00001d9c: 	mulps	%xmm6, %xmm1
    00001d9f: 	addps	%xmm7, %xmm0
    00001da2: 	addps	%xmm1, %xmm0
    00001da5: 	addss	%xmm0, %xmm2
    00001da9: 	movaps	%xmm0, %xmm1
    00001dac: 	shufps	$0x55, %xmm0, %xmm1
    00001db0: 	addss	%xmm2, %xmm1
    00001db4: 	movaps	%xmm0, %xmm2
    00001db7: 	unpckhps	%xmm0, %xmm2
    00001dba: 	shufps	$0xff, %xmm0, %xmm0
    00001dbe: 	addss	%xmm1, %xmm2
    00001dc2: 	addss	%xmm0, %xmm2
    00001dc6: 	cmpq	%rbx, %rax
    00001dc9: 	jne	.Ltmp3604 # Offset: 7625
    00001dcb: 	movss	0x3c(%rsp), %xmm0
    00001dd1: 	pxor	%xmm1, %xmm1
    00001dd5: 	movaps	(%rsp), %xmm5
    00001dd9: 	movss	0x80(%rsp), %xmm3
    00001de2: 	cvtsd2ss	init_value(%rip), %xmm1
    00001dea: 	mulss	%xmm1, %xmm0
    00001dee: 	andps	%xmm2, %xmm5
    00001df1: 	mulss	%xmm1, %xmm3
    00001df5: 	addss	%xmm3, %xmm0
    00001df9: 	movss	0x84(%rsp), %xmm3
    00001e02: 	mulss	%xmm1, %xmm3
    00001e06: 	mulss	0x88(%rsp), %xmm1
    00001e0f: 	addss	%xmm3, %xmm0
    00001e13: 	addss	%xmm1, %xmm0
    00001e17: 	mulss	0x1c(%rsp), %xmm0
    00001e1d: 	movaps	%xmm2, %xmm1
    00001e20: 	subss	%xmm0, %xmm1
    00001e24: 	pxor	%xmm0, %xmm0
    00001e28: 	cvtss2sd	%xmm5, %xmm0
    00001e2c: 	comisd	0x10(%rsp), %xmm0
    00001e32: 	jbe	.Ltmp3605 # Offset: 7730
    00001e34: 	divss	%xmm2, %xmm1
.Ltmp3605:
    00001e38: 	movsd	0x30(%rsp), %xmm5
    00001e3e: 	cvtss2sd	%xmm1, %xmm1
    00001e42: 	andpd	0x20(%rsp), %xmm1
    00001e48: 	comisd	%xmm1, %xmm5
    00001e4c: 	jbe	.Ltmp3606 # Offset: 7756
.Ltmp3713:
    00001e52: 	addl	$0x1, 0x8c(%rsp)
    00001e5a: 	movl	0x8c(%rsp), %eax
    00001e61: 	cmpl	%edx, %eax
    00001e63: 	jl	.Ltmp3607 # Offset: 7779
.Ltmp3603:
    00001e69: 	movq	%r12, %rsi
    00001e6c: 	movq	%r15, %rdi
    00001e6f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7791
    00001e74: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e7b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e82: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e89: 	je	.Ltmp3608 # Offset: 7817
.Ltmp3742:
    00001e8f: 	movq	-0x20(%rax), %rdi
    00001e93: 	movq	%rdi, 0x10(%rsp)
    00001e98: 	callq	clock@PLT # Offset: 7832
    00001e9d: 	movq	0x10(%rsp), %rdi
    00001ea2: 	pxor	%xmm0, %xmm0
    00001ea6: 	movq	%rax, end_time(%rip)
    00001ead: 	subq	start_time(%rip), %rax
    00001eb4: 	cvtsi2sd	%rax, %xmm0
    00001eb9: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001ec1: 	callq	_Z13record_resultdPKc # Offset: 7873
    00001ec6: 	movq	0x190(%rsp), %rdi
    00001ece: 	cmpq	%r14, %rdi
    00001ed1: 	je	.Ltmp3609 # Offset: 7889
    00001ed3: 	movq	0x1a0(%rsp), %rax
    00001edb: 	leaq	0x1(%rax), %rsi
    00001edf: 	callq	_ZdlPvm@PLT # Offset: 7903
.Ltmp3609:
    00001ee4: 	leaq	DATAat0x383b1(%rip), %rdx
    00001eeb: 	movq	%r13, %rsi
    00001eee: 	movq	%r12, %rdi
    00001ef1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7921
    00001ef6: 	callq	clock@PLT # Offset: 7926
    00001efb: 	movl	iterations(%rip), %edx
    00001f01: 	movq	%rax, start_time(%rip)
    00001f08: 	testl	%edx, %edx
    00001f0a: 	jle	.Ltmp3610 # Offset: 7946
    00001f10: 	movss	DATAat0x38670(%rip), %xmm7
    00001f18: 	pxor	%xmm6, %xmm6
    00001f1c: 	movsd	DATAat0x385e8(%rip), %xmm5
    00001f24: 	movss	DATAat0x38640(%rip), %xmm4
    00001f2c: 	movss	%xmm6, 0x38(%rsp)
    00001f32: 	movq	DATAat0x38630(%rip), %xmm6
    00001f3a: 	movss	%xmm7, 0x1c(%rsp)
    00001f40: 	movsd	DATAat0x38608(%rip), %xmm7
    00001f48: 	movaps	%xmm4, (%rsp)
    00001f4c: 	movss	0x88(%rsp), %xmm4
    00001f55: 	movsd	%xmm5, 0x10(%rsp)
    00001f5b: 	movss	0x84(%rsp), %xmm5
    00001f64: 	movaps	%xmm6, 0x20(%rsp)
    00001f69: 	shufps	$0x0, %xmm4, %xmm4
    00001f6d: 	movss	0x80(%rsp), %xmm6
    00001f76: 	movsd	%xmm7, 0x30(%rsp)
    00001f7c: 	movss	0x3c(%rsp), %xmm7
    00001f82: 	shufps	$0x0, %xmm5, %xmm5
    00001f86: 	movl	$0x0, 0x8c(%rsp)
    00001f91: 	shufps	$0x0, %xmm6, %xmm6
    00001f95: 	shufps	$0x0, %xmm7, %xmm7
    00001f99: 	movaps	%xmm6, 0x50(%rsp)
    00001f9e: 	movaps	%xmm7, 0x40(%rsp)
    00001fa3: 	movaps	%xmm5, 0x60(%rsp)
    00001fa8: 	movaps	%xmm4, 0x70(%rsp)
    00001fad: 	nopl	(%rax) # Size: 3
.Ltmp3614:
    00001fb0: 	movaps	0x40(%rsp), %xmm3
    00001fb5: 	movaps	0x50(%rsp), %xmm4
    00001fba: 	movq	%rbp, %rax
    00001fbd: 	pxor	%xmm2, %xmm2
    00001fc1: 	movaps	0x60(%rsp), %xmm5
    00001fc6: 	movaps	0x70(%rsp), %xmm6
    00001fcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3611:
    00001fd0: 	movaps	(%rax), %xmm1
    00001fd3: 	movaps	%xmm4, %xmm0
    00001fd6: 	movaps	%xmm3, %xmm7
    00001fd9: 	addq	$0x10, %rax
    00001fdd: 	mulps	%xmm1, %xmm7
    00001fe0: 	mulps	%xmm1, %xmm0
    00001fe3: 	addps	%xmm7, %xmm0
    00001fe6: 	movaps	%xmm5, %xmm7
    00001fe9: 	mulps	%xmm1, %xmm7
    00001fec: 	mulps	%xmm6, %xmm1
    00001fef: 	addps	%xmm7, %xmm0
    00001ff2: 	addps	%xmm1, %xmm0
    00001ff5: 	addss	%xmm0, %xmm2
    00001ff9: 	movaps	%xmm0, %xmm1
    00001ffc: 	shufps	$0x55, %xmm0, %xmm1
    00002000: 	addss	%xmm2, %xmm1
    00002004: 	movaps	%xmm0, %xmm2
    00002007: 	unpckhps	%xmm0, %xmm2
    0000200a: 	shufps	$0xff, %xmm0, %xmm0
    0000200e: 	addss	%xmm1, %xmm2
    00002012: 	addss	%xmm0, %xmm2
    00002016: 	cmpq	%rbx, %rax
    00002019: 	jne	.Ltmp3611 # Offset: 8217
    0000201b: 	movss	0x3c(%rsp), %xmm0
    00002021: 	pxor	%xmm1, %xmm1
    00002025: 	movaps	(%rsp), %xmm4
    00002029: 	movss	0x80(%rsp), %xmm3
    00002032: 	cvtsd2ss	init_value(%rip), %xmm1
    0000203a: 	mulss	%xmm1, %xmm0
    0000203e: 	andps	%xmm2, %xmm4
    00002041: 	mulss	%xmm1, %xmm3
    00002045: 	addss	%xmm3, %xmm0
    00002049: 	movss	0x84(%rsp), %xmm3
    00002052: 	mulss	%xmm1, %xmm3
    00002056: 	mulss	0x88(%rsp), %xmm1
    0000205f: 	addss	%xmm3, %xmm0
    00002063: 	addss	%xmm1, %xmm0
    00002067: 	mulss	0x1c(%rsp), %xmm0
    0000206d: 	movaps	%xmm2, %xmm1
    00002070: 	subss	%xmm0, %xmm1
    00002074: 	pxor	%xmm0, %xmm0
    00002078: 	cvtss2sd	%xmm4, %xmm0
    0000207c: 	comisd	0x10(%rsp), %xmm0
    00002082: 	jbe	.Ltmp3612 # Offset: 8322
    00002084: 	divss	%xmm2, %xmm1
.Ltmp3612:
    00002088: 	movsd	0x30(%rsp), %xmm4
    0000208e: 	cvtss2sd	%xmm1, %xmm1
    00002092: 	andpd	0x20(%rsp), %xmm1
    00002098: 	comisd	%xmm1, %xmm4
    0000209c: 	jbe	.Ltmp3613 # Offset: 8348
.Ltmp3712:
    000020a2: 	addl	$0x1, 0x8c(%rsp)
    000020aa: 	movl	0x8c(%rsp), %eax
    000020b1: 	cmpl	%edx, %eax
    000020b3: 	jl	.Ltmp3614 # Offset: 8371
.Ltmp3610:
    000020b9: 	movq	%r12, %rsi
    000020bc: 	movq	%r15, %rdi
    000020bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8383
    000020c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020cb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020d9: 	je	.Ltmp3615 # Offset: 8409
.Ltmp3741:
    000020df: 	movq	-0x20(%rax), %rdi
    000020e3: 	movq	%rdi, 0x10(%rsp)
    000020e8: 	callq	clock@PLT # Offset: 8424
    000020ed: 	movq	0x10(%rsp), %rdi
    000020f2: 	pxor	%xmm0, %xmm0
    000020f6: 	movq	%rax, end_time(%rip)
    000020fd: 	subq	start_time(%rip), %rax
    00002104: 	cvtsi2sd	%rax, %xmm0
    00002109: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002111: 	callq	_Z13record_resultdPKc # Offset: 8465
    00002116: 	movq	0x190(%rsp), %rdi
    0000211e: 	cmpq	%r14, %rdi
    00002121: 	je	.Ltmp3616 # Offset: 8481
    00002123: 	movq	0x1a0(%rsp), %rax
    0000212b: 	leaq	0x1(%rax), %rsi
    0000212f: 	callq	_ZdlPvm@PLT # Offset: 8495
.Ltmp3616:
    00002134: 	leaq	DATAat0x383c9(%rip), %rdx
    0000213b: 	movq	%r13, %rsi
    0000213e: 	movq	%r12, %rdi
    00002141: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8513
    00002146: 	callq	clock@PLT # Offset: 8518
    0000214b: 	movl	iterations(%rip), %edx
    00002151: 	movq	%rax, start_time(%rip)
    00002158: 	testl	%edx, %edx
    0000215a: 	jle	.Ltmp3617 # Offset: 8538
    00002160: 	movss	DATAat0x38670(%rip), %xmm5
    00002168: 	pxor	%xmm4, %xmm4
    0000216c: 	movsd	DATAat0x385e8(%rip), %xmm7
    00002174: 	movss	DATAat0x38640(%rip), %xmm6
    0000217c: 	movss	%xmm4, 0x38(%rsp)
    00002182: 	movq	DATAat0x38630(%rip), %xmm4
    0000218a: 	movss	%xmm5, 0x1c(%rsp)
    00002190: 	movsd	DATAat0x38608(%rip), %xmm5
    00002198: 	movaps	%xmm6, (%rsp)
    0000219c: 	movss	0x80(%rsp), %xmm6
    000021a5: 	movsd	%xmm7, 0x10(%rsp)
    000021ab: 	movss	0x3c(%rsp), %xmm7
    000021b1: 	movaps	%xmm4, 0x20(%rsp)
    000021b6: 	shufps	$0x0, %xmm6, %xmm6
    000021ba: 	movss	0x88(%rsp), %xmm4
    000021c3: 	movsd	%xmm5, 0x30(%rsp)
    000021c9: 	shufps	$0x0, %xmm7, %xmm7
    000021cd: 	movss	0x84(%rsp), %xmm5
    000021d6: 	movl	$0x0, 0x8c(%rsp)
    000021e1: 	shufps	$0x0, %xmm4, %xmm4
    000021e5: 	shufps	$0x0, %xmm5, %xmm5
    000021e9: 	movaps	%xmm7, 0x40(%rsp)
    000021ee: 	movaps	%xmm6, 0x50(%rsp)
    000021f3: 	movaps	%xmm5, 0x60(%rsp)
    000021f8: 	movaps	%xmm4, 0x70(%rsp)
    000021fd: 	nopl	(%rax) # Size: 3
.Ltmp3621:
    00002200: 	movaps	0x40(%rsp), %xmm3
    00002205: 	movaps	0x50(%rsp), %xmm4
    0000220a: 	movq	%rbp, %rax
    0000220d: 	pxor	%xmm2, %xmm2
    00002211: 	movaps	0x60(%rsp), %xmm5
    00002216: 	movaps	0x70(%rsp), %xmm6
    0000221b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3618:
    00002220: 	movaps	(%rax), %xmm1
    00002223: 	movaps	%xmm3, %xmm0
    00002226: 	movaps	%xmm4, %xmm7
    00002229: 	addq	$0x10, %rax
    0000222d: 	mulps	%xmm1, %xmm7
    00002230: 	mulps	%xmm1, %xmm0
    00002233: 	subps	%xmm7, %xmm0
    00002236: 	movaps	%xmm5, %xmm7
    00002239: 	mulps	%xmm1, %xmm7
    0000223c: 	mulps	%xmm6, %xmm1
    0000223f: 	addps	%xmm7, %xmm0
    00002242: 	subps	%xmm1, %xmm0
    00002245: 	addss	%xmm0, %xmm2
    00002249: 	movaps	%xmm0, %xmm1
    0000224c: 	shufps	$0x55, %xmm0, %xmm1
    00002250: 	addss	%xmm2, %xmm1
    00002254: 	movaps	%xmm0, %xmm2
    00002257: 	unpckhps	%xmm0, %xmm2
    0000225a: 	shufps	$0xff, %xmm0, %xmm0
    0000225e: 	addss	%xmm1, %xmm2
    00002262: 	addss	%xmm0, %xmm2
    00002266: 	cmpq	%rbx, %rax
    00002269: 	jne	.Ltmp3618 # Offset: 8809
    0000226b: 	movss	0x3c(%rsp), %xmm0
    00002271: 	pxor	%xmm1, %xmm1
    00002275: 	movaps	(%rsp), %xmm6
    00002279: 	movss	0x80(%rsp), %xmm3
    00002282: 	cvtsd2ss	init_value(%rip), %xmm1
    0000228a: 	mulss	%xmm1, %xmm0
    0000228e: 	andps	%xmm2, %xmm6
    00002291: 	mulss	%xmm1, %xmm3
    00002295: 	subss	%xmm3, %xmm0
    00002299: 	movss	0x84(%rsp), %xmm3
    000022a2: 	mulss	%xmm1, %xmm3
    000022a6: 	mulss	0x88(%rsp), %xmm1
    000022af: 	addss	%xmm3, %xmm0
    000022b3: 	subss	%xmm1, %xmm0
    000022b7: 	mulss	0x1c(%rsp), %xmm0
    000022bd: 	movaps	%xmm2, %xmm1
    000022c0: 	subss	%xmm0, %xmm1
    000022c4: 	pxor	%xmm0, %xmm0
    000022c8: 	cvtss2sd	%xmm6, %xmm0
    000022cc: 	comisd	0x10(%rsp), %xmm0
    000022d2: 	jbe	.Ltmp3619 # Offset: 8914
    000022d4: 	divss	%xmm2, %xmm1
.Ltmp3619:
    000022d8: 	movsd	0x30(%rsp), %xmm6
    000022de: 	cvtss2sd	%xmm1, %xmm1
    000022e2: 	andpd	0x20(%rsp), %xmm1
    000022e8: 	comisd	%xmm1, %xmm6
    000022ec: 	jbe	.Ltmp3620 # Offset: 8940
.Ltmp3711:
    000022f2: 	addl	$0x1, 0x8c(%rsp)
    000022fa: 	movl	0x8c(%rsp), %eax
    00002301: 	cmpl	%edx, %eax
    00002303: 	jl	.Ltmp3621 # Offset: 8963
.Ltmp3617:
    00002309: 	movq	%r12, %rsi
    0000230c: 	movq	%r15, %rdi
    0000230f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8975
    00002314: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000231b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002322: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002329: 	je	.Ltmp3622 # Offset: 9001
.Ltmp3740:
    0000232f: 	movq	-0x20(%rax), %rdi
    00002333: 	movq	%rdi, 0x10(%rsp)
    00002338: 	callq	clock@PLT # Offset: 9016
    0000233d: 	movq	0x10(%rsp), %rdi
    00002342: 	pxor	%xmm0, %xmm0
    00002346: 	movq	%rax, end_time(%rip)
    0000234d: 	subq	start_time(%rip), %rax
    00002354: 	cvtsi2sd	%rax, %xmm0
    00002359: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002361: 	callq	_Z13record_resultdPKc # Offset: 9057
    00002366: 	movq	0x190(%rsp), %rdi
    0000236e: 	cmpq	%r14, %rdi
    00002371: 	je	.Ltmp3623 # Offset: 9073
    00002373: 	movq	0x1a0(%rsp), %rax
    0000237b: 	leaq	0x1(%rax), %rsi
    0000237f: 	callq	_ZdlPvm@PLT # Offset: 9087
.Ltmp3623:
    00002384: 	leaq	DATAat0x38528(%rip), %rdx
    0000238b: 	movq	%r13, %rsi
    0000238e: 	movq	%r12, %rdi
    00002391: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9105
    00002396: 	callq	clock@PLT # Offset: 9110
    0000239b: 	movl	iterations(%rip), %edx
    000023a1: 	movq	%rax, start_time(%rip)
    000023a8: 	testl	%edx, %edx
    000023aa: 	jle	.Ltmp3624 # Offset: 9130
    000023b0: 	movss	0x80(%rsp), %xmm0
    000023b9: 	movss	DATAat0x38670(%rip), %xmm6
    000023c1: 	movss	DATAat0x38640(%rip), %xmm7
    000023c9: 	pxor	%xmm4, %xmm4
    000023cd: 	addss	0x84(%rsp), %xmm0
    000023d6: 	movaps	%xmm7, (%rsp)
    000023da: 	movss	0x88(%rsp), %xmm5
    000023e3: 	movsd	DATAat0x38608(%rip), %xmm7
    000023eb: 	movss	%xmm6, 0x1c(%rsp)
    000023f1: 	movq	DATAat0x38630(%rip), %xmm6
    000023f9: 	movss	%xmm4, 0x38(%rsp)
    000023ff: 	movsd	DATAat0x385e8(%rip), %xmm4
    00002407: 	addss	%xmm0, %xmm5
    0000240b: 	movsd	%xmm7, 0x30(%rsp)
    00002411: 	movss	0x3c(%rsp), %xmm7
    00002417: 	movl	$0x0, 0x50(%rsp)
    0000241f: 	movaps	%xmm6, 0x20(%rsp)
    00002424: 	shufps	$0x0, %xmm7, %xmm7
    00002428: 	movaps	%xmm5, %xmm6
    0000242b: 	movss	%xmm5, 0x60(%rsp)
    00002431: 	shufps	$0x0, %xmm6, %xmm6
    00002435: 	movsd	%xmm4, 0x10(%rsp)
    0000243b: 	movaps	%xmm7, 0x40(%rsp)
    00002440: 	movaps	%xmm6, 0x70(%rsp)
    00002445: 	nopl	(%rax) # Size: 3
.Ltmp3628:
    00002448: 	movaps	0x40(%rsp), %xmm3
    0000244d: 	movaps	0x70(%rsp), %xmm4
    00002452: 	movq	%rbp, %rax
    00002455: 	pxor	%xmm1, %xmm1
    00002459: 	nopl	(%rax) # Size: 7
.Ltmp3625:
    00002460: 	movaps	(%rax), %xmm0
    00002463: 	addq	$0x10, %rax
    00002467: 	addps	%xmm3, %xmm0
    0000246a: 	mulps	%xmm4, %xmm0
    0000246d: 	addss	%xmm0, %xmm1
    00002471: 	movaps	%xmm0, %xmm2
    00002474: 	shufps	$0x55, %xmm0, %xmm2
    00002478: 	addss	%xmm1, %xmm2
    0000247c: 	movaps	%xmm0, %xmm1
    0000247f: 	unpckhps	%xmm0, %xmm1
    00002482: 	shufps	$0xff, %xmm0, %xmm0
    00002486: 	addss	%xmm2, %xmm1
    0000248a: 	addss	%xmm0, %xmm1
    0000248e: 	cmpq	%rbx, %rax
    00002491: 	jne	.Ltmp3625 # Offset: 9361
    00002493: 	pxor	%xmm0, %xmm0
    00002497: 	movaps	(%rsp), %xmm5
    0000249b: 	movaps	%xmm1, %xmm2
    0000249e: 	cvtsd2ss	init_value(%rip), %xmm0
    000024a6: 	addss	0x3c(%rsp), %xmm0
    000024ac: 	mulss	0x60(%rsp), %xmm0
    000024b2: 	mulss	0x1c(%rsp), %xmm0
    000024b8: 	andps	%xmm1, %xmm5
    000024bb: 	subss	%xmm0, %xmm2
    000024bf: 	pxor	%xmm0, %xmm0
    000024c3: 	cvtss2sd	%xmm5, %xmm0
    000024c7: 	comisd	0x10(%rsp), %xmm0
    000024cd: 	jbe	.Ltmp3626 # Offset: 9421
    000024cf: 	divss	%xmm1, %xmm2
.Ltmp3626:
    000024d3: 	movsd	0x30(%rsp), %xmm6
    000024d9: 	cvtss2sd	%xmm2, %xmm2
    000024dd: 	andpd	0x20(%rsp), %xmm2
    000024e3: 	comisd	%xmm2, %xmm6
    000024e7: 	jbe	.Ltmp3627 # Offset: 9447
.Ltmp3710:
    000024ed: 	addl	$0x1, 0x50(%rsp)
    000024f2: 	movl	0x50(%rsp), %eax
    000024f6: 	cmpl	%edx, %eax
    000024f8: 	jl	.Ltmp3628 # Offset: 9464
.Ltmp3624:
    000024fe: 	movq	%r12, %rsi
    00002501: 	movq	%r15, %rdi
    00002504: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9476
    00002509: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002510: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002517: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000251e: 	je	.Ltmp3629 # Offset: 9502
.Ltmp3739:
    00002524: 	movq	-0x20(%rax), %rdi
    00002528: 	movq	%rdi, 0x10(%rsp)
    0000252d: 	callq	clock@PLT # Offset: 9517
    00002532: 	movq	0x10(%rsp), %rdi
    00002537: 	pxor	%xmm0, %xmm0
    0000253b: 	movq	%rax, end_time(%rip)
    00002542: 	subq	start_time(%rip), %rax
    00002549: 	cvtsi2sd	%rax, %xmm0
    0000254e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002556: 	callq	_Z13record_resultdPKc # Offset: 9558
    0000255b: 	movq	0x190(%rsp), %rdi
    00002563: 	cmpq	%r14, %rdi
    00002566: 	je	.Ltmp3630 # Offset: 9574
    00002568: 	movq	0x1a0(%rsp), %rax
    00002570: 	leaq	0x1(%rax), %rsi
    00002574: 	callq	_ZdlPvm@PLT # Offset: 9588
.Ltmp3630:
    00002579: 	leaq	DATAat0x383e1(%rip), %rdx
    00002580: 	movq	%r13, %rsi
    00002583: 	movq	%r12, %rdi
    00002586: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9606
    0000258b: 	callq	clock@PLT # Offset: 9611
    00002590: 	movl	iterations(%rip), %edx
    00002596: 	movq	%rax, start_time(%rip)
    0000259d: 	testl	%edx, %edx
    0000259f: 	jle	.Ltmp3631 # Offset: 9631
    000025a5: 	pxor	%xmm5, %xmm5
    000025a9: 	movss	0x3c(%rsp), %xmm7
    000025af: 	movss	0x80(%rsp), %xmm3
    000025b8: 	movl	$0x0, 0x40(%rsp)
    000025c0: 	movss	0x84(%rsp), %xmm2
    000025c9: 	movss	%xmm5, 0x38(%rsp)
    000025cf: 	movss	DATAat0x38670(%rip), %xmm5
    000025d7: 	movss	0x88(%rsp), %xmm0
    000025e0: 	movaps	%xmm7, %xmm4
    000025e3: 	movaps	%xmm7, %xmm6
    000025e6: 	movss	%xmm5, 0x1c(%rsp)
    000025ec: 	mulss	%xmm3, %xmm4
    000025f0: 	movss	DATAat0x38640(%rip), %xmm5
    000025f8: 	movaps	%xmm5, (%rsp)
    000025fc: 	movsd	DATAat0x385e8(%rip), %xmm5
    00002604: 	mulss	%xmm2, %xmm6
    00002608: 	mulss	%xmm0, %xmm7
    0000260c: 	movsd	%xmm5, 0x10(%rsp)
    00002612: 	movq	DATAat0x38630(%rip), %xmm5
    0000261a: 	movaps	%xmm5, 0x20(%rsp)
    0000261f: 	movsd	DATAat0x38608(%rip), %xmm5
    00002627: 	movss	%xmm4, 0x8c(%rsp)
    00002630: 	movsd	%xmm5, 0x30(%rsp)
    00002636: 	movaps	%xmm3, %xmm5
    00002639: 	movss	%xmm6, 0xc0(%rsp)
    00002642: 	shufps	$0x0, %xmm5, %xmm5
    00002646: 	movaps	%xmm5, 0x50(%rsp)
    0000264b: 	movaps	%xmm2, %xmm5
    0000264e: 	movss	%xmm7, 0xc4(%rsp)
    00002657: 	shufps	$0x0, %xmm5, %xmm5
    0000265b: 	movaps	%xmm5, 0x60(%rsp)
    00002660: 	movaps	%xmm0, %xmm5
    00002663: 	shufps	$0x0, %xmm5, %xmm5
    00002667: 	movaps	%xmm5, 0x70(%rsp)
    0000266c: 	movaps	%xmm4, %xmm5
    0000266f: 	movaps	%xmm6, %xmm4
    00002672: 	movaps	%xmm7, %xmm6
    00002675: 	shufps	$0x0, %xmm5, %xmm5
    00002679: 	shufps	$0x0, %xmm4, %xmm4
    0000267d: 	movaps	%xmm5, 0x90(%rsp)
    00002685: 	shufps	$0x0, %xmm6, %xmm6
    00002689: 	movaps	%xmm4, 0xa0(%rsp)
    00002691: 	movaps	%xmm6, 0xb0(%rsp)
    00002699: 	nopl	(%rax) # Size: 7
.Ltmp3635:
    000026a0: 	movaps	0x50(%rsp), %xmm2
    000026a5: 	movaps	0x60(%rsp), %xmm3
    000026aa: 	movq	%rbp, %rax
    000026ad: 	pxor	%xmm1, %xmm1
    000026b1: 	movaps	0x70(%rsp), %xmm4
    000026b6: 	movaps	0x90(%rsp), %xmm5
    000026be: 	movaps	0xa0(%rsp), %xmm6
    000026c6: 	movaps	0xb0(%rsp), %xmm7
    000026ce: 	nop # Size: 2
.Ltmp3632:
    000026d0: 	movaps	(%rax), %xmm8
    000026d4: 	movaps	%xmm3, %xmm0
    000026d7: 	movaps	%xmm2, %xmm9
    000026db: 	addq	$0x10, %rax
    000026df: 	mulps	%xmm8, %xmm0
    000026e3: 	mulps	%xmm8, %xmm9
    000026e7: 	mulps	%xmm4, %xmm8
    000026eb: 	addps	%xmm9, %xmm0
    000026ef: 	addps	%xmm8, %xmm0
    000026f3: 	addps	%xmm5, %xmm0
    000026f6: 	addps	%xmm6, %xmm0
    000026f9: 	addps	%xmm7, %xmm0
    000026fc: 	addss	%xmm0, %xmm1
    00002700: 	movaps	%xmm0, %xmm8
    00002704: 	shufps	$0x55, %xmm0, %xmm8
    00002709: 	addss	%xmm1, %xmm8
    0000270e: 	movaps	%xmm0, %xmm1
    00002711: 	unpckhps	%xmm0, %xmm1
    00002714: 	shufps	$0xff, %xmm0, %xmm0
    00002718: 	addss	%xmm8, %xmm1
    0000271d: 	addss	%xmm0, %xmm1
    00002721: 	cmpq	%rbx, %rax
    00002724: 	jne	.Ltmp3632 # Offset: 10020
    00002726: 	movss	0x80(%rsp), %xmm0
    0000272f: 	pxor	%xmm2, %xmm2
    00002733: 	movaps	(%rsp), %xmm4
    00002737: 	movss	0x84(%rsp), %xmm3
    00002740: 	cvtsd2ss	init_value(%rip), %xmm2
    00002748: 	mulss	%xmm2, %xmm0
    0000274c: 	andps	%xmm1, %xmm4
    0000274f: 	mulss	%xmm2, %xmm3
    00002753: 	mulss	0x88(%rsp), %xmm2
    0000275c: 	addss	%xmm3, %xmm0
    00002760: 	addss	%xmm2, %xmm0
    00002764: 	movaps	%xmm1, %xmm2
    00002767: 	addss	0x8c(%rsp), %xmm0
    00002770: 	addss	0xc0(%rsp), %xmm0
    00002779: 	addss	0xc4(%rsp), %xmm0
    00002782: 	mulss	0x1c(%rsp), %xmm0
    00002788: 	subss	%xmm0, %xmm2
    0000278c: 	pxor	%xmm0, %xmm0
    00002790: 	cvtss2sd	%xmm4, %xmm0
    00002794: 	comisd	0x10(%rsp), %xmm0
    0000279a: 	jbe	.Ltmp3633 # Offset: 10138
    0000279c: 	divss	%xmm1, %xmm2
.Ltmp3633:
    000027a0: 	movsd	0x30(%rsp), %xmm5
    000027a6: 	cvtss2sd	%xmm2, %xmm2
    000027aa: 	andpd	0x20(%rsp), %xmm2
    000027b0: 	comisd	%xmm2, %xmm5
    000027b4: 	jbe	.Ltmp3634 # Offset: 10164
.Ltmp3709:
    000027ba: 	addl	$0x1, 0x40(%rsp)
    000027bf: 	movl	0x40(%rsp), %eax
    000027c3: 	cmpl	%edx, %eax
    000027c5: 	jl	.Ltmp3635 # Offset: 10181
.Ltmp3631:
    000027cb: 	movq	%r12, %rsi
    000027ce: 	movq	%r15, %rdi
    000027d1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10193
    000027d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027dd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000027e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027eb: 	je	.Ltmp3636 # Offset: 10219
.Ltmp3738:
    000027f1: 	movq	-0x20(%rax), %rdi
    000027f5: 	movq	%rdi, 0x10(%rsp)
    000027fa: 	callq	clock@PLT # Offset: 10234
    000027ff: 	movq	0x10(%rsp), %rdi
    00002804: 	pxor	%xmm0, %xmm0
    00002808: 	movq	%rax, end_time(%rip)
    0000280f: 	subq	start_time(%rip), %rax
    00002816: 	cvtsi2sd	%rax, %xmm0
    0000281b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002823: 	callq	_Z13record_resultdPKc # Offset: 10275
    00002828: 	movq	0x190(%rsp), %rdi
    00002830: 	cmpq	%r14, %rdi
    00002833: 	je	.Ltmp3637 # Offset: 10291
    00002835: 	movq	0x1a0(%rsp), %rax
    0000283d: 	leaq	0x1(%rax), %rsi
    00002841: 	callq	_ZdlPvm@PLT # Offset: 10305
.Ltmp3637:
    00002846: 	leaq	0x150(%rsp), %rdi
    0000284e: 	leaq	DATAat0x3839a(%rip), %rdx
    00002855: 	movq	%r13, %rsi
    00002858: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10328
    0000285d: 	movl	iterations(%rip), %esi
    00002863: 	movq	0x150(%rsp), %rdi
    0000286b: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10347
    00002870: 	leaq	DATAat0x38593(%rip), %rdx
    00002877: 	movq	%r13, %rsi
    0000287a: 	movq	%r12, %rdi
    0000287d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10365
    00002882: 	callq	clock@PLT # Offset: 10370
    00002887: 	movl	iterations(%rip), %edx
    0000288d: 	movq	%rax, start_time(%rip)
    00002894: 	testl	%edx, %edx
    00002896: 	jle	.Ltmp3638 # Offset: 10390
    0000289c: 	movss	DATAat0x38670(%rip), %xmm7
    000028a4: 	movss	0x3c(%rsp), %xmm0
    000028aa: 	pxor	%xmm4, %xmm4
    000028ae: 	movl	$0x0, 0x40(%rsp)
    000028b6: 	addss	0x80(%rsp), %xmm0
    000028bf: 	movss	%xmm4, 0x38(%rsp)
    000028c5: 	addss	0x84(%rsp), %xmm0
    000028ce: 	movss	DATAat0x38640(%rip), %xmm4
    000028d6: 	movss	0x88(%rsp), %xmm6
    000028df: 	movss	%xmm7, 0x1c(%rsp)
    000028e5: 	movsd	DATAat0x385e8(%rip), %xmm7
    000028ed: 	movaps	%xmm4, (%rsp)
    000028f1: 	movq	DATAat0x38630(%rip), %xmm4
    000028f9: 	addss	%xmm0, %xmm6
    000028fd: 	movsd	%xmm7, 0x10(%rsp)
    00002903: 	movsd	DATAat0x38608(%rip), %xmm7
    0000290b: 	movaps	%xmm4, 0x20(%rsp)
    00002910: 	movsd	%xmm7, 0x30(%rsp)
    00002916: 	movaps	%xmm6, %xmm7
    00002919: 	movss	%xmm6, 0x50(%rsp)
    0000291f: 	shufps	$0x0, %xmm7, %xmm7
    00002923: 	movaps	%xmm7, 0x60(%rsp)
    00002928: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3642:
    00002930: 	movaps	0x60(%rsp), %xmm3
    00002935: 	movq	%rbp, %rax
    00002938: 	pxor	%xmm0, %xmm0
    0000293c: 	nopl	(%rax) # Size: 4
.Ltmp3639:
    00002940: 	movaps	%xmm3, %xmm1
    00002943: 	divps	(%rax), %xmm1
    00002946: 	addss	%xmm1, %xmm0
    0000294a: 	movaps	%xmm1, %xmm2
    0000294d: 	shufps	$0x55, %xmm1, %xmm2
    00002951: 	addq	$0x10, %rax
    00002955: 	addss	%xmm0, %xmm2
    00002959: 	movaps	%xmm1, %xmm0
    0000295c: 	unpckhps	%xmm1, %xmm0
    0000295f: 	shufps	$0xff, %xmm1, %xmm1
    00002963: 	addss	%xmm2, %xmm0
    00002967: 	addss	%xmm1, %xmm0
    0000296b: 	cmpq	%rbx, %rax
    0000296e: 	jne	.Ltmp3639 # Offset: 10606
    00002970: 	movss	0x50(%rsp), %xmm2
    00002976: 	pxor	%xmm1, %xmm1
    0000297a: 	movaps	(%rsp), %xmm6
    0000297e: 	cvtsd2ss	init_value(%rip), %xmm1
    00002986: 	divss	%xmm1, %xmm2
    0000298a: 	movaps	%xmm0, %xmm1
    0000298d: 	andps	%xmm0, %xmm6
    00002990: 	mulss	0x1c(%rsp), %xmm2
    00002996: 	subss	%xmm2, %xmm1
    0000299a: 	pxor	%xmm2, %xmm2
    0000299e: 	cvtss2sd	%xmm6, %xmm2
    000029a2: 	comisd	0x10(%rsp), %xmm2
    000029a8: 	jbe	.Ltmp3640 # Offset: 10664
    000029aa: 	divss	%xmm0, %xmm1
.Ltmp3640:
    000029ae: 	movsd	0x30(%rsp), %xmm6
    000029b4: 	cvtss2sd	%xmm1, %xmm1
    000029b8: 	andpd	0x20(%rsp), %xmm1
    000029be: 	comisd	%xmm1, %xmm6
    000029c2: 	jbe	.Ltmp3641 # Offset: 10690
.Ltmp3708:
    000029c8: 	addl	$0x1, 0x40(%rsp)
    000029cd: 	movl	0x40(%rsp), %eax
    000029d1: 	cmpl	%edx, %eax
    000029d3: 	jl	.Ltmp3642 # Offset: 10707
.Ltmp3638:
    000029d9: 	movq	%r12, %rsi
    000029dc: 	movq	%r15, %rdi
    000029df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10719
    000029e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029eb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000029f2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029f9: 	je	.Ltmp3643 # Offset: 10745
.Ltmp3737:
    000029ff: 	movq	-0x20(%rax), %rdi
    00002a03: 	movq	%rdi, 0x10(%rsp)
    00002a08: 	callq	clock@PLT # Offset: 10760
    00002a0d: 	movq	0x10(%rsp), %rdi
    00002a12: 	pxor	%xmm0, %xmm0
    00002a16: 	movq	%rax, end_time(%rip)
    00002a1d: 	subq	start_time(%rip), %rax
    00002a24: 	cvtsi2sd	%rax, %xmm0
    00002a29: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002a31: 	callq	_Z13record_resultdPKc # Offset: 10801
    00002a36: 	movq	0x190(%rsp), %rdi
    00002a3e: 	cmpq	%r14, %rdi
    00002a41: 	je	.Ltmp3644 # Offset: 10817
    00002a43: 	movq	0x1a0(%rsp), %rax
    00002a4b: 	leaq	0x1(%rax), %rsi
    00002a4f: 	callq	_ZdlPvm@PLT # Offset: 10831
.Ltmp3644:
    00002a54: 	leaq	DATAat0x385b0(%rip), %rdx
    00002a5b: 	movq	%r13, %rsi
    00002a5e: 	movq	%r12, %rdi
    00002a61: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10849
    00002a66: 	callq	clock@PLT # Offset: 10854
    00002a6b: 	movl	iterations(%rip), %edx
    00002a71: 	movq	%rax, start_time(%rip)
    00002a78: 	testl	%edx, %edx
    00002a7a: 	jle	.Ltmp3645 # Offset: 10874
    00002a80: 	pxor	%xmm6, %xmm6
    00002a84: 	movsd	DATAat0x385e8(%rip), %xmm4
    00002a8c: 	movq	DATAat0x38630(%rip), %xmm5
    00002a94: 	movl	$0x0, 0x8c(%rsp)
    00002a9f: 	movss	0x80(%rsp), %xmm7
    00002aa8: 	movss	%xmm6, 0x38(%rsp)
    00002aae: 	movss	DATAat0x38670(%rip), %xmm6
    00002ab6: 	movsd	%xmm4, 0x10(%rsp)
    00002abc: 	movss	0x3c(%rsp), %xmm4
    00002ac2: 	movss	%xmm6, 0x1c(%rsp)
    00002ac8: 	movss	DATAat0x38640(%rip), %xmm6
    00002ad0: 	shufps	$0x0, %xmm7, %xmm7
    00002ad4: 	movaps	%xmm6, (%rsp)
    00002ad8: 	movsd	DATAat0x38608(%rip), %xmm6
    00002ae0: 	shufps	$0x0, %xmm4, %xmm4
    00002ae4: 	movaps	%xmm4, 0x40(%rsp)
    00002ae9: 	movss	0x88(%rsp), %xmm4
    00002af2: 	movsd	%xmm6, 0x30(%rsp)
    00002af8: 	movss	0x84(%rsp), %xmm6
    00002b01: 	shufps	$0x0, %xmm4, %xmm4
    00002b05: 	movaps	%xmm5, 0x20(%rsp)
    00002b0a: 	shufps	$0x0, %xmm6, %xmm6
    00002b0e: 	movaps	%xmm7, 0x50(%rsp)
    00002b13: 	movaps	%xmm6, 0x60(%rsp)
    00002b18: 	movaps	%xmm4, 0x70(%rsp)
    00002b1d: 	nopl	(%rax) # Size: 3
.Ltmp3649:
    00002b20: 	movaps	0x40(%rsp), %xmm3
    00002b25: 	movaps	0x50(%rsp), %xmm4
    00002b2a: 	movq	%rbp, %rax
    00002b2d: 	pxor	%xmm1, %xmm1
    00002b31: 	movaps	0x60(%rsp), %xmm5
    00002b36: 	movaps	0x70(%rsp), %xmm6
    00002b3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3646:
    00002b40: 	movaps	(%rax), %xmm2
    00002b43: 	movaps	%xmm4, %xmm0
    00002b46: 	movaps	%xmm3, %xmm7
    00002b49: 	addq	$0x10, %rax
    00002b4d: 	divps	%xmm2, %xmm7
    00002b50: 	divps	%xmm2, %xmm0
    00002b53: 	addps	%xmm7, %xmm0
    00002b56: 	movaps	%xmm5, %xmm7
    00002b59: 	divps	%xmm2, %xmm7
    00002b5c: 	addps	%xmm7, %xmm0
    00002b5f: 	movaps	%xmm6, %xmm7
    00002b62: 	divps	%xmm2, %xmm7
    00002b65: 	addps	%xmm7, %xmm0
    00002b68: 	addss	%xmm0, %xmm1
    00002b6c: 	movaps	%xmm0, %xmm2
    00002b6f: 	shufps	$0x55, %xmm0, %xmm2
    00002b73: 	addss	%xmm1, %xmm2
    00002b77: 	movaps	%xmm0, %xmm1
    00002b7a: 	unpckhps	%xmm0, %xmm1
    00002b7d: 	shufps	$0xff, %xmm0, %xmm0
    00002b81: 	addss	%xmm2, %xmm1
    00002b85: 	addss	%xmm0, %xmm1
    00002b89: 	cmpq	%rbx, %rax
    00002b8c: 	jne	.Ltmp3646 # Offset: 11148
    00002b8e: 	movss	0x3c(%rsp), %xmm0
    00002b94: 	pxor	%xmm2, %xmm2
    00002b98: 	movaps	(%rsp), %xmm5
    00002b9c: 	movss	0x80(%rsp), %xmm3
    00002ba5: 	cvtsd2ss	init_value(%rip), %xmm2
    00002bad: 	divss	%xmm2, %xmm0
    00002bb1: 	andps	%xmm1, %xmm5
    00002bb4: 	divss	%xmm2, %xmm3
    00002bb8: 	addss	%xmm3, %xmm0
    00002bbc: 	movss	0x84(%rsp), %xmm3
    00002bc5: 	divss	%xmm2, %xmm3
    00002bc9: 	addss	%xmm3, %xmm0
    00002bcd: 	movss	0x88(%rsp), %xmm3
    00002bd6: 	divss	%xmm2, %xmm3
    00002bda: 	movaps	%xmm1, %xmm2
    00002bdd: 	addss	%xmm3, %xmm0
    00002be1: 	mulss	0x1c(%rsp), %xmm0
    00002be7: 	subss	%xmm0, %xmm2
    00002beb: 	pxor	%xmm0, %xmm0
    00002bef: 	cvtss2sd	%xmm5, %xmm0
    00002bf3: 	comisd	0x10(%rsp), %xmm0
    00002bf9: 	jbe	.Ltmp3647 # Offset: 11257
    00002bfb: 	divss	%xmm1, %xmm2
.Ltmp3647:
    00002bff: 	movsd	0x30(%rsp), %xmm6
    00002c05: 	cvtss2sd	%xmm2, %xmm2
    00002c09: 	andpd	0x20(%rsp), %xmm2
    00002c0f: 	comisd	%xmm2, %xmm6
    00002c13: 	jbe	.Ltmp3648 # Offset: 11283
.Ltmp3707:
    00002c19: 	addl	$0x1, 0x8c(%rsp)
    00002c21: 	movl	0x8c(%rsp), %eax
    00002c28: 	cmpl	%edx, %eax
    00002c2a: 	jl	.Ltmp3649 # Offset: 11306
.Ltmp3645:
    00002c30: 	movq	%r12, %rsi
    00002c33: 	movq	%r15, %rdi
    00002c36: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11318
    00002c3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c42: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c49: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c50: 	je	.Ltmp3650 # Offset: 11344
.Ltmp3736:
    00002c56: 	movq	-0x20(%rax), %rbx
    00002c5a: 	callq	clock@PLT # Offset: 11354
    00002c5f: 	pxor	%xmm0, %xmm0
    00002c63: 	movq	%rax, end_time(%rip)
    00002c6a: 	movq	%rbx, %rdi
    00002c6d: 	subq	start_time(%rip), %rax
    00002c74: 	cvtsi2sd	%rax, %xmm0
    00002c79: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002c81: 	callq	_Z13record_resultdPKc # Offset: 11393
    00002c86: 	movq	0x190(%rsp), %rdi
    00002c8e: 	cmpq	%r14, %rdi
    00002c91: 	je	.Ltmp3651 # Offset: 11409
    00002c93: 	movq	0x1a0(%rsp), %rax
    00002c9b: 	leaq	0x1(%rax), %rsi
    00002c9f: 	callq	_ZdlPvm@PLT # Offset: 11423
.Ltmp3651:
    00002ca4: 	leaq	0x170(%rsp), %rdi
    00002cac: 	leaq	DATAat0x385b0(%rip), %rdx
    00002cb3: 	movq	%r13, %rsi
    00002cb6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11446
    00002cbb: 	movl	iterations(%rip), %esi
    00002cc1: 	movq	0x170(%rsp), %rdi
    00002cc9: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 11465
    00002cce: 	leaq	DATAat0x383fa(%rip), %rdx
    00002cd5: 	movq	%r13, %rsi
    00002cd8: 	movq	%r12, %rdi
    00002cdb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11483
    00002ce0: 	callq	clock@PLT # Offset: 11488
    00002ce5: 	movl	iterations(%rip), %edx
    00002ceb: 	movq	%rax, start_time(%rip)
    00002cf2: 	testl	%edx, %edx
    00002cf4: 	jle	.Ltmp3652 # Offset: 11508
    00002cfa: 	movss	DATAat0x38670(%rip), %xmm4
    00002d02: 	pxor	%xmm7, %xmm7
    00002d06: 	movsd	DATAat0x385e8(%rip), %xmm6
    00002d0e: 	movl	$0x0, 0x3c(%rsp)
    00002d16: 	movss	%xmm7, 0x38(%rsp)
    00002d1c: 	movq	DATAat0x38630(%rip), %xmm7
    00002d24: 	movss	DATAat0x38640(%rip), %xmm5
    00002d2c: 	leaq	0x7cf0(%rbp), %rbx
    00002d33: 	movss	%xmm4, 0x1c(%rsp)
    00002d39: 	movsd	DATAat0x38608(%rip), %xmm4
    00002d41: 	movaps	%xmm5, (%rsp)
    00002d45: 	movsd	%xmm6, 0x10(%rsp)
    00002d4b: 	movaps	%xmm7, 0x20(%rsp)
    00002d50: 	movsd	%xmm4, 0x30(%rsp)
    00002d56: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3656:
    00002d60: 	movss	0x1b4(%rsp), %xmm0
    00002d69: 	movq	%rbp, %rax
    00002d6c: 	addss	0x1b0(%rsp), %xmm0
    00002d75: 	mulss	%xmm0, %xmm0
    00002d79: 	addss	0x38(%rsp), %xmm0
    00002d7f: 	nop # Size: 1
.Ltmp3653:
    00002d80: 	movups	0x4(%rax), %xmm1
    00002d84: 	addps	(%rax), %xmm1
    00002d87: 	addq	$0x10, %rax
    00002d8b: 	mulps	%xmm1, %xmm1
    00002d8e: 	addss	%xmm1, %xmm0
    00002d92: 	movaps	%xmm1, %xmm2
    00002d95: 	shufps	$0x55, %xmm1, %xmm2
    00002d99: 	addss	%xmm0, %xmm2
    00002d9d: 	movaps	%xmm1, %xmm0
    00002da0: 	unpckhps	%xmm1, %xmm0
    00002da3: 	shufps	$0xff, %xmm1, %xmm1
    00002da7: 	addss	%xmm2, %xmm0
    00002dab: 	addss	%xmm1, %xmm0
    00002daf: 	cmpq	%rax, %rbx
    00002db2: 	jne	.Ltmp3653 # Offset: 11698
    00002db4: 	movq	0x7ea0(%rsp), %xmm2
    00002dbd: 	movaps	(%rsp), %xmm5
    00002dc1: 	movq	0x7ea4(%rsp), %xmm1
    00002dca: 	addps	%xmm2, %xmm1
    00002dcd: 	mulps	%xmm1, %xmm1
    00002dd0: 	addss	%xmm1, %xmm0
    00002dd4: 	shufps	$0xe5, %xmm1, %xmm1
    00002dd8: 	addss	%xmm0, %xmm1
    00002ddc: 	movss	0x7ea8(%rsp), %xmm0
    00002de5: 	addss	0x7eac(%rsp), %xmm0
    00002dee: 	mulss	%xmm0, %xmm0
    00002df2: 	addss	%xmm1, %xmm0
    00002df6: 	pxor	%xmm1, %xmm1
    00002dfa: 	cvtsd2ss	init_value(%rip), %xmm1
    00002e02: 	addss	%xmm1, %xmm1
    00002e06: 	movaps	%xmm0, %xmm2
    00002e09: 	andps	%xmm0, %xmm5
    00002e0c: 	mulss	%xmm1, %xmm1
    00002e10: 	mulss	0x1c(%rsp), %xmm1
    00002e16: 	subss	%xmm1, %xmm2
    00002e1a: 	pxor	%xmm1, %xmm1
    00002e1e: 	cvtss2sd	%xmm5, %xmm1
    00002e22: 	comisd	0x10(%rsp), %xmm1
    00002e28: 	jbe	.Ltmp3654 # Offset: 11816
    00002e2a: 	divss	%xmm0, %xmm2
    00002e2e: 	nop # Size: 2
.Ltmp3654:
    00002e30: 	movsd	0x30(%rsp), %xmm5
    00002e36: 	cvtss2sd	%xmm2, %xmm2
    00002e3a: 	andpd	0x20(%rsp), %xmm2
    00002e40: 	comisd	%xmm2, %xmm5
    00002e44: 	jbe	.Ltmp3655 # Offset: 11844
.Ltmp3706:
    00002e4a: 	addl	$0x1, 0x3c(%rsp)
    00002e4f: 	movl	0x3c(%rsp), %eax
    00002e53: 	cmpl	%edx, %eax
    00002e55: 	jl	.Ltmp3656 # Offset: 11861
.Ltmp3652:
    00002e5b: 	movq	%r12, %rsi
    00002e5e: 	movq	%r15, %rdi
    00002e61: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11873
    00002e66: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002e6d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002e74: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002e7b: 	je	.Ltmp3657 # Offset: 11899
.Ltmp3735:
    00002e81: 	movq	-0x20(%rax), %rbx
    00002e85: 	callq	clock@PLT # Offset: 11909
    00002e8a: 	pxor	%xmm0, %xmm0
    00002e8e: 	movq	%rax, end_time(%rip)
    00002e95: 	movq	%rbx, %rdi
    00002e98: 	subq	start_time(%rip), %rax
    00002e9f: 	cvtsi2sd	%rax, %xmm0
    00002ea4: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002eac: 	callq	_Z13record_resultdPKc # Offset: 11948
    00002eb1: 	movq	0x190(%rsp), %rdi
    00002eb9: 	cmpq	%r14, %rdi
    00002ebc: 	je	.Ltmp3658 # Offset: 11964
    00002ebe: 	movq	0x1a0(%rsp), %rax
    00002ec6: 	leaq	0x1(%rax), %rsi
    00002eca: 	callq	_ZdlPvm@PLT # Offset: 11978
.Ltmp3658:
    00002ecf: 	leaq	DATAat0x38409(%rip), %rdx
    00002ed6: 	movq	%r13, %rsi
    00002ed9: 	movq	%r12, %rdi
    00002edc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11996
    00002ee1: 	callq	clock@PLT # Offset: 12001
    00002ee6: 	movq	%rax, start_time(%rip)
    00002eed: 	movl	iterations(%rip), %eax
    00002ef3: 	testl	%eax, %eax
    00002ef5: 	jle	.Ltmp3659 # Offset: 12021
    00002efb: 	movss	DATAat0x38670(%rip), %xmm6
    00002f03: 	pxor	%xmm5, %xmm5
    00002f07: 	movsd	DATAat0x385e8(%rip), %xmm4
    00002f0f: 	movl	$0x0, 0x3c(%rsp)
    00002f17: 	movss	%xmm5, 0x38(%rsp)
    00002f1d: 	movq	DATAat0x38630(%rip), %xmm5
    00002f25: 	movss	DATAat0x38640(%rip), %xmm7
    00002f2d: 	leaq	0x7cf0(%rbp), %rbx
    00002f34: 	movss	%xmm6, 0x1c(%rsp)
    00002f3a: 	movsd	DATAat0x38608(%rip), %xmm6
    00002f42: 	movaps	%xmm7, (%rsp)
    00002f46: 	movsd	%xmm4, 0x10(%rsp)
    00002f4c: 	movaps	%xmm5, 0x20(%rsp)
    00002f51: 	movsd	%xmm6, 0x30(%rsp)
    00002f57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3663:
    00002f60: 	movss	0x1b0(%rsp), %xmm0
    00002f69: 	movq	%rbp, %rdx
    00002f6c: 	movss	0x1b4(%rsp), %xmm2
    00002f75: 	movaps	%xmm0, %xmm1
    00002f78: 	addss	%xmm0, %xmm1
    00002f7c: 	mulss	%xmm0, %xmm0
    00002f80: 	mulss	%xmm2, %xmm1
    00002f84: 	mulss	%xmm2, %xmm2
    00002f88: 	addss	%xmm0, %xmm1
    00002f8c: 	addss	%xmm2, %xmm1
    00002f90: 	addss	0x38(%rsp), %xmm1
    00002f96: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3660:
    00002fa0: 	movaps	(%rdx), %xmm2
    00002fa3: 	movups	0x4(%rdx), %xmm3
    00002fa7: 	addq	$0x10, %rdx
    00002fab: 	movaps	%xmm2, %xmm0
    00002fae: 	addps	%xmm2, %xmm0
    00002fb1: 	mulps	%xmm2, %xmm2
    00002fb4: 	mulps	%xmm3, %xmm0
    00002fb7: 	mulps	%xmm3, %xmm3
    00002fba: 	addps	%xmm2, %xmm0
    00002fbd: 	addps	%xmm3, %xmm0
    00002fc0: 	addss	%xmm0, %xmm1
    00002fc4: 	movaps	%xmm0, %xmm2
    00002fc7: 	shufps	$0x55, %xmm0, %xmm2
    00002fcb: 	addss	%xmm1, %xmm2
    00002fcf: 	movaps	%xmm0, %xmm1
    00002fd2: 	unpckhps	%xmm0, %xmm1
    00002fd5: 	shufps	$0xff, %xmm0, %xmm0
    00002fd9: 	addss	%xmm2, %xmm1
    00002fdd: 	addss	%xmm0, %xmm1
    00002fe1: 	cmpq	%rbx, %rdx
    00002fe4: 	jne	.Ltmp3660 # Offset: 12260
    00002fe6: 	movq	0x7ea0(%rsp), %xmm2
    00002fef: 	movaps	(%rsp), %xmm6
    00002ff3: 	movq	0x7ea4(%rsp), %xmm3
    00002ffc: 	movaps	%xmm2, %xmm0
    00002fff: 	addps	%xmm2, %xmm0
    00003002: 	mulps	%xmm2, %xmm2
    00003005: 	mulps	%xmm3, %xmm0
    00003008: 	mulps	%xmm3, %xmm3
    0000300b: 	addps	%xmm2, %xmm0
    0000300e: 	movss	0x7ea8(%rsp), %xmm2
    00003017: 	addps	%xmm3, %xmm0
    0000301a: 	movss	0x7eac(%rsp), %xmm3
    00003023: 	addss	%xmm0, %xmm1
    00003027: 	shufps	$0xe5, %xmm0, %xmm0
    0000302b: 	addss	%xmm1, %xmm0
    0000302f: 	movaps	%xmm2, %xmm1
    00003032: 	addss	%xmm2, %xmm1
    00003036: 	mulss	%xmm2, %xmm2
    0000303a: 	mulss	%xmm3, %xmm1
    0000303e: 	mulss	%xmm3, %xmm3
    00003042: 	addss	%xmm2, %xmm1
    00003046: 	addss	%xmm3, %xmm1
    0000304a: 	addss	%xmm1, %xmm0
    0000304e: 	pxor	%xmm1, %xmm1
    00003052: 	cvtsd2ss	init_value(%rip), %xmm1
    0000305a: 	movaps	%xmm1, %xmm2
    0000305d: 	movaps	%xmm1, %xmm3
    00003060: 	addss	%xmm1, %xmm2
    00003064: 	mulss	%xmm1, %xmm3
    00003068: 	andps	%xmm0, %xmm6
    0000306b: 	mulss	%xmm2, %xmm1
    0000306f: 	movaps	%xmm0, %xmm2
    00003072: 	addss	%xmm3, %xmm1
    00003076: 	addss	%xmm3, %xmm1
    0000307a: 	mulss	0x1c(%rsp), %xmm1
    00003080: 	subss	%xmm1, %xmm2
    00003084: 	pxor	%xmm1, %xmm1
    00003088: 	cvtss2sd	%xmm6, %xmm1
    0000308c: 	comisd	0x10(%rsp), %xmm1
    00003092: 	jbe	.Ltmp3661 # Offset: 12434
    00003094: 	divss	%xmm0, %xmm2
    00003098: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3661:
    000030a0: 	movsd	0x30(%rsp), %xmm4
    000030a6: 	cvtss2sd	%xmm2, %xmm2
    000030aa: 	andpd	0x20(%rsp), %xmm2
    000030b0: 	comisd	%xmm2, %xmm4
    000030b4: 	jbe	.Ltmp3662 # Offset: 12468
.Ltmp3705:
    000030ba: 	addl	$0x1, 0x3c(%rsp)
    000030bf: 	movl	0x3c(%rsp), %ecx
    000030c3: 	cmpl	%eax, %ecx
    000030c5: 	jl	.Ltmp3663 # Offset: 12485
.Ltmp3659:
    000030cb: 	movq	%r12, %rsi
    000030ce: 	movq	%r15, %rdi
    000030d1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12497
    000030d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000030dd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000030e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000030eb: 	je	.Ltmp3664 # Offset: 12523
.Ltmp3734:
    000030f1: 	movq	-0x20(%rax), %rbx
    000030f5: 	callq	clock@PLT # Offset: 12533
    000030fa: 	pxor	%xmm0, %xmm0
    000030fe: 	movq	%rax, end_time(%rip)
    00003105: 	movq	%rbx, %rdi
    00003108: 	subq	start_time(%rip), %rax
    0000310f: 	cvtsi2sd	%rax, %xmm0
    00003114: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000311c: 	callq	_Z13record_resultdPKc # Offset: 12572
    00003121: 	movq	0x190(%rsp), %rdi
    00003129: 	cmpq	%r14, %rdi
    0000312c: 	je	.Ltmp3665 # Offset: 12588
    0000312e: 	movq	0x1a0(%rsp), %rax
    00003136: 	leaq	0x1(%rax), %rsi
    0000313a: 	callq	_ZdlPvm@PLT # Offset: 12602
.Ltmp3665:
    0000313f: 	leaq	DATAat0x38414(%rip), %rdx
    00003146: 	movq	%r13, %rsi
    00003149: 	movq	%r12, %rdi
    0000314c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12620
    00003151: 	callq	clock@PLT # Offset: 12625
    00003156: 	movl	iterations(%rip), %edx
    0000315c: 	movq	%rax, start_time(%rip)
    00003163: 	testl	%edx, %edx
    00003165: 	jle	.Ltmp3666 # Offset: 12645
    0000316b: 	movss	DATAat0x38670(%rip), %xmm4
    00003173: 	pxor	%xmm7, %xmm7
    00003177: 	movsd	DATAat0x385e8(%rip), %xmm6
    0000317f: 	movl	$0x0, 0x3c(%rsp)
    00003187: 	movss	%xmm7, 0x38(%rsp)
    0000318d: 	movq	DATAat0x38630(%rip), %xmm7
    00003195: 	movss	DATAat0x38640(%rip), %xmm5
    0000319d: 	leaq	0x7cf0(%rbp), %rbx
    000031a4: 	movss	%xmm4, 0x1c(%rsp)
    000031aa: 	movsd	DATAat0x38608(%rip), %xmm4
    000031b2: 	movaps	%xmm5, (%rsp)
    000031b6: 	movsd	%xmm6, 0x10(%rsp)
    000031bc: 	movaps	%xmm7, 0x20(%rsp)
    000031c1: 	movsd	%xmm4, 0x30(%rsp)
    000031c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3670:
    000031d0: 	movss	0x1b0(%rsp), %xmm0
    000031d9: 	movq	%rbp, %rax
    000031dc: 	subss	0x1b4(%rsp), %xmm0
    000031e5: 	mulss	%xmm0, %xmm0
    000031e9: 	addss	0x38(%rsp), %xmm0
    000031ef: 	nop # Size: 1
.Ltmp3667:
    000031f0: 	movaps	(%rax), %xmm1
    000031f3: 	movups	0x4(%rax), %xmm5
    000031f7: 	addq	$0x10, %rax
    000031fb: 	subps	%xmm5, %xmm1
    000031fe: 	mulps	%xmm1, %xmm1
    00003201: 	addss	%xmm1, %xmm0
    00003205: 	movaps	%xmm1, %xmm2
    00003208: 	shufps	$0x55, %xmm1, %xmm2
    0000320c: 	addss	%xmm0, %xmm2
    00003210: 	movaps	%xmm1, %xmm0
    00003213: 	unpckhps	%xmm1, %xmm0
    00003216: 	shufps	$0xff, %xmm1, %xmm1
    0000321a: 	addss	%xmm2, %xmm0
    0000321e: 	addss	%xmm1, %xmm0
    00003222: 	cmpq	%rax, %rbx
    00003225: 	jne	.Ltmp3667 # Offset: 12837
    00003227: 	movq	0x7ea4(%rsp), %xmm2
    00003230: 	movaps	(%rsp), %xmm4
    00003234: 	movq	0x7ea0(%rsp), %xmm1
    0000323d: 	subps	%xmm2, %xmm1
    00003240: 	mulps	%xmm1, %xmm1
    00003243: 	addss	%xmm1, %xmm0
    00003247: 	shufps	$0xe5, %xmm1, %xmm1
    0000324b: 	addss	%xmm0, %xmm1
    0000324f: 	movss	0x7ea8(%rsp), %xmm0
    00003258: 	subss	0x7eac(%rsp), %xmm0
    00003261: 	mulss	%xmm0, %xmm0
    00003265: 	addss	%xmm1, %xmm0
    00003269: 	pxor	%xmm1, %xmm1
    0000326d: 	cvtsd2ss	init_value(%rip), %xmm1
    00003275: 	subss	%xmm1, %xmm1
    00003279: 	movaps	%xmm0, %xmm2
    0000327c: 	andps	%xmm0, %xmm4
    0000327f: 	mulss	%xmm1, %xmm1
    00003283: 	mulss	0x1c(%rsp), %xmm1
    00003289: 	subss	%xmm1, %xmm2
    0000328d: 	pxor	%xmm1, %xmm1
    00003291: 	cvtss2sd	%xmm4, %xmm1
    00003295: 	comisd	0x10(%rsp), %xmm1
    0000329b: 	jbe	.Ltmp3668 # Offset: 12955
    0000329d: 	divss	%xmm0, %xmm2
    000032a1: 	nopl	(%rax) # Size: 7
.Ltmp3668:
    000032a8: 	movsd	0x30(%rsp), %xmm7
    000032ae: 	cvtss2sd	%xmm2, %xmm2
    000032b2: 	andpd	0x20(%rsp), %xmm2
    000032b8: 	comisd	%xmm2, %xmm7
    000032bc: 	jbe	.Ltmp3669 # Offset: 12988
.Ltmp3704:
    000032c2: 	addl	$0x1, 0x3c(%rsp)
    000032c7: 	movl	0x3c(%rsp), %eax
    000032cb: 	cmpl	%edx, %eax
    000032cd: 	jl	.Ltmp3670 # Offset: 13005
.Ltmp3666:
    000032d3: 	movq	%r12, %rsi
    000032d6: 	movq	%r15, %rdi
    000032d9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13017
    000032de: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000032e5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000032ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000032f3: 	je	.Ltmp3671 # Offset: 13043
.Ltmp3733:
    000032f9: 	movq	-0x20(%rax), %rbx
    000032fd: 	callq	clock@PLT # Offset: 13053
    00003302: 	pxor	%xmm0, %xmm0
    00003306: 	movq	%rax, end_time(%rip)
    0000330d: 	movq	%rbx, %rdi
    00003310: 	subq	start_time(%rip), %rax
    00003317: 	cvtsi2sd	%rax, %xmm0
    0000331c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003324: 	callq	_Z13record_resultdPKc # Offset: 13092
    00003329: 	movq	0x190(%rsp), %rdi
    00003331: 	cmpq	%r14, %rdi
    00003334: 	je	.Ltmp3672 # Offset: 13108
    00003336: 	movq	0x1a0(%rsp), %rax
    0000333e: 	leaq	0x1(%rax), %rsi
    00003342: 	callq	_ZdlPvm@PLT # Offset: 13122
.Ltmp3672:
    00003347: 	leaq	DATAat0x38423(%rip), %rdx
    0000334e: 	movq	%r13, %rsi
    00003351: 	movq	%r12, %rdi
    00003354: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13140
    00003359: 	callq	clock@PLT # Offset: 13145
    0000335e: 	movq	%rax, start_time(%rip)
    00003365: 	movl	iterations(%rip), %eax
    0000336b: 	testl	%eax, %eax
    0000336d: 	jle	.Ltmp3673 # Offset: 13165
    00003373: 	movss	DATAat0x38670(%rip), %xmm6
    0000337b: 	pxor	%xmm5, %xmm5
    0000337f: 	movsd	DATAat0x385e8(%rip), %xmm4
    00003387: 	movl	$0x0, 0x3c(%rsp)
    0000338f: 	movss	%xmm5, 0x38(%rsp)
    00003395: 	movq	DATAat0x38630(%rip), %xmm5
    0000339d: 	movss	DATAat0x38640(%rip), %xmm7
    000033a5: 	leaq	0x7cf0(%rbp), %rbx
    000033ac: 	movss	%xmm6, 0x1c(%rsp)
    000033b2: 	movsd	DATAat0x38608(%rip), %xmm6
    000033ba: 	movaps	%xmm7, (%rsp)
    000033be: 	movsd	%xmm4, 0x10(%rsp)
    000033c4: 	movaps	%xmm5, 0x20(%rsp)
    000033c9: 	movsd	%xmm6, 0x30(%rsp)
    000033cf: 	nop # Size: 1
.Ltmp3677:
    000033d0: 	movss	0x1b0(%rsp), %xmm0
    000033d9: 	movss	0x38(%rsp), %xmm3
    000033df: 	movq	%rbp, %rdx
    000033e2: 	movss	0x1b4(%rsp), %xmm2
    000033eb: 	movaps	%xmm0, %xmm1
    000033ee: 	mulss	%xmm0, %xmm1
    000033f2: 	addss	%xmm0, %xmm0
    000033f6: 	mulss	%xmm2, %xmm0
    000033fa: 	mulss	%xmm2, %xmm2
    000033fe: 	subss	%xmm0, %xmm1
    00003402: 	addss	%xmm2, %xmm1
    00003406: 	addss	%xmm1, %xmm3
    0000340a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3674:
    00003410: 	movaps	(%rdx), %xmm1
    00003413: 	movups	0x4(%rdx), %xmm2
    00003417: 	addq	$0x10, %rdx
    0000341b: 	movaps	%xmm1, %xmm0
    0000341e: 	mulps	%xmm1, %xmm0
    00003421: 	addps	%xmm1, %xmm1
    00003424: 	mulps	%xmm2, %xmm1
    00003427: 	mulps	%xmm2, %xmm2
    0000342a: 	subps	%xmm1, %xmm0
    0000342d: 	addps	%xmm2, %xmm0
    00003430: 	addss	%xmm0, %xmm3
    00003434: 	movaps	%xmm0, %xmm1
    00003437: 	shufps	$0x55, %xmm0, %xmm1
    0000343b: 	addss	%xmm3, %xmm1
    0000343f: 	movaps	%xmm0, %xmm3
    00003442: 	unpckhps	%xmm0, %xmm3
    00003445: 	shufps	$0xff, %xmm0, %xmm0
    00003449: 	addss	%xmm1, %xmm3
    0000344d: 	addss	%xmm0, %xmm3
    00003451: 	cmpq	%rdx, %rbx
    00003454: 	jne	.Ltmp3674 # Offset: 13396
    00003456: 	movq	0x7ea0(%rsp), %xmm1
    0000345f: 	movaps	(%rsp), %xmm5
    00003463: 	movq	0x7ea4(%rsp), %xmm2
    0000346c: 	movaps	%xmm1, %xmm0
    0000346f: 	mulps	%xmm1, %xmm0
    00003472: 	addps	%xmm1, %xmm1
    00003475: 	mulps	%xmm2, %xmm1
    00003478: 	mulps	%xmm2, %xmm2
    0000347b: 	subps	%xmm1, %xmm0
    0000347e: 	addps	%xmm2, %xmm0
    00003481: 	movss	0x7ea8(%rsp), %xmm2
    0000348a: 	movaps	%xmm0, %xmm1
    0000348d: 	shufps	$0xe5, %xmm0, %xmm0
    00003491: 	addss	%xmm3, %xmm1
    00003495: 	movss	0x7eac(%rsp), %xmm3
    0000349e: 	addss	%xmm1, %xmm0
    000034a2: 	movaps	%xmm2, %xmm1
    000034a5: 	mulss	%xmm2, %xmm1
    000034a9: 	addss	%xmm2, %xmm2
    000034ad: 	mulss	%xmm3, %xmm2
    000034b1: 	mulss	%xmm3, %xmm3
    000034b5: 	subss	%xmm2, %xmm1
    000034b9: 	addss	%xmm3, %xmm1
    000034bd: 	addss	%xmm1, %xmm0
    000034c1: 	pxor	%xmm1, %xmm1
    000034c5: 	cvtsd2ss	init_value(%rip), %xmm1
    000034cd: 	movaps	%xmm1, %xmm2
    000034d0: 	movaps	%xmm1, %xmm3
    000034d3: 	addss	%xmm1, %xmm2
    000034d7: 	mulss	%xmm1, %xmm3
    000034db: 	andps	%xmm0, %xmm5
    000034de: 	mulss	%xmm1, %xmm2
    000034e2: 	movaps	%xmm3, %xmm1
    000034e5: 	subss	%xmm2, %xmm1
    000034e9: 	movaps	%xmm0, %xmm2
    000034ec: 	addss	%xmm3, %xmm1
    000034f0: 	mulss	0x1c(%rsp), %xmm1
    000034f6: 	subss	%xmm1, %xmm2
    000034fa: 	pxor	%xmm1, %xmm1
    000034fe: 	cvtss2sd	%xmm5, %xmm1
    00003502: 	comisd	0x10(%rsp), %xmm1
    00003508: 	jbe	.Ltmp3675 # Offset: 13576
    0000350a: 	divss	%xmm0, %xmm2
    0000350e: 	nop # Size: 2
.Ltmp3675:
    00003510: 	movsd	0x30(%rsp), %xmm6
    00003516: 	cvtss2sd	%xmm2, %xmm2
    0000351a: 	andpd	0x20(%rsp), %xmm2
    00003520: 	comisd	%xmm2, %xmm6
    00003524: 	jbe	.Ltmp3676 # Offset: 13604
.Ltmp3703:
    0000352a: 	addl	$0x1, 0x3c(%rsp)
    0000352f: 	movl	0x3c(%rsp), %ecx
    00003533: 	cmpl	%eax, %ecx
    00003535: 	jl	.Ltmp3677 # Offset: 13621
.Ltmp3673:
    0000353b: 	movq	%r12, %rsi
    0000353e: 	movq	%r15, %rdi
    00003541: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13633
    00003546: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000354d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00003554: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000355b: 	je	.Ltmp3678 # Offset: 13659
.Ltmp3732:
    00003561: 	movq	-0x20(%rax), %rbx
    00003565: 	callq	clock@PLT # Offset: 13669
    0000356a: 	pxor	%xmm0, %xmm0
    0000356e: 	movq	%rax, end_time(%rip)
    00003575: 	movq	%rbx, %rdi
    00003578: 	subq	start_time(%rip), %rax
    0000357f: 	cvtsi2sd	%rax, %xmm0
    00003584: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000358c: 	callq	_Z13record_resultdPKc # Offset: 13708
    00003591: 	movq	0x190(%rsp), %rdi
    00003599: 	cmpq	%r14, %rdi
    0000359c: 	je	.Ltmp3679 # Offset: 13724
    0000359e: 	movq	0x1a0(%rsp), %rax
    000035a6: 	leaq	0x1(%rax), %rsi
    000035aa: 	callq	_ZdlPvm@PLT # Offset: 13738
.Ltmp3679:
    000035af: 	leaq	DATAat0x3842e(%rip), %rdx
    000035b6: 	movq	%r13, %rsi
    000035b9: 	movq	%r12, %rdi
    000035bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13756
    000035c1: 	callq	clock@PLT # Offset: 13761
    000035c6: 	movl	iterations(%rip), %edx
    000035cc: 	movq	%rax, start_time(%rip)
    000035d3: 	testl	%edx, %edx
    000035d5: 	jle	.Ltmp3680 # Offset: 13781
    000035db: 	movss	DATAat0x38670(%rip), %xmm4
    000035e3: 	pxor	%xmm7, %xmm7
    000035e7: 	movsd	DATAat0x385e8(%rip), %xmm6
    000035ef: 	movl	$0x0, 0x3c(%rsp)
    000035f7: 	movss	%xmm7, 0x38(%rsp)
    000035fd: 	movq	DATAat0x38630(%rip), %xmm7
    00003605: 	movss	DATAat0x38640(%rip), %xmm5
    0000360d: 	leaq	0x7cf0(%rbp), %rbx
    00003614: 	movss	%xmm4, 0x1c(%rsp)
    0000361a: 	movsd	DATAat0x38608(%rip), %xmm4
    00003622: 	movaps	%xmm5, (%rsp)
    00003626: 	movsd	%xmm6, 0x10(%rsp)
    0000362c: 	movaps	%xmm7, 0x20(%rsp)
    00003631: 	movsd	%xmm4, 0x30(%rsp)
    00003637: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3684:
    00003640: 	movss	0x1b0(%rsp), %xmm2
    00003649: 	movq	%rbp, %rax
    0000364c: 	movss	0x1b4(%rsp), %xmm1
    00003655: 	movaps	%xmm2, %xmm0
    00003658: 	subss	%xmm1, %xmm0
    0000365c: 	addss	%xmm2, %xmm1
    00003660: 	mulss	%xmm1, %xmm0
    00003664: 	addss	0x38(%rsp), %xmm0
    0000366a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3681:
    00003670: 	movaps	(%rax), %xmm2
    00003673: 	movups	0x4(%rax), %xmm6
    00003677: 	addq	$0x10, %rax
    0000367b: 	movups	-0xc(%rax), %xmm1
    0000367f: 	addps	-0x10(%rax), %xmm1
    00003683: 	subps	%xmm6, %xmm2
    00003686: 	mulps	%xmm2, %xmm1
    00003689: 	addss	%xmm1, %xmm0
    0000368d: 	movaps	%xmm1, %xmm2
    00003690: 	shufps	$0x55, %xmm1, %xmm2
    00003694: 	addss	%xmm0, %xmm2
    00003698: 	movaps	%xmm1, %xmm0
    0000369b: 	unpckhps	%xmm1, %xmm0
    0000369e: 	shufps	$0xff, %xmm1, %xmm1
    000036a2: 	addss	%xmm2, %xmm0
    000036a6: 	addss	%xmm1, %xmm0
    000036aa: 	cmpq	%rbx, %rax
    000036ad: 	jne	.Ltmp3681 # Offset: 13997
    000036af: 	movq	0x7ea0(%rsp), %xmm2
    000036b8: 	movaps	(%rsp), %xmm6
    000036bc: 	movq	0x7ea4(%rsp), %xmm3
    000036c5: 	movaps	%xmm2, %xmm1
    000036c8: 	addps	%xmm3, %xmm1
    000036cb: 	subps	%xmm3, %xmm2
    000036ce: 	movss	0x7eac(%rsp), %xmm3
    000036d7: 	mulps	%xmm2, %xmm1
    000036da: 	movss	0x7ea8(%rsp), %xmm2
    000036e3: 	addss	%xmm1, %xmm0
    000036e7: 	shufps	$0xe5, %xmm1, %xmm1
    000036eb: 	addss	%xmm0, %xmm1
    000036ef: 	movaps	%xmm2, %xmm0
    000036f2: 	subss	%xmm3, %xmm2
    000036f6: 	addss	%xmm3, %xmm0
    000036fa: 	mulss	%xmm2, %xmm0
    000036fe: 	addss	%xmm1, %xmm0
    00003702: 	pxor	%xmm1, %xmm1
    00003706: 	cvtsd2ss	init_value(%rip), %xmm1
    0000370e: 	movaps	%xmm1, %xmm2
    00003711: 	subss	%xmm1, %xmm2
    00003715: 	addss	%xmm1, %xmm1
    00003719: 	andps	%xmm0, %xmm6
    0000371c: 	mulss	%xmm2, %xmm1
    00003720: 	movaps	%xmm0, %xmm2
    00003723: 	mulss	0x1c(%rsp), %xmm1
    00003729: 	subss	%xmm1, %xmm2
    0000372d: 	pxor	%xmm1, %xmm1
    00003731: 	cvtss2sd	%xmm6, %xmm1
    00003735: 	comisd	0x10(%rsp), %xmm1
    0000373b: 	jbe	.Ltmp3682 # Offset: 14139
    0000373d: 	divss	%xmm0, %xmm2
    00003741: 	nopl	(%rax) # Size: 7
.Ltmp3682:
    00003748: 	movsd	0x30(%rsp), %xmm5
    0000374e: 	cvtss2sd	%xmm2, %xmm2
    00003752: 	andpd	0x20(%rsp), %xmm2
    00003758: 	comisd	%xmm2, %xmm5
    0000375c: 	jbe	.Ltmp3683 # Offset: 14172
.Ltmp3702:
    00003762: 	addl	$0x1, 0x3c(%rsp)
    00003767: 	movl	0x3c(%rsp), %eax
    0000376b: 	cmpl	%edx, %eax
    0000376d: 	jl	.Ltmp3684 # Offset: 14189
.Ltmp3680:
    00003773: 	movq	%r12, %rsi
    00003776: 	movq	%r15, %rdi
    00003779: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14201
    0000377e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003785: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000378c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003793: 	je	.Ltmp3685 # Offset: 14227
.Ltmp3731:
    00003799: 	movq	-0x20(%rax), %rbx
    0000379d: 	callq	clock@PLT # Offset: 14237
    000037a2: 	pxor	%xmm0, %xmm0
    000037a6: 	movq	%rax, end_time(%rip)
    000037ad: 	movq	%rbx, %rdi
    000037b0: 	subq	start_time(%rip), %rax
    000037b7: 	cvtsi2sd	%rax, %xmm0
    000037bc: 	divsd	DATAat0x385e0(%rip), %xmm0
    000037c4: 	callq	_Z13record_resultdPKc # Offset: 14276
    000037c9: 	movq	0x190(%rsp), %rdi
    000037d1: 	cmpq	%r14, %rdi
    000037d4: 	je	.Ltmp3686 # Offset: 14292
    000037d6: 	movq	0x1a0(%rsp), %rax
    000037de: 	leaq	0x1(%rax), %rsi
    000037e2: 	callq	_ZdlPvm@PLT # Offset: 14306
.Ltmp3686:
    000037e7: 	leaq	DATAat0x38440(%rip), %rdx
    000037ee: 	movq	%r13, %rsi
    000037f1: 	movq	%r12, %rdi
    000037f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14324
    000037f9: 	callq	clock@PLT # Offset: 14329
    000037fe: 	movq	%rax, start_time(%rip)
    00003805: 	movl	iterations(%rip), %eax
    0000380b: 	testl	%eax, %eax
    0000380d: 	jle	.Ltmp3687 # Offset: 14349
    00003813: 	movss	DATAat0x38670(%rip), %xmm6
    0000381b: 	pxor	%xmm5, %xmm5
    0000381f: 	movsd	DATAat0x385e8(%rip), %xmm4
    00003827: 	movl	$0x0, 0x3c(%rsp)
    0000382f: 	movss	%xmm5, 0x38(%rsp)
    00003835: 	movq	DATAat0x38630(%rip), %xmm5
    0000383d: 	movss	DATAat0x38640(%rip), %xmm7
    00003845: 	leaq	0x7cf0(%rbp), %rbx
    0000384c: 	movss	%xmm6, 0x1c(%rsp)
    00003852: 	movsd	DATAat0x38608(%rip), %xmm6
    0000385a: 	movaps	%xmm7, (%rsp)
    0000385e: 	movsd	%xmm4, 0x10(%rsp)
    00003864: 	movaps	%xmm5, 0x20(%rsp)
    00003869: 	movsd	%xmm6, 0x30(%rsp)
    0000386f: 	nop # Size: 1
.Ltmp3691:
    00003870: 	movss	0x1b4(%rsp), %xmm1
    00003879: 	movq	%rbp, %rdx
    0000387c: 	movss	0x1b0(%rsp), %xmm0
    00003885: 	mulss	%xmm1, %xmm1
    00003889: 	mulss	%xmm0, %xmm0
    0000388d: 	subss	%xmm1, %xmm0
    00003891: 	addss	0x38(%rsp), %xmm0
    00003897: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3688:
    000038a0: 	movaps	(%rdx), %xmm1
    000038a3: 	movups	0x4(%rdx), %xmm2
    000038a7: 	addq	$0x10, %rdx
    000038ab: 	mulps	%xmm2, %xmm2
    000038ae: 	mulps	%xmm1, %xmm1
    000038b1: 	subps	%xmm2, %xmm1
    000038b4: 	addss	%xmm1, %xmm0
    000038b8: 	movaps	%xmm1, %xmm2
    000038bb: 	shufps	$0x55, %xmm1, %xmm2
    000038bf: 	addss	%xmm0, %xmm2
    000038c3: 	movaps	%xmm1, %xmm0
    000038c6: 	unpckhps	%xmm1, %xmm0
    000038c9: 	shufps	$0xff, %xmm1, %xmm1
    000038cd: 	addss	%xmm2, %xmm0
    000038d1: 	addss	%xmm1, %xmm0
    000038d5: 	cmpq	%rbx, %rdx
    000038d8: 	jne	.Ltmp3688 # Offset: 14552
    000038da: 	movq	0x7ea4(%rsp), %xmm2
    000038e3: 	movaps	(%rsp), %xmm4
    000038e7: 	movq	0x7ea0(%rsp), %xmm1
    000038f0: 	mulps	%xmm2, %xmm2
    000038f3: 	mulps	%xmm1, %xmm1
    000038f6: 	subps	%xmm2, %xmm1
    000038f9: 	movss	0x7eac(%rsp), %xmm2
    00003902: 	mulss	%xmm2, %xmm2
    00003906: 	addss	%xmm1, %xmm0
    0000390a: 	shufps	$0xe5, %xmm1, %xmm1
    0000390e: 	addss	%xmm0, %xmm1
    00003912: 	movss	0x7ea8(%rsp), %xmm0
    0000391b: 	mulss	%xmm0, %xmm0
    0000391f: 	subss	%xmm2, %xmm0
    00003923: 	addss	%xmm1, %xmm0
    00003927: 	pxor	%xmm1, %xmm1
    0000392b: 	cvtsd2ss	init_value(%rip), %xmm1
    00003933: 	mulss	%xmm1, %xmm1
    00003937: 	movaps	%xmm0, %xmm2
    0000393a: 	andps	%xmm0, %xmm4
    0000393d: 	subss	%xmm1, %xmm1
    00003941: 	mulss	0x1c(%rsp), %xmm1
    00003947: 	subss	%xmm1, %xmm2
    0000394b: 	pxor	%xmm1, %xmm1
    0000394f: 	cvtss2sd	%xmm4, %xmm1
    00003953: 	comisd	0x10(%rsp), %xmm1
    00003959: 	jbe	.Ltmp3689 # Offset: 14681
    0000395b: 	divss	%xmm0, %xmm2
    0000395f: 	nop # Size: 1
.Ltmp3689:
    00003960: 	movsd	0x30(%rsp), %xmm4
    00003966: 	cvtss2sd	%xmm2, %xmm2
    0000396a: 	andpd	0x20(%rsp), %xmm2
    00003970: 	comisd	%xmm2, %xmm4
    00003974: 	jbe	.Ltmp3690 # Offset: 14708
.Ltmp3701:
    0000397a: 	addl	$0x1, 0x3c(%rsp)
    0000397f: 	movl	0x3c(%rsp), %ecx
    00003983: 	cmpl	%eax, %ecx
    00003985: 	jl	.Ltmp3691 # Offset: 14725
.Ltmp3687:
    0000398b: 	movq	%r12, %rsi
    0000398e: 	movq	%r15, %rdi
    00003991: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 14737
    00003996: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000399d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000039a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000039ab: 	je	.Ltmp3692 # Offset: 14763
.Ltmp3730:
    000039b1: 	movq	-0x20(%rax), %rbp
    000039b5: 	callq	clock@PLT # Offset: 14773
    000039ba: 	pxor	%xmm0, %xmm0
    000039be: 	movq	%rax, end_time(%rip)
    000039c5: 	movq	%rbp, %rdi
    000039c8: 	subq	start_time(%rip), %rax
    000039cf: 	cvtsi2sd	%rax, %xmm0
    000039d4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000039dc: 	callq	_Z13record_resultdPKc # Offset: 14812
    000039e1: 	movq	0x190(%rsp), %rdi
    000039e9: 	cmpq	%r14, %rdi
    000039ec: 	je	.Ltmp3693 # Offset: 14828
    000039ee: 	movq	0x1a0(%rsp), %rax
    000039f6: 	leaq	0x1(%rax), %rsi
    000039fa: 	callq	_ZdlPvm@PLT # Offset: 14842
.Ltmp3693:
    000039ff: 	leaq	DATAat0x38550(%rip), %rdx
    00003a06: 	movq	%r13, %rsi
    00003a09: 	movq	%r12, %rdi
    00003a0c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 14860
    00003a11: 	movl	iterations(%rip), %esi
    00003a17: 	movq	0x190(%rsp), %rdi
    00003a1f: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 14879
    00003a24: 	movq	0x190(%rsp), %rdi
    00003a2c: 	cmpq	%r14, %rdi
    00003a2f: 	je	.Ltmp3694 # Offset: 14895
    00003a31: 	movq	0x1a0(%rsp), %rax
    00003a39: 	leaq	0x1(%rax), %rsi
    00003a3d: 	callq	_ZdlPvm@PLT # Offset: 14909
.Ltmp3694:
    00003a42: 	movq	0x170(%rsp), %rdi
    00003a4a: 	leaq	0x180(%rsp), %rax
    00003a52: 	cmpq	%rax, %rdi
    00003a55: 	je	.Ltmp3695 # Offset: 14933
    00003a57: 	movq	0x180(%rsp), %rax
    00003a5f: 	leaq	0x1(%rax), %rsi
    00003a63: 	callq	_ZdlPvm@PLT # Offset: 14947
.Ltmp3695:
    00003a68: 	movq	0x150(%rsp), %rdi
    00003a70: 	leaq	0x160(%rsp), %rax
    00003a78: 	cmpq	%rax, %rdi
    00003a7b: 	je	.Ltmp3696 # Offset: 14971
    00003a7d: 	movq	0x160(%rsp), %rax
    00003a85: 	leaq	0x1(%rax), %rsi
    00003a89: 	callq	_ZdlPvm@PLT # Offset: 14985
.Ltmp3696:
    00003a8e: 	movq	0x130(%rsp), %rdi
    00003a96: 	leaq	0x140(%rsp), %rax
    00003a9e: 	cmpq	%rax, %rdi
    00003aa1: 	je	.Ltmp3697 # Offset: 15009
    00003aa3: 	movq	0x140(%rsp), %rax
    00003aab: 	leaq	0x1(%rax), %rsi
    00003aaf: 	callq	_ZdlPvm@PLT # Offset: 15023
.Ltmp3697:
    00003ab4: 	movq	0x110(%rsp), %rdi
    00003abc: 	leaq	0x120(%rsp), %rax
    00003ac4: 	cmpq	%rax, %rdi
    00003ac7: 	je	.Ltmp3698 # Offset: 15047
    00003ac9: 	movq	0x120(%rsp), %rax
    00003ad1: 	leaq	0x1(%rax), %rsi
    00003ad5: 	callq	_ZdlPvm@PLT # Offset: 15061
.Ltmp3698:
    00003ada: 	movq	0xf0(%rsp), %rdi
    00003ae2: 	cmpq	0xc8(%rsp), %rdi
    00003aea: 	je	.Ltmp3699 # Offset: 15082
    00003aec: 	movq	0x100(%rsp), %rax
    00003af4: 	leaq	0x1(%rax), %rsi
    00003af8: 	callq	_ZdlPvm@PLT # Offset: 15096
.Ltmp3699:
    00003afd: 	movq	0x7eb8(%rsp), %rax
    00003b05: 	subq	%fs:0x28, %rax
    00003b0e: 	jne	.Ltmp3700 # Offset: 15118
    00003b14: 	addq	$0x7ec8, %rsp
    00003b1b: 	popq	%rbx
    00003b1c: 	popq	%rbp
    00003b1d: 	popq	%r12
    00003b1f: 	popq	%r13
    00003b21: 	popq	%r14
    00003b23: 	popq	%r15
    00003b25: 	retq # Offset: 15141
    00003b26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3690:
    00003b30: 	movl	current_test(%rip), %edx
    00003b36: 	leaq	DATAat0x381c8(%rip), %rsi
    00003b3d: 	movl	$0x1, %edi
    00003b42: 	xorl	%eax, %eax
    00003b44: 	callq	__printf_chk@PLT # Offset: 15172
    00003b49: 	movl	iterations(%rip), %eax
    00003b4f: 	jmp	.Ltmp3701 # Offset: 15183
    00003b54: 	nopl	(%rax) # Size: 4
.Ltmp3683:
    00003b58: 	movl	current_test(%rip), %edx
    00003b5e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003b65: 	movl	$0x1, %edi
    00003b6a: 	xorl	%eax, %eax
    00003b6c: 	callq	__printf_chk@PLT # Offset: 15212
    00003b71: 	movl	iterations(%rip), %edx
    00003b77: 	jmp	.Ltmp3702 # Offset: 15223
    00003b7c: 	nopl	(%rax) # Size: 4
.Ltmp3676:
    00003b80: 	movl	current_test(%rip), %edx
    00003b86: 	leaq	DATAat0x381c8(%rip), %rsi
    00003b8d: 	movl	$0x1, %edi
    00003b92: 	xorl	%eax, %eax
    00003b94: 	callq	__printf_chk@PLT # Offset: 15252
    00003b99: 	movl	iterations(%rip), %eax
    00003b9f: 	jmp	.Ltmp3703 # Offset: 15263
    00003ba4: 	nopl	(%rax) # Size: 4
.Ltmp3669:
    00003ba8: 	movl	current_test(%rip), %edx
    00003bae: 	leaq	DATAat0x381c8(%rip), %rsi
    00003bb5: 	movl	$0x1, %edi
    00003bba: 	xorl	%eax, %eax
    00003bbc: 	callq	__printf_chk@PLT # Offset: 15292
    00003bc1: 	movl	iterations(%rip), %edx
    00003bc7: 	jmp	.Ltmp3704 # Offset: 15303
    00003bcc: 	nopl	(%rax) # Size: 4
.Ltmp3662:
    00003bd0: 	movl	current_test(%rip), %edx
    00003bd6: 	leaq	DATAat0x381c8(%rip), %rsi
    00003bdd: 	movl	$0x1, %edi
    00003be2: 	xorl	%eax, %eax
    00003be4: 	callq	__printf_chk@PLT # Offset: 15332
    00003be9: 	movl	iterations(%rip), %eax
    00003bef: 	jmp	.Ltmp3705 # Offset: 15343
    00003bf4: 	nopl	(%rax) # Size: 4
.Ltmp3655:
    00003bf8: 	movl	current_test(%rip), %edx
    00003bfe: 	leaq	DATAat0x381c8(%rip), %rsi
    00003c05: 	movl	$0x1, %edi
    00003c0a: 	xorl	%eax, %eax
    00003c0c: 	callq	__printf_chk@PLT # Offset: 15372
    00003c11: 	movl	iterations(%rip), %edx
    00003c17: 	jmp	.Ltmp3706 # Offset: 15383
    00003c1c: 	nopl	(%rax) # Size: 4
.Ltmp3648:
    00003c20: 	movl	current_test(%rip), %edx
    00003c26: 	leaq	DATAat0x381c8(%rip), %rsi
    00003c2d: 	movl	$0x1, %edi
    00003c32: 	xorl	%eax, %eax
    00003c34: 	callq	__printf_chk@PLT # Offset: 15412
    00003c39: 	movl	iterations(%rip), %edx
    00003c3f: 	jmp	.Ltmp3707 # Offset: 15423
    00003c44: 	nopl	(%rax) # Size: 4
.Ltmp3641:
    00003c48: 	movl	current_test(%rip), %edx
    00003c4e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003c55: 	movl	$0x1, %edi
    00003c5a: 	xorl	%eax, %eax
    00003c5c: 	callq	__printf_chk@PLT # Offset: 15452
    00003c61: 	movl	iterations(%rip), %edx
    00003c67: 	jmp	.Ltmp3708 # Offset: 15463
    00003c6c: 	nopl	(%rax) # Size: 4
.Ltmp3634:
    00003c70: 	movl	current_test(%rip), %edx
    00003c76: 	leaq	DATAat0x381c8(%rip), %rsi
    00003c7d: 	movl	$0x1, %edi
    00003c82: 	xorl	%eax, %eax
    00003c84: 	callq	__printf_chk@PLT # Offset: 15492
    00003c89: 	movl	iterations(%rip), %edx
    00003c8f: 	jmp	.Ltmp3709 # Offset: 15503
    00003c94: 	nopl	(%rax) # Size: 4
.Ltmp3627:
    00003c98: 	movl	current_test(%rip), %edx
    00003c9e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003ca5: 	movl	$0x1, %edi
    00003caa: 	xorl	%eax, %eax
    00003cac: 	callq	__printf_chk@PLT # Offset: 15532
    00003cb1: 	movl	iterations(%rip), %edx
    00003cb7: 	jmp	.Ltmp3710 # Offset: 15543
    00003cbc: 	nopl	(%rax) # Size: 4
.Ltmp3620:
    00003cc0: 	movl	current_test(%rip), %edx
    00003cc6: 	leaq	DATAat0x381c8(%rip), %rsi
    00003ccd: 	movl	$0x1, %edi
    00003cd2: 	xorl	%eax, %eax
    00003cd4: 	callq	__printf_chk@PLT # Offset: 15572
    00003cd9: 	movl	iterations(%rip), %edx
    00003cdf: 	jmp	.Ltmp3711 # Offset: 15583
    00003ce4: 	nopl	(%rax) # Size: 4
.Ltmp3613:
    00003ce8: 	movl	current_test(%rip), %edx
    00003cee: 	leaq	DATAat0x381c8(%rip), %rsi
    00003cf5: 	movl	$0x1, %edi
    00003cfa: 	xorl	%eax, %eax
    00003cfc: 	callq	__printf_chk@PLT # Offset: 15612
    00003d01: 	movl	iterations(%rip), %edx
    00003d07: 	jmp	.Ltmp3712 # Offset: 15623
    00003d0c: 	nopl	(%rax) # Size: 4
.Ltmp3606:
    00003d10: 	movl	current_test(%rip), %edx
    00003d16: 	leaq	DATAat0x381c8(%rip), %rsi
    00003d1d: 	movl	$0x1, %edi
    00003d22: 	xorl	%eax, %eax
    00003d24: 	callq	__printf_chk@PLT # Offset: 15652
    00003d29: 	movl	iterations(%rip), %edx
    00003d2f: 	jmp	.Ltmp3713 # Offset: 15663
    00003d34: 	nopl	(%rax) # Size: 4
.Ltmp3599:
    00003d38: 	movl	current_test(%rip), %edx
    00003d3e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003d45: 	movl	$0x1, %edi
    00003d4a: 	xorl	%eax, %eax
    00003d4c: 	callq	__printf_chk@PLT # Offset: 15692
    00003d51: 	movl	iterations(%rip), %edx
    00003d57: 	jmp	.Ltmp3714 # Offset: 15703
    00003d5c: 	nopl	(%rax) # Size: 4
.Ltmp3592:
    00003d60: 	movl	current_test(%rip), %edx
    00003d66: 	leaq	DATAat0x381c8(%rip), %rsi
    00003d6d: 	movl	$0x1, %edi
    00003d72: 	xorl	%eax, %eax
    00003d74: 	callq	__printf_chk@PLT # Offset: 15732
    00003d79: 	movl	iterations(%rip), %edx
    00003d7f: 	jmp	.Ltmp3715 # Offset: 15743
    00003d84: 	nopl	(%rax) # Size: 4
.Ltmp3585:
    00003d88: 	movl	current_test(%rip), %edx
    00003d8e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003d95: 	movl	$0x1, %edi
    00003d9a: 	xorl	%eax, %eax
    00003d9c: 	callq	__printf_chk@PLT # Offset: 15772
    00003da1: 	movl	iterations(%rip), %edx
    00003da7: 	jmp	.Ltmp3716 # Offset: 15783
    00003dac: 	nopl	(%rax) # Size: 4
.Ltmp3574:
    00003db0: 	movl	current_test(%rip), %edx
    00003db6: 	leaq	DATAat0x381c8(%rip), %rsi
    00003dbd: 	movl	$0x1, %edi
    00003dc2: 	xorl	%eax, %eax
    00003dc4: 	callq	__printf_chk@PLT # Offset: 15812
    00003dc9: 	movl	iterations(%rip), %edx
    00003dcf: 	jmp	.Ltmp3717 # Offset: 15823
    00003dd4: 	nopl	(%rax) # Size: 4
.Ltmp3567:
    00003dd8: 	movl	current_test(%rip), %edx
    00003dde: 	leaq	DATAat0x381c8(%rip), %rsi
    00003de5: 	movl	$0x1, %edi
    00003dea: 	xorl	%eax, %eax
    00003dec: 	callq	__printf_chk@PLT # Offset: 15852
    00003df1: 	movl	iterations(%rip), %edx
    00003df7: 	jmp	.Ltmp3718 # Offset: 15863
    00003dfc: 	nopl	(%rax) # Size: 4
.Ltmp3560:
    00003e00: 	movl	current_test(%rip), %edx
    00003e06: 	leaq	DATAat0x381c8(%rip), %rsi
    00003e0d: 	movl	$0x1, %edi
    00003e12: 	xorl	%eax, %eax
    00003e14: 	callq	__printf_chk@PLT # Offset: 15892
    00003e19: 	movl	iterations(%rip), %edx
    00003e1f: 	jmp	.Ltmp3719 # Offset: 15903
    00003e24: 	nopl	(%rax) # Size: 4
.Ltmp3551:
    00003e28: 	movl	current_test(%rip), %edx
    00003e2e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003e35: 	movl	$0x1, %edi
    00003e3a: 	xorl	%eax, %eax
    00003e3c: 	callq	__printf_chk@PLT # Offset: 15932
    00003e41: 	movl	iterations(%rip), %edx
    00003e47: 	jmp	.Ltmp3720 # Offset: 15943
    00003e4c: 	nopl	(%rax) # Size: 4
.Ltmp3544:
    00003e50: 	movl	current_test(%rip), %edx
    00003e56: 	leaq	DATAat0x381c8(%rip), %rsi
    00003e5d: 	movl	$0x1, %edi
    00003e62: 	xorl	%eax, %eax
    00003e64: 	callq	__printf_chk@PLT # Offset: 15972
    00003e69: 	movl	iterations(%rip), %edx
    00003e6f: 	jmp	.Ltmp3721 # Offset: 15983
    00003e74: 	nopl	(%rax) # Size: 4
.Ltmp3537:
    00003e78: 	movl	current_test(%rip), %edx
    00003e7e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003e85: 	movl	$0x1, %edi
    00003e8a: 	xorl	%eax, %eax
    00003e8c: 	callq	__printf_chk@PLT # Offset: 16012
    00003e91: 	movl	iterations(%rip), %edx
    00003e97: 	jmp	.Ltmp3722 # Offset: 16023
    00003e9c: 	nopl	(%rax) # Size: 4
.Ltmp3530:
    00003ea0: 	movl	current_test(%rip), %edx
    00003ea6: 	leaq	DATAat0x381c8(%rip), %rsi
    00003ead: 	movl	$0x1, %edi
    00003eb2: 	xorl	%eax, %eax
    00003eb4: 	callq	__printf_chk@PLT # Offset: 16052
    00003eb9: 	movl	iterations(%rip), %edx
    00003ebf: 	jmp	.Ltmp3723 # Offset: 16063
    00003ec4: 	nopl	(%rax) # Size: 4
.Ltmp3523:
    00003ec8: 	movl	current_test(%rip), %edx
    00003ece: 	leaq	DATAat0x381c8(%rip), %rsi
    00003ed5: 	movl	$0x1, %edi
    00003eda: 	xorl	%eax, %eax
    00003edc: 	callq	__printf_chk@PLT # Offset: 16092
    00003ee1: 	movl	iterations(%rip), %edx
    00003ee7: 	jmp	.Ltmp3724 # Offset: 16103
    00003eec: 	nopl	(%rax) # Size: 4
.Ltmp3516:
    00003ef0: 	movl	current_test(%rip), %edx
    00003ef6: 	leaq	DATAat0x381c8(%rip), %rsi
    00003efd: 	movl	$0x1, %edi
    00003f02: 	xorl	%eax, %eax
    00003f04: 	callq	__printf_chk@PLT # Offset: 16132
    00003f09: 	movl	iterations(%rip), %edx
    00003f0f: 	jmp	.Ltmp3725 # Offset: 16143
    00003f14: 	nopl	(%rax) # Size: 4
.Ltmp3509:
    00003f18: 	movl	current_test(%rip), %edx
    00003f1e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003f25: 	movl	$0x1, %edi
    00003f2a: 	xorl	%eax, %eax
    00003f2c: 	callq	__printf_chk@PLT # Offset: 16172
    00003f31: 	movl	iterations(%rip), %edx
    00003f37: 	jmp	.Ltmp3726 # Offset: 16183
    00003f3c: 	nopl	(%rax) # Size: 4
.Ltmp3502:
    00003f40: 	movl	current_test(%rip), %edx
    00003f46: 	leaq	DATAat0x381c8(%rip), %rsi
    00003f4d: 	movl	$0x1, %edi
    00003f52: 	xorl	%eax, %eax
    00003f54: 	callq	__printf_chk@PLT # Offset: 16212
    00003f59: 	movl	iterations(%rip), %edx
    00003f5f: 	jmp	.Ltmp3727 # Offset: 16223
    00003f64: 	nopl	(%rax) # Size: 4
.Ltmp3495:
    00003f68: 	movl	current_test(%rip), %edx
    00003f6e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003f75: 	movl	$0x1, %edi
    00003f7a: 	xorl	%eax, %eax
    00003f7c: 	callq	__printf_chk@PLT # Offset: 16252
    00003f81: 	movl	iterations(%rip), %edx
    00003f87: 	jmp	.Ltmp3728 # Offset: 16263
.Ltmp3497:
    00003f8c: 	movq	-0x8(%rdx), %rax
    00003f90: 	addq	$0x200, %rax
    00003f96: 	jmp	.Ltmp3729 # Offset: 16278
.Ltmp3692:
    00003f9b: 	movq	-0x8(%rdx), %rax
    00003f9f: 	addq	$0x200, %rax
    00003fa5: 	jmp	.Ltmp3730 # Offset: 16293
.Ltmp3685:
    00003faa: 	movq	-0x8(%rdx), %rax
    00003fae: 	addq	$0x200, %rax
    00003fb4: 	jmp	.Ltmp3731 # Offset: 16308
.Ltmp3678:
    00003fb9: 	movq	-0x8(%rdx), %rax
    00003fbd: 	addq	$0x200, %rax
    00003fc3: 	jmp	.Ltmp3732 # Offset: 16323
.Ltmp3671:
    00003fc8: 	movq	-0x8(%rdx), %rax
    00003fcc: 	addq	$0x200, %rax
    00003fd2: 	jmp	.Ltmp3733 # Offset: 16338
.Ltmp3664:
    00003fd7: 	movq	-0x8(%rdx), %rax
    00003fdb: 	addq	$0x200, %rax
    00003fe1: 	jmp	.Ltmp3734 # Offset: 16353
.Ltmp3657:
    00003fe6: 	movq	-0x8(%rdx), %rax
    00003fea: 	addq	$0x200, %rax
    00003ff0: 	jmp	.Ltmp3735 # Offset: 16368
.Ltmp3650:
    00003ff5: 	movq	-0x8(%rdx), %rax
    00003ff9: 	addq	$0x200, %rax
    00003fff: 	jmp	.Ltmp3736 # Offset: 16383
.Ltmp3643:
    00004004: 	movq	-0x8(%rdx), %rax
    00004008: 	addq	$0x200, %rax
    0000400e: 	jmp	.Ltmp3737 # Offset: 16398
.Ltmp3636:
    00004013: 	movq	-0x8(%rdx), %rax
    00004017: 	addq	$0x200, %rax
    0000401d: 	jmp	.Ltmp3738 # Offset: 16413
.Ltmp3629:
    00004022: 	movq	-0x8(%rdx), %rax
    00004026: 	addq	$0x200, %rax
    0000402c: 	jmp	.Ltmp3739 # Offset: 16428
.Ltmp3622:
    00004031: 	movq	-0x8(%rdx), %rax
    00004035: 	addq	$0x200, %rax
    0000403b: 	jmp	.Ltmp3740 # Offset: 16443
.Ltmp3615:
    00004040: 	movq	-0x8(%rdx), %rax
    00004044: 	addq	$0x200, %rax
    0000404a: 	jmp	.Ltmp3741 # Offset: 16458
.Ltmp3608:
    0000404f: 	movq	-0x8(%rdx), %rax
    00004053: 	addq	$0x200, %rax
    00004059: 	jmp	.Ltmp3742 # Offset: 16473
.Ltmp3601:
    0000405e: 	movq	-0x8(%rdx), %rax
    00004062: 	addq	$0x200, %rax
    00004068: 	jmp	.Ltmp3743 # Offset: 16488
.Ltmp3594:
    0000406d: 	movq	-0x8(%rdx), %rax
    00004071: 	addq	$0x200, %rax
    00004077: 	jmp	.Ltmp3744 # Offset: 16503
.Ltmp3587:
    0000407c: 	movq	-0x8(%rdx), %rax
    00004080: 	addq	$0x200, %rax
    00004086: 	jmp	.Ltmp3745 # Offset: 16518
.Ltmp3576:
    0000408b: 	movq	-0x8(%rdx), %rax
    0000408f: 	addq	$0x200, %rax
    00004095: 	jmp	.Ltmp3746 # Offset: 16533
.Ltmp3569:
    0000409a: 	movq	-0x8(%rdx), %rax
    0000409e: 	addq	$0x200, %rax
    000040a4: 	jmp	.Ltmp3747 # Offset: 16548
.Ltmp3562:
    000040a9: 	movq	-0x8(%rdx), %rax
    000040ad: 	addq	$0x200, %rax
    000040b3: 	jmp	.Ltmp3748 # Offset: 16563
.Ltmp3555:
    000040b8: 	movq	-0x8(%rdx), %rax
    000040bc: 	addq	$0x200, %rax
    000040c2: 	jmp	.Ltmp3749 # Offset: 16578
.Ltmp3553:
    000040c7: 	movq	-0x8(%rdx), %rax
    000040cb: 	addq	$0x200, %rax
    000040d1: 	jmp	.Ltmp3750 # Offset: 16593
.Ltmp3546:
    000040d6: 	movq	-0x8(%rdx), %rax
    000040da: 	addq	$0x200, %rax
    000040e0: 	jmp	.Ltmp3751 # Offset: 16608
.Ltmp3539:
    000040e5: 	movq	-0x8(%rdx), %rax
    000040e9: 	addq	$0x200, %rax
    000040ef: 	jmp	.Ltmp3752 # Offset: 16623
.Ltmp3532:
    000040f4: 	movq	-0x8(%rdx), %rax
    000040f8: 	addq	$0x200, %rax
    000040fe: 	jmp	.Ltmp3753 # Offset: 16638
.Ltmp3525:
    00004103: 	movq	-0x8(%rdx), %rax
    00004107: 	addq	$0x200, %rax
    0000410d: 	jmp	.Ltmp3754 # Offset: 16653
.Ltmp3518:
    00004112: 	movq	-0x8(%rdx), %rax
    00004116: 	addq	$0x200, %rax
    0000411c: 	jmp	.Ltmp3755 # Offset: 16668
.Ltmp3511:
    00004121: 	movq	-0x8(%rdx), %rax
    00004125: 	addq	$0x200, %rax
    0000412b: 	jmp	.Ltmp3756 # Offset: 16683
.Ltmp3504:
    00004130: 	movq	-0x8(%rdx), %rax
    00004134: 	addq	$0x200, %rax
    0000413a: 	jmp	.Ltmp3757 # Offset: 16698
.Ltmp3700:
    0000413f: 	callq	__stack_chk_fail@PLT # Offset: 16703
    00004144: 	endbr64
.Ltmp3766:
    00004148: 	movq	%rax, %rbx
    0000414b: 	jmp	.Ltmp3758 # Offset: 16715
    0000414d: 	endbr64
    00004151: 	movq	%rax, %rbp
    00004154: 	jmp	.Ltmp3759 # Offset: 16724
    00004156: 	endbr64
    0000415a: 	movq	%rax, %rbp
    0000415d: 	jmp	.Ltmp3760 # Offset: 16733
.Ltmp3759:
    0000415f: 	movq	0x190(%rsp), %rdi
    00004167: 	leaq	0x1a0(%rsp), %rax
    0000416f: 	cmpq	%rax, %rdi
    00004172: 	je	.Ltmp3760 # Offset: 16754
.Ltmp3769:
    00004174: 	movq	0x1a0(%rsp), %rax
    0000417c: 	leaq	0x1(%rax), %rsi
    00004180: 	callq	_ZdlPvm@PLT # Offset: 16768
.Ltmp3760:
    00004185: 	movq	0xf0(%rsp), %rdi
    0000418d: 	cmpq	0xc8(%rsp), %rdi
    00004195: 	je	.Ltmp3761 # Offset: 16789
    00004197: 	movq	0x100(%rsp), %rax
    0000419f: 	leaq	0x1(%rax), %rsi
    000041a3: 	callq	_ZdlPvm@PLT # Offset: 16803
.Ltmp3761:
    000041a8: 	movq	%rbp, %rdi
    000041ab: 	callq	_Unwind_Resume@PLT # Offset: 16811
.Ltmp3758:
    000041b0: 	movq	0x190(%rsp), %rdi
    000041b8: 	cmpq	%r14, %rdi
    000041bb: 	je	.Ltmp3762 # Offset: 16827
    000041bd: 	movq	0x1a0(%rsp), %rax
    000041c5: 	leaq	0x1(%rax), %rsi
    000041c9: 	callq	_ZdlPvm@PLT # Offset: 16841
.Ltmp3762:
    000041ce: 	movq	0x170(%rsp), %rdi
    000041d6: 	leaq	0x180(%rsp), %rax
    000041de: 	cmpq	%rax, %rdi
    000041e1: 	je	.Ltmp3763 # Offset: 16865
    000041e3: 	movq	0x180(%rsp), %rax
    000041eb: 	leaq	0x1(%rax), %rsi
    000041ef: 	callq	_ZdlPvm@PLT # Offset: 16879
.Ltmp3763:
    000041f4: 	movq	%rbx, %rbp
.Ltmp3771:
    000041f7: 	movq	0x150(%rsp), %rdi
    000041ff: 	leaq	0x160(%rsp), %rax
    00004207: 	cmpq	%rax, %rdi
    0000420a: 	je	.Ltmp3764 # Offset: 16906
    0000420c: 	movq	0x160(%rsp), %rax
    00004214: 	leaq	0x1(%rax), %rsi
    00004218: 	callq	_ZdlPvm@PLT # Offset: 16920
.Ltmp3764:
    0000421d: 	movq	0x130(%rsp), %rdi
    00004225: 	leaq	0x140(%rsp), %rax
    0000422d: 	cmpq	%rax, %rdi
    00004230: 	je	.Ltmp3765 # Offset: 16944
    00004232: 	movq	0x140(%rsp), %rax
    0000423a: 	leaq	0x1(%rax), %rsi
    0000423e: 	callq	_ZdlPvm@PLT # Offset: 16958
.Ltmp3765:
    00004243: 	movq	0x110(%rsp), %rdi
    0000424b: 	leaq	0x120(%rsp), %rax
    00004253: 	cmpq	%rax, %rdi
    00004256: 	je	.Ltmp3760 # Offset: 16982
    0000425c: 	movq	0x120(%rsp), %rax
    00004264: 	leaq	0x1(%rax), %rsi
    00004268: 	callq	_ZdlPvm@PLT # Offset: 17000
    0000426d: 	jmp	.Ltmp3760 # Offset: 17005
    00004272: 	endbr64
    00004276: 	jmp	.Ltmp3766 # Offset: 17014
    0000427b: 	endbr64
    0000427f: 	jmp	.Ltmp3766 # Offset: 17023
    00004284: 	endbr64
    00004288: 	jmp	.Ltmp3766 # Offset: 17032
    0000428d: 	endbr64
    00004291: 	jmp	.Ltmp3766 # Offset: 17041
    00004296: 	endbr64
.Ltmp3768:
    0000429a: 	movq	%rax, %rbp
    0000429d: 	jmp	.Ltmp3767 # Offset: 17053
    0000429f: 	endbr64
    000042a3: 	jmp	.Ltmp3768 # Offset: 17059
    000042a5: 	endbr64
    000042a9: 	jmp	.Ltmp3768 # Offset: 17065
    000042ab: 	endbr64
    000042af: 	jmp	.Ltmp3768 # Offset: 17071
.Ltmp3767:
    000042b1: 	movq	0x190(%rsp), %rdi
    000042b9: 	cmpq	%r14, %rdi
    000042bc: 	jne	.Ltmp3769 # Offset: 17084
    000042c2: 	jmp	.Ltmp3760 # Offset: 17090
    000042c7: 	endbr64
    000042cb: 	jmp	.Ltmp3768 # Offset: 17099
    000042cd: 	endbr64
    000042d1: 	jmp	.Ltmp3768 # Offset: 17105
    000042d3: 	endbr64
    000042d7: 	jmp	.Ltmp3768 # Offset: 17111
    000042d9: 	endbr64
    000042dd: 	jmp	.Ltmp3768 # Offset: 17117
    000042df: 	endbr64
.Ltmp3774:
    000042e3: 	movq	%rax, %rbp
    000042e6: 	jmp	.Ltmp3770 # Offset: 17126
    000042e8: 	endbr64
    000042ec: 	movq	%rax, %rbp
    000042ef: 	jmp	.Ltmp3771 # Offset: 17135
    000042f4: 	endbr64
.Ltmp3773:
    000042f8: 	movq	%rax, %rbp
    000042fb: 	jmp	.Ltmp3772 # Offset: 17147
    000042fd: 	endbr64
    00004301: 	jmp	.Ltmp3773 # Offset: 17153
.Ltmp3770:
    00004303: 	movq	0x190(%rsp), %rdi
    0000430b: 	cmpq	%r14, %rdi
    0000430e: 	je	.Ltmp3771 # Offset: 17166
    00004314: 	movq	0x1a0(%rsp), %rax
    0000431c: 	leaq	0x1(%rax), %rsi
    00004320: 	callq	_ZdlPvm@PLT # Offset: 17184
    00004325: 	jmp	.Ltmp3771 # Offset: 17189
.Ltmp3772:
    0000432a: 	movq	0x190(%rsp), %rdi
    00004332: 	cmpq	%r14, %rdi
    00004335: 	je	.Ltmp3764 # Offset: 17205
    0000433b: 	movq	0x1a0(%rsp), %rax
    00004343: 	leaq	0x1(%rax), %rsi
    00004347: 	callq	_ZdlPvm@PLT # Offset: 17223
    0000434c: 	jmp	.Ltmp3764 # Offset: 17228
    00004351: 	endbr64
    00004355: 	movq	%rax, %rbx
    00004358: 	jmp	.Ltmp3762 # Offset: 17240
    0000435d: 	endbr64
    00004361: 	jmp	.Ltmp3766 # Offset: 17249
    00004366: 	endbr64
    0000436a: 	jmp	.Ltmp3766 # Offset: 17258
    0000436f: 	endbr64
    00004373: 	jmp	.Ltmp3774 # Offset: 17267
    00004378: 	endbr64
.Ltmp3776:
    0000437c: 	movq	%rax, %rbp
    0000437f: 	jmp	.Ltmp3775 # Offset: 17279
    00004381: 	endbr64
    00004385: 	jmp	.Ltmp3776 # Offset: 17285
    00004387: 	endbr64
    0000438b: 	jmp	.Ltmp3776 # Offset: 17291
    0000438d: 	endbr64
    00004391: 	movq	%rax, %rbp
    00004394: 	jmp	.Ltmp3765 # Offset: 17300
.Ltmp3775:
    00004399: 	movq	0x190(%rsp), %rdi
    000043a1: 	cmpq	%r14, %rdi
    000043a4: 	je	.Ltmp3765 # Offset: 17316
    000043aa: 	movq	0x1a0(%rsp), %rax
    000043b2: 	leaq	0x1(%rax), %rsi
    000043b6: 	callq	_ZdlPvm@PLT # Offset: 17334
    000043bb: 	jmp	.Ltmp3765 # Offset: 17339
    000043c0: 	endbr64
    000043c4: 	jmp	.Ltmp3776 # Offset: 17348
    000043c6: 	endbr64
    000043ca: 	jmp	.Ltmp3776 # Offset: 17354
    000043cc: 	endbr64
    000043d0: 	jmp	.Ltmp3776 # Offset: 17360
    000043d2: 	endbr64
    000043d6: 	jmp	.Ltmp3776 # Offset: 17366
    000043d8: 	endbr64
    000043dc: 	jmp	.Ltmp3773 # Offset: 17372
    000043e1: 	endbr64
    000043e5: 	jmp	.Ltmp3773 # Offset: 17381
    000043ea: 	endbr64
    000043ee: 	jmp	.Ltmp3773 # Offset: 17390
    000043f3: 	endbr64
    000043f7: 	jmp	.Ltmp3773 # Offset: 17399
    000043fc: 	endbr64
    00004400: 	jmp	.Ltmp3773 # Offset: 17408
    00004405: 	endbr64
    00004409: 	jmp	.Ltmp3773 # Offset: 17417
    0000440e: 	endbr64
    00004412: 	movq	%rax, %rbp
    00004415: 	jmp	.Ltmp3764 # Offset: 17429
    0000441a: 	endbr64
    0000441e: 	jmp	.Ltmp3776 # Offset: 17438
DWARF CFI Instructions:
    <empty>
End of Function "_Z16TestOneTypeFloatIfEvd"

Binary Function "_Z22test_constantSRepeatedId20custom_algebra_mixedIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 121
  State       : disassembled
  Address     : 0x335e0
  Size        : 0x3b4
  MaxSize     : 0x3c0
  Offset      : 0x335e0
  Section     : .text
  Orc Section : .local.text._Z22test_constantSRepeatedId20custom_algebra_mixedIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0120:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x10, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x8(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edx
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edx, %edx
    0000003d: 	jle	.Ltmp3777 # Offset: 61
    00000043: 	leal	-0x2(%r14), %eax
    00000047: 	movq	DATAat0x38660(%rip), %xmm6
    0000004f: 	xorl	%r12d, %r12d
    00000052: 	pxor	%xmm4, %xmm4
    00000056: 	movq	DATAat0x38630(%rip), %xmm7
    0000005e: 	leaq	0x10(%r13,%rax,8), %rbx
    00000063: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3782:
    00000068: 	cmpl	$0x1, %r14d
    0000006c: 	jle	.Ltmp3778 # Offset: 108
    00000072: 	movsd	(%r13), %xmm3
    00000078: 	leaq	0x8(%r13), %rax
    0000007c: 	movapd	%xmm4, %xmm1
.Ltmp3779:
    00000080: 	addsd	%xmm4, %xmm3
    00000084: 	movapd	%xmm4, %xmm2
    00000088: 	movapd	%xmm4, %xmm5
    0000008c: 	addq	$0x8, %rax
    00000090: 	subsd	%xmm3, %xmm2
    00000094: 	movsd	-0x8(%rax), %xmm3
    00000099: 	movapd	%xmm3, %xmm0
    0000009d: 	mulsd	%xmm3, %xmm0
    000000a1: 	addsd	%xmm4, %xmm0
    000000a5: 	subsd	%xmm0, %xmm5
    000000a9: 	movapd	%xmm5, %xmm0
    000000ad: 	xorpd	%xmm6, %xmm0
    000000b1: 	subsd	%xmm2, %xmm0
    000000b5: 	xorpd	%xmm6, %xmm2
    000000b9: 	subsd	%xmm5, %xmm2
    000000bd: 	addsd	%xmm0, %xmm1
    000000c1: 	subsd	%xmm0, %xmm1
    000000c5: 	addsd	%xmm0, %xmm1
    000000c9: 	subsd	%xmm0, %xmm1
    000000cd: 	addsd	%xmm0, %xmm1
    000000d1: 	subsd	%xmm0, %xmm1
    000000d5: 	addsd	%xmm0, %xmm1
    000000d9: 	subsd	%xmm0, %xmm1
    000000dd: 	addsd	%xmm0, %xmm1
    000000e1: 	subsd	%xmm0, %xmm1
    000000e5: 	addsd	%xmm0, %xmm1
    000000e9: 	subsd	%xmm0, %xmm1
    000000ed: 	addsd	%xmm0, %xmm1
    000000f1: 	subsd	%xmm0, %xmm1
    000000f5: 	addsd	%xmm0, %xmm1
    000000f9: 	subsd	%xmm0, %xmm1
    000000fd: 	addsd	%xmm0, %xmm1
    00000101: 	subsd	%xmm0, %xmm1
    00000105: 	addsd	%xmm0, %xmm1
    00000109: 	subsd	%xmm0, %xmm1
    0000010d: 	addsd	%xmm0, %xmm1
    00000111: 	subsd	%xmm0, %xmm1
    00000115: 	addsd	%xmm0, %xmm1
    00000119: 	subsd	%xmm0, %xmm1
    0000011d: 	addsd	%xmm0, %xmm1
    00000121: 	subsd	%xmm0, %xmm1
    00000125: 	addsd	%xmm0, %xmm1
    00000129: 	subsd	%xmm0, %xmm1
    0000012d: 	addsd	%xmm0, %xmm1
    00000131: 	subsd	%xmm0, %xmm1
    00000135: 	addsd	%xmm0, %xmm1
    00000139: 	subsd	%xmm0, %xmm1
    0000013d: 	addsd	%xmm0, %xmm1
    00000141: 	subsd	%xmm0, %xmm1
    00000145: 	addsd	%xmm0, %xmm1
    00000149: 	subsd	%xmm0, %xmm1
    0000014d: 	addsd	%xmm0, %xmm1
    00000151: 	subsd	%xmm0, %xmm1
    00000155: 	addsd	%xmm0, %xmm1
    00000159: 	subsd	%xmm0, %xmm1
    0000015d: 	addsd	%xmm0, %xmm1
    00000161: 	subsd	%xmm0, %xmm1
    00000165: 	addsd	%xmm1, %xmm0
    00000169: 	subsd	%xmm2, %xmm0
    0000016d: 	addsd	%xmm2, %xmm0
    00000171: 	subsd	%xmm2, %xmm0
    00000175: 	addsd	%xmm2, %xmm0
    00000179: 	subsd	%xmm2, %xmm0
    0000017d: 	addsd	%xmm2, %xmm0
    00000181: 	subsd	%xmm2, %xmm0
    00000185: 	addsd	%xmm2, %xmm0
    00000189: 	subsd	%xmm2, %xmm0
    0000018d: 	addsd	%xmm2, %xmm0
    00000191: 	subsd	%xmm2, %xmm0
    00000195: 	addsd	%xmm2, %xmm0
    00000199: 	subsd	%xmm2, %xmm0
    0000019d: 	addsd	%xmm2, %xmm0
    000001a1: 	subsd	%xmm2, %xmm0
    000001a5: 	addsd	%xmm2, %xmm0
    000001a9: 	subsd	%xmm2, %xmm0
    000001ad: 	addsd	%xmm2, %xmm0
    000001b1: 	subsd	%xmm2, %xmm0
    000001b5: 	addsd	%xmm2, %xmm0
    000001b9: 	movapd	%xmm0, %xmm1
    000001bd: 	subsd	%xmm2, %xmm1
    000001c1: 	cmpq	%rax, %rbx
    000001c4: 	jne	.Ltmp3779 # Offset: 452
    000001ca: 	movapd	%xmm1, %xmm0
    000001ce: 	andpd	%xmm7, %xmm0
    000001d2: 	comisd	DATAat0x385f8(%rip), %xmm0
    000001da: 	jbe	.Ltmp3780 # Offset: 474
    000001dc: 	divsd	%xmm1, %xmm1
    000001e0: 	andpd	%xmm7, %xmm1
    000001e4: 	movapd	%xmm1, %xmm0
.Ltmp3780:
    000001e8: 	movsd	DATAat0x38600(%rip), %xmm1
    000001f0: 	comisd	%xmm0, %xmm1
    000001f4: 	jbe	.Ltmp3781 # Offset: 500
.Ltmp3778:
    000001fa: 	addl	$0x1, %r12d
    000001fe: 	cmpl	%edx, %r12d
    00000201: 	jl	.Ltmp3782 # Offset: 513
.Ltmp3777:
    00000207: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000020e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000215: 	subq	$0x20, %rax
    00000219: 	cmpq	%rax, %rbx
    0000021c: 	je	.Ltmp3783 # Offset: 540
    00000222: 	leaq	0x10(%rbx), %rdi
    00000226: 	movq	0x8(%rbp), %r12
    0000022a: 	movq	%rdi, (%rbx)
    0000022d: 	movq	(%rbp), %r13
    00000231: 	movq	%r13, %rax
    00000234: 	addq	%r12, %rax
    00000237: 	je	.Ltmp3784 # Offset: 567
    00000239: 	testq	%r13, %r13
    0000023c: 	je	.Ltmp3785 # Offset: 572
.Ltmp3784:
    00000242: 	movq	%r12, (%rsp)
    00000246: 	cmpq	$0xf, %r12
    0000024a: 	ja	.Ltmp3786 # Offset: 586
    00000250: 	cmpq	$0x1, %r12
    00000254: 	jne	.Ltmp3787 # Offset: 596
    0000025a: 	movzbl	(%r13), %eax
    0000025f: 	movb	%al, 0x10(%rbx)
.Ltmp3790:
    00000262: 	movq	%r12, 0x8(%rbx)
    00000266: 	movb	$0x0, (%rdi,%r12)
    0000026b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000272: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000279: 	addq	$0x20, %rax
    0000027d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000284: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000028b: 	je	.Ltmp3788 # Offset: 651
.Ltmp3791:
    00000291: 	movq	-0x20(%rax), %rbp
    00000295: 	callq	clock@PLT # Offset: 661
    0000029a: 	movq	%rax, end_time(%rip)
    000002a1: 	movq	0x8(%rsp), %rdx
    000002a6: 	subq	%fs:0x28, %rdx
    000002af: 	jne	.Ltmp3789 # Offset: 687
    000002b5: 	subq	start_time(%rip), %rax
    000002bc: 	pxor	%xmm0, %xmm0
    000002c0: 	movq	%rbp, %rdi
    000002c3: 	cvtsi2sd	%rax, %xmm0
    000002c8: 	divsd	DATAat0x385e0(%rip), %xmm0
    000002d0: 	addq	$0x10, %rsp
    000002d4: 	popq	%rbx
    000002d5: 	popq	%rbp
    000002d6: 	popq	%r12
    000002d8: 	popq	%r13
    000002da: 	popq	%r14
    000002dc: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 732
    000002e1: 	nopl	(%rax) # Size: 7
.Ltmp3781:
    000002e8: 	movl	current_test(%rip), %edx
    000002ee: 	xorl	%eax, %eax
    000002f0: 	movl	$0x1, %edi
    000002f5: 	addl	$0x1, %r12d
    000002f9: 	leaq	DATAat0x381c8(%rip), %rsi
    00000300: 	callq	__printf_chk@PLT # Offset: 768
    00000305: 	movl	iterations(%rip), %edx
    0000030b: 	pxor	%xmm4, %xmm4
    0000030f: 	movq	DATAat0x38660(%rip), %xmm6
    00000317: 	movq	DATAat0x38630(%rip), %xmm7
    0000031f: 	cmpl	%edx, %r12d
    00000322: 	jl	.Ltmp3782 # Offset: 802
    00000328: 	jmp	.Ltmp3777 # Offset: 808
.Ltmp3786:
    0000032d: 	movq	%rbx, %rdi
    00000330: 	movq	%rsp, %rsi
    00000333: 	xorl	%edx, %edx
    00000335: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 821
    0000033a: 	movq	%rax, (%rbx)
    0000033d: 	movq	%rax, %rdi
    00000340: 	movq	(%rsp), %rax
    00000344: 	movq	%rax, 0x10(%rbx)
.Ltmp3792:
    00000348: 	movq	%r12, %rdx
    0000034b: 	movq	%r13, %rsi
    0000034e: 	callq	memcpy@PLT # Offset: 846
    00000353: 	movq	(%rsp), %r12
    00000357: 	movq	(%rbx), %rdi
    0000035a: 	jmp	.Ltmp3790 # Offset: 858
.Ltmp3783:
    0000035f: 	movq	%rbp, %rsi
    00000362: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000369: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 873
    0000036e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000375: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000037c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000383: 	jne	.Ltmp3791 # Offset: 899
.Ltmp3788:
    00000389: 	movq	-0x8(%rdx), %rax
    0000038d: 	addq	$0x200, %rax
    00000393: 	jmp	.Ltmp3791 # Offset: 915
.Ltmp3787:
    00000398: 	testq	%r12, %r12
    0000039b: 	je	.Ltmp3790 # Offset: 923
    000003a1: 	jmp	.Ltmp3792 # Offset: 929
.Ltmp3789:
    000003a3: 	callq	__stack_chk_fail@PLT # Offset: 931
.Ltmp3785:
    000003a8: 	leaq	DATAat0x38110(%rip), %rdi
    000003af: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 943
DWARF CFI Instructions:
    <empty>
End of Function "_Z22test_constantSRepeatedId20custom_algebra_mixedIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z16TestOneTypeFloatIdEvd" after disassembly {
  Number      : 122
  State       : disassembled
  Address     : 0x339a0
  Size        : 0x3d6b
  MaxSize     : 0x3d6b
  Offset      : 0x339a0
  Section     : .text
  Orc Section : .local.text._Z16TestOneTypeFloatIdEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0121:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp3793:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp3793 # Offset: 37
    00000027: 	subq	$0xbd8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %r15
    00000045: 	movq	%r15, %rdi
    00000048: 	movsd	%xmm0, 0x30(%rsp)
    0000004e: 	leaq	0xe0(%rsp), %rsi
    00000056: 	leaq	0x1c0(%rsp), %rbp
    0000005e: 	movq	%fs:0x28, %rax
    00000067: 	movq	%rax, 0xfbc8(%rsp)
    0000006f: 	xorl	%eax, %eax
    00000071: 	leaq	0x110(%rsp), %rax
    00000079: 	movl	$0x62756f64, 0x110(%rsp)
    00000084: 	leaq	0xfbc0(%rsp), %rbx
    0000008c: 	movq	%rax, 0xd8(%rsp)
    00000094: 	movq	%rax, 0x100(%rsp)
    0000009c: 	movl	$0x656c, %eax
    000000a1: 	movw	%ax, 0x114(%rsp)
    000000a9: 	movq	$0x6, 0x108(%rsp)
    000000b5: 	movb	$0x0, 0x116(%rsp)
    000000bd: 	movaps	%xmm6, 0xe0(%rsp)
    000000c5: 	movaps	%xmm7, 0xf0(%rsp)
    000000cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 205
    000000d2: 	movsd	init_value(%rip), %xmm0
    000000da: 	movq	%rbp, %rax
    000000dd: 	unpcklpd	%xmm0, %xmm0
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp3794:
    000000e8: 	movaps	%xmm0, (%rax)
    000000eb: 	addq	$0x10, %rax
    000000ef: 	cmpq	%rbx, %rax
    000000f2: 	jne	.Ltmp3794 # Offset: 242
    000000f4: 	movsd	0x30(%rsp), %xmm4
    000000fa: 	movsd	DATAat0x38610(%rip), %xmm6
    00000102: 	leaq	0x1a0(%rsp), %r12
    0000010a: 	leaq	0x100(%rsp), %r13
    00000112: 	leaq	DATAat0x381d8(%rip), %rdx
    00000119: 	movq	%r13, %rsi
    0000011c: 	movq	%r12, %rdi
    0000011f: 	movapd	%xmm4, %xmm5
    00000123: 	addsd	%xmm4, %xmm6
    00000127: 	addsd	%xmm4, %xmm5
    0000012b: 	movsd	%xmm6, 0x40(%rsp)
    00000131: 	movsd	%xmm5, 0x38(%rsp)
    00000137: 	divsd	%xmm6, %xmm5
    0000013b: 	movapd	%xmm5, %xmm0
    0000013f: 	addsd	%xmm4, %xmm0
    00000143: 	movsd	%xmm0, 0x48(%rsp)
    00000149: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 329
    0000014e: 	callq	clock@PLT # Offset: 334
    00000153: 	movl	iterations(%rip), %edx
    00000159: 	movq	%rax, start_time(%rip)
    00000160: 	testl	%edx, %edx
    00000162: 	jle	.Ltmp3795 # Offset: 354
    00000168: 	movsd	DATAat0x385d8(%rip), %xmm5
    00000170: 	pxor	%xmm6, %xmm6
    00000174: 	movq	DATAat0x38630(%rip), %xmm7
    0000017c: 	xorl	%r14d, %r14d
    0000017f: 	movsd	%xmm6, 0x20(%rsp)
    00000185: 	movsd	DATAat0x385f8(%rip), %xmm6
    0000018d: 	movsd	%xmm5, 0x10(%rsp)
    00000193: 	movsd	DATAat0x38600(%rip), %xmm5
    0000019b: 	movaps	%xmm7, (%rsp)
    0000019f: 	movsd	%xmm6, 0x18(%rsp)
    000001a5: 	movsd	%xmm5, 0x28(%rsp)
    000001ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3799:
    000001b0: 	movq	%rbp, %rax
    000001b3: 	pxor	%xmm0, %xmm0
    000001b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3796:
    000001c0: 	movsd	(%rax), %xmm1
    000001c4: 	addq	$0x10, %rax
    000001c8: 	addsd	%xmm1, %xmm0
    000001cc: 	movsd	-0x8(%rax), %xmm1
    000001d1: 	addsd	%xmm1, %xmm0
    000001d5: 	cmpq	%rax, %rbx
    000001d8: 	jne	.Ltmp3796 # Offset: 472
    000001da: 	movsd	0x10(%rsp), %xmm2
    000001e0: 	movapd	(%rsp), %xmm6
    000001e5: 	movapd	%xmm0, %xmm1
    000001e9: 	mulsd	init_value(%rip), %xmm2
    000001f1: 	andpd	%xmm0, %xmm6
    000001f5: 	comisd	0x18(%rsp), %xmm6
    000001fb: 	subsd	%xmm2, %xmm1
    000001ff: 	jbe	.Ltmp3797 # Offset: 511
    00000201: 	divsd	%xmm0, %xmm1
.Ltmp3797:
    00000205: 	andpd	(%rsp), %xmm1
    0000020a: 	movsd	0x28(%rsp), %xmm6
    00000210: 	comisd	%xmm1, %xmm6
    00000214: 	jbe	.Ltmp3798 # Offset: 532
.Ltmp4031:
    0000021a: 	addl	$0x1, %r14d
    0000021e: 	cmpl	%edx, %r14d
    00000221: 	jl	.Ltmp3799 # Offset: 545
.Ltmp3795:
    00000223: 	movq	%r12, %rsi
    00000226: 	movq	%r15, %rdi
    00000229: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 553
    0000022e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000235: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000243: 	je	.Ltmp3800 # Offset: 579
.Ltmp4032:
    00000249: 	movq	-0x20(%rax), %r14
    0000024d: 	callq	clock@PLT # Offset: 589
    00000252: 	pxor	%xmm0, %xmm0
    00000256: 	movq	%rax, end_time(%rip)
    0000025d: 	movq	%r14, %rdi
    00000260: 	subq	start_time(%rip), %rax
    00000267: 	cvtsi2sd	%rax, %xmm0
    0000026c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000274: 	callq	_Z13record_resultdPKc # Offset: 628
    00000279: 	movq	0x1a0(%rsp), %rdi
    00000281: 	leaq	0x1b0(%rsp), %r14
    00000289: 	cmpq	%r14, %rdi
    0000028c: 	je	.Ltmp3801 # Offset: 652
    0000028e: 	movq	0x1b0(%rsp), %rax
    00000296: 	leaq	0x1(%rax), %rsi
    0000029a: 	callq	_ZdlPvm@PLT # Offset: 666
.Ltmp3801:
    0000029f: 	leaq	DATAat0x381de(%rip), %rdx
    000002a6: 	movq	%r13, %rsi
    000002a9: 	movq	%r12, %rdi
    000002ac: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 684
    000002b1: 	callq	clock@PLT # Offset: 689
    000002b6: 	movl	iterations(%rip), %edx
    000002bc: 	movq	%rax, start_time(%rip)
    000002c3: 	testl	%edx, %edx
    000002c5: 	jle	.Ltmp3802 # Offset: 709
    000002cb: 	pxor	%xmm7, %xmm7
    000002cf: 	movsd	DATAat0x385d8(%rip), %xmm6
    000002d7: 	movq	DATAat0x38630(%rip), %xmm4
    000002df: 	movl	$0x0, 0x50(%rsp)
    000002e7: 	movsd	DATAat0x385f8(%rip), %xmm5
    000002ef: 	movsd	%xmm7, 0x20(%rsp)
    000002f5: 	movsd	DATAat0x38600(%rip), %xmm7
    000002fd: 	movsd	%xmm6, 0x10(%rsp)
    00000303: 	movaps	%xmm4, (%rsp)
    00000307: 	movsd	%xmm5, 0x18(%rsp)
    0000030d: 	movsd	%xmm7, 0x28(%rsp)
    00000313: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3806:
    00000318: 	movq	%rbp, %rax
    0000031b: 	pxor	%xmm0, %xmm0
    0000031f: 	pxor	%xmm3, %xmm3
    00000323: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3803:
    00000328: 	movapd	(%rax), %xmm1
    0000032c: 	addq	$0x10, %rax
    00000330: 	addpd	%xmm3, %xmm1
    00000334: 	addsd	%xmm1, %xmm0
    00000338: 	unpckhpd	%xmm1, %xmm1
    0000033c: 	addsd	%xmm1, %xmm0
    00000340: 	cmpq	%rbx, %rax
    00000343: 	jne	.Ltmp3803 # Offset: 835
    00000345: 	movsd	0x20(%rsp), %xmm2
    0000034b: 	movapd	(%rsp), %xmm7
    00000350: 	movapd	%xmm0, %xmm1
    00000354: 	addsd	init_value(%rip), %xmm2
    0000035c: 	mulsd	0x10(%rsp), %xmm2
    00000362: 	andpd	%xmm0, %xmm7
    00000366: 	comisd	0x18(%rsp), %xmm7
    0000036c: 	subsd	%xmm2, %xmm1
    00000370: 	jbe	.Ltmp3804 # Offset: 880
    00000372: 	divsd	%xmm0, %xmm1
.Ltmp3804:
    00000376: 	andpd	(%rsp), %xmm1
    0000037b: 	movsd	0x28(%rsp), %xmm6
    00000381: 	comisd	%xmm1, %xmm6
    00000385: 	jbe	.Ltmp3805 # Offset: 901
.Ltmp4030:
    0000038b: 	addl	$0x1, 0x50(%rsp)
    00000390: 	movl	0x50(%rsp), %eax
    00000394: 	cmpl	%edx, %eax
    00000396: 	jl	.Ltmp3806 # Offset: 918
.Ltmp3802:
    00000398: 	movq	%r12, %rsi
    0000039b: 	movq	%r15, %rdi
    0000039e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 926
    000003a3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003aa: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003b1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003b8: 	je	.Ltmp3807 # Offset: 952
.Ltmp4060:
    000003be: 	movq	-0x20(%rax), %rdi
    000003c2: 	movq	%rdi, (%rsp)
    000003c6: 	callq	clock@PLT # Offset: 966
    000003cb: 	movq	(%rsp), %rdi
    000003cf: 	pxor	%xmm0, %xmm0
    000003d3: 	movq	%rax, end_time(%rip)
    000003da: 	subq	start_time(%rip), %rax
    000003e1: 	cvtsi2sd	%rax, %xmm0
    000003e6: 	divsd	DATAat0x385e0(%rip), %xmm0
    000003ee: 	callq	_Z13record_resultdPKc # Offset: 1006
    000003f3: 	movq	0x1a0(%rsp), %rdi
    000003fb: 	cmpq	%r14, %rdi
    000003fe: 	je	.Ltmp3808 # Offset: 1022
    00000400: 	movq	0x1b0(%rsp), %rax
    00000408: 	leaq	0x1(%rax), %rsi
    0000040c: 	callq	_ZdlPvm@PLT # Offset: 1036
.Ltmp3808:
    00000411: 	leaq	DATAat0x381e8(%rip), %rdx
    00000418: 	movq	%r13, %rsi
    0000041b: 	movq	%r12, %rdi
    0000041e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1054
    00000423: 	callq	clock@PLT # Offset: 1059
    00000428: 	movl	iterations(%rip), %edx
    0000042e: 	movq	%rax, start_time(%rip)
    00000435: 	testl	%edx, %edx
    00000437: 	jle	.Ltmp3809 # Offset: 1079
    0000043d: 	pxor	%xmm6, %xmm6
    00000441: 	movsd	DATAat0x385d8(%rip), %xmm4
    00000449: 	movq	DATAat0x38630(%rip), %xmm5
    00000451: 	movl	$0x0, 0x50(%rsp)
    00000459: 	movsd	DATAat0x385f8(%rip), %xmm7
    00000461: 	movsd	%xmm6, 0x20(%rsp)
    00000467: 	movsd	DATAat0x38600(%rip), %xmm6
    0000046f: 	movsd	%xmm4, 0x10(%rsp)
    00000475: 	movaps	%xmm5, (%rsp)
    00000479: 	movsd	%xmm7, 0x18(%rsp)
    0000047f: 	movsd	%xmm6, 0x28(%rsp)
    00000485: 	nopl	(%rax) # Size: 3
.Ltmp3813:
    00000488: 	movq	%rbp, %rax
    0000048b: 	pxor	%xmm0, %xmm0
    0000048f: 	nop # Size: 1
.Ltmp3810:
    00000490: 	movsd	(%rax), %xmm1
    00000494: 	addq	$0x10, %rax
    00000498: 	addsd	%xmm1, %xmm0
    0000049c: 	movsd	-0x8(%rax), %xmm1
    000004a1: 	addsd	%xmm1, %xmm0
    000004a5: 	cmpq	%rbx, %rax
    000004a8: 	jne	.Ltmp3810 # Offset: 1192
    000004aa: 	movsd	0x10(%rsp), %xmm2
    000004b0: 	movapd	(%rsp), %xmm4
    000004b5: 	movapd	%xmm0, %xmm1
    000004b9: 	mulsd	init_value(%rip), %xmm2
    000004c1: 	andpd	%xmm0, %xmm4
    000004c5: 	comisd	0x18(%rsp), %xmm4
    000004cb: 	subsd	%xmm2, %xmm1
    000004cf: 	jbe	.Ltmp3811 # Offset: 1231
    000004d1: 	divsd	%xmm0, %xmm1
.Ltmp3811:
    000004d5: 	andpd	(%rsp), %xmm1
    000004da: 	movsd	0x28(%rsp), %xmm5
    000004e0: 	comisd	%xmm1, %xmm5
    000004e4: 	jbe	.Ltmp3812 # Offset: 1252
.Ltmp4029:
    000004ea: 	addl	$0x1, 0x50(%rsp)
    000004ef: 	movl	0x50(%rsp), %eax
    000004f3: 	cmpl	%edx, %eax
    000004f5: 	jl	.Ltmp3813 # Offset: 1269
.Ltmp3809:
    000004f7: 	movq	%r12, %rsi
    000004fa: 	movq	%r15, %rdi
    000004fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1277
    00000502: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000509: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000510: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000517: 	je	.Ltmp3814 # Offset: 1303
.Ltmp4059:
    0000051d: 	movq	-0x20(%rax), %rdi
    00000521: 	movq	%rdi, (%rsp)
    00000525: 	callq	clock@PLT # Offset: 1317
    0000052a: 	movq	(%rsp), %rdi
    0000052e: 	pxor	%xmm0, %xmm0
    00000532: 	movq	%rax, end_time(%rip)
    00000539: 	subq	start_time(%rip), %rax
    00000540: 	cvtsi2sd	%rax, %xmm0
    00000545: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000054d: 	callq	_Z13record_resultdPKc # Offset: 1357
    00000552: 	movq	0x1a0(%rsp), %rdi
    0000055a: 	cmpq	%r14, %rdi
    0000055d: 	je	.Ltmp3815 # Offset: 1373
    0000055f: 	movq	0x1b0(%rsp), %rax
    00000567: 	leaq	0x1(%rax), %rsi
    0000056b: 	callq	_ZdlPvm@PLT # Offset: 1387
.Ltmp3815:
    00000570: 	leaq	DATAat0x381f7(%rip), %rdx
    00000577: 	movq	%r13, %rsi
    0000057a: 	movq	%r12, %rdi
    0000057d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1405
    00000582: 	callq	clock@PLT # Offset: 1410
    00000587: 	movl	iterations(%rip), %edx
    0000058d: 	movq	%rax, start_time(%rip)
    00000594: 	testl	%edx, %edx
    00000596: 	jle	.Ltmp3816 # Offset: 1430
    0000059c: 	pxor	%xmm4, %xmm4
    000005a0: 	movsd	DATAat0x385d8(%rip), %xmm5
    000005a8: 	movq	DATAat0x38630(%rip), %xmm7
    000005b0: 	movl	$0x0, 0x50(%rsp)
    000005b8: 	movsd	DATAat0x385f8(%rip), %xmm6
    000005c0: 	movsd	%xmm4, 0x20(%rsp)
    000005c6: 	movsd	DATAat0x38600(%rip), %xmm4
    000005ce: 	movsd	%xmm5, 0x10(%rsp)
    000005d4: 	movaps	%xmm7, (%rsp)
    000005d8: 	movsd	%xmm6, 0x18(%rsp)
    000005de: 	movsd	%xmm4, 0x28(%rsp)
    000005e4: 	nopl	(%rax) # Size: 4
.Ltmp3820:
    000005e8: 	movq	%rbp, %rax
    000005eb: 	pxor	%xmm1, %xmm1
    000005ef: 	nop # Size: 1
.Ltmp3817:
    000005f0: 	movsd	(%rax), %xmm0
    000005f4: 	addq	$0x10, %rax
    000005f8: 	subsd	%xmm0, %xmm1
    000005fc: 	movsd	-0x8(%rax), %xmm0
    00000601: 	subsd	%xmm0, %xmm1
    00000605: 	cmpq	%rax, %rbx
    00000608: 	jne	.Ltmp3817 # Offset: 1544
    0000060a: 	movsd	0x10(%rsp), %xmm0
    00000610: 	movapd	(%rsp), %xmm6
    00000615: 	mulsd	init_value(%rip), %xmm0
    0000061d: 	andpd	%xmm1, %xmm6
    00000621: 	comisd	0x18(%rsp), %xmm6
    00000627: 	addsd	%xmm1, %xmm0
    0000062b: 	jbe	.Ltmp3818 # Offset: 1579
    0000062d: 	divsd	%xmm1, %xmm0
.Ltmp3818:
    00000631: 	andpd	(%rsp), %xmm0
    00000636: 	movsd	0x28(%rsp), %xmm4
    0000063c: 	comisd	%xmm0, %xmm4
    00000640: 	jbe	.Ltmp3819 # Offset: 1600
.Ltmp4028:
    00000646: 	addl	$0x1, 0x50(%rsp)
    0000064b: 	movl	0x50(%rsp), %eax
    0000064f: 	cmpl	%edx, %eax
    00000651: 	jl	.Ltmp3820 # Offset: 1617
.Ltmp3816:
    00000653: 	movq	%r12, %rsi
    00000656: 	movq	%r15, %rdi
    00000659: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1625
    0000065e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000665: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000066c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000673: 	je	.Ltmp3821 # Offset: 1651
.Ltmp4058:
    00000679: 	movq	-0x20(%rax), %rdi
    0000067d: 	movq	%rdi, (%rsp)
    00000681: 	callq	clock@PLT # Offset: 1665
    00000686: 	movq	(%rsp), %rdi
    0000068a: 	pxor	%xmm0, %xmm0
    0000068e: 	movq	%rax, end_time(%rip)
    00000695: 	subq	start_time(%rip), %rax
    0000069c: 	cvtsi2sd	%rax, %xmm0
    000006a1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000006a9: 	callq	_Z13record_resultdPKc # Offset: 1705
    000006ae: 	movq	0x1a0(%rsp), %rdi
    000006b6: 	cmpq	%r14, %rdi
    000006b9: 	je	.Ltmp3822 # Offset: 1721
    000006bb: 	movq	0x1b0(%rsp), %rax
    000006c3: 	leaq	0x1(%rax), %rsi
    000006c7: 	callq	_ZdlPvm@PLT # Offset: 1735
.Ltmp3822:
    000006cc: 	leaq	DATAat0x381ff(%rip), %rdx
    000006d3: 	movq	%r13, %rsi
    000006d6: 	movq	%r12, %rdi
    000006d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1753
    000006de: 	callq	clock@PLT # Offset: 1758
    000006e3: 	movl	iterations(%rip), %edx
    000006e9: 	movq	%rax, start_time(%rip)
    000006f0: 	testl	%edx, %edx
    000006f2: 	jle	.Ltmp3823 # Offset: 1778
    000006f8: 	pxor	%xmm5, %xmm5
    000006fc: 	movsd	DATAat0x385d8(%rip), %xmm7
    00000704: 	movq	DATAat0x38630(%rip), %xmm6
    0000070c: 	movl	$0x0, 0x50(%rsp)
    00000714: 	movsd	DATAat0x385f8(%rip), %xmm4
    0000071c: 	movsd	%xmm5, 0x20(%rsp)
    00000722: 	movsd	DATAat0x38600(%rip), %xmm5
    0000072a: 	movsd	%xmm7, 0x10(%rsp)
    00000730: 	movaps	%xmm6, (%rsp)
    00000734: 	movsd	%xmm4, 0x18(%rsp)
    0000073a: 	movsd	%xmm5, 0x28(%rsp)
.Ltmp3827:
    00000740: 	movq	%rbp, %rax
    00000743: 	pxor	%xmm0, %xmm0
    00000747: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3824:
    00000750: 	movsd	(%rax), %xmm1
    00000754: 	addq	$0x10, %rax
    00000758: 	addsd	%xmm1, %xmm0
    0000075c: 	movsd	-0x8(%rax), %xmm1
    00000761: 	addsd	%xmm1, %xmm0
    00000765: 	cmpq	%rbx, %rax
    00000768: 	jne	.Ltmp3824 # Offset: 1896
    0000076a: 	movsd	0x10(%rsp), %xmm2
    00000770: 	movapd	(%rsp), %xmm7
    00000775: 	movapd	%xmm0, %xmm1
    00000779: 	mulsd	init_value(%rip), %xmm2
    00000781: 	andpd	%xmm0, %xmm7
    00000785: 	comisd	0x18(%rsp), %xmm7
    0000078b: 	subsd	%xmm2, %xmm1
    0000078f: 	jbe	.Ltmp3825 # Offset: 1935
    00000791: 	divsd	%xmm0, %xmm1
.Ltmp3825:
    00000795: 	andpd	(%rsp), %xmm1
    0000079a: 	movsd	0x28(%rsp), %xmm7
    000007a0: 	comisd	%xmm1, %xmm7
    000007a4: 	jbe	.Ltmp3826 # Offset: 1956
.Ltmp4027:
    000007aa: 	addl	$0x1, 0x50(%rsp)
    000007af: 	movl	0x50(%rsp), %eax
    000007b3: 	cmpl	%edx, %eax
    000007b5: 	jl	.Ltmp3827 # Offset: 1973
.Ltmp3823:
    000007b7: 	movq	%r12, %rsi
    000007ba: 	movq	%r15, %rdi
    000007bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1981
    000007c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007d7: 	je	.Ltmp3828 # Offset: 2007
.Ltmp4057:
    000007dd: 	movq	-0x20(%rax), %rdi
    000007e1: 	movq	%rdi, (%rsp)
    000007e5: 	callq	clock@PLT # Offset: 2021
    000007ea: 	movq	(%rsp), %rdi
    000007ee: 	pxor	%xmm0, %xmm0
    000007f2: 	movq	%rax, end_time(%rip)
    000007f9: 	subq	start_time(%rip), %rax
    00000800: 	cvtsi2sd	%rax, %xmm0
    00000805: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000080d: 	callq	_Z13record_resultdPKc # Offset: 2061
    00000812: 	movq	0x1a0(%rsp), %rdi
    0000081a: 	cmpq	%r14, %rdi
    0000081d: 	je	.Ltmp3829 # Offset: 2077
    0000081f: 	movq	0x1b0(%rsp), %rax
    00000827: 	leaq	0x1(%rax), %rsi
    0000082b: 	callq	_ZdlPvm@PLT # Offset: 2091
.Ltmp3829:
    00000830: 	leaq	DATAat0x3820d(%rip), %rdx
    00000837: 	movq	%r13, %rsi
    0000083a: 	movq	%r12, %rdi
    0000083d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2109
    00000842: 	callq	clock@PLT # Offset: 2114
    00000847: 	movl	iterations(%rip), %edx
    0000084d: 	movq	%rax, start_time(%rip)
    00000854: 	testl	%edx, %edx
    00000856: 	jle	.Ltmp3830 # Offset: 2134
    0000085c: 	pxor	%xmm7, %xmm7
    00000860: 	movsd	DATAat0x385d8(%rip), %xmm6
    00000868: 	movq	DATAat0x38630(%rip), %xmm4
    00000870: 	movl	$0x0, 0x50(%rsp)
    00000878: 	movsd	DATAat0x385f8(%rip), %xmm5
    00000880: 	movsd	%xmm7, 0x20(%rsp)
    00000886: 	movsd	DATAat0x38600(%rip), %xmm7
    0000088e: 	movsd	%xmm6, 0x10(%rsp)
    00000894: 	movaps	%xmm4, (%rsp)
    00000898: 	movsd	%xmm5, 0x18(%rsp)
    0000089e: 	movsd	%xmm7, 0x28(%rsp)
    000008a4: 	nopl	(%rax) # Size: 4
.Ltmp3834:
    000008a8: 	movq	%rbp, %rax
    000008ab: 	pxor	%xmm0, %xmm0
    000008af: 	pxor	%xmm3, %xmm3
    000008b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3831:
    000008b8: 	movapd	%xmm3, %xmm1
    000008bc: 	subpd	(%rax), %xmm1
    000008c0: 	addq	$0x10, %rax
    000008c4: 	addsd	%xmm1, %xmm0
    000008c8: 	unpckhpd	%xmm1, %xmm1
    000008cc: 	addsd	%xmm1, %xmm0
    000008d0: 	cmpq	%rbx, %rax
    000008d3: 	jne	.Ltmp3831 # Offset: 2259
    000008d5: 	movsd	0x20(%rsp), %xmm2
    000008db: 	movapd	(%rsp), %xmm4
    000008e0: 	movapd	%xmm0, %xmm1
    000008e4: 	subsd	init_value(%rip), %xmm2
    000008ec: 	mulsd	0x10(%rsp), %xmm2
    000008f2: 	andpd	%xmm0, %xmm4
    000008f6: 	comisd	0x18(%rsp), %xmm4
    000008fc: 	subsd	%xmm2, %xmm1
    00000900: 	jbe	.Ltmp3832 # Offset: 2304
    00000902: 	divsd	%xmm0, %xmm1
.Ltmp3832:
    00000906: 	andpd	(%rsp), %xmm1
    0000090b: 	movsd	0x28(%rsp), %xmm7
    00000911: 	comisd	%xmm1, %xmm7
    00000915: 	jbe	.Ltmp3833 # Offset: 2325
.Ltmp4026:
    0000091b: 	addl	$0x1, 0x50(%rsp)
    00000920: 	movl	0x50(%rsp), %eax
    00000924: 	cmpl	%edx, %eax
    00000926: 	jl	.Ltmp3834 # Offset: 2342
.Ltmp3830:
    00000928: 	movq	%r12, %rsi
    0000092b: 	movq	%r15, %rdi
    0000092e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2350
    00000933: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000093a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000941: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000948: 	je	.Ltmp3835 # Offset: 2376
.Ltmp4056:
    0000094e: 	movq	-0x20(%rax), %rdi
    00000952: 	movq	%rdi, (%rsp)
    00000956: 	callq	clock@PLT # Offset: 2390
    0000095b: 	movq	(%rsp), %rdi
    0000095f: 	pxor	%xmm0, %xmm0
    00000963: 	movq	%rax, end_time(%rip)
    0000096a: 	subq	start_time(%rip), %rax
    00000971: 	cvtsi2sd	%rax, %xmm0
    00000976: 	divsd	DATAat0x385e0(%rip), %xmm0
    0000097e: 	callq	_Z13record_resultdPKc # Offset: 2430
    00000983: 	movq	0x1a0(%rsp), %rdi
    0000098b: 	cmpq	%r14, %rdi
    0000098e: 	je	.Ltmp3836 # Offset: 2446
    00000990: 	movq	0x1b0(%rsp), %rax
    00000998: 	leaq	0x1(%rax), %rsi
    0000099c: 	callq	_ZdlPvm@PLT # Offset: 2460
.Ltmp3836:
    000009a1: 	leaq	DATAat0x38219(%rip), %rdx
    000009a8: 	movq	%r13, %rsi
    000009ab: 	movq	%r12, %rdi
    000009ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2478
    000009b3: 	callq	clock@PLT # Offset: 2483
    000009b8: 	movl	iterations(%rip), %edx
    000009be: 	movq	%rax, start_time(%rip)
    000009c5: 	testl	%edx, %edx
    000009c7: 	jle	.Ltmp3837 # Offset: 2503
    000009cd: 	pxor	%xmm6, %xmm6
    000009d1: 	movsd	DATAat0x385d8(%rip), %xmm4
    000009d9: 	movq	DATAat0x38630(%rip), %xmm5
    000009e1: 	movl	$0x0, 0x50(%rsp)
    000009e9: 	movsd	DATAat0x385f8(%rip), %xmm7
    000009f1: 	movsd	%xmm6, 0x20(%rsp)
    000009f7: 	movsd	DATAat0x38600(%rip), %xmm6
    000009ff: 	movsd	%xmm4, 0x10(%rsp)
    00000a05: 	movaps	%xmm5, (%rsp)
    00000a09: 	movsd	%xmm7, 0x18(%rsp)
    00000a0f: 	movsd	%xmm6, 0x28(%rsp)
    00000a15: 	nopl	(%rax) # Size: 3
.Ltmp3841:
    00000a18: 	movq	%rbp, %rax
    00000a1b: 	pxor	%xmm0, %xmm0
    00000a1f: 	nop # Size: 1
.Ltmp3838:
    00000a20: 	movsd	(%rax), %xmm1
    00000a24: 	addq	$0x10, %rax
    00000a28: 	addsd	%xmm1, %xmm0
    00000a2c: 	movsd	-0x8(%rax), %xmm1
    00000a31: 	addsd	%xmm1, %xmm0
    00000a35: 	cmpq	%rax, %rbx
    00000a38: 	jne	.Ltmp3838 # Offset: 2616
    00000a3a: 	movsd	0x10(%rsp), %xmm2
    00000a40: 	movapd	(%rsp), %xmm5
    00000a45: 	movapd	%xmm0, %xmm1
    00000a49: 	mulsd	init_value(%rip), %xmm2
    00000a51: 	andpd	%xmm0, %xmm5
    00000a55: 	comisd	0x18(%rsp), %xmm5
    00000a5b: 	subsd	%xmm2, %xmm1
    00000a5f: 	jbe	.Ltmp3839 # Offset: 2655
    00000a61: 	divsd	%xmm0, %xmm1
.Ltmp3839:
    00000a65: 	andpd	(%rsp), %xmm1
    00000a6a: 	movsd	0x28(%rsp), %xmm6
    00000a70: 	comisd	%xmm1, %xmm6
    00000a74: 	jbe	.Ltmp3840 # Offset: 2676
.Ltmp4025:
    00000a7a: 	addl	$0x1, 0x50(%rsp)
    00000a7f: 	movl	0x50(%rsp), %eax
    00000a83: 	cmpl	%edx, %eax
    00000a85: 	jl	.Ltmp3841 # Offset: 2693
.Ltmp3837:
    00000a87: 	movq	%r12, %rsi
    00000a8a: 	movq	%r15, %rdi
    00000a8d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2701
    00000a92: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a99: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000aa0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000aa7: 	je	.Ltmp3842 # Offset: 2727
.Ltmp4055:
    00000aad: 	movq	-0x20(%rax), %rdi
    00000ab1: 	movq	%rdi, (%rsp)
    00000ab5: 	callq	clock@PLT # Offset: 2741
    00000aba: 	movq	(%rsp), %rdi
    00000abe: 	pxor	%xmm0, %xmm0
    00000ac2: 	movq	%rax, end_time(%rip)
    00000ac9: 	subq	start_time(%rip), %rax
    00000ad0: 	cvtsi2sd	%rax, %xmm0
    00000ad5: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000add: 	callq	_Z13record_resultdPKc # Offset: 2781
    00000ae2: 	movq	0x1a0(%rsp), %rdi
    00000aea: 	cmpq	%r14, %rdi
    00000aed: 	je	.Ltmp3843 # Offset: 2797
    00000aef: 	movq	0x1b0(%rsp), %rax
    00000af7: 	leaq	0x1(%rax), %rsi
    00000afb: 	callq	_ZdlPvm@PLT # Offset: 2811
.Ltmp3843:
    00000b00: 	leaq	DATAat0x38224(%rip), %rdx
    00000b07: 	movq	%r13, %rsi
    00000b0a: 	movq	%r12, %rdi
    00000b0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2829
    00000b12: 	callq	clock@PLT # Offset: 2834
    00000b17: 	movl	iterations(%rip), %edx
    00000b1d: 	movq	%rax, start_time(%rip)
    00000b24: 	testl	%edx, %edx
    00000b26: 	jle	.Ltmp3844 # Offset: 2854
    00000b2c: 	pxor	%xmm4, %xmm4
    00000b30: 	movsd	DATAat0x385d8(%rip), %xmm5
    00000b38: 	movq	DATAat0x38630(%rip), %xmm7
    00000b40: 	movl	$0x0, 0x50(%rsp)
    00000b48: 	movsd	DATAat0x385f8(%rip), %xmm6
    00000b50: 	movsd	%xmm4, 0x20(%rsp)
    00000b56: 	movsd	DATAat0x38600(%rip), %xmm4
    00000b5e: 	movsd	%xmm5, 0x10(%rsp)
    00000b64: 	movaps	%xmm7, (%rsp)
    00000b68: 	movsd	%xmm6, 0x18(%rsp)
    00000b6e: 	movsd	%xmm4, 0x28(%rsp)
    00000b74: 	nopl	(%rax) # Size: 4
.Ltmp3848:
    00000b78: 	movq	%rbp, %rax
    00000b7b: 	pxor	%xmm0, %xmm0
    00000b7f: 	nop # Size: 1
.Ltmp3845:
    00000b80: 	movsd	(%rax), %xmm1
    00000b84: 	addq	$0x10, %rax
    00000b88: 	addsd	%xmm1, %xmm0
    00000b8c: 	movsd	-0x8(%rax), %xmm1
    00000b91: 	addsd	%xmm1, %xmm0
    00000b95: 	cmpq	%rax, %rbx
    00000b98: 	jne	.Ltmp3845 # Offset: 2968
    00000b9a: 	movsd	0x10(%rsp), %xmm2
    00000ba0: 	movapd	(%rsp), %xmm6
    00000ba5: 	movapd	%xmm0, %xmm1
    00000ba9: 	mulsd	init_value(%rip), %xmm2
    00000bb1: 	andpd	%xmm0, %xmm6
    00000bb5: 	comisd	0x18(%rsp), %xmm6
    00000bbb: 	subsd	%xmm2, %xmm1
    00000bbf: 	jbe	.Ltmp3846 # Offset: 3007
    00000bc1: 	divsd	%xmm0, %xmm1
.Ltmp3846:
    00000bc5: 	andpd	(%rsp), %xmm1
    00000bca: 	movsd	0x28(%rsp), %xmm5
    00000bd0: 	comisd	%xmm1, %xmm5
    00000bd4: 	jbe	.Ltmp3847 # Offset: 3028
.Ltmp4024:
    00000bda: 	addl	$0x1, 0x50(%rsp)
    00000bdf: 	movl	0x50(%rsp), %eax
    00000be3: 	cmpl	%edx, %eax
    00000be5: 	jl	.Ltmp3848 # Offset: 3045
.Ltmp3844:
    00000be7: 	movq	%r12, %rsi
    00000bea: 	movq	%r15, %rdi
    00000bed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3053
    00000bf2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bf9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c00: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c07: 	je	.Ltmp3849 # Offset: 3079
.Ltmp4054:
    00000c0d: 	movq	-0x20(%rax), %rdi
    00000c11: 	movq	%rdi, (%rsp)
    00000c15: 	callq	clock@PLT # Offset: 3093
    00000c1a: 	movq	(%rsp), %rdi
    00000c1e: 	pxor	%xmm0, %xmm0
    00000c22: 	movq	%rax, end_time(%rip)
    00000c29: 	subq	start_time(%rip), %rax
    00000c30: 	cvtsi2sd	%rax, %xmm0
    00000c35: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000c3d: 	callq	_Z13record_resultdPKc # Offset: 3133
    00000c42: 	movq	0x1a0(%rsp), %rdi
    00000c4a: 	cmpq	%r14, %rdi
    00000c4d: 	je	.Ltmp3850 # Offset: 3149
    00000c4f: 	movq	0x1b0(%rsp), %rax
    00000c57: 	leaq	0x1(%rax), %rsi
    00000c5b: 	callq	_ZdlPvm@PLT # Offset: 3163
.Ltmp3850:
    00000c60: 	leaq	DATAat0x38266(%rip), %rdx
    00000c67: 	movq	%r13, %rsi
    00000c6a: 	movq	%r12, %rdi
    00000c6d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3181
    00000c72: 	callq	clock@PLT # Offset: 3186
    00000c77: 	movl	iterations(%rip), %edx
    00000c7d: 	movq	%rax, start_time(%rip)
    00000c84: 	testl	%edx, %edx
    00000c86: 	jle	.Ltmp3851 # Offset: 3206
    00000c8c: 	pxor	%xmm5, %xmm5
    00000c90: 	movsd	DATAat0x385d8(%rip), %xmm7
    00000c98: 	movq	DATAat0x38630(%rip), %xmm6
    00000ca0: 	movl	$0x0, 0x50(%rsp)
    00000ca8: 	movsd	DATAat0x385f8(%rip), %xmm4
    00000cb0: 	movsd	%xmm5, 0x20(%rsp)
    00000cb6: 	movsd	DATAat0x38600(%rip), %xmm5
    00000cbe: 	movsd	%xmm7, 0x10(%rsp)
    00000cc4: 	movaps	%xmm6, (%rsp)
    00000cc8: 	movsd	%xmm4, 0x18(%rsp)
    00000cce: 	movsd	%xmm5, 0x28(%rsp)
    00000cd4: 	nopl	(%rax) # Size: 4
.Ltmp3855:
    00000cd8: 	movq	%rbp, %rax
    00000cdb: 	pxor	%xmm1, %xmm1
    00000cdf: 	pxor	%xmm2, %xmm2
    00000ce3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3852:
    00000ce8: 	movapd	(%rax), %xmm3
    00000cec: 	movapd	%xmm2, %xmm0
    00000cf0: 	addq	$0x10, %rax
    00000cf4: 	addpd	%xmm2, %xmm3
    00000cf8: 	subpd	%xmm3, %xmm0
    00000cfc: 	subsd	%xmm0, %xmm1
    00000d00: 	unpckhpd	%xmm0, %xmm0
    00000d04: 	subsd	%xmm0, %xmm1
    00000d08: 	cmpq	%rbx, %rax
    00000d0b: 	jne	.Ltmp3852 # Offset: 3339
    00000d0d: 	movsd	0x20(%rsp), %xmm4
    00000d13: 	movsd	init_value(%rip), %xmm2
    00000d1b: 	movsd	0x10(%rsp), %xmm0
    00000d21: 	movapd	(%rsp), %xmm7
    00000d26: 	addsd	%xmm4, %xmm2
    00000d2a: 	andpd	%xmm1, %xmm7
    00000d2e: 	comisd	0x18(%rsp), %xmm7
    00000d34: 	subsd	%xmm2, %xmm4
    00000d38: 	mulsd	%xmm4, %xmm0
    00000d3c: 	addsd	%xmm1, %xmm0
    00000d40: 	jbe	.Ltmp3853 # Offset: 3392
    00000d42: 	divsd	%xmm1, %xmm0
.Ltmp3853:
    00000d46: 	andpd	(%rsp), %xmm0
    00000d4b: 	movsd	0x28(%rsp), %xmm5
    00000d51: 	comisd	%xmm0, %xmm5
    00000d55: 	jbe	.Ltmp3854 # Offset: 3413
.Ltmp4023:
    00000d5b: 	addl	$0x1, 0x50(%rsp)
    00000d60: 	movl	0x50(%rsp), %eax
    00000d64: 	cmpl	%edx, %eax
    00000d66: 	jl	.Ltmp3855 # Offset: 3430
.Ltmp3851:
    00000d6c: 	movq	%r12, %rsi
    00000d6f: 	movq	%r15, %rdi
    00000d72: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3442
    00000d77: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d7e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d85: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d8c: 	je	.Ltmp3856 # Offset: 3468
.Ltmp4053:
    00000d92: 	movq	-0x20(%rax), %rdi
    00000d96: 	movq	%rdi, (%rsp)
    00000d9a: 	callq	clock@PLT # Offset: 3482
    00000d9f: 	movq	(%rsp), %rdi
    00000da3: 	pxor	%xmm0, %xmm0
    00000da7: 	movq	%rax, end_time(%rip)
    00000dae: 	subq	start_time(%rip), %rax
    00000db5: 	cvtsi2sd	%rax, %xmm0
    00000dba: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000dc2: 	callq	_Z13record_resultdPKc # Offset: 3522
    00000dc7: 	movq	0x1a0(%rsp), %rdi
    00000dcf: 	cmpq	%r14, %rdi
    00000dd2: 	je	.Ltmp3857 # Offset: 3538
    00000dd4: 	movq	0x1b0(%rsp), %rax
    00000ddc: 	leaq	0x1(%rax), %rsi
    00000de0: 	callq	_ZdlPvm@PLT # Offset: 3552
.Ltmp3857:
    00000de5: 	leaq	0x120(%rsp), %rdi
    00000ded: 	leaq	DATAat0x38275(%rip), %rdx
    00000df4: 	movq	%r13, %rsi
    00000df7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3575
    00000dfc: 	movl	iterations(%rip), %esi
    00000e02: 	movq	0x120(%rsp), %rdi
    00000e0a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 3594
    00000e0f: 	leaq	DATAat0x381e2(%rip), %rdx
    00000e16: 	movq	%r13, %rsi
    00000e19: 	movq	%r12, %rdi
    00000e1c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3612
    00000e21: 	callq	clock@PLT # Offset: 3617
    00000e26: 	movq	%r12, %rsi
    00000e29: 	movq	%r15, %rdi
    00000e2c: 	movq	%rax, start_time(%rip)
    00000e33: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3635
    00000e38: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e3f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e46: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e4d: 	je	.Ltmp3858 # Offset: 3661
.Ltmp4052:
    00000e53: 	movq	-0x20(%rax), %rdi
    00000e57: 	movq	%rdi, (%rsp)
    00000e5b: 	callq	clock@PLT # Offset: 3675
    00000e60: 	movq	(%rsp), %rdi
    00000e64: 	pxor	%xmm0, %xmm0
    00000e68: 	movq	%rax, end_time(%rip)
    00000e6f: 	subq	start_time(%rip), %rax
    00000e76: 	cvtsi2sd	%rax, %xmm0
    00000e7b: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000e83: 	callq	_Z13record_resultdPKc # Offset: 3715
    00000e88: 	movq	0x1a0(%rsp), %rdi
    00000e90: 	cmpq	%r14, %rdi
    00000e93: 	je	.Ltmp3859 # Offset: 3731
    00000e95: 	movq	0x1b0(%rsp), %rax
    00000e9d: 	leaq	0x1(%rax), %rsi
    00000ea1: 	callq	_ZdlPvm@PLT # Offset: 3745
.Ltmp3859:
    00000ea6: 	leaq	DATAat0x3828f(%rip), %rdx
    00000ead: 	movq	%r13, %rsi
    00000eb0: 	movq	%r12, %rdi
    00000eb3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3763
    00000eb8: 	callq	clock@PLT # Offset: 3768
    00000ebd: 	movl	iterations(%rip), %edx
    00000ec3: 	movq	%rax, start_time(%rip)
    00000eca: 	testl	%edx, %edx
    00000ecc: 	jle	.Ltmp3860 # Offset: 3788
    00000ed2: 	pxor	%xmm7, %xmm7
    00000ed6: 	movsd	DATAat0x385d8(%rip), %xmm6
    00000ede: 	movq	DATAat0x38630(%rip), %xmm4
    00000ee6: 	movl	$0x0, 0x50(%rsp)
    00000eee: 	movsd	DATAat0x385f8(%rip), %xmm5
    00000ef6: 	movsd	%xmm7, 0x20(%rsp)
    00000efc: 	movsd	DATAat0x38600(%rip), %xmm7
    00000f04: 	movsd	%xmm6, 0x10(%rsp)
    00000f0a: 	movaps	%xmm4, (%rsp)
    00000f0e: 	movsd	%xmm5, 0x18(%rsp)
    00000f14: 	movsd	%xmm7, 0x28(%rsp)
    00000f1a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3864:
    00000f20: 	movq	%rbp, %rax
    00000f23: 	pxor	%xmm0, %xmm0
    00000f27: 	pxor	%xmm3, %xmm3
    00000f2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3861:
    00000f30: 	movapd	(%rax), %xmm1
    00000f34: 	addq	$0x10, %rax
    00000f38: 	mulpd	%xmm3, %xmm1
    00000f3c: 	addsd	%xmm1, %xmm0
    00000f40: 	unpckhpd	%xmm1, %xmm1
    00000f44: 	addsd	%xmm1, %xmm0
    00000f48: 	cmpq	%rbx, %rax
    00000f4b: 	jne	.Ltmp3861 # Offset: 3915
    00000f4d: 	movsd	0x20(%rsp), %xmm2
    00000f53: 	movapd	(%rsp), %xmm4
    00000f58: 	movapd	%xmm0, %xmm1
    00000f5c: 	mulsd	init_value(%rip), %xmm2
    00000f64: 	mulsd	0x10(%rsp), %xmm2
    00000f6a: 	andpd	%xmm0, %xmm4
    00000f6e: 	comisd	0x18(%rsp), %xmm4
    00000f74: 	subsd	%xmm2, %xmm1
    00000f78: 	jbe	.Ltmp3862 # Offset: 3960
    00000f7a: 	divsd	%xmm0, %xmm1
.Ltmp3862:
    00000f7e: 	andpd	(%rsp), %xmm1
    00000f83: 	movsd	0x28(%rsp), %xmm5
    00000f89: 	comisd	%xmm1, %xmm5
    00000f8d: 	jbe	.Ltmp3863 # Offset: 3981
.Ltmp4022:
    00000f93: 	addl	$0x1, 0x50(%rsp)
    00000f98: 	movl	0x50(%rsp), %eax
    00000f9c: 	cmpl	%edx, %eax
    00000f9e: 	jl	.Ltmp3864 # Offset: 3998
.Ltmp3860:
    00000fa0: 	movq	%r12, %rsi
    00000fa3: 	movq	%r15, %rdi
    00000fa6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4006
    00000fab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fb2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fb9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fc0: 	je	.Ltmp3865 # Offset: 4032
.Ltmp4051:
    00000fc6: 	movq	-0x20(%rax), %rdi
    00000fca: 	movq	%rdi, (%rsp)
    00000fce: 	callq	clock@PLT # Offset: 4046
    00000fd3: 	movq	(%rsp), %rdi
    00000fd7: 	pxor	%xmm0, %xmm0
    00000fdb: 	movq	%rax, end_time(%rip)
    00000fe2: 	subq	start_time(%rip), %rax
    00000fe9: 	cvtsi2sd	%rax, %xmm0
    00000fee: 	divsd	DATAat0x385e0(%rip), %xmm0
    00000ff6: 	callq	_Z13record_resultdPKc # Offset: 4086
    00000ffb: 	movq	0x1a0(%rsp), %rdi
    00001003: 	cmpq	%r14, %rdi
    00001006: 	je	.Ltmp3866 # Offset: 4102
    00001008: 	movq	0x1b0(%rsp), %rax
    00001010: 	leaq	0x1(%rax), %rsi
    00001014: 	callq	_ZdlPvm@PLT # Offset: 4116
.Ltmp3866:
    00001019: 	leaq	DATAat0x3829b(%rip), %rdx
    00001020: 	movq	%r13, %rsi
    00001023: 	movq	%r12, %rdi
    00001026: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4134
    0000102b: 	callq	clock@PLT # Offset: 4139
    00001030: 	movl	iterations(%rip), %edx
    00001036: 	movq	%rax, start_time(%rip)
    0000103d: 	testl	%edx, %edx
    0000103f: 	jle	.Ltmp3867 # Offset: 4159
    00001045: 	pxor	%xmm6, %xmm6
    00001049: 	movsd	DATAat0x385d8(%rip), %xmm4
    00001051: 	movq	DATAat0x38630(%rip), %xmm5
    00001059: 	movl	$0x0, 0x50(%rsp)
    00001061: 	movsd	DATAat0x385f8(%rip), %xmm7
    00001069: 	movsd	%xmm6, 0x20(%rsp)
    0000106f: 	movsd	DATAat0x38600(%rip), %xmm6
    00001077: 	movsd	%xmm4, 0x10(%rsp)
    0000107d: 	movaps	%xmm5, (%rsp)
    00001081: 	movsd	%xmm7, 0x18(%rsp)
    00001087: 	movsd	%xmm6, 0x28(%rsp)
    0000108d: 	nopl	(%rax) # Size: 3
.Ltmp3871:
    00001090: 	movq	%rbp, %rax
    00001093: 	pxor	%xmm1, %xmm1
    00001097: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3868:
    000010a0: 	movapd	(%rax), %xmm0
    000010a4: 	addq	$0x10, %rax
    000010a8: 	subpd	%xmm0, %xmm0
    000010ac: 	addsd	%xmm0, %xmm1
    000010b0: 	unpckhpd	%xmm0, %xmm0
    000010b4: 	addsd	%xmm0, %xmm1
    000010b8: 	cmpq	%rax, %rbx
    000010bb: 	jne	.Ltmp3868 # Offset: 4283
    000010bd: 	movsd	init_value(%rip), %xmm0
    000010c5: 	movapd	(%rsp), %xmm5
    000010ca: 	movapd	%xmm1, %xmm2
    000010ce: 	subsd	%xmm0, %xmm0
    000010d2: 	mulsd	0x10(%rsp), %xmm0
    000010d8: 	andpd	%xmm1, %xmm5
    000010dc: 	comisd	0x18(%rsp), %xmm5
    000010e2: 	subsd	%xmm0, %xmm2
    000010e6: 	jbe	.Ltmp3869 # Offset: 4326
    000010e8: 	divsd	%xmm1, %xmm2
.Ltmp3869:
    000010ec: 	andpd	(%rsp), %xmm2
    000010f1: 	movsd	0x28(%rsp), %xmm5
    000010f7: 	comisd	%xmm2, %xmm5
    000010fb: 	jbe	.Ltmp3870 # Offset: 4347
.Ltmp4021:
    00001101: 	addl	$0x1, 0x50(%rsp)
    00001106: 	movl	0x50(%rsp), %eax
    0000110a: 	cmpl	%edx, %eax
    0000110c: 	jl	.Ltmp3871 # Offset: 4364
.Ltmp3867:
    0000110e: 	movq	%r12, %rsi
    00001111: 	movq	%r15, %rdi
    00001114: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4372
    00001119: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001120: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001127: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000112e: 	je	.Ltmp3872 # Offset: 4398
.Ltmp4050:
    00001134: 	movq	-0x20(%rax), %rdi
    00001138: 	movq	%rdi, (%rsp)
    0000113c: 	callq	clock@PLT # Offset: 4412
    00001141: 	movq	(%rsp), %rdi
    00001145: 	pxor	%xmm0, %xmm0
    00001149: 	movq	%rax, end_time(%rip)
    00001150: 	subq	start_time(%rip), %rax
    00001157: 	cvtsi2sd	%rax, %xmm0
    0000115c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001164: 	callq	_Z13record_resultdPKc # Offset: 4452
    00001169: 	movq	0x1a0(%rsp), %rdi
    00001171: 	cmpq	%r14, %rdi
    00001174: 	je	.Ltmp3873 # Offset: 4468
    00001176: 	movq	0x1b0(%rsp), %rax
    0000117e: 	leaq	0x1(%rax), %rsi
    00001182: 	callq	_ZdlPvm@PLT # Offset: 4482
.Ltmp3873:
    00001187: 	leaq	DATAat0x38329(%rip), %rdx
    0000118e: 	movq	%r13, %rsi
    00001191: 	movq	%r12, %rdi
    00001194: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4500
    00001199: 	callq	clock@PLT # Offset: 4505
    0000119e: 	movl	iterations(%rip), %edx
    000011a4: 	movq	%rax, start_time(%rip)
    000011ab: 	testl	%edx, %edx
    000011ad: 	jle	.Ltmp3874 # Offset: 4525
    000011b3: 	pxor	%xmm4, %xmm4
    000011b7: 	movsd	DATAat0x385d8(%rip), %xmm5
    000011bf: 	movq	DATAat0x38630(%rip), %xmm7
    000011c7: 	movl	$0x0, 0x50(%rsp)
    000011cf: 	movsd	DATAat0x385f8(%rip), %xmm6
    000011d7: 	movsd	%xmm4, 0x20(%rsp)
    000011dd: 	movsd	DATAat0x38600(%rip), %xmm4
    000011e5: 	movsd	%xmm5, 0x10(%rsp)
    000011eb: 	movaps	%xmm7, (%rsp)
    000011ef: 	movsd	%xmm6, 0x18(%rsp)
    000011f5: 	movsd	%xmm4, 0x28(%rsp)
    000011fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3878:
    00001200: 	movq	%rbp, %rax
    00001203: 	pxor	%xmm1, %xmm1
    00001207: 	pxor	%xmm3, %xmm3
    0000120b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3875:
    00001210: 	movapd	(%rax), %xmm2
    00001214: 	movapd	%xmm3, %xmm0
    00001218: 	addq	$0x10, %rax
    0000121c: 	addpd	%xmm3, %xmm2
    00001220: 	subpd	%xmm2, %xmm0
    00001224: 	addpd	-0x10(%rax), %xmm0
    00001229: 	addsd	%xmm0, %xmm1
    0000122d: 	unpckhpd	%xmm0, %xmm0
    00001231: 	addsd	%xmm0, %xmm1
    00001235: 	cmpq	%rbx, %rax
    00001238: 	jne	.Ltmp3875 # Offset: 4664
    0000123a: 	movsd	0x20(%rsp), %xmm5
    00001240: 	movsd	init_value(%rip), %xmm2
    00001248: 	movapd	(%rsp), %xmm6
    0000124d: 	movapd	%xmm5, %xmm3
    00001251: 	addsd	%xmm2, %xmm3
    00001255: 	andpd	%xmm1, %xmm6
    00001259: 	comisd	0x18(%rsp), %xmm6
    0000125f: 	subsd	%xmm3, %xmm5
    00001263: 	movapd	%xmm5, %xmm0
    00001267: 	addsd	%xmm2, %xmm0
    0000126b: 	mulsd	0x10(%rsp), %xmm0
    00001271: 	movapd	%xmm1, %xmm2
    00001275: 	subsd	%xmm0, %xmm2
    00001279: 	jbe	.Ltmp3876 # Offset: 4729
    0000127b: 	divsd	%xmm1, %xmm2
.Ltmp3876:
    0000127f: 	andpd	(%rsp), %xmm2
    00001284: 	movsd	0x28(%rsp), %xmm5
    0000128a: 	comisd	%xmm2, %xmm5
    0000128e: 	jbe	.Ltmp3877 # Offset: 4750
.Ltmp4020:
    00001294: 	addl	$0x1, 0x50(%rsp)
    00001299: 	movl	0x50(%rsp), %eax
    0000129d: 	cmpl	%edx, %eax
    0000129f: 	jl	.Ltmp3878 # Offset: 4767
.Ltmp3874:
    000012a5: 	movq	%r12, %rsi
    000012a8: 	movq	%r15, %rdi
    000012ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4779
    000012b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012b7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012c5: 	je	.Ltmp3879 # Offset: 4805
.Ltmp4049:
    000012cb: 	movq	-0x20(%rax), %rdi
    000012cf: 	movq	%rdi, (%rsp)
    000012d3: 	callq	clock@PLT # Offset: 4819
    000012d8: 	movq	(%rsp), %rdi
    000012dc: 	pxor	%xmm0, %xmm0
    000012e0: 	movq	%rax, end_time(%rip)
    000012e7: 	subq	start_time(%rip), %rax
    000012ee: 	cvtsi2sd	%rax, %xmm0
    000012f3: 	divsd	DATAat0x385e0(%rip), %xmm0
    000012fb: 	callq	_Z13record_resultdPKc # Offset: 4859
    00001300: 	movq	0x1a0(%rsp), %rdi
    00001308: 	cmpq	%r14, %rdi
    0000130b: 	je	.Ltmp3880 # Offset: 4875
    0000130d: 	movq	0x1b0(%rsp), %rax
    00001315: 	leaq	0x1(%rax), %rsi
    00001319: 	callq	_ZdlPvm@PLT # Offset: 4889
.Ltmp3880:
    0000131e: 	leaq	DATAat0x38339(%rip), %rdx
    00001325: 	movq	%r13, %rsi
    00001328: 	movq	%r12, %rdi
    0000132b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4907
    00001330: 	movq	%r12, %rdx
    00001333: 	movl	$0x1f40, %esi
    00001338: 	movq	%rbp, %rdi
    0000133b: 	callq	_Z22test_constantSRepeatedId15custom_sub_zeroIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4923
    00001340: 	movq	0x1a0(%rsp), %rdi
    00001348: 	cmpq	%r14, %rdi
    0000134b: 	je	.Ltmp3881 # Offset: 4939
    0000134d: 	movq	0x1b0(%rsp), %rax
    00001355: 	leaq	0x1(%rax), %rsi
    00001359: 	callq	_ZdlPvm@PLT # Offset: 4953
.Ltmp3881:
    0000135e: 	leaq	DATAat0x38351(%rip), %rdx
    00001365: 	movq	%r13, %rsi
    00001368: 	movq	%r12, %rdi
    0000136b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4971
    00001370: 	movq	%r12, %rdx
    00001373: 	movl	$0x1f40, %esi
    00001378: 	movq	%rbp, %rdi
    0000137b: 	callq	_Z22test_constantSRepeatedId20custom_algebra_mixedIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4987
    00001380: 	movq	0x1a0(%rsp), %rdi
    00001388: 	cmpq	%r14, %rdi
    0000138b: 	je	.Ltmp3882 # Offset: 5003
    0000138d: 	movq	0x1b0(%rsp), %rax
    00001395: 	leaq	0x1(%rax), %rsi
    00001399: 	callq	_ZdlPvm@PLT # Offset: 5017
.Ltmp3882:
    0000139e: 	leaq	DATAat0x38369(%rip), %rdx
    000013a5: 	movq	%r13, %rsi
    000013a8: 	movq	%r12, %rdi
    000013ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5035
    000013b0: 	movq	%r12, %rdx
    000013b3: 	movl	$0x1f40, %esi
    000013b8: 	movq	%rbp, %rdi
    000013bb: 	callq	_Z22test_constantSRepeatedId20custom_subtract_selfIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5051
    000013c0: 	movq	0x1a0(%rsp), %rdi
    000013c8: 	cmpq	%r14, %rdi
    000013cb: 	je	.Ltmp3883 # Offset: 5067
    000013cd: 	movq	0x1b0(%rsp), %rax
    000013d5: 	leaq	0x1(%rax), %rsi
    000013d9: 	callq	_ZdlPvm@PLT # Offset: 5081
.Ltmp3883:
    000013de: 	leaq	DATAat0x38381(%rip), %rdx
    000013e5: 	movq	%r13, %rsi
    000013e8: 	movq	%r12, %rdi
    000013eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5099
    000013f0: 	movq	%r12, %rdx
    000013f3: 	movl	$0x1f40, %esi
    000013f8: 	movq	%rbp, %rdi
    000013fb: 	callq	_Z22test_constantSRepeatedId29custom_algebra_mixed_constantIdEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5115
    00001400: 	movq	0x1a0(%rsp), %rdi
    00001408: 	cmpq	%r14, %rdi
    0000140b: 	je	.Ltmp3884 # Offset: 5131
    0000140d: 	movq	0x1b0(%rsp), %rax
    00001415: 	leaq	0x1(%rax), %rsi
    00001419: 	callq	_ZdlPvm@PLT # Offset: 5145
.Ltmp3884:
    0000141e: 	leaq	0x140(%rsp), %rdi
    00001426: 	leaq	DATAat0x384a0(%rip), %rdx
    0000142d: 	movq	%r13, %rsi
    00001430: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5168
    00001435: 	movl	iterations(%rip), %esi
    0000143b: 	movq	0x140(%rsp), %rdi
    00001443: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 5187
    00001448: 	leaq	DATAat0x384c8(%rip), %rdx
    0000144f: 	movq	%r13, %rsi
    00001452: 	movq	%r12, %rdi
    00001455: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5205
    0000145a: 	callq	clock@PLT # Offset: 5210
    0000145f: 	movl	iterations(%rip), %edx
    00001465: 	movq	%rax, start_time(%rip)
    0000146c: 	testl	%edx, %edx
    0000146e: 	jle	.Ltmp3885 # Offset: 5230
    00001474: 	movsd	0x30(%rsp), %xmm0
    0000147a: 	addsd	0x38(%rsp), %xmm0
    00001480: 	pxor	%xmm5, %xmm5
    00001484: 	movl	$0x0, 0x50(%rsp)
    0000148c: 	addsd	0x40(%rsp), %xmm0
    00001492: 	movsd	0x48(%rsp), %xmm6
    00001498: 	movsd	%xmm5, 0x20(%rsp)
    0000149e: 	movsd	DATAat0x385d8(%rip), %xmm7
    000014a6: 	movq	DATAat0x38630(%rip), %xmm4
    000014ae: 	movsd	DATAat0x385f8(%rip), %xmm5
    000014b6: 	addsd	%xmm0, %xmm6
    000014ba: 	movsd	%xmm7, 0x10(%rsp)
    000014c0: 	movsd	DATAat0x38600(%rip), %xmm7
    000014c8: 	movaps	%xmm4, (%rsp)
    000014cc: 	movsd	%xmm7, 0x28(%rsp)
    000014d2: 	movapd	%xmm6, %xmm7
    000014d6: 	movsd	%xmm6, 0x60(%rsp)
    000014dc: 	unpcklpd	%xmm7, %xmm7
    000014e0: 	movsd	%xmm5, 0x18(%rsp)
    000014e6: 	movaps	%xmm7, 0x70(%rsp)
    000014eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3889:
    000014f0: 	movapd	0x70(%rsp), %xmm3
    000014f6: 	movq	%rbp, %rax
    000014f9: 	pxor	%xmm0, %xmm0
    000014fd: 	nopl	(%rax) # Size: 3
.Ltmp3886:
    00001500: 	movapd	(%rax), %xmm1
    00001504: 	addq	$0x10, %rax
    00001508: 	mulpd	%xmm3, %xmm1
    0000150c: 	addsd	%xmm1, %xmm0
    00001510: 	unpckhpd	%xmm1, %xmm1
    00001514: 	addsd	%xmm1, %xmm0
    00001518: 	cmpq	%rbx, %rax
    0000151b: 	jne	.Ltmp3886 # Offset: 5403
    0000151d: 	movsd	0x60(%rsp), %xmm2
    00001523: 	movapd	(%rsp), %xmm7
    00001528: 	movapd	%xmm0, %xmm1
    0000152c: 	mulsd	init_value(%rip), %xmm2
    00001534: 	mulsd	0x10(%rsp), %xmm2
    0000153a: 	andpd	%xmm0, %xmm7
    0000153e: 	comisd	0x18(%rsp), %xmm7
    00001544: 	subsd	%xmm2, %xmm1
    00001548: 	jbe	.Ltmp3887 # Offset: 5448
    0000154a: 	divsd	%xmm0, %xmm1
.Ltmp3887:
    0000154e: 	andpd	(%rsp), %xmm1
    00001553: 	movsd	0x28(%rsp), %xmm5
    00001559: 	comisd	%xmm1, %xmm5
    0000155d: 	jbe	.Ltmp3888 # Offset: 5469
.Ltmp4019:
    00001563: 	addl	$0x1, 0x50(%rsp)
    00001568: 	movl	0x50(%rsp), %eax
    0000156c: 	cmpl	%edx, %eax
    0000156e: 	jl	.Ltmp3889 # Offset: 5486
.Ltmp3885:
    00001570: 	movq	%r12, %rsi
    00001573: 	movq	%r15, %rdi
    00001576: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5494
    0000157b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001582: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001589: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001590: 	je	.Ltmp3890 # Offset: 5520
.Ltmp4048:
    00001596: 	movq	-0x20(%rax), %rdi
    0000159a: 	movq	%rdi, (%rsp)
    0000159e: 	callq	clock@PLT # Offset: 5534
    000015a3: 	movq	(%rsp), %rdi
    000015a7: 	pxor	%xmm0, %xmm0
    000015ab: 	movq	%rax, end_time(%rip)
    000015b2: 	subq	start_time(%rip), %rax
    000015b9: 	cvtsi2sd	%rax, %xmm0
    000015be: 	divsd	DATAat0x385e0(%rip), %xmm0
    000015c6: 	callq	_Z13record_resultdPKc # Offset: 5574
    000015cb: 	movq	0x1a0(%rsp), %rdi
    000015d3: 	cmpq	%r14, %rdi
    000015d6: 	je	.Ltmp3891 # Offset: 5590
    000015d8: 	movq	0x1b0(%rsp), %rax
    000015e0: 	leaq	0x1(%rax), %rsi
    000015e4: 	callq	_ZdlPvm@PLT # Offset: 5604
.Ltmp3891:
    000015e9: 	leaq	DATAat0x384e8(%rip), %rdx
    000015f0: 	movq	%r13, %rsi
    000015f3: 	movq	%r12, %rdi
    000015f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5622
    000015fb: 	callq	clock@PLT # Offset: 5627
    00001600: 	movl	iterations(%rip), %edx
    00001606: 	movq	%rax, start_time(%rip)
    0000160d: 	testl	%edx, %edx
    0000160f: 	jle	.Ltmp3892 # Offset: 5647
    00001615: 	movsd	0x30(%rsp), %xmm0
    0000161b: 	addsd	0x38(%rsp), %xmm0
    00001621: 	pxor	%xmm4, %xmm4
    00001625: 	movl	$0x0, 0x50(%rsp)
    0000162d: 	addsd	0x40(%rsp), %xmm0
    00001633: 	movsd	0x48(%rsp), %xmm7
    00001639: 	movsd	%xmm4, 0x20(%rsp)
    0000163f: 	movsd	DATAat0x385d8(%rip), %xmm5
    00001647: 	movq	DATAat0x38630(%rip), %xmm6
    0000164f: 	movsd	DATAat0x385f8(%rip), %xmm4
    00001657: 	addsd	%xmm0, %xmm7
    0000165b: 	movsd	%xmm5, 0x10(%rsp)
    00001661: 	movsd	DATAat0x38600(%rip), %xmm5
    00001669: 	movaps	%xmm6, (%rsp)
    0000166d: 	movsd	%xmm5, 0x28(%rsp)
    00001673: 	movapd	%xmm7, %xmm5
    00001677: 	movsd	%xmm7, 0x60(%rsp)
    0000167d: 	unpcklpd	%xmm5, %xmm5
    00001681: 	movsd	%xmm4, 0x18(%rsp)
    00001687: 	movaps	%xmm5, 0x70(%rsp)
    0000168c: 	nopl	(%rax) # Size: 4
.Ltmp3896:
    00001690: 	movapd	0x70(%rsp), %xmm3
    00001696: 	movq	%rbp, %rax
    00001699: 	pxor	%xmm0, %xmm0
    0000169d: 	nopl	(%rax) # Size: 3
.Ltmp3893:
    000016a0: 	movapd	(%rax), %xmm1
    000016a4: 	addq	$0x10, %rax
    000016a8: 	mulpd	%xmm3, %xmm1
    000016ac: 	addsd	%xmm1, %xmm0
    000016b0: 	unpckhpd	%xmm1, %xmm1
    000016b4: 	addsd	%xmm1, %xmm0
    000016b8: 	cmpq	%rbx, %rax
    000016bb: 	jne	.Ltmp3893 # Offset: 5819
    000016bd: 	movsd	0x60(%rsp), %xmm2
    000016c3: 	movapd	(%rsp), %xmm4
    000016c8: 	movapd	%xmm0, %xmm1
    000016cc: 	mulsd	init_value(%rip), %xmm2
    000016d4: 	mulsd	0x10(%rsp), %xmm2
    000016da: 	andpd	%xmm0, %xmm4
    000016de: 	comisd	0x18(%rsp), %xmm4
    000016e4: 	subsd	%xmm2, %xmm1
    000016e8: 	jbe	.Ltmp3894 # Offset: 5864
    000016ea: 	divsd	%xmm0, %xmm1
.Ltmp3894:
    000016ee: 	andpd	(%rsp), %xmm1
    000016f3: 	movsd	0x28(%rsp), %xmm5
    000016f9: 	comisd	%xmm1, %xmm5
    000016fd: 	jbe	.Ltmp3895 # Offset: 5885
.Ltmp4018:
    00001703: 	addl	$0x1, 0x50(%rsp)
    00001708: 	movl	0x50(%rsp), %eax
    0000170c: 	cmpl	%edx, %eax
    0000170e: 	jl	.Ltmp3896 # Offset: 5902
.Ltmp3892:
    00001710: 	movq	%r12, %rsi
    00001713: 	movq	%r15, %rdi
    00001716: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5910
    0000171b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001722: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001729: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001730: 	je	.Ltmp3897 # Offset: 5936
.Ltmp4047:
    00001736: 	movq	-0x20(%rax), %rdi
    0000173a: 	movq	%rdi, (%rsp)
    0000173e: 	callq	clock@PLT # Offset: 5950
    00001743: 	movq	(%rsp), %rdi
    00001747: 	pxor	%xmm0, %xmm0
    0000174b: 	movq	%rax, end_time(%rip)
    00001752: 	subq	start_time(%rip), %rax
    00001759: 	cvtsi2sd	%rax, %xmm0
    0000175e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001766: 	callq	_Z13record_resultdPKc # Offset: 5990
    0000176b: 	movq	0x1a0(%rsp), %rdi
    00001773: 	cmpq	%r14, %rdi
    00001776: 	je	.Ltmp3898 # Offset: 6006
    00001778: 	movq	0x1b0(%rsp), %rax
    00001780: 	leaq	0x1(%rax), %rsi
    00001784: 	callq	_ZdlPvm@PLT # Offset: 6020
.Ltmp3898:
    00001789: 	leaq	DATAat0x38508(%rip), %rdx
    00001790: 	movq	%r13, %rsi
    00001793: 	movq	%r12, %rdi
    00001796: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6038
    0000179b: 	callq	clock@PLT # Offset: 6043
    000017a0: 	movl	iterations(%rip), %edx
    000017a6: 	movq	%rax, start_time(%rip)
    000017ad: 	testl	%edx, %edx
    000017af: 	jle	.Ltmp3899 # Offset: 6063
    000017b5: 	movsd	0x30(%rsp), %xmm0
    000017bb: 	subsd	0x38(%rsp), %xmm0
    000017c1: 	pxor	%xmm4, %xmm4
    000017c5: 	movl	$0x0, 0x50(%rsp)
    000017cd: 	addsd	0x40(%rsp), %xmm0
    000017d3: 	movsd	DATAat0x385d8(%rip), %xmm5
    000017db: 	movsd	%xmm4, 0x20(%rsp)
    000017e1: 	movsd	DATAat0x385f8(%rip), %xmm4
    000017e9: 	movq	DATAat0x38630(%rip), %xmm6
    000017f1: 	movsd	%xmm5, 0x10(%rsp)
    000017f7: 	movsd	DATAat0x38600(%rip), %xmm5
    000017ff: 	movapd	%xmm0, %xmm7
    00001803: 	subsd	0x48(%rsp), %xmm7
    00001809: 	movsd	%xmm4, 0x18(%rsp)
    0000180f: 	movaps	%xmm6, (%rsp)
    00001813: 	movsd	%xmm5, 0x28(%rsp)
    00001819: 	movapd	%xmm7, %xmm4
    0000181d: 	movsd	%xmm7, 0x60(%rsp)
    00001823: 	unpcklpd	%xmm4, %xmm4
    00001827: 	movaps	%xmm4, 0x70(%rsp)
    0000182c: 	nopl	(%rax) # Size: 4
.Ltmp3903:
    00001830: 	movapd	0x70(%rsp), %xmm3
    00001836: 	movq	%rbp, %rax
    00001839: 	pxor	%xmm0, %xmm0
    0000183d: 	nopl	(%rax) # Size: 3
.Ltmp3900:
    00001840: 	movapd	(%rax), %xmm1
    00001844: 	addq	$0x10, %rax
    00001848: 	mulpd	%xmm3, %xmm1
    0000184c: 	addsd	%xmm1, %xmm0
    00001850: 	unpckhpd	%xmm1, %xmm1
    00001854: 	addsd	%xmm1, %xmm0
    00001858: 	cmpq	%rax, %rbx
    0000185b: 	jne	.Ltmp3900 # Offset: 6235
    0000185d: 	movsd	0x60(%rsp), %xmm2
    00001863: 	movapd	(%rsp), %xmm5
    00001868: 	movapd	%xmm0, %xmm1
    0000186c: 	mulsd	init_value(%rip), %xmm2
    00001874: 	mulsd	0x10(%rsp), %xmm2
    0000187a: 	andpd	%xmm0, %xmm5
    0000187e: 	comisd	0x18(%rsp), %xmm5
    00001884: 	subsd	%xmm2, %xmm1
    00001888: 	jbe	.Ltmp3901 # Offset: 6280
    0000188a: 	divsd	%xmm0, %xmm1
.Ltmp3901:
    0000188e: 	andpd	(%rsp), %xmm1
    00001893: 	movsd	0x28(%rsp), %xmm5
    00001899: 	comisd	%xmm1, %xmm5
    0000189d: 	jbe	.Ltmp3902 # Offset: 6301
.Ltmp4017:
    000018a3: 	addl	$0x1, 0x50(%rsp)
    000018a8: 	movl	0x50(%rsp), %eax
    000018ac: 	cmpl	%edx, %eax
    000018ae: 	jl	.Ltmp3903 # Offset: 6318
.Ltmp3899:
    000018b0: 	movq	%r12, %rsi
    000018b3: 	movq	%r15, %rdi
    000018b6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6326
    000018bb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018c9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018d0: 	je	.Ltmp3904 # Offset: 6352
.Ltmp4046:
    000018d6: 	movq	-0x20(%rax), %rdi
    000018da: 	movq	%rdi, (%rsp)
    000018de: 	callq	clock@PLT # Offset: 6366
    000018e3: 	movq	(%rsp), %rdi
    000018e7: 	pxor	%xmm0, %xmm0
    000018eb: 	movq	%rax, end_time(%rip)
    000018f2: 	subq	start_time(%rip), %rax
    000018f9: 	cvtsi2sd	%rax, %xmm0
    000018fe: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001906: 	callq	_Z13record_resultdPKc # Offset: 6406
    0000190b: 	movq	0x1a0(%rsp), %rdi
    00001913: 	cmpq	%r14, %rdi
    00001916: 	je	.Ltmp3905 # Offset: 6422
    00001918: 	movq	0x1b0(%rsp), %rax
    00001920: 	leaq	0x1(%rax), %rsi
    00001924: 	callq	_ZdlPvm@PLT # Offset: 6436
.Ltmp3905:
    00001929: 	leaq	DATAat0x3839a(%rip), %rdx
    00001930: 	movq	%r13, %rsi
    00001933: 	movq	%r12, %rdi
    00001936: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6454
    0000193b: 	callq	clock@PLT # Offset: 6459
    00001940: 	movl	iterations(%rip), %edx
    00001946: 	movq	%rax, start_time(%rip)
    0000194d: 	testl	%edx, %edx
    0000194f: 	jle	.Ltmp3906 # Offset: 6479
    00001955: 	pxor	%xmm7, %xmm7
    00001959: 	movsd	DATAat0x385f8(%rip), %xmm4
    00001961: 	movsd	DATAat0x38600(%rip), %xmm5
    00001969: 	movl	$0x0, 0x90(%rsp)
    00001974: 	movsd	%xmm7, 0x20(%rsp)
    0000197a: 	movsd	DATAat0x385d8(%rip), %xmm7
    00001982: 	movq	DATAat0x38630(%rip), %xmm6
    0000198a: 	movsd	%xmm4, 0x18(%rsp)
    00001990: 	movsd	0x40(%rsp), %xmm4
    00001996: 	movsd	%xmm7, 0x10(%rsp)
    0000199c: 	movsd	0x30(%rsp), %xmm7
    000019a2: 	movsd	%xmm5, 0x28(%rsp)
    000019a8: 	movsd	0x38(%rsp), %xmm5
    000019ae: 	unpcklpd	%xmm4, %xmm4
    000019b2: 	unpcklpd	%xmm7, %xmm7
    000019b6: 	movaps	%xmm6, (%rsp)
    000019ba: 	movaps	%xmm7, 0x80(%rsp)
    000019c2: 	movsd	0x48(%rsp), %xmm7
    000019c8: 	unpcklpd	%xmm5, %xmm5
    000019cc: 	movaps	%xmm5, 0x50(%rsp)
    000019d1: 	unpcklpd	%xmm7, %xmm7
    000019d5: 	movaps	%xmm4, 0x60(%rsp)
    000019da: 	movaps	%xmm7, 0x70(%rsp)
    000019df: 	nop # Size: 1
.Ltmp3910:
    000019e0: 	movapd	0x50(%rsp), %xmm4
    000019e6: 	movq	%rbp, %rax
    000019e9: 	movapd	0x60(%rsp), %xmm5
    000019ef: 	pxor	%xmm2, %xmm2
    000019f3: 	movapd	0x80(%rsp), %xmm7
    000019fc: 	movapd	0x70(%rsp), %xmm6
    00001a02: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3907:
    00001a08: 	movapd	(%rax), %xmm1
    00001a0c: 	movapd	%xmm4, %xmm0
    00001a10: 	movapd	%xmm7, %xmm3
    00001a14: 	addq	$0x10, %rax
    00001a18: 	mulpd	%xmm1, %xmm3
    00001a1c: 	mulpd	%xmm1, %xmm0
    00001a20: 	addpd	%xmm3, %xmm0
    00001a24: 	movapd	%xmm5, %xmm3
    00001a28: 	mulpd	%xmm1, %xmm3
    00001a2c: 	mulpd	%xmm6, %xmm1
    00001a30: 	addpd	%xmm3, %xmm0
    00001a34: 	addpd	%xmm1, %xmm0
    00001a38: 	addsd	%xmm0, %xmm2
    00001a3c: 	unpckhpd	%xmm0, %xmm0
    00001a40: 	addsd	%xmm0, %xmm2
    00001a44: 	cmpq	%rbx, %rax
    00001a47: 	jne	.Ltmp3907 # Offset: 6727
    00001a49: 	movsd	init_value(%rip), %xmm1
    00001a51: 	movsd	0x30(%rsp), %xmm0
    00001a57: 	movsd	0x38(%rsp), %xmm3
    00001a5d: 	movapd	(%rsp), %xmm6
    00001a62: 	mulsd	%xmm1, %xmm0
    00001a66: 	mulsd	%xmm1, %xmm3
    00001a6a: 	andpd	%xmm2, %xmm6
    00001a6e: 	comisd	0x18(%rsp), %xmm6
    00001a74: 	addsd	%xmm3, %xmm0
    00001a78: 	movsd	0x40(%rsp), %xmm3
    00001a7e: 	mulsd	%xmm1, %xmm3
    00001a82: 	mulsd	0x48(%rsp), %xmm1
    00001a88: 	addsd	%xmm3, %xmm0
    00001a8c: 	addsd	%xmm1, %xmm0
    00001a90: 	mulsd	0x10(%rsp), %xmm0
    00001a96: 	movapd	%xmm2, %xmm1
    00001a9a: 	subsd	%xmm0, %xmm1
    00001a9e: 	jbe	.Ltmp3908 # Offset: 6814
    00001aa0: 	divsd	%xmm2, %xmm1
.Ltmp3908:
    00001aa4: 	andpd	(%rsp), %xmm1
    00001aa9: 	movsd	0x28(%rsp), %xmm6
    00001aaf: 	comisd	%xmm1, %xmm6
    00001ab3: 	jbe	.Ltmp3909 # Offset: 6835
.Ltmp4016:
    00001ab9: 	addl	$0x1, 0x90(%rsp)
    00001ac1: 	movl	0x90(%rsp), %eax
    00001ac8: 	cmpl	%edx, %eax
    00001aca: 	jl	.Ltmp3910 # Offset: 6858
.Ltmp3906:
    00001ad0: 	movq	%r12, %rsi
    00001ad3: 	movq	%r15, %rdi
    00001ad6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6870
    00001adb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ae2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ae9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001af0: 	je	.Ltmp3911 # Offset: 6896
.Ltmp4045:
    00001af6: 	movq	-0x20(%rax), %rdi
    00001afa: 	movq	%rdi, (%rsp)
    00001afe: 	callq	clock@PLT # Offset: 6910
    00001b03: 	movq	(%rsp), %rdi
    00001b07: 	pxor	%xmm0, %xmm0
    00001b0b: 	movq	%rax, end_time(%rip)
    00001b12: 	subq	start_time(%rip), %rax
    00001b19: 	cvtsi2sd	%rax, %xmm0
    00001b1e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001b26: 	callq	_Z13record_resultdPKc # Offset: 6950
    00001b2b: 	movq	0x1a0(%rsp), %rdi
    00001b33: 	cmpq	%r14, %rdi
    00001b36: 	je	.Ltmp3912 # Offset: 6966
    00001b38: 	movq	0x1b0(%rsp), %rax
    00001b40: 	leaq	0x1(%rax), %rsi
    00001b44: 	callq	_ZdlPvm@PLT # Offset: 6980
.Ltmp3912:
    00001b49: 	leaq	DATAat0x383b1(%rip), %rdx
    00001b50: 	movq	%r13, %rsi
    00001b53: 	movq	%r12, %rdi
    00001b56: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6998
    00001b5b: 	callq	clock@PLT # Offset: 7003
    00001b60: 	movl	iterations(%rip), %edx
    00001b66: 	movq	%rax, start_time(%rip)
    00001b6d: 	testl	%edx, %edx
    00001b6f: 	jle	.Ltmp3913 # Offset: 7023
    00001b75: 	pxor	%xmm7, %xmm7
    00001b79: 	movsd	DATAat0x385d8(%rip), %xmm6
    00001b81: 	movq	DATAat0x38630(%rip), %xmm4
    00001b89: 	movl	$0x0, 0x90(%rsp)
    00001b94: 	movsd	DATAat0x385f8(%rip), %xmm5
    00001b9c: 	movsd	%xmm7, 0x20(%rsp)
    00001ba2: 	movsd	DATAat0x38600(%rip), %xmm7
    00001baa: 	movsd	%xmm6, 0x10(%rsp)
    00001bb0: 	movsd	0x38(%rsp), %xmm6
    00001bb6: 	movaps	%xmm4, (%rsp)
    00001bba: 	movsd	0x40(%rsp), %xmm4
    00001bc0: 	movsd	%xmm5, 0x18(%rsp)
    00001bc6: 	movsd	0x30(%rsp), %xmm5
    00001bcc: 	unpcklpd	%xmm6, %xmm6
    00001bd0: 	movsd	%xmm7, 0x28(%rsp)
    00001bd6: 	movsd	0x48(%rsp), %xmm7
    00001bdc: 	unpcklpd	%xmm4, %xmm4
    00001be0: 	unpcklpd	%xmm5, %xmm5
    00001be4: 	movaps	%xmm6, 0x50(%rsp)
    00001be9: 	unpcklpd	%xmm7, %xmm7
    00001bed: 	movaps	%xmm5, 0x80(%rsp)
    00001bf5: 	movaps	%xmm4, 0x60(%rsp)
    00001bfa: 	movaps	%xmm7, 0x70(%rsp)
    00001bff: 	nop # Size: 1
.Ltmp3917:
    00001c00: 	movapd	0x50(%rsp), %xmm4
    00001c06: 	movq	%rbp, %rax
    00001c09: 	movapd	0x60(%rsp), %xmm5
    00001c0f: 	pxor	%xmm2, %xmm2
    00001c13: 	movapd	0x80(%rsp), %xmm7
    00001c1c: 	movapd	0x70(%rsp), %xmm6
    00001c22: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3914:
    00001c28: 	movapd	(%rax), %xmm1
    00001c2c: 	movapd	%xmm4, %xmm0
    00001c30: 	movapd	%xmm7, %xmm3
    00001c34: 	addq	$0x10, %rax
    00001c38: 	mulpd	%xmm1, %xmm3
    00001c3c: 	mulpd	%xmm1, %xmm0
    00001c40: 	addpd	%xmm3, %xmm0
    00001c44: 	movapd	%xmm5, %xmm3
    00001c48: 	mulpd	%xmm1, %xmm3
    00001c4c: 	mulpd	%xmm6, %xmm1
    00001c50: 	addpd	%xmm3, %xmm0
    00001c54: 	addpd	%xmm1, %xmm0
    00001c58: 	addsd	%xmm0, %xmm2
    00001c5c: 	unpckhpd	%xmm0, %xmm0
    00001c60: 	addsd	%xmm0, %xmm2
    00001c64: 	cmpq	%rax, %rbx
    00001c67: 	jne	.Ltmp3914 # Offset: 7271
    00001c69: 	movsd	init_value(%rip), %xmm1
    00001c71: 	movsd	0x30(%rsp), %xmm0
    00001c77: 	movsd	0x38(%rsp), %xmm3
    00001c7d: 	movapd	(%rsp), %xmm7
    00001c82: 	mulsd	%xmm1, %xmm0
    00001c86: 	mulsd	%xmm1, %xmm3
    00001c8a: 	andpd	%xmm2, %xmm7
    00001c8e: 	comisd	0x18(%rsp), %xmm7
    00001c94: 	addsd	%xmm3, %xmm0
    00001c98: 	movsd	0x40(%rsp), %xmm3
    00001c9e: 	mulsd	%xmm1, %xmm3
    00001ca2: 	mulsd	0x48(%rsp), %xmm1
    00001ca8: 	addsd	%xmm3, %xmm0
    00001cac: 	addsd	%xmm1, %xmm0
    00001cb0: 	mulsd	0x10(%rsp), %xmm0
    00001cb6: 	movapd	%xmm2, %xmm1
    00001cba: 	subsd	%xmm0, %xmm1
    00001cbe: 	jbe	.Ltmp3915 # Offset: 7358
    00001cc0: 	divsd	%xmm2, %xmm1
.Ltmp3915:
    00001cc4: 	andpd	(%rsp), %xmm1
    00001cc9: 	movsd	0x28(%rsp), %xmm7
    00001ccf: 	comisd	%xmm1, %xmm7
    00001cd3: 	jbe	.Ltmp3916 # Offset: 7379
.Ltmp4015:
    00001cd9: 	addl	$0x1, 0x90(%rsp)
    00001ce1: 	movl	0x90(%rsp), %eax
    00001ce8: 	cmpl	%edx, %eax
    00001cea: 	jl	.Ltmp3917 # Offset: 7402
.Ltmp3913:
    00001cf0: 	movq	%r12, %rsi
    00001cf3: 	movq	%r15, %rdi
    00001cf6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7414
    00001cfb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d02: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d09: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d10: 	je	.Ltmp3918 # Offset: 7440
.Ltmp4044:
    00001d16: 	movq	-0x20(%rax), %rdi
    00001d1a: 	movq	%rdi, (%rsp)
    00001d1e: 	callq	clock@PLT # Offset: 7454
    00001d23: 	movq	(%rsp), %rdi
    00001d27: 	pxor	%xmm0, %xmm0
    00001d2b: 	movq	%rax, end_time(%rip)
    00001d32: 	subq	start_time(%rip), %rax
    00001d39: 	cvtsi2sd	%rax, %xmm0
    00001d3e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001d46: 	callq	_Z13record_resultdPKc # Offset: 7494
    00001d4b: 	movq	0x1a0(%rsp), %rdi
    00001d53: 	cmpq	%r14, %rdi
    00001d56: 	je	.Ltmp3919 # Offset: 7510
    00001d58: 	movq	0x1b0(%rsp), %rax
    00001d60: 	leaq	0x1(%rax), %rsi
    00001d64: 	callq	_ZdlPvm@PLT # Offset: 7524
.Ltmp3919:
    00001d69: 	leaq	DATAat0x383c9(%rip), %rdx
    00001d70: 	movq	%r13, %rsi
    00001d73: 	movq	%r12, %rdi
    00001d76: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7542
    00001d7b: 	callq	clock@PLT # Offset: 7547
    00001d80: 	movl	iterations(%rip), %edx
    00001d86: 	movq	%rax, start_time(%rip)
    00001d8d: 	testl	%edx, %edx
    00001d8f: 	jle	.Ltmp3920 # Offset: 7567
    00001d95: 	pxor	%xmm6, %xmm6
    00001d99: 	movsd	DATAat0x385d8(%rip), %xmm4
    00001da1: 	movq	DATAat0x38630(%rip), %xmm5
    00001da9: 	movl	$0x0, 0x90(%rsp)
    00001db4: 	movsd	DATAat0x385f8(%rip), %xmm7
    00001dbc: 	movsd	%xmm6, 0x20(%rsp)
    00001dc2: 	movsd	DATAat0x38600(%rip), %xmm6
    00001dca: 	movsd	%xmm4, 0x10(%rsp)
    00001dd0: 	movsd	0x40(%rsp), %xmm4
    00001dd6: 	movaps	%xmm5, (%rsp)
    00001dda: 	movsd	0x30(%rsp), %xmm5
    00001de0: 	movsd	%xmm7, 0x18(%rsp)
    00001de6: 	movsd	0x48(%rsp), %xmm7
    00001dec: 	unpcklpd	%xmm4, %xmm4
    00001df0: 	movsd	%xmm6, 0x28(%rsp)
    00001df6: 	movsd	0x38(%rsp), %xmm6
    00001dfc: 	unpcklpd	%xmm5, %xmm5
    00001e00: 	unpcklpd	%xmm7, %xmm7
    00001e04: 	movaps	%xmm5, 0x80(%rsp)
    00001e0c: 	unpcklpd	%xmm6, %xmm6
    00001e10: 	movaps	%xmm4, 0x60(%rsp)
    00001e15: 	movaps	%xmm6, 0x50(%rsp)
    00001e1a: 	movaps	%xmm7, 0x70(%rsp)
    00001e1f: 	nop # Size: 1
.Ltmp3924:
    00001e20: 	movapd	0x50(%rsp), %xmm4
    00001e26: 	movq	%rbp, %rax
    00001e29: 	movapd	0x60(%rsp), %xmm5
    00001e2f: 	pxor	%xmm2, %xmm2
    00001e33: 	movapd	0x80(%rsp), %xmm7
    00001e3c: 	movapd	0x70(%rsp), %xmm6
    00001e42: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3921:
    00001e48: 	movapd	(%rax), %xmm1
    00001e4c: 	movapd	%xmm7, %xmm0
    00001e50: 	movapd	%xmm4, %xmm3
    00001e54: 	addq	$0x10, %rax
    00001e58: 	mulpd	%xmm1, %xmm3
    00001e5c: 	mulpd	%xmm1, %xmm0
    00001e60: 	subpd	%xmm3, %xmm0
    00001e64: 	movapd	%xmm5, %xmm3
    00001e68: 	mulpd	%xmm1, %xmm3
    00001e6c: 	mulpd	%xmm6, %xmm1
    00001e70: 	addpd	%xmm3, %xmm0
    00001e74: 	subpd	%xmm1, %xmm0
    00001e78: 	addsd	%xmm0, %xmm2
    00001e7c: 	unpckhpd	%xmm0, %xmm0
    00001e80: 	addsd	%xmm0, %xmm2
    00001e84: 	cmpq	%rax, %rbx
    00001e87: 	jne	.Ltmp3921 # Offset: 7815
    00001e89: 	movsd	init_value(%rip), %xmm1
    00001e91: 	movsd	0x30(%rsp), %xmm0
    00001e97: 	movsd	0x38(%rsp), %xmm3
    00001e9d: 	movapd	(%rsp), %xmm4
    00001ea2: 	mulsd	%xmm1, %xmm0
    00001ea6: 	mulsd	%xmm1, %xmm3
    00001eaa: 	andpd	%xmm2, %xmm4
    00001eae: 	comisd	0x18(%rsp), %xmm4
    00001eb4: 	subsd	%xmm3, %xmm0
    00001eb8: 	movsd	0x40(%rsp), %xmm3
    00001ebe: 	mulsd	%xmm1, %xmm3
    00001ec2: 	mulsd	0x48(%rsp), %xmm1
    00001ec8: 	addsd	%xmm3, %xmm0
    00001ecc: 	subsd	%xmm1, %xmm0
    00001ed0: 	mulsd	0x10(%rsp), %xmm0
    00001ed6: 	movapd	%xmm2, %xmm1
    00001eda: 	subsd	%xmm0, %xmm1
    00001ede: 	jbe	.Ltmp3922 # Offset: 7902
    00001ee0: 	divsd	%xmm2, %xmm1
.Ltmp3922:
    00001ee4: 	andpd	(%rsp), %xmm1
    00001ee9: 	movsd	0x28(%rsp), %xmm4
    00001eef: 	comisd	%xmm1, %xmm4
    00001ef3: 	jbe	.Ltmp3923 # Offset: 7923
.Ltmp4014:
    00001ef9: 	addl	$0x1, 0x90(%rsp)
    00001f01: 	movl	0x90(%rsp), %eax
    00001f08: 	cmpl	%edx, %eax
    00001f0a: 	jl	.Ltmp3924 # Offset: 7946
.Ltmp3920:
    00001f10: 	movq	%r12, %rsi
    00001f13: 	movq	%r15, %rdi
    00001f16: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7958
    00001f1b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f22: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f29: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f30: 	je	.Ltmp3925 # Offset: 7984
.Ltmp4043:
    00001f36: 	movq	-0x20(%rax), %rdi
    00001f3a: 	movq	%rdi, (%rsp)
    00001f3e: 	callq	clock@PLT # Offset: 7998
    00001f43: 	movq	(%rsp), %rdi
    00001f47: 	pxor	%xmm0, %xmm0
    00001f4b: 	movq	%rax, end_time(%rip)
    00001f52: 	subq	start_time(%rip), %rax
    00001f59: 	cvtsi2sd	%rax, %xmm0
    00001f5e: 	divsd	DATAat0x385e0(%rip), %xmm0
    00001f66: 	callq	_Z13record_resultdPKc # Offset: 8038
    00001f6b: 	movq	0x1a0(%rsp), %rdi
    00001f73: 	cmpq	%r14, %rdi
    00001f76: 	je	.Ltmp3926 # Offset: 8054
    00001f78: 	movq	0x1b0(%rsp), %rax
    00001f80: 	leaq	0x1(%rax), %rsi
    00001f84: 	callq	_ZdlPvm@PLT # Offset: 8068
.Ltmp3926:
    00001f89: 	leaq	DATAat0x38528(%rip), %rdx
    00001f90: 	movq	%r13, %rsi
    00001f93: 	movq	%r12, %rdi
    00001f96: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8086
    00001f9b: 	callq	clock@PLT # Offset: 8091
    00001fa0: 	movl	iterations(%rip), %edx
    00001fa6: 	movq	%rax, start_time(%rip)
    00001fad: 	testl	%edx, %edx
    00001faf: 	jle	.Ltmp3927 # Offset: 8111
    00001fb5: 	movsd	0x38(%rsp), %xmm0
    00001fbb: 	addsd	0x40(%rsp), %xmm0
    00001fc1: 	pxor	%xmm7, %xmm7
    00001fc5: 	movl	$0x0, 0x50(%rsp)
    00001fcd: 	movsd	0x48(%rsp), %xmm4
    00001fd3: 	movsd	DATAat0x385d8(%rip), %xmm6
    00001fdb: 	movsd	%xmm7, 0x20(%rsp)
    00001fe1: 	movq	DATAat0x38630(%rip), %xmm5
    00001fe9: 	movsd	DATAat0x385f8(%rip), %xmm7
    00001ff1: 	addsd	%xmm0, %xmm4
    00001ff5: 	movsd	%xmm6, 0x10(%rsp)
    00001ffb: 	movsd	DATAat0x38600(%rip), %xmm6
    00002003: 	movaps	%xmm5, (%rsp)
    00002007: 	movsd	0x30(%rsp), %xmm5
    0000200d: 	movsd	%xmm6, 0x28(%rsp)
    00002013: 	movapd	%xmm4, %xmm6
    00002017: 	unpcklpd	%xmm5, %xmm5
    0000201b: 	movsd	%xmm4, 0x60(%rsp)
    00002021: 	unpcklpd	%xmm6, %xmm6
    00002025: 	movsd	%xmm7, 0x18(%rsp)
    0000202b: 	movaps	%xmm5, 0x80(%rsp)
    00002033: 	movaps	%xmm6, 0x70(%rsp)
    00002038: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3931:
    00002040: 	movapd	0x70(%rsp), %xmm3
    00002046: 	movq	%rbp, %rax
    00002049: 	pxor	%xmm1, %xmm1
    0000204d: 	movapd	0x80(%rsp), %xmm4
    00002056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3928:
    00002060: 	movapd	(%rax), %xmm0
    00002064: 	addq	$0x10, %rax
    00002068: 	addpd	%xmm4, %xmm0
    0000206c: 	mulpd	%xmm3, %xmm0
    00002070: 	addsd	%xmm0, %xmm1
    00002074: 	unpckhpd	%xmm0, %xmm0
    00002078: 	addsd	%xmm0, %xmm1
    0000207c: 	cmpq	%rax, %rbx
    0000207f: 	jne	.Ltmp3928 # Offset: 8319
    00002081: 	movsd	0x30(%rsp), %xmm0
    00002087: 	movapd	(%rsp), %xmm5
    0000208c: 	movapd	%xmm1, %xmm2
    00002090: 	addsd	init_value(%rip), %xmm0
    00002098: 	mulsd	0x60(%rsp), %xmm0
    0000209e: 	mulsd	0x10(%rsp), %xmm0
    000020a4: 	andpd	%xmm1, %xmm5
    000020a8: 	comisd	0x18(%rsp), %xmm5
    000020ae: 	subsd	%xmm0, %xmm2
    000020b2: 	jbe	.Ltmp3929 # Offset: 8370
    000020b4: 	divsd	%xmm1, %xmm2
.Ltmp3929:
    000020b8: 	andpd	(%rsp), %xmm2
    000020bd: 	movsd	0x28(%rsp), %xmm5
    000020c3: 	comisd	%xmm2, %xmm5
    000020c7: 	jbe	.Ltmp3930 # Offset: 8391
.Ltmp4013:
    000020cd: 	addl	$0x1, 0x50(%rsp)
    000020d2: 	movl	0x50(%rsp), %eax
    000020d6: 	cmpl	%edx, %eax
    000020d8: 	jl	.Ltmp3931 # Offset: 8408
.Ltmp3927:
    000020de: 	movq	%r12, %rsi
    000020e1: 	movq	%r15, %rdi
    000020e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8420
    000020e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020fe: 	je	.Ltmp3932 # Offset: 8446
.Ltmp4042:
    00002104: 	movq	-0x20(%rax), %rdi
    00002108: 	movq	%rdi, (%rsp)
    0000210c: 	callq	clock@PLT # Offset: 8460
    00002111: 	movq	(%rsp), %rdi
    00002115: 	pxor	%xmm0, %xmm0
    00002119: 	movq	%rax, end_time(%rip)
    00002120: 	subq	start_time(%rip), %rax
    00002127: 	cvtsi2sd	%rax, %xmm0
    0000212c: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002134: 	callq	_Z13record_resultdPKc # Offset: 8500
    00002139: 	movq	0x1a0(%rsp), %rdi
    00002141: 	cmpq	%r14, %rdi
    00002144: 	je	.Ltmp3933 # Offset: 8516
    00002146: 	movq	0x1b0(%rsp), %rax
    0000214e: 	leaq	0x1(%rax), %rsi
    00002152: 	callq	_ZdlPvm@PLT # Offset: 8530
.Ltmp3933:
    00002157: 	leaq	DATAat0x383e1(%rip), %rdx
    0000215e: 	movq	%r13, %rsi
    00002161: 	movq	%r12, %rdi
    00002164: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8548
    00002169: 	callq	clock@PLT # Offset: 8553
    0000216e: 	movl	iterations(%rip), %edx
    00002174: 	movq	%rax, start_time(%rip)
    0000217b: 	testl	%edx, %edx
    0000217d: 	jle	.Ltmp3934 # Offset: 8573
    00002183: 	pxor	%xmm5, %xmm5
    00002187: 	movsd	0x30(%rsp), %xmm6
    0000218d: 	movsd	0x38(%rsp), %xmm3
    00002193: 	movl	$0x0, 0x80(%rsp)
    0000219e: 	movsd	%xmm5, 0x20(%rsp)
    000021a4: 	movsd	DATAat0x385d8(%rip), %xmm5
    000021ac: 	movsd	0x40(%rsp), %xmm2
    000021b2: 	movsd	0x48(%rsp), %xmm1
    000021b8: 	movapd	%xmm6, %xmm7
    000021bc: 	movapd	%xmm6, %xmm4
    000021c0: 	movsd	%xmm5, 0x10(%rsp)
    000021c6: 	movq	DATAat0x38630(%rip), %xmm5
    000021ce: 	mulsd	%xmm3, %xmm7
    000021d2: 	mulsd	%xmm2, %xmm4
    000021d6: 	movaps	%xmm5, (%rsp)
    000021da: 	movsd	DATAat0x385f8(%rip), %xmm5
    000021e2: 	mulsd	%xmm1, %xmm6
    000021e6: 	movsd	%xmm5, 0x18(%rsp)
    000021ec: 	movsd	DATAat0x38600(%rip), %xmm5
    000021f4: 	movsd	%xmm7, 0x90(%rsp)
    000021fd: 	movsd	%xmm5, 0x28(%rsp)
    00002203: 	movapd	%xmm3, %xmm5
    00002207: 	movsd	%xmm4, 0x98(%rsp)
    00002210: 	unpcklpd	%xmm5, %xmm5
    00002214: 	movaps	%xmm5, 0x50(%rsp)
    00002219: 	movapd	%xmm2, %xmm5
    0000221d: 	movsd	%xmm6, 0xd0(%rsp)
    00002226: 	unpcklpd	%xmm5, %xmm5
    0000222a: 	movaps	%xmm5, 0x60(%rsp)
    0000222f: 	movapd	%xmm1, %xmm5
    00002233: 	unpcklpd	%xmm5, %xmm5
    00002237: 	movaps	%xmm5, 0x70(%rsp)
    0000223c: 	movapd	%xmm7, %xmm5
    00002240: 	movapd	%xmm4, %xmm7
    00002244: 	movapd	%xmm6, %xmm4
    00002248: 	unpcklpd	%xmm5, %xmm5
    0000224c: 	unpcklpd	%xmm7, %xmm7
    00002250: 	unpcklpd	%xmm4, %xmm4
    00002254: 	movaps	%xmm5, 0xa0(%rsp)
    0000225c: 	movaps	%xmm7, 0xb0(%rsp)
    00002264: 	movaps	%xmm4, 0xc0(%rsp)
    0000226c: 	nopl	(%rax) # Size: 4
.Ltmp3938:
    00002270: 	pxor	%xmm2, %xmm2
    00002274: 	movapd	0x50(%rsp), %xmm6
    0000227a: 	movq	%rbp, %rax
    0000227d: 	movapd	0xa0(%rsp), %xmm3
    00002286: 	movapd	0xb0(%rsp), %xmm4
    0000228f: 	movapd	0x60(%rsp), %xmm7
    00002295: 	movapd	%xmm2, %xmm9
    0000229a: 	movapd	0xc0(%rsp), %xmm5
    000022a3: 	movapd	0x70(%rsp), %xmm8
    000022aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3935:
    000022b0: 	movapd	(%rax), %xmm1
    000022b4: 	movapd	%xmm7, %xmm0
    000022b8: 	movapd	%xmm6, %xmm2
    000022bc: 	addq	$0x10, %rax
    000022c0: 	mulpd	%xmm1, %xmm2
    000022c4: 	mulpd	%xmm1, %xmm0
    000022c8: 	mulpd	%xmm8, %xmm1
    000022cd: 	addpd	%xmm2, %xmm0
    000022d1: 	addpd	%xmm1, %xmm0
    000022d5: 	addpd	%xmm3, %xmm0
    000022d9: 	addpd	%xmm4, %xmm0
    000022dd: 	addpd	%xmm5, %xmm0
    000022e1: 	movapd	%xmm0, %xmm2
    000022e5: 	unpckhpd	%xmm0, %xmm0
    000022e9: 	addsd	%xmm9, %xmm2
    000022ee: 	addsd	%xmm2, %xmm0
    000022f2: 	movapd	%xmm0, %xmm9
    000022f7: 	cmpq	%rax, %rbx
    000022fa: 	jne	.Ltmp3935 # Offset: 8954
    000022fc: 	movapd	%xmm0, %xmm2
    00002300: 	movsd	0x40(%rsp), %xmm3
    00002306: 	movsd	0x38(%rsp), %xmm0
    0000230c: 	movsd	init_value(%rip), %xmm1
    00002314: 	movapd	(%rsp), %xmm6
    00002319: 	mulsd	%xmm1, %xmm0
    0000231d: 	andpd	%xmm2, %xmm6
    00002321: 	mulsd	%xmm1, %xmm3
    00002325: 	comisd	0x18(%rsp), %xmm6
    0000232b: 	mulsd	0x48(%rsp), %xmm1
    00002331: 	addsd	%xmm3, %xmm0
    00002335: 	addsd	%xmm1, %xmm0
    00002339: 	movapd	%xmm9, %xmm1
    0000233e: 	addsd	0x90(%rsp), %xmm0
    00002347: 	addsd	0x98(%rsp), %xmm0
    00002350: 	addsd	0xd0(%rsp), %xmm0
    00002359: 	mulsd	0x10(%rsp), %xmm0
    0000235f: 	subsd	%xmm0, %xmm1
    00002363: 	jbe	.Ltmp3936 # Offset: 9059
    00002365: 	divsd	%xmm9, %xmm1
.Ltmp3936:
    0000236a: 	andpd	(%rsp), %xmm1
    0000236f: 	movsd	0x28(%rsp), %xmm5
    00002375: 	comisd	%xmm1, %xmm5
    00002379: 	jbe	.Ltmp3937 # Offset: 9081
.Ltmp4012:
    0000237f: 	addl	$0x1, 0x80(%rsp)
    00002387: 	movl	0x80(%rsp), %eax
    0000238e: 	cmpl	%edx, %eax
    00002390: 	jl	.Ltmp3938 # Offset: 9104
.Ltmp3934:
    00002396: 	movq	%r12, %rsi
    00002399: 	movq	%r15, %rdi
    0000239c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9116
    000023a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023a8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023b6: 	je	.Ltmp3939 # Offset: 9142
.Ltmp4041:
    000023bc: 	movq	-0x20(%rax), %rdi
    000023c0: 	movq	%rdi, (%rsp)
    000023c4: 	callq	clock@PLT # Offset: 9156
    000023c9: 	movq	(%rsp), %rdi
    000023cd: 	pxor	%xmm0, %xmm0
    000023d1: 	movq	%rax, end_time(%rip)
    000023d8: 	subq	start_time(%rip), %rax
    000023df: 	cvtsi2sd	%rax, %xmm0
    000023e4: 	divsd	DATAat0x385e0(%rip), %xmm0
    000023ec: 	callq	_Z13record_resultdPKc # Offset: 9196
    000023f1: 	movq	0x1a0(%rsp), %rdi
    000023f9: 	cmpq	%r14, %rdi
    000023fc: 	je	.Ltmp3940 # Offset: 9212
    000023fe: 	movq	0x1b0(%rsp), %rax
    00002406: 	leaq	0x1(%rax), %rsi
    0000240a: 	callq	_ZdlPvm@PLT # Offset: 9226
.Ltmp3940:
    0000240f: 	leaq	0x160(%rsp), %rdi
    00002417: 	leaq	DATAat0x3839a(%rip), %rdx
    0000241e: 	movq	%r13, %rsi
    00002421: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9249
    00002426: 	movl	iterations(%rip), %esi
    0000242c: 	movq	0x160(%rsp), %rdi
    00002434: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 9268
    00002439: 	leaq	DATAat0x38593(%rip), %rdx
    00002440: 	movq	%r13, %rsi
    00002443: 	movq	%r12, %rdi
    00002446: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9286
    0000244b: 	callq	clock@PLT # Offset: 9291
    00002450: 	movl	iterations(%rip), %edx
    00002456: 	movq	%rax, start_time(%rip)
    0000245d: 	testl	%edx, %edx
    0000245f: 	jle	.Ltmp3941 # Offset: 9311
    00002465: 	movsd	0x30(%rsp), %xmm0
    0000246b: 	addsd	0x38(%rsp), %xmm0
    00002471: 	pxor	%xmm6, %xmm6
    00002475: 	movl	$0x0, 0x50(%rsp)
    0000247d: 	addsd	0x40(%rsp), %xmm0
    00002483: 	movsd	0x48(%rsp), %xmm4
    00002489: 	movsd	%xmm6, 0x20(%rsp)
    0000248f: 	movq	DATAat0x38630(%rip), %xmm6
    00002497: 	movsd	DATAat0x385d8(%rip), %xmm7
    0000249f: 	addsd	%xmm0, %xmm4
    000024a3: 	movaps	%xmm6, (%rsp)
    000024a7: 	movsd	DATAat0x38600(%rip), %xmm6
    000024af: 	movsd	%xmm7, 0x10(%rsp)
    000024b5: 	movsd	DATAat0x385f8(%rip), %xmm7
    000024bd: 	movsd	%xmm6, 0x28(%rsp)
    000024c3: 	movapd	%xmm4, %xmm6
    000024c7: 	movsd	%xmm4, 0x60(%rsp)
    000024cd: 	unpcklpd	%xmm6, %xmm6
    000024d1: 	movsd	%xmm7, 0x18(%rsp)
    000024d7: 	movaps	%xmm6, 0x70(%rsp)
    000024dc: 	nopl	(%rax) # Size: 4
.Ltmp3945:
    000024e0: 	movapd	0x70(%rsp), %xmm3
    000024e6: 	movq	%rbp, %rax
    000024e9: 	pxor	%xmm0, %xmm0
    000024ed: 	nopl	(%rax) # Size: 3
.Ltmp3942:
    000024f0: 	movapd	%xmm3, %xmm1
    000024f4: 	divpd	(%rax), %xmm1
    000024f8: 	addsd	%xmm1, %xmm0
    000024fc: 	addq	$0x10, %rax
    00002500: 	unpckhpd	%xmm1, %xmm1
    00002504: 	addsd	%xmm1, %xmm0
    00002508: 	cmpq	%rax, %rbx
    0000250b: 	jne	.Ltmp3942 # Offset: 9483
    0000250d: 	movsd	0x60(%rsp), %xmm2
    00002513: 	movapd	(%rsp), %xmm7
    00002518: 	movapd	%xmm0, %xmm1
    0000251c: 	divsd	init_value(%rip), %xmm2
    00002524: 	mulsd	0x10(%rsp), %xmm2
    0000252a: 	andpd	%xmm0, %xmm7
    0000252e: 	comisd	0x18(%rsp), %xmm7
    00002534: 	subsd	%xmm2, %xmm1
    00002538: 	jbe	.Ltmp3943 # Offset: 9528
    0000253a: 	divsd	%xmm0, %xmm1
.Ltmp3943:
    0000253e: 	andpd	(%rsp), %xmm1
    00002543: 	movsd	0x28(%rsp), %xmm5
    00002549: 	comisd	%xmm1, %xmm5
    0000254d: 	jbe	.Ltmp3944 # Offset: 9549
.Ltmp4011:
    00002553: 	addl	$0x1, 0x50(%rsp)
    00002558: 	movl	0x50(%rsp), %eax
    0000255c: 	cmpl	%edx, %eax
    0000255e: 	jl	.Ltmp3945 # Offset: 9566
.Ltmp3941:
    00002560: 	movq	%r12, %rsi
    00002563: 	movq	%r15, %rdi
    00002566: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9574
    0000256b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002572: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002579: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002580: 	je	.Ltmp3946 # Offset: 9600
.Ltmp4040:
    00002586: 	movq	-0x20(%rax), %rdi
    0000258a: 	movq	%rdi, (%rsp)
    0000258e: 	callq	clock@PLT # Offset: 9614
    00002593: 	movq	(%rsp), %rdi
    00002597: 	pxor	%xmm0, %xmm0
    0000259b: 	movq	%rax, end_time(%rip)
    000025a2: 	subq	start_time(%rip), %rax
    000025a9: 	cvtsi2sd	%rax, %xmm0
    000025ae: 	divsd	DATAat0x385e0(%rip), %xmm0
    000025b6: 	callq	_Z13record_resultdPKc # Offset: 9654
    000025bb: 	movq	0x1a0(%rsp), %rdi
    000025c3: 	cmpq	%r14, %rdi
    000025c6: 	je	.Ltmp3947 # Offset: 9670
    000025c8: 	movq	0x1b0(%rsp), %rax
    000025d0: 	leaq	0x1(%rax), %rsi
    000025d4: 	callq	_ZdlPvm@PLT # Offset: 9684
.Ltmp3947:
    000025d9: 	leaq	DATAat0x385b0(%rip), %rdx
    000025e0: 	movq	%r13, %rsi
    000025e3: 	movq	%r12, %rdi
    000025e6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9702
    000025eb: 	callq	clock@PLT # Offset: 9707
    000025f0: 	movl	iterations(%rip), %edx
    000025f6: 	movq	%rax, start_time(%rip)
    000025fd: 	testl	%edx, %edx
    000025ff: 	jle	.Ltmp3948 # Offset: 9727
    00002605: 	pxor	%xmm4, %xmm4
    00002609: 	movsd	DATAat0x385f8(%rip), %xmm7
    00002611: 	movsd	DATAat0x38600(%rip), %xmm6
    00002619: 	movl	$0x0, 0x90(%rsp)
    00002624: 	movsd	%xmm4, 0x20(%rsp)
    0000262a: 	movsd	DATAat0x385d8(%rip), %xmm4
    00002632: 	movsd	%xmm7, 0x18(%rsp)
    00002638: 	movsd	0x38(%rsp), %xmm7
    0000263e: 	movsd	%xmm4, 0x10(%rsp)
    00002644: 	movq	DATAat0x38630(%rip), %xmm4
    0000264c: 	movsd	%xmm6, 0x28(%rsp)
    00002652: 	movsd	0x40(%rsp), %xmm6
    00002658: 	unpcklpd	%xmm7, %xmm7
    0000265c: 	movaps	%xmm4, (%rsp)
    00002660: 	movsd	0x30(%rsp), %xmm4
    00002666: 	unpcklpd	%xmm6, %xmm6
    0000266a: 	movaps	%xmm7, 0x50(%rsp)
    0000266f: 	unpcklpd	%xmm4, %xmm4
    00002673: 	movaps	%xmm6, 0x60(%rsp)
    00002678: 	movaps	%xmm4, 0x80(%rsp)
    00002680: 	movsd	0x48(%rsp), %xmm4
    00002686: 	unpcklpd	%xmm4, %xmm4
    0000268a: 	movaps	%xmm4, 0x70(%rsp)
    0000268f: 	nop # Size: 1
.Ltmp3952:
    00002690: 	movapd	0x50(%rsp), %xmm4
    00002696: 	movq	%rbp, %rax
    00002699: 	movapd	0x60(%rsp), %xmm5
    0000269f: 	pxor	%xmm1, %xmm1
    000026a3: 	movapd	0x80(%rsp), %xmm7
    000026ac: 	movapd	0x70(%rsp), %xmm6
    000026b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3949:
    000026b8: 	movapd	(%rax), %xmm2
    000026bc: 	movapd	%xmm4, %xmm0
    000026c0: 	movapd	%xmm7, %xmm3
    000026c4: 	addq	$0x10, %rax
    000026c8: 	divpd	%xmm2, %xmm3
    000026cc: 	divpd	%xmm2, %xmm0
    000026d0: 	addpd	%xmm3, %xmm0
    000026d4: 	movapd	%xmm5, %xmm3
    000026d8: 	divpd	%xmm2, %xmm3
    000026dc: 	addpd	%xmm3, %xmm0
    000026e0: 	movapd	%xmm6, %xmm3
    000026e4: 	divpd	%xmm2, %xmm3
    000026e8: 	addpd	%xmm3, %xmm0
    000026ec: 	addsd	%xmm0, %xmm1
    000026f0: 	unpckhpd	%xmm0, %xmm0
    000026f4: 	addsd	%xmm0, %xmm1
    000026f8: 	cmpq	%rax, %rbx
    000026fb: 	jne	.Ltmp3949 # Offset: 9979
    000026fd: 	movsd	init_value(%rip), %xmm2
    00002705: 	movsd	0x30(%rsp), %xmm0
    0000270b: 	movsd	0x38(%rsp), %xmm3
    00002711: 	movapd	(%rsp), %xmm4
    00002716: 	divsd	%xmm2, %xmm0
    0000271a: 	andpd	%xmm1, %xmm4
    0000271e: 	comisd	0x18(%rsp), %xmm4
    00002724: 	divsd	%xmm2, %xmm3
    00002728: 	addsd	%xmm3, %xmm0
    0000272c: 	movsd	0x40(%rsp), %xmm3
    00002732: 	divsd	%xmm2, %xmm3
    00002736: 	addsd	%xmm3, %xmm0
    0000273a: 	movsd	0x48(%rsp), %xmm3
    00002740: 	divsd	%xmm2, %xmm3
    00002744: 	movapd	%xmm1, %xmm2
    00002748: 	addsd	%xmm3, %xmm0
    0000274c: 	mulsd	0x10(%rsp), %xmm0
    00002752: 	subsd	%xmm0, %xmm2
    00002756: 	jbe	.Ltmp3950 # Offset: 10070
    00002758: 	divsd	%xmm1, %xmm2
.Ltmp3950:
    0000275c: 	andpd	(%rsp), %xmm2
    00002761: 	movsd	0x28(%rsp), %xmm5
    00002767: 	comisd	%xmm2, %xmm5
    0000276b: 	jbe	.Ltmp3951 # Offset: 10091
.Ltmp4010:
    00002771: 	addl	$0x1, 0x90(%rsp)
    00002779: 	movl	0x90(%rsp), %eax
    00002780: 	cmpl	%edx, %eax
    00002782: 	jl	.Ltmp3952 # Offset: 10114
.Ltmp3948:
    00002788: 	movq	%r12, %rsi
    0000278b: 	movq	%r15, %rdi
    0000278e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10126
    00002793: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000279a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000027a1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027a8: 	je	.Ltmp3953 # Offset: 10152
.Ltmp4039:
    000027ae: 	movq	-0x20(%rax), %rbx
    000027b2: 	callq	clock@PLT # Offset: 10162
    000027b7: 	pxor	%xmm0, %xmm0
    000027bb: 	movq	%rax, end_time(%rip)
    000027c2: 	movq	%rbx, %rdi
    000027c5: 	subq	start_time(%rip), %rax
    000027cc: 	cvtsi2sd	%rax, %xmm0
    000027d1: 	divsd	DATAat0x385e0(%rip), %xmm0
    000027d9: 	callq	_Z13record_resultdPKc # Offset: 10201
    000027de: 	movq	0x1a0(%rsp), %rdi
    000027e6: 	cmpq	%r14, %rdi
    000027e9: 	je	.Ltmp3954 # Offset: 10217
    000027eb: 	movq	0x1b0(%rsp), %rax
    000027f3: 	leaq	0x1(%rax), %rsi
    000027f7: 	callq	_ZdlPvm@PLT # Offset: 10231
.Ltmp3954:
    000027fc: 	leaq	0x180(%rsp), %rdi
    00002804: 	leaq	DATAat0x385b0(%rip), %rdx
    0000280b: 	movq	%r13, %rsi
    0000280e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10254
    00002813: 	movl	iterations(%rip), %esi
    00002819: 	movq	0x180(%rsp), %rdi
    00002821: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 10273
    00002826: 	leaq	DATAat0x383fa(%rip), %rdx
    0000282d: 	movq	%r13, %rsi
    00002830: 	movq	%r12, %rdi
    00002833: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10291
    00002838: 	callq	clock@PLT # Offset: 10296
    0000283d: 	movl	iterations(%rip), %edx
    00002843: 	movq	%rax, start_time(%rip)
    0000284a: 	testl	%edx, %edx
    0000284c: 	jle	.Ltmp3955 # Offset: 10316
    00002852: 	pxor	%xmm4, %xmm4
    00002856: 	movsd	DATAat0x385d8(%rip), %xmm7
    0000285e: 	movq	DATAat0x38630(%rip), %xmm6
    00002866: 	movl	$0x0, 0x30(%rsp)
    0000286e: 	movsd	DATAat0x38600(%rip), %xmm5
    00002876: 	movsd	%xmm4, 0x20(%rsp)
    0000287c: 	movsd	DATAat0x385f8(%rip), %xmm4
    00002884: 	leaq	0xf9f0(%rbp), %rbx
    0000288b: 	movsd	%xmm7, 0x10(%rsp)
    00002891: 	movaps	%xmm6, (%rsp)
    00002895: 	movsd	%xmm4, 0x18(%rsp)
    0000289b: 	movsd	%xmm5, 0x28(%rsp)
    000028a1: 	nopl	(%rax) # Size: 7
.Ltmp3959:
    000028a8: 	movsd	0x1c8(%rsp), %xmm1
    000028b1: 	movq	%rbp, %rax
    000028b4: 	addsd	0x1c0(%rsp), %xmm1
    000028bd: 	mulsd	%xmm1, %xmm1
    000028c1: 	addsd	0x20(%rsp), %xmm1
    000028c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3956:
    000028d0: 	movupd	0x8(%rax), %xmm0
    000028d5: 	addpd	(%rax), %xmm0
    000028d9: 	addq	$0x10, %rax
    000028dd: 	mulpd	%xmm0, %xmm0
    000028e1: 	addsd	%xmm0, %xmm1
    000028e5: 	unpckhpd	%xmm0, %xmm0
    000028e9: 	addsd	%xmm0, %xmm1
    000028ed: 	cmpq	%rax, %rbx
    000028f0: 	jne	.Ltmp3956 # Offset: 10480
    000028f2: 	movsd	0xfbb0(%rsp), %xmm0
    000028fb: 	movapd	(%rsp), %xmm5
    00002900: 	addsd	0xfbb8(%rsp), %xmm0
    00002909: 	mulsd	%xmm0, %xmm0
    0000290d: 	addsd	%xmm1, %xmm0
    00002911: 	movsd	init_value(%rip), %xmm1
    00002919: 	addsd	%xmm1, %xmm1
    0000291d: 	andpd	%xmm0, %xmm5
    00002921: 	comisd	0x18(%rsp), %xmm5
    00002927: 	movapd	%xmm0, %xmm2
    0000292b: 	mulsd	%xmm1, %xmm1
    0000292f: 	mulsd	0x10(%rsp), %xmm1
    00002935: 	subsd	%xmm1, %xmm2
    00002939: 	jbe	.Ltmp3957 # Offset: 10553
    0000293b: 	divsd	%xmm0, %xmm2
    0000293f: 	nop # Size: 1
.Ltmp3957:
    00002940: 	andpd	(%rsp), %xmm2
    00002945: 	movsd	0x28(%rsp), %xmm4
    0000294b: 	comisd	%xmm2, %xmm4
    0000294f: 	jbe	.Ltmp3958 # Offset: 10575
.Ltmp4009:
    00002955: 	addl	$0x1, 0x30(%rsp)
    0000295a: 	movl	0x30(%rsp), %eax
    0000295e: 	cmpl	%edx, %eax
    00002960: 	jl	.Ltmp3959 # Offset: 10592
.Ltmp3955:
    00002966: 	movq	%r12, %rsi
    00002969: 	movq	%r15, %rdi
    0000296c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10604
    00002971: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002978: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000297f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002986: 	je	.Ltmp3960 # Offset: 10630
.Ltmp4038:
    0000298c: 	movq	-0x20(%rax), %rbx
    00002990: 	callq	clock@PLT # Offset: 10640
    00002995: 	pxor	%xmm0, %xmm0
    00002999: 	movq	%rax, end_time(%rip)
    000029a0: 	movq	%rbx, %rdi
    000029a3: 	subq	start_time(%rip), %rax
    000029aa: 	cvtsi2sd	%rax, %xmm0
    000029af: 	divsd	DATAat0x385e0(%rip), %xmm0
    000029b7: 	callq	_Z13record_resultdPKc # Offset: 10679
    000029bc: 	movq	0x1a0(%rsp), %rdi
    000029c4: 	cmpq	%r14, %rdi
    000029c7: 	je	.Ltmp3961 # Offset: 10695
    000029c9: 	movq	0x1b0(%rsp), %rax
    000029d1: 	leaq	0x1(%rax), %rsi
    000029d5: 	callq	_ZdlPvm@PLT # Offset: 10709
.Ltmp3961:
    000029da: 	leaq	DATAat0x38409(%rip), %rdx
    000029e1: 	movq	%r13, %rsi
    000029e4: 	movq	%r12, %rdi
    000029e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10727
    000029ec: 	callq	clock@PLT # Offset: 10732
    000029f1: 	movl	iterations(%rip), %edx
    000029f7: 	movq	%rax, start_time(%rip)
    000029fe: 	testl	%edx, %edx
    00002a00: 	jle	.Ltmp3962 # Offset: 10752
    00002a06: 	pxor	%xmm7, %xmm7
    00002a0a: 	movsd	DATAat0x385d8(%rip), %xmm6
    00002a12: 	movq	DATAat0x38630(%rip), %xmm4
    00002a1a: 	movl	$0x0, 0x30(%rsp)
    00002a22: 	movsd	DATAat0x385f8(%rip), %xmm5
    00002a2a: 	movsd	%xmm7, 0x20(%rsp)
    00002a30: 	movsd	DATAat0x38600(%rip), %xmm7
    00002a38: 	leaq	0xf9f0(%rbp), %rbx
    00002a3f: 	movsd	%xmm6, 0x10(%rsp)
    00002a45: 	movaps	%xmm4, (%rsp)
    00002a49: 	movsd	%xmm5, 0x18(%rsp)
    00002a4f: 	movsd	%xmm7, 0x28(%rsp)
    00002a55: 	nopl	(%rax) # Size: 3
.Ltmp3966:
    00002a58: 	movsd	0x1c0(%rsp), %xmm0
    00002a61: 	movq	%rbp, %rax
    00002a64: 	movsd	0x1c8(%rsp), %xmm1
    00002a6d: 	movapd	%xmm0, %xmm2
    00002a71: 	addsd	%xmm0, %xmm2
    00002a75: 	mulsd	%xmm0, %xmm0
    00002a79: 	mulsd	%xmm1, %xmm2
    00002a7d: 	mulsd	%xmm1, %xmm1
    00002a81: 	addsd	%xmm0, %xmm2
    00002a85: 	addsd	%xmm1, %xmm2
    00002a89: 	addsd	0x20(%rsp), %xmm2
    00002a8f: 	nop # Size: 1
.Ltmp3963:
    00002a90: 	movapd	(%rax), %xmm1
    00002a94: 	movupd	0x8(%rax), %xmm3
    00002a99: 	addq	$0x10, %rax
    00002a9d: 	movapd	%xmm1, %xmm0
    00002aa1: 	addpd	%xmm1, %xmm0
    00002aa5: 	mulpd	%xmm1, %xmm1
    00002aa9: 	mulpd	%xmm3, %xmm0
    00002aad: 	mulpd	%xmm3, %xmm3
    00002ab1: 	addpd	%xmm1, %xmm0
    00002ab5: 	addpd	%xmm3, %xmm0
    00002ab9: 	addsd	%xmm0, %xmm2
    00002abd: 	unpckhpd	%xmm0, %xmm0
    00002ac1: 	addsd	%xmm0, %xmm2
    00002ac5: 	cmpq	%rax, %rbx
    00002ac8: 	jne	.Ltmp3963 # Offset: 10952
    00002aca: 	movsd	0xfbb0(%rsp), %xmm1
    00002ad3: 	movapd	(%rsp), %xmm6
    00002ad8: 	movsd	0xfbb8(%rsp), %xmm3
    00002ae1: 	movapd	%xmm1, %xmm0
    00002ae5: 	addsd	%xmm1, %xmm0
    00002ae9: 	mulsd	%xmm1, %xmm1
    00002aed: 	mulsd	%xmm3, %xmm0
    00002af1: 	mulsd	%xmm3, %xmm3
    00002af5: 	addsd	%xmm1, %xmm0
    00002af9: 	movsd	init_value(%rip), %xmm1
    00002b01: 	addsd	%xmm3, %xmm0
    00002b05: 	movapd	%xmm1, %xmm3
    00002b09: 	mulsd	%xmm1, %xmm3
    00002b0d: 	addsd	%xmm2, %xmm0
    00002b11: 	movapd	%xmm1, %xmm2
    00002b15: 	addsd	%xmm1, %xmm2
    00002b19: 	andpd	%xmm0, %xmm6
    00002b1d: 	comisd	0x18(%rsp), %xmm6
    00002b23: 	mulsd	%xmm2, %xmm1
    00002b27: 	movapd	%xmm0, %xmm2
    00002b2b: 	addsd	%xmm3, %xmm1
    00002b2f: 	addsd	%xmm3, %xmm1
    00002b33: 	mulsd	0x10(%rsp), %xmm1
    00002b39: 	subsd	%xmm1, %xmm2
    00002b3d: 	jbe	.Ltmp3964 # Offset: 11069
    00002b3f: 	divsd	%xmm0, %xmm2
    00002b43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3964:
    00002b48: 	andpd	(%rsp), %xmm2
    00002b4d: 	movsd	0x28(%rsp), %xmm7
    00002b53: 	comisd	%xmm2, %xmm7
    00002b57: 	jbe	.Ltmp3965 # Offset: 11095
.Ltmp4008:
    00002b5d: 	addl	$0x1, 0x30(%rsp)
    00002b62: 	movl	0x30(%rsp), %eax
    00002b66: 	cmpl	%edx, %eax
    00002b68: 	jl	.Ltmp3966 # Offset: 11112
.Ltmp3962:
    00002b6e: 	movq	%r12, %rsi
    00002b71: 	movq	%r15, %rdi
    00002b74: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11124
    00002b79: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b80: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b87: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b8e: 	je	.Ltmp3967 # Offset: 11150
.Ltmp4037:
    00002b94: 	movq	-0x20(%rax), %rbx
    00002b98: 	callq	clock@PLT # Offset: 11160
    00002b9d: 	pxor	%xmm0, %xmm0
    00002ba1: 	movq	%rax, end_time(%rip)
    00002ba8: 	movq	%rbx, %rdi
    00002bab: 	subq	start_time(%rip), %rax
    00002bb2: 	cvtsi2sd	%rax, %xmm0
    00002bb7: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002bbf: 	callq	_Z13record_resultdPKc # Offset: 11199
    00002bc4: 	movq	0x1a0(%rsp), %rdi
    00002bcc: 	cmpq	%r14, %rdi
    00002bcf: 	je	.Ltmp3968 # Offset: 11215
    00002bd1: 	movq	0x1b0(%rsp), %rax
    00002bd9: 	leaq	0x1(%rax), %rsi
    00002bdd: 	callq	_ZdlPvm@PLT # Offset: 11229
.Ltmp3968:
    00002be2: 	leaq	DATAat0x38414(%rip), %rdx
    00002be9: 	movq	%r13, %rsi
    00002bec: 	movq	%r12, %rdi
    00002bef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11247
    00002bf4: 	callq	clock@PLT # Offset: 11252
    00002bf9: 	movl	iterations(%rip), %edx
    00002bff: 	movq	%rax, start_time(%rip)
    00002c06: 	testl	%edx, %edx
    00002c08: 	jle	.Ltmp3969 # Offset: 11272
    00002c0e: 	pxor	%xmm6, %xmm6
    00002c12: 	movsd	DATAat0x385d8(%rip), %xmm4
    00002c1a: 	movq	DATAat0x38630(%rip), %xmm5
    00002c22: 	movl	$0x0, 0x30(%rsp)
    00002c2a: 	movsd	DATAat0x385f8(%rip), %xmm7
    00002c32: 	movsd	%xmm6, 0x20(%rsp)
    00002c38: 	movsd	DATAat0x38600(%rip), %xmm6
    00002c40: 	leaq	0xf9f0(%rbp), %rbx
    00002c47: 	movsd	%xmm4, 0x10(%rsp)
    00002c4d: 	movaps	%xmm5, (%rsp)
    00002c51: 	movsd	%xmm7, 0x18(%rsp)
    00002c57: 	movsd	%xmm6, 0x28(%rsp)
    00002c5d: 	nopl	(%rax) # Size: 3
.Ltmp3973:
    00002c60: 	movsd	0x1c0(%rsp), %xmm1
    00002c69: 	movq	%rbp, %rax
    00002c6c: 	subsd	0x1c8(%rsp), %xmm1
    00002c75: 	mulsd	%xmm1, %xmm1
    00002c79: 	addsd	0x20(%rsp), %xmm1
    00002c7f: 	nop # Size: 1
.Ltmp3970:
    00002c80: 	movapd	(%rax), %xmm0
    00002c84: 	movupd	0x8(%rax), %xmm5
    00002c89: 	addq	$0x10, %rax
    00002c8d: 	subpd	%xmm5, %xmm0
    00002c91: 	mulpd	%xmm0, %xmm0
    00002c95: 	addsd	%xmm0, %xmm1
    00002c99: 	unpckhpd	%xmm0, %xmm0
    00002c9d: 	addsd	%xmm0, %xmm1
    00002ca1: 	cmpq	%rbx, %rax
    00002ca4: 	jne	.Ltmp3970 # Offset: 11428
    00002ca6: 	movsd	0xfbb0(%rsp), %xmm0
    00002caf: 	movapd	(%rsp), %xmm7
    00002cb4: 	subsd	0xfbb8(%rsp), %xmm0
    00002cbd: 	mulsd	%xmm0, %xmm0
    00002cc1: 	addsd	%xmm1, %xmm0
    00002cc5: 	movsd	init_value(%rip), %xmm1
    00002ccd: 	subsd	%xmm1, %xmm1
    00002cd1: 	andpd	%xmm0, %xmm7
    00002cd5: 	comisd	0x18(%rsp), %xmm7
    00002cdb: 	movapd	%xmm0, %xmm2
    00002cdf: 	mulsd	%xmm1, %xmm1
    00002ce3: 	mulsd	0x10(%rsp), %xmm1
    00002ce9: 	subsd	%xmm1, %xmm2
    00002ced: 	jbe	.Ltmp3971 # Offset: 11501
    00002cef: 	divsd	%xmm0, %xmm2
    00002cf3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3971:
    00002cf8: 	andpd	(%rsp), %xmm2
    00002cfd: 	movsd	0x28(%rsp), %xmm6
    00002d03: 	comisd	%xmm2, %xmm6
    00002d07: 	jbe	.Ltmp3972 # Offset: 11527
.Ltmp4007:
    00002d0d: 	addl	$0x1, 0x30(%rsp)
    00002d12: 	movl	0x30(%rsp), %eax
    00002d16: 	cmpl	%edx, %eax
    00002d18: 	jl	.Ltmp3973 # Offset: 11544
.Ltmp3969:
    00002d1e: 	movq	%r12, %rsi
    00002d21: 	movq	%r15, %rdi
    00002d24: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11556
    00002d29: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002d30: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002d37: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002d3e: 	je	.Ltmp3974 # Offset: 11582
.Ltmp4036:
    00002d44: 	movq	-0x20(%rax), %rbx
    00002d48: 	callq	clock@PLT # Offset: 11592
    00002d4d: 	pxor	%xmm0, %xmm0
    00002d51: 	movq	%rax, end_time(%rip)
    00002d58: 	movq	%rbx, %rdi
    00002d5b: 	subq	start_time(%rip), %rax
    00002d62: 	cvtsi2sd	%rax, %xmm0
    00002d67: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002d6f: 	callq	_Z13record_resultdPKc # Offset: 11631
    00002d74: 	movq	0x1a0(%rsp), %rdi
    00002d7c: 	cmpq	%r14, %rdi
    00002d7f: 	je	.Ltmp3975 # Offset: 11647
    00002d81: 	movq	0x1b0(%rsp), %rax
    00002d89: 	leaq	0x1(%rax), %rsi
    00002d8d: 	callq	_ZdlPvm@PLT # Offset: 11661
.Ltmp3975:
    00002d92: 	leaq	DATAat0x38423(%rip), %rdx
    00002d99: 	movq	%r13, %rsi
    00002d9c: 	movq	%r12, %rdi
    00002d9f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11679
    00002da4: 	callq	clock@PLT # Offset: 11684
    00002da9: 	movl	iterations(%rip), %edx
    00002daf: 	movq	%rax, start_time(%rip)
    00002db6: 	testl	%edx, %edx
    00002db8: 	jle	.Ltmp3976 # Offset: 11704
    00002dbe: 	pxor	%xmm4, %xmm4
    00002dc2: 	movsd	DATAat0x385d8(%rip), %xmm5
    00002dca: 	movq	DATAat0x38630(%rip), %xmm7
    00002dd2: 	movl	$0x0, 0x30(%rsp)
    00002dda: 	movsd	DATAat0x385f8(%rip), %xmm6
    00002de2: 	movsd	%xmm4, 0x20(%rsp)
    00002de8: 	movsd	DATAat0x38600(%rip), %xmm4
    00002df0: 	leaq	0xf9f0(%rbp), %rbx
    00002df7: 	movsd	%xmm5, 0x10(%rsp)
    00002dfd: 	movaps	%xmm7, (%rsp)
    00002e01: 	movsd	%xmm6, 0x18(%rsp)
    00002e07: 	movsd	%xmm4, 0x28(%rsp)
    00002e0d: 	nopl	(%rax) # Size: 3
.Ltmp3980:
    00002e10: 	movsd	0x1c0(%rsp), %xmm0
    00002e19: 	movq	%rbp, %rax
    00002e1c: 	movsd	0x1c8(%rsp), %xmm1
    00002e25: 	movapd	%xmm0, %xmm2
    00002e29: 	mulsd	%xmm0, %xmm2
    00002e2d: 	addsd	%xmm0, %xmm0
    00002e31: 	mulsd	%xmm1, %xmm0
    00002e35: 	mulsd	%xmm1, %xmm1
    00002e39: 	subsd	%xmm0, %xmm2
    00002e3d: 	addsd	%xmm1, %xmm2
    00002e41: 	addsd	0x20(%rsp), %xmm2
    00002e47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3977:
    00002e50: 	movapd	(%rax), %xmm1
    00002e54: 	movupd	0x8(%rax), %xmm3
    00002e59: 	addq	$0x10, %rax
    00002e5d: 	movapd	%xmm1, %xmm0
    00002e61: 	mulpd	%xmm1, %xmm0
    00002e65: 	addpd	%xmm1, %xmm1
    00002e69: 	mulpd	%xmm3, %xmm1
    00002e6d: 	mulpd	%xmm3, %xmm3
    00002e71: 	subpd	%xmm1, %xmm0
    00002e75: 	addpd	%xmm3, %xmm0
    00002e79: 	addsd	%xmm0, %xmm2
    00002e7d: 	unpckhpd	%xmm0, %xmm0
    00002e81: 	addsd	%xmm0, %xmm2
    00002e85: 	cmpq	%rax, %rbx
    00002e88: 	jne	.Ltmp3977 # Offset: 11912
    00002e8a: 	movsd	0xfbb0(%rsp), %xmm1
    00002e93: 	movapd	(%rsp), %xmm4
    00002e98: 	movsd	0xfbb8(%rsp), %xmm3
    00002ea1: 	movapd	%xmm1, %xmm0
    00002ea5: 	mulsd	%xmm1, %xmm0
    00002ea9: 	addsd	%xmm1, %xmm1
    00002ead: 	mulsd	%xmm3, %xmm1
    00002eb1: 	mulsd	%xmm3, %xmm3
    00002eb5: 	subsd	%xmm1, %xmm0
    00002eb9: 	movsd	init_value(%rip), %xmm1
    00002ec1: 	addsd	%xmm3, %xmm0
    00002ec5: 	movapd	%xmm1, %xmm3
    00002ec9: 	mulsd	%xmm1, %xmm3
    00002ecd: 	addsd	%xmm2, %xmm0
    00002ed1: 	movapd	%xmm1, %xmm2
    00002ed5: 	addsd	%xmm1, %xmm2
    00002ed9: 	andpd	%xmm0, %xmm4
    00002edd: 	comisd	0x18(%rsp), %xmm4
    00002ee3: 	mulsd	%xmm1, %xmm2
    00002ee7: 	movapd	%xmm3, %xmm1
    00002eeb: 	subsd	%xmm2, %xmm1
    00002eef: 	movapd	%xmm0, %xmm2
    00002ef3: 	addsd	%xmm3, %xmm1
    00002ef7: 	mulsd	0x10(%rsp), %xmm1
    00002efd: 	subsd	%xmm1, %xmm2
    00002f01: 	jbe	.Ltmp3978 # Offset: 12033
    00002f03: 	divsd	%xmm0, %xmm2
    00002f07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3978:
    00002f10: 	andpd	(%rsp), %xmm2
    00002f15: 	movsd	0x28(%rsp), %xmm5
    00002f1b: 	comisd	%xmm2, %xmm5
    00002f1f: 	jbe	.Ltmp3979 # Offset: 12063
.Ltmp4006:
    00002f25: 	addl	$0x1, 0x30(%rsp)
    00002f2a: 	movl	0x30(%rsp), %eax
    00002f2e: 	cmpl	%edx, %eax
    00002f30: 	jl	.Ltmp3980 # Offset: 12080
.Ltmp3976:
    00002f36: 	movq	%r12, %rsi
    00002f39: 	movq	%r15, %rdi
    00002f3c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12092
    00002f41: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f48: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f4f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f56: 	je	.Ltmp3981 # Offset: 12118
.Ltmp4035:
    00002f5c: 	movq	-0x20(%rax), %rbx
    00002f60: 	callq	clock@PLT # Offset: 12128
    00002f65: 	pxor	%xmm0, %xmm0
    00002f69: 	movq	%rax, end_time(%rip)
    00002f70: 	movq	%rbx, %rdi
    00002f73: 	subq	start_time(%rip), %rax
    00002f7a: 	cvtsi2sd	%rax, %xmm0
    00002f7f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00002f87: 	callq	_Z13record_resultdPKc # Offset: 12167
    00002f8c: 	movq	0x1a0(%rsp), %rdi
    00002f94: 	cmpq	%r14, %rdi
    00002f97: 	je	.Ltmp3982 # Offset: 12183
    00002f99: 	movq	0x1b0(%rsp), %rax
    00002fa1: 	leaq	0x1(%rax), %rsi
    00002fa5: 	callq	_ZdlPvm@PLT # Offset: 12197
.Ltmp3982:
    00002faa: 	leaq	DATAat0x3842e(%rip), %rdx
    00002fb1: 	movq	%r13, %rsi
    00002fb4: 	movq	%r12, %rdi
    00002fb7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12215
    00002fbc: 	callq	clock@PLT # Offset: 12220
    00002fc1: 	movl	iterations(%rip), %edx
    00002fc7: 	movq	%rax, start_time(%rip)
    00002fce: 	testl	%edx, %edx
    00002fd0: 	jle	.Ltmp3983 # Offset: 12240
    00002fd6: 	pxor	%xmm5, %xmm5
    00002fda: 	movsd	DATAat0x385d8(%rip), %xmm7
    00002fe2: 	movq	DATAat0x38630(%rip), %xmm6
    00002fea: 	movl	$0x0, 0x30(%rsp)
    00002ff2: 	movsd	DATAat0x385f8(%rip), %xmm4
    00002ffa: 	movsd	%xmm5, 0x20(%rsp)
    00003000: 	movsd	DATAat0x38600(%rip), %xmm5
    00003008: 	leaq	0xf9f0(%rbp), %rbx
    0000300f: 	movsd	%xmm7, 0x10(%rsp)
    00003015: 	movaps	%xmm6, (%rsp)
    00003019: 	movsd	%xmm4, 0x18(%rsp)
    0000301f: 	movsd	%xmm5, 0x28(%rsp)
    00003025: 	nopl	(%rax) # Size: 3
.Ltmp3987:
    00003028: 	movsd	0x1c0(%rsp), %xmm2
    00003031: 	movq	%rbp, %rax
    00003034: 	movsd	0x1c8(%rsp), %xmm0
    0000303d: 	movapd	%xmm2, %xmm1
    00003041: 	subsd	%xmm0, %xmm1
    00003045: 	addsd	%xmm2, %xmm0
    00003049: 	mulsd	%xmm0, %xmm1
    0000304d: 	addsd	0x20(%rsp), %xmm1
    00003053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3984:
    00003058: 	movapd	(%rax), %xmm2
    0000305c: 	movupd	0x8(%rax), %xmm6
    00003061: 	addq	$0x10, %rax
    00003065: 	movupd	-0x8(%rax), %xmm0
    0000306a: 	addpd	-0x10(%rax), %xmm0
    0000306f: 	subpd	%xmm6, %xmm2
    00003073: 	mulpd	%xmm2, %xmm0
    00003077: 	addsd	%xmm0, %xmm1
    0000307b: 	unpckhpd	%xmm0, %xmm0
    0000307f: 	addsd	%xmm0, %xmm1
    00003083: 	cmpq	%rax, %rbx
    00003086: 	jne	.Ltmp3984 # Offset: 12422
    00003088: 	movsd	0xfbb0(%rsp), %xmm2
    00003091: 	movapd	(%rsp), %xmm5
    00003096: 	movsd	0xfbb8(%rsp), %xmm3
    0000309f: 	movapd	%xmm2, %xmm0
    000030a3: 	addsd	%xmm3, %xmm0
    000030a7: 	subsd	%xmm3, %xmm2
    000030ab: 	mulsd	%xmm2, %xmm0
    000030af: 	addsd	%xmm1, %xmm0
    000030b3: 	movsd	init_value(%rip), %xmm1
    000030bb: 	movapd	%xmm1, %xmm2
    000030bf: 	subsd	%xmm1, %xmm2
    000030c3: 	addsd	%xmm1, %xmm1
    000030c7: 	andpd	%xmm0, %xmm5
    000030cb: 	comisd	0x18(%rsp), %xmm5
    000030d1: 	mulsd	%xmm2, %xmm1
    000030d5: 	movapd	%xmm0, %xmm2
    000030d9: 	mulsd	0x10(%rsp), %xmm1
    000030df: 	subsd	%xmm1, %xmm2
    000030e3: 	jbe	.Ltmp3985 # Offset: 12515
    000030e5: 	divsd	%xmm0, %xmm2
    000030e9: 	nopl	(%rax) # Size: 7
.Ltmp3985:
    000030f0: 	andpd	(%rsp), %xmm2
    000030f5: 	movsd	0x28(%rsp), %xmm4
    000030fb: 	comisd	%xmm2, %xmm4
    000030ff: 	jbe	.Ltmp3986 # Offset: 12543
.Ltmp4005:
    00003105: 	addl	$0x1, 0x30(%rsp)
    0000310a: 	movl	0x30(%rsp), %eax
    0000310e: 	cmpl	%edx, %eax
    00003110: 	jl	.Ltmp3987 # Offset: 12560
.Ltmp3983:
    00003116: 	movq	%r12, %rsi
    00003119: 	movq	%r15, %rdi
    0000311c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12572
    00003121: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003128: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000312f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003136: 	je	.Ltmp3988 # Offset: 12598
.Ltmp4034:
    0000313c: 	movq	-0x20(%rax), %rbx
    00003140: 	callq	clock@PLT # Offset: 12608
    00003145: 	pxor	%xmm0, %xmm0
    00003149: 	movq	%rax, end_time(%rip)
    00003150: 	movq	%rbx, %rdi
    00003153: 	subq	start_time(%rip), %rax
    0000315a: 	cvtsi2sd	%rax, %xmm0
    0000315f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003167: 	callq	_Z13record_resultdPKc # Offset: 12647
    0000316c: 	movq	0x1a0(%rsp), %rdi
    00003174: 	cmpq	%r14, %rdi
    00003177: 	je	.Ltmp3989 # Offset: 12663
    00003179: 	movq	0x1b0(%rsp), %rax
    00003181: 	leaq	0x1(%rax), %rsi
    00003185: 	callq	_ZdlPvm@PLT # Offset: 12677
.Ltmp3989:
    0000318a: 	leaq	DATAat0x38440(%rip), %rdx
    00003191: 	movq	%r13, %rsi
    00003194: 	movq	%r12, %rdi
    00003197: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12695
    0000319c: 	callq	clock@PLT # Offset: 12700
    000031a1: 	movl	iterations(%rip), %edx
    000031a7: 	movq	%rax, start_time(%rip)
    000031ae: 	testl	%edx, %edx
    000031b0: 	jle	.Ltmp3990 # Offset: 12720
    000031b6: 	pxor	%xmm7, %xmm7
    000031ba: 	movsd	DATAat0x385d8(%rip), %xmm6
    000031c2: 	movq	DATAat0x38630(%rip), %xmm4
    000031ca: 	movl	$0x0, 0x30(%rsp)
    000031d2: 	movsd	DATAat0x385f8(%rip), %xmm5
    000031da: 	movsd	%xmm7, 0x20(%rsp)
    000031e0: 	movsd	DATAat0x38600(%rip), %xmm7
    000031e8: 	leaq	0xf9f0(%rbp), %rbx
    000031ef: 	movsd	%xmm6, 0x10(%rsp)
    000031f5: 	movaps	%xmm4, (%rsp)
    000031f9: 	movsd	%xmm5, 0x18(%rsp)
    000031ff: 	movsd	%xmm7, 0x28(%rsp)
    00003205: 	nopl	(%rax) # Size: 3
.Ltmp3994:
    00003208: 	movsd	0x1c8(%rsp), %xmm0
    00003211: 	movq	%rbp, %rax
    00003214: 	movsd	0x1c0(%rsp), %xmm1
    0000321d: 	mulsd	%xmm0, %xmm0
    00003221: 	mulsd	%xmm1, %xmm1
    00003225: 	subsd	%xmm0, %xmm1
    00003229: 	addsd	0x20(%rsp), %xmm1
    0000322f: 	nop # Size: 1
.Ltmp3991:
    00003230: 	movapd	(%rax), %xmm0
    00003234: 	movupd	0x8(%rax), %xmm2
    00003239: 	addq	$0x10, %rax
    0000323d: 	mulpd	%xmm0, %xmm0
    00003241: 	mulpd	%xmm2, %xmm2
    00003245: 	subpd	%xmm2, %xmm0
    00003249: 	addsd	%xmm0, %xmm1
    0000324d: 	unpckhpd	%xmm0, %xmm0
    00003251: 	addsd	%xmm0, %xmm1
    00003255: 	cmpq	%rbx, %rax
    00003258: 	jne	.Ltmp3991 # Offset: 12888
    0000325a: 	movsd	0xfbb8(%rsp), %xmm2
    00003263: 	movapd	(%rsp), %xmm6
    00003268: 	movsd	0xfbb0(%rsp), %xmm0
    00003271: 	mulsd	%xmm2, %xmm2
    00003275: 	mulsd	%xmm0, %xmm0
    00003279: 	subsd	%xmm2, %xmm0
    0000327d: 	addsd	%xmm1, %xmm0
    00003281: 	movsd	init_value(%rip), %xmm1
    00003289: 	mulsd	%xmm1, %xmm1
    0000328d: 	andpd	%xmm0, %xmm6
    00003291: 	comisd	0x18(%rsp), %xmm6
    00003297: 	movapd	%xmm0, %xmm2
    0000329b: 	subsd	%xmm1, %xmm1
    0000329f: 	mulsd	0x10(%rsp), %xmm1
    000032a5: 	subsd	%xmm1, %xmm2
    000032a9: 	jbe	.Ltmp3992 # Offset: 12969
    000032ab: 	divsd	%xmm0, %xmm2
    000032af: 	nop # Size: 1
.Ltmp3992:
    000032b0: 	andpd	(%rsp), %xmm2
    000032b5: 	movsd	0x28(%rsp), %xmm7
    000032bb: 	comisd	%xmm2, %xmm7
    000032bf: 	jbe	.Ltmp3993 # Offset: 12991
.Ltmp4004:
    000032c5: 	addl	$0x1, 0x30(%rsp)
    000032ca: 	movl	0x30(%rsp), %eax
    000032ce: 	cmpl	%edx, %eax
    000032d0: 	jl	.Ltmp3994 # Offset: 13008
.Ltmp3990:
    000032d6: 	movq	%r12, %rsi
    000032d9: 	movq	%r15, %rdi
    000032dc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 13020
    000032e1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000032e8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000032ef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000032f6: 	je	.Ltmp3995 # Offset: 13046
.Ltmp4033:
    000032fc: 	movq	-0x20(%rax), %rbp
    00003300: 	callq	clock@PLT # Offset: 13056
    00003305: 	pxor	%xmm0, %xmm0
    00003309: 	movq	%rax, end_time(%rip)
    00003310: 	movq	%rbp, %rdi
    00003313: 	subq	start_time(%rip), %rax
    0000331a: 	cvtsi2sd	%rax, %xmm0
    0000331f: 	divsd	DATAat0x385e0(%rip), %xmm0
    00003327: 	callq	_Z13record_resultdPKc # Offset: 13095
    0000332c: 	movq	0x1a0(%rsp), %rdi
    00003334: 	cmpq	%r14, %rdi
    00003337: 	je	.Ltmp3996 # Offset: 13111
    00003339: 	movq	0x1b0(%rsp), %rax
    00003341: 	leaq	0x1(%rax), %rsi
    00003345: 	callq	_ZdlPvm@PLT # Offset: 13125
.Ltmp3996:
    0000334a: 	leaq	DATAat0x38550(%rip), %rdx
    00003351: 	movq	%r13, %rsi
    00003354: 	movq	%r12, %rdi
    00003357: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13143
    0000335c: 	movl	iterations(%rip), %esi
    00003362: 	movq	0x1a0(%rsp), %rdi
    0000336a: 	callq	"_Z9summarizePKciiii.constprop.0/1" # Offset: 13162
    0000336f: 	movq	0x1a0(%rsp), %rdi
    00003377: 	cmpq	%r14, %rdi
    0000337a: 	je	.Ltmp3997 # Offset: 13178
    0000337c: 	movq	0x1b0(%rsp), %rax
    00003384: 	leaq	0x1(%rax), %rsi
    00003388: 	callq	_ZdlPvm@PLT # Offset: 13192
.Ltmp3997:
    0000338d: 	movq	0x180(%rsp), %rdi
    00003395: 	leaq	0x190(%rsp), %rax
    0000339d: 	cmpq	%rax, %rdi
    000033a0: 	je	.Ltmp3998 # Offset: 13216
    000033a2: 	movq	0x190(%rsp), %rax
    000033aa: 	leaq	0x1(%rax), %rsi
    000033ae: 	callq	_ZdlPvm@PLT # Offset: 13230
.Ltmp3998:
    000033b3: 	movq	0x160(%rsp), %rdi
    000033bb: 	leaq	0x170(%rsp), %rax
    000033c3: 	cmpq	%rax, %rdi
    000033c6: 	je	.Ltmp3999 # Offset: 13254
    000033c8: 	movq	0x170(%rsp), %rax
    000033d0: 	leaq	0x1(%rax), %rsi
    000033d4: 	callq	_ZdlPvm@PLT # Offset: 13268
.Ltmp3999:
    000033d9: 	movq	0x140(%rsp), %rdi
    000033e1: 	leaq	0x150(%rsp), %rax
    000033e9: 	cmpq	%rax, %rdi
    000033ec: 	je	.Ltmp4000 # Offset: 13292
    000033ee: 	movq	0x150(%rsp), %rax
    000033f6: 	leaq	0x1(%rax), %rsi
    000033fa: 	callq	_ZdlPvm@PLT # Offset: 13306
.Ltmp4000:
    000033ff: 	movq	0x120(%rsp), %rdi
    00003407: 	leaq	0x130(%rsp), %rax
    0000340f: 	cmpq	%rax, %rdi
    00003412: 	je	.Ltmp4001 # Offset: 13330
    00003414: 	movq	0x130(%rsp), %rax
    0000341c: 	leaq	0x1(%rax), %rsi
    00003420: 	callq	_ZdlPvm@PLT # Offset: 13344
.Ltmp4001:
    00003425: 	movq	0x100(%rsp), %rdi
    0000342d: 	cmpq	0xd8(%rsp), %rdi
    00003435: 	je	.Ltmp4002 # Offset: 13365
    00003437: 	movq	0x110(%rsp), %rax
    0000343f: 	leaq	0x1(%rax), %rsi
    00003443: 	callq	_ZdlPvm@PLT # Offset: 13379
.Ltmp4002:
    00003448: 	movq	0xfbc8(%rsp), %rax
    00003450: 	subq	%fs:0x28, %rax
    00003459: 	jne	.Ltmp4003 # Offset: 13401
    0000345f: 	addq	$0xfbd8, %rsp
    00003466: 	popq	%rbx
    00003467: 	popq	%rbp
    00003468: 	popq	%r12
    0000346a: 	popq	%r13
    0000346c: 	popq	%r14
    0000346e: 	popq	%r15
    00003470: 	retq # Offset: 13424
    00003471: 	nopl	(%rax) # Size: 7
.Ltmp3993:
    00003478: 	movl	current_test(%rip), %edx
    0000347e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003485: 	movl	$0x1, %edi
    0000348a: 	xorl	%eax, %eax
    0000348c: 	callq	__printf_chk@PLT # Offset: 13452
    00003491: 	movl	iterations(%rip), %edx
    00003497: 	jmp	.Ltmp4004 # Offset: 13463
    0000349c: 	nopl	(%rax) # Size: 4
.Ltmp3986:
    000034a0: 	movl	current_test(%rip), %edx
    000034a6: 	leaq	DATAat0x381c8(%rip), %rsi
    000034ad: 	movl	$0x1, %edi
    000034b2: 	xorl	%eax, %eax
    000034b4: 	callq	__printf_chk@PLT # Offset: 13492
    000034b9: 	movl	iterations(%rip), %edx
    000034bf: 	jmp	.Ltmp4005 # Offset: 13503
    000034c4: 	nopl	(%rax) # Size: 4
.Ltmp3979:
    000034c8: 	movl	current_test(%rip), %edx
    000034ce: 	leaq	DATAat0x381c8(%rip), %rsi
    000034d5: 	movl	$0x1, %edi
    000034da: 	xorl	%eax, %eax
    000034dc: 	callq	__printf_chk@PLT # Offset: 13532
    000034e1: 	movl	iterations(%rip), %edx
    000034e7: 	jmp	.Ltmp4006 # Offset: 13543
    000034ec: 	nopl	(%rax) # Size: 4
.Ltmp3972:
    000034f0: 	movl	current_test(%rip), %edx
    000034f6: 	leaq	DATAat0x381c8(%rip), %rsi
    000034fd: 	movl	$0x1, %edi
    00003502: 	xorl	%eax, %eax
    00003504: 	callq	__printf_chk@PLT # Offset: 13572
    00003509: 	movl	iterations(%rip), %edx
    0000350f: 	jmp	.Ltmp4007 # Offset: 13583
    00003514: 	nopl	(%rax) # Size: 4
.Ltmp3965:
    00003518: 	movl	current_test(%rip), %edx
    0000351e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003525: 	movl	$0x1, %edi
    0000352a: 	xorl	%eax, %eax
    0000352c: 	callq	__printf_chk@PLT # Offset: 13612
    00003531: 	movl	iterations(%rip), %edx
    00003537: 	jmp	.Ltmp4008 # Offset: 13623
    0000353c: 	nopl	(%rax) # Size: 4
.Ltmp3958:
    00003540: 	movl	current_test(%rip), %edx
    00003546: 	leaq	DATAat0x381c8(%rip), %rsi
    0000354d: 	movl	$0x1, %edi
    00003552: 	xorl	%eax, %eax
    00003554: 	callq	__printf_chk@PLT # Offset: 13652
    00003559: 	movl	iterations(%rip), %edx
    0000355f: 	jmp	.Ltmp4009 # Offset: 13663
    00003564: 	nopl	(%rax) # Size: 4
.Ltmp3951:
    00003568: 	movl	current_test(%rip), %edx
    0000356e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003575: 	movl	$0x1, %edi
    0000357a: 	xorl	%eax, %eax
    0000357c: 	callq	__printf_chk@PLT # Offset: 13692
    00003581: 	movl	iterations(%rip), %edx
    00003587: 	jmp	.Ltmp4010 # Offset: 13703
    0000358c: 	nopl	(%rax) # Size: 4
.Ltmp3944:
    00003590: 	movl	current_test(%rip), %edx
    00003596: 	leaq	DATAat0x381c8(%rip), %rsi
    0000359d: 	movl	$0x1, %edi
    000035a2: 	xorl	%eax, %eax
    000035a4: 	callq	__printf_chk@PLT # Offset: 13732
    000035a9: 	movl	iterations(%rip), %edx
    000035af: 	jmp	.Ltmp4011 # Offset: 13743
    000035b4: 	nopl	(%rax) # Size: 4
.Ltmp3937:
    000035b8: 	movl	current_test(%rip), %edx
    000035be: 	leaq	DATAat0x381c8(%rip), %rsi
    000035c5: 	movl	$0x1, %edi
    000035ca: 	xorl	%eax, %eax
    000035cc: 	callq	__printf_chk@PLT # Offset: 13772
    000035d1: 	movl	iterations(%rip), %edx
    000035d7: 	jmp	.Ltmp4012 # Offset: 13783
    000035dc: 	nopl	(%rax) # Size: 4
.Ltmp3930:
    000035e0: 	movl	current_test(%rip), %edx
    000035e6: 	leaq	DATAat0x381c8(%rip), %rsi
    000035ed: 	movl	$0x1, %edi
    000035f2: 	xorl	%eax, %eax
    000035f4: 	callq	__printf_chk@PLT # Offset: 13812
    000035f9: 	movl	iterations(%rip), %edx
    000035ff: 	jmp	.Ltmp4013 # Offset: 13823
    00003604: 	nopl	(%rax) # Size: 4
.Ltmp3923:
    00003608: 	movl	current_test(%rip), %edx
    0000360e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003615: 	movl	$0x1, %edi
    0000361a: 	xorl	%eax, %eax
    0000361c: 	callq	__printf_chk@PLT # Offset: 13852
    00003621: 	movl	iterations(%rip), %edx
    00003627: 	jmp	.Ltmp4014 # Offset: 13863
    0000362c: 	nopl	(%rax) # Size: 4
.Ltmp3916:
    00003630: 	movl	current_test(%rip), %edx
    00003636: 	leaq	DATAat0x381c8(%rip), %rsi
    0000363d: 	movl	$0x1, %edi
    00003642: 	xorl	%eax, %eax
    00003644: 	callq	__printf_chk@PLT # Offset: 13892
    00003649: 	movl	iterations(%rip), %edx
    0000364f: 	jmp	.Ltmp4015 # Offset: 13903
    00003654: 	nopl	(%rax) # Size: 4
.Ltmp3909:
    00003658: 	movl	current_test(%rip), %edx
    0000365e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003665: 	movl	$0x1, %edi
    0000366a: 	xorl	%eax, %eax
    0000366c: 	callq	__printf_chk@PLT # Offset: 13932
    00003671: 	movl	iterations(%rip), %edx
    00003677: 	jmp	.Ltmp4016 # Offset: 13943
    0000367c: 	nopl	(%rax) # Size: 4
.Ltmp3902:
    00003680: 	movl	current_test(%rip), %edx
    00003686: 	leaq	DATAat0x381c8(%rip), %rsi
    0000368d: 	movl	$0x1, %edi
    00003692: 	xorl	%eax, %eax
    00003694: 	callq	__printf_chk@PLT # Offset: 13972
    00003699: 	movl	iterations(%rip), %edx
    0000369f: 	jmp	.Ltmp4017 # Offset: 13983
    000036a4: 	nopl	(%rax) # Size: 4
.Ltmp3895:
    000036a8: 	movl	current_test(%rip), %edx
    000036ae: 	leaq	DATAat0x381c8(%rip), %rsi
    000036b5: 	movl	$0x1, %edi
    000036ba: 	xorl	%eax, %eax
    000036bc: 	callq	__printf_chk@PLT # Offset: 14012
    000036c1: 	movl	iterations(%rip), %edx
    000036c7: 	jmp	.Ltmp4018 # Offset: 14023
    000036cc: 	nopl	(%rax) # Size: 4
.Ltmp3888:
    000036d0: 	movl	current_test(%rip), %edx
    000036d6: 	leaq	DATAat0x381c8(%rip), %rsi
    000036dd: 	movl	$0x1, %edi
    000036e2: 	xorl	%eax, %eax
    000036e4: 	callq	__printf_chk@PLT # Offset: 14052
    000036e9: 	movl	iterations(%rip), %edx
    000036ef: 	jmp	.Ltmp4019 # Offset: 14063
    000036f4: 	nopl	(%rax) # Size: 4
.Ltmp3877:
    000036f8: 	movl	current_test(%rip), %edx
    000036fe: 	leaq	DATAat0x381c8(%rip), %rsi
    00003705: 	movl	$0x1, %edi
    0000370a: 	xorl	%eax, %eax
    0000370c: 	callq	__printf_chk@PLT # Offset: 14092
    00003711: 	movl	iterations(%rip), %edx
    00003717: 	jmp	.Ltmp4020 # Offset: 14103
    0000371c: 	nopl	(%rax) # Size: 4
.Ltmp3870:
    00003720: 	movl	current_test(%rip), %edx
    00003726: 	leaq	DATAat0x381c8(%rip), %rsi
    0000372d: 	movl	$0x1, %edi
    00003732: 	xorl	%eax, %eax
    00003734: 	callq	__printf_chk@PLT # Offset: 14132
    00003739: 	movl	iterations(%rip), %edx
    0000373f: 	jmp	.Ltmp4021 # Offset: 14143
    00003744: 	nopl	(%rax) # Size: 4
.Ltmp3863:
    00003748: 	movl	current_test(%rip), %edx
    0000374e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003755: 	movl	$0x1, %edi
    0000375a: 	xorl	%eax, %eax
    0000375c: 	callq	__printf_chk@PLT # Offset: 14172
    00003761: 	movl	iterations(%rip), %edx
    00003767: 	jmp	.Ltmp4022 # Offset: 14183
    0000376c: 	nopl	(%rax) # Size: 4
.Ltmp3854:
    00003770: 	movl	current_test(%rip), %edx
    00003776: 	leaq	DATAat0x381c8(%rip), %rsi
    0000377d: 	movl	$0x1, %edi
    00003782: 	xorl	%eax, %eax
    00003784: 	callq	__printf_chk@PLT # Offset: 14212
    00003789: 	movl	iterations(%rip), %edx
    0000378f: 	jmp	.Ltmp4023 # Offset: 14223
    00003794: 	nopl	(%rax) # Size: 4
.Ltmp3847:
    00003798: 	movl	current_test(%rip), %edx
    0000379e: 	leaq	DATAat0x381c8(%rip), %rsi
    000037a5: 	movl	$0x1, %edi
    000037aa: 	xorl	%eax, %eax
    000037ac: 	callq	__printf_chk@PLT # Offset: 14252
    000037b1: 	movl	iterations(%rip), %edx
    000037b7: 	jmp	.Ltmp4024 # Offset: 14263
    000037bc: 	nopl	(%rax) # Size: 4
.Ltmp3840:
    000037c0: 	movl	current_test(%rip), %edx
    000037c6: 	leaq	DATAat0x381c8(%rip), %rsi
    000037cd: 	movl	$0x1, %edi
    000037d2: 	xorl	%eax, %eax
    000037d4: 	callq	__printf_chk@PLT # Offset: 14292
    000037d9: 	movl	iterations(%rip), %edx
    000037df: 	jmp	.Ltmp4025 # Offset: 14303
    000037e4: 	nopl	(%rax) # Size: 4
.Ltmp3833:
    000037e8: 	movl	current_test(%rip), %edx
    000037ee: 	leaq	DATAat0x381c8(%rip), %rsi
    000037f5: 	movl	$0x1, %edi
    000037fa: 	xorl	%eax, %eax
    000037fc: 	callq	__printf_chk@PLT # Offset: 14332
    00003801: 	movl	iterations(%rip), %edx
    00003807: 	jmp	.Ltmp4026 # Offset: 14343
    0000380c: 	nopl	(%rax) # Size: 4
.Ltmp3826:
    00003810: 	movl	current_test(%rip), %edx
    00003816: 	leaq	DATAat0x381c8(%rip), %rsi
    0000381d: 	movl	$0x1, %edi
    00003822: 	xorl	%eax, %eax
    00003824: 	callq	__printf_chk@PLT # Offset: 14372
    00003829: 	movl	iterations(%rip), %edx
    0000382f: 	jmp	.Ltmp4027 # Offset: 14383
    00003834: 	nopl	(%rax) # Size: 4
.Ltmp3819:
    00003838: 	movl	current_test(%rip), %edx
    0000383e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003845: 	movl	$0x1, %edi
    0000384a: 	xorl	%eax, %eax
    0000384c: 	callq	__printf_chk@PLT # Offset: 14412
    00003851: 	movl	iterations(%rip), %edx
    00003857: 	jmp	.Ltmp4028 # Offset: 14423
    0000385c: 	nopl	(%rax) # Size: 4
.Ltmp3812:
    00003860: 	movl	current_test(%rip), %edx
    00003866: 	leaq	DATAat0x381c8(%rip), %rsi
    0000386d: 	movl	$0x1, %edi
    00003872: 	xorl	%eax, %eax
    00003874: 	callq	__printf_chk@PLT # Offset: 14452
    00003879: 	movl	iterations(%rip), %edx
    0000387f: 	jmp	.Ltmp4029 # Offset: 14463
    00003884: 	nopl	(%rax) # Size: 4
.Ltmp3805:
    00003888: 	movl	current_test(%rip), %edx
    0000388e: 	leaq	DATAat0x381c8(%rip), %rsi
    00003895: 	movl	$0x1, %edi
    0000389a: 	xorl	%eax, %eax
    0000389c: 	callq	__printf_chk@PLT # Offset: 14492
    000038a1: 	movl	iterations(%rip), %edx
    000038a7: 	jmp	.Ltmp4030 # Offset: 14503
    000038ac: 	nopl	(%rax) # Size: 4
.Ltmp3798:
    000038b0: 	movl	current_test(%rip), %edx
    000038b6: 	leaq	DATAat0x381c8(%rip), %rsi
    000038bd: 	movl	$0x1, %edi
    000038c2: 	xorl	%eax, %eax
    000038c4: 	callq	__printf_chk@PLT # Offset: 14532
    000038c9: 	movl	iterations(%rip), %edx
    000038cf: 	jmp	.Ltmp4031 # Offset: 14543
.Ltmp3800:
    000038d4: 	movq	-0x8(%rdx), %rax
    000038d8: 	addq	$0x200, %rax
    000038de: 	jmp	.Ltmp4032 # Offset: 14558
.Ltmp3995:
    000038e3: 	movq	-0x8(%rdx), %rax
    000038e7: 	addq	$0x200, %rax
    000038ed: 	jmp	.Ltmp4033 # Offset: 14573
.Ltmp3988:
    000038f2: 	movq	-0x8(%rdx), %rax
    000038f6: 	addq	$0x200, %rax
    000038fc: 	jmp	.Ltmp4034 # Offset: 14588
.Ltmp3981:
    00003901: 	movq	-0x8(%rdx), %rax
    00003905: 	addq	$0x200, %rax
    0000390b: 	jmp	.Ltmp4035 # Offset: 14603
.Ltmp3974:
    00003910: 	movq	-0x8(%rdx), %rax
    00003914: 	addq	$0x200, %rax
    0000391a: 	jmp	.Ltmp4036 # Offset: 14618
.Ltmp3967:
    0000391f: 	movq	-0x8(%rdx), %rax
    00003923: 	addq	$0x200, %rax
    00003929: 	jmp	.Ltmp4037 # Offset: 14633
.Ltmp3960:
    0000392e: 	movq	-0x8(%rdx), %rax
    00003932: 	addq	$0x200, %rax
    00003938: 	jmp	.Ltmp4038 # Offset: 14648
.Ltmp3953:
    0000393d: 	movq	-0x8(%rdx), %rax
    00003941: 	addq	$0x200, %rax
    00003947: 	jmp	.Ltmp4039 # Offset: 14663
.Ltmp3946:
    0000394c: 	movq	-0x8(%rdx), %rax
    00003950: 	addq	$0x200, %rax
    00003956: 	jmp	.Ltmp4040 # Offset: 14678
.Ltmp3939:
    0000395b: 	movq	-0x8(%rdx), %rax
    0000395f: 	addq	$0x200, %rax
    00003965: 	jmp	.Ltmp4041 # Offset: 14693
.Ltmp3932:
    0000396a: 	movq	-0x8(%rdx), %rax
    0000396e: 	addq	$0x200, %rax
    00003974: 	jmp	.Ltmp4042 # Offset: 14708
.Ltmp3925:
    00003979: 	movq	-0x8(%rdx), %rax
    0000397d: 	addq	$0x200, %rax
    00003983: 	jmp	.Ltmp4043 # Offset: 14723
.Ltmp3918:
    00003988: 	movq	-0x8(%rdx), %rax
    0000398c: 	addq	$0x200, %rax
    00003992: 	jmp	.Ltmp4044 # Offset: 14738
.Ltmp3911:
    00003997: 	movq	-0x8(%rdx), %rax
    0000399b: 	addq	$0x200, %rax
    000039a1: 	jmp	.Ltmp4045 # Offset: 14753
.Ltmp3904:
    000039a6: 	movq	-0x8(%rdx), %rax
    000039aa: 	addq	$0x200, %rax
    000039b0: 	jmp	.Ltmp4046 # Offset: 14768
.Ltmp3897:
    000039b5: 	movq	-0x8(%rdx), %rax
    000039b9: 	addq	$0x200, %rax
    000039bf: 	jmp	.Ltmp4047 # Offset: 14783
.Ltmp3890:
    000039c4: 	movq	-0x8(%rdx), %rax
    000039c8: 	addq	$0x200, %rax
    000039ce: 	jmp	.Ltmp4048 # Offset: 14798
.Ltmp3879:
    000039d3: 	movq	-0x8(%rdx), %rax
    000039d7: 	addq	$0x200, %rax
    000039dd: 	jmp	.Ltmp4049 # Offset: 14813
.Ltmp3872:
    000039e2: 	movq	-0x8(%rdx), %rax
    000039e6: 	addq	$0x200, %rax
    000039ec: 	jmp	.Ltmp4050 # Offset: 14828
.Ltmp3865:
    000039f1: 	movq	-0x8(%rdx), %rax
    000039f5: 	addq	$0x200, %rax
    000039fb: 	jmp	.Ltmp4051 # Offset: 14843
.Ltmp3858:
    00003a00: 	movq	-0x8(%rdx), %rax
    00003a04: 	addq	$0x200, %rax
    00003a0a: 	jmp	.Ltmp4052 # Offset: 14858
.Ltmp3856:
    00003a0f: 	movq	-0x8(%rdx), %rax
    00003a13: 	addq	$0x200, %rax
    00003a19: 	jmp	.Ltmp4053 # Offset: 14873
.Ltmp3849:
    00003a1e: 	movq	-0x8(%rdx), %rax
    00003a22: 	addq	$0x200, %rax
    00003a28: 	jmp	.Ltmp4054 # Offset: 14888
.Ltmp3842:
    00003a2d: 	movq	-0x8(%rdx), %rax
    00003a31: 	addq	$0x200, %rax
    00003a37: 	jmp	.Ltmp4055 # Offset: 14903
.Ltmp3835:
    00003a3c: 	movq	-0x8(%rdx), %rax
    00003a40: 	addq	$0x200, %rax
    00003a46: 	jmp	.Ltmp4056 # Offset: 14918
.Ltmp3828:
    00003a4b: 	movq	-0x8(%rdx), %rax
    00003a4f: 	addq	$0x200, %rax
    00003a55: 	jmp	.Ltmp4057 # Offset: 14933
.Ltmp3821:
    00003a5a: 	movq	-0x8(%rdx), %rax
    00003a5e: 	addq	$0x200, %rax
    00003a64: 	jmp	.Ltmp4058 # Offset: 14948
.Ltmp3814:
    00003a69: 	movq	-0x8(%rdx), %rax
    00003a6d: 	addq	$0x200, %rax
    00003a73: 	jmp	.Ltmp4059 # Offset: 14963
.Ltmp3807:
    00003a78: 	movq	-0x8(%rdx), %rax
    00003a7c: 	addq	$0x200, %rax
    00003a82: 	jmp	.Ltmp4060 # Offset: 14978
.Ltmp4003:
    00003a87: 	callq	__stack_chk_fail@PLT # Offset: 14983
    00003a8c: 	endbr64
.Ltmp4069:
    00003a90: 	movq	%rax, %rbx
    00003a93: 	jmp	.Ltmp4061 # Offset: 14995
    00003a95: 	endbr64
    00003a99: 	movq	%rax, %rbp
    00003a9c: 	jmp	.Ltmp4062 # Offset: 15004
    00003a9e: 	endbr64
    00003aa2: 	movq	%rax, %rbp
    00003aa5: 	jmp	.Ltmp4063 # Offset: 15013
.Ltmp4062:
    00003aa7: 	movq	0x1a0(%rsp), %rdi
    00003aaf: 	leaq	0x1b0(%rsp), %rax
    00003ab7: 	cmpq	%rax, %rdi
    00003aba: 	je	.Ltmp4063 # Offset: 15034
.Ltmp4072:
    00003abc: 	movq	0x1b0(%rsp), %rax
    00003ac4: 	leaq	0x1(%rax), %rsi
    00003ac8: 	callq	_ZdlPvm@PLT # Offset: 15048
.Ltmp4063:
    00003acd: 	movq	0x100(%rsp), %rdi
    00003ad5: 	cmpq	0xd8(%rsp), %rdi
    00003add: 	je	.Ltmp4064 # Offset: 15069
    00003adf: 	movq	0x110(%rsp), %rax
    00003ae7: 	leaq	0x1(%rax), %rsi
    00003aeb: 	callq	_ZdlPvm@PLT # Offset: 15083
.Ltmp4064:
    00003af0: 	movq	%rbp, %rdi
    00003af3: 	callq	_Unwind_Resume@PLT # Offset: 15091
.Ltmp4061:
    00003af8: 	movq	0x1a0(%rsp), %rdi
    00003b00: 	cmpq	%r14, %rdi
    00003b03: 	je	.Ltmp4065 # Offset: 15107
    00003b05: 	movq	0x1b0(%rsp), %rax
    00003b0d: 	leaq	0x1(%rax), %rsi
    00003b11: 	callq	_ZdlPvm@PLT # Offset: 15121
.Ltmp4065:
    00003b16: 	movq	0x180(%rsp), %rdi
    00003b1e: 	leaq	0x190(%rsp), %rax
    00003b26: 	cmpq	%rax, %rdi
    00003b29: 	je	.Ltmp4066 # Offset: 15145
    00003b2b: 	movq	0x190(%rsp), %rax
    00003b33: 	leaq	0x1(%rax), %rsi
    00003b37: 	callq	_ZdlPvm@PLT # Offset: 15159
.Ltmp4066:
    00003b3c: 	movq	%rbx, %rbp
.Ltmp4074:
    00003b3f: 	movq	0x160(%rsp), %rdi
    00003b47: 	leaq	0x170(%rsp), %rax
    00003b4f: 	cmpq	%rax, %rdi
    00003b52: 	je	.Ltmp4067 # Offset: 15186
    00003b54: 	movq	0x170(%rsp), %rax
    00003b5c: 	leaq	0x1(%rax), %rsi
    00003b60: 	callq	_ZdlPvm@PLT # Offset: 15200
.Ltmp4067:
    00003b65: 	movq	0x140(%rsp), %rdi
    00003b6d: 	leaq	0x150(%rsp), %rax
    00003b75: 	cmpq	%rax, %rdi
    00003b78: 	je	.Ltmp4068 # Offset: 15224
    00003b7a: 	movq	0x150(%rsp), %rax
    00003b82: 	leaq	0x1(%rax), %rsi
    00003b86: 	callq	_ZdlPvm@PLT # Offset: 15238
.Ltmp4068:
    00003b8b: 	movq	0x120(%rsp), %rdi
    00003b93: 	leaq	0x130(%rsp), %rax
    00003b9b: 	cmpq	%rax, %rdi
    00003b9e: 	je	.Ltmp4063 # Offset: 15262
    00003ba4: 	movq	0x130(%rsp), %rax
    00003bac: 	leaq	0x1(%rax), %rsi
    00003bb0: 	callq	_ZdlPvm@PLT # Offset: 15280
    00003bb5: 	jmp	.Ltmp4063 # Offset: 15285
    00003bba: 	endbr64
    00003bbe: 	jmp	.Ltmp4069 # Offset: 15294
    00003bc3: 	endbr64
    00003bc7: 	jmp	.Ltmp4069 # Offset: 15303
    00003bcc: 	endbr64
    00003bd0: 	jmp	.Ltmp4069 # Offset: 15312
    00003bd5: 	endbr64
    00003bd9: 	jmp	.Ltmp4069 # Offset: 15321
    00003bde: 	endbr64
.Ltmp4071:
    00003be2: 	movq	%rax, %rbp
    00003be5: 	jmp	.Ltmp4070 # Offset: 15333
    00003be7: 	endbr64
    00003beb: 	jmp	.Ltmp4071 # Offset: 15339
    00003bed: 	endbr64
    00003bf1: 	jmp	.Ltmp4071 # Offset: 15345
    00003bf3: 	endbr64
    00003bf7: 	jmp	.Ltmp4071 # Offset: 15351
.Ltmp4070:
    00003bf9: 	movq	0x1a0(%rsp), %rdi
    00003c01: 	cmpq	%r14, %rdi
    00003c04: 	jne	.Ltmp4072 # Offset: 15364
    00003c0a: 	jmp	.Ltmp4063 # Offset: 15370
    00003c0f: 	endbr64
    00003c13: 	jmp	.Ltmp4071 # Offset: 15379
    00003c15: 	endbr64
    00003c19: 	jmp	.Ltmp4071 # Offset: 15385
    00003c1b: 	endbr64
    00003c1f: 	jmp	.Ltmp4071 # Offset: 15391
    00003c21: 	endbr64
    00003c25: 	jmp	.Ltmp4071 # Offset: 15397
    00003c27: 	endbr64
.Ltmp4077:
    00003c2b: 	movq	%rax, %rbp
    00003c2e: 	jmp	.Ltmp4073 # Offset: 15406
    00003c30: 	endbr64
    00003c34: 	movq	%rax, %rbp
    00003c37: 	jmp	.Ltmp4074 # Offset: 15415
    00003c3c: 	endbr64
.Ltmp4076:
    00003c40: 	movq	%rax, %rbp
    00003c43: 	jmp	.Ltmp4075 # Offset: 15427
    00003c45: 	endbr64
    00003c49: 	jmp	.Ltmp4076 # Offset: 15433
.Ltmp4073:
    00003c4b: 	movq	0x1a0(%rsp), %rdi
    00003c53: 	cmpq	%r14, %rdi
    00003c56: 	je	.Ltmp4074 # Offset: 15446
    00003c5c: 	movq	0x1b0(%rsp), %rax
    00003c64: 	leaq	0x1(%rax), %rsi
    00003c68: 	callq	_ZdlPvm@PLT # Offset: 15464
    00003c6d: 	jmp	.Ltmp4074 # Offset: 15469
.Ltmp4075:
    00003c72: 	movq	0x1a0(%rsp), %rdi
    00003c7a: 	cmpq	%r14, %rdi
    00003c7d: 	je	.Ltmp4067 # Offset: 15485
    00003c83: 	movq	0x1b0(%rsp), %rax
    00003c8b: 	leaq	0x1(%rax), %rsi
    00003c8f: 	callq	_ZdlPvm@PLT # Offset: 15503
    00003c94: 	jmp	.Ltmp4067 # Offset: 15508
    00003c99: 	endbr64
    00003c9d: 	movq	%rax, %rbx
    00003ca0: 	jmp	.Ltmp4065 # Offset: 15520
    00003ca5: 	endbr64
    00003ca9: 	jmp	.Ltmp4069 # Offset: 15529
    00003cae: 	endbr64
    00003cb2: 	jmp	.Ltmp4069 # Offset: 15538
    00003cb7: 	endbr64
    00003cbb: 	jmp	.Ltmp4077 # Offset: 15547
    00003cc0: 	endbr64
.Ltmp4079:
    00003cc4: 	movq	%rax, %rbp
    00003cc7: 	jmp	.Ltmp4078 # Offset: 15559
    00003cc9: 	endbr64
    00003ccd: 	jmp	.Ltmp4079 # Offset: 15565
    00003ccf: 	endbr64
    00003cd3: 	jmp	.Ltmp4079 # Offset: 15571
    00003cd5: 	endbr64
    00003cd9: 	movq	%rax, %rbp
    00003cdc: 	jmp	.Ltmp4068 # Offset: 15580
.Ltmp4078:
    00003ce1: 	movq	0x1a0(%rsp), %rdi
    00003ce9: 	cmpq	%r14, %rdi
    00003cec: 	je	.Ltmp4068 # Offset: 15596
    00003cf2: 	movq	0x1b0(%rsp), %rax
    00003cfa: 	leaq	0x1(%rax), %rsi
    00003cfe: 	callq	_ZdlPvm@PLT # Offset: 15614
    00003d03: 	jmp	.Ltmp4068 # Offset: 15619
    00003d08: 	endbr64
    00003d0c: 	jmp	.Ltmp4079 # Offset: 15628
    00003d0e: 	endbr64
    00003d12: 	jmp	.Ltmp4079 # Offset: 15634
    00003d14: 	endbr64
    00003d18: 	jmp	.Ltmp4079 # Offset: 15640
    00003d1a: 	endbr64
    00003d1e: 	jmp	.Ltmp4079 # Offset: 15646
    00003d20: 	endbr64
    00003d24: 	jmp	.Ltmp4076 # Offset: 15652
    00003d29: 	endbr64
    00003d2d: 	jmp	.Ltmp4076 # Offset: 15661
    00003d32: 	endbr64
    00003d36: 	jmp	.Ltmp4076 # Offset: 15670
    00003d3b: 	endbr64
    00003d3f: 	jmp	.Ltmp4076 # Offset: 15679
    00003d44: 	endbr64
    00003d48: 	jmp	.Ltmp4076 # Offset: 15688
    00003d4d: 	endbr64
    00003d51: 	jmp	.Ltmp4076 # Offset: 15697
    00003d56: 	endbr64
    00003d5a: 	movq	%rax, %rbp
    00003d5d: 	jmp	.Ltmp4067 # Offset: 15709
    00003d62: 	endbr64
    00003d66: 	jmp	.Ltmp4079 # Offset: 15718
DWARF CFI Instructions:
    <empty>
End of Function "_Z16TestOneTypeFloatIdEvd"

Binary Function "_fini" after disassembly {
  Number      : 123
  State       : disassembled
  Address     : 0x3770c
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x3770c
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0122:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 124 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 2961 instructions were shortened
BOLT-INFO: removed 335 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 119 out of 151 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x205a0c
