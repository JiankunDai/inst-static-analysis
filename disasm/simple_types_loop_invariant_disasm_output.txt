BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x44028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x43ff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x1470
  Size        : 0x169
  MaxSize     : 0x170
  Offset      : 0x1470
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	testl	%edi, %edi
    0000000e: 	jle	.Ltmp1 # Offset: 14
    00000014: 	leal	-0x1(%rdi), %eax
    00000017: 	movl	%edi, %r13d
    0000001a: 	movq	%rsi, %r14
    0000001d: 	movq	%rsi, %rbx
    00000020: 	leaq	0x8(%rsi,%rax,8), %r12
    00000025: 	leaq	DATAat0x3d150(%rip), %rbp
    0000002c: 	nopl	(%rax) # Size: 4
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x3d136(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000068: 	movq	DATAat0x3d6c8(%rip), %rbx
.Ltmp5:
    0000006f: 	movq	%rbx, %xmm0
    00000074: 	callq	_Z9TestLoopsIaEvd # Offset: 116
    00000079: 	movq	%rbx, %xmm0
    0000007e: 	callq	_Z9TestLoopsIhEvd # Offset: 126
    00000083: 	movq	%rbx, %xmm0
    00000088: 	callq	_Z9TestLoopsIsEvd # Offset: 136
    0000008d: 	movq	%rbx, %xmm0
    00000092: 	callq	_Z9TestLoopsItEvd # Offset: 146
    00000097: 	movq	%rbx, %xmm0
    0000009c: 	callq	_Z9TestLoopsIiEvd # Offset: 156
    000000a1: 	movq	%rbx, %xmm0
    000000a6: 	callq	_Z9TestLoopsIjEvd # Offset: 166
    000000ab: 	movl	iterations(%rip), %edx
    000000b1: 	movq	%rbx, %xmm0
    000000b6: 	testl	%edx, %edx
    000000b8: 	leal	0x3(%rdx), %eax
    000000bb: 	cmovnsl	%edx, %eax
    000000be: 	sarl	$0x2, %eax
    000000c1: 	movl	%eax, iterations(%rip)
    000000c7: 	callq	_Z9TestLoopsIlEvd # Offset: 199
    000000cc: 	movq	%rbx, %xmm0
    000000d1: 	callq	_Z9TestLoopsImEvd # Offset: 209
    000000d6: 	movq	%rbx, %xmm0
    000000db: 	callq	_Z9TestLoopsIfEvd # Offset: 219
    000000e0: 	movq	%rbx, %xmm0
    000000e5: 	callq	_Z9TestLoopsIdEvd # Offset: 229
    000000ea: 	movq	%rbx, %xmm0
    000000ef: 	callq	_Z9TestLoopsIeEvd # Offset: 239
    000000f4: 	popq	%rbx
    000000f5: 	xorl	%eax, %eax
    000000f7: 	popq	%rbp
    000000f8: 	popq	%r12
    000000fa: 	popq	%r13
    000000fc: 	popq	%r14
    000000fe: 	retq # Offset: 254
.Ltmp3:
    000000ff: 	movq	0x8(%r14), %rdi
    00000103: 	movl	$0xa, %edx
    00000108: 	xorl	%esi, %esi
    0000010a: 	callq	strtol@PLT # Offset: 266
    0000010f: 	movl	%eax, iterations(%rip)
    00000115: 	cmpl	$0x2, %r13d
    00000119: 	jle	.Ltmp4 # Offset: 281
    0000011f: 	movq	0x10(%r14), %rdi
    00000123: 	xorl	%esi, %esi
    00000125: 	callq	strtod@PLT # Offset: 293
    0000012a: 	movsd	%xmm0, init_value(%rip)
    00000132: 	cmpl	$0x3, %r13d
    00000136: 	jle	.Ltmp4 # Offset: 310
    0000013c: 	movq	0x18(%r14), %rdi
    00000140: 	xorl	%esi, %esi
    00000142: 	callq	strtod@PLT # Offset: 322
    00000147: 	movq	%xmm0, %rbx
    0000014c: 	jmp	.Ltmp5 # Offset: 332
.Ltmp1:
    00000151: 	leaq	DATAat0x3d136(%rip), %rsi
    00000158: 	movl	$0x1, %edi
    0000015d: 	xorl	%eax, %eax
    0000015f: 	callq	__printf_chk@PLT # Offset: 351
    00000164: 	jmp	.Ltmp4 # Offset: 356
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x16c0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x16c0
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x43fe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x16f0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x16f0
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp6 # Offset: 17
    00000013: 	movq	DATAat0x43fe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp6 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp6:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x1720
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1720
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp7 # Offset: 34
    00000024: 	movq	DATAat0x43ff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp7 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x1760
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1760
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp8 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp9 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp9:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp8:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x17a0
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x17a0
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x17b0
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x17b0
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp10 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp11 # Offset: 38
.Ltmp10:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp12 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp11:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp12:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x3d008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x1850
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x1850
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp13 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp14 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp15:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp15 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp28:
    00000069: 	leaq	DATAat0x3d152(%rip), %rbp
    00000070: 	leaq	DATAat0x3d028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x3d068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp16 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x3d6d8(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x3d098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp17 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp21:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp18 # Offset: 244
    000000fa: 	movq	DATAat0x3d6c0(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp22:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x3d6c0(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp19 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp19:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x3d137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x3d6d8(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp20 # Offset: 398
.Ltmp17:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp21 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp22 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp18:
    000001c8: 	movq	DATAat0x3d6c8(%rip), %rsi
    000001cf: 	movq	DATAat0x3d6c0(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp19 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp20:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp16 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp23 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp24:
    00000210: 	addq	$0x10, %rax
.Ltmp23:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp24 # Offset: 542
.Ltmp29:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x3d0c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp25 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp26 # Offset: 592
.Ltmp25:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp13:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp26:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp27:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp27 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x3d112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp13 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp14:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp28 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp16:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp29 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1b80
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1b80
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp30 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp31 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp32:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp32 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp37:
    0000006a: 	leaq	DATAat0x3d152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x3d0f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x3d138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x3d152(%rip), %r8
    000000a1: 	leaq	DATAat0x3d126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp33 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp34:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x3d137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp34 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp33 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp35 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp36:
    00000140: 	addq	$0x10, %rax
.Ltmp35:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp36 # Offset: 334
.Ltmp38:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x3d0c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp30:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp31:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp37 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp33:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp38 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1d30
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1d30
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1d50
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1d50
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1d90
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1d90
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1dc0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1dc0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1df0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1df0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1e20
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1e20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1e50
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1e50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1e80
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1e80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1eb0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1eb0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1ee0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1ee0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1f10
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1f10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1f40
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1f40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1f70
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1f70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1fa0
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x1fa0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x1fe0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1fe0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x2010
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2010
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x2040
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2040
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x2070
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2070
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x20a0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x20a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x20d0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2100
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2100
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x2130
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2130
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x2160
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2160
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x2190
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2190
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x21c0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x21c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_Z8test_sqrIaET_S0_" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x21f0
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x21f0
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIaET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIaET_S0_"

Binary Function "_Z9test_hashIaET_S0_" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x2200
  Size        : 0x24
  MaxSize     : 0x30
  Offset      : 0x2200
  Section     : .text
  Orc Section : .local.text._Z9test_hashIaET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	movl	$0xffffffa9, %eax
    00000009: 	imull	%edi, %eax
    0000000c: 	leal	-0x46(%rax), %edx
    0000000f: 	movsbw	%dl, %cx
    00000013: 	sarb	$0x7, %dl
    00000016: 	movl	%ecx, %eax
    00000018: 	shll	$0x6, %eax
    0000001b: 	addl	%ecx, %eax
    0000001d: 	sarw	$0xd, %ax
    00000021: 	subl	%edx, %eax
    00000023: 	retq # Offset: 35
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIaET_S0_"

Binary Function "_Z8test_sqrIhET_S0_" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x2230
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x2230
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIhET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIhET_S0_"

Binary Function "_Z9test_hashIhET_S0_" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x2240
  Size        : 0x15
  MaxSize     : 0x20
  Offset      : 0x2240
  Section     : .text
  Orc Section : .local.text._Z9test_hashIhET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	movl	$0xffffffa9, %eax
    00000009: 	imull	%edi, %eax
    0000000c: 	subl	$0x46, %eax
    0000000f: 	cmpb	$-0x1, %al
    00000011: 	setae	%al
    00000014: 	retq # Offset: 20
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIhET_S0_"

Binary Function "_Z8test_sqrIsET_S0_" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x2260
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x2260
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIsET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIsET_S0_"

Binary Function "_Z9test_hashIsET_S0_" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x2270
  Size        : 0x22
  MaxSize     : 0x30
  Offset      : 0x2270
  Section     : .text
  Orc Section : .local.text._Z9test_hashIsET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	imulw	$0xc0a9, %di, %di
    00000009: 	addw	$0x26ba, %di
    0000000e: 	movswl	%di, %edx
    00000011: 	sarw	$0xf, %di
    00000015: 	movl	%edx, %eax
    00000017: 	shll	$0xe, %eax
    0000001a: 	addl	%edx, %eax
    0000001c: 	sarl	$0x1d, %eax
    0000001f: 	subl	%edi, %eax
    00000021: 	retq # Offset: 33
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIsET_S0_"

Binary Function "_Z8test_sqrItET_S0_" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x22a0
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x22a0
  Section     : .text
  Orc Section : .local.text._Z8test_sqrItET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrItET_S0_"

Binary Function "_Z9test_hashItET_S0_" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x22b0
  Size        : 0x18
  MaxSize     : 0x20
  Offset      : 0x22b0
  Section     : .text
  Orc Section : .local.text._Z9test_hashItET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	imulw	$0xc0a9, %di, %di
    00000009: 	xorl	%eax, %eax
    0000000b: 	addw	$0x26ba, %di
    00000010: 	cmpw	$-0x1, %di
    00000014: 	setae	%al
    00000017: 	retq # Offset: 23
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashItET_S0_"

Binary Function "_Z8test_sqrIiET_S0_" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x22d0
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x22d0
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIiET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIiET_S0_"

Binary Function "_Z9test_hashIiET_S0_" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x22e0
  Size        : 0x24
  MaxSize     : 0x30
  Offset      : 0x22e0
  Section     : .text
  Orc Section : .local.text._Z9test_hashIiET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	imull	$0xe423c0a9, %edi, %edi
    0000000a: 	addl	$0xa926ba, %edi
    00000010: 	movslq	%edi, %rax
    00000013: 	sarl	$0x1f, %edi
    00000016: 	imulq	$0xa9debbf, %rax, %rax
    0000001d: 	sarq	$0x2c, %rax
    00000021: 	subl	%edi, %eax
    00000023: 	retq # Offset: 35
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIiET_S0_"

Binary Function "_Z8test_sqrIjET_S0_" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x2310
  Size        : 0xa
  MaxSize     : 0x10
  Offset      : 0x2310
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIjET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	movl	%edi, %eax
    00000006: 	imull	%edi, %eax
    00000009: 	retq # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIjET_S0_"

Binary Function "_Z9test_hashIjET_S0_" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x2320
  Size        : 0x1c
  MaxSize     : 0x20
  Offset      : 0x2320
  Section     : .text
  Orc Section : .local.text._Z9test_hashIjET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	imull	$0xe423c0a9, %edi, %edi
    0000000a: 	leal	0xa926ba(%rdi), %eax
    00000010: 	imulq	$0xa9debbf, %rax, %rax
    00000017: 	shrq	$0x2c, %rax
    0000001b: 	retq # Offset: 27
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIjET_S0_"

Binary Function "_Z8test_sqrIlET_S0_" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x2340
  Size        : 0xc
  MaxSize     : 0x10
  Offset      : 0x2340
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIlET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	movq	%rdi, %rax
    00000007: 	imulq	%rdi, %rax
    0000000b: 	retq # Offset: 11
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIlET_S0_"

Binary Function "_Z9test_hashIlET_S0_" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x2350
  Size        : 0x39
  MaxSize     : 0x40
  Offset      : 0x2350
  Section     : .text
  Orc Section : .local.text._Z9test_hashIlET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	imulq	$0x1600d, %rdi, %rcx
    0000000b: 	movabsq	$0x2a77aefbed8e24b, %rdx
    00000015: 	addq	$0x7b, %rcx
    00000019: 	imulq	$0x1600d, %rcx, %rcx
    00000020: 	addq	$0x7b, %rcx
    00000024: 	movq	%rcx, %rax
    00000027: 	sarq	$0x3f, %rcx
    0000002b: 	imulq	%rdx
    0000002e: 	sarq	$0xa, %rdx
    00000032: 	movq	%rdx, %rax
    00000035: 	subq	%rcx, %rax
    00000038: 	retq # Offset: 56
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIlET_S0_"

Binary Function "_Z8test_sqrImET_S0_" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x2390
  Size        : 0xc
  MaxSize     : 0x10
  Offset      : 0x2390
  Section     : .text
  Orc Section : .local.text._Z8test_sqrImET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	movq	%rdi, %rax
    00000007: 	imulq	%rdi, %rax
    0000000b: 	retq # Offset: 11
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrImET_S0_"

Binary Function "_Z9test_hashImET_S0_" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x23a0
  Size        : 0x34
  MaxSize     : 0x40
  Offset      : 0x23a0
  Section     : .text
  Orc Section : .local.text._Z9test_hashImET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	movabsq	$0x1e423c0a9, %rax
    0000000e: 	movabsq	$0x2a77aefbed8e24b, %rcx
    00000018: 	imulq	%rax, %rdi
    0000001c: 	movq	%rdi, %rdx
    0000001f: 	addq	$0xa926ba, %rdx
    00000026: 	movq	%rdx, %rax
    00000029: 	mulq	%rcx
    0000002c: 	movq	%rdx, %rax
    0000002f: 	shrq	$0xa, %rax
    00000033: 	retq # Offset: 51
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashImET_S0_"

Binary Function "_Z8test_sqrIfET_S0_" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0x23e0
  Size        : 0x9
  MaxSize     : 0x10
  Offset      : 0x23e0
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIfET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	mulss	%xmm0, %xmm0
    00000008: 	retq # Offset: 8
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIfET_S0_"

Binary Function "_Z9test_hashIfET_S0_" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x23f0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x23f0
  Section     : .text
  Orc Section : .local.text._Z9test_hashIfET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	movss	DATAat0x3d680(%rip), %xmm2
    0000000c: 	movss	DATAat0x3d684(%rip), %xmm1
    00000014: 	mulss	%xmm2, %xmm0
    00000018: 	addss	%xmm1, %xmm0
    0000001c: 	mulss	%xmm2, %xmm0
    00000020: 	addss	%xmm1, %xmm0
    00000024: 	divss	DATAat0x3d688(%rip), %xmm0
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIfET_S0_"

Binary Function "_Z8test_sqrIdET_S0_" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x2420
  Size        : 0x9
  MaxSize     : 0x10
  Offset      : 0x2420
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIdET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	mulsd	%xmm0, %xmm0
    00000008: 	retq # Offset: 8
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIdET_S0_"

Binary Function "_Z9test_hashIdET_S0_" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x2430
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2430
  Section     : .text
  Orc Section : .local.text._Z9test_hashIdET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	movsd	DATAat0x3d690(%rip), %xmm2
    0000000c: 	movsd	DATAat0x3d698(%rip), %xmm1
    00000014: 	mulsd	%xmm2, %xmm0
    00000018: 	addsd	%xmm1, %xmm0
    0000001c: 	mulsd	%xmm2, %xmm0
    00000020: 	addsd	%xmm1, %xmm0
    00000024: 	divsd	DATAat0x3d6a0(%rip), %xmm0
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIdET_S0_"

Binary Function "_Z8test_sqrIeET_S0_" after disassembly {
  Number      : 58
  State       : disassembled
  Address     : 0x2460
  Size        : 0xb
  MaxSize     : 0x10
  Offset      : 0x2460
  Section     : .text
  Orc Section : .local.text._Z8test_sqrIeET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	endbr64
    00000004: 	fldt	0x8(%rsp)
    00000008: 	fmul	%st(0), %st
    0000000a: 	retq # Offset: 10
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_sqrIeET_S0_"

Binary Function "_Z9test_hashIeET_S0_" after disassembly {
  Number      : 59
  State       : disassembled
  Address     : 0x2470
  Size        : 0x25
  MaxSize     : 0x30
  Offset      : 0x2470
  Section     : .text
  Orc Section : .local.text._Z9test_hashIeET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	endbr64
    00000004: 	flds	DATAat0x3d680(%rip)
    0000000a: 	fldt	0x8(%rsp)
    0000000e: 	fmul	%st(1), %st
    00000010: 	flds	DATAat0x3d684(%rip)
    00000016: 	fadd	%st, %st(1)
    00000018: 	fxch	%st(1)
    0000001a: 	fmulp	%st, %st(2)
    0000001c: 	faddp	%st, %st(1)
    0000001e: 	fdivl	DATAat0x3d6a0(%rip)
    00000024: 	retq # Offset: 36
DWARF CFI Instructions:
    <empty>
End of Function "_Z9test_hashIeET_S0_"

Binary Function "_Z8test_cosIaET_S0_" after disassembly {
  Number      : 60
  State       : disassembled
  Address     : 0x24a0
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x24a0
  Section     : .text
  Orc Section : .local.text._Z8test_cosIaET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	movsbl	%dil, %edi
    00000008: 	pxor	%xmm0, %xmm0
    0000000c: 	subq	$0x8, %rsp
    00000010: 	cvtsi2sd	%edi, %xmm0
    00000014: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001c: 	callq	cos@PLT # Offset: 28
    00000021: 	addq	$0x8, %rsp
    00000025: 	cvttsd2si	%xmm0, %eax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIaET_S0_"

Binary Function "_Z8test_cosIhET_S0_" after disassembly {
  Number      : 61
  State       : disassembled
  Address     : 0x24d0
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x24d0
  Section     : .text
  Orc Section : .local.text._Z8test_cosIhET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	endbr64
    00000004: 	movzbl	%dil, %edi
    00000008: 	pxor	%xmm0, %xmm0
    0000000c: 	subq	$0x8, %rsp
    00000010: 	cvtsi2sd	%edi, %xmm0
    00000014: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001c: 	callq	cos@PLT # Offset: 28
    00000021: 	addq	$0x8, %rsp
    00000025: 	cvttsd2si	%xmm0, %eax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIhET_S0_"

Binary Function "_Z8test_cosIsET_S0_" after disassembly {
  Number      : 62
  State       : disassembled
  Address     : 0x2500
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2500
  Section     : .text
  Orc Section : .local.text._Z8test_cosIsET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	endbr64
    00000004: 	movswl	%di, %edi
    00000007: 	pxor	%xmm0, %xmm0
    0000000b: 	subq	$0x8, %rsp
    0000000f: 	cvtsi2sd	%edi, %xmm0
    00000013: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001b: 	callq	cos@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %eax
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIsET_S0_"

Binary Function "_Z8test_cosItET_S0_" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x2530
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2530
  Section     : .text
  Orc Section : .local.text._Z8test_cosItET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	movzwl	%di, %edi
    00000007: 	pxor	%xmm0, %xmm0
    0000000b: 	subq	$0x8, %rsp
    0000000f: 	cvtsi2sd	%edi, %xmm0
    00000013: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001b: 	callq	cos@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %eax
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosItET_S0_"

Binary Function "_Z8test_cosIiET_S0_" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x2560
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x2560
  Section     : .text
  Orc Section : .local.text._Z8test_cosIiET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pxor	%xmm0, %xmm0
    00000008: 	subq	$0x8, %rsp
    0000000c: 	cvtsi2sd	%edi, %xmm0
    00000010: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    00000018: 	callq	cos@PLT # Offset: 24
    0000001d: 	addq	$0x8, %rsp
    00000021: 	cvttsd2si	%xmm0, %eax
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIiET_S0_"

Binary Function "_Z8test_cosIjET_S0_" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x2590
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x2590
  Section     : .text
  Orc Section : .local.text._Z8test_cosIjET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	movl	%edi, %edi
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	subq	$0x8, %rsp
    0000000e: 	cvtsi2sd	%rdi, %xmm0
    00000013: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001b: 	callq	cos@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %rax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIjET_S0_"

Binary Function "_Z8test_cosIlET_S0_" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x25c0
  Size        : 0x28
  MaxSize     : 0x30
  Offset      : 0x25c0
  Section     : .text
  Orc Section : .local.text._Z8test_cosIlET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pxor	%xmm0, %xmm0
    00000008: 	subq	$0x8, %rsp
    0000000c: 	cvtsi2sd	%rdi, %xmm0
    00000011: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    00000019: 	callq	cos@PLT # Offset: 25
    0000001e: 	addq	$0x8, %rsp
    00000022: 	cvttsd2si	%xmm0, %rax
    00000027: 	retq # Offset: 39
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIlET_S0_"

Binary Function "_Z8test_cosImET_S0_" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x25f0
  Size        : 0x73
  MaxSize     : 0x80
  Offset      : 0x25f0
  Section     : .text
  Orc Section : .local.text._Z8test_cosImET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	testq	%rdi, %rdi
    0000000b: 	js	.Ltmp39 # Offset: 11
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	cvtsi2sd	%rdi, %xmm0
.Ltmp41:
    00000016: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000001e: 	callq	cos@PLT # Offset: 30
    00000023: 	movsd	DATAat0x3d6b0(%rip), %xmm1
    0000002b: 	comisd	%xmm1, %xmm0
    0000002f: 	jae	.Ltmp40 # Offset: 47
    00000031: 	cvttsd2si	%xmm0, %rax
    00000036: 	addq	$0x8, %rsp
    0000003a: 	retq # Offset: 58
    0000003b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp40:
    00000040: 	subsd	%xmm1, %xmm0
    00000044: 	addq	$0x8, %rsp
    00000048: 	cvttsd2si	%xmm0, %rax
    0000004d: 	btcq	$0x3f, %rax
    00000052: 	retq # Offset: 82
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp39:
    00000058: 	movq	%rdi, %rax
    0000005b: 	andl	$0x1, %edi
    0000005e: 	pxor	%xmm0, %xmm0
    00000062: 	shrq	%rax
    00000065: 	orq	%rdi, %rax
    00000068: 	cvtsi2sd	%rax, %xmm0
    0000006d: 	addsd	%xmm0, %xmm0
    00000071: 	jmp	.Ltmp41 # Offset: 113
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosImET_S0_"

Binary Function "_Z8test_cosIfET_S0_" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x2670
  Size        : 0x22
  MaxSize     : 0x30
  Offset      : 0x2670
  Section     : .text
  Orc Section : .local.text._Z8test_cosIfET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	cvtss2sd	%xmm0, %xmm0
    0000000c: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    00000014: 	callq	cos@PLT # Offset: 20
    00000019: 	addq	$0x8, %rsp
    0000001d: 	cvtsd2ss	%xmm0, %xmm0
    00000021: 	retq # Offset: 33
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIfET_S0_"

Binary Function "_Z8test_cosIdET_S0_" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x26a0
  Size        : 0x11
  MaxSize     : 0x20
  Offset      : 0x26a0
  Section     : .text
  Orc Section : .local.text._Z8test_cosIdET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	addsd	DATAat0x3d6a8(%rip), %xmm0
    0000000c: 	jmp	cos@PLT # TAILCALL  # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIdET_S0_"

Binary Function "_Z10test_powerIdET_S0_" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x26c0
  Size        : 0x11
  MaxSize     : 0x20
  Offset      : 0x26c0
  Section     : .text
  Orc Section : .local.text._Z10test_powerIdET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    0000000c: 	jmp	pow@PLT # TAILCALL  # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIdET_S0_"

Binary Function "_Z10test_powerIaET_S0_" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x26e0
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x26e0
  Section     : .text
  Orc Section : .local.text._Z10test_powerIaET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	movsbl	%dil, %edi
    00000008: 	pxor	%xmm0, %xmm0
    0000000c: 	subq	$0x8, %rsp
    00000010: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000018: 	cvtsi2sd	%edi, %xmm0
    0000001c: 	callq	pow@PLT # Offset: 28
    00000021: 	addq	$0x8, %rsp
    00000025: 	cvttsd2si	%xmm0, %eax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIaET_S0_"

Binary Function "_Z10test_powerIhET_S0_" after disassembly {
  Number      : 72
  State       : disassembled
  Address     : 0x2710
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x2710
  Section     : .text
  Orc Section : .local.text._Z10test_powerIhET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	movzbl	%dil, %edi
    00000008: 	pxor	%xmm0, %xmm0
    0000000c: 	subq	$0x8, %rsp
    00000010: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000018: 	cvtsi2sd	%edi, %xmm0
    0000001c: 	callq	pow@PLT # Offset: 28
    00000021: 	addq	$0x8, %rsp
    00000025: 	cvttsd2si	%xmm0, %eax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIhET_S0_"

Binary Function "_Z10test_powerIsET_S0_" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0x2740
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2740
  Section     : .text
  Orc Section : .local.text._Z10test_powerIsET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	movswl	%di, %edi
    00000007: 	pxor	%xmm0, %xmm0
    0000000b: 	subq	$0x8, %rsp
    0000000f: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000017: 	cvtsi2sd	%edi, %xmm0
    0000001b: 	callq	pow@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %eax
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIsET_S0_"

Binary Function "_Z10test_powerItET_S0_" after disassembly {
  Number      : 74
  State       : disassembled
  Address     : 0x2770
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2770
  Section     : .text
  Orc Section : .local.text._Z10test_powerItET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	endbr64
    00000004: 	movzwl	%di, %edi
    00000007: 	pxor	%xmm0, %xmm0
    0000000b: 	subq	$0x8, %rsp
    0000000f: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000017: 	cvtsi2sd	%edi, %xmm0
    0000001b: 	callq	pow@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %eax
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerItET_S0_"

Binary Function "_Z10test_powerIiET_S0_" after disassembly {
  Number      : 75
  State       : disassembled
  Address     : 0x27a0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x27a0
  Section     : .text
  Orc Section : .local.text._Z10test_powerIiET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	endbr64
    00000004: 	pxor	%xmm0, %xmm0
    00000008: 	subq	$0x8, %rsp
    0000000c: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000014: 	cvtsi2sd	%edi, %xmm0
    00000018: 	callq	pow@PLT # Offset: 24
    0000001d: 	addq	$0x8, %rsp
    00000021: 	cvttsd2si	%xmm0, %eax
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIiET_S0_"

Binary Function "_Z10test_powerIjET_S0_" after disassembly {
  Number      : 76
  State       : disassembled
  Address     : 0x27d0
  Size        : 0x2a
  MaxSize     : 0x30
  Offset      : 0x27d0
  Section     : .text
  Orc Section : .local.text._Z10test_powerIjET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	endbr64
    00000004: 	movl	%edi, %edi
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	subq	$0x8, %rsp
    0000000e: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000016: 	cvtsi2sd	%rdi, %xmm0
    0000001b: 	callq	pow@PLT # Offset: 27
    00000020: 	addq	$0x8, %rsp
    00000024: 	cvttsd2si	%xmm0, %rax
    00000029: 	retq # Offset: 41
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIjET_S0_"

Binary Function "_Z10test_powerIlET_S0_" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0x2800
  Size        : 0x28
  MaxSize     : 0x30
  Offset      : 0x2800
  Section     : .text
  Orc Section : .local.text._Z10test_powerIlET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pxor	%xmm0, %xmm0
    00000008: 	subq	$0x8, %rsp
    0000000c: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000014: 	cvtsi2sd	%rdi, %xmm0
    00000019: 	callq	pow@PLT # Offset: 25
    0000001e: 	addq	$0x8, %rsp
    00000022: 	cvttsd2si	%xmm0, %rax
    00000027: 	retq # Offset: 39
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIlET_S0_"

Binary Function "_Z10test_powerImET_S0_" after disassembly {
  Number      : 78
  State       : disassembled
  Address     : 0x2830
  Size        : 0x73
  MaxSize     : 0x80
  Offset      : 0x2830
  Section     : .text
  Orc Section : .local.text._Z10test_powerImET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	testq	%rdi, %rdi
    0000000b: 	js	.Ltmp42 # Offset: 11
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	cvtsi2sd	%rdi, %xmm0
.Ltmp44:
    00000016: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    0000001e: 	callq	pow@PLT # Offset: 30
    00000023: 	movsd	DATAat0x3d6b0(%rip), %xmm1
    0000002b: 	comisd	%xmm1, %xmm0
    0000002f: 	jae	.Ltmp43 # Offset: 47
    00000031: 	cvttsd2si	%xmm0, %rax
    00000036: 	addq	$0x8, %rsp
    0000003a: 	retq # Offset: 58
    0000003b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp43:
    00000040: 	subsd	%xmm1, %xmm0
    00000044: 	addq	$0x8, %rsp
    00000048: 	cvttsd2si	%xmm0, %rax
    0000004d: 	btcq	$0x3f, %rax
    00000052: 	retq # Offset: 82
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp42:
    00000058: 	movq	%rdi, %rax
    0000005b: 	andl	$0x1, %edi
    0000005e: 	pxor	%xmm0, %xmm0
    00000062: 	shrq	%rax
    00000065: 	orq	%rdi, %rax
    00000068: 	cvtsi2sd	%rax, %xmm0
    0000006d: 	addsd	%xmm0, %xmm0
    00000071: 	jmp	.Ltmp44 # Offset: 113
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerImET_S0_"

Binary Function "_Z10test_powerIfET_S0_" after disassembly {
  Number      : 79
  State       : disassembled
  Address     : 0x28b0
  Size        : 0x22
  MaxSize     : 0x30
  Offset      : 0x28b0
  Section     : .text
  Orc Section : .local.text._Z10test_powerIfET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movsd	DATAat0x3d6b8(%rip), %xmm1
    00000010: 	cvtss2sd	%xmm0, %xmm0
    00000014: 	callq	pow@PLT # Offset: 20
    00000019: 	addq	$0x8, %rsp
    0000001d: 	cvtsd2ss	%xmm0, %xmm0
    00000021: 	retq # Offset: 33
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIfET_S0_"

Binary Function "_Z8test_cosIeET_S0_" after disassembly {
  Number      : 80
  State       : disassembled
  Address     : 0x28e0
  Size        : 0x17
  MaxSize     : 0x20
  Offset      : 0x28e0
  Section     : .text
  Orc Section : .local.text._Z8test_cosIeET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	endbr64
    00000004: 	fldt	0x8(%rsp)
    00000008: 	faddl	DATAat0x3d6a8(%rip)
    0000000e: 	fstpt	0x8(%rsp)
    00000012: 	jmp	cosl@PLT # TAILCALL  # Offset: 18
DWARF CFI Instructions:
    <empty>
End of Function "_Z8test_cosIeET_S0_"

Binary Function "_Z10test_powerIeET_S0_" after disassembly {
  Number      : 81
  State       : disassembled
  Address     : 0x2900
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2900
  Section     : .text
  Orc Section : .local.text._Z10test_powerIeET_S0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	endbr64
    00000004: 	subq	$0x18, %rsp
    00000008: 	fldl	DATAat0x3d6b8(%rip)
    0000000e: 	fstpt	(%rsp)
    00000011: 	movq	(%rsp), %rax
    00000015: 	movl	0x8(%rsp), %edx
    00000019: 	pushq	%rdx
    0000001a: 	pushq	%rax
    0000001b: 	pushq	0x38(%rsp)
    0000001f: 	pushq	0x38(%rsp)
    00000023: 	callq	powl@PLT # Offset: 35
    00000028: 	addq	$0x38, %rsp
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_Z10test_powerIeET_S0_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 82
  State       : disassembled
  Address     : 0x2930
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x2930
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp45 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp48:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp47:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp46 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp47 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp48 # Offset: 142
.Ltmp45:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp49 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp50 # Offset: 164
.Ltmp53:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp51 # Offset: 177
.Ltmp52:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp50 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp52 # Offset: 214
.Ltmp51:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp53 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp54 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp56:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp55 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp55:
    0000010a: 	addq	$0x20, %r13
.Ltmp50:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp56 # Offset: 275
.Ltmp54:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp57 # Offset: 283
.Ltmp63:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp58 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp59:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp59 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp58:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp46:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp47 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp48 # Offset: 389
    0000018b: 	jmp	.Ltmp45 # Offset: 395
.Ltmp49:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp54 # Offset: 405
.Ltmp62:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp60 # Offset: 422
.Ltmp61:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp54 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp61 # Offset: 463
.Ltmp60:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp62 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp63 # Offset: 482
.Ltmp57:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 83
  State       : disassembled
  Address     : 0x2b30
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x2b30
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp64 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp65 # Offset: 63
.Ltmp64:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp66 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp67 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp71:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp68 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp69 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp67:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp70 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp71 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp66:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp72:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp71 # Offset: 248
.Ltmp65:
    000000fd: 	leaq	DATAat0x3d158(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp68:
    00000109: 	leaq	DATAat0x3d182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp69:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp70:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp72 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp73 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp73:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 84
  State       : disassembled
  Address     : 0x2c80
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x2c80
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp74 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp77:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp76:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp75 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp76 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp77 # Offset: 142
.Ltmp74:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp78 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp79 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp81:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp80 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp81 # Offset: 215
.Ltmp79:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp82 # Offset: 222
.Ltmp84:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp83 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp84 # Offset: 263
.Ltmp82:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp85 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp86:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp86 # Offset: 324
.Ltmp85:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp75:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp76 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp77 # Offset: 397
    00000193: 	jmp	.Ltmp74 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp83:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp84 # Offset: 425
    000001af: 	jmp	.Ltmp82 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp80:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp81 # Offset: 449
    000001c7: 	jmp	.Ltmp79 # Offset: 455
.Ltmp78:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp82 # Offset: 465
.Ltmp89:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp87 # Offset: 482
.Ltmp88:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp82 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp88 # Offset: 523
.Ltmp87:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp89 # Offset: 534
    00000218: 	jmp	.Ltmp82 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0x2ea0
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2ea0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp90 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp91 # Offset: 152
.Ltmp102:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp92 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp93 # Offset: 204
.Ltmp92:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp94 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp95 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp97:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp96 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp95:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp97 # Offset: 339
    00000155: 	jmp	.Ltmp98 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp91:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp99 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp100 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp101 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp101:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp104:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp102 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp94:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp98:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp97 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp99:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp103 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp104 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp104 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp103:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp104 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp104 # Offset: 696
.Ltmp93:
    000002bd: 	leaq	DATAat0x3d158(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp100:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp105 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp105:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp90:
    000002e0: 	leaq	DATAat0x3d198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp96:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0x31d0
  Size        : 0x10c
  MaxSize     : 0x110
  Offset      : 0x31d0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	movq	%rdi, %rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x18, %rsp
    00000011: 	movq	0x30(%rdi), %rbx
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x8(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	movq	0x40(%rdi), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp106 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %r13
    00000044: 	movq	%r13, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp107 # Offset: 74
    0000004c: 	testq	%r13, %r13
    0000004f: 	je	.Ltmp108 # Offset: 79
.Ltmp107:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp109 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp110 # Offset: 99
    00000069: 	movzbl	(%r13), %eax
    0000006e: 	movb	%al, 0x10(%rbx)
.Ltmp112:
    00000071: 	movq	%r12, 0x8(%rbx)
    00000075: 	movb	$0x0, (%rdi,%r12)
    0000007a: 	addq	$0x20, 0x30(%rbp)
    0000007f: 	movq	0x8(%rsp), %rax
    00000084: 	subq	%fs:0x28, %rax
    0000008d: 	jne	.Ltmp111 # Offset: 141
    0000008f: 	addq	$0x18, %rsp
    00000093: 	popq	%rbx
    00000094: 	popq	%rbp
    00000095: 	popq	%r12
    00000097: 	popq	%r13
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp109:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp113:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%r13, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp112 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp106:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp111 # Offset: 222
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp110:
    000000f0: 	testq	%r12, %r12
    000000f3: 	je	.Ltmp112 # Offset: 243
    000000f9: 	jmp	.Ltmp113 # Offset: 249
.Ltmp108:
    000000fb: 	leaq	DATAat0x3d158(%rip), %rdi
    00000102: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 258
.Ltmp111:
    00000107: 	callq	__stack_chk_fail@PLT # Offset: 263
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_"

Binary Function "_Z24test_struct_const_in_optIj13simple_structIjEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 87
  State       : disassembled
  Address     : 0x32e0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x32e0
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIj13simple_structIjEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000012: 	pushq	%r12
    00000014: 	movq	%rdx, %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdi, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movl	%esi, %ebx
    0000001e: 	subq	$0x10, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x8(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	movl	iterations(%rip), %eax
    00000044: 	testl	%eax, %eax
    00000046: 	jle	.Ltmp114 # Offset: 70
.Ltmp123:
    00000048: 	cvttsd2si	init_value(%rip), %rax
    00000051: 	movl	0x18(%rbp), %edx
    00000054: 	imull	%ebx, %edx
    00000057: 	imull	$0x1f40, %eax, %eax
    0000005d: 	cmpl	%edx, %eax
    0000005f: 	jne	.Ltmp115 # Offset: 95
.Ltmp114:
    00000065: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000073: 	subq	$0x20, %rax
    00000077: 	cmpq	%rax, %rbx
    0000007a: 	je	.Ltmp116 # Offset: 122
    00000080: 	leaq	0x10(%rbx), %rdi
    00000084: 	movq	%rdi, (%rbx)
    00000087: 	movq	(%r12), %rbp
    0000008b: 	movq	0x8(%r12), %r12
    00000090: 	movq	%rbp, %rax
    00000093: 	addq	%r12, %rax
    00000096: 	je	.Ltmp117 # Offset: 150
    00000098: 	testq	%rbp, %rbp
    0000009b: 	je	.Ltmp118 # Offset: 155
.Ltmp117:
    000000a1: 	movq	%r12, (%rsp)
    000000a5: 	cmpq	$0xf, %r12
    000000a9: 	ja	.Ltmp119 # Offset: 169
    000000af: 	cmpq	$0x1, %r12
    000000b3: 	jne	.Ltmp120 # Offset: 179
    000000b9: 	movzbl	(%rbp), %eax
    000000bd: 	movb	%al, 0x10(%rbx)
.Ltmp124:
    000000c0: 	movq	%r12, 0x8(%rbx)
    000000c4: 	movb	$0x0, (%rdi,%r12)
    000000c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d7: 	addq	$0x20, %rax
    000000db: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000e9: 	je	.Ltmp121 # Offset: 233
.Ltmp125:
    000000ef: 	movq	-0x20(%rax), %rbp
    000000f3: 	callq	clock@PLT # Offset: 243
    000000f8: 	movq	%rax, end_time(%rip)
    000000ff: 	movq	0x8(%rsp), %rdx
    00000104: 	subq	%fs:0x28, %rdx
    0000010d: 	jne	.Ltmp122 # Offset: 269
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	pxor	%xmm0, %xmm0
    0000011e: 	movq	%rbp, %rdi
    00000121: 	cvtsi2sd	%rax, %xmm0
    00000126: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000012e: 	addq	$0x10, %rsp
    00000132: 	popq	%rbx
    00000133: 	popq	%rbp
    00000134: 	popq	%r12
    00000136: 	popq	%r13
    00000138: 	popq	%r14
    0000013a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 314
    0000013f: 	nop # Size: 1
.Ltmp115:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %r14d
    00000152: 	callq	__printf_chk@PLT # Offset: 338
    00000157: 	cmpl	iterations(%rip), %r14d
    0000015e: 	jl	.Ltmp123 # Offset: 350
    00000164: 	jmp	.Ltmp114 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp119:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp126:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp124 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp116:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp125 # Offset: 460
.Ltmp121:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp125 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp120:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp124 # Offset: 491
    000001f1: 	jmp	.Ltmp126 # Offset: 497
.Ltmp122:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp118:
    000001f8: 	leaq	DATAat0x3d158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIj13simple_structIjEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIh13simple_structIhEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 88
  State       : disassembled
  Address     : 0x34f0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x34f0
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIh13simple_structIhEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000012: 	pushq	%r12
    00000014: 	movq	%rdx, %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdi, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movl	%esi, %ebx
    0000001e: 	subq	$0x10, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x8(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	movl	iterations(%rip), %eax
    00000044: 	testl	%eax, %eax
    00000046: 	jle	.Ltmp127 # Offset: 70
.Ltmp136:
    00000048: 	cvttsd2si	init_value(%rip), %edx
    00000050: 	movzbl	0x6(%rbp), %eax
    00000054: 	imull	%ebx, %eax
    00000057: 	shll	$0x6, %edx
    0000005a: 	cmpb	%al, %dl
    0000005c: 	jne	.Ltmp128 # Offset: 92
.Ltmp127:
    00000062: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000069: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000070: 	subq	$0x20, %rax
    00000074: 	cmpq	%rax, %rbx
    00000077: 	je	.Ltmp129 # Offset: 119
    0000007d: 	leaq	0x10(%rbx), %rdi
    00000081: 	movq	%rdi, (%rbx)
    00000084: 	movq	(%r12), %rbp
    00000088: 	movq	0x8(%r12), %r12
    0000008d: 	movq	%rbp, %rax
    00000090: 	addq	%r12, %rax
    00000093: 	je	.Ltmp130 # Offset: 147
    00000095: 	testq	%rbp, %rbp
    00000098: 	je	.Ltmp131 # Offset: 152
.Ltmp130:
    0000009e: 	movq	%r12, (%rsp)
    000000a2: 	cmpq	$0xf, %r12
    000000a6: 	ja	.Ltmp132 # Offset: 166
    000000ac: 	cmpq	$0x1, %r12
    000000b0: 	jne	.Ltmp133 # Offset: 176
    000000b6: 	movzbl	(%rbp), %eax
    000000ba: 	movb	%al, 0x10(%rbx)
.Ltmp137:
    000000bd: 	movq	%r12, 0x8(%rbx)
    000000c1: 	movb	$0x0, (%rdi,%r12)
    000000c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d4: 	addq	$0x20, %rax
    000000d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000df: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000e6: 	je	.Ltmp134 # Offset: 230
.Ltmp138:
    000000ec: 	movq	-0x20(%rax), %rbp
    000000f0: 	callq	clock@PLT # Offset: 240
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	movq	0x8(%rsp), %rdx
    00000101: 	subq	%fs:0x28, %rdx
    0000010a: 	jne	.Ltmp135 # Offset: 266
    00000110: 	subq	start_time(%rip), %rax
    00000117: 	pxor	%xmm0, %xmm0
    0000011b: 	movq	%rbp, %rdi
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000012b: 	addq	$0x10, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp128:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %r14d
    00000152: 	callq	__printf_chk@PLT # Offset: 338
    00000157: 	cmpl	iterations(%rip), %r14d
    0000015e: 	jl	.Ltmp136 # Offset: 350
    00000164: 	jmp	.Ltmp127 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp132:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp139:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp137 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp129:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp138 # Offset: 460
.Ltmp134:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp138 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp133:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp137 # Offset: 491
    000001f1: 	jmp	.Ltmp139 # Offset: 497
.Ltmp135:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp131:
    000001f8: 	leaq	DATAat0x3d158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIh13simple_structIhEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIa13simple_structIaEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 89
  State       : disassembled
  Address     : 0x3700
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x3700
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIa13simple_structIaEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000012: 	pushq	%r12
    00000014: 	movq	%rdx, %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdi, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movl	%esi, %ebx
    0000001e: 	subq	$0x10, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x8(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	movl	iterations(%rip), %eax
    00000044: 	testl	%eax, %eax
    00000046: 	jle	.Ltmp140 # Offset: 70
.Ltmp149:
    00000048: 	cvttsd2si	init_value(%rip), %edx
    00000050: 	movzbl	0x6(%rbp), %eax
    00000054: 	imull	%ebx, %eax
    00000057: 	shll	$0x6, %edx
    0000005a: 	cmpb	%al, %dl
    0000005c: 	jne	.Ltmp141 # Offset: 92
.Ltmp140:
    00000062: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000069: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000070: 	subq	$0x20, %rax
    00000074: 	cmpq	%rax, %rbx
    00000077: 	je	.Ltmp142 # Offset: 119
    0000007d: 	leaq	0x10(%rbx), %rdi
    00000081: 	movq	%rdi, (%rbx)
    00000084: 	movq	(%r12), %rbp
    00000088: 	movq	0x8(%r12), %r12
    0000008d: 	movq	%rbp, %rax
    00000090: 	addq	%r12, %rax
    00000093: 	je	.Ltmp143 # Offset: 147
    00000095: 	testq	%rbp, %rbp
    00000098: 	je	.Ltmp144 # Offset: 152
.Ltmp143:
    0000009e: 	movq	%r12, (%rsp)
    000000a2: 	cmpq	$0xf, %r12
    000000a6: 	ja	.Ltmp145 # Offset: 166
    000000ac: 	cmpq	$0x1, %r12
    000000b0: 	jne	.Ltmp146 # Offset: 176
    000000b6: 	movzbl	(%rbp), %eax
    000000ba: 	movb	%al, 0x10(%rbx)
.Ltmp150:
    000000bd: 	movq	%r12, 0x8(%rbx)
    000000c1: 	movb	$0x0, (%rdi,%r12)
    000000c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d4: 	addq	$0x20, %rax
    000000d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000df: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000e6: 	je	.Ltmp147 # Offset: 230
.Ltmp151:
    000000ec: 	movq	-0x20(%rax), %rbp
    000000f0: 	callq	clock@PLT # Offset: 240
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	movq	0x8(%rsp), %rdx
    00000101: 	subq	%fs:0x28, %rdx
    0000010a: 	jne	.Ltmp148 # Offset: 266
    00000110: 	subq	start_time(%rip), %rax
    00000117: 	pxor	%xmm0, %xmm0
    0000011b: 	movq	%rbp, %rdi
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000012b: 	addq	$0x10, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp141:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %r14d
    00000152: 	callq	__printf_chk@PLT # Offset: 338
    00000157: 	cmpl	iterations(%rip), %r14d
    0000015e: 	jl	.Ltmp149 # Offset: 350
    00000164: 	jmp	.Ltmp140 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp145:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp152:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp150 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp142:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp151 # Offset: 460
.Ltmp147:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp151 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp146:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp150 # Offset: 491
    000001f1: 	jmp	.Ltmp152 # Offset: 497
.Ltmp148:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp144:
    000001f8: 	leaq	DATAat0x3d158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIa13simple_structIaEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIt13simple_structItEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 90
  State       : disassembled
  Address     : 0x3910
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x3910
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIt13simple_structItEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movl	%esi, %r13d
    0000000e: 	pushq	%r12
    00000010: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdx, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movq	%rdi, %rbx
    0000001f: 	subq	$0x10, %rsp
    00000023: 	movq	%fs:0x28, %rax
    0000002c: 	movq	%rax, 0x8(%rsp)
    00000031: 	xorl	%eax, %eax
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	movl	iterations(%rip), %eax
    00000045: 	testl	%eax, %eax
    00000047: 	jle	.Ltmp153 # Offset: 71
.Ltmp162:
    00000049: 	cvttsd2si	init_value(%rip), %eax
    00000051: 	movzwl	0xc(%rbx), %edx
    00000055: 	imull	%r13d, %edx
    00000059: 	imulw	$0x1f40, %ax, %ax
    0000005e: 	cmpw	%dx, %ax
    00000061: 	jne	.Ltmp154 # Offset: 97
.Ltmp153:
    00000067: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000075: 	subq	$0x20, %rax
    00000079: 	cmpq	%rax, %rbx
    0000007c: 	je	.Ltmp155 # Offset: 124
    00000082: 	leaq	0x10(%rbx), %rdi
    00000086: 	movq	0x8(%rbp), %r12
    0000008a: 	movq	%rdi, (%rbx)
    0000008d: 	movq	(%rbp), %r13
    00000091: 	movq	%r13, %rax
    00000094: 	addq	%r12, %rax
    00000097: 	je	.Ltmp156 # Offset: 151
    00000099: 	testq	%r13, %r13
    0000009c: 	je	.Ltmp157 # Offset: 156
.Ltmp156:
    000000a2: 	movq	%r12, (%rsp)
    000000a6: 	cmpq	$0xf, %r12
    000000aa: 	ja	.Ltmp158 # Offset: 170
    000000b0: 	cmpq	$0x1, %r12
    000000b4: 	jne	.Ltmp159 # Offset: 180
    000000ba: 	movzbl	(%r13), %eax
    000000bf: 	movb	%al, 0x10(%rbx)
.Ltmp163:
    000000c2: 	movq	%r12, 0x8(%rbx)
    000000c6: 	movb	$0x0, (%rdi,%r12)
    000000cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d9: 	addq	$0x20, %rax
    000000dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000eb: 	je	.Ltmp160 # Offset: 235
.Ltmp164:
    000000f1: 	movq	-0x20(%rax), %rbp
    000000f5: 	callq	clock@PLT # Offset: 245
    000000fa: 	movq	%rax, end_time(%rip)
    00000101: 	movq	0x8(%rsp), %rdx
    00000106: 	subq	%fs:0x28, %rdx
    0000010f: 	jne	.Ltmp161 # Offset: 271
    00000115: 	subq	start_time(%rip), %rax
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	movq	%rbp, %rdi
    00000123: 	cvtsi2sd	%rax, %xmm0
    00000128: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000130: 	addq	$0x10, %rsp
    00000134: 	popq	%rbx
    00000135: 	popq	%rbp
    00000136: 	popq	%r12
    00000138: 	popq	%r13
    0000013a: 	popq	%r14
    0000013c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 316
    00000141: 	nopl	(%rax) # Size: 7
.Ltmp154:
    00000148: 	movq	(%rbp), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r12, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %r14d
    0000015a: 	callq	__printf_chk@PLT # Offset: 346
    0000015f: 	cmpl	iterations(%rip), %r14d
    00000166: 	jl	.Ltmp162 # Offset: 358
    0000016c: 	jmp	.Ltmp153 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp158:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp165:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%r13, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp163 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp155:
    000001b0: 	movq	%rbp, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp164 # Offset: 468
.Ltmp160:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp164 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp159:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp163 # Offset: 499
    000001f9: 	jmp	.Ltmp165 # Offset: 505
.Ltmp161:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp157:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIt13simple_structItEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIl13simple_structIlEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 91
  State       : disassembled
  Address     : 0x3b20
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x3b20
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIl13simple_structIlEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movslq	%esi, %r13
    0000000e: 	pushq	%r12
    00000010: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdx, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movq	%rdi, %rbx
    0000001f: 	subq	$0x10, %rsp
    00000023: 	movq	%fs:0x28, %rax
    0000002c: 	movq	%rax, 0x8(%rsp)
    00000031: 	xorl	%eax, %eax
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	movl	iterations(%rip), %eax
    00000045: 	testl	%eax, %eax
    00000047: 	jle	.Ltmp166 # Offset: 71
.Ltmp175:
    00000049: 	cvttsd2si	init_value(%rip), %rax
    00000052: 	movq	0x30(%rbx), %rdx
    00000056: 	imulq	%r13, %rdx
    0000005a: 	imulq	$0x1f40, %rax, %rax
    00000061: 	cmpq	%rdx, %rax
    00000064: 	jne	.Ltmp167 # Offset: 100
.Ltmp166:
    0000006a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000071: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000078: 	subq	$0x20, %rax
    0000007c: 	cmpq	%rax, %rbx
    0000007f: 	je	.Ltmp168 # Offset: 127
    00000085: 	leaq	0x10(%rbx), %rdi
    00000089: 	movq	0x8(%rbp), %r12
    0000008d: 	movq	%rdi, (%rbx)
    00000090: 	movq	(%rbp), %r13
    00000094: 	movq	%r13, %rax
    00000097: 	addq	%r12, %rax
    0000009a: 	je	.Ltmp169 # Offset: 154
    0000009c: 	testq	%r13, %r13
    0000009f: 	je	.Ltmp170 # Offset: 159
.Ltmp169:
    000000a5: 	movq	%r12, (%rsp)
    000000a9: 	cmpq	$0xf, %r12
    000000ad: 	ja	.Ltmp171 # Offset: 173
    000000b3: 	cmpq	$0x1, %r12
    000000b7: 	jne	.Ltmp172 # Offset: 183
    000000bd: 	movzbl	(%r13), %eax
    000000c2: 	movb	%al, 0x10(%rbx)
.Ltmp176:
    000000c5: 	movq	%r12, 0x8(%rbx)
    000000c9: 	movb	$0x0, (%rdi,%r12)
    000000ce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000dc: 	addq	$0x20, %rax
    000000e0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000ee: 	je	.Ltmp173 # Offset: 238
.Ltmp177:
    000000f4: 	movq	-0x20(%rax), %rbp
    000000f8: 	callq	clock@PLT # Offset: 248
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	movq	0x8(%rsp), %rdx
    00000109: 	subq	%fs:0x28, %rdx
    00000112: 	jne	.Ltmp174 # Offset: 274
    00000118: 	subq	start_time(%rip), %rax
    0000011f: 	pxor	%xmm0, %xmm0
    00000123: 	movq	%rbp, %rdi
    00000126: 	cvtsi2sd	%rax, %xmm0
    0000012b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000133: 	addq	$0x10, %rsp
    00000137: 	popq	%rbx
    00000138: 	popq	%rbp
    00000139: 	popq	%r12
    0000013b: 	popq	%r13
    0000013d: 	popq	%r14
    0000013f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 319
    00000144: 	nopl	(%rax) # Size: 4
.Ltmp167:
    00000148: 	movq	(%rbp), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r12, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %r14d
    0000015a: 	callq	__printf_chk@PLT # Offset: 346
    0000015f: 	cmpl	iterations(%rip), %r14d
    00000166: 	jl	.Ltmp175 # Offset: 358
    0000016c: 	jmp	.Ltmp166 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp171:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp178:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%r13, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp176 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp168:
    000001b0: 	movq	%rbp, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp177 # Offset: 468
.Ltmp173:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp177 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp172:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp176 # Offset: 499
    000001f9: 	jmp	.Ltmp178 # Offset: 505
.Ltmp174:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp170:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIl13simple_structIlEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIs13simple_structIsEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 92
  State       : disassembled
  Address     : 0x3d30
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x3d30
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIs13simple_structIsEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movl	%esi, %r13d
    0000000e: 	pushq	%r12
    00000010: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdx, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movq	%rdi, %rbx
    0000001f: 	subq	$0x10, %rsp
    00000023: 	movq	%fs:0x28, %rax
    0000002c: 	movq	%rax, 0x8(%rsp)
    00000031: 	xorl	%eax, %eax
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	movl	iterations(%rip), %eax
    00000045: 	testl	%eax, %eax
    00000047: 	jle	.Ltmp179 # Offset: 71
.Ltmp188:
    00000049: 	cvttsd2si	init_value(%rip), %eax
    00000051: 	movzwl	0xc(%rbx), %edx
    00000055: 	imull	%r13d, %edx
    00000059: 	imulw	$0x1f40, %ax, %ax
    0000005e: 	cmpw	%dx, %ax
    00000061: 	jne	.Ltmp180 # Offset: 97
.Ltmp179:
    00000067: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006e: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000075: 	subq	$0x20, %rax
    00000079: 	cmpq	%rax, %rbx
    0000007c: 	je	.Ltmp181 # Offset: 124
    00000082: 	leaq	0x10(%rbx), %rdi
    00000086: 	movq	0x8(%rbp), %r12
    0000008a: 	movq	%rdi, (%rbx)
    0000008d: 	movq	(%rbp), %r13
    00000091: 	movq	%r13, %rax
    00000094: 	addq	%r12, %rax
    00000097: 	je	.Ltmp182 # Offset: 151
    00000099: 	testq	%r13, %r13
    0000009c: 	je	.Ltmp183 # Offset: 156
.Ltmp182:
    000000a2: 	movq	%r12, (%rsp)
    000000a6: 	cmpq	$0xf, %r12
    000000aa: 	ja	.Ltmp184 # Offset: 170
    000000b0: 	cmpq	$0x1, %r12
    000000b4: 	jne	.Ltmp185 # Offset: 180
    000000ba: 	movzbl	(%r13), %eax
    000000bf: 	movb	%al, 0x10(%rbx)
.Ltmp189:
    000000c2: 	movq	%r12, 0x8(%rbx)
    000000c6: 	movb	$0x0, (%rdi,%r12)
    000000cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d9: 	addq	$0x20, %rax
    000000dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000eb: 	je	.Ltmp186 # Offset: 235
.Ltmp190:
    000000f1: 	movq	-0x20(%rax), %rbp
    000000f5: 	callq	clock@PLT # Offset: 245
    000000fa: 	movq	%rax, end_time(%rip)
    00000101: 	movq	0x8(%rsp), %rdx
    00000106: 	subq	%fs:0x28, %rdx
    0000010f: 	jne	.Ltmp187 # Offset: 271
    00000115: 	subq	start_time(%rip), %rax
    0000011c: 	pxor	%xmm0, %xmm0
    00000120: 	movq	%rbp, %rdi
    00000123: 	cvtsi2sd	%rax, %xmm0
    00000128: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000130: 	addq	$0x10, %rsp
    00000134: 	popq	%rbx
    00000135: 	popq	%rbp
    00000136: 	popq	%r12
    00000138: 	popq	%r13
    0000013a: 	popq	%r14
    0000013c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 316
    00000141: 	nopl	(%rax) # Size: 7
.Ltmp180:
    00000148: 	movq	(%rbp), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r12, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %r14d
    0000015a: 	callq	__printf_chk@PLT # Offset: 346
    0000015f: 	cmpl	iterations(%rip), %r14d
    00000166: 	jl	.Ltmp188 # Offset: 358
    0000016c: 	jmp	.Ltmp179 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp184:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp191:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%r13, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp189 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp181:
    000001b0: 	movq	%rbp, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp190 # Offset: 468
.Ltmp186:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp190 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp185:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp189 # Offset: 499
    000001f9: 	jmp	.Ltmp191 # Offset: 505
.Ltmp187:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp183:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIs13simple_structIsEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIm13simple_structImEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 93
  State       : disassembled
  Address     : 0x3f40
  Size        : 0x254
  MaxSize     : 0x260
  Offset      : 0x3f40
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIm13simple_structImEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	xorl	%r15d, %r15d
    00000009: 	pushq	%r14
    0000000b: 	movslq	%esi, %r14
    0000000e: 	pushq	%r13
    00000010: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000017: 	pushq	%r12
    00000019: 	movabsq	$-0x8000000000000000, %r12
    00000023: 	pushq	%rbp
    00000024: 	movq	%rdx, %rbp
    00000027: 	pushq	%rbx
    00000028: 	movq	%rdi, %rbx
    0000002b: 	subq	$0x18, %rsp
    0000002f: 	movq	%fs:0x28, %rax
    00000038: 	movq	%rax, 0x8(%rsp)
    0000003d: 	xorl	%eax, %eax
    0000003f: 	callq	clock@PLT # Offset: 63
    00000044: 	movsd	DATAat0x3d6b0(%rip), %xmm1
    0000004c: 	movq	%rax, start_time(%rip)
    00000053: 	movl	iterations(%rip), %eax
    00000059: 	testl	%eax, %eax
    0000005b: 	jle	.Ltmp192 # Offset: 91
.Ltmp203:
    0000005d: 	movsd	init_value(%rip), %xmm0
    00000065: 	comisd	%xmm1, %xmm0
    00000069: 	jae	.Ltmp193 # Offset: 105
    0000006f: 	cvttsd2si	%xmm0, %rax
.Ltmp202:
    00000074: 	movq	0x30(%rbx), %rdx
    00000078: 	imulq	$0x1f40, %rax, %rax
    0000007f: 	imulq	%r14, %rdx
    00000083: 	cmpq	%rdx, %rax
    00000086: 	jne	.Ltmp194 # Offset: 134
.Ltmp192:
    0000008c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000093: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009a: 	subq	$0x20, %rax
    0000009e: 	cmpq	%rax, %rbx
    000000a1: 	je	.Ltmp195 # Offset: 161
    000000a7: 	leaq	0x10(%rbx), %rdi
    000000ab: 	movq	0x8(%rbp), %r12
    000000af: 	movq	%rdi, (%rbx)
    000000b2: 	movq	(%rbp), %r13
    000000b6: 	movq	%r13, %rax
    000000b9: 	addq	%r12, %rax
    000000bc: 	je	.Ltmp196 # Offset: 188
    000000be: 	testq	%r13, %r13
    000000c1: 	je	.Ltmp197 # Offset: 193
.Ltmp196:
    000000c7: 	movq	%r12, (%rsp)
    000000cb: 	cmpq	$0xf, %r12
    000000cf: 	ja	.Ltmp198 # Offset: 207
    000000d5: 	cmpq	$0x1, %r12
    000000d9: 	jne	.Ltmp199 # Offset: 217
    000000df: 	movzbl	(%r13), %eax
    000000e4: 	movb	%al, 0x10(%rbx)
.Ltmp204:
    000000e7: 	movq	%r12, 0x8(%rbx)
    000000eb: 	movb	$0x0, (%rdi,%r12)
    000000f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fe: 	addq	$0x20, %rax
    00000102: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000109: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000110: 	je	.Ltmp200 # Offset: 272
.Ltmp205:
    00000116: 	movq	-0x20(%rax), %rbp
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	movq	%rax, end_time(%rip)
    00000126: 	movq	0x8(%rsp), %rdx
    0000012b: 	subq	%fs:0x28, %rdx
    00000134: 	jne	.Ltmp201 # Offset: 308
    0000013a: 	subq	start_time(%rip), %rax
    00000141: 	pxor	%xmm0, %xmm0
    00000145: 	movq	%rbp, %rdi
    00000148: 	cvtsi2sd	%rax, %xmm0
    0000014d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000155: 	addq	$0x18, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	popq	%r12
    0000015d: 	popq	%r13
    0000015f: 	popq	%r14
    00000161: 	popq	%r15
    00000163: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp193:
    00000170: 	subsd	%xmm1, %xmm0
    00000174: 	cvttsd2si	%xmm0, %rax
    00000179: 	xorq	%r12, %rax
    0000017c: 	jmp	.Ltmp202 # Offset: 380
    00000181: 	nopl	(%rax) # Size: 7
.Ltmp194:
    00000188: 	movq	(%rbp), %rdx
    0000018c: 	xorl	%eax, %eax
    0000018e: 	movq	%r13, %rsi
    00000191: 	movl	$0x1, %edi
    00000196: 	addl	$0x1, %r15d
    0000019a: 	callq	__printf_chk@PLT # Offset: 410
    0000019f: 	movq	DATAat0x3d6b0(%rip), %rax
    000001a6: 	cmpl	iterations(%rip), %r15d
    000001ad: 	movq	%rax, %xmm1
    000001b2: 	jl	.Ltmp203 # Offset: 434
    000001b8: 	jmp	.Ltmp192 # Offset: 440
    000001bd: 	nopl	(%rax) # Size: 3
.Ltmp198:
    000001c0: 	movq	%rbx, %rdi
    000001c3: 	movq	%rsp, %rsi
    000001c6: 	xorl	%edx, %edx
    000001c8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 456
    000001cd: 	movq	%rax, (%rbx)
    000001d0: 	movq	%rax, %rdi
    000001d3: 	movq	(%rsp), %rax
    000001d7: 	movq	%rax, 0x10(%rbx)
.Ltmp206:
    000001db: 	movq	%r12, %rdx
    000001de: 	movq	%r13, %rsi
    000001e1: 	callq	memcpy@PLT # Offset: 481
    000001e6: 	movq	(%rsp), %r12
    000001ea: 	movq	(%rbx), %rdi
    000001ed: 	jmp	.Ltmp204 # Offset: 493
    000001f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp195:
    000001f8: 	movq	%rbp, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp205 # Offset: 540
.Ltmp200:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp205 # Offset: 556
    00000231: 	nopl	(%rax) # Size: 7
.Ltmp199:
    00000238: 	testq	%r12, %r12
    0000023b: 	je	.Ltmp204 # Offset: 571
    00000241: 	jmp	.Ltmp206 # Offset: 577
.Ltmp201:
    00000243: 	callq	__stack_chk_fail@PLT # Offset: 579
.Ltmp197:
    00000248: 	leaq	DATAat0x3d158(%rip), %rdi
    0000024f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 591
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIm13simple_structImEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIi13simple_structIiEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0x41a0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0x41a0
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIi13simple_structIiEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	xorl	%r14d, %r14d
    00000009: 	pushq	%r13
    0000000b: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000012: 	pushq	%r12
    00000014: 	movq	%rdx, %r12
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdi, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	movl	%esi, %ebx
    0000001e: 	subq	$0x10, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x8(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	movq	%rax, start_time(%rip)
    0000003e: 	movl	iterations(%rip), %eax
    00000044: 	testl	%eax, %eax
    00000046: 	jle	.Ltmp207 # Offset: 70
.Ltmp216:
    00000048: 	cvttsd2si	init_value(%rip), %eax
    00000050: 	movl	0x18(%rbp), %edx
    00000053: 	imull	%ebx, %edx
    00000056: 	imull	$0x1f40, %eax, %eax
    0000005c: 	cmpl	%edx, %eax
    0000005e: 	jne	.Ltmp208 # Offset: 94
.Ltmp207:
    00000064: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000006b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000072: 	subq	$0x20, %rax
    00000076: 	cmpq	%rax, %rbx
    00000079: 	je	.Ltmp209 # Offset: 121
    0000007f: 	leaq	0x10(%rbx), %rdi
    00000083: 	movq	%rdi, (%rbx)
    00000086: 	movq	(%r12), %rbp
    0000008a: 	movq	0x8(%r12), %r12
    0000008f: 	movq	%rbp, %rax
    00000092: 	addq	%r12, %rax
    00000095: 	je	.Ltmp210 # Offset: 149
    00000097: 	testq	%rbp, %rbp
    0000009a: 	je	.Ltmp211 # Offset: 154
.Ltmp210:
    000000a0: 	movq	%r12, (%rsp)
    000000a4: 	cmpq	$0xf, %r12
    000000a8: 	ja	.Ltmp212 # Offset: 168
    000000ae: 	cmpq	$0x1, %r12
    000000b2: 	jne	.Ltmp213 # Offset: 178
    000000b8: 	movzbl	(%rbp), %eax
    000000bc: 	movb	%al, 0x10(%rbx)
.Ltmp217:
    000000bf: 	movq	%r12, 0x8(%rbx)
    000000c3: 	movb	$0x0, (%rdi,%r12)
    000000c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000cf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000d6: 	addq	$0x20, %rax
    000000da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000e8: 	je	.Ltmp214 # Offset: 232
.Ltmp218:
    000000ee: 	movq	-0x20(%rax), %rbp
    000000f2: 	callq	clock@PLT # Offset: 242
    000000f7: 	movq	%rax, end_time(%rip)
    000000fe: 	movq	0x8(%rsp), %rdx
    00000103: 	subq	%fs:0x28, %rdx
    0000010c: 	jne	.Ltmp215 # Offset: 268
    00000112: 	subq	start_time(%rip), %rax
    00000119: 	pxor	%xmm0, %xmm0
    0000011d: 	movq	%rbp, %rdi
    00000120: 	cvtsi2sd	%rax, %xmm0
    00000125: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000012d: 	addq	$0x10, %rsp
    00000131: 	popq	%rbx
    00000132: 	popq	%rbp
    00000133: 	popq	%r12
    00000135: 	popq	%r13
    00000137: 	popq	%r14
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp208:
    00000140: 	movq	(%r12), %rdx
    00000144: 	xorl	%eax, %eax
    00000146: 	movq	%r13, %rsi
    00000149: 	movl	$0x1, %edi
    0000014e: 	addl	$0x1, %r14d
    00000152: 	callq	__printf_chk@PLT # Offset: 338
    00000157: 	cmpl	iterations(%rip), %r14d
    0000015e: 	jl	.Ltmp216 # Offset: 350
    00000164: 	jmp	.Ltmp207 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp212:
    00000170: 	movq	%rbx, %rdi
    00000173: 	movq	%rsp, %rsi
    00000176: 	xorl	%edx, %edx
    00000178: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 376
    0000017d: 	movq	%rax, (%rbx)
    00000180: 	movq	%rax, %rdi
    00000183: 	movq	(%rsp), %rax
    00000187: 	movq	%rax, 0x10(%rbx)
.Ltmp219:
    0000018b: 	movq	%r12, %rdx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	callq	memcpy@PLT # Offset: 401
    00000196: 	movq	(%rsp), %r12
    0000019a: 	movq	(%rbx), %rdi
    0000019d: 	jmp	.Ltmp217 # Offset: 413
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp209:
    000001a8: 	movq	%r12, %rsi
    000001ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 434
    000001b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001cc: 	jne	.Ltmp218 # Offset: 460
.Ltmp214:
    000001d2: 	movq	-0x8(%rdx), %rax
    000001d6: 	addq	$0x200, %rax
    000001dc: 	jmp	.Ltmp218 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp213:
    000001e8: 	testq	%r12, %r12
    000001eb: 	je	.Ltmp217 # Offset: 491
    000001f1: 	jmp	.Ltmp219 # Offset: 497
.Ltmp215:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
.Ltmp211:
    000001f8: 	leaq	DATAat0x3d158(%rip), %rdi
    000001ff: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIi13simple_structIiEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIhEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0x43b0
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x43b0
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIhEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %r14
    00000009: 	pushq	%r13
    0000000b: 	pushq	%r12
    0000000d: 	movl	%edx, %r12d
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movl	%esi, %ebx
    00000017: 	subq	$0x10, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp220 # Offset: 63
    00000041: 	movslq	%r12d, %rax
    00000044: 	xorl	%r13d, %r13d
    00000047: 	leaq	DATAat0x3d1c8(%rip), %r12
    0000004e: 	addq	%rax, %r14
.Ltmp229:
    00000051: 	cvttsd2si	init_value(%rip), %edx
    00000059: 	movzbl	(%r14), %eax
    0000005d: 	imull	%ebx, %eax
    00000060: 	shll	$0x6, %edx
    00000063: 	cmpb	%al, %dl
    00000065: 	jne	.Ltmp221 # Offset: 101
.Ltmp220:
    0000006b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000072: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000079: 	subq	$0x20, %rax
    0000007d: 	cmpq	%rax, %rbx
    00000080: 	je	.Ltmp222 # Offset: 128
    00000086: 	leaq	0x10(%rbx), %rdi
    0000008a: 	movq	0x8(%rbp), %r12
    0000008e: 	movq	%rdi, (%rbx)
    00000091: 	movq	(%rbp), %r13
    00000095: 	movq	%r13, %rax
    00000098: 	addq	%r12, %rax
    0000009b: 	je	.Ltmp223 # Offset: 155
    0000009d: 	testq	%r13, %r13
    000000a0: 	je	.Ltmp224 # Offset: 160
.Ltmp223:
    000000a6: 	movq	%r12, (%rsp)
    000000aa: 	cmpq	$0xf, %r12
    000000ae: 	ja	.Ltmp225 # Offset: 174
    000000b4: 	cmpq	$0x1, %r12
    000000b8: 	jne	.Ltmp226 # Offset: 184
    000000be: 	movzbl	(%r13), %eax
    000000c3: 	movb	%al, 0x10(%rbx)
.Ltmp230:
    000000c6: 	movq	%r12, 0x8(%rbx)
    000000ca: 	movb	$0x0, (%rdi,%r12)
    000000cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000dd: 	addq	$0x20, %rax
    000000e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000ef: 	je	.Ltmp227 # Offset: 239
.Ltmp231:
    000000f5: 	movq	-0x20(%rax), %rbp
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	movq	%rax, end_time(%rip)
    00000105: 	movq	0x8(%rsp), %rdx
    0000010a: 	subq	%fs:0x28, %rdx
    00000113: 	jne	.Ltmp228 # Offset: 275
    00000119: 	subq	start_time(%rip), %rax
    00000120: 	pxor	%xmm0, %xmm0
    00000124: 	movq	%rbp, %rdi
    00000127: 	cvtsi2sd	%rax, %xmm0
    0000012c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000134: 	addq	$0x10, %rsp
    00000138: 	popq	%rbx
    00000139: 	popq	%rbp
    0000013a: 	popq	%r12
    0000013c: 	popq	%r13
    0000013e: 	popq	%r14
    00000140: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 320
    00000145: 	nopl	(%rax) # Size: 3
.Ltmp221:
    00000148: 	movq	(%rbp), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r12, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %r13d
    0000015a: 	callq	__printf_chk@PLT # Offset: 346
    0000015f: 	cmpl	iterations(%rip), %r13d
    00000166: 	jl	.Ltmp229 # Offset: 358
    0000016c: 	jmp	.Ltmp220 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp225:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp232:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%r13, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp230 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp222:
    000001b0: 	movq	%rbp, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp231 # Offset: 468
.Ltmp227:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp231 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp226:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp230 # Offset: 499
    000001f9: 	jmp	.Ltmp232 # Offset: 505
.Ltmp228:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp224:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIhEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIaEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 96
  State       : disassembled
  Address     : 0x45c0
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x45c0
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIaEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %r14
    00000009: 	pushq	%r13
    0000000b: 	pushq	%r12
    0000000d: 	movl	%edx, %r12d
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movl	%esi, %ebx
    00000017: 	subq	$0x10, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp233 # Offset: 63
    00000041: 	movslq	%r12d, %rax
    00000044: 	xorl	%r13d, %r13d
    00000047: 	leaq	DATAat0x3d1c8(%rip), %r12
    0000004e: 	addq	%rax, %r14
.Ltmp242:
    00000051: 	cvttsd2si	init_value(%rip), %edx
    00000059: 	movzbl	(%r14), %eax
    0000005d: 	imull	%ebx, %eax
    00000060: 	shll	$0x6, %edx
    00000063: 	cmpb	%al, %dl
    00000065: 	jne	.Ltmp234 # Offset: 101
.Ltmp233:
    0000006b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000072: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000079: 	subq	$0x20, %rax
    0000007d: 	cmpq	%rax, %rbx
    00000080: 	je	.Ltmp235 # Offset: 128
    00000086: 	leaq	0x10(%rbx), %rdi
    0000008a: 	movq	0x8(%rbp), %r12
    0000008e: 	movq	%rdi, (%rbx)
    00000091: 	movq	(%rbp), %r13
    00000095: 	movq	%r13, %rax
    00000098: 	addq	%r12, %rax
    0000009b: 	je	.Ltmp236 # Offset: 155
    0000009d: 	testq	%r13, %r13
    000000a0: 	je	.Ltmp237 # Offset: 160
.Ltmp236:
    000000a6: 	movq	%r12, (%rsp)
    000000aa: 	cmpq	$0xf, %r12
    000000ae: 	ja	.Ltmp238 # Offset: 174
    000000b4: 	cmpq	$0x1, %r12
    000000b8: 	jne	.Ltmp239 # Offset: 184
    000000be: 	movzbl	(%r13), %eax
    000000c3: 	movb	%al, 0x10(%rbx)
.Ltmp243:
    000000c6: 	movq	%r12, 0x8(%rbx)
    000000ca: 	movb	$0x0, (%rdi,%r12)
    000000cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000dd: 	addq	$0x20, %rax
    000000e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000e8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000ef: 	je	.Ltmp240 # Offset: 239
.Ltmp244:
    000000f5: 	movq	-0x20(%rax), %rbp
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	movq	%rax, end_time(%rip)
    00000105: 	movq	0x8(%rsp), %rdx
    0000010a: 	subq	%fs:0x28, %rdx
    00000113: 	jne	.Ltmp241 # Offset: 275
    00000119: 	subq	start_time(%rip), %rax
    00000120: 	pxor	%xmm0, %xmm0
    00000124: 	movq	%rbp, %rdi
    00000127: 	cvtsi2sd	%rax, %xmm0
    0000012c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000134: 	addq	$0x10, %rsp
    00000138: 	popq	%rbx
    00000139: 	popq	%rbp
    0000013a: 	popq	%r12
    0000013c: 	popq	%r13
    0000013e: 	popq	%r14
    00000140: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 320
    00000145: 	nopl	(%rax) # Size: 3
.Ltmp234:
    00000148: 	movq	(%rbp), %rdx
    0000014c: 	xorl	%eax, %eax
    0000014e: 	movq	%r12, %rsi
    00000151: 	movl	$0x1, %edi
    00000156: 	addl	$0x1, %r13d
    0000015a: 	callq	__printf_chk@PLT # Offset: 346
    0000015f: 	cmpl	iterations(%rip), %r13d
    00000166: 	jl	.Ltmp242 # Offset: 358
    0000016c: 	jmp	.Ltmp233 # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp238:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp245:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%r13, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp243 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp235:
    000001b0: 	movq	%rbp, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp244 # Offset: 468
.Ltmp240:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp244 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp239:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp243 # Offset: 499
    000001f9: 	jmp	.Ltmp245 # Offset: 505
.Ltmp241:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp237:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIaEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIlEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0x47d0
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x47d0
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIlEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movslq	%esi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	movl	%edx, %r12d
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movq	%rdi, %rbx
    00000018: 	subq	$0x10, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x8(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	movl	iterations(%rip), %eax
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp246 # Offset: 64
    00000042: 	movslq	%r12d, %rax
    00000045: 	leaq	DATAat0x3d1c8(%rip), %r12
    0000004c: 	leaq	(%rbx,%rax,8), %r14
    00000050: 	xorl	%ebx, %ebx
.Ltmp255:
    00000052: 	cvttsd2si	init_value(%rip), %rax
    0000005b: 	movq	(%r14), %rdx
    0000005e: 	imulq	%r13, %rdx
    00000062: 	imulq	$0x1f40, %rax, %rax
    00000069: 	cmpq	%rdx, %rax
    0000006c: 	jne	.Ltmp247 # Offset: 108
.Ltmp246:
    00000072: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000079: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000080: 	subq	$0x20, %rax
    00000084: 	cmpq	%rax, %rbx
    00000087: 	je	.Ltmp248 # Offset: 135
    0000008d: 	leaq	0x10(%rbx), %rdi
    00000091: 	movq	0x8(%rbp), %r12
    00000095: 	movq	%rdi, (%rbx)
    00000098: 	movq	(%rbp), %r13
    0000009c: 	movq	%r13, %rax
    0000009f: 	addq	%r12, %rax
    000000a2: 	je	.Ltmp249 # Offset: 162
    000000a4: 	testq	%r13, %r13
    000000a7: 	je	.Ltmp250 # Offset: 167
.Ltmp249:
    000000ad: 	movq	%r12, (%rsp)
    000000b1: 	cmpq	$0xf, %r12
    000000b5: 	ja	.Ltmp251 # Offset: 181
    000000bb: 	cmpq	$0x1, %r12
    000000bf: 	jne	.Ltmp252 # Offset: 191
    000000c5: 	movzbl	(%r13), %eax
    000000ca: 	movb	%al, 0x10(%rbx)
.Ltmp256:
    000000cd: 	movq	%r12, 0x8(%rbx)
    000000d1: 	movb	$0x0, (%rdi,%r12)
    000000d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e4: 	addq	$0x20, %rax
    000000e8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ef: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f6: 	je	.Ltmp253 # Offset: 246
.Ltmp257:
    000000fc: 	movq	-0x20(%rax), %rbp
    00000100: 	callq	clock@PLT # Offset: 256
    00000105: 	movq	%rax, end_time(%rip)
    0000010c: 	movq	0x8(%rsp), %rdx
    00000111: 	subq	%fs:0x28, %rdx
    0000011a: 	jne	.Ltmp254 # Offset: 282
    00000120: 	subq	start_time(%rip), %rax
    00000127: 	pxor	%xmm0, %xmm0
    0000012b: 	movq	%rbp, %rdi
    0000012e: 	cvtsi2sd	%rax, %xmm0
    00000133: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000013b: 	addq	$0x10, %rsp
    0000013f: 	popq	%rbx
    00000140: 	popq	%rbp
    00000141: 	popq	%r12
    00000143: 	popq	%r13
    00000145: 	popq	%r14
    00000147: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 327
    0000014c: 	nopl	(%rax) # Size: 4
.Ltmp247:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r12, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %ebx
    00000161: 	callq	__printf_chk@PLT # Offset: 353
    00000166: 	cmpl	iterations(%rip), %ebx
    0000016c: 	jl	.Ltmp255 # Offset: 364
    00000172: 	jmp	.Ltmp246 # Offset: 370
    00000177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp251:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp258:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp256 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp248:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp257 # Offset: 476
.Ltmp253:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp257 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp252:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp256 # Offset: 507
    00000201: 	jmp	.Ltmp258 # Offset: 513
.Ltmp254:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp250:
    00000208: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIlEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIsEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 98
  State       : disassembled
  Address     : 0x49f0
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x49f0
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIsEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movl	%esi, %r13d
    0000000b: 	pushq	%r12
    0000000d: 	movl	%edx, %r12d
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movq	%rdi, %rbx
    00000018: 	subq	$0x10, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x8(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	movl	iterations(%rip), %eax
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp259 # Offset: 64
    00000042: 	movslq	%r12d, %rax
    00000045: 	leaq	DATAat0x3d1c8(%rip), %r12
    0000004c: 	leaq	(%rbx,%rax,2), %r14
    00000050: 	xorl	%ebx, %ebx
.Ltmp268:
    00000052: 	cvttsd2si	init_value(%rip), %eax
    0000005a: 	movzwl	(%r14), %edx
    0000005e: 	imull	%r13d, %edx
    00000062: 	imulw	$0x1f40, %ax, %ax
    00000067: 	cmpw	%dx, %ax
    0000006a: 	jne	.Ltmp260 # Offset: 106
.Ltmp259:
    00000070: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000077: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007e: 	subq	$0x20, %rax
    00000082: 	cmpq	%rax, %rbx
    00000085: 	je	.Ltmp261 # Offset: 133
    0000008b: 	leaq	0x10(%rbx), %rdi
    0000008f: 	movq	0x8(%rbp), %r12
    00000093: 	movq	%rdi, (%rbx)
    00000096: 	movq	(%rbp), %r13
    0000009a: 	movq	%r13, %rax
    0000009d: 	addq	%r12, %rax
    000000a0: 	je	.Ltmp262 # Offset: 160
    000000a2: 	testq	%r13, %r13
    000000a5: 	je	.Ltmp263 # Offset: 165
.Ltmp262:
    000000ab: 	movq	%r12, (%rsp)
    000000af: 	cmpq	$0xf, %r12
    000000b3: 	ja	.Ltmp264 # Offset: 179
    000000b9: 	cmpq	$0x1, %r12
    000000bd: 	jne	.Ltmp265 # Offset: 189
    000000c3: 	movzbl	(%r13), %eax
    000000c8: 	movb	%al, 0x10(%rbx)
.Ltmp269:
    000000cb: 	movq	%r12, 0x8(%rbx)
    000000cf: 	movb	$0x0, (%rdi,%r12)
    000000d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e2: 	addq	$0x20, %rax
    000000e6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ed: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f4: 	je	.Ltmp266 # Offset: 244
.Ltmp270:
    000000fa: 	movq	-0x20(%rax), %rbp
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	movq	%rax, end_time(%rip)
    0000010a: 	movq	0x8(%rsp), %rdx
    0000010f: 	subq	%fs:0x28, %rdx
    00000118: 	jne	.Ltmp267 # Offset: 280
    0000011e: 	subq	start_time(%rip), %rax
    00000125: 	pxor	%xmm0, %xmm0
    00000129: 	movq	%rbp, %rdi
    0000012c: 	cvtsi2sd	%rax, %xmm0
    00000131: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000139: 	addq	$0x10, %rsp
    0000013d: 	popq	%rbx
    0000013e: 	popq	%rbp
    0000013f: 	popq	%r12
    00000141: 	popq	%r13
    00000143: 	popq	%r14
    00000145: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 325
    0000014a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp260:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r12, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %ebx
    00000161: 	callq	__printf_chk@PLT # Offset: 353
    00000166: 	cmpl	iterations(%rip), %ebx
    0000016c: 	jl	.Ltmp268 # Offset: 364
    00000172: 	jmp	.Ltmp259 # Offset: 370
    00000177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp264:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp271:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp269 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp261:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp270 # Offset: 476
.Ltmp266:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp270 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp265:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp269 # Offset: 507
    00000201: 	jmp	.Ltmp271 # Offset: 513
.Ltmp267:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp263:
    00000208: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIsEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIjEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 99
  State       : disassembled
  Address     : 0x4c10
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x4c10
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIjEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movl	%edx, %r13d
    0000000b: 	pushq	%r12
    0000000d: 	movq	%rdi, %r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movl	%esi, %ebx
    00000017: 	subq	$0x10, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp272 # Offset: 63
    00000041: 	movslq	%r13d, %rax
    00000044: 	xorl	%r13d, %r13d
    00000047: 	leaq	(%r12,%rax,4), %r14
    0000004b: 	leaq	DATAat0x3d1c8(%rip), %r12
.Ltmp281:
    00000052: 	cvttsd2si	init_value(%rip), %rax
    0000005b: 	movl	(%r14), %edx
    0000005e: 	imull	%ebx, %edx
    00000061: 	imull	$0x1f40, %eax, %eax
    00000067: 	cmpl	%edx, %eax
    00000069: 	jne	.Ltmp273 # Offset: 105
.Ltmp272:
    0000006f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000076: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007d: 	subq	$0x20, %rax
    00000081: 	cmpq	%rax, %rbx
    00000084: 	je	.Ltmp274 # Offset: 132
    0000008a: 	leaq	0x10(%rbx), %rdi
    0000008e: 	movq	0x8(%rbp), %r12
    00000092: 	movq	%rdi, (%rbx)
    00000095: 	movq	(%rbp), %r13
    00000099: 	movq	%r13, %rax
    0000009c: 	addq	%r12, %rax
    0000009f: 	je	.Ltmp275 # Offset: 159
    000000a1: 	testq	%r13, %r13
    000000a4: 	je	.Ltmp276 # Offset: 164
.Ltmp275:
    000000aa: 	movq	%r12, (%rsp)
    000000ae: 	cmpq	$0xf, %r12
    000000b2: 	ja	.Ltmp277 # Offset: 178
    000000b8: 	cmpq	$0x1, %r12
    000000bc: 	jne	.Ltmp278 # Offset: 188
    000000c2: 	movzbl	(%r13), %eax
    000000c7: 	movb	%al, 0x10(%rbx)
.Ltmp282:
    000000ca: 	movq	%r12, 0x8(%rbx)
    000000ce: 	movb	$0x0, (%rdi,%r12)
    000000d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e1: 	addq	$0x20, %rax
    000000e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f3: 	je	.Ltmp279 # Offset: 243
.Ltmp283:
    000000f9: 	movq	-0x20(%rax), %rbp
    000000fd: 	callq	clock@PLT # Offset: 253
    00000102: 	movq	%rax, end_time(%rip)
    00000109: 	movq	0x8(%rsp), %rdx
    0000010e: 	subq	%fs:0x28, %rdx
    00000117: 	jne	.Ltmp280 # Offset: 279
    0000011d: 	subq	start_time(%rip), %rax
    00000124: 	pxor	%xmm0, %xmm0
    00000128: 	movq	%rbp, %rdi
    0000012b: 	cvtsi2sd	%rax, %xmm0
    00000130: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000138: 	addq	$0x10, %rsp
    0000013c: 	popq	%rbx
    0000013d: 	popq	%rbp
    0000013e: 	popq	%r12
    00000140: 	popq	%r13
    00000142: 	popq	%r14
    00000144: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 324
    00000149: 	nopl	(%rax) # Size: 7
.Ltmp273:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r12, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %r13d
    00000162: 	callq	__printf_chk@PLT # Offset: 354
    00000167: 	cmpl	iterations(%rip), %r13d
    0000016e: 	jl	.Ltmp281 # Offset: 366
    00000174: 	jmp	.Ltmp272 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp277:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp284:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp282 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp274:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp283 # Offset: 476
.Ltmp279:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp283 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp278:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp282 # Offset: 507
    00000201: 	jmp	.Ltmp284 # Offset: 513
.Ltmp280:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp276:
    00000208: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIjEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIiEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0x4e30
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x4e30
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIiEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movl	%edx, %r13d
    0000000b: 	pushq	%r12
    0000000d: 	movq	%rdi, %r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movl	%esi, %ebx
    00000017: 	subq	$0x10, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	xorl	%eax, %eax
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	movl	iterations(%rip), %eax
    0000003d: 	testl	%eax, %eax
    0000003f: 	jle	.Ltmp285 # Offset: 63
    00000041: 	movslq	%r13d, %rax
    00000044: 	xorl	%r13d, %r13d
    00000047: 	leaq	(%r12,%rax,4), %r14
    0000004b: 	leaq	DATAat0x3d1c8(%rip), %r12
.Ltmp294:
    00000052: 	cvttsd2si	init_value(%rip), %eax
    0000005a: 	movl	(%r14), %edx
    0000005d: 	imull	%ebx, %edx
    00000060: 	imull	$0x1f40, %eax, %eax
    00000066: 	cmpl	%edx, %eax
    00000068: 	jne	.Ltmp286 # Offset: 104
.Ltmp285:
    0000006e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000075: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007c: 	subq	$0x20, %rax
    00000080: 	cmpq	%rax, %rbx
    00000083: 	je	.Ltmp287 # Offset: 131
    00000089: 	leaq	0x10(%rbx), %rdi
    0000008d: 	movq	0x8(%rbp), %r12
    00000091: 	movq	%rdi, (%rbx)
    00000094: 	movq	(%rbp), %r13
    00000098: 	movq	%r13, %rax
    0000009b: 	addq	%r12, %rax
    0000009e: 	je	.Ltmp288 # Offset: 158
    000000a0: 	testq	%r13, %r13
    000000a3: 	je	.Ltmp289 # Offset: 163
.Ltmp288:
    000000a9: 	movq	%r12, (%rsp)
    000000ad: 	cmpq	$0xf, %r12
    000000b1: 	ja	.Ltmp290 # Offset: 177
    000000b7: 	cmpq	$0x1, %r12
    000000bb: 	jne	.Ltmp291 # Offset: 187
    000000c1: 	movzbl	(%r13), %eax
    000000c6: 	movb	%al, 0x10(%rbx)
.Ltmp295:
    000000c9: 	movq	%r12, 0x8(%rbx)
    000000cd: 	movb	$0x0, (%rdi,%r12)
    000000d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e0: 	addq	$0x20, %rax
    000000e4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000eb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f2: 	je	.Ltmp292 # Offset: 242
.Ltmp296:
    000000f8: 	movq	-0x20(%rax), %rbp
    000000fc: 	callq	clock@PLT # Offset: 252
    00000101: 	movq	%rax, end_time(%rip)
    00000108: 	movq	0x8(%rsp), %rdx
    0000010d: 	subq	%fs:0x28, %rdx
    00000116: 	jne	.Ltmp293 # Offset: 278
    0000011c: 	subq	start_time(%rip), %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	movq	%rbp, %rdi
    0000012a: 	cvtsi2sd	%rax, %xmm0
    0000012f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000137: 	addq	$0x10, %rsp
    0000013b: 	popq	%rbx
    0000013c: 	popq	%rbp
    0000013d: 	popq	%r12
    0000013f: 	popq	%r13
    00000141: 	popq	%r14
    00000143: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 323
    00000148: 	nopl	(%rax,%rax) # Size: 8
.Ltmp286:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r12, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %r13d
    00000162: 	callq	__printf_chk@PLT # Offset: 354
    00000167: 	cmpl	iterations(%rip), %r13d
    0000016e: 	jl	.Ltmp294 # Offset: 366
    00000174: 	jmp	.Ltmp285 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp290:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp297:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp295 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp287:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp296 # Offset: 476
.Ltmp292:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp296 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp291:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp295 # Offset: 507
    00000201: 	jmp	.Ltmp297 # Offset: 513
.Ltmp293:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp289:
    00000208: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIiEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optItEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0x5050
  Size        : 0x214
  MaxSize     : 0x220
  Offset      : 0x5050
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optItEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movl	%esi, %r13d
    0000000b: 	pushq	%r12
    0000000d: 	movl	%edx, %r12d
    00000010: 	pushq	%rbp
    00000011: 	movq	%rcx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	movq	%rdi, %rbx
    00000018: 	subq	$0x10, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x8(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	movl	iterations(%rip), %eax
    0000003e: 	testl	%eax, %eax
    00000040: 	jle	.Ltmp298 # Offset: 64
    00000042: 	movslq	%r12d, %rax
    00000045: 	leaq	DATAat0x3d1c8(%rip), %r12
    0000004c: 	leaq	(%rbx,%rax,2), %r14
    00000050: 	xorl	%ebx, %ebx
.Ltmp307:
    00000052: 	cvttsd2si	init_value(%rip), %eax
    0000005a: 	movzwl	(%r14), %edx
    0000005e: 	imull	%r13d, %edx
    00000062: 	imulw	$0x1f40, %ax, %ax
    00000067: 	cmpw	%dx, %ax
    0000006a: 	jne	.Ltmp299 # Offset: 106
.Ltmp298:
    00000070: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000077: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000007e: 	subq	$0x20, %rax
    00000082: 	cmpq	%rax, %rbx
    00000085: 	je	.Ltmp300 # Offset: 133
    0000008b: 	leaq	0x10(%rbx), %rdi
    0000008f: 	movq	0x8(%rbp), %r12
    00000093: 	movq	%rdi, (%rbx)
    00000096: 	movq	(%rbp), %r13
    0000009a: 	movq	%r13, %rax
    0000009d: 	addq	%r12, %rax
    000000a0: 	je	.Ltmp301 # Offset: 160
    000000a2: 	testq	%r13, %r13
    000000a5: 	je	.Ltmp302 # Offset: 165
.Ltmp301:
    000000ab: 	movq	%r12, (%rsp)
    000000af: 	cmpq	$0xf, %r12
    000000b3: 	ja	.Ltmp303 # Offset: 179
    000000b9: 	cmpq	$0x1, %r12
    000000bd: 	jne	.Ltmp304 # Offset: 189
    000000c3: 	movzbl	(%r13), %eax
    000000c8: 	movb	%al, 0x10(%rbx)
.Ltmp308:
    000000cb: 	movq	%r12, 0x8(%rbx)
    000000cf: 	movb	$0x0, (%rdi,%r12)
    000000d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000e2: 	addq	$0x20, %rax
    000000e6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000ed: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000000f4: 	je	.Ltmp305 # Offset: 244
.Ltmp309:
    000000fa: 	movq	-0x20(%rax), %rbp
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	movq	%rax, end_time(%rip)
    0000010a: 	movq	0x8(%rsp), %rdx
    0000010f: 	subq	%fs:0x28, %rdx
    00000118: 	jne	.Ltmp306 # Offset: 280
    0000011e: 	subq	start_time(%rip), %rax
    00000125: 	pxor	%xmm0, %xmm0
    00000129: 	movq	%rbp, %rdi
    0000012c: 	cvtsi2sd	%rax, %xmm0
    00000131: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000139: 	addq	$0x10, %rsp
    0000013d: 	popq	%rbx
    0000013e: 	popq	%rbp
    0000013f: 	popq	%r12
    00000141: 	popq	%r13
    00000143: 	popq	%r14
    00000145: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 325
    0000014a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp299:
    00000150: 	movq	(%rbp), %rdx
    00000154: 	xorl	%eax, %eax
    00000156: 	movq	%r12, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	addl	$0x1, %ebx
    00000161: 	callq	__printf_chk@PLT # Offset: 353
    00000166: 	cmpl	iterations(%rip), %ebx
    0000016c: 	jl	.Ltmp307 # Offset: 364
    00000172: 	jmp	.Ltmp298 # Offset: 370
    00000177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp303:
    00000180: 	movq	%rbx, %rdi
    00000183: 	movq	%rsp, %rsi
    00000186: 	xorl	%edx, %edx
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, (%rbx)
    00000190: 	movq	%rax, %rdi
    00000193: 	movq	(%rsp), %rax
    00000197: 	movq	%rax, 0x10(%rbx)
.Ltmp310:
    0000019b: 	movq	%r12, %rdx
    0000019e: 	movq	%r13, %rsi
    000001a1: 	callq	memcpy@PLT # Offset: 417
    000001a6: 	movq	(%rsp), %r12
    000001aa: 	movq	(%rbx), %rdi
    000001ad: 	jmp	.Ltmp308 # Offset: 429
    000001b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp300:
    000001b8: 	movq	%rbp, %rsi
    000001bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 450
    000001c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dc: 	jne	.Ltmp309 # Offset: 476
.Ltmp305:
    000001e2: 	movq	-0x8(%rdx), %rax
    000001e6: 	addq	$0x200, %rax
    000001ec: 	jmp	.Ltmp309 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp304:
    000001f8: 	testq	%r12, %r12
    000001fb: 	je	.Ltmp308 # Offset: 507
    00000201: 	jmp	.Ltmp310 # Offset: 513
.Ltmp306:
    00000203: 	callq	__stack_chk_fail@PLT # Offset: 515
.Ltmp302:
    00000208: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 527
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optItEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optImEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 102
  State       : disassembled
  Address     : 0x5270
  Size        : 0x25c
  MaxSize     : 0x260
  Offset      : 0x5270
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optImEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0101:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movslq	%esi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%edx, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rcx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	movq	%rdi, %rbx
    0000001a: 	subq	$0x18, %rsp
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	callq	clock@PLT # Offset: 46
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	movl	iterations(%rip), %eax
    00000040: 	testl	%eax, %eax
    00000042: 	jle	.Ltmp311 # Offset: 66
    00000044: 	movslq	%r12d, %rax
    00000047: 	movsd	DATAat0x3d6b0(%rip), %xmm1
    0000004f: 	xorl	%r13d, %r13d
    00000052: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000059: 	leaq	(%rbx,%rax,8), %r15
    0000005d: 	movabsq	$-0x8000000000000000, %rbx
.Ltmp322:
    00000067: 	movsd	init_value(%rip), %xmm0
    0000006f: 	comisd	%xmm1, %xmm0
    00000073: 	jae	.Ltmp312 # Offset: 115
    00000079: 	cvttsd2si	%xmm0, %rax
.Ltmp321:
    0000007e: 	movq	(%r15), %rdx
    00000081: 	imulq	$0x1f40, %rax, %rax
    00000088: 	imulq	%r14, %rdx
    0000008c: 	cmpq	%rdx, %rax
    0000008f: 	jne	.Ltmp313 # Offset: 143
.Ltmp311:
    00000095: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000009c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a3: 	subq	$0x20, %rax
    000000a7: 	cmpq	%rax, %rbx
    000000aa: 	je	.Ltmp314 # Offset: 170
    000000b0: 	leaq	0x10(%rbx), %rdi
    000000b4: 	movq	0x8(%rbp), %r12
    000000b8: 	movq	%rdi, (%rbx)
    000000bb: 	movq	(%rbp), %r13
    000000bf: 	movq	%r13, %rax
    000000c2: 	addq	%r12, %rax
    000000c5: 	je	.Ltmp315 # Offset: 197
    000000c7: 	testq	%r13, %r13
    000000ca: 	je	.Ltmp316 # Offset: 202
.Ltmp315:
    000000d0: 	movq	%r12, (%rsp)
    000000d4: 	cmpq	$0xf, %r12
    000000d8: 	ja	.Ltmp317 # Offset: 216
    000000de: 	cmpq	$0x1, %r12
    000000e2: 	jne	.Ltmp318 # Offset: 226
    000000e8: 	movzbl	(%r13), %eax
    000000ed: 	movb	%al, 0x10(%rbx)
.Ltmp323:
    000000f0: 	movq	%r12, 0x8(%rbx)
    000000f4: 	movb	$0x0, (%rdi,%r12)
    000000f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000100: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000107: 	addq	$0x20, %rax
    0000010b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000112: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000119: 	je	.Ltmp319 # Offset: 281
.Ltmp324:
    0000011f: 	movq	-0x20(%rax), %rbp
    00000123: 	callq	clock@PLT # Offset: 291
    00000128: 	movq	%rax, end_time(%rip)
    0000012f: 	movq	0x8(%rsp), %rdx
    00000134: 	subq	%fs:0x28, %rdx
    0000013d: 	jne	.Ltmp320 # Offset: 317
    00000143: 	subq	start_time(%rip), %rax
    0000014a: 	pxor	%xmm0, %xmm0
    0000014e: 	movq	%rbp, %rdi
    00000151: 	cvtsi2sd	%rax, %xmm0
    00000156: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000015e: 	addq	$0x18, %rsp
    00000162: 	popq	%rbx
    00000163: 	popq	%rbp
    00000164: 	popq	%r12
    00000166: 	popq	%r13
    00000168: 	popq	%r14
    0000016a: 	popq	%r15
    0000016c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 364
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp312:
    00000178: 	subsd	%xmm1, %xmm0
    0000017c: 	cvttsd2si	%xmm0, %rax
    00000181: 	xorq	%rbx, %rax
    00000184: 	jmp	.Ltmp321 # Offset: 388
    00000189: 	nopl	(%rax) # Size: 7
.Ltmp313:
    00000190: 	movq	(%rbp), %rdx
    00000194: 	xorl	%eax, %eax
    00000196: 	movq	%r12, %rsi
    00000199: 	movl	$0x1, %edi
    0000019e: 	addl	$0x1, %r13d
    000001a2: 	callq	__printf_chk@PLT # Offset: 418
    000001a7: 	movq	DATAat0x3d6b0(%rip), %rax
    000001ae: 	cmpl	iterations(%rip), %r13d
    000001b5: 	movq	%rax, %xmm1
    000001ba: 	jl	.Ltmp322 # Offset: 442
    000001c0: 	jmp	.Ltmp311 # Offset: 448
    000001c5: 	nopl	(%rax) # Size: 3
.Ltmp317:
    000001c8: 	movq	%rbx, %rdi
    000001cb: 	movq	%rsp, %rsi
    000001ce: 	xorl	%edx, %edx
    000001d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 464
    000001d5: 	movq	%rax, (%rbx)
    000001d8: 	movq	%rax, %rdi
    000001db: 	movq	(%rsp), %rax
    000001df: 	movq	%rax, 0x10(%rbx)
.Ltmp325:
    000001e3: 	movq	%r12, %rdx
    000001e6: 	movq	%r13, %rsi
    000001e9: 	callq	memcpy@PLT # Offset: 489
    000001ee: 	movq	(%rsp), %r12
    000001f2: 	movq	(%rbx), %rdi
    000001f5: 	jmp	.Ltmp323 # Offset: 501
    000001fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp314:
    00000200: 	movq	%rbp, %rsi
    00000203: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000020a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 522
    0000020f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000216: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000224: 	jne	.Ltmp324 # Offset: 548
.Ltmp319:
    0000022a: 	movq	-0x8(%rdx), %rax
    0000022e: 	addq	$0x200, %rax
    00000234: 	jmp	.Ltmp324 # Offset: 564
    00000239: 	nopl	(%rax) # Size: 7
.Ltmp318:
    00000240: 	testq	%r12, %r12
    00000243: 	je	.Ltmp323 # Offset: 579
    00000249: 	jmp	.Ltmp325 # Offset: 585
.Ltmp320:
    0000024b: 	callq	__stack_chk_fail@PLT # Offset: 587
.Ltmp316:
    00000250: 	leaq	DATAat0x3d158(%rip), %rdi
    00000257: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 599
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optImEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 103
  State       : disassembled
  Address     : 0x54d0
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x54d0
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0102:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movl	%edi, %r13d
    00000013: 	pushq	%r12
    00000015: 	movq	%rsi, %r12
    00000018: 	pushq	%rbp
    00000019: 	xorl	%ebp, %ebp
    0000001b: 	pushq	%rbx
    0000001c: 	subq	$0x18, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp326 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp328:
    00000050: 	movl	%r13d, %edi
    00000053: 	callq	*%r12 # Offset: 83
    00000056: 	movl	%r13d, %edi
    00000059: 	movl	%eax, %ebx
    0000005b: 	callq	*%r12 # Offset: 91
    0000005e: 	cmpl	%eax, %ebx
    00000060: 	je	.Ltmp327 # Offset: 96
    00000066: 	movq	(%r14), %rdx
    00000069: 	xorl	%eax, %eax
    0000006b: 	movq	%r15, %rsi
    0000006e: 	movl	$0x1, %edi
    00000073: 	addl	$0x1, %ebp
    00000076: 	callq	__printf_chk@PLT # Offset: 118
    0000007b: 	cmpl	%ebp, iterations(%rip)
    00000081: 	jg	.Ltmp328 # Offset: 129
.Ltmp326:
    00000083: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000008a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000091: 	subq	$0x20, %rax
    00000095: 	cmpq	%rax, %rbx
    00000098: 	je	.Ltmp329 # Offset: 152
    0000009e: 	leaq	0x10(%rbx), %rdi
    000000a2: 	movq	0x8(%r14), %r12
    000000a6: 	movq	%rdi, (%rbx)
    000000a9: 	movq	(%r14), %rbp
    000000ac: 	movq	%rbp, %rax
    000000af: 	addq	%r12, %rax
    000000b2: 	je	.Ltmp330 # Offset: 178
    000000b4: 	testq	%rbp, %rbp
    000000b7: 	je	.Ltmp331 # Offset: 183
.Ltmp330:
    000000bd: 	movq	%r12, (%rsp)
    000000c1: 	cmpq	$0xf, %r12
    000000c5: 	ja	.Ltmp332 # Offset: 197
    000000cb: 	cmpq	$0x1, %r12
    000000cf: 	jne	.Ltmp333 # Offset: 207
    000000d5: 	movzbl	(%rbp), %eax
    000000d9: 	movb	%al, 0x10(%rbx)
.Ltmp336:
    000000dc: 	movq	%r12, 0x8(%rbx)
    000000e0: 	movb	$0x0, (%rdi,%r12)
    000000e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000f3: 	addq	$0x20, %rax
    000000f7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000000fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000105: 	je	.Ltmp334 # Offset: 261
.Ltmp337:
    0000010b: 	movq	-0x20(%rax), %rbp
    0000010f: 	callq	clock@PLT # Offset: 271
    00000114: 	movq	%rax, end_time(%rip)
    0000011b: 	movq	0x8(%rsp), %rdx
    00000120: 	subq	%fs:0x28, %rdx
    00000129: 	jne	.Ltmp335 # Offset: 297
    0000012f: 	subq	start_time(%rip), %rax
    00000136: 	pxor	%xmm0, %xmm0
    0000013a: 	movq	%rbp, %rdi
    0000013d: 	cvtsi2sd	%rax, %xmm0
    00000142: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000014a: 	addq	$0x18, %rsp
    0000014e: 	popq	%rbx
    0000014f: 	popq	%rbp
    00000150: 	popq	%r12
    00000152: 	popq	%r13
    00000154: 	popq	%r14
    00000156: 	popq	%r15
    00000158: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 344
    0000015d: 	nopl	(%rax) # Size: 3
.Ltmp327:
    00000160: 	addl	$0x1, %ebp
    00000163: 	cmpl	iterations(%rip), %ebp
    00000169: 	jl	.Ltmp328 # Offset: 361
    0000016f: 	jmp	.Ltmp326 # Offset: 367
    00000174: 	nopl	(%rax) # Size: 4
.Ltmp332:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp338:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%rbp, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp336 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp329:
    000001b0: 	movq	%r14, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp337 # Offset: 468
.Ltmp334:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp337 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp333:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp336 # Offset: 499
    000001f9: 	jmp	.Ltmp338 # Offset: 505
.Ltmp335:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp331:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 104
  State       : disassembled
  Address     : 0x56e0
  Size        : 0x20c
  MaxSize     : 0x210
  Offset      : 0x56e0
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0103:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movq	%rsi, %r13
    00000013: 	pushq	%r12
    00000015: 	movslq	%edi, %r12
    00000018: 	pushq	%rbp
    00000019: 	xorl	%ebp, %ebp
    0000001b: 	pushq	%rbx
    0000001c: 	subq	$0x18, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp339 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp341:
    00000050: 	movq	%r12, %rdi
    00000053: 	callq	*%r13 # Offset: 83
    00000056: 	movq	%r12, %rdi
    00000059: 	movq	%rax, %rbx
    0000005c: 	callq	*%r13 # Offset: 92
    0000005f: 	cmpq	%rax, %rbx
    00000062: 	je	.Ltmp340 # Offset: 98
    00000068: 	movq	(%r14), %rdx
    0000006b: 	xorl	%eax, %eax
    0000006d: 	movq	%r15, %rsi
    00000070: 	movl	$0x1, %edi
    00000075: 	addl	$0x1, %ebp
    00000078: 	callq	__printf_chk@PLT # Offset: 120
    0000007d: 	cmpl	%ebp, iterations(%rip)
    00000083: 	jg	.Ltmp341 # Offset: 131
.Ltmp339:
    00000085: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000008c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000093: 	subq	$0x20, %rax
    00000097: 	cmpq	%rax, %rbx
    0000009a: 	je	.Ltmp342 # Offset: 154
    000000a0: 	leaq	0x10(%rbx), %rdi
    000000a4: 	movq	0x8(%r14), %r12
    000000a8: 	movq	%rdi, (%rbx)
    000000ab: 	movq	(%r14), %rbp
    000000ae: 	movq	%rbp, %rax
    000000b1: 	addq	%r12, %rax
    000000b4: 	je	.Ltmp343 # Offset: 180
    000000b6: 	testq	%rbp, %rbp
    000000b9: 	je	.Ltmp344 # Offset: 185
.Ltmp343:
    000000bf: 	movq	%r12, (%rsp)
    000000c3: 	cmpq	$0xf, %r12
    000000c7: 	ja	.Ltmp345 # Offset: 199
    000000cd: 	cmpq	$0x1, %r12
    000000d1: 	jne	.Ltmp346 # Offset: 209
    000000d7: 	movzbl	(%rbp), %eax
    000000db: 	movb	%al, 0x10(%rbx)
.Ltmp349:
    000000de: 	movq	%r12, 0x8(%rbx)
    000000e2: 	movb	$0x0, (%rdi,%r12)
    000000e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000f5: 	addq	$0x20, %rax
    000000f9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000100: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000107: 	je	.Ltmp347 # Offset: 263
.Ltmp350:
    0000010d: 	movq	-0x20(%rax), %rbp
    00000111: 	callq	clock@PLT # Offset: 273
    00000116: 	movq	%rax, end_time(%rip)
    0000011d: 	movq	0x8(%rsp), %rdx
    00000122: 	subq	%fs:0x28, %rdx
    0000012b: 	jne	.Ltmp348 # Offset: 299
    00000131: 	subq	start_time(%rip), %rax
    00000138: 	pxor	%xmm0, %xmm0
    0000013c: 	movq	%rbp, %rdi
    0000013f: 	cvtsi2sd	%rax, %xmm0
    00000144: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000014c: 	addq	$0x18, %rsp
    00000150: 	popq	%rbx
    00000151: 	popq	%rbp
    00000152: 	popq	%r12
    00000154: 	popq	%r13
    00000156: 	popq	%r14
    00000158: 	popq	%r15
    0000015a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 346
    0000015f: 	nop # Size: 1
.Ltmp340:
    00000160: 	addl	$0x1, %ebp
    00000163: 	cmpl	iterations(%rip), %ebp
    00000169: 	jl	.Ltmp341 # Offset: 361
    0000016f: 	jmp	.Ltmp339 # Offset: 367
    00000174: 	nopl	(%rax) # Size: 4
.Ltmp345:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp351:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%rbp, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp349 # Offset: 421
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp342:
    000001b0: 	movq	%r14, %rsi
    000001b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 442
    000001bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d4: 	jne	.Ltmp350 # Offset: 468
.Ltmp347:
    000001da: 	movq	-0x8(%rdx), %rax
    000001de: 	addq	$0x200, %rax
    000001e4: 	jmp	.Ltmp350 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp346:
    000001f0: 	testq	%r12, %r12
    000001f3: 	je	.Ltmp349 # Offset: 499
    000001f9: 	jmp	.Ltmp351 # Offset: 505
.Ltmp348:
    000001fb: 	callq	__stack_chk_fail@PLT # Offset: 507
.Ltmp344:
    00000200: 	leaq	DATAat0x3d158(%rip), %rdi
    00000207: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 519
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z24test_struct_const_in_optIe13simple_structIeEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 105
  State       : disassembled
  Address     : 0x58f0
  Size        : 0x27c
  MaxSize     : 0x280
  Offset      : 0x58f0
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIe13simple_structIeEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0104:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rdx, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	movq	%rdi, %rbx
    00000010: 	subq	$0x38, %rsp
    00000014: 	movl	%esi, 0x8(%rsp)
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x28(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	movl	iterations(%rip), %eax
    0000003a: 	testl	%eax, %eax
    0000003c: 	jle	.Ltmp352 # Offset: 60
    0000003e: 	fildl	0x8(%rsp)
    00000042: 	movq	DATAat0x3d710(%rip), %xmm2
    0000004a: 	xorl	%ebp, %ebp
    0000004c: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000053: 	movsd	DATAat0x3d6e8(%rip), %xmm1
.Ltmp363:
    0000005b: 	fldt	0x60(%rbx)
    0000005e: 	fmul	%st(1), %st
    00000060: 	flds	DATAat0x3d68c(%rip)
    00000066: 	fmull	init_value(%rip)
    0000006c: 	fsubr	%st(1), %st
    0000006e: 	fstpl	0x8(%rsp)
    00000072: 	fld	%st(0)
    00000074: 	fabs
    00000076: 	fldl	DATAat0x3d6e0(%rip)
    0000007c: 	fxch	%st(1)
    0000007e: 	fcompi	%st(1), %st
    00000080: 	fstp	%st(0)
    00000082: 	jbe	.Ltmp353 # Offset: 130
    00000084: 	fdivrl	0x8(%rsp)
    00000088: 	fstpl	0x8(%rsp)
    0000008c: 	jmp	.Ltmp354 # Offset: 140
    0000008e: 	nop # Size: 2
.Ltmp353:
    00000090: 	fstp	%st(0)
.Ltmp354:
    00000092: 	movsd	0x8(%rsp), %xmm0
    00000098: 	andpd	%xmm2, %xmm0
    0000009c: 	comisd	%xmm0, %xmm1
    000000a0: 	jbe	.Ltmp355 # Offset: 160
    000000a6: 	fstp	%st(0)
.Ltmp352:
    000000a8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000af: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000b6: 	subq	$0x20, %rax
    000000ba: 	cmpq	%rax, %rbx
    000000bd: 	je	.Ltmp356 # Offset: 189
    000000c3: 	leaq	0x10(%rbx), %rdi
    000000c7: 	movq	%rdi, (%rbx)
    000000ca: 	movq	(%r12), %rbp
    000000ce: 	movq	0x8(%r12), %r12
    000000d3: 	movq	%rbp, %rax
    000000d6: 	addq	%r12, %rax
    000000d9: 	je	.Ltmp357 # Offset: 217
    000000db: 	testq	%rbp, %rbp
    000000de: 	je	.Ltmp358 # Offset: 222
.Ltmp357:
    000000e4: 	movq	%r12, 0x20(%rsp)
    000000e9: 	cmpq	$0xf, %r12
    000000ed: 	ja	.Ltmp359 # Offset: 237
    000000f3: 	cmpq	$0x1, %r12
    000000f7: 	jne	.Ltmp360 # Offset: 247
    000000fd: 	movzbl	(%rbp), %eax
    00000101: 	movb	%al, 0x10(%rbx)
.Ltmp364:
    00000104: 	movq	%r12, 0x8(%rbx)
    00000108: 	movb	$0x0, (%rdi,%r12)
    0000010d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000114: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000011b: 	addq	$0x20, %rax
    0000011f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000126: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000012d: 	je	.Ltmp361 # Offset: 301
.Ltmp365:
    00000133: 	movq	-0x20(%rax), %rbp
    00000137: 	callq	clock@PLT # Offset: 311
    0000013c: 	movq	%rax, end_time(%rip)
    00000143: 	movq	0x28(%rsp), %rdx
    00000148: 	subq	%fs:0x28, %rdx
    00000151: 	jne	.Ltmp362 # Offset: 337
    00000157: 	subq	start_time(%rip), %rax
    0000015e: 	pxor	%xmm0, %xmm0
    00000162: 	movq	%rbp, %rdi
    00000165: 	cvtsi2sd	%rax, %xmm0
    0000016a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000172: 	addq	$0x38, %rsp
    00000176: 	popq	%rbx
    00000177: 	popq	%rbp
    00000178: 	popq	%r12
    0000017a: 	popq	%r13
    0000017c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 380
    00000181: 	nopl	(%rax) # Size: 7
.Ltmp355:
    00000188: 	movq	(%r12), %rdx
    0000018c: 	xorl	%eax, %eax
    0000018e: 	movq	%r13, %rsi
    00000191: 	movl	$0x1, %edi
    00000196: 	fstpt	0x10(%rsp)
    0000019a: 	addl	$0x1, %ebp
    0000019d: 	movsd	%xmm0, 0x8(%rsp)
    000001a3: 	callq	__printf_chk@PLT # Offset: 419
    000001a8: 	cmpl	iterations(%rip), %ebp
    000001ae: 	jge	.Ltmp352 # Offset: 430
    000001b4: 	movq	DATAat0x3d6e8(%rip), %rax
    000001bb: 	movsd	0x8(%rsp), %xmm0
    000001c1: 	movq	%rax, %xmm1
    000001c6: 	comisd	%xmm0, %xmm1
    000001ca: 	ja	.Ltmp352 # Offset: 458
    000001d0: 	fldt	0x10(%rsp)
    000001d4: 	movq	DATAat0x3d710(%rip), %xmm2
    000001dc: 	jmp	.Ltmp363 # Offset: 476
    000001e1: 	nopl	(%rax) # Size: 7
.Ltmp359:
    000001e8: 	movq	%rbx, %rdi
    000001eb: 	leaq	0x20(%rsp), %rsi
    000001f0: 	xorl	%edx, %edx
    000001f2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 498
    000001f7: 	movq	%rax, (%rbx)
    000001fa: 	movq	%rax, %rdi
    000001fd: 	movq	0x20(%rsp), %rax
    00000202: 	movq	%rax, 0x10(%rbx)
.Ltmp366:
    00000206: 	movq	%r12, %rdx
    00000209: 	movq	%rbp, %rsi
    0000020c: 	callq	memcpy@PLT # Offset: 524
    00000211: 	movq	0x20(%rsp), %r12
    00000216: 	movq	(%rbx), %rdi
    00000219: 	jmp	.Ltmp364 # Offset: 537
    0000021e: 	nop # Size: 2
.Ltmp356:
    00000220: 	movq	%r12, %rsi
    00000223: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000022a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 554
    0000022f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000236: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000023d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000244: 	jne	.Ltmp365 # Offset: 580
.Ltmp361:
    0000024a: 	movq	-0x8(%rdx), %rax
    0000024e: 	addq	$0x200, %rax
    00000254: 	jmp	.Ltmp365 # Offset: 596
    00000259: 	nopl	(%rax) # Size: 7
.Ltmp360:
    00000260: 	testq	%r12, %r12
    00000263: 	je	.Ltmp364 # Offset: 611
    00000269: 	jmp	.Ltmp366 # Offset: 617
.Ltmp362:
    0000026b: 	callq	__stack_chk_fail@PLT # Offset: 619
.Ltmp358:
    00000270: 	leaq	DATAat0x3d158(%rip), %rdi
    00000277: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 631
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIe13simple_structIeEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optIf13simple_structIfEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 106
  State       : disassembled
  Address     : 0x5b70
  Size        : 0x2bc
  MaxSize     : 0x2c0
  Offset      : 0x5b70
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optIf13simple_structIfEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0105:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rdi, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movl	%esi, %ebx
    00000012: 	subq	$0x28, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x18(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	callq	clock@PLT # Offset: 38
    0000002b: 	movq	%rax, start_time(%rip)
    00000032: 	movl	iterations(%rip), %eax
    00000038: 	testl	%eax, %eax
    0000003a: 	jle	.Ltmp367 # Offset: 58
    00000040: 	pxor	%xmm8, %xmm8
    00000045: 	movss	DATAat0x3d68c(%rip), %xmm7
    0000004d: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    00000055: 	xorl	%r13d, %r13d
    00000058: 	movq	DATAat0x3d710(%rip), %xmm4
    00000060: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00000068: 	cvtsi2ss	%ebx, %xmm8
    0000006d: 	movss	DATAat0x3d720(%rip), %xmm6
    00000075: 	leaq	DATAat0x3d1c8(%rip), %rbx
.Ltmp377:
    0000007c: 	movss	0x18(%r12), %xmm2
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	cvtsd2ss	init_value(%rip), %xmm1
    0000008f: 	mulss	%xmm7, %xmm1
    00000093: 	mulss	%xmm8, %xmm2
    00000098: 	movaps	%xmm2, %xmm0
    0000009b: 	subss	%xmm1, %xmm0
    0000009f: 	movaps	%xmm2, %xmm1
    000000a2: 	andps	%xmm6, %xmm1
    000000a5: 	cvtss2sd	%xmm1, %xmm1
    000000a9: 	comisd	%xmm5, %xmm1
    000000ad: 	jbe	.Ltmp368 # Offset: 173
    000000af: 	divss	%xmm2, %xmm0
.Ltmp368:
    000000b3: 	cvtss2sd	%xmm0, %xmm0
    000000b7: 	andpd	%xmm4, %xmm0
    000000bb: 	comisd	%xmm0, %xmm3
    000000bf: 	jbe	.Ltmp369 # Offset: 191
.Ltmp367:
    000000c5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000d3: 	subq	$0x20, %rax
    000000d7: 	cmpq	%rax, %rbx
    000000da: 	je	.Ltmp370 # Offset: 218
    000000e0: 	leaq	0x10(%rbx), %rdi
    000000e4: 	movq	0x8(%rbp), %r12
    000000e8: 	movq	%rdi, (%rbx)
    000000eb: 	movq	(%rbp), %r13
    000000ef: 	movq	%r13, %rax
    000000f2: 	addq	%r12, %rax
    000000f5: 	je	.Ltmp371 # Offset: 245
    000000f7: 	testq	%r13, %r13
    000000fa: 	je	.Ltmp372 # Offset: 250
.Ltmp371:
    00000100: 	movq	%r12, 0x10(%rsp)
    00000105: 	cmpq	$0xf, %r12
    00000109: 	ja	.Ltmp373 # Offset: 265
    0000010f: 	cmpq	$0x1, %r12
    00000113: 	jne	.Ltmp374 # Offset: 275
    00000119: 	movzbl	(%r13), %eax
    0000011e: 	movb	%al, 0x10(%rbx)
.Ltmp378:
    00000121: 	movq	%r12, 0x8(%rbx)
    00000125: 	movb	$0x0, (%rdi,%r12)
    0000012a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000131: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000138: 	addq	$0x20, %rax
    0000013c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000143: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000014a: 	je	.Ltmp375 # Offset: 330
.Ltmp379:
    00000150: 	movq	-0x20(%rax), %rbp
    00000154: 	callq	clock@PLT # Offset: 340
    00000159: 	movq	%rax, end_time(%rip)
    00000160: 	movq	0x18(%rsp), %rdx
    00000165: 	subq	%fs:0x28, %rdx
    0000016e: 	jne	.Ltmp376 # Offset: 366
    00000174: 	subq	start_time(%rip), %rax
    0000017b: 	pxor	%xmm0, %xmm0
    0000017f: 	movq	%rbp, %rdi
    00000182: 	cvtsi2sd	%rax, %xmm0
    00000187: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000018f: 	addq	$0x28, %rsp
    00000193: 	popq	%rbx
    00000194: 	popq	%rbp
    00000195: 	popq	%r12
    00000197: 	popq	%r13
    00000199: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 409
    0000019e: 	nop # Size: 2
.Ltmp369:
    000001a0: 	movq	(%rbp), %rdx
    000001a4: 	xorl	%eax, %eax
    000001a6: 	movq	%rbx, %rsi
    000001a9: 	movl	$0x1, %edi
    000001ae: 	movss	%xmm8, 0xc(%rsp)
    000001b5: 	addl	$0x1, %r13d
    000001b9: 	movsd	%xmm0, (%rsp)
    000001be: 	callq	__printf_chk@PLT # Offset: 446
    000001c3: 	cmpl	iterations(%rip), %r13d
    000001ca: 	jge	.Ltmp367 # Offset: 458
    000001d0: 	movq	DATAat0x3d6f0(%rip), %rax
    000001d7: 	movsd	(%rsp), %xmm0
    000001dc: 	movq	%rax, %xmm3
    000001e1: 	comisd	%xmm0, %xmm3
    000001e5: 	ja	.Ltmp367 # Offset: 485
    000001eb: 	movq	DATAat0x3d6d8(%rip), %rax
    000001f2: 	movss	0xc(%rsp), %xmm8
    000001f9: 	movss	DATAat0x3d720(%rip), %xmm6
    00000201: 	movss	DATAat0x3d68c(%rip), %xmm7
    00000209: 	movq	DATAat0x3d710(%rip), %xmm4
    00000211: 	movq	%rax, %xmm5
    00000216: 	jmp	.Ltmp377 # Offset: 534
    0000021b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp373:
    00000220: 	movq	%rbx, %rdi
    00000223: 	leaq	0x10(%rsp), %rsi
    00000228: 	xorl	%edx, %edx
    0000022a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 554
    0000022f: 	movq	%rax, (%rbx)
    00000232: 	movq	%rax, %rdi
    00000235: 	movq	0x10(%rsp), %rax
    0000023a: 	movq	%rax, 0x10(%rbx)
.Ltmp380:
    0000023e: 	movq	%r12, %rdx
    00000241: 	movq	%r13, %rsi
    00000244: 	callq	memcpy@PLT # Offset: 580
    00000249: 	movq	0x10(%rsp), %r12
    0000024e: 	movq	(%rbx), %rdi
    00000251: 	jmp	.Ltmp378 # Offset: 593
    00000256: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp370:
    00000260: 	movq	%rbp, %rsi
    00000263: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000026a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 618
    0000026f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000276: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000027d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000284: 	jne	.Ltmp379 # Offset: 644
.Ltmp375:
    0000028a: 	movq	-0x8(%rdx), %rax
    0000028e: 	addq	$0x200, %rax
    00000294: 	jmp	.Ltmp379 # Offset: 660
    00000299: 	nopl	(%rax) # Size: 7
.Ltmp374:
    000002a0: 	testq	%r12, %r12
    000002a3: 	je	.Ltmp378 # Offset: 675
    000002a9: 	jmp	.Ltmp380 # Offset: 681
.Ltmp376:
    000002ab: 	callq	__stack_chk_fail@PLT # Offset: 683
.Ltmp372:
    000002b0: 	leaq	DATAat0x3d158(%rip), %rdi
    000002b7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 695
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optIf13simple_structIfEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z24test_struct_const_in_optId13simple_structIdEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 107
  State       : disassembled
  Address     : 0x5e30
  Size        : 0x29c
  MaxSize     : 0x2a0
  Offset      : 0x5e30
  Section     : .text
  Orc Section : .local.text._Z24test_struct_const_in_optId13simple_structIdEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0106:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movl	%esi, %r12d
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdx, %rbp
    0000000f: 	pushq	%rbx
    00000010: 	movq	%rdi, %rbx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%fs:0x28, %rax
    00000020: 	movq	%rax, 0x18(%rsp)
    00000025: 	xorl	%eax, %eax
    00000027: 	callq	clock@PLT # Offset: 39
    0000002c: 	movq	%rax, start_time(%rip)
    00000033: 	movl	iterations(%rip), %eax
    00000039: 	testl	%eax, %eax
    0000003b: 	jle	.Ltmp381 # Offset: 59
    0000003d: 	pxor	%xmm7, %xmm7
    00000041: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    00000049: 	movq	DATAat0x3d710(%rip), %xmm2
    00000051: 	xorl	%r13d, %r13d
    00000054: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    0000005c: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000064: 	cvtsi2sd	%r12d, %xmm7
    00000069: 	leaq	DATAat0x3d1c8(%rip), %r12
.Ltmp391:
    00000070: 	movsd	0x30(%rbx), %xmm1
    00000075: 	movsd	init_value(%rip), %xmm3
    0000007d: 	mulsd	%xmm7, %xmm1
    00000081: 	mulsd	%xmm6, %xmm3
    00000085: 	movapd	%xmm1, %xmm0
    00000089: 	subsd	%xmm3, %xmm0
    0000008d: 	movapd	%xmm1, %xmm3
    00000091: 	andpd	%xmm2, %xmm3
    00000095: 	comisd	%xmm5, %xmm3
    00000099: 	jbe	.Ltmp382 # Offset: 153
    0000009b: 	divsd	%xmm1, %xmm0
.Ltmp382:
    0000009f: 	andpd	%xmm2, %xmm0
    000000a3: 	comisd	%xmm0, %xmm4
    000000a7: 	jbe	.Ltmp383 # Offset: 167
.Ltmp381:
    000000ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000bb: 	subq	$0x20, %rax
    000000bf: 	cmpq	%rax, %rbx
    000000c2: 	je	.Ltmp384 # Offset: 194
    000000c8: 	leaq	0x10(%rbx), %rdi
    000000cc: 	movq	0x8(%rbp), %r12
    000000d0: 	movq	%rdi, (%rbx)
    000000d3: 	movq	(%rbp), %r13
    000000d7: 	movq	%r13, %rax
    000000da: 	addq	%r12, %rax
    000000dd: 	je	.Ltmp385 # Offset: 221
    000000df: 	testq	%r13, %r13
    000000e2: 	je	.Ltmp386 # Offset: 226
.Ltmp385:
    000000e8: 	movq	%r12, 0x10(%rsp)
    000000ed: 	cmpq	$0xf, %r12
    000000f1: 	ja	.Ltmp387 # Offset: 241
    000000f7: 	cmpq	$0x1, %r12
    000000fb: 	jne	.Ltmp388 # Offset: 251
    00000101: 	movzbl	(%r13), %eax
    00000106: 	movb	%al, 0x10(%rbx)
.Ltmp392:
    00000109: 	movq	%r12, 0x8(%rbx)
    0000010d: 	movb	$0x0, (%rdi,%r12)
    00000112: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000119: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000120: 	addq	$0x20, %rax
    00000124: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000012b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000132: 	je	.Ltmp389 # Offset: 306
.Ltmp393:
    00000138: 	movq	-0x20(%rax), %rbp
    0000013c: 	callq	clock@PLT # Offset: 316
    00000141: 	movq	%rax, end_time(%rip)
    00000148: 	movq	0x18(%rsp), %rdx
    0000014d: 	subq	%fs:0x28, %rdx
    00000156: 	jne	.Ltmp390 # Offset: 342
    0000015c: 	subq	start_time(%rip), %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	movq	%rbp, %rdi
    0000016a: 	cvtsi2sd	%rax, %xmm0
    0000016f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000177: 	addq	$0x28, %rsp
    0000017b: 	popq	%rbx
    0000017c: 	popq	%rbp
    0000017d: 	popq	%r12
    0000017f: 	popq	%r13
    00000181: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 385
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp383:
    00000190: 	movq	(%rbp), %rdx
    00000194: 	xorl	%eax, %eax
    00000196: 	movq	%r12, %rsi
    00000199: 	movl	$0x1, %edi
    0000019e: 	movsd	%xmm7, 0x8(%rsp)
    000001a4: 	addl	$0x1, %r13d
    000001a8: 	movsd	%xmm0, (%rsp)
    000001ad: 	callq	__printf_chk@PLT # Offset: 429
    000001b2: 	cmpl	iterations(%rip), %r13d
    000001b9: 	jge	.Ltmp381 # Offset: 441
    000001bf: 	movq	DATAat0x3d6e8(%rip), %rax
    000001c6: 	movsd	(%rsp), %xmm0
    000001cb: 	movq	%rax, %xmm4
    000001d0: 	comisd	%xmm0, %xmm4
    000001d4: 	ja	.Ltmp381 # Offset: 468
    000001da: 	movq	DATAat0x3d6e0(%rip), %rax
    000001e1: 	movsd	0x8(%rsp), %xmm7
    000001e7: 	movq	DATAat0x3d710(%rip), %xmm2
    000001ef: 	movq	%rax, %xmm5
    000001f4: 	movq	DATAat0x3d6f8(%rip), %rax
    000001fb: 	movq	%rax, %xmm6
    00000200: 	jmp	.Ltmp391 # Offset: 512
    00000205: 	nopl	(%rax) # Size: 3
.Ltmp387:
    00000208: 	movq	%rbx, %rdi
    0000020b: 	leaq	0x10(%rsp), %rsi
    00000210: 	xorl	%edx, %edx
    00000212: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 530
    00000217: 	movq	%rax, (%rbx)
    0000021a: 	movq	%rax, %rdi
    0000021d: 	movq	0x10(%rsp), %rax
    00000222: 	movq	%rax, 0x10(%rbx)
.Ltmp394:
    00000226: 	movq	%r12, %rdx
    00000229: 	movq	%r13, %rsi
    0000022c: 	callq	memcpy@PLT # Offset: 556
    00000231: 	movq	0x10(%rsp), %r12
    00000236: 	movq	(%rbx), %rdi
    00000239: 	jmp	.Ltmp392 # Offset: 569
    0000023e: 	nop # Size: 2
.Ltmp384:
    00000240: 	movq	%rbp, %rsi
    00000243: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000024a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 586
    0000024f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000256: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000025d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000264: 	jne	.Ltmp393 # Offset: 612
.Ltmp389:
    0000026a: 	movq	-0x8(%rdx), %rax
    0000026e: 	addq	$0x200, %rax
    00000274: 	jmp	.Ltmp393 # Offset: 628
    00000279: 	nopl	(%rax) # Size: 7
.Ltmp388:
    00000280: 	testq	%r12, %r12
    00000283: 	je	.Ltmp392 # Offset: 643
    00000289: 	jmp	.Ltmp394 # Offset: 649
.Ltmp390:
    0000028b: 	callq	__stack_chk_fail@PLT # Offset: 651
.Ltmp386:
    00000290: 	leaq	DATAat0x3d158(%rip), %rdi
    00000297: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 663
DWARF CFI Instructions:
    <empty>
End of Function "_Z24test_struct_const_in_optId13simple_structIdEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 108
  State       : disassembled
  Address     : 0x60d0
  Size        : 0x21c
  MaxSize     : 0x220
  Offset      : 0x60d0
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0107:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movq	%rsi, %r13
    00000013: 	pushq	%r12
    00000015: 	movslq	%edi, %r12
    00000018: 	pushq	%rbp
    00000019: 	xorl	%ebp, %ebp
    0000001b: 	pushq	%rbx
    0000001c: 	subq	$0x18, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp395 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp397:
    00000050: 	movq	%r12, %rdi
    00000053: 	callq	*%r13 # Offset: 83
    00000056: 	movq	%r12, %rdi
    00000059: 	movq	%rax, %rbx
    0000005c: 	callq	*%r13 # Offset: 92
    0000005f: 	imulq	$0x1f40, %rbx, %rbx
    00000066: 	imulq	$0x1f40, %rax, %rax
    0000006d: 	cmpq	%rax, %rbx
    00000070: 	je	.Ltmp396 # Offset: 112
    00000076: 	movq	(%r14), %rdx
    00000079: 	xorl	%eax, %eax
    0000007b: 	movq	%r15, %rsi
    0000007e: 	movl	$0x1, %edi
    00000083: 	addl	$0x1, %ebp
    00000086: 	callq	__printf_chk@PLT # Offset: 134
    0000008b: 	cmpl	%ebp, iterations(%rip)
    00000091: 	jg	.Ltmp397 # Offset: 145
.Ltmp395:
    00000093: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000009a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a1: 	subq	$0x20, %rax
    000000a5: 	cmpq	%rax, %rbx
    000000a8: 	je	.Ltmp398 # Offset: 168
    000000ae: 	leaq	0x10(%rbx), %rdi
    000000b2: 	movq	0x8(%r14), %r12
    000000b6: 	movq	%rdi, (%rbx)
    000000b9: 	movq	(%r14), %rbp
    000000bc: 	movq	%rbp, %rax
    000000bf: 	addq	%r12, %rax
    000000c2: 	je	.Ltmp399 # Offset: 194
    000000c4: 	testq	%rbp, %rbp
    000000c7: 	je	.Ltmp400 # Offset: 199
.Ltmp399:
    000000cd: 	movq	%r12, (%rsp)
    000000d1: 	cmpq	$0xf, %r12
    000000d5: 	ja	.Ltmp401 # Offset: 213
    000000db: 	cmpq	$0x1, %r12
    000000df: 	jne	.Ltmp402 # Offset: 223
    000000e5: 	movzbl	(%rbp), %eax
    000000e9: 	movb	%al, 0x10(%rbx)
.Ltmp405:
    000000ec: 	movq	%r12, 0x8(%rbx)
    000000f0: 	movb	$0x0, (%rdi,%r12)
    000000f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000103: 	addq	$0x20, %rax
    00000107: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000010e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000115: 	je	.Ltmp403 # Offset: 277
.Ltmp406:
    0000011b: 	movq	-0x20(%rax), %rbp
    0000011f: 	callq	clock@PLT # Offset: 287
    00000124: 	movq	%rax, end_time(%rip)
    0000012b: 	movq	0x8(%rsp), %rdx
    00000130: 	subq	%fs:0x28, %rdx
    00000139: 	jne	.Ltmp404 # Offset: 313
    0000013f: 	subq	start_time(%rip), %rax
    00000146: 	pxor	%xmm0, %xmm0
    0000014a: 	movq	%rbp, %rdi
    0000014d: 	cvtsi2sd	%rax, %xmm0
    00000152: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000015a: 	addq	$0x18, %rsp
    0000015e: 	popq	%rbx
    0000015f: 	popq	%rbp
    00000160: 	popq	%r12
    00000162: 	popq	%r13
    00000164: 	popq	%r14
    00000166: 	popq	%r15
    00000168: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 360
    0000016d: 	nopl	(%rax) # Size: 3
.Ltmp396:
    00000170: 	addl	$0x1, %ebp
    00000173: 	cmpl	iterations(%rip), %ebp
    00000179: 	jl	.Ltmp397 # Offset: 377
    0000017f: 	jmp	.Ltmp395 # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp401:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp407:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp405 # Offset: 437
    000001ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp398:
    000001c0: 	movq	%r14, %rsi
    000001c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 458
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e4: 	jne	.Ltmp406 # Offset: 484
.Ltmp403:
    000001ea: 	movq	-0x8(%rdx), %rax
    000001ee: 	addq	$0x200, %rax
    000001f4: 	jmp	.Ltmp406 # Offset: 500
    000001f9: 	nopl	(%rax) # Size: 7
.Ltmp402:
    00000200: 	testq	%r12, %r12
    00000203: 	je	.Ltmp405 # Offset: 515
    00000209: 	jmp	.Ltmp407 # Offset: 521
.Ltmp404:
    0000020b: 	callq	__stack_chk_fail@PLT # Offset: 523
.Ltmp400:
    00000210: 	leaq	DATAat0x3d158(%rip), %rdi
    00000217: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 535
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 109
  State       : disassembled
  Address     : 0x62f0
  Size        : 0x21c
  MaxSize     : 0x220
  Offset      : 0x62f0
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0108:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movq	%rsi, %r13
    00000013: 	pushq	%r12
    00000015: 	movl	%edi, %r12d
    00000018: 	pushq	%rbp
    00000019: 	movswl	%r12w, %r12d
    0000001d: 	xorl	%ebp, %ebp
    0000001f: 	pushq	%rbx
    00000020: 	subq	$0x18, %rsp
    00000024: 	movq	%fs:0x28, %rax
    0000002d: 	movq	%rax, 0x8(%rsp)
    00000032: 	xorl	%eax, %eax
    00000034: 	callq	clock@PLT # Offset: 52
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	movl	iterations(%rip), %eax
    00000046: 	testl	%eax, %eax
    00000048: 	jle	.Ltmp408 # Offset: 72
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp410:
    00000050: 	movl	%r12d, %edi
    00000053: 	callq	*%r13 # Offset: 83
    00000056: 	movl	%r12d, %edi
    00000059: 	movl	%eax, %ebx
    0000005b: 	callq	*%r13 # Offset: 91
    0000005e: 	imulw	$0x1f40, %bx, %bx
    00000063: 	imulw	$0x1f40, %ax, %ax
    00000068: 	cmpw	%ax, %bx
    0000006b: 	je	.Ltmp409 # Offset: 107
    00000071: 	movq	(%r14), %rdx
    00000074: 	xorl	%eax, %eax
    00000076: 	movq	%r15, %rsi
    00000079: 	movl	$0x1, %edi
    0000007e: 	addl	$0x1, %ebp
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	cmpl	%ebp, iterations(%rip)
    0000008c: 	jg	.Ltmp410 # Offset: 140
.Ltmp408:
    0000008e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000095: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009c: 	subq	$0x20, %rax
    000000a0: 	cmpq	%rax, %rbx
    000000a3: 	je	.Ltmp411 # Offset: 163
    000000a9: 	leaq	0x10(%rbx), %rdi
    000000ad: 	movq	0x8(%r14), %r12
    000000b1: 	movq	%rdi, (%rbx)
    000000b4: 	movq	(%r14), %rbp
    000000b7: 	movq	%rbp, %rax
    000000ba: 	addq	%r12, %rax
    000000bd: 	je	.Ltmp412 # Offset: 189
    000000bf: 	testq	%rbp, %rbp
    000000c2: 	je	.Ltmp413 # Offset: 194
.Ltmp412:
    000000c8: 	movq	%r12, (%rsp)
    000000cc: 	cmpq	$0xf, %r12
    000000d0: 	ja	.Ltmp414 # Offset: 208
    000000d6: 	cmpq	$0x1, %r12
    000000da: 	jne	.Ltmp415 # Offset: 218
    000000e0: 	movzbl	(%rbp), %eax
    000000e4: 	movb	%al, 0x10(%rbx)
.Ltmp418:
    000000e7: 	movq	%r12, 0x8(%rbx)
    000000eb: 	movb	$0x0, (%rdi,%r12)
    000000f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fe: 	addq	$0x20, %rax
    00000102: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000109: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000110: 	je	.Ltmp416 # Offset: 272
.Ltmp419:
    00000116: 	movq	-0x20(%rax), %rbp
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	movq	%rax, end_time(%rip)
    00000126: 	movq	0x8(%rsp), %rdx
    0000012b: 	subq	%fs:0x28, %rdx
    00000134: 	jne	.Ltmp417 # Offset: 308
    0000013a: 	subq	start_time(%rip), %rax
    00000141: 	pxor	%xmm0, %xmm0
    00000145: 	movq	%rbp, %rdi
    00000148: 	cvtsi2sd	%rax, %xmm0
    0000014d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000155: 	addq	$0x18, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	popq	%r12
    0000015d: 	popq	%r13
    0000015f: 	popq	%r14
    00000161: 	popq	%r15
    00000163: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp409:
    00000170: 	addl	$0x1, %ebp
    00000173: 	cmpl	iterations(%rip), %ebp
    00000179: 	jl	.Ltmp410 # Offset: 377
    0000017f: 	jmp	.Ltmp408 # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp414:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp420:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp418 # Offset: 437
    000001ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp411:
    000001c0: 	movq	%r14, %rsi
    000001c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 458
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e4: 	jne	.Ltmp419 # Offset: 484
.Ltmp416:
    000001ea: 	movq	-0x8(%rdx), %rax
    000001ee: 	addq	$0x200, %rax
    000001f4: 	jmp	.Ltmp419 # Offset: 500
    000001f9: 	nopl	(%rax) # Size: 7
.Ltmp415:
    00000200: 	testq	%r12, %r12
    00000203: 	je	.Ltmp418 # Offset: 515
    00000209: 	jmp	.Ltmp420 # Offset: 521
.Ltmp417:
    0000020b: 	callq	__stack_chk_fail@PLT # Offset: 523
.Ltmp413:
    00000210: 	leaq	DATAat0x3d158(%rip), %rdi
    00000217: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 535
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 110
  State       : disassembled
  Address     : 0x6510
  Size        : 0x21c
  MaxSize     : 0x220
  Offset      : 0x6510
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0109:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movl	%edi, %r13d
    00000013: 	pushq	%r12
    00000015: 	movq	%rsi, %r12
    00000018: 	pushq	%rbp
    00000019: 	xorl	%ebp, %ebp
    0000001b: 	pushq	%rbx
    0000001c: 	subq	$0x18, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp421 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp423:
    00000050: 	movl	%r13d, %edi
    00000053: 	callq	*%r12 # Offset: 83
    00000056: 	movl	%r13d, %edi
    00000059: 	movl	%eax, %ebx
    0000005b: 	callq	*%r12 # Offset: 91
    0000005e: 	imull	$0x1f40, %ebx, %ebx
    00000064: 	imull	$0x1f40, %eax, %eax
    0000006a: 	cmpl	%eax, %ebx
    0000006c: 	je	.Ltmp422 # Offset: 108
    00000072: 	movq	(%r14), %rdx
    00000075: 	xorl	%eax, %eax
    00000077: 	movq	%r15, %rsi
    0000007a: 	movl	$0x1, %edi
    0000007f: 	addl	$0x1, %ebp
    00000082: 	callq	__printf_chk@PLT # Offset: 130
    00000087: 	cmpl	%ebp, iterations(%rip)
    0000008d: 	jg	.Ltmp423 # Offset: 141
.Ltmp421:
    0000008f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000096: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009d: 	subq	$0x20, %rax
    000000a1: 	cmpq	%rax, %rbx
    000000a4: 	je	.Ltmp424 # Offset: 164
    000000aa: 	leaq	0x10(%rbx), %rdi
    000000ae: 	movq	0x8(%r14), %r12
    000000b2: 	movq	%rdi, (%rbx)
    000000b5: 	movq	(%r14), %rbp
    000000b8: 	movq	%rbp, %rax
    000000bb: 	addq	%r12, %rax
    000000be: 	je	.Ltmp425 # Offset: 190
    000000c0: 	testq	%rbp, %rbp
    000000c3: 	je	.Ltmp426 # Offset: 195
.Ltmp425:
    000000c9: 	movq	%r12, (%rsp)
    000000cd: 	cmpq	$0xf, %r12
    000000d1: 	ja	.Ltmp427 # Offset: 209
    000000d7: 	cmpq	$0x1, %r12
    000000db: 	jne	.Ltmp428 # Offset: 219
    000000e1: 	movzbl	(%rbp), %eax
    000000e5: 	movb	%al, 0x10(%rbx)
.Ltmp431:
    000000e8: 	movq	%r12, 0x8(%rbx)
    000000ec: 	movb	$0x0, (%rdi,%r12)
    000000f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000ff: 	addq	$0x20, %rax
    00000103: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000010a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000111: 	je	.Ltmp429 # Offset: 273
.Ltmp432:
    00000117: 	movq	-0x20(%rax), %rbp
    0000011b: 	callq	clock@PLT # Offset: 283
    00000120: 	movq	%rax, end_time(%rip)
    00000127: 	movq	0x8(%rsp), %rdx
    0000012c: 	subq	%fs:0x28, %rdx
    00000135: 	jne	.Ltmp430 # Offset: 309
    0000013b: 	subq	start_time(%rip), %rax
    00000142: 	pxor	%xmm0, %xmm0
    00000146: 	movq	%rbp, %rdi
    00000149: 	cvtsi2sd	%rax, %xmm0
    0000014e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000156: 	addq	$0x18, %rsp
    0000015a: 	popq	%rbx
    0000015b: 	popq	%rbp
    0000015c: 	popq	%r12
    0000015e: 	popq	%r13
    00000160: 	popq	%r14
    00000162: 	popq	%r15
    00000164: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp422:
    00000170: 	addl	$0x1, %ebp
    00000173: 	cmpl	iterations(%rip), %ebp
    00000179: 	jl	.Ltmp423 # Offset: 377
    0000017f: 	jmp	.Ltmp421 # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp427:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp433:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp431 # Offset: 437
    000001ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp424:
    000001c0: 	movq	%r14, %rsi
    000001c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 458
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e4: 	jne	.Ltmp432 # Offset: 484
.Ltmp429:
    000001ea: 	movq	-0x8(%rdx), %rax
    000001ee: 	addq	$0x200, %rax
    000001f4: 	jmp	.Ltmp432 # Offset: 500
    000001f9: 	nopl	(%rax) # Size: 7
.Ltmp428:
    00000200: 	testq	%r12, %r12
    00000203: 	je	.Ltmp431 # Offset: 515
    00000209: 	jmp	.Ltmp433 # Offset: 521
.Ltmp430:
    0000020b: 	callq	__stack_chk_fail@PLT # Offset: 523
.Ltmp426:
    00000210: 	leaq	DATAat0x3d158(%rip), %rdi
    00000217: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 535
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 111
  State       : disassembled
  Address     : 0x6730
  Size        : 0x21c
  MaxSize     : 0x220
  Offset      : 0x6730
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0110:
    00000000: 	pushq	%r15
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rdx, %r14
    0000000e: 	pushq	%r13
    00000010: 	movq	%rsi, %r13
    00000013: 	pushq	%r12
    00000015: 	movl	%edi, %r12d
    00000018: 	pushq	%rbp
    00000019: 	movzwl	%r12w, %r12d
    0000001d: 	xorl	%ebp, %ebp
    0000001f: 	pushq	%rbx
    00000020: 	subq	$0x18, %rsp
    00000024: 	movq	%fs:0x28, %rax
    0000002d: 	movq	%rax, 0x8(%rsp)
    00000032: 	xorl	%eax, %eax
    00000034: 	callq	clock@PLT # Offset: 52
    00000039: 	movq	%rax, start_time(%rip)
    00000040: 	movl	iterations(%rip), %eax
    00000046: 	testl	%eax, %eax
    00000048: 	jle	.Ltmp434 # Offset: 72
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp436:
    00000050: 	movl	%r12d, %edi
    00000053: 	callq	*%r13 # Offset: 83
    00000056: 	movl	%r12d, %edi
    00000059: 	movl	%eax, %ebx
    0000005b: 	callq	*%r13 # Offset: 91
    0000005e: 	imulw	$0x1f40, %bx, %bx
    00000063: 	imulw	$0x1f40, %ax, %ax
    00000068: 	cmpw	%ax, %bx
    0000006b: 	je	.Ltmp435 # Offset: 107
    00000071: 	movq	(%r14), %rdx
    00000074: 	xorl	%eax, %eax
    00000076: 	movq	%r15, %rsi
    00000079: 	movl	$0x1, %edi
    0000007e: 	addl	$0x1, %ebp
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	cmpl	%ebp, iterations(%rip)
    0000008c: 	jg	.Ltmp436 # Offset: 140
.Ltmp434:
    0000008e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000095: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000009c: 	subq	$0x20, %rax
    000000a0: 	cmpq	%rax, %rbx
    000000a3: 	je	.Ltmp437 # Offset: 163
    000000a9: 	leaq	0x10(%rbx), %rdi
    000000ad: 	movq	0x8(%r14), %r12
    000000b1: 	movq	%rdi, (%rbx)
    000000b4: 	movq	(%r14), %rbp
    000000b7: 	movq	%rbp, %rax
    000000ba: 	addq	%r12, %rax
    000000bd: 	je	.Ltmp438 # Offset: 189
    000000bf: 	testq	%rbp, %rbp
    000000c2: 	je	.Ltmp439 # Offset: 194
.Ltmp438:
    000000c8: 	movq	%r12, (%rsp)
    000000cc: 	cmpq	$0xf, %r12
    000000d0: 	ja	.Ltmp440 # Offset: 208
    000000d6: 	cmpq	$0x1, %r12
    000000da: 	jne	.Ltmp441 # Offset: 218
    000000e0: 	movzbl	(%rbp), %eax
    000000e4: 	movb	%al, 0x10(%rbx)
.Ltmp444:
    000000e7: 	movq	%r12, 0x8(%rbx)
    000000eb: 	movb	$0x0, (%rdi,%r12)
    000000f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fe: 	addq	$0x20, %rax
    00000102: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000109: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000110: 	je	.Ltmp442 # Offset: 272
.Ltmp445:
    00000116: 	movq	-0x20(%rax), %rbp
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	movq	%rax, end_time(%rip)
    00000126: 	movq	0x8(%rsp), %rdx
    0000012b: 	subq	%fs:0x28, %rdx
    00000134: 	jne	.Ltmp443 # Offset: 308
    0000013a: 	subq	start_time(%rip), %rax
    00000141: 	pxor	%xmm0, %xmm0
    00000145: 	movq	%rbp, %rdi
    00000148: 	cvtsi2sd	%rax, %xmm0
    0000014d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000155: 	addq	$0x18, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	popq	%r12
    0000015d: 	popq	%r13
    0000015f: 	popq	%r14
    00000161: 	popq	%r15
    00000163: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp435:
    00000170: 	addl	$0x1, %ebp
    00000173: 	cmpl	iterations(%rip), %ebp
    00000179: 	jl	.Ltmp436 # Offset: 377
    0000017f: 	jmp	.Ltmp434 # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp440:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp446:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp444 # Offset: 437
    000001ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp437:
    000001c0: 	movq	%r14, %rsi
    000001c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 458
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e4: 	jne	.Ltmp445 # Offset: 484
.Ltmp442:
    000001ea: 	movq	-0x8(%rdx), %rax
    000001ee: 	addq	$0x200, %rax
    000001f4: 	jmp	.Ltmp445 # Offset: 500
    000001f9: 	nopl	(%rax) # Size: 7
.Ltmp441:
    00000200: 	testq	%r12, %r12
    00000203: 	je	.Ltmp444 # Offset: 515
    00000209: 	jmp	.Ltmp446 # Offset: 521
.Ltmp443:
    0000020b: 	callq	__stack_chk_fail@PLT # Offset: 523
.Ltmp439:
    00000210: 	leaq	DATAat0x3d158(%rip), %rdi
    00000217: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 535
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_array_const_in_optIfEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 112
  State       : disassembled
  Address     : 0x6950
  Size        : 0x2cc
  MaxSize     : 0x2d0
  Offset      : 0x6950
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIfEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0111:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movl	%edx, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rcx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movl	%esi, %ebx
    00000015: 	subq	$0x28, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x18(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movl	iterations(%rip), %eax
    0000003b: 	testl	%eax, %eax
    0000003d: 	jle	.Ltmp447 # Offset: 61
    00000043: 	movslq	%r13d, %rax
    00000046: 	pxor	%xmm8, %xmm8
    0000004b: 	movss	DATAat0x3d68c(%rip), %xmm7
    00000053: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    0000005b: 	movq	DATAat0x3d710(%rip), %xmm4
    00000063: 	cvtsi2ss	%ebx, %xmm8
    00000068: 	leaq	(%r12,%rax,4), %r12
    0000006c: 	xorl	%r13d, %r13d
    0000006f: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00000077: 	movss	DATAat0x3d720(%rip), %xmm6
    0000007f: 	leaq	DATAat0x3d1c8(%rip), %rbx
.Ltmp457:
    00000086: 	movss	(%r12), %xmm2
    0000008c: 	pxor	%xmm1, %xmm1
    00000090: 	cvtsd2ss	init_value(%rip), %xmm1
    00000098: 	mulss	%xmm7, %xmm1
    0000009c: 	mulss	%xmm8, %xmm2
    000000a1: 	movaps	%xmm2, %xmm0
    000000a4: 	subss	%xmm1, %xmm0
    000000a8: 	movaps	%xmm2, %xmm1
    000000ab: 	andps	%xmm6, %xmm1
    000000ae: 	cvtss2sd	%xmm1, %xmm1
    000000b2: 	comisd	%xmm5, %xmm1
    000000b6: 	jbe	.Ltmp448 # Offset: 182
    000000b8: 	divss	%xmm2, %xmm0
.Ltmp448:
    000000bc: 	cvtss2sd	%xmm0, %xmm0
    000000c0: 	andpd	%xmm4, %xmm0
    000000c4: 	comisd	%xmm0, %xmm3
    000000c8: 	jbe	.Ltmp449 # Offset: 200
.Ltmp447:
    000000ce: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000dc: 	subq	$0x20, %rax
    000000e0: 	cmpq	%rax, %rbx
    000000e3: 	je	.Ltmp450 # Offset: 227
    000000e9: 	leaq	0x10(%rbx), %rdi
    000000ed: 	movq	0x8(%rbp), %r12
    000000f1: 	movq	%rdi, (%rbx)
    000000f4: 	movq	(%rbp), %r13
    000000f8: 	movq	%r13, %rax
    000000fb: 	addq	%r12, %rax
    000000fe: 	je	.Ltmp451 # Offset: 254
    00000100: 	testq	%r13, %r13
    00000103: 	je	.Ltmp452 # Offset: 259
.Ltmp451:
    00000109: 	movq	%r12, 0x10(%rsp)
    0000010e: 	cmpq	$0xf, %r12
    00000112: 	ja	.Ltmp453 # Offset: 274
    00000118: 	cmpq	$0x1, %r12
    0000011c: 	jne	.Ltmp454 # Offset: 284
    00000122: 	movzbl	(%r13), %eax
    00000127: 	movb	%al, 0x10(%rbx)
.Ltmp458:
    0000012a: 	movq	%r12, 0x8(%rbx)
    0000012e: 	movb	$0x0, (%rdi,%r12)
    00000133: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000141: 	addq	$0x20, %rax
    00000145: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000153: 	je	.Ltmp455 # Offset: 339
.Ltmp459:
    00000159: 	movq	-0x20(%rax), %rbp
    0000015d: 	callq	clock@PLT # Offset: 349
    00000162: 	movq	%rax, end_time(%rip)
    00000169: 	movq	0x18(%rsp), %rdx
    0000016e: 	subq	%fs:0x28, %rdx
    00000177: 	jne	.Ltmp456 # Offset: 375
    0000017d: 	subq	start_time(%rip), %rax
    00000184: 	pxor	%xmm0, %xmm0
    00000188: 	movq	%rbp, %rdi
    0000018b: 	cvtsi2sd	%rax, %xmm0
    00000190: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000198: 	addq	$0x28, %rsp
    0000019c: 	popq	%rbx
    0000019d: 	popq	%rbp
    0000019e: 	popq	%r12
    000001a0: 	popq	%r13
    000001a2: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 418
    000001a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp449:
    000001b0: 	movq	(%rbp), %rdx
    000001b4: 	xorl	%eax, %eax
    000001b6: 	movq	%rbx, %rsi
    000001b9: 	movl	$0x1, %edi
    000001be: 	movss	%xmm8, 0xc(%rsp)
    000001c5: 	addl	$0x1, %r13d
    000001c9: 	movsd	%xmm0, (%rsp)
    000001ce: 	callq	__printf_chk@PLT # Offset: 462
    000001d3: 	cmpl	iterations(%rip), %r13d
    000001da: 	jge	.Ltmp447 # Offset: 474
    000001e0: 	movq	DATAat0x3d6f0(%rip), %rax
    000001e7: 	movsd	(%rsp), %xmm0
    000001ec: 	movq	%rax, %xmm3
    000001f1: 	comisd	%xmm0, %xmm3
    000001f5: 	ja	.Ltmp447 # Offset: 501
    000001fb: 	movq	DATAat0x3d6d8(%rip), %rax
    00000202: 	movss	0xc(%rsp), %xmm8
    00000209: 	movss	DATAat0x3d720(%rip), %xmm6
    00000211: 	movss	DATAat0x3d68c(%rip), %xmm7
    00000219: 	movq	DATAat0x3d710(%rip), %xmm4
    00000221: 	movq	%rax, %xmm5
    00000226: 	jmp	.Ltmp457 # Offset: 550
    0000022b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp453:
    00000230: 	movq	%rbx, %rdi
    00000233: 	leaq	0x10(%rsp), %rsi
    00000238: 	xorl	%edx, %edx
    0000023a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 570
    0000023f: 	movq	%rax, (%rbx)
    00000242: 	movq	%rax, %rdi
    00000245: 	movq	0x10(%rsp), %rax
    0000024a: 	movq	%rax, 0x10(%rbx)
.Ltmp460:
    0000024e: 	movq	%r12, %rdx
    00000251: 	movq	%r13, %rsi
    00000254: 	callq	memcpy@PLT # Offset: 596
    00000259: 	movq	0x10(%rsp), %r12
    0000025e: 	movq	(%rbx), %rdi
    00000261: 	jmp	.Ltmp458 # Offset: 609
    00000266: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp450:
    00000270: 	movq	%rbp, %rsi
    00000273: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000027a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 634
    0000027f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000286: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000028d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000294: 	jne	.Ltmp459 # Offset: 660
.Ltmp455:
    0000029a: 	movq	-0x8(%rdx), %rax
    0000029e: 	addq	$0x200, %rax
    000002a4: 	jmp	.Ltmp459 # Offset: 676
    000002a9: 	nopl	(%rax) # Size: 7
.Ltmp454:
    000002b0: 	testq	%r12, %r12
    000002b3: 	je	.Ltmp458 # Offset: 691
    000002b9: 	jmp	.Ltmp460 # Offset: 697
.Ltmp456:
    000002bb: 	callq	__stack_chk_fail@PLT # Offset: 699
.Ltmp452:
    000002c0: 	leaq	DATAat0x3d158(%rip), %rdi
    000002c7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 711
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIfEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIeEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 113
  State       : disassembled
  Address     : 0x6c20
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x6c20
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIeEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0112:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	movq	%rcx, %r12
    0000000b: 	pushq	%rbp
    0000000c: 	movl	%edx, %ebp
    0000000e: 	pushq	%rbx
    0000000f: 	movq	%rdi, %rbx
    00000012: 	subq	$0x38, %rsp
    00000016: 	movl	%esi, 0x8(%rsp)
    0000001a: 	movq	%fs:0x28, %rax
    00000023: 	movq	%rax, 0x28(%rsp)
    00000028: 	xorl	%eax, %eax
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	movl	iterations(%rip), %eax
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp461 # Offset: 62
    00000040: 	fildl	0x8(%rsp)
    00000044: 	movslq	%ebp, %rdx
    00000047: 	movq	DATAat0x3d710(%rip), %xmm2
    0000004f: 	xorl	%ebp, %ebp
    00000051: 	shlq	$0x4, %rdx
    00000055: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    0000005d: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000064: 	addq	%rdx, %rbx
.Ltmp472:
    00000067: 	fldt	(%rbx)
    00000069: 	fmul	%st(1), %st
    0000006b: 	flds	DATAat0x3d68c(%rip)
    00000071: 	fmull	init_value(%rip)
    00000077: 	fsubr	%st(1), %st
    00000079: 	fstpl	0x8(%rsp)
    0000007d: 	fld	%st(0)
    0000007f: 	fabs
    00000081: 	fldl	DATAat0x3d6e0(%rip)
    00000087: 	fxch	%st(1)
    00000089: 	fcompi	%st(1), %st
    0000008b: 	fstp	%st(0)
    0000008d: 	jbe	.Ltmp462 # Offset: 141
    0000008f: 	fdivrl	0x8(%rsp)
    00000093: 	fstpl	0x8(%rsp)
    00000097: 	jmp	.Ltmp463 # Offset: 151
    00000099: 	nopl	(%rax) # Size: 7
.Ltmp462:
    000000a0: 	fstp	%st(0)
.Ltmp463:
    000000a2: 	movsd	0x8(%rsp), %xmm0
    000000a8: 	andpd	%xmm2, %xmm0
    000000ac: 	comisd	%xmm0, %xmm1
    000000b0: 	jbe	.Ltmp464 # Offset: 176
    000000b6: 	fstp	%st(0)
.Ltmp461:
    000000b8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c6: 	subq	$0x20, %rax
    000000ca: 	cmpq	%rax, %rbx
    000000cd: 	je	.Ltmp465 # Offset: 205
    000000d3: 	leaq	0x10(%rbx), %rdi
    000000d7: 	movq	%rdi, (%rbx)
    000000da: 	movq	(%r12), %rbp
    000000de: 	movq	0x8(%r12), %r12
    000000e3: 	movq	%rbp, %rax
    000000e6: 	addq	%r12, %rax
    000000e9: 	je	.Ltmp466 # Offset: 233
    000000eb: 	testq	%rbp, %rbp
    000000ee: 	je	.Ltmp467 # Offset: 238
.Ltmp466:
    000000f4: 	movq	%r12, 0x20(%rsp)
    000000f9: 	cmpq	$0xf, %r12
    000000fd: 	ja	.Ltmp468 # Offset: 253
    00000103: 	cmpq	$0x1, %r12
    00000107: 	jne	.Ltmp469 # Offset: 263
    0000010d: 	movzbl	(%rbp), %eax
    00000111: 	movb	%al, 0x10(%rbx)
.Ltmp473:
    00000114: 	movq	%r12, 0x8(%rbx)
    00000118: 	movb	$0x0, (%rdi,%r12)
    0000011d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000124: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000012b: 	addq	$0x20, %rax
    0000012f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000136: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013d: 	je	.Ltmp470 # Offset: 317
.Ltmp474:
    00000143: 	movq	-0x20(%rax), %rbp
    00000147: 	callq	clock@PLT # Offset: 327
    0000014c: 	movq	%rax, end_time(%rip)
    00000153: 	movq	0x28(%rsp), %rdx
    00000158: 	subq	%fs:0x28, %rdx
    00000161: 	jne	.Ltmp471 # Offset: 353
    00000167: 	subq	start_time(%rip), %rax
    0000016e: 	pxor	%xmm0, %xmm0
    00000172: 	movq	%rbp, %rdi
    00000175: 	cvtsi2sd	%rax, %xmm0
    0000017a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000182: 	addq	$0x38, %rsp
    00000186: 	popq	%rbx
    00000187: 	popq	%rbp
    00000188: 	popq	%r12
    0000018a: 	popq	%r13
    0000018c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 396
    00000191: 	nopl	(%rax) # Size: 7
.Ltmp464:
    00000198: 	movq	(%r12), %rdx
    0000019c: 	xorl	%eax, %eax
    0000019e: 	movq	%r13, %rsi
    000001a1: 	movl	$0x1, %edi
    000001a6: 	fstpt	0x10(%rsp)
    000001aa: 	addl	$0x1, %ebp
    000001ad: 	movsd	%xmm0, 0x8(%rsp)
    000001b3: 	callq	__printf_chk@PLT # Offset: 435
    000001b8: 	cmpl	iterations(%rip), %ebp
    000001be: 	jge	.Ltmp461 # Offset: 446
    000001c4: 	movq	DATAat0x3d6e8(%rip), %rax
    000001cb: 	movsd	0x8(%rsp), %xmm0
    000001d1: 	movq	%rax, %xmm1
    000001d6: 	comisd	%xmm0, %xmm1
    000001da: 	ja	.Ltmp461 # Offset: 474
    000001e0: 	fldt	0x10(%rsp)
    000001e4: 	movq	DATAat0x3d710(%rip), %xmm2
    000001ec: 	jmp	.Ltmp472 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp468:
    000001f8: 	movq	%rbx, %rdi
    000001fb: 	leaq	0x20(%rsp), %rsi
    00000200: 	xorl	%edx, %edx
    00000202: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 514
    00000207: 	movq	%rax, (%rbx)
    0000020a: 	movq	%rax, %rdi
    0000020d: 	movq	0x20(%rsp), %rax
    00000212: 	movq	%rax, 0x10(%rbx)
.Ltmp475:
    00000216: 	movq	%r12, %rdx
    00000219: 	movq	%rbp, %rsi
    0000021c: 	callq	memcpy@PLT # Offset: 540
    00000221: 	movq	0x20(%rsp), %r12
    00000226: 	movq	(%rbx), %rdi
    00000229: 	jmp	.Ltmp473 # Offset: 553
    0000022e: 	nop # Size: 2
.Ltmp465:
    00000230: 	movq	%r12, %rsi
    00000233: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000023a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 570
    0000023f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000246: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000254: 	jne	.Ltmp474 # Offset: 596
.Ltmp470:
    0000025a: 	movq	-0x8(%rdx), %rax
    0000025e: 	addq	$0x200, %rax
    00000264: 	jmp	.Ltmp474 # Offset: 612
    00000269: 	nopl	(%rax) # Size: 7
.Ltmp469:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp473 # Offset: 627
    00000279: 	jmp	.Ltmp475 # Offset: 633
.Ltmp471:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp467:
    00000280: 	leaq	DATAat0x3d158(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIeEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z23test_array_const_in_optIdEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 114
  State       : disassembled
  Address     : 0x6eb0
  Size        : 0x29c
  MaxSize     : 0x2a0
  Offset      : 0x6eb0
  Section     : .text
  Orc Section : .local.text._Z23test_array_const_in_optIdEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0113:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movl	%edx, %r13d
    00000009: 	pushq	%r12
    0000000b: 	movl	%esi, %r12d
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rcx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movq	%rdi, %rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%fs:0x28, %rax
    00000023: 	movq	%rax, 0x18(%rsp)
    00000028: 	xorl	%eax, %eax
    0000002a: 	callq	clock@PLT # Offset: 42
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	movl	iterations(%rip), %eax
    0000003c: 	testl	%eax, %eax
    0000003e: 	jle	.Ltmp476 # Offset: 62
    00000040: 	movslq	%r13d, %rax
    00000043: 	pxor	%xmm7, %xmm7
    00000047: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    0000004f: 	movq	DATAat0x3d710(%rip), %xmm2
    00000057: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    0000005f: 	cvtsi2sd	%r12d, %xmm7
    00000064: 	leaq	(%rbx,%rax,8), %rbx
    00000068: 	xorl	%r13d, %r13d
    0000006b: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000073: 	leaq	DATAat0x3d1c8(%rip), %r12
.Ltmp486:
    0000007a: 	movsd	(%rbx), %xmm1
    0000007e: 	movsd	init_value(%rip), %xmm3
    00000086: 	mulsd	%xmm7, %xmm1
    0000008a: 	mulsd	%xmm6, %xmm3
    0000008e: 	movapd	%xmm1, %xmm0
    00000092: 	subsd	%xmm3, %xmm0
    00000096: 	movapd	%xmm1, %xmm3
    0000009a: 	andpd	%xmm2, %xmm3
    0000009e: 	comisd	%xmm5, %xmm3
    000000a2: 	jbe	.Ltmp477 # Offset: 162
    000000a4: 	divsd	%xmm1, %xmm0
.Ltmp477:
    000000a8: 	andpd	%xmm2, %xmm0
    000000ac: 	comisd	%xmm0, %xmm4
    000000b0: 	jbe	.Ltmp478 # Offset: 176
.Ltmp476:
    000000b6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c4: 	subq	$0x20, %rax
    000000c8: 	cmpq	%rax, %rbx
    000000cb: 	je	.Ltmp479 # Offset: 203
    000000d1: 	leaq	0x10(%rbx), %rdi
    000000d5: 	movq	0x8(%rbp), %r12
    000000d9: 	movq	%rdi, (%rbx)
    000000dc: 	movq	(%rbp), %r13
    000000e0: 	movq	%r13, %rax
    000000e3: 	addq	%r12, %rax
    000000e6: 	je	.Ltmp480 # Offset: 230
    000000e8: 	testq	%r13, %r13
    000000eb: 	je	.Ltmp481 # Offset: 235
.Ltmp480:
    000000f1: 	movq	%r12, 0x10(%rsp)
    000000f6: 	cmpq	$0xf, %r12
    000000fa: 	ja	.Ltmp482 # Offset: 250
    00000100: 	cmpq	$0x1, %r12
    00000104: 	jne	.Ltmp483 # Offset: 260
    0000010a: 	movzbl	(%r13), %eax
    0000010f: 	movb	%al, 0x10(%rbx)
.Ltmp487:
    00000112: 	movq	%r12, 0x8(%rbx)
    00000116: 	movb	$0x0, (%rdi,%r12)
    0000011b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000122: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000129: 	addq	$0x20, %rax
    0000012d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000134: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013b: 	je	.Ltmp484 # Offset: 315
.Ltmp488:
    00000141: 	movq	-0x20(%rax), %rbp
    00000145: 	callq	clock@PLT # Offset: 325
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	movq	0x18(%rsp), %rdx
    00000156: 	subq	%fs:0x28, %rdx
    0000015f: 	jne	.Ltmp485 # Offset: 351
    00000165: 	subq	start_time(%rip), %rax
    0000016c: 	pxor	%xmm0, %xmm0
    00000170: 	movq	%rbp, %rdi
    00000173: 	cvtsi2sd	%rax, %xmm0
    00000178: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000180: 	addq	$0x28, %rsp
    00000184: 	popq	%rbx
    00000185: 	popq	%rbp
    00000186: 	popq	%r12
    00000188: 	popq	%r13
    0000018a: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 394
    0000018f: 	nop # Size: 1
.Ltmp478:
    00000190: 	movq	(%rbp), %rdx
    00000194: 	xorl	%eax, %eax
    00000196: 	movq	%r12, %rsi
    00000199: 	movl	$0x1, %edi
    0000019e: 	movsd	%xmm7, 0x8(%rsp)
    000001a4: 	addl	$0x1, %r13d
    000001a8: 	movsd	%xmm0, (%rsp)
    000001ad: 	callq	__printf_chk@PLT # Offset: 429
    000001b2: 	cmpl	iterations(%rip), %r13d
    000001b9: 	jge	.Ltmp476 # Offset: 441
    000001bf: 	movq	DATAat0x3d6e8(%rip), %rax
    000001c6: 	movsd	(%rsp), %xmm0
    000001cb: 	movq	%rax, %xmm4
    000001d0: 	comisd	%xmm0, %xmm4
    000001d4: 	ja	.Ltmp476 # Offset: 468
    000001da: 	movq	DATAat0x3d6e0(%rip), %rax
    000001e1: 	movsd	0x8(%rsp), %xmm7
    000001e7: 	movq	DATAat0x3d710(%rip), %xmm2
    000001ef: 	movq	%rax, %xmm5
    000001f4: 	movq	DATAat0x3d6f8(%rip), %rax
    000001fb: 	movq	%rax, %xmm6
    00000200: 	jmp	.Ltmp486 # Offset: 512
    00000205: 	nopl	(%rax) # Size: 3
.Ltmp482:
    00000208: 	movq	%rbx, %rdi
    0000020b: 	leaq	0x10(%rsp), %rsi
    00000210: 	xorl	%edx, %edx
    00000212: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 530
    00000217: 	movq	%rax, (%rbx)
    0000021a: 	movq	%rax, %rdi
    0000021d: 	movq	0x10(%rsp), %rax
    00000222: 	movq	%rax, 0x10(%rbx)
.Ltmp489:
    00000226: 	movq	%r12, %rdx
    00000229: 	movq	%r13, %rsi
    0000022c: 	callq	memcpy@PLT # Offset: 556
    00000231: 	movq	0x10(%rsp), %r12
    00000236: 	movq	(%rbx), %rdi
    00000239: 	jmp	.Ltmp487 # Offset: 569
    0000023e: 	nop # Size: 2
.Ltmp479:
    00000240: 	movq	%rbp, %rsi
    00000243: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000024a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 586
    0000024f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000256: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000025d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000264: 	jne	.Ltmp488 # Offset: 612
.Ltmp484:
    0000026a: 	movq	-0x8(%rdx), %rax
    0000026e: 	addq	$0x200, %rax
    00000274: 	jmp	.Ltmp488 # Offset: 628
    00000279: 	nopl	(%rax) # Size: 7
.Ltmp483:
    00000280: 	testq	%r12, %r12
    00000283: 	je	.Ltmp487 # Offset: 643
    00000289: 	jmp	.Ltmp489 # Offset: 649
.Ltmp485:
    0000028b: 	callq	__stack_chk_fail@PLT # Offset: 651
.Ltmp481:
    00000290: 	leaq	DATAat0x3d158(%rip), %rdi
    00000297: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 663
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_array_const_in_optIdEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 115
  State       : disassembled
  Address     : 0x7150
  Size        : 0x20f
  MaxSize     : 0x210
  Offset      : 0x7150
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0114:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdx, %rbx
    00000014: 	subq	$0x10, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x8(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	%r12d, %edi
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	callq	*%rbx # Offset: 55
    00000039: 	movl	%r12d, %edi
    0000003c: 	movl	%eax, %ebp
    0000003e: 	callq	*%rbx # Offset: 62
    00000040: 	imull	$0x1f40, %eax, %r12d
    00000047: 	movl	iterations(%rip), %eax
    0000004d: 	testl	%eax, %eax
    0000004f: 	jle	.Ltmp490 # Offset: 79
    00000051: 	imull	%r14d, %ebp
    00000055: 	xorl	%edx, %edx
    00000057: 	testl	%r14d, %r14d
    0000005a: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000061: 	cmovlel	%edx, %ebp
    00000064: 	xorl	%ebx, %ebx
    00000066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp492:
    00000070: 	cmpl	%ebp, %r12d
    00000073: 	je	.Ltmp491 # Offset: 115
    00000079: 	movq	(%r13), %rdx
    0000007d: 	movq	%r14, %rsi
    00000080: 	movl	$0x1, %edi
    00000085: 	xorl	%eax, %eax
    00000087: 	addl	$0x1, %ebx
    0000008a: 	callq	__printf_chk@PLT # Offset: 138
    0000008f: 	movl	iterations(%rip), %eax
    00000095: 	cmpl	%eax, %ebx
    00000097: 	jl	.Ltmp492 # Offset: 151
.Ltmp490:
    00000099: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a7: 	subq	$0x20, %rax
    000000ab: 	cmpq	%rax, %rbx
    000000ae: 	je	.Ltmp493 # Offset: 174
    000000b4: 	leaq	0x10(%rbx), %rdi
    000000b8: 	movq	0x8(%r13), %r12
    000000bc: 	movq	%rdi, (%rbx)
    000000bf: 	movq	(%r13), %rbp
    000000c3: 	movq	%rbp, %rax
    000000c6: 	addq	%r12, %rax
    000000c9: 	je	.Ltmp494 # Offset: 201
    000000cb: 	testq	%rbp, %rbp
    000000ce: 	je	.Ltmp495 # Offset: 206
.Ltmp494:
    000000d4: 	movq	%r12, (%rsp)
    000000d8: 	cmpq	$0xf, %r12
    000000dc: 	ja	.Ltmp496 # Offset: 220
    000000e2: 	cmpq	$0x1, %r12
    000000e6: 	jne	.Ltmp497 # Offset: 230
    000000ec: 	movzbl	(%rbp), %eax
    000000f0: 	movb	%al, 0x10(%rbx)
.Ltmp500:
    000000f3: 	movq	%r12, 0x8(%rbx)
    000000f7: 	movb	$0x0, (%rdi,%r12)
    000000fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000103: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000010a: 	addq	$0x20, %rax
    0000010e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000115: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011c: 	je	.Ltmp498 # Offset: 284
.Ltmp501:
    00000122: 	movq	-0x20(%rax), %rbp
    00000126: 	callq	clock@PLT # Offset: 294
    0000012b: 	movq	%rax, end_time(%rip)
    00000132: 	movq	0x8(%rsp), %rdx
    00000137: 	subq	%fs:0x28, %rdx
    00000140: 	jne	.Ltmp499 # Offset: 320
    00000146: 	subq	start_time(%rip), %rax
    0000014d: 	pxor	%xmm0, %xmm0
    00000151: 	movq	%rbp, %rdi
    00000154: 	cvtsi2sd	%rax, %xmm0
    00000159: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000161: 	addq	$0x10, %rsp
    00000165: 	popq	%rbx
    00000166: 	popq	%rbp
    00000167: 	popq	%r12
    00000169: 	popq	%r13
    0000016b: 	popq	%r14
    0000016d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 365
    00000172: 	nopw	(%rax,%rax) # Size: 6
.Ltmp491:
    00000178: 	addl	$0x1, %ebx
    0000017b: 	cmpl	%eax, %ebx
    0000017d: 	jl	.Ltmp492 # Offset: 381
    00000183: 	jmp	.Ltmp490 # Offset: 387
.Ltmp496:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp502:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp500 # Offset: 437
.Ltmp493:
    000001ba: 	movq	%r13, %rsi
    000001bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 452
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001de: 	jne	.Ltmp501 # Offset: 478
.Ltmp498:
    000001e4: 	movq	-0x8(%rdx), %rax
    000001e8: 	addq	$0x200, %rax
    000001ee: 	jmp	.Ltmp501 # Offset: 494
.Ltmp497:
    000001f3: 	testq	%r12, %r12
    000001f6: 	je	.Ltmp500 # Offset: 502
    000001fc: 	jmp	.Ltmp502 # Offset: 508
.Ltmp499:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
.Ltmp495:
    00000203: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 522
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 116
  State       : disassembled
  Address     : 0x7360
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x7360
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0115:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rdx, %r12
    00000011: 	pushq	%rbp
    00000012: 	movl	%esi, %ebp
    00000014: 	pushq	%rbx
    00000015: 	movswl	%bp, %ebp
    00000018: 	subq	$0x28, %rsp
    0000001c: 	movq	%rcx, 0x8(%rsp)
    00000021: 	movq	%fs:0x28, %rax
    0000002a: 	movq	%rax, 0x18(%rsp)
    0000002f: 	xorl	%eax, %eax
    00000031: 	callq	clock@PLT # Offset: 49
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	movl	iterations(%rip), %eax
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp503 # Offset: 69
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp507:
    00000050: 	movl	%ebp, %edi
    00000052: 	callq	*%r12 # Offset: 82
    00000055: 	imulw	$0x1f40, %ax, %ax
    0000005a: 	movw	%ax, 0x6(%rsp)
    0000005f: 	testl	%r13d, %r13d
    00000062: 	jle	.Ltmp504 # Offset: 98
    00000068: 	xorl	%r14d, %r14d
    0000006b: 	xorl	%ebx, %ebx
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp505:
    00000070: 	movl	%ebp, %edi
    00000072: 	addl	$0x1, %r14d
    00000076: 	callq	*%r12 # Offset: 118
    00000079: 	addl	%eax, %ebx
    0000007b: 	cmpl	%r13d, %r14d
    0000007e: 	jne	.Ltmp505 # Offset: 126
.Ltmp515:
    00000080: 	cmpw	%bx, 0x6(%rsp)
    00000085: 	je	.Ltmp506 # Offset: 133
    0000008b: 	movq	0x8(%rsp), %rax
    00000090: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00000097: 	movl	$0x1, %edi
    0000009c: 	addl	$0x1, %r15d
    000000a0: 	movq	(%rax), %rdx
    000000a3: 	xorl	%eax, %eax
    000000a5: 	callq	__printf_chk@PLT # Offset: 165
    000000aa: 	cmpl	%r15d, iterations(%rip)
    000000b1: 	jg	.Ltmp507 # Offset: 177
.Ltmp503:
    000000b3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c1: 	subq	$0x20, %rax
    000000c5: 	cmpq	%rax, %rbx
    000000c8: 	je	.Ltmp508 # Offset: 200
    000000ce: 	movq	0x8(%rsp), %rax
    000000d3: 	leaq	0x10(%rbx), %rdi
    000000d7: 	movq	%rdi, (%rbx)
    000000da: 	movq	(%rax), %rbp
    000000dd: 	movq	0x8(%rax), %r12
    000000e1: 	movq	%rbp, %rax
    000000e4: 	addq	%r12, %rax
    000000e7: 	je	.Ltmp509 # Offset: 231
    000000e9: 	testq	%rbp, %rbp
    000000ec: 	je	.Ltmp510 # Offset: 236
.Ltmp509:
    000000f2: 	movq	%r12, 0x10(%rsp)
    000000f7: 	cmpq	$0xf, %r12
    000000fb: 	ja	.Ltmp511 # Offset: 251
    00000101: 	cmpq	$0x1, %r12
    00000105: 	jne	.Ltmp512 # Offset: 261
    0000010b: 	movzbl	(%rbp), %eax
    0000010f: 	movb	%al, 0x10(%rbx)
.Ltmp516:
    00000112: 	movq	%r12, 0x8(%rbx)
    00000116: 	movb	$0x0, (%rdi,%r12)
    0000011b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000122: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000129: 	addq	$0x20, %rax
    0000012d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000134: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013b: 	je	.Ltmp513 # Offset: 315
.Ltmp517:
    00000141: 	movq	-0x20(%rax), %rbp
    00000145: 	callq	clock@PLT # Offset: 325
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	movq	0x18(%rsp), %rdx
    00000156: 	subq	%fs:0x28, %rdx
    0000015f: 	jne	.Ltmp514 # Offset: 351
    00000165: 	subq	start_time(%rip), %rax
    0000016c: 	pxor	%xmm0, %xmm0
    00000170: 	movq	%rbp, %rdi
    00000173: 	cvtsi2sd	%rax, %xmm0
    00000178: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000180: 	addq	$0x28, %rsp
    00000184: 	popq	%rbx
    00000185: 	popq	%rbp
    00000186: 	popq	%r12
    00000188: 	popq	%r13
    0000018a: 	popq	%r14
    0000018c: 	popq	%r15
    0000018e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 398
    00000193: 	nopl	(%rax,%rax) # Size: 5
.Ltmp506:
    00000198: 	addl	$0x1, %r15d
    0000019c: 	cmpl	iterations(%rip), %r15d
    000001a3: 	jl	.Ltmp507 # Offset: 419
    000001a9: 	jmp	.Ltmp503 # Offset: 425
    000001ae: 	nop # Size: 2
.Ltmp504:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp515 # Offset: 434
.Ltmp511:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp518:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp516 # Offset: 488
.Ltmp508:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp517 # Offset: 531
.Ltmp513:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp517 # Offset: 547
.Ltmp512:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp516 # Offset: 555
    00000231: 	jmp	.Ltmp518 # Offset: 561
.Ltmp514:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp510:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 117
  State       : disassembled
  Address     : 0x75b0
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x75b0
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0116:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movl	%esi, %r12d
    00000011: 	pushq	%rbp
    00000012: 	movq	%rdx, %rbp
    00000015: 	pushq	%rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	movl	iterations(%rip), %eax
    00000041: 	testl	%eax, %eax
    00000043: 	jle	.Ltmp519 # Offset: 67
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp523:
    00000048: 	movl	%r12d, %edi
    0000004b: 	callq	*%rbp # Offset: 75
    0000004d: 	imull	$0x1f40, %eax, %eax
    00000053: 	movl	%eax, 0x4(%rsp)
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp520 # Offset: 90
    00000060: 	xorl	%r14d, %r14d
    00000063: 	xorl	%ebx, %ebx
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp521:
    00000068: 	movl	%r12d, %edi
    0000006b: 	addl	$0x1, %r14d
    0000006f: 	callq	*%rbp # Offset: 111
    00000071: 	addl	%eax, %ebx
    00000073: 	cmpl	%r13d, %r14d
    00000076: 	jne	.Ltmp521 # Offset: 118
.Ltmp531:
    00000078: 	cmpl	%ebx, 0x4(%rsp)
    0000007c: 	je	.Ltmp522 # Offset: 124
    00000082: 	movq	0x8(%rsp), %rax
    00000087: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000008e: 	movl	$0x1, %edi
    00000093: 	addl	$0x1, %r15d
    00000097: 	movq	(%rax), %rdx
    0000009a: 	xorl	%eax, %eax
    0000009c: 	callq	__printf_chk@PLT # Offset: 156
    000000a1: 	cmpl	%r15d, iterations(%rip)
    000000a8: 	jg	.Ltmp523 # Offset: 168
.Ltmp519:
    000000aa: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000b8: 	subq	$0x20, %rax
    000000bc: 	cmpq	%rax, %rbx
    000000bf: 	je	.Ltmp524 # Offset: 191
    000000c5: 	movq	0x8(%rsp), %rax
    000000ca: 	leaq	0x10(%rbx), %rdi
    000000ce: 	movq	%rdi, (%rbx)
    000000d1: 	movq	(%rax), %rbp
    000000d4: 	movq	0x8(%rax), %r12
    000000d8: 	movq	%rbp, %rax
    000000db: 	addq	%r12, %rax
    000000de: 	je	.Ltmp525 # Offset: 222
    000000e0: 	testq	%rbp, %rbp
    000000e3: 	je	.Ltmp526 # Offset: 227
.Ltmp525:
    000000e9: 	movq	%r12, 0x10(%rsp)
    000000ee: 	cmpq	$0xf, %r12
    000000f2: 	ja	.Ltmp527 # Offset: 242
    000000f8: 	cmpq	$0x1, %r12
    000000fc: 	jne	.Ltmp528 # Offset: 252
    00000102: 	movzbl	(%rbp), %eax
    00000106: 	movb	%al, 0x10(%rbx)
.Ltmp532:
    00000109: 	movq	%r12, 0x8(%rbx)
    0000010d: 	movb	$0x0, (%rdi,%r12)
    00000112: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000119: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000120: 	addq	$0x20, %rax
    00000124: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000012b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000132: 	je	.Ltmp529 # Offset: 306
.Ltmp533:
    00000138: 	movq	-0x20(%rax), %rbp
    0000013c: 	callq	clock@PLT # Offset: 316
    00000141: 	movq	%rax, end_time(%rip)
    00000148: 	movq	0x18(%rsp), %rdx
    0000014d: 	subq	%fs:0x28, %rdx
    00000156: 	jne	.Ltmp530 # Offset: 342
    0000015c: 	subq	start_time(%rip), %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	movq	%rbp, %rdi
    0000016a: 	cvtsi2sd	%rax, %xmm0
    0000016f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000177: 	addq	$0x28, %rsp
    0000017b: 	popq	%rbx
    0000017c: 	popq	%rbp
    0000017d: 	popq	%r12
    0000017f: 	popq	%r13
    00000181: 	popq	%r14
    00000183: 	popq	%r15
    00000185: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 389
    0000018a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp522:
    00000190: 	addl	$0x1, %r15d
    00000194: 	cmpl	iterations(%rip), %r15d
    0000019b: 	jl	.Ltmp523 # Offset: 411
    000001a1: 	jmp	.Ltmp519 # Offset: 417
    000001a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp520:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp531 # Offset: 434
.Ltmp527:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp534:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp532 # Offset: 488
.Ltmp524:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp533 # Offset: 531
.Ltmp529:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp533 # Offset: 547
.Ltmp528:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp532 # Offset: 555
    00000231: 	jmp	.Ltmp534 # Offset: 561
.Ltmp530:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp526:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 118
  State       : disassembled
  Address     : 0x7800
  Size        : 0x217
  MaxSize     : 0x220
  Offset      : 0x7800
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0117:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdx, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movslq	%esi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x10, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x8(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rbp, %rdi
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	callq	*%r12 # Offset: 55
    0000003a: 	movq	%rbp, %rdi
    0000003d: 	movq	%rax, %rbx
    00000040: 	callq	*%r12 # Offset: 64
    00000043: 	imulq	$0x1f40, %rax, %r12
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp535 # Offset: 82
    00000054: 	leal	-0x1(%r14), %ebp
    00000058: 	xorl	%edx, %edx
    0000005a: 	addq	$0x1, %rbp
    0000005e: 	imulq	%rbx, %rbp
    00000062: 	testl	%r14d, %r14d
    00000065: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000006c: 	cmovleq	%rdx, %rbp
    00000070: 	xorl	%ebx, %ebx
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp537:
    00000078: 	cmpq	%rbp, %r12
    0000007b: 	je	.Ltmp536 # Offset: 123
    00000081: 	movq	(%r13), %rdx
    00000085: 	movq	%r14, %rsi
    00000088: 	movl	$0x1, %edi
    0000008d: 	xorl	%eax, %eax
    0000008f: 	addl	$0x1, %ebx
    00000092: 	callq	__printf_chk@PLT # Offset: 146
    00000097: 	movl	iterations(%rip), %eax
    0000009d: 	cmpl	%eax, %ebx
    0000009f: 	jl	.Ltmp537 # Offset: 159
.Ltmp535:
    000000a1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000af: 	subq	$0x20, %rax
    000000b3: 	cmpq	%rax, %rbx
    000000b6: 	je	.Ltmp538 # Offset: 182
    000000bc: 	leaq	0x10(%rbx), %rdi
    000000c0: 	movq	0x8(%r13), %r12
    000000c4: 	movq	%rdi, (%rbx)
    000000c7: 	movq	(%r13), %rbp
    000000cb: 	movq	%rbp, %rax
    000000ce: 	addq	%r12, %rax
    000000d1: 	je	.Ltmp539 # Offset: 209
    000000d3: 	testq	%rbp, %rbp
    000000d6: 	je	.Ltmp540 # Offset: 214
.Ltmp539:
    000000dc: 	movq	%r12, (%rsp)
    000000e0: 	cmpq	$0xf, %r12
    000000e4: 	ja	.Ltmp541 # Offset: 228
    000000ea: 	cmpq	$0x1, %r12
    000000ee: 	jne	.Ltmp542 # Offset: 238
    000000f4: 	movzbl	(%rbp), %eax
    000000f8: 	movb	%al, 0x10(%rbx)
.Ltmp545:
    000000fb: 	movq	%r12, 0x8(%rbx)
    000000ff: 	movb	$0x0, (%rdi,%r12)
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000010b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000112: 	addq	$0x20, %rax
    00000116: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000011d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000124: 	je	.Ltmp543 # Offset: 292
.Ltmp546:
    0000012a: 	movq	-0x20(%rax), %rbp
    0000012e: 	callq	clock@PLT # Offset: 302
    00000133: 	movq	%rax, end_time(%rip)
    0000013a: 	movq	0x8(%rsp), %rdx
    0000013f: 	subq	%fs:0x28, %rdx
    00000148: 	jne	.Ltmp544 # Offset: 328
    0000014e: 	subq	start_time(%rip), %rax
    00000155: 	pxor	%xmm0, %xmm0
    00000159: 	movq	%rbp, %rdi
    0000015c: 	cvtsi2sd	%rax, %xmm0
    00000161: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000169: 	addq	$0x10, %rsp
    0000016d: 	popq	%rbx
    0000016e: 	popq	%rbp
    0000016f: 	popq	%r12
    00000171: 	popq	%r13
    00000173: 	popq	%r14
    00000175: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 373
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp536:
    00000180: 	addl	$0x1, %ebx
    00000183: 	cmpl	%eax, %ebx
    00000185: 	jl	.Ltmp537 # Offset: 389
    0000018b: 	jmp	.Ltmp535 # Offset: 395
.Ltmp541:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp547:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp545 # Offset: 445
.Ltmp538:
    000001c2: 	movq	%r13, %rsi
    000001c5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 460
    000001d1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e6: 	jne	.Ltmp546 # Offset: 486
.Ltmp543:
    000001ec: 	movq	-0x8(%rdx), %rax
    000001f0: 	addq	$0x200, %rax
    000001f6: 	jmp	.Ltmp546 # Offset: 502
.Ltmp542:
    000001fb: 	testq	%r12, %r12
    000001fe: 	je	.Ltmp545 # Offset: 510
    00000204: 	jmp	.Ltmp547 # Offset: 516
.Ltmp544:
    00000206: 	callq	__stack_chk_fail@PLT # Offset: 518
.Ltmp540:
    0000020b: 	leaq	DATAat0x3d158(%rip), %rdi
    00000212: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 530
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 119
  State       : disassembled
  Address     : 0x7a20
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x7a20
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0118:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rdx, %r12
    00000011: 	pushq	%rbp
    00000012: 	movslq	%esi, %rbp
    00000015: 	pushq	%rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	movl	iterations(%rip), %eax
    00000041: 	testl	%eax, %eax
    00000043: 	jle	.Ltmp548 # Offset: 67
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp552:
    00000048: 	movq	%rbp, %rdi
    0000004b: 	callq	*%r12 # Offset: 75
    0000004e: 	imulq	$0x1f40, %rax, %rax
    00000055: 	movq	%rax, (%rsp)
    00000059: 	testl	%r13d, %r13d
    0000005c: 	jle	.Ltmp549 # Offset: 92
    00000062: 	xorl	%r14d, %r14d
    00000065: 	xorl	%ebx, %ebx
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp550:
    00000070: 	movq	%rbp, %rdi
    00000073: 	addl	$0x1, %r14d
    00000077: 	callq	*%r12 # Offset: 119
    0000007a: 	addq	%rax, %rbx
    0000007d: 	cmpl	%r13d, %r14d
    00000080: 	jne	.Ltmp550 # Offset: 128
.Ltmp560:
    00000082: 	cmpq	%rbx, (%rsp)
    00000086: 	je	.Ltmp551 # Offset: 134
    0000008c: 	movq	0x8(%rsp), %rax
    00000091: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00000098: 	movl	$0x1, %edi
    0000009d: 	addl	$0x1, %r15d
    000000a1: 	movq	(%rax), %rdx
    000000a4: 	xorl	%eax, %eax
    000000a6: 	callq	__printf_chk@PLT # Offset: 166
    000000ab: 	cmpl	%r15d, iterations(%rip)
    000000b2: 	jg	.Ltmp552 # Offset: 178
.Ltmp548:
    000000b4: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000bb: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c2: 	subq	$0x20, %rax
    000000c6: 	cmpq	%rax, %rbx
    000000c9: 	je	.Ltmp553 # Offset: 201
    000000cf: 	movq	0x8(%rsp), %rax
    000000d4: 	leaq	0x10(%rbx), %rdi
    000000d8: 	movq	%rdi, (%rbx)
    000000db: 	movq	(%rax), %rbp
    000000de: 	movq	0x8(%rax), %r12
    000000e2: 	movq	%rbp, %rax
    000000e5: 	addq	%r12, %rax
    000000e8: 	je	.Ltmp554 # Offset: 232
    000000ea: 	testq	%rbp, %rbp
    000000ed: 	je	.Ltmp555 # Offset: 237
.Ltmp554:
    000000f3: 	movq	%r12, 0x10(%rsp)
    000000f8: 	cmpq	$0xf, %r12
    000000fc: 	ja	.Ltmp556 # Offset: 252
    00000102: 	cmpq	$0x1, %r12
    00000106: 	jne	.Ltmp557 # Offset: 262
    0000010c: 	movzbl	(%rbp), %eax
    00000110: 	movb	%al, 0x10(%rbx)
.Ltmp561:
    00000113: 	movq	%r12, 0x8(%rbx)
    00000117: 	movb	$0x0, (%rdi,%r12)
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000123: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000012a: 	addq	$0x20, %rax
    0000012e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000135: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013c: 	je	.Ltmp558 # Offset: 316
.Ltmp562:
    00000142: 	movq	-0x20(%rax), %rbp
    00000146: 	callq	clock@PLT # Offset: 326
    0000014b: 	movq	%rax, end_time(%rip)
    00000152: 	movq	0x18(%rsp), %rdx
    00000157: 	subq	%fs:0x28, %rdx
    00000160: 	jne	.Ltmp559 # Offset: 352
    00000166: 	subq	start_time(%rip), %rax
    0000016d: 	pxor	%xmm0, %xmm0
    00000171: 	movq	%rbp, %rdi
    00000174: 	cvtsi2sd	%rax, %xmm0
    00000179: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000181: 	addq	$0x28, %rsp
    00000185: 	popq	%rbx
    00000186: 	popq	%rbp
    00000187: 	popq	%r12
    00000189: 	popq	%r13
    0000018b: 	popq	%r14
    0000018d: 	popq	%r15
    0000018f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 399
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp551:
    00000198: 	addl	$0x1, %r15d
    0000019c: 	cmpl	iterations(%rip), %r15d
    000001a3: 	jl	.Ltmp552 # Offset: 419
    000001a9: 	jmp	.Ltmp548 # Offset: 425
    000001ae: 	nop # Size: 2
.Ltmp549:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp560 # Offset: 434
.Ltmp556:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp563:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp561 # Offset: 488
.Ltmp553:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp562 # Offset: 531
.Ltmp558:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp562 # Offset: 547
.Ltmp557:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp561 # Offset: 555
    00000231: 	jmp	.Ltmp563 # Offset: 561
.Ltmp559:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp555:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_loop_invariant.cpp/1
  Number      : 120
  State       : disassembled
  Address     : 0x7c70
  Size        : 0x233
  MaxSize     : 0x240
  Offset      : 0x7c70
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0119:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movq	%rsi, %r13
    0000000c: 	pushq	%r12
    0000000e: 	movl	%edi, %r12d
    00000011: 	pushq	%rbp
    00000012: 	movsbl	%r12b, %r12d
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rdx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp564 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp567:
    00000050: 	movl	%r12d, %edi
    00000053: 	movl	$0x1f40, %ebx
    00000058: 	xorl	%ebp, %ebp
    0000005a: 	callq	*%r13 # Offset: 90
    0000005d: 	shll	$0x6, %eax
    00000060: 	movl	%eax, %r14d
    00000063: 	nopl	(%rax,%rax) # Size: 5
.Ltmp565:
    00000068: 	movl	%r12d, %edi
    0000006b: 	callq	*%r13 # Offset: 107
    0000006e: 	addl	%eax, %ebp
    00000070: 	subl	$0x1, %ebx
    00000073: 	jne	.Ltmp565 # Offset: 115
    00000075: 	cmpb	%bpl, %r14b
    00000078: 	je	.Ltmp566 # Offset: 120
    0000007e: 	movq	0x8(%rsp), %rax
    00000083: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000008a: 	movl	$0x1, %edi
    0000008f: 	addl	$0x1, %r15d
    00000093: 	movq	(%rax), %rdx
    00000096: 	xorl	%eax, %eax
    00000098: 	callq	__printf_chk@PLT # Offset: 152
    0000009d: 	cmpl	%r15d, iterations(%rip)
    000000a4: 	jg	.Ltmp567 # Offset: 164
.Ltmp564:
    000000a6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000b4: 	subq	$0x20, %rax
    000000b8: 	cmpq	%rax, %rbx
    000000bb: 	je	.Ltmp568 # Offset: 187
    000000c1: 	movq	0x8(%rsp), %rax
    000000c6: 	leaq	0x10(%rbx), %rdi
    000000ca: 	movq	%rdi, (%rbx)
    000000cd: 	movq	(%rax), %rbp
    000000d0: 	movq	0x8(%rax), %r12
    000000d4: 	movq	%rbp, %rax
    000000d7: 	addq	%r12, %rax
    000000da: 	je	.Ltmp569 # Offset: 218
    000000dc: 	testq	%rbp, %rbp
    000000df: 	je	.Ltmp570 # Offset: 223
.Ltmp569:
    000000e5: 	movq	%r12, 0x10(%rsp)
    000000ea: 	cmpq	$0xf, %r12
    000000ee: 	ja	.Ltmp571 # Offset: 238
    000000f4: 	cmpq	$0x1, %r12
    000000f8: 	jne	.Ltmp572 # Offset: 248
    000000fe: 	movzbl	(%rbp), %eax
    00000102: 	movb	%al, 0x10(%rbx)
.Ltmp575:
    00000105: 	movq	%r12, 0x8(%rbx)
    00000109: 	movb	$0x0, (%rdi,%r12)
    0000010e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000115: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000011c: 	addq	$0x20, %rax
    00000120: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000127: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000012e: 	je	.Ltmp573 # Offset: 302
.Ltmp576:
    00000134: 	movq	-0x20(%rax), %rbp
    00000138: 	callq	clock@PLT # Offset: 312
    0000013d: 	movq	%rax, end_time(%rip)
    00000144: 	movq	0x18(%rsp), %rdx
    00000149: 	subq	%fs:0x28, %rdx
    00000152: 	jne	.Ltmp574 # Offset: 338
    00000158: 	subq	start_time(%rip), %rax
    0000015f: 	pxor	%xmm0, %xmm0
    00000163: 	movq	%rbp, %rdi
    00000166: 	cvtsi2sd	%rax, %xmm0
    0000016b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000173: 	addq	$0x28, %rsp
    00000177: 	popq	%rbx
    00000178: 	popq	%rbp
    00000179: 	popq	%r12
    0000017b: 	popq	%r13
    0000017d: 	popq	%r14
    0000017f: 	popq	%r15
    00000181: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 385
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp566:
    00000190: 	addl	$0x1, %r15d
    00000194: 	cmpl	iterations(%rip), %r15d
    0000019b: 	jl	.Ltmp567 # Offset: 411
    000001a1: 	jmp	.Ltmp564 # Offset: 417
.Ltmp571:
    000001a6: 	movq	%rbx, %rdi
    000001a9: 	leaq	0x10(%rsp), %rsi
    000001ae: 	xorl	%edx, %edx
    000001b0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 432
    000001b5: 	movq	%rax, (%rbx)
    000001b8: 	movq	%rax, %rdi
    000001bb: 	movq	0x10(%rsp), %rax
    000001c0: 	movq	%rax, 0x10(%rbx)
.Ltmp577:
    000001c4: 	movq	%r12, %rdx
    000001c7: 	movq	%rbp, %rsi
    000001ca: 	callq	memcpy@PLT # Offset: 458
    000001cf: 	movq	0x10(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp575 # Offset: 471
.Ltmp568:
    000001dc: 	movq	0x8(%rsp), %rsi
    000001e1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 488
    000001ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000202: 	jne	.Ltmp576 # Offset: 514
.Ltmp573:
    00000208: 	movq	-0x8(%rdx), %rax
    0000020c: 	addq	$0x200, %rax
    00000212: 	jmp	.Ltmp576 # Offset: 530
.Ltmp572:
    00000217: 	testq	%r12, %r12
    0000021a: 	je	.Ltmp575 # Offset: 538
    00000220: 	jmp	.Ltmp577 # Offset: 544
.Ltmp574:
    00000222: 	callq	__stack_chk_fail@PLT # Offset: 546
.Ltmp570:
    00000227: 	leaq	DATAat0x3d158(%rip), %rdi
    0000022e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 558
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_loop_invariant.cpp/1
  Number      : 121
  State       : disassembled
  Address     : 0x7eb0
  Size        : 0x1ff
  MaxSize     : 0x200
  Offset      : 0x7eb0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0120:
    00000000: 	pushq	%r14
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdx, %r13
    0000000e: 	pushq	%r12
    00000010: 	movl	%edi, %r12d
    00000013: 	pushq	%rbp
    00000014: 	movsbl	%r12b, %r12d
    00000018: 	pushq	%rbx
    00000019: 	movq	%rsi, %rbx
    0000001c: 	subq	$0x10, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	%r12d, %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	*%rbx # Offset: 63
    00000041: 	movl	%r12d, %edi
    00000044: 	movl	%eax, %ebp
    00000046: 	callq	*%rbx # Offset: 70
    00000048: 	shll	$0x6, %ebp
    0000004b: 	xorl	%ebx, %ebx
    0000004d: 	shll	$0x6, %eax
    00000050: 	movl	%eax, %r12d
    00000053: 	movl	iterations(%rip), %eax
    00000059: 	testl	%eax, %eax
    0000005b: 	jle	.Ltmp578 # Offset: 91
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp580:
    00000060: 	cmpb	%bpl, %r12b
    00000063: 	je	.Ltmp579 # Offset: 99
    00000069: 	movq	(%r13), %rdx
    0000006d: 	movq	%r14, %rsi
    00000070: 	movl	$0x1, %edi
    00000075: 	xorl	%eax, %eax
    00000077: 	addl	$0x1, %ebx
    0000007a: 	callq	__printf_chk@PLT # Offset: 122
    0000007f: 	movl	iterations(%rip), %eax
    00000085: 	cmpl	%eax, %ebx
    00000087: 	jl	.Ltmp580 # Offset: 135
.Ltmp578:
    00000089: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000090: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000097: 	subq	$0x20, %rax
    0000009b: 	cmpq	%rax, %rbx
    0000009e: 	je	.Ltmp581 # Offset: 158
    000000a4: 	leaq	0x10(%rbx), %rdi
    000000a8: 	movq	0x8(%r13), %r12
    000000ac: 	movq	%rdi, (%rbx)
    000000af: 	movq	(%r13), %rbp
    000000b3: 	movq	%rbp, %rax
    000000b6: 	addq	%r12, %rax
    000000b9: 	je	.Ltmp582 # Offset: 185
    000000bb: 	testq	%rbp, %rbp
    000000be: 	je	.Ltmp583 # Offset: 190
.Ltmp582:
    000000c4: 	movq	%r12, (%rsp)
    000000c8: 	cmpq	$0xf, %r12
    000000cc: 	ja	.Ltmp584 # Offset: 204
    000000d2: 	cmpq	$0x1, %r12
    000000d6: 	jne	.Ltmp585 # Offset: 214
    000000dc: 	movzbl	(%rbp), %eax
    000000e0: 	movb	%al, 0x10(%rbx)
.Ltmp588:
    000000e3: 	movq	%r12, 0x8(%rbx)
    000000e7: 	movb	$0x0, (%rdi,%r12)
    000000ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fa: 	addq	$0x20, %rax
    000000fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000105: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010c: 	je	.Ltmp586 # Offset: 268
.Ltmp589:
    00000112: 	movq	-0x20(%rax), %rbp
    00000116: 	callq	clock@PLT # Offset: 278
    0000011b: 	movq	%rax, end_time(%rip)
    00000122: 	movq	0x8(%rsp), %rdx
    00000127: 	subq	%fs:0x28, %rdx
    00000130: 	jne	.Ltmp587 # Offset: 304
    00000136: 	subq	start_time(%rip), %rax
    0000013d: 	pxor	%xmm0, %xmm0
    00000141: 	movq	%rbp, %rdi
    00000144: 	cvtsi2sd	%rax, %xmm0
    00000149: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000151: 	addq	$0x10, %rsp
    00000155: 	popq	%rbx
    00000156: 	popq	%rbp
    00000157: 	popq	%r12
    00000159: 	popq	%r13
    0000015b: 	popq	%r14
    0000015d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp579:
    00000168: 	addl	$0x1, %ebx
    0000016b: 	cmpl	%eax, %ebx
    0000016d: 	jl	.Ltmp580 # Offset: 365
    00000173: 	jmp	.Ltmp578 # Offset: 371
.Ltmp584:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp590:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%rbp, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp588 # Offset: 421
.Ltmp581:
    000001aa: 	movq	%r13, %rsi
    000001ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 436
    000001b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ce: 	jne	.Ltmp589 # Offset: 462
.Ltmp586:
    000001d4: 	movq	-0x8(%rdx), %rax
    000001d8: 	addq	$0x200, %rax
    000001de: 	jmp	.Ltmp589 # Offset: 478
.Ltmp585:
    000001e3: 	testq	%r12, %r12
    000001e6: 	je	.Ltmp588 # Offset: 486
    000001ec: 	jmp	.Ltmp590 # Offset: 492
.Ltmp587:
    000001ee: 	callq	__stack_chk_fail@PLT # Offset: 494
.Ltmp583:
    000001f3: 	leaq	DATAat0x3d158(%rip), %rdi
    000001fa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 506
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 122
  State       : disassembled
  Address     : 0x80b0
  Size        : 0x217
  MaxSize     : 0x220
  Offset      : 0x80b0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0121:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rdx, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movslq	%esi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x10, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x8(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	%rbp, %rdi
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	callq	*%r12 # Offset: 55
    0000003a: 	movq	%rbp, %rdi
    0000003d: 	movq	%rax, %rbx
    00000040: 	callq	*%r12 # Offset: 64
    00000043: 	imulq	$0x1f40, %rax, %r12
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp591 # Offset: 82
    00000054: 	leal	-0x1(%r14), %ebp
    00000058: 	xorl	%edx, %edx
    0000005a: 	addq	$0x1, %rbp
    0000005e: 	imulq	%rbx, %rbp
    00000062: 	testl	%r14d, %r14d
    00000065: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000006c: 	cmovleq	%rdx, %rbp
    00000070: 	xorl	%ebx, %ebx
    00000072: 	nopw	(%rax,%rax) # Size: 6
.Ltmp593:
    00000078: 	cmpq	%rbp, %r12
    0000007b: 	je	.Ltmp592 # Offset: 123
    00000081: 	movq	(%r13), %rdx
    00000085: 	movq	%r14, %rsi
    00000088: 	movl	$0x1, %edi
    0000008d: 	xorl	%eax, %eax
    0000008f: 	addl	$0x1, %ebx
    00000092: 	callq	__printf_chk@PLT # Offset: 146
    00000097: 	movl	iterations(%rip), %eax
    0000009d: 	cmpl	%eax, %ebx
    0000009f: 	jl	.Ltmp593 # Offset: 159
.Ltmp591:
    000000a1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000af: 	subq	$0x20, %rax
    000000b3: 	cmpq	%rax, %rbx
    000000b6: 	je	.Ltmp594 # Offset: 182
    000000bc: 	leaq	0x10(%rbx), %rdi
    000000c0: 	movq	0x8(%r13), %r12
    000000c4: 	movq	%rdi, (%rbx)
    000000c7: 	movq	(%r13), %rbp
    000000cb: 	movq	%rbp, %rax
    000000ce: 	addq	%r12, %rax
    000000d1: 	je	.Ltmp595 # Offset: 209
    000000d3: 	testq	%rbp, %rbp
    000000d6: 	je	.Ltmp596 # Offset: 214
.Ltmp595:
    000000dc: 	movq	%r12, (%rsp)
    000000e0: 	cmpq	$0xf, %r12
    000000e4: 	ja	.Ltmp597 # Offset: 228
    000000ea: 	cmpq	$0x1, %r12
    000000ee: 	jne	.Ltmp598 # Offset: 238
    000000f4: 	movzbl	(%rbp), %eax
    000000f8: 	movb	%al, 0x10(%rbx)
.Ltmp601:
    000000fb: 	movq	%r12, 0x8(%rbx)
    000000ff: 	movb	$0x0, (%rdi,%r12)
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000010b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000112: 	addq	$0x20, %rax
    00000116: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000011d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000124: 	je	.Ltmp599 # Offset: 292
.Ltmp602:
    0000012a: 	movq	-0x20(%rax), %rbp
    0000012e: 	callq	clock@PLT # Offset: 302
    00000133: 	movq	%rax, end_time(%rip)
    0000013a: 	movq	0x8(%rsp), %rdx
    0000013f: 	subq	%fs:0x28, %rdx
    00000148: 	jne	.Ltmp600 # Offset: 328
    0000014e: 	subq	start_time(%rip), %rax
    00000155: 	pxor	%xmm0, %xmm0
    00000159: 	movq	%rbp, %rdi
    0000015c: 	cvtsi2sd	%rax, %xmm0
    00000161: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000169: 	addq	$0x10, %rsp
    0000016d: 	popq	%rbx
    0000016e: 	popq	%rbp
    0000016f: 	popq	%r12
    00000171: 	popq	%r13
    00000173: 	popq	%r14
    00000175: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 373
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp592:
    00000180: 	addl	$0x1, %ebx
    00000183: 	cmpl	%eax, %ebx
    00000185: 	jl	.Ltmp593 # Offset: 389
    0000018b: 	jmp	.Ltmp591 # Offset: 395
.Ltmp597:
    00000190: 	movq	%rbx, %rdi
    00000193: 	movq	%rsp, %rsi
    00000196: 	xorl	%edx, %edx
    00000198: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 408
    0000019d: 	movq	%rax, (%rbx)
    000001a0: 	movq	%rax, %rdi
    000001a3: 	movq	(%rsp), %rax
    000001a7: 	movq	%rax, 0x10(%rbx)
.Ltmp603:
    000001ab: 	movq	%r12, %rdx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	(%rsp), %r12
    000001ba: 	movq	(%rbx), %rdi
    000001bd: 	jmp	.Ltmp601 # Offset: 445
.Ltmp594:
    000001c2: 	movq	%r13, %rsi
    000001c5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 460
    000001d1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e6: 	jne	.Ltmp602 # Offset: 486
.Ltmp599:
    000001ec: 	movq	-0x8(%rdx), %rax
    000001f0: 	addq	$0x200, %rax
    000001f6: 	jmp	.Ltmp602 # Offset: 502
.Ltmp598:
    000001fb: 	testq	%r12, %r12
    000001fe: 	je	.Ltmp601 # Offset: 510
    00000204: 	jmp	.Ltmp603 # Offset: 516
.Ltmp600:
    00000206: 	callq	__stack_chk_fail@PLT # Offset: 518
.Ltmp596:
    0000020b: 	leaq	DATAat0x3d158(%rip), %rdi
    00000212: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 530
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 123
  State       : disassembled
  Address     : 0x82d0
  Size        : 0x20f
  MaxSize     : 0x210
  Offset      : 0x82d0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0122:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdx, %rbx
    00000014: 	subq	$0x10, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x8(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movl	%r12d, %edi
    00000030: 	movq	%rax, start_time(%rip)
    00000037: 	callq	*%rbx # Offset: 55
    00000039: 	movl	%r12d, %edi
    0000003c: 	movl	%eax, %ebp
    0000003e: 	callq	*%rbx # Offset: 62
    00000040: 	imull	$0x1f40, %eax, %r12d
    00000047: 	movl	iterations(%rip), %eax
    0000004d: 	testl	%eax, %eax
    0000004f: 	jle	.Ltmp604 # Offset: 79
    00000051: 	imull	%r14d, %ebp
    00000055: 	xorl	%edx, %edx
    00000057: 	testl	%r14d, %r14d
    0000005a: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000061: 	cmovlel	%edx, %ebp
    00000064: 	xorl	%ebx, %ebx
    00000066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp606:
    00000070: 	cmpl	%ebp, %r12d
    00000073: 	je	.Ltmp605 # Offset: 115
    00000079: 	movq	(%r13), %rdx
    0000007d: 	movq	%r14, %rsi
    00000080: 	movl	$0x1, %edi
    00000085: 	xorl	%eax, %eax
    00000087: 	addl	$0x1, %ebx
    0000008a: 	callq	__printf_chk@PLT # Offset: 138
    0000008f: 	movl	iterations(%rip), %eax
    00000095: 	cmpl	%eax, %ebx
    00000097: 	jl	.Ltmp606 # Offset: 151
.Ltmp604:
    00000099: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a7: 	subq	$0x20, %rax
    000000ab: 	cmpq	%rax, %rbx
    000000ae: 	je	.Ltmp607 # Offset: 174
    000000b4: 	leaq	0x10(%rbx), %rdi
    000000b8: 	movq	0x8(%r13), %r12
    000000bc: 	movq	%rdi, (%rbx)
    000000bf: 	movq	(%r13), %rbp
    000000c3: 	movq	%rbp, %rax
    000000c6: 	addq	%r12, %rax
    000000c9: 	je	.Ltmp608 # Offset: 201
    000000cb: 	testq	%rbp, %rbp
    000000ce: 	je	.Ltmp609 # Offset: 206
.Ltmp608:
    000000d4: 	movq	%r12, (%rsp)
    000000d8: 	cmpq	$0xf, %r12
    000000dc: 	ja	.Ltmp610 # Offset: 220
    000000e2: 	cmpq	$0x1, %r12
    000000e6: 	jne	.Ltmp611 # Offset: 230
    000000ec: 	movzbl	(%rbp), %eax
    000000f0: 	movb	%al, 0x10(%rbx)
.Ltmp614:
    000000f3: 	movq	%r12, 0x8(%rbx)
    000000f7: 	movb	$0x0, (%rdi,%r12)
    000000fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000103: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000010a: 	addq	$0x20, %rax
    0000010e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000115: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011c: 	je	.Ltmp612 # Offset: 284
.Ltmp615:
    00000122: 	movq	-0x20(%rax), %rbp
    00000126: 	callq	clock@PLT # Offset: 294
    0000012b: 	movq	%rax, end_time(%rip)
    00000132: 	movq	0x8(%rsp), %rdx
    00000137: 	subq	%fs:0x28, %rdx
    00000140: 	jne	.Ltmp613 # Offset: 320
    00000146: 	subq	start_time(%rip), %rax
    0000014d: 	pxor	%xmm0, %xmm0
    00000151: 	movq	%rbp, %rdi
    00000154: 	cvtsi2sd	%rax, %xmm0
    00000159: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000161: 	addq	$0x10, %rsp
    00000165: 	popq	%rbx
    00000166: 	popq	%rbp
    00000167: 	popq	%r12
    00000169: 	popq	%r13
    0000016b: 	popq	%r14
    0000016d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 365
    00000172: 	nopw	(%rax,%rax) # Size: 6
.Ltmp605:
    00000178: 	addl	$0x1, %ebx
    0000017b: 	cmpl	%eax, %ebx
    0000017d: 	jl	.Ltmp606 # Offset: 381
    00000183: 	jmp	.Ltmp604 # Offset: 387
.Ltmp610:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp616:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp614 # Offset: 437
.Ltmp607:
    000001ba: 	movq	%r13, %rsi
    000001bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 452
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001de: 	jne	.Ltmp615 # Offset: 478
.Ltmp612:
    000001e4: 	movq	-0x8(%rdx), %rax
    000001e8: 	addq	$0x200, %rax
    000001ee: 	jmp	.Ltmp615 # Offset: 494
.Ltmp611:
    000001f3: 	testq	%r12, %r12
    000001f6: 	je	.Ltmp614 # Offset: 502
    000001fc: 	jmp	.Ltmp616 # Offset: 508
.Ltmp613:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
.Ltmp609:
    00000203: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 522
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 124
  State       : disassembled
  Address     : 0x84e0
  Size        : 0x20f
  MaxSize     : 0x210
  Offset      : 0x84e0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0123:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	movswl	%r12w, %r12d
    00000014: 	pushq	%rbx
    00000015: 	movq	%rdx, %rbx
    00000018: 	subq	$0x10, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x8(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	%r12d, %edi
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	callq	*%rbx # Offset: 59
    0000003d: 	movl	%r12d, %edi
    00000040: 	movl	%eax, %ebp
    00000042: 	callq	*%rbx # Offset: 66
    00000044: 	imulw	$0x1f40, %ax, %r12w
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp617 # Offset: 82
    00000054: 	imull	%r14d, %ebp
    00000058: 	xorl	%edx, %edx
    0000005a: 	testl	%r14d, %r14d
    0000005d: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000064: 	cmovlel	%edx, %ebp
    00000067: 	xorl	%ebx, %ebx
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp619:
    00000070: 	cmpw	%bp, %r12w
    00000074: 	je	.Ltmp618 # Offset: 116
    0000007a: 	movq	(%r13), %rdx
    0000007e: 	movq	%r14, %rsi
    00000081: 	movl	$0x1, %edi
    00000086: 	xorl	%eax, %eax
    00000088: 	addl	$0x1, %ebx
    0000008b: 	callq	__printf_chk@PLT # Offset: 139
    00000090: 	movl	iterations(%rip), %eax
    00000096: 	cmpl	%eax, %ebx
    00000098: 	jl	.Ltmp619 # Offset: 152
.Ltmp617:
    0000009a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a8: 	subq	$0x20, %rax
    000000ac: 	cmpq	%rax, %rbx
    000000af: 	je	.Ltmp620 # Offset: 175
    000000b5: 	leaq	0x10(%rbx), %rdi
    000000b9: 	movq	0x8(%r13), %r12
    000000bd: 	movq	%rdi, (%rbx)
    000000c0: 	movq	(%r13), %rbp
    000000c4: 	movq	%rbp, %rax
    000000c7: 	addq	%r12, %rax
    000000ca: 	je	.Ltmp621 # Offset: 202
    000000cc: 	testq	%rbp, %rbp
    000000cf: 	je	.Ltmp622 # Offset: 207
.Ltmp621:
    000000d5: 	movq	%r12, (%rsp)
    000000d9: 	cmpq	$0xf, %r12
    000000dd: 	ja	.Ltmp623 # Offset: 221
    000000e3: 	cmpq	$0x1, %r12
    000000e7: 	jne	.Ltmp624 # Offset: 231
    000000ed: 	movzbl	(%rbp), %eax
    000000f1: 	movb	%al, 0x10(%rbx)
.Ltmp627:
    000000f4: 	movq	%r12, 0x8(%rbx)
    000000f8: 	movb	$0x0, (%rdi,%r12)
    000000fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000010b: 	addq	$0x20, %rax
    0000010f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000116: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011d: 	je	.Ltmp625 # Offset: 285
.Ltmp628:
    00000123: 	movq	-0x20(%rax), %rbp
    00000127: 	callq	clock@PLT # Offset: 295
    0000012c: 	movq	%rax, end_time(%rip)
    00000133: 	movq	0x8(%rsp), %rdx
    00000138: 	subq	%fs:0x28, %rdx
    00000141: 	jne	.Ltmp626 # Offset: 321
    00000147: 	subq	start_time(%rip), %rax
    0000014e: 	pxor	%xmm0, %xmm0
    00000152: 	movq	%rbp, %rdi
    00000155: 	cvtsi2sd	%rax, %xmm0
    0000015a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000162: 	addq	$0x10, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 366
    00000173: 	nopl	(%rax,%rax) # Size: 5
.Ltmp618:
    00000178: 	addl	$0x1, %ebx
    0000017b: 	cmpl	%eax, %ebx
    0000017d: 	jl	.Ltmp619 # Offset: 381
    00000183: 	jmp	.Ltmp617 # Offset: 387
.Ltmp623:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp629:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp627 # Offset: 437
.Ltmp620:
    000001ba: 	movq	%r13, %rsi
    000001bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 452
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001de: 	jne	.Ltmp628 # Offset: 478
.Ltmp625:
    000001e4: 	movq	-0x8(%rdx), %rax
    000001e8: 	addq	$0x200, %rax
    000001ee: 	jmp	.Ltmp628 # Offset: 494
.Ltmp624:
    000001f3: 	testq	%r12, %r12
    000001f6: 	je	.Ltmp627 # Offset: 502
    000001fc: 	jmp	.Ltmp629 # Offset: 508
.Ltmp626:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
.Ltmp622:
    00000203: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 522
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 125
  State       : disassembled
  Address     : 0x86f0
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x86f0
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0124:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rdx, %r12
    00000011: 	pushq	%rbp
    00000012: 	movslq	%esi, %rbp
    00000015: 	pushq	%rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	movl	iterations(%rip), %eax
    00000041: 	testl	%eax, %eax
    00000043: 	jle	.Ltmp630 # Offset: 67
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp634:
    00000048: 	movq	%rbp, %rdi
    0000004b: 	callq	*%r12 # Offset: 75
    0000004e: 	imulq	$0x1f40, %rax, %rax
    00000055: 	movq	%rax, (%rsp)
    00000059: 	testl	%r13d, %r13d
    0000005c: 	jle	.Ltmp631 # Offset: 92
    00000062: 	xorl	%r14d, %r14d
    00000065: 	xorl	%ebx, %ebx
    00000067: 	nopw	(%rax,%rax) # Size: 9
.Ltmp632:
    00000070: 	movq	%rbp, %rdi
    00000073: 	addl	$0x1, %r14d
    00000077: 	callq	*%r12 # Offset: 119
    0000007a: 	addq	%rax, %rbx
    0000007d: 	cmpl	%r13d, %r14d
    00000080: 	jne	.Ltmp632 # Offset: 128
.Ltmp642:
    00000082: 	cmpq	%rbx, (%rsp)
    00000086: 	je	.Ltmp633 # Offset: 134
    0000008c: 	movq	0x8(%rsp), %rax
    00000091: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00000098: 	movl	$0x1, %edi
    0000009d: 	addl	$0x1, %r15d
    000000a1: 	movq	(%rax), %rdx
    000000a4: 	xorl	%eax, %eax
    000000a6: 	callq	__printf_chk@PLT # Offset: 166
    000000ab: 	cmpl	%r15d, iterations(%rip)
    000000b2: 	jg	.Ltmp634 # Offset: 178
.Ltmp630:
    000000b4: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000bb: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c2: 	subq	$0x20, %rax
    000000c6: 	cmpq	%rax, %rbx
    000000c9: 	je	.Ltmp635 # Offset: 201
    000000cf: 	movq	0x8(%rsp), %rax
    000000d4: 	leaq	0x10(%rbx), %rdi
    000000d8: 	movq	%rdi, (%rbx)
    000000db: 	movq	(%rax), %rbp
    000000de: 	movq	0x8(%rax), %r12
    000000e2: 	movq	%rbp, %rax
    000000e5: 	addq	%r12, %rax
    000000e8: 	je	.Ltmp636 # Offset: 232
    000000ea: 	testq	%rbp, %rbp
    000000ed: 	je	.Ltmp637 # Offset: 237
.Ltmp636:
    000000f3: 	movq	%r12, 0x10(%rsp)
    000000f8: 	cmpq	$0xf, %r12
    000000fc: 	ja	.Ltmp638 # Offset: 252
    00000102: 	cmpq	$0x1, %r12
    00000106: 	jne	.Ltmp639 # Offset: 262
    0000010c: 	movzbl	(%rbp), %eax
    00000110: 	movb	%al, 0x10(%rbx)
.Ltmp643:
    00000113: 	movq	%r12, 0x8(%rbx)
    00000117: 	movb	$0x0, (%rdi,%r12)
    0000011c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000123: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000012a: 	addq	$0x20, %rax
    0000012e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000135: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013c: 	je	.Ltmp640 # Offset: 316
.Ltmp644:
    00000142: 	movq	-0x20(%rax), %rbp
    00000146: 	callq	clock@PLT # Offset: 326
    0000014b: 	movq	%rax, end_time(%rip)
    00000152: 	movq	0x18(%rsp), %rdx
    00000157: 	subq	%fs:0x28, %rdx
    00000160: 	jne	.Ltmp641 # Offset: 352
    00000166: 	subq	start_time(%rip), %rax
    0000016d: 	pxor	%xmm0, %xmm0
    00000171: 	movq	%rbp, %rdi
    00000174: 	cvtsi2sd	%rax, %xmm0
    00000179: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000181: 	addq	$0x28, %rsp
    00000185: 	popq	%rbx
    00000186: 	popq	%rbp
    00000187: 	popq	%r12
    00000189: 	popq	%r13
    0000018b: 	popq	%r14
    0000018d: 	popq	%r15
    0000018f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 399
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp633:
    00000198: 	addl	$0x1, %r15d
    0000019c: 	cmpl	iterations(%rip), %r15d
    000001a3: 	jl	.Ltmp634 # Offset: 419
    000001a9: 	jmp	.Ltmp630 # Offset: 425
    000001ae: 	nop # Size: 2
.Ltmp631:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp642 # Offset: 434
.Ltmp638:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp645:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp643 # Offset: 488
.Ltmp635:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp644 # Offset: 531
.Ltmp640:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp644 # Offset: 547
.Ltmp639:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp643 # Offset: 555
    00000231: 	jmp	.Ltmp645 # Offset: 561
.Ltmp641:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp637:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 126
  State       : disassembled
  Address     : 0x8940
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x8940
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0125:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movl	%esi, %r12d
    00000011: 	pushq	%rbp
    00000012: 	movq	%rdx, %rbp
    00000015: 	pushq	%rbx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x18(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	callq	clock@PLT # Offset: 47
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	movl	iterations(%rip), %eax
    00000041: 	testl	%eax, %eax
    00000043: 	jle	.Ltmp646 # Offset: 67
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp650:
    00000048: 	movl	%r12d, %edi
    0000004b: 	callq	*%rbp # Offset: 75
    0000004d: 	imull	$0x1f40, %eax, %eax
    00000053: 	movl	%eax, 0x4(%rsp)
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp647 # Offset: 90
    00000060: 	xorl	%r14d, %r14d
    00000063: 	xorl	%ebx, %ebx
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp648:
    00000068: 	movl	%r12d, %edi
    0000006b: 	addl	$0x1, %r14d
    0000006f: 	callq	*%rbp # Offset: 111
    00000071: 	addl	%eax, %ebx
    00000073: 	cmpl	%r13d, %r14d
    00000076: 	jne	.Ltmp648 # Offset: 118
.Ltmp658:
    00000078: 	cmpl	%ebx, 0x4(%rsp)
    0000007c: 	je	.Ltmp649 # Offset: 124
    00000082: 	movq	0x8(%rsp), %rax
    00000087: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000008e: 	movl	$0x1, %edi
    00000093: 	addl	$0x1, %r15d
    00000097: 	movq	(%rax), %rdx
    0000009a: 	xorl	%eax, %eax
    0000009c: 	callq	__printf_chk@PLT # Offset: 156
    000000a1: 	cmpl	%r15d, iterations(%rip)
    000000a8: 	jg	.Ltmp650 # Offset: 168
.Ltmp646:
    000000aa: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000b8: 	subq	$0x20, %rax
    000000bc: 	cmpq	%rax, %rbx
    000000bf: 	je	.Ltmp651 # Offset: 191
    000000c5: 	movq	0x8(%rsp), %rax
    000000ca: 	leaq	0x10(%rbx), %rdi
    000000ce: 	movq	%rdi, (%rbx)
    000000d1: 	movq	(%rax), %rbp
    000000d4: 	movq	0x8(%rax), %r12
    000000d8: 	movq	%rbp, %rax
    000000db: 	addq	%r12, %rax
    000000de: 	je	.Ltmp652 # Offset: 222
    000000e0: 	testq	%rbp, %rbp
    000000e3: 	je	.Ltmp653 # Offset: 227
.Ltmp652:
    000000e9: 	movq	%r12, 0x10(%rsp)
    000000ee: 	cmpq	$0xf, %r12
    000000f2: 	ja	.Ltmp654 # Offset: 242
    000000f8: 	cmpq	$0x1, %r12
    000000fc: 	jne	.Ltmp655 # Offset: 252
    00000102: 	movzbl	(%rbp), %eax
    00000106: 	movb	%al, 0x10(%rbx)
.Ltmp659:
    00000109: 	movq	%r12, 0x8(%rbx)
    0000010d: 	movb	$0x0, (%rdi,%r12)
    00000112: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000119: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000120: 	addq	$0x20, %rax
    00000124: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000012b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000132: 	je	.Ltmp656 # Offset: 306
.Ltmp660:
    00000138: 	movq	-0x20(%rax), %rbp
    0000013c: 	callq	clock@PLT # Offset: 316
    00000141: 	movq	%rax, end_time(%rip)
    00000148: 	movq	0x18(%rsp), %rdx
    0000014d: 	subq	%fs:0x28, %rdx
    00000156: 	jne	.Ltmp657 # Offset: 342
    0000015c: 	subq	start_time(%rip), %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	movq	%rbp, %rdi
    0000016a: 	cvtsi2sd	%rax, %xmm0
    0000016f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000177: 	addq	$0x28, %rsp
    0000017b: 	popq	%rbx
    0000017c: 	popq	%rbp
    0000017d: 	popq	%r12
    0000017f: 	popq	%r13
    00000181: 	popq	%r14
    00000183: 	popq	%r15
    00000185: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 389
    0000018a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp649:
    00000190: 	addl	$0x1, %r15d
    00000194: 	cmpl	iterations(%rip), %r15d
    0000019b: 	jl	.Ltmp650 # Offset: 411
    000001a1: 	jmp	.Ltmp646 # Offset: 417
    000001a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp647:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp658 # Offset: 434
.Ltmp654:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp661:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp659 # Offset: 488
.Ltmp651:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp660 # Offset: 531
.Ltmp656:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp660 # Offset: 547
.Ltmp655:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp659 # Offset: 555
    00000231: 	jmp	.Ltmp661 # Offset: 561
.Ltmp657:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp653:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_loop_invariant.cpp/1
  Number      : 127
  State       : disassembled
  Address     : 0x8b90
  Size        : 0x1ff
  MaxSize     : 0x200
  Offset      : 0x8b90
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0126:
    00000000: 	pushq	%r14
    00000002: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdx, %r13
    0000000e: 	pushq	%r12
    00000010: 	movl	%edi, %r12d
    00000013: 	pushq	%rbp
    00000014: 	movzbl	%r12b, %r12d
    00000018: 	pushq	%rbx
    00000019: 	movq	%rsi, %rbx
    0000001c: 	subq	$0x10, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x8(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movl	%r12d, %edi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	*%rbx # Offset: 63
    00000041: 	movl	%r12d, %edi
    00000044: 	movl	%eax, %ebp
    00000046: 	callq	*%rbx # Offset: 70
    00000048: 	shll	$0x6, %ebp
    0000004b: 	xorl	%ebx, %ebx
    0000004d: 	shll	$0x6, %eax
    00000050: 	movl	%eax, %r12d
    00000053: 	movl	iterations(%rip), %eax
    00000059: 	testl	%eax, %eax
    0000005b: 	jle	.Ltmp662 # Offset: 91
    0000005d: 	nopl	(%rax) # Size: 3
.Ltmp664:
    00000060: 	cmpb	%bpl, %r12b
    00000063: 	je	.Ltmp663 # Offset: 99
    00000069: 	movq	(%r13), %rdx
    0000006d: 	movq	%r14, %rsi
    00000070: 	movl	$0x1, %edi
    00000075: 	xorl	%eax, %eax
    00000077: 	addl	$0x1, %ebx
    0000007a: 	callq	__printf_chk@PLT # Offset: 122
    0000007f: 	movl	iterations(%rip), %eax
    00000085: 	cmpl	%eax, %ebx
    00000087: 	jl	.Ltmp664 # Offset: 135
.Ltmp662:
    00000089: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000090: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000097: 	subq	$0x20, %rax
    0000009b: 	cmpq	%rax, %rbx
    0000009e: 	je	.Ltmp665 # Offset: 158
    000000a4: 	leaq	0x10(%rbx), %rdi
    000000a8: 	movq	0x8(%r13), %r12
    000000ac: 	movq	%rdi, (%rbx)
    000000af: 	movq	(%r13), %rbp
    000000b3: 	movq	%rbp, %rax
    000000b6: 	addq	%r12, %rax
    000000b9: 	je	.Ltmp666 # Offset: 185
    000000bb: 	testq	%rbp, %rbp
    000000be: 	je	.Ltmp667 # Offset: 190
.Ltmp666:
    000000c4: 	movq	%r12, (%rsp)
    000000c8: 	cmpq	$0xf, %r12
    000000cc: 	ja	.Ltmp668 # Offset: 204
    000000d2: 	cmpq	$0x1, %r12
    000000d6: 	jne	.Ltmp669 # Offset: 214
    000000dc: 	movzbl	(%rbp), %eax
    000000e0: 	movb	%al, 0x10(%rbx)
.Ltmp672:
    000000e3: 	movq	%r12, 0x8(%rbx)
    000000e7: 	movb	$0x0, (%rdi,%r12)
    000000ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000000fa: 	addq	$0x20, %rax
    000000fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000105: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000010c: 	je	.Ltmp670 # Offset: 268
.Ltmp673:
    00000112: 	movq	-0x20(%rax), %rbp
    00000116: 	callq	clock@PLT # Offset: 278
    0000011b: 	movq	%rax, end_time(%rip)
    00000122: 	movq	0x8(%rsp), %rdx
    00000127: 	subq	%fs:0x28, %rdx
    00000130: 	jne	.Ltmp671 # Offset: 304
    00000136: 	subq	start_time(%rip), %rax
    0000013d: 	pxor	%xmm0, %xmm0
    00000141: 	movq	%rbp, %rdi
    00000144: 	cvtsi2sd	%rax, %xmm0
    00000149: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000151: 	addq	$0x10, %rsp
    00000155: 	popq	%rbx
    00000156: 	popq	%rbp
    00000157: 	popq	%r12
    00000159: 	popq	%r13
    0000015b: 	popq	%r14
    0000015d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp663:
    00000168: 	addl	$0x1, %ebx
    0000016b: 	cmpl	%eax, %ebx
    0000016d: 	jl	.Ltmp664 # Offset: 365
    00000173: 	jmp	.Ltmp662 # Offset: 371
.Ltmp668:
    00000178: 	movq	%rbx, %rdi
    0000017b: 	movq	%rsp, %rsi
    0000017e: 	xorl	%edx, %edx
    00000180: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 384
    00000185: 	movq	%rax, (%rbx)
    00000188: 	movq	%rax, %rdi
    0000018b: 	movq	(%rsp), %rax
    0000018f: 	movq	%rax, 0x10(%rbx)
.Ltmp674:
    00000193: 	movq	%r12, %rdx
    00000196: 	movq	%rbp, %rsi
    00000199: 	callq	memcpy@PLT # Offset: 409
    0000019e: 	movq	(%rsp), %r12
    000001a2: 	movq	(%rbx), %rdi
    000001a5: 	jmp	.Ltmp672 # Offset: 421
.Ltmp665:
    000001aa: 	movq	%r13, %rsi
    000001ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 436
    000001b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001c0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ce: 	jne	.Ltmp673 # Offset: 462
.Ltmp670:
    000001d4: 	movq	-0x8(%rdx), %rax
    000001d8: 	addq	$0x200, %rax
    000001de: 	jmp	.Ltmp673 # Offset: 478
.Ltmp669:
    000001e3: 	testq	%r12, %r12
    000001e6: 	je	.Ltmp672 # Offset: 486
    000001ec: 	jmp	.Ltmp674 # Offset: 492
.Ltmp671:
    000001ee: 	callq	__stack_chk_fail@PLT # Offset: 494
.Ltmp667:
    000001f3: 	leaq	DATAat0x3d158(%rip), %rdi
    000001fa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 506
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_loop_invariant.cpp/1
  Number      : 128
  State       : disassembled
  Address     : 0x8d90
  Size        : 0x233
  MaxSize     : 0x240
  Offset      : 0x8d90
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0127:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movq	%rsi, %r13
    0000000c: 	pushq	%r12
    0000000e: 	movl	%edi, %r12d
    00000011: 	pushq	%rbp
    00000012: 	movzbl	%r12b, %r12d
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x28, %rsp
    0000001b: 	movq	%rdx, 0x8(%rsp)
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x18(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	movl	iterations(%rip), %eax
    00000042: 	testl	%eax, %eax
    00000044: 	jle	.Ltmp675 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp678:
    00000050: 	movl	%r12d, %edi
    00000053: 	movl	$0x1f40, %ebx
    00000058: 	xorl	%ebp, %ebp
    0000005a: 	callq	*%r13 # Offset: 90
    0000005d: 	shll	$0x6, %eax
    00000060: 	movl	%eax, %r14d
    00000063: 	nopl	(%rax,%rax) # Size: 5
.Ltmp676:
    00000068: 	movl	%r12d, %edi
    0000006b: 	callq	*%r13 # Offset: 107
    0000006e: 	addl	%eax, %ebp
    00000070: 	subl	$0x1, %ebx
    00000073: 	jne	.Ltmp676 # Offset: 115
    00000075: 	cmpb	%bpl, %r14b
    00000078: 	je	.Ltmp677 # Offset: 120
    0000007e: 	movq	0x8(%rsp), %rax
    00000083: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000008a: 	movl	$0x1, %edi
    0000008f: 	addl	$0x1, %r15d
    00000093: 	movq	(%rax), %rdx
    00000096: 	xorl	%eax, %eax
    00000098: 	callq	__printf_chk@PLT # Offset: 152
    0000009d: 	cmpl	%r15d, iterations(%rip)
    000000a4: 	jg	.Ltmp678 # Offset: 164
.Ltmp675:
    000000a6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000b4: 	subq	$0x20, %rax
    000000b8: 	cmpq	%rax, %rbx
    000000bb: 	je	.Ltmp679 # Offset: 187
    000000c1: 	movq	0x8(%rsp), %rax
    000000c6: 	leaq	0x10(%rbx), %rdi
    000000ca: 	movq	%rdi, (%rbx)
    000000cd: 	movq	(%rax), %rbp
    000000d0: 	movq	0x8(%rax), %r12
    000000d4: 	movq	%rbp, %rax
    000000d7: 	addq	%r12, %rax
    000000da: 	je	.Ltmp680 # Offset: 218
    000000dc: 	testq	%rbp, %rbp
    000000df: 	je	.Ltmp681 # Offset: 223
.Ltmp680:
    000000e5: 	movq	%r12, 0x10(%rsp)
    000000ea: 	cmpq	$0xf, %r12
    000000ee: 	ja	.Ltmp682 # Offset: 238
    000000f4: 	cmpq	$0x1, %r12
    000000f8: 	jne	.Ltmp683 # Offset: 248
    000000fe: 	movzbl	(%rbp), %eax
    00000102: 	movb	%al, 0x10(%rbx)
.Ltmp686:
    00000105: 	movq	%r12, 0x8(%rbx)
    00000109: 	movb	$0x0, (%rdi,%r12)
    0000010e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000115: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000011c: 	addq	$0x20, %rax
    00000120: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000127: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000012e: 	je	.Ltmp684 # Offset: 302
.Ltmp687:
    00000134: 	movq	-0x20(%rax), %rbp
    00000138: 	callq	clock@PLT # Offset: 312
    0000013d: 	movq	%rax, end_time(%rip)
    00000144: 	movq	0x18(%rsp), %rdx
    00000149: 	subq	%fs:0x28, %rdx
    00000152: 	jne	.Ltmp685 # Offset: 338
    00000158: 	subq	start_time(%rip), %rax
    0000015f: 	pxor	%xmm0, %xmm0
    00000163: 	movq	%rbp, %rdi
    00000166: 	cvtsi2sd	%rax, %xmm0
    0000016b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000173: 	addq	$0x28, %rsp
    00000177: 	popq	%rbx
    00000178: 	popq	%rbp
    00000179: 	popq	%r12
    0000017b: 	popq	%r13
    0000017d: 	popq	%r14
    0000017f: 	popq	%r15
    00000181: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 385
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp677:
    00000190: 	addl	$0x1, %r15d
    00000194: 	cmpl	iterations(%rip), %r15d
    0000019b: 	jl	.Ltmp678 # Offset: 411
    000001a1: 	jmp	.Ltmp675 # Offset: 417
.Ltmp682:
    000001a6: 	movq	%rbx, %rdi
    000001a9: 	leaq	0x10(%rsp), %rsi
    000001ae: 	xorl	%edx, %edx
    000001b0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 432
    000001b5: 	movq	%rax, (%rbx)
    000001b8: 	movq	%rax, %rdi
    000001bb: 	movq	0x10(%rsp), %rax
    000001c0: 	movq	%rax, 0x10(%rbx)
.Ltmp688:
    000001c4: 	movq	%r12, %rdx
    000001c7: 	movq	%rbp, %rsi
    000001ca: 	callq	memcpy@PLT # Offset: 458
    000001cf: 	movq	0x10(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp686 # Offset: 471
.Ltmp679:
    000001dc: 	movq	0x8(%rsp), %rsi
    000001e1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 488
    000001ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001fb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000202: 	jne	.Ltmp687 # Offset: 514
.Ltmp684:
    00000208: 	movq	-0x8(%rdx), %rax
    0000020c: 	addq	$0x200, %rax
    00000212: 	jmp	.Ltmp687 # Offset: 530
.Ltmp683:
    00000217: 	testq	%r12, %r12
    0000021a: 	je	.Ltmp686 # Offset: 538
    00000220: 	jmp	.Ltmp688 # Offset: 544
.Ltmp685:
    00000222: 	callq	__stack_chk_fail@PLT # Offset: 546
.Ltmp681:
    00000227: 	leaq	DATAat0x3d158(%rip), %rdi
    0000022e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 558
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 129
  State       : disassembled
  Address     : 0x8fd0
  Size        : 0x20f
  MaxSize     : 0x210
  Offset      : 0x8fd0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0128:
    00000000: 	pushq	%r14
    00000002: 	movl	%edi, %r14d
    00000005: 	pushq	%r13
    00000007: 	movq	%rcx, %r13
    0000000a: 	pushq	%r12
    0000000c: 	movl	%esi, %r12d
    0000000f: 	pushq	%rbp
    00000010: 	movzwl	%r12w, %r12d
    00000014: 	pushq	%rbx
    00000015: 	movq	%rdx, %rbx
    00000018: 	subq	$0x10, %rsp
    0000001c: 	movq	%fs:0x28, %rax
    00000025: 	movq	%rax, 0x8(%rsp)
    0000002a: 	xorl	%eax, %eax
    0000002c: 	callq	clock@PLT # Offset: 44
    00000031: 	movl	%r12d, %edi
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	callq	*%rbx # Offset: 59
    0000003d: 	movl	%r12d, %edi
    00000040: 	movl	%eax, %ebp
    00000042: 	callq	*%rbx # Offset: 66
    00000044: 	imulw	$0x1f40, %ax, %r12w
    0000004a: 	movl	iterations(%rip), %eax
    00000050: 	testl	%eax, %eax
    00000052: 	jle	.Ltmp689 # Offset: 82
    00000054: 	imull	%r14d, %ebp
    00000058: 	xorl	%edx, %edx
    0000005a: 	testl	%r14d, %r14d
    0000005d: 	leaq	DATAat0x3d1c8(%rip), %r14
    00000064: 	cmovlel	%edx, %ebp
    00000067: 	xorl	%ebx, %ebx
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp691:
    00000070: 	cmpw	%bp, %r12w
    00000074: 	je	.Ltmp690 # Offset: 116
    0000007a: 	movq	(%r13), %rdx
    0000007e: 	movq	%r14, %rsi
    00000081: 	movl	$0x1, %edi
    00000086: 	xorl	%eax, %eax
    00000088: 	addl	$0x1, %ebx
    0000008b: 	callq	__printf_chk@PLT # Offset: 139
    00000090: 	movl	iterations(%rip), %eax
    00000096: 	cmpl	%eax, %ebx
    00000098: 	jl	.Ltmp691 # Offset: 152
.Ltmp689:
    0000009a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000a8: 	subq	$0x20, %rax
    000000ac: 	cmpq	%rax, %rbx
    000000af: 	je	.Ltmp692 # Offset: 175
    000000b5: 	leaq	0x10(%rbx), %rdi
    000000b9: 	movq	0x8(%r13), %r12
    000000bd: 	movq	%rdi, (%rbx)
    000000c0: 	movq	(%r13), %rbp
    000000c4: 	movq	%rbp, %rax
    000000c7: 	addq	%r12, %rax
    000000ca: 	je	.Ltmp693 # Offset: 202
    000000cc: 	testq	%rbp, %rbp
    000000cf: 	je	.Ltmp694 # Offset: 207
.Ltmp693:
    000000d5: 	movq	%r12, (%rsp)
    000000d9: 	cmpq	$0xf, %r12
    000000dd: 	ja	.Ltmp695 # Offset: 221
    000000e3: 	cmpq	$0x1, %r12
    000000e7: 	jne	.Ltmp696 # Offset: 231
    000000ed: 	movzbl	(%rbp), %eax
    000000f1: 	movb	%al, 0x10(%rbx)
.Ltmp699:
    000000f4: 	movq	%r12, 0x8(%rbx)
    000000f8: 	movb	$0x0, (%rdi,%r12)
    000000fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000010b: 	addq	$0x20, %rax
    0000010f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000116: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000011d: 	je	.Ltmp697 # Offset: 285
.Ltmp700:
    00000123: 	movq	-0x20(%rax), %rbp
    00000127: 	callq	clock@PLT # Offset: 295
    0000012c: 	movq	%rax, end_time(%rip)
    00000133: 	movq	0x8(%rsp), %rdx
    00000138: 	subq	%fs:0x28, %rdx
    00000141: 	jne	.Ltmp698 # Offset: 321
    00000147: 	subq	start_time(%rip), %rax
    0000014e: 	pxor	%xmm0, %xmm0
    00000152: 	movq	%rbp, %rdi
    00000155: 	cvtsi2sd	%rax, %xmm0
    0000015a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000162: 	addq	$0x10, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 366
    00000173: 	nopl	(%rax,%rax) # Size: 5
.Ltmp690:
    00000178: 	addl	$0x1, %ebx
    0000017b: 	cmpl	%eax, %ebx
    0000017d: 	jl	.Ltmp691 # Offset: 381
    00000183: 	jmp	.Ltmp689 # Offset: 387
.Ltmp695:
    00000188: 	movq	%rbx, %rdi
    0000018b: 	movq	%rsp, %rsi
    0000018e: 	xorl	%edx, %edx
    00000190: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 400
    00000195: 	movq	%rax, (%rbx)
    00000198: 	movq	%rax, %rdi
    0000019b: 	movq	(%rsp), %rax
    0000019f: 	movq	%rax, 0x10(%rbx)
.Ltmp701:
    000001a3: 	movq	%r12, %rdx
    000001a6: 	movq	%rbp, %rsi
    000001a9: 	callq	memcpy@PLT # Offset: 425
    000001ae: 	movq	(%rsp), %r12
    000001b2: 	movq	(%rbx), %rdi
    000001b5: 	jmp	.Ltmp699 # Offset: 437
.Ltmp692:
    000001ba: 	movq	%r13, %rsi
    000001bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 452
    000001c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001de: 	jne	.Ltmp700 # Offset: 478
.Ltmp697:
    000001e4: 	movq	-0x8(%rdx), %rax
    000001e8: 	addq	$0x200, %rax
    000001ee: 	jmp	.Ltmp700 # Offset: 494
.Ltmp696:
    000001f3: 	testq	%r12, %r12
    000001f6: 	je	.Ltmp699 # Offset: 502
    000001fc: 	jmp	.Ltmp701 # Offset: 508
.Ltmp698:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
.Ltmp694:
    00000203: 	leaq	DATAat0x3d158(%rip), %rdi
    0000020a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 522
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 130
  State       : disassembled
  Address     : 0x91e0
  Size        : 0x244
  MaxSize     : 0x250
  Offset      : 0x91e0
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0129:
    00000000: 	pushq	%r15
    00000002: 	xorl	%r15d, %r15d
    00000005: 	pushq	%r14
    00000007: 	pushq	%r13
    00000009: 	movl	%edi, %r13d
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rdx, %r12
    00000011: 	pushq	%rbp
    00000012: 	movl	%esi, %ebp
    00000014: 	pushq	%rbx
    00000015: 	movzwl	%bp, %ebp
    00000018: 	subq	$0x28, %rsp
    0000001c: 	movq	%rcx, 0x8(%rsp)
    00000021: 	movq	%fs:0x28, %rax
    0000002a: 	movq	%rax, 0x18(%rsp)
    0000002f: 	xorl	%eax, %eax
    00000031: 	callq	clock@PLT # Offset: 49
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	movl	iterations(%rip), %eax
    00000043: 	testl	%eax, %eax
    00000045: 	jle	.Ltmp702 # Offset: 69
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp706:
    00000050: 	movl	%ebp, %edi
    00000052: 	callq	*%r12 # Offset: 82
    00000055: 	imulw	$0x1f40, %ax, %ax
    0000005a: 	movw	%ax, 0x6(%rsp)
    0000005f: 	testl	%r13d, %r13d
    00000062: 	jle	.Ltmp703 # Offset: 98
    00000068: 	xorl	%r14d, %r14d
    0000006b: 	xorl	%ebx, %ebx
    0000006d: 	nopl	(%rax) # Size: 3
.Ltmp704:
    00000070: 	movl	%ebp, %edi
    00000072: 	addl	$0x1, %r14d
    00000076: 	callq	*%r12 # Offset: 118
    00000079: 	addl	%eax, %ebx
    0000007b: 	cmpl	%r13d, %r14d
    0000007e: 	jne	.Ltmp704 # Offset: 126
.Ltmp714:
    00000080: 	cmpw	%bx, 0x6(%rsp)
    00000085: 	je	.Ltmp705 # Offset: 133
    0000008b: 	movq	0x8(%rsp), %rax
    00000090: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00000097: 	movl	$0x1, %edi
    0000009c: 	addl	$0x1, %r15d
    000000a0: 	movq	(%rax), %rdx
    000000a3: 	xorl	%eax, %eax
    000000a5: 	callq	__printf_chk@PLT # Offset: 165
    000000aa: 	cmpl	%r15d, iterations(%rip)
    000000b1: 	jg	.Ltmp706 # Offset: 177
.Ltmp702:
    000000b3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000c1: 	subq	$0x20, %rax
    000000c5: 	cmpq	%rax, %rbx
    000000c8: 	je	.Ltmp707 # Offset: 200
    000000ce: 	movq	0x8(%rsp), %rax
    000000d3: 	leaq	0x10(%rbx), %rdi
    000000d7: 	movq	%rdi, (%rbx)
    000000da: 	movq	(%rax), %rbp
    000000dd: 	movq	0x8(%rax), %r12
    000000e1: 	movq	%rbp, %rax
    000000e4: 	addq	%r12, %rax
    000000e7: 	je	.Ltmp708 # Offset: 231
    000000e9: 	testq	%rbp, %rbp
    000000ec: 	je	.Ltmp709 # Offset: 236
.Ltmp708:
    000000f2: 	movq	%r12, 0x10(%rsp)
    000000f7: 	cmpq	$0xf, %r12
    000000fb: 	ja	.Ltmp710 # Offset: 251
    00000101: 	cmpq	$0x1, %r12
    00000105: 	jne	.Ltmp711 # Offset: 261
    0000010b: 	movzbl	(%rbp), %eax
    0000010f: 	movb	%al, 0x10(%rbx)
.Ltmp715:
    00000112: 	movq	%r12, 0x8(%rbx)
    00000116: 	movb	$0x0, (%rdi,%r12)
    0000011b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000122: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000129: 	addq	$0x20, %rax
    0000012d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000134: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000013b: 	je	.Ltmp712 # Offset: 315
.Ltmp716:
    00000141: 	movq	-0x20(%rax), %rbp
    00000145: 	callq	clock@PLT # Offset: 325
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	movq	0x18(%rsp), %rdx
    00000156: 	subq	%fs:0x28, %rdx
    0000015f: 	jne	.Ltmp713 # Offset: 351
    00000165: 	subq	start_time(%rip), %rax
    0000016c: 	pxor	%xmm0, %xmm0
    00000170: 	movq	%rbp, %rdi
    00000173: 	cvtsi2sd	%rax, %xmm0
    00000178: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000180: 	addq	$0x28, %rsp
    00000184: 	popq	%rbx
    00000185: 	popq	%rbp
    00000186: 	popq	%r12
    00000188: 	popq	%r13
    0000018a: 	popq	%r14
    0000018c: 	popq	%r15
    0000018e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 398
    00000193: 	nopl	(%rax,%rax) # Size: 5
.Ltmp705:
    00000198: 	addl	$0x1, %r15d
    0000019c: 	cmpl	iterations(%rip), %r15d
    000001a3: 	jl	.Ltmp706 # Offset: 419
    000001a9: 	jmp	.Ltmp702 # Offset: 425
    000001ae: 	nop # Size: 2
.Ltmp703:
    000001b0: 	xorl	%ebx, %ebx
    000001b2: 	jmp	.Ltmp714 # Offset: 434
.Ltmp710:
    000001b7: 	movq	%rbx, %rdi
    000001ba: 	leaq	0x10(%rsp), %rsi
    000001bf: 	xorl	%edx, %edx
    000001c1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 449
    000001c6: 	movq	%rax, (%rbx)
    000001c9: 	movq	%rax, %rdi
    000001cc: 	movq	0x10(%rsp), %rax
    000001d1: 	movq	%rax, 0x10(%rbx)
.Ltmp717:
    000001d5: 	movq	%r12, %rdx
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x10(%rsp), %r12
    000001e5: 	movq	(%rbx), %rdi
    000001e8: 	jmp	.Ltmp715 # Offset: 488
.Ltmp707:
    000001ed: 	movq	0x8(%rsp), %rsi
    000001f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 505
    000001fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000213: 	jne	.Ltmp716 # Offset: 531
.Ltmp712:
    00000219: 	movq	-0x8(%rdx), %rax
    0000021d: 	addq	$0x200, %rax
    00000223: 	jmp	.Ltmp716 # Offset: 547
.Ltmp711:
    00000228: 	testq	%r12, %r12
    0000022b: 	je	.Ltmp715 # Offset: 555
    00000231: 	jmp	.Ltmp717 # Offset: 561
.Ltmp713:
    00000233: 	callq	__stack_chk_fail@PLT # Offset: 563
.Ltmp709:
    00000238: 	leaq	DATAat0x3d158(%rip), %rdi
    0000023f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 575
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 131
  State       : disassembled
  Address     : 0x9430
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x9430
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0130:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movl	%edi, %r12d
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdx, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	movq	%rsi, %rbx
    00000011: 	subq	$0x20, %rsp
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x18(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	movq	%rax, start_time(%rip)
    00000031: 	movl	iterations(%rip), %eax
    00000037: 	testl	%eax, %eax
    00000039: 	jle	.Ltmp718 # Offset: 57
    0000003f: 	pxor	%xmm4, %xmm4
    00000043: 	xorl	%r13d, %r13d
    00000046: 	cvtsi2ss	%r12d, %xmm4
    0000004b: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000052: 	movd	%xmm4, %r14d
    00000057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp721:
    00000060: 	movd	%r14d, %xmm0
    00000065: 	callq	*%rbx # Offset: 101
    00000067: 	movss	%xmm0, 0xc(%rsp)
    0000006d: 	movd	%r14d, %xmm0
    00000072: 	callq	*%rbx # Offset: 114
    00000074: 	movss	DATAat0x3d68c(%rip), %xmm2
    0000007c: 	movss	0xc(%rsp), %xmm1
    00000082: 	mulss	%xmm0, %xmm2
    00000086: 	movss	DATAat0x3d68c(%rip), %xmm0
    0000008e: 	mulss	%xmm1, %xmm0
    00000092: 	movaps	%xmm2, %xmm1
    00000095: 	subss	%xmm0, %xmm1
    00000099: 	movaps	%xmm2, %xmm0
    0000009c: 	andps	DATAat0x3d720(%rip), %xmm0
    000000a3: 	cvtss2sd	%xmm0, %xmm0
    000000a7: 	comisd	DATAat0x3d6d8(%rip), %xmm0
    000000af: 	jbe	.Ltmp719 # Offset: 175
    000000b1: 	divss	%xmm2, %xmm1
.Ltmp719:
    000000b5: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    000000bd: 	cvtss2sd	%xmm1, %xmm1
    000000c1: 	andpd	DATAat0x3d710(%rip), %xmm1
    000000c9: 	comisd	%xmm1, %xmm3
    000000cd: 	jbe	.Ltmp720 # Offset: 205
    000000d3: 	addl	$0x1, %r13d
    000000d7: 	cmpl	iterations(%rip), %r13d
    000000de: 	jl	.Ltmp721 # Offset: 222
.Ltmp718:
    000000e0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ee: 	subq	$0x20, %rax
    000000f2: 	cmpq	%rax, %rbx
    000000f5: 	je	.Ltmp722 # Offset: 245
    000000fb: 	leaq	0x10(%rbx), %rdi
    000000ff: 	movq	0x8(%rbp), %r12
    00000103: 	movq	%rdi, (%rbx)
    00000106: 	movq	(%rbp), %r13
    0000010a: 	movq	%r13, %rax
    0000010d: 	addq	%r12, %rax
    00000110: 	je	.Ltmp723 # Offset: 272
    00000112: 	testq	%r13, %r13
    00000115: 	je	.Ltmp724 # Offset: 277
.Ltmp723:
    0000011b: 	movq	%r12, 0x10(%rsp)
    00000120: 	cmpq	$0xf, %r12
    00000124: 	ja	.Ltmp725 # Offset: 292
    0000012a: 	cmpq	$0x1, %r12
    0000012e: 	jne	.Ltmp726 # Offset: 302
    00000134: 	movzbl	(%r13), %eax
    00000139: 	movb	%al, 0x10(%rbx)
.Ltmp729:
    0000013c: 	movq	%r12, 0x8(%rbx)
    00000140: 	movb	$0x0, (%rdi,%r12)
    00000145: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000014c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000153: 	addq	$0x20, %rax
    00000157: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000165: 	je	.Ltmp727 # Offset: 357
.Ltmp730:
    0000016b: 	movq	-0x20(%rax), %rbp
    0000016f: 	callq	clock@PLT # Offset: 367
    00000174: 	movq	%rax, end_time(%rip)
    0000017b: 	movq	0x18(%rsp), %rdx
    00000180: 	subq	%fs:0x28, %rdx
    00000189: 	jne	.Ltmp728 # Offset: 393
    0000018f: 	subq	start_time(%rip), %rax
    00000196: 	pxor	%xmm0, %xmm0
    0000019a: 	movq	%rbp, %rdi
    0000019d: 	cvtsi2sd	%rax, %xmm0
    000001a2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001aa: 	addq	$0x20, %rsp
    000001ae: 	popq	%rbx
    000001af: 	popq	%rbp
    000001b0: 	popq	%r12
    000001b2: 	popq	%r13
    000001b4: 	popq	%r14
    000001b6: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 438
    000001bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp720:
    000001c0: 	movq	(%rbp), %rdx
    000001c4: 	xorl	%eax, %eax
    000001c6: 	movq	%r12, %rsi
    000001c9: 	movl	$0x1, %edi
    000001ce: 	addl	$0x1, %r13d
    000001d2: 	callq	__printf_chk@PLT # Offset: 466
    000001d7: 	cmpl	%r13d, iterations(%rip)
    000001de: 	jg	.Ltmp721 # Offset: 478
    000001e4: 	jmp	.Ltmp718 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp725:
    000001f0: 	movq	%rbx, %rdi
    000001f3: 	leaq	0x10(%rsp), %rsi
    000001f8: 	xorl	%edx, %edx
    000001fa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 506
    000001ff: 	movq	%rax, (%rbx)
    00000202: 	movq	%rax, %rdi
    00000205: 	movq	0x10(%rsp), %rax
    0000020a: 	movq	%rax, 0x10(%rbx)
.Ltmp731:
    0000020e: 	movq	%r12, %rdx
    00000211: 	movq	%r13, %rsi
    00000214: 	callq	memcpy@PLT # Offset: 532
    00000219: 	movq	0x10(%rsp), %r12
    0000021e: 	movq	(%rbx), %rdi
    00000221: 	jmp	.Ltmp729 # Offset: 545
    00000226: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp722:
    00000230: 	movq	%rbp, %rsi
    00000233: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000023a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 570
    0000023f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000246: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000254: 	jne	.Ltmp730 # Offset: 596
.Ltmp727:
    0000025a: 	movq	-0x8(%rdx), %rax
    0000025e: 	addq	$0x200, %rax
    00000264: 	jmp	.Ltmp730 # Offset: 612
    00000269: 	nopl	(%rax) # Size: 7
.Ltmp726:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp729 # Offset: 627
    00000279: 	jmp	.Ltmp731 # Offset: 633
.Ltmp728:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp724:
    00000280: 	leaq	DATAat0x3d158(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 132
  State       : disassembled
  Address     : 0x96c0
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x96c0
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0131:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	pushq	%r12
    00000006: 	movl	%edi, %r12d
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdx, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	movq	%rsi, %rbx
    00000011: 	subq	$0x20, %rsp
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x18(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	movq	%rax, start_time(%rip)
    00000031: 	movl	iterations(%rip), %eax
    00000037: 	testl	%eax, %eax
    00000039: 	jle	.Ltmp732 # Offset: 57
    0000003f: 	pxor	%xmm4, %xmm4
    00000043: 	xorl	%r13d, %r13d
    00000046: 	cvtsi2sd	%r12d, %xmm4
    0000004b: 	leaq	DATAat0x3d1c8(%rip), %r12
    00000052: 	movq	%xmm4, %r14
    00000057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp735:
    00000060: 	movq	%r14, %xmm0
    00000065: 	callq	*%rbx # Offset: 101
    00000067: 	movsd	%xmm0, 0x8(%rsp)
    0000006d: 	movq	%r14, %xmm0
    00000072: 	callq	*%rbx # Offset: 114
    00000074: 	movsd	DATAat0x3d6f8(%rip), %xmm2
    0000007c: 	movsd	0x8(%rsp), %xmm1
    00000082: 	mulsd	%xmm0, %xmm2
    00000086: 	movsd	DATAat0x3d6f8(%rip), %xmm0
    0000008e: 	mulsd	%xmm1, %xmm0
    00000092: 	movapd	%xmm2, %xmm1
    00000096: 	subsd	%xmm0, %xmm1
    0000009a: 	movapd	%xmm2, %xmm0
    0000009e: 	andpd	DATAat0x3d710(%rip), %xmm0
    000000a6: 	comisd	DATAat0x3d6e0(%rip), %xmm0
    000000ae: 	jbe	.Ltmp733 # Offset: 174
    000000b0: 	divsd	%xmm2, %xmm1
.Ltmp733:
    000000b4: 	andpd	DATAat0x3d710(%rip), %xmm1
    000000bc: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    000000c4: 	comisd	%xmm1, %xmm3
    000000c8: 	jbe	.Ltmp734 # Offset: 200
    000000ce: 	addl	$0x1, %r13d
    000000d2: 	cmpl	iterations(%rip), %r13d
    000000d9: 	jl	.Ltmp735 # Offset: 217
.Ltmp732:
    000000db: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000e9: 	subq	$0x20, %rax
    000000ed: 	cmpq	%rax, %rbx
    000000f0: 	je	.Ltmp736 # Offset: 240
    000000f6: 	leaq	0x10(%rbx), %rdi
    000000fa: 	movq	0x8(%rbp), %r12
    000000fe: 	movq	%rdi, (%rbx)
    00000101: 	movq	(%rbp), %r13
    00000105: 	movq	%r13, %rax
    00000108: 	addq	%r12, %rax
    0000010b: 	je	.Ltmp737 # Offset: 267
    0000010d: 	testq	%r13, %r13
    00000110: 	je	.Ltmp738 # Offset: 272
.Ltmp737:
    00000116: 	movq	%r12, 0x10(%rsp)
    0000011b: 	cmpq	$0xf, %r12
    0000011f: 	ja	.Ltmp739 # Offset: 287
    00000125: 	cmpq	$0x1, %r12
    00000129: 	jne	.Ltmp740 # Offset: 297
    0000012f: 	movzbl	(%r13), %eax
    00000134: 	movb	%al, 0x10(%rbx)
.Ltmp743:
    00000137: 	movq	%r12, 0x8(%rbx)
    0000013b: 	movb	$0x0, (%rdi,%r12)
    00000140: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000147: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000014e: 	addq	$0x20, %rax
    00000152: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000159: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000160: 	je	.Ltmp741 # Offset: 352
.Ltmp744:
    00000166: 	movq	-0x20(%rax), %rbp
    0000016a: 	callq	clock@PLT # Offset: 362
    0000016f: 	movq	%rax, end_time(%rip)
    00000176: 	movq	0x18(%rsp), %rdx
    0000017b: 	subq	%fs:0x28, %rdx
    00000184: 	jne	.Ltmp742 # Offset: 388
    0000018a: 	subq	start_time(%rip), %rax
    00000191: 	pxor	%xmm0, %xmm0
    00000195: 	movq	%rbp, %rdi
    00000198: 	cvtsi2sd	%rax, %xmm0
    0000019d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001a5: 	addq	$0x20, %rsp
    000001a9: 	popq	%rbx
    000001aa: 	popq	%rbp
    000001ab: 	popq	%r12
    000001ad: 	popq	%r13
    000001af: 	popq	%r14
    000001b1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 433
    000001b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp734:
    000001c0: 	movq	(%rbp), %rdx
    000001c4: 	xorl	%eax, %eax
    000001c6: 	movq	%r12, %rsi
    000001c9: 	movl	$0x1, %edi
    000001ce: 	addl	$0x1, %r13d
    000001d2: 	callq	__printf_chk@PLT # Offset: 466
    000001d7: 	cmpl	%r13d, iterations(%rip)
    000001de: 	jg	.Ltmp735 # Offset: 478
    000001e4: 	jmp	.Ltmp732 # Offset: 484
    000001e9: 	nopl	(%rax) # Size: 7
.Ltmp739:
    000001f0: 	movq	%rbx, %rdi
    000001f3: 	leaq	0x10(%rsp), %rsi
    000001f8: 	xorl	%edx, %edx
    000001fa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 506
    000001ff: 	movq	%rax, (%rbx)
    00000202: 	movq	%rax, %rdi
    00000205: 	movq	0x10(%rsp), %rax
    0000020a: 	movq	%rax, 0x10(%rbx)
.Ltmp745:
    0000020e: 	movq	%r12, %rdx
    00000211: 	movq	%r13, %rsi
    00000214: 	callq	memcpy@PLT # Offset: 532
    00000219: 	movq	0x10(%rsp), %r12
    0000021e: 	movq	(%rbx), %rdi
    00000221: 	jmp	.Ltmp743 # Offset: 545
    00000226: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp736:
    00000230: 	movq	%rbp, %rsi
    00000233: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000023a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 570
    0000023f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000246: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000024d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000254: 	jne	.Ltmp744 # Offset: 596
.Ltmp741:
    0000025a: 	movq	-0x8(%rdx), %rax
    0000025e: 	addq	$0x200, %rax
    00000264: 	jmp	.Ltmp744 # Offset: 612
    00000269: 	nopl	(%rax) # Size: 7
.Ltmp740:
    00000270: 	testq	%r12, %r12
    00000273: 	je	.Ltmp743 # Offset: 627
    00000279: 	jmp	.Ltmp745 # Offset: 633
.Ltmp742:
    0000027b: 	callq	__stack_chk_fail@PLT # Offset: 635
.Ltmp738:
    00000280: 	leaq	DATAat0x3d158(%rip), %rdi
    00000287: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 133
  State       : disassembled
  Address     : 0x9950
  Size        : 0x26c
  MaxSize     : 0x270
  Offset      : 0x9950
  Section     : .text
  Orc Section : .local.text._Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0132:
    00000000: 	pushq	%r13
    00000002: 	pushq	%r12
    00000004: 	movq	%rdx, %r12
    00000007: 	pushq	%rbp
    00000008: 	movq	%rsi, %rbp
    0000000b: 	pushq	%rbx
    0000000c: 	subq	$0x38, %rsp
    00000010: 	movl	%edi, (%rsp)
    00000013: 	movq	%fs:0x28, %rax
    0000001c: 	movq	%rax, 0x28(%rsp)
    00000021: 	xorl	%eax, %eax
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %edi
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	testl	%edi, %edi
    00000037: 	jle	.Ltmp746 # Offset: 55
    0000003d: 	fildl	(%rsp)
    00000040: 	xorl	%ebx, %ebx
    00000042: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000049: 	fstpt	0x10(%rsp)
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp750:
    00000050: 	pushq	0x18(%rsp)
    00000054: 	pushq	0x18(%rsp)
    00000058: 	callq	*%rbp # Offset: 88
    0000005a: 	fstpt	0x10(%rsp)
    0000005e: 	popq	%rax
    0000005f: 	popq	%rdx
    00000060: 	pushq	0x18(%rsp)
    00000064: 	pushq	0x18(%rsp)
    00000068: 	callq	*%rbp # Offset: 104
    0000006a: 	fmuls	DATAat0x3d68c(%rip)
    00000070: 	fldt	0x10(%rsp)
    00000074: 	fmuls	DATAat0x3d68c(%rip)
    0000007a: 	fsubr	%st(1), %st
    0000007c: 	fstpl	0x10(%rsp)
    00000080: 	popq	%rcx
    00000081: 	popq	%rsi
    00000082: 	fld	%st(0)
    00000084: 	fabs
    00000086: 	fldl	DATAat0x3d6e0(%rip)
    0000008c: 	fxch	%st(1)
    0000008e: 	fcompi	%st(1), %st
    00000090: 	fstp	%st(0)
    00000092: 	jbe	.Ltmp747 # Offset: 146
    00000094: 	fdivrl	(%rsp)
    00000097: 	fstpl	(%rsp)
    0000009a: 	jmp	.Ltmp748 # Offset: 154
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp747:
    000000a0: 	fstp	%st(0)
.Ltmp748:
    000000a2: 	movsd	(%rsp), %xmm0
    000000a7: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    000000af: 	andpd	DATAat0x3d710(%rip), %xmm0
    000000b7: 	comisd	%xmm0, %xmm1
    000000bb: 	jbe	.Ltmp749 # Offset: 187
    000000c1: 	addl	$0x1, %ebx
    000000c4: 	cmpl	iterations(%rip), %ebx
    000000ca: 	jl	.Ltmp750 # Offset: 202
.Ltmp746:
    000000cc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000da: 	subq	$0x20, %rax
    000000de: 	cmpq	%rax, %rbx
    000000e1: 	je	.Ltmp751 # Offset: 225
    000000e7: 	leaq	0x10(%rbx), %rdi
    000000eb: 	movq	%rdi, (%rbx)
    000000ee: 	movq	(%r12), %rbp
    000000f2: 	movq	0x8(%r12), %r12
    000000f7: 	movq	%rbp, %rax
    000000fa: 	addq	%r12, %rax
    000000fd: 	je	.Ltmp752 # Offset: 253
    000000ff: 	testq	%rbp, %rbp
    00000102: 	je	.Ltmp753 # Offset: 258
.Ltmp752:
    00000108: 	movq	%r12, 0x20(%rsp)
    0000010d: 	cmpq	$0xf, %r12
    00000111: 	ja	.Ltmp754 # Offset: 273
    00000117: 	cmpq	$0x1, %r12
    0000011b: 	jne	.Ltmp755 # Offset: 283
    00000121: 	movzbl	(%rbp), %eax
    00000125: 	movb	%al, 0x10(%rbx)
.Ltmp758:
    00000128: 	movq	%r12, 0x8(%rbx)
    0000012c: 	movb	$0x0, (%rdi,%r12)
    00000131: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000138: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000013f: 	addq	$0x20, %rax
    00000143: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000151: 	je	.Ltmp756 # Offset: 337
.Ltmp759:
    00000157: 	movq	-0x20(%rax), %rbp
    0000015b: 	callq	clock@PLT # Offset: 347
    00000160: 	movq	%rax, end_time(%rip)
    00000167: 	movq	0x28(%rsp), %rdx
    0000016c: 	subq	%fs:0x28, %rdx
    00000175: 	jne	.Ltmp757 # Offset: 373
    0000017b: 	subq	start_time(%rip), %rax
    00000182: 	pxor	%xmm0, %xmm0
    00000186: 	movq	%rbp, %rdi
    00000189: 	cvtsi2sd	%rax, %xmm0
    0000018e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000196: 	addq	$0x38, %rsp
    0000019a: 	popq	%rbx
    0000019b: 	popq	%rbp
    0000019c: 	popq	%r12
    0000019e: 	popq	%r13
    000001a0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 416
    000001a5: 	nopl	(%rax) # Size: 3
.Ltmp749:
    000001a8: 	movq	(%r12), %rdx
    000001ac: 	xorl	%eax, %eax
    000001ae: 	movq	%r13, %rsi
    000001b1: 	movl	$0x1, %edi
    000001b6: 	addl	$0x1, %ebx
    000001b9: 	callq	__printf_chk@PLT # Offset: 441
    000001be: 	cmpl	%ebx, iterations(%rip)
    000001c4: 	jg	.Ltmp750 # Offset: 452
    000001ca: 	jmp	.Ltmp746 # Offset: 458
    000001cf: 	nop # Size: 1
.Ltmp754:
    000001d0: 	movq	%rbx, %rdi
    000001d3: 	leaq	0x20(%rsp), %rsi
    000001d8: 	xorl	%edx, %edx
    000001da: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 474
    000001df: 	movq	%rax, (%rbx)
    000001e2: 	movq	%rax, %rdi
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	movq	%rax, 0x10(%rbx)
.Ltmp760:
    000001ee: 	movq	%r12, %rdx
    000001f1: 	movq	%rbp, %rsi
    000001f4: 	callq	memcpy@PLT # Offset: 500
    000001f9: 	movq	0x20(%rsp), %r12
    000001fe: 	movq	(%rbx), %rdi
    00000201: 	jmp	.Ltmp758 # Offset: 513
    00000206: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp751:
    00000210: 	movq	%r12, %rsi
    00000213: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000021a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 538
    0000021f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000226: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000234: 	jne	.Ltmp759 # Offset: 564
.Ltmp756:
    0000023a: 	movq	-0x8(%rdx), %rax
    0000023e: 	addq	$0x200, %rax
    00000244: 	jmp	.Ltmp759 # Offset: 580
    00000249: 	nopl	(%rax) # Size: 7
.Ltmp755:
    00000250: 	testq	%r12, %r12
    00000253: 	je	.Ltmp758 # Offset: 595
    00000259: 	jmp	.Ltmp760 # Offset: 601
.Ltmp757:
    0000025b: 	callq	__stack_chk_fail@PLT # Offset: 603
.Ltmp753:
    00000260: 	leaq	DATAat0x3d158(%rip), %rdi
    00000267: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 615
DWARF CFI Instructions:
    <empty>
End of Function "_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 134
  State       : disassembled
  Address     : 0x9bc0
  Size        : 0x2c1
  MaxSize     : 0x2d0
  Offset      : 0x9bc0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0133:
    00000000: 	pushq	%r13
    00000002: 	pushq	%r12
    00000004: 	movq	%rcx, %r12
    00000007: 	pushq	%rbp
    00000008: 	movq	%rdx, %rbp
    0000000b: 	pushq	%rbx
    0000000c: 	movl	%edi, %ebx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	%esi, (%rsp)
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x28(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	fildl	(%rsp)
    0000002d: 	subq	$0x10, %rsp
    00000031: 	movq	%rax, start_time(%rip)
    00000038: 	fld	%st(0)
    0000003a: 	fstpt	(%rsp)
    0000003d: 	fstpt	0x20(%rsp)
    00000041: 	callq	*%rbp # Offset: 65
    00000043: 	fstpt	0x10(%rsp)
    00000047: 	fldt	0x20(%rsp)
    0000004b: 	fstpt	(%rsp)
    0000004e: 	callq	*%rbp # Offset: 78
    00000050: 	movl	iterations(%rip), %edx
    00000056: 	popq	%rax
    00000057: 	fmuls	DATAat0x3d68c(%rip)
    0000005d: 	popq	%rcx
    0000005e: 	fldt	(%rsp)
    00000061: 	testl	%edx, %edx
    00000063: 	jle	.Ltmp761 # Offset: 99
    00000069: 	movq	DATAat0x3d710(%rip), %xmm2
    00000071: 	xorl	%ebp, %ebp
    00000073: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    0000007b: 	leaq	DATAat0x3d1c8(%rip), %r13
    00000082: 	nopw	(%rax,%rax) # Size: 6
.Ltmp768:
    00000088: 	testl	%ebx, %ebx
    0000008a: 	jle	.Ltmp762 # Offset: 138
    00000090: 	jmp	.Ltmp763 # Offset: 144
    00000092: 	nopw	(%rax,%rax) # Size: 6
.Ltmp778:
    00000098: 	fxch	%st(1)
.Ltmp763:
    0000009a: 	fldz
    0000009c: 	xorl	%eax, %eax
    0000009e: 	nop # Size: 2
.Ltmp764:
    000000a0: 	addl	$0x1, %eax
    000000a3: 	fadd	%st(1), %st
    000000a5: 	cmpl	%ebx, %eax
    000000a7: 	jne	.Ltmp764 # Offset: 167
    000000a9: 	fld	%st(0)
    000000ab: 	fsub	%st(3), %st
    000000ad: 	fstpl	(%rsp)
    000000b0: 	fld	%st(0)
    000000b2: 	fabs
    000000b4: 	fldl	DATAat0x3d6e0(%rip)
    000000ba: 	fxch	%st(1)
    000000bc: 	fcompi	%st(1), %st
    000000be: 	fstp	%st(0)
    000000c0: 	jbe	.Ltmp765 # Offset: 192
    000000c2: 	fdivrl	(%rsp)
    000000c5: 	fstpl	(%rsp)
    000000c8: 	jmp	.Ltmp766 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp765:
    000000d0: 	fstp	%st(0)
.Ltmp766:
    000000d2: 	movsd	(%rsp), %xmm0
    000000d7: 	andpd	%xmm2, %xmm0
    000000db: 	comisd	%xmm0, %xmm1
    000000df: 	jbe	.Ltmp767 # Offset: 223
    000000e5: 	addl	$0x1, %ebp
    000000e8: 	cmpl	%edx, %ebp
    000000ea: 	jl	.Ltmp768 # Offset: 234
    000000ec: 	fstp	%st(0)
    000000ee: 	fstp	%st(0)
    000000f0: 	jmp	.Ltmp769 # Offset: 240
.Ltmp761:
    000000f2: 	fstp	%st(0)
    000000f4: 	fstp	%st(0)
    000000f6: 	jmp	.Ltmp769 # Offset: 246
.Ltmp777:
    000000f8: 	fstp	%st(0)
    000000fa: 	fstp	%st(0)
.Ltmp769:
    000000fc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000103: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010a: 	subq	$0x20, %rax
    0000010e: 	cmpq	%rax, %rbx
    00000111: 	je	.Ltmp770 # Offset: 273
    00000117: 	leaq	0x10(%rbx), %rdi
    0000011b: 	movq	%rdi, (%rbx)
    0000011e: 	movq	(%r12), %rbp
    00000122: 	movq	0x8(%r12), %r12
    00000127: 	movq	%rbp, %rax
    0000012a: 	addq	%r12, %rax
    0000012d: 	je	.Ltmp771 # Offset: 301
    0000012f: 	testq	%rbp, %rbp
    00000132: 	je	.Ltmp772 # Offset: 306
.Ltmp771:
    00000138: 	movq	%r12, 0x20(%rsp)
    0000013d: 	cmpq	$0xf, %r12
    00000141: 	ja	.Ltmp773 # Offset: 321
    00000147: 	cmpq	$0x1, %r12
    0000014b: 	jne	.Ltmp774 # Offset: 331
    00000151: 	movzbl	(%rbp), %eax
    00000155: 	movb	%al, 0x10(%rbx)
.Ltmp779:
    00000158: 	movq	%r12, 0x8(%rbx)
    0000015c: 	movb	$0x0, (%rdi,%r12)
    00000161: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000168: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016f: 	addq	$0x20, %rax
    00000173: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000181: 	je	.Ltmp775 # Offset: 385
.Ltmp780:
    00000187: 	movq	-0x20(%rax), %rbp
    0000018b: 	callq	clock@PLT # Offset: 395
    00000190: 	movq	%rax, end_time(%rip)
    00000197: 	movq	0x28(%rsp), %rdx
    0000019c: 	subq	%fs:0x28, %rdx
    000001a5: 	jne	.Ltmp776 # Offset: 421
    000001ab: 	subq	start_time(%rip), %rax
    000001b2: 	pxor	%xmm0, %xmm0
    000001b6: 	movq	%rbp, %rdi
    000001b9: 	cvtsi2sd	%rax, %xmm0
    000001be: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001c6: 	addq	$0x38, %rsp
    000001ca: 	popq	%rbx
    000001cb: 	popq	%rbp
    000001cc: 	popq	%r12
    000001ce: 	popq	%r13
    000001d0: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 464
    000001d5: 	nopl	(%rax) # Size: 3
.Ltmp767:
    000001d8: 	fxch	%st(1)
    000001da: 	fstpt	0x10(%rsp)
    000001de: 	movq	(%r12), %rdx
    000001e2: 	xorl	%eax, %eax
    000001e4: 	movq	%r13, %rsi
    000001e7: 	movl	$0x1, %edi
    000001ec: 	addl	$0x1, %ebp
    000001ef: 	fstpt	(%rsp)
    000001f2: 	callq	__printf_chk@PLT # Offset: 498
    000001f7: 	movl	iterations(%rip), %edx
    000001fd: 	movq	DATAat0x3d6e8(%rip), %rax
    00000204: 	fldt	(%rsp)
    00000207: 	movq	DATAat0x3d710(%rip), %xmm2
    0000020f: 	cmpl	%ebp, %edx
    00000211: 	movq	%rax, %xmm1
    00000216: 	fldt	0x10(%rsp)
    0000021a: 	jle	.Ltmp777 # Offset: 538
    00000220: 	testl	%ebx, %ebx
    00000222: 	jg	.Ltmp778 # Offset: 546
    00000228: 	fxch	%st(1)
.Ltmp762:
    0000022a: 	fldz
    0000022c: 	fsub	%st(2), %st
    0000022e: 	fstpl	(%rsp)
    00000231: 	jmp	.Ltmp766 # Offset: 561
.Ltmp773:
    00000236: 	movq	%rbx, %rdi
    00000239: 	leaq	0x20(%rsp), %rsi
    0000023e: 	xorl	%edx, %edx
    00000240: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 576
    00000245: 	movq	%rax, (%rbx)
    00000248: 	movq	%rax, %rdi
    0000024b: 	movq	0x20(%rsp), %rax
    00000250: 	movq	%rax, 0x10(%rbx)
.Ltmp781:
    00000254: 	movq	%r12, %rdx
    00000257: 	movq	%rbp, %rsi
    0000025a: 	callq	memcpy@PLT # Offset: 602
    0000025f: 	movq	0x20(%rsp), %r12
    00000264: 	movq	(%rbx), %rdi
    00000267: 	jmp	.Ltmp779 # Offset: 615
.Ltmp770:
    0000026c: 	movq	%r12, %rsi
    0000026f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000276: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 630
    0000027b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000282: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000290: 	jne	.Ltmp780 # Offset: 656
.Ltmp775:
    00000296: 	movq	-0x8(%rdx), %rax
    0000029a: 	addq	$0x200, %rax
    000002a0: 	jmp	.Ltmp780 # Offset: 672
.Ltmp774:
    000002a5: 	testq	%r12, %r12
    000002a8: 	je	.Ltmp779 # Offset: 680
    000002ae: 	jmp	.Ltmp781 # Offset: 686
.Ltmp776:
    000002b0: 	callq	__stack_chk_fail@PLT # Offset: 688
.Ltmp772:
    000002b5: 	leaq	DATAat0x3d158(%rip), %rdi
    000002bc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 700
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 135
  State       : disassembled
  Address     : 0x9e90
  Size        : 0x2a2
  MaxSize     : 0x2b0
  Offset      : 0x9e90
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0134:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movq	%rcx, %r13
    00000009: 	pushq	%r12
    0000000b: 	movl	%esi, %r12d
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movl	%edi, %ebx
    00000015: 	subq	$0x38, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x28(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movl	iterations(%rip), %eax
    0000003b: 	testl	%eax, %eax
    0000003d: 	jle	.Ltmp782 # Offset: 61
    00000043: 	pxor	%xmm5, %xmm5
    00000047: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000004e: 	cvtsi2sd	%r12d, %xmm5
    00000053: 	xorl	%r12d, %r12d
    00000056: 	movsd	%xmm5, 0x10(%rsp)
    0000005c: 	nopl	(%rax) # Size: 4
.Ltmp787:
    00000060: 	movsd	0x10(%rsp), %xmm0
    00000066: 	callq	*%rbp # Offset: 102
    00000068: 	mulsd	DATAat0x3d6f8(%rip), %xmm0
    00000070: 	movsd	%xmm0, 0x18(%rsp)
    00000076: 	testl	%ebx, %ebx
    00000078: 	jle	.Ltmp783 # Offset: 120
    0000007e: 	xorl	%r15d, %r15d
    00000081: 	pxor	%xmm1, %xmm1
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp784:
    00000088: 	movsd	%xmm1, 0x8(%rsp)
    0000008e: 	movsd	0x10(%rsp), %xmm0
    00000094: 	addl	$0x1, %r15d
    00000098: 	callq	*%rbp # Offset: 152
    0000009a: 	movsd	0x8(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpl	%ebx, %r15d
    000000a7: 	jne	.Ltmp784 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x3d710(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x3d6e0(%rip), %xmm2
    000000c1: 	subsd	0x18(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp785 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp785:
    000000cd: 	andpd	DATAat0x3d710(%rip), %xmm0
    000000d5: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp786 # Offset: 225
    000000e7: 	addl	$0x1, %r12d
    000000eb: 	cmpl	iterations(%rip), %r12d
    000000f2: 	jl	.Ltmp787 # Offset: 242
.Ltmp782:
    000000f8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000106: 	subq	$0x20, %rax
    0000010a: 	cmpq	%rax, %rbx
    0000010d: 	je	.Ltmp788 # Offset: 269
    00000113: 	leaq	0x10(%rbx), %rdi
    00000117: 	movq	0x8(%r13), %r12
    0000011b: 	movq	%rdi, (%rbx)
    0000011e: 	movq	(%r13), %rbp
    00000122: 	movq	%rbp, %rax
    00000125: 	addq	%r12, %rax
    00000128: 	je	.Ltmp789 # Offset: 296
    0000012a: 	testq	%rbp, %rbp
    0000012d: 	je	.Ltmp790 # Offset: 301
.Ltmp789:
    00000133: 	movq	%r12, 0x20(%rsp)
    00000138: 	cmpq	$0xf, %r12
    0000013c: 	ja	.Ltmp791 # Offset: 316
    00000142: 	cmpq	$0x1, %r12
    00000146: 	jne	.Ltmp792 # Offset: 326
    0000014c: 	movzbl	(%rbp), %eax
    00000150: 	movb	%al, 0x10(%rbx)
.Ltmp795:
    00000153: 	movq	%r12, 0x8(%rbx)
    00000157: 	movb	$0x0, (%rdi,%r12)
    0000015c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000163: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016a: 	addq	$0x20, %rax
    0000016e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000175: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000017c: 	je	.Ltmp793 # Offset: 380
.Ltmp796:
    00000182: 	movq	-0x20(%rax), %rbp
    00000186: 	callq	clock@PLT # Offset: 390
    0000018b: 	movq	%rax, end_time(%rip)
    00000192: 	movq	0x28(%rsp), %rdx
    00000197: 	subq	%fs:0x28, %rdx
    000001a0: 	jne	.Ltmp794 # Offset: 416
    000001a6: 	subq	start_time(%rip), %rax
    000001ad: 	pxor	%xmm0, %xmm0
    000001b1: 	movq	%rbp, %rdi
    000001b4: 	cvtsi2sd	%rax, %xmm0
    000001b9: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001c1: 	addq	$0x38, %rsp
    000001c5: 	popq	%rbx
    000001c6: 	popq	%rbp
    000001c7: 	popq	%r12
    000001c9: 	popq	%r13
    000001cb: 	popq	%r14
    000001cd: 	popq	%r15
    000001cf: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 463
    000001d4: 	nopl	(%rax) # Size: 4
.Ltmp786:
    000001d8: 	movq	(%r13), %rdx
    000001dc: 	xorl	%eax, %eax
    000001de: 	movq	%r14, %rsi
    000001e1: 	movl	$0x1, %edi
    000001e6: 	addl	$0x1, %r12d
    000001ea: 	callq	__printf_chk@PLT # Offset: 490
    000001ef: 	cmpl	%r12d, iterations(%rip)
    000001f6: 	jg	.Ltmp787 # Offset: 502
    000001fc: 	jmp	.Ltmp782 # Offset: 508
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp783:
    00000208: 	pxor	%xmm0, %xmm0
    0000020c: 	subsd	0x18(%rsp), %xmm0
    00000212: 	jmp	.Ltmp785 # Offset: 530
.Ltmp791:
    00000217: 	movq	%rbx, %rdi
    0000021a: 	leaq	0x20(%rsp), %rsi
    0000021f: 	xorl	%edx, %edx
    00000221: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 545
    00000226: 	movq	%rax, (%rbx)
    00000229: 	movq	%rax, %rdi
    0000022c: 	movq	0x20(%rsp), %rax
    00000231: 	movq	%rax, 0x10(%rbx)
.Ltmp797:
    00000235: 	movq	%r12, %rdx
    00000238: 	movq	%rbp, %rsi
    0000023b: 	callq	memcpy@PLT # Offset: 571
    00000240: 	movq	0x20(%rsp), %r12
    00000245: 	movq	(%rbx), %rdi
    00000248: 	jmp	.Ltmp795 # Offset: 584
.Ltmp788:
    0000024d: 	movq	%r13, %rsi
    00000250: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000257: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 599
    0000025c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000263: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000026a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000271: 	jne	.Ltmp796 # Offset: 625
.Ltmp793:
    00000277: 	movq	-0x8(%rdx), %rax
    0000027b: 	addq	$0x200, %rax
    00000281: 	jmp	.Ltmp796 # Offset: 641
.Ltmp792:
    00000286: 	testq	%r12, %r12
    00000289: 	je	.Ltmp795 # Offset: 649
    0000028f: 	jmp	.Ltmp797 # Offset: 655
.Ltmp794:
    00000291: 	callq	__stack_chk_fail@PLT # Offset: 657
.Ltmp790:
    00000296: 	leaq	DATAat0x3d158(%rip), %rdi
    0000029d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 669
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 136
  State       : disassembled
  Address     : 0xa140
  Size        : 0x2aa
  MaxSize     : 0x2b0
  Offset      : 0xa140
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0135:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	pushq	%r13
    00000006: 	movq	%rcx, %r13
    00000009: 	pushq	%r12
    0000000b: 	movl	%esi, %r12d
    0000000e: 	pushq	%rbp
    0000000f: 	movq	%rdx, %rbp
    00000012: 	pushq	%rbx
    00000013: 	movl	%edi, %ebx
    00000015: 	subq	$0x28, %rsp
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x18(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	movl	iterations(%rip), %eax
    0000003b: 	testl	%eax, %eax
    0000003d: 	jle	.Ltmp798 # Offset: 61
    00000043: 	pxor	%xmm5, %xmm5
    00000047: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000004e: 	cvtsi2ss	%r12d, %xmm5
    00000053: 	xorl	%r12d, %r12d
    00000056: 	movss	%xmm5, 0x8(%rsp)
    0000005c: 	nopl	(%rax) # Size: 4
.Ltmp803:
    00000060: 	movss	0x8(%rsp), %xmm0
    00000066: 	callq	*%rbp # Offset: 102
    00000068: 	mulss	DATAat0x3d68c(%rip), %xmm0
    00000070: 	movss	%xmm0, 0xc(%rsp)
    00000076: 	testl	%ebx, %ebx
    00000078: 	jle	.Ltmp799 # Offset: 120
    0000007e: 	xorl	%r15d, %r15d
    00000081: 	pxor	%xmm1, %xmm1
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp800:
    00000088: 	movss	%xmm1, 0x4(%rsp)
    0000008e: 	movss	0x8(%rsp), %xmm0
    00000094: 	addl	$0x1, %r15d
    00000098: 	callq	*%rbp # Offset: 152
    0000009a: 	movss	0x4(%rsp), %xmm1
    000000a0: 	addss	%xmm0, %xmm1
    000000a4: 	cmpl	%ebx, %r15d
    000000a7: 	jne	.Ltmp800 # Offset: 167
    000000a9: 	movaps	%xmm1, %xmm2
    000000ac: 	andps	DATAat0x3d720(%rip), %xmm2
    000000b3: 	movaps	%xmm1, %xmm0
    000000b6: 	subss	0xc(%rsp), %xmm0
    000000bc: 	cvtss2sd	%xmm2, %xmm2
    000000c0: 	comisd	DATAat0x3d6d8(%rip), %xmm2
    000000c8: 	jbe	.Ltmp801 # Offset: 200
    000000ca: 	divss	%xmm1, %xmm0
.Ltmp801:
    000000ce: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    000000d6: 	cvtss2sd	%xmm0, %xmm0
    000000da: 	andpd	DATAat0x3d710(%rip), %xmm0
    000000e2: 	comisd	%xmm0, %xmm3
    000000e6: 	jbe	.Ltmp802 # Offset: 230
    000000ec: 	addl	$0x1, %r12d
    000000f0: 	cmpl	iterations(%rip), %r12d
    000000f7: 	jl	.Ltmp803 # Offset: 247
.Ltmp798:
    000000fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000104: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000010b: 	subq	$0x20, %rax
    0000010f: 	cmpq	%rax, %rbx
    00000112: 	je	.Ltmp804 # Offset: 274
    00000118: 	leaq	0x10(%rbx), %rdi
    0000011c: 	movq	0x8(%r13), %r12
    00000120: 	movq	%rdi, (%rbx)
    00000123: 	movq	(%r13), %rbp
    00000127: 	movq	%rbp, %rax
    0000012a: 	addq	%r12, %rax
    0000012d: 	je	.Ltmp805 # Offset: 301
    0000012f: 	testq	%rbp, %rbp
    00000132: 	je	.Ltmp806 # Offset: 306
.Ltmp805:
    00000138: 	movq	%r12, 0x10(%rsp)
    0000013d: 	cmpq	$0xf, %r12
    00000141: 	ja	.Ltmp807 # Offset: 321
    00000147: 	cmpq	$0x1, %r12
    0000014b: 	jne	.Ltmp808 # Offset: 331
    00000151: 	movzbl	(%rbp), %eax
    00000155: 	movb	%al, 0x10(%rbx)
.Ltmp811:
    00000158: 	movq	%r12, 0x8(%rbx)
    0000015c: 	movb	$0x0, (%rdi,%r12)
    00000161: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000168: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000016f: 	addq	$0x20, %rax
    00000173: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000017a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000181: 	je	.Ltmp809 # Offset: 385
.Ltmp812:
    00000187: 	movq	-0x20(%rax), %rbp
    0000018b: 	callq	clock@PLT # Offset: 395
    00000190: 	movq	%rax, end_time(%rip)
    00000197: 	movq	0x18(%rsp), %rdx
    0000019c: 	subq	%fs:0x28, %rdx
    000001a5: 	jne	.Ltmp810 # Offset: 421
    000001ab: 	subq	start_time(%rip), %rax
    000001b2: 	pxor	%xmm0, %xmm0
    000001b6: 	movq	%rbp, %rdi
    000001b9: 	cvtsi2sd	%rax, %xmm0
    000001be: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001c6: 	addq	$0x28, %rsp
    000001ca: 	popq	%rbx
    000001cb: 	popq	%rbp
    000001cc: 	popq	%r12
    000001ce: 	popq	%r13
    000001d0: 	popq	%r14
    000001d2: 	popq	%r15
    000001d4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 468
    000001d9: 	nopl	(%rax) # Size: 7
.Ltmp802:
    000001e0: 	movq	(%r13), %rdx
    000001e4: 	xorl	%eax, %eax
    000001e6: 	movq	%r14, %rsi
    000001e9: 	movl	$0x1, %edi
    000001ee: 	addl	$0x1, %r12d
    000001f2: 	callq	__printf_chk@PLT # Offset: 498
    000001f7: 	cmpl	%r12d, iterations(%rip)
    000001fe: 	jg	.Ltmp803 # Offset: 510
    00000204: 	jmp	.Ltmp798 # Offset: 516
    00000209: 	nopl	(%rax) # Size: 7
.Ltmp799:
    00000210: 	pxor	%xmm0, %xmm0
    00000214: 	subss	0xc(%rsp), %xmm0
    0000021a: 	jmp	.Ltmp801 # Offset: 538
.Ltmp807:
    0000021f: 	movq	%rbx, %rdi
    00000222: 	leaq	0x10(%rsp), %rsi
    00000227: 	xorl	%edx, %edx
    00000229: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 553
    0000022e: 	movq	%rax, (%rbx)
    00000231: 	movq	%rax, %rdi
    00000234: 	movq	0x10(%rsp), %rax
    00000239: 	movq	%rax, 0x10(%rbx)
.Ltmp813:
    0000023d: 	movq	%r12, %rdx
    00000240: 	movq	%rbp, %rsi
    00000243: 	callq	memcpy@PLT # Offset: 579
    00000248: 	movq	0x10(%rsp), %r12
    0000024d: 	movq	(%rbx), %rdi
    00000250: 	jmp	.Ltmp811 # Offset: 592
.Ltmp804:
    00000255: 	movq	%r13, %rsi
    00000258: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000025f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 607
    00000264: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000026b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000272: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000279: 	jne	.Ltmp812 # Offset: 633
.Ltmp809:
    0000027f: 	movq	-0x8(%rdx), %rax
    00000283: 	addq	$0x200, %rax
    00000289: 	jmp	.Ltmp812 # Offset: 649
.Ltmp808:
    0000028e: 	testq	%r12, %r12
    00000291: 	je	.Ltmp811 # Offset: 657
    00000297: 	jmp	.Ltmp813 # Offset: 663
.Ltmp810:
    00000299: 	callq	__stack_chk_fail@PLT # Offset: 665
.Ltmp806:
    0000029e: 	leaq	DATAat0x3d158(%rip), %rdi
    000002a5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 677
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 137
  State       : disassembled
  Address     : 0xa3f0
  Size        : 0x2d3
  MaxSize     : 0x2e0
  Offset      : 0xa3f0
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0136:
    00000000: 	pushq	%r13
    00000002: 	movl	%esi, %r13d
    00000005: 	pushq	%r12
    00000007: 	movq	%rdx, %r12
    0000000a: 	pushq	%rbp
    0000000b: 	movq	%rcx, %rbp
    0000000e: 	pushq	%rbx
    0000000f: 	movl	%edi, %ebx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x18(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	pxor	%xmm1, %xmm1
    0000002e: 	cvtsi2ss	%r13d, %xmm1
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	movaps	%xmm1, %xmm0
    0000003d: 	movss	%xmm1, 0xc(%rsp)
    00000043: 	callq	*%r12 # Offset: 67
    00000046: 	movss	0xc(%rsp), %xmm1
    0000004c: 	movss	%xmm0, 0x8(%rsp)
    00000052: 	movaps	%xmm1, %xmm0
    00000055: 	callq	*%r12 # Offset: 85
    00000058: 	movl	iterations(%rip), %edx
    0000005e: 	mulss	DATAat0x3d68c(%rip), %xmm0
    00000066: 	movss	0x8(%rsp), %xmm2
    0000006c: 	testl	%edx, %edx
    0000006e: 	jle	.Ltmp814 # Offset: 110
    00000074: 	movq	DATAat0x3d710(%rip), %xmm7
    0000007c: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    00000084: 	xorl	%r12d, %r12d
    00000087: 	pxor	%xmm5, %xmm5
    0000008b: 	movss	DATAat0x3d720(%rip), %xmm8
    00000094: 	leaq	DATAat0x3d1c8(%rip), %r13
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp819:
    000000a0: 	xorl	%eax, %eax
    000000a2: 	movaps	%xmm5, %xmm1
    000000a5: 	testl	%ebx, %ebx
    000000a7: 	jle	.Ltmp815 # Offset: 167
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp816:
    000000b0: 	addl	$0x1, %eax
    000000b3: 	addss	%xmm2, %xmm1
    000000b7: 	cmpl	%ebx, %eax
    000000b9: 	jne	.Ltmp816 # Offset: 185
    000000bb: 	movaps	%xmm1, %xmm4
    000000be: 	movaps	%xmm1, %xmm3
    000000c1: 	andps	%xmm8, %xmm4
    000000c5: 	subss	%xmm0, %xmm3
    000000c9: 	cvtss2sd	%xmm4, %xmm4
    000000cd: 	comisd	DATAat0x3d6d8(%rip), %xmm4
    000000d5: 	jbe	.Ltmp817 # Offset: 213
    000000d7: 	divss	%xmm1, %xmm3
.Ltmp817:
    000000db: 	cvtss2sd	%xmm3, %xmm3
    000000df: 	andpd	%xmm7, %xmm3
    000000e3: 	comisd	%xmm3, %xmm6
    000000e7: 	jbe	.Ltmp818 # Offset: 231
    000000ed: 	addl	$0x1, %r12d
    000000f1: 	cmpl	%edx, %r12d
    000000f4: 	jl	.Ltmp819 # Offset: 244
.Ltmp814:
    000000f6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000104: 	subq	$0x20, %rax
    00000108: 	cmpq	%rax, %rbx
    0000010b: 	je	.Ltmp820 # Offset: 267
    00000111: 	leaq	0x10(%rbx), %rdi
    00000115: 	movq	0x8(%rbp), %r12
    00000119: 	movq	%rdi, (%rbx)
    0000011c: 	movq	(%rbp), %r13
    00000120: 	movq	%r13, %rax
    00000123: 	addq	%r12, %rax
    00000126: 	je	.Ltmp821 # Offset: 294
    00000128: 	testq	%r13, %r13
    0000012b: 	je	.Ltmp822 # Offset: 299
.Ltmp821:
    00000131: 	movq	%r12, 0x10(%rsp)
    00000136: 	cmpq	$0xf, %r12
    0000013a: 	ja	.Ltmp823 # Offset: 314
    00000140: 	cmpq	$0x1, %r12
    00000144: 	jne	.Ltmp824 # Offset: 324
    0000014a: 	movzbl	(%r13), %eax
    0000014f: 	movb	%al, 0x10(%rbx)
.Ltmp827:
    00000152: 	movq	%r12, 0x8(%rbx)
    00000156: 	movb	$0x0, (%rdi,%r12)
    0000015b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000162: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000169: 	addq	$0x20, %rax
    0000016d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000174: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000017b: 	je	.Ltmp825 # Offset: 379
.Ltmp828:
    00000181: 	movq	-0x20(%rax), %rbp
    00000185: 	callq	clock@PLT # Offset: 389
    0000018a: 	movq	%rax, end_time(%rip)
    00000191: 	movq	0x18(%rsp), %rdx
    00000196: 	subq	%fs:0x28, %rdx
    0000019f: 	jne	.Ltmp826 # Offset: 415
    000001a5: 	subq	start_time(%rip), %rax
    000001ac: 	pxor	%xmm0, %xmm0
    000001b0: 	movq	%rbp, %rdi
    000001b3: 	cvtsi2sd	%rax, %xmm0
    000001b8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001c0: 	addq	$0x28, %rsp
    000001c4: 	popq	%rbx
    000001c5: 	popq	%rbp
    000001c6: 	popq	%r12
    000001c8: 	popq	%r13
    000001ca: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 458
    000001cf: 	nop # Size: 1
.Ltmp818:
    000001d0: 	movq	(%rbp), %rdx
    000001d4: 	xorl	%eax, %eax
    000001d6: 	movq	%r13, %rsi
    000001d9: 	movl	$0x1, %edi
    000001de: 	movss	%xmm0, 0xc(%rsp)
    000001e4: 	addl	$0x1, %r12d
    000001e8: 	movss	%xmm2, 0x8(%rsp)
    000001ee: 	callq	__printf_chk@PLT # Offset: 494
    000001f3: 	movl	iterations(%rip), %edx
    000001f9: 	pxor	%xmm5, %xmm5
    000001fd: 	movq	DATAat0x3d6f0(%rip), %rax
    00000204: 	movss	0x8(%rsp), %xmm2
    0000020a: 	movss	0xc(%rsp), %xmm0
    00000210: 	movss	DATAat0x3d720(%rip), %xmm8
    00000219: 	cmpl	%r12d, %edx
    0000021c: 	movq	DATAat0x3d710(%rip), %xmm7
    00000224: 	movq	%rax, %xmm6
    00000229: 	jle	.Ltmp814 # Offset: 553
    0000022f: 	xorl	%eax, %eax
    00000231: 	movaps	%xmm5, %xmm1
    00000234: 	testl	%ebx, %ebx
    00000236: 	jg	.Ltmp816 # Offset: 566
.Ltmp815:
    0000023c: 	movaps	%xmm5, %xmm3
    0000023f: 	subss	%xmm0, %xmm3
    00000243: 	jmp	.Ltmp817 # Offset: 579
.Ltmp823:
    00000248: 	movq	%rbx, %rdi
    0000024b: 	leaq	0x10(%rsp), %rsi
    00000250: 	xorl	%edx, %edx
    00000252: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 594
    00000257: 	movq	%rax, (%rbx)
    0000025a: 	movq	%rax, %rdi
    0000025d: 	movq	0x10(%rsp), %rax
    00000262: 	movq	%rax, 0x10(%rbx)
.Ltmp829:
    00000266: 	movq	%r12, %rdx
    00000269: 	movq	%r13, %rsi
    0000026c: 	callq	memcpy@PLT # Offset: 620
    00000271: 	movq	0x10(%rsp), %r12
    00000276: 	movq	(%rbx), %rdi
    00000279: 	jmp	.Ltmp827 # Offset: 633
.Ltmp820:
    0000027e: 	movq	%rbp, %rsi
    00000281: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000288: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 648
    0000028d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000294: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000029b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002a2: 	jne	.Ltmp828 # Offset: 674
.Ltmp825:
    000002a8: 	movq	-0x8(%rdx), %rax
    000002ac: 	addq	$0x200, %rax
    000002b2: 	jmp	.Ltmp828 # Offset: 690
.Ltmp824:
    000002b7: 	testq	%r12, %r12
    000002ba: 	je	.Ltmp827 # Offset: 698
    000002c0: 	jmp	.Ltmp829 # Offset: 704
.Ltmp826:
    000002c2: 	callq	__stack_chk_fail@PLT # Offset: 706
.Ltmp822:
    000002c7: 	leaq	DATAat0x3d158(%rip), %rdi
    000002ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 718
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 138
  State       : disassembled
  Address     : 0xa6d0
  Size        : 0x29b
  MaxSize     : 0x2a0
  Offset      : 0xa6d0
  Section     : .text
  Orc Section : .local.text._Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0137:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movq	%rcx, %r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rdx, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	movl	%edi, %ebp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x48, %rsp
    00000016: 	movl	%esi, (%rsp)
    00000019: 	movq	%fs:0x28, %rax
    00000022: 	movq	%rax, 0x38(%rsp)
    00000027: 	xorl	%eax, %eax
    00000029: 	callq	clock@PLT # Offset: 41
    0000002e: 	movl	iterations(%rip), %edi
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	testl	%edi, %edi
    0000003d: 	jle	.Ltmp830 # Offset: 61
    00000043: 	fildl	(%rsp)
    00000046: 	xorl	%r13d, %r13d
    00000049: 	leaq	DATAat0x3d1c8(%rip), %r15
    00000050: 	fstpt	0x10(%rsp)
    00000054: 	nopl	(%rax) # Size: 4
.Ltmp836:
    00000058: 	pushq	0x18(%rsp)
    0000005c: 	pushq	0x18(%rsp)
    00000060: 	callq	*%r12 # Offset: 96
    00000063: 	fmuls	DATAat0x3d68c(%rip)
    00000069: 	fstpt	0x30(%rsp)
    0000006d: 	popq	%rcx
    0000006e: 	popq	%rsi
    0000006f: 	testl	%ebp, %ebp
    00000071: 	jle	.Ltmp831 # Offset: 113
    00000077: 	fldz
    00000079: 	xorl	%ebx, %ebx
    0000007b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp832:
    00000080: 	fstpt	(%rsp)
    00000083: 	addl	$0x1, %ebx
    00000086: 	pushq	0x18(%rsp)
    0000008a: 	pushq	0x18(%rsp)
    0000008e: 	callq	*%r12 # Offset: 142
    00000091: 	fldt	0x10(%rsp)
    00000095: 	popq	%rax
    00000096: 	popq	%rdx
    00000097: 	faddp	%st, %st(1)
    00000099: 	cmpl	%ebp, %ebx
    0000009b: 	jne	.Ltmp832 # Offset: 155
    0000009d: 	fldt	0x20(%rsp)
    000000a1: 	fsubr	%st(1), %st
    000000a3: 	fstpl	(%rsp)
    000000a6: 	fld	%st(0)
    000000a8: 	fabs
    000000aa: 	fldl	DATAat0x3d6e0(%rip)
    000000b0: 	fxch	%st(1)
    000000b2: 	fcompi	%st(1), %st
    000000b4: 	fstp	%st(0)
    000000b6: 	jbe	.Ltmp833 # Offset: 182
    000000b8: 	fdivrl	(%rsp)
    000000bb: 	fstpl	(%rsp)
    000000be: 	jmp	.Ltmp834 # Offset: 190
.Ltmp833:
    000000c0: 	fstp	%st(0)
.Ltmp834:
    000000c2: 	movsd	(%rsp), %xmm0
    000000c7: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    000000cf: 	andpd	DATAat0x3d710(%rip), %xmm0
    000000d7: 	comisd	%xmm0, %xmm1
    000000db: 	jbe	.Ltmp835 # Offset: 219
    000000e1: 	addl	$0x1, %r13d
    000000e5: 	cmpl	iterations(%rip), %r13d
    000000ec: 	jl	.Ltmp836 # Offset: 236
.Ltmp830:
    000000f2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000100: 	subq	$0x20, %rax
    00000104: 	cmpq	%rax, %rbx
    00000107: 	je	.Ltmp837 # Offset: 263
    0000010d: 	leaq	0x10(%rbx), %rdi
    00000111: 	movq	0x8(%r14), %r12
    00000115: 	movq	%rdi, (%rbx)
    00000118: 	movq	(%r14), %rbp
    0000011b: 	movq	%rbp, %rax
    0000011e: 	addq	%r12, %rax
    00000121: 	je	.Ltmp838 # Offset: 289
    00000123: 	testq	%rbp, %rbp
    00000126: 	je	.Ltmp839 # Offset: 294
.Ltmp838:
    0000012c: 	movq	%r12, 0x30(%rsp)
    00000131: 	cmpq	$0xf, %r12
    00000135: 	ja	.Ltmp840 # Offset: 309
    0000013b: 	cmpq	$0x1, %r12
    0000013f: 	jne	.Ltmp841 # Offset: 319
    00000145: 	movzbl	(%rbp), %eax
    00000149: 	movb	%al, 0x10(%rbx)
.Ltmp844:
    0000014c: 	movq	%r12, 0x8(%rbx)
    00000150: 	movb	$0x0, (%rdi,%r12)
    00000155: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000015c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000163: 	addq	$0x20, %rax
    00000167: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000016e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000175: 	je	.Ltmp842 # Offset: 373
.Ltmp845:
    0000017b: 	movq	-0x20(%rax), %rbp
    0000017f: 	callq	clock@PLT # Offset: 383
    00000184: 	movq	%rax, end_time(%rip)
    0000018b: 	movq	0x38(%rsp), %rdx
    00000190: 	subq	%fs:0x28, %rdx
    00000199: 	jne	.Ltmp843 # Offset: 409
    0000019f: 	subq	start_time(%rip), %rax
    000001a6: 	pxor	%xmm0, %xmm0
    000001aa: 	movq	%rbp, %rdi
    000001ad: 	cvtsi2sd	%rax, %xmm0
    000001b2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001ba: 	addq	$0x48, %rsp
    000001be: 	popq	%rbx
    000001bf: 	popq	%rbp
    000001c0: 	popq	%r12
    000001c2: 	popq	%r13
    000001c4: 	popq	%r14
    000001c6: 	popq	%r15
    000001c8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 456
    000001cd: 	nopl	(%rax) # Size: 3
.Ltmp835:
    000001d0: 	movq	(%r14), %rdx
    000001d3: 	xorl	%eax, %eax
    000001d5: 	movq	%r15, %rsi
    000001d8: 	movl	$0x1, %edi
    000001dd: 	addl	$0x1, %r13d
    000001e1: 	callq	__printf_chk@PLT # Offset: 481
    000001e6: 	cmpl	%r13d, iterations(%rip)
    000001ed: 	jg	.Ltmp836 # Offset: 493
    000001f3: 	jmp	.Ltmp830 # Offset: 499
    000001f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp831:
    00000200: 	fldt	0x20(%rsp)
    00000204: 	fldz
    00000206: 	fsubp	%st, %st(1)
    00000208: 	fstpl	(%rsp)
    0000020b: 	jmp	.Ltmp834 # Offset: 523
.Ltmp840:
    00000210: 	movq	%rbx, %rdi
    00000213: 	leaq	0x30(%rsp), %rsi
    00000218: 	xorl	%edx, %edx
    0000021a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 538
    0000021f: 	movq	%rax, (%rbx)
    00000222: 	movq	%rax, %rdi
    00000225: 	movq	0x30(%rsp), %rax
    0000022a: 	movq	%rax, 0x10(%rbx)
.Ltmp846:
    0000022e: 	movq	%r12, %rdx
    00000231: 	movq	%rbp, %rsi
    00000234: 	callq	memcpy@PLT # Offset: 564
    00000239: 	movq	0x30(%rsp), %r12
    0000023e: 	movq	(%rbx), %rdi
    00000241: 	jmp	.Ltmp844 # Offset: 577
.Ltmp837:
    00000246: 	movq	%r14, %rsi
    00000249: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000250: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 592
    00000255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000025c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000263: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000026a: 	jne	.Ltmp845 # Offset: 618
.Ltmp842:
    00000270: 	movq	-0x8(%rdx), %rax
    00000274: 	addq	$0x200, %rax
    0000027a: 	jmp	.Ltmp845 # Offset: 634
.Ltmp841:
    0000027f: 	testq	%r12, %r12
    00000282: 	je	.Ltmp844 # Offset: 642
    00000288: 	jmp	.Ltmp846 # Offset: 648
.Ltmp843:
    0000028a: 	callq	__stack_chk_fail@PLT # Offset: 650
.Ltmp839:
    0000028f: 	leaq	DATAat0x3d158(%rip), %rdi
    00000296: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 662
DWARF CFI Instructions:
    <empty>
End of Function "_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/simple_types_loop_invariant.cpp/1
  Number      : 139
  State       : disassembled
  Address     : 0xa970
  Size        : 0x2b8
  MaxSize     : 0x2c0
  Offset      : 0xa970
  Section     : .text
  Orc Section : .local.text._Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0138:
    00000000: 	pushq	%r13
    00000002: 	movl	%esi, %r13d
    00000005: 	pushq	%r12
    00000007: 	movq	%rcx, %r12
    0000000a: 	pushq	%rbp
    0000000b: 	movq	%rdx, %rbp
    0000000e: 	pushq	%rbx
    0000000f: 	movl	%edi, %ebx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	%fs:0x28, %rax
    0000001e: 	movq	%rax, 0x18(%rsp)
    00000023: 	xorl	%eax, %eax
    00000025: 	callq	clock@PLT # Offset: 37
    0000002a: 	pxor	%xmm1, %xmm1
    0000002e: 	cvtsi2sd	%r13d, %xmm1
    00000033: 	movq	%rax, start_time(%rip)
    0000003a: 	movapd	%xmm1, %xmm0
    0000003e: 	movsd	%xmm1, 0x8(%rsp)
    00000044: 	callq	*%rbp # Offset: 68
    00000046: 	movsd	0x8(%rsp), %xmm1
    0000004c: 	movsd	%xmm0, (%rsp)
    00000051: 	movapd	%xmm1, %xmm0
    00000055: 	callq	*%rbp # Offset: 85
    00000057: 	movl	iterations(%rip), %edx
    0000005d: 	movsd	(%rsp), %xmm2
    00000062: 	mulsd	DATAat0x3d6f8(%rip), %xmm0
    0000006a: 	testl	%edx, %edx
    0000006c: 	jle	.Ltmp847 # Offset: 108
    0000006e: 	movq	DATAat0x3d710(%rip), %xmm4
    00000076: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    0000007e: 	xorl	%ebp, %ebp
    00000080: 	pxor	%xmm6, %xmm6
    00000084: 	leaq	DATAat0x3d1c8(%rip), %r13
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp852:
    00000090: 	xorl	%eax, %eax
    00000092: 	movapd	%xmm6, %xmm1
    00000096: 	testl	%ebx, %ebx
    00000098: 	jle	.Ltmp848 # Offset: 152
    0000009e: 	nop # Size: 2
.Ltmp849:
    000000a0: 	addl	$0x1, %eax
    000000a3: 	addsd	%xmm2, %xmm1
    000000a7: 	cmpl	%ebx, %eax
    000000a9: 	jne	.Ltmp849 # Offset: 169
    000000ab: 	movapd	%xmm1, %xmm5
    000000af: 	movapd	%xmm1, %xmm3
    000000b3: 	andpd	%xmm4, %xmm5
    000000b7: 	comisd	DATAat0x3d6e0(%rip), %xmm5
    000000bf: 	subsd	%xmm0, %xmm3
    000000c3: 	jbe	.Ltmp850 # Offset: 195
    000000c5: 	divsd	%xmm1, %xmm3
.Ltmp850:
    000000c9: 	andpd	%xmm4, %xmm3
    000000cd: 	comisd	%xmm3, %xmm7
    000000d1: 	jbe	.Ltmp851 # Offset: 209
    000000d7: 	addl	$0x1, %ebp
    000000da: 	cmpl	%edx, %ebp
    000000dc: 	jl	.Ltmp852 # Offset: 220
.Ltmp847:
    000000de: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000ec: 	subq	$0x20, %rax
    000000f0: 	cmpq	%rax, %rbx
    000000f3: 	je	.Ltmp853 # Offset: 243
    000000f9: 	leaq	0x10(%rbx), %rdi
    000000fd: 	movq	%rdi, (%rbx)
    00000100: 	movq	(%r12), %rbp
    00000104: 	movq	0x8(%r12), %r12
    00000109: 	movq	%rbp, %rax
    0000010c: 	addq	%r12, %rax
    0000010f: 	je	.Ltmp854 # Offset: 271
    00000111: 	testq	%rbp, %rbp
    00000114: 	je	.Ltmp855 # Offset: 276
.Ltmp854:
    0000011a: 	movq	%r12, 0x10(%rsp)
    0000011f: 	cmpq	$0xf, %r12
    00000123: 	ja	.Ltmp856 # Offset: 291
    00000129: 	cmpq	$0x1, %r12
    0000012d: 	jne	.Ltmp857 # Offset: 301
    00000133: 	movzbl	(%rbp), %eax
    00000137: 	movb	%al, 0x10(%rbx)
.Ltmp860:
    0000013a: 	movq	%r12, 0x8(%rbx)
    0000013e: 	movb	$0x0, (%rdi,%r12)
    00000143: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000014a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000151: 	addq	$0x20, %rax
    00000155: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000015c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000163: 	je	.Ltmp858 # Offset: 355
.Ltmp861:
    00000169: 	movq	-0x20(%rax), %rbp
    0000016d: 	callq	clock@PLT # Offset: 365
    00000172: 	movq	%rax, end_time(%rip)
    00000179: 	movq	0x18(%rsp), %rdx
    0000017e: 	subq	%fs:0x28, %rdx
    00000187: 	jne	.Ltmp859 # Offset: 391
    0000018d: 	subq	start_time(%rip), %rax
    00000194: 	pxor	%xmm0, %xmm0
    00000198: 	movq	%rbp, %rdi
    0000019b: 	cvtsi2sd	%rax, %xmm0
    000001a0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000001a8: 	addq	$0x28, %rsp
    000001ac: 	popq	%rbx
    000001ad: 	popq	%rbp
    000001ae: 	popq	%r12
    000001b0: 	popq	%r13
    000001b2: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 434
    000001b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp851:
    000001c0: 	movq	(%r12), %rdx
    000001c4: 	xorl	%eax, %eax
    000001c6: 	movq	%r13, %rsi
    000001c9: 	movl	$0x1, %edi
    000001ce: 	movsd	%xmm0, 0x8(%rsp)
    000001d4: 	addl	$0x1, %ebp
    000001d7: 	movsd	%xmm2, (%rsp)
    000001dc: 	callq	__printf_chk@PLT # Offset: 476
    000001e1: 	movl	iterations(%rip), %edx
    000001e7: 	movsd	(%rsp), %xmm2
    000001ec: 	pxor	%xmm6, %xmm6
    000001f0: 	movq	DATAat0x3d6e8(%rip), %rax
    000001f7: 	movsd	0x8(%rsp), %xmm0
    000001fd: 	cmpl	%ebp, %edx
    000001ff: 	movq	DATAat0x3d710(%rip), %xmm4
    00000207: 	movq	%rax, %xmm7
    0000020c: 	jle	.Ltmp847 # Offset: 524
    00000212: 	xorl	%eax, %eax
    00000214: 	movapd	%xmm6, %xmm1
    00000218: 	testl	%ebx, %ebx
    0000021a: 	jg	.Ltmp849 # Offset: 538
.Ltmp848:
    00000220: 	movapd	%xmm6, %xmm3
    00000224: 	subsd	%xmm0, %xmm3
    00000228: 	jmp	.Ltmp850 # Offset: 552
.Ltmp856:
    0000022d: 	movq	%rbx, %rdi
    00000230: 	leaq	0x10(%rsp), %rsi
    00000235: 	xorl	%edx, %edx
    00000237: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 567
    0000023c: 	movq	%rax, (%rbx)
    0000023f: 	movq	%rax, %rdi
    00000242: 	movq	0x10(%rsp), %rax
    00000247: 	movq	%rax, 0x10(%rbx)
.Ltmp862:
    0000024b: 	movq	%r12, %rdx
    0000024e: 	movq	%rbp, %rsi
    00000251: 	callq	memcpy@PLT # Offset: 593
    00000256: 	movq	0x10(%rsp), %r12
    0000025b: 	movq	(%rbx), %rdi
    0000025e: 	jmp	.Ltmp860 # Offset: 606
.Ltmp853:
    00000263: 	movq	%r12, %rsi
    00000266: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000026d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 621
    00000272: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000279: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000280: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000287: 	jne	.Ltmp861 # Offset: 647
.Ltmp858:
    0000028d: 	movq	-0x8(%rdx), %rax
    00000291: 	addq	$0x200, %rax
    00000297: 	jmp	.Ltmp861 # Offset: 663
.Ltmp857:
    0000029c: 	testq	%r12, %r12
    0000029f: 	je	.Ltmp860 # Offset: 671
    000002a5: 	jmp	.Ltmp862 # Offset: 677
.Ltmp859:
    000002a7: 	callq	__stack_chk_fail@PLT # Offset: 679
.Ltmp855:
    000002ac: 	leaq	DATAat0x3d158(%rip), %rdi
    000002b3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 691
DWARF CFI Instructions:
    <empty>
End of Function "_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_Z20TestLoopsIntegerOnlyIaENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 140
  State       : disassembled
  Address     : 0xac30
  Size        : 0x1d42
  MaxSize     : 0x1d50
  Offset      : 0xac30
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIaENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0139:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0xa8, %rsp
    0000001e: 	movl	%esi, 0x28(%rsp)
    00000022: 	leaq	0x70(%rsp), %rdi
    00000027: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000002e: 	movl	%edx, 0x2c(%rsp)
    00000032: 	movl	$0x745f, %edx
    00000037: 	movl	%ecx, 0x30(%rsp)
    0000003b: 	movl	%r8d, 0x34(%rsp)
    00000040: 	movb	%cl, 0x16(%rsp)
    00000044: 	movb	%r8b, 0x17(%rsp)
    00000049: 	movq	%fs:0x28, %rax
    00000052: 	movq	%rax, 0x98(%rsp)
    0000005a: 	xorl	%eax, %eax
    0000005c: 	leaq	0x60(%rsp), %rax
    00000061: 	movw	%dx, 0x84(%rsp)
    00000069: 	movl	$0xd, %edx
    0000006e: 	movq	%rax, 0x38(%rsp)
    00000073: 	movq	%rax, 0x50(%rsp)
    00000078: 	movl	$0x745f, %eax
    0000007d: 	movw	%ax, 0x64(%rsp)
    00000082: 	leaq	0x80(%rsp), %rax
    0000008a: 	movl	$0x38746e69, 0x60(%rsp)
    00000092: 	movq	$0x6, 0x58(%rsp)
    0000009b: 	movb	$0x0, 0x66(%rsp)
    000000a0: 	movq	%rdi, 0x20(%rsp)
    000000a5: 	movq	%rax, 0x18(%rsp)
    000000aa: 	movq	%rax, 0x70(%rsp)
    000000af: 	movl	$0x38746e69, 0x80(%rsp)
    000000ba: 	movq	$0x6, 0x78(%rsp)
    000000c3: 	movb	$0x0, 0x86(%rsp)
    000000cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 203
    000000d0: 	callq	clock@PLT # Offset: 208
    000000d5: 	movl	iterations(%rip), %ecx
    000000db: 	xorl	%r13d, %r13d
    000000de: 	leaq	0x1f40(%rbp), %rbx
    000000e5: 	movq	%rax, start_time(%rip)
    000000ec: 	testl	%ecx, %ecx
    000000ee: 	jle	.Ltmp863 # Offset: 238
    000000f4: 	movd	%r12d, %xmm0
    000000f9: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000100: 	punpcklbw	%xmm0, %xmm0
    00000104: 	punpcklwd	%xmm0, %xmm0
    00000108: 	pshufd	$0x0, %xmm0, %xmm3
    0000010d: 	movaps	%xmm3, (%rsp)
    00000111: 	nopl	(%rax) # Size: 7
.Ltmp866:
    00000118: 	movq	%rbp, %rax
    0000011b: 	pxor	%xmm1, %xmm1
    0000011f: 	nop # Size: 1
.Ltmp864:
    00000120: 	movdqu	(%rax), %xmm0
    00000124: 	pand	(%rsp), %xmm0
    00000129: 	addq	$0x10, %rax
    0000012d: 	paddb	%xmm0, %xmm1
    00000131: 	cmpq	%rbx, %rax
    00000134: 	jne	.Ltmp864 # Offset: 308
    00000136: 	cvttsd2si	init_value(%rip), %edx
    0000013e: 	movdqa	%xmm1, %xmm0
    00000142: 	psrldq	$0x8, %xmm0
    00000147: 	paddb	%xmm0, %xmm1
    0000014b: 	pxor	%xmm0, %xmm0
    0000014f: 	psadbw	%xmm0, %xmm1
    00000153: 	andl	%r12d, %edx
    00000156: 	movd	%xmm1, %eax
    0000015a: 	shll	$0x6, %edx
    0000015d: 	cmpb	%al, %dl
    0000015f: 	je	.Ltmp865 # Offset: 351
    00000161: 	movl	current_test(%rip), %edx
    00000167: 	movq	%r14, %rsi
    0000016a: 	movl	$0x1, %edi
    0000016f: 	xorl	%eax, %eax
    00000171: 	callq	__printf_chk@PLT # Offset: 369
    00000176: 	movl	iterations(%rip), %ecx
.Ltmp865:
    0000017c: 	addl	$0x1, %r13d
    00000180: 	cmpl	%ecx, %r13d
    00000183: 	jl	.Ltmp866 # Offset: 387
.Ltmp863:
    00000185: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000018c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000193: 	subq	$0x20, %rax
    00000197: 	cmpq	%rax, %rbx
    0000019a: 	je	.Ltmp867 # Offset: 410
    000001a0: 	leaq	0x10(%rbx), %rdi
    000001a4: 	movq	0x78(%rsp), %r13
    000001a9: 	movq	%rdi, (%rbx)
    000001ac: 	movq	0x70(%rsp), %r14
    000001b1: 	movq	%r14, %rax
    000001b4: 	addq	%r13, %rax
    000001b7: 	je	.Ltmp868 # Offset: 439
    000001b9: 	testq	%r14, %r14
    000001bc: 	je	.Ltmp869 # Offset: 444
.Ltmp868:
    000001c2: 	movq	%r13, 0x48(%rsp)
    000001c7: 	cmpq	$0xf, %r13
    000001cb: 	ja	.Ltmp870 # Offset: 459
    000001d1: 	cmpq	$0x1, %r13
    000001d5: 	jne	.Ltmp871 # Offset: 469
    000001db: 	movzbl	(%r14), %eax
    000001df: 	movb	%al, 0x10(%rbx)
.Ltmp1004:
    000001e2: 	movq	%r13, 0x8(%rbx)
    000001e6: 	movb	$0x0, (%rdi,%r13)
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f9: 	addq	$0x20, %rax
    000001fd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000204: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000020b: 	je	.Ltmp872 # Offset: 523
.Ltmp1030:
    00000211: 	movq	-0x20(%rax), %r13
    00000215: 	callq	clock@PLT # Offset: 533
    0000021a: 	pxor	%xmm0, %xmm0
    0000021e: 	movq	%rax, end_time(%rip)
    00000225: 	movq	%r13, %rdi
    00000228: 	subq	start_time(%rip), %rax
    0000022f: 	cvtsi2sd	%rax, %xmm0
    00000234: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000023c: 	callq	_Z13record_resultdPKc # Offset: 572
    00000241: 	movq	0x70(%rsp), %rdi
    00000246: 	cmpq	0x18(%rsp), %rdi
    0000024b: 	je	.Ltmp873 # Offset: 587
    0000024d: 	movq	0x80(%rsp), %rax
    00000255: 	leaq	0x1(%rax), %rsi
    00000259: 	callq	_ZdlPvm@PLT # Offset: 601
.Ltmp873:
    0000025e: 	movq	0x18(%rsp), %rax
    00000263: 	movq	0x50(%rsp), %r14
    00000268: 	movq	0x58(%rsp), %r13
    0000026d: 	movq	%rax, 0x70(%rsp)
    00000272: 	movq	%r14, %rax
    00000275: 	addq	%r13, %rax
    00000278: 	je	.Ltmp874 # Offset: 632
    0000027a: 	testq	%r14, %r14
    0000027d: 	je	.Ltmp875 # Offset: 637
.Ltmp874:
    00000283: 	movq	%r13, 0x48(%rsp)
    00000288: 	cmpq	$0xf, %r13
    0000028c: 	ja	.Ltmp876 # Offset: 652
    00000292: 	cmpq	$0x1, %r13
    00000296: 	jne	.Ltmp877 # Offset: 662
    0000029c: 	movzbl	(%r14), %eax
    000002a0: 	movb	%al, 0x80(%rsp)
    000002a7: 	movq	0x18(%rsp), %rax
.Ltmp1016:
    000002ac: 	movq	%r13, 0x78(%rsp)
    000002b1: 	movb	$0x0, (%rax,%r13)
    000002b6: 	movabsq	$0x3fffffffffffffff, %rax
    000002c0: 	subq	0x78(%rsp), %rax
    000002c5: 	cmpq	$0x15, %rax
    000002c9: 	jbe	.Ltmp878 # Offset: 713
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	movl	$0x16, %edx
    000002d9: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002e0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 736
    000002e5: 	callq	clock@PLT # Offset: 741
    000002ea: 	movl	iterations(%rip), %ecx
    000002f0: 	movq	%rax, start_time(%rip)
    000002f7: 	testl	%ecx, %ecx
    000002f9: 	jle	.Ltmp879 # Offset: 761
    000002ff: 	movzbl	0x30(%rsp), %eax
    00000304: 	andb	0x2c(%rsp), %al
    00000308: 	xorl	%r13d, %r13d
    0000030b: 	leaq	0x1f40(%rbp), %rbx
    00000312: 	andb	0x34(%rsp), %al
    00000316: 	andb	0x28(%rsp), %al
    0000031a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000321: 	movd	%eax, %xmm0
    00000325: 	punpcklbw	%xmm0, %xmm0
    00000329: 	punpcklwd	%xmm0, %xmm0
    0000032d: 	pshufd	$0x0, %xmm0, %xmm4
    00000332: 	movaps	%xmm4, (%rsp)
    00000336: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp882:
    00000340: 	movq	%rbp, %rax
    00000343: 	pxor	%xmm1, %xmm1
    00000347: 	nopw	(%rax,%rax) # Size: 9
.Ltmp880:
    00000350: 	movdqu	(%rax), %xmm0
    00000354: 	pand	(%rsp), %xmm0
    00000359: 	addq	$0x10, %rax
    0000035d: 	paddb	%xmm0, %xmm1
    00000361: 	cmpq	%rax, %rbx
    00000364: 	jne	.Ltmp880 # Offset: 868
    00000366: 	cvttsd2si	init_value(%rip), %edx
    0000036e: 	movdqa	%xmm1, %xmm0
    00000372: 	psrldq	$0x8, %xmm0
    00000377: 	paddb	%xmm0, %xmm1
    0000037b: 	pxor	%xmm0, %xmm0
    0000037f: 	psadbw	%xmm0, %xmm1
    00000383: 	andl	%r15d, %edx
    00000386: 	andb	0x16(%rsp), %dl
    0000038a: 	movd	%xmm1, %eax
    0000038e: 	andb	0x17(%rsp), %dl
    00000392: 	andl	%r12d, %edx
    00000395: 	shll	$0x6, %edx
    00000398: 	cmpb	%al, %dl
    0000039a: 	je	.Ltmp881 # Offset: 922
    0000039c: 	movl	current_test(%rip), %edx
    000003a2: 	movq	%r14, %rsi
    000003a5: 	movl	$0x1, %edi
    000003aa: 	xorl	%eax, %eax
    000003ac: 	callq	__printf_chk@PLT # Offset: 940
    000003b1: 	movl	iterations(%rip), %ecx
.Ltmp881:
    000003b7: 	addl	$0x1, %r13d
    000003bb: 	cmpl	%ecx, %r13d
    000003be: 	jl	.Ltmp882 # Offset: 958
.Ltmp879:
    000003c0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003ce: 	subq	$0x20, %rax
    000003d2: 	cmpq	%rax, %rbx
    000003d5: 	je	.Ltmp883 # Offset: 981
    000003db: 	leaq	0x10(%rbx), %rdi
    000003df: 	movq	0x78(%rsp), %r13
    000003e4: 	movq	%rdi, (%rbx)
    000003e7: 	movq	0x70(%rsp), %r14
    000003ec: 	movq	%r14, %rax
    000003ef: 	addq	%r13, %rax
    000003f2: 	je	.Ltmp884 # Offset: 1010
    000003f4: 	testq	%r14, %r14
    000003f7: 	je	.Ltmp885 # Offset: 1015
.Ltmp884:
    000003fd: 	movq	%r13, 0x48(%rsp)
    00000402: 	cmpq	$0xf, %r13
    00000406: 	ja	.Ltmp886 # Offset: 1030
    0000040c: 	cmpq	$0x1, %r13
    00000410: 	jne	.Ltmp887 # Offset: 1040
    00000416: 	movzbl	(%r14), %eax
    0000041a: 	movb	%al, 0x10(%rbx)
.Ltmp1040:
    0000041d: 	movq	%r13, 0x8(%rbx)
    00000421: 	movb	$0x0, (%rdi,%r13)
    00000426: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000042d: 	addq	$0x20, %rax
    00000431: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1032:
    00000438: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000043f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000446: 	je	.Ltmp888 # Offset: 1094
.Ltmp1027:
    0000044c: 	movq	-0x20(%rax), %r13
    00000450: 	callq	clock@PLT # Offset: 1104
    00000455: 	pxor	%xmm0, %xmm0
    00000459: 	movq	%rax, end_time(%rip)
    00000460: 	movq	%r13, %rdi
    00000463: 	subq	start_time(%rip), %rax
    0000046a: 	cvtsi2sd	%rax, %xmm0
    0000046f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000477: 	callq	_Z13record_resultdPKc # Offset: 1143
    0000047c: 	movq	0x70(%rsp), %rdi
    00000481: 	cmpq	0x18(%rsp), %rdi
    00000486: 	je	.Ltmp889 # Offset: 1158
    00000488: 	movq	0x80(%rsp), %rax
    00000490: 	leaq	0x1(%rax), %rsi
    00000494: 	callq	_ZdlPvm@PLT # Offset: 1172
.Ltmp889:
    00000499: 	movq	0x18(%rsp), %rax
    0000049e: 	movq	0x50(%rsp), %r14
    000004a3: 	movq	0x58(%rsp), %r13
    000004a8: 	movq	%rax, 0x70(%rsp)
    000004ad: 	movq	%r14, %rax
    000004b0: 	addq	%r13, %rax
    000004b3: 	je	.Ltmp890 # Offset: 1203
    000004b5: 	testq	%r14, %r14
    000004b8: 	je	.Ltmp891 # Offset: 1208
.Ltmp890:
    000004be: 	movq	%r13, 0x48(%rsp)
    000004c3: 	cmpq	$0xf, %r13
    000004c7: 	ja	.Ltmp892 # Offset: 1223
    000004cd: 	cmpq	$0x1, %r13
    000004d1: 	jne	.Ltmp893 # Offset: 1233
    000004d7: 	movzbl	(%r14), %eax
    000004db: 	movb	%al, 0x80(%rsp)
    000004e2: 	movq	0x18(%rsp), %rax
.Ltmp1014:
    000004e7: 	movq	%r13, 0x78(%rsp)
    000004ec: 	movb	$0x0, (%rax,%r13)
    000004f1: 	movabsq	$0x3fffffffffffffff, %rax
    000004fb: 	subq	0x78(%rsp), %rax
    00000500: 	cmpq	$0x16, %rax
    00000504: 	jbe	.Ltmp894 # Offset: 1284
    0000050a: 	movq	0x20(%rsp), %rdi
    0000050f: 	movl	$0x17, %edx
    00000514: 	leaq	DATAat0x3d1ff(%rip), %rsi
    0000051b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1307
    00000520: 	callq	clock@PLT # Offset: 1312
    00000525: 	movl	iterations(%rip), %ecx
    0000052b: 	movq	%rax, start_time(%rip)
    00000532: 	testl	%ecx, %ecx
    00000534: 	jle	.Ltmp895 # Offset: 1332
    0000053a: 	movzbl	0x30(%rsp), %r14d
    00000540: 	andb	0x2c(%rsp), %r14b
    00000545: 	xorl	%r13d, %r13d
    00000548: 	leaq	0x1f40(%rbp), %rbx
    0000054f: 	andb	0x34(%rsp), %r14b
    00000554: 	andb	0x28(%rsp), %r14b
    00000559: 	movd	%r14d, %xmm0
    0000055e: 	punpcklbw	%xmm0, %xmm0
    00000562: 	punpcklwd	%xmm0, %xmm0
    00000566: 	pshufd	$0x0, %xmm0, %xmm2
    0000056b: 	movaps	%xmm2, (%rsp)
    0000056f: 	nop # Size: 1
.Ltmp898:
    00000570: 	movq	%rbp, %rax
    00000573: 	pxor	%xmm1, %xmm1
    00000577: 	nopw	(%rax,%rax) # Size: 9
.Ltmp896:
    00000580: 	movdqu	(%rax), %xmm0
    00000584: 	pand	(%rsp), %xmm0
    00000589: 	addq	$0x10, %rax
    0000058d: 	paddb	%xmm0, %xmm1
    00000591: 	cmpq	%rbx, %rax
    00000594: 	jne	.Ltmp896 # Offset: 1428
    00000596: 	cvttsd2si	init_value(%rip), %edx
    0000059e: 	movdqa	%xmm1, %xmm0
    000005a2: 	psrldq	$0x8, %xmm0
    000005a7: 	paddb	%xmm0, %xmm1
    000005ab: 	pxor	%xmm0, %xmm0
    000005af: 	psadbw	%xmm0, %xmm1
    000005b3: 	andl	%r14d, %edx
    000005b6: 	movd	%xmm1, %eax
    000005ba: 	shll	$0x6, %edx
    000005bd: 	cmpb	%al, %dl
    000005bf: 	je	.Ltmp897 # Offset: 1471
    000005c1: 	movl	current_test(%rip), %edx
    000005c7: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000005ce: 	movl	$0x1, %edi
    000005d3: 	xorl	%eax, %eax
    000005d5: 	callq	__printf_chk@PLT # Offset: 1493
    000005da: 	movl	iterations(%rip), %ecx
.Ltmp897:
    000005e0: 	addl	$0x1, %r13d
    000005e4: 	cmpl	%ecx, %r13d
    000005e7: 	jl	.Ltmp898 # Offset: 1511
.Ltmp895:
    000005e9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000005f7: 	subq	$0x20, %rax
    000005fb: 	cmpq	%rax, %rbx
    000005fe: 	je	.Ltmp899 # Offset: 1534
    00000604: 	leaq	0x10(%rbx), %rdi
    00000608: 	movq	0x78(%rsp), %r13
    0000060d: 	movq	%rdi, (%rbx)
    00000610: 	movq	0x70(%rsp), %r14
    00000615: 	movq	%r14, %rax
    00000618: 	addq	%r13, %rax
    0000061b: 	je	.Ltmp900 # Offset: 1563
    0000061d: 	testq	%r14, %r14
    00000620: 	je	.Ltmp901 # Offset: 1568
.Ltmp900:
    00000626: 	movq	%r13, 0x48(%rsp)
    0000062b: 	cmpq	$0xf, %r13
    0000062f: 	ja	.Ltmp902 # Offset: 1583
    00000635: 	cmpq	$0x1, %r13
    00000639: 	jne	.Ltmp903 # Offset: 1593
    0000063f: 	movzbl	(%r14), %eax
    00000643: 	movb	%al, 0x10(%rbx)
.Ltmp1035:
    00000646: 	movq	%r13, 0x8(%rbx)
    0000064a: 	movb	$0x0, (%rdi,%r13)
    0000064f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000656: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000065d: 	addq	$0x20, %rax
    00000661: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000668: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000066f: 	je	.Ltmp904 # Offset: 1647
.Ltmp1029:
    00000675: 	movq	-0x20(%rax), %r13
    00000679: 	callq	clock@PLT # Offset: 1657
    0000067e: 	pxor	%xmm0, %xmm0
    00000682: 	movq	%rax, end_time(%rip)
    00000689: 	movq	%r13, %rdi
    0000068c: 	subq	start_time(%rip), %rax
    00000693: 	cvtsi2sd	%rax, %xmm0
    00000698: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006a0: 	callq	_Z13record_resultdPKc # Offset: 1696
    000006a5: 	movq	0x70(%rsp), %rdi
    000006aa: 	cmpq	0x18(%rsp), %rdi
    000006af: 	je	.Ltmp905 # Offset: 1711
    000006b1: 	movq	0x80(%rsp), %rax
    000006b9: 	leaq	0x1(%rax), %rsi
    000006bd: 	callq	_ZdlPvm@PLT # Offset: 1725
.Ltmp905:
    000006c2: 	movq	0x18(%rsp), %rax
    000006c7: 	movq	0x50(%rsp), %r14
    000006cc: 	movq	0x58(%rsp), %r13
    000006d1: 	movq	%rax, 0x70(%rsp)
    000006d6: 	movq	%r14, %rax
    000006d9: 	addq	%r13, %rax
    000006dc: 	je	.Ltmp906 # Offset: 1756
    000006de: 	testq	%r14, %r14
    000006e1: 	je	.Ltmp907 # Offset: 1761
.Ltmp906:
    000006e7: 	movq	%r13, 0x48(%rsp)
    000006ec: 	cmpq	$0xf, %r13
    000006f0: 	ja	.Ltmp908 # Offset: 1776
    000006f6: 	cmpq	$0x1, %r13
    000006fa: 	jne	.Ltmp909 # Offset: 1786
    00000700: 	movzbl	(%r14), %eax
    00000704: 	movb	%al, 0x80(%rsp)
    0000070b: 	movq	0x18(%rsp), %rax
.Ltmp1020:
    00000710: 	movq	%r13, 0x78(%rsp)
    00000715: 	movb	$0x0, (%rax,%r13)
    0000071a: 	movabsq	$0x3fffffffffffffff, %rax
    00000724: 	subq	0x78(%rsp), %rax
    00000729: 	cmpq	$0xb, %rax
    0000072d: 	jbe	.Ltmp910 # Offset: 1837
    00000733: 	movq	0x20(%rsp), %rdi
    00000738: 	movl	$0xc, %edx
    0000073d: 	leaq	DATAat0x3d220(%rip), %rsi
    00000744: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1860
    00000749: 	callq	clock@PLT # Offset: 1865
    0000074e: 	movl	iterations(%rip), %ecx
    00000754: 	xorl	%r13d, %r13d
    00000757: 	leaq	0x1f40(%rbp), %rbx
    0000075e: 	movq	%rax, start_time(%rip)
    00000765: 	testl	%ecx, %ecx
    00000767: 	jle	.Ltmp911 # Offset: 1895
    0000076d: 	movd	%r12d, %xmm0
    00000772: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000779: 	punpcklbw	%xmm0, %xmm0
    0000077d: 	punpcklwd	%xmm0, %xmm0
    00000781: 	pshufd	$0x0, %xmm0, %xmm3
    00000786: 	movaps	%xmm3, (%rsp)
    0000078a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp914:
    00000790: 	movq	%rbp, %rax
    00000793: 	pxor	%xmm1, %xmm1
    00000797: 	nopw	(%rax,%rax) # Size: 9
.Ltmp912:
    000007a0: 	movdqu	(%rax), %xmm0
    000007a4: 	por	(%rsp), %xmm0
    000007a9: 	addq	$0x10, %rax
    000007ad: 	paddb	%xmm0, %xmm1
    000007b1: 	cmpq	%rbx, %rax
    000007b4: 	jne	.Ltmp912 # Offset: 1972
    000007b6: 	cvttsd2si	init_value(%rip), %edx
    000007be: 	movdqa	%xmm1, %xmm0
    000007c2: 	psrldq	$0x8, %xmm0
    000007c7: 	paddb	%xmm0, %xmm1
    000007cb: 	pxor	%xmm0, %xmm0
    000007cf: 	psadbw	%xmm0, %xmm1
    000007d3: 	orl	%r12d, %edx
    000007d6: 	movd	%xmm1, %eax
    000007da: 	shll	$0x6, %edx
    000007dd: 	cmpb	%al, %dl
    000007df: 	je	.Ltmp913 # Offset: 2015
    000007e1: 	movl	current_test(%rip), %edx
    000007e7: 	movq	%r14, %rsi
    000007ea: 	movl	$0x1, %edi
    000007ef: 	xorl	%eax, %eax
    000007f1: 	callq	__printf_chk@PLT # Offset: 2033
    000007f6: 	movl	iterations(%rip), %ecx
.Ltmp913:
    000007fc: 	addl	$0x1, %r13d
    00000800: 	cmpl	%ecx, %r13d
    00000803: 	jl	.Ltmp914 # Offset: 2051
.Ltmp911:
    00000805: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000080c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000813: 	subq	$0x20, %rax
    00000817: 	cmpq	%rax, %rbx
    0000081a: 	je	.Ltmp915 # Offset: 2074
    00000820: 	leaq	0x10(%rbx), %rdi
    00000824: 	movq	0x78(%rsp), %r13
    00000829: 	movq	%rdi, (%rbx)
    0000082c: 	movq	0x70(%rsp), %r14
    00000831: 	movq	%r14, %rax
    00000834: 	addq	%r13, %rax
    00000837: 	je	.Ltmp916 # Offset: 2103
    00000839: 	testq	%r14, %r14
    0000083c: 	je	.Ltmp917 # Offset: 2108
.Ltmp916:
    00000842: 	movq	%r13, 0x48(%rsp)
    00000847: 	cmpq	$0xf, %r13
    0000084b: 	ja	.Ltmp918 # Offset: 2123
    00000851: 	cmpq	$0x1, %r13
    00000855: 	jne	.Ltmp919 # Offset: 2133
    0000085b: 	movzbl	(%r14), %eax
    0000085f: 	movb	%al, 0x10(%rbx)
.Ltmp1046:
    00000862: 	movq	%r13, 0x8(%rbx)
    00000866: 	movb	$0x0, (%rdi,%r13)
    0000086b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000872: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000879: 	addq	$0x20, %rax
    0000087d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000884: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000088b: 	je	.Ltmp920 # Offset: 2187
.Ltmp1026:
    00000891: 	movq	-0x20(%rax), %r13
    00000895: 	callq	clock@PLT # Offset: 2197
    0000089a: 	pxor	%xmm0, %xmm0
    0000089e: 	movq	%rax, end_time(%rip)
    000008a5: 	movq	%r13, %rdi
    000008a8: 	subq	start_time(%rip), %rax
    000008af: 	cvtsi2sd	%rax, %xmm0
    000008b4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000008bc: 	callq	_Z13record_resultdPKc # Offset: 2236
    000008c1: 	movq	0x70(%rsp), %rdi
    000008c6: 	cmpq	0x18(%rsp), %rdi
    000008cb: 	je	.Ltmp921 # Offset: 2251
    000008cd: 	movq	0x80(%rsp), %rax
    000008d5: 	leaq	0x1(%rax), %rsi
    000008d9: 	callq	_ZdlPvm@PLT # Offset: 2265
.Ltmp921:
    000008de: 	movq	0x18(%rsp), %rax
    000008e3: 	movq	0x50(%rsp), %r14
    000008e8: 	movq	0x58(%rsp), %r13
    000008ed: 	movq	%rax, 0x70(%rsp)
    000008f2: 	movq	%r14, %rax
    000008f5: 	addq	%r13, %rax
    000008f8: 	je	.Ltmp922 # Offset: 2296
    000008fa: 	testq	%r14, %r14
    000008fd: 	je	.Ltmp923 # Offset: 2301
.Ltmp922:
    00000903: 	movq	%r13, 0x48(%rsp)
    00000908: 	cmpq	$0xf, %r13
    0000090c: 	ja	.Ltmp924 # Offset: 2316
    00000912: 	cmpq	$0x1, %r13
    00000916: 	jne	.Ltmp925 # Offset: 2326
    0000091c: 	movzbl	(%r14), %eax
    00000920: 	movb	%al, 0x80(%rsp)
    00000927: 	movq	0x18(%rsp), %rax
.Ltmp1018:
    0000092c: 	movq	%r13, 0x78(%rsp)
    00000931: 	movb	$0x0, (%rax,%r13)
    00000936: 	movabsq	$0x3fffffffffffffff, %rax
    00000940: 	subq	0x78(%rsp), %rax
    00000945: 	cmpq	$0x14, %rax
    00000949: 	jbe	.Ltmp926 # Offset: 2377
    0000094f: 	movq	0x20(%rsp), %rdi
    00000954: 	movl	$0x15, %edx
    00000959: 	leaq	DATAat0x3d217(%rip), %rsi
    00000960: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2400
    00000965: 	callq	clock@PLT # Offset: 2405
    0000096a: 	movl	iterations(%rip), %ecx
    00000970: 	movq	%rax, start_time(%rip)
    00000977: 	testl	%ecx, %ecx
    00000979: 	jle	.Ltmp927 # Offset: 2425
    0000097f: 	movzbl	0x30(%rsp), %eax
    00000984: 	orb	0x2c(%rsp), %al
    00000988: 	xorl	%r13d, %r13d
    0000098b: 	leaq	0x1f40(%rbp), %rbx
    00000992: 	orb	0x34(%rsp), %al
    00000996: 	orb	0x28(%rsp), %al
    0000099a: 	leaq	DATAat0x3d1d8(%rip), %r14
    000009a1: 	movd	%eax, %xmm0
    000009a5: 	punpcklbw	%xmm0, %xmm0
    000009a9: 	punpcklwd	%xmm0, %xmm0
    000009ad: 	pshufd	$0x0, %xmm0, %xmm4
    000009b2: 	movaps	%xmm4, (%rsp)
    000009b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp930:
    000009c0: 	movq	%rbp, %rax
    000009c3: 	pxor	%xmm1, %xmm1
    000009c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp928:
    000009d0: 	movdqu	(%rax), %xmm0
    000009d4: 	por	(%rsp), %xmm0
    000009d9: 	addq	$0x10, %rax
    000009dd: 	paddb	%xmm0, %xmm1
    000009e1: 	cmpq	%rbx, %rax
    000009e4: 	jne	.Ltmp928 # Offset: 2532
    000009e6: 	cvttsd2si	init_value(%rip), %edx
    000009ee: 	movdqa	%xmm1, %xmm0
    000009f2: 	psrldq	$0x8, %xmm0
    000009f7: 	paddb	%xmm0, %xmm1
    000009fb: 	pxor	%xmm0, %xmm0
    000009ff: 	psadbw	%xmm0, %xmm1
    00000a03: 	orl	%r15d, %edx
    00000a06: 	orb	0x16(%rsp), %dl
    00000a0a: 	movd	%xmm1, %eax
    00000a0e: 	orb	0x17(%rsp), %dl
    00000a12: 	orl	%r12d, %edx
    00000a15: 	shll	$0x6, %edx
    00000a18: 	cmpb	%al, %dl
    00000a1a: 	je	.Ltmp929 # Offset: 2586
    00000a1c: 	movl	current_test(%rip), %edx
    00000a22: 	movq	%r14, %rsi
    00000a25: 	movl	$0x1, %edi
    00000a2a: 	xorl	%eax, %eax
    00000a2c: 	callq	__printf_chk@PLT # Offset: 2604
    00000a31: 	movl	iterations(%rip), %ecx
.Ltmp929:
    00000a37: 	addl	$0x1, %r13d
    00000a3b: 	cmpl	%ecx, %r13d
    00000a3e: 	jl	.Ltmp930 # Offset: 2622
.Ltmp927:
    00000a40: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a47: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a4e: 	subq	$0x20, %rax
    00000a52: 	cmpq	%rax, %rbx
    00000a55: 	je	.Ltmp931 # Offset: 2645
    00000a5b: 	leaq	0x10(%rbx), %rdi
    00000a5f: 	movq	0x78(%rsp), %r13
    00000a64: 	movq	%rdi, (%rbx)
    00000a67: 	movq	0x70(%rsp), %r14
    00000a6c: 	movq	%r14, %rax
    00000a6f: 	addq	%r13, %rax
    00000a72: 	je	.Ltmp932 # Offset: 2674
    00000a74: 	testq	%r14, %r14
    00000a77: 	je	.Ltmp933 # Offset: 2679
.Ltmp932:
    00000a7d: 	movq	%r13, 0x48(%rsp)
    00000a82: 	cmpq	$0xf, %r13
    00000a86: 	ja	.Ltmp934 # Offset: 2694
    00000a8c: 	cmpq	$0x1, %r13
    00000a90: 	jne	.Ltmp935 # Offset: 2704
    00000a96: 	movzbl	(%r14), %eax
    00000a9a: 	movb	%al, 0x10(%rbx)
.Ltmp1037:
    00000a9d: 	movq	%r13, 0x8(%rbx)
    00000aa1: 	movb	$0x0, (%rdi,%r13)
    00000aa6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aad: 	addq	$0x20, %rax
    00000ab1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1033:
    00000ab8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000abf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ac6: 	je	.Ltmp936 # Offset: 2758
.Ltmp1031:
    00000acc: 	movq	-0x20(%rax), %r13
    00000ad0: 	callq	clock@PLT # Offset: 2768
    00000ad5: 	pxor	%xmm0, %xmm0
    00000ad9: 	movq	%rax, end_time(%rip)
    00000ae0: 	movq	%r13, %rdi
    00000ae3: 	subq	start_time(%rip), %rax
    00000aea: 	cvtsi2sd	%rax, %xmm0
    00000aef: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000af7: 	callq	_Z13record_resultdPKc # Offset: 2807
    00000afc: 	movq	0x70(%rsp), %rdi
    00000b01: 	cmpq	0x18(%rsp), %rdi
    00000b06: 	je	.Ltmp937 # Offset: 2822
    00000b08: 	movq	0x80(%rsp), %rax
    00000b10: 	leaq	0x1(%rax), %rsi
    00000b14: 	callq	_ZdlPvm@PLT # Offset: 2836
.Ltmp937:
    00000b19: 	movq	0x18(%rsp), %rax
    00000b1e: 	movq	0x50(%rsp), %r14
    00000b23: 	movq	0x58(%rsp), %r13
    00000b28: 	movq	%rax, 0x70(%rsp)
    00000b2d: 	movq	%r14, %rax
    00000b30: 	addq	%r13, %rax
    00000b33: 	je	.Ltmp938 # Offset: 2867
    00000b35: 	testq	%r14, %r14
    00000b38: 	je	.Ltmp939 # Offset: 2872
.Ltmp938:
    00000b3e: 	movq	%r13, 0x48(%rsp)
    00000b43: 	cmpq	$0xf, %r13
    00000b47: 	ja	.Ltmp940 # Offset: 2887
    00000b4d: 	cmpq	$0x1, %r13
    00000b51: 	jne	.Ltmp941 # Offset: 2897
    00000b57: 	movzbl	(%r14), %eax
    00000b5b: 	movb	%al, 0x80(%rsp)
    00000b62: 	movq	0x18(%rsp), %rax
.Ltmp1012:
    00000b67: 	movq	%r13, 0x78(%rsp)
    00000b6c: 	movb	$0x0, (%rax,%r13)
    00000b71: 	movabsq	$0x3fffffffffffffff, %rax
    00000b7b: 	subq	0x78(%rsp), %rax
    00000b80: 	cmpq	$0x15, %rax
    00000b84: 	jbe	.Ltmp942 # Offset: 2948
    00000b8a: 	movq	0x20(%rsp), %rdi
    00000b8f: 	movl	$0x16, %edx
    00000b94: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000b9b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2971
    00000ba0: 	callq	clock@PLT # Offset: 2976
    00000ba5: 	movl	iterations(%rip), %ecx
    00000bab: 	movq	%rax, start_time(%rip)
    00000bb2: 	testl	%ecx, %ecx
    00000bb4: 	jle	.Ltmp943 # Offset: 2996
    00000bba: 	movzbl	0x30(%rsp), %r14d
    00000bc0: 	orb	0x2c(%rsp), %r14b
    00000bc5: 	xorl	%r13d, %r13d
    00000bc8: 	leaq	0x1f40(%rbp), %rbx
    00000bcf: 	orb	0x34(%rsp), %r14b
    00000bd4: 	orb	0x28(%rsp), %r14b
    00000bd9: 	movd	%r14d, %xmm0
    00000bde: 	punpcklbw	%xmm0, %xmm0
    00000be2: 	punpcklwd	%xmm0, %xmm0
    00000be6: 	pshufd	$0x0, %xmm0, %xmm2
    00000beb: 	movaps	%xmm2, (%rsp)
    00000bef: 	nop # Size: 1
.Ltmp946:
    00000bf0: 	movq	%rbp, %rax
    00000bf3: 	pxor	%xmm1, %xmm1
    00000bf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp944:
    00000c00: 	movdqu	(%rax), %xmm0
    00000c04: 	por	(%rsp), %xmm0
    00000c09: 	addq	$0x10, %rax
    00000c0d: 	paddb	%xmm0, %xmm1
    00000c11: 	cmpq	%rbx, %rax
    00000c14: 	jne	.Ltmp944 # Offset: 3092
    00000c16: 	cvttsd2si	init_value(%rip), %edx
    00000c1e: 	movdqa	%xmm1, %xmm0
    00000c22: 	psrldq	$0x8, %xmm0
    00000c27: 	paddb	%xmm0, %xmm1
    00000c2b: 	pxor	%xmm0, %xmm0
    00000c2f: 	psadbw	%xmm0, %xmm1
    00000c33: 	orl	%r14d, %edx
    00000c36: 	movd	%xmm1, %eax
    00000c3a: 	shll	$0x6, %edx
    00000c3d: 	cmpb	%al, %dl
    00000c3f: 	je	.Ltmp945 # Offset: 3135
    00000c41: 	movl	current_test(%rip), %edx
    00000c47: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c4e: 	movl	$0x1, %edi
    00000c53: 	xorl	%eax, %eax
    00000c55: 	callq	__printf_chk@PLT # Offset: 3157
    00000c5a: 	movl	iterations(%rip), %ecx
.Ltmp945:
    00000c60: 	addl	$0x1, %r13d
    00000c64: 	cmpl	%ecx, %r13d
    00000c67: 	jl	.Ltmp946 # Offset: 3175
.Ltmp943:
    00000c69: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c70: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000c77: 	subq	$0x20, %rax
    00000c7b: 	cmpq	%rax, %rbx
    00000c7e: 	je	.Ltmp947 # Offset: 3198
    00000c84: 	leaq	0x10(%rbx), %rdi
    00000c88: 	movq	0x78(%rsp), %r13
    00000c8d: 	movq	%rdi, (%rbx)
    00000c90: 	movq	0x70(%rsp), %r14
    00000c95: 	movq	%r14, %rax
    00000c98: 	addq	%r13, %rax
    00000c9b: 	je	.Ltmp948 # Offset: 3227
    00000c9d: 	testq	%r14, %r14
    00000ca0: 	je	.Ltmp949 # Offset: 3232
.Ltmp948:
    00000ca6: 	movq	%r13, 0x48(%rsp)
    00000cab: 	cmpq	$0xf, %r13
    00000caf: 	ja	.Ltmp950 # Offset: 3247
    00000cb5: 	cmpq	$0x1, %r13
    00000cb9: 	jne	.Ltmp951 # Offset: 3257
    00000cbf: 	movzbl	(%r14), %eax
    00000cc3: 	movb	%al, 0x10(%rbx)
.Ltmp1044:
    00000cc6: 	movq	%r13, 0x8(%rbx)
    00000cca: 	movb	$0x0, (%rdi,%r13)
    00000ccf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cd6: 	addq	$0x20, %rax
    00000cda: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1028:
    00000ce1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ce8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cef: 	je	.Ltmp952 # Offset: 3311
.Ltmp1024:
    00000cf5: 	movq	-0x20(%rax), %r13
    00000cf9: 	callq	clock@PLT # Offset: 3321
    00000cfe: 	pxor	%xmm0, %xmm0
    00000d02: 	movq	%rax, end_time(%rip)
    00000d09: 	movq	%r13, %rdi
    00000d0c: 	subq	start_time(%rip), %rax
    00000d13: 	cvtsi2sd	%rax, %xmm0
    00000d18: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d20: 	callq	_Z13record_resultdPKc # Offset: 3360
    00000d25: 	movq	0x70(%rsp), %rdi
    00000d2a: 	cmpq	0x18(%rsp), %rdi
    00000d2f: 	je	.Ltmp953 # Offset: 3375
    00000d31: 	movq	0x80(%rsp), %rax
    00000d39: 	leaq	0x1(%rax), %rsi
    00000d3d: 	callq	_ZdlPvm@PLT # Offset: 3389
.Ltmp953:
    00000d42: 	movq	0x18(%rsp), %rax
    00000d47: 	movq	0x50(%rsp), %r14
    00000d4c: 	movq	0x58(%rsp), %r13
    00000d51: 	movq	%rax, 0x70(%rsp)
    00000d56: 	movq	%r14, %rax
    00000d59: 	addq	%r13, %rax
    00000d5c: 	je	.Ltmp954 # Offset: 3420
    00000d5e: 	testq	%r14, %r14
    00000d61: 	je	.Ltmp955 # Offset: 3425
.Ltmp954:
    00000d67: 	movq	%r13, 0x48(%rsp)
    00000d6c: 	cmpq	$0xf, %r13
    00000d70: 	ja	.Ltmp956 # Offset: 3440
    00000d76: 	cmpq	$0x1, %r13
    00000d7a: 	jne	.Ltmp957 # Offset: 3450
    00000d80: 	movzbl	(%r14), %eax
    00000d84: 	movb	%al, 0x80(%rsp)
    00000d8b: 	movq	0x18(%rsp), %rax
.Ltmp1010:
    00000d90: 	movq	%r13, 0x78(%rsp)
    00000d95: 	movb	$0x0, (%rax,%r13)
    00000d9a: 	movabsq	$0x3fffffffffffffff, %rax
    00000da4: 	subq	0x78(%rsp), %rax
    00000da9: 	cmpq	$0xc, %rax
    00000dad: 	jbe	.Ltmp958 # Offset: 3501
    00000db3: 	movq	0x20(%rsp), %rdi
    00000db8: 	movl	$0xd, %edx
    00000dbd: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000dc4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3524
    00000dc9: 	callq	clock@PLT # Offset: 3529
    00000dce: 	movl	iterations(%rip), %ecx
    00000dd4: 	xorl	%r13d, %r13d
    00000dd7: 	leaq	0x1f40(%rbp), %rbx
    00000dde: 	movq	%rax, start_time(%rip)
    00000de5: 	testl	%ecx, %ecx
    00000de7: 	jle	.Ltmp959 # Offset: 3559
    00000ded: 	movd	%r12d, %xmm0
    00000df2: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000df9: 	punpcklbw	%xmm0, %xmm0
    00000dfd: 	punpcklwd	%xmm0, %xmm0
    00000e01: 	pshufd	$0x0, %xmm0, %xmm3
    00000e06: 	movaps	%xmm3, (%rsp)
    00000e0a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp962:
    00000e10: 	movq	%rbp, %rax
    00000e13: 	pxor	%xmm1, %xmm1
    00000e17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp960:
    00000e20: 	movdqu	(%rax), %xmm0
    00000e24: 	pxor	(%rsp), %xmm0
    00000e29: 	addq	$0x10, %rax
    00000e2d: 	paddb	%xmm0, %xmm1
    00000e31: 	cmpq	%rax, %rbx
    00000e34: 	jne	.Ltmp960 # Offset: 3636
    00000e36: 	cvttsd2si	init_value(%rip), %edx
    00000e3e: 	movdqa	%xmm1, %xmm0
    00000e42: 	psrldq	$0x8, %xmm0
    00000e47: 	paddb	%xmm0, %xmm1
    00000e4b: 	pxor	%xmm0, %xmm0
    00000e4f: 	psadbw	%xmm0, %xmm1
    00000e53: 	xorl	%r12d, %edx
    00000e56: 	movd	%xmm1, %eax
    00000e5a: 	shll	$0x6, %edx
    00000e5d: 	cmpb	%al, %dl
    00000e5f: 	je	.Ltmp961 # Offset: 3679
    00000e61: 	movl	current_test(%rip), %edx
    00000e67: 	movq	%r14, %rsi
    00000e6a: 	movl	$0x1, %edi
    00000e6f: 	xorl	%eax, %eax
    00000e71: 	callq	__printf_chk@PLT # Offset: 3697
    00000e76: 	movl	iterations(%rip), %ecx
.Ltmp961:
    00000e7c: 	addl	$0x1, %r13d
    00000e80: 	cmpl	%ecx, %r13d
    00000e83: 	jl	.Ltmp962 # Offset: 3715
.Ltmp959:
    00000e85: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e93: 	subq	$0x20, %rax
    00000e97: 	cmpq	%rax, %rbx
    00000e9a: 	je	.Ltmp963 # Offset: 3738
    00000ea0: 	leaq	0x10(%rbx), %rdi
    00000ea4: 	movq	0x78(%rsp), %r13
    00000ea9: 	movq	%rdi, (%rbx)
    00000eac: 	movq	0x70(%rsp), %r14
    00000eb1: 	movq	%r14, %rax
    00000eb4: 	addq	%r13, %rax
    00000eb7: 	je	.Ltmp964 # Offset: 3767
    00000eb9: 	testq	%r14, %r14
    00000ebc: 	je	.Ltmp965 # Offset: 3772
.Ltmp964:
    00000ec2: 	movq	%r13, 0x48(%rsp)
    00000ec7: 	cmpq	$0xf, %r13
    00000ecb: 	ja	.Ltmp966 # Offset: 3787
    00000ed1: 	cmpq	$0x1, %r13
    00000ed5: 	jne	.Ltmp967 # Offset: 3797
    00000edb: 	movzbl	(%r14), %eax
    00000edf: 	movb	%al, 0x10(%rbx)
.Ltmp1038:
    00000ee2: 	movq	%r13, 0x8(%rbx)
    00000ee6: 	movb	$0x0, (%rdi,%r13)
    00000eeb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ef2: 	addq	$0x20, %rax
    00000ef6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1023:
    00000efd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f04: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f0b: 	je	.Ltmp968 # Offset: 3851
.Ltmp1021:
    00000f11: 	movq	-0x20(%rax), %r13
    00000f15: 	callq	clock@PLT # Offset: 3861
    00000f1a: 	pxor	%xmm0, %xmm0
    00000f1e: 	movq	%rax, end_time(%rip)
    00000f25: 	movq	%r13, %rdi
    00000f28: 	subq	start_time(%rip), %rax
    00000f2f: 	cvtsi2sd	%rax, %xmm0
    00000f34: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000f3c: 	callq	_Z13record_resultdPKc # Offset: 3900
    00000f41: 	movq	0x70(%rsp), %rdi
    00000f46: 	cmpq	0x18(%rsp), %rdi
    00000f4b: 	je	.Ltmp969 # Offset: 3915
    00000f4d: 	movq	0x80(%rsp), %rax
    00000f55: 	leaq	0x1(%rax), %rsi
    00000f59: 	callq	_ZdlPvm@PLT # Offset: 3929
.Ltmp969:
    00000f5e: 	movq	0x18(%rsp), %rax
    00000f63: 	movq	0x50(%rsp), %r14
    00000f68: 	movq	0x58(%rsp), %r13
    00000f6d: 	movq	%rax, 0x70(%rsp)
    00000f72: 	movq	%r14, %rax
    00000f75: 	addq	%r13, %rax
    00000f78: 	je	.Ltmp970 # Offset: 3960
    00000f7a: 	testq	%r14, %r14
    00000f7d: 	je	.Ltmp971 # Offset: 3965
.Ltmp970:
    00000f83: 	movq	%r13, 0x48(%rsp)
    00000f88: 	cmpq	$0xf, %r13
    00000f8c: 	ja	.Ltmp972 # Offset: 3980
    00000f92: 	cmpq	$0x1, %r13
    00000f96: 	jne	.Ltmp973 # Offset: 3990
    00000f9c: 	movzbl	(%r14), %eax
    00000fa0: 	movb	%al, 0x80(%rsp)
    00000fa7: 	movq	0x18(%rsp), %rax
.Ltmp1008:
    00000fac: 	movq	%r13, 0x78(%rsp)
    00000fb1: 	movb	$0x0, (%rax,%r13)
    00000fb6: 	movabsq	$0x3fffffffffffffff, %rax
    00000fc0: 	subq	0x78(%rsp), %rax
    00000fc5: 	cmpq	$0x15, %rax
    00000fc9: 	jbe	.Ltmp974 # Offset: 4041
    00000fcf: 	movq	0x20(%rsp), %rdi
    00000fd4: 	movl	$0x16, %edx
    00000fd9: 	leaq	DATAat0x3d244(%rip), %rsi
    00000fe0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4064
    00000fe5: 	callq	clock@PLT # Offset: 4069
    00000fea: 	movl	iterations(%rip), %ecx
    00000ff0: 	movq	%rax, start_time(%rip)
    00000ff7: 	testl	%ecx, %ecx
    00000ff9: 	jle	.Ltmp975 # Offset: 4089
    00000fff: 	movzbl	0x30(%rsp), %eax
    00001004: 	xorb	0x2c(%rsp), %al
    00001008: 	xorl	%r13d, %r13d
    0000100b: 	leaq	0x1f40(%rbp), %rbx
    00001012: 	xorb	0x34(%rsp), %al
    00001016: 	xorb	0x28(%rsp), %al
    0000101a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001021: 	movd	%eax, %xmm0
    00001025: 	punpcklbw	%xmm0, %xmm0
    00001029: 	punpcklwd	%xmm0, %xmm0
    0000102d: 	pshufd	$0x0, %xmm0, %xmm4
    00001032: 	movaps	%xmm4, (%rsp)
    00001036: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp978:
    00001040: 	movq	%rbp, %rax
    00001043: 	pxor	%xmm1, %xmm1
    00001047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp976:
    00001050: 	movdqu	(%rax), %xmm0
    00001054: 	pxor	(%rsp), %xmm0
    00001059: 	addq	$0x10, %rax
    0000105d: 	paddb	%xmm0, %xmm1
    00001061: 	cmpq	%rbx, %rax
    00001064: 	jne	.Ltmp976 # Offset: 4196
    00001066: 	cvttsd2si	init_value(%rip), %edx
    0000106e: 	movdqa	%xmm1, %xmm0
    00001072: 	psrldq	$0x8, %xmm0
    00001077: 	paddb	%xmm0, %xmm1
    0000107b: 	pxor	%xmm0, %xmm0
    0000107f: 	psadbw	%xmm0, %xmm1
    00001083: 	xorl	%r15d, %edx
    00001086: 	xorb	0x16(%rsp), %dl
    0000108a: 	movd	%xmm1, %eax
    0000108e: 	xorb	0x17(%rsp), %dl
    00001092: 	xorl	%r12d, %edx
    00001095: 	shll	$0x6, %edx
    00001098: 	cmpb	%al, %dl
    0000109a: 	je	.Ltmp977 # Offset: 4250
    0000109c: 	movl	current_test(%rip), %edx
    000010a2: 	movq	%r14, %rsi
    000010a5: 	movl	$0x1, %edi
    000010aa: 	xorl	%eax, %eax
    000010ac: 	callq	__printf_chk@PLT # Offset: 4268
    000010b1: 	movl	iterations(%rip), %ecx
.Ltmp977:
    000010b7: 	addl	$0x1, %r13d
    000010bb: 	cmpl	%ecx, %r13d
    000010be: 	jl	.Ltmp978 # Offset: 4286
.Ltmp975:
    000010c0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000010ce: 	subq	$0x20, %rax
    000010d2: 	cmpq	%rax, %rbx
    000010d5: 	je	.Ltmp979 # Offset: 4309
    000010db: 	leaq	0x10(%rbx), %rdi
    000010df: 	movq	0x78(%rsp), %r12
    000010e4: 	movq	%rdi, (%rbx)
    000010e7: 	movq	0x70(%rsp), %r13
    000010ec: 	movq	%r13, %rax
    000010ef: 	addq	%r12, %rax
    000010f2: 	je	.Ltmp980 # Offset: 4338
    000010f4: 	testq	%r13, %r13
    000010f7: 	je	.Ltmp981 # Offset: 4343
.Ltmp980:
    000010fd: 	movq	%r12, 0x48(%rsp)
    00001102: 	cmpq	$0xf, %r12
    00001106: 	ja	.Ltmp982 # Offset: 4358
    0000110c: 	cmpq	$0x1, %r12
    00001110: 	jne	.Ltmp983 # Offset: 4368
    00001116: 	movzbl	(%r13), %eax
    0000111b: 	movb	%al, 0x10(%rbx)
.Ltmp1041:
    0000111e: 	movq	%r12, 0x8(%rbx)
    00001122: 	movb	$0x0, (%rdi,%r12)
    00001127: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000112e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001135: 	addq	$0x20, %rax
    00001139: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001140: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001147: 	je	.Ltmp984 # Offset: 4423
.Ltmp1022:
    0000114d: 	movq	-0x20(%rax), %r12
    00001151: 	callq	clock@PLT # Offset: 4433
    00001156: 	pxor	%xmm0, %xmm0
    0000115a: 	movq	%rax, end_time(%rip)
    00001161: 	movq	%r12, %rdi
    00001164: 	subq	start_time(%rip), %rax
    0000116b: 	cvtsi2sd	%rax, %xmm0
    00001170: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001178: 	callq	_Z13record_resultdPKc # Offset: 4472
    0000117d: 	movq	0x70(%rsp), %rdi
    00001182: 	cmpq	0x18(%rsp), %rdi
    00001187: 	je	.Ltmp985 # Offset: 4487
    00001189: 	movq	0x80(%rsp), %rax
    00001191: 	leaq	0x1(%rax), %rsi
    00001195: 	callq	_ZdlPvm@PLT # Offset: 4501
.Ltmp985:
    0000119a: 	movq	0x18(%rsp), %rax
    0000119f: 	movq	0x50(%rsp), %r13
    000011a4: 	movq	0x58(%rsp), %r12
    000011a9: 	movq	%rax, 0x70(%rsp)
    000011ae: 	movq	%r13, %rax
    000011b1: 	addq	%r12, %rax
    000011b4: 	je	.Ltmp986 # Offset: 4532
    000011b6: 	testq	%r13, %r13
    000011b9: 	je	.Ltmp987 # Offset: 4537
.Ltmp986:
    000011bf: 	movq	%r12, 0x48(%rsp)
    000011c4: 	cmpq	$0xf, %r12
    000011c8: 	ja	.Ltmp988 # Offset: 4552
    000011ce: 	cmpq	$0x1, %r12
    000011d2: 	jne	.Ltmp989 # Offset: 4562
    000011d8: 	movzbl	(%r13), %eax
    000011dd: 	movb	%al, 0x80(%rsp)
    000011e4: 	movq	0x18(%rsp), %rax
.Ltmp1006:
    000011e9: 	movq	%r12, 0x78(%rsp)
    000011ee: 	movb	$0x0, (%rax,%r12)
    000011f3: 	movabsq	$0x3fffffffffffffff, %rax
    000011fd: 	subq	0x78(%rsp), %rax
    00001202: 	cmpq	$0x16, %rax
    00001206: 	jbe	.Ltmp990 # Offset: 4614
    0000120c: 	movq	0x20(%rsp), %rdi
    00001211: 	movl	$0x17, %edx
    00001216: 	leaq	DATAat0x3d25b(%rip), %rsi
    0000121d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4637
    00001222: 	callq	clock@PLT # Offset: 4642
    00001227: 	movl	iterations(%rip), %ecx
    0000122d: 	movq	%rax, start_time(%rip)
    00001234: 	testl	%ecx, %ecx
    00001236: 	jle	.Ltmp991 # Offset: 4662
    0000123c: 	movzbl	0x30(%rsp), %r13d
    00001242: 	xorb	0x2c(%rsp), %r13b
    00001247: 	xorl	%r12d, %r12d
    0000124a: 	leaq	0x1f40(%rbp), %rbx
    00001251: 	xorb	0x34(%rsp), %r13b
    00001256: 	xorb	0x28(%rsp), %r13b
    0000125b: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001262: 	movd	%r13d, %xmm0
    00001267: 	punpcklbw	%xmm0, %xmm0
    0000126b: 	punpcklwd	%xmm0, %xmm0
    0000126f: 	pshufd	$0x0, %xmm0, %xmm2
    00001274: 	movaps	%xmm2, (%rsp)
    00001278: 	nopl	(%rax,%rax) # Size: 8
.Ltmp994:
    00001280: 	movq	%rbp, %rax
    00001283: 	pxor	%xmm1, %xmm1
    00001287: 	nopw	(%rax,%rax) # Size: 9
.Ltmp992:
    00001290: 	movdqu	(%rax), %xmm0
    00001294: 	pxor	(%rsp), %xmm0
    00001299: 	addq	$0x10, %rax
    0000129d: 	paddb	%xmm0, %xmm1
    000012a1: 	cmpq	%rax, %rbx
    000012a4: 	jne	.Ltmp992 # Offset: 4772
    000012a6: 	cvttsd2si	init_value(%rip), %edx
    000012ae: 	movdqa	%xmm1, %xmm0
    000012b2: 	psrldq	$0x8, %xmm0
    000012b7: 	paddb	%xmm0, %xmm1
    000012bb: 	pxor	%xmm0, %xmm0
    000012bf: 	psadbw	%xmm0, %xmm1
    000012c3: 	xorl	%r13d, %edx
    000012c6: 	movd	%xmm1, %eax
    000012ca: 	shll	$0x6, %edx
    000012cd: 	cmpb	%al, %dl
    000012cf: 	je	.Ltmp993 # Offset: 4815
    000012d1: 	movl	current_test(%rip), %edx
    000012d7: 	movq	%r14, %rsi
    000012da: 	movl	$0x1, %edi
    000012df: 	xorl	%eax, %eax
    000012e1: 	callq	__printf_chk@PLT # Offset: 4833
    000012e6: 	movl	iterations(%rip), %ecx
.Ltmp993:
    000012ec: 	addl	$0x1, %r12d
    000012f0: 	cmpl	%ecx, %r12d
    000012f3: 	jl	.Ltmp994 # Offset: 4851
.Ltmp991:
    000012f5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001303: 	subq	$0x20, %rax
    00001307: 	cmpq	%rax, %rbx
    0000130a: 	je	.Ltmp995 # Offset: 4874
    00001310: 	leaq	0x10(%rbx), %rdi
    00001314: 	movq	0x78(%rsp), %r12
    00001319: 	movq	%rdi, (%rbx)
    0000131c: 	movq	0x70(%rsp), %rbp
    00001321: 	movq	%rbp, %rax
    00001324: 	addq	%r12, %rax
    00001327: 	je	.Ltmp996 # Offset: 4903
    00001329: 	testq	%rbp, %rbp
    0000132c: 	je	.Ltmp997 # Offset: 4908
.Ltmp996:
    00001332: 	movq	%r12, 0x48(%rsp)
    00001337: 	cmpq	$0xf, %r12
    0000133b: 	ja	.Ltmp998 # Offset: 4923
    00001341: 	cmpq	$0x1, %r12
    00001345: 	jne	.Ltmp999 # Offset: 4933
    0000134b: 	movzbl	(%rbp), %eax
    0000134f: 	movb	%al, 0x10(%rbx)
.Ltmp1043:
    00001352: 	movq	%r12, 0x8(%rbx)
    00001356: 	movb	$0x0, (%rdi,%r12)
    0000135b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001362: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001369: 	addq	$0x20, %rax
    0000136d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001374: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000137b: 	je	.Ltmp1000 # Offset: 4987
.Ltmp1025:
    00001381: 	movq	-0x20(%rax), %rbp
    00001385: 	callq	clock@PLT # Offset: 4997
    0000138a: 	pxor	%xmm0, %xmm0
    0000138e: 	movq	%rax, end_time(%rip)
    00001395: 	movq	%rbp, %rdi
    00001398: 	subq	start_time(%rip), %rax
    0000139f: 	cvtsi2sd	%rax, %xmm0
    000013a4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000013ac: 	callq	_Z13record_resultdPKc # Offset: 5036
    000013b1: 	movq	0x70(%rsp), %rdi
    000013b6: 	cmpq	0x18(%rsp), %rdi
    000013bb: 	je	.Ltmp1001 # Offset: 5051
    000013bd: 	movq	0x80(%rsp), %rax
    000013c5: 	leaq	0x1(%rax), %rsi
    000013c9: 	callq	_ZdlPvm@PLT # Offset: 5065
.Ltmp1001:
    000013ce: 	movq	0x50(%rsp), %rdi
    000013d3: 	cmpq	0x38(%rsp), %rdi
    000013d8: 	je	.Ltmp1002 # Offset: 5080
    000013da: 	movq	0x60(%rsp), %rax
    000013df: 	leaq	0x1(%rax), %rsi
    000013e3: 	callq	_ZdlPvm@PLT # Offset: 5091
.Ltmp1002:
    000013e8: 	movq	0x98(%rsp), %rax
    000013f0: 	subq	%fs:0x28, %rax
    000013f9: 	jne	.Ltmp1003 # Offset: 5113
    000013ff: 	addq	$0xa8, %rsp
    00001406: 	popq	%rbx
    00001407: 	popq	%rbp
    00001408: 	popq	%r12
    0000140a: 	popq	%r13
    0000140c: 	popq	%r14
    0000140e: 	popq	%r15
    00001410: 	retq # Offset: 5136
.Ltmp870:
    00001411: 	leaq	0x48(%rsp), %rsi
    00001416: 	xorl	%edx, %edx
    00001418: 	movq	%rbx, %rdi
    0000141b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5147
    00001420: 	movq	%rax, (%rbx)
    00001423: 	movq	%rax, %rdi
    00001426: 	movq	0x48(%rsp), %rax
    0000142b: 	movq	%rax, 0x10(%rbx)
.Ltmp1034:
    0000142f: 	movq	%r13, %rdx
    00001432: 	movq	%r14, %rsi
    00001435: 	callq	memcpy@PLT # Offset: 5173
    0000143a: 	movq	0x48(%rsp), %r13
    0000143f: 	movq	(%rbx), %rdi
    00001442: 	jmp	.Ltmp1004 # Offset: 5186
.Ltmp989:
    00001447: 	testq	%r12, %r12
    0000144a: 	jne	.Ltmp1005 # Offset: 5194
    00001450: 	movq	0x18(%rsp), %rax
    00001455: 	jmp	.Ltmp1006 # Offset: 5205
.Ltmp973:
    0000145a: 	testq	%r13, %r13
    0000145d: 	jne	.Ltmp1007 # Offset: 5213
    00001463: 	movq	0x18(%rsp), %rax
    00001468: 	jmp	.Ltmp1008 # Offset: 5224
.Ltmp957:
    0000146d: 	testq	%r13, %r13
    00001470: 	jne	.Ltmp1009 # Offset: 5232
    00001476: 	movq	0x18(%rsp), %rax
    0000147b: 	jmp	.Ltmp1010 # Offset: 5243
.Ltmp941:
    00001480: 	testq	%r13, %r13
    00001483: 	jne	.Ltmp1011 # Offset: 5251
    00001489: 	movq	0x18(%rsp), %rax
    0000148e: 	jmp	.Ltmp1012 # Offset: 5262
.Ltmp893:
    00001493: 	testq	%r13, %r13
    00001496: 	jne	.Ltmp1013 # Offset: 5270
    0000149c: 	movq	0x18(%rsp), %rax
    000014a1: 	jmp	.Ltmp1014 # Offset: 5281
.Ltmp877:
    000014a6: 	testq	%r13, %r13
    000014a9: 	jne	.Ltmp1015 # Offset: 5289
    000014af: 	movq	0x18(%rsp), %rax
    000014b4: 	jmp	.Ltmp1016 # Offset: 5300
.Ltmp925:
    000014b9: 	testq	%r13, %r13
    000014bc: 	jne	.Ltmp1017 # Offset: 5308
    000014c2: 	movq	0x18(%rsp), %rax
    000014c7: 	jmp	.Ltmp1018 # Offset: 5319
.Ltmp909:
    000014cc: 	testq	%r13, %r13
    000014cf: 	jne	.Ltmp1019 # Offset: 5327
    000014d5: 	movq	0x18(%rsp), %rax
    000014da: 	jmp	.Ltmp1020 # Offset: 5338
.Ltmp892:
    000014df: 	movq	0x20(%rsp), %rdi
    000014e4: 	leaq	0x48(%rsp), %rsi
    000014e9: 	xorl	%edx, %edx
    000014eb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5355
    000014f0: 	movq	%rax, 0x70(%rsp)
    000014f5: 	movq	%rax, %rdi
    000014f8: 	movq	0x48(%rsp), %rax
    000014fd: 	movq	%rax, 0x80(%rsp)
.Ltmp1055:
    00001505: 	movq	%r13, %rdx
    00001508: 	movq	%r14, %rsi
    0000150b: 	callq	memcpy@PLT # Offset: 5387
    00001510: 	movq	0x48(%rsp), %r13
    00001515: 	movq	0x70(%rsp), %rax
    0000151a: 	jmp	.Ltmp1014 # Offset: 5402
.Ltmp876:
    0000151f: 	movq	0x20(%rsp), %rdi
    00001524: 	leaq	0x48(%rsp), %rsi
    00001529: 	xorl	%edx, %edx
    0000152b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5419
    00001530: 	movq	%rax, 0x70(%rsp)
    00001535: 	movq	%rax, %rdi
    00001538: 	movq	0x48(%rsp), %rax
    0000153d: 	movq	%rax, 0x80(%rsp)
.Ltmp1056:
    00001545: 	movq	%r13, %rdx
    00001548: 	movq	%r14, %rsi
    0000154b: 	callq	memcpy@PLT # Offset: 5451
    00001550: 	movq	0x48(%rsp), %r13
    00001555: 	movq	0x70(%rsp), %rax
    0000155a: 	jmp	.Ltmp1016 # Offset: 5466
.Ltmp908:
    0000155f: 	movq	0x20(%rsp), %rdi
    00001564: 	leaq	0x48(%rsp), %rsi
    00001569: 	xorl	%edx, %edx
    0000156b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5483
    00001570: 	movq	%rax, 0x70(%rsp)
    00001575: 	movq	%rax, %rdi
    00001578: 	movq	0x48(%rsp), %rax
    0000157d: 	movq	%rax, 0x80(%rsp)
.Ltmp1058:
    00001585: 	movq	%r13, %rdx
    00001588: 	movq	%r14, %rsi
    0000158b: 	callq	memcpy@PLT # Offset: 5515
    00001590: 	movq	0x48(%rsp), %r13
    00001595: 	movq	0x70(%rsp), %rax
    0000159a: 	jmp	.Ltmp1020 # Offset: 5530
.Ltmp924:
    0000159f: 	movq	0x20(%rsp), %rdi
    000015a4: 	leaq	0x48(%rsp), %rsi
    000015a9: 	xorl	%edx, %edx
    000015ab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5547
    000015b0: 	movq	%rax, 0x70(%rsp)
    000015b5: 	movq	%rax, %rdi
    000015b8: 	movq	0x48(%rsp), %rax
    000015bd: 	movq	%rax, 0x80(%rsp)
.Ltmp1057:
    000015c5: 	movq	%r13, %rdx
    000015c8: 	movq	%r14, %rsi
    000015cb: 	callq	memcpy@PLT # Offset: 5579
    000015d0: 	movq	0x48(%rsp), %r13
    000015d5: 	movq	0x70(%rsp), %rax
    000015da: 	jmp	.Ltmp1018 # Offset: 5594
.Ltmp940:
    000015df: 	movq	0x20(%rsp), %rdi
    000015e4: 	leaq	0x48(%rsp), %rsi
    000015e9: 	xorl	%edx, %edx
    000015eb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5611
    000015f0: 	movq	%rax, 0x70(%rsp)
    000015f5: 	movq	%rax, %rdi
    000015f8: 	movq	0x48(%rsp), %rax
    000015fd: 	movq	%rax, 0x80(%rsp)
.Ltmp1054:
    00001605: 	movq	%r13, %rdx
    00001608: 	movq	%r14, %rsi
    0000160b: 	callq	memcpy@PLT # Offset: 5643
    00001610: 	movq	0x48(%rsp), %r13
    00001615: 	movq	0x70(%rsp), %rax
    0000161a: 	jmp	.Ltmp1012 # Offset: 5658
.Ltmp956:
    0000161f: 	movq	0x20(%rsp), %rdi
    00001624: 	leaq	0x48(%rsp), %rsi
    00001629: 	xorl	%edx, %edx
    0000162b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5675
    00001630: 	movq	%rax, 0x70(%rsp)
    00001635: 	movq	%rax, %rdi
    00001638: 	movq	0x48(%rsp), %rax
    0000163d: 	movq	%rax, 0x80(%rsp)
.Ltmp1053:
    00001645: 	movq	%r13, %rdx
    00001648: 	movq	%r14, %rsi
    0000164b: 	callq	memcpy@PLT # Offset: 5707
    00001650: 	movq	0x48(%rsp), %r13
    00001655: 	movq	0x70(%rsp), %rax
    0000165a: 	jmp	.Ltmp1010 # Offset: 5722
.Ltmp988:
    0000165f: 	movq	0x20(%rsp), %rdi
    00001664: 	leaq	0x48(%rsp), %rsi
    00001669: 	xorl	%edx, %edx
    0000166b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5739
    00001670: 	movq	%rax, 0x70(%rsp)
    00001675: 	movq	%rax, %rdi
    00001678: 	movq	0x48(%rsp), %rax
    0000167d: 	movq	%rax, 0x80(%rsp)
.Ltmp1051:
    00001685: 	movq	%r12, %rdx
    00001688: 	movq	%r13, %rsi
    0000168b: 	callq	memcpy@PLT # Offset: 5771
    00001690: 	movq	0x48(%rsp), %r12
    00001695: 	movq	0x70(%rsp), %rax
    0000169a: 	jmp	.Ltmp1006 # Offset: 5786
.Ltmp972:
    0000169f: 	movq	0x20(%rsp), %rdi
    000016a4: 	leaq	0x48(%rsp), %rsi
    000016a9: 	xorl	%edx, %edx
    000016ab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5803
    000016b0: 	movq	%rax, 0x70(%rsp)
    000016b5: 	movq	%rax, %rdi
    000016b8: 	movq	0x48(%rsp), %rax
    000016bd: 	movq	%rax, 0x80(%rsp)
.Ltmp1052:
    000016c5: 	movq	%r13, %rdx
    000016c8: 	movq	%r14, %rsi
    000016cb: 	callq	memcpy@PLT # Offset: 5835
    000016d0: 	movq	0x48(%rsp), %r13
    000016d5: 	movq	0x70(%rsp), %rax
    000016da: 	jmp	.Ltmp1008 # Offset: 5850
.Ltmp968:
    000016df: 	movq	-0x8(%rdx), %rax
    000016e3: 	addq	$0x200, %rax
    000016e9: 	jmp	.Ltmp1021 # Offset: 5865
.Ltmp979:
    000016ee: 	movq	0x20(%rsp), %rsi
    000016f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5882
    000016ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001706: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000170d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001714: 	jne	.Ltmp1022 # Offset: 5908
.Ltmp984:
    0000171a: 	movq	-0x8(%rdx), %rax
    0000171e: 	addq	$0x200, %rax
    00001724: 	jmp	.Ltmp1022 # Offset: 5924
.Ltmp963:
    00001729: 	movq	0x20(%rsp), %rsi
    0000172e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001735: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5941
    0000173a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001741: 	jmp	.Ltmp1023 # Offset: 5953
.Ltmp952:
    00001746: 	movq	-0x8(%rdx), %rax
    0000174a: 	addq	$0x200, %rax
    00001750: 	jmp	.Ltmp1024 # Offset: 5968
.Ltmp995:
    00001755: 	movq	0x20(%rsp), %rsi
    0000175a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001761: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5985
    00001766: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000176d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001774: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000177b: 	jne	.Ltmp1025 # Offset: 6011
.Ltmp1000:
    00001781: 	movq	-0x8(%rdx), %rax
    00001785: 	addq	$0x200, %rax
    0000178b: 	jmp	.Ltmp1025 # Offset: 6027
.Ltmp915:
    00001790: 	movq	0x20(%rsp), %rsi
    00001795: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000179c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6044
    000017a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017a8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017b6: 	jne	.Ltmp1026 # Offset: 6070
.Ltmp920:
    000017bc: 	movq	-0x8(%rdx), %rax
    000017c0: 	addq	$0x200, %rax
    000017c6: 	jmp	.Ltmp1026 # Offset: 6086
.Ltmp888:
    000017cb: 	movq	-0x8(%rdx), %rax
    000017cf: 	addq	$0x200, %rax
    000017d5: 	jmp	.Ltmp1027 # Offset: 6101
.Ltmp947:
    000017da: 	movq	0x20(%rsp), %rsi
    000017df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6118
    000017eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017f2: 	jmp	.Ltmp1028 # Offset: 6130
.Ltmp899:
    000017f7: 	movq	0x20(%rsp), %rsi
    000017fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001803: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6147
    00001808: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000180f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001816: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000181d: 	jne	.Ltmp1029 # Offset: 6173
.Ltmp904:
    00001823: 	movq	-0x8(%rdx), %rax
    00001827: 	addq	$0x200, %rax
    0000182d: 	jmp	.Ltmp1029 # Offset: 6189
.Ltmp867:
    00001832: 	movq	0x20(%rsp), %rsi
    00001837: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000183e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6206
    00001843: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000184a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001851: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001858: 	jne	.Ltmp1030 # Offset: 6232
.Ltmp872:
    0000185e: 	movq	-0x8(%rdx), %rax
    00001862: 	addq	$0x200, %rax
    00001868: 	jmp	.Ltmp1030 # Offset: 6248
.Ltmp936:
    0000186d: 	movq	-0x8(%rdx), %rax
    00001871: 	addq	$0x200, %rax
    00001877: 	jmp	.Ltmp1031 # Offset: 6263
.Ltmp883:
    0000187c: 	movq	0x20(%rsp), %rsi
    00001881: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001888: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6280
    0000188d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001894: 	jmp	.Ltmp1032 # Offset: 6292
.Ltmp931:
    00001899: 	movq	0x20(%rsp), %rsi
    0000189e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018a5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6309
    000018aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018b1: 	jmp	.Ltmp1033 # Offset: 6321
.Ltmp871:
    000018b6: 	testq	%r13, %r13
    000018b9: 	je	.Ltmp1004 # Offset: 6329
    000018bf: 	jmp	.Ltmp1034 # Offset: 6335
    000018c4: 	nopl	(%rax) # Size: 4
.Ltmp903:
    000018c8: 	testq	%r13, %r13
    000018cb: 	je	.Ltmp1035 # Offset: 6347
    000018d1: 	jmp	.Ltmp1036 # Offset: 6353
    000018d6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp935:
    000018e0: 	testq	%r13, %r13
    000018e3: 	je	.Ltmp1037 # Offset: 6371
.Ltmp1047:
    000018e9: 	movq	%r13, %rdx
    000018ec: 	movq	%r14, %rsi
    000018ef: 	callq	memcpy@PLT # Offset: 6383
    000018f4: 	movq	0x48(%rsp), %r13
    000018f9: 	movq	(%rbx), %rdi
    000018fc: 	jmp	.Ltmp1037 # Offset: 6396
.Ltmp967:
    00001901: 	testq	%r13, %r13
    00001904: 	je	.Ltmp1038 # Offset: 6404
    0000190a: 	jmp	.Ltmp1039 # Offset: 6410
    0000190f: 	nop # Size: 1
.Ltmp887:
    00001910: 	testq	%r13, %r13
    00001913: 	je	.Ltmp1040 # Offset: 6419
.Ltmp1049:
    00001919: 	movq	%r13, %rdx
    0000191c: 	movq	%r14, %rsi
    0000191f: 	callq	memcpy@PLT # Offset: 6431
    00001924: 	movq	0x48(%rsp), %r13
    00001929: 	movq	(%rbx), %rdi
    0000192c: 	jmp	.Ltmp1040 # Offset: 6444
.Ltmp983:
    00001931: 	testq	%r12, %r12
    00001934: 	je	.Ltmp1041 # Offset: 6452
    0000193a: 	jmp	.Ltmp1042 # Offset: 6458
    0000193f: 	nop # Size: 1
.Ltmp999:
    00001940: 	testq	%r12, %r12
    00001943: 	je	.Ltmp1043 # Offset: 6467
.Ltmp1048:
    00001949: 	movq	%r12, %rdx
    0000194c: 	movq	%rbp, %rsi
    0000194f: 	callq	memcpy@PLT # Offset: 6479
    00001954: 	movq	0x48(%rsp), %r12
    00001959: 	movq	(%rbx), %rdi
    0000195c: 	jmp	.Ltmp1043 # Offset: 6492
.Ltmp951:
    00001961: 	testq	%r13, %r13
    00001964: 	je	.Ltmp1044 # Offset: 6500
    0000196a: 	jmp	.Ltmp1045 # Offset: 6506
    0000196f: 	nop # Size: 1
.Ltmp919:
    00001970: 	testq	%r13, %r13
    00001973: 	je	.Ltmp1046 # Offset: 6515
.Ltmp1050:
    00001979: 	movq	%r13, %rdx
    0000197c: 	movq	%r14, %rsi
    0000197f: 	callq	memcpy@PLT # Offset: 6527
    00001984: 	movq	0x48(%rsp), %r13
    00001989: 	movq	(%rbx), %rdi
    0000198c: 	jmp	.Ltmp1046 # Offset: 6540
.Ltmp902:
    00001991: 	leaq	0x48(%rsp), %rsi
    00001996: 	xorl	%edx, %edx
    00001998: 	movq	%rbx, %rdi
    0000199b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6555
    000019a0: 	movq	%rax, (%rbx)
    000019a3: 	movq	%rax, %rdi
    000019a6: 	movq	0x48(%rsp), %rax
    000019ab: 	movq	%rax, 0x10(%rbx)
.Ltmp1036:
    000019af: 	movq	%r13, %rdx
    000019b2: 	movq	%r14, %rsi
    000019b5: 	callq	memcpy@PLT # Offset: 6581
    000019ba: 	movq	0x48(%rsp), %r13
    000019bf: 	movq	(%rbx), %rdi
    000019c2: 	jmp	.Ltmp1035 # Offset: 6594
.Ltmp966:
    000019c7: 	leaq	0x48(%rsp), %rsi
    000019cc: 	xorl	%edx, %edx
    000019ce: 	movq	%rbx, %rdi
    000019d1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6609
    000019d6: 	movq	%rax, (%rbx)
    000019d9: 	movq	%rax, %rdi
    000019dc: 	movq	0x48(%rsp), %rax
    000019e1: 	movq	%rax, 0x10(%rbx)
.Ltmp1039:
    000019e5: 	movq	%r13, %rdx
    000019e8: 	movq	%r14, %rsi
    000019eb: 	callq	memcpy@PLT # Offset: 6635
    000019f0: 	movq	0x48(%rsp), %r13
    000019f5: 	movq	(%rbx), %rdi
    000019f8: 	jmp	.Ltmp1038 # Offset: 6648
.Ltmp934:
    000019fd: 	leaq	0x48(%rsp), %rsi
    00001a02: 	xorl	%edx, %edx
    00001a04: 	movq	%rbx, %rdi
    00001a07: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6663
    00001a0c: 	movq	%rax, (%rbx)
    00001a0f: 	movq	%rax, %rdi
    00001a12: 	movq	0x48(%rsp), %rax
    00001a17: 	movq	%rax, 0x10(%rbx)
    00001a1b: 	jmp	.Ltmp1047 # Offset: 6683
.Ltmp982:
    00001a20: 	leaq	0x48(%rsp), %rsi
    00001a25: 	xorl	%edx, %edx
    00001a27: 	movq	%rbx, %rdi
    00001a2a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6698
    00001a2f: 	movq	%rax, (%rbx)
    00001a32: 	movq	%rax, %rdi
    00001a35: 	movq	0x48(%rsp), %rax
    00001a3a: 	movq	%rax, 0x10(%rbx)
.Ltmp1042:
    00001a3e: 	movq	%r12, %rdx
    00001a41: 	movq	%r13, %rsi
    00001a44: 	callq	memcpy@PLT # Offset: 6724
    00001a49: 	movq	0x48(%rsp), %r12
    00001a4e: 	movq	(%rbx), %rdi
    00001a51: 	jmp	.Ltmp1041 # Offset: 6737
.Ltmp950:
    00001a56: 	leaq	0x48(%rsp), %rsi
    00001a5b: 	xorl	%edx, %edx
    00001a5d: 	movq	%rbx, %rdi
    00001a60: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6752
    00001a65: 	movq	%rax, (%rbx)
    00001a68: 	movq	%rax, %rdi
    00001a6b: 	movq	0x48(%rsp), %rax
    00001a70: 	movq	%rax, 0x10(%rbx)
.Ltmp1045:
    00001a74: 	movq	%r13, %rdx
    00001a77: 	movq	%r14, %rsi
    00001a7a: 	callq	memcpy@PLT # Offset: 6778
    00001a7f: 	movq	0x48(%rsp), %r13
    00001a84: 	movq	(%rbx), %rdi
    00001a87: 	jmp	.Ltmp1044 # Offset: 6791
.Ltmp998:
    00001a8c: 	leaq	0x48(%rsp), %rsi
    00001a91: 	xorl	%edx, %edx
    00001a93: 	movq	%rbx, %rdi
    00001a96: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6806
    00001a9b: 	movq	%rax, (%rbx)
    00001a9e: 	movq	%rax, %rdi
    00001aa1: 	movq	0x48(%rsp), %rax
    00001aa6: 	movq	%rax, 0x10(%rbx)
    00001aaa: 	jmp	.Ltmp1048 # Offset: 6826
.Ltmp886:
    00001aaf: 	leaq	0x48(%rsp), %rsi
    00001ab4: 	xorl	%edx, %edx
    00001ab6: 	movq	%rbx, %rdi
    00001ab9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6841
    00001abe: 	movq	%rax, (%rbx)
    00001ac1: 	movq	%rax, %rdi
    00001ac4: 	movq	0x48(%rsp), %rax
    00001ac9: 	movq	%rax, 0x10(%rbx)
    00001acd: 	jmp	.Ltmp1049 # Offset: 6861
.Ltmp918:
    00001ad2: 	leaq	0x48(%rsp), %rsi
    00001ad7: 	xorl	%edx, %edx
    00001ad9: 	movq	%rbx, %rdi
    00001adc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6876
    00001ae1: 	movq	%rax, (%rbx)
    00001ae4: 	movq	%rax, %rdi
    00001ae7: 	movq	0x48(%rsp), %rax
    00001aec: 	movq	%rax, 0x10(%rbx)
    00001af0: 	jmp	.Ltmp1050 # Offset: 6896
.Ltmp875:
    00001af5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001afc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6908
.Ltmp878:
    00001b01: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b08: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6920
.Ltmp885:
    00001b0d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b14: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6932
.Ltmp891:
    00001b19: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b20: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6944
.Ltmp894:
    00001b25: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b2c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6956
.Ltmp901:
    00001b31: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b38: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6968
.Ltmp907:
    00001b3d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b44: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6980
.Ltmp910:
    00001b49: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b50: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6992
.Ltmp917:
    00001b55: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b5c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7004
.Ltmp923:
    00001b61: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b68: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7016
.Ltmp926:
    00001b6d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b74: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7028
.Ltmp933:
    00001b79: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b80: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7040
.Ltmp939:
    00001b85: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b8c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7052
.Ltmp942:
    00001b91: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b98: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7064
.Ltmp949:
    00001b9d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ba4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7076
.Ltmp955:
    00001ba9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bb0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7088
.Ltmp958:
    00001bb5: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bbc: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7100
.Ltmp965:
    00001bc1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bc8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7112
.Ltmp971:
    00001bcd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bd4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7124
.Ltmp974:
    00001bd9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001be0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7136
.Ltmp981:
    00001be5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7148
.Ltmp987:
    00001bf1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bf8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7160
.Ltmp990:
    00001bfd: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c04: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7172
.Ltmp997:
    00001c09: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c10: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7184
.Ltmp1003:
    00001c15: 	callq	__stack_chk_fail@PLT # Offset: 7189
.Ltmp869:
    00001c1a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c21: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7201
.Ltmp1005:
    00001c26: 	movq	0x18(%rsp), %rdi
    00001c2b: 	jmp	.Ltmp1051 # Offset: 7211
.Ltmp1007:
    00001c30: 	movq	0x18(%rsp), %rdi
    00001c35: 	jmp	.Ltmp1052 # Offset: 7221
.Ltmp1009:
    00001c3a: 	movq	0x18(%rsp), %rdi
    00001c3f: 	jmp	.Ltmp1053 # Offset: 7231
.Ltmp1011:
    00001c44: 	movq	0x18(%rsp), %rdi
    00001c49: 	jmp	.Ltmp1054 # Offset: 7241
.Ltmp1013:
    00001c4e: 	movq	0x18(%rsp), %rdi
    00001c53: 	jmp	.Ltmp1055 # Offset: 7251
.Ltmp1015:
    00001c58: 	movq	0x18(%rsp), %rdi
    00001c5d: 	jmp	.Ltmp1056 # Offset: 7261
.Ltmp1017:
    00001c62: 	movq	0x18(%rsp), %rdi
    00001c67: 	jmp	.Ltmp1057 # Offset: 7271
.Ltmp1019:
    00001c6c: 	movq	0x18(%rsp), %rdi
    00001c71: 	jmp	.Ltmp1058 # Offset: 7281
    00001c76: 	endbr64
.Ltmp1060:
    00001c7a: 	movq	%rax, %rbp
    00001c7d: 	jmp	.Ltmp1059 # Offset: 7293
    00001c7f: 	endbr64
    00001c83: 	jmp	.Ltmp1060 # Offset: 7299
    00001c85: 	endbr64
    00001c89: 	jmp	.Ltmp1060 # Offset: 7305
    00001c8b: 	endbr64
    00001c8f: 	jmp	.Ltmp1060 # Offset: 7311
    00001c91: 	endbr64
    00001c95: 	jmp	.Ltmp1060 # Offset: 7317
    00001c97: 	endbr64
    00001c9b: 	jmp	.Ltmp1060 # Offset: 7323
    00001c9d: 	endbr64
    00001ca1: 	jmp	.Ltmp1060 # Offset: 7329
    00001ca3: 	endbr64
    00001ca7: 	movq	%rax, %rbp
    00001caa: 	jmp	.Ltmp1061 # Offset: 7338
    00001cac: 	endbr64
    00001cb0: 	jmp	.Ltmp1060 # Offset: 7344
    00001cb2: 	endbr64
    00001cb6: 	jmp	.Ltmp1060 # Offset: 7350
    00001cb8: 	endbr64
    00001cbc: 	jmp	.Ltmp1060 # Offset: 7356
    00001cbe: 	endbr64
    00001cc2: 	jmp	.Ltmp1060 # Offset: 7362
.Ltmp1059:
    00001cc4: 	movq	0x70(%rsp), %rdi
    00001cc9: 	cmpq	0x18(%rsp), %rdi
    00001cce: 	je	.Ltmp1061 # Offset: 7374
    00001cd0: 	movq	0x80(%rsp), %rax
    00001cd8: 	leaq	0x1(%rax), %rsi
    00001cdc: 	callq	_ZdlPvm@PLT # Offset: 7388
.Ltmp1061:
    00001ce1: 	movq	0x50(%rsp), %rdi
    00001ce6: 	cmpq	0x38(%rsp), %rdi
    00001ceb: 	je	.Ltmp1062 # Offset: 7403
    00001ced: 	movq	0x60(%rsp), %rax
    00001cf2: 	leaq	0x1(%rax), %rsi
    00001cf6: 	callq	_ZdlPvm@PLT # Offset: 7414
.Ltmp1062:
    00001cfb: 	movq	%rbp, %rdi
    00001cfe: 	callq	_Unwind_Resume@PLT # Offset: 7422
    00001d03: 	endbr64
    00001d07: 	jmp	.Ltmp1060 # Offset: 7431
    00001d0c: 	endbr64
    00001d10: 	jmp	.Ltmp1060 # Offset: 7440
    00001d15: 	endbr64
    00001d19: 	jmp	.Ltmp1060 # Offset: 7449
    00001d1e: 	endbr64
    00001d22: 	jmp	.Ltmp1060 # Offset: 7458
    00001d27: 	endbr64
    00001d2b: 	jmp	.Ltmp1060 # Offset: 7467
    00001d30: 	endbr64
    00001d34: 	jmp	.Ltmp1060 # Offset: 7476
    00001d39: 	endbr64
    00001d3d: 	jmp	.Ltmp1060 # Offset: 7485
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIaENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyIhENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 141
  State       : disassembled
  Address     : 0xc980
  Size        : 0x1d52
  MaxSize     : 0x1d60
  Offset      : 0xc980
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIhENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0140:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0xa8, %rsp
    0000001e: 	movl	%esi, 0x28(%rsp)
    00000022: 	leaq	0x70(%rsp), %rdi
    00000027: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000002e: 	movl	%edx, 0x2c(%rsp)
    00000032: 	movl	$0x5f38, %edx
    00000037: 	movl	%ecx, 0x30(%rsp)
    0000003b: 	movl	%r8d, 0x34(%rsp)
    00000040: 	movb	%cl, 0x16(%rsp)
    00000044: 	movb	%r8b, 0x17(%rsp)
    00000049: 	movq	%fs:0x28, %rax
    00000052: 	movq	%rax, 0x98(%rsp)
    0000005a: 	xorl	%eax, %eax
    0000005c: 	leaq	0x60(%rsp), %rax
    00000061: 	movw	%dx, 0x84(%rsp)
    00000069: 	movl	$0xd, %edx
    0000006e: 	movq	%rax, 0x38(%rsp)
    00000073: 	movq	%rax, 0x50(%rsp)
    00000078: 	movl	$0x5f38, %eax
    0000007d: 	movw	%ax, 0x64(%rsp)
    00000082: 	leaq	0x80(%rsp), %rax
    0000008a: 	movl	$0x746e6975, 0x60(%rsp)
    00000092: 	movb	$0x74, 0x66(%rsp)
    00000097: 	movq	$0x7, 0x58(%rsp)
    000000a0: 	movb	$0x0, 0x67(%rsp)
    000000a5: 	movq	%rdi, 0x20(%rsp)
    000000aa: 	movq	%rax, 0x18(%rsp)
    000000af: 	movq	%rax, 0x70(%rsp)
    000000b4: 	movl	$0x746e6975, 0x80(%rsp)
    000000bf: 	movb	$0x74, 0x86(%rsp)
    000000c7: 	movq	$0x7, 0x78(%rsp)
    000000d0: 	movb	$0x0, 0x87(%rsp)
    000000d8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 216
    000000dd: 	callq	clock@PLT # Offset: 221
    000000e2: 	movl	iterations(%rip), %ecx
    000000e8: 	xorl	%r13d, %r13d
    000000eb: 	leaq	0x1f40(%rbp), %rbx
    000000f2: 	movq	%rax, start_time(%rip)
    000000f9: 	testl	%ecx, %ecx
    000000fb: 	jle	.Ltmp1063 # Offset: 251
    00000101: 	movd	%r12d, %xmm0
    00000106: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000010d: 	punpcklbw	%xmm0, %xmm0
    00000111: 	punpcklwd	%xmm0, %xmm0
    00000115: 	pshufd	$0x0, %xmm0, %xmm3
    0000011a: 	movaps	%xmm3, (%rsp)
    0000011e: 	nop # Size: 2
.Ltmp1066:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm1, %xmm1
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1064:
    00000130: 	movdqu	(%rax), %xmm0
    00000134: 	pand	(%rsp), %xmm0
    00000139: 	addq	$0x10, %rax
    0000013d: 	paddb	%xmm0, %xmm1
    00000141: 	cmpq	%rbx, %rax
    00000144: 	jne	.Ltmp1064 # Offset: 324
    00000146: 	cvttsd2si	init_value(%rip), %edx
    0000014e: 	movdqa	%xmm1, %xmm0
    00000152: 	psrldq	$0x8, %xmm0
    00000157: 	paddb	%xmm0, %xmm1
    0000015b: 	pxor	%xmm0, %xmm0
    0000015f: 	psadbw	%xmm0, %xmm1
    00000163: 	andl	%r12d, %edx
    00000166: 	movd	%xmm1, %eax
    0000016a: 	shll	$0x6, %edx
    0000016d: 	cmpb	%al, %dl
    0000016f: 	je	.Ltmp1065 # Offset: 367
    00000171: 	movl	current_test(%rip), %edx
    00000177: 	movq	%r14, %rsi
    0000017a: 	movl	$0x1, %edi
    0000017f: 	xorl	%eax, %eax
    00000181: 	callq	__printf_chk@PLT # Offset: 385
    00000186: 	movl	iterations(%rip), %ecx
.Ltmp1065:
    0000018c: 	addl	$0x1, %r13d
    00000190: 	cmpl	%ecx, %r13d
    00000193: 	jl	.Ltmp1066 # Offset: 403
.Ltmp1063:
    00000195: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000019c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001a3: 	subq	$0x20, %rax
    000001a7: 	cmpq	%rax, %rbx
    000001aa: 	je	.Ltmp1067 # Offset: 426
    000001b0: 	leaq	0x10(%rbx), %rdi
    000001b4: 	movq	0x78(%rsp), %r13
    000001b9: 	movq	%rdi, (%rbx)
    000001bc: 	movq	0x70(%rsp), %r14
    000001c1: 	movq	%r14, %rax
    000001c4: 	addq	%r13, %rax
    000001c7: 	je	.Ltmp1068 # Offset: 455
    000001c9: 	testq	%r14, %r14
    000001cc: 	je	.Ltmp1069 # Offset: 460
.Ltmp1068:
    000001d2: 	movq	%r13, 0x48(%rsp)
    000001d7: 	cmpq	$0xf, %r13
    000001db: 	ja	.Ltmp1070 # Offset: 475
    000001e1: 	cmpq	$0x1, %r13
    000001e5: 	jne	.Ltmp1071 # Offset: 485
    000001eb: 	movzbl	(%r14), %eax
    000001ef: 	movb	%al, 0x10(%rbx)
.Ltmp1204:
    000001f2: 	movq	%r13, 0x8(%rbx)
    000001f6: 	movb	$0x0, (%rdi,%r13)
    000001fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000202: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000209: 	addq	$0x20, %rax
    0000020d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000214: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000021b: 	je	.Ltmp1072 # Offset: 539
.Ltmp1230:
    00000221: 	movq	-0x20(%rax), %r13
    00000225: 	callq	clock@PLT # Offset: 549
    0000022a: 	pxor	%xmm0, %xmm0
    0000022e: 	movq	%rax, end_time(%rip)
    00000235: 	movq	%r13, %rdi
    00000238: 	subq	start_time(%rip), %rax
    0000023f: 	cvtsi2sd	%rax, %xmm0
    00000244: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000024c: 	callq	_Z13record_resultdPKc # Offset: 588
    00000251: 	movq	0x70(%rsp), %rdi
    00000256: 	cmpq	0x18(%rsp), %rdi
    0000025b: 	je	.Ltmp1073 # Offset: 603
    0000025d: 	movq	0x80(%rsp), %rax
    00000265: 	leaq	0x1(%rax), %rsi
    00000269: 	callq	_ZdlPvm@PLT # Offset: 617
.Ltmp1073:
    0000026e: 	movq	0x18(%rsp), %rax
    00000273: 	movq	0x50(%rsp), %r14
    00000278: 	movq	0x58(%rsp), %r13
    0000027d: 	movq	%rax, 0x70(%rsp)
    00000282: 	movq	%r14, %rax
    00000285: 	addq	%r13, %rax
    00000288: 	je	.Ltmp1074 # Offset: 648
    0000028a: 	testq	%r14, %r14
    0000028d: 	je	.Ltmp1075 # Offset: 653
.Ltmp1074:
    00000293: 	movq	%r13, 0x48(%rsp)
    00000298: 	cmpq	$0xf, %r13
    0000029c: 	ja	.Ltmp1076 # Offset: 668
    000002a2: 	cmpq	$0x1, %r13
    000002a6: 	jne	.Ltmp1077 # Offset: 678
    000002ac: 	movzbl	(%r14), %eax
    000002b0: 	movb	%al, 0x80(%rsp)
    000002b7: 	movq	0x18(%rsp), %rax
.Ltmp1216:
    000002bc: 	movq	%r13, 0x78(%rsp)
    000002c1: 	movb	$0x0, (%rax,%r13)
    000002c6: 	movabsq	$0x3fffffffffffffff, %rax
    000002d0: 	subq	0x78(%rsp), %rax
    000002d5: 	cmpq	$0x15, %rax
    000002d9: 	jbe	.Ltmp1078 # Offset: 729
    000002df: 	movq	0x20(%rsp), %rdi
    000002e4: 	movl	$0x16, %edx
    000002e9: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002f0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 752
    000002f5: 	callq	clock@PLT # Offset: 757
    000002fa: 	movl	iterations(%rip), %ecx
    00000300: 	movq	%rax, start_time(%rip)
    00000307: 	testl	%ecx, %ecx
    00000309: 	jle	.Ltmp1079 # Offset: 777
    0000030f: 	movzbl	0x30(%rsp), %eax
    00000314: 	andb	0x2c(%rsp), %al
    00000318: 	xorl	%r13d, %r13d
    0000031b: 	leaq	0x1f40(%rbp), %rbx
    00000322: 	andb	0x34(%rsp), %al
    00000326: 	andb	0x28(%rsp), %al
    0000032a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000331: 	movd	%eax, %xmm0
    00000335: 	punpcklbw	%xmm0, %xmm0
    00000339: 	punpcklwd	%xmm0, %xmm0
    0000033d: 	pshufd	$0x0, %xmm0, %xmm4
    00000342: 	movaps	%xmm4, (%rsp)
    00000346: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1082:
    00000350: 	movq	%rbp, %rax
    00000353: 	pxor	%xmm1, %xmm1
    00000357: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1080:
    00000360: 	movdqu	(%rax), %xmm0
    00000364: 	pand	(%rsp), %xmm0
    00000369: 	addq	$0x10, %rax
    0000036d: 	paddb	%xmm0, %xmm1
    00000371: 	cmpq	%rax, %rbx
    00000374: 	jne	.Ltmp1080 # Offset: 884
    00000376: 	cvttsd2si	init_value(%rip), %edx
    0000037e: 	movdqa	%xmm1, %xmm0
    00000382: 	psrldq	$0x8, %xmm0
    00000387: 	paddb	%xmm0, %xmm1
    0000038b: 	pxor	%xmm0, %xmm0
    0000038f: 	psadbw	%xmm0, %xmm1
    00000393: 	andl	%r15d, %edx
    00000396: 	andb	0x16(%rsp), %dl
    0000039a: 	movd	%xmm1, %eax
    0000039e: 	andb	0x17(%rsp), %dl
    000003a2: 	andl	%r12d, %edx
    000003a5: 	shll	$0x6, %edx
    000003a8: 	cmpb	%al, %dl
    000003aa: 	je	.Ltmp1081 # Offset: 938
    000003ac: 	movl	current_test(%rip), %edx
    000003b2: 	movq	%r14, %rsi
    000003b5: 	movl	$0x1, %edi
    000003ba: 	xorl	%eax, %eax
    000003bc: 	callq	__printf_chk@PLT # Offset: 956
    000003c1: 	movl	iterations(%rip), %ecx
.Ltmp1081:
    000003c7: 	addl	$0x1, %r13d
    000003cb: 	cmpl	%ecx, %r13d
    000003ce: 	jl	.Ltmp1082 # Offset: 974
.Ltmp1079:
    000003d0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003de: 	subq	$0x20, %rax
    000003e2: 	cmpq	%rax, %rbx
    000003e5: 	je	.Ltmp1083 # Offset: 997
    000003eb: 	leaq	0x10(%rbx), %rdi
    000003ef: 	movq	0x78(%rsp), %r13
    000003f4: 	movq	%rdi, (%rbx)
    000003f7: 	movq	0x70(%rsp), %r14
    000003fc: 	movq	%r14, %rax
    000003ff: 	addq	%r13, %rax
    00000402: 	je	.Ltmp1084 # Offset: 1026
    00000404: 	testq	%r14, %r14
    00000407: 	je	.Ltmp1085 # Offset: 1031
.Ltmp1084:
    0000040d: 	movq	%r13, 0x48(%rsp)
    00000412: 	cmpq	$0xf, %r13
    00000416: 	ja	.Ltmp1086 # Offset: 1046
    0000041c: 	cmpq	$0x1, %r13
    00000420: 	jne	.Ltmp1087 # Offset: 1056
    00000426: 	movzbl	(%r14), %eax
    0000042a: 	movb	%al, 0x10(%rbx)
.Ltmp1240:
    0000042d: 	movq	%r13, 0x8(%rbx)
    00000431: 	movb	$0x0, (%rdi,%r13)
    00000436: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000043d: 	addq	$0x20, %rax
    00000441: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1232:
    00000448: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000044f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000456: 	je	.Ltmp1088 # Offset: 1110
.Ltmp1227:
    0000045c: 	movq	-0x20(%rax), %r13
    00000460: 	callq	clock@PLT # Offset: 1120
    00000465: 	pxor	%xmm0, %xmm0
    00000469: 	movq	%rax, end_time(%rip)
    00000470: 	movq	%r13, %rdi
    00000473: 	subq	start_time(%rip), %rax
    0000047a: 	cvtsi2sd	%rax, %xmm0
    0000047f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000487: 	callq	_Z13record_resultdPKc # Offset: 1159
    0000048c: 	movq	0x70(%rsp), %rdi
    00000491: 	cmpq	0x18(%rsp), %rdi
    00000496: 	je	.Ltmp1089 # Offset: 1174
    00000498: 	movq	0x80(%rsp), %rax
    000004a0: 	leaq	0x1(%rax), %rsi
    000004a4: 	callq	_ZdlPvm@PLT # Offset: 1188
.Ltmp1089:
    000004a9: 	movq	0x18(%rsp), %rax
    000004ae: 	movq	0x50(%rsp), %r14
    000004b3: 	movq	0x58(%rsp), %r13
    000004b8: 	movq	%rax, 0x70(%rsp)
    000004bd: 	movq	%r14, %rax
    000004c0: 	addq	%r13, %rax
    000004c3: 	je	.Ltmp1090 # Offset: 1219
    000004c5: 	testq	%r14, %r14
    000004c8: 	je	.Ltmp1091 # Offset: 1224
.Ltmp1090:
    000004ce: 	movq	%r13, 0x48(%rsp)
    000004d3: 	cmpq	$0xf, %r13
    000004d7: 	ja	.Ltmp1092 # Offset: 1239
    000004dd: 	cmpq	$0x1, %r13
    000004e1: 	jne	.Ltmp1093 # Offset: 1249
    000004e7: 	movzbl	(%r14), %eax
    000004eb: 	movb	%al, 0x80(%rsp)
    000004f2: 	movq	0x18(%rsp), %rax
.Ltmp1214:
    000004f7: 	movq	%r13, 0x78(%rsp)
    000004fc: 	movb	$0x0, (%rax,%r13)
    00000501: 	movabsq	$0x3fffffffffffffff, %rax
    0000050b: 	subq	0x78(%rsp), %rax
    00000510: 	cmpq	$0x16, %rax
    00000514: 	jbe	.Ltmp1094 # Offset: 1300
    0000051a: 	movq	0x20(%rsp), %rdi
    0000051f: 	movl	$0x17, %edx
    00000524: 	leaq	DATAat0x3d1ff(%rip), %rsi
    0000052b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1323
    00000530: 	callq	clock@PLT # Offset: 1328
    00000535: 	movl	iterations(%rip), %ecx
    0000053b: 	movq	%rax, start_time(%rip)
    00000542: 	testl	%ecx, %ecx
    00000544: 	jle	.Ltmp1095 # Offset: 1348
    0000054a: 	movzbl	0x30(%rsp), %r14d
    00000550: 	andb	0x2c(%rsp), %r14b
    00000555: 	xorl	%r13d, %r13d
    00000558: 	leaq	0x1f40(%rbp), %rbx
    0000055f: 	andb	0x34(%rsp), %r14b
    00000564: 	andb	0x28(%rsp), %r14b
    00000569: 	movd	%r14d, %xmm0
    0000056e: 	punpcklbw	%xmm0, %xmm0
    00000572: 	punpcklwd	%xmm0, %xmm0
    00000576: 	pshufd	$0x0, %xmm0, %xmm2
    0000057b: 	movaps	%xmm2, (%rsp)
    0000057f: 	nop # Size: 1
.Ltmp1098:
    00000580: 	movq	%rbp, %rax
    00000583: 	pxor	%xmm1, %xmm1
    00000587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1096:
    00000590: 	movdqu	(%rax), %xmm0
    00000594: 	pand	(%rsp), %xmm0
    00000599: 	addq	$0x10, %rax
    0000059d: 	paddb	%xmm0, %xmm1
    000005a1: 	cmpq	%rbx, %rax
    000005a4: 	jne	.Ltmp1096 # Offset: 1444
    000005a6: 	cvttsd2si	init_value(%rip), %edx
    000005ae: 	movdqa	%xmm1, %xmm0
    000005b2: 	psrldq	$0x8, %xmm0
    000005b7: 	paddb	%xmm0, %xmm1
    000005bb: 	pxor	%xmm0, %xmm0
    000005bf: 	psadbw	%xmm0, %xmm1
    000005c3: 	andl	%r14d, %edx
    000005c6: 	movd	%xmm1, %eax
    000005ca: 	shll	$0x6, %edx
    000005cd: 	cmpb	%al, %dl
    000005cf: 	je	.Ltmp1097 # Offset: 1487
    000005d1: 	movl	current_test(%rip), %edx
    000005d7: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000005de: 	movl	$0x1, %edi
    000005e3: 	xorl	%eax, %eax
    000005e5: 	callq	__printf_chk@PLT # Offset: 1509
    000005ea: 	movl	iterations(%rip), %ecx
.Ltmp1097:
    000005f0: 	addl	$0x1, %r13d
    000005f4: 	cmpl	%ecx, %r13d
    000005f7: 	jl	.Ltmp1098 # Offset: 1527
.Ltmp1095:
    000005f9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000600: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000607: 	subq	$0x20, %rax
    0000060b: 	cmpq	%rax, %rbx
    0000060e: 	je	.Ltmp1099 # Offset: 1550
    00000614: 	leaq	0x10(%rbx), %rdi
    00000618: 	movq	0x78(%rsp), %r13
    0000061d: 	movq	%rdi, (%rbx)
    00000620: 	movq	0x70(%rsp), %r14
    00000625: 	movq	%r14, %rax
    00000628: 	addq	%r13, %rax
    0000062b: 	je	.Ltmp1100 # Offset: 1579
    0000062d: 	testq	%r14, %r14
    00000630: 	je	.Ltmp1101 # Offset: 1584
.Ltmp1100:
    00000636: 	movq	%r13, 0x48(%rsp)
    0000063b: 	cmpq	$0xf, %r13
    0000063f: 	ja	.Ltmp1102 # Offset: 1599
    00000645: 	cmpq	$0x1, %r13
    00000649: 	jne	.Ltmp1103 # Offset: 1609
    0000064f: 	movzbl	(%r14), %eax
    00000653: 	movb	%al, 0x10(%rbx)
.Ltmp1235:
    00000656: 	movq	%r13, 0x8(%rbx)
    0000065a: 	movb	$0x0, (%rdi,%r13)
    0000065f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000666: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000066d: 	addq	$0x20, %rax
    00000671: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000678: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000067f: 	je	.Ltmp1104 # Offset: 1663
.Ltmp1229:
    00000685: 	movq	-0x20(%rax), %r13
    00000689: 	callq	clock@PLT # Offset: 1673
    0000068e: 	pxor	%xmm0, %xmm0
    00000692: 	movq	%rax, end_time(%rip)
    00000699: 	movq	%r13, %rdi
    0000069c: 	subq	start_time(%rip), %rax
    000006a3: 	cvtsi2sd	%rax, %xmm0
    000006a8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006b0: 	callq	_Z13record_resultdPKc # Offset: 1712
    000006b5: 	movq	0x70(%rsp), %rdi
    000006ba: 	cmpq	0x18(%rsp), %rdi
    000006bf: 	je	.Ltmp1105 # Offset: 1727
    000006c1: 	movq	0x80(%rsp), %rax
    000006c9: 	leaq	0x1(%rax), %rsi
    000006cd: 	callq	_ZdlPvm@PLT # Offset: 1741
.Ltmp1105:
    000006d2: 	movq	0x18(%rsp), %rax
    000006d7: 	movq	0x50(%rsp), %r14
    000006dc: 	movq	0x58(%rsp), %r13
    000006e1: 	movq	%rax, 0x70(%rsp)
    000006e6: 	movq	%r14, %rax
    000006e9: 	addq	%r13, %rax
    000006ec: 	je	.Ltmp1106 # Offset: 1772
    000006ee: 	testq	%r14, %r14
    000006f1: 	je	.Ltmp1107 # Offset: 1777
.Ltmp1106:
    000006f7: 	movq	%r13, 0x48(%rsp)
    000006fc: 	cmpq	$0xf, %r13
    00000700: 	ja	.Ltmp1108 # Offset: 1792
    00000706: 	cmpq	$0x1, %r13
    0000070a: 	jne	.Ltmp1109 # Offset: 1802
    00000710: 	movzbl	(%r14), %eax
    00000714: 	movb	%al, 0x80(%rsp)
    0000071b: 	movq	0x18(%rsp), %rax
.Ltmp1220:
    00000720: 	movq	%r13, 0x78(%rsp)
    00000725: 	movb	$0x0, (%rax,%r13)
    0000072a: 	movabsq	$0x3fffffffffffffff, %rax
    00000734: 	subq	0x78(%rsp), %rax
    00000739: 	cmpq	$0xb, %rax
    0000073d: 	jbe	.Ltmp1110 # Offset: 1853
    00000743: 	movq	0x20(%rsp), %rdi
    00000748: 	movl	$0xc, %edx
    0000074d: 	leaq	DATAat0x3d220(%rip), %rsi
    00000754: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1876
    00000759: 	callq	clock@PLT # Offset: 1881
    0000075e: 	movl	iterations(%rip), %ecx
    00000764: 	xorl	%r13d, %r13d
    00000767: 	leaq	0x1f40(%rbp), %rbx
    0000076e: 	movq	%rax, start_time(%rip)
    00000775: 	testl	%ecx, %ecx
    00000777: 	jle	.Ltmp1111 # Offset: 1911
    0000077d: 	movd	%r12d, %xmm0
    00000782: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000789: 	punpcklbw	%xmm0, %xmm0
    0000078d: 	punpcklwd	%xmm0, %xmm0
    00000791: 	pshufd	$0x0, %xmm0, %xmm3
    00000796: 	movaps	%xmm3, (%rsp)
    0000079a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1114:
    000007a0: 	movq	%rbp, %rax
    000007a3: 	pxor	%xmm1, %xmm1
    000007a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1112:
    000007b0: 	movdqu	(%rax), %xmm0
    000007b4: 	por	(%rsp), %xmm0
    000007b9: 	addq	$0x10, %rax
    000007bd: 	paddb	%xmm0, %xmm1
    000007c1: 	cmpq	%rax, %rbx
    000007c4: 	jne	.Ltmp1112 # Offset: 1988
    000007c6: 	cvttsd2si	init_value(%rip), %edx
    000007ce: 	movdqa	%xmm1, %xmm0
    000007d2: 	psrldq	$0x8, %xmm0
    000007d7: 	paddb	%xmm0, %xmm1
    000007db: 	pxor	%xmm0, %xmm0
    000007df: 	psadbw	%xmm0, %xmm1
    000007e3: 	orl	%r12d, %edx
    000007e6: 	movd	%xmm1, %eax
    000007ea: 	shll	$0x6, %edx
    000007ed: 	cmpb	%al, %dl
    000007ef: 	je	.Ltmp1113 # Offset: 2031
    000007f1: 	movl	current_test(%rip), %edx
    000007f7: 	movq	%r14, %rsi
    000007fa: 	movl	$0x1, %edi
    000007ff: 	xorl	%eax, %eax
    00000801: 	callq	__printf_chk@PLT # Offset: 2049
    00000806: 	movl	iterations(%rip), %ecx
.Ltmp1113:
    0000080c: 	addl	$0x1, %r13d
    00000810: 	cmpl	%ecx, %r13d
    00000813: 	jl	.Ltmp1114 # Offset: 2067
.Ltmp1111:
    00000815: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000081c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000823: 	subq	$0x20, %rax
    00000827: 	cmpq	%rax, %rbx
    0000082a: 	je	.Ltmp1115 # Offset: 2090
    00000830: 	leaq	0x10(%rbx), %rdi
    00000834: 	movq	0x78(%rsp), %r13
    00000839: 	movq	%rdi, (%rbx)
    0000083c: 	movq	0x70(%rsp), %r14
    00000841: 	movq	%r14, %rax
    00000844: 	addq	%r13, %rax
    00000847: 	je	.Ltmp1116 # Offset: 2119
    00000849: 	testq	%r14, %r14
    0000084c: 	je	.Ltmp1117 # Offset: 2124
.Ltmp1116:
    00000852: 	movq	%r13, 0x48(%rsp)
    00000857: 	cmpq	$0xf, %r13
    0000085b: 	ja	.Ltmp1118 # Offset: 2139
    00000861: 	cmpq	$0x1, %r13
    00000865: 	jne	.Ltmp1119 # Offset: 2149
    0000086b: 	movzbl	(%r14), %eax
    0000086f: 	movb	%al, 0x10(%rbx)
.Ltmp1246:
    00000872: 	movq	%r13, 0x8(%rbx)
    00000876: 	movb	$0x0, (%rdi,%r13)
    0000087b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000882: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000889: 	addq	$0x20, %rax
    0000088d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000894: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000089b: 	je	.Ltmp1120 # Offset: 2203
.Ltmp1226:
    000008a1: 	movq	-0x20(%rax), %r13
    000008a5: 	callq	clock@PLT # Offset: 2213
    000008aa: 	pxor	%xmm0, %xmm0
    000008ae: 	movq	%rax, end_time(%rip)
    000008b5: 	movq	%r13, %rdi
    000008b8: 	subq	start_time(%rip), %rax
    000008bf: 	cvtsi2sd	%rax, %xmm0
    000008c4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000008cc: 	callq	_Z13record_resultdPKc # Offset: 2252
    000008d1: 	movq	0x70(%rsp), %rdi
    000008d6: 	cmpq	0x18(%rsp), %rdi
    000008db: 	je	.Ltmp1121 # Offset: 2267
    000008dd: 	movq	0x80(%rsp), %rax
    000008e5: 	leaq	0x1(%rax), %rsi
    000008e9: 	callq	_ZdlPvm@PLT # Offset: 2281
.Ltmp1121:
    000008ee: 	movq	0x18(%rsp), %rax
    000008f3: 	movq	0x50(%rsp), %r14
    000008f8: 	movq	0x58(%rsp), %r13
    000008fd: 	movq	%rax, 0x70(%rsp)
    00000902: 	movq	%r14, %rax
    00000905: 	addq	%r13, %rax
    00000908: 	je	.Ltmp1122 # Offset: 2312
    0000090a: 	testq	%r14, %r14
    0000090d: 	je	.Ltmp1123 # Offset: 2317
.Ltmp1122:
    00000913: 	movq	%r13, 0x48(%rsp)
    00000918: 	cmpq	$0xf, %r13
    0000091c: 	ja	.Ltmp1124 # Offset: 2332
    00000922: 	cmpq	$0x1, %r13
    00000926: 	jne	.Ltmp1125 # Offset: 2342
    0000092c: 	movzbl	(%r14), %eax
    00000930: 	movb	%al, 0x80(%rsp)
    00000937: 	movq	0x18(%rsp), %rax
.Ltmp1218:
    0000093c: 	movq	%r13, 0x78(%rsp)
    00000941: 	movb	$0x0, (%rax,%r13)
    00000946: 	movabsq	$0x3fffffffffffffff, %rax
    00000950: 	subq	0x78(%rsp), %rax
    00000955: 	cmpq	$0x14, %rax
    00000959: 	jbe	.Ltmp1126 # Offset: 2393
    0000095f: 	movq	0x20(%rsp), %rdi
    00000964: 	movl	$0x15, %edx
    00000969: 	leaq	DATAat0x3d217(%rip), %rsi
    00000970: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2416
    00000975: 	callq	clock@PLT # Offset: 2421
    0000097a: 	movl	iterations(%rip), %ecx
    00000980: 	movq	%rax, start_time(%rip)
    00000987: 	testl	%ecx, %ecx
    00000989: 	jle	.Ltmp1127 # Offset: 2441
    0000098f: 	movzbl	0x30(%rsp), %eax
    00000994: 	orb	0x2c(%rsp), %al
    00000998: 	xorl	%r13d, %r13d
    0000099b: 	leaq	0x1f40(%rbp), %rbx
    000009a2: 	orb	0x34(%rsp), %al
    000009a6: 	orb	0x28(%rsp), %al
    000009aa: 	leaq	DATAat0x3d1d8(%rip), %r14
    000009b1: 	movd	%eax, %xmm0
    000009b5: 	punpcklbw	%xmm0, %xmm0
    000009b9: 	punpcklwd	%xmm0, %xmm0
    000009bd: 	pshufd	$0x0, %xmm0, %xmm4
    000009c2: 	movaps	%xmm4, (%rsp)
    000009c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1130:
    000009d0: 	movq	%rbp, %rax
    000009d3: 	pxor	%xmm1, %xmm1
    000009d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1128:
    000009e0: 	movdqu	(%rax), %xmm0
    000009e4: 	por	(%rsp), %xmm0
    000009e9: 	addq	$0x10, %rax
    000009ed: 	paddb	%xmm0, %xmm1
    000009f1: 	cmpq	%rbx, %rax
    000009f4: 	jne	.Ltmp1128 # Offset: 2548
    000009f6: 	cvttsd2si	init_value(%rip), %edx
    000009fe: 	movdqa	%xmm1, %xmm0
    00000a02: 	psrldq	$0x8, %xmm0
    00000a07: 	paddb	%xmm0, %xmm1
    00000a0b: 	pxor	%xmm0, %xmm0
    00000a0f: 	psadbw	%xmm0, %xmm1
    00000a13: 	orl	%r15d, %edx
    00000a16: 	orb	0x16(%rsp), %dl
    00000a1a: 	movd	%xmm1, %eax
    00000a1e: 	orb	0x17(%rsp), %dl
    00000a22: 	orl	%r12d, %edx
    00000a25: 	shll	$0x6, %edx
    00000a28: 	cmpb	%al, %dl
    00000a2a: 	je	.Ltmp1129 # Offset: 2602
    00000a2c: 	movl	current_test(%rip), %edx
    00000a32: 	movq	%r14, %rsi
    00000a35: 	movl	$0x1, %edi
    00000a3a: 	xorl	%eax, %eax
    00000a3c: 	callq	__printf_chk@PLT # Offset: 2620
    00000a41: 	movl	iterations(%rip), %ecx
.Ltmp1129:
    00000a47: 	addl	$0x1, %r13d
    00000a4b: 	cmpl	%ecx, %r13d
    00000a4e: 	jl	.Ltmp1130 # Offset: 2638
.Ltmp1127:
    00000a50: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a57: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a5e: 	subq	$0x20, %rax
    00000a62: 	cmpq	%rax, %rbx
    00000a65: 	je	.Ltmp1131 # Offset: 2661
    00000a6b: 	leaq	0x10(%rbx), %rdi
    00000a6f: 	movq	0x78(%rsp), %r13
    00000a74: 	movq	%rdi, (%rbx)
    00000a77: 	movq	0x70(%rsp), %r14
    00000a7c: 	movq	%r14, %rax
    00000a7f: 	addq	%r13, %rax
    00000a82: 	je	.Ltmp1132 # Offset: 2690
    00000a84: 	testq	%r14, %r14
    00000a87: 	je	.Ltmp1133 # Offset: 2695
.Ltmp1132:
    00000a8d: 	movq	%r13, 0x48(%rsp)
    00000a92: 	cmpq	$0xf, %r13
    00000a96: 	ja	.Ltmp1134 # Offset: 2710
    00000a9c: 	cmpq	$0x1, %r13
    00000aa0: 	jne	.Ltmp1135 # Offset: 2720
    00000aa6: 	movzbl	(%r14), %eax
    00000aaa: 	movb	%al, 0x10(%rbx)
.Ltmp1237:
    00000aad: 	movq	%r13, 0x8(%rbx)
    00000ab1: 	movb	$0x0, (%rdi,%r13)
    00000ab6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000abd: 	addq	$0x20, %rax
    00000ac1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1233:
    00000ac8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000acf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ad6: 	je	.Ltmp1136 # Offset: 2774
.Ltmp1231:
    00000adc: 	movq	-0x20(%rax), %r13
    00000ae0: 	callq	clock@PLT # Offset: 2784
    00000ae5: 	pxor	%xmm0, %xmm0
    00000ae9: 	movq	%rax, end_time(%rip)
    00000af0: 	movq	%r13, %rdi
    00000af3: 	subq	start_time(%rip), %rax
    00000afa: 	cvtsi2sd	%rax, %xmm0
    00000aff: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b07: 	callq	_Z13record_resultdPKc # Offset: 2823
    00000b0c: 	movq	0x70(%rsp), %rdi
    00000b11: 	cmpq	0x18(%rsp), %rdi
    00000b16: 	je	.Ltmp1137 # Offset: 2838
    00000b18: 	movq	0x80(%rsp), %rax
    00000b20: 	leaq	0x1(%rax), %rsi
    00000b24: 	callq	_ZdlPvm@PLT # Offset: 2852
.Ltmp1137:
    00000b29: 	movq	0x18(%rsp), %rax
    00000b2e: 	movq	0x50(%rsp), %r14
    00000b33: 	movq	0x58(%rsp), %r13
    00000b38: 	movq	%rax, 0x70(%rsp)
    00000b3d: 	movq	%r14, %rax
    00000b40: 	addq	%r13, %rax
    00000b43: 	je	.Ltmp1138 # Offset: 2883
    00000b45: 	testq	%r14, %r14
    00000b48: 	je	.Ltmp1139 # Offset: 2888
.Ltmp1138:
    00000b4e: 	movq	%r13, 0x48(%rsp)
    00000b53: 	cmpq	$0xf, %r13
    00000b57: 	ja	.Ltmp1140 # Offset: 2903
    00000b5d: 	cmpq	$0x1, %r13
    00000b61: 	jne	.Ltmp1141 # Offset: 2913
    00000b67: 	movzbl	(%r14), %eax
    00000b6b: 	movb	%al, 0x80(%rsp)
    00000b72: 	movq	0x18(%rsp), %rax
.Ltmp1212:
    00000b77: 	movq	%r13, 0x78(%rsp)
    00000b7c: 	movb	$0x0, (%rax,%r13)
    00000b81: 	movabsq	$0x3fffffffffffffff, %rax
    00000b8b: 	subq	0x78(%rsp), %rax
    00000b90: 	cmpq	$0x15, %rax
    00000b94: 	jbe	.Ltmp1142 # Offset: 2964
    00000b9a: 	movq	0x20(%rsp), %rdi
    00000b9f: 	movl	$0x16, %edx
    00000ba4: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000bab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2987
    00000bb0: 	callq	clock@PLT # Offset: 2992
    00000bb5: 	movl	iterations(%rip), %ecx
    00000bbb: 	movq	%rax, start_time(%rip)
    00000bc2: 	testl	%ecx, %ecx
    00000bc4: 	jle	.Ltmp1143 # Offset: 3012
    00000bca: 	movzbl	0x30(%rsp), %r14d
    00000bd0: 	orb	0x2c(%rsp), %r14b
    00000bd5: 	xorl	%r13d, %r13d
    00000bd8: 	leaq	0x1f40(%rbp), %rbx
    00000bdf: 	orb	0x34(%rsp), %r14b
    00000be4: 	orb	0x28(%rsp), %r14b
    00000be9: 	movd	%r14d, %xmm0
    00000bee: 	punpcklbw	%xmm0, %xmm0
    00000bf2: 	punpcklwd	%xmm0, %xmm0
    00000bf6: 	pshufd	$0x0, %xmm0, %xmm2
    00000bfb: 	movaps	%xmm2, (%rsp)
    00000bff: 	nop # Size: 1
.Ltmp1146:
    00000c00: 	movq	%rbp, %rax
    00000c03: 	pxor	%xmm1, %xmm1
    00000c07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1144:
    00000c10: 	movdqu	(%rax), %xmm0
    00000c14: 	por	(%rsp), %xmm0
    00000c19: 	addq	$0x10, %rax
    00000c1d: 	paddb	%xmm0, %xmm1
    00000c21: 	cmpq	%rbx, %rax
    00000c24: 	jne	.Ltmp1144 # Offset: 3108
    00000c26: 	cvttsd2si	init_value(%rip), %edx
    00000c2e: 	movdqa	%xmm1, %xmm0
    00000c32: 	psrldq	$0x8, %xmm0
    00000c37: 	paddb	%xmm0, %xmm1
    00000c3b: 	pxor	%xmm0, %xmm0
    00000c3f: 	psadbw	%xmm0, %xmm1
    00000c43: 	orl	%r14d, %edx
    00000c46: 	movd	%xmm1, %eax
    00000c4a: 	shll	$0x6, %edx
    00000c4d: 	cmpb	%al, %dl
    00000c4f: 	je	.Ltmp1145 # Offset: 3151
    00000c51: 	movl	current_test(%rip), %edx
    00000c57: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c5e: 	movl	$0x1, %edi
    00000c63: 	xorl	%eax, %eax
    00000c65: 	callq	__printf_chk@PLT # Offset: 3173
    00000c6a: 	movl	iterations(%rip), %ecx
.Ltmp1145:
    00000c70: 	addl	$0x1, %r13d
    00000c74: 	cmpl	%ecx, %r13d
    00000c77: 	jl	.Ltmp1146 # Offset: 3191
.Ltmp1143:
    00000c79: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c80: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000c87: 	subq	$0x20, %rax
    00000c8b: 	cmpq	%rax, %rbx
    00000c8e: 	je	.Ltmp1147 # Offset: 3214
    00000c94: 	leaq	0x10(%rbx), %rdi
    00000c98: 	movq	0x78(%rsp), %r13
    00000c9d: 	movq	%rdi, (%rbx)
    00000ca0: 	movq	0x70(%rsp), %r14
    00000ca5: 	movq	%r14, %rax
    00000ca8: 	addq	%r13, %rax
    00000cab: 	je	.Ltmp1148 # Offset: 3243
    00000cad: 	testq	%r14, %r14
    00000cb0: 	je	.Ltmp1149 # Offset: 3248
.Ltmp1148:
    00000cb6: 	movq	%r13, 0x48(%rsp)
    00000cbb: 	cmpq	$0xf, %r13
    00000cbf: 	ja	.Ltmp1150 # Offset: 3263
    00000cc5: 	cmpq	$0x1, %r13
    00000cc9: 	jne	.Ltmp1151 # Offset: 3273
    00000ccf: 	movzbl	(%r14), %eax
    00000cd3: 	movb	%al, 0x10(%rbx)
.Ltmp1244:
    00000cd6: 	movq	%r13, 0x8(%rbx)
    00000cda: 	movb	$0x0, (%rdi,%r13)
    00000cdf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ce6: 	addq	$0x20, %rax
    00000cea: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1228:
    00000cf1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000cf8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cff: 	je	.Ltmp1152 # Offset: 3327
.Ltmp1224:
    00000d05: 	movq	-0x20(%rax), %r13
    00000d09: 	callq	clock@PLT # Offset: 3337
    00000d0e: 	pxor	%xmm0, %xmm0
    00000d12: 	movq	%rax, end_time(%rip)
    00000d19: 	movq	%r13, %rdi
    00000d1c: 	subq	start_time(%rip), %rax
    00000d23: 	cvtsi2sd	%rax, %xmm0
    00000d28: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d30: 	callq	_Z13record_resultdPKc # Offset: 3376
    00000d35: 	movq	0x70(%rsp), %rdi
    00000d3a: 	cmpq	0x18(%rsp), %rdi
    00000d3f: 	je	.Ltmp1153 # Offset: 3391
    00000d41: 	movq	0x80(%rsp), %rax
    00000d49: 	leaq	0x1(%rax), %rsi
    00000d4d: 	callq	_ZdlPvm@PLT # Offset: 3405
.Ltmp1153:
    00000d52: 	movq	0x18(%rsp), %rax
    00000d57: 	movq	0x50(%rsp), %r14
    00000d5c: 	movq	0x58(%rsp), %r13
    00000d61: 	movq	%rax, 0x70(%rsp)
    00000d66: 	movq	%r14, %rax
    00000d69: 	addq	%r13, %rax
    00000d6c: 	je	.Ltmp1154 # Offset: 3436
    00000d6e: 	testq	%r14, %r14
    00000d71: 	je	.Ltmp1155 # Offset: 3441
.Ltmp1154:
    00000d77: 	movq	%r13, 0x48(%rsp)
    00000d7c: 	cmpq	$0xf, %r13
    00000d80: 	ja	.Ltmp1156 # Offset: 3456
    00000d86: 	cmpq	$0x1, %r13
    00000d8a: 	jne	.Ltmp1157 # Offset: 3466
    00000d90: 	movzbl	(%r14), %eax
    00000d94: 	movb	%al, 0x80(%rsp)
    00000d9b: 	movq	0x18(%rsp), %rax
.Ltmp1210:
    00000da0: 	movq	%r13, 0x78(%rsp)
    00000da5: 	movb	$0x0, (%rax,%r13)
    00000daa: 	movabsq	$0x3fffffffffffffff, %rax
    00000db4: 	subq	0x78(%rsp), %rax
    00000db9: 	cmpq	$0xc, %rax
    00000dbd: 	jbe	.Ltmp1158 # Offset: 3517
    00000dc3: 	movq	0x20(%rsp), %rdi
    00000dc8: 	movl	$0xd, %edx
    00000dcd: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000dd4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3540
    00000dd9: 	callq	clock@PLT # Offset: 3545
    00000dde: 	movl	iterations(%rip), %ecx
    00000de4: 	xorl	%r13d, %r13d
    00000de7: 	leaq	0x1f40(%rbp), %rbx
    00000dee: 	movq	%rax, start_time(%rip)
    00000df5: 	testl	%ecx, %ecx
    00000df7: 	jle	.Ltmp1159 # Offset: 3575
    00000dfd: 	movd	%r12d, %xmm0
    00000e02: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000e09: 	punpcklbw	%xmm0, %xmm0
    00000e0d: 	punpcklwd	%xmm0, %xmm0
    00000e11: 	pshufd	$0x0, %xmm0, %xmm3
    00000e16: 	movaps	%xmm3, (%rsp)
    00000e1a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1162:
    00000e20: 	movq	%rbp, %rax
    00000e23: 	pxor	%xmm1, %xmm1
    00000e27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1160:
    00000e30: 	movdqu	(%rax), %xmm0
    00000e34: 	pxor	(%rsp), %xmm0
    00000e39: 	addq	$0x10, %rax
    00000e3d: 	paddb	%xmm0, %xmm1
    00000e41: 	cmpq	%rax, %rbx
    00000e44: 	jne	.Ltmp1160 # Offset: 3652
    00000e46: 	cvttsd2si	init_value(%rip), %edx
    00000e4e: 	movdqa	%xmm1, %xmm0
    00000e52: 	psrldq	$0x8, %xmm0
    00000e57: 	paddb	%xmm0, %xmm1
    00000e5b: 	pxor	%xmm0, %xmm0
    00000e5f: 	psadbw	%xmm0, %xmm1
    00000e63: 	xorl	%r12d, %edx
    00000e66: 	movd	%xmm1, %eax
    00000e6a: 	shll	$0x6, %edx
    00000e6d: 	cmpb	%al, %dl
    00000e6f: 	je	.Ltmp1161 # Offset: 3695
    00000e71: 	movl	current_test(%rip), %edx
    00000e77: 	movq	%r14, %rsi
    00000e7a: 	movl	$0x1, %edi
    00000e7f: 	xorl	%eax, %eax
    00000e81: 	callq	__printf_chk@PLT # Offset: 3713
    00000e86: 	movl	iterations(%rip), %ecx
.Ltmp1161:
    00000e8c: 	addl	$0x1, %r13d
    00000e90: 	cmpl	%ecx, %r13d
    00000e93: 	jl	.Ltmp1162 # Offset: 3731
.Ltmp1159:
    00000e95: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e9c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000ea3: 	subq	$0x20, %rax
    00000ea7: 	cmpq	%rax, %rbx
    00000eaa: 	je	.Ltmp1163 # Offset: 3754
    00000eb0: 	leaq	0x10(%rbx), %rdi
    00000eb4: 	movq	0x78(%rsp), %r13
    00000eb9: 	movq	%rdi, (%rbx)
    00000ebc: 	movq	0x70(%rsp), %r14
    00000ec1: 	movq	%r14, %rax
    00000ec4: 	addq	%r13, %rax
    00000ec7: 	je	.Ltmp1164 # Offset: 3783
    00000ec9: 	testq	%r14, %r14
    00000ecc: 	je	.Ltmp1165 # Offset: 3788
.Ltmp1164:
    00000ed2: 	movq	%r13, 0x48(%rsp)
    00000ed7: 	cmpq	$0xf, %r13
    00000edb: 	ja	.Ltmp1166 # Offset: 3803
    00000ee1: 	cmpq	$0x1, %r13
    00000ee5: 	jne	.Ltmp1167 # Offset: 3813
    00000eeb: 	movzbl	(%r14), %eax
    00000eef: 	movb	%al, 0x10(%rbx)
.Ltmp1238:
    00000ef2: 	movq	%r13, 0x8(%rbx)
    00000ef6: 	movb	$0x0, (%rdi,%r13)
    00000efb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f02: 	addq	$0x20, %rax
    00000f06: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1223:
    00000f0d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f14: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f1b: 	je	.Ltmp1168 # Offset: 3867
.Ltmp1221:
    00000f21: 	movq	-0x20(%rax), %r13
    00000f25: 	callq	clock@PLT # Offset: 3877
    00000f2a: 	pxor	%xmm0, %xmm0
    00000f2e: 	movq	%rax, end_time(%rip)
    00000f35: 	movq	%r13, %rdi
    00000f38: 	subq	start_time(%rip), %rax
    00000f3f: 	cvtsi2sd	%rax, %xmm0
    00000f44: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000f4c: 	callq	_Z13record_resultdPKc # Offset: 3916
    00000f51: 	movq	0x70(%rsp), %rdi
    00000f56: 	cmpq	0x18(%rsp), %rdi
    00000f5b: 	je	.Ltmp1169 # Offset: 3931
    00000f5d: 	movq	0x80(%rsp), %rax
    00000f65: 	leaq	0x1(%rax), %rsi
    00000f69: 	callq	_ZdlPvm@PLT # Offset: 3945
.Ltmp1169:
    00000f6e: 	movq	0x18(%rsp), %rax
    00000f73: 	movq	0x50(%rsp), %r14
    00000f78: 	movq	0x58(%rsp), %r13
    00000f7d: 	movq	%rax, 0x70(%rsp)
    00000f82: 	movq	%r14, %rax
    00000f85: 	addq	%r13, %rax
    00000f88: 	je	.Ltmp1170 # Offset: 3976
    00000f8a: 	testq	%r14, %r14
    00000f8d: 	je	.Ltmp1171 # Offset: 3981
.Ltmp1170:
    00000f93: 	movq	%r13, 0x48(%rsp)
    00000f98: 	cmpq	$0xf, %r13
    00000f9c: 	ja	.Ltmp1172 # Offset: 3996
    00000fa2: 	cmpq	$0x1, %r13
    00000fa6: 	jne	.Ltmp1173 # Offset: 4006
    00000fac: 	movzbl	(%r14), %eax
    00000fb0: 	movb	%al, 0x80(%rsp)
    00000fb7: 	movq	0x18(%rsp), %rax
.Ltmp1208:
    00000fbc: 	movq	%r13, 0x78(%rsp)
    00000fc1: 	movb	$0x0, (%rax,%r13)
    00000fc6: 	movabsq	$0x3fffffffffffffff, %rax
    00000fd0: 	subq	0x78(%rsp), %rax
    00000fd5: 	cmpq	$0x15, %rax
    00000fd9: 	jbe	.Ltmp1174 # Offset: 4057
    00000fdf: 	movq	0x20(%rsp), %rdi
    00000fe4: 	movl	$0x16, %edx
    00000fe9: 	leaq	DATAat0x3d244(%rip), %rsi
    00000ff0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4080
    00000ff5: 	callq	clock@PLT # Offset: 4085
    00000ffa: 	movl	iterations(%rip), %ecx
    00001000: 	movq	%rax, start_time(%rip)
    00001007: 	testl	%ecx, %ecx
    00001009: 	jle	.Ltmp1175 # Offset: 4105
    0000100f: 	movzbl	0x30(%rsp), %eax
    00001014: 	xorb	0x2c(%rsp), %al
    00001018: 	xorl	%r13d, %r13d
    0000101b: 	leaq	0x1f40(%rbp), %rbx
    00001022: 	xorb	0x34(%rsp), %al
    00001026: 	xorb	0x28(%rsp), %al
    0000102a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001031: 	movd	%eax, %xmm0
    00001035: 	punpcklbw	%xmm0, %xmm0
    00001039: 	punpcklwd	%xmm0, %xmm0
    0000103d: 	pshufd	$0x0, %xmm0, %xmm4
    00001042: 	movaps	%xmm4, (%rsp)
    00001046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1178:
    00001050: 	movq	%rbp, %rax
    00001053: 	pxor	%xmm1, %xmm1
    00001057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1176:
    00001060: 	movdqu	(%rax), %xmm0
    00001064: 	pxor	(%rsp), %xmm0
    00001069: 	addq	$0x10, %rax
    0000106d: 	paddb	%xmm0, %xmm1
    00001071: 	cmpq	%rbx, %rax
    00001074: 	jne	.Ltmp1176 # Offset: 4212
    00001076: 	cvttsd2si	init_value(%rip), %edx
    0000107e: 	movdqa	%xmm1, %xmm0
    00001082: 	psrldq	$0x8, %xmm0
    00001087: 	paddb	%xmm0, %xmm1
    0000108b: 	pxor	%xmm0, %xmm0
    0000108f: 	psadbw	%xmm0, %xmm1
    00001093: 	xorl	%r15d, %edx
    00001096: 	xorb	0x16(%rsp), %dl
    0000109a: 	movd	%xmm1, %eax
    0000109e: 	xorb	0x17(%rsp), %dl
    000010a2: 	xorl	%r12d, %edx
    000010a5: 	shll	$0x6, %edx
    000010a8: 	cmpb	%al, %dl
    000010aa: 	je	.Ltmp1177 # Offset: 4266
    000010ac: 	movl	current_test(%rip), %edx
    000010b2: 	movq	%r14, %rsi
    000010b5: 	movl	$0x1, %edi
    000010ba: 	xorl	%eax, %eax
    000010bc: 	callq	__printf_chk@PLT # Offset: 4284
    000010c1: 	movl	iterations(%rip), %ecx
.Ltmp1177:
    000010c7: 	addl	$0x1, %r13d
    000010cb: 	cmpl	%ecx, %r13d
    000010ce: 	jl	.Ltmp1178 # Offset: 4302
.Ltmp1175:
    000010d0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000010de: 	subq	$0x20, %rax
    000010e2: 	cmpq	%rax, %rbx
    000010e5: 	je	.Ltmp1179 # Offset: 4325
    000010eb: 	leaq	0x10(%rbx), %rdi
    000010ef: 	movq	0x78(%rsp), %r12
    000010f4: 	movq	%rdi, (%rbx)
    000010f7: 	movq	0x70(%rsp), %r13
    000010fc: 	movq	%r13, %rax
    000010ff: 	addq	%r12, %rax
    00001102: 	je	.Ltmp1180 # Offset: 4354
    00001104: 	testq	%r13, %r13
    00001107: 	je	.Ltmp1181 # Offset: 4359
.Ltmp1180:
    0000110d: 	movq	%r12, 0x48(%rsp)
    00001112: 	cmpq	$0xf, %r12
    00001116: 	ja	.Ltmp1182 # Offset: 4374
    0000111c: 	cmpq	$0x1, %r12
    00001120: 	jne	.Ltmp1183 # Offset: 4384
    00001126: 	movzbl	(%r13), %eax
    0000112b: 	movb	%al, 0x10(%rbx)
.Ltmp1241:
    0000112e: 	movq	%r12, 0x8(%rbx)
    00001132: 	movb	$0x0, (%rdi,%r12)
    00001137: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000113e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001145: 	addq	$0x20, %rax
    00001149: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001150: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001157: 	je	.Ltmp1184 # Offset: 4439
.Ltmp1222:
    0000115d: 	movq	-0x20(%rax), %r12
    00001161: 	callq	clock@PLT # Offset: 4449
    00001166: 	pxor	%xmm0, %xmm0
    0000116a: 	movq	%rax, end_time(%rip)
    00001171: 	movq	%r12, %rdi
    00001174: 	subq	start_time(%rip), %rax
    0000117b: 	cvtsi2sd	%rax, %xmm0
    00001180: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001188: 	callq	_Z13record_resultdPKc # Offset: 4488
    0000118d: 	movq	0x70(%rsp), %rdi
    00001192: 	cmpq	0x18(%rsp), %rdi
    00001197: 	je	.Ltmp1185 # Offset: 4503
    00001199: 	movq	0x80(%rsp), %rax
    000011a1: 	leaq	0x1(%rax), %rsi
    000011a5: 	callq	_ZdlPvm@PLT # Offset: 4517
.Ltmp1185:
    000011aa: 	movq	0x18(%rsp), %rax
    000011af: 	movq	0x50(%rsp), %r13
    000011b4: 	movq	0x58(%rsp), %r12
    000011b9: 	movq	%rax, 0x70(%rsp)
    000011be: 	movq	%r13, %rax
    000011c1: 	addq	%r12, %rax
    000011c4: 	je	.Ltmp1186 # Offset: 4548
    000011c6: 	testq	%r13, %r13
    000011c9: 	je	.Ltmp1187 # Offset: 4553
.Ltmp1186:
    000011cf: 	movq	%r12, 0x48(%rsp)
    000011d4: 	cmpq	$0xf, %r12
    000011d8: 	ja	.Ltmp1188 # Offset: 4568
    000011de: 	cmpq	$0x1, %r12
    000011e2: 	jne	.Ltmp1189 # Offset: 4578
    000011e8: 	movzbl	(%r13), %eax
    000011ed: 	movb	%al, 0x80(%rsp)
    000011f4: 	movq	0x18(%rsp), %rax
.Ltmp1206:
    000011f9: 	movq	%r12, 0x78(%rsp)
    000011fe: 	movb	$0x0, (%rax,%r12)
    00001203: 	movabsq	$0x3fffffffffffffff, %rax
    0000120d: 	subq	0x78(%rsp), %rax
    00001212: 	cmpq	$0x16, %rax
    00001216: 	jbe	.Ltmp1190 # Offset: 4630
    0000121c: 	movq	0x20(%rsp), %rdi
    00001221: 	movl	$0x17, %edx
    00001226: 	leaq	DATAat0x3d25b(%rip), %rsi
    0000122d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4653
    00001232: 	callq	clock@PLT # Offset: 4658
    00001237: 	movl	iterations(%rip), %ecx
    0000123d: 	movq	%rax, start_time(%rip)
    00001244: 	testl	%ecx, %ecx
    00001246: 	jle	.Ltmp1191 # Offset: 4678
    0000124c: 	movzbl	0x30(%rsp), %r13d
    00001252: 	xorb	0x2c(%rsp), %r13b
    00001257: 	xorl	%r12d, %r12d
    0000125a: 	leaq	0x1f40(%rbp), %rbx
    00001261: 	xorb	0x34(%rsp), %r13b
    00001266: 	xorb	0x28(%rsp), %r13b
    0000126b: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001272: 	movd	%r13d, %xmm0
    00001277: 	punpcklbw	%xmm0, %xmm0
    0000127b: 	punpcklwd	%xmm0, %xmm0
    0000127f: 	pshufd	$0x0, %xmm0, %xmm2
    00001284: 	movaps	%xmm2, (%rsp)
    00001288: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1194:
    00001290: 	movq	%rbp, %rax
    00001293: 	pxor	%xmm1, %xmm1
    00001297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1192:
    000012a0: 	movdqu	(%rax), %xmm0
    000012a4: 	pxor	(%rsp), %xmm0
    000012a9: 	addq	$0x10, %rax
    000012ad: 	paddb	%xmm0, %xmm1
    000012b1: 	cmpq	%rax, %rbx
    000012b4: 	jne	.Ltmp1192 # Offset: 4788
    000012b6: 	cvttsd2si	init_value(%rip), %edx
    000012be: 	movdqa	%xmm1, %xmm0
    000012c2: 	psrldq	$0x8, %xmm0
    000012c7: 	paddb	%xmm0, %xmm1
    000012cb: 	pxor	%xmm0, %xmm0
    000012cf: 	psadbw	%xmm0, %xmm1
    000012d3: 	xorl	%r13d, %edx
    000012d6: 	movd	%xmm1, %eax
    000012da: 	shll	$0x6, %edx
    000012dd: 	cmpb	%al, %dl
    000012df: 	je	.Ltmp1193 # Offset: 4831
    000012e1: 	movl	current_test(%rip), %edx
    000012e7: 	movq	%r14, %rsi
    000012ea: 	movl	$0x1, %edi
    000012ef: 	xorl	%eax, %eax
    000012f1: 	callq	__printf_chk@PLT # Offset: 4849
    000012f6: 	movl	iterations(%rip), %ecx
.Ltmp1193:
    000012fc: 	addl	$0x1, %r12d
    00001300: 	cmpl	%ecx, %r12d
    00001303: 	jl	.Ltmp1194 # Offset: 4867
.Ltmp1191:
    00001305: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000130c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001313: 	subq	$0x20, %rax
    00001317: 	cmpq	%rax, %rbx
    0000131a: 	je	.Ltmp1195 # Offset: 4890
    00001320: 	leaq	0x10(%rbx), %rdi
    00001324: 	movq	0x78(%rsp), %r12
    00001329: 	movq	%rdi, (%rbx)
    0000132c: 	movq	0x70(%rsp), %rbp
    00001331: 	movq	%rbp, %rax
    00001334: 	addq	%r12, %rax
    00001337: 	je	.Ltmp1196 # Offset: 4919
    00001339: 	testq	%rbp, %rbp
    0000133c: 	je	.Ltmp1197 # Offset: 4924
.Ltmp1196:
    00001342: 	movq	%r12, 0x48(%rsp)
    00001347: 	cmpq	$0xf, %r12
    0000134b: 	ja	.Ltmp1198 # Offset: 4939
    00001351: 	cmpq	$0x1, %r12
    00001355: 	jne	.Ltmp1199 # Offset: 4949
    0000135b: 	movzbl	(%rbp), %eax
    0000135f: 	movb	%al, 0x10(%rbx)
.Ltmp1243:
    00001362: 	movq	%r12, 0x8(%rbx)
    00001366: 	movb	$0x0, (%rdi,%r12)
    0000136b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001372: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001379: 	addq	$0x20, %rax
    0000137d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001384: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000138b: 	je	.Ltmp1200 # Offset: 5003
.Ltmp1225:
    00001391: 	movq	-0x20(%rax), %rbp
    00001395: 	callq	clock@PLT # Offset: 5013
    0000139a: 	pxor	%xmm0, %xmm0
    0000139e: 	movq	%rax, end_time(%rip)
    000013a5: 	movq	%rbp, %rdi
    000013a8: 	subq	start_time(%rip), %rax
    000013af: 	cvtsi2sd	%rax, %xmm0
    000013b4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000013bc: 	callq	_Z13record_resultdPKc # Offset: 5052
    000013c1: 	movq	0x70(%rsp), %rdi
    000013c6: 	cmpq	0x18(%rsp), %rdi
    000013cb: 	je	.Ltmp1201 # Offset: 5067
    000013cd: 	movq	0x80(%rsp), %rax
    000013d5: 	leaq	0x1(%rax), %rsi
    000013d9: 	callq	_ZdlPvm@PLT # Offset: 5081
.Ltmp1201:
    000013de: 	movq	0x50(%rsp), %rdi
    000013e3: 	cmpq	0x38(%rsp), %rdi
    000013e8: 	je	.Ltmp1202 # Offset: 5096
    000013ea: 	movq	0x60(%rsp), %rax
    000013ef: 	leaq	0x1(%rax), %rsi
    000013f3: 	callq	_ZdlPvm@PLT # Offset: 5107
.Ltmp1202:
    000013f8: 	movq	0x98(%rsp), %rax
    00001400: 	subq	%fs:0x28, %rax
    00001409: 	jne	.Ltmp1203 # Offset: 5129
    0000140f: 	addq	$0xa8, %rsp
    00001416: 	popq	%rbx
    00001417: 	popq	%rbp
    00001418: 	popq	%r12
    0000141a: 	popq	%r13
    0000141c: 	popq	%r14
    0000141e: 	popq	%r15
    00001420: 	retq # Offset: 5152
.Ltmp1070:
    00001421: 	leaq	0x48(%rsp), %rsi
    00001426: 	xorl	%edx, %edx
    00001428: 	movq	%rbx, %rdi
    0000142b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5163
    00001430: 	movq	%rax, (%rbx)
    00001433: 	movq	%rax, %rdi
    00001436: 	movq	0x48(%rsp), %rax
    0000143b: 	movq	%rax, 0x10(%rbx)
.Ltmp1234:
    0000143f: 	movq	%r13, %rdx
    00001442: 	movq	%r14, %rsi
    00001445: 	callq	memcpy@PLT # Offset: 5189
    0000144a: 	movq	0x48(%rsp), %r13
    0000144f: 	movq	(%rbx), %rdi
    00001452: 	jmp	.Ltmp1204 # Offset: 5202
.Ltmp1189:
    00001457: 	testq	%r12, %r12
    0000145a: 	jne	.Ltmp1205 # Offset: 5210
    00001460: 	movq	0x18(%rsp), %rax
    00001465: 	jmp	.Ltmp1206 # Offset: 5221
.Ltmp1173:
    0000146a: 	testq	%r13, %r13
    0000146d: 	jne	.Ltmp1207 # Offset: 5229
    00001473: 	movq	0x18(%rsp), %rax
    00001478: 	jmp	.Ltmp1208 # Offset: 5240
.Ltmp1157:
    0000147d: 	testq	%r13, %r13
    00001480: 	jne	.Ltmp1209 # Offset: 5248
    00001486: 	movq	0x18(%rsp), %rax
    0000148b: 	jmp	.Ltmp1210 # Offset: 5259
.Ltmp1141:
    00001490: 	testq	%r13, %r13
    00001493: 	jne	.Ltmp1211 # Offset: 5267
    00001499: 	movq	0x18(%rsp), %rax
    0000149e: 	jmp	.Ltmp1212 # Offset: 5278
.Ltmp1093:
    000014a3: 	testq	%r13, %r13
    000014a6: 	jne	.Ltmp1213 # Offset: 5286
    000014ac: 	movq	0x18(%rsp), %rax
    000014b1: 	jmp	.Ltmp1214 # Offset: 5297
.Ltmp1077:
    000014b6: 	testq	%r13, %r13
    000014b9: 	jne	.Ltmp1215 # Offset: 5305
    000014bf: 	movq	0x18(%rsp), %rax
    000014c4: 	jmp	.Ltmp1216 # Offset: 5316
.Ltmp1125:
    000014c9: 	testq	%r13, %r13
    000014cc: 	jne	.Ltmp1217 # Offset: 5324
    000014d2: 	movq	0x18(%rsp), %rax
    000014d7: 	jmp	.Ltmp1218 # Offset: 5335
.Ltmp1109:
    000014dc: 	testq	%r13, %r13
    000014df: 	jne	.Ltmp1219 # Offset: 5343
    000014e5: 	movq	0x18(%rsp), %rax
    000014ea: 	jmp	.Ltmp1220 # Offset: 5354
.Ltmp1092:
    000014ef: 	movq	0x20(%rsp), %rdi
    000014f4: 	leaq	0x48(%rsp), %rsi
    000014f9: 	xorl	%edx, %edx
    000014fb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5371
    00001500: 	movq	%rax, 0x70(%rsp)
    00001505: 	movq	%rax, %rdi
    00001508: 	movq	0x48(%rsp), %rax
    0000150d: 	movq	%rax, 0x80(%rsp)
.Ltmp1255:
    00001515: 	movq	%r13, %rdx
    00001518: 	movq	%r14, %rsi
    0000151b: 	callq	memcpy@PLT # Offset: 5403
    00001520: 	movq	0x48(%rsp), %r13
    00001525: 	movq	0x70(%rsp), %rax
    0000152a: 	jmp	.Ltmp1214 # Offset: 5418
.Ltmp1076:
    0000152f: 	movq	0x20(%rsp), %rdi
    00001534: 	leaq	0x48(%rsp), %rsi
    00001539: 	xorl	%edx, %edx
    0000153b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5435
    00001540: 	movq	%rax, 0x70(%rsp)
    00001545: 	movq	%rax, %rdi
    00001548: 	movq	0x48(%rsp), %rax
    0000154d: 	movq	%rax, 0x80(%rsp)
.Ltmp1256:
    00001555: 	movq	%r13, %rdx
    00001558: 	movq	%r14, %rsi
    0000155b: 	callq	memcpy@PLT # Offset: 5467
    00001560: 	movq	0x48(%rsp), %r13
    00001565: 	movq	0x70(%rsp), %rax
    0000156a: 	jmp	.Ltmp1216 # Offset: 5482
.Ltmp1108:
    0000156f: 	movq	0x20(%rsp), %rdi
    00001574: 	leaq	0x48(%rsp), %rsi
    00001579: 	xorl	%edx, %edx
    0000157b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5499
    00001580: 	movq	%rax, 0x70(%rsp)
    00001585: 	movq	%rax, %rdi
    00001588: 	movq	0x48(%rsp), %rax
    0000158d: 	movq	%rax, 0x80(%rsp)
.Ltmp1258:
    00001595: 	movq	%r13, %rdx
    00001598: 	movq	%r14, %rsi
    0000159b: 	callq	memcpy@PLT # Offset: 5531
    000015a0: 	movq	0x48(%rsp), %r13
    000015a5: 	movq	0x70(%rsp), %rax
    000015aa: 	jmp	.Ltmp1220 # Offset: 5546
.Ltmp1124:
    000015af: 	movq	0x20(%rsp), %rdi
    000015b4: 	leaq	0x48(%rsp), %rsi
    000015b9: 	xorl	%edx, %edx
    000015bb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5563
    000015c0: 	movq	%rax, 0x70(%rsp)
    000015c5: 	movq	%rax, %rdi
    000015c8: 	movq	0x48(%rsp), %rax
    000015cd: 	movq	%rax, 0x80(%rsp)
.Ltmp1257:
    000015d5: 	movq	%r13, %rdx
    000015d8: 	movq	%r14, %rsi
    000015db: 	callq	memcpy@PLT # Offset: 5595
    000015e0: 	movq	0x48(%rsp), %r13
    000015e5: 	movq	0x70(%rsp), %rax
    000015ea: 	jmp	.Ltmp1218 # Offset: 5610
.Ltmp1140:
    000015ef: 	movq	0x20(%rsp), %rdi
    000015f4: 	leaq	0x48(%rsp), %rsi
    000015f9: 	xorl	%edx, %edx
    000015fb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5627
    00001600: 	movq	%rax, 0x70(%rsp)
    00001605: 	movq	%rax, %rdi
    00001608: 	movq	0x48(%rsp), %rax
    0000160d: 	movq	%rax, 0x80(%rsp)
.Ltmp1254:
    00001615: 	movq	%r13, %rdx
    00001618: 	movq	%r14, %rsi
    0000161b: 	callq	memcpy@PLT # Offset: 5659
    00001620: 	movq	0x48(%rsp), %r13
    00001625: 	movq	0x70(%rsp), %rax
    0000162a: 	jmp	.Ltmp1212 # Offset: 5674
.Ltmp1156:
    0000162f: 	movq	0x20(%rsp), %rdi
    00001634: 	leaq	0x48(%rsp), %rsi
    00001639: 	xorl	%edx, %edx
    0000163b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5691
    00001640: 	movq	%rax, 0x70(%rsp)
    00001645: 	movq	%rax, %rdi
    00001648: 	movq	0x48(%rsp), %rax
    0000164d: 	movq	%rax, 0x80(%rsp)
.Ltmp1253:
    00001655: 	movq	%r13, %rdx
    00001658: 	movq	%r14, %rsi
    0000165b: 	callq	memcpy@PLT # Offset: 5723
    00001660: 	movq	0x48(%rsp), %r13
    00001665: 	movq	0x70(%rsp), %rax
    0000166a: 	jmp	.Ltmp1210 # Offset: 5738
.Ltmp1188:
    0000166f: 	movq	0x20(%rsp), %rdi
    00001674: 	leaq	0x48(%rsp), %rsi
    00001679: 	xorl	%edx, %edx
    0000167b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5755
    00001680: 	movq	%rax, 0x70(%rsp)
    00001685: 	movq	%rax, %rdi
    00001688: 	movq	0x48(%rsp), %rax
    0000168d: 	movq	%rax, 0x80(%rsp)
.Ltmp1251:
    00001695: 	movq	%r12, %rdx
    00001698: 	movq	%r13, %rsi
    0000169b: 	callq	memcpy@PLT # Offset: 5787
    000016a0: 	movq	0x48(%rsp), %r12
    000016a5: 	movq	0x70(%rsp), %rax
    000016aa: 	jmp	.Ltmp1206 # Offset: 5802
.Ltmp1172:
    000016af: 	movq	0x20(%rsp), %rdi
    000016b4: 	leaq	0x48(%rsp), %rsi
    000016b9: 	xorl	%edx, %edx
    000016bb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5819
    000016c0: 	movq	%rax, 0x70(%rsp)
    000016c5: 	movq	%rax, %rdi
    000016c8: 	movq	0x48(%rsp), %rax
    000016cd: 	movq	%rax, 0x80(%rsp)
.Ltmp1252:
    000016d5: 	movq	%r13, %rdx
    000016d8: 	movq	%r14, %rsi
    000016db: 	callq	memcpy@PLT # Offset: 5851
    000016e0: 	movq	0x48(%rsp), %r13
    000016e5: 	movq	0x70(%rsp), %rax
    000016ea: 	jmp	.Ltmp1208 # Offset: 5866
.Ltmp1168:
    000016ef: 	movq	-0x8(%rdx), %rax
    000016f3: 	addq	$0x200, %rax
    000016f9: 	jmp	.Ltmp1221 # Offset: 5881
.Ltmp1179:
    000016fe: 	movq	0x20(%rsp), %rsi
    00001703: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000170a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5898
    0000170f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001716: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000171d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001724: 	jne	.Ltmp1222 # Offset: 5924
.Ltmp1184:
    0000172a: 	movq	-0x8(%rdx), %rax
    0000172e: 	addq	$0x200, %rax
    00001734: 	jmp	.Ltmp1222 # Offset: 5940
.Ltmp1163:
    00001739: 	movq	0x20(%rsp), %rsi
    0000173e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001745: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5957
    0000174a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001751: 	jmp	.Ltmp1223 # Offset: 5969
.Ltmp1152:
    00001756: 	movq	-0x8(%rdx), %rax
    0000175a: 	addq	$0x200, %rax
    00001760: 	jmp	.Ltmp1224 # Offset: 5984
.Ltmp1195:
    00001765: 	movq	0x20(%rsp), %rsi
    0000176a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001771: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6001
    00001776: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000177d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001784: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000178b: 	jne	.Ltmp1225 # Offset: 6027
.Ltmp1200:
    00001791: 	movq	-0x8(%rdx), %rax
    00001795: 	addq	$0x200, %rax
    0000179b: 	jmp	.Ltmp1225 # Offset: 6043
.Ltmp1115:
    000017a0: 	movq	0x20(%rsp), %rsi
    000017a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6060
    000017b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017c6: 	jne	.Ltmp1226 # Offset: 6086
.Ltmp1120:
    000017cc: 	movq	-0x8(%rdx), %rax
    000017d0: 	addq	$0x200, %rax
    000017d6: 	jmp	.Ltmp1226 # Offset: 6102
.Ltmp1088:
    000017db: 	movq	-0x8(%rdx), %rax
    000017df: 	addq	$0x200, %rax
    000017e5: 	jmp	.Ltmp1227 # Offset: 6117
.Ltmp1147:
    000017ea: 	movq	0x20(%rsp), %rsi
    000017ef: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017f6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6134
    000017fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001802: 	jmp	.Ltmp1228 # Offset: 6146
.Ltmp1099:
    00001807: 	movq	0x20(%rsp), %rsi
    0000180c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001813: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6163
    00001818: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000181f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001826: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000182d: 	jne	.Ltmp1229 # Offset: 6189
.Ltmp1104:
    00001833: 	movq	-0x8(%rdx), %rax
    00001837: 	addq	$0x200, %rax
    0000183d: 	jmp	.Ltmp1229 # Offset: 6205
.Ltmp1067:
    00001842: 	movq	0x20(%rsp), %rsi
    00001847: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000184e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6222
    00001853: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000185a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001861: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001868: 	jne	.Ltmp1230 # Offset: 6248
.Ltmp1072:
    0000186e: 	movq	-0x8(%rdx), %rax
    00001872: 	addq	$0x200, %rax
    00001878: 	jmp	.Ltmp1230 # Offset: 6264
.Ltmp1136:
    0000187d: 	movq	-0x8(%rdx), %rax
    00001881: 	addq	$0x200, %rax
    00001887: 	jmp	.Ltmp1231 # Offset: 6279
.Ltmp1083:
    0000188c: 	movq	0x20(%rsp), %rsi
    00001891: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001898: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6296
    0000189d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018a4: 	jmp	.Ltmp1232 # Offset: 6308
.Ltmp1131:
    000018a9: 	movq	0x20(%rsp), %rsi
    000018ae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6325
    000018ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c1: 	jmp	.Ltmp1233 # Offset: 6337
.Ltmp1071:
    000018c6: 	testq	%r13, %r13
    000018c9: 	je	.Ltmp1204 # Offset: 6345
    000018cf: 	jmp	.Ltmp1234 # Offset: 6351
    000018d4: 	nopl	(%rax) # Size: 4
.Ltmp1103:
    000018d8: 	testq	%r13, %r13
    000018db: 	je	.Ltmp1235 # Offset: 6363
    000018e1: 	jmp	.Ltmp1236 # Offset: 6369
    000018e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1135:
    000018f0: 	testq	%r13, %r13
    000018f3: 	je	.Ltmp1237 # Offset: 6387
.Ltmp1247:
    000018f9: 	movq	%r13, %rdx
    000018fc: 	movq	%r14, %rsi
    000018ff: 	callq	memcpy@PLT # Offset: 6399
    00001904: 	movq	0x48(%rsp), %r13
    00001909: 	movq	(%rbx), %rdi
    0000190c: 	jmp	.Ltmp1237 # Offset: 6412
.Ltmp1167:
    00001911: 	testq	%r13, %r13
    00001914: 	je	.Ltmp1238 # Offset: 6420
    0000191a: 	jmp	.Ltmp1239 # Offset: 6426
    0000191f: 	nop # Size: 1
.Ltmp1087:
    00001920: 	testq	%r13, %r13
    00001923: 	je	.Ltmp1240 # Offset: 6435
.Ltmp1249:
    00001929: 	movq	%r13, %rdx
    0000192c: 	movq	%r14, %rsi
    0000192f: 	callq	memcpy@PLT # Offset: 6447
    00001934: 	movq	0x48(%rsp), %r13
    00001939: 	movq	(%rbx), %rdi
    0000193c: 	jmp	.Ltmp1240 # Offset: 6460
.Ltmp1183:
    00001941: 	testq	%r12, %r12
    00001944: 	je	.Ltmp1241 # Offset: 6468
    0000194a: 	jmp	.Ltmp1242 # Offset: 6474
    0000194f: 	nop # Size: 1
.Ltmp1199:
    00001950: 	testq	%r12, %r12
    00001953: 	je	.Ltmp1243 # Offset: 6483
.Ltmp1248:
    00001959: 	movq	%r12, %rdx
    0000195c: 	movq	%rbp, %rsi
    0000195f: 	callq	memcpy@PLT # Offset: 6495
    00001964: 	movq	0x48(%rsp), %r12
    00001969: 	movq	(%rbx), %rdi
    0000196c: 	jmp	.Ltmp1243 # Offset: 6508
.Ltmp1151:
    00001971: 	testq	%r13, %r13
    00001974: 	je	.Ltmp1244 # Offset: 6516
    0000197a: 	jmp	.Ltmp1245 # Offset: 6522
    0000197f: 	nop # Size: 1
.Ltmp1119:
    00001980: 	testq	%r13, %r13
    00001983: 	je	.Ltmp1246 # Offset: 6531
.Ltmp1250:
    00001989: 	movq	%r13, %rdx
    0000198c: 	movq	%r14, %rsi
    0000198f: 	callq	memcpy@PLT # Offset: 6543
    00001994: 	movq	0x48(%rsp), %r13
    00001999: 	movq	(%rbx), %rdi
    0000199c: 	jmp	.Ltmp1246 # Offset: 6556
.Ltmp1102:
    000019a1: 	leaq	0x48(%rsp), %rsi
    000019a6: 	xorl	%edx, %edx
    000019a8: 	movq	%rbx, %rdi
    000019ab: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6571
    000019b0: 	movq	%rax, (%rbx)
    000019b3: 	movq	%rax, %rdi
    000019b6: 	movq	0x48(%rsp), %rax
    000019bb: 	movq	%rax, 0x10(%rbx)
.Ltmp1236:
    000019bf: 	movq	%r13, %rdx
    000019c2: 	movq	%r14, %rsi
    000019c5: 	callq	memcpy@PLT # Offset: 6597
    000019ca: 	movq	0x48(%rsp), %r13
    000019cf: 	movq	(%rbx), %rdi
    000019d2: 	jmp	.Ltmp1235 # Offset: 6610
.Ltmp1166:
    000019d7: 	leaq	0x48(%rsp), %rsi
    000019dc: 	xorl	%edx, %edx
    000019de: 	movq	%rbx, %rdi
    000019e1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6625
    000019e6: 	movq	%rax, (%rbx)
    000019e9: 	movq	%rax, %rdi
    000019ec: 	movq	0x48(%rsp), %rax
    000019f1: 	movq	%rax, 0x10(%rbx)
.Ltmp1239:
    000019f5: 	movq	%r13, %rdx
    000019f8: 	movq	%r14, %rsi
    000019fb: 	callq	memcpy@PLT # Offset: 6651
    00001a00: 	movq	0x48(%rsp), %r13
    00001a05: 	movq	(%rbx), %rdi
    00001a08: 	jmp	.Ltmp1238 # Offset: 6664
.Ltmp1134:
    00001a0d: 	leaq	0x48(%rsp), %rsi
    00001a12: 	xorl	%edx, %edx
    00001a14: 	movq	%rbx, %rdi
    00001a17: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6679
    00001a1c: 	movq	%rax, (%rbx)
    00001a1f: 	movq	%rax, %rdi
    00001a22: 	movq	0x48(%rsp), %rax
    00001a27: 	movq	%rax, 0x10(%rbx)
    00001a2b: 	jmp	.Ltmp1247 # Offset: 6699
.Ltmp1182:
    00001a30: 	leaq	0x48(%rsp), %rsi
    00001a35: 	xorl	%edx, %edx
    00001a37: 	movq	%rbx, %rdi
    00001a3a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6714
    00001a3f: 	movq	%rax, (%rbx)
    00001a42: 	movq	%rax, %rdi
    00001a45: 	movq	0x48(%rsp), %rax
    00001a4a: 	movq	%rax, 0x10(%rbx)
.Ltmp1242:
    00001a4e: 	movq	%r12, %rdx
    00001a51: 	movq	%r13, %rsi
    00001a54: 	callq	memcpy@PLT # Offset: 6740
    00001a59: 	movq	0x48(%rsp), %r12
    00001a5e: 	movq	(%rbx), %rdi
    00001a61: 	jmp	.Ltmp1241 # Offset: 6753
.Ltmp1150:
    00001a66: 	leaq	0x48(%rsp), %rsi
    00001a6b: 	xorl	%edx, %edx
    00001a6d: 	movq	%rbx, %rdi
    00001a70: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6768
    00001a75: 	movq	%rax, (%rbx)
    00001a78: 	movq	%rax, %rdi
    00001a7b: 	movq	0x48(%rsp), %rax
    00001a80: 	movq	%rax, 0x10(%rbx)
.Ltmp1245:
    00001a84: 	movq	%r13, %rdx
    00001a87: 	movq	%r14, %rsi
    00001a8a: 	callq	memcpy@PLT # Offset: 6794
    00001a8f: 	movq	0x48(%rsp), %r13
    00001a94: 	movq	(%rbx), %rdi
    00001a97: 	jmp	.Ltmp1244 # Offset: 6807
.Ltmp1198:
    00001a9c: 	leaq	0x48(%rsp), %rsi
    00001aa1: 	xorl	%edx, %edx
    00001aa3: 	movq	%rbx, %rdi
    00001aa6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6822
    00001aab: 	movq	%rax, (%rbx)
    00001aae: 	movq	%rax, %rdi
    00001ab1: 	movq	0x48(%rsp), %rax
    00001ab6: 	movq	%rax, 0x10(%rbx)
    00001aba: 	jmp	.Ltmp1248 # Offset: 6842
.Ltmp1086:
    00001abf: 	leaq	0x48(%rsp), %rsi
    00001ac4: 	xorl	%edx, %edx
    00001ac6: 	movq	%rbx, %rdi
    00001ac9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6857
    00001ace: 	movq	%rax, (%rbx)
    00001ad1: 	movq	%rax, %rdi
    00001ad4: 	movq	0x48(%rsp), %rax
    00001ad9: 	movq	%rax, 0x10(%rbx)
    00001add: 	jmp	.Ltmp1249 # Offset: 6877
.Ltmp1118:
    00001ae2: 	leaq	0x48(%rsp), %rsi
    00001ae7: 	xorl	%edx, %edx
    00001ae9: 	movq	%rbx, %rdi
    00001aec: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6892
    00001af1: 	movq	%rax, (%rbx)
    00001af4: 	movq	%rax, %rdi
    00001af7: 	movq	0x48(%rsp), %rax
    00001afc: 	movq	%rax, 0x10(%rbx)
    00001b00: 	jmp	.Ltmp1250 # Offset: 6912
.Ltmp1075:
    00001b05: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b0c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6924
.Ltmp1078:
    00001b11: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b18: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6936
.Ltmp1085:
    00001b1d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b24: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6948
.Ltmp1091:
    00001b29: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b30: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6960
.Ltmp1094:
    00001b35: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b3c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6972
.Ltmp1101:
    00001b41: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b48: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6984
.Ltmp1107:
    00001b4d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b54: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6996
.Ltmp1110:
    00001b59: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b60: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7008
.Ltmp1117:
    00001b65: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b6c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7020
.Ltmp1123:
    00001b71: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b78: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7032
.Ltmp1126:
    00001b7d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b84: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7044
.Ltmp1133:
    00001b89: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b90: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7056
.Ltmp1139:
    00001b95: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b9c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7068
.Ltmp1142:
    00001ba1: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ba8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7080
.Ltmp1149:
    00001bad: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bb4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7092
.Ltmp1155:
    00001bb9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bc0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7104
.Ltmp1158:
    00001bc5: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bcc: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7116
.Ltmp1165:
    00001bd1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bd8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7128
.Ltmp1171:
    00001bdd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001be4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7140
.Ltmp1174:
    00001be9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bf0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7152
.Ltmp1181:
    00001bf5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bfc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7164
.Ltmp1187:
    00001c01: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c08: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7176
.Ltmp1190:
    00001c0d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c14: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7188
.Ltmp1197:
    00001c19: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c20: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7200
.Ltmp1203:
    00001c25: 	callq	__stack_chk_fail@PLT # Offset: 7205
.Ltmp1069:
    00001c2a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c31: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7217
.Ltmp1205:
    00001c36: 	movq	0x18(%rsp), %rdi
    00001c3b: 	jmp	.Ltmp1251 # Offset: 7227
.Ltmp1207:
    00001c40: 	movq	0x18(%rsp), %rdi
    00001c45: 	jmp	.Ltmp1252 # Offset: 7237
.Ltmp1209:
    00001c4a: 	movq	0x18(%rsp), %rdi
    00001c4f: 	jmp	.Ltmp1253 # Offset: 7247
.Ltmp1211:
    00001c54: 	movq	0x18(%rsp), %rdi
    00001c59: 	jmp	.Ltmp1254 # Offset: 7257
.Ltmp1213:
    00001c5e: 	movq	0x18(%rsp), %rdi
    00001c63: 	jmp	.Ltmp1255 # Offset: 7267
.Ltmp1215:
    00001c68: 	movq	0x18(%rsp), %rdi
    00001c6d: 	jmp	.Ltmp1256 # Offset: 7277
.Ltmp1217:
    00001c72: 	movq	0x18(%rsp), %rdi
    00001c77: 	jmp	.Ltmp1257 # Offset: 7287
.Ltmp1219:
    00001c7c: 	movq	0x18(%rsp), %rdi
    00001c81: 	jmp	.Ltmp1258 # Offset: 7297
    00001c86: 	endbr64
.Ltmp1260:
    00001c8a: 	movq	%rax, %rbp
    00001c8d: 	jmp	.Ltmp1259 # Offset: 7309
    00001c8f: 	endbr64
    00001c93: 	jmp	.Ltmp1260 # Offset: 7315
    00001c95: 	endbr64
    00001c99: 	jmp	.Ltmp1260 # Offset: 7321
    00001c9b: 	endbr64
    00001c9f: 	jmp	.Ltmp1260 # Offset: 7327
    00001ca1: 	endbr64
    00001ca5: 	jmp	.Ltmp1260 # Offset: 7333
    00001ca7: 	endbr64
    00001cab: 	jmp	.Ltmp1260 # Offset: 7339
    00001cad: 	endbr64
    00001cb1: 	jmp	.Ltmp1260 # Offset: 7345
    00001cb3: 	endbr64
    00001cb7: 	movq	%rax, %rbp
    00001cba: 	jmp	.Ltmp1261 # Offset: 7354
    00001cbc: 	endbr64
    00001cc0: 	jmp	.Ltmp1260 # Offset: 7360
    00001cc2: 	endbr64
    00001cc6: 	jmp	.Ltmp1260 # Offset: 7366
    00001cc8: 	endbr64
    00001ccc: 	jmp	.Ltmp1260 # Offset: 7372
    00001cce: 	endbr64
    00001cd2: 	jmp	.Ltmp1260 # Offset: 7378
.Ltmp1259:
    00001cd4: 	movq	0x70(%rsp), %rdi
    00001cd9: 	cmpq	0x18(%rsp), %rdi
    00001cde: 	je	.Ltmp1261 # Offset: 7390
    00001ce0: 	movq	0x80(%rsp), %rax
    00001ce8: 	leaq	0x1(%rax), %rsi
    00001cec: 	callq	_ZdlPvm@PLT # Offset: 7404
.Ltmp1261:
    00001cf1: 	movq	0x50(%rsp), %rdi
    00001cf6: 	cmpq	0x38(%rsp), %rdi
    00001cfb: 	je	.Ltmp1262 # Offset: 7419
    00001cfd: 	movq	0x60(%rsp), %rax
    00001d02: 	leaq	0x1(%rax), %rsi
    00001d06: 	callq	_ZdlPvm@PLT # Offset: 7430
.Ltmp1262:
    00001d0b: 	movq	%rbp, %rdi
    00001d0e: 	callq	_Unwind_Resume@PLT # Offset: 7438
    00001d13: 	endbr64
    00001d17: 	jmp	.Ltmp1260 # Offset: 7447
    00001d1c: 	endbr64
    00001d20: 	jmp	.Ltmp1260 # Offset: 7456
    00001d25: 	endbr64
    00001d29: 	jmp	.Ltmp1260 # Offset: 7465
    00001d2e: 	endbr64
    00001d32: 	jmp	.Ltmp1260 # Offset: 7474
    00001d37: 	endbr64
    00001d3b: 	jmp	.Ltmp1260 # Offset: 7483
    00001d40: 	endbr64
    00001d44: 	jmp	.Ltmp1260 # Offset: 7492
    00001d49: 	endbr64
    00001d4d: 	jmp	.Ltmp1260 # Offset: 7501
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIhENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyIsENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 142
  State       : disassembled
  Address     : 0xe6e0
  Size        : 0x1e02
  MaxSize     : 0x1e10
  Offset      : 0xe6e0
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIsENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0141:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0xa8, %rsp
    0000001e: 	movl	%esi, 0x28(%rsp)
    00000022: 	leaq	0x70(%rsp), %rdi
    00000027: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000002e: 	movl	%edx, 0x2c(%rsp)
    00000032: 	movl	$0x5f36, %edx
    00000037: 	movl	%ecx, 0x30(%rsp)
    0000003b: 	movl	%r8d, 0x34(%rsp)
    00000040: 	movw	%cx, 0x14(%rsp)
    00000045: 	movw	%r8w, 0x16(%rsp)
    0000004b: 	movq	%fs:0x28, %rax
    00000054: 	movq	%rax, 0x98(%rsp)
    0000005c: 	xorl	%eax, %eax
    0000005e: 	leaq	0x60(%rsp), %rax
    00000063: 	movw	%dx, 0x84(%rsp)
    0000006b: 	movl	$0xd, %edx
    00000070: 	movq	%rax, 0x38(%rsp)
    00000075: 	movq	%rax, 0x50(%rsp)
    0000007a: 	movl	$0x5f36, %eax
    0000007f: 	movw	%ax, 0x64(%rsp)
    00000084: 	leaq	0x80(%rsp), %rax
    0000008c: 	movl	$0x31746e69, 0x60(%rsp)
    00000094: 	movb	$0x74, 0x66(%rsp)
    00000099: 	movq	$0x7, 0x58(%rsp)
    000000a2: 	movb	$0x0, 0x67(%rsp)
    000000a7: 	movq	%rdi, 0x20(%rsp)
    000000ac: 	movq	%rax, 0x18(%rsp)
    000000b1: 	movq	%rax, 0x70(%rsp)
    000000b6: 	movl	$0x31746e69, 0x80(%rsp)
    000000c1: 	movb	$0x74, 0x86(%rsp)
    000000c9: 	movq	$0x7, 0x78(%rsp)
    000000d2: 	movb	$0x0, 0x87(%rsp)
    000000da: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 218
    000000df: 	callq	clock@PLT # Offset: 223
    000000e4: 	movl	iterations(%rip), %ecx
    000000ea: 	xorl	%r13d, %r13d
    000000ed: 	leaq	0x3e80(%rbp), %rbx
    000000f4: 	movq	%rax, start_time(%rip)
    000000fb: 	testl	%ecx, %ecx
    000000fd: 	jle	.Ltmp1263 # Offset: 253
    00000103: 	movd	%r12d, %xmm0
    00000108: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000010f: 	punpcklwd	%xmm0, %xmm0
    00000113: 	pshufd	$0x0, %xmm0, %xmm3
    00000118: 	movaps	%xmm3, (%rsp)
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1266:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm1, %xmm1
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1264:
    00000130: 	movdqu	(%rax), %xmm0
    00000134: 	pand	(%rsp), %xmm0
    00000139: 	addq	$0x10, %rax
    0000013d: 	paddw	%xmm0, %xmm1
    00000141: 	cmpq	%rbx, %rax
    00000144: 	jne	.Ltmp1264 # Offset: 324
    00000146: 	movdqa	%xmm1, %xmm0
    0000014a: 	cvttsd2si	init_value(%rip), %eax
    00000152: 	psrldq	$0x8, %xmm0
    00000157: 	paddw	%xmm0, %xmm1
    0000015b: 	movdqa	%xmm1, %xmm0
    0000015f: 	psrldq	$0x4, %xmm0
    00000164: 	andl	%r12d, %eax
    00000167: 	imulw	$0x1f40, %ax, %ax
    0000016c: 	paddw	%xmm0, %xmm1
    00000170: 	movdqa	%xmm1, %xmm0
    00000174: 	psrldq	$0x2, %xmm0
    00000179: 	paddw	%xmm0, %xmm1
    0000017d: 	pextrw	$0x0, %xmm1, %edx
    00000182: 	cmpw	%dx, %ax
    00000185: 	je	.Ltmp1265 # Offset: 389
    00000187: 	movl	current_test(%rip), %edx
    0000018d: 	movq	%r14, %rsi
    00000190: 	movl	$0x1, %edi
    00000195: 	xorl	%eax, %eax
    00000197: 	callq	__printf_chk@PLT # Offset: 407
    0000019c: 	movl	iterations(%rip), %ecx
.Ltmp1265:
    000001a2: 	addl	$0x1, %r13d
    000001a6: 	cmpl	%ecx, %r13d
    000001a9: 	jl	.Ltmp1266 # Offset: 425
.Ltmp1263:
    000001af: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001bd: 	subq	$0x20, %rax
    000001c1: 	cmpq	%rax, %rbx
    000001c4: 	je	.Ltmp1267 # Offset: 452
    000001ca: 	leaq	0x10(%rbx), %rdi
    000001ce: 	movq	0x78(%rsp), %r13
    000001d3: 	movq	%rdi, (%rbx)
    000001d6: 	movq	0x70(%rsp), %r14
    000001db: 	movq	%r14, %rax
    000001de: 	addq	%r13, %rax
    000001e1: 	je	.Ltmp1268 # Offset: 481
    000001e3: 	testq	%r14, %r14
    000001e6: 	je	.Ltmp1269 # Offset: 486
.Ltmp1268:
    000001ec: 	movq	%r13, 0x48(%rsp)
    000001f1: 	cmpq	$0xf, %r13
    000001f5: 	ja	.Ltmp1270 # Offset: 501
    000001fb: 	cmpq	$0x1, %r13
    000001ff: 	jne	.Ltmp1271 # Offset: 511
    00000205: 	movzbl	(%r14), %eax
    00000209: 	movb	%al, 0x10(%rbx)
.Ltmp1404:
    0000020c: 	movq	%r13, 0x8(%rbx)
    00000210: 	movb	$0x0, (%rdi,%r13)
    00000215: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000223: 	addq	$0x20, %rax
    00000227: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000022e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000235: 	je	.Ltmp1272 # Offset: 565
.Ltmp1430:
    0000023b: 	movq	-0x20(%rax), %r13
    0000023f: 	callq	clock@PLT # Offset: 575
    00000244: 	pxor	%xmm0, %xmm0
    00000248: 	movq	%rax, end_time(%rip)
    0000024f: 	movq	%r13, %rdi
    00000252: 	subq	start_time(%rip), %rax
    00000259: 	cvtsi2sd	%rax, %xmm0
    0000025e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000266: 	callq	_Z13record_resultdPKc # Offset: 614
    0000026b: 	movq	0x70(%rsp), %rdi
    00000270: 	cmpq	0x18(%rsp), %rdi
    00000275: 	je	.Ltmp1273 # Offset: 629
    00000277: 	movq	0x80(%rsp), %rax
    0000027f: 	leaq	0x1(%rax), %rsi
    00000283: 	callq	_ZdlPvm@PLT # Offset: 643
.Ltmp1273:
    00000288: 	movq	0x18(%rsp), %rax
    0000028d: 	movq	0x50(%rsp), %r14
    00000292: 	movq	0x58(%rsp), %r13
    00000297: 	movq	%rax, 0x70(%rsp)
    0000029c: 	movq	%r14, %rax
    0000029f: 	addq	%r13, %rax
    000002a2: 	je	.Ltmp1274 # Offset: 674
    000002a4: 	testq	%r14, %r14
    000002a7: 	je	.Ltmp1275 # Offset: 679
.Ltmp1274:
    000002ad: 	movq	%r13, 0x48(%rsp)
    000002b2: 	cmpq	$0xf, %r13
    000002b6: 	ja	.Ltmp1276 # Offset: 694
    000002bc: 	cmpq	$0x1, %r13
    000002c0: 	jne	.Ltmp1277 # Offset: 704
    000002c6: 	movzbl	(%r14), %eax
    000002ca: 	movb	%al, 0x80(%rsp)
    000002d1: 	movq	0x18(%rsp), %rax
.Ltmp1416:
    000002d6: 	movq	%r13, 0x78(%rsp)
    000002db: 	movb	$0x0, (%rax,%r13)
    000002e0: 	movabsq	$0x3fffffffffffffff, %rax
    000002ea: 	subq	0x78(%rsp), %rax
    000002ef: 	cmpq	$0x15, %rax
    000002f3: 	jbe	.Ltmp1278 # Offset: 755
    000002f9: 	movq	0x20(%rsp), %rdi
    000002fe: 	movl	$0x16, %edx
    00000303: 	leaq	DATAat0x3d1e8(%rip), %rsi
    0000030a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 778
    0000030f: 	callq	clock@PLT # Offset: 783
    00000314: 	movl	iterations(%rip), %ecx
    0000031a: 	movq	%rax, start_time(%rip)
    00000321: 	testl	%ecx, %ecx
    00000323: 	jle	.Ltmp1279 # Offset: 803
    00000329: 	movzwl	0x30(%rsp), %eax
    0000032e: 	andw	0x2c(%rsp), %ax
    00000333: 	xorl	%r13d, %r13d
    00000336: 	leaq	0x3e80(%rbp), %rbx
    0000033d: 	andw	0x34(%rsp), %ax
    00000342: 	andw	0x28(%rsp), %ax
    00000347: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000034e: 	movd	%eax, %xmm0
    00000352: 	punpcklwd	%xmm0, %xmm0
    00000356: 	pshufd	$0x0, %xmm0, %xmm4
    0000035b: 	movaps	%xmm4, (%rsp)
    0000035f: 	nop # Size: 1
.Ltmp1282:
    00000360: 	movq	%rbp, %rax
    00000363: 	pxor	%xmm1, %xmm1
    00000367: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1280:
    00000370: 	movdqu	(%rax), %xmm0
    00000374: 	pand	(%rsp), %xmm0
    00000379: 	addq	$0x10, %rax
    0000037d: 	paddw	%xmm0, %xmm1
    00000381: 	cmpq	%rax, %rbx
    00000384: 	jne	.Ltmp1280 # Offset: 900
    00000386: 	movdqa	%xmm1, %xmm0
    0000038a: 	cvttsd2si	init_value(%rip), %eax
    00000392: 	psrldq	$0x8, %xmm0
    00000397: 	paddw	%xmm0, %xmm1
    0000039b: 	movdqa	%xmm1, %xmm0
    0000039f: 	psrldq	$0x4, %xmm0
    000003a4: 	andl	%r15d, %eax
    000003a7: 	andw	0x14(%rsp), %ax
    000003ac: 	andw	0x16(%rsp), %ax
    000003b1: 	paddw	%xmm0, %xmm1
    000003b5: 	andl	%r12d, %eax
    000003b8: 	movdqa	%xmm1, %xmm0
    000003bc: 	imulw	$0x1f40, %ax, %ax
    000003c1: 	psrldq	$0x2, %xmm0
    000003c6: 	paddw	%xmm0, %xmm1
    000003ca: 	pextrw	$0x0, %xmm1, %edx
    000003cf: 	cmpw	%dx, %ax
    000003d2: 	je	.Ltmp1281 # Offset: 978
    000003d4: 	movl	current_test(%rip), %edx
    000003da: 	movq	%r14, %rsi
    000003dd: 	movl	$0x1, %edi
    000003e2: 	xorl	%eax, %eax
    000003e4: 	callq	__printf_chk@PLT # Offset: 996
    000003e9: 	movl	iterations(%rip), %ecx
.Ltmp1281:
    000003ef: 	addl	$0x1, %r13d
    000003f3: 	cmpl	%ecx, %r13d
    000003f6: 	jl	.Ltmp1282 # Offset: 1014
.Ltmp1279:
    000003fc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000403: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000040a: 	subq	$0x20, %rax
    0000040e: 	cmpq	%rax, %rbx
    00000411: 	je	.Ltmp1283 # Offset: 1041
    00000417: 	leaq	0x10(%rbx), %rdi
    0000041b: 	movq	0x78(%rsp), %r13
    00000420: 	movq	%rdi, (%rbx)
    00000423: 	movq	0x70(%rsp), %r14
    00000428: 	movq	%r14, %rax
    0000042b: 	addq	%r13, %rax
    0000042e: 	je	.Ltmp1284 # Offset: 1070
    00000430: 	testq	%r14, %r14
    00000433: 	je	.Ltmp1285 # Offset: 1075
.Ltmp1284:
    00000439: 	movq	%r13, 0x48(%rsp)
    0000043e: 	cmpq	$0xf, %r13
    00000442: 	ja	.Ltmp1286 # Offset: 1090
    00000448: 	cmpq	$0x1, %r13
    0000044c: 	jne	.Ltmp1287 # Offset: 1100
    00000452: 	movzbl	(%r14), %eax
    00000456: 	movb	%al, 0x10(%rbx)
.Ltmp1440:
    00000459: 	movq	%r13, 0x8(%rbx)
    0000045d: 	movb	$0x0, (%rdi,%r13)
    00000462: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000469: 	addq	$0x20, %rax
    0000046d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1432:
    00000474: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000047b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000482: 	je	.Ltmp1288 # Offset: 1154
.Ltmp1427:
    00000488: 	movq	-0x20(%rax), %r13
    0000048c: 	callq	clock@PLT # Offset: 1164
    00000491: 	pxor	%xmm0, %xmm0
    00000495: 	movq	%rax, end_time(%rip)
    0000049c: 	movq	%r13, %rdi
    0000049f: 	subq	start_time(%rip), %rax
    000004a6: 	cvtsi2sd	%rax, %xmm0
    000004ab: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004b3: 	callq	_Z13record_resultdPKc # Offset: 1203
    000004b8: 	movq	0x70(%rsp), %rdi
    000004bd: 	cmpq	0x18(%rsp), %rdi
    000004c2: 	je	.Ltmp1289 # Offset: 1218
    000004c4: 	movq	0x80(%rsp), %rax
    000004cc: 	leaq	0x1(%rax), %rsi
    000004d0: 	callq	_ZdlPvm@PLT # Offset: 1232
.Ltmp1289:
    000004d5: 	movq	0x18(%rsp), %rax
    000004da: 	movq	0x50(%rsp), %r14
    000004df: 	movq	0x58(%rsp), %r13
    000004e4: 	movq	%rax, 0x70(%rsp)
    000004e9: 	movq	%r14, %rax
    000004ec: 	addq	%r13, %rax
    000004ef: 	je	.Ltmp1290 # Offset: 1263
    000004f1: 	testq	%r14, %r14
    000004f4: 	je	.Ltmp1291 # Offset: 1268
.Ltmp1290:
    000004fa: 	movq	%r13, 0x48(%rsp)
    000004ff: 	cmpq	$0xf, %r13
    00000503: 	ja	.Ltmp1292 # Offset: 1283
    00000509: 	cmpq	$0x1, %r13
    0000050d: 	jne	.Ltmp1293 # Offset: 1293
    00000513: 	movzbl	(%r14), %eax
    00000517: 	movb	%al, 0x80(%rsp)
    0000051e: 	movq	0x18(%rsp), %rax
.Ltmp1414:
    00000523: 	movq	%r13, 0x78(%rsp)
    00000528: 	movb	$0x0, (%rax,%r13)
    0000052d: 	movabsq	$0x3fffffffffffffff, %rax
    00000537: 	subq	0x78(%rsp), %rax
    0000053c: 	cmpq	$0x16, %rax
    00000540: 	jbe	.Ltmp1294 # Offset: 1344
    00000546: 	movq	0x20(%rsp), %rdi
    0000054b: 	movl	$0x17, %edx
    00000550: 	leaq	DATAat0x3d1ff(%rip), %rsi
    00000557: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1367
    0000055c: 	callq	clock@PLT # Offset: 1372
    00000561: 	movl	iterations(%rip), %ecx
    00000567: 	movq	%rax, start_time(%rip)
    0000056e: 	testl	%ecx, %ecx
    00000570: 	jle	.Ltmp1295 # Offset: 1392
    00000576: 	movzwl	0x30(%rsp), %r14d
    0000057c: 	andw	0x2c(%rsp), %r14w
    00000582: 	xorl	%r13d, %r13d
    00000585: 	leaq	0x3e80(%rbp), %rbx
    0000058c: 	andw	0x34(%rsp), %r14w
    00000592: 	andw	0x28(%rsp), %r14w
    00000598: 	movd	%r14d, %xmm0
    0000059d: 	punpcklwd	%xmm0, %xmm0
    000005a1: 	pshufd	$0x0, %xmm0, %xmm2
    000005a6: 	movaps	%xmm2, (%rsp)
    000005aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1298:
    000005b0: 	movq	%rbp, %rax
    000005b3: 	pxor	%xmm1, %xmm1
    000005b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1296:
    000005c0: 	movdqu	(%rax), %xmm0
    000005c4: 	pand	(%rsp), %xmm0
    000005c9: 	addq	$0x10, %rax
    000005cd: 	paddw	%xmm0, %xmm1
    000005d1: 	cmpq	%rbx, %rax
    000005d4: 	jne	.Ltmp1296 # Offset: 1492
    000005d6: 	movdqa	%xmm1, %xmm0
    000005da: 	cvttsd2si	init_value(%rip), %eax
    000005e2: 	psrldq	$0x8, %xmm0
    000005e7: 	paddw	%xmm0, %xmm1
    000005eb: 	movdqa	%xmm1, %xmm0
    000005ef: 	psrldq	$0x4, %xmm0
    000005f4: 	andl	%r14d, %eax
    000005f7: 	imulw	$0x1f40, %ax, %ax
    000005fc: 	paddw	%xmm0, %xmm1
    00000600: 	movdqa	%xmm1, %xmm0
    00000604: 	psrldq	$0x2, %xmm0
    00000609: 	paddw	%xmm0, %xmm1
    0000060d: 	pextrw	$0x0, %xmm1, %edx
    00000612: 	cmpw	%dx, %ax
    00000615: 	je	.Ltmp1297 # Offset: 1557
    00000617: 	movl	current_test(%rip), %edx
    0000061d: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000624: 	movl	$0x1, %edi
    00000629: 	xorl	%eax, %eax
    0000062b: 	callq	__printf_chk@PLT # Offset: 1579
    00000630: 	movl	iterations(%rip), %ecx
.Ltmp1297:
    00000636: 	addl	$0x1, %r13d
    0000063a: 	cmpl	%ecx, %r13d
    0000063d: 	jl	.Ltmp1298 # Offset: 1597
.Ltmp1295:
    00000643: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000064a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000651: 	subq	$0x20, %rax
    00000655: 	cmpq	%rax, %rbx
    00000658: 	je	.Ltmp1299 # Offset: 1624
    0000065e: 	leaq	0x10(%rbx), %rdi
    00000662: 	movq	0x78(%rsp), %r13
    00000667: 	movq	%rdi, (%rbx)
    0000066a: 	movq	0x70(%rsp), %r14
    0000066f: 	movq	%r14, %rax
    00000672: 	addq	%r13, %rax
    00000675: 	je	.Ltmp1300 # Offset: 1653
    00000677: 	testq	%r14, %r14
    0000067a: 	je	.Ltmp1301 # Offset: 1658
.Ltmp1300:
    00000680: 	movq	%r13, 0x48(%rsp)
    00000685: 	cmpq	$0xf, %r13
    00000689: 	ja	.Ltmp1302 # Offset: 1673
    0000068f: 	cmpq	$0x1, %r13
    00000693: 	jne	.Ltmp1303 # Offset: 1683
    00000699: 	movzbl	(%r14), %eax
    0000069d: 	movb	%al, 0x10(%rbx)
.Ltmp1435:
    000006a0: 	movq	%r13, 0x8(%rbx)
    000006a4: 	movb	$0x0, (%rdi,%r13)
    000006a9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006b7: 	addq	$0x20, %rax
    000006bb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006c2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000006c9: 	je	.Ltmp1304 # Offset: 1737
.Ltmp1429:
    000006cf: 	movq	-0x20(%rax), %r13
    000006d3: 	callq	clock@PLT # Offset: 1747
    000006d8: 	pxor	%xmm0, %xmm0
    000006dc: 	movq	%rax, end_time(%rip)
    000006e3: 	movq	%r13, %rdi
    000006e6: 	subq	start_time(%rip), %rax
    000006ed: 	cvtsi2sd	%rax, %xmm0
    000006f2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006fa: 	callq	_Z13record_resultdPKc # Offset: 1786
    000006ff: 	movq	0x70(%rsp), %rdi
    00000704: 	cmpq	0x18(%rsp), %rdi
    00000709: 	je	.Ltmp1305 # Offset: 1801
    0000070b: 	movq	0x80(%rsp), %rax
    00000713: 	leaq	0x1(%rax), %rsi
    00000717: 	callq	_ZdlPvm@PLT # Offset: 1815
.Ltmp1305:
    0000071c: 	movq	0x18(%rsp), %rax
    00000721: 	movq	0x50(%rsp), %r14
    00000726: 	movq	0x58(%rsp), %r13
    0000072b: 	movq	%rax, 0x70(%rsp)
    00000730: 	movq	%r14, %rax
    00000733: 	addq	%r13, %rax
    00000736: 	je	.Ltmp1306 # Offset: 1846
    00000738: 	testq	%r14, %r14
    0000073b: 	je	.Ltmp1307 # Offset: 1851
.Ltmp1306:
    00000741: 	movq	%r13, 0x48(%rsp)
    00000746: 	cmpq	$0xf, %r13
    0000074a: 	ja	.Ltmp1308 # Offset: 1866
    00000750: 	cmpq	$0x1, %r13
    00000754: 	jne	.Ltmp1309 # Offset: 1876
    0000075a: 	movzbl	(%r14), %eax
    0000075e: 	movb	%al, 0x80(%rsp)
    00000765: 	movq	0x18(%rsp), %rax
.Ltmp1420:
    0000076a: 	movq	%r13, 0x78(%rsp)
    0000076f: 	movb	$0x0, (%rax,%r13)
    00000774: 	movabsq	$0x3fffffffffffffff, %rax
    0000077e: 	subq	0x78(%rsp), %rax
    00000783: 	cmpq	$0xb, %rax
    00000787: 	jbe	.Ltmp1310 # Offset: 1927
    0000078d: 	movq	0x20(%rsp), %rdi
    00000792: 	movl	$0xc, %edx
    00000797: 	leaq	DATAat0x3d220(%rip), %rsi
    0000079e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1950
    000007a3: 	callq	clock@PLT # Offset: 1955
    000007a8: 	movl	iterations(%rip), %ecx
    000007ae: 	xorl	%r13d, %r13d
    000007b1: 	leaq	0x3e80(%rbp), %rbx
    000007b8: 	movq	%rax, start_time(%rip)
    000007bf: 	testl	%ecx, %ecx
    000007c1: 	jle	.Ltmp1311 # Offset: 1985
    000007c7: 	movd	%r12d, %xmm0
    000007cc: 	leaq	DATAat0x3d1d8(%rip), %r14
    000007d3: 	punpcklwd	%xmm0, %xmm0
    000007d7: 	pshufd	$0x0, %xmm0, %xmm3
    000007dc: 	movaps	%xmm3, (%rsp)
.Ltmp1314:
    000007e0: 	movq	%rbp, %rax
    000007e3: 	pxor	%xmm1, %xmm1
    000007e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1312:
    000007f0: 	movdqu	(%rax), %xmm0
    000007f4: 	por	(%rsp), %xmm0
    000007f9: 	addq	$0x10, %rax
    000007fd: 	paddw	%xmm0, %xmm1
    00000801: 	cmpq	%rax, %rbx
    00000804: 	jne	.Ltmp1312 # Offset: 2052
    00000806: 	movdqa	%xmm1, %xmm0
    0000080a: 	cvttsd2si	init_value(%rip), %eax
    00000812: 	psrldq	$0x8, %xmm0
    00000817: 	paddw	%xmm0, %xmm1
    0000081b: 	movdqa	%xmm1, %xmm0
    0000081f: 	psrldq	$0x4, %xmm0
    00000824: 	orl	%r12d, %eax
    00000827: 	imulw	$0x1f40, %ax, %ax
    0000082c: 	paddw	%xmm0, %xmm1
    00000830: 	movdqa	%xmm1, %xmm0
    00000834: 	psrldq	$0x2, %xmm0
    00000839: 	paddw	%xmm0, %xmm1
    0000083d: 	pextrw	$0x0, %xmm1, %edx
    00000842: 	cmpw	%dx, %ax
    00000845: 	je	.Ltmp1313 # Offset: 2117
    00000847: 	movl	current_test(%rip), %edx
    0000084d: 	movq	%r14, %rsi
    00000850: 	movl	$0x1, %edi
    00000855: 	xorl	%eax, %eax
    00000857: 	callq	__printf_chk@PLT # Offset: 2135
    0000085c: 	movl	iterations(%rip), %ecx
.Ltmp1313:
    00000862: 	addl	$0x1, %r13d
    00000866: 	cmpl	%ecx, %r13d
    00000869: 	jl	.Ltmp1314 # Offset: 2153
.Ltmp1311:
    0000086f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000876: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000087d: 	subq	$0x20, %rax
    00000881: 	cmpq	%rax, %rbx
    00000884: 	je	.Ltmp1315 # Offset: 2180
    0000088a: 	leaq	0x10(%rbx), %rdi
    0000088e: 	movq	0x78(%rsp), %r13
    00000893: 	movq	%rdi, (%rbx)
    00000896: 	movq	0x70(%rsp), %r14
    0000089b: 	movq	%r14, %rax
    0000089e: 	addq	%r13, %rax
    000008a1: 	je	.Ltmp1316 # Offset: 2209
    000008a3: 	testq	%r14, %r14
    000008a6: 	je	.Ltmp1317 # Offset: 2214
.Ltmp1316:
    000008ac: 	movq	%r13, 0x48(%rsp)
    000008b1: 	cmpq	$0xf, %r13
    000008b5: 	ja	.Ltmp1318 # Offset: 2229
    000008bb: 	cmpq	$0x1, %r13
    000008bf: 	jne	.Ltmp1319 # Offset: 2239
    000008c5: 	movzbl	(%r14), %eax
    000008c9: 	movb	%al, 0x10(%rbx)
.Ltmp1446:
    000008cc: 	movq	%r13, 0x8(%rbx)
    000008d0: 	movb	$0x0, (%rdi,%r13)
    000008d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008dc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008e3: 	addq	$0x20, %rax
    000008e7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008ee: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000008f5: 	je	.Ltmp1320 # Offset: 2293
.Ltmp1426:
    000008fb: 	movq	-0x20(%rax), %r13
    000008ff: 	callq	clock@PLT # Offset: 2303
    00000904: 	pxor	%xmm0, %xmm0
    00000908: 	movq	%rax, end_time(%rip)
    0000090f: 	movq	%r13, %rdi
    00000912: 	subq	start_time(%rip), %rax
    00000919: 	cvtsi2sd	%rax, %xmm0
    0000091e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000926: 	callq	_Z13record_resultdPKc # Offset: 2342
    0000092b: 	movq	0x70(%rsp), %rdi
    00000930: 	cmpq	0x18(%rsp), %rdi
    00000935: 	je	.Ltmp1321 # Offset: 2357
    00000937: 	movq	0x80(%rsp), %rax
    0000093f: 	leaq	0x1(%rax), %rsi
    00000943: 	callq	_ZdlPvm@PLT # Offset: 2371
.Ltmp1321:
    00000948: 	movq	0x18(%rsp), %rax
    0000094d: 	movq	0x50(%rsp), %r14
    00000952: 	movq	0x58(%rsp), %r13
    00000957: 	movq	%rax, 0x70(%rsp)
    0000095c: 	movq	%r14, %rax
    0000095f: 	addq	%r13, %rax
    00000962: 	je	.Ltmp1322 # Offset: 2402
    00000964: 	testq	%r14, %r14
    00000967: 	je	.Ltmp1323 # Offset: 2407
.Ltmp1322:
    0000096d: 	movq	%r13, 0x48(%rsp)
    00000972: 	cmpq	$0xf, %r13
    00000976: 	ja	.Ltmp1324 # Offset: 2422
    0000097c: 	cmpq	$0x1, %r13
    00000980: 	jne	.Ltmp1325 # Offset: 2432
    00000986: 	movzbl	(%r14), %eax
    0000098a: 	movb	%al, 0x80(%rsp)
    00000991: 	movq	0x18(%rsp), %rax
.Ltmp1418:
    00000996: 	movq	%r13, 0x78(%rsp)
    0000099b: 	movb	$0x0, (%rax,%r13)
    000009a0: 	movabsq	$0x3fffffffffffffff, %rax
    000009aa: 	subq	0x78(%rsp), %rax
    000009af: 	cmpq	$0x14, %rax
    000009b3: 	jbe	.Ltmp1326 # Offset: 2483
    000009b9: 	movq	0x20(%rsp), %rdi
    000009be: 	movl	$0x15, %edx
    000009c3: 	leaq	DATAat0x3d217(%rip), %rsi
    000009ca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2506
    000009cf: 	callq	clock@PLT # Offset: 2511
    000009d4: 	movl	iterations(%rip), %ecx
    000009da: 	movq	%rax, start_time(%rip)
    000009e1: 	testl	%ecx, %ecx
    000009e3: 	jle	.Ltmp1327 # Offset: 2531
    000009e9: 	movzwl	0x30(%rsp), %eax
    000009ee: 	orw	0x2c(%rsp), %ax
    000009f3: 	xorl	%r13d, %r13d
    000009f6: 	leaq	0x3e80(%rbp), %rbx
    000009fd: 	orw	0x34(%rsp), %ax
    00000a02: 	orw	0x28(%rsp), %ax
    00000a07: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000a0e: 	movd	%eax, %xmm0
    00000a12: 	punpcklwd	%xmm0, %xmm0
    00000a16: 	pshufd	$0x0, %xmm0, %xmm4
    00000a1b: 	movaps	%xmm4, (%rsp)
    00000a1f: 	nop # Size: 1
.Ltmp1330:
    00000a20: 	movq	%rbp, %rax
    00000a23: 	pxor	%xmm1, %xmm1
    00000a27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1328:
    00000a30: 	movdqu	(%rax), %xmm0
    00000a34: 	por	(%rsp), %xmm0
    00000a39: 	addq	$0x10, %rax
    00000a3d: 	paddw	%xmm0, %xmm1
    00000a41: 	cmpq	%rbx, %rax
    00000a44: 	jne	.Ltmp1328 # Offset: 2628
    00000a46: 	movdqa	%xmm1, %xmm0
    00000a4a: 	cvttsd2si	init_value(%rip), %eax
    00000a52: 	psrldq	$0x8, %xmm0
    00000a57: 	paddw	%xmm0, %xmm1
    00000a5b: 	movdqa	%xmm1, %xmm0
    00000a5f: 	psrldq	$0x4, %xmm0
    00000a64: 	orl	%r15d, %eax
    00000a67: 	orw	0x14(%rsp), %ax
    00000a6c: 	orw	0x16(%rsp), %ax
    00000a71: 	paddw	%xmm0, %xmm1
    00000a75: 	orl	%r12d, %eax
    00000a78: 	movdqa	%xmm1, %xmm0
    00000a7c: 	imulw	$0x1f40, %ax, %ax
    00000a81: 	psrldq	$0x2, %xmm0
    00000a86: 	paddw	%xmm0, %xmm1
    00000a8a: 	pextrw	$0x0, %xmm1, %edx
    00000a8f: 	cmpw	%dx, %ax
    00000a92: 	je	.Ltmp1329 # Offset: 2706
    00000a94: 	movl	current_test(%rip), %edx
    00000a9a: 	movq	%r14, %rsi
    00000a9d: 	movl	$0x1, %edi
    00000aa2: 	xorl	%eax, %eax
    00000aa4: 	callq	__printf_chk@PLT # Offset: 2724
    00000aa9: 	movl	iterations(%rip), %ecx
.Ltmp1329:
    00000aaf: 	addl	$0x1, %r13d
    00000ab3: 	cmpl	%ecx, %r13d
    00000ab6: 	jl	.Ltmp1330 # Offset: 2742
.Ltmp1327:
    00000abc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ac3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000aca: 	subq	$0x20, %rax
    00000ace: 	cmpq	%rax, %rbx
    00000ad1: 	je	.Ltmp1331 # Offset: 2769
    00000ad7: 	leaq	0x10(%rbx), %rdi
    00000adb: 	movq	0x78(%rsp), %r13
    00000ae0: 	movq	%rdi, (%rbx)
    00000ae3: 	movq	0x70(%rsp), %r14
    00000ae8: 	movq	%r14, %rax
    00000aeb: 	addq	%r13, %rax
    00000aee: 	je	.Ltmp1332 # Offset: 2798
    00000af0: 	testq	%r14, %r14
    00000af3: 	je	.Ltmp1333 # Offset: 2803
.Ltmp1332:
    00000af9: 	movq	%r13, 0x48(%rsp)
    00000afe: 	cmpq	$0xf, %r13
    00000b02: 	ja	.Ltmp1334 # Offset: 2818
    00000b08: 	cmpq	$0x1, %r13
    00000b0c: 	jne	.Ltmp1335 # Offset: 2828
    00000b12: 	movzbl	(%r14), %eax
    00000b16: 	movb	%al, 0x10(%rbx)
.Ltmp1437:
    00000b19: 	movq	%r13, 0x8(%rbx)
    00000b1d: 	movb	$0x0, (%rdi,%r13)
    00000b22: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b29: 	addq	$0x20, %rax
    00000b2d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1433:
    00000b34: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000b3b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b42: 	je	.Ltmp1336 # Offset: 2882
.Ltmp1431:
    00000b48: 	movq	-0x20(%rax), %r13
    00000b4c: 	callq	clock@PLT # Offset: 2892
    00000b51: 	pxor	%xmm0, %xmm0
    00000b55: 	movq	%rax, end_time(%rip)
    00000b5c: 	movq	%r13, %rdi
    00000b5f: 	subq	start_time(%rip), %rax
    00000b66: 	cvtsi2sd	%rax, %xmm0
    00000b6b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b73: 	callq	_Z13record_resultdPKc # Offset: 2931
    00000b78: 	movq	0x70(%rsp), %rdi
    00000b7d: 	cmpq	0x18(%rsp), %rdi
    00000b82: 	je	.Ltmp1337 # Offset: 2946
    00000b84: 	movq	0x80(%rsp), %rax
    00000b8c: 	leaq	0x1(%rax), %rsi
    00000b90: 	callq	_ZdlPvm@PLT # Offset: 2960
.Ltmp1337:
    00000b95: 	movq	0x18(%rsp), %rax
    00000b9a: 	movq	0x50(%rsp), %r14
    00000b9f: 	movq	0x58(%rsp), %r13
    00000ba4: 	movq	%rax, 0x70(%rsp)
    00000ba9: 	movq	%r14, %rax
    00000bac: 	addq	%r13, %rax
    00000baf: 	je	.Ltmp1338 # Offset: 2991
    00000bb1: 	testq	%r14, %r14
    00000bb4: 	je	.Ltmp1339 # Offset: 2996
.Ltmp1338:
    00000bba: 	movq	%r13, 0x48(%rsp)
    00000bbf: 	cmpq	$0xf, %r13
    00000bc3: 	ja	.Ltmp1340 # Offset: 3011
    00000bc9: 	cmpq	$0x1, %r13
    00000bcd: 	jne	.Ltmp1341 # Offset: 3021
    00000bd3: 	movzbl	(%r14), %eax
    00000bd7: 	movb	%al, 0x80(%rsp)
    00000bde: 	movq	0x18(%rsp), %rax
.Ltmp1412:
    00000be3: 	movq	%r13, 0x78(%rsp)
    00000be8: 	movb	$0x0, (%rax,%r13)
    00000bed: 	movabsq	$0x3fffffffffffffff, %rax
    00000bf7: 	subq	0x78(%rsp), %rax
    00000bfc: 	cmpq	$0x15, %rax
    00000c00: 	jbe	.Ltmp1342 # Offset: 3072
    00000c06: 	movq	0x20(%rsp), %rdi
    00000c0b: 	movl	$0x16, %edx
    00000c10: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000c17: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3095
    00000c1c: 	callq	clock@PLT # Offset: 3100
    00000c21: 	movl	iterations(%rip), %ecx
    00000c27: 	movq	%rax, start_time(%rip)
    00000c2e: 	testl	%ecx, %ecx
    00000c30: 	jle	.Ltmp1343 # Offset: 3120
    00000c36: 	movzwl	0x30(%rsp), %r14d
    00000c3c: 	orw	0x2c(%rsp), %r14w
    00000c42: 	xorl	%r13d, %r13d
    00000c45: 	leaq	0x3e80(%rbp), %rbx
    00000c4c: 	orw	0x34(%rsp), %r14w
    00000c52: 	orw	0x28(%rsp), %r14w
    00000c58: 	movd	%r14d, %xmm0
    00000c5d: 	punpcklwd	%xmm0, %xmm0
    00000c61: 	pshufd	$0x0, %xmm0, %xmm2
    00000c66: 	movaps	%xmm2, (%rsp)
    00000c6a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1346:
    00000c70: 	movq	%rbp, %rax
    00000c73: 	pxor	%xmm1, %xmm1
    00000c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1344:
    00000c80: 	movdqu	(%rax), %xmm0
    00000c84: 	por	(%rsp), %xmm0
    00000c89: 	addq	$0x10, %rax
    00000c8d: 	paddw	%xmm0, %xmm1
    00000c91: 	cmpq	%rbx, %rax
    00000c94: 	jne	.Ltmp1344 # Offset: 3220
    00000c96: 	movdqa	%xmm1, %xmm0
    00000c9a: 	cvttsd2si	init_value(%rip), %eax
    00000ca2: 	psrldq	$0x8, %xmm0
    00000ca7: 	paddw	%xmm0, %xmm1
    00000cab: 	movdqa	%xmm1, %xmm0
    00000caf: 	psrldq	$0x4, %xmm0
    00000cb4: 	orl	%r14d, %eax
    00000cb7: 	imulw	$0x1f40, %ax, %ax
    00000cbc: 	paddw	%xmm0, %xmm1
    00000cc0: 	movdqa	%xmm1, %xmm0
    00000cc4: 	psrldq	$0x2, %xmm0
    00000cc9: 	paddw	%xmm0, %xmm1
    00000ccd: 	pextrw	$0x0, %xmm1, %edx
    00000cd2: 	cmpw	%dx, %ax
    00000cd5: 	je	.Ltmp1345 # Offset: 3285
    00000cd7: 	movl	current_test(%rip), %edx
    00000cdd: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000ce4: 	movl	$0x1, %edi
    00000ce9: 	xorl	%eax, %eax
    00000ceb: 	callq	__printf_chk@PLT # Offset: 3307
    00000cf0: 	movl	iterations(%rip), %ecx
.Ltmp1345:
    00000cf6: 	addl	$0x1, %r13d
    00000cfa: 	cmpl	%ecx, %r13d
    00000cfd: 	jl	.Ltmp1346 # Offset: 3325
.Ltmp1343:
    00000d03: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d0a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000d11: 	subq	$0x20, %rax
    00000d15: 	cmpq	%rax, %rbx
    00000d18: 	je	.Ltmp1347 # Offset: 3352
    00000d1e: 	leaq	0x10(%rbx), %rdi
    00000d22: 	movq	0x78(%rsp), %r13
    00000d27: 	movq	%rdi, (%rbx)
    00000d2a: 	movq	0x70(%rsp), %r14
    00000d2f: 	movq	%r14, %rax
    00000d32: 	addq	%r13, %rax
    00000d35: 	je	.Ltmp1348 # Offset: 3381
    00000d37: 	testq	%r14, %r14
    00000d3a: 	je	.Ltmp1349 # Offset: 3386
.Ltmp1348:
    00000d40: 	movq	%r13, 0x48(%rsp)
    00000d45: 	cmpq	$0xf, %r13
    00000d49: 	ja	.Ltmp1350 # Offset: 3401
    00000d4f: 	cmpq	$0x1, %r13
    00000d53: 	jne	.Ltmp1351 # Offset: 3411
    00000d59: 	movzbl	(%r14), %eax
    00000d5d: 	movb	%al, 0x10(%rbx)
.Ltmp1444:
    00000d60: 	movq	%r13, 0x8(%rbx)
    00000d64: 	movb	$0x0, (%rdi,%r13)
    00000d69: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d70: 	addq	$0x20, %rax
    00000d74: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1428:
    00000d7b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d82: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d89: 	je	.Ltmp1352 # Offset: 3465
.Ltmp1424:
    00000d8f: 	movq	-0x20(%rax), %r13
    00000d93: 	callq	clock@PLT # Offset: 3475
    00000d98: 	pxor	%xmm0, %xmm0
    00000d9c: 	movq	%rax, end_time(%rip)
    00000da3: 	movq	%r13, %rdi
    00000da6: 	subq	start_time(%rip), %rax
    00000dad: 	cvtsi2sd	%rax, %xmm0
    00000db2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000dba: 	callq	_Z13record_resultdPKc # Offset: 3514
    00000dbf: 	movq	0x70(%rsp), %rdi
    00000dc4: 	cmpq	0x18(%rsp), %rdi
    00000dc9: 	je	.Ltmp1353 # Offset: 3529
    00000dcb: 	movq	0x80(%rsp), %rax
    00000dd3: 	leaq	0x1(%rax), %rsi
    00000dd7: 	callq	_ZdlPvm@PLT # Offset: 3543
.Ltmp1353:
    00000ddc: 	movq	0x18(%rsp), %rax
    00000de1: 	movq	0x50(%rsp), %r14
    00000de6: 	movq	0x58(%rsp), %r13
    00000deb: 	movq	%rax, 0x70(%rsp)
    00000df0: 	movq	%r14, %rax
    00000df3: 	addq	%r13, %rax
    00000df6: 	je	.Ltmp1354 # Offset: 3574
    00000df8: 	testq	%r14, %r14
    00000dfb: 	je	.Ltmp1355 # Offset: 3579
.Ltmp1354:
    00000e01: 	movq	%r13, 0x48(%rsp)
    00000e06: 	cmpq	$0xf, %r13
    00000e0a: 	ja	.Ltmp1356 # Offset: 3594
    00000e10: 	cmpq	$0x1, %r13
    00000e14: 	jne	.Ltmp1357 # Offset: 3604
    00000e1a: 	movzbl	(%r14), %eax
    00000e1e: 	movb	%al, 0x80(%rsp)
    00000e25: 	movq	0x18(%rsp), %rax
.Ltmp1410:
    00000e2a: 	movq	%r13, 0x78(%rsp)
    00000e2f: 	movb	$0x0, (%rax,%r13)
    00000e34: 	movabsq	$0x3fffffffffffffff, %rax
    00000e3e: 	subq	0x78(%rsp), %rax
    00000e43: 	cmpq	$0xc, %rax
    00000e47: 	jbe	.Ltmp1358 # Offset: 3655
    00000e4d: 	movq	0x20(%rsp), %rdi
    00000e52: 	movl	$0xd, %edx
    00000e57: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000e5e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3678
    00000e63: 	callq	clock@PLT # Offset: 3683
    00000e68: 	movl	iterations(%rip), %ecx
    00000e6e: 	xorl	%r13d, %r13d
    00000e71: 	leaq	0x3e80(%rbp), %rbx
    00000e78: 	movq	%rax, start_time(%rip)
    00000e7f: 	testl	%ecx, %ecx
    00000e81: 	jle	.Ltmp1359 # Offset: 3713
    00000e87: 	movd	%r12d, %xmm0
    00000e8c: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000e93: 	punpcklwd	%xmm0, %xmm0
    00000e97: 	pshufd	$0x0, %xmm0, %xmm3
    00000e9c: 	movaps	%xmm3, (%rsp)
.Ltmp1362:
    00000ea0: 	movq	%rbp, %rax
    00000ea3: 	pxor	%xmm1, %xmm1
    00000ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1360:
    00000eb0: 	movdqu	(%rax), %xmm0
    00000eb4: 	pxor	(%rsp), %xmm0
    00000eb9: 	addq	$0x10, %rax
    00000ebd: 	paddw	%xmm0, %xmm1
    00000ec1: 	cmpq	%rax, %rbx
    00000ec4: 	jne	.Ltmp1360 # Offset: 3780
    00000ec6: 	movdqa	%xmm1, %xmm0
    00000eca: 	cvttsd2si	init_value(%rip), %eax
    00000ed2: 	psrldq	$0x8, %xmm0
    00000ed7: 	paddw	%xmm0, %xmm1
    00000edb: 	movdqa	%xmm1, %xmm0
    00000edf: 	psrldq	$0x4, %xmm0
    00000ee4: 	xorl	%r12d, %eax
    00000ee7: 	imulw	$0x1f40, %ax, %ax
    00000eec: 	paddw	%xmm0, %xmm1
    00000ef0: 	movdqa	%xmm1, %xmm0
    00000ef4: 	psrldq	$0x2, %xmm0
    00000ef9: 	paddw	%xmm0, %xmm1
    00000efd: 	pextrw	$0x0, %xmm1, %edx
    00000f02: 	cmpw	%dx, %ax
    00000f05: 	je	.Ltmp1361 # Offset: 3845
    00000f07: 	movl	current_test(%rip), %edx
    00000f0d: 	movq	%r14, %rsi
    00000f10: 	movl	$0x1, %edi
    00000f15: 	xorl	%eax, %eax
    00000f17: 	callq	__printf_chk@PLT # Offset: 3863
    00000f1c: 	movl	iterations(%rip), %ecx
.Ltmp1361:
    00000f22: 	addl	$0x1, %r13d
    00000f26: 	cmpl	%ecx, %r13d
    00000f29: 	jl	.Ltmp1362 # Offset: 3881
.Ltmp1359:
    00000f2f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f36: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000f3d: 	subq	$0x20, %rax
    00000f41: 	cmpq	%rax, %rbx
    00000f44: 	je	.Ltmp1363 # Offset: 3908
    00000f4a: 	leaq	0x10(%rbx), %rdi
    00000f4e: 	movq	0x78(%rsp), %r13
    00000f53: 	movq	%rdi, (%rbx)
    00000f56: 	movq	0x70(%rsp), %r14
    00000f5b: 	movq	%r14, %rax
    00000f5e: 	addq	%r13, %rax
    00000f61: 	je	.Ltmp1364 # Offset: 3937
    00000f63: 	testq	%r14, %r14
    00000f66: 	je	.Ltmp1365 # Offset: 3942
.Ltmp1364:
    00000f6c: 	movq	%r13, 0x48(%rsp)
    00000f71: 	cmpq	$0xf, %r13
    00000f75: 	ja	.Ltmp1366 # Offset: 3957
    00000f7b: 	cmpq	$0x1, %r13
    00000f7f: 	jne	.Ltmp1367 # Offset: 3967
    00000f85: 	movzbl	(%r14), %eax
    00000f89: 	movb	%al, 0x10(%rbx)
.Ltmp1438:
    00000f8c: 	movq	%r13, 0x8(%rbx)
    00000f90: 	movb	$0x0, (%rdi,%r13)
    00000f95: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f9c: 	addq	$0x20, %rax
    00000fa0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1423:
    00000fa7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000fae: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fb5: 	je	.Ltmp1368 # Offset: 4021
.Ltmp1421:
    00000fbb: 	movq	-0x20(%rax), %r13
    00000fbf: 	callq	clock@PLT # Offset: 4031
    00000fc4: 	pxor	%xmm0, %xmm0
    00000fc8: 	movq	%rax, end_time(%rip)
    00000fcf: 	movq	%r13, %rdi
    00000fd2: 	subq	start_time(%rip), %rax
    00000fd9: 	cvtsi2sd	%rax, %xmm0
    00000fde: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000fe6: 	callq	_Z13record_resultdPKc # Offset: 4070
    00000feb: 	movq	0x70(%rsp), %rdi
    00000ff0: 	cmpq	0x18(%rsp), %rdi
    00000ff5: 	je	.Ltmp1369 # Offset: 4085
    00000ff7: 	movq	0x80(%rsp), %rax
    00000fff: 	leaq	0x1(%rax), %rsi
    00001003: 	callq	_ZdlPvm@PLT # Offset: 4099
.Ltmp1369:
    00001008: 	movq	0x18(%rsp), %rax
    0000100d: 	movq	0x50(%rsp), %r14
    00001012: 	movq	0x58(%rsp), %r13
    00001017: 	movq	%rax, 0x70(%rsp)
    0000101c: 	movq	%r14, %rax
    0000101f: 	addq	%r13, %rax
    00001022: 	je	.Ltmp1370 # Offset: 4130
    00001024: 	testq	%r14, %r14
    00001027: 	je	.Ltmp1371 # Offset: 4135
.Ltmp1370:
    0000102d: 	movq	%r13, 0x48(%rsp)
    00001032: 	cmpq	$0xf, %r13
    00001036: 	ja	.Ltmp1372 # Offset: 4150
    0000103c: 	cmpq	$0x1, %r13
    00001040: 	jne	.Ltmp1373 # Offset: 4160
    00001046: 	movzbl	(%r14), %eax
    0000104a: 	movb	%al, 0x80(%rsp)
    00001051: 	movq	0x18(%rsp), %rax
.Ltmp1408:
    00001056: 	movq	%r13, 0x78(%rsp)
    0000105b: 	movb	$0x0, (%rax,%r13)
    00001060: 	movabsq	$0x3fffffffffffffff, %rax
    0000106a: 	subq	0x78(%rsp), %rax
    0000106f: 	cmpq	$0x15, %rax
    00001073: 	jbe	.Ltmp1374 # Offset: 4211
    00001079: 	movq	0x20(%rsp), %rdi
    0000107e: 	movl	$0x16, %edx
    00001083: 	leaq	DATAat0x3d244(%rip), %rsi
    0000108a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4234
    0000108f: 	callq	clock@PLT # Offset: 4239
    00001094: 	movl	iterations(%rip), %ecx
    0000109a: 	movq	%rax, start_time(%rip)
    000010a1: 	testl	%ecx, %ecx
    000010a3: 	jle	.Ltmp1375 # Offset: 4259
    000010a9: 	movzwl	0x30(%rsp), %eax
    000010ae: 	xorw	0x2c(%rsp), %ax
    000010b3: 	xorl	%r13d, %r13d
    000010b6: 	leaq	0x3e80(%rbp), %rbx
    000010bd: 	xorw	0x34(%rsp), %ax
    000010c2: 	xorw	0x28(%rsp), %ax
    000010c7: 	leaq	DATAat0x3d1d8(%rip), %r14
    000010ce: 	movd	%eax, %xmm0
    000010d2: 	punpcklwd	%xmm0, %xmm0
    000010d6: 	pshufd	$0x0, %xmm0, %xmm4
    000010db: 	movaps	%xmm4, (%rsp)
    000010df: 	nop # Size: 1
.Ltmp1378:
    000010e0: 	movq	%rbp, %rax
    000010e3: 	pxor	%xmm1, %xmm1
    000010e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1376:
    000010f0: 	movdqu	(%rax), %xmm0
    000010f4: 	pxor	(%rsp), %xmm0
    000010f9: 	addq	$0x10, %rax
    000010fd: 	paddw	%xmm0, %xmm1
    00001101: 	cmpq	%rbx, %rax
    00001104: 	jne	.Ltmp1376 # Offset: 4356
    00001106: 	movdqa	%xmm1, %xmm0
    0000110a: 	cvttsd2si	init_value(%rip), %eax
    00001112: 	psrldq	$0x8, %xmm0
    00001117: 	paddw	%xmm0, %xmm1
    0000111b: 	movdqa	%xmm1, %xmm0
    0000111f: 	psrldq	$0x4, %xmm0
    00001124: 	xorl	%r15d, %eax
    00001127: 	xorw	0x14(%rsp), %ax
    0000112c: 	xorw	0x16(%rsp), %ax
    00001131: 	paddw	%xmm0, %xmm1
    00001135: 	xorl	%r12d, %eax
    00001138: 	movdqa	%xmm1, %xmm0
    0000113c: 	imulw	$0x1f40, %ax, %ax
    00001141: 	psrldq	$0x2, %xmm0
    00001146: 	paddw	%xmm0, %xmm1
    0000114a: 	pextrw	$0x0, %xmm1, %edx
    0000114f: 	cmpw	%dx, %ax
    00001152: 	je	.Ltmp1377 # Offset: 4434
    00001154: 	movl	current_test(%rip), %edx
    0000115a: 	movq	%r14, %rsi
    0000115d: 	movl	$0x1, %edi
    00001162: 	xorl	%eax, %eax
    00001164: 	callq	__printf_chk@PLT # Offset: 4452
    00001169: 	movl	iterations(%rip), %ecx
.Ltmp1377:
    0000116f: 	addl	$0x1, %r13d
    00001173: 	cmpl	%ecx, %r13d
    00001176: 	jl	.Ltmp1378 # Offset: 4470
.Ltmp1375:
    0000117c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001183: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000118a: 	subq	$0x20, %rax
    0000118e: 	cmpq	%rax, %rbx
    00001191: 	je	.Ltmp1379 # Offset: 4497
    00001197: 	leaq	0x10(%rbx), %rdi
    0000119b: 	movq	0x78(%rsp), %r12
    000011a0: 	movq	%rdi, (%rbx)
    000011a3: 	movq	0x70(%rsp), %r13
    000011a8: 	movq	%r13, %rax
    000011ab: 	addq	%r12, %rax
    000011ae: 	je	.Ltmp1380 # Offset: 4526
    000011b0: 	testq	%r13, %r13
    000011b3: 	je	.Ltmp1381 # Offset: 4531
.Ltmp1380:
    000011b9: 	movq	%r12, 0x48(%rsp)
    000011be: 	cmpq	$0xf, %r12
    000011c2: 	ja	.Ltmp1382 # Offset: 4546
    000011c8: 	cmpq	$0x1, %r12
    000011cc: 	jne	.Ltmp1383 # Offset: 4556
    000011d2: 	movzbl	(%r13), %eax
    000011d7: 	movb	%al, 0x10(%rbx)
.Ltmp1441:
    000011da: 	movq	%r12, 0x8(%rbx)
    000011de: 	movb	$0x0, (%rdi,%r12)
    000011e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f1: 	addq	$0x20, %rax
    000011f5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011fc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001203: 	je	.Ltmp1384 # Offset: 4611
.Ltmp1422:
    00001209: 	movq	-0x20(%rax), %r12
    0000120d: 	callq	clock@PLT # Offset: 4621
    00001212: 	pxor	%xmm0, %xmm0
    00001216: 	movq	%rax, end_time(%rip)
    0000121d: 	movq	%r12, %rdi
    00001220: 	subq	start_time(%rip), %rax
    00001227: 	cvtsi2sd	%rax, %xmm0
    0000122c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001234: 	callq	_Z13record_resultdPKc # Offset: 4660
    00001239: 	movq	0x70(%rsp), %rdi
    0000123e: 	cmpq	0x18(%rsp), %rdi
    00001243: 	je	.Ltmp1385 # Offset: 4675
    00001245: 	movq	0x80(%rsp), %rax
    0000124d: 	leaq	0x1(%rax), %rsi
    00001251: 	callq	_ZdlPvm@PLT # Offset: 4689
.Ltmp1385:
    00001256: 	movq	0x18(%rsp), %rax
    0000125b: 	movq	0x50(%rsp), %r13
    00001260: 	movq	0x58(%rsp), %r12
    00001265: 	movq	%rax, 0x70(%rsp)
    0000126a: 	movq	%r13, %rax
    0000126d: 	addq	%r12, %rax
    00001270: 	je	.Ltmp1386 # Offset: 4720
    00001272: 	testq	%r13, %r13
    00001275: 	je	.Ltmp1387 # Offset: 4725
.Ltmp1386:
    0000127b: 	movq	%r12, 0x48(%rsp)
    00001280: 	cmpq	$0xf, %r12
    00001284: 	ja	.Ltmp1388 # Offset: 4740
    0000128a: 	cmpq	$0x1, %r12
    0000128e: 	jne	.Ltmp1389 # Offset: 4750
    00001294: 	movzbl	(%r13), %eax
    00001299: 	movb	%al, 0x80(%rsp)
    000012a0: 	movq	0x18(%rsp), %rax
.Ltmp1406:
    000012a5: 	movq	%r12, 0x78(%rsp)
    000012aa: 	movb	$0x0, (%rax,%r12)
    000012af: 	movabsq	$0x3fffffffffffffff, %rax
    000012b9: 	subq	0x78(%rsp), %rax
    000012be: 	cmpq	$0x16, %rax
    000012c2: 	jbe	.Ltmp1390 # Offset: 4802
    000012c8: 	movq	0x20(%rsp), %rdi
    000012cd: 	movl	$0x17, %edx
    000012d2: 	leaq	DATAat0x3d25b(%rip), %rsi
    000012d9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4825
    000012de: 	callq	clock@PLT # Offset: 4830
    000012e3: 	movl	iterations(%rip), %ecx
    000012e9: 	movq	%rax, start_time(%rip)
    000012f0: 	testl	%ecx, %ecx
    000012f2: 	jle	.Ltmp1391 # Offset: 4850
    000012f8: 	movzwl	0x30(%rsp), %r13d
    000012fe: 	xorw	0x2c(%rsp), %r13w
    00001304: 	xorl	%r12d, %r12d
    00001307: 	leaq	0x3e80(%rbp), %rbx
    0000130e: 	xorw	0x34(%rsp), %r13w
    00001314: 	xorw	0x28(%rsp), %r13w
    0000131a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001321: 	movd	%r13d, %xmm0
    00001326: 	punpcklwd	%xmm0, %xmm0
    0000132a: 	pshufd	$0x0, %xmm0, %xmm2
    0000132f: 	movaps	%xmm2, (%rsp)
    00001333: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1394:
    00001338: 	movq	%rbp, %rax
    0000133b: 	pxor	%xmm1, %xmm1
    0000133f: 	nop # Size: 1
.Ltmp1392:
    00001340: 	movdqu	(%rax), %xmm0
    00001344: 	pxor	(%rsp), %xmm0
    00001349: 	addq	$0x10, %rax
    0000134d: 	paddw	%xmm0, %xmm1
    00001351: 	cmpq	%rax, %rbx
    00001354: 	jne	.Ltmp1392 # Offset: 4948
    00001356: 	movdqa	%xmm1, %xmm0
    0000135a: 	cvttsd2si	init_value(%rip), %eax
    00001362: 	psrldq	$0x8, %xmm0
    00001367: 	paddw	%xmm0, %xmm1
    0000136b: 	movdqa	%xmm1, %xmm0
    0000136f: 	psrldq	$0x4, %xmm0
    00001374: 	xorl	%r13d, %eax
    00001377: 	imulw	$0x1f40, %ax, %ax
    0000137c: 	paddw	%xmm0, %xmm1
    00001380: 	movdqa	%xmm1, %xmm0
    00001384: 	psrldq	$0x2, %xmm0
    00001389: 	paddw	%xmm0, %xmm1
    0000138d: 	pextrw	$0x0, %xmm1, %edx
    00001392: 	cmpw	%dx, %ax
    00001395: 	je	.Ltmp1393 # Offset: 5013
    00001397: 	movl	current_test(%rip), %edx
    0000139d: 	movq	%r14, %rsi
    000013a0: 	movl	$0x1, %edi
    000013a5: 	xorl	%eax, %eax
    000013a7: 	callq	__printf_chk@PLT # Offset: 5031
    000013ac: 	movl	iterations(%rip), %ecx
.Ltmp1393:
    000013b2: 	addl	$0x1, %r12d
    000013b6: 	cmpl	%ecx, %r12d
    000013b9: 	jl	.Ltmp1394 # Offset: 5049
.Ltmp1391:
    000013bf: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000013cd: 	subq	$0x20, %rax
    000013d1: 	cmpq	%rax, %rbx
    000013d4: 	je	.Ltmp1395 # Offset: 5076
    000013da: 	leaq	0x10(%rbx), %rdi
    000013de: 	movq	0x78(%rsp), %r12
    000013e3: 	movq	%rdi, (%rbx)
    000013e6: 	movq	0x70(%rsp), %rbp
    000013eb: 	movq	%rbp, %rax
    000013ee: 	addq	%r12, %rax
    000013f1: 	je	.Ltmp1396 # Offset: 5105
    000013f3: 	testq	%rbp, %rbp
    000013f6: 	je	.Ltmp1397 # Offset: 5110
.Ltmp1396:
    000013fc: 	movq	%r12, 0x48(%rsp)
    00001401: 	cmpq	$0xf, %r12
    00001405: 	ja	.Ltmp1398 # Offset: 5125
    0000140b: 	cmpq	$0x1, %r12
    0000140f: 	jne	.Ltmp1399 # Offset: 5135
    00001415: 	movzbl	(%rbp), %eax
    00001419: 	movb	%al, 0x10(%rbx)
.Ltmp1443:
    0000141c: 	movq	%r12, 0x8(%rbx)
    00001420: 	movb	$0x0, (%rdi,%r12)
    00001425: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000142c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001433: 	addq	$0x20, %rax
    00001437: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000143e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001445: 	je	.Ltmp1400 # Offset: 5189
.Ltmp1425:
    0000144b: 	movq	-0x20(%rax), %rbp
    0000144f: 	callq	clock@PLT # Offset: 5199
    00001454: 	pxor	%xmm0, %xmm0
    00001458: 	movq	%rax, end_time(%rip)
    0000145f: 	movq	%rbp, %rdi
    00001462: 	subq	start_time(%rip), %rax
    00001469: 	cvtsi2sd	%rax, %xmm0
    0000146e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001476: 	callq	_Z13record_resultdPKc # Offset: 5238
    0000147b: 	movq	0x70(%rsp), %rdi
    00001480: 	cmpq	0x18(%rsp), %rdi
    00001485: 	je	.Ltmp1401 # Offset: 5253
    00001487: 	movq	0x80(%rsp), %rax
    0000148f: 	leaq	0x1(%rax), %rsi
    00001493: 	callq	_ZdlPvm@PLT # Offset: 5267
.Ltmp1401:
    00001498: 	movq	0x50(%rsp), %rdi
    0000149d: 	cmpq	0x38(%rsp), %rdi
    000014a2: 	je	.Ltmp1402 # Offset: 5282
    000014a4: 	movq	0x60(%rsp), %rax
    000014a9: 	leaq	0x1(%rax), %rsi
    000014ad: 	callq	_ZdlPvm@PLT # Offset: 5293
.Ltmp1402:
    000014b2: 	movq	0x98(%rsp), %rax
    000014ba: 	subq	%fs:0x28, %rax
    000014c3: 	jne	.Ltmp1403 # Offset: 5315
    000014c9: 	addq	$0xa8, %rsp
    000014d0: 	popq	%rbx
    000014d1: 	popq	%rbp
    000014d2: 	popq	%r12
    000014d4: 	popq	%r13
    000014d6: 	popq	%r14
    000014d8: 	popq	%r15
    000014da: 	retq # Offset: 5338
.Ltmp1270:
    000014db: 	leaq	0x48(%rsp), %rsi
    000014e0: 	xorl	%edx, %edx
    000014e2: 	movq	%rbx, %rdi
    000014e5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5349
    000014ea: 	movq	%rax, (%rbx)
    000014ed: 	movq	%rax, %rdi
    000014f0: 	movq	0x48(%rsp), %rax
    000014f5: 	movq	%rax, 0x10(%rbx)
.Ltmp1434:
    000014f9: 	movq	%r13, %rdx
    000014fc: 	movq	%r14, %rsi
    000014ff: 	callq	memcpy@PLT # Offset: 5375
    00001504: 	movq	0x48(%rsp), %r13
    00001509: 	movq	(%rbx), %rdi
    0000150c: 	jmp	.Ltmp1404 # Offset: 5388
.Ltmp1389:
    00001511: 	testq	%r12, %r12
    00001514: 	jne	.Ltmp1405 # Offset: 5396
    0000151a: 	movq	0x18(%rsp), %rax
    0000151f: 	jmp	.Ltmp1406 # Offset: 5407
.Ltmp1373:
    00001524: 	testq	%r13, %r13
    00001527: 	jne	.Ltmp1407 # Offset: 5415
    0000152d: 	movq	0x18(%rsp), %rax
    00001532: 	jmp	.Ltmp1408 # Offset: 5426
.Ltmp1357:
    00001537: 	testq	%r13, %r13
    0000153a: 	jne	.Ltmp1409 # Offset: 5434
    00001540: 	movq	0x18(%rsp), %rax
    00001545: 	jmp	.Ltmp1410 # Offset: 5445
.Ltmp1341:
    0000154a: 	testq	%r13, %r13
    0000154d: 	jne	.Ltmp1411 # Offset: 5453
    00001553: 	movq	0x18(%rsp), %rax
    00001558: 	jmp	.Ltmp1412 # Offset: 5464
.Ltmp1293:
    0000155d: 	testq	%r13, %r13
    00001560: 	jne	.Ltmp1413 # Offset: 5472
    00001566: 	movq	0x18(%rsp), %rax
    0000156b: 	jmp	.Ltmp1414 # Offset: 5483
.Ltmp1277:
    00001570: 	testq	%r13, %r13
    00001573: 	jne	.Ltmp1415 # Offset: 5491
    00001579: 	movq	0x18(%rsp), %rax
    0000157e: 	jmp	.Ltmp1416 # Offset: 5502
.Ltmp1325:
    00001583: 	testq	%r13, %r13
    00001586: 	jne	.Ltmp1417 # Offset: 5510
    0000158c: 	movq	0x18(%rsp), %rax
    00001591: 	jmp	.Ltmp1418 # Offset: 5521
.Ltmp1309:
    00001596: 	testq	%r13, %r13
    00001599: 	jne	.Ltmp1419 # Offset: 5529
    0000159f: 	movq	0x18(%rsp), %rax
    000015a4: 	jmp	.Ltmp1420 # Offset: 5540
.Ltmp1292:
    000015a9: 	movq	0x20(%rsp), %rdi
    000015ae: 	leaq	0x48(%rsp), %rsi
    000015b3: 	xorl	%edx, %edx
    000015b5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5557
    000015ba: 	movq	%rax, 0x70(%rsp)
    000015bf: 	movq	%rax, %rdi
    000015c2: 	movq	0x48(%rsp), %rax
    000015c7: 	movq	%rax, 0x80(%rsp)
.Ltmp1455:
    000015cf: 	movq	%r13, %rdx
    000015d2: 	movq	%r14, %rsi
    000015d5: 	callq	memcpy@PLT # Offset: 5589
    000015da: 	movq	0x48(%rsp), %r13
    000015df: 	movq	0x70(%rsp), %rax
    000015e4: 	jmp	.Ltmp1414 # Offset: 5604
.Ltmp1276:
    000015e9: 	movq	0x20(%rsp), %rdi
    000015ee: 	leaq	0x48(%rsp), %rsi
    000015f3: 	xorl	%edx, %edx
    000015f5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5621
    000015fa: 	movq	%rax, 0x70(%rsp)
    000015ff: 	movq	%rax, %rdi
    00001602: 	movq	0x48(%rsp), %rax
    00001607: 	movq	%rax, 0x80(%rsp)
.Ltmp1456:
    0000160f: 	movq	%r13, %rdx
    00001612: 	movq	%r14, %rsi
    00001615: 	callq	memcpy@PLT # Offset: 5653
    0000161a: 	movq	0x48(%rsp), %r13
    0000161f: 	movq	0x70(%rsp), %rax
    00001624: 	jmp	.Ltmp1416 # Offset: 5668
.Ltmp1308:
    00001629: 	movq	0x20(%rsp), %rdi
    0000162e: 	leaq	0x48(%rsp), %rsi
    00001633: 	xorl	%edx, %edx
    00001635: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5685
    0000163a: 	movq	%rax, 0x70(%rsp)
    0000163f: 	movq	%rax, %rdi
    00001642: 	movq	0x48(%rsp), %rax
    00001647: 	movq	%rax, 0x80(%rsp)
.Ltmp1458:
    0000164f: 	movq	%r13, %rdx
    00001652: 	movq	%r14, %rsi
    00001655: 	callq	memcpy@PLT # Offset: 5717
    0000165a: 	movq	0x48(%rsp), %r13
    0000165f: 	movq	0x70(%rsp), %rax
    00001664: 	jmp	.Ltmp1420 # Offset: 5732
.Ltmp1324:
    00001669: 	movq	0x20(%rsp), %rdi
    0000166e: 	leaq	0x48(%rsp), %rsi
    00001673: 	xorl	%edx, %edx
    00001675: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5749
    0000167a: 	movq	%rax, 0x70(%rsp)
    0000167f: 	movq	%rax, %rdi
    00001682: 	movq	0x48(%rsp), %rax
    00001687: 	movq	%rax, 0x80(%rsp)
.Ltmp1457:
    0000168f: 	movq	%r13, %rdx
    00001692: 	movq	%r14, %rsi
    00001695: 	callq	memcpy@PLT # Offset: 5781
    0000169a: 	movq	0x48(%rsp), %r13
    0000169f: 	movq	0x70(%rsp), %rax
    000016a4: 	jmp	.Ltmp1418 # Offset: 5796
.Ltmp1340:
    000016a9: 	movq	0x20(%rsp), %rdi
    000016ae: 	leaq	0x48(%rsp), %rsi
    000016b3: 	xorl	%edx, %edx
    000016b5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5813
    000016ba: 	movq	%rax, 0x70(%rsp)
    000016bf: 	movq	%rax, %rdi
    000016c2: 	movq	0x48(%rsp), %rax
    000016c7: 	movq	%rax, 0x80(%rsp)
.Ltmp1454:
    000016cf: 	movq	%r13, %rdx
    000016d2: 	movq	%r14, %rsi
    000016d5: 	callq	memcpy@PLT # Offset: 5845
    000016da: 	movq	0x48(%rsp), %r13
    000016df: 	movq	0x70(%rsp), %rax
    000016e4: 	jmp	.Ltmp1412 # Offset: 5860
.Ltmp1356:
    000016e9: 	movq	0x20(%rsp), %rdi
    000016ee: 	leaq	0x48(%rsp), %rsi
    000016f3: 	xorl	%edx, %edx
    000016f5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5877
    000016fa: 	movq	%rax, 0x70(%rsp)
    000016ff: 	movq	%rax, %rdi
    00001702: 	movq	0x48(%rsp), %rax
    00001707: 	movq	%rax, 0x80(%rsp)
.Ltmp1453:
    0000170f: 	movq	%r13, %rdx
    00001712: 	movq	%r14, %rsi
    00001715: 	callq	memcpy@PLT # Offset: 5909
    0000171a: 	movq	0x48(%rsp), %r13
    0000171f: 	movq	0x70(%rsp), %rax
    00001724: 	jmp	.Ltmp1410 # Offset: 5924
.Ltmp1388:
    00001729: 	movq	0x20(%rsp), %rdi
    0000172e: 	leaq	0x48(%rsp), %rsi
    00001733: 	xorl	%edx, %edx
    00001735: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5941
    0000173a: 	movq	%rax, 0x70(%rsp)
    0000173f: 	movq	%rax, %rdi
    00001742: 	movq	0x48(%rsp), %rax
    00001747: 	movq	%rax, 0x80(%rsp)
.Ltmp1451:
    0000174f: 	movq	%r12, %rdx
    00001752: 	movq	%r13, %rsi
    00001755: 	callq	memcpy@PLT # Offset: 5973
    0000175a: 	movq	0x48(%rsp), %r12
    0000175f: 	movq	0x70(%rsp), %rax
    00001764: 	jmp	.Ltmp1406 # Offset: 5988
.Ltmp1372:
    00001769: 	movq	0x20(%rsp), %rdi
    0000176e: 	leaq	0x48(%rsp), %rsi
    00001773: 	xorl	%edx, %edx
    00001775: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6005
    0000177a: 	movq	%rax, 0x70(%rsp)
    0000177f: 	movq	%rax, %rdi
    00001782: 	movq	0x48(%rsp), %rax
    00001787: 	movq	%rax, 0x80(%rsp)
.Ltmp1452:
    0000178f: 	movq	%r13, %rdx
    00001792: 	movq	%r14, %rsi
    00001795: 	callq	memcpy@PLT # Offset: 6037
    0000179a: 	movq	0x48(%rsp), %r13
    0000179f: 	movq	0x70(%rsp), %rax
    000017a4: 	jmp	.Ltmp1408 # Offset: 6052
.Ltmp1368:
    000017a9: 	movq	-0x8(%rdx), %rax
    000017ad: 	addq	$0x200, %rax
    000017b3: 	jmp	.Ltmp1421 # Offset: 6067
.Ltmp1379:
    000017b8: 	movq	0x20(%rsp), %rsi
    000017bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6084
    000017c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017d0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017d7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017de: 	jne	.Ltmp1422 # Offset: 6110
.Ltmp1384:
    000017e4: 	movq	-0x8(%rdx), %rax
    000017e8: 	addq	$0x200, %rax
    000017ee: 	jmp	.Ltmp1422 # Offset: 6126
.Ltmp1363:
    000017f3: 	movq	0x20(%rsp), %rsi
    000017f8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017ff: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6143
    00001804: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000180b: 	jmp	.Ltmp1423 # Offset: 6155
.Ltmp1352:
    00001810: 	movq	-0x8(%rdx), %rax
    00001814: 	addq	$0x200, %rax
    0000181a: 	jmp	.Ltmp1424 # Offset: 6170
.Ltmp1395:
    0000181f: 	movq	0x20(%rsp), %rsi
    00001824: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000182b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6187
    00001830: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001837: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000183e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001845: 	jne	.Ltmp1425 # Offset: 6213
.Ltmp1400:
    0000184b: 	movq	-0x8(%rdx), %rax
    0000184f: 	addq	$0x200, %rax
    00001855: 	jmp	.Ltmp1425 # Offset: 6229
.Ltmp1315:
    0000185a: 	movq	0x20(%rsp), %rsi
    0000185f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001866: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6246
    0000186b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001872: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001879: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001880: 	jne	.Ltmp1426 # Offset: 6272
.Ltmp1320:
    00001886: 	movq	-0x8(%rdx), %rax
    0000188a: 	addq	$0x200, %rax
    00001890: 	jmp	.Ltmp1426 # Offset: 6288
.Ltmp1288:
    00001895: 	movq	-0x8(%rdx), %rax
    00001899: 	addq	$0x200, %rax
    0000189f: 	jmp	.Ltmp1427 # Offset: 6303
.Ltmp1347:
    000018a4: 	movq	0x20(%rsp), %rsi
    000018a9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6320
    000018b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018bc: 	jmp	.Ltmp1428 # Offset: 6332
.Ltmp1299:
    000018c1: 	movq	0x20(%rsp), %rsi
    000018c6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6349
    000018d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018d9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018e0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018e7: 	jne	.Ltmp1429 # Offset: 6375
.Ltmp1304:
    000018ed: 	movq	-0x8(%rdx), %rax
    000018f1: 	addq	$0x200, %rax
    000018f7: 	jmp	.Ltmp1429 # Offset: 6391
.Ltmp1267:
    000018fc: 	movq	0x20(%rsp), %rsi
    00001901: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001908: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6408
    0000190d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001914: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000191b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001922: 	jne	.Ltmp1430 # Offset: 6434
.Ltmp1272:
    00001928: 	movq	-0x8(%rdx), %rax
    0000192c: 	addq	$0x200, %rax
    00001932: 	jmp	.Ltmp1430 # Offset: 6450
.Ltmp1336:
    00001937: 	movq	-0x8(%rdx), %rax
    0000193b: 	addq	$0x200, %rax
    00001941: 	jmp	.Ltmp1431 # Offset: 6465
.Ltmp1283:
    00001946: 	movq	0x20(%rsp), %rsi
    0000194b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001952: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6482
    00001957: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000195e: 	jmp	.Ltmp1432 # Offset: 6494
.Ltmp1331:
    00001963: 	movq	0x20(%rsp), %rsi
    00001968: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000196f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6511
    00001974: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000197b: 	jmp	.Ltmp1433 # Offset: 6523
.Ltmp1271:
    00001980: 	testq	%r13, %r13
    00001983: 	je	.Ltmp1404 # Offset: 6531
    00001989: 	jmp	.Ltmp1434 # Offset: 6537
    0000198e: 	nop # Size: 2
.Ltmp1303:
    00001990: 	testq	%r13, %r13
    00001993: 	je	.Ltmp1435 # Offset: 6547
    00001999: 	jmp	.Ltmp1436 # Offset: 6553
    0000199e: 	nop # Size: 2
.Ltmp1335:
    000019a0: 	testq	%r13, %r13
    000019a3: 	je	.Ltmp1437 # Offset: 6563
.Ltmp1447:
    000019a9: 	movq	%r13, %rdx
    000019ac: 	movq	%r14, %rsi
    000019af: 	callq	memcpy@PLT # Offset: 6575
    000019b4: 	movq	0x48(%rsp), %r13
    000019b9: 	movq	(%rbx), %rdi
    000019bc: 	jmp	.Ltmp1437 # Offset: 6588
.Ltmp1367:
    000019c1: 	testq	%r13, %r13
    000019c4: 	je	.Ltmp1438 # Offset: 6596
    000019ca: 	jmp	.Ltmp1439 # Offset: 6602
    000019cf: 	nop # Size: 1
.Ltmp1287:
    000019d0: 	testq	%r13, %r13
    000019d3: 	je	.Ltmp1440 # Offset: 6611
.Ltmp1449:
    000019d9: 	movq	%r13, %rdx
    000019dc: 	movq	%r14, %rsi
    000019df: 	callq	memcpy@PLT # Offset: 6623
    000019e4: 	movq	0x48(%rsp), %r13
    000019e9: 	movq	(%rbx), %rdi
    000019ec: 	jmp	.Ltmp1440 # Offset: 6636
.Ltmp1383:
    000019f1: 	testq	%r12, %r12
    000019f4: 	je	.Ltmp1441 # Offset: 6644
    000019fa: 	jmp	.Ltmp1442 # Offset: 6650
    000019ff: 	nop # Size: 1
.Ltmp1399:
    00001a00: 	testq	%r12, %r12
    00001a03: 	je	.Ltmp1443 # Offset: 6659
.Ltmp1448:
    00001a09: 	movq	%r12, %rdx
    00001a0c: 	movq	%rbp, %rsi
    00001a0f: 	callq	memcpy@PLT # Offset: 6671
    00001a14: 	movq	0x48(%rsp), %r12
    00001a19: 	movq	(%rbx), %rdi
    00001a1c: 	jmp	.Ltmp1443 # Offset: 6684
.Ltmp1351:
    00001a21: 	testq	%r13, %r13
    00001a24: 	je	.Ltmp1444 # Offset: 6692
    00001a2a: 	jmp	.Ltmp1445 # Offset: 6698
    00001a2f: 	nop # Size: 1
.Ltmp1319:
    00001a30: 	testq	%r13, %r13
    00001a33: 	je	.Ltmp1446 # Offset: 6707
.Ltmp1450:
    00001a39: 	movq	%r13, %rdx
    00001a3c: 	movq	%r14, %rsi
    00001a3f: 	callq	memcpy@PLT # Offset: 6719
    00001a44: 	movq	0x48(%rsp), %r13
    00001a49: 	movq	(%rbx), %rdi
    00001a4c: 	jmp	.Ltmp1446 # Offset: 6732
.Ltmp1302:
    00001a51: 	leaq	0x48(%rsp), %rsi
    00001a56: 	xorl	%edx, %edx
    00001a58: 	movq	%rbx, %rdi
    00001a5b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6747
    00001a60: 	movq	%rax, (%rbx)
    00001a63: 	movq	%rax, %rdi
    00001a66: 	movq	0x48(%rsp), %rax
    00001a6b: 	movq	%rax, 0x10(%rbx)
.Ltmp1436:
    00001a6f: 	movq	%r13, %rdx
    00001a72: 	movq	%r14, %rsi
    00001a75: 	callq	memcpy@PLT # Offset: 6773
    00001a7a: 	movq	0x48(%rsp), %r13
    00001a7f: 	movq	(%rbx), %rdi
    00001a82: 	jmp	.Ltmp1435 # Offset: 6786
.Ltmp1366:
    00001a87: 	leaq	0x48(%rsp), %rsi
    00001a8c: 	xorl	%edx, %edx
    00001a8e: 	movq	%rbx, %rdi
    00001a91: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6801
    00001a96: 	movq	%rax, (%rbx)
    00001a99: 	movq	%rax, %rdi
    00001a9c: 	movq	0x48(%rsp), %rax
    00001aa1: 	movq	%rax, 0x10(%rbx)
.Ltmp1439:
    00001aa5: 	movq	%r13, %rdx
    00001aa8: 	movq	%r14, %rsi
    00001aab: 	callq	memcpy@PLT # Offset: 6827
    00001ab0: 	movq	0x48(%rsp), %r13
    00001ab5: 	movq	(%rbx), %rdi
    00001ab8: 	jmp	.Ltmp1438 # Offset: 6840
.Ltmp1334:
    00001abd: 	leaq	0x48(%rsp), %rsi
    00001ac2: 	xorl	%edx, %edx
    00001ac4: 	movq	%rbx, %rdi
    00001ac7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6855
    00001acc: 	movq	%rax, (%rbx)
    00001acf: 	movq	%rax, %rdi
    00001ad2: 	movq	0x48(%rsp), %rax
    00001ad7: 	movq	%rax, 0x10(%rbx)
    00001adb: 	jmp	.Ltmp1447 # Offset: 6875
.Ltmp1382:
    00001ae0: 	leaq	0x48(%rsp), %rsi
    00001ae5: 	xorl	%edx, %edx
    00001ae7: 	movq	%rbx, %rdi
    00001aea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6890
    00001aef: 	movq	%rax, (%rbx)
    00001af2: 	movq	%rax, %rdi
    00001af5: 	movq	0x48(%rsp), %rax
    00001afa: 	movq	%rax, 0x10(%rbx)
.Ltmp1442:
    00001afe: 	movq	%r12, %rdx
    00001b01: 	movq	%r13, %rsi
    00001b04: 	callq	memcpy@PLT # Offset: 6916
    00001b09: 	movq	0x48(%rsp), %r12
    00001b0e: 	movq	(%rbx), %rdi
    00001b11: 	jmp	.Ltmp1441 # Offset: 6929
.Ltmp1350:
    00001b16: 	leaq	0x48(%rsp), %rsi
    00001b1b: 	xorl	%edx, %edx
    00001b1d: 	movq	%rbx, %rdi
    00001b20: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6944
    00001b25: 	movq	%rax, (%rbx)
    00001b28: 	movq	%rax, %rdi
    00001b2b: 	movq	0x48(%rsp), %rax
    00001b30: 	movq	%rax, 0x10(%rbx)
.Ltmp1445:
    00001b34: 	movq	%r13, %rdx
    00001b37: 	movq	%r14, %rsi
    00001b3a: 	callq	memcpy@PLT # Offset: 6970
    00001b3f: 	movq	0x48(%rsp), %r13
    00001b44: 	movq	(%rbx), %rdi
    00001b47: 	jmp	.Ltmp1444 # Offset: 6983
.Ltmp1398:
    00001b4c: 	leaq	0x48(%rsp), %rsi
    00001b51: 	xorl	%edx, %edx
    00001b53: 	movq	%rbx, %rdi
    00001b56: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6998
    00001b5b: 	movq	%rax, (%rbx)
    00001b5e: 	movq	%rax, %rdi
    00001b61: 	movq	0x48(%rsp), %rax
    00001b66: 	movq	%rax, 0x10(%rbx)
    00001b6a: 	jmp	.Ltmp1448 # Offset: 7018
.Ltmp1286:
    00001b6f: 	leaq	0x48(%rsp), %rsi
    00001b74: 	xorl	%edx, %edx
    00001b76: 	movq	%rbx, %rdi
    00001b79: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7033
    00001b7e: 	movq	%rax, (%rbx)
    00001b81: 	movq	%rax, %rdi
    00001b84: 	movq	0x48(%rsp), %rax
    00001b89: 	movq	%rax, 0x10(%rbx)
    00001b8d: 	jmp	.Ltmp1449 # Offset: 7053
.Ltmp1318:
    00001b92: 	leaq	0x48(%rsp), %rsi
    00001b97: 	xorl	%edx, %edx
    00001b99: 	movq	%rbx, %rdi
    00001b9c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7068
    00001ba1: 	movq	%rax, (%rbx)
    00001ba4: 	movq	%rax, %rdi
    00001ba7: 	movq	0x48(%rsp), %rax
    00001bac: 	movq	%rax, 0x10(%rbx)
    00001bb0: 	jmp	.Ltmp1450 # Offset: 7088
.Ltmp1275:
    00001bb5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bbc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7100
.Ltmp1278:
    00001bc1: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bc8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7112
.Ltmp1285:
    00001bcd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bd4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7124
.Ltmp1291:
    00001bd9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001be0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7136
.Ltmp1294:
    00001be5: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bec: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7148
.Ltmp1301:
    00001bf1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bf8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7160
.Ltmp1307:
    00001bfd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c04: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7172
.Ltmp1310:
    00001c09: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c10: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7184
.Ltmp1317:
    00001c15: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c1c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7196
.Ltmp1323:
    00001c21: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c28: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7208
.Ltmp1326:
    00001c2d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c34: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7220
.Ltmp1333:
    00001c39: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c40: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7232
.Ltmp1339:
    00001c45: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c4c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7244
.Ltmp1342:
    00001c51: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c58: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7256
.Ltmp1349:
    00001c5d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c64: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7268
.Ltmp1355:
    00001c69: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c70: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7280
.Ltmp1358:
    00001c75: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c7c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7292
.Ltmp1365:
    00001c81: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c88: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7304
.Ltmp1371:
    00001c8d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c94: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7316
.Ltmp1374:
    00001c99: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ca0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7328
.Ltmp1381:
    00001ca5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001cac: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7340
.Ltmp1387:
    00001cb1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001cb8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7352
.Ltmp1390:
    00001cbd: 	leaq	DATAat0x3d182(%rip), %rdi
    00001cc4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7364
.Ltmp1397:
    00001cc9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001cd0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7376
.Ltmp1403:
    00001cd5: 	callq	__stack_chk_fail@PLT # Offset: 7381
.Ltmp1269:
    00001cda: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ce1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7393
.Ltmp1405:
    00001ce6: 	movq	0x18(%rsp), %rdi
    00001ceb: 	jmp	.Ltmp1451 # Offset: 7403
.Ltmp1407:
    00001cf0: 	movq	0x18(%rsp), %rdi
    00001cf5: 	jmp	.Ltmp1452 # Offset: 7413
.Ltmp1409:
    00001cfa: 	movq	0x18(%rsp), %rdi
    00001cff: 	jmp	.Ltmp1453 # Offset: 7423
.Ltmp1411:
    00001d04: 	movq	0x18(%rsp), %rdi
    00001d09: 	jmp	.Ltmp1454 # Offset: 7433
.Ltmp1413:
    00001d0e: 	movq	0x18(%rsp), %rdi
    00001d13: 	jmp	.Ltmp1455 # Offset: 7443
.Ltmp1415:
    00001d18: 	movq	0x18(%rsp), %rdi
    00001d1d: 	jmp	.Ltmp1456 # Offset: 7453
.Ltmp1417:
    00001d22: 	movq	0x18(%rsp), %rdi
    00001d27: 	jmp	.Ltmp1457 # Offset: 7463
.Ltmp1419:
    00001d2c: 	movq	0x18(%rsp), %rdi
    00001d31: 	jmp	.Ltmp1458 # Offset: 7473
    00001d36: 	endbr64
.Ltmp1460:
    00001d3a: 	movq	%rax, %rbp
    00001d3d: 	jmp	.Ltmp1459 # Offset: 7485
    00001d3f: 	endbr64
    00001d43: 	jmp	.Ltmp1460 # Offset: 7491
    00001d45: 	endbr64
    00001d49: 	jmp	.Ltmp1460 # Offset: 7497
    00001d4b: 	endbr64
    00001d4f: 	jmp	.Ltmp1460 # Offset: 7503
    00001d51: 	endbr64
    00001d55: 	jmp	.Ltmp1460 # Offset: 7509
    00001d57: 	endbr64
    00001d5b: 	jmp	.Ltmp1460 # Offset: 7515
    00001d5d: 	endbr64
    00001d61: 	jmp	.Ltmp1460 # Offset: 7521
    00001d63: 	endbr64
    00001d67: 	movq	%rax, %rbp
    00001d6a: 	jmp	.Ltmp1461 # Offset: 7530
    00001d6c: 	endbr64
    00001d70: 	jmp	.Ltmp1460 # Offset: 7536
    00001d72: 	endbr64
    00001d76: 	jmp	.Ltmp1460 # Offset: 7542
    00001d78: 	endbr64
    00001d7c: 	jmp	.Ltmp1460 # Offset: 7548
    00001d7e: 	endbr64
    00001d82: 	jmp	.Ltmp1460 # Offset: 7554
.Ltmp1459:
    00001d84: 	movq	0x70(%rsp), %rdi
    00001d89: 	cmpq	0x18(%rsp), %rdi
    00001d8e: 	je	.Ltmp1461 # Offset: 7566
    00001d90: 	movq	0x80(%rsp), %rax
    00001d98: 	leaq	0x1(%rax), %rsi
    00001d9c: 	callq	_ZdlPvm@PLT # Offset: 7580
.Ltmp1461:
    00001da1: 	movq	0x50(%rsp), %rdi
    00001da6: 	cmpq	0x38(%rsp), %rdi
    00001dab: 	je	.Ltmp1462 # Offset: 7595
    00001dad: 	movq	0x60(%rsp), %rax
    00001db2: 	leaq	0x1(%rax), %rsi
    00001db6: 	callq	_ZdlPvm@PLT # Offset: 7606
.Ltmp1462:
    00001dbb: 	movq	%rbp, %rdi
    00001dbe: 	callq	_Unwind_Resume@PLT # Offset: 7614
    00001dc3: 	endbr64
    00001dc7: 	jmp	.Ltmp1460 # Offset: 7623
    00001dcc: 	endbr64
    00001dd0: 	jmp	.Ltmp1460 # Offset: 7632
    00001dd5: 	endbr64
    00001dd9: 	jmp	.Ltmp1460 # Offset: 7641
    00001dde: 	endbr64
    00001de2: 	jmp	.Ltmp1460 # Offset: 7650
    00001de7: 	endbr64
    00001deb: 	jmp	.Ltmp1460 # Offset: 7659
    00001df0: 	endbr64
    00001df4: 	jmp	.Ltmp1460 # Offset: 7668
    00001df9: 	endbr64
    00001dfd: 	jmp	.Ltmp1460 # Offset: 7677
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIsENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyIiENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 143
  State       : disassembled
  Address     : 0x104f0
  Size        : 0x1caf
  MaxSize     : 0x1cb0
  Offset      : 0x104f0
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIiENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0142:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%edx, %r13d
    0000000d: 	movl	$0x5f32, %edx
    00000012: 	pushq	%r12
    00000014: 	movl	%esi, %r12d
    00000017: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000001e: 	pushq	%rbp
    0000001f: 	movq	%rdi, %rbp
    00000022: 	pushq	%rbx
    00000023: 	subq	$0x98, %rsp
    0000002a: 	movl	%ecx, 0x10(%rsp)
    0000002e: 	leaq	0x60(%rsp), %rdi
    00000033: 	movl	%r8d, 0x14(%rsp)
    00000038: 	movq	%fs:0x28, %rax
    00000041: 	movq	%rax, 0x88(%rsp)
    00000049: 	xorl	%eax, %eax
    0000004b: 	leaq	0x50(%rsp), %rax
    00000050: 	movw	%dx, 0x74(%rsp)
    00000055: 	movl	$0xd, %edx
    0000005a: 	movq	%rax, 0x28(%rsp)
    0000005f: 	movq	%rax, 0x40(%rsp)
    00000064: 	movl	$0x5f32, %eax
    00000069: 	movw	%ax, 0x54(%rsp)
    0000006e: 	leaq	0x70(%rsp), %rax
    00000073: 	movl	$0x33746e69, 0x50(%rsp)
    0000007b: 	movb	$0x74, 0x56(%rsp)
    00000080: 	movq	$0x7, 0x48(%rsp)
    00000089: 	movb	$0x0, 0x57(%rsp)
    0000008e: 	movq	%rdi, 0x20(%rsp)
    00000093: 	movq	%rax, 0x18(%rsp)
    00000098: 	movq	%rax, 0x60(%rsp)
    0000009d: 	movl	$0x33746e69, 0x70(%rsp)
    000000a5: 	movb	$0x74, 0x76(%rsp)
    000000aa: 	movq	$0x7, 0x68(%rsp)
    000000b3: 	movb	$0x0, 0x77(%rsp)
    000000b8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 184
    000000bd: 	callq	clock@PLT # Offset: 189
    000000c2: 	movd	%r12d, %xmm4
    000000c7: 	movl	iterations(%rip), %ecx
    000000cd: 	xorl	%r14d, %r14d
    000000d0: 	pshufd	$0x0, %xmm4, %xmm3
    000000d5: 	movq	%rax, start_time(%rip)
    000000dc: 	leaq	0x7d00(%rbp), %rbx
    000000e3: 	leaq	DATAat0x3d1d8(%rip), %r15
    000000ea: 	movaps	%xmm3, (%rsp)
    000000ee: 	testl	%ecx, %ecx
    000000f0: 	jle	.Ltmp1463 # Offset: 240
    000000f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1466:
    000000f8: 	movq	%rbp, %rax
    000000fb: 	pxor	%xmm1, %xmm1
    000000ff: 	nop # Size: 1
.Ltmp1464:
    00000100: 	movdqu	(%rax), %xmm0
    00000104: 	pand	(%rsp), %xmm0
    00000109: 	addq	$0x10, %rax
    0000010d: 	paddd	%xmm0, %xmm1
    00000111: 	cmpq	%rax, %rbx
    00000114: 	jne	.Ltmp1464 # Offset: 276
    00000116: 	cvttsd2si	init_value(%rip), %edx
    0000011e: 	movdqa	%xmm1, %xmm0
    00000122: 	psrldq	$0x8, %xmm0
    00000127: 	paddd	%xmm0, %xmm1
    0000012b: 	movdqa	%xmm1, %xmm0
    0000012f: 	andl	%r12d, %edx
    00000132: 	psrldq	$0x4, %xmm0
    00000137: 	imull	$0x1f40, %edx, %edx
    0000013d: 	paddd	%xmm0, %xmm1
    00000141: 	movd	%xmm1, %eax
    00000145: 	cmpl	%eax, %edx
    00000147: 	je	.Ltmp1465 # Offset: 327
    00000149: 	movl	current_test(%rip), %edx
    0000014f: 	movq	%r15, %rsi
    00000152: 	movl	$0x1, %edi
    00000157: 	xorl	%eax, %eax
    00000159: 	callq	__printf_chk@PLT # Offset: 345
    0000015e: 	movl	iterations(%rip), %ecx
.Ltmp1465:
    00000164: 	addl	$0x1, %r14d
    00000168: 	cmpl	%ecx, %r14d
    0000016b: 	jl	.Ltmp1466 # Offset: 363
.Ltmp1463:
    0000016d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000174: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000017b: 	subq	$0x20, %rax
    0000017f: 	cmpq	%rax, %rbx
    00000182: 	je	.Ltmp1467 # Offset: 386
    00000188: 	leaq	0x10(%rbx), %rdi
    0000018c: 	movq	0x68(%rsp), %r14
    00000191: 	movq	%rdi, (%rbx)
    00000194: 	movq	0x60(%rsp), %r15
    00000199: 	movq	%r15, %rax
    0000019c: 	addq	%r14, %rax
    0000019f: 	je	.Ltmp1468 # Offset: 415
    000001a1: 	testq	%r15, %r15
    000001a4: 	je	.Ltmp1469 # Offset: 420
.Ltmp1468:
    000001aa: 	movq	%r14, 0x38(%rsp)
    000001af: 	cmpq	$0xf, %r14
    000001b3: 	ja	.Ltmp1470 # Offset: 435
    000001b9: 	cmpq	$0x1, %r14
    000001bd: 	jne	.Ltmp1471 # Offset: 445
    000001c3: 	movzbl	(%r15), %eax
    000001c7: 	movb	%al, 0x10(%rbx)
.Ltmp1604:
    000001ca: 	movq	%r14, 0x8(%rbx)
    000001ce: 	movb	$0x0, (%rdi,%r14)
    000001d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e1: 	addq	$0x20, %rax
    000001e5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001f3: 	je	.Ltmp1472 # Offset: 499
.Ltmp1630:
    000001f9: 	movq	-0x20(%rax), %r14
    000001fd: 	callq	clock@PLT # Offset: 509
    00000202: 	pxor	%xmm0, %xmm0
    00000206: 	movq	%rax, end_time(%rip)
    0000020d: 	movq	%r14, %rdi
    00000210: 	subq	start_time(%rip), %rax
    00000217: 	cvtsi2sd	%rax, %xmm0
    0000021c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000224: 	callq	_Z13record_resultdPKc # Offset: 548
    00000229: 	movq	0x60(%rsp), %rdi
    0000022e: 	cmpq	0x18(%rsp), %rdi
    00000233: 	je	.Ltmp1473 # Offset: 563
    00000235: 	movq	0x70(%rsp), %rax
    0000023a: 	leaq	0x1(%rax), %rsi
    0000023e: 	callq	_ZdlPvm@PLT # Offset: 574
.Ltmp1473:
    00000243: 	movq	0x18(%rsp), %rax
    00000248: 	movq	0x40(%rsp), %r15
    0000024d: 	movq	0x48(%rsp), %r14
    00000252: 	movq	%rax, 0x60(%rsp)
    00000257: 	movq	%r15, %rax
    0000025a: 	addq	%r14, %rax
    0000025d: 	je	.Ltmp1474 # Offset: 605
    0000025f: 	testq	%r15, %r15
    00000262: 	je	.Ltmp1475 # Offset: 610
.Ltmp1474:
    00000268: 	movq	%r14, 0x38(%rsp)
    0000026d: 	cmpq	$0xf, %r14
    00000271: 	ja	.Ltmp1476 # Offset: 625
    00000277: 	cmpq	$0x1, %r14
    0000027b: 	jne	.Ltmp1477 # Offset: 635
    00000281: 	movzbl	(%r15), %eax
    00000285: 	movb	%al, 0x70(%rsp)
    00000289: 	movq	0x18(%rsp), %rax
.Ltmp1616:
    0000028e: 	movq	%r14, 0x68(%rsp)
    00000293: 	movb	$0x0, (%rax,%r14)
    00000298: 	movabsq	$0x3fffffffffffffff, %rax
    000002a2: 	subq	0x68(%rsp), %rax
    000002a7: 	cmpq	$0x15, %rax
    000002ab: 	jbe	.Ltmp1478 # Offset: 683
    000002b1: 	movq	0x20(%rsp), %rdi
    000002b6: 	movl	$0x16, %edx
    000002bb: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 706
    000002c7: 	callq	clock@PLT # Offset: 711
    000002cc: 	movl	iterations(%rip), %ecx
    000002d2: 	movq	%rax, start_time(%rip)
    000002d9: 	testl	%ecx, %ecx
    000002db: 	jle	.Ltmp1479 # Offset: 731
    000002e1: 	movl	0x10(%rsp), %eax
    000002e5: 	andl	0x14(%rsp), %eax
    000002e9: 	xorl	%r14d, %r14d
    000002ec: 	leaq	0x7d00(%rbp), %rbx
    000002f3: 	andl	%r13d, %eax
    000002f6: 	leaq	DATAat0x3d1d8(%rip), %r15
    000002fd: 	andl	%r12d, %eax
    00000300: 	movd	%eax, %xmm4
    00000304: 	pshufd	$0x0, %xmm4, %xmm3
    00000309: 	movaps	%xmm3, (%rsp)
    0000030d: 	nopl	(%rax) # Size: 3
.Ltmp1482:
    00000310: 	movq	%rbp, %rax
    00000313: 	pxor	%xmm1, %xmm1
    00000317: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1480:
    00000320: 	movdqu	(%rax), %xmm0
    00000324: 	pand	(%rsp), %xmm0
    00000329: 	addq	$0x10, %rax
    0000032d: 	paddd	%xmm0, %xmm1
    00000331: 	cmpq	%rbx, %rax
    00000334: 	jne	.Ltmp1480 # Offset: 820
    00000336: 	movdqa	%xmm1, %xmm0
    0000033a: 	cvttsd2si	init_value(%rip), %edx
    00000342: 	andl	0x14(%rsp), %edx
    00000346: 	psrldq	$0x8, %xmm0
    0000034b: 	andl	0x10(%rsp), %edx
    0000034f: 	paddd	%xmm0, %xmm1
    00000353: 	andl	%r13d, %edx
    00000356: 	movdqa	%xmm1, %xmm0
    0000035a: 	andl	%r12d, %edx
    0000035d: 	psrldq	$0x4, %xmm0
    00000362: 	imull	$0x1f40, %edx, %edx
    00000368: 	paddd	%xmm0, %xmm1
    0000036c: 	movd	%xmm1, %eax
    00000370: 	cmpl	%eax, %edx
    00000372: 	je	.Ltmp1481 # Offset: 882
    00000374: 	movl	current_test(%rip), %edx
    0000037a: 	movq	%r15, %rsi
    0000037d: 	movl	$0x1, %edi
    00000382: 	xorl	%eax, %eax
    00000384: 	callq	__printf_chk@PLT # Offset: 900
    00000389: 	movl	iterations(%rip), %ecx
.Ltmp1481:
    0000038f: 	addl	$0x1, %r14d
    00000393: 	cmpl	%ecx, %r14d
    00000396: 	jl	.Ltmp1482 # Offset: 918
.Ltmp1479:
    0000039c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003a3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003aa: 	subq	$0x20, %rax
    000003ae: 	cmpq	%rax, %rbx
    000003b1: 	je	.Ltmp1483 # Offset: 945
    000003b7: 	leaq	0x10(%rbx), %rdi
    000003bb: 	movq	0x68(%rsp), %r14
    000003c0: 	movq	%rdi, (%rbx)
    000003c3: 	movq	0x60(%rsp), %r15
    000003c8: 	movq	%r15, %rax
    000003cb: 	addq	%r14, %rax
    000003ce: 	je	.Ltmp1484 # Offset: 974
    000003d0: 	testq	%r15, %r15
    000003d3: 	je	.Ltmp1485 # Offset: 979
.Ltmp1484:
    000003d9: 	movq	%r14, 0x38(%rsp)
    000003de: 	cmpq	$0xf, %r14
    000003e2: 	ja	.Ltmp1486 # Offset: 994
    000003e8: 	cmpq	$0x1, %r14
    000003ec: 	jne	.Ltmp1487 # Offset: 1004
    000003f2: 	movzbl	(%r15), %eax
    000003f6: 	movb	%al, 0x10(%rbx)
.Ltmp1640:
    000003f9: 	movq	%r14, 0x8(%rbx)
    000003fd: 	movb	$0x0, (%rdi,%r14)
    00000402: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000409: 	addq	$0x20, %rax
    0000040d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1632:
    00000414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000041b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000422: 	je	.Ltmp1488 # Offset: 1058
.Ltmp1627:
    00000428: 	movq	-0x20(%rax), %r14
    0000042c: 	callq	clock@PLT # Offset: 1068
    00000431: 	pxor	%xmm0, %xmm0
    00000435: 	movq	%rax, end_time(%rip)
    0000043c: 	movq	%r14, %rdi
    0000043f: 	subq	start_time(%rip), %rax
    00000446: 	cvtsi2sd	%rax, %xmm0
    0000044b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000453: 	callq	_Z13record_resultdPKc # Offset: 1107
    00000458: 	movq	0x60(%rsp), %rdi
    0000045d: 	cmpq	0x18(%rsp), %rdi
    00000462: 	je	.Ltmp1489 # Offset: 1122
    00000464: 	movq	0x70(%rsp), %rax
    00000469: 	leaq	0x1(%rax), %rsi
    0000046d: 	callq	_ZdlPvm@PLT # Offset: 1133
.Ltmp1489:
    00000472: 	movq	0x18(%rsp), %rax
    00000477: 	movq	0x40(%rsp), %r15
    0000047c: 	movq	0x48(%rsp), %r14
    00000481: 	movq	%rax, 0x60(%rsp)
    00000486: 	movq	%r15, %rax
    00000489: 	addq	%r14, %rax
    0000048c: 	je	.Ltmp1490 # Offset: 1164
    0000048e: 	testq	%r15, %r15
    00000491: 	je	.Ltmp1491 # Offset: 1169
.Ltmp1490:
    00000497: 	movq	%r14, 0x38(%rsp)
    0000049c: 	cmpq	$0xf, %r14
    000004a0: 	ja	.Ltmp1492 # Offset: 1184
    000004a6: 	cmpq	$0x1, %r14
    000004aa: 	jne	.Ltmp1493 # Offset: 1194
    000004b0: 	movzbl	(%r15), %eax
    000004b4: 	movb	%al, 0x70(%rsp)
    000004b8: 	movq	0x18(%rsp), %rax
.Ltmp1614:
    000004bd: 	movq	%r14, 0x68(%rsp)
    000004c2: 	movb	$0x0, (%rax,%r14)
    000004c7: 	movabsq	$0x3fffffffffffffff, %rax
    000004d1: 	subq	0x68(%rsp), %rax
    000004d6: 	cmpq	$0x16, %rax
    000004da: 	jbe	.Ltmp1494 # Offset: 1242
    000004e0: 	movq	0x20(%rsp), %rdi
    000004e5: 	movl	$0x17, %edx
    000004ea: 	leaq	DATAat0x3d1ff(%rip), %rsi
    000004f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1265
    000004f6: 	callq	clock@PLT # Offset: 1270
    000004fb: 	movl	iterations(%rip), %ecx
    00000501: 	movq	%rax, start_time(%rip)
    00000508: 	testl	%ecx, %ecx
    0000050a: 	jle	.Ltmp1495 # Offset: 1290
    00000510: 	movl	0x10(%rsp), %eax
    00000514: 	andl	0x14(%rsp), %eax
    00000518: 	xorl	%r14d, %r14d
    0000051b: 	leaq	0x7d00(%rbp), %rbx
    00000522: 	andl	%r13d, %eax
    00000525: 	andl	%r12d, %eax
    00000528: 	movd	%eax, %xmm3
    0000052c: 	movl	%eax, %r15d
    0000052f: 	pshufd	$0x0, %xmm3, %xmm2
    00000534: 	movaps	%xmm2, (%rsp)
    00000538: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1498:
    00000540: 	movq	%rbp, %rax
    00000543: 	pxor	%xmm1, %xmm1
    00000547: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1496:
    00000550: 	movdqu	(%rax), %xmm0
    00000554: 	pand	(%rsp), %xmm0
    00000559: 	addq	$0x10, %rax
    0000055d: 	paddd	%xmm0, %xmm1
    00000561: 	cmpq	%rax, %rbx
    00000564: 	jne	.Ltmp1496 # Offset: 1380
    00000566: 	cvttsd2si	init_value(%rip), %edx
    0000056e: 	movdqa	%xmm1, %xmm0
    00000572: 	psrldq	$0x8, %xmm0
    00000577: 	paddd	%xmm0, %xmm1
    0000057b: 	movdqa	%xmm1, %xmm0
    0000057f: 	andl	%r15d, %edx
    00000582: 	psrldq	$0x4, %xmm0
    00000587: 	imull	$0x1f40, %edx, %edx
    0000058d: 	paddd	%xmm0, %xmm1
    00000591: 	movd	%xmm1, %eax
    00000595: 	cmpl	%eax, %edx
    00000597: 	je	.Ltmp1497 # Offset: 1431
    00000599: 	movl	current_test(%rip), %edx
    0000059f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000005a6: 	movl	$0x1, %edi
    000005ab: 	xorl	%eax, %eax
    000005ad: 	callq	__printf_chk@PLT # Offset: 1453
    000005b2: 	movl	iterations(%rip), %ecx
.Ltmp1497:
    000005b8: 	addl	$0x1, %r14d
    000005bc: 	cmpl	%ecx, %r14d
    000005bf: 	jl	.Ltmp1498 # Offset: 1471
.Ltmp1495:
    000005c5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000005d3: 	subq	$0x20, %rax
    000005d7: 	cmpq	%rax, %rbx
    000005da: 	je	.Ltmp1499 # Offset: 1498
    000005e0: 	leaq	0x10(%rbx), %rdi
    000005e4: 	movq	0x68(%rsp), %r14
    000005e9: 	movq	%rdi, (%rbx)
    000005ec: 	movq	0x60(%rsp), %r15
    000005f1: 	movq	%r15, %rax
    000005f4: 	addq	%r14, %rax
    000005f7: 	je	.Ltmp1500 # Offset: 1527
    000005f9: 	testq	%r15, %r15
    000005fc: 	je	.Ltmp1501 # Offset: 1532
.Ltmp1500:
    00000602: 	movq	%r14, 0x38(%rsp)
    00000607: 	cmpq	$0xf, %r14
    0000060b: 	ja	.Ltmp1502 # Offset: 1547
    00000611: 	cmpq	$0x1, %r14
    00000615: 	jne	.Ltmp1503 # Offset: 1557
    0000061b: 	movzbl	(%r15), %eax
    0000061f: 	movb	%al, 0x10(%rbx)
.Ltmp1635:
    00000622: 	movq	%r14, 0x8(%rbx)
    00000626: 	movb	$0x0, (%rdi,%r14)
    0000062b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000632: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000639: 	addq	$0x20, %rax
    0000063d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000644: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000064b: 	je	.Ltmp1504 # Offset: 1611
.Ltmp1629:
    00000651: 	movq	-0x20(%rax), %r14
    00000655: 	callq	clock@PLT # Offset: 1621
    0000065a: 	pxor	%xmm0, %xmm0
    0000065e: 	movq	%rax, end_time(%rip)
    00000665: 	movq	%r14, %rdi
    00000668: 	subq	start_time(%rip), %rax
    0000066f: 	cvtsi2sd	%rax, %xmm0
    00000674: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000067c: 	callq	_Z13record_resultdPKc # Offset: 1660
    00000681: 	movq	0x60(%rsp), %rdi
    00000686: 	cmpq	0x18(%rsp), %rdi
    0000068b: 	je	.Ltmp1505 # Offset: 1675
    0000068d: 	movq	0x70(%rsp), %rax
    00000692: 	leaq	0x1(%rax), %rsi
    00000696: 	callq	_ZdlPvm@PLT # Offset: 1686
.Ltmp1505:
    0000069b: 	movq	0x18(%rsp), %rax
    000006a0: 	movq	0x40(%rsp), %r15
    000006a5: 	movq	0x48(%rsp), %r14
    000006aa: 	movq	%rax, 0x60(%rsp)
    000006af: 	movq	%r15, %rax
    000006b2: 	addq	%r14, %rax
    000006b5: 	je	.Ltmp1506 # Offset: 1717
    000006b7: 	testq	%r15, %r15
    000006ba: 	je	.Ltmp1507 # Offset: 1722
.Ltmp1506:
    000006c0: 	movq	%r14, 0x38(%rsp)
    000006c5: 	cmpq	$0xf, %r14
    000006c9: 	ja	.Ltmp1508 # Offset: 1737
    000006cf: 	cmpq	$0x1, %r14
    000006d3: 	jne	.Ltmp1509 # Offset: 1747
    000006d9: 	movzbl	(%r15), %eax
    000006dd: 	movb	%al, 0x70(%rsp)
    000006e1: 	movq	0x18(%rsp), %rax
.Ltmp1620:
    000006e6: 	movq	%r14, 0x68(%rsp)
    000006eb: 	movb	$0x0, (%rax,%r14)
    000006f0: 	movabsq	$0x3fffffffffffffff, %rax
    000006fa: 	subq	0x68(%rsp), %rax
    000006ff: 	cmpq	$0xb, %rax
    00000703: 	jbe	.Ltmp1510 # Offset: 1795
    00000709: 	movq	0x20(%rsp), %rdi
    0000070e: 	movl	$0xc, %edx
    00000713: 	leaq	DATAat0x3d220(%rip), %rsi
    0000071a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1818
    0000071f: 	callq	clock@PLT # Offset: 1823
    00000724: 	movd	%r12d, %xmm3
    00000729: 	movl	iterations(%rip), %ecx
    0000072f: 	xorl	%r14d, %r14d
    00000732: 	pshufd	$0x0, %xmm3, %xmm2
    00000737: 	movq	%rax, start_time(%rip)
    0000073e: 	leaq	0x7d00(%rbp), %rbx
    00000745: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000074c: 	movaps	%xmm2, (%rsp)
    00000750: 	testl	%ecx, %ecx
    00000752: 	jle	.Ltmp1511 # Offset: 1874
    00000754: 	nopl	(%rax) # Size: 4
.Ltmp1514:
    00000758: 	movq	%rbp, %rax
    0000075b: 	pxor	%xmm1, %xmm1
    0000075f: 	nop # Size: 1
.Ltmp1512:
    00000760: 	movdqu	(%rax), %xmm0
    00000764: 	por	(%rsp), %xmm0
    00000769: 	addq	$0x10, %rax
    0000076d: 	paddd	%xmm0, %xmm1
    00000771: 	cmpq	%rbx, %rax
    00000774: 	jne	.Ltmp1512 # Offset: 1908
    00000776: 	cvttsd2si	init_value(%rip), %edx
    0000077e: 	movdqa	%xmm1, %xmm0
    00000782: 	psrldq	$0x8, %xmm0
    00000787: 	paddd	%xmm0, %xmm1
    0000078b: 	movdqa	%xmm1, %xmm0
    0000078f: 	orl	%r12d, %edx
    00000792: 	psrldq	$0x4, %xmm0
    00000797: 	imull	$0x1f40, %edx, %edx
    0000079d: 	paddd	%xmm0, %xmm1
    000007a1: 	movd	%xmm1, %eax
    000007a5: 	cmpl	%eax, %edx
    000007a7: 	je	.Ltmp1513 # Offset: 1959
    000007a9: 	movl	current_test(%rip), %edx
    000007af: 	movq	%r15, %rsi
    000007b2: 	movl	$0x1, %edi
    000007b7: 	xorl	%eax, %eax
    000007b9: 	callq	__printf_chk@PLT # Offset: 1977
    000007be: 	movl	iterations(%rip), %ecx
.Ltmp1513:
    000007c4: 	addl	$0x1, %r14d
    000007c8: 	cmpl	%ecx, %r14d
    000007cb: 	jl	.Ltmp1514 # Offset: 1995
.Ltmp1511:
    000007cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000007db: 	subq	$0x20, %rax
    000007df: 	cmpq	%rax, %rbx
    000007e2: 	je	.Ltmp1515 # Offset: 2018
    000007e8: 	leaq	0x10(%rbx), %rdi
    000007ec: 	movq	0x68(%rsp), %r14
    000007f1: 	movq	%rdi, (%rbx)
    000007f4: 	movq	0x60(%rsp), %r15
    000007f9: 	movq	%r15, %rax
    000007fc: 	addq	%r14, %rax
    000007ff: 	je	.Ltmp1516 # Offset: 2047
    00000801: 	testq	%r15, %r15
    00000804: 	je	.Ltmp1517 # Offset: 2052
.Ltmp1516:
    0000080a: 	movq	%r14, 0x38(%rsp)
    0000080f: 	cmpq	$0xf, %r14
    00000813: 	ja	.Ltmp1518 # Offset: 2067
    00000819: 	cmpq	$0x1, %r14
    0000081d: 	jne	.Ltmp1519 # Offset: 2077
    00000823: 	movzbl	(%r15), %eax
    00000827: 	movb	%al, 0x10(%rbx)
.Ltmp1646:
    0000082a: 	movq	%r14, 0x8(%rbx)
    0000082e: 	movb	$0x0, (%rdi,%r14)
    00000833: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000083a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000841: 	addq	$0x20, %rax
    00000845: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000084c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000853: 	je	.Ltmp1520 # Offset: 2131
.Ltmp1626:
    00000859: 	movq	-0x20(%rax), %r14
    0000085d: 	callq	clock@PLT # Offset: 2141
    00000862: 	pxor	%xmm0, %xmm0
    00000866: 	movq	%rax, end_time(%rip)
    0000086d: 	movq	%r14, %rdi
    00000870: 	subq	start_time(%rip), %rax
    00000877: 	cvtsi2sd	%rax, %xmm0
    0000087c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000884: 	callq	_Z13record_resultdPKc # Offset: 2180
    00000889: 	movq	0x60(%rsp), %rdi
    0000088e: 	cmpq	0x18(%rsp), %rdi
    00000893: 	je	.Ltmp1521 # Offset: 2195
    00000895: 	movq	0x70(%rsp), %rax
    0000089a: 	leaq	0x1(%rax), %rsi
    0000089e: 	callq	_ZdlPvm@PLT # Offset: 2206
.Ltmp1521:
    000008a3: 	movq	0x18(%rsp), %rax
    000008a8: 	movq	0x40(%rsp), %r15
    000008ad: 	movq	0x48(%rsp), %r14
    000008b2: 	movq	%rax, 0x60(%rsp)
    000008b7: 	movq	%r15, %rax
    000008ba: 	addq	%r14, %rax
    000008bd: 	je	.Ltmp1522 # Offset: 2237
    000008bf: 	testq	%r15, %r15
    000008c2: 	je	.Ltmp1523 # Offset: 2242
.Ltmp1522:
    000008c8: 	movq	%r14, 0x38(%rsp)
    000008cd: 	cmpq	$0xf, %r14
    000008d1: 	ja	.Ltmp1524 # Offset: 2257
    000008d7: 	cmpq	$0x1, %r14
    000008db: 	jne	.Ltmp1525 # Offset: 2267
    000008e1: 	movzbl	(%r15), %eax
    000008e5: 	movb	%al, 0x70(%rsp)
    000008e9: 	movq	0x18(%rsp), %rax
.Ltmp1618:
    000008ee: 	movq	%r14, 0x68(%rsp)
    000008f3: 	movb	$0x0, (%rax,%r14)
    000008f8: 	movabsq	$0x3fffffffffffffff, %rax
    00000902: 	subq	0x68(%rsp), %rax
    00000907: 	cmpq	$0x14, %rax
    0000090b: 	jbe	.Ltmp1526 # Offset: 2315
    00000911: 	movq	0x20(%rsp), %rdi
    00000916: 	movl	$0x15, %edx
    0000091b: 	leaq	DATAat0x3d217(%rip), %rsi
    00000922: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2338
    00000927: 	callq	clock@PLT # Offset: 2343
    0000092c: 	movl	iterations(%rip), %ecx
    00000932: 	movq	%rax, start_time(%rip)
    00000939: 	testl	%ecx, %ecx
    0000093b: 	jle	.Ltmp1527 # Offset: 2363
    00000941: 	movl	0x10(%rsp), %eax
    00000945: 	orl	0x14(%rsp), %eax
    00000949: 	xorl	%r14d, %r14d
    0000094c: 	leaq	0x7d00(%rbp), %rbx
    00000953: 	orl	%r13d, %eax
    00000956: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000095d: 	orl	%r12d, %eax
    00000960: 	movd	%eax, %xmm2
    00000964: 	pshufd	$0x0, %xmm2, %xmm4
    00000969: 	movaps	%xmm4, (%rsp)
    0000096d: 	nopl	(%rax) # Size: 3
.Ltmp1530:
    00000970: 	movq	%rbp, %rax
    00000973: 	pxor	%xmm1, %xmm1
    00000977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1528:
    00000980: 	movdqu	(%rax), %xmm0
    00000984: 	por	(%rsp), %xmm0
    00000989: 	addq	$0x10, %rax
    0000098d: 	paddd	%xmm0, %xmm1
    00000991: 	cmpq	%rax, %rbx
    00000994: 	jne	.Ltmp1528 # Offset: 2452
    00000996: 	movdqa	%xmm1, %xmm0
    0000099a: 	cvttsd2si	init_value(%rip), %edx
    000009a2: 	orl	0x14(%rsp), %edx
    000009a6: 	psrldq	$0x8, %xmm0
    000009ab: 	orl	0x10(%rsp), %edx
    000009af: 	paddd	%xmm0, %xmm1
    000009b3: 	orl	%r13d, %edx
    000009b6: 	movdqa	%xmm1, %xmm0
    000009ba: 	orl	%r12d, %edx
    000009bd: 	psrldq	$0x4, %xmm0
    000009c2: 	imull	$0x1f40, %edx, %edx
    000009c8: 	paddd	%xmm0, %xmm1
    000009cc: 	movd	%xmm1, %eax
    000009d0: 	cmpl	%eax, %edx
    000009d2: 	je	.Ltmp1529 # Offset: 2514
    000009d4: 	movl	current_test(%rip), %edx
    000009da: 	movq	%r15, %rsi
    000009dd: 	movl	$0x1, %edi
    000009e2: 	xorl	%eax, %eax
    000009e4: 	callq	__printf_chk@PLT # Offset: 2532
    000009e9: 	movl	iterations(%rip), %ecx
.Ltmp1529:
    000009ef: 	addl	$0x1, %r14d
    000009f3: 	cmpl	%ecx, %r14d
    000009f6: 	jl	.Ltmp1530 # Offset: 2550
.Ltmp1527:
    000009fc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a03: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a0a: 	subq	$0x20, %rax
    00000a0e: 	cmpq	%rax, %rbx
    00000a11: 	je	.Ltmp1531 # Offset: 2577
    00000a17: 	leaq	0x10(%rbx), %rdi
    00000a1b: 	movq	0x68(%rsp), %r14
    00000a20: 	movq	%rdi, (%rbx)
    00000a23: 	movq	0x60(%rsp), %r15
    00000a28: 	movq	%r15, %rax
    00000a2b: 	addq	%r14, %rax
    00000a2e: 	je	.Ltmp1532 # Offset: 2606
    00000a30: 	testq	%r15, %r15
    00000a33: 	je	.Ltmp1533 # Offset: 2611
.Ltmp1532:
    00000a39: 	movq	%r14, 0x38(%rsp)
    00000a3e: 	cmpq	$0xf, %r14
    00000a42: 	ja	.Ltmp1534 # Offset: 2626
    00000a48: 	cmpq	$0x1, %r14
    00000a4c: 	jne	.Ltmp1535 # Offset: 2636
    00000a52: 	movzbl	(%r15), %eax
    00000a56: 	movb	%al, 0x10(%rbx)
.Ltmp1637:
    00000a59: 	movq	%r14, 0x8(%rbx)
    00000a5d: 	movb	$0x0, (%rdi,%r14)
    00000a62: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a69: 	addq	$0x20, %rax
    00000a6d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1633:
    00000a74: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a7b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a82: 	je	.Ltmp1536 # Offset: 2690
.Ltmp1631:
    00000a88: 	movq	-0x20(%rax), %r14
    00000a8c: 	callq	clock@PLT # Offset: 2700
    00000a91: 	pxor	%xmm0, %xmm0
    00000a95: 	movq	%rax, end_time(%rip)
    00000a9c: 	movq	%r14, %rdi
    00000a9f: 	subq	start_time(%rip), %rax
    00000aa6: 	cvtsi2sd	%rax, %xmm0
    00000aab: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ab3: 	callq	_Z13record_resultdPKc # Offset: 2739
    00000ab8: 	movq	0x60(%rsp), %rdi
    00000abd: 	cmpq	0x18(%rsp), %rdi
    00000ac2: 	je	.Ltmp1537 # Offset: 2754
    00000ac4: 	movq	0x70(%rsp), %rax
    00000ac9: 	leaq	0x1(%rax), %rsi
    00000acd: 	callq	_ZdlPvm@PLT # Offset: 2765
.Ltmp1537:
    00000ad2: 	movq	0x18(%rsp), %rax
    00000ad7: 	movq	0x40(%rsp), %r15
    00000adc: 	movq	0x48(%rsp), %r14
    00000ae1: 	movq	%rax, 0x60(%rsp)
    00000ae6: 	movq	%r15, %rax
    00000ae9: 	addq	%r14, %rax
    00000aec: 	je	.Ltmp1538 # Offset: 2796
    00000aee: 	testq	%r15, %r15
    00000af1: 	je	.Ltmp1539 # Offset: 2801
.Ltmp1538:
    00000af7: 	movq	%r14, 0x38(%rsp)
    00000afc: 	cmpq	$0xf, %r14
    00000b00: 	ja	.Ltmp1540 # Offset: 2816
    00000b06: 	cmpq	$0x1, %r14
    00000b0a: 	jne	.Ltmp1541 # Offset: 2826
    00000b10: 	movzbl	(%r15), %eax
    00000b14: 	movb	%al, 0x70(%rsp)
    00000b18: 	movq	0x18(%rsp), %rax
.Ltmp1612:
    00000b1d: 	movq	%r14, 0x68(%rsp)
    00000b22: 	movb	$0x0, (%rax,%r14)
    00000b27: 	movabsq	$0x3fffffffffffffff, %rax
    00000b31: 	subq	0x68(%rsp), %rax
    00000b36: 	cmpq	$0x15, %rax
    00000b3a: 	jbe	.Ltmp1542 # Offset: 2874
    00000b40: 	movq	0x20(%rsp), %rdi
    00000b45: 	movl	$0x16, %edx
    00000b4a: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000b51: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2897
    00000b56: 	callq	clock@PLT # Offset: 2902
    00000b5b: 	movl	iterations(%rip), %ecx
    00000b61: 	movq	%rax, start_time(%rip)
    00000b68: 	testl	%ecx, %ecx
    00000b6a: 	jle	.Ltmp1543 # Offset: 2922
    00000b70: 	movl	0x10(%rsp), %eax
    00000b74: 	orl	0x14(%rsp), %eax
    00000b78: 	xorl	%r14d, %r14d
    00000b7b: 	leaq	0x7d00(%rbp), %rbx
    00000b82: 	orl	%r13d, %eax
    00000b85: 	orl	%r12d, %eax
    00000b88: 	movd	%eax, %xmm4
    00000b8c: 	movl	%eax, %r15d
    00000b8f: 	pshufd	$0x0, %xmm4, %xmm3
    00000b94: 	movaps	%xmm3, (%rsp)
    00000b98: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1546:
    00000ba0: 	movq	%rbp, %rax
    00000ba3: 	pxor	%xmm1, %xmm1
    00000ba7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1544:
    00000bb0: 	movdqu	(%rax), %xmm0
    00000bb4: 	por	(%rsp), %xmm0
    00000bb9: 	addq	$0x10, %rax
    00000bbd: 	paddd	%xmm0, %xmm1
    00000bc1: 	cmpq	%rbx, %rax
    00000bc4: 	jne	.Ltmp1544 # Offset: 3012
    00000bc6: 	cvttsd2si	init_value(%rip), %edx
    00000bce: 	movdqa	%xmm1, %xmm0
    00000bd2: 	psrldq	$0x8, %xmm0
    00000bd7: 	paddd	%xmm0, %xmm1
    00000bdb: 	movdqa	%xmm1, %xmm0
    00000bdf: 	orl	%r15d, %edx
    00000be2: 	psrldq	$0x4, %xmm0
    00000be7: 	imull	$0x1f40, %edx, %edx
    00000bed: 	paddd	%xmm0, %xmm1
    00000bf1: 	movd	%xmm1, %eax
    00000bf5: 	cmpl	%eax, %edx
    00000bf7: 	je	.Ltmp1545 # Offset: 3063
    00000bf9: 	movl	current_test(%rip), %edx
    00000bff: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c06: 	movl	$0x1, %edi
    00000c0b: 	xorl	%eax, %eax
    00000c0d: 	callq	__printf_chk@PLT # Offset: 3085
    00000c12: 	movl	iterations(%rip), %ecx
.Ltmp1545:
    00000c18: 	addl	$0x1, %r14d
    00000c1c: 	cmpl	%ecx, %r14d
    00000c1f: 	jl	.Ltmp1546 # Offset: 3103
.Ltmp1543:
    00000c25: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000c33: 	subq	$0x20, %rax
    00000c37: 	cmpq	%rax, %rbx
    00000c3a: 	je	.Ltmp1547 # Offset: 3130
    00000c40: 	leaq	0x10(%rbx), %rdi
    00000c44: 	movq	0x68(%rsp), %r14
    00000c49: 	movq	%rdi, (%rbx)
    00000c4c: 	movq	0x60(%rsp), %r15
    00000c51: 	movq	%r15, %rax
    00000c54: 	addq	%r14, %rax
    00000c57: 	je	.Ltmp1548 # Offset: 3159
    00000c59: 	testq	%r15, %r15
    00000c5c: 	je	.Ltmp1549 # Offset: 3164
.Ltmp1548:
    00000c62: 	movq	%r14, 0x38(%rsp)
    00000c67: 	cmpq	$0xf, %r14
    00000c6b: 	ja	.Ltmp1550 # Offset: 3179
    00000c71: 	cmpq	$0x1, %r14
    00000c75: 	jne	.Ltmp1551 # Offset: 3189
    00000c7b: 	movzbl	(%r15), %eax
    00000c7f: 	movb	%al, 0x10(%rbx)
.Ltmp1644:
    00000c82: 	movq	%r14, 0x8(%rbx)
    00000c86: 	movb	$0x0, (%rdi,%r14)
    00000c8b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c92: 	addq	$0x20, %rax
    00000c96: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1628:
    00000c9d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ca4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cab: 	je	.Ltmp1552 # Offset: 3243
.Ltmp1624:
    00000cb1: 	movq	-0x20(%rax), %r14
    00000cb5: 	callq	clock@PLT # Offset: 3253
    00000cba: 	pxor	%xmm0, %xmm0
    00000cbe: 	movq	%rax, end_time(%rip)
    00000cc5: 	movq	%r14, %rdi
    00000cc8: 	subq	start_time(%rip), %rax
    00000ccf: 	cvtsi2sd	%rax, %xmm0
    00000cd4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000cdc: 	callq	_Z13record_resultdPKc # Offset: 3292
    00000ce1: 	movq	0x60(%rsp), %rdi
    00000ce6: 	cmpq	0x18(%rsp), %rdi
    00000ceb: 	je	.Ltmp1553 # Offset: 3307
    00000ced: 	movq	0x70(%rsp), %rax
    00000cf2: 	leaq	0x1(%rax), %rsi
    00000cf6: 	callq	_ZdlPvm@PLT # Offset: 3318
.Ltmp1553:
    00000cfb: 	movq	0x18(%rsp), %rax
    00000d00: 	movq	0x40(%rsp), %r15
    00000d05: 	movq	0x48(%rsp), %r14
    00000d0a: 	movq	%rax, 0x60(%rsp)
    00000d0f: 	movq	%r15, %rax
    00000d12: 	addq	%r14, %rax
    00000d15: 	je	.Ltmp1554 # Offset: 3349
    00000d17: 	testq	%r15, %r15
    00000d1a: 	je	.Ltmp1555 # Offset: 3354
.Ltmp1554:
    00000d20: 	movq	%r14, 0x38(%rsp)
    00000d25: 	cmpq	$0xf, %r14
    00000d29: 	ja	.Ltmp1556 # Offset: 3369
    00000d2f: 	cmpq	$0x1, %r14
    00000d33: 	jne	.Ltmp1557 # Offset: 3379
    00000d39: 	movzbl	(%r15), %eax
    00000d3d: 	movb	%al, 0x70(%rsp)
    00000d41: 	movq	0x18(%rsp), %rax
.Ltmp1610:
    00000d46: 	movq	%r14, 0x68(%rsp)
    00000d4b: 	movb	$0x0, (%rax,%r14)
    00000d50: 	movabsq	$0x3fffffffffffffff, %rax
    00000d5a: 	subq	0x68(%rsp), %rax
    00000d5f: 	cmpq	$0xc, %rax
    00000d63: 	jbe	.Ltmp1558 # Offset: 3427
    00000d69: 	movq	0x20(%rsp), %rdi
    00000d6e: 	movl	$0xd, %edx
    00000d73: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000d7a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3450
    00000d7f: 	callq	clock@PLT # Offset: 3455
    00000d84: 	movd	%r12d, %xmm2
    00000d89: 	movl	iterations(%rip), %ecx
    00000d8f: 	xorl	%r14d, %r14d
    00000d92: 	pshufd	$0x0, %xmm2, %xmm4
    00000d97: 	movq	%rax, start_time(%rip)
    00000d9e: 	leaq	0x7d00(%rbp), %rbx
    00000da5: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000dac: 	movaps	%xmm4, (%rsp)
    00000db0: 	testl	%ecx, %ecx
    00000db2: 	jle	.Ltmp1559 # Offset: 3506
    00000db4: 	nopl	(%rax) # Size: 4
.Ltmp1562:
    00000db8: 	movq	%rbp, %rax
    00000dbb: 	pxor	%xmm1, %xmm1
    00000dbf: 	nop # Size: 1
.Ltmp1560:
    00000dc0: 	movdqu	(%rax), %xmm0
    00000dc4: 	pxor	(%rsp), %xmm0
    00000dc9: 	addq	$0x10, %rax
    00000dcd: 	paddd	%xmm0, %xmm1
    00000dd1: 	cmpq	%rax, %rbx
    00000dd4: 	jne	.Ltmp1560 # Offset: 3540
    00000dd6: 	cvttsd2si	init_value(%rip), %edx
    00000dde: 	movdqa	%xmm1, %xmm0
    00000de2: 	psrldq	$0x8, %xmm0
    00000de7: 	paddd	%xmm0, %xmm1
    00000deb: 	movdqa	%xmm1, %xmm0
    00000def: 	xorl	%r12d, %edx
    00000df2: 	psrldq	$0x4, %xmm0
    00000df7: 	imull	$0x1f40, %edx, %edx
    00000dfd: 	paddd	%xmm0, %xmm1
    00000e01: 	movd	%xmm1, %eax
    00000e05: 	cmpl	%eax, %edx
    00000e07: 	je	.Ltmp1561 # Offset: 3591
    00000e09: 	movl	current_test(%rip), %edx
    00000e0f: 	movq	%r15, %rsi
    00000e12: 	movl	$0x1, %edi
    00000e17: 	xorl	%eax, %eax
    00000e19: 	callq	__printf_chk@PLT # Offset: 3609
    00000e1e: 	movl	iterations(%rip), %ecx
.Ltmp1561:
    00000e24: 	addl	$0x1, %r14d
    00000e28: 	cmpl	%ecx, %r14d
    00000e2b: 	jl	.Ltmp1562 # Offset: 3627
.Ltmp1559:
    00000e2d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e34: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e3b: 	subq	$0x20, %rax
    00000e3f: 	cmpq	%rax, %rbx
    00000e42: 	je	.Ltmp1563 # Offset: 3650
    00000e48: 	leaq	0x10(%rbx), %rdi
    00000e4c: 	movq	0x68(%rsp), %r14
    00000e51: 	movq	%rdi, (%rbx)
    00000e54: 	movq	0x60(%rsp), %r15
    00000e59: 	movq	%r15, %rax
    00000e5c: 	addq	%r14, %rax
    00000e5f: 	je	.Ltmp1564 # Offset: 3679
    00000e61: 	testq	%r15, %r15
    00000e64: 	je	.Ltmp1565 # Offset: 3684
.Ltmp1564:
    00000e6a: 	movq	%r14, 0x38(%rsp)
    00000e6f: 	cmpq	$0xf, %r14
    00000e73: 	ja	.Ltmp1566 # Offset: 3699
    00000e79: 	cmpq	$0x1, %r14
    00000e7d: 	jne	.Ltmp1567 # Offset: 3709
    00000e83: 	movzbl	(%r15), %eax
    00000e87: 	movb	%al, 0x10(%rbx)
.Ltmp1638:
    00000e8a: 	movq	%r14, 0x8(%rbx)
    00000e8e: 	movb	$0x0, (%rdi,%r14)
    00000e93: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e9a: 	addq	$0x20, %rax
    00000e9e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1623:
    00000ea5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000eac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eb3: 	je	.Ltmp1568 # Offset: 3763
.Ltmp1621:
    00000eb9: 	movq	-0x20(%rax), %r14
    00000ebd: 	callq	clock@PLT # Offset: 3773
    00000ec2: 	pxor	%xmm0, %xmm0
    00000ec6: 	movq	%rax, end_time(%rip)
    00000ecd: 	movq	%r14, %rdi
    00000ed0: 	subq	start_time(%rip), %rax
    00000ed7: 	cvtsi2sd	%rax, %xmm0
    00000edc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ee4: 	callq	_Z13record_resultdPKc # Offset: 3812
    00000ee9: 	movq	0x60(%rsp), %rdi
    00000eee: 	cmpq	0x18(%rsp), %rdi
    00000ef3: 	je	.Ltmp1569 # Offset: 3827
    00000ef5: 	movq	0x70(%rsp), %rax
    00000efa: 	leaq	0x1(%rax), %rsi
    00000efe: 	callq	_ZdlPvm@PLT # Offset: 3838
.Ltmp1569:
    00000f03: 	movq	0x18(%rsp), %rax
    00000f08: 	movq	0x40(%rsp), %r15
    00000f0d: 	movq	0x48(%rsp), %r14
    00000f12: 	movq	%rax, 0x60(%rsp)
    00000f17: 	movq	%r15, %rax
    00000f1a: 	addq	%r14, %rax
    00000f1d: 	je	.Ltmp1570 # Offset: 3869
    00000f1f: 	testq	%r15, %r15
    00000f22: 	je	.Ltmp1571 # Offset: 3874
.Ltmp1570:
    00000f28: 	movq	%r14, 0x38(%rsp)
    00000f2d: 	cmpq	$0xf, %r14
    00000f31: 	ja	.Ltmp1572 # Offset: 3889
    00000f37: 	cmpq	$0x1, %r14
    00000f3b: 	jne	.Ltmp1573 # Offset: 3899
    00000f41: 	movzbl	(%r15), %eax
    00000f45: 	movb	%al, 0x70(%rsp)
    00000f49: 	movq	0x18(%rsp), %rax
.Ltmp1608:
    00000f4e: 	movq	%r14, 0x68(%rsp)
    00000f53: 	movb	$0x0, (%rax,%r14)
    00000f58: 	movabsq	$0x3fffffffffffffff, %rax
    00000f62: 	subq	0x68(%rsp), %rax
    00000f67: 	cmpq	$0x15, %rax
    00000f6b: 	jbe	.Ltmp1574 # Offset: 3947
    00000f71: 	movq	0x20(%rsp), %rdi
    00000f76: 	movl	$0x16, %edx
    00000f7b: 	leaq	DATAat0x3d244(%rip), %rsi
    00000f82: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3970
    00000f87: 	callq	clock@PLT # Offset: 3975
    00000f8c: 	movl	iterations(%rip), %ecx
    00000f92: 	movq	%rax, start_time(%rip)
    00000f99: 	testl	%ecx, %ecx
    00000f9b: 	jle	.Ltmp1575 # Offset: 3995
    00000fa1: 	movl	0x10(%rsp), %eax
    00000fa5: 	xorl	0x14(%rsp), %eax
    00000fa9: 	xorl	%r14d, %r14d
    00000fac: 	leaq	0x7d00(%rbp), %rbx
    00000fb3: 	xorl	%r13d, %eax
    00000fb6: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000fbd: 	xorl	%r12d, %eax
    00000fc0: 	movd	%eax, %xmm3
    00000fc4: 	pshufd	$0x0, %xmm3, %xmm2
    00000fc9: 	movaps	%xmm2, (%rsp)
    00000fcd: 	nopl	(%rax) # Size: 3
.Ltmp1578:
    00000fd0: 	movq	%rbp, %rax
    00000fd3: 	pxor	%xmm1, %xmm1
    00000fd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1576:
    00000fe0: 	movdqu	(%rax), %xmm0
    00000fe4: 	pxor	(%rsp), %xmm0
    00000fe9: 	addq	$0x10, %rax
    00000fed: 	paddd	%xmm0, %xmm1
    00000ff1: 	cmpq	%rbx, %rax
    00000ff4: 	jne	.Ltmp1576 # Offset: 4084
    00000ff6: 	movdqa	%xmm1, %xmm0
    00000ffa: 	cvttsd2si	init_value(%rip), %edx
    00001002: 	xorl	0x14(%rsp), %edx
    00001006: 	psrldq	$0x8, %xmm0
    0000100b: 	xorl	0x10(%rsp), %edx
    0000100f: 	paddd	%xmm0, %xmm1
    00001013: 	xorl	%r13d, %edx
    00001016: 	movdqa	%xmm1, %xmm0
    0000101a: 	xorl	%r12d, %edx
    0000101d: 	psrldq	$0x4, %xmm0
    00001022: 	imull	$0x1f40, %edx, %edx
    00001028: 	paddd	%xmm0, %xmm1
    0000102c: 	movd	%xmm1, %eax
    00001030: 	cmpl	%eax, %edx
    00001032: 	je	.Ltmp1577 # Offset: 4146
    00001034: 	movl	current_test(%rip), %edx
    0000103a: 	movq	%r15, %rsi
    0000103d: 	movl	$0x1, %edi
    00001042: 	xorl	%eax, %eax
    00001044: 	callq	__printf_chk@PLT # Offset: 4164
    00001049: 	movl	iterations(%rip), %ecx
.Ltmp1577:
    0000104f: 	addl	$0x1, %r14d
    00001053: 	cmpl	%ecx, %r14d
    00001056: 	jl	.Ltmp1578 # Offset: 4182
.Ltmp1575:
    0000105c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001063: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000106a: 	subq	$0x20, %rax
    0000106e: 	cmpq	%rax, %rbx
    00001071: 	je	.Ltmp1579 # Offset: 4209
    00001077: 	leaq	0x10(%rbx), %rdi
    0000107b: 	movq	0x68(%rsp), %r14
    00001080: 	movq	%rdi, (%rbx)
    00001083: 	movq	0x60(%rsp), %r15
    00001088: 	movq	%r15, %rax
    0000108b: 	addq	%r14, %rax
    0000108e: 	je	.Ltmp1580 # Offset: 4238
    00001090: 	testq	%r15, %r15
    00001093: 	je	.Ltmp1581 # Offset: 4243
.Ltmp1580:
    00001099: 	movq	%r14, 0x38(%rsp)
    0000109e: 	cmpq	$0xf, %r14
    000010a2: 	ja	.Ltmp1582 # Offset: 4258
    000010a8: 	cmpq	$0x1, %r14
    000010ac: 	jne	.Ltmp1583 # Offset: 4268
    000010b2: 	movzbl	(%r15), %eax
    000010b6: 	movb	%al, 0x10(%rbx)
.Ltmp1641:
    000010b9: 	movq	%r14, 0x8(%rbx)
    000010bd: 	movb	$0x0, (%rdi,%r14)
    000010c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010c9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010d0: 	addq	$0x20, %rax
    000010d4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010db: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000010e2: 	je	.Ltmp1584 # Offset: 4322
.Ltmp1622:
    000010e8: 	movq	-0x20(%rax), %r14
    000010ec: 	callq	clock@PLT # Offset: 4332
    000010f1: 	pxor	%xmm0, %xmm0
    000010f5: 	movq	%rax, end_time(%rip)
    000010fc: 	movq	%r14, %rdi
    000010ff: 	subq	start_time(%rip), %rax
    00001106: 	cvtsi2sd	%rax, %xmm0
    0000110b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001113: 	callq	_Z13record_resultdPKc # Offset: 4371
    00001118: 	movq	0x60(%rsp), %rdi
    0000111d: 	cmpq	0x18(%rsp), %rdi
    00001122: 	je	.Ltmp1585 # Offset: 4386
    00001124: 	movq	0x70(%rsp), %rax
    00001129: 	leaq	0x1(%rax), %rsi
    0000112d: 	callq	_ZdlPvm@PLT # Offset: 4397
.Ltmp1585:
    00001132: 	movq	0x18(%rsp), %rax
    00001137: 	movq	0x40(%rsp), %r15
    0000113c: 	movq	0x48(%rsp), %r14
    00001141: 	movq	%rax, 0x60(%rsp)
    00001146: 	movq	%r15, %rax
    00001149: 	addq	%r14, %rax
    0000114c: 	je	.Ltmp1586 # Offset: 4428
    0000114e: 	testq	%r15, %r15
    00001151: 	je	.Ltmp1587 # Offset: 4433
.Ltmp1586:
    00001157: 	movq	%r14, 0x38(%rsp)
    0000115c: 	cmpq	$0xf, %r14
    00001160: 	ja	.Ltmp1588 # Offset: 4448
    00001166: 	cmpq	$0x1, %r14
    0000116a: 	jne	.Ltmp1589 # Offset: 4458
    00001170: 	movzbl	(%r15), %eax
    00001174: 	movb	%al, 0x70(%rsp)
    00001178: 	movq	0x18(%rsp), %rax
.Ltmp1606:
    0000117d: 	movq	%r14, 0x68(%rsp)
    00001182: 	movb	$0x0, (%rax,%r14)
    00001187: 	movabsq	$0x3fffffffffffffff, %rax
    00001191: 	subq	0x68(%rsp), %rax
    00001196: 	cmpq	$0x16, %rax
    0000119a: 	jbe	.Ltmp1590 # Offset: 4506
    000011a0: 	movq	0x20(%rsp), %rdi
    000011a5: 	movl	$0x17, %edx
    000011aa: 	leaq	DATAat0x3d25b(%rip), %rsi
    000011b1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4529
    000011b6: 	callq	clock@PLT # Offset: 4534
    000011bb: 	movl	iterations(%rip), %ecx
    000011c1: 	movq	%rax, start_time(%rip)
    000011c8: 	testl	%ecx, %ecx
    000011ca: 	jle	.Ltmp1591 # Offset: 4554
    000011d0: 	movl	0x10(%rsp), %eax
    000011d4: 	xorl	0x14(%rsp), %eax
    000011d8: 	leaq	0x7d00(%rbp), %rbx
    000011df: 	leaq	DATAat0x3d1d8(%rip), %r14
    000011e6: 	xorl	%r13d, %eax
    000011e9: 	xorl	%r13d, %r13d
    000011ec: 	xorl	%eax, %r12d
    000011ef: 	movd	%r12d, %xmm2
    000011f4: 	pshufd	$0x0, %xmm2, %xmm4
    000011f9: 	movaps	%xmm4, (%rsp)
    000011fd: 	nopl	(%rax) # Size: 3
.Ltmp1594:
    00001200: 	movq	%rbp, %rax
    00001203: 	pxor	%xmm1, %xmm1
    00001207: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1592:
    00001210: 	movdqu	(%rax), %xmm0
    00001214: 	pxor	(%rsp), %xmm0
    00001219: 	addq	$0x10, %rax
    0000121d: 	paddd	%xmm0, %xmm1
    00001221: 	cmpq	%rax, %rbx
    00001224: 	jne	.Ltmp1592 # Offset: 4644
    00001226: 	cvttsd2si	init_value(%rip), %edx
    0000122e: 	movdqa	%xmm1, %xmm0
    00001232: 	psrldq	$0x8, %xmm0
    00001237: 	paddd	%xmm0, %xmm1
    0000123b: 	movdqa	%xmm1, %xmm0
    0000123f: 	xorl	%r12d, %edx
    00001242: 	psrldq	$0x4, %xmm0
    00001247: 	imull	$0x1f40, %edx, %edx
    0000124d: 	paddd	%xmm0, %xmm1
    00001251: 	movd	%xmm1, %eax
    00001255: 	cmpl	%eax, %edx
    00001257: 	je	.Ltmp1593 # Offset: 4695
    00001259: 	movl	current_test(%rip), %edx
    0000125f: 	movq	%r14, %rsi
    00001262: 	movl	$0x1, %edi
    00001267: 	xorl	%eax, %eax
    00001269: 	callq	__printf_chk@PLT # Offset: 4713
    0000126e: 	movl	iterations(%rip), %ecx
.Ltmp1593:
    00001274: 	addl	$0x1, %r13d
    00001278: 	cmpl	%ecx, %r13d
    0000127b: 	jl	.Ltmp1594 # Offset: 4731
.Ltmp1591:
    0000127d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001284: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000128b: 	subq	$0x20, %rax
    0000128f: 	cmpq	%rax, %rbx
    00001292: 	je	.Ltmp1595 # Offset: 4754
    00001298: 	leaq	0x10(%rbx), %rdi
    0000129c: 	movq	0x68(%rsp), %r12
    000012a1: 	movq	%rdi, (%rbx)
    000012a4: 	movq	0x60(%rsp), %rbp
    000012a9: 	movq	%rbp, %rax
    000012ac: 	addq	%r12, %rax
    000012af: 	je	.Ltmp1596 # Offset: 4783
    000012b1: 	testq	%rbp, %rbp
    000012b4: 	je	.Ltmp1597 # Offset: 4788
.Ltmp1596:
    000012ba: 	movq	%r12, 0x38(%rsp)
    000012bf: 	cmpq	$0xf, %r12
    000012c3: 	ja	.Ltmp1598 # Offset: 4803
    000012c9: 	cmpq	$0x1, %r12
    000012cd: 	jne	.Ltmp1599 # Offset: 4813
    000012d3: 	movzbl	(%rbp), %eax
    000012d7: 	movb	%al, 0x10(%rbx)
.Ltmp1643:
    000012da: 	movq	%r12, 0x8(%rbx)
    000012de: 	movb	$0x0, (%rdi,%r12)
    000012e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012f1: 	addq	$0x20, %rax
    000012f5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012fc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001303: 	je	.Ltmp1600 # Offset: 4867
.Ltmp1625:
    00001309: 	movq	-0x20(%rax), %rbp
    0000130d: 	callq	clock@PLT # Offset: 4877
    00001312: 	pxor	%xmm0, %xmm0
    00001316: 	movq	%rax, end_time(%rip)
    0000131d: 	movq	%rbp, %rdi
    00001320: 	subq	start_time(%rip), %rax
    00001327: 	cvtsi2sd	%rax, %xmm0
    0000132c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001334: 	callq	_Z13record_resultdPKc # Offset: 4916
    00001339: 	movq	0x60(%rsp), %rdi
    0000133e: 	cmpq	0x18(%rsp), %rdi
    00001343: 	je	.Ltmp1601 # Offset: 4931
    00001345: 	movq	0x70(%rsp), %rax
    0000134a: 	leaq	0x1(%rax), %rsi
    0000134e: 	callq	_ZdlPvm@PLT # Offset: 4942
.Ltmp1601:
    00001353: 	movq	0x40(%rsp), %rdi
    00001358: 	cmpq	0x28(%rsp), %rdi
    0000135d: 	je	.Ltmp1602 # Offset: 4957
    0000135f: 	movq	0x50(%rsp), %rax
    00001364: 	leaq	0x1(%rax), %rsi
    00001368: 	callq	_ZdlPvm@PLT # Offset: 4968
.Ltmp1602:
    0000136d: 	movq	0x88(%rsp), %rax
    00001375: 	subq	%fs:0x28, %rax
    0000137e: 	jne	.Ltmp1603 # Offset: 4990
    00001384: 	addq	$0x98, %rsp
    0000138b: 	popq	%rbx
    0000138c: 	popq	%rbp
    0000138d: 	popq	%r12
    0000138f: 	popq	%r13
    00001391: 	popq	%r14
    00001393: 	popq	%r15
    00001395: 	retq # Offset: 5013
.Ltmp1470:
    00001396: 	leaq	0x38(%rsp), %rsi
    0000139b: 	xorl	%edx, %edx
    0000139d: 	movq	%rbx, %rdi
    000013a0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5024
    000013a5: 	movq	%rax, (%rbx)
    000013a8: 	movq	%rax, %rdi
    000013ab: 	movq	0x38(%rsp), %rax
    000013b0: 	movq	%rax, 0x10(%rbx)
.Ltmp1634:
    000013b4: 	movq	%r14, %rdx
    000013b7: 	movq	%r15, %rsi
    000013ba: 	callq	memcpy@PLT # Offset: 5050
    000013bf: 	movq	0x38(%rsp), %r14
    000013c4: 	movq	(%rbx), %rdi
    000013c7: 	jmp	.Ltmp1604 # Offset: 5063
.Ltmp1589:
    000013cc: 	testq	%r14, %r14
    000013cf: 	jne	.Ltmp1605 # Offset: 5071
    000013d5: 	movq	0x18(%rsp), %rax
    000013da: 	jmp	.Ltmp1606 # Offset: 5082
.Ltmp1573:
    000013df: 	testq	%r14, %r14
    000013e2: 	jne	.Ltmp1607 # Offset: 5090
    000013e8: 	movq	0x18(%rsp), %rax
    000013ed: 	jmp	.Ltmp1608 # Offset: 5101
.Ltmp1557:
    000013f2: 	testq	%r14, %r14
    000013f5: 	jne	.Ltmp1609 # Offset: 5109
    000013fb: 	movq	0x18(%rsp), %rax
    00001400: 	jmp	.Ltmp1610 # Offset: 5120
.Ltmp1541:
    00001405: 	testq	%r14, %r14
    00001408: 	jne	.Ltmp1611 # Offset: 5128
    0000140e: 	movq	0x18(%rsp), %rax
    00001413: 	jmp	.Ltmp1612 # Offset: 5139
.Ltmp1493:
    00001418: 	testq	%r14, %r14
    0000141b: 	jne	.Ltmp1613 # Offset: 5147
    00001421: 	movq	0x18(%rsp), %rax
    00001426: 	jmp	.Ltmp1614 # Offset: 5158
.Ltmp1477:
    0000142b: 	testq	%r14, %r14
    0000142e: 	jne	.Ltmp1615 # Offset: 5166
    00001434: 	movq	0x18(%rsp), %rax
    00001439: 	jmp	.Ltmp1616 # Offset: 5177
.Ltmp1525:
    0000143e: 	testq	%r14, %r14
    00001441: 	jne	.Ltmp1617 # Offset: 5185
    00001447: 	movq	0x18(%rsp), %rax
    0000144c: 	jmp	.Ltmp1618 # Offset: 5196
.Ltmp1509:
    00001451: 	testq	%r14, %r14
    00001454: 	jne	.Ltmp1619 # Offset: 5204
    0000145a: 	movq	0x18(%rsp), %rax
    0000145f: 	jmp	.Ltmp1620 # Offset: 5215
.Ltmp1492:
    00001464: 	movq	0x20(%rsp), %rdi
    00001469: 	leaq	0x38(%rsp), %rsi
    0000146e: 	xorl	%edx, %edx
    00001470: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5232
    00001475: 	movq	%rax, 0x60(%rsp)
    0000147a: 	movq	%rax, %rdi
    0000147d: 	movq	0x38(%rsp), %rax
    00001482: 	movq	%rax, 0x70(%rsp)
.Ltmp1655:
    00001487: 	movq	%r14, %rdx
    0000148a: 	movq	%r15, %rsi
    0000148d: 	callq	memcpy@PLT # Offset: 5261
    00001492: 	movq	0x38(%rsp), %r14
    00001497: 	movq	0x60(%rsp), %rax
    0000149c: 	jmp	.Ltmp1614 # Offset: 5276
.Ltmp1476:
    000014a1: 	movq	0x20(%rsp), %rdi
    000014a6: 	leaq	0x38(%rsp), %rsi
    000014ab: 	xorl	%edx, %edx
    000014ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5293
    000014b2: 	movq	%rax, 0x60(%rsp)
    000014b7: 	movq	%rax, %rdi
    000014ba: 	movq	0x38(%rsp), %rax
    000014bf: 	movq	%rax, 0x70(%rsp)
.Ltmp1656:
    000014c4: 	movq	%r14, %rdx
    000014c7: 	movq	%r15, %rsi
    000014ca: 	callq	memcpy@PLT # Offset: 5322
    000014cf: 	movq	0x38(%rsp), %r14
    000014d4: 	movq	0x60(%rsp), %rax
    000014d9: 	jmp	.Ltmp1616 # Offset: 5337
.Ltmp1508:
    000014de: 	movq	0x20(%rsp), %rdi
    000014e3: 	leaq	0x38(%rsp), %rsi
    000014e8: 	xorl	%edx, %edx
    000014ea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5354
    000014ef: 	movq	%rax, 0x60(%rsp)
    000014f4: 	movq	%rax, %rdi
    000014f7: 	movq	0x38(%rsp), %rax
    000014fc: 	movq	%rax, 0x70(%rsp)
.Ltmp1658:
    00001501: 	movq	%r14, %rdx
    00001504: 	movq	%r15, %rsi
    00001507: 	callq	memcpy@PLT # Offset: 5383
    0000150c: 	movq	0x38(%rsp), %r14
    00001511: 	movq	0x60(%rsp), %rax
    00001516: 	jmp	.Ltmp1620 # Offset: 5398
.Ltmp1524:
    0000151b: 	movq	0x20(%rsp), %rdi
    00001520: 	leaq	0x38(%rsp), %rsi
    00001525: 	xorl	%edx, %edx
    00001527: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5415
    0000152c: 	movq	%rax, 0x60(%rsp)
    00001531: 	movq	%rax, %rdi
    00001534: 	movq	0x38(%rsp), %rax
    00001539: 	movq	%rax, 0x70(%rsp)
.Ltmp1657:
    0000153e: 	movq	%r14, %rdx
    00001541: 	movq	%r15, %rsi
    00001544: 	callq	memcpy@PLT # Offset: 5444
    00001549: 	movq	0x38(%rsp), %r14
    0000154e: 	movq	0x60(%rsp), %rax
    00001553: 	jmp	.Ltmp1618 # Offset: 5459
.Ltmp1540:
    00001558: 	movq	0x20(%rsp), %rdi
    0000155d: 	leaq	0x38(%rsp), %rsi
    00001562: 	xorl	%edx, %edx
    00001564: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5476
    00001569: 	movq	%rax, 0x60(%rsp)
    0000156e: 	movq	%rax, %rdi
    00001571: 	movq	0x38(%rsp), %rax
    00001576: 	movq	%rax, 0x70(%rsp)
.Ltmp1654:
    0000157b: 	movq	%r14, %rdx
    0000157e: 	movq	%r15, %rsi
    00001581: 	callq	memcpy@PLT # Offset: 5505
    00001586: 	movq	0x38(%rsp), %r14
    0000158b: 	movq	0x60(%rsp), %rax
    00001590: 	jmp	.Ltmp1612 # Offset: 5520
.Ltmp1556:
    00001595: 	movq	0x20(%rsp), %rdi
    0000159a: 	leaq	0x38(%rsp), %rsi
    0000159f: 	xorl	%edx, %edx
    000015a1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5537
    000015a6: 	movq	%rax, 0x60(%rsp)
    000015ab: 	movq	%rax, %rdi
    000015ae: 	movq	0x38(%rsp), %rax
    000015b3: 	movq	%rax, 0x70(%rsp)
.Ltmp1653:
    000015b8: 	movq	%r14, %rdx
    000015bb: 	movq	%r15, %rsi
    000015be: 	callq	memcpy@PLT # Offset: 5566
    000015c3: 	movq	0x38(%rsp), %r14
    000015c8: 	movq	0x60(%rsp), %rax
    000015cd: 	jmp	.Ltmp1610 # Offset: 5581
.Ltmp1588:
    000015d2: 	movq	0x20(%rsp), %rdi
    000015d7: 	leaq	0x38(%rsp), %rsi
    000015dc: 	xorl	%edx, %edx
    000015de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5598
    000015e3: 	movq	%rax, 0x60(%rsp)
    000015e8: 	movq	%rax, %rdi
    000015eb: 	movq	0x38(%rsp), %rax
    000015f0: 	movq	%rax, 0x70(%rsp)
.Ltmp1651:
    000015f5: 	movq	%r14, %rdx
    000015f8: 	movq	%r15, %rsi
    000015fb: 	callq	memcpy@PLT # Offset: 5627
    00001600: 	movq	0x38(%rsp), %r14
    00001605: 	movq	0x60(%rsp), %rax
    0000160a: 	jmp	.Ltmp1606 # Offset: 5642
.Ltmp1572:
    0000160f: 	movq	0x20(%rsp), %rdi
    00001614: 	leaq	0x38(%rsp), %rsi
    00001619: 	xorl	%edx, %edx
    0000161b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5659
    00001620: 	movq	%rax, 0x60(%rsp)
    00001625: 	movq	%rax, %rdi
    00001628: 	movq	0x38(%rsp), %rax
    0000162d: 	movq	%rax, 0x70(%rsp)
.Ltmp1652:
    00001632: 	movq	%r14, %rdx
    00001635: 	movq	%r15, %rsi
    00001638: 	callq	memcpy@PLT # Offset: 5688
    0000163d: 	movq	0x38(%rsp), %r14
    00001642: 	movq	0x60(%rsp), %rax
    00001647: 	jmp	.Ltmp1608 # Offset: 5703
.Ltmp1568:
    0000164c: 	movq	-0x8(%rdx), %rax
    00001650: 	addq	$0x200, %rax
    00001656: 	jmp	.Ltmp1621 # Offset: 5718
.Ltmp1579:
    0000165b: 	movq	0x20(%rsp), %rsi
    00001660: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001667: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5735
    0000166c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001673: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000167a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001681: 	jne	.Ltmp1622 # Offset: 5761
.Ltmp1584:
    00001687: 	movq	-0x8(%rdx), %rax
    0000168b: 	addq	$0x200, %rax
    00001691: 	jmp	.Ltmp1622 # Offset: 5777
.Ltmp1563:
    00001696: 	movq	0x20(%rsp), %rsi
    0000169b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5794
    000016a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016ae: 	jmp	.Ltmp1623 # Offset: 5806
.Ltmp1552:
    000016b3: 	movq	-0x8(%rdx), %rax
    000016b7: 	addq	$0x200, %rax
    000016bd: 	jmp	.Ltmp1624 # Offset: 5821
.Ltmp1595:
    000016c2: 	movq	0x20(%rsp), %rsi
    000016c7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016ce: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5838
    000016d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016e8: 	jne	.Ltmp1625 # Offset: 5864
.Ltmp1600:
    000016ee: 	movq	-0x8(%rdx), %rax
    000016f2: 	addq	$0x200, %rax
    000016f8: 	jmp	.Ltmp1625 # Offset: 5880
.Ltmp1515:
    000016fd: 	movq	0x20(%rsp), %rsi
    00001702: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001709: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5897
    0000170e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001715: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000171c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001723: 	jne	.Ltmp1626 # Offset: 5923
.Ltmp1520:
    00001729: 	movq	-0x8(%rdx), %rax
    0000172d: 	addq	$0x200, %rax
    00001733: 	jmp	.Ltmp1626 # Offset: 5939
.Ltmp1488:
    00001738: 	movq	-0x8(%rdx), %rax
    0000173c: 	addq	$0x200, %rax
    00001742: 	jmp	.Ltmp1627 # Offset: 5954
.Ltmp1547:
    00001747: 	movq	0x20(%rsp), %rsi
    0000174c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001753: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5971
    00001758: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000175f: 	jmp	.Ltmp1628 # Offset: 5983
.Ltmp1499:
    00001764: 	movq	0x20(%rsp), %rsi
    00001769: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001770: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6000
    00001775: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000177c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001783: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000178a: 	jne	.Ltmp1629 # Offset: 6026
.Ltmp1504:
    00001790: 	movq	-0x8(%rdx), %rax
    00001794: 	addq	$0x200, %rax
    0000179a: 	jmp	.Ltmp1629 # Offset: 6042
.Ltmp1467:
    0000179f: 	movq	0x20(%rsp), %rsi
    000017a4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6059
    000017b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017b7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017c5: 	jne	.Ltmp1630 # Offset: 6085
.Ltmp1472:
    000017cb: 	movq	-0x8(%rdx), %rax
    000017cf: 	addq	$0x200, %rax
    000017d5: 	jmp	.Ltmp1630 # Offset: 6101
.Ltmp1536:
    000017da: 	movq	-0x8(%rdx), %rax
    000017de: 	addq	$0x200, %rax
    000017e4: 	jmp	.Ltmp1631 # Offset: 6116
.Ltmp1483:
    000017e9: 	movq	0x20(%rsp), %rsi
    000017ee: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017f5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6133
    000017fa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001801: 	jmp	.Ltmp1632 # Offset: 6145
.Ltmp1531:
    00001806: 	movq	0x20(%rsp), %rsi
    0000180b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001812: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6162
    00001817: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000181e: 	jmp	.Ltmp1633 # Offset: 6174
.Ltmp1471:
    00001823: 	testq	%r14, %r14
    00001826: 	je	.Ltmp1604 # Offset: 6182
    0000182c: 	jmp	.Ltmp1634 # Offset: 6188
    00001831: 	nopl	(%rax) # Size: 7
.Ltmp1503:
    00001838: 	testq	%r14, %r14
    0000183b: 	je	.Ltmp1635 # Offset: 6203
    00001841: 	jmp	.Ltmp1636 # Offset: 6209
    00001846: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1535:
    00001850: 	testq	%r14, %r14
    00001853: 	je	.Ltmp1637 # Offset: 6227
.Ltmp1647:
    00001859: 	movq	%r14, %rdx
    0000185c: 	movq	%r15, %rsi
    0000185f: 	callq	memcpy@PLT # Offset: 6239
    00001864: 	movq	0x38(%rsp), %r14
    00001869: 	movq	(%rbx), %rdi
    0000186c: 	jmp	.Ltmp1637 # Offset: 6252
.Ltmp1567:
    00001871: 	testq	%r14, %r14
    00001874: 	je	.Ltmp1638 # Offset: 6260
    0000187a: 	jmp	.Ltmp1639 # Offset: 6266
    0000187f: 	nop # Size: 1
.Ltmp1487:
    00001880: 	testq	%r14, %r14
    00001883: 	je	.Ltmp1640 # Offset: 6275
.Ltmp1649:
    00001889: 	movq	%r14, %rdx
    0000188c: 	movq	%r15, %rsi
    0000188f: 	callq	memcpy@PLT # Offset: 6287
    00001894: 	movq	0x38(%rsp), %r14
    00001899: 	movq	(%rbx), %rdi
    0000189c: 	jmp	.Ltmp1640 # Offset: 6300
.Ltmp1583:
    000018a1: 	testq	%r14, %r14
    000018a4: 	je	.Ltmp1641 # Offset: 6308
    000018aa: 	jmp	.Ltmp1642 # Offset: 6314
    000018af: 	nop # Size: 1
.Ltmp1599:
    000018b0: 	testq	%r12, %r12
    000018b3: 	je	.Ltmp1643 # Offset: 6323
.Ltmp1648:
    000018b9: 	movq	%r12, %rdx
    000018bc: 	movq	%rbp, %rsi
    000018bf: 	callq	memcpy@PLT # Offset: 6335
    000018c4: 	movq	0x38(%rsp), %r12
    000018c9: 	movq	(%rbx), %rdi
    000018cc: 	jmp	.Ltmp1643 # Offset: 6348
.Ltmp1551:
    000018d1: 	testq	%r14, %r14
    000018d4: 	je	.Ltmp1644 # Offset: 6356
    000018da: 	jmp	.Ltmp1645 # Offset: 6362
    000018df: 	nop # Size: 1
.Ltmp1519:
    000018e0: 	testq	%r14, %r14
    000018e3: 	je	.Ltmp1646 # Offset: 6371
.Ltmp1650:
    000018e9: 	movq	%r14, %rdx
    000018ec: 	movq	%r15, %rsi
    000018ef: 	callq	memcpy@PLT # Offset: 6383
    000018f4: 	movq	0x38(%rsp), %r14
    000018f9: 	movq	(%rbx), %rdi
    000018fc: 	jmp	.Ltmp1646 # Offset: 6396
.Ltmp1502:
    00001901: 	leaq	0x38(%rsp), %rsi
    00001906: 	xorl	%edx, %edx
    00001908: 	movq	%rbx, %rdi
    0000190b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6411
    00001910: 	movq	%rax, (%rbx)
    00001913: 	movq	%rax, %rdi
    00001916: 	movq	0x38(%rsp), %rax
    0000191b: 	movq	%rax, 0x10(%rbx)
.Ltmp1636:
    0000191f: 	movq	%r14, %rdx
    00001922: 	movq	%r15, %rsi
    00001925: 	callq	memcpy@PLT # Offset: 6437
    0000192a: 	movq	0x38(%rsp), %r14
    0000192f: 	movq	(%rbx), %rdi
    00001932: 	jmp	.Ltmp1635 # Offset: 6450
.Ltmp1566:
    00001937: 	leaq	0x38(%rsp), %rsi
    0000193c: 	xorl	%edx, %edx
    0000193e: 	movq	%rbx, %rdi
    00001941: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6465
    00001946: 	movq	%rax, (%rbx)
    00001949: 	movq	%rax, %rdi
    0000194c: 	movq	0x38(%rsp), %rax
    00001951: 	movq	%rax, 0x10(%rbx)
.Ltmp1639:
    00001955: 	movq	%r14, %rdx
    00001958: 	movq	%r15, %rsi
    0000195b: 	callq	memcpy@PLT # Offset: 6491
    00001960: 	movq	0x38(%rsp), %r14
    00001965: 	movq	(%rbx), %rdi
    00001968: 	jmp	.Ltmp1638 # Offset: 6504
.Ltmp1534:
    0000196d: 	leaq	0x38(%rsp), %rsi
    00001972: 	xorl	%edx, %edx
    00001974: 	movq	%rbx, %rdi
    00001977: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6519
    0000197c: 	movq	%rax, (%rbx)
    0000197f: 	movq	%rax, %rdi
    00001982: 	movq	0x38(%rsp), %rax
    00001987: 	movq	%rax, 0x10(%rbx)
    0000198b: 	jmp	.Ltmp1647 # Offset: 6539
.Ltmp1582:
    00001990: 	leaq	0x38(%rsp), %rsi
    00001995: 	xorl	%edx, %edx
    00001997: 	movq	%rbx, %rdi
    0000199a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6554
    0000199f: 	movq	%rax, (%rbx)
    000019a2: 	movq	%rax, %rdi
    000019a5: 	movq	0x38(%rsp), %rax
    000019aa: 	movq	%rax, 0x10(%rbx)
.Ltmp1642:
    000019ae: 	movq	%r14, %rdx
    000019b1: 	movq	%r15, %rsi
    000019b4: 	callq	memcpy@PLT # Offset: 6580
    000019b9: 	movq	0x38(%rsp), %r14
    000019be: 	movq	(%rbx), %rdi
    000019c1: 	jmp	.Ltmp1641 # Offset: 6593
.Ltmp1550:
    000019c6: 	leaq	0x38(%rsp), %rsi
    000019cb: 	xorl	%edx, %edx
    000019cd: 	movq	%rbx, %rdi
    000019d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6608
    000019d5: 	movq	%rax, (%rbx)
    000019d8: 	movq	%rax, %rdi
    000019db: 	movq	0x38(%rsp), %rax
    000019e0: 	movq	%rax, 0x10(%rbx)
.Ltmp1645:
    000019e4: 	movq	%r14, %rdx
    000019e7: 	movq	%r15, %rsi
    000019ea: 	callq	memcpy@PLT # Offset: 6634
    000019ef: 	movq	0x38(%rsp), %r14
    000019f4: 	movq	(%rbx), %rdi
    000019f7: 	jmp	.Ltmp1644 # Offset: 6647
.Ltmp1598:
    000019fc: 	leaq	0x38(%rsp), %rsi
    00001a01: 	xorl	%edx, %edx
    00001a03: 	movq	%rbx, %rdi
    00001a06: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6662
    00001a0b: 	movq	%rax, (%rbx)
    00001a0e: 	movq	%rax, %rdi
    00001a11: 	movq	0x38(%rsp), %rax
    00001a16: 	movq	%rax, 0x10(%rbx)
    00001a1a: 	jmp	.Ltmp1648 # Offset: 6682
.Ltmp1486:
    00001a1f: 	leaq	0x38(%rsp), %rsi
    00001a24: 	xorl	%edx, %edx
    00001a26: 	movq	%rbx, %rdi
    00001a29: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6697
    00001a2e: 	movq	%rax, (%rbx)
    00001a31: 	movq	%rax, %rdi
    00001a34: 	movq	0x38(%rsp), %rax
    00001a39: 	movq	%rax, 0x10(%rbx)
    00001a3d: 	jmp	.Ltmp1649 # Offset: 6717
.Ltmp1518:
    00001a42: 	leaq	0x38(%rsp), %rsi
    00001a47: 	xorl	%edx, %edx
    00001a49: 	movq	%rbx, %rdi
    00001a4c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6732
    00001a51: 	movq	%rax, (%rbx)
    00001a54: 	movq	%rax, %rdi
    00001a57: 	movq	0x38(%rsp), %rax
    00001a5c: 	movq	%rax, 0x10(%rbx)
    00001a60: 	jmp	.Ltmp1650 # Offset: 6752
.Ltmp1475:
    00001a65: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a6c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6764
.Ltmp1478:
    00001a71: 	leaq	DATAat0x3d182(%rip), %rdi
    00001a78: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6776
.Ltmp1485:
    00001a7d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a84: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6788
.Ltmp1491:
    00001a89: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a90: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6800
.Ltmp1494:
    00001a95: 	leaq	DATAat0x3d182(%rip), %rdi
    00001a9c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6812
.Ltmp1501:
    00001aa1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001aa8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6824
.Ltmp1507:
    00001aad: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ab4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6836
.Ltmp1510:
    00001ab9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ac0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6848
.Ltmp1517:
    00001ac5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001acc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6860
.Ltmp1523:
    00001ad1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ad8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6872
.Ltmp1526:
    00001add: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ae4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6884
.Ltmp1533:
    00001ae9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001af0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6896
.Ltmp1539:
    00001af5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001afc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6908
.Ltmp1542:
    00001b01: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b08: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6920
.Ltmp1549:
    00001b0d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b14: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6932
.Ltmp1555:
    00001b19: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b20: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6944
.Ltmp1558:
    00001b25: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b2c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6956
.Ltmp1565:
    00001b31: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b38: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6968
.Ltmp1571:
    00001b3d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b44: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6980
.Ltmp1574:
    00001b49: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b50: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6992
.Ltmp1581:
    00001b55: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b5c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7004
.Ltmp1587:
    00001b61: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b68: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7016
.Ltmp1590:
    00001b6d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b74: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7028
.Ltmp1597:
    00001b79: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b80: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7040
.Ltmp1603:
    00001b85: 	callq	__stack_chk_fail@PLT # Offset: 7045
.Ltmp1469:
    00001b8a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b91: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7057
.Ltmp1605:
    00001b96: 	movq	0x18(%rsp), %rdi
    00001b9b: 	jmp	.Ltmp1651 # Offset: 7067
.Ltmp1607:
    00001ba0: 	movq	0x18(%rsp), %rdi
    00001ba5: 	jmp	.Ltmp1652 # Offset: 7077
.Ltmp1609:
    00001baa: 	movq	0x18(%rsp), %rdi
    00001baf: 	jmp	.Ltmp1653 # Offset: 7087
.Ltmp1611:
    00001bb4: 	movq	0x18(%rsp), %rdi
    00001bb9: 	jmp	.Ltmp1654 # Offset: 7097
.Ltmp1613:
    00001bbe: 	movq	0x18(%rsp), %rdi
    00001bc3: 	jmp	.Ltmp1655 # Offset: 7107
.Ltmp1615:
    00001bc8: 	movq	0x18(%rsp), %rdi
    00001bcd: 	jmp	.Ltmp1656 # Offset: 7117
.Ltmp1617:
    00001bd2: 	movq	0x18(%rsp), %rdi
    00001bd7: 	jmp	.Ltmp1657 # Offset: 7127
.Ltmp1619:
    00001bdc: 	movq	0x18(%rsp), %rdi
    00001be1: 	jmp	.Ltmp1658 # Offset: 7137
    00001be6: 	endbr64
.Ltmp1660:
    00001bea: 	movq	%rax, %rbp
    00001bed: 	jmp	.Ltmp1659 # Offset: 7149
    00001bef: 	endbr64
    00001bf3: 	jmp	.Ltmp1660 # Offset: 7155
    00001bf5: 	endbr64
    00001bf9: 	jmp	.Ltmp1660 # Offset: 7161
    00001bfb: 	endbr64
    00001bff: 	jmp	.Ltmp1660 # Offset: 7167
    00001c01: 	endbr64
    00001c05: 	jmp	.Ltmp1660 # Offset: 7173
    00001c07: 	endbr64
    00001c0b: 	jmp	.Ltmp1660 # Offset: 7179
    00001c0d: 	endbr64
    00001c11: 	jmp	.Ltmp1660 # Offset: 7185
    00001c13: 	endbr64
    00001c17: 	movq	%rax, %rbp
    00001c1a: 	jmp	.Ltmp1661 # Offset: 7194
    00001c1c: 	endbr64
    00001c20: 	jmp	.Ltmp1660 # Offset: 7200
    00001c22: 	endbr64
    00001c26: 	jmp	.Ltmp1660 # Offset: 7206
    00001c28: 	endbr64
    00001c2c: 	jmp	.Ltmp1660 # Offset: 7212
    00001c2e: 	endbr64
    00001c32: 	jmp	.Ltmp1660 # Offset: 7218
.Ltmp1659:
    00001c34: 	movq	0x60(%rsp), %rdi
    00001c39: 	cmpq	0x18(%rsp), %rdi
    00001c3e: 	je	.Ltmp1661 # Offset: 7230
    00001c40: 	movq	0x70(%rsp), %rax
    00001c45: 	leaq	0x1(%rax), %rsi
    00001c49: 	callq	_ZdlPvm@PLT # Offset: 7241
.Ltmp1661:
    00001c4e: 	movq	0x40(%rsp), %rdi
    00001c53: 	cmpq	0x28(%rsp), %rdi
    00001c58: 	je	.Ltmp1662 # Offset: 7256
    00001c5a: 	movq	0x50(%rsp), %rax
    00001c5f: 	leaq	0x1(%rax), %rsi
    00001c63: 	callq	_ZdlPvm@PLT # Offset: 7267
.Ltmp1662:
    00001c68: 	movq	%rbp, %rdi
    00001c6b: 	callq	_Unwind_Resume@PLT # Offset: 7275
    00001c70: 	endbr64
    00001c74: 	jmp	.Ltmp1660 # Offset: 7284
    00001c79: 	endbr64
    00001c7d: 	jmp	.Ltmp1660 # Offset: 7293
    00001c82: 	endbr64
    00001c86: 	jmp	.Ltmp1660 # Offset: 7302
    00001c8b: 	endbr64
    00001c8f: 	jmp	.Ltmp1660 # Offset: 7311
    00001c94: 	endbr64
    00001c98: 	jmp	.Ltmp1660 # Offset: 7320
    00001c9d: 	endbr64
    00001ca1: 	jmp	.Ltmp1660 # Offset: 7329
    00001ca6: 	endbr64
    00001caa: 	jmp	.Ltmp1660 # Offset: 7338
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIiENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyIlENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 144
  State       : disassembled
  Address     : 0x121a0
  Size        : 0x1cd2
  MaxSize     : 0x1ce0
  Offset      : 0x121a0
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIlENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0143:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdx, %r13
    0000000d: 	movl	$0x5f34, %edx
    00000012: 	pushq	%r12
    00000014: 	movq	%rsi, %r12
    00000017: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000001e: 	pushq	%rbp
    0000001f: 	movq	%rdi, %rbp
    00000022: 	pushq	%rbx
    00000023: 	subq	$0xa8, %rsp
    0000002a: 	movq	%rcx, 0x18(%rsp)
    0000002f: 	leaq	0x70(%rsp), %rdi
    00000034: 	movq	%r8, 0x20(%rsp)
    00000039: 	movq	%fs:0x28, %rax
    00000042: 	movq	%rax, 0x98(%rsp)
    0000004a: 	xorl	%eax, %eax
    0000004c: 	leaq	0x60(%rsp), %rax
    00000051: 	movw	%dx, 0x84(%rsp)
    00000059: 	movl	$0xd, %edx
    0000005e: 	movq	%rax, 0x38(%rsp)
    00000063: 	movq	%rax, 0x50(%rsp)
    00000068: 	movl	$0x5f34, %eax
    0000006d: 	movw	%ax, 0x64(%rsp)
    00000072: 	leaq	0x80(%rsp), %rax
    0000007a: 	movl	$0x36746e69, 0x60(%rsp)
    00000082: 	movb	$0x74, 0x66(%rsp)
    00000087: 	movq	$0x7, 0x58(%rsp)
    00000090: 	movb	$0x0, 0x67(%rsp)
    00000095: 	movq	%rdi, 0x30(%rsp)
    0000009a: 	movq	%rax, 0x28(%rsp)
    0000009f: 	movq	%rax, 0x70(%rsp)
    000000a4: 	movl	$0x36746e69, 0x80(%rsp)
    000000af: 	movb	$0x74, 0x86(%rsp)
    000000b7: 	movq	$0x7, 0x78(%rsp)
    000000c0: 	movb	$0x0, 0x87(%rsp)
    000000c8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 200
    000000cd: 	callq	clock@PLT # Offset: 205
    000000d2: 	movq	%r12, %xmm3
    000000d7: 	movl	iterations(%rip), %ecx
    000000dd: 	xorl	%r14d, %r14d
    000000e0: 	punpcklqdq	%xmm3, %xmm3
    000000e4: 	movq	%rax, start_time(%rip)
    000000eb: 	leaq	0xfa00(%rbp), %rbx
    000000f2: 	leaq	DATAat0x3d1d8(%rip), %r15
    000000f9: 	movaps	%xmm3, (%rsp)
    000000fd: 	testl	%ecx, %ecx
    000000ff: 	jle	.Ltmp1663 # Offset: 255
    00000101: 	nopl	(%rax) # Size: 7
.Ltmp1666:
    00000108: 	movq	%rbp, %rax
    0000010b: 	pxor	%xmm1, %xmm1
    0000010f: 	nop # Size: 1
.Ltmp1664:
    00000110: 	movdqu	(%rax), %xmm0
    00000114: 	pand	(%rsp), %xmm0
    00000119: 	addq	$0x10, %rax
    0000011d: 	paddq	%xmm0, %xmm1
    00000121: 	cmpq	%rax, %rbx
    00000124: 	jne	.Ltmp1664 # Offset: 292
    00000126: 	cvttsd2si	init_value(%rip), %rdx
    0000012f: 	movdqa	%xmm1, %xmm0
    00000133: 	psrldq	$0x8, %xmm0
    00000138: 	paddq	%xmm0, %xmm1
    0000013c: 	movq	%xmm1, %rax
    00000141: 	andq	%r12, %rdx
    00000144: 	imulq	$0x1f40, %rdx, %rdx
    0000014b: 	cmpq	%rax, %rdx
    0000014e: 	je	.Ltmp1665 # Offset: 334
    00000150: 	movl	current_test(%rip), %edx
    00000156: 	movq	%r15, %rsi
    00000159: 	movl	$0x1, %edi
    0000015e: 	xorl	%eax, %eax
    00000160: 	callq	__printf_chk@PLT # Offset: 352
    00000165: 	movl	iterations(%rip), %ecx
.Ltmp1665:
    0000016b: 	addl	$0x1, %r14d
    0000016f: 	cmpl	%ecx, %r14d
    00000172: 	jl	.Ltmp1666 # Offset: 370
.Ltmp1663:
    00000174: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000017b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000182: 	subq	$0x20, %rax
    00000186: 	cmpq	%rax, %rbx
    00000189: 	je	.Ltmp1667 # Offset: 393
    0000018f: 	leaq	0x10(%rbx), %rdi
    00000193: 	movq	0x78(%rsp), %r14
    00000198: 	movq	%rdi, (%rbx)
    0000019b: 	movq	0x70(%rsp), %r15
    000001a0: 	movq	%r15, %rax
    000001a3: 	addq	%r14, %rax
    000001a6: 	je	.Ltmp1668 # Offset: 422
    000001a8: 	testq	%r15, %r15
    000001ab: 	je	.Ltmp1669 # Offset: 427
.Ltmp1668:
    000001b1: 	movq	%r14, 0x48(%rsp)
    000001b6: 	cmpq	$0xf, %r14
    000001ba: 	ja	.Ltmp1670 # Offset: 442
    000001c0: 	cmpq	$0x1, %r14
    000001c4: 	jne	.Ltmp1671 # Offset: 452
    000001ca: 	movzbl	(%r15), %eax
    000001ce: 	movb	%al, 0x10(%rbx)
.Ltmp1804:
    000001d1: 	movq	%r14, 0x8(%rbx)
    000001d5: 	movb	$0x0, (%rdi,%r14)
    000001da: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001e8: 	addq	$0x20, %rax
    000001ec: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001fa: 	je	.Ltmp1672 # Offset: 506
.Ltmp1830:
    00000200: 	movq	-0x20(%rax), %r14
    00000204: 	callq	clock@PLT # Offset: 516
    00000209: 	pxor	%xmm0, %xmm0
    0000020d: 	movq	%rax, end_time(%rip)
    00000214: 	movq	%r14, %rdi
    00000217: 	subq	start_time(%rip), %rax
    0000021e: 	cvtsi2sd	%rax, %xmm0
    00000223: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000022b: 	callq	_Z13record_resultdPKc # Offset: 555
    00000230: 	movq	0x70(%rsp), %rdi
    00000235: 	cmpq	0x28(%rsp), %rdi
    0000023a: 	je	.Ltmp1673 # Offset: 570
    0000023c: 	movq	0x80(%rsp), %rax
    00000244: 	leaq	0x1(%rax), %rsi
    00000248: 	callq	_ZdlPvm@PLT # Offset: 584
.Ltmp1673:
    0000024d: 	movq	0x28(%rsp), %rax
    00000252: 	movq	0x50(%rsp), %r15
    00000257: 	movq	0x58(%rsp), %r14
    0000025c: 	movq	%rax, 0x70(%rsp)
    00000261: 	movq	%r15, %rax
    00000264: 	addq	%r14, %rax
    00000267: 	je	.Ltmp1674 # Offset: 615
    00000269: 	testq	%r15, %r15
    0000026c: 	je	.Ltmp1675 # Offset: 620
.Ltmp1674:
    00000272: 	movq	%r14, 0x48(%rsp)
    00000277: 	cmpq	$0xf, %r14
    0000027b: 	ja	.Ltmp1676 # Offset: 635
    00000281: 	cmpq	$0x1, %r14
    00000285: 	jne	.Ltmp1677 # Offset: 645
    0000028b: 	movzbl	(%r15), %eax
    0000028f: 	movb	%al, 0x80(%rsp)
    00000296: 	movq	0x28(%rsp), %rax
.Ltmp1816:
    0000029b: 	movq	%r14, 0x78(%rsp)
    000002a0: 	movb	$0x0, (%rax,%r14)
    000002a5: 	movabsq	$0x3fffffffffffffff, %rax
    000002af: 	subq	0x78(%rsp), %rax
    000002b4: 	cmpq	$0x15, %rax
    000002b8: 	jbe	.Ltmp1678 # Offset: 696
    000002be: 	movq	0x30(%rsp), %rdi
    000002c3: 	movl	$0x16, %edx
    000002c8: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002cf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 719
    000002d4: 	callq	clock@PLT # Offset: 724
    000002d9: 	movl	iterations(%rip), %ecx
    000002df: 	movq	%rax, start_time(%rip)
    000002e6: 	testl	%ecx, %ecx
    000002e8: 	jle	.Ltmp1679 # Offset: 744
    000002ee: 	movq	0x18(%rsp), %rax
    000002f3: 	andq	0x20(%rsp), %rax
    000002f8: 	xorl	%r14d, %r14d
    000002fb: 	leaq	0xfa00(%rbp), %rbx
    00000302: 	andq	%r13, %rax
    00000305: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000030c: 	andq	%r12, %rax
    0000030f: 	movq	%rax, %xmm3
    00000314: 	punpcklqdq	%xmm3, %xmm3
    00000318: 	movaps	%xmm3, (%rsp)
    0000031c: 	nopl	(%rax) # Size: 4
.Ltmp1682:
    00000320: 	movq	%rbp, %rax
    00000323: 	pxor	%xmm1, %xmm1
    00000327: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1680:
    00000330: 	movdqu	(%rax), %xmm0
    00000334: 	pand	(%rsp), %xmm0
    00000339: 	addq	$0x10, %rax
    0000033d: 	paddq	%xmm0, %xmm1
    00000341: 	cmpq	%rbx, %rax
    00000344: 	jne	.Ltmp1680 # Offset: 836
    00000346: 	cvttsd2si	init_value(%rip), %rdx
    0000034f: 	andq	0x20(%rsp), %rdx
    00000354: 	movdqa	%xmm1, %xmm0
    00000358: 	andq	0x18(%rsp), %rdx
    0000035d: 	psrldq	$0x8, %xmm0
    00000362: 	andq	%r13, %rdx
    00000365: 	paddq	%xmm0, %xmm1
    00000369: 	andq	%r12, %rdx
    0000036c: 	movq	%xmm1, %rax
    00000371: 	imulq	$0x1f40, %rdx, %rdx
    00000378: 	cmpq	%rax, %rdx
    0000037b: 	je	.Ltmp1681 # Offset: 891
    0000037d: 	movl	current_test(%rip), %edx
    00000383: 	movq	%r15, %rsi
    00000386: 	movl	$0x1, %edi
    0000038b: 	xorl	%eax, %eax
    0000038d: 	callq	__printf_chk@PLT # Offset: 909
    00000392: 	movl	iterations(%rip), %ecx
.Ltmp1681:
    00000398: 	addl	$0x1, %r14d
    0000039c: 	cmpl	%ecx, %r14d
    0000039f: 	jl	.Ltmp1682 # Offset: 927
.Ltmp1679:
    000003a5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003b3: 	subq	$0x20, %rax
    000003b7: 	cmpq	%rax, %rbx
    000003ba: 	je	.Ltmp1683 # Offset: 954
    000003c0: 	leaq	0x10(%rbx), %rdi
    000003c4: 	movq	0x78(%rsp), %r14
    000003c9: 	movq	%rdi, (%rbx)
    000003cc: 	movq	0x70(%rsp), %r15
    000003d1: 	movq	%r15, %rax
    000003d4: 	addq	%r14, %rax
    000003d7: 	je	.Ltmp1684 # Offset: 983
    000003d9: 	testq	%r15, %r15
    000003dc: 	je	.Ltmp1685 # Offset: 988
.Ltmp1684:
    000003e2: 	movq	%r14, 0x48(%rsp)
    000003e7: 	cmpq	$0xf, %r14
    000003eb: 	ja	.Ltmp1686 # Offset: 1003
    000003f1: 	cmpq	$0x1, %r14
    000003f5: 	jne	.Ltmp1687 # Offset: 1013
    000003fb: 	movzbl	(%r15), %eax
    000003ff: 	movb	%al, 0x10(%rbx)
.Ltmp1840:
    00000402: 	movq	%r14, 0x8(%rbx)
    00000406: 	movb	$0x0, (%rdi,%r14)
    0000040b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000412: 	addq	$0x20, %rax
    00000416: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1832:
    0000041d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000424: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000042b: 	je	.Ltmp1688 # Offset: 1067
.Ltmp1827:
    00000431: 	movq	-0x20(%rax), %r14
    00000435: 	callq	clock@PLT # Offset: 1077
    0000043a: 	pxor	%xmm0, %xmm0
    0000043e: 	movq	%rax, end_time(%rip)
    00000445: 	movq	%r14, %rdi
    00000448: 	subq	start_time(%rip), %rax
    0000044f: 	cvtsi2sd	%rax, %xmm0
    00000454: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000045c: 	callq	_Z13record_resultdPKc # Offset: 1116
    00000461: 	movq	0x70(%rsp), %rdi
    00000466: 	cmpq	0x28(%rsp), %rdi
    0000046b: 	je	.Ltmp1689 # Offset: 1131
    0000046d: 	movq	0x80(%rsp), %rax
    00000475: 	leaq	0x1(%rax), %rsi
    00000479: 	callq	_ZdlPvm@PLT # Offset: 1145
.Ltmp1689:
    0000047e: 	movq	0x28(%rsp), %rax
    00000483: 	movq	0x50(%rsp), %r15
    00000488: 	movq	0x58(%rsp), %r14
    0000048d: 	movq	%rax, 0x70(%rsp)
    00000492: 	movq	%r15, %rax
    00000495: 	addq	%r14, %rax
    00000498: 	je	.Ltmp1690 # Offset: 1176
    0000049a: 	testq	%r15, %r15
    0000049d: 	je	.Ltmp1691 # Offset: 1181
.Ltmp1690:
    000004a3: 	movq	%r14, 0x48(%rsp)
    000004a8: 	cmpq	$0xf, %r14
    000004ac: 	ja	.Ltmp1692 # Offset: 1196
    000004b2: 	cmpq	$0x1, %r14
    000004b6: 	jne	.Ltmp1693 # Offset: 1206
    000004bc: 	movzbl	(%r15), %eax
    000004c0: 	movb	%al, 0x80(%rsp)
    000004c7: 	movq	0x28(%rsp), %rax
.Ltmp1814:
    000004cc: 	movq	%r14, 0x78(%rsp)
    000004d1: 	movb	$0x0, (%rax,%r14)
    000004d6: 	movabsq	$0x3fffffffffffffff, %rax
    000004e0: 	subq	0x78(%rsp), %rax
    000004e5: 	cmpq	$0x16, %rax
    000004e9: 	jbe	.Ltmp1694 # Offset: 1257
    000004ef: 	movq	0x30(%rsp), %rdi
    000004f4: 	movl	$0x17, %edx
    000004f9: 	leaq	DATAat0x3d1ff(%rip), %rsi
    00000500: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1280
    00000505: 	callq	clock@PLT # Offset: 1285
    0000050a: 	movl	iterations(%rip), %ecx
    00000510: 	movq	%rax, start_time(%rip)
    00000517: 	testl	%ecx, %ecx
    00000519: 	jle	.Ltmp1695 # Offset: 1305
    0000051f: 	movq	0x18(%rsp), %rax
    00000524: 	andq	0x20(%rsp), %rax
    00000529: 	xorl	%r14d, %r14d
    0000052c: 	leaq	0xfa00(%rbp), %rbx
    00000533: 	andq	%r13, %rax
    00000536: 	andq	%r12, %rax
    00000539: 	movq	%rax, %xmm4
    0000053e: 	movq	%rax, %r15
    00000541: 	punpcklqdq	%xmm4, %xmm4
    00000545: 	movaps	%xmm4, (%rsp)
    00000549: 	nopl	(%rax) # Size: 7
.Ltmp1698:
    00000550: 	movq	%rbp, %rax
    00000553: 	pxor	%xmm1, %xmm1
    00000557: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1696:
    00000560: 	movdqu	(%rax), %xmm0
    00000564: 	pand	(%rsp), %xmm0
    00000569: 	addq	$0x10, %rax
    0000056d: 	paddq	%xmm0, %xmm1
    00000571: 	cmpq	%rax, %rbx
    00000574: 	jne	.Ltmp1696 # Offset: 1396
    00000576: 	cvttsd2si	init_value(%rip), %rdx
    0000057f: 	movdqa	%xmm1, %xmm0
    00000583: 	psrldq	$0x8, %xmm0
    00000588: 	paddq	%xmm0, %xmm1
    0000058c: 	movq	%xmm1, %rax
    00000591: 	andq	%r15, %rdx
    00000594: 	imulq	$0x1f40, %rdx, %rdx
    0000059b: 	cmpq	%rax, %rdx
    0000059e: 	je	.Ltmp1697 # Offset: 1438
    000005a0: 	movl	current_test(%rip), %edx
    000005a6: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000005ad: 	movl	$0x1, %edi
    000005b2: 	xorl	%eax, %eax
    000005b4: 	callq	__printf_chk@PLT # Offset: 1460
    000005b9: 	movl	iterations(%rip), %ecx
.Ltmp1697:
    000005bf: 	addl	$0x1, %r14d
    000005c3: 	cmpl	%ecx, %r14d
    000005c6: 	jl	.Ltmp1698 # Offset: 1478
.Ltmp1695:
    000005c8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000005d6: 	subq	$0x20, %rax
    000005da: 	cmpq	%rax, %rbx
    000005dd: 	je	.Ltmp1699 # Offset: 1501
    000005e3: 	leaq	0x10(%rbx), %rdi
    000005e7: 	movq	0x78(%rsp), %r14
    000005ec: 	movq	%rdi, (%rbx)
    000005ef: 	movq	0x70(%rsp), %r15
    000005f4: 	movq	%r15, %rax
    000005f7: 	addq	%r14, %rax
    000005fa: 	je	.Ltmp1700 # Offset: 1530
    000005fc: 	testq	%r15, %r15
    000005ff: 	je	.Ltmp1701 # Offset: 1535
.Ltmp1700:
    00000605: 	movq	%r14, 0x48(%rsp)
    0000060a: 	cmpq	$0xf, %r14
    0000060e: 	ja	.Ltmp1702 # Offset: 1550
    00000614: 	cmpq	$0x1, %r14
    00000618: 	jne	.Ltmp1703 # Offset: 1560
    0000061e: 	movzbl	(%r15), %eax
    00000622: 	movb	%al, 0x10(%rbx)
.Ltmp1835:
    00000625: 	movq	%r14, 0x8(%rbx)
    00000629: 	movb	$0x0, (%rdi,%r14)
    0000062e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000635: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000063c: 	addq	$0x20, %rax
    00000640: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000647: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000064e: 	je	.Ltmp1704 # Offset: 1614
.Ltmp1829:
    00000654: 	movq	-0x20(%rax), %r14
    00000658: 	callq	clock@PLT # Offset: 1624
    0000065d: 	pxor	%xmm0, %xmm0
    00000661: 	movq	%rax, end_time(%rip)
    00000668: 	movq	%r14, %rdi
    0000066b: 	subq	start_time(%rip), %rax
    00000672: 	cvtsi2sd	%rax, %xmm0
    00000677: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000067f: 	callq	_Z13record_resultdPKc # Offset: 1663
    00000684: 	movq	0x70(%rsp), %rdi
    00000689: 	cmpq	0x28(%rsp), %rdi
    0000068e: 	je	.Ltmp1705 # Offset: 1678
    00000690: 	movq	0x80(%rsp), %rax
    00000698: 	leaq	0x1(%rax), %rsi
    0000069c: 	callq	_ZdlPvm@PLT # Offset: 1692
.Ltmp1705:
    000006a1: 	movq	0x28(%rsp), %rax
    000006a6: 	movq	0x50(%rsp), %r15
    000006ab: 	movq	0x58(%rsp), %r14
    000006b0: 	movq	%rax, 0x70(%rsp)
    000006b5: 	movq	%r15, %rax
    000006b8: 	addq	%r14, %rax
    000006bb: 	je	.Ltmp1706 # Offset: 1723
    000006bd: 	testq	%r15, %r15
    000006c0: 	je	.Ltmp1707 # Offset: 1728
.Ltmp1706:
    000006c6: 	movq	%r14, 0x48(%rsp)
    000006cb: 	cmpq	$0xf, %r14
    000006cf: 	ja	.Ltmp1708 # Offset: 1743
    000006d5: 	cmpq	$0x1, %r14
    000006d9: 	jne	.Ltmp1709 # Offset: 1753
    000006df: 	movzbl	(%r15), %eax
    000006e3: 	movb	%al, 0x80(%rsp)
    000006ea: 	movq	0x28(%rsp), %rax
.Ltmp1820:
    000006ef: 	movq	%r14, 0x78(%rsp)
    000006f4: 	movb	$0x0, (%rax,%r14)
    000006f9: 	movabsq	$0x3fffffffffffffff, %rax
    00000703: 	subq	0x78(%rsp), %rax
    00000708: 	cmpq	$0xb, %rax
    0000070c: 	jbe	.Ltmp1710 # Offset: 1804
    00000712: 	movq	0x30(%rsp), %rdi
    00000717: 	movl	$0xc, %edx
    0000071c: 	leaq	DATAat0x3d220(%rip), %rsi
    00000723: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1827
    00000728: 	callq	clock@PLT # Offset: 1832
    0000072d: 	movq	%r12, %xmm4
    00000732: 	movl	iterations(%rip), %ecx
    00000738: 	xorl	%r14d, %r14d
    0000073b: 	punpcklqdq	%xmm4, %xmm4
    0000073f: 	movq	%rax, start_time(%rip)
    00000746: 	leaq	0xfa00(%rbp), %rbx
    0000074d: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000754: 	movaps	%xmm4, (%rsp)
    00000758: 	testl	%ecx, %ecx
    0000075a: 	jle	.Ltmp1711 # Offset: 1882
    0000075c: 	nopl	(%rax) # Size: 4
.Ltmp1714:
    00000760: 	movq	%rbp, %rax
    00000763: 	pxor	%xmm1, %xmm1
    00000767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1712:
    00000770: 	movdqu	(%rax), %xmm0
    00000774: 	por	(%rsp), %xmm0
    00000779: 	addq	$0x10, %rax
    0000077d: 	paddq	%xmm0, %xmm1
    00000781: 	cmpq	%rbx, %rax
    00000784: 	jne	.Ltmp1712 # Offset: 1924
    00000786: 	cvttsd2si	init_value(%rip), %rdx
    0000078f: 	movdqa	%xmm1, %xmm0
    00000793: 	psrldq	$0x8, %xmm0
    00000798: 	paddq	%xmm0, %xmm1
    0000079c: 	movq	%xmm1, %rax
    000007a1: 	orq	%r12, %rdx
    000007a4: 	imulq	$0x1f40, %rdx, %rdx
    000007ab: 	cmpq	%rax, %rdx
    000007ae: 	je	.Ltmp1713 # Offset: 1966
    000007b0: 	movl	current_test(%rip), %edx
    000007b6: 	movq	%r15, %rsi
    000007b9: 	movl	$0x1, %edi
    000007be: 	xorl	%eax, %eax
    000007c0: 	callq	__printf_chk@PLT # Offset: 1984
    000007c5: 	movl	iterations(%rip), %ecx
.Ltmp1713:
    000007cb: 	addl	$0x1, %r14d
    000007cf: 	cmpl	%ecx, %r14d
    000007d2: 	jl	.Ltmp1714 # Offset: 2002
.Ltmp1711:
    000007d4: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007db: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000007e2: 	subq	$0x20, %rax
    000007e6: 	cmpq	%rax, %rbx
    000007e9: 	je	.Ltmp1715 # Offset: 2025
    000007ef: 	leaq	0x10(%rbx), %rdi
    000007f3: 	movq	0x78(%rsp), %r14
    000007f8: 	movq	%rdi, (%rbx)
    000007fb: 	movq	0x70(%rsp), %r15
    00000800: 	movq	%r15, %rax
    00000803: 	addq	%r14, %rax
    00000806: 	je	.Ltmp1716 # Offset: 2054
    00000808: 	testq	%r15, %r15
    0000080b: 	je	.Ltmp1717 # Offset: 2059
.Ltmp1716:
    00000811: 	movq	%r14, 0x48(%rsp)
    00000816: 	cmpq	$0xf, %r14
    0000081a: 	ja	.Ltmp1718 # Offset: 2074
    00000820: 	cmpq	$0x1, %r14
    00000824: 	jne	.Ltmp1719 # Offset: 2084
    0000082a: 	movzbl	(%r15), %eax
    0000082e: 	movb	%al, 0x10(%rbx)
.Ltmp1846:
    00000831: 	movq	%r14, 0x8(%rbx)
    00000835: 	movb	$0x0, (%rdi,%r14)
    0000083a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000841: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000848: 	addq	$0x20, %rax
    0000084c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000853: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000085a: 	je	.Ltmp1720 # Offset: 2138
.Ltmp1826:
    00000860: 	movq	-0x20(%rax), %r14
    00000864: 	callq	clock@PLT # Offset: 2148
    00000869: 	pxor	%xmm0, %xmm0
    0000086d: 	movq	%rax, end_time(%rip)
    00000874: 	movq	%r14, %rdi
    00000877: 	subq	start_time(%rip), %rax
    0000087e: 	cvtsi2sd	%rax, %xmm0
    00000883: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000088b: 	callq	_Z13record_resultdPKc # Offset: 2187
    00000890: 	movq	0x70(%rsp), %rdi
    00000895: 	cmpq	0x28(%rsp), %rdi
    0000089a: 	je	.Ltmp1721 # Offset: 2202
    0000089c: 	movq	0x80(%rsp), %rax
    000008a4: 	leaq	0x1(%rax), %rsi
    000008a8: 	callq	_ZdlPvm@PLT # Offset: 2216
.Ltmp1721:
    000008ad: 	movq	0x28(%rsp), %rax
    000008b2: 	movq	0x50(%rsp), %r15
    000008b7: 	movq	0x58(%rsp), %r14
    000008bc: 	movq	%rax, 0x70(%rsp)
    000008c1: 	movq	%r15, %rax
    000008c4: 	addq	%r14, %rax
    000008c7: 	je	.Ltmp1722 # Offset: 2247
    000008c9: 	testq	%r15, %r15
    000008cc: 	je	.Ltmp1723 # Offset: 2252
.Ltmp1722:
    000008d2: 	movq	%r14, 0x48(%rsp)
    000008d7: 	cmpq	$0xf, %r14
    000008db: 	ja	.Ltmp1724 # Offset: 2267
    000008e1: 	cmpq	$0x1, %r14
    000008e5: 	jne	.Ltmp1725 # Offset: 2277
    000008eb: 	movzbl	(%r15), %eax
    000008ef: 	movb	%al, 0x80(%rsp)
    000008f6: 	movq	0x28(%rsp), %rax
.Ltmp1818:
    000008fb: 	movq	%r14, 0x78(%rsp)
    00000900: 	movb	$0x0, (%rax,%r14)
    00000905: 	movabsq	$0x3fffffffffffffff, %rax
    0000090f: 	subq	0x78(%rsp), %rax
    00000914: 	cmpq	$0x14, %rax
    00000918: 	jbe	.Ltmp1726 # Offset: 2328
    0000091e: 	movq	0x30(%rsp), %rdi
    00000923: 	movl	$0x15, %edx
    00000928: 	leaq	DATAat0x3d217(%rip), %rsi
    0000092f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2351
    00000934: 	callq	clock@PLT # Offset: 2356
    00000939: 	movl	iterations(%rip), %ecx
    0000093f: 	movq	%rax, start_time(%rip)
    00000946: 	testl	%ecx, %ecx
    00000948: 	jle	.Ltmp1727 # Offset: 2376
    0000094e: 	movq	0x18(%rsp), %rax
    00000953: 	orq	0x20(%rsp), %rax
    00000958: 	xorl	%r14d, %r14d
    0000095b: 	leaq	0xfa00(%rbp), %rbx
    00000962: 	orq	%r13, %rax
    00000965: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000096c: 	orq	%r12, %rax
    0000096f: 	movq	%rax, %xmm2
    00000974: 	punpcklqdq	%xmm2, %xmm2
    00000978: 	movaps	%xmm2, (%rsp)
    0000097c: 	nopl	(%rax) # Size: 4
.Ltmp1730:
    00000980: 	movq	%rbp, %rax
    00000983: 	pxor	%xmm1, %xmm1
    00000987: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1728:
    00000990: 	movdqu	(%rax), %xmm0
    00000994: 	por	(%rsp), %xmm0
    00000999: 	addq	$0x10, %rax
    0000099d: 	paddq	%xmm0, %xmm1
    000009a1: 	cmpq	%rax, %rbx
    000009a4: 	jne	.Ltmp1728 # Offset: 2468
    000009a6: 	cvttsd2si	init_value(%rip), %rdx
    000009af: 	orq	0x20(%rsp), %rdx
    000009b4: 	movdqa	%xmm1, %xmm0
    000009b8: 	orq	0x18(%rsp), %rdx
    000009bd: 	psrldq	$0x8, %xmm0
    000009c2: 	orq	%r13, %rdx
    000009c5: 	paddq	%xmm0, %xmm1
    000009c9: 	orq	%r12, %rdx
    000009cc: 	movq	%xmm1, %rax
    000009d1: 	imulq	$0x1f40, %rdx, %rdx
    000009d8: 	cmpq	%rax, %rdx
    000009db: 	je	.Ltmp1729 # Offset: 2523
    000009dd: 	movl	current_test(%rip), %edx
    000009e3: 	movq	%r15, %rsi
    000009e6: 	movl	$0x1, %edi
    000009eb: 	xorl	%eax, %eax
    000009ed: 	callq	__printf_chk@PLT # Offset: 2541
    000009f2: 	movl	iterations(%rip), %ecx
.Ltmp1729:
    000009f8: 	addl	$0x1, %r14d
    000009fc: 	cmpl	%ecx, %r14d
    000009ff: 	jl	.Ltmp1730 # Offset: 2559
.Ltmp1727:
    00000a05: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a0c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a13: 	subq	$0x20, %rax
    00000a17: 	cmpq	%rax, %rbx
    00000a1a: 	je	.Ltmp1731 # Offset: 2586
    00000a20: 	leaq	0x10(%rbx), %rdi
    00000a24: 	movq	0x78(%rsp), %r14
    00000a29: 	movq	%rdi, (%rbx)
    00000a2c: 	movq	0x70(%rsp), %r15
    00000a31: 	movq	%r15, %rax
    00000a34: 	addq	%r14, %rax
    00000a37: 	je	.Ltmp1732 # Offset: 2615
    00000a39: 	testq	%r15, %r15
    00000a3c: 	je	.Ltmp1733 # Offset: 2620
.Ltmp1732:
    00000a42: 	movq	%r14, 0x48(%rsp)
    00000a47: 	cmpq	$0xf, %r14
    00000a4b: 	ja	.Ltmp1734 # Offset: 2635
    00000a51: 	cmpq	$0x1, %r14
    00000a55: 	jne	.Ltmp1735 # Offset: 2645
    00000a5b: 	movzbl	(%r15), %eax
    00000a5f: 	movb	%al, 0x10(%rbx)
.Ltmp1837:
    00000a62: 	movq	%r14, 0x8(%rbx)
    00000a66: 	movb	$0x0, (%rdi,%r14)
    00000a6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a72: 	addq	$0x20, %rax
    00000a76: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1833:
    00000a7d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a84: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a8b: 	je	.Ltmp1736 # Offset: 2699
.Ltmp1831:
    00000a91: 	movq	-0x20(%rax), %r14
    00000a95: 	callq	clock@PLT # Offset: 2709
    00000a9a: 	pxor	%xmm0, %xmm0
    00000a9e: 	movq	%rax, end_time(%rip)
    00000aa5: 	movq	%r14, %rdi
    00000aa8: 	subq	start_time(%rip), %rax
    00000aaf: 	cvtsi2sd	%rax, %xmm0
    00000ab4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000abc: 	callq	_Z13record_resultdPKc # Offset: 2748
    00000ac1: 	movq	0x70(%rsp), %rdi
    00000ac6: 	cmpq	0x28(%rsp), %rdi
    00000acb: 	je	.Ltmp1737 # Offset: 2763
    00000acd: 	movq	0x80(%rsp), %rax
    00000ad5: 	leaq	0x1(%rax), %rsi
    00000ad9: 	callq	_ZdlPvm@PLT # Offset: 2777
.Ltmp1737:
    00000ade: 	movq	0x28(%rsp), %rax
    00000ae3: 	movq	0x50(%rsp), %r15
    00000ae8: 	movq	0x58(%rsp), %r14
    00000aed: 	movq	%rax, 0x70(%rsp)
    00000af2: 	movq	%r15, %rax
    00000af5: 	addq	%r14, %rax
    00000af8: 	je	.Ltmp1738 # Offset: 2808
    00000afa: 	testq	%r15, %r15
    00000afd: 	je	.Ltmp1739 # Offset: 2813
.Ltmp1738:
    00000b03: 	movq	%r14, 0x48(%rsp)
    00000b08: 	cmpq	$0xf, %r14
    00000b0c: 	ja	.Ltmp1740 # Offset: 2828
    00000b12: 	cmpq	$0x1, %r14
    00000b16: 	jne	.Ltmp1741 # Offset: 2838
    00000b1c: 	movzbl	(%r15), %eax
    00000b20: 	movb	%al, 0x80(%rsp)
    00000b27: 	movq	0x28(%rsp), %rax
.Ltmp1812:
    00000b2c: 	movq	%r14, 0x78(%rsp)
    00000b31: 	movb	$0x0, (%rax,%r14)
    00000b36: 	movabsq	$0x3fffffffffffffff, %rax
    00000b40: 	subq	0x78(%rsp), %rax
    00000b45: 	cmpq	$0x15, %rax
    00000b49: 	jbe	.Ltmp1742 # Offset: 2889
    00000b4f: 	movq	0x30(%rsp), %rdi
    00000b54: 	movl	$0x16, %edx
    00000b59: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000b60: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2912
    00000b65: 	callq	clock@PLT # Offset: 2917
    00000b6a: 	movl	iterations(%rip), %ecx
    00000b70: 	movq	%rax, start_time(%rip)
    00000b77: 	testl	%ecx, %ecx
    00000b79: 	jle	.Ltmp1743 # Offset: 2937
    00000b7f: 	movq	0x18(%rsp), %rax
    00000b84: 	orq	0x20(%rsp), %rax
    00000b89: 	xorl	%r14d, %r14d
    00000b8c: 	leaq	0xfa00(%rbp), %rbx
    00000b93: 	orq	%r13, %rax
    00000b96: 	orq	%r12, %rax
    00000b99: 	movq	%rax, %xmm3
    00000b9e: 	movq	%rax, %r15
    00000ba1: 	punpcklqdq	%xmm3, %xmm3
    00000ba5: 	movaps	%xmm3, (%rsp)
    00000ba9: 	nopl	(%rax) # Size: 7
.Ltmp1746:
    00000bb0: 	movq	%rbp, %rax
    00000bb3: 	pxor	%xmm1, %xmm1
    00000bb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1744:
    00000bc0: 	movdqu	(%rax), %xmm0
    00000bc4: 	por	(%rsp), %xmm0
    00000bc9: 	addq	$0x10, %rax
    00000bcd: 	paddq	%xmm0, %xmm1
    00000bd1: 	cmpq	%rbx, %rax
    00000bd4: 	jne	.Ltmp1744 # Offset: 3028
    00000bd6: 	cvttsd2si	init_value(%rip), %rdx
    00000bdf: 	movdqa	%xmm1, %xmm0
    00000be3: 	psrldq	$0x8, %xmm0
    00000be8: 	paddq	%xmm0, %xmm1
    00000bec: 	movq	%xmm1, %rax
    00000bf1: 	orq	%r15, %rdx
    00000bf4: 	imulq	$0x1f40, %rdx, %rdx
    00000bfb: 	cmpq	%rax, %rdx
    00000bfe: 	je	.Ltmp1745 # Offset: 3070
    00000c00: 	movl	current_test(%rip), %edx
    00000c06: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c0d: 	movl	$0x1, %edi
    00000c12: 	xorl	%eax, %eax
    00000c14: 	callq	__printf_chk@PLT # Offset: 3092
    00000c19: 	movl	iterations(%rip), %ecx
.Ltmp1745:
    00000c1f: 	addl	$0x1, %r14d
    00000c23: 	cmpl	%ecx, %r14d
    00000c26: 	jl	.Ltmp1746 # Offset: 3110
.Ltmp1743:
    00000c28: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000c36: 	subq	$0x20, %rax
    00000c3a: 	cmpq	%rax, %rbx
    00000c3d: 	je	.Ltmp1747 # Offset: 3133
    00000c43: 	leaq	0x10(%rbx), %rdi
    00000c47: 	movq	0x78(%rsp), %r14
    00000c4c: 	movq	%rdi, (%rbx)
    00000c4f: 	movq	0x70(%rsp), %r15
    00000c54: 	movq	%r15, %rax
    00000c57: 	addq	%r14, %rax
    00000c5a: 	je	.Ltmp1748 # Offset: 3162
    00000c5c: 	testq	%r15, %r15
    00000c5f: 	je	.Ltmp1749 # Offset: 3167
.Ltmp1748:
    00000c65: 	movq	%r14, 0x48(%rsp)
    00000c6a: 	cmpq	$0xf, %r14
    00000c6e: 	ja	.Ltmp1750 # Offset: 3182
    00000c74: 	cmpq	$0x1, %r14
    00000c78: 	jne	.Ltmp1751 # Offset: 3192
    00000c7e: 	movzbl	(%r15), %eax
    00000c82: 	movb	%al, 0x10(%rbx)
.Ltmp1844:
    00000c85: 	movq	%r14, 0x8(%rbx)
    00000c89: 	movb	$0x0, (%rdi,%r14)
    00000c8e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c95: 	addq	$0x20, %rax
    00000c99: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1828:
    00000ca0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ca7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cae: 	je	.Ltmp1752 # Offset: 3246
.Ltmp1824:
    00000cb4: 	movq	-0x20(%rax), %r14
    00000cb8: 	callq	clock@PLT # Offset: 3256
    00000cbd: 	pxor	%xmm0, %xmm0
    00000cc1: 	movq	%rax, end_time(%rip)
    00000cc8: 	movq	%r14, %rdi
    00000ccb: 	subq	start_time(%rip), %rax
    00000cd2: 	cvtsi2sd	%rax, %xmm0
    00000cd7: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000cdf: 	callq	_Z13record_resultdPKc # Offset: 3295
    00000ce4: 	movq	0x70(%rsp), %rdi
    00000ce9: 	cmpq	0x28(%rsp), %rdi
    00000cee: 	je	.Ltmp1753 # Offset: 3310
    00000cf0: 	movq	0x80(%rsp), %rax
    00000cf8: 	leaq	0x1(%rax), %rsi
    00000cfc: 	callq	_ZdlPvm@PLT # Offset: 3324
.Ltmp1753:
    00000d01: 	movq	0x28(%rsp), %rax
    00000d06: 	movq	0x50(%rsp), %r15
    00000d0b: 	movq	0x58(%rsp), %r14
    00000d10: 	movq	%rax, 0x70(%rsp)
    00000d15: 	movq	%r15, %rax
    00000d18: 	addq	%r14, %rax
    00000d1b: 	je	.Ltmp1754 # Offset: 3355
    00000d1d: 	testq	%r15, %r15
    00000d20: 	je	.Ltmp1755 # Offset: 3360
.Ltmp1754:
    00000d26: 	movq	%r14, 0x48(%rsp)
    00000d2b: 	cmpq	$0xf, %r14
    00000d2f: 	ja	.Ltmp1756 # Offset: 3375
    00000d35: 	cmpq	$0x1, %r14
    00000d39: 	jne	.Ltmp1757 # Offset: 3385
    00000d3f: 	movzbl	(%r15), %eax
    00000d43: 	movb	%al, 0x80(%rsp)
    00000d4a: 	movq	0x28(%rsp), %rax
.Ltmp1810:
    00000d4f: 	movq	%r14, 0x78(%rsp)
    00000d54: 	movb	$0x0, (%rax,%r14)
    00000d59: 	movabsq	$0x3fffffffffffffff, %rax
    00000d63: 	subq	0x78(%rsp), %rax
    00000d68: 	cmpq	$0xc, %rax
    00000d6c: 	jbe	.Ltmp1758 # Offset: 3436
    00000d72: 	movq	0x30(%rsp), %rdi
    00000d77: 	movl	$0xd, %edx
    00000d7c: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000d83: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3459
    00000d88: 	callq	clock@PLT # Offset: 3464
    00000d8d: 	movq	%r12, %xmm2
    00000d92: 	movl	iterations(%rip), %ecx
    00000d98: 	xorl	%r14d, %r14d
    00000d9b: 	punpcklqdq	%xmm2, %xmm2
    00000d9f: 	movq	%rax, start_time(%rip)
    00000da6: 	leaq	0xfa00(%rbp), %rbx
    00000dad: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000db4: 	movaps	%xmm2, (%rsp)
    00000db8: 	testl	%ecx, %ecx
    00000dba: 	jle	.Ltmp1759 # Offset: 3514
    00000dbc: 	nopl	(%rax) # Size: 4
.Ltmp1762:
    00000dc0: 	movq	%rbp, %rax
    00000dc3: 	pxor	%xmm1, %xmm1
    00000dc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1760:
    00000dd0: 	movdqu	(%rax), %xmm0
    00000dd4: 	pxor	(%rsp), %xmm0
    00000dd9: 	addq	$0x10, %rax
    00000ddd: 	paddq	%xmm0, %xmm1
    00000de1: 	cmpq	%rax, %rbx
    00000de4: 	jne	.Ltmp1760 # Offset: 3556
    00000de6: 	cvttsd2si	init_value(%rip), %rdx
    00000def: 	movdqa	%xmm1, %xmm0
    00000df3: 	psrldq	$0x8, %xmm0
    00000df8: 	paddq	%xmm0, %xmm1
    00000dfc: 	movq	%xmm1, %rax
    00000e01: 	xorq	%r12, %rdx
    00000e04: 	imulq	$0x1f40, %rdx, %rdx
    00000e0b: 	cmpq	%rax, %rdx
    00000e0e: 	je	.Ltmp1761 # Offset: 3598
    00000e10: 	movl	current_test(%rip), %edx
    00000e16: 	movq	%r15, %rsi
    00000e19: 	movl	$0x1, %edi
    00000e1e: 	xorl	%eax, %eax
    00000e20: 	callq	__printf_chk@PLT # Offset: 3616
    00000e25: 	movl	iterations(%rip), %ecx
.Ltmp1761:
    00000e2b: 	addl	$0x1, %r14d
    00000e2f: 	cmpl	%ecx, %r14d
    00000e32: 	jl	.Ltmp1762 # Offset: 3634
.Ltmp1759:
    00000e34: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e42: 	subq	$0x20, %rax
    00000e46: 	cmpq	%rax, %rbx
    00000e49: 	je	.Ltmp1763 # Offset: 3657
    00000e4f: 	leaq	0x10(%rbx), %rdi
    00000e53: 	movq	0x78(%rsp), %r14
    00000e58: 	movq	%rdi, (%rbx)
    00000e5b: 	movq	0x70(%rsp), %r15
    00000e60: 	movq	%r15, %rax
    00000e63: 	addq	%r14, %rax
    00000e66: 	je	.Ltmp1764 # Offset: 3686
    00000e68: 	testq	%r15, %r15
    00000e6b: 	je	.Ltmp1765 # Offset: 3691
.Ltmp1764:
    00000e71: 	movq	%r14, 0x48(%rsp)
    00000e76: 	cmpq	$0xf, %r14
    00000e7a: 	ja	.Ltmp1766 # Offset: 3706
    00000e80: 	cmpq	$0x1, %r14
    00000e84: 	jne	.Ltmp1767 # Offset: 3716
    00000e8a: 	movzbl	(%r15), %eax
    00000e8e: 	movb	%al, 0x10(%rbx)
.Ltmp1838:
    00000e91: 	movq	%r14, 0x8(%rbx)
    00000e95: 	movb	$0x0, (%rdi,%r14)
    00000e9a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ea1: 	addq	$0x20, %rax
    00000ea5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1823:
    00000eac: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000eb3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eba: 	je	.Ltmp1768 # Offset: 3770
.Ltmp1821:
    00000ec0: 	movq	-0x20(%rax), %r14
    00000ec4: 	callq	clock@PLT # Offset: 3780
    00000ec9: 	pxor	%xmm0, %xmm0
    00000ecd: 	movq	%rax, end_time(%rip)
    00000ed4: 	movq	%r14, %rdi
    00000ed7: 	subq	start_time(%rip), %rax
    00000ede: 	cvtsi2sd	%rax, %xmm0
    00000ee3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000eeb: 	callq	_Z13record_resultdPKc # Offset: 3819
    00000ef0: 	movq	0x70(%rsp), %rdi
    00000ef5: 	cmpq	0x28(%rsp), %rdi
    00000efa: 	je	.Ltmp1769 # Offset: 3834
    00000efc: 	movq	0x80(%rsp), %rax
    00000f04: 	leaq	0x1(%rax), %rsi
    00000f08: 	callq	_ZdlPvm@PLT # Offset: 3848
.Ltmp1769:
    00000f0d: 	movq	0x28(%rsp), %rax
    00000f12: 	movq	0x50(%rsp), %r15
    00000f17: 	movq	0x58(%rsp), %r14
    00000f1c: 	movq	%rax, 0x70(%rsp)
    00000f21: 	movq	%r15, %rax
    00000f24: 	addq	%r14, %rax
    00000f27: 	je	.Ltmp1770 # Offset: 3879
    00000f29: 	testq	%r15, %r15
    00000f2c: 	je	.Ltmp1771 # Offset: 3884
.Ltmp1770:
    00000f32: 	movq	%r14, 0x48(%rsp)
    00000f37: 	cmpq	$0xf, %r14
    00000f3b: 	ja	.Ltmp1772 # Offset: 3899
    00000f41: 	cmpq	$0x1, %r14
    00000f45: 	jne	.Ltmp1773 # Offset: 3909
    00000f4b: 	movzbl	(%r15), %eax
    00000f4f: 	movb	%al, 0x80(%rsp)
    00000f56: 	movq	0x28(%rsp), %rax
.Ltmp1808:
    00000f5b: 	movq	%r14, 0x78(%rsp)
    00000f60: 	movb	$0x0, (%rax,%r14)
    00000f65: 	movabsq	$0x3fffffffffffffff, %rax
    00000f6f: 	subq	0x78(%rsp), %rax
    00000f74: 	cmpq	$0x15, %rax
    00000f78: 	jbe	.Ltmp1774 # Offset: 3960
    00000f7e: 	movq	0x30(%rsp), %rdi
    00000f83: 	movl	$0x16, %edx
    00000f88: 	leaq	DATAat0x3d244(%rip), %rsi
    00000f8f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3983
    00000f94: 	callq	clock@PLT # Offset: 3988
    00000f99: 	movl	iterations(%rip), %ecx
    00000f9f: 	movq	%rax, start_time(%rip)
    00000fa6: 	testl	%ecx, %ecx
    00000fa8: 	jle	.Ltmp1775 # Offset: 4008
    00000fae: 	movq	0x18(%rsp), %rax
    00000fb3: 	xorq	0x20(%rsp), %rax
    00000fb8: 	xorl	%r14d, %r14d
    00000fbb: 	leaq	0xfa00(%rbp), %rbx
    00000fc2: 	xorq	%r13, %rax
    00000fc5: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000fcc: 	xorq	%r12, %rax
    00000fcf: 	movq	%rax, %xmm4
    00000fd4: 	punpcklqdq	%xmm4, %xmm4
    00000fd8: 	movaps	%xmm4, (%rsp)
    00000fdc: 	nopl	(%rax) # Size: 4
.Ltmp1778:
    00000fe0: 	movq	%rbp, %rax
    00000fe3: 	pxor	%xmm1, %xmm1
    00000fe7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1776:
    00000ff0: 	movdqu	(%rax), %xmm0
    00000ff4: 	pxor	(%rsp), %xmm0
    00000ff9: 	addq	$0x10, %rax
    00000ffd: 	paddq	%xmm0, %xmm1
    00001001: 	cmpq	%rbx, %rax
    00001004: 	jne	.Ltmp1776 # Offset: 4100
    00001006: 	cvttsd2si	init_value(%rip), %rdx
    0000100f: 	xorq	0x20(%rsp), %rdx
    00001014: 	movdqa	%xmm1, %xmm0
    00001018: 	xorq	0x18(%rsp), %rdx
    0000101d: 	psrldq	$0x8, %xmm0
    00001022: 	xorq	%r13, %rdx
    00001025: 	paddq	%xmm0, %xmm1
    00001029: 	xorq	%r12, %rdx
    0000102c: 	movq	%xmm1, %rax
    00001031: 	imulq	$0x1f40, %rdx, %rdx
    00001038: 	cmpq	%rax, %rdx
    0000103b: 	je	.Ltmp1777 # Offset: 4155
    0000103d: 	movl	current_test(%rip), %edx
    00001043: 	movq	%r15, %rsi
    00001046: 	movl	$0x1, %edi
    0000104b: 	xorl	%eax, %eax
    0000104d: 	callq	__printf_chk@PLT # Offset: 4173
    00001052: 	movl	iterations(%rip), %ecx
.Ltmp1777:
    00001058: 	addl	$0x1, %r14d
    0000105c: 	cmpl	%ecx, %r14d
    0000105f: 	jl	.Ltmp1778 # Offset: 4191
.Ltmp1775:
    00001065: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000106c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001073: 	subq	$0x20, %rax
    00001077: 	cmpq	%rax, %rbx
    0000107a: 	je	.Ltmp1779 # Offset: 4218
    00001080: 	leaq	0x10(%rbx), %rdi
    00001084: 	movq	0x78(%rsp), %r14
    00001089: 	movq	%rdi, (%rbx)
    0000108c: 	movq	0x70(%rsp), %r15
    00001091: 	movq	%r15, %rax
    00001094: 	addq	%r14, %rax
    00001097: 	je	.Ltmp1780 # Offset: 4247
    00001099: 	testq	%r15, %r15
    0000109c: 	je	.Ltmp1781 # Offset: 4252
.Ltmp1780:
    000010a2: 	movq	%r14, 0x48(%rsp)
    000010a7: 	cmpq	$0xf, %r14
    000010ab: 	ja	.Ltmp1782 # Offset: 4267
    000010b1: 	cmpq	$0x1, %r14
    000010b5: 	jne	.Ltmp1783 # Offset: 4277
    000010bb: 	movzbl	(%r15), %eax
    000010bf: 	movb	%al, 0x10(%rbx)
.Ltmp1841:
    000010c2: 	movq	%r14, 0x8(%rbx)
    000010c6: 	movb	$0x0, (%rdi,%r14)
    000010cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010d9: 	addq	$0x20, %rax
    000010dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000010eb: 	je	.Ltmp1784 # Offset: 4331
.Ltmp1822:
    000010f1: 	movq	-0x20(%rax), %r14
    000010f5: 	callq	clock@PLT # Offset: 4341
    000010fa: 	pxor	%xmm0, %xmm0
    000010fe: 	movq	%rax, end_time(%rip)
    00001105: 	movq	%r14, %rdi
    00001108: 	subq	start_time(%rip), %rax
    0000110f: 	cvtsi2sd	%rax, %xmm0
    00001114: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000111c: 	callq	_Z13record_resultdPKc # Offset: 4380
    00001121: 	movq	0x70(%rsp), %rdi
    00001126: 	cmpq	0x28(%rsp), %rdi
    0000112b: 	je	.Ltmp1785 # Offset: 4395
    0000112d: 	movq	0x80(%rsp), %rax
    00001135: 	leaq	0x1(%rax), %rsi
    00001139: 	callq	_ZdlPvm@PLT # Offset: 4409
.Ltmp1785:
    0000113e: 	movq	0x28(%rsp), %rax
    00001143: 	movq	0x50(%rsp), %r15
    00001148: 	movq	0x58(%rsp), %r14
    0000114d: 	movq	%rax, 0x70(%rsp)
    00001152: 	movq	%r15, %rax
    00001155: 	addq	%r14, %rax
    00001158: 	je	.Ltmp1786 # Offset: 4440
    0000115a: 	testq	%r15, %r15
    0000115d: 	je	.Ltmp1787 # Offset: 4445
.Ltmp1786:
    00001163: 	movq	%r14, 0x48(%rsp)
    00001168: 	cmpq	$0xf, %r14
    0000116c: 	ja	.Ltmp1788 # Offset: 4460
    00001172: 	cmpq	$0x1, %r14
    00001176: 	jne	.Ltmp1789 # Offset: 4470
    0000117c: 	movzbl	(%r15), %eax
    00001180: 	movb	%al, 0x80(%rsp)
    00001187: 	movq	0x28(%rsp), %rax
.Ltmp1806:
    0000118c: 	movq	%r14, 0x78(%rsp)
    00001191: 	movb	$0x0, (%rax,%r14)
    00001196: 	movabsq	$0x3fffffffffffffff, %rax
    000011a0: 	subq	0x78(%rsp), %rax
    000011a5: 	cmpq	$0x16, %rax
    000011a9: 	jbe	.Ltmp1790 # Offset: 4521
    000011af: 	movq	0x30(%rsp), %rdi
    000011b4: 	movl	$0x17, %edx
    000011b9: 	leaq	DATAat0x3d25b(%rip), %rsi
    000011c0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4544
    000011c5: 	callq	clock@PLT # Offset: 4549
    000011ca: 	movl	iterations(%rip), %ecx
    000011d0: 	movq	%rax, start_time(%rip)
    000011d7: 	testl	%ecx, %ecx
    000011d9: 	jle	.Ltmp1791 # Offset: 4569
    000011df: 	movq	0x18(%rsp), %rax
    000011e4: 	xorq	0x20(%rsp), %rax
    000011e9: 	leaq	0xfa00(%rbp), %rbx
    000011f0: 	leaq	DATAat0x3d1d8(%rip), %r14
    000011f7: 	xorq	%r13, %rax
    000011fa: 	xorl	%r13d, %r13d
    000011fd: 	xorq	%rax, %r12
    00001200: 	movq	%r12, %xmm2
    00001205: 	punpcklqdq	%xmm2, %xmm2
    00001209: 	movaps	%xmm2, (%rsp)
    0000120d: 	nopl	(%rax) # Size: 3
.Ltmp1794:
    00001210: 	movq	%rbp, %rax
    00001213: 	pxor	%xmm1, %xmm1
    00001217: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1792:
    00001220: 	movdqu	(%rax), %xmm0
    00001224: 	pxor	(%rsp), %xmm0
    00001229: 	addq	$0x10, %rax
    0000122d: 	paddq	%xmm0, %xmm1
    00001231: 	cmpq	%rax, %rbx
    00001234: 	jne	.Ltmp1792 # Offset: 4660
    00001236: 	cvttsd2si	init_value(%rip), %rdx
    0000123f: 	movdqa	%xmm1, %xmm0
    00001243: 	psrldq	$0x8, %xmm0
    00001248: 	paddq	%xmm0, %xmm1
    0000124c: 	movq	%xmm1, %rax
    00001251: 	xorq	%r12, %rdx
    00001254: 	imulq	$0x1f40, %rdx, %rdx
    0000125b: 	cmpq	%rax, %rdx
    0000125e: 	je	.Ltmp1793 # Offset: 4702
    00001260: 	movl	current_test(%rip), %edx
    00001266: 	movq	%r14, %rsi
    00001269: 	movl	$0x1, %edi
    0000126e: 	xorl	%eax, %eax
    00001270: 	callq	__printf_chk@PLT # Offset: 4720
    00001275: 	movl	iterations(%rip), %ecx
.Ltmp1793:
    0000127b: 	addl	$0x1, %r13d
    0000127f: 	cmpl	%ecx, %r13d
    00001282: 	jl	.Ltmp1794 # Offset: 4738
.Ltmp1791:
    00001284: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000128b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001292: 	subq	$0x20, %rax
    00001296: 	cmpq	%rax, %rbx
    00001299: 	je	.Ltmp1795 # Offset: 4761
    0000129f: 	leaq	0x10(%rbx), %rdi
    000012a3: 	movq	0x78(%rsp), %r12
    000012a8: 	movq	%rdi, (%rbx)
    000012ab: 	movq	0x70(%rsp), %rbp
    000012b0: 	movq	%rbp, %rax
    000012b3: 	addq	%r12, %rax
    000012b6: 	je	.Ltmp1796 # Offset: 4790
    000012b8: 	testq	%rbp, %rbp
    000012bb: 	je	.Ltmp1797 # Offset: 4795
.Ltmp1796:
    000012c1: 	movq	%r12, 0x48(%rsp)
    000012c6: 	cmpq	$0xf, %r12
    000012ca: 	ja	.Ltmp1798 # Offset: 4810
    000012d0: 	cmpq	$0x1, %r12
    000012d4: 	jne	.Ltmp1799 # Offset: 4820
    000012da: 	movzbl	(%rbp), %eax
    000012de: 	movb	%al, 0x10(%rbx)
.Ltmp1843:
    000012e1: 	movq	%r12, 0x8(%rbx)
    000012e5: 	movb	$0x0, (%rdi,%r12)
    000012ea: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012f1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012f8: 	addq	$0x20, %rax
    000012fc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001303: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000130a: 	je	.Ltmp1800 # Offset: 4874
.Ltmp1825:
    00001310: 	movq	-0x20(%rax), %rbp
    00001314: 	callq	clock@PLT # Offset: 4884
    00001319: 	pxor	%xmm0, %xmm0
    0000131d: 	movq	%rax, end_time(%rip)
    00001324: 	movq	%rbp, %rdi
    00001327: 	subq	start_time(%rip), %rax
    0000132e: 	cvtsi2sd	%rax, %xmm0
    00001333: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000133b: 	callq	_Z13record_resultdPKc # Offset: 4923
    00001340: 	movq	0x70(%rsp), %rdi
    00001345: 	cmpq	0x28(%rsp), %rdi
    0000134a: 	je	.Ltmp1801 # Offset: 4938
    0000134c: 	movq	0x80(%rsp), %rax
    00001354: 	leaq	0x1(%rax), %rsi
    00001358: 	callq	_ZdlPvm@PLT # Offset: 4952
.Ltmp1801:
    0000135d: 	movq	0x50(%rsp), %rdi
    00001362: 	cmpq	0x38(%rsp), %rdi
    00001367: 	je	.Ltmp1802 # Offset: 4967
    00001369: 	movq	0x60(%rsp), %rax
    0000136e: 	leaq	0x1(%rax), %rsi
    00001372: 	callq	_ZdlPvm@PLT # Offset: 4978
.Ltmp1802:
    00001377: 	movq	0x98(%rsp), %rax
    0000137f: 	subq	%fs:0x28, %rax
    00001388: 	jne	.Ltmp1803 # Offset: 5000
    0000138e: 	addq	$0xa8, %rsp
    00001395: 	popq	%rbx
    00001396: 	popq	%rbp
    00001397: 	popq	%r12
    00001399: 	popq	%r13
    0000139b: 	popq	%r14
    0000139d: 	popq	%r15
    0000139f: 	retq # Offset: 5023
.Ltmp1670:
    000013a0: 	leaq	0x48(%rsp), %rsi
    000013a5: 	xorl	%edx, %edx
    000013a7: 	movq	%rbx, %rdi
    000013aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5034
    000013af: 	movq	%rax, (%rbx)
    000013b2: 	movq	%rax, %rdi
    000013b5: 	movq	0x48(%rsp), %rax
    000013ba: 	movq	%rax, 0x10(%rbx)
.Ltmp1834:
    000013be: 	movq	%r14, %rdx
    000013c1: 	movq	%r15, %rsi
    000013c4: 	callq	memcpy@PLT # Offset: 5060
    000013c9: 	movq	0x48(%rsp), %r14
    000013ce: 	movq	(%rbx), %rdi
    000013d1: 	jmp	.Ltmp1804 # Offset: 5073
.Ltmp1789:
    000013d6: 	testq	%r14, %r14
    000013d9: 	jne	.Ltmp1805 # Offset: 5081
    000013df: 	movq	0x28(%rsp), %rax
    000013e4: 	jmp	.Ltmp1806 # Offset: 5092
.Ltmp1773:
    000013e9: 	testq	%r14, %r14
    000013ec: 	jne	.Ltmp1807 # Offset: 5100
    000013f2: 	movq	0x28(%rsp), %rax
    000013f7: 	jmp	.Ltmp1808 # Offset: 5111
.Ltmp1757:
    000013fc: 	testq	%r14, %r14
    000013ff: 	jne	.Ltmp1809 # Offset: 5119
    00001405: 	movq	0x28(%rsp), %rax
    0000140a: 	jmp	.Ltmp1810 # Offset: 5130
.Ltmp1741:
    0000140f: 	testq	%r14, %r14
    00001412: 	jne	.Ltmp1811 # Offset: 5138
    00001418: 	movq	0x28(%rsp), %rax
    0000141d: 	jmp	.Ltmp1812 # Offset: 5149
.Ltmp1693:
    00001422: 	testq	%r14, %r14
    00001425: 	jne	.Ltmp1813 # Offset: 5157
    0000142b: 	movq	0x28(%rsp), %rax
    00001430: 	jmp	.Ltmp1814 # Offset: 5168
.Ltmp1677:
    00001435: 	testq	%r14, %r14
    00001438: 	jne	.Ltmp1815 # Offset: 5176
    0000143e: 	movq	0x28(%rsp), %rax
    00001443: 	jmp	.Ltmp1816 # Offset: 5187
.Ltmp1725:
    00001448: 	testq	%r14, %r14
    0000144b: 	jne	.Ltmp1817 # Offset: 5195
    00001451: 	movq	0x28(%rsp), %rax
    00001456: 	jmp	.Ltmp1818 # Offset: 5206
.Ltmp1709:
    0000145b: 	testq	%r14, %r14
    0000145e: 	jne	.Ltmp1819 # Offset: 5214
    00001464: 	movq	0x28(%rsp), %rax
    00001469: 	jmp	.Ltmp1820 # Offset: 5225
.Ltmp1692:
    0000146e: 	movq	0x30(%rsp), %rdi
    00001473: 	leaq	0x48(%rsp), %rsi
    00001478: 	xorl	%edx, %edx
    0000147a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5242
    0000147f: 	movq	%rax, 0x70(%rsp)
    00001484: 	movq	%rax, %rdi
    00001487: 	movq	0x48(%rsp), %rax
    0000148c: 	movq	%rax, 0x80(%rsp)
.Ltmp1855:
    00001494: 	movq	%r14, %rdx
    00001497: 	movq	%r15, %rsi
    0000149a: 	callq	memcpy@PLT # Offset: 5274
    0000149f: 	movq	0x48(%rsp), %r14
    000014a4: 	movq	0x70(%rsp), %rax
    000014a9: 	jmp	.Ltmp1814 # Offset: 5289
.Ltmp1676:
    000014ae: 	movq	0x30(%rsp), %rdi
    000014b3: 	leaq	0x48(%rsp), %rsi
    000014b8: 	xorl	%edx, %edx
    000014ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5306
    000014bf: 	movq	%rax, 0x70(%rsp)
    000014c4: 	movq	%rax, %rdi
    000014c7: 	movq	0x48(%rsp), %rax
    000014cc: 	movq	%rax, 0x80(%rsp)
.Ltmp1856:
    000014d4: 	movq	%r14, %rdx
    000014d7: 	movq	%r15, %rsi
    000014da: 	callq	memcpy@PLT # Offset: 5338
    000014df: 	movq	0x48(%rsp), %r14
    000014e4: 	movq	0x70(%rsp), %rax
    000014e9: 	jmp	.Ltmp1816 # Offset: 5353
.Ltmp1708:
    000014ee: 	movq	0x30(%rsp), %rdi
    000014f3: 	leaq	0x48(%rsp), %rsi
    000014f8: 	xorl	%edx, %edx
    000014fa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5370
    000014ff: 	movq	%rax, 0x70(%rsp)
    00001504: 	movq	%rax, %rdi
    00001507: 	movq	0x48(%rsp), %rax
    0000150c: 	movq	%rax, 0x80(%rsp)
.Ltmp1858:
    00001514: 	movq	%r14, %rdx
    00001517: 	movq	%r15, %rsi
    0000151a: 	callq	memcpy@PLT # Offset: 5402
    0000151f: 	movq	0x48(%rsp), %r14
    00001524: 	movq	0x70(%rsp), %rax
    00001529: 	jmp	.Ltmp1820 # Offset: 5417
.Ltmp1724:
    0000152e: 	movq	0x30(%rsp), %rdi
    00001533: 	leaq	0x48(%rsp), %rsi
    00001538: 	xorl	%edx, %edx
    0000153a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5434
    0000153f: 	movq	%rax, 0x70(%rsp)
    00001544: 	movq	%rax, %rdi
    00001547: 	movq	0x48(%rsp), %rax
    0000154c: 	movq	%rax, 0x80(%rsp)
.Ltmp1857:
    00001554: 	movq	%r14, %rdx
    00001557: 	movq	%r15, %rsi
    0000155a: 	callq	memcpy@PLT # Offset: 5466
    0000155f: 	movq	0x48(%rsp), %r14
    00001564: 	movq	0x70(%rsp), %rax
    00001569: 	jmp	.Ltmp1818 # Offset: 5481
.Ltmp1740:
    0000156e: 	movq	0x30(%rsp), %rdi
    00001573: 	leaq	0x48(%rsp), %rsi
    00001578: 	xorl	%edx, %edx
    0000157a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5498
    0000157f: 	movq	%rax, 0x70(%rsp)
    00001584: 	movq	%rax, %rdi
    00001587: 	movq	0x48(%rsp), %rax
    0000158c: 	movq	%rax, 0x80(%rsp)
.Ltmp1854:
    00001594: 	movq	%r14, %rdx
    00001597: 	movq	%r15, %rsi
    0000159a: 	callq	memcpy@PLT # Offset: 5530
    0000159f: 	movq	0x48(%rsp), %r14
    000015a4: 	movq	0x70(%rsp), %rax
    000015a9: 	jmp	.Ltmp1812 # Offset: 5545
.Ltmp1756:
    000015ae: 	movq	0x30(%rsp), %rdi
    000015b3: 	leaq	0x48(%rsp), %rsi
    000015b8: 	xorl	%edx, %edx
    000015ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5562
    000015bf: 	movq	%rax, 0x70(%rsp)
    000015c4: 	movq	%rax, %rdi
    000015c7: 	movq	0x48(%rsp), %rax
    000015cc: 	movq	%rax, 0x80(%rsp)
.Ltmp1853:
    000015d4: 	movq	%r14, %rdx
    000015d7: 	movq	%r15, %rsi
    000015da: 	callq	memcpy@PLT # Offset: 5594
    000015df: 	movq	0x48(%rsp), %r14
    000015e4: 	movq	0x70(%rsp), %rax
    000015e9: 	jmp	.Ltmp1810 # Offset: 5609
.Ltmp1788:
    000015ee: 	movq	0x30(%rsp), %rdi
    000015f3: 	leaq	0x48(%rsp), %rsi
    000015f8: 	xorl	%edx, %edx
    000015fa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5626
    000015ff: 	movq	%rax, 0x70(%rsp)
    00001604: 	movq	%rax, %rdi
    00001607: 	movq	0x48(%rsp), %rax
    0000160c: 	movq	%rax, 0x80(%rsp)
.Ltmp1851:
    00001614: 	movq	%r14, %rdx
    00001617: 	movq	%r15, %rsi
    0000161a: 	callq	memcpy@PLT # Offset: 5658
    0000161f: 	movq	0x48(%rsp), %r14
    00001624: 	movq	0x70(%rsp), %rax
    00001629: 	jmp	.Ltmp1806 # Offset: 5673
.Ltmp1772:
    0000162e: 	movq	0x30(%rsp), %rdi
    00001633: 	leaq	0x48(%rsp), %rsi
    00001638: 	xorl	%edx, %edx
    0000163a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5690
    0000163f: 	movq	%rax, 0x70(%rsp)
    00001644: 	movq	%rax, %rdi
    00001647: 	movq	0x48(%rsp), %rax
    0000164c: 	movq	%rax, 0x80(%rsp)
.Ltmp1852:
    00001654: 	movq	%r14, %rdx
    00001657: 	movq	%r15, %rsi
    0000165a: 	callq	memcpy@PLT # Offset: 5722
    0000165f: 	movq	0x48(%rsp), %r14
    00001664: 	movq	0x70(%rsp), %rax
    00001669: 	jmp	.Ltmp1808 # Offset: 5737
.Ltmp1768:
    0000166e: 	movq	-0x8(%rdx), %rax
    00001672: 	addq	$0x200, %rax
    00001678: 	jmp	.Ltmp1821 # Offset: 5752
.Ltmp1779:
    0000167d: 	movq	0x30(%rsp), %rsi
    00001682: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001689: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5769
    0000168e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001695: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000169c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016a3: 	jne	.Ltmp1822 # Offset: 5795
.Ltmp1784:
    000016a9: 	movq	-0x8(%rdx), %rax
    000016ad: 	addq	$0x200, %rax
    000016b3: 	jmp	.Ltmp1822 # Offset: 5811
.Ltmp1763:
    000016b8: 	movq	0x30(%rsp), %rsi
    000016bd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016c4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5828
    000016c9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016d0: 	jmp	.Ltmp1823 # Offset: 5840
.Ltmp1752:
    000016d5: 	movq	-0x8(%rdx), %rax
    000016d9: 	addq	$0x200, %rax
    000016df: 	jmp	.Ltmp1824 # Offset: 5855
.Ltmp1795:
    000016e4: 	movq	0x30(%rsp), %rsi
    000016e9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5872
    000016f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016fc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001703: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000170a: 	jne	.Ltmp1825 # Offset: 5898
.Ltmp1800:
    00001710: 	movq	-0x8(%rdx), %rax
    00001714: 	addq	$0x200, %rax
    0000171a: 	jmp	.Ltmp1825 # Offset: 5914
.Ltmp1715:
    0000171f: 	movq	0x30(%rsp), %rsi
    00001724: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000172b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5931
    00001730: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001737: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000173e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001745: 	jne	.Ltmp1826 # Offset: 5957
.Ltmp1720:
    0000174b: 	movq	-0x8(%rdx), %rax
    0000174f: 	addq	$0x200, %rax
    00001755: 	jmp	.Ltmp1826 # Offset: 5973
.Ltmp1688:
    0000175a: 	movq	-0x8(%rdx), %rax
    0000175e: 	addq	$0x200, %rax
    00001764: 	jmp	.Ltmp1827 # Offset: 5988
.Ltmp1747:
    00001769: 	movq	0x30(%rsp), %rsi
    0000176e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001775: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6005
    0000177a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001781: 	jmp	.Ltmp1828 # Offset: 6017
.Ltmp1699:
    00001786: 	movq	0x30(%rsp), %rsi
    0000178b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001792: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6034
    00001797: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000179e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017a5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ac: 	jne	.Ltmp1829 # Offset: 6060
.Ltmp1704:
    000017b2: 	movq	-0x8(%rdx), %rax
    000017b6: 	addq	$0x200, %rax
    000017bc: 	jmp	.Ltmp1829 # Offset: 6076
.Ltmp1667:
    000017c1: 	movq	0x30(%rsp), %rsi
    000017c6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6093
    000017d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017d9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017e0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017e7: 	jne	.Ltmp1830 # Offset: 6119
.Ltmp1672:
    000017ed: 	movq	-0x8(%rdx), %rax
    000017f1: 	addq	$0x200, %rax
    000017f7: 	jmp	.Ltmp1830 # Offset: 6135
.Ltmp1736:
    000017fc: 	movq	-0x8(%rdx), %rax
    00001800: 	addq	$0x200, %rax
    00001806: 	jmp	.Ltmp1831 # Offset: 6150
.Ltmp1683:
    0000180b: 	movq	0x30(%rsp), %rsi
    00001810: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001817: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6167
    0000181c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001823: 	jmp	.Ltmp1832 # Offset: 6179
.Ltmp1731:
    00001828: 	movq	0x30(%rsp), %rsi
    0000182d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001834: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6196
    00001839: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001840: 	jmp	.Ltmp1833 # Offset: 6208
.Ltmp1671:
    00001845: 	testq	%r14, %r14
    00001848: 	je	.Ltmp1804 # Offset: 6216
    0000184e: 	jmp	.Ltmp1834 # Offset: 6222
    00001853: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1703:
    00001858: 	testq	%r14, %r14
    0000185b: 	je	.Ltmp1835 # Offset: 6235
    00001861: 	jmp	.Ltmp1836 # Offset: 6241
    00001866: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1735:
    00001870: 	testq	%r14, %r14
    00001873: 	je	.Ltmp1837 # Offset: 6259
.Ltmp1847:
    00001879: 	movq	%r14, %rdx
    0000187c: 	movq	%r15, %rsi
    0000187f: 	callq	memcpy@PLT # Offset: 6271
    00001884: 	movq	0x48(%rsp), %r14
    00001889: 	movq	(%rbx), %rdi
    0000188c: 	jmp	.Ltmp1837 # Offset: 6284
.Ltmp1767:
    00001891: 	testq	%r14, %r14
    00001894: 	je	.Ltmp1838 # Offset: 6292
    0000189a: 	jmp	.Ltmp1839 # Offset: 6298
    0000189f: 	nop # Size: 1
.Ltmp1687:
    000018a0: 	testq	%r14, %r14
    000018a3: 	je	.Ltmp1840 # Offset: 6307
.Ltmp1849:
    000018a9: 	movq	%r14, %rdx
    000018ac: 	movq	%r15, %rsi
    000018af: 	callq	memcpy@PLT # Offset: 6319
    000018b4: 	movq	0x48(%rsp), %r14
    000018b9: 	movq	(%rbx), %rdi
    000018bc: 	jmp	.Ltmp1840 # Offset: 6332
.Ltmp1783:
    000018c1: 	testq	%r14, %r14
    000018c4: 	je	.Ltmp1841 # Offset: 6340
    000018ca: 	jmp	.Ltmp1842 # Offset: 6346
    000018cf: 	nop # Size: 1
.Ltmp1799:
    000018d0: 	testq	%r12, %r12
    000018d3: 	je	.Ltmp1843 # Offset: 6355
.Ltmp1848:
    000018d9: 	movq	%r12, %rdx
    000018dc: 	movq	%rbp, %rsi
    000018df: 	callq	memcpy@PLT # Offset: 6367
    000018e4: 	movq	0x48(%rsp), %r12
    000018e9: 	movq	(%rbx), %rdi
    000018ec: 	jmp	.Ltmp1843 # Offset: 6380
.Ltmp1751:
    000018f1: 	testq	%r14, %r14
    000018f4: 	je	.Ltmp1844 # Offset: 6388
    000018fa: 	jmp	.Ltmp1845 # Offset: 6394
    000018ff: 	nop # Size: 1
.Ltmp1719:
    00001900: 	testq	%r14, %r14
    00001903: 	je	.Ltmp1846 # Offset: 6403
.Ltmp1850:
    00001909: 	movq	%r14, %rdx
    0000190c: 	movq	%r15, %rsi
    0000190f: 	callq	memcpy@PLT # Offset: 6415
    00001914: 	movq	0x48(%rsp), %r14
    00001919: 	movq	(%rbx), %rdi
    0000191c: 	jmp	.Ltmp1846 # Offset: 6428
.Ltmp1702:
    00001921: 	leaq	0x48(%rsp), %rsi
    00001926: 	xorl	%edx, %edx
    00001928: 	movq	%rbx, %rdi
    0000192b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6443
    00001930: 	movq	%rax, (%rbx)
    00001933: 	movq	%rax, %rdi
    00001936: 	movq	0x48(%rsp), %rax
    0000193b: 	movq	%rax, 0x10(%rbx)
.Ltmp1836:
    0000193f: 	movq	%r14, %rdx
    00001942: 	movq	%r15, %rsi
    00001945: 	callq	memcpy@PLT # Offset: 6469
    0000194a: 	movq	0x48(%rsp), %r14
    0000194f: 	movq	(%rbx), %rdi
    00001952: 	jmp	.Ltmp1835 # Offset: 6482
.Ltmp1766:
    00001957: 	leaq	0x48(%rsp), %rsi
    0000195c: 	xorl	%edx, %edx
    0000195e: 	movq	%rbx, %rdi
    00001961: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6497
    00001966: 	movq	%rax, (%rbx)
    00001969: 	movq	%rax, %rdi
    0000196c: 	movq	0x48(%rsp), %rax
    00001971: 	movq	%rax, 0x10(%rbx)
.Ltmp1839:
    00001975: 	movq	%r14, %rdx
    00001978: 	movq	%r15, %rsi
    0000197b: 	callq	memcpy@PLT # Offset: 6523
    00001980: 	movq	0x48(%rsp), %r14
    00001985: 	movq	(%rbx), %rdi
    00001988: 	jmp	.Ltmp1838 # Offset: 6536
.Ltmp1734:
    0000198d: 	leaq	0x48(%rsp), %rsi
    00001992: 	xorl	%edx, %edx
    00001994: 	movq	%rbx, %rdi
    00001997: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6551
    0000199c: 	movq	%rax, (%rbx)
    0000199f: 	movq	%rax, %rdi
    000019a2: 	movq	0x48(%rsp), %rax
    000019a7: 	movq	%rax, 0x10(%rbx)
    000019ab: 	jmp	.Ltmp1847 # Offset: 6571
.Ltmp1782:
    000019b0: 	leaq	0x48(%rsp), %rsi
    000019b5: 	xorl	%edx, %edx
    000019b7: 	movq	%rbx, %rdi
    000019ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6586
    000019bf: 	movq	%rax, (%rbx)
    000019c2: 	movq	%rax, %rdi
    000019c5: 	movq	0x48(%rsp), %rax
    000019ca: 	movq	%rax, 0x10(%rbx)
.Ltmp1842:
    000019ce: 	movq	%r14, %rdx
    000019d1: 	movq	%r15, %rsi
    000019d4: 	callq	memcpy@PLT # Offset: 6612
    000019d9: 	movq	0x48(%rsp), %r14
    000019de: 	movq	(%rbx), %rdi
    000019e1: 	jmp	.Ltmp1841 # Offset: 6625
.Ltmp1750:
    000019e6: 	leaq	0x48(%rsp), %rsi
    000019eb: 	xorl	%edx, %edx
    000019ed: 	movq	%rbx, %rdi
    000019f0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6640
    000019f5: 	movq	%rax, (%rbx)
    000019f8: 	movq	%rax, %rdi
    000019fb: 	movq	0x48(%rsp), %rax
    00001a00: 	movq	%rax, 0x10(%rbx)
.Ltmp1845:
    00001a04: 	movq	%r14, %rdx
    00001a07: 	movq	%r15, %rsi
    00001a0a: 	callq	memcpy@PLT # Offset: 6666
    00001a0f: 	movq	0x48(%rsp), %r14
    00001a14: 	movq	(%rbx), %rdi
    00001a17: 	jmp	.Ltmp1844 # Offset: 6679
.Ltmp1798:
    00001a1c: 	leaq	0x48(%rsp), %rsi
    00001a21: 	xorl	%edx, %edx
    00001a23: 	movq	%rbx, %rdi
    00001a26: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6694
    00001a2b: 	movq	%rax, (%rbx)
    00001a2e: 	movq	%rax, %rdi
    00001a31: 	movq	0x48(%rsp), %rax
    00001a36: 	movq	%rax, 0x10(%rbx)
    00001a3a: 	jmp	.Ltmp1848 # Offset: 6714
.Ltmp1686:
    00001a3f: 	leaq	0x48(%rsp), %rsi
    00001a44: 	xorl	%edx, %edx
    00001a46: 	movq	%rbx, %rdi
    00001a49: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6729
    00001a4e: 	movq	%rax, (%rbx)
    00001a51: 	movq	%rax, %rdi
    00001a54: 	movq	0x48(%rsp), %rax
    00001a59: 	movq	%rax, 0x10(%rbx)
    00001a5d: 	jmp	.Ltmp1849 # Offset: 6749
.Ltmp1718:
    00001a62: 	leaq	0x48(%rsp), %rsi
    00001a67: 	xorl	%edx, %edx
    00001a69: 	movq	%rbx, %rdi
    00001a6c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6764
    00001a71: 	movq	%rax, (%rbx)
    00001a74: 	movq	%rax, %rdi
    00001a77: 	movq	0x48(%rsp), %rax
    00001a7c: 	movq	%rax, 0x10(%rbx)
    00001a80: 	jmp	.Ltmp1850 # Offset: 6784
.Ltmp1675:
    00001a85: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a8c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6796
.Ltmp1678:
    00001a91: 	leaq	DATAat0x3d182(%rip), %rdi
    00001a98: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6808
.Ltmp1685:
    00001a9d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001aa4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6820
.Ltmp1691:
    00001aa9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ab0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6832
.Ltmp1694:
    00001ab5: 	leaq	DATAat0x3d182(%rip), %rdi
    00001abc: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6844
.Ltmp1701:
    00001ac1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ac8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6856
.Ltmp1707:
    00001acd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ad4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6868
.Ltmp1710:
    00001ad9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ae0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6880
.Ltmp1717:
    00001ae5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001aec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6892
.Ltmp1723:
    00001af1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001af8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6904
.Ltmp1726:
    00001afd: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b04: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6916
.Ltmp1733:
    00001b09: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b10: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6928
.Ltmp1739:
    00001b15: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b1c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6940
.Ltmp1742:
    00001b21: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b28: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6952
.Ltmp1749:
    00001b2d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b34: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6964
.Ltmp1755:
    00001b39: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b40: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6976
.Ltmp1758:
    00001b45: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b4c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6988
.Ltmp1765:
    00001b51: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b58: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7000
.Ltmp1771:
    00001b5d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b64: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7012
.Ltmp1774:
    00001b69: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b70: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7024
.Ltmp1781:
    00001b75: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b7c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7036
.Ltmp1787:
    00001b81: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b88: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7048
.Ltmp1790:
    00001b8d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b94: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7060
.Ltmp1797:
    00001b99: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ba0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7072
.Ltmp1803:
    00001ba5: 	callq	__stack_chk_fail@PLT # Offset: 7077
.Ltmp1669:
    00001baa: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bb1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7089
.Ltmp1805:
    00001bb6: 	movq	0x28(%rsp), %rdi
    00001bbb: 	jmp	.Ltmp1851 # Offset: 7099
.Ltmp1807:
    00001bc0: 	movq	0x28(%rsp), %rdi
    00001bc5: 	jmp	.Ltmp1852 # Offset: 7109
.Ltmp1809:
    00001bca: 	movq	0x28(%rsp), %rdi
    00001bcf: 	jmp	.Ltmp1853 # Offset: 7119
.Ltmp1811:
    00001bd4: 	movq	0x28(%rsp), %rdi
    00001bd9: 	jmp	.Ltmp1854 # Offset: 7129
.Ltmp1813:
    00001bde: 	movq	0x28(%rsp), %rdi
    00001be3: 	jmp	.Ltmp1855 # Offset: 7139
.Ltmp1815:
    00001be8: 	movq	0x28(%rsp), %rdi
    00001bed: 	jmp	.Ltmp1856 # Offset: 7149
.Ltmp1817:
    00001bf2: 	movq	0x28(%rsp), %rdi
    00001bf7: 	jmp	.Ltmp1857 # Offset: 7159
.Ltmp1819:
    00001bfc: 	movq	0x28(%rsp), %rdi
    00001c01: 	jmp	.Ltmp1858 # Offset: 7169
    00001c06: 	endbr64
.Ltmp1860:
    00001c0a: 	movq	%rax, %rbp
    00001c0d: 	jmp	.Ltmp1859 # Offset: 7181
    00001c0f: 	endbr64
    00001c13: 	jmp	.Ltmp1860 # Offset: 7187
    00001c15: 	endbr64
    00001c19: 	jmp	.Ltmp1860 # Offset: 7193
    00001c1b: 	endbr64
    00001c1f: 	jmp	.Ltmp1860 # Offset: 7199
    00001c21: 	endbr64
    00001c25: 	jmp	.Ltmp1860 # Offset: 7205
    00001c27: 	endbr64
    00001c2b: 	jmp	.Ltmp1860 # Offset: 7211
    00001c2d: 	endbr64
    00001c31: 	jmp	.Ltmp1860 # Offset: 7217
    00001c33: 	endbr64
    00001c37: 	movq	%rax, %rbp
    00001c3a: 	jmp	.Ltmp1861 # Offset: 7226
    00001c3c: 	endbr64
    00001c40: 	jmp	.Ltmp1860 # Offset: 7232
    00001c42: 	endbr64
    00001c46: 	jmp	.Ltmp1860 # Offset: 7238
    00001c48: 	endbr64
    00001c4c: 	jmp	.Ltmp1860 # Offset: 7244
    00001c4e: 	endbr64
    00001c52: 	jmp	.Ltmp1860 # Offset: 7250
.Ltmp1859:
    00001c54: 	movq	0x70(%rsp), %rdi
    00001c59: 	cmpq	0x28(%rsp), %rdi
    00001c5e: 	je	.Ltmp1861 # Offset: 7262
    00001c60: 	movq	0x80(%rsp), %rax
    00001c68: 	leaq	0x1(%rax), %rsi
    00001c6c: 	callq	_ZdlPvm@PLT # Offset: 7276
.Ltmp1861:
    00001c71: 	movq	0x50(%rsp), %rdi
    00001c76: 	cmpq	0x38(%rsp), %rdi
    00001c7b: 	je	.Ltmp1862 # Offset: 7291
    00001c7d: 	movq	0x60(%rsp), %rax
    00001c82: 	leaq	0x1(%rax), %rsi
    00001c86: 	callq	_ZdlPvm@PLT # Offset: 7302
.Ltmp1862:
    00001c8b: 	movq	%rbp, %rdi
    00001c8e: 	callq	_Unwind_Resume@PLT # Offset: 7310
    00001c93: 	endbr64
    00001c97: 	jmp	.Ltmp1860 # Offset: 7319
    00001c9c: 	endbr64
    00001ca0: 	jmp	.Ltmp1860 # Offset: 7328
    00001ca5: 	endbr64
    00001ca9: 	jmp	.Ltmp1860 # Offset: 7337
    00001cae: 	endbr64
    00001cb2: 	jmp	.Ltmp1860 # Offset: 7346
    00001cb7: 	endbr64
    00001cbb: 	jmp	.Ltmp1860 # Offset: 7355
    00001cc0: 	endbr64
    00001cc4: 	jmp	.Ltmp1860 # Offset: 7364
    00001cc9: 	endbr64
    00001ccd: 	jmp	.Ltmp1860 # Offset: 7373
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIlENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyIjENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 145
  State       : disassembled
  Address     : 0x13e80
  Size        : 0x1c9f
  MaxSize     : 0x1ca0
  Offset      : 0x13e80
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyIjENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0144:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%edx, %r13d
    0000000d: 	movl	$0xd, %edx
    00000012: 	pushq	%r12
    00000014: 	movl	%esi, %r12d
    00000017: 	pushq	%rbp
    00000018: 	movq	%rdi, %rbp
    0000001b: 	pushq	%rbx
    0000001c: 	subq	$0x98, %rsp
    00000023: 	movl	%ecx, 0x10(%rsp)
    00000027: 	leaq	0x70(%rsp), %rsi
    0000002c: 	leaq	0x60(%rsp), %rdi
    00000031: 	movl	%r8d, 0x14(%rsp)
    00000036: 	movq	%fs:0x28, %rax
    0000003f: 	movq	%rax, 0x88(%rsp)
    00000047: 	xorl	%eax, %eax
    00000049: 	leaq	0x50(%rsp), %rax
    0000004e: 	movq	%rsi, 0x18(%rsp)
    00000053: 	movq	%rax, 0x28(%rsp)
    00000058: 	movq	%rax, 0x40(%rsp)
    0000005d: 	movabsq	$0x745f3233746e6975, %rax
    00000067: 	movq	%rsi, 0x60(%rsp)
    0000006c: 	leaq	DATAat0x3d1f1(%rip), %rsi
    00000073: 	movq	%rax, 0x50(%rsp)
    00000078: 	movq	$0x8, 0x48(%rsp)
    00000081: 	movb	$0x0, 0x58(%rsp)
    00000086: 	movq	%rdi, 0x20(%rsp)
    0000008b: 	movq	%rax, 0x70(%rsp)
    00000090: 	movq	$0x8, 0x68(%rsp)
    00000099: 	movb	$0x0, 0x78(%rsp)
    0000009e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 158
    000000a3: 	callq	clock@PLT # Offset: 163
    000000a8: 	movd	%r12d, %xmm4
    000000ad: 	movl	iterations(%rip), %ecx
    000000b3: 	xorl	%r14d, %r14d
    000000b6: 	pshufd	$0x0, %xmm4, %xmm3
    000000bb: 	movq	%rax, start_time(%rip)
    000000c2: 	leaq	0x7d00(%rbp), %rbx
    000000c9: 	leaq	DATAat0x3d1d8(%rip), %r15
    000000d0: 	movaps	%xmm3, (%rsp)
    000000d4: 	testl	%ecx, %ecx
    000000d6: 	jle	.Ltmp1863 # Offset: 214
    000000dc: 	nopl	(%rax) # Size: 4
.Ltmp1866:
    000000e0: 	movq	%rbp, %rax
    000000e3: 	pxor	%xmm1, %xmm1
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1864:
    000000f0: 	movdqu	(%rax), %xmm0
    000000f4: 	pand	(%rsp), %xmm0
    000000f9: 	addq	$0x10, %rax
    000000fd: 	paddd	%xmm0, %xmm1
    00000101: 	cmpq	%rax, %rbx
    00000104: 	jne	.Ltmp1864 # Offset: 260
    00000106: 	cvttsd2si	init_value(%rip), %rdx
    0000010f: 	movdqa	%xmm1, %xmm0
    00000113: 	psrldq	$0x8, %xmm0
    00000118: 	paddd	%xmm0, %xmm1
    0000011c: 	movdqa	%xmm1, %xmm0
    00000120: 	andl	%r12d, %edx
    00000123: 	psrldq	$0x4, %xmm0
    00000128: 	imull	$0x1f40, %edx, %edx
    0000012e: 	paddd	%xmm0, %xmm1
    00000132: 	movd	%xmm1, %eax
    00000136: 	cmpl	%eax, %edx
    00000138: 	je	.Ltmp1865 # Offset: 312
    0000013a: 	movl	current_test(%rip), %edx
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	xorl	%eax, %eax
    0000014a: 	callq	__printf_chk@PLT # Offset: 330
    0000014f: 	movl	iterations(%rip), %ecx
.Ltmp1865:
    00000155: 	addl	$0x1, %r14d
    00000159: 	cmpl	%ecx, %r14d
    0000015c: 	jl	.Ltmp1866 # Offset: 348
.Ltmp1863:
    0000015e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000165: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000016c: 	subq	$0x20, %rax
    00000170: 	cmpq	%rax, %rbx
    00000173: 	je	.Ltmp1867 # Offset: 371
    00000179: 	leaq	0x10(%rbx), %rdi
    0000017d: 	movq	0x68(%rsp), %r14
    00000182: 	movq	%rdi, (%rbx)
    00000185: 	movq	0x60(%rsp), %r15
    0000018a: 	movq	%r15, %rax
    0000018d: 	addq	%r14, %rax
    00000190: 	je	.Ltmp1868 # Offset: 400
    00000192: 	testq	%r15, %r15
    00000195: 	je	.Ltmp1869 # Offset: 405
.Ltmp1868:
    0000019b: 	movq	%r14, 0x38(%rsp)
    000001a0: 	cmpq	$0xf, %r14
    000001a4: 	ja	.Ltmp1870 # Offset: 420
    000001aa: 	cmpq	$0x1, %r14
    000001ae: 	jne	.Ltmp1871 # Offset: 430
    000001b4: 	movzbl	(%r15), %eax
    000001b8: 	movb	%al, 0x10(%rbx)
.Ltmp2004:
    000001bb: 	movq	%r14, 0x8(%rbx)
    000001bf: 	movb	$0x0, (%rdi,%r14)
    000001c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001d2: 	addq	$0x20, %rax
    000001d6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001dd: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001e4: 	je	.Ltmp1872 # Offset: 484
.Ltmp2030:
    000001ea: 	movq	-0x20(%rax), %r14
    000001ee: 	callq	clock@PLT # Offset: 494
    000001f3: 	pxor	%xmm0, %xmm0
    000001f7: 	movq	%rax, end_time(%rip)
    000001fe: 	movq	%r14, %rdi
    00000201: 	subq	start_time(%rip), %rax
    00000208: 	cvtsi2sd	%rax, %xmm0
    0000020d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000215: 	callq	_Z13record_resultdPKc # Offset: 533
    0000021a: 	movq	0x60(%rsp), %rdi
    0000021f: 	cmpq	0x18(%rsp), %rdi
    00000224: 	je	.Ltmp1873 # Offset: 548
    00000226: 	movq	0x70(%rsp), %rax
    0000022b: 	leaq	0x1(%rax), %rsi
    0000022f: 	callq	_ZdlPvm@PLT # Offset: 559
.Ltmp1873:
    00000234: 	movq	0x18(%rsp), %rax
    00000239: 	movq	0x40(%rsp), %r15
    0000023e: 	movq	0x48(%rsp), %r14
    00000243: 	movq	%rax, 0x60(%rsp)
    00000248: 	movq	%r15, %rax
    0000024b: 	addq	%r14, %rax
    0000024e: 	je	.Ltmp1874 # Offset: 590
    00000250: 	testq	%r15, %r15
    00000253: 	je	.Ltmp1875 # Offset: 595
.Ltmp1874:
    00000259: 	movq	%r14, 0x38(%rsp)
    0000025e: 	cmpq	$0xf, %r14
    00000262: 	ja	.Ltmp1876 # Offset: 610
    00000268: 	cmpq	$0x1, %r14
    0000026c: 	jne	.Ltmp1877 # Offset: 620
    00000272: 	movzbl	(%r15), %eax
    00000276: 	movb	%al, 0x70(%rsp)
    0000027a: 	movq	0x18(%rsp), %rax
.Ltmp2016:
    0000027f: 	movq	%r14, 0x68(%rsp)
    00000284: 	movb	$0x0, (%rax,%r14)
    00000289: 	movabsq	$0x3fffffffffffffff, %rax
    00000293: 	subq	0x68(%rsp), %rax
    00000298: 	cmpq	$0x15, %rax
    0000029c: 	jbe	.Ltmp1878 # Offset: 668
    000002a2: 	movq	0x20(%rsp), %rdi
    000002a7: 	movl	$0x16, %edx
    000002ac: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 691
    000002b8: 	callq	clock@PLT # Offset: 696
    000002bd: 	movl	iterations(%rip), %ecx
    000002c3: 	movq	%rax, start_time(%rip)
    000002ca: 	testl	%ecx, %ecx
    000002cc: 	jle	.Ltmp1879 # Offset: 716
    000002d2: 	movl	0x10(%rsp), %eax
    000002d6: 	andl	0x14(%rsp), %eax
    000002da: 	xorl	%r14d, %r14d
    000002dd: 	leaq	0x7d00(%rbp), %rbx
    000002e4: 	andl	%r13d, %eax
    000002e7: 	leaq	DATAat0x3d1d8(%rip), %r15
    000002ee: 	andl	%r12d, %eax
    000002f1: 	movd	%eax, %xmm4
    000002f5: 	pshufd	$0x0, %xmm4, %xmm3
    000002fa: 	movaps	%xmm3, (%rsp)
    000002fe: 	nop # Size: 2
.Ltmp1882:
    00000300: 	movq	%rbp, %rax
    00000303: 	pxor	%xmm1, %xmm1
    00000307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1880:
    00000310: 	movdqu	(%rax), %xmm0
    00000314: 	pand	(%rsp), %xmm0
    00000319: 	addq	$0x10, %rax
    0000031d: 	paddd	%xmm0, %xmm1
    00000321: 	cmpq	%rbx, %rax
    00000324: 	jne	.Ltmp1880 # Offset: 804
    00000326: 	cvttsd2si	init_value(%rip), %rdx
    0000032f: 	movdqa	%xmm1, %xmm0
    00000333: 	andl	0x14(%rsp), %edx
    00000337: 	psrldq	$0x8, %xmm0
    0000033c: 	andl	0x10(%rsp), %edx
    00000340: 	paddd	%xmm0, %xmm1
    00000344: 	andl	%r13d, %edx
    00000347: 	movdqa	%xmm1, %xmm0
    0000034b: 	andl	%r12d, %edx
    0000034e: 	psrldq	$0x4, %xmm0
    00000353: 	imull	$0x1f40, %edx, %edx
    00000359: 	paddd	%xmm0, %xmm1
    0000035d: 	movd	%xmm1, %eax
    00000361: 	cmpl	%eax, %edx
    00000363: 	je	.Ltmp1881 # Offset: 867
    00000365: 	movl	current_test(%rip), %edx
    0000036b: 	movq	%r15, %rsi
    0000036e: 	movl	$0x1, %edi
    00000373: 	xorl	%eax, %eax
    00000375: 	callq	__printf_chk@PLT # Offset: 885
    0000037a: 	movl	iterations(%rip), %ecx
.Ltmp1881:
    00000380: 	addl	$0x1, %r14d
    00000384: 	cmpl	%ecx, %r14d
    00000387: 	jl	.Ltmp1882 # Offset: 903
.Ltmp1879:
    0000038d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000394: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000039b: 	subq	$0x20, %rax
    0000039f: 	cmpq	%rax, %rbx
    000003a2: 	je	.Ltmp1883 # Offset: 930
    000003a8: 	leaq	0x10(%rbx), %rdi
    000003ac: 	movq	0x68(%rsp), %r14
    000003b1: 	movq	%rdi, (%rbx)
    000003b4: 	movq	0x60(%rsp), %r15
    000003b9: 	movq	%r15, %rax
    000003bc: 	addq	%r14, %rax
    000003bf: 	je	.Ltmp1884 # Offset: 959
    000003c1: 	testq	%r15, %r15
    000003c4: 	je	.Ltmp1885 # Offset: 964
.Ltmp1884:
    000003ca: 	movq	%r14, 0x38(%rsp)
    000003cf: 	cmpq	$0xf, %r14
    000003d3: 	ja	.Ltmp1886 # Offset: 979
    000003d9: 	cmpq	$0x1, %r14
    000003dd: 	jne	.Ltmp1887 # Offset: 989
    000003e3: 	movzbl	(%r15), %eax
    000003e7: 	movb	%al, 0x10(%rbx)
.Ltmp2040:
    000003ea: 	movq	%r14, 0x8(%rbx)
    000003ee: 	movb	$0x0, (%rdi,%r14)
    000003f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003fa: 	addq	$0x20, %rax
    000003fe: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2032:
    00000405: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000040c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000413: 	je	.Ltmp1888 # Offset: 1043
.Ltmp2027:
    00000419: 	movq	-0x20(%rax), %r14
    0000041d: 	callq	clock@PLT # Offset: 1053
    00000422: 	pxor	%xmm0, %xmm0
    00000426: 	movq	%rax, end_time(%rip)
    0000042d: 	movq	%r14, %rdi
    00000430: 	subq	start_time(%rip), %rax
    00000437: 	cvtsi2sd	%rax, %xmm0
    0000043c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000444: 	callq	_Z13record_resultdPKc # Offset: 1092
    00000449: 	movq	0x60(%rsp), %rdi
    0000044e: 	cmpq	0x18(%rsp), %rdi
    00000453: 	je	.Ltmp1889 # Offset: 1107
    00000455: 	movq	0x70(%rsp), %rax
    0000045a: 	leaq	0x1(%rax), %rsi
    0000045e: 	callq	_ZdlPvm@PLT # Offset: 1118
.Ltmp1889:
    00000463: 	movq	0x18(%rsp), %rax
    00000468: 	movq	0x40(%rsp), %r15
    0000046d: 	movq	0x48(%rsp), %r14
    00000472: 	movq	%rax, 0x60(%rsp)
    00000477: 	movq	%r15, %rax
    0000047a: 	addq	%r14, %rax
    0000047d: 	je	.Ltmp1890 # Offset: 1149
    0000047f: 	testq	%r15, %r15
    00000482: 	je	.Ltmp1891 # Offset: 1154
.Ltmp1890:
    00000488: 	movq	%r14, 0x38(%rsp)
    0000048d: 	cmpq	$0xf, %r14
    00000491: 	ja	.Ltmp1892 # Offset: 1169
    00000497: 	cmpq	$0x1, %r14
    0000049b: 	jne	.Ltmp1893 # Offset: 1179
    000004a1: 	movzbl	(%r15), %eax
    000004a5: 	movb	%al, 0x70(%rsp)
    000004a9: 	movq	0x18(%rsp), %rax
.Ltmp2014:
    000004ae: 	movq	%r14, 0x68(%rsp)
    000004b3: 	movb	$0x0, (%rax,%r14)
    000004b8: 	movabsq	$0x3fffffffffffffff, %rax
    000004c2: 	subq	0x68(%rsp), %rax
    000004c7: 	cmpq	$0x16, %rax
    000004cb: 	jbe	.Ltmp1894 # Offset: 1227
    000004d1: 	movq	0x20(%rsp), %rdi
    000004d6: 	movl	$0x17, %edx
    000004db: 	leaq	DATAat0x3d1ff(%rip), %rsi
    000004e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1250
    000004e7: 	callq	clock@PLT # Offset: 1255
    000004ec: 	movl	iterations(%rip), %ecx
    000004f2: 	movq	%rax, start_time(%rip)
    000004f9: 	testl	%ecx, %ecx
    000004fb: 	jle	.Ltmp1895 # Offset: 1275
    00000501: 	movl	0x10(%rsp), %eax
    00000505: 	andl	0x14(%rsp), %eax
    00000509: 	xorl	%r14d, %r14d
    0000050c: 	leaq	0x7d00(%rbp), %rbx
    00000513: 	andl	%r13d, %eax
    00000516: 	andl	%r12d, %eax
    00000519: 	movd	%eax, %xmm3
    0000051d: 	movl	%eax, %r15d
    00000520: 	pshufd	$0x0, %xmm3, %xmm2
    00000525: 	movaps	%xmm2, (%rsp)
    00000529: 	nopl	(%rax) # Size: 7
.Ltmp1898:
    00000530: 	movq	%rbp, %rax
    00000533: 	pxor	%xmm1, %xmm1
    00000537: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1896:
    00000540: 	movdqu	(%rax), %xmm0
    00000544: 	pand	(%rsp), %xmm0
    00000549: 	addq	$0x10, %rax
    0000054d: 	paddd	%xmm0, %xmm1
    00000551: 	cmpq	%rax, %rbx
    00000554: 	jne	.Ltmp1896 # Offset: 1364
    00000556: 	cvttsd2si	init_value(%rip), %rdx
    0000055f: 	movdqa	%xmm1, %xmm0
    00000563: 	psrldq	$0x8, %xmm0
    00000568: 	paddd	%xmm0, %xmm1
    0000056c: 	movdqa	%xmm1, %xmm0
    00000570: 	andl	%r15d, %edx
    00000573: 	psrldq	$0x4, %xmm0
    00000578: 	imull	$0x1f40, %edx, %edx
    0000057e: 	paddd	%xmm0, %xmm1
    00000582: 	movd	%xmm1, %eax
    00000586: 	cmpl	%eax, %edx
    00000588: 	je	.Ltmp1897 # Offset: 1416
    0000058a: 	movl	current_test(%rip), %edx
    00000590: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000597: 	movl	$0x1, %edi
    0000059c: 	xorl	%eax, %eax
    0000059e: 	callq	__printf_chk@PLT # Offset: 1438
    000005a3: 	movl	iterations(%rip), %ecx
.Ltmp1897:
    000005a9: 	addl	$0x1, %r14d
    000005ad: 	cmpl	%ecx, %r14d
    000005b0: 	jl	.Ltmp1898 # Offset: 1456
.Ltmp1895:
    000005b6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000005c4: 	subq	$0x20, %rax
    000005c8: 	cmpq	%rax, %rbx
    000005cb: 	je	.Ltmp1899 # Offset: 1483
    000005d1: 	leaq	0x10(%rbx), %rdi
    000005d5: 	movq	0x68(%rsp), %r14
    000005da: 	movq	%rdi, (%rbx)
    000005dd: 	movq	0x60(%rsp), %r15
    000005e2: 	movq	%r15, %rax
    000005e5: 	addq	%r14, %rax
    000005e8: 	je	.Ltmp1900 # Offset: 1512
    000005ea: 	testq	%r15, %r15
    000005ed: 	je	.Ltmp1901 # Offset: 1517
.Ltmp1900:
    000005f3: 	movq	%r14, 0x38(%rsp)
    000005f8: 	cmpq	$0xf, %r14
    000005fc: 	ja	.Ltmp1902 # Offset: 1532
    00000602: 	cmpq	$0x1, %r14
    00000606: 	jne	.Ltmp1903 # Offset: 1542
    0000060c: 	movzbl	(%r15), %eax
    00000610: 	movb	%al, 0x10(%rbx)
.Ltmp2035:
    00000613: 	movq	%r14, 0x8(%rbx)
    00000617: 	movb	$0x0, (%rdi,%r14)
    0000061c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000623: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000062a: 	addq	$0x20, %rax
    0000062e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000635: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000063c: 	je	.Ltmp1904 # Offset: 1596
.Ltmp2029:
    00000642: 	movq	-0x20(%rax), %r14
    00000646: 	callq	clock@PLT # Offset: 1606
    0000064b: 	pxor	%xmm0, %xmm0
    0000064f: 	movq	%rax, end_time(%rip)
    00000656: 	movq	%r14, %rdi
    00000659: 	subq	start_time(%rip), %rax
    00000660: 	cvtsi2sd	%rax, %xmm0
    00000665: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000066d: 	callq	_Z13record_resultdPKc # Offset: 1645
    00000672: 	movq	0x60(%rsp), %rdi
    00000677: 	cmpq	0x18(%rsp), %rdi
    0000067c: 	je	.Ltmp1905 # Offset: 1660
    0000067e: 	movq	0x70(%rsp), %rax
    00000683: 	leaq	0x1(%rax), %rsi
    00000687: 	callq	_ZdlPvm@PLT # Offset: 1671
.Ltmp1905:
    0000068c: 	movq	0x18(%rsp), %rax
    00000691: 	movq	0x40(%rsp), %r15
    00000696: 	movq	0x48(%rsp), %r14
    0000069b: 	movq	%rax, 0x60(%rsp)
    000006a0: 	movq	%r15, %rax
    000006a3: 	addq	%r14, %rax
    000006a6: 	je	.Ltmp1906 # Offset: 1702
    000006a8: 	testq	%r15, %r15
    000006ab: 	je	.Ltmp1907 # Offset: 1707
.Ltmp1906:
    000006b1: 	movq	%r14, 0x38(%rsp)
    000006b6: 	cmpq	$0xf, %r14
    000006ba: 	ja	.Ltmp1908 # Offset: 1722
    000006c0: 	cmpq	$0x1, %r14
    000006c4: 	jne	.Ltmp1909 # Offset: 1732
    000006ca: 	movzbl	(%r15), %eax
    000006ce: 	movb	%al, 0x70(%rsp)
    000006d2: 	movq	0x18(%rsp), %rax
.Ltmp2020:
    000006d7: 	movq	%r14, 0x68(%rsp)
    000006dc: 	movb	$0x0, (%rax,%r14)
    000006e1: 	movabsq	$0x3fffffffffffffff, %rax
    000006eb: 	subq	0x68(%rsp), %rax
    000006f0: 	cmpq	$0xb, %rax
    000006f4: 	jbe	.Ltmp1910 # Offset: 1780
    000006fa: 	movq	0x20(%rsp), %rdi
    000006ff: 	movl	$0xc, %edx
    00000704: 	leaq	DATAat0x3d220(%rip), %rsi
    0000070b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1803
    00000710: 	callq	clock@PLT # Offset: 1808
    00000715: 	movd	%r12d, %xmm3
    0000071a: 	movl	iterations(%rip), %ecx
    00000720: 	xorl	%r14d, %r14d
    00000723: 	pshufd	$0x0, %xmm3, %xmm2
    00000728: 	movq	%rax, start_time(%rip)
    0000072f: 	leaq	0x7d00(%rbp), %rbx
    00000736: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000073d: 	movaps	%xmm2, (%rsp)
    00000741: 	testl	%ecx, %ecx
    00000743: 	jle	.Ltmp1911 # Offset: 1859
    00000745: 	nopl	(%rax) # Size: 3
.Ltmp1914:
    00000748: 	movq	%rbp, %rax
    0000074b: 	pxor	%xmm1, %xmm1
    0000074f: 	nop # Size: 1
.Ltmp1912:
    00000750: 	movdqu	(%rax), %xmm0
    00000754: 	por	(%rsp), %xmm0
    00000759: 	addq	$0x10, %rax
    0000075d: 	paddd	%xmm0, %xmm1
    00000761: 	cmpq	%rbx, %rax
    00000764: 	jne	.Ltmp1912 # Offset: 1892
    00000766: 	cvttsd2si	init_value(%rip), %rdx
    0000076f: 	movdqa	%xmm1, %xmm0
    00000773: 	psrldq	$0x8, %xmm0
    00000778: 	paddd	%xmm0, %xmm1
    0000077c: 	movdqa	%xmm1, %xmm0
    00000780: 	orl	%r12d, %edx
    00000783: 	psrldq	$0x4, %xmm0
    00000788: 	imull	$0x1f40, %edx, %edx
    0000078e: 	paddd	%xmm0, %xmm1
    00000792: 	movd	%xmm1, %eax
    00000796: 	cmpl	%eax, %edx
    00000798: 	je	.Ltmp1913 # Offset: 1944
    0000079a: 	movl	current_test(%rip), %edx
    000007a0: 	movq	%r15, %rsi
    000007a3: 	movl	$0x1, %edi
    000007a8: 	xorl	%eax, %eax
    000007aa: 	callq	__printf_chk@PLT # Offset: 1962
    000007af: 	movl	iterations(%rip), %ecx
.Ltmp1913:
    000007b5: 	addl	$0x1, %r14d
    000007b9: 	cmpl	%ecx, %r14d
    000007bc: 	jl	.Ltmp1914 # Offset: 1980
.Ltmp1911:
    000007be: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000007cc: 	subq	$0x20, %rax
    000007d0: 	cmpq	%rax, %rbx
    000007d3: 	je	.Ltmp1915 # Offset: 2003
    000007d9: 	leaq	0x10(%rbx), %rdi
    000007dd: 	movq	0x68(%rsp), %r14
    000007e2: 	movq	%rdi, (%rbx)
    000007e5: 	movq	0x60(%rsp), %r15
    000007ea: 	movq	%r15, %rax
    000007ed: 	addq	%r14, %rax
    000007f0: 	je	.Ltmp1916 # Offset: 2032
    000007f2: 	testq	%r15, %r15
    000007f5: 	je	.Ltmp1917 # Offset: 2037
.Ltmp1916:
    000007fb: 	movq	%r14, 0x38(%rsp)
    00000800: 	cmpq	$0xf, %r14
    00000804: 	ja	.Ltmp1918 # Offset: 2052
    0000080a: 	cmpq	$0x1, %r14
    0000080e: 	jne	.Ltmp1919 # Offset: 2062
    00000814: 	movzbl	(%r15), %eax
    00000818: 	movb	%al, 0x10(%rbx)
.Ltmp2046:
    0000081b: 	movq	%r14, 0x8(%rbx)
    0000081f: 	movb	$0x0, (%rdi,%r14)
    00000824: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000082b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000832: 	addq	$0x20, %rax
    00000836: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000083d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000844: 	je	.Ltmp1920 # Offset: 2116
.Ltmp2026:
    0000084a: 	movq	-0x20(%rax), %r14
    0000084e: 	callq	clock@PLT # Offset: 2126
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	movq	%rax, end_time(%rip)
    0000085e: 	movq	%r14, %rdi
    00000861: 	subq	start_time(%rip), %rax
    00000868: 	cvtsi2sd	%rax, %xmm0
    0000086d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000875: 	callq	_Z13record_resultdPKc # Offset: 2165
    0000087a: 	movq	0x60(%rsp), %rdi
    0000087f: 	cmpq	0x18(%rsp), %rdi
    00000884: 	je	.Ltmp1921 # Offset: 2180
    00000886: 	movq	0x70(%rsp), %rax
    0000088b: 	leaq	0x1(%rax), %rsi
    0000088f: 	callq	_ZdlPvm@PLT # Offset: 2191
.Ltmp1921:
    00000894: 	movq	0x18(%rsp), %rax
    00000899: 	movq	0x40(%rsp), %r15
    0000089e: 	movq	0x48(%rsp), %r14
    000008a3: 	movq	%rax, 0x60(%rsp)
    000008a8: 	movq	%r15, %rax
    000008ab: 	addq	%r14, %rax
    000008ae: 	je	.Ltmp1922 # Offset: 2222
    000008b0: 	testq	%r15, %r15
    000008b3: 	je	.Ltmp1923 # Offset: 2227
.Ltmp1922:
    000008b9: 	movq	%r14, 0x38(%rsp)
    000008be: 	cmpq	$0xf, %r14
    000008c2: 	ja	.Ltmp1924 # Offset: 2242
    000008c8: 	cmpq	$0x1, %r14
    000008cc: 	jne	.Ltmp1925 # Offset: 2252
    000008d2: 	movzbl	(%r15), %eax
    000008d6: 	movb	%al, 0x70(%rsp)
    000008da: 	movq	0x18(%rsp), %rax
.Ltmp2018:
    000008df: 	movq	%r14, 0x68(%rsp)
    000008e4: 	movb	$0x0, (%rax,%r14)
    000008e9: 	movabsq	$0x3fffffffffffffff, %rax
    000008f3: 	subq	0x68(%rsp), %rax
    000008f8: 	cmpq	$0x14, %rax
    000008fc: 	jbe	.Ltmp1926 # Offset: 2300
    00000902: 	movq	0x20(%rsp), %rdi
    00000907: 	movl	$0x15, %edx
    0000090c: 	leaq	DATAat0x3d217(%rip), %rsi
    00000913: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2323
    00000918: 	callq	clock@PLT # Offset: 2328
    0000091d: 	movl	iterations(%rip), %ecx
    00000923: 	movq	%rax, start_time(%rip)
    0000092a: 	testl	%ecx, %ecx
    0000092c: 	jle	.Ltmp1927 # Offset: 2348
    00000932: 	movl	0x10(%rsp), %eax
    00000936: 	orl	0x14(%rsp), %eax
    0000093a: 	xorl	%r14d, %r14d
    0000093d: 	leaq	0x7d00(%rbp), %rbx
    00000944: 	orl	%r13d, %eax
    00000947: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000094e: 	orl	%r12d, %eax
    00000951: 	movd	%eax, %xmm2
    00000955: 	pshufd	$0x0, %xmm2, %xmm4
    0000095a: 	movaps	%xmm4, (%rsp)
    0000095e: 	nop # Size: 2
.Ltmp1930:
    00000960: 	movq	%rbp, %rax
    00000963: 	pxor	%xmm1, %xmm1
    00000967: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1928:
    00000970: 	movdqu	(%rax), %xmm0
    00000974: 	por	(%rsp), %xmm0
    00000979: 	addq	$0x10, %rax
    0000097d: 	paddd	%xmm0, %xmm1
    00000981: 	cmpq	%rax, %rbx
    00000984: 	jne	.Ltmp1928 # Offset: 2436
    00000986: 	cvttsd2si	init_value(%rip), %rdx
    0000098f: 	movdqa	%xmm1, %xmm0
    00000993: 	orl	0x14(%rsp), %edx
    00000997: 	psrldq	$0x8, %xmm0
    0000099c: 	orl	0x10(%rsp), %edx
    000009a0: 	paddd	%xmm0, %xmm1
    000009a4: 	orl	%r13d, %edx
    000009a7: 	movdqa	%xmm1, %xmm0
    000009ab: 	orl	%r12d, %edx
    000009ae: 	psrldq	$0x4, %xmm0
    000009b3: 	imull	$0x1f40, %edx, %edx
    000009b9: 	paddd	%xmm0, %xmm1
    000009bd: 	movd	%xmm1, %eax
    000009c1: 	cmpl	%eax, %edx
    000009c3: 	je	.Ltmp1929 # Offset: 2499
    000009c5: 	movl	current_test(%rip), %edx
    000009cb: 	movq	%r15, %rsi
    000009ce: 	movl	$0x1, %edi
    000009d3: 	xorl	%eax, %eax
    000009d5: 	callq	__printf_chk@PLT # Offset: 2517
    000009da: 	movl	iterations(%rip), %ecx
.Ltmp1929:
    000009e0: 	addl	$0x1, %r14d
    000009e4: 	cmpl	%ecx, %r14d
    000009e7: 	jl	.Ltmp1930 # Offset: 2535
.Ltmp1927:
    000009ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000009fb: 	subq	$0x20, %rax
    000009ff: 	cmpq	%rax, %rbx
    00000a02: 	je	.Ltmp1931 # Offset: 2562
    00000a08: 	leaq	0x10(%rbx), %rdi
    00000a0c: 	movq	0x68(%rsp), %r14
    00000a11: 	movq	%rdi, (%rbx)
    00000a14: 	movq	0x60(%rsp), %r15
    00000a19: 	movq	%r15, %rax
    00000a1c: 	addq	%r14, %rax
    00000a1f: 	je	.Ltmp1932 # Offset: 2591
    00000a21: 	testq	%r15, %r15
    00000a24: 	je	.Ltmp1933 # Offset: 2596
.Ltmp1932:
    00000a2a: 	movq	%r14, 0x38(%rsp)
    00000a2f: 	cmpq	$0xf, %r14
    00000a33: 	ja	.Ltmp1934 # Offset: 2611
    00000a39: 	cmpq	$0x1, %r14
    00000a3d: 	jne	.Ltmp1935 # Offset: 2621
    00000a43: 	movzbl	(%r15), %eax
    00000a47: 	movb	%al, 0x10(%rbx)
.Ltmp2037:
    00000a4a: 	movq	%r14, 0x8(%rbx)
    00000a4e: 	movb	$0x0, (%rdi,%r14)
    00000a53: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a5a: 	addq	$0x20, %rax
    00000a5e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2033:
    00000a65: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a6c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a73: 	je	.Ltmp1936 # Offset: 2675
.Ltmp2031:
    00000a79: 	movq	-0x20(%rax), %r14
    00000a7d: 	callq	clock@PLT # Offset: 2685
    00000a82: 	pxor	%xmm0, %xmm0
    00000a86: 	movq	%rax, end_time(%rip)
    00000a8d: 	movq	%r14, %rdi
    00000a90: 	subq	start_time(%rip), %rax
    00000a97: 	cvtsi2sd	%rax, %xmm0
    00000a9c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000aa4: 	callq	_Z13record_resultdPKc # Offset: 2724
    00000aa9: 	movq	0x60(%rsp), %rdi
    00000aae: 	cmpq	0x18(%rsp), %rdi
    00000ab3: 	je	.Ltmp1937 # Offset: 2739
    00000ab5: 	movq	0x70(%rsp), %rax
    00000aba: 	leaq	0x1(%rax), %rsi
    00000abe: 	callq	_ZdlPvm@PLT # Offset: 2750
.Ltmp1937:
    00000ac3: 	movq	0x18(%rsp), %rax
    00000ac8: 	movq	0x40(%rsp), %r15
    00000acd: 	movq	0x48(%rsp), %r14
    00000ad2: 	movq	%rax, 0x60(%rsp)
    00000ad7: 	movq	%r15, %rax
    00000ada: 	addq	%r14, %rax
    00000add: 	je	.Ltmp1938 # Offset: 2781
    00000adf: 	testq	%r15, %r15
    00000ae2: 	je	.Ltmp1939 # Offset: 2786
.Ltmp1938:
    00000ae8: 	movq	%r14, 0x38(%rsp)
    00000aed: 	cmpq	$0xf, %r14
    00000af1: 	ja	.Ltmp1940 # Offset: 2801
    00000af7: 	cmpq	$0x1, %r14
    00000afb: 	jne	.Ltmp1941 # Offset: 2811
    00000b01: 	movzbl	(%r15), %eax
    00000b05: 	movb	%al, 0x70(%rsp)
    00000b09: 	movq	0x18(%rsp), %rax
.Ltmp2012:
    00000b0e: 	movq	%r14, 0x68(%rsp)
    00000b13: 	movb	$0x0, (%rax,%r14)
    00000b18: 	movabsq	$0x3fffffffffffffff, %rax
    00000b22: 	subq	0x68(%rsp), %rax
    00000b27: 	cmpq	$0x15, %rax
    00000b2b: 	jbe	.Ltmp1942 # Offset: 2859
    00000b31: 	movq	0x20(%rsp), %rdi
    00000b36: 	movl	$0x16, %edx
    00000b3b: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000b42: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2882
    00000b47: 	callq	clock@PLT # Offset: 2887
    00000b4c: 	movl	iterations(%rip), %ecx
    00000b52: 	movq	%rax, start_time(%rip)
    00000b59: 	testl	%ecx, %ecx
    00000b5b: 	jle	.Ltmp1943 # Offset: 2907
    00000b61: 	movl	0x10(%rsp), %eax
    00000b65: 	orl	0x14(%rsp), %eax
    00000b69: 	xorl	%r14d, %r14d
    00000b6c: 	leaq	0x7d00(%rbp), %rbx
    00000b73: 	orl	%r13d, %eax
    00000b76: 	orl	%r12d, %eax
    00000b79: 	movd	%eax, %xmm4
    00000b7d: 	movl	%eax, %r15d
    00000b80: 	pshufd	$0x0, %xmm4, %xmm3
    00000b85: 	movaps	%xmm3, (%rsp)
    00000b89: 	nopl	(%rax) # Size: 7
.Ltmp1946:
    00000b90: 	movq	%rbp, %rax
    00000b93: 	pxor	%xmm1, %xmm1
    00000b97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1944:
    00000ba0: 	movdqu	(%rax), %xmm0
    00000ba4: 	por	(%rsp), %xmm0
    00000ba9: 	addq	$0x10, %rax
    00000bad: 	paddd	%xmm0, %xmm1
    00000bb1: 	cmpq	%rbx, %rax
    00000bb4: 	jne	.Ltmp1944 # Offset: 2996
    00000bb6: 	cvttsd2si	init_value(%rip), %rdx
    00000bbf: 	movdqa	%xmm1, %xmm0
    00000bc3: 	psrldq	$0x8, %xmm0
    00000bc8: 	paddd	%xmm0, %xmm1
    00000bcc: 	movdqa	%xmm1, %xmm0
    00000bd0: 	orl	%r15d, %edx
    00000bd3: 	psrldq	$0x4, %xmm0
    00000bd8: 	imull	$0x1f40, %edx, %edx
    00000bde: 	paddd	%xmm0, %xmm1
    00000be2: 	movd	%xmm1, %eax
    00000be6: 	cmpl	%eax, %edx
    00000be8: 	je	.Ltmp1945 # Offset: 3048
    00000bea: 	movl	current_test(%rip), %edx
    00000bf0: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000bf7: 	movl	$0x1, %edi
    00000bfc: 	xorl	%eax, %eax
    00000bfe: 	callq	__printf_chk@PLT # Offset: 3070
    00000c03: 	movl	iterations(%rip), %ecx
.Ltmp1945:
    00000c09: 	addl	$0x1, %r14d
    00000c0d: 	cmpl	%ecx, %r14d
    00000c10: 	jl	.Ltmp1946 # Offset: 3088
.Ltmp1943:
    00000c16: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c1d: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000c24: 	subq	$0x20, %rax
    00000c28: 	cmpq	%rax, %rbx
    00000c2b: 	je	.Ltmp1947 # Offset: 3115
    00000c31: 	leaq	0x10(%rbx), %rdi
    00000c35: 	movq	0x68(%rsp), %r14
    00000c3a: 	movq	%rdi, (%rbx)
    00000c3d: 	movq	0x60(%rsp), %r15
    00000c42: 	movq	%r15, %rax
    00000c45: 	addq	%r14, %rax
    00000c48: 	je	.Ltmp1948 # Offset: 3144
    00000c4a: 	testq	%r15, %r15
    00000c4d: 	je	.Ltmp1949 # Offset: 3149
.Ltmp1948:
    00000c53: 	movq	%r14, 0x38(%rsp)
    00000c58: 	cmpq	$0xf, %r14
    00000c5c: 	ja	.Ltmp1950 # Offset: 3164
    00000c62: 	cmpq	$0x1, %r14
    00000c66: 	jne	.Ltmp1951 # Offset: 3174
    00000c6c: 	movzbl	(%r15), %eax
    00000c70: 	movb	%al, 0x10(%rbx)
.Ltmp2044:
    00000c73: 	movq	%r14, 0x8(%rbx)
    00000c77: 	movb	$0x0, (%rdi,%r14)
    00000c7c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c83: 	addq	$0x20, %rax
    00000c87: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2028:
    00000c8e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c95: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c9c: 	je	.Ltmp1952 # Offset: 3228
.Ltmp2024:
    00000ca2: 	movq	-0x20(%rax), %r14
    00000ca6: 	callq	clock@PLT # Offset: 3238
    00000cab: 	pxor	%xmm0, %xmm0
    00000caf: 	movq	%rax, end_time(%rip)
    00000cb6: 	movq	%r14, %rdi
    00000cb9: 	subq	start_time(%rip), %rax
    00000cc0: 	cvtsi2sd	%rax, %xmm0
    00000cc5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ccd: 	callq	_Z13record_resultdPKc # Offset: 3277
    00000cd2: 	movq	0x60(%rsp), %rdi
    00000cd7: 	cmpq	0x18(%rsp), %rdi
    00000cdc: 	je	.Ltmp1953 # Offset: 3292
    00000cde: 	movq	0x70(%rsp), %rax
    00000ce3: 	leaq	0x1(%rax), %rsi
    00000ce7: 	callq	_ZdlPvm@PLT # Offset: 3303
.Ltmp1953:
    00000cec: 	movq	0x18(%rsp), %rax
    00000cf1: 	movq	0x40(%rsp), %r15
    00000cf6: 	movq	0x48(%rsp), %r14
    00000cfb: 	movq	%rax, 0x60(%rsp)
    00000d00: 	movq	%r15, %rax
    00000d03: 	addq	%r14, %rax
    00000d06: 	je	.Ltmp1954 # Offset: 3334
    00000d08: 	testq	%r15, %r15
    00000d0b: 	je	.Ltmp1955 # Offset: 3339
.Ltmp1954:
    00000d11: 	movq	%r14, 0x38(%rsp)
    00000d16: 	cmpq	$0xf, %r14
    00000d1a: 	ja	.Ltmp1956 # Offset: 3354
    00000d20: 	cmpq	$0x1, %r14
    00000d24: 	jne	.Ltmp1957 # Offset: 3364
    00000d2a: 	movzbl	(%r15), %eax
    00000d2e: 	movb	%al, 0x70(%rsp)
    00000d32: 	movq	0x18(%rsp), %rax
.Ltmp2010:
    00000d37: 	movq	%r14, 0x68(%rsp)
    00000d3c: 	movb	$0x0, (%rax,%r14)
    00000d41: 	movabsq	$0x3fffffffffffffff, %rax
    00000d4b: 	subq	0x68(%rsp), %rax
    00000d50: 	cmpq	$0xc, %rax
    00000d54: 	jbe	.Ltmp1958 # Offset: 3412
    00000d5a: 	movq	0x20(%rsp), %rdi
    00000d5f: 	movl	$0xd, %edx
    00000d64: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000d6b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3435
    00000d70: 	callq	clock@PLT # Offset: 3440
    00000d75: 	movd	%r12d, %xmm2
    00000d7a: 	movl	iterations(%rip), %ecx
    00000d80: 	xorl	%r14d, %r14d
    00000d83: 	pshufd	$0x0, %xmm2, %xmm4
    00000d88: 	movq	%rax, start_time(%rip)
    00000d8f: 	leaq	0x7d00(%rbp), %rbx
    00000d96: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000d9d: 	movaps	%xmm4, (%rsp)
    00000da1: 	testl	%ecx, %ecx
    00000da3: 	jle	.Ltmp1959 # Offset: 3491
    00000da5: 	nopl	(%rax) # Size: 3
.Ltmp1962:
    00000da8: 	movq	%rbp, %rax
    00000dab: 	pxor	%xmm1, %xmm1
    00000daf: 	nop # Size: 1
.Ltmp1960:
    00000db0: 	movdqu	(%rax), %xmm0
    00000db4: 	pxor	(%rsp), %xmm0
    00000db9: 	addq	$0x10, %rax
    00000dbd: 	paddd	%xmm0, %xmm1
    00000dc1: 	cmpq	%rax, %rbx
    00000dc4: 	jne	.Ltmp1960 # Offset: 3524
    00000dc6: 	cvttsd2si	init_value(%rip), %rdx
    00000dcf: 	movdqa	%xmm1, %xmm0
    00000dd3: 	psrldq	$0x8, %xmm0
    00000dd8: 	paddd	%xmm0, %xmm1
    00000ddc: 	movdqa	%xmm1, %xmm0
    00000de0: 	xorl	%r12d, %edx
    00000de3: 	psrldq	$0x4, %xmm0
    00000de8: 	imull	$0x1f40, %edx, %edx
    00000dee: 	paddd	%xmm0, %xmm1
    00000df2: 	movd	%xmm1, %eax
    00000df6: 	cmpl	%eax, %edx
    00000df8: 	je	.Ltmp1961 # Offset: 3576
    00000dfa: 	movl	current_test(%rip), %edx
    00000e00: 	movq	%r15, %rsi
    00000e03: 	movl	$0x1, %edi
    00000e08: 	xorl	%eax, %eax
    00000e0a: 	callq	__printf_chk@PLT # Offset: 3594
    00000e0f: 	movl	iterations(%rip), %ecx
.Ltmp1961:
    00000e15: 	addl	$0x1, %r14d
    00000e19: 	cmpl	%ecx, %r14d
    00000e1c: 	jl	.Ltmp1962 # Offset: 3612
.Ltmp1959:
    00000e1e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e25: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e2c: 	subq	$0x20, %rax
    00000e30: 	cmpq	%rax, %rbx
    00000e33: 	je	.Ltmp1963 # Offset: 3635
    00000e39: 	leaq	0x10(%rbx), %rdi
    00000e3d: 	movq	0x68(%rsp), %r14
    00000e42: 	movq	%rdi, (%rbx)
    00000e45: 	movq	0x60(%rsp), %r15
    00000e4a: 	movq	%r15, %rax
    00000e4d: 	addq	%r14, %rax
    00000e50: 	je	.Ltmp1964 # Offset: 3664
    00000e52: 	testq	%r15, %r15
    00000e55: 	je	.Ltmp1965 # Offset: 3669
.Ltmp1964:
    00000e5b: 	movq	%r14, 0x38(%rsp)
    00000e60: 	cmpq	$0xf, %r14
    00000e64: 	ja	.Ltmp1966 # Offset: 3684
    00000e6a: 	cmpq	$0x1, %r14
    00000e6e: 	jne	.Ltmp1967 # Offset: 3694
    00000e74: 	movzbl	(%r15), %eax
    00000e78: 	movb	%al, 0x10(%rbx)
.Ltmp2038:
    00000e7b: 	movq	%r14, 0x8(%rbx)
    00000e7f: 	movb	$0x0, (%rdi,%r14)
    00000e84: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e8b: 	addq	$0x20, %rax
    00000e8f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2023:
    00000e96: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e9d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ea4: 	je	.Ltmp1968 # Offset: 3748
.Ltmp2021:
    00000eaa: 	movq	-0x20(%rax), %r14
    00000eae: 	callq	clock@PLT # Offset: 3758
    00000eb3: 	pxor	%xmm0, %xmm0
    00000eb7: 	movq	%rax, end_time(%rip)
    00000ebe: 	movq	%r14, %rdi
    00000ec1: 	subq	start_time(%rip), %rax
    00000ec8: 	cvtsi2sd	%rax, %xmm0
    00000ecd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ed5: 	callq	_Z13record_resultdPKc # Offset: 3797
    00000eda: 	movq	0x60(%rsp), %rdi
    00000edf: 	cmpq	0x18(%rsp), %rdi
    00000ee4: 	je	.Ltmp1969 # Offset: 3812
    00000ee6: 	movq	0x70(%rsp), %rax
    00000eeb: 	leaq	0x1(%rax), %rsi
    00000eef: 	callq	_ZdlPvm@PLT # Offset: 3823
.Ltmp1969:
    00000ef4: 	movq	0x18(%rsp), %rax
    00000ef9: 	movq	0x40(%rsp), %r15
    00000efe: 	movq	0x48(%rsp), %r14
    00000f03: 	movq	%rax, 0x60(%rsp)
    00000f08: 	movq	%r15, %rax
    00000f0b: 	addq	%r14, %rax
    00000f0e: 	je	.Ltmp1970 # Offset: 3854
    00000f10: 	testq	%r15, %r15
    00000f13: 	je	.Ltmp1971 # Offset: 3859
.Ltmp1970:
    00000f19: 	movq	%r14, 0x38(%rsp)
    00000f1e: 	cmpq	$0xf, %r14
    00000f22: 	ja	.Ltmp1972 # Offset: 3874
    00000f28: 	cmpq	$0x1, %r14
    00000f2c: 	jne	.Ltmp1973 # Offset: 3884
    00000f32: 	movzbl	(%r15), %eax
    00000f36: 	movb	%al, 0x70(%rsp)
    00000f3a: 	movq	0x18(%rsp), %rax
.Ltmp2008:
    00000f3f: 	movq	%r14, 0x68(%rsp)
    00000f44: 	movb	$0x0, (%rax,%r14)
    00000f49: 	movabsq	$0x3fffffffffffffff, %rax
    00000f53: 	subq	0x68(%rsp), %rax
    00000f58: 	cmpq	$0x15, %rax
    00000f5c: 	jbe	.Ltmp1974 # Offset: 3932
    00000f62: 	movq	0x20(%rsp), %rdi
    00000f67: 	movl	$0x16, %edx
    00000f6c: 	leaq	DATAat0x3d244(%rip), %rsi
    00000f73: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3955
    00000f78: 	callq	clock@PLT # Offset: 3960
    00000f7d: 	movl	iterations(%rip), %ecx
    00000f83: 	movq	%rax, start_time(%rip)
    00000f8a: 	testl	%ecx, %ecx
    00000f8c: 	jle	.Ltmp1975 # Offset: 3980
    00000f92: 	movl	0x10(%rsp), %eax
    00000f96: 	xorl	0x14(%rsp), %eax
    00000f9a: 	xorl	%r14d, %r14d
    00000f9d: 	leaq	0x7d00(%rbp), %rbx
    00000fa4: 	xorl	%r13d, %eax
    00000fa7: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000fae: 	xorl	%r12d, %eax
    00000fb1: 	movd	%eax, %xmm3
    00000fb5: 	pshufd	$0x0, %xmm3, %xmm2
    00000fba: 	movaps	%xmm2, (%rsp)
    00000fbe: 	nop # Size: 2
.Ltmp1978:
    00000fc0: 	movq	%rbp, %rax
    00000fc3: 	pxor	%xmm1, %xmm1
    00000fc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1976:
    00000fd0: 	movdqu	(%rax), %xmm0
    00000fd4: 	pxor	(%rsp), %xmm0
    00000fd9: 	addq	$0x10, %rax
    00000fdd: 	paddd	%xmm0, %xmm1
    00000fe1: 	cmpq	%rbx, %rax
    00000fe4: 	jne	.Ltmp1976 # Offset: 4068
    00000fe6: 	cvttsd2si	init_value(%rip), %rdx
    00000fef: 	movdqa	%xmm1, %xmm0
    00000ff3: 	xorl	0x14(%rsp), %edx
    00000ff7: 	psrldq	$0x8, %xmm0
    00000ffc: 	xorl	0x10(%rsp), %edx
    00001000: 	paddd	%xmm0, %xmm1
    00001004: 	xorl	%r13d, %edx
    00001007: 	movdqa	%xmm1, %xmm0
    0000100b: 	xorl	%r12d, %edx
    0000100e: 	psrldq	$0x4, %xmm0
    00001013: 	imull	$0x1f40, %edx, %edx
    00001019: 	paddd	%xmm0, %xmm1
    0000101d: 	movd	%xmm1, %eax
    00001021: 	cmpl	%eax, %edx
    00001023: 	je	.Ltmp1977 # Offset: 4131
    00001025: 	movl	current_test(%rip), %edx
    0000102b: 	movq	%r15, %rsi
    0000102e: 	movl	$0x1, %edi
    00001033: 	xorl	%eax, %eax
    00001035: 	callq	__printf_chk@PLT # Offset: 4149
    0000103a: 	movl	iterations(%rip), %ecx
.Ltmp1977:
    00001040: 	addl	$0x1, %r14d
    00001044: 	cmpl	%ecx, %r14d
    00001047: 	jl	.Ltmp1978 # Offset: 4167
.Ltmp1975:
    0000104d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001054: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000105b: 	subq	$0x20, %rax
    0000105f: 	cmpq	%rax, %rbx
    00001062: 	je	.Ltmp1979 # Offset: 4194
    00001068: 	leaq	0x10(%rbx), %rdi
    0000106c: 	movq	0x68(%rsp), %r14
    00001071: 	movq	%rdi, (%rbx)
    00001074: 	movq	0x60(%rsp), %r15
    00001079: 	movq	%r15, %rax
    0000107c: 	addq	%r14, %rax
    0000107f: 	je	.Ltmp1980 # Offset: 4223
    00001081: 	testq	%r15, %r15
    00001084: 	je	.Ltmp1981 # Offset: 4228
.Ltmp1980:
    0000108a: 	movq	%r14, 0x38(%rsp)
    0000108f: 	cmpq	$0xf, %r14
    00001093: 	ja	.Ltmp1982 # Offset: 4243
    00001099: 	cmpq	$0x1, %r14
    0000109d: 	jne	.Ltmp1983 # Offset: 4253
    000010a3: 	movzbl	(%r15), %eax
    000010a7: 	movb	%al, 0x10(%rbx)
.Ltmp2041:
    000010aa: 	movq	%r14, 0x8(%rbx)
    000010ae: 	movb	$0x0, (%rdi,%r14)
    000010b3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010c1: 	addq	$0x20, %rax
    000010c5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010cc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000010d3: 	je	.Ltmp1984 # Offset: 4307
.Ltmp2022:
    000010d9: 	movq	-0x20(%rax), %r14
    000010dd: 	callq	clock@PLT # Offset: 4317
    000010e2: 	pxor	%xmm0, %xmm0
    000010e6: 	movq	%rax, end_time(%rip)
    000010ed: 	movq	%r14, %rdi
    000010f0: 	subq	start_time(%rip), %rax
    000010f7: 	cvtsi2sd	%rax, %xmm0
    000010fc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001104: 	callq	_Z13record_resultdPKc # Offset: 4356
    00001109: 	movq	0x60(%rsp), %rdi
    0000110e: 	cmpq	0x18(%rsp), %rdi
    00001113: 	je	.Ltmp1985 # Offset: 4371
    00001115: 	movq	0x70(%rsp), %rax
    0000111a: 	leaq	0x1(%rax), %rsi
    0000111e: 	callq	_ZdlPvm@PLT # Offset: 4382
.Ltmp1985:
    00001123: 	movq	0x18(%rsp), %rax
    00001128: 	movq	0x40(%rsp), %r15
    0000112d: 	movq	0x48(%rsp), %r14
    00001132: 	movq	%rax, 0x60(%rsp)
    00001137: 	movq	%r15, %rax
    0000113a: 	addq	%r14, %rax
    0000113d: 	je	.Ltmp1986 # Offset: 4413
    0000113f: 	testq	%r15, %r15
    00001142: 	je	.Ltmp1987 # Offset: 4418
.Ltmp1986:
    00001148: 	movq	%r14, 0x38(%rsp)
    0000114d: 	cmpq	$0xf, %r14
    00001151: 	ja	.Ltmp1988 # Offset: 4433
    00001157: 	cmpq	$0x1, %r14
    0000115b: 	jne	.Ltmp1989 # Offset: 4443
    00001161: 	movzbl	(%r15), %eax
    00001165: 	movb	%al, 0x70(%rsp)
    00001169: 	movq	0x18(%rsp), %rax
.Ltmp2006:
    0000116e: 	movq	%r14, 0x68(%rsp)
    00001173: 	movb	$0x0, (%rax,%r14)
    00001178: 	movabsq	$0x3fffffffffffffff, %rax
    00001182: 	subq	0x68(%rsp), %rax
    00001187: 	cmpq	$0x16, %rax
    0000118b: 	jbe	.Ltmp1990 # Offset: 4491
    00001191: 	movq	0x20(%rsp), %rdi
    00001196: 	movl	$0x17, %edx
    0000119b: 	leaq	DATAat0x3d25b(%rip), %rsi
    000011a2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4514
    000011a7: 	callq	clock@PLT # Offset: 4519
    000011ac: 	movl	iterations(%rip), %ecx
    000011b2: 	movq	%rax, start_time(%rip)
    000011b9: 	testl	%ecx, %ecx
    000011bb: 	jle	.Ltmp1991 # Offset: 4539
    000011c1: 	movl	0x10(%rsp), %eax
    000011c5: 	xorl	0x14(%rsp), %eax
    000011c9: 	leaq	0x7d00(%rbp), %rbx
    000011d0: 	leaq	DATAat0x3d1d8(%rip), %r14
    000011d7: 	xorl	%r13d, %eax
    000011da: 	xorl	%r13d, %r13d
    000011dd: 	xorl	%eax, %r12d
    000011e0: 	movd	%r12d, %xmm2
    000011e5: 	pshufd	$0x0, %xmm2, %xmm4
    000011ea: 	movaps	%xmm4, (%rsp)
    000011ee: 	nop # Size: 2
.Ltmp1994:
    000011f0: 	movq	%rbp, %rax
    000011f3: 	pxor	%xmm1, %xmm1
    000011f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1992:
    00001200: 	movdqu	(%rax), %xmm0
    00001204: 	pxor	(%rsp), %xmm0
    00001209: 	addq	$0x10, %rax
    0000120d: 	paddd	%xmm0, %xmm1
    00001211: 	cmpq	%rbx, %rax
    00001214: 	jne	.Ltmp1992 # Offset: 4628
    00001216: 	cvttsd2si	init_value(%rip), %rdx
    0000121f: 	movdqa	%xmm1, %xmm0
    00001223: 	psrldq	$0x8, %xmm0
    00001228: 	paddd	%xmm0, %xmm1
    0000122c: 	movdqa	%xmm1, %xmm0
    00001230: 	xorl	%r12d, %edx
    00001233: 	psrldq	$0x4, %xmm0
    00001238: 	imull	$0x1f40, %edx, %edx
    0000123e: 	paddd	%xmm0, %xmm1
    00001242: 	movd	%xmm1, %eax
    00001246: 	cmpl	%eax, %edx
    00001248: 	je	.Ltmp1993 # Offset: 4680
    0000124a: 	movl	current_test(%rip), %edx
    00001250: 	movq	%r14, %rsi
    00001253: 	movl	$0x1, %edi
    00001258: 	xorl	%eax, %eax
    0000125a: 	callq	__printf_chk@PLT # Offset: 4698
    0000125f: 	movl	iterations(%rip), %ecx
.Ltmp1993:
    00001265: 	addl	$0x1, %r13d
    00001269: 	cmpl	%ecx, %r13d
    0000126c: 	jl	.Ltmp1994 # Offset: 4716
.Ltmp1991:
    0000126e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001275: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000127c: 	subq	$0x20, %rax
    00001280: 	cmpq	%rax, %rbx
    00001283: 	je	.Ltmp1995 # Offset: 4739
    00001289: 	leaq	0x10(%rbx), %rdi
    0000128d: 	movq	0x68(%rsp), %r12
    00001292: 	movq	%rdi, (%rbx)
    00001295: 	movq	0x60(%rsp), %rbp
    0000129a: 	movq	%rbp, %rax
    0000129d: 	addq	%r12, %rax
    000012a0: 	je	.Ltmp1996 # Offset: 4768
    000012a2: 	testq	%rbp, %rbp
    000012a5: 	je	.Ltmp1997 # Offset: 4773
.Ltmp1996:
    000012ab: 	movq	%r12, 0x38(%rsp)
    000012b0: 	cmpq	$0xf, %r12
    000012b4: 	ja	.Ltmp1998 # Offset: 4788
    000012ba: 	cmpq	$0x1, %r12
    000012be: 	jne	.Ltmp1999 # Offset: 4798
    000012c4: 	movzbl	(%rbp), %eax
    000012c8: 	movb	%al, 0x10(%rbx)
.Ltmp2043:
    000012cb: 	movq	%r12, 0x8(%rbx)
    000012cf: 	movb	$0x0, (%rdi,%r12)
    000012d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012e2: 	addq	$0x20, %rax
    000012e6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012ed: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000012f4: 	je	.Ltmp2000 # Offset: 4852
.Ltmp2025:
    000012fa: 	movq	-0x20(%rax), %rbp
    000012fe: 	callq	clock@PLT # Offset: 4862
    00001303: 	pxor	%xmm0, %xmm0
    00001307: 	movq	%rax, end_time(%rip)
    0000130e: 	movq	%rbp, %rdi
    00001311: 	subq	start_time(%rip), %rax
    00001318: 	cvtsi2sd	%rax, %xmm0
    0000131d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001325: 	callq	_Z13record_resultdPKc # Offset: 4901
    0000132a: 	movq	0x60(%rsp), %rdi
    0000132f: 	cmpq	0x18(%rsp), %rdi
    00001334: 	je	.Ltmp2001 # Offset: 4916
    00001336: 	movq	0x70(%rsp), %rax
    0000133b: 	leaq	0x1(%rax), %rsi
    0000133f: 	callq	_ZdlPvm@PLT # Offset: 4927
.Ltmp2001:
    00001344: 	movq	0x40(%rsp), %rdi
    00001349: 	cmpq	0x28(%rsp), %rdi
    0000134e: 	je	.Ltmp2002 # Offset: 4942
    00001350: 	movq	0x50(%rsp), %rax
    00001355: 	leaq	0x1(%rax), %rsi
    00001359: 	callq	_ZdlPvm@PLT # Offset: 4953
.Ltmp2002:
    0000135e: 	movq	0x88(%rsp), %rax
    00001366: 	subq	%fs:0x28, %rax
    0000136f: 	jne	.Ltmp2003 # Offset: 4975
    00001375: 	addq	$0x98, %rsp
    0000137c: 	popq	%rbx
    0000137d: 	popq	%rbp
    0000137e: 	popq	%r12
    00001380: 	popq	%r13
    00001382: 	popq	%r14
    00001384: 	popq	%r15
    00001386: 	retq # Offset: 4998
.Ltmp1870:
    00001387: 	leaq	0x38(%rsp), %rsi
    0000138c: 	xorl	%edx, %edx
    0000138e: 	movq	%rbx, %rdi
    00001391: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5009
    00001396: 	movq	%rax, (%rbx)
    00001399: 	movq	%rax, %rdi
    0000139c: 	movq	0x38(%rsp), %rax
    000013a1: 	movq	%rax, 0x10(%rbx)
.Ltmp2034:
    000013a5: 	movq	%r14, %rdx
    000013a8: 	movq	%r15, %rsi
    000013ab: 	callq	memcpy@PLT # Offset: 5035
    000013b0: 	movq	0x38(%rsp), %r14
    000013b5: 	movq	(%rbx), %rdi
    000013b8: 	jmp	.Ltmp2004 # Offset: 5048
.Ltmp1989:
    000013bd: 	testq	%r14, %r14
    000013c0: 	jne	.Ltmp2005 # Offset: 5056
    000013c6: 	movq	0x18(%rsp), %rax
    000013cb: 	jmp	.Ltmp2006 # Offset: 5067
.Ltmp1973:
    000013d0: 	testq	%r14, %r14
    000013d3: 	jne	.Ltmp2007 # Offset: 5075
    000013d9: 	movq	0x18(%rsp), %rax
    000013de: 	jmp	.Ltmp2008 # Offset: 5086
.Ltmp1957:
    000013e3: 	testq	%r14, %r14
    000013e6: 	jne	.Ltmp2009 # Offset: 5094
    000013ec: 	movq	0x18(%rsp), %rax
    000013f1: 	jmp	.Ltmp2010 # Offset: 5105
.Ltmp1941:
    000013f6: 	testq	%r14, %r14
    000013f9: 	jne	.Ltmp2011 # Offset: 5113
    000013ff: 	movq	0x18(%rsp), %rax
    00001404: 	jmp	.Ltmp2012 # Offset: 5124
.Ltmp1893:
    00001409: 	testq	%r14, %r14
    0000140c: 	jne	.Ltmp2013 # Offset: 5132
    00001412: 	movq	0x18(%rsp), %rax
    00001417: 	jmp	.Ltmp2014 # Offset: 5143
.Ltmp1877:
    0000141c: 	testq	%r14, %r14
    0000141f: 	jne	.Ltmp2015 # Offset: 5151
    00001425: 	movq	0x18(%rsp), %rax
    0000142a: 	jmp	.Ltmp2016 # Offset: 5162
.Ltmp1925:
    0000142f: 	testq	%r14, %r14
    00001432: 	jne	.Ltmp2017 # Offset: 5170
    00001438: 	movq	0x18(%rsp), %rax
    0000143d: 	jmp	.Ltmp2018 # Offset: 5181
.Ltmp1909:
    00001442: 	testq	%r14, %r14
    00001445: 	jne	.Ltmp2019 # Offset: 5189
    0000144b: 	movq	0x18(%rsp), %rax
    00001450: 	jmp	.Ltmp2020 # Offset: 5200
.Ltmp1892:
    00001455: 	movq	0x20(%rsp), %rdi
    0000145a: 	leaq	0x38(%rsp), %rsi
    0000145f: 	xorl	%edx, %edx
    00001461: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5217
    00001466: 	movq	%rax, 0x60(%rsp)
    0000146b: 	movq	%rax, %rdi
    0000146e: 	movq	0x38(%rsp), %rax
    00001473: 	movq	%rax, 0x70(%rsp)
.Ltmp2055:
    00001478: 	movq	%r14, %rdx
    0000147b: 	movq	%r15, %rsi
    0000147e: 	callq	memcpy@PLT # Offset: 5246
    00001483: 	movq	0x38(%rsp), %r14
    00001488: 	movq	0x60(%rsp), %rax
    0000148d: 	jmp	.Ltmp2014 # Offset: 5261
.Ltmp1876:
    00001492: 	movq	0x20(%rsp), %rdi
    00001497: 	leaq	0x38(%rsp), %rsi
    0000149c: 	xorl	%edx, %edx
    0000149e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5278
    000014a3: 	movq	%rax, 0x60(%rsp)
    000014a8: 	movq	%rax, %rdi
    000014ab: 	movq	0x38(%rsp), %rax
    000014b0: 	movq	%rax, 0x70(%rsp)
.Ltmp2056:
    000014b5: 	movq	%r14, %rdx
    000014b8: 	movq	%r15, %rsi
    000014bb: 	callq	memcpy@PLT # Offset: 5307
    000014c0: 	movq	0x38(%rsp), %r14
    000014c5: 	movq	0x60(%rsp), %rax
    000014ca: 	jmp	.Ltmp2016 # Offset: 5322
.Ltmp1908:
    000014cf: 	movq	0x20(%rsp), %rdi
    000014d4: 	leaq	0x38(%rsp), %rsi
    000014d9: 	xorl	%edx, %edx
    000014db: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5339
    000014e0: 	movq	%rax, 0x60(%rsp)
    000014e5: 	movq	%rax, %rdi
    000014e8: 	movq	0x38(%rsp), %rax
    000014ed: 	movq	%rax, 0x70(%rsp)
.Ltmp2058:
    000014f2: 	movq	%r14, %rdx
    000014f5: 	movq	%r15, %rsi
    000014f8: 	callq	memcpy@PLT # Offset: 5368
    000014fd: 	movq	0x38(%rsp), %r14
    00001502: 	movq	0x60(%rsp), %rax
    00001507: 	jmp	.Ltmp2020 # Offset: 5383
.Ltmp1924:
    0000150c: 	movq	0x20(%rsp), %rdi
    00001511: 	leaq	0x38(%rsp), %rsi
    00001516: 	xorl	%edx, %edx
    00001518: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5400
    0000151d: 	movq	%rax, 0x60(%rsp)
    00001522: 	movq	%rax, %rdi
    00001525: 	movq	0x38(%rsp), %rax
    0000152a: 	movq	%rax, 0x70(%rsp)
.Ltmp2057:
    0000152f: 	movq	%r14, %rdx
    00001532: 	movq	%r15, %rsi
    00001535: 	callq	memcpy@PLT # Offset: 5429
    0000153a: 	movq	0x38(%rsp), %r14
    0000153f: 	movq	0x60(%rsp), %rax
    00001544: 	jmp	.Ltmp2018 # Offset: 5444
.Ltmp1940:
    00001549: 	movq	0x20(%rsp), %rdi
    0000154e: 	leaq	0x38(%rsp), %rsi
    00001553: 	xorl	%edx, %edx
    00001555: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5461
    0000155a: 	movq	%rax, 0x60(%rsp)
    0000155f: 	movq	%rax, %rdi
    00001562: 	movq	0x38(%rsp), %rax
    00001567: 	movq	%rax, 0x70(%rsp)
.Ltmp2054:
    0000156c: 	movq	%r14, %rdx
    0000156f: 	movq	%r15, %rsi
    00001572: 	callq	memcpy@PLT # Offset: 5490
    00001577: 	movq	0x38(%rsp), %r14
    0000157c: 	movq	0x60(%rsp), %rax
    00001581: 	jmp	.Ltmp2012 # Offset: 5505
.Ltmp1956:
    00001586: 	movq	0x20(%rsp), %rdi
    0000158b: 	leaq	0x38(%rsp), %rsi
    00001590: 	xorl	%edx, %edx
    00001592: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5522
    00001597: 	movq	%rax, 0x60(%rsp)
    0000159c: 	movq	%rax, %rdi
    0000159f: 	movq	0x38(%rsp), %rax
    000015a4: 	movq	%rax, 0x70(%rsp)
.Ltmp2053:
    000015a9: 	movq	%r14, %rdx
    000015ac: 	movq	%r15, %rsi
    000015af: 	callq	memcpy@PLT # Offset: 5551
    000015b4: 	movq	0x38(%rsp), %r14
    000015b9: 	movq	0x60(%rsp), %rax
    000015be: 	jmp	.Ltmp2010 # Offset: 5566
.Ltmp1988:
    000015c3: 	movq	0x20(%rsp), %rdi
    000015c8: 	leaq	0x38(%rsp), %rsi
    000015cd: 	xorl	%edx, %edx
    000015cf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5583
    000015d4: 	movq	%rax, 0x60(%rsp)
    000015d9: 	movq	%rax, %rdi
    000015dc: 	movq	0x38(%rsp), %rax
    000015e1: 	movq	%rax, 0x70(%rsp)
.Ltmp2051:
    000015e6: 	movq	%r14, %rdx
    000015e9: 	movq	%r15, %rsi
    000015ec: 	callq	memcpy@PLT # Offset: 5612
    000015f1: 	movq	0x38(%rsp), %r14
    000015f6: 	movq	0x60(%rsp), %rax
    000015fb: 	jmp	.Ltmp2006 # Offset: 5627
.Ltmp1972:
    00001600: 	movq	0x20(%rsp), %rdi
    00001605: 	leaq	0x38(%rsp), %rsi
    0000160a: 	xorl	%edx, %edx
    0000160c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5644
    00001611: 	movq	%rax, 0x60(%rsp)
    00001616: 	movq	%rax, %rdi
    00001619: 	movq	0x38(%rsp), %rax
    0000161e: 	movq	%rax, 0x70(%rsp)
.Ltmp2052:
    00001623: 	movq	%r14, %rdx
    00001626: 	movq	%r15, %rsi
    00001629: 	callq	memcpy@PLT # Offset: 5673
    0000162e: 	movq	0x38(%rsp), %r14
    00001633: 	movq	0x60(%rsp), %rax
    00001638: 	jmp	.Ltmp2008 # Offset: 5688
.Ltmp1968:
    0000163d: 	movq	-0x8(%rdx), %rax
    00001641: 	addq	$0x200, %rax
    00001647: 	jmp	.Ltmp2021 # Offset: 5703
.Ltmp1979:
    0000164c: 	movq	0x20(%rsp), %rsi
    00001651: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001658: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5720
    0000165d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001664: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000166b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001672: 	jne	.Ltmp2022 # Offset: 5746
.Ltmp1984:
    00001678: 	movq	-0x8(%rdx), %rax
    0000167c: 	addq	$0x200, %rax
    00001682: 	jmp	.Ltmp2022 # Offset: 5762
.Ltmp1963:
    00001687: 	movq	0x20(%rsp), %rsi
    0000168c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001693: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5779
    00001698: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000169f: 	jmp	.Ltmp2023 # Offset: 5791
.Ltmp1952:
    000016a4: 	movq	-0x8(%rdx), %rax
    000016a8: 	addq	$0x200, %rax
    000016ae: 	jmp	.Ltmp2024 # Offset: 5806
.Ltmp1995:
    000016b3: 	movq	0x20(%rsp), %rsi
    000016b8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5823
    000016c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016cb: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016d9: 	jne	.Ltmp2025 # Offset: 5849
.Ltmp2000:
    000016df: 	movq	-0x8(%rdx), %rax
    000016e3: 	addq	$0x200, %rax
    000016e9: 	jmp	.Ltmp2025 # Offset: 5865
.Ltmp1915:
    000016ee: 	movq	0x20(%rsp), %rsi
    000016f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5882
    000016ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001706: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000170d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001714: 	jne	.Ltmp2026 # Offset: 5908
.Ltmp1920:
    0000171a: 	movq	-0x8(%rdx), %rax
    0000171e: 	addq	$0x200, %rax
    00001724: 	jmp	.Ltmp2026 # Offset: 5924
.Ltmp1888:
    00001729: 	movq	-0x8(%rdx), %rax
    0000172d: 	addq	$0x200, %rax
    00001733: 	jmp	.Ltmp2027 # Offset: 5939
.Ltmp1947:
    00001738: 	movq	0x20(%rsp), %rsi
    0000173d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001744: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5956
    00001749: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001750: 	jmp	.Ltmp2028 # Offset: 5968
.Ltmp1899:
    00001755: 	movq	0x20(%rsp), %rsi
    0000175a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001761: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5985
    00001766: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000176d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001774: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000177b: 	jne	.Ltmp2029 # Offset: 6011
.Ltmp1904:
    00001781: 	movq	-0x8(%rdx), %rax
    00001785: 	addq	$0x200, %rax
    0000178b: 	jmp	.Ltmp2029 # Offset: 6027
.Ltmp1867:
    00001790: 	movq	0x20(%rsp), %rsi
    00001795: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000179c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6044
    000017a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017a8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017b6: 	jne	.Ltmp2030 # Offset: 6070
.Ltmp1872:
    000017bc: 	movq	-0x8(%rdx), %rax
    000017c0: 	addq	$0x200, %rax
    000017c6: 	jmp	.Ltmp2030 # Offset: 6086
.Ltmp1936:
    000017cb: 	movq	-0x8(%rdx), %rax
    000017cf: 	addq	$0x200, %rax
    000017d5: 	jmp	.Ltmp2031 # Offset: 6101
.Ltmp1883:
    000017da: 	movq	0x20(%rsp), %rsi
    000017df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6118
    000017eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017f2: 	jmp	.Ltmp2032 # Offset: 6130
.Ltmp1931:
    000017f7: 	movq	0x20(%rsp), %rsi
    000017fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001803: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6147
    00001808: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000180f: 	jmp	.Ltmp2033 # Offset: 6159
.Ltmp1871:
    00001814: 	testq	%r14, %r14
    00001817: 	je	.Ltmp2004 # Offset: 6167
    0000181d: 	jmp	.Ltmp2034 # Offset: 6173
    00001822: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1903:
    00001828: 	testq	%r14, %r14
    0000182b: 	je	.Ltmp2035 # Offset: 6187
    00001831: 	jmp	.Ltmp2036 # Offset: 6193
    00001836: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1935:
    00001840: 	testq	%r14, %r14
    00001843: 	je	.Ltmp2037 # Offset: 6211
.Ltmp2047:
    00001849: 	movq	%r14, %rdx
    0000184c: 	movq	%r15, %rsi
    0000184f: 	callq	memcpy@PLT # Offset: 6223
    00001854: 	movq	0x38(%rsp), %r14
    00001859: 	movq	(%rbx), %rdi
    0000185c: 	jmp	.Ltmp2037 # Offset: 6236
.Ltmp1967:
    00001861: 	testq	%r14, %r14
    00001864: 	je	.Ltmp2038 # Offset: 6244
    0000186a: 	jmp	.Ltmp2039 # Offset: 6250
    0000186f: 	nop # Size: 1
.Ltmp1887:
    00001870: 	testq	%r14, %r14
    00001873: 	je	.Ltmp2040 # Offset: 6259
.Ltmp2049:
    00001879: 	movq	%r14, %rdx
    0000187c: 	movq	%r15, %rsi
    0000187f: 	callq	memcpy@PLT # Offset: 6271
    00001884: 	movq	0x38(%rsp), %r14
    00001889: 	movq	(%rbx), %rdi
    0000188c: 	jmp	.Ltmp2040 # Offset: 6284
.Ltmp1983:
    00001891: 	testq	%r14, %r14
    00001894: 	je	.Ltmp2041 # Offset: 6292
    0000189a: 	jmp	.Ltmp2042 # Offset: 6298
    0000189f: 	nop # Size: 1
.Ltmp1999:
    000018a0: 	testq	%r12, %r12
    000018a3: 	je	.Ltmp2043 # Offset: 6307
.Ltmp2048:
    000018a9: 	movq	%r12, %rdx
    000018ac: 	movq	%rbp, %rsi
    000018af: 	callq	memcpy@PLT # Offset: 6319
    000018b4: 	movq	0x38(%rsp), %r12
    000018b9: 	movq	(%rbx), %rdi
    000018bc: 	jmp	.Ltmp2043 # Offset: 6332
.Ltmp1951:
    000018c1: 	testq	%r14, %r14
    000018c4: 	je	.Ltmp2044 # Offset: 6340
    000018ca: 	jmp	.Ltmp2045 # Offset: 6346
    000018cf: 	nop # Size: 1
.Ltmp1919:
    000018d0: 	testq	%r14, %r14
    000018d3: 	je	.Ltmp2046 # Offset: 6355
.Ltmp2050:
    000018d9: 	movq	%r14, %rdx
    000018dc: 	movq	%r15, %rsi
    000018df: 	callq	memcpy@PLT # Offset: 6367
    000018e4: 	movq	0x38(%rsp), %r14
    000018e9: 	movq	(%rbx), %rdi
    000018ec: 	jmp	.Ltmp2046 # Offset: 6380
.Ltmp1902:
    000018f1: 	leaq	0x38(%rsp), %rsi
    000018f6: 	xorl	%edx, %edx
    000018f8: 	movq	%rbx, %rdi
    000018fb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6395
    00001900: 	movq	%rax, (%rbx)
    00001903: 	movq	%rax, %rdi
    00001906: 	movq	0x38(%rsp), %rax
    0000190b: 	movq	%rax, 0x10(%rbx)
.Ltmp2036:
    0000190f: 	movq	%r14, %rdx
    00001912: 	movq	%r15, %rsi
    00001915: 	callq	memcpy@PLT # Offset: 6421
    0000191a: 	movq	0x38(%rsp), %r14
    0000191f: 	movq	(%rbx), %rdi
    00001922: 	jmp	.Ltmp2035 # Offset: 6434
.Ltmp1966:
    00001927: 	leaq	0x38(%rsp), %rsi
    0000192c: 	xorl	%edx, %edx
    0000192e: 	movq	%rbx, %rdi
    00001931: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6449
    00001936: 	movq	%rax, (%rbx)
    00001939: 	movq	%rax, %rdi
    0000193c: 	movq	0x38(%rsp), %rax
    00001941: 	movq	%rax, 0x10(%rbx)
.Ltmp2039:
    00001945: 	movq	%r14, %rdx
    00001948: 	movq	%r15, %rsi
    0000194b: 	callq	memcpy@PLT # Offset: 6475
    00001950: 	movq	0x38(%rsp), %r14
    00001955: 	movq	(%rbx), %rdi
    00001958: 	jmp	.Ltmp2038 # Offset: 6488
.Ltmp1934:
    0000195d: 	leaq	0x38(%rsp), %rsi
    00001962: 	xorl	%edx, %edx
    00001964: 	movq	%rbx, %rdi
    00001967: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6503
    0000196c: 	movq	%rax, (%rbx)
    0000196f: 	movq	%rax, %rdi
    00001972: 	movq	0x38(%rsp), %rax
    00001977: 	movq	%rax, 0x10(%rbx)
    0000197b: 	jmp	.Ltmp2047 # Offset: 6523
.Ltmp1982:
    00001980: 	leaq	0x38(%rsp), %rsi
    00001985: 	xorl	%edx, %edx
    00001987: 	movq	%rbx, %rdi
    0000198a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6538
    0000198f: 	movq	%rax, (%rbx)
    00001992: 	movq	%rax, %rdi
    00001995: 	movq	0x38(%rsp), %rax
    0000199a: 	movq	%rax, 0x10(%rbx)
.Ltmp2042:
    0000199e: 	movq	%r14, %rdx
    000019a1: 	movq	%r15, %rsi
    000019a4: 	callq	memcpy@PLT # Offset: 6564
    000019a9: 	movq	0x38(%rsp), %r14
    000019ae: 	movq	(%rbx), %rdi
    000019b1: 	jmp	.Ltmp2041 # Offset: 6577
.Ltmp1950:
    000019b6: 	leaq	0x38(%rsp), %rsi
    000019bb: 	xorl	%edx, %edx
    000019bd: 	movq	%rbx, %rdi
    000019c0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6592
    000019c5: 	movq	%rax, (%rbx)
    000019c8: 	movq	%rax, %rdi
    000019cb: 	movq	0x38(%rsp), %rax
    000019d0: 	movq	%rax, 0x10(%rbx)
.Ltmp2045:
    000019d4: 	movq	%r14, %rdx
    000019d7: 	movq	%r15, %rsi
    000019da: 	callq	memcpy@PLT # Offset: 6618
    000019df: 	movq	0x38(%rsp), %r14
    000019e4: 	movq	(%rbx), %rdi
    000019e7: 	jmp	.Ltmp2044 # Offset: 6631
.Ltmp1998:
    000019ec: 	leaq	0x38(%rsp), %rsi
    000019f1: 	xorl	%edx, %edx
    000019f3: 	movq	%rbx, %rdi
    000019f6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6646
    000019fb: 	movq	%rax, (%rbx)
    000019fe: 	movq	%rax, %rdi
    00001a01: 	movq	0x38(%rsp), %rax
    00001a06: 	movq	%rax, 0x10(%rbx)
    00001a0a: 	jmp	.Ltmp2048 # Offset: 6666
.Ltmp1886:
    00001a0f: 	leaq	0x38(%rsp), %rsi
    00001a14: 	xorl	%edx, %edx
    00001a16: 	movq	%rbx, %rdi
    00001a19: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6681
    00001a1e: 	movq	%rax, (%rbx)
    00001a21: 	movq	%rax, %rdi
    00001a24: 	movq	0x38(%rsp), %rax
    00001a29: 	movq	%rax, 0x10(%rbx)
    00001a2d: 	jmp	.Ltmp2049 # Offset: 6701
.Ltmp1918:
    00001a32: 	leaq	0x38(%rsp), %rsi
    00001a37: 	xorl	%edx, %edx
    00001a39: 	movq	%rbx, %rdi
    00001a3c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6716
    00001a41: 	movq	%rax, (%rbx)
    00001a44: 	movq	%rax, %rdi
    00001a47: 	movq	0x38(%rsp), %rax
    00001a4c: 	movq	%rax, 0x10(%rbx)
    00001a50: 	jmp	.Ltmp2050 # Offset: 6736
.Ltmp1875:
    00001a55: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a5c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6748
.Ltmp1878:
    00001a61: 	leaq	DATAat0x3d182(%rip), %rdi
    00001a68: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6760
.Ltmp1885:
    00001a6d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a74: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6772
.Ltmp1891:
    00001a79: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a80: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6784
.Ltmp1894:
    00001a85: 	leaq	DATAat0x3d182(%rip), %rdi
    00001a8c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6796
.Ltmp1901:
    00001a91: 	leaq	DATAat0x3d158(%rip), %rdi
    00001a98: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6808
.Ltmp1907:
    00001a9d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001aa4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6820
.Ltmp1910:
    00001aa9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ab0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6832
.Ltmp1917:
    00001ab5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001abc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6844
.Ltmp1923:
    00001ac1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ac8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6856
.Ltmp1926:
    00001acd: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ad4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6868
.Ltmp1933:
    00001ad9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ae0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6880
.Ltmp1939:
    00001ae5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001aec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6892
.Ltmp1942:
    00001af1: 	leaq	DATAat0x3d182(%rip), %rdi
    00001af8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6904
.Ltmp1949:
    00001afd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b04: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6916
.Ltmp1955:
    00001b09: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b10: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6928
.Ltmp1958:
    00001b15: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b1c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6940
.Ltmp1965:
    00001b21: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b28: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6952
.Ltmp1971:
    00001b2d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b34: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6964
.Ltmp1974:
    00001b39: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b40: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6976
.Ltmp1981:
    00001b45: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b4c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6988
.Ltmp1987:
    00001b51: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b58: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7000
.Ltmp1990:
    00001b5d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001b64: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7012
.Ltmp1997:
    00001b69: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b70: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7024
.Ltmp2003:
    00001b75: 	callq	__stack_chk_fail@PLT # Offset: 7029
.Ltmp1869:
    00001b7a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b81: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7041
.Ltmp2005:
    00001b86: 	movq	0x18(%rsp), %rdi
    00001b8b: 	jmp	.Ltmp2051 # Offset: 7051
.Ltmp2007:
    00001b90: 	movq	0x18(%rsp), %rdi
    00001b95: 	jmp	.Ltmp2052 # Offset: 7061
.Ltmp2009:
    00001b9a: 	movq	0x18(%rsp), %rdi
    00001b9f: 	jmp	.Ltmp2053 # Offset: 7071
.Ltmp2011:
    00001ba4: 	movq	0x18(%rsp), %rdi
    00001ba9: 	jmp	.Ltmp2054 # Offset: 7081
.Ltmp2013:
    00001bae: 	movq	0x18(%rsp), %rdi
    00001bb3: 	jmp	.Ltmp2055 # Offset: 7091
.Ltmp2015:
    00001bb8: 	movq	0x18(%rsp), %rdi
    00001bbd: 	jmp	.Ltmp2056 # Offset: 7101
.Ltmp2017:
    00001bc2: 	movq	0x18(%rsp), %rdi
    00001bc7: 	jmp	.Ltmp2057 # Offset: 7111
.Ltmp2019:
    00001bcc: 	movq	0x18(%rsp), %rdi
    00001bd1: 	jmp	.Ltmp2058 # Offset: 7121
    00001bd6: 	endbr64
.Ltmp2060:
    00001bda: 	movq	%rax, %rbp
    00001bdd: 	jmp	.Ltmp2059 # Offset: 7133
    00001bdf: 	endbr64
    00001be3: 	jmp	.Ltmp2060 # Offset: 7139
    00001be5: 	endbr64
    00001be9: 	jmp	.Ltmp2060 # Offset: 7145
    00001beb: 	endbr64
    00001bef: 	jmp	.Ltmp2060 # Offset: 7151
    00001bf1: 	endbr64
    00001bf5: 	jmp	.Ltmp2060 # Offset: 7157
    00001bf7: 	endbr64
    00001bfb: 	jmp	.Ltmp2060 # Offset: 7163
    00001bfd: 	endbr64
    00001c01: 	jmp	.Ltmp2060 # Offset: 7169
    00001c03: 	endbr64
    00001c07: 	movq	%rax, %rbp
    00001c0a: 	jmp	.Ltmp2061 # Offset: 7178
    00001c0c: 	endbr64
    00001c10: 	jmp	.Ltmp2060 # Offset: 7184
    00001c12: 	endbr64
    00001c16: 	jmp	.Ltmp2060 # Offset: 7190
    00001c18: 	endbr64
    00001c1c: 	jmp	.Ltmp2060 # Offset: 7196
    00001c1e: 	endbr64
    00001c22: 	jmp	.Ltmp2060 # Offset: 7202
.Ltmp2059:
    00001c24: 	movq	0x60(%rsp), %rdi
    00001c29: 	cmpq	0x18(%rsp), %rdi
    00001c2e: 	je	.Ltmp2061 # Offset: 7214
    00001c30: 	movq	0x70(%rsp), %rax
    00001c35: 	leaq	0x1(%rax), %rsi
    00001c39: 	callq	_ZdlPvm@PLT # Offset: 7225
.Ltmp2061:
    00001c3e: 	movq	0x40(%rsp), %rdi
    00001c43: 	cmpq	0x28(%rsp), %rdi
    00001c48: 	je	.Ltmp2062 # Offset: 7240
    00001c4a: 	movq	0x50(%rsp), %rax
    00001c4f: 	leaq	0x1(%rax), %rsi
    00001c53: 	callq	_ZdlPvm@PLT # Offset: 7251
.Ltmp2062:
    00001c58: 	movq	%rbp, %rdi
    00001c5b: 	callq	_Unwind_Resume@PLT # Offset: 7259
    00001c60: 	endbr64
    00001c64: 	jmp	.Ltmp2060 # Offset: 7268
    00001c69: 	endbr64
    00001c6d: 	jmp	.Ltmp2060 # Offset: 7277
    00001c72: 	endbr64
    00001c76: 	jmp	.Ltmp2060 # Offset: 7286
    00001c7b: 	endbr64
    00001c7f: 	jmp	.Ltmp2060 # Offset: 7295
    00001c84: 	endbr64
    00001c88: 	jmp	.Ltmp2060 # Offset: 7304
    00001c8d: 	endbr64
    00001c91: 	jmp	.Ltmp2060 # Offset: 7313
    00001c96: 	endbr64
    00001c9a: 	jmp	.Ltmp2060 # Offset: 7322
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyIjENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyImENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 146
  State       : disassembled
  Address     : 0x15b20
  Size        : 0x1fea
  MaxSize     : 0x1ff0
  Offset      : 0x15b20
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyImENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0145:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0xb8, %rsp
    0000001b: 	movq	%rdx, 0x20(%rsp)
    00000020: 	leaq	0x90(%rsp), %rsi
    00000028: 	leaq	0x80(%rsp), %rdi
    00000030: 	movl	$0xd, %edx
    00000035: 	movq	%rcx, 0x28(%rsp)
    0000003a: 	movq	%r8, 0x30(%rsp)
    0000003f: 	movq	%fs:0x28, %rax
    00000048: 	movq	%rax, 0xa8(%rsp)
    00000050: 	xorl	%eax, %eax
    00000052: 	leaq	0x70(%rsp), %rax
    00000057: 	movq	%rsi, 0x38(%rsp)
    0000005c: 	movq	%rax, 0x48(%rsp)
    00000061: 	movq	%rax, 0x60(%rsp)
    00000066: 	movabsq	$0x745f3436746e6975, %rax
    00000070: 	movq	%rsi, 0x80(%rsp)
    00000078: 	leaq	DATAat0x3d1f1(%rip), %rsi
    0000007f: 	movq	%rax, 0x70(%rsp)
    00000084: 	movq	$0x8, 0x68(%rsp)
    0000008d: 	movb	$0x0, 0x78(%rsp)
    00000092: 	movq	%rdi, 0x40(%rsp)
    00000097: 	movq	%rax, 0x90(%rsp)
    0000009f: 	movq	$0x8, 0x88(%rsp)
    000000ab: 	movb	$0x0, 0x98(%rsp)
    000000b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 179
    000000b8: 	callq	clock@PLT # Offset: 184
    000000bd: 	movl	iterations(%rip), %ecx
    000000c3: 	movq	%rax, start_time(%rip)
    000000ca: 	testl	%ecx, %ecx
    000000cc: 	jle	.Ltmp2063 # Offset: 204
    000000d2: 	movq	%r12, %xmm3
    000000d7: 	xorl	%r13d, %r13d
    000000da: 	leaq	0xfa00(%rbp), %rbx
    000000e1: 	movabsq	$-0x8000000000000000, %r14
    000000eb: 	punpcklqdq	%xmm3, %xmm3
    000000ef: 	leaq	DATAat0x3d1d8(%rip), %r15
    000000f6: 	movaps	%xmm3, (%rsp)
    000000fa: 	movsd	DATAat0x3d6b0(%rip), %xmm3
    00000102: 	movsd	%xmm3, 0x18(%rsp)
    00000108: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2067:
    00000110: 	movq	%rbp, %rax
    00000113: 	pxor	%xmm1, %xmm1
    00000117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2064:
    00000120: 	movdqu	(%rax), %xmm0
    00000124: 	pand	(%rsp), %xmm0
    00000129: 	addq	$0x10, %rax
    0000012d: 	paddq	%xmm0, %xmm1
    00000131: 	cmpq	%rax, %rbx
    00000134: 	jne	.Ltmp2064 # Offset: 308
    00000136: 	movsd	init_value(%rip), %xmm0
    0000013e: 	comisd	0x18(%rsp), %xmm0
    00000144: 	jae	.Ltmp2065 # Offset: 324
    0000014a: 	cvttsd2si	%xmm0, %rax
.Ltmp2213:
    0000014f: 	andq	%r12, %rax
    00000152: 	movdqa	%xmm1, %xmm0
    00000156: 	imulq	$0x1f40, %rax, %rdx
    0000015d: 	psrldq	$0x8, %xmm0
    00000162: 	paddq	%xmm0, %xmm1
    00000166: 	movq	%xmm1, %rax
    0000016b: 	cmpq	%rax, %rdx
    0000016e: 	je	.Ltmp2066 # Offset: 366
    00000170: 	movl	current_test(%rip), %edx
    00000176: 	movq	%r15, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	xorl	%eax, %eax
    00000180: 	callq	__printf_chk@PLT # Offset: 384
    00000185: 	movl	iterations(%rip), %ecx
.Ltmp2066:
    0000018b: 	addl	$0x1, %r13d
    0000018f: 	cmpl	%ecx, %r13d
    00000192: 	jl	.Ltmp2067 # Offset: 402
.Ltmp2063:
    00000198: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000019f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000001a6: 	subq	$0x20, %rax
    000001aa: 	cmpq	%rax, %rbx
    000001ad: 	je	.Ltmp2068 # Offset: 429
    000001b3: 	leaq	0x10(%rbx), %rdi
    000001b7: 	movq	0x88(%rsp), %r13
    000001bf: 	movq	%rdi, (%rbx)
    000001c2: 	movq	0x80(%rsp), %r14
    000001ca: 	movq	%r14, %rax
    000001cd: 	addq	%r13, %rax
    000001d0: 	je	.Ltmp2069 # Offset: 464
    000001d2: 	testq	%r14, %r14
    000001d5: 	je	.Ltmp2070 # Offset: 469
.Ltmp2069:
    000001db: 	movq	%r13, 0x58(%rsp)
    000001e0: 	cmpq	$0xf, %r13
    000001e4: 	ja	.Ltmp2071 # Offset: 484
    000001ea: 	cmpq	$0x1, %r13
    000001ee: 	jne	.Ltmp2072 # Offset: 494
    000001f4: 	movzbl	(%r14), %eax
    000001f8: 	movb	%al, 0x10(%rbx)
.Ltmp2214:
    000001fb: 	movq	%r13, 0x8(%rbx)
    000001ff: 	movb	$0x0, (%rdi,%r13)
    00000204: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020b: 	addq	$0x20, %rax
    0000020f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2242:
    00000216: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000224: 	je	.Ltmp2073 # Offset: 548
.Ltmp2239:
    0000022a: 	movq	-0x20(%rax), %r13
    0000022e: 	callq	clock@PLT # Offset: 558
    00000233: 	pxor	%xmm0, %xmm0
    00000237: 	movq	%rax, end_time(%rip)
    0000023e: 	movq	%r13, %rdi
    00000241: 	subq	start_time(%rip), %rax
    00000248: 	cvtsi2sd	%rax, %xmm0
    0000024d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000255: 	callq	_Z13record_resultdPKc # Offset: 597
    0000025a: 	movq	0x80(%rsp), %rdi
    00000262: 	cmpq	0x38(%rsp), %rdi
    00000267: 	je	.Ltmp2074 # Offset: 615
    00000269: 	movq	0x90(%rsp), %rax
    00000271: 	leaq	0x1(%rax), %rsi
    00000275: 	callq	_ZdlPvm@PLT # Offset: 629
.Ltmp2074:
    0000027a: 	movq	0x38(%rsp), %rax
    0000027f: 	movq	0x60(%rsp), %r14
    00000284: 	movq	0x68(%rsp), %r13
    00000289: 	movq	%rax, 0x80(%rsp)
    00000291: 	movq	%r14, %rax
    00000294: 	addq	%r13, %rax
    00000297: 	je	.Ltmp2075 # Offset: 663
    00000299: 	testq	%r14, %r14
    0000029c: 	je	.Ltmp2076 # Offset: 668
.Ltmp2075:
    000002a2: 	movq	%r13, 0x58(%rsp)
    000002a7: 	cmpq	$0xf, %r13
    000002ab: 	ja	.Ltmp2077 # Offset: 683
    000002b1: 	cmpq	$0x1, %r13
    000002b5: 	jne	.Ltmp2078 # Offset: 693
    000002bb: 	movzbl	(%r14), %eax
    000002bf: 	movb	%al, 0x90(%rsp)
    000002c6: 	movq	0x38(%rsp), %rax
.Ltmp2236:
    000002cb: 	movq	%r13, 0x88(%rsp)
    000002d3: 	movb	$0x0, (%rax,%r13)
    000002d8: 	movabsq	$0x3fffffffffffffff, %rax
    000002e2: 	subq	0x88(%rsp), %rax
    000002ea: 	cmpq	$0x15, %rax
    000002ee: 	jbe	.Ltmp2079 # Offset: 750
    000002f4: 	movq	0x40(%rsp), %rdi
    000002f9: 	movl	$0x16, %edx
    000002fe: 	leaq	DATAat0x3d1e8(%rip), %rsi
    00000305: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 773
    0000030a: 	callq	clock@PLT # Offset: 778
    0000030f: 	movl	iterations(%rip), %ecx
    00000315: 	movq	%rax, start_time(%rip)
    0000031c: 	testl	%ecx, %ecx
    0000031e: 	jle	.Ltmp2080 # Offset: 798
    00000324: 	movsd	DATAat0x3d6b0(%rip), %xmm4
    0000032c: 	movq	0x28(%rsp), %rax
    00000331: 	xorl	%r13d, %r13d
    00000334: 	leaq	0xfa00(%rbp), %rbx
    0000033b: 	andq	0x30(%rsp), %rax
    00000340: 	andq	0x20(%rsp), %rax
    00000345: 	movabsq	$-0x8000000000000000, %r14
    0000034f: 	andq	%r12, %rax
    00000352: 	movsd	%xmm4, 0x18(%rsp)
    00000358: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000035f: 	movq	%rax, %xmm4
    00000364: 	punpcklqdq	%xmm4, %xmm4
    00000368: 	movaps	%xmm4, (%rsp)
    0000036c: 	nopl	(%rax) # Size: 4
.Ltmp2084:
    00000370: 	movq	%rbp, %rax
    00000373: 	pxor	%xmm1, %xmm1
    00000377: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2081:
    00000380: 	movdqu	(%rax), %xmm0
    00000384: 	pand	(%rsp), %xmm0
    00000389: 	addq	$0x10, %rax
    0000038d: 	paddq	%xmm0, %xmm1
    00000391: 	cmpq	%rbx, %rax
    00000394: 	jne	.Ltmp2081 # Offset: 916
    00000396: 	movsd	init_value(%rip), %xmm0
    0000039e: 	comisd	0x18(%rsp), %xmm0
    000003a4: 	jae	.Ltmp2082 # Offset: 932
    000003aa: 	cvttsd2si	%xmm0, %rax
.Ltmp2215:
    000003af: 	movq	0x28(%rsp), %rdx
    000003b4: 	andq	0x30(%rsp), %rax
    000003b9: 	movdqa	%xmm1, %xmm0
    000003bd: 	psrldq	$0x8, %xmm0
    000003c2: 	andq	%rax, %rdx
    000003c5: 	andq	0x20(%rsp), %rdx
    000003ca: 	paddq	%xmm0, %xmm1
    000003ce: 	andq	%r12, %rdx
    000003d1: 	movq	%xmm1, %rax
    000003d6: 	imulq	$0x1f40, %rdx, %rdx
    000003dd: 	cmpq	%rax, %rdx
    000003e0: 	je	.Ltmp2083 # Offset: 992
    000003e2: 	movl	current_test(%rip), %edx
    000003e8: 	movq	%r15, %rsi
    000003eb: 	movl	$0x1, %edi
    000003f0: 	xorl	%eax, %eax
    000003f2: 	callq	__printf_chk@PLT # Offset: 1010
    000003f7: 	movl	iterations(%rip), %ecx
.Ltmp2083:
    000003fd: 	addl	$0x1, %r13d
    00000401: 	cmpl	%ecx, %r13d
    00000404: 	jl	.Ltmp2084 # Offset: 1028
.Ltmp2080:
    0000040a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000411: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000418: 	subq	$0x20, %rax
    0000041c: 	cmpq	%rax, %rbx
    0000041f: 	je	.Ltmp2085 # Offset: 1055
    00000425: 	leaq	0x10(%rbx), %rdi
    00000429: 	movq	0x88(%rsp), %r13
    00000431: 	movq	%rdi, (%rbx)
    00000434: 	movq	0x80(%rsp), %r14
    0000043c: 	movq	%r14, %rax
    0000043f: 	addq	%r13, %rax
    00000442: 	je	.Ltmp2086 # Offset: 1090
    00000444: 	testq	%r14, %r14
    00000447: 	je	.Ltmp2087 # Offset: 1095
.Ltmp2086:
    0000044d: 	movq	%r13, 0x58(%rsp)
    00000452: 	cmpq	$0xf, %r13
    00000456: 	ja	.Ltmp2088 # Offset: 1110
    0000045c: 	cmpq	$0x1, %r13
    00000460: 	jne	.Ltmp2089 # Offset: 1120
    00000466: 	movzbl	(%r14), %eax
    0000046a: 	movb	%al, 0x10(%rbx)
.Ltmp2259:
    0000046d: 	movq	%r13, 0x8(%rbx)
    00000471: 	movb	$0x0, (%rdi,%r13)
    00000476: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000047d: 	addq	$0x20, %rax
    00000481: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2247:
    00000488: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000048f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000496: 	je	.Ltmp2090 # Offset: 1174
.Ltmp2246:
    0000049c: 	movq	-0x20(%rax), %r13
    000004a0: 	callq	clock@PLT # Offset: 1184
    000004a5: 	pxor	%xmm0, %xmm0
    000004a9: 	movq	%rax, end_time(%rip)
    000004b0: 	movq	%r13, %rdi
    000004b3: 	subq	start_time(%rip), %rax
    000004ba: 	cvtsi2sd	%rax, %xmm0
    000004bf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004c7: 	callq	_Z13record_resultdPKc # Offset: 1223
    000004cc: 	movq	0x80(%rsp), %rdi
    000004d4: 	cmpq	0x38(%rsp), %rdi
    000004d9: 	je	.Ltmp2091 # Offset: 1241
    000004db: 	movq	0x90(%rsp), %rax
    000004e3: 	leaq	0x1(%rax), %rsi
    000004e7: 	callq	_ZdlPvm@PLT # Offset: 1255
.Ltmp2091:
    000004ec: 	movq	0x38(%rsp), %rax
    000004f1: 	movq	0x60(%rsp), %r14
    000004f6: 	movq	0x68(%rsp), %r13
    000004fb: 	movq	%rax, 0x80(%rsp)
    00000503: 	movq	%r14, %rax
    00000506: 	addq	%r13, %rax
    00000509: 	je	.Ltmp2092 # Offset: 1289
    0000050b: 	testq	%r14, %r14
    0000050e: 	je	.Ltmp2093 # Offset: 1294
.Ltmp2092:
    00000514: 	movq	%r13, 0x58(%rsp)
    00000519: 	cmpq	$0xf, %r13
    0000051d: 	ja	.Ltmp2094 # Offset: 1309
    00000523: 	cmpq	$0x1, %r13
    00000527: 	jne	.Ltmp2095 # Offset: 1319
    0000052d: 	movzbl	(%r14), %eax
    00000531: 	movb	%al, 0x90(%rsp)
    00000538: 	movq	0x38(%rsp), %rax
.Ltmp2238:
    0000053d: 	movq	%r13, 0x88(%rsp)
    00000545: 	movb	$0x0, (%rax,%r13)
    0000054a: 	movabsq	$0x3fffffffffffffff, %rax
    00000554: 	subq	0x88(%rsp), %rax
    0000055c: 	cmpq	$0x16, %rax
    00000560: 	jbe	.Ltmp2096 # Offset: 1376
    00000566: 	movq	0x40(%rsp), %rdi
    0000056b: 	movl	$0x17, %edx
    00000570: 	leaq	DATAat0x3d1ff(%rip), %rsi
    00000577: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1399
    0000057c: 	callq	clock@PLT # Offset: 1404
    00000581: 	movl	iterations(%rip), %ecx
    00000587: 	movq	%rax, start_time(%rip)
    0000058e: 	testl	%ecx, %ecx
    00000590: 	jle	.Ltmp2097 # Offset: 1424
    00000596: 	movsd	DATAat0x3d6b0(%rip), %xmm2
    0000059e: 	movq	0x28(%rsp), %rax
    000005a3: 	xorl	%r13d, %r13d
    000005a6: 	leaq	0xfa00(%rbp), %rbx
    000005ad: 	andq	0x30(%rsp), %rax
    000005b2: 	andq	0x20(%rsp), %rax
    000005b7: 	leaq	DATAat0x3d1d8(%rip), %r15
    000005be: 	andq	%r12, %rax
    000005c1: 	movsd	%xmm2, 0x18(%rsp)
    000005c7: 	movq	%rax, %xmm2
    000005cc: 	movq	%rax, %r14
    000005cf: 	punpcklqdq	%xmm2, %xmm2
    000005d3: 	movaps	%xmm2, (%rsp)
    000005d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2101:
    000005e0: 	movq	%rbp, %rax
    000005e3: 	pxor	%xmm1, %xmm1
    000005e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2098:
    000005f0: 	movdqu	(%rax), %xmm0
    000005f4: 	pand	(%rsp), %xmm0
    000005f9: 	addq	$0x10, %rax
    000005fd: 	paddq	%xmm0, %xmm1
    00000601: 	cmpq	%rax, %rbx
    00000604: 	jne	.Ltmp2098 # Offset: 1540
    00000606: 	movsd	init_value(%rip), %xmm0
    0000060e: 	comisd	0x18(%rsp), %xmm0
    00000614: 	jae	.Ltmp2099 # Offset: 1556
    0000061a: 	cvttsd2si	%xmm0, %rax
.Ltmp2217:
    0000061f: 	andq	%r14, %rax
    00000622: 	movdqa	%xmm1, %xmm0
    00000626: 	imulq	$0x1f40, %rax, %rdx
    0000062d: 	psrldq	$0x8, %xmm0
    00000632: 	paddq	%xmm0, %xmm1
    00000636: 	movq	%xmm1, %rax
    0000063b: 	cmpq	%rax, %rdx
    0000063e: 	je	.Ltmp2100 # Offset: 1598
    00000640: 	movl	current_test(%rip), %edx
    00000646: 	movq	%r15, %rsi
    00000649: 	movl	$0x1, %edi
    0000064e: 	xorl	%eax, %eax
    00000650: 	callq	__printf_chk@PLT # Offset: 1616
    00000655: 	movl	iterations(%rip), %ecx
.Ltmp2100:
    0000065b: 	addl	$0x1, %r13d
    0000065f: 	cmpl	%ecx, %r13d
    00000662: 	jl	.Ltmp2101 # Offset: 1634
.Ltmp2097:
    00000668: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000066f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000676: 	subq	$0x20, %rax
    0000067a: 	cmpq	%rax, %rbx
    0000067d: 	je	.Ltmp2102 # Offset: 1661
    00000683: 	leaq	0x10(%rbx), %rdi
    00000687: 	movq	0x88(%rsp), %r13
    0000068f: 	movq	%rdi, (%rbx)
    00000692: 	movq	0x80(%rsp), %r14
    0000069a: 	movq	%r14, %rax
    0000069d: 	addq	%r13, %rax
    000006a0: 	je	.Ltmp2103 # Offset: 1696
    000006a2: 	testq	%r14, %r14
    000006a5: 	je	.Ltmp2104 # Offset: 1701
.Ltmp2103:
    000006ab: 	movq	%r13, 0x58(%rsp)
    000006b0: 	cmpq	$0xf, %r13
    000006b4: 	ja	.Ltmp2105 # Offset: 1716
    000006ba: 	cmpq	$0x1, %r13
    000006be: 	jne	.Ltmp2106 # Offset: 1726
    000006c4: 	movzbl	(%r14), %eax
    000006c8: 	movb	%al, 0x10(%rbx)
.Ltmp2264:
    000006cb: 	movq	%r13, 0x8(%rbx)
    000006cf: 	movb	$0x0, (%rdi,%r13)
    000006d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006e2: 	addq	$0x20, %rax
    000006e6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006ed: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000006f4: 	je	.Ltmp2107 # Offset: 1780
.Ltmp2245:
    000006fa: 	movq	-0x20(%rax), %r13
    000006fe: 	callq	clock@PLT # Offset: 1790
    00000703: 	pxor	%xmm0, %xmm0
    00000707: 	movq	%rax, end_time(%rip)
    0000070e: 	movq	%r13, %rdi
    00000711: 	subq	start_time(%rip), %rax
    00000718: 	cvtsi2sd	%rax, %xmm0
    0000071d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000725: 	callq	_Z13record_resultdPKc # Offset: 1829
    0000072a: 	movq	0x80(%rsp), %rdi
    00000732: 	cmpq	0x38(%rsp), %rdi
    00000737: 	je	.Ltmp2108 # Offset: 1847
    00000739: 	movq	0x90(%rsp), %rax
    00000741: 	leaq	0x1(%rax), %rsi
    00000745: 	callq	_ZdlPvm@PLT # Offset: 1861
.Ltmp2108:
    0000074a: 	movq	0x38(%rsp), %rax
    0000074f: 	movq	0x60(%rsp), %r14
    00000754: 	movq	0x68(%rsp), %r13
    00000759: 	movq	%rax, 0x80(%rsp)
    00000761: 	movq	%r14, %rax
    00000764: 	addq	%r13, %rax
    00000767: 	je	.Ltmp2109 # Offset: 1895
    00000769: 	testq	%r14, %r14
    0000076c: 	je	.Ltmp2110 # Offset: 1900
.Ltmp2109:
    00000772: 	movq	%r13, 0x58(%rsp)
    00000777: 	cmpq	$0xf, %r13
    0000077b: 	ja	.Ltmp2111 # Offset: 1915
    00000781: 	cmpq	$0x1, %r13
    00000785: 	jne	.Ltmp2112 # Offset: 1925
    0000078b: 	movzbl	(%r14), %eax
    0000078f: 	movb	%al, 0x90(%rsp)
    00000796: 	movq	0x38(%rsp), %rax
.Ltmp2232:
    0000079b: 	movq	%r13, 0x88(%rsp)
    000007a3: 	movb	$0x0, (%rax,%r13)
    000007a8: 	movabsq	$0x3fffffffffffffff, %rax
    000007b2: 	subq	0x88(%rsp), %rax
    000007ba: 	cmpq	$0xb, %rax
    000007be: 	jbe	.Ltmp2113 # Offset: 1982
    000007c4: 	movq	0x40(%rsp), %rdi
    000007c9: 	movl	$0xc, %edx
    000007ce: 	leaq	DATAat0x3d220(%rip), %rsi
    000007d5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2005
    000007da: 	callq	clock@PLT # Offset: 2010
    000007df: 	movl	iterations(%rip), %ecx
    000007e5: 	movq	%rax, start_time(%rip)
    000007ec: 	testl	%ecx, %ecx
    000007ee: 	jle	.Ltmp2114 # Offset: 2030
    000007f4: 	movq	%r12, %xmm3
    000007f9: 	xorl	%r13d, %r13d
    000007fc: 	leaq	0xfa00(%rbp), %rbx
    00000803: 	movabsq	$-0x8000000000000000, %r14
    0000080d: 	punpcklqdq	%xmm3, %xmm3
    00000811: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000818: 	movaps	%xmm3, (%rsp)
    0000081c: 	movsd	DATAat0x3d6b0(%rip), %xmm3
    00000824: 	movsd	%xmm3, 0x18(%rsp)
    0000082a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2118:
    00000830: 	movq	%rbp, %rax
    00000833: 	pxor	%xmm1, %xmm1
    00000837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2115:
    00000840: 	movdqu	(%rax), %xmm0
    00000844: 	por	(%rsp), %xmm0
    00000849: 	addq	$0x10, %rax
    0000084d: 	paddq	%xmm0, %xmm1
    00000851: 	cmpq	%rbx, %rax
    00000854: 	jne	.Ltmp2115 # Offset: 2132
    00000856: 	movsd	init_value(%rip), %xmm0
    0000085e: 	comisd	0x18(%rsp), %xmm0
    00000864: 	jae	.Ltmp2116 # Offset: 2148
    0000086a: 	cvttsd2si	%xmm0, %rax
.Ltmp2218:
    0000086f: 	orq	%r12, %rax
    00000872: 	movdqa	%xmm1, %xmm0
    00000876: 	imulq	$0x1f40, %rax, %rdx
    0000087d: 	psrldq	$0x8, %xmm0
    00000882: 	paddq	%xmm0, %xmm1
    00000886: 	movq	%xmm1, %rax
    0000088b: 	cmpq	%rax, %rdx
    0000088e: 	je	.Ltmp2117 # Offset: 2190
    00000890: 	movl	current_test(%rip), %edx
    00000896: 	movq	%r15, %rsi
    00000899: 	movl	$0x1, %edi
    0000089e: 	xorl	%eax, %eax
    000008a0: 	callq	__printf_chk@PLT # Offset: 2208
    000008a5: 	movl	iterations(%rip), %ecx
.Ltmp2117:
    000008ab: 	addl	$0x1, %r13d
    000008af: 	cmpl	%ecx, %r13d
    000008b2: 	jl	.Ltmp2118 # Offset: 2226
.Ltmp2114:
    000008b8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000008c6: 	subq	$0x20, %rax
    000008ca: 	cmpq	%rax, %rbx
    000008cd: 	je	.Ltmp2119 # Offset: 2253
    000008d3: 	leaq	0x10(%rbx), %rdi
    000008d7: 	movq	0x88(%rsp), %r13
    000008df: 	movq	%rdi, (%rbx)
    000008e2: 	movq	0x80(%rsp), %r14
    000008ea: 	movq	%r14, %rax
    000008ed: 	addq	%r13, %rax
    000008f0: 	je	.Ltmp2120 # Offset: 2288
    000008f2: 	testq	%r14, %r14
    000008f5: 	je	.Ltmp2121 # Offset: 2293
.Ltmp2120:
    000008fb: 	movq	%r13, 0x58(%rsp)
    00000900: 	cmpq	$0xf, %r13
    00000904: 	ja	.Ltmp2122 # Offset: 2308
    0000090a: 	cmpq	$0x1, %r13
    0000090e: 	jne	.Ltmp2123 # Offset: 2318
    00000914: 	movzbl	(%r14), %eax
    00000918: 	movb	%al, 0x10(%rbx)
.Ltmp2261:
    0000091b: 	movq	%r13, 0x8(%rbx)
    0000091f: 	movb	$0x0, (%rdi,%r13)
    00000924: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000092b: 	addq	$0x20, %rax
    0000092f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2250:
    00000936: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000093d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000944: 	je	.Ltmp2124 # Offset: 2372
.Ltmp2249:
    0000094a: 	movq	-0x20(%rax), %r13
    0000094e: 	callq	clock@PLT # Offset: 2382
    00000953: 	pxor	%xmm0, %xmm0
    00000957: 	movq	%rax, end_time(%rip)
    0000095e: 	movq	%r13, %rdi
    00000961: 	subq	start_time(%rip), %rax
    00000968: 	cvtsi2sd	%rax, %xmm0
    0000096d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000975: 	callq	_Z13record_resultdPKc # Offset: 2421
    0000097a: 	movq	0x80(%rsp), %rdi
    00000982: 	cmpq	0x38(%rsp), %rdi
    00000987: 	je	.Ltmp2125 # Offset: 2439
    00000989: 	movq	0x90(%rsp), %rax
    00000991: 	leaq	0x1(%rax), %rsi
    00000995: 	callq	_ZdlPvm@PLT # Offset: 2453
.Ltmp2125:
    0000099a: 	movq	0x38(%rsp), %rax
    0000099f: 	movq	0x60(%rsp), %r14
    000009a4: 	movq	0x68(%rsp), %r13
    000009a9: 	movq	%rax, 0x80(%rsp)
    000009b1: 	movq	%r14, %rax
    000009b4: 	addq	%r13, %rax
    000009b7: 	je	.Ltmp2126 # Offset: 2487
    000009b9: 	testq	%r14, %r14
    000009bc: 	je	.Ltmp2127 # Offset: 2492
.Ltmp2126:
    000009c2: 	movq	%r13, 0x58(%rsp)
    000009c7: 	cmpq	$0xf, %r13
    000009cb: 	ja	.Ltmp2128 # Offset: 2507
    000009d1: 	cmpq	$0x1, %r13
    000009d5: 	jne	.Ltmp2129 # Offset: 2517
    000009db: 	movzbl	(%r14), %eax
    000009df: 	movb	%al, 0x90(%rsp)
    000009e6: 	movq	0x38(%rsp), %rax
.Ltmp2234:
    000009eb: 	movq	%r13, 0x88(%rsp)
    000009f3: 	movb	$0x0, (%rax,%r13)
    000009f8: 	movabsq	$0x3fffffffffffffff, %rax
    00000a02: 	subq	0x88(%rsp), %rax
    00000a0a: 	cmpq	$0x14, %rax
    00000a0e: 	jbe	.Ltmp2130 # Offset: 2574
    00000a14: 	movq	0x40(%rsp), %rdi
    00000a19: 	movl	$0x15, %edx
    00000a1e: 	leaq	DATAat0x3d217(%rip), %rsi
    00000a25: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2597
    00000a2a: 	callq	clock@PLT # Offset: 2602
    00000a2f: 	movl	iterations(%rip), %ecx
    00000a35: 	movq	%rax, start_time(%rip)
    00000a3c: 	testl	%ecx, %ecx
    00000a3e: 	jle	.Ltmp2131 # Offset: 2622
    00000a44: 	movsd	DATAat0x3d6b0(%rip), %xmm4
    00000a4c: 	movq	0x28(%rsp), %rax
    00000a51: 	xorl	%r13d, %r13d
    00000a54: 	leaq	0xfa00(%rbp), %rbx
    00000a5b: 	orq	0x30(%rsp), %rax
    00000a60: 	orq	0x20(%rsp), %rax
    00000a65: 	movabsq	$-0x8000000000000000, %r14
    00000a6f: 	orq	%r12, %rax
    00000a72: 	movsd	%xmm4, 0x18(%rsp)
    00000a78: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000a7f: 	movq	%rax, %xmm4
    00000a84: 	punpcklqdq	%xmm4, %xmm4
    00000a88: 	movaps	%xmm4, (%rsp)
    00000a8c: 	nopl	(%rax) # Size: 4
.Ltmp2135:
    00000a90: 	movq	%rbp, %rax
    00000a93: 	pxor	%xmm1, %xmm1
    00000a97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2132:
    00000aa0: 	movdqu	(%rax), %xmm0
    00000aa4: 	por	(%rsp), %xmm0
    00000aa9: 	addq	$0x10, %rax
    00000aad: 	paddq	%xmm0, %xmm1
    00000ab1: 	cmpq	%rax, %rbx
    00000ab4: 	jne	.Ltmp2132 # Offset: 2740
    00000ab6: 	movsd	init_value(%rip), %xmm0
    00000abe: 	comisd	0x18(%rsp), %xmm0
    00000ac4: 	jae	.Ltmp2133 # Offset: 2756
    00000aca: 	cvttsd2si	%xmm0, %rax
.Ltmp2216:
    00000acf: 	movq	0x28(%rsp), %rdx
    00000ad4: 	orq	0x30(%rsp), %rax
    00000ad9: 	movdqa	%xmm1, %xmm0
    00000add: 	psrldq	$0x8, %xmm0
    00000ae2: 	orq	%rax, %rdx
    00000ae5: 	orq	0x20(%rsp), %rdx
    00000aea: 	paddq	%xmm0, %xmm1
    00000aee: 	orq	%r12, %rdx
    00000af1: 	movq	%xmm1, %rax
    00000af6: 	imulq	$0x1f40, %rdx, %rdx
    00000afd: 	cmpq	%rax, %rdx
    00000b00: 	je	.Ltmp2134 # Offset: 2816
    00000b02: 	movl	current_test(%rip), %edx
    00000b08: 	movq	%r15, %rsi
    00000b0b: 	movl	$0x1, %edi
    00000b10: 	xorl	%eax, %eax
    00000b12: 	callq	__printf_chk@PLT # Offset: 2834
    00000b17: 	movl	iterations(%rip), %ecx
.Ltmp2134:
    00000b1d: 	addl	$0x1, %r13d
    00000b21: 	cmpl	%ecx, %r13d
    00000b24: 	jl	.Ltmp2135 # Offset: 2852
.Ltmp2131:
    00000b2a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b31: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000b38: 	subq	$0x20, %rax
    00000b3c: 	cmpq	%rax, %rbx
    00000b3f: 	je	.Ltmp2136 # Offset: 2879
    00000b45: 	leaq	0x10(%rbx), %rdi
    00000b49: 	movq	0x88(%rsp), %r13
    00000b51: 	movq	%rdi, (%rbx)
    00000b54: 	movq	0x80(%rsp), %r14
    00000b5c: 	movq	%r14, %rax
    00000b5f: 	addq	%r13, %rax
    00000b62: 	je	.Ltmp2137 # Offset: 2914
    00000b64: 	testq	%r14, %r14
    00000b67: 	je	.Ltmp2138 # Offset: 2919
.Ltmp2137:
    00000b6d: 	movq	%r13, 0x58(%rsp)
    00000b72: 	cmpq	$0xf, %r13
    00000b76: 	ja	.Ltmp2139 # Offset: 2934
    00000b7c: 	cmpq	$0x1, %r13
    00000b80: 	jne	.Ltmp2140 # Offset: 2944
    00000b86: 	movzbl	(%r14), %eax
    00000b8a: 	movb	%al, 0x10(%rbx)
.Ltmp2255:
    00000b8d: 	movq	%r13, 0x8(%rbx)
    00000b91: 	movb	$0x0, (%rdi,%r13)
    00000b96: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b9d: 	addq	$0x20, %rax
    00000ba1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2254:
    00000ba8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000baf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bb6: 	je	.Ltmp2141 # Offset: 2998
.Ltmp2253:
    00000bbc: 	movq	-0x20(%rax), %r13
    00000bc0: 	callq	clock@PLT # Offset: 3008
    00000bc5: 	pxor	%xmm0, %xmm0
    00000bc9: 	movq	%rax, end_time(%rip)
    00000bd0: 	movq	%r13, %rdi
    00000bd3: 	subq	start_time(%rip), %rax
    00000bda: 	cvtsi2sd	%rax, %xmm0
    00000bdf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000be7: 	callq	_Z13record_resultdPKc # Offset: 3047
    00000bec: 	movq	0x80(%rsp), %rdi
    00000bf4: 	cmpq	0x38(%rsp), %rdi
    00000bf9: 	je	.Ltmp2142 # Offset: 3065
    00000bfb: 	movq	0x90(%rsp), %rax
    00000c03: 	leaq	0x1(%rax), %rsi
    00000c07: 	callq	_ZdlPvm@PLT # Offset: 3079
.Ltmp2142:
    00000c0c: 	movq	0x38(%rsp), %rax
    00000c11: 	movq	0x60(%rsp), %r14
    00000c16: 	movq	0x68(%rsp), %r13
    00000c1b: 	movq	%rax, 0x80(%rsp)
    00000c23: 	movq	%r14, %rax
    00000c26: 	addq	%r13, %rax
    00000c29: 	je	.Ltmp2143 # Offset: 3113
    00000c2b: 	testq	%r14, %r14
    00000c2e: 	je	.Ltmp2144 # Offset: 3118
.Ltmp2143:
    00000c34: 	movq	%r13, 0x58(%rsp)
    00000c39: 	cmpq	$0xf, %r13
    00000c3d: 	ja	.Ltmp2145 # Offset: 3133
    00000c43: 	cmpq	$0x1, %r13
    00000c47: 	jne	.Ltmp2146 # Offset: 3143
    00000c4d: 	movzbl	(%r14), %eax
    00000c51: 	movb	%al, 0x90(%rsp)
    00000c58: 	movq	0x38(%rsp), %rax
.Ltmp2230:
    00000c5d: 	movq	%r13, 0x88(%rsp)
    00000c65: 	movb	$0x0, (%rax,%r13)
    00000c6a: 	movabsq	$0x3fffffffffffffff, %rax
    00000c74: 	subq	0x88(%rsp), %rax
    00000c7c: 	cmpq	$0x15, %rax
    00000c80: 	jbe	.Ltmp2147 # Offset: 3200
    00000c86: 	movq	0x40(%rsp), %rdi
    00000c8b: 	movl	$0x16, %edx
    00000c90: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000c97: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3223
    00000c9c: 	callq	clock@PLT # Offset: 3228
    00000ca1: 	movl	iterations(%rip), %ecx
    00000ca7: 	movq	%rax, start_time(%rip)
    00000cae: 	testl	%ecx, %ecx
    00000cb0: 	jle	.Ltmp2148 # Offset: 3248
    00000cb6: 	movsd	DATAat0x3d6b0(%rip), %xmm2
    00000cbe: 	movq	0x28(%rsp), %rax
    00000cc3: 	xorl	%r13d, %r13d
    00000cc6: 	leaq	0xfa00(%rbp), %rbx
    00000ccd: 	orq	0x30(%rsp), %rax
    00000cd2: 	orq	0x20(%rsp), %rax
    00000cd7: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000cde: 	orq	%r12, %rax
    00000ce1: 	movsd	%xmm2, 0x18(%rsp)
    00000ce7: 	movq	%rax, %xmm2
    00000cec: 	movq	%rax, %r14
    00000cef: 	punpcklqdq	%xmm2, %xmm2
    00000cf3: 	movaps	%xmm2, (%rsp)
    00000cf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2152:
    00000d00: 	movq	%rbp, %rax
    00000d03: 	pxor	%xmm1, %xmm1
    00000d07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2149:
    00000d10: 	movdqu	(%rax), %xmm0
    00000d14: 	por	(%rsp), %xmm0
    00000d19: 	addq	$0x10, %rax
    00000d1d: 	paddq	%xmm0, %xmm1
    00000d21: 	cmpq	%rbx, %rax
    00000d24: 	jne	.Ltmp2149 # Offset: 3364
    00000d26: 	movsd	init_value(%rip), %xmm0
    00000d2e: 	comisd	0x18(%rsp), %xmm0
    00000d34: 	jae	.Ltmp2150 # Offset: 3380
    00000d3a: 	cvttsd2si	%xmm0, %rax
.Ltmp2220:
    00000d3f: 	orq	%r14, %rax
    00000d42: 	movdqa	%xmm1, %xmm0
    00000d46: 	imulq	$0x1f40, %rax, %rdx
    00000d4d: 	psrldq	$0x8, %xmm0
    00000d52: 	paddq	%xmm0, %xmm1
    00000d56: 	movq	%xmm1, %rax
    00000d5b: 	cmpq	%rax, %rdx
    00000d5e: 	je	.Ltmp2151 # Offset: 3422
    00000d60: 	movl	current_test(%rip), %edx
    00000d66: 	movq	%r15, %rsi
    00000d69: 	movl	$0x1, %edi
    00000d6e: 	xorl	%eax, %eax
    00000d70: 	callq	__printf_chk@PLT # Offset: 3440
    00000d75: 	movl	iterations(%rip), %ecx
.Ltmp2151:
    00000d7b: 	addl	$0x1, %r13d
    00000d7f: 	cmpl	%ecx, %r13d
    00000d82: 	jl	.Ltmp2152 # Offset: 3458
.Ltmp2148:
    00000d88: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d8f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000d96: 	subq	$0x20, %rax
    00000d9a: 	cmpq	%rax, %rbx
    00000d9d: 	je	.Ltmp2153 # Offset: 3485
    00000da3: 	leaq	0x10(%rbx), %rdi
    00000da7: 	movq	0x88(%rsp), %r13
    00000daf: 	movq	%rdi, (%rbx)
    00000db2: 	movq	0x80(%rsp), %r14
    00000dba: 	movq	%r14, %rax
    00000dbd: 	addq	%r13, %rax
    00000dc0: 	je	.Ltmp2154 # Offset: 3520
    00000dc2: 	testq	%r14, %r14
    00000dc5: 	je	.Ltmp2155 # Offset: 3525
.Ltmp2154:
    00000dcb: 	movq	%r13, 0x58(%rsp)
    00000dd0: 	cmpq	$0xf, %r13
    00000dd4: 	ja	.Ltmp2156 # Offset: 3540
    00000dda: 	cmpq	$0x1, %r13
    00000dde: 	jne	.Ltmp2157 # Offset: 3550
    00000de4: 	movzbl	(%r14), %eax
    00000de8: 	movb	%al, 0x10(%rbx)
.Ltmp2267:
    00000deb: 	movq	%r13, 0x8(%rbx)
    00000def: 	movb	$0x0, (%rdi,%r13)
    00000df4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dfb: 	addq	$0x20, %rax
    00000dff: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2252:
    00000e06: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e0d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e14: 	je	.Ltmp2158 # Offset: 3604
.Ltmp2251:
    00000e1a: 	movq	-0x20(%rax), %r13
    00000e1e: 	callq	clock@PLT # Offset: 3614
    00000e23: 	pxor	%xmm0, %xmm0
    00000e27: 	movq	%rax, end_time(%rip)
    00000e2e: 	movq	%r13, %rdi
    00000e31: 	subq	start_time(%rip), %rax
    00000e38: 	cvtsi2sd	%rax, %xmm0
    00000e3d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e45: 	callq	_Z13record_resultdPKc # Offset: 3653
    00000e4a: 	movq	0x80(%rsp), %rdi
    00000e52: 	cmpq	0x38(%rsp), %rdi
    00000e57: 	je	.Ltmp2159 # Offset: 3671
    00000e59: 	movq	0x90(%rsp), %rax
    00000e61: 	leaq	0x1(%rax), %rsi
    00000e65: 	callq	_ZdlPvm@PLT # Offset: 3685
.Ltmp2159:
    00000e6a: 	movq	0x38(%rsp), %rax
    00000e6f: 	movq	0x60(%rsp), %r14
    00000e74: 	movq	0x68(%rsp), %r13
    00000e79: 	movq	%rax, 0x80(%rsp)
    00000e81: 	movq	%r14, %rax
    00000e84: 	addq	%r13, %rax
    00000e87: 	je	.Ltmp2160 # Offset: 3719
    00000e89: 	testq	%r14, %r14
    00000e8c: 	je	.Ltmp2161 # Offset: 3724
.Ltmp2160:
    00000e92: 	movq	%r13, 0x58(%rsp)
    00000e97: 	cmpq	$0xf, %r13
    00000e9b: 	ja	.Ltmp2162 # Offset: 3739
    00000ea1: 	cmpq	$0x1, %r13
    00000ea5: 	jne	.Ltmp2163 # Offset: 3749
    00000eab: 	movzbl	(%r14), %eax
    00000eaf: 	movb	%al, 0x90(%rsp)
    00000eb6: 	movq	0x38(%rsp), %rax
.Ltmp2228:
    00000ebb: 	movq	%r13, 0x88(%rsp)
    00000ec3: 	movb	$0x0, (%rax,%r13)
    00000ec8: 	movabsq	$0x3fffffffffffffff, %rax
    00000ed2: 	subq	0x88(%rsp), %rax
    00000eda: 	cmpq	$0xc, %rax
    00000ede: 	jbe	.Ltmp2164 # Offset: 3806
    00000ee4: 	movq	0x40(%rsp), %rdi
    00000ee9: 	movl	$0xd, %edx
    00000eee: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000ef5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3829
    00000efa: 	callq	clock@PLT # Offset: 3834
    00000eff: 	movl	iterations(%rip), %ecx
    00000f05: 	movq	%rax, start_time(%rip)
    00000f0c: 	testl	%ecx, %ecx
    00000f0e: 	jle	.Ltmp2165 # Offset: 3854
    00000f14: 	movq	%r12, %xmm3
    00000f19: 	xorl	%r13d, %r13d
    00000f1c: 	leaq	0xfa00(%rbp), %rbx
    00000f23: 	movabsq	$-0x8000000000000000, %r14
    00000f2d: 	punpcklqdq	%xmm3, %xmm3
    00000f31: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000f38: 	movaps	%xmm3, (%rsp)
    00000f3c: 	movsd	DATAat0x3d6b0(%rip), %xmm3
    00000f44: 	movsd	%xmm3, 0x18(%rsp)
    00000f4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2169:
    00000f50: 	movq	%rbp, %rax
    00000f53: 	pxor	%xmm1, %xmm1
    00000f57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2166:
    00000f60: 	movdqu	(%rax), %xmm0
    00000f64: 	pxor	(%rsp), %xmm0
    00000f69: 	addq	$0x10, %rax
    00000f6d: 	paddq	%xmm0, %xmm1
    00000f71: 	cmpq	%rax, %rbx
    00000f74: 	jne	.Ltmp2166 # Offset: 3956
    00000f76: 	movsd	init_value(%rip), %xmm0
    00000f7e: 	comisd	0x18(%rsp), %xmm0
    00000f84: 	jae	.Ltmp2167 # Offset: 3972
    00000f8a: 	cvttsd2si	%xmm0, %rax
.Ltmp2219:
    00000f8f: 	xorq	%r12, %rax
    00000f92: 	movdqa	%xmm1, %xmm0
    00000f96: 	imulq	$0x1f40, %rax, %rdx
    00000f9d: 	psrldq	$0x8, %xmm0
    00000fa2: 	paddq	%xmm0, %xmm1
    00000fa6: 	movq	%xmm1, %rax
    00000fab: 	cmpq	%rax, %rdx
    00000fae: 	je	.Ltmp2168 # Offset: 4014
    00000fb0: 	movl	current_test(%rip), %edx
    00000fb6: 	movq	%r15, %rsi
    00000fb9: 	movl	$0x1, %edi
    00000fbe: 	xorl	%eax, %eax
    00000fc0: 	callq	__printf_chk@PLT # Offset: 4032
    00000fc5: 	movl	iterations(%rip), %ecx
.Ltmp2168:
    00000fcb: 	addl	$0x1, %r13d
    00000fcf: 	cmpl	%ecx, %r13d
    00000fd2: 	jl	.Ltmp2169 # Offset: 4050
.Ltmp2165:
    00000fd8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fdf: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000fe6: 	subq	$0x20, %rax
    00000fea: 	cmpq	%rax, %rbx
    00000fed: 	je	.Ltmp2170 # Offset: 4077
    00000ff3: 	leaq	0x10(%rbx), %rdi
    00000ff7: 	movq	0x88(%rsp), %r13
    00000fff: 	movq	%rdi, (%rbx)
    00001002: 	movq	0x80(%rsp), %r14
    0000100a: 	movq	%r14, %rax
    0000100d: 	addq	%r13, %rax
    00001010: 	je	.Ltmp2171 # Offset: 4112
    00001012: 	testq	%r14, %r14
    00001015: 	je	.Ltmp2172 # Offset: 4117
.Ltmp2171:
    0000101b: 	movq	%r13, 0x58(%rsp)
    00001020: 	cmpq	$0xf, %r13
    00001024: 	ja	.Ltmp2173 # Offset: 4132
    0000102a: 	cmpq	$0x1, %r13
    0000102e: 	jne	.Ltmp2174 # Offset: 4142
    00001034: 	movzbl	(%r14), %eax
    00001038: 	movb	%al, 0x10(%rbx)
.Ltmp2263:
    0000103b: 	movq	%r13, 0x8(%rbx)
    0000103f: 	movb	$0x0, (%rdi,%r13)
    00001044: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000104b: 	addq	$0x20, %rax
    0000104f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2248:
    00001056: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000105d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001064: 	je	.Ltmp2175 # Offset: 4196
.Ltmp2241:
    0000106a: 	movq	-0x20(%rax), %r13
    0000106e: 	callq	clock@PLT # Offset: 4206
    00001073: 	pxor	%xmm0, %xmm0
    00001077: 	movq	%rax, end_time(%rip)
    0000107e: 	movq	%r13, %rdi
    00001081: 	subq	start_time(%rip), %rax
    00001088: 	cvtsi2sd	%rax, %xmm0
    0000108d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001095: 	callq	_Z13record_resultdPKc # Offset: 4245
    0000109a: 	movq	0x80(%rsp), %rdi
    000010a2: 	cmpq	0x38(%rsp), %rdi
    000010a7: 	je	.Ltmp2176 # Offset: 4263
    000010a9: 	movq	0x90(%rsp), %rax
    000010b1: 	leaq	0x1(%rax), %rsi
    000010b5: 	callq	_ZdlPvm@PLT # Offset: 4277
.Ltmp2176:
    000010ba: 	movq	0x38(%rsp), %rax
    000010bf: 	movq	0x60(%rsp), %r14
    000010c4: 	movq	0x68(%rsp), %r13
    000010c9: 	movq	%rax, 0x80(%rsp)
    000010d1: 	movq	%r14, %rax
    000010d4: 	addq	%r13, %rax
    000010d7: 	je	.Ltmp2177 # Offset: 4311
    000010d9: 	testq	%r14, %r14
    000010dc: 	je	.Ltmp2178 # Offset: 4316
.Ltmp2177:
    000010e2: 	movq	%r13, 0x58(%rsp)
    000010e7: 	cmpq	$0xf, %r13
    000010eb: 	ja	.Ltmp2179 # Offset: 4331
    000010f1: 	cmpq	$0x1, %r13
    000010f5: 	jne	.Ltmp2180 # Offset: 4341
    000010fb: 	movzbl	(%r14), %eax
    000010ff: 	movb	%al, 0x90(%rsp)
    00001106: 	movq	0x38(%rsp), %rax
.Ltmp2226:
    0000110b: 	movq	%r13, 0x88(%rsp)
    00001113: 	movb	$0x0, (%rax,%r13)
    00001118: 	movabsq	$0x3fffffffffffffff, %rax
    00001122: 	subq	0x88(%rsp), %rax
    0000112a: 	cmpq	$0x15, %rax
    0000112e: 	jbe	.Ltmp2181 # Offset: 4398
    00001134: 	movq	0x40(%rsp), %rdi
    00001139: 	movl	$0x16, %edx
    0000113e: 	leaq	DATAat0x3d244(%rip), %rsi
    00001145: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4421
    0000114a: 	callq	clock@PLT # Offset: 4426
    0000114f: 	movl	iterations(%rip), %ecx
    00001155: 	movq	%rax, start_time(%rip)
    0000115c: 	testl	%ecx, %ecx
    0000115e: 	jle	.Ltmp2182 # Offset: 4446
    00001164: 	movsd	DATAat0x3d6b0(%rip), %xmm4
    0000116c: 	movq	0x28(%rsp), %rax
    00001171: 	xorl	%r13d, %r13d
    00001174: 	leaq	0xfa00(%rbp), %rbx
    0000117b: 	xorq	0x30(%rsp), %rax
    00001180: 	xorq	0x20(%rsp), %rax
    00001185: 	movabsq	$-0x8000000000000000, %r14
    0000118f: 	xorq	%r12, %rax
    00001192: 	movsd	%xmm4, 0x18(%rsp)
    00001198: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000119f: 	movq	%rax, %xmm4
    000011a4: 	punpcklqdq	%xmm4, %xmm4
    000011a8: 	movaps	%xmm4, (%rsp)
    000011ac: 	nopl	(%rax) # Size: 4
.Ltmp2186:
    000011b0: 	movq	%rbp, %rax
    000011b3: 	pxor	%xmm1, %xmm1
    000011b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2183:
    000011c0: 	movdqu	(%rax), %xmm0
    000011c4: 	pxor	(%rsp), %xmm0
    000011c9: 	addq	$0x10, %rax
    000011cd: 	paddq	%xmm0, %xmm1
    000011d1: 	cmpq	%rbx, %rax
    000011d4: 	jne	.Ltmp2183 # Offset: 4564
    000011d6: 	movsd	init_value(%rip), %xmm0
    000011de: 	comisd	0x18(%rsp), %xmm0
    000011e4: 	jae	.Ltmp2184 # Offset: 4580
    000011ea: 	cvttsd2si	%xmm0, %rax
.Ltmp2221:
    000011ef: 	movq	0x28(%rsp), %rdx
    000011f4: 	xorq	0x30(%rsp), %rax
    000011f9: 	movdqa	%xmm1, %xmm0
    000011fd: 	psrldq	$0x8, %xmm0
    00001202: 	xorq	%rax, %rdx
    00001205: 	xorq	0x20(%rsp), %rdx
    0000120a: 	paddq	%xmm0, %xmm1
    0000120e: 	xorq	%r12, %rdx
    00001211: 	movq	%xmm1, %rax
    00001216: 	imulq	$0x1f40, %rdx, %rdx
    0000121d: 	cmpq	%rax, %rdx
    00001220: 	je	.Ltmp2185 # Offset: 4640
    00001222: 	movl	current_test(%rip), %edx
    00001228: 	movq	%r15, %rsi
    0000122b: 	movl	$0x1, %edi
    00001230: 	xorl	%eax, %eax
    00001232: 	callq	__printf_chk@PLT # Offset: 4658
    00001237: 	movl	iterations(%rip), %ecx
.Ltmp2185:
    0000123d: 	addl	$0x1, %r13d
    00001241: 	cmpl	%ecx, %r13d
    00001244: 	jl	.Ltmp2186 # Offset: 4676
.Ltmp2182:
    0000124a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001251: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001258: 	subq	$0x20, %rax
    0000125c: 	cmpq	%rax, %rbx
    0000125f: 	je	.Ltmp2187 # Offset: 4703
    00001265: 	leaq	0x10(%rbx), %rdi
    00001269: 	movq	0x88(%rsp), %r13
    00001271: 	movq	%rdi, (%rbx)
    00001274: 	movq	0x80(%rsp), %r14
    0000127c: 	movq	%r14, %rax
    0000127f: 	addq	%r13, %rax
    00001282: 	je	.Ltmp2188 # Offset: 4738
    00001284: 	testq	%r14, %r14
    00001287: 	je	.Ltmp2189 # Offset: 4743
.Ltmp2188:
    0000128d: 	movq	%r13, 0x58(%rsp)
    00001292: 	cmpq	$0xf, %r13
    00001296: 	ja	.Ltmp2190 # Offset: 4758
    0000129c: 	cmpq	$0x1, %r13
    000012a0: 	jne	.Ltmp2191 # Offset: 4768
    000012a6: 	movzbl	(%r14), %eax
    000012aa: 	movb	%al, 0x10(%rbx)
.Ltmp2266:
    000012ad: 	movq	%r13, 0x8(%rbx)
    000012b1: 	movb	$0x0, (%rdi,%r13)
    000012b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012c4: 	addq	$0x20, %rax
    000012c8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012cf: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000012d6: 	je	.Ltmp2192 # Offset: 4822
.Ltmp2240:
    000012dc: 	movq	-0x20(%rax), %r13
    000012e0: 	callq	clock@PLT # Offset: 4832
    000012e5: 	pxor	%xmm0, %xmm0
    000012e9: 	movq	%rax, end_time(%rip)
    000012f0: 	movq	%r13, %rdi
    000012f3: 	subq	start_time(%rip), %rax
    000012fa: 	cvtsi2sd	%rax, %xmm0
    000012ff: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001307: 	callq	_Z13record_resultdPKc # Offset: 4871
    0000130c: 	movq	0x80(%rsp), %rdi
    00001314: 	cmpq	0x38(%rsp), %rdi
    00001319: 	je	.Ltmp2193 # Offset: 4889
    0000131b: 	movq	0x90(%rsp), %rax
    00001323: 	leaq	0x1(%rax), %rsi
    00001327: 	callq	_ZdlPvm@PLT # Offset: 4903
.Ltmp2193:
    0000132c: 	movq	0x38(%rsp), %rax
    00001331: 	movq	0x60(%rsp), %r14
    00001336: 	movq	0x68(%rsp), %r13
    0000133b: 	movq	%rax, 0x80(%rsp)
    00001343: 	movq	%r14, %rax
    00001346: 	addq	%r13, %rax
    00001349: 	je	.Ltmp2194 # Offset: 4937
    0000134b: 	testq	%r14, %r14
    0000134e: 	je	.Ltmp2195 # Offset: 4942
.Ltmp2194:
    00001354: 	movq	%r13, 0x58(%rsp)
    00001359: 	cmpq	$0xf, %r13
    0000135d: 	ja	.Ltmp2196 # Offset: 4957
    00001363: 	cmpq	$0x1, %r13
    00001367: 	jne	.Ltmp2197 # Offset: 4967
    0000136d: 	movzbl	(%r14), %eax
    00001371: 	movb	%al, 0x90(%rsp)
    00001378: 	movq	0x38(%rsp), %rax
.Ltmp2224:
    0000137d: 	movq	%r13, 0x88(%rsp)
    00001385: 	movb	$0x0, (%rax,%r13)
    0000138a: 	movabsq	$0x3fffffffffffffff, %rax
    00001394: 	subq	0x88(%rsp), %rax
    0000139c: 	cmpq	$0x16, %rax
    000013a0: 	jbe	.Ltmp2198 # Offset: 5024
    000013a6: 	movq	0x40(%rsp), %rdi
    000013ab: 	movl	$0x17, %edx
    000013b0: 	leaq	DATAat0x3d25b(%rip), %rsi
    000013b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 5047
    000013bc: 	callq	clock@PLT # Offset: 5052
    000013c1: 	movl	iterations(%rip), %ecx
    000013c7: 	movq	%rax, start_time(%rip)
    000013ce: 	testl	%ecx, %ecx
    000013d0: 	jle	.Ltmp2199 # Offset: 5072
    000013d6: 	movsd	DATAat0x3d6b0(%rip), %xmm2
    000013de: 	movq	0x28(%rsp), %rax
    000013e3: 	xorl	%r13d, %r13d
    000013e6: 	leaq	0xfa00(%rbp), %rbx
    000013ed: 	xorq	0x30(%rsp), %rax
    000013f2: 	xorq	0x20(%rsp), %rax
    000013f7: 	movabsq	$-0x8000000000000000, %r14
    00001401: 	xorq	%rax, %r12
    00001404: 	movsd	%xmm2, 0x18(%rsp)
    0000140a: 	leaq	DATAat0x3d1d8(%rip), %r15
    00001411: 	movq	%r12, %xmm2
    00001416: 	punpcklqdq	%xmm2, %xmm2
    0000141a: 	movaps	%xmm2, (%rsp)
    0000141e: 	nop # Size: 2
.Ltmp2203:
    00001420: 	movq	%rbp, %rax
    00001423: 	pxor	%xmm1, %xmm1
    00001427: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2200:
    00001430: 	movdqu	(%rax), %xmm0
    00001434: 	pxor	(%rsp), %xmm0
    00001439: 	addq	$0x10, %rax
    0000143d: 	paddq	%xmm0, %xmm1
    00001441: 	cmpq	%rax, %rbx
    00001444: 	jne	.Ltmp2200 # Offset: 5188
    00001446: 	movsd	init_value(%rip), %xmm0
    0000144e: 	comisd	0x18(%rsp), %xmm0
    00001454: 	jae	.Ltmp2201 # Offset: 5204
    0000145a: 	cvttsd2si	%xmm0, %rax
.Ltmp2222:
    0000145f: 	xorq	%r12, %rax
    00001462: 	movdqa	%xmm1, %xmm0
    00001466: 	imulq	$0x1f40, %rax, %rdx
    0000146d: 	psrldq	$0x8, %xmm0
    00001472: 	paddq	%xmm0, %xmm1
    00001476: 	movq	%xmm1, %rax
    0000147b: 	cmpq	%rax, %rdx
    0000147e: 	je	.Ltmp2202 # Offset: 5246
    00001480: 	movl	current_test(%rip), %edx
    00001486: 	movq	%r15, %rsi
    00001489: 	movl	$0x1, %edi
    0000148e: 	xorl	%eax, %eax
    00001490: 	callq	__printf_chk@PLT # Offset: 5264
    00001495: 	movl	iterations(%rip), %ecx
.Ltmp2202:
    0000149b: 	addl	$0x1, %r13d
    0000149f: 	cmpl	%ecx, %r13d
    000014a2: 	jl	.Ltmp2203 # Offset: 5282
.Ltmp2199:
    000014a8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000014af: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000014b6: 	subq	$0x20, %rax
    000014ba: 	cmpq	%rax, %rbx
    000014bd: 	je	.Ltmp2204 # Offset: 5309
    000014c3: 	leaq	0x10(%rbx), %rdi
    000014c7: 	movq	0x88(%rsp), %r12
    000014cf: 	movq	%rdi, (%rbx)
    000014d2: 	movq	0x80(%rsp), %rbp
    000014da: 	movq	%rbp, %rax
    000014dd: 	addq	%r12, %rax
    000014e0: 	je	.Ltmp2205 # Offset: 5344
    000014e2: 	testq	%rbp, %rbp
    000014e5: 	je	.Ltmp2206 # Offset: 5349
.Ltmp2205:
    000014eb: 	movq	%r12, 0x58(%rsp)
    000014f0: 	cmpq	$0xf, %r12
    000014f4: 	ja	.Ltmp2207 # Offset: 5364
    000014fa: 	cmpq	$0x1, %r12
    000014fe: 	jne	.Ltmp2208 # Offset: 5374
    00001504: 	movzbl	(%rbp), %eax
    00001508: 	movb	%al, 0x10(%rbx)
.Ltmp2257:
    0000150b: 	movq	%r12, 0x8(%rbx)
    0000150f: 	movb	$0x0, (%rdi,%r12)
    00001514: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000151b: 	addq	$0x20, %rax
    0000151f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2244:
    00001526: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000152d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001534: 	je	.Ltmp2209 # Offset: 5428
.Ltmp2243:
    0000153a: 	movq	-0x20(%rax), %rbp
    0000153e: 	callq	clock@PLT # Offset: 5438
    00001543: 	pxor	%xmm0, %xmm0
    00001547: 	movq	%rax, end_time(%rip)
    0000154e: 	movq	%rbp, %rdi
    00001551: 	subq	start_time(%rip), %rax
    00001558: 	cvtsi2sd	%rax, %xmm0
    0000155d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001565: 	callq	_Z13record_resultdPKc # Offset: 5477
    0000156a: 	movq	0x80(%rsp), %rdi
    00001572: 	cmpq	0x38(%rsp), %rdi
    00001577: 	je	.Ltmp2210 # Offset: 5495
    00001579: 	movq	0x90(%rsp), %rax
    00001581: 	leaq	0x1(%rax), %rsi
    00001585: 	callq	_ZdlPvm@PLT # Offset: 5509
.Ltmp2210:
    0000158a: 	movq	0x60(%rsp), %rdi
    0000158f: 	cmpq	0x48(%rsp), %rdi
    00001594: 	je	.Ltmp2211 # Offset: 5524
    00001596: 	movq	0x70(%rsp), %rax
    0000159b: 	leaq	0x1(%rax), %rsi
    0000159f: 	callq	_ZdlPvm@PLT # Offset: 5535
.Ltmp2211:
    000015a4: 	movq	0xa8(%rsp), %rax
    000015ac: 	subq	%fs:0x28, %rax
    000015b5: 	jne	.Ltmp2212 # Offset: 5557
    000015bb: 	addq	$0xb8, %rsp
    000015c2: 	popq	%rbx
    000015c3: 	popq	%rbp
    000015c4: 	popq	%r12
    000015c6: 	popq	%r13
    000015c8: 	popq	%r14
    000015ca: 	popq	%r15
    000015cc: 	retq # Offset: 5580
    000015cd: 	nopl	(%rax) # Size: 3
.Ltmp2065:
    000015d0: 	subsd	0x18(%rsp), %xmm0
    000015d6: 	cvttsd2si	%xmm0, %rax
    000015db: 	xorq	%r14, %rax
    000015de: 	jmp	.Ltmp2213 # Offset: 5598
.Ltmp2071:
    000015e3: 	leaq	0x58(%rsp), %rsi
    000015e8: 	xorl	%edx, %edx
    000015ea: 	movq	%rbx, %rdi
    000015ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5613
    000015f2: 	movq	%rax, (%rbx)
    000015f5: 	movq	%rax, %rdi
    000015f8: 	movq	0x58(%rsp), %rax
    000015fd: 	movq	%rax, 0x10(%rbx)
.Ltmp2269:
    00001601: 	movq	%r13, %rdx
    00001604: 	movq	%r14, %rsi
    00001607: 	callq	memcpy@PLT # Offset: 5639
    0000160c: 	movq	0x58(%rsp), %r13
    00001611: 	movq	(%rbx), %rdi
    00001614: 	jmp	.Ltmp2214 # Offset: 5652
    00001619: 	nopl	(%rax) # Size: 7
.Ltmp2082:
    00001620: 	subsd	0x18(%rsp), %xmm0
    00001626: 	cvttsd2si	%xmm0, %rax
    0000162b: 	xorq	%r14, %rax
    0000162e: 	jmp	.Ltmp2215 # Offset: 5678
    00001633: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2133:
    00001638: 	subsd	0x18(%rsp), %xmm0
    0000163e: 	cvttsd2si	%xmm0, %rax
    00001643: 	xorq	%r14, %rax
    00001646: 	jmp	.Ltmp2216 # Offset: 5702
    0000164b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2099:
    00001650: 	movabsq	$-0x8000000000000000, %rsi
    0000165a: 	subsd	0x18(%rsp), %xmm0
    00001660: 	cvttsd2si	%xmm0, %rax
    00001665: 	xorq	%rsi, %rax
    00001668: 	jmp	.Ltmp2217 # Offset: 5736
    0000166d: 	nopl	(%rax) # Size: 3
.Ltmp2116:
    00001670: 	subsd	0x18(%rsp), %xmm0
    00001676: 	cvttsd2si	%xmm0, %rax
    0000167b: 	xorq	%r14, %rax
    0000167e: 	jmp	.Ltmp2218 # Offset: 5758
    00001683: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2167:
    00001688: 	subsd	0x18(%rsp), %xmm0
    0000168e: 	cvttsd2si	%xmm0, %rax
    00001693: 	xorq	%r14, %rax
    00001696: 	jmp	.Ltmp2219 # Offset: 5782
    0000169b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2150:
    000016a0: 	movabsq	$-0x8000000000000000, %rsi
    000016aa: 	subsd	0x18(%rsp), %xmm0
    000016b0: 	cvttsd2si	%xmm0, %rax
    000016b5: 	xorq	%rsi, %rax
    000016b8: 	jmp	.Ltmp2220 # Offset: 5816
    000016bd: 	nopl	(%rax) # Size: 3
.Ltmp2184:
    000016c0: 	subsd	0x18(%rsp), %xmm0
    000016c6: 	cvttsd2si	%xmm0, %rax
    000016cb: 	xorq	%r14, %rax
    000016ce: 	jmp	.Ltmp2221 # Offset: 5838
    000016d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2201:
    000016d8: 	subsd	0x18(%rsp), %xmm0
    000016de: 	cvttsd2si	%xmm0, %rax
    000016e3: 	xorq	%r14, %rax
    000016e6: 	jmp	.Ltmp2222 # Offset: 5862
.Ltmp2197:
    000016eb: 	testq	%r13, %r13
    000016ee: 	jne	.Ltmp2223 # Offset: 5870
    000016f4: 	movq	0x38(%rsp), %rax
    000016f9: 	jmp	.Ltmp2224 # Offset: 5881
.Ltmp2180:
    000016fe: 	testq	%r13, %r13
    00001701: 	jne	.Ltmp2225 # Offset: 5889
    00001707: 	movq	0x38(%rsp), %rax
    0000170c: 	jmp	.Ltmp2226 # Offset: 5900
.Ltmp2163:
    00001711: 	testq	%r13, %r13
    00001714: 	jne	.Ltmp2227 # Offset: 5908
    0000171a: 	movq	0x38(%rsp), %rax
    0000171f: 	jmp	.Ltmp2228 # Offset: 5919
.Ltmp2146:
    00001724: 	testq	%r13, %r13
    00001727: 	jne	.Ltmp2229 # Offset: 5927
    0000172d: 	movq	0x38(%rsp), %rax
    00001732: 	jmp	.Ltmp2230 # Offset: 5938
.Ltmp2112:
    00001737: 	testq	%r13, %r13
    0000173a: 	jne	.Ltmp2231 # Offset: 5946
    00001740: 	movq	0x38(%rsp), %rax
    00001745: 	jmp	.Ltmp2232 # Offset: 5957
.Ltmp2129:
    0000174a: 	testq	%r13, %r13
    0000174d: 	jne	.Ltmp2233 # Offset: 5965
    00001753: 	movq	0x38(%rsp), %rax
    00001758: 	jmp	.Ltmp2234 # Offset: 5976
.Ltmp2078:
    0000175d: 	testq	%r13, %r13
    00001760: 	jne	.Ltmp2235 # Offset: 5984
    00001766: 	movq	0x38(%rsp), %rax
    0000176b: 	jmp	.Ltmp2236 # Offset: 5995
.Ltmp2095:
    00001770: 	testq	%r13, %r13
    00001773: 	jne	.Ltmp2237 # Offset: 6003
    00001779: 	movq	0x38(%rsp), %rax
    0000177e: 	jmp	.Ltmp2238 # Offset: 6014
.Ltmp2094:
    00001783: 	movq	0x40(%rsp), %rdi
    00001788: 	leaq	0x58(%rsp), %rsi
    0000178d: 	xorl	%edx, %edx
    0000178f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6031
    00001794: 	movq	%rax, 0x80(%rsp)
    0000179c: 	movq	%rax, %rdi
    0000179f: 	movq	0x58(%rsp), %rax
    000017a4: 	movq	%rax, 0x90(%rsp)
.Ltmp2279:
    000017ac: 	movq	%r13, %rdx
    000017af: 	movq	%r14, %rsi
    000017b2: 	callq	memcpy@PLT # Offset: 6066
    000017b7: 	movq	0x58(%rsp), %r13
    000017bc: 	movq	0x80(%rsp), %rax
    000017c4: 	jmp	.Ltmp2238 # Offset: 6084
.Ltmp2128:
    000017c9: 	movq	0x40(%rsp), %rdi
    000017ce: 	leaq	0x58(%rsp), %rsi
    000017d3: 	xorl	%edx, %edx
    000017d5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6101
    000017da: 	movq	%rax, 0x80(%rsp)
    000017e2: 	movq	%rax, %rdi
    000017e5: 	movq	0x58(%rsp), %rax
    000017ea: 	movq	%rax, 0x90(%rsp)
.Ltmp2277:
    000017f2: 	movq	%r13, %rdx
    000017f5: 	movq	%r14, %rsi
    000017f8: 	callq	memcpy@PLT # Offset: 6136
    000017fd: 	movq	0x58(%rsp), %r13
    00001802: 	movq	0x80(%rsp), %rax
    0000180a: 	jmp	.Ltmp2234 # Offset: 6154
.Ltmp2111:
    0000180f: 	movq	0x40(%rsp), %rdi
    00001814: 	leaq	0x58(%rsp), %rsi
    00001819: 	xorl	%edx, %edx
    0000181b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6171
    00001820: 	movq	%rax, 0x80(%rsp)
    00001828: 	movq	%rax, %rdi
    0000182b: 	movq	0x58(%rsp), %rax
    00001830: 	movq	%rax, 0x90(%rsp)
.Ltmp2276:
    00001838: 	movq	%r13, %rdx
    0000183b: 	movq	%r14, %rsi
    0000183e: 	callq	memcpy@PLT # Offset: 6206
    00001843: 	movq	0x58(%rsp), %r13
    00001848: 	movq	0x80(%rsp), %rax
    00001850: 	jmp	.Ltmp2232 # Offset: 6224
.Ltmp2179:
    00001855: 	movq	0x40(%rsp), %rdi
    0000185a: 	leaq	0x58(%rsp), %rsi
    0000185f: 	xorl	%edx, %edx
    00001861: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6241
    00001866: 	movq	%rax, 0x80(%rsp)
    0000186e: 	movq	%rax, %rdi
    00001871: 	movq	0x58(%rsp), %rax
    00001876: 	movq	%rax, 0x90(%rsp)
.Ltmp2273:
    0000187e: 	movq	%r13, %rdx
    00001881: 	movq	%r14, %rsi
    00001884: 	callq	memcpy@PLT # Offset: 6276
    00001889: 	movq	0x58(%rsp), %r13
    0000188e: 	movq	0x80(%rsp), %rax
    00001896: 	jmp	.Ltmp2226 # Offset: 6294
.Ltmp2162:
    0000189b: 	movq	0x40(%rsp), %rdi
    000018a0: 	leaq	0x58(%rsp), %rsi
    000018a5: 	xorl	%edx, %edx
    000018a7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6311
    000018ac: 	movq	%rax, 0x80(%rsp)
    000018b4: 	movq	%rax, %rdi
    000018b7: 	movq	0x58(%rsp), %rax
    000018bc: 	movq	%rax, 0x90(%rsp)
.Ltmp2274:
    000018c4: 	movq	%r13, %rdx
    000018c7: 	movq	%r14, %rsi
    000018ca: 	callq	memcpy@PLT # Offset: 6346
    000018cf: 	movq	0x58(%rsp), %r13
    000018d4: 	movq	0x80(%rsp), %rax
    000018dc: 	jmp	.Ltmp2228 # Offset: 6364
.Ltmp2145:
    000018e1: 	movq	0x40(%rsp), %rdi
    000018e6: 	leaq	0x58(%rsp), %rsi
    000018eb: 	xorl	%edx, %edx
    000018ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6381
    000018f2: 	movq	%rax, 0x80(%rsp)
    000018fa: 	movq	%rax, %rdi
    000018fd: 	movq	0x58(%rsp), %rax
    00001902: 	movq	%rax, 0x90(%rsp)
.Ltmp2275:
    0000190a: 	movq	%r13, %rdx
    0000190d: 	movq	%r14, %rsi
    00001910: 	callq	memcpy@PLT # Offset: 6416
    00001915: 	movq	0x58(%rsp), %r13
    0000191a: 	movq	0x80(%rsp), %rax
    00001922: 	jmp	.Ltmp2230 # Offset: 6434
.Ltmp2196:
    00001927: 	movq	0x40(%rsp), %rdi
    0000192c: 	leaq	0x58(%rsp), %rsi
    00001931: 	xorl	%edx, %edx
    00001933: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6451
    00001938: 	movq	%rax, 0x80(%rsp)
    00001940: 	movq	%rax, %rdi
    00001943: 	movq	0x58(%rsp), %rax
    00001948: 	movq	%rax, 0x90(%rsp)
.Ltmp2272:
    00001950: 	movq	%r13, %rdx
    00001953: 	movq	%r14, %rsi
    00001956: 	callq	memcpy@PLT # Offset: 6486
    0000195b: 	movq	0x58(%rsp), %r13
    00001960: 	movq	0x80(%rsp), %rax
    00001968: 	jmp	.Ltmp2224 # Offset: 6504
.Ltmp2077:
    0000196d: 	movq	0x40(%rsp), %rdi
    00001972: 	leaq	0x58(%rsp), %rsi
    00001977: 	xorl	%edx, %edx
    00001979: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6521
    0000197e: 	movq	%rax, 0x80(%rsp)
    00001986: 	movq	%rax, %rdi
    00001989: 	movq	0x58(%rsp), %rax
    0000198e: 	movq	%rax, 0x90(%rsp)
.Ltmp2278:
    00001996: 	movq	%r13, %rdx
    00001999: 	movq	%r14, %rsi
    0000199c: 	callq	memcpy@PLT # Offset: 6556
    000019a1: 	movq	0x58(%rsp), %r13
    000019a6: 	movq	0x80(%rsp), %rax
    000019ae: 	jmp	.Ltmp2236 # Offset: 6574
.Ltmp2073:
    000019b3: 	movq	-0x8(%rdx), %rax
    000019b7: 	addq	$0x200, %rax
    000019bd: 	jmp	.Ltmp2239 # Offset: 6589
.Ltmp2187:
    000019c2: 	movq	0x40(%rsp), %rsi
    000019c7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019ce: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6606
    000019d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019e8: 	jne	.Ltmp2240 # Offset: 6632
.Ltmp2192:
    000019ee: 	movq	-0x8(%rdx), %rax
    000019f2: 	addq	$0x200, %rax
    000019f8: 	jmp	.Ltmp2240 # Offset: 6648
.Ltmp2175:
    000019fd: 	movq	-0x8(%rdx), %rax
    00001a01: 	addq	$0x200, %rax
    00001a07: 	jmp	.Ltmp2241 # Offset: 6663
.Ltmp2068:
    00001a0c: 	movq	0x40(%rsp), %rsi
    00001a11: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a18: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6680
    00001a1d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a24: 	jmp	.Ltmp2242 # Offset: 6692
.Ltmp2209:
    00001a29: 	movq	-0x8(%rdx), %rax
    00001a2d: 	addq	$0x200, %rax
    00001a33: 	jmp	.Ltmp2243 # Offset: 6707
.Ltmp2204:
    00001a38: 	movq	0x40(%rsp), %rsi
    00001a3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a44: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6724
    00001a49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a50: 	jmp	.Ltmp2244 # Offset: 6736
.Ltmp2102:
    00001a55: 	movq	0x40(%rsp), %rsi
    00001a5a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a61: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6753
    00001a66: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a6d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a74: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a7b: 	jne	.Ltmp2245 # Offset: 6779
.Ltmp2107:
    00001a81: 	movq	-0x8(%rdx), %rax
    00001a85: 	addq	$0x200, %rax
    00001a8b: 	jmp	.Ltmp2245 # Offset: 6795
.Ltmp2090:
    00001a90: 	movq	-0x8(%rdx), %rax
    00001a94: 	addq	$0x200, %rax
    00001a9a: 	jmp	.Ltmp2246 # Offset: 6810
.Ltmp2085:
    00001a9f: 	movq	0x40(%rsp), %rsi
    00001aa4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001aab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6827
    00001ab0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ab7: 	jmp	.Ltmp2247 # Offset: 6839
.Ltmp2170:
    00001abc: 	movq	0x40(%rsp), %rsi
    00001ac1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ac8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6856
    00001acd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ad4: 	jmp	.Ltmp2248 # Offset: 6868
.Ltmp2124:
    00001ad9: 	movq	-0x8(%rdx), %rax
    00001add: 	addq	$0x200, %rax
    00001ae3: 	jmp	.Ltmp2249 # Offset: 6883
.Ltmp2119:
    00001ae8: 	movq	0x40(%rsp), %rsi
    00001aed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001af4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6900
    00001af9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b00: 	jmp	.Ltmp2250 # Offset: 6912
.Ltmp2158:
    00001b05: 	movq	-0x8(%rdx), %rax
    00001b09: 	addq	$0x200, %rax
    00001b0f: 	jmp	.Ltmp2251 # Offset: 6927
.Ltmp2153:
    00001b14: 	movq	0x40(%rsp), %rsi
    00001b19: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b20: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6944
    00001b25: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b2c: 	jmp	.Ltmp2252 # Offset: 6956
.Ltmp2141:
    00001b31: 	movq	-0x8(%rdx), %rax
    00001b35: 	addq	$0x200, %rax
    00001b3b: 	jmp	.Ltmp2253 # Offset: 6971
.Ltmp2136:
    00001b40: 	movq	0x40(%rsp), %rsi
    00001b45: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b4c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6988
    00001b51: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b58: 	jmp	.Ltmp2254 # Offset: 7000
.Ltmp2140:
    00001b5d: 	testq	%r13, %r13
    00001b60: 	je	.Ltmp2255 # Offset: 7008
    00001b66: 	jmp	.Ltmp2256 # Offset: 7014
    00001b6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2208:
    00001b70: 	testq	%r12, %r12
    00001b73: 	je	.Ltmp2257 # Offset: 7027
    00001b79: 	jmp	.Ltmp2258 # Offset: 7033
    00001b7e: 	nop # Size: 2
.Ltmp2089:
    00001b80: 	testq	%r13, %r13
    00001b83: 	je	.Ltmp2259 # Offset: 7043
    00001b89: 	jmp	.Ltmp2260 # Offset: 7049
    00001b8e: 	nop # Size: 2
.Ltmp2123:
    00001b90: 	testq	%r13, %r13
    00001b93: 	je	.Ltmp2261 # Offset: 7059
    00001b99: 	jmp	.Ltmp2262 # Offset: 7065
    00001b9e: 	nop # Size: 2
.Ltmp2174:
    00001ba0: 	testq	%r13, %r13
    00001ba3: 	je	.Ltmp2263 # Offset: 7075
.Ltmp2270:
    00001ba9: 	movq	%r13, %rdx
    00001bac: 	movq	%r14, %rsi
    00001baf: 	callq	memcpy@PLT # Offset: 7087
    00001bb4: 	movq	0x58(%rsp), %r13
    00001bb9: 	movq	(%rbx), %rdi
    00001bbc: 	jmp	.Ltmp2263 # Offset: 7100
.Ltmp2106:
    00001bc1: 	testq	%r13, %r13
    00001bc4: 	je	.Ltmp2264 # Offset: 7108
    00001bca: 	jmp	.Ltmp2265 # Offset: 7114
    00001bcf: 	nop # Size: 1
.Ltmp2191:
    00001bd0: 	testq	%r13, %r13
    00001bd3: 	je	.Ltmp2266 # Offset: 7123
.Ltmp2271:
    00001bd9: 	movq	%r13, %rdx
    00001bdc: 	movq	%r14, %rsi
    00001bdf: 	callq	memcpy@PLT # Offset: 7135
    00001be4: 	movq	0x58(%rsp), %r13
    00001be9: 	movq	(%rbx), %rdi
    00001bec: 	jmp	.Ltmp2266 # Offset: 7148
.Ltmp2157:
    00001bf1: 	testq	%r13, %r13
    00001bf4: 	je	.Ltmp2267 # Offset: 7156
    00001bfa: 	jmp	.Ltmp2268 # Offset: 7162
    00001bfc: 	nopl	(%rax) # Size: 4
.Ltmp2072:
    00001c00: 	testq	%r13, %r13
    00001c03: 	je	.Ltmp2214 # Offset: 7171
    00001c09: 	jmp	.Ltmp2269 # Offset: 7177
    00001c0e: 	nop # Size: 2
.Ltmp2139:
    00001c10: 	leaq	0x58(%rsp), %rsi
    00001c15: 	xorl	%edx, %edx
    00001c17: 	movq	%rbx, %rdi
    00001c1a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7194
    00001c1f: 	movq	%rax, (%rbx)
    00001c22: 	movq	%rax, %rdi
    00001c25: 	movq	0x58(%rsp), %rax
    00001c2a: 	movq	%rax, 0x10(%rbx)
.Ltmp2256:
    00001c2e: 	movq	%r13, %rdx
    00001c31: 	movq	%r14, %rsi
    00001c34: 	callq	memcpy@PLT # Offset: 7220
    00001c39: 	movq	0x58(%rsp), %r13
    00001c3e: 	movq	(%rbx), %rdi
    00001c41: 	jmp	.Ltmp2255 # Offset: 7233
.Ltmp2156:
    00001c46: 	leaq	0x58(%rsp), %rsi
    00001c4b: 	xorl	%edx, %edx
    00001c4d: 	movq	%rbx, %rdi
    00001c50: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7248
    00001c55: 	movq	%rax, (%rbx)
    00001c58: 	movq	%rax, %rdi
    00001c5b: 	movq	0x58(%rsp), %rax
    00001c60: 	movq	%rax, 0x10(%rbx)
.Ltmp2268:
    00001c64: 	movq	%r13, %rdx
    00001c67: 	movq	%r14, %rsi
    00001c6a: 	callq	memcpy@PLT # Offset: 7274
    00001c6f: 	movq	0x58(%rsp), %r13
    00001c74: 	movq	(%rbx), %rdi
    00001c77: 	jmp	.Ltmp2267 # Offset: 7287
.Ltmp2207:
    00001c7c: 	leaq	0x58(%rsp), %rsi
    00001c81: 	xorl	%edx, %edx
    00001c83: 	movq	%rbx, %rdi
    00001c86: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7302
    00001c8b: 	movq	%rax, (%rbx)
    00001c8e: 	movq	%rax, %rdi
    00001c91: 	movq	0x58(%rsp), %rax
    00001c96: 	movq	%rax, 0x10(%rbx)
.Ltmp2258:
    00001c9a: 	movq	%r12, %rdx
    00001c9d: 	movq	%rbp, %rsi
    00001ca0: 	callq	memcpy@PLT # Offset: 7328
    00001ca5: 	movq	0x58(%rsp), %r12
    00001caa: 	movq	(%rbx), %rdi
    00001cad: 	jmp	.Ltmp2257 # Offset: 7341
.Ltmp2105:
    00001cb2: 	leaq	0x58(%rsp), %rsi
    00001cb7: 	xorl	%edx, %edx
    00001cb9: 	movq	%rbx, %rdi
    00001cbc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7356
    00001cc1: 	movq	%rax, (%rbx)
    00001cc4: 	movq	%rax, %rdi
    00001cc7: 	movq	0x58(%rsp), %rax
    00001ccc: 	movq	%rax, 0x10(%rbx)
.Ltmp2265:
    00001cd0: 	movq	%r13, %rdx
    00001cd3: 	movq	%r14, %rsi
    00001cd6: 	callq	memcpy@PLT # Offset: 7382
    00001cdb: 	movq	0x58(%rsp), %r13
    00001ce0: 	movq	(%rbx), %rdi
    00001ce3: 	jmp	.Ltmp2264 # Offset: 7395
.Ltmp2088:
    00001ce8: 	leaq	0x58(%rsp), %rsi
    00001ced: 	xorl	%edx, %edx
    00001cef: 	movq	%rbx, %rdi
    00001cf2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7410
    00001cf7: 	movq	%rax, (%rbx)
    00001cfa: 	movq	%rax, %rdi
    00001cfd: 	movq	0x58(%rsp), %rax
    00001d02: 	movq	%rax, 0x10(%rbx)
.Ltmp2260:
    00001d06: 	movq	%r13, %rdx
    00001d09: 	movq	%r14, %rsi
    00001d0c: 	callq	memcpy@PLT # Offset: 7436
    00001d11: 	movq	0x58(%rsp), %r13
    00001d16: 	movq	(%rbx), %rdi
    00001d19: 	jmp	.Ltmp2259 # Offset: 7449
.Ltmp2173:
    00001d1e: 	leaq	0x58(%rsp), %rsi
    00001d23: 	xorl	%edx, %edx
    00001d25: 	movq	%rbx, %rdi
    00001d28: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7464
    00001d2d: 	movq	%rax, (%rbx)
    00001d30: 	movq	%rax, %rdi
    00001d33: 	movq	0x58(%rsp), %rax
    00001d38: 	movq	%rax, 0x10(%rbx)
    00001d3c: 	jmp	.Ltmp2270 # Offset: 7484
.Ltmp2122:
    00001d41: 	leaq	0x58(%rsp), %rsi
    00001d46: 	xorl	%edx, %edx
    00001d48: 	movq	%rbx, %rdi
    00001d4b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7499
    00001d50: 	movq	%rax, (%rbx)
    00001d53: 	movq	%rax, %rdi
    00001d56: 	movq	0x58(%rsp), %rax
    00001d5b: 	movq	%rax, 0x10(%rbx)
.Ltmp2262:
    00001d5f: 	movq	%r13, %rdx
    00001d62: 	movq	%r14, %rsi
    00001d65: 	callq	memcpy@PLT # Offset: 7525
    00001d6a: 	movq	0x58(%rsp), %r13
    00001d6f: 	movq	(%rbx), %rdi
    00001d72: 	jmp	.Ltmp2261 # Offset: 7538
.Ltmp2190:
    00001d77: 	leaq	0x58(%rsp), %rsi
    00001d7c: 	xorl	%edx, %edx
    00001d7e: 	movq	%rbx, %rdi
    00001d81: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7553
    00001d86: 	movq	%rax, (%rbx)
    00001d89: 	movq	%rax, %rdi
    00001d8c: 	movq	0x58(%rsp), %rax
    00001d91: 	movq	%rax, 0x10(%rbx)
    00001d95: 	jmp	.Ltmp2271 # Offset: 7573
.Ltmp2076:
    00001d9a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001da1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7585
.Ltmp2079:
    00001da6: 	leaq	DATAat0x3d182(%rip), %rdi
    00001dad: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7597
.Ltmp2087:
    00001db2: 	leaq	DATAat0x3d158(%rip), %rdi
    00001db9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7609
.Ltmp2093:
    00001dbe: 	leaq	DATAat0x3d158(%rip), %rdi
    00001dc5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7621
.Ltmp2096:
    00001dca: 	leaq	DATAat0x3d182(%rip), %rdi
    00001dd1: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7633
.Ltmp2104:
    00001dd6: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ddd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7645
.Ltmp2110:
    00001de2: 	leaq	DATAat0x3d158(%rip), %rdi
    00001de9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7657
.Ltmp2113:
    00001dee: 	leaq	DATAat0x3d182(%rip), %rdi
    00001df5: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7669
.Ltmp2121:
    00001dfa: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e01: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7681
.Ltmp2127:
    00001e06: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e0d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7693
.Ltmp2130:
    00001e12: 	leaq	DATAat0x3d182(%rip), %rdi
    00001e19: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7705
.Ltmp2138:
    00001e1e: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e25: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7717
.Ltmp2144:
    00001e2a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e31: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7729
.Ltmp2147:
    00001e36: 	leaq	DATAat0x3d182(%rip), %rdi
    00001e3d: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7741
.Ltmp2155:
    00001e42: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e49: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7753
.Ltmp2161:
    00001e4e: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e55: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7765
.Ltmp2164:
    00001e5a: 	leaq	DATAat0x3d182(%rip), %rdi
    00001e61: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7777
.Ltmp2172:
    00001e66: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e6d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7789
.Ltmp2178:
    00001e72: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e79: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7801
.Ltmp2181:
    00001e7e: 	leaq	DATAat0x3d182(%rip), %rdi
    00001e85: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7813
.Ltmp2189:
    00001e8a: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e91: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7825
.Ltmp2195:
    00001e96: 	leaq	DATAat0x3d158(%rip), %rdi
    00001e9d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7837
.Ltmp2198:
    00001ea2: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ea9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7849
.Ltmp2206:
    00001eae: 	leaq	DATAat0x3d158(%rip), %rdi
    00001eb5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7861
.Ltmp2212:
    00001eba: 	callq	__stack_chk_fail@PLT # Offset: 7866
.Ltmp2070:
    00001ebf: 	leaq	DATAat0x3d158(%rip), %rdi
    00001ec6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7878
.Ltmp2223:
    00001ecb: 	movq	0x38(%rsp), %rdi
    00001ed0: 	jmp	.Ltmp2272 # Offset: 7888
.Ltmp2225:
    00001ed5: 	movq	0x38(%rsp), %rdi
    00001eda: 	jmp	.Ltmp2273 # Offset: 7898
.Ltmp2227:
    00001edf: 	movq	0x38(%rsp), %rdi
    00001ee4: 	jmp	.Ltmp2274 # Offset: 7908
.Ltmp2229:
    00001ee9: 	movq	0x38(%rsp), %rdi
    00001eee: 	jmp	.Ltmp2275 # Offset: 7918
.Ltmp2231:
    00001ef3: 	movq	0x38(%rsp), %rdi
    00001ef8: 	jmp	.Ltmp2276 # Offset: 7928
.Ltmp2233:
    00001efd: 	movq	0x38(%rsp), %rdi
    00001f02: 	jmp	.Ltmp2277 # Offset: 7938
.Ltmp2235:
    00001f07: 	movq	0x38(%rsp), %rdi
    00001f0c: 	jmp	.Ltmp2278 # Offset: 7948
.Ltmp2237:
    00001f11: 	movq	0x38(%rsp), %rdi
    00001f16: 	jmp	.Ltmp2279 # Offset: 7958
    00001f1b: 	endbr64
.Ltmp2281:
    00001f1f: 	movq	%rax, %rbp
    00001f22: 	jmp	.Ltmp2280 # Offset: 7970
    00001f24: 	endbr64
    00001f28: 	jmp	.Ltmp2281 # Offset: 7976
    00001f2a: 	endbr64
    00001f2e: 	jmp	.Ltmp2281 # Offset: 7982
    00001f30: 	endbr64
    00001f34: 	jmp	.Ltmp2281 # Offset: 7988
    00001f36: 	endbr64
    00001f3a: 	jmp	.Ltmp2281 # Offset: 7994
    00001f3c: 	endbr64
    00001f40: 	jmp	.Ltmp2281 # Offset: 8000
    00001f42: 	endbr64
    00001f46: 	jmp	.Ltmp2281 # Offset: 8006
    00001f48: 	endbr64
    00001f4c: 	movq	%rax, %rbp
    00001f4f: 	jmp	.Ltmp2282 # Offset: 8015
    00001f51: 	endbr64
    00001f55: 	jmp	.Ltmp2281 # Offset: 8021
    00001f57: 	endbr64
    00001f5b: 	jmp	.Ltmp2281 # Offset: 8027
    00001f5d: 	endbr64
    00001f61: 	jmp	.Ltmp2281 # Offset: 8033
    00001f63: 	endbr64
    00001f67: 	jmp	.Ltmp2281 # Offset: 8039
.Ltmp2280:
    00001f69: 	movq	0x80(%rsp), %rdi
    00001f71: 	cmpq	0x38(%rsp), %rdi
    00001f76: 	je	.Ltmp2282 # Offset: 8054
    00001f78: 	movq	0x90(%rsp), %rax
    00001f80: 	leaq	0x1(%rax), %rsi
    00001f84: 	callq	_ZdlPvm@PLT # Offset: 8068
.Ltmp2282:
    00001f89: 	movq	0x60(%rsp), %rdi
    00001f8e: 	cmpq	0x48(%rsp), %rdi
    00001f93: 	je	.Ltmp2283 # Offset: 8083
    00001f95: 	movq	0x70(%rsp), %rax
    00001f9a: 	leaq	0x1(%rax), %rsi
    00001f9e: 	callq	_ZdlPvm@PLT # Offset: 8094
.Ltmp2283:
    00001fa3: 	movq	%rbp, %rdi
    00001fa6: 	callq	_Unwind_Resume@PLT # Offset: 8102
    00001fab: 	endbr64
    00001faf: 	jmp	.Ltmp2281 # Offset: 8111
    00001fb4: 	endbr64
    00001fb8: 	jmp	.Ltmp2281 # Offset: 8120
    00001fbd: 	endbr64
    00001fc1: 	jmp	.Ltmp2281 # Offset: 8129
    00001fc6: 	endbr64
    00001fca: 	jmp	.Ltmp2281 # Offset: 8138
    00001fcf: 	endbr64
    00001fd3: 	jmp	.Ltmp2281 # Offset: 8147
    00001fd8: 	endbr64
    00001fdc: 	jmp	.Ltmp2281 # Offset: 8156
    00001fe1: 	endbr64
    00001fe5: 	jmp	.Ltmp2281 # Offset: 8165
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyImENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z20TestLoopsIntegerOnlyItENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_" after disassembly {
  Number      : 147
  State       : disassembled
  Address     : 0x17b10
  Size        : 0x1de2
  MaxSize     : 0x1df0
  Offset      : 0x17b10
  Section     : .text
  Orc Section : .local.text._Z20TestLoopsIntegerOnlyItENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0146:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%edx, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdi, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0xa8, %rsp
    0000001e: 	movl	%esi, 0x28(%rsp)
    00000022: 	leaq	0x80(%rsp), %rsi
    0000002a: 	leaq	0x70(%rsp), %rdi
    0000002f: 	movl	%edx, 0x2c(%rsp)
    00000033: 	movl	$0xd, %edx
    00000038: 	movl	%ecx, 0x30(%rsp)
    0000003c: 	movl	%r8d, 0x34(%rsp)
    00000041: 	movw	%cx, 0x14(%rsp)
    00000046: 	movw	%r8w, 0x16(%rsp)
    0000004c: 	movq	%fs:0x28, %rax
    00000055: 	movq	%rax, 0x98(%rsp)
    0000005d: 	xorl	%eax, %eax
    0000005f: 	leaq	0x60(%rsp), %rax
    00000064: 	movq	%rsi, 0x18(%rsp)
    00000069: 	movq	%rax, 0x38(%rsp)
    0000006e: 	movq	%rax, 0x50(%rsp)
    00000073: 	movabsq	$0x745f3631746e6975, %rax
    0000007d: 	movq	%rsi, 0x70(%rsp)
    00000082: 	leaq	DATAat0x3d1f1(%rip), %rsi
    00000089: 	movq	%rax, 0x60(%rsp)
    0000008e: 	movq	$0x8, 0x58(%rsp)
    00000097: 	movb	$0x0, 0x68(%rsp)
    0000009c: 	movq	%rdi, 0x20(%rsp)
    000000a1: 	movq	%rax, 0x80(%rsp)
    000000a9: 	movq	$0x8, 0x78(%rsp)
    000000b2: 	movb	$0x0, 0x88(%rsp)
    000000ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 186
    000000bf: 	callq	clock@PLT # Offset: 191
    000000c4: 	movl	iterations(%rip), %ecx
    000000ca: 	xorl	%r13d, %r13d
    000000cd: 	leaq	0x3e80(%rbp), %rbx
    000000d4: 	movq	%rax, start_time(%rip)
    000000db: 	testl	%ecx, %ecx
    000000dd: 	jle	.Ltmp2284 # Offset: 221
    000000e3: 	movd	%r12d, %xmm0
    000000e8: 	leaq	DATAat0x3d1d8(%rip), %r14
    000000ef: 	punpcklwd	%xmm0, %xmm0
    000000f3: 	pshufd	$0x0, %xmm0, %xmm3
    000000f8: 	movaps	%xmm3, (%rsp)
    000000fc: 	nopl	(%rax) # Size: 4
.Ltmp2287:
    00000100: 	movq	%rbp, %rax
    00000103: 	pxor	%xmm1, %xmm1
    00000107: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2285:
    00000110: 	movdqu	(%rax), %xmm0
    00000114: 	pand	(%rsp), %xmm0
    00000119: 	addq	$0x10, %rax
    0000011d: 	paddw	%xmm0, %xmm1
    00000121: 	cmpq	%rax, %rbx
    00000124: 	jne	.Ltmp2285 # Offset: 292
    00000126: 	movdqa	%xmm1, %xmm0
    0000012a: 	cvttsd2si	init_value(%rip), %eax
    00000132: 	psrldq	$0x8, %xmm0
    00000137: 	paddw	%xmm0, %xmm1
    0000013b: 	movdqa	%xmm1, %xmm0
    0000013f: 	psrldq	$0x4, %xmm0
    00000144: 	andl	%r12d, %eax
    00000147: 	imulw	$0x1f40, %ax, %ax
    0000014c: 	paddw	%xmm0, %xmm1
    00000150: 	movdqa	%xmm1, %xmm0
    00000154: 	psrldq	$0x2, %xmm0
    00000159: 	paddw	%xmm0, %xmm1
    0000015d: 	pextrw	$0x0, %xmm1, %edx
    00000162: 	cmpw	%dx, %ax
    00000165: 	je	.Ltmp2286 # Offset: 357
    00000167: 	movl	current_test(%rip), %edx
    0000016d: 	movq	%r14, %rsi
    00000170: 	movl	$0x1, %edi
    00000175: 	xorl	%eax, %eax
    00000177: 	callq	__printf_chk@PLT # Offset: 375
    0000017c: 	movl	iterations(%rip), %ecx
.Ltmp2286:
    00000182: 	addl	$0x1, %r13d
    00000186: 	cmpl	%ecx, %r13d
    00000189: 	jl	.Ltmp2287 # Offset: 393
.Ltmp2284:
    0000018f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000196: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000019d: 	subq	$0x20, %rax
    000001a1: 	cmpq	%rax, %rbx
    000001a4: 	je	.Ltmp2288 # Offset: 420
    000001aa: 	leaq	0x10(%rbx), %rdi
    000001ae: 	movq	0x78(%rsp), %r13
    000001b3: 	movq	%rdi, (%rbx)
    000001b6: 	movq	0x70(%rsp), %r14
    000001bb: 	movq	%r14, %rax
    000001be: 	addq	%r13, %rax
    000001c1: 	je	.Ltmp2289 # Offset: 449
    000001c3: 	testq	%r14, %r14
    000001c6: 	je	.Ltmp2290 # Offset: 454
.Ltmp2289:
    000001cc: 	movq	%r13, 0x48(%rsp)
    000001d1: 	cmpq	$0xf, %r13
    000001d5: 	ja	.Ltmp2291 # Offset: 469
    000001db: 	cmpq	$0x1, %r13
    000001df: 	jne	.Ltmp2292 # Offset: 479
    000001e5: 	movzbl	(%r14), %eax
    000001e9: 	movb	%al, 0x10(%rbx)
.Ltmp2425:
    000001ec: 	movq	%r13, 0x8(%rbx)
    000001f0: 	movb	$0x0, (%rdi,%r13)
    000001f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000203: 	addq	$0x20, %rax
    00000207: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000215: 	je	.Ltmp2293 # Offset: 533
.Ltmp2451:
    0000021b: 	movq	-0x20(%rax), %r13
    0000021f: 	callq	clock@PLT # Offset: 543
    00000224: 	pxor	%xmm0, %xmm0
    00000228: 	movq	%rax, end_time(%rip)
    0000022f: 	movq	%r13, %rdi
    00000232: 	subq	start_time(%rip), %rax
    00000239: 	cvtsi2sd	%rax, %xmm0
    0000023e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000246: 	callq	_Z13record_resultdPKc # Offset: 582
    0000024b: 	movq	0x70(%rsp), %rdi
    00000250: 	cmpq	0x18(%rsp), %rdi
    00000255: 	je	.Ltmp2294 # Offset: 597
    00000257: 	movq	0x80(%rsp), %rax
    0000025f: 	leaq	0x1(%rax), %rsi
    00000263: 	callq	_ZdlPvm@PLT # Offset: 611
.Ltmp2294:
    00000268: 	movq	0x18(%rsp), %rax
    0000026d: 	movq	0x50(%rsp), %r14
    00000272: 	movq	0x58(%rsp), %r13
    00000277: 	movq	%rax, 0x70(%rsp)
    0000027c: 	movq	%r14, %rax
    0000027f: 	addq	%r13, %rax
    00000282: 	je	.Ltmp2295 # Offset: 642
    00000284: 	testq	%r14, %r14
    00000287: 	je	.Ltmp2296 # Offset: 647
.Ltmp2295:
    0000028d: 	movq	%r13, 0x48(%rsp)
    00000292: 	cmpq	$0xf, %r13
    00000296: 	ja	.Ltmp2297 # Offset: 662
    0000029c: 	cmpq	$0x1, %r13
    000002a0: 	jne	.Ltmp2298 # Offset: 672
    000002a6: 	movzbl	(%r14), %eax
    000002aa: 	movb	%al, 0x80(%rsp)
    000002b1: 	movq	0x18(%rsp), %rax
.Ltmp2437:
    000002b6: 	movq	%r13, 0x78(%rsp)
    000002bb: 	movb	$0x0, (%rax,%r13)
    000002c0: 	movabsq	$0x3fffffffffffffff, %rax
    000002ca: 	subq	0x78(%rsp), %rax
    000002cf: 	cmpq	$0x15, %rax
    000002d3: 	jbe	.Ltmp2299 # Offset: 723
    000002d9: 	movq	0x20(%rsp), %rdi
    000002de: 	movl	$0x16, %edx
    000002e3: 	leaq	DATAat0x3d1e8(%rip), %rsi
    000002ea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 746
    000002ef: 	callq	clock@PLT # Offset: 751
    000002f4: 	movl	iterations(%rip), %ecx
    000002fa: 	movq	%rax, start_time(%rip)
    00000301: 	testl	%ecx, %ecx
    00000303: 	jle	.Ltmp2300 # Offset: 771
    00000309: 	movzwl	0x30(%rsp), %eax
    0000030e: 	andw	0x2c(%rsp), %ax
    00000313: 	xorl	%r13d, %r13d
    00000316: 	leaq	0x3e80(%rbp), %rbx
    0000031d: 	andw	0x34(%rsp), %ax
    00000322: 	andw	0x28(%rsp), %ax
    00000327: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000032e: 	movd	%eax, %xmm0
    00000332: 	punpcklwd	%xmm0, %xmm0
    00000336: 	pshufd	$0x0, %xmm0, %xmm4
    0000033b: 	movaps	%xmm4, (%rsp)
    0000033f: 	nop # Size: 1
.Ltmp2303:
    00000340: 	movq	%rbp, %rax
    00000343: 	pxor	%xmm1, %xmm1
    00000347: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2301:
    00000350: 	movdqu	(%rax), %xmm0
    00000354: 	pand	(%rsp), %xmm0
    00000359: 	addq	$0x10, %rax
    0000035d: 	paddw	%xmm0, %xmm1
    00000361: 	cmpq	%rbx, %rax
    00000364: 	jne	.Ltmp2301 # Offset: 868
    00000366: 	movdqa	%xmm1, %xmm0
    0000036a: 	cvttsd2si	init_value(%rip), %eax
    00000372: 	psrldq	$0x8, %xmm0
    00000377: 	paddw	%xmm0, %xmm1
    0000037b: 	movdqa	%xmm1, %xmm0
    0000037f: 	psrldq	$0x4, %xmm0
    00000384: 	andl	%r15d, %eax
    00000387: 	andw	0x14(%rsp), %ax
    0000038c: 	andw	0x16(%rsp), %ax
    00000391: 	paddw	%xmm0, %xmm1
    00000395: 	andl	%r12d, %eax
    00000398: 	movdqa	%xmm1, %xmm0
    0000039c: 	imulw	$0x1f40, %ax, %ax
    000003a1: 	psrldq	$0x2, %xmm0
    000003a6: 	paddw	%xmm0, %xmm1
    000003aa: 	pextrw	$0x0, %xmm1, %edx
    000003af: 	cmpw	%dx, %ax
    000003b2: 	je	.Ltmp2302 # Offset: 946
    000003b4: 	movl	current_test(%rip), %edx
    000003ba: 	movq	%r14, %rsi
    000003bd: 	movl	$0x1, %edi
    000003c2: 	xorl	%eax, %eax
    000003c4: 	callq	__printf_chk@PLT # Offset: 964
    000003c9: 	movl	iterations(%rip), %ecx
.Ltmp2302:
    000003cf: 	addl	$0x1, %r13d
    000003d3: 	cmpl	%ecx, %r13d
    000003d6: 	jl	.Ltmp2303 # Offset: 982
.Ltmp2300:
    000003dc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003e3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000003ea: 	subq	$0x20, %rax
    000003ee: 	cmpq	%rax, %rbx
    000003f1: 	je	.Ltmp2304 # Offset: 1009
    000003f7: 	leaq	0x10(%rbx), %rdi
    000003fb: 	movq	0x78(%rsp), %r13
    00000400: 	movq	%rdi, (%rbx)
    00000403: 	movq	0x70(%rsp), %r14
    00000408: 	movq	%r14, %rax
    0000040b: 	addq	%r13, %rax
    0000040e: 	je	.Ltmp2305 # Offset: 1038
    00000410: 	testq	%r14, %r14
    00000413: 	je	.Ltmp2306 # Offset: 1043
.Ltmp2305:
    00000419: 	movq	%r13, 0x48(%rsp)
    0000041e: 	cmpq	$0xf, %r13
    00000422: 	ja	.Ltmp2307 # Offset: 1058
    00000428: 	cmpq	$0x1, %r13
    0000042c: 	jne	.Ltmp2308 # Offset: 1068
    00000432: 	movzbl	(%r14), %eax
    00000436: 	movb	%al, 0x10(%rbx)
.Ltmp2461:
    00000439: 	movq	%r13, 0x8(%rbx)
    0000043d: 	movb	$0x0, (%rdi,%r13)
    00000442: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000449: 	addq	$0x20, %rax
    0000044d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2453:
    00000454: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000045b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000462: 	je	.Ltmp2309 # Offset: 1122
.Ltmp2448:
    00000468: 	movq	-0x20(%rax), %r13
    0000046c: 	callq	clock@PLT # Offset: 1132
    00000471: 	pxor	%xmm0, %xmm0
    00000475: 	movq	%rax, end_time(%rip)
    0000047c: 	movq	%r13, %rdi
    0000047f: 	subq	start_time(%rip), %rax
    00000486: 	cvtsi2sd	%rax, %xmm0
    0000048b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000493: 	callq	_Z13record_resultdPKc # Offset: 1171
    00000498: 	movq	0x70(%rsp), %rdi
    0000049d: 	cmpq	0x18(%rsp), %rdi
    000004a2: 	je	.Ltmp2310 # Offset: 1186
    000004a4: 	movq	0x80(%rsp), %rax
    000004ac: 	leaq	0x1(%rax), %rsi
    000004b0: 	callq	_ZdlPvm@PLT # Offset: 1200
.Ltmp2310:
    000004b5: 	movq	0x18(%rsp), %rax
    000004ba: 	movq	0x50(%rsp), %r14
    000004bf: 	movq	0x58(%rsp), %r13
    000004c4: 	movq	%rax, 0x70(%rsp)
    000004c9: 	movq	%r14, %rax
    000004cc: 	addq	%r13, %rax
    000004cf: 	je	.Ltmp2311 # Offset: 1231
    000004d1: 	testq	%r14, %r14
    000004d4: 	je	.Ltmp2312 # Offset: 1236
.Ltmp2311:
    000004da: 	movq	%r13, 0x48(%rsp)
    000004df: 	cmpq	$0xf, %r13
    000004e3: 	ja	.Ltmp2313 # Offset: 1251
    000004e9: 	cmpq	$0x1, %r13
    000004ed: 	jne	.Ltmp2314 # Offset: 1261
    000004f3: 	movzbl	(%r14), %eax
    000004f7: 	movb	%al, 0x80(%rsp)
    000004fe: 	movq	0x18(%rsp), %rax
.Ltmp2435:
    00000503: 	movq	%r13, 0x78(%rsp)
    00000508: 	movb	$0x0, (%rax,%r13)
    0000050d: 	movabsq	$0x3fffffffffffffff, %rax
    00000517: 	subq	0x78(%rsp), %rax
    0000051c: 	cmpq	$0x16, %rax
    00000520: 	jbe	.Ltmp2315 # Offset: 1312
    00000526: 	movq	0x20(%rsp), %rdi
    0000052b: 	movl	$0x17, %edx
    00000530: 	leaq	DATAat0x3d1ff(%rip), %rsi
    00000537: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1335
    0000053c: 	callq	clock@PLT # Offset: 1340
    00000541: 	movl	iterations(%rip), %ecx
    00000547: 	movq	%rax, start_time(%rip)
    0000054e: 	testl	%ecx, %ecx
    00000550: 	jle	.Ltmp2316 # Offset: 1360
    00000556: 	movzwl	0x30(%rsp), %r14d
    0000055c: 	andw	0x2c(%rsp), %r14w
    00000562: 	xorl	%r13d, %r13d
    00000565: 	leaq	0x3e80(%rbp), %rbx
    0000056c: 	andw	0x34(%rsp), %r14w
    00000572: 	andw	0x28(%rsp), %r14w
    00000578: 	movd	%r14d, %xmm0
    0000057d: 	punpcklwd	%xmm0, %xmm0
    00000581: 	pshufd	$0x0, %xmm0, %xmm2
    00000586: 	movaps	%xmm2, (%rsp)
    0000058a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2319:
    00000590: 	movq	%rbp, %rax
    00000593: 	pxor	%xmm1, %xmm1
    00000597: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2317:
    000005a0: 	movdqu	(%rax), %xmm0
    000005a4: 	pand	(%rsp), %xmm0
    000005a9: 	addq	$0x10, %rax
    000005ad: 	paddw	%xmm0, %xmm1
    000005b1: 	cmpq	%rax, %rbx
    000005b4: 	jne	.Ltmp2317 # Offset: 1460
    000005b6: 	movdqa	%xmm1, %xmm0
    000005ba: 	cvttsd2si	init_value(%rip), %eax
    000005c2: 	psrldq	$0x8, %xmm0
    000005c7: 	paddw	%xmm0, %xmm1
    000005cb: 	movdqa	%xmm1, %xmm0
    000005cf: 	psrldq	$0x4, %xmm0
    000005d4: 	andl	%r14d, %eax
    000005d7: 	imulw	$0x1f40, %ax, %ax
    000005dc: 	paddw	%xmm0, %xmm1
    000005e0: 	movdqa	%xmm1, %xmm0
    000005e4: 	psrldq	$0x2, %xmm0
    000005e9: 	paddw	%xmm0, %xmm1
    000005ed: 	pextrw	$0x0, %xmm1, %edx
    000005f2: 	cmpw	%dx, %ax
    000005f5: 	je	.Ltmp2318 # Offset: 1525
    000005f7: 	movl	current_test(%rip), %edx
    000005fd: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000604: 	movl	$0x1, %edi
    00000609: 	xorl	%eax, %eax
    0000060b: 	callq	__printf_chk@PLT # Offset: 1547
    00000610: 	movl	iterations(%rip), %ecx
.Ltmp2318:
    00000616: 	addl	$0x1, %r13d
    0000061a: 	cmpl	%ecx, %r13d
    0000061d: 	jl	.Ltmp2319 # Offset: 1565
.Ltmp2316:
    00000623: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000062a: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000631: 	subq	$0x20, %rax
    00000635: 	cmpq	%rax, %rbx
    00000638: 	je	.Ltmp2320 # Offset: 1592
    0000063e: 	leaq	0x10(%rbx), %rdi
    00000642: 	movq	0x78(%rsp), %r13
    00000647: 	movq	%rdi, (%rbx)
    0000064a: 	movq	0x70(%rsp), %r14
    0000064f: 	movq	%r14, %rax
    00000652: 	addq	%r13, %rax
    00000655: 	je	.Ltmp2321 # Offset: 1621
    00000657: 	testq	%r14, %r14
    0000065a: 	je	.Ltmp2322 # Offset: 1626
.Ltmp2321:
    00000660: 	movq	%r13, 0x48(%rsp)
    00000665: 	cmpq	$0xf, %r13
    00000669: 	ja	.Ltmp2323 # Offset: 1641
    0000066f: 	cmpq	$0x1, %r13
    00000673: 	jne	.Ltmp2324 # Offset: 1651
    00000679: 	movzbl	(%r14), %eax
    0000067d: 	movb	%al, 0x10(%rbx)
.Ltmp2456:
    00000680: 	movq	%r13, 0x8(%rbx)
    00000684: 	movb	$0x0, (%rdi,%r13)
    00000689: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000690: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000697: 	addq	$0x20, %rax
    0000069b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000006a9: 	je	.Ltmp2325 # Offset: 1705
.Ltmp2450:
    000006af: 	movq	-0x20(%rax), %r13
    000006b3: 	callq	clock@PLT # Offset: 1715
    000006b8: 	pxor	%xmm0, %xmm0
    000006bc: 	movq	%rax, end_time(%rip)
    000006c3: 	movq	%r13, %rdi
    000006c6: 	subq	start_time(%rip), %rax
    000006cd: 	cvtsi2sd	%rax, %xmm0
    000006d2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006da: 	callq	_Z13record_resultdPKc # Offset: 1754
    000006df: 	movq	0x70(%rsp), %rdi
    000006e4: 	cmpq	0x18(%rsp), %rdi
    000006e9: 	je	.Ltmp2326 # Offset: 1769
    000006eb: 	movq	0x80(%rsp), %rax
    000006f3: 	leaq	0x1(%rax), %rsi
    000006f7: 	callq	_ZdlPvm@PLT # Offset: 1783
.Ltmp2326:
    000006fc: 	movq	0x18(%rsp), %rax
    00000701: 	movq	0x50(%rsp), %r14
    00000706: 	movq	0x58(%rsp), %r13
    0000070b: 	movq	%rax, 0x70(%rsp)
    00000710: 	movq	%r14, %rax
    00000713: 	addq	%r13, %rax
    00000716: 	je	.Ltmp2327 # Offset: 1814
    00000718: 	testq	%r14, %r14
    0000071b: 	je	.Ltmp2328 # Offset: 1819
.Ltmp2327:
    00000721: 	movq	%r13, 0x48(%rsp)
    00000726: 	cmpq	$0xf, %r13
    0000072a: 	ja	.Ltmp2329 # Offset: 1834
    00000730: 	cmpq	$0x1, %r13
    00000734: 	jne	.Ltmp2330 # Offset: 1844
    0000073a: 	movzbl	(%r14), %eax
    0000073e: 	movb	%al, 0x80(%rsp)
    00000745: 	movq	0x18(%rsp), %rax
.Ltmp2441:
    0000074a: 	movq	%r13, 0x78(%rsp)
    0000074f: 	movb	$0x0, (%rax,%r13)
    00000754: 	movabsq	$0x3fffffffffffffff, %rax
    0000075e: 	subq	0x78(%rsp), %rax
    00000763: 	cmpq	$0xb, %rax
    00000767: 	jbe	.Ltmp2331 # Offset: 1895
    0000076d: 	movq	0x20(%rsp), %rdi
    00000772: 	movl	$0xc, %edx
    00000777: 	leaq	DATAat0x3d220(%rip), %rsi
    0000077e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1918
    00000783: 	callq	clock@PLT # Offset: 1923
    00000788: 	movl	iterations(%rip), %ecx
    0000078e: 	xorl	%r13d, %r13d
    00000791: 	leaq	0x3e80(%rbp), %rbx
    00000798: 	movq	%rax, start_time(%rip)
    0000079f: 	testl	%ecx, %ecx
    000007a1: 	jle	.Ltmp2332 # Offset: 1953
    000007a7: 	movd	%r12d, %xmm0
    000007ac: 	leaq	DATAat0x3d1d8(%rip), %r14
    000007b3: 	punpcklwd	%xmm0, %xmm0
    000007b7: 	pshufd	$0x0, %xmm0, %xmm3
    000007bc: 	movaps	%xmm3, (%rsp)
.Ltmp2335:
    000007c0: 	movq	%rbp, %rax
    000007c3: 	pxor	%xmm1, %xmm1
    000007c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2333:
    000007d0: 	movdqu	(%rax), %xmm0
    000007d4: 	por	(%rsp), %xmm0
    000007d9: 	addq	$0x10, %rax
    000007dd: 	paddw	%xmm0, %xmm1
    000007e1: 	cmpq	%rbx, %rax
    000007e4: 	jne	.Ltmp2333 # Offset: 2020
    000007e6: 	movdqa	%xmm1, %xmm0
    000007ea: 	cvttsd2si	init_value(%rip), %eax
    000007f2: 	psrldq	$0x8, %xmm0
    000007f7: 	paddw	%xmm0, %xmm1
    000007fb: 	movdqa	%xmm1, %xmm0
    000007ff: 	psrldq	$0x4, %xmm0
    00000804: 	orl	%r12d, %eax
    00000807: 	imulw	$0x1f40, %ax, %ax
    0000080c: 	paddw	%xmm0, %xmm1
    00000810: 	movdqa	%xmm1, %xmm0
    00000814: 	psrldq	$0x2, %xmm0
    00000819: 	paddw	%xmm0, %xmm1
    0000081d: 	pextrw	$0x0, %xmm1, %edx
    00000822: 	cmpw	%dx, %ax
    00000825: 	je	.Ltmp2334 # Offset: 2085
    00000827: 	movl	current_test(%rip), %edx
    0000082d: 	movq	%r14, %rsi
    00000830: 	movl	$0x1, %edi
    00000835: 	xorl	%eax, %eax
    00000837: 	callq	__printf_chk@PLT # Offset: 2103
    0000083c: 	movl	iterations(%rip), %ecx
.Ltmp2334:
    00000842: 	addl	$0x1, %r13d
    00000846: 	cmpl	%ecx, %r13d
    00000849: 	jl	.Ltmp2335 # Offset: 2121
.Ltmp2332:
    0000084f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000856: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000085d: 	subq	$0x20, %rax
    00000861: 	cmpq	%rax, %rbx
    00000864: 	je	.Ltmp2336 # Offset: 2148
    0000086a: 	leaq	0x10(%rbx), %rdi
    0000086e: 	movq	0x78(%rsp), %r13
    00000873: 	movq	%rdi, (%rbx)
    00000876: 	movq	0x70(%rsp), %r14
    0000087b: 	movq	%r14, %rax
    0000087e: 	addq	%r13, %rax
    00000881: 	je	.Ltmp2337 # Offset: 2177
    00000883: 	testq	%r14, %r14
    00000886: 	je	.Ltmp2338 # Offset: 2182
.Ltmp2337:
    0000088c: 	movq	%r13, 0x48(%rsp)
    00000891: 	cmpq	$0xf, %r13
    00000895: 	ja	.Ltmp2339 # Offset: 2197
    0000089b: 	cmpq	$0x1, %r13
    0000089f: 	jne	.Ltmp2340 # Offset: 2207
    000008a5: 	movzbl	(%r14), %eax
    000008a9: 	movb	%al, 0x10(%rbx)
.Ltmp2467:
    000008ac: 	movq	%r13, 0x8(%rbx)
    000008b0: 	movb	$0x0, (%rdi,%r13)
    000008b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008c3: 	addq	$0x20, %rax
    000008c7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008ce: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000008d5: 	je	.Ltmp2341 # Offset: 2261
.Ltmp2447:
    000008db: 	movq	-0x20(%rax), %r13
    000008df: 	callq	clock@PLT # Offset: 2271
    000008e4: 	pxor	%xmm0, %xmm0
    000008e8: 	movq	%rax, end_time(%rip)
    000008ef: 	movq	%r13, %rdi
    000008f2: 	subq	start_time(%rip), %rax
    000008f9: 	cvtsi2sd	%rax, %xmm0
    000008fe: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000906: 	callq	_Z13record_resultdPKc # Offset: 2310
    0000090b: 	movq	0x70(%rsp), %rdi
    00000910: 	cmpq	0x18(%rsp), %rdi
    00000915: 	je	.Ltmp2342 # Offset: 2325
    00000917: 	movq	0x80(%rsp), %rax
    0000091f: 	leaq	0x1(%rax), %rsi
    00000923: 	callq	_ZdlPvm@PLT # Offset: 2339
.Ltmp2342:
    00000928: 	movq	0x18(%rsp), %rax
    0000092d: 	movq	0x50(%rsp), %r14
    00000932: 	movq	0x58(%rsp), %r13
    00000937: 	movq	%rax, 0x70(%rsp)
    0000093c: 	movq	%r14, %rax
    0000093f: 	addq	%r13, %rax
    00000942: 	je	.Ltmp2343 # Offset: 2370
    00000944: 	testq	%r14, %r14
    00000947: 	je	.Ltmp2344 # Offset: 2375
.Ltmp2343:
    0000094d: 	movq	%r13, 0x48(%rsp)
    00000952: 	cmpq	$0xf, %r13
    00000956: 	ja	.Ltmp2345 # Offset: 2390
    0000095c: 	cmpq	$0x1, %r13
    00000960: 	jne	.Ltmp2346 # Offset: 2400
    00000966: 	movzbl	(%r14), %eax
    0000096a: 	movb	%al, 0x80(%rsp)
    00000971: 	movq	0x18(%rsp), %rax
.Ltmp2439:
    00000976: 	movq	%r13, 0x78(%rsp)
    0000097b: 	movb	$0x0, (%rax,%r13)
    00000980: 	movabsq	$0x3fffffffffffffff, %rax
    0000098a: 	subq	0x78(%rsp), %rax
    0000098f: 	cmpq	$0x14, %rax
    00000993: 	jbe	.Ltmp2347 # Offset: 2451
    00000999: 	movq	0x20(%rsp), %rdi
    0000099e: 	movl	$0x15, %edx
    000009a3: 	leaq	DATAat0x3d217(%rip), %rsi
    000009aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2474
    000009af: 	callq	clock@PLT # Offset: 2479
    000009b4: 	movl	iterations(%rip), %ecx
    000009ba: 	movq	%rax, start_time(%rip)
    000009c1: 	testl	%ecx, %ecx
    000009c3: 	jle	.Ltmp2348 # Offset: 2499
    000009c9: 	movzwl	0x30(%rsp), %eax
    000009ce: 	orw	0x2c(%rsp), %ax
    000009d3: 	xorl	%r13d, %r13d
    000009d6: 	leaq	0x3e80(%rbp), %rbx
    000009dd: 	orw	0x34(%rsp), %ax
    000009e2: 	orw	0x28(%rsp), %ax
    000009e7: 	leaq	DATAat0x3d1d8(%rip), %r14
    000009ee: 	movd	%eax, %xmm0
    000009f2: 	punpcklwd	%xmm0, %xmm0
    000009f6: 	pshufd	$0x0, %xmm0, %xmm4
    000009fb: 	movaps	%xmm4, (%rsp)
    000009ff: 	nop # Size: 1
.Ltmp2351:
    00000a00: 	movq	%rbp, %rax
    00000a03: 	pxor	%xmm1, %xmm1
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2349:
    00000a10: 	movdqu	(%rax), %xmm0
    00000a14: 	por	(%rsp), %xmm0
    00000a19: 	addq	$0x10, %rax
    00000a1d: 	paddw	%xmm0, %xmm1
    00000a21: 	cmpq	%rax, %rbx
    00000a24: 	jne	.Ltmp2349 # Offset: 2596
    00000a26: 	movdqa	%xmm1, %xmm0
    00000a2a: 	cvttsd2si	init_value(%rip), %eax
    00000a32: 	psrldq	$0x8, %xmm0
    00000a37: 	paddw	%xmm0, %xmm1
    00000a3b: 	movdqa	%xmm1, %xmm0
    00000a3f: 	psrldq	$0x4, %xmm0
    00000a44: 	orl	%r15d, %eax
    00000a47: 	orw	0x14(%rsp), %ax
    00000a4c: 	orw	0x16(%rsp), %ax
    00000a51: 	paddw	%xmm0, %xmm1
    00000a55: 	orl	%r12d, %eax
    00000a58: 	movdqa	%xmm1, %xmm0
    00000a5c: 	imulw	$0x1f40, %ax, %ax
    00000a61: 	psrldq	$0x2, %xmm0
    00000a66: 	paddw	%xmm0, %xmm1
    00000a6a: 	pextrw	$0x0, %xmm1, %edx
    00000a6f: 	cmpw	%dx, %ax
    00000a72: 	je	.Ltmp2350 # Offset: 2674
    00000a74: 	movl	current_test(%rip), %edx
    00000a7a: 	movq	%r14, %rsi
    00000a7d: 	movl	$0x1, %edi
    00000a82: 	xorl	%eax, %eax
    00000a84: 	callq	__printf_chk@PLT # Offset: 2692
    00000a89: 	movl	iterations(%rip), %ecx
.Ltmp2350:
    00000a8f: 	addl	$0x1, %r13d
    00000a93: 	cmpl	%ecx, %r13d
    00000a96: 	jl	.Ltmp2351 # Offset: 2710
.Ltmp2348:
    00000a9c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000aa3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000aaa: 	subq	$0x20, %rax
    00000aae: 	cmpq	%rax, %rbx
    00000ab1: 	je	.Ltmp2352 # Offset: 2737
    00000ab7: 	leaq	0x10(%rbx), %rdi
    00000abb: 	movq	0x78(%rsp), %r13
    00000ac0: 	movq	%rdi, (%rbx)
    00000ac3: 	movq	0x70(%rsp), %r14
    00000ac8: 	movq	%r14, %rax
    00000acb: 	addq	%r13, %rax
    00000ace: 	je	.Ltmp2353 # Offset: 2766
    00000ad0: 	testq	%r14, %r14
    00000ad3: 	je	.Ltmp2354 # Offset: 2771
.Ltmp2353:
    00000ad9: 	movq	%r13, 0x48(%rsp)
    00000ade: 	cmpq	$0xf, %r13
    00000ae2: 	ja	.Ltmp2355 # Offset: 2786
    00000ae8: 	cmpq	$0x1, %r13
    00000aec: 	jne	.Ltmp2356 # Offset: 2796
    00000af2: 	movzbl	(%r14), %eax
    00000af6: 	movb	%al, 0x10(%rbx)
.Ltmp2458:
    00000af9: 	movq	%r13, 0x8(%rbx)
    00000afd: 	movb	$0x0, (%rdi,%r13)
    00000b02: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b09: 	addq	$0x20, %rax
    00000b0d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2454:
    00000b14: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000b1b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b22: 	je	.Ltmp2357 # Offset: 2850
.Ltmp2452:
    00000b28: 	movq	-0x20(%rax), %r13
    00000b2c: 	callq	clock@PLT # Offset: 2860
    00000b31: 	pxor	%xmm0, %xmm0
    00000b35: 	movq	%rax, end_time(%rip)
    00000b3c: 	movq	%r13, %rdi
    00000b3f: 	subq	start_time(%rip), %rax
    00000b46: 	cvtsi2sd	%rax, %xmm0
    00000b4b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b53: 	callq	_Z13record_resultdPKc # Offset: 2899
    00000b58: 	movq	0x70(%rsp), %rdi
    00000b5d: 	cmpq	0x18(%rsp), %rdi
    00000b62: 	je	.Ltmp2358 # Offset: 2914
    00000b64: 	movq	0x80(%rsp), %rax
    00000b6c: 	leaq	0x1(%rax), %rsi
    00000b70: 	callq	_ZdlPvm@PLT # Offset: 2928
.Ltmp2358:
    00000b75: 	movq	0x18(%rsp), %rax
    00000b7a: 	movq	0x50(%rsp), %r14
    00000b7f: 	movq	0x58(%rsp), %r13
    00000b84: 	movq	%rax, 0x70(%rsp)
    00000b89: 	movq	%r14, %rax
    00000b8c: 	addq	%r13, %rax
    00000b8f: 	je	.Ltmp2359 # Offset: 2959
    00000b91: 	testq	%r14, %r14
    00000b94: 	je	.Ltmp2360 # Offset: 2964
.Ltmp2359:
    00000b9a: 	movq	%r13, 0x48(%rsp)
    00000b9f: 	cmpq	$0xf, %r13
    00000ba3: 	ja	.Ltmp2361 # Offset: 2979
    00000ba9: 	cmpq	$0x1, %r13
    00000bad: 	jne	.Ltmp2362 # Offset: 2989
    00000bb3: 	movzbl	(%r14), %eax
    00000bb7: 	movb	%al, 0x80(%rsp)
    00000bbe: 	movq	0x18(%rsp), %rax
.Ltmp2433:
    00000bc3: 	movq	%r13, 0x78(%rsp)
    00000bc8: 	movb	$0x0, (%rax,%r13)
    00000bcd: 	movabsq	$0x3fffffffffffffff, %rax
    00000bd7: 	subq	0x78(%rsp), %rax
    00000bdc: 	cmpq	$0x15, %rax
    00000be0: 	jbe	.Ltmp2363 # Offset: 3040
    00000be6: 	movq	0x20(%rsp), %rdi
    00000beb: 	movl	$0x16, %edx
    00000bf0: 	leaq	DATAat0x3d22d(%rip), %rsi
    00000bf7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3063
    00000bfc: 	callq	clock@PLT # Offset: 3068
    00000c01: 	movl	iterations(%rip), %ecx
    00000c07: 	movq	%rax, start_time(%rip)
    00000c0e: 	testl	%ecx, %ecx
    00000c10: 	jle	.Ltmp2364 # Offset: 3088
    00000c16: 	movzwl	0x30(%rsp), %r14d
    00000c1c: 	orw	0x2c(%rsp), %r14w
    00000c22: 	xorl	%r13d, %r13d
    00000c25: 	leaq	0x3e80(%rbp), %rbx
    00000c2c: 	orw	0x34(%rsp), %r14w
    00000c32: 	orw	0x28(%rsp), %r14w
    00000c38: 	movd	%r14d, %xmm0
    00000c3d: 	punpcklwd	%xmm0, %xmm0
    00000c41: 	pshufd	$0x0, %xmm0, %xmm2
    00000c46: 	movaps	%xmm2, (%rsp)
    00000c4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2367:
    00000c50: 	movq	%rbp, %rax
    00000c53: 	pxor	%xmm1, %xmm1
    00000c57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2365:
    00000c60: 	movdqu	(%rax), %xmm0
    00000c64: 	por	(%rsp), %xmm0
    00000c69: 	addq	$0x10, %rax
    00000c6d: 	paddw	%xmm0, %xmm1
    00000c71: 	cmpq	%rbx, %rax
    00000c74: 	jne	.Ltmp2365 # Offset: 3188
    00000c76: 	movdqa	%xmm1, %xmm0
    00000c7a: 	cvttsd2si	init_value(%rip), %eax
    00000c82: 	psrldq	$0x8, %xmm0
    00000c87: 	paddw	%xmm0, %xmm1
    00000c8b: 	movdqa	%xmm1, %xmm0
    00000c8f: 	psrldq	$0x4, %xmm0
    00000c94: 	orl	%r14d, %eax
    00000c97: 	imulw	$0x1f40, %ax, %ax
    00000c9c: 	paddw	%xmm0, %xmm1
    00000ca0: 	movdqa	%xmm1, %xmm0
    00000ca4: 	psrldq	$0x2, %xmm0
    00000ca9: 	paddw	%xmm0, %xmm1
    00000cad: 	pextrw	$0x0, %xmm1, %edx
    00000cb2: 	cmpw	%dx, %ax
    00000cb5: 	je	.Ltmp2366 # Offset: 3253
    00000cb7: 	movl	current_test(%rip), %edx
    00000cbd: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000cc4: 	movl	$0x1, %edi
    00000cc9: 	xorl	%eax, %eax
    00000ccb: 	callq	__printf_chk@PLT # Offset: 3275
    00000cd0: 	movl	iterations(%rip), %ecx
.Ltmp2366:
    00000cd6: 	addl	$0x1, %r13d
    00000cda: 	cmpl	%ecx, %r13d
    00000cdd: 	jl	.Ltmp2367 # Offset: 3293
.Ltmp2364:
    00000ce3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000cea: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000cf1: 	subq	$0x20, %rax
    00000cf5: 	cmpq	%rax, %rbx
    00000cf8: 	je	.Ltmp2368 # Offset: 3320
    00000cfe: 	leaq	0x10(%rbx), %rdi
    00000d02: 	movq	0x78(%rsp), %r13
    00000d07: 	movq	%rdi, (%rbx)
    00000d0a: 	movq	0x70(%rsp), %r14
    00000d0f: 	movq	%r14, %rax
    00000d12: 	addq	%r13, %rax
    00000d15: 	je	.Ltmp2369 # Offset: 3349
    00000d17: 	testq	%r14, %r14
    00000d1a: 	je	.Ltmp2370 # Offset: 3354
.Ltmp2369:
    00000d20: 	movq	%r13, 0x48(%rsp)
    00000d25: 	cmpq	$0xf, %r13
    00000d29: 	ja	.Ltmp2371 # Offset: 3369
    00000d2f: 	cmpq	$0x1, %r13
    00000d33: 	jne	.Ltmp2372 # Offset: 3379
    00000d39: 	movzbl	(%r14), %eax
    00000d3d: 	movb	%al, 0x10(%rbx)
.Ltmp2465:
    00000d40: 	movq	%r13, 0x8(%rbx)
    00000d44: 	movb	$0x0, (%rdi,%r13)
    00000d49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d50: 	addq	$0x20, %rax
    00000d54: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2449:
    00000d5b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d62: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d69: 	je	.Ltmp2373 # Offset: 3433
.Ltmp2445:
    00000d6f: 	movq	-0x20(%rax), %r13
    00000d73: 	callq	clock@PLT # Offset: 3443
    00000d78: 	pxor	%xmm0, %xmm0
    00000d7c: 	movq	%rax, end_time(%rip)
    00000d83: 	movq	%r13, %rdi
    00000d86: 	subq	start_time(%rip), %rax
    00000d8d: 	cvtsi2sd	%rax, %xmm0
    00000d92: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d9a: 	callq	_Z13record_resultdPKc # Offset: 3482
    00000d9f: 	movq	0x70(%rsp), %rdi
    00000da4: 	cmpq	0x18(%rsp), %rdi
    00000da9: 	je	.Ltmp2374 # Offset: 3497
    00000dab: 	movq	0x80(%rsp), %rax
    00000db3: 	leaq	0x1(%rax), %rsi
    00000db7: 	callq	_ZdlPvm@PLT # Offset: 3511
.Ltmp2374:
    00000dbc: 	movq	0x18(%rsp), %rax
    00000dc1: 	movq	0x50(%rsp), %r14
    00000dc6: 	movq	0x58(%rsp), %r13
    00000dcb: 	movq	%rax, 0x70(%rsp)
    00000dd0: 	movq	%r14, %rax
    00000dd3: 	addq	%r13, %rax
    00000dd6: 	je	.Ltmp2375 # Offset: 3542
    00000dd8: 	testq	%r14, %r14
    00000ddb: 	je	.Ltmp2376 # Offset: 3547
.Ltmp2375:
    00000de1: 	movq	%r13, 0x48(%rsp)
    00000de6: 	cmpq	$0xf, %r13
    00000dea: 	ja	.Ltmp2377 # Offset: 3562
    00000df0: 	cmpq	$0x1, %r13
    00000df4: 	jne	.Ltmp2378 # Offset: 3572
    00000dfa: 	movzbl	(%r14), %eax
    00000dfe: 	movb	%al, 0x80(%rsp)
    00000e05: 	movq	0x18(%rsp), %rax
.Ltmp2431:
    00000e0a: 	movq	%r13, 0x78(%rsp)
    00000e0f: 	movb	$0x0, (%rax,%r13)
    00000e14: 	movabsq	$0x3fffffffffffffff, %rax
    00000e1e: 	subq	0x78(%rsp), %rax
    00000e23: 	cmpq	$0xc, %rax
    00000e27: 	jbe	.Ltmp2379 # Offset: 3623
    00000e2d: 	movq	0x20(%rsp), %rdi
    00000e32: 	movl	$0xd, %edx
    00000e37: 	leaq	DATAat0x3d24d(%rip), %rsi
    00000e3e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3646
    00000e43: 	callq	clock@PLT # Offset: 3651
    00000e48: 	movl	iterations(%rip), %ecx
    00000e4e: 	xorl	%r13d, %r13d
    00000e51: 	leaq	0x3e80(%rbp), %rbx
    00000e58: 	movq	%rax, start_time(%rip)
    00000e5f: 	testl	%ecx, %ecx
    00000e61: 	jle	.Ltmp2380 # Offset: 3681
    00000e67: 	movd	%r12d, %xmm0
    00000e6c: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000e73: 	punpcklwd	%xmm0, %xmm0
    00000e77: 	pshufd	$0x0, %xmm0, %xmm3
    00000e7c: 	movaps	%xmm3, (%rsp)
.Ltmp2383:
    00000e80: 	movq	%rbp, %rax
    00000e83: 	pxor	%xmm1, %xmm1
    00000e87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2381:
    00000e90: 	movdqu	(%rax), %xmm0
    00000e94: 	pxor	(%rsp), %xmm0
    00000e99: 	addq	$0x10, %rax
    00000e9d: 	paddw	%xmm0, %xmm1
    00000ea1: 	cmpq	%rax, %rbx
    00000ea4: 	jne	.Ltmp2381 # Offset: 3748
    00000ea6: 	movdqa	%xmm1, %xmm0
    00000eaa: 	cvttsd2si	init_value(%rip), %eax
    00000eb2: 	psrldq	$0x8, %xmm0
    00000eb7: 	paddw	%xmm0, %xmm1
    00000ebb: 	movdqa	%xmm1, %xmm0
    00000ebf: 	psrldq	$0x4, %xmm0
    00000ec4: 	xorl	%r12d, %eax
    00000ec7: 	imulw	$0x1f40, %ax, %ax
    00000ecc: 	paddw	%xmm0, %xmm1
    00000ed0: 	movdqa	%xmm1, %xmm0
    00000ed4: 	psrldq	$0x2, %xmm0
    00000ed9: 	paddw	%xmm0, %xmm1
    00000edd: 	pextrw	$0x0, %xmm1, %edx
    00000ee2: 	cmpw	%dx, %ax
    00000ee5: 	je	.Ltmp2382 # Offset: 3813
    00000ee7: 	movl	current_test(%rip), %edx
    00000eed: 	movq	%r14, %rsi
    00000ef0: 	movl	$0x1, %edi
    00000ef5: 	xorl	%eax, %eax
    00000ef7: 	callq	__printf_chk@PLT # Offset: 3831
    00000efc: 	movl	iterations(%rip), %ecx
.Ltmp2382:
    00000f02: 	addl	$0x1, %r13d
    00000f06: 	cmpl	%ecx, %r13d
    00000f09: 	jl	.Ltmp2383 # Offset: 3849
.Ltmp2380:
    00000f0f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f16: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000f1d: 	subq	$0x20, %rax
    00000f21: 	cmpq	%rax, %rbx
    00000f24: 	je	.Ltmp2384 # Offset: 3876
    00000f2a: 	leaq	0x10(%rbx), %rdi
    00000f2e: 	movq	0x78(%rsp), %r13
    00000f33: 	movq	%rdi, (%rbx)
    00000f36: 	movq	0x70(%rsp), %r14
    00000f3b: 	movq	%r14, %rax
    00000f3e: 	addq	%r13, %rax
    00000f41: 	je	.Ltmp2385 # Offset: 3905
    00000f43: 	testq	%r14, %r14
    00000f46: 	je	.Ltmp2386 # Offset: 3910
.Ltmp2385:
    00000f4c: 	movq	%r13, 0x48(%rsp)
    00000f51: 	cmpq	$0xf, %r13
    00000f55: 	ja	.Ltmp2387 # Offset: 3925
    00000f5b: 	cmpq	$0x1, %r13
    00000f5f: 	jne	.Ltmp2388 # Offset: 3935
    00000f65: 	movzbl	(%r14), %eax
    00000f69: 	movb	%al, 0x10(%rbx)
.Ltmp2459:
    00000f6c: 	movq	%r13, 0x8(%rbx)
    00000f70: 	movb	$0x0, (%rdi,%r13)
    00000f75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f7c: 	addq	$0x20, %rax
    00000f80: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2444:
    00000f87: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f8e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f95: 	je	.Ltmp2389 # Offset: 3989
.Ltmp2442:
    00000f9b: 	movq	-0x20(%rax), %r13
    00000f9f: 	callq	clock@PLT # Offset: 3999
    00000fa4: 	pxor	%xmm0, %xmm0
    00000fa8: 	movq	%rax, end_time(%rip)
    00000faf: 	movq	%r13, %rdi
    00000fb2: 	subq	start_time(%rip), %rax
    00000fb9: 	cvtsi2sd	%rax, %xmm0
    00000fbe: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000fc6: 	callq	_Z13record_resultdPKc # Offset: 4038
    00000fcb: 	movq	0x70(%rsp), %rdi
    00000fd0: 	cmpq	0x18(%rsp), %rdi
    00000fd5: 	je	.Ltmp2390 # Offset: 4053
    00000fd7: 	movq	0x80(%rsp), %rax
    00000fdf: 	leaq	0x1(%rax), %rsi
    00000fe3: 	callq	_ZdlPvm@PLT # Offset: 4067
.Ltmp2390:
    00000fe8: 	movq	0x18(%rsp), %rax
    00000fed: 	movq	0x50(%rsp), %r14
    00000ff2: 	movq	0x58(%rsp), %r13
    00000ff7: 	movq	%rax, 0x70(%rsp)
    00000ffc: 	movq	%r14, %rax
    00000fff: 	addq	%r13, %rax
    00001002: 	je	.Ltmp2391 # Offset: 4098
    00001004: 	testq	%r14, %r14
    00001007: 	je	.Ltmp2392 # Offset: 4103
.Ltmp2391:
    0000100d: 	movq	%r13, 0x48(%rsp)
    00001012: 	cmpq	$0xf, %r13
    00001016: 	ja	.Ltmp2393 # Offset: 4118
    0000101c: 	cmpq	$0x1, %r13
    00001020: 	jne	.Ltmp2394 # Offset: 4128
    00001026: 	movzbl	(%r14), %eax
    0000102a: 	movb	%al, 0x80(%rsp)
    00001031: 	movq	0x18(%rsp), %rax
.Ltmp2429:
    00001036: 	movq	%r13, 0x78(%rsp)
    0000103b: 	movb	$0x0, (%rax,%r13)
    00001040: 	movabsq	$0x3fffffffffffffff, %rax
    0000104a: 	subq	0x78(%rsp), %rax
    0000104f: 	cmpq	$0x15, %rax
    00001053: 	jbe	.Ltmp2395 # Offset: 4179
    00001059: 	movq	0x20(%rsp), %rdi
    0000105e: 	movl	$0x16, %edx
    00001063: 	leaq	DATAat0x3d244(%rip), %rsi
    0000106a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4202
    0000106f: 	callq	clock@PLT # Offset: 4207
    00001074: 	movl	iterations(%rip), %ecx
    0000107a: 	movq	%rax, start_time(%rip)
    00001081: 	testl	%ecx, %ecx
    00001083: 	jle	.Ltmp2396 # Offset: 4227
    00001089: 	movzwl	0x30(%rsp), %eax
    0000108e: 	xorw	0x2c(%rsp), %ax
    00001093: 	xorl	%r13d, %r13d
    00001096: 	leaq	0x3e80(%rbp), %rbx
    0000109d: 	xorw	0x34(%rsp), %ax
    000010a2: 	xorw	0x28(%rsp), %ax
    000010a7: 	leaq	DATAat0x3d1d8(%rip), %r14
    000010ae: 	movd	%eax, %xmm0
    000010b2: 	punpcklwd	%xmm0, %xmm0
    000010b6: 	pshufd	$0x0, %xmm0, %xmm4
    000010bb: 	movaps	%xmm4, (%rsp)
    000010bf: 	nop # Size: 1
.Ltmp2399:
    000010c0: 	movq	%rbp, %rax
    000010c3: 	pxor	%xmm1, %xmm1
    000010c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2397:
    000010d0: 	movdqu	(%rax), %xmm0
    000010d4: 	pxor	(%rsp), %xmm0
    000010d9: 	addq	$0x10, %rax
    000010dd: 	paddw	%xmm0, %xmm1
    000010e1: 	cmpq	%rbx, %rax
    000010e4: 	jne	.Ltmp2397 # Offset: 4324
    000010e6: 	movdqa	%xmm1, %xmm0
    000010ea: 	cvttsd2si	init_value(%rip), %eax
    000010f2: 	psrldq	$0x8, %xmm0
    000010f7: 	paddw	%xmm0, %xmm1
    000010fb: 	movdqa	%xmm1, %xmm0
    000010ff: 	psrldq	$0x4, %xmm0
    00001104: 	xorl	%r15d, %eax
    00001107: 	xorw	0x14(%rsp), %ax
    0000110c: 	xorw	0x16(%rsp), %ax
    00001111: 	paddw	%xmm0, %xmm1
    00001115: 	xorl	%r12d, %eax
    00001118: 	movdqa	%xmm1, %xmm0
    0000111c: 	imulw	$0x1f40, %ax, %ax
    00001121: 	psrldq	$0x2, %xmm0
    00001126: 	paddw	%xmm0, %xmm1
    0000112a: 	pextrw	$0x0, %xmm1, %edx
    0000112f: 	cmpw	%dx, %ax
    00001132: 	je	.Ltmp2398 # Offset: 4402
    00001134: 	movl	current_test(%rip), %edx
    0000113a: 	movq	%r14, %rsi
    0000113d: 	movl	$0x1, %edi
    00001142: 	xorl	%eax, %eax
    00001144: 	callq	__printf_chk@PLT # Offset: 4420
    00001149: 	movl	iterations(%rip), %ecx
.Ltmp2398:
    0000114f: 	addl	$0x1, %r13d
    00001153: 	cmpl	%ecx, %r13d
    00001156: 	jl	.Ltmp2399 # Offset: 4438
.Ltmp2396:
    0000115c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001163: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000116a: 	subq	$0x20, %rax
    0000116e: 	cmpq	%rax, %rbx
    00001171: 	je	.Ltmp2400 # Offset: 4465
    00001177: 	leaq	0x10(%rbx), %rdi
    0000117b: 	movq	0x78(%rsp), %r12
    00001180: 	movq	%rdi, (%rbx)
    00001183: 	movq	0x70(%rsp), %r13
    00001188: 	movq	%r13, %rax
    0000118b: 	addq	%r12, %rax
    0000118e: 	je	.Ltmp2401 # Offset: 4494
    00001190: 	testq	%r13, %r13
    00001193: 	je	.Ltmp2402 # Offset: 4499
.Ltmp2401:
    00001199: 	movq	%r12, 0x48(%rsp)
    0000119e: 	cmpq	$0xf, %r12
    000011a2: 	ja	.Ltmp2403 # Offset: 4514
    000011a8: 	cmpq	$0x1, %r12
    000011ac: 	jne	.Ltmp2404 # Offset: 4524
    000011b2: 	movzbl	(%r13), %eax
    000011b7: 	movb	%al, 0x10(%rbx)
.Ltmp2462:
    000011ba: 	movq	%r12, 0x8(%rbx)
    000011be: 	movb	$0x0, (%rdi,%r12)
    000011c3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011d1: 	addq	$0x20, %rax
    000011d5: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011dc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000011e3: 	je	.Ltmp2405 # Offset: 4579
.Ltmp2443:
    000011e9: 	movq	-0x20(%rax), %r12
    000011ed: 	callq	clock@PLT # Offset: 4589
    000011f2: 	pxor	%xmm0, %xmm0
    000011f6: 	movq	%rax, end_time(%rip)
    000011fd: 	movq	%r12, %rdi
    00001200: 	subq	start_time(%rip), %rax
    00001207: 	cvtsi2sd	%rax, %xmm0
    0000120c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001214: 	callq	_Z13record_resultdPKc # Offset: 4628
    00001219: 	movq	0x70(%rsp), %rdi
    0000121e: 	cmpq	0x18(%rsp), %rdi
    00001223: 	je	.Ltmp2406 # Offset: 4643
    00001225: 	movq	0x80(%rsp), %rax
    0000122d: 	leaq	0x1(%rax), %rsi
    00001231: 	callq	_ZdlPvm@PLT # Offset: 4657
.Ltmp2406:
    00001236: 	movq	0x18(%rsp), %rax
    0000123b: 	movq	0x50(%rsp), %r13
    00001240: 	movq	0x58(%rsp), %r12
    00001245: 	movq	%rax, 0x70(%rsp)
    0000124a: 	movq	%r13, %rax
    0000124d: 	addq	%r12, %rax
    00001250: 	je	.Ltmp2407 # Offset: 4688
    00001252: 	testq	%r13, %r13
    00001255: 	je	.Ltmp2408 # Offset: 4693
.Ltmp2407:
    0000125b: 	movq	%r12, 0x48(%rsp)
    00001260: 	cmpq	$0xf, %r12
    00001264: 	ja	.Ltmp2409 # Offset: 4708
    0000126a: 	cmpq	$0x1, %r12
    0000126e: 	jne	.Ltmp2410 # Offset: 4718
    00001274: 	movzbl	(%r13), %eax
    00001279: 	movb	%al, 0x80(%rsp)
    00001280: 	movq	0x18(%rsp), %rax
.Ltmp2427:
    00001285: 	movq	%r12, 0x78(%rsp)
    0000128a: 	movb	$0x0, (%rax,%r12)
    0000128f: 	movabsq	$0x3fffffffffffffff, %rax
    00001299: 	subq	0x78(%rsp), %rax
    0000129e: 	cmpq	$0x16, %rax
    000012a2: 	jbe	.Ltmp2411 # Offset: 4770
    000012a8: 	movq	0x20(%rsp), %rdi
    000012ad: 	movl	$0x17, %edx
    000012b2: 	leaq	DATAat0x3d25b(%rip), %rsi
    000012b9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4793
    000012be: 	callq	clock@PLT # Offset: 4798
    000012c3: 	movl	iterations(%rip), %ecx
    000012c9: 	movq	%rax, start_time(%rip)
    000012d0: 	testl	%ecx, %ecx
    000012d2: 	jle	.Ltmp2412 # Offset: 4818
    000012d8: 	movzwl	0x30(%rsp), %r13d
    000012de: 	xorw	0x2c(%rsp), %r13w
    000012e4: 	xorl	%r12d, %r12d
    000012e7: 	leaq	0x3e80(%rbp), %rbx
    000012ee: 	xorw	0x34(%rsp), %r13w
    000012f4: 	xorw	0x28(%rsp), %r13w
    000012fa: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001301: 	movd	%r13d, %xmm0
    00001306: 	punpcklwd	%xmm0, %xmm0
    0000130a: 	pshufd	$0x0, %xmm0, %xmm2
    0000130f: 	movaps	%xmm2, (%rsp)
    00001313: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2415:
    00001318: 	movq	%rbp, %rax
    0000131b: 	pxor	%xmm1, %xmm1
    0000131f: 	nop # Size: 1
.Ltmp2413:
    00001320: 	movdqu	(%rax), %xmm0
    00001324: 	pxor	(%rsp), %xmm0
    00001329: 	addq	$0x10, %rax
    0000132d: 	paddw	%xmm0, %xmm1
    00001331: 	cmpq	%rax, %rbx
    00001334: 	jne	.Ltmp2413 # Offset: 4916
    00001336: 	movdqa	%xmm1, %xmm0
    0000133a: 	cvttsd2si	init_value(%rip), %eax
    00001342: 	psrldq	$0x8, %xmm0
    00001347: 	paddw	%xmm0, %xmm1
    0000134b: 	movdqa	%xmm1, %xmm0
    0000134f: 	psrldq	$0x4, %xmm0
    00001354: 	xorl	%r13d, %eax
    00001357: 	imulw	$0x1f40, %ax, %ax
    0000135c: 	paddw	%xmm0, %xmm1
    00001360: 	movdqa	%xmm1, %xmm0
    00001364: 	psrldq	$0x2, %xmm0
    00001369: 	paddw	%xmm0, %xmm1
    0000136d: 	pextrw	$0x0, %xmm1, %edx
    00001372: 	cmpw	%dx, %ax
    00001375: 	je	.Ltmp2414 # Offset: 4981
    00001377: 	movl	current_test(%rip), %edx
    0000137d: 	movq	%r14, %rsi
    00001380: 	movl	$0x1, %edi
    00001385: 	xorl	%eax, %eax
    00001387: 	callq	__printf_chk@PLT # Offset: 4999
    0000138c: 	movl	iterations(%rip), %ecx
.Ltmp2414:
    00001392: 	addl	$0x1, %r12d
    00001396: 	cmpl	%ecx, %r12d
    00001399: 	jl	.Ltmp2415 # Offset: 5017
.Ltmp2412:
    0000139f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000013ad: 	subq	$0x20, %rax
    000013b1: 	cmpq	%rax, %rbx
    000013b4: 	je	.Ltmp2416 # Offset: 5044
    000013ba: 	leaq	0x10(%rbx), %rdi
    000013be: 	movq	0x78(%rsp), %r12
    000013c3: 	movq	%rdi, (%rbx)
    000013c6: 	movq	0x70(%rsp), %rbp
    000013cb: 	movq	%rbp, %rax
    000013ce: 	addq	%r12, %rax
    000013d1: 	je	.Ltmp2417 # Offset: 5073
    000013d3: 	testq	%rbp, %rbp
    000013d6: 	je	.Ltmp2418 # Offset: 5078
.Ltmp2417:
    000013dc: 	movq	%r12, 0x48(%rsp)
    000013e1: 	cmpq	$0xf, %r12
    000013e5: 	ja	.Ltmp2419 # Offset: 5093
    000013eb: 	cmpq	$0x1, %r12
    000013ef: 	jne	.Ltmp2420 # Offset: 5103
    000013f5: 	movzbl	(%rbp), %eax
    000013f9: 	movb	%al, 0x10(%rbx)
.Ltmp2464:
    000013fc: 	movq	%r12, 0x8(%rbx)
    00001400: 	movb	$0x0, (%rdi,%r12)
    00001405: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000140c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001413: 	addq	$0x20, %rax
    00001417: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000141e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001425: 	je	.Ltmp2421 # Offset: 5157
.Ltmp2446:
    0000142b: 	movq	-0x20(%rax), %rbp
    0000142f: 	callq	clock@PLT # Offset: 5167
    00001434: 	pxor	%xmm0, %xmm0
    00001438: 	movq	%rax, end_time(%rip)
    0000143f: 	movq	%rbp, %rdi
    00001442: 	subq	start_time(%rip), %rax
    00001449: 	cvtsi2sd	%rax, %xmm0
    0000144e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001456: 	callq	_Z13record_resultdPKc # Offset: 5206
    0000145b: 	movq	0x70(%rsp), %rdi
    00001460: 	cmpq	0x18(%rsp), %rdi
    00001465: 	je	.Ltmp2422 # Offset: 5221
    00001467: 	movq	0x80(%rsp), %rax
    0000146f: 	leaq	0x1(%rax), %rsi
    00001473: 	callq	_ZdlPvm@PLT # Offset: 5235
.Ltmp2422:
    00001478: 	movq	0x50(%rsp), %rdi
    0000147d: 	cmpq	0x38(%rsp), %rdi
    00001482: 	je	.Ltmp2423 # Offset: 5250
    00001484: 	movq	0x60(%rsp), %rax
    00001489: 	leaq	0x1(%rax), %rsi
    0000148d: 	callq	_ZdlPvm@PLT # Offset: 5261
.Ltmp2423:
    00001492: 	movq	0x98(%rsp), %rax
    0000149a: 	subq	%fs:0x28, %rax
    000014a3: 	jne	.Ltmp2424 # Offset: 5283
    000014a9: 	addq	$0xa8, %rsp
    000014b0: 	popq	%rbx
    000014b1: 	popq	%rbp
    000014b2: 	popq	%r12
    000014b4: 	popq	%r13
    000014b6: 	popq	%r14
    000014b8: 	popq	%r15
    000014ba: 	retq # Offset: 5306
.Ltmp2291:
    000014bb: 	leaq	0x48(%rsp), %rsi
    000014c0: 	xorl	%edx, %edx
    000014c2: 	movq	%rbx, %rdi
    000014c5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5317
    000014ca: 	movq	%rax, (%rbx)
    000014cd: 	movq	%rax, %rdi
    000014d0: 	movq	0x48(%rsp), %rax
    000014d5: 	movq	%rax, 0x10(%rbx)
.Ltmp2455:
    000014d9: 	movq	%r13, %rdx
    000014dc: 	movq	%r14, %rsi
    000014df: 	callq	memcpy@PLT # Offset: 5343
    000014e4: 	movq	0x48(%rsp), %r13
    000014e9: 	movq	(%rbx), %rdi
    000014ec: 	jmp	.Ltmp2425 # Offset: 5356
.Ltmp2410:
    000014f1: 	testq	%r12, %r12
    000014f4: 	jne	.Ltmp2426 # Offset: 5364
    000014fa: 	movq	0x18(%rsp), %rax
    000014ff: 	jmp	.Ltmp2427 # Offset: 5375
.Ltmp2394:
    00001504: 	testq	%r13, %r13
    00001507: 	jne	.Ltmp2428 # Offset: 5383
    0000150d: 	movq	0x18(%rsp), %rax
    00001512: 	jmp	.Ltmp2429 # Offset: 5394
.Ltmp2378:
    00001517: 	testq	%r13, %r13
    0000151a: 	jne	.Ltmp2430 # Offset: 5402
    00001520: 	movq	0x18(%rsp), %rax
    00001525: 	jmp	.Ltmp2431 # Offset: 5413
.Ltmp2362:
    0000152a: 	testq	%r13, %r13
    0000152d: 	jne	.Ltmp2432 # Offset: 5421
    00001533: 	movq	0x18(%rsp), %rax
    00001538: 	jmp	.Ltmp2433 # Offset: 5432
.Ltmp2314:
    0000153d: 	testq	%r13, %r13
    00001540: 	jne	.Ltmp2434 # Offset: 5440
    00001546: 	movq	0x18(%rsp), %rax
    0000154b: 	jmp	.Ltmp2435 # Offset: 5451
.Ltmp2298:
    00001550: 	testq	%r13, %r13
    00001553: 	jne	.Ltmp2436 # Offset: 5459
    00001559: 	movq	0x18(%rsp), %rax
    0000155e: 	jmp	.Ltmp2437 # Offset: 5470
.Ltmp2346:
    00001563: 	testq	%r13, %r13
    00001566: 	jne	.Ltmp2438 # Offset: 5478
    0000156c: 	movq	0x18(%rsp), %rax
    00001571: 	jmp	.Ltmp2439 # Offset: 5489
.Ltmp2330:
    00001576: 	testq	%r13, %r13
    00001579: 	jne	.Ltmp2440 # Offset: 5497
    0000157f: 	movq	0x18(%rsp), %rax
    00001584: 	jmp	.Ltmp2441 # Offset: 5508
.Ltmp2313:
    00001589: 	movq	0x20(%rsp), %rdi
    0000158e: 	leaq	0x48(%rsp), %rsi
    00001593: 	xorl	%edx, %edx
    00001595: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5525
    0000159a: 	movq	%rax, 0x70(%rsp)
    0000159f: 	movq	%rax, %rdi
    000015a2: 	movq	0x48(%rsp), %rax
    000015a7: 	movq	%rax, 0x80(%rsp)
.Ltmp2476:
    000015af: 	movq	%r13, %rdx
    000015b2: 	movq	%r14, %rsi
    000015b5: 	callq	memcpy@PLT # Offset: 5557
    000015ba: 	movq	0x48(%rsp), %r13
    000015bf: 	movq	0x70(%rsp), %rax
    000015c4: 	jmp	.Ltmp2435 # Offset: 5572
.Ltmp2297:
    000015c9: 	movq	0x20(%rsp), %rdi
    000015ce: 	leaq	0x48(%rsp), %rsi
    000015d3: 	xorl	%edx, %edx
    000015d5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5589
    000015da: 	movq	%rax, 0x70(%rsp)
    000015df: 	movq	%rax, %rdi
    000015e2: 	movq	0x48(%rsp), %rax
    000015e7: 	movq	%rax, 0x80(%rsp)
.Ltmp2477:
    000015ef: 	movq	%r13, %rdx
    000015f2: 	movq	%r14, %rsi
    000015f5: 	callq	memcpy@PLT # Offset: 5621
    000015fa: 	movq	0x48(%rsp), %r13
    000015ff: 	movq	0x70(%rsp), %rax
    00001604: 	jmp	.Ltmp2437 # Offset: 5636
.Ltmp2329:
    00001609: 	movq	0x20(%rsp), %rdi
    0000160e: 	leaq	0x48(%rsp), %rsi
    00001613: 	xorl	%edx, %edx
    00001615: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5653
    0000161a: 	movq	%rax, 0x70(%rsp)
    0000161f: 	movq	%rax, %rdi
    00001622: 	movq	0x48(%rsp), %rax
    00001627: 	movq	%rax, 0x80(%rsp)
.Ltmp2479:
    0000162f: 	movq	%r13, %rdx
    00001632: 	movq	%r14, %rsi
    00001635: 	callq	memcpy@PLT # Offset: 5685
    0000163a: 	movq	0x48(%rsp), %r13
    0000163f: 	movq	0x70(%rsp), %rax
    00001644: 	jmp	.Ltmp2441 # Offset: 5700
.Ltmp2345:
    00001649: 	movq	0x20(%rsp), %rdi
    0000164e: 	leaq	0x48(%rsp), %rsi
    00001653: 	xorl	%edx, %edx
    00001655: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5717
    0000165a: 	movq	%rax, 0x70(%rsp)
    0000165f: 	movq	%rax, %rdi
    00001662: 	movq	0x48(%rsp), %rax
    00001667: 	movq	%rax, 0x80(%rsp)
.Ltmp2478:
    0000166f: 	movq	%r13, %rdx
    00001672: 	movq	%r14, %rsi
    00001675: 	callq	memcpy@PLT # Offset: 5749
    0000167a: 	movq	0x48(%rsp), %r13
    0000167f: 	movq	0x70(%rsp), %rax
    00001684: 	jmp	.Ltmp2439 # Offset: 5764
.Ltmp2361:
    00001689: 	movq	0x20(%rsp), %rdi
    0000168e: 	leaq	0x48(%rsp), %rsi
    00001693: 	xorl	%edx, %edx
    00001695: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5781
    0000169a: 	movq	%rax, 0x70(%rsp)
    0000169f: 	movq	%rax, %rdi
    000016a2: 	movq	0x48(%rsp), %rax
    000016a7: 	movq	%rax, 0x80(%rsp)
.Ltmp2475:
    000016af: 	movq	%r13, %rdx
    000016b2: 	movq	%r14, %rsi
    000016b5: 	callq	memcpy@PLT # Offset: 5813
    000016ba: 	movq	0x48(%rsp), %r13
    000016bf: 	movq	0x70(%rsp), %rax
    000016c4: 	jmp	.Ltmp2433 # Offset: 5828
.Ltmp2377:
    000016c9: 	movq	0x20(%rsp), %rdi
    000016ce: 	leaq	0x48(%rsp), %rsi
    000016d3: 	xorl	%edx, %edx
    000016d5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5845
    000016da: 	movq	%rax, 0x70(%rsp)
    000016df: 	movq	%rax, %rdi
    000016e2: 	movq	0x48(%rsp), %rax
    000016e7: 	movq	%rax, 0x80(%rsp)
.Ltmp2474:
    000016ef: 	movq	%r13, %rdx
    000016f2: 	movq	%r14, %rsi
    000016f5: 	callq	memcpy@PLT # Offset: 5877
    000016fa: 	movq	0x48(%rsp), %r13
    000016ff: 	movq	0x70(%rsp), %rax
    00001704: 	jmp	.Ltmp2431 # Offset: 5892
.Ltmp2409:
    00001709: 	movq	0x20(%rsp), %rdi
    0000170e: 	leaq	0x48(%rsp), %rsi
    00001713: 	xorl	%edx, %edx
    00001715: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5909
    0000171a: 	movq	%rax, 0x70(%rsp)
    0000171f: 	movq	%rax, %rdi
    00001722: 	movq	0x48(%rsp), %rax
    00001727: 	movq	%rax, 0x80(%rsp)
.Ltmp2472:
    0000172f: 	movq	%r12, %rdx
    00001732: 	movq	%r13, %rsi
    00001735: 	callq	memcpy@PLT # Offset: 5941
    0000173a: 	movq	0x48(%rsp), %r12
    0000173f: 	movq	0x70(%rsp), %rax
    00001744: 	jmp	.Ltmp2427 # Offset: 5956
.Ltmp2393:
    00001749: 	movq	0x20(%rsp), %rdi
    0000174e: 	leaq	0x48(%rsp), %rsi
    00001753: 	xorl	%edx, %edx
    00001755: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5973
    0000175a: 	movq	%rax, 0x70(%rsp)
    0000175f: 	movq	%rax, %rdi
    00001762: 	movq	0x48(%rsp), %rax
    00001767: 	movq	%rax, 0x80(%rsp)
.Ltmp2473:
    0000176f: 	movq	%r13, %rdx
    00001772: 	movq	%r14, %rsi
    00001775: 	callq	memcpy@PLT # Offset: 6005
    0000177a: 	movq	0x48(%rsp), %r13
    0000177f: 	movq	0x70(%rsp), %rax
    00001784: 	jmp	.Ltmp2429 # Offset: 6020
.Ltmp2389:
    00001789: 	movq	-0x8(%rdx), %rax
    0000178d: 	addq	$0x200, %rax
    00001793: 	jmp	.Ltmp2442 # Offset: 6035
.Ltmp2400:
    00001798: 	movq	0x20(%rsp), %rsi
    0000179d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017a4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6052
    000017a9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017b0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017be: 	jne	.Ltmp2443 # Offset: 6078
.Ltmp2405:
    000017c4: 	movq	-0x8(%rdx), %rax
    000017c8: 	addq	$0x200, %rax
    000017ce: 	jmp	.Ltmp2443 # Offset: 6094
.Ltmp2384:
    000017d3: 	movq	0x20(%rsp), %rsi
    000017d8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6111
    000017e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017eb: 	jmp	.Ltmp2444 # Offset: 6123
.Ltmp2373:
    000017f0: 	movq	-0x8(%rdx), %rax
    000017f4: 	addq	$0x200, %rax
    000017fa: 	jmp	.Ltmp2445 # Offset: 6138
.Ltmp2416:
    000017ff: 	movq	0x20(%rsp), %rsi
    00001804: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000180b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6155
    00001810: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001817: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000181e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001825: 	jne	.Ltmp2446 # Offset: 6181
.Ltmp2421:
    0000182b: 	movq	-0x8(%rdx), %rax
    0000182f: 	addq	$0x200, %rax
    00001835: 	jmp	.Ltmp2446 # Offset: 6197
.Ltmp2336:
    0000183a: 	movq	0x20(%rsp), %rsi
    0000183f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001846: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6214
    0000184b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001852: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001859: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001860: 	jne	.Ltmp2447 # Offset: 6240
.Ltmp2341:
    00001866: 	movq	-0x8(%rdx), %rax
    0000186a: 	addq	$0x200, %rax
    00001870: 	jmp	.Ltmp2447 # Offset: 6256
.Ltmp2309:
    00001875: 	movq	-0x8(%rdx), %rax
    00001879: 	addq	$0x200, %rax
    0000187f: 	jmp	.Ltmp2448 # Offset: 6271
.Ltmp2368:
    00001884: 	movq	0x20(%rsp), %rsi
    00001889: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001890: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6288
    00001895: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000189c: 	jmp	.Ltmp2449 # Offset: 6300
.Ltmp2320:
    000018a1: 	movq	0x20(%rsp), %rsi
    000018a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6317
    000018b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018b9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018c7: 	jne	.Ltmp2450 # Offset: 6343
.Ltmp2325:
    000018cd: 	movq	-0x8(%rdx), %rax
    000018d1: 	addq	$0x200, %rax
    000018d7: 	jmp	.Ltmp2450 # Offset: 6359
.Ltmp2288:
    000018dc: 	movq	0x20(%rsp), %rsi
    000018e1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018e8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6376
    000018ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018f4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018fb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001902: 	jne	.Ltmp2451 # Offset: 6402
.Ltmp2293:
    00001908: 	movq	-0x8(%rdx), %rax
    0000190c: 	addq	$0x200, %rax
    00001912: 	jmp	.Ltmp2451 # Offset: 6418
.Ltmp2357:
    00001917: 	movq	-0x8(%rdx), %rax
    0000191b: 	addq	$0x200, %rax
    00001921: 	jmp	.Ltmp2452 # Offset: 6433
.Ltmp2304:
    00001926: 	movq	0x20(%rsp), %rsi
    0000192b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001932: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6450
    00001937: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000193e: 	jmp	.Ltmp2453 # Offset: 6462
.Ltmp2352:
    00001943: 	movq	0x20(%rsp), %rsi
    00001948: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000194f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6479
    00001954: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000195b: 	jmp	.Ltmp2454 # Offset: 6491
.Ltmp2292:
    00001960: 	testq	%r13, %r13
    00001963: 	je	.Ltmp2425 # Offset: 6499
    00001969: 	jmp	.Ltmp2455 # Offset: 6505
    0000196e: 	nop # Size: 2
.Ltmp2324:
    00001970: 	testq	%r13, %r13
    00001973: 	je	.Ltmp2456 # Offset: 6515
    00001979: 	jmp	.Ltmp2457 # Offset: 6521
    0000197e: 	nop # Size: 2
.Ltmp2356:
    00001980: 	testq	%r13, %r13
    00001983: 	je	.Ltmp2458 # Offset: 6531
.Ltmp2468:
    00001989: 	movq	%r13, %rdx
    0000198c: 	movq	%r14, %rsi
    0000198f: 	callq	memcpy@PLT # Offset: 6543
    00001994: 	movq	0x48(%rsp), %r13
    00001999: 	movq	(%rbx), %rdi
    0000199c: 	jmp	.Ltmp2458 # Offset: 6556
.Ltmp2388:
    000019a1: 	testq	%r13, %r13
    000019a4: 	je	.Ltmp2459 # Offset: 6564
    000019aa: 	jmp	.Ltmp2460 # Offset: 6570
    000019af: 	nop # Size: 1
.Ltmp2308:
    000019b0: 	testq	%r13, %r13
    000019b3: 	je	.Ltmp2461 # Offset: 6579
.Ltmp2470:
    000019b9: 	movq	%r13, %rdx
    000019bc: 	movq	%r14, %rsi
    000019bf: 	callq	memcpy@PLT # Offset: 6591
    000019c4: 	movq	0x48(%rsp), %r13
    000019c9: 	movq	(%rbx), %rdi
    000019cc: 	jmp	.Ltmp2461 # Offset: 6604
.Ltmp2404:
    000019d1: 	testq	%r12, %r12
    000019d4: 	je	.Ltmp2462 # Offset: 6612
    000019da: 	jmp	.Ltmp2463 # Offset: 6618
    000019df: 	nop # Size: 1
.Ltmp2420:
    000019e0: 	testq	%r12, %r12
    000019e3: 	je	.Ltmp2464 # Offset: 6627
.Ltmp2469:
    000019e9: 	movq	%r12, %rdx
    000019ec: 	movq	%rbp, %rsi
    000019ef: 	callq	memcpy@PLT # Offset: 6639
    000019f4: 	movq	0x48(%rsp), %r12
    000019f9: 	movq	(%rbx), %rdi
    000019fc: 	jmp	.Ltmp2464 # Offset: 6652
.Ltmp2372:
    00001a01: 	testq	%r13, %r13
    00001a04: 	je	.Ltmp2465 # Offset: 6660
    00001a0a: 	jmp	.Ltmp2466 # Offset: 6666
    00001a0f: 	nop # Size: 1
.Ltmp2340:
    00001a10: 	testq	%r13, %r13
    00001a13: 	je	.Ltmp2467 # Offset: 6675
.Ltmp2471:
    00001a19: 	movq	%r13, %rdx
    00001a1c: 	movq	%r14, %rsi
    00001a1f: 	callq	memcpy@PLT # Offset: 6687
    00001a24: 	movq	0x48(%rsp), %r13
    00001a29: 	movq	(%rbx), %rdi
    00001a2c: 	jmp	.Ltmp2467 # Offset: 6700
.Ltmp2323:
    00001a31: 	leaq	0x48(%rsp), %rsi
    00001a36: 	xorl	%edx, %edx
    00001a38: 	movq	%rbx, %rdi
    00001a3b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6715
    00001a40: 	movq	%rax, (%rbx)
    00001a43: 	movq	%rax, %rdi
    00001a46: 	movq	0x48(%rsp), %rax
    00001a4b: 	movq	%rax, 0x10(%rbx)
.Ltmp2457:
    00001a4f: 	movq	%r13, %rdx
    00001a52: 	movq	%r14, %rsi
    00001a55: 	callq	memcpy@PLT # Offset: 6741
    00001a5a: 	movq	0x48(%rsp), %r13
    00001a5f: 	movq	(%rbx), %rdi
    00001a62: 	jmp	.Ltmp2456 # Offset: 6754
.Ltmp2387:
    00001a67: 	leaq	0x48(%rsp), %rsi
    00001a6c: 	xorl	%edx, %edx
    00001a6e: 	movq	%rbx, %rdi
    00001a71: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6769
    00001a76: 	movq	%rax, (%rbx)
    00001a79: 	movq	%rax, %rdi
    00001a7c: 	movq	0x48(%rsp), %rax
    00001a81: 	movq	%rax, 0x10(%rbx)
.Ltmp2460:
    00001a85: 	movq	%r13, %rdx
    00001a88: 	movq	%r14, %rsi
    00001a8b: 	callq	memcpy@PLT # Offset: 6795
    00001a90: 	movq	0x48(%rsp), %r13
    00001a95: 	movq	(%rbx), %rdi
    00001a98: 	jmp	.Ltmp2459 # Offset: 6808
.Ltmp2355:
    00001a9d: 	leaq	0x48(%rsp), %rsi
    00001aa2: 	xorl	%edx, %edx
    00001aa4: 	movq	%rbx, %rdi
    00001aa7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6823
    00001aac: 	movq	%rax, (%rbx)
    00001aaf: 	movq	%rax, %rdi
    00001ab2: 	movq	0x48(%rsp), %rax
    00001ab7: 	movq	%rax, 0x10(%rbx)
    00001abb: 	jmp	.Ltmp2468 # Offset: 6843
.Ltmp2403:
    00001ac0: 	leaq	0x48(%rsp), %rsi
    00001ac5: 	xorl	%edx, %edx
    00001ac7: 	movq	%rbx, %rdi
    00001aca: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6858
    00001acf: 	movq	%rax, (%rbx)
    00001ad2: 	movq	%rax, %rdi
    00001ad5: 	movq	0x48(%rsp), %rax
    00001ada: 	movq	%rax, 0x10(%rbx)
.Ltmp2463:
    00001ade: 	movq	%r12, %rdx
    00001ae1: 	movq	%r13, %rsi
    00001ae4: 	callq	memcpy@PLT # Offset: 6884
    00001ae9: 	movq	0x48(%rsp), %r12
    00001aee: 	movq	(%rbx), %rdi
    00001af1: 	jmp	.Ltmp2462 # Offset: 6897
.Ltmp2371:
    00001af6: 	leaq	0x48(%rsp), %rsi
    00001afb: 	xorl	%edx, %edx
    00001afd: 	movq	%rbx, %rdi
    00001b00: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6912
    00001b05: 	movq	%rax, (%rbx)
    00001b08: 	movq	%rax, %rdi
    00001b0b: 	movq	0x48(%rsp), %rax
    00001b10: 	movq	%rax, 0x10(%rbx)
.Ltmp2466:
    00001b14: 	movq	%r13, %rdx
    00001b17: 	movq	%r14, %rsi
    00001b1a: 	callq	memcpy@PLT # Offset: 6938
    00001b1f: 	movq	0x48(%rsp), %r13
    00001b24: 	movq	(%rbx), %rdi
    00001b27: 	jmp	.Ltmp2465 # Offset: 6951
.Ltmp2419:
    00001b2c: 	leaq	0x48(%rsp), %rsi
    00001b31: 	xorl	%edx, %edx
    00001b33: 	movq	%rbx, %rdi
    00001b36: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6966
    00001b3b: 	movq	%rax, (%rbx)
    00001b3e: 	movq	%rax, %rdi
    00001b41: 	movq	0x48(%rsp), %rax
    00001b46: 	movq	%rax, 0x10(%rbx)
    00001b4a: 	jmp	.Ltmp2469 # Offset: 6986
.Ltmp2307:
    00001b4f: 	leaq	0x48(%rsp), %rsi
    00001b54: 	xorl	%edx, %edx
    00001b56: 	movq	%rbx, %rdi
    00001b59: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7001
    00001b5e: 	movq	%rax, (%rbx)
    00001b61: 	movq	%rax, %rdi
    00001b64: 	movq	0x48(%rsp), %rax
    00001b69: 	movq	%rax, 0x10(%rbx)
    00001b6d: 	jmp	.Ltmp2470 # Offset: 7021
.Ltmp2339:
    00001b72: 	leaq	0x48(%rsp), %rsi
    00001b77: 	xorl	%edx, %edx
    00001b79: 	movq	%rbx, %rdi
    00001b7c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7036
    00001b81: 	movq	%rax, (%rbx)
    00001b84: 	movq	%rax, %rdi
    00001b87: 	movq	0x48(%rsp), %rax
    00001b8c: 	movq	%rax, 0x10(%rbx)
    00001b90: 	jmp	.Ltmp2471 # Offset: 7056
.Ltmp2296:
    00001b95: 	leaq	DATAat0x3d158(%rip), %rdi
    00001b9c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7068
.Ltmp2299:
    00001ba1: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ba8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7080
.Ltmp2306:
    00001bad: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bb4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7092
.Ltmp2312:
    00001bb9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bc0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7104
.Ltmp2315:
    00001bc5: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bcc: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7116
.Ltmp2322:
    00001bd1: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bd8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7128
.Ltmp2328:
    00001bdd: 	leaq	DATAat0x3d158(%rip), %rdi
    00001be4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7140
.Ltmp2331:
    00001be9: 	leaq	DATAat0x3d182(%rip), %rdi
    00001bf0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7152
.Ltmp2338:
    00001bf5: 	leaq	DATAat0x3d158(%rip), %rdi
    00001bfc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7164
.Ltmp2344:
    00001c01: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c08: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7176
.Ltmp2347:
    00001c0d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c14: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7188
.Ltmp2354:
    00001c19: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c20: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7200
.Ltmp2360:
    00001c25: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c2c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7212
.Ltmp2363:
    00001c31: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c38: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7224
.Ltmp2370:
    00001c3d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c44: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7236
.Ltmp2376:
    00001c49: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c50: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7248
.Ltmp2379:
    00001c55: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c5c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7260
.Ltmp2386:
    00001c61: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c68: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7272
.Ltmp2392:
    00001c6d: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c74: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7284
.Ltmp2395:
    00001c79: 	leaq	DATAat0x3d182(%rip), %rdi
    00001c80: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7296
.Ltmp2402:
    00001c85: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c8c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7308
.Ltmp2408:
    00001c91: 	leaq	DATAat0x3d158(%rip), %rdi
    00001c98: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7320
.Ltmp2411:
    00001c9d: 	leaq	DATAat0x3d182(%rip), %rdi
    00001ca4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 7332
.Ltmp2418:
    00001ca9: 	leaq	DATAat0x3d158(%rip), %rdi
    00001cb0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7344
.Ltmp2424:
    00001cb5: 	callq	__stack_chk_fail@PLT # Offset: 7349
.Ltmp2290:
    00001cba: 	leaq	DATAat0x3d158(%rip), %rdi
    00001cc1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7361
.Ltmp2426:
    00001cc6: 	movq	0x18(%rsp), %rdi
    00001ccb: 	jmp	.Ltmp2472 # Offset: 7371
.Ltmp2428:
    00001cd0: 	movq	0x18(%rsp), %rdi
    00001cd5: 	jmp	.Ltmp2473 # Offset: 7381
.Ltmp2430:
    00001cda: 	movq	0x18(%rsp), %rdi
    00001cdf: 	jmp	.Ltmp2474 # Offset: 7391
.Ltmp2432:
    00001ce4: 	movq	0x18(%rsp), %rdi
    00001ce9: 	jmp	.Ltmp2475 # Offset: 7401
.Ltmp2434:
    00001cee: 	movq	0x18(%rsp), %rdi
    00001cf3: 	jmp	.Ltmp2476 # Offset: 7411
.Ltmp2436:
    00001cf8: 	movq	0x18(%rsp), %rdi
    00001cfd: 	jmp	.Ltmp2477 # Offset: 7421
.Ltmp2438:
    00001d02: 	movq	0x18(%rsp), %rdi
    00001d07: 	jmp	.Ltmp2478 # Offset: 7431
.Ltmp2440:
    00001d0c: 	movq	0x18(%rsp), %rdi
    00001d11: 	jmp	.Ltmp2479 # Offset: 7441
    00001d16: 	endbr64
.Ltmp2481:
    00001d1a: 	movq	%rax, %rbp
    00001d1d: 	jmp	.Ltmp2480 # Offset: 7453
    00001d1f: 	endbr64
    00001d23: 	jmp	.Ltmp2481 # Offset: 7459
    00001d25: 	endbr64
    00001d29: 	jmp	.Ltmp2481 # Offset: 7465
    00001d2b: 	endbr64
    00001d2f: 	jmp	.Ltmp2481 # Offset: 7471
    00001d31: 	endbr64
    00001d35: 	jmp	.Ltmp2481 # Offset: 7477
    00001d37: 	endbr64
    00001d3b: 	jmp	.Ltmp2481 # Offset: 7483
    00001d3d: 	endbr64
    00001d41: 	jmp	.Ltmp2481 # Offset: 7489
    00001d43: 	endbr64
    00001d47: 	movq	%rax, %rbp
    00001d4a: 	jmp	.Ltmp2482 # Offset: 7498
    00001d4c: 	endbr64
    00001d50: 	jmp	.Ltmp2481 # Offset: 7504
    00001d52: 	endbr64
    00001d56: 	jmp	.Ltmp2481 # Offset: 7510
    00001d58: 	endbr64
    00001d5c: 	jmp	.Ltmp2481 # Offset: 7516
    00001d5e: 	endbr64
    00001d62: 	jmp	.Ltmp2481 # Offset: 7522
.Ltmp2480:
    00001d64: 	movq	0x70(%rsp), %rdi
    00001d69: 	cmpq	0x18(%rsp), %rdi
    00001d6e: 	je	.Ltmp2482 # Offset: 7534
    00001d70: 	movq	0x80(%rsp), %rax
    00001d78: 	leaq	0x1(%rax), %rsi
    00001d7c: 	callq	_ZdlPvm@PLT # Offset: 7548
.Ltmp2482:
    00001d81: 	movq	0x50(%rsp), %rdi
    00001d86: 	cmpq	0x38(%rsp), %rdi
    00001d8b: 	je	.Ltmp2483 # Offset: 7563
    00001d8d: 	movq	0x60(%rsp), %rax
    00001d92: 	leaq	0x1(%rax), %rsi
    00001d96: 	callq	_ZdlPvm@PLT # Offset: 7574
.Ltmp2483:
    00001d9b: 	movq	%rbp, %rdi
    00001d9e: 	callq	_Unwind_Resume@PLT # Offset: 7582
    00001da3: 	endbr64
    00001da7: 	jmp	.Ltmp2481 # Offset: 7591
    00001dac: 	endbr64
    00001db0: 	jmp	.Ltmp2481 # Offset: 7600
    00001db5: 	endbr64
    00001db9: 	jmp	.Ltmp2481 # Offset: 7609
    00001dbe: 	endbr64
    00001dc2: 	jmp	.Ltmp2481 # Offset: 7618
    00001dc7: 	endbr64
    00001dcb: 	jmp	.Ltmp2481 # Offset: 7627
    00001dd0: 	endbr64
    00001dd4: 	jmp	.Ltmp2481 # Offset: 7636
    00001dd9: 	endbr64
    00001ddd: 	jmp	.Ltmp2481 # Offset: 7645
DWARF CFI Instructions:
    <empty>
End of Function "_Z20TestLoopsIntegerOnlyItENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_"

Binary Function "_Z9TestLoopsIlEvd" after disassembly {
  Number      : 148
  State       : disassembled
  Address     : 0x19900
  Size        : 0x2d40
  MaxSize     : 0x2d40
  Offset      : 0x19900
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIlEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0147:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2484:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2484 # Offset: 37
    00000027: 	subq	$0xd28, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm2
    0000003e: 	movl	$0x5f34, %r9d
    00000044: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000004b: 	movsd	%xmm0, (%rsp)
    00000050: 	leaq	0xfd10(%rsp), %r15
    00000058: 	movq	%fs:0x28, %rax
    00000061: 	movq	%rax, 0xfd18(%rsp)
    00000069: 	xorl	%eax, %eax
    0000006b: 	leaq	0x110(%rsp), %rax
    00000073: 	movl	$0x36746e69, 0x110(%rsp)
    0000007e: 	movq	%rax, 0x70(%rsp)
    00000083: 	movq	%rax, 0x100(%rsp)
    0000008b: 	leaq	0x90(%rsp), %rax
    00000093: 	movq	%rax, %rsi
    00000096: 	movq	%rax, 0x78(%rsp)
    0000009b: 	movw	%r9w, 0x114(%rsp)
    000000a4: 	movb	$0x74, 0x116(%rsp)
    000000ac: 	movq	$0x7, 0x108(%rsp)
    000000b8: 	movb	$0x0, 0x117(%rsp)
    000000c0: 	movaps	%xmm7, 0x90(%rsp)
    000000c8: 	movaps	%xmm2, 0xa0(%rsp)
    000000d0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 208
    000000d5: 	movsd	(%rsp), %xmm0
    000000da: 	cvttsd2si	init_value(%rip), %rax
    000000e3: 	movq	%rax, %xmm1
    000000e8: 	leaq	0x310(%rsp), %rax
    000000f0: 	movq	%rax, 0x18(%rsp)
    000000f5: 	punpcklqdq	%xmm1, %xmm1
    000000f9: 	nopl	(%rax) # Size: 7
.Ltmp2485:
    00000100: 	movaps	%xmm1, (%rax)
    00000103: 	addq	$0x10, %rax
    00000107: 	cmpq	%r15, %rax
    0000010a: 	jne	.Ltmp2485 # Offset: 266
    0000010c: 	cvttsd2si	%xmm0, %rbp
    00000111: 	leaq	0x180(%rsp), %rdi
    00000119: 	movq	%rdi, 0x60(%rsp)
    0000011e: 	leaq	(%rbp,%rbp), %r12
    00000123: 	leaq	0x2(%rbp), %r13
    00000127: 	movq	%r12, %rax
    0000012a: 	cqto
    0000012c: 	idivq	%r13
    0000012f: 	leaq	DATAat0x3d273(%rip), %rdx
    00000136: 	addq	%rbp, %rax
    00000139: 	movq	%rax, 0x50(%rsp)
    0000013e: 	leaq	0x100(%rsp), %rax
    00000146: 	movq	%rax, %rsi
    00000149: 	movq	%rax, 0x58(%rsp)
    0000014e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 334
    00000153: 	callq	clock@PLT # Offset: 339
    00000158: 	movq	%rbp, %xmm7
    0000015d: 	xorl	%ebx, %ebx
    0000015f: 	movl	iterations(%rip), %ecx
    00000165: 	punpcklqdq	%xmm7, %xmm7
    00000169: 	movq	%rax, start_time(%rip)
    00000170: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000177: 	movaps	%xmm7, (%rsp)
    0000017b: 	testl	%ecx, %ecx
    0000017d: 	jle	.Ltmp2486 # Offset: 381
    0000017f: 	nop # Size: 1
.Ltmp2489:
    00000180: 	movq	0x18(%rsp), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	nopl	(%rax) # Size: 7
.Ltmp2487:
    00000190: 	movdqa	(%rsp), %xmm1
    00000195: 	paddq	(%rax), %xmm1
    00000199: 	addq	$0x10, %rax
    0000019d: 	paddq	%xmm1, %xmm0
    000001a1: 	cmpq	%r15, %rax
    000001a4: 	jne	.Ltmp2487 # Offset: 420
    000001a6: 	cvttsd2si	init_value(%rip), %rdx
    000001af: 	movdqa	%xmm0, %xmm1
    000001b3: 	psrldq	$0x8, %xmm1
    000001b8: 	paddq	%xmm1, %xmm0
    000001bc: 	movq	%xmm0, %rax
    000001c1: 	addq	%rbp, %rdx
    000001c4: 	imulq	$0x1f40, %rdx, %rdx
    000001cb: 	cmpq	%rax, %rdx
    000001ce: 	je	.Ltmp2488 # Offset: 462
    000001d0: 	movl	current_test(%rip), %edx
    000001d6: 	movq	%r14, %rsi
    000001d9: 	movl	$0x1, %edi
    000001de: 	xorl	%eax, %eax
    000001e0: 	callq	__printf_chk@PLT # Offset: 480
    000001e5: 	movl	iterations(%rip), %ecx
.Ltmp2488:
    000001eb: 	addl	$0x1, %ebx
    000001ee: 	cmpl	%ecx, %ebx
    000001f0: 	jl	.Ltmp2489 # Offset: 496
.Ltmp2486:
    000001f2: 	movq	0x60(%rsp), %rsi
    000001f7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001fe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 510
    00000203: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000211: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000218: 	je	.Ltmp2490 # Offset: 536
.Ltmp2700:
    0000021e: 	movq	-0x20(%rax), %r14
    00000222: 	callq	clock@PLT # Offset: 546
    00000227: 	pxor	%xmm0, %xmm0
    0000022b: 	movq	%rax, end_time(%rip)
    00000232: 	movq	%r14, %rdi
    00000235: 	subq	start_time(%rip), %rax
    0000023c: 	cvtsi2sd	%rax, %xmm0
    00000241: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000249: 	callq	_Z13record_resultdPKc # Offset: 585
    0000024e: 	movq	0x180(%rsp), %rdi
    00000256: 	leaq	0x190(%rsp), %rax
    0000025e: 	movq	%rax, 0x68(%rsp)
    00000263: 	cmpq	%rax, %rdi
    00000266: 	je	.Ltmp2491 # Offset: 614
    00000268: 	movq	0x190(%rsp), %rax
    00000270: 	leaq	0x1(%rax), %rsi
    00000274: 	callq	_ZdlPvm@PLT # Offset: 628
.Ltmp2491:
    00000279: 	movq	0x58(%rsp), %rsi
    0000027e: 	movq	0x60(%rsp), %rdi
    00000283: 	leaq	DATAat0x3d281(%rip), %rdx
    0000028a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 650
    0000028f: 	callq	clock@PLT # Offset: 655
    00000294: 	movl	iterations(%rip), %ecx
    0000029a: 	movq	%rax, start_time(%rip)
    000002a1: 	testl	%ecx, %ecx
    000002a3: 	jle	.Ltmp2492 # Offset: 675
    000002a5: 	imulq	$0x1f40, %rbp, %r14
    000002ac: 	xorl	%ebx, %ebx
    000002ae: 	nop # Size: 2
.Ltmp2495:
    000002b0: 	movq	0x18(%rsp), %rax
    000002b5: 	pxor	%xmm0, %xmm0
    000002b9: 	nopl	(%rax) # Size: 7
.Ltmp2493:
    000002c0: 	paddq	(%rax), %xmm0
    000002c4: 	addq	$0x10, %rax
    000002c8: 	cmpq	%r15, %rax
    000002cb: 	jne	.Ltmp2493 # Offset: 715
    000002cd: 	cvttsd2si	init_value(%rip), %rdx
    000002d6: 	movdqa	%xmm0, %xmm1
    000002da: 	psrldq	$0x8, %xmm1
    000002df: 	paddq	%xmm1, %xmm0
    000002e3: 	movq	%xmm0, %rax
    000002e8: 	addq	%rbp, %rdx
    000002eb: 	addq	%r14, %rax
    000002ee: 	imulq	$0x1f40, %rdx, %rdx
    000002f5: 	cmpq	%rdx, %rax
    000002f8: 	je	.Ltmp2494 # Offset: 760
    000002fa: 	movl	current_test(%rip), %edx
    00000300: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000307: 	movl	$0x1, %edi
    0000030c: 	xorl	%eax, %eax
    0000030e: 	callq	__printf_chk@PLT # Offset: 782
    00000313: 	movl	iterations(%rip), %ecx
.Ltmp2494:
    00000319: 	addl	$0x1, %ebx
    0000031c: 	cmpl	%ecx, %ebx
    0000031e: 	jl	.Ltmp2495 # Offset: 798
.Ltmp2492:
    00000320: 	movq	0x60(%rsp), %rsi
    00000325: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000032c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 812
    00000331: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000338: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000033f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000346: 	je	.Ltmp2496 # Offset: 838
.Ltmp2699:
    0000034c: 	movq	-0x20(%rax), %r14
    00000350: 	callq	clock@PLT # Offset: 848
    00000355: 	pxor	%xmm0, %xmm0
    00000359: 	movq	%rax, end_time(%rip)
    00000360: 	movq	%r14, %rdi
    00000363: 	subq	start_time(%rip), %rax
    0000036a: 	cvtsi2sd	%rax, %xmm0
    0000036f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000377: 	callq	_Z13record_resultdPKc # Offset: 887
    0000037c: 	movq	0x180(%rsp), %rdi
    00000384: 	cmpq	0x68(%rsp), %rdi
    00000389: 	je	.Ltmp2497 # Offset: 905
    0000038b: 	movq	0x190(%rsp), %rax
    00000393: 	leaq	0x1(%rax), %rsi
    00000397: 	callq	_ZdlPvm@PLT # Offset: 919
.Ltmp2497:
    0000039c: 	movq	0x58(%rsp), %rsi
    000003a1: 	movq	0x60(%rsp), %rdi
    000003a6: 	leaq	DATAat0x3d297(%rip), %rdx
    000003ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 941
    000003b2: 	callq	clock@PLT # Offset: 946
    000003b7: 	movl	iterations(%rip), %ecx
    000003bd: 	movq	%rax, start_time(%rip)
    000003c4: 	testl	%ecx, %ecx
    000003c6: 	jle	.Ltmp2498 # Offset: 966
    000003cc: 	movq	0x50(%rsp), %rdi
    000003d1: 	leaq	(%rbp,%r12), %rax
    000003d6: 	xorl	%ebx, %ebx
    000003d8: 	addq	%r13, %rax
    000003db: 	leaq	(%rax,%rdi), %r14
    000003df: 	movq	%r14, %xmm7
    000003e4: 	punpcklqdq	%xmm7, %xmm7
    000003e8: 	movaps	%xmm7, (%rsp)
    000003ec: 	nopl	(%rax) # Size: 4
.Ltmp2501:
    000003f0: 	movq	0x18(%rsp), %rax
    000003f5: 	pxor	%xmm0, %xmm0
    000003f9: 	nopl	(%rax) # Size: 7
.Ltmp2499:
    00000400: 	movdqa	(%rsp), %xmm1
    00000405: 	paddq	(%rax), %xmm1
    00000409: 	addq	$0x10, %rax
    0000040d: 	paddq	%xmm1, %xmm0
    00000411: 	cmpq	%r15, %rax
    00000414: 	jne	.Ltmp2499 # Offset: 1044
    00000416: 	cvttsd2si	init_value(%rip), %rdx
    0000041f: 	movdqa	%xmm0, %xmm1
    00000423: 	psrldq	$0x8, %xmm1
    00000428: 	paddq	%xmm1, %xmm0
    0000042c: 	movq	%xmm0, %rax
    00000431: 	addq	%r14, %rdx
    00000434: 	imulq	$0x1f40, %rdx, %rdx
    0000043b: 	cmpq	%rax, %rdx
    0000043e: 	je	.Ltmp2500 # Offset: 1086
    00000440: 	movl	current_test(%rip), %edx
    00000446: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000044d: 	movl	$0x1, %edi
    00000452: 	xorl	%eax, %eax
    00000454: 	callq	__printf_chk@PLT # Offset: 1108
    00000459: 	movl	iterations(%rip), %ecx
.Ltmp2500:
    0000045f: 	addl	$0x1, %ebx
    00000462: 	cmpl	%ecx, %ebx
    00000464: 	jl	.Ltmp2501 # Offset: 1124
.Ltmp2498:
    00000466: 	movq	0x60(%rsp), %rsi
    0000046b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000472: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1138
    00000477: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000047e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000485: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000048c: 	je	.Ltmp2502 # Offset: 1164
.Ltmp2698:
    00000492: 	movq	-0x20(%rax), %r14
    00000496: 	callq	clock@PLT # Offset: 1174
    0000049b: 	pxor	%xmm0, %xmm0
    0000049f: 	movq	%rax, end_time(%rip)
    000004a6: 	movq	%r14, %rdi
    000004a9: 	subq	start_time(%rip), %rax
    000004b0: 	cvtsi2sd	%rax, %xmm0
    000004b5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004bd: 	callq	_Z13record_resultdPKc # Offset: 1213
    000004c2: 	movq	0x180(%rsp), %rdi
    000004ca: 	cmpq	0x68(%rsp), %rdi
    000004cf: 	je	.Ltmp2503 # Offset: 1231
    000004d1: 	movq	0x190(%rsp), %rax
    000004d9: 	leaq	0x1(%rax), %rsi
    000004dd: 	callq	_ZdlPvm@PLT # Offset: 1245
.Ltmp2503:
    000004e2: 	movq	0x58(%rsp), %rsi
    000004e7: 	movq	0x60(%rsp), %rdi
    000004ec: 	leaq	DATAat0x3d2af(%rip), %rdx
    000004f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1267
    000004f8: 	callq	clock@PLT # Offset: 1272
    000004fd: 	movl	iterations(%rip), %ecx
    00000503: 	movq	%rax, start_time(%rip)
    0000050a: 	testl	%ecx, %ecx
    0000050c: 	jle	.Ltmp2504 # Offset: 1292
    00000512: 	movq	%rbp, %xmm7
    00000517: 	xorl	%ebx, %ebx
    00000519: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000520: 	punpcklqdq	%xmm7, %xmm7
    00000524: 	movaps	%xmm7, (%rsp)
    00000528: 	movq	%r12, %xmm7
    0000052d: 	punpcklqdq	%xmm7, %xmm7
    00000531: 	movaps	%xmm7, 0x20(%rsp)
    00000536: 	movq	%r13, %xmm7
    0000053b: 	punpcklqdq	%xmm7, %xmm7
    0000053f: 	movaps	%xmm7, 0x30(%rsp)
    00000544: 	movq	0x50(%rsp), %xmm7
    0000054a: 	punpcklqdq	%xmm7, %xmm7
    0000054e: 	movaps	%xmm7, 0x40(%rsp)
    00000553: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2507:
    00000558: 	movq	0x18(%rsp), %rax
    0000055d: 	pxor	%xmm1, %xmm1
    00000561: 	nopl	(%rax) # Size: 7
.Ltmp2505:
    00000568: 	movdqa	(%rsp), %xmm0
    0000056d: 	paddq	(%rax), %xmm0
    00000571: 	addq	$0x10, %rax
    00000575: 	paddq	0x20(%rsp), %xmm0
    0000057b: 	paddq	0x30(%rsp), %xmm0
    00000581: 	paddq	0x40(%rsp), %xmm0
    00000587: 	paddq	%xmm0, %xmm1
    0000058b: 	cmpq	%r15, %rax
    0000058e: 	jne	.Ltmp2505 # Offset: 1422
    00000590: 	cvttsd2si	init_value(%rip), %rdx
    00000599: 	movdqa	%xmm1, %xmm0
    0000059d: 	psrldq	$0x8, %xmm0
    000005a2: 	paddq	%xmm0, %xmm1
    000005a6: 	movq	%xmm1, %rax
    000005ab: 	addq	%rbp, %rdx
    000005ae: 	addq	%r12, %rdx
    000005b1: 	addq	%r13, %rdx
    000005b4: 	addq	0x50(%rsp), %rdx
    000005b9: 	imulq	$0x1f40, %rdx, %rdx
    000005c0: 	cmpq	%rax, %rdx
    000005c3: 	je	.Ltmp2506 # Offset: 1475
    000005c5: 	movl	current_test(%rip), %edx
    000005cb: 	movq	%r14, %rsi
    000005ce: 	movl	$0x1, %edi
    000005d3: 	xorl	%eax, %eax
    000005d5: 	callq	__printf_chk@PLT # Offset: 1493
    000005da: 	movl	iterations(%rip), %ecx
.Ltmp2506:
    000005e0: 	addl	$0x1, %ebx
    000005e3: 	cmpl	%ecx, %ebx
    000005e5: 	jl	.Ltmp2507 # Offset: 1509
.Ltmp2504:
    000005eb: 	movq	0x60(%rsp), %rsi
    000005f0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000005f7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1527
    000005fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000603: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000060a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000611: 	je	.Ltmp2508 # Offset: 1553
.Ltmp2697:
    00000617: 	movq	-0x20(%rax), %r14
    0000061b: 	callq	clock@PLT # Offset: 1563
    00000620: 	pxor	%xmm0, %xmm0
    00000624: 	movq	%rax, end_time(%rip)
    0000062b: 	movq	%r14, %rdi
    0000062e: 	subq	start_time(%rip), %rax
    00000635: 	cvtsi2sd	%rax, %xmm0
    0000063a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000642: 	callq	_Z13record_resultdPKc # Offset: 1602
    00000647: 	movq	0x180(%rsp), %rdi
    0000064f: 	cmpq	0x68(%rsp), %rdi
    00000654: 	je	.Ltmp2509 # Offset: 1620
    00000656: 	movq	0x190(%rsp), %rax
    0000065e: 	leaq	0x1(%rax), %rsi
    00000662: 	callq	_ZdlPvm@PLT # Offset: 1634
.Ltmp2509:
    00000667: 	movq	0x58(%rsp), %rsi
    0000066c: 	movq	0x60(%rsp), %rdi
    00000671: 	leaq	DATAat0x3d2c8(%rip), %rdx
    00000678: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1656
    0000067d: 	callq	clock@PLT # Offset: 1661
    00000682: 	movq	%rbp, %xmm7
    00000687: 	xorl	%ebx, %ebx
    00000689: 	movl	iterations(%rip), %ecx
    0000068f: 	punpcklqdq	%xmm7, %xmm7
    00000693: 	movq	%rax, start_time(%rip)
    0000069a: 	leaq	DATAat0x3d1d8(%rip), %r14
    000006a1: 	movaps	%xmm7, (%rsp)
    000006a5: 	testl	%ecx, %ecx
    000006a7: 	jle	.Ltmp2510 # Offset: 1703
    000006a9: 	nopl	(%rax) # Size: 7
.Ltmp2513:
    000006b0: 	movq	0x18(%rsp), %rax
    000006b5: 	pxor	%xmm0, %xmm0
    000006b9: 	nopl	(%rax) # Size: 7
.Ltmp2511:
    000006c0: 	paddq	(%rax), %xmm0
    000006c4: 	addq	$0x10, %rax
    000006c8: 	psubq	(%rsp), %xmm0
    000006cd: 	cmpq	%r15, %rax
    000006d0: 	jne	.Ltmp2511 # Offset: 1744
    000006d2: 	cvttsd2si	init_value(%rip), %rdx
    000006db: 	movdqa	%xmm0, %xmm1
    000006df: 	psrldq	$0x8, %xmm1
    000006e4: 	paddq	%xmm1, %xmm0
    000006e8: 	movq	%xmm0, %rax
    000006ed: 	subq	%rbp, %rdx
    000006f0: 	imulq	$0x1f40, %rdx, %rdx
    000006f7: 	cmpq	%rax, %rdx
    000006fa: 	je	.Ltmp2512 # Offset: 1786
    000006fc: 	movl	current_test(%rip), %edx
    00000702: 	movq	%r14, %rsi
    00000705: 	movl	$0x1, %edi
    0000070a: 	xorl	%eax, %eax
    0000070c: 	callq	__printf_chk@PLT # Offset: 1804
    00000711: 	movl	iterations(%rip), %ecx
.Ltmp2512:
    00000717: 	addl	$0x1, %ebx
    0000071a: 	cmpl	%ecx, %ebx
    0000071c: 	jl	.Ltmp2513 # Offset: 1820
.Ltmp2510:
    0000071e: 	movq	0x60(%rsp), %rsi
    00000723: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000072a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1834
    0000072f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000736: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000073d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000744: 	je	.Ltmp2514 # Offset: 1860
.Ltmp2696:
    0000074a: 	movq	-0x20(%rax), %r14
    0000074e: 	callq	clock@PLT # Offset: 1870
    00000753: 	pxor	%xmm0, %xmm0
    00000757: 	movq	%rax, end_time(%rip)
    0000075e: 	movq	%r14, %rdi
    00000761: 	subq	start_time(%rip), %rax
    00000768: 	cvtsi2sd	%rax, %xmm0
    0000076d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000775: 	callq	_Z13record_resultdPKc # Offset: 1909
    0000077a: 	movq	0x180(%rsp), %rdi
    00000782: 	cmpq	0x68(%rsp), %rdi
    00000787: 	je	.Ltmp2515 # Offset: 1927
    00000789: 	movq	0x190(%rsp), %rax
    00000791: 	leaq	0x1(%rax), %rsi
    00000795: 	callq	_ZdlPvm@PLT # Offset: 1941
.Ltmp2515:
    0000079a: 	movq	0x58(%rsp), %rsi
    0000079f: 	movq	0x60(%rsp), %rdi
    000007a4: 	leaq	DATAat0x3d2db(%rip), %rdx
    000007ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1963
    000007b0: 	callq	clock@PLT # Offset: 1968
    000007b5: 	movl	iterations(%rip), %ecx
    000007bb: 	movq	%rax, start_time(%rip)
    000007c2: 	testl	%ecx, %ecx
    000007c4: 	jle	.Ltmp2516 # Offset: 1988
    000007ca: 	movq	0x50(%rsp), %rdi
    000007cf: 	leaq	(%rbp,%r12), %rax
    000007d4: 	xorl	%ebx, %ebx
    000007d6: 	addq	%r13, %rax
    000007d9: 	leaq	(%rax,%rdi), %r14
    000007dd: 	movq	%r14, %xmm7
    000007e2: 	punpcklqdq	%xmm7, %xmm7
    000007e6: 	movaps	%xmm7, (%rsp)
    000007ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2519:
    000007f0: 	movq	0x18(%rsp), %rax
    000007f5: 	pxor	%xmm0, %xmm0
    000007f9: 	nopl	(%rax) # Size: 7
.Ltmp2517:
    00000800: 	paddq	(%rax), %xmm0
    00000804: 	addq	$0x10, %rax
    00000808: 	psubq	(%rsp), %xmm0
    0000080d: 	cmpq	%r15, %rax
    00000810: 	jne	.Ltmp2517 # Offset: 2064
    00000812: 	cvttsd2si	init_value(%rip), %rdx
    0000081b: 	movdqa	%xmm0, %xmm1
    0000081f: 	psrldq	$0x8, %xmm1
    00000824: 	paddq	%xmm1, %xmm0
    00000828: 	movq	%xmm0, %rax
    0000082d: 	subq	%r14, %rdx
    00000830: 	imulq	$0x1f40, %rdx, %rdx
    00000837: 	cmpq	%rax, %rdx
    0000083a: 	je	.Ltmp2518 # Offset: 2106
    0000083c: 	movl	current_test(%rip), %edx
    00000842: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000849: 	movl	$0x1, %edi
    0000084e: 	xorl	%eax, %eax
    00000850: 	callq	__printf_chk@PLT # Offset: 2128
    00000855: 	movl	iterations(%rip), %ecx
.Ltmp2518:
    0000085b: 	addl	$0x1, %ebx
    0000085e: 	cmpl	%ecx, %ebx
    00000860: 	jl	.Ltmp2519 # Offset: 2144
.Ltmp2516:
    00000862: 	movq	0x60(%rsp), %rsi
    00000867: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000086e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2158
    00000873: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000087a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000881: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000888: 	je	.Ltmp2520 # Offset: 2184
.Ltmp2695:
    0000088e: 	movq	-0x20(%rax), %r14
    00000892: 	callq	clock@PLT # Offset: 2194
    00000897: 	pxor	%xmm0, %xmm0
    0000089b: 	movq	%rax, end_time(%rip)
    000008a2: 	movq	%r14, %rdi
    000008a5: 	subq	start_time(%rip), %rax
    000008ac: 	cvtsi2sd	%rax, %xmm0
    000008b1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000008b9: 	callq	_Z13record_resultdPKc # Offset: 2233
    000008be: 	movq	0x180(%rsp), %rdi
    000008c6: 	cmpq	0x68(%rsp), %rdi
    000008cb: 	je	.Ltmp2521 # Offset: 2251
    000008cd: 	movq	0x190(%rsp), %rax
    000008d5: 	leaq	0x1(%rax), %rsi
    000008d9: 	callq	_ZdlPvm@PLT # Offset: 2265
.Ltmp2521:
    000008de: 	movq	0x58(%rsp), %rsi
    000008e3: 	movq	0x60(%rsp), %rdi
    000008e8: 	leaq	DATAat0x3d2f8(%rip), %rdx
    000008ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2287
    000008f4: 	callq	clock@PLT # Offset: 2292
    000008f9: 	movl	iterations(%rip), %ecx
    000008ff: 	movq	%rax, start_time(%rip)
    00000906: 	testl	%ecx, %ecx
    00000908: 	jle	.Ltmp2522 # Offset: 2312
    0000090e: 	movq	%r12, %xmm7
    00000913: 	movq	%rbp, %xmm2
    00000918: 	xorl	%ebx, %ebx
    0000091a: 	punpcklqdq	%xmm7, %xmm7
    0000091e: 	punpcklqdq	%xmm2, %xmm2
    00000922: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000929: 	movaps	%xmm7, 0x20(%rsp)
    0000092e: 	movq	0x50(%rsp), %xmm7
    00000934: 	movaps	%xmm2, (%rsp)
    00000938: 	movq	%r13, %xmm2
    0000093d: 	punpcklqdq	%xmm2, %xmm2
    00000941: 	punpcklqdq	%xmm7, %xmm7
    00000945: 	movaps	%xmm2, 0x30(%rsp)
    0000094a: 	movaps	%xmm7, 0x40(%rsp)
    0000094f: 	nop # Size: 1
.Ltmp2525:
    00000950: 	movq	0x18(%rsp), %rax
    00000955: 	pxor	%xmm1, %xmm1
    00000959: 	nopl	(%rax) # Size: 7
.Ltmp2523:
    00000960: 	movdqa	(%rax), %xmm0
    00000964: 	psubq	(%rsp), %xmm0
    00000969: 	addq	$0x10, %rax
    0000096d: 	psubq	0x20(%rsp), %xmm0
    00000973: 	psubq	0x30(%rsp), %xmm0
    00000979: 	psubq	0x40(%rsp), %xmm0
    0000097f: 	paddq	%xmm0, %xmm1
    00000983: 	cmpq	%r15, %rax
    00000986: 	jne	.Ltmp2523 # Offset: 2438
    00000988: 	cvttsd2si	init_value(%rip), %rdx
    00000991: 	movdqa	%xmm1, %xmm0
    00000995: 	psrldq	$0x8, %xmm0
    0000099a: 	paddq	%xmm0, %xmm1
    0000099e: 	movq	%xmm1, %rax
    000009a3: 	subq	%rbp, %rdx
    000009a6: 	subq	%r12, %rdx
    000009a9: 	subq	%r13, %rdx
    000009ac: 	subq	0x50(%rsp), %rdx
    000009b1: 	imulq	$0x1f40, %rdx, %rdx
    000009b8: 	cmpq	%rax, %rdx
    000009bb: 	je	.Ltmp2524 # Offset: 2491
    000009bd: 	movl	current_test(%rip), %edx
    000009c3: 	movq	%r14, %rsi
    000009c6: 	movl	$0x1, %edi
    000009cb: 	xorl	%eax, %eax
    000009cd: 	callq	__printf_chk@PLT # Offset: 2509
    000009d2: 	movl	iterations(%rip), %ecx
.Ltmp2524:
    000009d8: 	addl	$0x1, %ebx
    000009db: 	cmpl	%ecx, %ebx
    000009dd: 	jl	.Ltmp2525 # Offset: 2525
.Ltmp2522:
    000009e3: 	movq	0x60(%rsp), %rsi
    000009e8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000009ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2543
    000009f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009fb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a02: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a09: 	je	.Ltmp2526 # Offset: 2569
.Ltmp2694:
    00000a0f: 	movq	-0x20(%rax), %r14
    00000a13: 	callq	clock@PLT # Offset: 2579
    00000a18: 	pxor	%xmm0, %xmm0
    00000a1c: 	movq	%rax, end_time(%rip)
    00000a23: 	movq	%r14, %rdi
    00000a26: 	subq	start_time(%rip), %rax
    00000a2d: 	cvtsi2sd	%rax, %xmm0
    00000a32: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000a3a: 	callq	_Z13record_resultdPKc # Offset: 2618
    00000a3f: 	movq	0x180(%rsp), %rdi
    00000a47: 	cmpq	0x68(%rsp), %rdi
    00000a4c: 	je	.Ltmp2527 # Offset: 2636
    00000a4e: 	movq	0x190(%rsp), %rax
    00000a56: 	leaq	0x1(%rax), %rsi
    00000a5a: 	callq	_ZdlPvm@PLT # Offset: 2650
.Ltmp2527:
    00000a5f: 	movq	0x58(%rsp), %rsi
    00000a64: 	movq	0x60(%rsp), %rdi
    00000a69: 	leaq	DATAat0x3d316(%rip), %rdx
    00000a70: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2672
    00000a75: 	callq	clock@PLT # Offset: 2677
    00000a7a: 	movl	iterations(%rip), %esi
    00000a80: 	xorl	%ebx, %ebx
    00000a82: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000a89: 	movq	%rax, start_time(%rip)
    00000a90: 	testl	%esi, %esi
    00000a92: 	jle	.Ltmp2528 # Offset: 2706
    00000a94: 	nopl	(%rax) # Size: 4
.Ltmp2531:
    00000a98: 	movq	0x18(%rsp), %rax
    00000a9d: 	xorl	%edx, %edx
    00000a9f: 	nop # Size: 1
.Ltmp2529:
    00000aa0: 	movq	(%rax), %rcx
    00000aa3: 	addq	$0x8, %rax
    00000aa7: 	imulq	%rbp, %rcx
    00000aab: 	addq	%rcx, %rdx
    00000aae: 	cmpq	%r15, %rax
    00000ab1: 	jne	.Ltmp2529 # Offset: 2737
    00000ab3: 	cvttsd2si	init_value(%rip), %rax
    00000abc: 	imulq	%rbp, %rax
    00000ac0: 	imulq	$0x1f40, %rax, %rax
    00000ac7: 	cmpq	%rax, %rdx
    00000aca: 	je	.Ltmp2530 # Offset: 2762
    00000acc: 	movl	current_test(%rip), %edx
    00000ad2: 	movq	%r14, %rsi
    00000ad5: 	movl	$0x1, %edi
    00000ada: 	xorl	%eax, %eax
    00000adc: 	callq	__printf_chk@PLT # Offset: 2780
    00000ae1: 	movl	iterations(%rip), %esi
.Ltmp2530:
    00000ae7: 	addl	$0x1, %ebx
    00000aea: 	cmpl	%esi, %ebx
    00000aec: 	jl	.Ltmp2531 # Offset: 2796
.Ltmp2528:
    00000aee: 	movq	0x60(%rsp), %rsi
    00000af3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000afa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2810
    00000aff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b06: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b0d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b14: 	je	.Ltmp2532 # Offset: 2836
.Ltmp2693:
    00000b1a: 	movq	-0x20(%rax), %r14
    00000b1e: 	callq	clock@PLT # Offset: 2846
    00000b23: 	pxor	%xmm0, %xmm0
    00000b27: 	movq	%rax, end_time(%rip)
    00000b2e: 	movq	%r14, %rdi
    00000b31: 	subq	start_time(%rip), %rax
    00000b38: 	cvtsi2sd	%rax, %xmm0
    00000b3d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b45: 	callq	_Z13record_resultdPKc # Offset: 2885
    00000b4a: 	movq	0x180(%rsp), %rdi
    00000b52: 	cmpq	0x68(%rsp), %rdi
    00000b57: 	je	.Ltmp2533 # Offset: 2903
    00000b59: 	movq	0x190(%rsp), %rax
    00000b61: 	leaq	0x1(%rax), %rsi
    00000b65: 	callq	_ZdlPvm@PLT # Offset: 2917
.Ltmp2533:
    00000b6a: 	movq	0x58(%rsp), %rsi
    00000b6f: 	movq	0x60(%rsp), %rdi
    00000b74: 	leaq	DATAat0x3d329(%rip), %rdx
    00000b7b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2939
    00000b80: 	callq	clock@PLT # Offset: 2944
    00000b85: 	movl	iterations(%rip), %esi
    00000b8b: 	movq	%rax, start_time(%rip)
    00000b92: 	testl	%esi, %esi
    00000b94: 	jle	.Ltmp2534 # Offset: 2964
    00000b96: 	movq	%rbp, %rbx
    00000b99: 	xorl	%r14d, %r14d
    00000b9c: 	imulq	%r12, %rbx
    00000ba0: 	imulq	%r13, %rbx
    00000ba4: 	imulq	0x50(%rsp), %rbx
    00000baa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2537:
    00000bb0: 	movq	0x18(%rsp), %rax
    00000bb5: 	xorl	%edx, %edx
    00000bb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2535:
    00000bc0: 	movq	(%rax), %rcx
    00000bc3: 	addq	$0x8, %rax
    00000bc7: 	imulq	%rbx, %rcx
    00000bcb: 	addq	%rcx, %rdx
    00000bce: 	cmpq	%rax, %r15
    00000bd1: 	jne	.Ltmp2535 # Offset: 3025
    00000bd3: 	cvttsd2si	init_value(%rip), %rax
    00000bdc: 	imulq	%rbx, %rax
    00000be0: 	imulq	$0x1f40, %rax, %rax
    00000be7: 	cmpq	%rax, %rdx
    00000bea: 	je	.Ltmp2536 # Offset: 3050
    00000bec: 	movl	current_test(%rip), %edx
    00000bf2: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000bf9: 	movl	$0x1, %edi
    00000bfe: 	xorl	%eax, %eax
    00000c00: 	callq	__printf_chk@PLT # Offset: 3072
    00000c05: 	movl	iterations(%rip), %esi
.Ltmp2536:
    00000c0b: 	addl	$0x1, %r14d
    00000c0f: 	cmpl	%esi, %r14d
    00000c12: 	jl	.Ltmp2537 # Offset: 3090
.Ltmp2534:
    00000c14: 	movq	0x60(%rsp), %rsi
    00000c19: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c20: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3104
    00000c25: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c2c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c33: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c3a: 	je	.Ltmp2538 # Offset: 3130
.Ltmp2692:
    00000c40: 	movq	-0x20(%rax), %r14
    00000c44: 	callq	clock@PLT # Offset: 3140
    00000c49: 	pxor	%xmm0, %xmm0
    00000c4d: 	movq	%rax, end_time(%rip)
    00000c54: 	movq	%r14, %rdi
    00000c57: 	subq	start_time(%rip), %rax
    00000c5e: 	cvtsi2sd	%rax, %xmm0
    00000c63: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000c6b: 	callq	_Z13record_resultdPKc # Offset: 3179
    00000c70: 	movq	0x180(%rsp), %rdi
    00000c78: 	cmpq	0x68(%rsp), %rdi
    00000c7d: 	je	.Ltmp2539 # Offset: 3197
    00000c7f: 	movq	0x190(%rsp), %rax
    00000c87: 	leaq	0x1(%rax), %rsi
    00000c8b: 	callq	_ZdlPvm@PLT # Offset: 3211
.Ltmp2539:
    00000c90: 	movq	0x58(%rsp), %rsi
    00000c95: 	movq	0x60(%rsp), %rdi
    00000c9a: 	leaq	DATAat0x3d600(%rip), %rdx
    00000ca1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3233
    00000ca6: 	callq	clock@PLT # Offset: 3238
    00000cab: 	movl	iterations(%rip), %ecx
    00000cb1: 	movq	%rax, start_time(%rip)
    00000cb8: 	testl	%ecx, %ecx
    00000cba: 	jle	.Ltmp2540 # Offset: 3258
    00000cc0: 	movq	%rbp, %rax
    00000cc3: 	xorl	%ebx, %ebx
    00000cc5: 	imulq	%r12, %rax
    00000cc9: 	imulq	%r13, %rax
    00000ccd: 	imulq	0x50(%rsp), %rax
    00000cd3: 	movq	%rax, %xmm2
    00000cd8: 	movq	%rax, %r14
    00000cdb: 	punpcklqdq	%xmm2, %xmm2
    00000cdf: 	movaps	%xmm2, (%rsp)
    00000ce3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2543:
    00000ce8: 	movq	0x18(%rsp), %rax
    00000ced: 	pxor	%xmm0, %xmm0
    00000cf1: 	nopl	(%rax) # Size: 7
.Ltmp2541:
    00000cf8: 	movdqa	(%rsp), %xmm1
    00000cfd: 	paddq	(%rax), %xmm1
    00000d01: 	addq	$0x10, %rax
    00000d05: 	paddq	%xmm1, %xmm0
    00000d09: 	cmpq	%r15, %rax
    00000d0c: 	jne	.Ltmp2541 # Offset: 3340
    00000d0e: 	cvttsd2si	init_value(%rip), %rdx
    00000d17: 	movdqa	%xmm0, %xmm1
    00000d1b: 	psrldq	$0x8, %xmm1
    00000d20: 	paddq	%xmm1, %xmm0
    00000d24: 	movq	%xmm0, %rax
    00000d29: 	addq	%r14, %rdx
    00000d2c: 	imulq	$0x1f40, %rdx, %rdx
    00000d33: 	cmpq	%rax, %rdx
    00000d36: 	je	.Ltmp2542 # Offset: 3382
    00000d38: 	movl	current_test(%rip), %edx
    00000d3e: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000d45: 	movl	$0x1, %edi
    00000d4a: 	xorl	%eax, %eax
    00000d4c: 	callq	__printf_chk@PLT # Offset: 3404
    00000d51: 	movl	iterations(%rip), %ecx
.Ltmp2542:
    00000d57: 	addl	$0x1, %ebx
    00000d5a: 	cmpl	%ecx, %ebx
    00000d5c: 	jl	.Ltmp2543 # Offset: 3420
.Ltmp2540:
    00000d5e: 	movq	0x60(%rsp), %rsi
    00000d63: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d6a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3434
    00000d6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d76: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d7d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d84: 	je	.Ltmp2544 # Offset: 3460
.Ltmp2691:
    00000d8a: 	movq	-0x20(%rax), %r14
    00000d8e: 	callq	clock@PLT # Offset: 3470
    00000d93: 	pxor	%xmm0, %xmm0
    00000d97: 	movq	%rax, end_time(%rip)
    00000d9e: 	movq	%r14, %rdi
    00000da1: 	subq	start_time(%rip), %rax
    00000da8: 	cvtsi2sd	%rax, %xmm0
    00000dad: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000db5: 	callq	_Z13record_resultdPKc # Offset: 3509
    00000dba: 	movq	0x180(%rsp), %rdi
    00000dc2: 	cmpq	0x68(%rsp), %rdi
    00000dc7: 	je	.Ltmp2545 # Offset: 3527
    00000dc9: 	movq	0x190(%rsp), %rax
    00000dd1: 	leaq	0x1(%rax), %rsi
    00000dd5: 	callq	_ZdlPvm@PLT # Offset: 3541
.Ltmp2545:
    00000dda: 	movq	0x58(%rsp), %rsi
    00000ddf: 	movq	0x60(%rsp), %rdi
    00000de4: 	leaq	DATAat0x3d620(%rip), %rdx
    00000deb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3563
    00000df0: 	callq	clock@PLT # Offset: 3568
    00000df5: 	movl	iterations(%rip), %esi
    00000dfb: 	xorl	%ebx, %ebx
    00000dfd: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000e04: 	movq	%rax, start_time(%rip)
    00000e0b: 	testl	%esi, %esi
    00000e0d: 	jle	.Ltmp2546 # Offset: 3597
    00000e0f: 	nop # Size: 1
.Ltmp2549:
    00000e10: 	movq	0x18(%rsp), %rdx
    00000e15: 	movq	0x50(%rsp), %rdi
    00000e1a: 	xorl	%ecx, %ecx
    00000e1c: 	nopl	(%rax) # Size: 4
.Ltmp2547:
    00000e20: 	movq	(%rdx), %rax
    00000e23: 	addq	$0x8, %rdx
    00000e27: 	imulq	%rbp, %rax
    00000e2b: 	imulq	%r12, %rax
    00000e2f: 	imulq	%r13, %rax
    00000e33: 	imulq	%rdi, %rax
    00000e37: 	addq	%rax, %rcx
    00000e3a: 	cmpq	%rdx, %r15
    00000e3d: 	jne	.Ltmp2547 # Offset: 3645
    00000e3f: 	cvttsd2si	init_value(%rip), %rax
    00000e48: 	imulq	%rbp, %rax
    00000e4c: 	imulq	%r12, %rax
    00000e50: 	imulq	%r13, %rax
    00000e54: 	imulq	0x50(%rsp), %rax
    00000e5a: 	imulq	$0x1f40, %rax, %rax
    00000e61: 	cmpq	%rax, %rcx
    00000e64: 	je	.Ltmp2548 # Offset: 3684
    00000e66: 	movl	current_test(%rip), %edx
    00000e6c: 	movq	%r14, %rsi
    00000e6f: 	movl	$0x1, %edi
    00000e74: 	xorl	%eax, %eax
    00000e76: 	callq	__printf_chk@PLT # Offset: 3702
    00000e7b: 	movl	iterations(%rip), %esi
.Ltmp2548:
    00000e81: 	addl	$0x1, %ebx
    00000e84: 	cmpl	%esi, %ebx
    00000e86: 	jl	.Ltmp2549 # Offset: 3718
.Ltmp2546:
    00000e88: 	movq	0x60(%rsp), %rsi
    00000e8d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e94: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3732
    00000e99: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ea0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ea7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eae: 	je	.Ltmp2550 # Offset: 3758
.Ltmp2690:
    00000eb4: 	movq	-0x20(%rax), %r14
    00000eb8: 	callq	clock@PLT # Offset: 3768
    00000ebd: 	pxor	%xmm0, %xmm0
    00000ec1: 	movq	%rax, end_time(%rip)
    00000ec8: 	movq	%r14, %rdi
    00000ecb: 	subq	start_time(%rip), %rax
    00000ed2: 	cvtsi2sd	%rax, %xmm0
    00000ed7: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000edf: 	callq	_Z13record_resultdPKc # Offset: 3807
    00000ee4: 	movq	0x180(%rsp), %rdi
    00000eec: 	cmpq	0x68(%rsp), %rdi
    00000ef1: 	je	.Ltmp2551 # Offset: 3825
    00000ef3: 	movq	0x190(%rsp), %rax
    00000efb: 	leaq	0x1(%rax), %rsi
    00000eff: 	callq	_ZdlPvm@PLT # Offset: 3839
.Ltmp2551:
    00000f04: 	movq	0x58(%rsp), %rsi
    00000f09: 	movq	0x60(%rsp), %rdi
    00000f0e: 	leaq	DATAat0x3d347(%rip), %rdx
    00000f15: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3861
    00000f1a: 	callq	clock@PLT # Offset: 3866
    00000f1f: 	movl	iterations(%rip), %edi
    00000f25: 	xorl	%ebx, %ebx
    00000f27: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000f2e: 	movq	%rax, start_time(%rip)
    00000f35: 	testl	%edi, %edi
    00000f37: 	jle	.Ltmp2552 # Offset: 3895
    00000f39: 	nopl	(%rax) # Size: 7
.Ltmp2555:
    00000f40: 	movq	0x18(%rsp), %rcx
    00000f45: 	xorl	%esi, %esi
    00000f47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2553:
    00000f50: 	movq	(%rcx), %rax
    00000f53: 	addq	$0x8, %rcx
    00000f57: 	cqto
    00000f59: 	idivq	%rbp
    00000f5c: 	addq	%rax, %rsi
    00000f5f: 	cmpq	%r15, %rcx
    00000f62: 	jne	.Ltmp2553 # Offset: 3938
    00000f64: 	cvttsd2si	init_value(%rip), %rax
    00000f6d: 	cqto
    00000f6f: 	idivq	%rbp
    00000f72: 	imulq	$0x1f40, %rax, %rax
    00000f79: 	cmpq	%rax, %rsi
    00000f7c: 	je	.Ltmp2554 # Offset: 3964
    00000f7e: 	movl	current_test(%rip), %edx
    00000f84: 	movq	%r14, %rsi
    00000f87: 	movl	$0x1, %edi
    00000f8c: 	xorl	%eax, %eax
    00000f8e: 	callq	__printf_chk@PLT # Offset: 3982
    00000f93: 	movl	iterations(%rip), %edi
.Ltmp2554:
    00000f99: 	addl	$0x1, %ebx
    00000f9c: 	cmpl	%edi, %ebx
    00000f9e: 	jl	.Ltmp2555 # Offset: 3998
.Ltmp2552:
    00000fa0: 	movq	0x60(%rsp), %rsi
    00000fa5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000fac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4012
    00000fb1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fb8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fbf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fc6: 	je	.Ltmp2556 # Offset: 4038
.Ltmp2689:
    00000fcc: 	movq	-0x20(%rax), %r14
    00000fd0: 	callq	clock@PLT # Offset: 4048
    00000fd5: 	pxor	%xmm0, %xmm0
    00000fd9: 	movq	%rax, end_time(%rip)
    00000fe0: 	movq	%r14, %rdi
    00000fe3: 	subq	start_time(%rip), %rax
    00000fea: 	cvtsi2sd	%rax, %xmm0
    00000fef: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ff7: 	callq	_Z13record_resultdPKc # Offset: 4087
    00000ffc: 	movq	0x180(%rsp), %rdi
    00001004: 	cmpq	0x68(%rsp), %rdi
    00001009: 	je	.Ltmp2557 # Offset: 4105
    0000100b: 	movq	0x190(%rsp), %rax
    00001013: 	leaq	0x1(%rax), %rsi
    00001017: 	callq	_ZdlPvm@PLT # Offset: 4119
.Ltmp2557:
    0000101c: 	movq	0x58(%rsp), %rsi
    00001021: 	movq	0x60(%rsp), %rdi
    00001026: 	leaq	DATAat0x3d358(%rip), %rdx
    0000102d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4141
    00001032: 	callq	clock@PLT # Offset: 4146
    00001037: 	movl	iterations(%rip), %edi
    0000103d: 	xorl	%ebx, %ebx
    0000103f: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001046: 	movq	%rax, start_time(%rip)
    0000104d: 	testl	%edi, %edi
    0000104f: 	jle	.Ltmp2558 # Offset: 4175
    00001055: 	nopl	(%rax) # Size: 3
.Ltmp2561:
    00001058: 	movq	0x18(%rsp), %rcx
    0000105d: 	movq	0x50(%rsp), %r8
    00001062: 	xorl	%esi, %esi
    00001064: 	nopl	(%rax) # Size: 4
.Ltmp2559:
    00001068: 	movq	(%rcx), %rax
    0000106b: 	addq	$0x8, %rcx
    0000106f: 	cqto
    00001071: 	idivq	%rbp
    00001074: 	cqto
    00001076: 	idivq	%r12
    00001079: 	cqto
    0000107b: 	idivq	%r13
    0000107e: 	cqto
    00001080: 	idivq	%r8
    00001083: 	addq	%rax, %rsi
    00001086: 	cmpq	%rcx, %r15
    00001089: 	jne	.Ltmp2559 # Offset: 4233
    0000108b: 	cvttsd2si	init_value(%rip), %rax
    00001094: 	cqto
    00001096: 	idivq	%rbp
    00001099: 	cqto
    0000109b: 	idivq	%r12
    0000109e: 	cqto
    000010a0: 	idivq	%r13
    000010a3: 	cqto
    000010a5: 	idivq	0x50(%rsp)
    000010aa: 	imulq	$0x1f40, %rax, %rax
    000010b1: 	cmpq	%rax, %rsi
    000010b4: 	je	.Ltmp2560 # Offset: 4276
    000010b6: 	movl	current_test(%rip), %edx
    000010bc: 	movq	%r14, %rsi
    000010bf: 	movl	$0x1, %edi
    000010c4: 	xorl	%eax, %eax
    000010c6: 	callq	__printf_chk@PLT # Offset: 4294
    000010cb: 	movl	iterations(%rip), %edi
.Ltmp2560:
    000010d1: 	addl	$0x1, %ebx
    000010d4: 	cmpl	%edi, %ebx
    000010d6: 	jl	.Ltmp2561 # Offset: 4310
.Ltmp2558:
    000010d8: 	movq	0x60(%rsp), %rsi
    000010dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000010e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4324
    000010e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010f0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010f7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010fe: 	je	.Ltmp2562 # Offset: 4350
.Ltmp2688:
    00001104: 	movq	-0x20(%rax), %r14
    00001108: 	callq	clock@PLT # Offset: 4360
    0000110d: 	pxor	%xmm0, %xmm0
    00001111: 	movq	%rax, end_time(%rip)
    00001118: 	movq	%r14, %rdi
    0000111b: 	subq	start_time(%rip), %rax
    00001122: 	cvtsi2sd	%rax, %xmm0
    00001127: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000112f: 	callq	_Z13record_resultdPKc # Offset: 4399
    00001134: 	movq	0x180(%rsp), %rdi
    0000113c: 	cmpq	0x68(%rsp), %rdi
    00001141: 	je	.Ltmp2563 # Offset: 4417
    00001143: 	movq	0x190(%rsp), %rax
    0000114b: 	leaq	0x1(%rax), %rsi
    0000114f: 	callq	_ZdlPvm@PLT # Offset: 4431
.Ltmp2563:
    00001154: 	movq	0x58(%rsp), %rsi
    00001159: 	movq	0x60(%rsp), %rdi
    0000115e: 	leaq	DATAat0x3d373(%rip), %rdx
    00001165: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4453
    0000116a: 	callq	clock@PLT # Offset: 4458
    0000116f: 	movl	iterations(%rip), %ecx
    00001175: 	movq	%rax, start_time(%rip)
    0000117c: 	testl	%ecx, %ecx
    0000117e: 	jle	.Ltmp2564 # Offset: 4478
    00001184: 	movq	%rbp, %rax
    00001187: 	xorl	%ebx, %ebx
    00001189: 	cqto
    0000118b: 	idivq	%r12
    0000118e: 	cqto
    00001190: 	idivq	%r13
    00001193: 	cqto
    00001195: 	idivq	0x50(%rsp)
    0000119a: 	movq	%rax, %xmm7
    0000119f: 	movq	%rax, %r14
    000011a2: 	punpcklqdq	%xmm7, %xmm7
    000011a6: 	movaps	%xmm7, (%rsp)
    000011aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2567:
    000011b0: 	movq	0x18(%rsp), %rax
    000011b5: 	pxor	%xmm0, %xmm0
    000011b9: 	nopl	(%rax) # Size: 7
.Ltmp2565:
    000011c0: 	movdqa	(%rsp), %xmm1
    000011c5: 	paddq	(%rax), %xmm1
    000011c9: 	addq	$0x10, %rax
    000011cd: 	paddq	%xmm1, %xmm0
    000011d1: 	cmpq	%r15, %rax
    000011d4: 	jne	.Ltmp2565 # Offset: 4564
    000011d6: 	cvttsd2si	init_value(%rip), %rdx
    000011df: 	movdqa	%xmm0, %xmm1
    000011e3: 	psrldq	$0x8, %xmm1
    000011e8: 	paddq	%xmm1, %xmm0
    000011ec: 	movq	%xmm0, %rax
    000011f1: 	addq	%r14, %rdx
    000011f4: 	imulq	$0x1f40, %rdx, %rdx
    000011fb: 	cmpq	%rax, %rdx
    000011fe: 	je	.Ltmp2566 # Offset: 4606
    00001200: 	movl	current_test(%rip), %edx
    00001206: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000120d: 	movl	$0x1, %edi
    00001212: 	xorl	%eax, %eax
    00001214: 	callq	__printf_chk@PLT # Offset: 4628
    00001219: 	movl	iterations(%rip), %ecx
.Ltmp2566:
    0000121f: 	addl	$0x1, %ebx
    00001222: 	cmpl	%ecx, %ebx
    00001224: 	jl	.Ltmp2567 # Offset: 4644
.Ltmp2564:
    00001226: 	movq	0x60(%rsp), %rsi
    0000122b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001232: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4658
    00001237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000123e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001245: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000124c: 	je	.Ltmp2568 # Offset: 4684
.Ltmp2687:
    00001252: 	movq	-0x20(%rax), %r14
    00001256: 	callq	clock@PLT # Offset: 4694
    0000125b: 	pxor	%xmm0, %xmm0
    0000125f: 	movq	%rax, end_time(%rip)
    00001266: 	movq	%r14, %rdi
    00001269: 	subq	start_time(%rip), %rax
    00001270: 	cvtsi2sd	%rax, %xmm0
    00001275: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000127d: 	callq	_Z13record_resultdPKc # Offset: 4733
    00001282: 	movq	0x180(%rsp), %rdi
    0000128a: 	cmpq	0x68(%rsp), %rdi
    0000128f: 	je	.Ltmp2569 # Offset: 4751
    00001291: 	movq	0x190(%rsp), %rax
    00001299: 	leaq	0x1(%rax), %rsi
    0000129d: 	callq	_ZdlPvm@PLT # Offset: 4765
.Ltmp2569:
    000012a2: 	movq	0x58(%rsp), %rsi
    000012a7: 	movq	0x60(%rsp), %rdi
    000012ac: 	leaq	DATAat0x3d38f(%rip), %rdx
    000012b3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4787
    000012b8: 	callq	clock@PLT # Offset: 4792
    000012bd: 	movl	iterations(%rip), %ecx
    000012c3: 	movq	%rax, start_time(%rip)
    000012ca: 	testl	%ecx, %ecx
    000012cc: 	jle	.Ltmp2570 # Offset: 4812
    000012d2: 	movq	%r12, %rax
    000012d5: 	movq	%rbp, %r14
    000012d8: 	xorl	%ebx, %ebx
    000012da: 	imulq	%r13, %rax
    000012de: 	cqto
    000012e0: 	idivq	0x50(%rsp)
    000012e5: 	subq	%rax, %r14
    000012e8: 	movq	%r14, %xmm2
    000012ed: 	punpcklqdq	%xmm2, %xmm2
    000012f1: 	movaps	%xmm2, (%rsp)
    000012f5: 	nopl	(%rax) # Size: 3
.Ltmp2573:
    000012f8: 	movq	0x18(%rsp), %rax
    000012fd: 	pxor	%xmm0, %xmm0
    00001301: 	nopl	(%rax) # Size: 7
.Ltmp2571:
    00001308: 	movdqa	(%rsp), %xmm1
    0000130d: 	paddq	(%rax), %xmm1
    00001311: 	addq	$0x10, %rax
    00001315: 	paddq	%xmm1, %xmm0
    00001319: 	cmpq	%r15, %rax
    0000131c: 	jne	.Ltmp2571 # Offset: 4892
    0000131e: 	cvttsd2si	init_value(%rip), %rdx
    00001327: 	movdqa	%xmm0, %xmm1
    0000132b: 	psrldq	$0x8, %xmm1
    00001330: 	paddq	%xmm1, %xmm0
    00001334: 	movq	%xmm0, %rax
    00001339: 	addq	%r14, %rdx
    0000133c: 	imulq	$0x1f40, %rdx, %rdx
    00001343: 	cmpq	%rax, %rdx
    00001346: 	je	.Ltmp2572 # Offset: 4934
    00001348: 	movl	current_test(%rip), %edx
    0000134e: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001355: 	movl	$0x1, %edi
    0000135a: 	xorl	%eax, %eax
    0000135c: 	callq	__printf_chk@PLT # Offset: 4956
    00001361: 	movl	iterations(%rip), %ecx
.Ltmp2572:
    00001367: 	addl	$0x1, %ebx
    0000136a: 	cmpl	%ecx, %ebx
    0000136c: 	jl	.Ltmp2573 # Offset: 4972
.Ltmp2570:
    0000136e: 	movq	0x60(%rsp), %rsi
    00001373: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000137a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4986
    0000137f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001386: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000138d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001394: 	je	.Ltmp2574 # Offset: 5012
.Ltmp2686:
    0000139a: 	movq	-0x20(%rax), %r14
    0000139e: 	callq	clock@PLT # Offset: 5022
    000013a3: 	pxor	%xmm0, %xmm0
    000013a7: 	movq	%rax, end_time(%rip)
    000013ae: 	movq	%r14, %rdi
    000013b1: 	subq	start_time(%rip), %rax
    000013b8: 	cvtsi2sd	%rax, %xmm0
    000013bd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000013c5: 	callq	_Z13record_resultdPKc # Offset: 5061
    000013ca: 	movq	0x180(%rsp), %rdi
    000013d2: 	cmpq	0x68(%rsp), %rdi
    000013d7: 	je	.Ltmp2575 # Offset: 5079
    000013d9: 	movq	0x190(%rsp), %rax
    000013e1: 	leaq	0x1(%rax), %rsi
    000013e5: 	callq	_ZdlPvm@PLT # Offset: 5093
.Ltmp2575:
    000013ea: 	movq	0x58(%rsp), %rsi
    000013ef: 	movq	0x60(%rsp), %rdi
    000013f4: 	leaq	DATAat0x3d3a8(%rip), %rdx
    000013fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5115
    00001400: 	callq	clock@PLT # Offset: 5120
    00001405: 	movl	iterations(%rip), %ecx
    0000140b: 	movq	%rax, start_time(%rip)
    00001412: 	testl	%ecx, %ecx
    00001414: 	jle	.Ltmp2576 # Offset: 5140
    0000141a: 	movq	%r12, %rax
    0000141d: 	movq	%rbp, %xmm7
    00001422: 	xorl	%ebx, %ebx
    00001424: 	imulq	%r13, %rax
    00001428: 	punpcklqdq	%xmm7, %xmm7
    0000142c: 	movaps	%xmm7, (%rsp)
    00001430: 	cqto
    00001432: 	idivq	0x50(%rsp)
    00001437: 	movq	%rax, %xmm2
    0000143c: 	movq	%rax, %r14
    0000143f: 	punpcklqdq	%xmm2, %xmm2
    00001443: 	movaps	%xmm2, 0x20(%rsp)
    00001448: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2579:
    00001450: 	movq	0x18(%rsp), %rax
    00001455: 	pxor	%xmm1, %xmm1
    00001459: 	nopl	(%rax) # Size: 7
.Ltmp2577:
    00001460: 	movdqa	(%rsp), %xmm0
    00001465: 	paddq	(%rax), %xmm0
    00001469: 	addq	$0x10, %rax
    0000146d: 	psubq	0x20(%rsp), %xmm0
    00001473: 	paddq	%xmm0, %xmm1
    00001477: 	cmpq	%r15, %rax
    0000147a: 	jne	.Ltmp2577 # Offset: 5242
    0000147c: 	cvttsd2si	init_value(%rip), %rdx
    00001485: 	movdqa	%xmm1, %xmm0
    00001489: 	psrldq	$0x8, %xmm0
    0000148e: 	paddq	%xmm0, %xmm1
    00001492: 	movq	%xmm1, %rax
    00001497: 	addq	%rbp, %rdx
    0000149a: 	subq	%r14, %rdx
    0000149d: 	imulq	$0x1f40, %rdx, %rdx
    000014a4: 	cmpq	%rax, %rdx
    000014a7: 	je	.Ltmp2578 # Offset: 5287
    000014a9: 	movl	current_test(%rip), %edx
    000014af: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000014b6: 	movl	$0x1, %edi
    000014bb: 	xorl	%eax, %eax
    000014bd: 	callq	__printf_chk@PLT # Offset: 5309
    000014c2: 	movl	iterations(%rip), %ecx
.Ltmp2578:
    000014c8: 	addl	$0x1, %ebx
    000014cb: 	cmpl	%ecx, %ebx
    000014cd: 	jl	.Ltmp2579 # Offset: 5325
.Ltmp2576:
    000014cf: 	movq	0x60(%rsp), %rsi
    000014d4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014db: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5339
    000014e0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014e7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014ee: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014f5: 	je	.Ltmp2580 # Offset: 5365
.Ltmp2685:
    000014fb: 	movq	-0x20(%rax), %r14
    000014ff: 	callq	clock@PLT # Offset: 5375
    00001504: 	pxor	%xmm0, %xmm0
    00001508: 	movq	%rax, end_time(%rip)
    0000150f: 	movq	%r14, %rdi
    00001512: 	subq	start_time(%rip), %rax
    00001519: 	cvtsi2sd	%rax, %xmm0
    0000151e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001526: 	callq	_Z13record_resultdPKc # Offset: 5414
    0000152b: 	movq	0x180(%rsp), %rdi
    00001533: 	cmpq	0x68(%rsp), %rdi
    00001538: 	je	.Ltmp2581 # Offset: 5432
    0000153a: 	movq	0x190(%rsp), %rax
    00001542: 	leaq	0x1(%rax), %rsi
    00001546: 	callq	_ZdlPvm@PLT # Offset: 5446
.Ltmp2581:
    0000154b: 	movq	0x18(%rsp), %rbx
    00001550: 	movq	0x50(%rsp), %r8
    00001555: 	movq	%r13, %rcx
    00001558: 	movq	%r12, %rdx
    0000155b: 	movq	%rbp, %rsi
    0000155e: 	movq	%rbx, %rdi
    00001561: 	callq	_Z20TestLoopsIntegerOnlyIlENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 5473
    00001566: 	movq	0x58(%rsp), %rsi
    0000156b: 	leaq	0x120(%rsp), %rdi
    00001573: 	leaq	DATAat0x3d3c2(%rip), %rdx
    0000157a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5498
    0000157f: 	movl	iterations(%rip), %edx
    00001585: 	xorl	%r8d, %r8d
    00001588: 	xorl	%ecx, %ecx
    0000158a: 	movl	$0x1f40, %esi
    0000158f: 	movq	0x120(%rsp), %rdi
    00001597: 	callq	_Z9summarizePKciiii # Offset: 5527
    0000159c: 	movsd	init_value(%rip), %xmm1
    000015a4: 	cvttsd2si	%xmm1, %rax
    000015a9: 	movq	%rax, %xmm0
    000015ae: 	movq	%rbx, %rax
    000015b1: 	punpcklqdq	%xmm0, %xmm0
    000015b5: 	nopl	(%rax) # Size: 3
.Ltmp2582:
    000015b8: 	movaps	%xmm0, (%rax)
    000015bb: 	addq	$0x10, %rax
    000015bf: 	cmpq	%r15, %rax
    000015c2: 	jne	.Ltmp2582 # Offset: 5570
    000015c4: 	addsd	DATAat0x3d700(%rip), %xmm1
    000015cc: 	leaq	0x160(%rsp), %rbp
    000015d4: 	movq	0x58(%rsp), %rsi
    000015d9: 	movaps	%xmm0, 0x90(%rsp)
    000015e1: 	movq	%rbp, %rdi
    000015e4: 	movaps	%xmm0, 0xc0(%rsp)
    000015ec: 	movups	%xmm0, 0xe8(%rsp)
    000015f4: 	cvttsd2si	%xmm1, %eax
    000015f8: 	movslq	%eax, %r13
    000015fb: 	cltd
    000015fc: 	imulq	$0x51eb851f, %r13, %r13
    00001603: 	sarq	$0x24, %r13
    00001607: 	subl	%edx, %r13d
    0000160a: 	imull	$0x32, %r13d, %edx
    0000160e: 	subl	%edx, %eax
    00001610: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001617: 	movslq	%eax, %r13
    0000161a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5658
    0000161f: 	callq	clock@PLT # Offset: 5663
    00001624: 	movl	iterations(%rip), %ecx
    0000162a: 	movq	%rax, start_time(%rip)
    00001631: 	testl	%ecx, %ecx
    00001633: 	jle	.Ltmp2583 # Offset: 5683
    00001639: 	movq	0x60(%rsp), %rdi
    0000163e: 	movslq	%r13d, %rax
    00001641: 	xorl	%ebx, %ebx
    00001643: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000164a: 	leaq	(%rdi,%rax,8), %r12
    0000164e: 	nop # Size: 2
.Ltmp2586:
    00001650: 	cvttsd2si	init_value(%rip), %rdx
    00001659: 	movq	0x18(%rsp), %rax
    0000165e: 	pxor	%xmm0, %xmm0
    00001662: 	imulq	$0x1f40, %rdx, %rdx
    00001669: 	nopl	(%rax) # Size: 7
.Ltmp2584:
    00001670: 	paddq	(%rax), %xmm0
    00001674: 	addq	$0x10, %rax
    00001678: 	cmpq	%rax, %r15
    0000167b: 	jne	.Ltmp2584 # Offset: 5755
    0000167d: 	movdqa	%xmm0, %xmm1
    00001681: 	psrldq	$0x8, %xmm1
    00001686: 	paddq	%xmm1, %xmm0
    0000168a: 	movq	%xmm0, %rax
    0000168f: 	movq	%xmm0, (%r12)
    00001695: 	cmpq	%rax, %rdx
    00001698: 	je	.Ltmp2585 # Offset: 5784
    0000169a: 	movq	0x160(%rsp), %rdx
    000016a2: 	movq	%r14, %rsi
    000016a5: 	movl	$0x1, %edi
    000016aa: 	xorl	%eax, %eax
    000016ac: 	callq	__printf_chk@PLT # Offset: 5804
    000016b1: 	movl	iterations(%rip), %ecx
.Ltmp2585:
    000016b7: 	addl	$0x1, %ebx
    000016ba: 	cmpl	%ecx, %ebx
    000016bc: 	jl	.Ltmp2586 # Offset: 5820
.Ltmp2583:
    000016be: 	movq	%rbp, %rsi
    000016c1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016c8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5832
    000016cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016d4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016e2: 	je	.Ltmp2587 # Offset: 5858
.Ltmp2684:
    000016e8: 	movq	-0x20(%rax), %r12
    000016ec: 	callq	clock@PLT # Offset: 5868
    000016f1: 	pxor	%xmm0, %xmm0
    000016f5: 	movq	%rax, end_time(%rip)
    000016fc: 	movq	%r12, %rdi
    000016ff: 	subq	start_time(%rip), %rax
    00001706: 	cvtsi2sd	%rax, %xmm0
    0000170b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001713: 	callq	_Z13record_resultdPKc # Offset: 5907
    00001718: 	movq	0x160(%rsp), %rdi
    00001720: 	leaq	0x170(%rsp), %rbx
    00001728: 	cmpq	%rbx, %rdi
    0000172b: 	je	.Ltmp2588 # Offset: 5931
    0000172d: 	movq	0x170(%rsp), %rax
    00001735: 	leaq	0x1(%rax), %rsi
    00001739: 	callq	_ZdlPvm@PLT # Offset: 5945
.Ltmp2588:
    0000173e: 	movq	0x58(%rsp), %rsi
    00001743: 	leaq	DATAat0x3d3eb(%rip), %rdx
    0000174a: 	movq	%rbp, %rdi
    0000174d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5965
    00001752: 	callq	clock@PLT # Offset: 5970
    00001757: 	movl	iterations(%rip), %ecx
    0000175d: 	movq	%rax, start_time(%rip)
    00001764: 	testl	%ecx, %ecx
    00001766: 	jle	.Ltmp2589 # Offset: 5990
    0000176c: 	movq	0x60(%rsp), %rdi
    00001771: 	movslq	%r13d, %rax
    00001774: 	xorl	%r12d, %r12d
    00001777: 	leaq	(%rdi,%rax,8), %r14
    0000177b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2592:
    00001780: 	cvttsd2si	init_value(%rip), %rdx
    00001789: 	movq	0x18(%rsp), %rax
    0000178e: 	pxor	%xmm0, %xmm0
    00001792: 	imulq	$0x1f40, %rdx, %rdx
    00001799: 	nopl	(%rax) # Size: 7
.Ltmp2590:
    000017a0: 	paddq	(%rax), %xmm0
    000017a4: 	addq	$0x10, %rax
    000017a8: 	cmpq	%r15, %rax
    000017ab: 	jne	.Ltmp2590 # Offset: 6059
    000017ad: 	movdqa	%xmm0, %xmm1
    000017b1: 	psrldq	$0x8, %xmm1
    000017b6: 	paddq	%xmm1, %xmm0
    000017ba: 	movq	%xmm0, %rax
    000017bf: 	movq	%xmm0, (%r14)
    000017c4: 	cmpq	%rax, %rdx
    000017c7: 	je	.Ltmp2591 # Offset: 6087
    000017c9: 	movq	0x160(%rsp), %rdx
    000017d1: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000017d8: 	movl	$0x1, %edi
    000017dd: 	xorl	%eax, %eax
    000017df: 	callq	__printf_chk@PLT # Offset: 6111
    000017e4: 	movl	iterations(%rip), %ecx
.Ltmp2591:
    000017ea: 	addl	$0x1, %r12d
    000017ee: 	cmpl	%ecx, %r12d
    000017f1: 	jl	.Ltmp2592 # Offset: 6129
.Ltmp2589:
    000017f3: 	movq	%rbp, %rsi
    000017f6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6141
    00001802: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001809: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001810: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001817: 	je	.Ltmp2593 # Offset: 6167
.Ltmp2683:
    0000181d: 	movq	-0x20(%rax), %r12
    00001821: 	callq	clock@PLT # Offset: 6177
    00001826: 	pxor	%xmm0, %xmm0
    0000182a: 	movq	%rax, end_time(%rip)
    00001831: 	movq	%r12, %rdi
    00001834: 	subq	start_time(%rip), %rax
    0000183b: 	cvtsi2sd	%rax, %xmm0
    00001840: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001848: 	callq	_Z13record_resultdPKc # Offset: 6216
    0000184d: 	movq	0x160(%rsp), %rdi
    00001855: 	cmpq	%rbx, %rdi
    00001858: 	je	.Ltmp2594 # Offset: 6232
    0000185a: 	movq	0x170(%rsp), %rax
    00001862: 	leaq	0x1(%rax), %rsi
    00001866: 	callq	_ZdlPvm@PLT # Offset: 6246
.Ltmp2594:
    0000186b: 	movq	0x58(%rsp), %rsi
    00001870: 	leaq	DATAat0x3d400(%rip), %rdx
    00001877: 	movq	%rbp, %rdi
    0000187a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6266
    0000187f: 	callq	clock@PLT # Offset: 6271
    00001884: 	movl	iterations(%rip), %ecx
    0000188a: 	xorl	%r12d, %r12d
    0000188d: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001894: 	movq	%rax, start_time(%rip)
    0000189b: 	testl	%ecx, %ecx
    0000189d: 	jle	.Ltmp2595 # Offset: 6301
    0000189f: 	nop # Size: 1
.Ltmp2598:
    000018a0: 	cvttsd2si	init_value(%rip), %rdx
    000018a9: 	movq	0x18(%rsp), %rax
    000018ae: 	pxor	%xmm0, %xmm0
    000018b2: 	imulq	$0x1f40, %rdx, %rdx
    000018b9: 	nopl	(%rax) # Size: 7
.Ltmp2596:
    000018c0: 	paddq	(%rax), %xmm0
    000018c4: 	addq	$0x10, %rax
    000018c8: 	cmpq	%r15, %rax
    000018cb: 	jne	.Ltmp2596 # Offset: 6347
    000018cd: 	movdqa	%xmm0, %xmm1
    000018d1: 	psrldq	$0x8, %xmm1
    000018d6: 	paddq	%xmm1, %xmm0
    000018da: 	movq	%xmm0, 0xc0(%rsp)
    000018e3: 	movq	%xmm0, %rax
    000018e8: 	cmpq	%rax, %rdx
    000018eb: 	je	.Ltmp2597 # Offset: 6379
    000018ed: 	movq	0x160(%rsp), %rdx
    000018f5: 	movq	%r14, %rsi
    000018f8: 	movl	$0x1, %edi
    000018fd: 	xorl	%eax, %eax
    000018ff: 	callq	__printf_chk@PLT # Offset: 6399
    00001904: 	movl	iterations(%rip), %ecx
.Ltmp2597:
    0000190a: 	addl	$0x1, %r12d
    0000190e: 	cmpl	%ecx, %r12d
    00001911: 	jl	.Ltmp2598 # Offset: 6417
.Ltmp2595:
    00001913: 	movq	%rbp, %rsi
    00001916: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000191d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6429
    00001922: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001929: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001930: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001937: 	je	.Ltmp2599 # Offset: 6455
.Ltmp2682:
    0000193d: 	movq	-0x20(%rax), %r12
    00001941: 	callq	clock@PLT # Offset: 6465
    00001946: 	pxor	%xmm0, %xmm0
    0000194a: 	movq	%rax, end_time(%rip)
    00001951: 	movq	%r12, %rdi
    00001954: 	subq	start_time(%rip), %rax
    0000195b: 	cvtsi2sd	%rax, %xmm0
    00001960: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001968: 	callq	_Z13record_resultdPKc # Offset: 6504
    0000196d: 	movq	0x160(%rsp), %rdi
    00001975: 	cmpq	%rbx, %rdi
    00001978: 	je	.Ltmp2600 # Offset: 6520
    0000197a: 	movq	0x170(%rsp), %rax
    00001982: 	leaq	0x1(%rax), %rsi
    00001986: 	callq	_ZdlPvm@PLT # Offset: 6534
.Ltmp2600:
    0000198b: 	movq	0x58(%rsp), %rsi
    00001990: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001997: 	movq	%rbp, %rdi
    0000199a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6554
    0000199f: 	callq	clock@PLT # Offset: 6559
    000019a4: 	movl	iterations(%rip), %ecx
    000019aa: 	xorl	%r12d, %r12d
    000019ad: 	leaq	DATAat0x3d1c8(%rip), %r14
    000019b4: 	movq	%rax, start_time(%rip)
    000019bb: 	testl	%ecx, %ecx
    000019bd: 	jle	.Ltmp2601 # Offset: 6589
    000019bf: 	nop # Size: 1
.Ltmp2604:
    000019c0: 	cvttsd2si	init_value(%rip), %rdx
    000019c9: 	movq	0x18(%rsp), %rax
    000019ce: 	pxor	%xmm0, %xmm0
    000019d2: 	imulq	$0x1f40, %rdx, %rdx
    000019d9: 	nopl	(%rax) # Size: 7
.Ltmp2602:
    000019e0: 	paddq	(%rax), %xmm0
    000019e4: 	addq	$0x10, %rax
    000019e8: 	cmpq	%rax, %r15
    000019eb: 	jne	.Ltmp2602 # Offset: 6635
    000019ed: 	movdqa	%xmm0, %xmm1
    000019f1: 	psrldq	$0x8, %xmm1
    000019f6: 	paddq	%xmm1, %xmm0
    000019fa: 	movq	%xmm0, 0xc0(%rsp)
    00001a03: 	movq	%xmm0, %rax
    00001a08: 	cmpq	%rax, %rdx
    00001a0b: 	je	.Ltmp2603 # Offset: 6667
    00001a0d: 	movq	0x160(%rsp), %rdx
    00001a15: 	movq	%r14, %rsi
    00001a18: 	movl	$0x1, %edi
    00001a1d: 	xorl	%eax, %eax
    00001a1f: 	callq	__printf_chk@PLT # Offset: 6687
    00001a24: 	movl	iterations(%rip), %ecx
.Ltmp2603:
    00001a2a: 	addl	$0x1, %r12d
    00001a2e: 	cmpl	%ecx, %r12d
    00001a31: 	jl	.Ltmp2604 # Offset: 6705
.Ltmp2601:
    00001a33: 	movq	%rbp, %rsi
    00001a36: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a3d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6717
    00001a42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a49: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a50: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a57: 	je	.Ltmp2605 # Offset: 6743
.Ltmp2681:
    00001a5d: 	movq	-0x20(%rax), %r12
    00001a61: 	callq	clock@PLT # Offset: 6753
    00001a66: 	pxor	%xmm0, %xmm0
    00001a6a: 	movq	%rax, end_time(%rip)
    00001a71: 	movq	%r12, %rdi
    00001a74: 	subq	start_time(%rip), %rax
    00001a7b: 	cvtsi2sd	%rax, %xmm0
    00001a80: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001a88: 	callq	_Z13record_resultdPKc # Offset: 6792
    00001a8d: 	movq	0x160(%rsp), %rdi
    00001a95: 	cmpq	%rbx, %rdi
    00001a98: 	je	.Ltmp2606 # Offset: 6808
    00001a9a: 	movq	0x170(%rsp), %rax
    00001aa2: 	leaq	0x1(%rax), %rsi
    00001aa6: 	callq	_ZdlPvm@PLT # Offset: 6822
.Ltmp2606:
    00001aab: 	movq	0x58(%rsp), %rsi
    00001ab0: 	leaq	DATAat0x3d430(%rip), %rdx
    00001ab7: 	movq	%rbp, %rdi
    00001aba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6842
    00001abf: 	movq	0x18(%rsp), %rdi
    00001ac4: 	movq	%rbp, %rcx
    00001ac7: 	movl	%r13d, %edx
    00001aca: 	movl	$0x1f40, %esi
    00001acf: 	callq	_Z23test_array_const_in_optIlEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 6863
    00001ad4: 	movq	0x160(%rsp), %rdi
    00001adc: 	cmpq	%rbx, %rdi
    00001adf: 	je	.Ltmp2607 # Offset: 6879
    00001ae1: 	movq	0x170(%rsp), %rax
    00001ae9: 	leaq	0x1(%rax), %rsi
    00001aed: 	callq	_ZdlPvm@PLT # Offset: 6893
.Ltmp2607:
    00001af2: 	movq	0x58(%rsp), %rsi
    00001af7: 	leaq	DATAat0x3d448(%rip), %rdx
    00001afe: 	movq	%rbp, %rdi
    00001b01: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6913
    00001b06: 	callq	clock@PLT # Offset: 6918
    00001b0b: 	movl	iterations(%rip), %r8d
    00001b12: 	movq	%rax, start_time(%rip)
    00001b19: 	testl	%r8d, %r8d
    00001b1c: 	jle	.Ltmp2608 # Offset: 6940
    00001b1e: 	movq	0x18(%rsp), %rdi
    00001b23: 	movslq	%r13d, %rax
    00001b26: 	xorl	%r12d, %r12d
    00001b29: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001b30: 	leaq	(%rdi,%rax,8), %r14
    00001b34: 	nopl	(%rax) # Size: 4
.Ltmp2667:
    00001b38: 	cvttsd2si	init_value(%rip), %rax
    00001b41: 	cmpq	(%r14), %rax
    00001b44: 	jne	.Ltmp2609 # Offset: 6980
.Ltmp2608:
    00001b4a: 	movq	%rbp, %rsi
    00001b4d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b54: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6996
    00001b59: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b60: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b67: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b6e: 	je	.Ltmp2610 # Offset: 7022
.Ltmp2680:
    00001b74: 	movq	-0x20(%rax), %r12
    00001b78: 	callq	clock@PLT # Offset: 7032
    00001b7d: 	pxor	%xmm0, %xmm0
    00001b81: 	movq	%rax, end_time(%rip)
    00001b88: 	movq	%r12, %rdi
    00001b8b: 	subq	start_time(%rip), %rax
    00001b92: 	cvtsi2sd	%rax, %xmm0
    00001b97: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b9f: 	callq	_Z13record_resultdPKc # Offset: 7071
    00001ba4: 	movq	0x160(%rsp), %rdi
    00001bac: 	cmpq	%rbx, %rdi
    00001baf: 	je	.Ltmp2611 # Offset: 7087
    00001bb1: 	movq	0x170(%rsp), %rax
    00001bb9: 	leaq	0x1(%rax), %rsi
    00001bbd: 	callq	_ZdlPvm@PLT # Offset: 7101
.Ltmp2611:
    00001bc2: 	movq	0x58(%rsp), %rsi
    00001bc7: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001bce: 	movq	%rbp, %rdi
    00001bd1: 	cvttsd2si	init_value(%rip), %r14
    00001bda: 	movq	%r14, 0xc0(%rsp)
    00001be2: 	movq	%r14, 0x90(%rsp)
    00001bea: 	movq	%r14, 0xf0(%rsp)
    00001bf2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7154
    00001bf7: 	movq	0x78(%rsp), %rdi
    00001bfc: 	movq	%rbp, %rdx
    00001bff: 	movl	$0x1f40, %esi
    00001c04: 	callq	_Z24test_struct_const_in_optIl13simple_structIlEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7172
    00001c09: 	movq	0x160(%rsp), %rdi
    00001c11: 	cmpq	%rbx, %rdi
    00001c14: 	je	.Ltmp2612 # Offset: 7188
    00001c16: 	movq	0x170(%rsp), %rax
    00001c1e: 	leaq	0x1(%rax), %rsi
    00001c22: 	callq	_ZdlPvm@PLT # Offset: 7202
.Ltmp2612:
    00001c27: 	movq	0x58(%rsp), %rsi
    00001c2c: 	leaq	DATAat0x3d475(%rip), %rdx
    00001c33: 	movq	%rbp, %rdi
    00001c36: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7222
    00001c3b: 	callq	clock@PLT # Offset: 7227
    00001c40: 	movl	iterations(%rip), %edi
    00001c46: 	xorl	%r12d, %r12d
    00001c49: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001c50: 	movq	%rax, start_time(%rip)
    00001c57: 	testl	%edi, %edi
    00001c59: 	jle	.Ltmp2613 # Offset: 7257
    00001c5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2668:
    00001c60: 	cvttsd2si	init_value(%rip), %rax
    00001c69: 	cmpq	%rax, %r14
    00001c6c: 	jne	.Ltmp2614 # Offset: 7276
.Ltmp2613:
    00001c72: 	movq	%rbp, %rsi
    00001c75: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c7c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7292
    00001c81: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c88: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c8f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c96: 	je	.Ltmp2615 # Offset: 7318
.Ltmp2679:
    00001c9c: 	movq	-0x20(%rax), %r12
    00001ca0: 	callq	clock@PLT # Offset: 7328
    00001ca5: 	pxor	%xmm0, %xmm0
    00001ca9: 	movq	%rax, end_time(%rip)
    00001cb0: 	movq	%r12, %rdi
    00001cb3: 	subq	start_time(%rip), %rax
    00001cba: 	cvtsi2sd	%rax, %xmm0
    00001cbf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001cc7: 	callq	_Z13record_resultdPKc # Offset: 7367
    00001ccc: 	movq	0x160(%rsp), %rdi
    00001cd4: 	cmpq	%rbx, %rdi
    00001cd7: 	je	.Ltmp2616 # Offset: 7383
    00001cd9: 	movq	0x170(%rsp), %rax
    00001ce1: 	leaq	0x1(%rax), %rsi
    00001ce5: 	callq	_ZdlPvm@PLT # Offset: 7397
.Ltmp2616:
    00001cea: 	movq	0x58(%rsp), %rsi
    00001cef: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001cf6: 	movq	%rbp, %rdi
    00001cf9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7417
    00001cfe: 	callq	clock@PLT # Offset: 7422
    00001d03: 	movl	iterations(%rip), %esi
    00001d09: 	movq	%rax, start_time(%rip)
    00001d10: 	testl	%esi, %esi
    00001d12: 	jle	.Ltmp2617 # Offset: 7442
    00001d14: 	movq	0xfd08(%rsp), %rdx
    00001d1c: 	movslq	%r13d, %rax
    00001d1f: 	movq	%rdx, 0x180(%rsp,%rax,8)
.Ltmp2617:
    00001d27: 	movq	%rbp, %rsi
    00001d2a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d31: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7473
    00001d36: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d3d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d44: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d4b: 	je	.Ltmp2618 # Offset: 7499
.Ltmp2678:
    00001d51: 	movq	-0x20(%rax), %r12
    00001d55: 	callq	clock@PLT # Offset: 7509
    00001d5a: 	pxor	%xmm0, %xmm0
    00001d5e: 	movq	%rax, end_time(%rip)
    00001d65: 	movq	%r12, %rdi
    00001d68: 	subq	start_time(%rip), %rax
    00001d6f: 	cvtsi2sd	%rax, %xmm0
    00001d74: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d7c: 	callq	_Z13record_resultdPKc # Offset: 7548
    00001d81: 	movq	0x160(%rsp), %rdi
    00001d89: 	cmpq	%rbx, %rdi
    00001d8c: 	je	.Ltmp2619 # Offset: 7564
    00001d8e: 	movq	0x170(%rsp), %rax
    00001d96: 	leaq	0x1(%rax), %rsi
    00001d9a: 	callq	_ZdlPvm@PLT # Offset: 7578
.Ltmp2619:
    00001d9f: 	movq	0x58(%rsp), %rsi
    00001da4: 	leaq	DATAat0x3d49d(%rip), %rdx
    00001dab: 	movq	%rbp, %rdi
    00001dae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7598
    00001db3: 	callq	clock@PLT # Offset: 7603
    00001db8: 	movl	iterations(%rip), %ecx
    00001dbe: 	movq	%rax, start_time(%rip)
    00001dc5: 	testl	%ecx, %ecx
    00001dc7: 	jle	.Ltmp2620 # Offset: 7623
    00001dc9: 	movq	0xfd08(%rsp), %rax
    00001dd1: 	movq	%rax, 0x180(%rsp,%r13,8)
.Ltmp2620:
    00001dd9: 	movq	%rbp, %rsi
    00001ddc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001de3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7651
    00001de8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001def: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001df6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dfd: 	je	.Ltmp2621 # Offset: 7677
.Ltmp2677:
    00001e03: 	movq	-0x20(%rax), %r12
    00001e07: 	callq	clock@PLT # Offset: 7687
    00001e0c: 	pxor	%xmm0, %xmm0
    00001e10: 	movq	%rax, end_time(%rip)
    00001e17: 	movq	%r12, %rdi
    00001e1a: 	subq	start_time(%rip), %rax
    00001e21: 	cvtsi2sd	%rax, %xmm0
    00001e26: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e2e: 	callq	_Z13record_resultdPKc # Offset: 7726
    00001e33: 	movq	0x160(%rsp), %rdi
    00001e3b: 	cmpq	%rbx, %rdi
    00001e3e: 	je	.Ltmp2622 # Offset: 7742
    00001e40: 	movq	0x170(%rsp), %rax
    00001e48: 	leaq	0x1(%rax), %rsi
    00001e4c: 	callq	_ZdlPvm@PLT # Offset: 7756
.Ltmp2622:
    00001e51: 	movq	0x58(%rsp), %rsi
    00001e56: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00001e5d: 	movq	%rbp, %rdi
    00001e60: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7776
    00001e65: 	callq	clock@PLT # Offset: 7781
    00001e6a: 	movl	iterations(%rip), %edx
    00001e70: 	movq	%rax, start_time(%rip)
    00001e77: 	testl	%edx, %edx
    00001e79: 	jle	.Ltmp2623 # Offset: 7801
    00001e7b: 	movq	0xfd08(%rsp), %rax
    00001e83: 	movq	%rax, 0xc0(%rsp)
.Ltmp2623:
    00001e8b: 	movq	%rbp, %rsi
    00001e8e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e95: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7829
    00001e9a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ea1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ea8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001eaf: 	je	.Ltmp2624 # Offset: 7855
.Ltmp2676:
    00001eb5: 	movq	-0x20(%rax), %r12
    00001eb9: 	callq	clock@PLT # Offset: 7865
    00001ebe: 	pxor	%xmm0, %xmm0
    00001ec2: 	movq	%rax, end_time(%rip)
    00001ec9: 	movq	%r12, %rdi
    00001ecc: 	subq	start_time(%rip), %rax
    00001ed3: 	cvtsi2sd	%rax, %xmm0
    00001ed8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ee0: 	callq	_Z13record_resultdPKc # Offset: 7904
    00001ee5: 	movq	0x160(%rsp), %rdi
    00001eed: 	cmpq	%rbx, %rdi
    00001ef0: 	je	.Ltmp2625 # Offset: 7920
    00001ef2: 	movq	0x170(%rsp), %rax
    00001efa: 	leaq	0x1(%rax), %rsi
    00001efe: 	callq	_ZdlPvm@PLT # Offset: 7934
.Ltmp2625:
    00001f03: 	movq	0x58(%rsp), %rsi
    00001f08: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00001f0f: 	movq	%rbp, %rdi
    00001f12: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7954
    00001f17: 	callq	clock@PLT # Offset: 7959
    00001f1c: 	movq	%rax, start_time(%rip)
    00001f23: 	movl	iterations(%rip), %eax
    00001f29: 	testl	%eax, %eax
    00001f2b: 	jle	.Ltmp2626 # Offset: 7979
    00001f2d: 	movq	0xfd08(%rsp), %rax
    00001f35: 	movq	%rax, 0xc0(%rsp)
.Ltmp2626:
    00001f3d: 	movq	%rbp, %rsi
    00001f40: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f47: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8007
    00001f4c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f53: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f5a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f61: 	je	.Ltmp2627 # Offset: 8033
.Ltmp2675:
    00001f67: 	movq	-0x20(%rax), %r12
    00001f6b: 	callq	clock@PLT # Offset: 8043
    00001f70: 	pxor	%xmm0, %xmm0
    00001f74: 	movq	%rax, end_time(%rip)
    00001f7b: 	movq	%r12, %rdi
    00001f7e: 	subq	start_time(%rip), %rax
    00001f85: 	cvtsi2sd	%rax, %xmm0
    00001f8a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f92: 	callq	_Z13record_resultdPKc # Offset: 8082
    00001f97: 	movq	0x160(%rsp), %rdi
    00001f9f: 	cmpq	%rbx, %rdi
    00001fa2: 	je	.Ltmp2628 # Offset: 8098
    00001fa4: 	movq	0x170(%rsp), %rax
    00001fac: 	leaq	0x1(%rax), %rsi
    00001fb0: 	callq	_ZdlPvm@PLT # Offset: 8112
.Ltmp2628:
    00001fb5: 	movq	0x58(%rsp), %r14
    00001fba: 	leaq	0x140(%rsp), %rdi
    00001fc2: 	leaq	DATAat0x3d4d0(%rip), %rdx
    00001fc9: 	movq	%r14, %rsi
    00001fcc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8140
    00001fd1: 	movl	iterations(%rip), %edx
    00001fd7: 	xorl	%r8d, %r8d
    00001fda: 	xorl	%ecx, %ecx
    00001fdc: 	movl	$0x1f40, %esi
    00001fe1: 	movq	0x140(%rsp), %rdi
    00001fe9: 	callq	_Z9summarizePKciiii # Offset: 8169
    00001fee: 	movsd	DATAat0x3d708(%rip), %xmm0
    00001ff6: 	leaq	DATAat0x3d4e7(%rip), %rdx
    00001ffd: 	movq	%r14, %rsi
    00002000: 	movq	%rbp, %rdi
    00002003: 	addsd	init_value(%rip), %xmm0
    0000200b: 	cvttsd2si	%xmm0, %r12
    00002010: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8208
    00002015: 	callq	clock@PLT # Offset: 8213
    0000201a: 	movl	iterations(%rip), %r13d
    00002021: 	movl	%r12d, %r14d
    00002024: 	movq	%rax, start_time(%rip)
    0000202b: 	testl	%r13d, %r13d
    0000202e: 	jle	.Ltmp2629 # Offset: 8238
    00002034: 	pxor	%xmm7, %xmm7
    00002038: 	leaq	DATAat0x3d1c8(%rip), %r15
    0000203f: 	cvtsi2sd	%r12d, %xmm7
    00002044: 	xorl	%r12d, %r12d
    00002047: 	movsd	%xmm7, (%rsp)
    0000204c: 	nopl	(%rax) # Size: 4
.Ltmp2631:
    00002050: 	movq	DATAat0x3d6b8(%rip), %rax
    00002057: 	movsd	(%rsp), %xmm0
    0000205c: 	movq	%rax, %xmm1
    00002061: 	callq	pow@PLT # Offset: 8289
    00002066: 	movq	DATAat0x3d6b8(%rip), %rax
    0000206d: 	movsd	%xmm0, 0x18(%rsp)
    00002073: 	movsd	(%rsp), %xmm0
    00002078: 	movq	%rax, %xmm1
    0000207d: 	callq	pow@PLT # Offset: 8317
    00002082: 	movsd	0x18(%rsp), %xmm2
    00002088: 	cvttsd2si	%xmm0, %rdx
    0000208d: 	cvttsd2si	%xmm2, %rax
    00002092: 	cmpq	%rax, %rdx
    00002095: 	je	.Ltmp2630 # Offset: 8341
    00002097: 	movq	0x160(%rsp), %rdx
    0000209f: 	movq	%r15, %rsi
    000020a2: 	movl	$0x1, %edi
    000020a7: 	xorl	%eax, %eax
    000020a9: 	callq	__printf_chk@PLT # Offset: 8361
    000020ae: 	movl	iterations(%rip), %r13d
.Ltmp2630:
    000020b5: 	addl	$0x1, %r12d
    000020b9: 	cmpl	%r13d, %r12d
    000020bc: 	jl	.Ltmp2631 # Offset: 8380
.Ltmp2629:
    000020be: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000020c5: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000020cc: 	subq	$0x20, %rax
    000020d0: 	cmpq	%rax, %r13
    000020d3: 	je	.Ltmp2632 # Offset: 8403
    000020d9: 	leaq	0x10(%r13), %rdi
    000020dd: 	movq	0x168(%rsp), %r12
    000020e5: 	movq	%rdi, (%r13)
    000020e9: 	movq	0x160(%rsp), %r15
    000020f1: 	movq	%r15, %rax
    000020f4: 	addq	%r12, %rax
    000020f7: 	je	.Ltmp2633 # Offset: 8439
    000020f9: 	testq	%r15, %r15
    000020fc: 	je	.Ltmp2634 # Offset: 8444
.Ltmp2633:
    00002102: 	movq	%r12, 0x88(%rsp)
    0000210a: 	cmpq	$0xf, %r12
    0000210e: 	ja	.Ltmp2635 # Offset: 8462
    00002114: 	cmpq	$0x1, %r12
    00002118: 	jne	.Ltmp2636 # Offset: 8472
    0000211e: 	movzbl	(%r15), %eax
    00002122: 	movb	%al, 0x10(%r13)
.Ltmp2669:
    00002126: 	movq	%r12, 0x8(%r13)
    0000212a: 	movb	$0x0, (%rdi,%r12)
    0000212f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002136: 	addq	$0x20, %rax
    0000213a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2674:
    00002141: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002148: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000214f: 	je	.Ltmp2637 # Offset: 8527
.Ltmp2673:
    00002155: 	movq	-0x20(%rax), %r12
    00002159: 	callq	clock@PLT # Offset: 8537
    0000215e: 	pxor	%xmm0, %xmm0
    00002162: 	movq	%rax, end_time(%rip)
    00002169: 	movq	%r12, %rdi
    0000216c: 	subq	start_time(%rip), %rax
    00002173: 	cvtsi2sd	%rax, %xmm0
    00002178: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002180: 	callq	_Z13record_resultdPKc # Offset: 8576
    00002185: 	movq	0x160(%rsp), %rdi
    0000218d: 	cmpq	%rbx, %rdi
    00002190: 	je	.Ltmp2638 # Offset: 8592
    00002192: 	movq	0x170(%rsp), %rax
    0000219a: 	leaq	0x1(%rax), %rsi
    0000219e: 	callq	_ZdlPvm@PLT # Offset: 8606
.Ltmp2638:
    000021a3: 	movq	0x58(%rsp), %rsi
    000021a8: 	leaq	DATAat0x3d501(%rip), %rdx
    000021af: 	movq	%rbp, %rdi
    000021b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8626
    000021b7: 	leaq	_Z10test_powerIlET_S0_(%rip), %r12
    000021be: 	movq	%rbp, %rcx
    000021c1: 	movl	%r14d, %esi
    000021c4: 	movl	$0x1f40, %edi
    000021c9: 	movq	%r12, %rdx
    000021cc: 	callq	"_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8652
    000021d1: 	movq	0x160(%rsp), %rdi
    000021d9: 	cmpq	%rbx, %rdi
    000021dc: 	je	.Ltmp2639 # Offset: 8668
    000021de: 	movq	0x170(%rsp), %rax
    000021e6: 	leaq	0x1(%rax), %rsi
    000021ea: 	callq	_ZdlPvm@PLT # Offset: 8682
.Ltmp2639:
    000021ef: 	movq	0x58(%rsp), %rsi
    000021f4: 	leaq	DATAat0x3d51f(%rip), %rdx
    000021fb: 	movq	%rbp, %rdi
    000021fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8702
    00002203: 	movq	%rbp, %rcx
    00002206: 	movq	%r12, %rdx
    00002209: 	movl	%r14d, %esi
    0000220c: 	movl	$0x1f40, %edi
    00002211: 	callq	"_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8721
    00002216: 	movq	0x160(%rsp), %rdi
    0000221e: 	cmpq	%rbx, %rdi
    00002221: 	je	.Ltmp2640 # Offset: 8737
    00002223: 	movq	0x170(%rsp), %rax
    0000222b: 	leaq	0x1(%rax), %rsi
    0000222f: 	callq	_ZdlPvm@PLT # Offset: 8751
.Ltmp2640:
    00002234: 	movq	0x58(%rsp), %rsi
    00002239: 	leaq	DATAat0x3d535(%rip), %rdx
    00002240: 	movq	%rbp, %rdi
    00002243: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8771
    00002248: 	callq	clock@PLT # Offset: 8776
    0000224d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00002254: 	movq	%rax, start_time(%rip)
    0000225b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002262: 	subq	$0x20, %rax
    00002266: 	cmpq	%rax, %r13
    00002269: 	je	.Ltmp2641 # Offset: 8809
    0000226f: 	leaq	0x10(%r13), %rdi
    00002273: 	movq	0x168(%rsp), %r12
    0000227b: 	movq	%rdi, (%r13)
    0000227f: 	movq	0x160(%rsp), %r15
    00002287: 	movq	%r15, %rax
    0000228a: 	addq	%r12, %rax
    0000228d: 	je	.Ltmp2642 # Offset: 8845
    0000228f: 	testq	%r15, %r15
    00002292: 	je	.Ltmp2643 # Offset: 8850
.Ltmp2642:
    00002298: 	movq	%r12, 0x88(%rsp)
    000022a0: 	cmpq	$0xf, %r12
    000022a4: 	ja	.Ltmp2644 # Offset: 8868
    000022aa: 	cmpq	$0x1, %r12
    000022ae: 	jne	.Ltmp2645 # Offset: 8878
    000022b4: 	movzbl	(%r15), %eax
    000022b8: 	movb	%al, 0x10(%r13)
.Ltmp2701:
    000022bc: 	movq	%r12, 0x8(%r13)
    000022c0: 	movb	$0x0, (%rdi,%r12)
    000022c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022cc: 	addq	$0x20, %rax
    000022d0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2672:
    000022d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000022de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022e5: 	je	.Ltmp2646 # Offset: 8933
.Ltmp2671:
    000022eb: 	movq	-0x20(%rax), %r12
    000022ef: 	callq	clock@PLT # Offset: 8943
    000022f4: 	pxor	%xmm0, %xmm0
    000022f8: 	movq	%rax, end_time(%rip)
    000022ff: 	movq	%r12, %rdi
    00002302: 	subq	start_time(%rip), %rax
    00002309: 	cvtsi2sd	%rax, %xmm0
    0000230e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002316: 	callq	_Z13record_resultdPKc # Offset: 8982
    0000231b: 	movq	0x160(%rsp), %rdi
    00002323: 	cmpq	%rbx, %rdi
    00002326: 	je	.Ltmp2647 # Offset: 8998
    00002328: 	movq	0x170(%rsp), %rax
    00002330: 	leaq	0x1(%rax), %rsi
    00002334: 	callq	_ZdlPvm@PLT # Offset: 9012
.Ltmp2647:
    00002339: 	movq	0x58(%rsp), %rsi
    0000233e: 	leaq	DATAat0x3d640(%rip), %rdx
    00002345: 	movq	%rbp, %rdi
    00002348: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9032
    0000234d: 	leaq	_Z8test_cosIlET_S0_(%rip), %r12
    00002354: 	movq	%rbp, %rcx
    00002357: 	movl	%r14d, %esi
    0000235a: 	movl	$0x1f40, %edi
    0000235f: 	movq	%r12, %rdx
    00002362: 	callq	"_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9058
    00002367: 	movq	0x160(%rsp), %rdi
    0000236f: 	cmpq	%rbx, %rdi
    00002372: 	je	.Ltmp2648 # Offset: 9074
    00002374: 	movq	0x170(%rsp), %rax
    0000237c: 	leaq	0x1(%rax), %rsi
    00002380: 	callq	_ZdlPvm@PLT # Offset: 9088
.Ltmp2648:
    00002385: 	movq	0x58(%rsp), %rsi
    0000238a: 	leaq	DATAat0x3d550(%rip), %rdx
    00002391: 	movq	%rbp, %rdi
    00002394: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9108
    00002399: 	movq	%rbp, %rcx
    0000239c: 	movq	%r12, %rdx
    0000239f: 	movl	%r14d, %esi
    000023a2: 	movl	$0x1f40, %edi
    000023a7: 	callq	"_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9127
    000023ac: 	movq	0x160(%rsp), %rdi
    000023b4: 	cmpq	%rbx, %rdi
    000023b7: 	je	.Ltmp2649 # Offset: 9143
    000023b9: 	movq	0x170(%rsp), %rax
    000023c1: 	leaq	0x1(%rax), %rsi
    000023c5: 	callq	_ZdlPvm@PLT # Offset: 9157
.Ltmp2649:
    000023ca: 	movq	0x58(%rsp), %rsi
    000023cf: 	leaq	DATAat0x3d567(%rip), %rdx
    000023d6: 	movq	%rbp, %rdi
    000023d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9177
    000023de: 	leaq	_Z8test_sqrIlET_S0_(%rip), %r12
    000023e5: 	movq	%rbp, %rdx
    000023e8: 	movl	%r14d, %edi
    000023eb: 	movq	%r12, %rsi
    000023ee: 	callq	"_Z23test_const_function_optIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9198
    000023f3: 	movq	0x160(%rsp), %rdi
    000023fb: 	cmpq	%rbx, %rdi
    000023fe: 	je	.Ltmp2650 # Offset: 9214
    00002400: 	movq	0x170(%rsp), %rax
    00002408: 	leaq	0x1(%rax), %rsi
    0000240c: 	callq	_ZdlPvm@PLT # Offset: 9228
.Ltmp2650:
    00002411: 	movq	0x58(%rsp), %rsi
    00002416: 	leaq	DATAat0x3d660(%rip), %rdx
    0000241d: 	movq	%rbp, %rdi
    00002420: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9248
    00002425: 	movq	%rbp, %rcx
    00002428: 	movq	%r12, %rdx
    0000242b: 	movl	%r14d, %esi
    0000242e: 	movl	$0x1f40, %edi
    00002433: 	callq	"_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9267
    00002438: 	movq	0x160(%rsp), %rdi
    00002440: 	cmpq	%rbx, %rdi
    00002443: 	je	.Ltmp2651 # Offset: 9283
    00002445: 	movq	0x170(%rsp), %rax
    0000244d: 	leaq	0x1(%rax), %rsi
    00002451: 	callq	_ZdlPvm@PLT # Offset: 9297
.Ltmp2651:
    00002456: 	movq	0x58(%rsp), %rsi
    0000245b: 	leaq	DATAat0x3d582(%rip), %rdx
    00002462: 	movq	%rbp, %rdi
    00002465: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9317
    0000246a: 	movq	%rbp, %rcx
    0000246d: 	movq	%r12, %rdx
    00002470: 	movl	%r14d, %esi
    00002473: 	movl	$0x1f40, %edi
    00002478: 	callq	"_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9336
    0000247d: 	movq	0x160(%rsp), %rdi
    00002485: 	cmpq	%rbx, %rdi
    00002488: 	je	.Ltmp2652 # Offset: 9352
    0000248a: 	movq	0x170(%rsp), %rax
    00002492: 	leaq	0x1(%rax), %rsi
    00002496: 	callq	_ZdlPvm@PLT # Offset: 9366
.Ltmp2652:
    0000249b: 	movq	0x58(%rsp), %rsi
    000024a0: 	leaq	DATAat0x3d599(%rip), %rdx
    000024a7: 	movq	%rbp, %rdi
    000024aa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9386
    000024af: 	callq	clock@PLT # Offset: 9391
    000024b4: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000024bb: 	movq	%rax, start_time(%rip)
    000024c2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000024c9: 	subq	$0x20, %rax
    000024cd: 	cmpq	%rax, %r13
    000024d0: 	je	.Ltmp2653 # Offset: 9424
    000024d6: 	leaq	0x10(%r13), %rdi
    000024da: 	movq	0x168(%rsp), %r12
    000024e2: 	movq	%rdi, (%r13)
    000024e6: 	movq	0x160(%rsp), %r15
    000024ee: 	movq	%r15, %rax
    000024f1: 	addq	%r12, %rax
    000024f4: 	je	.Ltmp2654 # Offset: 9460
    000024f6: 	testq	%r15, %r15
    000024f9: 	je	.Ltmp2655 # Offset: 9465
.Ltmp2654:
    000024ff: 	movq	%r12, 0x88(%rsp)
    00002507: 	cmpq	$0xf, %r12
    0000250b: 	ja	.Ltmp2656 # Offset: 9483
    00002511: 	cmpq	$0x1, %r12
    00002515: 	jne	.Ltmp2657 # Offset: 9493
    0000251b: 	movzbl	(%r15), %eax
    0000251f: 	movb	%al, 0x10(%r13)
.Ltmp2703:
    00002523: 	movq	%r12, 0x8(%r13)
    00002527: 	movb	$0x0, (%rdi,%r12)
    0000252c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002533: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000253a: 	addq	$0x20, %rax
    0000253e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002545: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000254c: 	je	.Ltmp2658 # Offset: 9548
.Ltmp2670:
    00002552: 	movq	-0x20(%rax), %r12
    00002556: 	callq	clock@PLT # Offset: 9558
    0000255b: 	pxor	%xmm0, %xmm0
    0000255f: 	movq	%rax, end_time(%rip)
    00002566: 	movq	%r12, %rdi
    00002569: 	subq	start_time(%rip), %rax
    00002570: 	cvtsi2sd	%rax, %xmm0
    00002575: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000257d: 	callq	_Z13record_resultdPKc # Offset: 9597
    00002582: 	movq	0x160(%rsp), %rdi
    0000258a: 	cmpq	%rbx, %rdi
    0000258d: 	je	.Ltmp2659 # Offset: 9613
    0000258f: 	movq	0x170(%rsp), %rax
    00002597: 	leaq	0x1(%rax), %rsi
    0000259b: 	callq	_ZdlPvm@PLT # Offset: 9627
.Ltmp2659:
    000025a0: 	movq	0x58(%rsp), %rsi
    000025a5: 	leaq	DATAat0x3d5b2(%rip), %rdx
    000025ac: 	movq	%rbp, %rdi
    000025af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9647
    000025b4: 	leaq	_Z9test_hashIlET_S0_(%rip), %r12
    000025bb: 	movq	%rbp, %rcx
    000025be: 	movl	%r14d, %esi
    000025c1: 	movl	$0x1f40, %edi
    000025c6: 	movq	%r12, %rdx
    000025c9: 	callq	"_Z27test_const_function_halfoptIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9673
    000025ce: 	movq	0x160(%rsp), %rdi
    000025d6: 	cmpq	%rbx, %rdi
    000025d9: 	je	.Ltmp2660 # Offset: 9689
    000025db: 	movq	0x170(%rsp), %rax
    000025e3: 	leaq	0x1(%rax), %rsi
    000025e7: 	callq	_ZdlPvm@PLT # Offset: 9703
.Ltmp2660:
    000025ec: 	movq	0x58(%rsp), %rsi
    000025f1: 	leaq	DATAat0x3d5cf(%rip), %rdx
    000025f8: 	movq	%rbp, %rdi
    000025fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9723
    00002600: 	movq	%rbp, %rcx
    00002603: 	movq	%r12, %rdx
    00002606: 	movl	%r14d, %esi
    00002609: 	movl	$0x1f40, %edi
    0000260e: 	callq	"_Z19test_const_functionIlPFllEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9742
    00002613: 	movq	0x160(%rsp), %rdi
    0000261b: 	cmpq	%rbx, %rdi
    0000261e: 	je	.Ltmp2661 # Offset: 9758
    00002620: 	movq	0x170(%rsp), %rax
    00002628: 	leaq	0x1(%rax), %rsi
    0000262c: 	callq	_ZdlPvm@PLT # Offset: 9772
.Ltmp2661:
    00002631: 	movq	0x58(%rsp), %rsi
    00002636: 	leaq	DATAat0x3d5e4(%rip), %rdx
    0000263d: 	movq	%rbp, %rdi
    00002640: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9792
    00002645: 	movl	iterations(%rip), %edx
    0000264b: 	xorl	%r8d, %r8d
    0000264e: 	xorl	%ecx, %ecx
    00002650: 	movl	$0x1f40, %esi
    00002655: 	movq	0x160(%rsp), %rdi
    0000265d: 	callq	_Z9summarizePKciiii # Offset: 9821
    00002662: 	movq	0x160(%rsp), %rdi
    0000266a: 	cmpq	%rbx, %rdi
    0000266d: 	je	.Ltmp2662 # Offset: 9837
    0000266f: 	movq	0x170(%rsp), %rax
    00002677: 	leaq	0x1(%rax), %rsi
    0000267b: 	callq	_ZdlPvm@PLT # Offset: 9851
.Ltmp2662:
    00002680: 	movq	0x140(%rsp), %rdi
    00002688: 	leaq	0x150(%rsp), %rax
    00002690: 	cmpq	%rax, %rdi
    00002693: 	je	.Ltmp2663 # Offset: 9875
    00002695: 	movq	0x150(%rsp), %rax
    0000269d: 	leaq	0x1(%rax), %rsi
    000026a1: 	callq	_ZdlPvm@PLT # Offset: 9889
.Ltmp2663:
    000026a6: 	movq	0x120(%rsp), %rdi
    000026ae: 	leaq	0x130(%rsp), %rax
    000026b6: 	cmpq	%rax, %rdi
    000026b9: 	je	.Ltmp2664 # Offset: 9913
    000026bb: 	movq	0x130(%rsp), %rax
    000026c3: 	leaq	0x1(%rax), %rsi
    000026c7: 	callq	_ZdlPvm@PLT # Offset: 9927
.Ltmp2664:
    000026cc: 	movq	0x100(%rsp), %rdi
    000026d4: 	cmpq	0x70(%rsp), %rdi
    000026d9: 	je	.Ltmp2665 # Offset: 9945
    000026db: 	movq	0x110(%rsp), %rax
    000026e3: 	leaq	0x1(%rax), %rsi
    000026e7: 	callq	_ZdlPvm@PLT # Offset: 9959
.Ltmp2665:
    000026ec: 	movq	0xfd18(%rsp), %rax
    000026f4: 	subq	%fs:0x28, %rax
    000026fd: 	jne	.Ltmp2666 # Offset: 9981
    00002703: 	addq	$0xfd28, %rsp
    0000270a: 	popq	%rbx
    0000270b: 	popq	%rbp
    0000270c: 	popq	%r12
    0000270e: 	popq	%r13
    00002710: 	popq	%r14
    00002712: 	popq	%r15
    00002714: 	retq # Offset: 10004
    00002715: 	nopl	(%rax) # Size: 3
.Ltmp2609:
    00002718: 	movq	0x160(%rsp), %rdx
    00002720: 	movq	%r15, %rsi
    00002723: 	movl	$0x1, %edi
    00002728: 	xorl	%eax, %eax
    0000272a: 	callq	__printf_chk@PLT # Offset: 10026
    0000272f: 	addl	$0x1, %r12d
    00002733: 	cmpl	iterations(%rip), %r12d
    0000273a: 	jl	.Ltmp2667 # Offset: 10042
    00002740: 	jmp	.Ltmp2608 # Offset: 10048
    00002745: 	nopl	(%rax) # Size: 3
.Ltmp2614:
    00002748: 	movq	0x160(%rsp), %rdx
    00002750: 	movq	%r15, %rsi
    00002753: 	movl	$0x1, %edi
    00002758: 	xorl	%eax, %eax
    0000275a: 	callq	__printf_chk@PLT # Offset: 10074
    0000275f: 	addl	$0x1, %r12d
    00002763: 	cmpl	iterations(%rip), %r12d
    0000276a: 	jl	.Ltmp2668 # Offset: 10090
    00002770: 	jmp	.Ltmp2613 # Offset: 10096
    00002775: 	nopl	(%rax) # Size: 3
.Ltmp2635:
    00002778: 	leaq	0x88(%rsp), %rsi
    00002780: 	xorl	%edx, %edx
    00002782: 	movq	%r13, %rdi
    00002785: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10117
    0000278a: 	movq	%rax, (%r13)
    0000278e: 	movq	%rax, %rdi
    00002791: 	movq	0x88(%rsp), %rax
    00002799: 	movq	%rax, 0x10(%r13)
.Ltmp2705:
    0000279d: 	movq	%r12, %rdx
    000027a0: 	movq	%r15, %rsi
    000027a3: 	callq	memcpy@PLT # Offset: 10147
    000027a8: 	movq	0x88(%rsp), %r12
    000027b0: 	movq	(%r13), %rdi
    000027b4: 	jmp	.Ltmp2669 # Offset: 10164
.Ltmp2653:
    000027b9: 	movq	%rbp, %rsi
    000027bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000027c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10179
    000027c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027cf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000027d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027dd: 	jne	.Ltmp2670 # Offset: 10205
.Ltmp2658:
    000027e3: 	movq	-0x8(%rdx), %rax
    000027e7: 	addq	$0x200, %rax
    000027ed: 	jmp	.Ltmp2670 # Offset: 10221
.Ltmp2646:
    000027f2: 	movq	-0x8(%rdx), %rax
    000027f6: 	addq	$0x200, %rax
    000027fc: 	jmp	.Ltmp2671 # Offset: 10236
.Ltmp2641:
    00002801: 	movq	%rbp, %rsi
    00002804: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000280b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10251
    00002810: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002817: 	jmp	.Ltmp2672 # Offset: 10263
.Ltmp2637:
    0000281c: 	movq	-0x8(%rdx), %rax
    00002820: 	addq	$0x200, %rax
    00002826: 	jmp	.Ltmp2673 # Offset: 10278
.Ltmp2632:
    0000282b: 	movq	%rbp, %rsi
    0000282e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002835: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10293
    0000283a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002841: 	jmp	.Ltmp2674 # Offset: 10305
.Ltmp2627:
    00002846: 	movq	-0x8(%rdx), %rax
    0000284a: 	addq	$0x200, %rax
    00002850: 	jmp	.Ltmp2675 # Offset: 10320
.Ltmp2624:
    00002855: 	movq	-0x8(%rdx), %rax
    00002859: 	addq	$0x200, %rax
    0000285f: 	jmp	.Ltmp2676 # Offset: 10335
.Ltmp2621:
    00002864: 	movq	-0x8(%rdx), %rax
    00002868: 	addq	$0x200, %rax
    0000286e: 	jmp	.Ltmp2677 # Offset: 10350
.Ltmp2618:
    00002873: 	movq	-0x8(%rdx), %rax
    00002877: 	addq	$0x200, %rax
    0000287d: 	jmp	.Ltmp2678 # Offset: 10365
.Ltmp2615:
    00002882: 	movq	-0x8(%rdx), %rax
    00002886: 	addq	$0x200, %rax
    0000288c: 	jmp	.Ltmp2679 # Offset: 10380
.Ltmp2610:
    00002891: 	movq	-0x8(%rdx), %rax
    00002895: 	addq	$0x200, %rax
    0000289b: 	jmp	.Ltmp2680 # Offset: 10395
.Ltmp2605:
    000028a0: 	movq	-0x8(%rdx), %rax
    000028a4: 	addq	$0x200, %rax
    000028aa: 	jmp	.Ltmp2681 # Offset: 10410
.Ltmp2599:
    000028af: 	movq	-0x8(%rdx), %rax
    000028b3: 	addq	$0x200, %rax
    000028b9: 	jmp	.Ltmp2682 # Offset: 10425
.Ltmp2593:
    000028be: 	movq	-0x8(%rdx), %rax
    000028c2: 	addq	$0x200, %rax
    000028c8: 	jmp	.Ltmp2683 # Offset: 10440
.Ltmp2587:
    000028cd: 	movq	-0x8(%rdx), %rax
    000028d1: 	addq	$0x200, %rax
    000028d7: 	jmp	.Ltmp2684 # Offset: 10455
.Ltmp2580:
    000028dc: 	movq	-0x8(%rdx), %rax
    000028e0: 	addq	$0x200, %rax
    000028e6: 	jmp	.Ltmp2685 # Offset: 10470
.Ltmp2574:
    000028eb: 	movq	-0x8(%rdx), %rax
    000028ef: 	addq	$0x200, %rax
    000028f5: 	jmp	.Ltmp2686 # Offset: 10485
.Ltmp2568:
    000028fa: 	movq	-0x8(%rdx), %rax
    000028fe: 	addq	$0x200, %rax
    00002904: 	jmp	.Ltmp2687 # Offset: 10500
.Ltmp2562:
    00002909: 	movq	-0x8(%rdx), %rax
    0000290d: 	addq	$0x200, %rax
    00002913: 	jmp	.Ltmp2688 # Offset: 10515
.Ltmp2556:
    00002918: 	movq	-0x8(%rdx), %rax
    0000291c: 	addq	$0x200, %rax
    00002922: 	jmp	.Ltmp2689 # Offset: 10530
.Ltmp2550:
    00002927: 	movq	-0x8(%rdx), %rax
    0000292b: 	addq	$0x200, %rax
    00002931: 	jmp	.Ltmp2690 # Offset: 10545
.Ltmp2544:
    00002936: 	movq	-0x8(%rdx), %rax
    0000293a: 	addq	$0x200, %rax
    00002940: 	jmp	.Ltmp2691 # Offset: 10560
.Ltmp2538:
    00002945: 	movq	-0x8(%rdx), %rax
    00002949: 	addq	$0x200, %rax
    0000294f: 	jmp	.Ltmp2692 # Offset: 10575
.Ltmp2532:
    00002954: 	movq	-0x8(%rdx), %rax
    00002958: 	addq	$0x200, %rax
    0000295e: 	jmp	.Ltmp2693 # Offset: 10590
.Ltmp2526:
    00002963: 	movq	-0x8(%rdx), %rax
    00002967: 	addq	$0x200, %rax
    0000296d: 	jmp	.Ltmp2694 # Offset: 10605
.Ltmp2520:
    00002972: 	movq	-0x8(%rdx), %rax
    00002976: 	addq	$0x200, %rax
    0000297c: 	jmp	.Ltmp2695 # Offset: 10620
.Ltmp2514:
    00002981: 	movq	-0x8(%rdx), %rax
    00002985: 	addq	$0x200, %rax
    0000298b: 	jmp	.Ltmp2696 # Offset: 10635
.Ltmp2508:
    00002990: 	movq	-0x8(%rdx), %rax
    00002994: 	addq	$0x200, %rax
    0000299a: 	jmp	.Ltmp2697 # Offset: 10650
.Ltmp2502:
    0000299f: 	movq	-0x8(%rdx), %rax
    000029a3: 	addq	$0x200, %rax
    000029a9: 	jmp	.Ltmp2698 # Offset: 10665
.Ltmp2496:
    000029ae: 	movq	-0x8(%rdx), %rax
    000029b2: 	addq	$0x200, %rax
    000029b8: 	jmp	.Ltmp2699 # Offset: 10680
.Ltmp2490:
    000029bd: 	movq	-0x8(%rdx), %rax
    000029c1: 	addq	$0x200, %rax
    000029c7: 	jmp	.Ltmp2700 # Offset: 10695
.Ltmp2645:
    000029cc: 	testq	%r12, %r12
    000029cf: 	je	.Ltmp2701 # Offset: 10703
    000029d5: 	jmp	.Ltmp2702 # Offset: 10709
    000029d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2657:
    000029e0: 	testq	%r12, %r12
    000029e3: 	je	.Ltmp2703 # Offset: 10723
    000029e9: 	jmp	.Ltmp2704 # Offset: 10729
    000029eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2636:
    000029f0: 	testq	%r12, %r12
    000029f3: 	je	.Ltmp2669 # Offset: 10739
    000029f9: 	jmp	.Ltmp2705 # Offset: 10745
    000029fe: 	nop # Size: 2
.Ltmp2644:
    00002a00: 	leaq	0x88(%rsp), %rsi
    00002a08: 	xorl	%edx, %edx
    00002a0a: 	movq	%r13, %rdi
    00002a0d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10765
    00002a12: 	movq	%rax, (%r13)
    00002a16: 	movq	%rax, %rdi
    00002a19: 	movq	0x88(%rsp), %rax
    00002a21: 	movq	%rax, 0x10(%r13)
.Ltmp2702:
    00002a25: 	movq	%r12, %rdx
    00002a28: 	movq	%r15, %rsi
    00002a2b: 	callq	memcpy@PLT # Offset: 10795
    00002a30: 	movq	0x88(%rsp), %r12
    00002a38: 	movq	(%r13), %rdi
    00002a3c: 	jmp	.Ltmp2701 # Offset: 10812
.Ltmp2656:
    00002a41: 	leaq	0x88(%rsp), %rsi
    00002a49: 	xorl	%edx, %edx
    00002a4b: 	movq	%r13, %rdi
    00002a4e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10830
    00002a53: 	movq	%rax, (%r13)
    00002a57: 	movq	%rax, %rdi
    00002a5a: 	movq	0x88(%rsp), %rax
    00002a62: 	movq	%rax, 0x10(%r13)
.Ltmp2704:
    00002a66: 	movq	%r12, %rdx
    00002a69: 	movq	%r15, %rsi
    00002a6c: 	callq	memcpy@PLT # Offset: 10860
    00002a71: 	movq	0x88(%rsp), %r12
    00002a79: 	movq	(%r13), %rdi
    00002a7d: 	jmp	.Ltmp2703 # Offset: 10877
.Ltmp2643:
    00002a82: 	leaq	DATAat0x3d158(%rip), %rdi
    00002a89: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10889
.Ltmp2655:
    00002a8e: 	leaq	DATAat0x3d158(%rip), %rdi
    00002a95: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10901
.Ltmp2666:
    00002a9a: 	callq	__stack_chk_fail@PLT # Offset: 10906
.Ltmp2634:
    00002a9f: 	leaq	DATAat0x3d158(%rip), %rdi
    00002aa6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10918
    00002aab: 	endbr64
    00002aaf: 	movq	%rax, %rbp
    00002ab2: 	jmp	.Ltmp2706 # Offset: 10930
    00002ab4: 	endbr64
    00002ab8: 	movq	%rax, %rbp
    00002abb: 	jmp	.Ltmp2707 # Offset: 10939
.Ltmp2706:
    00002abd: 	movq	0x180(%rsp), %rdi
    00002ac5: 	leaq	0x190(%rsp), %rax
    00002acd: 	cmpq	%rax, %rdi
    00002ad0: 	je	.Ltmp2707 # Offset: 10960
.Ltmp2714:
    00002ad2: 	movq	0x190(%rsp), %rax
    00002ada: 	leaq	0x1(%rax), %rsi
    00002ade: 	callq	_ZdlPvm@PLT # Offset: 10974
.Ltmp2707:
    00002ae3: 	movq	0x100(%rsp), %rdi
    00002aeb: 	cmpq	0x70(%rsp), %rdi
    00002af0: 	je	.Ltmp2708 # Offset: 10992
    00002af2: 	movq	0x110(%rsp), %rax
    00002afa: 	leaq	0x1(%rax), %rsi
    00002afe: 	callq	_ZdlPvm@PLT # Offset: 11006
.Ltmp2708:
    00002b03: 	movq	%rbp, %rdi
    00002b06: 	callq	_Unwind_Resume@PLT # Offset: 11014
    00002b0b: 	endbr64
.Ltmp2710:
    00002b0f: 	movq	%rax, %rbp
    00002b12: 	jmp	.Ltmp2709 # Offset: 11026
    00002b14: 	endbr64
    00002b18: 	jmp	.Ltmp2710 # Offset: 11032
    00002b1a: 	endbr64
    00002b1e: 	jmp	.Ltmp2710 # Offset: 11038
    00002b20: 	endbr64
    00002b24: 	jmp	.Ltmp2710 # Offset: 11044
    00002b26: 	endbr64
    00002b2a: 	jmp	.Ltmp2710 # Offset: 11050
    00002b2c: 	endbr64
.Ltmp2712:
    00002b30: 	movq	%rax, %rbp
    00002b33: 	jmp	.Ltmp2711 # Offset: 11059
    00002b35: 	endbr64
    00002b39: 	jmp	.Ltmp2712 # Offset: 11065
    00002b3b: 	endbr64
    00002b3f: 	jmp	.Ltmp2710 # Offset: 11071
    00002b41: 	endbr64
    00002b45: 	jmp	.Ltmp2710 # Offset: 11077
.Ltmp2709:
    00002b47: 	movq	0x160(%rsp), %rdi
    00002b4f: 	cmpq	%rbx, %rdi
    00002b52: 	je	.Ltmp2713 # Offset: 11090
.Ltmp2718:
    00002b54: 	movq	0x170(%rsp), %rax
    00002b5c: 	leaq	0x1(%rax), %rsi
    00002b60: 	callq	_ZdlPvm@PLT # Offset: 11104
.Ltmp2713:
    00002b65: 	movq	0x120(%rsp), %rdi
    00002b6d: 	leaq	0x130(%rsp), %rax
    00002b75: 	cmpq	%rax, %rdi
    00002b78: 	je	.Ltmp2707 # Offset: 11128
    00002b7e: 	movq	0x130(%rsp), %rax
    00002b86: 	leaq	0x1(%rax), %rsi
    00002b8a: 	callq	_ZdlPvm@PLT # Offset: 11146
    00002b8f: 	jmp	.Ltmp2707 # Offset: 11151
    00002b94: 	endbr64
    00002b98: 	jmp	.Ltmp2710 # Offset: 11160
.Ltmp2711:
    00002b9d: 	movq	0x180(%rsp), %rdi
    00002ba5: 	cmpq	0x68(%rsp), %rdi
    00002baa: 	jne	.Ltmp2714 # Offset: 11178
    00002bb0: 	jmp	.Ltmp2707 # Offset: 11184
    00002bb5: 	endbr64
    00002bb9: 	jmp	.Ltmp2712 # Offset: 11193
    00002bbe: 	endbr64
    00002bc2: 	jmp	.Ltmp2712 # Offset: 11202
    00002bc7: 	endbr64
    00002bcb: 	movq	%rax, %rbp
    00002bce: 	jmp	.Ltmp2715 # Offset: 11214
    00002bd0: 	endbr64
    00002bd4: 	jmp	.Ltmp2712 # Offset: 11220
.Ltmp2716:
    00002bd9: 	movq	0x160(%rsp), %rdi
    00002be1: 	cmpq	%rbx, %rdi
    00002be4: 	je	.Ltmp2715 # Offset: 11236
    00002be6: 	movq	0x170(%rsp), %rax
    00002bee: 	leaq	0x1(%rax), %rsi
    00002bf2: 	callq	_ZdlPvm@PLT # Offset: 11250
.Ltmp2715:
    00002bf7: 	movq	0x140(%rsp), %rdi
    00002bff: 	leaq	0x150(%rsp), %rax
    00002c07: 	cmpq	%rax, %rdi
    00002c0a: 	je	.Ltmp2713 # Offset: 11274
    00002c10: 	movq	0x150(%rsp), %rax
    00002c18: 	leaq	0x1(%rax), %rsi
    00002c1c: 	callq	_ZdlPvm@PLT # Offset: 11292
    00002c21: 	jmp	.Ltmp2713 # Offset: 11297
    00002c26: 	endbr64
    00002c2a: 	jmp	.Ltmp2712 # Offset: 11306
    00002c2f: 	endbr64
    00002c33: 	jmp	.Ltmp2712 # Offset: 11315
    00002c38: 	endbr64
    00002c3c: 	jmp	.Ltmp2712 # Offset: 11324
    00002c41: 	endbr64
    00002c45: 	jmp	.Ltmp2712 # Offset: 11333
    00002c4a: 	endbr64
.Ltmp2719:
    00002c4e: 	movq	%rax, %rbp
    00002c51: 	jmp	.Ltmp2716 # Offset: 11345
    00002c53: 	endbr64
    00002c57: 	jmp	.Ltmp2712 # Offset: 11351
    00002c5c: 	endbr64
    00002c60: 	movq	%rax, %rbp
    00002c63: 	jmp	.Ltmp2717 # Offset: 11363
    00002c65: 	endbr64
    00002c69: 	movq	%rax, %rbp
    00002c6c: 	jmp	.Ltmp2713 # Offset: 11372
.Ltmp2717:
    00002c71: 	movq	0x160(%rsp), %rdi
    00002c79: 	leaq	0x170(%rsp), %rax
    00002c81: 	cmpq	%rax, %rdi
    00002c84: 	jne	.Ltmp2718 # Offset: 11396
    00002c8a: 	jmp	.Ltmp2713 # Offset: 11402
    00002c8f: 	endbr64
    00002c93: 	jmp	.Ltmp2710 # Offset: 11411
    00002c98: 	endbr64
    00002c9c: 	jmp	.Ltmp2710 # Offset: 11420
    00002ca1: 	endbr64
    00002ca5: 	jmp	.Ltmp2712 # Offset: 11429
    00002caa: 	endbr64
    00002cae: 	jmp	.Ltmp2712 # Offset: 11438
    00002cb3: 	endbr64
    00002cb7: 	jmp	.Ltmp2712 # Offset: 11447
    00002cbc: 	endbr64
    00002cc0: 	jmp	.Ltmp2710 # Offset: 11456
    00002cc5: 	endbr64
    00002cc9: 	jmp	.Ltmp2719 # Offset: 11465
    00002ccb: 	endbr64
    00002ccf: 	jmp	.Ltmp2712 # Offset: 11471
    00002cd4: 	endbr64
    00002cd8: 	jmp	.Ltmp2719 # Offset: 11480
    00002cdd: 	endbr64
    00002ce1: 	jmp	.Ltmp2719 # Offset: 11489
    00002ce6: 	endbr64
    00002cea: 	jmp	.Ltmp2719 # Offset: 11498
    00002cef: 	endbr64
    00002cf3: 	jmp	.Ltmp2712 # Offset: 11507
    00002cf8: 	endbr64
    00002cfc: 	jmp	.Ltmp2719 # Offset: 11516
    00002d01: 	endbr64
    00002d05: 	jmp	.Ltmp2719 # Offset: 11525
    00002d0a: 	endbr64
    00002d0e: 	jmp	.Ltmp2719 # Offset: 11534
    00002d13: 	endbr64
    00002d17: 	jmp	.Ltmp2719 # Offset: 11543
    00002d1c: 	endbr64
    00002d20: 	jmp	.Ltmp2719 # Offset: 11552
    00002d25: 	endbr64
    00002d29: 	jmp	.Ltmp2719 # Offset: 11561
    00002d2e: 	endbr64
    00002d32: 	jmp	.Ltmp2719 # Offset: 11570
    00002d37: 	endbr64
    00002d3b: 	jmp	.Ltmp2719 # Offset: 11579
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIlEvd"

Binary Function "_Z9TestLoopsIiEvd" after disassembly {
  Number      : 149
  State       : disassembled
  Address     : 0x1c640
  Size        : 0x2f0c
  MaxSize     : 0x2f10
  Offset      : 0x1c640
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIiEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0148:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp2720:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2720 # Offset: 37
    00000027: 	subq	$0xf28, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm4
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm5
    0000003e: 	movl	$0x5f32, %r9d
    00000044: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000004b: 	movsd	%xmm0, (%rsp)
    00000050: 	leaq	0x210(%rsp), %r13
    00000058: 	leaq	0x7f10(%rsp), %r15
    00000060: 	movq	%fs:0x28, %rax
    00000069: 	movq	%rax, 0x7f18(%rsp)
    00000071: 	xorl	%eax, %eax
    00000073: 	leaq	0xd0(%rsp), %rax
    0000007b: 	movl	$0x33746e69, 0xd0(%rsp)
    00000086: 	movq	%rax, 0x60(%rsp)
    0000008b: 	movq	%rax, 0xc0(%rsp)
    00000093: 	leaq	0x80(%rsp), %rax
    0000009b: 	movq	%rax, %rsi
    0000009e: 	movq	%rax, 0x68(%rsp)
    000000a3: 	movw	%r9w, 0xd4(%rsp)
    000000ac: 	movb	$0x74, 0xd6(%rsp)
    000000b4: 	movq	$0x7, 0xc8(%rsp)
    000000c0: 	movb	$0x0, 0xd7(%rsp)
    000000c8: 	movaps	%xmm4, 0x80(%rsp)
    000000d0: 	movaps	%xmm5, 0x90(%rsp)
    000000d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 216
    000000dd: 	cvttsd2si	init_value(%rip), %eax
    000000e5: 	movsd	(%rsp), %xmm0
    000000ea: 	movd	%eax, %xmm1
    000000ee: 	movq	%r13, %rax
    000000f1: 	pshufd	$0x0, %xmm1, %xmm1
    000000f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2721:
    00000100: 	movaps	%xmm1, (%rax)
    00000103: 	addq	$0x10, %rax
    00000107: 	cmpq	%r15, %rax
    0000010a: 	jne	.Ltmp2721 # Offset: 266
    0000010c: 	cvttsd2si	%xmm0, %ebp
    00000110: 	leaq	0x140(%rsp), %rdi
    00000118: 	movq	%rdi, 0x50(%rsp)
    0000011d: 	leal	(%rbp,%rbp), %eax
    00000121: 	leal	0x2(%rbp), %r14d
    00000125: 	cltd
    00000126: 	movl	%eax, 0x40(%rsp)
    0000012a: 	idivl	%r14d
    0000012d: 	leaq	DATAat0x3d273(%rip), %rdx
    00000134: 	addl	%ebp, %eax
    00000136: 	movl	%eax, 0x44(%rsp)
    0000013a: 	leaq	0xc0(%rsp), %rax
    00000142: 	movq	%rax, %rsi
    00000145: 	movq	%rax, 0x48(%rsp)
    0000014a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 330
    0000014f: 	callq	clock@PLT # Offset: 335
    00000154: 	movd	%ebp, %xmm4
    00000158: 	xorl	%ebx, %ebx
    0000015a: 	movl	iterations(%rip), %ecx
    00000160: 	pshufd	$0x0, %xmm4, %xmm6
    00000165: 	movq	%rax, start_time(%rip)
    0000016c: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000173: 	movaps	%xmm6, (%rsp)
    00000177: 	testl	%ecx, %ecx
    00000179: 	jle	.Ltmp2722 # Offset: 377
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2725:
    00000180: 	movq	%r13, %rax
    00000183: 	pxor	%xmm0, %xmm0
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2723:
    00000190: 	movdqa	(%rsp), %xmm1
    00000195: 	paddd	(%rax), %xmm1
    00000199: 	addq	$0x10, %rax
    0000019d: 	paddd	%xmm1, %xmm0
    000001a1: 	cmpq	%r15, %rax
    000001a4: 	jne	.Ltmp2723 # Offset: 420
    000001a6: 	cvttsd2si	init_value(%rip), %edx
    000001ae: 	movdqa	%xmm0, %xmm1
    000001b2: 	psrldq	$0x8, %xmm1
    000001b7: 	paddd	%xmm1, %xmm0
    000001bb: 	movdqa	%xmm0, %xmm1
    000001bf: 	addl	%ebp, %edx
    000001c1: 	psrldq	$0x4, %xmm1
    000001c6: 	imull	$0x1f40, %edx, %edx
    000001cc: 	paddd	%xmm1, %xmm0
    000001d0: 	movd	%xmm0, %eax
    000001d4: 	cmpl	%eax, %edx
    000001d6: 	je	.Ltmp2724 # Offset: 470
    000001d8: 	movl	current_test(%rip), %edx
    000001de: 	movq	%r12, %rsi
    000001e1: 	movl	$0x1, %edi
    000001e6: 	xorl	%eax, %eax
    000001e8: 	callq	__printf_chk@PLT # Offset: 488
    000001ed: 	movl	iterations(%rip), %ecx
.Ltmp2724:
    000001f3: 	addl	$0x1, %ebx
    000001f6: 	cmpl	%ecx, %ebx
    000001f8: 	jl	.Ltmp2725 # Offset: 504
.Ltmp2722:
    000001fa: 	movq	0x50(%rsp), %rsi
    000001ff: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000206: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 518
    0000020b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000212: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000219: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000220: 	je	.Ltmp2726 # Offset: 544
.Ltmp2936:
    00000226: 	movq	-0x20(%rax), %r12
    0000022a: 	callq	clock@PLT # Offset: 554
    0000022f: 	pxor	%xmm0, %xmm0
    00000233: 	movq	%rax, end_time(%rip)
    0000023a: 	movq	%r12, %rdi
    0000023d: 	subq	start_time(%rip), %rax
    00000244: 	cvtsi2sd	%rax, %xmm0
    00000249: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000251: 	callq	_Z13record_resultdPKc # Offset: 593
    00000256: 	movq	0x140(%rsp), %rdi
    0000025e: 	leaq	0x150(%rsp), %rax
    00000266: 	movq	%rax, 0x58(%rsp)
    0000026b: 	cmpq	%rax, %rdi
    0000026e: 	je	.Ltmp2727 # Offset: 622
    00000270: 	movq	0x150(%rsp), %rax
    00000278: 	leaq	0x1(%rax), %rsi
    0000027c: 	callq	_ZdlPvm@PLT # Offset: 636
.Ltmp2727:
    00000281: 	movq	0x48(%rsp), %rsi
    00000286: 	movq	0x50(%rsp), %rdi
    0000028b: 	leaq	DATAat0x3d281(%rip), %rdx
    00000292: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 658
    00000297: 	callq	clock@PLT # Offset: 663
    0000029c: 	movl	iterations(%rip), %ecx
    000002a2: 	movq	%rax, start_time(%rip)
    000002a9: 	testl	%ecx, %ecx
    000002ab: 	jle	.Ltmp2728 # Offset: 683
    000002b1: 	imull	$0x1f40, %ebp, %r12d
    000002b8: 	xorl	%ebx, %ebx
    000002ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2731:
    000002c0: 	movq	%r13, %rax
    000002c3: 	pxor	%xmm0, %xmm0
    000002c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2729:
    000002d0: 	paddd	(%rax), %xmm0
    000002d4: 	addq	$0x10, %rax
    000002d8: 	cmpq	%r15, %rax
    000002db: 	jne	.Ltmp2729 # Offset: 731
    000002dd: 	movdqa	%xmm0, %xmm1
    000002e1: 	cvttsd2si	init_value(%rip), %edx
    000002e9: 	psrldq	$0x8, %xmm1
    000002ee: 	paddd	%xmm1, %xmm0
    000002f2: 	movdqa	%xmm0, %xmm1
    000002f6: 	psrldq	$0x4, %xmm1
    000002fb: 	addl	%ebp, %edx
    000002fd: 	imull	$0x1f40, %edx, %edx
    00000303: 	paddd	%xmm1, %xmm0
    00000307: 	movd	%xmm0, %eax
    0000030b: 	addl	%r12d, %eax
    0000030e: 	cmpl	%edx, %eax
    00000310: 	je	.Ltmp2730 # Offset: 784
    00000312: 	movl	current_test(%rip), %edx
    00000318: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000031f: 	movl	$0x1, %edi
    00000324: 	xorl	%eax, %eax
    00000326: 	callq	__printf_chk@PLT # Offset: 806
    0000032b: 	movl	iterations(%rip), %ecx
.Ltmp2730:
    00000331: 	addl	$0x1, %ebx
    00000334: 	cmpl	%ecx, %ebx
    00000336: 	jl	.Ltmp2731 # Offset: 822
.Ltmp2728:
    00000338: 	movq	0x50(%rsp), %rsi
    0000033d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000344: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 836
    00000349: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000350: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000357: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000035e: 	je	.Ltmp2732 # Offset: 862
.Ltmp2935:
    00000364: 	movq	-0x20(%rax), %r12
    00000368: 	callq	clock@PLT # Offset: 872
    0000036d: 	pxor	%xmm0, %xmm0
    00000371: 	movq	%rax, end_time(%rip)
    00000378: 	movq	%r12, %rdi
    0000037b: 	subq	start_time(%rip), %rax
    00000382: 	cvtsi2sd	%rax, %xmm0
    00000387: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000038f: 	callq	_Z13record_resultdPKc # Offset: 911
    00000394: 	movq	0x140(%rsp), %rdi
    0000039c: 	cmpq	0x58(%rsp), %rdi
    000003a1: 	je	.Ltmp2733 # Offset: 929
    000003a3: 	movq	0x150(%rsp), %rax
    000003ab: 	leaq	0x1(%rax), %rsi
    000003af: 	callq	_ZdlPvm@PLT # Offset: 943
.Ltmp2733:
    000003b4: 	movq	0x48(%rsp), %rsi
    000003b9: 	movq	0x50(%rsp), %rdi
    000003be: 	leaq	DATAat0x3d297(%rip), %rdx
    000003c5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 965
    000003ca: 	callq	clock@PLT # Offset: 970
    000003cf: 	movl	iterations(%rip), %ecx
    000003d5: 	movq	%rax, start_time(%rip)
    000003dc: 	testl	%ecx, %ecx
    000003de: 	jle	.Ltmp2734 # Offset: 990
    000003e4: 	movl	0x40(%rsp), %eax
    000003e8: 	xorl	%ebx, %ebx
    000003ea: 	leal	(%rbp,%rax), %r12d
    000003ef: 	addl	%r14d, %r12d
    000003f2: 	addl	0x44(%rsp), %r12d
    000003f7: 	movd	%r12d, %xmm6
    000003fc: 	pshufd	$0x0, %xmm6, %xmm6
    00000401: 	movaps	%xmm6, (%rsp)
    00000405: 	nopl	(%rax) # Size: 3
.Ltmp2737:
    00000408: 	movq	%r13, %rax
    0000040b: 	pxor	%xmm0, %xmm0
    0000040f: 	nop # Size: 1
.Ltmp2735:
    00000410: 	movdqa	(%rsp), %xmm1
    00000415: 	paddd	(%rax), %xmm1
    00000419: 	addq	$0x10, %rax
    0000041d: 	paddd	%xmm1, %xmm0
    00000421: 	cmpq	%r15, %rax
    00000424: 	jne	.Ltmp2735 # Offset: 1060
    00000426: 	cvttsd2si	init_value(%rip), %edx
    0000042e: 	movdqa	%xmm0, %xmm1
    00000432: 	psrldq	$0x8, %xmm1
    00000437: 	paddd	%xmm1, %xmm0
    0000043b: 	movdqa	%xmm0, %xmm1
    0000043f: 	addl	%r12d, %edx
    00000442: 	psrldq	$0x4, %xmm1
    00000447: 	imull	$0x1f40, %edx, %edx
    0000044d: 	paddd	%xmm1, %xmm0
    00000451: 	movd	%xmm0, %eax
    00000455: 	cmpl	%eax, %edx
    00000457: 	je	.Ltmp2736 # Offset: 1111
    00000459: 	movl	current_test(%rip), %edx
    0000045f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000466: 	movl	$0x1, %edi
    0000046b: 	xorl	%eax, %eax
    0000046d: 	callq	__printf_chk@PLT # Offset: 1133
    00000472: 	movl	iterations(%rip), %ecx
.Ltmp2736:
    00000478: 	addl	$0x1, %ebx
    0000047b: 	cmpl	%ecx, %ebx
    0000047d: 	jl	.Ltmp2737 # Offset: 1149
.Ltmp2734:
    0000047f: 	movq	0x50(%rsp), %rsi
    00000484: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000048b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1163
    00000490: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000497: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000049e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004a5: 	je	.Ltmp2738 # Offset: 1189
.Ltmp2934:
    000004ab: 	movq	-0x20(%rax), %r12
    000004af: 	callq	clock@PLT # Offset: 1199
    000004b4: 	pxor	%xmm0, %xmm0
    000004b8: 	movq	%rax, end_time(%rip)
    000004bf: 	movq	%r12, %rdi
    000004c2: 	subq	start_time(%rip), %rax
    000004c9: 	cvtsi2sd	%rax, %xmm0
    000004ce: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004d6: 	callq	_Z13record_resultdPKc # Offset: 1238
    000004db: 	movq	0x140(%rsp), %rdi
    000004e3: 	cmpq	0x58(%rsp), %rdi
    000004e8: 	je	.Ltmp2739 # Offset: 1256
    000004ea: 	movq	0x150(%rsp), %rax
    000004f2: 	leaq	0x1(%rax), %rsi
    000004f6: 	callq	_ZdlPvm@PLT # Offset: 1270
.Ltmp2739:
    000004fb: 	movq	0x48(%rsp), %rsi
    00000500: 	movq	0x50(%rsp), %rdi
    00000505: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000050c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1292
    00000511: 	callq	clock@PLT # Offset: 1297
    00000516: 	movl	iterations(%rip), %ecx
    0000051c: 	movq	%rax, start_time(%rip)
    00000523: 	testl	%ecx, %ecx
    00000525: 	jle	.Ltmp2740 # Offset: 1317
    0000052b: 	movd	%ebp, %xmm5
    0000052f: 	xorl	%ebx, %ebx
    00000531: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000538: 	pshufd	$0x0, %xmm5, %xmm4
    0000053d: 	movaps	%xmm4, (%rsp)
    00000541: 	movd	0x40(%rsp), %xmm4
    00000547: 	pshufd	$0x0, %xmm4, %xmm6
    0000054c: 	movaps	%xmm6, 0x10(%rsp)
    00000551: 	movd	%r14d, %xmm6
    00000556: 	pshufd	$0x0, %xmm6, %xmm5
    0000055b: 	movaps	%xmm5, 0x20(%rsp)
    00000560: 	movd	0x44(%rsp), %xmm5
    00000566: 	pshufd	$0x0, %xmm5, %xmm4
    0000056b: 	movaps	%xmm4, 0x30(%rsp)
.Ltmp2743:
    00000570: 	movq	%r13, %rax
    00000573: 	pxor	%xmm1, %xmm1
    00000577: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2741:
    00000580: 	movdqa	(%rsp), %xmm0
    00000585: 	paddd	(%rax), %xmm0
    00000589: 	addq	$0x10, %rax
    0000058d: 	paddd	0x10(%rsp), %xmm0
    00000593: 	paddd	0x20(%rsp), %xmm0
    00000599: 	paddd	0x30(%rsp), %xmm0
    0000059f: 	paddd	%xmm0, %xmm1
    000005a3: 	cmpq	%r15, %rax
    000005a6: 	jne	.Ltmp2741 # Offset: 1446
    000005a8: 	cvttsd2si	init_value(%rip), %edx
    000005b0: 	movdqa	%xmm1, %xmm0
    000005b4: 	psrldq	$0x8, %xmm0
    000005b9: 	paddd	%xmm0, %xmm1
    000005bd: 	movdqa	%xmm1, %xmm0
    000005c1: 	addl	%ebp, %edx
    000005c3: 	psrldq	$0x4, %xmm0
    000005c8: 	addl	0x40(%rsp), %edx
    000005cc: 	addl	%r14d, %edx
    000005cf: 	addl	0x44(%rsp), %edx
    000005d3: 	paddd	%xmm0, %xmm1
    000005d7: 	imull	$0x1f40, %edx, %edx
    000005dd: 	movd	%xmm1, %eax
    000005e1: 	cmpl	%eax, %edx
    000005e3: 	je	.Ltmp2742 # Offset: 1507
    000005e5: 	movl	current_test(%rip), %edx
    000005eb: 	movq	%r12, %rsi
    000005ee: 	movl	$0x1, %edi
    000005f3: 	xorl	%eax, %eax
    000005f5: 	callq	__printf_chk@PLT # Offset: 1525
    000005fa: 	movl	iterations(%rip), %ecx
.Ltmp2742:
    00000600: 	addl	$0x1, %ebx
    00000603: 	cmpl	%ecx, %ebx
    00000605: 	jl	.Ltmp2743 # Offset: 1541
.Ltmp2740:
    0000060b: 	movq	0x50(%rsp), %rsi
    00000610: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000617: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1559
    0000061c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000623: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000062a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000631: 	je	.Ltmp2744 # Offset: 1585
.Ltmp2933:
    00000637: 	movq	-0x20(%rax), %r12
    0000063b: 	callq	clock@PLT # Offset: 1595
    00000640: 	pxor	%xmm0, %xmm0
    00000644: 	movq	%rax, end_time(%rip)
    0000064b: 	movq	%r12, %rdi
    0000064e: 	subq	start_time(%rip), %rax
    00000655: 	cvtsi2sd	%rax, %xmm0
    0000065a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000662: 	callq	_Z13record_resultdPKc # Offset: 1634
    00000667: 	movq	0x140(%rsp), %rdi
    0000066f: 	cmpq	0x58(%rsp), %rdi
    00000674: 	je	.Ltmp2745 # Offset: 1652
    00000676: 	movq	0x150(%rsp), %rax
    0000067e: 	leaq	0x1(%rax), %rsi
    00000682: 	callq	_ZdlPvm@PLT # Offset: 1666
.Ltmp2745:
    00000687: 	movq	0x48(%rsp), %rsi
    0000068c: 	movq	0x50(%rsp), %rdi
    00000691: 	leaq	DATAat0x3d2c8(%rip), %rdx
    00000698: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1688
    0000069d: 	callq	clock@PLT # Offset: 1693
    000006a2: 	movd	%ebp, %xmm6
    000006a6: 	xorl	%ebx, %ebx
    000006a8: 	movl	iterations(%rip), %ecx
    000006ae: 	pshufd	$0x0, %xmm6, %xmm5
    000006b3: 	movq	%rax, start_time(%rip)
    000006ba: 	leaq	DATAat0x3d1d8(%rip), %r12
    000006c1: 	movaps	%xmm5, (%rsp)
    000006c5: 	testl	%ecx, %ecx
    000006c7: 	jle	.Ltmp2746 # Offset: 1735
    000006c9: 	nopl	(%rax) # Size: 7
.Ltmp2749:
    000006d0: 	movq	%r13, %rax
    000006d3: 	pxor	%xmm0, %xmm0
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2747:
    000006e0: 	paddd	(%rax), %xmm0
    000006e4: 	addq	$0x10, %rax
    000006e8: 	psubd	(%rsp), %xmm0
    000006ed: 	cmpq	%rax, %r15
    000006f0: 	jne	.Ltmp2747 # Offset: 1776
    000006f2: 	cvttsd2si	init_value(%rip), %edx
    000006fa: 	movdqa	%xmm0, %xmm1
    000006fe: 	psrldq	$0x8, %xmm1
    00000703: 	paddd	%xmm1, %xmm0
    00000707: 	movdqa	%xmm0, %xmm1
    0000070b: 	subl	%ebp, %edx
    0000070d: 	psrldq	$0x4, %xmm1
    00000712: 	imull	$0x1f40, %edx, %edx
    00000718: 	paddd	%xmm1, %xmm0
    0000071c: 	movd	%xmm0, %eax
    00000720: 	cmpl	%eax, %edx
    00000722: 	je	.Ltmp2748 # Offset: 1826
    00000724: 	movl	current_test(%rip), %edx
    0000072a: 	movq	%r12, %rsi
    0000072d: 	movl	$0x1, %edi
    00000732: 	xorl	%eax, %eax
    00000734: 	callq	__printf_chk@PLT # Offset: 1844
    00000739: 	movl	iterations(%rip), %ecx
.Ltmp2748:
    0000073f: 	addl	$0x1, %ebx
    00000742: 	cmpl	%ecx, %ebx
    00000744: 	jl	.Ltmp2749 # Offset: 1860
.Ltmp2746:
    00000746: 	movq	0x50(%rsp), %rsi
    0000074b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000752: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1874
    00000757: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000075e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000765: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000076c: 	je	.Ltmp2750 # Offset: 1900
.Ltmp2932:
    00000772: 	movq	-0x20(%rax), %r12
    00000776: 	callq	clock@PLT # Offset: 1910
    0000077b: 	pxor	%xmm0, %xmm0
    0000077f: 	movq	%rax, end_time(%rip)
    00000786: 	movq	%r12, %rdi
    00000789: 	subq	start_time(%rip), %rax
    00000790: 	cvtsi2sd	%rax, %xmm0
    00000795: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000079d: 	callq	_Z13record_resultdPKc # Offset: 1949
    000007a2: 	movq	0x140(%rsp), %rdi
    000007aa: 	cmpq	0x58(%rsp), %rdi
    000007af: 	je	.Ltmp2751 # Offset: 1967
    000007b1: 	movq	0x150(%rsp), %rax
    000007b9: 	leaq	0x1(%rax), %rsi
    000007bd: 	callq	_ZdlPvm@PLT # Offset: 1981
.Ltmp2751:
    000007c2: 	movq	0x48(%rsp), %rsi
    000007c7: 	movq	0x50(%rsp), %rdi
    000007cc: 	leaq	DATAat0x3d2db(%rip), %rdx
    000007d3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2003
    000007d8: 	callq	clock@PLT # Offset: 2008
    000007dd: 	movl	iterations(%rip), %ecx
    000007e3: 	movq	%rax, start_time(%rip)
    000007ea: 	testl	%ecx, %ecx
    000007ec: 	jle	.Ltmp2752 # Offset: 2028
    000007f2: 	movl	0x40(%rsp), %eax
    000007f6: 	xorl	%ebx, %ebx
    000007f8: 	leal	(%rbp,%rax), %r12d
    000007fd: 	addl	%r14d, %r12d
    00000800: 	addl	0x44(%rsp), %r12d
    00000805: 	movd	%r12d, %xmm4
    0000080a: 	pshufd	$0x0, %xmm4, %xmm6
    0000080f: 	movaps	%xmm6, (%rsp)
    00000813: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2755:
    00000818: 	movq	%r13, %rax
    0000081b: 	pxor	%xmm0, %xmm0
    0000081f: 	nop # Size: 1
.Ltmp2753:
    00000820: 	paddd	(%rax), %xmm0
    00000824: 	addq	$0x10, %rax
    00000828: 	psubd	(%rsp), %xmm0
    0000082d: 	cmpq	%r15, %rax
    00000830: 	jne	.Ltmp2753 # Offset: 2096
    00000832: 	cvttsd2si	init_value(%rip), %edx
    0000083a: 	movdqa	%xmm0, %xmm1
    0000083e: 	psrldq	$0x8, %xmm1
    00000843: 	paddd	%xmm1, %xmm0
    00000847: 	movdqa	%xmm0, %xmm1
    0000084b: 	subl	%r12d, %edx
    0000084e: 	psrldq	$0x4, %xmm1
    00000853: 	imull	$0x1f40, %edx, %edx
    00000859: 	paddd	%xmm1, %xmm0
    0000085d: 	movd	%xmm0, %eax
    00000861: 	cmpl	%eax, %edx
    00000863: 	je	.Ltmp2754 # Offset: 2147
    00000865: 	movl	current_test(%rip), %edx
    0000086b: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000872: 	movl	$0x1, %edi
    00000877: 	xorl	%eax, %eax
    00000879: 	callq	__printf_chk@PLT # Offset: 2169
    0000087e: 	movl	iterations(%rip), %ecx
.Ltmp2754:
    00000884: 	addl	$0x1, %ebx
    00000887: 	cmpl	%ecx, %ebx
    00000889: 	jl	.Ltmp2755 # Offset: 2185
.Ltmp2752:
    0000088b: 	movq	0x50(%rsp), %rsi
    00000890: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000897: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2199
    0000089c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008a3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008b1: 	je	.Ltmp2756 # Offset: 2225
.Ltmp2931:
    000008b7: 	movq	-0x20(%rax), %r12
    000008bb: 	callq	clock@PLT # Offset: 2235
    000008c0: 	pxor	%xmm0, %xmm0
    000008c4: 	movq	%rax, end_time(%rip)
    000008cb: 	movq	%r12, %rdi
    000008ce: 	subq	start_time(%rip), %rax
    000008d5: 	cvtsi2sd	%rax, %xmm0
    000008da: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000008e2: 	callq	_Z13record_resultdPKc # Offset: 2274
    000008e7: 	movq	0x140(%rsp), %rdi
    000008ef: 	cmpq	0x58(%rsp), %rdi
    000008f4: 	je	.Ltmp2757 # Offset: 2292
    000008f6: 	movq	0x150(%rsp), %rax
    000008fe: 	leaq	0x1(%rax), %rsi
    00000902: 	callq	_ZdlPvm@PLT # Offset: 2306
.Ltmp2757:
    00000907: 	movq	0x48(%rsp), %rsi
    0000090c: 	movq	0x50(%rsp), %rdi
    00000911: 	leaq	DATAat0x3d2f8(%rip), %rdx
    00000918: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2328
    0000091d: 	callq	clock@PLT # Offset: 2333
    00000922: 	movl	iterations(%rip), %ecx
    00000928: 	movq	%rax, start_time(%rip)
    0000092f: 	testl	%ecx, %ecx
    00000931: 	jle	.Ltmp2758 # Offset: 2353
    00000937: 	movd	%ebp, %xmm6
    0000093b: 	xorl	%ebx, %ebx
    0000093d: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000944: 	pshufd	$0x0, %xmm6, %xmm5
    00000949: 	movaps	%xmm5, (%rsp)
    0000094d: 	movd	0x40(%rsp), %xmm5
    00000953: 	pshufd	$0x0, %xmm5, %xmm4
    00000958: 	movaps	%xmm4, 0x10(%rsp)
    0000095d: 	movd	%r14d, %xmm4
    00000962: 	pshufd	$0x0, %xmm4, %xmm6
    00000967: 	movaps	%xmm6, 0x20(%rsp)
    0000096c: 	movd	0x44(%rsp), %xmm6
    00000972: 	pshufd	$0x0, %xmm6, %xmm5
    00000977: 	movaps	%xmm5, 0x30(%rsp)
    0000097c: 	nopl	(%rax) # Size: 4
.Ltmp2761:
    00000980: 	movq	%r13, %rax
    00000983: 	pxor	%xmm1, %xmm1
    00000987: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2759:
    00000990: 	movdqa	(%rax), %xmm0
    00000994: 	psubd	(%rsp), %xmm0
    00000999: 	addq	$0x10, %rax
    0000099d: 	psubd	0x10(%rsp), %xmm0
    000009a3: 	psubd	0x20(%rsp), %xmm0
    000009a9: 	psubd	0x30(%rsp), %xmm0
    000009af: 	paddd	%xmm0, %xmm1
    000009b3: 	cmpq	%rax, %r15
    000009b6: 	jne	.Ltmp2759 # Offset: 2486
    000009b8: 	cvttsd2si	init_value(%rip), %edx
    000009c0: 	movdqa	%xmm1, %xmm0
    000009c4: 	psrldq	$0x8, %xmm0
    000009c9: 	paddd	%xmm0, %xmm1
    000009cd: 	movdqa	%xmm1, %xmm0
    000009d1: 	subl	%ebp, %edx
    000009d3: 	psrldq	$0x4, %xmm0
    000009d8: 	subl	0x40(%rsp), %edx
    000009dc: 	subl	%r14d, %edx
    000009df: 	subl	0x44(%rsp), %edx
    000009e3: 	paddd	%xmm0, %xmm1
    000009e7: 	imull	$0x1f40, %edx, %edx
    000009ed: 	movd	%xmm1, %eax
    000009f1: 	cmpl	%eax, %edx
    000009f3: 	je	.Ltmp2760 # Offset: 2547
    000009f5: 	movl	current_test(%rip), %edx
    000009fb: 	movq	%r12, %rsi
    000009fe: 	movl	$0x1, %edi
    00000a03: 	xorl	%eax, %eax
    00000a05: 	callq	__printf_chk@PLT # Offset: 2565
    00000a0a: 	movl	iterations(%rip), %ecx
.Ltmp2760:
    00000a10: 	addl	$0x1, %ebx
    00000a13: 	cmpl	%ecx, %ebx
    00000a15: 	jl	.Ltmp2761 # Offset: 2581
.Ltmp2758:
    00000a1b: 	movq	0x50(%rsp), %rsi
    00000a20: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a27: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2599
    00000a2c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a33: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a3a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a41: 	je	.Ltmp2762 # Offset: 2625
.Ltmp2930:
    00000a47: 	movq	-0x20(%rax), %r12
    00000a4b: 	callq	clock@PLT # Offset: 2635
    00000a50: 	pxor	%xmm0, %xmm0
    00000a54: 	movq	%rax, end_time(%rip)
    00000a5b: 	movq	%r12, %rdi
    00000a5e: 	subq	start_time(%rip), %rax
    00000a65: 	cvtsi2sd	%rax, %xmm0
    00000a6a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000a72: 	callq	_Z13record_resultdPKc # Offset: 2674
    00000a77: 	movq	0x140(%rsp), %rdi
    00000a7f: 	cmpq	0x58(%rsp), %rdi
    00000a84: 	je	.Ltmp2763 # Offset: 2692
    00000a86: 	movq	0x150(%rsp), %rax
    00000a8e: 	leaq	0x1(%rax), %rsi
    00000a92: 	callq	_ZdlPvm@PLT # Offset: 2706
.Ltmp2763:
    00000a97: 	movq	0x48(%rsp), %rsi
    00000a9c: 	movq	0x50(%rsp), %rdi
    00000aa1: 	leaq	DATAat0x3d316(%rip), %rdx
    00000aa8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2728
    00000aad: 	callq	clock@PLT # Offset: 2733
    00000ab2: 	movd	%ebp, %xmm5
    00000ab6: 	xorl	%ebx, %ebx
    00000ab8: 	movl	iterations(%rip), %ecx
    00000abe: 	pshufd	$0x0, %xmm5, %xmm4
    00000ac3: 	movq	%rax, start_time(%rip)
    00000aca: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000ad1: 	movaps	%xmm4, (%rsp)
    00000ad5: 	testl	%ecx, %ecx
    00000ad7: 	jle	.Ltmp2764 # Offset: 2775
    00000add: 	nopl	(%rax) # Size: 3
.Ltmp2767:
    00000ae0: 	movdqa	(%rsp), %xmm3
    00000ae5: 	movq	%r13, %rax
    00000ae8: 	pxor	%xmm2, %xmm2
    00000aec: 	psrlq	$0x20, %xmm3
    00000af1: 	nopl	(%rax) # Size: 7
.Ltmp2765:
    00000af8: 	movdqa	(%rax), %xmm0
    00000afc: 	movdqa	(%rsp), %xmm1
    00000b01: 	pmuludq	(%rax), %xmm1
    00000b05: 	pshufd	$0x8, %xmm1, %xmm1
    00000b0a: 	addq	$0x10, %rax
    00000b0e: 	psrlq	$0x20, %xmm0
    00000b13: 	pmuludq	%xmm3, %xmm0
    00000b17: 	pshufd	$0x8, %xmm0, %xmm0
    00000b1c: 	punpckldq	%xmm0, %xmm1
    00000b20: 	paddd	%xmm1, %xmm2
    00000b24: 	cmpq	%r15, %rax
    00000b27: 	jne	.Ltmp2765 # Offset: 2855
    00000b29: 	cvttsd2si	init_value(%rip), %edx
    00000b31: 	movdqa	%xmm2, %xmm0
    00000b35: 	psrldq	$0x8, %xmm0
    00000b3a: 	paddd	%xmm0, %xmm2
    00000b3e: 	movdqa	%xmm2, %xmm0
    00000b42: 	imull	%ebp, %edx
    00000b45: 	psrldq	$0x4, %xmm0
    00000b4a: 	paddd	%xmm0, %xmm2
    00000b4e: 	movd	%xmm2, %eax
    00000b52: 	imull	$0x1f40, %edx, %edx
    00000b58: 	cmpl	%eax, %edx
    00000b5a: 	je	.Ltmp2766 # Offset: 2906
    00000b5c: 	movl	current_test(%rip), %edx
    00000b62: 	movq	%r12, %rsi
    00000b65: 	movl	$0x1, %edi
    00000b6a: 	xorl	%eax, %eax
    00000b6c: 	callq	__printf_chk@PLT # Offset: 2924
    00000b71: 	movl	iterations(%rip), %ecx
.Ltmp2766:
    00000b77: 	addl	$0x1, %ebx
    00000b7a: 	cmpl	%ecx, %ebx
    00000b7c: 	jl	.Ltmp2767 # Offset: 2940
.Ltmp2764:
    00000b82: 	movq	0x50(%rsp), %rsi
    00000b87: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b8e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2958
    00000b93: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b9a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ba1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ba8: 	je	.Ltmp2768 # Offset: 2984
.Ltmp2929:
    00000bae: 	movq	-0x20(%rax), %r12
    00000bb2: 	callq	clock@PLT # Offset: 2994
    00000bb7: 	pxor	%xmm0, %xmm0
    00000bbb: 	movq	%rax, end_time(%rip)
    00000bc2: 	movq	%r12, %rdi
    00000bc5: 	subq	start_time(%rip), %rax
    00000bcc: 	cvtsi2sd	%rax, %xmm0
    00000bd1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000bd9: 	callq	_Z13record_resultdPKc # Offset: 3033
    00000bde: 	movq	0x140(%rsp), %rdi
    00000be6: 	cmpq	0x58(%rsp), %rdi
    00000beb: 	je	.Ltmp2769 # Offset: 3051
    00000bed: 	movq	0x150(%rsp), %rax
    00000bf5: 	leaq	0x1(%rax), %rsi
    00000bf9: 	callq	_ZdlPvm@PLT # Offset: 3065
.Ltmp2769:
    00000bfe: 	movq	0x48(%rsp), %rsi
    00000c03: 	movq	0x50(%rsp), %rdi
    00000c08: 	leaq	DATAat0x3d329(%rip), %rdx
    00000c0f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3087
    00000c14: 	callq	clock@PLT # Offset: 3092
    00000c19: 	movl	iterations(%rip), %ecx
    00000c1f: 	movq	%rax, start_time(%rip)
    00000c26: 	testl	%ecx, %ecx
    00000c28: 	jle	.Ltmp2770 # Offset: 3112
    00000c2e: 	movl	0x40(%rsp), %eax
    00000c32: 	xorl	%ebx, %ebx
    00000c34: 	imull	%ebp, %eax
    00000c37: 	imull	%r14d, %eax
    00000c3b: 	imull	0x44(%rsp), %eax
    00000c40: 	movd	%eax, %xmm4
    00000c44: 	movl	%eax, %r12d
    00000c47: 	pshufd	$0x0, %xmm4, %xmm7
    00000c4c: 	movaps	%xmm7, (%rsp)
.Ltmp2773:
    00000c50: 	movdqa	(%rsp), %xmm3
    00000c55: 	movq	%r13, %rax
    00000c58: 	pxor	%xmm2, %xmm2
    00000c5c: 	psrlq	$0x20, %xmm3
    00000c61: 	nopl	(%rax) # Size: 7
.Ltmp2771:
    00000c68: 	movdqa	(%rax), %xmm0
    00000c6c: 	movdqa	(%rsp), %xmm1
    00000c71: 	pmuludq	(%rax), %xmm1
    00000c75: 	pshufd	$0x8, %xmm1, %xmm1
    00000c7a: 	addq	$0x10, %rax
    00000c7e: 	psrlq	$0x20, %xmm0
    00000c83: 	pmuludq	%xmm3, %xmm0
    00000c87: 	pshufd	$0x8, %xmm0, %xmm0
    00000c8c: 	punpckldq	%xmm0, %xmm1
    00000c90: 	paddd	%xmm1, %xmm2
    00000c94: 	cmpq	%rax, %r15
    00000c97: 	jne	.Ltmp2771 # Offset: 3223
    00000c99: 	cvttsd2si	init_value(%rip), %edx
    00000ca1: 	movdqa	%xmm2, %xmm0
    00000ca5: 	psrldq	$0x8, %xmm0
    00000caa: 	paddd	%xmm0, %xmm2
    00000cae: 	movdqa	%xmm2, %xmm0
    00000cb2: 	imull	%r12d, %edx
    00000cb6: 	psrldq	$0x4, %xmm0
    00000cbb: 	paddd	%xmm0, %xmm2
    00000cbf: 	movd	%xmm2, %eax
    00000cc3: 	imull	$0x1f40, %edx, %edx
    00000cc9: 	cmpl	%eax, %edx
    00000ccb: 	je	.Ltmp2772 # Offset: 3275
    00000ccd: 	movl	current_test(%rip), %edx
    00000cd3: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000cda: 	movl	$0x1, %edi
    00000cdf: 	xorl	%eax, %eax
    00000ce1: 	callq	__printf_chk@PLT # Offset: 3297
    00000ce6: 	movl	iterations(%rip), %ecx
.Ltmp2772:
    00000cec: 	addl	$0x1, %ebx
    00000cef: 	cmpl	%ecx, %ebx
    00000cf1: 	jl	.Ltmp2773 # Offset: 3313
.Ltmp2770:
    00000cf7: 	movq	0x50(%rsp), %rsi
    00000cfc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d03: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3331
    00000d08: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d0f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d16: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d1d: 	je	.Ltmp2774 # Offset: 3357
.Ltmp2928:
    00000d23: 	movq	-0x20(%rax), %r12
    00000d27: 	callq	clock@PLT # Offset: 3367
    00000d2c: 	pxor	%xmm0, %xmm0
    00000d30: 	movq	%rax, end_time(%rip)
    00000d37: 	movq	%r12, %rdi
    00000d3a: 	subq	start_time(%rip), %rax
    00000d41: 	cvtsi2sd	%rax, %xmm0
    00000d46: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d4e: 	callq	_Z13record_resultdPKc # Offset: 3406
    00000d53: 	movq	0x140(%rsp), %rdi
    00000d5b: 	cmpq	0x58(%rsp), %rdi
    00000d60: 	je	.Ltmp2775 # Offset: 3424
    00000d62: 	movq	0x150(%rsp), %rax
    00000d6a: 	leaq	0x1(%rax), %rsi
    00000d6e: 	callq	_ZdlPvm@PLT # Offset: 3438
.Ltmp2775:
    00000d73: 	movq	0x48(%rsp), %rsi
    00000d78: 	movq	0x50(%rsp), %rdi
    00000d7d: 	leaq	DATAat0x3d600(%rip), %rdx
    00000d84: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3460
    00000d89: 	callq	clock@PLT # Offset: 3465
    00000d8e: 	movl	iterations(%rip), %ecx
    00000d94: 	movq	%rax, start_time(%rip)
    00000d9b: 	testl	%ecx, %ecx
    00000d9d: 	jle	.Ltmp2776 # Offset: 3485
    00000da3: 	movl	0x40(%rsp), %r12d
    00000da8: 	xorl	%ebx, %ebx
    00000daa: 	imull	%ebp, %r12d
    00000dae: 	imull	%r14d, %r12d
    00000db2: 	imull	0x44(%rsp), %r12d
    00000db8: 	movd	%r12d, %xmm6
    00000dbd: 	pshufd	$0x0, %xmm6, %xmm5
    00000dc2: 	movaps	%xmm5, (%rsp)
    00000dc6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2779:
    00000dd0: 	movq	%r13, %rax
    00000dd3: 	pxor	%xmm0, %xmm0
    00000dd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2777:
    00000de0: 	movdqa	(%rsp), %xmm1
    00000de5: 	paddd	(%rax), %xmm1
    00000de9: 	addq	$0x10, %rax
    00000ded: 	paddd	%xmm1, %xmm0
    00000df1: 	cmpq	%r15, %rax
    00000df4: 	jne	.Ltmp2777 # Offset: 3572
    00000df6: 	cvttsd2si	init_value(%rip), %edx
    00000dfe: 	movdqa	%xmm0, %xmm1
    00000e02: 	psrldq	$0x8, %xmm1
    00000e07: 	paddd	%xmm1, %xmm0
    00000e0b: 	movdqa	%xmm0, %xmm1
    00000e0f: 	addl	%r12d, %edx
    00000e12: 	psrldq	$0x4, %xmm1
    00000e17: 	imull	$0x1f40, %edx, %edx
    00000e1d: 	paddd	%xmm1, %xmm0
    00000e21: 	movd	%xmm0, %eax
    00000e25: 	cmpl	%eax, %edx
    00000e27: 	je	.Ltmp2778 # Offset: 3623
    00000e29: 	movl	current_test(%rip), %edx
    00000e2f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000e36: 	movl	$0x1, %edi
    00000e3b: 	xorl	%eax, %eax
    00000e3d: 	callq	__printf_chk@PLT # Offset: 3645
    00000e42: 	movl	iterations(%rip), %ecx
.Ltmp2778:
    00000e48: 	addl	$0x1, %ebx
    00000e4b: 	cmpl	%ecx, %ebx
    00000e4d: 	jl	.Ltmp2779 # Offset: 3661
.Ltmp2776:
    00000e4f: 	movq	0x50(%rsp), %rsi
    00000e54: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e5b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3675
    00000e60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e67: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e75: 	je	.Ltmp2780 # Offset: 3701
.Ltmp2927:
    00000e7b: 	movq	-0x20(%rax), %r12
    00000e7f: 	callq	clock@PLT # Offset: 3711
    00000e84: 	pxor	%xmm0, %xmm0
    00000e88: 	movq	%rax, end_time(%rip)
    00000e8f: 	movq	%r12, %rdi
    00000e92: 	subq	start_time(%rip), %rax
    00000e99: 	cvtsi2sd	%rax, %xmm0
    00000e9e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ea6: 	callq	_Z13record_resultdPKc # Offset: 3750
    00000eab: 	movq	0x140(%rsp), %rdi
    00000eb3: 	cmpq	0x58(%rsp), %rdi
    00000eb8: 	je	.Ltmp2781 # Offset: 3768
    00000eba: 	movq	0x150(%rsp), %rax
    00000ec2: 	leaq	0x1(%rax), %rsi
    00000ec6: 	callq	_ZdlPvm@PLT # Offset: 3782
.Ltmp2781:
    00000ecb: 	movq	0x48(%rsp), %rsi
    00000ed0: 	movq	0x50(%rsp), %rdi
    00000ed5: 	leaq	DATAat0x3d620(%rip), %rdx
    00000edc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3804
    00000ee1: 	callq	clock@PLT # Offset: 3809
    00000ee6: 	movl	iterations(%rip), %ecx
    00000eec: 	movq	%rax, start_time(%rip)
    00000ef3: 	testl	%ecx, %ecx
    00000ef5: 	jle	.Ltmp2782 # Offset: 3829
    00000efb: 	movd	0x40(%rsp), %xmm6
    00000f01: 	movd	%ebp, %xmm4
    00000f05: 	xorl	%ebx, %ebx
    00000f07: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000f0e: 	pshufd	$0x0, %xmm4, %xmm7
    00000f13: 	movd	%r14d, %xmm4
    00000f18: 	pshufd	$0x0, %xmm6, %xmm5
    00000f1d: 	movd	0x44(%rsp), %xmm6
    00000f23: 	movaps	%xmm7, (%rsp)
    00000f27: 	pshufd	$0x0, %xmm4, %xmm7
    00000f2c: 	movaps	%xmm5, 0x10(%rsp)
    00000f31: 	pshufd	$0x0, %xmm6, %xmm5
    00000f36: 	movaps	%xmm7, 0x20(%rsp)
    00000f3b: 	movaps	%xmm5, 0x30(%rsp)
.Ltmp2785:
    00000f40: 	movdqa	(%rsp), %xmm6
    00000f45: 	movdqa	0x10(%rsp), %xmm5
    00000f4b: 	movq	%r13, %rax
    00000f4e: 	pxor	%xmm2, %xmm2
    00000f52: 	movdqa	0x20(%rsp), %xmm4
    00000f58: 	movdqa	0x30(%rsp), %xmm3
    00000f5e: 	psrlq	$0x20, %xmm6
    00000f63: 	psrlq	$0x20, %xmm5
    00000f68: 	psrlq	$0x20, %xmm4
    00000f6d: 	psrlq	$0x20, %xmm3
    00000f72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2783:
    00000f78: 	movdqa	(%rax), %xmm1
    00000f7c: 	movdqa	(%rsp), %xmm0
    00000f81: 	pmuludq	(%rax), %xmm0
    00000f85: 	pshufd	$0x8, %xmm0, %xmm0
    00000f8a: 	addq	$0x10, %rax
    00000f8e: 	psrlq	$0x20, %xmm1
    00000f93: 	pmuludq	%xmm6, %xmm1
    00000f97: 	pshufd	$0x8, %xmm1, %xmm1
    00000f9c: 	punpckldq	%xmm1, %xmm0
    00000fa0: 	movdqa	0x10(%rsp), %xmm1
    00000fa6: 	pmuludq	%xmm0, %xmm1
    00000faa: 	psrlq	$0x20, %xmm0
    00000faf: 	pmuludq	%xmm5, %xmm0
    00000fb3: 	pshufd	$0x8, %xmm1, %xmm1
    00000fb8: 	pshufd	$0x8, %xmm0, %xmm0
    00000fbd: 	punpckldq	%xmm0, %xmm1
    00000fc1: 	movdqa	0x20(%rsp), %xmm0
    00000fc7: 	pmuludq	%xmm1, %xmm0
    00000fcb: 	psrlq	$0x20, %xmm1
    00000fd0: 	pmuludq	%xmm4, %xmm1
    00000fd4: 	pshufd	$0x8, %xmm0, %xmm0
    00000fd9: 	pshufd	$0x8, %xmm1, %xmm1
    00000fde: 	punpckldq	%xmm1, %xmm0
    00000fe2: 	movdqa	0x30(%rsp), %xmm1
    00000fe8: 	pmuludq	%xmm0, %xmm1
    00000fec: 	psrlq	$0x20, %xmm0
    00000ff1: 	pmuludq	%xmm3, %xmm0
    00000ff5: 	pshufd	$0x8, %xmm1, %xmm1
    00000ffa: 	pshufd	$0x8, %xmm0, %xmm0
    00000fff: 	punpckldq	%xmm0, %xmm1
    00001003: 	paddd	%xmm1, %xmm2
    00001007: 	cmpq	%rax, %r15
    0000100a: 	jne	.Ltmp2783 # Offset: 4106
    00001010: 	cvttsd2si	init_value(%rip), %edx
    00001018: 	movdqa	%xmm2, %xmm0
    0000101c: 	psrldq	$0x8, %xmm0
    00001021: 	paddd	%xmm0, %xmm2
    00001025: 	movdqa	%xmm2, %xmm0
    00001029: 	imull	%ebp, %edx
    0000102c: 	psrldq	$0x4, %xmm0
    00001031: 	imull	0x40(%rsp), %edx
    00001036: 	paddd	%xmm0, %xmm2
    0000103a: 	movd	%xmm2, %eax
    0000103e: 	imull	%r14d, %edx
    00001042: 	imull	0x44(%rsp), %edx
    00001047: 	imull	$0x1f40, %edx, %edx
    0000104d: 	cmpl	%eax, %edx
    0000104f: 	je	.Ltmp2784 # Offset: 4175
    00001051: 	movl	current_test(%rip), %edx
    00001057: 	movq	%r12, %rsi
    0000105a: 	movl	$0x1, %edi
    0000105f: 	xorl	%eax, %eax
    00001061: 	callq	__printf_chk@PLT # Offset: 4193
    00001066: 	movl	iterations(%rip), %ecx
.Ltmp2784:
    0000106c: 	addl	$0x1, %ebx
    0000106f: 	cmpl	%ecx, %ebx
    00001071: 	jl	.Ltmp2785 # Offset: 4209
.Ltmp2782:
    00001077: 	movq	0x50(%rsp), %rsi
    0000107c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001083: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4227
    00001088: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000108f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001096: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000109d: 	je	.Ltmp2786 # Offset: 4253
.Ltmp2926:
    000010a3: 	movq	-0x20(%rax), %r12
    000010a7: 	callq	clock@PLT # Offset: 4263
    000010ac: 	pxor	%xmm0, %xmm0
    000010b0: 	movq	%rax, end_time(%rip)
    000010b7: 	movq	%r12, %rdi
    000010ba: 	subq	start_time(%rip), %rax
    000010c1: 	cvtsi2sd	%rax, %xmm0
    000010c6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000010ce: 	callq	_Z13record_resultdPKc # Offset: 4302
    000010d3: 	movq	0x140(%rsp), %rdi
    000010db: 	cmpq	0x58(%rsp), %rdi
    000010e0: 	je	.Ltmp2787 # Offset: 4320
    000010e2: 	movq	0x150(%rsp), %rax
    000010ea: 	leaq	0x1(%rax), %rsi
    000010ee: 	callq	_ZdlPvm@PLT # Offset: 4334
.Ltmp2787:
    000010f3: 	movq	0x48(%rsp), %rsi
    000010f8: 	movq	0x50(%rsp), %rdi
    000010fd: 	leaq	DATAat0x3d347(%rip), %rdx
    00001104: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4356
    00001109: 	callq	clock@PLT # Offset: 4361
    0000110e: 	movl	iterations(%rip), %edi
    00001114: 	xorl	%ebx, %ebx
    00001116: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000111d: 	movq	%rax, start_time(%rip)
    00001124: 	testl	%edi, %edi
    00001126: 	jle	.Ltmp2788 # Offset: 4390
    00001128: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2791:
    00001130: 	movq	%r13, %rcx
    00001133: 	xorl	%esi, %esi
    00001135: 	nopl	(%rax) # Size: 3
.Ltmp2789:
    00001138: 	movl	(%rcx), %eax
    0000113a: 	addq	$0x4, %rcx
    0000113e: 	cltd
    0000113f: 	idivl	%ebp
    00001141: 	addl	%eax, %esi
    00001143: 	cmpq	%r15, %rcx
    00001146: 	jne	.Ltmp2789 # Offset: 4422
    00001148: 	cvttsd2si	init_value(%rip), %eax
    00001150: 	cltd
    00001151: 	idivl	%ebp
    00001153: 	imull	$0x1f40, %eax, %eax
    00001159: 	cmpl	%eax, %esi
    0000115b: 	je	.Ltmp2790 # Offset: 4443
    0000115d: 	movl	current_test(%rip), %edx
    00001163: 	movq	%r12, %rsi
    00001166: 	movl	$0x1, %edi
    0000116b: 	xorl	%eax, %eax
    0000116d: 	callq	__printf_chk@PLT # Offset: 4461
    00001172: 	movl	iterations(%rip), %edi
.Ltmp2790:
    00001178: 	addl	$0x1, %ebx
    0000117b: 	cmpl	%edi, %ebx
    0000117d: 	jl	.Ltmp2791 # Offset: 4477
.Ltmp2788:
    0000117f: 	movq	0x50(%rsp), %rsi
    00001184: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000118b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4491
    00001190: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001197: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000119e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011a5: 	je	.Ltmp2792 # Offset: 4517
.Ltmp2925:
    000011ab: 	movq	-0x20(%rax), %r12
    000011af: 	callq	clock@PLT # Offset: 4527
    000011b4: 	pxor	%xmm0, %xmm0
    000011b8: 	movq	%rax, end_time(%rip)
    000011bf: 	movq	%r12, %rdi
    000011c2: 	subq	start_time(%rip), %rax
    000011c9: 	cvtsi2sd	%rax, %xmm0
    000011ce: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000011d6: 	callq	_Z13record_resultdPKc # Offset: 4566
    000011db: 	movq	0x140(%rsp), %rdi
    000011e3: 	cmpq	0x58(%rsp), %rdi
    000011e8: 	je	.Ltmp2793 # Offset: 4584
    000011ea: 	movq	0x150(%rsp), %rax
    000011f2: 	leaq	0x1(%rax), %rsi
    000011f6: 	callq	_ZdlPvm@PLT # Offset: 4598
.Ltmp2793:
    000011fb: 	movq	0x48(%rsp), %rsi
    00001200: 	movq	0x50(%rsp), %rdi
    00001205: 	leaq	DATAat0x3d358(%rip), %rdx
    0000120c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4620
    00001211: 	callq	clock@PLT # Offset: 4625
    00001216: 	movl	iterations(%rip), %edi
    0000121c: 	xorl	%ebx, %ebx
    0000121e: 	leaq	DATAat0x3d1d8(%rip), %r12
    00001225: 	movq	%rax, start_time(%rip)
    0000122c: 	testl	%edi, %edi
    0000122e: 	jle	.Ltmp2794 # Offset: 4654
.Ltmp2797:
    00001230: 	movl	0x40(%rsp), %r8d
    00001235: 	movl	0x44(%rsp), %r9d
    0000123a: 	movq	%r13, %rcx
    0000123d: 	xorl	%esi, %esi
    0000123f: 	nop # Size: 1
.Ltmp2795:
    00001240: 	movl	(%rcx), %eax
    00001242: 	addq	$0x4, %rcx
    00001246: 	cltd
    00001247: 	idivl	%ebp
    00001249: 	cltd
    0000124a: 	idivl	%r8d
    0000124d: 	cltd
    0000124e: 	idivl	%r14d
    00001251: 	cltd
    00001252: 	idivl	%r9d
    00001255: 	addl	%eax, %esi
    00001257: 	cmpq	%rcx, %r15
    0000125a: 	jne	.Ltmp2795 # Offset: 4698
    0000125c: 	cvttsd2si	init_value(%rip), %eax
    00001264: 	cltd
    00001265: 	idivl	%ebp
    00001267: 	cltd
    00001268: 	idivl	0x40(%rsp)
    0000126c: 	cltd
    0000126d: 	idivl	%r14d
    00001270: 	cltd
    00001271: 	idivl	0x44(%rsp)
    00001275: 	imull	$0x1f40, %eax, %eax
    0000127b: 	cmpl	%eax, %esi
    0000127d: 	je	.Ltmp2796 # Offset: 4733
    0000127f: 	movl	current_test(%rip), %edx
    00001285: 	movq	%r12, %rsi
    00001288: 	movl	$0x1, %edi
    0000128d: 	xorl	%eax, %eax
    0000128f: 	callq	__printf_chk@PLT # Offset: 4751
    00001294: 	movl	iterations(%rip), %edi
.Ltmp2796:
    0000129a: 	addl	$0x1, %ebx
    0000129d: 	cmpl	%edi, %ebx
    0000129f: 	jl	.Ltmp2797 # Offset: 4767
.Ltmp2794:
    000012a1: 	movq	0x50(%rsp), %rsi
    000012a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4781
    000012b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012c7: 	je	.Ltmp2798 # Offset: 4807
.Ltmp2924:
    000012cd: 	movq	-0x20(%rax), %r12
    000012d1: 	callq	clock@PLT # Offset: 4817
    000012d6: 	pxor	%xmm0, %xmm0
    000012da: 	movq	%rax, end_time(%rip)
    000012e1: 	movq	%r12, %rdi
    000012e4: 	subq	start_time(%rip), %rax
    000012eb: 	cvtsi2sd	%rax, %xmm0
    000012f0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000012f8: 	callq	_Z13record_resultdPKc # Offset: 4856
    000012fd: 	movq	0x140(%rsp), %rdi
    00001305: 	cmpq	0x58(%rsp), %rdi
    0000130a: 	je	.Ltmp2799 # Offset: 4874
    0000130c: 	movq	0x150(%rsp), %rax
    00001314: 	leaq	0x1(%rax), %rsi
    00001318: 	callq	_ZdlPvm@PLT # Offset: 4888
.Ltmp2799:
    0000131d: 	movq	0x48(%rsp), %rsi
    00001322: 	movq	0x50(%rsp), %rdi
    00001327: 	leaq	DATAat0x3d373(%rip), %rdx
    0000132e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4910
    00001333: 	callq	clock@PLT # Offset: 4915
    00001338: 	movl	iterations(%rip), %ecx
    0000133e: 	movq	%rax, start_time(%rip)
    00001345: 	testl	%ecx, %ecx
    00001347: 	jle	.Ltmp2800 # Offset: 4935
    0000134d: 	movl	%ebp, %eax
    0000134f: 	xorl	%ebx, %ebx
    00001351: 	cltd
    00001352: 	idivl	0x40(%rsp)
    00001356: 	cltd
    00001357: 	idivl	%r14d
    0000135a: 	cltd
    0000135b: 	idivl	0x44(%rsp)
    0000135f: 	movd	%eax, %xmm4
    00001363: 	movl	%eax, %r12d
    00001366: 	pshufd	$0x0, %xmm4, %xmm7
    0000136b: 	movaps	%xmm7, (%rsp)
    0000136f: 	nop # Size: 1
.Ltmp2803:
    00001370: 	movq	%r13, %rax
    00001373: 	pxor	%xmm0, %xmm0
    00001377: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2801:
    00001380: 	movdqa	(%rsp), %xmm1
    00001385: 	paddd	(%rax), %xmm1
    00001389: 	addq	$0x10, %rax
    0000138d: 	paddd	%xmm1, %xmm0
    00001391: 	cmpq	%r15, %rax
    00001394: 	jne	.Ltmp2801 # Offset: 5012
    00001396: 	cvttsd2si	init_value(%rip), %edx
    0000139e: 	movdqa	%xmm0, %xmm1
    000013a2: 	psrldq	$0x8, %xmm1
    000013a7: 	paddd	%xmm1, %xmm0
    000013ab: 	movdqa	%xmm0, %xmm1
    000013af: 	addl	%r12d, %edx
    000013b2: 	psrldq	$0x4, %xmm1
    000013b7: 	imull	$0x1f40, %edx, %edx
    000013bd: 	paddd	%xmm1, %xmm0
    000013c1: 	movd	%xmm0, %eax
    000013c5: 	cmpl	%eax, %edx
    000013c7: 	je	.Ltmp2802 # Offset: 5063
    000013c9: 	movl	current_test(%rip), %edx
    000013cf: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000013d6: 	movl	$0x1, %edi
    000013db: 	xorl	%eax, %eax
    000013dd: 	callq	__printf_chk@PLT # Offset: 5085
    000013e2: 	movl	iterations(%rip), %ecx
.Ltmp2802:
    000013e8: 	addl	$0x1, %ebx
    000013eb: 	cmpl	%ecx, %ebx
    000013ed: 	jl	.Ltmp2803 # Offset: 5101
.Ltmp2800:
    000013ef: 	movq	0x50(%rsp), %rsi
    000013f4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013fb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5115
    00001400: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001407: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000140e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001415: 	je	.Ltmp2804 # Offset: 5141
.Ltmp2923:
    0000141b: 	movq	-0x20(%rax), %r12
    0000141f: 	callq	clock@PLT # Offset: 5151
    00001424: 	pxor	%xmm0, %xmm0
    00001428: 	movq	%rax, end_time(%rip)
    0000142f: 	movq	%r12, %rdi
    00001432: 	subq	start_time(%rip), %rax
    00001439: 	cvtsi2sd	%rax, %xmm0
    0000143e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001446: 	callq	_Z13record_resultdPKc # Offset: 5190
    0000144b: 	movq	0x140(%rsp), %rdi
    00001453: 	cmpq	0x58(%rsp), %rdi
    00001458: 	je	.Ltmp2805 # Offset: 5208
    0000145a: 	movq	0x150(%rsp), %rax
    00001462: 	leaq	0x1(%rax), %rsi
    00001466: 	callq	_ZdlPvm@PLT # Offset: 5222
.Ltmp2805:
    0000146b: 	movq	0x48(%rsp), %rsi
    00001470: 	movq	0x50(%rsp), %rdi
    00001475: 	leaq	DATAat0x3d38f(%rip), %rdx
    0000147c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5244
    00001481: 	callq	clock@PLT # Offset: 5249
    00001486: 	movl	iterations(%rip), %ecx
    0000148c: 	movq	%rax, start_time(%rip)
    00001493: 	testl	%ecx, %ecx
    00001495: 	jle	.Ltmp2806 # Offset: 5269
    0000149b: 	movl	0x40(%rsp), %eax
    0000149f: 	movl	%ebp, %r12d
    000014a2: 	xorl	%ebx, %ebx
    000014a4: 	imull	%r14d, %eax
    000014a8: 	cltd
    000014a9: 	idivl	0x44(%rsp)
    000014ad: 	subl	%eax, %r12d
    000014b0: 	movd	%r12d, %xmm6
    000014b5: 	pshufd	$0x0, %xmm6, %xmm5
    000014ba: 	movaps	%xmm5, (%rsp)
    000014be: 	nop # Size: 2
.Ltmp2809:
    000014c0: 	movq	%r13, %rax
    000014c3: 	pxor	%xmm0, %xmm0
    000014c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2807:
    000014d0: 	movdqa	(%rsp), %xmm1
    000014d5: 	paddd	(%rax), %xmm1
    000014d9: 	addq	$0x10, %rax
    000014dd: 	paddd	%xmm1, %xmm0
    000014e1: 	cmpq	%r15, %rax
    000014e4: 	jne	.Ltmp2807 # Offset: 5348
    000014e6: 	cvttsd2si	init_value(%rip), %edx
    000014ee: 	movdqa	%xmm0, %xmm1
    000014f2: 	psrldq	$0x8, %xmm1
    000014f7: 	paddd	%xmm1, %xmm0
    000014fb: 	movdqa	%xmm0, %xmm1
    000014ff: 	addl	%r12d, %edx
    00001502: 	psrldq	$0x4, %xmm1
    00001507: 	imull	$0x1f40, %edx, %edx
    0000150d: 	paddd	%xmm1, %xmm0
    00001511: 	movd	%xmm0, %eax
    00001515: 	cmpl	%eax, %edx
    00001517: 	je	.Ltmp2808 # Offset: 5399
    00001519: 	movl	current_test(%rip), %edx
    0000151f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001526: 	movl	$0x1, %edi
    0000152b: 	xorl	%eax, %eax
    0000152d: 	callq	__printf_chk@PLT # Offset: 5421
    00001532: 	movl	iterations(%rip), %ecx
.Ltmp2808:
    00001538: 	addl	$0x1, %ebx
    0000153b: 	cmpl	%ecx, %ebx
    0000153d: 	jl	.Ltmp2809 # Offset: 5437
.Ltmp2806:
    0000153f: 	movq	0x50(%rsp), %rsi
    00001544: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000154b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5451
    00001550: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001557: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000155e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001565: 	je	.Ltmp2810 # Offset: 5477
.Ltmp2922:
    0000156b: 	movq	-0x20(%rax), %r12
    0000156f: 	callq	clock@PLT # Offset: 5487
    00001574: 	pxor	%xmm0, %xmm0
    00001578: 	movq	%rax, end_time(%rip)
    0000157f: 	movq	%r12, %rdi
    00001582: 	subq	start_time(%rip), %rax
    00001589: 	cvtsi2sd	%rax, %xmm0
    0000158e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001596: 	callq	_Z13record_resultdPKc # Offset: 5526
    0000159b: 	movq	0x140(%rsp), %rdi
    000015a3: 	cmpq	0x58(%rsp), %rdi
    000015a8: 	je	.Ltmp2811 # Offset: 5544
    000015aa: 	movq	0x150(%rsp), %rax
    000015b2: 	leaq	0x1(%rax), %rsi
    000015b6: 	callq	_ZdlPvm@PLT # Offset: 5558
.Ltmp2811:
    000015bb: 	movq	0x48(%rsp), %rsi
    000015c0: 	movq	0x50(%rsp), %rdi
    000015c5: 	leaq	DATAat0x3d3a8(%rip), %rdx
    000015cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5580
    000015d1: 	callq	clock@PLT # Offset: 5585
    000015d6: 	movl	iterations(%rip), %ecx
    000015dc: 	movq	%rax, start_time(%rip)
    000015e3: 	testl	%ecx, %ecx
    000015e5: 	jle	.Ltmp2812 # Offset: 5605
    000015eb: 	movl	0x40(%rsp), %eax
    000015ef: 	movd	%ebp, %xmm4
    000015f3: 	xorl	%ebx, %ebx
    000015f5: 	pshufd	$0x0, %xmm4, %xmm7
    000015fa: 	imull	%r14d, %eax
    000015fe: 	movaps	%xmm7, (%rsp)
    00001602: 	cltd
    00001603: 	idivl	0x44(%rsp)
    00001607: 	movd	%eax, %xmm6
    0000160b: 	movl	%eax, %r12d
    0000160e: 	pshufd	$0x0, %xmm6, %xmm5
    00001613: 	movaps	%xmm5, 0x10(%rsp)
    00001618: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2815:
    00001620: 	movq	%r13, %rax
    00001623: 	pxor	%xmm1, %xmm1
    00001627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2813:
    00001630: 	movdqa	(%rsp), %xmm0
    00001635: 	paddd	(%rax), %xmm0
    00001639: 	addq	$0x10, %rax
    0000163d: 	psubd	0x10(%rsp), %xmm0
    00001643: 	paddd	%xmm0, %xmm1
    00001647: 	cmpq	%rax, %r15
    0000164a: 	jne	.Ltmp2813 # Offset: 5706
    0000164c: 	cvttsd2si	init_value(%rip), %edx
    00001654: 	movdqa	%xmm1, %xmm0
    00001658: 	psrldq	$0x8, %xmm0
    0000165d: 	paddd	%xmm0, %xmm1
    00001661: 	movdqa	%xmm1, %xmm0
    00001665: 	addl	%ebp, %edx
    00001667: 	psrldq	$0x4, %xmm0
    0000166c: 	subl	%r12d, %edx
    0000166f: 	paddd	%xmm0, %xmm1
    00001673: 	imull	$0x1f40, %edx, %edx
    00001679: 	movd	%xmm1, %eax
    0000167d: 	cmpl	%eax, %edx
    0000167f: 	je	.Ltmp2814 # Offset: 5759
    00001681: 	movl	current_test(%rip), %edx
    00001687: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000168e: 	movl	$0x1, %edi
    00001693: 	xorl	%eax, %eax
    00001695: 	callq	__printf_chk@PLT # Offset: 5781
    0000169a: 	movl	iterations(%rip), %ecx
.Ltmp2814:
    000016a0: 	addl	$0x1, %ebx
    000016a3: 	cmpl	%ecx, %ebx
    000016a5: 	jl	.Ltmp2815 # Offset: 5797
.Ltmp2812:
    000016ab: 	movq	0x50(%rsp), %rsi
    000016b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000016b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5815
    000016bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016c3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016ca: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016d1: 	je	.Ltmp2816 # Offset: 5841
.Ltmp2921:
    000016d7: 	movq	-0x20(%rax), %r12
    000016db: 	callq	clock@PLT # Offset: 5851
    000016e0: 	pxor	%xmm0, %xmm0
    000016e4: 	movq	%rax, end_time(%rip)
    000016eb: 	movq	%r12, %rdi
    000016ee: 	subq	start_time(%rip), %rax
    000016f5: 	cvtsi2sd	%rax, %xmm0
    000016fa: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001702: 	callq	_Z13record_resultdPKc # Offset: 5890
    00001707: 	movq	0x140(%rsp), %rdi
    0000170f: 	cmpq	0x58(%rsp), %rdi
    00001714: 	je	.Ltmp2817 # Offset: 5908
    00001716: 	movq	0x150(%rsp), %rax
    0000171e: 	leaq	0x1(%rax), %rsi
    00001722: 	callq	_ZdlPvm@PLT # Offset: 5922
.Ltmp2817:
    00001727: 	movl	0x44(%rsp), %r8d
    0000172c: 	movl	0x40(%rsp), %edx
    00001730: 	movl	%r14d, %ecx
    00001733: 	movl	%ebp, %esi
    00001735: 	movq	%r13, %rdi
    00001738: 	callq	_Z20TestLoopsIntegerOnlyIiENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 5944
    0000173d: 	movq	0x48(%rsp), %rsi
    00001742: 	leaq	0xe0(%rsp), %rdi
    0000174a: 	leaq	DATAat0x3d3c2(%rip), %rdx
    00001751: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5969
    00001756: 	movl	iterations(%rip), %edx
    0000175c: 	xorl	%r8d, %r8d
    0000175f: 	xorl	%ecx, %ecx
    00001761: 	movl	$0x1f40, %esi
    00001766: 	movq	0xe0(%rsp), %rdi
    0000176e: 	callq	_Z9summarizePKciiii # Offset: 5998
    00001773: 	movsd	init_value(%rip), %xmm1
    0000177b: 	cvttsd2si	%xmm1, %eax
    0000177f: 	movd	%eax, %xmm0
    00001783: 	movq	%r13, %rax
    00001786: 	pshufd	$0xe0, %xmm0, %xmm2
    0000178b: 	pshufd	$0x0, %xmm0, %xmm0
.Ltmp2818:
    00001790: 	movaps	%xmm0, (%rax)
    00001793: 	addq	$0x10, %rax
    00001797: 	cmpq	%r15, %rax
    0000179a: 	jne	.Ltmp2818 # Offset: 6042
    0000179c: 	addsd	DATAat0x3d700(%rip), %xmm1
    000017a4: 	movq	0x48(%rsp), %rsi
    000017a9: 	leaq	0x120(%rsp), %rbp
    000017b1: 	movq	%xmm2, 0x80(%rsp)
    000017ba: 	movq	%xmm2, 0x98(%rsp)
    000017c3: 	movq	%rbp, %rdi
    000017c6: 	movq	%xmm2, 0xac(%rsp)
    000017cf: 	cvttsd2si	%xmm1, %eax
    000017d3: 	movslq	%eax, %rdx
    000017d6: 	imulq	$0x51eb851f, %rdx, %rdx
    000017dd: 	sarq	$0x24, %rdx
    000017e1: 	movq	%rdx, %rcx
    000017e4: 	cltd
    000017e5: 	subl	%edx, %ecx
    000017e7: 	imull	$0x32, %ecx, %edx
    000017ea: 	subl	%edx, %eax
    000017ec: 	leaq	DATAat0x3d3d2(%rip), %rdx
    000017f3: 	movl	%eax, (%rsp)
    000017f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6134
    000017fb: 	callq	clock@PLT # Offset: 6139
    00001800: 	movl	iterations(%rip), %ecx
    00001806: 	movq	%rax, start_time(%rip)
    0000180d: 	testl	%ecx, %ecx
    0000180f: 	jle	.Ltmp2819 # Offset: 6159
    00001815: 	movslq	(%rsp), %rax
    00001819: 	movq	0x50(%rsp), %rdi
    0000181e: 	xorl	%ebx, %ebx
    00001820: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001827: 	leaq	(%rdi,%rax,4), %r12
    0000182b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2822:
    00001830: 	cvttsd2si	init_value(%rip), %edx
    00001838: 	movq	%r13, %rax
    0000183b: 	pxor	%xmm0, %xmm0
    0000183f: 	imull	$0x1f40, %edx, %edx
    00001845: 	nopl	(%rax) # Size: 3
.Ltmp2820:
    00001848: 	paddd	(%rax), %xmm0
    0000184c: 	addq	$0x10, %rax
    00001850: 	cmpq	%rax, %r15
    00001853: 	jne	.Ltmp2820 # Offset: 6227
    00001855: 	movdqa	%xmm0, %xmm1
    00001859: 	psrldq	$0x8, %xmm1
    0000185e: 	paddd	%xmm1, %xmm0
    00001862: 	movdqa	%xmm0, %xmm1
    00001866: 	psrldq	$0x4, %xmm1
    0000186b: 	paddd	%xmm1, %xmm0
    0000186f: 	movd	%xmm0, %eax
    00001873: 	movd	%xmm0, (%r12)
    00001879: 	cmpl	%eax, %edx
    0000187b: 	je	.Ltmp2821 # Offset: 6267
    0000187d: 	movq	0x120(%rsp), %rdx
    00001885: 	movq	%r14, %rsi
    00001888: 	movl	$0x1, %edi
    0000188d: 	xorl	%eax, %eax
    0000188f: 	callq	__printf_chk@PLT # Offset: 6287
    00001894: 	movl	iterations(%rip), %ecx
.Ltmp2821:
    0000189a: 	addl	$0x1, %ebx
    0000189d: 	cmpl	%ecx, %ebx
    0000189f: 	jl	.Ltmp2822 # Offset: 6303
.Ltmp2819:
    000018a1: 	movq	%rbp, %rsi
    000018a4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6315
    000018b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018b7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018c5: 	je	.Ltmp2823 # Offset: 6341
.Ltmp2920:
    000018cb: 	movq	-0x20(%rax), %r12
    000018cf: 	callq	clock@PLT # Offset: 6351
    000018d4: 	pxor	%xmm0, %xmm0
    000018d8: 	movq	%rax, end_time(%rip)
    000018df: 	movq	%r12, %rdi
    000018e2: 	subq	start_time(%rip), %rax
    000018e9: 	cvtsi2sd	%rax, %xmm0
    000018ee: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000018f6: 	callq	_Z13record_resultdPKc # Offset: 6390
    000018fb: 	movq	0x120(%rsp), %rdi
    00001903: 	leaq	0x130(%rsp), %rbx
    0000190b: 	cmpq	%rbx, %rdi
    0000190e: 	je	.Ltmp2824 # Offset: 6414
    00001910: 	movq	0x130(%rsp), %rax
    00001918: 	leaq	0x1(%rax), %rsi
    0000191c: 	callq	_ZdlPvm@PLT # Offset: 6428
.Ltmp2824:
    00001921: 	movq	0x48(%rsp), %rsi
    00001926: 	leaq	DATAat0x3d3eb(%rip), %rdx
    0000192d: 	movq	%rbp, %rdi
    00001930: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6448
    00001935: 	callq	clock@PLT # Offset: 6453
    0000193a: 	movl	iterations(%rip), %ecx
    00001940: 	movq	%rax, start_time(%rip)
    00001947: 	testl	%ecx, %ecx
    00001949: 	jle	.Ltmp2825 # Offset: 6473
    0000194f: 	movslq	(%rsp), %rax
    00001953: 	movq	0x50(%rsp), %rdi
    00001958: 	xorl	%r12d, %r12d
    0000195b: 	leaq	(%rdi,%rax,4), %r14
    0000195f: 	nop # Size: 1
.Ltmp2828:
    00001960: 	cvttsd2si	init_value(%rip), %edx
    00001968: 	movq	%r13, %rax
    0000196b: 	pxor	%xmm0, %xmm0
    0000196f: 	imull	$0x1f40, %edx, %edx
    00001975: 	nopl	(%rax) # Size: 3
.Ltmp2826:
    00001978: 	paddd	(%rax), %xmm0
    0000197c: 	addq	$0x10, %rax
    00001980: 	cmpq	%r15, %rax
    00001983: 	jne	.Ltmp2826 # Offset: 6531
    00001985: 	movdqa	%xmm0, %xmm1
    00001989: 	psrldq	$0x8, %xmm1
    0000198e: 	paddd	%xmm1, %xmm0
    00001992: 	movdqa	%xmm0, %xmm1
    00001996: 	psrldq	$0x4, %xmm1
    0000199b: 	paddd	%xmm1, %xmm0
    0000199f: 	movd	%xmm0, %eax
    000019a3: 	movd	%xmm0, (%r14)
    000019a8: 	cmpl	%eax, %edx
    000019aa: 	je	.Ltmp2827 # Offset: 6570
    000019ac: 	movq	0x120(%rsp), %rdx
    000019b4: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000019bb: 	movl	$0x1, %edi
    000019c0: 	xorl	%eax, %eax
    000019c2: 	callq	__printf_chk@PLT # Offset: 6594
    000019c7: 	movl	iterations(%rip), %ecx
.Ltmp2827:
    000019cd: 	addl	$0x1, %r12d
    000019d1: 	cmpl	%ecx, %r12d
    000019d4: 	jl	.Ltmp2828 # Offset: 6612
.Ltmp2825:
    000019d6: 	movq	%rbp, %rsi
    000019d9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019e0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6624
    000019e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019ec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019fa: 	je	.Ltmp2829 # Offset: 6650
.Ltmp2919:
    00001a00: 	movq	-0x20(%rax), %r12
    00001a04: 	callq	clock@PLT # Offset: 6660
    00001a09: 	pxor	%xmm0, %xmm0
    00001a0d: 	movq	%rax, end_time(%rip)
    00001a14: 	movq	%r12, %rdi
    00001a17: 	subq	start_time(%rip), %rax
    00001a1e: 	cvtsi2sd	%rax, %xmm0
    00001a23: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001a2b: 	callq	_Z13record_resultdPKc # Offset: 6699
    00001a30: 	movq	0x120(%rsp), %rdi
    00001a38: 	cmpq	%rbx, %rdi
    00001a3b: 	je	.Ltmp2830 # Offset: 6715
    00001a3d: 	movq	0x130(%rsp), %rax
    00001a45: 	leaq	0x1(%rax), %rsi
    00001a49: 	callq	_ZdlPvm@PLT # Offset: 6729
.Ltmp2830:
    00001a4e: 	movq	0x48(%rsp), %rsi
    00001a53: 	leaq	DATAat0x3d400(%rip), %rdx
    00001a5a: 	movq	%rbp, %rdi
    00001a5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6749
    00001a62: 	callq	clock@PLT # Offset: 6754
    00001a67: 	movl	iterations(%rip), %ecx
    00001a6d: 	xorl	%r12d, %r12d
    00001a70: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001a77: 	movq	%rax, start_time(%rip)
    00001a7e: 	testl	%ecx, %ecx
    00001a80: 	jle	.Ltmp2831 # Offset: 6784
    00001a82: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2834:
    00001a88: 	cvttsd2si	init_value(%rip), %edx
    00001a90: 	movq	%r13, %rax
    00001a93: 	pxor	%xmm0, %xmm0
    00001a97: 	imull	$0x1f40, %edx, %edx
    00001a9d: 	nopl	(%rax) # Size: 3
.Ltmp2832:
    00001aa0: 	paddd	(%rax), %xmm0
    00001aa4: 	addq	$0x10, %rax
    00001aa8: 	cmpq	%r15, %rax
    00001aab: 	jne	.Ltmp2832 # Offset: 6827
    00001aad: 	movdqa	%xmm0, %xmm1
    00001ab1: 	psrldq	$0x8, %xmm1
    00001ab6: 	paddd	%xmm1, %xmm0
    00001aba: 	movdqa	%xmm0, %xmm1
    00001abe: 	psrldq	$0x4, %xmm1
    00001ac3: 	paddd	%xmm1, %xmm0
    00001ac7: 	movd	%xmm0, 0x98(%rsp)
    00001ad0: 	movd	%xmm0, %eax
    00001ad4: 	cmpl	%eax, %edx
    00001ad6: 	je	.Ltmp2833 # Offset: 6870
    00001ad8: 	movq	0x120(%rsp), %rdx
    00001ae0: 	movq	%r14, %rsi
    00001ae3: 	movl	$0x1, %edi
    00001ae8: 	xorl	%eax, %eax
    00001aea: 	callq	__printf_chk@PLT # Offset: 6890
    00001aef: 	movl	iterations(%rip), %ecx
.Ltmp2833:
    00001af5: 	addl	$0x1, %r12d
    00001af9: 	cmpl	%ecx, %r12d
    00001afc: 	jl	.Ltmp2834 # Offset: 6908
.Ltmp2831:
    00001afe: 	movq	%rbp, %rsi
    00001b01: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b08: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6920
    00001b0d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b14: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b1b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b22: 	je	.Ltmp2835 # Offset: 6946
.Ltmp2918:
    00001b28: 	movq	-0x20(%rax), %r12
    00001b2c: 	callq	clock@PLT # Offset: 6956
    00001b31: 	pxor	%xmm0, %xmm0
    00001b35: 	movq	%rax, end_time(%rip)
    00001b3c: 	movq	%r12, %rdi
    00001b3f: 	subq	start_time(%rip), %rax
    00001b46: 	cvtsi2sd	%rax, %xmm0
    00001b4b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b53: 	callq	_Z13record_resultdPKc # Offset: 6995
    00001b58: 	movq	0x120(%rsp), %rdi
    00001b60: 	cmpq	%rbx, %rdi
    00001b63: 	je	.Ltmp2836 # Offset: 7011
    00001b65: 	movq	0x130(%rsp), %rax
    00001b6d: 	leaq	0x1(%rax), %rsi
    00001b71: 	callq	_ZdlPvm@PLT # Offset: 7025
.Ltmp2836:
    00001b76: 	movq	0x48(%rsp), %rsi
    00001b7b: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001b82: 	movq	%rbp, %rdi
    00001b85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7045
    00001b8a: 	callq	clock@PLT # Offset: 7050
    00001b8f: 	movl	iterations(%rip), %ecx
    00001b95: 	xorl	%r12d, %r12d
    00001b98: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001b9f: 	movq	%rax, start_time(%rip)
    00001ba6: 	testl	%ecx, %ecx
    00001ba8: 	jle	.Ltmp2837 # Offset: 7080
    00001baa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2840:
    00001bb0: 	cvttsd2si	init_value(%rip), %edx
    00001bb8: 	movq	%r13, %rax
    00001bbb: 	pxor	%xmm0, %xmm0
    00001bbf: 	imull	$0x1f40, %edx, %edx
    00001bc5: 	nopl	(%rax) # Size: 3
.Ltmp2838:
    00001bc8: 	paddd	(%rax), %xmm0
    00001bcc: 	addq	$0x10, %rax
    00001bd0: 	cmpq	%rax, %r15
    00001bd3: 	jne	.Ltmp2838 # Offset: 7123
    00001bd5: 	movdqa	%xmm0, %xmm1
    00001bd9: 	psrldq	$0x8, %xmm1
    00001bde: 	paddd	%xmm1, %xmm0
    00001be2: 	movdqa	%xmm0, %xmm1
    00001be6: 	psrldq	$0x4, %xmm1
    00001beb: 	paddd	%xmm1, %xmm0
    00001bef: 	movd	%xmm0, 0x98(%rsp)
    00001bf8: 	movd	%xmm0, %eax
    00001bfc: 	cmpl	%eax, %edx
    00001bfe: 	je	.Ltmp2839 # Offset: 7166
    00001c00: 	movq	0x120(%rsp), %rdx
    00001c08: 	movq	%r14, %rsi
    00001c0b: 	movl	$0x1, %edi
    00001c10: 	xorl	%eax, %eax
    00001c12: 	callq	__printf_chk@PLT # Offset: 7186
    00001c17: 	movl	iterations(%rip), %ecx
.Ltmp2839:
    00001c1d: 	addl	$0x1, %r12d
    00001c21: 	cmpl	%ecx, %r12d
    00001c24: 	jl	.Ltmp2840 # Offset: 7204
.Ltmp2837:
    00001c26: 	movq	%rbp, %rsi
    00001c29: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7216
    00001c35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c4a: 	je	.Ltmp2841 # Offset: 7242
.Ltmp2917:
    00001c50: 	movq	-0x20(%rax), %r12
    00001c54: 	callq	clock@PLT # Offset: 7252
    00001c59: 	pxor	%xmm0, %xmm0
    00001c5d: 	movq	%rax, end_time(%rip)
    00001c64: 	movq	%r12, %rdi
    00001c67: 	subq	start_time(%rip), %rax
    00001c6e: 	cvtsi2sd	%rax, %xmm0
    00001c73: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001c7b: 	callq	_Z13record_resultdPKc # Offset: 7291
    00001c80: 	movq	0x120(%rsp), %rdi
    00001c88: 	cmpq	%rbx, %rdi
    00001c8b: 	je	.Ltmp2842 # Offset: 7307
    00001c8d: 	movq	0x130(%rsp), %rax
    00001c95: 	leaq	0x1(%rax), %rsi
    00001c99: 	callq	_ZdlPvm@PLT # Offset: 7321
.Ltmp2842:
    00001c9e: 	movq	0x48(%rsp), %rsi
    00001ca3: 	leaq	DATAat0x3d430(%rip), %rdx
    00001caa: 	movq	%rbp, %rdi
    00001cad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7341
    00001cb2: 	movl	(%rsp), %edx
    00001cb5: 	movq	%rbp, %rcx
    00001cb8: 	movl	$0x1f40, %esi
    00001cbd: 	movq	%r13, %rdi
    00001cc0: 	callq	_Z23test_array_const_in_optIiEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7360
    00001cc5: 	movq	0x120(%rsp), %rdi
    00001ccd: 	cmpq	%rbx, %rdi
    00001cd0: 	je	.Ltmp2843 # Offset: 7376
    00001cd2: 	movq	0x130(%rsp), %rax
    00001cda: 	leaq	0x1(%rax), %rsi
    00001cde: 	callq	_ZdlPvm@PLT # Offset: 7390
.Ltmp2843:
    00001ce3: 	movq	0x48(%rsp), %rsi
    00001ce8: 	leaq	DATAat0x3d448(%rip), %rdx
    00001cef: 	movq	%rbp, %rdi
    00001cf2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7410
    00001cf7: 	callq	clock@PLT # Offset: 7415
    00001cfc: 	movl	iterations(%rip), %r8d
    00001d03: 	movq	%rax, start_time(%rip)
    00001d0a: 	testl	%r8d, %r8d
    00001d0d: 	jle	.Ltmp2844 # Offset: 7437
    00001d0f: 	movslq	(%rsp), %rax
    00001d13: 	xorl	%r12d, %r12d
    00001d16: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001d1d: 	leaq	(%r13,%rax,4), %r14
    00001d22: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2903:
    00001d28: 	cvttsd2si	init_value(%rip), %eax
    00001d30: 	cmpl	(%r14), %eax
    00001d33: 	jne	.Ltmp2845 # Offset: 7475
.Ltmp2844:
    00001d39: 	movq	%rbp, %rsi
    00001d3c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d43: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7491
    00001d48: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d4f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d56: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d5d: 	je	.Ltmp2846 # Offset: 7517
.Ltmp2916:
    00001d63: 	movq	-0x20(%rax), %r12
    00001d67: 	callq	clock@PLT # Offset: 7527
    00001d6c: 	pxor	%xmm0, %xmm0
    00001d70: 	movq	%rax, end_time(%rip)
    00001d77: 	movq	%r12, %rdi
    00001d7a: 	subq	start_time(%rip), %rax
    00001d81: 	cvtsi2sd	%rax, %xmm0
    00001d86: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d8e: 	callq	_Z13record_resultdPKc # Offset: 7566
    00001d93: 	movq	0x120(%rsp), %rdi
    00001d9b: 	cmpq	%rbx, %rdi
    00001d9e: 	je	.Ltmp2847 # Offset: 7582
    00001da0: 	movq	0x130(%rsp), %rax
    00001da8: 	leaq	0x1(%rax), %rsi
    00001dac: 	callq	_ZdlPvm@PLT # Offset: 7596
.Ltmp2847:
    00001db1: 	movq	0x48(%rsp), %rsi
    00001db6: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001dbd: 	movq	%rbp, %rdi
    00001dc0: 	cvttsd2si	init_value(%rip), %r14d
    00001dc9: 	movl	%r14d, 0x98(%rsp)
    00001dd1: 	movl	%r14d, 0x80(%rsp)
    00001dd9: 	movl	%r14d, 0xb0(%rsp)
    00001de1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7649
    00001de6: 	movq	0x68(%rsp), %rdi
    00001deb: 	movq	%rbp, %rdx
    00001dee: 	movl	$0x1f40, %esi
    00001df3: 	callq	_Z24test_struct_const_in_optIi13simple_structIiEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7667
    00001df8: 	movq	0x120(%rsp), %rdi
    00001e00: 	cmpq	%rbx, %rdi
    00001e03: 	je	.Ltmp2848 # Offset: 7683
    00001e05: 	movq	0x130(%rsp), %rax
    00001e0d: 	leaq	0x1(%rax), %rsi
    00001e11: 	callq	_ZdlPvm@PLT # Offset: 7697
.Ltmp2848:
    00001e16: 	movq	0x48(%rsp), %rsi
    00001e1b: 	leaq	DATAat0x3d475(%rip), %rdx
    00001e22: 	movq	%rbp, %rdi
    00001e25: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7717
    00001e2a: 	callq	clock@PLT # Offset: 7722
    00001e2f: 	movl	iterations(%rip), %edi
    00001e35: 	xorl	%r12d, %r12d
    00001e38: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001e3f: 	movq	%rax, start_time(%rip)
    00001e46: 	testl	%edi, %edi
    00001e48: 	jle	.Ltmp2849 # Offset: 7752
    00001e4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2904:
    00001e50: 	cvttsd2si	init_value(%rip), %eax
    00001e58: 	cmpl	%eax, %r14d
    00001e5b: 	jne	.Ltmp2850 # Offset: 7771
.Ltmp2849:
    00001e61: 	movq	%rbp, %rsi
    00001e64: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e6b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7787
    00001e70: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e77: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e7e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e85: 	je	.Ltmp2851 # Offset: 7813
.Ltmp2915:
    00001e8b: 	movq	-0x20(%rax), %r12
    00001e8f: 	callq	clock@PLT # Offset: 7823
    00001e94: 	pxor	%xmm0, %xmm0
    00001e98: 	movq	%rax, end_time(%rip)
    00001e9f: 	movq	%r12, %rdi
    00001ea2: 	subq	start_time(%rip), %rax
    00001ea9: 	cvtsi2sd	%rax, %xmm0
    00001eae: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001eb6: 	callq	_Z13record_resultdPKc # Offset: 7862
    00001ebb: 	movq	0x120(%rsp), %rdi
    00001ec3: 	cmpq	%rbx, %rdi
    00001ec6: 	je	.Ltmp2852 # Offset: 7878
    00001ec8: 	movq	0x130(%rsp), %rax
    00001ed0: 	leaq	0x1(%rax), %rsi
    00001ed4: 	callq	_ZdlPvm@PLT # Offset: 7892
.Ltmp2852:
    00001ed9: 	movq	0x48(%rsp), %rsi
    00001ede: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001ee5: 	movq	%rbp, %rdi
    00001ee8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7912
    00001eed: 	callq	clock@PLT # Offset: 7917
    00001ef2: 	movl	iterations(%rip), %esi
    00001ef8: 	movq	%rax, start_time(%rip)
    00001eff: 	testl	%esi, %esi
    00001f01: 	jle	.Ltmp2853 # Offset: 7937
    00001f03: 	movslq	(%rsp), %rax
    00001f07: 	movl	0x7f0c(%rsp), %edx
    00001f0e: 	movl	%edx, 0x140(%rsp,%rax,4)
.Ltmp2853:
    00001f15: 	movq	%rbp, %rsi
    00001f18: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f1f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7967
    00001f24: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f2b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f32: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f39: 	je	.Ltmp2854 # Offset: 7993
.Ltmp2914:
    00001f3f: 	movq	-0x20(%rax), %r12
    00001f43: 	callq	clock@PLT # Offset: 8003
    00001f48: 	pxor	%xmm0, %xmm0
    00001f4c: 	movq	%rax, end_time(%rip)
    00001f53: 	movq	%r12, %rdi
    00001f56: 	subq	start_time(%rip), %rax
    00001f5d: 	cvtsi2sd	%rax, %xmm0
    00001f62: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f6a: 	callq	_Z13record_resultdPKc # Offset: 8042
    00001f6f: 	movq	0x120(%rsp), %rdi
    00001f77: 	cmpq	%rbx, %rdi
    00001f7a: 	je	.Ltmp2855 # Offset: 8058
    00001f7c: 	movq	0x130(%rsp), %rax
    00001f84: 	leaq	0x1(%rax), %rsi
    00001f88: 	callq	_ZdlPvm@PLT # Offset: 8072
.Ltmp2855:
    00001f8d: 	movq	0x48(%rsp), %rsi
    00001f92: 	leaq	DATAat0x3d49d(%rip), %rdx
    00001f99: 	movq	%rbp, %rdi
    00001f9c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8092
    00001fa1: 	callq	clock@PLT # Offset: 8097
    00001fa6: 	movl	iterations(%rip), %ecx
    00001fac: 	movq	%rax, start_time(%rip)
    00001fb3: 	testl	%ecx, %ecx
    00001fb5: 	jle	.Ltmp2856 # Offset: 8117
    00001fb7: 	movslq	(%rsp), %r13
    00001fbb: 	movl	0x7f0c(%rsp), %eax
    00001fc2: 	movl	%eax, 0x140(%rsp,%r13,4)
.Ltmp2856:
    00001fca: 	movq	%rbp, %rsi
    00001fcd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fd4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8148
    00001fd9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fe0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fe7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fee: 	je	.Ltmp2857 # Offset: 8174
.Ltmp2913:
    00001ff4: 	movq	-0x20(%rax), %r12
    00001ff8: 	callq	clock@PLT # Offset: 8184
    00001ffd: 	pxor	%xmm0, %xmm0
    00002001: 	movq	%rax, end_time(%rip)
    00002008: 	movq	%r12, %rdi
    0000200b: 	subq	start_time(%rip), %rax
    00002012: 	cvtsi2sd	%rax, %xmm0
    00002017: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000201f: 	callq	_Z13record_resultdPKc # Offset: 8223
    00002024: 	movq	0x120(%rsp), %rdi
    0000202c: 	cmpq	%rbx, %rdi
    0000202f: 	je	.Ltmp2858 # Offset: 8239
    00002031: 	movq	0x130(%rsp), %rax
    00002039: 	leaq	0x1(%rax), %rsi
    0000203d: 	callq	_ZdlPvm@PLT # Offset: 8253
.Ltmp2858:
    00002042: 	movq	0x48(%rsp), %rsi
    00002047: 	leaq	DATAat0x3d4ac(%rip), %rdx
    0000204e: 	movq	%rbp, %rdi
    00002051: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8273
    00002056: 	callq	clock@PLT # Offset: 8278
    0000205b: 	movl	iterations(%rip), %edx
    00002061: 	movq	%rax, start_time(%rip)
    00002068: 	testl	%edx, %edx
    0000206a: 	jle	.Ltmp2859 # Offset: 8298
    0000206c: 	movl	0x7f0c(%rsp), %eax
    00002073: 	movl	%eax, 0x98(%rsp)
.Ltmp2859:
    0000207a: 	movq	%rbp, %rsi
    0000207d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002084: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8324
    00002089: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002090: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002097: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000209e: 	je	.Ltmp2860 # Offset: 8350
.Ltmp2912:
    000020a4: 	movq	-0x20(%rax), %r12
    000020a8: 	callq	clock@PLT # Offset: 8360
    000020ad: 	pxor	%xmm0, %xmm0
    000020b1: 	movq	%rax, end_time(%rip)
    000020b8: 	movq	%r12, %rdi
    000020bb: 	subq	start_time(%rip), %rax
    000020c2: 	cvtsi2sd	%rax, %xmm0
    000020c7: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000020cf: 	callq	_Z13record_resultdPKc # Offset: 8399
    000020d4: 	movq	0x120(%rsp), %rdi
    000020dc: 	cmpq	%rbx, %rdi
    000020df: 	je	.Ltmp2861 # Offset: 8415
    000020e1: 	movq	0x130(%rsp), %rax
    000020e9: 	leaq	0x1(%rax), %rsi
    000020ed: 	callq	_ZdlPvm@PLT # Offset: 8429
.Ltmp2861:
    000020f2: 	movq	0x48(%rsp), %rsi
    000020f7: 	leaq	DATAat0x3d4c0(%rip), %rdx
    000020fe: 	movq	%rbp, %rdi
    00002101: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8449
    00002106: 	callq	clock@PLT # Offset: 8454
    0000210b: 	movq	%rax, start_time(%rip)
    00002112: 	movl	iterations(%rip), %eax
    00002118: 	testl	%eax, %eax
    0000211a: 	jle	.Ltmp2862 # Offset: 8474
    0000211c: 	movl	0x7f0c(%rsp), %eax
    00002123: 	movl	%eax, 0x98(%rsp)
.Ltmp2862:
    0000212a: 	movq	%rbp, %rsi
    0000212d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002134: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8500
    00002139: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002140: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002147: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000214e: 	je	.Ltmp2863 # Offset: 8526
.Ltmp2911:
    00002154: 	movq	-0x20(%rax), %r12
    00002158: 	callq	clock@PLT # Offset: 8536
    0000215d: 	pxor	%xmm0, %xmm0
    00002161: 	movq	%rax, end_time(%rip)
    00002168: 	movq	%r12, %rdi
    0000216b: 	subq	start_time(%rip), %rax
    00002172: 	cvtsi2sd	%rax, %xmm0
    00002177: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000217f: 	callq	_Z13record_resultdPKc # Offset: 8575
    00002184: 	movq	0x120(%rsp), %rdi
    0000218c: 	cmpq	%rbx, %rdi
    0000218f: 	je	.Ltmp2864 # Offset: 8591
    00002191: 	movq	0x130(%rsp), %rax
    00002199: 	leaq	0x1(%rax), %rsi
    0000219d: 	callq	_ZdlPvm@PLT # Offset: 8605
.Ltmp2864:
    000021a2: 	movq	0x48(%rsp), %r15
    000021a7: 	leaq	0x100(%rsp), %rdi
    000021af: 	leaq	DATAat0x3d4d0(%rip), %rdx
    000021b6: 	movq	%r15, %rsi
    000021b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8633
    000021be: 	movl	iterations(%rip), %edx
    000021c4: 	xorl	%r8d, %r8d
    000021c7: 	xorl	%ecx, %ecx
    000021c9: 	movl	$0x1f40, %esi
    000021ce: 	movq	0x100(%rsp), %rdi
    000021d6: 	callq	_Z9summarizePKciiii # Offset: 8662
    000021db: 	movsd	DATAat0x3d708(%rip), %xmm0
    000021e3: 	leaq	DATAat0x3d4e7(%rip), %rdx
    000021ea: 	movq	%r15, %rsi
    000021ed: 	movq	%rbp, %rdi
    000021f0: 	addsd	init_value(%rip), %xmm0
    000021f8: 	cvttsd2si	%xmm0, %r14d
    000021fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8701
    00002202: 	callq	clock@PLT # Offset: 8706
    00002207: 	movl	iterations(%rip), %r13d
    0000220e: 	movq	%rax, start_time(%rip)
    00002215: 	testl	%r13d, %r13d
    00002218: 	jle	.Ltmp2865 # Offset: 8728
    0000221e: 	pxor	%xmm7, %xmm7
    00002222: 	xorl	%r12d, %r12d
    00002225: 	leaq	DATAat0x3d1c8(%rip), %r15
    0000222c: 	cvtsi2sd	%r14d, %xmm7
    00002231: 	movsd	%xmm7, (%rsp)
    00002236: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2867:
    00002240: 	movq	DATAat0x3d6b8(%rip), %rax
    00002247: 	movsd	(%rsp), %xmm0
    0000224c: 	movq	%rax, %xmm1
    00002251: 	callq	pow@PLT # Offset: 8785
    00002256: 	movq	DATAat0x3d6b8(%rip), %rax
    0000225d: 	movsd	%xmm0, 0x10(%rsp)
    00002263: 	movsd	(%rsp), %xmm0
    00002268: 	movq	%rax, %xmm1
    0000226d: 	callq	pow@PLT # Offset: 8813
    00002272: 	movsd	0x10(%rsp), %xmm2
    00002278: 	cvttsd2si	%xmm0, %edx
    0000227c: 	cvttsd2si	%xmm2, %eax
    00002280: 	cmpl	%eax, %edx
    00002282: 	je	.Ltmp2866 # Offset: 8834
    00002284: 	movq	0x120(%rsp), %rdx
    0000228c: 	movq	%r15, %rsi
    0000228f: 	movl	$0x1, %edi
    00002294: 	xorl	%eax, %eax
    00002296: 	callq	__printf_chk@PLT # Offset: 8854
    0000229b: 	movl	iterations(%rip), %r13d
.Ltmp2866:
    000022a2: 	addl	$0x1, %r12d
    000022a6: 	cmpl	%r13d, %r12d
    000022a9: 	jl	.Ltmp2867 # Offset: 8873
.Ltmp2865:
    000022ab: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000022b2: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000022b9: 	subq	$0x20, %rax
    000022bd: 	cmpq	%rax, %r13
    000022c0: 	je	.Ltmp2868 # Offset: 8896
    000022c6: 	leaq	0x10(%r13), %rdi
    000022ca: 	movq	0x128(%rsp), %r12
    000022d2: 	movq	%rdi, (%r13)
    000022d6: 	movq	0x120(%rsp), %r15
    000022de: 	movq	%r15, %rax
    000022e1: 	addq	%r12, %rax
    000022e4: 	je	.Ltmp2869 # Offset: 8932
    000022e6: 	testq	%r15, %r15
    000022e9: 	je	.Ltmp2870 # Offset: 8937
.Ltmp2869:
    000022ef: 	movq	%r12, 0x78(%rsp)
    000022f4: 	cmpq	$0xf, %r12
    000022f8: 	ja	.Ltmp2871 # Offset: 8952
    000022fe: 	cmpq	$0x1, %r12
    00002302: 	jne	.Ltmp2872 # Offset: 8962
    00002308: 	movzbl	(%r15), %eax
    0000230c: 	movb	%al, 0x10(%r13)
.Ltmp2905:
    00002310: 	movq	%r12, 0x8(%r13)
    00002314: 	movb	$0x0, (%rdi,%r12)
    00002319: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002320: 	addq	$0x20, %rax
    00002324: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2910:
    0000232b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002332: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002339: 	je	.Ltmp2873 # Offset: 9017
.Ltmp2909:
    0000233f: 	movq	-0x20(%rax), %r12
    00002343: 	callq	clock@PLT # Offset: 9027
    00002348: 	pxor	%xmm0, %xmm0
    0000234c: 	movq	%rax, end_time(%rip)
    00002353: 	movq	%r12, %rdi
    00002356: 	subq	start_time(%rip), %rax
    0000235d: 	cvtsi2sd	%rax, %xmm0
    00002362: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000236a: 	callq	_Z13record_resultdPKc # Offset: 9066
    0000236f: 	movq	0x120(%rsp), %rdi
    00002377: 	cmpq	%rbx, %rdi
    0000237a: 	je	.Ltmp2874 # Offset: 9082
    0000237c: 	movq	0x130(%rsp), %rax
    00002384: 	leaq	0x1(%rax), %rsi
    00002388: 	callq	_ZdlPvm@PLT # Offset: 9096
.Ltmp2874:
    0000238d: 	movq	0x48(%rsp), %rsi
    00002392: 	leaq	DATAat0x3d501(%rip), %rdx
    00002399: 	movq	%rbp, %rdi
    0000239c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9116
    000023a1: 	leaq	_Z10test_powerIiET_S0_(%rip), %r12
    000023a8: 	movq	%rbp, %rcx
    000023ab: 	movl	%r14d, %esi
    000023ae: 	movl	$0x1f40, %edi
    000023b3: 	movq	%r12, %rdx
    000023b6: 	callq	"_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9142
    000023bb: 	movq	0x120(%rsp), %rdi
    000023c3: 	cmpq	%rbx, %rdi
    000023c6: 	je	.Ltmp2875 # Offset: 9158
    000023c8: 	movq	0x130(%rsp), %rax
    000023d0: 	leaq	0x1(%rax), %rsi
    000023d4: 	callq	_ZdlPvm@PLT # Offset: 9172
.Ltmp2875:
    000023d9: 	movq	0x48(%rsp), %rsi
    000023de: 	leaq	DATAat0x3d51f(%rip), %rdx
    000023e5: 	movq	%rbp, %rdi
    000023e8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9192
    000023ed: 	movq	%rbp, %rcx
    000023f0: 	movq	%r12, %rdx
    000023f3: 	movl	%r14d, %esi
    000023f6: 	movl	$0x1f40, %edi
    000023fb: 	callq	"_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9211
    00002400: 	movq	0x120(%rsp), %rdi
    00002408: 	cmpq	%rbx, %rdi
    0000240b: 	je	.Ltmp2876 # Offset: 9227
    0000240d: 	movq	0x130(%rsp), %rax
    00002415: 	leaq	0x1(%rax), %rsi
    00002419: 	callq	_ZdlPvm@PLT # Offset: 9241
.Ltmp2876:
    0000241e: 	movq	0x48(%rsp), %rsi
    00002423: 	leaq	DATAat0x3d535(%rip), %rdx
    0000242a: 	movq	%rbp, %rdi
    0000242d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9261
    00002432: 	leaq	_Z8test_cosIiET_S0_(%rip), %r12
    00002439: 	movq	%rbp, %rdx
    0000243c: 	movl	%r14d, %edi
    0000243f: 	movq	%r12, %rsi
    00002442: 	callq	"_Z23test_const_function_optIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9282
    00002447: 	movq	0x120(%rsp), %rdi
    0000244f: 	cmpq	%rbx, %rdi
    00002452: 	je	.Ltmp2877 # Offset: 9298
    00002454: 	movq	0x130(%rsp), %rax
    0000245c: 	leaq	0x1(%rax), %rsi
    00002460: 	callq	_ZdlPvm@PLT # Offset: 9312
.Ltmp2877:
    00002465: 	movq	0x48(%rsp), %rsi
    0000246a: 	leaq	DATAat0x3d640(%rip), %rdx
    00002471: 	movq	%rbp, %rdi
    00002474: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9332
    00002479: 	movq	%rbp, %rcx
    0000247c: 	movq	%r12, %rdx
    0000247f: 	movl	%r14d, %esi
    00002482: 	movl	$0x1f40, %edi
    00002487: 	callq	"_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9351
    0000248c: 	movq	0x120(%rsp), %rdi
    00002494: 	cmpq	%rbx, %rdi
    00002497: 	je	.Ltmp2878 # Offset: 9367
    00002499: 	movq	0x130(%rsp), %rax
    000024a1: 	leaq	0x1(%rax), %rsi
    000024a5: 	callq	_ZdlPvm@PLT # Offset: 9381
.Ltmp2878:
    000024aa: 	movq	0x48(%rsp), %rsi
    000024af: 	leaq	DATAat0x3d550(%rip), %rdx
    000024b6: 	movq	%rbp, %rdi
    000024b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9401
    000024be: 	movq	%rbp, %rcx
    000024c1: 	movq	%r12, %rdx
    000024c4: 	movl	%r14d, %esi
    000024c7: 	movl	$0x1f40, %edi
    000024cc: 	callq	"_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9420
    000024d1: 	movq	0x120(%rsp), %rdi
    000024d9: 	cmpq	%rbx, %rdi
    000024dc: 	je	.Ltmp2879 # Offset: 9436
    000024de: 	movq	0x130(%rsp), %rax
    000024e6: 	leaq	0x1(%rax), %rsi
    000024ea: 	callq	_ZdlPvm@PLT # Offset: 9450
.Ltmp2879:
    000024ef: 	movq	0x48(%rsp), %rsi
    000024f4: 	leaq	DATAat0x3d567(%rip), %rdx
    000024fb: 	movq	%rbp, %rdi
    000024fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9470
    00002503: 	callq	clock@PLT # Offset: 9475
    00002508: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000250f: 	movq	%rax, start_time(%rip)
    00002516: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000251d: 	subq	$0x20, %rax
    00002521: 	cmpq	%rax, %r13
    00002524: 	je	.Ltmp2880 # Offset: 9508
    0000252a: 	leaq	0x10(%r13), %rdi
    0000252e: 	movq	0x128(%rsp), %r12
    00002536: 	movq	%rdi, (%r13)
    0000253a: 	movq	0x120(%rsp), %r15
    00002542: 	movq	%r15, %rax
    00002545: 	addq	%r12, %rax
    00002548: 	je	.Ltmp2881 # Offset: 9544
    0000254a: 	testq	%r15, %r15
    0000254d: 	je	.Ltmp2882 # Offset: 9549
.Ltmp2881:
    00002553: 	movq	%r12, 0x78(%rsp)
    00002558: 	cmpq	$0xf, %r12
    0000255c: 	ja	.Ltmp2883 # Offset: 9564
    00002562: 	cmpq	$0x1, %r12
    00002566: 	jne	.Ltmp2884 # Offset: 9574
    0000256c: 	movzbl	(%r15), %eax
    00002570: 	movb	%al, 0x10(%r13)
.Ltmp2937:
    00002574: 	movq	%r12, 0x8(%r13)
    00002578: 	movb	$0x0, (%rdi,%r12)
    0000257d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002584: 	addq	$0x20, %rax
    00002588: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2908:
    0000258f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002596: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000259d: 	je	.Ltmp2885 # Offset: 9629
.Ltmp2907:
    000025a3: 	movq	-0x20(%rax), %r12
    000025a7: 	callq	clock@PLT # Offset: 9639
    000025ac: 	pxor	%xmm0, %xmm0
    000025b0: 	movq	%rax, end_time(%rip)
    000025b7: 	movq	%r12, %rdi
    000025ba: 	subq	start_time(%rip), %rax
    000025c1: 	cvtsi2sd	%rax, %xmm0
    000025c6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000025ce: 	callq	_Z13record_resultdPKc # Offset: 9678
    000025d3: 	movq	0x120(%rsp), %rdi
    000025db: 	cmpq	%rbx, %rdi
    000025de: 	je	.Ltmp2886 # Offset: 9694
    000025e0: 	movq	0x130(%rsp), %rax
    000025e8: 	leaq	0x1(%rax), %rsi
    000025ec: 	callq	_ZdlPvm@PLT # Offset: 9708
.Ltmp2886:
    000025f1: 	movq	0x48(%rsp), %rsi
    000025f6: 	leaq	DATAat0x3d660(%rip), %rdx
    000025fd: 	movq	%rbp, %rdi
    00002600: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9728
    00002605: 	leaq	_Z8test_sqrIiET_S0_(%rip), %r12
    0000260c: 	movq	%rbp, %rcx
    0000260f: 	movl	%r14d, %esi
    00002612: 	movl	$0x1f40, %edi
    00002617: 	movq	%r12, %rdx
    0000261a: 	callq	"_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9754
    0000261f: 	movq	0x120(%rsp), %rdi
    00002627: 	cmpq	%rbx, %rdi
    0000262a: 	je	.Ltmp2887 # Offset: 9770
    0000262c: 	movq	0x130(%rsp), %rax
    00002634: 	leaq	0x1(%rax), %rsi
    00002638: 	callq	_ZdlPvm@PLT # Offset: 9784
.Ltmp2887:
    0000263d: 	movq	0x48(%rsp), %rsi
    00002642: 	leaq	DATAat0x3d582(%rip), %rdx
    00002649: 	movq	%rbp, %rdi
    0000264c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9804
    00002651: 	movq	%rbp, %rcx
    00002654: 	movq	%r12, %rdx
    00002657: 	movl	%r14d, %esi
    0000265a: 	movl	$0x1f40, %edi
    0000265f: 	callq	"_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9823
    00002664: 	movq	0x120(%rsp), %rdi
    0000266c: 	cmpq	%rbx, %rdi
    0000266f: 	je	.Ltmp2888 # Offset: 9839
    00002671: 	movq	0x130(%rsp), %rax
    00002679: 	leaq	0x1(%rax), %rsi
    0000267d: 	callq	_ZdlPvm@PLT # Offset: 9853
.Ltmp2888:
    00002682: 	movq	0x48(%rsp), %rsi
    00002687: 	leaq	DATAat0x3d599(%rip), %rdx
    0000268e: 	movq	%rbp, %rdi
    00002691: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9873
    00002696: 	callq	clock@PLT # Offset: 9878
    0000269b: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000026a2: 	movq	%rax, start_time(%rip)
    000026a9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000026b0: 	subq	$0x20, %rax
    000026b4: 	cmpq	%rax, %r13
    000026b7: 	je	.Ltmp2889 # Offset: 9911
    000026bd: 	leaq	0x10(%r13), %rdi
    000026c1: 	movq	0x128(%rsp), %r12
    000026c9: 	movq	%rdi, (%r13)
    000026cd: 	movq	0x120(%rsp), %r15
    000026d5: 	movq	%r15, %rax
    000026d8: 	addq	%r12, %rax
    000026db: 	je	.Ltmp2890 # Offset: 9947
    000026dd: 	testq	%r15, %r15
    000026e0: 	je	.Ltmp2891 # Offset: 9952
.Ltmp2890:
    000026e6: 	movq	%r12, 0x78(%rsp)
    000026eb: 	cmpq	$0xf, %r12
    000026ef: 	ja	.Ltmp2892 # Offset: 9967
    000026f5: 	cmpq	$0x1, %r12
    000026f9: 	jne	.Ltmp2893 # Offset: 9977
    000026ff: 	movzbl	(%r15), %eax
    00002703: 	movb	%al, 0x10(%r13)
.Ltmp2939:
    00002707: 	movq	%r12, 0x8(%r13)
    0000270b: 	movb	$0x0, (%rdi,%r12)
    00002710: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002717: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000271e: 	addq	$0x20, %rax
    00002722: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002729: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00002730: 	je	.Ltmp2894 # Offset: 10032
.Ltmp2906:
    00002736: 	movq	-0x20(%rax), %r12
    0000273a: 	callq	clock@PLT # Offset: 10042
    0000273f: 	pxor	%xmm0, %xmm0
    00002743: 	movq	%rax, end_time(%rip)
    0000274a: 	movq	%r12, %rdi
    0000274d: 	subq	start_time(%rip), %rax
    00002754: 	cvtsi2sd	%rax, %xmm0
    00002759: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002761: 	callq	_Z13record_resultdPKc # Offset: 10081
    00002766: 	movq	0x120(%rsp), %rdi
    0000276e: 	cmpq	%rbx, %rdi
    00002771: 	je	.Ltmp2895 # Offset: 10097
    00002773: 	movq	0x130(%rsp), %rax
    0000277b: 	leaq	0x1(%rax), %rsi
    0000277f: 	callq	_ZdlPvm@PLT # Offset: 10111
.Ltmp2895:
    00002784: 	movq	0x48(%rsp), %rsi
    00002789: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002790: 	movq	%rbp, %rdi
    00002793: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10131
    00002798: 	leaq	_Z9test_hashIiET_S0_(%rip), %r12
    0000279f: 	movq	%rbp, %rcx
    000027a2: 	movl	%r14d, %esi
    000027a5: 	movl	$0x1f40, %edi
    000027aa: 	movq	%r12, %rdx
    000027ad: 	callq	"_Z27test_const_function_halfoptIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10157
    000027b2: 	movq	0x120(%rsp), %rdi
    000027ba: 	cmpq	%rbx, %rdi
    000027bd: 	je	.Ltmp2896 # Offset: 10173
    000027bf: 	movq	0x130(%rsp), %rax
    000027c7: 	leaq	0x1(%rax), %rsi
    000027cb: 	callq	_ZdlPvm@PLT # Offset: 10187
.Ltmp2896:
    000027d0: 	movq	0x48(%rsp), %rsi
    000027d5: 	leaq	DATAat0x3d5cf(%rip), %rdx
    000027dc: 	movq	%rbp, %rdi
    000027df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10207
    000027e4: 	movq	%rbp, %rcx
    000027e7: 	movq	%r12, %rdx
    000027ea: 	movl	%r14d, %esi
    000027ed: 	movl	$0x1f40, %edi
    000027f2: 	callq	"_Z19test_const_functionIiPFiiEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10226
    000027f7: 	movq	0x120(%rsp), %rdi
    000027ff: 	cmpq	%rbx, %rdi
    00002802: 	je	.Ltmp2897 # Offset: 10242
    00002804: 	movq	0x130(%rsp), %rax
    0000280c: 	leaq	0x1(%rax), %rsi
    00002810: 	callq	_ZdlPvm@PLT # Offset: 10256
.Ltmp2897:
    00002815: 	movq	0x48(%rsp), %rsi
    0000281a: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002821: 	movq	%rbp, %rdi
    00002824: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10276
    00002829: 	movl	iterations(%rip), %edx
    0000282f: 	xorl	%r8d, %r8d
    00002832: 	xorl	%ecx, %ecx
    00002834: 	movl	$0x1f40, %esi
    00002839: 	movq	0x120(%rsp), %rdi
    00002841: 	callq	_Z9summarizePKciiii # Offset: 10305
    00002846: 	movq	0x120(%rsp), %rdi
    0000284e: 	cmpq	%rbx, %rdi
    00002851: 	je	.Ltmp2898 # Offset: 10321
    00002853: 	movq	0x130(%rsp), %rax
    0000285b: 	leaq	0x1(%rax), %rsi
    0000285f: 	callq	_ZdlPvm@PLT # Offset: 10335
.Ltmp2898:
    00002864: 	movq	0x100(%rsp), %rdi
    0000286c: 	leaq	0x110(%rsp), %rax
    00002874: 	cmpq	%rax, %rdi
    00002877: 	je	.Ltmp2899 # Offset: 10359
    00002879: 	movq	0x110(%rsp), %rax
    00002881: 	leaq	0x1(%rax), %rsi
    00002885: 	callq	_ZdlPvm@PLT # Offset: 10373
.Ltmp2899:
    0000288a: 	movq	0xe0(%rsp), %rdi
    00002892: 	leaq	0xf0(%rsp), %rax
    0000289a: 	cmpq	%rax, %rdi
    0000289d: 	je	.Ltmp2900 # Offset: 10397
    0000289f: 	movq	0xf0(%rsp), %rax
    000028a7: 	leaq	0x1(%rax), %rsi
    000028ab: 	callq	_ZdlPvm@PLT # Offset: 10411
.Ltmp2900:
    000028b0: 	movq	0xc0(%rsp), %rdi
    000028b8: 	cmpq	0x60(%rsp), %rdi
    000028bd: 	je	.Ltmp2901 # Offset: 10429
    000028bf: 	movq	0xd0(%rsp), %rax
    000028c7: 	leaq	0x1(%rax), %rsi
    000028cb: 	callq	_ZdlPvm@PLT # Offset: 10443
.Ltmp2901:
    000028d0: 	movq	0x7f18(%rsp), %rax
    000028d8: 	subq	%fs:0x28, %rax
    000028e1: 	jne	.Ltmp2902 # Offset: 10465
    000028e7: 	addq	$0x7f28, %rsp
    000028ee: 	popq	%rbx
    000028ef: 	popq	%rbp
    000028f0: 	popq	%r12
    000028f2: 	popq	%r13
    000028f4: 	popq	%r14
    000028f6: 	popq	%r15
    000028f8: 	retq # Offset: 10488
    000028f9: 	nopl	(%rax) # Size: 7
.Ltmp2845:
    00002900: 	movq	0x120(%rsp), %rdx
    00002908: 	movq	%r15, %rsi
    0000290b: 	movl	$0x1, %edi
    00002910: 	xorl	%eax, %eax
    00002912: 	callq	__printf_chk@PLT # Offset: 10514
    00002917: 	addl	$0x1, %r12d
    0000291b: 	cmpl	iterations(%rip), %r12d
    00002922: 	jl	.Ltmp2903 # Offset: 10530
    00002928: 	jmp	.Ltmp2844 # Offset: 10536
    0000292d: 	nopl	(%rax) # Size: 3
.Ltmp2850:
    00002930: 	movq	0x120(%rsp), %rdx
    00002938: 	movq	%r15, %rsi
    0000293b: 	movl	$0x1, %edi
    00002940: 	xorl	%eax, %eax
    00002942: 	callq	__printf_chk@PLT # Offset: 10562
    00002947: 	addl	$0x1, %r12d
    0000294b: 	cmpl	iterations(%rip), %r12d
    00002952: 	jl	.Ltmp2904 # Offset: 10578
    00002958: 	jmp	.Ltmp2849 # Offset: 10584
    0000295d: 	nopl	(%rax) # Size: 3
.Ltmp2871:
    00002960: 	leaq	0x78(%rsp), %rsi
    00002965: 	xorl	%edx, %edx
    00002967: 	movq	%r13, %rdi
    0000296a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10602
    0000296f: 	movq	%rax, (%r13)
    00002973: 	movq	%rax, %rdi
    00002976: 	movq	0x78(%rsp), %rax
    0000297b: 	movq	%rax, 0x10(%r13)
.Ltmp2941:
    0000297f: 	movq	%r12, %rdx
    00002982: 	movq	%r15, %rsi
    00002985: 	callq	memcpy@PLT # Offset: 10629
    0000298a: 	movq	0x78(%rsp), %r12
    0000298f: 	movq	(%r13), %rdi
    00002993: 	jmp	.Ltmp2905 # Offset: 10643
.Ltmp2889:
    00002998: 	movq	%rbp, %rsi
    0000299b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000029a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10658
    000029a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029ae: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000029b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000029bc: 	jne	.Ltmp2906 # Offset: 10684
.Ltmp2894:
    000029c2: 	movq	-0x8(%rdx), %rax
    000029c6: 	addq	$0x200, %rax
    000029cc: 	jmp	.Ltmp2906 # Offset: 10700
.Ltmp2885:
    000029d1: 	movq	-0x8(%rdx), %rax
    000029d5: 	addq	$0x200, %rax
    000029db: 	jmp	.Ltmp2907 # Offset: 10715
.Ltmp2880:
    000029e0: 	movq	%rbp, %rsi
    000029e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000029ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10730
    000029ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000029f6: 	jmp	.Ltmp2908 # Offset: 10742
.Ltmp2873:
    000029fb: 	movq	-0x8(%rdx), %rax
    000029ff: 	addq	$0x200, %rax
    00002a05: 	jmp	.Ltmp2909 # Offset: 10757
.Ltmp2868:
    00002a0a: 	movq	%rbp, %rsi
    00002a0d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a14: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10772
    00002a19: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a20: 	jmp	.Ltmp2910 # Offset: 10784
.Ltmp2863:
    00002a25: 	movq	-0x8(%rdx), %rax
    00002a29: 	addq	$0x200, %rax
    00002a2f: 	jmp	.Ltmp2911 # Offset: 10799
.Ltmp2860:
    00002a34: 	movq	-0x8(%rdx), %rax
    00002a38: 	addq	$0x200, %rax
    00002a3e: 	jmp	.Ltmp2912 # Offset: 10814
.Ltmp2857:
    00002a43: 	movq	-0x8(%rdx), %rax
    00002a47: 	addq	$0x200, %rax
    00002a4d: 	jmp	.Ltmp2913 # Offset: 10829
.Ltmp2854:
    00002a52: 	movq	-0x8(%rdx), %rax
    00002a56: 	addq	$0x200, %rax
    00002a5c: 	jmp	.Ltmp2914 # Offset: 10844
.Ltmp2851:
    00002a61: 	movq	-0x8(%rdx), %rax
    00002a65: 	addq	$0x200, %rax
    00002a6b: 	jmp	.Ltmp2915 # Offset: 10859
.Ltmp2846:
    00002a70: 	movq	-0x8(%rdx), %rax
    00002a74: 	addq	$0x200, %rax
    00002a7a: 	jmp	.Ltmp2916 # Offset: 10874
.Ltmp2841:
    00002a7f: 	movq	-0x8(%rdx), %rax
    00002a83: 	addq	$0x200, %rax
    00002a89: 	jmp	.Ltmp2917 # Offset: 10889
.Ltmp2835:
    00002a8e: 	movq	-0x8(%rdx), %rax
    00002a92: 	addq	$0x200, %rax
    00002a98: 	jmp	.Ltmp2918 # Offset: 10904
.Ltmp2829:
    00002a9d: 	movq	-0x8(%rdx), %rax
    00002aa1: 	addq	$0x200, %rax
    00002aa7: 	jmp	.Ltmp2919 # Offset: 10919
.Ltmp2823:
    00002aac: 	movq	-0x8(%rdx), %rax
    00002ab0: 	addq	$0x200, %rax
    00002ab6: 	jmp	.Ltmp2920 # Offset: 10934
.Ltmp2816:
    00002abb: 	movq	-0x8(%rdx), %rax
    00002abf: 	addq	$0x200, %rax
    00002ac5: 	jmp	.Ltmp2921 # Offset: 10949
.Ltmp2810:
    00002aca: 	movq	-0x8(%rdx), %rax
    00002ace: 	addq	$0x200, %rax
    00002ad4: 	jmp	.Ltmp2922 # Offset: 10964
.Ltmp2804:
    00002ad9: 	movq	-0x8(%rdx), %rax
    00002add: 	addq	$0x200, %rax
    00002ae3: 	jmp	.Ltmp2923 # Offset: 10979
.Ltmp2798:
    00002ae8: 	movq	-0x8(%rdx), %rax
    00002aec: 	addq	$0x200, %rax
    00002af2: 	jmp	.Ltmp2924 # Offset: 10994
.Ltmp2792:
    00002af7: 	movq	-0x8(%rdx), %rax
    00002afb: 	addq	$0x200, %rax
    00002b01: 	jmp	.Ltmp2925 # Offset: 11009
.Ltmp2786:
    00002b06: 	movq	-0x8(%rdx), %rax
    00002b0a: 	addq	$0x200, %rax
    00002b10: 	jmp	.Ltmp2926 # Offset: 11024
.Ltmp2780:
    00002b15: 	movq	-0x8(%rdx), %rax
    00002b19: 	addq	$0x200, %rax
    00002b1f: 	jmp	.Ltmp2927 # Offset: 11039
.Ltmp2774:
    00002b24: 	movq	-0x8(%rdx), %rax
    00002b28: 	addq	$0x200, %rax
    00002b2e: 	jmp	.Ltmp2928 # Offset: 11054
.Ltmp2768:
    00002b33: 	movq	-0x8(%rdx), %rax
    00002b37: 	addq	$0x200, %rax
    00002b3d: 	jmp	.Ltmp2929 # Offset: 11069
.Ltmp2762:
    00002b42: 	movq	-0x8(%rdx), %rax
    00002b46: 	addq	$0x200, %rax
    00002b4c: 	jmp	.Ltmp2930 # Offset: 11084
.Ltmp2756:
    00002b51: 	movq	-0x8(%rdx), %rax
    00002b55: 	addq	$0x200, %rax
    00002b5b: 	jmp	.Ltmp2931 # Offset: 11099
.Ltmp2750:
    00002b60: 	movq	-0x8(%rdx), %rax
    00002b64: 	addq	$0x200, %rax
    00002b6a: 	jmp	.Ltmp2932 # Offset: 11114
.Ltmp2744:
    00002b6f: 	movq	-0x8(%rdx), %rax
    00002b73: 	addq	$0x200, %rax
    00002b79: 	jmp	.Ltmp2933 # Offset: 11129
.Ltmp2738:
    00002b7e: 	movq	-0x8(%rdx), %rax
    00002b82: 	addq	$0x200, %rax
    00002b88: 	jmp	.Ltmp2934 # Offset: 11144
.Ltmp2732:
    00002b8d: 	movq	-0x8(%rdx), %rax
    00002b91: 	addq	$0x200, %rax
    00002b97: 	jmp	.Ltmp2935 # Offset: 11159
.Ltmp2726:
    00002b9c: 	movq	-0x8(%rdx), %rax
    00002ba0: 	addq	$0x200, %rax
    00002ba6: 	jmp	.Ltmp2936 # Offset: 11174
.Ltmp2884:
    00002bab: 	testq	%r12, %r12
    00002bae: 	je	.Ltmp2937 # Offset: 11182
    00002bb4: 	jmp	.Ltmp2938 # Offset: 11188
    00002bb6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2893:
    00002bc0: 	testq	%r12, %r12
    00002bc3: 	je	.Ltmp2939 # Offset: 11203
    00002bc9: 	jmp	.Ltmp2940 # Offset: 11209
    00002bcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2872:
    00002bd0: 	testq	%r12, %r12
    00002bd3: 	je	.Ltmp2905 # Offset: 11219
    00002bd9: 	jmp	.Ltmp2941 # Offset: 11225
    00002bde: 	nop # Size: 2
.Ltmp2883:
    00002be0: 	leaq	0x78(%rsp), %rsi
    00002be5: 	xorl	%edx, %edx
    00002be7: 	movq	%r13, %rdi
    00002bea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11242
    00002bef: 	movq	%rax, (%r13)
    00002bf3: 	movq	%rax, %rdi
    00002bf6: 	movq	0x78(%rsp), %rax
    00002bfb: 	movq	%rax, 0x10(%r13)
.Ltmp2938:
    00002bff: 	movq	%r12, %rdx
    00002c02: 	movq	%r15, %rsi
    00002c05: 	callq	memcpy@PLT # Offset: 11269
    00002c0a: 	movq	0x78(%rsp), %r12
    00002c0f: 	movq	(%r13), %rdi
    00002c13: 	jmp	.Ltmp2937 # Offset: 11283
.Ltmp2892:
    00002c18: 	leaq	0x78(%rsp), %rsi
    00002c1d: 	xorl	%edx, %edx
    00002c1f: 	movq	%r13, %rdi
    00002c22: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11298
    00002c27: 	movq	%rax, (%r13)
    00002c2b: 	movq	%rax, %rdi
    00002c2e: 	movq	0x78(%rsp), %rax
    00002c33: 	movq	%rax, 0x10(%r13)
.Ltmp2940:
    00002c37: 	movq	%r12, %rdx
    00002c3a: 	movq	%r15, %rsi
    00002c3d: 	callq	memcpy@PLT # Offset: 11325
    00002c42: 	movq	0x78(%rsp), %r12
    00002c47: 	movq	(%r13), %rdi
    00002c4b: 	jmp	.Ltmp2939 # Offset: 11339
.Ltmp2882:
    00002c50: 	leaq	DATAat0x3d158(%rip), %rdi
    00002c57: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11351
.Ltmp2891:
    00002c5c: 	leaq	DATAat0x3d158(%rip), %rdi
    00002c63: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11363
.Ltmp2902:
    00002c68: 	callq	__stack_chk_fail@PLT # Offset: 11368
.Ltmp2870:
    00002c6d: 	leaq	DATAat0x3d158(%rip), %rdi
    00002c74: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11380
    00002c79: 	endbr64
.Ltmp2943:
    00002c7d: 	movq	%rax, %rbp
    00002c80: 	jmp	.Ltmp2942 # Offset: 11392
    00002c82: 	endbr64
    00002c86: 	jmp	.Ltmp2943 # Offset: 11398
    00002c88: 	endbr64
    00002c8c: 	jmp	.Ltmp2943 # Offset: 11404
    00002c8e: 	endbr64
    00002c92: 	jmp	.Ltmp2943 # Offset: 11410
.Ltmp2942:
    00002c94: 	movq	0x120(%rsp), %rdi
    00002c9c: 	cmpq	%rbx, %rdi
    00002c9f: 	je	.Ltmp2944 # Offset: 11423
.Ltmp2950:
    00002ca1: 	movq	0x130(%rsp), %rax
    00002ca9: 	leaq	0x1(%rax), %rsi
    00002cad: 	callq	_ZdlPvm@PLT # Offset: 11437
.Ltmp2944:
    00002cb2: 	movq	0xe0(%rsp), %rdi
    00002cba: 	leaq	0xf0(%rsp), %rax
    00002cc2: 	cmpq	%rax, %rdi
    00002cc5: 	je	.Ltmp2945 # Offset: 11461
    00002cc7: 	movq	0xf0(%rsp), %rax
    00002ccf: 	leaq	0x1(%rax), %rsi
    00002cd3: 	callq	_ZdlPvm@PLT # Offset: 11475
.Ltmp2945:
    00002cd8: 	movq	0xc0(%rsp), %rdi
    00002ce0: 	cmpq	0x60(%rsp), %rdi
    00002ce5: 	je	.Ltmp2946 # Offset: 11493
    00002ce7: 	movq	0xd0(%rsp), %rax
    00002cef: 	leaq	0x1(%rax), %rsi
    00002cf3: 	callq	_ZdlPvm@PLT # Offset: 11507
.Ltmp2946:
    00002cf8: 	movq	%rbp, %rdi
    00002cfb: 	callq	_Unwind_Resume@PLT # Offset: 11515
    00002d00: 	endbr64
    00002d04: 	jmp	.Ltmp2943 # Offset: 11524
    00002d09: 	endbr64
    00002d0d: 	jmp	.Ltmp2943 # Offset: 11533
    00002d12: 	endbr64
.Ltmp2948:
    00002d16: 	movq	%rax, %rbp
    00002d19: 	jmp	.Ltmp2947 # Offset: 11545
    00002d1b: 	endbr64
    00002d1f: 	jmp	.Ltmp2948 # Offset: 11551
    00002d21: 	endbr64
    00002d25: 	jmp	.Ltmp2948 # Offset: 11557
    00002d27: 	endbr64
    00002d2b: 	movq	%rax, %rbp
    00002d2e: 	jmp	.Ltmp2949 # Offset: 11566
.Ltmp2947:
    00002d30: 	movq	0x140(%rsp), %rdi
    00002d38: 	cmpq	0x58(%rsp), %rdi
    00002d3d: 	je	.Ltmp2945 # Offset: 11581
.Ltmp2953:
    00002d3f: 	movq	0x150(%rsp), %rax
    00002d47: 	leaq	0x1(%rax), %rsi
    00002d4b: 	callq	_ZdlPvm@PLT # Offset: 11595
    00002d50: 	jmp	.Ltmp2945 # Offset: 11600
.Ltmp2949:
    00002d52: 	movq	0x120(%rsp), %rdi
    00002d5a: 	leaq	0x130(%rsp), %rax
    00002d62: 	cmpq	%rax, %rdi
    00002d65: 	jne	.Ltmp2950 # Offset: 11621
    00002d6b: 	jmp	.Ltmp2944 # Offset: 11627
    00002d70: 	endbr64
    00002d74: 	jmp	.Ltmp2943 # Offset: 11636
    00002d79: 	endbr64
    00002d7d: 	jmp	.Ltmp2948 # Offset: 11645
    00002d7f: 	endbr64
    00002d83: 	movq	%rax, %rbp
    00002d86: 	jmp	.Ltmp2945 # Offset: 11654
    00002d8b: 	endbr64
    00002d8f: 	jmp	.Ltmp2943 # Offset: 11663
    00002d94: 	endbr64
    00002d98: 	movq	%rax, %rbp
    00002d9b: 	jmp	.Ltmp2951 # Offset: 11675
    00002d9d: 	endbr64
.Ltmp2954:
    00002da1: 	movq	%rax, %rbp
    00002da4: 	jmp	.Ltmp2952 # Offset: 11684
.Ltmp2951:
    00002da6: 	movq	0x140(%rsp), %rdi
    00002dae: 	leaq	0x150(%rsp), %rax
    00002db6: 	cmpq	%rax, %rdi
    00002db9: 	jne	.Ltmp2953 # Offset: 11705
    00002dbb: 	jmp	.Ltmp2945 # Offset: 11707
    00002dc0: 	endbr64
    00002dc4: 	jmp	.Ltmp2948 # Offset: 11716
    00002dc9: 	endbr64
    00002dcd: 	jmp	.Ltmp2948 # Offset: 11725
    00002dd2: 	endbr64
    00002dd6: 	jmp	.Ltmp2954 # Offset: 11734
    00002dd8: 	endbr64
    00002ddc: 	jmp	.Ltmp2948 # Offset: 11740
.Ltmp2952:
    00002de1: 	movq	0x120(%rsp), %rdi
    00002de9: 	cmpq	%rbx, %rdi
    00002dec: 	je	.Ltmp2955 # Offset: 11756
    00002dee: 	movq	0x130(%rsp), %rax
    00002df6: 	leaq	0x1(%rax), %rsi
    00002dfa: 	callq	_ZdlPvm@PLT # Offset: 11770
.Ltmp2955:
    00002dff: 	movq	0x100(%rsp), %rdi
    00002e07: 	leaq	0x110(%rsp), %rax
    00002e0f: 	cmpq	%rax, %rdi
    00002e12: 	je	.Ltmp2944 # Offset: 11794
    00002e18: 	movq	0x110(%rsp), %rax
    00002e20: 	leaq	0x1(%rax), %rsi
    00002e24: 	callq	_ZdlPvm@PLT # Offset: 11812
    00002e29: 	jmp	.Ltmp2944 # Offset: 11817
    00002e2e: 	endbr64
    00002e32: 	jmp	.Ltmp2954 # Offset: 11826
    00002e37: 	endbr64
    00002e3b: 	jmp	.Ltmp2943 # Offset: 11835
    00002e40: 	endbr64
    00002e44: 	jmp	.Ltmp2948 # Offset: 11844
    00002e49: 	endbr64
    00002e4d: 	jmp	.Ltmp2948 # Offset: 11853
    00002e52: 	endbr64
    00002e56: 	jmp	.Ltmp2948 # Offset: 11862
    00002e5b: 	endbr64
    00002e5f: 	jmp	.Ltmp2948 # Offset: 11871
    00002e64: 	endbr64
    00002e68: 	jmp	.Ltmp2943 # Offset: 11880
    00002e6d: 	endbr64
    00002e71: 	jmp	.Ltmp2948 # Offset: 11889
    00002e76: 	endbr64
    00002e7a: 	movq	%rax, %rbp
    00002e7d: 	jmp	.Ltmp2944 # Offset: 11901
    00002e82: 	endbr64
    00002e86: 	jmp	.Ltmp2954 # Offset: 11910
    00002e8b: 	endbr64
    00002e8f: 	movq	%rax, %rbp
    00002e92: 	jmp	.Ltmp2955 # Offset: 11922
    00002e97: 	endbr64
    00002e9b: 	jmp	.Ltmp2948 # Offset: 11931
    00002ea0: 	endbr64
    00002ea4: 	jmp	.Ltmp2948 # Offset: 11940
    00002ea9: 	endbr64
    00002ead: 	jmp	.Ltmp2948 # Offset: 11949
    00002eb2: 	endbr64
    00002eb6: 	jmp	.Ltmp2943 # Offset: 11958
    00002ebb: 	endbr64
    00002ebf: 	jmp	.Ltmp2954 # Offset: 11967
    00002ec4: 	endbr64
    00002ec8: 	jmp	.Ltmp2954 # Offset: 11976
    00002ecd: 	endbr64
    00002ed1: 	jmp	.Ltmp2954 # Offset: 11985
    00002ed6: 	endbr64
    00002eda: 	jmp	.Ltmp2954 # Offset: 11994
    00002edf: 	endbr64
    00002ee3: 	jmp	.Ltmp2954 # Offset: 12003
    00002ee8: 	endbr64
    00002eec: 	jmp	.Ltmp2954 # Offset: 12012
    00002ef1: 	endbr64
    00002ef5: 	jmp	.Ltmp2954 # Offset: 12021
    00002efa: 	endbr64
    00002efe: 	jmp	.Ltmp2954 # Offset: 12030
    00002f03: 	endbr64
    00002f07: 	jmp	.Ltmp2954 # Offset: 12039
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIiEvd"

Binary Function "_Z9TestLoopsImEvd" after disassembly {
  Number      : 150
  State       : disassembled
  Address     : 0x1f550
  Size        : 0x3302
  MaxSize     : 0x3310
  Offset      : 0x1f550
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsImEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0149:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2956:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2956 # Offset: 37
    00000027: 	subq	$0xcf8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movsd	%xmm0, (%rsp)
    0000004a: 	movq	%fs:0x28, %rax
    00000053: 	movq	%rax, 0xfce8(%rsp)
    0000005b: 	xorl	%eax, %eax
    0000005d: 	leaq	0xe0(%rsp), %rax
    00000065: 	movb	$0x0, 0xe8(%rsp)
    0000006d: 	movq	%rax, 0x40(%rsp)
    00000072: 	movq	%rax, 0xd0(%rsp)
    0000007a: 	movabsq	$0x745f3436746e6975, %rax
    00000084: 	movq	%rax, 0xe0(%rsp)
    0000008c: 	leaq	0x60(%rsp), %rax
    00000091: 	movq	%rax, %rsi
    00000094: 	movq	%rax, 0x48(%rsp)
    00000099: 	movq	$0x8, 0xd8(%rsp)
    000000a5: 	movaps	%xmm6, 0x60(%rsp)
    000000aa: 	movaps	%xmm7, 0x70(%rsp)
    000000af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 175
    000000b4: 	movsd	init_value(%rip), %xmm1
    000000bc: 	movsd	(%rsp), %xmm0
    000000c1: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000000c9: 	jae	.Ltmp2957 # Offset: 201
    000000cf: 	cvttsd2si	%xmm1, %rax
.Ltmp3197:
    000000d4: 	movq	%rax, %xmm1
    000000d9: 	leaq	0x2e0(%rsp), %r15
    000000e1: 	leaq	0xfce0(%rsp), %rbx
    000000e9: 	punpcklqdq	%xmm1, %xmm1
    000000ed: 	movq	%r15, %rax
.Ltmp2958:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rbx, %rax
    000000fa: 	jne	.Ltmp2958 # Offset: 250
    000000fc: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00000104: 	jae	.Ltmp2959 # Offset: 260
    0000010a: 	cvttsd2si	%xmm0, %rbp
.Ltmp3196:
    0000010f: 	leaq	0x2(%rbp), %rdi
    00000113: 	leaq	(%rbp,%rbp), %rax
    00000118: 	xorl	%edx, %edx
    0000011a: 	movq	%rax, 0x10(%rsp)
    0000011f: 	divq	%rdi
    00000122: 	movq	%rdi, 0x18(%rsp)
    00000127: 	leaq	DATAat0x3d273(%rip), %rdx
    0000012e: 	leaq	0x150(%rsp), %rdi
    00000136: 	movq	%rdi, 0x30(%rsp)
    0000013b: 	addq	%rbp, %rax
    0000013e: 	movq	%rax, 0x20(%rsp)
    00000143: 	leaq	0xd0(%rsp), %rax
    0000014b: 	movq	%rax, %rsi
    0000014e: 	movq	%rax, 0x28(%rsp)
    00000153: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 339
    00000158: 	callq	clock@PLT # Offset: 344
    0000015d: 	movq	%rbp, %xmm6
    00000162: 	movl	iterations(%rip), %ecx
    00000168: 	xorl	%r12d, %r12d
    0000016b: 	punpcklqdq	%xmm6, %xmm6
    0000016f: 	movq	%rax, start_time(%rip)
    00000176: 	movabsq	$-0x8000000000000000, %r13
    00000180: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000187: 	movaps	%xmm6, (%rsp)
    0000018b: 	testl	%ecx, %ecx
    0000018d: 	jle	.Ltmp2960 # Offset: 397
    00000193: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2964:
    00000198: 	movq	%r15, %rax
    0000019b: 	pxor	%xmm0, %xmm0
    0000019f: 	nop # Size: 1
.Ltmp2961:
    000001a0: 	movdqa	(%rsp), %xmm1
    000001a5: 	paddq	(%rax), %xmm1
    000001a9: 	addq	$0x10, %rax
    000001ad: 	paddq	%xmm1, %xmm0
    000001b1: 	cmpq	%rbx, %rax
    000001b4: 	jne	.Ltmp2961 # Offset: 436
    000001b6: 	movsd	init_value(%rip), %xmm1
    000001be: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000001c6: 	jae	.Ltmp2962 # Offset: 454
    000001cc: 	cvttsd2si	%xmm1, %rax
.Ltmp3157:
    000001d1: 	addq	%rbp, %rax
    000001d4: 	movdqa	%xmm0, %xmm1
    000001d8: 	imulq	$0x1f40, %rax, %rdx
    000001df: 	psrldq	$0x8, %xmm1
    000001e4: 	paddq	%xmm1, %xmm0
    000001e8: 	movq	%xmm0, %rax
    000001ed: 	cmpq	%rax, %rdx
    000001f0: 	je	.Ltmp2963 # Offset: 496
    000001f2: 	movl	current_test(%rip), %edx
    000001f8: 	movq	%r14, %rsi
    000001fb: 	movl	$0x1, %edi
    00000200: 	xorl	%eax, %eax
    00000202: 	callq	__printf_chk@PLT # Offset: 514
    00000207: 	movl	iterations(%rip), %ecx
.Ltmp2963:
    0000020d: 	addl	$0x1, %r12d
    00000211: 	cmpl	%ecx, %r12d
    00000214: 	jl	.Ltmp2964 # Offset: 532
.Ltmp2960:
    00000216: 	movq	0x30(%rsp), %rsi
    0000021b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000222: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 546
    00000227: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000022e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000235: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000023c: 	je	.Ltmp2965 # Offset: 572
.Ltmp3231:
    00000242: 	movq	-0x20(%rax), %r12
    00000246: 	callq	clock@PLT # Offset: 582
    0000024b: 	pxor	%xmm0, %xmm0
    0000024f: 	movq	%rax, end_time(%rip)
    00000256: 	movq	%r12, %rdi
    00000259: 	subq	start_time(%rip), %rax
    00000260: 	cvtsi2sd	%rax, %xmm0
    00000265: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000026d: 	callq	_Z13record_resultdPKc # Offset: 621
    00000272: 	movq	0x150(%rsp), %rdi
    0000027a: 	leaq	0x160(%rsp), %rax
    00000282: 	movq	%rax, 0x38(%rsp)
    00000287: 	cmpq	%rax, %rdi
    0000028a: 	je	.Ltmp2966 # Offset: 650
    0000028c: 	movq	0x160(%rsp), %rax
    00000294: 	leaq	0x1(%rax), %rsi
    00000298: 	callq	_ZdlPvm@PLT # Offset: 664
.Ltmp2966:
    0000029d: 	movq	0x28(%rsp), %rsi
    000002a2: 	movq	0x30(%rsp), %rdi
    000002a7: 	leaq	DATAat0x3d281(%rip), %rdx
    000002ae: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 686
    000002b3: 	callq	clock@PLT # Offset: 691
    000002b8: 	movl	iterations(%rip), %ecx
    000002be: 	movq	%rax, start_time(%rip)
    000002c5: 	testl	%ecx, %ecx
    000002c7: 	jle	.Ltmp2967 # Offset: 711
    000002cd: 	imulq	$0x1f40, %rbp, %r13
    000002d4: 	xorl	%r12d, %r12d
    000002d7: 	leaq	DATAat0x3d1d8(%rip), %r14
    000002de: 	nop # Size: 2
.Ltmp2971:
    000002e0: 	movq	%r15, %rax
    000002e3: 	pxor	%xmm0, %xmm0
    000002e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2968:
    000002f0: 	paddq	(%rax), %xmm0
    000002f4: 	addq	$0x10, %rax
    000002f8: 	cmpq	%rbx, %rax
    000002fb: 	jne	.Ltmp2968 # Offset: 763
    000002fd: 	movdqa	%xmm0, %xmm1
    00000301: 	psrldq	$0x8, %xmm1
    00000306: 	paddq	%xmm1, %xmm0
    0000030a: 	movq	%xmm0, %rax
    0000030f: 	movsd	init_value(%rip), %xmm0
    00000317: 	addq	%r13, %rax
    0000031a: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00000322: 	jae	.Ltmp2969 # Offset: 802
    00000328: 	cvttsd2si	%xmm0, %rdx
.Ltmp3156:
    0000032d: 	addq	%rbp, %rdx
    00000330: 	imulq	$0x1f40, %rdx, %rdx
    00000337: 	cmpq	%rdx, %rax
    0000033a: 	je	.Ltmp2970 # Offset: 826
    0000033c: 	movl	current_test(%rip), %edx
    00000342: 	movq	%r14, %rsi
    00000345: 	movl	$0x1, %edi
    0000034a: 	xorl	%eax, %eax
    0000034c: 	callq	__printf_chk@PLT # Offset: 844
    00000351: 	movl	iterations(%rip), %ecx
.Ltmp2970:
    00000357: 	addl	$0x1, %r12d
    0000035b: 	cmpl	%ecx, %r12d
    0000035e: 	jl	.Ltmp2971 # Offset: 862
.Ltmp2967:
    00000360: 	movq	0x30(%rsp), %rsi
    00000365: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000036c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 876
    00000371: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000378: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000037f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000386: 	je	.Ltmp2972 # Offset: 902
.Ltmp3230:
    0000038c: 	movq	-0x20(%rax), %r12
    00000390: 	callq	clock@PLT # Offset: 912
    00000395: 	pxor	%xmm0, %xmm0
    00000399: 	movq	%rax, end_time(%rip)
    000003a0: 	movq	%r12, %rdi
    000003a3: 	subq	start_time(%rip), %rax
    000003aa: 	cvtsi2sd	%rax, %xmm0
    000003af: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000003b7: 	callq	_Z13record_resultdPKc # Offset: 951
    000003bc: 	movq	0x150(%rsp), %rdi
    000003c4: 	cmpq	0x38(%rsp), %rdi
    000003c9: 	je	.Ltmp2973 # Offset: 969
    000003cb: 	movq	0x160(%rsp), %rax
    000003d3: 	leaq	0x1(%rax), %rsi
    000003d7: 	callq	_ZdlPvm@PLT # Offset: 983
.Ltmp2973:
    000003dc: 	movq	0x28(%rsp), %rsi
    000003e1: 	movq	0x30(%rsp), %rdi
    000003e6: 	leaq	DATAat0x3d297(%rip), %rdx
    000003ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1005
    000003f2: 	callq	clock@PLT # Offset: 1010
    000003f7: 	movl	iterations(%rip), %ecx
    000003fd: 	movq	%rax, start_time(%rip)
    00000404: 	testl	%ecx, %ecx
    00000406: 	jle	.Ltmp2974 # Offset: 1030
    0000040c: 	movq	0x10(%rsp), %r13
    00000411: 	addq	0x18(%rsp), %r13
    00000416: 	xorl	%r12d, %r12d
    00000419: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000420: 	addq	%rbp, %r13
    00000423: 	addq	0x20(%rsp), %r13
    00000428: 	movq	%r13, %xmm6
    0000042d: 	punpcklqdq	%xmm6, %xmm6
    00000431: 	movaps	%xmm6, (%rsp)
    00000435: 	nopl	(%rax) # Size: 3
.Ltmp2978:
    00000438: 	movq	%r15, %rax
    0000043b: 	pxor	%xmm0, %xmm0
    0000043f: 	nop # Size: 1
.Ltmp2975:
    00000440: 	movdqa	(%rsp), %xmm1
    00000445: 	paddq	(%rax), %xmm1
    00000449: 	addq	$0x10, %rax
    0000044d: 	paddq	%xmm1, %xmm0
    00000451: 	cmpq	%rbx, %rax
    00000454: 	jne	.Ltmp2975 # Offset: 1108
    00000456: 	movsd	init_value(%rip), %xmm1
    0000045e: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    00000466: 	jae	.Ltmp2976 # Offset: 1126
    0000046c: 	cvttsd2si	%xmm1, %rax
.Ltmp3155:
    00000471: 	addq	%r13, %rax
    00000474: 	movdqa	%xmm0, %xmm1
    00000478: 	imulq	$0x1f40, %rax, %rdx
    0000047f: 	psrldq	$0x8, %xmm1
    00000484: 	paddq	%xmm1, %xmm0
    00000488: 	movq	%xmm0, %rax
    0000048d: 	cmpq	%rax, %rdx
    00000490: 	je	.Ltmp2977 # Offset: 1168
    00000492: 	movl	current_test(%rip), %edx
    00000498: 	movq	%r14, %rsi
    0000049b: 	movl	$0x1, %edi
    000004a0: 	xorl	%eax, %eax
    000004a2: 	callq	__printf_chk@PLT # Offset: 1186
    000004a7: 	movl	iterations(%rip), %ecx
.Ltmp2977:
    000004ad: 	addl	$0x1, %r12d
    000004b1: 	cmpl	%ecx, %r12d
    000004b4: 	jl	.Ltmp2978 # Offset: 1204
.Ltmp2974:
    000004b6: 	movq	0x30(%rsp), %rsi
    000004bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1218
    000004c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004ce: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004dc: 	je	.Ltmp2979 # Offset: 1244
.Ltmp3229:
    000004e2: 	movq	-0x20(%rax), %r12
    000004e6: 	callq	clock@PLT # Offset: 1254
    000004eb: 	pxor	%xmm0, %xmm0
    000004ef: 	movq	%rax, end_time(%rip)
    000004f6: 	movq	%r12, %rdi
    000004f9: 	subq	start_time(%rip), %rax
    00000500: 	cvtsi2sd	%rax, %xmm0
    00000505: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000050d: 	callq	_Z13record_resultdPKc # Offset: 1293
    00000512: 	movq	0x150(%rsp), %rdi
    0000051a: 	cmpq	0x38(%rsp), %rdi
    0000051f: 	je	.Ltmp2980 # Offset: 1311
    00000521: 	movq	0x160(%rsp), %rax
    00000529: 	leaq	0x1(%rax), %rsi
    0000052d: 	callq	_ZdlPvm@PLT # Offset: 1325
.Ltmp2980:
    00000532: 	movq	0x28(%rsp), %rsi
    00000537: 	movq	0x30(%rsp), %rdi
    0000053c: 	leaq	DATAat0x3d2af(%rip), %rdx
    00000543: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1347
    00000548: 	callq	clock@PLT # Offset: 1352
    0000054d: 	movl	iterations(%rip), %ecx
    00000553: 	movq	%rax, start_time(%rip)
    0000055a: 	testl	%ecx, %ecx
    0000055c: 	jle	.Ltmp2981 # Offset: 1372
    00000562: 	movq	0x10(%rsp), %rax
    00000567: 	addq	0x18(%rsp), %rax
    0000056c: 	xorl	%r12d, %r12d
    0000056f: 	movabsq	$-0x8000000000000000, %r14
    00000579: 	addq	%rbp, %rax
    0000057c: 	addq	0x20(%rsp), %rax
    00000581: 	leaq	DATAat0x3d1d8(%rip), %r13
    00000588: 	movq	%rax, %xmm7
    0000058d: 	punpcklqdq	%xmm7, %xmm7
    00000591: 	movaps	%xmm7, (%rsp)
    00000595: 	nopl	(%rax) # Size: 3
.Ltmp2985:
    00000598: 	movq	%r15, %rax
    0000059b: 	pxor	%xmm0, %xmm0
    0000059f: 	nop # Size: 1
.Ltmp2982:
    000005a0: 	movdqa	(%rsp), %xmm1
    000005a5: 	paddq	(%rax), %xmm1
    000005a9: 	addq	$0x10, %rax
    000005ad: 	paddq	%xmm1, %xmm0
    000005b1: 	cmpq	%rbx, %rax
    000005b4: 	jne	.Ltmp2982 # Offset: 1460
    000005b6: 	movsd	init_value(%rip), %xmm1
    000005be: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000005c6: 	jae	.Ltmp2983 # Offset: 1478
    000005cc: 	cvttsd2si	%xmm1, %rax
.Ltmp3154:
    000005d1: 	leaq	(%rax,%rbp), %rdx
    000005d5: 	movdqa	%xmm0, %xmm1
    000005d9: 	addq	0x10(%rsp), %rdx
    000005de: 	addq	0x18(%rsp), %rdx
    000005e3: 	addq	0x20(%rsp), %rdx
    000005e8: 	psrldq	$0x8, %xmm1
    000005ed: 	imulq	$0x1f40, %rdx, %rdx
    000005f4: 	paddq	%xmm1, %xmm0
    000005f8: 	movq	%xmm0, %rax
    000005fd: 	cmpq	%rax, %rdx
    00000600: 	je	.Ltmp2984 # Offset: 1536
    00000602: 	movl	current_test(%rip), %edx
    00000608: 	movq	%r13, %rsi
    0000060b: 	movl	$0x1, %edi
    00000610: 	xorl	%eax, %eax
    00000612: 	callq	__printf_chk@PLT # Offset: 1554
    00000617: 	movl	iterations(%rip), %ecx
.Ltmp2984:
    0000061d: 	addl	$0x1, %r12d
    00000621: 	cmpl	%ecx, %r12d
    00000624: 	jl	.Ltmp2985 # Offset: 1572
.Ltmp2981:
    0000062a: 	movq	0x30(%rsp), %rsi
    0000062f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000636: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1590
    0000063b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000642: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000649: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000650: 	je	.Ltmp2986 # Offset: 1616
.Ltmp3228:
    00000656: 	movq	-0x20(%rax), %r12
    0000065a: 	callq	clock@PLT # Offset: 1626
    0000065f: 	pxor	%xmm0, %xmm0
    00000663: 	movq	%rax, end_time(%rip)
    0000066a: 	movq	%r12, %rdi
    0000066d: 	subq	start_time(%rip), %rax
    00000674: 	cvtsi2sd	%rax, %xmm0
    00000679: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000681: 	callq	_Z13record_resultdPKc # Offset: 1665
    00000686: 	movq	0x150(%rsp), %rdi
    0000068e: 	cmpq	0x38(%rsp), %rdi
    00000693: 	je	.Ltmp2987 # Offset: 1683
    00000695: 	movq	0x160(%rsp), %rax
    0000069d: 	leaq	0x1(%rax), %rsi
    000006a1: 	callq	_ZdlPvm@PLT # Offset: 1697
.Ltmp2987:
    000006a6: 	movq	0x28(%rsp), %rsi
    000006ab: 	movq	0x30(%rsp), %rdi
    000006b0: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000006b7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1719
    000006bc: 	callq	clock@PLT # Offset: 1724
    000006c1: 	movq	%rbp, %xmm7
    000006c6: 	movl	iterations(%rip), %ecx
    000006cc: 	xorl	%r12d, %r12d
    000006cf: 	punpcklqdq	%xmm7, %xmm7
    000006d3: 	movq	%rax, start_time(%rip)
    000006da: 	movabsq	$-0x8000000000000000, %r14
    000006e4: 	leaq	DATAat0x3d1d8(%rip), %r13
    000006eb: 	movaps	%xmm7, (%rsp)
    000006ef: 	testl	%ecx, %ecx
    000006f1: 	jle	.Ltmp2988 # Offset: 1777
    000006f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2992:
    000006f8: 	movq	%r15, %rax
    000006fb: 	pxor	%xmm0, %xmm0
    000006ff: 	nop # Size: 1
.Ltmp2989:
    00000700: 	paddq	(%rax), %xmm0
    00000704: 	addq	$0x10, %rax
    00000708: 	psubq	(%rsp), %xmm0
    0000070d: 	cmpq	%rbx, %rax
    00000710: 	jne	.Ltmp2989 # Offset: 1808
    00000712: 	movsd	init_value(%rip), %xmm1
    0000071a: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    00000722: 	jae	.Ltmp2990 # Offset: 1826
    00000728: 	cvttsd2si	%xmm1, %rax
.Ltmp3153:
    0000072d: 	subq	%rbp, %rax
    00000730: 	movdqa	%xmm0, %xmm1
    00000734: 	imulq	$0x1f40, %rax, %rdx
    0000073b: 	psrldq	$0x8, %xmm1
    00000740: 	paddq	%xmm1, %xmm0
    00000744: 	movq	%xmm0, %rax
    00000749: 	cmpq	%rax, %rdx
    0000074c: 	je	.Ltmp2991 # Offset: 1868
    0000074e: 	movl	current_test(%rip), %edx
    00000754: 	movq	%r13, %rsi
    00000757: 	movl	$0x1, %edi
    0000075c: 	xorl	%eax, %eax
    0000075e: 	callq	__printf_chk@PLT # Offset: 1886
    00000763: 	movl	iterations(%rip), %ecx
.Ltmp2991:
    00000769: 	addl	$0x1, %r12d
    0000076d: 	cmpl	%ecx, %r12d
    00000770: 	jl	.Ltmp2992 # Offset: 1904
.Ltmp2988:
    00000772: 	movq	0x30(%rsp), %rsi
    00000777: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000077e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1918
    00000783: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000078a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000791: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000798: 	je	.Ltmp2993 # Offset: 1944
.Ltmp3227:
    0000079e: 	movq	-0x20(%rax), %r12
    000007a2: 	callq	clock@PLT # Offset: 1954
    000007a7: 	pxor	%xmm0, %xmm0
    000007ab: 	movq	%rax, end_time(%rip)
    000007b2: 	movq	%r12, %rdi
    000007b5: 	subq	start_time(%rip), %rax
    000007bc: 	cvtsi2sd	%rax, %xmm0
    000007c1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000007c9: 	callq	_Z13record_resultdPKc # Offset: 1993
    000007ce: 	movq	0x150(%rsp), %rdi
    000007d6: 	cmpq	0x38(%rsp), %rdi
    000007db: 	je	.Ltmp2994 # Offset: 2011
    000007dd: 	movq	0x160(%rsp), %rax
    000007e5: 	leaq	0x1(%rax), %rsi
    000007e9: 	callq	_ZdlPvm@PLT # Offset: 2025
.Ltmp2994:
    000007ee: 	movq	0x28(%rsp), %rsi
    000007f3: 	movq	0x30(%rsp), %rdi
    000007f8: 	leaq	DATAat0x3d2db(%rip), %rdx
    000007ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2047
    00000804: 	callq	clock@PLT # Offset: 2052
    00000809: 	movl	iterations(%rip), %ecx
    0000080f: 	movq	%rax, start_time(%rip)
    00000816: 	testl	%ecx, %ecx
    00000818: 	jle	.Ltmp2995 # Offset: 2072
    0000081e: 	movq	0x10(%rsp), %r13
    00000823: 	addq	0x18(%rsp), %r13
    00000828: 	xorl	%r12d, %r12d
    0000082b: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000832: 	addq	%rbp, %r13
    00000835: 	addq	0x20(%rsp), %r13
    0000083a: 	movq	%r13, %xmm6
    0000083f: 	punpcklqdq	%xmm6, %xmm6
    00000843: 	movaps	%xmm6, (%rsp)
    00000847: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2999:
    00000850: 	movq	%r15, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2996:
    00000860: 	paddq	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	psubq	(%rsp), %xmm0
    0000086d: 	cmpq	%rbx, %rax
    00000870: 	jne	.Ltmp2996 # Offset: 2160
    00000872: 	movsd	init_value(%rip), %xmm1
    0000087a: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    00000882: 	jae	.Ltmp2997 # Offset: 2178
    00000888: 	cvttsd2si	%xmm1, %rax
.Ltmp3152:
    0000088d: 	subq	%r13, %rax
    00000890: 	movdqa	%xmm0, %xmm1
    00000894: 	imulq	$0x1f40, %rax, %rdx
    0000089b: 	psrldq	$0x8, %xmm1
    000008a0: 	paddq	%xmm1, %xmm0
    000008a4: 	movq	%xmm0, %rax
    000008a9: 	cmpq	%rax, %rdx
    000008ac: 	je	.Ltmp2998 # Offset: 2220
    000008ae: 	movl	current_test(%rip), %edx
    000008b4: 	movq	%r14, %rsi
    000008b7: 	movl	$0x1, %edi
    000008bc: 	xorl	%eax, %eax
    000008be: 	callq	__printf_chk@PLT # Offset: 2238
    000008c3: 	movl	iterations(%rip), %ecx
.Ltmp2998:
    000008c9: 	addl	$0x1, %r12d
    000008cd: 	cmpl	%ecx, %r12d
    000008d0: 	jl	.Ltmp2999 # Offset: 2256
.Ltmp2995:
    000008d6: 	movq	0x30(%rsp), %rsi
    000008db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2274
    000008e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008fc: 	je	.Ltmp3000 # Offset: 2300
.Ltmp3226:
    00000902: 	movq	-0x20(%rax), %r12
    00000906: 	callq	clock@PLT # Offset: 2310
    0000090b: 	pxor	%xmm0, %xmm0
    0000090f: 	movq	%rax, end_time(%rip)
    00000916: 	movq	%r12, %rdi
    00000919: 	subq	start_time(%rip), %rax
    00000920: 	cvtsi2sd	%rax, %xmm0
    00000925: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000092d: 	callq	_Z13record_resultdPKc # Offset: 2349
    00000932: 	movq	0x150(%rsp), %rdi
    0000093a: 	cmpq	0x38(%rsp), %rdi
    0000093f: 	je	.Ltmp3001 # Offset: 2367
    00000941: 	movq	0x160(%rsp), %rax
    00000949: 	leaq	0x1(%rax), %rsi
    0000094d: 	callq	_ZdlPvm@PLT # Offset: 2381
.Ltmp3001:
    00000952: 	movq	0x28(%rsp), %rsi
    00000957: 	movq	0x30(%rsp), %rdi
    0000095c: 	leaq	DATAat0x3d2f8(%rip), %rdx
    00000963: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2403
    00000968: 	callq	clock@PLT # Offset: 2408
    0000096d: 	movl	iterations(%rip), %ecx
    00000973: 	movq	%rax, start_time(%rip)
    0000097a: 	testl	%ecx, %ecx
    0000097c: 	jle	.Ltmp3002 # Offset: 2428
    00000982: 	movq	0x10(%rsp), %rax
    00000987: 	addq	0x18(%rsp), %rax
    0000098c: 	xorl	%r12d, %r12d
    0000098f: 	movabsq	$-0x8000000000000000, %r14
    00000999: 	addq	%rbp, %rax
    0000099c: 	addq	0x20(%rsp), %rax
    000009a1: 	leaq	DATAat0x3d1d8(%rip), %r13
    000009a8: 	movq	%rax, %xmm7
    000009ad: 	punpcklqdq	%xmm7, %xmm7
    000009b1: 	movaps	%xmm7, (%rsp)
    000009b5: 	nopl	(%rax) # Size: 3
.Ltmp3006:
    000009b8: 	movq	%r15, %rax
    000009bb: 	pxor	%xmm0, %xmm0
    000009bf: 	nop # Size: 1
.Ltmp3003:
    000009c0: 	paddq	(%rax), %xmm0
    000009c4: 	addq	$0x10, %rax
    000009c8: 	psubq	(%rsp), %xmm0
    000009cd: 	cmpq	%rbx, %rax
    000009d0: 	jne	.Ltmp3003 # Offset: 2512
    000009d2: 	movsd	init_value(%rip), %xmm1
    000009da: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000009e2: 	jae	.Ltmp3004 # Offset: 2530
    000009e8: 	cvttsd2si	%xmm1, %rax
.Ltmp3151:
    000009ed: 	subq	%rbp, %rax
    000009f0: 	movdqa	%xmm0, %xmm1
    000009f4: 	movq	%rax, %rdx
    000009f7: 	psrldq	$0x8, %xmm1
    000009fc: 	subq	0x10(%rsp), %rdx
    00000a01: 	subq	0x18(%rsp), %rdx
    00000a06: 	subq	0x20(%rsp), %rdx
    00000a0b: 	paddq	%xmm1, %xmm0
    00000a0f: 	imulq	$0x1f40, %rdx, %rdx
    00000a16: 	movq	%xmm0, %rax
    00000a1b: 	cmpq	%rax, %rdx
    00000a1e: 	je	.Ltmp3005 # Offset: 2590
    00000a20: 	movl	current_test(%rip), %edx
    00000a26: 	movq	%r13, %rsi
    00000a29: 	movl	$0x1, %edi
    00000a2e: 	xorl	%eax, %eax
    00000a30: 	callq	__printf_chk@PLT # Offset: 2608
    00000a35: 	movl	iterations(%rip), %ecx
.Ltmp3005:
    00000a3b: 	addl	$0x1, %r12d
    00000a3f: 	cmpl	%ecx, %r12d
    00000a42: 	jl	.Ltmp3006 # Offset: 2626
.Ltmp3002:
    00000a48: 	movq	0x30(%rsp), %rsi
    00000a4d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a54: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2644
    00000a59: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a60: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a67: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a6e: 	je	.Ltmp3007 # Offset: 2670
.Ltmp3225:
    00000a74: 	movq	-0x20(%rax), %r12
    00000a78: 	callq	clock@PLT # Offset: 2680
    00000a7d: 	pxor	%xmm0, %xmm0
    00000a81: 	movq	%rax, end_time(%rip)
    00000a88: 	movq	%r12, %rdi
    00000a8b: 	subq	start_time(%rip), %rax
    00000a92: 	cvtsi2sd	%rax, %xmm0
    00000a97: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000a9f: 	callq	_Z13record_resultdPKc # Offset: 2719
    00000aa4: 	movq	0x150(%rsp), %rdi
    00000aac: 	cmpq	0x38(%rsp), %rdi
    00000ab1: 	je	.Ltmp3008 # Offset: 2737
    00000ab3: 	movq	0x160(%rsp), %rax
    00000abb: 	leaq	0x1(%rax), %rsi
    00000abf: 	callq	_ZdlPvm@PLT # Offset: 2751
.Ltmp3008:
    00000ac4: 	movq	0x28(%rsp), %rsi
    00000ac9: 	movq	0x30(%rsp), %rdi
    00000ace: 	leaq	DATAat0x3d316(%rip), %rdx
    00000ad5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2773
    00000ada: 	callq	clock@PLT # Offset: 2778
    00000adf: 	movl	iterations(%rip), %esi
    00000ae5: 	xorl	%r12d, %r12d
    00000ae8: 	movabsq	$-0x8000000000000000, %r14
    00000af2: 	movq	%rax, start_time(%rip)
    00000af9: 	leaq	DATAat0x3d1d8(%rip), %r13
    00000b00: 	testl	%esi, %esi
    00000b02: 	jle	.Ltmp3009 # Offset: 2818
    00000b04: 	nopl	(%rax) # Size: 4
.Ltmp3013:
    00000b08: 	movq	%r15, %rax
    00000b0b: 	xorl	%edx, %edx
    00000b0d: 	nopl	(%rax) # Size: 3
.Ltmp3010:
    00000b10: 	movq	(%rax), %rcx
    00000b13: 	addq	$0x8, %rax
    00000b17: 	imulq	%rbp, %rcx
    00000b1b: 	addq	%rcx, %rdx
    00000b1e: 	cmpq	%rax, %rbx
    00000b21: 	jne	.Ltmp3010 # Offset: 2849
    00000b23: 	movsd	init_value(%rip), %xmm0
    00000b2b: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00000b33: 	jae	.Ltmp3011 # Offset: 2867
    00000b39: 	cvttsd2si	%xmm0, %rax
.Ltmp3150:
    00000b3e: 	imulq	%rbp, %rax
    00000b42: 	imulq	$0x1f40, %rax, %rax
    00000b49: 	cmpq	%rax, %rdx
    00000b4c: 	je	.Ltmp3012 # Offset: 2892
    00000b4e: 	movl	current_test(%rip), %edx
    00000b54: 	movq	%r13, %rsi
    00000b57: 	movl	$0x1, %edi
    00000b5c: 	xorl	%eax, %eax
    00000b5e: 	callq	__printf_chk@PLT # Offset: 2910
    00000b63: 	movl	iterations(%rip), %esi
.Ltmp3012:
    00000b69: 	addl	$0x1, %r12d
    00000b6d: 	cmpl	%esi, %r12d
    00000b70: 	jl	.Ltmp3013 # Offset: 2928
.Ltmp3009:
    00000b72: 	movq	0x30(%rsp), %rsi
    00000b77: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b7e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2942
    00000b83: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b8a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b91: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b98: 	je	.Ltmp3014 # Offset: 2968
.Ltmp3224:
    00000b9e: 	movq	-0x20(%rax), %r12
    00000ba2: 	callq	clock@PLT # Offset: 2978
    00000ba7: 	pxor	%xmm0, %xmm0
    00000bab: 	movq	%rax, end_time(%rip)
    00000bb2: 	movq	%r12, %rdi
    00000bb5: 	subq	start_time(%rip), %rax
    00000bbc: 	cvtsi2sd	%rax, %xmm0
    00000bc1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000bc9: 	callq	_Z13record_resultdPKc # Offset: 3017
    00000bce: 	movq	0x150(%rsp), %rdi
    00000bd6: 	cmpq	0x38(%rsp), %rdi
    00000bdb: 	je	.Ltmp3015 # Offset: 3035
    00000bdd: 	movq	0x160(%rsp), %rax
    00000be5: 	leaq	0x1(%rax), %rsi
    00000be9: 	callq	_ZdlPvm@PLT # Offset: 3049
.Ltmp3015:
    00000bee: 	movq	0x28(%rsp), %rsi
    00000bf3: 	movq	0x30(%rsp), %rdi
    00000bf8: 	leaq	DATAat0x3d329(%rip), %rdx
    00000bff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3071
    00000c04: 	callq	clock@PLT # Offset: 3076
    00000c09: 	movl	iterations(%rip), %esi
    00000c0f: 	movq	%rax, start_time(%rip)
    00000c16: 	testl	%esi, %esi
    00000c18: 	jle	.Ltmp3016 # Offset: 3096
    00000c1e: 	movq	0x10(%rsp), %r12
    00000c23: 	imulq	0x18(%rsp), %r12
    00000c29: 	xorl	%r13d, %r13d
    00000c2c: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000c33: 	imulq	%rbp, %r12
    00000c37: 	imulq	0x20(%rsp), %r12
    00000c3d: 	nopl	(%rax) # Size: 3
.Ltmp3020:
    00000c40: 	movq	%r15, %rax
    00000c43: 	xorl	%edx, %edx
    00000c45: 	nopl	(%rax) # Size: 3
.Ltmp3017:
    00000c48: 	movq	(%rax), %rcx
    00000c4b: 	addq	$0x8, %rax
    00000c4f: 	imulq	%r12, %rcx
    00000c53: 	addq	%rcx, %rdx
    00000c56: 	cmpq	%rbx, %rax
    00000c59: 	jne	.Ltmp3017 # Offset: 3161
    00000c5b: 	movsd	init_value(%rip), %xmm0
    00000c63: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00000c6b: 	jae	.Ltmp3018 # Offset: 3179
    00000c71: 	cvttsd2si	%xmm0, %rax
.Ltmp3149:
    00000c76: 	imulq	%r12, %rax
    00000c7a: 	imulq	$0x1f40, %rax, %rax
    00000c81: 	cmpq	%rax, %rdx
    00000c84: 	je	.Ltmp3019 # Offset: 3204
    00000c86: 	movl	current_test(%rip), %edx
    00000c8c: 	movq	%r14, %rsi
    00000c8f: 	movl	$0x1, %edi
    00000c94: 	xorl	%eax, %eax
    00000c96: 	callq	__printf_chk@PLT # Offset: 3222
    00000c9b: 	movl	iterations(%rip), %esi
.Ltmp3019:
    00000ca1: 	addl	$0x1, %r13d
    00000ca5: 	cmpl	%esi, %r13d
    00000ca8: 	jl	.Ltmp3020 # Offset: 3240
.Ltmp3016:
    00000caa: 	movq	0x30(%rsp), %rsi
    00000caf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000cb6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3254
    00000cbb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cc2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cc9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cd0: 	je	.Ltmp3021 # Offset: 3280
.Ltmp3223:
    00000cd6: 	movq	-0x20(%rax), %r12
    00000cda: 	callq	clock@PLT # Offset: 3290
    00000cdf: 	pxor	%xmm0, %xmm0
    00000ce3: 	movq	%rax, end_time(%rip)
    00000cea: 	movq	%r12, %rdi
    00000ced: 	subq	start_time(%rip), %rax
    00000cf4: 	cvtsi2sd	%rax, %xmm0
    00000cf9: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d01: 	callq	_Z13record_resultdPKc # Offset: 3329
    00000d06: 	movq	0x150(%rsp), %rdi
    00000d0e: 	cmpq	0x38(%rsp), %rdi
    00000d13: 	je	.Ltmp3022 # Offset: 3347
    00000d15: 	movq	0x160(%rsp), %rax
    00000d1d: 	leaq	0x1(%rax), %rsi
    00000d21: 	callq	_ZdlPvm@PLT # Offset: 3361
.Ltmp3022:
    00000d26: 	movq	0x28(%rsp), %rsi
    00000d2b: 	movq	0x30(%rsp), %rdi
    00000d30: 	leaq	DATAat0x3d600(%rip), %rdx
    00000d37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3383
    00000d3c: 	callq	clock@PLT # Offset: 3388
    00000d41: 	movl	iterations(%rip), %ecx
    00000d47: 	movq	%rax, start_time(%rip)
    00000d4e: 	testl	%ecx, %ecx
    00000d50: 	jle	.Ltmp3023 # Offset: 3408
    00000d56: 	movq	0x10(%rsp), %r13
    00000d5b: 	imulq	0x18(%rsp), %r13
    00000d61: 	xorl	%r12d, %r12d
    00000d64: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000d6b: 	imulq	%rbp, %r13
    00000d6f: 	imulq	0x20(%rsp), %r13
    00000d75: 	movq	%r13, %xmm6
    00000d7a: 	punpcklqdq	%xmm6, %xmm6
    00000d7e: 	movaps	%xmm6, (%rsp)
    00000d82: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3027:
    00000d88: 	movq	%r15, %rax
    00000d8b: 	pxor	%xmm0, %xmm0
    00000d8f: 	nop # Size: 1
.Ltmp3024:
    00000d90: 	movdqa	(%rsp), %xmm1
    00000d95: 	paddq	(%rax), %xmm1
    00000d99: 	addq	$0x10, %rax
    00000d9d: 	paddq	%xmm1, %xmm0
    00000da1: 	cmpq	%rbx, %rax
    00000da4: 	jne	.Ltmp3024 # Offset: 3492
    00000da6: 	movsd	init_value(%rip), %xmm1
    00000dae: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    00000db6: 	jae	.Ltmp3025 # Offset: 3510
    00000dbc: 	cvttsd2si	%xmm1, %rax
.Ltmp3148:
    00000dc1: 	addq	%r13, %rax
    00000dc4: 	movdqa	%xmm0, %xmm1
    00000dc8: 	imulq	$0x1f40, %rax, %rdx
    00000dcf: 	psrldq	$0x8, %xmm1
    00000dd4: 	paddq	%xmm1, %xmm0
    00000dd8: 	movq	%xmm0, %rax
    00000ddd: 	cmpq	%rax, %rdx
    00000de0: 	je	.Ltmp3026 # Offset: 3552
    00000de2: 	movl	current_test(%rip), %edx
    00000de8: 	movq	%r14, %rsi
    00000deb: 	movl	$0x1, %edi
    00000df0: 	xorl	%eax, %eax
    00000df2: 	callq	__printf_chk@PLT # Offset: 3570
    00000df7: 	movl	iterations(%rip), %ecx
.Ltmp3026:
    00000dfd: 	addl	$0x1, %r12d
    00000e01: 	cmpl	%ecx, %r12d
    00000e04: 	jl	.Ltmp3027 # Offset: 3588
.Ltmp3023:
    00000e0a: 	movq	0x30(%rsp), %rsi
    00000e0f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e16: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3606
    00000e1b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e22: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e29: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e30: 	je	.Ltmp3028 # Offset: 3632
.Ltmp3222:
    00000e36: 	movq	-0x20(%rax), %r12
    00000e3a: 	callq	clock@PLT # Offset: 3642
    00000e3f: 	pxor	%xmm0, %xmm0
    00000e43: 	movq	%rax, end_time(%rip)
    00000e4a: 	movq	%r12, %rdi
    00000e4d: 	subq	start_time(%rip), %rax
    00000e54: 	cvtsi2sd	%rax, %xmm0
    00000e59: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e61: 	callq	_Z13record_resultdPKc # Offset: 3681
    00000e66: 	movq	0x150(%rsp), %rdi
    00000e6e: 	cmpq	0x38(%rsp), %rdi
    00000e73: 	je	.Ltmp3029 # Offset: 3699
    00000e75: 	movq	0x160(%rsp), %rax
    00000e7d: 	leaq	0x1(%rax), %rsi
    00000e81: 	callq	_ZdlPvm@PLT # Offset: 3713
.Ltmp3029:
    00000e86: 	movq	0x28(%rsp), %rsi
    00000e8b: 	movq	0x30(%rsp), %rdi
    00000e90: 	leaq	DATAat0x3d620(%rip), %rdx
    00000e97: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3735
    00000e9c: 	callq	clock@PLT # Offset: 3740
    00000ea1: 	movl	iterations(%rip), %esi
    00000ea7: 	movq	%rax, start_time(%rip)
    00000eae: 	testl	%esi, %esi
    00000eb0: 	jle	.Ltmp3030 # Offset: 3760
    00000eb6: 	movq	0x10(%rsp), %r12
    00000ebb: 	imulq	0x18(%rsp), %r12
    00000ec1: 	xorl	%r13d, %r13d
    00000ec4: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000ecb: 	imulq	%rbp, %r12
    00000ecf: 	imulq	0x20(%rsp), %r12
    00000ed5: 	nopl	(%rax) # Size: 3
.Ltmp3034:
    00000ed8: 	movq	%r15, %rax
    00000edb: 	xorl	%edx, %edx
    00000edd: 	nopl	(%rax) # Size: 3
.Ltmp3031:
    00000ee0: 	movq	(%rax), %rcx
    00000ee3: 	addq	$0x8, %rax
    00000ee7: 	imulq	%r12, %rcx
    00000eeb: 	addq	%rcx, %rdx
    00000eee: 	cmpq	%rbx, %rax
    00000ef1: 	jne	.Ltmp3031 # Offset: 3825
    00000ef3: 	movsd	init_value(%rip), %xmm0
    00000efb: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00000f03: 	jae	.Ltmp3032 # Offset: 3843
    00000f09: 	cvttsd2si	%xmm0, %rax
.Ltmp3147:
    00000f0e: 	imulq	%rbp, %rax
    00000f12: 	imulq	0x10(%rsp), %rax
    00000f18: 	imulq	0x18(%rsp), %rax
    00000f1e: 	imulq	0x20(%rsp), %rax
    00000f24: 	imulq	$0x1f40, %rax, %rax
    00000f2b: 	cmpq	%rax, %rdx
    00000f2e: 	je	.Ltmp3033 # Offset: 3886
    00000f30: 	movl	current_test(%rip), %edx
    00000f36: 	movq	%r14, %rsi
    00000f39: 	movl	$0x1, %edi
    00000f3e: 	xorl	%eax, %eax
    00000f40: 	callq	__printf_chk@PLT # Offset: 3904
    00000f45: 	movl	iterations(%rip), %esi
.Ltmp3033:
    00000f4b: 	addl	$0x1, %r13d
    00000f4f: 	cmpl	%esi, %r13d
    00000f52: 	jl	.Ltmp3034 # Offset: 3922
.Ltmp3030:
    00000f54: 	movq	0x30(%rsp), %rsi
    00000f59: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f60: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3936
    00000f65: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f6c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f73: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f7a: 	je	.Ltmp3035 # Offset: 3962
.Ltmp3221:
    00000f80: 	movq	-0x20(%rax), %r12
    00000f84: 	callq	clock@PLT # Offset: 3972
    00000f89: 	pxor	%xmm0, %xmm0
    00000f8d: 	movq	%rax, end_time(%rip)
    00000f94: 	movq	%r12, %rdi
    00000f97: 	subq	start_time(%rip), %rax
    00000f9e: 	cvtsi2sd	%rax, %xmm0
    00000fa3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000fab: 	callq	_Z13record_resultdPKc # Offset: 4011
    00000fb0: 	movq	0x150(%rsp), %rdi
    00000fb8: 	cmpq	0x38(%rsp), %rdi
    00000fbd: 	je	.Ltmp3036 # Offset: 4029
    00000fbf: 	movq	0x160(%rsp), %rax
    00000fc7: 	leaq	0x1(%rax), %rsi
    00000fcb: 	callq	_ZdlPvm@PLT # Offset: 4043
.Ltmp3036:
    00000fd0: 	movq	0x28(%rsp), %rsi
    00000fd5: 	movq	0x30(%rsp), %rdi
    00000fda: 	leaq	DATAat0x3d347(%rip), %rdx
    00000fe1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4065
    00000fe6: 	callq	clock@PLT # Offset: 4070
    00000feb: 	movl	iterations(%rip), %edi
    00000ff1: 	xorl	%r12d, %r12d
    00000ff4: 	movabsq	$-0x8000000000000000, %r14
    00000ffe: 	movq	%rax, start_time(%rip)
    00001005: 	leaq	DATAat0x3d1d8(%rip), %r13
    0000100c: 	testl	%edi, %edi
    0000100e: 	jle	.Ltmp3037 # Offset: 4110
.Ltmp3041:
    00001010: 	movq	%r15, %rcx
    00001013: 	xorl	%esi, %esi
    00001015: 	nopl	(%rax) # Size: 3
.Ltmp3038:
    00001018: 	movq	(%rcx), %rax
    0000101b: 	xorl	%edx, %edx
    0000101d: 	addq	$0x8, %rcx
    00001021: 	divq	%rbp
    00001024: 	addq	%rax, %rsi
    00001027: 	cmpq	%rbx, %rcx
    0000102a: 	jne	.Ltmp3038 # Offset: 4138
    0000102c: 	movsd	init_value(%rip), %xmm0
    00001034: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    0000103c: 	jae	.Ltmp3039 # Offset: 4156
    00001042: 	cvttsd2si	%xmm0, %rax
.Ltmp3146:
    00001047: 	xorl	%edx, %edx
    00001049: 	divq	%rbp
    0000104c: 	imulq	$0x1f40, %rax, %rax
    00001053: 	cmpq	%rax, %rsi
    00001056: 	je	.Ltmp3040 # Offset: 4182
    00001058: 	movl	current_test(%rip), %edx
    0000105e: 	movq	%r13, %rsi
    00001061: 	movl	$0x1, %edi
    00001066: 	xorl	%eax, %eax
    00001068: 	callq	__printf_chk@PLT # Offset: 4200
    0000106d: 	movl	iterations(%rip), %edi
.Ltmp3040:
    00001073: 	addl	$0x1, %r12d
    00001077: 	cmpl	%edi, %r12d
    0000107a: 	jl	.Ltmp3041 # Offset: 4218
.Ltmp3037:
    0000107c: 	movq	0x30(%rsp), %rsi
    00001081: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001088: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4232
    0000108d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001094: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000109b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010a2: 	je	.Ltmp3042 # Offset: 4258
.Ltmp3220:
    000010a8: 	movq	-0x20(%rax), %r12
    000010ac: 	callq	clock@PLT # Offset: 4268
    000010b1: 	pxor	%xmm0, %xmm0
    000010b5: 	movq	%rax, end_time(%rip)
    000010bc: 	movq	%r12, %rdi
    000010bf: 	subq	start_time(%rip), %rax
    000010c6: 	cvtsi2sd	%rax, %xmm0
    000010cb: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000010d3: 	callq	_Z13record_resultdPKc # Offset: 4307
    000010d8: 	movq	0x150(%rsp), %rdi
    000010e0: 	cmpq	0x38(%rsp), %rdi
    000010e5: 	je	.Ltmp3043 # Offset: 4325
    000010e7: 	movq	0x160(%rsp), %rax
    000010ef: 	leaq	0x1(%rax), %rsi
    000010f3: 	callq	_ZdlPvm@PLT # Offset: 4339
.Ltmp3043:
    000010f8: 	movq	0x28(%rsp), %rsi
    000010fd: 	movq	0x30(%rsp), %rdi
    00001102: 	leaq	DATAat0x3d358(%rip), %rdx
    00001109: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4361
    0000110e: 	callq	clock@PLT # Offset: 4366
    00001113: 	movl	iterations(%rip), %edi
    00001119: 	xorl	%r12d, %r12d
    0000111c: 	movabsq	$-0x8000000000000000, %r14
    00001126: 	movq	%rax, start_time(%rip)
    0000112d: 	leaq	DATAat0x3d1d8(%rip), %r13
    00001134: 	testl	%edi, %edi
    00001136: 	jle	.Ltmp3044 # Offset: 4406
    0000113c: 	nopl	(%rax) # Size: 4
.Ltmp3048:
    00001140: 	movq	0x10(%rsp), %r8
    00001145: 	movq	0x18(%rsp), %r9
    0000114a: 	movq	%r15, %rcx
    0000114d: 	xorl	%esi, %esi
    0000114f: 	movq	0x20(%rsp), %r10
    00001154: 	nopl	(%rax) # Size: 4
.Ltmp3045:
    00001158: 	movq	(%rcx), %rax
    0000115b: 	xorl	%edx, %edx
    0000115d: 	addq	$0x8, %rcx
    00001161: 	divq	%rbp
    00001164: 	xorl	%edx, %edx
    00001166: 	divq	%r8
    00001169: 	xorl	%edx, %edx
    0000116b: 	divq	%r9
    0000116e: 	xorl	%edx, %edx
    00001170: 	divq	%r10
    00001173: 	addq	%rax, %rsi
    00001176: 	cmpq	%rbx, %rcx
    00001179: 	jne	.Ltmp3045 # Offset: 4473
    0000117b: 	movsd	init_value(%rip), %xmm0
    00001183: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    0000118b: 	jae	.Ltmp3046 # Offset: 4491
    00001191: 	cvttsd2si	%xmm0, %rax
.Ltmp3145:
    00001196: 	xorl	%edx, %edx
    00001198: 	divq	%rbp
    0000119b: 	xorl	%edx, %edx
    0000119d: 	divq	0x10(%rsp)
    000011a2: 	xorl	%edx, %edx
    000011a4: 	divq	0x18(%rsp)
    000011a9: 	xorl	%edx, %edx
    000011ab: 	divq	0x20(%rsp)
    000011b0: 	imulq	$0x1f40, %rax, %rax
    000011b7: 	cmpq	%rax, %rsi
    000011ba: 	je	.Ltmp3047 # Offset: 4538
    000011bc: 	movl	current_test(%rip), %edx
    000011c2: 	movq	%r13, %rsi
    000011c5: 	movl	$0x1, %edi
    000011ca: 	xorl	%eax, %eax
    000011cc: 	callq	__printf_chk@PLT # Offset: 4556
    000011d1: 	movl	iterations(%rip), %edi
.Ltmp3047:
    000011d7: 	addl	$0x1, %r12d
    000011db: 	cmpl	%edi, %r12d
    000011de: 	jl	.Ltmp3048 # Offset: 4574
.Ltmp3044:
    000011e4: 	movq	0x30(%rsp), %rsi
    000011e9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4592
    000011f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001203: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000120a: 	je	.Ltmp3049 # Offset: 4618
.Ltmp3219:
    00001210: 	movq	-0x20(%rax), %r12
    00001214: 	callq	clock@PLT # Offset: 4628
    00001219: 	pxor	%xmm0, %xmm0
    0000121d: 	movq	%rax, end_time(%rip)
    00001224: 	movq	%r12, %rdi
    00001227: 	subq	start_time(%rip), %rax
    0000122e: 	cvtsi2sd	%rax, %xmm0
    00001233: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000123b: 	callq	_Z13record_resultdPKc # Offset: 4667
    00001240: 	movq	0x150(%rsp), %rdi
    00001248: 	cmpq	0x38(%rsp), %rdi
    0000124d: 	je	.Ltmp3050 # Offset: 4685
    0000124f: 	movq	0x160(%rsp), %rax
    00001257: 	leaq	0x1(%rax), %rsi
    0000125b: 	callq	_ZdlPvm@PLT # Offset: 4699
.Ltmp3050:
    00001260: 	movq	0x28(%rsp), %rsi
    00001265: 	movq	0x30(%rsp), %rdi
    0000126a: 	leaq	DATAat0x3d373(%rip), %rdx
    00001271: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4721
    00001276: 	callq	clock@PLT # Offset: 4726
    0000127b: 	movl	iterations(%rip), %ecx
    00001281: 	movq	%rax, start_time(%rip)
    00001288: 	testl	%ecx, %ecx
    0000128a: 	jle	.Ltmp3051 # Offset: 4746
    00001290: 	movq	%rbp, %rax
    00001293: 	xorl	%edx, %edx
    00001295: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000129c: 	xorl	%r12d, %r12d
    0000129f: 	divq	0x10(%rsp)
    000012a4: 	xorl	%edx, %edx
    000012a6: 	divq	0x18(%rsp)
    000012ab: 	xorl	%edx, %edx
    000012ad: 	divq	0x20(%rsp)
    000012b2: 	movq	%rax, %xmm7
    000012b7: 	movq	%rax, %r13
    000012ba: 	punpcklqdq	%xmm7, %xmm7
    000012be: 	movaps	%xmm7, (%rsp)
    000012c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3055:
    000012c8: 	movq	%r15, %rax
    000012cb: 	pxor	%xmm0, %xmm0
    000012cf: 	nop # Size: 1
.Ltmp3052:
    000012d0: 	movdqa	(%rsp), %xmm1
    000012d5: 	paddq	(%rax), %xmm1
    000012d9: 	addq	$0x10, %rax
    000012dd: 	paddq	%xmm1, %xmm0
    000012e1: 	cmpq	%rbx, %rax
    000012e4: 	jne	.Ltmp3052 # Offset: 4836
    000012e6: 	movsd	init_value(%rip), %xmm1
    000012ee: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000012f6: 	jae	.Ltmp3053 # Offset: 4854
    000012fc: 	cvttsd2si	%xmm1, %rax
.Ltmp3144:
    00001301: 	addq	%r13, %rax
    00001304: 	movdqa	%xmm0, %xmm1
    00001308: 	imulq	$0x1f40, %rax, %rdx
    0000130f: 	psrldq	$0x8, %xmm1
    00001314: 	paddq	%xmm1, %xmm0
    00001318: 	movq	%xmm0, %rax
    0000131d: 	cmpq	%rax, %rdx
    00001320: 	je	.Ltmp3054 # Offset: 4896
    00001322: 	movl	current_test(%rip), %edx
    00001328: 	movq	%r14, %rsi
    0000132b: 	movl	$0x1, %edi
    00001330: 	xorl	%eax, %eax
    00001332: 	callq	__printf_chk@PLT # Offset: 4914
    00001337: 	movl	iterations(%rip), %ecx
.Ltmp3054:
    0000133d: 	addl	$0x1, %r12d
    00001341: 	cmpl	%ecx, %r12d
    00001344: 	jl	.Ltmp3055 # Offset: 4932
.Ltmp3051:
    0000134a: 	movq	0x30(%rsp), %rsi
    0000134f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001356: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4950
    0000135b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001362: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001369: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001370: 	je	.Ltmp3056 # Offset: 4976
.Ltmp3218:
    00001376: 	movq	-0x20(%rax), %r12
    0000137a: 	callq	clock@PLT # Offset: 4986
    0000137f: 	pxor	%xmm0, %xmm0
    00001383: 	movq	%rax, end_time(%rip)
    0000138a: 	movq	%r12, %rdi
    0000138d: 	subq	start_time(%rip), %rax
    00001394: 	cvtsi2sd	%rax, %xmm0
    00001399: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000013a1: 	callq	_Z13record_resultdPKc # Offset: 5025
    000013a6: 	movq	0x150(%rsp), %rdi
    000013ae: 	cmpq	0x38(%rsp), %rdi
    000013b3: 	je	.Ltmp3057 # Offset: 5043
    000013b5: 	movq	0x160(%rsp), %rax
    000013bd: 	leaq	0x1(%rax), %rsi
    000013c1: 	callq	_ZdlPvm@PLT # Offset: 5057
.Ltmp3057:
    000013c6: 	movq	0x28(%rsp), %rsi
    000013cb: 	movq	0x30(%rsp), %rdi
    000013d0: 	leaq	DATAat0x3d38f(%rip), %rdx
    000013d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5079
    000013dc: 	callq	clock@PLT # Offset: 5084
    000013e1: 	movl	iterations(%rip), %ecx
    000013e7: 	movq	%rax, start_time(%rip)
    000013ee: 	testl	%ecx, %ecx
    000013f0: 	jle	.Ltmp3058 # Offset: 5104
    000013f6: 	movq	0x10(%rsp), %rax
    000013fb: 	imulq	0x18(%rsp), %rax
    00001401: 	xorl	%edx, %edx
    00001403: 	movq	%rbp, %r13
    00001406: 	xorl	%r12d, %r12d
    00001409: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001410: 	divq	0x20(%rsp)
    00001415: 	subq	%rax, %r13
    00001418: 	movq	%r13, %xmm6
    0000141d: 	punpcklqdq	%xmm6, %xmm6
    00001421: 	movaps	%xmm6, (%rsp)
    00001425: 	nopl	(%rax) # Size: 3
.Ltmp3062:
    00001428: 	movq	%r15, %rax
    0000142b: 	pxor	%xmm0, %xmm0
    0000142f: 	nop # Size: 1
.Ltmp3059:
    00001430: 	movdqa	(%rsp), %xmm1
    00001435: 	paddq	(%rax), %xmm1
    00001439: 	addq	$0x10, %rax
    0000143d: 	paddq	%xmm1, %xmm0
    00001441: 	cmpq	%rbx, %rax
    00001444: 	jne	.Ltmp3059 # Offset: 5188
    00001446: 	movsd	init_value(%rip), %xmm1
    0000144e: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    00001456: 	jae	.Ltmp3060 # Offset: 5206
    0000145c: 	cvttsd2si	%xmm1, %rax
.Ltmp3143:
    00001461: 	addq	%r13, %rax
    00001464: 	movdqa	%xmm0, %xmm1
    00001468: 	imulq	$0x1f40, %rax, %rdx
    0000146f: 	psrldq	$0x8, %xmm1
    00001474: 	paddq	%xmm1, %xmm0
    00001478: 	movq	%xmm0, %rax
    0000147d: 	cmpq	%rax, %rdx
    00001480: 	je	.Ltmp3061 # Offset: 5248
    00001482: 	movl	current_test(%rip), %edx
    00001488: 	movq	%r14, %rsi
    0000148b: 	movl	$0x1, %edi
    00001490: 	xorl	%eax, %eax
    00001492: 	callq	__printf_chk@PLT # Offset: 5266
    00001497: 	movl	iterations(%rip), %ecx
.Ltmp3061:
    0000149d: 	addl	$0x1, %r12d
    000014a1: 	cmpl	%ecx, %r12d
    000014a4: 	jl	.Ltmp3062 # Offset: 5284
.Ltmp3058:
    000014a6: 	movq	0x30(%rsp), %rsi
    000014ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000014b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5298
    000014b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014be: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014cc: 	je	.Ltmp3063 # Offset: 5324
.Ltmp3217:
    000014d2: 	movq	-0x20(%rax), %r12
    000014d6: 	callq	clock@PLT # Offset: 5334
    000014db: 	pxor	%xmm0, %xmm0
    000014df: 	movq	%rax, end_time(%rip)
    000014e6: 	movq	%r12, %rdi
    000014e9: 	subq	start_time(%rip), %rax
    000014f0: 	cvtsi2sd	%rax, %xmm0
    000014f5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000014fd: 	callq	_Z13record_resultdPKc # Offset: 5373
    00001502: 	movq	0x150(%rsp), %rdi
    0000150a: 	cmpq	0x38(%rsp), %rdi
    0000150f: 	je	.Ltmp3064 # Offset: 5391
    00001511: 	movq	0x160(%rsp), %rax
    00001519: 	leaq	0x1(%rax), %rsi
    0000151d: 	callq	_ZdlPvm@PLT # Offset: 5405
.Ltmp3064:
    00001522: 	movq	0x28(%rsp), %rsi
    00001527: 	movq	0x30(%rsp), %rdi
    0000152c: 	leaq	DATAat0x3d3a8(%rip), %rdx
    00001533: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5427
    00001538: 	callq	clock@PLT # Offset: 5432
    0000153d: 	movl	iterations(%rip), %ecx
    00001543: 	movq	%rax, start_time(%rip)
    0000154a: 	testl	%ecx, %ecx
    0000154c: 	jle	.Ltmp3065 # Offset: 5452
    00001552: 	movq	0x10(%rsp), %rax
    00001557: 	imulq	0x18(%rsp), %rax
    0000155d: 	xorl	%edx, %edx
    0000155f: 	xorl	%r12d, %r12d
    00001562: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001569: 	divq	0x20(%rsp)
    0000156e: 	movq	%rax, %r13
    00001571: 	movq	%rbp, %rax
    00001574: 	subq	%r13, %rax
    00001577: 	movq	%rax, %xmm7
    0000157c: 	punpcklqdq	%xmm7, %xmm7
    00001580: 	movaps	%xmm7, (%rsp)
    00001584: 	nopl	(%rax) # Size: 4
.Ltmp3069:
    00001588: 	movq	%r15, %rax
    0000158b: 	pxor	%xmm0, %xmm0
    0000158f: 	nop # Size: 1
.Ltmp3066:
    00001590: 	movdqa	(%rsp), %xmm1
    00001595: 	paddq	(%rax), %xmm1
    00001599: 	addq	$0x10, %rax
    0000159d: 	paddq	%xmm1, %xmm0
    000015a1: 	cmpq	%rbx, %rax
    000015a4: 	jne	.Ltmp3066 # Offset: 5540
    000015a6: 	movsd	init_value(%rip), %xmm1
    000015ae: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000015b6: 	jae	.Ltmp3067 # Offset: 5558
    000015bc: 	cvttsd2si	%xmm1, %rax
.Ltmp3141:
    000015c1: 	addq	%rbp, %rax
    000015c4: 	movdqa	%xmm0, %xmm1
    000015c8: 	subq	%r13, %rax
    000015cb: 	psrldq	$0x8, %xmm1
    000015d0: 	imulq	$0x1f40, %rax, %rdx
    000015d7: 	paddq	%xmm1, %xmm0
    000015db: 	movq	%xmm0, %rax
    000015e0: 	cmpq	%rax, %rdx
    000015e3: 	je	.Ltmp3068 # Offset: 5603
    000015e5: 	movl	current_test(%rip), %edx
    000015eb: 	movq	%r14, %rsi
    000015ee: 	movl	$0x1, %edi
    000015f3: 	xorl	%eax, %eax
    000015f5: 	callq	__printf_chk@PLT # Offset: 5621
    000015fa: 	movl	iterations(%rip), %ecx
.Ltmp3068:
    00001600: 	addl	$0x1, %r12d
    00001604: 	cmpl	%ecx, %r12d
    00001607: 	jl	.Ltmp3069 # Offset: 5639
.Ltmp3065:
    0000160d: 	movq	0x30(%rsp), %rsi
    00001612: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001619: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5657
    0000161e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001625: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000162c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001633: 	je	.Ltmp3070 # Offset: 5683
.Ltmp3216:
    00001639: 	movq	-0x20(%rax), %r12
    0000163d: 	callq	clock@PLT # Offset: 5693
    00001642: 	pxor	%xmm0, %xmm0
    00001646: 	movq	%rax, end_time(%rip)
    0000164d: 	movq	%r12, %rdi
    00001650: 	subq	start_time(%rip), %rax
    00001657: 	cvtsi2sd	%rax, %xmm0
    0000165c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001664: 	callq	_Z13record_resultdPKc # Offset: 5732
    00001669: 	movq	0x150(%rsp), %rdi
    00001671: 	cmpq	0x38(%rsp), %rdi
    00001676: 	je	.Ltmp3071 # Offset: 5750
    00001678: 	movq	0x160(%rsp), %rax
    00001680: 	leaq	0x1(%rax), %rsi
    00001684: 	callq	_ZdlPvm@PLT # Offset: 5764
.Ltmp3071:
    00001689: 	movq	0x20(%rsp), %r8
    0000168e: 	movq	0x18(%rsp), %rcx
    00001693: 	movq	%rbp, %rsi
    00001696: 	movq	%r15, %rdi
    00001699: 	movq	0x10(%rsp), %rdx
    0000169e: 	callq	_Z20TestLoopsIntegerOnlyImENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 5790
    000016a3: 	movq	0x28(%rsp), %rsi
    000016a8: 	leaq	0xf0(%rsp), %rdi
    000016b0: 	leaq	DATAat0x3d3c2(%rip), %rdx
    000016b7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5815
    000016bc: 	movl	iterations(%rip), %edx
    000016c2: 	xorl	%r8d, %r8d
    000016c5: 	xorl	%ecx, %ecx
    000016c7: 	movl	$0x1f40, %esi
    000016cc: 	movq	0xf0(%rsp), %rdi
    000016d4: 	callq	_Z9summarizePKciiii # Offset: 5844
    000016d9: 	movsd	init_value(%rip), %xmm1
    000016e1: 	comisd	DATAat0x3d6b0(%rip), %xmm1
    000016e9: 	jae	.Ltmp3072 # Offset: 5865
    000016ef: 	cvttsd2si	%xmm1, %rax
.Ltmp3193:
    000016f4: 	movq	%rax, %xmm0
    000016f9: 	movq	%r15, %rax
    000016fc: 	punpcklqdq	%xmm0, %xmm0
.Ltmp3073:
    00001700: 	movaps	%xmm0, (%rax)
    00001703: 	addq	$0x10, %rax
    00001707: 	cmpq	%rbx, %rax
    0000170a: 	jne	.Ltmp3073 # Offset: 5898
    0000170c: 	addsd	DATAat0x3d700(%rip), %xmm1
    00001714: 	movq	0x28(%rsp), %rsi
    00001719: 	leaq	0x130(%rsp), %rbp
    00001721: 	movaps	%xmm0, 0x60(%rsp)
    00001726: 	movq	%rbp, %rdi
    00001729: 	movaps	%xmm0, 0x90(%rsp)
    00001731: 	movups	%xmm0, 0xb8(%rsp)
    00001739: 	cvttsd2si	%xmm1, %edx
    0000173d: 	movslq	%edx, %rax
    00001740: 	movl	%edx, %ecx
    00001742: 	imulq	$0x51eb851f, %rax, %rax
    00001749: 	sarl	$0x1f, %ecx
    0000174c: 	sarq	$0x24, %rax
    00001750: 	subl	%ecx, %eax
    00001752: 	imull	$0x32, %eax, %eax
    00001755: 	subl	%eax, %edx
    00001757: 	movl	%edx, 0x10(%rsp)
    0000175b: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001762: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5986
    00001767: 	callq	clock@PLT # Offset: 5991
    0000176c: 	movl	iterations(%rip), %ecx
    00001772: 	movq	%rax, start_time(%rip)
    00001779: 	testl	%ecx, %ecx
    0000177b: 	jle	.Ltmp3074 # Offset: 6011
    00001781: 	movslq	0x10(%rsp), %rax
    00001786: 	movq	0x30(%rsp), %rdi
    0000178b: 	xorl	%r12d, %r12d
    0000178e: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001795: 	leaq	(%rdi,%rax,8), %r13
    00001799: 	nopl	(%rax) # Size: 7
.Ltmp3078:
    000017a0: 	movsd	init_value(%rip), %xmm0
    000017a8: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    000017b0: 	jae	.Ltmp3075 # Offset: 6064
    000017b6: 	cvttsd2si	%xmm0, %rax
.Ltmp3142:
    000017bb: 	imulq	$0x1f40, %rax, %rdx
    000017c2: 	pxor	%xmm0, %xmm0
    000017c6: 	movq	%r15, %rax
    000017c9: 	nopl	(%rax) # Size: 7
.Ltmp3076:
    000017d0: 	paddq	(%rax), %xmm0
    000017d4: 	addq	$0x10, %rax
    000017d8: 	cmpq	%rax, %rbx
    000017db: 	jne	.Ltmp3076 # Offset: 6107
    000017dd: 	movdqa	%xmm0, %xmm1
    000017e1: 	psrldq	$0x8, %xmm1
    000017e6: 	paddq	%xmm1, %xmm0
    000017ea: 	movq	%xmm0, %rax
    000017ef: 	movq	%xmm0, (%r13)
    000017f5: 	cmpq	%rax, %rdx
    000017f8: 	je	.Ltmp3077 # Offset: 6136
    000017fa: 	movq	0x130(%rsp), %rdx
    00001802: 	movq	%r14, %rsi
    00001805: 	movl	$0x1, %edi
    0000180a: 	xorl	%eax, %eax
    0000180c: 	callq	__printf_chk@PLT # Offset: 6156
    00001811: 	movl	iterations(%rip), %ecx
.Ltmp3077:
    00001817: 	addl	$0x1, %r12d
    0000181b: 	cmpl	%ecx, %r12d
    0000181e: 	jl	.Ltmp3078 # Offset: 6174
.Ltmp3074:
    00001820: 	movq	%rbp, %rsi
    00001823: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000182a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6186
    0000182f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001836: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000183d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001844: 	je	.Ltmp3079 # Offset: 6212
.Ltmp3215:
    0000184a: 	movq	-0x20(%rax), %r12
    0000184e: 	callq	clock@PLT # Offset: 6222
    00001853: 	pxor	%xmm0, %xmm0
    00001857: 	movq	%rax, end_time(%rip)
    0000185e: 	movq	%r12, %rdi
    00001861: 	subq	start_time(%rip), %rax
    00001868: 	cvtsi2sd	%rax, %xmm0
    0000186d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001875: 	callq	_Z13record_resultdPKc # Offset: 6261
    0000187a: 	movq	0x130(%rsp), %rdi
    00001882: 	leaq	0x140(%rsp), %rax
    0000188a: 	movq	%rax, (%rsp)
    0000188e: 	cmpq	%rax, %rdi
    00001891: 	je	.Ltmp3080 # Offset: 6289
    00001893: 	movq	0x140(%rsp), %rax
    0000189b: 	leaq	0x1(%rax), %rsi
    0000189f: 	callq	_ZdlPvm@PLT # Offset: 6303
.Ltmp3080:
    000018a4: 	movq	0x28(%rsp), %rsi
    000018a9: 	leaq	DATAat0x3d3eb(%rip), %rdx
    000018b0: 	movq	%rbp, %rdi
    000018b3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6323
    000018b8: 	callq	clock@PLT # Offset: 6328
    000018bd: 	movl	iterations(%rip), %ecx
    000018c3: 	movq	%rax, start_time(%rip)
    000018ca: 	testl	%ecx, %ecx
    000018cc: 	jle	.Ltmp3081 # Offset: 6348
    000018d2: 	movslq	0x10(%rsp), %rax
    000018d7: 	movq	0x30(%rsp), %rdi
    000018dc: 	xorl	%r12d, %r12d
    000018df: 	leaq	DATAat0x3d1c8(%rip), %r14
    000018e6: 	leaq	(%rdi,%rax,8), %r13
    000018ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3085:
    000018f0: 	movsd	init_value(%rip), %xmm0
    000018f8: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001900: 	jae	.Ltmp3082 # Offset: 6400
    00001906: 	cvttsd2si	%xmm0, %rax
.Ltmp3137:
    0000190b: 	imulq	$0x1f40, %rax, %rdx
    00001912: 	pxor	%xmm0, %xmm0
    00001916: 	movq	%r15, %rax
    00001919: 	nopl	(%rax) # Size: 7
.Ltmp3083:
    00001920: 	paddq	(%rax), %xmm0
    00001924: 	addq	$0x10, %rax
    00001928: 	cmpq	%rbx, %rax
    0000192b: 	jne	.Ltmp3083 # Offset: 6443
    0000192d: 	movdqa	%xmm0, %xmm1
    00001931: 	psrldq	$0x8, %xmm1
    00001936: 	paddq	%xmm1, %xmm0
    0000193a: 	movq	%xmm0, %rax
    0000193f: 	movq	%xmm0, (%r13)
    00001945: 	cmpq	%rax, %rdx
    00001948: 	je	.Ltmp3084 # Offset: 6472
    0000194a: 	movq	0x130(%rsp), %rdx
    00001952: 	movq	%r14, %rsi
    00001955: 	movl	$0x1, %edi
    0000195a: 	xorl	%eax, %eax
    0000195c: 	callq	__printf_chk@PLT # Offset: 6492
    00001961: 	movl	iterations(%rip), %ecx
.Ltmp3084:
    00001967: 	addl	$0x1, %r12d
    0000196b: 	cmpl	%ecx, %r12d
    0000196e: 	jl	.Ltmp3085 # Offset: 6510
.Ltmp3081:
    00001970: 	movq	%rbp, %rsi
    00001973: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000197a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6522
    0000197f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001986: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000198d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001994: 	je	.Ltmp3086 # Offset: 6548
.Ltmp3214:
    0000199a: 	movq	-0x20(%rax), %r12
    0000199e: 	callq	clock@PLT # Offset: 6558
    000019a3: 	pxor	%xmm0, %xmm0
    000019a7: 	movq	%rax, end_time(%rip)
    000019ae: 	movq	%r12, %rdi
    000019b1: 	subq	start_time(%rip), %rax
    000019b8: 	cvtsi2sd	%rax, %xmm0
    000019bd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000019c5: 	callq	_Z13record_resultdPKc # Offset: 6597
    000019ca: 	movq	0x130(%rsp), %rdi
    000019d2: 	cmpq	(%rsp), %rdi
    000019d6: 	je	.Ltmp3087 # Offset: 6614
    000019d8: 	movq	0x140(%rsp), %rax
    000019e0: 	leaq	0x1(%rax), %rsi
    000019e4: 	callq	_ZdlPvm@PLT # Offset: 6628
.Ltmp3087:
    000019e9: 	movq	0x28(%rsp), %rsi
    000019ee: 	leaq	DATAat0x3d400(%rip), %rdx
    000019f5: 	movq	%rbp, %rdi
    000019f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6648
    000019fd: 	callq	clock@PLT # Offset: 6653
    00001a02: 	movl	iterations(%rip), %ecx
    00001a08: 	xorl	%r12d, %r12d
    00001a0b: 	movabsq	$-0x8000000000000000, %r13
    00001a15: 	movq	%rax, start_time(%rip)
    00001a1c: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001a23: 	testl	%ecx, %ecx
    00001a25: 	jle	.Ltmp3088 # Offset: 6693
    00001a2b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3092:
    00001a30: 	movsd	init_value(%rip), %xmm0
    00001a38: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001a40: 	jae	.Ltmp3089 # Offset: 6720
    00001a46: 	cvttsd2si	%xmm0, %rax
.Ltmp3138:
    00001a4b: 	imulq	$0x1f40, %rax, %rdx
    00001a52: 	pxor	%xmm0, %xmm0
    00001a56: 	movq	%r15, %rax
    00001a59: 	nopl	(%rax) # Size: 7
.Ltmp3090:
    00001a60: 	paddq	(%rax), %xmm0
    00001a64: 	addq	$0x10, %rax
    00001a68: 	cmpq	%rbx, %rax
    00001a6b: 	jne	.Ltmp3090 # Offset: 6763
    00001a6d: 	movdqa	%xmm0, %xmm1
    00001a71: 	psrldq	$0x8, %xmm1
    00001a76: 	paddq	%xmm1, %xmm0
    00001a7a: 	movq	%xmm0, 0x90(%rsp)
    00001a83: 	movq	%xmm0, %rax
    00001a88: 	cmpq	%rax, %rdx
    00001a8b: 	je	.Ltmp3091 # Offset: 6795
    00001a8d: 	movq	0x130(%rsp), %rdx
    00001a95: 	movq	%r14, %rsi
    00001a98: 	movl	$0x1, %edi
    00001a9d: 	xorl	%eax, %eax
    00001a9f: 	callq	__printf_chk@PLT # Offset: 6815
    00001aa4: 	movl	iterations(%rip), %ecx
.Ltmp3091:
    00001aaa: 	addl	$0x1, %r12d
    00001aae: 	cmpl	%ecx, %r12d
    00001ab1: 	jl	.Ltmp3092 # Offset: 6833
.Ltmp3088:
    00001ab7: 	movq	%rbp, %rsi
    00001aba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ac1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6849
    00001ac6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001acd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ad4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001adb: 	je	.Ltmp3093 # Offset: 6875
.Ltmp3213:
    00001ae1: 	movq	-0x20(%rax), %r12
    00001ae5: 	callq	clock@PLT # Offset: 6885
    00001aea: 	pxor	%xmm0, %xmm0
    00001aee: 	movq	%rax, end_time(%rip)
    00001af5: 	movq	%r12, %rdi
    00001af8: 	subq	start_time(%rip), %rax
    00001aff: 	cvtsi2sd	%rax, %xmm0
    00001b04: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b0c: 	callq	_Z13record_resultdPKc # Offset: 6924
    00001b11: 	movq	0x130(%rsp), %rdi
    00001b19: 	cmpq	(%rsp), %rdi
    00001b1d: 	je	.Ltmp3094 # Offset: 6941
    00001b1f: 	movq	0x140(%rsp), %rax
    00001b27: 	leaq	0x1(%rax), %rsi
    00001b2b: 	callq	_ZdlPvm@PLT # Offset: 6955
.Ltmp3094:
    00001b30: 	movq	0x28(%rsp), %rsi
    00001b35: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001b3c: 	movq	%rbp, %rdi
    00001b3f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6975
    00001b44: 	callq	clock@PLT # Offset: 6980
    00001b49: 	movl	iterations(%rip), %ecx
    00001b4f: 	xorl	%r12d, %r12d
    00001b52: 	movabsq	$-0x8000000000000000, %r13
    00001b5c: 	movq	%rax, start_time(%rip)
    00001b63: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001b6a: 	testl	%ecx, %ecx
    00001b6c: 	jle	.Ltmp3095 # Offset: 7020
    00001b72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3099:
    00001b78: 	movsd	init_value(%rip), %xmm0
    00001b80: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001b88: 	jae	.Ltmp3096 # Offset: 7048
    00001b8e: 	cvttsd2si	%xmm0, %rax
.Ltmp3136:
    00001b93: 	imulq	$0x1f40, %rax, %rdx
    00001b9a: 	pxor	%xmm0, %xmm0
    00001b9e: 	movq	%r15, %rax
    00001ba1: 	nopl	(%rax) # Size: 7
.Ltmp3097:
    00001ba8: 	paddq	(%rax), %xmm0
    00001bac: 	addq	$0x10, %rax
    00001bb0: 	cmpq	%rax, %rbx
    00001bb3: 	jne	.Ltmp3097 # Offset: 7091
    00001bb5: 	movdqa	%xmm0, %xmm1
    00001bb9: 	psrldq	$0x8, %xmm1
    00001bbe: 	paddq	%xmm1, %xmm0
    00001bc2: 	movq	%xmm0, 0x90(%rsp)
    00001bcb: 	movq	%xmm0, %rax
    00001bd0: 	cmpq	%rax, %rdx
    00001bd3: 	je	.Ltmp3098 # Offset: 7123
    00001bd5: 	movq	0x130(%rsp), %rdx
    00001bdd: 	movq	%r14, %rsi
    00001be0: 	movl	$0x1, %edi
    00001be5: 	xorl	%eax, %eax
    00001be7: 	callq	__printf_chk@PLT # Offset: 7143
    00001bec: 	movl	iterations(%rip), %ecx
.Ltmp3098:
    00001bf2: 	addl	$0x1, %r12d
    00001bf6: 	cmpl	%ecx, %r12d
    00001bf9: 	jl	.Ltmp3099 # Offset: 7161
.Ltmp3095:
    00001bff: 	movq	%rbp, %rsi
    00001c02: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c09: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7177
    00001c0e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c15: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c1c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c23: 	je	.Ltmp3100 # Offset: 7203
.Ltmp3212:
    00001c29: 	movq	-0x20(%rax), %r12
    00001c2d: 	callq	clock@PLT # Offset: 7213
    00001c32: 	pxor	%xmm0, %xmm0
    00001c36: 	movq	%rax, end_time(%rip)
    00001c3d: 	movq	%r12, %rdi
    00001c40: 	subq	start_time(%rip), %rax
    00001c47: 	cvtsi2sd	%rax, %xmm0
    00001c4c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001c54: 	callq	_Z13record_resultdPKc # Offset: 7252
    00001c59: 	movq	0x130(%rsp), %rdi
    00001c61: 	cmpq	(%rsp), %rdi
    00001c65: 	je	.Ltmp3101 # Offset: 7269
    00001c67: 	movq	0x140(%rsp), %rax
    00001c6f: 	leaq	0x1(%rax), %rsi
    00001c73: 	callq	_ZdlPvm@PLT # Offset: 7283
.Ltmp3101:
    00001c78: 	movq	0x28(%rsp), %rsi
    00001c7d: 	leaq	DATAat0x3d430(%rip), %rdx
    00001c84: 	movq	%rbp, %rdi
    00001c87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7303
    00001c8c: 	movl	0x10(%rsp), %edx
    00001c90: 	movq	%rbp, %rcx
    00001c93: 	movl	$0x1f40, %esi
    00001c98: 	movq	%r15, %rdi
    00001c9b: 	callq	_Z23test_array_const_in_optImEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7323
    00001ca0: 	movq	0x130(%rsp), %rdi
    00001ca8: 	cmpq	(%rsp), %rdi
    00001cac: 	je	.Ltmp3102 # Offset: 7340
    00001cae: 	movq	0x140(%rsp), %rax
    00001cb6: 	leaq	0x1(%rax), %rsi
    00001cba: 	callq	_ZdlPvm@PLT # Offset: 7354
.Ltmp3102:
    00001cbf: 	movq	0x28(%rsp), %rsi
    00001cc4: 	leaq	DATAat0x3d448(%rip), %rdx
    00001ccb: 	movq	%rbp, %rdi
    00001cce: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7374
    00001cd3: 	callq	clock@PLT # Offset: 7379
    00001cd8: 	movl	iterations(%rip), %r8d
    00001cdf: 	movq	%rax, start_time(%rip)
    00001ce6: 	testl	%r8d, %r8d
    00001ce9: 	jle	.Ltmp3103 # Offset: 7401
    00001ceb: 	movslq	0x10(%rsp), %rax
    00001cf0: 	xorl	%ebx, %ebx
    00001cf2: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001cf9: 	movabsq	$-0x8000000000000000, %r13
    00001d03: 	leaq	(%r15,%rax,8), %r12
    00001d07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3139:
    00001d10: 	imulq	$0x1f40, (%r12), %rdx
    00001d18: 	movsd	init_value(%rip), %xmm0
    00001d20: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001d28: 	jae	.Ltmp3104 # Offset: 7464
    00001d2e: 	cvttsd2si	%xmm0, %rax
    00001d33: 	imulq	$0x1f40, %rax, %rax
    00001d3a: 	cmpq	%rax, %rdx
    00001d3d: 	jne	.Ltmp3105 # Offset: 7485
.Ltmp3103:
    00001d43: 	movq	%rbp, %rsi
    00001d46: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d4d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7501
    00001d52: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d59: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d60: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d67: 	je	.Ltmp3106 # Offset: 7527
.Ltmp3211:
    00001d6d: 	movq	-0x20(%rax), %r12
    00001d71: 	callq	clock@PLT # Offset: 7537
    00001d76: 	pxor	%xmm0, %xmm0
    00001d7a: 	movq	%rax, end_time(%rip)
    00001d81: 	movq	%r12, %rdi
    00001d84: 	subq	start_time(%rip), %rax
    00001d8b: 	cvtsi2sd	%rax, %xmm0
    00001d90: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d98: 	callq	_Z13record_resultdPKc # Offset: 7576
    00001d9d: 	movq	0x130(%rsp), %rdi
    00001da5: 	cmpq	(%rsp), %rdi
    00001da9: 	je	.Ltmp3107 # Offset: 7593
    00001dab: 	movq	0x140(%rsp), %rax
    00001db3: 	leaq	0x1(%rax), %rsi
    00001db7: 	callq	_ZdlPvm@PLT # Offset: 7607
.Ltmp3107:
    00001dbc: 	movsd	init_value(%rip), %xmm0
    00001dc4: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001dcc: 	jae	.Ltmp3108 # Offset: 7628
    00001dd2: 	cvttsd2si	%xmm0, %rbx
.Ltmp3195:
    00001dd7: 	movq	0x28(%rsp), %rsi
    00001ddc: 	movq	%rbp, %rdi
    00001ddf: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001de6: 	movq	%rbx, 0x90(%rsp)
    00001dee: 	movq	%rbx, 0x60(%rsp)
    00001df3: 	movq	%rbx, 0xc0(%rsp)
    00001dfb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7675
    00001e00: 	movq	0x48(%rsp), %rdi
    00001e05: 	movq	%rbp, %rdx
    00001e08: 	movl	$0x1f40, %esi
    00001e0d: 	callq	_Z24test_struct_const_in_optIm13simple_structImEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7693
    00001e12: 	movq	0x130(%rsp), %rdi
    00001e1a: 	cmpq	(%rsp), %rdi
    00001e1e: 	je	.Ltmp3109 # Offset: 7710
    00001e20: 	movq	0x140(%rsp), %rax
    00001e28: 	leaq	0x1(%rax), %rsi
    00001e2c: 	callq	_ZdlPvm@PLT # Offset: 7724
.Ltmp3109:
    00001e31: 	movq	0x28(%rsp), %rsi
    00001e36: 	leaq	DATAat0x3d475(%rip), %rdx
    00001e3d: 	movq	%rbp, %rdi
    00001e40: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7744
    00001e45: 	callq	clock@PLT # Offset: 7749
    00001e4a: 	movl	iterations(%rip), %edi
    00001e50: 	movq	%rax, start_time(%rip)
    00001e57: 	testl	%edi, %edi
    00001e59: 	jle	.Ltmp3110 # Offset: 7769
    00001e5b: 	imulq	$0x1f40, %rbx, %rbx
    00001e62: 	xorl	%r12d, %r12d
    00001e65: 	movabsq	$-0x8000000000000000, %r13
    00001e6f: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001e76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3140:
    00001e80: 	movsd	init_value(%rip), %xmm0
    00001e88: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00001e90: 	jae	.Ltmp3111 # Offset: 7824
    00001e96: 	cvttsd2si	%xmm0, %rax
    00001e9b: 	imulq	$0x1f40, %rax, %rax
    00001ea2: 	cmpq	%rax, %rbx
    00001ea5: 	jne	.Ltmp3112 # Offset: 7845
.Ltmp3110:
    00001eab: 	movq	%rbp, %rsi
    00001eae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001eb5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7861
    00001eba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ec1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ec8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ecf: 	je	.Ltmp3113 # Offset: 7887
.Ltmp3210:
    00001ed5: 	movq	-0x20(%rax), %r12
    00001ed9: 	callq	clock@PLT # Offset: 7897
    00001ede: 	pxor	%xmm0, %xmm0
    00001ee2: 	movq	%rax, end_time(%rip)
    00001ee9: 	movq	%r12, %rdi
    00001eec: 	subq	start_time(%rip), %rax
    00001ef3: 	cvtsi2sd	%rax, %xmm0
    00001ef8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f00: 	callq	_Z13record_resultdPKc # Offset: 7936
    00001f05: 	movq	0x130(%rsp), %rdi
    00001f0d: 	cmpq	(%rsp), %rdi
    00001f11: 	je	.Ltmp3114 # Offset: 7953
    00001f13: 	movq	0x140(%rsp), %rax
    00001f1b: 	leaq	0x1(%rax), %rsi
    00001f1f: 	callq	_ZdlPvm@PLT # Offset: 7967
.Ltmp3114:
    00001f24: 	movq	0x28(%rsp), %rsi
    00001f29: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001f30: 	movq	%rbp, %rdi
    00001f33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7987
    00001f38: 	callq	clock@PLT # Offset: 7992
    00001f3d: 	movl	iterations(%rip), %esi
    00001f43: 	movq	%rax, start_time(%rip)
    00001f4a: 	testl	%esi, %esi
    00001f4c: 	jle	.Ltmp3115 # Offset: 8012
    00001f4e: 	movslq	0x10(%rsp), %rax
    00001f53: 	movq	0xfcd8(%rsp), %rdx
    00001f5b: 	movq	%rdx, 0x150(%rsp,%rax,8)
.Ltmp3115:
    00001f63: 	movq	%rbp, %rsi
    00001f66: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f6d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8045
    00001f72: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f79: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f80: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f87: 	je	.Ltmp3116 # Offset: 8071
.Ltmp3209:
    00001f8d: 	movq	-0x20(%rax), %r12
    00001f91: 	callq	clock@PLT # Offset: 8081
    00001f96: 	pxor	%xmm0, %xmm0
    00001f9a: 	movq	%rax, end_time(%rip)
    00001fa1: 	movq	%r12, %rdi
    00001fa4: 	subq	start_time(%rip), %rax
    00001fab: 	cvtsi2sd	%rax, %xmm0
    00001fb0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001fb8: 	callq	_Z13record_resultdPKc # Offset: 8120
    00001fbd: 	movq	0x130(%rsp), %rdi
    00001fc5: 	cmpq	(%rsp), %rdi
    00001fc9: 	je	.Ltmp3117 # Offset: 8137
    00001fcb: 	movq	0x140(%rsp), %rax
    00001fd3: 	leaq	0x1(%rax), %rsi
    00001fd7: 	callq	_ZdlPvm@PLT # Offset: 8151
.Ltmp3117:
    00001fdc: 	movq	0x28(%rsp), %rsi
    00001fe1: 	leaq	DATAat0x3d49d(%rip), %rdx
    00001fe8: 	movq	%rbp, %rdi
    00001feb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8171
    00001ff0: 	callq	clock@PLT # Offset: 8176
    00001ff5: 	movl	iterations(%rip), %ecx
    00001ffb: 	movq	%rax, start_time(%rip)
    00002002: 	testl	%ecx, %ecx
    00002004: 	jle	.Ltmp3118 # Offset: 8196
    00002006: 	movslq	0x10(%rsp), %rax
    0000200b: 	movq	0xfcd8(%rsp), %rdx
    00002013: 	movq	%rdx, 0x150(%rsp,%rax,8)
.Ltmp3118:
    0000201b: 	movq	%rbp, %rsi
    0000201e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002025: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8229
    0000202a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002031: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002038: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000203f: 	je	.Ltmp3119 # Offset: 8255
.Ltmp3208:
    00002045: 	movq	-0x20(%rax), %r12
    00002049: 	callq	clock@PLT # Offset: 8265
    0000204e: 	pxor	%xmm0, %xmm0
    00002052: 	movq	%rax, end_time(%rip)
    00002059: 	movq	%r12, %rdi
    0000205c: 	subq	start_time(%rip), %rax
    00002063: 	cvtsi2sd	%rax, %xmm0
    00002068: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002070: 	callq	_Z13record_resultdPKc # Offset: 8304
    00002075: 	movq	0x130(%rsp), %rdi
    0000207d: 	cmpq	(%rsp), %rdi
    00002081: 	je	.Ltmp3120 # Offset: 8321
    00002083: 	movq	0x140(%rsp), %rax
    0000208b: 	leaq	0x1(%rax), %rsi
    0000208f: 	callq	_ZdlPvm@PLT # Offset: 8335
.Ltmp3120:
    00002094: 	movq	0x28(%rsp), %rsi
    00002099: 	leaq	DATAat0x3d4ac(%rip), %rdx
    000020a0: 	movq	%rbp, %rdi
    000020a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8355
    000020a8: 	callq	clock@PLT # Offset: 8360
    000020ad: 	movl	iterations(%rip), %edx
    000020b3: 	movq	%rax, start_time(%rip)
    000020ba: 	testl	%edx, %edx
    000020bc: 	jle	.Ltmp3121 # Offset: 8380
    000020be: 	movq	0xfcd8(%rsp), %rax
    000020c6: 	movq	%rax, 0x90(%rsp)
.Ltmp3121:
    000020ce: 	movq	%rbp, %rsi
    000020d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8408
    000020dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020f2: 	je	.Ltmp3122 # Offset: 8434
.Ltmp3207:
    000020f8: 	movq	-0x20(%rax), %r12
    000020fc: 	callq	clock@PLT # Offset: 8444
    00002101: 	pxor	%xmm0, %xmm0
    00002105: 	movq	%rax, end_time(%rip)
    0000210c: 	movq	%r12, %rdi
    0000210f: 	subq	start_time(%rip), %rax
    00002116: 	cvtsi2sd	%rax, %xmm0
    0000211b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002123: 	callq	_Z13record_resultdPKc # Offset: 8483
    00002128: 	movq	0x130(%rsp), %rdi
    00002130: 	cmpq	(%rsp), %rdi
    00002134: 	je	.Ltmp3123 # Offset: 8500
    00002136: 	movq	0x140(%rsp), %rax
    0000213e: 	leaq	0x1(%rax), %rsi
    00002142: 	callq	_ZdlPvm@PLT # Offset: 8514
.Ltmp3123:
    00002147: 	movq	0x28(%rsp), %rsi
    0000214c: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002153: 	movq	%rbp, %rdi
    00002156: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8534
    0000215b: 	callq	clock@PLT # Offset: 8539
    00002160: 	movq	%rax, start_time(%rip)
    00002167: 	movl	iterations(%rip), %eax
    0000216d: 	testl	%eax, %eax
    0000216f: 	jle	.Ltmp3124 # Offset: 8559
    00002171: 	movq	0xfcd8(%rsp), %rax
    00002179: 	movq	%rax, 0x90(%rsp)
.Ltmp3124:
    00002181: 	movq	%rbp, %rsi
    00002184: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000218b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8587
    00002190: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002197: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000219e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021a5: 	je	.Ltmp3125 # Offset: 8613
.Ltmp3206:
    000021ab: 	movq	-0x20(%rax), %r12
    000021af: 	callq	clock@PLT # Offset: 8623
    000021b4: 	pxor	%xmm0, %xmm0
    000021b8: 	movq	%rax, end_time(%rip)
    000021bf: 	movq	%r12, %rdi
    000021c2: 	subq	start_time(%rip), %rax
    000021c9: 	cvtsi2sd	%rax, %xmm0
    000021ce: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000021d6: 	callq	_Z13record_resultdPKc # Offset: 8662
    000021db: 	movq	0x130(%rsp), %rdi
    000021e3: 	cmpq	(%rsp), %rdi
    000021e7: 	je	.Ltmp3126 # Offset: 8679
    000021e9: 	movq	0x140(%rsp), %rax
    000021f1: 	leaq	0x1(%rax), %rsi
    000021f5: 	callq	_ZdlPvm@PLT # Offset: 8693
.Ltmp3126:
    000021fa: 	movq	0x28(%rsp), %rsi
    000021ff: 	leaq	0x110(%rsp), %rdi
    00002207: 	leaq	DATAat0x3d4d0(%rip), %rdx
    0000220e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8718
    00002213: 	movl	iterations(%rip), %edx
    00002219: 	xorl	%r8d, %r8d
    0000221c: 	xorl	%ecx, %ecx
    0000221e: 	movl	$0x1f40, %esi
    00002223: 	movq	0x110(%rsp), %rdi
    0000222b: 	callq	_Z9summarizePKciiii # Offset: 8747
    00002230: 	movsd	DATAat0x3d708(%rip), %xmm0
    00002238: 	addsd	init_value(%rip), %xmm0
    00002240: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    00002248: 	jae	.Ltmp3127 # Offset: 8776
    0000224e: 	cvttsd2si	%xmm0, %rbx
.Ltmp3194:
    00002253: 	movq	0x28(%rsp), %rsi
    00002258: 	leaq	DATAat0x3d4e7(%rip), %rdx
    0000225f: 	movq	%rbp, %rdi
    00002262: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8802
    00002267: 	callq	clock@PLT # Offset: 8807
    0000226c: 	movl	iterations(%rip), %r12d
    00002273: 	movl	%ebx, %r13d
    00002276: 	movq	%rax, start_time(%rip)
    0000227d: 	testl	%r12d, %r12d
    00002280: 	jle	.Ltmp3128 # Offset: 8832
    00002286: 	movslq	%ebx, %rbx
    00002289: 	testq	%rbx, %rbx
    0000228c: 	js	.Ltmp3129 # Offset: 8844
    00002292: 	pxor	%xmm6, %xmm6
    00002296: 	cvtsi2sd	%rbx, %xmm6
    0000229b: 	movsd	%xmm6, 0x10(%rsp)
.Ltmp3199:
    000022a1: 	xorl	%ebx, %ebx
    000022a3: 	leaq	DATAat0x3d1c8(%rip), %r15
    000022aa: 	movabsq	$-0x8000000000000000, %r14
    000022b4: 	jmp	.Ltmp3130 # Offset: 8884
    000022b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3133:
    000022c0: 	cvttsd2si	%xmm2, %rax
.Ltmp3134:
    000022c5: 	imulq	$0x1f40, %rax, %rdx
    000022cc: 	comisd	DATAat0x3d6b0(%rip), %xmm0
    000022d4: 	jae	.Ltmp3131 # Offset: 8916
    000022da: 	cvttsd2si	%xmm0, %rax
.Ltmp3135:
    000022df: 	imulq	$0x1f40, %rax, %rax
    000022e6: 	cmpq	%rax, %rdx
    000022e9: 	je	.Ltmp3132 # Offset: 8937
    000022eb: 	movq	0x130(%rsp), %rdx
    000022f3: 	movq	%r15, %rsi
    000022f6: 	movl	$0x1, %edi
    000022fb: 	xorl	%eax, %eax
    000022fd: 	callq	__printf_chk@PLT # Offset: 8957
    00002302: 	movl	iterations(%rip), %r12d
.Ltmp3132:
    00002309: 	addl	$0x1, %ebx
    0000230c: 	cmpl	%r12d, %ebx
    0000230f: 	jge	.Ltmp3128 # Offset: 8975
.Ltmp3130:
    00002315: 	movq	DATAat0x3d6b8(%rip), %rax
    0000231c: 	movsd	0x10(%rsp), %xmm0
    00002322: 	movq	%rax, %xmm1
    00002327: 	callq	pow@PLT # Offset: 8999
    0000232c: 	movq	DATAat0x3d6b8(%rip), %rax
    00002333: 	movsd	%xmm0, 0x18(%rsp)
    00002339: 	movsd	0x10(%rsp), %xmm0
    0000233f: 	movq	%rax, %xmm1
    00002344: 	callq	pow@PLT # Offset: 9028
    00002349: 	movsd	0x18(%rsp), %xmm2
    0000234f: 	comisd	DATAat0x3d6b0(%rip), %xmm2
    00002357: 	jb	.Ltmp3133 # Offset: 9047
    0000235d: 	subsd	DATAat0x3d6b0(%rip), %xmm2
    00002365: 	cvttsd2si	%xmm2, %rax
    0000236a: 	xorq	%r14, %rax
    0000236d: 	jmp	.Ltmp3134 # Offset: 9069
    00002372: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3131:
    00002378: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002380: 	cvttsd2si	%xmm0, %rax
    00002385: 	xorq	%r14, %rax
    00002388: 	jmp	.Ltmp3135 # Offset: 9096
    0000238d: 	nopl	(%rax) # Size: 3
.Ltmp3096:
    00002390: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002398: 	cvttsd2si	%xmm0, %rax
    0000239d: 	xorq	%r13, %rax
    000023a0: 	jmp	.Ltmp3136 # Offset: 9120
    000023a5: 	nopl	(%rax) # Size: 3
.Ltmp3082:
    000023a8: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    000023b0: 	movabsq	$-0x8000000000000000, %rdi
    000023ba: 	cvttsd2si	%xmm0, %rax
    000023bf: 	xorq	%rdi, %rax
    000023c2: 	jmp	.Ltmp3137 # Offset: 9154
    000023c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3089:
    000023d0: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    000023d8: 	cvttsd2si	%xmm0, %rax
    000023dd: 	xorq	%r13, %rax
    000023e0: 	jmp	.Ltmp3138 # Offset: 9184
    000023e5: 	nopl	(%rax) # Size: 3
.Ltmp3104:
    000023e8: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    000023f0: 	cvttsd2si	%xmm0, %rax
    000023f5: 	xorq	%r13, %rax
    000023f8: 	imulq	$0x1f40, %rax, %rax
    000023ff: 	cmpq	%rax, %rdx
    00002402: 	je	.Ltmp3103 # Offset: 9218
.Ltmp3105:
    00002408: 	movq	0x130(%rsp), %rdx
    00002410: 	movq	%r14, %rsi
    00002413: 	movl	$0x1, %edi
    00002418: 	xorl	%eax, %eax
    0000241a: 	callq	__printf_chk@PLT # Offset: 9242
    0000241f: 	addl	$0x1, %ebx
    00002422: 	cmpl	iterations(%rip), %ebx
    00002428: 	jl	.Ltmp3139 # Offset: 9256
    0000242e: 	jmp	.Ltmp3103 # Offset: 9262
    00002433: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3111:
    00002438: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002440: 	cvttsd2si	%xmm0, %rax
    00002445: 	xorq	%r13, %rax
    00002448: 	imulq	$0x1f40, %rax, %rax
    0000244f: 	cmpq	%rax, %rbx
    00002452: 	je	.Ltmp3110 # Offset: 9298
.Ltmp3112:
    00002458: 	movq	0x130(%rsp), %rdx
    00002460: 	movq	%r14, %rsi
    00002463: 	movl	$0x1, %edi
    00002468: 	xorl	%eax, %eax
    0000246a: 	callq	__printf_chk@PLT # Offset: 9322
    0000246f: 	addl	$0x1, %r12d
    00002473: 	cmpl	iterations(%rip), %r12d
    0000247a: 	jl	.Ltmp3140 # Offset: 9338
    00002480: 	jmp	.Ltmp3110 # Offset: 9344
    00002485: 	nopl	(%rax) # Size: 3
.Ltmp3067:
    00002488: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002490: 	movabsq	$-0x8000000000000000, %rdi
    0000249a: 	cvttsd2si	%xmm1, %rax
    0000249f: 	xorq	%rdi, %rax
    000024a2: 	jmp	.Ltmp3141 # Offset: 9378
    000024a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3075:
    000024b0: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    000024b8: 	movabsq	$-0x8000000000000000, %rdi
    000024c2: 	cvttsd2si	%xmm0, %rax
    000024c7: 	xorq	%rdi, %rax
    000024ca: 	jmp	.Ltmp3142 # Offset: 9418
    000024cf: 	nop # Size: 1
.Ltmp3060:
    000024d0: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    000024d8: 	movabsq	$-0x8000000000000000, %rdi
    000024e2: 	cvttsd2si	%xmm1, %rax
    000024e7: 	xorq	%rdi, %rax
    000024ea: 	jmp	.Ltmp3143 # Offset: 9450
    000024ef: 	nop # Size: 1
.Ltmp3053:
    000024f0: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    000024f8: 	movabsq	$-0x8000000000000000, %rdi
    00002502: 	cvttsd2si	%xmm1, %rax
    00002507: 	xorq	%rdi, %rax
    0000250a: 	jmp	.Ltmp3144 # Offset: 9482
    0000250f: 	nop # Size: 1
.Ltmp3046:
    00002510: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002518: 	cvttsd2si	%xmm0, %rax
    0000251d: 	xorq	%r14, %rax
    00002520: 	jmp	.Ltmp3145 # Offset: 9504
    00002525: 	nopl	(%rax) # Size: 3
.Ltmp3039:
    00002528: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002530: 	cvttsd2si	%xmm0, %rax
    00002535: 	xorq	%r14, %rax
    00002538: 	jmp	.Ltmp3146 # Offset: 9528
    0000253d: 	nopl	(%rax) # Size: 3
.Ltmp3032:
    00002540: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002548: 	movabsq	$-0x8000000000000000, %rdi
    00002552: 	cvttsd2si	%xmm0, %rax
    00002557: 	xorq	%rdi, %rax
    0000255a: 	jmp	.Ltmp3147 # Offset: 9562
    0000255f: 	nop # Size: 1
.Ltmp3025:
    00002560: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002568: 	movabsq	$-0x8000000000000000, %rdi
    00002572: 	cvttsd2si	%xmm1, %rax
    00002577: 	xorq	%rdi, %rax
    0000257a: 	jmp	.Ltmp3148 # Offset: 9594
    0000257f: 	nop # Size: 1
.Ltmp3018:
    00002580: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002588: 	movabsq	$-0x8000000000000000, %rdi
    00002592: 	cvttsd2si	%xmm0, %rax
    00002597: 	xorq	%rdi, %rax
    0000259a: 	jmp	.Ltmp3149 # Offset: 9626
    0000259f: 	nop # Size: 1
.Ltmp3011:
    000025a0: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    000025a8: 	cvttsd2si	%xmm0, %rax
    000025ad: 	xorq	%r14, %rax
    000025b0: 	jmp	.Ltmp3150 # Offset: 9648
    000025b5: 	nopl	(%rax) # Size: 3
.Ltmp3004:
    000025b8: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    000025c0: 	cvttsd2si	%xmm1, %rax
    000025c5: 	xorq	%r14, %rax
    000025c8: 	jmp	.Ltmp3151 # Offset: 9672
    000025cd: 	nopl	(%rax) # Size: 3
.Ltmp2997:
    000025d0: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    000025d8: 	movabsq	$-0x8000000000000000, %rdi
    000025e2: 	cvttsd2si	%xmm1, %rax
    000025e7: 	xorq	%rdi, %rax
    000025ea: 	jmp	.Ltmp3152 # Offset: 9706
    000025ef: 	nop # Size: 1
.Ltmp2990:
    000025f0: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    000025f8: 	cvttsd2si	%xmm1, %rax
    000025fd: 	xorq	%r14, %rax
    00002600: 	jmp	.Ltmp3153 # Offset: 9728
    00002605: 	nopl	(%rax) # Size: 3
.Ltmp2983:
    00002608: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002610: 	cvttsd2si	%xmm1, %rax
    00002615: 	xorq	%r14, %rax
    00002618: 	jmp	.Ltmp3154 # Offset: 9752
    0000261d: 	nopl	(%rax) # Size: 3
.Ltmp2976:
    00002620: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002628: 	movabsq	$-0x8000000000000000, %rdi
    00002632: 	cvttsd2si	%xmm1, %rax
    00002637: 	xorq	%rdi, %rax
    0000263a: 	jmp	.Ltmp3155 # Offset: 9786
    0000263f: 	nop # Size: 1
.Ltmp2969:
    00002640: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002648: 	movabsq	$-0x8000000000000000, %rdi
    00002652: 	cvttsd2si	%xmm0, %rdx
    00002657: 	xorq	%rdi, %rdx
    0000265a: 	jmp	.Ltmp3156 # Offset: 9818
    0000265f: 	nop # Size: 1
.Ltmp2962:
    00002660: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002668: 	cvttsd2si	%xmm1, %rax
    0000266d: 	xorq	%r13, %rax
    00002670: 	jmp	.Ltmp3157 # Offset: 9840
    00002675: 	nopl	(%rax) # Size: 3
.Ltmp3128:
    00002678: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000267f: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00002686: 	subq	$0x20, %rax
    0000268a: 	cmpq	%rax, %rbx
    0000268d: 	je	.Ltmp3158 # Offset: 9869
    00002693: 	leaq	0x10(%rbx), %rdi
    00002697: 	movq	0x138(%rsp), %r12
    0000269f: 	movq	%rdi, (%rbx)
    000026a2: 	movq	0x130(%rsp), %r14
    000026aa: 	movq	%r14, %rax
    000026ad: 	addq	%r12, %rax
    000026b0: 	je	.Ltmp3159 # Offset: 9904
    000026b2: 	testq	%r14, %r14
    000026b5: 	je	.Ltmp3160 # Offset: 9909
.Ltmp3159:
    000026bb: 	movq	%r12, 0x58(%rsp)
    000026c0: 	cmpq	$0xf, %r12
    000026c4: 	ja	.Ltmp3161 # Offset: 9924
    000026ca: 	cmpq	$0x1, %r12
    000026ce: 	jne	.Ltmp3162 # Offset: 9934
    000026d4: 	movzbl	(%r14), %eax
    000026d8: 	movb	%al, 0x10(%rbx)
.Ltmp3198:
    000026db: 	movq	%r12, 0x8(%rbx)
    000026df: 	movb	$0x0, (%rdi,%r12)
    000026e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026eb: 	addq	$0x20, %rax
    000026ef: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3201:
    000026f6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000026fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002704: 	je	.Ltmp3163 # Offset: 9988
.Ltmp3200:
    0000270a: 	movq	-0x20(%rax), %r12
    0000270e: 	callq	clock@PLT # Offset: 9998
    00002713: 	pxor	%xmm0, %xmm0
    00002717: 	movq	%rax, end_time(%rip)
    0000271e: 	movq	%r12, %rdi
    00002721: 	subq	start_time(%rip), %rax
    00002728: 	cvtsi2sd	%rax, %xmm0
    0000272d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002735: 	callq	_Z13record_resultdPKc # Offset: 10037
    0000273a: 	movq	0x130(%rsp), %rdi
    00002742: 	cmpq	(%rsp), %rdi
    00002746: 	je	.Ltmp3164 # Offset: 10054
    00002748: 	movq	0x140(%rsp), %rax
    00002750: 	leaq	0x1(%rax), %rsi
    00002754: 	callq	_ZdlPvm@PLT # Offset: 10068
.Ltmp3164:
    00002759: 	movq	0x28(%rsp), %rsi
    0000275e: 	leaq	DATAat0x3d501(%rip), %rdx
    00002765: 	movq	%rbp, %rdi
    00002768: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10088
    0000276d: 	leaq	_Z10test_powerImET_S0_(%rip), %r12
    00002774: 	movq	%rbp, %rcx
    00002777: 	movl	%r13d, %esi
    0000277a: 	movl	$0x1f40, %edi
    0000277f: 	movq	%r12, %rdx
    00002782: 	callq	"_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10114
    00002787: 	movq	0x130(%rsp), %rdi
    0000278f: 	cmpq	(%rsp), %rdi
    00002793: 	je	.Ltmp3165 # Offset: 10131
    00002795: 	movq	0x140(%rsp), %rax
    0000279d: 	leaq	0x1(%rax), %rsi
    000027a1: 	callq	_ZdlPvm@PLT # Offset: 10145
.Ltmp3165:
    000027a6: 	movq	0x28(%rsp), %rsi
    000027ab: 	leaq	DATAat0x3d51f(%rip), %rdx
    000027b2: 	movq	%rbp, %rdi
    000027b5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10165
    000027ba: 	movq	%rbp, %rcx
    000027bd: 	movq	%r12, %rdx
    000027c0: 	movl	%r13d, %esi
    000027c3: 	movl	$0x1f40, %edi
    000027c8: 	callq	"_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10184
    000027cd: 	movq	0x130(%rsp), %rdi
    000027d5: 	cmpq	(%rsp), %rdi
    000027d9: 	je	.Ltmp3166 # Offset: 10201
    000027db: 	movq	0x140(%rsp), %rax
    000027e3: 	leaq	0x1(%rax), %rsi
    000027e7: 	callq	_ZdlPvm@PLT # Offset: 10215
.Ltmp3166:
    000027ec: 	movq	0x28(%rsp), %rsi
    000027f1: 	leaq	DATAat0x3d535(%rip), %rdx
    000027f8: 	movq	%rbp, %rdi
    000027fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10235
    00002800: 	callq	clock@PLT # Offset: 10240
    00002805: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000280c: 	movq	%rax, start_time(%rip)
    00002813: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000281a: 	subq	$0x20, %rax
    0000281e: 	cmpq	%rax, %rbx
    00002821: 	je	.Ltmp3167 # Offset: 10273
    00002827: 	leaq	0x10(%rbx), %rdi
    0000282b: 	movq	0x138(%rsp), %r12
    00002833: 	movq	%rdi, (%rbx)
    00002836: 	movq	0x130(%rsp), %r14
    0000283e: 	movq	%r14, %rax
    00002841: 	addq	%r12, %rax
    00002844: 	je	.Ltmp3168 # Offset: 10308
    00002846: 	testq	%r14, %r14
    00002849: 	je	.Ltmp3169 # Offset: 10313
.Ltmp3168:
    0000284f: 	movq	%r12, 0x58(%rsp)
    00002854: 	cmpq	$0xf, %r12
    00002858: 	ja	.Ltmp3170 # Offset: 10328
    0000285e: 	cmpq	$0x1, %r12
    00002862: 	jne	.Ltmp3171 # Offset: 10338
    00002868: 	movzbl	(%r14), %eax
    0000286c: 	movb	%al, 0x10(%rbx)
.Ltmp3235:
    0000286f: 	movq	%r12, 0x8(%rbx)
    00002873: 	movb	$0x0, (%rdi,%r12)
    00002878: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000287f: 	addq	$0x20, %rax
    00002883: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3205:
    0000288a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002891: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002898: 	je	.Ltmp3172 # Offset: 10392
.Ltmp3204:
    0000289e: 	movq	-0x20(%rax), %r12
    000028a2: 	callq	clock@PLT # Offset: 10402
    000028a7: 	pxor	%xmm0, %xmm0
    000028ab: 	movq	%rax, end_time(%rip)
    000028b2: 	movq	%r12, %rdi
    000028b5: 	subq	start_time(%rip), %rax
    000028bc: 	cvtsi2sd	%rax, %xmm0
    000028c1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000028c9: 	callq	_Z13record_resultdPKc # Offset: 10441
    000028ce: 	movq	0x130(%rsp), %rdi
    000028d6: 	cmpq	(%rsp), %rdi
    000028da: 	je	.Ltmp3173 # Offset: 10458
    000028dc: 	movq	0x140(%rsp), %rax
    000028e4: 	leaq	0x1(%rax), %rsi
    000028e8: 	callq	_ZdlPvm@PLT # Offset: 10472
.Ltmp3173:
    000028ed: 	movq	0x28(%rsp), %rsi
    000028f2: 	leaq	DATAat0x3d640(%rip), %rdx
    000028f9: 	movq	%rbp, %rdi
    000028fc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10492
    00002901: 	leaq	_Z8test_cosImET_S0_(%rip), %r12
    00002908: 	movq	%rbp, %rcx
    0000290b: 	movl	%r13d, %esi
    0000290e: 	movl	$0x1f40, %edi
    00002913: 	movq	%r12, %rdx
    00002916: 	callq	"_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10518
    0000291b: 	movq	0x130(%rsp), %rdi
    00002923: 	cmpq	(%rsp), %rdi
    00002927: 	je	.Ltmp3174 # Offset: 10535
    00002929: 	movq	0x140(%rsp), %rax
    00002931: 	leaq	0x1(%rax), %rsi
    00002935: 	callq	_ZdlPvm@PLT # Offset: 10549
.Ltmp3174:
    0000293a: 	movq	0x28(%rsp), %rsi
    0000293f: 	leaq	DATAat0x3d550(%rip), %rdx
    00002946: 	movq	%rbp, %rdi
    00002949: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10569
    0000294e: 	movq	%rbp, %rcx
    00002951: 	movq	%r12, %rdx
    00002954: 	movl	%r13d, %esi
    00002957: 	movl	$0x1f40, %edi
    0000295c: 	callq	"_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10588
    00002961: 	movq	0x130(%rsp), %rdi
    00002969: 	cmpq	(%rsp), %rdi
    0000296d: 	je	.Ltmp3175 # Offset: 10605
    0000296f: 	movq	0x140(%rsp), %rax
    00002977: 	leaq	0x1(%rax), %rsi
    0000297b: 	callq	_ZdlPvm@PLT # Offset: 10619
.Ltmp3175:
    00002980: 	movq	0x28(%rsp), %rsi
    00002985: 	leaq	DATAat0x3d567(%rip), %rdx
    0000298c: 	movq	%rbp, %rdi
    0000298f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10639
    00002994: 	callq	clock@PLT # Offset: 10644
    00002999: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000029a0: 	movq	%rax, start_time(%rip)
    000029a7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000029ae: 	subq	$0x20, %rax
    000029b2: 	cmpq	%rax, %rbx
    000029b5: 	je	.Ltmp3176 # Offset: 10677
    000029bb: 	leaq	0x10(%rbx), %rdi
    000029bf: 	movq	0x138(%rsp), %r12
    000029c7: 	movq	%rdi, (%rbx)
    000029ca: 	movq	0x130(%rsp), %r14
    000029d2: 	movq	%r14, %rax
    000029d5: 	addq	%r12, %rax
    000029d8: 	je	.Ltmp3177 # Offset: 10712
    000029da: 	testq	%r14, %r14
    000029dd: 	je	.Ltmp3178 # Offset: 10717
.Ltmp3177:
    000029e3: 	movq	%r12, 0x58(%rsp)
    000029e8: 	cmpq	$0xf, %r12
    000029ec: 	ja	.Ltmp3179 # Offset: 10732
    000029f2: 	cmpq	$0x1, %r12
    000029f6: 	jne	.Ltmp3180 # Offset: 10742
    000029fc: 	movzbl	(%r14), %eax
    00002a00: 	movb	%al, 0x10(%rbx)
.Ltmp3233:
    00002a03: 	movq	%r12, 0x8(%rbx)
    00002a07: 	movb	$0x0, (%rdi,%r12)
    00002a0c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a13: 	addq	$0x20, %rax
    00002a17: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3203:
    00002a1e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002a25: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a2c: 	je	.Ltmp3181 # Offset: 10796
.Ltmp3202:
    00002a32: 	movq	-0x20(%rax), %r12
    00002a36: 	callq	clock@PLT # Offset: 10806
    00002a3b: 	pxor	%xmm0, %xmm0
    00002a3f: 	movq	%rax, end_time(%rip)
    00002a46: 	movq	%r12, %rdi
    00002a49: 	subq	start_time(%rip), %rax
    00002a50: 	cvtsi2sd	%rax, %xmm0
    00002a55: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002a5d: 	callq	_Z13record_resultdPKc # Offset: 10845
    00002a62: 	movq	0x130(%rsp), %rdi
    00002a6a: 	cmpq	(%rsp), %rdi
    00002a6e: 	je	.Ltmp3182 # Offset: 10862
    00002a70: 	movq	0x140(%rsp), %rax
    00002a78: 	leaq	0x1(%rax), %rsi
    00002a7c: 	callq	_ZdlPvm@PLT # Offset: 10876
.Ltmp3182:
    00002a81: 	movq	0x28(%rsp), %rsi
    00002a86: 	leaq	DATAat0x3d660(%rip), %rdx
    00002a8d: 	movq	%rbp, %rdi
    00002a90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10896
    00002a95: 	leaq	_Z8test_sqrImET_S0_(%rip), %r12
    00002a9c: 	movq	%rbp, %rcx
    00002a9f: 	movl	%r13d, %esi
    00002aa2: 	movl	$0x1f40, %edi
    00002aa7: 	movq	%r12, %rdx
    00002aaa: 	callq	"_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10922
    00002aaf: 	movq	0x130(%rsp), %rdi
    00002ab7: 	cmpq	(%rsp), %rdi
    00002abb: 	je	.Ltmp3183 # Offset: 10939
    00002abd: 	movq	0x140(%rsp), %rax
    00002ac5: 	leaq	0x1(%rax), %rsi
    00002ac9: 	callq	_ZdlPvm@PLT # Offset: 10953
.Ltmp3183:
    00002ace: 	movq	0x28(%rsp), %rsi
    00002ad3: 	leaq	DATAat0x3d582(%rip), %rdx
    00002ada: 	movq	%rbp, %rdi
    00002add: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10973
    00002ae2: 	movq	%rbp, %rcx
    00002ae5: 	movq	%r12, %rdx
    00002ae8: 	movl	%r13d, %esi
    00002aeb: 	movl	$0x1f40, %edi
    00002af0: 	callq	"_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10992
    00002af5: 	movq	0x130(%rsp), %rdi
    00002afd: 	cmpq	(%rsp), %rdi
    00002b01: 	je	.Ltmp3184 # Offset: 11009
    00002b03: 	movq	0x140(%rsp), %rax
    00002b0b: 	leaq	0x1(%rax), %rsi
    00002b0f: 	callq	_ZdlPvm@PLT # Offset: 11023
.Ltmp3184:
    00002b14: 	movq	0x28(%rsp), %rsi
    00002b19: 	leaq	DATAat0x3d599(%rip), %rdx
    00002b20: 	movq	%rbp, %rdi
    00002b23: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11043
    00002b28: 	leaq	_Z9test_hashImET_S0_(%rip), %r12
    00002b2f: 	movq	%rbp, %rdx
    00002b32: 	movl	%r13d, %edi
    00002b35: 	movq	%r12, %rsi
    00002b38: 	callq	"_Z23test_const_function_optImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11064
    00002b3d: 	movq	0x130(%rsp), %rdi
    00002b45: 	cmpq	(%rsp), %rdi
    00002b49: 	je	.Ltmp3185 # Offset: 11081
    00002b4b: 	movq	0x140(%rsp), %rax
    00002b53: 	leaq	0x1(%rax), %rsi
    00002b57: 	callq	_ZdlPvm@PLT # Offset: 11095
.Ltmp3185:
    00002b5c: 	movq	0x28(%rsp), %rsi
    00002b61: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002b68: 	movq	%rbp, %rdi
    00002b6b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11115
    00002b70: 	movq	%rbp, %rcx
    00002b73: 	movq	%r12, %rdx
    00002b76: 	movl	%r13d, %esi
    00002b79: 	movl	$0x1f40, %edi
    00002b7e: 	callq	"_Z27test_const_function_halfoptImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11134
    00002b83: 	movq	0x130(%rsp), %rdi
    00002b8b: 	cmpq	(%rsp), %rdi
    00002b8f: 	je	.Ltmp3186 # Offset: 11151
    00002b91: 	movq	0x140(%rsp), %rax
    00002b99: 	leaq	0x1(%rax), %rsi
    00002b9d: 	callq	_ZdlPvm@PLT # Offset: 11165
.Ltmp3186:
    00002ba2: 	movq	0x28(%rsp), %rsi
    00002ba7: 	leaq	DATAat0x3d5cf(%rip), %rdx
    00002bae: 	movq	%rbp, %rdi
    00002bb1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11185
    00002bb6: 	movq	%rbp, %rcx
    00002bb9: 	movq	%r12, %rdx
    00002bbc: 	movl	%r13d, %esi
    00002bbf: 	movl	$0x1f40, %edi
    00002bc4: 	callq	"_Z19test_const_functionImPFmmEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11204
    00002bc9: 	movq	0x130(%rsp), %rdi
    00002bd1: 	cmpq	(%rsp), %rdi
    00002bd5: 	je	.Ltmp3187 # Offset: 11221
    00002bd7: 	movq	0x140(%rsp), %rax
    00002bdf: 	leaq	0x1(%rax), %rsi
    00002be3: 	callq	_ZdlPvm@PLT # Offset: 11235
.Ltmp3187:
    00002be8: 	movq	0x28(%rsp), %rsi
    00002bed: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002bf4: 	movq	%rbp, %rdi
    00002bf7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11255
    00002bfc: 	movl	iterations(%rip), %edx
    00002c02: 	xorl	%r8d, %r8d
    00002c05: 	xorl	%ecx, %ecx
    00002c07: 	movl	$0x1f40, %esi
    00002c0c: 	movq	0x130(%rsp), %rdi
    00002c14: 	callq	_Z9summarizePKciiii # Offset: 11284
    00002c19: 	movq	0x130(%rsp), %rdi
    00002c21: 	cmpq	(%rsp), %rdi
    00002c25: 	je	.Ltmp3188 # Offset: 11301
    00002c27: 	movq	0x140(%rsp), %rax
    00002c2f: 	leaq	0x1(%rax), %rsi
    00002c33: 	callq	_ZdlPvm@PLT # Offset: 11315
.Ltmp3188:
    00002c38: 	movq	0x110(%rsp), %rdi
    00002c40: 	leaq	0x120(%rsp), %rax
    00002c48: 	cmpq	%rax, %rdi
    00002c4b: 	je	.Ltmp3189 # Offset: 11339
    00002c4d: 	movq	0x120(%rsp), %rax
    00002c55: 	leaq	0x1(%rax), %rsi
    00002c59: 	callq	_ZdlPvm@PLT # Offset: 11353
.Ltmp3189:
    00002c5e: 	movq	0xf0(%rsp), %rdi
    00002c66: 	leaq	0x100(%rsp), %rax
    00002c6e: 	cmpq	%rax, %rdi
    00002c71: 	je	.Ltmp3190 # Offset: 11377
    00002c73: 	movq	0x100(%rsp), %rax
    00002c7b: 	leaq	0x1(%rax), %rsi
    00002c7f: 	callq	_ZdlPvm@PLT # Offset: 11391
.Ltmp3190:
    00002c84: 	movq	0xd0(%rsp), %rdi
    00002c8c: 	cmpq	0x40(%rsp), %rdi
    00002c91: 	je	.Ltmp3191 # Offset: 11409
    00002c93: 	movq	0xe0(%rsp), %rax
    00002c9b: 	leaq	0x1(%rax), %rsi
    00002c9f: 	callq	_ZdlPvm@PLT # Offset: 11423
.Ltmp3191:
    00002ca4: 	movq	0xfce8(%rsp), %rax
    00002cac: 	subq	%fs:0x28, %rax
    00002cb5: 	jne	.Ltmp3192 # Offset: 11445
    00002cbb: 	addq	$0xfcf8, %rsp
    00002cc2: 	popq	%rbx
    00002cc3: 	popq	%rbp
    00002cc4: 	popq	%r12
    00002cc6: 	popq	%r13
    00002cc8: 	popq	%r14
    00002cca: 	popq	%r15
    00002ccc: 	retq # Offset: 11468
.Ltmp3072:
    00002ccd: 	movapd	%xmm1, %xmm0
    00002cd1: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002cd9: 	cvttsd2si	%xmm0, %rax
    00002cde: 	btcq	$0x3f, %rax
    00002ce3: 	jmp	.Ltmp3193 # Offset: 11491
.Ltmp3127:
    00002ce8: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002cf0: 	cvttsd2si	%xmm0, %rbx
    00002cf5: 	btcq	$0x3f, %rbx
    00002cfa: 	jmp	.Ltmp3194 # Offset: 11514
.Ltmp3108:
    00002cff: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002d07: 	cvttsd2si	%xmm0, %rbx
    00002d0c: 	btcq	$0x3f, %rbx
    00002d11: 	jmp	.Ltmp3195 # Offset: 11537
.Ltmp2959:
    00002d16: 	subsd	DATAat0x3d6b0(%rip), %xmm0
    00002d1e: 	cvttsd2si	%xmm0, %rbp
    00002d23: 	btcq	$0x3f, %rbp
    00002d28: 	jmp	.Ltmp3196 # Offset: 11560
.Ltmp2957:
    00002d2d: 	subsd	DATAat0x3d6b0(%rip), %xmm1
    00002d35: 	cvttsd2si	%xmm1, %rax
    00002d3a: 	btcq	$0x3f, %rax
    00002d3f: 	jmp	.Ltmp3197 # Offset: 11583
.Ltmp3161:
    00002d44: 	leaq	0x58(%rsp), %rsi
    00002d49: 	xorl	%edx, %edx
    00002d4b: 	movq	%rbx, %rdi
    00002d4e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11598
    00002d53: 	movq	%rax, (%rbx)
    00002d56: 	movq	%rax, %rdi
    00002d59: 	movq	0x58(%rsp), %rax
    00002d5e: 	movq	%rax, 0x10(%rbx)
.Ltmp3232:
    00002d62: 	movq	%r12, %rdx
    00002d65: 	movq	%r14, %rsi
    00002d68: 	callq	memcpy@PLT # Offset: 11624
    00002d6d: 	movq	0x58(%rsp), %r12
    00002d72: 	movq	(%rbx), %rdi
    00002d75: 	jmp	.Ltmp3198 # Offset: 11637
.Ltmp3129:
    00002d7a: 	movq	%rbx, %rax
    00002d7d: 	andl	$0x1, %ebx
    00002d80: 	pxor	%xmm0, %xmm0
    00002d84: 	shrq	%rax
    00002d87: 	orq	%rbx, %rax
    00002d8a: 	cvtsi2sd	%rax, %xmm0
    00002d8f: 	addsd	%xmm0, %xmm0
    00002d93: 	movsd	%xmm0, 0x10(%rsp)
    00002d99: 	jmp	.Ltmp3199 # Offset: 11673
.Ltmp3163:
    00002d9e: 	movq	-0x8(%rdx), %rax
    00002da2: 	addq	$0x200, %rax
    00002da8: 	jmp	.Ltmp3200 # Offset: 11688
.Ltmp3158:
    00002dad: 	movq	%rbp, %rsi
    00002db0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002db7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11703
    00002dbc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002dc3: 	jmp	.Ltmp3201 # Offset: 11715
.Ltmp3181:
    00002dc8: 	movq	-0x8(%rdx), %rax
    00002dcc: 	addq	$0x200, %rax
    00002dd2: 	jmp	.Ltmp3202 # Offset: 11730
.Ltmp3176:
    00002dd7: 	movq	%rbp, %rsi
    00002dda: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002de1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11745
    00002de6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ded: 	jmp	.Ltmp3203 # Offset: 11757
.Ltmp3172:
    00002df2: 	movq	-0x8(%rdx), %rax
    00002df6: 	addq	$0x200, %rax
    00002dfc: 	jmp	.Ltmp3204 # Offset: 11772
.Ltmp3167:
    00002e01: 	movq	%rbp, %rsi
    00002e04: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002e0b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11787
    00002e10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002e17: 	jmp	.Ltmp3205 # Offset: 11799
.Ltmp3125:
    00002e1c: 	movq	-0x8(%rdx), %rax
    00002e20: 	addq	$0x200, %rax
    00002e26: 	jmp	.Ltmp3206 # Offset: 11814
.Ltmp3122:
    00002e2b: 	movq	-0x8(%rdx), %rax
    00002e2f: 	addq	$0x200, %rax
    00002e35: 	jmp	.Ltmp3207 # Offset: 11829
.Ltmp3119:
    00002e3a: 	movq	-0x8(%rdx), %rax
    00002e3e: 	addq	$0x200, %rax
    00002e44: 	jmp	.Ltmp3208 # Offset: 11844
.Ltmp3116:
    00002e49: 	movq	-0x8(%rdx), %rax
    00002e4d: 	addq	$0x200, %rax
    00002e53: 	jmp	.Ltmp3209 # Offset: 11859
.Ltmp3113:
    00002e58: 	movq	-0x8(%rdx), %rax
    00002e5c: 	addq	$0x200, %rax
    00002e62: 	jmp	.Ltmp3210 # Offset: 11874
.Ltmp3106:
    00002e67: 	movq	-0x8(%rdx), %rax
    00002e6b: 	addq	$0x200, %rax
    00002e71: 	jmp	.Ltmp3211 # Offset: 11889
.Ltmp3100:
    00002e76: 	movq	-0x8(%rdx), %rax
    00002e7a: 	addq	$0x200, %rax
    00002e80: 	jmp	.Ltmp3212 # Offset: 11904
.Ltmp3093:
    00002e85: 	movq	-0x8(%rdx), %rax
    00002e89: 	addq	$0x200, %rax
    00002e8f: 	jmp	.Ltmp3213 # Offset: 11919
.Ltmp3086:
    00002e94: 	movq	-0x8(%rdx), %rax
    00002e98: 	addq	$0x200, %rax
    00002e9e: 	jmp	.Ltmp3214 # Offset: 11934
.Ltmp3079:
    00002ea3: 	movq	-0x8(%rdx), %rax
    00002ea7: 	addq	$0x200, %rax
    00002ead: 	jmp	.Ltmp3215 # Offset: 11949
.Ltmp3070:
    00002eb2: 	movq	-0x8(%rdx), %rax
    00002eb6: 	addq	$0x200, %rax
    00002ebc: 	jmp	.Ltmp3216 # Offset: 11964
.Ltmp3063:
    00002ec1: 	movq	-0x8(%rdx), %rax
    00002ec5: 	addq	$0x200, %rax
    00002ecb: 	jmp	.Ltmp3217 # Offset: 11979
.Ltmp3056:
    00002ed0: 	movq	-0x8(%rdx), %rax
    00002ed4: 	addq	$0x200, %rax
    00002eda: 	jmp	.Ltmp3218 # Offset: 11994
.Ltmp3049:
    00002edf: 	movq	-0x8(%rdx), %rax
    00002ee3: 	addq	$0x200, %rax
    00002ee9: 	jmp	.Ltmp3219 # Offset: 12009
.Ltmp3042:
    00002eee: 	movq	-0x8(%rdx), %rax
    00002ef2: 	addq	$0x200, %rax
    00002ef8: 	jmp	.Ltmp3220 # Offset: 12024
.Ltmp3035:
    00002efd: 	movq	-0x8(%rdx), %rax
    00002f01: 	addq	$0x200, %rax
    00002f07: 	jmp	.Ltmp3221 # Offset: 12039
.Ltmp3028:
    00002f0c: 	movq	-0x8(%rdx), %rax
    00002f10: 	addq	$0x200, %rax
    00002f16: 	jmp	.Ltmp3222 # Offset: 12054
.Ltmp3021:
    00002f1b: 	movq	-0x8(%rdx), %rax
    00002f1f: 	addq	$0x200, %rax
    00002f25: 	jmp	.Ltmp3223 # Offset: 12069
.Ltmp3014:
    00002f2a: 	movq	-0x8(%rdx), %rax
    00002f2e: 	addq	$0x200, %rax
    00002f34: 	jmp	.Ltmp3224 # Offset: 12084
.Ltmp3007:
    00002f39: 	movq	-0x8(%rdx), %rax
    00002f3d: 	addq	$0x200, %rax
    00002f43: 	jmp	.Ltmp3225 # Offset: 12099
.Ltmp3000:
    00002f48: 	movq	-0x8(%rdx), %rax
    00002f4c: 	addq	$0x200, %rax
    00002f52: 	jmp	.Ltmp3226 # Offset: 12114
.Ltmp2993:
    00002f57: 	movq	-0x8(%rdx), %rax
    00002f5b: 	addq	$0x200, %rax
    00002f61: 	jmp	.Ltmp3227 # Offset: 12129
.Ltmp2986:
    00002f66: 	movq	-0x8(%rdx), %rax
    00002f6a: 	addq	$0x200, %rax
    00002f70: 	jmp	.Ltmp3228 # Offset: 12144
.Ltmp2979:
    00002f75: 	movq	-0x8(%rdx), %rax
    00002f79: 	addq	$0x200, %rax
    00002f7f: 	jmp	.Ltmp3229 # Offset: 12159
.Ltmp2972:
    00002f84: 	movq	-0x8(%rdx), %rax
    00002f88: 	addq	$0x200, %rax
    00002f8e: 	jmp	.Ltmp3230 # Offset: 12174
.Ltmp2965:
    00002f93: 	movq	-0x8(%rdx), %rax
    00002f97: 	addq	$0x200, %rax
    00002f9d: 	jmp	.Ltmp3231 # Offset: 12189
.Ltmp3162:
    00002fa2: 	testq	%r12, %r12
    00002fa5: 	je	.Ltmp3198 # Offset: 12197
    00002fab: 	jmp	.Ltmp3232 # Offset: 12203
.Ltmp3180:
    00002fb0: 	testq	%r12, %r12
    00002fb3: 	je	.Ltmp3233 # Offset: 12211
    00002fb9: 	jmp	.Ltmp3234 # Offset: 12217
    00002fbb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3171:
    00002fc0: 	testq	%r12, %r12
    00002fc3: 	je	.Ltmp3235 # Offset: 12227
    00002fc9: 	jmp	.Ltmp3236 # Offset: 12233
    00002fcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3170:
    00002fd0: 	leaq	0x58(%rsp), %rsi
    00002fd5: 	xorl	%edx, %edx
    00002fd7: 	movq	%rbx, %rdi
    00002fda: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12250
    00002fdf: 	movq	%rax, (%rbx)
    00002fe2: 	movq	%rax, %rdi
    00002fe5: 	movq	0x58(%rsp), %rax
    00002fea: 	movq	%rax, 0x10(%rbx)
.Ltmp3236:
    00002fee: 	movq	%r12, %rdx
    00002ff1: 	movq	%r14, %rsi
    00002ff4: 	callq	memcpy@PLT # Offset: 12276
    00002ff9: 	movq	0x58(%rsp), %r12
    00002ffe: 	movq	(%rbx), %rdi
    00003001: 	jmp	.Ltmp3235 # Offset: 12289
.Ltmp3179:
    00003006: 	leaq	0x58(%rsp), %rsi
    0000300b: 	xorl	%edx, %edx
    0000300d: 	movq	%rbx, %rdi
    00003010: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12304
    00003015: 	movq	%rax, (%rbx)
    00003018: 	movq	%rax, %rdi
    0000301b: 	movq	0x58(%rsp), %rax
    00003020: 	movq	%rax, 0x10(%rbx)
.Ltmp3234:
    00003024: 	movq	%r12, %rdx
    00003027: 	movq	%r14, %rsi
    0000302a: 	callq	memcpy@PLT # Offset: 12330
    0000302f: 	movq	0x58(%rsp), %r12
    00003034: 	movq	(%rbx), %rdi
    00003037: 	jmp	.Ltmp3233 # Offset: 12343
.Ltmp3169:
    0000303c: 	leaq	DATAat0x3d158(%rip), %rdi
    00003043: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12355
.Ltmp3178:
    00003048: 	leaq	DATAat0x3d158(%rip), %rdi
    0000304f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12367
.Ltmp3192:
    00003054: 	callq	__stack_chk_fail@PLT # Offset: 12372
.Ltmp3160:
    00003059: 	leaq	DATAat0x3d158(%rip), %rdi
    00003060: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 12384
    00003065: 	endbr64
    00003069: 	movq	%rax, %rbp
    0000306c: 	jmp	.Ltmp3237 # Offset: 12396
    0000306e: 	endbr64
    00003072: 	movq	%rax, %rbp
    00003075: 	jmp	.Ltmp3238 # Offset: 12405
.Ltmp3237:
    00003077: 	movq	0x150(%rsp), %rdi
    0000307f: 	leaq	0x160(%rsp), %rax
    00003087: 	cmpq	%rax, %rdi
    0000308a: 	je	.Ltmp3238 # Offset: 12426
.Ltmp3245:
    0000308c: 	movq	0x160(%rsp), %rax
    00003094: 	leaq	0x1(%rax), %rsi
    00003098: 	callq	_ZdlPvm@PLT # Offset: 12440
.Ltmp3238:
    0000309d: 	movq	0xd0(%rsp), %rdi
    000030a5: 	cmpq	0x40(%rsp), %rdi
    000030aa: 	je	.Ltmp3239 # Offset: 12458
    000030ac: 	movq	0xe0(%rsp), %rax
    000030b4: 	leaq	0x1(%rax), %rsi
    000030b8: 	callq	_ZdlPvm@PLT # Offset: 12472
.Ltmp3239:
    000030bd: 	movq	%rbp, %rdi
    000030c0: 	callq	_Unwind_Resume@PLT # Offset: 12480
    000030c5: 	endbr64
.Ltmp3241:
    000030c9: 	movq	%rax, %rbp
    000030cc: 	jmp	.Ltmp3240 # Offset: 12492
    000030ce: 	endbr64
    000030d2: 	jmp	.Ltmp3241 # Offset: 12498
    000030d4: 	endbr64
    000030d8: 	jmp	.Ltmp3241 # Offset: 12504
    000030da: 	endbr64
    000030de: 	jmp	.Ltmp3241 # Offset: 12510
    000030e0: 	endbr64
    000030e4: 	jmp	.Ltmp3241 # Offset: 12516
    000030e6: 	endbr64
.Ltmp3243:
    000030ea: 	movq	%rax, %rbp
    000030ed: 	jmp	.Ltmp3242 # Offset: 12525
    000030ef: 	endbr64
    000030f3: 	jmp	.Ltmp3243 # Offset: 12531
    000030f5: 	endbr64
    000030f9: 	jmp	.Ltmp3241 # Offset: 12537
    000030fb: 	endbr64
    000030ff: 	jmp	.Ltmp3241 # Offset: 12543
.Ltmp3240:
    00003101: 	movq	0x130(%rsp), %rdi
    00003109: 	cmpq	(%rsp), %rdi
    0000310d: 	je	.Ltmp3244 # Offset: 12557
.Ltmp3249:
    0000310f: 	movq	0x140(%rsp), %rax
    00003117: 	leaq	0x1(%rax), %rsi
    0000311b: 	callq	_ZdlPvm@PLT # Offset: 12571
.Ltmp3244:
    00003120: 	movq	0xf0(%rsp), %rdi
    00003128: 	leaq	0x100(%rsp), %rax
    00003130: 	cmpq	%rax, %rdi
    00003133: 	je	.Ltmp3238 # Offset: 12595
    00003139: 	movq	0x100(%rsp), %rax
    00003141: 	leaq	0x1(%rax), %rsi
    00003145: 	callq	_ZdlPvm@PLT # Offset: 12613
    0000314a: 	jmp	.Ltmp3238 # Offset: 12618
    0000314f: 	endbr64
    00003153: 	jmp	.Ltmp3241 # Offset: 12627
.Ltmp3242:
    00003158: 	movq	0x150(%rsp), %rdi
    00003160: 	cmpq	0x38(%rsp), %rdi
    00003165: 	jne	.Ltmp3245 # Offset: 12645
    0000316b: 	jmp	.Ltmp3238 # Offset: 12651
    00003170: 	endbr64
    00003174: 	jmp	.Ltmp3243 # Offset: 12660
    00003179: 	endbr64
    0000317d: 	jmp	.Ltmp3243 # Offset: 12669
    00003182: 	endbr64
    00003186: 	jmp	.Ltmp3241 # Offset: 12678
    0000318b: 	endbr64
    0000318f: 	jmp	.Ltmp3243 # Offset: 12687
    00003194: 	endbr64
    00003198: 	jmp	.Ltmp3243 # Offset: 12696
    0000319d: 	endbr64
    000031a1: 	jmp	.Ltmp3243 # Offset: 12705
    000031a6: 	endbr64
    000031aa: 	jmp	.Ltmp3243 # Offset: 12714
    000031af: 	endbr64
    000031b3: 	jmp	.Ltmp3243 # Offset: 12723
    000031b8: 	endbr64
.Ltmp3250:
    000031bc: 	movq	%rax, %rbp
    000031bf: 	jmp	.Ltmp3246 # Offset: 12735
    000031c1: 	endbr64
    000031c5: 	jmp	.Ltmp3243 # Offset: 12741
    000031ca: 	endbr64
    000031ce: 	movq	%rax, %rbp
    000031d1: 	jmp	.Ltmp3247 # Offset: 12753
    000031d3: 	endbr64
    000031d7: 	movq	%rax, %rbp
    000031da: 	jmp	.Ltmp3244 # Offset: 12762
.Ltmp3246:
    000031df: 	movq	0x130(%rsp), %rdi
    000031e7: 	cmpq	(%rsp), %rdi
    000031eb: 	je	.Ltmp3248 # Offset: 12779
    000031ed: 	movq	0x140(%rsp), %rax
    000031f5: 	leaq	0x1(%rax), %rsi
    000031f9: 	callq	_ZdlPvm@PLT # Offset: 12793
.Ltmp3248:
    000031fe: 	movq	0x110(%rsp), %rdi
    00003206: 	leaq	0x120(%rsp), %rax
    0000320e: 	cmpq	%rax, %rdi
    00003211: 	je	.Ltmp3244 # Offset: 12817
    00003217: 	movq	0x120(%rsp), %rax
    0000321f: 	leaq	0x1(%rax), %rsi
    00003223: 	callq	_ZdlPvm@PLT # Offset: 12835
    00003228: 	jmp	.Ltmp3244 # Offset: 12840
.Ltmp3247:
    0000322d: 	movq	0x130(%rsp), %rdi
    00003235: 	leaq	0x140(%rsp), %rax
    0000323d: 	cmpq	%rax, %rdi
    00003240: 	jne	.Ltmp3249 # Offset: 12864
    00003246: 	jmp	.Ltmp3244 # Offset: 12870
    0000324b: 	endbr64
    0000324f: 	jmp	.Ltmp3241 # Offset: 12879
    00003254: 	endbr64
    00003258: 	jmp	.Ltmp3241 # Offset: 12888
    0000325d: 	endbr64
    00003261: 	jmp	.Ltmp3243 # Offset: 12897
    00003266: 	endbr64
    0000326a: 	jmp	.Ltmp3243 # Offset: 12906
    0000326f: 	endbr64
    00003273: 	jmp	.Ltmp3243 # Offset: 12915
    00003278: 	endbr64
    0000327c: 	movq	%rax, %rbp
    0000327f: 	jmp	.Ltmp3248 # Offset: 12927
    00003284: 	endbr64
    00003288: 	jmp	.Ltmp3250 # Offset: 12936
    0000328d: 	endbr64
    00003291: 	jmp	.Ltmp3243 # Offset: 12945
    00003296: 	endbr64
    0000329a: 	jmp	.Ltmp3250 # Offset: 12954
    0000329f: 	endbr64
    000032a3: 	jmp	.Ltmp3250 # Offset: 12963
    000032a8: 	endbr64
    000032ac: 	jmp	.Ltmp3250 # Offset: 12972
    000032b1: 	endbr64
    000032b5: 	jmp	.Ltmp3243 # Offset: 12981
    000032ba: 	endbr64
    000032be: 	jmp	.Ltmp3250 # Offset: 12990
    000032c3: 	endbr64
    000032c7: 	jmp	.Ltmp3250 # Offset: 12999
    000032cc: 	endbr64
    000032d0: 	jmp	.Ltmp3250 # Offset: 13008
    000032d5: 	endbr64
    000032d9: 	jmp	.Ltmp3250 # Offset: 13017
    000032de: 	endbr64
    000032e2: 	jmp	.Ltmp3250 # Offset: 13026
    000032e7: 	endbr64
    000032eb: 	jmp	.Ltmp3250 # Offset: 13035
    000032f0: 	endbr64
    000032f4: 	jmp	.Ltmp3250 # Offset: 13044
    000032f9: 	endbr64
    000032fd: 	jmp	.Ltmp3250 # Offset: 13053
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsImEvd"

Binary Function "_Z9TestLoopsIjEvd" after disassembly {
  Number      : 151
  State       : disassembled
  Address     : 0x22860
  Size        : 0x2d88
  MaxSize     : 0x2d90
  Offset      : 0x22860
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIjEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0150:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp3251:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp3251 # Offset: 37
    00000027: 	subq	$0xf08, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000003d: 	movsd	%xmm0, (%rsp)
    00000042: 	leaq	0x1f0(%rsp), %r13
    0000004a: 	leaq	0x7ef0(%rsp), %r15
    00000052: 	movq	%fs:0x28, %rax
    0000005b: 	movq	%rax, 0x7ef8(%rsp)
    00000063: 	xorl	%eax, %eax
    00000065: 	leaq	0xb0(%rsp), %rax
    0000006d: 	movaps	%xmm7, 0x60(%rsp)
    00000072: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000007a: 	movq	%rax, 0x40(%rsp)
    0000007f: 	movq	%rax, 0xa0(%rsp)
    00000087: 	movabsq	$0x745f3233746e6975, %rax
    00000091: 	movq	%rax, 0xb0(%rsp)
    00000099: 	leaq	0x60(%rsp), %rax
    0000009e: 	movq	%rax, %rsi
    000000a1: 	movq	%rax, 0x48(%rsp)
    000000a6: 	movq	$0x8, 0xa8(%rsp)
    000000b2: 	movb	$0x0, 0xb8(%rsp)
    000000ba: 	movaps	%xmm7, 0x70(%rsp)
    000000bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 191
    000000c4: 	movsd	(%rsp), %xmm0
    000000c9: 	cvttsd2si	init_value(%rip), %rax
    000000d2: 	movq	%rax, %xmm1
    000000d7: 	movq	%r13, %rax
    000000da: 	pshufd	$0x0, %xmm1, %xmm1
    000000df: 	nop # Size: 1
.Ltmp3252:
    000000e0: 	movaps	%xmm1, (%rax)
    000000e3: 	addq	$0x10, %rax
    000000e7: 	cmpq	%rax, %r15
    000000ea: 	jne	.Ltmp3252 # Offset: 234
    000000ec: 	cvttsd2si	%xmm0, %rdi
    000000f1: 	xorl	%edx, %edx
    000000f3: 	movl	%edi, %eax
    000000f5: 	leal	0x2(%rdi), %r14d
    000000f9: 	movq	%rdi, 0x38(%rsp)
    000000fe: 	movl	%edi, %ebp
    00000100: 	addl	%eax, %eax
    00000102: 	movl	%eax, 0x18(%rsp)
    00000106: 	divl	%r14d
    00000109: 	leaq	DATAat0x3d273(%rip), %rdx
    00000110: 	addl	%edi, %eax
    00000112: 	leaq	0x120(%rsp), %rdi
    0000011a: 	movl	%eax, 0x1c(%rsp)
    0000011e: 	leaq	0xa0(%rsp), %rax
    00000126: 	movq	%rax, %rsi
    00000129: 	movq	%rdi, 0x28(%rsp)
    0000012e: 	movq	%rax, 0x20(%rsp)
    00000133: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 307
    00000138: 	callq	clock@PLT # Offset: 312
    0000013d: 	movd	%ebp, %xmm7
    00000141: 	xorl	%ebx, %ebx
    00000143: 	movl	iterations(%rip), %ecx
    00000149: 	pshufd	$0x0, %xmm7, %xmm7
    0000014e: 	movq	%rax, start_time(%rip)
    00000155: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000015c: 	movaps	%xmm7, (%rsp)
    00000160: 	testl	%ecx, %ecx
    00000162: 	jle	.Ltmp3253 # Offset: 354
    00000164: 	nopl	(%rax) # Size: 4
.Ltmp3256:
    00000168: 	movq	%r13, %rax
    0000016b: 	pxor	%xmm0, %xmm0
    0000016f: 	nop # Size: 1
.Ltmp3254:
    00000170: 	movdqa	(%rsp), %xmm1
    00000175: 	paddd	(%rax), %xmm1
    00000179: 	addq	$0x10, %rax
    0000017d: 	paddd	%xmm1, %xmm0
    00000181: 	cmpq	%r15, %rax
    00000184: 	jne	.Ltmp3254 # Offset: 388
    00000186: 	cvttsd2si	init_value(%rip), %rdx
    0000018f: 	movdqa	%xmm0, %xmm1
    00000193: 	psrldq	$0x8, %xmm1
    00000198: 	paddd	%xmm1, %xmm0
    0000019c: 	movdqa	%xmm0, %xmm1
    000001a0: 	addl	%ebp, %edx
    000001a2: 	psrldq	$0x4, %xmm1
    000001a7: 	imull	$0x1f40, %edx, %edx
    000001ad: 	paddd	%xmm1, %xmm0
    000001b1: 	movd	%xmm0, %eax
    000001b5: 	cmpl	%eax, %edx
    000001b7: 	je	.Ltmp3255 # Offset: 439
    000001b9: 	movl	current_test(%rip), %edx
    000001bf: 	movq	%r12, %rsi
    000001c2: 	movl	$0x1, %edi
    000001c7: 	xorl	%eax, %eax
    000001c9: 	callq	__printf_chk@PLT # Offset: 457
    000001ce: 	movl	iterations(%rip), %ecx
.Ltmp3255:
    000001d4: 	addl	$0x1, %ebx
    000001d7: 	cmpl	%ecx, %ebx
    000001d9: 	jl	.Ltmp3256 # Offset: 473
.Ltmp3253:
    000001db: 	movq	0x28(%rsp), %rsi
    000001e0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 487
    000001ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000201: 	je	.Ltmp3257 # Offset: 513
.Ltmp3464:
    00000207: 	movq	-0x20(%rax), %r12
    0000020b: 	callq	clock@PLT # Offset: 523
    00000210: 	pxor	%xmm0, %xmm0
    00000214: 	movq	%rax, end_time(%rip)
    0000021b: 	movq	%r12, %rdi
    0000021e: 	subq	start_time(%rip), %rax
    00000225: 	cvtsi2sd	%rax, %xmm0
    0000022a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000232: 	callq	_Z13record_resultdPKc # Offset: 562
    00000237: 	movq	0x120(%rsp), %rdi
    0000023f: 	leaq	0x130(%rsp), %rax
    00000247: 	movq	%rax, 0x30(%rsp)
    0000024c: 	cmpq	%rax, %rdi
    0000024f: 	je	.Ltmp3258 # Offset: 591
    00000251: 	movq	0x130(%rsp), %rax
    00000259: 	leaq	0x1(%rax), %rsi
    0000025d: 	callq	_ZdlPvm@PLT # Offset: 605
.Ltmp3258:
    00000262: 	movq	0x20(%rsp), %rsi
    00000267: 	movq	0x28(%rsp), %rdi
    0000026c: 	leaq	DATAat0x3d281(%rip), %rdx
    00000273: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 627
    00000278: 	callq	clock@PLT # Offset: 632
    0000027d: 	movl	iterations(%rip), %ecx
    00000283: 	movq	%rax, start_time(%rip)
    0000028a: 	testl	%ecx, %ecx
    0000028c: 	jle	.Ltmp3259 # Offset: 652
    00000292: 	imull	$0x1f40, 0x38(%rsp), %r12d
    0000029b: 	xorl	%ebx, %ebx
    0000029d: 	nopl	(%rax) # Size: 3
.Ltmp3262:
    000002a0: 	movq	%r13, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3260:
    000002b0: 	paddd	(%rax), %xmm0
    000002b4: 	addq	$0x10, %rax
    000002b8: 	cmpq	%rax, %r15
    000002bb: 	jne	.Ltmp3260 # Offset: 699
    000002bd: 	cvttsd2si	init_value(%rip), %rdx
    000002c6: 	movdqa	%xmm0, %xmm1
    000002ca: 	psrldq	$0x8, %xmm1
    000002cf: 	paddd	%xmm1, %xmm0
    000002d3: 	movdqa	%xmm0, %xmm1
    000002d7: 	psrldq	$0x4, %xmm1
    000002dc: 	addl	%ebp, %edx
    000002de: 	imull	$0x1f40, %edx, %edx
    000002e4: 	paddd	%xmm1, %xmm0
    000002e8: 	movd	%xmm0, %eax
    000002ec: 	addl	%r12d, %eax
    000002ef: 	cmpl	%edx, %eax
    000002f1: 	je	.Ltmp3261 # Offset: 753
    000002f3: 	movl	current_test(%rip), %edx
    000002f9: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000300: 	movl	$0x1, %edi
    00000305: 	xorl	%eax, %eax
    00000307: 	callq	__printf_chk@PLT # Offset: 775
    0000030c: 	movl	iterations(%rip), %ecx
.Ltmp3261:
    00000312: 	addl	$0x1, %ebx
    00000315: 	cmpl	%ecx, %ebx
    00000317: 	jl	.Ltmp3262 # Offset: 791
.Ltmp3259:
    00000319: 	movq	0x28(%rsp), %rsi
    0000031e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000325: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 805
    0000032a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000331: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000338: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033f: 	je	.Ltmp3263 # Offset: 831
.Ltmp3463:
    00000345: 	movq	-0x20(%rax), %r12
    00000349: 	callq	clock@PLT # Offset: 841
    0000034e: 	pxor	%xmm0, %xmm0
    00000352: 	movq	%rax, end_time(%rip)
    00000359: 	movq	%r12, %rdi
    0000035c: 	subq	start_time(%rip), %rax
    00000363: 	cvtsi2sd	%rax, %xmm0
    00000368: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000370: 	callq	_Z13record_resultdPKc # Offset: 880
    00000375: 	movq	0x120(%rsp), %rdi
    0000037d: 	cmpq	0x30(%rsp), %rdi
    00000382: 	je	.Ltmp3264 # Offset: 898
    00000384: 	movq	0x130(%rsp), %rax
    0000038c: 	leaq	0x1(%rax), %rsi
    00000390: 	callq	_ZdlPvm@PLT # Offset: 912
.Ltmp3264:
    00000395: 	movq	0x20(%rsp), %rsi
    0000039a: 	movq	0x28(%rsp), %rdi
    0000039f: 	leaq	DATAat0x3d297(%rip), %rdx
    000003a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 934
    000003ab: 	callq	clock@PLT # Offset: 939
    000003b0: 	movl	iterations(%rip), %ecx
    000003b6: 	movq	%rax, start_time(%rip)
    000003bd: 	testl	%ecx, %ecx
    000003bf: 	jle	.Ltmp3265 # Offset: 959
    000003c5: 	movl	0x18(%rsp), %eax
    000003c9: 	xorl	%ebx, %ebx
    000003cb: 	leal	(%rax,%r14), %r12d
    000003cf: 	addl	0x38(%rsp), %r12d
    000003d4: 	addl	0x1c(%rsp), %r12d
    000003d9: 	movd	%r12d, %xmm7
    000003de: 	pshufd	$0x0, %xmm7, %xmm7
    000003e3: 	movaps	%xmm7, (%rsp)
    000003e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3268:
    000003f0: 	movq	%r13, %rax
    000003f3: 	pxor	%xmm0, %xmm0
    000003f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3266:
    00000400: 	movdqa	(%rsp), %xmm1
    00000405: 	paddd	(%rax), %xmm1
    00000409: 	addq	$0x10, %rax
    0000040d: 	paddd	%xmm1, %xmm0
    00000411: 	cmpq	%r15, %rax
    00000414: 	jne	.Ltmp3266 # Offset: 1044
    00000416: 	cvttsd2si	init_value(%rip), %rdx
    0000041f: 	movdqa	%xmm0, %xmm1
    00000423: 	psrldq	$0x8, %xmm1
    00000428: 	paddd	%xmm1, %xmm0
    0000042c: 	movdqa	%xmm0, %xmm1
    00000430: 	addl	%r12d, %edx
    00000433: 	psrldq	$0x4, %xmm1
    00000438: 	imull	$0x1f40, %edx, %edx
    0000043e: 	paddd	%xmm1, %xmm0
    00000442: 	movd	%xmm0, %eax
    00000446: 	cmpl	%eax, %edx
    00000448: 	je	.Ltmp3267 # Offset: 1096
    0000044a: 	movl	current_test(%rip), %edx
    00000450: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000457: 	movl	$0x1, %edi
    0000045c: 	xorl	%eax, %eax
    0000045e: 	callq	__printf_chk@PLT # Offset: 1118
    00000463: 	movl	iterations(%rip), %ecx
.Ltmp3267:
    00000469: 	addl	$0x1, %ebx
    0000046c: 	cmpl	%ecx, %ebx
    0000046e: 	jl	.Ltmp3268 # Offset: 1134
.Ltmp3265:
    00000470: 	movq	0x28(%rsp), %rsi
    00000475: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000047c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1148
    00000481: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000488: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000048f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000496: 	je	.Ltmp3269 # Offset: 1174
.Ltmp3462:
    0000049c: 	movq	-0x20(%rax), %r12
    000004a0: 	callq	clock@PLT # Offset: 1184
    000004a5: 	pxor	%xmm0, %xmm0
    000004a9: 	movq	%rax, end_time(%rip)
    000004b0: 	movq	%r12, %rdi
    000004b3: 	subq	start_time(%rip), %rax
    000004ba: 	cvtsi2sd	%rax, %xmm0
    000004bf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004c7: 	callq	_Z13record_resultdPKc # Offset: 1223
    000004cc: 	movq	0x120(%rsp), %rdi
    000004d4: 	cmpq	0x30(%rsp), %rdi
    000004d9: 	je	.Ltmp3270 # Offset: 1241
    000004db: 	movq	0x130(%rsp), %rax
    000004e3: 	leaq	0x1(%rax), %rsi
    000004e7: 	callq	_ZdlPvm@PLT # Offset: 1255
.Ltmp3270:
    000004ec: 	movq	0x20(%rsp), %rsi
    000004f1: 	movq	0x28(%rsp), %rdi
    000004f6: 	leaq	DATAat0x3d2af(%rip), %rdx
    000004fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1277
    00000502: 	callq	clock@PLT # Offset: 1282
    00000507: 	movl	iterations(%rip), %ecx
    0000050d: 	movq	%rax, start_time(%rip)
    00000514: 	testl	%ecx, %ecx
    00000516: 	jle	.Ltmp3271 # Offset: 1302
    0000051c: 	movl	0x18(%rsp), %eax
    00000520: 	xorl	%ebx, %ebx
    00000522: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000529: 	addl	%r14d, %eax
    0000052c: 	addl	0x38(%rsp), %eax
    00000530: 	addl	0x1c(%rsp), %eax
    00000534: 	movd	%eax, %xmm7
    00000538: 	pshufd	$0x0, %xmm7, %xmm7
    0000053d: 	movaps	%xmm7, (%rsp)
    00000541: 	nopl	(%rax) # Size: 7
.Ltmp3274:
    00000548: 	movq	%r13, %rax
    0000054b: 	pxor	%xmm0, %xmm0
    0000054f: 	nop # Size: 1
.Ltmp3272:
    00000550: 	movdqa	(%rsp), %xmm1
    00000555: 	paddd	(%rax), %xmm1
    00000559: 	addq	$0x10, %rax
    0000055d: 	paddd	%xmm1, %xmm0
    00000561: 	cmpq	%rax, %r15
    00000564: 	jne	.Ltmp3272 # Offset: 1380
    00000566: 	cvttsd2si	init_value(%rip), %rdx
    0000056f: 	movdqa	%xmm0, %xmm1
    00000573: 	psrldq	$0x8, %xmm1
    00000578: 	paddd	%xmm1, %xmm0
    0000057c: 	movdqa	%xmm0, %xmm1
    00000580: 	addl	%ebp, %edx
    00000582: 	psrldq	$0x4, %xmm1
    00000587: 	addl	0x18(%rsp), %edx
    0000058b: 	addl	%r14d, %edx
    0000058e: 	addl	0x1c(%rsp), %edx
    00000592: 	paddd	%xmm1, %xmm0
    00000596: 	imull	$0x1f40, %edx, %edx
    0000059c: 	movd	%xmm0, %eax
    000005a0: 	cmpl	%eax, %edx
    000005a2: 	je	.Ltmp3273 # Offset: 1442
    000005a4: 	movl	current_test(%rip), %edx
    000005aa: 	movq	%r12, %rsi
    000005ad: 	movl	$0x1, %edi
    000005b2: 	xorl	%eax, %eax
    000005b4: 	callq	__printf_chk@PLT # Offset: 1460
    000005b9: 	movl	iterations(%rip), %ecx
.Ltmp3273:
    000005bf: 	addl	$0x1, %ebx
    000005c2: 	cmpl	%ecx, %ebx
    000005c4: 	jl	.Ltmp3274 # Offset: 1476
.Ltmp3271:
    000005c6: 	movq	0x28(%rsp), %rsi
    000005cb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000005d2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1490
    000005d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005de: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005ec: 	je	.Ltmp3275 # Offset: 1516
.Ltmp3461:
    000005f2: 	movq	-0x20(%rax), %r12
    000005f6: 	callq	clock@PLT # Offset: 1526
    000005fb: 	pxor	%xmm0, %xmm0
    000005ff: 	movq	%rax, end_time(%rip)
    00000606: 	movq	%r12, %rdi
    00000609: 	subq	start_time(%rip), %rax
    00000610: 	cvtsi2sd	%rax, %xmm0
    00000615: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000061d: 	callq	_Z13record_resultdPKc # Offset: 1565
    00000622: 	movq	0x120(%rsp), %rdi
    0000062a: 	cmpq	0x30(%rsp), %rdi
    0000062f: 	je	.Ltmp3276 # Offset: 1583
    00000631: 	movq	0x130(%rsp), %rax
    00000639: 	leaq	0x1(%rax), %rsi
    0000063d: 	callq	_ZdlPvm@PLT # Offset: 1597
.Ltmp3276:
    00000642: 	movq	0x20(%rsp), %rsi
    00000647: 	movq	0x28(%rsp), %rdi
    0000064c: 	leaq	DATAat0x3d2c8(%rip), %rdx
    00000653: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1619
    00000658: 	callq	clock@PLT # Offset: 1624
    0000065d: 	movd	%ebp, %xmm7
    00000661: 	xorl	%ebx, %ebx
    00000663: 	movl	iterations(%rip), %ecx
    00000669: 	pshufd	$0x0, %xmm7, %xmm7
    0000066e: 	movq	%rax, start_time(%rip)
    00000675: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000067c: 	movaps	%xmm7, (%rsp)
    00000680: 	testl	%ecx, %ecx
    00000682: 	jle	.Ltmp3277 # Offset: 1666
    00000684: 	nopl	(%rax) # Size: 4
.Ltmp3280:
    00000688: 	movq	%r13, %rax
    0000068b: 	pxor	%xmm0, %xmm0
    0000068f: 	nop # Size: 1
.Ltmp3278:
    00000690: 	paddd	(%rax), %xmm0
    00000694: 	addq	$0x10, %rax
    00000698: 	psubd	(%rsp), %xmm0
    0000069d: 	cmpq	%r15, %rax
    000006a0: 	jne	.Ltmp3278 # Offset: 1696
    000006a2: 	cvttsd2si	init_value(%rip), %rdx
    000006ab: 	movdqa	%xmm0, %xmm1
    000006af: 	psrldq	$0x8, %xmm1
    000006b4: 	paddd	%xmm1, %xmm0
    000006b8: 	movdqa	%xmm0, %xmm1
    000006bc: 	subl	%ebp, %edx
    000006be: 	psrldq	$0x4, %xmm1
    000006c3: 	imull	$0x1f40, %edx, %edx
    000006c9: 	paddd	%xmm1, %xmm0
    000006cd: 	movd	%xmm0, %eax
    000006d1: 	cmpl	%eax, %edx
    000006d3: 	je	.Ltmp3279 # Offset: 1747
    000006d5: 	movl	current_test(%rip), %edx
    000006db: 	movq	%r12, %rsi
    000006de: 	movl	$0x1, %edi
    000006e3: 	xorl	%eax, %eax
    000006e5: 	callq	__printf_chk@PLT # Offset: 1765
    000006ea: 	movl	iterations(%rip), %ecx
.Ltmp3279:
    000006f0: 	addl	$0x1, %ebx
    000006f3: 	cmpl	%ecx, %ebx
    000006f5: 	jl	.Ltmp3280 # Offset: 1781
.Ltmp3277:
    000006f7: 	movq	0x28(%rsp), %rsi
    000006fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000703: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1795
    00000708: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000070f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000716: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000071d: 	je	.Ltmp3281 # Offset: 1821
.Ltmp3460:
    00000723: 	movq	-0x20(%rax), %r12
    00000727: 	callq	clock@PLT # Offset: 1831
    0000072c: 	pxor	%xmm0, %xmm0
    00000730: 	movq	%rax, end_time(%rip)
    00000737: 	movq	%r12, %rdi
    0000073a: 	subq	start_time(%rip), %rax
    00000741: 	cvtsi2sd	%rax, %xmm0
    00000746: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000074e: 	callq	_Z13record_resultdPKc # Offset: 1870
    00000753: 	movq	0x120(%rsp), %rdi
    0000075b: 	cmpq	0x30(%rsp), %rdi
    00000760: 	je	.Ltmp3282 # Offset: 1888
    00000762: 	movq	0x130(%rsp), %rax
    0000076a: 	leaq	0x1(%rax), %rsi
    0000076e: 	callq	_ZdlPvm@PLT # Offset: 1902
.Ltmp3282:
    00000773: 	movq	0x20(%rsp), %rsi
    00000778: 	movq	0x28(%rsp), %rdi
    0000077d: 	leaq	DATAat0x3d2db(%rip), %rdx
    00000784: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1924
    00000789: 	callq	clock@PLT # Offset: 1929
    0000078e: 	movl	iterations(%rip), %ecx
    00000794: 	movq	%rax, start_time(%rip)
    0000079b: 	testl	%ecx, %ecx
    0000079d: 	jle	.Ltmp3283 # Offset: 1949
    000007a3: 	movl	0x18(%rsp), %eax
    000007a7: 	xorl	%ebx, %ebx
    000007a9: 	leal	(%rax,%r14), %r12d
    000007ad: 	addl	0x38(%rsp), %r12d
    000007b2: 	addl	0x1c(%rsp), %r12d
    000007b7: 	movd	%r12d, %xmm7
    000007bc: 	pshufd	$0x0, %xmm7, %xmm7
    000007c1: 	movaps	%xmm7, (%rsp)
    000007c5: 	nopl	(%rax) # Size: 3
.Ltmp3286:
    000007c8: 	movq	%r13, %rax
    000007cb: 	pxor	%xmm0, %xmm0
    000007cf: 	nop # Size: 1
.Ltmp3284:
    000007d0: 	paddd	(%rax), %xmm0
    000007d4: 	addq	$0x10, %rax
    000007d8: 	psubd	(%rsp), %xmm0
    000007dd: 	cmpq	%rax, %r15
    000007e0: 	jne	.Ltmp3284 # Offset: 2016
    000007e2: 	cvttsd2si	init_value(%rip), %rdx
    000007eb: 	movdqa	%xmm0, %xmm1
    000007ef: 	psrldq	$0x8, %xmm1
    000007f4: 	paddd	%xmm1, %xmm0
    000007f8: 	movdqa	%xmm0, %xmm1
    000007fc: 	subl	%r12d, %edx
    000007ff: 	psrldq	$0x4, %xmm1
    00000804: 	imull	$0x1f40, %edx, %edx
    0000080a: 	paddd	%xmm1, %xmm0
    0000080e: 	movd	%xmm0, %eax
    00000812: 	cmpl	%eax, %edx
    00000814: 	je	.Ltmp3285 # Offset: 2068
    00000816: 	movl	current_test(%rip), %edx
    0000081c: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000823: 	movl	$0x1, %edi
    00000828: 	xorl	%eax, %eax
    0000082a: 	callq	__printf_chk@PLT # Offset: 2090
    0000082f: 	movl	iterations(%rip), %ecx
.Ltmp3285:
    00000835: 	addl	$0x1, %ebx
    00000838: 	cmpl	%ecx, %ebx
    0000083a: 	jl	.Ltmp3286 # Offset: 2106
.Ltmp3283:
    0000083c: 	movq	0x28(%rsp), %rsi
    00000841: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000848: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2120
    0000084d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000854: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000085b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000862: 	je	.Ltmp3287 # Offset: 2146
.Ltmp3459:
    00000868: 	movq	-0x20(%rax), %r12
    0000086c: 	callq	clock@PLT # Offset: 2156
    00000871: 	pxor	%xmm0, %xmm0
    00000875: 	movq	%rax, end_time(%rip)
    0000087c: 	movq	%r12, %rdi
    0000087f: 	subq	start_time(%rip), %rax
    00000886: 	cvtsi2sd	%rax, %xmm0
    0000088b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000893: 	callq	_Z13record_resultdPKc # Offset: 2195
    00000898: 	movq	0x120(%rsp), %rdi
    000008a0: 	cmpq	0x30(%rsp), %rdi
    000008a5: 	je	.Ltmp3288 # Offset: 2213
    000008a7: 	movq	0x130(%rsp), %rax
    000008af: 	leaq	0x1(%rax), %rsi
    000008b3: 	callq	_ZdlPvm@PLT # Offset: 2227
.Ltmp3288:
    000008b8: 	movq	0x20(%rsp), %rsi
    000008bd: 	movq	0x28(%rsp), %rdi
    000008c2: 	leaq	DATAat0x3d2f8(%rip), %rdx
    000008c9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2249
    000008ce: 	callq	clock@PLT # Offset: 2254
    000008d3: 	movl	iterations(%rip), %ecx
    000008d9: 	movq	%rax, start_time(%rip)
    000008e0: 	testl	%ecx, %ecx
    000008e2: 	jle	.Ltmp3289 # Offset: 2274
    000008e8: 	movl	0x18(%rsp), %eax
    000008ec: 	xorl	%ebx, %ebx
    000008ee: 	leaq	DATAat0x3d1d8(%rip), %r12
    000008f5: 	addl	%r14d, %eax
    000008f8: 	addl	0x38(%rsp), %eax
    000008fc: 	addl	0x1c(%rsp), %eax
    00000900: 	movd	%eax, %xmm7
    00000904: 	pshufd	$0x0, %xmm7, %xmm7
    00000909: 	movaps	%xmm7, (%rsp)
    0000090d: 	nopl	(%rax) # Size: 3
.Ltmp3292:
    00000910: 	movq	%r13, %rax
    00000913: 	pxor	%xmm0, %xmm0
    00000917: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3290:
    00000920: 	paddd	(%rax), %xmm0
    00000924: 	addq	$0x10, %rax
    00000928: 	psubd	(%rsp), %xmm0
    0000092d: 	cmpq	%r15, %rax
    00000930: 	jne	.Ltmp3290 # Offset: 2352
    00000932: 	cvttsd2si	init_value(%rip), %rdx
    0000093b: 	movdqa	%xmm0, %xmm1
    0000093f: 	psrldq	$0x8, %xmm1
    00000944: 	paddd	%xmm1, %xmm0
    00000948: 	movdqa	%xmm0, %xmm1
    0000094c: 	subl	%ebp, %edx
    0000094e: 	psrldq	$0x4, %xmm1
    00000953: 	subl	0x18(%rsp), %edx
    00000957: 	subl	%r14d, %edx
    0000095a: 	subl	0x1c(%rsp), %edx
    0000095e: 	paddd	%xmm1, %xmm0
    00000962: 	imull	$0x1f40, %edx, %edx
    00000968: 	movd	%xmm0, %eax
    0000096c: 	cmpl	%eax, %edx
    0000096e: 	je	.Ltmp3291 # Offset: 2414
    00000970: 	movl	current_test(%rip), %edx
    00000976: 	movq	%r12, %rsi
    00000979: 	movl	$0x1, %edi
    0000097e: 	xorl	%eax, %eax
    00000980: 	callq	__printf_chk@PLT # Offset: 2432
    00000985: 	movl	iterations(%rip), %ecx
.Ltmp3291:
    0000098b: 	addl	$0x1, %ebx
    0000098e: 	cmpl	%ecx, %ebx
    00000990: 	jl	.Ltmp3292 # Offset: 2448
.Ltmp3289:
    00000996: 	movq	0x28(%rsp), %rsi
    0000099b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000009a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2466
    000009a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009bc: 	je	.Ltmp3293 # Offset: 2492
.Ltmp3458:
    000009c2: 	movq	-0x20(%rax), %r12
    000009c6: 	callq	clock@PLT # Offset: 2502
    000009cb: 	pxor	%xmm0, %xmm0
    000009cf: 	movq	%rax, end_time(%rip)
    000009d6: 	movq	%r12, %rdi
    000009d9: 	subq	start_time(%rip), %rax
    000009e0: 	cvtsi2sd	%rax, %xmm0
    000009e5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000009ed: 	callq	_Z13record_resultdPKc # Offset: 2541
    000009f2: 	movq	0x120(%rsp), %rdi
    000009fa: 	cmpq	0x30(%rsp), %rdi
    000009ff: 	je	.Ltmp3294 # Offset: 2559
    00000a01: 	movq	0x130(%rsp), %rax
    00000a09: 	leaq	0x1(%rax), %rsi
    00000a0d: 	callq	_ZdlPvm@PLT # Offset: 2573
.Ltmp3294:
    00000a12: 	movq	0x20(%rsp), %rsi
    00000a17: 	movq	0x28(%rsp), %rdi
    00000a1c: 	leaq	DATAat0x3d316(%rip), %rdx
    00000a23: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2595
    00000a28: 	callq	clock@PLT # Offset: 2600
    00000a2d: 	movd	%ebp, %xmm7
    00000a31: 	xorl	%ebx, %ebx
    00000a33: 	movl	iterations(%rip), %ecx
    00000a39: 	pshufd	$0x0, %xmm7, %xmm7
    00000a3e: 	movq	%rax, start_time(%rip)
    00000a45: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000a4c: 	movaps	%xmm7, (%rsp)
    00000a50: 	testl	%ecx, %ecx
    00000a52: 	jle	.Ltmp3295 # Offset: 2642
    00000a58: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3298:
    00000a60: 	movdqa	(%rsp), %xmm3
    00000a65: 	movq	%r13, %rax
    00000a68: 	pxor	%xmm2, %xmm2
    00000a6c: 	psrlq	$0x20, %xmm3
    00000a71: 	nopl	(%rax) # Size: 7
.Ltmp3296:
    00000a78: 	movdqa	(%rax), %xmm0
    00000a7c: 	movdqa	(%rsp), %xmm1
    00000a81: 	pmuludq	(%rax), %xmm1
    00000a85: 	pshufd	$0x8, %xmm1, %xmm1
    00000a8a: 	addq	$0x10, %rax
    00000a8e: 	psrlq	$0x20, %xmm0
    00000a93: 	pmuludq	%xmm3, %xmm0
    00000a97: 	pshufd	$0x8, %xmm0, %xmm0
    00000a9c: 	punpckldq	%xmm0, %xmm1
    00000aa0: 	paddd	%xmm1, %xmm2
    00000aa4: 	cmpq	%rax, %r15
    00000aa7: 	jne	.Ltmp3296 # Offset: 2727
    00000aa9: 	cvttsd2si	init_value(%rip), %rdx
    00000ab2: 	movdqa	%xmm2, %xmm0
    00000ab6: 	psrldq	$0x8, %xmm0
    00000abb: 	paddd	%xmm0, %xmm2
    00000abf: 	movdqa	%xmm2, %xmm0
    00000ac3: 	imull	%ebp, %edx
    00000ac6: 	psrldq	$0x4, %xmm0
    00000acb: 	paddd	%xmm0, %xmm2
    00000acf: 	movd	%xmm2, %eax
    00000ad3: 	imull	$0x1f40, %edx, %edx
    00000ad9: 	cmpl	%eax, %edx
    00000adb: 	je	.Ltmp3297 # Offset: 2779
    00000add: 	movl	current_test(%rip), %edx
    00000ae3: 	movq	%r12, %rsi
    00000ae6: 	movl	$0x1, %edi
    00000aeb: 	xorl	%eax, %eax
    00000aed: 	callq	__printf_chk@PLT # Offset: 2797
    00000af2: 	movl	iterations(%rip), %ecx
.Ltmp3297:
    00000af8: 	addl	$0x1, %ebx
    00000afb: 	cmpl	%ecx, %ebx
    00000afd: 	jl	.Ltmp3298 # Offset: 2813
.Ltmp3295:
    00000b03: 	movq	0x28(%rsp), %rsi
    00000b08: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b0f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2831
    00000b14: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b1b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b22: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b29: 	je	.Ltmp3299 # Offset: 2857
.Ltmp3457:
    00000b2f: 	movq	-0x20(%rax), %r12
    00000b33: 	callq	clock@PLT # Offset: 2867
    00000b38: 	pxor	%xmm0, %xmm0
    00000b3c: 	movq	%rax, end_time(%rip)
    00000b43: 	movq	%r12, %rdi
    00000b46: 	subq	start_time(%rip), %rax
    00000b4d: 	cvtsi2sd	%rax, %xmm0
    00000b52: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b5a: 	callq	_Z13record_resultdPKc # Offset: 2906
    00000b5f: 	movq	0x120(%rsp), %rdi
    00000b67: 	cmpq	0x30(%rsp), %rdi
    00000b6c: 	je	.Ltmp3300 # Offset: 2924
    00000b6e: 	movq	0x130(%rsp), %rax
    00000b76: 	leaq	0x1(%rax), %rsi
    00000b7a: 	callq	_ZdlPvm@PLT # Offset: 2938
.Ltmp3300:
    00000b7f: 	movq	0x20(%rsp), %rsi
    00000b84: 	movq	0x28(%rsp), %rdi
    00000b89: 	leaq	DATAat0x3d329(%rip), %rdx
    00000b90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2960
    00000b95: 	callq	clock@PLT # Offset: 2965
    00000b9a: 	movl	iterations(%rip), %ecx
    00000ba0: 	movq	%rax, start_time(%rip)
    00000ba7: 	testl	%ecx, %ecx
    00000ba9: 	jle	.Ltmp3301 # Offset: 2985
    00000baf: 	movl	0x18(%rsp), %eax
    00000bb3: 	xorl	%ebx, %ebx
    00000bb5: 	imull	%r14d, %eax
    00000bb9: 	imull	0x38(%rsp), %eax
    00000bbe: 	imull	0x1c(%rsp), %eax
    00000bc3: 	movd	%eax, %xmm7
    00000bc7: 	movl	%eax, %r12d
    00000bca: 	pshufd	$0x0, %xmm7, %xmm7
    00000bcf: 	movaps	%xmm7, (%rsp)
    00000bd3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3304:
    00000bd8: 	movdqa	(%rsp), %xmm3
    00000bdd: 	movq	%r13, %rax
    00000be0: 	pxor	%xmm2, %xmm2
    00000be4: 	psrlq	$0x20, %xmm3
    00000be9: 	nopl	(%rax) # Size: 7
.Ltmp3302:
    00000bf0: 	movdqa	(%rax), %xmm0
    00000bf4: 	movdqa	(%rsp), %xmm1
    00000bf9: 	pmuludq	(%rax), %xmm1
    00000bfd: 	pshufd	$0x8, %xmm1, %xmm1
    00000c02: 	addq	$0x10, %rax
    00000c06: 	psrlq	$0x20, %xmm0
    00000c0b: 	pmuludq	%xmm3, %xmm0
    00000c0f: 	pshufd	$0x8, %xmm0, %xmm0
    00000c14: 	punpckldq	%xmm0, %xmm1
    00000c18: 	paddd	%xmm1, %xmm2
    00000c1c: 	cmpq	%r15, %rax
    00000c1f: 	jne	.Ltmp3302 # Offset: 3103
    00000c21: 	cvttsd2si	init_value(%rip), %rdx
    00000c2a: 	movdqa	%xmm2, %xmm0
    00000c2e: 	psrldq	$0x8, %xmm0
    00000c33: 	paddd	%xmm0, %xmm2
    00000c37: 	movdqa	%xmm2, %xmm0
    00000c3b: 	imull	%r12d, %edx
    00000c3f: 	psrldq	$0x4, %xmm0
    00000c44: 	paddd	%xmm0, %xmm2
    00000c48: 	movd	%xmm2, %eax
    00000c4c: 	imull	$0x1f40, %edx, %edx
    00000c52: 	cmpl	%eax, %edx
    00000c54: 	je	.Ltmp3303 # Offset: 3156
    00000c56: 	movl	current_test(%rip), %edx
    00000c5c: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c63: 	movl	$0x1, %edi
    00000c68: 	xorl	%eax, %eax
    00000c6a: 	callq	__printf_chk@PLT # Offset: 3178
    00000c6f: 	movl	iterations(%rip), %ecx
.Ltmp3303:
    00000c75: 	addl	$0x1, %ebx
    00000c78: 	cmpl	%ecx, %ebx
    00000c7a: 	jl	.Ltmp3304 # Offset: 3194
.Ltmp3301:
    00000c80: 	movq	0x28(%rsp), %rsi
    00000c85: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c8c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3212
    00000c91: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c98: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c9f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ca6: 	je	.Ltmp3305 # Offset: 3238
.Ltmp3456:
    00000cac: 	movq	-0x20(%rax), %r12
    00000cb0: 	callq	clock@PLT # Offset: 3248
    00000cb5: 	pxor	%xmm0, %xmm0
    00000cb9: 	movq	%rax, end_time(%rip)
    00000cc0: 	movq	%r12, %rdi
    00000cc3: 	subq	start_time(%rip), %rax
    00000cca: 	cvtsi2sd	%rax, %xmm0
    00000ccf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000cd7: 	callq	_Z13record_resultdPKc # Offset: 3287
    00000cdc: 	movq	0x120(%rsp), %rdi
    00000ce4: 	cmpq	0x30(%rsp), %rdi
    00000ce9: 	je	.Ltmp3306 # Offset: 3305
    00000ceb: 	movq	0x130(%rsp), %rax
    00000cf3: 	leaq	0x1(%rax), %rsi
    00000cf7: 	callq	_ZdlPvm@PLT # Offset: 3319
.Ltmp3306:
    00000cfc: 	movq	0x20(%rsp), %rsi
    00000d01: 	movq	0x28(%rsp), %rdi
    00000d06: 	leaq	DATAat0x3d600(%rip), %rdx
    00000d0d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3341
    00000d12: 	callq	clock@PLT # Offset: 3346
    00000d17: 	movl	iterations(%rip), %ecx
    00000d1d: 	movq	%rax, start_time(%rip)
    00000d24: 	testl	%ecx, %ecx
    00000d26: 	jle	.Ltmp3307 # Offset: 3366
    00000d2c: 	movl	0x18(%rsp), %r12d
    00000d31: 	xorl	%ebx, %ebx
    00000d33: 	imull	%r14d, %r12d
    00000d37: 	imull	0x38(%rsp), %r12d
    00000d3d: 	imull	0x1c(%rsp), %r12d
    00000d43: 	movd	%r12d, %xmm7
    00000d48: 	pshufd	$0x0, %xmm7, %xmm7
    00000d4d: 	movaps	%xmm7, (%rsp)
    00000d51: 	nopl	(%rax) # Size: 7
.Ltmp3310:
    00000d58: 	movq	%r13, %rax
    00000d5b: 	pxor	%xmm0, %xmm0
    00000d5f: 	nop # Size: 1
.Ltmp3308:
    00000d60: 	movdqa	(%rsp), %xmm1
    00000d65: 	paddd	(%rax), %xmm1
    00000d69: 	addq	$0x10, %rax
    00000d6d: 	paddd	%xmm1, %xmm0
    00000d71: 	cmpq	%rax, %r15
    00000d74: 	jne	.Ltmp3308 # Offset: 3444
    00000d76: 	cvttsd2si	init_value(%rip), %rdx
    00000d7f: 	movdqa	%xmm0, %xmm1
    00000d83: 	psrldq	$0x8, %xmm1
    00000d88: 	paddd	%xmm1, %xmm0
    00000d8c: 	movdqa	%xmm0, %xmm1
    00000d90: 	addl	%r12d, %edx
    00000d93: 	psrldq	$0x4, %xmm1
    00000d98: 	imull	$0x1f40, %edx, %edx
    00000d9e: 	paddd	%xmm1, %xmm0
    00000da2: 	movd	%xmm0, %eax
    00000da6: 	cmpl	%eax, %edx
    00000da8: 	je	.Ltmp3309 # Offset: 3496
    00000daa: 	movl	current_test(%rip), %edx
    00000db0: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000db7: 	movl	$0x1, %edi
    00000dbc: 	xorl	%eax, %eax
    00000dbe: 	callq	__printf_chk@PLT # Offset: 3518
    00000dc3: 	movl	iterations(%rip), %ecx
.Ltmp3309:
    00000dc9: 	addl	$0x1, %ebx
    00000dcc: 	cmpl	%ecx, %ebx
    00000dce: 	jl	.Ltmp3310 # Offset: 3534
.Ltmp3307:
    00000dd0: 	movq	0x28(%rsp), %rsi
    00000dd5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ddc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3548
    00000de1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000de8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000def: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000df6: 	je	.Ltmp3311 # Offset: 3574
.Ltmp3455:
    00000dfc: 	movq	-0x20(%rax), %r12
    00000e00: 	callq	clock@PLT # Offset: 3584
    00000e05: 	pxor	%xmm0, %xmm0
    00000e09: 	movq	%rax, end_time(%rip)
    00000e10: 	movq	%r12, %rdi
    00000e13: 	subq	start_time(%rip), %rax
    00000e1a: 	cvtsi2sd	%rax, %xmm0
    00000e1f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e27: 	callq	_Z13record_resultdPKc # Offset: 3623
    00000e2c: 	movq	0x120(%rsp), %rdi
    00000e34: 	cmpq	0x30(%rsp), %rdi
    00000e39: 	je	.Ltmp3312 # Offset: 3641
    00000e3b: 	movq	0x130(%rsp), %rax
    00000e43: 	leaq	0x1(%rax), %rsi
    00000e47: 	callq	_ZdlPvm@PLT # Offset: 3655
.Ltmp3312:
    00000e4c: 	movq	0x20(%rsp), %rsi
    00000e51: 	movq	0x28(%rsp), %rdi
    00000e56: 	leaq	DATAat0x3d620(%rip), %rdx
    00000e5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3677
    00000e62: 	callq	clock@PLT # Offset: 3682
    00000e67: 	movl	iterations(%rip), %ecx
    00000e6d: 	movq	%rax, start_time(%rip)
    00000e74: 	testl	%ecx, %ecx
    00000e76: 	jle	.Ltmp3313 # Offset: 3702
    00000e7c: 	movl	0x18(%rsp), %eax
    00000e80: 	xorl	%ebx, %ebx
    00000e82: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000e89: 	imull	%r14d, %eax
    00000e8d: 	imull	0x38(%rsp), %eax
    00000e92: 	imull	0x1c(%rsp), %eax
    00000e97: 	movd	%eax, %xmm7
    00000e9b: 	pshufd	$0x0, %xmm7, %xmm7
    00000ea0: 	movaps	%xmm7, (%rsp)
    00000ea4: 	nopl	(%rax) # Size: 4
.Ltmp3316:
    00000ea8: 	movdqa	(%rsp), %xmm3
    00000ead: 	movq	%r13, %rax
    00000eb0: 	pxor	%xmm2, %xmm2
    00000eb4: 	psrlq	$0x20, %xmm3
    00000eb9: 	nopl	(%rax) # Size: 7
.Ltmp3314:
    00000ec0: 	movdqa	(%rax), %xmm0
    00000ec4: 	movdqa	(%rsp), %xmm1
    00000ec9: 	pmuludq	(%rax), %xmm1
    00000ecd: 	pshufd	$0x8, %xmm1, %xmm1
    00000ed2: 	addq	$0x10, %rax
    00000ed6: 	psrlq	$0x20, %xmm0
    00000edb: 	pmuludq	%xmm3, %xmm0
    00000edf: 	pshufd	$0x8, %xmm0, %xmm0
    00000ee4: 	punpckldq	%xmm0, %xmm1
    00000ee8: 	paddd	%xmm1, %xmm2
    00000eec: 	cmpq	%r15, %rax
    00000eef: 	jne	.Ltmp3314 # Offset: 3823
    00000ef1: 	cvttsd2si	init_value(%rip), %rdx
    00000efa: 	movdqa	%xmm2, %xmm0
    00000efe: 	psrldq	$0x8, %xmm0
    00000f03: 	paddd	%xmm0, %xmm2
    00000f07: 	movdqa	%xmm2, %xmm0
    00000f0b: 	imull	%ebp, %edx
    00000f0e: 	psrldq	$0x4, %xmm0
    00000f13: 	imull	0x18(%rsp), %edx
    00000f18: 	paddd	%xmm0, %xmm2
    00000f1c: 	movd	%xmm2, %eax
    00000f20: 	imull	%r14d, %edx
    00000f24: 	imull	0x1c(%rsp), %edx
    00000f29: 	imull	$0x1f40, %edx, %edx
    00000f2f: 	cmpl	%eax, %edx
    00000f31: 	je	.Ltmp3315 # Offset: 3889
    00000f33: 	movl	current_test(%rip), %edx
    00000f39: 	movq	%r12, %rsi
    00000f3c: 	movl	$0x1, %edi
    00000f41: 	xorl	%eax, %eax
    00000f43: 	callq	__printf_chk@PLT # Offset: 3907
    00000f48: 	movl	iterations(%rip), %ecx
.Ltmp3315:
    00000f4e: 	addl	$0x1, %ebx
    00000f51: 	cmpl	%ecx, %ebx
    00000f53: 	jl	.Ltmp3316 # Offset: 3923
.Ltmp3313:
    00000f59: 	movq	0x28(%rsp), %rsi
    00000f5e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f65: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3941
    00000f6a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f71: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f78: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f7f: 	je	.Ltmp3317 # Offset: 3967
.Ltmp3454:
    00000f85: 	movq	-0x20(%rax), %r12
    00000f89: 	callq	clock@PLT # Offset: 3977
    00000f8e: 	pxor	%xmm0, %xmm0
    00000f92: 	movq	%rax, end_time(%rip)
    00000f99: 	movq	%r12, %rdi
    00000f9c: 	subq	start_time(%rip), %rax
    00000fa3: 	cvtsi2sd	%rax, %xmm0
    00000fa8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000fb0: 	callq	_Z13record_resultdPKc # Offset: 4016
    00000fb5: 	movq	0x120(%rsp), %rdi
    00000fbd: 	cmpq	0x30(%rsp), %rdi
    00000fc2: 	je	.Ltmp3318 # Offset: 4034
    00000fc4: 	movq	0x130(%rsp), %rax
    00000fcc: 	leaq	0x1(%rax), %rsi
    00000fd0: 	callq	_ZdlPvm@PLT # Offset: 4048
.Ltmp3318:
    00000fd5: 	movq	0x20(%rsp), %rsi
    00000fda: 	movq	0x28(%rsp), %rdi
    00000fdf: 	leaq	DATAat0x3d347(%rip), %rdx
    00000fe6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4070
    00000feb: 	callq	clock@PLT # Offset: 4075
    00000ff0: 	movl	iterations(%rip), %edi
    00000ff6: 	xorl	%ebx, %ebx
    00000ff8: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000fff: 	movq	%rax, start_time(%rip)
    00001006: 	testl	%edi, %edi
    00001008: 	jle	.Ltmp3319 # Offset: 4104
    0000100a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3322:
    00001010: 	movq	%r13, %rcx
    00001013: 	xorl	%esi, %esi
    00001015: 	nopl	(%rax) # Size: 3
.Ltmp3320:
    00001018: 	movl	(%rcx), %eax
    0000101a: 	xorl	%edx, %edx
    0000101c: 	addq	$0x4, %rcx
    00001020: 	divl	%ebp
    00001022: 	addl	%eax, %esi
    00001024: 	cmpq	%rcx, %r15
    00001027: 	jne	.Ltmp3320 # Offset: 4135
    00001029: 	cvttsd2si	init_value(%rip), %rax
    00001032: 	xorl	%edx, %edx
    00001034: 	divl	%ebp
    00001036: 	imull	$0x1f40, %eax, %eax
    0000103c: 	cmpl	%eax, %esi
    0000103e: 	je	.Ltmp3321 # Offset: 4158
    00001040: 	movl	current_test(%rip), %edx
    00001046: 	movq	%r12, %rsi
    00001049: 	movl	$0x1, %edi
    0000104e: 	xorl	%eax, %eax
    00001050: 	callq	__printf_chk@PLT # Offset: 4176
    00001055: 	movl	iterations(%rip), %edi
.Ltmp3321:
    0000105b: 	addl	$0x1, %ebx
    0000105e: 	cmpl	%edi, %ebx
    00001060: 	jl	.Ltmp3322 # Offset: 4192
.Ltmp3319:
    00001062: 	movq	0x28(%rsp), %rsi
    00001067: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000106e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4206
    00001073: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000107a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001081: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001088: 	je	.Ltmp3323 # Offset: 4232
.Ltmp3453:
    0000108e: 	movq	-0x20(%rax), %r12
    00001092: 	callq	clock@PLT # Offset: 4242
    00001097: 	pxor	%xmm0, %xmm0
    0000109b: 	movq	%rax, end_time(%rip)
    000010a2: 	movq	%r12, %rdi
    000010a5: 	subq	start_time(%rip), %rax
    000010ac: 	cvtsi2sd	%rax, %xmm0
    000010b1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000010b9: 	callq	_Z13record_resultdPKc # Offset: 4281
    000010be: 	movq	0x120(%rsp), %rdi
    000010c6: 	cmpq	0x30(%rsp), %rdi
    000010cb: 	je	.Ltmp3324 # Offset: 4299
    000010cd: 	movq	0x130(%rsp), %rax
    000010d5: 	leaq	0x1(%rax), %rsi
    000010d9: 	callq	_ZdlPvm@PLT # Offset: 4313
.Ltmp3324:
    000010de: 	movq	0x20(%rsp), %rsi
    000010e3: 	movq	0x28(%rsp), %rdi
    000010e8: 	leaq	DATAat0x3d358(%rip), %rdx
    000010ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4335
    000010f4: 	callq	clock@PLT # Offset: 4340
    000010f9: 	movl	iterations(%rip), %edi
    000010ff: 	xorl	%ebx, %ebx
    00001101: 	leaq	DATAat0x3d1d8(%rip), %r12
    00001108: 	movq	%rax, start_time(%rip)
    0000110f: 	testl	%edi, %edi
    00001111: 	jle	.Ltmp3325 # Offset: 4369
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3328:
    00001120: 	movl	0x18(%rsp), %r8d
    00001125: 	movl	0x1c(%rsp), %r9d
    0000112a: 	movq	%r13, %rcx
    0000112d: 	xorl	%esi, %esi
    0000112f: 	nop # Size: 1
.Ltmp3326:
    00001130: 	movl	(%rcx), %eax
    00001132: 	xorl	%edx, %edx
    00001134: 	addq	$0x4, %rcx
    00001138: 	divl	%ebp
    0000113a: 	xorl	%edx, %edx
    0000113c: 	divl	%r8d
    0000113f: 	xorl	%edx, %edx
    00001141: 	divl	%r14d
    00001144: 	xorl	%edx, %edx
    00001146: 	divl	%r9d
    00001149: 	addl	%eax, %esi
    0000114b: 	cmpq	%r15, %rcx
    0000114e: 	jne	.Ltmp3326 # Offset: 4430
    00001150: 	cvttsd2si	init_value(%rip), %rax
    00001159: 	xorl	%edx, %edx
    0000115b: 	divl	%ebp
    0000115d: 	xorl	%edx, %edx
    0000115f: 	divl	0x18(%rsp)
    00001163: 	xorl	%edx, %edx
    00001165: 	divl	%r14d
    00001168: 	xorl	%edx, %edx
    0000116a: 	divl	0x1c(%rsp)
    0000116e: 	imull	$0x1f40, %eax, %eax
    00001174: 	cmpl	%eax, %esi
    00001176: 	je	.Ltmp3327 # Offset: 4470
    00001178: 	movl	current_test(%rip), %edx
    0000117e: 	movq	%r12, %rsi
    00001181: 	movl	$0x1, %edi
    00001186: 	xorl	%eax, %eax
    00001188: 	callq	__printf_chk@PLT # Offset: 4488
    0000118d: 	movl	iterations(%rip), %edi
.Ltmp3327:
    00001193: 	addl	$0x1, %ebx
    00001196: 	cmpl	%edi, %ebx
    00001198: 	jl	.Ltmp3328 # Offset: 4504
.Ltmp3325:
    0000119e: 	movq	0x28(%rsp), %rsi
    000011a3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011aa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4522
    000011af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011b6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011c4: 	je	.Ltmp3329 # Offset: 4548
.Ltmp3452:
    000011ca: 	movq	-0x20(%rax), %r12
    000011ce: 	callq	clock@PLT # Offset: 4558
    000011d3: 	pxor	%xmm0, %xmm0
    000011d7: 	movq	%rax, end_time(%rip)
    000011de: 	movq	%r12, %rdi
    000011e1: 	subq	start_time(%rip), %rax
    000011e8: 	cvtsi2sd	%rax, %xmm0
    000011ed: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000011f5: 	callq	_Z13record_resultdPKc # Offset: 4597
    000011fa: 	movq	0x120(%rsp), %rdi
    00001202: 	cmpq	0x30(%rsp), %rdi
    00001207: 	je	.Ltmp3330 # Offset: 4615
    00001209: 	movq	0x130(%rsp), %rax
    00001211: 	leaq	0x1(%rax), %rsi
    00001215: 	callq	_ZdlPvm@PLT # Offset: 4629
.Ltmp3330:
    0000121a: 	movq	0x20(%rsp), %rsi
    0000121f: 	movq	0x28(%rsp), %rdi
    00001224: 	leaq	DATAat0x3d373(%rip), %rdx
    0000122b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4651
    00001230: 	callq	clock@PLT # Offset: 4656
    00001235: 	movl	iterations(%rip), %ecx
    0000123b: 	movq	%rax, start_time(%rip)
    00001242: 	testl	%ecx, %ecx
    00001244: 	jle	.Ltmp3331 # Offset: 4676
    0000124a: 	movl	%ebp, %eax
    0000124c: 	xorl	%edx, %edx
    0000124e: 	xorl	%ebx, %ebx
    00001250: 	divl	0x18(%rsp)
    00001254: 	xorl	%edx, %edx
    00001256: 	divl	%r14d
    00001259: 	xorl	%edx, %edx
    0000125b: 	divl	0x1c(%rsp)
    0000125f: 	movd	%eax, %xmm7
    00001263: 	movl	%eax, %r12d
    00001266: 	pshufd	$0x0, %xmm7, %xmm7
    0000126b: 	movaps	%xmm7, (%rsp)
    0000126f: 	nop # Size: 1
.Ltmp3334:
    00001270: 	movq	%r13, %rax
    00001273: 	pxor	%xmm0, %xmm0
    00001277: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3332:
    00001280: 	movdqa	(%rsp), %xmm1
    00001285: 	paddd	(%rax), %xmm1
    00001289: 	addq	$0x10, %rax
    0000128d: 	paddd	%xmm1, %xmm0
    00001291: 	cmpq	%rax, %r15
    00001294: 	jne	.Ltmp3332 # Offset: 4756
    00001296: 	cvttsd2si	init_value(%rip), %rdx
    0000129f: 	movdqa	%xmm0, %xmm1
    000012a3: 	psrldq	$0x8, %xmm1
    000012a8: 	paddd	%xmm1, %xmm0
    000012ac: 	movdqa	%xmm0, %xmm1
    000012b0: 	addl	%r12d, %edx
    000012b3: 	psrldq	$0x4, %xmm1
    000012b8: 	imull	$0x1f40, %edx, %edx
    000012be: 	paddd	%xmm1, %xmm0
    000012c2: 	movd	%xmm0, %eax
    000012c6: 	cmpl	%eax, %edx
    000012c8: 	je	.Ltmp3333 # Offset: 4808
    000012ca: 	movl	current_test(%rip), %edx
    000012d0: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000012d7: 	movl	$0x1, %edi
    000012dc: 	xorl	%eax, %eax
    000012de: 	callq	__printf_chk@PLT # Offset: 4830
    000012e3: 	movl	iterations(%rip), %ecx
.Ltmp3333:
    000012e9: 	addl	$0x1, %ebx
    000012ec: 	cmpl	%ecx, %ebx
    000012ee: 	jl	.Ltmp3334 # Offset: 4846
.Ltmp3331:
    000012f0: 	movq	0x28(%rsp), %rsi
    000012f5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4860
    00001301: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001308: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000130f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001316: 	je	.Ltmp3335 # Offset: 4886
.Ltmp3451:
    0000131c: 	movq	-0x20(%rax), %r12
    00001320: 	callq	clock@PLT # Offset: 4896
    00001325: 	pxor	%xmm0, %xmm0
    00001329: 	movq	%rax, end_time(%rip)
    00001330: 	movq	%r12, %rdi
    00001333: 	subq	start_time(%rip), %rax
    0000133a: 	cvtsi2sd	%rax, %xmm0
    0000133f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001347: 	callq	_Z13record_resultdPKc # Offset: 4935
    0000134c: 	movq	0x120(%rsp), %rdi
    00001354: 	cmpq	0x30(%rsp), %rdi
    00001359: 	je	.Ltmp3336 # Offset: 4953
    0000135b: 	movq	0x130(%rsp), %rax
    00001363: 	leaq	0x1(%rax), %rsi
    00001367: 	callq	_ZdlPvm@PLT # Offset: 4967
.Ltmp3336:
    0000136c: 	movq	0x20(%rsp), %rsi
    00001371: 	movq	0x28(%rsp), %rdi
    00001376: 	leaq	DATAat0x3d38f(%rip), %rdx
    0000137d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4989
    00001382: 	callq	clock@PLT # Offset: 4994
    00001387: 	movl	iterations(%rip), %ecx
    0000138d: 	movq	%rax, start_time(%rip)
    00001394: 	testl	%ecx, %ecx
    00001396: 	jle	.Ltmp3337 # Offset: 5014
    0000139c: 	movl	0x18(%rsp), %eax
    000013a0: 	xorl	%edx, %edx
    000013a2: 	movl	0x38(%rsp), %r12d
    000013a7: 	xorl	%ebx, %ebx
    000013a9: 	imull	%r14d, %eax
    000013ad: 	divl	0x1c(%rsp)
    000013b1: 	subl	%eax, %r12d
    000013b4: 	movd	%r12d, %xmm7
    000013b9: 	pshufd	$0x0, %xmm7, %xmm7
    000013be: 	movaps	%xmm7, (%rsp)
    000013c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3340:
    000013c8: 	movq	%r13, %rax
    000013cb: 	pxor	%xmm0, %xmm0
    000013cf: 	nop # Size: 1
.Ltmp3338:
    000013d0: 	movdqa	(%rsp), %xmm1
    000013d5: 	paddd	(%rax), %xmm1
    000013d9: 	addq	$0x10, %rax
    000013dd: 	paddd	%xmm1, %xmm0
    000013e1: 	cmpq	%r15, %rax
    000013e4: 	jne	.Ltmp3338 # Offset: 5092
    000013e6: 	cvttsd2si	init_value(%rip), %rdx
    000013ef: 	movdqa	%xmm0, %xmm1
    000013f3: 	psrldq	$0x8, %xmm1
    000013f8: 	paddd	%xmm1, %xmm0
    000013fc: 	movdqa	%xmm0, %xmm1
    00001400: 	addl	%r12d, %edx
    00001403: 	psrldq	$0x4, %xmm1
    00001408: 	imull	$0x1f40, %edx, %edx
    0000140e: 	paddd	%xmm1, %xmm0
    00001412: 	movd	%xmm0, %eax
    00001416: 	cmpl	%eax, %edx
    00001418: 	je	.Ltmp3339 # Offset: 5144
    0000141a: 	movl	current_test(%rip), %edx
    00001420: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001427: 	movl	$0x1, %edi
    0000142c: 	xorl	%eax, %eax
    0000142e: 	callq	__printf_chk@PLT # Offset: 5166
    00001433: 	movl	iterations(%rip), %ecx
.Ltmp3339:
    00001439: 	addl	$0x1, %ebx
    0000143c: 	cmpl	%ecx, %ebx
    0000143e: 	jl	.Ltmp3340 # Offset: 5182
.Ltmp3337:
    00001440: 	movq	0x28(%rsp), %rsi
    00001445: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000144c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5196
    00001451: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001458: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000145f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001466: 	je	.Ltmp3341 # Offset: 5222
.Ltmp3450:
    0000146c: 	movq	-0x20(%rax), %r12
    00001470: 	callq	clock@PLT # Offset: 5232
    00001475: 	pxor	%xmm0, %xmm0
    00001479: 	movq	%rax, end_time(%rip)
    00001480: 	movq	%r12, %rdi
    00001483: 	subq	start_time(%rip), %rax
    0000148a: 	cvtsi2sd	%rax, %xmm0
    0000148f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001497: 	callq	_Z13record_resultdPKc # Offset: 5271
    0000149c: 	movq	0x120(%rsp), %rdi
    000014a4: 	cmpq	0x30(%rsp), %rdi
    000014a9: 	je	.Ltmp3342 # Offset: 5289
    000014ab: 	movq	0x130(%rsp), %rax
    000014b3: 	leaq	0x1(%rax), %rsi
    000014b7: 	callq	_ZdlPvm@PLT # Offset: 5303
.Ltmp3342:
    000014bc: 	movq	0x20(%rsp), %rsi
    000014c1: 	movq	0x28(%rsp), %rdi
    000014c6: 	leaq	DATAat0x3d3a8(%rip), %rdx
    000014cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5325
    000014d2: 	callq	clock@PLT # Offset: 5330
    000014d7: 	movl	iterations(%rip), %ecx
    000014dd: 	movq	%rax, start_time(%rip)
    000014e4: 	testl	%ecx, %ecx
    000014e6: 	jle	.Ltmp3343 # Offset: 5350
    000014ec: 	movl	0x18(%rsp), %eax
    000014f0: 	xorl	%edx, %edx
    000014f2: 	xorl	%ebx, %ebx
    000014f4: 	imull	%r14d, %eax
    000014f8: 	divl	0x1c(%rsp)
    000014fc: 	movl	%eax, %r12d
    000014ff: 	movl	0x38(%rsp), %eax
    00001503: 	subl	%r12d, %eax
    00001506: 	movd	%eax, %xmm7
    0000150a: 	pshufd	$0x0, %xmm7, %xmm7
    0000150f: 	movaps	%xmm7, (%rsp)
    00001513: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3346:
    00001518: 	movq	%r13, %rax
    0000151b: 	pxor	%xmm0, %xmm0
    0000151f: 	nop # Size: 1
.Ltmp3344:
    00001520: 	movdqa	(%rsp), %xmm1
    00001525: 	paddd	(%rax), %xmm1
    00001529: 	addq	$0x10, %rax
    0000152d: 	paddd	%xmm1, %xmm0
    00001531: 	cmpq	%rax, %r15
    00001534: 	jne	.Ltmp3344 # Offset: 5428
    00001536: 	cvttsd2si	init_value(%rip), %rdx
    0000153f: 	movdqa	%xmm0, %xmm1
    00001543: 	psrldq	$0x8, %xmm1
    00001548: 	paddd	%xmm1, %xmm0
    0000154c: 	movdqa	%xmm0, %xmm1
    00001550: 	addl	%ebp, %edx
    00001552: 	psrldq	$0x4, %xmm1
    00001557: 	subl	%r12d, %edx
    0000155a: 	paddd	%xmm1, %xmm0
    0000155e: 	imull	$0x1f40, %edx, %edx
    00001564: 	movd	%xmm0, %eax
    00001568: 	cmpl	%eax, %edx
    0000156a: 	je	.Ltmp3345 # Offset: 5482
    0000156c: 	movl	current_test(%rip), %edx
    00001572: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001579: 	movl	$0x1, %edi
    0000157e: 	xorl	%eax, %eax
    00001580: 	callq	__printf_chk@PLT # Offset: 5504
    00001585: 	movl	iterations(%rip), %ecx
.Ltmp3345:
    0000158b: 	addl	$0x1, %ebx
    0000158e: 	cmpl	%ecx, %ebx
    00001590: 	jl	.Ltmp3346 # Offset: 5520
.Ltmp3343:
    00001596: 	movq	0x28(%rsp), %rsi
    0000159b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5538
    000015a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015bc: 	je	.Ltmp3347 # Offset: 5564
.Ltmp3449:
    000015c2: 	movq	-0x20(%rax), %r12
    000015c6: 	callq	clock@PLT # Offset: 5574
    000015cb: 	pxor	%xmm0, %xmm0
    000015cf: 	movq	%rax, end_time(%rip)
    000015d6: 	movq	%r12, %rdi
    000015d9: 	subq	start_time(%rip), %rax
    000015e0: 	cvtsi2sd	%rax, %xmm0
    000015e5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000015ed: 	callq	_Z13record_resultdPKc # Offset: 5613
    000015f2: 	movq	0x120(%rsp), %rdi
    000015fa: 	cmpq	0x30(%rsp), %rdi
    000015ff: 	je	.Ltmp3348 # Offset: 5631
    00001601: 	movq	0x130(%rsp), %rax
    00001609: 	leaq	0x1(%rax), %rsi
    0000160d: 	callq	_ZdlPvm@PLT # Offset: 5645
.Ltmp3348:
    00001612: 	movl	0x1c(%rsp), %r8d
    00001617: 	movl	0x18(%rsp), %edx
    0000161b: 	movl	%r14d, %ecx
    0000161e: 	movl	%ebp, %esi
    00001620: 	movq	%r13, %rdi
    00001623: 	callq	_Z20TestLoopsIntegerOnlyIjENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 5667
    00001628: 	movq	0x20(%rsp), %rsi
    0000162d: 	leaq	0xc0(%rsp), %rdi
    00001635: 	leaq	DATAat0x3d3c2(%rip), %rdx
    0000163c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5692
    00001641: 	movl	iterations(%rip), %edx
    00001647: 	xorl	%r8d, %r8d
    0000164a: 	xorl	%ecx, %ecx
    0000164c: 	movl	$0x1f40, %esi
    00001651: 	movq	0xc0(%rsp), %rdi
    00001659: 	callq	_Z9summarizePKciiii # Offset: 5721
    0000165e: 	movsd	init_value(%rip), %xmm1
    00001666: 	cvttsd2si	%xmm1, %rax
    0000166b: 	movq	%rax, %xmm0
    00001670: 	movq	%r13, %rax
    00001673: 	pshufd	$0xe0, %xmm0, %xmm2
    00001678: 	pshufd	$0x0, %xmm0, %xmm0
    0000167d: 	nopl	(%rax) # Size: 3
.Ltmp3349:
    00001680: 	movaps	%xmm0, (%rax)
    00001683: 	addq	$0x10, %rax
    00001687: 	cmpq	%r15, %rax
    0000168a: 	jne	.Ltmp3349 # Offset: 5770
    0000168c: 	addsd	DATAat0x3d700(%rip), %xmm1
    00001694: 	leaq	0x100(%rsp), %rbp
    0000169c: 	movq	0x20(%rsp), %rsi
    000016a1: 	movq	%xmm2, 0x60(%rsp)
    000016a7: 	movq	%rbp, %rdi
    000016aa: 	movq	%xmm2, 0x78(%rsp)
    000016b0: 	movq	%xmm2, 0x8c(%rsp)
    000016b9: 	cvttsd2si	%xmm1, %eax
    000016bd: 	movslq	%eax, %rdx
    000016c0: 	imulq	$0x51eb851f, %rdx, %rdx
    000016c7: 	sarq	$0x24, %rdx
    000016cb: 	movq	%rdx, %rcx
    000016ce: 	cltd
    000016cf: 	subl	%edx, %ecx
    000016d1: 	imull	$0x32, %ecx, %edx
    000016d4: 	subl	%edx, %eax
    000016d6: 	leaq	DATAat0x3d3d2(%rip), %rdx
    000016dd: 	movl	%eax, (%rsp)
    000016e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5856
    000016e5: 	callq	clock@PLT # Offset: 5861
    000016ea: 	movl	iterations(%rip), %ecx
    000016f0: 	movq	%rax, start_time(%rip)
    000016f7: 	testl	%ecx, %ecx
    000016f9: 	jle	.Ltmp3350 # Offset: 5881
    000016ff: 	movslq	(%rsp), %rax
    00001703: 	movq	0x28(%rsp), %rdi
    00001708: 	xorl	%ebx, %ebx
    0000170a: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001711: 	leaq	(%rdi,%rax,4), %r12
    00001715: 	nopl	(%rax) # Size: 3
.Ltmp3353:
    00001718: 	cvttsd2si	init_value(%rip), %rdx
    00001721: 	movq	%r13, %rax
    00001724: 	pxor	%xmm0, %xmm0
    00001728: 	imull	$0x1f40, %edx, %edx
    0000172e: 	nop # Size: 2
.Ltmp3351:
    00001730: 	paddd	(%rax), %xmm0
    00001734: 	addq	$0x10, %rax
    00001738: 	cmpq	%rax, %r15
    0000173b: 	jne	.Ltmp3351 # Offset: 5947
    0000173d: 	movdqa	%xmm0, %xmm1
    00001741: 	psrldq	$0x8, %xmm1
    00001746: 	paddd	%xmm1, %xmm0
    0000174a: 	movdqa	%xmm0, %xmm1
    0000174e: 	psrldq	$0x4, %xmm1
    00001753: 	paddd	%xmm1, %xmm0
    00001757: 	movd	%xmm0, %eax
    0000175b: 	movd	%xmm0, (%r12)
    00001761: 	cmpl	%eax, %edx
    00001763: 	je	.Ltmp3352 # Offset: 5987
    00001765: 	movq	0x100(%rsp), %rdx
    0000176d: 	movq	%r14, %rsi
    00001770: 	movl	$0x1, %edi
    00001775: 	xorl	%eax, %eax
    00001777: 	callq	__printf_chk@PLT # Offset: 6007
    0000177c: 	movl	iterations(%rip), %ecx
.Ltmp3352:
    00001782: 	addl	$0x1, %ebx
    00001785: 	cmpl	%ecx, %ebx
    00001787: 	jl	.Ltmp3353 # Offset: 6023
.Ltmp3350:
    00001789: 	movq	%rbp, %rsi
    0000178c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001793: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6035
    00001798: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000179f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ad: 	je	.Ltmp3354 # Offset: 6061
.Ltmp3448:
    000017b3: 	movq	-0x20(%rax), %r12
    000017b7: 	callq	clock@PLT # Offset: 6071
    000017bc: 	pxor	%xmm0, %xmm0
    000017c0: 	movq	%rax, end_time(%rip)
    000017c7: 	movq	%r12, %rdi
    000017ca: 	subq	start_time(%rip), %rax
    000017d1: 	cvtsi2sd	%rax, %xmm0
    000017d6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000017de: 	callq	_Z13record_resultdPKc # Offset: 6110
    000017e3: 	movq	0x100(%rsp), %rdi
    000017eb: 	leaq	0x110(%rsp), %rbx
    000017f3: 	cmpq	%rbx, %rdi
    000017f6: 	je	.Ltmp3355 # Offset: 6134
    000017f8: 	movq	0x110(%rsp), %rax
    00001800: 	leaq	0x1(%rax), %rsi
    00001804: 	callq	_ZdlPvm@PLT # Offset: 6148
.Ltmp3355:
    00001809: 	movq	0x20(%rsp), %rsi
    0000180e: 	leaq	DATAat0x3d3eb(%rip), %rdx
    00001815: 	movq	%rbp, %rdi
    00001818: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6168
    0000181d: 	callq	clock@PLT # Offset: 6173
    00001822: 	movl	iterations(%rip), %ecx
    00001828: 	movq	%rax, start_time(%rip)
    0000182f: 	testl	%ecx, %ecx
    00001831: 	jle	.Ltmp3356 # Offset: 6193
    00001837: 	movslq	(%rsp), %rax
    0000183b: 	movq	0x28(%rsp), %rdi
    00001840: 	xorl	%r12d, %r12d
    00001843: 	leaq	(%rdi,%rax,4), %r14
    00001847: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3359:
    00001850: 	cvttsd2si	init_value(%rip), %rdx
    00001859: 	movq	%r13, %rax
    0000185c: 	pxor	%xmm0, %xmm0
    00001860: 	imull	$0x1f40, %edx, %edx
    00001866: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3357:
    00001870: 	paddd	(%rax), %xmm0
    00001874: 	addq	$0x10, %rax
    00001878: 	cmpq	%r15, %rax
    0000187b: 	jne	.Ltmp3357 # Offset: 6267
    0000187d: 	movdqa	%xmm0, %xmm1
    00001881: 	psrldq	$0x8, %xmm1
    00001886: 	paddd	%xmm1, %xmm0
    0000188a: 	movdqa	%xmm0, %xmm1
    0000188e: 	psrldq	$0x4, %xmm1
    00001893: 	paddd	%xmm1, %xmm0
    00001897: 	movd	%xmm0, %eax
    0000189b: 	movd	%xmm0, (%r14)
    000018a0: 	cmpl	%eax, %edx
    000018a2: 	je	.Ltmp3358 # Offset: 6306
    000018a4: 	movq	0x100(%rsp), %rdx
    000018ac: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000018b3: 	movl	$0x1, %edi
    000018b8: 	xorl	%eax, %eax
    000018ba: 	callq	__printf_chk@PLT # Offset: 6330
    000018bf: 	movl	iterations(%rip), %ecx
.Ltmp3358:
    000018c5: 	addl	$0x1, %r12d
    000018c9: 	cmpl	%ecx, %r12d
    000018cc: 	jl	.Ltmp3359 # Offset: 6348
.Ltmp3356:
    000018ce: 	movq	%rbp, %rsi
    000018d1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018d8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6360
    000018dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018f2: 	je	.Ltmp3360 # Offset: 6386
.Ltmp3447:
    000018f8: 	movq	-0x20(%rax), %r12
    000018fc: 	callq	clock@PLT # Offset: 6396
    00001901: 	pxor	%xmm0, %xmm0
    00001905: 	movq	%rax, end_time(%rip)
    0000190c: 	movq	%r12, %rdi
    0000190f: 	subq	start_time(%rip), %rax
    00001916: 	cvtsi2sd	%rax, %xmm0
    0000191b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001923: 	callq	_Z13record_resultdPKc # Offset: 6435
    00001928: 	movq	0x100(%rsp), %rdi
    00001930: 	cmpq	%rbx, %rdi
    00001933: 	je	.Ltmp3361 # Offset: 6451
    00001935: 	movq	0x110(%rsp), %rax
    0000193d: 	leaq	0x1(%rax), %rsi
    00001941: 	callq	_ZdlPvm@PLT # Offset: 6465
.Ltmp3361:
    00001946: 	movq	0x20(%rsp), %rsi
    0000194b: 	leaq	DATAat0x3d400(%rip), %rdx
    00001952: 	movq	%rbp, %rdi
    00001955: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6485
    0000195a: 	callq	clock@PLT # Offset: 6490
    0000195f: 	movl	iterations(%rip), %ecx
    00001965: 	xorl	%r12d, %r12d
    00001968: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000196f: 	movq	%rax, start_time(%rip)
    00001976: 	testl	%ecx, %ecx
    00001978: 	jle	.Ltmp3362 # Offset: 6520
    0000197e: 	nop # Size: 2
.Ltmp3365:
    00001980: 	cvttsd2si	init_value(%rip), %rdx
    00001989: 	movq	%r13, %rax
    0000198c: 	pxor	%xmm0, %xmm0
    00001990: 	imull	$0x1f40, %edx, %edx
    00001996: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3363:
    000019a0: 	paddd	(%rax), %xmm0
    000019a4: 	addq	$0x10, %rax
    000019a8: 	cmpq	%r15, %rax
    000019ab: 	jne	.Ltmp3363 # Offset: 6571
    000019ad: 	movdqa	%xmm0, %xmm1
    000019b1: 	psrldq	$0x8, %xmm1
    000019b6: 	paddd	%xmm1, %xmm0
    000019ba: 	movdqa	%xmm0, %xmm1
    000019be: 	psrldq	$0x4, %xmm1
    000019c3: 	paddd	%xmm1, %xmm0
    000019c7: 	movd	%xmm0, %eax
    000019cb: 	movd	%xmm0, 0x78(%rsp)
    000019d1: 	cmpl	%eax, %edx
    000019d3: 	je	.Ltmp3364 # Offset: 6611
    000019d5: 	movq	0x100(%rsp), %rdx
    000019dd: 	movq	%r14, %rsi
    000019e0: 	movl	$0x1, %edi
    000019e5: 	xorl	%eax, %eax
    000019e7: 	callq	__printf_chk@PLT # Offset: 6631
    000019ec: 	movl	iterations(%rip), %ecx
.Ltmp3364:
    000019f2: 	addl	$0x1, %r12d
    000019f6: 	cmpl	%ecx, %r12d
    000019f9: 	jl	.Ltmp3365 # Offset: 6649
.Ltmp3362:
    000019fb: 	movq	%rbp, %rsi
    000019fe: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a05: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6661
    00001a0a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a11: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a18: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a1f: 	je	.Ltmp3366 # Offset: 6687
.Ltmp3446:
    00001a25: 	movq	-0x20(%rax), %r12
    00001a29: 	callq	clock@PLT # Offset: 6697
    00001a2e: 	pxor	%xmm0, %xmm0
    00001a32: 	movq	%rax, end_time(%rip)
    00001a39: 	movq	%r12, %rdi
    00001a3c: 	subq	start_time(%rip), %rax
    00001a43: 	cvtsi2sd	%rax, %xmm0
    00001a48: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001a50: 	callq	_Z13record_resultdPKc # Offset: 6736
    00001a55: 	movq	0x100(%rsp), %rdi
    00001a5d: 	cmpq	%rbx, %rdi
    00001a60: 	je	.Ltmp3367 # Offset: 6752
    00001a62: 	movq	0x110(%rsp), %rax
    00001a6a: 	leaq	0x1(%rax), %rsi
    00001a6e: 	callq	_ZdlPvm@PLT # Offset: 6766
.Ltmp3367:
    00001a73: 	movq	0x20(%rsp), %rsi
    00001a78: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001a7f: 	movq	%rbp, %rdi
    00001a82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6786
    00001a87: 	callq	clock@PLT # Offset: 6791
    00001a8c: 	movl	iterations(%rip), %ecx
    00001a92: 	xorl	%r12d, %r12d
    00001a95: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001a9c: 	movq	%rax, start_time(%rip)
    00001aa3: 	testl	%ecx, %ecx
    00001aa5: 	jle	.Ltmp3368 # Offset: 6821
    00001aab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3371:
    00001ab0: 	cvttsd2si	init_value(%rip), %rdx
    00001ab9: 	movq	%r13, %rax
    00001abc: 	pxor	%xmm0, %xmm0
    00001ac0: 	imull	$0x1f40, %edx, %edx
    00001ac6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3369:
    00001ad0: 	paddd	(%rax), %xmm0
    00001ad4: 	addq	$0x10, %rax
    00001ad8: 	cmpq	%rax, %r15
    00001adb: 	jne	.Ltmp3369 # Offset: 6875
    00001add: 	movdqa	%xmm0, %xmm1
    00001ae1: 	psrldq	$0x8, %xmm1
    00001ae6: 	paddd	%xmm1, %xmm0
    00001aea: 	movdqa	%xmm0, %xmm1
    00001aee: 	psrldq	$0x4, %xmm1
    00001af3: 	paddd	%xmm1, %xmm0
    00001af7: 	movd	%xmm0, %eax
    00001afb: 	movd	%xmm0, 0x78(%rsp)
    00001b01: 	cmpl	%eax, %edx
    00001b03: 	je	.Ltmp3370 # Offset: 6915
    00001b05: 	movq	0x100(%rsp), %rdx
    00001b0d: 	movq	%r14, %rsi
    00001b10: 	movl	$0x1, %edi
    00001b15: 	xorl	%eax, %eax
    00001b17: 	callq	__printf_chk@PLT # Offset: 6935
    00001b1c: 	movl	iterations(%rip), %ecx
.Ltmp3370:
    00001b22: 	addl	$0x1, %r12d
    00001b26: 	cmpl	%ecx, %r12d
    00001b29: 	jl	.Ltmp3371 # Offset: 6953
.Ltmp3368:
    00001b2b: 	movq	%rbp, %rsi
    00001b2e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b35: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6965
    00001b3a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b41: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b48: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b4f: 	je	.Ltmp3372 # Offset: 6991
.Ltmp3445:
    00001b55: 	movq	-0x20(%rax), %r12
    00001b59: 	callq	clock@PLT # Offset: 7001
    00001b5e: 	pxor	%xmm0, %xmm0
    00001b62: 	movq	%rax, end_time(%rip)
    00001b69: 	movq	%r12, %rdi
    00001b6c: 	subq	start_time(%rip), %rax
    00001b73: 	cvtsi2sd	%rax, %xmm0
    00001b78: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b80: 	callq	_Z13record_resultdPKc # Offset: 7040
    00001b85: 	movq	0x100(%rsp), %rdi
    00001b8d: 	cmpq	%rbx, %rdi
    00001b90: 	je	.Ltmp3373 # Offset: 7056
    00001b92: 	movq	0x110(%rsp), %rax
    00001b9a: 	leaq	0x1(%rax), %rsi
    00001b9e: 	callq	_ZdlPvm@PLT # Offset: 7070
.Ltmp3373:
    00001ba3: 	movq	0x20(%rsp), %rsi
    00001ba8: 	leaq	DATAat0x3d430(%rip), %rdx
    00001baf: 	movq	%rbp, %rdi
    00001bb2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7090
    00001bb7: 	movl	(%rsp), %edx
    00001bba: 	movq	%rbp, %rcx
    00001bbd: 	movl	$0x1f40, %esi
    00001bc2: 	movq	%r13, %rdi
    00001bc5: 	callq	_Z23test_array_const_in_optIjEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7109
    00001bca: 	movq	0x100(%rsp), %rdi
    00001bd2: 	cmpq	%rbx, %rdi
    00001bd5: 	je	.Ltmp3374 # Offset: 7125
    00001bd7: 	movq	0x110(%rsp), %rax
    00001bdf: 	leaq	0x1(%rax), %rsi
    00001be3: 	callq	_ZdlPvm@PLT # Offset: 7139
.Ltmp3374:
    00001be8: 	movq	0x20(%rsp), %rsi
    00001bed: 	leaq	DATAat0x3d448(%rip), %rdx
    00001bf4: 	movq	%rbp, %rdi
    00001bf7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7159
    00001bfc: 	callq	clock@PLT # Offset: 7164
    00001c01: 	movl	iterations(%rip), %r8d
    00001c08: 	movq	%rax, start_time(%rip)
    00001c0f: 	testl	%r8d, %r8d
    00001c12: 	jle	.Ltmp3375 # Offset: 7186
    00001c14: 	movslq	(%rsp), %rax
    00001c18: 	xorl	%r12d, %r12d
    00001c1b: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001c22: 	leaq	(%r13,%rax,4), %r14
    00001c27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3431:
    00001c30: 	cvttsd2si	init_value(%rip), %rax
    00001c39: 	imull	$0x1f40, (%r14), %edx
    00001c40: 	imull	$0x1f40, %eax, %eax
    00001c46: 	cmpl	%edx, %eax
    00001c48: 	jne	.Ltmp3376 # Offset: 7240
.Ltmp3375:
    00001c4e: 	movq	%rbp, %rsi
    00001c51: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c58: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7256
    00001c5d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c64: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c6b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c72: 	je	.Ltmp3377 # Offset: 7282
.Ltmp3444:
    00001c78: 	movq	-0x20(%rax), %r12
    00001c7c: 	callq	clock@PLT # Offset: 7292
    00001c81: 	pxor	%xmm0, %xmm0
    00001c85: 	movq	%rax, end_time(%rip)
    00001c8c: 	movq	%r12, %rdi
    00001c8f: 	subq	start_time(%rip), %rax
    00001c96: 	cvtsi2sd	%rax, %xmm0
    00001c9b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ca3: 	callq	_Z13record_resultdPKc # Offset: 7331
    00001ca8: 	movq	0x100(%rsp), %rdi
    00001cb0: 	cmpq	%rbx, %rdi
    00001cb3: 	je	.Ltmp3378 # Offset: 7347
    00001cb5: 	movq	0x110(%rsp), %rax
    00001cbd: 	leaq	0x1(%rax), %rsi
    00001cc1: 	callq	_ZdlPvm@PLT # Offset: 7361
.Ltmp3378:
    00001cc6: 	movq	0x20(%rsp), %rsi
    00001ccb: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001cd2: 	movq	%rbp, %rdi
    00001cd5: 	cvttsd2si	init_value(%rip), %r12
    00001cde: 	movl	%r12d, 0x78(%rsp)
    00001ce3: 	movl	%r12d, 0x60(%rsp)
    00001ce8: 	movl	%r12d, 0x90(%rsp)
    00001cf0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7408
    00001cf5: 	movq	0x48(%rsp), %rdi
    00001cfa: 	movq	%rbp, %rdx
    00001cfd: 	movl	$0x1f40, %esi
    00001d02: 	callq	_Z24test_struct_const_in_optIj13simple_structIjEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7426
    00001d07: 	movq	0x100(%rsp), %rdi
    00001d0f: 	cmpq	%rbx, %rdi
    00001d12: 	je	.Ltmp3379 # Offset: 7442
    00001d14: 	movq	0x110(%rsp), %rax
    00001d1c: 	leaq	0x1(%rax), %rsi
    00001d20: 	callq	_ZdlPvm@PLT # Offset: 7456
.Ltmp3379:
    00001d25: 	movq	0x20(%rsp), %rsi
    00001d2a: 	leaq	DATAat0x3d475(%rip), %rdx
    00001d31: 	movq	%rbp, %rdi
    00001d34: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7476
    00001d39: 	callq	clock@PLT # Offset: 7481
    00001d3e: 	movl	iterations(%rip), %edi
    00001d44: 	movq	%rax, start_time(%rip)
    00001d4b: 	testl	%edi, %edi
    00001d4d: 	jle	.Ltmp3380 # Offset: 7501
    00001d4f: 	imull	$0x1f40, %r12d, %r12d
    00001d56: 	xorl	%r14d, %r14d
    00001d59: 	leaq	DATAat0x3d1c8(%rip), %r15
.Ltmp3432:
    00001d60: 	cvttsd2si	init_value(%rip), %rax
    00001d69: 	imull	$0x1f40, %eax, %eax
    00001d6f: 	cmpl	%r12d, %eax
    00001d72: 	jne	.Ltmp3381 # Offset: 7538
.Ltmp3380:
    00001d78: 	movq	%rbp, %rsi
    00001d7b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d82: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7554
    00001d87: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d8e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d95: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d9c: 	je	.Ltmp3382 # Offset: 7580
.Ltmp3443:
    00001da2: 	movq	-0x20(%rax), %r12
    00001da6: 	callq	clock@PLT # Offset: 7590
    00001dab: 	pxor	%xmm0, %xmm0
    00001daf: 	movq	%rax, end_time(%rip)
    00001db6: 	movq	%r12, %rdi
    00001db9: 	subq	start_time(%rip), %rax
    00001dc0: 	cvtsi2sd	%rax, %xmm0
    00001dc5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001dcd: 	callq	_Z13record_resultdPKc # Offset: 7629
    00001dd2: 	movq	0x100(%rsp), %rdi
    00001dda: 	cmpq	%rbx, %rdi
    00001ddd: 	je	.Ltmp3383 # Offset: 7645
    00001ddf: 	movq	0x110(%rsp), %rax
    00001de7: 	leaq	0x1(%rax), %rsi
    00001deb: 	callq	_ZdlPvm@PLT # Offset: 7659
.Ltmp3383:
    00001df0: 	movq	0x20(%rsp), %rsi
    00001df5: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001dfc: 	movq	%rbp, %rdi
    00001dff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7679
    00001e04: 	callq	clock@PLT # Offset: 7684
    00001e09: 	movl	iterations(%rip), %esi
    00001e0f: 	movq	%rax, start_time(%rip)
    00001e16: 	testl	%esi, %esi
    00001e18: 	jle	.Ltmp3384 # Offset: 7704
    00001e1a: 	movslq	(%rsp), %rax
    00001e1e: 	movl	0x7eec(%rsp), %edx
    00001e25: 	movl	%edx, 0x120(%rsp,%rax,4)
.Ltmp3384:
    00001e2c: 	movq	%rbp, %rsi
    00001e2f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e36: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7734
    00001e3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e42: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e49: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e50: 	je	.Ltmp3385 # Offset: 7760
.Ltmp3442:
    00001e56: 	movq	-0x20(%rax), %r12
    00001e5a: 	callq	clock@PLT # Offset: 7770
    00001e5f: 	pxor	%xmm0, %xmm0
    00001e63: 	movq	%rax, end_time(%rip)
    00001e6a: 	movq	%r12, %rdi
    00001e6d: 	subq	start_time(%rip), %rax
    00001e74: 	cvtsi2sd	%rax, %xmm0
    00001e79: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e81: 	callq	_Z13record_resultdPKc # Offset: 7809
    00001e86: 	movq	0x100(%rsp), %rdi
    00001e8e: 	cmpq	%rbx, %rdi
    00001e91: 	je	.Ltmp3386 # Offset: 7825
    00001e93: 	movq	0x110(%rsp), %rax
    00001e9b: 	leaq	0x1(%rax), %rsi
    00001e9f: 	callq	_ZdlPvm@PLT # Offset: 7839
.Ltmp3386:
    00001ea4: 	movq	0x20(%rsp), %rsi
    00001ea9: 	leaq	DATAat0x3d49d(%rip), %rdx
    00001eb0: 	movq	%rbp, %rdi
    00001eb3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7859
    00001eb8: 	callq	clock@PLT # Offset: 7864
    00001ebd: 	movl	iterations(%rip), %ecx
    00001ec3: 	movq	%rax, start_time(%rip)
    00001eca: 	testl	%ecx, %ecx
    00001ecc: 	jle	.Ltmp3387 # Offset: 7884
    00001ece: 	movslq	(%rsp), %r13
    00001ed2: 	movl	0x7eec(%rsp), %eax
    00001ed9: 	movl	%eax, 0x120(%rsp,%r13,4)
.Ltmp3387:
    00001ee1: 	movq	%rbp, %rsi
    00001ee4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001eeb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7915
    00001ef0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ef7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001efe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f05: 	je	.Ltmp3388 # Offset: 7941
.Ltmp3441:
    00001f0b: 	movq	-0x20(%rax), %r12
    00001f0f: 	callq	clock@PLT # Offset: 7951
    00001f14: 	pxor	%xmm0, %xmm0
    00001f18: 	movq	%rax, end_time(%rip)
    00001f1f: 	movq	%r12, %rdi
    00001f22: 	subq	start_time(%rip), %rax
    00001f29: 	cvtsi2sd	%rax, %xmm0
    00001f2e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f36: 	callq	_Z13record_resultdPKc # Offset: 7990
    00001f3b: 	movq	0x100(%rsp), %rdi
    00001f43: 	cmpq	%rbx, %rdi
    00001f46: 	je	.Ltmp3389 # Offset: 8006
    00001f48: 	movq	0x110(%rsp), %rax
    00001f50: 	leaq	0x1(%rax), %rsi
    00001f54: 	callq	_ZdlPvm@PLT # Offset: 8020
.Ltmp3389:
    00001f59: 	movq	0x20(%rsp), %rsi
    00001f5e: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00001f65: 	movq	%rbp, %rdi
    00001f68: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8040
    00001f6d: 	callq	clock@PLT # Offset: 8045
    00001f72: 	movl	iterations(%rip), %edx
    00001f78: 	movq	%rax, start_time(%rip)
    00001f7f: 	testl	%edx, %edx
    00001f81: 	jle	.Ltmp3390 # Offset: 8065
    00001f83: 	movl	0x7eec(%rsp), %eax
    00001f8a: 	movl	%eax, 0x78(%rsp)
.Ltmp3390:
    00001f8e: 	movq	%rbp, %rsi
    00001f91: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f98: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8088
    00001f9d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fa4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fb2: 	je	.Ltmp3391 # Offset: 8114
.Ltmp3440:
    00001fb8: 	movq	-0x20(%rax), %r12
    00001fbc: 	callq	clock@PLT # Offset: 8124
    00001fc1: 	pxor	%xmm0, %xmm0
    00001fc5: 	movq	%rax, end_time(%rip)
    00001fcc: 	movq	%r12, %rdi
    00001fcf: 	subq	start_time(%rip), %rax
    00001fd6: 	cvtsi2sd	%rax, %xmm0
    00001fdb: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001fe3: 	callq	_Z13record_resultdPKc # Offset: 8163
    00001fe8: 	movq	0x100(%rsp), %rdi
    00001ff0: 	cmpq	%rbx, %rdi
    00001ff3: 	je	.Ltmp3392 # Offset: 8179
    00001ff5: 	movq	0x110(%rsp), %rax
    00001ffd: 	leaq	0x1(%rax), %rsi
    00002001: 	callq	_ZdlPvm@PLT # Offset: 8193
.Ltmp3392:
    00002006: 	movq	0x20(%rsp), %rsi
    0000200b: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002012: 	movq	%rbp, %rdi
    00002015: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8213
    0000201a: 	callq	clock@PLT # Offset: 8218
    0000201f: 	movq	%rax, start_time(%rip)
    00002026: 	movl	iterations(%rip), %eax
    0000202c: 	testl	%eax, %eax
    0000202e: 	jle	.Ltmp3393 # Offset: 8238
    00002030: 	movl	0x7eec(%rsp), %eax
    00002037: 	movl	%eax, 0x78(%rsp)
.Ltmp3393:
    0000203b: 	movq	%rbp, %rsi
    0000203e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002045: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8261
    0000204a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002051: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002058: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000205f: 	je	.Ltmp3394 # Offset: 8287
.Ltmp3439:
    00002065: 	movq	-0x20(%rax), %r12
    00002069: 	callq	clock@PLT # Offset: 8297
    0000206e: 	pxor	%xmm0, %xmm0
    00002072: 	movq	%rax, end_time(%rip)
    00002079: 	movq	%r12, %rdi
    0000207c: 	subq	start_time(%rip), %rax
    00002083: 	cvtsi2sd	%rax, %xmm0
    00002088: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002090: 	callq	_Z13record_resultdPKc # Offset: 8336
    00002095: 	movq	0x100(%rsp), %rdi
    0000209d: 	cmpq	%rbx, %rdi
    000020a0: 	je	.Ltmp3395 # Offset: 8352
    000020a2: 	movq	0x110(%rsp), %rax
    000020aa: 	leaq	0x1(%rax), %rsi
    000020ae: 	callq	_ZdlPvm@PLT # Offset: 8366
.Ltmp3395:
    000020b3: 	movq	0x20(%rsp), %r14
    000020b8: 	leaq	0xe0(%rsp), %rdi
    000020c0: 	leaq	DATAat0x3d4d0(%rip), %rdx
    000020c7: 	movq	%r14, %rsi
    000020ca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8394
    000020cf: 	movl	iterations(%rip), %edx
    000020d5: 	xorl	%r8d, %r8d
    000020d8: 	xorl	%ecx, %ecx
    000020da: 	movl	$0x1f40, %esi
    000020df: 	movq	0xe0(%rsp), %rdi
    000020e7: 	callq	_Z9summarizePKciiii # Offset: 8423
    000020ec: 	movsd	DATAat0x3d708(%rip), %xmm0
    000020f4: 	leaq	DATAat0x3d4e7(%rip), %rdx
    000020fb: 	movq	%r14, %rsi
    000020fe: 	movq	%rbp, %rdi
    00002101: 	addsd	init_value(%rip), %xmm0
    00002109: 	cvttsd2si	%xmm0, %r12
    0000210e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8462
    00002113: 	leaq	_Z10test_powerIjET_S0_(%rip), %r13
    0000211a: 	movq	%rbp, %rdx
    0000211d: 	movl	%r12d, %edi
    00002120: 	movq	%r13, %rsi
    00002123: 	callq	"_Z23test_const_function_optIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8483
    00002128: 	movq	0x100(%rsp), %rdi
    00002130: 	cmpq	%rbx, %rdi
    00002133: 	je	.Ltmp3396 # Offset: 8499
    00002135: 	movq	0x110(%rsp), %rax
    0000213d: 	leaq	0x1(%rax), %rsi
    00002141: 	callq	_ZdlPvm@PLT # Offset: 8513
.Ltmp3396:
    00002146: 	movq	0x20(%rsp), %rsi
    0000214b: 	leaq	DATAat0x3d501(%rip), %rdx
    00002152: 	movq	%rbp, %rdi
    00002155: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8533
    0000215a: 	movq	%rbp, %rcx
    0000215d: 	movq	%r13, %rdx
    00002160: 	movl	%r12d, %esi
    00002163: 	movl	$0x1f40, %edi
    00002168: 	callq	"_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8552
    0000216d: 	movq	0x100(%rsp), %rdi
    00002175: 	cmpq	%rbx, %rdi
    00002178: 	je	.Ltmp3397 # Offset: 8568
    0000217a: 	movq	0x110(%rsp), %rax
    00002182: 	leaq	0x1(%rax), %rsi
    00002186: 	callq	_ZdlPvm@PLT # Offset: 8582
.Ltmp3397:
    0000218b: 	movq	0x20(%rsp), %rsi
    00002190: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002197: 	movq	%rbp, %rdi
    0000219a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8602
    0000219f: 	movq	%rbp, %rcx
    000021a2: 	movq	%r13, %rdx
    000021a5: 	movl	%r12d, %esi
    000021a8: 	movl	$0x1f40, %edi
    000021ad: 	callq	"_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8621
    000021b2: 	movq	0x100(%rsp), %rdi
    000021ba: 	cmpq	%rbx, %rdi
    000021bd: 	je	.Ltmp3398 # Offset: 8637
    000021bf: 	movq	0x110(%rsp), %rax
    000021c7: 	leaq	0x1(%rax), %rsi
    000021cb: 	callq	_ZdlPvm@PLT # Offset: 8651
.Ltmp3398:
    000021d0: 	movq	0x20(%rsp), %rsi
    000021d5: 	leaq	DATAat0x3d535(%rip), %rdx
    000021dc: 	movq	%rbp, %rdi
    000021df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8671
    000021e4: 	callq	clock@PLT # Offset: 8676
    000021e9: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000021f0: 	movq	%rax, start_time(%rip)
    000021f7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000021fe: 	subq	$0x20, %rax
    00002202: 	cmpq	%rax, %r14
    00002205: 	je	.Ltmp3399 # Offset: 8709
    0000220b: 	leaq	0x10(%r14), %rdi
    0000220f: 	movq	0x108(%rsp), %r13
    00002217: 	movq	%rdi, (%r14)
    0000221a: 	movq	0x100(%rsp), %r15
    00002222: 	movq	%r15, %rax
    00002225: 	addq	%r13, %rax
    00002228: 	je	.Ltmp3400 # Offset: 8744
    0000222a: 	testq	%r15, %r15
    0000222d: 	je	.Ltmp3401 # Offset: 8749
.Ltmp3400:
    00002233: 	movq	%r13, 0x58(%rsp)
    00002238: 	cmpq	$0xf, %r13
    0000223c: 	ja	.Ltmp3402 # Offset: 8764
    00002242: 	cmpq	$0x1, %r13
    00002246: 	jne	.Ltmp3403 # Offset: 8774
    0000224c: 	movzbl	(%r15), %eax
    00002250: 	movb	%al, 0x10(%r14)
.Ltmp3433:
    00002254: 	movq	%r13, 0x8(%r14)
    00002258: 	movb	$0x0, (%rdi,%r13)
    0000225d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002264: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000226b: 	addq	$0x20, %rax
    0000226f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002276: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000227d: 	je	.Ltmp3404 # Offset: 8829
.Ltmp3435:
    00002283: 	movq	-0x20(%rax), %r13
    00002287: 	callq	clock@PLT # Offset: 8839
    0000228c: 	pxor	%xmm0, %xmm0
    00002290: 	movq	%rax, end_time(%rip)
    00002297: 	movq	%r13, %rdi
    0000229a: 	subq	start_time(%rip), %rax
    000022a1: 	cvtsi2sd	%rax, %xmm0
    000022a6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000022ae: 	callq	_Z13record_resultdPKc # Offset: 8878
    000022b3: 	movq	0x100(%rsp), %rdi
    000022bb: 	cmpq	%rbx, %rdi
    000022be: 	je	.Ltmp3405 # Offset: 8894
    000022c0: 	movq	0x110(%rsp), %rax
    000022c8: 	leaq	0x1(%rax), %rsi
    000022cc: 	callq	_ZdlPvm@PLT # Offset: 8908
.Ltmp3405:
    000022d1: 	movq	0x20(%rsp), %rsi
    000022d6: 	leaq	DATAat0x3d640(%rip), %rdx
    000022dd: 	movq	%rbp, %rdi
    000022e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8928
    000022e5: 	leaq	_Z8test_cosIjET_S0_(%rip), %r13
    000022ec: 	movq	%rbp, %rcx
    000022ef: 	movl	%r12d, %esi
    000022f2: 	movl	$0x1f40, %edi
    000022f7: 	movq	%r13, %rdx
    000022fa: 	callq	"_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 8954
    000022ff: 	movq	0x100(%rsp), %rdi
    00002307: 	cmpq	%rbx, %rdi
    0000230a: 	je	.Ltmp3406 # Offset: 8970
    0000230c: 	movq	0x110(%rsp), %rax
    00002314: 	leaq	0x1(%rax), %rsi
    00002318: 	callq	_ZdlPvm@PLT # Offset: 8984
.Ltmp3406:
    0000231d: 	movq	0x20(%rsp), %rsi
    00002322: 	leaq	DATAat0x3d550(%rip), %rdx
    00002329: 	movq	%rbp, %rdi
    0000232c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9004
    00002331: 	movq	%rbp, %rcx
    00002334: 	movq	%r13, %rdx
    00002337: 	movl	%r12d, %esi
    0000233a: 	movl	$0x1f40, %edi
    0000233f: 	callq	"_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9023
    00002344: 	movq	0x100(%rsp), %rdi
    0000234c: 	cmpq	%rbx, %rdi
    0000234f: 	je	.Ltmp3407 # Offset: 9039
    00002351: 	movq	0x110(%rsp), %rax
    00002359: 	leaq	0x1(%rax), %rsi
    0000235d: 	callq	_ZdlPvm@PLT # Offset: 9053
.Ltmp3407:
    00002362: 	movq	0x20(%rsp), %rsi
    00002367: 	leaq	DATAat0x3d567(%rip), %rdx
    0000236e: 	movq	%rbp, %rdi
    00002371: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9073
    00002376: 	callq	clock@PLT # Offset: 9078
    0000237b: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00002382: 	movq	%rax, start_time(%rip)
    00002389: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002390: 	subq	$0x20, %rax
    00002394: 	cmpq	%rax, %r14
    00002397: 	je	.Ltmp3408 # Offset: 9111
    0000239d: 	leaq	0x10(%r14), %rdi
    000023a1: 	movq	0x108(%rsp), %r13
    000023a9: 	movq	%rdi, (%r14)
    000023ac: 	movq	0x100(%rsp), %r15
    000023b4: 	movq	%r15, %rax
    000023b7: 	addq	%r13, %rax
    000023ba: 	je	.Ltmp3409 # Offset: 9146
    000023bc: 	testq	%r15, %r15
    000023bf: 	je	.Ltmp3410 # Offset: 9151
.Ltmp3409:
    000023c5: 	movq	%r13, 0x58(%rsp)
    000023ca: 	cmpq	$0xf, %r13
    000023ce: 	ja	.Ltmp3411 # Offset: 9166
    000023d4: 	cmpq	$0x1, %r13
    000023d8: 	jne	.Ltmp3412 # Offset: 9176
    000023de: 	movzbl	(%r15), %eax
    000023e2: 	movb	%al, 0x10(%r14)
.Ltmp3467:
    000023e6: 	movq	%r13, 0x8(%r14)
    000023ea: 	movb	$0x0, (%rdi,%r13)
    000023ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023f6: 	addq	$0x20, %rax
    000023fa: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3438:
    00002401: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002408: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000240f: 	je	.Ltmp3413 # Offset: 9231
.Ltmp3437:
    00002415: 	movq	-0x20(%rax), %r13
    00002419: 	callq	clock@PLT # Offset: 9241
    0000241e: 	pxor	%xmm0, %xmm0
    00002422: 	movq	%rax, end_time(%rip)
    00002429: 	movq	%r13, %rdi
    0000242c: 	subq	start_time(%rip), %rax
    00002433: 	cvtsi2sd	%rax, %xmm0
    00002438: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002440: 	callq	_Z13record_resultdPKc # Offset: 9280
    00002445: 	movq	0x100(%rsp), %rdi
    0000244d: 	cmpq	%rbx, %rdi
    00002450: 	je	.Ltmp3414 # Offset: 9296
    00002452: 	movq	0x110(%rsp), %rax
    0000245a: 	leaq	0x1(%rax), %rsi
    0000245e: 	callq	_ZdlPvm@PLT # Offset: 9310
.Ltmp3414:
    00002463: 	movq	0x20(%rsp), %rsi
    00002468: 	leaq	DATAat0x3d660(%rip), %rdx
    0000246f: 	movq	%rbp, %rdi
    00002472: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9330
    00002477: 	leaq	_Z8test_sqrIjET_S0_(%rip), %r13
    0000247e: 	movq	%rbp, %rcx
    00002481: 	movl	%r12d, %esi
    00002484: 	movl	$0x1f40, %edi
    00002489: 	movq	%r13, %rdx
    0000248c: 	callq	"_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9356
    00002491: 	movq	0x100(%rsp), %rdi
    00002499: 	cmpq	%rbx, %rdi
    0000249c: 	je	.Ltmp3415 # Offset: 9372
    0000249e: 	movq	0x110(%rsp), %rax
    000024a6: 	leaq	0x1(%rax), %rsi
    000024aa: 	callq	_ZdlPvm@PLT # Offset: 9386
.Ltmp3415:
    000024af: 	movq	0x20(%rsp), %rsi
    000024b4: 	leaq	DATAat0x3d582(%rip), %rdx
    000024bb: 	movq	%rbp, %rdi
    000024be: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9406
    000024c3: 	movq	%rbp, %rcx
    000024c6: 	movq	%r13, %rdx
    000024c9: 	movl	%r12d, %esi
    000024cc: 	movl	$0x1f40, %edi
    000024d1: 	callq	"_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9425
    000024d6: 	movq	0x100(%rsp), %rdi
    000024de: 	cmpq	%rbx, %rdi
    000024e1: 	je	.Ltmp3416 # Offset: 9441
    000024e3: 	movq	0x110(%rsp), %rax
    000024eb: 	leaq	0x1(%rax), %rsi
    000024ef: 	callq	_ZdlPvm@PLT # Offset: 9455
.Ltmp3416:
    000024f4: 	movq	0x20(%rsp), %rsi
    000024f9: 	leaq	DATAat0x3d599(%rip), %rdx
    00002500: 	movq	%rbp, %rdi
    00002503: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9475
    00002508: 	callq	clock@PLT # Offset: 9480
    0000250d: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00002514: 	movq	%rax, start_time(%rip)
    0000251b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002522: 	subq	$0x20, %rax
    00002526: 	cmpq	%rax, %r14
    00002529: 	je	.Ltmp3417 # Offset: 9513
    0000252f: 	leaq	0x10(%r14), %rdi
    00002533: 	movq	0x108(%rsp), %r13
    0000253b: 	movq	%rdi, (%r14)
    0000253e: 	movq	0x100(%rsp), %r15
    00002546: 	movq	%r15, %rax
    00002549: 	addq	%r13, %rax
    0000254c: 	je	.Ltmp3418 # Offset: 9548
    0000254e: 	testq	%r15, %r15
    00002551: 	je	.Ltmp3419 # Offset: 9553
.Ltmp3418:
    00002557: 	movq	%r13, 0x58(%rsp)
    0000255c: 	cmpq	$0xf, %r13
    00002560: 	ja	.Ltmp3420 # Offset: 9568
    00002566: 	cmpq	$0x1, %r13
    0000256a: 	jne	.Ltmp3421 # Offset: 9578
    00002570: 	movzbl	(%r15), %eax
    00002574: 	movb	%al, 0x10(%r14)
.Ltmp3465:
    00002578: 	movq	%r13, 0x8(%r14)
    0000257c: 	movb	$0x0, (%rdi,%r13)
    00002581: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002588: 	addq	$0x20, %rax
    0000258c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3436:
    00002593: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000259a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025a1: 	je	.Ltmp3422 # Offset: 9633
.Ltmp3434:
    000025a7: 	movq	-0x20(%rax), %r13
    000025ab: 	callq	clock@PLT # Offset: 9643
    000025b0: 	pxor	%xmm0, %xmm0
    000025b4: 	movq	%rax, end_time(%rip)
    000025bb: 	movq	%r13, %rdi
    000025be: 	subq	start_time(%rip), %rax
    000025c5: 	cvtsi2sd	%rax, %xmm0
    000025ca: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000025d2: 	callq	_Z13record_resultdPKc # Offset: 9682
    000025d7: 	movq	0x100(%rsp), %rdi
    000025df: 	cmpq	%rbx, %rdi
    000025e2: 	je	.Ltmp3423 # Offset: 9698
    000025e4: 	movq	0x110(%rsp), %rax
    000025ec: 	leaq	0x1(%rax), %rsi
    000025f0: 	callq	_ZdlPvm@PLT # Offset: 9712
.Ltmp3423:
    000025f5: 	movq	0x20(%rsp), %rsi
    000025fa: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002601: 	movq	%rbp, %rdi
    00002604: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9732
    00002609: 	leaq	_Z9test_hashIjET_S0_(%rip), %r13
    00002610: 	movq	%rbp, %rcx
    00002613: 	movl	%r12d, %esi
    00002616: 	movl	$0x1f40, %edi
    0000261b: 	movq	%r13, %rdx
    0000261e: 	callq	"_Z27test_const_function_halfoptIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9758
    00002623: 	movq	0x100(%rsp), %rdi
    0000262b: 	cmpq	%rbx, %rdi
    0000262e: 	je	.Ltmp3424 # Offset: 9774
    00002630: 	movq	0x110(%rsp), %rax
    00002638: 	leaq	0x1(%rax), %rsi
    0000263c: 	callq	_ZdlPvm@PLT # Offset: 9788
.Ltmp3424:
    00002641: 	movq	0x20(%rsp), %rsi
    00002646: 	leaq	DATAat0x3d5cf(%rip), %rdx
    0000264d: 	movq	%rbp, %rdi
    00002650: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9808
    00002655: 	movq	%rbp, %rcx
    00002658: 	movq	%r13, %rdx
    0000265b: 	movl	%r12d, %esi
    0000265e: 	movl	$0x1f40, %edi
    00002663: 	callq	"_Z19test_const_functionIjPFjjEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9827
    00002668: 	movq	0x100(%rsp), %rdi
    00002670: 	cmpq	%rbx, %rdi
    00002673: 	je	.Ltmp3425 # Offset: 9843
    00002675: 	movq	0x110(%rsp), %rax
    0000267d: 	leaq	0x1(%rax), %rsi
    00002681: 	callq	_ZdlPvm@PLT # Offset: 9857
.Ltmp3425:
    00002686: 	movq	0x20(%rsp), %rsi
    0000268b: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002692: 	movq	%rbp, %rdi
    00002695: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9877
    0000269a: 	movl	iterations(%rip), %edx
    000026a0: 	xorl	%r8d, %r8d
    000026a3: 	xorl	%ecx, %ecx
    000026a5: 	movl	$0x1f40, %esi
    000026aa: 	movq	0x100(%rsp), %rdi
    000026b2: 	callq	_Z9summarizePKciiii # Offset: 9906
    000026b7: 	movq	0x100(%rsp), %rdi
    000026bf: 	cmpq	%rbx, %rdi
    000026c2: 	je	.Ltmp3426 # Offset: 9922
    000026c4: 	movq	0x110(%rsp), %rax
    000026cc: 	leaq	0x1(%rax), %rsi
    000026d0: 	callq	_ZdlPvm@PLT # Offset: 9936
.Ltmp3426:
    000026d5: 	movq	0xe0(%rsp), %rdi
    000026dd: 	leaq	0xf0(%rsp), %rax
    000026e5: 	cmpq	%rax, %rdi
    000026e8: 	je	.Ltmp3427 # Offset: 9960
    000026ea: 	movq	0xf0(%rsp), %rax
    000026f2: 	leaq	0x1(%rax), %rsi
    000026f6: 	callq	_ZdlPvm@PLT # Offset: 9974
.Ltmp3427:
    000026fb: 	movq	0xc0(%rsp), %rdi
    00002703: 	leaq	0xd0(%rsp), %rax
    0000270b: 	cmpq	%rax, %rdi
    0000270e: 	je	.Ltmp3428 # Offset: 9998
    00002710: 	movq	0xd0(%rsp), %rax
    00002718: 	leaq	0x1(%rax), %rsi
    0000271c: 	callq	_ZdlPvm@PLT # Offset: 10012
.Ltmp3428:
    00002721: 	movq	0xa0(%rsp), %rdi
    00002729: 	cmpq	0x40(%rsp), %rdi
    0000272e: 	je	.Ltmp3429 # Offset: 10030
    00002730: 	movq	0xb0(%rsp), %rax
    00002738: 	leaq	0x1(%rax), %rsi
    0000273c: 	callq	_ZdlPvm@PLT # Offset: 10044
.Ltmp3429:
    00002741: 	movq	0x7ef8(%rsp), %rax
    00002749: 	subq	%fs:0x28, %rax
    00002752: 	jne	.Ltmp3430 # Offset: 10066
    00002758: 	addq	$0x7f08, %rsp
    0000275f: 	popq	%rbx
    00002760: 	popq	%rbp
    00002761: 	popq	%r12
    00002763: 	popq	%r13
    00002765: 	popq	%r14
    00002767: 	popq	%r15
    00002769: 	retq # Offset: 10089
    0000276a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3376:
    00002770: 	movq	0x100(%rsp), %rdx
    00002778: 	movq	%r15, %rsi
    0000277b: 	movl	$0x1, %edi
    00002780: 	xorl	%eax, %eax
    00002782: 	callq	__printf_chk@PLT # Offset: 10114
    00002787: 	addl	$0x1, %r12d
    0000278b: 	cmpl	iterations(%rip), %r12d
    00002792: 	jl	.Ltmp3431 # Offset: 10130
    00002798: 	jmp	.Ltmp3375 # Offset: 10136
    0000279d: 	nopl	(%rax) # Size: 3
.Ltmp3381:
    000027a0: 	movq	0x100(%rsp), %rdx
    000027a8: 	movq	%r15, %rsi
    000027ab: 	movl	$0x1, %edi
    000027b0: 	xorl	%eax, %eax
    000027b2: 	callq	__printf_chk@PLT # Offset: 10162
    000027b7: 	addl	$0x1, %r14d
    000027bb: 	cmpl	iterations(%rip), %r14d
    000027c2: 	jl	.Ltmp3432 # Offset: 10178
    000027c8: 	jmp	.Ltmp3380 # Offset: 10184
    000027cd: 	nopl	(%rax) # Size: 3
.Ltmp3402:
    000027d0: 	leaq	0x58(%rsp), %rsi
    000027d5: 	xorl	%edx, %edx
    000027d7: 	movq	%r14, %rdi
    000027da: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10202
    000027df: 	movq	%rax, (%r14)
    000027e2: 	movq	%rax, %rdi
    000027e5: 	movq	0x58(%rsp), %rax
    000027ea: 	movq	%rax, 0x10(%r14)
.Ltmp3469:
    000027ee: 	movq	%r13, %rdx
    000027f1: 	movq	%r15, %rsi
    000027f4: 	callq	memcpy@PLT # Offset: 10228
    000027f9: 	movq	0x58(%rsp), %r13
    000027fe: 	movq	(%r14), %rdi
    00002801: 	jmp	.Ltmp3433 # Offset: 10241
.Ltmp3422:
    00002806: 	movq	-0x8(%rdx), %rax
    0000280a: 	addq	$0x200, %rax
    00002810: 	jmp	.Ltmp3434 # Offset: 10256
.Ltmp3399:
    00002815: 	movq	%rbp, %rsi
    00002818: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000281f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10271
    00002824: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000282b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002832: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002839: 	jne	.Ltmp3435 # Offset: 10297
.Ltmp3404:
    0000283f: 	movq	-0x8(%rdx), %rax
    00002843: 	addq	$0x200, %rax
    00002849: 	jmp	.Ltmp3435 # Offset: 10313
.Ltmp3417:
    0000284e: 	movq	%rbp, %rsi
    00002851: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002858: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10328
    0000285d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002864: 	jmp	.Ltmp3436 # Offset: 10340
.Ltmp3413:
    00002869: 	movq	-0x8(%rdx), %rax
    0000286d: 	addq	$0x200, %rax
    00002873: 	jmp	.Ltmp3437 # Offset: 10355
.Ltmp3408:
    00002878: 	movq	%rbp, %rsi
    0000287b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002882: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10370
    00002887: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000288e: 	jmp	.Ltmp3438 # Offset: 10382
.Ltmp3394:
    00002893: 	movq	-0x8(%rdx), %rax
    00002897: 	addq	$0x200, %rax
    0000289d: 	jmp	.Ltmp3439 # Offset: 10397
.Ltmp3391:
    000028a2: 	movq	-0x8(%rdx), %rax
    000028a6: 	addq	$0x200, %rax
    000028ac: 	jmp	.Ltmp3440 # Offset: 10412
.Ltmp3388:
    000028b1: 	movq	-0x8(%rdx), %rax
    000028b5: 	addq	$0x200, %rax
    000028bb: 	jmp	.Ltmp3441 # Offset: 10427
.Ltmp3385:
    000028c0: 	movq	-0x8(%rdx), %rax
    000028c4: 	addq	$0x200, %rax
    000028ca: 	jmp	.Ltmp3442 # Offset: 10442
.Ltmp3382:
    000028cf: 	movq	-0x8(%rdx), %rax
    000028d3: 	addq	$0x200, %rax
    000028d9: 	jmp	.Ltmp3443 # Offset: 10457
.Ltmp3377:
    000028de: 	movq	-0x8(%rdx), %rax
    000028e2: 	addq	$0x200, %rax
    000028e8: 	jmp	.Ltmp3444 # Offset: 10472
.Ltmp3372:
    000028ed: 	movq	-0x8(%rdx), %rax
    000028f1: 	addq	$0x200, %rax
    000028f7: 	jmp	.Ltmp3445 # Offset: 10487
.Ltmp3366:
    000028fc: 	movq	-0x8(%rdx), %rax
    00002900: 	addq	$0x200, %rax
    00002906: 	jmp	.Ltmp3446 # Offset: 10502
.Ltmp3360:
    0000290b: 	movq	-0x8(%rdx), %rax
    0000290f: 	addq	$0x200, %rax
    00002915: 	jmp	.Ltmp3447 # Offset: 10517
.Ltmp3354:
    0000291a: 	movq	-0x8(%rdx), %rax
    0000291e: 	addq	$0x200, %rax
    00002924: 	jmp	.Ltmp3448 # Offset: 10532
.Ltmp3347:
    00002929: 	movq	-0x8(%rdx), %rax
    0000292d: 	addq	$0x200, %rax
    00002933: 	jmp	.Ltmp3449 # Offset: 10547
.Ltmp3341:
    00002938: 	movq	-0x8(%rdx), %rax
    0000293c: 	addq	$0x200, %rax
    00002942: 	jmp	.Ltmp3450 # Offset: 10562
.Ltmp3335:
    00002947: 	movq	-0x8(%rdx), %rax
    0000294b: 	addq	$0x200, %rax
    00002951: 	jmp	.Ltmp3451 # Offset: 10577
.Ltmp3329:
    00002956: 	movq	-0x8(%rdx), %rax
    0000295a: 	addq	$0x200, %rax
    00002960: 	jmp	.Ltmp3452 # Offset: 10592
.Ltmp3323:
    00002965: 	movq	-0x8(%rdx), %rax
    00002969: 	addq	$0x200, %rax
    0000296f: 	jmp	.Ltmp3453 # Offset: 10607
.Ltmp3317:
    00002974: 	movq	-0x8(%rdx), %rax
    00002978: 	addq	$0x200, %rax
    0000297e: 	jmp	.Ltmp3454 # Offset: 10622
.Ltmp3311:
    00002983: 	movq	-0x8(%rdx), %rax
    00002987: 	addq	$0x200, %rax
    0000298d: 	jmp	.Ltmp3455 # Offset: 10637
.Ltmp3305:
    00002992: 	movq	-0x8(%rdx), %rax
    00002996: 	addq	$0x200, %rax
    0000299c: 	jmp	.Ltmp3456 # Offset: 10652
.Ltmp3299:
    000029a1: 	movq	-0x8(%rdx), %rax
    000029a5: 	addq	$0x200, %rax
    000029ab: 	jmp	.Ltmp3457 # Offset: 10667
.Ltmp3293:
    000029b0: 	movq	-0x8(%rdx), %rax
    000029b4: 	addq	$0x200, %rax
    000029ba: 	jmp	.Ltmp3458 # Offset: 10682
.Ltmp3287:
    000029bf: 	movq	-0x8(%rdx), %rax
    000029c3: 	addq	$0x200, %rax
    000029c9: 	jmp	.Ltmp3459 # Offset: 10697
.Ltmp3281:
    000029ce: 	movq	-0x8(%rdx), %rax
    000029d2: 	addq	$0x200, %rax
    000029d8: 	jmp	.Ltmp3460 # Offset: 10712
.Ltmp3275:
    000029dd: 	movq	-0x8(%rdx), %rax
    000029e1: 	addq	$0x200, %rax
    000029e7: 	jmp	.Ltmp3461 # Offset: 10727
.Ltmp3269:
    000029ec: 	movq	-0x8(%rdx), %rax
    000029f0: 	addq	$0x200, %rax
    000029f6: 	jmp	.Ltmp3462 # Offset: 10742
.Ltmp3263:
    000029fb: 	movq	-0x8(%rdx), %rax
    000029ff: 	addq	$0x200, %rax
    00002a05: 	jmp	.Ltmp3463 # Offset: 10757
.Ltmp3257:
    00002a0a: 	movq	-0x8(%rdx), %rax
    00002a0e: 	addq	$0x200, %rax
    00002a14: 	jmp	.Ltmp3464 # Offset: 10772
.Ltmp3421:
    00002a19: 	testq	%r13, %r13
    00002a1c: 	je	.Ltmp3465 # Offset: 10780
    00002a22: 	jmp	.Ltmp3466 # Offset: 10786
    00002a24: 	nopl	(%rax) # Size: 4
.Ltmp3412:
    00002a28: 	testq	%r13, %r13
    00002a2b: 	je	.Ltmp3467 # Offset: 10795
    00002a31: 	jmp	.Ltmp3468 # Offset: 10801
    00002a33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3403:
    00002a38: 	testq	%r13, %r13
    00002a3b: 	je	.Ltmp3433 # Offset: 10811
    00002a41: 	jmp	.Ltmp3469 # Offset: 10817
    00002a46: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3420:
    00002a50: 	leaq	0x58(%rsp), %rsi
    00002a55: 	xorl	%edx, %edx
    00002a57: 	movq	%r14, %rdi
    00002a5a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10842
    00002a5f: 	movq	%rax, (%r14)
    00002a62: 	movq	%rax, %rdi
    00002a65: 	movq	0x58(%rsp), %rax
    00002a6a: 	movq	%rax, 0x10(%r14)
.Ltmp3466:
    00002a6e: 	movq	%r13, %rdx
    00002a71: 	movq	%r15, %rsi
    00002a74: 	callq	memcpy@PLT # Offset: 10868
    00002a79: 	movq	0x58(%rsp), %r13
    00002a7e: 	movq	(%r14), %rdi
    00002a81: 	jmp	.Ltmp3465 # Offset: 10881
.Ltmp3411:
    00002a86: 	leaq	0x58(%rsp), %rsi
    00002a8b: 	xorl	%edx, %edx
    00002a8d: 	movq	%r14, %rdi
    00002a90: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10896
    00002a95: 	movq	%rax, (%r14)
    00002a98: 	movq	%rax, %rdi
    00002a9b: 	movq	0x58(%rsp), %rax
    00002aa0: 	movq	%rax, 0x10(%r14)
.Ltmp3468:
    00002aa4: 	movq	%r13, %rdx
    00002aa7: 	movq	%r15, %rsi
    00002aaa: 	callq	memcpy@PLT # Offset: 10922
    00002aaf: 	movq	0x58(%rsp), %r13
    00002ab4: 	movq	(%r14), %rdi
    00002ab7: 	jmp	.Ltmp3467 # Offset: 10935
.Ltmp3410:
    00002abc: 	leaq	DATAat0x3d158(%rip), %rdi
    00002ac3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10947
.Ltmp3419:
    00002ac8: 	leaq	DATAat0x3d158(%rip), %rdi
    00002acf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10959
.Ltmp3430:
    00002ad4: 	callq	__stack_chk_fail@PLT # Offset: 10964
.Ltmp3401:
    00002ad9: 	leaq	DATAat0x3d158(%rip), %rdi
    00002ae0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10976
    00002ae5: 	endbr64
.Ltmp3479:
    00002ae9: 	movq	%rax, %rbp
    00002aec: 	jmp	.Ltmp3470 # Offset: 10988
    00002aee: 	endbr64
.Ltmp3475:
    00002af2: 	movq	%rax, %rbp
    00002af5: 	jmp	.Ltmp3471 # Offset: 10997
.Ltmp3470:
    00002af7: 	movq	0x100(%rsp), %rdi
    00002aff: 	cmpq	%rbx, %rdi
    00002b02: 	je	.Ltmp3472 # Offset: 11010
.Ltmp3481:
    00002b04: 	movq	0x110(%rsp), %rax
    00002b0c: 	leaq	0x1(%rax), %rsi
    00002b10: 	callq	_ZdlPvm@PLT # Offset: 11024
.Ltmp3472:
    00002b15: 	movq	0xc0(%rsp), %rdi
    00002b1d: 	leaq	0xd0(%rsp), %rax
    00002b25: 	cmpq	%rax, %rdi
    00002b28: 	je	.Ltmp3473 # Offset: 11048
    00002b2a: 	movq	0xd0(%rsp), %rax
    00002b32: 	leaq	0x1(%rax), %rsi
    00002b36: 	callq	_ZdlPvm@PLT # Offset: 11062
.Ltmp3473:
    00002b3b: 	movq	0xa0(%rsp), %rdi
    00002b43: 	cmpq	0x40(%rsp), %rdi
    00002b48: 	je	.Ltmp3474 # Offset: 11080
    00002b4a: 	movq	0xb0(%rsp), %rax
    00002b52: 	leaq	0x1(%rax), %rsi
    00002b56: 	callq	_ZdlPvm@PLT # Offset: 11094
.Ltmp3474:
    00002b5b: 	movq	%rbp, %rdi
    00002b5e: 	callq	_Unwind_Resume@PLT # Offset: 11102
.Ltmp3471:
    00002b63: 	movq	0x120(%rsp), %rdi
    00002b6b: 	cmpq	0x30(%rsp), %rdi
    00002b70: 	je	.Ltmp3473 # Offset: 11120
.Ltmp3483:
    00002b72: 	movq	0x130(%rsp), %rax
    00002b7a: 	leaq	0x1(%rax), %rsi
    00002b7e: 	callq	_ZdlPvm@PLT # Offset: 11134
    00002b83: 	jmp	.Ltmp3473 # Offset: 11139
    00002b85: 	endbr64
    00002b89: 	jmp	.Ltmp3475 # Offset: 11145
    00002b8e: 	endbr64
    00002b92: 	jmp	.Ltmp3475 # Offset: 11154
    00002b97: 	endbr64
    00002b9b: 	jmp	.Ltmp3475 # Offset: 11163
    00002ba0: 	endbr64
.Ltmp3477:
    00002ba4: 	movq	%rax, %rbp
    00002ba7: 	jmp	.Ltmp3476 # Offset: 11175
    00002ba9: 	endbr64
    00002bad: 	jmp	.Ltmp3477 # Offset: 11181
    00002baf: 	endbr64
    00002bb3: 	jmp	.Ltmp3477 # Offset: 11187
    00002bb5: 	endbr64
    00002bb9: 	movq	%rax, %rbp
    00002bbc: 	jmp	.Ltmp3478 # Offset: 11196
    00002bbe: 	endbr64
    00002bc2: 	jmp	.Ltmp3479 # Offset: 11202
    00002bc7: 	endbr64
    00002bcb: 	jmp	.Ltmp3479 # Offset: 11211
.Ltmp3476:
    00002bd0: 	movq	0x100(%rsp), %rdi
    00002bd8: 	cmpq	%rbx, %rdi
    00002bdb: 	je	.Ltmp3478 # Offset: 11227
    00002bdd: 	movq	0x110(%rsp), %rax
    00002be5: 	leaq	0x1(%rax), %rsi
    00002be9: 	callq	_ZdlPvm@PLT # Offset: 11241
.Ltmp3478:
    00002bee: 	movq	0xe0(%rsp), %rdi
    00002bf6: 	leaq	0xf0(%rsp), %rax
    00002bfe: 	cmpq	%rax, %rdi
    00002c01: 	je	.Ltmp3472 # Offset: 11265
    00002c07: 	movq	0xf0(%rsp), %rax
    00002c0f: 	leaq	0x1(%rax), %rsi
    00002c13: 	callq	_ZdlPvm@PLT # Offset: 11283
    00002c18: 	jmp	.Ltmp3472 # Offset: 11288
    00002c1d: 	endbr64
    00002c21: 	jmp	.Ltmp3479 # Offset: 11297
    00002c26: 	endbr64
    00002c2a: 	jmp	.Ltmp3479 # Offset: 11306
    00002c2f: 	endbr64
    00002c33: 	jmp	.Ltmp3479 # Offset: 11315
    00002c38: 	endbr64
    00002c3c: 	jmp	.Ltmp3479 # Offset: 11324
    00002c41: 	endbr64
    00002c45: 	jmp	.Ltmp3475 # Offset: 11333
    00002c4a: 	endbr64
    00002c4e: 	jmp	.Ltmp3475 # Offset: 11342
    00002c53: 	endbr64
    00002c57: 	jmp	.Ltmp3475 # Offset: 11351
    00002c5c: 	endbr64
    00002c60: 	jmp	.Ltmp3475 # Offset: 11360
    00002c65: 	endbr64
    00002c69: 	jmp	.Ltmp3475 # Offset: 11369
    00002c6e: 	endbr64
    00002c72: 	jmp	.Ltmp3477 # Offset: 11378
    00002c77: 	endbr64
    00002c7b: 	jmp	.Ltmp3475 # Offset: 11387
    00002c80: 	endbr64
    00002c84: 	jmp	.Ltmp3475 # Offset: 11396
    00002c89: 	endbr64
    00002c8d: 	movq	%rax, %rbp
    00002c90: 	jmp	.Ltmp3480 # Offset: 11408
    00002c92: 	endbr64
    00002c96: 	movq	%rax, %rbp
    00002c99: 	jmp	.Ltmp3472 # Offset: 11417
    00002c9e: 	endbr64
    00002ca2: 	jmp	.Ltmp3475 # Offset: 11426
    00002ca7: 	endbr64
    00002cab: 	jmp	.Ltmp3475 # Offset: 11435
    00002cb0: 	endbr64
    00002cb4: 	jmp	.Ltmp3475 # Offset: 11444
.Ltmp3480:
    00002cb9: 	movq	0x100(%rsp), %rdi
    00002cc1: 	leaq	0x110(%rsp), %rax
    00002cc9: 	cmpq	%rax, %rdi
    00002ccc: 	jne	.Ltmp3481 # Offset: 11468
    00002cd2: 	jmp	.Ltmp3472 # Offset: 11474
    00002cd7: 	endbr64
    00002cdb: 	jmp	.Ltmp3479 # Offset: 11483
    00002ce0: 	endbr64
    00002ce4: 	jmp	.Ltmp3475 # Offset: 11492
    00002ce9: 	endbr64
    00002ced: 	jmp	.Ltmp3479 # Offset: 11501
    00002cf2: 	endbr64
    00002cf6: 	jmp	.Ltmp3479 # Offset: 11510
    00002cfb: 	endbr64
    00002cff: 	jmp	.Ltmp3479 # Offset: 11519
    00002d04: 	endbr64
    00002d08: 	movq	%rax, %rbp
    00002d0b: 	jmp	.Ltmp3482 # Offset: 11531
    00002d0d: 	endbr64
    00002d11: 	movq	%rax, %rbp
    00002d14: 	jmp	.Ltmp3473 # Offset: 11540
    00002d19: 	endbr64
    00002d1d: 	jmp	.Ltmp3477 # Offset: 11549
.Ltmp3482:
    00002d22: 	movq	0x120(%rsp), %rdi
    00002d2a: 	leaq	0x130(%rsp), %rax
    00002d32: 	cmpq	%rax, %rdi
    00002d35: 	jne	.Ltmp3483 # Offset: 11573
    00002d3b: 	jmp	.Ltmp3473 # Offset: 11579
    00002d40: 	endbr64
    00002d44: 	jmp	.Ltmp3477 # Offset: 11588
    00002d49: 	endbr64
    00002d4d: 	jmp	.Ltmp3477 # Offset: 11597
    00002d52: 	endbr64
    00002d56: 	jmp	.Ltmp3477 # Offset: 11606
    00002d5b: 	endbr64
    00002d5f: 	jmp	.Ltmp3477 # Offset: 11615
    00002d64: 	endbr64
    00002d68: 	jmp	.Ltmp3477 # Offset: 11624
    00002d6d: 	endbr64
    00002d71: 	jmp	.Ltmp3477 # Offset: 11633
    00002d76: 	endbr64
    00002d7a: 	jmp	.Ltmp3477 # Offset: 11642
    00002d7f: 	endbr64
    00002d83: 	jmp	.Ltmp3477 # Offset: 11651
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIjEvd"

Binary Function "_Z9TestLoopsIsEvd" after disassembly {
  Number      : 152
  State       : disassembled
  Address     : 0x255f0
  Size        : 0x3030
  MaxSize     : 0x3030
  Offset      : 0x255f0
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIsEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0151:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x4000(%rsp), %r11
.Ltmp3484:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp3484 # Offset: 37
    00000027: 	subq	$0x38, %rsp
    0000002b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000033: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000003b: 	movl	$0x5f36, %r9d
    00000041: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000048: 	movsd	%xmm0, (%rsp)
    0000004d: 	leaq	0x1a0(%rsp), %r13
    00000055: 	leaq	0x4020(%rsp), %r15
    0000005d: 	movq	%fs:0x28, %rax
    00000066: 	movq	%rax, 0x4028(%rsp)
    0000006e: 	xorl	%eax, %eax
    00000070: 	leaq	0xc0(%rsp), %rax
    00000078: 	movl	$0x31746e69, 0xc0(%rsp)
    00000083: 	movq	%rax, 0x70(%rsp)
    00000088: 	movq	%rax, 0xb0(%rsp)
    00000090: 	leaq	0x90(%rsp), %rax
    00000098: 	movq	%rax, %rsi
    0000009b: 	movq	%rax, 0x78(%rsp)
    000000a0: 	movw	%r9w, 0xc4(%rsp)
    000000a9: 	movb	$0x74, 0xc6(%rsp)
    000000b1: 	movq	$0x7, 0xb8(%rsp)
    000000bd: 	movb	$0x0, 0xc7(%rsp)
    000000c5: 	movaps	%xmm6, 0x90(%rsp)
    000000cd: 	movaps	%xmm7, 0xa0(%rsp)
    000000d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 213
    000000da: 	cvttsd2si	init_value(%rip), %eax
    000000e2: 	movsd	(%rsp), %xmm0
    000000e7: 	movd	%eax, %xmm1
    000000eb: 	movq	%r13, %rax
    000000ee: 	punpcklwd	%xmm1, %xmm1
    000000f2: 	pshufd	$0x0, %xmm1, %xmm1
    000000f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3485:
    00000100: 	movaps	%xmm1, (%rax)
    00000103: 	addq	$0x10, %rax
    00000107: 	cmpq	%r15, %rax
    0000010a: 	jne	.Ltmp3485 # Offset: 266
    0000010c: 	cvttsd2si	%xmm0, %esi
    00000110: 	movl	%esi, %eax
    00000112: 	movl	%esi, %edi
    00000114: 	movl	%esi, 0x6c(%rsp)
    00000118: 	movl	%esi, %ebx
    0000011a: 	addl	%eax, %eax
    0000011c: 	addl	$0x2, %edi
    0000011f: 	movl	%esi, %r14d
    00000122: 	movw	%ax, 0x50(%rsp)
    00000127: 	cwtl
    00000128: 	movw	%di, 0x54(%rsp)
    0000012d: 	cltd
    0000012e: 	movswl	%di, %edi
    00000131: 	movl	%eax, 0x58(%rsp)
    00000135: 	idivl	%edi
    00000137: 	movl	%edi, 0x5c(%rsp)
    0000013b: 	leaq	DATAat0x3d273(%rip), %rdx
    00000142: 	leaq	0x130(%rsp), %rdi
    0000014a: 	movq	%rdi, 0x48(%rsp)
    0000014f: 	addl	%esi, %eax
    00000151: 	movw	%ax, 0x44(%rsp)
    00000156: 	leaq	0xb0(%rsp), %rax
    0000015e: 	movq	%rax, %rsi
    00000161: 	movq	%rax, 0x38(%rsp)
    00000166: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 358
    0000016b: 	callq	clock@PLT # Offset: 363
    00000170: 	movl	iterations(%rip), %ecx
    00000176: 	movswl	%bx, %ebp
    00000179: 	xorl	%ebx, %ebx
    0000017b: 	movq	%rax, start_time(%rip)
    00000182: 	testl	%ecx, %ecx
    00000184: 	jle	.Ltmp3486 # Offset: 388
    0000018a: 	movd	%r14d, %xmm0
    0000018f: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000196: 	punpcklwd	%xmm0, %xmm0
    0000019a: 	pshufd	$0x0, %xmm0, %xmm6
    0000019f: 	movaps	%xmm6, (%rsp)
    000001a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3489:
    000001a8: 	movq	%r13, %rax
    000001ab: 	pxor	%xmm0, %xmm0
    000001af: 	nop # Size: 1
.Ltmp3487:
    000001b0: 	paddw	(%rsp), %xmm0
    000001b5: 	addq	$0x10, %rax
    000001b9: 	paddw	-0x10(%rax), %xmm0
    000001be: 	cmpq	%r15, %rax
    000001c1: 	jne	.Ltmp3487 # Offset: 449
    000001c3: 	movdqa	%xmm0, %xmm1
    000001c7: 	cvttsd2si	init_value(%rip), %eax
    000001cf: 	psrldq	$0x8, %xmm1
    000001d4: 	paddw	%xmm1, %xmm0
    000001d8: 	movdqa	%xmm0, %xmm1
    000001dc: 	psrldq	$0x4, %xmm1
    000001e1: 	addl	%r14d, %eax
    000001e4: 	imulw	$0x1f40, %ax, %ax
    000001e9: 	paddw	%xmm1, %xmm0
    000001ed: 	movdqa	%xmm0, %xmm1
    000001f1: 	psrldq	$0x2, %xmm1
    000001f6: 	paddw	%xmm1, %xmm0
    000001fa: 	pextrw	$0x0, %xmm0, %edx
    000001ff: 	cmpw	%dx, %ax
    00000202: 	je	.Ltmp3488 # Offset: 514
    00000204: 	movl	current_test(%rip), %edx
    0000020a: 	movq	%r12, %rsi
    0000020d: 	movl	$0x1, %edi
    00000212: 	xorl	%eax, %eax
    00000214: 	callq	__printf_chk@PLT # Offset: 532
    00000219: 	movl	iterations(%rip), %ecx
.Ltmp3488:
    0000021f: 	addl	$0x1, %ebx
    00000222: 	cmpl	%ecx, %ebx
    00000224: 	jl	.Ltmp3489 # Offset: 548
.Ltmp3486:
    00000226: 	movq	0x48(%rsp), %rsi
    0000022b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000232: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 562
    00000237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000023e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000245: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000024c: 	je	.Ltmp3490 # Offset: 588
.Ltmp3700:
    00000252: 	movq	-0x20(%rax), %r12
    00000256: 	callq	clock@PLT # Offset: 598
    0000025b: 	pxor	%xmm0, %xmm0
    0000025f: 	movq	%rax, end_time(%rip)
    00000266: 	movq	%r12, %rdi
    00000269: 	subq	start_time(%rip), %rax
    00000270: 	cvtsi2sd	%rax, %xmm0
    00000275: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000027d: 	callq	_Z13record_resultdPKc # Offset: 637
    00000282: 	movq	0x130(%rsp), %rdi
    0000028a: 	leaq	0x140(%rsp), %rax
    00000292: 	movq	%rax, 0x60(%rsp)
    00000297: 	cmpq	%rax, %rdi
    0000029a: 	je	.Ltmp3491 # Offset: 666
    0000029c: 	movq	0x140(%rsp), %rax
    000002a4: 	leaq	0x1(%rax), %rsi
    000002a8: 	callq	_ZdlPvm@PLT # Offset: 680
.Ltmp3491:
    000002ad: 	movq	0x38(%rsp), %rsi
    000002b2: 	movq	0x48(%rsp), %rdi
    000002b7: 	leaq	DATAat0x3d281(%rip), %rdx
    000002be: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 702
    000002c3: 	callq	clock@PLT # Offset: 707
    000002c8: 	movl	iterations(%rip), %ecx
    000002ce: 	movq	%rax, start_time(%rip)
    000002d5: 	testl	%ecx, %ecx
    000002d7: 	jle	.Ltmp3492 # Offset: 727
    000002dd: 	imulw	$0x1f40, 0x6c(%rsp), %r12w
    000002e5: 	xorl	%ebx, %ebx
    000002e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3495:
    000002f0: 	movq	%r13, %rax
    000002f3: 	pxor	%xmm0, %xmm0
    000002f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3493:
    00000300: 	paddw	(%rax), %xmm0
    00000304: 	addq	$0x10, %rax
    00000308: 	cmpq	%r15, %rax
    0000030b: 	jne	.Ltmp3493 # Offset: 779
    0000030d: 	movdqa	%xmm0, %xmm1
    00000311: 	cvttsd2si	init_value(%rip), %eax
    00000319: 	psrldq	$0x8, %xmm1
    0000031e: 	paddw	%xmm1, %xmm0
    00000322: 	movdqa	%xmm0, %xmm1
    00000326: 	psrldq	$0x4, %xmm1
    0000032b: 	addl	%r14d, %eax
    0000032e: 	imulw	$0x1f40, %ax, %ax
    00000333: 	paddw	%xmm1, %xmm0
    00000337: 	movdqa	%xmm0, %xmm1
    0000033b: 	psrldq	$0x2, %xmm1
    00000340: 	paddw	%xmm1, %xmm0
    00000344: 	pextrw	$0x0, %xmm0, %edx
    00000349: 	addl	%r12d, %edx
    0000034c: 	cmpw	%ax, %dx
    0000034f: 	je	.Ltmp3494 # Offset: 847
    00000351: 	movl	current_test(%rip), %edx
    00000357: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000035e: 	movl	$0x1, %edi
    00000363: 	xorl	%eax, %eax
    00000365: 	callq	__printf_chk@PLT # Offset: 869
    0000036a: 	movl	iterations(%rip), %ecx
.Ltmp3494:
    00000370: 	addl	$0x1, %ebx
    00000373: 	cmpl	%ecx, %ebx
    00000375: 	jl	.Ltmp3495 # Offset: 885
.Ltmp3492:
    0000037b: 	movq	0x48(%rsp), %rsi
    00000380: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000387: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 903
    0000038c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000393: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000039a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a1: 	je	.Ltmp3496 # Offset: 929
.Ltmp3699:
    000003a7: 	movq	-0x20(%rax), %r12
    000003ab: 	callq	clock@PLT # Offset: 939
    000003b0: 	pxor	%xmm0, %xmm0
    000003b4: 	movq	%rax, end_time(%rip)
    000003bb: 	movq	%r12, %rdi
    000003be: 	subq	start_time(%rip), %rax
    000003c5: 	cvtsi2sd	%rax, %xmm0
    000003ca: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000003d2: 	callq	_Z13record_resultdPKc # Offset: 978
    000003d7: 	movq	0x130(%rsp), %rdi
    000003df: 	cmpq	0x60(%rsp), %rdi
    000003e4: 	je	.Ltmp3497 # Offset: 996
    000003e6: 	movq	0x140(%rsp), %rax
    000003ee: 	leaq	0x1(%rax), %rsi
    000003f2: 	callq	_ZdlPvm@PLT # Offset: 1010
.Ltmp3497:
    000003f7: 	movq	0x38(%rsp), %rsi
    000003fc: 	movq	0x48(%rsp), %rdi
    00000401: 	leaq	DATAat0x3d297(%rip), %rdx
    00000408: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1032
    0000040d: 	movswl	0x44(%rsp), %eax
    00000412: 	movl	%eax, 0x68(%rsp)
    00000416: 	callq	clock@PLT # Offset: 1046
    0000041b: 	movl	iterations(%rip), %ecx
    00000421: 	movq	%rax, start_time(%rip)
    00000428: 	testl	%ecx, %ecx
    0000042a: 	jle	.Ltmp3498 # Offset: 1066
    00000430: 	movzwl	0x50(%rsp), %r12d
    00000436: 	addw	0x54(%rsp), %r12w
    0000043c: 	xorl	%ebx, %ebx
    0000043e: 	addw	0x6c(%rsp), %r12w
    00000444: 	addw	0x44(%rsp), %r12w
    0000044a: 	movd	%r12d, %xmm0
    0000044f: 	punpcklwd	%xmm0, %xmm0
    00000453: 	pshufd	$0x0, %xmm0, %xmm7
    00000458: 	movaps	%xmm7, (%rsp)
    0000045c: 	nopl	(%rax) # Size: 4
.Ltmp3501:
    00000460: 	movq	%r13, %rax
    00000463: 	pxor	%xmm0, %xmm0
    00000467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3499:
    00000470: 	paddw	(%rsp), %xmm0
    00000475: 	addq	$0x10, %rax
    00000479: 	paddw	-0x10(%rax), %xmm0
    0000047e: 	cmpq	%r15, %rax
    00000481: 	jne	.Ltmp3499 # Offset: 1153
    00000483: 	movdqa	%xmm0, %xmm1
    00000487: 	cvttsd2si	init_value(%rip), %eax
    0000048f: 	psrldq	$0x8, %xmm1
    00000494: 	paddw	%xmm1, %xmm0
    00000498: 	movdqa	%xmm0, %xmm1
    0000049c: 	psrldq	$0x4, %xmm1
    000004a1: 	addl	%r12d, %eax
    000004a4: 	imulw	$0x1f40, %ax, %ax
    000004a9: 	paddw	%xmm1, %xmm0
    000004ad: 	movdqa	%xmm0, %xmm1
    000004b1: 	psrldq	$0x2, %xmm1
    000004b6: 	paddw	%xmm1, %xmm0
    000004ba: 	pextrw	$0x0, %xmm0, %edx
    000004bf: 	cmpw	%dx, %ax
    000004c2: 	je	.Ltmp3500 # Offset: 1218
    000004c4: 	movl	current_test(%rip), %edx
    000004ca: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000004d1: 	movl	$0x1, %edi
    000004d6: 	xorl	%eax, %eax
    000004d8: 	callq	__printf_chk@PLT # Offset: 1240
    000004dd: 	movl	iterations(%rip), %ecx
.Ltmp3500:
    000004e3: 	addl	$0x1, %ebx
    000004e6: 	cmpl	%ecx, %ebx
    000004e8: 	jl	.Ltmp3501 # Offset: 1256
.Ltmp3498:
    000004ee: 	movq	0x48(%rsp), %rsi
    000004f3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1274
    000004ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000506: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000050d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000514: 	je	.Ltmp3502 # Offset: 1300
.Ltmp3698:
    0000051a: 	movq	-0x20(%rax), %r12
    0000051e: 	callq	clock@PLT # Offset: 1310
    00000523: 	pxor	%xmm0, %xmm0
    00000527: 	movq	%rax, end_time(%rip)
    0000052e: 	movq	%r12, %rdi
    00000531: 	subq	start_time(%rip), %rax
    00000538: 	cvtsi2sd	%rax, %xmm0
    0000053d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000545: 	callq	_Z13record_resultdPKc # Offset: 1349
    0000054a: 	movq	0x130(%rsp), %rdi
    00000552: 	cmpq	0x60(%rsp), %rdi
    00000557: 	je	.Ltmp3503 # Offset: 1367
    00000559: 	movq	0x140(%rsp), %rax
    00000561: 	leaq	0x1(%rax), %rsi
    00000565: 	callq	_ZdlPvm@PLT # Offset: 1381
.Ltmp3503:
    0000056a: 	movq	0x38(%rsp), %rsi
    0000056f: 	movq	0x48(%rsp), %rdi
    00000574: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000057b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1403
    00000580: 	callq	clock@PLT # Offset: 1408
    00000585: 	movl	iterations(%rip), %ecx
    0000058b: 	xorl	%ebx, %ebx
    0000058d: 	movq	%rax, start_time(%rip)
    00000594: 	testl	%ecx, %ecx
    00000596: 	jle	.Ltmp3504 # Offset: 1430
    0000059c: 	movd	%r14d, %xmm0
    000005a1: 	movd	0x50(%rsp), %xmm1
    000005a7: 	leaq	DATAat0x3d1d8(%rip), %r12
    000005ae: 	punpcklwd	%xmm0, %xmm0
    000005b2: 	punpcklwd	%xmm1, %xmm1
    000005b6: 	pshufd	$0x0, %xmm0, %xmm5
    000005bb: 	movd	0x54(%rsp), %xmm0
    000005c1: 	pshufd	$0x0, %xmm1, %xmm1
    000005c6: 	punpcklwd	%xmm0, %xmm0
    000005ca: 	movaps	%xmm5, 0x10(%rsp)
    000005cf: 	movdqa	%xmm1, %xmm5
    000005d3: 	pshufd	$0x0, %xmm0, %xmm0
    000005d8: 	paddw	%xmm0, %xmm5
    000005dc: 	movd	0x44(%rsp), %xmm0
    000005e2: 	punpcklwd	%xmm0, %xmm0
    000005e6: 	movaps	%xmm5, 0x20(%rsp)
    000005eb: 	pshufd	$0x0, %xmm0, %xmm6
    000005f0: 	movaps	%xmm6, (%rsp)
    000005f4: 	nopl	(%rax) # Size: 4
.Ltmp3507:
    000005f8: 	movq	%r13, %rax
    000005fb: 	pxor	%xmm0, %xmm0
    000005ff: 	nop # Size: 1
.Ltmp3505:
    00000600: 	movdqa	(%rsp), %xmm1
    00000605: 	paddw	0x10(%rsp), %xmm0
    0000060b: 	addq	$0x10, %rax
    0000060f: 	paddw	-0x10(%rax), %xmm1
    00000614: 	paddw	0x20(%rsp), %xmm0
    0000061a: 	paddw	%xmm1, %xmm0
    0000061e: 	cmpq	%r15, %rax
    00000621: 	jne	.Ltmp3505 # Offset: 1569
    00000623: 	movdqa	%xmm0, %xmm1
    00000627: 	cvttsd2si	init_value(%rip), %eax
    0000062f: 	psrldq	$0x8, %xmm1
    00000634: 	paddw	%xmm1, %xmm0
    00000638: 	movdqa	%xmm0, %xmm1
    0000063c: 	psrldq	$0x4, %xmm1
    00000641: 	addl	%r14d, %eax
    00000644: 	addw	0x50(%rsp), %ax
    00000649: 	addw	0x54(%rsp), %ax
    0000064e: 	paddw	%xmm1, %xmm0
    00000652: 	addw	0x44(%rsp), %ax
    00000657: 	movdqa	%xmm0, %xmm1
    0000065b: 	imulw	$0x1f40, %ax, %ax
    00000660: 	psrldq	$0x2, %xmm1
    00000665: 	paddw	%xmm1, %xmm0
    00000669: 	pextrw	$0x0, %xmm0, %edx
    0000066e: 	cmpw	%dx, %ax
    00000671: 	je	.Ltmp3506 # Offset: 1649
    00000673: 	movl	current_test(%rip), %edx
    00000679: 	movq	%r12, %rsi
    0000067c: 	movl	$0x1, %edi
    00000681: 	xorl	%eax, %eax
    00000683: 	callq	__printf_chk@PLT # Offset: 1667
    00000688: 	movl	iterations(%rip), %ecx
.Ltmp3506:
    0000068e: 	addl	$0x1, %ebx
    00000691: 	cmpl	%ecx, %ebx
    00000693: 	jl	.Ltmp3507 # Offset: 1683
.Ltmp3504:
    00000699: 	movq	0x48(%rsp), %rsi
    0000069e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000006a5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1701
    000006aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006b1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000006b8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006bf: 	je	.Ltmp3508 # Offset: 1727
.Ltmp3697:
    000006c5: 	movq	-0x20(%rax), %r12
    000006c9: 	callq	clock@PLT # Offset: 1737
    000006ce: 	pxor	%xmm0, %xmm0
    000006d2: 	movq	%rax, end_time(%rip)
    000006d9: 	movq	%r12, %rdi
    000006dc: 	subq	start_time(%rip), %rax
    000006e3: 	cvtsi2sd	%rax, %xmm0
    000006e8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006f0: 	callq	_Z13record_resultdPKc # Offset: 1776
    000006f5: 	movq	0x130(%rsp), %rdi
    000006fd: 	cmpq	0x60(%rsp), %rdi
    00000702: 	je	.Ltmp3509 # Offset: 1794
    00000704: 	movq	0x140(%rsp), %rax
    0000070c: 	leaq	0x1(%rax), %rsi
    00000710: 	callq	_ZdlPvm@PLT # Offset: 1808
.Ltmp3509:
    00000715: 	movq	0x38(%rsp), %rsi
    0000071a: 	movq	0x48(%rsp), %rdi
    0000071f: 	leaq	DATAat0x3d2c8(%rip), %rdx
    00000726: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1830
    0000072b: 	callq	clock@PLT # Offset: 1835
    00000730: 	movl	iterations(%rip), %ecx
    00000736: 	xorl	%ebx, %ebx
    00000738: 	movq	%rax, start_time(%rip)
    0000073f: 	testl	%ecx, %ecx
    00000741: 	jle	.Ltmp3510 # Offset: 1857
    00000747: 	movd	%r14d, %xmm0
    0000074c: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000753: 	punpcklwd	%xmm0, %xmm0
    00000757: 	pshufd	$0x0, %xmm0, %xmm7
    0000075c: 	movaps	%xmm7, (%rsp)
.Ltmp3513:
    00000760: 	movq	%r13, %rax
    00000763: 	pxor	%xmm0, %xmm0
    00000767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3511:
    00000770: 	psubw	(%rsp), %xmm0
    00000775: 	addq	$0x10, %rax
    00000779: 	paddw	-0x10(%rax), %xmm0
    0000077e: 	cmpq	%r15, %rax
    00000781: 	jne	.Ltmp3511 # Offset: 1921
    00000783: 	movdqa	%xmm0, %xmm1
    00000787: 	cvttsd2si	init_value(%rip), %eax
    0000078f: 	psrldq	$0x8, %xmm1
    00000794: 	paddw	%xmm1, %xmm0
    00000798: 	movdqa	%xmm0, %xmm1
    0000079c: 	psrldq	$0x4, %xmm1
    000007a1: 	subl	%r14d, %eax
    000007a4: 	imulw	$0x1f40, %ax, %ax
    000007a9: 	paddw	%xmm1, %xmm0
    000007ad: 	movdqa	%xmm0, %xmm1
    000007b1: 	psrldq	$0x2, %xmm1
    000007b6: 	paddw	%xmm1, %xmm0
    000007ba: 	pextrw	$0x0, %xmm0, %edx
    000007bf: 	cmpw	%dx, %ax
    000007c2: 	je	.Ltmp3512 # Offset: 1986
    000007c4: 	movl	current_test(%rip), %edx
    000007ca: 	movq	%r12, %rsi
    000007cd: 	movl	$0x1, %edi
    000007d2: 	xorl	%eax, %eax
    000007d4: 	callq	__printf_chk@PLT # Offset: 2004
    000007d9: 	movl	iterations(%rip), %ecx
.Ltmp3512:
    000007df: 	addl	$0x1, %ebx
    000007e2: 	cmpl	%ecx, %ebx
    000007e4: 	jl	.Ltmp3513 # Offset: 2020
.Ltmp3510:
    000007ea: 	movq	0x48(%rsp), %rsi
    000007ef: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007f6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2038
    000007fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000802: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000809: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000810: 	je	.Ltmp3514 # Offset: 2064
.Ltmp3696:
    00000816: 	movq	-0x20(%rax), %r12
    0000081a: 	callq	clock@PLT # Offset: 2074
    0000081f: 	pxor	%xmm0, %xmm0
    00000823: 	movq	%rax, end_time(%rip)
    0000082a: 	movq	%r12, %rdi
    0000082d: 	subq	start_time(%rip), %rax
    00000834: 	cvtsi2sd	%rax, %xmm0
    00000839: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000841: 	callq	_Z13record_resultdPKc # Offset: 2113
    00000846: 	movq	0x130(%rsp), %rdi
    0000084e: 	cmpq	0x60(%rsp), %rdi
    00000853: 	je	.Ltmp3515 # Offset: 2131
    00000855: 	movq	0x140(%rsp), %rax
    0000085d: 	leaq	0x1(%rax), %rsi
    00000861: 	callq	_ZdlPvm@PLT # Offset: 2145
.Ltmp3515:
    00000866: 	movq	0x38(%rsp), %rsi
    0000086b: 	movq	0x48(%rsp), %rdi
    00000870: 	leaq	DATAat0x3d2db(%rip), %rdx
    00000877: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2167
    0000087c: 	callq	clock@PLT # Offset: 2172
    00000881: 	movl	iterations(%rip), %ecx
    00000887: 	movq	%rax, start_time(%rip)
    0000088e: 	testl	%ecx, %ecx
    00000890: 	jle	.Ltmp3516 # Offset: 2192
    00000896: 	movzwl	0x50(%rsp), %r12d
    0000089c: 	addw	0x54(%rsp), %r12w
    000008a2: 	xorl	%ebx, %ebx
    000008a4: 	addw	0x6c(%rsp), %r12w
    000008aa: 	addw	0x44(%rsp), %r12w
    000008b0: 	movd	%r12d, %xmm0
    000008b5: 	punpcklwd	%xmm0, %xmm0
    000008b9: 	pshufd	$0x0, %xmm0, %xmm5
    000008be: 	movaps	%xmm5, (%rsp)
    000008c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3519:
    000008c8: 	movq	%r13, %rax
    000008cb: 	pxor	%xmm0, %xmm0
    000008cf: 	nop # Size: 1
.Ltmp3517:
    000008d0: 	psubw	(%rsp), %xmm0
    000008d5: 	addq	$0x10, %rax
    000008d9: 	paddw	-0x10(%rax), %xmm0
    000008de: 	cmpq	%r15, %rax
    000008e1: 	jne	.Ltmp3517 # Offset: 2273
    000008e3: 	movdqa	%xmm0, %xmm1
    000008e7: 	cvttsd2si	init_value(%rip), %eax
    000008ef: 	psrldq	$0x8, %xmm1
    000008f4: 	paddw	%xmm1, %xmm0
    000008f8: 	movdqa	%xmm0, %xmm1
    000008fc: 	psrldq	$0x4, %xmm1
    00000901: 	subl	%r12d, %eax
    00000904: 	imulw	$0x1f40, %ax, %ax
    00000909: 	paddw	%xmm1, %xmm0
    0000090d: 	movdqa	%xmm0, %xmm1
    00000911: 	psrldq	$0x2, %xmm1
    00000916: 	paddw	%xmm1, %xmm0
    0000091a: 	pextrw	$0x0, %xmm0, %edx
    0000091f: 	cmpw	%dx, %ax
    00000922: 	je	.Ltmp3518 # Offset: 2338
    00000924: 	movl	current_test(%rip), %edx
    0000092a: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000931: 	movl	$0x1, %edi
    00000936: 	xorl	%eax, %eax
    00000938: 	callq	__printf_chk@PLT # Offset: 2360
    0000093d: 	movl	iterations(%rip), %ecx
.Ltmp3518:
    00000943: 	addl	$0x1, %ebx
    00000946: 	cmpl	%ecx, %ebx
    00000948: 	jl	.Ltmp3519 # Offset: 2376
.Ltmp3516:
    0000094e: 	movq	0x48(%rsp), %rsi
    00000953: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000095a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2394
    0000095f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000966: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000096d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000974: 	je	.Ltmp3520 # Offset: 2420
.Ltmp3695:
    0000097a: 	movq	-0x20(%rax), %r12
    0000097e: 	callq	clock@PLT # Offset: 2430
    00000983: 	pxor	%xmm0, %xmm0
    00000987: 	movq	%rax, end_time(%rip)
    0000098e: 	movq	%r12, %rdi
    00000991: 	subq	start_time(%rip), %rax
    00000998: 	cvtsi2sd	%rax, %xmm0
    0000099d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000009a5: 	callq	_Z13record_resultdPKc # Offset: 2469
    000009aa: 	movq	0x130(%rsp), %rdi
    000009b2: 	cmpq	0x60(%rsp), %rdi
    000009b7: 	je	.Ltmp3521 # Offset: 2487
    000009b9: 	movq	0x140(%rsp), %rax
    000009c1: 	leaq	0x1(%rax), %rsi
    000009c5: 	callq	_ZdlPvm@PLT # Offset: 2501
.Ltmp3521:
    000009ca: 	movq	0x38(%rsp), %rsi
    000009cf: 	movq	0x48(%rsp), %rdi
    000009d4: 	leaq	DATAat0x3d2f8(%rip), %rdx
    000009db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2523
    000009e0: 	callq	clock@PLT # Offset: 2528
    000009e5: 	movl	iterations(%rip), %ecx
    000009eb: 	xorl	%ebx, %ebx
    000009ed: 	movq	%rax, start_time(%rip)
    000009f4: 	testl	%ecx, %ecx
    000009f6: 	jle	.Ltmp3522 # Offset: 2550
    000009fc: 	movd	%r14d, %xmm0
    00000a01: 	movd	0x54(%rsp), %xmm1
    00000a07: 	movd	0x44(%rsp), %xmm2
    00000a0d: 	punpcklwd	%xmm0, %xmm0
    00000a11: 	punpcklwd	%xmm1, %xmm1
    00000a15: 	punpcklwd	%xmm2, %xmm2
    00000a19: 	pshufd	$0x0, %xmm0, %xmm6
    00000a1e: 	movd	0x50(%rsp), %xmm0
    00000a24: 	pshufd	$0x0, %xmm1, %xmm1
    00000a29: 	punpcklwd	%xmm0, %xmm0
    00000a2d: 	pshufd	$0x0, %xmm2, %xmm7
    00000a32: 	movaps	%xmm6, 0x10(%rsp)
    00000a37: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000a3e: 	pshufd	$0x0, %xmm0, %xmm0
    00000a43: 	movaps	%xmm7, (%rsp)
    00000a47: 	paddw	%xmm0, %xmm1
    00000a4b: 	movaps	%xmm1, 0x20(%rsp)
.Ltmp3525:
    00000a50: 	movq	%r13, %rax
    00000a53: 	pxor	%xmm0, %xmm0
    00000a57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3523:
    00000a60: 	movdqa	(%rax), %xmm1
    00000a64: 	psubw	0x10(%rsp), %xmm0
    00000a6a: 	addq	$0x10, %rax
    00000a6e: 	psubw	0x20(%rsp), %xmm0
    00000a74: 	psubw	(%rsp), %xmm1
    00000a79: 	paddw	%xmm1, %xmm0
    00000a7d: 	cmpq	%r15, %rax
    00000a80: 	jne	.Ltmp3523 # Offset: 2688
    00000a82: 	movdqa	%xmm0, %xmm1
    00000a86: 	cvttsd2si	init_value(%rip), %eax
    00000a8e: 	psrldq	$0x8, %xmm1
    00000a93: 	paddw	%xmm1, %xmm0
    00000a97: 	movdqa	%xmm0, %xmm1
    00000a9b: 	psrldq	$0x4, %xmm1
    00000aa0: 	subl	%r14d, %eax
    00000aa3: 	subw	0x50(%rsp), %ax
    00000aa8: 	subw	0x54(%rsp), %ax
    00000aad: 	paddw	%xmm1, %xmm0
    00000ab1: 	subw	0x44(%rsp), %ax
    00000ab6: 	movdqa	%xmm0, %xmm1
    00000aba: 	imulw	$0x1f40, %ax, %ax
    00000abf: 	psrldq	$0x2, %xmm1
    00000ac4: 	paddw	%xmm1, %xmm0
    00000ac8: 	pextrw	$0x0, %xmm0, %edx
    00000acd: 	cmpw	%dx, %ax
    00000ad0: 	je	.Ltmp3524 # Offset: 2768
    00000ad2: 	movl	current_test(%rip), %edx
    00000ad8: 	movq	%r12, %rsi
    00000adb: 	movl	$0x1, %edi
    00000ae0: 	xorl	%eax, %eax
    00000ae2: 	callq	__printf_chk@PLT # Offset: 2786
    00000ae7: 	movl	iterations(%rip), %ecx
.Ltmp3524:
    00000aed: 	addl	$0x1, %ebx
    00000af0: 	cmpl	%ecx, %ebx
    00000af2: 	jl	.Ltmp3525 # Offset: 2802
.Ltmp3522:
    00000af8: 	movq	0x48(%rsp), %rsi
    00000afd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000b04: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2820
    00000b09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b10: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b1e: 	je	.Ltmp3526 # Offset: 2846
.Ltmp3694:
    00000b24: 	movq	-0x20(%rax), %r12
    00000b28: 	callq	clock@PLT # Offset: 2856
    00000b2d: 	pxor	%xmm0, %xmm0
    00000b31: 	movq	%rax, end_time(%rip)
    00000b38: 	movq	%r12, %rdi
    00000b3b: 	subq	start_time(%rip), %rax
    00000b42: 	cvtsi2sd	%rax, %xmm0
    00000b47: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b4f: 	callq	_Z13record_resultdPKc # Offset: 2895
    00000b54: 	movq	0x130(%rsp), %rdi
    00000b5c: 	cmpq	0x60(%rsp), %rdi
    00000b61: 	je	.Ltmp3527 # Offset: 2913
    00000b63: 	movq	0x140(%rsp), %rax
    00000b6b: 	leaq	0x1(%rax), %rsi
    00000b6f: 	callq	_ZdlPvm@PLT # Offset: 2927
.Ltmp3527:
    00000b74: 	movq	0x38(%rsp), %rsi
    00000b79: 	movq	0x48(%rsp), %rdi
    00000b7e: 	leaq	DATAat0x3d316(%rip), %rdx
    00000b85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2949
    00000b8a: 	callq	clock@PLT # Offset: 2954
    00000b8f: 	movl	iterations(%rip), %ecx
    00000b95: 	xorl	%ebx, %ebx
    00000b97: 	movq	%rax, start_time(%rip)
    00000b9e: 	testl	%ecx, %ecx
    00000ba0: 	jle	.Ltmp3528 # Offset: 2976
    00000ba6: 	movd	%r14d, %xmm0
    00000bab: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000bb2: 	punpcklwd	%xmm0, %xmm0
    00000bb6: 	pshufd	$0x0, %xmm0, %xmm5
    00000bbb: 	movaps	%xmm5, (%rsp)
    00000bbf: 	nop # Size: 1
.Ltmp3531:
    00000bc0: 	movq	%r13, %rax
    00000bc3: 	pxor	%xmm0, %xmm0
    00000bc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3529:
    00000bd0: 	movdqa	(%rsp), %xmm1
    00000bd5: 	addq	$0x10, %rax
    00000bd9: 	pmullw	-0x10(%rax), %xmm1
    00000bde: 	paddw	%xmm1, %xmm0
    00000be2: 	cmpq	%r15, %rax
    00000be5: 	jne	.Ltmp3529 # Offset: 3045
    00000be7: 	movdqa	%xmm0, %xmm1
    00000beb: 	cvttsd2si	init_value(%rip), %eax
    00000bf3: 	psrldq	$0x8, %xmm1
    00000bf8: 	paddw	%xmm1, %xmm0
    00000bfc: 	movdqa	%xmm0, %xmm1
    00000c00: 	psrldq	$0x4, %xmm1
    00000c05: 	imull	%r14d, %eax
    00000c09: 	paddw	%xmm1, %xmm0
    00000c0d: 	movdqa	%xmm0, %xmm1
    00000c11: 	psrldq	$0x2, %xmm1
    00000c16: 	imulw	$0x1f40, %ax, %ax
    00000c1b: 	paddw	%xmm1, %xmm0
    00000c1f: 	pextrw	$0x0, %xmm0, %edx
    00000c24: 	cmpw	%dx, %ax
    00000c27: 	je	.Ltmp3530 # Offset: 3111
    00000c29: 	movl	current_test(%rip), %edx
    00000c2f: 	movq	%r12, %rsi
    00000c32: 	movl	$0x1, %edi
    00000c37: 	xorl	%eax, %eax
    00000c39: 	callq	__printf_chk@PLT # Offset: 3129
    00000c3e: 	movl	iterations(%rip), %ecx
.Ltmp3530:
    00000c44: 	addl	$0x1, %ebx
    00000c47: 	cmpl	%ecx, %ebx
    00000c49: 	jl	.Ltmp3531 # Offset: 3145
.Ltmp3528:
    00000c4f: 	movq	0x48(%rsp), %rsi
    00000c54: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c5b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3163
    00000c60: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c67: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c6e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c75: 	je	.Ltmp3532 # Offset: 3189
.Ltmp3693:
    00000c7b: 	movq	-0x20(%rax), %r12
    00000c7f: 	callq	clock@PLT # Offset: 3199
    00000c84: 	pxor	%xmm0, %xmm0
    00000c88: 	movq	%rax, end_time(%rip)
    00000c8f: 	movq	%r12, %rdi
    00000c92: 	subq	start_time(%rip), %rax
    00000c99: 	cvtsi2sd	%rax, %xmm0
    00000c9e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ca6: 	callq	_Z13record_resultdPKc # Offset: 3238
    00000cab: 	movq	0x130(%rsp), %rdi
    00000cb3: 	cmpq	0x60(%rsp), %rdi
    00000cb8: 	je	.Ltmp3533 # Offset: 3256
    00000cba: 	movq	0x140(%rsp), %rax
    00000cc2: 	leaq	0x1(%rax), %rsi
    00000cc6: 	callq	_ZdlPvm@PLT # Offset: 3270
.Ltmp3533:
    00000ccb: 	movq	0x38(%rsp), %rsi
    00000cd0: 	movq	0x48(%rsp), %rdi
    00000cd5: 	leaq	DATAat0x3d329(%rip), %rdx
    00000cdc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3292
    00000ce1: 	callq	clock@PLT # Offset: 3297
    00000ce6: 	movl	iterations(%rip), %ecx
    00000cec: 	movq	%rax, start_time(%rip)
    00000cf3: 	testl	%ecx, %ecx
    00000cf5: 	jle	.Ltmp3534 # Offset: 3317
    00000cfb: 	movzwl	0x50(%rsp), %r12d
    00000d01: 	imulw	0x54(%rsp), %r12w
    00000d08: 	xorl	%ebx, %ebx
    00000d0a: 	imulw	0x6c(%rsp), %r12w
    00000d11: 	imulw	0x44(%rsp), %r12w
    00000d18: 	movd	%r12d, %xmm0
    00000d1d: 	punpcklwd	%xmm0, %xmm0
    00000d21: 	pshufd	$0x0, %xmm0, %xmm6
    00000d26: 	movaps	%xmm6, (%rsp)
    00000d2a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3537:
    00000d30: 	movq	%r13, %rax
    00000d33: 	pxor	%xmm0, %xmm0
    00000d37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3535:
    00000d40: 	movdqa	(%rsp), %xmm1
    00000d45: 	addq	$0x10, %rax
    00000d49: 	pmullw	-0x10(%rax), %xmm1
    00000d4e: 	paddw	%xmm1, %xmm0
    00000d52: 	cmpq	%r15, %rax
    00000d55: 	jne	.Ltmp3535 # Offset: 3413
    00000d57: 	movdqa	%xmm0, %xmm1
    00000d5b: 	cvttsd2si	init_value(%rip), %eax
    00000d63: 	psrldq	$0x8, %xmm1
    00000d68: 	paddw	%xmm1, %xmm0
    00000d6c: 	movdqa	%xmm0, %xmm1
    00000d70: 	psrldq	$0x4, %xmm1
    00000d75: 	imull	%r12d, %eax
    00000d79: 	paddw	%xmm1, %xmm0
    00000d7d: 	movdqa	%xmm0, %xmm1
    00000d81: 	psrldq	$0x2, %xmm1
    00000d86: 	imulw	$0x1f40, %ax, %ax
    00000d8b: 	paddw	%xmm1, %xmm0
    00000d8f: 	pextrw	$0x0, %xmm0, %edx
    00000d94: 	cmpw	%dx, %ax
    00000d97: 	je	.Ltmp3536 # Offset: 3479
    00000d99: 	movl	current_test(%rip), %edx
    00000d9f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000da6: 	movl	$0x1, %edi
    00000dab: 	xorl	%eax, %eax
    00000dad: 	callq	__printf_chk@PLT # Offset: 3501
    00000db2: 	movl	iterations(%rip), %ecx
.Ltmp3536:
    00000db8: 	addl	$0x1, %ebx
    00000dbb: 	cmpl	%ecx, %ebx
    00000dbd: 	jl	.Ltmp3537 # Offset: 3517
.Ltmp3534:
    00000dc3: 	movq	0x48(%rsp), %rsi
    00000dc8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000dcf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3535
    00000dd4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ddb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000de2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000de9: 	je	.Ltmp3538 # Offset: 3561
.Ltmp3692:
    00000def: 	movq	-0x20(%rax), %r12
    00000df3: 	callq	clock@PLT # Offset: 3571
    00000df8: 	pxor	%xmm0, %xmm0
    00000dfc: 	movq	%rax, end_time(%rip)
    00000e03: 	movq	%r12, %rdi
    00000e06: 	subq	start_time(%rip), %rax
    00000e0d: 	cvtsi2sd	%rax, %xmm0
    00000e12: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e1a: 	callq	_Z13record_resultdPKc # Offset: 3610
    00000e1f: 	movq	0x130(%rsp), %rdi
    00000e27: 	cmpq	0x60(%rsp), %rdi
    00000e2c: 	je	.Ltmp3539 # Offset: 3628
    00000e2e: 	movq	0x140(%rsp), %rax
    00000e36: 	leaq	0x1(%rax), %rsi
    00000e3a: 	callq	_ZdlPvm@PLT # Offset: 3642
.Ltmp3539:
    00000e3f: 	movq	0x38(%rsp), %rsi
    00000e44: 	movq	0x48(%rsp), %rdi
    00000e49: 	leaq	DATAat0x3d600(%rip), %rdx
    00000e50: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3664
    00000e55: 	callq	clock@PLT # Offset: 3669
    00000e5a: 	movl	iterations(%rip), %ecx
    00000e60: 	movq	%rax, start_time(%rip)
    00000e67: 	testl	%ecx, %ecx
    00000e69: 	jle	.Ltmp3540 # Offset: 3689
    00000e6f: 	movzwl	0x50(%rsp), %r12d
    00000e75: 	imulw	0x54(%rsp), %r12w
    00000e7c: 	xorl	%ebx, %ebx
    00000e7e: 	imulw	0x6c(%rsp), %r12w
    00000e85: 	imulw	0x44(%rsp), %r12w
    00000e8c: 	movd	%r12d, %xmm0
    00000e91: 	punpcklwd	%xmm0, %xmm0
    00000e95: 	pshufd	$0x0, %xmm0, %xmm7
    00000e9a: 	movaps	%xmm7, (%rsp)
    00000e9e: 	nop # Size: 2
.Ltmp3543:
    00000ea0: 	movq	%r13, %rax
    00000ea3: 	pxor	%xmm0, %xmm0
    00000ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3541:
    00000eb0: 	paddw	(%rsp), %xmm0
    00000eb5: 	addq	$0x10, %rax
    00000eb9: 	paddw	-0x10(%rax), %xmm0
    00000ebe: 	cmpq	%r15, %rax
    00000ec1: 	jne	.Ltmp3541 # Offset: 3777
    00000ec3: 	movdqa	%xmm0, %xmm1
    00000ec7: 	cvttsd2si	init_value(%rip), %eax
    00000ecf: 	psrldq	$0x8, %xmm1
    00000ed4: 	paddw	%xmm1, %xmm0
    00000ed8: 	movdqa	%xmm0, %xmm1
    00000edc: 	psrldq	$0x4, %xmm1
    00000ee1: 	addl	%r12d, %eax
    00000ee4: 	imulw	$0x1f40, %ax, %ax
    00000ee9: 	paddw	%xmm1, %xmm0
    00000eed: 	movdqa	%xmm0, %xmm1
    00000ef1: 	psrldq	$0x2, %xmm1
    00000ef6: 	paddw	%xmm1, %xmm0
    00000efa: 	pextrw	$0x0, %xmm0, %edx
    00000eff: 	cmpw	%dx, %ax
    00000f02: 	je	.Ltmp3542 # Offset: 3842
    00000f04: 	movl	current_test(%rip), %edx
    00000f0a: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000f11: 	movl	$0x1, %edi
    00000f16: 	xorl	%eax, %eax
    00000f18: 	callq	__printf_chk@PLT # Offset: 3864
    00000f1d: 	movl	iterations(%rip), %ecx
.Ltmp3542:
    00000f23: 	addl	$0x1, %ebx
    00000f26: 	cmpl	%ecx, %ebx
    00000f28: 	jl	.Ltmp3543 # Offset: 3880
.Ltmp3540:
    00000f2e: 	movq	0x48(%rsp), %rsi
    00000f33: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f3a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3898
    00000f3f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f46: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f4d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f54: 	je	.Ltmp3544 # Offset: 3924
.Ltmp3691:
    00000f5a: 	movq	-0x20(%rax), %r12
    00000f5e: 	callq	clock@PLT # Offset: 3934
    00000f63: 	pxor	%xmm0, %xmm0
    00000f67: 	movq	%rax, end_time(%rip)
    00000f6e: 	movq	%r12, %rdi
    00000f71: 	subq	start_time(%rip), %rax
    00000f78: 	cvtsi2sd	%rax, %xmm0
    00000f7d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000f85: 	callq	_Z13record_resultdPKc # Offset: 3973
    00000f8a: 	movq	0x130(%rsp), %rdi
    00000f92: 	cmpq	0x60(%rsp), %rdi
    00000f97: 	je	.Ltmp3545 # Offset: 3991
    00000f99: 	movq	0x140(%rsp), %rax
    00000fa1: 	leaq	0x1(%rax), %rsi
    00000fa5: 	callq	_ZdlPvm@PLT # Offset: 4005
.Ltmp3545:
    00000faa: 	movq	0x38(%rsp), %rsi
    00000faf: 	movq	0x48(%rsp), %rdi
    00000fb4: 	leaq	DATAat0x3d620(%rip), %rdx
    00000fbb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4027
    00000fc0: 	callq	clock@PLT # Offset: 4032
    00000fc5: 	movl	iterations(%rip), %ecx
    00000fcb: 	movq	%rax, start_time(%rip)
    00000fd2: 	testl	%ecx, %ecx
    00000fd4: 	jle	.Ltmp3546 # Offset: 4052
    00000fda: 	movzwl	0x50(%rsp), %eax
    00000fdf: 	imulw	0x54(%rsp), %ax
    00000fe5: 	xorl	%ebx, %ebx
    00000fe7: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000fee: 	imulw	0x6c(%rsp), %ax
    00000ff4: 	imulw	0x44(%rsp), %ax
    00000ffa: 	movd	%eax, %xmm0
    00000ffe: 	punpcklwd	%xmm0, %xmm0
    00001002: 	pshufd	$0x0, %xmm0, %xmm5
    00001007: 	movaps	%xmm5, (%rsp)
    0000100b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3549:
    00001010: 	movq	%r13, %rax
    00001013: 	pxor	%xmm0, %xmm0
    00001017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3547:
    00001020: 	movdqa	(%rsp), %xmm1
    00001025: 	addq	$0x10, %rax
    00001029: 	pmullw	-0x10(%rax), %xmm1
    0000102e: 	paddw	%xmm1, %xmm0
    00001032: 	cmpq	%r15, %rax
    00001035: 	jne	.Ltmp3547 # Offset: 4149
    00001037: 	movdqa	%xmm0, %xmm1
    0000103b: 	cvttsd2si	init_value(%rip), %eax
    00001043: 	psrldq	$0x8, %xmm1
    00001048: 	paddw	%xmm1, %xmm0
    0000104c: 	movdqa	%xmm0, %xmm1
    00001050: 	psrldq	$0x4, %xmm1
    00001055: 	imull	%r14d, %eax
    00001059: 	imulw	0x50(%rsp), %ax
    0000105f: 	paddw	%xmm1, %xmm0
    00001063: 	imulw	0x54(%rsp), %ax
    00001069: 	movdqa	%xmm0, %xmm1
    0000106d: 	imulw	0x44(%rsp), %ax
    00001073: 	psrldq	$0x2, %xmm1
    00001078: 	paddw	%xmm1, %xmm0
    0000107c: 	pextrw	$0x0, %xmm0, %edx
    00001081: 	imulw	$0x1f40, %ax, %ax
    00001086: 	cmpw	%dx, %ax
    00001089: 	je	.Ltmp3548 # Offset: 4233
    0000108b: 	movl	current_test(%rip), %edx
    00001091: 	movq	%r12, %rsi
    00001094: 	movl	$0x1, %edi
    00001099: 	xorl	%eax, %eax
    0000109b: 	callq	__printf_chk@PLT # Offset: 4251
    000010a0: 	movl	iterations(%rip), %ecx
.Ltmp3548:
    000010a6: 	addl	$0x1, %ebx
    000010a9: 	cmpl	%ecx, %ebx
    000010ab: 	jl	.Ltmp3549 # Offset: 4267
.Ltmp3546:
    000010b1: 	movq	0x48(%rsp), %rsi
    000010b6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000010bd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4285
    000010c2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010c9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010d7: 	je	.Ltmp3550 # Offset: 4311
.Ltmp3690:
    000010dd: 	movq	-0x20(%rax), %r12
    000010e1: 	callq	clock@PLT # Offset: 4321
    000010e6: 	pxor	%xmm0, %xmm0
    000010ea: 	movq	%rax, end_time(%rip)
    000010f1: 	movq	%r12, %rdi
    000010f4: 	subq	start_time(%rip), %rax
    000010fb: 	cvtsi2sd	%rax, %xmm0
    00001100: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001108: 	callq	_Z13record_resultdPKc # Offset: 4360
    0000110d: 	movq	0x130(%rsp), %rdi
    00001115: 	cmpq	0x60(%rsp), %rdi
    0000111a: 	je	.Ltmp3551 # Offset: 4378
    0000111c: 	movq	0x140(%rsp), %rax
    00001124: 	leaq	0x1(%rax), %rsi
    00001128: 	callq	_ZdlPvm@PLT # Offset: 4392
.Ltmp3551:
    0000112d: 	movq	0x38(%rsp), %rsi
    00001132: 	movq	0x48(%rsp), %rdi
    00001137: 	leaq	DATAat0x3d347(%rip), %rdx
    0000113e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4414
    00001143: 	callq	clock@PLT # Offset: 4419
    00001148: 	movl	iterations(%rip), %edi
    0000114e: 	xorl	%ebx, %ebx
    00001150: 	leaq	DATAat0x3d1d8(%rip), %r12
    00001157: 	movq	%rax, start_time(%rip)
    0000115e: 	testl	%edi, %edi
    00001160: 	jle	.Ltmp3552 # Offset: 4448
    00001162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3555:
    00001168: 	movq	%r13, %rcx
    0000116b: 	xorl	%esi, %esi
    0000116d: 	nopl	(%rax) # Size: 3
.Ltmp3553:
    00001170: 	movswl	(%rcx), %eax
    00001173: 	addq	$0x2, %rcx
    00001177: 	cltd
    00001178: 	idivl	%ebp
    0000117a: 	addl	%eax, %esi
    0000117c: 	cmpq	%r15, %rcx
    0000117f: 	jne	.Ltmp3553 # Offset: 4479
    00001181: 	cvttsd2si	init_value(%rip), %eax
    00001189: 	cwtl
    0000118a: 	cltd
    0000118b: 	idivl	%ebp
    0000118d: 	imulw	$0x1f40, %ax, %ax
    00001192: 	cmpw	%ax, %si
    00001195: 	je	.Ltmp3554 # Offset: 4501
    00001197: 	movl	current_test(%rip), %edx
    0000119d: 	movq	%r12, %rsi
    000011a0: 	movl	$0x1, %edi
    000011a5: 	xorl	%eax, %eax
    000011a7: 	callq	__printf_chk@PLT # Offset: 4519
    000011ac: 	movl	iterations(%rip), %edi
.Ltmp3554:
    000011b2: 	addl	$0x1, %ebx
    000011b5: 	cmpl	%edi, %ebx
    000011b7: 	jl	.Ltmp3555 # Offset: 4535
.Ltmp3552:
    000011b9: 	movq	0x48(%rsp), %rsi
    000011be: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011c5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4549
    000011ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011d1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011df: 	je	.Ltmp3556 # Offset: 4575
.Ltmp3689:
    000011e5: 	movq	-0x20(%rax), %r12
    000011e9: 	callq	clock@PLT # Offset: 4585
    000011ee: 	pxor	%xmm0, %xmm0
    000011f2: 	movq	%rax, end_time(%rip)
    000011f9: 	movq	%r12, %rdi
    000011fc: 	subq	start_time(%rip), %rax
    00001203: 	cvtsi2sd	%rax, %xmm0
    00001208: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001210: 	callq	_Z13record_resultdPKc # Offset: 4624
    00001215: 	movq	0x130(%rsp), %rdi
    0000121d: 	cmpq	0x60(%rsp), %rdi
    00001222: 	je	.Ltmp3557 # Offset: 4642
    00001224: 	movq	0x140(%rsp), %rax
    0000122c: 	leaq	0x1(%rax), %rsi
    00001230: 	callq	_ZdlPvm@PLT # Offset: 4656
.Ltmp3557:
    00001235: 	movq	0x38(%rsp), %rsi
    0000123a: 	movq	0x48(%rsp), %rdi
    0000123f: 	leaq	DATAat0x3d358(%rip), %rdx
    00001246: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4678
    0000124b: 	callq	clock@PLT # Offset: 4683
    00001250: 	movl	iterations(%rip), %edi
    00001256: 	xorl	%ebx, %ebx
    00001258: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000125f: 	movq	%rax, start_time(%rip)
    00001266: 	testl	%edi, %edi
    00001268: 	jle	.Ltmp3558 # Offset: 4712
    0000126e: 	nop # Size: 2
.Ltmp3561:
    00001270: 	movl	0x58(%rsp), %r8d
    00001275: 	movl	0x5c(%rsp), %r9d
    0000127a: 	movq	%r13, %rcx
    0000127d: 	xorl	%esi, %esi
    0000127f: 	movl	0x68(%rsp), %r10d
    00001284: 	nopl	(%rax) # Size: 4
.Ltmp3559:
    00001288: 	movswl	(%rcx), %eax
    0000128b: 	addq	$0x2, %rcx
    0000128f: 	cltd
    00001290: 	idivl	%ebp
    00001292: 	cltd
    00001293: 	idivl	%r8d
    00001296: 	cltd
    00001297: 	idivl	%r9d
    0000129a: 	cltd
    0000129b: 	idivl	%r10d
    0000129e: 	addl	%eax, %esi
    000012a0: 	cmpq	%r15, %rcx
    000012a3: 	jne	.Ltmp3559 # Offset: 4771
    000012a5: 	cvttsd2si	init_value(%rip), %eax
    000012ad: 	cwtl
    000012ae: 	cltd
    000012af: 	idivl	%ebp
    000012b1: 	cltd
    000012b2: 	idivl	0x58(%rsp)
    000012b6: 	cltd
    000012b7: 	idivl	0x5c(%rsp)
    000012bb: 	cltd
    000012bc: 	idivl	0x68(%rsp)
    000012c0: 	imulw	$0x1f40, %ax, %ax
    000012c5: 	cmpw	%ax, %si
    000012c8: 	je	.Ltmp3560 # Offset: 4808
    000012ca: 	movl	current_test(%rip), %edx
    000012d0: 	movq	%r12, %rsi
    000012d3: 	movl	$0x1, %edi
    000012d8: 	xorl	%eax, %eax
    000012da: 	callq	__printf_chk@PLT # Offset: 4826
    000012df: 	movl	iterations(%rip), %edi
.Ltmp3560:
    000012e5: 	addl	$0x1, %ebx
    000012e8: 	cmpl	%edi, %ebx
    000012ea: 	jl	.Ltmp3561 # Offset: 4842
.Ltmp3558:
    000012ec: 	movq	0x48(%rsp), %rsi
    000012f1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4856
    000012fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001304: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000130b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001312: 	je	.Ltmp3562 # Offset: 4882
.Ltmp3688:
    00001318: 	movq	-0x20(%rax), %r12
    0000131c: 	callq	clock@PLT # Offset: 4892
    00001321: 	pxor	%xmm0, %xmm0
    00001325: 	movq	%rax, end_time(%rip)
    0000132c: 	movq	%r12, %rdi
    0000132f: 	subq	start_time(%rip), %rax
    00001336: 	cvtsi2sd	%rax, %xmm0
    0000133b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001343: 	callq	_Z13record_resultdPKc # Offset: 4931
    00001348: 	movq	0x130(%rsp), %rdi
    00001350: 	cmpq	0x60(%rsp), %rdi
    00001355: 	je	.Ltmp3563 # Offset: 4949
    00001357: 	movq	0x140(%rsp), %rax
    0000135f: 	leaq	0x1(%rax), %rsi
    00001363: 	callq	_ZdlPvm@PLT # Offset: 4963
.Ltmp3563:
    00001368: 	movq	0x38(%rsp), %rsi
    0000136d: 	movq	0x48(%rsp), %rdi
    00001372: 	leaq	DATAat0x3d373(%rip), %rdx
    00001379: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4985
    0000137e: 	callq	clock@PLT # Offset: 4990
    00001383: 	movl	iterations(%rip), %ecx
    00001389: 	movq	%rax, start_time(%rip)
    00001390: 	testl	%ecx, %ecx
    00001392: 	jle	.Ltmp3564 # Offset: 5010
    00001398: 	movl	%ebp, %eax
    0000139a: 	xorl	%ebx, %ebx
    0000139c: 	cltd
    0000139d: 	idivl	0x58(%rsp)
    000013a1: 	cltd
    000013a2: 	idivl	0x5c(%rsp)
    000013a6: 	cltd
    000013a7: 	idivl	0x68(%rsp)
    000013ab: 	movd	%eax, %xmm0
    000013af: 	movl	%eax, %r12d
    000013b2: 	punpcklwd	%xmm0, %xmm0
    000013b6: 	pshufd	$0x0, %xmm0, %xmm6
    000013bb: 	movaps	%xmm6, (%rsp)
    000013bf: 	nop # Size: 1
.Ltmp3567:
    000013c0: 	movq	%r13, %rax
    000013c3: 	pxor	%xmm0, %xmm0
    000013c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3565:
    000013d0: 	paddw	(%rsp), %xmm0
    000013d5: 	addq	$0x10, %rax
    000013d9: 	paddw	-0x10(%rax), %xmm0
    000013de: 	cmpq	%r15, %rax
    000013e1: 	jne	.Ltmp3565 # Offset: 5089
    000013e3: 	movdqa	%xmm0, %xmm1
    000013e7: 	cvttsd2si	init_value(%rip), %eax
    000013ef: 	psrldq	$0x8, %xmm1
    000013f4: 	paddw	%xmm1, %xmm0
    000013f8: 	movdqa	%xmm0, %xmm1
    000013fc: 	psrldq	$0x4, %xmm1
    00001401: 	addl	%r12d, %eax
    00001404: 	imulw	$0x1f40, %ax, %ax
    00001409: 	paddw	%xmm1, %xmm0
    0000140d: 	movdqa	%xmm0, %xmm1
    00001411: 	psrldq	$0x2, %xmm1
    00001416: 	paddw	%xmm1, %xmm0
    0000141a: 	pextrw	$0x0, %xmm0, %edx
    0000141f: 	cmpw	%dx, %ax
    00001422: 	je	.Ltmp3566 # Offset: 5154
    00001424: 	movl	current_test(%rip), %edx
    0000142a: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001431: 	movl	$0x1, %edi
    00001436: 	xorl	%eax, %eax
    00001438: 	callq	__printf_chk@PLT # Offset: 5176
    0000143d: 	movl	iterations(%rip), %ecx
.Ltmp3566:
    00001443: 	addl	$0x1, %ebx
    00001446: 	cmpl	%ecx, %ebx
    00001448: 	jl	.Ltmp3567 # Offset: 5192
.Ltmp3564:
    0000144e: 	movq	0x48(%rsp), %rsi
    00001453: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000145a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5210
    0000145f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001466: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000146d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001474: 	je	.Ltmp3568 # Offset: 5236
.Ltmp3687:
    0000147a: 	movq	-0x20(%rax), %r12
    0000147e: 	callq	clock@PLT # Offset: 5246
    00001483: 	pxor	%xmm0, %xmm0
    00001487: 	movq	%rax, end_time(%rip)
    0000148e: 	movq	%r12, %rdi
    00001491: 	subq	start_time(%rip), %rax
    00001498: 	cvtsi2sd	%rax, %xmm0
    0000149d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000014a5: 	callq	_Z13record_resultdPKc # Offset: 5285
    000014aa: 	movq	0x130(%rsp), %rdi
    000014b2: 	cmpq	0x60(%rsp), %rdi
    000014b7: 	je	.Ltmp3569 # Offset: 5303
    000014b9: 	movq	0x140(%rsp), %rax
    000014c1: 	leaq	0x1(%rax), %rsi
    000014c5: 	callq	_ZdlPvm@PLT # Offset: 5317
.Ltmp3569:
    000014ca: 	movq	0x38(%rsp), %rsi
    000014cf: 	movq	0x48(%rsp), %rdi
    000014d4: 	leaq	DATAat0x3d38f(%rip), %rdx
    000014db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5339
    000014e0: 	callq	clock@PLT # Offset: 5344
    000014e5: 	movl	iterations(%rip), %ecx
    000014eb: 	movq	%rax, start_time(%rip)
    000014f2: 	testl	%ecx, %ecx
    000014f4: 	jle	.Ltmp3570 # Offset: 5364
    000014fa: 	movl	0x58(%rsp), %eax
    000014fe: 	imull	0x5c(%rsp), %eax
    00001503: 	xorl	%ebx, %ebx
    00001505: 	movzwl	0x6c(%rsp), %r12d
    0000150b: 	cltd
    0000150c: 	idivl	0x68(%rsp)
    00001510: 	subl	%eax, %r12d
    00001513: 	movd	%r12d, %xmm0
    00001518: 	punpcklwd	%xmm0, %xmm0
    0000151c: 	pshufd	$0x0, %xmm0, %xmm7
    00001521: 	movaps	%xmm7, (%rsp)
    00001525: 	nopl	(%rax) # Size: 3
.Ltmp3573:
    00001528: 	movq	%r13, %rax
    0000152b: 	pxor	%xmm0, %xmm0
    0000152f: 	nop # Size: 1
.Ltmp3571:
    00001530: 	paddw	(%rsp), %xmm0
    00001535: 	addq	$0x10, %rax
    00001539: 	paddw	-0x10(%rax), %xmm0
    0000153e: 	cmpq	%r15, %rax
    00001541: 	jne	.Ltmp3571 # Offset: 5441
    00001543: 	movdqa	%xmm0, %xmm1
    00001547: 	cvttsd2si	init_value(%rip), %eax
    0000154f: 	psrldq	$0x8, %xmm1
    00001554: 	paddw	%xmm1, %xmm0
    00001558: 	movdqa	%xmm0, %xmm1
    0000155c: 	psrldq	$0x4, %xmm1
    00001561: 	addl	%r12d, %eax
    00001564: 	imulw	$0x1f40, %ax, %ax
    00001569: 	paddw	%xmm1, %xmm0
    0000156d: 	movdqa	%xmm0, %xmm1
    00001571: 	psrldq	$0x2, %xmm1
    00001576: 	paddw	%xmm1, %xmm0
    0000157a: 	pextrw	$0x0, %xmm0, %edx
    0000157f: 	cmpw	%dx, %ax
    00001582: 	je	.Ltmp3572 # Offset: 5506
    00001584: 	movl	current_test(%rip), %edx
    0000158a: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001591: 	movl	$0x1, %edi
    00001596: 	xorl	%eax, %eax
    00001598: 	callq	__printf_chk@PLT # Offset: 5528
    0000159d: 	movl	iterations(%rip), %ecx
.Ltmp3572:
    000015a3: 	addl	$0x1, %ebx
    000015a6: 	cmpl	%ecx, %ebx
    000015a8: 	jl	.Ltmp3573 # Offset: 5544
.Ltmp3570:
    000015ae: 	movq	0x48(%rsp), %rsi
    000015b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5562
    000015bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015c6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015d4: 	je	.Ltmp3574 # Offset: 5588
.Ltmp3686:
    000015da: 	movq	-0x20(%rax), %r12
    000015de: 	callq	clock@PLT # Offset: 5598
    000015e3: 	pxor	%xmm0, %xmm0
    000015e7: 	movq	%rax, end_time(%rip)
    000015ee: 	movq	%r12, %rdi
    000015f1: 	subq	start_time(%rip), %rax
    000015f8: 	cvtsi2sd	%rax, %xmm0
    000015fd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001605: 	callq	_Z13record_resultdPKc # Offset: 5637
    0000160a: 	movq	0x130(%rsp), %rdi
    00001612: 	cmpq	0x60(%rsp), %rdi
    00001617: 	je	.Ltmp3575 # Offset: 5655
    00001619: 	movq	0x140(%rsp), %rax
    00001621: 	leaq	0x1(%rax), %rsi
    00001625: 	callq	_ZdlPvm@PLT # Offset: 5669
.Ltmp3575:
    0000162a: 	movq	0x38(%rsp), %rsi
    0000162f: 	movq	0x48(%rsp), %rdi
    00001634: 	leaq	DATAat0x3d3a8(%rip), %rdx
    0000163b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5691
    00001640: 	callq	clock@PLT # Offset: 5696
    00001645: 	movl	iterations(%rip), %ecx
    0000164b: 	movq	%rax, start_time(%rip)
    00001652: 	testl	%ecx, %ecx
    00001654: 	jle	.Ltmp3576 # Offset: 5716
    0000165a: 	movl	0x58(%rsp), %eax
    0000165e: 	imull	0x5c(%rsp), %eax
    00001663: 	movd	%r14d, %xmm0
    00001668: 	xorl	%ebx, %ebx
    0000166a: 	punpcklwd	%xmm0, %xmm0
    0000166e: 	pshufd	$0x0, %xmm0, %xmm5
    00001673: 	cltd
    00001674: 	movaps	%xmm5, 0x10(%rsp)
    00001679: 	idivl	0x68(%rsp)
    0000167d: 	movd	%eax, %xmm0
    00001681: 	movl	%eax, %r12d
    00001684: 	punpcklwd	%xmm0, %xmm0
    00001688: 	pshufd	$0x0, %xmm0, %xmm6
    0000168d: 	movaps	%xmm6, (%rsp)
    00001691: 	nopl	(%rax) # Size: 7
.Ltmp3579:
    00001698: 	movq	%r13, %rax
    0000169b: 	pxor	%xmm0, %xmm0
    0000169f: 	nop # Size: 1
.Ltmp3577:
    000016a0: 	movdqa	(%rax), %xmm1
    000016a4: 	paddw	0x10(%rsp), %xmm0
    000016aa: 	addq	$0x10, %rax
    000016ae: 	psubw	(%rsp), %xmm1
    000016b3: 	paddw	%xmm1, %xmm0
    000016b7: 	cmpq	%r15, %rax
    000016ba: 	jne	.Ltmp3577 # Offset: 5818
    000016bc: 	movdqa	%xmm0, %xmm1
    000016c0: 	cvttsd2si	init_value(%rip), %eax
    000016c8: 	psrldq	$0x8, %xmm1
    000016cd: 	paddw	%xmm1, %xmm0
    000016d1: 	movdqa	%xmm0, %xmm1
    000016d5: 	psrldq	$0x4, %xmm1
    000016da: 	addl	%r14d, %eax
    000016dd: 	paddw	%xmm1, %xmm0
    000016e1: 	subl	%r12d, %eax
    000016e4: 	movdqa	%xmm0, %xmm1
    000016e8: 	imulw	$0x1f40, %ax, %ax
    000016ed: 	psrldq	$0x2, %xmm1
    000016f2: 	paddw	%xmm1, %xmm0
    000016f6: 	pextrw	$0x0, %xmm0, %edx
    000016fb: 	cmpw	%dx, %ax
    000016fe: 	je	.Ltmp3578 # Offset: 5886
    00001700: 	movl	current_test(%rip), %edx
    00001706: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000170d: 	movl	$0x1, %edi
    00001712: 	xorl	%eax, %eax
    00001714: 	callq	__printf_chk@PLT # Offset: 5908
    00001719: 	movl	iterations(%rip), %ecx
.Ltmp3578:
    0000171f: 	addl	$0x1, %ebx
    00001722: 	cmpl	%ecx, %ebx
    00001724: 	jl	.Ltmp3579 # Offset: 5924
.Ltmp3576:
    0000172a: 	movq	0x48(%rsp), %rsi
    0000172f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001736: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5942
    0000173b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001742: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001749: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001750: 	je	.Ltmp3580 # Offset: 5968
.Ltmp3685:
    00001756: 	movq	-0x20(%rax), %r12
    0000175a: 	callq	clock@PLT # Offset: 5978
    0000175f: 	pxor	%xmm0, %xmm0
    00001763: 	movq	%rax, end_time(%rip)
    0000176a: 	movq	%r12, %rdi
    0000176d: 	subq	start_time(%rip), %rax
    00001774: 	cvtsi2sd	%rax, %xmm0
    00001779: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001781: 	callq	_Z13record_resultdPKc # Offset: 6017
    00001786: 	movq	0x130(%rsp), %rdi
    0000178e: 	cmpq	0x60(%rsp), %rdi
    00001793: 	je	.Ltmp3581 # Offset: 6035
    00001795: 	movq	0x140(%rsp), %rax
    0000179d: 	leaq	0x1(%rax), %rsi
    000017a1: 	callq	_ZdlPvm@PLT # Offset: 6049
.Ltmp3581:
    000017a6: 	movl	0x68(%rsp), %r8d
    000017ab: 	movl	0x5c(%rsp), %ecx
    000017af: 	movl	%ebp, %esi
    000017b1: 	movq	%r13, %rdi
    000017b4: 	movl	0x58(%rsp), %edx
    000017b8: 	callq	_Z20TestLoopsIntegerOnlyIsENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 6072
    000017bd: 	movq	0x38(%rsp), %rsi
    000017c2: 	leaq	0xd0(%rsp), %rdi
    000017ca: 	leaq	DATAat0x3d3c2(%rip), %rdx
    000017d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6097
    000017d6: 	movl	iterations(%rip), %edx
    000017dc: 	xorl	%r8d, %r8d
    000017df: 	xorl	%ecx, %ecx
    000017e1: 	movl	$0x1f40, %esi
    000017e6: 	movq	0xd0(%rsp), %rdi
    000017ee: 	callq	_Z9summarizePKciiii # Offset: 6126
    000017f3: 	movsd	init_value(%rip), %xmm1
    000017fb: 	cvttsd2si	%xmm1, %edx
    000017ff: 	movl	%edx, %eax
    00001801: 	movd	%edx, %xmm0
    00001805: 	movzwl	%dx, %ecx
    00001808: 	shll	$0x10, %eax
    0000180b: 	punpcklwd	%xmm0, %xmm0
    0000180f: 	orl	%eax, %ecx
    00001811: 	pshufd	$0x0, %xmm0, %xmm0
    00001816: 	movq	%r13, %rax
    00001819: 	nopl	(%rax) # Size: 7
.Ltmp3582:
    00001820: 	movaps	%xmm0, (%rax)
    00001823: 	addq	$0x10, %rax
    00001827: 	cmpq	%r15, %rax
    0000182a: 	jne	.Ltmp3582 # Offset: 6186
    0000182c: 	addsd	DATAat0x3d700(%rip), %xmm1
    00001834: 	leaq	0x110(%rsp), %rbp
    0000183c: 	movw	%dx, 0xa6(%rsp)
    00001844: 	movw	%dx, 0xa8(%rsp)
    0000184c: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001853: 	movl	%ecx, 0x90(%rsp)
    0000185a: 	cvttsd2si	%xmm1, %eax
    0000185e: 	movl	%ecx, 0x9c(%rsp)
    00001865: 	movslq	%eax, %rsi
    00001868: 	imulq	$0x51eb851f, %rsi, %rsi
    0000186f: 	sarq	$0x24, %rsi
    00001873: 	movq	%rsi, %rdi
    00001876: 	movl	%eax, %esi
    00001878: 	sarl	$0x1f, %esi
    0000187b: 	subl	%esi, %edi
    0000187d: 	imull	$0x32, %edi, %esi
    00001880: 	movq	%rbp, %rdi
    00001883: 	subl	%esi, %eax
    00001885: 	movq	0x38(%rsp), %rsi
    0000188a: 	movl	%eax, (%rsp)
    0000188d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6285
    00001892: 	callq	clock@PLT # Offset: 6290
    00001897: 	movl	iterations(%rip), %ecx
    0000189d: 	movq	%rax, start_time(%rip)
    000018a4: 	testl	%ecx, %ecx
    000018a6: 	jle	.Ltmp3583 # Offset: 6310
    000018ac: 	movslq	(%rsp), %rax
    000018b0: 	movq	0x48(%rsp), %rdi
    000018b5: 	xorl	%ebx, %ebx
    000018b7: 	leaq	DATAat0x3d1c8(%rip), %r14
    000018be: 	leaq	(%rdi,%rax,2), %r12
    000018c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3586:
    000018c8: 	cvttsd2si	init_value(%rip), %edx
    000018d0: 	movq	%r13, %rax
    000018d3: 	pxor	%xmm0, %xmm0
    000018d7: 	imulw	$0x1f40, %dx, %dx
    000018dc: 	nopl	(%rax) # Size: 4
.Ltmp3584:
    000018e0: 	paddw	(%rax), %xmm0
    000018e4: 	addq	$0x10, %rax
    000018e8: 	cmpq	%r15, %rax
    000018eb: 	jne	.Ltmp3584 # Offset: 6379
    000018ed: 	movdqa	%xmm0, %xmm1
    000018f1: 	psrldq	$0x8, %xmm1
    000018f6: 	paddw	%xmm1, %xmm0
    000018fa: 	movdqa	%xmm0, %xmm1
    000018fe: 	psrldq	$0x4, %xmm1
    00001903: 	paddw	%xmm1, %xmm0
    00001907: 	movdqa	%xmm0, %xmm1
    0000190b: 	psrldq	$0x2, %xmm1
    00001910: 	paddw	%xmm1, %xmm0
    00001914: 	pextrw	$0x0, %xmm0, %eax
    00001919: 	movw	%ax, (%r12)
    0000191e: 	cmpw	%ax, %dx
    00001921: 	je	.Ltmp3585 # Offset: 6433
    00001923: 	movq	0x110(%rsp), %rdx
    0000192b: 	movq	%r14, %rsi
    0000192e: 	movl	$0x1, %edi
    00001933: 	xorl	%eax, %eax
    00001935: 	callq	__printf_chk@PLT # Offset: 6453
    0000193a: 	movl	iterations(%rip), %ecx
.Ltmp3585:
    00001940: 	addl	$0x1, %ebx
    00001943: 	cmpl	%ecx, %ebx
    00001945: 	jl	.Ltmp3586 # Offset: 6469
.Ltmp3583:
    00001947: 	movq	%rbp, %rsi
    0000194a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001951: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6481
    00001956: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000195d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001964: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000196b: 	je	.Ltmp3587 # Offset: 6507
.Ltmp3684:
    00001971: 	movq	-0x20(%rax), %r12
    00001975: 	callq	clock@PLT # Offset: 6517
    0000197a: 	pxor	%xmm0, %xmm0
    0000197e: 	movq	%rax, end_time(%rip)
    00001985: 	movq	%r12, %rdi
    00001988: 	subq	start_time(%rip), %rax
    0000198f: 	cvtsi2sd	%rax, %xmm0
    00001994: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000199c: 	callq	_Z13record_resultdPKc # Offset: 6556
    000019a1: 	movq	0x110(%rsp), %rdi
    000019a9: 	leaq	0x120(%rsp), %rbx
    000019b1: 	cmpq	%rbx, %rdi
    000019b4: 	je	.Ltmp3588 # Offset: 6580
    000019b6: 	movq	0x120(%rsp), %rax
    000019be: 	leaq	0x1(%rax), %rsi
    000019c2: 	callq	_ZdlPvm@PLT # Offset: 6594
.Ltmp3588:
    000019c7: 	movq	0x38(%rsp), %rsi
    000019cc: 	leaq	DATAat0x3d3eb(%rip), %rdx
    000019d3: 	movq	%rbp, %rdi
    000019d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6614
    000019db: 	callq	clock@PLT # Offset: 6619
    000019e0: 	movl	iterations(%rip), %ecx
    000019e6: 	movq	%rax, start_time(%rip)
    000019ed: 	testl	%ecx, %ecx
    000019ef: 	jle	.Ltmp3589 # Offset: 6639
    000019f5: 	movslq	(%rsp), %rax
    000019f9: 	movq	0x48(%rsp), %rsi
    000019fe: 	xorl	%r12d, %r12d
    00001a01: 	leaq	(%rsi,%rax,2), %r14
    00001a05: 	nopl	(%rax) # Size: 3
.Ltmp3592:
    00001a08: 	cvttsd2si	init_value(%rip), %edx
    00001a10: 	movq	%r13, %rax
    00001a13: 	pxor	%xmm0, %xmm0
    00001a17: 	imulw	$0x1f40, %dx, %dx
    00001a1c: 	nopl	(%rax) # Size: 4
.Ltmp3590:
    00001a20: 	paddw	(%rax), %xmm0
    00001a24: 	addq	$0x10, %rax
    00001a28: 	cmpq	%r15, %rax
    00001a2b: 	jne	.Ltmp3590 # Offset: 6699
    00001a2d: 	movdqa	%xmm0, %xmm1
    00001a31: 	psrldq	$0x8, %xmm1
    00001a36: 	paddw	%xmm1, %xmm0
    00001a3a: 	movdqa	%xmm0, %xmm1
    00001a3e: 	psrldq	$0x4, %xmm1
    00001a43: 	paddw	%xmm1, %xmm0
    00001a47: 	movdqa	%xmm0, %xmm1
    00001a4b: 	psrldq	$0x2, %xmm1
    00001a50: 	paddw	%xmm1, %xmm0
    00001a54: 	pextrw	$0x0, %xmm0, %eax
    00001a59: 	movw	%ax, (%r14)
    00001a5d: 	cmpw	%ax, %dx
    00001a60: 	je	.Ltmp3591 # Offset: 6752
    00001a62: 	movq	0x110(%rsp), %rdx
    00001a6a: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001a71: 	movl	$0x1, %edi
    00001a76: 	xorl	%eax, %eax
    00001a78: 	callq	__printf_chk@PLT # Offset: 6776
    00001a7d: 	movl	iterations(%rip), %ecx
.Ltmp3591:
    00001a83: 	addl	$0x1, %r12d
    00001a87: 	cmpl	%ecx, %r12d
    00001a8a: 	jl	.Ltmp3592 # Offset: 6794
.Ltmp3589:
    00001a90: 	movq	%rbp, %rsi
    00001a93: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a9a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6810
    00001a9f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001aa6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001aad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ab4: 	je	.Ltmp3593 # Offset: 6836
.Ltmp3683:
    00001aba: 	movq	-0x20(%rax), %r12
    00001abe: 	callq	clock@PLT # Offset: 6846
    00001ac3: 	pxor	%xmm0, %xmm0
    00001ac7: 	movq	%rax, end_time(%rip)
    00001ace: 	movq	%r12, %rdi
    00001ad1: 	subq	start_time(%rip), %rax
    00001ad8: 	cvtsi2sd	%rax, %xmm0
    00001add: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ae5: 	callq	_Z13record_resultdPKc # Offset: 6885
    00001aea: 	movq	0x110(%rsp), %rdi
    00001af2: 	cmpq	%rbx, %rdi
    00001af5: 	je	.Ltmp3594 # Offset: 6901
    00001af7: 	movq	0x120(%rsp), %rax
    00001aff: 	leaq	0x1(%rax), %rsi
    00001b03: 	callq	_ZdlPvm@PLT # Offset: 6915
.Ltmp3594:
    00001b08: 	movq	0x38(%rsp), %rsi
    00001b0d: 	leaq	DATAat0x3d400(%rip), %rdx
    00001b14: 	movq	%rbp, %rdi
    00001b17: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6935
    00001b1c: 	callq	clock@PLT # Offset: 6940
    00001b21: 	movl	iterations(%rip), %ecx
    00001b27: 	xorl	%r12d, %r12d
    00001b2a: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001b31: 	movq	%rax, start_time(%rip)
    00001b38: 	testl	%ecx, %ecx
    00001b3a: 	jle	.Ltmp3595 # Offset: 6970
.Ltmp3598:
    00001b40: 	cvttsd2si	init_value(%rip), %edx
    00001b48: 	movq	%r13, %rax
    00001b4b: 	pxor	%xmm0, %xmm0
    00001b4f: 	imulw	$0x1f40, %dx, %dx
    00001b54: 	nopl	(%rax) # Size: 4
.Ltmp3596:
    00001b58: 	paddw	(%rax), %xmm0
    00001b5c: 	addq	$0x10, %rax
    00001b60: 	cmpq	%r15, %rax
    00001b63: 	jne	.Ltmp3596 # Offset: 7011
    00001b65: 	movdqa	%xmm0, %xmm1
    00001b69: 	psrldq	$0x8, %xmm1
    00001b6e: 	paddw	%xmm1, %xmm0
    00001b72: 	movdqa	%xmm0, %xmm1
    00001b76: 	psrldq	$0x4, %xmm1
    00001b7b: 	paddw	%xmm1, %xmm0
    00001b7f: 	movdqa	%xmm0, %xmm1
    00001b83: 	psrldq	$0x2, %xmm1
    00001b88: 	paddw	%xmm1, %xmm0
    00001b8c: 	pextrw	$0x0, %xmm0, %eax
    00001b91: 	movw	%ax, 0x9c(%rsp)
    00001b99: 	cmpw	%ax, %dx
    00001b9c: 	je	.Ltmp3597 # Offset: 7068
    00001b9e: 	movq	0x110(%rsp), %rdx
    00001ba6: 	movq	%r14, %rsi
    00001ba9: 	movl	$0x1, %edi
    00001bae: 	xorl	%eax, %eax
    00001bb0: 	callq	__printf_chk@PLT # Offset: 7088
    00001bb5: 	movl	iterations(%rip), %ecx
.Ltmp3597:
    00001bbb: 	addl	$0x1, %r12d
    00001bbf: 	cmpl	%ecx, %r12d
    00001bc2: 	jl	.Ltmp3598 # Offset: 7106
.Ltmp3595:
    00001bc8: 	movq	%rbp, %rsi
    00001bcb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bd2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7122
    00001bd7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bde: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001be5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bec: 	je	.Ltmp3599 # Offset: 7148
.Ltmp3682:
    00001bf2: 	movq	-0x20(%rax), %r12
    00001bf6: 	callq	clock@PLT # Offset: 7158
    00001bfb: 	pxor	%xmm0, %xmm0
    00001bff: 	movq	%rax, end_time(%rip)
    00001c06: 	movq	%r12, %rdi
    00001c09: 	subq	start_time(%rip), %rax
    00001c10: 	cvtsi2sd	%rax, %xmm0
    00001c15: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001c1d: 	callq	_Z13record_resultdPKc # Offset: 7197
    00001c22: 	movq	0x110(%rsp), %rdi
    00001c2a: 	cmpq	%rbx, %rdi
    00001c2d: 	je	.Ltmp3600 # Offset: 7213
    00001c2f: 	movq	0x120(%rsp), %rax
    00001c37: 	leaq	0x1(%rax), %rsi
    00001c3b: 	callq	_ZdlPvm@PLT # Offset: 7227
.Ltmp3600:
    00001c40: 	movq	0x38(%rsp), %rsi
    00001c45: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001c4c: 	movq	%rbp, %rdi
    00001c4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7247
    00001c54: 	callq	clock@PLT # Offset: 7252
    00001c59: 	movl	iterations(%rip), %ecx
    00001c5f: 	xorl	%r12d, %r12d
    00001c62: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001c69: 	movq	%rax, start_time(%rip)
    00001c70: 	testl	%ecx, %ecx
    00001c72: 	jle	.Ltmp3601 # Offset: 7282
    00001c78: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3604:
    00001c80: 	cvttsd2si	init_value(%rip), %edx
    00001c88: 	movq	%r13, %rax
    00001c8b: 	pxor	%xmm0, %xmm0
    00001c8f: 	imulw	$0x1f40, %dx, %dx
    00001c94: 	nopl	(%rax) # Size: 4
.Ltmp3602:
    00001c98: 	paddw	(%rax), %xmm0
    00001c9c: 	addq	$0x10, %rax
    00001ca0: 	cmpq	%r15, %rax
    00001ca3: 	jne	.Ltmp3602 # Offset: 7331
    00001ca5: 	movdqa	%xmm0, %xmm1
    00001ca9: 	psrldq	$0x8, %xmm1
    00001cae: 	paddw	%xmm1, %xmm0
    00001cb2: 	movdqa	%xmm0, %xmm1
    00001cb6: 	psrldq	$0x4, %xmm1
    00001cbb: 	paddw	%xmm1, %xmm0
    00001cbf: 	movdqa	%xmm0, %xmm1
    00001cc3: 	psrldq	$0x2, %xmm1
    00001cc8: 	paddw	%xmm1, %xmm0
    00001ccc: 	pextrw	$0x0, %xmm0, %eax
    00001cd1: 	movw	%ax, 0x9c(%rsp)
    00001cd9: 	cmpw	%ax, %dx
    00001cdc: 	je	.Ltmp3603 # Offset: 7388
    00001cde: 	movq	0x110(%rsp), %rdx
    00001ce6: 	movq	%r14, %rsi
    00001ce9: 	movl	$0x1, %edi
    00001cee: 	xorl	%eax, %eax
    00001cf0: 	callq	__printf_chk@PLT # Offset: 7408
    00001cf5: 	movl	iterations(%rip), %ecx
.Ltmp3603:
    00001cfb: 	addl	$0x1, %r12d
    00001cff: 	cmpl	%ecx, %r12d
    00001d02: 	jl	.Ltmp3604 # Offset: 7426
.Ltmp3601:
    00001d08: 	movq	%rbp, %rsi
    00001d0b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d12: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7442
    00001d17: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d1e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d25: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d2c: 	je	.Ltmp3605 # Offset: 7468
.Ltmp3681:
    00001d32: 	movq	-0x20(%rax), %r12
    00001d36: 	callq	clock@PLT # Offset: 7478
    00001d3b: 	pxor	%xmm0, %xmm0
    00001d3f: 	movq	%rax, end_time(%rip)
    00001d46: 	movq	%r12, %rdi
    00001d49: 	subq	start_time(%rip), %rax
    00001d50: 	cvtsi2sd	%rax, %xmm0
    00001d55: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d5d: 	callq	_Z13record_resultdPKc # Offset: 7517
    00001d62: 	movq	0x110(%rsp), %rdi
    00001d6a: 	cmpq	%rbx, %rdi
    00001d6d: 	je	.Ltmp3606 # Offset: 7533
    00001d6f: 	movq	0x120(%rsp), %rax
    00001d77: 	leaq	0x1(%rax), %rsi
    00001d7b: 	callq	_ZdlPvm@PLT # Offset: 7547
.Ltmp3606:
    00001d80: 	movq	0x38(%rsp), %rsi
    00001d85: 	leaq	DATAat0x3d430(%rip), %rdx
    00001d8c: 	movq	%rbp, %rdi
    00001d8f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7567
    00001d94: 	movl	(%rsp), %edx
    00001d97: 	movq	%rbp, %rcx
    00001d9a: 	movl	$0x1f40, %esi
    00001d9f: 	movq	%r13, %rdi
    00001da2: 	callq	_Z23test_array_const_in_optIsEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7586
    00001da7: 	movq	0x110(%rsp), %rdi
    00001daf: 	cmpq	%rbx, %rdi
    00001db2: 	je	.Ltmp3607 # Offset: 7602
    00001db4: 	movq	0x120(%rsp), %rax
    00001dbc: 	leaq	0x1(%rax), %rsi
    00001dc0: 	callq	_ZdlPvm@PLT # Offset: 7616
.Ltmp3607:
    00001dc5: 	movq	0x38(%rsp), %rsi
    00001dca: 	leaq	DATAat0x3d448(%rip), %rdx
    00001dd1: 	movq	%rbp, %rdi
    00001dd4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7636
    00001dd9: 	callq	clock@PLT # Offset: 7641
    00001dde: 	movl	iterations(%rip), %r8d
    00001de5: 	movq	%rax, start_time(%rip)
    00001dec: 	testl	%r8d, %r8d
    00001def: 	jle	.Ltmp3608 # Offset: 7663
    00001df1: 	movslq	(%rsp), %rax
    00001df5: 	xorl	%r12d, %r12d
    00001df8: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001dff: 	leaq	(%r13,%rax,2), %r14
    00001e04: 	nopl	(%rax) # Size: 4
.Ltmp3667:
    00001e08: 	cvttsd2si	init_value(%rip), %eax
    00001e10: 	imulw	$0x1f40, (%r14), %dx
    00001e16: 	imulw	$0x1f40, %ax, %ax
    00001e1b: 	cmpw	%dx, %ax
    00001e1e: 	jne	.Ltmp3609 # Offset: 7710
.Ltmp3608:
    00001e24: 	movq	%rbp, %rsi
    00001e27: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e2e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7726
    00001e33: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e3a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e41: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e48: 	je	.Ltmp3610 # Offset: 7752
.Ltmp3680:
    00001e4e: 	movq	-0x20(%rax), %r12
    00001e52: 	callq	clock@PLT # Offset: 7762
    00001e57: 	pxor	%xmm0, %xmm0
    00001e5b: 	movq	%rax, end_time(%rip)
    00001e62: 	movq	%r12, %rdi
    00001e65: 	subq	start_time(%rip), %rax
    00001e6c: 	cvtsi2sd	%rax, %xmm0
    00001e71: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e79: 	callq	_Z13record_resultdPKc # Offset: 7801
    00001e7e: 	movq	0x110(%rsp), %rdi
    00001e86: 	cmpq	%rbx, %rdi
    00001e89: 	je	.Ltmp3611 # Offset: 7817
    00001e8b: 	movq	0x120(%rsp), %rax
    00001e93: 	leaq	0x1(%rax), %rsi
    00001e97: 	callq	_ZdlPvm@PLT # Offset: 7831
.Ltmp3611:
    00001e9c: 	movq	0x38(%rsp), %rsi
    00001ea1: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001ea8: 	movq	%rbp, %rdi
    00001eab: 	cvttsd2si	init_value(%rip), %r12d
    00001eb4: 	movw	%r12w, 0x9c(%rsp)
    00001ebd: 	movw	%r12w, 0x90(%rsp)
    00001ec6: 	movw	%r12w, 0xa8(%rsp)
    00001ecf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7887
    00001ed4: 	movq	0x78(%rsp), %rdi
    00001ed9: 	movq	%rbp, %rdx
    00001edc: 	movl	$0x1f40, %esi
    00001ee1: 	callq	_Z24test_struct_const_in_optIs13simple_structIsEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7905
    00001ee6: 	movq	0x110(%rsp), %rdi
    00001eee: 	cmpq	%rbx, %rdi
    00001ef1: 	je	.Ltmp3612 # Offset: 7921
    00001ef3: 	movq	0x120(%rsp), %rax
    00001efb: 	leaq	0x1(%rax), %rsi
    00001eff: 	callq	_ZdlPvm@PLT # Offset: 7935
.Ltmp3612:
    00001f04: 	movq	0x38(%rsp), %rsi
    00001f09: 	leaq	DATAat0x3d475(%rip), %rdx
    00001f10: 	movq	%rbp, %rdi
    00001f13: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7955
    00001f18: 	callq	clock@PLT # Offset: 7960
    00001f1d: 	movl	iterations(%rip), %edi
    00001f23: 	movq	%rax, start_time(%rip)
    00001f2a: 	testl	%edi, %edi
    00001f2c: 	jle	.Ltmp3613 # Offset: 7980
    00001f2e: 	imulw	$0x1f40, %r12w, %r12w
    00001f34: 	xorl	%r14d, %r14d
    00001f37: 	leaq	DATAat0x3d1c8(%rip), %r15
.Ltmp3668:
    00001f3e: 	cvttsd2si	init_value(%rip), %eax
    00001f46: 	imulw	$0x1f40, %ax, %ax
    00001f4b: 	cmpw	%r12w, %ax
    00001f4f: 	jne	.Ltmp3614 # Offset: 8015
.Ltmp3613:
    00001f55: 	movq	%rbp, %rsi
    00001f58: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f5f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8031
    00001f64: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f6b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f72: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f79: 	je	.Ltmp3615 # Offset: 8057
.Ltmp3679:
    00001f7f: 	movq	-0x20(%rax), %r12
    00001f83: 	callq	clock@PLT # Offset: 8067
    00001f88: 	pxor	%xmm0, %xmm0
    00001f8c: 	movq	%rax, end_time(%rip)
    00001f93: 	movq	%r12, %rdi
    00001f96: 	subq	start_time(%rip), %rax
    00001f9d: 	cvtsi2sd	%rax, %xmm0
    00001fa2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001faa: 	callq	_Z13record_resultdPKc # Offset: 8106
    00001faf: 	movq	0x110(%rsp), %rdi
    00001fb7: 	cmpq	%rbx, %rdi
    00001fba: 	je	.Ltmp3616 # Offset: 8122
    00001fbc: 	movq	0x120(%rsp), %rax
    00001fc4: 	leaq	0x1(%rax), %rsi
    00001fc8: 	callq	_ZdlPvm@PLT # Offset: 8136
.Ltmp3616:
    00001fcd: 	movq	0x38(%rsp), %rsi
    00001fd2: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001fd9: 	movq	%rbp, %rdi
    00001fdc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8156
    00001fe1: 	callq	clock@PLT # Offset: 8161
    00001fe6: 	movl	iterations(%rip), %esi
    00001fec: 	movq	%rax, start_time(%rip)
    00001ff3: 	testl	%esi, %esi
    00001ff5: 	jle	.Ltmp3617 # Offset: 8181
    00001ff7: 	movslq	(%rsp), %rax
    00001ffb: 	movzwl	0x401e(%rsp), %edx
    00002003: 	movw	%dx, 0x130(%rsp,%rax,2)
.Ltmp3617:
    0000200b: 	movq	%rbp, %rsi
    0000200e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002015: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8213
    0000201a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002021: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002028: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000202f: 	je	.Ltmp3618 # Offset: 8239
.Ltmp3678:
    00002035: 	movq	-0x20(%rax), %r12
    00002039: 	callq	clock@PLT # Offset: 8249
    0000203e: 	pxor	%xmm0, %xmm0
    00002042: 	movq	%rax, end_time(%rip)
    00002049: 	movq	%r12, %rdi
    0000204c: 	subq	start_time(%rip), %rax
    00002053: 	cvtsi2sd	%rax, %xmm0
    00002058: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002060: 	callq	_Z13record_resultdPKc # Offset: 8288
    00002065: 	movq	0x110(%rsp), %rdi
    0000206d: 	cmpq	%rbx, %rdi
    00002070: 	je	.Ltmp3619 # Offset: 8304
    00002072: 	movq	0x120(%rsp), %rax
    0000207a: 	leaq	0x1(%rax), %rsi
    0000207e: 	callq	_ZdlPvm@PLT # Offset: 8318
.Ltmp3619:
    00002083: 	movq	0x38(%rsp), %rsi
    00002088: 	leaq	DATAat0x3d49d(%rip), %rdx
    0000208f: 	movq	%rbp, %rdi
    00002092: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8338
    00002097: 	callq	clock@PLT # Offset: 8343
    0000209c: 	movl	iterations(%rip), %ecx
    000020a2: 	movq	%rax, start_time(%rip)
    000020a9: 	testl	%ecx, %ecx
    000020ab: 	jle	.Ltmp3620 # Offset: 8363
    000020ad: 	movslq	(%rsp), %r13
    000020b1: 	movzwl	0x401e(%rsp), %eax
    000020b9: 	movw	%ax, 0x130(%rsp,%r13,2)
.Ltmp3620:
    000020c2: 	movq	%rbp, %rsi
    000020c5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020cc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8396
    000020d1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020d8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020e6: 	je	.Ltmp3621 # Offset: 8422
.Ltmp3677:
    000020ec: 	movq	-0x20(%rax), %r12
    000020f0: 	callq	clock@PLT # Offset: 8432
    000020f5: 	pxor	%xmm0, %xmm0
    000020f9: 	movq	%rax, end_time(%rip)
    00002100: 	movq	%r12, %rdi
    00002103: 	subq	start_time(%rip), %rax
    0000210a: 	cvtsi2sd	%rax, %xmm0
    0000210f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002117: 	callq	_Z13record_resultdPKc # Offset: 8471
    0000211c: 	movq	0x110(%rsp), %rdi
    00002124: 	cmpq	%rbx, %rdi
    00002127: 	je	.Ltmp3622 # Offset: 8487
    00002129: 	movq	0x120(%rsp), %rax
    00002131: 	leaq	0x1(%rax), %rsi
    00002135: 	callq	_ZdlPvm@PLT # Offset: 8501
.Ltmp3622:
    0000213a: 	movq	0x38(%rsp), %rsi
    0000213f: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00002146: 	movq	%rbp, %rdi
    00002149: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8521
    0000214e: 	callq	clock@PLT # Offset: 8526
    00002153: 	movl	iterations(%rip), %edx
    00002159: 	movq	%rax, start_time(%rip)
    00002160: 	testl	%edx, %edx
    00002162: 	jle	.Ltmp3623 # Offset: 8546
    00002164: 	movzwl	0x401e(%rsp), %eax
    0000216c: 	movw	%ax, 0x9c(%rsp)
.Ltmp3623:
    00002174: 	movq	%rbp, %rsi
    00002177: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000217e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8574
    00002183: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000218a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002191: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002198: 	je	.Ltmp3624 # Offset: 8600
.Ltmp3676:
    0000219e: 	movq	-0x20(%rax), %r12
    000021a2: 	callq	clock@PLT # Offset: 8610
    000021a7: 	pxor	%xmm0, %xmm0
    000021ab: 	movq	%rax, end_time(%rip)
    000021b2: 	movq	%r12, %rdi
    000021b5: 	subq	start_time(%rip), %rax
    000021bc: 	cvtsi2sd	%rax, %xmm0
    000021c1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000021c9: 	callq	_Z13record_resultdPKc # Offset: 8649
    000021ce: 	movq	0x110(%rsp), %rdi
    000021d6: 	cmpq	%rbx, %rdi
    000021d9: 	je	.Ltmp3625 # Offset: 8665
    000021db: 	movq	0x120(%rsp), %rax
    000021e3: 	leaq	0x1(%rax), %rsi
    000021e7: 	callq	_ZdlPvm@PLT # Offset: 8679
.Ltmp3625:
    000021ec: 	movq	0x38(%rsp), %rsi
    000021f1: 	leaq	DATAat0x3d4c0(%rip), %rdx
    000021f8: 	movq	%rbp, %rdi
    000021fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8699
    00002200: 	callq	clock@PLT # Offset: 8704
    00002205: 	movq	%rax, start_time(%rip)
    0000220c: 	movl	iterations(%rip), %eax
    00002212: 	testl	%eax, %eax
    00002214: 	jle	.Ltmp3626 # Offset: 8724
    00002216: 	movzwl	0x401e(%rsp), %eax
    0000221e: 	movw	%ax, 0x9c(%rsp)
.Ltmp3626:
    00002226: 	movq	%rbp, %rsi
    00002229: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002230: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8752
    00002235: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000223c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002243: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000224a: 	je	.Ltmp3627 # Offset: 8778
.Ltmp3675:
    00002250: 	movq	-0x20(%rax), %r12
    00002254: 	callq	clock@PLT # Offset: 8788
    00002259: 	pxor	%xmm0, %xmm0
    0000225d: 	movq	%rax, end_time(%rip)
    00002264: 	movq	%r12, %rdi
    00002267: 	subq	start_time(%rip), %rax
    0000226e: 	cvtsi2sd	%rax, %xmm0
    00002273: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000227b: 	callq	_Z13record_resultdPKc # Offset: 8827
    00002280: 	movq	0x110(%rsp), %rdi
    00002288: 	cmpq	%rbx, %rdi
    0000228b: 	je	.Ltmp3628 # Offset: 8843
    0000228d: 	movq	0x120(%rsp), %rax
    00002295: 	leaq	0x1(%rax), %rsi
    00002299: 	callq	_ZdlPvm@PLT # Offset: 8857
.Ltmp3628:
    0000229e: 	movq	0x38(%rsp), %r15
    000022a3: 	leaq	0xf0(%rsp), %rdi
    000022ab: 	leaq	DATAat0x3d4d0(%rip), %rdx
    000022b2: 	movq	%r15, %rsi
    000022b5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8885
    000022ba: 	movl	iterations(%rip), %edx
    000022c0: 	xorl	%r8d, %r8d
    000022c3: 	xorl	%ecx, %ecx
    000022c5: 	movl	$0x1f40, %esi
    000022ca: 	movq	0xf0(%rsp), %rdi
    000022d2: 	callq	_Z9summarizePKciiii # Offset: 8914
    000022d7: 	movsd	DATAat0x3d708(%rip), %xmm0
    000022df: 	leaq	DATAat0x3d4e7(%rip), %rdx
    000022e6: 	movq	%r15, %rsi
    000022e9: 	movq	%rbp, %rdi
    000022ec: 	addsd	init_value(%rip), %xmm0
    000022f4: 	cvttsd2si	%xmm0, %r14d
    000022f9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8953
    000022fe: 	callq	clock@PLT # Offset: 8958
    00002303: 	movl	iterations(%rip), %r13d
    0000230a: 	movswl	%r14w, %r14d
    0000230e: 	movq	%rax, start_time(%rip)
    00002315: 	testl	%r13d, %r13d
    00002318: 	jle	.Ltmp3629 # Offset: 8984
    0000231e: 	pxor	%xmm7, %xmm7
    00002322: 	xorl	%r12d, %r12d
    00002325: 	leaq	DATAat0x3d1c8(%rip), %r15
    0000232c: 	cvtsi2sd	%r14d, %xmm7
    00002331: 	movsd	%xmm7, (%rsp)
    00002336: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3631:
    00002340: 	movq	DATAat0x3d6b8(%rip), %rax
    00002347: 	movsd	(%rsp), %xmm0
    0000234c: 	movq	%rax, %xmm1
    00002351: 	callq	pow@PLT # Offset: 9041
    00002356: 	movq	DATAat0x3d6b8(%rip), %rax
    0000235d: 	movsd	%xmm0, 0x10(%rsp)
    00002363: 	movsd	(%rsp), %xmm0
    00002368: 	movq	%rax, %xmm1
    0000236d: 	callq	pow@PLT # Offset: 9069
    00002372: 	movsd	0x10(%rsp), %xmm2
    00002378: 	cvttsd2si	%xmm0, %eax
    0000237c: 	cvttsd2si	%xmm2, %edx
    00002380: 	imulw	$0x1f40, %ax, %ax
    00002385: 	imulw	$0x1f40, %dx, %dx
    0000238a: 	cmpw	%ax, %dx
    0000238d: 	je	.Ltmp3630 # Offset: 9101
    0000238f: 	movq	0x110(%rsp), %rdx
    00002397: 	movq	%r15, %rsi
    0000239a: 	movl	$0x1, %edi
    0000239f: 	xorl	%eax, %eax
    000023a1: 	callq	__printf_chk@PLT # Offset: 9121
    000023a6: 	movl	iterations(%rip), %r13d
.Ltmp3630:
    000023ad: 	addl	$0x1, %r12d
    000023b1: 	cmpl	%r13d, %r12d
    000023b4: 	jl	.Ltmp3631 # Offset: 9140
.Ltmp3629:
    000023b6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000023bd: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000023c4: 	subq	$0x20, %rax
    000023c8: 	cmpq	%rax, %r13
    000023cb: 	je	.Ltmp3632 # Offset: 9163
    000023d1: 	leaq	0x10(%r13), %rdi
    000023d5: 	movq	0x118(%rsp), %r12
    000023dd: 	movq	%rdi, (%r13)
    000023e1: 	movq	0x110(%rsp), %r15
    000023e9: 	movq	%r15, %rax
    000023ec: 	addq	%r12, %rax
    000023ef: 	je	.Ltmp3633 # Offset: 9199
    000023f1: 	testq	%r15, %r15
    000023f4: 	je	.Ltmp3634 # Offset: 9204
.Ltmp3633:
    000023fa: 	movq	%r12, 0x88(%rsp)
    00002402: 	cmpq	$0xf, %r12
    00002406: 	ja	.Ltmp3635 # Offset: 9222
    0000240c: 	cmpq	$0x1, %r12
    00002410: 	jne	.Ltmp3636 # Offset: 9232
    00002416: 	movzbl	(%r15), %eax
    0000241a: 	movb	%al, 0x10(%r13)
.Ltmp3669:
    0000241e: 	movq	%r12, 0x8(%r13)
    00002422: 	movb	$0x0, (%rdi,%r12)
    00002427: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000242e: 	addq	$0x20, %rax
    00002432: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3674:
    00002439: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002440: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002447: 	je	.Ltmp3637 # Offset: 9287
.Ltmp3673:
    0000244d: 	movq	-0x20(%rax), %r12
    00002451: 	callq	clock@PLT # Offset: 9297
    00002456: 	pxor	%xmm0, %xmm0
    0000245a: 	movq	%rax, end_time(%rip)
    00002461: 	movq	%r12, %rdi
    00002464: 	subq	start_time(%rip), %rax
    0000246b: 	cvtsi2sd	%rax, %xmm0
    00002470: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002478: 	callq	_Z13record_resultdPKc # Offset: 9336
    0000247d: 	movq	0x110(%rsp), %rdi
    00002485: 	cmpq	%rbx, %rdi
    00002488: 	je	.Ltmp3638 # Offset: 9352
    0000248a: 	movq	0x120(%rsp), %rax
    00002492: 	leaq	0x1(%rax), %rsi
    00002496: 	callq	_ZdlPvm@PLT # Offset: 9366
.Ltmp3638:
    0000249b: 	movq	0x38(%rsp), %rsi
    000024a0: 	leaq	DATAat0x3d501(%rip), %rdx
    000024a7: 	movq	%rbp, %rdi
    000024aa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9386
    000024af: 	leaq	_Z10test_powerIsET_S0_(%rip), %r12
    000024b6: 	movq	%rbp, %rcx
    000024b9: 	movl	%r14d, %esi
    000024bc: 	movl	$0x1f40, %edi
    000024c1: 	movq	%r12, %rdx
    000024c4: 	callq	"_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9412
    000024c9: 	movq	0x110(%rsp), %rdi
    000024d1: 	cmpq	%rbx, %rdi
    000024d4: 	je	.Ltmp3639 # Offset: 9428
    000024d6: 	movq	0x120(%rsp), %rax
    000024de: 	leaq	0x1(%rax), %rsi
    000024e2: 	callq	_ZdlPvm@PLT # Offset: 9442
.Ltmp3639:
    000024e7: 	movq	0x38(%rsp), %rsi
    000024ec: 	leaq	DATAat0x3d51f(%rip), %rdx
    000024f3: 	movq	%rbp, %rdi
    000024f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9462
    000024fb: 	movq	%rbp, %rcx
    000024fe: 	movq	%r12, %rdx
    00002501: 	movl	%r14d, %esi
    00002504: 	movl	$0x1f40, %edi
    00002509: 	callq	"_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9481
    0000250e: 	movq	0x110(%rsp), %rdi
    00002516: 	cmpq	%rbx, %rdi
    00002519: 	je	.Ltmp3640 # Offset: 9497
    0000251b: 	movq	0x120(%rsp), %rax
    00002523: 	leaq	0x1(%rax), %rsi
    00002527: 	callq	_ZdlPvm@PLT # Offset: 9511
.Ltmp3640:
    0000252c: 	movq	0x38(%rsp), %rsi
    00002531: 	leaq	DATAat0x3d535(%rip), %rdx
    00002538: 	movq	%rbp, %rdi
    0000253b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9531
    00002540: 	callq	clock@PLT # Offset: 9536
    00002545: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000254c: 	movq	%rax, start_time(%rip)
    00002553: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000255a: 	subq	$0x20, %rax
    0000255e: 	cmpq	%rax, %r13
    00002561: 	je	.Ltmp3641 # Offset: 9569
    00002567: 	leaq	0x10(%r13), %rdi
    0000256b: 	movq	0x118(%rsp), %r12
    00002573: 	movq	%rdi, (%r13)
    00002577: 	movq	0x110(%rsp), %r15
    0000257f: 	movq	%r15, %rax
    00002582: 	addq	%r12, %rax
    00002585: 	je	.Ltmp3642 # Offset: 9605
    00002587: 	testq	%r15, %r15
    0000258a: 	je	.Ltmp3643 # Offset: 9610
.Ltmp3642:
    00002590: 	movq	%r12, 0x88(%rsp)
    00002598: 	cmpq	$0xf, %r12
    0000259c: 	ja	.Ltmp3644 # Offset: 9628
    000025a2: 	cmpq	$0x1, %r12
    000025a6: 	jne	.Ltmp3645 # Offset: 9638
    000025ac: 	movzbl	(%r15), %eax
    000025b0: 	movb	%al, 0x10(%r13)
.Ltmp3701:
    000025b4: 	movq	%r12, 0x8(%r13)
    000025b8: 	movb	$0x0, (%rdi,%r12)
    000025bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025c4: 	addq	$0x20, %rax
    000025c8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3672:
    000025cf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000025d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025dd: 	je	.Ltmp3646 # Offset: 9693
.Ltmp3671:
    000025e3: 	movq	-0x20(%rax), %r12
    000025e7: 	callq	clock@PLT # Offset: 9703
    000025ec: 	pxor	%xmm0, %xmm0
    000025f0: 	movq	%rax, end_time(%rip)
    000025f7: 	movq	%r12, %rdi
    000025fa: 	subq	start_time(%rip), %rax
    00002601: 	cvtsi2sd	%rax, %xmm0
    00002606: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000260e: 	callq	_Z13record_resultdPKc # Offset: 9742
    00002613: 	movq	0x110(%rsp), %rdi
    0000261b: 	cmpq	%rbx, %rdi
    0000261e: 	je	.Ltmp3647 # Offset: 9758
    00002620: 	movq	0x120(%rsp), %rax
    00002628: 	leaq	0x1(%rax), %rsi
    0000262c: 	callq	_ZdlPvm@PLT # Offset: 9772
.Ltmp3647:
    00002631: 	movq	0x38(%rsp), %rsi
    00002636: 	leaq	DATAat0x3d640(%rip), %rdx
    0000263d: 	movq	%rbp, %rdi
    00002640: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9792
    00002645: 	leaq	_Z8test_cosIsET_S0_(%rip), %r12
    0000264c: 	movq	%rbp, %rcx
    0000264f: 	movl	%r14d, %esi
    00002652: 	movl	$0x1f40, %edi
    00002657: 	movq	%r12, %rdx
    0000265a: 	callq	"_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9818
    0000265f: 	movq	0x110(%rsp), %rdi
    00002667: 	cmpq	%rbx, %rdi
    0000266a: 	je	.Ltmp3648 # Offset: 9834
    0000266c: 	movq	0x120(%rsp), %rax
    00002674: 	leaq	0x1(%rax), %rsi
    00002678: 	callq	_ZdlPvm@PLT # Offset: 9848
.Ltmp3648:
    0000267d: 	movq	0x38(%rsp), %rsi
    00002682: 	leaq	DATAat0x3d550(%rip), %rdx
    00002689: 	movq	%rbp, %rdi
    0000268c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9868
    00002691: 	movq	%rbp, %rcx
    00002694: 	movq	%r12, %rdx
    00002697: 	movl	%r14d, %esi
    0000269a: 	movl	$0x1f40, %edi
    0000269f: 	callq	"_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9887
    000026a4: 	movq	0x110(%rsp), %rdi
    000026ac: 	cmpq	%rbx, %rdi
    000026af: 	je	.Ltmp3649 # Offset: 9903
    000026b1: 	movq	0x120(%rsp), %rax
    000026b9: 	leaq	0x1(%rax), %rsi
    000026bd: 	callq	_ZdlPvm@PLT # Offset: 9917
.Ltmp3649:
    000026c2: 	movq	0x38(%rsp), %rsi
    000026c7: 	leaq	DATAat0x3d567(%rip), %rdx
    000026ce: 	movq	%rbp, %rdi
    000026d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9937
    000026d6: 	leaq	_Z8test_sqrIsET_S0_(%rip), %r12
    000026dd: 	movq	%rbp, %rdx
    000026e0: 	movl	%r14d, %edi
    000026e3: 	movq	%r12, %rsi
    000026e6: 	callq	"_Z23test_const_function_optIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9958
    000026eb: 	movq	0x110(%rsp), %rdi
    000026f3: 	cmpq	%rbx, %rdi
    000026f6: 	je	.Ltmp3650 # Offset: 9974
    000026f8: 	movq	0x120(%rsp), %rax
    00002700: 	leaq	0x1(%rax), %rsi
    00002704: 	callq	_ZdlPvm@PLT # Offset: 9988
.Ltmp3650:
    00002709: 	movq	0x38(%rsp), %rsi
    0000270e: 	leaq	DATAat0x3d660(%rip), %rdx
    00002715: 	movq	%rbp, %rdi
    00002718: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10008
    0000271d: 	movq	%rbp, %rcx
    00002720: 	movq	%r12, %rdx
    00002723: 	movl	%r14d, %esi
    00002726: 	movl	$0x1f40, %edi
    0000272b: 	callq	"_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10027
    00002730: 	movq	0x110(%rsp), %rdi
    00002738: 	cmpq	%rbx, %rdi
    0000273b: 	je	.Ltmp3651 # Offset: 10043
    0000273d: 	movq	0x120(%rsp), %rax
    00002745: 	leaq	0x1(%rax), %rsi
    00002749: 	callq	_ZdlPvm@PLT # Offset: 10057
.Ltmp3651:
    0000274e: 	movq	0x38(%rsp), %rsi
    00002753: 	leaq	DATAat0x3d582(%rip), %rdx
    0000275a: 	movq	%rbp, %rdi
    0000275d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10077
    00002762: 	movq	%rbp, %rcx
    00002765: 	movq	%r12, %rdx
    00002768: 	movl	%r14d, %esi
    0000276b: 	movl	$0x1f40, %edi
    00002770: 	callq	"_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10096
    00002775: 	movq	0x110(%rsp), %rdi
    0000277d: 	cmpq	%rbx, %rdi
    00002780: 	je	.Ltmp3652 # Offset: 10112
    00002782: 	movq	0x120(%rsp), %rax
    0000278a: 	leaq	0x1(%rax), %rsi
    0000278e: 	callq	_ZdlPvm@PLT # Offset: 10126
.Ltmp3652:
    00002793: 	movq	0x38(%rsp), %rsi
    00002798: 	leaq	DATAat0x3d599(%rip), %rdx
    0000279f: 	movq	%rbp, %rdi
    000027a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10146
    000027a7: 	callq	clock@PLT # Offset: 10151
    000027ac: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000027b3: 	movq	%rax, start_time(%rip)
    000027ba: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000027c1: 	subq	$0x20, %rax
    000027c5: 	cmpq	%rax, %r13
    000027c8: 	je	.Ltmp3653 # Offset: 10184
    000027ce: 	leaq	0x10(%r13), %rdi
    000027d2: 	movq	0x118(%rsp), %r12
    000027da: 	movq	%rdi, (%r13)
    000027de: 	movq	0x110(%rsp), %r15
    000027e6: 	movq	%r15, %rax
    000027e9: 	addq	%r12, %rax
    000027ec: 	je	.Ltmp3654 # Offset: 10220
    000027ee: 	testq	%r15, %r15
    000027f1: 	je	.Ltmp3655 # Offset: 10225
.Ltmp3654:
    000027f7: 	movq	%r12, 0x88(%rsp)
    000027ff: 	cmpq	$0xf, %r12
    00002803: 	ja	.Ltmp3656 # Offset: 10243
    00002809: 	cmpq	$0x1, %r12
    0000280d: 	jne	.Ltmp3657 # Offset: 10253
    00002813: 	movzbl	(%r15), %eax
    00002817: 	movb	%al, 0x10(%r13)
.Ltmp3703:
    0000281b: 	movq	%r12, 0x8(%r13)
    0000281f: 	movb	$0x0, (%rdi,%r12)
    00002824: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000282b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002832: 	addq	$0x20, %rax
    00002836: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000283d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00002844: 	je	.Ltmp3658 # Offset: 10308
.Ltmp3670:
    0000284a: 	movq	-0x20(%rax), %r12
    0000284e: 	callq	clock@PLT # Offset: 10318
    00002853: 	pxor	%xmm0, %xmm0
    00002857: 	movq	%rax, end_time(%rip)
    0000285e: 	movq	%r12, %rdi
    00002861: 	subq	start_time(%rip), %rax
    00002868: 	cvtsi2sd	%rax, %xmm0
    0000286d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002875: 	callq	_Z13record_resultdPKc # Offset: 10357
    0000287a: 	movq	0x110(%rsp), %rdi
    00002882: 	cmpq	%rbx, %rdi
    00002885: 	je	.Ltmp3659 # Offset: 10373
    00002887: 	movq	0x120(%rsp), %rax
    0000288f: 	leaq	0x1(%rax), %rsi
    00002893: 	callq	_ZdlPvm@PLT # Offset: 10387
.Ltmp3659:
    00002898: 	movq	0x38(%rsp), %rsi
    0000289d: 	leaq	DATAat0x3d5b2(%rip), %rdx
    000028a4: 	movq	%rbp, %rdi
    000028a7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10407
    000028ac: 	leaq	_Z9test_hashIsET_S0_(%rip), %r12
    000028b3: 	movq	%rbp, %rcx
    000028b6: 	movl	%r14d, %esi
    000028b9: 	movl	$0x1f40, %edi
    000028be: 	movq	%r12, %rdx
    000028c1: 	callq	"_Z27test_const_function_halfoptIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10433
    000028c6: 	movq	0x110(%rsp), %rdi
    000028ce: 	cmpq	%rbx, %rdi
    000028d1: 	je	.Ltmp3660 # Offset: 10449
    000028d3: 	movq	0x120(%rsp), %rax
    000028db: 	leaq	0x1(%rax), %rsi
    000028df: 	callq	_ZdlPvm@PLT # Offset: 10463
.Ltmp3660:
    000028e4: 	movq	0x38(%rsp), %rsi
    000028e9: 	leaq	DATAat0x3d5cf(%rip), %rdx
    000028f0: 	movq	%rbp, %rdi
    000028f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10483
    000028f8: 	movq	%rbp, %rcx
    000028fb: 	movq	%r12, %rdx
    000028fe: 	movl	%r14d, %esi
    00002901: 	movl	$0x1f40, %edi
    00002906: 	callq	"_Z19test_const_functionIsPFssEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10502
    0000290b: 	movq	0x110(%rsp), %rdi
    00002913: 	cmpq	%rbx, %rdi
    00002916: 	je	.Ltmp3661 # Offset: 10518
    00002918: 	movq	0x120(%rsp), %rax
    00002920: 	leaq	0x1(%rax), %rsi
    00002924: 	callq	_ZdlPvm@PLT # Offset: 10532
.Ltmp3661:
    00002929: 	movq	0x38(%rsp), %rsi
    0000292e: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002935: 	movq	%rbp, %rdi
    00002938: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10552
    0000293d: 	movl	iterations(%rip), %edx
    00002943: 	xorl	%r8d, %r8d
    00002946: 	xorl	%ecx, %ecx
    00002948: 	movl	$0x1f40, %esi
    0000294d: 	movq	0x110(%rsp), %rdi
    00002955: 	callq	_Z9summarizePKciiii # Offset: 10581
    0000295a: 	movq	0x110(%rsp), %rdi
    00002962: 	cmpq	%rbx, %rdi
    00002965: 	je	.Ltmp3662 # Offset: 10597
    00002967: 	movq	0x120(%rsp), %rax
    0000296f: 	leaq	0x1(%rax), %rsi
    00002973: 	callq	_ZdlPvm@PLT # Offset: 10611
.Ltmp3662:
    00002978: 	movq	0xf0(%rsp), %rdi
    00002980: 	leaq	0x100(%rsp), %rax
    00002988: 	cmpq	%rax, %rdi
    0000298b: 	je	.Ltmp3663 # Offset: 10635
    0000298d: 	movq	0x100(%rsp), %rax
    00002995: 	leaq	0x1(%rax), %rsi
    00002999: 	callq	_ZdlPvm@PLT # Offset: 10649
.Ltmp3663:
    0000299e: 	movq	0xd0(%rsp), %rdi
    000029a6: 	leaq	0xe0(%rsp), %rax
    000029ae: 	cmpq	%rax, %rdi
    000029b1: 	je	.Ltmp3664 # Offset: 10673
    000029b3: 	movq	0xe0(%rsp), %rax
    000029bb: 	leaq	0x1(%rax), %rsi
    000029bf: 	callq	_ZdlPvm@PLT # Offset: 10687
.Ltmp3664:
    000029c4: 	movq	0xb0(%rsp), %rdi
    000029cc: 	cmpq	0x70(%rsp), %rdi
    000029d1: 	je	.Ltmp3665 # Offset: 10705
    000029d3: 	movq	0xc0(%rsp), %rax
    000029db: 	leaq	0x1(%rax), %rsi
    000029df: 	callq	_ZdlPvm@PLT # Offset: 10719
.Ltmp3665:
    000029e4: 	movq	0x4028(%rsp), %rax
    000029ec: 	subq	%fs:0x28, %rax
    000029f5: 	jne	.Ltmp3666 # Offset: 10741
    000029fb: 	addq	$0x4038, %rsp
    00002a02: 	popq	%rbx
    00002a03: 	popq	%rbp
    00002a04: 	popq	%r12
    00002a06: 	popq	%r13
    00002a08: 	popq	%r14
    00002a0a: 	popq	%r15
    00002a0c: 	retq # Offset: 10764
    00002a0d: 	nopl	(%rax) # Size: 3
.Ltmp3609:
    00002a10: 	movq	0x110(%rsp), %rdx
    00002a18: 	movq	%r15, %rsi
    00002a1b: 	movl	$0x1, %edi
    00002a20: 	xorl	%eax, %eax
    00002a22: 	callq	__printf_chk@PLT # Offset: 10786
    00002a27: 	addl	$0x1, %r12d
    00002a2b: 	cmpl	iterations(%rip), %r12d
    00002a32: 	jl	.Ltmp3667 # Offset: 10802
    00002a38: 	jmp	.Ltmp3608 # Offset: 10808
    00002a3d: 	nopl	(%rax) # Size: 3
.Ltmp3614:
    00002a40: 	movq	0x110(%rsp), %rdx
    00002a48: 	movq	%r15, %rsi
    00002a4b: 	movl	$0x1, %edi
    00002a50: 	xorl	%eax, %eax
    00002a52: 	callq	__printf_chk@PLT # Offset: 10834
    00002a57: 	addl	$0x1, %r14d
    00002a5b: 	cmpl	%r14d, iterations(%rip)
    00002a62: 	jg	.Ltmp3668 # Offset: 10850
    00002a68: 	jmp	.Ltmp3613 # Offset: 10856
.Ltmp3635:
    00002a6d: 	leaq	0x88(%rsp), %rsi
    00002a75: 	xorl	%edx, %edx
    00002a77: 	movq	%r13, %rdi
    00002a7a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10874
    00002a7f: 	movq	%rax, (%r13)
    00002a83: 	movq	%rax, %rdi
    00002a86: 	movq	0x88(%rsp), %rax
    00002a8e: 	movq	%rax, 0x10(%r13)
.Ltmp3705:
    00002a92: 	movq	%r12, %rdx
    00002a95: 	movq	%r15, %rsi
    00002a98: 	callq	memcpy@PLT # Offset: 10904
    00002a9d: 	movq	0x88(%rsp), %r12
    00002aa5: 	movq	(%r13), %rdi
    00002aa9: 	jmp	.Ltmp3669 # Offset: 10921
.Ltmp3653:
    00002aae: 	movq	%rbp, %rsi
    00002ab1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ab8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10936
    00002abd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ac4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002acb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ad2: 	jne	.Ltmp3670 # Offset: 10962
.Ltmp3658:
    00002ad8: 	movq	-0x8(%rdx), %rax
    00002adc: 	addq	$0x200, %rax
    00002ae2: 	jmp	.Ltmp3670 # Offset: 10978
.Ltmp3646:
    00002ae7: 	movq	-0x8(%rdx), %rax
    00002aeb: 	addq	$0x200, %rax
    00002af1: 	jmp	.Ltmp3671 # Offset: 10993
.Ltmp3641:
    00002af6: 	movq	%rbp, %rsi
    00002af9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b00: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11008
    00002b05: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b0c: 	jmp	.Ltmp3672 # Offset: 11020
.Ltmp3637:
    00002b11: 	movq	-0x8(%rdx), %rax
    00002b15: 	addq	$0x200, %rax
    00002b1b: 	jmp	.Ltmp3673 # Offset: 11035
.Ltmp3632:
    00002b20: 	movq	%rbp, %rsi
    00002b23: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b2a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11050
    00002b2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b36: 	jmp	.Ltmp3674 # Offset: 11062
.Ltmp3627:
    00002b3b: 	movq	-0x8(%rdx), %rax
    00002b3f: 	addq	$0x200, %rax
    00002b45: 	jmp	.Ltmp3675 # Offset: 11077
.Ltmp3624:
    00002b4a: 	movq	-0x8(%rdx), %rax
    00002b4e: 	addq	$0x200, %rax
    00002b54: 	jmp	.Ltmp3676 # Offset: 11092
.Ltmp3621:
    00002b59: 	movq	-0x8(%rdx), %rax
    00002b5d: 	addq	$0x200, %rax
    00002b63: 	jmp	.Ltmp3677 # Offset: 11107
.Ltmp3618:
    00002b68: 	movq	-0x8(%rdx), %rax
    00002b6c: 	addq	$0x200, %rax
    00002b72: 	jmp	.Ltmp3678 # Offset: 11122
.Ltmp3615:
    00002b77: 	movq	-0x8(%rdx), %rax
    00002b7b: 	addq	$0x200, %rax
    00002b81: 	jmp	.Ltmp3679 # Offset: 11137
.Ltmp3610:
    00002b86: 	movq	-0x8(%rdx), %rax
    00002b8a: 	addq	$0x200, %rax
    00002b90: 	jmp	.Ltmp3680 # Offset: 11152
.Ltmp3605:
    00002b95: 	movq	-0x8(%rdx), %rax
    00002b99: 	addq	$0x200, %rax
    00002b9f: 	jmp	.Ltmp3681 # Offset: 11167
.Ltmp3599:
    00002ba4: 	movq	-0x8(%rdx), %rax
    00002ba8: 	addq	$0x200, %rax
    00002bae: 	jmp	.Ltmp3682 # Offset: 11182
.Ltmp3593:
    00002bb3: 	movq	-0x8(%rdx), %rax
    00002bb7: 	addq	$0x200, %rax
    00002bbd: 	jmp	.Ltmp3683 # Offset: 11197
.Ltmp3587:
    00002bc2: 	movq	-0x8(%rdx), %rax
    00002bc6: 	addq	$0x200, %rax
    00002bcc: 	jmp	.Ltmp3684 # Offset: 11212
.Ltmp3580:
    00002bd1: 	movq	-0x8(%rdx), %rax
    00002bd5: 	addq	$0x200, %rax
    00002bdb: 	jmp	.Ltmp3685 # Offset: 11227
.Ltmp3574:
    00002be0: 	movq	-0x8(%rdx), %rax
    00002be4: 	addq	$0x200, %rax
    00002bea: 	jmp	.Ltmp3686 # Offset: 11242
.Ltmp3568:
    00002bef: 	movq	-0x8(%rdx), %rax
    00002bf3: 	addq	$0x200, %rax
    00002bf9: 	jmp	.Ltmp3687 # Offset: 11257
.Ltmp3562:
    00002bfe: 	movq	-0x8(%rdx), %rax
    00002c02: 	addq	$0x200, %rax
    00002c08: 	jmp	.Ltmp3688 # Offset: 11272
.Ltmp3556:
    00002c0d: 	movq	-0x8(%rdx), %rax
    00002c11: 	addq	$0x200, %rax
    00002c17: 	jmp	.Ltmp3689 # Offset: 11287
.Ltmp3550:
    00002c1c: 	movq	-0x8(%rdx), %rax
    00002c20: 	addq	$0x200, %rax
    00002c26: 	jmp	.Ltmp3690 # Offset: 11302
.Ltmp3544:
    00002c2b: 	movq	-0x8(%rdx), %rax
    00002c2f: 	addq	$0x200, %rax
    00002c35: 	jmp	.Ltmp3691 # Offset: 11317
.Ltmp3538:
    00002c3a: 	movq	-0x8(%rdx), %rax
    00002c3e: 	addq	$0x200, %rax
    00002c44: 	jmp	.Ltmp3692 # Offset: 11332
.Ltmp3532:
    00002c49: 	movq	-0x8(%rdx), %rax
    00002c4d: 	addq	$0x200, %rax
    00002c53: 	jmp	.Ltmp3693 # Offset: 11347
.Ltmp3526:
    00002c58: 	movq	-0x8(%rdx), %rax
    00002c5c: 	addq	$0x200, %rax
    00002c62: 	jmp	.Ltmp3694 # Offset: 11362
.Ltmp3520:
    00002c67: 	movq	-0x8(%rdx), %rax
    00002c6b: 	addq	$0x200, %rax
    00002c71: 	jmp	.Ltmp3695 # Offset: 11377
.Ltmp3514:
    00002c76: 	movq	-0x8(%rdx), %rax
    00002c7a: 	addq	$0x200, %rax
    00002c80: 	jmp	.Ltmp3696 # Offset: 11392
.Ltmp3508:
    00002c85: 	movq	-0x8(%rdx), %rax
    00002c89: 	addq	$0x200, %rax
    00002c8f: 	jmp	.Ltmp3697 # Offset: 11407
.Ltmp3502:
    00002c94: 	movq	-0x8(%rdx), %rax
    00002c98: 	addq	$0x200, %rax
    00002c9e: 	jmp	.Ltmp3698 # Offset: 11422
.Ltmp3496:
    00002ca3: 	movq	-0x8(%rdx), %rax
    00002ca7: 	addq	$0x200, %rax
    00002cad: 	jmp	.Ltmp3699 # Offset: 11437
.Ltmp3490:
    00002cb2: 	movq	-0x8(%rdx), %rax
    00002cb6: 	addq	$0x200, %rax
    00002cbc: 	jmp	.Ltmp3700 # Offset: 11452
.Ltmp3645:
    00002cc1: 	testq	%r12, %r12
    00002cc4: 	je	.Ltmp3701 # Offset: 11460
    00002cca: 	jmp	.Ltmp3702 # Offset: 11466
    00002ccc: 	nopl	(%rax) # Size: 4
.Ltmp3657:
    00002cd0: 	testq	%r12, %r12
    00002cd3: 	je	.Ltmp3703 # Offset: 11475
    00002cd9: 	jmp	.Ltmp3704 # Offset: 11481
    00002cdb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3636:
    00002ce0: 	testq	%r12, %r12
    00002ce3: 	je	.Ltmp3669 # Offset: 11491
    00002ce9: 	jmp	.Ltmp3705 # Offset: 11497
    00002cee: 	nop # Size: 2
.Ltmp3644:
    00002cf0: 	leaq	0x88(%rsp), %rsi
    00002cf8: 	xorl	%edx, %edx
    00002cfa: 	movq	%r13, %rdi
    00002cfd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11517
    00002d02: 	movq	%rax, (%r13)
    00002d06: 	movq	%rax, %rdi
    00002d09: 	movq	0x88(%rsp), %rax
    00002d11: 	movq	%rax, 0x10(%r13)
.Ltmp3702:
    00002d15: 	movq	%r12, %rdx
    00002d18: 	movq	%r15, %rsi
    00002d1b: 	callq	memcpy@PLT # Offset: 11547
    00002d20: 	movq	0x88(%rsp), %r12
    00002d28: 	movq	(%r13), %rdi
    00002d2c: 	jmp	.Ltmp3701 # Offset: 11564
.Ltmp3656:
    00002d31: 	leaq	0x88(%rsp), %rsi
    00002d39: 	xorl	%edx, %edx
    00002d3b: 	movq	%r13, %rdi
    00002d3e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11582
    00002d43: 	movq	%rax, (%r13)
    00002d47: 	movq	%rax, %rdi
    00002d4a: 	movq	0x88(%rsp), %rax
    00002d52: 	movq	%rax, 0x10(%r13)
.Ltmp3704:
    00002d56: 	movq	%r12, %rdx
    00002d59: 	movq	%r15, %rsi
    00002d5c: 	callq	memcpy@PLT # Offset: 11612
    00002d61: 	movq	0x88(%rsp), %r12
    00002d69: 	movq	(%r13), %rdi
    00002d6d: 	jmp	.Ltmp3703 # Offset: 11629
.Ltmp3643:
    00002d72: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d79: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11641
.Ltmp3655:
    00002d7e: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d85: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11653
.Ltmp3666:
    00002d8a: 	callq	__stack_chk_fail@PLT # Offset: 11658
.Ltmp3634:
    00002d8f: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d96: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11670
    00002d9b: 	endbr64
    00002d9f: 	movq	%rax, %rbp
    00002da2: 	jmp	.Ltmp3706 # Offset: 11682
    00002da4: 	endbr64
    00002da8: 	movq	%rax, %rbp
    00002dab: 	jmp	.Ltmp3707 # Offset: 11691
.Ltmp3706:
    00002dad: 	movq	0x130(%rsp), %rdi
    00002db5: 	leaq	0x140(%rsp), %rax
    00002dbd: 	cmpq	%rax, %rdi
    00002dc0: 	je	.Ltmp3707 # Offset: 11712
.Ltmp3714:
    00002dc2: 	movq	0x140(%rsp), %rax
    00002dca: 	leaq	0x1(%rax), %rsi
    00002dce: 	callq	_ZdlPvm@PLT # Offset: 11726
.Ltmp3707:
    00002dd3: 	movq	0xb0(%rsp), %rdi
    00002ddb: 	cmpq	0x70(%rsp), %rdi
    00002de0: 	je	.Ltmp3708 # Offset: 11744
    00002de2: 	movq	0xc0(%rsp), %rax
    00002dea: 	leaq	0x1(%rax), %rsi
    00002dee: 	callq	_ZdlPvm@PLT # Offset: 11758
.Ltmp3708:
    00002df3: 	movq	%rbp, %rdi
    00002df6: 	callq	_Unwind_Resume@PLT # Offset: 11766
    00002dfb: 	endbr64
.Ltmp3710:
    00002dff: 	movq	%rax, %rbp
    00002e02: 	jmp	.Ltmp3709 # Offset: 11778
    00002e04: 	endbr64
    00002e08: 	jmp	.Ltmp3710 # Offset: 11784
    00002e0a: 	endbr64
    00002e0e: 	jmp	.Ltmp3710 # Offset: 11790
    00002e10: 	endbr64
    00002e14: 	jmp	.Ltmp3710 # Offset: 11796
    00002e16: 	endbr64
    00002e1a: 	jmp	.Ltmp3710 # Offset: 11802
    00002e1c: 	endbr64
.Ltmp3712:
    00002e20: 	movq	%rax, %rbp
    00002e23: 	jmp	.Ltmp3711 # Offset: 11811
    00002e25: 	endbr64
    00002e29: 	jmp	.Ltmp3712 # Offset: 11817
    00002e2b: 	endbr64
    00002e2f: 	jmp	.Ltmp3710 # Offset: 11823
    00002e31: 	endbr64
    00002e35: 	jmp	.Ltmp3710 # Offset: 11829
.Ltmp3709:
    00002e37: 	movq	0x110(%rsp), %rdi
    00002e3f: 	cmpq	%rbx, %rdi
    00002e42: 	je	.Ltmp3713 # Offset: 11842
.Ltmp3718:
    00002e44: 	movq	0x120(%rsp), %rax
    00002e4c: 	leaq	0x1(%rax), %rsi
    00002e50: 	callq	_ZdlPvm@PLT # Offset: 11856
.Ltmp3713:
    00002e55: 	movq	0xd0(%rsp), %rdi
    00002e5d: 	leaq	0xe0(%rsp), %rax
    00002e65: 	cmpq	%rax, %rdi
    00002e68: 	je	.Ltmp3707 # Offset: 11880
    00002e6e: 	movq	0xe0(%rsp), %rax
    00002e76: 	leaq	0x1(%rax), %rsi
    00002e7a: 	callq	_ZdlPvm@PLT # Offset: 11898
    00002e7f: 	jmp	.Ltmp3707 # Offset: 11903
    00002e84: 	endbr64
    00002e88: 	jmp	.Ltmp3710 # Offset: 11912
.Ltmp3711:
    00002e8d: 	movq	0x130(%rsp), %rdi
    00002e95: 	cmpq	0x60(%rsp), %rdi
    00002e9a: 	jne	.Ltmp3714 # Offset: 11930
    00002ea0: 	jmp	.Ltmp3707 # Offset: 11936
    00002ea5: 	endbr64
    00002ea9: 	jmp	.Ltmp3712 # Offset: 11945
    00002eae: 	endbr64
    00002eb2: 	jmp	.Ltmp3712 # Offset: 11954
    00002eb7: 	endbr64
    00002ebb: 	movq	%rax, %rbp
    00002ebe: 	jmp	.Ltmp3715 # Offset: 11966
    00002ec0: 	endbr64
    00002ec4: 	jmp	.Ltmp3712 # Offset: 11972
.Ltmp3716:
    00002ec9: 	movq	0x110(%rsp), %rdi
    00002ed1: 	cmpq	%rbx, %rdi
    00002ed4: 	je	.Ltmp3715 # Offset: 11988
    00002ed6: 	movq	0x120(%rsp), %rax
    00002ede: 	leaq	0x1(%rax), %rsi
    00002ee2: 	callq	_ZdlPvm@PLT # Offset: 12002
.Ltmp3715:
    00002ee7: 	movq	0xf0(%rsp), %rdi
    00002eef: 	leaq	0x100(%rsp), %rax
    00002ef7: 	cmpq	%rax, %rdi
    00002efa: 	je	.Ltmp3713 # Offset: 12026
    00002f00: 	movq	0x100(%rsp), %rax
    00002f08: 	leaq	0x1(%rax), %rsi
    00002f0c: 	callq	_ZdlPvm@PLT # Offset: 12044
    00002f11: 	jmp	.Ltmp3713 # Offset: 12049
    00002f16: 	endbr64
    00002f1a: 	jmp	.Ltmp3712 # Offset: 12058
    00002f1f: 	endbr64
    00002f23: 	jmp	.Ltmp3712 # Offset: 12067
    00002f28: 	endbr64
    00002f2c: 	jmp	.Ltmp3712 # Offset: 12076
    00002f31: 	endbr64
    00002f35: 	jmp	.Ltmp3712 # Offset: 12085
    00002f3a: 	endbr64
.Ltmp3719:
    00002f3e: 	movq	%rax, %rbp
    00002f41: 	jmp	.Ltmp3716 # Offset: 12097
    00002f43: 	endbr64
    00002f47: 	jmp	.Ltmp3712 # Offset: 12103
    00002f4c: 	endbr64
    00002f50: 	movq	%rax, %rbp
    00002f53: 	jmp	.Ltmp3717 # Offset: 12115
    00002f55: 	endbr64
    00002f59: 	movq	%rax, %rbp
    00002f5c: 	jmp	.Ltmp3713 # Offset: 12124
.Ltmp3717:
    00002f61: 	movq	0x110(%rsp), %rdi
    00002f69: 	leaq	0x120(%rsp), %rax
    00002f71: 	cmpq	%rax, %rdi
    00002f74: 	jne	.Ltmp3718 # Offset: 12148
    00002f7a: 	jmp	.Ltmp3713 # Offset: 12154
    00002f7f: 	endbr64
    00002f83: 	jmp	.Ltmp3710 # Offset: 12163
    00002f88: 	endbr64
    00002f8c: 	jmp	.Ltmp3710 # Offset: 12172
    00002f91: 	endbr64
    00002f95: 	jmp	.Ltmp3712 # Offset: 12181
    00002f9a: 	endbr64
    00002f9e: 	jmp	.Ltmp3712 # Offset: 12190
    00002fa3: 	endbr64
    00002fa7: 	jmp	.Ltmp3712 # Offset: 12199
    00002fac: 	endbr64
    00002fb0: 	jmp	.Ltmp3710 # Offset: 12208
    00002fb5: 	endbr64
    00002fb9: 	jmp	.Ltmp3719 # Offset: 12217
    00002fbb: 	endbr64
    00002fbf: 	jmp	.Ltmp3712 # Offset: 12223
    00002fc4: 	endbr64
    00002fc8: 	jmp	.Ltmp3719 # Offset: 12232
    00002fcd: 	endbr64
    00002fd1: 	jmp	.Ltmp3719 # Offset: 12241
    00002fd6: 	endbr64
    00002fda: 	jmp	.Ltmp3719 # Offset: 12250
    00002fdf: 	endbr64
    00002fe3: 	jmp	.Ltmp3712 # Offset: 12259
    00002fe8: 	endbr64
    00002fec: 	jmp	.Ltmp3719 # Offset: 12268
    00002ff1: 	endbr64
    00002ff5: 	jmp	.Ltmp3719 # Offset: 12277
    00002ffa: 	endbr64
    00002ffe: 	jmp	.Ltmp3719 # Offset: 12286
    00003003: 	endbr64
    00003007: 	jmp	.Ltmp3719 # Offset: 12295
    0000300c: 	endbr64
    00003010: 	jmp	.Ltmp3719 # Offset: 12304
    00003015: 	endbr64
    00003019: 	jmp	.Ltmp3719 # Offset: 12313
    0000301e: 	endbr64
    00003022: 	jmp	.Ltmp3719 # Offset: 12322
    00003027: 	endbr64
    0000302b: 	jmp	.Ltmp3719 # Offset: 12331
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIsEvd"

Binary Function "_Z9TestLoopsIeEvd" after disassembly {
  Number      : 153
  State       : disassembled
  Address     : 0x28620
  Size        : 0x3947
  MaxSize     : 0x3950
  Offset      : 0x28620
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIeEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0152:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x1f000(%rsp), %r11
.Ltmp3720:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp3720 # Offset: 37
    00000027: 	subq	$0x948, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000003d: 	movsd	%xmm0, 0x20(%rsp)
    00000043: 	leaq	0x530(%rsp), %rbp
    0000004b: 	leaq	0x1f930(%rsp), %rbx
    00000053: 	movq	%fs:0x28, %rax
    0000005c: 	movq	%rax, 0x1f938(%rsp)
    00000064: 	xorl	%eax, %eax
    00000066: 	leaq	0x1a0(%rsp), %rax
    0000006e: 	movaps	%xmm7, 0xc0(%rsp)
    00000076: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000007e: 	movq	%rax, 0xa0(%rsp)
    00000086: 	movq	%rax, 0x190(%rsp)
    0000008e: 	movabsq	$0x756f6420676e6f6c, %rax
    00000098: 	movq	%rax, 0x1a0(%rsp)
    000000a0: 	movl	$0x6c62, %eax
    000000a5: 	movw	%ax, 0x1a8(%rsp)
    000000ad: 	leaq	0xc0(%rsp), %rax
    000000b5: 	movq	%rax, %rsi
    000000b8: 	movq	%rax, 0xa8(%rsp)
    000000c0: 	movb	$0x65, 0x1aa(%rsp)
    000000c8: 	movq	$0xb, 0x198(%rsp)
    000000d4: 	movb	$0x0, 0x1ab(%rsp)
    000000dc: 	movaps	%xmm7, 0xd0(%rsp)
    000000e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 228
    000000e9: 	fldl	0x20(%rsp)
    000000ed: 	fldl	init_value(%rip)
    000000f3: 	movq	%rbp, %rax
    000000f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3721:
    00000100: 	addq	$0x10, %rax
    00000104: 	fld	%st(0)
    00000106: 	fstpt	-0x10(%rax)
    00000109: 	cmpq	%rbx, %rax
    0000010c: 	jne	.Ltmp3721 # Offset: 268
    0000010e: 	fstp	%st(0)
    00000110: 	fstpt	0x40(%rsp)
    00000114: 	fldt	0x40(%rsp)
    00000118: 	leaq	0x210(%rsp), %rax
    00000120: 	leaq	0x190(%rsp), %r13
    00000128: 	leaq	DATAat0x3d273(%rip), %rdx
    0000012f: 	movq	%r13, %rsi
    00000132: 	movq	%rax, %rdi
    00000135: 	movq	%rax, 0x80(%rsp)
    0000013d: 	fld	%st(0)
    0000013f: 	fadd	%st(1), %st
    00000141: 	fld	%st(0)
    00000143: 	fstpt	0x50(%rsp)
    00000147: 	flds	DATAat0x3d70c(%rip)
    0000014d: 	fadd	%st(2), %st
    0000014f: 	fld	%st(0)
    00000151: 	fstpt	0x60(%rsp)
    00000155: 	fdivrp	%st, %st(1)
    00000157: 	faddp	%st, %st(1)
    00000159: 	fstpt	0x70(%rsp)
    0000015d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 349
    00000162: 	callq	clock@PLT # Offset: 354
    00000167: 	movl	iterations(%rip), %edx
    0000016d: 	movq	%rax, start_time(%rip)
    00000174: 	testl	%edx, %edx
    00000176: 	jle	.Ltmp3722 # Offset: 374
    0000017c: 	pxor	%xmm7, %xmm7
    00000180: 	movsd	DATAat0x3d6e0(%rip), %xmm1
    00000188: 	xorl	%r12d, %r12d
    0000018b: 	movq	DATAat0x3d710(%rip), %xmm2
    00000193: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    0000019b: 	movss	%xmm7, 0x30(%rsp)
    000001a1: 	movss	DATAat0x3d68c(%rip), %xmm7
    000001a9: 	leaq	DATAat0x3d1d8(%rip), %r14
    000001b0: 	movsd	%xmm1, (%rsp)
    000001b5: 	movss	%xmm7, 0x28(%rsp)
    000001bb: 	movaps	%xmm2, 0x10(%rsp)
    000001c0: 	movsd	%xmm3, 0x20(%rsp)
    000001c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3727:
    000001d0: 	fldz
    000001d2: 	movq	%rbp, %rax
    000001d5: 	fldt	0x40(%rsp)
    000001d9: 	nopl	(%rax) # Size: 7
.Ltmp3723:
    000001e0: 	addq	$0x10, %rax
    000001e4: 	fldt	-0x10(%rax)
    000001e7: 	fadd	%st(1), %st
    000001e9: 	faddp	%st, %st(2)
    000001eb: 	cmpq	%rax, %rbx
    000001ee: 	jne	.Ltmp3723 # Offset: 494
    000001f0: 	fstp	%st(0)
    000001f2: 	fldt	0x40(%rsp)
    000001f6: 	faddl	init_value(%rip)
    000001fc: 	fmuls	0x28(%rsp)
    00000200: 	fsubr	%st(1), %st
    00000202: 	fstpl	0x88(%rsp)
    00000209: 	fld	%st(0)
    0000020b: 	fabs
    0000020d: 	fldl	(%rsp)
    00000210: 	fxch	%st(1)
    00000212: 	fcompi	%st(1), %st
    00000214: 	fstp	%st(0)
    00000216: 	jbe	.Ltmp3724 # Offset: 534
    00000218: 	fdivrl	0x88(%rsp)
    0000021f: 	fstpl	0x88(%rsp)
    00000226: 	jmp	.Ltmp3725 # Offset: 550
    00000228: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3724:
    00000230: 	fstp	%st(0)
.Ltmp3725:
    00000232: 	movsd	0x88(%rsp), %xmm0
    0000023b: 	movsd	0x20(%rsp), %xmm2
    00000241: 	andpd	0x10(%rsp), %xmm0
    00000247: 	comisd	%xmm0, %xmm2
    0000024b: 	jbe	.Ltmp3726 # Offset: 587
.Ltmp3972:
    00000251: 	addl	$0x1, %r12d
    00000255: 	cmpl	%edx, %r12d
    00000258: 	jl	.Ltmp3727 # Offset: 600
.Ltmp3722:
    0000025e: 	movq	0x80(%rsp), %rsi
    00000266: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000026d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 621
    00000272: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000279: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000280: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000287: 	je	.Ltmp3728 # Offset: 647
.Ltmp4008:
    0000028d: 	movq	-0x20(%rax), %r12
    00000291: 	callq	clock@PLT # Offset: 657
    00000296: 	pxor	%xmm0, %xmm0
    0000029a: 	movq	%rax, end_time(%rip)
    000002a1: 	movq	%r12, %rdi
    000002a4: 	subq	start_time(%rip), %rax
    000002ab: 	cvtsi2sd	%rax, %xmm0
    000002b0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000002b8: 	callq	_Z13record_resultdPKc # Offset: 696
    000002bd: 	movq	0x210(%rsp), %rdi
    000002c5: 	leaq	0x220(%rsp), %r14
    000002cd: 	cmpq	%r14, %rdi
    000002d0: 	je	.Ltmp3729 # Offset: 720
    000002d2: 	movq	0x220(%rsp), %rax
    000002da: 	leaq	0x1(%rax), %rsi
    000002de: 	callq	_ZdlPvm@PLT # Offset: 734
.Ltmp3729:
    000002e3: 	movq	0x80(%rsp), %rdi
    000002eb: 	leaq	DATAat0x3d281(%rip), %rdx
    000002f2: 	movq	%r13, %rsi
    000002f5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 757
    000002fa: 	callq	clock@PLT # Offset: 762
    000002ff: 	movl	iterations(%rip), %edx
    00000305: 	movq	%rax, start_time(%rip)
    0000030c: 	testl	%edx, %edx
    0000030e: 	jle	.Ltmp3730 # Offset: 782
    00000314: 	movss	DATAat0x3d68c(%rip), %xmm4
    0000031c: 	fldt	0x40(%rsp)
    00000320: 	pxor	%xmm5, %xmm5
    00000324: 	xorl	%r12d, %r12d
    00000327: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    0000032f: 	movss	%xmm5, 0x30(%rsp)
    00000335: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000033c: 	movss	%xmm4, 0x28(%rsp)
    00000342: 	fmuls	0x28(%rsp)
    00000346: 	movq	DATAat0x3d710(%rip), %xmm7
    0000034e: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    00000356: 	movsd	%xmm6, (%rsp)
    0000035b: 	movaps	%xmm7, 0x10(%rsp)
    00000360: 	movsd	%xmm1, 0x20(%rsp)
    00000366: 	fstpt	0x90(%rsp)
    0000036d: 	nopl	(%rax) # Size: 3
.Ltmp3735:
    00000370: 	movq	%rbp, %rax
    00000373: 	fldz
    00000375: 	nopl	(%rax) # Size: 3
.Ltmp3731:
    00000378: 	fldt	(%rax)
    0000037a: 	addq	$0x10, %rax
    0000037e: 	faddp	%st, %st(1)
    00000380: 	cmpq	%rax, %rbx
    00000383: 	jne	.Ltmp3731 # Offset: 899
    00000385: 	fldt	0x90(%rsp)
    0000038c: 	faddp	%st, %st(1)
    0000038e: 	fldt	0x40(%rsp)
    00000392: 	faddl	init_value(%rip)
    00000398: 	fmuls	0x28(%rsp)
    0000039c: 	fsubr	%st(1), %st
    0000039e: 	fstpl	0x88(%rsp)
    000003a5: 	fld	%st(0)
    000003a7: 	fabs
    000003a9: 	fldl	(%rsp)
    000003ac: 	fxch	%st(1)
    000003ae: 	fcompi	%st(1), %st
    000003b0: 	fstp	%st(0)
    000003b2: 	jbe	.Ltmp3732 # Offset: 946
    000003b4: 	fdivrl	0x88(%rsp)
    000003bb: 	fstpl	0x88(%rsp)
    000003c2: 	jmp	.Ltmp3733 # Offset: 962
    000003c4: 	nopl	(%rax) # Size: 4
.Ltmp3732:
    000003c8: 	fstp	%st(0)
.Ltmp3733:
    000003ca: 	movsd	0x88(%rsp), %xmm0
    000003d3: 	movsd	0x20(%rsp), %xmm4
    000003d9: 	andpd	0x10(%rsp), %xmm0
    000003df: 	comisd	%xmm0, %xmm4
    000003e3: 	jbe	.Ltmp3734 # Offset: 995
.Ltmp3971:
    000003e9: 	addl	$0x1, %r12d
    000003ed: 	cmpl	%edx, %r12d
    000003f0: 	jl	.Ltmp3735 # Offset: 1008
.Ltmp3730:
    000003f6: 	movq	0x80(%rsp), %rsi
    000003fe: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000405: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1029
    0000040a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000411: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000418: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000041f: 	je	.Ltmp3736 # Offset: 1055
.Ltmp4007:
    00000425: 	movq	-0x20(%rax), %r12
    00000429: 	callq	clock@PLT # Offset: 1065
    0000042e: 	pxor	%xmm0, %xmm0
    00000432: 	movq	%rax, end_time(%rip)
    00000439: 	movq	%r12, %rdi
    0000043c: 	subq	start_time(%rip), %rax
    00000443: 	cvtsi2sd	%rax, %xmm0
    00000448: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000450: 	callq	_Z13record_resultdPKc # Offset: 1104
    00000455: 	movq	0x210(%rsp), %rdi
    0000045d: 	cmpq	%r14, %rdi
    00000460: 	je	.Ltmp3737 # Offset: 1120
    00000462: 	movq	0x220(%rsp), %rax
    0000046a: 	leaq	0x1(%rax), %rsi
    0000046e: 	callq	_ZdlPvm@PLT # Offset: 1134
.Ltmp3737:
    00000473: 	movq	0x80(%rsp), %rdi
    0000047b: 	leaq	DATAat0x3d297(%rip), %rdx
    00000482: 	movq	%r13, %rsi
    00000485: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1157
    0000048a: 	callq	clock@PLT # Offset: 1162
    0000048f: 	movl	iterations(%rip), %edx
    00000495: 	movq	%rax, start_time(%rip)
    0000049c: 	testl	%edx, %edx
    0000049e: 	jle	.Ltmp3738 # Offset: 1182
    000004a4: 	fldt	0x40(%rsp)
    000004a8: 	movss	DATAat0x3d68c(%rip), %xmm3
    000004b0: 	pxor	%xmm2, %xmm2
    000004b4: 	xorl	%r12d, %r12d
    000004b7: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000004bf: 	movss	%xmm2, 0x30(%rsp)
    000004c5: 	leaq	DATAat0x3d1d8(%rip), %r15
    000004cc: 	fldt	0x50(%rsp)
    000004d0: 	movq	DATAat0x3d710(%rip), %xmm5
    000004d8: 	movss	%xmm3, 0x28(%rsp)
    000004de: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    000004e6: 	movsd	%xmm4, (%rsp)
    000004eb: 	movaps	%xmm5, 0x10(%rsp)
    000004f0: 	faddp	%st, %st(1)
    000004f2: 	fldt	0x60(%rsp)
    000004f6: 	movsd	%xmm6, 0x20(%rsp)
    000004fc: 	faddp	%st, %st(1)
    000004fe: 	fldt	0x70(%rsp)
    00000502: 	faddp	%st, %st(1)
    00000504: 	fstpt	0x90(%rsp)
    0000050b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3743:
    00000510: 	fldz
    00000512: 	movq	%rbp, %rax
    00000515: 	fldt	0x90(%rsp)
    0000051c: 	nopl	(%rax) # Size: 4
.Ltmp3739:
    00000520: 	addq	$0x10, %rax
    00000524: 	fldt	-0x10(%rax)
    00000527: 	fadd	%st(1), %st
    00000529: 	faddp	%st, %st(2)
    0000052b: 	cmpq	%rax, %rbx
    0000052e: 	jne	.Ltmp3739 # Offset: 1326
    00000530: 	fstp	%st(0)
    00000532: 	fldt	0x90(%rsp)
    00000539: 	faddl	init_value(%rip)
    0000053f: 	fmuls	0x28(%rsp)
    00000543: 	fsubr	%st(1), %st
    00000545: 	fstpl	0x88(%rsp)
    0000054c: 	fld	%st(0)
    0000054e: 	fabs
    00000550: 	fldl	(%rsp)
    00000553: 	fxch	%st(1)
    00000555: 	fcompi	%st(1), %st
    00000557: 	fstp	%st(0)
    00000559: 	jbe	.Ltmp3740 # Offset: 1369
    0000055b: 	fdivrl	0x88(%rsp)
    00000562: 	fstpl	0x88(%rsp)
    00000569: 	jmp	.Ltmp3741 # Offset: 1385
    0000056b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3740:
    00000570: 	fstp	%st(0)
.Ltmp3741:
    00000572: 	movsd	0x88(%rsp), %xmm0
    0000057b: 	movsd	0x20(%rsp), %xmm6
    00000581: 	andpd	0x10(%rsp), %xmm0
    00000587: 	comisd	%xmm0, %xmm6
    0000058b: 	jbe	.Ltmp3742 # Offset: 1419
.Ltmp3970:
    00000591: 	addl	$0x1, %r12d
    00000595: 	cmpl	%edx, %r12d
    00000598: 	jl	.Ltmp3743 # Offset: 1432
.Ltmp3738:
    0000059e: 	movq	0x80(%rsp), %rsi
    000005a6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000005ad: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1453
    000005b2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005b9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005c7: 	je	.Ltmp3744 # Offset: 1479
.Ltmp4006:
    000005cd: 	movq	-0x20(%rax), %r12
    000005d1: 	callq	clock@PLT # Offset: 1489
    000005d6: 	pxor	%xmm0, %xmm0
    000005da: 	movq	%rax, end_time(%rip)
    000005e1: 	movq	%r12, %rdi
    000005e4: 	subq	start_time(%rip), %rax
    000005eb: 	cvtsi2sd	%rax, %xmm0
    000005f0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000005f8: 	callq	_Z13record_resultdPKc # Offset: 1528
    000005fd: 	movq	0x210(%rsp), %rdi
    00000605: 	cmpq	%r14, %rdi
    00000608: 	je	.Ltmp3745 # Offset: 1544
    0000060a: 	movq	0x220(%rsp), %rax
    00000612: 	leaq	0x1(%rax), %rsi
    00000616: 	callq	_ZdlPvm@PLT # Offset: 1558
.Ltmp3745:
    0000061b: 	movq	0x80(%rsp), %rdi
    00000623: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000062a: 	movq	%r13, %rsi
    0000062d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1581
    00000632: 	callq	clock@PLT # Offset: 1586
    00000637: 	movl	iterations(%rip), %edx
    0000063d: 	movq	%rax, start_time(%rip)
    00000644: 	testl	%edx, %edx
    00000646: 	jle	.Ltmp3746 # Offset: 1606
    0000064c: 	movss	DATAat0x3d68c(%rip), %xmm1
    00000654: 	pxor	%xmm7, %xmm7
    00000658: 	xorl	%r12d, %r12d
    0000065b: 	movsd	DATAat0x3d6e0(%rip), %xmm2
    00000663: 	movq	DATAat0x3d710(%rip), %xmm3
    0000066b: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000673: 	movss	%xmm7, 0x30(%rsp)
    00000679: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000680: 	movss	%xmm1, 0x28(%rsp)
    00000686: 	movsd	%xmm2, (%rsp)
    0000068b: 	movaps	%xmm3, 0x10(%rsp)
    00000690: 	movsd	%xmm4, 0x20(%rsp)
    00000696: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3751:
    000006a0: 	fldz
    000006a2: 	movq	%rbp, %rax
    000006a5: 	fldt	0x40(%rsp)
    000006a9: 	fldt	0x50(%rsp)
    000006ad: 	fldt	0x60(%rsp)
    000006b1: 	fldt	0x70(%rsp)
    000006b5: 	nopl	(%rax) # Size: 3
.Ltmp3747:
    000006b8: 	addq	$0x10, %rax
    000006bc: 	fldt	-0x10(%rax)
    000006bf: 	fadd	%st(4), %st
    000006c1: 	fadd	%st(3), %st
    000006c3: 	fadd	%st(2), %st
    000006c5: 	fadd	%st(1), %st
    000006c7: 	faddp	%st, %st(5)
    000006c9: 	cmpq	%rax, %rbx
    000006cc: 	jne	.Ltmp3747 # Offset: 1740
    000006ce: 	fstp	%st(0)
    000006d0: 	fstp	%st(0)
    000006d2: 	fstp	%st(0)
    000006d4: 	fstp	%st(0)
    000006d6: 	fldt	0x40(%rsp)
    000006da: 	faddl	init_value(%rip)
    000006e0: 	fldt	0x50(%rsp)
    000006e4: 	faddp	%st, %st(1)
    000006e6: 	fldt	0x60(%rsp)
    000006ea: 	faddp	%st, %st(1)
    000006ec: 	fldt	0x70(%rsp)
    000006f0: 	faddp	%st, %st(1)
    000006f2: 	fmuls	0x28(%rsp)
    000006f6: 	fsubr	%st(1), %st
    000006f8: 	fstpl	0x88(%rsp)
    000006ff: 	fld	%st(0)
    00000701: 	fabs
    00000703: 	fldl	(%rsp)
    00000706: 	fxch	%st(1)
    00000708: 	fcompi	%st(1), %st
    0000070a: 	fstp	%st(0)
    0000070c: 	jbe	.Ltmp3748 # Offset: 1804
    0000070e: 	fdivrl	0x88(%rsp)
    00000715: 	fstpl	0x88(%rsp)
    0000071c: 	jmp	.Ltmp3749 # Offset: 1820
    0000071e: 	nop # Size: 2
.Ltmp3748:
    00000720: 	fstp	%st(0)
.Ltmp3749:
    00000722: 	movsd	0x88(%rsp), %xmm0
    0000072b: 	movsd	0x20(%rsp), %xmm1
    00000731: 	andpd	0x10(%rsp), %xmm0
    00000737: 	comisd	%xmm0, %xmm1
    0000073b: 	jbe	.Ltmp3750 # Offset: 1851
.Ltmp3969:
    00000741: 	addl	$0x1, %r12d
    00000745: 	cmpl	%edx, %r12d
    00000748: 	jl	.Ltmp3751 # Offset: 1864
.Ltmp3746:
    0000074e: 	movq	0x80(%rsp), %rsi
    00000756: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000075d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1885
    00000762: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000769: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000770: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000777: 	je	.Ltmp3752 # Offset: 1911
.Ltmp4005:
    0000077d: 	movq	-0x20(%rax), %r12
    00000781: 	callq	clock@PLT # Offset: 1921
    00000786: 	pxor	%xmm0, %xmm0
    0000078a: 	movq	%rax, end_time(%rip)
    00000791: 	movq	%r12, %rdi
    00000794: 	subq	start_time(%rip), %rax
    0000079b: 	cvtsi2sd	%rax, %xmm0
    000007a0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000007a8: 	callq	_Z13record_resultdPKc # Offset: 1960
    000007ad: 	movq	0x210(%rsp), %rdi
    000007b5: 	cmpq	%r14, %rdi
    000007b8: 	je	.Ltmp3753 # Offset: 1976
    000007ba: 	movq	0x220(%rsp), %rax
    000007c2: 	leaq	0x1(%rax), %rsi
    000007c6: 	callq	_ZdlPvm@PLT # Offset: 1990
.Ltmp3753:
    000007cb: 	movq	0x80(%rsp), %rdi
    000007d3: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000007da: 	movq	%r13, %rsi
    000007dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2013
    000007e2: 	callq	clock@PLT # Offset: 2018
    000007e7: 	movl	iterations(%rip), %edx
    000007ed: 	movq	%rax, start_time(%rip)
    000007f4: 	testl	%edx, %edx
    000007f6: 	jle	.Ltmp3754 # Offset: 2038
    000007fc: 	movss	DATAat0x3d68c(%rip), %xmm6
    00000804: 	pxor	%xmm5, %xmm5
    00000808: 	xorl	%r12d, %r12d
    0000080b: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00000813: 	movq	DATAat0x3d710(%rip), %xmm1
    0000081b: 	movsd	DATAat0x3d6e8(%rip), %xmm2
    00000823: 	movss	%xmm5, 0x30(%rsp)
    00000829: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000830: 	movss	%xmm6, 0x28(%rsp)
    00000836: 	movsd	%xmm7, (%rsp)
    0000083b: 	movaps	%xmm1, 0x10(%rsp)
    00000840: 	movsd	%xmm2, 0x20(%rsp)
    00000846: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3759:
    00000850: 	fldz
    00000852: 	movq	%rbp, %rax
    00000855: 	fldt	0x40(%rsp)
    00000859: 	nopl	(%rax) # Size: 7
.Ltmp3755:
    00000860: 	addq	$0x10, %rax
    00000864: 	fldt	-0x10(%rax)
    00000867: 	fsub	%st(1), %st
    00000869: 	faddp	%st, %st(2)
    0000086b: 	cmpq	%rax, %rbx
    0000086e: 	jne	.Ltmp3755 # Offset: 2158
    00000870: 	fstp	%st(0)
    00000872: 	fldt	0x40(%rsp)
    00000876: 	fsubrl	init_value(%rip)
    0000087c: 	fmuls	0x28(%rsp)
    00000880: 	fsubr	%st(1), %st
    00000882: 	fstpl	0x88(%rsp)
    00000889: 	fld	%st(0)
    0000088b: 	fabs
    0000088d: 	fldl	(%rsp)
    00000890: 	fxch	%st(1)
    00000892: 	fcompi	%st(1), %st
    00000894: 	fstp	%st(0)
    00000896: 	jbe	.Ltmp3756 # Offset: 2198
    00000898: 	fdivrl	0x88(%rsp)
    0000089f: 	fstpl	0x88(%rsp)
    000008a6: 	jmp	.Ltmp3757 # Offset: 2214
    000008a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3756:
    000008b0: 	fstp	%st(0)
.Ltmp3757:
    000008b2: 	movsd	0x88(%rsp), %xmm0
    000008bb: 	movsd	0x20(%rsp), %xmm3
    000008c1: 	andpd	0x10(%rsp), %xmm0
    000008c7: 	comisd	%xmm0, %xmm3
    000008cb: 	jbe	.Ltmp3758 # Offset: 2251
.Ltmp3968:
    000008d1: 	addl	$0x1, %r12d
    000008d5: 	cmpl	%edx, %r12d
    000008d8: 	jl	.Ltmp3759 # Offset: 2264
.Ltmp3754:
    000008de: 	movq	0x80(%rsp), %rsi
    000008e6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008ed: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2285
    000008f2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008f9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000900: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000907: 	je	.Ltmp3760 # Offset: 2311
.Ltmp4004:
    0000090d: 	movq	-0x20(%rax), %r12
    00000911: 	callq	clock@PLT # Offset: 2321
    00000916: 	pxor	%xmm0, %xmm0
    0000091a: 	movq	%rax, end_time(%rip)
    00000921: 	movq	%r12, %rdi
    00000924: 	subq	start_time(%rip), %rax
    0000092b: 	cvtsi2sd	%rax, %xmm0
    00000930: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000938: 	callq	_Z13record_resultdPKc # Offset: 2360
    0000093d: 	movq	0x210(%rsp), %rdi
    00000945: 	cmpq	%r14, %rdi
    00000948: 	je	.Ltmp3761 # Offset: 2376
    0000094a: 	movq	0x220(%rsp), %rax
    00000952: 	leaq	0x1(%rax), %rsi
    00000956: 	callq	_ZdlPvm@PLT # Offset: 2390
.Ltmp3761:
    0000095b: 	movq	0x80(%rsp), %rdi
    00000963: 	leaq	DATAat0x3d2db(%rip), %rdx
    0000096a: 	movq	%r13, %rsi
    0000096d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2413
    00000972: 	callq	clock@PLT # Offset: 2418
    00000977: 	movl	iterations(%rip), %edx
    0000097d: 	movq	%rax, start_time(%rip)
    00000984: 	testl	%edx, %edx
    00000986: 	jle	.Ltmp3762 # Offset: 2438
    0000098c: 	fldt	0x40(%rsp)
    00000990: 	movss	DATAat0x3d68c(%rip), %xmm4
    00000998: 	pxor	%xmm3, %xmm3
    0000099c: 	xorl	%r12d, %r12d
    0000099f: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    000009a7: 	movss	%xmm3, 0x30(%rsp)
    000009ad: 	leaq	DATAat0x3d1d8(%rip), %r15
    000009b4: 	fldt	0x50(%rsp)
    000009b8: 	movq	DATAat0x3d710(%rip), %xmm6
    000009c0: 	movss	%xmm4, 0x28(%rsp)
    000009c6: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    000009ce: 	movsd	%xmm5, (%rsp)
    000009d3: 	movaps	%xmm6, 0x10(%rsp)
    000009d8: 	faddp	%st, %st(1)
    000009da: 	fldt	0x60(%rsp)
    000009de: 	movsd	%xmm7, 0x20(%rsp)
    000009e4: 	faddp	%st, %st(1)
    000009e6: 	fldt	0x70(%rsp)
    000009ea: 	faddp	%st, %st(1)
    000009ec: 	fstpt	0x90(%rsp)
    000009f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3767:
    000009f8: 	fldz
    000009fa: 	movq	%rbp, %rax
    000009fd: 	fldt	0x90(%rsp)
    00000a04: 	nopl	(%rax) # Size: 4
.Ltmp3763:
    00000a08: 	addq	$0x10, %rax
    00000a0c: 	fldt	-0x10(%rax)
    00000a0f: 	fsub	%st(1), %st
    00000a11: 	faddp	%st, %st(2)
    00000a13: 	cmpq	%rax, %rbx
    00000a16: 	jne	.Ltmp3763 # Offset: 2582
    00000a18: 	fstp	%st(0)
    00000a1a: 	fldt	0x90(%rsp)
    00000a21: 	fsubrl	init_value(%rip)
    00000a27: 	fmuls	0x28(%rsp)
    00000a2b: 	fsubr	%st(1), %st
    00000a2d: 	fstpl	0x88(%rsp)
    00000a34: 	fld	%st(0)
    00000a36: 	fabs
    00000a38: 	fldl	(%rsp)
    00000a3b: 	fxch	%st(1)
    00000a3d: 	fcompi	%st(1), %st
    00000a3f: 	fstp	%st(0)
    00000a41: 	jbe	.Ltmp3764 # Offset: 2625
    00000a43: 	fdivrl	0x88(%rsp)
    00000a4a: 	fstpl	0x88(%rsp)
    00000a51: 	jmp	.Ltmp3765 # Offset: 2641
    00000a53: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3764:
    00000a58: 	fstp	%st(0)
.Ltmp3765:
    00000a5a: 	movsd	0x88(%rsp), %xmm0
    00000a63: 	movsd	0x20(%rsp), %xmm5
    00000a69: 	andpd	0x10(%rsp), %xmm0
    00000a6f: 	comisd	%xmm0, %xmm5
    00000a73: 	jbe	.Ltmp3766 # Offset: 2675
.Ltmp3967:
    00000a79: 	addl	$0x1, %r12d
    00000a7d: 	cmpl	%edx, %r12d
    00000a80: 	jl	.Ltmp3767 # Offset: 2688
.Ltmp3762:
    00000a86: 	movq	0x80(%rsp), %rsi
    00000a8e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a95: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2709
    00000a9a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aa1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000aa8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000aaf: 	je	.Ltmp3768 # Offset: 2735
.Ltmp4003:
    00000ab5: 	movq	-0x20(%rax), %r12
    00000ab9: 	callq	clock@PLT # Offset: 2745
    00000abe: 	pxor	%xmm0, %xmm0
    00000ac2: 	movq	%rax, end_time(%rip)
    00000ac9: 	movq	%r12, %rdi
    00000acc: 	subq	start_time(%rip), %rax
    00000ad3: 	cvtsi2sd	%rax, %xmm0
    00000ad8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ae0: 	callq	_Z13record_resultdPKc # Offset: 2784
    00000ae5: 	movq	0x210(%rsp), %rdi
    00000aed: 	cmpq	%r14, %rdi
    00000af0: 	je	.Ltmp3769 # Offset: 2800
    00000af2: 	movq	0x220(%rsp), %rax
    00000afa: 	leaq	0x1(%rax), %rsi
    00000afe: 	callq	_ZdlPvm@PLT # Offset: 2814
.Ltmp3769:
    00000b03: 	movq	0x80(%rsp), %rdi
    00000b0b: 	leaq	DATAat0x3d2f8(%rip), %rdx
    00000b12: 	movq	%r13, %rsi
    00000b15: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2837
    00000b1a: 	callq	clock@PLT # Offset: 2842
    00000b1f: 	movl	iterations(%rip), %edx
    00000b25: 	movq	%rax, start_time(%rip)
    00000b2c: 	testl	%edx, %edx
    00000b2e: 	jle	.Ltmp3770 # Offset: 2862
    00000b34: 	movss	DATAat0x3d68c(%rip), %xmm2
    00000b3c: 	pxor	%xmm1, %xmm1
    00000b40: 	xorl	%r12d, %r12d
    00000b43: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    00000b4b: 	movq	DATAat0x3d710(%rip), %xmm4
    00000b53: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    00000b5b: 	movss	%xmm1, 0x30(%rsp)
    00000b61: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000b68: 	movss	%xmm2, 0x28(%rsp)
    00000b6e: 	movsd	%xmm3, (%rsp)
    00000b73: 	movaps	%xmm4, 0x10(%rsp)
    00000b78: 	movsd	%xmm5, 0x20(%rsp)
    00000b7e: 	nop # Size: 2
.Ltmp3775:
    00000b80: 	fldz
    00000b82: 	movq	%rbp, %rax
    00000b85: 	fldt	0x40(%rsp)
    00000b89: 	fldt	0x50(%rsp)
    00000b8d: 	fldt	0x60(%rsp)
    00000b91: 	fldt	0x70(%rsp)
    00000b95: 	nopl	(%rax) # Size: 3
.Ltmp3771:
    00000b98: 	addq	$0x10, %rax
    00000b9c: 	fldt	-0x10(%rax)
    00000b9f: 	fsub	%st(4), %st
    00000ba1: 	fsub	%st(3), %st
    00000ba3: 	fsub	%st(2), %st
    00000ba5: 	fsub	%st(1), %st
    00000ba7: 	faddp	%st, %st(5)
    00000ba9: 	cmpq	%rax, %rbx
    00000bac: 	jne	.Ltmp3771 # Offset: 2988
    00000bae: 	fstp	%st(0)
    00000bb0: 	fstp	%st(0)
    00000bb2: 	fstp	%st(0)
    00000bb4: 	fstp	%st(0)
    00000bb6: 	fldt	0x40(%rsp)
    00000bba: 	fsubrl	init_value(%rip)
    00000bc0: 	fldt	0x50(%rsp)
    00000bc4: 	fsubrp	%st, %st(1)
    00000bc6: 	fldt	0x60(%rsp)
    00000bca: 	fsubrp	%st, %st(1)
    00000bcc: 	fldt	0x70(%rsp)
    00000bd0: 	fsubrp	%st, %st(1)
    00000bd2: 	fmuls	0x28(%rsp)
    00000bd6: 	fsubr	%st(1), %st
    00000bd8: 	fstpl	0x88(%rsp)
    00000bdf: 	fld	%st(0)
    00000be1: 	fabs
    00000be3: 	fldl	(%rsp)
    00000be6: 	fxch	%st(1)
    00000be8: 	fcompi	%st(1), %st
    00000bea: 	fstp	%st(0)
    00000bec: 	jbe	.Ltmp3772 # Offset: 3052
    00000bee: 	fdivrl	0x88(%rsp)
    00000bf5: 	fstpl	0x88(%rsp)
    00000bfc: 	jmp	.Ltmp3773 # Offset: 3068
    00000bfe: 	nop # Size: 2
.Ltmp3772:
    00000c00: 	fstp	%st(0)
.Ltmp3773:
    00000c02: 	movsd	0x88(%rsp), %xmm0
    00000c0b: 	movsd	0x20(%rsp), %xmm7
    00000c11: 	andpd	0x10(%rsp), %xmm0
    00000c17: 	comisd	%xmm0, %xmm7
    00000c1b: 	jbe	.Ltmp3774 # Offset: 3099
.Ltmp3966:
    00000c21: 	addl	$0x1, %r12d
    00000c25: 	cmpl	%edx, %r12d
    00000c28: 	jl	.Ltmp3775 # Offset: 3112
.Ltmp3770:
    00000c2e: 	movq	0x80(%rsp), %rsi
    00000c36: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c3d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3133
    00000c42: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c49: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c50: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c57: 	je	.Ltmp3776 # Offset: 3159
.Ltmp4002:
    00000c5d: 	movq	-0x20(%rax), %r12
    00000c61: 	callq	clock@PLT # Offset: 3169
    00000c66: 	pxor	%xmm0, %xmm0
    00000c6a: 	movq	%rax, end_time(%rip)
    00000c71: 	movq	%r12, %rdi
    00000c74: 	subq	start_time(%rip), %rax
    00000c7b: 	cvtsi2sd	%rax, %xmm0
    00000c80: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000c88: 	callq	_Z13record_resultdPKc # Offset: 3208
    00000c8d: 	movq	0x210(%rsp), %rdi
    00000c95: 	cmpq	%r14, %rdi
    00000c98: 	je	.Ltmp3777 # Offset: 3224
    00000c9a: 	movq	0x220(%rsp), %rax
    00000ca2: 	leaq	0x1(%rax), %rsi
    00000ca6: 	callq	_ZdlPvm@PLT # Offset: 3238
.Ltmp3777:
    00000cab: 	movq	0x80(%rsp), %rdi
    00000cb3: 	leaq	DATAat0x3d316(%rip), %rdx
    00000cba: 	movq	%r13, %rsi
    00000cbd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3261
    00000cc2: 	callq	clock@PLT # Offset: 3266
    00000cc7: 	movl	iterations(%rip), %edx
    00000ccd: 	movq	%rax, start_time(%rip)
    00000cd4: 	testl	%edx, %edx
    00000cd6: 	jle	.Ltmp3778 # Offset: 3286
    00000cdc: 	movss	DATAat0x3d68c(%rip), %xmm7
    00000ce4: 	pxor	%xmm6, %xmm6
    00000ce8: 	xorl	%r12d, %r12d
    00000ceb: 	movsd	DATAat0x3d6e0(%rip), %xmm1
    00000cf3: 	movq	DATAat0x3d710(%rip), %xmm2
    00000cfb: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00000d03: 	movss	%xmm6, 0x30(%rsp)
    00000d09: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000d10: 	movss	%xmm7, 0x28(%rsp)
    00000d16: 	movsd	%xmm1, (%rsp)
    00000d1b: 	movaps	%xmm2, 0x10(%rsp)
    00000d20: 	movsd	%xmm3, 0x20(%rsp)
    00000d26: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3783:
    00000d30: 	fldz
    00000d32: 	movq	%rbp, %rax
    00000d35: 	fldt	0x40(%rsp)
    00000d39: 	nopl	(%rax) # Size: 7
.Ltmp3779:
    00000d40: 	addq	$0x10, %rax
    00000d44: 	fldt	-0x10(%rax)
    00000d47: 	fmul	%st(1), %st
    00000d49: 	faddp	%st, %st(2)
    00000d4b: 	cmpq	%rax, %rbx
    00000d4e: 	jne	.Ltmp3779 # Offset: 3406
    00000d50: 	fstp	%st(0)
    00000d52: 	fldt	0x40(%rsp)
    00000d56: 	fmull	init_value(%rip)
    00000d5c: 	fmuls	0x28(%rsp)
    00000d60: 	fsubr	%st(1), %st
    00000d62: 	fstpl	0x88(%rsp)
    00000d69: 	fld	%st(0)
    00000d6b: 	fabs
    00000d6d: 	fldl	(%rsp)
    00000d70: 	fxch	%st(1)
    00000d72: 	fcompi	%st(1), %st
    00000d74: 	fstp	%st(0)
    00000d76: 	jbe	.Ltmp3780 # Offset: 3446
    00000d78: 	fdivrl	0x88(%rsp)
    00000d7f: 	fstpl	0x88(%rsp)
    00000d86: 	jmp	.Ltmp3781 # Offset: 3462
    00000d88: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3780:
    00000d90: 	fstp	%st(0)
.Ltmp3781:
    00000d92: 	movsd	0x88(%rsp), %xmm0
    00000d9b: 	movsd	0x20(%rsp), %xmm2
    00000da1: 	andpd	0x10(%rsp), %xmm0
    00000da7: 	comisd	%xmm0, %xmm2
    00000dab: 	jbe	.Ltmp3782 # Offset: 3499
.Ltmp3965:
    00000db1: 	addl	$0x1, %r12d
    00000db5: 	cmpl	%edx, %r12d
    00000db8: 	jl	.Ltmp3783 # Offset: 3512
.Ltmp3778:
    00000dbe: 	movq	0x80(%rsp), %rsi
    00000dc6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000dcd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3533
    00000dd2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000dd9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000de0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000de7: 	je	.Ltmp3784 # Offset: 3559
.Ltmp4001:
    00000ded: 	movq	-0x20(%rax), %r12
    00000df1: 	callq	clock@PLT # Offset: 3569
    00000df6: 	pxor	%xmm0, %xmm0
    00000dfa: 	movq	%rax, end_time(%rip)
    00000e01: 	movq	%r12, %rdi
    00000e04: 	subq	start_time(%rip), %rax
    00000e0b: 	cvtsi2sd	%rax, %xmm0
    00000e10: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e18: 	callq	_Z13record_resultdPKc # Offset: 3608
    00000e1d: 	movq	0x210(%rsp), %rdi
    00000e25: 	cmpq	%r14, %rdi
    00000e28: 	je	.Ltmp3785 # Offset: 3624
    00000e2a: 	movq	0x220(%rsp), %rax
    00000e32: 	leaq	0x1(%rax), %rsi
    00000e36: 	callq	_ZdlPvm@PLT # Offset: 3638
.Ltmp3785:
    00000e3b: 	movq	0x80(%rsp), %rdi
    00000e43: 	leaq	DATAat0x3d329(%rip), %rdx
    00000e4a: 	movq	%r13, %rsi
    00000e4d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3661
    00000e52: 	callq	clock@PLT # Offset: 3666
    00000e57: 	movl	iterations(%rip), %edx
    00000e5d: 	movq	%rax, start_time(%rip)
    00000e64: 	testl	%edx, %edx
    00000e66: 	jle	.Ltmp3786 # Offset: 3686
    00000e6c: 	fldt	0x40(%rsp)
    00000e70: 	movss	DATAat0x3d68c(%rip), %xmm5
    00000e78: 	pxor	%xmm4, %xmm4
    00000e7c: 	xorl	%r12d, %r12d
    00000e7f: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    00000e87: 	movss	%xmm4, 0x30(%rsp)
    00000e8d: 	leaq	DATAat0x3d1d8(%rip), %r15
    00000e94: 	fldt	0x50(%rsp)
    00000e98: 	movq	DATAat0x3d710(%rip), %xmm7
    00000ea0: 	movss	%xmm5, 0x28(%rsp)
    00000ea6: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    00000eae: 	movsd	%xmm6, (%rsp)
    00000eb3: 	movaps	%xmm7, 0x10(%rsp)
    00000eb8: 	fmulp	%st, %st(1)
    00000eba: 	movsd	%xmm1, 0x20(%rsp)
    00000ec0: 	fldt	0x60(%rsp)
    00000ec4: 	fmulp	%st, %st(1)
    00000ec6: 	fldt	0x70(%rsp)
    00000eca: 	fmulp	%st, %st(1)
    00000ecc: 	fstpt	0x90(%rsp)
    00000ed3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3791:
    00000ed8: 	fldz
    00000eda: 	movq	%rbp, %rax
    00000edd: 	fldt	0x90(%rsp)
    00000ee4: 	nopl	(%rax) # Size: 4
.Ltmp3787:
    00000ee8: 	addq	$0x10, %rax
    00000eec: 	fldt	-0x10(%rax)
    00000eef: 	fmul	%st(1), %st
    00000ef1: 	faddp	%st, %st(2)
    00000ef3: 	cmpq	%rax, %rbx
    00000ef6: 	jne	.Ltmp3787 # Offset: 3830
    00000ef8: 	fstp	%st(0)
    00000efa: 	fldt	0x90(%rsp)
    00000f01: 	fmull	init_value(%rip)
    00000f07: 	fmuls	0x28(%rsp)
    00000f0b: 	fsubr	%st(1), %st
    00000f0d: 	fstpl	0x88(%rsp)
    00000f14: 	fld	%st(0)
    00000f16: 	fabs
    00000f18: 	fldl	(%rsp)
    00000f1b: 	fxch	%st(1)
    00000f1d: 	fcompi	%st(1), %st
    00000f1f: 	fstp	%st(0)
    00000f21: 	jbe	.Ltmp3788 # Offset: 3873
    00000f23: 	fdivrl	0x88(%rsp)
    00000f2a: 	fstpl	0x88(%rsp)
    00000f31: 	jmp	.Ltmp3789 # Offset: 3889
    00000f33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3788:
    00000f38: 	fstp	%st(0)
.Ltmp3789:
    00000f3a: 	movsd	0x88(%rsp), %xmm0
    00000f43: 	movsd	0x20(%rsp), %xmm4
    00000f49: 	andpd	0x10(%rsp), %xmm0
    00000f4f: 	comisd	%xmm0, %xmm4
    00000f53: 	jbe	.Ltmp3790 # Offset: 3923
.Ltmp3964:
    00000f59: 	addl	$0x1, %r12d
    00000f5d: 	cmpl	%edx, %r12d
    00000f60: 	jl	.Ltmp3791 # Offset: 3936
.Ltmp3786:
    00000f66: 	movq	0x80(%rsp), %rsi
    00000f6e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f75: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3957
    00000f7a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f81: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f88: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f8f: 	je	.Ltmp3792 # Offset: 3983
.Ltmp4000:
    00000f95: 	movq	-0x20(%rax), %r12
    00000f99: 	callq	clock@PLT # Offset: 3993
    00000f9e: 	pxor	%xmm0, %xmm0
    00000fa2: 	movq	%rax, end_time(%rip)
    00000fa9: 	movq	%r12, %rdi
    00000fac: 	subq	start_time(%rip), %rax
    00000fb3: 	cvtsi2sd	%rax, %xmm0
    00000fb8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000fc0: 	callq	_Z13record_resultdPKc # Offset: 4032
    00000fc5: 	movq	0x210(%rsp), %rdi
    00000fcd: 	cmpq	%r14, %rdi
    00000fd0: 	je	.Ltmp3793 # Offset: 4048
    00000fd2: 	movq	0x220(%rsp), %rax
    00000fda: 	leaq	0x1(%rax), %rsi
    00000fde: 	callq	_ZdlPvm@PLT # Offset: 4062
.Ltmp3793:
    00000fe3: 	movq	0x80(%rsp), %rdi
    00000feb: 	leaq	DATAat0x3d600(%rip), %rdx
    00000ff2: 	movq	%r13, %rsi
    00000ff5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4085
    00000ffa: 	callq	clock@PLT # Offset: 4090
    00000fff: 	movl	iterations(%rip), %edx
    00001005: 	movq	%rax, start_time(%rip)
    0000100c: 	testl	%edx, %edx
    0000100e: 	jle	.Ltmp3794 # Offset: 4110
    00001014: 	fldt	0x40(%rsp)
    00001018: 	movss	DATAat0x3d68c(%rip), %xmm3
    00001020: 	pxor	%xmm2, %xmm2
    00001024: 	xorl	%r12d, %r12d
    00001027: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    0000102f: 	movss	%xmm2, 0x30(%rsp)
    00001035: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000103c: 	fldt	0x50(%rsp)
    00001040: 	movq	DATAat0x3d710(%rip), %xmm5
    00001048: 	movss	%xmm3, 0x28(%rsp)
    0000104e: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00001056: 	movsd	%xmm4, (%rsp)
    0000105b: 	movaps	%xmm5, 0x10(%rsp)
    00001060: 	fmulp	%st, %st(1)
    00001062: 	movsd	%xmm6, 0x20(%rsp)
    00001068: 	fldt	0x60(%rsp)
    0000106c: 	fmulp	%st, %st(1)
    0000106e: 	fldt	0x70(%rsp)
    00001072: 	fmulp	%st, %st(1)
    00001074: 	fstpt	0x90(%rsp)
    0000107b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3799:
    00001080: 	fldz
    00001082: 	movq	%rbp, %rax
    00001085: 	fldt	0x90(%rsp)
    0000108c: 	nopl	(%rax) # Size: 4
.Ltmp3795:
    00001090: 	addq	$0x10, %rax
    00001094: 	fldt	-0x10(%rax)
    00001097: 	fadd	%st(1), %st
    00001099: 	faddp	%st, %st(2)
    0000109b: 	cmpq	%rax, %rbx
    0000109e: 	jne	.Ltmp3795 # Offset: 4254
    000010a0: 	fstp	%st(0)
    000010a2: 	fldt	0x90(%rsp)
    000010a9: 	faddl	init_value(%rip)
    000010af: 	fmuls	0x28(%rsp)
    000010b3: 	fsubr	%st(1), %st
    000010b5: 	fstpl	0x88(%rsp)
    000010bc: 	fld	%st(0)
    000010be: 	fabs
    000010c0: 	fldl	(%rsp)
    000010c3: 	fxch	%st(1)
    000010c5: 	fcompi	%st(1), %st
    000010c7: 	fstp	%st(0)
    000010c9: 	jbe	.Ltmp3796 # Offset: 4297
    000010cb: 	fdivrl	0x88(%rsp)
    000010d2: 	fstpl	0x88(%rsp)
    000010d9: 	jmp	.Ltmp3797 # Offset: 4313
    000010db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3796:
    000010e0: 	fstp	%st(0)
.Ltmp3797:
    000010e2: 	movsd	0x88(%rsp), %xmm0
    000010eb: 	movsd	0x20(%rsp), %xmm6
    000010f1: 	andpd	0x10(%rsp), %xmm0
    000010f7: 	comisd	%xmm0, %xmm6
    000010fb: 	jbe	.Ltmp3798 # Offset: 4347
.Ltmp3963:
    00001101: 	addl	$0x1, %r12d
    00001105: 	cmpl	%edx, %r12d
    00001108: 	jl	.Ltmp3799 # Offset: 4360
.Ltmp3794:
    0000110e: 	movq	0x80(%rsp), %rsi
    00001116: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000111d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4381
    00001122: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001129: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001130: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001137: 	je	.Ltmp3800 # Offset: 4407
.Ltmp3999:
    0000113d: 	movq	-0x20(%rax), %r12
    00001141: 	callq	clock@PLT # Offset: 4417
    00001146: 	pxor	%xmm0, %xmm0
    0000114a: 	movq	%rax, end_time(%rip)
    00001151: 	movq	%r12, %rdi
    00001154: 	subq	start_time(%rip), %rax
    0000115b: 	cvtsi2sd	%rax, %xmm0
    00001160: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001168: 	callq	_Z13record_resultdPKc # Offset: 4456
    0000116d: 	movq	0x210(%rsp), %rdi
    00001175: 	cmpq	%r14, %rdi
    00001178: 	je	.Ltmp3801 # Offset: 4472
    0000117a: 	movq	0x220(%rsp), %rax
    00001182: 	leaq	0x1(%rax), %rsi
    00001186: 	callq	_ZdlPvm@PLT # Offset: 4486
.Ltmp3801:
    0000118b: 	movq	0x80(%rsp), %rdi
    00001193: 	leaq	DATAat0x3d620(%rip), %rdx
    0000119a: 	movq	%r13, %rsi
    0000119d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4509
    000011a2: 	callq	clock@PLT # Offset: 4514
    000011a7: 	movl	iterations(%rip), %edx
    000011ad: 	movq	%rax, start_time(%rip)
    000011b4: 	testl	%edx, %edx
    000011b6: 	jle	.Ltmp3802 # Offset: 4534
    000011bc: 	movss	DATAat0x3d68c(%rip), %xmm1
    000011c4: 	pxor	%xmm7, %xmm7
    000011c8: 	xorl	%r12d, %r12d
    000011cb: 	movsd	DATAat0x3d6e0(%rip), %xmm2
    000011d3: 	movq	DATAat0x3d710(%rip), %xmm3
    000011db: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    000011e3: 	movss	%xmm7, 0x30(%rsp)
    000011e9: 	leaq	DATAat0x3d1d8(%rip), %r15
    000011f0: 	movss	%xmm1, 0x28(%rsp)
    000011f6: 	movsd	%xmm2, (%rsp)
    000011fb: 	movaps	%xmm3, 0x10(%rsp)
    00001200: 	movsd	%xmm4, 0x20(%rsp)
    00001206: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3807:
    00001210: 	fldz
    00001212: 	movq	%rbp, %rax
    00001215: 	fldt	0x40(%rsp)
    00001219: 	fldt	0x50(%rsp)
    0000121d: 	fldt	0x60(%rsp)
    00001221: 	fldt	0x70(%rsp)
    00001225: 	nopl	(%rax) # Size: 3
.Ltmp3803:
    00001228: 	addq	$0x10, %rax
    0000122c: 	fldt	-0x10(%rax)
    0000122f: 	fmul	%st(4), %st
    00001231: 	fmul	%st(3), %st
    00001233: 	fmul	%st(2), %st
    00001235: 	fmul	%st(1), %st
    00001237: 	faddp	%st, %st(5)
    00001239: 	cmpq	%rax, %rbx
    0000123c: 	jne	.Ltmp3803 # Offset: 4668
    0000123e: 	fstp	%st(0)
    00001240: 	fstp	%st(0)
    00001242: 	fstp	%st(0)
    00001244: 	fstp	%st(0)
    00001246: 	fldt	0x40(%rsp)
    0000124a: 	fmull	init_value(%rip)
    00001250: 	fldt	0x50(%rsp)
    00001254: 	fmulp	%st, %st(1)
    00001256: 	fldt	0x60(%rsp)
    0000125a: 	fmulp	%st, %st(1)
    0000125c: 	fldt	0x70(%rsp)
    00001260: 	fmulp	%st, %st(1)
    00001262: 	fmuls	0x28(%rsp)
    00001266: 	fsubr	%st(1), %st
    00001268: 	fstpl	0x88(%rsp)
    0000126f: 	fld	%st(0)
    00001271: 	fabs
    00001273: 	fldl	(%rsp)
    00001276: 	fxch	%st(1)
    00001278: 	fcompi	%st(1), %st
    0000127a: 	fstp	%st(0)
    0000127c: 	jbe	.Ltmp3804 # Offset: 4732
    0000127e: 	fdivrl	0x88(%rsp)
    00001285: 	fstpl	0x88(%rsp)
    0000128c: 	jmp	.Ltmp3805 # Offset: 4748
    0000128e: 	nop # Size: 2
.Ltmp3804:
    00001290: 	fstp	%st(0)
.Ltmp3805:
    00001292: 	movsd	0x88(%rsp), %xmm0
    0000129b: 	movsd	0x20(%rsp), %xmm1
    000012a1: 	andpd	0x10(%rsp), %xmm0
    000012a7: 	comisd	%xmm0, %xmm1
    000012ab: 	jbe	.Ltmp3806 # Offset: 4779
.Ltmp3962:
    000012b1: 	addl	$0x1, %r12d
    000012b5: 	cmpl	%edx, %r12d
    000012b8: 	jl	.Ltmp3807 # Offset: 4792
.Ltmp3802:
    000012be: 	movq	0x80(%rsp), %rsi
    000012c6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012cd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4813
    000012d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012d9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012e0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012e7: 	je	.Ltmp3808 # Offset: 4839
.Ltmp3998:
    000012ed: 	movq	-0x20(%rax), %r12
    000012f1: 	callq	clock@PLT # Offset: 4849
    000012f6: 	pxor	%xmm0, %xmm0
    000012fa: 	movq	%rax, end_time(%rip)
    00001301: 	movq	%r12, %rdi
    00001304: 	subq	start_time(%rip), %rax
    0000130b: 	cvtsi2sd	%rax, %xmm0
    00001310: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001318: 	callq	_Z13record_resultdPKc # Offset: 4888
    0000131d: 	movq	0x210(%rsp), %rdi
    00001325: 	cmpq	%r14, %rdi
    00001328: 	je	.Ltmp3809 # Offset: 4904
    0000132a: 	movq	0x220(%rsp), %rax
    00001332: 	leaq	0x1(%rax), %rsi
    00001336: 	callq	_ZdlPvm@PLT # Offset: 4918
.Ltmp3809:
    0000133b: 	movq	0x80(%rsp), %rdi
    00001343: 	leaq	DATAat0x3d347(%rip), %rdx
    0000134a: 	movq	%r13, %rsi
    0000134d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4941
    00001352: 	callq	clock@PLT # Offset: 4946
    00001357: 	movl	iterations(%rip), %edx
    0000135d: 	movq	%rax, start_time(%rip)
    00001364: 	testl	%edx, %edx
    00001366: 	jle	.Ltmp3810 # Offset: 4966
    0000136c: 	movss	DATAat0x3d68c(%rip), %xmm6
    00001374: 	pxor	%xmm5, %xmm5
    00001378: 	xorl	%r12d, %r12d
    0000137b: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00001383: 	movq	DATAat0x3d710(%rip), %xmm1
    0000138b: 	movsd	DATAat0x3d6e8(%rip), %xmm2
    00001393: 	movss	%xmm5, 0x30(%rsp)
    00001399: 	leaq	DATAat0x3d1d8(%rip), %r15
    000013a0: 	movss	%xmm6, 0x28(%rsp)
    000013a6: 	movsd	%xmm7, (%rsp)
    000013ab: 	movaps	%xmm1, 0x10(%rsp)
    000013b0: 	movsd	%xmm2, 0x20(%rsp)
    000013b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3815:
    000013c0: 	fldz
    000013c2: 	movq	%rbp, %rax
    000013c5: 	fldt	0x40(%rsp)
    000013c9: 	nopl	(%rax) # Size: 7
.Ltmp3811:
    000013d0: 	addq	$0x10, %rax
    000013d4: 	fldt	-0x10(%rax)
    000013d7: 	fdiv	%st(1), %st
    000013d9: 	faddp	%st, %st(2)
    000013db: 	cmpq	%rax, %rbx
    000013de: 	jne	.Ltmp3811 # Offset: 5086
    000013e0: 	fstp	%st(0)
    000013e2: 	fldt	0x40(%rsp)
    000013e6: 	fdivrl	init_value(%rip)
    000013ec: 	fmuls	0x28(%rsp)
    000013f0: 	fsubr	%st(1), %st
    000013f2: 	fstpl	0x88(%rsp)
    000013f9: 	fld	%st(0)
    000013fb: 	fabs
    000013fd: 	fldl	(%rsp)
    00001400: 	fxch	%st(1)
    00001402: 	fcompi	%st(1), %st
    00001404: 	fstp	%st(0)
    00001406: 	jbe	.Ltmp3812 # Offset: 5126
    00001408: 	fdivrl	0x88(%rsp)
    0000140f: 	fstpl	0x88(%rsp)
    00001416: 	jmp	.Ltmp3813 # Offset: 5142
    00001418: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3812:
    00001420: 	fstp	%st(0)
.Ltmp3813:
    00001422: 	movsd	0x88(%rsp), %xmm0
    0000142b: 	movsd	0x20(%rsp), %xmm3
    00001431: 	andpd	0x10(%rsp), %xmm0
    00001437: 	comisd	%xmm0, %xmm3
    0000143b: 	jbe	.Ltmp3814 # Offset: 5179
.Ltmp3961:
    00001441: 	addl	$0x1, %r12d
    00001445: 	cmpl	%edx, %r12d
    00001448: 	jl	.Ltmp3815 # Offset: 5192
.Ltmp3810:
    0000144e: 	movq	0x80(%rsp), %rsi
    00001456: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000145d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5213
    00001462: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001469: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001470: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001477: 	je	.Ltmp3816 # Offset: 5239
.Ltmp3997:
    0000147d: 	movq	-0x20(%rax), %r12
    00001481: 	callq	clock@PLT # Offset: 5249
    00001486: 	pxor	%xmm0, %xmm0
    0000148a: 	movq	%rax, end_time(%rip)
    00001491: 	movq	%r12, %rdi
    00001494: 	subq	start_time(%rip), %rax
    0000149b: 	cvtsi2sd	%rax, %xmm0
    000014a0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000014a8: 	callq	_Z13record_resultdPKc # Offset: 5288
    000014ad: 	movq	0x210(%rsp), %rdi
    000014b5: 	cmpq	%r14, %rdi
    000014b8: 	je	.Ltmp3817 # Offset: 5304
    000014ba: 	movq	0x220(%rsp), %rax
    000014c2: 	leaq	0x1(%rax), %rsi
    000014c6: 	callq	_ZdlPvm@PLT # Offset: 5318
.Ltmp3817:
    000014cb: 	movq	0x80(%rsp), %rdi
    000014d3: 	leaq	DATAat0x3d358(%rip), %rdx
    000014da: 	movq	%r13, %rsi
    000014dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5341
    000014e2: 	callq	clock@PLT # Offset: 5346
    000014e7: 	movl	iterations(%rip), %edx
    000014ed: 	movq	%rax, start_time(%rip)
    000014f4: 	testl	%edx, %edx
    000014f6: 	jle	.Ltmp3818 # Offset: 5366
    000014fc: 	movss	DATAat0x3d68c(%rip), %xmm4
    00001504: 	pxor	%xmm3, %xmm3
    00001508: 	xorl	%r12d, %r12d
    0000150b: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    00001513: 	movq	DATAat0x3d710(%rip), %xmm6
    0000151b: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    00001523: 	movss	%xmm3, 0x30(%rsp)
    00001529: 	leaq	DATAat0x3d1d8(%rip), %r15
    00001530: 	movss	%xmm4, 0x28(%rsp)
    00001536: 	movsd	%xmm5, (%rsp)
    0000153b: 	movaps	%xmm6, 0x10(%rsp)
    00001540: 	movsd	%xmm7, 0x20(%rsp)
    00001546: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3823:
    00001550: 	fldz
    00001552: 	movq	%rbp, %rax
    00001555: 	fldt	0x40(%rsp)
    00001559: 	fldt	0x50(%rsp)
    0000155d: 	fldt	0x60(%rsp)
    00001561: 	fldt	0x70(%rsp)
    00001565: 	nopl	(%rax) # Size: 3
.Ltmp3819:
    00001568: 	addq	$0x10, %rax
    0000156c: 	fldt	-0x10(%rax)
    0000156f: 	fdiv	%st(4), %st
    00001571: 	fdiv	%st(3), %st
    00001573: 	fdiv	%st(2), %st
    00001575: 	fdiv	%st(1), %st
    00001577: 	faddp	%st, %st(5)
    00001579: 	cmpq	%rax, %rbx
    0000157c: 	jne	.Ltmp3819 # Offset: 5500
    0000157e: 	fstp	%st(0)
    00001580: 	fstp	%st(0)
    00001582: 	fstp	%st(0)
    00001584: 	fstp	%st(0)
    00001586: 	fldt	0x40(%rsp)
    0000158a: 	fdivrl	init_value(%rip)
    00001590: 	fldt	0x50(%rsp)
    00001594: 	fdivrp	%st, %st(1)
    00001596: 	fldt	0x60(%rsp)
    0000159a: 	fdivrp	%st, %st(1)
    0000159c: 	fldt	0x70(%rsp)
    000015a0: 	fdivrp	%st, %st(1)
    000015a2: 	fmuls	0x28(%rsp)
    000015a6: 	fsubr	%st(1), %st
    000015a8: 	fstpl	0x88(%rsp)
    000015af: 	fld	%st(0)
    000015b1: 	fabs
    000015b3: 	fldl	(%rsp)
    000015b6: 	fxch	%st(1)
    000015b8: 	fcompi	%st(1), %st
    000015ba: 	fstp	%st(0)
    000015bc: 	jbe	.Ltmp3820 # Offset: 5564
    000015be: 	fdivrl	0x88(%rsp)
    000015c5: 	fstpl	0x88(%rsp)
    000015cc: 	jmp	.Ltmp3821 # Offset: 5580
    000015ce: 	nop # Size: 2
.Ltmp3820:
    000015d0: 	fstp	%st(0)
.Ltmp3821:
    000015d2: 	movsd	0x88(%rsp), %xmm0
    000015db: 	movsd	0x20(%rsp), %xmm5
    000015e1: 	andpd	0x10(%rsp), %xmm0
    000015e7: 	comisd	%xmm0, %xmm5
    000015eb: 	jbe	.Ltmp3822 # Offset: 5611
.Ltmp3960:
    000015f1: 	addl	$0x1, %r12d
    000015f5: 	cmpl	%edx, %r12d
    000015f8: 	jl	.Ltmp3823 # Offset: 5624
.Ltmp3818:
    000015fe: 	movq	0x80(%rsp), %rsi
    00001606: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000160d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5645
    00001612: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001619: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001620: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001627: 	je	.Ltmp3824 # Offset: 5671
.Ltmp3996:
    0000162d: 	movq	-0x20(%rax), %r12
    00001631: 	callq	clock@PLT # Offset: 5681
    00001636: 	pxor	%xmm0, %xmm0
    0000163a: 	movq	%rax, end_time(%rip)
    00001641: 	movq	%r12, %rdi
    00001644: 	subq	start_time(%rip), %rax
    0000164b: 	cvtsi2sd	%rax, %xmm0
    00001650: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001658: 	callq	_Z13record_resultdPKc # Offset: 5720
    0000165d: 	movq	0x210(%rsp), %rdi
    00001665: 	cmpq	%r14, %rdi
    00001668: 	je	.Ltmp3825 # Offset: 5736
    0000166a: 	movq	0x220(%rsp), %rax
    00001672: 	leaq	0x1(%rax), %rsi
    00001676: 	callq	_ZdlPvm@PLT # Offset: 5750
.Ltmp3825:
    0000167b: 	movq	0x80(%rsp), %rdi
    00001683: 	leaq	DATAat0x3d373(%rip), %rdx
    0000168a: 	movq	%r13, %rsi
    0000168d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5773
    00001692: 	callq	clock@PLT # Offset: 5778
    00001697: 	movl	iterations(%rip), %edx
    0000169d: 	movq	%rax, start_time(%rip)
    000016a4: 	testl	%edx, %edx
    000016a6: 	jle	.Ltmp3826 # Offset: 5798
    000016ac: 	fldt	0x40(%rsp)
    000016b0: 	movss	DATAat0x3d68c(%rip), %xmm2
    000016b8: 	pxor	%xmm1, %xmm1
    000016bc: 	xorl	%r12d, %r12d
    000016bf: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    000016c7: 	movss	%xmm1, 0x30(%rsp)
    000016cd: 	leaq	DATAat0x3d1d8(%rip), %r15
    000016d4: 	fldt	0x50(%rsp)
    000016d8: 	movq	DATAat0x3d710(%rip), %xmm4
    000016e0: 	movss	%xmm2, 0x28(%rsp)
    000016e6: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    000016ee: 	movsd	%xmm3, (%rsp)
    000016f3: 	movaps	%xmm4, 0x10(%rsp)
    000016f8: 	fdivrp	%st, %st(1)
    000016fa: 	movsd	%xmm5, 0x20(%rsp)
    00001700: 	fldt	0x60(%rsp)
    00001704: 	fdivrp	%st, %st(1)
    00001706: 	fldt	0x70(%rsp)
    0000170a: 	fdivrp	%st, %st(1)
    0000170c: 	fstpt	0x90(%rsp)
    00001713: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3831:
    00001718: 	fldz
    0000171a: 	movq	%rbp, %rax
    0000171d: 	fldt	0x90(%rsp)
    00001724: 	nopl	(%rax) # Size: 4
.Ltmp3827:
    00001728: 	addq	$0x10, %rax
    0000172c: 	fldt	-0x10(%rax)
    0000172f: 	fadd	%st(1), %st
    00001731: 	faddp	%st, %st(2)
    00001733: 	cmpq	%rax, %rbx
    00001736: 	jne	.Ltmp3827 # Offset: 5942
    00001738: 	fstp	%st(0)
    0000173a: 	fldt	0x90(%rsp)
    00001741: 	faddl	init_value(%rip)
    00001747: 	fmuls	0x28(%rsp)
    0000174b: 	fsubr	%st(1), %st
    0000174d: 	fstpl	0x88(%rsp)
    00001754: 	fld	%st(0)
    00001756: 	fabs
    00001758: 	fldl	(%rsp)
    0000175b: 	fxch	%st(1)
    0000175d: 	fcompi	%st(1), %st
    0000175f: 	fstp	%st(0)
    00001761: 	jbe	.Ltmp3828 # Offset: 5985
    00001763: 	fdivrl	0x88(%rsp)
    0000176a: 	fstpl	0x88(%rsp)
    00001771: 	jmp	.Ltmp3829 # Offset: 6001
    00001773: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3828:
    00001778: 	fstp	%st(0)
.Ltmp3829:
    0000177a: 	movsd	0x88(%rsp), %xmm0
    00001783: 	movsd	0x20(%rsp), %xmm7
    00001789: 	andpd	0x10(%rsp), %xmm0
    0000178f: 	comisd	%xmm0, %xmm7
    00001793: 	jbe	.Ltmp3830 # Offset: 6035
.Ltmp3959:
    00001799: 	addl	$0x1, %r12d
    0000179d: 	cmpl	%edx, %r12d
    000017a0: 	jl	.Ltmp3831 # Offset: 6048
.Ltmp3826:
    000017a6: 	movq	0x80(%rsp), %rsi
    000017ae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6069
    000017ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017c1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017c8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017cf: 	je	.Ltmp3832 # Offset: 6095
.Ltmp3995:
    000017d5: 	movq	-0x20(%rax), %r12
    000017d9: 	callq	clock@PLT # Offset: 6105
    000017de: 	pxor	%xmm0, %xmm0
    000017e2: 	movq	%rax, end_time(%rip)
    000017e9: 	movq	%r12, %rdi
    000017ec: 	subq	start_time(%rip), %rax
    000017f3: 	cvtsi2sd	%rax, %xmm0
    000017f8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001800: 	callq	_Z13record_resultdPKc # Offset: 6144
    00001805: 	movq	0x210(%rsp), %rdi
    0000180d: 	cmpq	%r14, %rdi
    00001810: 	je	.Ltmp3833 # Offset: 6160
    00001812: 	movq	0x220(%rsp), %rax
    0000181a: 	leaq	0x1(%rax), %rsi
    0000181e: 	callq	_ZdlPvm@PLT # Offset: 6174
.Ltmp3833:
    00001823: 	movq	0x80(%rsp), %rdi
    0000182b: 	leaq	DATAat0x3d38f(%rip), %rdx
    00001832: 	movq	%r13, %rsi
    00001835: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6197
    0000183a: 	callq	clock@PLT # Offset: 6202
    0000183f: 	movl	iterations(%rip), %edx
    00001845: 	movq	%rax, start_time(%rip)
    0000184c: 	testl	%edx, %edx
    0000184e: 	jle	.Ltmp3834 # Offset: 6222
    00001854: 	fldt	0x50(%rsp)
    00001858: 	movss	DATAat0x3d68c(%rip), %xmm7
    00001860: 	pxor	%xmm6, %xmm6
    00001864: 	xorl	%r12d, %r12d
    00001867: 	movsd	DATAat0x3d6e0(%rip), %xmm1
    0000186f: 	movss	%xmm6, 0x30(%rsp)
    00001875: 	leaq	DATAat0x3d1d8(%rip), %r15
    0000187c: 	fldt	0x60(%rsp)
    00001880: 	movq	DATAat0x3d710(%rip), %xmm2
    00001888: 	movss	%xmm7, 0x28(%rsp)
    0000188e: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00001896: 	movsd	%xmm1, (%rsp)
    0000189b: 	movaps	%xmm2, 0x10(%rsp)
    000018a0: 	fmulp	%st, %st(1)
    000018a2: 	movsd	%xmm3, 0x20(%rsp)
    000018a8: 	fldt	0x70(%rsp)
    000018ac: 	fdivrp	%st, %st(1)
    000018ae: 	fldt	0x40(%rsp)
    000018b2: 	fsubp	%st, %st(1)
    000018b4: 	fstpt	0x90(%rsp)
    000018bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3839:
    000018c0: 	fldz
    000018c2: 	movq	%rbp, %rax
    000018c5: 	fldt	0x90(%rsp)
    000018cc: 	nopl	(%rax) # Size: 4
.Ltmp3835:
    000018d0: 	addq	$0x10, %rax
    000018d4: 	fldt	-0x10(%rax)
    000018d7: 	fadd	%st(1), %st
    000018d9: 	faddp	%st, %st(2)
    000018db: 	cmpq	%rax, %rbx
    000018de: 	jne	.Ltmp3835 # Offset: 6366
    000018e0: 	fstp	%st(0)
    000018e2: 	fldt	0x90(%rsp)
    000018e9: 	faddl	init_value(%rip)
    000018ef: 	fmuls	0x28(%rsp)
    000018f3: 	fsubr	%st(1), %st
    000018f5: 	fstpl	0x88(%rsp)
    000018fc: 	fld	%st(0)
    000018fe: 	fabs
    00001900: 	fldl	(%rsp)
    00001903: 	fxch	%st(1)
    00001905: 	fcompi	%st(1), %st
    00001907: 	fstp	%st(0)
    00001909: 	jbe	.Ltmp3836 # Offset: 6409
    0000190b: 	fdivrl	0x88(%rsp)
    00001912: 	fstpl	0x88(%rsp)
    00001919: 	jmp	.Ltmp3837 # Offset: 6425
    0000191b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3836:
    00001920: 	fstp	%st(0)
.Ltmp3837:
    00001922: 	movsd	0x88(%rsp), %xmm0
    0000192b: 	movsd	0x20(%rsp), %xmm2
    00001931: 	andpd	0x10(%rsp), %xmm0
    00001937: 	comisd	%xmm0, %xmm2
    0000193b: 	jbe	.Ltmp3838 # Offset: 6459
.Ltmp3958:
    00001941: 	addl	$0x1, %r12d
    00001945: 	cmpl	%edx, %r12d
    00001948: 	jl	.Ltmp3839 # Offset: 6472
.Ltmp3834:
    0000194e: 	movq	0x80(%rsp), %rsi
    00001956: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000195d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6493
    00001962: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001969: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001970: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001977: 	je	.Ltmp3840 # Offset: 6519
.Ltmp3994:
    0000197d: 	movq	-0x20(%rax), %r12
    00001981: 	callq	clock@PLT # Offset: 6529
    00001986: 	pxor	%xmm0, %xmm0
    0000198a: 	movq	%rax, end_time(%rip)
    00001991: 	movq	%r12, %rdi
    00001994: 	subq	start_time(%rip), %rax
    0000199b: 	cvtsi2sd	%rax, %xmm0
    000019a0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000019a8: 	callq	_Z13record_resultdPKc # Offset: 6568
    000019ad: 	movq	0x210(%rsp), %rdi
    000019b5: 	cmpq	%r14, %rdi
    000019b8: 	je	.Ltmp3841 # Offset: 6584
    000019ba: 	movq	0x220(%rsp), %rax
    000019c2: 	leaq	0x1(%rax), %rsi
    000019c6: 	callq	_ZdlPvm@PLT # Offset: 6598
.Ltmp3841:
    000019cb: 	movq	0x80(%rsp), %rdi
    000019d3: 	leaq	DATAat0x3d3a8(%rip), %rdx
    000019da: 	movq	%r13, %rsi
    000019dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6621
    000019e2: 	callq	clock@PLT # Offset: 6626
    000019e7: 	movl	iterations(%rip), %edx
    000019ed: 	movq	%rax, start_time(%rip)
    000019f4: 	testl	%edx, %edx
    000019f6: 	jle	.Ltmp3842 # Offset: 6646
    000019fc: 	fldt	0x50(%rsp)
    00001a00: 	movss	DATAat0x3d68c(%rip), %xmm5
    00001a08: 	pxor	%xmm4, %xmm4
    00001a0c: 	xorl	%r12d, %r12d
    00001a0f: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    00001a17: 	movss	%xmm4, 0x30(%rsp)
    00001a1d: 	leaq	DATAat0x3d1d8(%rip), %r15
    00001a24: 	fldt	0x60(%rsp)
    00001a28: 	movq	DATAat0x3d710(%rip), %xmm7
    00001a30: 	movss	%xmm5, 0x28(%rsp)
    00001a36: 	movsd	DATAat0x3d6e8(%rip), %xmm1
    00001a3e: 	movsd	%xmm6, (%rsp)
    00001a43: 	movaps	%xmm7, 0x10(%rsp)
    00001a48: 	fmulp	%st, %st(1)
    00001a4a: 	movsd	%xmm1, 0x20(%rsp)
    00001a50: 	fldt	0x70(%rsp)
    00001a54: 	fdivrp	%st, %st(1)
    00001a56: 	fstpt	0x60(%rsp)
    00001a5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3847:
    00001a60: 	fldz
    00001a62: 	movq	%rbp, %rax
    00001a65: 	fldt	0x40(%rsp)
    00001a69: 	fldt	0x60(%rsp)
    00001a6d: 	nopl	(%rax) # Size: 3
.Ltmp3843:
    00001a70: 	addq	$0x10, %rax
    00001a74: 	fldt	-0x10(%rax)
    00001a77: 	fadd	%st(2), %st
    00001a79: 	fsub	%st(1), %st
    00001a7b: 	faddp	%st, %st(3)
    00001a7d: 	cmpq	%rax, %rbx
    00001a80: 	jne	.Ltmp3843 # Offset: 6784
    00001a82: 	fstp	%st(0)
    00001a84: 	fstp	%st(0)
    00001a86: 	fldt	0x40(%rsp)
    00001a8a: 	faddl	init_value(%rip)
    00001a90: 	fldt	0x60(%rsp)
    00001a94: 	fsubrp	%st, %st(1)
    00001a96: 	fmuls	0x28(%rsp)
    00001a9a: 	fsubr	%st(1), %st
    00001a9c: 	fstpl	0x50(%rsp)
    00001aa0: 	fld	%st(0)
    00001aa2: 	fabs
    00001aa4: 	fldl	(%rsp)
    00001aa7: 	fxch	%st(1)
    00001aa9: 	fcompi	%st(1), %st
    00001aab: 	fstp	%st(0)
    00001aad: 	jbe	.Ltmp3844 # Offset: 6829
    00001aaf: 	fdivrl	0x50(%rsp)
    00001ab3: 	fstpl	0x50(%rsp)
    00001ab7: 	jmp	.Ltmp3845 # Offset: 6839
    00001ab9: 	nopl	(%rax) # Size: 7
.Ltmp3844:
    00001ac0: 	fstp	%st(0)
.Ltmp3845:
    00001ac2: 	movsd	0x50(%rsp), %xmm0
    00001ac8: 	movsd	0x20(%rsp), %xmm4
    00001ace: 	andpd	0x10(%rsp), %xmm0
    00001ad4: 	comisd	%xmm0, %xmm4
    00001ad8: 	jbe	.Ltmp3846 # Offset: 6872
.Ltmp3957:
    00001ade: 	addl	$0x1, %r12d
    00001ae2: 	cmpl	%edx, %r12d
    00001ae5: 	jl	.Ltmp3847 # Offset: 6885
.Ltmp3842:
    00001aeb: 	movq	0x80(%rsp), %rsi
    00001af3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001afa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6906
    00001aff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b06: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b0d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b14: 	je	.Ltmp3848 # Offset: 6932
.Ltmp3993:
    00001b1a: 	movq	-0x20(%rax), %r12
    00001b1e: 	callq	clock@PLT # Offset: 6942
    00001b23: 	pxor	%xmm0, %xmm0
    00001b27: 	movq	%rax, end_time(%rip)
    00001b2e: 	movq	%r12, %rdi
    00001b31: 	subq	start_time(%rip), %rax
    00001b38: 	cvtsi2sd	%rax, %xmm0
    00001b3d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b45: 	callq	_Z13record_resultdPKc # Offset: 6981
    00001b4a: 	movq	0x210(%rsp), %rdi
    00001b52: 	cmpq	%r14, %rdi
    00001b55: 	je	.Ltmp3849 # Offset: 6997
    00001b57: 	movq	0x220(%rsp), %rax
    00001b5f: 	leaq	0x1(%rax), %rsi
    00001b63: 	callq	_ZdlPvm@PLT # Offset: 7011
.Ltmp3849:
    00001b68: 	leaq	0x1b0(%rsp), %rdi
    00001b70: 	leaq	DATAat0x3d3c2(%rip), %rdx
    00001b77: 	movq	%r13, %rsi
    00001b7a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7034
    00001b7f: 	movl	iterations(%rip), %edx
    00001b85: 	xorl	%r8d, %r8d
    00001b88: 	xorl	%ecx, %ecx
    00001b8a: 	movl	$0x1f40, %esi
    00001b8f: 	movq	0x1b0(%rsp), %rdi
    00001b97: 	callq	_Z9summarizePKciiii # Offset: 7063
    00001b9c: 	movsd	init_value(%rip), %xmm0
    00001ba4: 	movq	%rbp, %rax
    00001ba7: 	movsd	%xmm0, 0x20(%rsp)
    00001bad: 	fldl	0x20(%rsp)
    00001bb1: 	nopl	(%rax) # Size: 7
.Ltmp3850:
    00001bb8: 	addq	$0x10, %rax
    00001bbc: 	fld	%st(0)
    00001bbe: 	fstpt	-0x10(%rax)
    00001bc1: 	cmpq	%rbx, %rax
    00001bc4: 	jne	.Ltmp3850 # Offset: 7108
    00001bc6: 	addsd	DATAat0x3d700(%rip), %xmm0
    00001bce: 	fld	%st(0)
    00001bd0: 	fstpt	0x120(%rsp)
    00001bd7: 	leaq	0x1f0(%rsp), %r12
    00001bdf: 	movq	%r13, %rsi
    00001be2: 	movq	%r12, %rdi
    00001be5: 	cvttsd2si	%xmm0, %edx
    00001be9: 	fld	%st(0)
    00001beb: 	fstpt	0xc0(%rsp)
    00001bf2: 	fld	%st(0)
    00001bf4: 	fstpt	0xd0(%rsp)
    00001bfb: 	movslq	%edx, %rax
    00001bfe: 	movl	%edx, %ecx
    00001c00: 	imulq	$0x51eb851f, %rax, %rax
    00001c07: 	sarl	$0x1f, %ecx
    00001c0a: 	fld	%st(0)
    00001c0c: 	fstpt	0x130(%rsp)
    00001c13: 	sarq	$0x24, %rax
    00001c17: 	subl	%ecx, %eax
    00001c19: 	fld	%st(0)
    00001c1b: 	fstpt	0x170(%rsp)
    00001c22: 	imull	$0x32, %eax, %eax
    00001c25: 	fstpt	0x180(%rsp)
    00001c2c: 	subl	%eax, %edx
    00001c2e: 	movl	%edx, 0x70(%rsp)
    00001c32: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001c39: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7225
    00001c3e: 	callq	clock@PLT # Offset: 7230
    00001c43: 	movl	iterations(%rip), %edx
    00001c49: 	movq	%rax, start_time(%rip)
    00001c50: 	testl	%edx, %edx
    00001c52: 	jle	.Ltmp3851 # Offset: 7250
    00001c58: 	movslq	0x70(%rsp), %r15
    00001c5d: 	movss	DATAat0x3d68c(%rip), %xmm3
    00001c65: 	pxor	%xmm2, %xmm2
    00001c69: 	xorl	%r14d, %r14d
    00001c6c: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    00001c74: 	movq	DATAat0x3d710(%rip), %xmm5
    00001c7c: 	movss	%xmm2, 0x30(%rsp)
    00001c82: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00001c8a: 	shlq	$0x4, %r15
    00001c8e: 	movss	%xmm3, 0x28(%rsp)
    00001c94: 	addq	0x80(%rsp), %r15
    00001c9c: 	movsd	%xmm4, (%rsp)
    00001ca1: 	movaps	%xmm5, 0x10(%rsp)
    00001ca6: 	movsd	%xmm6, 0x20(%rsp)
    00001cac: 	nopl	(%rax) # Size: 4
.Ltmp3856:
    00001cb0: 	flds	0x28(%rsp)
    00001cb4: 	movq	%rbp, %rax
    00001cb7: 	fmull	init_value(%rip)
    00001cbd: 	fldz
    00001cbf: 	nop # Size: 1
.Ltmp3852:
    00001cc0: 	fldt	(%rax)
    00001cc2: 	addq	$0x10, %rax
    00001cc6: 	faddp	%st, %st(1)
    00001cc8: 	cmpq	%rax, %rbx
    00001ccb: 	jne	.Ltmp3852 # Offset: 7371
    00001ccd: 	fld	%st(0)
    00001ccf: 	fstpt	(%r15)
    00001cd2: 	fsub	%st, %st(1)
    00001cd4: 	fxch	%st(1)
    00001cd6: 	fstpl	0x40(%rsp)
    00001cda: 	fld	%st(0)
    00001cdc: 	fabs
    00001cde: 	fldl	(%rsp)
    00001ce1: 	fxch	%st(1)
    00001ce3: 	fcompi	%st(1), %st
    00001ce5: 	fstp	%st(0)
    00001ce7: 	jbe	.Ltmp3853 # Offset: 7399
    00001ce9: 	fdivrl	0x40(%rsp)
    00001ced: 	fstpl	0x40(%rsp)
    00001cf1: 	jmp	.Ltmp3854 # Offset: 7409
    00001cf3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3853:
    00001cf8: 	fstp	%st(0)
.Ltmp3854:
    00001cfa: 	movsd	0x40(%rsp), %xmm0
    00001d00: 	movsd	0x20(%rsp), %xmm6
    00001d06: 	andpd	0x10(%rsp), %xmm0
    00001d0c: 	comisd	%xmm0, %xmm6
    00001d10: 	jbe	.Ltmp3855 # Offset: 7440
.Ltmp3956:
    00001d16: 	addl	$0x1, %r14d
    00001d1a: 	cmpl	%edx, %r14d
    00001d1d: 	jl	.Ltmp3856 # Offset: 7453
.Ltmp3851:
    00001d1f: 	movq	%r12, %rsi
    00001d22: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d29: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7465
    00001d2e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d35: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d3c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d43: 	je	.Ltmp3857 # Offset: 7491
.Ltmp3992:
    00001d49: 	movq	-0x20(%rax), %r14
    00001d4d: 	callq	clock@PLT # Offset: 7501
    00001d52: 	pxor	%xmm0, %xmm0
    00001d56: 	movq	%rax, end_time(%rip)
    00001d5d: 	movq	%r14, %rdi
    00001d60: 	subq	start_time(%rip), %rax
    00001d67: 	cvtsi2sd	%rax, %xmm0
    00001d6c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d74: 	callq	_Z13record_resultdPKc # Offset: 7540
    00001d79: 	movq	0x1f0(%rsp), %rdi
    00001d81: 	leaq	0x200(%rsp), %rax
    00001d89: 	movq	%rax, 0x40(%rsp)
    00001d8e: 	cmpq	%rax, %rdi
    00001d91: 	je	.Ltmp3858 # Offset: 7569
    00001d93: 	movq	0x200(%rsp), %rax
    00001d9b: 	leaq	0x1(%rax), %rsi
    00001d9f: 	callq	_ZdlPvm@PLT # Offset: 7583
.Ltmp3858:
    00001da4: 	leaq	DATAat0x3d3eb(%rip), %rdx
    00001dab: 	movq	%r13, %rsi
    00001dae: 	movq	%r12, %rdi
    00001db1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7601
    00001db6: 	callq	clock@PLT # Offset: 7606
    00001dbb: 	movl	iterations(%rip), %edx
    00001dc1: 	movq	%rax, start_time(%rip)
    00001dc8: 	testl	%edx, %edx
    00001dca: 	jle	.Ltmp3859 # Offset: 7626
    00001dd0: 	movslq	0x70(%rsp), %rax
    00001dd5: 	movq	0x80(%rsp), %rcx
    00001ddd: 	pxor	%xmm7, %xmm7
    00001de1: 	xorl	%r14d, %r14d
    00001de4: 	movss	DATAat0x3d68c(%rip), %xmm1
    00001dec: 	movsd	DATAat0x3d6e0(%rip), %xmm2
    00001df4: 	movss	%xmm7, 0x30(%rsp)
    00001dfa: 	movq	DATAat0x3d710(%rip), %xmm3
    00001e02: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00001e0a: 	shlq	$0x4, %rax
    00001e0e: 	leaq	(%rcx,%rax), %r15
    00001e12: 	movss	%xmm1, 0x28(%rsp)
    00001e18: 	movsd	%xmm2, (%rsp)
    00001e1d: 	movaps	%xmm3, 0x10(%rsp)
    00001e22: 	movsd	%xmm4, 0x20(%rsp)
    00001e28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3864:
    00001e30: 	flds	0x28(%rsp)
    00001e34: 	movq	%rbp, %rax
    00001e37: 	fmull	init_value(%rip)
    00001e3d: 	fldz
    00001e3f: 	nop # Size: 1
.Ltmp3860:
    00001e40: 	fldt	(%rax)
    00001e42: 	addq	$0x10, %rax
    00001e46: 	faddp	%st, %st(1)
    00001e48: 	cmpq	%rax, %rbx
    00001e4b: 	jne	.Ltmp3860 # Offset: 7755
    00001e4d: 	fld	%st(0)
    00001e4f: 	fstpt	(%r15)
    00001e52: 	fsub	%st, %st(1)
    00001e54: 	fxch	%st(1)
    00001e56: 	fstpl	0x50(%rsp)
    00001e5a: 	fld	%st(0)
    00001e5c: 	fabs
    00001e5e: 	fldl	(%rsp)
    00001e61: 	fxch	%st(1)
    00001e63: 	fcompi	%st(1), %st
    00001e65: 	fstp	%st(0)
    00001e67: 	jbe	.Ltmp3861 # Offset: 7783
    00001e69: 	fdivrl	0x50(%rsp)
    00001e6d: 	fstpl	0x50(%rsp)
    00001e71: 	jmp	.Ltmp3862 # Offset: 7793
    00001e73: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3861:
    00001e78: 	fstp	%st(0)
.Ltmp3862:
    00001e7a: 	movsd	0x50(%rsp), %xmm0
    00001e80: 	movsd	0x20(%rsp), %xmm1
    00001e86: 	andpd	0x10(%rsp), %xmm0
    00001e8c: 	comisd	%xmm0, %xmm1
    00001e90: 	jbe	.Ltmp3863 # Offset: 7824
.Ltmp3955:
    00001e96: 	addl	$0x1, %r14d
    00001e9a: 	cmpl	%edx, %r14d
    00001e9d: 	jl	.Ltmp3864 # Offset: 7837
.Ltmp3859:
    00001e9f: 	movq	%r12, %rsi
    00001ea2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ea9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7849
    00001eae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001eb5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ebc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ec3: 	je	.Ltmp3865 # Offset: 7875
.Ltmp3991:
    00001ec9: 	movq	-0x20(%rax), %r14
    00001ecd: 	callq	clock@PLT # Offset: 7885
    00001ed2: 	pxor	%xmm0, %xmm0
    00001ed6: 	movq	%rax, end_time(%rip)
    00001edd: 	movq	%r14, %rdi
    00001ee0: 	subq	start_time(%rip), %rax
    00001ee7: 	cvtsi2sd	%rax, %xmm0
    00001eec: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ef4: 	callq	_Z13record_resultdPKc # Offset: 7924
    00001ef9: 	movq	0x1f0(%rsp), %rdi
    00001f01: 	cmpq	0x40(%rsp), %rdi
    00001f06: 	je	.Ltmp3866 # Offset: 7942
    00001f08: 	movq	0x200(%rsp), %rax
    00001f10: 	leaq	0x1(%rax), %rsi
    00001f14: 	callq	_ZdlPvm@PLT # Offset: 7956
.Ltmp3866:
    00001f19: 	leaq	DATAat0x3d400(%rip), %rdx
    00001f20: 	movq	%r13, %rsi
    00001f23: 	movq	%r12, %rdi
    00001f26: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7974
    00001f2b: 	callq	clock@PLT # Offset: 7979
    00001f30: 	movl	iterations(%rip), %edx
    00001f36: 	movq	%rax, start_time(%rip)
    00001f3d: 	testl	%edx, %edx
    00001f3f: 	jle	.Ltmp3867 # Offset: 7999
    00001f45: 	movss	DATAat0x3d68c(%rip), %xmm6
    00001f4d: 	pxor	%xmm5, %xmm5
    00001f51: 	xorl	%r14d, %r14d
    00001f54: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00001f5c: 	movq	DATAat0x3d710(%rip), %xmm1
    00001f64: 	movsd	DATAat0x3d6e8(%rip), %xmm2
    00001f6c: 	movss	%xmm5, 0x30(%rsp)
    00001f72: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001f79: 	movss	%xmm6, 0x28(%rsp)
    00001f7f: 	movsd	%xmm7, (%rsp)
    00001f84: 	movaps	%xmm1, 0x10(%rsp)
    00001f89: 	movsd	%xmm2, 0x20(%rsp)
    00001f8f: 	nop # Size: 1
.Ltmp3872:
    00001f90: 	flds	0x28(%rsp)
    00001f94: 	movq	%rbp, %rax
    00001f97: 	fmull	init_value(%rip)
    00001f9d: 	fldz
    00001f9f: 	nop # Size: 1
.Ltmp3868:
    00001fa0: 	fldt	(%rax)
    00001fa2: 	addq	$0x10, %rax
    00001fa6: 	faddp	%st, %st(1)
    00001fa8: 	cmpq	%rax, %rbx
    00001fab: 	jne	.Ltmp3868 # Offset: 8107
    00001fad: 	fld	%st(0)
    00001faf: 	fstpt	0x120(%rsp)
    00001fb6: 	fsub	%st, %st(1)
    00001fb8: 	fxch	%st(1)
    00001fba: 	fstpl	0x50(%rsp)
    00001fbe: 	fld	%st(0)
    00001fc0: 	fabs
    00001fc2: 	fldl	(%rsp)
    00001fc5: 	fxch	%st(1)
    00001fc7: 	fcompi	%st(1), %st
    00001fc9: 	fstp	%st(0)
    00001fcb: 	jbe	.Ltmp3869 # Offset: 8139
    00001fcd: 	fdivrl	0x50(%rsp)
    00001fd1: 	fstpl	0x50(%rsp)
    00001fd5: 	jmp	.Ltmp3870 # Offset: 8149
    00001fd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3869:
    00001fe0: 	fstp	%st(0)
.Ltmp3870:
    00001fe2: 	movsd	0x50(%rsp), %xmm0
    00001fe8: 	movsd	0x20(%rsp), %xmm3
    00001fee: 	andpd	0x10(%rsp), %xmm0
    00001ff4: 	comisd	%xmm0, %xmm3
    00001ff8: 	jbe	.Ltmp3871 # Offset: 8184
.Ltmp3954:
    00001ffe: 	addl	$0x1, %r14d
    00002002: 	cmpl	%edx, %r14d
    00002005: 	jl	.Ltmp3872 # Offset: 8197
.Ltmp3867:
    00002007: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000200e: 	movq	"_ZL7gLabels/1"+48(%rip), %r15
    00002015: 	subq	$0x20, %rax
    00002019: 	cmpq	%rax, %r15
    0000201c: 	je	.Ltmp3873 # Offset: 8220
    00002022: 	leaq	0x10(%r15), %rdi
    00002026: 	movq	0x1f8(%rsp), %r14
    0000202e: 	movq	%rdi, (%r15)
    00002031: 	movq	0x1f0(%rsp), %rax
    00002039: 	movq	%rax, %rcx
    0000203c: 	movq	%rax, 0x20(%rsp)
    00002041: 	addq	%r14, %rcx
    00002044: 	je	.Ltmp3874 # Offset: 8260
    00002046: 	testq	%rax, %rax
    00002049: 	je	.Ltmp3875 # Offset: 8265
.Ltmp3874:
    0000204f: 	movq	%r14, 0xb8(%rsp)
    00002057: 	cmpq	$0xf, %r14
    0000205b: 	ja	.Ltmp3876 # Offset: 8283
    00002061: 	cmpq	$0x1, %r14
    00002065: 	jne	.Ltmp3877 # Offset: 8293
    0000206b: 	movq	0x20(%rsp), %rax
    00002070: 	movzbl	(%rax), %eax
    00002073: 	movb	%al, 0x10(%r15)
.Ltmp3973:
    00002077: 	movq	%r14, 0x8(%r15)
    0000207b: 	movb	$0x0, (%rdi,%r14)
    00002080: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002087: 	addq	$0x20, %rax
    0000208b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3990:
    00002092: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002099: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020a0: 	je	.Ltmp3878 # Offset: 8352
.Ltmp3985:
    000020a6: 	movq	-0x20(%rax), %r14
    000020aa: 	callq	clock@PLT # Offset: 8362
    000020af: 	pxor	%xmm0, %xmm0
    000020b3: 	movq	%rax, end_time(%rip)
    000020ba: 	movq	%r14, %rdi
    000020bd: 	subq	start_time(%rip), %rax
    000020c4: 	cvtsi2sd	%rax, %xmm0
    000020c9: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000020d1: 	callq	_Z13record_resultdPKc # Offset: 8401
    000020d6: 	movq	0x1f0(%rsp), %rdi
    000020de: 	cmpq	0x40(%rsp), %rdi
    000020e3: 	je	.Ltmp3879 # Offset: 8419
    000020e5: 	movq	0x200(%rsp), %rax
    000020ed: 	leaq	0x1(%rax), %rsi
    000020f1: 	callq	_ZdlPvm@PLT # Offset: 8433
.Ltmp3879:
    000020f6: 	leaq	DATAat0x3d41a(%rip), %rdx
    000020fd: 	movq	%r13, %rsi
    00002100: 	movq	%r12, %rdi
    00002103: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8451
    00002108: 	callq	clock@PLT # Offset: 8456
    0000210d: 	movl	iterations(%rip), %edx
    00002113: 	movq	%rax, start_time(%rip)
    0000211a: 	testl	%edx, %edx
    0000211c: 	jle	.Ltmp3880 # Offset: 8476
    00002122: 	movss	DATAat0x3d68c(%rip), %xmm4
    0000212a: 	pxor	%xmm3, %xmm3
    0000212e: 	xorl	%r14d, %r14d
    00002131: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    00002139: 	movq	DATAat0x3d710(%rip), %xmm6
    00002141: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    00002149: 	movss	%xmm3, 0x30(%rsp)
    0000214f: 	leaq	DATAat0x3d1c8(%rip), %r15
    00002156: 	movss	%xmm4, 0x28(%rsp)
    0000215c: 	movsd	%xmm5, (%rsp)
    00002161: 	movaps	%xmm6, 0x10(%rsp)
    00002166: 	movsd	%xmm7, 0x20(%rsp)
    0000216c: 	nopl	(%rax) # Size: 4
.Ltmp3885:
    00002170: 	flds	0x28(%rsp)
    00002174: 	movq	%rbp, %rax
    00002177: 	fmull	init_value(%rip)
    0000217d: 	fldz
    0000217f: 	nop # Size: 1
.Ltmp3881:
    00002180: 	fldt	(%rax)
    00002182: 	addq	$0x10, %rax
    00002186: 	faddp	%st, %st(1)
    00002188: 	cmpq	%rbx, %rax
    0000218b: 	jne	.Ltmp3881 # Offset: 8587
    0000218d: 	fld	%st(0)
    0000218f: 	fstpt	0x120(%rsp)
    00002196: 	fsub	%st, %st(1)
    00002198: 	fxch	%st(1)
    0000219a: 	fstpl	0x50(%rsp)
    0000219e: 	fld	%st(0)
    000021a0: 	fabs
    000021a2: 	fldl	(%rsp)
    000021a5: 	fxch	%st(1)
    000021a7: 	fcompi	%st(1), %st
    000021a9: 	fstp	%st(0)
    000021ab: 	jbe	.Ltmp3882 # Offset: 8619
    000021ad: 	fdivrl	0x50(%rsp)
    000021b1: 	fstpl	0x50(%rsp)
    000021b5: 	jmp	.Ltmp3883 # Offset: 8629
    000021b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3882:
    000021c0: 	fstp	%st(0)
.Ltmp3883:
    000021c2: 	movsd	0x50(%rsp), %xmm0
    000021c8: 	movsd	0x20(%rsp), %xmm5
    000021ce: 	andpd	0x10(%rsp), %xmm0
    000021d4: 	comisd	%xmm0, %xmm5
    000021d8: 	jbe	.Ltmp3884 # Offset: 8664
.Ltmp3976:
    000021de: 	addl	$0x1, %r14d
    000021e2: 	cmpl	%edx, %r14d
    000021e5: 	jl	.Ltmp3885 # Offset: 8677
.Ltmp3880:
    000021e7: 	movq	%r12, %rsi
    000021ea: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021f1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8689
    000021f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021fd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002204: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000220b: 	je	.Ltmp3886 # Offset: 8715
.Ltmp3984:
    00002211: 	movq	-0x20(%rax), %r14
    00002215: 	callq	clock@PLT # Offset: 8725
    0000221a: 	pxor	%xmm0, %xmm0
    0000221e: 	movq	%rax, end_time(%rip)
    00002225: 	movq	%r14, %rdi
    00002228: 	subq	start_time(%rip), %rax
    0000222f: 	cvtsi2sd	%rax, %xmm0
    00002234: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000223c: 	callq	_Z13record_resultdPKc # Offset: 8764
    00002241: 	movq	0x1f0(%rsp), %rdi
    00002249: 	cmpq	0x40(%rsp), %rdi
    0000224e: 	je	.Ltmp3887 # Offset: 8782
    00002250: 	movq	0x200(%rsp), %rax
    00002258: 	leaq	0x1(%rax), %rsi
    0000225c: 	callq	_ZdlPvm@PLT # Offset: 8796
.Ltmp3887:
    00002261: 	leaq	DATAat0x3d430(%rip), %rdx
    00002268: 	movq	%r13, %rsi
    0000226b: 	movq	%r12, %rdi
    0000226e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8814
    00002273: 	movl	0x70(%rsp), %edx
    00002277: 	movq	%r12, %rcx
    0000227a: 	movl	$0x1f40, %esi
    0000227f: 	movq	%rbp, %rdi
    00002282: 	callq	_Z23test_array_const_in_optIeEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 8834
    00002287: 	movq	0x1f0(%rsp), %rdi
    0000228f: 	cmpq	0x40(%rsp), %rdi
    00002294: 	je	.Ltmp3888 # Offset: 8852
    00002296: 	movq	0x200(%rsp), %rax
    0000229e: 	leaq	0x1(%rax), %rsi
    000022a2: 	callq	_ZdlPvm@PLT # Offset: 8866
.Ltmp3888:
    000022a7: 	leaq	DATAat0x3d448(%rip), %rdx
    000022ae: 	movq	%r13, %rsi
    000022b1: 	movq	%r12, %rdi
    000022b4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8884
    000022b9: 	callq	clock@PLT # Offset: 8889
    000022be: 	movl	iterations(%rip), %edx
    000022c4: 	movq	%rax, start_time(%rip)
    000022cb: 	testl	%edx, %edx
    000022cd: 	jle	.Ltmp3889 # Offset: 8909
    000022d3: 	movslq	0x70(%rsp), %rax
    000022d8: 	movss	DATAat0x3d68c(%rip), %xmm2
    000022e0: 	pxor	%xmm1, %xmm1
    000022e4: 	xorl	%ebx, %ebx
    000022e6: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    000022ee: 	movq	DATAat0x3d710(%rip), %xmm4
    000022f6: 	movss	%xmm1, 0x30(%rsp)
    000022fc: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002303: 	shlq	$0x4, %rax
    00002307: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    0000230f: 	movss	%xmm2, 0x28(%rsp)
    00002315: 	fldt	0x530(%rsp,%rax)
    0000231c: 	movsd	%xmm3, (%rsp)
    00002321: 	movaps	%xmm4, 0x10(%rsp)
    00002326: 	movsd	%xmm5, 0x20(%rsp)
    0000232c: 	fstpt	0x60(%rsp)
.Ltmp3894:
    00002330: 	flds	0x28(%rsp)
    00002334: 	fmull	init_value(%rip)
    0000233a: 	movl	$0x1f40, %eax
    0000233f: 	fldz
    00002341: 	fldt	0x60(%rsp)
    00002345: 	nopl	(%rax) # Size: 3
.Ltmp3890:
    00002348: 	fadd	%st, %st(1)
    0000234a: 	subl	$0x1, %eax
    0000234d: 	jne	.Ltmp3890 # Offset: 9037
    0000234f: 	fstp	%st(0)
    00002351: 	fsub	%st, %st(1)
    00002353: 	fxch	%st(1)
    00002355: 	fstpl	0x50(%rsp)
    00002359: 	fld	%st(0)
    0000235b: 	fabs
    0000235d: 	fldl	(%rsp)
    00002360: 	fxch	%st(1)
    00002362: 	fcompi	%st(1), %st
    00002364: 	fstp	%st(0)
    00002366: 	jbe	.Ltmp3891 # Offset: 9062
    00002368: 	fdivrl	0x50(%rsp)
    0000236c: 	fstpl	0x50(%rsp)
    00002370: 	jmp	.Ltmp3892 # Offset: 9072
    00002372: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3891:
    00002378: 	fstp	%st(0)
.Ltmp3892:
    0000237a: 	movsd	0x50(%rsp), %xmm0
    00002380: 	movsd	0x20(%rsp), %xmm7
    00002386: 	andpd	0x10(%rsp), %xmm0
    0000238c: 	comisd	%xmm0, %xmm7
    00002390: 	jbe	.Ltmp3893 # Offset: 9104
.Ltmp3975:
    00002396: 	addl	$0x1, %ebx
    00002399: 	cmpl	%edx, %ebx
    0000239b: 	jl	.Ltmp3894 # Offset: 9115
.Ltmp3889:
    0000239d: 	movq	%r12, %rsi
    000023a0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9127
    000023ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023b3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000023ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023c1: 	je	.Ltmp3895 # Offset: 9153
.Ltmp3989:
    000023c7: 	movq	-0x20(%rax), %rbp
    000023cb: 	callq	clock@PLT # Offset: 9163
    000023d0: 	pxor	%xmm0, %xmm0
    000023d4: 	movq	%rax, end_time(%rip)
    000023db: 	movq	%rbp, %rdi
    000023de: 	subq	start_time(%rip), %rax
    000023e5: 	cvtsi2sd	%rax, %xmm0
    000023ea: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000023f2: 	callq	_Z13record_resultdPKc # Offset: 9202
    000023f7: 	movq	0x1f0(%rsp), %rdi
    000023ff: 	cmpq	0x40(%rsp), %rdi
    00002404: 	je	.Ltmp3896 # Offset: 9220
    00002406: 	movq	0x200(%rsp), %rax
    0000240e: 	leaq	0x1(%rax), %rsi
    00002412: 	callq	_ZdlPvm@PLT # Offset: 9234
.Ltmp3896:
    00002417: 	fldl	init_value(%rip)
    0000241d: 	leaq	DATAat0x3d45c(%rip), %rdx
    00002424: 	movq	%r13, %rsi
    00002427: 	movq	%r12, %rdi
    0000242a: 	fld	%st(0)
    0000242c: 	fstpt	0x60(%rsp)
    00002430: 	fld	%st(0)
    00002432: 	fstpt	0x120(%rsp)
    00002439: 	fld	%st(0)
    0000243b: 	fstpt	0xc0(%rsp)
    00002442: 	fstpt	0x180(%rsp)
    00002449: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9289
    0000244e: 	movq	0xa8(%rsp), %rdi
    00002456: 	movq	%r12, %rdx
    00002459: 	movl	$0x1f40, %esi
    0000245e: 	callq	_Z24test_struct_const_in_optIe13simple_structIeEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9310
    00002463: 	movq	0x1f0(%rsp), %rdi
    0000246b: 	cmpq	0x40(%rsp), %rdi
    00002470: 	je	.Ltmp3897 # Offset: 9328
    00002472: 	movq	0x200(%rsp), %rax
    0000247a: 	leaq	0x1(%rax), %rsi
    0000247e: 	callq	_ZdlPvm@PLT # Offset: 9342
.Ltmp3897:
    00002483: 	leaq	DATAat0x3d475(%rip), %rdx
    0000248a: 	movq	%r13, %rsi
    0000248d: 	movq	%r12, %rdi
    00002490: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9360
    00002495: 	callq	clock@PLT # Offset: 9365
    0000249a: 	movl	iterations(%rip), %edx
    000024a0: 	movq	%rax, start_time(%rip)
    000024a7: 	testl	%edx, %edx
    000024a9: 	jle	.Ltmp3898 # Offset: 9385
    000024af: 	movss	DATAat0x3d68c(%rip), %xmm7
    000024b7: 	pxor	%xmm6, %xmm6
    000024bb: 	xorl	%ebx, %ebx
    000024bd: 	movsd	DATAat0x3d6e0(%rip), %xmm1
    000024c5: 	movq	DATAat0x3d710(%rip), %xmm2
    000024cd: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    000024d5: 	movss	%xmm6, 0x30(%rsp)
    000024db: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000024e2: 	movss	%xmm7, 0x28(%rsp)
    000024e8: 	movsd	%xmm1, (%rsp)
    000024ed: 	movaps	%xmm2, 0x10(%rsp)
    000024f2: 	movsd	%xmm3, 0x20(%rsp)
    000024f8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp3903:
    00002500: 	flds	0x28(%rsp)
    00002504: 	fmull	init_value(%rip)
    0000250a: 	movl	$0x1f40, %eax
    0000250f: 	fldz
    00002511: 	fldt	0x60(%rsp)
    00002515: 	nopl	(%rax) # Size: 3
.Ltmp3899:
    00002518: 	fadd	%st, %st(1)
    0000251a: 	subl	$0x1, %eax
    0000251d: 	jne	.Ltmp3899 # Offset: 9501
    0000251f: 	fstp	%st(0)
    00002521: 	fsub	%st, %st(1)
    00002523: 	fxch	%st(1)
    00002525: 	fstpl	0x50(%rsp)
    00002529: 	fld	%st(0)
    0000252b: 	fabs
    0000252d: 	fldl	(%rsp)
    00002530: 	fxch	%st(1)
    00002532: 	fcompi	%st(1), %st
    00002534: 	fstp	%st(0)
    00002536: 	jbe	.Ltmp3900 # Offset: 9526
    00002538: 	fdivrl	0x50(%rsp)
    0000253c: 	fstpl	0x50(%rsp)
    00002540: 	jmp	.Ltmp3901 # Offset: 9536
    00002542: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3900:
    00002548: 	fstp	%st(0)
.Ltmp3901:
    0000254a: 	movsd	0x50(%rsp), %xmm0
    00002550: 	movsd	0x20(%rsp), %xmm2
    00002556: 	andpd	0x10(%rsp), %xmm0
    0000255c: 	comisd	%xmm0, %xmm2
    00002560: 	jbe	.Ltmp3902 # Offset: 9568
.Ltmp3974:
    00002566: 	addl	$0x1, %ebx
    00002569: 	cmpl	%edx, %ebx
    0000256b: 	jl	.Ltmp3903 # Offset: 9579
.Ltmp3898:
    0000256d: 	movq	%r12, %rsi
    00002570: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002577: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9591
    0000257c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002583: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000258a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002591: 	je	.Ltmp3904 # Offset: 9617
.Ltmp3988:
    00002597: 	movq	-0x20(%rax), %rbp
    0000259b: 	callq	clock@PLT # Offset: 9627
    000025a0: 	pxor	%xmm0, %xmm0
    000025a4: 	movq	%rax, end_time(%rip)
    000025ab: 	movq	%rbp, %rdi
    000025ae: 	subq	start_time(%rip), %rax
    000025b5: 	cvtsi2sd	%rax, %xmm0
    000025ba: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000025c2: 	callq	_Z13record_resultdPKc # Offset: 9666
    000025c7: 	movq	0x1f0(%rsp), %rdi
    000025cf: 	cmpq	0x40(%rsp), %rdi
    000025d4: 	je	.Ltmp3905 # Offset: 9684
    000025d6: 	movq	0x200(%rsp), %rax
    000025de: 	leaq	0x1(%rax), %rsi
    000025e2: 	callq	_ZdlPvm@PLT # Offset: 9698
.Ltmp3905:
    000025e7: 	leaq	DATAat0x3d48a(%rip), %rdx
    000025ee: 	movq	%r13, %rsi
    000025f1: 	movq	%r12, %rdi
    000025f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9716
    000025f9: 	callq	clock@PLT # Offset: 9721
    000025fe: 	movq	%rax, start_time(%rip)
    00002605: 	movl	iterations(%rip), %eax
    0000260b: 	testl	%eax, %eax
    0000260d: 	jle	.Ltmp3906 # Offset: 9741
    00002613: 	fldt	0x1f920(%rsp)
    0000261a: 	movslq	0x70(%rsp), %rbp
    0000261f: 	shlq	$0x4, %rbp
    00002623: 	addq	0x80(%rsp), %rbp
    0000262b: 	fld	%st(0)
    0000262d: 	fstpt	(%rsp)
    00002630: 	fld	%st(0)
    00002632: 	fsub	%st(1), %st
    00002634: 	fstpl	0x20(%rsp)
    00002638: 	fabs
    0000263a: 	fldl	DATAat0x3d6e0(%rip)
    00002640: 	fxch	%st(1)
    00002642: 	fcompi	%st(1), %st
    00002644: 	fstp	%st(0)
    00002646: 	ja	.Ltmp3907 # Offset: 9798
    0000264c: 	movsd	0x20(%rsp), %xmm3
    00002652: 	xorl	%ebx, %ebx
    00002654: 	andpd	DATAat0x3d710(%rip), %xmm3
    0000265c: 	leaq	DATAat0x3d1c8(%rip), %r14
    00002663: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    0000266b: 	movsd	%xmm3, 0x10(%rsp)
    00002671: 	movsd	%xmm5, 0x20(%rsp)
    00002677: 	jmp	.Ltmp3908 # Offset: 9847
    00002679: 	nopl	(%rax) # Size: 7
.Ltmp3909:
    00002680: 	addl	$0x1, %ebx
    00002683: 	cmpl	%eax, %ebx
    00002685: 	jge	.Ltmp3906 # Offset: 9861
.Ltmp3908:
    00002687: 	fldt	(%rsp)
    0000268a: 	movsd	0x20(%rsp), %xmm7
    00002690: 	comisd	0x10(%rsp), %xmm7
    00002696: 	fstpt	(%rbp)
    00002699: 	ja	.Ltmp3909 # Offset: 9881
    0000269b: 	movq	0x1f0(%rsp), %rdx
    000026a3: 	movq	%r14, %rsi
    000026a6: 	movl	$0x1, %edi
    000026ab: 	xorl	%eax, %eax
    000026ad: 	callq	__printf_chk@PLT # Offset: 9901
    000026b2: 	movl	iterations(%rip), %eax
    000026b8: 	addl	$0x1, %ebx
    000026bb: 	cmpl	%eax, %ebx
    000026bd: 	jl	.Ltmp3908 # Offset: 9917
    000026bf: 	nop # Size: 1
.Ltmp3906:
    000026c0: 	movq	%r12, %rsi
    000026c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000026ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9930
    000026cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026d6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000026dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000026e4: 	je	.Ltmp3910 # Offset: 9956
.Ltmp3987:
    000026ea: 	movq	-0x20(%rax), %rbp
    000026ee: 	callq	clock@PLT # Offset: 9966
    000026f3: 	pxor	%xmm0, %xmm0
    000026f7: 	movq	%rax, end_time(%rip)
    000026fe: 	movq	%rbp, %rdi
    00002701: 	subq	start_time(%rip), %rax
    00002708: 	cvtsi2sd	%rax, %xmm0
    0000270d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002715: 	callq	_Z13record_resultdPKc # Offset: 10005
    0000271a: 	movq	0x1f0(%rsp), %rdi
    00002722: 	cmpq	0x40(%rsp), %rdi
    00002727: 	je	.Ltmp3911 # Offset: 10023
    00002729: 	movq	0x200(%rsp), %rax
    00002731: 	leaq	0x1(%rax), %rsi
    00002735: 	callq	_ZdlPvm@PLT # Offset: 10037
.Ltmp3911:
    0000273a: 	leaq	DATAat0x3d49d(%rip), %rdx
    00002741: 	movq	%r13, %rsi
    00002744: 	movq	%r12, %rdi
    00002747: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10055
    0000274c: 	callq	clock@PLT # Offset: 10060
    00002751: 	movq	%rax, start_time(%rip)
    00002758: 	movl	iterations(%rip), %eax
    0000275e: 	testl	%eax, %eax
    00002760: 	jle	.Ltmp3912 # Offset: 10080
    00002766: 	fldt	0x1f920(%rsp)
    0000276d: 	movslq	0x70(%rsp), %rbp
    00002772: 	xorl	%ebx, %ebx
    00002774: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000277b: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    00002783: 	movq	DATAat0x3d710(%rip), %xmm5
    0000278b: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00002793: 	shlq	$0x4, %rbp
    00002797: 	fld	%st(0)
    00002799: 	addq	0x80(%rsp), %rbp
    000027a1: 	movsd	%xmm4, (%rsp)
    000027a6: 	fld	%st(0)
    000027a8: 	fstpt	0x30(%rsp)
    000027ac: 	movaps	%xmm5, 0x10(%rsp)
    000027b1: 	fld	%st(0)
    000027b3: 	movsd	%xmm6, 0x20(%rsp)
    000027b9: 	fsubp	%st, %st(1)
    000027bb: 	fstpl	0x28(%rsp)
    000027bf: 	fabs
    000027c1: 	fstpt	0x50(%rsp)
    000027c5: 	jmp	.Ltmp3913 # Offset: 10181
    000027c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3916:
    000027d0: 	addl	$0x1, %ebx
    000027d3: 	cmpl	%eax, %ebx
    000027d5: 	jge	.Ltmp3912 # Offset: 10197
.Ltmp3913:
    000027d7: 	fldt	0x30(%rsp)
    000027db: 	movsd	0x28(%rsp), %xmm0
    000027e1: 	fld	%st(0)
    000027e3: 	fstpt	(%rbp)
    000027e6: 	fldl	(%rsp)
    000027e9: 	fldt	0x50(%rsp)
    000027ed: 	fcompi	%st(1), %st
    000027ef: 	fstp	%st(0)
    000027f1: 	jbe	.Ltmp3914 # Offset: 10225
    000027f3: 	fdivrl	0x28(%rsp)
    000027f7: 	fstpl	0x60(%rsp)
    000027fb: 	movsd	0x60(%rsp), %xmm0
    00002801: 	jmp	.Ltmp3915 # Offset: 10241
    00002803: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3914:
    00002808: 	fstp	%st(0)
.Ltmp3915:
    0000280a: 	andpd	0x10(%rsp), %xmm0
    00002810: 	movsd	0x20(%rsp), %xmm4
    00002816: 	comisd	%xmm0, %xmm4
    0000281a: 	ja	.Ltmp3916 # Offset: 10266
    0000281c: 	movq	0x1f0(%rsp), %rdx
    00002824: 	movq	%r14, %rsi
    00002827: 	movl	$0x1, %edi
    0000282c: 	xorl	%eax, %eax
    0000282e: 	callq	__printf_chk@PLT # Offset: 10286
    00002833: 	movl	iterations(%rip), %eax
    00002839: 	addl	$0x1, %ebx
    0000283c: 	cmpl	%eax, %ebx
    0000283e: 	jl	.Ltmp3913 # Offset: 10302
.Ltmp3912:
    00002840: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002847: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000284e: 	subq	$0x20, %rax
    00002852: 	cmpq	%rax, %rbx
    00002855: 	je	.Ltmp3917 # Offset: 10325
    0000285b: 	leaq	0x10(%rbx), %rdi
    0000285f: 	movq	0x1f8(%rsp), %r14
    00002867: 	movq	%rdi, (%rbx)
    0000286a: 	movq	0x1f0(%rsp), %rbp
    00002872: 	movq	%rbp, %rax
    00002875: 	addq	%r14, %rax
    00002878: 	je	.Ltmp3918 # Offset: 10360
    0000287a: 	testq	%rbp, %rbp
    0000287d: 	je	.Ltmp3919 # Offset: 10365
.Ltmp3918:
    00002883: 	movq	%r14, 0xb8(%rsp)
    0000288b: 	cmpq	$0xf, %r14
    0000288f: 	ja	.Ltmp3920 # Offset: 10383
    00002895: 	cmpq	$0x1, %r14
    00002899: 	jne	.Ltmp3921 # Offset: 10393
    0000289f: 	movzbl	(%rbp), %eax
    000028a3: 	movb	%al, 0x10(%rbx)
.Ltmp4010:
    000028a6: 	movq	%r14, 0x8(%rbx)
    000028aa: 	movb	$0x0, (%rdi,%r14)
    000028af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000028b6: 	addq	$0x20, %rax
    000028ba: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp3986:
    000028c1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000028c8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000028cf: 	je	.Ltmp3922 # Offset: 10447
.Ltmp3983:
    000028d5: 	movq	-0x20(%rax), %rbp
    000028d9: 	callq	clock@PLT # Offset: 10457
    000028de: 	pxor	%xmm0, %xmm0
    000028e2: 	movq	%rax, end_time(%rip)
    000028e9: 	movq	%rbp, %rdi
    000028ec: 	subq	start_time(%rip), %rax
    000028f3: 	cvtsi2sd	%rax, %xmm0
    000028f8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002900: 	callq	_Z13record_resultdPKc # Offset: 10496
    00002905: 	movq	0x1f0(%rsp), %rdi
    0000290d: 	cmpq	0x40(%rsp), %rdi
    00002912: 	je	.Ltmp3923 # Offset: 10514
    00002914: 	movq	0x200(%rsp), %rax
    0000291c: 	leaq	0x1(%rax), %rsi
    00002920: 	callq	_ZdlPvm@PLT # Offset: 10528
.Ltmp3923:
    00002925: 	leaq	DATAat0x3d4ac(%rip), %rdx
    0000292c: 	movq	%r13, %rsi
    0000292f: 	movq	%r12, %rdi
    00002932: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10546
    00002937: 	callq	clock@PLT # Offset: 10551
    0000293c: 	movq	%rax, start_time(%rip)
    00002943: 	movl	iterations(%rip), %eax
    00002949: 	testl	%eax, %eax
    0000294b: 	jle	.Ltmp3924 # Offset: 10571
    00002951: 	fldt	0x1f920(%rsp)
    00002958: 	fld	%st(0)
    0000295a: 	fstpt	(%rsp)
    0000295d: 	fld	%st(0)
    0000295f: 	fsub	%st(1), %st
    00002961: 	fstpl	0x20(%rsp)
    00002965: 	fabs
    00002967: 	fldl	DATAat0x3d6e0(%rip)
    0000296d: 	fxch	%st(1)
    0000296f: 	fcompi	%st(1), %st
    00002971: 	fstp	%st(0)
    00002973: 	ja	.Ltmp3925 # Offset: 10611
    00002979: 	movsd	0x20(%rsp), %xmm4
    0000297f: 	xorl	%ebx, %ebx
    00002981: 	andpd	DATAat0x3d710(%rip), %xmm4
    00002989: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002990: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    00002998: 	movsd	%xmm4, 0x10(%rsp)
    0000299e: 	movsd	%xmm5, 0x20(%rsp)
    000029a4: 	jmp	.Ltmp3926 # Offset: 10660
    000029a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3927:
    000029b0: 	addl	$0x1, %ebx
    000029b3: 	cmpl	%eax, %ebx
    000029b5: 	jge	.Ltmp3924 # Offset: 10677
.Ltmp3926:
    000029b7: 	fldt	(%rsp)
    000029ba: 	movsd	0x20(%rsp), %xmm3
    000029c0: 	comisd	0x10(%rsp), %xmm3
    000029c6: 	fstpt	0x120(%rsp)
    000029cd: 	ja	.Ltmp3927 # Offset: 10701
    000029cf: 	movq	0x1f0(%rsp), %rdx
    000029d7: 	movq	%rbp, %rsi
    000029da: 	movl	$0x1, %edi
    000029df: 	xorl	%eax, %eax
    000029e1: 	callq	__printf_chk@PLT # Offset: 10721
    000029e6: 	movl	iterations(%rip), %eax
    000029ec: 	addl	$0x1, %ebx
    000029ef: 	cmpl	%eax, %ebx
    000029f1: 	jl	.Ltmp3926 # Offset: 10737
    000029f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3924:
    000029f8: 	movq	%r12, %rsi
    000029fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a02: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10754
    00002a07: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a0e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002a15: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a1c: 	je	.Ltmp3928 # Offset: 10780
.Ltmp3982:
    00002a22: 	movq	-0x20(%rax), %rbp
    00002a26: 	callq	clock@PLT # Offset: 10790
    00002a2b: 	pxor	%xmm0, %xmm0
    00002a2f: 	movq	%rax, end_time(%rip)
    00002a36: 	movq	%rbp, %rdi
    00002a39: 	subq	start_time(%rip), %rax
    00002a40: 	cvtsi2sd	%rax, %xmm0
    00002a45: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002a4d: 	callq	_Z13record_resultdPKc # Offset: 10829
    00002a52: 	movq	0x1f0(%rsp), %rdi
    00002a5a: 	cmpq	0x40(%rsp), %rdi
    00002a5f: 	je	.Ltmp3929 # Offset: 10847
    00002a61: 	movq	0x200(%rsp), %rax
    00002a69: 	leaq	0x1(%rax), %rsi
    00002a6d: 	callq	_ZdlPvm@PLT # Offset: 10861
.Ltmp3929:
    00002a72: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002a79: 	movq	%r13, %rsi
    00002a7c: 	movq	%r12, %rdi
    00002a7f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10879
    00002a84: 	callq	clock@PLT # Offset: 10884
    00002a89: 	movq	%rax, start_time(%rip)
    00002a90: 	movl	iterations(%rip), %eax
    00002a96: 	testl	%eax, %eax
    00002a98: 	jle	.Ltmp3930 # Offset: 10904
    00002a9e: 	fldt	0x1f920(%rsp)
    00002aa5: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00002aad: 	xorl	%ebx, %ebx
    00002aaf: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002ab6: 	movq	DATAat0x3d710(%rip), %xmm1
    00002abe: 	movsd	DATAat0x3d6e8(%rip), %xmm2
    00002ac6: 	movsd	%xmm7, (%rsp)
    00002acb: 	fld	%st(0)
    00002acd: 	movaps	%xmm1, 0x10(%rsp)
    00002ad2: 	fld	%st(0)
    00002ad4: 	fstpt	0x30(%rsp)
    00002ad8: 	movsd	%xmm2, 0x20(%rsp)
    00002ade: 	fld	%st(0)
    00002ae0: 	fsubp	%st, %st(1)
    00002ae2: 	fstpl	0x28(%rsp)
    00002ae6: 	fabs
    00002ae8: 	fstpt	0x50(%rsp)
    00002aec: 	jmp	.Ltmp3931 # Offset: 10988
    00002aee: 	nop # Size: 2
.Ltmp3934:
    00002af0: 	addl	$0x1, %ebx
    00002af3: 	cmpl	%eax, %ebx
    00002af5: 	jge	.Ltmp3930 # Offset: 10997
.Ltmp3931:
    00002af7: 	fldt	0x30(%rsp)
    00002afb: 	movsd	0x28(%rsp), %xmm0
    00002b01: 	fld	%st(0)
    00002b03: 	fstpt	0x120(%rsp)
    00002b0a: 	fldl	(%rsp)
    00002b0d: 	fldt	0x50(%rsp)
    00002b11: 	fcompi	%st(1), %st
    00002b13: 	fstp	%st(0)
    00002b15: 	jbe	.Ltmp3932 # Offset: 11029
    00002b17: 	fdivrl	0x28(%rsp)
    00002b1b: 	fstpl	0x60(%rsp)
    00002b1f: 	movsd	0x60(%rsp), %xmm0
    00002b25: 	jmp	.Ltmp3933 # Offset: 11045
    00002b27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp3932:
    00002b30: 	fstp	%st(0)
.Ltmp3933:
    00002b32: 	andpd	0x10(%rsp), %xmm0
    00002b38: 	movsd	0x20(%rsp), %xmm6
    00002b3e: 	comisd	%xmm0, %xmm6
    00002b42: 	ja	.Ltmp3934 # Offset: 11074
    00002b44: 	movq	0x1f0(%rsp), %rdx
    00002b4c: 	movq	%rbp, %rsi
    00002b4f: 	movl	$0x1, %edi
    00002b54: 	xorl	%eax, %eax
    00002b56: 	callq	__printf_chk@PLT # Offset: 11094
    00002b5b: 	movl	iterations(%rip), %eax
    00002b61: 	addl	$0x1, %ebx
    00002b64: 	cmpl	%eax, %ebx
    00002b66: 	jl	.Ltmp3931 # Offset: 11110
.Ltmp3930:
    00002b68: 	movq	%r12, %rsi
    00002b6b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b72: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11122
    00002b77: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b7e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002b85: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b8c: 	je	.Ltmp3935 # Offset: 11148
.Ltmp3981:
    00002b92: 	movq	-0x20(%rax), %rbp
    00002b96: 	callq	clock@PLT # Offset: 11158
    00002b9b: 	pxor	%xmm0, %xmm0
    00002b9f: 	movq	%rax, end_time(%rip)
    00002ba6: 	movq	%rbp, %rdi
    00002ba9: 	subq	start_time(%rip), %rax
    00002bb0: 	cvtsi2sd	%rax, %xmm0
    00002bb5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002bbd: 	callq	_Z13record_resultdPKc # Offset: 11197
    00002bc2: 	movq	0x1f0(%rsp), %rdi
    00002bca: 	cmpq	0x40(%rsp), %rdi
    00002bcf: 	je	.Ltmp3936 # Offset: 11215
    00002bd1: 	movq	0x200(%rsp), %rax
    00002bd9: 	leaq	0x1(%rax), %rsi
    00002bdd: 	callq	_ZdlPvm@PLT # Offset: 11229
.Ltmp3936:
    00002be2: 	leaq	0x1d0(%rsp), %rdi
    00002bea: 	leaq	DATAat0x3d4d0(%rip), %rdx
    00002bf1: 	movq	%r13, %rsi
    00002bf4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11252
    00002bf9: 	movl	iterations(%rip), %edx
    00002bff: 	xorl	%r8d, %r8d
    00002c02: 	xorl	%ecx, %ecx
    00002c04: 	movl	$0x1f40, %esi
    00002c09: 	movq	0x1d0(%rsp), %rdi
    00002c11: 	callq	_Z9summarizePKciiii # Offset: 11281
    00002c16: 	movsd	DATAat0x3d708(%rip), %xmm0
    00002c1e: 	leaq	DATAat0x3d4e7(%rip), %rdx
    00002c25: 	movq	%r13, %rsi
    00002c28: 	movq	%r12, %rdi
    00002c2b: 	addsd	init_value(%rip), %xmm0
    00002c33: 	movq	%xmm0, %rbx
    00002c38: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11320
    00002c3d: 	movq	%rbx, %xmm7
    00002c42: 	leaq	_Z10test_powerIeET_S0_(%rip), %r14
    00002c49: 	movq	%r12, %rdx
    00002c4c: 	cvttsd2si	%xmm7, %ebp
    00002c50: 	movq	%r14, %rsi
    00002c53: 	movl	%ebp, %edi
    00002c55: 	callq	"_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11349
    00002c5a: 	movq	0x1f0(%rsp), %rdi
    00002c62: 	cmpq	0x40(%rsp), %rdi
    00002c67: 	je	.Ltmp3937 # Offset: 11367
    00002c69: 	movq	0x200(%rsp), %rax
    00002c71: 	leaq	0x1(%rax), %rsi
    00002c75: 	callq	_ZdlPvm@PLT # Offset: 11381
.Ltmp3937:
    00002c7a: 	leaq	DATAat0x3d501(%rip), %rdx
    00002c81: 	movq	%r13, %rsi
    00002c84: 	movq	%r12, %rdi
    00002c87: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11399
    00002c8c: 	movq	%r12, %rcx
    00002c8f: 	movq	%r14, %rdx
    00002c92: 	movl	%ebp, %esi
    00002c94: 	movl	$0x1f40, %edi
    00002c99: 	callq	"_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11417
    00002c9e: 	movq	0x1f0(%rsp), %rdi
    00002ca6: 	cmpq	0x40(%rsp), %rdi
    00002cab: 	je	.Ltmp3938 # Offset: 11435
    00002cad: 	movq	0x200(%rsp), %rax
    00002cb5: 	leaq	0x1(%rax), %rsi
    00002cb9: 	callq	_ZdlPvm@PLT # Offset: 11449
.Ltmp3938:
    00002cbe: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002cc5: 	movq	%r13, %rsi
    00002cc8: 	movq	%r12, %rdi
    00002ccb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11467
    00002cd0: 	movq	%r12, %rcx
    00002cd3: 	movq	%r14, %rdx
    00002cd6: 	movl	%ebp, %esi
    00002cd8: 	movl	$0x1f40, %edi
    00002cdd: 	callq	"_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11485
    00002ce2: 	movq	0x1f0(%rsp), %rdi
    00002cea: 	cmpq	0x40(%rsp), %rdi
    00002cef: 	je	.Ltmp3939 # Offset: 11503
    00002cf1: 	movq	0x200(%rsp), %rax
    00002cf9: 	leaq	0x1(%rax), %rsi
    00002cfd: 	callq	_ZdlPvm@PLT # Offset: 11517
.Ltmp3939:
    00002d02: 	leaq	DATAat0x3d535(%rip), %rdx
    00002d09: 	movq	%r13, %rsi
    00002d0c: 	movq	%r12, %rdi
    00002d0f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11535
    00002d14: 	leaq	_Z8test_cosIeET_S0_(%rip), %r14
    00002d1b: 	movq	%r12, %rdx
    00002d1e: 	movl	%ebp, %edi
    00002d20: 	movq	%r14, %rsi
    00002d23: 	callq	"_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11555
    00002d28: 	movq	0x1f0(%rsp), %rdi
    00002d30: 	cmpq	0x40(%rsp), %rdi
    00002d35: 	je	.Ltmp3940 # Offset: 11573
    00002d37: 	movq	0x200(%rsp), %rax
    00002d3f: 	leaq	0x1(%rax), %rsi
    00002d43: 	callq	_ZdlPvm@PLT # Offset: 11587
.Ltmp3940:
    00002d48: 	leaq	DATAat0x3d640(%rip), %rdx
    00002d4f: 	movq	%r13, %rsi
    00002d52: 	movq	%r12, %rdi
    00002d55: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11605
    00002d5a: 	movq	%r12, %rcx
    00002d5d: 	movq	%r14, %rdx
    00002d60: 	movl	%ebp, %esi
    00002d62: 	movl	$0x1f40, %edi
    00002d67: 	callq	"_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11623
    00002d6c: 	movq	0x1f0(%rsp), %rdi
    00002d74: 	cmpq	0x40(%rsp), %rdi
    00002d79: 	je	.Ltmp3941 # Offset: 11641
    00002d7b: 	movq	0x200(%rsp), %rax
    00002d83: 	leaq	0x1(%rax), %rsi
    00002d87: 	callq	_ZdlPvm@PLT # Offset: 11655
.Ltmp3941:
    00002d8c: 	leaq	DATAat0x3d550(%rip), %rdx
    00002d93: 	movq	%r13, %rsi
    00002d96: 	movq	%r12, %rdi
    00002d99: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11673
    00002d9e: 	movq	%r12, %rcx
    00002da1: 	movq	%r14, %rdx
    00002da4: 	movl	%ebp, %esi
    00002da6: 	movl	$0x1f40, %edi
    00002dab: 	callq	"_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11691
    00002db0: 	movq	0x1f0(%rsp), %rdi
    00002db8: 	cmpq	0x40(%rsp), %rdi
    00002dbd: 	je	.Ltmp3942 # Offset: 11709
    00002dbf: 	movq	0x200(%rsp), %rax
    00002dc7: 	leaq	0x1(%rax), %rsi
    00002dcb: 	callq	_ZdlPvm@PLT # Offset: 11723
.Ltmp3942:
    00002dd0: 	leaq	DATAat0x3d567(%rip), %rdx
    00002dd7: 	movq	%r13, %rsi
    00002dda: 	movq	%r12, %rdi
    00002ddd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11741
    00002de2: 	leaq	_Z8test_sqrIeET_S0_(%rip), %r14
    00002de9: 	movq	%r12, %rdx
    00002dec: 	movl	%ebp, %edi
    00002dee: 	movq	%r14, %rsi
    00002df1: 	callq	"_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11761
    00002df6: 	movq	0x1f0(%rsp), %rdi
    00002dfe: 	cmpq	0x40(%rsp), %rdi
    00002e03: 	je	.Ltmp3943 # Offset: 11779
    00002e05: 	movq	0x200(%rsp), %rax
    00002e0d: 	leaq	0x1(%rax), %rsi
    00002e11: 	callq	_ZdlPvm@PLT # Offset: 11793
.Ltmp3943:
    00002e16: 	leaq	DATAat0x3d660(%rip), %rdx
    00002e1d: 	movq	%r13, %rsi
    00002e20: 	movq	%r12, %rdi
    00002e23: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11811
    00002e28: 	movq	%r12, %rcx
    00002e2b: 	movq	%r14, %rdx
    00002e2e: 	movl	%ebp, %esi
    00002e30: 	movl	$0x1f40, %edi
    00002e35: 	callq	"_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11829
    00002e3a: 	movq	0x1f0(%rsp), %rdi
    00002e42: 	cmpq	0x40(%rsp), %rdi
    00002e47: 	je	.Ltmp3944 # Offset: 11847
    00002e49: 	movq	0x200(%rsp), %rax
    00002e51: 	leaq	0x1(%rax), %rsi
    00002e55: 	callq	_ZdlPvm@PLT # Offset: 11861
.Ltmp3944:
    00002e5a: 	leaq	DATAat0x3d582(%rip), %rdx
    00002e61: 	movq	%r13, %rsi
    00002e64: 	movq	%r12, %rdi
    00002e67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11879
    00002e6c: 	movq	%r12, %rcx
    00002e6f: 	movq	%r14, %rdx
    00002e72: 	movl	%ebp, %esi
    00002e74: 	movl	$0x1f40, %edi
    00002e79: 	callq	"_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11897
    00002e7e: 	movq	0x1f0(%rsp), %rdi
    00002e86: 	cmpq	0x40(%rsp), %rdi
    00002e8b: 	je	.Ltmp3945 # Offset: 11915
    00002e8d: 	movq	0x200(%rsp), %rax
    00002e95: 	leaq	0x1(%rax), %rsi
    00002e99: 	callq	_ZdlPvm@PLT # Offset: 11929
.Ltmp3945:
    00002e9e: 	leaq	DATAat0x3d599(%rip), %rdx
    00002ea5: 	movq	%r13, %rsi
    00002ea8: 	movq	%r12, %rdi
    00002eab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11947
    00002eb0: 	leaq	_Z9test_hashIeET_S0_(%rip), %r14
    00002eb7: 	movq	%r12, %rdx
    00002eba: 	movl	%ebp, %edi
    00002ebc: 	movq	%r14, %rsi
    00002ebf: 	callq	"_Z23test_const_function_optIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11967
    00002ec4: 	movq	0x1f0(%rsp), %rdi
    00002ecc: 	cmpq	0x40(%rsp), %rdi
    00002ed1: 	je	.Ltmp3946 # Offset: 11985
    00002ed3: 	movq	0x200(%rsp), %rax
    00002edb: 	leaq	0x1(%rax), %rsi
    00002edf: 	callq	_ZdlPvm@PLT # Offset: 11999
.Ltmp3946:
    00002ee4: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002eeb: 	movq	%r13, %rsi
    00002eee: 	movq	%r12, %rdi
    00002ef1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12017
    00002ef6: 	movq	%r12, %rcx
    00002ef9: 	movq	%r14, %rdx
    00002efc: 	movl	%ebp, %esi
    00002efe: 	movl	$0x1f40, %edi
    00002f03: 	callq	"_Z27test_const_function_halfoptIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12035
    00002f08: 	movq	0x1f0(%rsp), %rdi
    00002f10: 	cmpq	0x40(%rsp), %rdi
    00002f15: 	je	.Ltmp3947 # Offset: 12053
    00002f17: 	movq	0x200(%rsp), %rax
    00002f1f: 	leaq	0x1(%rax), %rsi
    00002f23: 	callq	_ZdlPvm@PLT # Offset: 12067
.Ltmp3947:
    00002f28: 	leaq	DATAat0x3d5cf(%rip), %rdx
    00002f2f: 	movq	%r13, %rsi
    00002f32: 	movq	%r12, %rdi
    00002f35: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12085
    00002f3a: 	movq	%r12, %rcx
    00002f3d: 	movq	%r14, %rdx
    00002f40: 	movl	%ebp, %esi
    00002f42: 	movl	$0x1f40, %edi
    00002f47: 	callq	"_Z19test_const_functionIePFeeEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12103
    00002f4c: 	movq	0x1f0(%rsp), %rdi
    00002f54: 	cmpq	0x40(%rsp), %rdi
    00002f59: 	je	.Ltmp3948 # Offset: 12121
    00002f5b: 	movq	0x200(%rsp), %rax
    00002f63: 	leaq	0x1(%rax), %rsi
    00002f67: 	callq	_ZdlPvm@PLT # Offset: 12135
.Ltmp3948:
    00002f6c: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002f73: 	movq	%r13, %rsi
    00002f76: 	movq	%r12, %rdi
    00002f79: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12153
    00002f7e: 	movl	iterations(%rip), %edx
    00002f84: 	xorl	%r8d, %r8d
    00002f87: 	xorl	%ecx, %ecx
    00002f89: 	movl	$0x1f40, %esi
    00002f8e: 	movq	0x1f0(%rsp), %rdi
    00002f96: 	callq	_Z9summarizePKciiii # Offset: 12182
    00002f9b: 	movq	0x1f0(%rsp), %rdi
    00002fa3: 	cmpq	0x40(%rsp), %rdi
    00002fa8: 	je	.Ltmp3949 # Offset: 12200
    00002faa: 	movq	0x200(%rsp), %rax
    00002fb2: 	leaq	0x1(%rax), %rsi
    00002fb6: 	callq	_ZdlPvm@PLT # Offset: 12214
.Ltmp3949:
    00002fbb: 	movq	0x1d0(%rsp), %rdi
    00002fc3: 	leaq	0x1e0(%rsp), %rax
    00002fcb: 	cmpq	%rax, %rdi
    00002fce: 	je	.Ltmp3950 # Offset: 12238
    00002fd0: 	movq	0x1e0(%rsp), %rax
    00002fd8: 	leaq	0x1(%rax), %rsi
    00002fdc: 	callq	_ZdlPvm@PLT # Offset: 12252
.Ltmp3950:
    00002fe1: 	movq	0x1b0(%rsp), %rdi
    00002fe9: 	leaq	0x1c0(%rsp), %rax
    00002ff1: 	cmpq	%rax, %rdi
    00002ff4: 	je	.Ltmp3951 # Offset: 12276
    00002ff6: 	movq	0x1c0(%rsp), %rax
    00002ffe: 	leaq	0x1(%rax), %rsi
    00003002: 	callq	_ZdlPvm@PLT # Offset: 12290
.Ltmp3951:
    00003007: 	movq	0x190(%rsp), %rdi
    0000300f: 	cmpq	0xa0(%rsp), %rdi
    00003017: 	je	.Ltmp3952 # Offset: 12311
    00003019: 	movq	0x1a0(%rsp), %rax
    00003021: 	leaq	0x1(%rax), %rsi
    00003025: 	callq	_ZdlPvm@PLT # Offset: 12325
.Ltmp3952:
    0000302a: 	movq	0x1f938(%rsp), %rax
    00003032: 	subq	%fs:0x28, %rax
    0000303b: 	jne	.Ltmp3953 # Offset: 12347
    00003041: 	addq	$0x1f948, %rsp
    00003048: 	popq	%rbx
    00003049: 	popq	%rbp
    0000304a: 	popq	%r12
    0000304c: 	popq	%r13
    0000304e: 	popq	%r14
    00003050: 	popq	%r15
    00003052: 	retq # Offset: 12370
    00003053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3871:
    00003058: 	movq	0x1f0(%rsp), %rdx
    00003060: 	movq	%r15, %rsi
    00003063: 	movl	$0x1, %edi
    00003068: 	xorl	%eax, %eax
    0000306a: 	callq	__printf_chk@PLT # Offset: 12394
    0000306f: 	movl	iterations(%rip), %edx
    00003075: 	jmp	.Ltmp3954 # Offset: 12405
    0000307a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3863:
    00003080: 	movq	0x1f0(%rsp), %rdx
    00003088: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000308f: 	movl	$0x1, %edi
    00003094: 	xorl	%eax, %eax
    00003096: 	callq	__printf_chk@PLT # Offset: 12438
    0000309b: 	movl	iterations(%rip), %edx
    000030a1: 	jmp	.Ltmp3955 # Offset: 12449
    000030a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3855:
    000030b0: 	movq	0x1f0(%rsp), %rdx
    000030b8: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000030bf: 	movl	$0x1, %edi
    000030c4: 	xorl	%eax, %eax
    000030c6: 	callq	__printf_chk@PLT # Offset: 12486
    000030cb: 	movl	iterations(%rip), %edx
    000030d1: 	jmp	.Ltmp3956 # Offset: 12497
    000030d6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp3846:
    000030e0: 	movl	current_test(%rip), %edx
    000030e6: 	movq	%r15, %rsi
    000030e9: 	movl	$0x1, %edi
    000030ee: 	xorl	%eax, %eax
    000030f0: 	callq	__printf_chk@PLT # Offset: 12528
    000030f5: 	movl	iterations(%rip), %edx
    000030fb: 	jmp	.Ltmp3957 # Offset: 12539
.Ltmp3838:
    00003100: 	movl	current_test(%rip), %edx
    00003106: 	movq	%r15, %rsi
    00003109: 	movl	$0x1, %edi
    0000310e: 	xorl	%eax, %eax
    00003110: 	callq	__printf_chk@PLT # Offset: 12560
    00003115: 	movl	iterations(%rip), %edx
    0000311b: 	jmp	.Ltmp3958 # Offset: 12571
.Ltmp3830:
    00003120: 	movl	current_test(%rip), %edx
    00003126: 	movq	%r15, %rsi
    00003129: 	movl	$0x1, %edi
    0000312e: 	xorl	%eax, %eax
    00003130: 	callq	__printf_chk@PLT # Offset: 12592
    00003135: 	movl	iterations(%rip), %edx
    0000313b: 	jmp	.Ltmp3959 # Offset: 12603
.Ltmp3822:
    00003140: 	movl	current_test(%rip), %edx
    00003146: 	movq	%r15, %rsi
    00003149: 	movl	$0x1, %edi
    0000314e: 	xorl	%eax, %eax
    00003150: 	callq	__printf_chk@PLT # Offset: 12624
    00003155: 	movl	iterations(%rip), %edx
    0000315b: 	jmp	.Ltmp3960 # Offset: 12635
.Ltmp3814:
    00003160: 	movl	current_test(%rip), %edx
    00003166: 	movq	%r15, %rsi
    00003169: 	movl	$0x1, %edi
    0000316e: 	xorl	%eax, %eax
    00003170: 	callq	__printf_chk@PLT # Offset: 12656
    00003175: 	movl	iterations(%rip), %edx
    0000317b: 	jmp	.Ltmp3961 # Offset: 12667
.Ltmp3806:
    00003180: 	movl	current_test(%rip), %edx
    00003186: 	movq	%r15, %rsi
    00003189: 	movl	$0x1, %edi
    0000318e: 	xorl	%eax, %eax
    00003190: 	callq	__printf_chk@PLT # Offset: 12688
    00003195: 	movl	iterations(%rip), %edx
    0000319b: 	jmp	.Ltmp3962 # Offset: 12699
.Ltmp3798:
    000031a0: 	movl	current_test(%rip), %edx
    000031a6: 	movq	%r15, %rsi
    000031a9: 	movl	$0x1, %edi
    000031ae: 	xorl	%eax, %eax
    000031b0: 	callq	__printf_chk@PLT # Offset: 12720
    000031b5: 	movl	iterations(%rip), %edx
    000031bb: 	jmp	.Ltmp3963 # Offset: 12731
.Ltmp3790:
    000031c0: 	movl	current_test(%rip), %edx
    000031c6: 	movq	%r15, %rsi
    000031c9: 	movl	$0x1, %edi
    000031ce: 	xorl	%eax, %eax
    000031d0: 	callq	__printf_chk@PLT # Offset: 12752
    000031d5: 	movl	iterations(%rip), %edx
    000031db: 	jmp	.Ltmp3964 # Offset: 12763
.Ltmp3782:
    000031e0: 	movl	current_test(%rip), %edx
    000031e6: 	movq	%r15, %rsi
    000031e9: 	movl	$0x1, %edi
    000031ee: 	xorl	%eax, %eax
    000031f0: 	callq	__printf_chk@PLT # Offset: 12784
    000031f5: 	movl	iterations(%rip), %edx
    000031fb: 	jmp	.Ltmp3965 # Offset: 12795
.Ltmp3774:
    00003200: 	movl	current_test(%rip), %edx
    00003206: 	movq	%r15, %rsi
    00003209: 	movl	$0x1, %edi
    0000320e: 	xorl	%eax, %eax
    00003210: 	callq	__printf_chk@PLT # Offset: 12816
    00003215: 	movl	iterations(%rip), %edx
    0000321b: 	jmp	.Ltmp3966 # Offset: 12827
.Ltmp3766:
    00003220: 	movl	current_test(%rip), %edx
    00003226: 	movq	%r15, %rsi
    00003229: 	movl	$0x1, %edi
    0000322e: 	xorl	%eax, %eax
    00003230: 	callq	__printf_chk@PLT # Offset: 12848
    00003235: 	movl	iterations(%rip), %edx
    0000323b: 	jmp	.Ltmp3967 # Offset: 12859
.Ltmp3758:
    00003240: 	movl	current_test(%rip), %edx
    00003246: 	movq	%r15, %rsi
    00003249: 	movl	$0x1, %edi
    0000324e: 	xorl	%eax, %eax
    00003250: 	callq	__printf_chk@PLT # Offset: 12880
    00003255: 	movl	iterations(%rip), %edx
    0000325b: 	jmp	.Ltmp3968 # Offset: 12891
.Ltmp3750:
    00003260: 	movl	current_test(%rip), %edx
    00003266: 	movq	%r15, %rsi
    00003269: 	movl	$0x1, %edi
    0000326e: 	xorl	%eax, %eax
    00003270: 	callq	__printf_chk@PLT # Offset: 12912
    00003275: 	movl	iterations(%rip), %edx
    0000327b: 	jmp	.Ltmp3969 # Offset: 12923
.Ltmp3742:
    00003280: 	movl	current_test(%rip), %edx
    00003286: 	movq	%r15, %rsi
    00003289: 	movl	$0x1, %edi
    0000328e: 	xorl	%eax, %eax
    00003290: 	callq	__printf_chk@PLT # Offset: 12944
    00003295: 	movl	iterations(%rip), %edx
    0000329b: 	jmp	.Ltmp3970 # Offset: 12955
.Ltmp3734:
    000032a0: 	movl	current_test(%rip), %edx
    000032a6: 	movq	%r15, %rsi
    000032a9: 	movl	$0x1, %edi
    000032ae: 	xorl	%eax, %eax
    000032b0: 	callq	__printf_chk@PLT # Offset: 12976
    000032b5: 	movl	iterations(%rip), %edx
    000032bb: 	jmp	.Ltmp3971 # Offset: 12987
.Ltmp3726:
    000032c0: 	movl	current_test(%rip), %edx
    000032c6: 	movq	%r14, %rsi
    000032c9: 	movl	$0x1, %edi
    000032ce: 	xorl	%eax, %eax
    000032d0: 	callq	__printf_chk@PLT # Offset: 13008
    000032d5: 	movl	iterations(%rip), %edx
    000032db: 	jmp	.Ltmp3972 # Offset: 13019
.Ltmp3876:
    000032e0: 	leaq	0xb8(%rsp), %rsi
    000032e8: 	xorl	%edx, %edx
    000032ea: 	movq	%r15, %rdi
    000032ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13037
    000032f2: 	movq	%rax, (%r15)
    000032f5: 	movq	%rax, %rdi
    000032f8: 	movq	0xb8(%rsp), %rax
    00003300: 	movq	%rax, 0x10(%r15)
.Ltmp4009:
    00003304: 	movq	0x20(%rsp), %rsi
    00003309: 	movq	%r14, %rdx
    0000330c: 	callq	memcpy@PLT # Offset: 13068
    00003311: 	movq	0xb8(%rsp), %r14
    00003319: 	movq	(%r15), %rdi
    0000331c: 	jmp	.Ltmp3973 # Offset: 13084
    00003321: 	nopl	(%rax) # Size: 7
.Ltmp3902:
    00003328: 	movq	0x1f0(%rsp), %rdx
    00003330: 	movq	%rbp, %rsi
    00003333: 	movl	$0x1, %edi
    00003338: 	xorl	%eax, %eax
    0000333a: 	callq	__printf_chk@PLT # Offset: 13114
    0000333f: 	movl	iterations(%rip), %edx
    00003345: 	jmp	.Ltmp3974 # Offset: 13125
    0000334a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3893:
    00003350: 	movq	0x1f0(%rsp), %rdx
    00003358: 	movq	%rbp, %rsi
    0000335b: 	movl	$0x1, %edi
    00003360: 	xorl	%eax, %eax
    00003362: 	callq	__printf_chk@PLT # Offset: 13154
    00003367: 	movl	iterations(%rip), %edx
    0000336d: 	jmp	.Ltmp3975 # Offset: 13165
    00003372: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3884:
    00003378: 	movq	0x1f0(%rsp), %rdx
    00003380: 	movq	%r15, %rsi
    00003383: 	movl	$0x1, %edi
    00003388: 	xorl	%eax, %eax
    0000338a: 	callq	__printf_chk@PLT # Offset: 13194
    0000338f: 	movl	iterations(%rip), %edx
    00003395: 	jmp	.Ltmp3976 # Offset: 13205
.Ltmp3925:
    0000339a: 	fldt	(%rsp)
    0000339d: 	xorl	%ebx, %ebx
    0000339f: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    000033a7: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000033ae: 	fdivrl	0x20(%rsp)
    000033b2: 	fstpl	0x20(%rsp)
    000033b6: 	movsd	0x20(%rsp), %xmm0
    000033bc: 	andpd	DATAat0x3d710(%rip), %xmm0
    000033c4: 	movsd	%xmm6, 0x20(%rsp)
    000033ca: 	movsd	%xmm0, 0x10(%rsp)
    000033d0: 	jmp	.Ltmp3977 # Offset: 13264
    000033d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3978:
    000033d8: 	addl	$0x1, %ebx
    000033db: 	cmpl	%eax, %ebx
    000033dd: 	jge	.Ltmp3924 # Offset: 13277
.Ltmp3977:
    000033e3: 	fldt	(%rsp)
    000033e6: 	movsd	0x20(%rsp), %xmm5
    000033ec: 	comisd	0x10(%rsp), %xmm5
    000033f2: 	fstpt	0x120(%rsp)
    000033f9: 	ja	.Ltmp3978 # Offset: 13305
    000033fb: 	movq	0x1f0(%rsp), %rdx
    00003403: 	movq	%rbp, %rsi
    00003406: 	movl	$0x1, %edi
    0000340b: 	xorl	%eax, %eax
    0000340d: 	callq	__printf_chk@PLT # Offset: 13325
    00003412: 	movl	iterations(%rip), %eax
    00003418: 	jmp	.Ltmp3978 # Offset: 13336
.Ltmp3907:
    0000341a: 	fldt	(%rsp)
    0000341d: 	xorl	%ebx, %ebx
    0000341f: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00003427: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000342e: 	fdivrl	0x20(%rsp)
    00003432: 	fstpl	0x20(%rsp)
    00003436: 	movsd	0x20(%rsp), %xmm0
    0000343c: 	andpd	DATAat0x3d710(%rip), %xmm0
    00003444: 	movsd	%xmm6, 0x20(%rsp)
    0000344a: 	movsd	%xmm0, 0x10(%rsp)
    00003450: 	jmp	.Ltmp3979 # Offset: 13392
    00003452: 	nopw	(%rax,%rax) # Size: 6
.Ltmp3980:
    00003458: 	addl	$0x1, %ebx
    0000345b: 	cmpl	%eax, %ebx
    0000345d: 	jge	.Ltmp3906 # Offset: 13405
.Ltmp3979:
    00003463: 	fldt	(%rsp)
    00003466: 	movsd	0x20(%rsp), %xmm7
    0000346c: 	comisd	0x10(%rsp), %xmm7
    00003472: 	fstpt	(%rbp)
    00003475: 	ja	.Ltmp3980 # Offset: 13429
    00003477: 	movq	0x1f0(%rsp), %rdx
    0000347f: 	movq	%r14, %rsi
    00003482: 	movl	$0x1, %edi
    00003487: 	xorl	%eax, %eax
    00003489: 	callq	__printf_chk@PLT # Offset: 13449
    0000348e: 	movl	iterations(%rip), %eax
    00003494: 	jmp	.Ltmp3980 # Offset: 13460
.Ltmp3935:
    00003496: 	movq	-0x8(%rdx), %rax
    0000349a: 	addq	$0x200, %rax
    000034a0: 	jmp	.Ltmp3981 # Offset: 13472
.Ltmp3928:
    000034a5: 	movq	-0x8(%rdx), %rax
    000034a9: 	addq	$0x200, %rax
    000034af: 	jmp	.Ltmp3982 # Offset: 13487
.Ltmp3922:
    000034b4: 	movq	-0x8(%rdx), %rax
    000034b8: 	addq	$0x200, %rax
    000034be: 	jmp	.Ltmp3983 # Offset: 13502
.Ltmp3886:
    000034c3: 	movq	-0x8(%rdx), %rax
    000034c7: 	addq	$0x200, %rax
    000034cd: 	jmp	.Ltmp3984 # Offset: 13517
.Ltmp3878:
    000034d2: 	movq	-0x8(%rdx), %rax
    000034d6: 	addq	$0x200, %rax
    000034dc: 	jmp	.Ltmp3985 # Offset: 13532
.Ltmp3917:
    000034e1: 	movq	%r12, %rsi
    000034e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000034eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13547
    000034f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000034f7: 	jmp	.Ltmp3986 # Offset: 13559
.Ltmp3910:
    000034fc: 	movq	-0x8(%rdx), %rax
    00003500: 	addq	$0x200, %rax
    00003506: 	jmp	.Ltmp3987 # Offset: 13574
.Ltmp3904:
    0000350b: 	movq	-0x8(%rdx), %rax
    0000350f: 	addq	$0x200, %rax
    00003515: 	jmp	.Ltmp3988 # Offset: 13589
.Ltmp3895:
    0000351a: 	movq	-0x8(%rdx), %rax
    0000351e: 	addq	$0x200, %rax
    00003524: 	jmp	.Ltmp3989 # Offset: 13604
.Ltmp3873:
    00003529: 	movq	%r12, %rsi
    0000352c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003533: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13619
    00003538: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000353f: 	jmp	.Ltmp3990 # Offset: 13631
.Ltmp3865:
    00003544: 	movq	-0x8(%rdx), %rax
    00003548: 	addq	$0x200, %rax
    0000354e: 	jmp	.Ltmp3991 # Offset: 13646
.Ltmp3857:
    00003553: 	movq	-0x8(%rdx), %rax
    00003557: 	addq	$0x200, %rax
    0000355d: 	jmp	.Ltmp3992 # Offset: 13661
.Ltmp3848:
    00003562: 	movq	-0x8(%rdx), %rax
    00003566: 	addq	$0x200, %rax
    0000356c: 	jmp	.Ltmp3993 # Offset: 13676
.Ltmp3840:
    00003571: 	movq	-0x8(%rdx), %rax
    00003575: 	addq	$0x200, %rax
    0000357b: 	jmp	.Ltmp3994 # Offset: 13691
.Ltmp3832:
    00003580: 	movq	-0x8(%rdx), %rax
    00003584: 	addq	$0x200, %rax
    0000358a: 	jmp	.Ltmp3995 # Offset: 13706
.Ltmp3824:
    0000358f: 	movq	-0x8(%rdx), %rax
    00003593: 	addq	$0x200, %rax
    00003599: 	jmp	.Ltmp3996 # Offset: 13721
.Ltmp3816:
    0000359e: 	movq	-0x8(%rdx), %rax
    000035a2: 	addq	$0x200, %rax
    000035a8: 	jmp	.Ltmp3997 # Offset: 13736
.Ltmp3808:
    000035ad: 	movq	-0x8(%rdx), %rax
    000035b1: 	addq	$0x200, %rax
    000035b7: 	jmp	.Ltmp3998 # Offset: 13751
.Ltmp3800:
    000035bc: 	movq	-0x8(%rdx), %rax
    000035c0: 	addq	$0x200, %rax
    000035c6: 	jmp	.Ltmp3999 # Offset: 13766
.Ltmp3792:
    000035cb: 	movq	-0x8(%rdx), %rax
    000035cf: 	addq	$0x200, %rax
    000035d5: 	jmp	.Ltmp4000 # Offset: 13781
.Ltmp3784:
    000035da: 	movq	-0x8(%rdx), %rax
    000035de: 	addq	$0x200, %rax
    000035e4: 	jmp	.Ltmp4001 # Offset: 13796
.Ltmp3776:
    000035e9: 	movq	-0x8(%rdx), %rax
    000035ed: 	addq	$0x200, %rax
    000035f3: 	jmp	.Ltmp4002 # Offset: 13811
.Ltmp3768:
    000035f8: 	movq	-0x8(%rdx), %rax
    000035fc: 	addq	$0x200, %rax
    00003602: 	jmp	.Ltmp4003 # Offset: 13826
.Ltmp3760:
    00003607: 	movq	-0x8(%rdx), %rax
    0000360b: 	addq	$0x200, %rax
    00003611: 	jmp	.Ltmp4004 # Offset: 13841
.Ltmp3752:
    00003616: 	movq	-0x8(%rdx), %rax
    0000361a: 	addq	$0x200, %rax
    00003620: 	jmp	.Ltmp4005 # Offset: 13856
.Ltmp3744:
    00003625: 	movq	-0x8(%rdx), %rax
    00003629: 	addq	$0x200, %rax
    0000362f: 	jmp	.Ltmp4006 # Offset: 13871
.Ltmp3736:
    00003634: 	movq	-0x8(%rdx), %rax
    00003638: 	addq	$0x200, %rax
    0000363e: 	jmp	.Ltmp4007 # Offset: 13886
.Ltmp3728:
    00003643: 	movq	-0x8(%rdx), %rax
    00003647: 	addq	$0x200, %rax
    0000364d: 	jmp	.Ltmp4008 # Offset: 13901
.Ltmp3877:
    00003652: 	testq	%r14, %r14
    00003655: 	je	.Ltmp3973 # Offset: 13909
    0000365b: 	jmp	.Ltmp4009 # Offset: 13915
.Ltmp3921:
    00003660: 	testq	%r14, %r14
    00003663: 	je	.Ltmp4010 # Offset: 13923
    00003669: 	jmp	.Ltmp4011 # Offset: 13929
    0000366b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp3920:
    00003670: 	leaq	0xb8(%rsp), %rsi
    00003678: 	xorl	%edx, %edx
    0000367a: 	movq	%rbx, %rdi
    0000367d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 13949
    00003682: 	movq	%rax, (%rbx)
    00003685: 	movq	%rax, %rdi
    00003688: 	movq	0xb8(%rsp), %rax
    00003690: 	movq	%rax, 0x10(%rbx)
.Ltmp4011:
    00003694: 	movq	%r14, %rdx
    00003697: 	movq	%rbp, %rsi
    0000369a: 	callq	memcpy@PLT # Offset: 13978
    0000369f: 	movq	0xb8(%rsp), %r14
    000036a7: 	movq	(%rbx), %rdi
    000036aa: 	jmp	.Ltmp4010 # Offset: 13994
.Ltmp3875:
    000036af: 	leaq	DATAat0x3d158(%rip), %rdi
    000036b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14006
.Ltmp3919:
    000036bb: 	leaq	DATAat0x3d158(%rip), %rdi
    000036c2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14018
.Ltmp3953:
    000036c7: 	callq	__stack_chk_fail@PLT # Offset: 14023
    000036cc: 	endbr64
    000036d0: 	movq	%rax, %rbp
    000036d3: 	jmp	.Ltmp4012 # Offset: 14035
    000036d5: 	endbr64
.Ltmp4022:
    000036d9: 	movq	%rax, %rbp
    000036dc: 	jmp	.Ltmp4013 # Offset: 14044
.Ltmp4015:
    000036de: 	movq	0x210(%rsp), %rdi
    000036e6: 	cmpq	%r14, %rdi
    000036e9: 	je	.Ltmp4012 # Offset: 14057
.Ltmp4024:
    000036eb: 	movq	0x220(%rsp), %rax
    000036f3: 	leaq	0x1(%rax), %rsi
    000036f7: 	callq	_ZdlPvm@PLT # Offset: 14071
.Ltmp4012:
    000036fc: 	movq	0x190(%rsp), %rdi
    00003704: 	cmpq	0xa0(%rsp), %rdi
    0000370c: 	je	.Ltmp4014 # Offset: 14092
    0000370e: 	movq	0x1a0(%rsp), %rax
    00003716: 	leaq	0x1(%rax), %rsi
    0000371a: 	callq	_ZdlPvm@PLT # Offset: 14106
.Ltmp4014:
    0000371f: 	movq	%rbp, %rdi
    00003722: 	callq	_Unwind_Resume@PLT # Offset: 14114
    00003727: 	endbr64
.Ltmp4016:
    0000372b: 	movq	%rax, %rbp
    0000372e: 	jmp	.Ltmp4015 # Offset: 14126
    00003730: 	endbr64
    00003734: 	jmp	.Ltmp4016 # Offset: 14132
.Ltmp4013:
    00003736: 	movq	0x1f0(%rsp), %rdi
    0000373e: 	cmpq	0x40(%rsp), %rdi
    00003743: 	je	.Ltmp4017 # Offset: 14147
.Ltmp4019:
    00003745: 	movq	0x200(%rsp), %rax
    0000374d: 	leaq	0x1(%rax), %rsi
    00003751: 	callq	_ZdlPvm@PLT # Offset: 14161
.Ltmp4017:
    00003756: 	movq	0x1b0(%rsp), %rdi
    0000375e: 	leaq	0x1c0(%rsp), %rax
    00003766: 	cmpq	%rax, %rdi
    00003769: 	je	.Ltmp4012 # Offset: 14185
    0000376b: 	movq	0x1c0(%rsp), %rax
    00003773: 	leaq	0x1(%rax), %rsi
    00003777: 	callq	_ZdlPvm@PLT # Offset: 14199
    0000377c: 	jmp	.Ltmp4012 # Offset: 14204
    00003781: 	endbr64
    00003785: 	jmp	.Ltmp4016 # Offset: 14213
    00003787: 	endbr64
    0000378b: 	jmp	.Ltmp4016 # Offset: 14219
    0000378d: 	endbr64
    00003791: 	movq	%rax, %rbp
    00003794: 	jmp	.Ltmp4018 # Offset: 14228
    00003796: 	endbr64
    0000379a: 	movq	%rax, %rbp
    0000379d: 	jmp	.Ltmp4017 # Offset: 14237
.Ltmp4018:
    0000379f: 	movq	0x1f0(%rsp), %rdi
    000037a7: 	leaq	0x200(%rsp), %rax
    000037af: 	cmpq	%rax, %rdi
    000037b2: 	jne	.Ltmp4019 # Offset: 14258
    000037b4: 	jmp	.Ltmp4017 # Offset: 14260
    000037b6: 	endbr64
    000037ba: 	jmp	.Ltmp4016 # Offset: 14266
    000037bf: 	endbr64
    000037c3: 	jmp	.Ltmp4016 # Offset: 14275
    000037c8: 	endbr64
.Ltmp4021:
    000037cc: 	movq	%rax, %rbp
    000037cf: 	jmp	.Ltmp4020 # Offset: 14287
    000037d1: 	endbr64
    000037d5: 	jmp	.Ltmp4021 # Offset: 14293
    000037d7: 	endbr64
    000037db: 	jmp	.Ltmp4016 # Offset: 14299
    000037e0: 	endbr64
    000037e4: 	jmp	.Ltmp4022 # Offset: 14308
    000037e9: 	endbr64
    000037ed: 	jmp	.Ltmp4022 # Offset: 14317
    000037f2: 	endbr64
    000037f6: 	jmp	.Ltmp4021 # Offset: 14326
    000037f8: 	endbr64
    000037fc: 	jmp	.Ltmp4021 # Offset: 14332
    000037fe: 	endbr64
    00003802: 	jmp	.Ltmp4021 # Offset: 14338
    00003804: 	endbr64
    00003808: 	jmp	.Ltmp4021 # Offset: 14344
    0000380a: 	endbr64
    0000380e: 	jmp	.Ltmp4021 # Offset: 14350
    00003810: 	endbr64
    00003814: 	jmp	.Ltmp4021 # Offset: 14356
    00003816: 	endbr64
    0000381a: 	jmp	.Ltmp4021 # Offset: 14362
    0000381c: 	endbr64
    00003820: 	jmp	.Ltmp4021 # Offset: 14368
    00003822: 	endbr64
    00003826: 	movq	%rax, %rbp
    00003829: 	jmp	.Ltmp4023 # Offset: 14377
    0000382b: 	endbr64
    0000382f: 	jmp	.Ltmp4021 # Offset: 14383
.Ltmp4020:
    00003831: 	movq	0x1f0(%rsp), %rdi
    00003839: 	cmpq	0x40(%rsp), %rdi
    0000383e: 	je	.Ltmp4023 # Offset: 14398
    00003840: 	movq	0x200(%rsp), %rax
    00003848: 	leaq	0x1(%rax), %rsi
    0000384c: 	callq	_ZdlPvm@PLT # Offset: 14412
.Ltmp4023:
    00003851: 	movq	0x1d0(%rsp), %rdi
    00003859: 	leaq	0x1e0(%rsp), %rax
    00003861: 	cmpq	%rax, %rdi
    00003864: 	je	.Ltmp4017 # Offset: 14436
    0000386a: 	movq	0x1e0(%rsp), %rax
    00003872: 	leaq	0x1(%rax), %rsi
    00003876: 	callq	_ZdlPvm@PLT # Offset: 14454
    0000387b: 	jmp	.Ltmp4017 # Offset: 14459
    00003880: 	endbr64
    00003884: 	jmp	.Ltmp4021 # Offset: 14468
    00003889: 	endbr64
    0000388d: 	jmp	.Ltmp4022 # Offset: 14477
    00003892: 	endbr64
    00003896: 	jmp	.Ltmp4022 # Offset: 14486
    0000389b: 	endbr64
    0000389f: 	jmp	.Ltmp4021 # Offset: 14495
    000038a4: 	endbr64
    000038a8: 	jmp	.Ltmp4022 # Offset: 14504
    000038ad: 	endbr64
    000038b1: 	jmp	.Ltmp4022 # Offset: 14513
    000038b6: 	endbr64
    000038ba: 	jmp	.Ltmp4016 # Offset: 14522
    000038bf: 	endbr64
    000038c3: 	jmp	.Ltmp4016 # Offset: 14531
    000038c8: 	endbr64
    000038cc: 	jmp	.Ltmp4016 # Offset: 14540
    000038d1: 	endbr64
    000038d5: 	jmp	.Ltmp4016 # Offset: 14549
    000038da: 	endbr64
    000038de: 	jmp	.Ltmp4016 # Offset: 14558
    000038e3: 	endbr64
    000038e7: 	jmp	.Ltmp4016 # Offset: 14567
    000038ec: 	endbr64
    000038f0: 	jmp	.Ltmp4016 # Offset: 14576
    000038f5: 	endbr64
    000038f9: 	jmp	.Ltmp4016 # Offset: 14585
    000038fe: 	endbr64
    00003902: 	jmp	.Ltmp4022 # Offset: 14594
    00003907: 	endbr64
    0000390b: 	jmp	.Ltmp4022 # Offset: 14603
    00003910: 	endbr64
    00003914: 	jmp	.Ltmp4022 # Offset: 14612
    00003919: 	endbr64
    0000391d: 	jmp	.Ltmp4022 # Offset: 14621
    00003922: 	endbr64
    00003926: 	movq	%rax, %rbp
    00003929: 	movq	0x210(%rsp), %rdi
    00003931: 	leaq	0x220(%rsp), %rax
    00003939: 	cmpq	%rax, %rdi
    0000393c: 	jne	.Ltmp4024 # Offset: 14652
    00003942: 	jmp	.Ltmp4012 # Offset: 14658
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIeEvd"

Binary Function "_Z9TestLoopsIdEvd" after disassembly {
  Number      : 154
  State       : disassembled
  Address     : 0x2bf70
  Size        : 0x3a2e
  MaxSize     : 0x3a30
  Offset      : 0x2bf70
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIdEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0153:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp4025:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp4025 # Offset: 37
    00000027: 	subq	$0xd58, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movsd	%xmm0, 0x78(%rsp)
    0000004b: 	leaq	0x340(%rsp), %rbp
    00000053: 	leaq	0xfd40(%rsp), %rbx
    0000005b: 	movq	%fs:0x28, %rax
    00000064: 	movq	%rax, 0xfd48(%rsp)
    0000006c: 	xorl	%eax, %eax
    0000006e: 	leaq	0x140(%rsp), %rax
    00000076: 	movl	$0x62756f64, 0x140(%rsp)
    00000081: 	movq	%rax, 0xa8(%rsp)
    00000089: 	movq	%rax, 0x130(%rsp)
    00000091: 	movl	$0x656c, %eax
    00000096: 	movw	%ax, 0x144(%rsp)
    0000009e: 	leaq	0xc0(%rsp), %rax
    000000a6: 	movq	%rax, %rsi
    000000a9: 	movq	%rax, 0xa0(%rsp)
    000000b1: 	movq	$0x6, 0x138(%rsp)
    000000bd: 	movb	$0x0, 0x146(%rsp)
    000000c5: 	movaps	%xmm6, 0xc0(%rsp)
    000000cd: 	movaps	%xmm7, 0xd0(%rsp)
    000000d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 213
    000000da: 	movsd	init_value(%rip), %xmm0
    000000e2: 	movq	%rbp, %rax
    000000e5: 	unpcklpd	%xmm0, %xmm0
    000000e9: 	nopl	(%rax) # Size: 7
.Ltmp4026:
    000000f0: 	movaps	%xmm0, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rbx, %rax
    000000fa: 	jne	.Ltmp4026 # Offset: 250
    000000fc: 	movsd	0x78(%rsp), %xmm4
    00000102: 	movsd	DATAat0x3d708(%rip), %xmm7
    0000010a: 	leaq	0x1b0(%rsp), %r15
    00000112: 	leaq	0x130(%rsp), %r12
    0000011a: 	leaq	DATAat0x3d273(%rip), %rdx
    00000121: 	movq	%r12, %rsi
    00000124: 	movq	%r15, %rdi
    00000127: 	movapd	%xmm4, %xmm6
    0000012b: 	addsd	%xmm4, %xmm7
    0000012f: 	addsd	%xmm4, %xmm6
    00000133: 	movsd	%xmm7, 0x88(%rsp)
    0000013c: 	movsd	%xmm6, 0x80(%rsp)
    00000145: 	divsd	%xmm7, %xmm6
    00000149: 	movapd	%xmm6, %xmm0
    0000014d: 	addsd	%xmm4, %xmm0
    00000151: 	movsd	%xmm0, 0x90(%rsp)
    0000015a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 346
    0000015f: 	callq	clock@PLT # Offset: 351
    00000164: 	movl	iterations(%rip), %edx
    0000016a: 	movq	%rax, start_time(%rip)
    00000171: 	testl	%edx, %edx
    00000173: 	jle	.Ltmp4027 # Offset: 371
    00000179: 	movsd	0x78(%rsp), %xmm6
    0000017f: 	pxor	%xmm7, %xmm7
    00000183: 	xorl	%r13d, %r13d
    00000186: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    0000018e: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000196: 	movsd	%xmm7, 0x70(%rsp)
    0000019c: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    000001a4: 	leaq	DATAat0x3d1d8(%rip), %r14
    000001ab: 	unpcklpd	%xmm6, %xmm6
    000001af: 	movsd	%xmm5, 0x68(%rsp)
    000001b5: 	movaps	%xmm6, (%rsp)
    000001b9: 	movq	DATAat0x3d710(%rip), %xmm6
    000001c1: 	movsd	%xmm7, 0x60(%rsp)
    000001c7: 	movaps	%xmm6, 0x10(%rsp)
    000001cc: 	movsd	%xmm4, 0x28(%rsp)
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4031:
    000001d8: 	movq	%rbp, %rax
    000001db: 	pxor	%xmm0, %xmm0
    000001df: 	nop # Size: 1
.Ltmp4028:
    000001e0: 	movapd	(%rsp), %xmm2
    000001e5: 	addpd	(%rax), %xmm2
    000001e9: 	addq	$0x10, %rax
    000001ed: 	addsd	%xmm2, %xmm0
    000001f1: 	unpckhpd	%xmm2, %xmm2
    000001f5: 	addsd	%xmm2, %xmm0
    000001f9: 	cmpq	%rbx, %rax
    000001fc: 	jne	.Ltmp4028 # Offset: 508
    000001fe: 	movsd	0x78(%rsp), %xmm2
    00000204: 	movapd	0x10(%rsp), %xmm5
    0000020a: 	movapd	%xmm0, %xmm1
    0000020e: 	addsd	init_value(%rip), %xmm2
    00000216: 	mulsd	0x68(%rsp), %xmm2
    0000021c: 	andpd	%xmm0, %xmm5
    00000220: 	comisd	0x60(%rsp), %xmm5
    00000226: 	subsd	%xmm2, %xmm1
    0000022a: 	jbe	.Ltmp4029 # Offset: 554
    0000022c: 	divsd	%xmm0, %xmm1
.Ltmp4029:
    00000230: 	andpd	0x10(%rsp), %xmm1
    00000236: 	movsd	0x28(%rsp), %xmm7
    0000023c: 	comisd	%xmm1, %xmm7
    00000240: 	jbe	.Ltmp4030 # Offset: 576
.Ltmp4241:
    00000246: 	addl	$0x1, %r13d
    0000024a: 	cmpl	%edx, %r13d
    0000024d: 	jl	.Ltmp4031 # Offset: 589
.Ltmp4027:
    0000024f: 	movq	%r15, %rsi
    00000252: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000259: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 601
    0000025e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000265: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000026c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000273: 	je	.Ltmp4032 # Offset: 627
.Ltmp4274:
    00000279: 	movq	-0x20(%rax), %r13
    0000027d: 	callq	clock@PLT # Offset: 637
    00000282: 	pxor	%xmm0, %xmm0
    00000286: 	movq	%rax, end_time(%rip)
    0000028d: 	movq	%r13, %rdi
    00000290: 	subq	start_time(%rip), %rax
    00000297: 	cvtsi2sd	%rax, %xmm0
    0000029c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000002a4: 	callq	_Z13record_resultdPKc # Offset: 676
    000002a9: 	movq	0x1b0(%rsp), %rdi
    000002b1: 	leaq	0x1c0(%rsp), %rax
    000002b9: 	movq	%rax, 0x98(%rsp)
    000002c1: 	cmpq	%rax, %rdi
    000002c4: 	je	.Ltmp4033 # Offset: 708
    000002c6: 	movq	0x1c0(%rsp), %rax
    000002ce: 	leaq	0x1(%rax), %rsi
    000002d2: 	callq	_ZdlPvm@PLT # Offset: 722
.Ltmp4033:
    000002d7: 	leaq	DATAat0x3d281(%rip), %rdx
    000002de: 	movq	%r12, %rsi
    000002e1: 	movq	%r15, %rdi
    000002e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 740
    000002e9: 	callq	clock@PLT # Offset: 745
    000002ee: 	movl	iterations(%rip), %edx
    000002f4: 	movq	%rax, start_time(%rip)
    000002fb: 	testl	%edx, %edx
    000002fd: 	jle	.Ltmp4034 # Offset: 765
    00000303: 	movsd	0x78(%rsp), %xmm6
    00000309: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    00000311: 	xorl	%r13d, %r13d
    00000314: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000031b: 	movq	DATAat0x3d710(%rip), %xmm3
    00000323: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    0000032b: 	mulsd	%xmm5, %xmm6
    0000032f: 	movsd	%xmm5, 0x68(%rsp)
    00000335: 	pxor	%xmm5, %xmm5
    00000339: 	movsd	%xmm5, 0x70(%rsp)
    0000033f: 	movaps	%xmm3, 0x10(%rsp)
    00000344: 	movsd	%xmm7, 0x28(%rsp)
    0000034a: 	movsd	%xmm6, (%rsp)
    0000034f: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    00000357: 	movsd	%xmm6, 0x60(%rsp)
    0000035d: 	nopl	(%rax) # Size: 3
.Ltmp4038:
    00000360: 	movq	%rbp, %rax
    00000363: 	pxor	%xmm0, %xmm0
    00000367: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4035:
    00000370: 	movsd	(%rax), %xmm1
    00000374: 	addq	$0x10, %rax
    00000378: 	addsd	%xmm1, %xmm0
    0000037c: 	movsd	-0x8(%rax), %xmm1
    00000381: 	addsd	%xmm1, %xmm0
    00000385: 	cmpq	%rbx, %rax
    00000388: 	jne	.Ltmp4035 # Offset: 904
    0000038a: 	addsd	(%rsp), %xmm0
    0000038f: 	movsd	0x78(%rsp), %xmm2
    00000395: 	movapd	0x10(%rsp), %xmm5
    0000039b: 	addsd	init_value(%rip), %xmm2
    000003a3: 	mulsd	0x68(%rsp), %xmm2
    000003a9: 	andpd	%xmm0, %xmm5
    000003ad: 	comisd	0x60(%rsp), %xmm5
    000003b3: 	movapd	%xmm0, %xmm1
    000003b7: 	subsd	%xmm2, %xmm1
    000003bb: 	jbe	.Ltmp4036 # Offset: 955
    000003bd: 	divsd	%xmm0, %xmm1
.Ltmp4036:
    000003c1: 	andpd	0x10(%rsp), %xmm1
    000003c7: 	movsd	0x28(%rsp), %xmm7
    000003cd: 	comisd	%xmm1, %xmm7
    000003d1: 	jbe	.Ltmp4037 # Offset: 977
.Ltmp4240:
    000003d7: 	addl	$0x1, %r13d
    000003db: 	cmpl	%edx, %r13d
    000003de: 	jl	.Ltmp4038 # Offset: 990
.Ltmp4034:
    000003e0: 	movq	%r15, %rsi
    000003e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000003ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1002
    000003ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000404: 	je	.Ltmp4039 # Offset: 1028
.Ltmp4273:
    0000040a: 	movq	-0x20(%rax), %r13
    0000040e: 	callq	clock@PLT # Offset: 1038
    00000413: 	pxor	%xmm0, %xmm0
    00000417: 	movq	%rax, end_time(%rip)
    0000041e: 	movq	%r13, %rdi
    00000421: 	subq	start_time(%rip), %rax
    00000428: 	cvtsi2sd	%rax, %xmm0
    0000042d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000435: 	callq	_Z13record_resultdPKc # Offset: 1077
    0000043a: 	movq	0x1b0(%rsp), %rdi
    00000442: 	cmpq	0x98(%rsp), %rdi
    0000044a: 	je	.Ltmp4040 # Offset: 1098
    0000044c: 	movq	0x1c0(%rsp), %rax
    00000454: 	leaq	0x1(%rax), %rsi
    00000458: 	callq	_ZdlPvm@PLT # Offset: 1112
.Ltmp4040:
    0000045d: 	leaq	DATAat0x3d297(%rip), %rdx
    00000464: 	movq	%r12, %rsi
    00000467: 	movq	%r15, %rdi
    0000046a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1130
    0000046f: 	callq	clock@PLT # Offset: 1135
    00000474: 	movl	iterations(%rip), %edx
    0000047a: 	movq	%rax, start_time(%rip)
    00000481: 	testl	%edx, %edx
    00000483: 	jle	.Ltmp4041 # Offset: 1155
    00000489: 	movsd	0x78(%rsp), %xmm0
    0000048f: 	movsd	DATAat0x3d6f8(%rip), %xmm4
    00000497: 	pxor	%xmm7, %xmm7
    0000049b: 	xorl	%r13d, %r13d
    0000049e: 	addsd	0x80(%rsp), %xmm0
    000004a7: 	movq	DATAat0x3d710(%rip), %xmm5
    000004af: 	movsd	%xmm7, 0x70(%rsp)
    000004b5: 	leaq	DATAat0x3d1d8(%rip), %r14
    000004bc: 	addsd	0x88(%rsp), %xmm0
    000004c5: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    000004cd: 	movsd	%xmm4, 0x68(%rsp)
    000004d3: 	movsd	0x90(%rsp), %xmm3
    000004dc: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    000004e4: 	movaps	%xmm5, 0x10(%rsp)
    000004e9: 	movsd	%xmm6, 0x60(%rsp)
    000004ef: 	addsd	%xmm0, %xmm3
    000004f3: 	movsd	%xmm7, 0x28(%rsp)
    000004f9: 	movapd	%xmm3, %xmm4
    000004fd: 	movsd	%xmm3, 0x30(%rsp)
    00000503: 	unpcklpd	%xmm4, %xmm4
    00000507: 	movaps	%xmm4, (%rsp)
    0000050b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4045:
    00000510: 	movq	%rbp, %rax
    00000513: 	pxor	%xmm0, %xmm0
    00000517: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4042:
    00000520: 	movapd	(%rsp), %xmm2
    00000525: 	addpd	(%rax), %xmm2
    00000529: 	addq	$0x10, %rax
    0000052d: 	addsd	%xmm2, %xmm0
    00000531: 	unpckhpd	%xmm2, %xmm2
    00000535: 	addsd	%xmm2, %xmm0
    00000539: 	cmpq	%rax, %rbx
    0000053c: 	jne	.Ltmp4042 # Offset: 1340
    0000053e: 	movsd	0x30(%rsp), %xmm2
    00000544: 	movapd	0x10(%rsp), %xmm3
    0000054a: 	movapd	%xmm0, %xmm1
    0000054e: 	addsd	init_value(%rip), %xmm2
    00000556: 	mulsd	0x68(%rsp), %xmm2
    0000055c: 	andpd	%xmm0, %xmm3
    00000560: 	comisd	0x60(%rsp), %xmm3
    00000566: 	subsd	%xmm2, %xmm1
    0000056a: 	jbe	.Ltmp4043 # Offset: 1386
    0000056c: 	divsd	%xmm0, %xmm1
.Ltmp4043:
    00000570: 	andpd	0x10(%rsp), %xmm1
    00000576: 	movsd	0x28(%rsp), %xmm6
    0000057c: 	comisd	%xmm1, %xmm6
    00000580: 	jbe	.Ltmp4044 # Offset: 1408
.Ltmp4239:
    00000586: 	addl	$0x1, %r13d
    0000058a: 	cmpl	%edx, %r13d
    0000058d: 	jl	.Ltmp4045 # Offset: 1421
.Ltmp4041:
    0000058f: 	movq	%r15, %rsi
    00000592: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000599: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1433
    0000059e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005a5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005ac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005b3: 	je	.Ltmp4046 # Offset: 1459
.Ltmp4272:
    000005b9: 	movq	-0x20(%rax), %r13
    000005bd: 	callq	clock@PLT # Offset: 1469
    000005c2: 	pxor	%xmm0, %xmm0
    000005c6: 	movq	%rax, end_time(%rip)
    000005cd: 	movq	%r13, %rdi
    000005d0: 	subq	start_time(%rip), %rax
    000005d7: 	cvtsi2sd	%rax, %xmm0
    000005dc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000005e4: 	callq	_Z13record_resultdPKc # Offset: 1508
    000005e9: 	movq	0x1b0(%rsp), %rdi
    000005f1: 	cmpq	0x98(%rsp), %rdi
    000005f9: 	je	.Ltmp4047 # Offset: 1529
    000005fb: 	movq	0x1c0(%rsp), %rax
    00000603: 	leaq	0x1(%rax), %rsi
    00000607: 	callq	_ZdlPvm@PLT # Offset: 1543
.Ltmp4047:
    0000060c: 	leaq	DATAat0x3d2af(%rip), %rdx
    00000613: 	movq	%r12, %rsi
    00000616: 	movq	%r15, %rdi
    00000619: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1561
    0000061e: 	callq	clock@PLT # Offset: 1566
    00000623: 	movl	iterations(%rip), %edx
    00000629: 	movq	%rax, start_time(%rip)
    00000630: 	testl	%edx, %edx
    00000632: 	jle	.Ltmp4048 # Offset: 1586
    00000638: 	movsd	0x78(%rsp), %xmm6
    0000063e: 	pxor	%xmm3, %xmm3
    00000642: 	movq	DATAat0x3d710(%rip), %xmm4
    0000064a: 	xorl	%r13d, %r13d
    0000064d: 	movsd	%xmm3, 0x70(%rsp)
    00000653: 	movsd	DATAat0x3d6f8(%rip), %xmm3
    0000065b: 	movsd	0x80(%rsp), %xmm7
    00000664: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000066b: 	unpcklpd	%xmm6, %xmm6
    0000066f: 	movaps	%xmm4, 0x10(%rsp)
    00000674: 	movsd	0x88(%rsp), %xmm4
    0000067d: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    00000685: 	movaps	%xmm6, (%rsp)
    00000689: 	unpcklpd	%xmm7, %xmm7
    0000068d: 	movsd	0x90(%rsp), %xmm6
    00000696: 	movsd	%xmm3, 0x68(%rsp)
    0000069c: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    000006a4: 	unpcklpd	%xmm4, %xmm4
    000006a8: 	unpcklpd	%xmm6, %xmm6
    000006ac: 	movsd	%xmm5, 0x60(%rsp)
    000006b2: 	movsd	%xmm3, 0x28(%rsp)
    000006b8: 	movaps	%xmm7, 0x30(%rsp)
    000006bd: 	movaps	%xmm4, 0x40(%rsp)
    000006c2: 	movaps	%xmm6, 0x50(%rsp)
    000006c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4052:
    000006d0: 	movq	%rbp, %rax
    000006d3: 	pxor	%xmm1, %xmm1
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4049:
    000006e0: 	movapd	(%rsp), %xmm0
    000006e5: 	addpd	(%rax), %xmm0
    000006e9: 	addq	$0x10, %rax
    000006ed: 	addpd	0x30(%rsp), %xmm0
    000006f3: 	addpd	0x40(%rsp), %xmm0
    000006f9: 	addpd	0x50(%rsp), %xmm0
    000006ff: 	addsd	%xmm0, %xmm1
    00000703: 	unpckhpd	%xmm0, %xmm0
    00000707: 	addsd	%xmm0, %xmm1
    0000070b: 	cmpq	%rbx, %rax
    0000070e: 	jne	.Ltmp4049 # Offset: 1806
    00000710: 	movsd	0x78(%rsp), %xmm0
    00000716: 	movapd	0x10(%rsp), %xmm4
    0000071c: 	movapd	%xmm1, %xmm2
    00000720: 	addsd	init_value(%rip), %xmm0
    00000728: 	addsd	0x80(%rsp), %xmm0
    00000731: 	addsd	0x88(%rsp), %xmm0
    0000073a: 	andpd	%xmm1, %xmm4
    0000073e: 	addsd	0x90(%rsp), %xmm0
    00000747: 	mulsd	0x68(%rsp), %xmm0
    0000074d: 	comisd	0x60(%rsp), %xmm4
    00000753: 	subsd	%xmm0, %xmm2
    00000757: 	jbe	.Ltmp4050 # Offset: 1879
    00000759: 	divsd	%xmm1, %xmm2
.Ltmp4050:
    0000075d: 	andpd	0x10(%rsp), %xmm2
    00000763: 	movsd	0x28(%rsp), %xmm5
    00000769: 	comisd	%xmm2, %xmm5
    0000076d: 	jbe	.Ltmp4051 # Offset: 1901
.Ltmp4238:
    00000773: 	addl	$0x1, %r13d
    00000777: 	cmpl	%edx, %r13d
    0000077a: 	jl	.Ltmp4052 # Offset: 1914
.Ltmp4048:
    00000780: 	movq	%r15, %rsi
    00000783: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000078a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1930
    0000078f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000796: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000079d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007a4: 	je	.Ltmp4053 # Offset: 1956
.Ltmp4265:
    000007aa: 	movq	-0x20(%rax), %r13
    000007ae: 	callq	clock@PLT # Offset: 1966
    000007b3: 	pxor	%xmm0, %xmm0
    000007b7: 	movq	%rax, end_time(%rip)
    000007be: 	movq	%r13, %rdi
    000007c1: 	subq	start_time(%rip), %rax
    000007c8: 	cvtsi2sd	%rax, %xmm0
    000007cd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000007d5: 	callq	_Z13record_resultdPKc # Offset: 2005
    000007da: 	movq	0x1b0(%rsp), %rdi
    000007e2: 	cmpq	0x98(%rsp), %rdi
    000007ea: 	je	.Ltmp4054 # Offset: 2026
    000007ec: 	movq	0x1c0(%rsp), %rax
    000007f4: 	leaq	0x1(%rax), %rsi
    000007f8: 	callq	_ZdlPvm@PLT # Offset: 2040
.Ltmp4054:
    000007fd: 	leaq	DATAat0x3d2c8(%rip), %rdx
    00000804: 	movq	%r12, %rsi
    00000807: 	movq	%r15, %rdi
    0000080a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2058
    0000080f: 	callq	clock@PLT # Offset: 2063
    00000814: 	movl	iterations(%rip), %edx
    0000081a: 	movq	%rax, start_time(%rip)
    00000821: 	testl	%edx, %edx
    00000823: 	jle	.Ltmp4055 # Offset: 2083
    00000829: 	movsd	0x78(%rsp), %xmm5
    0000082f: 	pxor	%xmm6, %xmm6
    00000833: 	xorl	%r13d, %r13d
    00000836: 	movsd	DATAat0x3d6f8(%rip), %xmm7
    0000083e: 	movq	DATAat0x3d710(%rip), %xmm4
    00000846: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    0000084e: 	movsd	%xmm6, 0x70(%rsp)
    00000854: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000085b: 	unpcklpd	%xmm5, %xmm5
    0000085f: 	movsd	%xmm7, 0x68(%rsp)
    00000865: 	movaps	%xmm5, (%rsp)
    00000869: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    00000871: 	movaps	%xmm4, 0x10(%rsp)
    00000876: 	movsd	%xmm5, 0x60(%rsp)
    0000087c: 	movsd	%xmm3, 0x28(%rsp)
    00000882: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4059:
    00000888: 	movq	%rbp, %rax
    0000088b: 	pxor	%xmm1, %xmm1
    0000088f: 	nop # Size: 1
.Ltmp4056:
    00000890: 	movapd	(%rax), %xmm0
    00000894: 	subpd	(%rsp), %xmm0
    00000899: 	addq	$0x10, %rax
    0000089d: 	addsd	%xmm0, %xmm1
    000008a1: 	unpckhpd	%xmm0, %xmm0
    000008a5: 	addsd	%xmm0, %xmm1
    000008a9: 	cmpq	%rax, %rbx
    000008ac: 	jne	.Ltmp4056 # Offset: 2220
    000008ae: 	movsd	init_value(%rip), %xmm0
    000008b6: 	movapd	0x10(%rsp), %xmm5
    000008bc: 	movapd	%xmm1, %xmm2
    000008c0: 	subsd	0x78(%rsp), %xmm0
    000008c6: 	mulsd	0x68(%rsp), %xmm0
    000008cc: 	andpd	%xmm1, %xmm5
    000008d0: 	comisd	0x60(%rsp), %xmm5
    000008d6: 	subsd	%xmm0, %xmm2
    000008da: 	jbe	.Ltmp4057 # Offset: 2266
    000008dc: 	divsd	%xmm1, %xmm2
.Ltmp4057:
    000008e0: 	andpd	0x10(%rsp), %xmm2
    000008e6: 	movsd	0x28(%rsp), %xmm5
    000008ec: 	comisd	%xmm2, %xmm5
    000008f0: 	jbe	.Ltmp4058 # Offset: 2288
.Ltmp4237:
    000008f6: 	addl	$0x1, %r13d
    000008fa: 	cmpl	%edx, %r13d
    000008fd: 	jl	.Ltmp4059 # Offset: 2301
.Ltmp4055:
    000008ff: 	movq	%r15, %rsi
    00000902: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000909: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2313
    0000090e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000915: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000091c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000923: 	je	.Ltmp4060 # Offset: 2339
.Ltmp4264:
    00000929: 	movq	-0x20(%rax), %r13
    0000092d: 	callq	clock@PLT # Offset: 2349
    00000932: 	pxor	%xmm0, %xmm0
    00000936: 	movq	%rax, end_time(%rip)
    0000093d: 	movq	%r13, %rdi
    00000940: 	subq	start_time(%rip), %rax
    00000947: 	cvtsi2sd	%rax, %xmm0
    0000094c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000954: 	callq	_Z13record_resultdPKc # Offset: 2388
    00000959: 	movq	0x1b0(%rsp), %rdi
    00000961: 	cmpq	0x98(%rsp), %rdi
    00000969: 	je	.Ltmp4061 # Offset: 2409
    0000096b: 	movq	0x1c0(%rsp), %rax
    00000973: 	leaq	0x1(%rax), %rsi
    00000977: 	callq	_ZdlPvm@PLT # Offset: 2423
.Ltmp4061:
    0000097c: 	leaq	DATAat0x3d2db(%rip), %rdx
    00000983: 	movq	%r12, %rsi
    00000986: 	movq	%r15, %rdi
    00000989: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2441
    0000098e: 	callq	clock@PLT # Offset: 2446
    00000993: 	movl	iterations(%rip), %edx
    00000999: 	movq	%rax, start_time(%rip)
    000009a0: 	testl	%edx, %edx
    000009a2: 	jle	.Ltmp4062 # Offset: 2466
    000009a8: 	movsd	0x78(%rsp), %xmm0
    000009ae: 	movq	DATAat0x3d710(%rip), %xmm7
    000009b6: 	pxor	%xmm3, %xmm3
    000009ba: 	xorl	%r13d, %r13d
    000009bd: 	addsd	0x80(%rsp), %xmm0
    000009c6: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    000009ce: 	movsd	%xmm3, 0x70(%rsp)
    000009d4: 	leaq	DATAat0x3d1d8(%rip), %r14
    000009db: 	addsd	0x88(%rsp), %xmm0
    000009e4: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000009ec: 	movaps	%xmm7, 0x10(%rsp)
    000009f1: 	movsd	0x90(%rsp), %xmm5
    000009fa: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00000a02: 	movsd	%xmm6, 0x68(%rsp)
    00000a08: 	movsd	%xmm4, 0x60(%rsp)
    00000a0e: 	addsd	%xmm0, %xmm5
    00000a12: 	movsd	%xmm3, 0x28(%rsp)
    00000a18: 	movapd	%xmm5, %xmm7
    00000a1c: 	movsd	%xmm5, 0x30(%rsp)
    00000a22: 	unpcklpd	%xmm7, %xmm7
    00000a26: 	movaps	%xmm7, (%rsp)
    00000a2a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4066:
    00000a30: 	movq	%rbp, %rax
    00000a33: 	pxor	%xmm1, %xmm1
    00000a37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4063:
    00000a40: 	movapd	(%rax), %xmm0
    00000a44: 	subpd	(%rsp), %xmm0
    00000a49: 	addq	$0x10, %rax
    00000a4d: 	addsd	%xmm0, %xmm1
    00000a51: 	unpckhpd	%xmm0, %xmm0
    00000a55: 	addsd	%xmm0, %xmm1
    00000a59: 	cmpq	%rbx, %rax
    00000a5c: 	jne	.Ltmp4063 # Offset: 2652
    00000a5e: 	movsd	init_value(%rip), %xmm0
    00000a66: 	movapd	0x10(%rsp), %xmm3
    00000a6c: 	movapd	%xmm1, %xmm2
    00000a70: 	subsd	0x30(%rsp), %xmm0
    00000a76: 	mulsd	0x68(%rsp), %xmm0
    00000a7c: 	andpd	%xmm1, %xmm3
    00000a80: 	comisd	0x60(%rsp), %xmm3
    00000a86: 	subsd	%xmm0, %xmm2
    00000a8a: 	jbe	.Ltmp4064 # Offset: 2698
    00000a8c: 	divsd	%xmm1, %xmm2
.Ltmp4064:
    00000a90: 	andpd	0x10(%rsp), %xmm2
    00000a96: 	movsd	0x28(%rsp), %xmm5
    00000a9c: 	comisd	%xmm2, %xmm5
    00000aa0: 	jbe	.Ltmp4065 # Offset: 2720
.Ltmp4236:
    00000aa6: 	addl	$0x1, %r13d
    00000aaa: 	cmpl	%edx, %r13d
    00000aad: 	jl	.Ltmp4066 # Offset: 2733
.Ltmp4062:
    00000aaf: 	movq	%r15, %rsi
    00000ab2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ab9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2745
    00000abe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ac5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000acc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ad3: 	je	.Ltmp4067 # Offset: 2771
.Ltmp4263:
    00000ad9: 	movq	-0x20(%rax), %r13
    00000add: 	callq	clock@PLT # Offset: 2781
    00000ae2: 	pxor	%xmm0, %xmm0
    00000ae6: 	movq	%rax, end_time(%rip)
    00000aed: 	movq	%r13, %rdi
    00000af0: 	subq	start_time(%rip), %rax
    00000af7: 	cvtsi2sd	%rax, %xmm0
    00000afc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000b04: 	callq	_Z13record_resultdPKc # Offset: 2820
    00000b09: 	movq	0x1b0(%rsp), %rdi
    00000b11: 	cmpq	0x98(%rsp), %rdi
    00000b19: 	je	.Ltmp4068 # Offset: 2841
    00000b1b: 	movq	0x1c0(%rsp), %rax
    00000b23: 	leaq	0x1(%rax), %rsi
    00000b27: 	callq	_ZdlPvm@PLT # Offset: 2855
.Ltmp4068:
    00000b2c: 	leaq	DATAat0x3d2f8(%rip), %rdx
    00000b33: 	movq	%r12, %rsi
    00000b36: 	movq	%r15, %rdi
    00000b39: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2873
    00000b3e: 	callq	clock@PLT # Offset: 2878
    00000b43: 	movl	iterations(%rip), %edx
    00000b49: 	movq	%rax, start_time(%rip)
    00000b50: 	testl	%edx, %edx
    00000b52: 	jle	.Ltmp4069 # Offset: 2898
    00000b58: 	pxor	%xmm5, %xmm5
    00000b5c: 	movsd	0x78(%rsp), %xmm4
    00000b62: 	movq	DATAat0x3d710(%rip), %xmm6
    00000b6a: 	xorl	%r13d, %r13d
    00000b6d: 	movsd	%xmm5, 0x70(%rsp)
    00000b73: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    00000b7b: 	movsd	0x80(%rsp), %xmm3
    00000b84: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000b8b: 	unpcklpd	%xmm4, %xmm4
    00000b8f: 	movaps	%xmm6, 0x10(%rsp)
    00000b94: 	movsd	0x88(%rsp), %xmm6
    00000b9d: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00000ba5: 	movsd	%xmm5, 0x68(%rsp)
    00000bab: 	unpcklpd	%xmm3, %xmm3
    00000baf: 	movsd	0x90(%rsp), %xmm5
    00000bb8: 	movaps	%xmm4, (%rsp)
    00000bbc: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000bc4: 	unpcklpd	%xmm6, %xmm6
    00000bc8: 	unpcklpd	%xmm5, %xmm5
    00000bcc: 	movsd	%xmm7, 0x60(%rsp)
    00000bd2: 	movsd	%xmm4, 0x28(%rsp)
    00000bd8: 	movaps	%xmm3, 0x30(%rsp)
    00000bdd: 	movaps	%xmm6, 0x40(%rsp)
    00000be2: 	movaps	%xmm5, 0x50(%rsp)
    00000be7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4073:
    00000bf0: 	movq	%rbp, %rax
    00000bf3: 	pxor	%xmm1, %xmm1
    00000bf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4070:
    00000c00: 	movapd	(%rax), %xmm0
    00000c04: 	subpd	(%rsp), %xmm0
    00000c09: 	addq	$0x10, %rax
    00000c0d: 	subpd	0x30(%rsp), %xmm0
    00000c13: 	subpd	0x40(%rsp), %xmm0
    00000c19: 	subpd	0x50(%rsp), %xmm0
    00000c1f: 	addsd	%xmm0, %xmm1
    00000c23: 	unpckhpd	%xmm0, %xmm0
    00000c27: 	addsd	%xmm0, %xmm1
    00000c2b: 	cmpq	%rbx, %rax
    00000c2e: 	jne	.Ltmp4070 # Offset: 3118
    00000c30: 	movsd	init_value(%rip), %xmm0
    00000c38: 	movapd	0x10(%rsp), %xmm4
    00000c3e: 	movapd	%xmm1, %xmm2
    00000c42: 	subsd	0x78(%rsp), %xmm0
    00000c48: 	subsd	0x80(%rsp), %xmm0
    00000c51: 	subsd	0x88(%rsp), %xmm0
    00000c5a: 	andpd	%xmm1, %xmm4
    00000c5e: 	subsd	0x90(%rsp), %xmm0
    00000c67: 	mulsd	0x68(%rsp), %xmm0
    00000c6d: 	comisd	0x60(%rsp), %xmm4
    00000c73: 	subsd	%xmm0, %xmm2
    00000c77: 	jbe	.Ltmp4071 # Offset: 3191
    00000c79: 	divsd	%xmm1, %xmm2
.Ltmp4071:
    00000c7d: 	andpd	0x10(%rsp), %xmm2
    00000c83: 	movsd	0x28(%rsp), %xmm6
    00000c89: 	comisd	%xmm2, %xmm6
    00000c8d: 	jbe	.Ltmp4072 # Offset: 3213
.Ltmp4235:
    00000c93: 	addl	$0x1, %r13d
    00000c97: 	cmpl	%edx, %r13d
    00000c9a: 	jl	.Ltmp4073 # Offset: 3226
.Ltmp4069:
    00000ca0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ca7: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000cae: 	subq	$0x20, %rax
    00000cb2: 	cmpq	%rax, %r14
    00000cb5: 	je	.Ltmp4074 # Offset: 3253
    00000cbb: 	leaq	0x10(%r14), %rdi
    00000cbf: 	movq	0x1b8(%rsp), %r13
    00000cc7: 	movq	%rdi, (%r14)
    00000cca: 	movq	0x1b0(%rsp), %rax
    00000cd2: 	movq	%rax, %rcx
    00000cd5: 	movq	%rax, (%rsp)
    00000cd9: 	addq	%r13, %rcx
    00000cdc: 	je	.Ltmp4075 # Offset: 3292
    00000cde: 	testq	%rax, %rax
    00000ce1: 	je	.Ltmp4076 # Offset: 3297
.Ltmp4075:
    00000ce7: 	movq	%r13, 0xc0(%rsp)
    00000cef: 	cmpq	$0xf, %r13
    00000cf3: 	ja	.Ltmp4077 # Offset: 3315
    00000cf9: 	cmpq	$0x1, %r13
    00000cfd: 	jne	.Ltmp4078 # Offset: 3325
    00000d03: 	movq	(%rsp), %rax
    00000d07: 	movzbl	(%rax), %eax
    00000d0a: 	movb	%al, 0x10(%r14)
.Ltmp4242:
    00000d0e: 	movq	%r13, 0x8(%r14)
    00000d12: 	movb	$0x0, (%rdi,%r13)
    00000d17: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d25: 	addq	$0x20, %rax
    00000d29: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d30: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000d37: 	je	.Ltmp4079 # Offset: 3383
.Ltmp4262:
    00000d3d: 	movq	-0x20(%rax), %r13
    00000d41: 	callq	clock@PLT # Offset: 3393
    00000d46: 	pxor	%xmm0, %xmm0
    00000d4a: 	movq	%rax, end_time(%rip)
    00000d51: 	movq	%r13, %rdi
    00000d54: 	subq	start_time(%rip), %rax
    00000d5b: 	cvtsi2sd	%rax, %xmm0
    00000d60: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d68: 	callq	_Z13record_resultdPKc # Offset: 3432
    00000d6d: 	movq	0x1b0(%rsp), %rdi
    00000d75: 	cmpq	0x98(%rsp), %rdi
    00000d7d: 	je	.Ltmp4080 # Offset: 3453
    00000d7f: 	movq	0x1c0(%rsp), %rax
    00000d87: 	leaq	0x1(%rax), %rsi
    00000d8b: 	callq	_ZdlPvm@PLT # Offset: 3467
.Ltmp4080:
    00000d90: 	leaq	DATAat0x3d316(%rip), %rdx
    00000d97: 	movq	%r12, %rsi
    00000d9a: 	movq	%r15, %rdi
    00000d9d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3485
    00000da2: 	callq	clock@PLT # Offset: 3490
    00000da7: 	movl	iterations(%rip), %edx
    00000dad: 	movq	%rax, start_time(%rip)
    00000db4: 	testl	%edx, %edx
    00000db6: 	jle	.Ltmp4081 # Offset: 3510
    00000dbc: 	movsd	0x78(%rsp), %xmm7
    00000dc2: 	pxor	%xmm5, %xmm5
    00000dc6: 	xorl	%r13d, %r13d
    00000dc9: 	movsd	DATAat0x3d6f8(%rip), %xmm3
    00000dd1: 	movq	DATAat0x3d710(%rip), %xmm6
    00000dd9: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00000de1: 	movsd	%xmm5, 0x70(%rsp)
    00000de7: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000dee: 	unpcklpd	%xmm7, %xmm7
    00000df2: 	movsd	%xmm3, 0x68(%rsp)
    00000df8: 	movaps	%xmm7, (%rsp)
    00000dfc: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00000e04: 	movaps	%xmm6, 0x10(%rsp)
    00000e09: 	movsd	%xmm7, 0x60(%rsp)
    00000e0f: 	movsd	%xmm4, 0x28(%rsp)
    00000e15: 	nopl	(%rax) # Size: 3
.Ltmp4085:
    00000e18: 	movq	%rbp, %rax
    00000e1b: 	pxor	%xmm0, %xmm0
    00000e1f: 	nop # Size: 1
.Ltmp4082:
    00000e20: 	movapd	(%rsp), %xmm2
    00000e25: 	mulpd	(%rax), %xmm2
    00000e29: 	addq	$0x10, %rax
    00000e2d: 	addsd	%xmm2, %xmm0
    00000e31: 	unpckhpd	%xmm2, %xmm2
    00000e35: 	addsd	%xmm2, %xmm0
    00000e39: 	cmpq	%rax, %rbx
    00000e3c: 	jne	.Ltmp4082 # Offset: 3644
    00000e3e: 	movsd	0x78(%rsp), %xmm2
    00000e44: 	movapd	0x10(%rsp), %xmm6
    00000e4a: 	movapd	%xmm0, %xmm1
    00000e4e: 	mulsd	init_value(%rip), %xmm2
    00000e56: 	mulsd	0x68(%rsp), %xmm2
    00000e5c: 	andpd	%xmm0, %xmm6
    00000e60: 	comisd	0x60(%rsp), %xmm6
    00000e66: 	subsd	%xmm2, %xmm1
    00000e6a: 	jbe	.Ltmp4083 # Offset: 3690
    00000e6c: 	divsd	%xmm0, %xmm1
.Ltmp4083:
    00000e70: 	andpd	0x10(%rsp), %xmm1
    00000e76: 	movsd	0x28(%rsp), %xmm4
    00000e7c: 	comisd	%xmm1, %xmm4
    00000e80: 	jbe	.Ltmp4084 # Offset: 3712
.Ltmp4248:
    00000e86: 	addl	$0x1, %r13d
    00000e8a: 	cmpl	%edx, %r13d
    00000e8d: 	jl	.Ltmp4085 # Offset: 3725
.Ltmp4081:
    00000e8f: 	movq	%r15, %rsi
    00000e92: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e99: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3737
    00000e9e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ea5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000eac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eb3: 	je	.Ltmp4086 # Offset: 3763
.Ltmp4285:
    00000eb9: 	movq	-0x20(%rax), %r13
    00000ebd: 	callq	clock@PLT # Offset: 3773
    00000ec2: 	pxor	%xmm0, %xmm0
    00000ec6: 	movq	%rax, end_time(%rip)
    00000ecd: 	movq	%r13, %rdi
    00000ed0: 	subq	start_time(%rip), %rax
    00000ed7: 	cvtsi2sd	%rax, %xmm0
    00000edc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ee4: 	callq	_Z13record_resultdPKc # Offset: 3812
    00000ee9: 	movq	0x1b0(%rsp), %rdi
    00000ef1: 	cmpq	0x98(%rsp), %rdi
    00000ef9: 	je	.Ltmp4087 # Offset: 3833
    00000efb: 	movq	0x1c0(%rsp), %rax
    00000f03: 	leaq	0x1(%rax), %rsi
    00000f07: 	callq	_ZdlPvm@PLT # Offset: 3847
.Ltmp4087:
    00000f0c: 	leaq	DATAat0x3d329(%rip), %rdx
    00000f13: 	movq	%r12, %rsi
    00000f16: 	movq	%r15, %rdi
    00000f19: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3865
    00000f1e: 	callq	clock@PLT # Offset: 3870
    00000f23: 	movl	iterations(%rip), %edx
    00000f29: 	movq	%rax, start_time(%rip)
    00000f30: 	testl	%edx, %edx
    00000f32: 	jle	.Ltmp4088 # Offset: 3890
    00000f38: 	movsd	0x78(%rsp), %xmm0
    00000f3e: 	movsd	DATAat0x3d6f8(%rip), %xmm4
    00000f46: 	pxor	%xmm7, %xmm7
    00000f4a: 	xorl	%r13d, %r13d
    00000f4d: 	mulsd	0x80(%rsp), %xmm0
    00000f56: 	movq	DATAat0x3d710(%rip), %xmm5
    00000f5e: 	movsd	%xmm7, 0x70(%rsp)
    00000f64: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000f6b: 	mulsd	0x88(%rsp), %xmm0
    00000f74: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    00000f7c: 	movsd	%xmm4, 0x68(%rsp)
    00000f82: 	movsd	0x90(%rsp), %xmm3
    00000f8b: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    00000f93: 	movaps	%xmm5, 0x10(%rsp)
    00000f98: 	movsd	%xmm6, 0x60(%rsp)
    00000f9e: 	movsd	%xmm7, 0x28(%rsp)
    00000fa4: 	mulsd	%xmm0, %xmm3
    00000fa8: 	movapd	%xmm3, %xmm4
    00000fac: 	movsd	%xmm3, 0x30(%rsp)
    00000fb2: 	unpcklpd	%xmm4, %xmm4
    00000fb6: 	movaps	%xmm4, (%rsp)
    00000fba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4092:
    00000fc0: 	movq	%rbp, %rax
    00000fc3: 	pxor	%xmm0, %xmm0
    00000fc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4089:
    00000fd0: 	movapd	(%rsp), %xmm2
    00000fd5: 	mulpd	(%rax), %xmm2
    00000fd9: 	addq	$0x10, %rax
    00000fdd: 	addsd	%xmm2, %xmm0
    00000fe1: 	unpckhpd	%xmm2, %xmm2
    00000fe5: 	addsd	%xmm2, %xmm0
    00000fe9: 	cmpq	%rbx, %rax
    00000fec: 	jne	.Ltmp4089 # Offset: 4076
    00000fee: 	movsd	0x30(%rsp), %xmm2
    00000ff4: 	movapd	0x10(%rsp), %xmm7
    00000ffa: 	movapd	%xmm0, %xmm1
    00000ffe: 	mulsd	init_value(%rip), %xmm2
    00001006: 	mulsd	0x68(%rsp), %xmm2
    0000100c: 	andpd	%xmm0, %xmm7
    00001010: 	comisd	0x60(%rsp), %xmm7
    00001016: 	subsd	%xmm2, %xmm1
    0000101a: 	jbe	.Ltmp4090 # Offset: 4122
    0000101c: 	divsd	%xmm0, %xmm1
.Ltmp4090:
    00001020: 	andpd	0x10(%rsp), %xmm1
    00001026: 	movsd	0x28(%rsp), %xmm3
    0000102c: 	comisd	%xmm1, %xmm3
    00001030: 	jbe	.Ltmp4091 # Offset: 4144
.Ltmp4247:
    00001036: 	addl	$0x1, %r13d
    0000103a: 	cmpl	%edx, %r13d
    0000103d: 	jl	.Ltmp4092 # Offset: 4157
.Ltmp4088:
    0000103f: 	movq	%r15, %rsi
    00001042: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001049: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4169
    0000104e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001055: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000105c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001063: 	je	.Ltmp4093 # Offset: 4195
.Ltmp4287:
    00001069: 	movq	-0x20(%rax), %r13
    0000106d: 	callq	clock@PLT # Offset: 4205
    00001072: 	pxor	%xmm0, %xmm0
    00001076: 	movq	%rax, end_time(%rip)
    0000107d: 	movq	%r13, %rdi
    00001080: 	subq	start_time(%rip), %rax
    00001087: 	cvtsi2sd	%rax, %xmm0
    0000108c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001094: 	callq	_Z13record_resultdPKc # Offset: 4244
    00001099: 	movq	0x1b0(%rsp), %rdi
    000010a1: 	cmpq	0x98(%rsp), %rdi
    000010a9: 	je	.Ltmp4094 # Offset: 4265
    000010ab: 	movq	0x1c0(%rsp), %rax
    000010b3: 	leaq	0x1(%rax), %rsi
    000010b7: 	callq	_ZdlPvm@PLT # Offset: 4279
.Ltmp4094:
    000010bc: 	leaq	DATAat0x3d600(%rip), %rdx
    000010c3: 	movq	%r12, %rsi
    000010c6: 	movq	%r15, %rdi
    000010c9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4297
    000010ce: 	callq	clock@PLT # Offset: 4302
    000010d3: 	movl	iterations(%rip), %edx
    000010d9: 	movq	%rax, start_time(%rip)
    000010e0: 	testl	%edx, %edx
    000010e2: 	jle	.Ltmp4095 # Offset: 4322
    000010e8: 	movsd	0x78(%rsp), %xmm0
    000010ee: 	pxor	%xmm3, %xmm3
    000010f2: 	movsd	0x90(%rsp), %xmm4
    000010fb: 	xorl	%r13d, %r13d
    000010fe: 	mulsd	0x80(%rsp), %xmm0
    00001107: 	movsd	%xmm3, 0x70(%rsp)
    0000110d: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00001115: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000111c: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    00001124: 	movq	DATAat0x3d710(%rip), %xmm7
    0000112c: 	mulsd	0x88(%rsp), %xmm0
    00001135: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    0000113d: 	movsd	%xmm3, 0x28(%rsp)
    00001143: 	movsd	%xmm6, 0x68(%rsp)
    00001149: 	movaps	%xmm7, 0x10(%rsp)
    0000114e: 	movsd	%xmm5, 0x60(%rsp)
    00001154: 	mulsd	%xmm0, %xmm4
    00001158: 	movapd	%xmm4, %xmm3
    0000115c: 	movsd	%xmm4, 0x30(%rsp)
    00001162: 	unpcklpd	%xmm3, %xmm3
    00001166: 	movaps	%xmm3, (%rsp)
    0000116a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4099:
    00001170: 	movq	%rbp, %rax
    00001173: 	pxor	%xmm0, %xmm0
    00001177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4096:
    00001180: 	movapd	(%rsp), %xmm2
    00001185: 	addpd	(%rax), %xmm2
    00001189: 	addq	$0x10, %rax
    0000118d: 	addsd	%xmm2, %xmm0
    00001191: 	unpckhpd	%xmm2, %xmm2
    00001195: 	addsd	%xmm2, %xmm0
    00001199: 	cmpq	%rbx, %rax
    0000119c: 	jne	.Ltmp4096 # Offset: 4508
    0000119e: 	movsd	0x30(%rsp), %xmm2
    000011a4: 	movapd	0x10(%rsp), %xmm5
    000011aa: 	movapd	%xmm0, %xmm1
    000011ae: 	addsd	init_value(%rip), %xmm2
    000011b6: 	mulsd	0x68(%rsp), %xmm2
    000011bc: 	andpd	%xmm0, %xmm5
    000011c0: 	comisd	0x60(%rsp), %xmm5
    000011c6: 	subsd	%xmm2, %xmm1
    000011ca: 	jbe	.Ltmp4097 # Offset: 4554
    000011cc: 	divsd	%xmm0, %xmm1
.Ltmp4097:
    000011d0: 	andpd	0x10(%rsp), %xmm1
    000011d6: 	movsd	0x28(%rsp), %xmm5
    000011dc: 	comisd	%xmm1, %xmm5
    000011e0: 	jbe	.Ltmp4098 # Offset: 4576
.Ltmp4250:
    000011e6: 	addl	$0x1, %r13d
    000011ea: 	cmpl	%edx, %r13d
    000011ed: 	jl	.Ltmp4099 # Offset: 4589
.Ltmp4095:
    000011ef: 	movq	%r15, %rsi
    000011f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4601
    000011fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001205: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000120c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001213: 	je	.Ltmp4100 # Offset: 4627
.Ltmp4286:
    00001219: 	movq	-0x20(%rax), %r13
    0000121d: 	callq	clock@PLT # Offset: 4637
    00001222: 	pxor	%xmm0, %xmm0
    00001226: 	movq	%rax, end_time(%rip)
    0000122d: 	movq	%r13, %rdi
    00001230: 	subq	start_time(%rip), %rax
    00001237: 	cvtsi2sd	%rax, %xmm0
    0000123c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001244: 	callq	_Z13record_resultdPKc # Offset: 4676
    00001249: 	movq	0x1b0(%rsp), %rdi
    00001251: 	cmpq	0x98(%rsp), %rdi
    00001259: 	je	.Ltmp4101 # Offset: 4697
    0000125b: 	movq	0x1c0(%rsp), %rax
    00001263: 	leaq	0x1(%rax), %rsi
    00001267: 	callq	_ZdlPvm@PLT # Offset: 4711
.Ltmp4101:
    0000126c: 	leaq	DATAat0x3d620(%rip), %rdx
    00001273: 	movq	%r12, %rsi
    00001276: 	movq	%r15, %rdi
    00001279: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4729
    0000127e: 	callq	clock@PLT # Offset: 4734
    00001283: 	movl	iterations(%rip), %edx
    00001289: 	movq	%rax, start_time(%rip)
    00001290: 	testl	%edx, %edx
    00001292: 	jle	.Ltmp4102 # Offset: 4754
    00001298: 	pxor	%xmm4, %xmm4
    0000129c: 	movsd	0x78(%rsp), %xmm6
    000012a2: 	xorl	%r13d, %r13d
    000012a5: 	movq	DATAat0x3d710(%rip), %xmm7
    000012ad: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    000012b5: 	movsd	%xmm4, 0x70(%rsp)
    000012bb: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000012c3: 	leaq	DATAat0x3d1d8(%rip), %r14
    000012ca: 	unpcklpd	%xmm6, %xmm6
    000012ce: 	movaps	%xmm7, 0x10(%rsp)
    000012d3: 	movsd	0x88(%rsp), %xmm7
    000012dc: 	movsd	%xmm4, 0x60(%rsp)
    000012e2: 	movsd	0x90(%rsp), %xmm4
    000012eb: 	movsd	%xmm5, 0x28(%rsp)
    000012f1: 	unpcklpd	%xmm7, %xmm7
    000012f5: 	movsd	0x80(%rsp), %xmm5
    000012fe: 	movaps	%xmm6, (%rsp)
    00001302: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    0000130a: 	unpcklpd	%xmm4, %xmm4
    0000130e: 	unpcklpd	%xmm5, %xmm5
    00001312: 	movaps	%xmm7, 0x40(%rsp)
    00001317: 	movsd	%xmm6, 0x68(%rsp)
    0000131d: 	movaps	%xmm5, 0x30(%rsp)
    00001322: 	movaps	%xmm4, 0x50(%rsp)
    00001327: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4106:
    00001330: 	movq	%rbp, %rax
    00001333: 	pxor	%xmm1, %xmm1
    00001337: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4103:
    00001340: 	movapd	(%rsp), %xmm0
    00001345: 	mulpd	(%rax), %xmm0
    00001349: 	addq	$0x10, %rax
    0000134d: 	mulpd	0x30(%rsp), %xmm0
    00001353: 	mulpd	0x40(%rsp), %xmm0
    00001359: 	mulpd	0x50(%rsp), %xmm0
    0000135f: 	addsd	%xmm0, %xmm1
    00001363: 	unpckhpd	%xmm0, %xmm0
    00001367: 	addsd	%xmm0, %xmm1
    0000136b: 	cmpq	%rbx, %rax
    0000136e: 	jne	.Ltmp4103 # Offset: 4974
    00001370: 	movsd	0x78(%rsp), %xmm0
    00001376: 	movapd	0x10(%rsp), %xmm3
    0000137c: 	movapd	%xmm1, %xmm2
    00001380: 	mulsd	init_value(%rip), %xmm0
    00001388: 	mulsd	0x80(%rsp), %xmm0
    00001391: 	andpd	%xmm1, %xmm3
    00001395: 	mulsd	0x88(%rsp), %xmm0
    0000139e: 	comisd	0x60(%rsp), %xmm3
    000013a4: 	mulsd	0x90(%rsp), %xmm0
    000013ad: 	mulsd	0x68(%rsp), %xmm0
    000013b3: 	subsd	%xmm0, %xmm2
    000013b7: 	jbe	.Ltmp4104 # Offset: 5047
    000013b9: 	divsd	%xmm1, %xmm2
.Ltmp4104:
    000013bd: 	andpd	0x10(%rsp), %xmm2
    000013c3: 	movsd	0x28(%rsp), %xmm4
    000013c9: 	comisd	%xmm2, %xmm4
    000013cd: 	jbe	.Ltmp4105 # Offset: 5069
.Ltmp4249:
    000013d3: 	addl	$0x1, %r13d
    000013d7: 	cmpl	%edx, %r13d
    000013da: 	jl	.Ltmp4106 # Offset: 5082
.Ltmp4102:
    000013e0: 	movq	%r15, %rsi
    000013e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000013ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5098
    000013ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000013fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001404: 	je	.Ltmp4107 # Offset: 5124
.Ltmp4283:
    0000140a: 	movq	-0x20(%rax), %r13
    0000140e: 	callq	clock@PLT # Offset: 5134
    00001413: 	pxor	%xmm0, %xmm0
    00001417: 	movq	%rax, end_time(%rip)
    0000141e: 	movq	%r13, %rdi
    00001421: 	subq	start_time(%rip), %rax
    00001428: 	cvtsi2sd	%rax, %xmm0
    0000142d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001435: 	callq	_Z13record_resultdPKc # Offset: 5173
    0000143a: 	movq	0x1b0(%rsp), %rdi
    00001442: 	cmpq	0x98(%rsp), %rdi
    0000144a: 	je	.Ltmp4108 # Offset: 5194
    0000144c: 	movq	0x1c0(%rsp), %rax
    00001454: 	leaq	0x1(%rax), %rsi
    00001458: 	callq	_ZdlPvm@PLT # Offset: 5208
.Ltmp4108:
    0000145d: 	leaq	DATAat0x3d347(%rip), %rdx
    00001464: 	movq	%r12, %rsi
    00001467: 	movq	%r15, %rdi
    0000146a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5226
    0000146f: 	callq	clock@PLT # Offset: 5231
    00001474: 	movl	iterations(%rip), %edx
    0000147a: 	movq	%rax, start_time(%rip)
    00001481: 	testl	%edx, %edx
    00001483: 	jle	.Ltmp4109 # Offset: 5251
    00001489: 	movsd	0x78(%rsp), %xmm3
    0000148f: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    00001497: 	xorl	%r13d, %r13d
    0000149a: 	leaq	DATAat0x3d1d8(%rip), %r14
    000014a1: 	movq	DATAat0x3d710(%rip), %xmm7
    000014a9: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000014b1: 	unpcklpd	%xmm3, %xmm3
    000014b5: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    000014bd: 	movsd	%xmm6, 0x68(%rsp)
    000014c3: 	movaps	%xmm3, (%rsp)
    000014c7: 	pxor	%xmm3, %xmm3
    000014cb: 	movsd	%xmm3, 0x70(%rsp)
    000014d1: 	movaps	%xmm7, 0x10(%rsp)
    000014d6: 	movsd	%xmm4, 0x60(%rsp)
    000014dc: 	movsd	%xmm5, 0x28(%rsp)
    000014e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4113:
    000014e8: 	movq	%rbp, %rax
    000014eb: 	pxor	%xmm1, %xmm1
    000014ef: 	nop # Size: 1
.Ltmp4110:
    000014f0: 	movapd	(%rax), %xmm0
    000014f4: 	divpd	(%rsp), %xmm0
    000014f9: 	addsd	%xmm0, %xmm1
    000014fd: 	unpckhpd	%xmm0, %xmm0
    00001501: 	addq	$0x10, %rax
    00001505: 	addsd	%xmm0, %xmm1
    00001509: 	cmpq	%rbx, %rax
    0000150c: 	jne	.Ltmp4110 # Offset: 5388
    0000150e: 	movsd	init_value(%rip), %xmm0
    00001516: 	movapd	0x10(%rsp), %xmm4
    0000151c: 	divsd	0x78(%rsp), %xmm0
    00001522: 	movapd	%xmm1, %xmm2
    00001526: 	mulsd	0x68(%rsp), %xmm0
    0000152c: 	andpd	%xmm1, %xmm4
    00001530: 	comisd	0x60(%rsp), %xmm4
    00001536: 	subsd	%xmm0, %xmm2
    0000153a: 	jbe	.Ltmp4111 # Offset: 5434
    0000153c: 	divsd	%xmm1, %xmm2
.Ltmp4111:
    00001540: 	andpd	0x10(%rsp), %xmm2
    00001546: 	movsd	0x28(%rsp), %xmm4
    0000154c: 	comisd	%xmm2, %xmm4
    00001550: 	jbe	.Ltmp4112 # Offset: 5456
.Ltmp4245:
    00001556: 	addl	$0x1, %r13d
    0000155a: 	cmpl	%edx, %r13d
    0000155d: 	jl	.Ltmp4113 # Offset: 5469
.Ltmp4109:
    0000155f: 	movq	%r15, %rsi
    00001562: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001569: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5481
    0000156e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001575: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000157c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001583: 	je	.Ltmp4114 # Offset: 5507
.Ltmp4276:
    00001589: 	movq	-0x20(%rax), %r13
    0000158d: 	callq	clock@PLT # Offset: 5517
    00001592: 	pxor	%xmm0, %xmm0
    00001596: 	movq	%rax, end_time(%rip)
    0000159d: 	movq	%r13, %rdi
    000015a0: 	subq	start_time(%rip), %rax
    000015a7: 	cvtsi2sd	%rax, %xmm0
    000015ac: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000015b4: 	callq	_Z13record_resultdPKc # Offset: 5556
    000015b9: 	movq	0x1b0(%rsp), %rdi
    000015c1: 	cmpq	0x98(%rsp), %rdi
    000015c9: 	je	.Ltmp4115 # Offset: 5577
    000015cb: 	movq	0x1c0(%rsp), %rax
    000015d3: 	leaq	0x1(%rax), %rsi
    000015d7: 	callq	_ZdlPvm@PLT # Offset: 5591
.Ltmp4115:
    000015dc: 	leaq	DATAat0x3d358(%rip), %rdx
    000015e3: 	movq	%r12, %rsi
    000015e6: 	movq	%r15, %rdi
    000015e9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5609
    000015ee: 	callq	clock@PLT # Offset: 5614
    000015f3: 	movl	iterations(%rip), %edx
    000015f9: 	movq	%rax, start_time(%rip)
    00001600: 	testl	%edx, %edx
    00001602: 	jle	.Ltmp4116 # Offset: 5634
    00001608: 	movq	DATAat0x3d710(%rip), %xmm7
    00001610: 	movsd	0x78(%rsp), %xmm6
    00001616: 	pxor	%xmm3, %xmm3
    0000161a: 	xorl	%r13d, %r13d
    0000161d: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    00001625: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    0000162d: 	movsd	%xmm3, 0x70(%rsp)
    00001633: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000163a: 	unpcklpd	%xmm6, %xmm6
    0000163e: 	movaps	%xmm7, 0x10(%rsp)
    00001643: 	movsd	0x88(%rsp), %xmm7
    0000164c: 	movsd	%xmm4, 0x60(%rsp)
    00001652: 	movsd	0x90(%rsp), %xmm4
    0000165b: 	movsd	%xmm5, 0x28(%rsp)
    00001661: 	unpcklpd	%xmm7, %xmm7
    00001665: 	movsd	0x80(%rsp), %xmm5
    0000166e: 	movaps	%xmm6, (%rsp)
    00001672: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    0000167a: 	unpcklpd	%xmm4, %xmm4
    0000167e: 	unpcklpd	%xmm5, %xmm5
    00001682: 	movaps	%xmm7, 0x40(%rsp)
    00001687: 	movsd	%xmm6, 0x68(%rsp)
    0000168d: 	movaps	%xmm5, 0x30(%rsp)
    00001692: 	movaps	%xmm4, 0x50(%rsp)
    00001697: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4120:
    000016a0: 	movq	%rbp, %rax
    000016a3: 	pxor	%xmm1, %xmm1
    000016a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4117:
    000016b0: 	movapd	(%rax), %xmm0
    000016b4: 	divpd	(%rsp), %xmm0
    000016b9: 	divpd	0x30(%rsp), %xmm0
    000016bf: 	divpd	0x40(%rsp), %xmm0
    000016c5: 	divpd	0x50(%rsp), %xmm0
    000016cb: 	addsd	%xmm0, %xmm1
    000016cf: 	addq	$0x10, %rax
    000016d3: 	unpckhpd	%xmm0, %xmm0
    000016d7: 	addsd	%xmm0, %xmm1
    000016db: 	cmpq	%rax, %rbx
    000016de: 	jne	.Ltmp4117 # Offset: 5854
    000016e0: 	movsd	init_value(%rip), %xmm0
    000016e8: 	movapd	0x10(%rsp), %xmm6
    000016ee: 	divsd	0x78(%rsp), %xmm0
    000016f4: 	movapd	%xmm1, %xmm2
    000016f8: 	divsd	0x80(%rsp), %xmm0
    00001701: 	divsd	0x88(%rsp), %xmm0
    0000170a: 	divsd	0x90(%rsp), %xmm0
    00001713: 	mulsd	0x68(%rsp), %xmm0
    00001719: 	andpd	%xmm1, %xmm6
    0000171d: 	comisd	0x60(%rsp), %xmm6
    00001723: 	subsd	%xmm0, %xmm2
    00001727: 	jbe	.Ltmp4118 # Offset: 5927
    00001729: 	divsd	%xmm1, %xmm2
.Ltmp4118:
    0000172d: 	andpd	0x10(%rsp), %xmm2
    00001733: 	movsd	0x28(%rsp), %xmm5
    00001739: 	comisd	%xmm2, %xmm5
    0000173d: 	jbe	.Ltmp4119 # Offset: 5949
.Ltmp4257:
    00001743: 	addl	$0x1, %r13d
    00001747: 	cmpl	%edx, %r13d
    0000174a: 	jl	.Ltmp4120 # Offset: 5962
.Ltmp4116:
    00001750: 	movq	%r15, %rsi
    00001753: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000175a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5978
    0000175f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001766: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000176d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001774: 	je	.Ltmp4121 # Offset: 6004
.Ltmp4275:
    0000177a: 	movq	-0x20(%rax), %r13
    0000177e: 	callq	clock@PLT # Offset: 6014
    00001783: 	pxor	%xmm0, %xmm0
    00001787: 	movq	%rax, end_time(%rip)
    0000178e: 	movq	%r13, %rdi
    00001791: 	subq	start_time(%rip), %rax
    00001798: 	cvtsi2sd	%rax, %xmm0
    0000179d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000017a5: 	callq	_Z13record_resultdPKc # Offset: 6053
    000017aa: 	movq	0x1b0(%rsp), %rdi
    000017b2: 	cmpq	0x98(%rsp), %rdi
    000017ba: 	je	.Ltmp4122 # Offset: 6074
    000017bc: 	movq	0x1c0(%rsp), %rax
    000017c4: 	leaq	0x1(%rax), %rsi
    000017c8: 	callq	_ZdlPvm@PLT # Offset: 6088
.Ltmp4122:
    000017cd: 	leaq	DATAat0x3d373(%rip), %rdx
    000017d4: 	movq	%r12, %rsi
    000017d7: 	movq	%r15, %rdi
    000017da: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6106
    000017df: 	callq	clock@PLT # Offset: 6111
    000017e4: 	movl	iterations(%rip), %edx
    000017ea: 	movq	%rax, start_time(%rip)
    000017f1: 	testl	%edx, %edx
    000017f3: 	jle	.Ltmp4123 # Offset: 6131
    000017f9: 	movsd	DATAat0x3d6f8(%rip), %xmm3
    00001801: 	pxor	%xmm5, %xmm5
    00001805: 	movsd	0x78(%rsp), %xmm0
    0000180b: 	divsd	0x80(%rsp), %xmm0
    00001814: 	movsd	%xmm5, 0x70(%rsp)
    0000181a: 	xorl	%r13d, %r13d
    0000181d: 	movq	DATAat0x3d710(%rip), %xmm6
    00001825: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    0000182d: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    00001835: 	movsd	%xmm3, 0x68(%rsp)
    0000183b: 	divsd	0x88(%rsp), %xmm0
    00001844: 	movapd	%xmm0, %xmm7
    00001848: 	divsd	0x90(%rsp), %xmm7
    00001851: 	movapd	%xmm7, %xmm3
    00001855: 	movsd	%xmm7, 0x30(%rsp)
    0000185b: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001862: 	unpcklpd	%xmm3, %xmm3
    00001866: 	movaps	%xmm6, 0x10(%rsp)
    0000186b: 	movsd	%xmm4, 0x60(%rsp)
    00001871: 	movsd	%xmm5, 0x28(%rsp)
    00001877: 	movaps	%xmm3, (%rsp)
    0000187b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4127:
    00001880: 	movq	%rbp, %rax
    00001883: 	pxor	%xmm0, %xmm0
    00001887: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4124:
    00001890: 	movapd	(%rsp), %xmm2
    00001895: 	addpd	(%rax), %xmm2
    00001899: 	addq	$0x10, %rax
    0000189d: 	addsd	%xmm2, %xmm0
    000018a1: 	unpckhpd	%xmm2, %xmm2
    000018a5: 	addsd	%xmm2, %xmm0
    000018a9: 	cmpq	%rbx, %rax
    000018ac: 	jne	.Ltmp4124 # Offset: 6316
    000018ae: 	movsd	0x30(%rsp), %xmm2
    000018b4: 	movapd	0x10(%rsp), %xmm7
    000018ba: 	movapd	%xmm0, %xmm1
    000018be: 	addsd	init_value(%rip), %xmm2
    000018c6: 	mulsd	0x68(%rsp), %xmm2
    000018cc: 	andpd	%xmm0, %xmm7
    000018d0: 	comisd	0x60(%rsp), %xmm7
    000018d6: 	subsd	%xmm2, %xmm1
    000018da: 	jbe	.Ltmp4125 # Offset: 6362
    000018dc: 	divsd	%xmm0, %xmm1
.Ltmp4125:
    000018e0: 	andpd	0x10(%rsp), %xmm1
    000018e6: 	movsd	0x28(%rsp), %xmm7
    000018ec: 	comisd	%xmm1, %xmm7
    000018f0: 	jbe	.Ltmp4126 # Offset: 6384
.Ltmp4256:
    000018f6: 	addl	$0x1, %r13d
    000018fa: 	cmpl	%edx, %r13d
    000018fd: 	jl	.Ltmp4127 # Offset: 6397
.Ltmp4123:
    000018ff: 	movq	%r15, %rsi
    00001902: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001909: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6409
    0000190e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001915: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000191c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001923: 	je	.Ltmp4128 # Offset: 6435
.Ltmp4281:
    00001929: 	movq	-0x20(%rax), %r13
    0000192d: 	callq	clock@PLT # Offset: 6445
    00001932: 	pxor	%xmm0, %xmm0
    00001936: 	movq	%rax, end_time(%rip)
    0000193d: 	movq	%r13, %rdi
    00001940: 	subq	start_time(%rip), %rax
    00001947: 	cvtsi2sd	%rax, %xmm0
    0000194c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001954: 	callq	_Z13record_resultdPKc # Offset: 6484
    00001959: 	movq	0x1b0(%rsp), %rdi
    00001961: 	cmpq	0x98(%rsp), %rdi
    00001969: 	je	.Ltmp4129 # Offset: 6505
    0000196b: 	movq	0x1c0(%rsp), %rax
    00001973: 	leaq	0x1(%rax), %rsi
    00001977: 	callq	_ZdlPvm@PLT # Offset: 6519
.Ltmp4129:
    0000197c: 	leaq	DATAat0x3d38f(%rip), %rdx
    00001983: 	movq	%r12, %rsi
    00001986: 	movq	%r15, %rdi
    00001989: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6537
    0000198e: 	callq	clock@PLT # Offset: 6542
    00001993: 	movl	iterations(%rip), %edx
    00001999: 	movq	%rax, start_time(%rip)
    000019a0: 	testl	%edx, %edx
    000019a2: 	jle	.Ltmp4130 # Offset: 6562
    000019a8: 	movsd	0x78(%rsp), %xmm5
    000019ae: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    000019b6: 	pxor	%xmm3, %xmm3
    000019ba: 	xorl	%r13d, %r13d
    000019bd: 	movsd	0x80(%rsp), %xmm0
    000019c6: 	movq	DATAat0x3d710(%rip), %xmm7
    000019ce: 	movsd	%xmm3, 0x70(%rsp)
    000019d4: 	leaq	DATAat0x3d1d8(%rip), %r14
    000019db: 	mulsd	0x88(%rsp), %xmm0
    000019e4: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000019ec: 	movsd	%xmm6, 0x68(%rsp)
    000019f2: 	divsd	0x90(%rsp), %xmm0
    000019fb: 	subsd	%xmm0, %xmm5
    000019ff: 	movaps	%xmm7, 0x10(%rsp)
    00001a04: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00001a0c: 	movsd	%xmm4, 0x60(%rsp)
    00001a12: 	movsd	%xmm3, 0x28(%rsp)
    00001a18: 	movapd	%xmm5, %xmm6
    00001a1c: 	movsd	%xmm5, 0x30(%rsp)
    00001a22: 	unpcklpd	%xmm6, %xmm6
    00001a26: 	movaps	%xmm6, (%rsp)
    00001a2a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4134:
    00001a30: 	movq	%rbp, %rax
    00001a33: 	pxor	%xmm0, %xmm0
    00001a37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4131:
    00001a40: 	movapd	(%rsp), %xmm2
    00001a45: 	addpd	(%rax), %xmm2
    00001a49: 	addq	$0x10, %rax
    00001a4d: 	addsd	%xmm2, %xmm0
    00001a51: 	unpckhpd	%xmm2, %xmm2
    00001a55: 	addsd	%xmm2, %xmm0
    00001a59: 	cmpq	%rbx, %rax
    00001a5c: 	jne	.Ltmp4131 # Offset: 6748
    00001a5e: 	movsd	0x30(%rsp), %xmm2
    00001a64: 	movapd	0x10(%rsp), %xmm5
    00001a6a: 	movapd	%xmm0, %xmm1
    00001a6e: 	addsd	init_value(%rip), %xmm2
    00001a76: 	mulsd	0x68(%rsp), %xmm2
    00001a7c: 	andpd	%xmm0, %xmm5
    00001a80: 	comisd	0x60(%rsp), %xmm5
    00001a86: 	subsd	%xmm2, %xmm1
    00001a8a: 	jbe	.Ltmp4132 # Offset: 6794
    00001a8c: 	divsd	%xmm0, %xmm1
.Ltmp4132:
    00001a90: 	andpd	0x10(%rsp), %xmm1
    00001a96: 	movsd	0x28(%rsp), %xmm6
    00001a9c: 	comisd	%xmm1, %xmm6
    00001aa0: 	jbe	.Ltmp4133 # Offset: 6816
.Ltmp4255:
    00001aa6: 	addl	$0x1, %r13d
    00001aaa: 	cmpl	%edx, %r13d
    00001aad: 	jl	.Ltmp4134 # Offset: 6829
.Ltmp4130:
    00001aaf: 	movq	%r15, %rsi
    00001ab2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ab9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6841
    00001abe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ac5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001acc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ad3: 	je	.Ltmp4135 # Offset: 6867
.Ltmp4280:
    00001ad9: 	movq	-0x20(%rax), %r13
    00001add: 	callq	clock@PLT # Offset: 6877
    00001ae2: 	pxor	%xmm0, %xmm0
    00001ae6: 	movq	%rax, end_time(%rip)
    00001aed: 	movq	%r13, %rdi
    00001af0: 	subq	start_time(%rip), %rax
    00001af7: 	cvtsi2sd	%rax, %xmm0
    00001afc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b04: 	callq	_Z13record_resultdPKc # Offset: 6916
    00001b09: 	movq	0x1b0(%rsp), %rdi
    00001b11: 	cmpq	0x98(%rsp), %rdi
    00001b19: 	je	.Ltmp4136 # Offset: 6937
    00001b1b: 	movq	0x1c0(%rsp), %rax
    00001b23: 	leaq	0x1(%rax), %rsi
    00001b27: 	callq	_ZdlPvm@PLT # Offset: 6951
.Ltmp4136:
    00001b2c: 	leaq	DATAat0x3d3a8(%rip), %rdx
    00001b33: 	movq	%r12, %rsi
    00001b36: 	movq	%r15, %rdi
    00001b39: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6969
    00001b3e: 	callq	clock@PLT # Offset: 6974
    00001b43: 	movl	iterations(%rip), %edx
    00001b49: 	movq	%rax, start_time(%rip)
    00001b50: 	testl	%edx, %edx
    00001b52: 	jle	.Ltmp4137 # Offset: 6994
    00001b58: 	movsd	0x80(%rsp), %xmm0
    00001b61: 	movsd	0x78(%rsp), %xmm5
    00001b67: 	pxor	%xmm4, %xmm4
    00001b6b: 	xorl	%r13d, %r13d
    00001b6e: 	mulsd	0x88(%rsp), %xmm0
    00001b77: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00001b7f: 	movsd	%xmm4, 0x70(%rsp)
    00001b85: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001b8c: 	unpcklpd	%xmm5, %xmm5
    00001b90: 	movq	DATAat0x3d710(%rip), %xmm3
    00001b98: 	movsd	DATAat0x3d6e8(%rip), %xmm4
    00001ba0: 	movaps	%xmm5, (%rsp)
    00001ba4: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    00001bac: 	movsd	%xmm7, 0x60(%rsp)
    00001bb2: 	movsd	%xmm5, 0x68(%rsp)
    00001bb8: 	movapd	%xmm0, %xmm6
    00001bbc: 	movaps	%xmm3, 0x10(%rsp)
    00001bc1: 	divsd	0x90(%rsp), %xmm6
    00001bca: 	movapd	%xmm6, %xmm7
    00001bce: 	unpcklpd	%xmm7, %xmm7
    00001bd2: 	movsd	%xmm6, 0x40(%rsp)
    00001bd8: 	movsd	%xmm4, 0x28(%rsp)
    00001bde: 	movaps	%xmm7, 0x30(%rsp)
    00001be3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4141:
    00001be8: 	movq	%rbp, %rax
    00001beb: 	pxor	%xmm1, %xmm1
    00001bef: 	nop # Size: 1
.Ltmp4138:
    00001bf0: 	movapd	(%rsp), %xmm0
    00001bf5: 	addpd	(%rax), %xmm0
    00001bf9: 	addq	$0x10, %rax
    00001bfd: 	subpd	0x30(%rsp), %xmm0
    00001c03: 	addsd	%xmm0, %xmm1
    00001c07: 	unpckhpd	%xmm0, %xmm0
    00001c0b: 	addsd	%xmm0, %xmm1
    00001c0f: 	cmpq	%rbx, %rax
    00001c12: 	jne	.Ltmp4138 # Offset: 7186
    00001c14: 	movsd	0x78(%rsp), %xmm0
    00001c1a: 	movapd	0x10(%rsp), %xmm3
    00001c20: 	movapd	%xmm1, %xmm2
    00001c24: 	addsd	init_value(%rip), %xmm0
    00001c2c: 	subsd	0x40(%rsp), %xmm0
    00001c32: 	mulsd	0x68(%rsp), %xmm0
    00001c38: 	andpd	%xmm1, %xmm3
    00001c3c: 	comisd	0x60(%rsp), %xmm3
    00001c42: 	subsd	%xmm0, %xmm2
    00001c46: 	jbe	.Ltmp4139 # Offset: 7238
    00001c48: 	divsd	%xmm1, %xmm2
.Ltmp4139:
    00001c4c: 	andpd	0x10(%rsp), %xmm2
    00001c52: 	movsd	0x28(%rsp), %xmm6
    00001c58: 	comisd	%xmm2, %xmm6
    00001c5c: 	jbe	.Ltmp4140 # Offset: 7260
.Ltmp4254:
    00001c62: 	addl	$0x1, %r13d
    00001c66: 	cmpl	%edx, %r13d
    00001c69: 	jl	.Ltmp4141 # Offset: 7273
.Ltmp4137:
    00001c6f: 	movq	%r15, %rsi
    00001c72: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c79: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7289
    00001c7e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c85: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c8c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c93: 	je	.Ltmp4142 # Offset: 7315
.Ltmp4279:
    00001c99: 	movq	-0x20(%rax), %r13
    00001c9d: 	callq	clock@PLT # Offset: 7325
    00001ca2: 	pxor	%xmm0, %xmm0
    00001ca6: 	movq	%rax, end_time(%rip)
    00001cad: 	movq	%r13, %rdi
    00001cb0: 	subq	start_time(%rip), %rax
    00001cb7: 	cvtsi2sd	%rax, %xmm0
    00001cbc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001cc4: 	callq	_Z13record_resultdPKc # Offset: 7364
    00001cc9: 	movq	0x1b0(%rsp), %rdi
    00001cd1: 	cmpq	0x98(%rsp), %rdi
    00001cd9: 	je	.Ltmp4143 # Offset: 7385
    00001cdb: 	movq	0x1c0(%rsp), %rax
    00001ce3: 	leaq	0x1(%rax), %rsi
    00001ce7: 	callq	_ZdlPvm@PLT # Offset: 7399
.Ltmp4143:
    00001cec: 	leaq	0x150(%rsp), %rdi
    00001cf4: 	leaq	DATAat0x3d3c2(%rip), %rdx
    00001cfb: 	movq	%r12, %rsi
    00001cfe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7422
    00001d03: 	movl	iterations(%rip), %edx
    00001d09: 	xorl	%r8d, %r8d
    00001d0c: 	xorl	%ecx, %ecx
    00001d0e: 	movl	$0x1f40, %esi
    00001d13: 	movq	0x150(%rsp), %rdi
    00001d1b: 	callq	_Z9summarizePKciiii # Offset: 7451
    00001d20: 	movsd	init_value(%rip), %xmm1
    00001d28: 	movq	%rbp, %rax
    00001d2b: 	movapd	%xmm1, %xmm0
    00001d2f: 	unpcklpd	%xmm0, %xmm0
    00001d33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4144:
    00001d38: 	movaps	%xmm0, (%rax)
    00001d3b: 	addq	$0x10, %rax
    00001d3f: 	cmpq	%rbx, %rax
    00001d42: 	jne	.Ltmp4144 # Offset: 7490
    00001d44: 	addsd	DATAat0x3d700(%rip), %xmm1
    00001d4c: 	leaq	0x190(%rsp), %r13
    00001d54: 	movq	%r12, %rsi
    00001d57: 	movaps	%xmm0, 0xc0(%rsp)
    00001d5f: 	movq	%r13, %rdi
    00001d62: 	movaps	%xmm0, 0xf0(%rsp)
    00001d6a: 	movups	%xmm0, 0x118(%rsp)
    00001d72: 	cvttsd2si	%xmm1, %edx
    00001d76: 	movslq	%edx, %rax
    00001d79: 	movl	%edx, %ecx
    00001d7b: 	imulq	$0x51eb851f, %rax, %rax
    00001d82: 	sarl	$0x1f, %ecx
    00001d85: 	sarq	$0x24, %rax
    00001d89: 	subl	%ecx, %eax
    00001d8b: 	imull	$0x32, %eax, %eax
    00001d8e: 	subl	%eax, %edx
    00001d90: 	movl	%edx, 0x40(%rsp)
    00001d94: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001d9b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7579
    00001da0: 	callq	clock@PLT # Offset: 7584
    00001da5: 	movl	iterations(%rip), %edx
    00001dab: 	movq	%rax, start_time(%rip)
    00001db2: 	testl	%edx, %edx
    00001db4: 	jle	.Ltmp4145 # Offset: 7604
    00001dba: 	pxor	%xmm6, %xmm6
    00001dbe: 	movslq	0x40(%rsp), %rax
    00001dc3: 	xorl	%r14d, %r14d
    00001dc6: 	movq	DATAat0x3d710(%rip), %xmm5
    00001dce: 	movsd	%xmm6, 0x70(%rsp)
    00001dd4: 	movsd	DATAat0x3d6f8(%rip), %xmm6
    00001ddc: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    00001de4: 	leaq	(%r15,%rax,8), %rax
    00001de8: 	movaps	%xmm5, 0x10(%rsp)
    00001ded: 	movsd	%xmm6, 0x68(%rsp)
    00001df3: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00001dfb: 	movq	%rax, (%rsp)
    00001dff: 	movsd	%xmm3, 0x60(%rsp)
    00001e05: 	movsd	%xmm6, 0x28(%rsp)
    00001e0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4149:
    00001e10: 	movsd	0x68(%rsp), %xmm2
    00001e16: 	movq	%rbp, %rax
    00001e19: 	pxor	%xmm0, %xmm0
    00001e1d: 	mulsd	init_value(%rip), %xmm2
    00001e25: 	nopl	(%rax) # Size: 3
.Ltmp4146:
    00001e28: 	movsd	(%rax), %xmm1
    00001e2c: 	addq	$0x10, %rax
    00001e30: 	addsd	%xmm1, %xmm0
    00001e34: 	movsd	-0x8(%rax), %xmm1
    00001e39: 	addsd	%xmm1, %xmm0
    00001e3d: 	cmpq	%rax, %rbx
    00001e40: 	jne	.Ltmp4146 # Offset: 7744
    00001e42: 	movapd	0x10(%rsp), %xmm4
    00001e48: 	movq	(%rsp), %rax
    00001e4c: 	movapd	%xmm0, %xmm1
    00001e50: 	subsd	%xmm2, %xmm1
    00001e54: 	andpd	%xmm0, %xmm4
    00001e58: 	comisd	0x60(%rsp), %xmm4
    00001e5e: 	movsd	%xmm0, (%rax)
    00001e62: 	jbe	.Ltmp4147 # Offset: 7778
    00001e64: 	divsd	%xmm0, %xmm1
.Ltmp4147:
    00001e68: 	andpd	0x10(%rsp), %xmm1
    00001e6e: 	movsd	0x28(%rsp), %xmm3
    00001e74: 	comisd	%xmm1, %xmm3
    00001e78: 	jbe	.Ltmp4148 # Offset: 7800
.Ltmp4253:
    00001e7e: 	addl	$0x1, %r14d
    00001e82: 	cmpl	%edx, %r14d
    00001e85: 	jl	.Ltmp4149 # Offset: 7813
.Ltmp4145:
    00001e87: 	movq	%r13, %rsi
    00001e8a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e91: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7825
    00001e96: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e9d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001ea4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001eab: 	je	.Ltmp4150 # Offset: 7851
.Ltmp4278:
    00001eb1: 	movq	-0x20(%rax), %r14
    00001eb5: 	callq	clock@PLT # Offset: 7861
    00001eba: 	pxor	%xmm0, %xmm0
    00001ebe: 	movq	%rax, end_time(%rip)
    00001ec5: 	movq	%r14, %rdi
    00001ec8: 	subq	start_time(%rip), %rax
    00001ecf: 	cvtsi2sd	%rax, %xmm0
    00001ed4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001edc: 	callq	_Z13record_resultdPKc # Offset: 7900
    00001ee1: 	movq	0x190(%rsp), %rdi
    00001ee9: 	leaq	0x1a0(%rsp), %rax
    00001ef1: 	movq	%rax, 0x30(%rsp)
    00001ef6: 	cmpq	%rax, %rdi
    00001ef9: 	je	.Ltmp4151 # Offset: 7929
    00001efb: 	movq	0x1a0(%rsp), %rax
    00001f03: 	leaq	0x1(%rax), %rsi
    00001f07: 	callq	_ZdlPvm@PLT # Offset: 7943
.Ltmp4151:
    00001f0c: 	leaq	DATAat0x3d3eb(%rip), %rdx
    00001f13: 	movq	%r12, %rsi
    00001f16: 	movq	%r13, %rdi
    00001f19: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7961
    00001f1e: 	callq	clock@PLT # Offset: 7966
    00001f23: 	movl	iterations(%rip), %edx
    00001f29: 	movq	%rax, start_time(%rip)
    00001f30: 	testl	%edx, %edx
    00001f32: 	jle	.Ltmp4152 # Offset: 7986
    00001f38: 	movslq	0x40(%rsp), %rax
    00001f3d: 	movsd	DATAat0x3d6f8(%rip), %xmm4
    00001f45: 	pxor	%xmm7, %xmm7
    00001f49: 	xorl	%r14d, %r14d
    00001f4c: 	movq	DATAat0x3d710(%rip), %xmm5
    00001f54: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    00001f5c: 	movsd	%xmm7, 0x70(%rsp)
    00001f62: 	leaq	(%r15,%rax,8), %rax
    00001f66: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00001f6e: 	movsd	%xmm4, 0x68(%rsp)
    00001f74: 	movq	%rax, (%rsp)
    00001f78: 	movaps	%xmm5, 0x10(%rsp)
    00001f7d: 	movsd	%xmm3, 0x60(%rsp)
    00001f83: 	movsd	%xmm6, 0x28(%rsp)
    00001f89: 	nopl	(%rax) # Size: 7
.Ltmp4156:
    00001f90: 	movsd	0x68(%rsp), %xmm2
    00001f96: 	movq	%rbp, %rax
    00001f99: 	pxor	%xmm0, %xmm0
    00001f9d: 	mulsd	init_value(%rip), %xmm2
    00001fa5: 	nopl	(%rax) # Size: 3
.Ltmp4153:
    00001fa8: 	movsd	(%rax), %xmm1
    00001fac: 	addq	$0x10, %rax
    00001fb0: 	addsd	%xmm1, %xmm0
    00001fb4: 	movsd	-0x8(%rax), %xmm1
    00001fb9: 	addsd	%xmm1, %xmm0
    00001fbd: 	cmpq	%rbx, %rax
    00001fc0: 	jne	.Ltmp4153 # Offset: 8128
    00001fc2: 	movapd	0x10(%rsp), %xmm6
    00001fc8: 	movq	(%rsp), %rax
    00001fcc: 	movapd	%xmm0, %xmm1
    00001fd0: 	subsd	%xmm2, %xmm1
    00001fd4: 	andpd	%xmm0, %xmm6
    00001fd8: 	comisd	0x60(%rsp), %xmm6
    00001fde: 	movsd	%xmm0, (%rax)
    00001fe2: 	jbe	.Ltmp4154 # Offset: 8162
    00001fe4: 	divsd	%xmm0, %xmm1
.Ltmp4154:
    00001fe8: 	andpd	0x10(%rsp), %xmm1
    00001fee: 	movsd	0x28(%rsp), %xmm7
    00001ff4: 	comisd	%xmm1, %xmm7
    00001ff8: 	jbe	.Ltmp4155 # Offset: 8184
.Ltmp4252:
    00001ffe: 	addl	$0x1, %r14d
    00002002: 	cmpl	%edx, %r14d
    00002005: 	jl	.Ltmp4156 # Offset: 8197
.Ltmp4152:
    00002007: 	movq	%r13, %rsi
    0000200a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002011: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8209
    00002016: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000201d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002024: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000202b: 	je	.Ltmp4157 # Offset: 8235
.Ltmp4288:
    00002031: 	movq	-0x20(%rax), %r14
    00002035: 	callq	clock@PLT # Offset: 8245
    0000203a: 	pxor	%xmm0, %xmm0
    0000203e: 	movq	%rax, end_time(%rip)
    00002045: 	movq	%r14, %rdi
    00002048: 	subq	start_time(%rip), %rax
    0000204f: 	cvtsi2sd	%rax, %xmm0
    00002054: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000205c: 	callq	_Z13record_resultdPKc # Offset: 8284
    00002061: 	movq	0x190(%rsp), %rdi
    00002069: 	cmpq	0x30(%rsp), %rdi
    0000206e: 	je	.Ltmp4158 # Offset: 8302
    00002070: 	movq	0x1a0(%rsp), %rax
    00002078: 	leaq	0x1(%rax), %rsi
    0000207c: 	callq	_ZdlPvm@PLT # Offset: 8316
.Ltmp4158:
    00002081: 	leaq	DATAat0x3d400(%rip), %rdx
    00002088: 	movq	%r12, %rsi
    0000208b: 	movq	%r13, %rdi
    0000208e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8334
    00002093: 	callq	clock@PLT # Offset: 8339
    00002098: 	movl	iterations(%rip), %edx
    0000209e: 	movq	%rax, start_time(%rip)
    000020a5: 	testl	%edx, %edx
    000020a7: 	jle	.Ltmp4159 # Offset: 8359
    000020ad: 	movsd	DATAat0x3d6f8(%rip), %xmm4
    000020b5: 	pxor	%xmm7, %xmm7
    000020b9: 	xorl	%r14d, %r14d
    000020bc: 	movq	DATAat0x3d710(%rip), %xmm5
    000020c4: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    000020cc: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    000020d4: 	movsd	%xmm7, 0x70(%rsp)
    000020da: 	movsd	%xmm4, 0x68(%rsp)
    000020e0: 	movaps	%xmm5, 0x10(%rsp)
    000020e5: 	movsd	%xmm3, 0x60(%rsp)
    000020eb: 	movsd	%xmm6, 0x28(%rsp)
    000020f1: 	nopl	(%rax) # Size: 7
.Ltmp4163:
    000020f8: 	movsd	0x68(%rsp), %xmm2
    000020fe: 	movq	%rbp, %rax
    00002101: 	pxor	%xmm0, %xmm0
    00002105: 	mulsd	init_value(%rip), %xmm2
    0000210d: 	nopl	(%rax) # Size: 3
.Ltmp4160:
    00002110: 	movsd	(%rax), %xmm1
    00002114: 	addq	$0x10, %rax
    00002118: 	addsd	%xmm1, %xmm0
    0000211c: 	movsd	-0x8(%rax), %xmm1
    00002121: 	addsd	%xmm1, %xmm0
    00002125: 	cmpq	%rbx, %rax
    00002128: 	jne	.Ltmp4160 # Offset: 8488
    0000212a: 	movapd	0x10(%rsp), %xmm7
    00002130: 	movapd	%xmm0, %xmm1
    00002134: 	movsd	%xmm0, 0xf0(%rsp)
    0000213d: 	subsd	%xmm2, %xmm1
    00002141: 	andpd	%xmm0, %xmm7
    00002145: 	comisd	0x60(%rsp), %xmm7
    0000214b: 	jbe	.Ltmp4161 # Offset: 8523
    0000214d: 	divsd	%xmm0, %xmm1
.Ltmp4161:
    00002151: 	andpd	0x10(%rsp), %xmm1
    00002157: 	movsd	0x28(%rsp), %xmm4
    0000215d: 	comisd	%xmm1, %xmm4
    00002161: 	jbe	.Ltmp4162 # Offset: 8545
.Ltmp4251:
    00002167: 	addl	$0x1, %r14d
    0000216b: 	cmpl	%edx, %r14d
    0000216e: 	jl	.Ltmp4163 # Offset: 8558
.Ltmp4159:
    00002170: 	movq	%r13, %rsi
    00002173: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000217a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8570
    0000217f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002186: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000218d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002194: 	je	.Ltmp4164 # Offset: 8596
.Ltmp4284:
    0000219a: 	movq	-0x20(%rax), %r14
    0000219e: 	callq	clock@PLT # Offset: 8606
    000021a3: 	pxor	%xmm0, %xmm0
    000021a7: 	movq	%rax, end_time(%rip)
    000021ae: 	movq	%r14, %rdi
    000021b1: 	subq	start_time(%rip), %rax
    000021b8: 	cvtsi2sd	%rax, %xmm0
    000021bd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000021c5: 	callq	_Z13record_resultdPKc # Offset: 8645
    000021ca: 	movq	0x190(%rsp), %rdi
    000021d2: 	cmpq	0x30(%rsp), %rdi
    000021d7: 	je	.Ltmp4165 # Offset: 8663
    000021d9: 	movq	0x1a0(%rsp), %rax
    000021e1: 	leaq	0x1(%rax), %rsi
    000021e5: 	callq	_ZdlPvm@PLT # Offset: 8677
.Ltmp4165:
    000021ea: 	leaq	DATAat0x3d41a(%rip), %rdx
    000021f1: 	movq	%r12, %rsi
    000021f4: 	movq	%r13, %rdi
    000021f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8695
    000021fc: 	callq	clock@PLT # Offset: 8700
    00002201: 	movl	iterations(%rip), %edx
    00002207: 	movq	%rax, start_time(%rip)
    0000220e: 	testl	%edx, %edx
    00002210: 	jle	.Ltmp4166 # Offset: 8720
    00002216: 	movsd	DATAat0x3d6f8(%rip), %xmm4
    0000221e: 	pxor	%xmm7, %xmm7
    00002222: 	xorl	%r14d, %r14d
    00002225: 	movq	DATAat0x3d710(%rip), %xmm5
    0000222d: 	movsd	DATAat0x3d6e0(%rip), %xmm3
    00002235: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    0000223d: 	movsd	%xmm7, 0x70(%rsp)
    00002243: 	movsd	%xmm4, 0x68(%rsp)
    00002249: 	movaps	%xmm5, 0x10(%rsp)
    0000224e: 	movsd	%xmm3, 0x60(%rsp)
    00002254: 	movsd	%xmm6, 0x28(%rsp)
    0000225a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4170:
    00002260: 	movsd	0x68(%rsp), %xmm2
    00002266: 	movq	%rbp, %rax
    00002269: 	pxor	%xmm0, %xmm0
    0000226d: 	mulsd	init_value(%rip), %xmm2
    00002275: 	nopl	(%rax) # Size: 3
.Ltmp4167:
    00002278: 	movsd	(%rax), %xmm1
    0000227c: 	addq	$0x10, %rax
    00002280: 	addsd	%xmm1, %xmm0
    00002284: 	movsd	-0x8(%rax), %xmm1
    00002289: 	addsd	%xmm1, %xmm0
    0000228d: 	cmpq	%rbx, %rax
    00002290: 	jne	.Ltmp4167 # Offset: 8848
    00002292: 	movapd	0x10(%rsp), %xmm5
    00002298: 	movapd	%xmm0, %xmm1
    0000229c: 	movsd	%xmm0, 0xf0(%rsp)
    000022a5: 	subsd	%xmm2, %xmm1
    000022a9: 	andpd	%xmm0, %xmm5
    000022ad: 	comisd	0x60(%rsp), %xmm5
    000022b3: 	jbe	.Ltmp4168 # Offset: 8883
    000022b5: 	divsd	%xmm0, %xmm1
.Ltmp4168:
    000022b9: 	andpd	0x10(%rsp), %xmm1
    000022bf: 	movsd	0x28(%rsp), %xmm5
    000022c5: 	comisd	%xmm1, %xmm5
    000022c9: 	jbe	.Ltmp4169 # Offset: 8905
.Ltmp4246:
    000022cf: 	addl	$0x1, %r14d
    000022d3: 	cmpl	%edx, %r14d
    000022d6: 	jl	.Ltmp4170 # Offset: 8918
.Ltmp4166:
    000022d8: 	movq	%r13, %rsi
    000022db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8930
    000022e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000022f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022fc: 	je	.Ltmp4171 # Offset: 8956
.Ltmp4282:
    00002302: 	movq	-0x20(%rax), %r14
    00002306: 	callq	clock@PLT # Offset: 8966
    0000230b: 	pxor	%xmm0, %xmm0
    0000230f: 	movq	%rax, end_time(%rip)
    00002316: 	movq	%r14, %rdi
    00002319: 	subq	start_time(%rip), %rax
    00002320: 	cvtsi2sd	%rax, %xmm0
    00002325: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000232d: 	callq	_Z13record_resultdPKc # Offset: 9005
    00002332: 	movq	0x190(%rsp), %rdi
    0000233a: 	cmpq	0x30(%rsp), %rdi
    0000233f: 	je	.Ltmp4172 # Offset: 9023
    00002341: 	movq	0x1a0(%rsp), %rax
    00002349: 	leaq	0x1(%rax), %rsi
    0000234d: 	callq	_ZdlPvm@PLT # Offset: 9037
.Ltmp4172:
    00002352: 	leaq	DATAat0x3d430(%rip), %rdx
    00002359: 	movq	%r12, %rsi
    0000235c: 	movq	%r13, %rdi
    0000235f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9055
    00002364: 	movl	0x40(%rsp), %edx
    00002368: 	movq	%r13, %rcx
    0000236b: 	movl	$0x1f40, %esi
    00002370: 	movq	%rbp, %rdi
    00002373: 	callq	_Z23test_array_const_in_optIdEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9075
    00002378: 	movq	0x190(%rsp), %rdi
    00002380: 	cmpq	0x30(%rsp), %rdi
    00002385: 	je	.Ltmp4173 # Offset: 9093
    00002387: 	movq	0x1a0(%rsp), %rax
    0000238f: 	leaq	0x1(%rax), %rsi
    00002393: 	callq	_ZdlPvm@PLT # Offset: 9107
.Ltmp4173:
    00002398: 	leaq	DATAat0x3d448(%rip), %rdx
    0000239f: 	movq	%r12, %rsi
    000023a2: 	movq	%r13, %rdi
    000023a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9125
    000023aa: 	callq	clock@PLT # Offset: 9130
    000023af: 	movl	iterations(%rip), %edx
    000023b5: 	movq	%rax, start_time(%rip)
    000023bc: 	testl	%edx, %edx
    000023be: 	jle	.Ltmp4174 # Offset: 9150
    000023c4: 	movslq	0x40(%rsp), %rax
    000023c9: 	pxor	%xmm4, %xmm4
    000023cd: 	xorl	%ebx, %ebx
    000023cf: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    000023d7: 	movq	DATAat0x3d710(%rip), %xmm3
    000023df: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    000023e7: 	movsd	%xmm4, 0x70(%rsp)
    000023ed: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000023f4: 	movsd	0x340(%rsp,%rax,8), %xmm7
    000023fd: 	movsd	%xmm5, 0x68(%rsp)
    00002403: 	movaps	%xmm3, 0x10(%rsp)
    00002408: 	movsd	%xmm7, (%rsp)
    0000240d: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    00002415: 	movsd	%xmm6, 0x60(%rsp)
    0000241b: 	movsd	%xmm7, 0x28(%rsp)
    00002421: 	nopl	(%rax) # Size: 7
.Ltmp4178:
    00002428: 	movsd	0x68(%rsp), %xmm2
    0000242e: 	movl	$0x1f40, %eax
    00002433: 	pxor	%xmm0, %xmm0
    00002437: 	mulsd	init_value(%rip), %xmm2
    0000243f: 	nop # Size: 1
.Ltmp4175:
    00002440: 	addsd	(%rsp), %xmm0
    00002445: 	subl	$0x1, %eax
    00002448: 	jne	.Ltmp4175 # Offset: 9288
    0000244a: 	movapd	0x10(%rsp), %xmm3
    00002450: 	movapd	%xmm0, %xmm1
    00002454: 	subsd	%xmm2, %xmm1
    00002458: 	andpd	%xmm0, %xmm3
    0000245c: 	comisd	0x60(%rsp), %xmm3
    00002462: 	jbe	.Ltmp4176 # Offset: 9314
    00002464: 	divsd	%xmm0, %xmm1
.Ltmp4176:
    00002468: 	andpd	0x10(%rsp), %xmm1
    0000246e: 	movsd	0x28(%rsp), %xmm6
    00002474: 	comisd	%xmm1, %xmm6
    00002478: 	jbe	.Ltmp4177 # Offset: 9336
.Ltmp4244:
    0000247e: 	addl	$0x1, %ebx
    00002481: 	cmpl	%edx, %ebx
    00002483: 	jl	.Ltmp4178 # Offset: 9347
.Ltmp4174:
    00002485: 	movq	%r13, %rsi
    00002488: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000248f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9359
    00002494: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000249b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000024a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000024a9: 	je	.Ltmp4179 # Offset: 9385
.Ltmp4277:
    000024af: 	movq	-0x20(%rax), %rbp
    000024b3: 	callq	clock@PLT # Offset: 9395
    000024b8: 	pxor	%xmm0, %xmm0
    000024bc: 	movq	%rax, end_time(%rip)
    000024c3: 	movq	%rbp, %rdi
    000024c6: 	subq	start_time(%rip), %rax
    000024cd: 	cvtsi2sd	%rax, %xmm0
    000024d2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000024da: 	callq	_Z13record_resultdPKc # Offset: 9434
    000024df: 	movq	0x190(%rsp), %rdi
    000024e7: 	cmpq	0x30(%rsp), %rdi
    000024ec: 	je	.Ltmp4180 # Offset: 9452
    000024ee: 	movq	0x1a0(%rsp), %rax
    000024f6: 	leaq	0x1(%rax), %rsi
    000024fa: 	callq	_ZdlPvm@PLT # Offset: 9466
.Ltmp4180:
    000024ff: 	movsd	init_value(%rip), %xmm3
    00002507: 	leaq	DATAat0x3d45c(%rip), %rdx
    0000250e: 	movq	%r12, %rsi
    00002511: 	movq	%r13, %rdi
    00002514: 	movsd	%xmm3, (%rsp)
    00002519: 	movsd	%xmm3, 0xf0(%rsp)
    00002522: 	movsd	%xmm3, 0xc0(%rsp)
    0000252b: 	movsd	%xmm3, 0x120(%rsp)
    00002534: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9524
    00002539: 	movq	0xa0(%rsp), %rdi
    00002541: 	movq	%r13, %rdx
    00002544: 	movl	$0x1f40, %esi
    00002549: 	callq	_Z24test_struct_const_in_optId13simple_structIdEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 9545
    0000254e: 	movq	0x190(%rsp), %rdi
    00002556: 	cmpq	0x30(%rsp), %rdi
    0000255b: 	je	.Ltmp4181 # Offset: 9563
    0000255d: 	movq	0x1a0(%rsp), %rax
    00002565: 	leaq	0x1(%rax), %rsi
    00002569: 	callq	_ZdlPvm@PLT # Offset: 9577
.Ltmp4181:
    0000256e: 	leaq	DATAat0x3d475(%rip), %rdx
    00002575: 	movq	%r12, %rsi
    00002578: 	movq	%r13, %rdi
    0000257b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9595
    00002580: 	callq	clock@PLT # Offset: 9600
    00002585: 	movl	iterations(%rip), %edx
    0000258b: 	movq	%rax, start_time(%rip)
    00002592: 	testl	%edx, %edx
    00002594: 	jle	.Ltmp4182 # Offset: 9620
    0000259a: 	movsd	DATAat0x3d6f8(%rip), %xmm5
    000025a2: 	pxor	%xmm4, %xmm4
    000025a6: 	xorl	%ebx, %ebx
    000025a8: 	movq	DATAat0x3d710(%rip), %xmm3
    000025b0: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    000025b8: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    000025c0: 	movsd	%xmm4, 0x70(%rsp)
    000025c6: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000025cd: 	movsd	%xmm5, 0x68(%rsp)
    000025d3: 	movaps	%xmm3, 0x10(%rsp)
    000025d8: 	movsd	%xmm6, 0x60(%rsp)
    000025de: 	movsd	%xmm7, 0x28(%rsp)
    000025e4: 	nopl	(%rax) # Size: 4
.Ltmp4186:
    000025e8: 	movsd	0x68(%rsp), %xmm2
    000025ee: 	movl	$0x1f40, %eax
    000025f3: 	pxor	%xmm0, %xmm0
    000025f7: 	mulsd	init_value(%rip), %xmm2
    000025ff: 	nop # Size: 1
.Ltmp4183:
    00002600: 	addsd	(%rsp), %xmm0
    00002605: 	subl	$0x1, %eax
    00002608: 	jne	.Ltmp4183 # Offset: 9736
    0000260a: 	movapd	0x10(%rsp), %xmm4
    00002610: 	movapd	%xmm0, %xmm1
    00002614: 	subsd	%xmm2, %xmm1
    00002618: 	andpd	%xmm0, %xmm4
    0000261c: 	comisd	0x60(%rsp), %xmm4
    00002622: 	jbe	.Ltmp4184 # Offset: 9762
    00002624: 	divsd	%xmm0, %xmm1
.Ltmp4184:
    00002628: 	andpd	0x10(%rsp), %xmm1
    0000262e: 	movsd	0x28(%rsp), %xmm3
    00002634: 	comisd	%xmm1, %xmm3
    00002638: 	jbe	.Ltmp4185 # Offset: 9784
.Ltmp4243:
    0000263e: 	addl	$0x1, %ebx
    00002641: 	cmpl	%edx, %ebx
    00002643: 	jl	.Ltmp4186 # Offset: 9795
.Ltmp4182:
    00002645: 	movq	%r13, %rsi
    00002648: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000264f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9807
    00002654: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000265b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002662: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002669: 	je	.Ltmp4187 # Offset: 9833
.Ltmp4269:
    0000266f: 	movq	-0x20(%rax), %rbp
    00002673: 	callq	clock@PLT # Offset: 9843
    00002678: 	pxor	%xmm0, %xmm0
    0000267c: 	movq	%rax, end_time(%rip)
    00002683: 	movq	%rbp, %rdi
    00002686: 	subq	start_time(%rip), %rax
    0000268d: 	cvtsi2sd	%rax, %xmm0
    00002692: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000269a: 	callq	_Z13record_resultdPKc # Offset: 9882
    0000269f: 	movq	0x190(%rsp), %rdi
    000026a7: 	cmpq	0x30(%rsp), %rdi
    000026ac: 	je	.Ltmp4188 # Offset: 9900
    000026ae: 	movq	0x1a0(%rsp), %rax
    000026b6: 	leaq	0x1(%rax), %rsi
    000026ba: 	callq	_ZdlPvm@PLT # Offset: 9914
.Ltmp4188:
    000026bf: 	leaq	DATAat0x3d48a(%rip), %rdx
    000026c6: 	movq	%r12, %rsi
    000026c9: 	movq	%r13, %rdi
    000026cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9932
    000026d1: 	callq	clock@PLT # Offset: 9937
    000026d6: 	movq	%rax, start_time(%rip)
    000026dd: 	movl	iterations(%rip), %eax
    000026e3: 	testl	%eax, %eax
    000026e5: 	jle	.Ltmp4189 # Offset: 9957
    000026eb: 	movsd	0xfd38(%rsp), %xmm7
    000026f4: 	movq	DATAat0x3d710(%rip), %xmm4
    000026fc: 	movsd	DATAat0x3d6e0(%rip), %xmm5
    00002704: 	movslq	0x40(%rsp), %rdx
    00002709: 	movapd	%xmm7, %xmm0
    0000270d: 	movsd	%xmm7, (%rsp)
    00002712: 	subsd	%xmm7, %xmm0
    00002716: 	andpd	%xmm4, %xmm7
    0000271a: 	leaq	(%r15,%rdx,8), %rbp
    0000271e: 	movaps	%xmm4, 0x10(%rsp)
    00002723: 	comisd	%xmm5, %xmm7
    00002727: 	ja	.Ltmp4190 # Offset: 10023
    0000272d: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    00002735: 	andpd	%xmm4, %xmm0
    00002739: 	xorl	%ebx, %ebx
    0000273b: 	leaq	DATAat0x3d1c8(%rip), %r14
    00002742: 	movsd	%xmm0, 0x10(%rsp)
    00002748: 	movsd	%xmm6, 0x28(%rsp)
    0000274e: 	jmp	.Ltmp4191 # Offset: 10062
.Ltmp4192:
    00002750: 	addl	$0x1, %ebx
    00002753: 	cmpl	%eax, %ebx
    00002755: 	jge	.Ltmp4189 # Offset: 10069
.Ltmp4191:
    00002757: 	movsd	0x28(%rsp), %xmm3
    0000275d: 	comisd	0x10(%rsp), %xmm3
    00002763: 	movsd	(%rsp), %xmm5
    00002768: 	movsd	%xmm5, (%rbp)
    0000276d: 	ja	.Ltmp4192 # Offset: 10093
    0000276f: 	movq	0x190(%rsp), %rdx
    00002777: 	movq	%r14, %rsi
    0000277a: 	movl	$0x1, %edi
    0000277f: 	xorl	%eax, %eax
    00002781: 	callq	__printf_chk@PLT # Offset: 10113
    00002786: 	movl	iterations(%rip), %eax
    0000278c: 	addl	$0x1, %ebx
    0000278f: 	cmpl	%eax, %ebx
    00002791: 	jl	.Ltmp4191 # Offset: 10129
    00002793: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4189:
    00002798: 	movq	%r13, %rsi
    0000279b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000027a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10146
    000027a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000027ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000027b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000027bc: 	je	.Ltmp4193 # Offset: 10172
.Ltmp4268:
    000027c2: 	movq	-0x20(%rax), %rbp
    000027c6: 	callq	clock@PLT # Offset: 10182
    000027cb: 	pxor	%xmm0, %xmm0
    000027cf: 	movq	%rax, end_time(%rip)
    000027d6: 	movq	%rbp, %rdi
    000027d9: 	subq	start_time(%rip), %rax
    000027e0: 	cvtsi2sd	%rax, %xmm0
    000027e5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000027ed: 	callq	_Z13record_resultdPKc # Offset: 10221
    000027f2: 	movq	0x190(%rsp), %rdi
    000027fa: 	cmpq	0x30(%rsp), %rdi
    000027ff: 	je	.Ltmp4194 # Offset: 10239
    00002801: 	movq	0x1a0(%rsp), %rax
    00002809: 	leaq	0x1(%rax), %rsi
    0000280d: 	callq	_ZdlPvm@PLT # Offset: 10253
.Ltmp4194:
    00002812: 	leaq	DATAat0x3d49d(%rip), %rdx
    00002819: 	movq	%r12, %rsi
    0000281c: 	movq	%r13, %rdi
    0000281f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10271
    00002824: 	callq	clock@PLT # Offset: 10276
    00002829: 	movq	%rax, start_time(%rip)
    00002830: 	movl	iterations(%rip), %eax
    00002836: 	testl	%eax, %eax
    00002838: 	jle	.Ltmp4195 # Offset: 10296
    0000283e: 	movsd	0xfd38(%rsp), %xmm4
    00002847: 	movslq	0x40(%rsp), %rdx
    0000284c: 	xorl	%ebx, %ebx
    0000284e: 	movq	DATAat0x3d710(%rip), %xmm3
    00002856: 	movsd	DATAat0x3d6e0(%rip), %xmm6
    0000285e: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    00002866: 	leaq	(%r15,%rdx,8), %r14
    0000286a: 	movsd	%xmm4, (%rsp)
    0000286f: 	leaq	DATAat0x3d1c8(%rip), %r15
    00002876: 	movaps	%xmm3, 0x10(%rsp)
    0000287b: 	movapd	%xmm4, %xmm3
    0000287f: 	subsd	%xmm4, %xmm3
    00002883: 	movsd	%xmm6, 0x60(%rsp)
    00002889: 	movsd	%xmm7, 0x28(%rsp)
    0000288f: 	movq	%xmm3, %rbp
    00002894: 	jmp	.Ltmp4196 # Offset: 10388
    00002896: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4198:
    000028a0: 	addl	$0x1, %ebx
    000028a3: 	cmpl	%eax, %ebx
    000028a5: 	jge	.Ltmp4195 # Offset: 10405
.Ltmp4196:
    000028a7: 	movsd	(%rsp), %xmm6
    000028ac: 	movq	%rbp, %xmm0
    000028b1: 	movapd	%xmm6, %xmm1
    000028b5: 	andpd	0x10(%rsp), %xmm1
    000028bb: 	movsd	%xmm6, (%r14)
    000028c0: 	comisd	0x60(%rsp), %xmm1
    000028c6: 	jbe	.Ltmp4197 # Offset: 10438
    000028c8: 	divsd	%xmm6, %xmm0
.Ltmp4197:
    000028cc: 	andpd	0x10(%rsp), %xmm0
    000028d2: 	movsd	0x28(%rsp), %xmm5
    000028d8: 	comisd	%xmm0, %xmm5
    000028dc: 	ja	.Ltmp4198 # Offset: 10460
    000028de: 	movq	0x190(%rsp), %rdx
    000028e6: 	movq	%r15, %rsi
    000028e9: 	movl	$0x1, %edi
    000028ee: 	xorl	%eax, %eax
    000028f0: 	callq	__printf_chk@PLT # Offset: 10480
    000028f5: 	movl	iterations(%rip), %eax
    000028fb: 	addl	$0x1, %ebx
    000028fe: 	cmpl	%eax, %ebx
    00002900: 	jl	.Ltmp4196 # Offset: 10496
.Ltmp4195:
    00002902: 	movq	%r13, %rsi
    00002905: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000290c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10508
    00002911: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002918: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000291f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002926: 	je	.Ltmp4199 # Offset: 10534
.Ltmp4267:
    0000292c: 	movq	-0x20(%rax), %rbp
    00002930: 	callq	clock@PLT # Offset: 10544
    00002935: 	pxor	%xmm0, %xmm0
    00002939: 	movq	%rax, end_time(%rip)
    00002940: 	movq	%rbp, %rdi
    00002943: 	subq	start_time(%rip), %rax
    0000294a: 	cvtsi2sd	%rax, %xmm0
    0000294f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002957: 	callq	_Z13record_resultdPKc # Offset: 10583
    0000295c: 	movq	0x190(%rsp), %rdi
    00002964: 	cmpq	0x30(%rsp), %rdi
    00002969: 	je	.Ltmp4200 # Offset: 10601
    0000296b: 	movq	0x1a0(%rsp), %rax
    00002973: 	leaq	0x1(%rax), %rsi
    00002977: 	callq	_ZdlPvm@PLT # Offset: 10615
.Ltmp4200:
    0000297c: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00002983: 	movq	%r12, %rsi
    00002986: 	movq	%r13, %rdi
    00002989: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10633
    0000298e: 	callq	clock@PLT # Offset: 10638
    00002993: 	movq	%rax, start_time(%rip)
    0000299a: 	movl	iterations(%rip), %eax
    000029a0: 	testl	%eax, %eax
    000029a2: 	jle	.Ltmp4201 # Offset: 10658
    000029a8: 	movq	DATAat0x3d710(%rip), %xmm3
    000029b0: 	movsd	DATAat0x3d6e0(%rip), %xmm4
    000029b8: 	movsd	0xfd38(%rsp), %xmm5
    000029c1: 	movaps	%xmm3, 0x10(%rsp)
    000029c6: 	movapd	%xmm5, %xmm0
    000029ca: 	movsd	%xmm5, (%rsp)
    000029cf: 	subsd	%xmm5, %xmm0
    000029d3: 	andpd	%xmm3, %xmm5
    000029d7: 	comisd	%xmm4, %xmm5
    000029db: 	ja	.Ltmp4202 # Offset: 10715
    000029e1: 	movsd	DATAat0x3d6e8(%rip), %xmm6
    000029e9: 	andpd	%xmm3, %xmm0
    000029ed: 	xorl	%ebx, %ebx
    000029ef: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000029f6: 	movsd	%xmm0, 0x10(%rsp)
    000029fc: 	movsd	%xmm6, 0x28(%rsp)
    00002a02: 	jmp	.Ltmp4203 # Offset: 10754
    00002a04: 	nopl	(%rax) # Size: 4
.Ltmp4204:
    00002a08: 	addl	$0x1, %ebx
    00002a0b: 	cmpl	%eax, %ebx
    00002a0d: 	jge	.Ltmp4201 # Offset: 10765
.Ltmp4203:
    00002a0f: 	movsd	0x28(%rsp), %xmm4
    00002a15: 	comisd	0x10(%rsp), %xmm4
    00002a1b: 	movsd	(%rsp), %xmm3
    00002a20: 	movsd	%xmm3, 0xf0(%rsp)
    00002a29: 	ja	.Ltmp4204 # Offset: 10793
    00002a2b: 	movq	0x190(%rsp), %rdx
    00002a33: 	movq	%rbp, %rsi
    00002a36: 	movl	$0x1, %edi
    00002a3b: 	xorl	%eax, %eax
    00002a3d: 	callq	__printf_chk@PLT # Offset: 10813
    00002a42: 	movl	iterations(%rip), %eax
    00002a48: 	addl	$0x1, %ebx
    00002a4b: 	cmpl	%eax, %ebx
    00002a4d: 	jl	.Ltmp4203 # Offset: 10829
    00002a4f: 	nop # Size: 1
.Ltmp4201:
    00002a50: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002a57: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00002a5e: 	subq	$0x20, %rax
    00002a62: 	cmpq	%rax, %rbx
    00002a65: 	je	.Ltmp4205 # Offset: 10853
    00002a6b: 	leaq	0x10(%rbx), %rdi
    00002a6f: 	movq	0x198(%rsp), %r14
    00002a77: 	movq	%rdi, (%rbx)
    00002a7a: 	movq	0x190(%rsp), %rbp
    00002a82: 	movq	%rbp, %rax
    00002a85: 	addq	%r14, %rax
    00002a88: 	je	.Ltmp4206 # Offset: 10888
    00002a8a: 	testq	%rbp, %rbp
    00002a8d: 	je	.Ltmp4207 # Offset: 10893
.Ltmp4206:
    00002a93: 	movq	%r14, 0xb8(%rsp)
    00002a9b: 	cmpq	$0xf, %r14
    00002a9f: 	ja	.Ltmp4208 # Offset: 10911
    00002aa5: 	cmpq	$0x1, %r14
    00002aa9: 	jne	.Ltmp4209 # Offset: 10921
    00002aaf: 	movzbl	(%rbp), %eax
    00002ab3: 	movb	%al, 0x10(%rbx)
.Ltmp4290:
    00002ab6: 	movq	%r14, 0x8(%rbx)
    00002aba: 	movb	$0x0, (%rdi,%r14)
    00002abf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ac6: 	addq	$0x20, %rax
    00002aca: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp4271:
    00002ad1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002ad8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002adf: 	je	.Ltmp4210 # Offset: 10975
.Ltmp4270:
    00002ae5: 	movq	-0x20(%rax), %rbp
    00002ae9: 	callq	clock@PLT # Offset: 10985
    00002aee: 	pxor	%xmm0, %xmm0
    00002af2: 	movq	%rax, end_time(%rip)
    00002af9: 	movq	%rbp, %rdi
    00002afc: 	subq	start_time(%rip), %rax
    00002b03: 	cvtsi2sd	%rax, %xmm0
    00002b08: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002b10: 	callq	_Z13record_resultdPKc # Offset: 11024
    00002b15: 	movq	0x190(%rsp), %rdi
    00002b1d: 	cmpq	0x30(%rsp), %rdi
    00002b22: 	je	.Ltmp4211 # Offset: 11042
    00002b24: 	movq	0x1a0(%rsp), %rax
    00002b2c: 	leaq	0x1(%rax), %rsi
    00002b30: 	callq	_ZdlPvm@PLT # Offset: 11056
.Ltmp4211:
    00002b35: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002b3c: 	movq	%r12, %rsi
    00002b3f: 	movq	%r13, %rdi
    00002b42: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11074
    00002b47: 	callq	clock@PLT # Offset: 11079
    00002b4c: 	movq	%rax, start_time(%rip)
    00002b53: 	movl	iterations(%rip), %eax
    00002b59: 	testl	%eax, %eax
    00002b5b: 	jle	.Ltmp4212 # Offset: 11099
    00002b61: 	movsd	0xfd38(%rsp), %xmm6
    00002b6a: 	movq	DATAat0x3d710(%rip), %xmm3
    00002b72: 	xorl	%ebx, %ebx
    00002b74: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002b7b: 	movsd	DATAat0x3d6e0(%rip), %xmm7
    00002b83: 	movapd	%xmm6, %xmm5
    00002b87: 	movaps	%xmm3, 0x10(%rsp)
    00002b8c: 	movsd	DATAat0x3d6e8(%rip), %xmm3
    00002b94: 	subsd	%xmm6, %xmm5
    00002b98: 	movsd	%xmm6, (%rsp)
    00002b9d: 	movsd	%xmm7, 0x60(%rsp)
    00002ba3: 	movsd	%xmm3, 0x28(%rsp)
    00002ba9: 	movq	%xmm5, %r14
    00002bae: 	jmp	.Ltmp4213 # Offset: 11182
.Ltmp4215:
    00002bb0: 	addl	$0x1, %ebx
    00002bb3: 	cmpl	%eax, %ebx
    00002bb5: 	jge	.Ltmp4212 # Offset: 11189
.Ltmp4213:
    00002bb7: 	movsd	(%rsp), %xmm7
    00002bbc: 	movq	%r14, %xmm0
    00002bc1: 	movsd	%xmm7, 0xf0(%rsp)
    00002bca: 	movapd	%xmm7, %xmm1
    00002bce: 	andpd	0x10(%rsp), %xmm1
    00002bd4: 	comisd	0x60(%rsp), %xmm1
    00002bda: 	jbe	.Ltmp4214 # Offset: 11226
    00002bdc: 	divsd	%xmm7, %xmm0
.Ltmp4214:
    00002be0: 	andpd	0x10(%rsp), %xmm0
    00002be6: 	movsd	0x28(%rsp), %xmm7
    00002bec: 	comisd	%xmm0, %xmm7
    00002bf0: 	ja	.Ltmp4215 # Offset: 11248
    00002bf2: 	movq	0x190(%rsp), %rdx
    00002bfa: 	movq	%rbp, %rsi
    00002bfd: 	movl	$0x1, %edi
    00002c02: 	xorl	%eax, %eax
    00002c04: 	callq	__printf_chk@PLT # Offset: 11268
    00002c09: 	movl	iterations(%rip), %eax
    00002c0f: 	addl	$0x1, %ebx
    00002c12: 	cmpl	%eax, %ebx
    00002c14: 	jl	.Ltmp4213 # Offset: 11284
.Ltmp4212:
    00002c16: 	movq	%r13, %rsi
    00002c19: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002c20: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11296
    00002c25: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c2c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c33: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c3a: 	je	.Ltmp4216 # Offset: 11322
.Ltmp4266:
    00002c40: 	movq	-0x20(%rax), %rbp
    00002c44: 	callq	clock@PLT # Offset: 11332
    00002c49: 	pxor	%xmm0, %xmm0
    00002c4d: 	movq	%rax, end_time(%rip)
    00002c54: 	movq	%rbp, %rdi
    00002c57: 	subq	start_time(%rip), %rax
    00002c5e: 	cvtsi2sd	%rax, %xmm0
    00002c63: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002c6b: 	callq	_Z13record_resultdPKc # Offset: 11371
    00002c70: 	movq	0x190(%rsp), %rdi
    00002c78: 	cmpq	0x30(%rsp), %rdi
    00002c7d: 	je	.Ltmp4217 # Offset: 11389
    00002c7f: 	movq	0x1a0(%rsp), %rax
    00002c87: 	leaq	0x1(%rax), %rsi
    00002c8b: 	callq	_ZdlPvm@PLT # Offset: 11403
.Ltmp4217:
    00002c90: 	leaq	0x170(%rsp), %rdi
    00002c98: 	leaq	DATAat0x3d4d0(%rip), %rdx
    00002c9f: 	movq	%r12, %rsi
    00002ca2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11426
    00002ca7: 	movl	iterations(%rip), %edx
    00002cad: 	xorl	%r8d, %r8d
    00002cb0: 	xorl	%ecx, %ecx
    00002cb2: 	movl	$0x1f40, %esi
    00002cb7: 	movq	0x170(%rsp), %rdi
    00002cbf: 	callq	_Z9summarizePKciiii # Offset: 11455
    00002cc4: 	movsd	DATAat0x3d708(%rip), %xmm7
    00002ccc: 	leaq	DATAat0x3d4e7(%rip), %rdx
    00002cd3: 	movq	%r12, %rsi
    00002cd6: 	movq	%r13, %rdi
    00002cd9: 	addsd	init_value(%rip), %xmm7
    00002ce1: 	movq	%xmm7, %rbx
    00002ce6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11494
    00002ceb: 	movq	%rbx, %xmm6
    00002cf0: 	leaq	_Z10test_powerIdET_S0_(%rip), %r14
    00002cf7: 	movq	%r13, %rdx
    00002cfa: 	cvttsd2si	%xmm6, %ebp
    00002cfe: 	movq	%r14, %rsi
    00002d01: 	movl	%ebp, %edi
    00002d03: 	callq	"_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11523
    00002d08: 	movq	0x190(%rsp), %rdi
    00002d10: 	cmpq	0x30(%rsp), %rdi
    00002d15: 	je	.Ltmp4218 # Offset: 11541
    00002d17: 	movq	0x1a0(%rsp), %rax
    00002d1f: 	leaq	0x1(%rax), %rsi
    00002d23: 	callq	_ZdlPvm@PLT # Offset: 11555
.Ltmp4218:
    00002d28: 	leaq	DATAat0x3d501(%rip), %rdx
    00002d2f: 	movq	%r12, %rsi
    00002d32: 	movq	%r13, %rdi
    00002d35: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11573
    00002d3a: 	movq	%r13, %rcx
    00002d3d: 	movq	%r14, %rdx
    00002d40: 	movl	%ebp, %esi
    00002d42: 	movl	$0x1f40, %edi
    00002d47: 	callq	"_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11591
    00002d4c: 	movq	0x190(%rsp), %rdi
    00002d54: 	cmpq	0x30(%rsp), %rdi
    00002d59: 	je	.Ltmp4219 # Offset: 11609
    00002d5b: 	movq	0x1a0(%rsp), %rax
    00002d63: 	leaq	0x1(%rax), %rsi
    00002d67: 	callq	_ZdlPvm@PLT # Offset: 11623
.Ltmp4219:
    00002d6c: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002d73: 	movq	%r12, %rsi
    00002d76: 	movq	%r13, %rdi
    00002d79: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11641
    00002d7e: 	movq	%r13, %rcx
    00002d81: 	movq	%r14, %rdx
    00002d84: 	movl	%ebp, %esi
    00002d86: 	movl	$0x1f40, %edi
    00002d8b: 	callq	"_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11659
    00002d90: 	movq	0x190(%rsp), %rdi
    00002d98: 	cmpq	0x30(%rsp), %rdi
    00002d9d: 	je	.Ltmp4220 # Offset: 11677
    00002d9f: 	movq	0x1a0(%rsp), %rax
    00002da7: 	leaq	0x1(%rax), %rsi
    00002dab: 	callq	_ZdlPvm@PLT # Offset: 11691
.Ltmp4220:
    00002db0: 	leaq	DATAat0x3d535(%rip), %rdx
    00002db7: 	movq	%r12, %rsi
    00002dba: 	movq	%r13, %rdi
    00002dbd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11709
    00002dc2: 	leaq	_Z8test_cosIdET_S0_(%rip), %r14
    00002dc9: 	movq	%r13, %rdx
    00002dcc: 	movl	%ebp, %edi
    00002dce: 	movq	%r14, %rsi
    00002dd1: 	callq	"_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11729
    00002dd6: 	movq	0x190(%rsp), %rdi
    00002dde: 	cmpq	0x30(%rsp), %rdi
    00002de3: 	je	.Ltmp4221 # Offset: 11747
    00002de5: 	movq	0x1a0(%rsp), %rax
    00002ded: 	leaq	0x1(%rax), %rsi
    00002df1: 	callq	_ZdlPvm@PLT # Offset: 11761
.Ltmp4221:
    00002df6: 	leaq	DATAat0x3d640(%rip), %rdx
    00002dfd: 	movq	%r12, %rsi
    00002e00: 	movq	%r13, %rdi
    00002e03: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11779
    00002e08: 	movq	%r13, %rcx
    00002e0b: 	movq	%r14, %rdx
    00002e0e: 	movl	%ebp, %esi
    00002e10: 	movl	$0x1f40, %edi
    00002e15: 	callq	"_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11797
    00002e1a: 	movq	0x190(%rsp), %rdi
    00002e22: 	cmpq	0x30(%rsp), %rdi
    00002e27: 	je	.Ltmp4222 # Offset: 11815
    00002e29: 	movq	0x1a0(%rsp), %rax
    00002e31: 	leaq	0x1(%rax), %rsi
    00002e35: 	callq	_ZdlPvm@PLT # Offset: 11829
.Ltmp4222:
    00002e3a: 	leaq	DATAat0x3d550(%rip), %rdx
    00002e41: 	movq	%r12, %rsi
    00002e44: 	movq	%r13, %rdi
    00002e47: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11847
    00002e4c: 	movq	%r13, %rcx
    00002e4f: 	movq	%r14, %rdx
    00002e52: 	movl	%ebp, %esi
    00002e54: 	movl	$0x1f40, %edi
    00002e59: 	callq	"_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11865
    00002e5e: 	movq	0x190(%rsp), %rdi
    00002e66: 	cmpq	0x30(%rsp), %rdi
    00002e6b: 	je	.Ltmp4223 # Offset: 11883
    00002e6d: 	movq	0x1a0(%rsp), %rax
    00002e75: 	leaq	0x1(%rax), %rsi
    00002e79: 	callq	_ZdlPvm@PLT # Offset: 11897
.Ltmp4223:
    00002e7e: 	leaq	DATAat0x3d567(%rip), %rdx
    00002e85: 	movq	%r12, %rsi
    00002e88: 	movq	%r13, %rdi
    00002e8b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11915
    00002e90: 	leaq	_Z8test_sqrIdET_S0_(%rip), %r14
    00002e97: 	movq	%r13, %rdx
    00002e9a: 	movl	%ebp, %edi
    00002e9c: 	movq	%r14, %rsi
    00002e9f: 	callq	"_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 11935
    00002ea4: 	movq	0x190(%rsp), %rdi
    00002eac: 	cmpq	0x30(%rsp), %rdi
    00002eb1: 	je	.Ltmp4224 # Offset: 11953
    00002eb3: 	movq	0x1a0(%rsp), %rax
    00002ebb: 	leaq	0x1(%rax), %rsi
    00002ebf: 	callq	_ZdlPvm@PLT # Offset: 11967
.Ltmp4224:
    00002ec4: 	leaq	DATAat0x3d660(%rip), %rdx
    00002ecb: 	movq	%r12, %rsi
    00002ece: 	movq	%r13, %rdi
    00002ed1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11985
    00002ed6: 	movq	%r13, %rcx
    00002ed9: 	movq	%r14, %rdx
    00002edc: 	movl	%ebp, %esi
    00002ede: 	movl	$0x1f40, %edi
    00002ee3: 	callq	"_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12003
    00002ee8: 	movq	0x190(%rsp), %rdi
    00002ef0: 	cmpq	0x30(%rsp), %rdi
    00002ef5: 	je	.Ltmp4225 # Offset: 12021
    00002ef7: 	movq	0x1a0(%rsp), %rax
    00002eff: 	leaq	0x1(%rax), %rsi
    00002f03: 	callq	_ZdlPvm@PLT # Offset: 12035
.Ltmp4225:
    00002f08: 	leaq	DATAat0x3d582(%rip), %rdx
    00002f0f: 	movq	%r12, %rsi
    00002f12: 	movq	%r13, %rdi
    00002f15: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12053
    00002f1a: 	movq	%r13, %rcx
    00002f1d: 	movq	%r14, %rdx
    00002f20: 	movl	%ebp, %esi
    00002f22: 	movl	$0x1f40, %edi
    00002f27: 	callq	"_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12071
    00002f2c: 	movq	0x190(%rsp), %rdi
    00002f34: 	cmpq	0x30(%rsp), %rdi
    00002f39: 	je	.Ltmp4226 # Offset: 12089
    00002f3b: 	movq	0x1a0(%rsp), %rax
    00002f43: 	leaq	0x1(%rax), %rsi
    00002f47: 	callq	_ZdlPvm@PLT # Offset: 12103
.Ltmp4226:
    00002f4c: 	leaq	DATAat0x3d599(%rip), %rdx
    00002f53: 	movq	%r12, %rsi
    00002f56: 	movq	%r13, %rdi
    00002f59: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12121
    00002f5e: 	leaq	_Z9test_hashIdET_S0_(%rip), %r14
    00002f65: 	movq	%r13, %rdx
    00002f68: 	movl	%ebp, %edi
    00002f6a: 	movq	%r14, %rsi
    00002f6d: 	callq	"_Z23test_const_function_optIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12141
    00002f72: 	movq	0x190(%rsp), %rdi
    00002f7a: 	cmpq	0x30(%rsp), %rdi
    00002f7f: 	je	.Ltmp4227 # Offset: 12159
    00002f81: 	movq	0x1a0(%rsp), %rax
    00002f89: 	leaq	0x1(%rax), %rsi
    00002f8d: 	callq	_ZdlPvm@PLT # Offset: 12173
.Ltmp4227:
    00002f92: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002f99: 	movq	%r12, %rsi
    00002f9c: 	movq	%r13, %rdi
    00002f9f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12191
    00002fa4: 	movq	%r13, %rcx
    00002fa7: 	movq	%r14, %rdx
    00002faa: 	movl	%ebp, %esi
    00002fac: 	movl	$0x1f40, %edi
    00002fb1: 	callq	"_Z27test_const_function_halfoptIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12209
    00002fb6: 	movq	0x190(%rsp), %rdi
    00002fbe: 	cmpq	0x30(%rsp), %rdi
    00002fc3: 	je	.Ltmp4228 # Offset: 12227
    00002fc5: 	movq	0x1a0(%rsp), %rax
    00002fcd: 	leaq	0x1(%rax), %rsi
    00002fd1: 	callq	_ZdlPvm@PLT # Offset: 12241
.Ltmp4228:
    00002fd6: 	leaq	DATAat0x3d5cf(%rip), %rdx
    00002fdd: 	movq	%r12, %rsi
    00002fe0: 	movq	%r13, %rdi
    00002fe3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12259
    00002fe8: 	movq	%r13, %rcx
    00002feb: 	movq	%r14, %rdx
    00002fee: 	movl	%ebp, %esi
    00002ff0: 	movl	$0x1f40, %edi
    00002ff5: 	callq	"_Z19test_const_functionIdPFddEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12277
    00002ffa: 	movq	0x190(%rsp), %rdi
    00003002: 	cmpq	0x30(%rsp), %rdi
    00003007: 	je	.Ltmp4229 # Offset: 12295
    00003009: 	movq	0x1a0(%rsp), %rax
    00003011: 	leaq	0x1(%rax), %rsi
    00003015: 	callq	_ZdlPvm@PLT # Offset: 12309
.Ltmp4229:
    0000301a: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00003021: 	movq	%r12, %rsi
    00003024: 	movq	%r13, %rdi
    00003027: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12327
    0000302c: 	movl	iterations(%rip), %edx
    00003032: 	xorl	%r8d, %r8d
    00003035: 	xorl	%ecx, %ecx
    00003037: 	movl	$0x1f40, %esi
    0000303c: 	movq	0x190(%rsp), %rdi
    00003044: 	callq	_Z9summarizePKciiii # Offset: 12356
    00003049: 	movq	0x190(%rsp), %rdi
    00003051: 	cmpq	0x30(%rsp), %rdi
    00003056: 	je	.Ltmp4230 # Offset: 12374
    00003058: 	movq	0x1a0(%rsp), %rax
    00003060: 	leaq	0x1(%rax), %rsi
    00003064: 	callq	_ZdlPvm@PLT # Offset: 12388
.Ltmp4230:
    00003069: 	movq	0x170(%rsp), %rdi
    00003071: 	leaq	0x180(%rsp), %rax
    00003079: 	cmpq	%rax, %rdi
    0000307c: 	je	.Ltmp4231 # Offset: 12412
    0000307e: 	movq	0x180(%rsp), %rax
    00003086: 	leaq	0x1(%rax), %rsi
    0000308a: 	callq	_ZdlPvm@PLT # Offset: 12426
.Ltmp4231:
    0000308f: 	movq	0x150(%rsp), %rdi
    00003097: 	leaq	0x160(%rsp), %rax
    0000309f: 	cmpq	%rax, %rdi
    000030a2: 	je	.Ltmp4232 # Offset: 12450
    000030a4: 	movq	0x160(%rsp), %rax
    000030ac: 	leaq	0x1(%rax), %rsi
    000030b0: 	callq	_ZdlPvm@PLT # Offset: 12464
.Ltmp4232:
    000030b5: 	movq	0x130(%rsp), %rdi
    000030bd: 	cmpq	0xa8(%rsp), %rdi
    000030c5: 	je	.Ltmp4233 # Offset: 12485
    000030c7: 	movq	0x140(%rsp), %rax
    000030cf: 	leaq	0x1(%rax), %rsi
    000030d3: 	callq	_ZdlPvm@PLT # Offset: 12499
.Ltmp4233:
    000030d8: 	movq	0xfd48(%rsp), %rax
    000030e0: 	subq	%fs:0x28, %rax
    000030e9: 	jne	.Ltmp4234 # Offset: 12521
    000030ef: 	addq	$0xfd58, %rsp
    000030f6: 	popq	%rbx
    000030f7: 	popq	%rbp
    000030f8: 	popq	%r12
    000030fa: 	popq	%r13
    000030fc: 	popq	%r14
    000030fe: 	popq	%r15
    00003100: 	retq # Offset: 12544
    00003101: 	nopl	(%rax) # Size: 7
.Ltmp4072:
    00003108: 	movl	current_test(%rip), %edx
    0000310e: 	movq	%r14, %rsi
    00003111: 	movl	$0x1, %edi
    00003116: 	xorl	%eax, %eax
    00003118: 	callq	__printf_chk@PLT # Offset: 12568
    0000311d: 	movl	iterations(%rip), %edx
    00003123: 	jmp	.Ltmp4235 # Offset: 12579
    00003128: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4065:
    00003130: 	movl	current_test(%rip), %edx
    00003136: 	movq	%r14, %rsi
    00003139: 	movl	$0x1, %edi
    0000313e: 	xorl	%eax, %eax
    00003140: 	callq	__printf_chk@PLT # Offset: 12608
    00003145: 	movl	iterations(%rip), %edx
    0000314b: 	jmp	.Ltmp4236 # Offset: 12619
.Ltmp4058:
    00003150: 	movl	current_test(%rip), %edx
    00003156: 	movq	%r14, %rsi
    00003159: 	movl	$0x1, %edi
    0000315e: 	xorl	%eax, %eax
    00003160: 	callq	__printf_chk@PLT # Offset: 12640
    00003165: 	movl	iterations(%rip), %edx
    0000316b: 	jmp	.Ltmp4237 # Offset: 12651
.Ltmp4051:
    00003170: 	movl	current_test(%rip), %edx
    00003176: 	movq	%r14, %rsi
    00003179: 	movl	$0x1, %edi
    0000317e: 	xorl	%eax, %eax
    00003180: 	callq	__printf_chk@PLT # Offset: 12672
    00003185: 	movl	iterations(%rip), %edx
    0000318b: 	jmp	.Ltmp4238 # Offset: 12683
.Ltmp4044:
    00003190: 	movl	current_test(%rip), %edx
    00003196: 	movq	%r14, %rsi
    00003199: 	movl	$0x1, %edi
    0000319e: 	xorl	%eax, %eax
    000031a0: 	callq	__printf_chk@PLT # Offset: 12704
    000031a5: 	movl	iterations(%rip), %edx
    000031ab: 	jmp	.Ltmp4239 # Offset: 12715
.Ltmp4037:
    000031b0: 	movl	current_test(%rip), %edx
    000031b6: 	movq	%r14, %rsi
    000031b9: 	movl	$0x1, %edi
    000031be: 	xorl	%eax, %eax
    000031c0: 	callq	__printf_chk@PLT # Offset: 12736
    000031c5: 	movl	iterations(%rip), %edx
    000031cb: 	jmp	.Ltmp4240 # Offset: 12747
.Ltmp4030:
    000031d0: 	movl	current_test(%rip), %edx
    000031d6: 	movq	%r14, %rsi
    000031d9: 	movl	$0x1, %edi
    000031de: 	xorl	%eax, %eax
    000031e0: 	callq	__printf_chk@PLT # Offset: 12768
    000031e5: 	movl	iterations(%rip), %edx
    000031eb: 	jmp	.Ltmp4241 # Offset: 12779
.Ltmp4077:
    000031f0: 	movq	0xa0(%rsp), %rsi
    000031f8: 	xorl	%edx, %edx
    000031fa: 	movq	%r14, %rdi
    000031fd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 12797
    00003202: 	movq	%rax, (%r14)
    00003205: 	movq	%rax, %rdi
    00003208: 	movq	0xc0(%rsp), %rax
    00003210: 	movq	%rax, 0x10(%r14)
.Ltmp4289:
    00003214: 	movq	(%rsp), %rsi
    00003218: 	movq	%r13, %rdx
    0000321b: 	callq	memcpy@PLT # Offset: 12827
    00003220: 	movq	0xc0(%rsp), %r13
    00003228: 	movq	(%r14), %rdi
    0000322b: 	jmp	.Ltmp4242 # Offset: 12843
.Ltmp4185:
    00003230: 	movq	0x190(%rsp), %rdx
    00003238: 	movq	%rbp, %rsi
    0000323b: 	movl	$0x1, %edi
    00003240: 	xorl	%eax, %eax
    00003242: 	callq	__printf_chk@PLT # Offset: 12866
    00003247: 	movl	iterations(%rip), %edx
    0000324d: 	jmp	.Ltmp4243 # Offset: 12877
    00003252: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4177:
    00003258: 	movq	0x190(%rsp), %rdx
    00003260: 	movq	%rbp, %rsi
    00003263: 	movl	$0x1, %edi
    00003268: 	xorl	%eax, %eax
    0000326a: 	callq	__printf_chk@PLT # Offset: 12906
    0000326f: 	movl	iterations(%rip), %edx
    00003275: 	jmp	.Ltmp4244 # Offset: 12917
    0000327a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4112:
    00003280: 	movl	current_test(%rip), %edx
    00003286: 	movq	%r14, %rsi
    00003289: 	movl	$0x1, %edi
    0000328e: 	xorl	%eax, %eax
    00003290: 	callq	__printf_chk@PLT # Offset: 12944
    00003295: 	movl	iterations(%rip), %edx
    0000329b: 	jmp	.Ltmp4245 # Offset: 12955
.Ltmp4169:
    000032a0: 	movq	0x190(%rsp), %rdx
    000032a8: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000032af: 	movl	$0x1, %edi
    000032b4: 	xorl	%eax, %eax
    000032b6: 	callq	__printf_chk@PLT # Offset: 12982
    000032bb: 	movl	iterations(%rip), %edx
    000032c1: 	jmp	.Ltmp4246 # Offset: 12993
    000032c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4091:
    000032d0: 	movl	current_test(%rip), %edx
    000032d6: 	movq	%r14, %rsi
    000032d9: 	movl	$0x1, %edi
    000032de: 	xorl	%eax, %eax
    000032e0: 	callq	__printf_chk@PLT # Offset: 13024
    000032e5: 	movl	iterations(%rip), %edx
    000032eb: 	jmp	.Ltmp4247 # Offset: 13035
.Ltmp4084:
    000032f0: 	movl	current_test(%rip), %edx
    000032f6: 	movq	%r14, %rsi
    000032f9: 	movl	$0x1, %edi
    000032fe: 	xorl	%eax, %eax
    00003300: 	callq	__printf_chk@PLT # Offset: 13056
    00003305: 	movl	iterations(%rip), %edx
    0000330b: 	jmp	.Ltmp4248 # Offset: 13067
.Ltmp4105:
    00003310: 	movl	current_test(%rip), %edx
    00003316: 	movq	%r14, %rsi
    00003319: 	movl	$0x1, %edi
    0000331e: 	xorl	%eax, %eax
    00003320: 	callq	__printf_chk@PLT # Offset: 13088
    00003325: 	movl	iterations(%rip), %edx
    0000332b: 	jmp	.Ltmp4249 # Offset: 13099
.Ltmp4098:
    00003330: 	movl	current_test(%rip), %edx
    00003336: 	movq	%r14, %rsi
    00003339: 	movl	$0x1, %edi
    0000333e: 	xorl	%eax, %eax
    00003340: 	callq	__printf_chk@PLT # Offset: 13120
    00003345: 	movl	iterations(%rip), %edx
    0000334b: 	jmp	.Ltmp4250 # Offset: 13131
.Ltmp4162:
    00003350: 	movq	0x190(%rsp), %rdx
    00003358: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000335f: 	movl	$0x1, %edi
    00003364: 	xorl	%eax, %eax
    00003366: 	callq	__printf_chk@PLT # Offset: 13158
    0000336b: 	movl	iterations(%rip), %edx
    00003371: 	jmp	.Ltmp4251 # Offset: 13169
    00003376: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4155:
    00003380: 	movq	0x190(%rsp), %rdx
    00003388: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000338f: 	movl	$0x1, %edi
    00003394: 	xorl	%eax, %eax
    00003396: 	callq	__printf_chk@PLT # Offset: 13206
    0000339b: 	movl	iterations(%rip), %edx
    000033a1: 	jmp	.Ltmp4252 # Offset: 13217
    000033a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4148:
    000033b0: 	movq	0x190(%rsp), %rdx
    000033b8: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000033bf: 	movl	$0x1, %edi
    000033c4: 	xorl	%eax, %eax
    000033c6: 	callq	__printf_chk@PLT # Offset: 13254
    000033cb: 	movl	iterations(%rip), %edx
    000033d1: 	jmp	.Ltmp4253 # Offset: 13265
    000033d6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4140:
    000033e0: 	movl	current_test(%rip), %edx
    000033e6: 	movq	%r14, %rsi
    000033e9: 	movl	$0x1, %edi
    000033ee: 	xorl	%eax, %eax
    000033f0: 	callq	__printf_chk@PLT # Offset: 13296
    000033f5: 	movl	iterations(%rip), %edx
    000033fb: 	jmp	.Ltmp4254 # Offset: 13307
.Ltmp4133:
    00003400: 	movl	current_test(%rip), %edx
    00003406: 	movq	%r14, %rsi
    00003409: 	movl	$0x1, %edi
    0000340e: 	xorl	%eax, %eax
    00003410: 	callq	__printf_chk@PLT # Offset: 13328
    00003415: 	movl	iterations(%rip), %edx
    0000341b: 	jmp	.Ltmp4255 # Offset: 13339
.Ltmp4126:
    00003420: 	movl	current_test(%rip), %edx
    00003426: 	movq	%r14, %rsi
    00003429: 	movl	$0x1, %edi
    0000342e: 	xorl	%eax, %eax
    00003430: 	callq	__printf_chk@PLT # Offset: 13360
    00003435: 	movl	iterations(%rip), %edx
    0000343b: 	jmp	.Ltmp4256 # Offset: 13371
.Ltmp4119:
    00003440: 	movl	current_test(%rip), %edx
    00003446: 	movq	%r14, %rsi
    00003449: 	movl	$0x1, %edi
    0000344e: 	xorl	%eax, %eax
    00003450: 	callq	__printf_chk@PLT # Offset: 13392
    00003455: 	movl	iterations(%rip), %edx
    0000345b: 	jmp	.Ltmp4257 # Offset: 13403
.Ltmp4202:
    00003460: 	movsd	DATAat0x3d6e8(%rip), %xmm5
    00003468: 	divsd	(%rsp), %xmm0
    0000346d: 	xorl	%ebx, %ebx
    0000346f: 	andpd	0x10(%rsp), %xmm0
    00003475: 	leaq	DATAat0x3d1c8(%rip), %rbp
    0000347c: 	movsd	%xmm0, 0x10(%rsp)
    00003482: 	movsd	%xmm5, 0x28(%rsp)
    00003488: 	jmp	.Ltmp4258 # Offset: 13448
    0000348a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4259:
    00003490: 	addl	$0x1, %ebx
    00003493: 	cmpl	%eax, %ebx
    00003495: 	jge	.Ltmp4201 # Offset: 13461
.Ltmp4258:
    0000349b: 	movsd	0x28(%rsp), %xmm5
    000034a1: 	comisd	0x10(%rsp), %xmm5
    000034a7: 	movsd	(%rsp), %xmm7
    000034ac: 	movsd	%xmm7, 0xf0(%rsp)
    000034b5: 	ja	.Ltmp4259 # Offset: 13493
    000034b7: 	movq	0x190(%rsp), %rdx
    000034bf: 	movq	%rbp, %rsi
    000034c2: 	movl	$0x1, %edi
    000034c7: 	xorl	%eax, %eax
    000034c9: 	callq	__printf_chk@PLT # Offset: 13513
    000034ce: 	movl	iterations(%rip), %eax
    000034d4: 	jmp	.Ltmp4259 # Offset: 13524
.Ltmp4190:
    000034d6: 	movsd	DATAat0x3d6e8(%rip), %xmm7
    000034de: 	divsd	(%rsp), %xmm0
    000034e3: 	xorl	%ebx, %ebx
    000034e5: 	andpd	0x10(%rsp), %xmm0
    000034eb: 	leaq	DATAat0x3d1c8(%rip), %r14
    000034f2: 	movsd	%xmm0, 0x10(%rsp)
    000034f8: 	movsd	%xmm7, 0x28(%rsp)
    000034fe: 	jmp	.Ltmp4260 # Offset: 13566
.Ltmp4261:
    00003500: 	addl	$0x1, %ebx
    00003503: 	cmpl	%eax, %ebx
    00003505: 	jge	.Ltmp4189 # Offset: 13573
.Ltmp4260:
    0000350b: 	movsd	0x28(%rsp), %xmm7
    00003511: 	comisd	0x10(%rsp), %xmm7
    00003517: 	movsd	(%rsp), %xmm6
    0000351c: 	movsd	%xmm6, (%rbp)
    00003521: 	ja	.Ltmp4261 # Offset: 13601
    00003523: 	movq	0x190(%rsp), %rdx
    0000352b: 	movq	%r14, %rsi
    0000352e: 	movl	$0x1, %edi
    00003533: 	xorl	%eax, %eax
    00003535: 	callq	__printf_chk@PLT # Offset: 13621
    0000353a: 	movl	iterations(%rip), %eax
    00003540: 	jmp	.Ltmp4261 # Offset: 13632
.Ltmp4074:
    00003542: 	movq	%r15, %rsi
    00003545: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000354c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13644
    00003551: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003558: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000355f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003566: 	jne	.Ltmp4262 # Offset: 13670
.Ltmp4079:
    0000356c: 	movq	-0x8(%rdx), %rax
    00003570: 	addq	$0x200, %rax
    00003576: 	jmp	.Ltmp4262 # Offset: 13686
.Ltmp4067:
    0000357b: 	movq	-0x8(%rdx), %rax
    0000357f: 	addq	$0x200, %rax
    00003585: 	jmp	.Ltmp4263 # Offset: 13701
.Ltmp4060:
    0000358a: 	movq	-0x8(%rdx), %rax
    0000358e: 	addq	$0x200, %rax
    00003594: 	jmp	.Ltmp4264 # Offset: 13716
.Ltmp4053:
    00003599: 	movq	-0x8(%rdx), %rax
    0000359d: 	addq	$0x200, %rax
    000035a3: 	jmp	.Ltmp4265 # Offset: 13731
.Ltmp4216:
    000035a8: 	movq	-0x8(%rdx), %rax
    000035ac: 	addq	$0x200, %rax
    000035b2: 	jmp	.Ltmp4266 # Offset: 13746
.Ltmp4199:
    000035b7: 	movq	-0x8(%rdx), %rax
    000035bb: 	addq	$0x200, %rax
    000035c1: 	jmp	.Ltmp4267 # Offset: 13761
.Ltmp4193:
    000035c6: 	movq	-0x8(%rdx), %rax
    000035ca: 	addq	$0x200, %rax
    000035d0: 	jmp	.Ltmp4268 # Offset: 13776
.Ltmp4187:
    000035d5: 	movq	-0x8(%rdx), %rax
    000035d9: 	addq	$0x200, %rax
    000035df: 	jmp	.Ltmp4269 # Offset: 13791
.Ltmp4210:
    000035e4: 	movq	-0x8(%rdx), %rax
    000035e8: 	addq	$0x200, %rax
    000035ee: 	jmp	.Ltmp4270 # Offset: 13806
.Ltmp4205:
    000035f3: 	movq	%r13, %rsi
    000035f6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000035fd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 13821
    00003602: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003609: 	jmp	.Ltmp4271 # Offset: 13833
.Ltmp4046:
    0000360e: 	movq	-0x8(%rdx), %rax
    00003612: 	addq	$0x200, %rax
    00003618: 	jmp	.Ltmp4272 # Offset: 13848
.Ltmp4039:
    0000361d: 	movq	-0x8(%rdx), %rax
    00003621: 	addq	$0x200, %rax
    00003627: 	jmp	.Ltmp4273 # Offset: 13863
.Ltmp4032:
    0000362c: 	movq	-0x8(%rdx), %rax
    00003630: 	addq	$0x200, %rax
    00003636: 	jmp	.Ltmp4274 # Offset: 13878
.Ltmp4121:
    0000363b: 	movq	-0x8(%rdx), %rax
    0000363f: 	addq	$0x200, %rax
    00003645: 	jmp	.Ltmp4275 # Offset: 13893
.Ltmp4114:
    0000364a: 	movq	-0x8(%rdx), %rax
    0000364e: 	addq	$0x200, %rax
    00003654: 	jmp	.Ltmp4276 # Offset: 13908
.Ltmp4179:
    00003659: 	movq	-0x8(%rdx), %rax
    0000365d: 	addq	$0x200, %rax
    00003663: 	jmp	.Ltmp4277 # Offset: 13923
.Ltmp4150:
    00003668: 	movq	-0x8(%rdx), %rax
    0000366c: 	addq	$0x200, %rax
    00003672: 	jmp	.Ltmp4278 # Offset: 13938
.Ltmp4142:
    00003677: 	movq	-0x8(%rdx), %rax
    0000367b: 	addq	$0x200, %rax
    00003681: 	jmp	.Ltmp4279 # Offset: 13953
.Ltmp4135:
    00003686: 	movq	-0x8(%rdx), %rax
    0000368a: 	addq	$0x200, %rax
    00003690: 	jmp	.Ltmp4280 # Offset: 13968
.Ltmp4128:
    00003695: 	movq	-0x8(%rdx), %rax
    00003699: 	addq	$0x200, %rax
    0000369f: 	jmp	.Ltmp4281 # Offset: 13983
.Ltmp4171:
    000036a4: 	movq	-0x8(%rdx), %rax
    000036a8: 	addq	$0x200, %rax
    000036ae: 	jmp	.Ltmp4282 # Offset: 13998
.Ltmp4107:
    000036b3: 	movq	-0x8(%rdx), %rax
    000036b7: 	addq	$0x200, %rax
    000036bd: 	jmp	.Ltmp4283 # Offset: 14013
.Ltmp4164:
    000036c2: 	movq	-0x8(%rdx), %rax
    000036c6: 	addq	$0x200, %rax
    000036cc: 	jmp	.Ltmp4284 # Offset: 14028
.Ltmp4086:
    000036d1: 	movq	-0x8(%rdx), %rax
    000036d5: 	addq	$0x200, %rax
    000036db: 	jmp	.Ltmp4285 # Offset: 14043
.Ltmp4100:
    000036e0: 	movq	-0x8(%rdx), %rax
    000036e4: 	addq	$0x200, %rax
    000036ea: 	jmp	.Ltmp4286 # Offset: 14058
.Ltmp4093:
    000036ef: 	movq	-0x8(%rdx), %rax
    000036f3: 	addq	$0x200, %rax
    000036f9: 	jmp	.Ltmp4287 # Offset: 14073
.Ltmp4157:
    000036fe: 	movq	-0x8(%rdx), %rax
    00003702: 	addq	$0x200, %rax
    00003708: 	jmp	.Ltmp4288 # Offset: 14088
.Ltmp4078:
    0000370d: 	testq	%r13, %r13
    00003710: 	je	.Ltmp4242 # Offset: 14096
    00003716: 	jmp	.Ltmp4289 # Offset: 14102
    0000371b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4209:
    00003720: 	testq	%r14, %r14
    00003723: 	je	.Ltmp4290 # Offset: 14115
    00003729: 	jmp	.Ltmp4291 # Offset: 14121
    0000372b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4208:
    00003730: 	leaq	0xb8(%rsp), %rsi
    00003738: 	xorl	%edx, %edx
    0000373a: 	movq	%rbx, %rdi
    0000373d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14141
    00003742: 	movq	%rax, (%rbx)
    00003745: 	movq	%rax, %rdi
    00003748: 	movq	0xb8(%rsp), %rax
    00003750: 	movq	%rax, 0x10(%rbx)
.Ltmp4291:
    00003754: 	movq	%r14, %rdx
    00003757: 	movq	%rbp, %rsi
    0000375a: 	callq	memcpy@PLT # Offset: 14170
    0000375f: 	movq	0xb8(%rsp), %r14
    00003767: 	movq	(%rbx), %rdi
    0000376a: 	jmp	.Ltmp4290 # Offset: 14186
.Ltmp4076:
    0000376f: 	leaq	DATAat0x3d158(%rip), %rdi
    00003776: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14198
.Ltmp4207:
    0000377b: 	leaq	DATAat0x3d158(%rip), %rdi
    00003782: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 14210
.Ltmp4234:
    00003787: 	callq	__stack_chk_fail@PLT # Offset: 14215
    0000378c: 	endbr64
.Ltmp4293:
    00003790: 	movq	%rax, %rbp
    00003793: 	jmp	.Ltmp4292 # Offset: 14227
    00003795: 	endbr64
    00003799: 	jmp	.Ltmp4293 # Offset: 14233
    0000379b: 	endbr64
    0000379f: 	jmp	.Ltmp4293 # Offset: 14239
    000037a1: 	endbr64
    000037a5: 	jmp	.Ltmp4293 # Offset: 14245
.Ltmp4292:
    000037a7: 	movq	0x1b0(%rsp), %rdi
    000037af: 	cmpq	0x98(%rsp), %rdi
    000037b7: 	je	.Ltmp4294 # Offset: 14263
.Ltmp4301:
    000037b9: 	movq	0x1c0(%rsp), %rax
    000037c1: 	leaq	0x1(%rax), %rsi
    000037c5: 	callq	_ZdlPvm@PLT # Offset: 14277
.Ltmp4294:
    000037ca: 	movq	0x130(%rsp), %rdi
    000037d2: 	cmpq	0xa8(%rsp), %rdi
    000037da: 	je	.Ltmp4295 # Offset: 14298
    000037dc: 	movq	0x140(%rsp), %rax
    000037e4: 	leaq	0x1(%rax), %rsi
    000037e8: 	callq	_ZdlPvm@PLT # Offset: 14312
.Ltmp4295:
    000037ed: 	movq	%rbp, %rdi
    000037f0: 	callq	_Unwind_Resume@PLT # Offset: 14320
    000037f5: 	endbr64
    000037f9: 	jmp	.Ltmp4293 # Offset: 14329
    000037fb: 	endbr64
    000037ff: 	jmp	.Ltmp4293 # Offset: 14335
    00003801: 	endbr64
    00003805: 	jmp	.Ltmp4293 # Offset: 14341
    00003807: 	endbr64
    0000380b: 	jmp	.Ltmp4293 # Offset: 14347
    0000380d: 	endbr64
.Ltmp4297:
    00003811: 	movq	%rax, %rbp
    00003814: 	jmp	.Ltmp4296 # Offset: 14356
    00003816: 	endbr64
    0000381a: 	jmp	.Ltmp4297 # Offset: 14362
    0000381c: 	endbr64
    00003820: 	jmp	.Ltmp4293 # Offset: 14368
    00003825: 	endbr64
    00003829: 	jmp	.Ltmp4293 # Offset: 14377
.Ltmp4296:
    0000382e: 	movq	0x190(%rsp), %rdi
    00003836: 	cmpq	0x30(%rsp), %rdi
    0000383b: 	je	.Ltmp4298 # Offset: 14395
    0000383d: 	movq	0x1a0(%rsp), %rax
    00003845: 	leaq	0x1(%rax), %rsi
    00003849: 	callq	_ZdlPvm@PLT # Offset: 14409
.Ltmp4298:
    0000384e: 	movq	0x170(%rsp), %rdi
    00003856: 	leaq	0x180(%rsp), %rax
    0000385e: 	cmpq	%rax, %rdi
    00003861: 	je	.Ltmp4299 # Offset: 14433
    00003863: 	movq	0x180(%rsp), %rax
    0000386b: 	leaq	0x1(%rax), %rsi
    0000386f: 	callq	_ZdlPvm@PLT # Offset: 14447
.Ltmp4299:
    00003874: 	movq	0x150(%rsp), %rdi
    0000387c: 	leaq	0x160(%rsp), %rax
    00003884: 	cmpq	%rax, %rdi
    00003887: 	je	.Ltmp4294 # Offset: 14471
    0000388d: 	movq	0x160(%rsp), %rax
    00003895: 	leaq	0x1(%rax), %rsi
    00003899: 	callq	_ZdlPvm@PLT # Offset: 14489
    0000389e: 	jmp	.Ltmp4294 # Offset: 14494
    000038a3: 	endbr64
    000038a7: 	movq	%rax, %rbp
    000038aa: 	jmp	.Ltmp4300 # Offset: 14506
    000038ac: 	endbr64
    000038b0: 	movq	%rax, %rbp
    000038b3: 	jmp	.Ltmp4294 # Offset: 14515
.Ltmp4300:
    000038b8: 	movq	0x1b0(%rsp), %rdi
    000038c0: 	leaq	0x1c0(%rsp), %rax
    000038c8: 	cmpq	%rax, %rdi
    000038cb: 	jne	.Ltmp4301 # Offset: 14539
    000038d1: 	jmp	.Ltmp4294 # Offset: 14545
    000038d6: 	endbr64
.Ltmp4303:
    000038da: 	movq	%rax, %rbp
    000038dd: 	jmp	.Ltmp4302 # Offset: 14557
    000038df: 	endbr64
    000038e3: 	jmp	.Ltmp4303 # Offset: 14563
    000038e5: 	endbr64
    000038e9: 	jmp	.Ltmp4297 # Offset: 14569
    000038ee: 	endbr64
    000038f2: 	jmp	.Ltmp4297 # Offset: 14578
.Ltmp4302:
    000038f7: 	movq	0x190(%rsp), %rdi
    000038ff: 	cmpq	0x30(%rsp), %rdi
    00003904: 	je	.Ltmp4299 # Offset: 14596
.Ltmp4305:
    0000390a: 	movq	0x1a0(%rsp), %rax
    00003912: 	leaq	0x1(%rax), %rsi
    00003916: 	callq	_ZdlPvm@PLT # Offset: 14614
    0000391b: 	jmp	.Ltmp4299 # Offset: 14619
    00003920: 	endbr64
    00003924: 	jmp	.Ltmp4297 # Offset: 14628
    00003929: 	endbr64
    0000392d: 	jmp	.Ltmp4297 # Offset: 14637
    00003932: 	endbr64
    00003936: 	jmp	.Ltmp4297 # Offset: 14646
    0000393b: 	endbr64
    0000393f: 	jmp	.Ltmp4297 # Offset: 14655
    00003944: 	endbr64
    00003948: 	jmp	.Ltmp4297 # Offset: 14664
    0000394d: 	endbr64
    00003951: 	jmp	.Ltmp4297 # Offset: 14673
    00003956: 	endbr64
    0000395a: 	movq	%rax, %rbp
    0000395d: 	jmp	.Ltmp4298 # Offset: 14685
    00003962: 	endbr64
    00003966: 	jmp	.Ltmp4297 # Offset: 14694
    0000396b: 	endbr64
    0000396f: 	jmp	.Ltmp4297 # Offset: 14703
    00003974: 	endbr64
    00003978: 	jmp	.Ltmp4297 # Offset: 14712
    0000397d: 	endbr64
    00003981: 	jmp	.Ltmp4303 # Offset: 14721
    00003986: 	endbr64
    0000398a: 	jmp	.Ltmp4303 # Offset: 14730
    0000398f: 	endbr64
    00003993: 	jmp	.Ltmp4303 # Offset: 14739
    00003998: 	endbr64
    0000399c: 	jmp	.Ltmp4293 # Offset: 14748
    000039a1: 	endbr64
    000039a5: 	jmp	.Ltmp4293 # Offset: 14757
    000039aa: 	endbr64
    000039ae: 	jmp	.Ltmp4293 # Offset: 14766
    000039b3: 	endbr64
    000039b7: 	jmp	.Ltmp4293 # Offset: 14775
    000039bc: 	endbr64
    000039c0: 	jmp	.Ltmp4293 # Offset: 14784
    000039c5: 	endbr64
    000039c9: 	movq	%rax, %rbp
    000039cc: 	jmp	.Ltmp4299 # Offset: 14796
    000039d1: 	endbr64
    000039d5: 	movq	%rax, %rbp
    000039d8: 	jmp	.Ltmp4304 # Offset: 14808
    000039da: 	endbr64
    000039de: 	jmp	.Ltmp4303 # Offset: 14814
    000039e3: 	endbr64
    000039e7: 	jmp	.Ltmp4303 # Offset: 14823
    000039ec: 	endbr64
    000039f0: 	jmp	.Ltmp4303 # Offset: 14832
    000039f5: 	endbr64
    000039f9: 	jmp	.Ltmp4303 # Offset: 14841
    000039fe: 	endbr64
    00003a02: 	jmp	.Ltmp4303 # Offset: 14850
    00003a07: 	endbr64
    00003a0b: 	jmp	.Ltmp4303 # Offset: 14859
.Ltmp4304:
    00003a10: 	movq	0x190(%rsp), %rdi
    00003a18: 	leaq	0x1a0(%rsp), %rax
    00003a20: 	cmpq	%rax, %rdi
    00003a23: 	jne	.Ltmp4305 # Offset: 14883
    00003a29: 	jmp	.Ltmp4299 # Offset: 14889
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIdEvd"

Binary Function "_Z9TestLoopsIfEvd" after disassembly {
  Number      : 155
  State       : disassembled
  Address     : 0x2f9a0
  Size        : 0x3e89
  MaxSize     : 0x3e90
  Offset      : 0x2f9a0
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIfEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0154:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp4306:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp4306 # Offset: 37
    00000027: 	subq	$0xf58, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movsd	%xmm0, (%rsp)
    0000004a: 	leaq	0x240(%rsp), %rbp
    00000052: 	leaq	0x7f40(%rsp), %rbx
    0000005a: 	movq	%fs:0x28, %rax
    00000063: 	movq	%rax, 0x7f48(%rsp)
    0000006b: 	xorl	%eax, %eax
    0000006d: 	leaq	0x100(%rsp), %rax
    00000075: 	movl	$0x616f6c66, 0x100(%rsp)
    00000080: 	movq	%rax, 0x98(%rsp)
    00000088: 	movq	%rax, 0xf0(%rsp)
    00000090: 	leaq	0xb0(%rsp), %rax
    00000098: 	movq	%rax, %rsi
    0000009b: 	movq	%rax, 0x90(%rsp)
    000000a3: 	movb	$0x74, 0x104(%rsp)
    000000ab: 	movq	$0x5, 0xf8(%rsp)
    000000b7: 	movb	$0x0, 0x105(%rsp)
    000000bf: 	movaps	%xmm5, 0xb0(%rsp)
    000000c7: 	movaps	%xmm4, 0xc0(%rsp)
    000000cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 207
    000000d4: 	movsd	(%rsp), %xmm0
    000000d9: 	pxor	%xmm1, %xmm1
    000000dd: 	movq	%rbp, %rax
    000000e0: 	cvtsd2ss	init_value(%rip), %xmm1
    000000e8: 	shufps	$0x0, %xmm1, %xmm1
    000000ec: 	nopl	(%rax) # Size: 4
.Ltmp4307:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rbx, %rax
    000000fa: 	jne	.Ltmp4307 # Offset: 250
    000000fc: 	movss	DATAat0x3d70c(%rip), %xmm3
    00000104: 	pxor	%xmm4, %xmm4
    00000108: 	leaq	0x170(%rsp), %rax
    00000110: 	leaq	0xf0(%rsp), %r15
    00000118: 	cvtsd2ss	%xmm0, %xmm4
    0000011c: 	movaps	%xmm4, %xmm7
    0000011f: 	leaq	DATAat0x3d273(%rip), %rdx
    00000126: 	movq	%r15, %rsi
    00000129: 	addss	%xmm4, %xmm7
    0000012d: 	addss	%xmm4, %xmm3
    00000131: 	movq	%rax, %rdi
    00000134: 	movq	%rax, 0x88(%rsp)
    0000013c: 	movss	%xmm4, 0x78(%rsp)
    00000142: 	movss	%xmm7, 0x7c(%rsp)
    00000148: 	divss	%xmm3, %xmm7
    0000014c: 	movss	%xmm3, 0x80(%rsp)
    00000155: 	movaps	%xmm7, %xmm0
    00000158: 	addss	%xmm4, %xmm0
    0000015c: 	movss	%xmm0, 0x84(%rsp)
    00000165: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 357
    0000016a: 	callq	clock@PLT # Offset: 362
    0000016f: 	movl	iterations(%rip), %edx
    00000175: 	movq	%rax, start_time(%rip)
    0000017c: 	testl	%edx, %edx
    0000017e: 	jle	.Ltmp4308 # Offset: 382
    00000184: 	pxor	%xmm5, %xmm5
    00000188: 	movss	0x78(%rsp), %xmm7
    0000018e: 	movss	DATAat0x3d68c(%rip), %xmm4
    00000196: 	xorl	%r12d, %r12d
    00000199: 	movq	DATAat0x3d710(%rip), %xmm6
    000001a1: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    000001a9: 	movss	%xmm5, 0x74(%rsp)
    000001af: 	leaq	DATAat0x3d1d8(%rip), %r13
    000001b6: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    000001be: 	shufps	$0x0, %xmm7, %xmm7
    000001c2: 	movaps	%xmm7, (%rsp)
    000001c6: 	movss	DATAat0x3d720(%rip), %xmm7
    000001ce: 	movss	%xmm4, 0x70(%rsp)
    000001d4: 	movaps	%xmm7, 0x60(%rsp)
    000001d9: 	movsd	%xmm5, 0x18(%rsp)
    000001df: 	movaps	%xmm6, 0x20(%rsp)
    000001e4: 	movsd	%xmm3, 0x10(%rsp)
    000001ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4312:
    000001f0: 	movq	%rbp, %rax
    000001f3: 	pxor	%xmm0, %xmm0
    000001f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4309:
    00000200: 	movaps	(%rsp), %xmm2
    00000204: 	addps	(%rax), %xmm2
    00000207: 	addq	$0x10, %rax
    0000020b: 	addss	%xmm2, %xmm0
    0000020f: 	movaps	%xmm2, %xmm1
    00000212: 	shufps	$0x55, %xmm2, %xmm1
    00000216: 	addss	%xmm0, %xmm1
    0000021a: 	movaps	%xmm2, %xmm0
    0000021d: 	unpckhps	%xmm2, %xmm0
    00000220: 	shufps	$0xff, %xmm2, %xmm2
    00000224: 	addss	%xmm1, %xmm0
    00000228: 	addss	%xmm2, %xmm0
    0000022c: 	cmpq	%rbx, %rax
    0000022f: 	jne	.Ltmp4309 # Offset: 559
    00000231: 	pxor	%xmm2, %xmm2
    00000235: 	movaps	0x60(%rsp), %xmm4
    0000023a: 	movaps	%xmm0, %xmm1
    0000023d: 	cvtsd2ss	init_value(%rip), %xmm2
    00000245: 	addss	0x78(%rsp), %xmm2
    0000024b: 	mulss	0x70(%rsp), %xmm2
    00000251: 	andps	%xmm0, %xmm4
    00000254: 	subss	%xmm2, %xmm1
    00000258: 	pxor	%xmm2, %xmm2
    0000025c: 	cvtss2sd	%xmm4, %xmm2
    00000260: 	comisd	0x18(%rsp), %xmm2
    00000266: 	jbe	.Ltmp4310 # Offset: 614
    00000268: 	divss	%xmm0, %xmm1
.Ltmp4310:
    0000026c: 	movsd	0x10(%rsp), %xmm5
    00000272: 	cvtss2sd	%xmm1, %xmm1
    00000276: 	andpd	0x20(%rsp), %xmm1
    0000027c: 	comisd	%xmm1, %xmm5
    00000280: 	jbe	.Ltmp4311 # Offset: 640
.Ltmp4526:
    00000286: 	addl	$0x1, %r12d
    0000028a: 	cmpl	%edx, %r12d
    0000028d: 	jl	.Ltmp4312 # Offset: 653
.Ltmp4308:
    00000293: 	movq	0x88(%rsp), %rsi
    0000029b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000002a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 674
    000002a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002bc: 	je	.Ltmp4313 # Offset: 700
.Ltmp4569:
    000002c2: 	movq	-0x20(%rax), %r12
    000002c6: 	callq	clock@PLT # Offset: 710
    000002cb: 	pxor	%xmm0, %xmm0
    000002cf: 	movq	%rax, end_time(%rip)
    000002d6: 	movq	%r12, %rdi
    000002d9: 	subq	start_time(%rip), %rax
    000002e0: 	cvtsi2sd	%rax, %xmm0
    000002e5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000002ed: 	callq	_Z13record_resultdPKc # Offset: 749
    000002f2: 	movq	0x170(%rsp), %rdi
    000002fa: 	leaq	0x180(%rsp), %r12
    00000302: 	cmpq	%r12, %rdi
    00000305: 	je	.Ltmp4314 # Offset: 773
    00000307: 	movq	0x180(%rsp), %rax
    0000030f: 	leaq	0x1(%rax), %rsi
    00000313: 	callq	_ZdlPvm@PLT # Offset: 787
.Ltmp4314:
    00000318: 	movq	0x88(%rsp), %rdi
    00000320: 	leaq	DATAat0x3d281(%rip), %rdx
    00000327: 	movq	%r15, %rsi
    0000032a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 810
    0000032f: 	callq	clock@PLT # Offset: 815
    00000334: 	movl	iterations(%rip), %edx
    0000033a: 	movq	%rax, start_time(%rip)
    00000341: 	testl	%edx, %edx
    00000343: 	jle	.Ltmp4315 # Offset: 835
    00000349: 	movss	DATAat0x3d68c(%rip), %xmm3
    00000351: 	pxor	%xmm4, %xmm4
    00000355: 	xorl	%r13d, %r13d
    00000358: 	movss	0x78(%rsp), %xmm7
    0000035e: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    00000366: 	movq	DATAat0x3d710(%rip), %xmm6
    0000036e: 	movss	%xmm4, 0x74(%rsp)
    00000374: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000037b: 	mulss	%xmm3, %xmm7
    0000037f: 	movss	%xmm3, 0x70(%rsp)
    00000385: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    0000038d: 	movsd	%xmm5, 0x18(%rsp)
    00000393: 	movaps	%xmm6, 0x20(%rsp)
    00000398: 	movsd	%xmm3, 0x10(%rsp)
    0000039e: 	movss	%xmm7, (%rsp)
    000003a3: 	movss	DATAat0x3d720(%rip), %xmm7
    000003ab: 	movaps	%xmm7, 0x60(%rsp)
.Ltmp4319:
    000003b0: 	movq	%rbp, %rax
    000003b3: 	pxor	%xmm0, %xmm0
    000003b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4316:
    000003c0: 	movaps	(%rax), %xmm2
    000003c3: 	addq	$0x10, %rax
    000003c7: 	addss	%xmm2, %xmm0
    000003cb: 	movaps	%xmm2, %xmm1
    000003ce: 	shufps	$0x55, %xmm2, %xmm1
    000003d2: 	addss	%xmm0, %xmm1
    000003d6: 	movaps	%xmm2, %xmm0
    000003d9: 	unpckhps	%xmm2, %xmm0
    000003dc: 	shufps	$0xff, %xmm2, %xmm2
    000003e0: 	addss	%xmm1, %xmm0
    000003e4: 	addss	%xmm2, %xmm0
    000003e8: 	cmpq	%rbx, %rax
    000003eb: 	jne	.Ltmp4316 # Offset: 1003
    000003ed: 	pxor	%xmm2, %xmm2
    000003f1: 	addss	(%rsp), %xmm0
    000003f6: 	movaps	0x60(%rsp), %xmm5
    000003fb: 	cvtsd2ss	init_value(%rip), %xmm2
    00000403: 	addss	0x78(%rsp), %xmm2
    00000409: 	mulss	0x70(%rsp), %xmm2
    0000040f: 	movaps	%xmm0, %xmm1
    00000412: 	andps	%xmm0, %xmm5
    00000415: 	subss	%xmm2, %xmm1
    00000419: 	pxor	%xmm2, %xmm2
    0000041d: 	cvtss2sd	%xmm5, %xmm2
    00000421: 	comisd	0x18(%rsp), %xmm2
    00000427: 	jbe	.Ltmp4317 # Offset: 1063
    00000429: 	divss	%xmm0, %xmm1
.Ltmp4317:
    0000042d: 	movsd	0x10(%rsp), %xmm6
    00000433: 	cvtss2sd	%xmm1, %xmm1
    00000437: 	andpd	0x20(%rsp), %xmm1
    0000043d: 	comisd	%xmm1, %xmm6
    00000441: 	jbe	.Ltmp4318 # Offset: 1089
.Ltmp4525:
    00000447: 	addl	$0x1, %r13d
    0000044b: 	cmpl	%edx, %r13d
    0000044e: 	jl	.Ltmp4319 # Offset: 1102
.Ltmp4315:
    00000454: 	movq	0x88(%rsp), %rsi
    0000045c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000463: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1123
    00000468: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000046f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000476: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000047d: 	je	.Ltmp4320 # Offset: 1149
.Ltmp4568:
    00000483: 	movq	-0x20(%rax), %r13
    00000487: 	callq	clock@PLT # Offset: 1159
    0000048c: 	pxor	%xmm0, %xmm0
    00000490: 	movq	%rax, end_time(%rip)
    00000497: 	movq	%r13, %rdi
    0000049a: 	subq	start_time(%rip), %rax
    000004a1: 	cvtsi2sd	%rax, %xmm0
    000004a6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004ae: 	callq	_Z13record_resultdPKc # Offset: 1198
    000004b3: 	movq	0x170(%rsp), %rdi
    000004bb: 	cmpq	%r12, %rdi
    000004be: 	je	.Ltmp4321 # Offset: 1214
    000004c0: 	movq	0x180(%rsp), %rax
    000004c8: 	leaq	0x1(%rax), %rsi
    000004cc: 	callq	_ZdlPvm@PLT # Offset: 1228
.Ltmp4321:
    000004d1: 	movq	0x88(%rsp), %rdi
    000004d9: 	leaq	DATAat0x3d297(%rip), %rdx
    000004e0: 	movq	%r15, %rsi
    000004e3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1251
    000004e8: 	callq	clock@PLT # Offset: 1256
    000004ed: 	movl	iterations(%rip), %edx
    000004f3: 	movq	%rax, start_time(%rip)
    000004fa: 	testl	%edx, %edx
    000004fc: 	jle	.Ltmp4322 # Offset: 1276
    00000502: 	movss	0x78(%rsp), %xmm0
    00000508: 	pxor	%xmm6, %xmm6
    0000050c: 	xorl	%r13d, %r13d
    0000050f: 	addss	0x7c(%rsp), %xmm0
    00000515: 	addss	0x80(%rsp), %xmm0
    0000051e: 	movss	DATAat0x3d68c(%rip), %xmm3
    00000526: 	movss	%xmm6, 0x74(%rsp)
    0000052c: 	movss	DATAat0x3d720(%rip), %xmm7
    00000534: 	movss	0x84(%rsp), %xmm4
    0000053d: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    00000545: 	movaps	%xmm7, 0x60(%rsp)
    0000054a: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000551: 	movq	DATAat0x3d710(%rip), %xmm6
    00000559: 	movss	%xmm3, 0x70(%rsp)
    0000055f: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00000567: 	addss	%xmm0, %xmm4
    0000056b: 	movsd	%xmm5, 0x18(%rsp)
    00000571: 	movaps	%xmm6, 0x20(%rsp)
    00000576: 	movsd	%xmm3, 0x10(%rsp)
    0000057c: 	movaps	%xmm4, %xmm5
    0000057f: 	movss	%xmm4, 0x30(%rsp)
    00000585: 	shufps	$0x0, %xmm5, %xmm5
    00000589: 	movaps	%xmm5, (%rsp)
    0000058d: 	nopl	(%rax) # Size: 3
.Ltmp4326:
    00000590: 	movq	%rbp, %rax
    00000593: 	pxor	%xmm0, %xmm0
    00000597: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4323:
    000005a0: 	movaps	(%rsp), %xmm2
    000005a4: 	addps	(%rax), %xmm2
    000005a7: 	addq	$0x10, %rax
    000005ab: 	addss	%xmm2, %xmm0
    000005af: 	movaps	%xmm2, %xmm1
    000005b2: 	shufps	$0x55, %xmm2, %xmm1
    000005b6: 	addss	%xmm0, %xmm1
    000005ba: 	movaps	%xmm2, %xmm0
    000005bd: 	unpckhps	%xmm2, %xmm0
    000005c0: 	shufps	$0xff, %xmm2, %xmm2
    000005c4: 	addss	%xmm1, %xmm0
    000005c8: 	addss	%xmm2, %xmm0
    000005cc: 	cmpq	%rax, %rbx
    000005cf: 	jne	.Ltmp4323 # Offset: 1487
    000005d1: 	pxor	%xmm2, %xmm2
    000005d5: 	movaps	0x60(%rsp), %xmm3
    000005da: 	movaps	%xmm0, %xmm1
    000005dd: 	cvtsd2ss	init_value(%rip), %xmm2
    000005e5: 	addss	0x30(%rsp), %xmm2
    000005eb: 	mulss	0x70(%rsp), %xmm2
    000005f1: 	andps	%xmm0, %xmm3
    000005f4: 	subss	%xmm2, %xmm1
    000005f8: 	pxor	%xmm2, %xmm2
    000005fc: 	cvtss2sd	%xmm3, %xmm2
    00000600: 	comisd	0x18(%rsp), %xmm2
    00000606: 	jbe	.Ltmp4324 # Offset: 1542
    00000608: 	divss	%xmm0, %xmm1
.Ltmp4324:
    0000060c: 	movsd	0x10(%rsp), %xmm6
    00000612: 	cvtss2sd	%xmm1, %xmm1
    00000616: 	andpd	0x20(%rsp), %xmm1
    0000061c: 	comisd	%xmm1, %xmm6
    00000620: 	jbe	.Ltmp4325 # Offset: 1568
.Ltmp4524:
    00000626: 	addl	$0x1, %r13d
    0000062a: 	cmpl	%edx, %r13d
    0000062d: 	jl	.Ltmp4326 # Offset: 1581
.Ltmp4322:
    00000633: 	movq	0x88(%rsp), %rsi
    0000063b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000642: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1602
    00000647: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000064e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000655: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000065c: 	je	.Ltmp4327 # Offset: 1628
.Ltmp4567:
    00000662: 	movq	-0x20(%rax), %r13
    00000666: 	callq	clock@PLT # Offset: 1638
    0000066b: 	pxor	%xmm0, %xmm0
    0000066f: 	movq	%rax, end_time(%rip)
    00000676: 	movq	%r13, %rdi
    00000679: 	subq	start_time(%rip), %rax
    00000680: 	cvtsi2sd	%rax, %xmm0
    00000685: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000068d: 	callq	_Z13record_resultdPKc # Offset: 1677
    00000692: 	movq	0x170(%rsp), %rdi
    0000069a: 	cmpq	%r12, %rdi
    0000069d: 	je	.Ltmp4328 # Offset: 1693
    0000069f: 	movq	0x180(%rsp), %rax
    000006a7: 	leaq	0x1(%rax), %rsi
    000006ab: 	callq	_ZdlPvm@PLT # Offset: 1707
.Ltmp4328:
    000006b0: 	movq	0x88(%rsp), %rdi
    000006b8: 	leaq	DATAat0x3d2af(%rip), %rdx
    000006bf: 	movq	%r15, %rsi
    000006c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1730
    000006c7: 	callq	clock@PLT # Offset: 1735
    000006cc: 	movl	iterations(%rip), %edx
    000006d2: 	movq	%rax, start_time(%rip)
    000006d9: 	testl	%edx, %edx
    000006db: 	jle	.Ltmp4329 # Offset: 1755
    000006e1: 	pxor	%xmm4, %xmm4
    000006e5: 	movss	0x78(%rsp), %xmm7
    000006eb: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    000006f3: 	xorl	%r13d, %r13d
    000006f6: 	movq	DATAat0x3d710(%rip), %xmm6
    000006fe: 	movss	%xmm4, 0x74(%rsp)
    00000704: 	movss	DATAat0x3d68c(%rip), %xmm4
    0000070c: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000713: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    0000071b: 	movsd	%xmm5, 0x18(%rsp)
    00000721: 	movss	0x7c(%rsp), %xmm5
    00000727: 	shufps	$0x0, %xmm7, %xmm7
    0000072b: 	movss	%xmm4, 0x70(%rsp)
    00000731: 	movss	0x80(%rsp), %xmm4
    0000073a: 	movaps	%xmm6, 0x20(%rsp)
    0000073f: 	shufps	$0x0, %xmm5, %xmm5
    00000743: 	movss	0x84(%rsp), %xmm6
    0000074c: 	movaps	%xmm7, (%rsp)
    00000750: 	movss	DATAat0x3d720(%rip), %xmm7
    00000758: 	shufps	$0x0, %xmm4, %xmm4
    0000075c: 	shufps	$0x0, %xmm6, %xmm6
    00000760: 	movaps	%xmm7, 0x60(%rsp)
    00000765: 	movsd	%xmm3, 0x10(%rsp)
    0000076b: 	movaps	%xmm5, 0x30(%rsp)
    00000770: 	movaps	%xmm4, 0x40(%rsp)
    00000775: 	movaps	%xmm6, 0x50(%rsp)
    0000077a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4333:
    00000780: 	movq	%rbp, %rax
    00000783: 	pxor	%xmm1, %xmm1
    00000787: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4330:
    00000790: 	movaps	(%rsp), %xmm0
    00000794: 	addps	(%rax), %xmm0
    00000797: 	addq	$0x10, %rax
    0000079b: 	addps	0x30(%rsp), %xmm0
    000007a0: 	addps	0x40(%rsp), %xmm0
    000007a5: 	addps	0x50(%rsp), %xmm0
    000007aa: 	addss	%xmm0, %xmm1
    000007ae: 	movaps	%xmm0, %xmm2
    000007b1: 	shufps	$0x55, %xmm0, %xmm2
    000007b5: 	addss	%xmm1, %xmm2
    000007b9: 	movaps	%xmm0, %xmm1
    000007bc: 	unpckhps	%xmm0, %xmm1
    000007bf: 	shufps	$0xff, %xmm0, %xmm0
    000007c3: 	addss	%xmm2, %xmm1
    000007c7: 	addss	%xmm0, %xmm1
    000007cb: 	cmpq	%rbx, %rax
    000007ce: 	jne	.Ltmp4330 # Offset: 1998
    000007d0: 	pxor	%xmm0, %xmm0
    000007d4: 	movaps	0x60(%rsp), %xmm4
    000007d9: 	movaps	%xmm1, %xmm2
    000007dc: 	cvtsd2ss	init_value(%rip), %xmm0
    000007e4: 	addss	0x78(%rsp), %xmm0
    000007ea: 	addss	0x7c(%rsp), %xmm0
    000007f0: 	addss	0x80(%rsp), %xmm0
    000007f9: 	andps	%xmm1, %xmm4
    000007fc: 	addss	0x84(%rsp), %xmm0
    00000805: 	mulss	0x70(%rsp), %xmm0
    0000080b: 	subss	%xmm0, %xmm2
    0000080f: 	pxor	%xmm0, %xmm0
    00000813: 	cvtss2sd	%xmm4, %xmm0
    00000817: 	comisd	0x18(%rsp), %xmm0
    0000081d: 	jbe	.Ltmp4331 # Offset: 2077
    0000081f: 	divss	%xmm1, %xmm2
.Ltmp4331:
    00000823: 	movsd	0x10(%rsp), %xmm3
    00000829: 	cvtss2sd	%xmm2, %xmm2
    0000082d: 	andpd	0x20(%rsp), %xmm2
    00000833: 	comisd	%xmm2, %xmm3
    00000837: 	jbe	.Ltmp4332 # Offset: 2103
.Ltmp4523:
    0000083d: 	addl	$0x1, %r13d
    00000841: 	cmpl	%edx, %r13d
    00000844: 	jl	.Ltmp4333 # Offset: 2116
.Ltmp4329:
    0000084a: 	movq	0x88(%rsp), %rsi
    00000852: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000859: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2137
    0000085e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000865: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000086c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000873: 	je	.Ltmp4334 # Offset: 2163
.Ltmp4566:
    00000879: 	movq	-0x20(%rax), %r13
    0000087d: 	callq	clock@PLT # Offset: 2173
    00000882: 	pxor	%xmm0, %xmm0
    00000886: 	movq	%rax, end_time(%rip)
    0000088d: 	movq	%r13, %rdi
    00000890: 	subq	start_time(%rip), %rax
    00000897: 	cvtsi2sd	%rax, %xmm0
    0000089c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000008a4: 	callq	_Z13record_resultdPKc # Offset: 2212
    000008a9: 	movq	0x170(%rsp), %rdi
    000008b1: 	cmpq	%r12, %rdi
    000008b4: 	je	.Ltmp4335 # Offset: 2228
    000008b6: 	movq	0x180(%rsp), %rax
    000008be: 	leaq	0x1(%rax), %rsi
    000008c2: 	callq	_ZdlPvm@PLT # Offset: 2242
.Ltmp4335:
    000008c7: 	movq	0x88(%rsp), %rdi
    000008cf: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000008d6: 	movq	%r15, %rsi
    000008d9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2265
    000008de: 	callq	clock@PLT # Offset: 2270
    000008e3: 	movl	iterations(%rip), %edx
    000008e9: 	movq	%rax, start_time(%rip)
    000008f0: 	testl	%edx, %edx
    000008f2: 	jle	.Ltmp4336 # Offset: 2290
    000008f8: 	movss	0x78(%rsp), %xmm7
    000008fe: 	pxor	%xmm4, %xmm4
    00000902: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    0000090a: 	movss	DATAat0x3d720(%rip), %xmm5
    00000912: 	movq	DATAat0x3d710(%rip), %xmm3
    0000091a: 	movss	%xmm4, 0x74(%rsp)
    00000920: 	xorl	%r13d, %r13d
    00000923: 	movsd	DATAat0x3d6f0(%rip), %xmm4
    0000092b: 	shufps	$0x0, %xmm7, %xmm7
    0000092f: 	movaps	%xmm7, (%rsp)
    00000933: 	movss	DATAat0x3d68c(%rip), %xmm7
    0000093b: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000942: 	movaps	%xmm5, 0x60(%rsp)
    00000947: 	movss	%xmm7, 0x70(%rsp)
    0000094d: 	movsd	%xmm6, 0x18(%rsp)
    00000953: 	movaps	%xmm3, 0x20(%rsp)
    00000958: 	movsd	%xmm4, 0x10(%rsp)
    0000095e: 	nop # Size: 2
.Ltmp4340:
    00000960: 	movq	%rbp, %rax
    00000963: 	pxor	%xmm1, %xmm1
    00000967: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4337:
    00000970: 	movaps	(%rax), %xmm0
    00000973: 	subps	(%rsp), %xmm0
    00000977: 	addq	$0x10, %rax
    0000097b: 	addss	%xmm0, %xmm1
    0000097f: 	movaps	%xmm0, %xmm2
    00000982: 	shufps	$0x55, %xmm0, %xmm2
    00000986: 	addss	%xmm1, %xmm2
    0000098a: 	movaps	%xmm0, %xmm1
    0000098d: 	unpckhps	%xmm0, %xmm1
    00000990: 	shufps	$0xff, %xmm0, %xmm0
    00000994: 	addss	%xmm2, %xmm1
    00000998: 	addss	%xmm0, %xmm1
    0000099c: 	cmpq	%rax, %rbx
    0000099f: 	jne	.Ltmp4337 # Offset: 2463
    000009a1: 	pxor	%xmm2, %xmm2
    000009a5: 	movaps	0x60(%rsp), %xmm5
    000009aa: 	movaps	%xmm1, %xmm0
    000009ad: 	cvtsd2ss	init_value(%rip), %xmm2
    000009b5: 	subss	0x78(%rsp), %xmm2
    000009bb: 	mulss	0x70(%rsp), %xmm2
    000009c1: 	andps	%xmm1, %xmm5
    000009c4: 	subss	%xmm2, %xmm0
    000009c8: 	pxor	%xmm2, %xmm2
    000009cc: 	cvtss2sd	%xmm5, %xmm2
    000009d0: 	comisd	0x18(%rsp), %xmm2
    000009d6: 	jbe	.Ltmp4338 # Offset: 2518
    000009d8: 	divss	%xmm1, %xmm0
.Ltmp4338:
    000009dc: 	movsd	0x10(%rsp), %xmm3
    000009e2: 	cvtss2sd	%xmm0, %xmm0
    000009e6: 	andpd	0x20(%rsp), %xmm0
    000009ec: 	comisd	%xmm0, %xmm3
    000009f0: 	jbe	.Ltmp4339 # Offset: 2544
.Ltmp4522:
    000009f6: 	addl	$0x1, %r13d
    000009fa: 	cmpl	%edx, %r13d
    000009fd: 	jl	.Ltmp4340 # Offset: 2557
.Ltmp4336:
    00000a03: 	movq	0x88(%rsp), %rsi
    00000a0b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a12: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2578
    00000a17: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a1e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a25: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a2c: 	je	.Ltmp4341 # Offset: 2604
.Ltmp4565:
    00000a32: 	movq	-0x20(%rax), %r13
    00000a36: 	callq	clock@PLT # Offset: 2614
    00000a3b: 	pxor	%xmm0, %xmm0
    00000a3f: 	movq	%rax, end_time(%rip)
    00000a46: 	movq	%r13, %rdi
    00000a49: 	subq	start_time(%rip), %rax
    00000a50: 	cvtsi2sd	%rax, %xmm0
    00000a55: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000a5d: 	callq	_Z13record_resultdPKc # Offset: 2653
    00000a62: 	movq	0x170(%rsp), %rdi
    00000a6a: 	cmpq	%r12, %rdi
    00000a6d: 	je	.Ltmp4342 # Offset: 2669
    00000a6f: 	movq	0x180(%rsp), %rax
    00000a77: 	leaq	0x1(%rax), %rsi
    00000a7b: 	callq	_ZdlPvm@PLT # Offset: 2683
.Ltmp4342:
    00000a80: 	movq	0x88(%rsp), %rdi
    00000a88: 	leaq	DATAat0x3d2db(%rip), %rdx
    00000a8f: 	movq	%r15, %rsi
    00000a92: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2706
    00000a97: 	callq	clock@PLT # Offset: 2711
    00000a9c: 	movl	iterations(%rip), %edx
    00000aa2: 	movq	%rax, start_time(%rip)
    00000aa9: 	testl	%edx, %edx
    00000aab: 	jle	.Ltmp4343 # Offset: 2731
    00000ab1: 	movss	0x78(%rsp), %xmm0
    00000ab7: 	addss	0x7c(%rsp), %xmm0
    00000abd: 	pxor	%xmm4, %xmm4
    00000ac1: 	movss	DATAat0x3d720(%rip), %xmm5
    00000ac9: 	movss	DATAat0x3d68c(%rip), %xmm7
    00000ad1: 	movaps	%xmm5, 0x60(%rsp)
    00000ad6: 	xorl	%r13d, %r13d
    00000ad9: 	addss	0x80(%rsp), %xmm0
    00000ae2: 	movss	0x84(%rsp), %xmm6
    00000aeb: 	movsd	DATAat0x3d6d8(%rip), %xmm3
    00000af3: 	movss	%xmm4, 0x74(%rsp)
    00000af9: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000b00: 	movq	DATAat0x3d710(%rip), %xmm4
    00000b08: 	movss	%xmm7, 0x70(%rsp)
    00000b0e: 	movsd	DATAat0x3d6f0(%rip), %xmm7
    00000b16: 	addss	%xmm0, %xmm6
    00000b1a: 	movsd	%xmm3, 0x18(%rsp)
    00000b20: 	movaps	%xmm4, 0x20(%rsp)
    00000b25: 	movsd	%xmm7, 0x10(%rsp)
    00000b2b: 	movaps	%xmm6, %xmm5
    00000b2e: 	movss	%xmm6, 0x30(%rsp)
    00000b34: 	shufps	$0x0, %xmm5, %xmm5
    00000b38: 	movaps	%xmm5, (%rsp)
    00000b3c: 	nopl	(%rax) # Size: 4
.Ltmp4347:
    00000b40: 	movq	%rbp, %rax
    00000b43: 	pxor	%xmm1, %xmm1
    00000b47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4344:
    00000b50: 	movaps	(%rax), %xmm0
    00000b53: 	subps	(%rsp), %xmm0
    00000b57: 	addq	$0x10, %rax
    00000b5b: 	addss	%xmm0, %xmm1
    00000b5f: 	movaps	%xmm0, %xmm2
    00000b62: 	shufps	$0x55, %xmm0, %xmm2
    00000b66: 	addss	%xmm1, %xmm2
    00000b6a: 	movaps	%xmm0, %xmm1
    00000b6d: 	unpckhps	%xmm0, %xmm1
    00000b70: 	shufps	$0xff, %xmm0, %xmm0
    00000b74: 	addss	%xmm2, %xmm1
    00000b78: 	addss	%xmm0, %xmm1
    00000b7c: 	cmpq	%rbx, %rax
    00000b7f: 	jne	.Ltmp4344 # Offset: 2943
    00000b81: 	pxor	%xmm2, %xmm2
    00000b85: 	movaps	0x60(%rsp), %xmm7
    00000b8a: 	movaps	%xmm1, %xmm0
    00000b8d: 	cvtsd2ss	init_value(%rip), %xmm2
    00000b95: 	subss	0x30(%rsp), %xmm2
    00000b9b: 	mulss	0x70(%rsp), %xmm2
    00000ba1: 	andps	%xmm1, %xmm7
    00000ba4: 	subss	%xmm2, %xmm0
    00000ba8: 	pxor	%xmm2, %xmm2
    00000bac: 	cvtss2sd	%xmm7, %xmm2
    00000bb0: 	comisd	0x18(%rsp), %xmm2
    00000bb6: 	jbe	.Ltmp4345 # Offset: 2998
    00000bb8: 	divss	%xmm1, %xmm0
.Ltmp4345:
    00000bbc: 	movsd	0x10(%rsp), %xmm3
    00000bc2: 	cvtss2sd	%xmm0, %xmm0
    00000bc6: 	andpd	0x20(%rsp), %xmm0
    00000bcc: 	comisd	%xmm0, %xmm3
    00000bd0: 	jbe	.Ltmp4346 # Offset: 3024
.Ltmp4521:
    00000bd6: 	addl	$0x1, %r13d
    00000bda: 	cmpl	%edx, %r13d
    00000bdd: 	jl	.Ltmp4347 # Offset: 3037
.Ltmp4343:
    00000be3: 	movq	0x88(%rsp), %rsi
    00000beb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000bf2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3058
    00000bf7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bfe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c0c: 	je	.Ltmp4348 # Offset: 3084
.Ltmp4564:
    00000c12: 	movq	-0x20(%rax), %r13
    00000c16: 	callq	clock@PLT # Offset: 3094
    00000c1b: 	pxor	%xmm0, %xmm0
    00000c1f: 	movq	%rax, end_time(%rip)
    00000c26: 	movq	%r13, %rdi
    00000c29: 	subq	start_time(%rip), %rax
    00000c30: 	cvtsi2sd	%rax, %xmm0
    00000c35: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000c3d: 	callq	_Z13record_resultdPKc # Offset: 3133
    00000c42: 	movq	0x170(%rsp), %rdi
    00000c4a: 	cmpq	%r12, %rdi
    00000c4d: 	je	.Ltmp4349 # Offset: 3149
    00000c4f: 	movq	0x180(%rsp), %rax
    00000c57: 	leaq	0x1(%rax), %rsi
    00000c5b: 	callq	_ZdlPvm@PLT # Offset: 3163
.Ltmp4349:
    00000c60: 	movq	0x88(%rsp), %rdi
    00000c68: 	leaq	DATAat0x3d2f8(%rip), %rdx
    00000c6f: 	movq	%r15, %rsi
    00000c72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3186
    00000c77: 	callq	clock@PLT # Offset: 3191
    00000c7c: 	movl	iterations(%rip), %edx
    00000c82: 	movq	%rax, start_time(%rip)
    00000c89: 	testl	%edx, %edx
    00000c8b: 	jle	.Ltmp4350 # Offset: 3211
    00000c91: 	pxor	%xmm6, %xmm6
    00000c95: 	movss	0x78(%rsp), %xmm4
    00000c9b: 	movq	DATAat0x3d710(%rip), %xmm3
    00000ca3: 	movss	DATAat0x3d720(%rip), %xmm5
    00000cab: 	movss	%xmm6, 0x74(%rsp)
    00000cb1: 	movss	DATAat0x3d68c(%rip), %xmm6
    00000cb9: 	xorl	%r13d, %r13d
    00000cbc: 	movss	0x84(%rsp), %xmm7
    00000cc5: 	shufps	$0x0, %xmm4, %xmm4
    00000cc9: 	movaps	%xmm3, 0x20(%rsp)
    00000cce: 	movss	0x80(%rsp), %xmm3
    00000cd7: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000cde: 	movss	%xmm6, 0x70(%rsp)
    00000ce4: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    00000cec: 	shufps	$0x0, %xmm7, %xmm7
    00000cf0: 	movaps	%xmm4, (%rsp)
    00000cf4: 	movsd	DATAat0x3d6f0(%rip), %xmm4
    00000cfc: 	shufps	$0x0, %xmm3, %xmm3
    00000d00: 	movsd	%xmm6, 0x18(%rsp)
    00000d06: 	movss	0x7c(%rsp), %xmm6
    00000d0c: 	movaps	%xmm5, 0x60(%rsp)
    00000d11: 	shufps	$0x0, %xmm6, %xmm6
    00000d15: 	movsd	%xmm4, 0x10(%rsp)
    00000d1b: 	movaps	%xmm6, 0x30(%rsp)
    00000d20: 	movaps	%xmm3, 0x40(%rsp)
    00000d25: 	movaps	%xmm7, 0x50(%rsp)
    00000d2a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4354:
    00000d30: 	movq	%rbp, %rax
    00000d33: 	pxor	%xmm1, %xmm1
    00000d37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4351:
    00000d40: 	movaps	(%rax), %xmm0
    00000d43: 	subps	(%rsp), %xmm0
    00000d47: 	addq	$0x10, %rax
    00000d4b: 	subps	0x30(%rsp), %xmm0
    00000d50: 	subps	0x40(%rsp), %xmm0
    00000d55: 	subps	0x50(%rsp), %xmm0
    00000d5a: 	addss	%xmm0, %xmm1
    00000d5e: 	movaps	%xmm0, %xmm2
    00000d61: 	shufps	$0x55, %xmm0, %xmm2
    00000d65: 	addss	%xmm1, %xmm2
    00000d69: 	movaps	%xmm0, %xmm1
    00000d6c: 	unpckhps	%xmm0, %xmm1
    00000d6f: 	shufps	$0xff, %xmm0, %xmm0
    00000d73: 	addss	%xmm2, %xmm1
    00000d77: 	addss	%xmm0, %xmm1
    00000d7b: 	cmpq	%rbx, %rax
    00000d7e: 	jne	.Ltmp4351 # Offset: 3454
    00000d80: 	pxor	%xmm0, %xmm0
    00000d84: 	movaps	0x60(%rsp), %xmm3
    00000d89: 	movaps	%xmm1, %xmm2
    00000d8c: 	cvtsd2ss	init_value(%rip), %xmm0
    00000d94: 	subss	0x78(%rsp), %xmm0
    00000d9a: 	subss	0x7c(%rsp), %xmm0
    00000da0: 	subss	0x80(%rsp), %xmm0
    00000da9: 	andps	%xmm1, %xmm3
    00000dac: 	subss	0x84(%rsp), %xmm0
    00000db5: 	mulss	0x70(%rsp), %xmm0
    00000dbb: 	subss	%xmm0, %xmm2
    00000dbf: 	pxor	%xmm0, %xmm0
    00000dc3: 	cvtss2sd	%xmm3, %xmm0
    00000dc7: 	comisd	0x18(%rsp), %xmm0
    00000dcd: 	jbe	.Ltmp4352 # Offset: 3533
    00000dcf: 	divss	%xmm1, %xmm2
.Ltmp4352:
    00000dd3: 	movsd	0x10(%rsp), %xmm4
    00000dd9: 	cvtss2sd	%xmm2, %xmm2
    00000ddd: 	andpd	0x20(%rsp), %xmm2
    00000de3: 	comisd	%xmm2, %xmm4
    00000de7: 	jbe	.Ltmp4353 # Offset: 3559
.Ltmp4520:
    00000ded: 	addl	$0x1, %r13d
    00000df1: 	cmpl	%edx, %r13d
    00000df4: 	jl	.Ltmp4354 # Offset: 3572
.Ltmp4350:
    00000dfa: 	movq	0x88(%rsp), %rsi
    00000e02: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000e09: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3593
    00000e0e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e15: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e1c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e23: 	je	.Ltmp4355 # Offset: 3619
.Ltmp4563:
    00000e29: 	movq	-0x20(%rax), %r13
    00000e2d: 	callq	clock@PLT # Offset: 3629
    00000e32: 	pxor	%xmm0, %xmm0
    00000e36: 	movq	%rax, end_time(%rip)
    00000e3d: 	movq	%r13, %rdi
    00000e40: 	subq	start_time(%rip), %rax
    00000e47: 	cvtsi2sd	%rax, %xmm0
    00000e4c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e54: 	callq	_Z13record_resultdPKc # Offset: 3668
    00000e59: 	movq	0x170(%rsp), %rdi
    00000e61: 	cmpq	%r12, %rdi
    00000e64: 	je	.Ltmp4356 # Offset: 3684
    00000e66: 	movq	0x180(%rsp), %rax
    00000e6e: 	leaq	0x1(%rax), %rsi
    00000e72: 	callq	_ZdlPvm@PLT # Offset: 3698
.Ltmp4356:
    00000e77: 	movq	0x88(%rsp), %rdi
    00000e7f: 	leaq	DATAat0x3d316(%rip), %rdx
    00000e86: 	movq	%r15, %rsi
    00000e89: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3721
    00000e8e: 	callq	clock@PLT # Offset: 3726
    00000e93: 	movl	iterations(%rip), %edx
    00000e99: 	movq	%rax, start_time(%rip)
    00000ea0: 	testl	%edx, %edx
    00000ea2: 	jle	.Ltmp4357 # Offset: 3746
    00000ea8: 	movss	0x78(%rsp), %xmm5
    00000eae: 	pxor	%xmm7, %xmm7
    00000eb2: 	movsd	DATAat0x3d6d8(%rip), %xmm3
    00000eba: 	movss	DATAat0x3d720(%rip), %xmm6
    00000ec2: 	movq	DATAat0x3d710(%rip), %xmm4
    00000eca: 	movss	%xmm7, 0x74(%rsp)
    00000ed0: 	xorl	%r13d, %r13d
    00000ed3: 	movsd	DATAat0x3d6f0(%rip), %xmm7
    00000edb: 	shufps	$0x0, %xmm5, %xmm5
    00000edf: 	movaps	%xmm5, (%rsp)
    00000ee3: 	movss	DATAat0x3d68c(%rip), %xmm5
    00000eeb: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000ef2: 	movaps	%xmm6, 0x60(%rsp)
    00000ef7: 	movss	%xmm5, 0x70(%rsp)
    00000efd: 	movsd	%xmm3, 0x18(%rsp)
    00000f03: 	movaps	%xmm4, 0x20(%rsp)
    00000f08: 	movsd	%xmm7, 0x10(%rsp)
    00000f0e: 	nop # Size: 2
.Ltmp4361:
    00000f10: 	movq	%rbp, %rax
    00000f13: 	pxor	%xmm0, %xmm0
    00000f17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4358:
    00000f20: 	movaps	(%rsp), %xmm2
    00000f24: 	mulps	(%rax), %xmm2
    00000f27: 	addq	$0x10, %rax
    00000f2b: 	addss	%xmm2, %xmm0
    00000f2f: 	movaps	%xmm2, %xmm1
    00000f32: 	shufps	$0x55, %xmm2, %xmm1
    00000f36: 	addss	%xmm0, %xmm1
    00000f3a: 	movaps	%xmm2, %xmm0
    00000f3d: 	unpckhps	%xmm2, %xmm0
    00000f40: 	shufps	$0xff, %xmm2, %xmm2
    00000f44: 	addss	%xmm1, %xmm0
    00000f48: 	addss	%xmm2, %xmm0
    00000f4c: 	cmpq	%rax, %rbx
    00000f4f: 	jne	.Ltmp4358 # Offset: 3919
    00000f51: 	pxor	%xmm2, %xmm2
    00000f55: 	movaps	0x60(%rsp), %xmm6
    00000f5a: 	movaps	%xmm0, %xmm1
    00000f5d: 	cvtsd2ss	init_value(%rip), %xmm2
    00000f65: 	mulss	0x78(%rsp), %xmm2
    00000f6b: 	mulss	0x70(%rsp), %xmm2
    00000f71: 	andps	%xmm0, %xmm6
    00000f74: 	subss	%xmm2, %xmm1
    00000f78: 	pxor	%xmm2, %xmm2
    00000f7c: 	cvtss2sd	%xmm6, %xmm2
    00000f80: 	comisd	0x18(%rsp), %xmm2
    00000f86: 	jbe	.Ltmp4359 # Offset: 3974
    00000f88: 	divss	%xmm0, %xmm1
.Ltmp4359:
    00000f8c: 	movsd	0x10(%rsp), %xmm4
    00000f92: 	cvtss2sd	%xmm1, %xmm1
    00000f96: 	andpd	0x20(%rsp), %xmm1
    00000f9c: 	comisd	%xmm1, %xmm4
    00000fa0: 	jbe	.Ltmp4360 # Offset: 4000
.Ltmp4519:
    00000fa6: 	addl	$0x1, %r13d
    00000faa: 	cmpl	%edx, %r13d
    00000fad: 	jl	.Ltmp4361 # Offset: 4013
.Ltmp4357:
    00000fb3: 	movq	0x88(%rsp), %rsi
    00000fbb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000fc2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4034
    00000fc7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fce: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fd5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fdc: 	je	.Ltmp4362 # Offset: 4060
.Ltmp4550:
    00000fe2: 	movq	-0x20(%rax), %r13
    00000fe6: 	callq	clock@PLT # Offset: 4070
    00000feb: 	pxor	%xmm0, %xmm0
    00000fef: 	movq	%rax, end_time(%rip)
    00000ff6: 	movq	%r13, %rdi
    00000ff9: 	subq	start_time(%rip), %rax
    00001000: 	cvtsi2sd	%rax, %xmm0
    00001005: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000100d: 	callq	_Z13record_resultdPKc # Offset: 4109
    00001012: 	movq	0x170(%rsp), %rdi
    0000101a: 	cmpq	%r12, %rdi
    0000101d: 	je	.Ltmp4363 # Offset: 4125
    0000101f: 	movq	0x180(%rsp), %rax
    00001027: 	leaq	0x1(%rax), %rsi
    0000102b: 	callq	_ZdlPvm@PLT # Offset: 4139
.Ltmp4363:
    00001030: 	movq	0x88(%rsp), %rdi
    00001038: 	leaq	DATAat0x3d329(%rip), %rdx
    0000103f: 	movq	%r15, %rsi
    00001042: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4162
    00001047: 	callq	clock@PLT # Offset: 4167
    0000104c: 	movl	iterations(%rip), %edx
    00001052: 	movq	%rax, start_time(%rip)
    00001059: 	testl	%edx, %edx
    0000105b: 	jle	.Ltmp4364 # Offset: 4187
    00001061: 	movss	0x78(%rsp), %xmm0
    00001067: 	pxor	%xmm7, %xmm7
    0000106b: 	xorl	%r13d, %r13d
    0000106e: 	movss	0x84(%rsp), %xmm3
    00001077: 	mulss	0x7c(%rsp), %xmm0
    0000107d: 	movss	DATAat0x3d68c(%rip), %xmm5
    00001085: 	movss	%xmm7, 0x74(%rsp)
    0000108b: 	movss	DATAat0x3d720(%rip), %xmm6
    00001093: 	mulss	0x80(%rsp), %xmm0
    0000109c: 	movsd	DATAat0x3d6d8(%rip), %xmm4
    000010a4: 	movaps	%xmm6, 0x60(%rsp)
    000010a9: 	leaq	DATAat0x3d1d8(%rip), %r14
    000010b0: 	movq	DATAat0x3d710(%rip), %xmm7
    000010b8: 	movss	%xmm5, 0x70(%rsp)
    000010be: 	movsd	DATAat0x3d6f0(%rip), %xmm5
    000010c6: 	movsd	%xmm4, 0x18(%rsp)
    000010cc: 	movaps	%xmm7, 0x20(%rsp)
    000010d1: 	movsd	%xmm5, 0x10(%rsp)
    000010d7: 	mulss	%xmm0, %xmm3
    000010db: 	movaps	%xmm3, %xmm4
    000010de: 	movss	%xmm3, 0x30(%rsp)
    000010e4: 	shufps	$0x0, %xmm4, %xmm4
    000010e8: 	movaps	%xmm4, (%rsp)
    000010ec: 	nopl	(%rax) # Size: 4
.Ltmp4368:
    000010f0: 	movq	%rbp, %rax
    000010f3: 	pxor	%xmm0, %xmm0
    000010f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4365:
    00001100: 	movaps	(%rsp), %xmm2
    00001104: 	mulps	(%rax), %xmm2
    00001107: 	addq	$0x10, %rax
    0000110b: 	addss	%xmm2, %xmm0
    0000110f: 	movaps	%xmm2, %xmm1
    00001112: 	shufps	$0x55, %xmm2, %xmm1
    00001116: 	addss	%xmm0, %xmm1
    0000111a: 	movaps	%xmm2, %xmm0
    0000111d: 	unpckhps	%xmm2, %xmm0
    00001120: 	shufps	$0xff, %xmm2, %xmm2
    00001124: 	addss	%xmm1, %xmm0
    00001128: 	addss	%xmm2, %xmm0
    0000112c: 	cmpq	%rbx, %rax
    0000112f: 	jne	.Ltmp4365 # Offset: 4399
    00001131: 	pxor	%xmm2, %xmm2
    00001135: 	movaps	0x60(%rsp), %xmm4
    0000113a: 	movaps	%xmm0, %xmm1
    0000113d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001145: 	mulss	0x30(%rsp), %xmm2
    0000114b: 	mulss	0x70(%rsp), %xmm2
    00001151: 	andps	%xmm0, %xmm4
    00001154: 	subss	%xmm2, %xmm1
    00001158: 	pxor	%xmm2, %xmm2
    0000115c: 	cvtss2sd	%xmm4, %xmm2
    00001160: 	comisd	0x18(%rsp), %xmm2
    00001166: 	jbe	.Ltmp4366 # Offset: 4454
    00001168: 	divss	%xmm0, %xmm1
.Ltmp4366:
    0000116c: 	movsd	0x10(%rsp), %xmm4
    00001172: 	cvtss2sd	%xmm1, %xmm1
    00001176: 	andpd	0x20(%rsp), %xmm1
    0000117c: 	comisd	%xmm1, %xmm4
    00001180: 	jbe	.Ltmp4367 # Offset: 4480
.Ltmp4518:
    00001186: 	addl	$0x1, %r13d
    0000118a: 	cmpl	%edx, %r13d
    0000118d: 	jl	.Ltmp4368 # Offset: 4493
.Ltmp4364:
    00001193: 	movq	0x88(%rsp), %rsi
    0000119b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011a2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4514
    000011a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011bc: 	je	.Ltmp4369 # Offset: 4540
.Ltmp4549:
    000011c2: 	movq	-0x20(%rax), %r13
    000011c6: 	callq	clock@PLT # Offset: 4550
    000011cb: 	pxor	%xmm0, %xmm0
    000011cf: 	movq	%rax, end_time(%rip)
    000011d6: 	movq	%r13, %rdi
    000011d9: 	subq	start_time(%rip), %rax
    000011e0: 	cvtsi2sd	%rax, %xmm0
    000011e5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000011ed: 	callq	_Z13record_resultdPKc # Offset: 4589
    000011f2: 	movq	0x170(%rsp), %rdi
    000011fa: 	cmpq	%r12, %rdi
    000011fd: 	je	.Ltmp4370 # Offset: 4605
    000011ff: 	movq	0x180(%rsp), %rax
    00001207: 	leaq	0x1(%rax), %rsi
    0000120b: 	callq	_ZdlPvm@PLT # Offset: 4619
.Ltmp4370:
    00001210: 	movq	0x88(%rsp), %rdi
    00001218: 	leaq	DATAat0x3d600(%rip), %rdx
    0000121f: 	movq	%r15, %rsi
    00001222: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4642
    00001227: 	callq	clock@PLT # Offset: 4647
    0000122c: 	movl	iterations(%rip), %edx
    00001232: 	movq	%rax, start_time(%rip)
    00001239: 	testl	%edx, %edx
    0000123b: 	jle	.Ltmp4371 # Offset: 4667
    00001241: 	movss	0x78(%rsp), %xmm0
    00001247: 	pxor	%xmm3, %xmm3
    0000124b: 	xorl	%r13d, %r13d
    0000124e: 	movss	0x84(%rsp), %xmm7
    00001257: 	mulss	0x7c(%rsp), %xmm0
    0000125d: 	movss	DATAat0x3d68c(%rip), %xmm4
    00001265: 	movss	%xmm3, 0x74(%rsp)
    0000126b: 	movss	DATAat0x3d720(%rip), %xmm5
    00001273: 	mulss	0x80(%rsp), %xmm0
    0000127c: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    00001284: 	movaps	%xmm5, 0x60(%rsp)
    00001289: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001290: 	movq	DATAat0x3d710(%rip), %xmm3
    00001298: 	movss	%xmm4, 0x70(%rsp)
    0000129e: 	movsd	DATAat0x3d6f0(%rip), %xmm4
    000012a6: 	movsd	%xmm6, 0x18(%rsp)
    000012ac: 	movaps	%xmm3, 0x20(%rsp)
    000012b1: 	movsd	%xmm4, 0x10(%rsp)
    000012b7: 	mulss	%xmm0, %xmm7
    000012bb: 	movaps	%xmm7, %xmm6
    000012be: 	movss	%xmm7, 0x30(%rsp)
    000012c4: 	shufps	$0x0, %xmm6, %xmm6
    000012c8: 	movaps	%xmm6, (%rsp)
    000012cc: 	nopl	(%rax) # Size: 4
.Ltmp4375:
    000012d0: 	movq	%rbp, %rax
    000012d3: 	pxor	%xmm0, %xmm0
    000012d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4372:
    000012e0: 	movaps	(%rsp), %xmm2
    000012e4: 	addps	(%rax), %xmm2
    000012e7: 	addq	$0x10, %rax
    000012eb: 	addss	%xmm2, %xmm0
    000012ef: 	movaps	%xmm2, %xmm1
    000012f2: 	shufps	$0x55, %xmm2, %xmm1
    000012f6: 	addss	%xmm0, %xmm1
    000012fa: 	movaps	%xmm2, %xmm0
    000012fd: 	unpckhps	%xmm2, %xmm0
    00001300: 	shufps	$0xff, %xmm2, %xmm2
    00001304: 	addss	%xmm1, %xmm0
    00001308: 	addss	%xmm2, %xmm0
    0000130c: 	cmpq	%rbx, %rax
    0000130f: 	jne	.Ltmp4372 # Offset: 4879
    00001311: 	pxor	%xmm2, %xmm2
    00001315: 	movaps	0x60(%rsp), %xmm5
    0000131a: 	movaps	%xmm0, %xmm1
    0000131d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001325: 	addss	0x30(%rsp), %xmm2
    0000132b: 	mulss	0x70(%rsp), %xmm2
    00001331: 	andps	%xmm0, %xmm5
    00001334: 	subss	%xmm2, %xmm1
    00001338: 	pxor	%xmm2, %xmm2
    0000133c: 	cvtss2sd	%xmm5, %xmm2
    00001340: 	comisd	0x18(%rsp), %xmm2
    00001346: 	jbe	.Ltmp4373 # Offset: 4934
    00001348: 	divss	%xmm0, %xmm1
.Ltmp4373:
    0000134c: 	movsd	0x10(%rsp), %xmm4
    00001352: 	cvtss2sd	%xmm1, %xmm1
    00001356: 	andpd	0x20(%rsp), %xmm1
    0000135c: 	comisd	%xmm1, %xmm4
    00001360: 	jbe	.Ltmp4374 # Offset: 4960
.Ltmp4517:
    00001366: 	addl	$0x1, %r13d
    0000136a: 	cmpl	%edx, %r13d
    0000136d: 	jl	.Ltmp4375 # Offset: 4973
.Ltmp4371:
    00001373: 	movq	0x88(%rsp), %rsi
    0000137b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001382: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4994
    00001387: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000138e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001395: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000139c: 	je	.Ltmp4376 # Offset: 5020
.Ltmp4544:
    000013a2: 	movq	-0x20(%rax), %r13
    000013a6: 	callq	clock@PLT # Offset: 5030
    000013ab: 	pxor	%xmm0, %xmm0
    000013af: 	movq	%rax, end_time(%rip)
    000013b6: 	movq	%r13, %rdi
    000013b9: 	subq	start_time(%rip), %rax
    000013c0: 	cvtsi2sd	%rax, %xmm0
    000013c5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000013cd: 	callq	_Z13record_resultdPKc # Offset: 5069
    000013d2: 	movq	0x170(%rsp), %rdi
    000013da: 	cmpq	%r12, %rdi
    000013dd: 	je	.Ltmp4377 # Offset: 5085
    000013df: 	movq	0x180(%rsp), %rax
    000013e7: 	leaq	0x1(%rax), %rsi
    000013eb: 	callq	_ZdlPvm@PLT # Offset: 5099
.Ltmp4377:
    000013f0: 	movq	0x88(%rsp), %rdi
    000013f8: 	leaq	DATAat0x3d620(%rip), %rdx
    000013ff: 	movq	%r15, %rsi
    00001402: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5122
    00001407: 	callq	clock@PLT # Offset: 5127
    0000140c: 	movl	iterations(%rip), %edx
    00001412: 	movq	%rax, start_time(%rip)
    00001419: 	testl	%edx, %edx
    0000141b: 	jle	.Ltmp4378 # Offset: 5147
    00001421: 	pxor	%xmm7, %xmm7
    00001425: 	movsd	DATAat0x3d6f0(%rip), %xmm4
    0000142d: 	movss	0x78(%rsp), %xmm3
    00001433: 	movss	DATAat0x3d720(%rip), %xmm5
    0000143b: 	movss	%xmm7, 0x74(%rsp)
    00001441: 	movss	DATAat0x3d68c(%rip), %xmm7
    00001449: 	xorl	%r13d, %r13d
    0000144c: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    00001454: 	shufps	$0x0, %xmm3, %xmm3
    00001458: 	movaps	%xmm5, 0x60(%rsp)
    0000145d: 	movss	0x80(%rsp), %xmm5
    00001466: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000146d: 	movaps	%xmm3, (%rsp)
    00001471: 	movq	DATAat0x3d710(%rip), %xmm3
    00001479: 	movss	%xmm7, 0x70(%rsp)
    0000147f: 	movss	0x7c(%rsp), %xmm7
    00001485: 	shufps	$0x0, %xmm5, %xmm5
    00001489: 	movsd	%xmm4, 0x10(%rsp)
    0000148f: 	movss	0x84(%rsp), %xmm4
    00001498: 	shufps	$0x0, %xmm7, %xmm7
    0000149c: 	movsd	%xmm6, 0x18(%rsp)
    000014a2: 	shufps	$0x0, %xmm4, %xmm4
    000014a6: 	movaps	%xmm3, 0x20(%rsp)
    000014ab: 	movaps	%xmm7, 0x30(%rsp)
    000014b0: 	movaps	%xmm5, 0x40(%rsp)
    000014b5: 	movaps	%xmm4, 0x50(%rsp)
    000014ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4382:
    000014c0: 	movq	%rbp, %rax
    000014c3: 	pxor	%xmm1, %xmm1
    000014c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4379:
    000014d0: 	movaps	(%rsp), %xmm0
    000014d4: 	mulps	(%rax), %xmm0
    000014d7: 	addq	$0x10, %rax
    000014db: 	mulps	0x30(%rsp), %xmm0
    000014e0: 	mulps	0x40(%rsp), %xmm0
    000014e5: 	mulps	0x50(%rsp), %xmm0
    000014ea: 	addss	%xmm0, %xmm1
    000014ee: 	movaps	%xmm0, %xmm2
    000014f1: 	shufps	$0x55, %xmm0, %xmm2
    000014f5: 	addss	%xmm1, %xmm2
    000014f9: 	movaps	%xmm0, %xmm1
    000014fc: 	unpckhps	%xmm0, %xmm1
    000014ff: 	shufps	$0xff, %xmm0, %xmm0
    00001503: 	addss	%xmm2, %xmm1
    00001507: 	addss	%xmm0, %xmm1
    0000150b: 	cmpq	%rbx, %rax
    0000150e: 	jne	.Ltmp4379 # Offset: 5390
    00001510: 	pxor	%xmm0, %xmm0
    00001514: 	movaps	0x60(%rsp), %xmm7
    00001519: 	movaps	%xmm1, %xmm2
    0000151c: 	cvtsd2ss	init_value(%rip), %xmm0
    00001524: 	mulss	0x78(%rsp), %xmm0
    0000152a: 	mulss	0x7c(%rsp), %xmm0
    00001530: 	andps	%xmm1, %xmm7
    00001533: 	mulss	0x80(%rsp), %xmm0
    0000153c: 	mulss	0x84(%rsp), %xmm0
    00001545: 	mulss	0x70(%rsp), %xmm0
    0000154b: 	subss	%xmm0, %xmm2
    0000154f: 	pxor	%xmm0, %xmm0
    00001553: 	cvtss2sd	%xmm7, %xmm0
    00001557: 	comisd	0x18(%rsp), %xmm0
    0000155d: 	jbe	.Ltmp4380 # Offset: 5469
    0000155f: 	divss	%xmm1, %xmm2
.Ltmp4380:
    00001563: 	movsd	0x10(%rsp), %xmm5
    00001569: 	cvtss2sd	%xmm2, %xmm2
    0000156d: 	andpd	0x20(%rsp), %xmm2
    00001573: 	comisd	%xmm2, %xmm5
    00001577: 	jbe	.Ltmp4381 # Offset: 5495
.Ltmp4516:
    0000157d: 	addl	$0x1, %r13d
    00001581: 	cmpl	%edx, %r13d
    00001584: 	jl	.Ltmp4382 # Offset: 5508
.Ltmp4378:
    0000158a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001591: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001598: 	subq	$0x20, %rax
    0000159c: 	cmpq	%rax, %r14
    0000159f: 	je	.Ltmp4383 # Offset: 5535
    000015a5: 	leaq	0x10(%r14), %rdi
    000015a9: 	movq	0x178(%rsp), %r13
    000015b1: 	movq	%rdi, (%r14)
    000015b4: 	movq	0x170(%rsp), %rax
    000015bc: 	movq	%rax, %rcx
    000015bf: 	movq	%rax, (%rsp)
    000015c3: 	addq	%r13, %rcx
    000015c6: 	je	.Ltmp4384 # Offset: 5574
    000015c8: 	testq	%rax, %rax
    000015cb: 	je	.Ltmp4385 # Offset: 5579
.Ltmp4384:
    000015d1: 	movq	%r13, 0xb0(%rsp)
    000015d9: 	cmpq	$0xf, %r13
    000015dd: 	ja	.Ltmp4386 # Offset: 5597
    000015e3: 	cmpq	$0x1, %r13
    000015e7: 	jne	.Ltmp4387 # Offset: 5607
    000015ed: 	movq	(%rsp), %rax
    000015f1: 	movzbl	(%rax), %eax
    000015f4: 	movb	%al, 0x10(%r14)
.Ltmp4527:
    000015f8: 	movq	%r13, 0x8(%r14)
    000015fc: 	movb	$0x0, (%rdi,%r13)
    00001601: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001608: 	addq	$0x20, %rax
    0000160c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp4562:
    00001613: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000161a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001621: 	je	.Ltmp4388 # Offset: 5665
.Ltmp4561:
    00001627: 	movq	-0x20(%rax), %r13
    0000162b: 	callq	clock@PLT # Offset: 5675
    00001630: 	pxor	%xmm0, %xmm0
    00001634: 	movq	%rax, end_time(%rip)
    0000163b: 	movq	%r13, %rdi
    0000163e: 	subq	start_time(%rip), %rax
    00001645: 	cvtsi2sd	%rax, %xmm0
    0000164a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001652: 	callq	_Z13record_resultdPKc # Offset: 5714
    00001657: 	movq	0x170(%rsp), %rdi
    0000165f: 	cmpq	%r12, %rdi
    00001662: 	je	.Ltmp4389 # Offset: 5730
    00001664: 	movq	0x180(%rsp), %rax
    0000166c: 	leaq	0x1(%rax), %rsi
    00001670: 	callq	_ZdlPvm@PLT # Offset: 5744
.Ltmp4389:
    00001675: 	movq	0x88(%rsp), %rdi
    0000167d: 	leaq	DATAat0x3d347(%rip), %rdx
    00001684: 	movq	%r15, %rsi
    00001687: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5767
    0000168c: 	callq	clock@PLT # Offset: 5772
    00001691: 	movl	iterations(%rip), %edx
    00001697: 	movq	%rax, start_time(%rip)
    0000169e: 	testl	%edx, %edx
    000016a0: 	jle	.Ltmp4390 # Offset: 5792
    000016a6: 	pxor	%xmm7, %xmm7
    000016aa: 	movss	0x78(%rsp), %xmm6
    000016b0: 	movss	DATAat0x3d68c(%rip), %xmm5
    000016b8: 	xorl	%r13d, %r13d
    000016bb: 	movsd	DATAat0x3d6d8(%rip), %xmm3
    000016c3: 	movq	DATAat0x3d710(%rip), %xmm4
    000016cb: 	movss	%xmm7, 0x74(%rsp)
    000016d1: 	leaq	DATAat0x3d1d8(%rip), %r14
    000016d8: 	movsd	DATAat0x3d6f0(%rip), %xmm7
    000016e0: 	shufps	$0x0, %xmm6, %xmm6
    000016e4: 	movaps	%xmm6, (%rsp)
    000016e8: 	movss	DATAat0x3d720(%rip), %xmm6
    000016f0: 	movss	%xmm5, 0x70(%rsp)
    000016f6: 	movaps	%xmm6, 0x60(%rsp)
    000016fb: 	movsd	%xmm3, 0x18(%rsp)
    00001701: 	movaps	%xmm4, 0x20(%rsp)
    00001706: 	movsd	%xmm7, 0x10(%rsp)
    0000170c: 	nopl	(%rax) # Size: 4
.Ltmp4394:
    00001710: 	movq	%rbp, %rax
    00001713: 	pxor	%xmm1, %xmm1
    00001717: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4391:
    00001720: 	movaps	(%rax), %xmm0
    00001723: 	divps	(%rsp), %xmm0
    00001727: 	addss	%xmm0, %xmm1
    0000172b: 	movaps	%xmm0, %xmm2
    0000172e: 	shufps	$0x55, %xmm0, %xmm2
    00001732: 	addq	$0x10, %rax
    00001736: 	addss	%xmm1, %xmm2
    0000173a: 	movaps	%xmm0, %xmm1
    0000173d: 	unpckhps	%xmm0, %xmm1
    00001740: 	shufps	$0xff, %xmm0, %xmm0
    00001744: 	addss	%xmm2, %xmm1
    00001748: 	addss	%xmm0, %xmm1
    0000174c: 	cmpq	%rbx, %rax
    0000174f: 	jne	.Ltmp4391 # Offset: 5967
    00001751: 	pxor	%xmm2, %xmm2
    00001755: 	movaps	0x60(%rsp), %xmm3
    0000175a: 	movaps	%xmm1, %xmm0
    0000175d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001765: 	divss	0x78(%rsp), %xmm2
    0000176b: 	mulss	0x70(%rsp), %xmm2
    00001771: 	andps	%xmm1, %xmm3
    00001774: 	subss	%xmm2, %xmm0
    00001778: 	pxor	%xmm2, %xmm2
    0000177c: 	cvtss2sd	%xmm3, %xmm2
    00001780: 	comisd	0x18(%rsp), %xmm2
    00001786: 	jbe	.Ltmp4392 # Offset: 6022
    00001788: 	divss	%xmm1, %xmm0
.Ltmp4392:
    0000178c: 	movsd	0x10(%rsp), %xmm5
    00001792: 	cvtss2sd	%xmm0, %xmm0
    00001796: 	andpd	0x20(%rsp), %xmm0
    0000179c: 	comisd	%xmm0, %xmm5
    000017a0: 	jbe	.Ltmp4393 # Offset: 6048
.Ltmp4529:
    000017a6: 	addl	$0x1, %r13d
    000017aa: 	cmpl	%edx, %r13d
    000017ad: 	jl	.Ltmp4394 # Offset: 6061
.Ltmp4390:
    000017b3: 	movq	0x88(%rsp), %rsi
    000017bb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017c2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6082
    000017c7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017ce: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017dc: 	je	.Ltmp4395 # Offset: 6108
.Ltmp4560:
    000017e2: 	movq	-0x20(%rax), %r13
    000017e6: 	callq	clock@PLT # Offset: 6118
    000017eb: 	pxor	%xmm0, %xmm0
    000017ef: 	movq	%rax, end_time(%rip)
    000017f6: 	movq	%r13, %rdi
    000017f9: 	subq	start_time(%rip), %rax
    00001800: 	cvtsi2sd	%rax, %xmm0
    00001805: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000180d: 	callq	_Z13record_resultdPKc # Offset: 6157
    00001812: 	movq	0x170(%rsp), %rdi
    0000181a: 	cmpq	%r12, %rdi
    0000181d: 	je	.Ltmp4396 # Offset: 6173
    0000181f: 	movq	0x180(%rsp), %rax
    00001827: 	leaq	0x1(%rax), %rsi
    0000182b: 	callq	_ZdlPvm@PLT # Offset: 6187
.Ltmp4396:
    00001830: 	movq	0x88(%rsp), %rdi
    00001838: 	leaq	DATAat0x3d358(%rip), %rdx
    0000183f: 	movq	%r15, %rsi
    00001842: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6210
    00001847: 	callq	clock@PLT # Offset: 6215
    0000184c: 	movl	iterations(%rip), %edx
    00001852: 	movq	%rax, start_time(%rip)
    00001859: 	testl	%edx, %edx
    0000185b: 	jle	.Ltmp4397 # Offset: 6235
    00001861: 	pxor	%xmm5, %xmm5
    00001865: 	movss	0x78(%rsp), %xmm3
    0000186b: 	movsd	DATAat0x3d6d8(%rip), %xmm4
    00001873: 	xorl	%r13d, %r13d
    00001876: 	movq	DATAat0x3d710(%rip), %xmm7
    0000187e: 	movss	%xmm5, 0x74(%rsp)
    00001884: 	movsd	DATAat0x3d6f0(%rip), %xmm5
    0000188c: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001893: 	movss	DATAat0x3d68c(%rip), %xmm6
    0000189b: 	movsd	%xmm4, 0x18(%rsp)
    000018a1: 	shufps	$0x0, %xmm3, %xmm3
    000018a5: 	movss	0x84(%rsp), %xmm4
    000018ae: 	movaps	%xmm7, 0x20(%rsp)
    000018b3: 	movss	0x7c(%rsp), %xmm7
    000018b9: 	movsd	%xmm5, 0x10(%rsp)
    000018bf: 	shufps	$0x0, %xmm4, %xmm4
    000018c3: 	movss	0x80(%rsp), %xmm5
    000018cc: 	movaps	%xmm3, (%rsp)
    000018d0: 	movss	DATAat0x3d720(%rip), %xmm3
    000018d8: 	shufps	$0x0, %xmm7, %xmm7
    000018dc: 	shufps	$0x0, %xmm5, %xmm5
    000018e0: 	movss	%xmm6, 0x70(%rsp)
    000018e6: 	movaps	%xmm3, 0x60(%rsp)
    000018eb: 	movaps	%xmm7, 0x30(%rsp)
    000018f0: 	movaps	%xmm5, 0x40(%rsp)
    000018f5: 	movaps	%xmm4, 0x50(%rsp)
    000018fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4401:
    00001900: 	movq	%rbp, %rax
    00001903: 	pxor	%xmm1, %xmm1
    00001907: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4398:
    00001910: 	movaps	(%rax), %xmm0
    00001913: 	divps	(%rsp), %xmm0
    00001917: 	divps	0x30(%rsp), %xmm0
    0000191c: 	addq	$0x10, %rax
    00001920: 	divps	0x40(%rsp), %xmm0
    00001925: 	divps	0x50(%rsp), %xmm0
    0000192a: 	addss	%xmm0, %xmm1
    0000192e: 	movaps	%xmm0, %xmm2
    00001931: 	shufps	$0x55, %xmm0, %xmm2
    00001935: 	addss	%xmm1, %xmm2
    00001939: 	movaps	%xmm0, %xmm1
    0000193c: 	unpckhps	%xmm0, %xmm1
    0000193f: 	shufps	$0xff, %xmm0, %xmm0
    00001943: 	addss	%xmm2, %xmm1
    00001947: 	addss	%xmm0, %xmm1
    0000194b: 	cmpq	%rax, %rbx
    0000194e: 	jne	.Ltmp4398 # Offset: 6478
    00001950: 	pxor	%xmm0, %xmm0
    00001954: 	movaps	0x60(%rsp), %xmm6
    00001959: 	movaps	%xmm1, %xmm2
    0000195c: 	cvtsd2ss	init_value(%rip), %xmm0
    00001964: 	divss	0x78(%rsp), %xmm0
    0000196a: 	divss	0x7c(%rsp), %xmm0
    00001970: 	divss	0x80(%rsp), %xmm0
    00001979: 	divss	0x84(%rsp), %xmm0
    00001982: 	mulss	0x70(%rsp), %xmm0
    00001988: 	andps	%xmm1, %xmm6
    0000198b: 	subss	%xmm0, %xmm2
    0000198f: 	pxor	%xmm0, %xmm0
    00001993: 	cvtss2sd	%xmm6, %xmm0
    00001997: 	comisd	0x18(%rsp), %xmm0
    0000199d: 	jbe	.Ltmp4399 # Offset: 6557
    0000199f: 	divss	%xmm1, %xmm2
.Ltmp4399:
    000019a3: 	movsd	0x10(%rsp), %xmm7
    000019a9: 	cvtss2sd	%xmm2, %xmm2
    000019ad: 	andpd	0x20(%rsp), %xmm2
    000019b3: 	comisd	%xmm2, %xmm7
    000019b7: 	jbe	.Ltmp4400 # Offset: 6583
.Ltmp4528:
    000019bd: 	addl	$0x1, %r13d
    000019c1: 	cmpl	%edx, %r13d
    000019c4: 	jl	.Ltmp4401 # Offset: 6596
.Ltmp4397:
    000019ca: 	movq	0x88(%rsp), %rsi
    000019d2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019d9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6617
    000019de: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019e5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000019ec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019f3: 	je	.Ltmp4402 # Offset: 6643
.Ltmp4543:
    000019f9: 	movq	-0x20(%rax), %r13
    000019fd: 	callq	clock@PLT # Offset: 6653
    00001a02: 	pxor	%xmm0, %xmm0
    00001a06: 	movq	%rax, end_time(%rip)
    00001a0d: 	movq	%r13, %rdi
    00001a10: 	subq	start_time(%rip), %rax
    00001a17: 	cvtsi2sd	%rax, %xmm0
    00001a1c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001a24: 	callq	_Z13record_resultdPKc # Offset: 6692
    00001a29: 	movq	0x170(%rsp), %rdi
    00001a31: 	cmpq	%r12, %rdi
    00001a34: 	je	.Ltmp4403 # Offset: 6708
    00001a36: 	movq	0x180(%rsp), %rax
    00001a3e: 	leaq	0x1(%rax), %rsi
    00001a42: 	callq	_ZdlPvm@PLT # Offset: 6722
.Ltmp4403:
    00001a47: 	movq	0x88(%rsp), %rdi
    00001a4f: 	leaq	DATAat0x3d373(%rip), %rdx
    00001a56: 	movq	%r15, %rsi
    00001a59: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6745
    00001a5e: 	callq	clock@PLT # Offset: 6750
    00001a63: 	movl	iterations(%rip), %edx
    00001a69: 	movq	%rax, start_time(%rip)
    00001a70: 	testl	%edx, %edx
    00001a72: 	jle	.Ltmp4404 # Offset: 6770
    00001a78: 	movss	DATAat0x3d68c(%rip), %xmm6
    00001a80: 	pxor	%xmm7, %xmm7
    00001a84: 	movsd	DATAat0x3d6d8(%rip), %xmm4
    00001a8c: 	movss	DATAat0x3d720(%rip), %xmm3
    00001a94: 	movss	%xmm7, 0x74(%rsp)
    00001a9a: 	movq	DATAat0x3d710(%rip), %xmm7
    00001aa2: 	xorl	%r13d, %r13d
    00001aa5: 	movss	0x78(%rsp), %xmm0
    00001aab: 	movss	%xmm6, 0x70(%rsp)
    00001ab1: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    00001ab9: 	divss	0x7c(%rsp), %xmm0
    00001abf: 	divss	0x80(%rsp), %xmm0
    00001ac8: 	movaps	%xmm0, %xmm5
    00001acb: 	movaps	%xmm3, 0x60(%rsp)
    00001ad0: 	divss	0x84(%rsp), %xmm5
    00001ad9: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001ae0: 	movsd	%xmm6, 0x10(%rsp)
    00001ae6: 	movaps	%xmm5, %xmm6
    00001ae9: 	shufps	$0x0, %xmm6, %xmm6
    00001aed: 	movss	%xmm5, 0x30(%rsp)
    00001af3: 	movsd	%xmm4, 0x18(%rsp)
    00001af9: 	movaps	%xmm7, 0x20(%rsp)
    00001afe: 	movaps	%xmm6, (%rsp)
    00001b02: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4408:
    00001b08: 	movq	%rbp, %rax
    00001b0b: 	pxor	%xmm0, %xmm0
    00001b0f: 	nop # Size: 1
.Ltmp4405:
    00001b10: 	movaps	(%rsp), %xmm2
    00001b14: 	addps	(%rax), %xmm2
    00001b17: 	addq	$0x10, %rax
    00001b1b: 	addss	%xmm2, %xmm0
    00001b1f: 	movaps	%xmm2, %xmm1
    00001b22: 	shufps	$0x55, %xmm2, %xmm1
    00001b26: 	addss	%xmm0, %xmm1
    00001b2a: 	movaps	%xmm2, %xmm0
    00001b2d: 	unpckhps	%xmm2, %xmm0
    00001b30: 	shufps	$0xff, %xmm2, %xmm2
    00001b34: 	addss	%xmm1, %xmm0
    00001b38: 	addss	%xmm2, %xmm0
    00001b3c: 	cmpq	%rbx, %rax
    00001b3f: 	jne	.Ltmp4405 # Offset: 6975
    00001b41: 	pxor	%xmm2, %xmm2
    00001b45: 	movaps	0x60(%rsp), %xmm4
    00001b4a: 	movaps	%xmm0, %xmm1
    00001b4d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001b55: 	addss	0x30(%rsp), %xmm2
    00001b5b: 	mulss	0x70(%rsp), %xmm2
    00001b61: 	andps	%xmm0, %xmm4
    00001b64: 	subss	%xmm2, %xmm1
    00001b68: 	pxor	%xmm2, %xmm2
    00001b6c: 	cvtss2sd	%xmm4, %xmm2
    00001b70: 	comisd	0x18(%rsp), %xmm2
    00001b76: 	jbe	.Ltmp4406 # Offset: 7030
    00001b78: 	divss	%xmm0, %xmm1
.Ltmp4406:
    00001b7c: 	movsd	0x10(%rsp), %xmm7
    00001b82: 	cvtss2sd	%xmm1, %xmm1
    00001b86: 	andpd	0x20(%rsp), %xmm1
    00001b8c: 	comisd	%xmm1, %xmm7
    00001b90: 	jbe	.Ltmp4407 # Offset: 7056
.Ltmp4538:
    00001b96: 	addl	$0x1, %r13d
    00001b9a: 	cmpl	%edx, %r13d
    00001b9d: 	jl	.Ltmp4408 # Offset: 7069
.Ltmp4404:
    00001ba3: 	movq	0x88(%rsp), %rsi
    00001bab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bb2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7090
    00001bb7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bbe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bc5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bcc: 	je	.Ltmp4409 # Offset: 7116
.Ltmp4554:
    00001bd2: 	movq	-0x20(%rax), %r13
    00001bd6: 	callq	clock@PLT # Offset: 7126
    00001bdb: 	pxor	%xmm0, %xmm0
    00001bdf: 	movq	%rax, end_time(%rip)
    00001be6: 	movq	%r13, %rdi
    00001be9: 	subq	start_time(%rip), %rax
    00001bf0: 	cvtsi2sd	%rax, %xmm0
    00001bf5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001bfd: 	callq	_Z13record_resultdPKc # Offset: 7165
    00001c02: 	movq	0x170(%rsp), %rdi
    00001c0a: 	cmpq	%r12, %rdi
    00001c0d: 	je	.Ltmp4410 # Offset: 7181
    00001c0f: 	movq	0x180(%rsp), %rax
    00001c17: 	leaq	0x1(%rax), %rsi
    00001c1b: 	callq	_ZdlPvm@PLT # Offset: 7195
.Ltmp4410:
    00001c20: 	movq	0x88(%rsp), %rdi
    00001c28: 	leaq	DATAat0x3d38f(%rip), %rdx
    00001c2f: 	movq	%r15, %rsi
    00001c32: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7218
    00001c37: 	callq	clock@PLT # Offset: 7223
    00001c3c: 	movl	iterations(%rip), %edx
    00001c42: 	movq	%rax, start_time(%rip)
    00001c49: 	testl	%edx, %edx
    00001c4b: 	jle	.Ltmp4411 # Offset: 7243
    00001c51: 	movss	0x78(%rsp), %xmm4
    00001c57: 	movss	0x7c(%rsp), %xmm0
    00001c5d: 	pxor	%xmm3, %xmm3
    00001c61: 	movss	DATAat0x3d720(%rip), %xmm5
    00001c69: 	movss	DATAat0x3d68c(%rip), %xmm7
    00001c71: 	xorl	%r13d, %r13d
    00001c74: 	movss	%xmm3, 0x74(%rsp)
    00001c7a: 	movq	DATAat0x3d710(%rip), %xmm3
    00001c82: 	mulss	0x80(%rsp), %xmm0
    00001c8b: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    00001c93: 	movaps	%xmm5, 0x60(%rsp)
    00001c98: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001c9f: 	divss	0x84(%rsp), %xmm0
    00001ca8: 	subss	%xmm0, %xmm4
    00001cac: 	movss	%xmm7, 0x70(%rsp)
    00001cb2: 	movsd	DATAat0x3d6f0(%rip), %xmm7
    00001cba: 	movaps	%xmm3, 0x20(%rsp)
    00001cbf: 	movsd	%xmm6, 0x18(%rsp)
    00001cc5: 	movaps	%xmm4, %xmm3
    00001cc8: 	movss	%xmm4, 0x30(%rsp)
    00001cce: 	shufps	$0x0, %xmm3, %xmm3
    00001cd2: 	movsd	%xmm7, 0x10(%rsp)
    00001cd8: 	movaps	%xmm3, (%rsp)
    00001cdc: 	nopl	(%rax) # Size: 4
.Ltmp4415:
    00001ce0: 	movq	%rbp, %rax
    00001ce3: 	pxor	%xmm0, %xmm0
    00001ce7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4412:
    00001cf0: 	movaps	(%rsp), %xmm2
    00001cf4: 	addps	(%rax), %xmm2
    00001cf7: 	addq	$0x10, %rax
    00001cfb: 	addss	%xmm2, %xmm0
    00001cff: 	movaps	%xmm2, %xmm1
    00001d02: 	shufps	$0x55, %xmm2, %xmm1
    00001d06: 	addss	%xmm0, %xmm1
    00001d0a: 	movaps	%xmm2, %xmm0
    00001d0d: 	unpckhps	%xmm2, %xmm0
    00001d10: 	shufps	$0xff, %xmm2, %xmm2
    00001d14: 	addss	%xmm1, %xmm0
    00001d18: 	addss	%xmm2, %xmm0
    00001d1c: 	cmpq	%rbx, %rax
    00001d1f: 	jne	.Ltmp4412 # Offset: 7455
    00001d21: 	pxor	%xmm2, %xmm2
    00001d25: 	movaps	0x60(%rsp), %xmm5
    00001d2a: 	movaps	%xmm0, %xmm1
    00001d2d: 	cvtsd2ss	init_value(%rip), %xmm2
    00001d35: 	addss	0x30(%rsp), %xmm2
    00001d3b: 	mulss	0x70(%rsp), %xmm2
    00001d41: 	andps	%xmm0, %xmm5
    00001d44: 	subss	%xmm2, %xmm1
    00001d48: 	pxor	%xmm2, %xmm2
    00001d4c: 	cvtss2sd	%xmm5, %xmm2
    00001d50: 	comisd	0x18(%rsp), %xmm2
    00001d56: 	jbe	.Ltmp4413 # Offset: 7510
    00001d58: 	divss	%xmm0, %xmm1
.Ltmp4413:
    00001d5c: 	movsd	0x10(%rsp), %xmm7
    00001d62: 	cvtss2sd	%xmm1, %xmm1
    00001d66: 	andpd	0x20(%rsp), %xmm1
    00001d6c: 	comisd	%xmm1, %xmm7
    00001d70: 	jbe	.Ltmp4414 # Offset: 7536
.Ltmp4537:
    00001d76: 	addl	$0x1, %r13d
    00001d7a: 	cmpl	%edx, %r13d
    00001d7d: 	jl	.Ltmp4415 # Offset: 7549
.Ltmp4411:
    00001d83: 	movq	0x88(%rsp), %rsi
    00001d8b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d92: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7570
    00001d97: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d9e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001da5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dac: 	je	.Ltmp4416 # Offset: 7596
.Ltmp4553:
    00001db2: 	movq	-0x20(%rax), %r13
    00001db6: 	callq	clock@PLT # Offset: 7606
    00001dbb: 	pxor	%xmm0, %xmm0
    00001dbf: 	movq	%rax, end_time(%rip)
    00001dc6: 	movq	%r13, %rdi
    00001dc9: 	subq	start_time(%rip), %rax
    00001dd0: 	cvtsi2sd	%rax, %xmm0
    00001dd5: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ddd: 	callq	_Z13record_resultdPKc # Offset: 7645
    00001de2: 	movq	0x170(%rsp), %rdi
    00001dea: 	cmpq	%r12, %rdi
    00001ded: 	je	.Ltmp4417 # Offset: 7661
    00001def: 	movq	0x180(%rsp), %rax
    00001df7: 	leaq	0x1(%rax), %rsi
    00001dfb: 	callq	_ZdlPvm@PLT # Offset: 7675
.Ltmp4417:
    00001e00: 	movq	0x88(%rsp), %rdi
    00001e08: 	leaq	DATAat0x3d3a8(%rip), %rdx
    00001e0f: 	movq	%r15, %rsi
    00001e12: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7698
    00001e17: 	callq	clock@PLT # Offset: 7703
    00001e1c: 	movl	iterations(%rip), %edx
    00001e22: 	movq	%rax, start_time(%rip)
    00001e29: 	testl	%edx, %edx
    00001e2b: 	jle	.Ltmp4418 # Offset: 7723
    00001e31: 	movss	0x7c(%rsp), %xmm0
    00001e37: 	pxor	%xmm5, %xmm5
    00001e3b: 	movss	DATAat0x3d68c(%rip), %xmm3
    00001e43: 	movss	DATAat0x3d720(%rip), %xmm4
    00001e4b: 	movss	0x78(%rsp), %xmm7
    00001e51: 	movss	%xmm5, 0x74(%rsp)
    00001e57: 	xorl	%r13d, %r13d
    00001e5a: 	movq	DATAat0x3d710(%rip), %xmm5
    00001e62: 	mulss	0x80(%rsp), %xmm0
    00001e6b: 	movss	%xmm3, 0x70(%rsp)
    00001e71: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00001e79: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001e80: 	shufps	$0x0, %xmm7, %xmm7
    00001e84: 	movaps	%xmm7, (%rsp)
    00001e88: 	movsd	DATAat0x3d6d8(%rip), %xmm7
    00001e90: 	movaps	%xmm5, 0x20(%rsp)
    00001e95: 	movaps	%xmm4, 0x60(%rsp)
    00001e9a: 	movsd	%xmm7, 0x18(%rsp)
    00001ea0: 	movaps	%xmm0, %xmm6
    00001ea3: 	movsd	%xmm3, 0x10(%rsp)
    00001ea9: 	divss	0x84(%rsp), %xmm6
    00001eb2: 	movaps	%xmm6, %xmm5
    00001eb5: 	shufps	$0x0, %xmm5, %xmm5
    00001eb9: 	movss	%xmm6, 0x40(%rsp)
    00001ebf: 	movaps	%xmm5, 0x30(%rsp)
    00001ec4: 	nopl	(%rax) # Size: 4
.Ltmp4422:
    00001ec8: 	movq	%rbp, %rax
    00001ecb: 	pxor	%xmm1, %xmm1
    00001ecf: 	nop # Size: 1
.Ltmp4419:
    00001ed0: 	movaps	(%rsp), %xmm0
    00001ed4: 	addps	(%rax), %xmm0
    00001ed7: 	addq	$0x10, %rax
    00001edb: 	subps	0x30(%rsp), %xmm0
    00001ee0: 	addss	%xmm0, %xmm1
    00001ee4: 	movaps	%xmm0, %xmm2
    00001ee7: 	shufps	$0x55, %xmm0, %xmm2
    00001eeb: 	addss	%xmm1, %xmm2
    00001eef: 	movaps	%xmm0, %xmm1
    00001ef2: 	unpckhps	%xmm0, %xmm1
    00001ef5: 	shufps	$0xff, %xmm0, %xmm0
    00001ef9: 	addss	%xmm2, %xmm1
    00001efd: 	addss	%xmm0, %xmm1
    00001f01: 	cmpq	%rbx, %rax
    00001f04: 	jne	.Ltmp4419 # Offset: 7940
    00001f06: 	pxor	%xmm0, %xmm0
    00001f0a: 	movaps	0x60(%rsp), %xmm7
    00001f0f: 	movaps	%xmm1, %xmm2
    00001f12: 	cvtsd2ss	init_value(%rip), %xmm0
    00001f1a: 	addss	0x78(%rsp), %xmm0
    00001f20: 	subss	0x40(%rsp), %xmm0
    00001f26: 	mulss	0x70(%rsp), %xmm0
    00001f2c: 	andps	%xmm1, %xmm7
    00001f2f: 	subss	%xmm0, %xmm2
    00001f33: 	pxor	%xmm0, %xmm0
    00001f37: 	cvtss2sd	%xmm7, %xmm0
    00001f3b: 	comisd	0x18(%rsp), %xmm0
    00001f41: 	jbe	.Ltmp4420 # Offset: 8001
    00001f43: 	divss	%xmm1, %xmm2
.Ltmp4420:
    00001f47: 	movsd	0x10(%rsp), %xmm3
    00001f4d: 	cvtss2sd	%xmm2, %xmm2
    00001f51: 	andpd	0x20(%rsp), %xmm2
    00001f57: 	comisd	%xmm2, %xmm3
    00001f5b: 	jbe	.Ltmp4421 # Offset: 8027
.Ltmp4536:
    00001f61: 	addl	$0x1, %r13d
    00001f65: 	cmpl	%edx, %r13d
    00001f68: 	jl	.Ltmp4422 # Offset: 8040
.Ltmp4418:
    00001f6e: 	movq	0x88(%rsp), %rsi
    00001f76: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f7d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8061
    00001f82: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f89: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f90: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f97: 	je	.Ltmp4423 # Offset: 8087
.Ltmp4552:
    00001f9d: 	movq	-0x20(%rax), %r13
    00001fa1: 	callq	clock@PLT # Offset: 8097
    00001fa6: 	pxor	%xmm0, %xmm0
    00001faa: 	movq	%rax, end_time(%rip)
    00001fb1: 	movq	%r13, %rdi
    00001fb4: 	subq	start_time(%rip), %rax
    00001fbb: 	cvtsi2sd	%rax, %xmm0
    00001fc0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001fc8: 	callq	_Z13record_resultdPKc # Offset: 8136
    00001fcd: 	movq	0x170(%rsp), %rdi
    00001fd5: 	cmpq	%r12, %rdi
    00001fd8: 	je	.Ltmp4424 # Offset: 8152
    00001fda: 	movq	0x180(%rsp), %rax
    00001fe2: 	leaq	0x1(%rax), %rsi
    00001fe6: 	callq	_ZdlPvm@PLT # Offset: 8166
.Ltmp4424:
    00001feb: 	leaq	0x110(%rsp), %rdi
    00001ff3: 	leaq	DATAat0x3d3c2(%rip), %rdx
    00001ffa: 	movq	%r15, %rsi
    00001ffd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8189
    00002002: 	movl	iterations(%rip), %edx
    00002008: 	xorl	%r8d, %r8d
    0000200b: 	xorl	%ecx, %ecx
    0000200d: 	movl	$0x1f40, %esi
    00002012: 	movq	0x110(%rsp), %rdi
    0000201a: 	callq	_Z9summarizePKciiii # Offset: 8218
    0000201f: 	movsd	init_value(%rip), %xmm1
    00002027: 	pxor	%xmm0, %xmm0
    0000202b: 	movq	%rbp, %rax
    0000202e: 	cvtsd2ss	%xmm1, %xmm0
    00002032: 	movaps	%xmm0, %xmm2
    00002035: 	shufps	$0x0, %xmm0, %xmm0
    00002039: 	shufps	$0xe0, %xmm2, %xmm2
    0000203d: 	nopl	(%rax) # Size: 3
.Ltmp4425:
    00002040: 	movaps	%xmm0, (%rax)
    00002043: 	addq	$0x10, %rax
    00002047: 	cmpq	%rbx, %rax
    0000204a: 	jne	.Ltmp4425 # Offset: 8266
    0000204c: 	addsd	DATAat0x3d700(%rip), %xmm1
    00002054: 	leaq	0x150(%rsp), %r12
    0000205c: 	movq	%r15, %rsi
    0000205f: 	movlps	%xmm2, 0xb0(%rsp)
    00002067: 	movq	%r12, %rdi
    0000206a: 	movlps	%xmm2, 0xc8(%rsp)
    00002072: 	movlps	%xmm2, 0xdc(%rsp)
    0000207a: 	cvttsd2si	%xmm1, %edx
    0000207e: 	movslq	%edx, %rax
    00002081: 	movl	%edx, %ecx
    00002083: 	imulq	$0x51eb851f, %rax, %rax
    0000208a: 	sarl	$0x1f, %ecx
    0000208d: 	sarq	$0x24, %rax
    00002091: 	subl	%ecx, %eax
    00002093: 	imull	$0x32, %eax, %eax
    00002096: 	subl	%eax, %edx
    00002098: 	movl	%edx, 0x40(%rsp)
    0000209c: 	leaq	DATAat0x3d3d2(%rip), %rdx
    000020a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8355
    000020a8: 	callq	clock@PLT # Offset: 8360
    000020ad: 	movl	iterations(%rip), %edx
    000020b3: 	movq	%rax, start_time(%rip)
    000020ba: 	testl	%edx, %edx
    000020bc: 	jle	.Ltmp4426 # Offset: 8380
    000020c2: 	pxor	%xmm6, %xmm6
    000020c6: 	movslq	0x40(%rsp), %rax
    000020cb: 	movq	0x88(%rsp), %rcx
    000020d3: 	movss	DATAat0x3d720(%rip), %xmm4
    000020db: 	movsd	DATAat0x3d6d8(%rip), %xmm7
    000020e3: 	movss	%xmm6, 0x74(%rsp)
    000020e9: 	movss	DATAat0x3d68c(%rip), %xmm6
    000020f1: 	xorl	%r13d, %r13d
    000020f4: 	movq	DATAat0x3d710(%rip), %xmm5
    000020fc: 	leaq	(%rcx,%rax,4), %r14
    00002100: 	movaps	%xmm4, 0x60(%rsp)
    00002105: 	movss	%xmm6, 0x70(%rsp)
    0000210b: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    00002113: 	movsd	%xmm7, 0x18(%rsp)
    00002119: 	movaps	%xmm5, 0x20(%rsp)
    0000211e: 	movsd	%xmm6, 0x10(%rsp)
    00002124: 	nopl	(%rax) # Size: 4
.Ltmp4430:
    00002128: 	pxor	%xmm3, %xmm3
    0000212c: 	movq	%rbp, %rax
    0000212f: 	pxor	%xmm0, %xmm0
    00002133: 	cvtsd2ss	init_value(%rip), %xmm3
    0000213b: 	mulss	0x70(%rsp), %xmm3
    00002141: 	nopl	(%rax) # Size: 7
.Ltmp4427:
    00002148: 	movaps	(%rax), %xmm2
    0000214b: 	addq	$0x10, %rax
    0000214f: 	addss	%xmm2, %xmm0
    00002153: 	movaps	%xmm2, %xmm1
    00002156: 	shufps	$0x55, %xmm2, %xmm1
    0000215a: 	addss	%xmm0, %xmm1
    0000215e: 	movaps	%xmm2, %xmm0
    00002161: 	unpckhps	%xmm2, %xmm0
    00002164: 	shufps	$0xff, %xmm2, %xmm2
    00002168: 	addss	%xmm1, %xmm0
    0000216c: 	addss	%xmm2, %xmm0
    00002170: 	cmpq	%rax, %rbx
    00002173: 	jne	.Ltmp4427 # Offset: 8563
    00002175: 	movaps	%xmm0, %xmm1
    00002178: 	pxor	%xmm2, %xmm2
    0000217c: 	movss	%xmm0, (%r14)
    00002181: 	subss	%xmm3, %xmm1
    00002185: 	movaps	0x60(%rsp), %xmm3
    0000218a: 	andps	%xmm0, %xmm3
    0000218d: 	cvtss2sd	%xmm3, %xmm2
    00002191: 	comisd	0x18(%rsp), %xmm2
    00002197: 	jbe	.Ltmp4428 # Offset: 8599
    00002199: 	divss	%xmm0, %xmm1
.Ltmp4428:
    0000219d: 	movsd	0x10(%rsp), %xmm7
    000021a3: 	cvtss2sd	%xmm1, %xmm1
    000021a7: 	andpd	0x20(%rsp), %xmm1
    000021ad: 	comisd	%xmm1, %xmm7
    000021b1: 	jbe	.Ltmp4429 # Offset: 8625
.Ltmp4535:
    000021b7: 	addl	$0x1, %r13d
    000021bb: 	cmpl	%edx, %r13d
    000021be: 	jl	.Ltmp4430 # Offset: 8638
.Ltmp4426:
    000021c4: 	movq	%r12, %rsi
    000021c7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021ce: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8654
    000021d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021da: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021e8: 	je	.Ltmp4431 # Offset: 8680
.Ltmp4551:
    000021ee: 	movq	-0x20(%rax), %r13
    000021f2: 	callq	clock@PLT # Offset: 8690
    000021f7: 	pxor	%xmm0, %xmm0
    000021fb: 	movq	%rax, end_time(%rip)
    00002202: 	movq	%r13, %rdi
    00002205: 	subq	start_time(%rip), %rax
    0000220c: 	cvtsi2sd	%rax, %xmm0
    00002211: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002219: 	callq	_Z13record_resultdPKc # Offset: 8729
    0000221e: 	movq	0x150(%rsp), %rdi
    00002226: 	leaq	0x160(%rsp), %rax
    0000222e: 	movq	%rax, 0x30(%rsp)
    00002233: 	cmpq	%rax, %rdi
    00002236: 	je	.Ltmp4432 # Offset: 8758
    00002238: 	movq	0x160(%rsp), %rax
    00002240: 	leaq	0x1(%rax), %rsi
    00002244: 	callq	_ZdlPvm@PLT # Offset: 8772
.Ltmp4432:
    00002249: 	leaq	DATAat0x3d3eb(%rip), %rdx
    00002250: 	movq	%r15, %rsi
    00002253: 	movq	%r12, %rdi
    00002256: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8790
    0000225b: 	callq	clock@PLT # Offset: 8795
    00002260: 	movl	iterations(%rip), %edx
    00002266: 	movq	%rax, start_time(%rip)
    0000226d: 	testl	%edx, %edx
    0000226f: 	jle	.Ltmp4433 # Offset: 8815
    00002275: 	pxor	%xmm3, %xmm3
    00002279: 	movslq	0x40(%rsp), %rax
    0000227e: 	movq	0x88(%rsp), %rcx
    00002286: 	movss	DATAat0x3d720(%rip), %xmm7
    0000228e: 	movss	DATAat0x3d68c(%rip), %xmm4
    00002296: 	movss	%xmm3, 0x74(%rsp)
    0000229c: 	xorl	%r13d, %r13d
    0000229f: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    000022a7: 	movq	DATAat0x3d710(%rip), %xmm6
    000022af: 	leaq	(%rcx,%rax,4), %r14
    000022b3: 	movaps	%xmm7, 0x60(%rsp)
    000022b8: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    000022c0: 	movss	%xmm4, 0x70(%rsp)
    000022c6: 	movsd	%xmm5, 0x18(%rsp)
    000022cc: 	movaps	%xmm6, 0x20(%rsp)
    000022d1: 	movsd	%xmm3, 0x10(%rsp)
    000022d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4437:
    000022e0: 	pxor	%xmm3, %xmm3
    000022e4: 	movq	%rbp, %rax
    000022e7: 	pxor	%xmm0, %xmm0
    000022eb: 	cvtsd2ss	init_value(%rip), %xmm3
    000022f3: 	mulss	0x70(%rsp), %xmm3
    000022f9: 	nopl	(%rax) # Size: 7
.Ltmp4434:
    00002300: 	movaps	(%rax), %xmm2
    00002303: 	addq	$0x10, %rax
    00002307: 	addss	%xmm2, %xmm0
    0000230b: 	movaps	%xmm2, %xmm1
    0000230e: 	shufps	$0x55, %xmm2, %xmm1
    00002312: 	addss	%xmm0, %xmm1
    00002316: 	movaps	%xmm2, %xmm0
    00002319: 	unpckhps	%xmm2, %xmm0
    0000231c: 	shufps	$0xff, %xmm2, %xmm2
    00002320: 	addss	%xmm1, %xmm0
    00002324: 	addss	%xmm2, %xmm0
    00002328: 	cmpq	%rbx, %rax
    0000232b: 	jne	.Ltmp4434 # Offset: 9003
    0000232d: 	movaps	0x60(%rsp), %xmm6
    00002332: 	pxor	%xmm2, %xmm2
    00002336: 	movaps	%xmm0, %xmm1
    00002339: 	movss	%xmm0, (%r14)
    0000233e: 	subss	%xmm3, %xmm1
    00002342: 	andps	%xmm0, %xmm6
    00002345: 	cvtss2sd	%xmm6, %xmm2
    00002349: 	comisd	0x18(%rsp), %xmm2
    0000234f: 	jbe	.Ltmp4435 # Offset: 9039
    00002351: 	divss	%xmm0, %xmm1
.Ltmp4435:
    00002355: 	movsd	0x10(%rsp), %xmm4
    0000235b: 	cvtss2sd	%xmm1, %xmm1
    0000235f: 	andpd	0x20(%rsp), %xmm1
    00002365: 	comisd	%xmm1, %xmm4
    00002369: 	jbe	.Ltmp4436 # Offset: 9065
.Ltmp4534:
    0000236f: 	addl	$0x1, %r13d
    00002373: 	cmpl	%edx, %r13d
    00002376: 	jl	.Ltmp4437 # Offset: 9078
.Ltmp4433:
    0000237c: 	movq	%r12, %rsi
    0000237f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002386: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9094
    0000238b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002392: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002399: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023a0: 	je	.Ltmp4438 # Offset: 9120
.Ltmp4556:
    000023a6: 	movq	-0x20(%rax), %r13
    000023aa: 	callq	clock@PLT # Offset: 9130
    000023af: 	pxor	%xmm0, %xmm0
    000023b3: 	movq	%rax, end_time(%rip)
    000023ba: 	movq	%r13, %rdi
    000023bd: 	subq	start_time(%rip), %rax
    000023c4: 	cvtsi2sd	%rax, %xmm0
    000023c9: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000023d1: 	callq	_Z13record_resultdPKc # Offset: 9169
    000023d6: 	movq	0x150(%rsp), %rdi
    000023de: 	cmpq	0x30(%rsp), %rdi
    000023e3: 	je	.Ltmp4439 # Offset: 9187
    000023e5: 	movq	0x160(%rsp), %rax
    000023ed: 	leaq	0x1(%rax), %rsi
    000023f1: 	callq	_ZdlPvm@PLT # Offset: 9201
.Ltmp4439:
    000023f6: 	leaq	DATAat0x3d400(%rip), %rdx
    000023fd: 	movq	%r15, %rsi
    00002400: 	movq	%r12, %rdi
    00002403: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9219
    00002408: 	callq	clock@PLT # Offset: 9224
    0000240d: 	movl	iterations(%rip), %edx
    00002413: 	movq	%rax, start_time(%rip)
    0000241a: 	testl	%edx, %edx
    0000241c: 	jle	.Ltmp4440 # Offset: 9244
    00002422: 	pxor	%xmm4, %xmm4
    00002426: 	movss	DATAat0x3d68c(%rip), %xmm7
    0000242e: 	movsd	DATAat0x3d6d8(%rip), %xmm6
    00002436: 	movss	DATAat0x3d720(%rip), %xmm5
    0000243e: 	movq	DATAat0x3d710(%rip), %xmm3
    00002446: 	movss	%xmm4, 0x74(%rsp)
    0000244c: 	xorl	%r13d, %r13d
    0000244f: 	movsd	DATAat0x3d6f0(%rip), %xmm4
    00002457: 	movss	%xmm7, 0x70(%rsp)
    0000245d: 	leaq	DATAat0x3d1c8(%rip), %r14
    00002464: 	movaps	%xmm5, 0x60(%rsp)
    00002469: 	movsd	%xmm6, 0x18(%rsp)
    0000246f: 	movaps	%xmm3, 0x20(%rsp)
    00002474: 	movsd	%xmm4, 0x10(%rsp)
    0000247a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4444:
    00002480: 	pxor	%xmm3, %xmm3
    00002484: 	movq	%rbp, %rax
    00002487: 	pxor	%xmm0, %xmm0
    0000248b: 	cvtsd2ss	init_value(%rip), %xmm3
    00002493: 	mulss	0x70(%rsp), %xmm3
    00002499: 	nopl	(%rax) # Size: 7
.Ltmp4441:
    000024a0: 	movaps	(%rax), %xmm2
    000024a3: 	addq	$0x10, %rax
    000024a7: 	addss	%xmm2, %xmm0
    000024ab: 	movaps	%xmm2, %xmm1
    000024ae: 	shufps	$0x55, %xmm2, %xmm1
    000024b2: 	addss	%xmm0, %xmm1
    000024b6: 	movaps	%xmm2, %xmm0
    000024b9: 	unpckhps	%xmm2, %xmm0
    000024bc: 	shufps	$0xff, %xmm2, %xmm2
    000024c0: 	addss	%xmm1, %xmm0
    000024c4: 	addss	%xmm2, %xmm0
    000024c8: 	cmpq	%rbx, %rax
    000024cb: 	jne	.Ltmp4441 # Offset: 9419
    000024cd: 	movaps	0x60(%rsp), %xmm4
    000024d2: 	pxor	%xmm2, %xmm2
    000024d6: 	movaps	%xmm0, %xmm1
    000024d9: 	movss	%xmm0, 0xc8(%rsp)
    000024e2: 	subss	%xmm3, %xmm1
    000024e6: 	andps	%xmm0, %xmm4
    000024e9: 	cvtss2sd	%xmm4, %xmm2
    000024ed: 	comisd	0x18(%rsp), %xmm2
    000024f3: 	jbe	.Ltmp4442 # Offset: 9459
    000024f5: 	divss	%xmm0, %xmm1
.Ltmp4442:
    000024f9: 	movsd	0x10(%rsp), %xmm6
    000024ff: 	cvtss2sd	%xmm1, %xmm1
    00002503: 	andpd	0x20(%rsp), %xmm1
    00002509: 	comisd	%xmm1, %xmm6
    0000250d: 	jbe	.Ltmp4443 # Offset: 9485
.Ltmp4533:
    00002513: 	addl	$0x1, %r13d
    00002517: 	cmpl	%edx, %r13d
    0000251a: 	jl	.Ltmp4444 # Offset: 9498
.Ltmp4440:
    00002520: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002527: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000252e: 	subq	$0x20, %rax
    00002532: 	cmpq	%rax, %r14
    00002535: 	je	.Ltmp4445 # Offset: 9525
    0000253b: 	leaq	0x10(%r14), %rdi
    0000253f: 	movq	0x158(%rsp), %r13
    00002547: 	movq	%rdi, (%r14)
    0000254a: 	movq	0x150(%rsp), %rax
    00002552: 	movq	%rax, %rcx
    00002555: 	movq	%rax, (%rsp)
    00002559: 	addq	%r13, %rcx
    0000255c: 	je	.Ltmp4446 # Offset: 9564
    0000255e: 	testq	%rax, %rax
    00002561: 	je	.Ltmp4447 # Offset: 9569
.Ltmp4446:
    00002567: 	movq	%r13, 0xa8(%rsp)
    0000256f: 	cmpq	$0xf, %r13
    00002573: 	ja	.Ltmp4448 # Offset: 9587
    00002579: 	cmpq	$0x1, %r13
    0000257d: 	jne	.Ltmp4449 # Offset: 9597
    00002583: 	movq	(%rsp), %rax
    00002587: 	movzbl	(%rax), %eax
    0000258a: 	movb	%al, 0x10(%r14)
.Ltmp4570:
    0000258e: 	movq	%r13, 0x8(%r14)
    00002592: 	movb	$0x0, (%rdi,%r13)
    00002597: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000259e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025a5: 	addq	$0x20, %rax
    000025a9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000025b0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000025b7: 	je	.Ltmp4450 # Offset: 9655
.Ltmp4557:
    000025bd: 	movq	-0x20(%rax), %r13
    000025c1: 	callq	clock@PLT # Offset: 9665
    000025c6: 	pxor	%xmm0, %xmm0
    000025ca: 	movq	%rax, end_time(%rip)
    000025d1: 	movq	%r13, %rdi
    000025d4: 	subq	start_time(%rip), %rax
    000025db: 	cvtsi2sd	%rax, %xmm0
    000025e0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000025e8: 	callq	_Z13record_resultdPKc # Offset: 9704
    000025ed: 	movq	0x150(%rsp), %rdi
    000025f5: 	cmpq	0x30(%rsp), %rdi
    000025fa: 	je	.Ltmp4451 # Offset: 9722
    000025fc: 	movq	0x160(%rsp), %rax
    00002604: 	leaq	0x1(%rax), %rsi
    00002608: 	callq	_ZdlPvm@PLT # Offset: 9736
.Ltmp4451:
    0000260d: 	leaq	DATAat0x3d41a(%rip), %rdx
    00002614: 	movq	%r15, %rsi
    00002617: 	movq	%r12, %rdi
    0000261a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9754
    0000261f: 	callq	clock@PLT # Offset: 9759
    00002624: 	movl	iterations(%rip), %edx
    0000262a: 	movq	%rax, start_time(%rip)
    00002631: 	testl	%edx, %edx
    00002633: 	jle	.Ltmp4452 # Offset: 9779
    00002639: 	pxor	%xmm7, %xmm7
    0000263d: 	movss	DATAat0x3d68c(%rip), %xmm5
    00002645: 	movsd	DATAat0x3d6d8(%rip), %xmm3
    0000264d: 	movss	DATAat0x3d720(%rip), %xmm6
    00002655: 	movq	DATAat0x3d710(%rip), %xmm4
    0000265d: 	movss	%xmm7, 0x74(%rsp)
    00002663: 	xorl	%r13d, %r13d
    00002666: 	movsd	DATAat0x3d6f0(%rip), %xmm7
    0000266e: 	movss	%xmm5, 0x70(%rsp)
    00002674: 	leaq	DATAat0x3d1c8(%rip), %r14
    0000267b: 	movaps	%xmm6, 0x60(%rsp)
    00002680: 	movsd	%xmm3, 0x18(%rsp)
    00002686: 	movaps	%xmm4, 0x20(%rsp)
    0000268b: 	movsd	%xmm7, 0x10(%rsp)
    00002691: 	nopl	(%rax) # Size: 7
.Ltmp4456:
    00002698: 	pxor	%xmm3, %xmm3
    0000269c: 	movq	%rbp, %rax
    0000269f: 	pxor	%xmm0, %xmm0
    000026a3: 	cvtsd2ss	init_value(%rip), %xmm3
    000026ab: 	mulss	0x70(%rsp), %xmm3
    000026b1: 	nopl	(%rax) # Size: 7
.Ltmp4453:
    000026b8: 	movaps	(%rax), %xmm2
    000026bb: 	addq	$0x10, %rax
    000026bf: 	addss	%xmm2, %xmm0
    000026c3: 	movaps	%xmm2, %xmm1
    000026c6: 	shufps	$0x55, %xmm2, %xmm1
    000026ca: 	addss	%xmm0, %xmm1
    000026ce: 	movaps	%xmm2, %xmm0
    000026d1: 	unpckhps	%xmm2, %xmm0
    000026d4: 	shufps	$0xff, %xmm2, %xmm2
    000026d8: 	addss	%xmm1, %xmm0
    000026dc: 	addss	%xmm2, %xmm0
    000026e0: 	cmpq	%rbx, %rax
    000026e3: 	jne	.Ltmp4453 # Offset: 9955
    000026e5: 	movaps	0x60(%rsp), %xmm5
    000026ea: 	pxor	%xmm2, %xmm2
    000026ee: 	movaps	%xmm0, %xmm1
    000026f1: 	movss	%xmm0, 0xc8(%rsp)
    000026fa: 	subss	%xmm3, %xmm1
    000026fe: 	andps	%xmm0, %xmm5
    00002701: 	cvtss2sd	%xmm5, %xmm2
    00002705: 	comisd	0x18(%rsp), %xmm2
    0000270b: 	jbe	.Ltmp4454 # Offset: 9995
    0000270d: 	divss	%xmm0, %xmm1
.Ltmp4454:
    00002711: 	movsd	0x10(%rsp), %xmm5
    00002717: 	cvtss2sd	%xmm1, %xmm1
    0000271b: 	andpd	0x20(%rsp), %xmm1
    00002721: 	comisd	%xmm1, %xmm5
    00002725: 	jbe	.Ltmp4455 # Offset: 10021
.Ltmp4532:
    0000272b: 	addl	$0x1, %r13d
    0000272f: 	cmpl	%edx, %r13d
    00002732: 	jl	.Ltmp4456 # Offset: 10034
.Ltmp4452:
    00002738: 	movq	%r12, %rsi
    0000273b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002742: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10050
    00002747: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000274e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002755: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000275c: 	je	.Ltmp4457 # Offset: 10076
.Ltmp4555:
    00002762: 	movq	-0x20(%rax), %r13
    00002766: 	callq	clock@PLT # Offset: 10086
    0000276b: 	pxor	%xmm0, %xmm0
    0000276f: 	movq	%rax, end_time(%rip)
    00002776: 	movq	%r13, %rdi
    00002779: 	subq	start_time(%rip), %rax
    00002780: 	cvtsi2sd	%rax, %xmm0
    00002785: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000278d: 	callq	_Z13record_resultdPKc # Offset: 10125
    00002792: 	movq	0x150(%rsp), %rdi
    0000279a: 	cmpq	0x30(%rsp), %rdi
    0000279f: 	je	.Ltmp4458 # Offset: 10143
    000027a1: 	movq	0x160(%rsp), %rax
    000027a9: 	leaq	0x1(%rax), %rsi
    000027ad: 	callq	_ZdlPvm@PLT # Offset: 10157
.Ltmp4458:
    000027b2: 	leaq	DATAat0x3d430(%rip), %rdx
    000027b9: 	movq	%r15, %rsi
    000027bc: 	movq	%r12, %rdi
    000027bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10175
    000027c4: 	movl	0x40(%rsp), %edx
    000027c8: 	movq	%r12, %rcx
    000027cb: 	movl	$0x1f40, %esi
    000027d0: 	movq	%rbp, %rdi
    000027d3: 	callq	_Z23test_array_const_in_optIfEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10195
    000027d8: 	movq	0x150(%rsp), %rdi
    000027e0: 	cmpq	0x30(%rsp), %rdi
    000027e5: 	je	.Ltmp4459 # Offset: 10213
    000027e7: 	movq	0x160(%rsp), %rax
    000027ef: 	leaq	0x1(%rax), %rsi
    000027f3: 	callq	_ZdlPvm@PLT # Offset: 10227
.Ltmp4459:
    000027f8: 	leaq	DATAat0x3d448(%rip), %rdx
    000027ff: 	movq	%r15, %rsi
    00002802: 	movq	%r12, %rdi
    00002805: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10245
    0000280a: 	callq	clock@PLT # Offset: 10250
    0000280f: 	movl	iterations(%rip), %edx
    00002815: 	movq	%rax, start_time(%rip)
    0000281c: 	testl	%edx, %edx
    0000281e: 	jle	.Ltmp4460 # Offset: 10270
    00002824: 	movslq	0x40(%rsp), %rax
    00002829: 	pxor	%xmm6, %xmm6
    0000282d: 	movss	DATAat0x3d68c(%rip), %xmm3
    00002835: 	movss	DATAat0x3d720(%rip), %xmm4
    0000283d: 	movsd	DATAat0x3d6d8(%rip), %xmm7
    00002845: 	movss	%xmm6, 0x74(%rsp)
    0000284b: 	xorl	%ebx, %ebx
    0000284d: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    00002855: 	movss	0x240(%rsp,%rax,4), %xmm5
    0000285e: 	movss	%xmm3, 0x70(%rsp)
    00002864: 	leaq	DATAat0x3d1c8(%rip), %rbp
    0000286b: 	movaps	%xmm4, 0x60(%rsp)
    00002870: 	movss	%xmm5, (%rsp)
    00002875: 	movq	DATAat0x3d710(%rip), %xmm5
    0000287d: 	movsd	%xmm7, 0x18(%rsp)
    00002883: 	movaps	%xmm5, 0x20(%rsp)
    00002888: 	movsd	%xmm6, 0x10(%rsp)
    0000288e: 	nop # Size: 2
.Ltmp4464:
    00002890: 	pxor	%xmm2, %xmm2
    00002894: 	movl	$0x1f40, %eax
    00002899: 	pxor	%xmm0, %xmm0
    0000289d: 	cvtsd2ss	init_value(%rip), %xmm2
    000028a5: 	mulss	0x70(%rsp), %xmm2
    000028ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4461:
    000028b0: 	addss	(%rsp), %xmm0
    000028b5: 	subl	$0x1, %eax
    000028b8: 	jne	.Ltmp4461 # Offset: 10424
    000028ba: 	movaps	0x60(%rsp), %xmm7
    000028bf: 	movaps	%xmm0, %xmm1
    000028c2: 	subss	%xmm2, %xmm1
    000028c6: 	pxor	%xmm2, %xmm2
    000028ca: 	andps	%xmm0, %xmm7
    000028cd: 	cvtss2sd	%xmm7, %xmm2
    000028d1: 	comisd	0x18(%rsp), %xmm2
    000028d7: 	jbe	.Ltmp4462 # Offset: 10455
    000028d9: 	divss	%xmm0, %xmm1
.Ltmp4462:
    000028dd: 	movsd	0x10(%rsp), %xmm3
    000028e3: 	cvtss2sd	%xmm1, %xmm1
    000028e7: 	andpd	0x20(%rsp), %xmm1
    000028ed: 	comisd	%xmm1, %xmm3
    000028f1: 	jbe	.Ltmp4463 # Offset: 10481
.Ltmp4531:
    000028f7: 	addl	$0x1, %ebx
    000028fa: 	cmpl	%edx, %ebx
    000028fc: 	jl	.Ltmp4464 # Offset: 10492
.Ltmp4460:
    000028fe: 	movq	%r12, %rsi
    00002901: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002908: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10504
    0000290d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002914: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000291b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002922: 	je	.Ltmp4465 # Offset: 10530
.Ltmp4559:
    00002928: 	movq	-0x20(%rax), %rbp
    0000292c: 	callq	clock@PLT # Offset: 10540
    00002931: 	pxor	%xmm0, %xmm0
    00002935: 	movq	%rax, end_time(%rip)
    0000293c: 	movq	%rbp, %rdi
    0000293f: 	subq	start_time(%rip), %rax
    00002946: 	cvtsi2sd	%rax, %xmm0
    0000294b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002953: 	callq	_Z13record_resultdPKc # Offset: 10579
    00002958: 	movq	0x150(%rsp), %rdi
    00002960: 	cmpq	0x30(%rsp), %rdi
    00002965: 	je	.Ltmp4466 # Offset: 10597
    00002967: 	movq	0x160(%rsp), %rax
    0000296f: 	leaq	0x1(%rax), %rsi
    00002973: 	callq	_ZdlPvm@PLT # Offset: 10611
.Ltmp4466:
    00002978: 	pxor	%xmm3, %xmm3
    0000297c: 	leaq	DATAat0x3d45c(%rip), %rdx
    00002983: 	movq	%r15, %rsi
    00002986: 	movq	%r12, %rdi
    00002989: 	cvtsd2ss	init_value(%rip), %xmm3
    00002991: 	movss	%xmm3, (%rsp)
    00002996: 	movss	%xmm3, 0xc8(%rsp)
    0000299f: 	movss	%xmm3, 0xb0(%rsp)
    000029a8: 	movss	%xmm3, 0xe0(%rsp)
    000029b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10673
    000029b6: 	movq	0x90(%rsp), %rdi
    000029be: 	movq	%r12, %rdx
    000029c1: 	movl	$0x1f40, %esi
    000029c6: 	callq	_Z24test_struct_const_in_optIf13simple_structIfEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 10694
    000029cb: 	movq	0x150(%rsp), %rdi
    000029d3: 	cmpq	0x30(%rsp), %rdi
    000029d8: 	je	.Ltmp4467 # Offset: 10712
    000029da: 	movq	0x160(%rsp), %rax
    000029e2: 	leaq	0x1(%rax), %rsi
    000029e6: 	callq	_ZdlPvm@PLT # Offset: 10726
.Ltmp4467:
    000029eb: 	leaq	DATAat0x3d475(%rip), %rdx
    000029f2: 	movq	%r15, %rsi
    000029f5: 	movq	%r12, %rdi
    000029f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10744
    000029fd: 	callq	clock@PLT # Offset: 10749
    00002a02: 	movl	iterations(%rip), %edx
    00002a08: 	movq	%rax, start_time(%rip)
    00002a0f: 	testl	%edx, %edx
    00002a11: 	jle	.Ltmp4468 # Offset: 10769
    00002a17: 	pxor	%xmm3, %xmm3
    00002a1b: 	movss	DATAat0x3d68c(%rip), %xmm4
    00002a23: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    00002a2b: 	movss	DATAat0x3d720(%rip), %xmm7
    00002a33: 	movq	DATAat0x3d710(%rip), %xmm6
    00002a3b: 	movss	%xmm3, 0x74(%rsp)
    00002a41: 	xorl	%ebx, %ebx
    00002a43: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00002a4b: 	movss	%xmm4, 0x70(%rsp)
    00002a51: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002a58: 	movaps	%xmm7, 0x60(%rsp)
    00002a5d: 	movsd	%xmm5, 0x18(%rsp)
    00002a63: 	movaps	%xmm6, 0x20(%rsp)
    00002a68: 	movsd	%xmm3, 0x10(%rsp)
    00002a6e: 	nop # Size: 2
.Ltmp4472:
    00002a70: 	pxor	%xmm2, %xmm2
    00002a74: 	movl	$0x1f40, %eax
    00002a79: 	pxor	%xmm0, %xmm0
    00002a7d: 	cvtsd2ss	init_value(%rip), %xmm2
    00002a85: 	mulss	0x70(%rsp), %xmm2
    00002a8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4469:
    00002a90: 	addss	(%rsp), %xmm0
    00002a95: 	subl	$0x1, %eax
    00002a98: 	jne	.Ltmp4469 # Offset: 10904
    00002a9a: 	movaps	0x60(%rsp), %xmm3
    00002a9f: 	movaps	%xmm0, %xmm1
    00002aa2: 	subss	%xmm2, %xmm1
    00002aa6: 	pxor	%xmm2, %xmm2
    00002aaa: 	andps	%xmm0, %xmm3
    00002aad: 	cvtss2sd	%xmm3, %xmm2
    00002ab1: 	comisd	0x18(%rsp), %xmm2
    00002ab7: 	jbe	.Ltmp4470 # Offset: 10935
    00002ab9: 	divss	%xmm0, %xmm1
.Ltmp4470:
    00002abd: 	movsd	0x10(%rsp), %xmm7
    00002ac3: 	cvtss2sd	%xmm1, %xmm1
    00002ac7: 	andpd	0x20(%rsp), %xmm1
    00002acd: 	comisd	%xmm1, %xmm7
    00002ad1: 	jbe	.Ltmp4471 # Offset: 10961
.Ltmp4530:
    00002ad7: 	addl	$0x1, %ebx
    00002ada: 	cmpl	%edx, %ebx
    00002adc: 	jl	.Ltmp4472 # Offset: 10972
.Ltmp4468:
    00002ade: 	movq	%r12, %rsi
    00002ae1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ae8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10984
    00002aed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002af4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002afb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002b02: 	je	.Ltmp4473 # Offset: 11010
.Ltmp4558:
    00002b08: 	movq	-0x20(%rax), %rbp
    00002b0c: 	callq	clock@PLT # Offset: 11020
    00002b11: 	pxor	%xmm0, %xmm0
    00002b15: 	movq	%rax, end_time(%rip)
    00002b1c: 	movq	%rbp, %rdi
    00002b1f: 	subq	start_time(%rip), %rax
    00002b26: 	cvtsi2sd	%rax, %xmm0
    00002b2b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002b33: 	callq	_Z13record_resultdPKc # Offset: 11059
    00002b38: 	movq	0x150(%rsp), %rdi
    00002b40: 	cmpq	0x30(%rsp), %rdi
    00002b45: 	je	.Ltmp4474 # Offset: 11077
    00002b47: 	movq	0x160(%rsp), %rax
    00002b4f: 	leaq	0x1(%rax), %rsi
    00002b53: 	callq	_ZdlPvm@PLT # Offset: 11091
.Ltmp4474:
    00002b58: 	leaq	DATAat0x3d48a(%rip), %rdx
    00002b5f: 	movq	%r15, %rsi
    00002b62: 	movq	%r12, %rdi
    00002b65: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11109
    00002b6a: 	callq	clock@PLT # Offset: 11114
    00002b6f: 	movq	%rax, start_time(%rip)
    00002b76: 	movl	iterations(%rip), %eax
    00002b7c: 	testl	%eax, %eax
    00002b7e: 	jle	.Ltmp4475 # Offset: 11134
    00002b84: 	movss	0x7f3c(%rsp), %xmm7
    00002b8d: 	pxor	%xmm1, %xmm1
    00002b91: 	movsd	DATAat0x3d6d8(%rip), %xmm4
    00002b99: 	movslq	0x40(%rsp), %rdx
    00002b9e: 	movq	0x88(%rsp), %rcx
    00002ba6: 	movaps	%xmm7, %xmm0
    00002ba9: 	movss	%xmm7, (%rsp)
    00002bae: 	subss	%xmm7, %xmm0
    00002bb2: 	andps	DATAat0x3d720(%rip), %xmm7
    00002bb9: 	leaq	(%rcx,%rdx,4), %rbp
    00002bbd: 	cvtss2sd	%xmm7, %xmm1
    00002bc1: 	comisd	%xmm4, %xmm1
    00002bc5: 	ja	.Ltmp4476 # Offset: 11205
    00002bcb: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    00002bd3: 	cvtss2sd	%xmm0, %xmm0
    00002bd7: 	xorl	%ebx, %ebx
    00002bd9: 	andpd	DATAat0x3d710(%rip), %xmm0
    00002be1: 	leaq	DATAat0x3d1c8(%rip), %r13
    00002be8: 	movsd	%xmm0, 0x18(%rsp)
    00002bee: 	movsd	%xmm6, 0x10(%rsp)
    00002bf4: 	jmp	.Ltmp4477 # Offset: 11252
    00002bf6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4478:
    00002c00: 	addl	$0x1, %ebx
    00002c03: 	cmpl	%eax, %ebx
    00002c05: 	jge	.Ltmp4475 # Offset: 11269
.Ltmp4477:
    00002c07: 	movsd	0x10(%rsp), %xmm3
    00002c0d: 	comisd	0x18(%rsp), %xmm3
    00002c13: 	movss	(%rsp), %xmm5
    00002c18: 	movss	%xmm5, (%rbp)
    00002c1d: 	ja	.Ltmp4478 # Offset: 11293
    00002c1f: 	movq	0x150(%rsp), %rdx
    00002c27: 	movq	%r13, %rsi
    00002c2a: 	movl	$0x1, %edi
    00002c2f: 	xorl	%eax, %eax
    00002c31: 	callq	__printf_chk@PLT # Offset: 11313
    00002c36: 	movl	iterations(%rip), %eax
    00002c3c: 	addl	$0x1, %ebx
    00002c3f: 	cmpl	%eax, %ebx
    00002c41: 	jl	.Ltmp4477 # Offset: 11329
    00002c43: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4475:
    00002c48: 	movq	%r12, %rsi
    00002c4b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002c52: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11346
    00002c57: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002c5e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002c65: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002c6c: 	je	.Ltmp4479 # Offset: 11372
.Ltmp4548:
    00002c72: 	movq	-0x20(%rax), %rbp
    00002c76: 	callq	clock@PLT # Offset: 11382
    00002c7b: 	pxor	%xmm0, %xmm0
    00002c7f: 	movq	%rax, end_time(%rip)
    00002c86: 	movq	%rbp, %rdi
    00002c89: 	subq	start_time(%rip), %rax
    00002c90: 	cvtsi2sd	%rax, %xmm0
    00002c95: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002c9d: 	callq	_Z13record_resultdPKc # Offset: 11421
    00002ca2: 	movq	0x150(%rsp), %rdi
    00002caa: 	cmpq	0x30(%rsp), %rdi
    00002caf: 	je	.Ltmp4480 # Offset: 11439
    00002cb1: 	movq	0x160(%rsp), %rax
    00002cb9: 	leaq	0x1(%rax), %rsi
    00002cbd: 	callq	_ZdlPvm@PLT # Offset: 11453
.Ltmp4480:
    00002cc2: 	leaq	DATAat0x3d49d(%rip), %rdx
    00002cc9: 	movq	%r15, %rsi
    00002ccc: 	movq	%r12, %rdi
    00002ccf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11471
    00002cd4: 	callq	clock@PLT # Offset: 11476
    00002cd9: 	movq	%rax, start_time(%rip)
    00002ce0: 	movl	iterations(%rip), %eax
    00002ce6: 	testl	%eax, %eax
    00002ce8: 	jle	.Ltmp4481 # Offset: 11496
    00002cee: 	movss	0x7f3c(%rsp), %xmm5
    00002cf7: 	movslq	0x40(%rsp), %rdx
    00002cfc: 	xorl	%ebx, %ebx
    00002cfe: 	leaq	DATAat0x3d1c8(%rip), %r13
    00002d05: 	movq	DATAat0x3d710(%rip), %xmm6
    00002d0d: 	movq	0x88(%rsp), %rcx
    00002d15: 	movsd	DATAat0x3d6d8(%rip), %xmm7
    00002d1d: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00002d25: 	movss	%xmm5, (%rsp)
    00002d2a: 	movaps	%xmm6, 0x20(%rsp)
    00002d2f: 	movaps	%xmm5, %xmm6
    00002d32: 	leaq	(%rcx,%rdx,4), %rbp
    00002d36: 	subss	%xmm5, %xmm6
    00002d3a: 	andps	DATAat0x3d720(%rip), %xmm5
    00002d41: 	movsd	%xmm7, 0x18(%rsp)
    00002d47: 	movsd	%xmm3, 0x10(%rsp)
    00002d4d: 	cvtss2sd	%xmm5, %xmm5
    00002d51: 	movsd	%xmm5, 0x40(%rsp)
    00002d57: 	movd	%xmm6, %r14d
    00002d5c: 	jmp	.Ltmp4482 # Offset: 11612
    00002d5e: 	nop # Size: 2
.Ltmp4484:
    00002d60: 	addl	$0x1, %ebx
    00002d63: 	cmpl	%eax, %ebx
    00002d65: 	jge	.Ltmp4481 # Offset: 11621
.Ltmp4482:
    00002d67: 	movsd	0x40(%rsp), %xmm3
    00002d6d: 	movss	(%rsp), %xmm6
    00002d72: 	movd	%r14d, %xmm0
    00002d77: 	comisd	0x18(%rsp), %xmm3
    00002d7d: 	movss	%xmm6, (%rbp)
    00002d82: 	jbe	.Ltmp4483 # Offset: 11650
    00002d84: 	divss	%xmm6, %xmm0
.Ltmp4483:
    00002d88: 	movsd	0x10(%rsp), %xmm4
    00002d8e: 	cvtss2sd	%xmm0, %xmm0
    00002d92: 	andpd	0x20(%rsp), %xmm0
    00002d98: 	comisd	%xmm0, %xmm4
    00002d9c: 	ja	.Ltmp4484 # Offset: 11676
    00002d9e: 	movq	0x150(%rsp), %rdx
    00002da6: 	movq	%r13, %rsi
    00002da9: 	movl	$0x1, %edi
    00002dae: 	xorl	%eax, %eax
    00002db0: 	callq	__printf_chk@PLT # Offset: 11696
    00002db5: 	movl	iterations(%rip), %eax
    00002dbb: 	addl	$0x1, %ebx
    00002dbe: 	cmpl	%eax, %ebx
    00002dc0: 	jl	.Ltmp4482 # Offset: 11712
.Ltmp4481:
    00002dc2: 	movq	%r12, %rsi
    00002dc5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002dcc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 11724
    00002dd1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002dd8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002ddf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002de6: 	je	.Ltmp4485 # Offset: 11750
.Ltmp4547:
    00002dec: 	movq	-0x20(%rax), %rbp
    00002df0: 	callq	clock@PLT # Offset: 11760
    00002df5: 	pxor	%xmm0, %xmm0
    00002df9: 	movq	%rax, end_time(%rip)
    00002e00: 	movq	%rbp, %rdi
    00002e03: 	subq	start_time(%rip), %rax
    00002e0a: 	cvtsi2sd	%rax, %xmm0
    00002e0f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002e17: 	callq	_Z13record_resultdPKc # Offset: 11799
    00002e1c: 	movq	0x150(%rsp), %rdi
    00002e24: 	cmpq	0x30(%rsp), %rdi
    00002e29: 	je	.Ltmp4486 # Offset: 11817
    00002e2b: 	movq	0x160(%rsp), %rax
    00002e33: 	leaq	0x1(%rax), %rsi
    00002e37: 	callq	_ZdlPvm@PLT # Offset: 11831
.Ltmp4486:
    00002e3c: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00002e43: 	movq	%r15, %rsi
    00002e46: 	movq	%r12, %rdi
    00002e49: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 11849
    00002e4e: 	callq	clock@PLT # Offset: 11854
    00002e53: 	movq	%rax, start_time(%rip)
    00002e5a: 	movl	iterations(%rip), %eax
    00002e60: 	testl	%eax, %eax
    00002e62: 	jle	.Ltmp4487 # Offset: 11874
    00002e68: 	movss	0x7f3c(%rsp), %xmm4
    00002e71: 	movsd	DATAat0x3d6d8(%rip), %xmm7
    00002e79: 	pxor	%xmm1, %xmm1
    00002e7d: 	movaps	%xmm4, %xmm0
    00002e80: 	movss	%xmm4, (%rsp)
    00002e85: 	subss	%xmm4, %xmm0
    00002e89: 	andps	DATAat0x3d720(%rip), %xmm4
    00002e90: 	cvtss2sd	%xmm4, %xmm1
    00002e94: 	comisd	%xmm7, %xmm1
    00002e98: 	ja	.Ltmp4488 # Offset: 11928
    00002e9e: 	movsd	DATAat0x3d6f0(%rip), %xmm3
    00002ea6: 	cvtss2sd	%xmm0, %xmm0
    00002eaa: 	xorl	%ebx, %ebx
    00002eac: 	andpd	DATAat0x3d710(%rip), %xmm0
    00002eb4: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002ebb: 	movsd	%xmm0, 0x18(%rsp)
    00002ec1: 	movsd	%xmm3, 0x10(%rsp)
    00002ec7: 	jmp	.Ltmp4489 # Offset: 11975
    00002ec9: 	nopl	(%rax) # Size: 7
.Ltmp4490:
    00002ed0: 	addl	$0x1, %ebx
    00002ed3: 	cmpl	%eax, %ebx
    00002ed5: 	jge	.Ltmp4487 # Offset: 11989
.Ltmp4489:
    00002ed7: 	movsd	0x10(%rsp), %xmm7
    00002edd: 	comisd	0x18(%rsp), %xmm7
    00002ee3: 	movss	(%rsp), %xmm3
    00002ee8: 	movss	%xmm3, 0xc8(%rsp)
    00002ef1: 	ja	.Ltmp4490 # Offset: 12017
    00002ef3: 	movq	0x150(%rsp), %rdx
    00002efb: 	movq	%rbp, %rsi
    00002efe: 	movl	$0x1, %edi
    00002f03: 	xorl	%eax, %eax
    00002f05: 	callq	__printf_chk@PLT # Offset: 12037
    00002f0a: 	movl	iterations(%rip), %eax
    00002f10: 	addl	$0x1, %ebx
    00002f13: 	cmpl	%eax, %ebx
    00002f15: 	jl	.Ltmp4489 # Offset: 12053
    00002f17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4487:
    00002f20: 	movq	%r12, %rsi
    00002f23: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002f2a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12074
    00002f2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002f36: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002f3d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002f44: 	je	.Ltmp4491 # Offset: 12100
.Ltmp4546:
    00002f4a: 	movq	-0x20(%rax), %rbp
    00002f4e: 	callq	clock@PLT # Offset: 12110
    00002f53: 	pxor	%xmm0, %xmm0
    00002f57: 	movq	%rax, end_time(%rip)
    00002f5e: 	movq	%rbp, %rdi
    00002f61: 	subq	start_time(%rip), %rax
    00002f68: 	cvtsi2sd	%rax, %xmm0
    00002f6d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002f75: 	callq	_Z13record_resultdPKc # Offset: 12149
    00002f7a: 	movq	0x150(%rsp), %rdi
    00002f82: 	cmpq	0x30(%rsp), %rdi
    00002f87: 	je	.Ltmp4492 # Offset: 12167
    00002f89: 	movq	0x160(%rsp), %rax
    00002f91: 	leaq	0x1(%rax), %rsi
    00002f95: 	callq	_ZdlPvm@PLT # Offset: 12181
.Ltmp4492:
    00002f9a: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002fa1: 	movq	%r15, %rsi
    00002fa4: 	movq	%r12, %rdi
    00002fa7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12199
    00002fac: 	callq	clock@PLT # Offset: 12204
    00002fb1: 	movq	%rax, start_time(%rip)
    00002fb8: 	movl	iterations(%rip), %eax
    00002fbe: 	testl	%eax, %eax
    00002fc0: 	jle	.Ltmp4493 # Offset: 12224
    00002fc6: 	movss	0x7f3c(%rsp), %xmm6
    00002fcf: 	movq	DATAat0x3d710(%rip), %xmm3
    00002fd7: 	xorl	%ebx, %ebx
    00002fd9: 	leaq	DATAat0x3d1c8(%rip), %rbp
    00002fe0: 	movsd	DATAat0x3d6d8(%rip), %xmm5
    00002fe8: 	movaps	%xmm3, 0x20(%rsp)
    00002fed: 	movaps	%xmm6, %xmm3
    00002ff0: 	subss	%xmm6, %xmm3
    00002ff4: 	movss	%xmm6, (%rsp)
    00002ff9: 	andps	DATAat0x3d720(%rip), %xmm6
    00003000: 	movsd	%xmm5, 0x18(%rsp)
    00003006: 	movsd	DATAat0x3d6f0(%rip), %xmm5
    0000300e: 	cvtss2sd	%xmm6, %xmm6
    00003012: 	movq	%xmm6, %r14
    00003017: 	movsd	%xmm5, 0x10(%rsp)
    0000301d: 	movd	%xmm3, %r13d
    00003022: 	jmp	.Ltmp4494 # Offset: 12322
    00003024: 	nopl	(%rax) # Size: 4
.Ltmp4496:
    00003028: 	addl	$0x1, %ebx
    0000302b: 	cmpl	%eax, %ebx
    0000302d: 	jge	.Ltmp4493 # Offset: 12333
.Ltmp4494:
    0000302f: 	movq	%r14, %xmm7
    00003034: 	comisd	0x18(%rsp), %xmm7
    0000303a: 	movss	(%rsp), %xmm4
    0000303f: 	movd	%r13d, %xmm0
    00003044: 	movss	%xmm4, 0xc8(%rsp)
    0000304d: 	jbe	.Ltmp4495 # Offset: 12365
    0000304f: 	divss	%xmm4, %xmm0
.Ltmp4495:
    00003053: 	movsd	0x10(%rsp), %xmm6
    00003059: 	cvtss2sd	%xmm0, %xmm0
    0000305d: 	andpd	0x20(%rsp), %xmm0
    00003063: 	comisd	%xmm0, %xmm6
    00003067: 	ja	.Ltmp4496 # Offset: 12391
    00003069: 	movq	0x150(%rsp), %rdx
    00003071: 	movq	%rbp, %rsi
    00003074: 	movl	$0x1, %edi
    00003079: 	xorl	%eax, %eax
    0000307b: 	callq	__printf_chk@PLT # Offset: 12411
    00003080: 	movl	iterations(%rip), %eax
    00003086: 	addl	$0x1, %ebx
    00003089: 	cmpl	%eax, %ebx
    0000308b: 	jl	.Ltmp4494 # Offset: 12427
.Ltmp4493:
    0000308d: 	movq	%r12, %rsi
    00003090: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003097: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 12439
    0000309c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000030a3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000030aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000030b1: 	je	.Ltmp4497 # Offset: 12465
.Ltmp4545:
    000030b7: 	movq	-0x20(%rax), %rbp
    000030bb: 	callq	clock@PLT # Offset: 12475
    000030c0: 	pxor	%xmm0, %xmm0
    000030c4: 	movq	%rax, end_time(%rip)
    000030cb: 	movq	%rbp, %rdi
    000030ce: 	subq	start_time(%rip), %rax
    000030d5: 	cvtsi2sd	%rax, %xmm0
    000030da: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000030e2: 	callq	_Z13record_resultdPKc # Offset: 12514
    000030e7: 	movq	0x150(%rsp), %rdi
    000030ef: 	cmpq	0x30(%rsp), %rdi
    000030f4: 	je	.Ltmp4498 # Offset: 12532
    000030f6: 	movq	0x160(%rsp), %rax
    000030fe: 	leaq	0x1(%rax), %rsi
    00003102: 	callq	_ZdlPvm@PLT # Offset: 12546
.Ltmp4498:
    00003107: 	leaq	0x130(%rsp), %rdi
    0000310f: 	leaq	DATAat0x3d4d0(%rip), %rdx
    00003116: 	movq	%r15, %rsi
    00003119: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12569
    0000311e: 	movl	iterations(%rip), %edx
    00003124: 	xorl	%r8d, %r8d
    00003127: 	xorl	%ecx, %ecx
    00003129: 	movl	$0x1f40, %esi
    0000312e: 	movq	0x130(%rsp), %rdi
    00003136: 	callq	_Z9summarizePKciiii # Offset: 12598
    0000313b: 	movsd	DATAat0x3d708(%rip), %xmm0
    00003143: 	pxor	%xmm7, %xmm7
    00003147: 	movq	%r15, %rsi
    0000314a: 	movq	%r12, %rdi
    0000314d: 	addsd	init_value(%rip), %xmm0
    00003155: 	leaq	DATAat0x3d4e7(%rip), %rdx
    0000315c: 	cvtsd2ss	%xmm0, %xmm7
    00003160: 	movd	%xmm7, %ebx
    00003164: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12644
    00003169: 	movd	%ebx, %xmm6
    0000316d: 	leaq	_Z10test_powerIfET_S0_(%rip), %r13
    00003174: 	movq	%r12, %rdx
    00003177: 	cvttss2si	%xmm6, %ebp
    0000317b: 	movq	%r13, %rsi
    0000317e: 	movl	%ebp, %edi
    00003180: 	callq	"_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12672
    00003185: 	movq	0x150(%rsp), %rdi
    0000318d: 	cmpq	0x30(%rsp), %rdi
    00003192: 	je	.Ltmp4499 # Offset: 12690
    00003194: 	movq	0x160(%rsp), %rax
    0000319c: 	leaq	0x1(%rax), %rsi
    000031a0: 	callq	_ZdlPvm@PLT # Offset: 12704
.Ltmp4499:
    000031a5: 	leaq	DATAat0x3d501(%rip), %rdx
    000031ac: 	movq	%r15, %rsi
    000031af: 	movq	%r12, %rdi
    000031b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12722
    000031b7: 	movq	%r12, %rcx
    000031ba: 	movq	%r13, %rdx
    000031bd: 	movl	%ebp, %esi
    000031bf: 	movl	$0x1f40, %edi
    000031c4: 	callq	"_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12740
    000031c9: 	movq	0x150(%rsp), %rdi
    000031d1: 	cmpq	0x30(%rsp), %rdi
    000031d6: 	je	.Ltmp4500 # Offset: 12758
    000031d8: 	movq	0x160(%rsp), %rax
    000031e0: 	leaq	0x1(%rax), %rsi
    000031e4: 	callq	_ZdlPvm@PLT # Offset: 12772
.Ltmp4500:
    000031e9: 	leaq	DATAat0x3d51f(%rip), %rdx
    000031f0: 	movq	%r15, %rsi
    000031f3: 	movq	%r12, %rdi
    000031f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12790
    000031fb: 	movq	%r12, %rcx
    000031fe: 	movq	%r13, %rdx
    00003201: 	movl	%ebp, %esi
    00003203: 	movl	$0x1f40, %edi
    00003208: 	callq	"_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12808
    0000320d: 	movq	0x150(%rsp), %rdi
    00003215: 	cmpq	0x30(%rsp), %rdi
    0000321a: 	je	.Ltmp4501 # Offset: 12826
    0000321c: 	movq	0x160(%rsp), %rax
    00003224: 	leaq	0x1(%rax), %rsi
    00003228: 	callq	_ZdlPvm@PLT # Offset: 12840
.Ltmp4501:
    0000322d: 	leaq	DATAat0x3d535(%rip), %rdx
    00003234: 	movq	%r15, %rsi
    00003237: 	movq	%r12, %rdi
    0000323a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12858
    0000323f: 	leaq	_Z8test_cosIfET_S0_(%rip), %r13
    00003246: 	movq	%r12, %rdx
    00003249: 	movl	%ebp, %edi
    0000324b: 	movq	%r13, %rsi
    0000324e: 	callq	"_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12878
    00003253: 	movq	0x150(%rsp), %rdi
    0000325b: 	cmpq	0x30(%rsp), %rdi
    00003260: 	je	.Ltmp4502 # Offset: 12896
    00003262: 	movq	0x160(%rsp), %rax
    0000326a: 	leaq	0x1(%rax), %rsi
    0000326e: 	callq	_ZdlPvm@PLT # Offset: 12910
.Ltmp4502:
    00003273: 	leaq	DATAat0x3d640(%rip), %rdx
    0000327a: 	movq	%r15, %rsi
    0000327d: 	movq	%r12, %rdi
    00003280: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12928
    00003285: 	movq	%r12, %rcx
    00003288: 	movq	%r13, %rdx
    0000328b: 	movl	%ebp, %esi
    0000328d: 	movl	$0x1f40, %edi
    00003292: 	callq	"_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 12946
    00003297: 	movq	0x150(%rsp), %rdi
    0000329f: 	cmpq	0x30(%rsp), %rdi
    000032a4: 	je	.Ltmp4503 # Offset: 12964
    000032a6: 	movq	0x160(%rsp), %rax
    000032ae: 	leaq	0x1(%rax), %rsi
    000032b2: 	callq	_ZdlPvm@PLT # Offset: 12978
.Ltmp4503:
    000032b7: 	leaq	DATAat0x3d550(%rip), %rdx
    000032be: 	movq	%r15, %rsi
    000032c1: 	movq	%r12, %rdi
    000032c4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 12996
    000032c9: 	movq	%r12, %rcx
    000032cc: 	movq	%r13, %rdx
    000032cf: 	movl	%ebp, %esi
    000032d1: 	movl	$0x1f40, %edi
    000032d6: 	callq	"_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13014
    000032db: 	movq	0x150(%rsp), %rdi
    000032e3: 	cmpq	0x30(%rsp), %rdi
    000032e8: 	je	.Ltmp4504 # Offset: 13032
    000032ea: 	movq	0x160(%rsp), %rax
    000032f2: 	leaq	0x1(%rax), %rsi
    000032f6: 	callq	_ZdlPvm@PLT # Offset: 13046
.Ltmp4504:
    000032fb: 	leaq	DATAat0x3d567(%rip), %rdx
    00003302: 	movq	%r15, %rsi
    00003305: 	movq	%r12, %rdi
    00003308: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13064
    0000330d: 	leaq	_Z8test_sqrIfET_S0_(%rip), %r13
    00003314: 	movq	%r12, %rdx
    00003317: 	movl	%ebp, %edi
    00003319: 	movq	%r13, %rsi
    0000331c: 	callq	"_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13084
    00003321: 	movq	0x150(%rsp), %rdi
    00003329: 	cmpq	0x30(%rsp), %rdi
    0000332e: 	je	.Ltmp4505 # Offset: 13102
    00003330: 	movq	0x160(%rsp), %rax
    00003338: 	leaq	0x1(%rax), %rsi
    0000333c: 	callq	_ZdlPvm@PLT # Offset: 13116
.Ltmp4505:
    00003341: 	leaq	DATAat0x3d660(%rip), %rdx
    00003348: 	movq	%r15, %rsi
    0000334b: 	movq	%r12, %rdi
    0000334e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13134
    00003353: 	movq	%r12, %rcx
    00003356: 	movq	%r13, %rdx
    00003359: 	movl	%ebp, %esi
    0000335b: 	movl	$0x1f40, %edi
    00003360: 	callq	"_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13152
    00003365: 	movq	0x150(%rsp), %rdi
    0000336d: 	cmpq	0x30(%rsp), %rdi
    00003372: 	je	.Ltmp4506 # Offset: 13170
    00003374: 	movq	0x160(%rsp), %rax
    0000337c: 	leaq	0x1(%rax), %rsi
    00003380: 	callq	_ZdlPvm@PLT # Offset: 13184
.Ltmp4506:
    00003385: 	leaq	DATAat0x3d582(%rip), %rdx
    0000338c: 	movq	%r15, %rsi
    0000338f: 	movq	%r12, %rdi
    00003392: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13202
    00003397: 	movq	%r12, %rcx
    0000339a: 	movq	%r13, %rdx
    0000339d: 	movl	%ebp, %esi
    0000339f: 	movl	$0x1f40, %edi
    000033a4: 	callq	"_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13220
    000033a9: 	movq	0x150(%rsp), %rdi
    000033b1: 	cmpq	0x30(%rsp), %rdi
    000033b6: 	je	.Ltmp4507 # Offset: 13238
    000033b8: 	movq	0x160(%rsp), %rax
    000033c0: 	leaq	0x1(%rax), %rsi
    000033c4: 	callq	_ZdlPvm@PLT # Offset: 13252
.Ltmp4507:
    000033c9: 	leaq	DATAat0x3d599(%rip), %rdx
    000033d0: 	movq	%r15, %rsi
    000033d3: 	movq	%r12, %rdi
    000033d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13270
    000033db: 	leaq	_Z9test_hashIfET_S0_(%rip), %r13
    000033e2: 	movq	%r12, %rdx
    000033e5: 	movl	%ebp, %edi
    000033e7: 	movq	%r13, %rsi
    000033ea: 	callq	"_Z23test_const_function_optIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13290
    000033ef: 	movq	0x150(%rsp), %rdi
    000033f7: 	cmpq	0x30(%rsp), %rdi
    000033fc: 	je	.Ltmp4508 # Offset: 13308
    000033fe: 	movq	0x160(%rsp), %rax
    00003406: 	leaq	0x1(%rax), %rsi
    0000340a: 	callq	_ZdlPvm@PLT # Offset: 13322
.Ltmp4508:
    0000340f: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00003416: 	movq	%r15, %rsi
    00003419: 	movq	%r12, %rdi
    0000341c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13340
    00003421: 	movq	%r12, %rcx
    00003424: 	movq	%r13, %rdx
    00003427: 	movl	%ebp, %esi
    00003429: 	movl	$0x1f40, %edi
    0000342e: 	callq	"_Z27test_const_function_halfoptIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13358
    00003433: 	movq	0x150(%rsp), %rdi
    0000343b: 	cmpq	0x30(%rsp), %rdi
    00003440: 	je	.Ltmp4509 # Offset: 13376
    00003442: 	movq	0x160(%rsp), %rax
    0000344a: 	leaq	0x1(%rax), %rsi
    0000344e: 	callq	_ZdlPvm@PLT # Offset: 13390
.Ltmp4509:
    00003453: 	leaq	DATAat0x3d5cf(%rip), %rdx
    0000345a: 	movq	%r15, %rsi
    0000345d: 	movq	%r12, %rdi
    00003460: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13408
    00003465: 	movq	%r12, %rcx
    00003468: 	movq	%r13, %rdx
    0000346b: 	movl	%ebp, %esi
    0000346d: 	movl	$0x1f40, %edi
    00003472: 	callq	"_Z19test_const_functionIfPFffEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 13426
    00003477: 	movq	0x150(%rsp), %rdi
    0000347f: 	cmpq	0x30(%rsp), %rdi
    00003484: 	je	.Ltmp4510 # Offset: 13444
    00003486: 	movq	0x160(%rsp), %rax
    0000348e: 	leaq	0x1(%rax), %rsi
    00003492: 	callq	_ZdlPvm@PLT # Offset: 13458
.Ltmp4510:
    00003497: 	leaq	DATAat0x3d5e4(%rip), %rdx
    0000349e: 	movq	%r15, %rsi
    000034a1: 	movq	%r12, %rdi
    000034a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 13476
    000034a9: 	movl	iterations(%rip), %edx
    000034af: 	xorl	%r8d, %r8d
    000034b2: 	xorl	%ecx, %ecx
    000034b4: 	movl	$0x1f40, %esi
    000034b9: 	movq	0x150(%rsp), %rdi
    000034c1: 	callq	_Z9summarizePKciiii # Offset: 13505
    000034c6: 	movq	0x150(%rsp), %rdi
    000034ce: 	cmpq	0x30(%rsp), %rdi
    000034d3: 	je	.Ltmp4511 # Offset: 13523
    000034d5: 	movq	0x160(%rsp), %rax
    000034dd: 	leaq	0x1(%rax), %rsi
    000034e1: 	callq	_ZdlPvm@PLT # Offset: 13537
.Ltmp4511:
    000034e6: 	movq	0x130(%rsp), %rdi
    000034ee: 	leaq	0x140(%rsp), %rax
    000034f6: 	cmpq	%rax, %rdi
    000034f9: 	je	.Ltmp4512 # Offset: 13561
    000034fb: 	movq	0x140(%rsp), %rax
    00003503: 	leaq	0x1(%rax), %rsi
    00003507: 	callq	_ZdlPvm@PLT # Offset: 13575
.Ltmp4512:
    0000350c: 	movq	0x110(%rsp), %rdi
    00003514: 	leaq	0x120(%rsp), %rax
    0000351c: 	cmpq	%rax, %rdi
    0000351f: 	je	.Ltmp4513 # Offset: 13599
    00003521: 	movq	0x120(%rsp), %rax
    00003529: 	leaq	0x1(%rax), %rsi
    0000352d: 	callq	_ZdlPvm@PLT # Offset: 13613
.Ltmp4513:
    00003532: 	movq	0xf0(%rsp), %rdi
    0000353a: 	cmpq	0x98(%rsp), %rdi
    00003542: 	je	.Ltmp4514 # Offset: 13634
    00003544: 	movq	0x100(%rsp), %rax
    0000354c: 	leaq	0x1(%rax), %rsi
    00003550: 	callq	_ZdlPvm@PLT # Offset: 13648
.Ltmp4514:
    00003555: 	movq	0x7f48(%rsp), %rax
    0000355d: 	subq	%fs:0x28, %rax
    00003566: 	jne	.Ltmp4515 # Offset: 13670
    0000356c: 	addq	$0x7f58, %rsp
    00003573: 	popq	%rbx
    00003574: 	popq	%rbp
    00003575: 	popq	%r12
    00003577: 	popq	%r13
    00003579: 	popq	%r14
    0000357b: 	popq	%r15
    0000357d: 	retq # Offset: 13693
    0000357e: 	nop # Size: 2
.Ltmp4381:
    00003580: 	movl	current_test(%rip), %edx
    00003586: 	movq	%r14, %rsi
    00003589: 	movl	$0x1, %edi
    0000358e: 	xorl	%eax, %eax
    00003590: 	callq	__printf_chk@PLT # Offset: 13712
    00003595: 	movl	iterations(%rip), %edx
    0000359b: 	jmp	.Ltmp4516 # Offset: 13723
.Ltmp4374:
    000035a0: 	movl	current_test(%rip), %edx
    000035a6: 	movq	%r14, %rsi
    000035a9: 	movl	$0x1, %edi
    000035ae: 	xorl	%eax, %eax
    000035b0: 	callq	__printf_chk@PLT # Offset: 13744
    000035b5: 	movl	iterations(%rip), %edx
    000035bb: 	jmp	.Ltmp4517 # Offset: 13755
.Ltmp4367:
    000035c0: 	movl	current_test(%rip), %edx
    000035c6: 	movq	%r14, %rsi
    000035c9: 	movl	$0x1, %edi
    000035ce: 	xorl	%eax, %eax
    000035d0: 	callq	__printf_chk@PLT # Offset: 13776
    000035d5: 	movl	iterations(%rip), %edx
    000035db: 	jmp	.Ltmp4518 # Offset: 13787
.Ltmp4360:
    000035e0: 	movl	current_test(%rip), %edx
    000035e6: 	movq	%r14, %rsi
    000035e9: 	movl	$0x1, %edi
    000035ee: 	xorl	%eax, %eax
    000035f0: 	callq	__printf_chk@PLT # Offset: 13808
    000035f5: 	movl	iterations(%rip), %edx
    000035fb: 	jmp	.Ltmp4519 # Offset: 13819
.Ltmp4353:
    00003600: 	movl	current_test(%rip), %edx
    00003606: 	movq	%r14, %rsi
    00003609: 	movl	$0x1, %edi
    0000360e: 	xorl	%eax, %eax
    00003610: 	callq	__printf_chk@PLT # Offset: 13840
    00003615: 	movl	iterations(%rip), %edx
    0000361b: 	jmp	.Ltmp4520 # Offset: 13851
.Ltmp4346:
    00003620: 	movl	current_test(%rip), %edx
    00003626: 	movq	%r14, %rsi
    00003629: 	movl	$0x1, %edi
    0000362e: 	xorl	%eax, %eax
    00003630: 	callq	__printf_chk@PLT # Offset: 13872
    00003635: 	movl	iterations(%rip), %edx
    0000363b: 	jmp	.Ltmp4521 # Offset: 13883
.Ltmp4339:
    00003640: 	movl	current_test(%rip), %edx
    00003646: 	movq	%r14, %rsi
    00003649: 	movl	$0x1, %edi
    0000364e: 	xorl	%eax, %eax
    00003650: 	callq	__printf_chk@PLT # Offset: 13904
    00003655: 	movl	iterations(%rip), %edx
    0000365b: 	jmp	.Ltmp4522 # Offset: 13915
.Ltmp4332:
    00003660: 	movl	current_test(%rip), %edx
    00003666: 	movq	%r14, %rsi
    00003669: 	movl	$0x1, %edi
    0000366e: 	xorl	%eax, %eax
    00003670: 	callq	__printf_chk@PLT # Offset: 13936
    00003675: 	movl	iterations(%rip), %edx
    0000367b: 	jmp	.Ltmp4523 # Offset: 13947
.Ltmp4325:
    00003680: 	movl	current_test(%rip), %edx
    00003686: 	movq	%r14, %rsi
    00003689: 	movl	$0x1, %edi
    0000368e: 	xorl	%eax, %eax
    00003690: 	callq	__printf_chk@PLT # Offset: 13968
    00003695: 	movl	iterations(%rip), %edx
    0000369b: 	jmp	.Ltmp4524 # Offset: 13979
.Ltmp4318:
    000036a0: 	movl	current_test(%rip), %edx
    000036a6: 	movq	%r14, %rsi
    000036a9: 	movl	$0x1, %edi
    000036ae: 	xorl	%eax, %eax
    000036b0: 	callq	__printf_chk@PLT # Offset: 14000
    000036b5: 	movl	iterations(%rip), %edx
    000036bb: 	jmp	.Ltmp4525 # Offset: 14011
.Ltmp4311:
    000036c0: 	movl	current_test(%rip), %edx
    000036c6: 	movq	%r13, %rsi
    000036c9: 	movl	$0x1, %edi
    000036ce: 	xorl	%eax, %eax
    000036d0: 	callq	__printf_chk@PLT # Offset: 14032
    000036d5: 	movl	iterations(%rip), %edx
    000036db: 	jmp	.Ltmp4526 # Offset: 14043
.Ltmp4386:
    000036e0: 	movq	0x90(%rsp), %rsi
    000036e8: 	xorl	%edx, %edx
    000036ea: 	movq	%r14, %rdi
    000036ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 14061
    000036f2: 	movq	%rax, (%r14)
    000036f5: 	movq	%rax, %rdi
    000036f8: 	movq	0xb0(%rsp), %rax
    00003700: 	movq	%rax, 0x10(%r14)
.Ltmp4572:
    00003704: 	movq	(%rsp), %rsi
    00003708: 	movq	%r13, %rdx
    0000370b: 	callq	memcpy@PLT # Offset: 14091
    00003710: 	movq	0xb0(%rsp), %r13
    00003718: 	movq	(%r14), %rdi
    0000371b: 	jmp	.Ltmp4527 # Offset: 14107
.Ltmp4400:
    00003720: 	movl	current_test(%rip), %edx
    00003726: 	movq	%r14, %rsi
    00003729: 	movl	$0x1, %edi
    0000372e: 	xorl	%eax, %eax
    00003730: 	callq	__printf_chk@PLT # Offset: 14128
    00003735: 	movl	iterations(%rip), %edx
    0000373b: 	jmp	.Ltmp4528 # Offset: 14139
.Ltmp4393:
    00003740: 	movl	current_test(%rip), %edx
    00003746: 	movq	%r14, %rsi
    00003749: 	movl	$0x1, %edi
    0000374e: 	xorl	%eax, %eax
    00003750: 	callq	__printf_chk@PLT # Offset: 14160
    00003755: 	movl	iterations(%rip), %edx
    0000375b: 	jmp	.Ltmp4529 # Offset: 14171
.Ltmp4471:
    00003760: 	movq	0x150(%rsp), %rdx
    00003768: 	movq	%rbp, %rsi
    0000376b: 	movl	$0x1, %edi
    00003770: 	xorl	%eax, %eax
    00003772: 	callq	__printf_chk@PLT # Offset: 14194
    00003777: 	movl	iterations(%rip), %edx
    0000377d: 	jmp	.Ltmp4530 # Offset: 14205
    00003782: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4463:
    00003788: 	movq	0x150(%rsp), %rdx
    00003790: 	movq	%rbp, %rsi
    00003793: 	movl	$0x1, %edi
    00003798: 	xorl	%eax, %eax
    0000379a: 	callq	__printf_chk@PLT # Offset: 14234
    0000379f: 	movl	iterations(%rip), %edx
    000037a5: 	jmp	.Ltmp4531 # Offset: 14245
    000037aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4455:
    000037b0: 	movq	0x150(%rsp), %rdx
    000037b8: 	movq	%r14, %rsi
    000037bb: 	movl	$0x1, %edi
    000037c0: 	xorl	%eax, %eax
    000037c2: 	callq	__printf_chk@PLT # Offset: 14274
    000037c7: 	movl	iterations(%rip), %edx
    000037cd: 	jmp	.Ltmp4532 # Offset: 14285
    000037d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4443:
    000037d8: 	movq	0x150(%rsp), %rdx
    000037e0: 	movq	%r14, %rsi
    000037e3: 	movl	$0x1, %edi
    000037e8: 	xorl	%eax, %eax
    000037ea: 	callq	__printf_chk@PLT # Offset: 14314
    000037ef: 	movl	iterations(%rip), %edx
    000037f5: 	jmp	.Ltmp4533 # Offset: 14325
    000037fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4436:
    00003800: 	movq	0x150(%rsp), %rdx
    00003808: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000380f: 	movl	$0x1, %edi
    00003814: 	xorl	%eax, %eax
    00003816: 	callq	__printf_chk@PLT # Offset: 14358
    0000381b: 	movl	iterations(%rip), %edx
    00003821: 	jmp	.Ltmp4534 # Offset: 14369
    00003826: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4429:
    00003830: 	movq	0x150(%rsp), %rdx
    00003838: 	leaq	DATAat0x3d1c8(%rip), %rsi
    0000383f: 	movl	$0x1, %edi
    00003844: 	xorl	%eax, %eax
    00003846: 	callq	__printf_chk@PLT # Offset: 14406
    0000384b: 	movl	iterations(%rip), %edx
    00003851: 	jmp	.Ltmp4535 # Offset: 14417
    00003856: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4421:
    00003860: 	movl	current_test(%rip), %edx
    00003866: 	movq	%r14, %rsi
    00003869: 	movl	$0x1, %edi
    0000386e: 	xorl	%eax, %eax
    00003870: 	callq	__printf_chk@PLT # Offset: 14448
    00003875: 	movl	iterations(%rip), %edx
    0000387b: 	jmp	.Ltmp4536 # Offset: 14459
.Ltmp4414:
    00003880: 	movl	current_test(%rip), %edx
    00003886: 	movq	%r14, %rsi
    00003889: 	movl	$0x1, %edi
    0000388e: 	xorl	%eax, %eax
    00003890: 	callq	__printf_chk@PLT # Offset: 14480
    00003895: 	movl	iterations(%rip), %edx
    0000389b: 	jmp	.Ltmp4537 # Offset: 14491
.Ltmp4407:
    000038a0: 	movl	current_test(%rip), %edx
    000038a6: 	movq	%r14, %rsi
    000038a9: 	movl	$0x1, %edi
    000038ae: 	xorl	%eax, %eax
    000038b0: 	callq	__printf_chk@PLT # Offset: 14512
    000038b5: 	movl	iterations(%rip), %edx
    000038bb: 	jmp	.Ltmp4538 # Offset: 14523
.Ltmp4488:
    000038c0: 	movsd	DATAat0x3d6f0(%rip), %xmm5
    000038c8: 	divss	(%rsp), %xmm0
    000038cd: 	xorl	%ebx, %ebx
    000038cf: 	cvtss2sd	%xmm0, %xmm0
    000038d3: 	andpd	DATAat0x3d710(%rip), %xmm0
    000038db: 	leaq	DATAat0x3d1c8(%rip), %rbp
    000038e2: 	movsd	%xmm5, 0x10(%rsp)
    000038e8: 	movsd	%xmm0, 0x18(%rsp)
    000038ee: 	jmp	.Ltmp4539 # Offset: 14574
.Ltmp4540:
    000038f0: 	addl	$0x1, %ebx
    000038f3: 	cmpl	%eax, %ebx
    000038f5: 	jge	.Ltmp4487 # Offset: 14581
.Ltmp4539:
    000038fb: 	movsd	0x10(%rsp), %xmm4
    00003901: 	comisd	0x18(%rsp), %xmm4
    00003907: 	movss	(%rsp), %xmm6
    0000390c: 	movss	%xmm6, 0xc8(%rsp)
    00003915: 	ja	.Ltmp4540 # Offset: 14613
    00003917: 	movq	0x150(%rsp), %rdx
    0000391f: 	movq	%rbp, %rsi
    00003922: 	movl	$0x1, %edi
    00003927: 	xorl	%eax, %eax
    00003929: 	callq	__printf_chk@PLT # Offset: 14633
    0000392e: 	movl	iterations(%rip), %eax
    00003934: 	jmp	.Ltmp4540 # Offset: 14644
.Ltmp4476:
    00003936: 	movsd	DATAat0x3d6f0(%rip), %xmm6
    0000393e: 	divss	(%rsp), %xmm0
    00003943: 	xorl	%ebx, %ebx
    00003945: 	cvtss2sd	%xmm0, %xmm0
    00003949: 	andpd	DATAat0x3d710(%rip), %xmm0
    00003951: 	leaq	DATAat0x3d1c8(%rip), %r13
    00003958: 	movsd	%xmm6, 0x10(%rsp)
    0000395e: 	movsd	%xmm0, 0x18(%rsp)
    00003964: 	jmp	.Ltmp4541 # Offset: 14692
    00003966: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4542:
    00003970: 	addl	$0x1, %ebx
    00003973: 	cmpl	%eax, %ebx
    00003975: 	jge	.Ltmp4475 # Offset: 14709
.Ltmp4541:
    0000397b: 	movsd	0x10(%rsp), %xmm6
    00003981: 	comisd	0x18(%rsp), %xmm6
    00003987: 	movss	(%rsp), %xmm5
    0000398c: 	movss	%xmm5, (%rbp)
    00003991: 	ja	.Ltmp4542 # Offset: 14737
    00003993: 	movq	0x150(%rsp), %rdx
    0000399b: 	movq	%r13, %rsi
    0000399e: 	movl	$0x1, %edi
    000039a3: 	xorl	%eax, %eax
    000039a5: 	callq	__printf_chk@PLT # Offset: 14757
    000039aa: 	movl	iterations(%rip), %eax
    000039b0: 	jmp	.Ltmp4542 # Offset: 14768
.Ltmp4402:
    000039b2: 	movq	-0x8(%rdx), %rax
    000039b6: 	addq	$0x200, %rax
    000039bc: 	jmp	.Ltmp4543 # Offset: 14780
.Ltmp4376:
    000039c1: 	movq	-0x8(%rdx), %rax
    000039c5: 	addq	$0x200, %rax
    000039cb: 	jmp	.Ltmp4544 # Offset: 14795
.Ltmp4497:
    000039d0: 	movq	-0x8(%rdx), %rax
    000039d4: 	addq	$0x200, %rax
    000039da: 	jmp	.Ltmp4545 # Offset: 14810
.Ltmp4491:
    000039df: 	movq	-0x8(%rdx), %rax
    000039e3: 	addq	$0x200, %rax
    000039e9: 	jmp	.Ltmp4546 # Offset: 14825
.Ltmp4485:
    000039ee: 	movq	-0x8(%rdx), %rax
    000039f2: 	addq	$0x200, %rax
    000039f8: 	jmp	.Ltmp4547 # Offset: 14840
.Ltmp4479:
    000039fd: 	movq	-0x8(%rdx), %rax
    00003a01: 	addq	$0x200, %rax
    00003a07: 	jmp	.Ltmp4548 # Offset: 14855
.Ltmp4369:
    00003a0c: 	movq	-0x8(%rdx), %rax
    00003a10: 	addq	$0x200, %rax
    00003a16: 	jmp	.Ltmp4549 # Offset: 14870
.Ltmp4362:
    00003a1b: 	movq	-0x8(%rdx), %rax
    00003a1f: 	addq	$0x200, %rax
    00003a25: 	jmp	.Ltmp4550 # Offset: 14885
.Ltmp4431:
    00003a2a: 	movq	-0x8(%rdx), %rax
    00003a2e: 	addq	$0x200, %rax
    00003a34: 	jmp	.Ltmp4551 # Offset: 14900
.Ltmp4423:
    00003a39: 	movq	-0x8(%rdx), %rax
    00003a3d: 	addq	$0x200, %rax
    00003a43: 	jmp	.Ltmp4552 # Offset: 14915
.Ltmp4416:
    00003a48: 	movq	-0x8(%rdx), %rax
    00003a4c: 	addq	$0x200, %rax
    00003a52: 	jmp	.Ltmp4553 # Offset: 14930
.Ltmp4409:
    00003a57: 	movq	-0x8(%rdx), %rax
    00003a5b: 	addq	$0x200, %rax
    00003a61: 	jmp	.Ltmp4554 # Offset: 14945
.Ltmp4457:
    00003a66: 	movq	-0x8(%rdx), %rax
    00003a6a: 	addq	$0x200, %rax
    00003a70: 	jmp	.Ltmp4555 # Offset: 14960
.Ltmp4438:
    00003a75: 	movq	-0x8(%rdx), %rax
    00003a79: 	addq	$0x200, %rax
    00003a7f: 	jmp	.Ltmp4556 # Offset: 14975
.Ltmp4445:
    00003a84: 	movq	%r12, %rsi
    00003a87: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003a8e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 14990
    00003a93: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003a9a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00003aa1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00003aa8: 	jne	.Ltmp4557 # Offset: 15016
.Ltmp4450:
    00003aae: 	movq	-0x8(%rdx), %rax
    00003ab2: 	addq	$0x200, %rax
    00003ab8: 	jmp	.Ltmp4557 # Offset: 15032
.Ltmp4473:
    00003abd: 	movq	-0x8(%rdx), %rax
    00003ac1: 	addq	$0x200, %rax
    00003ac7: 	jmp	.Ltmp4558 # Offset: 15047
.Ltmp4465:
    00003acc: 	movq	-0x8(%rdx), %rax
    00003ad0: 	addq	$0x200, %rax
    00003ad6: 	jmp	.Ltmp4559 # Offset: 15062
.Ltmp4395:
    00003adb: 	movq	-0x8(%rdx), %rax
    00003adf: 	addq	$0x200, %rax
    00003ae5: 	jmp	.Ltmp4560 # Offset: 15077
.Ltmp4388:
    00003aea: 	movq	-0x8(%rdx), %rax
    00003aee: 	addq	$0x200, %rax
    00003af4: 	jmp	.Ltmp4561 # Offset: 15092
.Ltmp4383:
    00003af9: 	movq	0x88(%rsp), %rsi
    00003b01: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00003b08: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 15112
    00003b0d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00003b14: 	jmp	.Ltmp4562 # Offset: 15124
.Ltmp4355:
    00003b19: 	movq	-0x8(%rdx), %rax
    00003b1d: 	addq	$0x200, %rax
    00003b23: 	jmp	.Ltmp4563 # Offset: 15139
.Ltmp4348:
    00003b28: 	movq	-0x8(%rdx), %rax
    00003b2c: 	addq	$0x200, %rax
    00003b32: 	jmp	.Ltmp4564 # Offset: 15154
.Ltmp4341:
    00003b37: 	movq	-0x8(%rdx), %rax
    00003b3b: 	addq	$0x200, %rax
    00003b41: 	jmp	.Ltmp4565 # Offset: 15169
.Ltmp4334:
    00003b46: 	movq	-0x8(%rdx), %rax
    00003b4a: 	addq	$0x200, %rax
    00003b50: 	jmp	.Ltmp4566 # Offset: 15184
.Ltmp4327:
    00003b55: 	movq	-0x8(%rdx), %rax
    00003b59: 	addq	$0x200, %rax
    00003b5f: 	jmp	.Ltmp4567 # Offset: 15199
.Ltmp4320:
    00003b64: 	movq	-0x8(%rdx), %rax
    00003b68: 	addq	$0x200, %rax
    00003b6e: 	jmp	.Ltmp4568 # Offset: 15214
.Ltmp4313:
    00003b73: 	movq	-0x8(%rdx), %rax
    00003b77: 	addq	$0x200, %rax
    00003b7d: 	jmp	.Ltmp4569 # Offset: 15229
.Ltmp4449:
    00003b82: 	testq	%r13, %r13
    00003b85: 	je	.Ltmp4570 # Offset: 15237
    00003b8b: 	jmp	.Ltmp4571 # Offset: 15243
    00003b8d: 	nopl	(%rax) # Size: 3
.Ltmp4387:
    00003b90: 	testq	%r13, %r13
    00003b93: 	je	.Ltmp4527 # Offset: 15251
    00003b99: 	jmp	.Ltmp4572 # Offset: 15257
    00003b9e: 	nop # Size: 2
.Ltmp4448:
    00003ba0: 	leaq	0xa8(%rsp), %rsi
    00003ba8: 	xorl	%edx, %edx
    00003baa: 	movq	%r14, %rdi
    00003bad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 15277
    00003bb2: 	movq	%rax, (%r14)
    00003bb5: 	movq	%rax, %rdi
    00003bb8: 	movq	0xa8(%rsp), %rax
    00003bc0: 	movq	%rax, 0x10(%r14)
.Ltmp4571:
    00003bc4: 	movq	(%rsp), %rsi
    00003bc8: 	movq	%r13, %rdx
    00003bcb: 	callq	memcpy@PLT # Offset: 15307
    00003bd0: 	movq	0xa8(%rsp), %r13
    00003bd8: 	movq	(%r14), %rdi
    00003bdb: 	jmp	.Ltmp4570 # Offset: 15323
.Ltmp4447:
    00003be0: 	leaq	DATAat0x3d158(%rip), %rdi
    00003be7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15335
.Ltmp4385:
    00003bec: 	leaq	DATAat0x3d158(%rip), %rdi
    00003bf3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 15347
.Ltmp4515:
    00003bf8: 	callq	__stack_chk_fail@PLT # Offset: 15352
    00003bfd: 	endbr64
.Ltmp4574:
    00003c01: 	movq	%rax, %rbp
    00003c04: 	jmp	.Ltmp4573 # Offset: 15364
    00003c06: 	endbr64
    00003c0a: 	jmp	.Ltmp4574 # Offset: 15370
    00003c0c: 	endbr64
    00003c10: 	jmp	.Ltmp4574 # Offset: 15376
    00003c12: 	endbr64
    00003c16: 	jmp	.Ltmp4574 # Offset: 15382
.Ltmp4573:
    00003c18: 	movq	0x150(%rsp), %rdi
    00003c20: 	cmpq	0x30(%rsp), %rdi
    00003c25: 	je	.Ltmp4575 # Offset: 15397
    00003c27: 	movq	0x160(%rsp), %rax
    00003c2f: 	leaq	0x1(%rax), %rsi
    00003c33: 	callq	_ZdlPvm@PLT # Offset: 15411
.Ltmp4575:
    00003c38: 	movq	0x130(%rsp), %rdi
    00003c40: 	leaq	0x140(%rsp), %rax
    00003c48: 	cmpq	%rax, %rdi
    00003c4b: 	je	.Ltmp4576 # Offset: 15435
    00003c4d: 	movq	0x140(%rsp), %rax
    00003c55: 	leaq	0x1(%rax), %rsi
    00003c59: 	callq	_ZdlPvm@PLT # Offset: 15449
.Ltmp4576:
    00003c5e: 	movq	0x110(%rsp), %rdi
    00003c66: 	leaq	0x120(%rsp), %rax
    00003c6e: 	cmpq	%rax, %rdi
    00003c71: 	je	.Ltmp4577 # Offset: 15473
    00003c73: 	movq	0x120(%rsp), %rax
    00003c7b: 	leaq	0x1(%rax), %rsi
    00003c7f: 	callq	_ZdlPvm@PLT # Offset: 15487
.Ltmp4577:
    00003c84: 	movq	0xf0(%rsp), %rdi
    00003c8c: 	cmpq	0x98(%rsp), %rdi
    00003c94: 	je	.Ltmp4578 # Offset: 15508
    00003c96: 	movq	0x100(%rsp), %rax
    00003c9e: 	leaq	0x1(%rax), %rsi
    00003ca2: 	callq	_ZdlPvm@PLT # Offset: 15522
.Ltmp4578:
    00003ca7: 	movq	%rbp, %rdi
    00003caa: 	callq	_Unwind_Resume@PLT # Offset: 15530
    00003caf: 	endbr64
    00003cb3: 	jmp	.Ltmp4574 # Offset: 15539
    00003cb8: 	endbr64
    00003cbc: 	jmp	.Ltmp4574 # Offset: 15548
    00003cc1: 	endbr64
.Ltmp4581:
    00003cc5: 	movq	%rax, %rbp
    00003cc8: 	jmp	.Ltmp4579 # Offset: 15560
    00003cca: 	endbr64
    00003cce: 	movq	%rax, %rbp
    00003cd1: 	movq	0x170(%rsp), %rdi
    00003cd9: 	leaq	0x180(%rsp), %rax
    00003ce1: 	cmpq	%rax, %rdi
    00003ce4: 	je	.Ltmp4577 # Offset: 15588
.Ltmp4580:
    00003ce6: 	movq	0x180(%rsp), %rax
    00003cee: 	leaq	0x1(%rax), %rsi
    00003cf2: 	callq	_ZdlPvm@PLT # Offset: 15602
    00003cf7: 	jmp	.Ltmp4577 # Offset: 15607
.Ltmp4579:
    00003cf9: 	movq	0x170(%rsp), %rdi
    00003d01: 	cmpq	%r12, %rdi
    00003d04: 	jne	.Ltmp4580 # Offset: 15620
    00003d06: 	jmp	.Ltmp4577 # Offset: 15622
    00003d0b: 	endbr64
    00003d0f: 	jmp	.Ltmp4581 # Offset: 15631
    00003d11: 	endbr64
    00003d15: 	jmp	.Ltmp4581 # Offset: 15637
    00003d17: 	endbr64
    00003d1b: 	jmp	.Ltmp4581 # Offset: 15643
    00003d1d: 	endbr64
    00003d21: 	jmp	.Ltmp4581 # Offset: 15649
    00003d23: 	endbr64
    00003d27: 	jmp	.Ltmp4574 # Offset: 15655
    00003d2c: 	endbr64
    00003d30: 	jmp	.Ltmp4574 # Offset: 15664
    00003d35: 	endbr64
    00003d39: 	jmp	.Ltmp4581 # Offset: 15673
    00003d3b: 	endbr64
    00003d3f: 	movq	%rax, %rbp
    00003d42: 	jmp	.Ltmp4576 # Offset: 15682
    00003d47: 	endbr64
    00003d4b: 	jmp	.Ltmp4581 # Offset: 15691
    00003d50: 	endbr64
    00003d54: 	jmp	.Ltmp4581 # Offset: 15700
    00003d59: 	endbr64
    00003d5d: 	jmp	.Ltmp4581 # Offset: 15709
    00003d62: 	endbr64
    00003d66: 	jmp	.Ltmp4581 # Offset: 15718
    00003d6b: 	endbr64
.Ltmp4584:
    00003d6f: 	movq	%rax, %rbp
    00003d72: 	jmp	.Ltmp4582 # Offset: 15730
    00003d74: 	endbr64
    00003d78: 	jmp	.Ltmp4574 # Offset: 15736
    00003d7d: 	endbr64
    00003d81: 	jmp	.Ltmp4581 # Offset: 15745
    00003d86: 	endbr64
    00003d8a: 	jmp	.Ltmp4581 # Offset: 15754
.Ltmp4582:
    00003d8f: 	movq	0x150(%rsp), %rdi
    00003d97: 	cmpq	0x30(%rsp), %rdi
    00003d9c: 	je	.Ltmp4576 # Offset: 15772
.Ltmp4585:
    00003da2: 	movq	0x160(%rsp), %rax
    00003daa: 	leaq	0x1(%rax), %rsi
    00003dae: 	callq	_ZdlPvm@PLT # Offset: 15790
    00003db3: 	jmp	.Ltmp4576 # Offset: 15795
    00003db8: 	endbr64
    00003dbc: 	movq	%rax, %rbp
    00003dbf: 	jmp	.Ltmp4577 # Offset: 15807
    00003dc4: 	endbr64
    00003dc8: 	jmp	.Ltmp4581 # Offset: 15816
    00003dcd: 	endbr64
    00003dd1: 	jmp	.Ltmp4581 # Offset: 15825
    00003dd6: 	endbr64
    00003dda: 	jmp	.Ltmp4581 # Offset: 15834
    00003ddf: 	endbr64
    00003de3: 	movq	%rax, %rbp
    00003de6: 	jmp	.Ltmp4583 # Offset: 15846
    00003de8: 	endbr64
    00003dec: 	jmp	.Ltmp4584 # Offset: 15852
.Ltmp4583:
    00003dee: 	movq	0x150(%rsp), %rdi
    00003df6: 	leaq	0x160(%rsp), %rax
    00003dfe: 	cmpq	%rax, %rdi
    00003e01: 	jne	.Ltmp4585 # Offset: 15873
    00003e03: 	jmp	.Ltmp4576 # Offset: 15875
    00003e08: 	endbr64
    00003e0c: 	jmp	.Ltmp4584 # Offset: 15884
    00003e11: 	endbr64
    00003e15: 	jmp	.Ltmp4584 # Offset: 15893
    00003e1a: 	endbr64
    00003e1e: 	jmp	.Ltmp4584 # Offset: 15902
    00003e23: 	endbr64
    00003e27: 	movq	%rax, %rbp
    00003e2a: 	jmp	.Ltmp4575 # Offset: 15914
    00003e2f: 	endbr64
    00003e33: 	jmp	.Ltmp4574 # Offset: 15923
    00003e38: 	endbr64
    00003e3c: 	jmp	.Ltmp4574 # Offset: 15932
    00003e41: 	endbr64
    00003e45: 	jmp	.Ltmp4574 # Offset: 15941
    00003e4a: 	endbr64
    00003e4e: 	jmp	.Ltmp4574 # Offset: 15950
    00003e53: 	endbr64
    00003e57: 	jmp	.Ltmp4584 # Offset: 15959
    00003e5c: 	endbr64
    00003e60: 	jmp	.Ltmp4584 # Offset: 15968
    00003e65: 	endbr64
    00003e69: 	jmp	.Ltmp4584 # Offset: 15977
    00003e6e: 	endbr64
    00003e72: 	jmp	.Ltmp4584 # Offset: 15986
    00003e77: 	endbr64
    00003e7b: 	jmp	.Ltmp4584 # Offset: 15995
    00003e80: 	endbr64
    00003e84: 	jmp	.Ltmp4584 # Offset: 16004
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIfEvd"

Binary Function "_Z9TestLoopsItEvd" after disassembly {
  Number      : 156
  State       : disassembled
  Address     : 0x33830
  Size        : 0x2f66
  MaxSize     : 0x2f70
  Offset      : 0x33830
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsItEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0155:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x4000(%rsp), %r11
.Ltmp4586:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp4586 # Offset: 37
    00000027: 	subq	$0x28, %rsp
    0000002b: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000033: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000003b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000042: 	movsd	%xmm0, (%rsp)
    00000047: 	leaq	0x190(%rsp), %r13
    0000004f: 	leaq	0x4010(%rsp), %r15
    00000057: 	movq	%fs:0x28, %rax
    00000060: 	movq	%rax, 0x4018(%rsp)
    00000068: 	xorl	%eax, %eax
    0000006a: 	leaq	0xb0(%rsp), %rax
    00000072: 	movq	$0x8, 0xa8(%rsp)
    0000007e: 	movq	%rax, 0x60(%rsp)
    00000083: 	movq	%rax, 0xa0(%rsp)
    0000008b: 	movabsq	$0x745f3631746e6975, %rax
    00000095: 	movq	%rax, 0xb0(%rsp)
    0000009d: 	leaq	0x80(%rsp), %rax
    000000a5: 	movq	%rax, %rsi
    000000a8: 	movq	%rax, 0x58(%rsp)
    000000ad: 	movb	$0x0, 0xb8(%rsp)
    000000b5: 	movaps	%xmm6, 0x80(%rsp)
    000000bd: 	movaps	%xmm7, 0x90(%rsp)
    000000c5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 197
    000000ca: 	cvttsd2si	init_value(%rip), %eax
    000000d2: 	movsd	(%rsp), %xmm0
    000000d7: 	movd	%eax, %xmm1
    000000db: 	movq	%r13, %rax
    000000de: 	punpcklwd	%xmm1, %xmm1
    000000e2: 	pshufd	$0x0, %xmm1, %xmm1
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4587:
    000000f0: 	movaps	%xmm1, (%rax)
    000000f3: 	addq	$0x10, %rax
    000000f7: 	cmpq	%rax, %r15
    000000fa: 	jne	.Ltmp4587 # Offset: 250
    000000fc: 	cvttsd2si	%xmm0, %edi
    00000100: 	xorl	%edx, %edx
    00000102: 	movl	%edi, %esi
    00000104: 	movl	%edi, %eax
    00000106: 	movl	%edi, 0x4c(%rsp)
    0000010a: 	movl	%edi, %ebp
    0000010c: 	addl	%eax, %eax
    0000010e: 	leal	0x2(%rsi), %r14d
    00000112: 	movl	%edi, %ebx
    00000114: 	movw	%ax, (%rsp)
    00000118: 	divw	%r14w
    0000011c: 	leaq	DATAat0x3d273(%rip), %rdx
    00000123: 	addl	%edi, %eax
    00000125: 	leaq	0x120(%rsp), %rdi
    0000012d: 	movw	%ax, 0x18(%rsp)
    00000132: 	leaq	0xa0(%rsp), %rax
    0000013a: 	movq	%rax, %rsi
    0000013d: 	movq	%rdi, 0x38(%rsp)
    00000142: 	movq	%rax, 0x30(%rsp)
    00000147: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 327
    0000014c: 	movzwl	%bp, %eax
    0000014f: 	xorl	%ebp, %ebp
    00000151: 	movl	%eax, 0x6c(%rsp)
    00000155: 	callq	clock@PLT # Offset: 341
    0000015a: 	movl	iterations(%rip), %ecx
    00000160: 	movq	%rax, start_time(%rip)
    00000167: 	testl	%ecx, %ecx
    00000169: 	jle	.Ltmp4588 # Offset: 361
    0000016f: 	movd	%ebx, %xmm0
    00000173: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000017a: 	punpcklwd	%xmm0, %xmm0
    0000017e: 	pshufd	$0x0, %xmm0, %xmm6
    00000183: 	movaps	%xmm6, 0x20(%rsp)
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4591:
    00000190: 	movq	%r13, %rax
    00000193: 	pxor	%xmm0, %xmm0
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4589:
    000001a0: 	movdqa	0x20(%rsp), %xmm1
    000001a6: 	paddw	(%rax), %xmm1
    000001aa: 	addq	$0x10, %rax
    000001ae: 	paddw	%xmm1, %xmm0
    000001b2: 	cmpq	%r15, %rax
    000001b5: 	jne	.Ltmp4589 # Offset: 437
    000001b7: 	movdqa	%xmm0, %xmm1
    000001bb: 	cvttsd2si	init_value(%rip), %eax
    000001c3: 	psrldq	$0x8, %xmm1
    000001c8: 	paddw	%xmm1, %xmm0
    000001cc: 	movdqa	%xmm0, %xmm1
    000001d0: 	psrldq	$0x4, %xmm1
    000001d5: 	addl	%ebx, %eax
    000001d7: 	imulw	$0x1f40, %ax, %ax
    000001dc: 	paddw	%xmm1, %xmm0
    000001e0: 	movdqa	%xmm0, %xmm1
    000001e4: 	psrldq	$0x2, %xmm1
    000001e9: 	paddw	%xmm1, %xmm0
    000001ed: 	pextrw	$0x0, %xmm0, %edx
    000001f2: 	cmpw	%dx, %ax
    000001f5: 	je	.Ltmp4590 # Offset: 501
    000001f7: 	movl	current_test(%rip), %edx
    000001fd: 	movq	%r12, %rsi
    00000200: 	movl	$0x1, %edi
    00000205: 	xorl	%eax, %eax
    00000207: 	callq	__printf_chk@PLT # Offset: 519
    0000020c: 	movl	iterations(%rip), %ecx
.Ltmp4590:
    00000212: 	addl	$0x1, %ebp
    00000215: 	cmpl	%ecx, %ebp
    00000217: 	jl	.Ltmp4591 # Offset: 535
.Ltmp4588:
    0000021d: 	movq	0x38(%rsp), %rsi
    00000222: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000229: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 553
    0000022e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000235: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000023c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000243: 	je	.Ltmp4592 # Offset: 579
.Ltmp4799:
    00000249: 	movq	-0x20(%rax), %rbp
    0000024d: 	callq	clock@PLT # Offset: 589
    00000252: 	pxor	%xmm0, %xmm0
    00000256: 	movq	%rax, end_time(%rip)
    0000025d: 	movq	%rbp, %rdi
    00000260: 	subq	start_time(%rip), %rax
    00000267: 	cvtsi2sd	%rax, %xmm0
    0000026c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000274: 	callq	_Z13record_resultdPKc # Offset: 628
    00000279: 	movq	0x120(%rsp), %rdi
    00000281: 	leaq	0x130(%rsp), %rax
    00000289: 	movq	%rax, 0x40(%rsp)
    0000028e: 	cmpq	%rax, %rdi
    00000291: 	je	.Ltmp4593 # Offset: 657
    00000293: 	movq	0x130(%rsp), %rax
    0000029b: 	leaq	0x1(%rax), %rsi
    0000029f: 	callq	_ZdlPvm@PLT # Offset: 671
.Ltmp4593:
    000002a4: 	movq	0x30(%rsp), %rsi
    000002a9: 	movq	0x38(%rsp), %rdi
    000002ae: 	leaq	DATAat0x3d281(%rip), %rdx
    000002b5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 693
    000002ba: 	callq	clock@PLT # Offset: 698
    000002bf: 	movl	iterations(%rip), %ecx
    000002c5: 	movq	%rax, start_time(%rip)
    000002cc: 	testl	%ecx, %ecx
    000002ce: 	jle	.Ltmp4594 # Offset: 718
    000002d4: 	imulw	$0x1f40, 0x4c(%rsp), %r12w
    000002dc: 	xorl	%ebp, %ebp
    000002de: 	nop # Size: 2
.Ltmp4597:
    000002e0: 	movq	%r13, %rax
    000002e3: 	pxor	%xmm0, %xmm0
    000002e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4595:
    000002f0: 	paddw	(%rax), %xmm0
    000002f4: 	addq	$0x10, %rax
    000002f8: 	cmpq	%r15, %rax
    000002fb: 	jne	.Ltmp4595 # Offset: 763
    000002fd: 	movdqa	%xmm0, %xmm1
    00000301: 	cvttsd2si	init_value(%rip), %eax
    00000309: 	psrldq	$0x8, %xmm1
    0000030e: 	paddw	%xmm1, %xmm0
    00000312: 	movdqa	%xmm0, %xmm1
    00000316: 	psrldq	$0x4, %xmm1
    0000031b: 	addl	%ebx, %eax
    0000031d: 	imulw	$0x1f40, %ax, %ax
    00000322: 	paddw	%xmm1, %xmm0
    00000326: 	movdqa	%xmm0, %xmm1
    0000032a: 	psrldq	$0x2, %xmm1
    0000032f: 	paddw	%xmm1, %xmm0
    00000333: 	pextrw	$0x0, %xmm0, %edx
    00000338: 	addl	%r12d, %edx
    0000033b: 	cmpw	%ax, %dx
    0000033e: 	je	.Ltmp4596 # Offset: 830
    00000340: 	movl	current_test(%rip), %edx
    00000346: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000034d: 	movl	$0x1, %edi
    00000352: 	xorl	%eax, %eax
    00000354: 	callq	__printf_chk@PLT # Offset: 852
    00000359: 	movl	iterations(%rip), %ecx
.Ltmp4596:
    0000035f: 	addl	$0x1, %ebp
    00000362: 	cmpl	%ecx, %ebp
    00000364: 	jl	.Ltmp4597 # Offset: 868
.Ltmp4594:
    0000036a: 	movq	0x38(%rsp), %rsi
    0000036f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000376: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 886
    0000037b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000382: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000389: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000390: 	je	.Ltmp4598 # Offset: 912
.Ltmp4798:
    00000396: 	movq	-0x20(%rax), %rbp
    0000039a: 	callq	clock@PLT # Offset: 922
    0000039f: 	pxor	%xmm0, %xmm0
    000003a3: 	movq	%rax, end_time(%rip)
    000003aa: 	movq	%rbp, %rdi
    000003ad: 	subq	start_time(%rip), %rax
    000003b4: 	cvtsi2sd	%rax, %xmm0
    000003b9: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000003c1: 	callq	_Z13record_resultdPKc # Offset: 961
    000003c6: 	movq	0x120(%rsp), %rdi
    000003ce: 	cmpq	0x40(%rsp), %rdi
    000003d3: 	je	.Ltmp4599 # Offset: 979
    000003d5: 	movq	0x130(%rsp), %rax
    000003dd: 	leaq	0x1(%rax), %rsi
    000003e1: 	callq	_ZdlPvm@PLT # Offset: 993
.Ltmp4599:
    000003e6: 	movq	0x30(%rsp), %rsi
    000003eb: 	movq	0x38(%rsp), %rdi
    000003f0: 	leaq	DATAat0x3d297(%rip), %rdx
    000003f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1015
    000003fc: 	movzwl	0x18(%rsp), %eax
    00000401: 	movl	%eax, 0x50(%rsp)
    00000405: 	movzwl	%r14w, %eax
    00000409: 	movl	%eax, 0x54(%rsp)
    0000040d: 	movzwl	(%rsp), %eax
    00000411: 	movl	%eax, 0x68(%rsp)
    00000415: 	callq	clock@PLT # Offset: 1045
    0000041a: 	movl	iterations(%rip), %ecx
    00000420: 	movq	%rax, start_time(%rip)
    00000427: 	testl	%ecx, %ecx
    00000429: 	jle	.Ltmp4600 # Offset: 1065
    0000042f: 	movzwl	(%rsp), %eax
    00000433: 	xorl	%ebp, %ebp
    00000435: 	leal	(%rax,%r14), %r12d
    00000439: 	addw	0x4c(%rsp), %r12w
    0000043f: 	addw	0x18(%rsp), %r12w
    00000445: 	movd	%r12d, %xmm0
    0000044a: 	punpcklwd	%xmm0, %xmm0
    0000044e: 	pshufd	$0x0, %xmm0, %xmm7
    00000453: 	movaps	%xmm7, 0x20(%rsp)
    00000458: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4603:
    00000460: 	movq	%r13, %rax
    00000463: 	pxor	%xmm0, %xmm0
    00000467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4601:
    00000470: 	movdqa	0x20(%rsp), %xmm1
    00000476: 	paddw	(%rax), %xmm1
    0000047a: 	addq	$0x10, %rax
    0000047e: 	paddw	%xmm1, %xmm0
    00000482: 	cmpq	%r15, %rax
    00000485: 	jne	.Ltmp4601 # Offset: 1157
    00000487: 	movdqa	%xmm0, %xmm1
    0000048b: 	cvttsd2si	init_value(%rip), %eax
    00000493: 	psrldq	$0x8, %xmm1
    00000498: 	paddw	%xmm1, %xmm0
    0000049c: 	movdqa	%xmm0, %xmm1
    000004a0: 	psrldq	$0x4, %xmm1
    000004a5: 	addl	%r12d, %eax
    000004a8: 	imulw	$0x1f40, %ax, %ax
    000004ad: 	paddw	%xmm1, %xmm0
    000004b1: 	movdqa	%xmm0, %xmm1
    000004b5: 	psrldq	$0x2, %xmm1
    000004ba: 	paddw	%xmm1, %xmm0
    000004be: 	pextrw	$0x0, %xmm0, %edx
    000004c3: 	cmpw	%dx, %ax
    000004c6: 	je	.Ltmp4602 # Offset: 1222
    000004c8: 	movl	current_test(%rip), %edx
    000004ce: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000004d5: 	movl	$0x1, %edi
    000004da: 	xorl	%eax, %eax
    000004dc: 	callq	__printf_chk@PLT # Offset: 1244
    000004e1: 	movl	iterations(%rip), %ecx
.Ltmp4602:
    000004e7: 	addl	$0x1, %ebp
    000004ea: 	cmpl	%ecx, %ebp
    000004ec: 	jl	.Ltmp4603 # Offset: 1260
.Ltmp4600:
    000004f2: 	movq	0x38(%rsp), %rsi
    000004f7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004fe: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1278
    00000503: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000050a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000511: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000518: 	je	.Ltmp4604 # Offset: 1304
.Ltmp4797:
    0000051e: 	movq	-0x20(%rax), %rbp
    00000522: 	callq	clock@PLT # Offset: 1314
    00000527: 	pxor	%xmm0, %xmm0
    0000052b: 	movq	%rax, end_time(%rip)
    00000532: 	movq	%rbp, %rdi
    00000535: 	subq	start_time(%rip), %rax
    0000053c: 	cvtsi2sd	%rax, %xmm0
    00000541: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000549: 	callq	_Z13record_resultdPKc # Offset: 1353
    0000054e: 	movq	0x120(%rsp), %rdi
    00000556: 	cmpq	0x40(%rsp), %rdi
    0000055b: 	je	.Ltmp4605 # Offset: 1371
    0000055d: 	movq	0x130(%rsp), %rax
    00000565: 	leaq	0x1(%rax), %rsi
    00000569: 	callq	_ZdlPvm@PLT # Offset: 1385
.Ltmp4605:
    0000056e: 	movq	0x30(%rsp), %rsi
    00000573: 	movq	0x38(%rsp), %rdi
    00000578: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000057f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1407
    00000584: 	callq	clock@PLT # Offset: 1412
    00000589: 	movl	iterations(%rip), %ecx
    0000058f: 	movq	%rax, start_time(%rip)
    00000596: 	testl	%ecx, %ecx
    00000598: 	jle	.Ltmp4606 # Offset: 1432
    0000059e: 	movzwl	(%rsp), %eax
    000005a2: 	xorl	%ebp, %ebp
    000005a4: 	leaq	DATAat0x3d1d8(%rip), %r12
    000005ab: 	addl	%r14d, %eax
    000005ae: 	addw	0x4c(%rsp), %ax
    000005b3: 	addw	0x18(%rsp), %ax
    000005b8: 	movd	%eax, %xmm0
    000005bc: 	punpcklwd	%xmm0, %xmm0
    000005c0: 	pshufd	$0x0, %xmm0, %xmm6
    000005c5: 	movaps	%xmm6, 0x20(%rsp)
    000005ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4609:
    000005d0: 	movq	%r13, %rax
    000005d3: 	pxor	%xmm0, %xmm0
    000005d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4607:
    000005e0: 	movdqa	0x20(%rsp), %xmm1
    000005e6: 	paddw	(%rax), %xmm1
    000005ea: 	addq	$0x10, %rax
    000005ee: 	paddw	%xmm1, %xmm0
    000005f2: 	cmpq	%r15, %rax
    000005f5: 	jne	.Ltmp4607 # Offset: 1525
    000005f7: 	movdqa	%xmm0, %xmm1
    000005fb: 	cvttsd2si	init_value(%rip), %eax
    00000603: 	psrldq	$0x8, %xmm1
    00000608: 	paddw	%xmm1, %xmm0
    0000060c: 	movdqa	%xmm0, %xmm1
    00000610: 	psrldq	$0x4, %xmm1
    00000615: 	addl	%ebx, %eax
    00000617: 	addw	(%rsp), %ax
    0000061b: 	paddw	%xmm1, %xmm0
    0000061f: 	addl	%r14d, %eax
    00000622: 	addw	0x18(%rsp), %ax
    00000627: 	movdqa	%xmm0, %xmm1
    0000062b: 	imulw	$0x1f40, %ax, %ax
    00000630: 	psrldq	$0x2, %xmm1
    00000635: 	paddw	%xmm1, %xmm0
    00000639: 	pextrw	$0x0, %xmm0, %edx
    0000063e: 	cmpw	%dx, %ax
    00000641: 	je	.Ltmp4608 # Offset: 1601
    00000643: 	movl	current_test(%rip), %edx
    00000649: 	movq	%r12, %rsi
    0000064c: 	movl	$0x1, %edi
    00000651: 	xorl	%eax, %eax
    00000653: 	callq	__printf_chk@PLT # Offset: 1619
    00000658: 	movl	iterations(%rip), %ecx
.Ltmp4608:
    0000065e: 	addl	$0x1, %ebp
    00000661: 	cmpl	%ecx, %ebp
    00000663: 	jl	.Ltmp4609 # Offset: 1635
.Ltmp4606:
    00000669: 	movq	0x38(%rsp), %rsi
    0000066e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000675: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1653
    0000067a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000681: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000688: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000068f: 	je	.Ltmp4610 # Offset: 1679
.Ltmp4796:
    00000695: 	movq	-0x20(%rax), %rbp
    00000699: 	callq	clock@PLT # Offset: 1689
    0000069e: 	pxor	%xmm0, %xmm0
    000006a2: 	movq	%rax, end_time(%rip)
    000006a9: 	movq	%rbp, %rdi
    000006ac: 	subq	start_time(%rip), %rax
    000006b3: 	cvtsi2sd	%rax, %xmm0
    000006b8: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006c0: 	callq	_Z13record_resultdPKc # Offset: 1728
    000006c5: 	movq	0x120(%rsp), %rdi
    000006cd: 	cmpq	0x40(%rsp), %rdi
    000006d2: 	je	.Ltmp4611 # Offset: 1746
    000006d4: 	movq	0x130(%rsp), %rax
    000006dc: 	leaq	0x1(%rax), %rsi
    000006e0: 	callq	_ZdlPvm@PLT # Offset: 1760
.Ltmp4611:
    000006e5: 	movq	0x30(%rsp), %rsi
    000006ea: 	movq	0x38(%rsp), %rdi
    000006ef: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000006f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1782
    000006fb: 	callq	clock@PLT # Offset: 1787
    00000700: 	movl	iterations(%rip), %ecx
    00000706: 	xorl	%ebp, %ebp
    00000708: 	movq	%rax, start_time(%rip)
    0000070f: 	testl	%ecx, %ecx
    00000711: 	jle	.Ltmp4612 # Offset: 1809
    00000717: 	movd	%ebx, %xmm0
    0000071b: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000722: 	punpcklwd	%xmm0, %xmm0
    00000726: 	pshufd	$0x0, %xmm0, %xmm7
    0000072b: 	movaps	%xmm7, 0x20(%rsp)
.Ltmp4615:
    00000730: 	movq	%r13, %rax
    00000733: 	pxor	%xmm0, %xmm0
    00000737: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4613:
    00000740: 	paddw	(%rax), %xmm0
    00000744: 	addq	$0x10, %rax
    00000748: 	psubw	0x20(%rsp), %xmm0
    0000074e: 	cmpq	%r15, %rax
    00000751: 	jne	.Ltmp4613 # Offset: 1873
    00000753: 	movdqa	%xmm0, %xmm1
    00000757: 	cvttsd2si	init_value(%rip), %eax
    0000075f: 	psrldq	$0x8, %xmm1
    00000764: 	paddw	%xmm1, %xmm0
    00000768: 	movdqa	%xmm0, %xmm1
    0000076c: 	psrldq	$0x4, %xmm1
    00000771: 	subl	%ebx, %eax
    00000773: 	imulw	$0x1f40, %ax, %ax
    00000778: 	paddw	%xmm1, %xmm0
    0000077c: 	movdqa	%xmm0, %xmm1
    00000780: 	psrldq	$0x2, %xmm1
    00000785: 	paddw	%xmm1, %xmm0
    00000789: 	pextrw	$0x0, %xmm0, %edx
    0000078e: 	cmpw	%dx, %ax
    00000791: 	je	.Ltmp4614 # Offset: 1937
    00000793: 	movl	current_test(%rip), %edx
    00000799: 	movq	%r12, %rsi
    0000079c: 	movl	$0x1, %edi
    000007a1: 	xorl	%eax, %eax
    000007a3: 	callq	__printf_chk@PLT # Offset: 1955
    000007a8: 	movl	iterations(%rip), %ecx
.Ltmp4614:
    000007ae: 	addl	$0x1, %ebp
    000007b1: 	cmpl	%ecx, %ebp
    000007b3: 	jl	.Ltmp4615 # Offset: 1971
.Ltmp4612:
    000007b9: 	movq	0x38(%rsp), %rsi
    000007be: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007c5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1989
    000007ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007d1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007df: 	je	.Ltmp4616 # Offset: 2015
.Ltmp4795:
    000007e5: 	movq	-0x20(%rax), %rbp
    000007e9: 	callq	clock@PLT # Offset: 2025
    000007ee: 	pxor	%xmm0, %xmm0
    000007f2: 	movq	%rax, end_time(%rip)
    000007f9: 	movq	%rbp, %rdi
    000007fc: 	subq	start_time(%rip), %rax
    00000803: 	cvtsi2sd	%rax, %xmm0
    00000808: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000810: 	callq	_Z13record_resultdPKc # Offset: 2064
    00000815: 	movq	0x120(%rsp), %rdi
    0000081d: 	cmpq	0x40(%rsp), %rdi
    00000822: 	je	.Ltmp4617 # Offset: 2082
    00000824: 	movq	0x130(%rsp), %rax
    0000082c: 	leaq	0x1(%rax), %rsi
    00000830: 	callq	_ZdlPvm@PLT # Offset: 2096
.Ltmp4617:
    00000835: 	movq	0x30(%rsp), %rsi
    0000083a: 	movq	0x38(%rsp), %rdi
    0000083f: 	leaq	DATAat0x3d2db(%rip), %rdx
    00000846: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2118
    0000084b: 	callq	clock@PLT # Offset: 2123
    00000850: 	movl	iterations(%rip), %ecx
    00000856: 	movq	%rax, start_time(%rip)
    0000085d: 	testl	%ecx, %ecx
    0000085f: 	jle	.Ltmp4618 # Offset: 2143
    00000865: 	movzwl	(%rsp), %eax
    00000869: 	xorl	%ebp, %ebp
    0000086b: 	leal	(%rax,%r14), %r12d
    0000086f: 	addw	0x4c(%rsp), %r12w
    00000875: 	addw	0x18(%rsp), %r12w
    0000087b: 	movd	%r12d, %xmm0
    00000880: 	punpcklwd	%xmm0, %xmm0
    00000884: 	pshufd	$0x0, %xmm0, %xmm6
    00000889: 	movaps	%xmm6, 0x20(%rsp)
    0000088e: 	nop # Size: 2
.Ltmp4621:
    00000890: 	movq	%r13, %rax
    00000893: 	pxor	%xmm0, %xmm0
    00000897: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4619:
    000008a0: 	paddw	(%rax), %xmm0
    000008a4: 	addq	$0x10, %rax
    000008a8: 	psubw	0x20(%rsp), %xmm0
    000008ae: 	cmpq	%r15, %rax
    000008b1: 	jne	.Ltmp4619 # Offset: 2225
    000008b3: 	movdqa	%xmm0, %xmm1
    000008b7: 	cvttsd2si	init_value(%rip), %eax
    000008bf: 	psrldq	$0x8, %xmm1
    000008c4: 	paddw	%xmm1, %xmm0
    000008c8: 	movdqa	%xmm0, %xmm1
    000008cc: 	psrldq	$0x4, %xmm1
    000008d1: 	subl	%r12d, %eax
    000008d4: 	imulw	$0x1f40, %ax, %ax
    000008d9: 	paddw	%xmm1, %xmm0
    000008dd: 	movdqa	%xmm0, %xmm1
    000008e1: 	psrldq	$0x2, %xmm1
    000008e6: 	paddw	%xmm1, %xmm0
    000008ea: 	pextrw	$0x0, %xmm0, %edx
    000008ef: 	cmpw	%dx, %ax
    000008f2: 	je	.Ltmp4620 # Offset: 2290
    000008f4: 	movl	current_test(%rip), %edx
    000008fa: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000901: 	movl	$0x1, %edi
    00000906: 	xorl	%eax, %eax
    00000908: 	callq	__printf_chk@PLT # Offset: 2312
    0000090d: 	movl	iterations(%rip), %ecx
.Ltmp4620:
    00000913: 	addl	$0x1, %ebp
    00000916: 	cmpl	%ecx, %ebp
    00000918: 	jl	.Ltmp4621 # Offset: 2328
.Ltmp4618:
    0000091e: 	movq	0x38(%rsp), %rsi
    00000923: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000092a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2346
    0000092f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000936: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000093d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000944: 	je	.Ltmp4622 # Offset: 2372
.Ltmp4794:
    0000094a: 	movq	-0x20(%rax), %rbp
    0000094e: 	callq	clock@PLT # Offset: 2382
    00000953: 	pxor	%xmm0, %xmm0
    00000957: 	movq	%rax, end_time(%rip)
    0000095e: 	movq	%rbp, %rdi
    00000961: 	subq	start_time(%rip), %rax
    00000968: 	cvtsi2sd	%rax, %xmm0
    0000096d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000975: 	callq	_Z13record_resultdPKc # Offset: 2421
    0000097a: 	movq	0x120(%rsp), %rdi
    00000982: 	cmpq	0x40(%rsp), %rdi
    00000987: 	je	.Ltmp4623 # Offset: 2439
    00000989: 	movq	0x130(%rsp), %rax
    00000991: 	leaq	0x1(%rax), %rsi
    00000995: 	callq	_ZdlPvm@PLT # Offset: 2453
.Ltmp4623:
    0000099a: 	movq	0x30(%rsp), %rsi
    0000099f: 	movq	0x38(%rsp), %rdi
    000009a4: 	leaq	DATAat0x3d2f8(%rip), %rdx
    000009ab: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2475
    000009b0: 	callq	clock@PLT # Offset: 2480
    000009b5: 	movl	iterations(%rip), %ecx
    000009bb: 	movq	%rax, start_time(%rip)
    000009c2: 	testl	%ecx, %ecx
    000009c4: 	jle	.Ltmp4624 # Offset: 2500
    000009ca: 	movzwl	(%rsp), %eax
    000009ce: 	xorl	%ebp, %ebp
    000009d0: 	leaq	DATAat0x3d1d8(%rip), %r12
    000009d7: 	addl	%r14d, %eax
    000009da: 	addw	0x4c(%rsp), %ax
    000009df: 	addw	0x18(%rsp), %ax
    000009e4: 	movd	%eax, %xmm0
    000009e8: 	punpcklwd	%xmm0, %xmm0
    000009ec: 	pshufd	$0x0, %xmm0, %xmm7
    000009f1: 	movaps	%xmm7, 0x20(%rsp)
    000009f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4627:
    00000a00: 	movq	%r13, %rax
    00000a03: 	pxor	%xmm0, %xmm0
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4625:
    00000a10: 	paddw	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	psubw	0x20(%rsp), %xmm0
    00000a1e: 	cmpq	%r15, %rax
    00000a21: 	jne	.Ltmp4625 # Offset: 2593
    00000a23: 	movdqa	%xmm0, %xmm1
    00000a27: 	cvttsd2si	init_value(%rip), %eax
    00000a2f: 	psrldq	$0x8, %xmm1
    00000a34: 	paddw	%xmm1, %xmm0
    00000a38: 	movdqa	%xmm0, %xmm1
    00000a3c: 	psrldq	$0x4, %xmm1
    00000a41: 	subl	%ebx, %eax
    00000a43: 	subw	(%rsp), %ax
    00000a47: 	paddw	%xmm1, %xmm0
    00000a4b: 	subl	%r14d, %eax
    00000a4e: 	subw	0x18(%rsp), %ax
    00000a53: 	movdqa	%xmm0, %xmm1
    00000a57: 	imulw	$0x1f40, %ax, %ax
    00000a5c: 	psrldq	$0x2, %xmm1
    00000a61: 	paddw	%xmm1, %xmm0
    00000a65: 	pextrw	$0x0, %xmm0, %edx
    00000a6a: 	cmpw	%dx, %ax
    00000a6d: 	je	.Ltmp4626 # Offset: 2669
    00000a6f: 	movl	current_test(%rip), %edx
    00000a75: 	movq	%r12, %rsi
    00000a78: 	movl	$0x1, %edi
    00000a7d: 	xorl	%eax, %eax
    00000a7f: 	callq	__printf_chk@PLT # Offset: 2687
    00000a84: 	movl	iterations(%rip), %ecx
.Ltmp4626:
    00000a8a: 	addl	$0x1, %ebp
    00000a8d: 	cmpl	%ecx, %ebp
    00000a8f: 	jl	.Ltmp4627 # Offset: 2703
.Ltmp4624:
    00000a95: 	movq	0x38(%rsp), %rsi
    00000a9a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000aa1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2721
    00000aa6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ab4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000abb: 	je	.Ltmp4628 # Offset: 2747
.Ltmp4793:
    00000ac1: 	movq	-0x20(%rax), %rbp
    00000ac5: 	callq	clock@PLT # Offset: 2757
    00000aca: 	pxor	%xmm0, %xmm0
    00000ace: 	movq	%rax, end_time(%rip)
    00000ad5: 	movq	%rbp, %rdi
    00000ad8: 	subq	start_time(%rip), %rax
    00000adf: 	cvtsi2sd	%rax, %xmm0
    00000ae4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000aec: 	callq	_Z13record_resultdPKc # Offset: 2796
    00000af1: 	movq	0x120(%rsp), %rdi
    00000af9: 	cmpq	0x40(%rsp), %rdi
    00000afe: 	je	.Ltmp4629 # Offset: 2814
    00000b00: 	movq	0x130(%rsp), %rax
    00000b08: 	leaq	0x1(%rax), %rsi
    00000b0c: 	callq	_ZdlPvm@PLT # Offset: 2828
.Ltmp4629:
    00000b11: 	movq	0x30(%rsp), %rsi
    00000b16: 	movq	0x38(%rsp), %rdi
    00000b1b: 	leaq	DATAat0x3d316(%rip), %rdx
    00000b22: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2850
    00000b27: 	callq	clock@PLT # Offset: 2855
    00000b2c: 	movl	iterations(%rip), %ecx
    00000b32: 	xorl	%ebp, %ebp
    00000b34: 	movq	%rax, start_time(%rip)
    00000b3b: 	testl	%ecx, %ecx
    00000b3d: 	jle	.Ltmp4630 # Offset: 2877
    00000b43: 	movd	%ebx, %xmm0
    00000b47: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000b4e: 	punpcklwd	%xmm0, %xmm0
    00000b52: 	pshufd	$0x0, %xmm0, %xmm6
    00000b57: 	movaps	%xmm6, 0x20(%rsp)
    00000b5c: 	nopl	(%rax) # Size: 4
.Ltmp4633:
    00000b60: 	movq	%r13, %rax
    00000b63: 	pxor	%xmm0, %xmm0
    00000b67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4631:
    00000b70: 	movdqa	0x20(%rsp), %xmm1
    00000b76: 	addq	$0x10, %rax
    00000b7a: 	pmullw	-0x10(%rax), %xmm1
    00000b7f: 	paddw	%xmm1, %xmm0
    00000b83: 	cmpq	%r15, %rax
    00000b86: 	jne	.Ltmp4631 # Offset: 2950
    00000b88: 	movdqa	%xmm0, %xmm1
    00000b8c: 	cvttsd2si	init_value(%rip), %eax
    00000b94: 	psrldq	$0x8, %xmm1
    00000b99: 	paddw	%xmm1, %xmm0
    00000b9d: 	movdqa	%xmm0, %xmm1
    00000ba1: 	psrldq	$0x4, %xmm1
    00000ba6: 	imull	%ebx, %eax
    00000ba9: 	paddw	%xmm1, %xmm0
    00000bad: 	movdqa	%xmm0, %xmm1
    00000bb1: 	psrldq	$0x2, %xmm1
    00000bb6: 	imulw	$0x1f40, %ax, %ax
    00000bbb: 	paddw	%xmm1, %xmm0
    00000bbf: 	pextrw	$0x0, %xmm0, %edx
    00000bc4: 	cmpw	%dx, %ax
    00000bc7: 	je	.Ltmp4632 # Offset: 3015
    00000bc9: 	movl	current_test(%rip), %edx
    00000bcf: 	movq	%r12, %rsi
    00000bd2: 	movl	$0x1, %edi
    00000bd7: 	xorl	%eax, %eax
    00000bd9: 	callq	__printf_chk@PLT # Offset: 3033
    00000bde: 	movl	iterations(%rip), %ecx
.Ltmp4632:
    00000be4: 	addl	$0x1, %ebp
    00000be7: 	cmpl	%ecx, %ebp
    00000be9: 	jl	.Ltmp4633 # Offset: 3049
.Ltmp4630:
    00000bef: 	movq	0x38(%rsp), %rsi
    00000bf4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000bfb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3067
    00000c00: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c07: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c0e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c15: 	je	.Ltmp4634 # Offset: 3093
.Ltmp4779:
    00000c1b: 	movq	-0x20(%rax), %rbp
    00000c1f: 	callq	clock@PLT # Offset: 3103
    00000c24: 	pxor	%xmm0, %xmm0
    00000c28: 	movq	%rax, end_time(%rip)
    00000c2f: 	movq	%rbp, %rdi
    00000c32: 	subq	start_time(%rip), %rax
    00000c39: 	cvtsi2sd	%rax, %xmm0
    00000c3e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000c46: 	callq	_Z13record_resultdPKc # Offset: 3142
    00000c4b: 	movq	0x120(%rsp), %rdi
    00000c53: 	cmpq	0x40(%rsp), %rdi
    00000c58: 	je	.Ltmp4635 # Offset: 3160
    00000c5a: 	movq	0x130(%rsp), %rax
    00000c62: 	leaq	0x1(%rax), %rsi
    00000c66: 	callq	_ZdlPvm@PLT # Offset: 3174
.Ltmp4635:
    00000c6b: 	movq	0x30(%rsp), %rsi
    00000c70: 	movq	0x38(%rsp), %rdi
    00000c75: 	leaq	DATAat0x3d329(%rip), %rdx
    00000c7c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3196
    00000c81: 	callq	clock@PLT # Offset: 3201
    00000c86: 	movl	iterations(%rip), %ecx
    00000c8c: 	movq	%rax, start_time(%rip)
    00000c93: 	testl	%ecx, %ecx
    00000c95: 	jle	.Ltmp4636 # Offset: 3221
    00000c9b: 	movzwl	(%rsp), %r12d
    00000ca0: 	xorl	%ebp, %ebp
    00000ca2: 	imull	%r14d, %r12d
    00000ca6: 	imulw	0x4c(%rsp), %r12w
    00000cad: 	imulw	0x18(%rsp), %r12w
    00000cb4: 	movd	%r12d, %xmm0
    00000cb9: 	punpcklwd	%xmm0, %xmm0
    00000cbd: 	pshufd	$0x0, %xmm0, %xmm7
    00000cc2: 	movaps	%xmm7, 0x20(%rsp)
    00000cc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4639:
    00000cd0: 	movq	%r13, %rax
    00000cd3: 	pxor	%xmm0, %xmm0
    00000cd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4637:
    00000ce0: 	movdqa	0x20(%rsp), %xmm1
    00000ce6: 	addq	$0x10, %rax
    00000cea: 	pmullw	-0x10(%rax), %xmm1
    00000cef: 	paddw	%xmm1, %xmm0
    00000cf3: 	cmpq	%r15, %rax
    00000cf6: 	jne	.Ltmp4637 # Offset: 3318
    00000cf8: 	movdqa	%xmm0, %xmm1
    00000cfc: 	cvttsd2si	init_value(%rip), %eax
    00000d04: 	psrldq	$0x8, %xmm1
    00000d09: 	paddw	%xmm1, %xmm0
    00000d0d: 	movdqa	%xmm0, %xmm1
    00000d11: 	psrldq	$0x4, %xmm1
    00000d16: 	imull	%r12d, %eax
    00000d1a: 	paddw	%xmm1, %xmm0
    00000d1e: 	movdqa	%xmm0, %xmm1
    00000d22: 	psrldq	$0x2, %xmm1
    00000d27: 	imulw	$0x1f40, %ax, %ax
    00000d2c: 	paddw	%xmm1, %xmm0
    00000d30: 	pextrw	$0x0, %xmm0, %edx
    00000d35: 	cmpw	%dx, %ax
    00000d38: 	je	.Ltmp4638 # Offset: 3384
    00000d3a: 	movl	current_test(%rip), %edx
    00000d40: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000d47: 	movl	$0x1, %edi
    00000d4c: 	xorl	%eax, %eax
    00000d4e: 	callq	__printf_chk@PLT # Offset: 3406
    00000d53: 	movl	iterations(%rip), %ecx
.Ltmp4638:
    00000d59: 	addl	$0x1, %ebp
    00000d5c: 	cmpl	%ecx, %ebp
    00000d5e: 	jl	.Ltmp4639 # Offset: 3422
.Ltmp4636:
    00000d64: 	movq	0x38(%rsp), %rsi
    00000d69: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3440
    00000d75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d7c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d83: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d8a: 	je	.Ltmp4640 # Offset: 3466
.Ltmp4778:
    00000d90: 	movq	-0x20(%rax), %rbp
    00000d94: 	callq	clock@PLT # Offset: 3476
    00000d99: 	pxor	%xmm0, %xmm0
    00000d9d: 	movq	%rax, end_time(%rip)
    00000da4: 	movq	%rbp, %rdi
    00000da7: 	subq	start_time(%rip), %rax
    00000dae: 	cvtsi2sd	%rax, %xmm0
    00000db3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000dbb: 	callq	_Z13record_resultdPKc # Offset: 3515
    00000dc0: 	movq	0x120(%rsp), %rdi
    00000dc8: 	cmpq	0x40(%rsp), %rdi
    00000dcd: 	je	.Ltmp4641 # Offset: 3533
    00000dcf: 	movq	0x130(%rsp), %rax
    00000dd7: 	leaq	0x1(%rax), %rsi
    00000ddb: 	callq	_ZdlPvm@PLT # Offset: 3547
.Ltmp4641:
    00000de0: 	movq	0x30(%rsp), %rsi
    00000de5: 	movq	0x38(%rsp), %rdi
    00000dea: 	leaq	DATAat0x3d600(%rip), %rdx
    00000df1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3569
    00000df6: 	callq	clock@PLT # Offset: 3574
    00000dfb: 	movl	iterations(%rip), %ecx
    00000e01: 	movq	%rax, start_time(%rip)
    00000e08: 	testl	%ecx, %ecx
    00000e0a: 	jle	.Ltmp4642 # Offset: 3594
    00000e10: 	movzwl	(%rsp), %r12d
    00000e15: 	xorl	%ebp, %ebp
    00000e17: 	imull	%r14d, %r12d
    00000e1b: 	imulw	0x4c(%rsp), %r12w
    00000e22: 	imulw	0x18(%rsp), %r12w
    00000e29: 	movd	%r12d, %xmm0
    00000e2e: 	punpcklwd	%xmm0, %xmm0
    00000e32: 	pshufd	$0x0, %xmm0, %xmm6
    00000e37: 	movaps	%xmm6, 0x20(%rsp)
    00000e3c: 	nopl	(%rax) # Size: 4
.Ltmp4645:
    00000e40: 	movq	%r13, %rax
    00000e43: 	pxor	%xmm0, %xmm0
    00000e47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4643:
    00000e50: 	movdqa	0x20(%rsp), %xmm1
    00000e56: 	paddw	(%rax), %xmm1
    00000e5a: 	addq	$0x10, %rax
    00000e5e: 	paddw	%xmm1, %xmm0
    00000e62: 	cmpq	%rax, %r15
    00000e65: 	jne	.Ltmp4643 # Offset: 3685
    00000e67: 	movdqa	%xmm0, %xmm1
    00000e6b: 	cvttsd2si	init_value(%rip), %eax
    00000e73: 	psrldq	$0x8, %xmm1
    00000e78: 	paddw	%xmm1, %xmm0
    00000e7c: 	movdqa	%xmm0, %xmm1
    00000e80: 	psrldq	$0x4, %xmm1
    00000e85: 	addl	%r12d, %eax
    00000e88: 	imulw	$0x1f40, %ax, %ax
    00000e8d: 	paddw	%xmm1, %xmm0
    00000e91: 	movdqa	%xmm0, %xmm1
    00000e95: 	psrldq	$0x2, %xmm1
    00000e9a: 	paddw	%xmm1, %xmm0
    00000e9e: 	pextrw	$0x0, %xmm0, %edx
    00000ea3: 	cmpw	%dx, %ax
    00000ea6: 	je	.Ltmp4644 # Offset: 3750
    00000ea8: 	movl	current_test(%rip), %edx
    00000eae: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000eb5: 	movl	$0x1, %edi
    00000eba: 	xorl	%eax, %eax
    00000ebc: 	callq	__printf_chk@PLT # Offset: 3772
    00000ec1: 	movl	iterations(%rip), %ecx
.Ltmp4644:
    00000ec7: 	addl	$0x1, %ebp
    00000eca: 	cmpl	%ecx, %ebp
    00000ecc: 	jl	.Ltmp4645 # Offset: 3788
.Ltmp4642:
    00000ed2: 	movq	0x38(%rsp), %rsi
    00000ed7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000ede: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3806
    00000ee3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000eea: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ef1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ef8: 	je	.Ltmp4646 # Offset: 3832
.Ltmp4777:
    00000efe: 	movq	-0x20(%rax), %rbp
    00000f02: 	callq	clock@PLT # Offset: 3842
    00000f07: 	pxor	%xmm0, %xmm0
    00000f0b: 	movq	%rax, end_time(%rip)
    00000f12: 	movq	%rbp, %rdi
    00000f15: 	subq	start_time(%rip), %rax
    00000f1c: 	cvtsi2sd	%rax, %xmm0
    00000f21: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000f29: 	callq	_Z13record_resultdPKc # Offset: 3881
    00000f2e: 	movq	0x120(%rsp), %rdi
    00000f36: 	cmpq	0x40(%rsp), %rdi
    00000f3b: 	je	.Ltmp4647 # Offset: 3899
    00000f3d: 	movq	0x130(%rsp), %rax
    00000f45: 	leaq	0x1(%rax), %rsi
    00000f49: 	callq	_ZdlPvm@PLT # Offset: 3913
.Ltmp4647:
    00000f4e: 	movq	0x30(%rsp), %rsi
    00000f53: 	movq	0x38(%rsp), %rdi
    00000f58: 	leaq	DATAat0x3d620(%rip), %rdx
    00000f5f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3935
    00000f64: 	callq	clock@PLT # Offset: 3940
    00000f69: 	movl	iterations(%rip), %ecx
    00000f6f: 	movq	%rax, start_time(%rip)
    00000f76: 	testl	%ecx, %ecx
    00000f78: 	jle	.Ltmp4648 # Offset: 3960
    00000f7e: 	movzwl	(%rsp), %eax
    00000f82: 	xorl	%ebp, %ebp
    00000f84: 	leaq	DATAat0x3d1d8(%rip), %r12
    00000f8b: 	imull	%r14d, %eax
    00000f8f: 	imulw	0x4c(%rsp), %ax
    00000f95: 	imulw	0x18(%rsp), %ax
    00000f9b: 	movd	%eax, %xmm0
    00000f9f: 	punpcklwd	%xmm0, %xmm0
    00000fa3: 	pshufd	$0x0, %xmm0, %xmm7
    00000fa8: 	movaps	%xmm7, 0x20(%rsp)
    00000fad: 	nopl	(%rax) # Size: 3
.Ltmp4651:
    00000fb0: 	movq	%r13, %rax
    00000fb3: 	pxor	%xmm0, %xmm0
    00000fb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4649:
    00000fc0: 	movdqa	0x20(%rsp), %xmm1
    00000fc6: 	addq	$0x10, %rax
    00000fca: 	pmullw	-0x10(%rax), %xmm1
    00000fcf: 	paddw	%xmm1, %xmm0
    00000fd3: 	cmpq	%r15, %rax
    00000fd6: 	jne	.Ltmp4649 # Offset: 4054
    00000fd8: 	cvttsd2si	init_value(%rip), %eax
    00000fe0: 	movdqa	%xmm0, %xmm1
    00000fe4: 	psrldq	$0x8, %xmm1
    00000fe9: 	paddw	%xmm1, %xmm0
    00000fed: 	movdqa	%xmm0, %xmm1
    00000ff1: 	imull	%ebx, %eax
    00000ff4: 	psrldq	$0x4, %xmm1
    00000ff9: 	imulw	(%rsp), %ax
    00000ffe: 	paddw	%xmm1, %xmm0
    00001002: 	movdqa	%xmm0, %xmm1
    00001006: 	psrldq	$0x2, %xmm1
    0000100b: 	imull	%r14d, %eax
    0000100f: 	paddw	%xmm1, %xmm0
    00001013: 	imulw	0x18(%rsp), %ax
    00001019: 	pextrw	$0x0, %xmm0, %edx
    0000101e: 	imulw	$0x1f40, %ax, %ax
    00001023: 	cmpw	%dx, %ax
    00001026: 	je	.Ltmp4650 # Offset: 4134
    00001028: 	movl	current_test(%rip), %edx
    0000102e: 	movq	%r12, %rsi
    00001031: 	movl	$0x1, %edi
    00001036: 	xorl	%eax, %eax
    00001038: 	callq	__printf_chk@PLT # Offset: 4152
    0000103d: 	movl	iterations(%rip), %ecx
.Ltmp4650:
    00001043: 	addl	$0x1, %ebp
    00001046: 	cmpl	%ecx, %ebp
    00001048: 	jl	.Ltmp4651 # Offset: 4168
.Ltmp4648:
    0000104e: 	movq	0x38(%rsp), %rsi
    00001053: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000105a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4186
    0000105f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001066: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000106d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001074: 	je	.Ltmp4652 # Offset: 4212
.Ltmp4776:
    0000107a: 	movq	-0x20(%rax), %rbp
    0000107e: 	callq	clock@PLT # Offset: 4222
    00001083: 	pxor	%xmm0, %xmm0
    00001087: 	movq	%rax, end_time(%rip)
    0000108e: 	movq	%rbp, %rdi
    00001091: 	subq	start_time(%rip), %rax
    00001098: 	cvtsi2sd	%rax, %xmm0
    0000109d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000010a5: 	callq	_Z13record_resultdPKc # Offset: 4261
    000010aa: 	movq	0x120(%rsp), %rdi
    000010b2: 	cmpq	0x40(%rsp), %rdi
    000010b7: 	je	.Ltmp4653 # Offset: 4279
    000010b9: 	movq	0x130(%rsp), %rax
    000010c1: 	leaq	0x1(%rax), %rsi
    000010c5: 	callq	_ZdlPvm@PLT # Offset: 4293
.Ltmp4653:
    000010ca: 	movq	0x30(%rsp), %rsi
    000010cf: 	movq	0x38(%rsp), %rdi
    000010d4: 	leaq	DATAat0x3d347(%rip), %rdx
    000010db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4315
    000010e0: 	callq	clock@PLT # Offset: 4320
    000010e5: 	movl	iterations(%rip), %edi
    000010eb: 	xorl	%ebp, %ebp
    000010ed: 	leaq	DATAat0x3d1d8(%rip), %r12
    000010f4: 	movq	%rax, start_time(%rip)
    000010fb: 	testl	%edi, %edi
    000010fd: 	jle	.Ltmp4654 # Offset: 4349
    000010ff: 	nop # Size: 1
.Ltmp4657:
    00001100: 	movq	%r13, %rcx
    00001103: 	xorl	%esi, %esi
    00001105: 	nopl	(%rax) # Size: 3
.Ltmp4655:
    00001108: 	movzwl	(%rcx), %eax
    0000110b: 	xorl	%edx, %edx
    0000110d: 	addq	$0x2, %rcx
    00001111: 	divw	%bx
    00001114: 	addl	%eax, %esi
    00001116: 	cmpq	%rcx, %r15
    00001119: 	jne	.Ltmp4655 # Offset: 4377
    0000111b: 	cvttsd2si	init_value(%rip), %eax
    00001123: 	xorl	%edx, %edx
    00001125: 	divw	%bx
    00001128: 	imulw	$0x1f40, %ax, %ax
    0000112d: 	cmpw	%ax, %si
    00001130: 	je	.Ltmp4656 # Offset: 4400
    00001132: 	movl	current_test(%rip), %edx
    00001138: 	movq	%r12, %rsi
    0000113b: 	movl	$0x1, %edi
    00001140: 	xorl	%eax, %eax
    00001142: 	callq	__printf_chk@PLT # Offset: 4418
    00001147: 	movl	iterations(%rip), %edi
.Ltmp4656:
    0000114d: 	addl	$0x1, %ebp
    00001150: 	cmpl	%edi, %ebp
    00001152: 	jl	.Ltmp4657 # Offset: 4434
.Ltmp4654:
    00001154: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000115b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001162: 	subq	$0x20, %rax
    00001166: 	cmpq	%rax, %rbp
    00001169: 	je	.Ltmp4658 # Offset: 4457
    0000116f: 	leaq	0x10(%rbp), %rdi
    00001173: 	movq	0x128(%rsp), %r12
    0000117b: 	movq	%rdi, (%rbp)
    0000117f: 	movq	0x120(%rsp), %rax
    00001187: 	movq	%rax, %rsi
    0000118a: 	movq	%rax, 0x20(%rsp)
    0000118f: 	addq	%r12, %rsi
    00001192: 	je	.Ltmp4659 # Offset: 4498
    00001194: 	testq	%rax, %rax
    00001197: 	je	.Ltmp4660 # Offset: 4503
.Ltmp4659:
    0000119d: 	movq	%r12, 0x80(%rsp)
    000011a5: 	cmpq	$0xf, %r12
    000011a9: 	ja	.Ltmp4661 # Offset: 4521
    000011af: 	cmpq	$0x1, %r12
    000011b3: 	jne	.Ltmp4662 # Offset: 4531
    000011b9: 	movq	0x20(%rsp), %rax
    000011be: 	movzbl	(%rax), %eax
    000011c1: 	movb	%al, 0x10(%rbp)
.Ltmp4768:
    000011c4: 	movq	%r12, 0x8(%rbp)
    000011c8: 	movb	$0x0, (%rdi,%r12)
    000011cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011db: 	addq	$0x20, %rax
    000011df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011e6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000011ed: 	je	.Ltmp4663 # Offset: 4589
.Ltmp4780:
    000011f3: 	movq	-0x20(%rax), %rbp
    000011f7: 	callq	clock@PLT # Offset: 4599
    000011fc: 	pxor	%xmm0, %xmm0
    00001200: 	movq	%rax, end_time(%rip)
    00001207: 	movq	%rbp, %rdi
    0000120a: 	subq	start_time(%rip), %rax
    00001211: 	cvtsi2sd	%rax, %xmm0
    00001216: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000121e: 	callq	_Z13record_resultdPKc # Offset: 4638
    00001223: 	movq	0x120(%rsp), %rdi
    0000122b: 	cmpq	0x40(%rsp), %rdi
    00001230: 	je	.Ltmp4664 # Offset: 4656
    00001232: 	movq	0x130(%rsp), %rax
    0000123a: 	leaq	0x1(%rax), %rsi
    0000123e: 	callq	_ZdlPvm@PLT # Offset: 4670
.Ltmp4664:
    00001243: 	movq	0x30(%rsp), %rsi
    00001248: 	movq	0x38(%rsp), %rdi
    0000124d: 	leaq	DATAat0x3d358(%rip), %rdx
    00001254: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4692
    00001259: 	callq	clock@PLT # Offset: 4697
    0000125e: 	movl	iterations(%rip), %edi
    00001264: 	xorl	%ebp, %ebp
    00001266: 	leaq	DATAat0x3d1d8(%rip), %r12
    0000126d: 	movq	%rax, start_time(%rip)
    00001274: 	testl	%edi, %edi
    00001276: 	jle	.Ltmp4665 # Offset: 4726
    0000127c: 	nopl	(%rax) # Size: 4
.Ltmp4668:
    00001280: 	movzwl	(%rsp), %r8d
    00001285: 	movzwl	0x18(%rsp), %r9d
    0000128b: 	movq	%r13, %rcx
    0000128e: 	xorl	%esi, %esi
.Ltmp4666:
    00001290: 	movzwl	(%rcx), %eax
    00001293: 	xorl	%edx, %edx
    00001295: 	addq	$0x2, %rcx
    00001299: 	divw	%bx
    0000129c: 	xorl	%edx, %edx
    0000129e: 	divw	%r8w
    000012a2: 	xorl	%edx, %edx
    000012a4: 	divw	%r14w
    000012a8: 	xorl	%edx, %edx
    000012aa: 	divw	%r9w
    000012ae: 	addl	%eax, %esi
    000012b0: 	cmpq	%r15, %rcx
    000012b3: 	jne	.Ltmp4666 # Offset: 4787
    000012b5: 	cvttsd2si	init_value(%rip), %eax
    000012bd: 	xorl	%edx, %edx
    000012bf: 	divw	%bx
    000012c2: 	xorl	%edx, %edx
    000012c4: 	divw	(%rsp)
    000012c8: 	xorl	%edx, %edx
    000012ca: 	divw	%r14w
    000012ce: 	xorl	%edx, %edx
    000012d0: 	divw	0x18(%rsp)
    000012d5: 	imulw	$0x1f40, %ax, %ax
    000012da: 	cmpw	%ax, %si
    000012dd: 	je	.Ltmp4667 # Offset: 4829
    000012df: 	movl	current_test(%rip), %edx
    000012e5: 	movq	%r12, %rsi
    000012e8: 	movl	$0x1, %edi
    000012ed: 	xorl	%eax, %eax
    000012ef: 	callq	__printf_chk@PLT # Offset: 4847
    000012f4: 	movl	iterations(%rip), %edi
.Ltmp4667:
    000012fa: 	addl	$0x1, %ebp
    000012fd: 	cmpl	%edi, %ebp
    000012ff: 	jl	.Ltmp4668 # Offset: 4863
.Ltmp4665:
    00001305: 	movq	0x38(%rsp), %rsi
    0000130a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001311: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4881
    00001316: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000131d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001324: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000132b: 	je	.Ltmp4669 # Offset: 4907
.Ltmp4792:
    00001331: 	movq	-0x20(%rax), %rbp
    00001335: 	callq	clock@PLT # Offset: 4917
    0000133a: 	pxor	%xmm0, %xmm0
    0000133e: 	movq	%rax, end_time(%rip)
    00001345: 	movq	%rbp, %rdi
    00001348: 	subq	start_time(%rip), %rax
    0000134f: 	cvtsi2sd	%rax, %xmm0
    00001354: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000135c: 	callq	_Z13record_resultdPKc # Offset: 4956
    00001361: 	movq	0x120(%rsp), %rdi
    00001369: 	cmpq	0x40(%rsp), %rdi
    0000136e: 	je	.Ltmp4670 # Offset: 4974
    00001370: 	movq	0x130(%rsp), %rax
    00001378: 	leaq	0x1(%rax), %rsi
    0000137c: 	callq	_ZdlPvm@PLT # Offset: 4988
.Ltmp4670:
    00001381: 	movq	0x30(%rsp), %rsi
    00001386: 	movq	0x38(%rsp), %rdi
    0000138b: 	leaq	DATAat0x3d373(%rip), %rdx
    00001392: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5010
    00001397: 	callq	clock@PLT # Offset: 5015
    0000139c: 	movl	iterations(%rip), %ecx
    000013a2: 	movq	%rax, start_time(%rip)
    000013a9: 	testl	%ecx, %ecx
    000013ab: 	jle	.Ltmp4671 # Offset: 5035
    000013b1: 	movl	%ebx, %eax
    000013b3: 	xorl	%edx, %edx
    000013b5: 	xorl	%ebp, %ebp
    000013b7: 	divw	(%rsp)
    000013bb: 	xorl	%edx, %edx
    000013bd: 	divw	%r14w
    000013c1: 	xorl	%edx, %edx
    000013c3: 	leaq	DATAat0x3d1d8(%rip), %r14
    000013ca: 	divw	0x18(%rsp)
    000013cf: 	movl	%eax, %r12d
    000013d2: 	movd	%r12d, %xmm0
    000013d7: 	punpcklwd	%xmm0, %xmm0
    000013db: 	pshufd	$0x0, %xmm0, %xmm6
    000013e0: 	movaps	%xmm6, (%rsp)
    000013e4: 	nopl	(%rax) # Size: 4
.Ltmp4674:
    000013e8: 	movq	%r13, %rax
    000013eb: 	pxor	%xmm0, %xmm0
    000013ef: 	nop # Size: 1
.Ltmp4672:
    000013f0: 	movdqa	(%rsp), %xmm1
    000013f5: 	paddw	(%rax), %xmm1
    000013f9: 	addq	$0x10, %rax
    000013fd: 	paddw	%xmm1, %xmm0
    00001401: 	cmpq	%rax, %r15
    00001404: 	jne	.Ltmp4672 # Offset: 5124
    00001406: 	movdqa	%xmm0, %xmm1
    0000140a: 	cvttsd2si	init_value(%rip), %eax
    00001412: 	psrldq	$0x8, %xmm1
    00001417: 	paddw	%xmm1, %xmm0
    0000141b: 	movdqa	%xmm0, %xmm1
    0000141f: 	psrldq	$0x4, %xmm1
    00001424: 	addl	%r12d, %eax
    00001427: 	imulw	$0x1f40, %ax, %ax
    0000142c: 	paddw	%xmm1, %xmm0
    00001430: 	movdqa	%xmm0, %xmm1
    00001434: 	psrldq	$0x2, %xmm1
    00001439: 	paddw	%xmm1, %xmm0
    0000143d: 	pextrw	$0x0, %xmm0, %edx
    00001442: 	cmpw	%dx, %ax
    00001445: 	je	.Ltmp4673 # Offset: 5189
    00001447: 	movl	current_test(%rip), %edx
    0000144d: 	movq	%r14, %rsi
    00001450: 	movl	$0x1, %edi
    00001455: 	xorl	%eax, %eax
    00001457: 	callq	__printf_chk@PLT # Offset: 5207
    0000145c: 	movl	iterations(%rip), %ecx
.Ltmp4673:
    00001462: 	addl	$0x1, %ebp
    00001465: 	cmpl	%ecx, %ebp
    00001467: 	jl	.Ltmp4674 # Offset: 5223
.Ltmp4671:
    0000146d: 	movq	0x38(%rsp), %rsi
    00001472: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001479: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5241
    0000147e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001485: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000148c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001493: 	je	.Ltmp4675 # Offset: 5267
.Ltmp4791:
    00001499: 	movq	-0x20(%rax), %rbp
    0000149d: 	callq	clock@PLT # Offset: 5277
    000014a2: 	pxor	%xmm0, %xmm0
    000014a6: 	movq	%rax, end_time(%rip)
    000014ad: 	movq	%rbp, %rdi
    000014b0: 	subq	start_time(%rip), %rax
    000014b7: 	cvtsi2sd	%rax, %xmm0
    000014bc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000014c4: 	callq	_Z13record_resultdPKc # Offset: 5316
    000014c9: 	movq	0x120(%rsp), %rdi
    000014d1: 	cmpq	0x40(%rsp), %rdi
    000014d6: 	je	.Ltmp4676 # Offset: 5334
    000014d8: 	movq	0x130(%rsp), %rax
    000014e0: 	leaq	0x1(%rax), %rsi
    000014e4: 	callq	_ZdlPvm@PLT # Offset: 5348
.Ltmp4676:
    000014e9: 	movq	0x30(%rsp), %rsi
    000014ee: 	movq	0x38(%rsp), %rdi
    000014f3: 	leaq	DATAat0x3d38f(%rip), %rdx
    000014fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5370
    000014ff: 	callq	clock@PLT # Offset: 5375
    00001504: 	movl	iterations(%rip), %ecx
    0000150a: 	movq	%rax, start_time(%rip)
    00001511: 	testl	%ecx, %ecx
    00001513: 	jle	.Ltmp4677 # Offset: 5395
    00001519: 	movl	0x54(%rsp), %eax
    0000151d: 	imull	0x68(%rsp), %eax
    00001522: 	xorl	%ebp, %ebp
    00001524: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000152b: 	movzwl	0x4c(%rsp), %r12d
    00001531: 	cltd
    00001532: 	idivl	0x50(%rsp)
    00001536: 	subl	%eax, %r12d
    00001539: 	movd	%r12d, %xmm0
    0000153e: 	punpcklwd	%xmm0, %xmm0
    00001542: 	pshufd	$0x0, %xmm0, %xmm7
    00001547: 	movaps	%xmm7, (%rsp)
    0000154b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4680:
    00001550: 	movq	%r13, %rax
    00001553: 	pxor	%xmm0, %xmm0
    00001557: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4678:
    00001560: 	movdqa	(%rsp), %xmm1
    00001565: 	paddw	(%rax), %xmm1
    00001569: 	addq	$0x10, %rax
    0000156d: 	paddw	%xmm1, %xmm0
    00001571: 	cmpq	%r15, %rax
    00001574: 	jne	.Ltmp4678 # Offset: 5492
    00001576: 	movdqa	%xmm0, %xmm1
    0000157a: 	cvttsd2si	init_value(%rip), %eax
    00001582: 	psrldq	$0x8, %xmm1
    00001587: 	paddw	%xmm1, %xmm0
    0000158b: 	movdqa	%xmm0, %xmm1
    0000158f: 	psrldq	$0x4, %xmm1
    00001594: 	addl	%r12d, %eax
    00001597: 	imulw	$0x1f40, %ax, %ax
    0000159c: 	paddw	%xmm1, %xmm0
    000015a0: 	movdqa	%xmm0, %xmm1
    000015a4: 	psrldq	$0x2, %xmm1
    000015a9: 	paddw	%xmm1, %xmm0
    000015ad: 	pextrw	$0x0, %xmm0, %edx
    000015b2: 	cmpw	%dx, %ax
    000015b5: 	je	.Ltmp4679 # Offset: 5557
    000015b7: 	movl	current_test(%rip), %edx
    000015bd: 	movq	%r14, %rsi
    000015c0: 	movl	$0x1, %edi
    000015c5: 	xorl	%eax, %eax
    000015c7: 	callq	__printf_chk@PLT # Offset: 5575
    000015cc: 	movl	iterations(%rip), %ecx
.Ltmp4679:
    000015d2: 	addl	$0x1, %ebp
    000015d5: 	cmpl	%ecx, %ebp
    000015d7: 	jl	.Ltmp4680 # Offset: 5591
.Ltmp4677:
    000015dd: 	movq	0x38(%rsp), %rsi
    000015e2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015e9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5609
    000015ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015f5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001603: 	je	.Ltmp4681 # Offset: 5635
.Ltmp4790:
    00001609: 	movq	-0x20(%rax), %rbp
    0000160d: 	callq	clock@PLT # Offset: 5645
    00001612: 	pxor	%xmm0, %xmm0
    00001616: 	movq	%rax, end_time(%rip)
    0000161d: 	movq	%rbp, %rdi
    00001620: 	subq	start_time(%rip), %rax
    00001627: 	cvtsi2sd	%rax, %xmm0
    0000162c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001634: 	callq	_Z13record_resultdPKc # Offset: 5684
    00001639: 	movq	0x120(%rsp), %rdi
    00001641: 	cmpq	0x40(%rsp), %rdi
    00001646: 	je	.Ltmp4682 # Offset: 5702
    00001648: 	movq	0x130(%rsp), %rax
    00001650: 	leaq	0x1(%rax), %rsi
    00001654: 	callq	_ZdlPvm@PLT # Offset: 5716
.Ltmp4682:
    00001659: 	movq	0x30(%rsp), %rsi
    0000165e: 	movq	0x38(%rsp), %rdi
    00001663: 	leaq	DATAat0x3d3a8(%rip), %rdx
    0000166a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5738
    0000166f: 	callq	clock@PLT # Offset: 5743
    00001674: 	movl	iterations(%rip), %ecx
    0000167a: 	movq	%rax, start_time(%rip)
    00001681: 	testl	%ecx, %ecx
    00001683: 	jle	.Ltmp4683 # Offset: 5763
    00001689: 	movl	0x54(%rsp), %eax
    0000168d: 	imull	0x68(%rsp), %eax
    00001692: 	xorl	%ebp, %ebp
    00001694: 	leaq	DATAat0x3d1d8(%rip), %r14
    0000169b: 	cltd
    0000169c: 	idivl	0x50(%rsp)
    000016a0: 	movzwl	0x4c(%rsp), %edx
    000016a5: 	subl	%eax, %edx
    000016a7: 	movl	%eax, %r12d
    000016aa: 	movd	%edx, %xmm0
    000016ae: 	punpcklwd	%xmm0, %xmm0
    000016b2: 	pshufd	$0x0, %xmm0, %xmm6
    000016b7: 	movaps	%xmm6, (%rsp)
    000016bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4686:
    000016c0: 	movq	%r13, %rax
    000016c3: 	pxor	%xmm0, %xmm0
    000016c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4684:
    000016d0: 	movdqa	(%rsp), %xmm1
    000016d5: 	paddw	(%rax), %xmm1
    000016d9: 	addq	$0x10, %rax
    000016dd: 	paddw	%xmm1, %xmm0
    000016e1: 	cmpq	%rax, %r15
    000016e4: 	jne	.Ltmp4684 # Offset: 5860
    000016e6: 	movdqa	%xmm0, %xmm1
    000016ea: 	cvttsd2si	init_value(%rip), %eax
    000016f2: 	psrldq	$0x8, %xmm1
    000016f7: 	paddw	%xmm1, %xmm0
    000016fb: 	movdqa	%xmm0, %xmm1
    000016ff: 	psrldq	$0x4, %xmm1
    00001704: 	addl	%ebx, %eax
    00001706: 	paddw	%xmm1, %xmm0
    0000170a: 	subl	%r12d, %eax
    0000170d: 	movdqa	%xmm0, %xmm1
    00001711: 	imulw	$0x1f40, %ax, %ax
    00001716: 	psrldq	$0x2, %xmm1
    0000171b: 	paddw	%xmm1, %xmm0
    0000171f: 	pextrw	$0x0, %xmm0, %edx
    00001724: 	cmpw	%dx, %ax
    00001727: 	je	.Ltmp4685 # Offset: 5927
    00001729: 	movl	current_test(%rip), %edx
    0000172f: 	movq	%r14, %rsi
    00001732: 	movl	$0x1, %edi
    00001737: 	xorl	%eax, %eax
    00001739: 	callq	__printf_chk@PLT # Offset: 5945
    0000173e: 	movl	iterations(%rip), %ecx
.Ltmp4685:
    00001744: 	addl	$0x1, %ebp
    00001747: 	cmpl	%ecx, %ebp
    00001749: 	jl	.Ltmp4686 # Offset: 5961
.Ltmp4683:
    0000174f: 	movq	0x38(%rsp), %rsi
    00001754: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000175b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5979
    00001760: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001767: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000176e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001775: 	je	.Ltmp4687 # Offset: 6005
.Ltmp4789:
    0000177b: 	movq	-0x20(%rax), %rbp
    0000177f: 	callq	clock@PLT # Offset: 6015
    00001784: 	pxor	%xmm0, %xmm0
    00001788: 	movq	%rax, end_time(%rip)
    0000178f: 	movq	%rbp, %rdi
    00001792: 	subq	start_time(%rip), %rax
    00001799: 	cvtsi2sd	%rax, %xmm0
    0000179e: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000017a6: 	callq	_Z13record_resultdPKc # Offset: 6054
    000017ab: 	movq	0x120(%rsp), %rdi
    000017b3: 	cmpq	0x40(%rsp), %rdi
    000017b8: 	je	.Ltmp4688 # Offset: 6072
    000017ba: 	movq	0x130(%rsp), %rax
    000017c2: 	leaq	0x1(%rax), %rsi
    000017c6: 	callq	_ZdlPvm@PLT # Offset: 6086
.Ltmp4688:
    000017cb: 	movl	0x50(%rsp), %r8d
    000017d0: 	movl	0x54(%rsp), %ecx
    000017d4: 	movq	%r13, %rdi
    000017d7: 	movl	0x68(%rsp), %edx
    000017db: 	movl	0x6c(%rsp), %esi
    000017df: 	callq	_Z20TestLoopsIntegerOnlyItENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 6111
    000017e4: 	movq	0x30(%rsp), %rsi
    000017e9: 	leaq	0xc0(%rsp), %rdi
    000017f1: 	leaq	DATAat0x3d3c2(%rip), %rdx
    000017f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6136
    000017fd: 	movl	iterations(%rip), %edx
    00001803: 	xorl	%r8d, %r8d
    00001806: 	xorl	%ecx, %ecx
    00001808: 	movl	$0x1f40, %esi
    0000180d: 	movq	0xc0(%rsp), %rdi
    00001815: 	callq	_Z9summarizePKciiii # Offset: 6165
    0000181a: 	movsd	init_value(%rip), %xmm1
    00001822: 	cvttsd2si	%xmm1, %edx
    00001826: 	movl	%edx, %eax
    00001828: 	movd	%edx, %xmm0
    0000182c: 	movzwl	%dx, %ecx
    0000182f: 	shll	$0x10, %eax
    00001832: 	punpcklwd	%xmm0, %xmm0
    00001836: 	orl	%eax, %ecx
    00001838: 	pshufd	$0x0, %xmm0, %xmm0
    0000183d: 	movq	%r13, %rax
.Ltmp4689:
    00001840: 	movaps	%xmm0, (%rax)
    00001843: 	addq	$0x10, %rax
    00001847: 	cmpq	%r15, %rax
    0000184a: 	jne	.Ltmp4689 # Offset: 6218
    0000184c: 	addsd	DATAat0x3d700(%rip), %xmm1
    00001854: 	leaq	0x100(%rsp), %rbp
    0000185c: 	movw	%dx, 0x96(%rsp)
    00001864: 	movw	%dx, 0x98(%rsp)
    0000186c: 	leaq	DATAat0x3d3d2(%rip), %rdx
    00001873: 	movl	%ecx, 0x80(%rsp)
    0000187a: 	cvttsd2si	%xmm1, %eax
    0000187e: 	movl	%ecx, 0x8c(%rsp)
    00001885: 	movslq	%eax, %rsi
    00001888: 	imulq	$0x51eb851f, %rsi, %rsi
    0000188f: 	sarq	$0x24, %rsi
    00001893: 	movq	%rsi, %rdi
    00001896: 	movl	%eax, %esi
    00001898: 	sarl	$0x1f, %esi
    0000189b: 	subl	%esi, %edi
    0000189d: 	imull	$0x32, %edi, %esi
    000018a0: 	movq	%rbp, %rdi
    000018a3: 	subl	%esi, %eax
    000018a5: 	movq	0x30(%rsp), %rsi
    000018aa: 	movl	%eax, (%rsp)
    000018ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6317
    000018b2: 	callq	clock@PLT # Offset: 6322
    000018b7: 	movl	iterations(%rip), %ecx
    000018bd: 	movq	%rax, start_time(%rip)
    000018c4: 	testl	%ecx, %ecx
    000018c6: 	jle	.Ltmp4690 # Offset: 6342
    000018cc: 	movslq	(%rsp), %rax
    000018d0: 	movq	0x38(%rsp), %rsi
    000018d5: 	xorl	%ebx, %ebx
    000018d7: 	leaq	DATAat0x3d1c8(%rip), %r14
    000018de: 	leaq	(%rsi,%rax,2), %r12
    000018e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4693:
    000018e8: 	cvttsd2si	init_value(%rip), %edx
    000018f0: 	movq	%r13, %rax
    000018f3: 	pxor	%xmm0, %xmm0
    000018f7: 	imulw	$0x1f40, %dx, %dx
    000018fc: 	nopl	(%rax) # Size: 4
.Ltmp4691:
    00001900: 	paddw	(%rax), %xmm0
    00001904: 	addq	$0x10, %rax
    00001908: 	cmpq	%rax, %r15
    0000190b: 	jne	.Ltmp4691 # Offset: 6411
    0000190d: 	movdqa	%xmm0, %xmm1
    00001911: 	psrldq	$0x8, %xmm1
    00001916: 	paddw	%xmm1, %xmm0
    0000191a: 	movdqa	%xmm0, %xmm1
    0000191e: 	psrldq	$0x4, %xmm1
    00001923: 	paddw	%xmm1, %xmm0
    00001927: 	movdqa	%xmm0, %xmm1
    0000192b: 	psrldq	$0x2, %xmm1
    00001930: 	paddw	%xmm1, %xmm0
    00001934: 	pextrw	$0x0, %xmm0, %eax
    00001939: 	movw	%ax, (%r12)
    0000193e: 	cmpw	%ax, %dx
    00001941: 	je	.Ltmp4692 # Offset: 6465
    00001943: 	movq	0x100(%rsp), %rdx
    0000194b: 	movq	%r14, %rsi
    0000194e: 	movl	$0x1, %edi
    00001953: 	xorl	%eax, %eax
    00001955: 	callq	__printf_chk@PLT # Offset: 6485
    0000195a: 	movl	iterations(%rip), %ecx
.Ltmp4692:
    00001960: 	addl	$0x1, %ebx
    00001963: 	cmpl	%ecx, %ebx
    00001965: 	jl	.Ltmp4693 # Offset: 6501
.Ltmp4690:
    00001967: 	movq	%rbp, %rsi
    0000196a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001971: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6513
    00001976: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000197d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001984: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000198b: 	je	.Ltmp4694 # Offset: 6539
.Ltmp4788:
    00001991: 	movq	-0x20(%rax), %r12
    00001995: 	callq	clock@PLT # Offset: 6549
    0000199a: 	pxor	%xmm0, %xmm0
    0000199e: 	movq	%rax, end_time(%rip)
    000019a5: 	movq	%r12, %rdi
    000019a8: 	subq	start_time(%rip), %rax
    000019af: 	cvtsi2sd	%rax, %xmm0
    000019b4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000019bc: 	callq	_Z13record_resultdPKc # Offset: 6588
    000019c1: 	movq	0x100(%rsp), %rdi
    000019c9: 	leaq	0x110(%rsp), %rbx
    000019d1: 	cmpq	%rbx, %rdi
    000019d4: 	je	.Ltmp4695 # Offset: 6612
    000019d6: 	movq	0x110(%rsp), %rax
    000019de: 	leaq	0x1(%rax), %rsi
    000019e2: 	callq	_ZdlPvm@PLT # Offset: 6626
.Ltmp4695:
    000019e7: 	movq	0x30(%rsp), %rsi
    000019ec: 	leaq	DATAat0x3d3eb(%rip), %rdx
    000019f3: 	movq	%rbp, %rdi
    000019f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6646
    000019fb: 	callq	clock@PLT # Offset: 6651
    00001a00: 	movl	iterations(%rip), %ecx
    00001a06: 	movq	%rax, start_time(%rip)
    00001a0d: 	testl	%ecx, %ecx
    00001a0f: 	jle	.Ltmp4696 # Offset: 6671
    00001a15: 	movslq	(%rsp), %rax
    00001a19: 	movq	0x38(%rsp), %rdi
    00001a1e: 	xorl	%r12d, %r12d
    00001a21: 	leaq	(%rdi,%rax,2), %r14
    00001a25: 	nopl	(%rax) # Size: 3
.Ltmp4699:
    00001a28: 	cvttsd2si	init_value(%rip), %edx
    00001a30: 	movq	%r13, %rax
    00001a33: 	pxor	%xmm0, %xmm0
    00001a37: 	imulw	$0x1f40, %dx, %dx
    00001a3c: 	nopl	(%rax) # Size: 4
.Ltmp4697:
    00001a40: 	paddw	(%rax), %xmm0
    00001a44: 	addq	$0x10, %rax
    00001a48: 	cmpq	%r15, %rax
    00001a4b: 	jne	.Ltmp4697 # Offset: 6731
    00001a4d: 	movdqa	%xmm0, %xmm1
    00001a51: 	psrldq	$0x8, %xmm1
    00001a56: 	paddw	%xmm1, %xmm0
    00001a5a: 	movdqa	%xmm0, %xmm1
    00001a5e: 	psrldq	$0x4, %xmm1
    00001a63: 	paddw	%xmm1, %xmm0
    00001a67: 	movdqa	%xmm0, %xmm1
    00001a6b: 	psrldq	$0x2, %xmm1
    00001a70: 	paddw	%xmm1, %xmm0
    00001a74: 	pextrw	$0x0, %xmm0, %eax
    00001a79: 	movw	%ax, (%r14)
    00001a7d: 	cmpw	%ax, %dx
    00001a80: 	je	.Ltmp4698 # Offset: 6784
    00001a82: 	movq	0x100(%rsp), %rdx
    00001a8a: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001a91: 	movl	$0x1, %edi
    00001a96: 	xorl	%eax, %eax
    00001a98: 	callq	__printf_chk@PLT # Offset: 6808
    00001a9d: 	movl	iterations(%rip), %ecx
.Ltmp4698:
    00001aa3: 	addl	$0x1, %r12d
    00001aa7: 	cmpl	%ecx, %r12d
    00001aaa: 	jl	.Ltmp4699 # Offset: 6826
.Ltmp4696:
    00001ab0: 	movq	%rbp, %rsi
    00001ab3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001aba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6842
    00001abf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ac6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001acd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ad4: 	je	.Ltmp4700 # Offset: 6868
.Ltmp4787:
    00001ada: 	movq	-0x20(%rax), %r12
    00001ade: 	callq	clock@PLT # Offset: 6878
    00001ae3: 	pxor	%xmm0, %xmm0
    00001ae7: 	movq	%rax, end_time(%rip)
    00001aee: 	movq	%r12, %rdi
    00001af1: 	subq	start_time(%rip), %rax
    00001af8: 	cvtsi2sd	%rax, %xmm0
    00001afd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001b05: 	callq	_Z13record_resultdPKc # Offset: 6917
    00001b0a: 	movq	0x100(%rsp), %rdi
    00001b12: 	cmpq	%rbx, %rdi
    00001b15: 	je	.Ltmp4701 # Offset: 6933
    00001b17: 	movq	0x110(%rsp), %rax
    00001b1f: 	leaq	0x1(%rax), %rsi
    00001b23: 	callq	_ZdlPvm@PLT # Offset: 6947
.Ltmp4701:
    00001b28: 	movq	0x30(%rsp), %rsi
    00001b2d: 	leaq	DATAat0x3d400(%rip), %rdx
    00001b34: 	movq	%rbp, %rdi
    00001b37: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6967
    00001b3c: 	callq	clock@PLT # Offset: 6972
    00001b41: 	movl	iterations(%rip), %ecx
    00001b47: 	xorl	%r12d, %r12d
    00001b4a: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001b51: 	movq	%rax, start_time(%rip)
    00001b58: 	testl	%ecx, %ecx
    00001b5a: 	jle	.Ltmp4702 # Offset: 7002
.Ltmp4705:
    00001b60: 	cvttsd2si	init_value(%rip), %edx
    00001b68: 	movq	%r13, %rax
    00001b6b: 	pxor	%xmm0, %xmm0
    00001b6f: 	imulw	$0x1f40, %dx, %dx
    00001b74: 	nopl	(%rax) # Size: 4
.Ltmp4703:
    00001b78: 	paddw	(%rax), %xmm0
    00001b7c: 	addq	$0x10, %rax
    00001b80: 	cmpq	%r15, %rax
    00001b83: 	jne	.Ltmp4703 # Offset: 7043
    00001b85: 	movdqa	%xmm0, %xmm1
    00001b89: 	psrldq	$0x8, %xmm1
    00001b8e: 	paddw	%xmm1, %xmm0
    00001b92: 	movdqa	%xmm0, %xmm1
    00001b96: 	psrldq	$0x4, %xmm1
    00001b9b: 	paddw	%xmm1, %xmm0
    00001b9f: 	movdqa	%xmm0, %xmm1
    00001ba3: 	psrldq	$0x2, %xmm1
    00001ba8: 	paddw	%xmm1, %xmm0
    00001bac: 	pextrw	$0x0, %xmm0, %eax
    00001bb1: 	movw	%ax, 0x8c(%rsp)
    00001bb9: 	cmpw	%ax, %dx
    00001bbc: 	je	.Ltmp4704 # Offset: 7100
    00001bbe: 	movq	0x100(%rsp), %rdx
    00001bc6: 	movq	%r14, %rsi
    00001bc9: 	movl	$0x1, %edi
    00001bce: 	xorl	%eax, %eax
    00001bd0: 	callq	__printf_chk@PLT # Offset: 7120
    00001bd5: 	movl	iterations(%rip), %ecx
.Ltmp4704:
    00001bdb: 	addl	$0x1, %r12d
    00001bdf: 	cmpl	%ecx, %r12d
    00001be2: 	jl	.Ltmp4705 # Offset: 7138
.Ltmp4702:
    00001be8: 	movq	%rbp, %rsi
    00001beb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bf2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7154
    00001bf7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bfe: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001c05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c0c: 	je	.Ltmp4706 # Offset: 7180
.Ltmp4786:
    00001c12: 	movq	-0x20(%rax), %r12
    00001c16: 	callq	clock@PLT # Offset: 7190
    00001c1b: 	pxor	%xmm0, %xmm0
    00001c1f: 	movq	%rax, end_time(%rip)
    00001c26: 	movq	%r12, %rdi
    00001c29: 	subq	start_time(%rip), %rax
    00001c30: 	cvtsi2sd	%rax, %xmm0
    00001c35: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001c3d: 	callq	_Z13record_resultdPKc # Offset: 7229
    00001c42: 	movq	0x100(%rsp), %rdi
    00001c4a: 	cmpq	%rbx, %rdi
    00001c4d: 	je	.Ltmp4707 # Offset: 7245
    00001c4f: 	movq	0x110(%rsp), %rax
    00001c57: 	leaq	0x1(%rax), %rsi
    00001c5b: 	callq	_ZdlPvm@PLT # Offset: 7259
.Ltmp4707:
    00001c60: 	movq	0x30(%rsp), %rsi
    00001c65: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001c6c: 	movq	%rbp, %rdi
    00001c6f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7279
    00001c74: 	callq	clock@PLT # Offset: 7284
    00001c79: 	movl	iterations(%rip), %ecx
    00001c7f: 	xorl	%r12d, %r12d
    00001c82: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001c89: 	movq	%rax, start_time(%rip)
    00001c90: 	testl	%ecx, %ecx
    00001c92: 	jle	.Ltmp4708 # Offset: 7314
    00001c98: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4711:
    00001ca0: 	cvttsd2si	init_value(%rip), %edx
    00001ca8: 	movq	%r13, %rax
    00001cab: 	pxor	%xmm0, %xmm0
    00001caf: 	imulw	$0x1f40, %dx, %dx
    00001cb4: 	nopl	(%rax) # Size: 4
.Ltmp4709:
    00001cb8: 	paddw	(%rax), %xmm0
    00001cbc: 	addq	$0x10, %rax
    00001cc0: 	cmpq	%rax, %r15
    00001cc3: 	jne	.Ltmp4709 # Offset: 7363
    00001cc5: 	movdqa	%xmm0, %xmm1
    00001cc9: 	psrldq	$0x8, %xmm1
    00001cce: 	paddw	%xmm1, %xmm0
    00001cd2: 	movdqa	%xmm0, %xmm1
    00001cd6: 	psrldq	$0x4, %xmm1
    00001cdb: 	paddw	%xmm1, %xmm0
    00001cdf: 	movdqa	%xmm0, %xmm1
    00001ce3: 	psrldq	$0x2, %xmm1
    00001ce8: 	paddw	%xmm1, %xmm0
    00001cec: 	pextrw	$0x0, %xmm0, %eax
    00001cf1: 	movw	%ax, 0x8c(%rsp)
    00001cf9: 	cmpw	%ax, %dx
    00001cfc: 	je	.Ltmp4710 # Offset: 7420
    00001cfe: 	movq	0x100(%rsp), %rdx
    00001d06: 	movq	%r14, %rsi
    00001d09: 	movl	$0x1, %edi
    00001d0e: 	xorl	%eax, %eax
    00001d10: 	callq	__printf_chk@PLT # Offset: 7440
    00001d15: 	movl	iterations(%rip), %ecx
.Ltmp4710:
    00001d1b: 	addl	$0x1, %r12d
    00001d1f: 	cmpl	%ecx, %r12d
    00001d22: 	jl	.Ltmp4711 # Offset: 7458
.Ltmp4708:
    00001d28: 	movq	%rbp, %rsi
    00001d2b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d32: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7474
    00001d37: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d3e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d45: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d4c: 	je	.Ltmp4712 # Offset: 7500
.Ltmp4781:
    00001d52: 	movq	-0x20(%rax), %r12
    00001d56: 	callq	clock@PLT # Offset: 7510
    00001d5b: 	pxor	%xmm0, %xmm0
    00001d5f: 	movq	%rax, end_time(%rip)
    00001d66: 	movq	%r12, %rdi
    00001d69: 	subq	start_time(%rip), %rax
    00001d70: 	cvtsi2sd	%rax, %xmm0
    00001d75: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d7d: 	callq	_Z13record_resultdPKc # Offset: 7549
    00001d82: 	movq	0x100(%rsp), %rdi
    00001d8a: 	cmpq	%rbx, %rdi
    00001d8d: 	je	.Ltmp4713 # Offset: 7565
    00001d8f: 	movq	0x110(%rsp), %rax
    00001d97: 	leaq	0x1(%rax), %rsi
    00001d9b: 	callq	_ZdlPvm@PLT # Offset: 7579
.Ltmp4713:
    00001da0: 	movq	0x30(%rsp), %rsi
    00001da5: 	leaq	DATAat0x3d430(%rip), %rdx
    00001dac: 	movq	%rbp, %rdi
    00001daf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7599
    00001db4: 	movl	(%rsp), %edx
    00001db7: 	movq	%rbp, %rcx
    00001dba: 	movl	$0x1f40, %esi
    00001dbf: 	movq	%r13, %rdi
    00001dc2: 	callq	_Z23test_array_const_in_optItEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7618
    00001dc7: 	movq	0x100(%rsp), %rdi
    00001dcf: 	cmpq	%rbx, %rdi
    00001dd2: 	je	.Ltmp4714 # Offset: 7634
    00001dd4: 	movq	0x110(%rsp), %rax
    00001ddc: 	leaq	0x1(%rax), %rsi
    00001de0: 	callq	_ZdlPvm@PLT # Offset: 7648
.Ltmp4714:
    00001de5: 	movq	0x30(%rsp), %rsi
    00001dea: 	leaq	DATAat0x3d448(%rip), %rdx
    00001df1: 	movq	%rbp, %rdi
    00001df4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7668
    00001df9: 	callq	clock@PLT # Offset: 7673
    00001dfe: 	movl	iterations(%rip), %r8d
    00001e05: 	movq	%rax, start_time(%rip)
    00001e0c: 	testl	%r8d, %r8d
    00001e0f: 	jle	.Ltmp4715 # Offset: 7695
    00001e11: 	movslq	(%rsp), %rax
    00001e15: 	xorl	%r12d, %r12d
    00001e18: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001e1f: 	leaq	(%r13,%rax,2), %r14
    00001e24: 	nopl	(%rax) # Size: 4
.Ltmp4769:
    00001e28: 	cvttsd2si	init_value(%rip), %eax
    00001e30: 	imulw	$0x1f40, (%r14), %dx
    00001e36: 	imulw	$0x1f40, %ax, %ax
    00001e3b: 	cmpw	%ax, %dx
    00001e3e: 	jne	.Ltmp4716 # Offset: 7742
.Ltmp4715:
    00001e44: 	movq	%rbp, %rsi
    00001e47: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e4e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7758
    00001e53: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e5a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e61: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e68: 	je	.Ltmp4717 # Offset: 7784
.Ltmp4771:
    00001e6e: 	movq	-0x20(%rax), %r12
    00001e72: 	callq	clock@PLT # Offset: 7794
    00001e77: 	pxor	%xmm0, %xmm0
    00001e7b: 	movq	%rax, end_time(%rip)
    00001e82: 	movq	%r12, %rdi
    00001e85: 	subq	start_time(%rip), %rax
    00001e8c: 	cvtsi2sd	%rax, %xmm0
    00001e91: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e99: 	callq	_Z13record_resultdPKc # Offset: 7833
    00001e9e: 	movq	0x100(%rsp), %rdi
    00001ea6: 	cmpq	%rbx, %rdi
    00001ea9: 	je	.Ltmp4718 # Offset: 7849
    00001eab: 	movq	0x110(%rsp), %rax
    00001eb3: 	leaq	0x1(%rax), %rsi
    00001eb7: 	callq	_ZdlPvm@PLT # Offset: 7863
.Ltmp4718:
    00001ebc: 	movq	0x30(%rsp), %rsi
    00001ec1: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001ec8: 	movq	%rbp, %rdi
    00001ecb: 	cvttsd2si	init_value(%rip), %r12d
    00001ed4: 	movw	%r12w, 0x8c(%rsp)
    00001edd: 	movw	%r12w, 0x80(%rsp)
    00001ee6: 	movw	%r12w, 0x98(%rsp)
    00001eef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7919
    00001ef4: 	movq	0x58(%rsp), %rdi
    00001ef9: 	movq	%rbp, %rdx
    00001efc: 	movl	$0x1f40, %esi
    00001f01: 	callq	_Z24test_struct_const_in_optIt13simple_structItEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7937
    00001f06: 	movq	0x100(%rsp), %rdi
    00001f0e: 	cmpq	%rbx, %rdi
    00001f11: 	je	.Ltmp4719 # Offset: 7953
    00001f13: 	movq	0x110(%rsp), %rax
    00001f1b: 	leaq	0x1(%rax), %rsi
    00001f1f: 	callq	_ZdlPvm@PLT # Offset: 7967
.Ltmp4719:
    00001f24: 	movq	0x30(%rsp), %rsi
    00001f29: 	leaq	DATAat0x3d475(%rip), %rdx
    00001f30: 	movq	%rbp, %rdi
    00001f33: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7987
    00001f38: 	callq	clock@PLT # Offset: 7992
    00001f3d: 	movl	iterations(%rip), %edi
    00001f43: 	movq	%rax, start_time(%rip)
    00001f4a: 	testl	%edi, %edi
    00001f4c: 	jle	.Ltmp4720 # Offset: 8012
    00001f4e: 	imulw	$0x1f40, %r12w, %r12w
    00001f54: 	xorl	%r14d, %r14d
    00001f57: 	leaq	DATAat0x3d1c8(%rip), %r15
.Ltmp4770:
    00001f5e: 	cvttsd2si	init_value(%rip), %eax
    00001f66: 	imulw	$0x1f40, %ax, %ax
    00001f6b: 	cmpw	%ax, %r12w
    00001f6f: 	jne	.Ltmp4721 # Offset: 8047
.Ltmp4720:
    00001f75: 	movq	%rbp, %rsi
    00001f78: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f7f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8063
    00001f84: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f8b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f92: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f99: 	je	.Ltmp4722 # Offset: 8089
.Ltmp4785:
    00001f9f: 	movq	-0x20(%rax), %r12
    00001fa3: 	callq	clock@PLT # Offset: 8099
    00001fa8: 	pxor	%xmm0, %xmm0
    00001fac: 	movq	%rax, end_time(%rip)
    00001fb3: 	movq	%r12, %rdi
    00001fb6: 	subq	start_time(%rip), %rax
    00001fbd: 	cvtsi2sd	%rax, %xmm0
    00001fc2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001fca: 	callq	_Z13record_resultdPKc # Offset: 8138
    00001fcf: 	movq	0x100(%rsp), %rdi
    00001fd7: 	cmpq	%rbx, %rdi
    00001fda: 	je	.Ltmp4723 # Offset: 8154
    00001fdc: 	movq	0x110(%rsp), %rax
    00001fe4: 	leaq	0x1(%rax), %rsi
    00001fe8: 	callq	_ZdlPvm@PLT # Offset: 8168
.Ltmp4723:
    00001fed: 	movq	0x30(%rsp), %rsi
    00001ff2: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001ff9: 	movq	%rbp, %rdi
    00001ffc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8188
    00002001: 	callq	clock@PLT # Offset: 8193
    00002006: 	movl	iterations(%rip), %esi
    0000200c: 	movq	%rax, start_time(%rip)
    00002013: 	testl	%esi, %esi
    00002015: 	jle	.Ltmp4724 # Offset: 8213
    00002017: 	movslq	(%rsp), %rax
    0000201b: 	movzwl	0x400e(%rsp), %edx
    00002023: 	movw	%dx, 0x120(%rsp,%rax,2)
.Ltmp4724:
    0000202b: 	movq	%rbp, %rsi
    0000202e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002035: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8245
    0000203a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002041: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002048: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000204f: 	je	.Ltmp4725 # Offset: 8271
.Ltmp4784:
    00002055: 	movq	-0x20(%rax), %r12
    00002059: 	callq	clock@PLT # Offset: 8281
    0000205e: 	pxor	%xmm0, %xmm0
    00002062: 	movq	%rax, end_time(%rip)
    00002069: 	movq	%r12, %rdi
    0000206c: 	subq	start_time(%rip), %rax
    00002073: 	cvtsi2sd	%rax, %xmm0
    00002078: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002080: 	callq	_Z13record_resultdPKc # Offset: 8320
    00002085: 	movq	0x100(%rsp), %rdi
    0000208d: 	cmpq	%rbx, %rdi
    00002090: 	je	.Ltmp4726 # Offset: 8336
    00002092: 	movq	0x110(%rsp), %rax
    0000209a: 	leaq	0x1(%rax), %rsi
    0000209e: 	callq	_ZdlPvm@PLT # Offset: 8350
.Ltmp4726:
    000020a3: 	movq	0x30(%rsp), %rsi
    000020a8: 	leaq	DATAat0x3d49d(%rip), %rdx
    000020af: 	movq	%rbp, %rdi
    000020b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8370
    000020b7: 	callq	clock@PLT # Offset: 8375
    000020bc: 	movl	iterations(%rip), %ecx
    000020c2: 	movq	%rax, start_time(%rip)
    000020c9: 	testl	%ecx, %ecx
    000020cb: 	jle	.Ltmp4727 # Offset: 8395
    000020cd: 	movslq	(%rsp), %r13
    000020d1: 	movzwl	0x400e(%rsp), %eax
    000020d9: 	movw	%ax, 0x120(%rsp,%r13,2)
.Ltmp4727:
    000020e2: 	movq	%rbp, %rsi
    000020e5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020ec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8428
    000020f1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020f8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000020ff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002106: 	je	.Ltmp4728 # Offset: 8454
.Ltmp4783:
    0000210c: 	movq	-0x20(%rax), %r12
    00002110: 	callq	clock@PLT # Offset: 8464
    00002115: 	pxor	%xmm0, %xmm0
    00002119: 	movq	%rax, end_time(%rip)
    00002120: 	movq	%r12, %rdi
    00002123: 	subq	start_time(%rip), %rax
    0000212a: 	cvtsi2sd	%rax, %xmm0
    0000212f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002137: 	callq	_Z13record_resultdPKc # Offset: 8503
    0000213c: 	movq	0x100(%rsp), %rdi
    00002144: 	cmpq	%rbx, %rdi
    00002147: 	je	.Ltmp4729 # Offset: 8519
    00002149: 	movq	0x110(%rsp), %rax
    00002151: 	leaq	0x1(%rax), %rsi
    00002155: 	callq	_ZdlPvm@PLT # Offset: 8533
.Ltmp4729:
    0000215a: 	movq	0x30(%rsp), %rsi
    0000215f: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00002166: 	movq	%rbp, %rdi
    00002169: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8553
    0000216e: 	callq	clock@PLT # Offset: 8558
    00002173: 	movl	iterations(%rip), %edx
    00002179: 	movq	%rax, start_time(%rip)
    00002180: 	testl	%edx, %edx
    00002182: 	jle	.Ltmp4730 # Offset: 8578
    00002184: 	movzwl	0x400e(%rsp), %eax
    0000218c: 	movw	%ax, 0x8c(%rsp)
.Ltmp4730:
    00002194: 	movq	%rbp, %rsi
    00002197: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000219e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8606
    000021a3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021aa: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021b1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021b8: 	je	.Ltmp4731 # Offset: 8632
.Ltmp4782:
    000021be: 	movq	-0x20(%rax), %r12
    000021c2: 	callq	clock@PLT # Offset: 8642
    000021c7: 	pxor	%xmm0, %xmm0
    000021cb: 	movq	%rax, end_time(%rip)
    000021d2: 	movq	%r12, %rdi
    000021d5: 	subq	start_time(%rip), %rax
    000021dc: 	cvtsi2sd	%rax, %xmm0
    000021e1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000021e9: 	callq	_Z13record_resultdPKc # Offset: 8681
    000021ee: 	movq	0x100(%rsp), %rdi
    000021f6: 	cmpq	%rbx, %rdi
    000021f9: 	je	.Ltmp4732 # Offset: 8697
    000021fb: 	movq	0x110(%rsp), %rax
    00002203: 	leaq	0x1(%rax), %rsi
    00002207: 	callq	_ZdlPvm@PLT # Offset: 8711
.Ltmp4732:
    0000220c: 	movq	0x30(%rsp), %rsi
    00002211: 	leaq	DATAat0x3d4c0(%rip), %rdx
    00002218: 	movq	%rbp, %rdi
    0000221b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8731
    00002220: 	callq	clock@PLT # Offset: 8736
    00002225: 	movq	%rax, start_time(%rip)
    0000222c: 	movl	iterations(%rip), %eax
    00002232: 	testl	%eax, %eax
    00002234: 	jle	.Ltmp4733 # Offset: 8756
    00002236: 	movzwl	0x400e(%rsp), %eax
    0000223e: 	movw	%ax, 0x8c(%rsp)
.Ltmp4733:
    00002246: 	movq	%rbp, %rsi
    00002249: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002250: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8784
    00002255: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000225c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002263: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000226a: 	je	.Ltmp4734 # Offset: 8810
.Ltmp4775:
    00002270: 	movq	-0x20(%rax), %r12
    00002274: 	callq	clock@PLT # Offset: 8820
    00002279: 	pxor	%xmm0, %xmm0
    0000227d: 	movq	%rax, end_time(%rip)
    00002284: 	movq	%r12, %rdi
    00002287: 	subq	start_time(%rip), %rax
    0000228e: 	cvtsi2sd	%rax, %xmm0
    00002293: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000229b: 	callq	_Z13record_resultdPKc # Offset: 8859
    000022a0: 	movq	0x100(%rsp), %rdi
    000022a8: 	cmpq	%rbx, %rdi
    000022ab: 	je	.Ltmp4735 # Offset: 8875
    000022ad: 	movq	0x110(%rsp), %rax
    000022b5: 	leaq	0x1(%rax), %rsi
    000022b9: 	callq	_ZdlPvm@PLT # Offset: 8889
.Ltmp4735:
    000022be: 	movq	0x30(%rsp), %r15
    000022c3: 	leaq	0xe0(%rsp), %rdi
    000022cb: 	leaq	DATAat0x3d4d0(%rip), %rdx
    000022d2: 	movq	%r15, %rsi
    000022d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8917
    000022da: 	movl	iterations(%rip), %edx
    000022e0: 	xorl	%r8d, %r8d
    000022e3: 	xorl	%ecx, %ecx
    000022e5: 	movl	$0x1f40, %esi
    000022ea: 	movq	0xe0(%rsp), %rdi
    000022f2: 	callq	_Z9summarizePKciiii # Offset: 8946
    000022f7: 	movsd	DATAat0x3d708(%rip), %xmm0
    000022ff: 	leaq	DATAat0x3d4e7(%rip), %rdx
    00002306: 	movq	%r15, %rsi
    00002309: 	movq	%rbp, %rdi
    0000230c: 	addsd	init_value(%rip), %xmm0
    00002314: 	cvttsd2si	%xmm0, %r14d
    00002319: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8985
    0000231e: 	callq	clock@PLT # Offset: 8990
    00002323: 	movl	iterations(%rip), %r13d
    0000232a: 	movzwl	%r14w, %r14d
    0000232e: 	movq	%rax, start_time(%rip)
    00002335: 	testl	%r13d, %r13d
    00002338: 	jle	.Ltmp4736 # Offset: 9016
    0000233e: 	pxor	%xmm7, %xmm7
    00002342: 	xorl	%r12d, %r12d
    00002345: 	leaq	DATAat0x3d1c8(%rip), %r15
    0000234c: 	cvtsi2sd	%r14d, %xmm7
    00002351: 	movsd	%xmm7, (%rsp)
    00002356: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4738:
    00002360: 	movq	DATAat0x3d6b8(%rip), %rax
    00002367: 	movsd	(%rsp), %xmm0
    0000236c: 	movq	%rax, %xmm1
    00002371: 	callq	pow@PLT # Offset: 9073
    00002376: 	movq	DATAat0x3d6b8(%rip), %rax
    0000237d: 	movsd	%xmm0, 0x18(%rsp)
    00002383: 	movsd	(%rsp), %xmm0
    00002388: 	movq	%rax, %xmm1
    0000238d: 	callq	pow@PLT # Offset: 9101
    00002392: 	movsd	0x18(%rsp), %xmm2
    00002398: 	cvttsd2si	%xmm0, %eax
    0000239c: 	cvttsd2si	%xmm2, %edx
    000023a0: 	imulw	$0x1f40, %ax, %ax
    000023a5: 	imulw	$0x1f40, %dx, %dx
    000023aa: 	cmpw	%ax, %dx
    000023ad: 	je	.Ltmp4737 # Offset: 9133
    000023af: 	movq	0x100(%rsp), %rdx
    000023b7: 	movq	%r15, %rsi
    000023ba: 	movl	$0x1, %edi
    000023bf: 	xorl	%eax, %eax
    000023c1: 	callq	__printf_chk@PLT # Offset: 9153
    000023c6: 	movl	iterations(%rip), %r13d
.Ltmp4737:
    000023cd: 	addl	$0x1, %r12d
    000023d1: 	cmpl	%r13d, %r12d
    000023d4: 	jl	.Ltmp4738 # Offset: 9172
.Ltmp4736:
    000023d6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000023dd: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000023e4: 	subq	$0x20, %rax
    000023e8: 	cmpq	%rax, %r13
    000023eb: 	je	.Ltmp4739 # Offset: 9195
    000023f1: 	leaq	0x10(%r13), %rdi
    000023f5: 	movq	0x108(%rsp), %r12
    000023fd: 	movq	%rdi, (%r13)
    00002401: 	movq	0x100(%rsp), %r15
    00002409: 	movq	%r15, %rax
    0000240c: 	addq	%r12, %rax
    0000240f: 	je	.Ltmp4740 # Offset: 9231
    00002411: 	testq	%r15, %r15
    00002414: 	je	.Ltmp4741 # Offset: 9236
.Ltmp4740:
    0000241a: 	movq	%r12, 0x78(%rsp)
    0000241f: 	cmpq	$0xf, %r12
    00002423: 	ja	.Ltmp4742 # Offset: 9251
    00002429: 	cmpq	$0x1, %r12
    0000242d: 	jne	.Ltmp4743 # Offset: 9261
    00002433: 	movzbl	(%r15), %eax
    00002437: 	movb	%al, 0x10(%r13)
.Ltmp4803:
    0000243b: 	movq	%r12, 0x8(%r13)
    0000243f: 	movb	$0x0, (%rdi,%r12)
    00002444: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000244b: 	addq	$0x20, %rax
    0000244f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp4774:
    00002456: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000245d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002464: 	je	.Ltmp4744 # Offset: 9316
.Ltmp4773:
    0000246a: 	movq	-0x20(%rax), %r12
    0000246e: 	callq	clock@PLT # Offset: 9326
    00002473: 	pxor	%xmm0, %xmm0
    00002477: 	movq	%rax, end_time(%rip)
    0000247e: 	movq	%r12, %rdi
    00002481: 	subq	start_time(%rip), %rax
    00002488: 	cvtsi2sd	%rax, %xmm0
    0000248d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002495: 	callq	_Z13record_resultdPKc # Offset: 9365
    0000249a: 	movq	0x100(%rsp), %rdi
    000024a2: 	cmpq	%rbx, %rdi
    000024a5: 	je	.Ltmp4745 # Offset: 9381
    000024a7: 	movq	0x110(%rsp), %rax
    000024af: 	leaq	0x1(%rax), %rsi
    000024b3: 	callq	_ZdlPvm@PLT # Offset: 9395
.Ltmp4745:
    000024b8: 	movq	0x30(%rsp), %rsi
    000024bd: 	leaq	DATAat0x3d501(%rip), %rdx
    000024c4: 	movq	%rbp, %rdi
    000024c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9415
    000024cc: 	leaq	_Z10test_powerItET_S0_(%rip), %r12
    000024d3: 	movq	%rbp, %rcx
    000024d6: 	movl	%r14d, %esi
    000024d9: 	movl	$0x1f40, %edi
    000024de: 	movq	%r12, %rdx
    000024e1: 	callq	"_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9441
    000024e6: 	movq	0x100(%rsp), %rdi
    000024ee: 	cmpq	%rbx, %rdi
    000024f1: 	je	.Ltmp4746 # Offset: 9457
    000024f3: 	movq	0x110(%rsp), %rax
    000024fb: 	leaq	0x1(%rax), %rsi
    000024ff: 	callq	_ZdlPvm@PLT # Offset: 9471
.Ltmp4746:
    00002504: 	movq	0x30(%rsp), %rsi
    00002509: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002510: 	movq	%rbp, %rdi
    00002513: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9491
    00002518: 	movq	%rbp, %rcx
    0000251b: 	movq	%r12, %rdx
    0000251e: 	movl	%r14d, %esi
    00002521: 	movl	$0x1f40, %edi
    00002526: 	callq	"_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9510
    0000252b: 	movq	0x100(%rsp), %rdi
    00002533: 	cmpq	%rbx, %rdi
    00002536: 	je	.Ltmp4747 # Offset: 9526
    00002538: 	movq	0x110(%rsp), %rax
    00002540: 	leaq	0x1(%rax), %rsi
    00002544: 	callq	_ZdlPvm@PLT # Offset: 9540
.Ltmp4747:
    00002549: 	movq	0x30(%rsp), %rsi
    0000254e: 	leaq	DATAat0x3d535(%rip), %rdx
    00002555: 	movq	%rbp, %rdi
    00002558: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9560
    0000255d: 	callq	clock@PLT # Offset: 9565
    00002562: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00002569: 	movq	%rax, start_time(%rip)
    00002570: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002577: 	subq	$0x20, %rax
    0000257b: 	cmpq	%rax, %r13
    0000257e: 	je	.Ltmp4748 # Offset: 9598
    00002584: 	leaq	0x10(%r13), %rdi
    00002588: 	movq	0x108(%rsp), %r12
    00002590: 	movq	%rdi, (%r13)
    00002594: 	movq	0x100(%rsp), %r15
    0000259c: 	movq	%r15, %rax
    0000259f: 	addq	%r12, %rax
    000025a2: 	je	.Ltmp4749 # Offset: 9634
    000025a4: 	testq	%r15, %r15
    000025a7: 	je	.Ltmp4750 # Offset: 9639
.Ltmp4749:
    000025ad: 	movq	%r12, 0x78(%rsp)
    000025b2: 	cmpq	$0xf, %r12
    000025b6: 	ja	.Ltmp4751 # Offset: 9654
    000025bc: 	cmpq	$0x1, %r12
    000025c0: 	jne	.Ltmp4752 # Offset: 9664
    000025c6: 	movzbl	(%r15), %eax
    000025ca: 	movb	%al, 0x10(%r13)
.Ltmp4801:
    000025ce: 	movq	%r12, 0x8(%r13)
    000025d2: 	movb	$0x0, (%rdi,%r12)
    000025d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025e5: 	addq	$0x20, %rax
    000025e9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000025f0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000025f7: 	je	.Ltmp4753 # Offset: 9719
.Ltmp4772:
    000025fd: 	movq	-0x20(%rax), %r12
    00002601: 	callq	clock@PLT # Offset: 9729
    00002606: 	pxor	%xmm0, %xmm0
    0000260a: 	movq	%rax, end_time(%rip)
    00002611: 	movq	%r12, %rdi
    00002614: 	subq	start_time(%rip), %rax
    0000261b: 	cvtsi2sd	%rax, %xmm0
    00002620: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002628: 	callq	_Z13record_resultdPKc # Offset: 9768
    0000262d: 	movq	0x100(%rsp), %rdi
    00002635: 	cmpq	%rbx, %rdi
    00002638: 	je	.Ltmp4754 # Offset: 9784
    0000263a: 	movq	0x110(%rsp), %rax
    00002642: 	leaq	0x1(%rax), %rsi
    00002646: 	callq	_ZdlPvm@PLT # Offset: 9798
.Ltmp4754:
    0000264b: 	movq	0x30(%rsp), %rsi
    00002650: 	leaq	DATAat0x3d640(%rip), %rdx
    00002657: 	movq	%rbp, %rdi
    0000265a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9818
    0000265f: 	leaq	_Z8test_cosItET_S0_(%rip), %r12
    00002666: 	movq	%rbp, %rcx
    00002669: 	movl	%r14d, %esi
    0000266c: 	movl	$0x1f40, %edi
    00002671: 	movq	%r12, %rdx
    00002674: 	callq	"_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9844
    00002679: 	movq	0x100(%rsp), %rdi
    00002681: 	cmpq	%rbx, %rdi
    00002684: 	je	.Ltmp4755 # Offset: 9860
    00002686: 	movq	0x110(%rsp), %rax
    0000268e: 	leaq	0x1(%rax), %rsi
    00002692: 	callq	_ZdlPvm@PLT # Offset: 9874
.Ltmp4755:
    00002697: 	movq	0x30(%rsp), %rsi
    0000269c: 	leaq	DATAat0x3d550(%rip), %rdx
    000026a3: 	movq	%rbp, %rdi
    000026a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9894
    000026ab: 	movq	%rbp, %rcx
    000026ae: 	movq	%r12, %rdx
    000026b1: 	movl	%r14d, %esi
    000026b4: 	movl	$0x1f40, %edi
    000026b9: 	callq	"_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9913
    000026be: 	movq	0x100(%rsp), %rdi
    000026c6: 	cmpq	%rbx, %rdi
    000026c9: 	je	.Ltmp4756 # Offset: 9929
    000026cb: 	movq	0x110(%rsp), %rax
    000026d3: 	leaq	0x1(%rax), %rsi
    000026d7: 	callq	_ZdlPvm@PLT # Offset: 9943
.Ltmp4756:
    000026dc: 	movq	0x30(%rsp), %rsi
    000026e1: 	leaq	DATAat0x3d567(%rip), %rdx
    000026e8: 	movq	%rbp, %rdi
    000026eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9963
    000026f0: 	leaq	_Z8test_sqrItET_S0_(%rip), %r12
    000026f7: 	movq	%rbp, %rdx
    000026fa: 	movl	%r14d, %edi
    000026fd: 	movq	%r12, %rsi
    00002700: 	callq	"_Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 9984
    00002705: 	movq	0x100(%rsp), %rdi
    0000270d: 	cmpq	%rbx, %rdi
    00002710: 	je	.Ltmp4757 # Offset: 10000
    00002712: 	movq	0x110(%rsp), %rax
    0000271a: 	leaq	0x1(%rax), %rsi
    0000271e: 	callq	_ZdlPvm@PLT # Offset: 10014
.Ltmp4757:
    00002723: 	movq	0x30(%rsp), %rsi
    00002728: 	leaq	DATAat0x3d660(%rip), %rdx
    0000272f: 	movq	%rbp, %rdi
    00002732: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10034
    00002737: 	movq	%rbp, %rcx
    0000273a: 	movq	%r12, %rdx
    0000273d: 	movl	%r14d, %esi
    00002740: 	movl	$0x1f40, %edi
    00002745: 	callq	"_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10053
    0000274a: 	movq	0x100(%rsp), %rdi
    00002752: 	cmpq	%rbx, %rdi
    00002755: 	je	.Ltmp4758 # Offset: 10069
    00002757: 	movq	0x110(%rsp), %rax
    0000275f: 	leaq	0x1(%rax), %rsi
    00002763: 	callq	_ZdlPvm@PLT # Offset: 10083
.Ltmp4758:
    00002768: 	movq	0x30(%rsp), %rsi
    0000276d: 	leaq	DATAat0x3d582(%rip), %rdx
    00002774: 	movq	%rbp, %rdi
    00002777: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10103
    0000277c: 	movq	%rbp, %rcx
    0000277f: 	movq	%r12, %rdx
    00002782: 	movl	%r14d, %esi
    00002785: 	movl	$0x1f40, %edi
    0000278a: 	callq	"_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10122
    0000278f: 	movq	0x100(%rsp), %rdi
    00002797: 	cmpq	%rbx, %rdi
    0000279a: 	je	.Ltmp4759 # Offset: 10138
    0000279c: 	movq	0x110(%rsp), %rax
    000027a4: 	leaq	0x1(%rax), %rsi
    000027a8: 	callq	_ZdlPvm@PLT # Offset: 10152
.Ltmp4759:
    000027ad: 	movq	0x30(%rsp), %rsi
    000027b2: 	leaq	DATAat0x3d599(%rip), %rdx
    000027b9: 	movq	%rbp, %rdi
    000027bc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10172
    000027c1: 	leaq	_Z9test_hashItET_S0_(%rip), %r12
    000027c8: 	movq	%rbp, %rdx
    000027cb: 	movl	%r14d, %edi
    000027ce: 	movq	%r12, %rsi
    000027d1: 	callq	"_Z23test_const_function_optItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10193
    000027d6: 	movq	0x100(%rsp), %rdi
    000027de: 	cmpq	%rbx, %rdi
    000027e1: 	je	.Ltmp4760 # Offset: 10209
    000027e3: 	movq	0x110(%rsp), %rax
    000027eb: 	leaq	0x1(%rax), %rsi
    000027ef: 	callq	_ZdlPvm@PLT # Offset: 10223
.Ltmp4760:
    000027f4: 	movq	0x30(%rsp), %rsi
    000027f9: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002800: 	movq	%rbp, %rdi
    00002803: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10243
    00002808: 	movq	%rbp, %rcx
    0000280b: 	movq	%r12, %rdx
    0000280e: 	movl	%r14d, %esi
    00002811: 	movl	$0x1f40, %edi
    00002816: 	callq	"_Z27test_const_function_halfoptItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10262
    0000281b: 	movq	0x100(%rsp), %rdi
    00002823: 	cmpq	%rbx, %rdi
    00002826: 	je	.Ltmp4761 # Offset: 10278
    00002828: 	movq	0x110(%rsp), %rax
    00002830: 	leaq	0x1(%rax), %rsi
    00002834: 	callq	_ZdlPvm@PLT # Offset: 10292
.Ltmp4761:
    00002839: 	movq	0x30(%rsp), %rsi
    0000283e: 	leaq	DATAat0x3d5cf(%rip), %rdx
    00002845: 	movq	%rbp, %rdi
    00002848: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10312
    0000284d: 	movq	%rbp, %rcx
    00002850: 	movq	%r12, %rdx
    00002853: 	movl	%r14d, %esi
    00002856: 	movl	$0x1f40, %edi
    0000285b: 	callq	"_Z19test_const_functionItPFttEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 10331
    00002860: 	movq	0x100(%rsp), %rdi
    00002868: 	cmpq	%rbx, %rdi
    0000286b: 	je	.Ltmp4762 # Offset: 10347
    0000286d: 	movq	0x110(%rsp), %rax
    00002875: 	leaq	0x1(%rax), %rsi
    00002879: 	callq	_ZdlPvm@PLT # Offset: 10361
.Ltmp4762:
    0000287e: 	movq	0x30(%rsp), %rsi
    00002883: 	leaq	DATAat0x3d5e4(%rip), %rdx
    0000288a: 	movq	%rbp, %rdi
    0000288d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10381
    00002892: 	movl	iterations(%rip), %edx
    00002898: 	xorl	%r8d, %r8d
    0000289b: 	xorl	%ecx, %ecx
    0000289d: 	movl	$0x1f40, %esi
    000028a2: 	movq	0x100(%rsp), %rdi
    000028aa: 	callq	_Z9summarizePKciiii # Offset: 10410
    000028af: 	movq	0x100(%rsp), %rdi
    000028b7: 	cmpq	%rbx, %rdi
    000028ba: 	je	.Ltmp4763 # Offset: 10426
    000028bc: 	movq	0x110(%rsp), %rax
    000028c4: 	leaq	0x1(%rax), %rsi
    000028c8: 	callq	_ZdlPvm@PLT # Offset: 10440
.Ltmp4763:
    000028cd: 	movq	0xe0(%rsp), %rdi
    000028d5: 	leaq	0xf0(%rsp), %rax
    000028dd: 	cmpq	%rax, %rdi
    000028e0: 	je	.Ltmp4764 # Offset: 10464
    000028e2: 	movq	0xf0(%rsp), %rax
    000028ea: 	leaq	0x1(%rax), %rsi
    000028ee: 	callq	_ZdlPvm@PLT # Offset: 10478
.Ltmp4764:
    000028f3: 	movq	0xc0(%rsp), %rdi
    000028fb: 	leaq	0xd0(%rsp), %rax
    00002903: 	cmpq	%rax, %rdi
    00002906: 	je	.Ltmp4765 # Offset: 10502
    00002908: 	movq	0xd0(%rsp), %rax
    00002910: 	leaq	0x1(%rax), %rsi
    00002914: 	callq	_ZdlPvm@PLT # Offset: 10516
.Ltmp4765:
    00002919: 	movq	0xa0(%rsp), %rdi
    00002921: 	cmpq	0x60(%rsp), %rdi
    00002926: 	je	.Ltmp4766 # Offset: 10534
    00002928: 	movq	0xb0(%rsp), %rax
    00002930: 	leaq	0x1(%rax), %rsi
    00002934: 	callq	_ZdlPvm@PLT # Offset: 10548
.Ltmp4766:
    00002939: 	movq	0x4018(%rsp), %rax
    00002941: 	subq	%fs:0x28, %rax
    0000294a: 	jne	.Ltmp4767 # Offset: 10570
    00002950: 	addq	$0x4028, %rsp
    00002957: 	popq	%rbx
    00002958: 	popq	%rbp
    00002959: 	popq	%r12
    0000295b: 	popq	%r13
    0000295d: 	popq	%r14
    0000295f: 	popq	%r15
    00002961: 	retq # Offset: 10593
.Ltmp4661:
    00002962: 	movq	0x58(%rsp), %rsi
    00002967: 	xorl	%edx, %edx
    00002969: 	movq	%rbp, %rdi
    0000296c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10604
    00002971: 	movq	%rax, (%rbp)
    00002975: 	movq	%rax, %rdi
    00002978: 	movq	0x80(%rsp), %rax
    00002980: 	movq	%rax, 0x10(%rbp)
.Ltmp4800:
    00002984: 	movq	0x20(%rsp), %rsi
    00002989: 	movq	%r12, %rdx
    0000298c: 	callq	memcpy@PLT # Offset: 10636
    00002991: 	movq	0x80(%rsp), %r12
    00002999: 	movq	(%rbp), %rdi
    0000299d: 	jmp	.Ltmp4768 # Offset: 10653
    000029a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4716:
    000029a8: 	movq	0x100(%rsp), %rdx
    000029b0: 	movq	%r15, %rsi
    000029b3: 	movl	$0x1, %edi
    000029b8: 	xorl	%eax, %eax
    000029ba: 	callq	__printf_chk@PLT # Offset: 10682
    000029bf: 	addl	$0x1, %r12d
    000029c3: 	cmpl	iterations(%rip), %r12d
    000029ca: 	jl	.Ltmp4769 # Offset: 10698
    000029d0: 	jmp	.Ltmp4715 # Offset: 10704
    000029d5: 	nopl	(%rax) # Size: 3
.Ltmp4721:
    000029d8: 	movq	0x100(%rsp), %rdx
    000029e0: 	movq	%r15, %rsi
    000029e3: 	movl	$0x1, %edi
    000029e8: 	xorl	%eax, %eax
    000029ea: 	callq	__printf_chk@PLT # Offset: 10730
    000029ef: 	addl	$0x1, %r14d
    000029f3: 	cmpl	%r14d, iterations(%rip)
    000029fa: 	jg	.Ltmp4770 # Offset: 10746
    00002a00: 	jmp	.Ltmp4720 # Offset: 10752
.Ltmp4717:
    00002a05: 	movq	-0x8(%rdx), %rax
    00002a09: 	addq	$0x200, %rax
    00002a0f: 	jmp	.Ltmp4771 # Offset: 10767
.Ltmp4748:
    00002a14: 	movq	%rbp, %rsi
    00002a17: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a1e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10782
    00002a23: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a2a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002a31: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a38: 	jne	.Ltmp4772 # Offset: 10808
.Ltmp4753:
    00002a3e: 	movq	-0x8(%rdx), %rax
    00002a42: 	addq	$0x200, %rax
    00002a48: 	jmp	.Ltmp4772 # Offset: 10824
.Ltmp4744:
    00002a4d: 	movq	-0x8(%rdx), %rax
    00002a51: 	addq	$0x200, %rax
    00002a57: 	jmp	.Ltmp4773 # Offset: 10839
.Ltmp4739:
    00002a5c: 	movq	%rbp, %rsi
    00002a5f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a66: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10854
    00002a6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a72: 	jmp	.Ltmp4774 # Offset: 10866
.Ltmp4734:
    00002a77: 	movq	-0x8(%rdx), %rax
    00002a7b: 	addq	$0x200, %rax
    00002a81: 	jmp	.Ltmp4775 # Offset: 10881
.Ltmp4652:
    00002a86: 	movq	-0x8(%rdx), %rax
    00002a8a: 	addq	$0x200, %rax
    00002a90: 	jmp	.Ltmp4776 # Offset: 10896
.Ltmp4646:
    00002a95: 	movq	-0x8(%rdx), %rax
    00002a99: 	addq	$0x200, %rax
    00002a9f: 	jmp	.Ltmp4777 # Offset: 10911
.Ltmp4640:
    00002aa4: 	movq	-0x8(%rdx), %rax
    00002aa8: 	addq	$0x200, %rax
    00002aae: 	jmp	.Ltmp4778 # Offset: 10926
.Ltmp4634:
    00002ab3: 	movq	-0x8(%rdx), %rax
    00002ab7: 	addq	$0x200, %rax
    00002abd: 	jmp	.Ltmp4779 # Offset: 10941
.Ltmp4658:
    00002ac2: 	movq	0x38(%rsp), %rsi
    00002ac7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ace: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10958
    00002ad3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002ada: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002ae1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002ae8: 	jne	.Ltmp4780 # Offset: 10984
.Ltmp4663:
    00002aee: 	movq	-0x8(%rdx), %rax
    00002af2: 	addq	$0x200, %rax
    00002af8: 	jmp	.Ltmp4780 # Offset: 11000
.Ltmp4712:
    00002afd: 	movq	-0x8(%rdx), %rax
    00002b01: 	addq	$0x200, %rax
    00002b07: 	jmp	.Ltmp4781 # Offset: 11015
.Ltmp4731:
    00002b0c: 	movq	-0x8(%rdx), %rax
    00002b10: 	addq	$0x200, %rax
    00002b16: 	jmp	.Ltmp4782 # Offset: 11030
.Ltmp4728:
    00002b1b: 	movq	-0x8(%rdx), %rax
    00002b1f: 	addq	$0x200, %rax
    00002b25: 	jmp	.Ltmp4783 # Offset: 11045
.Ltmp4725:
    00002b2a: 	movq	-0x8(%rdx), %rax
    00002b2e: 	addq	$0x200, %rax
    00002b34: 	jmp	.Ltmp4784 # Offset: 11060
.Ltmp4722:
    00002b39: 	movq	-0x8(%rdx), %rax
    00002b3d: 	addq	$0x200, %rax
    00002b43: 	jmp	.Ltmp4785 # Offset: 11075
.Ltmp4706:
    00002b48: 	movq	-0x8(%rdx), %rax
    00002b4c: 	addq	$0x200, %rax
    00002b52: 	jmp	.Ltmp4786 # Offset: 11090
.Ltmp4700:
    00002b57: 	movq	-0x8(%rdx), %rax
    00002b5b: 	addq	$0x200, %rax
    00002b61: 	jmp	.Ltmp4787 # Offset: 11105
.Ltmp4694:
    00002b66: 	movq	-0x8(%rdx), %rax
    00002b6a: 	addq	$0x200, %rax
    00002b70: 	jmp	.Ltmp4788 # Offset: 11120
.Ltmp4687:
    00002b75: 	movq	-0x8(%rdx), %rax
    00002b79: 	addq	$0x200, %rax
    00002b7f: 	jmp	.Ltmp4789 # Offset: 11135
.Ltmp4681:
    00002b84: 	movq	-0x8(%rdx), %rax
    00002b88: 	addq	$0x200, %rax
    00002b8e: 	jmp	.Ltmp4790 # Offset: 11150
.Ltmp4675:
    00002b93: 	movq	-0x8(%rdx), %rax
    00002b97: 	addq	$0x200, %rax
    00002b9d: 	jmp	.Ltmp4791 # Offset: 11165
.Ltmp4669:
    00002ba2: 	movq	-0x8(%rdx), %rax
    00002ba6: 	addq	$0x200, %rax
    00002bac: 	jmp	.Ltmp4792 # Offset: 11180
.Ltmp4628:
    00002bb1: 	movq	-0x8(%rdx), %rax
    00002bb5: 	addq	$0x200, %rax
    00002bbb: 	jmp	.Ltmp4793 # Offset: 11195
.Ltmp4622:
    00002bc0: 	movq	-0x8(%rdx), %rax
    00002bc4: 	addq	$0x200, %rax
    00002bca: 	jmp	.Ltmp4794 # Offset: 11210
.Ltmp4616:
    00002bcf: 	movq	-0x8(%rdx), %rax
    00002bd3: 	addq	$0x200, %rax
    00002bd9: 	jmp	.Ltmp4795 # Offset: 11225
.Ltmp4610:
    00002bde: 	movq	-0x8(%rdx), %rax
    00002be2: 	addq	$0x200, %rax
    00002be8: 	jmp	.Ltmp4796 # Offset: 11240
.Ltmp4604:
    00002bed: 	movq	-0x8(%rdx), %rax
    00002bf1: 	addq	$0x200, %rax
    00002bf7: 	jmp	.Ltmp4797 # Offset: 11255
.Ltmp4598:
    00002bfc: 	movq	-0x8(%rdx), %rax
    00002c00: 	addq	$0x200, %rax
    00002c06: 	jmp	.Ltmp4798 # Offset: 11270
.Ltmp4592:
    00002c0b: 	movq	-0x8(%rdx), %rax
    00002c0f: 	addq	$0x200, %rax
    00002c15: 	jmp	.Ltmp4799 # Offset: 11285
.Ltmp4662:
    00002c1a: 	testq	%r12, %r12
    00002c1d: 	je	.Ltmp4768 # Offset: 11293
    00002c23: 	jmp	.Ltmp4800 # Offset: 11299
    00002c28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp4752:
    00002c30: 	testq	%r12, %r12
    00002c33: 	je	.Ltmp4801 # Offset: 11315
    00002c39: 	jmp	.Ltmp4802 # Offset: 11321
    00002c3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4743:
    00002c40: 	testq	%r12, %r12
    00002c43: 	je	.Ltmp4803 # Offset: 11331
    00002c49: 	jmp	.Ltmp4804 # Offset: 11337
    00002c4b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4751:
    00002c50: 	leaq	0x78(%rsp), %rsi
    00002c55: 	xorl	%edx, %edx
    00002c57: 	movq	%r13, %rdi
    00002c5a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11354
    00002c5f: 	movq	%rax, (%r13)
    00002c63: 	movq	%rax, %rdi
    00002c66: 	movq	0x78(%rsp), %rax
    00002c6b: 	movq	%rax, 0x10(%r13)
.Ltmp4802:
    00002c6f: 	movq	%r12, %rdx
    00002c72: 	movq	%r15, %rsi
    00002c75: 	callq	memcpy@PLT # Offset: 11381
    00002c7a: 	movq	0x78(%rsp), %r12
    00002c7f: 	movq	(%r13), %rdi
    00002c83: 	jmp	.Ltmp4801 # Offset: 11395
.Ltmp4742:
    00002c88: 	leaq	0x78(%rsp), %rsi
    00002c8d: 	xorl	%edx, %edx
    00002c8f: 	movq	%r13, %rdi
    00002c92: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11410
    00002c97: 	movq	%rax, (%r13)
    00002c9b: 	movq	%rax, %rdi
    00002c9e: 	movq	0x78(%rsp), %rax
    00002ca3: 	movq	%rax, 0x10(%r13)
.Ltmp4804:
    00002ca7: 	movq	%r12, %rdx
    00002caa: 	movq	%r15, %rsi
    00002cad: 	callq	memcpy@PLT # Offset: 11437
    00002cb2: 	movq	0x78(%rsp), %r12
    00002cb7: 	movq	(%r13), %rdi
    00002cbb: 	jmp	.Ltmp4803 # Offset: 11451
.Ltmp4741:
    00002cc0: 	leaq	DATAat0x3d158(%rip), %rdi
    00002cc7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11463
.Ltmp4750:
    00002ccc: 	leaq	DATAat0x3d158(%rip), %rdi
    00002cd3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11475
.Ltmp4767:
    00002cd8: 	callq	__stack_chk_fail@PLT # Offset: 11480
.Ltmp4660:
    00002cdd: 	leaq	DATAat0x3d158(%rip), %rdi
    00002ce4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11492
    00002ce9: 	endbr64
.Ltmp4806:
    00002ced: 	movq	%rax, %rbp
    00002cf0: 	jmp	.Ltmp4805 # Offset: 11504
    00002cf2: 	endbr64
    00002cf6: 	jmp	.Ltmp4806 # Offset: 11510
    00002cf8: 	endbr64
    00002cfc: 	jmp	.Ltmp4806 # Offset: 11516
    00002cfe: 	endbr64
    00002d02: 	jmp	.Ltmp4806 # Offset: 11522
.Ltmp4805:
    00002d04: 	movq	0x120(%rsp), %rdi
    00002d0c: 	cmpq	0x40(%rsp), %rdi
    00002d11: 	je	.Ltmp4807 # Offset: 11537
.Ltmp4809:
    00002d13: 	movq	0x130(%rsp), %rax
    00002d1b: 	leaq	0x1(%rax), %rsi
    00002d1f: 	callq	_ZdlPvm@PLT # Offset: 11551
.Ltmp4807:
    00002d24: 	movq	0xa0(%rsp), %rdi
    00002d2c: 	cmpq	0x60(%rsp), %rdi
    00002d31: 	je	.Ltmp4808 # Offset: 11569
    00002d33: 	movq	0xb0(%rsp), %rax
    00002d3b: 	leaq	0x1(%rax), %rsi
    00002d3f: 	callq	_ZdlPvm@PLT # Offset: 11583
.Ltmp4808:
    00002d44: 	movq	%rbp, %rdi
    00002d47: 	callq	_Unwind_Resume@PLT # Offset: 11591
    00002d4c: 	endbr64
    00002d50: 	jmp	.Ltmp4806 # Offset: 11600
    00002d52: 	endbr64
    00002d56: 	jmp	.Ltmp4806 # Offset: 11606
    00002d58: 	endbr64
    00002d5c: 	movq	%rax, %rbp
    00002d5f: 	jmp	.Ltmp4807 # Offset: 11615
    00002d61: 	endbr64
    00002d65: 	jmp	.Ltmp4806 # Offset: 11621
    00002d67: 	endbr64
    00002d6b: 	jmp	.Ltmp4806 # Offset: 11627
    00002d6d: 	endbr64
    00002d71: 	jmp	.Ltmp4806 # Offset: 11633
    00002d76: 	endbr64
    00002d7a: 	jmp	.Ltmp4806 # Offset: 11642
    00002d7f: 	endbr64
    00002d83: 	movq	%rax, %rbp
    00002d86: 	movq	0x120(%rsp), %rdi
    00002d8e: 	leaq	0x130(%rsp), %rax
    00002d96: 	cmpq	%rax, %rdi
    00002d99: 	jne	.Ltmp4809 # Offset: 11673
    00002d9f: 	jmp	.Ltmp4807 # Offset: 11679
    00002da1: 	endbr64
    00002da5: 	jmp	.Ltmp4806 # Offset: 11685
    00002daa: 	endbr64
    00002dae: 	jmp	.Ltmp4806 # Offset: 11694
    00002db3: 	endbr64
    00002db7: 	jmp	.Ltmp4806 # Offset: 11703
    00002dbc: 	endbr64
.Ltmp4811:
    00002dc0: 	movq	%rax, %rbp
    00002dc3: 	jmp	.Ltmp4810 # Offset: 11715
    00002dc8: 	endbr64
    00002dcc: 	jmp	.Ltmp4811 # Offset: 11724
    00002dce: 	endbr64
    00002dd2: 	jmp	.Ltmp4811 # Offset: 11730
    00002dd4: 	endbr64
    00002dd8: 	jmp	.Ltmp4811 # Offset: 11736
    00002dda: 	endbr64
    00002dde: 	jmp	.Ltmp4811 # Offset: 11742
    00002de0: 	endbr64
.Ltmp4817:
    00002de4: 	movq	%rax, %rbp
    00002de7: 	jmp	.Ltmp4812 # Offset: 11751
    00002dec: 	endbr64
    00002df0: 	jmp	.Ltmp4811 # Offset: 11760
    00002df2: 	endbr64
    00002df6: 	movq	%rax, %rbp
    00002df9: 	jmp	.Ltmp4813 # Offset: 11769
    00002dfb: 	endbr64
    00002dff: 	jmp	.Ltmp4811 # Offset: 11775
.Ltmp4813:
    00002e01: 	movq	0x100(%rsp), %rdi
    00002e09: 	leaq	0x110(%rsp), %rax
    00002e11: 	cmpq	%rax, %rdi
    00002e14: 	je	.Ltmp4814 # Offset: 11796
.Ltmp4815:
    00002e16: 	movq	0x110(%rsp), %rax
    00002e1e: 	leaq	0x1(%rax), %rsi
    00002e22: 	callq	_ZdlPvm@PLT # Offset: 11810
.Ltmp4814:
    00002e27: 	movq	0xc0(%rsp), %rdi
    00002e2f: 	leaq	0xd0(%rsp), %rax
    00002e37: 	cmpq	%rax, %rdi
    00002e3a: 	je	.Ltmp4807 # Offset: 11834
    00002e40: 	movq	0xd0(%rsp), %rax
    00002e48: 	leaq	0x1(%rax), %rsi
    00002e4c: 	callq	_ZdlPvm@PLT # Offset: 11852
    00002e51: 	jmp	.Ltmp4807 # Offset: 11857
    00002e56: 	endbr64
    00002e5a: 	movq	%rax, %rbp
    00002e5d: 	jmp	.Ltmp4814 # Offset: 11869
.Ltmp4810:
    00002e5f: 	movq	0x100(%rsp), %rdi
    00002e67: 	cmpq	%rbx, %rdi
    00002e6a: 	jne	.Ltmp4815 # Offset: 11882
    00002e6c: 	jmp	.Ltmp4814 # Offset: 11884
    00002e6e: 	endbr64
    00002e72: 	jmp	.Ltmp4811 # Offset: 11890
    00002e77: 	endbr64
    00002e7b: 	jmp	.Ltmp4811 # Offset: 11899
    00002e80: 	endbr64
    00002e84: 	jmp	.Ltmp4811 # Offset: 11908
    00002e89: 	endbr64
    00002e8d: 	jmp	.Ltmp4806 # Offset: 11917
    00002e92: 	endbr64
    00002e96: 	movq	%rax, %rbp
    00002e99: 	jmp	.Ltmp4816 # Offset: 11929
    00002e9b: 	endbr64
    00002e9f: 	jmp	.Ltmp4817 # Offset: 11935
.Ltmp4812:
    00002ea4: 	movq	0x100(%rsp), %rdi
    00002eac: 	cmpq	%rbx, %rdi
    00002eaf: 	je	.Ltmp4816 # Offset: 11951
    00002eb1: 	movq	0x110(%rsp), %rax
    00002eb9: 	leaq	0x1(%rax), %rsi
    00002ebd: 	callq	_ZdlPvm@PLT # Offset: 11965
.Ltmp4816:
    00002ec2: 	movq	0xe0(%rsp), %rdi
    00002eca: 	leaq	0xf0(%rsp), %rax
    00002ed2: 	cmpq	%rax, %rdi
    00002ed5: 	je	.Ltmp4814 # Offset: 11989
    00002edb: 	movq	0xf0(%rsp), %rax
    00002ee3: 	leaq	0x1(%rax), %rsi
    00002ee7: 	callq	_ZdlPvm@PLT # Offset: 12007
    00002eec: 	jmp	.Ltmp4814 # Offset: 12012
    00002ef1: 	endbr64
    00002ef5: 	jmp	.Ltmp4817 # Offset: 12021
    00002efa: 	endbr64
    00002efe: 	jmp	.Ltmp4817 # Offset: 12030
    00002f03: 	endbr64
    00002f07: 	jmp	.Ltmp4817 # Offset: 12039
    00002f0c: 	endbr64
    00002f10: 	jmp	.Ltmp4817 # Offset: 12048
    00002f15: 	endbr64
    00002f19: 	jmp	.Ltmp4817 # Offset: 12057
    00002f1e: 	endbr64
    00002f22: 	jmp	.Ltmp4817 # Offset: 12066
    00002f27: 	endbr64
    00002f2b: 	jmp	.Ltmp4817 # Offset: 12075
    00002f30: 	endbr64
    00002f34: 	jmp	.Ltmp4806 # Offset: 12084
    00002f39: 	endbr64
    00002f3d: 	jmp	.Ltmp4817 # Offset: 12093
    00002f42: 	endbr64
    00002f46: 	jmp	.Ltmp4811 # Offset: 12102
    00002f4b: 	endbr64
    00002f4f: 	jmp	.Ltmp4817 # Offset: 12111
    00002f54: 	endbr64
    00002f58: 	jmp	.Ltmp4817 # Offset: 12120
    00002f5d: 	endbr64
    00002f61: 	jmp	.Ltmp4817 # Offset: 12129
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsItEvd"

Binary Function "_Z9TestLoopsIaEvd" after disassembly {
  Number      : 157
  State       : disassembled
  Address     : 0x367a0
  Size        : 0x2f7d
  MaxSize     : 0x2f80
  Offset      : 0x367a0
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIaEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0156:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0xb8, %rsp
    0000002d: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    00000035: 	movl	$0x745f, %r9d
    0000003b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000042: 	movsd	%xmm0, (%rsp)
    00000047: 	leaq	0x160(%rsp), %rbp
    0000004f: 	leaq	0x100(%rsp), %r14
    00000057: 	movq	%fs:0x28, %rax
    00000060: 	movq	%rax, 0x20a8(%rsp)
    00000068: 	xorl	%eax, %eax
    0000006a: 	leaq	0xb0(%rsp), %rax
    00000072: 	movaps	%xmm6, 0x80(%rsp)
    0000007a: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm6
    00000082: 	movq	%rax, 0x60(%rsp)
    00000087: 	movq	%rax, 0xa0(%rsp)
    0000008f: 	leaq	0x80(%rsp), %rax
    00000097: 	movq	%rax, %rsi
    0000009a: 	movq	%rax, 0x68(%rsp)
    0000009f: 	movl	$0x38746e69, 0xb0(%rsp)
    000000aa: 	movw	%r9w, 0xb4(%rsp)
    000000b3: 	movq	$0x6, 0xa8(%rsp)
    000000bf: 	movb	$0x0, 0xb6(%rsp)
    000000c7: 	movaps	%xmm6, 0x90(%rsp)
    000000cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 207
    000000d4: 	cvttsd2si	init_value(%rip), %eax
    000000dc: 	movsd	(%rsp), %xmm0
    000000e1: 	movq	%rbp, %rdi
    000000e4: 	movabsq	$0x101010101010101, %rdx
    000000ee: 	movl	$0x3e8, %ecx
    000000f3: 	movzbl	%al, %eax
    000000f6: 	imulq	%rdx, %rax
    000000fa: 	rep		stosq	%rax, %es:(%rdi)
    000000fd: 	cvttsd2si	%xmm0, %edi
    00000101: 	movl	%edi, %eax
    00000103: 	movl	%edi, %esi
    00000105: 	movl	%edi, 0x5c(%rsp)
    00000109: 	movl	%edi, %ebx
    0000010b: 	addl	%eax, %eax
    0000010d: 	addl	$0x2, %esi
    00000110: 	movb	%dil, 0x40(%rsp)
    00000115: 	movb	%al, 0x48(%rsp)
    00000119: 	movsbl	%al, %eax
    0000011c: 	movb	%sil, 0x4c(%rsp)
    00000121: 	cltd
    00000122: 	movsbl	%sil, %esi
    00000126: 	movl	%eax, 0x50(%rsp)
    0000012a: 	idivl	%esi
    0000012c: 	movl	%esi, 0x54(%rsp)
    00000130: 	leaq	DATAat0x3d273(%rip), %rdx
    00000137: 	addl	%edi, %eax
    00000139: 	movq	%r14, %rdi
    0000013c: 	movb	%al, 0x44(%rsp)
    00000140: 	leaq	0xa0(%rsp), %rax
    00000148: 	movq	%rax, %rsi
    0000014b: 	movq	%rax, 0x38(%rsp)
    00000150: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 336
    00000155: 	callq	clock@PLT # Offset: 341
    0000015a: 	movl	iterations(%rip), %ecx
    00000160: 	movsbl	%bl, %r15d
    00000164: 	xorl	%r12d, %r12d
    00000167: 	movq	%rax, start_time(%rip)
    0000016e: 	leaq	0x20a0(%rsp), %rbx
    00000176: 	testl	%ecx, %ecx
    00000178: 	jle	.Ltmp4818 # Offset: 376
    0000017e: 	movd	0x40(%rsp), %xmm0
    00000184: 	punpcklbw	%xmm0, %xmm0
    00000188: 	punpcklwd	%xmm0, %xmm0
    0000018c: 	pshufd	$0x0, %xmm0, %xmm7
    00000191: 	movaps	%xmm7, (%rsp)
    00000195: 	nopl	(%rax) # Size: 3
.Ltmp4821:
    00000198: 	movq	%rbp, %rax
    0000019b: 	pxor	%xmm0, %xmm0
    0000019f: 	nop # Size: 1
.Ltmp4819:
    000001a0: 	paddb	(%rsp), %xmm0
    000001a5: 	addq	$0x10, %rax
    000001a9: 	paddb	-0x10(%rax), %xmm0
    000001ae: 	cmpq	%rax, %rbx
    000001b1: 	jne	.Ltmp4819 # Offset: 433
    000001b3: 	movdqa	%xmm0, %xmm1
    000001b7: 	cvttsd2si	init_value(%rip), %edx
    000001bf: 	pxor	%xmm7, %xmm7
    000001c3: 	addb	0x40(%rsp), %dl
    000001c7: 	psrldq	$0x8, %xmm1
    000001cc: 	shll	$0x6, %edx
    000001cf: 	paddb	%xmm1, %xmm0
    000001d3: 	psadbw	%xmm7, %xmm0
    000001d7: 	movd	%xmm0, %eax
    000001db: 	cmpb	%al, %dl
    000001dd: 	je	.Ltmp4820 # Offset: 477
    000001df: 	movl	current_test(%rip), %edx
    000001e5: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000001ec: 	movl	$0x1, %edi
    000001f1: 	xorl	%eax, %eax
    000001f3: 	callq	__printf_chk@PLT # Offset: 499
    000001f8: 	movl	iterations(%rip), %ecx
.Ltmp4820:
    000001fe: 	addl	$0x1, %r12d
    00000202: 	cmpl	%ecx, %r12d
    00000205: 	jl	.Ltmp4821 # Offset: 517
.Ltmp4818:
    00000207: 	movq	%r14, %rsi
    0000020a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000211: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 529
    00000216: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000021d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000224: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022b: 	je	.Ltmp4822 # Offset: 555
.Ltmp5028:
    00000231: 	movq	-0x20(%rax), %r12
    00000235: 	callq	clock@PLT # Offset: 565
    0000023a: 	pxor	%xmm0, %xmm0
    0000023e: 	movq	%rax, end_time(%rip)
    00000245: 	movq	%r12, %rdi
    00000248: 	subq	start_time(%rip), %rax
    0000024f: 	cvtsi2sd	%rax, %xmm0
    00000254: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000025c: 	callq	_Z13record_resultdPKc # Offset: 604
    00000261: 	movq	0x100(%rsp), %rdi
    00000269: 	leaq	0x110(%rsp), %rax
    00000271: 	movq	%rax, 0x30(%rsp)
    00000276: 	cmpq	%rax, %rdi
    00000279: 	je	.Ltmp4823 # Offset: 633
    0000027b: 	movq	0x110(%rsp), %rax
    00000283: 	leaq	0x1(%rax), %rsi
    00000287: 	callq	_ZdlPvm@PLT # Offset: 647
.Ltmp4823:
    0000028c: 	movq	0x38(%rsp), %rsi
    00000291: 	leaq	DATAat0x3d281(%rip), %rdx
    00000298: 	movq	%r14, %rdi
    0000029b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 667
    000002a0: 	callq	clock@PLT # Offset: 672
    000002a5: 	movzbl	0x5c(%rsp), %r13d
    000002ab: 	xorl	%r12d, %r12d
    000002ae: 	movl	iterations(%rip), %ecx
    000002b4: 	movq	%rax, start_time(%rip)
    000002bb: 	leaq	0x20a0(%rsp), %rbx
    000002c3: 	shll	$0x6, %r13d
    000002c7: 	testl	%ecx, %ecx
    000002c9: 	jle	.Ltmp4824 # Offset: 713
    000002cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4827:
    000002d0: 	movq	%rbp, %rax
    000002d3: 	pxor	%xmm0, %xmm0
    000002d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4825:
    000002e0: 	paddb	(%rax), %xmm0
    000002e4: 	addq	$0x10, %rax
    000002e8: 	cmpq	%rbx, %rax
    000002eb: 	jne	.Ltmp4825 # Offset: 747
    000002ed: 	movdqa	%xmm0, %xmm1
    000002f1: 	cvttsd2si	init_value(%rip), %edx
    000002f9: 	addb	0x40(%rsp), %dl
    000002fd: 	psrldq	$0x8, %xmm1
    00000302: 	shll	$0x6, %edx
    00000305: 	paddb	%xmm1, %xmm0
    00000309: 	pxor	%xmm1, %xmm1
    0000030d: 	psadbw	%xmm1, %xmm0
    00000311: 	movd	%xmm0, %eax
    00000315: 	addl	%r13d, %eax
    00000318: 	cmpb	%dl, %al
    0000031a: 	je	.Ltmp4826 # Offset: 794
    0000031c: 	movl	current_test(%rip), %edx
    00000322: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000329: 	movl	$0x1, %edi
    0000032e: 	xorl	%eax, %eax
    00000330: 	callq	__printf_chk@PLT # Offset: 816
    00000335: 	movl	iterations(%rip), %ecx
.Ltmp4826:
    0000033b: 	addl	$0x1, %r12d
    0000033f: 	cmpl	%ecx, %r12d
    00000342: 	jl	.Ltmp4827 # Offset: 834
.Ltmp4824:
    00000344: 	movq	%r14, %rsi
    00000347: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000034e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 846
    00000353: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000035a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000361: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000368: 	je	.Ltmp4828 # Offset: 872
.Ltmp5027:
    0000036e: 	movq	-0x20(%rax), %r12
    00000372: 	callq	clock@PLT # Offset: 882
    00000377: 	pxor	%xmm0, %xmm0
    0000037b: 	movq	%rax, end_time(%rip)
    00000382: 	movq	%r12, %rdi
    00000385: 	subq	start_time(%rip), %rax
    0000038c: 	cvtsi2sd	%rax, %xmm0
    00000391: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000399: 	callq	_Z13record_resultdPKc # Offset: 921
    0000039e: 	movq	0x100(%rsp), %rdi
    000003a6: 	cmpq	0x30(%rsp), %rdi
    000003ab: 	je	.Ltmp4829 # Offset: 939
    000003ad: 	movq	0x110(%rsp), %rax
    000003b5: 	leaq	0x1(%rax), %rsi
    000003b9: 	callq	_ZdlPvm@PLT # Offset: 953
.Ltmp4829:
    000003be: 	movq	0x38(%rsp), %rsi
    000003c3: 	leaq	DATAat0x3d297(%rip), %rdx
    000003ca: 	movq	%r14, %rdi
    000003cd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 973
    000003d2: 	movsbl	0x44(%rsp), %eax
    000003d7: 	movl	%eax, 0x58(%rsp)
    000003db: 	callq	clock@PLT # Offset: 987
    000003e0: 	movl	iterations(%rip), %ecx
    000003e6: 	movq	%rax, start_time(%rip)
    000003ed: 	testl	%ecx, %ecx
    000003ef: 	jle	.Ltmp4830 # Offset: 1007
    000003f5: 	movzbl	0x48(%rsp), %r13d
    000003fb: 	addb	0x4c(%rsp), %r13b
    00000400: 	xorl	%r12d, %r12d
    00000403: 	leaq	0x20a0(%rsp), %rbx
    0000040b: 	addb	0x5c(%rsp), %r13b
    00000410: 	addb	0x44(%rsp), %r13b
    00000415: 	movd	%r13d, %xmm0
    0000041a: 	punpcklbw	%xmm0, %xmm0
    0000041e: 	punpcklwd	%xmm0, %xmm0
    00000422: 	pshufd	$0x0, %xmm0, %xmm6
    00000427: 	movaps	%xmm6, (%rsp)
    0000042b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4833:
    00000430: 	movq	%rbp, %rax
    00000433: 	pxor	%xmm0, %xmm0
    00000437: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4831:
    00000440: 	paddb	(%rsp), %xmm0
    00000445: 	addq	$0x10, %rax
    00000449: 	paddb	-0x10(%rax), %xmm0
    0000044e: 	cmpq	%rax, %rbx
    00000451: 	jne	.Ltmp4831 # Offset: 1105
    00000453: 	cvttsd2si	init_value(%rip), %edx
    0000045b: 	movdqa	%xmm0, %xmm1
    0000045f: 	pxor	%xmm6, %xmm6
    00000463: 	psrldq	$0x8, %xmm1
    00000468: 	paddb	%xmm1, %xmm0
    0000046c: 	psadbw	%xmm6, %xmm0
    00000470: 	addl	%r13d, %edx
    00000473: 	movd	%xmm0, %eax
    00000477: 	shll	$0x6, %edx
    0000047a: 	cmpb	%al, %dl
    0000047c: 	je	.Ltmp4832 # Offset: 1148
    0000047e: 	movl	current_test(%rip), %edx
    00000484: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000048b: 	movl	$0x1, %edi
    00000490: 	xorl	%eax, %eax
    00000492: 	callq	__printf_chk@PLT # Offset: 1170
    00000497: 	movl	iterations(%rip), %ecx
.Ltmp4832:
    0000049d: 	addl	$0x1, %r12d
    000004a1: 	cmpl	%ecx, %r12d
    000004a4: 	jl	.Ltmp4833 # Offset: 1188
.Ltmp4830:
    000004a6: 	movq	%r14, %rsi
    000004a9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1200
    000004b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004bc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004ca: 	je	.Ltmp4834 # Offset: 1226
.Ltmp5026:
    000004d0: 	movq	-0x20(%rax), %r12
    000004d4: 	callq	clock@PLT # Offset: 1236
    000004d9: 	pxor	%xmm0, %xmm0
    000004dd: 	movq	%rax, end_time(%rip)
    000004e4: 	movq	%r12, %rdi
    000004e7: 	subq	start_time(%rip), %rax
    000004ee: 	cvtsi2sd	%rax, %xmm0
    000004f3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000004fb: 	callq	_Z13record_resultdPKc # Offset: 1275
    00000500: 	movq	0x100(%rsp), %rdi
    00000508: 	cmpq	0x30(%rsp), %rdi
    0000050d: 	je	.Ltmp4835 # Offset: 1293
    0000050f: 	movq	0x110(%rsp), %rax
    00000517: 	leaq	0x1(%rax), %rsi
    0000051b: 	callq	_ZdlPvm@PLT # Offset: 1307
.Ltmp4835:
    00000520: 	movq	0x38(%rsp), %rsi
    00000525: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000052c: 	movq	%r14, %rdi
    0000052f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1327
    00000534: 	callq	clock@PLT # Offset: 1332
    00000539: 	movl	iterations(%rip), %ecx
    0000053f: 	xorl	%r12d, %r12d
    00000542: 	leaq	0x20a0(%rsp), %rbx
    0000054a: 	movq	%rax, start_time(%rip)
    00000551: 	testl	%ecx, %ecx
    00000553: 	jle	.Ltmp4836 # Offset: 1363
    00000559: 	movd	0x40(%rsp), %xmm0
    0000055f: 	movd	0x48(%rsp), %xmm1
    00000565: 	leaq	DATAat0x3d1d8(%rip), %r13
    0000056c: 	punpcklbw	%xmm0, %xmm0
    00000570: 	punpcklbw	%xmm1, %xmm1
    00000574: 	punpcklwd	%xmm0, %xmm0
    00000578: 	punpcklwd	%xmm1, %xmm1
    0000057c: 	pshufd	$0x0, %xmm0, %xmm7
    00000581: 	movd	0x4c(%rsp), %xmm0
    00000587: 	pshufd	$0x0, %xmm1, %xmm1
    0000058c: 	punpcklbw	%xmm0, %xmm0
    00000590: 	movdqa	%xmm1, %xmm6
    00000594: 	movaps	%xmm7, 0x10(%rsp)
    00000599: 	punpcklwd	%xmm0, %xmm0
    0000059d: 	pshufd	$0x0, %xmm0, %xmm0
    000005a2: 	paddb	%xmm0, %xmm6
    000005a6: 	movd	0x44(%rsp), %xmm0
    000005ac: 	punpcklbw	%xmm0, %xmm0
    000005b0: 	movaps	%xmm6, 0x20(%rsp)
    000005b5: 	punpcklwd	%xmm0, %xmm0
    000005b9: 	pshufd	$0x0, %xmm0, %xmm3
    000005be: 	movaps	%xmm3, (%rsp)
    000005c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4839:
    000005c8: 	movq	%rbp, %rax
    000005cb: 	pxor	%xmm0, %xmm0
    000005cf: 	nop # Size: 1
.Ltmp4837:
    000005d0: 	movdqa	(%rsp), %xmm1
    000005d5: 	paddb	0x10(%rsp), %xmm0
    000005db: 	addq	$0x10, %rax
    000005df: 	paddb	-0x10(%rax), %xmm1
    000005e4: 	paddb	0x20(%rsp), %xmm0
    000005ea: 	paddb	%xmm1, %xmm0
    000005ee: 	cmpq	%rbx, %rax
    000005f1: 	jne	.Ltmp4837 # Offset: 1521
    000005f3: 	movdqa	%xmm0, %xmm1
    000005f7: 	cvttsd2si	init_value(%rip), %edx
    000005ff: 	pxor	%xmm7, %xmm7
    00000603: 	addb	0x40(%rsp), %dl
    00000607: 	psrldq	$0x8, %xmm1
    0000060c: 	addb	0x48(%rsp), %dl
    00000610: 	addb	0x4c(%rsp), %dl
    00000614: 	paddb	%xmm1, %xmm0
    00000618: 	addb	0x44(%rsp), %dl
    0000061c: 	psadbw	%xmm7, %xmm0
    00000620: 	shll	$0x6, %edx
    00000623: 	movd	%xmm0, %eax
    00000627: 	cmpb	%al, %dl
    00000629: 	je	.Ltmp4838 # Offset: 1577
    0000062b: 	movl	current_test(%rip), %edx
    00000631: 	movq	%r13, %rsi
    00000634: 	movl	$0x1, %edi
    00000639: 	xorl	%eax, %eax
    0000063b: 	callq	__printf_chk@PLT # Offset: 1595
    00000640: 	movl	iterations(%rip), %ecx
.Ltmp4838:
    00000646: 	addl	$0x1, %r12d
    0000064a: 	cmpl	%ecx, %r12d
    0000064d: 	jl	.Ltmp4839 # Offset: 1613
.Ltmp4836:
    00000653: 	movq	%r14, %rsi
    00000656: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000065d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1629
    00000662: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000669: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000670: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000677: 	je	.Ltmp4840 # Offset: 1655
.Ltmp5025:
    0000067d: 	movq	-0x20(%rax), %r12
    00000681: 	callq	clock@PLT # Offset: 1665
    00000686: 	pxor	%xmm0, %xmm0
    0000068a: 	movq	%rax, end_time(%rip)
    00000691: 	movq	%r12, %rdi
    00000694: 	subq	start_time(%rip), %rax
    0000069b: 	cvtsi2sd	%rax, %xmm0
    000006a0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000006a8: 	callq	_Z13record_resultdPKc # Offset: 1704
    000006ad: 	movq	0x100(%rsp), %rdi
    000006b5: 	cmpq	0x30(%rsp), %rdi
    000006ba: 	je	.Ltmp4841 # Offset: 1722
    000006bc: 	movq	0x110(%rsp), %rax
    000006c4: 	leaq	0x1(%rax), %rsi
    000006c8: 	callq	_ZdlPvm@PLT # Offset: 1736
.Ltmp4841:
    000006cd: 	movq	0x38(%rsp), %rsi
    000006d2: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000006d9: 	movq	%r14, %rdi
    000006dc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1756
    000006e1: 	callq	clock@PLT # Offset: 1761
    000006e6: 	movl	iterations(%rip), %ecx
    000006ec: 	xorl	%r12d, %r12d
    000006ef: 	leaq	0x20a0(%rsp), %rbx
    000006f7: 	movq	%rax, start_time(%rip)
    000006fe: 	testl	%ecx, %ecx
    00000700: 	jle	.Ltmp4842 # Offset: 1792
    00000706: 	movd	0x40(%rsp), %xmm0
    0000070c: 	punpcklbw	%xmm0, %xmm0
    00000710: 	punpcklwd	%xmm0, %xmm0
    00000714: 	pshufd	$0x0, %xmm0, %xmm4
    00000719: 	movaps	%xmm4, (%rsp)
    0000071d: 	nopl	(%rax) # Size: 3
.Ltmp4845:
    00000720: 	movq	%rbp, %rax
    00000723: 	pxor	%xmm0, %xmm0
    00000727: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4843:
    00000730: 	psubb	(%rsp), %xmm0
    00000735: 	addq	$0x10, %rax
    00000739: 	paddb	-0x10(%rax), %xmm0
    0000073e: 	cmpq	%rbx, %rax
    00000741: 	jne	.Ltmp4843 # Offset: 1857
    00000743: 	movdqa	%xmm0, %xmm1
    00000747: 	cvttsd2si	init_value(%rip), %edx
    0000074f: 	pxor	%xmm5, %xmm5
    00000753: 	subb	0x40(%rsp), %dl
    00000757: 	psrldq	$0x8, %xmm1
    0000075c: 	shll	$0x6, %edx
    0000075f: 	paddb	%xmm1, %xmm0
    00000763: 	psadbw	%xmm5, %xmm0
    00000767: 	movd	%xmm0, %eax
    0000076b: 	cmpb	%al, %dl
    0000076d: 	je	.Ltmp4844 # Offset: 1901
    0000076f: 	movl	current_test(%rip), %edx
    00000775: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000077c: 	movl	$0x1, %edi
    00000781: 	xorl	%eax, %eax
    00000783: 	callq	__printf_chk@PLT # Offset: 1923
    00000788: 	movl	iterations(%rip), %ecx
.Ltmp4844:
    0000078e: 	addl	$0x1, %r12d
    00000792: 	cmpl	%ecx, %r12d
    00000795: 	jl	.Ltmp4845 # Offset: 1941
.Ltmp4842:
    00000797: 	movq	%r14, %rsi
    0000079a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000007a1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1953
    000007a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007ad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007bb: 	je	.Ltmp4846 # Offset: 1979
.Ltmp5024:
    000007c1: 	movq	-0x20(%rax), %r12
    000007c5: 	callq	clock@PLT # Offset: 1989
    000007ca: 	pxor	%xmm0, %xmm0
    000007ce: 	movq	%rax, end_time(%rip)
    000007d5: 	movq	%r12, %rdi
    000007d8: 	subq	start_time(%rip), %rax
    000007df: 	cvtsi2sd	%rax, %xmm0
    000007e4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000007ec: 	callq	_Z13record_resultdPKc # Offset: 2028
    000007f1: 	movq	0x100(%rsp), %rdi
    000007f9: 	cmpq	0x30(%rsp), %rdi
    000007fe: 	je	.Ltmp4847 # Offset: 2046
    00000800: 	movq	0x110(%rsp), %rax
    00000808: 	leaq	0x1(%rax), %rsi
    0000080c: 	callq	_ZdlPvm@PLT # Offset: 2060
.Ltmp4847:
    00000811: 	movq	0x38(%rsp), %rsi
    00000816: 	leaq	DATAat0x3d2db(%rip), %rdx
    0000081d: 	movq	%r14, %rdi
    00000820: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2080
    00000825: 	callq	clock@PLT # Offset: 2085
    0000082a: 	movl	iterations(%rip), %ecx
    00000830: 	movq	%rax, start_time(%rip)
    00000837: 	testl	%ecx, %ecx
    00000839: 	jle	.Ltmp4848 # Offset: 2105
    0000083f: 	movzbl	0x48(%rsp), %r13d
    00000845: 	addb	0x4c(%rsp), %r13b
    0000084a: 	xorl	%r12d, %r12d
    0000084d: 	leaq	0x20a0(%rsp), %rbx
    00000855: 	addb	0x5c(%rsp), %r13b
    0000085a: 	addb	0x44(%rsp), %r13b
    0000085f: 	movd	%r13d, %xmm0
    00000864: 	punpcklbw	%xmm0, %xmm0
    00000868: 	punpcklwd	%xmm0, %xmm0
    0000086c: 	pshufd	$0x0, %xmm0, %xmm5
    00000871: 	movaps	%xmm5, (%rsp)
    00000875: 	nopl	(%rax) # Size: 3
.Ltmp4851:
    00000878: 	movq	%rbp, %rax
    0000087b: 	pxor	%xmm0, %xmm0
    0000087f: 	nop # Size: 1
.Ltmp4849:
    00000880: 	psubb	(%rsp), %xmm0
    00000885: 	addq	$0x10, %rax
    00000889: 	paddb	-0x10(%rax), %xmm0
    0000088e: 	cmpq	%rax, %rbx
    00000891: 	jne	.Ltmp4849 # Offset: 2193
    00000893: 	cvttsd2si	init_value(%rip), %edx
    0000089b: 	movdqa	%xmm0, %xmm1
    0000089f: 	pxor	%xmm6, %xmm6
    000008a3: 	psrldq	$0x8, %xmm1
    000008a8: 	paddb	%xmm1, %xmm0
    000008ac: 	psadbw	%xmm6, %xmm0
    000008b0: 	subl	%r13d, %edx
    000008b3: 	movd	%xmm0, %eax
    000008b7: 	shll	$0x6, %edx
    000008ba: 	cmpb	%al, %dl
    000008bc: 	je	.Ltmp4850 # Offset: 2236
    000008be: 	movl	current_test(%rip), %edx
    000008c4: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000008cb: 	movl	$0x1, %edi
    000008d0: 	xorl	%eax, %eax
    000008d2: 	callq	__printf_chk@PLT # Offset: 2258
    000008d7: 	movl	iterations(%rip), %ecx
.Ltmp4850:
    000008dd: 	addl	$0x1, %r12d
    000008e1: 	cmpl	%ecx, %r12d
    000008e4: 	jl	.Ltmp4851 # Offset: 2276
.Ltmp4848:
    000008e6: 	movq	%r14, %rsi
    000008e9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008f0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2288
    000008f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000903: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000090a: 	je	.Ltmp4852 # Offset: 2314
.Ltmp5023:
    00000910: 	movq	-0x20(%rax), %r12
    00000914: 	callq	clock@PLT # Offset: 2324
    00000919: 	pxor	%xmm0, %xmm0
    0000091d: 	movq	%rax, end_time(%rip)
    00000924: 	movq	%r12, %rdi
    00000927: 	subq	start_time(%rip), %rax
    0000092e: 	cvtsi2sd	%rax, %xmm0
    00000933: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000093b: 	callq	_Z13record_resultdPKc # Offset: 2363
    00000940: 	movq	0x100(%rsp), %rdi
    00000948: 	cmpq	0x30(%rsp), %rdi
    0000094d: 	je	.Ltmp4853 # Offset: 2381
    0000094f: 	movq	0x110(%rsp), %rax
    00000957: 	leaq	0x1(%rax), %rsi
    0000095b: 	callq	_ZdlPvm@PLT # Offset: 2395
.Ltmp4853:
    00000960: 	movq	0x38(%rsp), %rsi
    00000965: 	leaq	DATAat0x3d2f8(%rip), %rdx
    0000096c: 	movq	%r14, %rdi
    0000096f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2415
    00000974: 	callq	clock@PLT # Offset: 2420
    00000979: 	movl	iterations(%rip), %ecx
    0000097f: 	xorl	%r12d, %r12d
    00000982: 	leaq	0x20a0(%rsp), %rbx
    0000098a: 	movq	%rax, start_time(%rip)
    00000991: 	testl	%ecx, %ecx
    00000993: 	jle	.Ltmp4854 # Offset: 2451
    00000999: 	movd	0x40(%rsp), %xmm0
    0000099f: 	movd	0x4c(%rsp), %xmm1
    000009a5: 	movd	0x44(%rsp), %xmm2
    000009ab: 	punpcklbw	%xmm0, %xmm0
    000009af: 	punpcklbw	%xmm1, %xmm1
    000009b3: 	punpcklbw	%xmm2, %xmm2
    000009b7: 	punpcklwd	%xmm0, %xmm0
    000009bb: 	punpcklwd	%xmm1, %xmm1
    000009bf: 	punpcklwd	%xmm2, %xmm2
    000009c3: 	pshufd	$0x0, %xmm0, %xmm6
    000009c8: 	movd	0x48(%rsp), %xmm0
    000009ce: 	pshufd	$0x0, %xmm1, %xmm1
    000009d3: 	punpcklbw	%xmm0, %xmm0
    000009d7: 	pshufd	$0x0, %xmm2, %xmm7
    000009dc: 	movaps	%xmm6, 0x10(%rsp)
    000009e1: 	leaq	DATAat0x3d1d8(%rip), %r13
    000009e8: 	punpcklwd	%xmm0, %xmm0
    000009ec: 	movaps	%xmm7, (%rsp)
    000009f0: 	pshufd	$0x0, %xmm0, %xmm0
    000009f5: 	paddb	%xmm0, %xmm1
    000009f9: 	movaps	%xmm1, 0x20(%rsp)
    000009fe: 	nop # Size: 2
.Ltmp4857:
    00000a00: 	movq	%rbp, %rax
    00000a03: 	pxor	%xmm0, %xmm0
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4855:
    00000a10: 	movdqa	(%rax), %xmm1
    00000a14: 	psubb	0x10(%rsp), %xmm0
    00000a1a: 	addq	$0x10, %rax
    00000a1e: 	psubb	0x20(%rsp), %xmm0
    00000a24: 	psubb	(%rsp), %xmm1
    00000a29: 	paddb	%xmm1, %xmm0
    00000a2d: 	cmpq	%rbx, %rax
    00000a30: 	jne	.Ltmp4855 # Offset: 2608
    00000a32: 	movdqa	%xmm0, %xmm1
    00000a36: 	cvttsd2si	init_value(%rip), %edx
    00000a3e: 	pxor	%xmm7, %xmm7
    00000a42: 	subb	0x40(%rsp), %dl
    00000a46: 	psrldq	$0x8, %xmm1
    00000a4b: 	subb	0x48(%rsp), %dl
    00000a4f: 	subb	0x4c(%rsp), %dl
    00000a53: 	paddb	%xmm1, %xmm0
    00000a57: 	subb	0x44(%rsp), %dl
    00000a5b: 	psadbw	%xmm7, %xmm0
    00000a5f: 	shll	$0x6, %edx
    00000a62: 	movd	%xmm0, %eax
    00000a66: 	cmpb	%al, %dl
    00000a68: 	je	.Ltmp4856 # Offset: 2664
    00000a6a: 	movl	current_test(%rip), %edx
    00000a70: 	movq	%r13, %rsi
    00000a73: 	movl	$0x1, %edi
    00000a78: 	xorl	%eax, %eax
    00000a7a: 	callq	__printf_chk@PLT # Offset: 2682
    00000a7f: 	movl	iterations(%rip), %ecx
.Ltmp4856:
    00000a85: 	addl	$0x1, %r12d
    00000a89: 	cmpl	%ecx, %r12d
    00000a8c: 	jl	.Ltmp4857 # Offset: 2700
.Ltmp4854:
    00000a92: 	movq	%r14, %rsi
    00000a95: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a9c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2716
    00000aa1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000aa8: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000aaf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ab6: 	je	.Ltmp4858 # Offset: 2742
.Ltmp5022:
    00000abc: 	movq	-0x20(%rax), %r12
    00000ac0: 	callq	clock@PLT # Offset: 2752
    00000ac5: 	pxor	%xmm0, %xmm0
    00000ac9: 	movq	%rax, end_time(%rip)
    00000ad0: 	movq	%r12, %rdi
    00000ad3: 	subq	start_time(%rip), %rax
    00000ada: 	cvtsi2sd	%rax, %xmm0
    00000adf: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000ae7: 	callq	_Z13record_resultdPKc # Offset: 2791
    00000aec: 	movq	0x100(%rsp), %rdi
    00000af4: 	cmpq	0x30(%rsp), %rdi
    00000af9: 	je	.Ltmp4859 # Offset: 2809
    00000afb: 	movq	0x110(%rsp), %rax
    00000b03: 	leaq	0x1(%rax), %rsi
    00000b07: 	callq	_ZdlPvm@PLT # Offset: 2823
.Ltmp4859:
    00000b0c: 	movq	0x38(%rsp), %rsi
    00000b11: 	leaq	DATAat0x3d316(%rip), %rdx
    00000b18: 	movq	%r14, %rdi
    00000b1b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2843
    00000b20: 	callq	clock@PLT # Offset: 2848
    00000b25: 	movl	iterations(%rip), %esi
    00000b2b: 	movq	%rax, start_time(%rip)
    00000b32: 	testl	%esi, %esi
    00000b34: 	jle	.Ltmp4860 # Offset: 2868
    00000b3a: 	movd	0x40(%rsp), %xmm0
    00000b40: 	movdqa	DATAat0x3d730(%rip), %xmm3
    00000b48: 	xorl	%r12d, %r12d
    00000b4b: 	leaq	0x20a0(%rsp), %rbx
    00000b53: 	punpcklbw	%xmm0, %xmm0
    00000b57: 	punpcklwd	%xmm0, %xmm0
    00000b5b: 	movaps	%xmm3, (%rsp)
    00000b5f: 	pshufd	$0x0, %xmm0, %xmm4
    00000b64: 	movdqa	%xmm4, %xmm6
    00000b68: 	movaps	%xmm4, 0x20(%rsp)
    00000b6d: 	punpcklbw	%xmm4, %xmm6
    00000b71: 	movaps	%xmm6, 0x10(%rsp)
    00000b76: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4863:
    00000b80: 	movdqa	0x20(%rsp), %xmm5
    00000b86: 	movq	%rbp, %rax
    00000b89: 	pxor	%xmm2, %xmm2
    00000b8d: 	movdqa	%xmm5, %xmm3
    00000b91: 	punpckhbw	%xmm5, %xmm3
    00000b95: 	nopl	(%rax) # Size: 3
.Ltmp4861:
    00000b98: 	movdqa	(%rax), %xmm0
    00000b9c: 	movdqa	(%rsp), %xmm4
    00000ba1: 	addq	$0x10, %rax
    00000ba5: 	movdqa	%xmm0, %xmm1
    00000ba9: 	punpcklbw	%xmm0, %xmm1
    00000bad: 	punpckhbw	%xmm0, %xmm0
    00000bb1: 	pmullw	0x10(%rsp), %xmm1
    00000bb7: 	pand	%xmm4, %xmm1
    00000bbb: 	pmullw	%xmm3, %xmm0
    00000bbf: 	pand	%xmm4, %xmm0
    00000bc3: 	packuswb	%xmm0, %xmm1
    00000bc7: 	paddb	%xmm1, %xmm2
    00000bcb: 	cmpq	%rbx, %rax
    00000bce: 	jne	.Ltmp4861 # Offset: 3022
    00000bd0: 	cvttsd2si	init_value(%rip), %ecx
    00000bd8: 	movzbl	0x40(%rsp), %eax
    00000bdd: 	movdqa	%xmm2, %xmm0
    00000be1: 	psrldq	$0x8, %xmm0
    00000be6: 	paddb	%xmm0, %xmm2
    00000bea: 	pxor	%xmm0, %xmm0
    00000bee: 	psadbw	%xmm0, %xmm2
    00000bf2: 	imull	%ecx, %eax
    00000bf5: 	movd	%xmm2, %edx
    00000bf9: 	shll	$0x6, %eax
    00000bfc: 	cmpb	%dl, %al
    00000bfe: 	je	.Ltmp4862 # Offset: 3070
    00000c00: 	movl	current_test(%rip), %edx
    00000c06: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000c0d: 	movl	$0x1, %edi
    00000c12: 	xorl	%eax, %eax
    00000c14: 	callq	__printf_chk@PLT # Offset: 3092
    00000c19: 	movl	iterations(%rip), %esi
.Ltmp4862:
    00000c1f: 	addl	$0x1, %r12d
    00000c23: 	cmpl	%esi, %r12d
    00000c26: 	jl	.Ltmp4863 # Offset: 3110
.Ltmp4860:
    00000c2c: 	movq	%r14, %rsi
    00000c2f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000c36: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3126
    00000c3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c42: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000c49: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c50: 	je	.Ltmp4864 # Offset: 3152
.Ltmp5021:
    00000c56: 	movq	-0x20(%rax), %r12
    00000c5a: 	callq	clock@PLT # Offset: 3162
    00000c5f: 	pxor	%xmm0, %xmm0
    00000c63: 	movq	%rax, end_time(%rip)
    00000c6a: 	movq	%r12, %rdi
    00000c6d: 	subq	start_time(%rip), %rax
    00000c74: 	cvtsi2sd	%rax, %xmm0
    00000c79: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000c81: 	callq	_Z13record_resultdPKc # Offset: 3201
    00000c86: 	movq	0x100(%rsp), %rdi
    00000c8e: 	cmpq	0x30(%rsp), %rdi
    00000c93: 	je	.Ltmp4865 # Offset: 3219
    00000c95: 	movq	0x110(%rsp), %rax
    00000c9d: 	leaq	0x1(%rax), %rsi
    00000ca1: 	callq	_ZdlPvm@PLT # Offset: 3233
.Ltmp4865:
    00000ca6: 	movq	0x38(%rsp), %rsi
    00000cab: 	leaq	DATAat0x3d329(%rip), %rdx
    00000cb2: 	movq	%r14, %rdi
    00000cb5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3253
    00000cba: 	callq	clock@PLT # Offset: 3258
    00000cbf: 	movl	iterations(%rip), %esi
    00000cc5: 	movq	%rax, start_time(%rip)
    00000ccc: 	testl	%esi, %esi
    00000cce: 	jle	.Ltmp4866 # Offset: 3278
    00000cd4: 	movzbl	0x48(%rsp), %eax
    00000cd9: 	mulb	0x4c(%rsp)
    00000cdd: 	xorl	%r12d, %r12d
    00000ce0: 	leaq	0x20a0(%rsp), %rbx
    00000ce8: 	mulb	0x5c(%rsp)
    00000cec: 	movdqa	DATAat0x3d730(%rip), %xmm5
    00000cf4: 	mulb	0x44(%rsp)
    00000cf8: 	movaps	%xmm5, (%rsp)
    00000cfc: 	movl	%eax, %r13d
    00000cff: 	movd	%r13d, %xmm0
    00000d04: 	punpcklbw	%xmm0, %xmm0
    00000d08: 	punpcklwd	%xmm0, %xmm0
    00000d0c: 	pshufd	$0x0, %xmm0, %xmm6
    00000d11: 	movaps	%xmm6, 0x20(%rsp)
    00000d16: 	punpcklbw	%xmm6, %xmm6
    00000d1a: 	movaps	%xmm6, 0x10(%rsp)
    00000d1f: 	nop # Size: 1
.Ltmp4869:
    00000d20: 	movdqa	0x20(%rsp), %xmm6
    00000d26: 	movq	%rbp, %rax
    00000d29: 	pxor	%xmm2, %xmm2
    00000d2d: 	movdqa	%xmm6, %xmm3
    00000d31: 	punpckhbw	%xmm6, %xmm3
    00000d35: 	nopl	(%rax) # Size: 3
.Ltmp4867:
    00000d38: 	movdqa	(%rax), %xmm0
    00000d3c: 	movdqa	(%rsp), %xmm5
    00000d41: 	addq	$0x10, %rax
    00000d45: 	movdqa	%xmm0, %xmm1
    00000d49: 	punpcklbw	%xmm0, %xmm1
    00000d4d: 	punpckhbw	%xmm0, %xmm0
    00000d51: 	pmullw	0x10(%rsp), %xmm1
    00000d57: 	pand	%xmm5, %xmm1
    00000d5b: 	pmullw	%xmm3, %xmm0
    00000d5f: 	pand	%xmm5, %xmm0
    00000d63: 	packuswb	%xmm0, %xmm1
    00000d67: 	paddb	%xmm1, %xmm2
    00000d6b: 	cmpq	%rbx, %rax
    00000d6e: 	jne	.Ltmp4867 # Offset: 3438
    00000d70: 	cvttsd2si	init_value(%rip), %ecx
    00000d78: 	movdqa	%xmm2, %xmm0
    00000d7c: 	psrldq	$0x8, %xmm0
    00000d81: 	paddb	%xmm0, %xmm2
    00000d85: 	pxor	%xmm0, %xmm0
    00000d89: 	psadbw	%xmm0, %xmm2
    00000d8d: 	movl	%ecx, %eax
    00000d8f: 	movd	%xmm2, %edx
    00000d93: 	imull	%r13d, %eax
    00000d97: 	shll	$0x6, %eax
    00000d9a: 	cmpb	%dl, %al
    00000d9c: 	je	.Ltmp4868 # Offset: 3484
    00000d9e: 	movl	current_test(%rip), %edx
    00000da4: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000dab: 	movl	$0x1, %edi
    00000db0: 	xorl	%eax, %eax
    00000db2: 	callq	__printf_chk@PLT # Offset: 3506
    00000db7: 	movl	iterations(%rip), %esi
.Ltmp4868:
    00000dbd: 	addl	$0x1, %r12d
    00000dc1: 	cmpl	%esi, %r12d
    00000dc4: 	jl	.Ltmp4869 # Offset: 3524
.Ltmp4866:
    00000dca: 	movq	%r14, %rsi
    00000dcd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000dd4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3540
    00000dd9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000de0: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000de7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000dee: 	je	.Ltmp4870 # Offset: 3566
.Ltmp5020:
    00000df4: 	movq	-0x20(%rax), %r12
    00000df8: 	callq	clock@PLT # Offset: 3576
    00000dfd: 	pxor	%xmm0, %xmm0
    00000e01: 	movq	%rax, end_time(%rip)
    00000e08: 	movq	%r12, %rdi
    00000e0b: 	subq	start_time(%rip), %rax
    00000e12: 	cvtsi2sd	%rax, %xmm0
    00000e17: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000e1f: 	callq	_Z13record_resultdPKc # Offset: 3615
    00000e24: 	movq	0x100(%rsp), %rdi
    00000e2c: 	cmpq	0x30(%rsp), %rdi
    00000e31: 	je	.Ltmp4871 # Offset: 3633
    00000e33: 	movq	0x110(%rsp), %rax
    00000e3b: 	leaq	0x1(%rax), %rsi
    00000e3f: 	callq	_ZdlPvm@PLT # Offset: 3647
.Ltmp4871:
    00000e44: 	movq	0x38(%rsp), %rsi
    00000e49: 	leaq	DATAat0x3d600(%rip), %rdx
    00000e50: 	movq	%r14, %rdi
    00000e53: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3667
    00000e58: 	callq	clock@PLT # Offset: 3672
    00000e5d: 	movl	iterations(%rip), %ecx
    00000e63: 	movq	%rax, start_time(%rip)
    00000e6a: 	testl	%ecx, %ecx
    00000e6c: 	jle	.Ltmp4872 # Offset: 3692
    00000e72: 	movzbl	0x48(%rsp), %eax
    00000e77: 	mulb	0x4c(%rsp)
    00000e7b: 	xorl	%r12d, %r12d
    00000e7e: 	leaq	0x20a0(%rsp), %rbx
    00000e86: 	mulb	0x5c(%rsp)
    00000e8a: 	mulb	0x44(%rsp)
    00000e8e: 	movl	%eax, %r13d
    00000e91: 	movd	%r13d, %xmm0
    00000e96: 	punpcklbw	%xmm0, %xmm0
    00000e9a: 	punpcklwd	%xmm0, %xmm0
    00000e9e: 	pshufd	$0x0, %xmm0, %xmm7
    00000ea3: 	movaps	%xmm7, (%rsp)
    00000ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4875:
    00000eb0: 	movq	%rbp, %rax
    00000eb3: 	pxor	%xmm0, %xmm0
    00000eb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4873:
    00000ec0: 	paddb	(%rsp), %xmm0
    00000ec5: 	addq	$0x10, %rax
    00000ec9: 	paddb	-0x10(%rax), %xmm0
    00000ece: 	cmpq	%rbx, %rax
    00000ed1: 	jne	.Ltmp4873 # Offset: 3793
    00000ed3: 	cvttsd2si	init_value(%rip), %edx
    00000edb: 	movdqa	%xmm0, %xmm1
    00000edf: 	pxor	%xmm2, %xmm2
    00000ee3: 	psrldq	$0x8, %xmm1
    00000ee8: 	paddb	%xmm1, %xmm0
    00000eec: 	psadbw	%xmm2, %xmm0
    00000ef0: 	addl	%r13d, %edx
    00000ef3: 	movd	%xmm0, %eax
    00000ef7: 	shll	$0x6, %edx
    00000efa: 	cmpb	%al, %dl
    00000efc: 	je	.Ltmp4874 # Offset: 3836
    00000efe: 	movl	current_test(%rip), %edx
    00000f04: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000f0b: 	movl	$0x1, %edi
    00000f10: 	xorl	%eax, %eax
    00000f12: 	callq	__printf_chk@PLT # Offset: 3858
    00000f17: 	movl	iterations(%rip), %ecx
.Ltmp4874:
    00000f1d: 	addl	$0x1, %r12d
    00000f21: 	cmpl	%ecx, %r12d
    00000f24: 	jl	.Ltmp4875 # Offset: 3876
.Ltmp4872:
    00000f26: 	movq	%r14, %rsi
    00000f29: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000f30: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3888
    00000f35: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f3c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f43: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f4a: 	je	.Ltmp4876 # Offset: 3914
.Ltmp5019:
    00000f50: 	movq	-0x20(%rax), %r12
    00000f54: 	callq	clock@PLT # Offset: 3924
    00000f59: 	pxor	%xmm0, %xmm0
    00000f5d: 	movq	%rax, end_time(%rip)
    00000f64: 	movq	%r12, %rdi
    00000f67: 	subq	start_time(%rip), %rax
    00000f6e: 	cvtsi2sd	%rax, %xmm0
    00000f73: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000f7b: 	callq	_Z13record_resultdPKc # Offset: 3963
    00000f80: 	movq	0x100(%rsp), %rdi
    00000f88: 	cmpq	0x30(%rsp), %rdi
    00000f8d: 	je	.Ltmp4877 # Offset: 3981
    00000f8f: 	movq	0x110(%rsp), %rax
    00000f97: 	leaq	0x1(%rax), %rsi
    00000f9b: 	callq	_ZdlPvm@PLT # Offset: 3995
.Ltmp4877:
    00000fa0: 	movq	0x38(%rsp), %rsi
    00000fa5: 	leaq	DATAat0x3d620(%rip), %rdx
    00000fac: 	movq	%r14, %rdi
    00000faf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4015
    00000fb4: 	callq	clock@PLT # Offset: 4020
    00000fb9: 	movl	iterations(%rip), %esi
    00000fbf: 	movq	%rax, start_time(%rip)
    00000fc6: 	testl	%esi, %esi
    00000fc8: 	jle	.Ltmp4878 # Offset: 4040
    00000fce: 	movzbl	0x48(%rsp), %eax
    00000fd3: 	mulb	0x4c(%rsp)
    00000fd7: 	xorl	%r12d, %r12d
    00000fda: 	leaq	0x20a0(%rsp), %rbx
    00000fe2: 	mulb	0x5c(%rsp)
    00000fe6: 	movdqa	DATAat0x3d730(%rip), %xmm3
    00000fee: 	mulb	0x44(%rsp)
    00000ff2: 	movaps	%xmm3, (%rsp)
    00000ff6: 	movd	%eax, %xmm0
    00000ffa: 	punpcklbw	%xmm0, %xmm0
    00000ffe: 	punpcklwd	%xmm0, %xmm0
    00001002: 	pshufd	$0x0, %xmm0, %xmm4
    00001007: 	movdqa	%xmm4, %xmm6
    0000100b: 	movaps	%xmm4, 0x20(%rsp)
    00001010: 	punpcklbw	%xmm4, %xmm6
    00001014: 	movaps	%xmm6, 0x10(%rsp)
    00001019: 	nopl	(%rax) # Size: 7
.Ltmp4881:
    00001020: 	movdqa	0x20(%rsp), %xmm5
    00001026: 	movq	%rbp, %rax
    00001029: 	pxor	%xmm2, %xmm2
    0000102d: 	movdqa	%xmm5, %xmm3
    00001031: 	punpckhbw	%xmm5, %xmm3
    00001035: 	nopl	(%rax) # Size: 3
.Ltmp4879:
    00001038: 	movdqa	(%rax), %xmm0
    0000103c: 	movdqa	(%rsp), %xmm6
    00001041: 	addq	$0x10, %rax
    00001045: 	movdqa	%xmm0, %xmm1
    00001049: 	punpcklbw	%xmm0, %xmm1
    0000104d: 	punpckhbw	%xmm0, %xmm0
    00001051: 	pmullw	0x10(%rsp), %xmm1
    00001057: 	pand	%xmm6, %xmm1
    0000105b: 	pmullw	%xmm3, %xmm0
    0000105f: 	pand	%xmm6, %xmm0
    00001063: 	packuswb	%xmm0, %xmm1
    00001067: 	paddb	%xmm1, %xmm2
    0000106b: 	cmpq	%rax, %rbx
    0000106e: 	jne	.Ltmp4879 # Offset: 4206
    00001070: 	cvttsd2si	init_value(%rip), %ecx
    00001078: 	movzbl	0x40(%rsp), %eax
    0000107d: 	movdqa	%xmm2, %xmm0
    00001081: 	psrldq	$0x8, %xmm0
    00001086: 	paddb	%xmm0, %xmm2
    0000108a: 	pxor	%xmm0, %xmm0
    0000108e: 	psadbw	%xmm0, %xmm2
    00001092: 	imull	%ecx, %eax
    00001095: 	movd	%xmm2, %edx
    00001099: 	mulb	0x48(%rsp)
    0000109d: 	mulb	0x4c(%rsp)
    000010a1: 	mulb	0x44(%rsp)
    000010a5: 	shll	$0x6, %eax
    000010a8: 	cmpb	%dl, %al
    000010aa: 	je	.Ltmp4880 # Offset: 4266
    000010ac: 	movl	current_test(%rip), %edx
    000010b2: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000010b9: 	movl	$0x1, %edi
    000010be: 	xorl	%eax, %eax
    000010c0: 	callq	__printf_chk@PLT # Offset: 4288
    000010c5: 	movl	iterations(%rip), %esi
.Ltmp4880:
    000010cb: 	addl	$0x1, %r12d
    000010cf: 	cmpl	%esi, %r12d
    000010d2: 	jl	.Ltmp4881 # Offset: 4306
.Ltmp4878:
    000010d8: 	movq	%r14, %rsi
    000010db: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000010e2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4322
    000010e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010ee: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010fc: 	je	.Ltmp4882 # Offset: 4348
.Ltmp5018:
    00001102: 	movq	-0x20(%rax), %r12
    00001106: 	callq	clock@PLT # Offset: 4358
    0000110b: 	pxor	%xmm0, %xmm0
    0000110f: 	movq	%rax, end_time(%rip)
    00001116: 	movq	%r12, %rdi
    00001119: 	subq	start_time(%rip), %rax
    00001120: 	cvtsi2sd	%rax, %xmm0
    00001125: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000112d: 	callq	_Z13record_resultdPKc # Offset: 4397
    00001132: 	movq	0x100(%rsp), %rdi
    0000113a: 	cmpq	0x30(%rsp), %rdi
    0000113f: 	je	.Ltmp4883 # Offset: 4415
    00001141: 	movq	0x110(%rsp), %rax
    00001149: 	leaq	0x1(%rax), %rsi
    0000114d: 	callq	_ZdlPvm@PLT # Offset: 4429
.Ltmp4883:
    00001152: 	movq	0x38(%rsp), %rsi
    00001157: 	leaq	DATAat0x3d347(%rip), %rdx
    0000115e: 	movq	%r14, %rdi
    00001161: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4449
    00001166: 	callq	clock@PLT # Offset: 4454
    0000116b: 	movl	iterations(%rip), %edi
    00001171: 	xorl	%r12d, %r12d
    00001174: 	leaq	0x20a0(%rsp), %rbx
    0000117c: 	movq	%rax, start_time(%rip)
    00001183: 	leaq	DATAat0x3d1d8(%rip), %r13
    0000118a: 	testl	%edi, %edi
    0000118c: 	jle	.Ltmp4884 # Offset: 4492
    0000118e: 	nop # Size: 2
.Ltmp4887:
    00001190: 	movq	%rbp, %rcx
    00001193: 	xorl	%esi, %esi
    00001195: 	nopl	(%rax) # Size: 3
.Ltmp4885:
    00001198: 	movsbl	(%rcx), %eax
    0000119b: 	addq	$0x1, %rcx
    0000119f: 	cltd
    000011a0: 	idivl	%r15d
    000011a3: 	addl	%eax, %esi
    000011a5: 	cmpq	%rcx, %rbx
    000011a8: 	jne	.Ltmp4885 # Offset: 4520
    000011aa: 	cvttsd2si	init_value(%rip), %eax
    000011b2: 	movsbl	%al, %eax
    000011b5: 	cltd
    000011b6: 	idivl	%r15d
    000011b9: 	shll	$0x6, %eax
    000011bc: 	cmpb	%al, %sil
    000011bf: 	je	.Ltmp4886 # Offset: 4543
    000011c1: 	movl	current_test(%rip), %edx
    000011c7: 	movq	%r13, %rsi
    000011ca: 	movl	$0x1, %edi
    000011cf: 	xorl	%eax, %eax
    000011d1: 	callq	__printf_chk@PLT # Offset: 4561
    000011d6: 	movl	iterations(%rip), %edi
.Ltmp4886:
    000011dc: 	addl	$0x1, %r12d
    000011e0: 	cmpl	%edi, %r12d
    000011e3: 	jl	.Ltmp4887 # Offset: 4579
.Ltmp4884:
    000011e5: 	movq	%r14, %rsi
    000011e8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000011ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4591
    000011f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011fb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001202: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001209: 	je	.Ltmp4888 # Offset: 4617
.Ltmp5017:
    0000120f: 	movq	-0x20(%rax), %r12
    00001213: 	callq	clock@PLT # Offset: 4627
    00001218: 	pxor	%xmm0, %xmm0
    0000121c: 	movq	%rax, end_time(%rip)
    00001223: 	movq	%r12, %rdi
    00001226: 	subq	start_time(%rip), %rax
    0000122d: 	cvtsi2sd	%rax, %xmm0
    00001232: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000123a: 	callq	_Z13record_resultdPKc # Offset: 4666
    0000123f: 	movq	0x100(%rsp), %rdi
    00001247: 	cmpq	0x30(%rsp), %rdi
    0000124c: 	je	.Ltmp4889 # Offset: 4684
    0000124e: 	movq	0x110(%rsp), %rax
    00001256: 	leaq	0x1(%rax), %rsi
    0000125a: 	callq	_ZdlPvm@PLT # Offset: 4698
.Ltmp4889:
    0000125f: 	movq	0x38(%rsp), %rsi
    00001264: 	leaq	DATAat0x3d358(%rip), %rdx
    0000126b: 	movq	%r14, %rdi
    0000126e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4718
    00001273: 	callq	clock@PLT # Offset: 4723
    00001278: 	movl	iterations(%rip), %edi
    0000127e: 	xorl	%r12d, %r12d
    00001281: 	leaq	0x20a0(%rsp), %rbx
    00001289: 	movq	%rax, start_time(%rip)
    00001290: 	leaq	DATAat0x3d1d8(%rip), %r13
    00001297: 	testl	%edi, %edi
    00001299: 	jle	.Ltmp4890 # Offset: 4761
    0000129f: 	nop # Size: 1
.Ltmp4893:
    000012a0: 	movl	0x50(%rsp), %r8d
    000012a5: 	movl	0x54(%rsp), %r9d
    000012aa: 	movq	%rbp, %rcx
    000012ad: 	xorl	%esi, %esi
    000012af: 	movl	0x58(%rsp), %r10d
    000012b4: 	nopl	(%rax) # Size: 4
.Ltmp4891:
    000012b8: 	movsbl	(%rcx), %eax
    000012bb: 	addq	$0x1, %rcx
    000012bf: 	cltd
    000012c0: 	idivl	%r15d
    000012c3: 	cltd
    000012c4: 	idivl	%r8d
    000012c7: 	cltd
    000012c8: 	idivl	%r9d
    000012cb: 	cltd
    000012cc: 	idivl	%r10d
    000012cf: 	addl	%eax, %esi
    000012d1: 	cmpq	%rbx, %rcx
    000012d4: 	jne	.Ltmp4891 # Offset: 4820
    000012d6: 	cvttsd2si	init_value(%rip), %eax
    000012de: 	movsbl	%al, %eax
    000012e1: 	cltd
    000012e2: 	idivl	%r15d
    000012e5: 	cltd
    000012e6: 	idivl	0x50(%rsp)
    000012ea: 	cltd
    000012eb: 	idivl	0x54(%rsp)
    000012ef: 	cltd
    000012f0: 	idivl	0x58(%rsp)
    000012f4: 	shll	$0x6, %eax
    000012f7: 	cmpb	%al, %sil
    000012fa: 	je	.Ltmp4892 # Offset: 4858
    000012fc: 	movl	current_test(%rip), %edx
    00001302: 	movq	%r13, %rsi
    00001305: 	movl	$0x1, %edi
    0000130a: 	xorl	%eax, %eax
    0000130c: 	callq	__printf_chk@PLT # Offset: 4876
    00001311: 	movl	iterations(%rip), %edi
.Ltmp4892:
    00001317: 	addl	$0x1, %r12d
    0000131b: 	cmpl	%edi, %r12d
    0000131e: 	jl	.Ltmp4893 # Offset: 4894
.Ltmp4890:
    00001320: 	movq	%r14, %rsi
    00001323: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000132a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4906
    0000132f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001336: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000133d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001344: 	je	.Ltmp4894 # Offset: 4932
.Ltmp5016:
    0000134a: 	movq	-0x20(%rax), %r12
    0000134e: 	callq	clock@PLT # Offset: 4942
    00001353: 	pxor	%xmm0, %xmm0
    00001357: 	movq	%rax, end_time(%rip)
    0000135e: 	movq	%r12, %rdi
    00001361: 	subq	start_time(%rip), %rax
    00001368: 	cvtsi2sd	%rax, %xmm0
    0000136d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001375: 	callq	_Z13record_resultdPKc # Offset: 4981
    0000137a: 	movq	0x100(%rsp), %rdi
    00001382: 	cmpq	0x30(%rsp), %rdi
    00001387: 	je	.Ltmp4895 # Offset: 4999
    00001389: 	movq	0x110(%rsp), %rax
    00001391: 	leaq	0x1(%rax), %rsi
    00001395: 	callq	_ZdlPvm@PLT # Offset: 5013
.Ltmp4895:
    0000139a: 	movq	0x38(%rsp), %rsi
    0000139f: 	leaq	DATAat0x3d373(%rip), %rdx
    000013a6: 	movq	%r14, %rdi
    000013a9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5033
    000013ae: 	callq	clock@PLT # Offset: 5038
    000013b3: 	movl	iterations(%rip), %ecx
    000013b9: 	movq	%rax, start_time(%rip)
    000013c0: 	testl	%ecx, %ecx
    000013c2: 	jle	.Ltmp4896 # Offset: 5058
    000013c8: 	movl	%r15d, %eax
    000013cb: 	xorl	%r12d, %r12d
    000013ce: 	leaq	0x20a0(%rsp), %rbx
    000013d6: 	cltd
    000013d7: 	idivl	0x50(%rsp)
    000013db: 	cltd
    000013dc: 	idivl	0x54(%rsp)
    000013e0: 	cltd
    000013e1: 	idivl	0x58(%rsp)
    000013e5: 	movd	%eax, %xmm0
    000013e9: 	movl	%eax, %r13d
    000013ec: 	punpcklbw	%xmm0, %xmm0
    000013f0: 	punpcklwd	%xmm0, %xmm0
    000013f4: 	pshufd	$0x0, %xmm0, %xmm5
    000013f9: 	movaps	%xmm5, (%rsp)
    000013fd: 	nopl	(%rax) # Size: 3
.Ltmp4899:
    00001400: 	movq	%rbp, %rax
    00001403: 	pxor	%xmm0, %xmm0
    00001407: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4897:
    00001410: 	paddb	(%rsp), %xmm0
    00001415: 	addq	$0x10, %rax
    00001419: 	paddb	-0x10(%rax), %xmm0
    0000141e: 	cmpq	%rax, %rbx
    00001421: 	jne	.Ltmp4897 # Offset: 5153
    00001423: 	cvttsd2si	init_value(%rip), %edx
    0000142b: 	movdqa	%xmm0, %xmm1
    0000142f: 	pxor	%xmm3, %xmm3
    00001433: 	psrldq	$0x8, %xmm1
    00001438: 	paddb	%xmm1, %xmm0
    0000143c: 	psadbw	%xmm3, %xmm0
    00001440: 	addl	%r13d, %edx
    00001443: 	movd	%xmm0, %eax
    00001447: 	shll	$0x6, %edx
    0000144a: 	cmpb	%al, %dl
    0000144c: 	je	.Ltmp4898 # Offset: 5196
    0000144e: 	movl	current_test(%rip), %edx
    00001454: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000145b: 	movl	$0x1, %edi
    00001460: 	xorl	%eax, %eax
    00001462: 	callq	__printf_chk@PLT # Offset: 5218
    00001467: 	movl	iterations(%rip), %ecx
.Ltmp4898:
    0000146d: 	addl	$0x1, %r12d
    00001471: 	cmpl	%ecx, %r12d
    00001474: 	jl	.Ltmp4899 # Offset: 5236
.Ltmp4896:
    00001476: 	movq	%r14, %rsi
    00001479: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001480: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5248
    00001485: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000148c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001493: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000149a: 	je	.Ltmp4900 # Offset: 5274
.Ltmp5015:
    000014a0: 	movq	-0x20(%rax), %r12
    000014a4: 	callq	clock@PLT # Offset: 5284
    000014a9: 	pxor	%xmm0, %xmm0
    000014ad: 	movq	%rax, end_time(%rip)
    000014b4: 	movq	%r12, %rdi
    000014b7: 	subq	start_time(%rip), %rax
    000014be: 	cvtsi2sd	%rax, %xmm0
    000014c3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000014cb: 	callq	_Z13record_resultdPKc # Offset: 5323
    000014d0: 	movq	0x100(%rsp), %rdi
    000014d8: 	cmpq	0x30(%rsp), %rdi
    000014dd: 	je	.Ltmp4901 # Offset: 5341
    000014df: 	movq	0x110(%rsp), %rax
    000014e7: 	leaq	0x1(%rax), %rsi
    000014eb: 	callq	_ZdlPvm@PLT # Offset: 5355
.Ltmp4901:
    000014f0: 	movq	0x38(%rsp), %rsi
    000014f5: 	leaq	DATAat0x3d38f(%rip), %rdx
    000014fc: 	movq	%r14, %rdi
    000014ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5375
    00001504: 	callq	clock@PLT # Offset: 5380
    00001509: 	movl	iterations(%rip), %ecx
    0000150f: 	movq	%rax, start_time(%rip)
    00001516: 	testl	%ecx, %ecx
    00001518: 	jle	.Ltmp4902 # Offset: 5400
    0000151e: 	movl	0x50(%rsp), %eax
    00001522: 	imull	0x54(%rsp), %eax
    00001527: 	xorl	%r12d, %r12d
    0000152a: 	leaq	0x20a0(%rsp), %rbx
    00001532: 	movzbl	0x5c(%rsp), %r13d
    00001538: 	cltd
    00001539: 	idivl	0x58(%rsp)
    0000153d: 	subl	%eax, %r13d
    00001540: 	movd	%r13d, %xmm0
    00001545: 	punpcklbw	%xmm0, %xmm0
    00001549: 	punpcklwd	%xmm0, %xmm0
    0000154d: 	pshufd	$0x0, %xmm0, %xmm6
    00001552: 	movaps	%xmm6, (%rsp)
    00001556: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp4905:
    00001560: 	movq	%rbp, %rax
    00001563: 	pxor	%xmm0, %xmm0
    00001567: 	nopw	(%rax,%rax) # Size: 9
.Ltmp4903:
    00001570: 	paddb	(%rsp), %xmm0
    00001575: 	addq	$0x10, %rax
    00001579: 	paddb	-0x10(%rax), %xmm0
    0000157e: 	cmpq	%rbx, %rax
    00001581: 	jne	.Ltmp4903 # Offset: 5505
    00001583: 	cvttsd2si	init_value(%rip), %edx
    0000158b: 	movdqa	%xmm0, %xmm1
    0000158f: 	pxor	%xmm4, %xmm4
    00001593: 	psrldq	$0x8, %xmm1
    00001598: 	paddb	%xmm1, %xmm0
    0000159c: 	psadbw	%xmm4, %xmm0
    000015a0: 	addl	%r13d, %edx
    000015a3: 	movd	%xmm0, %eax
    000015a7: 	shll	$0x6, %edx
    000015aa: 	cmpb	%al, %dl
    000015ac: 	je	.Ltmp4904 # Offset: 5548
    000015ae: 	movl	current_test(%rip), %edx
    000015b4: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000015bb: 	movl	$0x1, %edi
    000015c0: 	xorl	%eax, %eax
    000015c2: 	callq	__printf_chk@PLT # Offset: 5570
    000015c7: 	movl	iterations(%rip), %ecx
.Ltmp4904:
    000015cd: 	addl	$0x1, %r12d
    000015d1: 	cmpl	%ecx, %r12d
    000015d4: 	jl	.Ltmp4905 # Offset: 5588
.Ltmp4902:
    000015d6: 	movq	%r14, %rsi
    000015d9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000015e0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5600
    000015e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015ec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015fa: 	je	.Ltmp4906 # Offset: 5626
.Ltmp5014:
    00001600: 	movq	-0x20(%rax), %r12
    00001604: 	callq	clock@PLT # Offset: 5636
    00001609: 	pxor	%xmm0, %xmm0
    0000160d: 	movq	%rax, end_time(%rip)
    00001614: 	movq	%r12, %rdi
    00001617: 	subq	start_time(%rip), %rax
    0000161e: 	cvtsi2sd	%rax, %xmm0
    00001623: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000162b: 	callq	_Z13record_resultdPKc # Offset: 5675
    00001630: 	movq	0x100(%rsp), %rdi
    00001638: 	cmpq	0x30(%rsp), %rdi
    0000163d: 	je	.Ltmp4907 # Offset: 5693
    0000163f: 	movq	0x110(%rsp), %rax
    00001647: 	leaq	0x1(%rax), %rsi
    0000164b: 	callq	_ZdlPvm@PLT # Offset: 5707
.Ltmp4907:
    00001650: 	movq	0x38(%rsp), %rsi
    00001655: 	leaq	DATAat0x3d3a8(%rip), %rdx
    0000165c: 	movq	%r14, %rdi
    0000165f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5727
    00001664: 	callq	clock@PLT # Offset: 5732
    00001669: 	movl	iterations(%rip), %ecx
    0000166f: 	movq	%rax, start_time(%rip)
    00001676: 	testl	%ecx, %ecx
    00001678: 	jle	.Ltmp4908 # Offset: 5752
    0000167e: 	movl	0x50(%rsp), %eax
    00001682: 	imull	0x54(%rsp), %eax
    00001687: 	movd	0x40(%rsp), %xmm0
    0000168d: 	xorl	%r12d, %r12d
    00001690: 	punpcklbw	%xmm0, %xmm0
    00001694: 	leaq	0x20a0(%rsp), %rbx
    0000169c: 	punpcklwd	%xmm0, %xmm0
    000016a0: 	cltd
    000016a1: 	pshufd	$0x0, %xmm0, %xmm2
    000016a6: 	idivl	0x58(%rsp)
    000016aa: 	movaps	%xmm2, (%rsp)
    000016ae: 	movd	%eax, %xmm7
    000016b2: 	movl	%eax, %r13d
    000016b5: 	movaps	%xmm7, 0x10(%rsp)
    000016ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4911:
    000016c0: 	movdqa	0x10(%rsp), %xmm6
    000016c6: 	movq	%rbp, %rax
    000016c9: 	pxor	%xmm0, %xmm0
    000016cd: 	movdqa	%xmm6, %xmm2
    000016d1: 	punpcklbw	%xmm6, %xmm2
    000016d5: 	punpcklwd	%xmm2, %xmm2
    000016d9: 	pshufd	$0x0, %xmm2, %xmm2
    000016de: 	nop # Size: 2
.Ltmp4909:
    000016e0: 	movdqa	(%rax), %xmm1
    000016e4: 	paddb	(%rsp), %xmm0
    000016e9: 	addq	$0x10, %rax
    000016ed: 	psubb	%xmm2, %xmm1
    000016f1: 	paddb	%xmm1, %xmm0
    000016f5: 	cmpq	%rax, %rbx
    000016f8: 	jne	.Ltmp4909 # Offset: 5880
    000016fa: 	movdqa	%xmm0, %xmm1
    000016fe: 	cvttsd2si	init_value(%rip), %edx
    00001706: 	addb	0x40(%rsp), %dl
    0000170a: 	psrldq	$0x8, %xmm1
    0000170f: 	subl	%r13d, %edx
    00001712: 	paddb	%xmm1, %xmm0
    00001716: 	pxor	%xmm1, %xmm1
    0000171a: 	shll	$0x6, %edx
    0000171d: 	psadbw	%xmm1, %xmm0
    00001721: 	movd	%xmm0, %eax
    00001725: 	cmpb	%al, %dl
    00001727: 	je	.Ltmp4910 # Offset: 5927
    00001729: 	movl	current_test(%rip), %edx
    0000172f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001736: 	movl	$0x1, %edi
    0000173b: 	xorl	%eax, %eax
    0000173d: 	callq	__printf_chk@PLT # Offset: 5949
    00001742: 	movl	iterations(%rip), %ecx
.Ltmp4910:
    00001748: 	addl	$0x1, %r12d
    0000174c: 	cmpl	%ecx, %r12d
    0000174f: 	jl	.Ltmp4911 # Offset: 5967
.Ltmp4908:
    00001755: 	movq	%r14, %rsi
    00001758: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000175f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5983
    00001764: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000176b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001772: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001779: 	je	.Ltmp4912 # Offset: 6009
.Ltmp5013:
    0000177f: 	movq	-0x20(%rax), %r12
    00001783: 	callq	clock@PLT # Offset: 6019
    00001788: 	pxor	%xmm0, %xmm0
    0000178c: 	movq	%rax, end_time(%rip)
    00001793: 	movq	%r12, %rdi
    00001796: 	subq	start_time(%rip), %rax
    0000179d: 	cvtsi2sd	%rax, %xmm0
    000017a2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000017aa: 	callq	_Z13record_resultdPKc # Offset: 6058
    000017af: 	movq	0x100(%rsp), %rdi
    000017b7: 	cmpq	0x30(%rsp), %rdi
    000017bc: 	je	.Ltmp4913 # Offset: 6076
    000017be: 	movq	0x110(%rsp), %rax
    000017c6: 	leaq	0x1(%rax), %rsi
    000017ca: 	callq	_ZdlPvm@PLT # Offset: 6090
.Ltmp4913:
    000017cf: 	movl	0x58(%rsp), %r8d
    000017d4: 	movl	0x54(%rsp), %ecx
    000017d8: 	movl	%r15d, %esi
    000017db: 	movq	%rbp, %rdi
    000017de: 	movl	0x50(%rsp), %edx
    000017e2: 	callq	_Z20TestLoopsIntegerOnlyIaENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 6114
    000017e7: 	movq	0x38(%rsp), %r15
    000017ec: 	leaq	0xc0(%rsp), %rdi
    000017f4: 	leaq	DATAat0x3d3c2(%rip), %rdx
    000017fb: 	movq	%r15, %rsi
    000017fe: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6142
    00001803: 	movl	iterations(%rip), %edx
    00001809: 	xorl	%r8d, %r8d
    0000180c: 	xorl	%ecx, %ecx
    0000180e: 	movl	$0x1f40, %esi
    00001813: 	movq	0xc0(%rsp), %rdi
    0000181b: 	callq	_Z9summarizePKciiii # Offset: 6171
    00001820: 	movsd	init_value(%rip), %xmm0
    00001828: 	movq	%rbp, %rdi
    0000182b: 	xorl	%ebx, %ebx
    0000182d: 	movq	%r15, %rsi
    00001830: 	movabsq	$0x101010101010101, %rcx
    0000183a: 	cvttsd2si	%xmm0, %edx
    0000183e: 	addsd	DATAat0x3d700(%rip), %xmm0
    00001846: 	movzbl	%dl, %eax
    00001849: 	movb	%dl, %bl
    0000184b: 	movb	%dl, 0x8b(%rsp)
    00001852: 	imulq	%rcx, %rax
    00001856: 	movl	$0x3e8, %ecx
    0000185b: 	movb	%dl, %bh
    0000185d: 	movb	%dl, 0x8c(%rsp)
    00001864: 	leaq	DATAat0x3d3d2(%rip), %rdx
    0000186b: 	movw	%bx, 0x80(%rsp)
    00001873: 	movw	%bx, 0x86(%rsp)
    0000187b: 	rep		stosq	%rax, %es:(%rdi)
    0000187e: 	cvttsd2si	%xmm0, %eax
    00001882: 	movq	%r14, %rdi
    00001885: 	movslq	%eax, %r13
    00001888: 	movl	%eax, %ecx
    0000188a: 	imulq	$0x51eb851f, %r13, %r13
    00001891: 	sarl	$0x1f, %ecx
    00001894: 	sarq	$0x24, %r13
    00001898: 	subl	%ecx, %r13d
    0000189b: 	imull	$0x32, %r13d, %ecx
    0000189f: 	subl	%ecx, %eax
    000018a1: 	movslq	%eax, %r13
    000018a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6308
    000018a9: 	callq	clock@PLT # Offset: 6313
    000018ae: 	movl	iterations(%rip), %ecx
    000018b4: 	movq	%rax, start_time(%rip)
    000018bb: 	testl	%ecx, %ecx
    000018bd: 	jle	.Ltmp4914 # Offset: 6333
    000018c3: 	movslq	%r13d, %rax
    000018c6: 	xorl	%r12d, %r12d
    000018c9: 	leaq	0x20a0(%rsp), %rbx
    000018d1: 	leaq	0x120(%rsp,%rax), %r15
    000018d9: 	nopl	(%rax) # Size: 7
.Ltmp4917:
    000018e0: 	cvttsd2si	init_value(%rip), %edx
    000018e8: 	movq	%rbp, %rax
    000018eb: 	pxor	%xmm0, %xmm0
    000018ef: 	shll	$0x6, %edx
    000018f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4915:
    000018f8: 	paddb	(%rax), %xmm0
    000018fc: 	addq	$0x10, %rax
    00001900: 	cmpq	%rbx, %rax
    00001903: 	jne	.Ltmp4915 # Offset: 6403
    00001905: 	movdqa	%xmm0, %xmm1
    00001909: 	psrldq	$0x8, %xmm1
    0000190e: 	paddb	%xmm1, %xmm0
    00001912: 	pxor	%xmm1, %xmm1
    00001916: 	psadbw	%xmm1, %xmm0
    0000191a: 	movd	%xmm0, %eax
    0000191e: 	movb	%al, (%r15)
    00001921: 	cmpb	%al, %dl
    00001923: 	je	.Ltmp4916 # Offset: 6435
    00001925: 	movq	0x100(%rsp), %rdx
    0000192d: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001934: 	movl	$0x1, %edi
    00001939: 	xorl	%eax, %eax
    0000193b: 	callq	__printf_chk@PLT # Offset: 6459
    00001940: 	movl	iterations(%rip), %ecx
.Ltmp4916:
    00001946: 	addl	$0x1, %r12d
    0000194a: 	cmpl	%ecx, %r12d
    0000194d: 	jl	.Ltmp4917 # Offset: 6477
.Ltmp4914:
    0000194f: 	movq	%r14, %rsi
    00001952: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001959: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6489
    0000195e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001965: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000196c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001973: 	je	.Ltmp4918 # Offset: 6515
.Ltmp5012:
    00001979: 	movq	-0x20(%rax), %r12
    0000197d: 	callq	clock@PLT # Offset: 6525
    00001982: 	pxor	%xmm0, %xmm0
    00001986: 	movq	%rax, end_time(%rip)
    0000198d: 	movq	%r12, %rdi
    00001990: 	subq	start_time(%rip), %rax
    00001997: 	cvtsi2sd	%rax, %xmm0
    0000199c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000019a4: 	callq	_Z13record_resultdPKc # Offset: 6564
    000019a9: 	movq	0x100(%rsp), %rdi
    000019b1: 	cmpq	0x30(%rsp), %rdi
    000019b6: 	je	.Ltmp4919 # Offset: 6582
    000019b8: 	movq	0x110(%rsp), %rax
    000019c0: 	leaq	0x1(%rax), %rsi
    000019c4: 	callq	_ZdlPvm@PLT # Offset: 6596
.Ltmp4919:
    000019c9: 	movq	0x38(%rsp), %rsi
    000019ce: 	leaq	DATAat0x3d3eb(%rip), %rdx
    000019d5: 	movq	%r14, %rdi
    000019d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6616
    000019dd: 	callq	clock@PLT # Offset: 6621
    000019e2: 	movl	iterations(%rip), %ecx
    000019e8: 	movq	%rax, start_time(%rip)
    000019ef: 	testl	%ecx, %ecx
    000019f1: 	jle	.Ltmp4920 # Offset: 6641
    000019f7: 	movslq	%r13d, %rax
    000019fa: 	xorl	%r12d, %r12d
    000019fd: 	leaq	0x20a0(%rsp), %rbx
    00001a05: 	leaq	0x120(%rsp,%rax), %r15
    00001a0d: 	nopl	(%rax) # Size: 3
.Ltmp4923:
    00001a10: 	cvttsd2si	init_value(%rip), %edx
    00001a18: 	movq	%rbp, %rax
    00001a1b: 	pxor	%xmm0, %xmm0
    00001a1f: 	shll	$0x6, %edx
    00001a22: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4921:
    00001a28: 	paddb	(%rax), %xmm0
    00001a2c: 	addq	$0x10, %rax
    00001a30: 	cmpq	%rax, %rbx
    00001a33: 	jne	.Ltmp4921 # Offset: 6707
    00001a35: 	movdqa	%xmm0, %xmm1
    00001a39: 	psrldq	$0x8, %xmm1
    00001a3e: 	paddb	%xmm1, %xmm0
    00001a42: 	pxor	%xmm1, %xmm1
    00001a46: 	psadbw	%xmm1, %xmm0
    00001a4a: 	movd	%xmm0, %eax
    00001a4e: 	movb	%al, (%r15)
    00001a51: 	cmpb	%al, %dl
    00001a53: 	je	.Ltmp4922 # Offset: 6739
    00001a55: 	movq	0x100(%rsp), %rdx
    00001a5d: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001a64: 	movl	$0x1, %edi
    00001a69: 	xorl	%eax, %eax
    00001a6b: 	callq	__printf_chk@PLT # Offset: 6763
    00001a70: 	movl	iterations(%rip), %ecx
.Ltmp4922:
    00001a76: 	addl	$0x1, %r12d
    00001a7a: 	cmpl	%ecx, %r12d
    00001a7d: 	jl	.Ltmp4923 # Offset: 6781
.Ltmp4920:
    00001a7f: 	movq	%r14, %rsi
    00001a82: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a89: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6793
    00001a8e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a95: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a9c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001aa3: 	je	.Ltmp4924 # Offset: 6819
.Ltmp5011:
    00001aa9: 	movq	-0x20(%rax), %r12
    00001aad: 	callq	clock@PLT # Offset: 6829
    00001ab2: 	pxor	%xmm0, %xmm0
    00001ab6: 	movq	%rax, end_time(%rip)
    00001abd: 	movq	%r12, %rdi
    00001ac0: 	subq	start_time(%rip), %rax
    00001ac7: 	cvtsi2sd	%rax, %xmm0
    00001acc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ad4: 	callq	_Z13record_resultdPKc # Offset: 6868
    00001ad9: 	movq	0x100(%rsp), %rdi
    00001ae1: 	cmpq	0x30(%rsp), %rdi
    00001ae6: 	je	.Ltmp4925 # Offset: 6886
    00001ae8: 	movq	0x110(%rsp), %rax
    00001af0: 	leaq	0x1(%rax), %rsi
    00001af4: 	callq	_ZdlPvm@PLT # Offset: 6900
.Ltmp4925:
    00001af9: 	movq	0x38(%rsp), %rsi
    00001afe: 	leaq	DATAat0x3d400(%rip), %rdx
    00001b05: 	movq	%r14, %rdi
    00001b08: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6920
    00001b0d: 	callq	clock@PLT # Offset: 6925
    00001b12: 	movl	iterations(%rip), %ecx
    00001b18: 	xorl	%r12d, %r12d
    00001b1b: 	leaq	0x20a0(%rsp), %rbx
    00001b23: 	movq	%rax, start_time(%rip)
    00001b2a: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001b31: 	testl	%ecx, %ecx
    00001b33: 	jle	.Ltmp4926 # Offset: 6963
    00001b35: 	nopl	(%rax) # Size: 3
.Ltmp4929:
    00001b38: 	cvttsd2si	init_value(%rip), %edx
    00001b40: 	movq	%rbp, %rax
    00001b43: 	pxor	%xmm0, %xmm0
    00001b47: 	shll	$0x6, %edx
    00001b4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4927:
    00001b50: 	paddb	(%rax), %xmm0
    00001b54: 	addq	$0x10, %rax
    00001b58: 	cmpq	%rbx, %rax
    00001b5b: 	jne	.Ltmp4927 # Offset: 7003
    00001b5d: 	movdqa	%xmm0, %xmm1
    00001b61: 	psrldq	$0x8, %xmm1
    00001b66: 	paddb	%xmm1, %xmm0
    00001b6a: 	pxor	%xmm1, %xmm1
    00001b6e: 	psadbw	%xmm1, %xmm0
    00001b72: 	movd	%xmm0, %eax
    00001b76: 	movb	%al, 0x86(%rsp)
    00001b7d: 	cmpb	%al, %dl
    00001b7f: 	je	.Ltmp4928 # Offset: 7039
    00001b81: 	movq	0x100(%rsp), %rdx
    00001b89: 	movq	%r15, %rsi
    00001b8c: 	movl	$0x1, %edi
    00001b91: 	xorl	%eax, %eax
    00001b93: 	callq	__printf_chk@PLT # Offset: 7059
    00001b98: 	movl	iterations(%rip), %ecx
.Ltmp4928:
    00001b9e: 	addl	$0x1, %r12d
    00001ba2: 	cmpl	%ecx, %r12d
    00001ba5: 	jl	.Ltmp4929 # Offset: 7077
.Ltmp4926:
    00001ba7: 	movq	%r14, %rsi
    00001baa: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bb1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7089
    00001bb6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bbd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bc4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bcb: 	je	.Ltmp4930 # Offset: 7115
.Ltmp5010:
    00001bd1: 	movq	-0x20(%rax), %r12
    00001bd5: 	callq	clock@PLT # Offset: 7125
    00001bda: 	pxor	%xmm0, %xmm0
    00001bde: 	movq	%rax, end_time(%rip)
    00001be5: 	movq	%r12, %rdi
    00001be8: 	subq	start_time(%rip), %rax
    00001bef: 	cvtsi2sd	%rax, %xmm0
    00001bf4: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001bfc: 	callq	_Z13record_resultdPKc # Offset: 7164
    00001c01: 	movq	0x100(%rsp), %rdi
    00001c09: 	cmpq	0x30(%rsp), %rdi
    00001c0e: 	je	.Ltmp4931 # Offset: 7182
    00001c10: 	movq	0x110(%rsp), %rax
    00001c18: 	leaq	0x1(%rax), %rsi
    00001c1c: 	callq	_ZdlPvm@PLT # Offset: 7196
.Ltmp4931:
    00001c21: 	movq	0x38(%rsp), %rsi
    00001c26: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001c2d: 	movq	%r14, %rdi
    00001c30: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7216
    00001c35: 	callq	clock@PLT # Offset: 7221
    00001c3a: 	movl	iterations(%rip), %ecx
    00001c40: 	xorl	%r12d, %r12d
    00001c43: 	leaq	0x20a0(%rsp), %rbx
    00001c4b: 	movq	%rax, start_time(%rip)
    00001c52: 	leaq	DATAat0x3d1c8(%rip), %r15
    00001c59: 	testl	%ecx, %ecx
    00001c5b: 	jle	.Ltmp4932 # Offset: 7259
    00001c5d: 	nopl	(%rax) # Size: 3
.Ltmp4935:
    00001c60: 	cvttsd2si	init_value(%rip), %edx
    00001c68: 	movq	%rbp, %rax
    00001c6b: 	pxor	%xmm0, %xmm0
    00001c6f: 	shll	$0x6, %edx
    00001c72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp4933:
    00001c78: 	paddb	(%rax), %xmm0
    00001c7c: 	addq	$0x10, %rax
    00001c80: 	cmpq	%rax, %rbx
    00001c83: 	jne	.Ltmp4933 # Offset: 7299
    00001c85: 	movdqa	%xmm0, %xmm1
    00001c89: 	psrldq	$0x8, %xmm1
    00001c8e: 	paddb	%xmm1, %xmm0
    00001c92: 	pxor	%xmm1, %xmm1
    00001c96: 	psadbw	%xmm1, %xmm0
    00001c9a: 	movd	%xmm0, %eax
    00001c9e: 	movb	%al, 0x86(%rsp)
    00001ca5: 	cmpb	%dl, %al
    00001ca7: 	je	.Ltmp4934 # Offset: 7335
    00001ca9: 	movq	0x100(%rsp), %rdx
    00001cb1: 	movq	%r15, %rsi
    00001cb4: 	movl	$0x1, %edi
    00001cb9: 	xorl	%eax, %eax
    00001cbb: 	callq	__printf_chk@PLT # Offset: 7355
    00001cc0: 	movl	iterations(%rip), %ecx
.Ltmp4934:
    00001cc6: 	addl	$0x1, %r12d
    00001cca: 	cmpl	%ecx, %r12d
    00001ccd: 	jl	.Ltmp4935 # Offset: 7373
.Ltmp4932:
    00001ccf: 	movq	%r14, %rsi
    00001cd2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cd9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7385
    00001cde: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ce5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001cec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001cf3: 	je	.Ltmp4936 # Offset: 7411
.Ltmp5009:
    00001cf9: 	movq	-0x20(%rax), %r12
    00001cfd: 	callq	clock@PLT # Offset: 7421
    00001d02: 	pxor	%xmm0, %xmm0
    00001d06: 	movq	%rax, end_time(%rip)
    00001d0d: 	movq	%r12, %rdi
    00001d10: 	subq	start_time(%rip), %rax
    00001d17: 	cvtsi2sd	%rax, %xmm0
    00001d1c: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d24: 	callq	_Z13record_resultdPKc # Offset: 7460
    00001d29: 	movq	0x100(%rsp), %rdi
    00001d31: 	cmpq	0x30(%rsp), %rdi
    00001d36: 	je	.Ltmp4937 # Offset: 7478
    00001d38: 	movq	0x110(%rsp), %rax
    00001d40: 	leaq	0x1(%rax), %rsi
    00001d44: 	callq	_ZdlPvm@PLT # Offset: 7492
.Ltmp4937:
    00001d49: 	movq	0x38(%rsp), %rsi
    00001d4e: 	leaq	DATAat0x3d430(%rip), %rdx
    00001d55: 	movq	%r14, %rdi
    00001d58: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7512
    00001d5d: 	movq	%r14, %rcx
    00001d60: 	movl	%r13d, %edx
    00001d63: 	movl	$0x1f40, %esi
    00001d68: 	movq	%rbp, %rdi
    00001d6b: 	callq	_Z23test_array_const_in_optIaEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7531
    00001d70: 	movq	0x100(%rsp), %rdi
    00001d78: 	cmpq	0x30(%rsp), %rdi
    00001d7d: 	je	.Ltmp4938 # Offset: 7549
    00001d7f: 	movq	0x110(%rsp), %rax
    00001d87: 	leaq	0x1(%rax), %rsi
    00001d8b: 	callq	_ZdlPvm@PLT # Offset: 7563
.Ltmp4938:
    00001d90: 	movq	0x38(%rsp), %rsi
    00001d95: 	leaq	DATAat0x3d448(%rip), %rdx
    00001d9c: 	movq	%r14, %rdi
    00001d9f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7583
    00001da4: 	callq	clock@PLT # Offset: 7588
    00001da9: 	movl	iterations(%rip), %r8d
    00001db0: 	xorl	%ebx, %ebx
    00001db2: 	leaq	DATAat0x3d1c8(%rip), %r12
    00001db9: 	movq	%rax, start_time(%rip)
    00001dc0: 	movslq	%r13d, %rax
    00001dc3: 	addq	%rax, %rbp
    00001dc6: 	testl	%r8d, %r8d
    00001dc9: 	jle	.Ltmp4939 # Offset: 7625
    00001dcb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4995:
    00001dd0: 	cvttsd2si	init_value(%rip), %eax
    00001dd8: 	movzbl	(%rbp), %edx
    00001ddc: 	shll	$0x6, %edx
    00001ddf: 	shll	$0x6, %eax
    00001de2: 	cmpb	%al, %dl
    00001de4: 	jne	.Ltmp4940 # Offset: 7652
.Ltmp4939:
    00001dea: 	movq	%r14, %rsi
    00001ded: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001df4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7668
    00001df9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001e07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e0e: 	je	.Ltmp4941 # Offset: 7694
.Ltmp5008:
    00001e14: 	movq	-0x20(%rax), %rbp
    00001e18: 	callq	clock@PLT # Offset: 7704
    00001e1d: 	pxor	%xmm0, %xmm0
    00001e21: 	movq	%rax, end_time(%rip)
    00001e28: 	movq	%rbp, %rdi
    00001e2b: 	subq	start_time(%rip), %rax
    00001e32: 	cvtsi2sd	%rax, %xmm0
    00001e37: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e3f: 	callq	_Z13record_resultdPKc # Offset: 7743
    00001e44: 	movq	0x100(%rsp), %rdi
    00001e4c: 	cmpq	0x30(%rsp), %rdi
    00001e51: 	je	.Ltmp4942 # Offset: 7761
    00001e53: 	movq	0x110(%rsp), %rax
    00001e5b: 	leaq	0x1(%rax), %rsi
    00001e5f: 	callq	_ZdlPvm@PLT # Offset: 7775
.Ltmp4942:
    00001e64: 	cvttsd2si	init_value(%rip), %ebx
    00001e6c: 	movq	0x38(%rsp), %rsi
    00001e71: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001e78: 	movq	%r14, %rdi
    00001e7b: 	movb	%bl, 0x86(%rsp)
    00001e82: 	movb	%bl, 0x80(%rsp)
    00001e89: 	movb	%bl, 0x8c(%rsp)
    00001e90: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7824
    00001e95: 	movq	0x68(%rsp), %rdi
    00001e9a: 	movq	%r14, %rdx
    00001e9d: 	movl	$0x1f40, %esi
    00001ea2: 	callq	_Z24test_struct_const_in_optIa13simple_structIaEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7842
    00001ea7: 	movq	0x100(%rsp), %rdi
    00001eaf: 	cmpq	0x30(%rsp), %rdi
    00001eb4: 	je	.Ltmp4943 # Offset: 7860
    00001eb6: 	movq	0x110(%rsp), %rax
    00001ebe: 	leaq	0x1(%rax), %rsi
    00001ec2: 	callq	_ZdlPvm@PLT # Offset: 7874
.Ltmp4943:
    00001ec7: 	movq	0x38(%rsp), %rsi
    00001ecc: 	leaq	DATAat0x3d475(%rip), %rdx
    00001ed3: 	movq	%r14, %rdi
    00001ed6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7894
    00001edb: 	callq	clock@PLT # Offset: 7899
    00001ee0: 	movl	iterations(%rip), %edi
    00001ee6: 	xorl	%ebp, %ebp
    00001ee8: 	shll	$0x6, %ebx
    00001eeb: 	movq	%rax, start_time(%rip)
    00001ef2: 	leaq	DATAat0x3d1c8(%rip), %r12
    00001ef9: 	testl	%edi, %edi
    00001efb: 	jle	.Ltmp4944 # Offset: 7931
.Ltmp4996:
    00001efd: 	cvttsd2si	init_value(%rip), %eax
    00001f05: 	shll	$0x6, %eax
    00001f08: 	cmpb	%al, %bl
    00001f0a: 	jne	.Ltmp4945 # Offset: 7946
.Ltmp4944:
    00001f10: 	movq	%r14, %rsi
    00001f13: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f1a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7962
    00001f1f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f26: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f2d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f34: 	je	.Ltmp4946 # Offset: 7988
.Ltmp5007:
    00001f3a: 	movq	-0x20(%rax), %rbp
    00001f3e: 	callq	clock@PLT # Offset: 7998
    00001f43: 	pxor	%xmm0, %xmm0
    00001f47: 	movq	%rax, end_time(%rip)
    00001f4e: 	movq	%rbp, %rdi
    00001f51: 	subq	start_time(%rip), %rax
    00001f58: 	cvtsi2sd	%rax, %xmm0
    00001f5d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f65: 	callq	_Z13record_resultdPKc # Offset: 8037
    00001f6a: 	movq	0x100(%rsp), %rdi
    00001f72: 	cmpq	0x30(%rsp), %rdi
    00001f77: 	je	.Ltmp4947 # Offset: 8055
    00001f79: 	movq	0x110(%rsp), %rax
    00001f81: 	leaq	0x1(%rax), %rsi
    00001f85: 	callq	_ZdlPvm@PLT # Offset: 8069
.Ltmp4947:
    00001f8a: 	movq	0x38(%rsp), %rsi
    00001f8f: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001f96: 	movq	%r14, %rdi
    00001f99: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8089
    00001f9e: 	callq	clock@PLT # Offset: 8094
    00001fa3: 	movl	iterations(%rip), %esi
    00001fa9: 	movq	%rax, start_time(%rip)
    00001fb0: 	testl	%esi, %esi
    00001fb2: 	jle	.Ltmp4948 # Offset: 8114
    00001fb4: 	movzbl	0x209f(%rsp), %edx
    00001fbc: 	movslq	%r13d, %rax
    00001fbf: 	movb	%dl, 0x120(%rsp,%rax)
.Ltmp4948:
    00001fc6: 	movq	%r14, %rsi
    00001fc9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fd0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8144
    00001fd5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fdc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fe3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fea: 	je	.Ltmp4949 # Offset: 8170
.Ltmp5006:
    00001ff0: 	movq	-0x20(%rax), %rbp
    00001ff4: 	callq	clock@PLT # Offset: 8180
    00001ff9: 	pxor	%xmm0, %xmm0
    00001ffd: 	movq	%rax, end_time(%rip)
    00002004: 	movq	%rbp, %rdi
    00002007: 	subq	start_time(%rip), %rax
    0000200e: 	cvtsi2sd	%rax, %xmm0
    00002013: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000201b: 	callq	_Z13record_resultdPKc # Offset: 8219
    00002020: 	movq	0x100(%rsp), %rdi
    00002028: 	cmpq	0x30(%rsp), %rdi
    0000202d: 	je	.Ltmp4950 # Offset: 8237
    0000202f: 	movq	0x110(%rsp), %rax
    00002037: 	leaq	0x1(%rax), %rsi
    0000203b: 	callq	_ZdlPvm@PLT # Offset: 8251
.Ltmp4950:
    00002040: 	movq	0x38(%rsp), %rsi
    00002045: 	leaq	DATAat0x3d49d(%rip), %rdx
    0000204c: 	movq	%r14, %rdi
    0000204f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8271
    00002054: 	callq	clock@PLT # Offset: 8276
    00002059: 	movl	iterations(%rip), %ecx
    0000205f: 	movq	%rax, start_time(%rip)
    00002066: 	testl	%ecx, %ecx
    00002068: 	jle	.Ltmp4951 # Offset: 8296
    0000206a: 	movzbl	0x209f(%rsp), %eax
    00002072: 	movb	%al, 0x120(%rsp,%r13)
.Ltmp4951:
    0000207a: 	movq	%r14, %rsi
    0000207d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002084: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8324
    00002089: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002090: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002097: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000209e: 	je	.Ltmp4952 # Offset: 8350
.Ltmp5005:
    000020a4: 	movq	-0x20(%rax), %rbp
    000020a8: 	callq	clock@PLT # Offset: 8360
    000020ad: 	pxor	%xmm0, %xmm0
    000020b1: 	movq	%rax, end_time(%rip)
    000020b8: 	movq	%rbp, %rdi
    000020bb: 	subq	start_time(%rip), %rax
    000020c2: 	cvtsi2sd	%rax, %xmm0
    000020c7: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000020cf: 	callq	_Z13record_resultdPKc # Offset: 8399
    000020d4: 	movq	0x100(%rsp), %rdi
    000020dc: 	cmpq	0x30(%rsp), %rdi
    000020e1: 	je	.Ltmp4953 # Offset: 8417
    000020e3: 	movq	0x110(%rsp), %rax
    000020eb: 	leaq	0x1(%rax), %rsi
    000020ef: 	callq	_ZdlPvm@PLT # Offset: 8431
.Ltmp4953:
    000020f4: 	movq	0x38(%rsp), %rsi
    000020f9: 	leaq	DATAat0x3d4ac(%rip), %rdx
    00002100: 	movq	%r14, %rdi
    00002103: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8451
    00002108: 	callq	clock@PLT # Offset: 8456
    0000210d: 	movl	iterations(%rip), %edx
    00002113: 	movq	%rax, start_time(%rip)
    0000211a: 	testl	%edx, %edx
    0000211c: 	jle	.Ltmp4954 # Offset: 8476
    0000211e: 	movzbl	0x209f(%rsp), %eax
    00002126: 	movb	%al, 0x86(%rsp)
.Ltmp4954:
    0000212d: 	movq	%r14, %rsi
    00002130: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002137: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8503
    0000213c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002143: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000214a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002151: 	je	.Ltmp4955 # Offset: 8529
.Ltmp5004:
    00002157: 	movq	-0x20(%rax), %rbp
    0000215b: 	callq	clock@PLT # Offset: 8539
    00002160: 	pxor	%xmm0, %xmm0
    00002164: 	movq	%rax, end_time(%rip)
    0000216b: 	movq	%rbp, %rdi
    0000216e: 	subq	start_time(%rip), %rax
    00002175: 	cvtsi2sd	%rax, %xmm0
    0000217a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002182: 	callq	_Z13record_resultdPKc # Offset: 8578
    00002187: 	movq	0x100(%rsp), %rdi
    0000218f: 	cmpq	0x30(%rsp), %rdi
    00002194: 	je	.Ltmp4956 # Offset: 8596
    00002196: 	movq	0x110(%rsp), %rax
    0000219e: 	leaq	0x1(%rax), %rsi
    000021a2: 	callq	_ZdlPvm@PLT # Offset: 8610
.Ltmp4956:
    000021a7: 	movq	0x38(%rsp), %rsi
    000021ac: 	leaq	DATAat0x3d4c0(%rip), %rdx
    000021b3: 	movq	%r14, %rdi
    000021b6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8630
    000021bb: 	callq	clock@PLT # Offset: 8635
    000021c0: 	movq	%rax, start_time(%rip)
    000021c7: 	movl	iterations(%rip), %eax
    000021cd: 	testl	%eax, %eax
    000021cf: 	jle	.Ltmp4957 # Offset: 8655
    000021d1: 	movzbl	0x209f(%rsp), %eax
    000021d9: 	movb	%al, 0x86(%rsp)
.Ltmp4957:
    000021e0: 	movq	%r14, %rsi
    000021e3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021ea: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8682
    000021ef: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021f6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002204: 	je	.Ltmp4958 # Offset: 8708
.Ltmp5003:
    0000220a: 	movq	-0x20(%rax), %rbp
    0000220e: 	callq	clock@PLT # Offset: 8718
    00002213: 	pxor	%xmm0, %xmm0
    00002217: 	movq	%rax, end_time(%rip)
    0000221e: 	movq	%rbp, %rdi
    00002221: 	subq	start_time(%rip), %rax
    00002228: 	cvtsi2sd	%rax, %xmm0
    0000222d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002235: 	callq	_Z13record_resultdPKc # Offset: 8757
    0000223a: 	movq	0x100(%rsp), %rdi
    00002242: 	cmpq	0x30(%rsp), %rdi
    00002247: 	je	.Ltmp4959 # Offset: 8775
    00002249: 	movq	0x110(%rsp), %rax
    00002251: 	leaq	0x1(%rax), %rsi
    00002255: 	callq	_ZdlPvm@PLT # Offset: 8789
.Ltmp4959:
    0000225a: 	movq	0x38(%rsp), %rbx
    0000225f: 	leaq	0xe0(%rsp), %rdi
    00002267: 	leaq	DATAat0x3d4d0(%rip), %rdx
    0000226e: 	movq	%rbx, %rsi
    00002271: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8817
    00002276: 	movl	iterations(%rip), %edx
    0000227c: 	xorl	%r8d, %r8d
    0000227f: 	xorl	%ecx, %ecx
    00002281: 	movl	$0x1f40, %esi
    00002286: 	movq	0xe0(%rsp), %rdi
    0000228e: 	callq	_Z9summarizePKciiii # Offset: 8846
    00002293: 	movsd	DATAat0x3d708(%rip), %xmm0
    0000229b: 	leaq	DATAat0x3d4e7(%rip), %rdx
    000022a2: 	movq	%rbx, %rsi
    000022a5: 	movq	%r14, %rdi
    000022a8: 	addsd	init_value(%rip), %xmm0
    000022b0: 	cvttsd2si	%xmm0, %r12d
    000022b5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8885
    000022ba: 	callq	clock@PLT # Offset: 8890
    000022bf: 	movl	iterations(%rip), %ebp
    000022c5: 	movsbl	%r12b, %r12d
    000022c9: 	movq	%rax, start_time(%rip)
    000022d0: 	testl	%ebp, %ebp
    000022d2: 	jle	.Ltmp4960 # Offset: 8914
    000022d8: 	pxor	%xmm3, %xmm3
    000022dc: 	xorl	%ebx, %ebx
    000022de: 	leaq	DATAat0x3d1c8(%rip), %r13
    000022e5: 	cvtsi2sd	%r12d, %xmm3
    000022ea: 	movsd	%xmm3, (%rsp)
    000022ef: 	nop # Size: 1
.Ltmp4962:
    000022f0: 	movq	DATAat0x3d6b8(%rip), %rax
    000022f7: 	movsd	(%rsp), %xmm0
    000022fc: 	movq	%rax, %xmm1
    00002301: 	callq	pow@PLT # Offset: 8961
    00002306: 	movq	DATAat0x3d6b8(%rip), %rax
    0000230d: 	movq	%xmm0, %r15
    00002312: 	movsd	(%rsp), %xmm0
    00002317: 	movq	%rax, %xmm1
    0000231c: 	callq	pow@PLT # Offset: 8988
    00002321: 	movq	%r15, %xmm5
    00002326: 	cvttsd2si	%xmm5, %edx
    0000232a: 	cvttsd2si	%xmm0, %eax
    0000232e: 	shll	$0x6, %edx
    00002331: 	shll	$0x6, %eax
    00002334: 	cmpb	%al, %dl
    00002336: 	je	.Ltmp4961 # Offset: 9014
    00002338: 	movq	0x100(%rsp), %rdx
    00002340: 	movq	%r13, %rsi
    00002343: 	movl	$0x1, %edi
    00002348: 	xorl	%eax, %eax
    0000234a: 	callq	__printf_chk@PLT # Offset: 9034
    0000234f: 	movl	iterations(%rip), %ebp
.Ltmp4961:
    00002355: 	addl	$0x1, %ebx
    00002358: 	cmpl	%ebp, %ebx
    0000235a: 	jl	.Ltmp4962 # Offset: 9050
.Ltmp4960:
    0000235c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002363: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000236a: 	subq	$0x20, %rax
    0000236e: 	cmpq	%rax, %rbx
    00002371: 	je	.Ltmp4963 # Offset: 9073
    00002377: 	leaq	0x10(%rbx), %rdi
    0000237b: 	movq	0x108(%rsp), %r13
    00002383: 	movq	%rdi, (%rbx)
    00002386: 	movq	0x100(%rsp), %rbp
    0000238e: 	movq	%rbp, %rax
    00002391: 	addq	%r13, %rax
    00002394: 	je	.Ltmp4964 # Offset: 9108
    00002396: 	testq	%rbp, %rbp
    00002399: 	je	.Ltmp4965 # Offset: 9113
.Ltmp4964:
    0000239f: 	movq	%r13, 0x78(%rsp)
    000023a4: 	cmpq	$0xf, %r13
    000023a8: 	ja	.Ltmp4966 # Offset: 9128
    000023ae: 	cmpq	$0x1, %r13
    000023b2: 	jne	.Ltmp4967 # Offset: 9138
    000023b8: 	movzbl	(%rbp), %eax
    000023bc: 	movb	%al, 0x10(%rbx)
.Ltmp4997:
    000023bf: 	movq	%r13, 0x8(%rbx)
    000023c3: 	movb	$0x0, (%rdi,%r13)
    000023c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023cf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023d6: 	addq	$0x20, %rax
    000023da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000023e1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000023e8: 	je	.Ltmp4968 # Offset: 9192
.Ltmp5000:
    000023ee: 	movq	-0x20(%rax), %rbp
    000023f2: 	callq	clock@PLT # Offset: 9202
    000023f7: 	pxor	%xmm0, %xmm0
    000023fb: 	movq	%rax, end_time(%rip)
    00002402: 	movq	%rbp, %rdi
    00002405: 	subq	start_time(%rip), %rax
    0000240c: 	cvtsi2sd	%rax, %xmm0
    00002411: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002419: 	callq	_Z13record_resultdPKc # Offset: 9241
    0000241e: 	movq	0x100(%rsp), %rdi
    00002426: 	cmpq	0x30(%rsp), %rdi
    0000242b: 	je	.Ltmp4969 # Offset: 9259
    0000242d: 	movq	0x110(%rsp), %rax
    00002435: 	leaq	0x1(%rax), %rsi
    00002439: 	callq	_ZdlPvm@PLT # Offset: 9273
.Ltmp4969:
    0000243e: 	movq	0x38(%rsp), %rsi
    00002443: 	leaq	DATAat0x3d501(%rip), %rdx
    0000244a: 	movq	%r14, %rdi
    0000244d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9293
    00002452: 	leaq	_Z10test_powerIaET_S0_(%rip), %rbp
    00002459: 	movq	%r14, %rdx
    0000245c: 	movl	%r12d, %edi
    0000245f: 	movq	%rbp, %rsi
    00002462: 	callq	"_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9314
    00002467: 	movq	0x100(%rsp), %rdi
    0000246f: 	cmpq	0x30(%rsp), %rdi
    00002474: 	je	.Ltmp4970 # Offset: 9332
    00002476: 	movq	0x110(%rsp), %rax
    0000247e: 	leaq	0x1(%rax), %rsi
    00002482: 	callq	_ZdlPvm@PLT # Offset: 9346
.Ltmp4970:
    00002487: 	movq	0x38(%rsp), %rsi
    0000248c: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002493: 	movq	%r14, %rdi
    00002496: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9366
    0000249b: 	movq	%r14, %rdx
    0000249e: 	movq	%rbp, %rsi
    000024a1: 	movl	%r12d, %edi
    000024a4: 	callq	"_Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9380
    000024a9: 	movq	0x100(%rsp), %rdi
    000024b1: 	cmpq	0x30(%rsp), %rdi
    000024b6: 	je	.Ltmp4971 # Offset: 9398
    000024b8: 	movq	0x110(%rsp), %rax
    000024c0: 	leaq	0x1(%rax), %rsi
    000024c4: 	callq	_ZdlPvm@PLT # Offset: 9412
.Ltmp4971:
    000024c9: 	movq	0x38(%rsp), %rsi
    000024ce: 	leaq	DATAat0x3d535(%rip), %rdx
    000024d5: 	movq	%r14, %rdi
    000024d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9432
    000024dd: 	callq	clock@PLT # Offset: 9437
    000024e2: 	movq	%r14, %rsi
    000024e5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000024ec: 	movq	%rax, start_time(%rip)
    000024f3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9459
    000024f8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000024ff: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002506: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000250d: 	je	.Ltmp4972 # Offset: 9485
.Ltmp5001:
    00002513: 	movq	-0x20(%rax), %rbp
    00002517: 	callq	clock@PLT # Offset: 9495
    0000251c: 	pxor	%xmm0, %xmm0
    00002520: 	movq	%rax, end_time(%rip)
    00002527: 	movq	%rbp, %rdi
    0000252a: 	subq	start_time(%rip), %rax
    00002531: 	cvtsi2sd	%rax, %xmm0
    00002536: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000253e: 	callq	_Z13record_resultdPKc # Offset: 9534
    00002543: 	movq	0x100(%rsp), %rdi
    0000254b: 	cmpq	0x30(%rsp), %rdi
    00002550: 	je	.Ltmp4973 # Offset: 9552
    00002552: 	movq	0x110(%rsp), %rax
    0000255a: 	leaq	0x1(%rax), %rsi
    0000255e: 	callq	_ZdlPvm@PLT # Offset: 9566
.Ltmp4973:
    00002563: 	movq	0x38(%rsp), %rsi
    00002568: 	leaq	DATAat0x3d640(%rip), %rdx
    0000256f: 	movq	%r14, %rdi
    00002572: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9586
    00002577: 	leaq	_Z8test_cosIaET_S0_(%rip), %rbp
    0000257e: 	movq	%r14, %rdx
    00002581: 	movl	%r12d, %edi
    00002584: 	movq	%rbp, %rsi
    00002587: 	callq	"_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9607
    0000258c: 	movq	0x100(%rsp), %rdi
    00002594: 	cmpq	0x30(%rsp), %rdi
    00002599: 	je	.Ltmp4974 # Offset: 9625
    0000259b: 	movq	0x110(%rsp), %rax
    000025a3: 	leaq	0x1(%rax), %rsi
    000025a7: 	callq	_ZdlPvm@PLT # Offset: 9639
.Ltmp4974:
    000025ac: 	movq	0x38(%rsp), %rsi
    000025b1: 	leaq	DATAat0x3d550(%rip), %rdx
    000025b8: 	movq	%r14, %rdi
    000025bb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9659
    000025c0: 	movq	%r14, %rdx
    000025c3: 	movq	%rbp, %rsi
    000025c6: 	movl	%r12d, %edi
    000025c9: 	callq	"_Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9673
    000025ce: 	movq	0x100(%rsp), %rdi
    000025d6: 	cmpq	0x30(%rsp), %rdi
    000025db: 	je	.Ltmp4975 # Offset: 9691
    000025dd: 	movq	0x110(%rsp), %rax
    000025e5: 	leaq	0x1(%rax), %rsi
    000025e9: 	callq	_ZdlPvm@PLT # Offset: 9705
.Ltmp4975:
    000025ee: 	movq	0x38(%rsp), %rsi
    000025f3: 	leaq	DATAat0x3d567(%rip), %rdx
    000025fa: 	movq	%r14, %rdi
    000025fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9725
    00002602: 	callq	clock@PLT # Offset: 9730
    00002607: 	movq	%r14, %rsi
    0000260a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002611: 	movq	%rax, start_time(%rip)
    00002618: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9752
    0000261d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002624: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000262b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002632: 	je	.Ltmp4976 # Offset: 9778
.Ltmp4999:
    00002638: 	movq	-0x20(%rax), %rbp
    0000263c: 	callq	clock@PLT # Offset: 9788
    00002641: 	pxor	%xmm0, %xmm0
    00002645: 	movq	%rax, end_time(%rip)
    0000264c: 	movq	%rbp, %rdi
    0000264f: 	subq	start_time(%rip), %rax
    00002656: 	cvtsi2sd	%rax, %xmm0
    0000265b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002663: 	callq	_Z13record_resultdPKc # Offset: 9827
    00002668: 	movq	0x100(%rsp), %rdi
    00002670: 	cmpq	0x30(%rsp), %rdi
    00002675: 	je	.Ltmp4977 # Offset: 9845
    00002677: 	movq	0x110(%rsp), %rax
    0000267f: 	leaq	0x1(%rax), %rsi
    00002683: 	callq	_ZdlPvm@PLT # Offset: 9859
.Ltmp4977:
    00002688: 	movq	0x38(%rsp), %rsi
    0000268d: 	leaq	DATAat0x3d660(%rip), %rdx
    00002694: 	movq	%r14, %rdi
    00002697: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9879
    0000269c: 	movq	%r14, %rdx
    0000269f: 	leaq	_Z8test_sqrIaET_S0_(%rip), %rsi
    000026a6: 	movl	%r12d, %edi
    000026a9: 	callq	"_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9897
    000026ae: 	movq	0x100(%rsp), %rdi
    000026b6: 	cmpq	0x30(%rsp), %rdi
    000026bb: 	je	.Ltmp4978 # Offset: 9915
    000026bd: 	movq	0x110(%rsp), %rax
    000026c5: 	leaq	0x1(%rax), %rsi
    000026c9: 	callq	_ZdlPvm@PLT # Offset: 9929
.Ltmp4978:
    000026ce: 	movq	0x38(%rsp), %rsi
    000026d3: 	leaq	DATAat0x3d582(%rip), %rdx
    000026da: 	movq	%r14, %rdi
    000026dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9949
    000026e2: 	callq	clock@PLT # Offset: 9954
    000026e7: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000026ee: 	movq	%rax, start_time(%rip)
    000026f5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000026fc: 	subq	$0x20, %rax
    00002700: 	cmpq	%rax, %rbx
    00002703: 	je	.Ltmp4979 # Offset: 9987
    00002709: 	leaq	0x10(%rbx), %rdi
    0000270d: 	movq	0x108(%rsp), %r13
    00002715: 	movq	%rdi, (%rbx)
    00002718: 	movq	0x100(%rsp), %rbp
    00002720: 	movq	%rbp, %rax
    00002723: 	addq	%r13, %rax
    00002726: 	je	.Ltmp4980 # Offset: 10022
    00002728: 	testq	%rbp, %rbp
    0000272b: 	je	.Ltmp4981 # Offset: 10027
.Ltmp4980:
    00002731: 	movq	%r13, 0x78(%rsp)
    00002736: 	cmpq	$0xf, %r13
    0000273a: 	ja	.Ltmp4982 # Offset: 10042
    00002740: 	cmpq	$0x1, %r13
    00002744: 	jne	.Ltmp4983 # Offset: 10052
    0000274a: 	movzbl	(%rbp), %eax
    0000274e: 	movb	%al, 0x10(%rbx)
.Ltmp5030:
    00002751: 	movq	%r13, 0x8(%rbx)
    00002755: 	movb	$0x0, (%rdi,%r13)
    0000275a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002761: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002768: 	addq	$0x20, %rax
    0000276c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002773: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000277a: 	je	.Ltmp4984 # Offset: 10106
.Ltmp4998:
    00002780: 	movq	-0x20(%rax), %rbp
    00002784: 	callq	clock@PLT # Offset: 10116
    00002789: 	pxor	%xmm0, %xmm0
    0000278d: 	movq	%rax, end_time(%rip)
    00002794: 	movq	%rbp, %rdi
    00002797: 	subq	start_time(%rip), %rax
    0000279e: 	cvtsi2sd	%rax, %xmm0
    000027a3: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000027ab: 	callq	_Z13record_resultdPKc # Offset: 10155
    000027b0: 	movq	0x100(%rsp), %rdi
    000027b8: 	cmpq	0x30(%rsp), %rdi
    000027bd: 	je	.Ltmp4985 # Offset: 10173
    000027bf: 	movq	0x110(%rsp), %rax
    000027c7: 	leaq	0x1(%rax), %rsi
    000027cb: 	callq	_ZdlPvm@PLT # Offset: 10187
.Ltmp4985:
    000027d0: 	movq	0x38(%rsp), %rsi
    000027d5: 	leaq	DATAat0x3d599(%rip), %rdx
    000027dc: 	movq	%r14, %rdi
    000027df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10207
    000027e4: 	callq	clock@PLT # Offset: 10212
    000027e9: 	movq	%r14, %rsi
    000027ec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000027f3: 	movq	%rax, start_time(%rip)
    000027fa: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10234
    000027ff: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002806: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000280d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002814: 	je	.Ltmp4986 # Offset: 10260
.Ltmp5002:
    0000281a: 	movq	-0x20(%rax), %rbp
    0000281e: 	callq	clock@PLT # Offset: 10270
    00002823: 	pxor	%xmm0, %xmm0
    00002827: 	movq	%rax, end_time(%rip)
    0000282e: 	movq	%rbp, %rdi
    00002831: 	subq	start_time(%rip), %rax
    00002838: 	cvtsi2sd	%rax, %xmm0
    0000283d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002845: 	callq	_Z13record_resultdPKc # Offset: 10309
    0000284a: 	movq	0x100(%rsp), %rdi
    00002852: 	cmpq	0x30(%rsp), %rdi
    00002857: 	je	.Ltmp4987 # Offset: 10327
    00002859: 	movq	0x110(%rsp), %rax
    00002861: 	leaq	0x1(%rax), %rsi
    00002865: 	callq	_ZdlPvm@PLT # Offset: 10341
.Ltmp4987:
    0000286a: 	movq	0x38(%rsp), %rsi
    0000286f: 	leaq	DATAat0x3d5b2(%rip), %rdx
    00002876: 	movq	%r14, %rdi
    00002879: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10361
    0000287e: 	leaq	_Z9test_hashIaET_S0_(%rip), %rbp
    00002885: 	movq	%r14, %rdx
    00002888: 	movl	%r12d, %edi
    0000288b: 	movq	%rbp, %rsi
    0000288e: 	callq	"_Z27test_const_function_halfoptIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10382
    00002893: 	movq	0x100(%rsp), %rdi
    0000289b: 	cmpq	0x30(%rsp), %rdi
    000028a0: 	je	.Ltmp4988 # Offset: 10400
    000028a2: 	movq	0x110(%rsp), %rax
    000028aa: 	leaq	0x1(%rax), %rsi
    000028ae: 	callq	_ZdlPvm@PLT # Offset: 10414
.Ltmp4988:
    000028b3: 	movq	0x38(%rsp), %rsi
    000028b8: 	leaq	DATAat0x3d5cf(%rip), %rdx
    000028bf: 	movq	%r14, %rdi
    000028c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10434
    000028c7: 	movq	%r14, %rdx
    000028ca: 	movq	%rbp, %rsi
    000028cd: 	movl	%r12d, %edi
    000028d0: 	callq	"_Z19test_const_functionIaPFaaEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10448
    000028d5: 	movq	0x100(%rsp), %rdi
    000028dd: 	cmpq	0x30(%rsp), %rdi
    000028e2: 	je	.Ltmp4989 # Offset: 10466
    000028e4: 	movq	0x110(%rsp), %rax
    000028ec: 	leaq	0x1(%rax), %rsi
    000028f0: 	callq	_ZdlPvm@PLT # Offset: 10480
.Ltmp4989:
    000028f5: 	movq	0x38(%rsp), %rsi
    000028fa: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002901: 	movq	%r14, %rdi
    00002904: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10500
    00002909: 	movl	iterations(%rip), %edx
    0000290f: 	xorl	%r8d, %r8d
    00002912: 	xorl	%ecx, %ecx
    00002914: 	movl	$0x1f40, %esi
    00002919: 	movq	0x100(%rsp), %rdi
    00002921: 	callq	_Z9summarizePKciiii # Offset: 10529
    00002926: 	movq	0x100(%rsp), %rdi
    0000292e: 	cmpq	0x30(%rsp), %rdi
    00002933: 	je	.Ltmp4990 # Offset: 10547
    00002935: 	movq	0x110(%rsp), %rax
    0000293d: 	leaq	0x1(%rax), %rsi
    00002941: 	callq	_ZdlPvm@PLT # Offset: 10561
.Ltmp4990:
    00002946: 	movq	0xe0(%rsp), %rdi
    0000294e: 	leaq	0xf0(%rsp), %rax
    00002956: 	cmpq	%rax, %rdi
    00002959: 	je	.Ltmp4991 # Offset: 10585
    0000295b: 	movq	0xf0(%rsp), %rax
    00002963: 	leaq	0x1(%rax), %rsi
    00002967: 	callq	_ZdlPvm@PLT # Offset: 10599
.Ltmp4991:
    0000296c: 	movq	0xc0(%rsp), %rdi
    00002974: 	leaq	0xd0(%rsp), %rax
    0000297c: 	cmpq	%rax, %rdi
    0000297f: 	je	.Ltmp4992 # Offset: 10623
    00002981: 	movq	0xd0(%rsp), %rax
    00002989: 	leaq	0x1(%rax), %rsi
    0000298d: 	callq	_ZdlPvm@PLT # Offset: 10637
.Ltmp4992:
    00002992: 	movq	0xa0(%rsp), %rdi
    0000299a: 	cmpq	0x60(%rsp), %rdi
    0000299f: 	je	.Ltmp4993 # Offset: 10655
    000029a1: 	movq	0xb0(%rsp), %rax
    000029a9: 	leaq	0x1(%rax), %rsi
    000029ad: 	callq	_ZdlPvm@PLT # Offset: 10669
.Ltmp4993:
    000029b2: 	movq	0x20a8(%rsp), %rax
    000029ba: 	subq	%fs:0x28, %rax
    000029c3: 	jne	.Ltmp4994 # Offset: 10691
    000029c9: 	addq	$0x20b8, %rsp
    000029d0: 	popq	%rbx
    000029d1: 	popq	%rbp
    000029d2: 	popq	%r12
    000029d4: 	popq	%r13
    000029d6: 	popq	%r14
    000029d8: 	popq	%r15
    000029da: 	retq # Offset: 10714
    000029db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4940:
    000029e0: 	movq	0x100(%rsp), %rdx
    000029e8: 	movq	%r12, %rsi
    000029eb: 	movl	$0x1, %edi
    000029f0: 	xorl	%eax, %eax
    000029f2: 	callq	__printf_chk@PLT # Offset: 10738
    000029f7: 	addl	$0x1, %ebx
    000029fa: 	cmpl	iterations(%rip), %ebx
    00002a00: 	jl	.Ltmp4995 # Offset: 10752
    00002a06: 	jmp	.Ltmp4939 # Offset: 10758
    00002a0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4945:
    00002a10: 	movq	0x100(%rsp), %rdx
    00002a18: 	movq	%r12, %rsi
    00002a1b: 	movl	$0x1, %edi
    00002a20: 	xorl	%eax, %eax
    00002a22: 	callq	__printf_chk@PLT # Offset: 10786
    00002a27: 	addl	$0x1, %ebp
    00002a2a: 	cmpl	%ebp, iterations(%rip)
    00002a30: 	jg	.Ltmp4996 # Offset: 10800
    00002a36: 	jmp	.Ltmp4944 # Offset: 10806
.Ltmp4966:
    00002a3b: 	leaq	0x78(%rsp), %rsi
    00002a40: 	xorl	%edx, %edx
    00002a42: 	movq	%rbx, %rdi
    00002a45: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10821
    00002a4a: 	movq	%rax, (%rbx)
    00002a4d: 	movq	%rax, %rdi
    00002a50: 	movq	0x78(%rsp), %rax
    00002a55: 	movq	%rax, 0x10(%rbx)
.Ltmp5029:
    00002a59: 	movq	%r13, %rdx
    00002a5c: 	movq	%rbp, %rsi
    00002a5f: 	callq	memcpy@PLT # Offset: 10847
    00002a64: 	movq	0x78(%rsp), %r13
    00002a69: 	movq	(%rbx), %rdi
    00002a6c: 	jmp	.Ltmp4997 # Offset: 10860
.Ltmp4979:
    00002a71: 	movq	%r14, %rsi
    00002a74: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002a7b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10875
    00002a80: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002a87: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002a8e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002a95: 	jne	.Ltmp4998 # Offset: 10901
.Ltmp4984:
    00002a9b: 	movq	-0x8(%rdx), %rax
    00002a9f: 	addq	$0x200, %rax
    00002aa5: 	jmp	.Ltmp4998 # Offset: 10917
.Ltmp4976:
    00002aaa: 	movq	-0x8(%rdx), %rax
    00002aae: 	addq	$0x200, %rax
    00002ab4: 	jmp	.Ltmp4999 # Offset: 10932
.Ltmp4963:
    00002ab9: 	movq	%r14, %rsi
    00002abc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002ac3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 10947
    00002ac8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002acf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002ad6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002add: 	jne	.Ltmp5000 # Offset: 10973
.Ltmp4968:
    00002ae3: 	movq	-0x8(%rdx), %rax
    00002ae7: 	addq	$0x200, %rax
    00002aed: 	jmp	.Ltmp5000 # Offset: 10989
.Ltmp4972:
    00002af2: 	movq	-0x8(%rdx), %rax
    00002af6: 	addq	$0x200, %rax
    00002afc: 	jmp	.Ltmp5001 # Offset: 11004
.Ltmp4986:
    00002b01: 	movq	-0x8(%rdx), %rax
    00002b05: 	addq	$0x200, %rax
    00002b0b: 	jmp	.Ltmp5002 # Offset: 11019
.Ltmp4958:
    00002b10: 	movq	-0x8(%rdx), %rax
    00002b14: 	addq	$0x200, %rax
    00002b1a: 	jmp	.Ltmp5003 # Offset: 11034
.Ltmp4955:
    00002b1f: 	movq	-0x8(%rdx), %rax
    00002b23: 	addq	$0x200, %rax
    00002b29: 	jmp	.Ltmp5004 # Offset: 11049
.Ltmp4952:
    00002b2e: 	movq	-0x8(%rdx), %rax
    00002b32: 	addq	$0x200, %rax
    00002b38: 	jmp	.Ltmp5005 # Offset: 11064
.Ltmp4949:
    00002b3d: 	movq	-0x8(%rdx), %rax
    00002b41: 	addq	$0x200, %rax
    00002b47: 	jmp	.Ltmp5006 # Offset: 11079
.Ltmp4946:
    00002b4c: 	movq	-0x8(%rdx), %rax
    00002b50: 	addq	$0x200, %rax
    00002b56: 	jmp	.Ltmp5007 # Offset: 11094
.Ltmp4941:
    00002b5b: 	movq	-0x8(%rdx), %rax
    00002b5f: 	addq	$0x200, %rax
    00002b65: 	jmp	.Ltmp5008 # Offset: 11109
.Ltmp4936:
    00002b6a: 	movq	-0x8(%rdx), %rax
    00002b6e: 	addq	$0x200, %rax
    00002b74: 	jmp	.Ltmp5009 # Offset: 11124
.Ltmp4930:
    00002b79: 	movq	-0x8(%rdx), %rax
    00002b7d: 	addq	$0x200, %rax
    00002b83: 	jmp	.Ltmp5010 # Offset: 11139
.Ltmp4924:
    00002b88: 	movq	-0x8(%rdx), %rax
    00002b8c: 	addq	$0x200, %rax
    00002b92: 	jmp	.Ltmp5011 # Offset: 11154
.Ltmp4918:
    00002b97: 	movq	-0x8(%rdx), %rax
    00002b9b: 	addq	$0x200, %rax
    00002ba1: 	jmp	.Ltmp5012 # Offset: 11169
.Ltmp4912:
    00002ba6: 	movq	-0x8(%rdx), %rax
    00002baa: 	addq	$0x200, %rax
    00002bb0: 	jmp	.Ltmp5013 # Offset: 11184
.Ltmp4906:
    00002bb5: 	movq	-0x8(%rdx), %rax
    00002bb9: 	addq	$0x200, %rax
    00002bbf: 	jmp	.Ltmp5014 # Offset: 11199
.Ltmp4900:
    00002bc4: 	movq	-0x8(%rdx), %rax
    00002bc8: 	addq	$0x200, %rax
    00002bce: 	jmp	.Ltmp5015 # Offset: 11214
.Ltmp4894:
    00002bd3: 	movq	-0x8(%rdx), %rax
    00002bd7: 	addq	$0x200, %rax
    00002bdd: 	jmp	.Ltmp5016 # Offset: 11229
.Ltmp4888:
    00002be2: 	movq	-0x8(%rdx), %rax
    00002be6: 	addq	$0x200, %rax
    00002bec: 	jmp	.Ltmp5017 # Offset: 11244
.Ltmp4882:
    00002bf1: 	movq	-0x8(%rdx), %rax
    00002bf5: 	addq	$0x200, %rax
    00002bfb: 	jmp	.Ltmp5018 # Offset: 11259
.Ltmp4876:
    00002c00: 	movq	-0x8(%rdx), %rax
    00002c04: 	addq	$0x200, %rax
    00002c0a: 	jmp	.Ltmp5019 # Offset: 11274
.Ltmp4870:
    00002c0f: 	movq	-0x8(%rdx), %rax
    00002c13: 	addq	$0x200, %rax
    00002c19: 	jmp	.Ltmp5020 # Offset: 11289
.Ltmp4864:
    00002c1e: 	movq	-0x8(%rdx), %rax
    00002c22: 	addq	$0x200, %rax
    00002c28: 	jmp	.Ltmp5021 # Offset: 11304
.Ltmp4858:
    00002c2d: 	movq	-0x8(%rdx), %rax
    00002c31: 	addq	$0x200, %rax
    00002c37: 	jmp	.Ltmp5022 # Offset: 11319
.Ltmp4852:
    00002c3c: 	movq	-0x8(%rdx), %rax
    00002c40: 	addq	$0x200, %rax
    00002c46: 	jmp	.Ltmp5023 # Offset: 11334
.Ltmp4846:
    00002c4b: 	movq	-0x8(%rdx), %rax
    00002c4f: 	addq	$0x200, %rax
    00002c55: 	jmp	.Ltmp5024 # Offset: 11349
.Ltmp4840:
    00002c5a: 	movq	-0x8(%rdx), %rax
    00002c5e: 	addq	$0x200, %rax
    00002c64: 	jmp	.Ltmp5025 # Offset: 11364
.Ltmp4834:
    00002c69: 	movq	-0x8(%rdx), %rax
    00002c6d: 	addq	$0x200, %rax
    00002c73: 	jmp	.Ltmp5026 # Offset: 11379
.Ltmp4828:
    00002c78: 	movq	-0x8(%rdx), %rax
    00002c7c: 	addq	$0x200, %rax
    00002c82: 	jmp	.Ltmp5027 # Offset: 11394
.Ltmp4822:
    00002c87: 	movq	-0x8(%rdx), %rax
    00002c8b: 	addq	$0x200, %rax
    00002c91: 	jmp	.Ltmp5028 # Offset: 11409
.Ltmp4967:
    00002c96: 	testq	%r13, %r13
    00002c99: 	je	.Ltmp4997 # Offset: 11417
    00002c9f: 	jmp	.Ltmp5029 # Offset: 11423
    00002ca4: 	nopl	(%rax) # Size: 4
.Ltmp4983:
    00002ca8: 	testq	%r13, %r13
    00002cab: 	je	.Ltmp5030 # Offset: 11435
    00002cb1: 	jmp	.Ltmp5031 # Offset: 11441
    00002cb3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp4982:
    00002cb8: 	leaq	0x78(%rsp), %rsi
    00002cbd: 	xorl	%edx, %edx
    00002cbf: 	movq	%rbx, %rdi
    00002cc2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11458
    00002cc7: 	movq	%rax, (%rbx)
    00002cca: 	movq	%rax, %rdi
    00002ccd: 	movq	0x78(%rsp), %rax
    00002cd2: 	movq	%rax, 0x10(%rbx)
.Ltmp5031:
    00002cd6: 	movq	%r13, %rdx
    00002cd9: 	movq	%rbp, %rsi
    00002cdc: 	callq	memcpy@PLT # Offset: 11484
    00002ce1: 	movq	0x78(%rsp), %r13
    00002ce6: 	movq	(%rbx), %rdi
    00002ce9: 	jmp	.Ltmp5030 # Offset: 11497
.Ltmp4981:
    00002cee: 	leaq	DATAat0x3d158(%rip), %rdi
    00002cf5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11509
.Ltmp4994:
    00002cfa: 	callq	__stack_chk_fail@PLT # Offset: 11514
.Ltmp4965:
    00002cff: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d06: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11526
    00002d0b: 	endbr64
.Ltmp5033:
    00002d0f: 	movq	%rax, %rbp
    00002d12: 	jmp	.Ltmp5032 # Offset: 11538
    00002d14: 	endbr64
    00002d18: 	jmp	.Ltmp5033 # Offset: 11544
    00002d1a: 	endbr64
    00002d1e: 	jmp	.Ltmp5033 # Offset: 11550
    00002d20: 	endbr64
    00002d24: 	jmp	.Ltmp5033 # Offset: 11556
.Ltmp5032:
    00002d26: 	movq	0x100(%rsp), %rdi
    00002d2e: 	cmpq	0x30(%rsp), %rdi
    00002d33: 	je	.Ltmp5034 # Offset: 11571
    00002d35: 	movq	0x110(%rsp), %rax
    00002d3d: 	leaq	0x1(%rax), %rsi
    00002d41: 	callq	_ZdlPvm@PLT # Offset: 11585
.Ltmp5034:
    00002d46: 	movq	0xc0(%rsp), %rdi
    00002d4e: 	leaq	0xd0(%rsp), %rax
    00002d56: 	cmpq	%rax, %rdi
    00002d59: 	je	.Ltmp5035 # Offset: 11609
    00002d5b: 	movq	0xd0(%rsp), %rax
    00002d63: 	leaq	0x1(%rax), %rsi
    00002d67: 	callq	_ZdlPvm@PLT # Offset: 11623
.Ltmp5035:
    00002d6c: 	movq	0xa0(%rsp), %rdi
    00002d74: 	cmpq	0x60(%rsp), %rdi
    00002d79: 	je	.Ltmp5036 # Offset: 11641
    00002d7b: 	movq	0xb0(%rsp), %rax
    00002d83: 	leaq	0x1(%rax), %rsi
    00002d87: 	callq	_ZdlPvm@PLT # Offset: 11655
.Ltmp5036:
    00002d8c: 	movq	%rbp, %rdi
    00002d8f: 	callq	_Unwind_Resume@PLT # Offset: 11663
    00002d94: 	endbr64
    00002d98: 	jmp	.Ltmp5033 # Offset: 11672
    00002d9d: 	endbr64
.Ltmp5038:
    00002da1: 	movq	%rax, %rbp
    00002da4: 	jmp	.Ltmp5037 # Offset: 11684
    00002da9: 	endbr64
    00002dad: 	jmp	.Ltmp5038 # Offset: 11693
    00002daf: 	endbr64
    00002db3: 	jmp	.Ltmp5038 # Offset: 11699
    00002db5: 	endbr64
    00002db9: 	jmp	.Ltmp5038 # Offset: 11705
    00002dbb: 	endbr64
    00002dbf: 	jmp	.Ltmp5038 # Offset: 11711
    00002dc1: 	endbr64
    00002dc5: 	jmp	.Ltmp5038 # Offset: 11717
    00002dc7: 	endbr64
    00002dcb: 	jmp	.Ltmp5038 # Offset: 11723
    00002dcd: 	endbr64
    00002dd1: 	jmp	.Ltmp5033 # Offset: 11729
    00002dd6: 	endbr64
    00002dda: 	jmp	.Ltmp5038 # Offset: 11738
    00002ddc: 	endbr64
    00002de0: 	jmp	.Ltmp5038 # Offset: 11744
    00002de2: 	endbr64
    00002de6: 	movq	%rax, %rbp
    00002de9: 	jmp	.Ltmp5035 # Offset: 11753
    00002deb: 	endbr64
.Ltmp5041:
    00002def: 	movq	%rax, %rbp
    00002df2: 	jmp	.Ltmp5039 # Offset: 11762
    00002df4: 	endbr64
    00002df8: 	movq	%rax, %rbp
    00002dfb: 	jmp	.Ltmp5040 # Offset: 11771
    00002dfd: 	endbr64
    00002e01: 	jmp	.Ltmp5033 # Offset: 11777
    00002e06: 	endbr64
    00002e0a: 	jmp	.Ltmp5038 # Offset: 11786
    00002e0c: 	endbr64
    00002e10: 	jmp	.Ltmp5033 # Offset: 11792
.Ltmp5039:
    00002e15: 	movq	0x100(%rsp), %rdi
    00002e1d: 	cmpq	0x30(%rsp), %rdi
    00002e22: 	je	.Ltmp5040 # Offset: 11810
    00002e24: 	movq	0x110(%rsp), %rax
    00002e2c: 	leaq	0x1(%rax), %rsi
    00002e30: 	callq	_ZdlPvm@PLT # Offset: 11824
.Ltmp5040:
    00002e35: 	movq	0xe0(%rsp), %rdi
    00002e3d: 	leaq	0xf0(%rsp), %rax
    00002e45: 	cmpq	%rax, %rdi
    00002e48: 	je	.Ltmp5034 # Offset: 11848
    00002e4e: 	movq	0xf0(%rsp), %rax
    00002e56: 	leaq	0x1(%rax), %rsi
    00002e5a: 	callq	_ZdlPvm@PLT # Offset: 11866
    00002e5f: 	jmp	.Ltmp5034 # Offset: 11871
    00002e64: 	endbr64
    00002e68: 	jmp	.Ltmp5033 # Offset: 11880
    00002e6d: 	endbr64
    00002e71: 	jmp	.Ltmp5033 # Offset: 11889
    00002e76: 	endbr64
    00002e7a: 	jmp	.Ltmp5041 # Offset: 11898
    00002e7f: 	endbr64
    00002e83: 	jmp	.Ltmp5041 # Offset: 11907
    00002e88: 	endbr64
    00002e8c: 	jmp	.Ltmp5041 # Offset: 11916
    00002e91: 	endbr64
    00002e95: 	jmp	.Ltmp5041 # Offset: 11925
    00002e9a: 	endbr64
    00002e9e: 	jmp	.Ltmp5041 # Offset: 11934
    00002ea3: 	endbr64
    00002ea7: 	jmp	.Ltmp5041 # Offset: 11943
    00002eac: 	endbr64
    00002eb0: 	jmp	.Ltmp5041 # Offset: 11952
    00002eb5: 	endbr64
    00002eb9: 	movq	%rax, %rbp
    00002ebc: 	jmp	.Ltmp5042 # Offset: 11964
    00002ebe: 	endbr64
    00002ec2: 	jmp	.Ltmp5038 # Offset: 11970
    00002ec7: 	endbr64
    00002ecb: 	jmp	.Ltmp5033 # Offset: 11979
.Ltmp5042:
    00002ed0: 	movq	0x100(%rsp), %rdi
    00002ed8: 	leaq	0x110(%rsp), %rax
    00002ee0: 	cmpq	%rax, %rdi
    00002ee3: 	je	.Ltmp5035 # Offset: 12003
.Ltmp5043:
    00002ee9: 	movq	0x110(%rsp), %rax
    00002ef1: 	leaq	0x1(%rax), %rsi
    00002ef5: 	callq	_ZdlPvm@PLT # Offset: 12021
    00002efa: 	jmp	.Ltmp5035 # Offset: 12026
    00002eff: 	endbr64
    00002f03: 	movq	%rax, %rbp
    00002f06: 	jmp	.Ltmp5034 # Offset: 12038
    00002f0b: 	endbr64
    00002f0f: 	jmp	.Ltmp5038 # Offset: 12047
    00002f14: 	endbr64
    00002f18: 	jmp	.Ltmp5038 # Offset: 12056
    00002f1d: 	endbr64
    00002f21: 	jmp	.Ltmp5038 # Offset: 12065
    00002f26: 	endbr64
    00002f2a: 	jmp	.Ltmp5038 # Offset: 12074
    00002f2f: 	endbr64
    00002f33: 	jmp	.Ltmp5041 # Offset: 12083
    00002f38: 	endbr64
    00002f3c: 	jmp	.Ltmp5041 # Offset: 12092
    00002f41: 	endbr64
    00002f45: 	jmp	.Ltmp5041 # Offset: 12101
    00002f4a: 	endbr64
    00002f4e: 	jmp	.Ltmp5041 # Offset: 12110
    00002f53: 	endbr64
    00002f57: 	jmp	.Ltmp5041 # Offset: 12119
    00002f5c: 	endbr64
    00002f60: 	jmp	.Ltmp5033 # Offset: 12128
.Ltmp5037:
    00002f65: 	movq	0x100(%rsp), %rdi
    00002f6d: 	cmpq	0x30(%rsp), %rdi
    00002f72: 	jne	.Ltmp5043 # Offset: 12146
    00002f78: 	jmp	.Ltmp5035 # Offset: 12152
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIaEvd"

Binary Function "_Z9TestLoopsIhEvd" after disassembly {
  Number      : 158
  State       : disassembled
  Address     : 0x39720
  Size        : 0x2fa8
  MaxSize     : 0x2fa8
  Offset      : 0x39720
  Section     : .text
  Orc Section : .local.text._Z9TestLoopsIhEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0157:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0xc8, %rsp
    0000002d: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000035: 	movl	$0x5f38, %r9d
    0000003b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000042: 	movsd	%xmm0, (%rsp)
    00000047: 	leaq	0x170(%rsp), %r12
    0000004f: 	leaq	0x110(%rsp), %r15
    00000057: 	movq	%fs:0x28, %rax
    00000060: 	movq	%rax, 0x20b8(%rsp)
    00000068: 	xorl	%eax, %eax
    0000006a: 	leaq	0xc0(%rsp), %rax
    00000072: 	movaps	%xmm7, 0x90(%rsp)
    0000007a: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000082: 	movq	%rax, 0x70(%rsp)
    00000087: 	movq	%rax, 0xb0(%rsp)
    0000008f: 	leaq	0x90(%rsp), %rax
    00000097: 	movq	%rax, %rsi
    0000009a: 	movq	%rax, 0x68(%rsp)
    0000009f: 	movl	$0x746e6975, 0xc0(%rsp)
    000000aa: 	movw	%r9w, 0xc4(%rsp)
    000000b3: 	movb	$0x74, 0xc6(%rsp)
    000000bb: 	movq	$0x7, 0xb8(%rsp)
    000000c7: 	movb	$0x0, 0xc7(%rsp)
    000000cf: 	movaps	%xmm7, 0xa0(%rsp)
    000000d7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 215
    000000dc: 	cvttsd2si	init_value(%rip), %eax
    000000e4: 	movsd	(%rsp), %xmm0
    000000e9: 	movq	%r12, %rdi
    000000ec: 	movabsq	$0x101010101010101, %rdx
    000000f6: 	movl	$0x3e8, %ecx
    000000fb: 	cvttsd2si	%xmm0, %esi
    000000ff: 	movzbl	%al, %eax
    00000102: 	imulq	%rdx, %rax
    00000106: 	leaq	DATAat0x3d273(%rip), %rdx
    0000010d: 	movl	%esi, 0x4c(%rsp)
    00000111: 	movl	%esi, %ebx
    00000113: 	rep		stosq	%rax, %es:(%rdi)
    00000116: 	movl	%esi, %eax
    00000118: 	movl	%esi, %edi
    0000011a: 	addl	%eax, %eax
    0000011c: 	addl	$0x2, %edi
    0000011f: 	movb	%al, 0x10(%rsp)
    00000123: 	movzbl	%al, %eax
    00000126: 	divb	%dil
    00000129: 	movb	%dil, 0x18(%rsp)
    0000012e: 	movq	%r15, %rdi
    00000131: 	addl	%esi, %eax
    00000133: 	movb	%al, 0x34(%rsp)
    00000137: 	leaq	0xb0(%rsp), %rax
    0000013f: 	movq	%rax, %rsi
    00000142: 	movq	%rax, 0x40(%rsp)
    00000147: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 327
    0000014c: 	movzbl	%bl, %eax
    0000014f: 	movl	%ebx, %ebp
    00000151: 	leaq	0x20b0(%rsp), %rbx
    00000159: 	xorl	%r13d, %r13d
    0000015c: 	movl	%eax, 0x7c(%rsp)
    00000160: 	callq	clock@PLT # Offset: 352
    00000165: 	movl	iterations(%rip), %ecx
    0000016b: 	movq	%rax, start_time(%rip)
    00000172: 	testl	%ecx, %ecx
    00000174: 	jle	.Ltmp5044 # Offset: 372
    0000017a: 	movd	%ebp, %xmm0
    0000017e: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000185: 	punpcklbw	%xmm0, %xmm0
    00000189: 	punpcklwd	%xmm0, %xmm0
    0000018d: 	pshufd	$0x0, %xmm0, %xmm7
    00000192: 	movaps	%xmm7, (%rsp)
    00000196: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp5047:
    000001a0: 	movq	%r12, %rax
    000001a3: 	pxor	%xmm0, %xmm0
    000001a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5045:
    000001b0: 	movdqa	(%rsp), %xmm1
    000001b5: 	paddb	(%rax), %xmm1
    000001b9: 	addq	$0x10, %rax
    000001bd: 	paddb	%xmm1, %xmm0
    000001c1: 	cmpq	%rax, %rbx
    000001c4: 	jne	.Ltmp5045 # Offset: 452
    000001c6: 	cvttsd2si	init_value(%rip), %edx
    000001ce: 	movdqa	%xmm0, %xmm1
    000001d2: 	psrldq	$0x8, %xmm1
    000001d7: 	paddb	%xmm1, %xmm0
    000001db: 	pxor	%xmm1, %xmm1
    000001df: 	psadbw	%xmm1, %xmm0
    000001e3: 	addl	%ebp, %edx
    000001e5: 	movd	%xmm0, %eax
    000001e9: 	shll	$0x6, %edx
    000001ec: 	cmpb	%al, %dl
    000001ee: 	je	.Ltmp5046 # Offset: 494
    000001f0: 	movl	current_test(%rip), %edx
    000001f6: 	movq	%r14, %rsi
    000001f9: 	movl	$0x1, %edi
    000001fe: 	xorl	%eax, %eax
    00000200: 	callq	__printf_chk@PLT # Offset: 512
    00000205: 	movl	iterations(%rip), %ecx
.Ltmp5046:
    0000020b: 	addl	$0x1, %r13d
    0000020f: 	cmpl	%ecx, %r13d
    00000212: 	jl	.Ltmp5047 # Offset: 530
.Ltmp5044:
    00000214: 	movq	%r15, %rsi
    00000217: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000021e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 542
    00000223: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000022a: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000231: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000238: 	je	.Ltmp5048 # Offset: 568
.Ltmp5260:
    0000023e: 	movq	-0x20(%rax), %r13
    00000242: 	callq	clock@PLT # Offset: 578
    00000247: 	pxor	%xmm0, %xmm0
    0000024b: 	movq	%rax, end_time(%rip)
    00000252: 	movq	%r13, %rdi
    00000255: 	subq	start_time(%rip), %rax
    0000025c: 	cvtsi2sd	%rax, %xmm0
    00000261: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000269: 	callq	_Z13record_resultdPKc # Offset: 617
    0000026e: 	movq	0x110(%rsp), %rdi
    00000276: 	leaq	0x120(%rsp), %rax
    0000027e: 	movq	%rax, 0x38(%rsp)
    00000283: 	cmpq	%rax, %rdi
    00000286: 	je	.Ltmp5049 # Offset: 646
    00000288: 	movq	0x120(%rsp), %rax
    00000290: 	leaq	0x1(%rax), %rsi
    00000294: 	callq	_ZdlPvm@PLT # Offset: 660
.Ltmp5049:
    00000299: 	movq	0x40(%rsp), %rsi
    0000029e: 	leaq	DATAat0x3d281(%rip), %rdx
    000002a5: 	movq	%r15, %rdi
    000002a8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 680
    000002ad: 	callq	clock@PLT # Offset: 685
    000002b2: 	movzbl	0x4c(%rsp), %r14d
    000002b8: 	xorl	%r13d, %r13d
    000002bb: 	movl	iterations(%rip), %ecx
    000002c1: 	movq	%rax, start_time(%rip)
    000002c8: 	leaq	0x20b0(%rsp), %rbx
    000002d0: 	shll	$0x6, %r14d
    000002d4: 	testl	%ecx, %ecx
    000002d6: 	jle	.Ltmp5050 # Offset: 726
    000002d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5053:
    000002e0: 	movq	%r12, %rax
    000002e3: 	pxor	%xmm0, %xmm0
    000002e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5051:
    000002f0: 	paddb	(%rax), %xmm0
    000002f4: 	addq	$0x10, %rax
    000002f8: 	cmpq	%rbx, %rax
    000002fb: 	jne	.Ltmp5051 # Offset: 763
    000002fd: 	movdqa	%xmm0, %xmm1
    00000301: 	cvttsd2si	init_value(%rip), %edx
    00000309: 	psrldq	$0x8, %xmm1
    0000030e: 	paddb	%xmm1, %xmm0
    00000312: 	pxor	%xmm1, %xmm1
    00000316: 	psadbw	%xmm1, %xmm0
    0000031a: 	movd	%xmm0, %eax
    0000031e: 	addl	%ebp, %edx
    00000320: 	addl	%r14d, %eax
    00000323: 	shll	$0x6, %edx
    00000326: 	cmpb	%dl, %al
    00000328: 	je	.Ltmp5052 # Offset: 808
    0000032a: 	movl	current_test(%rip), %edx
    00000330: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000337: 	movl	$0x1, %edi
    0000033c: 	xorl	%eax, %eax
    0000033e: 	callq	__printf_chk@PLT # Offset: 830
    00000343: 	movl	iterations(%rip), %ecx
.Ltmp5052:
    00000349: 	addl	$0x1, %r13d
    0000034d: 	cmpl	%ecx, %r13d
    00000350: 	jl	.Ltmp5053 # Offset: 848
.Ltmp5050:
    00000352: 	movq	%r15, %rsi
    00000355: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000035c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 860
    00000361: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000368: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000036f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000376: 	je	.Ltmp5054 # Offset: 886
.Ltmp5259:
    0000037c: 	movq	-0x20(%rax), %r13
    00000380: 	callq	clock@PLT # Offset: 896
    00000385: 	pxor	%xmm0, %xmm0
    00000389: 	movq	%rax, end_time(%rip)
    00000390: 	movq	%r13, %rdi
    00000393: 	subq	start_time(%rip), %rax
    0000039a: 	cvtsi2sd	%rax, %xmm0
    0000039f: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000003a7: 	callq	_Z13record_resultdPKc # Offset: 935
    000003ac: 	movq	0x110(%rsp), %rdi
    000003b4: 	cmpq	0x38(%rsp), %rdi
    000003b9: 	je	.Ltmp5055 # Offset: 953
    000003bb: 	movq	0x120(%rsp), %rax
    000003c3: 	leaq	0x1(%rax), %rsi
    000003c7: 	callq	_ZdlPvm@PLT # Offset: 967
.Ltmp5055:
    000003cc: 	movq	0x40(%rsp), %rsi
    000003d1: 	leaq	DATAat0x3d297(%rip), %rdx
    000003d8: 	movq	%r15, %rdi
    000003db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 987
    000003e0: 	movzbl	0x34(%rsp), %eax
    000003e5: 	movl	%eax, 0x60(%rsp)
    000003e9: 	movzbl	0x18(%rsp), %eax
    000003ee: 	movl	%eax, 0x64(%rsp)
    000003f2: 	movzbl	0x10(%rsp), %eax
    000003f7: 	movl	%eax, 0x78(%rsp)
    000003fb: 	callq	clock@PLT # Offset: 1019
    00000400: 	movl	iterations(%rip), %ecx
    00000406: 	movq	%rax, start_time(%rip)
    0000040d: 	testl	%ecx, %ecx
    0000040f: 	jle	.Ltmp5056 # Offset: 1039
    00000415: 	movzbl	0x10(%rsp), %r14d
    0000041b: 	addb	0x18(%rsp), %r14b
    00000420: 	xorl	%r13d, %r13d
    00000423: 	leaq	0x20b0(%rsp), %rbx
    0000042b: 	addb	0x4c(%rsp), %r14b
    00000430: 	addb	0x34(%rsp), %r14b
    00000435: 	movd	%r14d, %xmm0
    0000043a: 	punpcklbw	%xmm0, %xmm0
    0000043e: 	punpcklwd	%xmm0, %xmm0
    00000442: 	pshufd	$0x0, %xmm0, %xmm7
    00000447: 	movaps	%xmm7, (%rsp)
    0000044b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5059:
    00000450: 	movq	%r12, %rax
    00000453: 	pxor	%xmm0, %xmm0
    00000457: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5057:
    00000460: 	movdqa	(%rsp), %xmm1
    00000465: 	paddb	(%rax), %xmm1
    00000469: 	addq	$0x10, %rax
    0000046d: 	paddb	%xmm1, %xmm0
    00000471: 	cmpq	%rax, %rbx
    00000474: 	jne	.Ltmp5057 # Offset: 1140
    00000476: 	cvttsd2si	init_value(%rip), %edx
    0000047e: 	movdqa	%xmm0, %xmm1
    00000482: 	psrldq	$0x8, %xmm1
    00000487: 	paddb	%xmm1, %xmm0
    0000048b: 	pxor	%xmm1, %xmm1
    0000048f: 	psadbw	%xmm1, %xmm0
    00000493: 	addl	%r14d, %edx
    00000496: 	movd	%xmm0, %eax
    0000049a: 	shll	$0x6, %edx
    0000049d: 	cmpb	%al, %dl
    0000049f: 	je	.Ltmp5058 # Offset: 1183
    000004a1: 	movl	current_test(%rip), %edx
    000004a7: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000004ae: 	movl	$0x1, %edi
    000004b3: 	xorl	%eax, %eax
    000004b5: 	callq	__printf_chk@PLT # Offset: 1205
    000004ba: 	movl	iterations(%rip), %ecx
.Ltmp5058:
    000004c0: 	addl	$0x1, %r13d
    000004c4: 	cmpl	%ecx, %r13d
    000004c7: 	jl	.Ltmp5059 # Offset: 1223
.Ltmp5056:
    000004c9: 	movq	%r15, %rsi
    000004cc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000004d3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1235
    000004d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004df: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004ed: 	je	.Ltmp5060 # Offset: 1261
.Ltmp5258:
    000004f3: 	movq	-0x20(%rax), %r13
    000004f7: 	callq	clock@PLT # Offset: 1271
    000004fc: 	pxor	%xmm0, %xmm0
    00000500: 	movq	%rax, end_time(%rip)
    00000507: 	movq	%r13, %rdi
    0000050a: 	subq	start_time(%rip), %rax
    00000511: 	cvtsi2sd	%rax, %xmm0
    00000516: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000051e: 	callq	_Z13record_resultdPKc # Offset: 1310
    00000523: 	movq	0x110(%rsp), %rdi
    0000052b: 	cmpq	0x38(%rsp), %rdi
    00000530: 	je	.Ltmp5061 # Offset: 1328
    00000532: 	movq	0x120(%rsp), %rax
    0000053a: 	leaq	0x1(%rax), %rsi
    0000053e: 	callq	_ZdlPvm@PLT # Offset: 1342
.Ltmp5061:
    00000543: 	movq	0x40(%rsp), %rsi
    00000548: 	leaq	DATAat0x3d2af(%rip), %rdx
    0000054f: 	movq	%r15, %rdi
    00000552: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1362
    00000557: 	callq	clock@PLT # Offset: 1367
    0000055c: 	movl	iterations(%rip), %ecx
    00000562: 	movq	%rax, start_time(%rip)
    00000569: 	testl	%ecx, %ecx
    0000056b: 	jle	.Ltmp5062 # Offset: 1387
    00000571: 	movzbl	0x10(%rsp), %eax
    00000576: 	addb	0x18(%rsp), %al
    0000057a: 	xorl	%r13d, %r13d
    0000057d: 	leaq	0x20b0(%rsp), %rbx
    00000585: 	addb	0x4c(%rsp), %al
    00000589: 	addb	0x34(%rsp), %al
    0000058d: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000594: 	movd	%eax, %xmm0
    00000598: 	punpcklbw	%xmm0, %xmm0
    0000059c: 	punpcklwd	%xmm0, %xmm0
    000005a0: 	pshufd	$0x0, %xmm0, %xmm7
    000005a5: 	movaps	%xmm7, (%rsp)
    000005a9: 	nopl	(%rax) # Size: 7
.Ltmp5065:
    000005b0: 	movq	%r12, %rax
    000005b3: 	pxor	%xmm0, %xmm0
    000005b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5063:
    000005c0: 	movdqa	(%rsp), %xmm1
    000005c5: 	paddb	(%rax), %xmm1
    000005c9: 	addq	$0x10, %rax
    000005cd: 	paddb	%xmm1, %xmm0
    000005d1: 	cmpq	%rbx, %rax
    000005d4: 	jne	.Ltmp5063 # Offset: 1492
    000005d6: 	cvttsd2si	init_value(%rip), %edx
    000005de: 	movdqa	%xmm0, %xmm1
    000005e2: 	psrldq	$0x8, %xmm1
    000005e7: 	paddb	%xmm1, %xmm0
    000005eb: 	pxor	%xmm1, %xmm1
    000005ef: 	psadbw	%xmm1, %xmm0
    000005f3: 	addl	%ebp, %edx
    000005f5: 	addb	0x10(%rsp), %dl
    000005f9: 	movd	%xmm0, %eax
    000005fd: 	addb	0x18(%rsp), %dl
    00000601: 	addb	0x34(%rsp), %dl
    00000605: 	shll	$0x6, %edx
    00000608: 	cmpb	%al, %dl
    0000060a: 	je	.Ltmp5064 # Offset: 1546
    0000060c: 	movl	current_test(%rip), %edx
    00000612: 	movq	%r14, %rsi
    00000615: 	movl	$0x1, %edi
    0000061a: 	xorl	%eax, %eax
    0000061c: 	callq	__printf_chk@PLT # Offset: 1564
    00000621: 	movl	iterations(%rip), %ecx
.Ltmp5064:
    00000627: 	addl	$0x1, %r13d
    0000062b: 	cmpl	%ecx, %r13d
    0000062e: 	jl	.Ltmp5065 # Offset: 1582
.Ltmp5062:
    00000630: 	movq	%r15, %rsi
    00000633: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000063a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1594
    0000063f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000646: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000064d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000654: 	je	.Ltmp5066 # Offset: 1620
.Ltmp5257:
    0000065a: 	movq	-0x20(%rax), %r13
    0000065e: 	callq	clock@PLT # Offset: 1630
    00000663: 	pxor	%xmm0, %xmm0
    00000667: 	movq	%rax, end_time(%rip)
    0000066e: 	movq	%r13, %rdi
    00000671: 	subq	start_time(%rip), %rax
    00000678: 	cvtsi2sd	%rax, %xmm0
    0000067d: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000685: 	callq	_Z13record_resultdPKc # Offset: 1669
    0000068a: 	movq	0x110(%rsp), %rdi
    00000692: 	cmpq	0x38(%rsp), %rdi
    00000697: 	je	.Ltmp5067 # Offset: 1687
    00000699: 	movq	0x120(%rsp), %rax
    000006a1: 	leaq	0x1(%rax), %rsi
    000006a5: 	callq	_ZdlPvm@PLT # Offset: 1701
.Ltmp5067:
    000006aa: 	movq	0x40(%rsp), %rsi
    000006af: 	leaq	DATAat0x3d2c8(%rip), %rdx
    000006b6: 	movq	%r15, %rdi
    000006b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1721
    000006be: 	callq	clock@PLT # Offset: 1726
    000006c3: 	movl	iterations(%rip), %ecx
    000006c9: 	xorl	%r13d, %r13d
    000006cc: 	leaq	0x20b0(%rsp), %rbx
    000006d4: 	movq	%rax, start_time(%rip)
    000006db: 	testl	%ecx, %ecx
    000006dd: 	jle	.Ltmp5068 # Offset: 1757
    000006e3: 	movd	%ebp, %xmm0
    000006e7: 	leaq	DATAat0x3d1d8(%rip), %r14
    000006ee: 	punpcklbw	%xmm0, %xmm0
    000006f2: 	punpcklwd	%xmm0, %xmm0
    000006f6: 	pshufd	$0x0, %xmm0, %xmm7
    000006fb: 	movaps	%xmm7, (%rsp)
    000006ff: 	nop # Size: 1
.Ltmp5071:
    00000700: 	movq	%r12, %rax
    00000703: 	pxor	%xmm0, %xmm0
    00000707: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5069:
    00000710: 	paddb	(%rax), %xmm0
    00000714: 	addq	$0x10, %rax
    00000718: 	psubb	(%rsp), %xmm0
    0000071d: 	cmpq	%rbx, %rax
    00000720: 	jne	.Ltmp5069 # Offset: 1824
    00000722: 	cvttsd2si	init_value(%rip), %edx
    0000072a: 	movdqa	%xmm0, %xmm1
    0000072e: 	psrldq	$0x8, %xmm1
    00000733: 	paddb	%xmm1, %xmm0
    00000737: 	pxor	%xmm1, %xmm1
    0000073b: 	psadbw	%xmm1, %xmm0
    0000073f: 	subl	%ebp, %edx
    00000741: 	movd	%xmm0, %eax
    00000745: 	shll	$0x6, %edx
    00000748: 	cmpb	%al, %dl
    0000074a: 	je	.Ltmp5070 # Offset: 1866
    0000074c: 	movl	current_test(%rip), %edx
    00000752: 	movq	%r14, %rsi
    00000755: 	movl	$0x1, %edi
    0000075a: 	xorl	%eax, %eax
    0000075c: 	callq	__printf_chk@PLT # Offset: 1884
    00000761: 	movl	iterations(%rip), %ecx
.Ltmp5070:
    00000767: 	addl	$0x1, %r13d
    0000076b: 	cmpl	%ecx, %r13d
    0000076e: 	jl	.Ltmp5071 # Offset: 1902
.Ltmp5068:
    00000770: 	movq	%r15, %rsi
    00000773: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000077a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 1914
    0000077f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000786: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000078d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000794: 	je	.Ltmp5072 # Offset: 1940
.Ltmp5256:
    0000079a: 	movq	-0x20(%rax), %r13
    0000079e: 	callq	clock@PLT # Offset: 1950
    000007a3: 	pxor	%xmm0, %xmm0
    000007a7: 	movq	%rax, end_time(%rip)
    000007ae: 	movq	%r13, %rdi
    000007b1: 	subq	start_time(%rip), %rax
    000007b8: 	cvtsi2sd	%rax, %xmm0
    000007bd: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000007c5: 	callq	_Z13record_resultdPKc # Offset: 1989
    000007ca: 	movq	0x110(%rsp), %rdi
    000007d2: 	cmpq	0x38(%rsp), %rdi
    000007d7: 	je	.Ltmp5073 # Offset: 2007
    000007d9: 	movq	0x120(%rsp), %rax
    000007e1: 	leaq	0x1(%rax), %rsi
    000007e5: 	callq	_ZdlPvm@PLT # Offset: 2021
.Ltmp5073:
    000007ea: 	movq	0x40(%rsp), %rsi
    000007ef: 	leaq	DATAat0x3d2db(%rip), %rdx
    000007f6: 	movq	%r15, %rdi
    000007f9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2041
    000007fe: 	callq	clock@PLT # Offset: 2046
    00000803: 	movl	iterations(%rip), %ecx
    00000809: 	movq	%rax, start_time(%rip)
    00000810: 	testl	%ecx, %ecx
    00000812: 	jle	.Ltmp5074 # Offset: 2066
    00000818: 	movzbl	0x10(%rsp), %r14d
    0000081e: 	addb	0x18(%rsp), %r14b
    00000823: 	xorl	%r13d, %r13d
    00000826: 	leaq	0x20b0(%rsp), %rbx
    0000082e: 	addb	0x4c(%rsp), %r14b
    00000833: 	addb	0x34(%rsp), %r14b
    00000838: 	movd	%r14d, %xmm0
    0000083d: 	punpcklbw	%xmm0, %xmm0
    00000841: 	punpcklwd	%xmm0, %xmm0
    00000845: 	pshufd	$0x0, %xmm0, %xmm7
    0000084a: 	movaps	%xmm7, (%rsp)
    0000084e: 	nop # Size: 2
.Ltmp5077:
    00000850: 	movq	%r12, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5075:
    00000860: 	paddb	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	psubb	(%rsp), %xmm0
    0000086d: 	cmpq	%rbx, %rax
    00000870: 	jne	.Ltmp5075 # Offset: 2160
    00000872: 	cvttsd2si	init_value(%rip), %edx
    0000087a: 	movdqa	%xmm0, %xmm1
    0000087e: 	psrldq	$0x8, %xmm1
    00000883: 	paddb	%xmm1, %xmm0
    00000887: 	pxor	%xmm1, %xmm1
    0000088b: 	psadbw	%xmm1, %xmm0
    0000088f: 	subl	%r14d, %edx
    00000892: 	movd	%xmm0, %eax
    00000896: 	shll	$0x6, %edx
    00000899: 	cmpb	%al, %dl
    0000089b: 	je	.Ltmp5076 # Offset: 2203
    0000089d: 	movl	current_test(%rip), %edx
    000008a3: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000008aa: 	movl	$0x1, %edi
    000008af: 	xorl	%eax, %eax
    000008b1: 	callq	__printf_chk@PLT # Offset: 2225
    000008b6: 	movl	iterations(%rip), %ecx
.Ltmp5076:
    000008bc: 	addl	$0x1, %r13d
    000008c0: 	cmpl	%ecx, %r13d
    000008c3: 	jl	.Ltmp5077 # Offset: 2243
.Ltmp5074:
    000008c5: 	movq	%r15, %rsi
    000008c8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000008cf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2255
    000008d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008db: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008e2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008e9: 	je	.Ltmp5078 # Offset: 2281
.Ltmp5255:
    000008ef: 	movq	-0x20(%rax), %r13
    000008f3: 	callq	clock@PLT # Offset: 2291
    000008f8: 	pxor	%xmm0, %xmm0
    000008fc: 	movq	%rax, end_time(%rip)
    00000903: 	movq	%r13, %rdi
    00000906: 	subq	start_time(%rip), %rax
    0000090d: 	cvtsi2sd	%rax, %xmm0
    00000912: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000091a: 	callq	_Z13record_resultdPKc # Offset: 2330
    0000091f: 	movq	0x110(%rsp), %rdi
    00000927: 	cmpq	0x38(%rsp), %rdi
    0000092c: 	je	.Ltmp5079 # Offset: 2348
    0000092e: 	movq	0x120(%rsp), %rax
    00000936: 	leaq	0x1(%rax), %rsi
    0000093a: 	callq	_ZdlPvm@PLT # Offset: 2362
.Ltmp5079:
    0000093f: 	movq	0x40(%rsp), %rsi
    00000944: 	leaq	DATAat0x3d2f8(%rip), %rdx
    0000094b: 	movq	%r15, %rdi
    0000094e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2382
    00000953: 	callq	clock@PLT # Offset: 2387
    00000958: 	movl	iterations(%rip), %ecx
    0000095e: 	movq	%rax, start_time(%rip)
    00000965: 	testl	%ecx, %ecx
    00000967: 	jle	.Ltmp5080 # Offset: 2407
    0000096d: 	movzbl	0x10(%rsp), %eax
    00000972: 	addb	0x18(%rsp), %al
    00000976: 	xorl	%r13d, %r13d
    00000979: 	leaq	0x20b0(%rsp), %rbx
    00000981: 	addb	0x4c(%rsp), %al
    00000985: 	addb	0x34(%rsp), %al
    00000989: 	leaq	DATAat0x3d1d8(%rip), %r14
    00000990: 	movd	%eax, %xmm0
    00000994: 	punpcklbw	%xmm0, %xmm0
    00000998: 	punpcklwd	%xmm0, %xmm0
    0000099c: 	pshufd	$0x0, %xmm0, %xmm7
    000009a1: 	movaps	%xmm7, (%rsp)
    000009a5: 	nopl	(%rax) # Size: 3
.Ltmp5083:
    000009a8: 	movq	%r12, %rax
    000009ab: 	pxor	%xmm0, %xmm0
    000009af: 	nop # Size: 1
.Ltmp5081:
    000009b0: 	paddb	(%rax), %xmm0
    000009b4: 	addq	$0x10, %rax
    000009b8: 	psubb	(%rsp), %xmm0
    000009bd: 	cmpq	%rax, %rbx
    000009c0: 	jne	.Ltmp5081 # Offset: 2496
    000009c2: 	cvttsd2si	init_value(%rip), %edx
    000009ca: 	movdqa	%xmm0, %xmm1
    000009ce: 	psrldq	$0x8, %xmm1
    000009d3: 	paddb	%xmm1, %xmm0
    000009d7: 	pxor	%xmm1, %xmm1
    000009db: 	psadbw	%xmm1, %xmm0
    000009df: 	subl	%ebp, %edx
    000009e1: 	subb	0x10(%rsp), %dl
    000009e5: 	movd	%xmm0, %eax
    000009e9: 	subb	0x18(%rsp), %dl
    000009ed: 	subb	0x34(%rsp), %dl
    000009f1: 	shll	$0x6, %edx
    000009f4: 	cmpb	%al, %dl
    000009f6: 	je	.Ltmp5082 # Offset: 2550
    000009f8: 	movl	current_test(%rip), %edx
    000009fe: 	movq	%r14, %rsi
    00000a01: 	movl	$0x1, %edi
    00000a06: 	xorl	%eax, %eax
    00000a08: 	callq	__printf_chk@PLT # Offset: 2568
    00000a0d: 	movl	iterations(%rip), %ecx
.Ltmp5082:
    00000a13: 	addl	$0x1, %r13d
    00000a17: 	cmpl	%ecx, %r13d
    00000a1a: 	jl	.Ltmp5083 # Offset: 2586
.Ltmp5080:
    00000a1c: 	movq	%r15, %rsi
    00000a1f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000a26: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2598
    00000a2b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a32: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a39: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a40: 	je	.Ltmp5084 # Offset: 2624
.Ltmp5254:
    00000a46: 	movq	-0x20(%rax), %r13
    00000a4a: 	callq	clock@PLT # Offset: 2634
    00000a4f: 	pxor	%xmm0, %xmm0
    00000a53: 	movq	%rax, end_time(%rip)
    00000a5a: 	movq	%r13, %rdi
    00000a5d: 	subq	start_time(%rip), %rax
    00000a64: 	cvtsi2sd	%rax, %xmm0
    00000a69: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000a71: 	callq	_Z13record_resultdPKc # Offset: 2673
    00000a76: 	movq	0x110(%rsp), %rdi
    00000a7e: 	cmpq	0x38(%rsp), %rdi
    00000a83: 	je	.Ltmp5085 # Offset: 2691
    00000a85: 	movq	0x120(%rsp), %rax
    00000a8d: 	leaq	0x1(%rax), %rsi
    00000a91: 	callq	_ZdlPvm@PLT # Offset: 2705
.Ltmp5085:
    00000a96: 	movq	0x40(%rsp), %rsi
    00000a9b: 	leaq	DATAat0x3d316(%rip), %rdx
    00000aa2: 	movq	%r15, %rdi
    00000aa5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2725
    00000aaa: 	callq	clock@PLT # Offset: 2730
    00000aaf: 	movl	iterations(%rip), %esi
    00000ab5: 	movq	%rax, start_time(%rip)
    00000abc: 	testl	%esi, %esi
    00000abe: 	jle	.Ltmp5086 # Offset: 2750
    00000ac4: 	movd	%ebp, %xmm0
    00000ac8: 	movdqa	DATAat0x3d730(%rip), %xmm7
    00000ad0: 	xorl	%r13d, %r13d
    00000ad3: 	leaq	0x20b0(%rsp), %rbx
    00000adb: 	punpcklbw	%xmm0, %xmm0
    00000adf: 	punpcklwd	%xmm0, %xmm0
    00000ae3: 	movaps	%xmm7, (%rsp)
    00000ae7: 	pshufd	$0x0, %xmm0, %xmm7
    00000aec: 	movaps	%xmm7, 0x50(%rsp)
    00000af1: 	punpcklbw	%xmm7, %xmm7
    00000af5: 	movaps	%xmm7, 0x20(%rsp)
    00000afa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5089:
    00000b00: 	movdqa	0x50(%rsp), %xmm7
    00000b06: 	movq	%r12, %rax
    00000b09: 	pxor	%xmm2, %xmm2
    00000b0d: 	movdqa	%xmm7, %xmm3
    00000b11: 	punpckhbw	%xmm7, %xmm3
    00000b15: 	nopl	(%rax) # Size: 3
.Ltmp5087:
    00000b18: 	movdqa	(%rax), %xmm0
    00000b1c: 	movdqa	(%rsp), %xmm4
    00000b21: 	addq	$0x10, %rax
    00000b25: 	movdqa	%xmm0, %xmm1
    00000b29: 	punpcklbw	%xmm0, %xmm1
    00000b2d: 	punpckhbw	%xmm0, %xmm0
    00000b31: 	pmullw	0x20(%rsp), %xmm1
    00000b37: 	pand	%xmm4, %xmm1
    00000b3b: 	pmullw	%xmm3, %xmm0
    00000b3f: 	pand	%xmm4, %xmm0
    00000b43: 	packuswb	%xmm0, %xmm1
    00000b47: 	paddb	%xmm1, %xmm2
    00000b4b: 	cmpq	%rbx, %rax
    00000b4e: 	jne	.Ltmp5087 # Offset: 2894
    00000b50: 	cvttsd2si	init_value(%rip), %ecx
    00000b58: 	movdqa	%xmm2, %xmm0
    00000b5c: 	psrldq	$0x8, %xmm0
    00000b61: 	paddb	%xmm0, %xmm2
    00000b65: 	pxor	%xmm0, %xmm0
    00000b69: 	psadbw	%xmm0, %xmm2
    00000b6d: 	movl	%ecx, %eax
    00000b6f: 	movd	%xmm2, %edx
    00000b73: 	imull	%ebp, %eax
    00000b76: 	shll	$0x6, %eax
    00000b79: 	cmpb	%dl, %al
    00000b7b: 	je	.Ltmp5088 # Offset: 2939
    00000b7d: 	movl	current_test(%rip), %edx
    00000b83: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000b8a: 	movl	$0x1, %edi
    00000b8f: 	xorl	%eax, %eax
    00000b91: 	callq	__printf_chk@PLT # Offset: 2961
    00000b96: 	movl	iterations(%rip), %esi
.Ltmp5088:
    00000b9c: 	addl	$0x1, %r13d
    00000ba0: 	cmpl	%esi, %r13d
    00000ba3: 	jl	.Ltmp5089 # Offset: 2979
.Ltmp5086:
    00000ba9: 	movq	%r15, %rsi
    00000bac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000bb3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 2995
    00000bb8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bbf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bc6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bcd: 	je	.Ltmp5090 # Offset: 3021
.Ltmp5253:
    00000bd3: 	movq	-0x20(%rax), %r13
    00000bd7: 	callq	clock@PLT # Offset: 3031
    00000bdc: 	pxor	%xmm0, %xmm0
    00000be0: 	movq	%rax, end_time(%rip)
    00000be7: 	movq	%r13, %rdi
    00000bea: 	subq	start_time(%rip), %rax
    00000bf1: 	cvtsi2sd	%rax, %xmm0
    00000bf6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000bfe: 	callq	_Z13record_resultdPKc # Offset: 3070
    00000c03: 	movq	0x110(%rsp), %rdi
    00000c0b: 	cmpq	0x38(%rsp), %rdi
    00000c10: 	je	.Ltmp5091 # Offset: 3088
    00000c12: 	movq	0x120(%rsp), %rax
    00000c1a: 	leaq	0x1(%rax), %rsi
    00000c1e: 	callq	_ZdlPvm@PLT # Offset: 3102
.Ltmp5091:
    00000c23: 	movq	0x40(%rsp), %rsi
    00000c28: 	leaq	DATAat0x3d329(%rip), %rdx
    00000c2f: 	movq	%r15, %rdi
    00000c32: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3122
    00000c37: 	callq	clock@PLT # Offset: 3127
    00000c3c: 	movl	iterations(%rip), %esi
    00000c42: 	movq	%rax, start_time(%rip)
    00000c49: 	testl	%esi, %esi
    00000c4b: 	jle	.Ltmp5092 # Offset: 3147
    00000c51: 	movzbl	0x10(%rsp), %eax
    00000c56: 	mulb	0x18(%rsp)
    00000c5a: 	xorl	%r13d, %r13d
    00000c5d: 	leaq	0x20b0(%rsp), %rbx
    00000c65: 	mulb	0x4c(%rsp)
    00000c69: 	movdqa	DATAat0x3d730(%rip), %xmm6
    00000c71: 	mulb	0x34(%rsp)
    00000c75: 	movaps	%xmm6, (%rsp)
    00000c79: 	movl	%eax, %r14d
    00000c7c: 	movd	%r14d, %xmm0
    00000c81: 	punpcklbw	%xmm0, %xmm0
    00000c85: 	punpcklwd	%xmm0, %xmm0
    00000c89: 	pshufd	$0x0, %xmm0, %xmm7
    00000c8e: 	movaps	%xmm7, 0x50(%rsp)
    00000c93: 	punpcklbw	%xmm7, %xmm7
    00000c97: 	movaps	%xmm7, 0x20(%rsp)
    00000c9c: 	nopl	(%rax) # Size: 4
.Ltmp5095:
    00000ca0: 	movdqa	0x50(%rsp), %xmm7
    00000ca6: 	movq	%r12, %rax
    00000ca9: 	pxor	%xmm2, %xmm2
    00000cad: 	movdqa	%xmm7, %xmm3
    00000cb1: 	punpckhbw	%xmm7, %xmm3
    00000cb5: 	nopl	(%rax) # Size: 3
.Ltmp5093:
    00000cb8: 	movdqa	(%rax), %xmm0
    00000cbc: 	movdqa	(%rsp), %xmm5
    00000cc1: 	addq	$0x10, %rax
    00000cc5: 	movdqa	%xmm0, %xmm1
    00000cc9: 	punpcklbw	%xmm0, %xmm1
    00000ccd: 	punpckhbw	%xmm0, %xmm0
    00000cd1: 	pmullw	0x20(%rsp), %xmm1
    00000cd7: 	pand	%xmm5, %xmm1
    00000cdb: 	pmullw	%xmm3, %xmm0
    00000cdf: 	pand	%xmm5, %xmm0
    00000ce3: 	packuswb	%xmm0, %xmm1
    00000ce7: 	paddb	%xmm1, %xmm2
    00000ceb: 	cmpq	%rax, %rbx
    00000cee: 	jne	.Ltmp5093 # Offset: 3310
    00000cf0: 	cvttsd2si	init_value(%rip), %ecx
    00000cf8: 	movdqa	%xmm2, %xmm0
    00000cfc: 	psrldq	$0x8, %xmm0
    00000d01: 	paddb	%xmm0, %xmm2
    00000d05: 	pxor	%xmm0, %xmm0
    00000d09: 	psadbw	%xmm0, %xmm2
    00000d0d: 	movl	%ecx, %eax
    00000d0f: 	movd	%xmm2, %edx
    00000d13: 	imull	%r14d, %eax
    00000d17: 	shll	$0x6, %eax
    00000d1a: 	cmpb	%dl, %al
    00000d1c: 	je	.Ltmp5094 # Offset: 3356
    00000d1e: 	movl	current_test(%rip), %edx
    00000d24: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000d2b: 	movl	$0x1, %edi
    00000d30: 	xorl	%eax, %eax
    00000d32: 	callq	__printf_chk@PLT # Offset: 3378
    00000d37: 	movl	iterations(%rip), %esi
.Ltmp5094:
    00000d3d: 	addl	$0x1, %r13d
    00000d41: 	cmpl	%esi, %r13d
    00000d44: 	jl	.Ltmp5095 # Offset: 3396
.Ltmp5092:
    00000d4a: 	movq	%r15, %rsi
    00000d4d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000d54: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3412
    00000d59: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d60: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d67: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d6e: 	je	.Ltmp5096 # Offset: 3438
.Ltmp5252:
    00000d74: 	movq	-0x20(%rax), %r13
    00000d78: 	callq	clock@PLT # Offset: 3448
    00000d7d: 	pxor	%xmm0, %xmm0
    00000d81: 	movq	%rax, end_time(%rip)
    00000d88: 	movq	%r13, %rdi
    00000d8b: 	subq	start_time(%rip), %rax
    00000d92: 	cvtsi2sd	%rax, %xmm0
    00000d97: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000d9f: 	callq	_Z13record_resultdPKc # Offset: 3487
    00000da4: 	movq	0x110(%rsp), %rdi
    00000dac: 	cmpq	0x38(%rsp), %rdi
    00000db1: 	je	.Ltmp5097 # Offset: 3505
    00000db3: 	movq	0x120(%rsp), %rax
    00000dbb: 	leaq	0x1(%rax), %rsi
    00000dbf: 	callq	_ZdlPvm@PLT # Offset: 3519
.Ltmp5097:
    00000dc4: 	movq	0x40(%rsp), %rsi
    00000dc9: 	leaq	DATAat0x3d600(%rip), %rdx
    00000dd0: 	movq	%r15, %rdi
    00000dd3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3539
    00000dd8: 	callq	clock@PLT # Offset: 3544
    00000ddd: 	movl	iterations(%rip), %ecx
    00000de3: 	movq	%rax, start_time(%rip)
    00000dea: 	testl	%ecx, %ecx
    00000dec: 	jle	.Ltmp5098 # Offset: 3564
    00000df2: 	movzbl	0x10(%rsp), %eax
    00000df7: 	mulb	0x18(%rsp)
    00000dfb: 	xorl	%r13d, %r13d
    00000dfe: 	leaq	0x20b0(%rsp), %rbx
    00000e06: 	mulb	0x4c(%rsp)
    00000e0a: 	mulb	0x34(%rsp)
    00000e0e: 	movl	%eax, %r14d
    00000e11: 	movd	%r14d, %xmm0
    00000e16: 	punpcklbw	%xmm0, %xmm0
    00000e1a: 	punpcklwd	%xmm0, %xmm0
    00000e1e: 	pshufd	$0x0, %xmm0, %xmm6
    00000e23: 	movaps	%xmm6, (%rsp)
    00000e27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5101:
    00000e30: 	movq	%r12, %rax
    00000e33: 	pxor	%xmm0, %xmm0
    00000e37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5099:
    00000e40: 	movdqa	(%rsp), %xmm1
    00000e45: 	paddb	(%rax), %xmm1
    00000e49: 	addq	$0x10, %rax
    00000e4d: 	paddb	%xmm1, %xmm0
    00000e51: 	cmpq	%rbx, %rax
    00000e54: 	jne	.Ltmp5099 # Offset: 3668
    00000e56: 	cvttsd2si	init_value(%rip), %edx
    00000e5e: 	movdqa	%xmm0, %xmm1
    00000e62: 	psrldq	$0x8, %xmm1
    00000e67: 	paddb	%xmm1, %xmm0
    00000e6b: 	pxor	%xmm1, %xmm1
    00000e6f: 	psadbw	%xmm1, %xmm0
    00000e73: 	addl	%r14d, %edx
    00000e76: 	movd	%xmm0, %eax
    00000e7a: 	shll	$0x6, %edx
    00000e7d: 	cmpb	%al, %dl
    00000e7f: 	je	.Ltmp5100 # Offset: 3711
    00000e81: 	movl	current_test(%rip), %edx
    00000e87: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00000e8e: 	movl	$0x1, %edi
    00000e93: 	xorl	%eax, %eax
    00000e95: 	callq	__printf_chk@PLT # Offset: 3733
    00000e9a: 	movl	iterations(%rip), %ecx
.Ltmp5100:
    00000ea0: 	addl	$0x1, %r13d
    00000ea4: 	cmpl	%ecx, %r13d
    00000ea7: 	jl	.Ltmp5101 # Offset: 3751
.Ltmp5098:
    00000ea9: 	movq	%r15, %rsi
    00000eac: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000eb3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 3763
    00000eb8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ebf: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ec6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ecd: 	je	.Ltmp5102 # Offset: 3789
.Ltmp5251:
    00000ed3: 	movq	-0x20(%rax), %r13
    00000ed7: 	callq	clock@PLT # Offset: 3799
    00000edc: 	pxor	%xmm0, %xmm0
    00000ee0: 	movq	%rax, end_time(%rip)
    00000ee7: 	movq	%r13, %rdi
    00000eea: 	subq	start_time(%rip), %rax
    00000ef1: 	cvtsi2sd	%rax, %xmm0
    00000ef6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00000efe: 	callq	_Z13record_resultdPKc # Offset: 3838
    00000f03: 	movq	0x110(%rsp), %rdi
    00000f0b: 	cmpq	0x38(%rsp), %rdi
    00000f10: 	je	.Ltmp5103 # Offset: 3856
    00000f12: 	movq	0x120(%rsp), %rax
    00000f1a: 	leaq	0x1(%rax), %rsi
    00000f1e: 	callq	_ZdlPvm@PLT # Offset: 3870
.Ltmp5103:
    00000f23: 	movq	0x40(%rsp), %rsi
    00000f28: 	leaq	DATAat0x3d620(%rip), %rdx
    00000f2f: 	movq	%r15, %rdi
    00000f32: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3890
    00000f37: 	callq	clock@PLT # Offset: 3895
    00000f3c: 	movl	iterations(%rip), %esi
    00000f42: 	movq	%rax, start_time(%rip)
    00000f49: 	testl	%esi, %esi
    00000f4b: 	jle	.Ltmp5104 # Offset: 3915
    00000f51: 	movzbl	0x10(%rsp), %eax
    00000f56: 	mulb	0x18(%rsp)
    00000f5a: 	xorl	%r13d, %r13d
    00000f5d: 	leaq	0x20b0(%rsp), %rbx
    00000f65: 	mulb	0x4c(%rsp)
    00000f69: 	movdqa	DATAat0x3d730(%rip), %xmm7
    00000f71: 	mulb	0x34(%rsp)
    00000f75: 	movaps	%xmm7, (%rsp)
    00000f79: 	movd	%eax, %xmm0
    00000f7d: 	punpcklbw	%xmm0, %xmm0
    00000f81: 	punpcklwd	%xmm0, %xmm0
    00000f85: 	pshufd	$0x0, %xmm0, %xmm6
    00000f8a: 	movdqa	%xmm6, %xmm7
    00000f8e: 	movaps	%xmm6, 0x50(%rsp)
    00000f93: 	punpcklbw	%xmm6, %xmm7
    00000f97: 	movaps	%xmm7, 0x20(%rsp)
    00000f9c: 	nopl	(%rax) # Size: 4
.Ltmp5107:
    00000fa0: 	movdqa	0x50(%rsp), %xmm7
    00000fa6: 	movq	%r12, %rax
    00000fa9: 	pxor	%xmm2, %xmm2
    00000fad: 	movdqa	%xmm7, %xmm3
    00000fb1: 	punpckhbw	%xmm7, %xmm3
    00000fb5: 	nopl	(%rax) # Size: 3
.Ltmp5105:
    00000fb8: 	movdqa	(%rax), %xmm0
    00000fbc: 	movdqa	(%rsp), %xmm6
    00000fc1: 	addq	$0x10, %rax
    00000fc5: 	movdqa	%xmm0, %xmm1
    00000fc9: 	punpcklbw	%xmm0, %xmm1
    00000fcd: 	punpckhbw	%xmm0, %xmm0
    00000fd1: 	pmullw	0x20(%rsp), %xmm1
    00000fd7: 	pand	%xmm6, %xmm1
    00000fdb: 	pmullw	%xmm3, %xmm0
    00000fdf: 	pand	%xmm6, %xmm0
    00000fe3: 	packuswb	%xmm0, %xmm1
    00000fe7: 	paddb	%xmm1, %xmm2
    00000feb: 	cmpq	%rbx, %rax
    00000fee: 	jne	.Ltmp5105 # Offset: 4078
    00000ff0: 	cvttsd2si	init_value(%rip), %ecx
    00000ff8: 	movdqa	%xmm2, %xmm0
    00000ffc: 	psrldq	$0x8, %xmm0
    00001001: 	paddb	%xmm0, %xmm2
    00001005: 	pxor	%xmm0, %xmm0
    00001009: 	psadbw	%xmm0, %xmm2
    0000100d: 	movl	%ecx, %eax
    0000100f: 	movd	%xmm2, %edx
    00001013: 	imull	%ebp, %eax
    00001016: 	mulb	0x10(%rsp)
    0000101a: 	mulb	0x18(%rsp)
    0000101e: 	mulb	0x34(%rsp)
    00001022: 	shll	$0x6, %eax
    00001025: 	cmpb	%dl, %al
    00001027: 	je	.Ltmp5106 # Offset: 4135
    00001029: 	movl	current_test(%rip), %edx
    0000102f: 	leaq	DATAat0x3d1d8(%rip), %rsi
    00001036: 	movl	$0x1, %edi
    0000103b: 	xorl	%eax, %eax
    0000103d: 	callq	__printf_chk@PLT # Offset: 4157
    00001042: 	movl	iterations(%rip), %esi
.Ltmp5106:
    00001048: 	addl	$0x1, %r13d
    0000104c: 	cmpl	%esi, %r13d
    0000104f: 	jl	.Ltmp5107 # Offset: 4175
.Ltmp5104:
    00001055: 	movq	%r15, %rsi
    00001058: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000105f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4191
    00001064: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000106b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001072: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001079: 	je	.Ltmp5108 # Offset: 4217
.Ltmp5250:
    0000107f: 	movq	-0x20(%rax), %r13
    00001083: 	callq	clock@PLT # Offset: 4227
    00001088: 	pxor	%xmm0, %xmm0
    0000108c: 	movq	%rax, end_time(%rip)
    00001093: 	movq	%r13, %rdi
    00001096: 	subq	start_time(%rip), %rax
    0000109d: 	cvtsi2sd	%rax, %xmm0
    000010a2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000010aa: 	callq	_Z13record_resultdPKc # Offset: 4266
    000010af: 	movq	0x110(%rsp), %rdi
    000010b7: 	cmpq	0x38(%rsp), %rdi
    000010bc: 	je	.Ltmp5109 # Offset: 4284
    000010be: 	movq	0x120(%rsp), %rax
    000010c6: 	leaq	0x1(%rax), %rsi
    000010ca: 	callq	_ZdlPvm@PLT # Offset: 4298
.Ltmp5109:
    000010cf: 	movq	0x40(%rsp), %rsi
    000010d4: 	leaq	DATAat0x3d347(%rip), %rdx
    000010db: 	movq	%r15, %rdi
    000010de: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4318
    000010e3: 	callq	clock@PLT # Offset: 4323
    000010e8: 	movl	iterations(%rip), %esi
    000010ee: 	xorl	%r13d, %r13d
    000010f1: 	leaq	0x20b0(%rsp), %rbx
    000010f9: 	movq	%rax, start_time(%rip)
    00001100: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001107: 	testl	%esi, %esi
    00001109: 	jle	.Ltmp5110 # Offset: 4361
    0000110b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5113:
    00001110: 	movq	%r12, %rdx
    00001113: 	xorl	%ecx, %ecx
    00001115: 	nopl	(%rax) # Size: 3
.Ltmp5111:
    00001118: 	movzbl	(%rdx), %eax
    0000111b: 	addq	$0x1, %rdx
    0000111f: 	divb	%bpl
    00001122: 	addl	%eax, %ecx
    00001124: 	cmpq	%rbx, %rdx
    00001127: 	jne	.Ltmp5111 # Offset: 4391
    00001129: 	cvttsd2si	init_value(%rip), %eax
    00001131: 	movzbl	%al, %eax
    00001134: 	divb	%bpl
    00001137: 	shll	$0x6, %eax
    0000113a: 	cmpb	%al, %cl
    0000113c: 	je	.Ltmp5112 # Offset: 4412
    0000113e: 	movl	current_test(%rip), %edx
    00001144: 	movq	%r14, %rsi
    00001147: 	movl	$0x1, %edi
    0000114c: 	xorl	%eax, %eax
    0000114e: 	callq	__printf_chk@PLT # Offset: 4430
    00001153: 	movl	iterations(%rip), %esi
.Ltmp5112:
    00001159: 	addl	$0x1, %r13d
    0000115d: 	cmpl	%esi, %r13d
    00001160: 	jl	.Ltmp5113 # Offset: 4448
.Ltmp5110:
    00001162: 	movq	%r15, %rsi
    00001165: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000116c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4460
    00001171: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001178: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000117f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001186: 	je	.Ltmp5114 # Offset: 4486
.Ltmp5249:
    0000118c: 	movq	-0x20(%rax), %r13
    00001190: 	callq	clock@PLT # Offset: 4496
    00001195: 	pxor	%xmm0, %xmm0
    00001199: 	movq	%rax, end_time(%rip)
    000011a0: 	movq	%r13, %rdi
    000011a3: 	subq	start_time(%rip), %rax
    000011aa: 	cvtsi2sd	%rax, %xmm0
    000011af: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000011b7: 	callq	_Z13record_resultdPKc # Offset: 4535
    000011bc: 	movq	0x110(%rsp), %rdi
    000011c4: 	cmpq	0x38(%rsp), %rdi
    000011c9: 	je	.Ltmp5115 # Offset: 4553
    000011cb: 	movq	0x120(%rsp), %rax
    000011d3: 	leaq	0x1(%rax), %rsi
    000011d7: 	callq	_ZdlPvm@PLT # Offset: 4567
.Ltmp5115:
    000011dc: 	movq	0x40(%rsp), %rsi
    000011e1: 	leaq	DATAat0x3d358(%rip), %rdx
    000011e8: 	movq	%r15, %rdi
    000011eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4587
    000011f0: 	callq	clock@PLT # Offset: 4592
    000011f5: 	movl	iterations(%rip), %esi
    000011fb: 	xorl	%r13d, %r13d
    000011fe: 	leaq	0x20b0(%rsp), %rbx
    00001206: 	movq	%rax, start_time(%rip)
    0000120d: 	leaq	DATAat0x3d1d8(%rip), %r14
    00001214: 	testl	%esi, %esi
    00001216: 	jle	.Ltmp5116 # Offset: 4630
    0000121c: 	nopl	(%rax) # Size: 4
.Ltmp5119:
    00001220: 	movzbl	0x10(%rsp), %edi
    00001225: 	movzbl	0x18(%rsp), %r8d
    0000122b: 	movq	%r12, %rdx
    0000122e: 	xorl	%ecx, %ecx
    00001230: 	movzbl	0x34(%rsp), %r9d
    00001236: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp5117:
    00001240: 	movzbl	(%rdx), %eax
    00001243: 	addq	$0x1, %rdx
    00001247: 	divb	%bpl
    0000124a: 	movzbl	%al, %eax
    0000124d: 	divb	%dil
    00001250: 	movzbl	%al, %eax
    00001253: 	divb	%r8b
    00001256: 	movzbl	%al, %eax
    00001259: 	divb	%r9b
    0000125c: 	addl	%eax, %ecx
    0000125e: 	cmpq	%rbx, %rdx
    00001261: 	jne	.Ltmp5117 # Offset: 4705
    00001263: 	cvttsd2si	init_value(%rip), %eax
    0000126b: 	movzbl	%al, %eax
    0000126e: 	divb	%bpl
    00001271: 	movzbl	%al, %eax
    00001274: 	divb	0x10(%rsp)
    00001278: 	movzbl	%al, %eax
    0000127b: 	divb	0x18(%rsp)
    0000127f: 	movzbl	%al, %eax
    00001282: 	divb	0x34(%rsp)
    00001286: 	shll	$0x6, %eax
    00001289: 	cmpb	%al, %cl
    0000128b: 	je	.Ltmp5118 # Offset: 4747
    0000128d: 	movl	current_test(%rip), %edx
    00001293: 	movq	%r14, %rsi
    00001296: 	movl	$0x1, %edi
    0000129b: 	xorl	%eax, %eax
    0000129d: 	callq	__printf_chk@PLT # Offset: 4765
    000012a2: 	movl	iterations(%rip), %esi
.Ltmp5118:
    000012a8: 	addl	$0x1, %r13d
    000012ac: 	cmpl	%esi, %r13d
    000012af: 	jl	.Ltmp5119 # Offset: 4783
.Ltmp5116:
    000012b5: 	movq	%r15, %rsi
    000012b8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000012bf: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 4799
    000012c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012cb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012d9: 	je	.Ltmp5120 # Offset: 4825
.Ltmp5248:
    000012df: 	movq	-0x20(%rax), %r13
    000012e3: 	callq	clock@PLT # Offset: 4835
    000012e8: 	pxor	%xmm0, %xmm0
    000012ec: 	movq	%rax, end_time(%rip)
    000012f3: 	movq	%r13, %rdi
    000012f6: 	subq	start_time(%rip), %rax
    000012fd: 	cvtsi2sd	%rax, %xmm0
    00001302: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000130a: 	callq	_Z13record_resultdPKc # Offset: 4874
    0000130f: 	movq	0x110(%rsp), %rdi
    00001317: 	cmpq	0x38(%rsp), %rdi
    0000131c: 	je	.Ltmp5121 # Offset: 4892
    0000131e: 	movq	0x120(%rsp), %rax
    00001326: 	leaq	0x1(%rax), %rsi
    0000132a: 	callq	_ZdlPvm@PLT # Offset: 4906
.Ltmp5121:
    0000132f: 	movq	0x40(%rsp), %rsi
    00001334: 	leaq	DATAat0x3d373(%rip), %rdx
    0000133b: 	movq	%r15, %rdi
    0000133e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4926
    00001343: 	callq	clock@PLT # Offset: 4931
    00001348: 	movl	iterations(%rip), %ecx
    0000134e: 	movq	%rax, start_time(%rip)
    00001355: 	testl	%ecx, %ecx
    00001357: 	jle	.Ltmp5122 # Offset: 4951
    0000135d: 	movzbl	0x4c(%rsp), %eax
    00001362: 	xorl	%r13d, %r13d
    00001365: 	leaq	0x20b0(%rsp), %rbx
    0000136d: 	divb	0x10(%rsp)
    00001371: 	movzbl	%al, %eax
    00001374: 	divb	0x18(%rsp)
    00001378: 	movzbl	%al, %eax
    0000137b: 	divb	0x34(%rsp)
    0000137f: 	movl	%eax, %r14d
    00001382: 	movd	%r14d, %xmm0
    00001387: 	punpcklbw	%xmm0, %xmm0
    0000138b: 	punpcklwd	%xmm0, %xmm0
    0000138f: 	pshufd	$0x0, %xmm0, %xmm7
    00001394: 	movaps	%xmm7, (%rsp)
    00001398: 	nopl	(%rax,%rax) # Size: 8
.Ltmp5125:
    000013a0: 	movq	%r12, %rax
    000013a3: 	pxor	%xmm0, %xmm0
    000013a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5123:
    000013b0: 	movdqa	(%rsp), %xmm1
    000013b5: 	paddb	(%rax), %xmm1
    000013b9: 	addq	$0x10, %rax
    000013bd: 	paddb	%xmm1, %xmm0
    000013c1: 	cmpq	%rax, %rbx
    000013c4: 	jne	.Ltmp5123 # Offset: 5060
    000013c6: 	cvttsd2si	init_value(%rip), %edx
    000013ce: 	movdqa	%xmm0, %xmm1
    000013d2: 	psrldq	$0x8, %xmm1
    000013d7: 	paddb	%xmm1, %xmm0
    000013db: 	pxor	%xmm1, %xmm1
    000013df: 	psadbw	%xmm1, %xmm0
    000013e3: 	addl	%r14d, %edx
    000013e6: 	movd	%xmm0, %eax
    000013ea: 	shll	$0x6, %edx
    000013ed: 	cmpb	%al, %dl
    000013ef: 	je	.Ltmp5124 # Offset: 5103
    000013f1: 	movl	current_test(%rip), %edx
    000013f7: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000013fe: 	movl	$0x1, %edi
    00001403: 	xorl	%eax, %eax
    00001405: 	callq	__printf_chk@PLT # Offset: 5125
    0000140a: 	movl	iterations(%rip), %ecx
.Ltmp5124:
    00001410: 	addl	$0x1, %r13d
    00001414: 	cmpl	%ecx, %r13d
    00001417: 	jl	.Ltmp5125 # Offset: 5143
.Ltmp5122:
    00001419: 	movq	%r15, %rsi
    0000141c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001423: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5155
    00001428: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000142f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001436: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000143d: 	je	.Ltmp5126 # Offset: 5181
.Ltmp5247:
    00001443: 	movq	-0x20(%rax), %r13
    00001447: 	callq	clock@PLT # Offset: 5191
    0000144c: 	pxor	%xmm0, %xmm0
    00001450: 	movq	%rax, end_time(%rip)
    00001457: 	movq	%r13, %rdi
    0000145a: 	subq	start_time(%rip), %rax
    00001461: 	cvtsi2sd	%rax, %xmm0
    00001466: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000146e: 	callq	_Z13record_resultdPKc # Offset: 5230
    00001473: 	movq	0x110(%rsp), %rdi
    0000147b: 	cmpq	0x38(%rsp), %rdi
    00001480: 	je	.Ltmp5127 # Offset: 5248
    00001482: 	movq	0x120(%rsp), %rax
    0000148a: 	leaq	0x1(%rax), %rsi
    0000148e: 	callq	_ZdlPvm@PLT # Offset: 5262
.Ltmp5127:
    00001493: 	movq	0x40(%rsp), %rsi
    00001498: 	leaq	DATAat0x3d38f(%rip), %rdx
    0000149f: 	movq	%r15, %rdi
    000014a2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5282
    000014a7: 	callq	clock@PLT # Offset: 5287
    000014ac: 	movl	iterations(%rip), %ecx
    000014b2: 	movq	%rax, start_time(%rip)
    000014b9: 	testl	%ecx, %ecx
    000014bb: 	jle	.Ltmp5128 # Offset: 5307
    000014c1: 	movl	0x64(%rsp), %eax
    000014c5: 	imull	0x78(%rsp), %eax
    000014ca: 	xorl	%r13d, %r13d
    000014cd: 	leaq	0x20b0(%rsp), %rbx
    000014d5: 	movzbl	0x4c(%rsp), %r14d
    000014db: 	cltd
    000014dc: 	idivl	0x60(%rsp)
    000014e0: 	subl	%eax, %r14d
    000014e3: 	movd	%r14d, %xmm0
    000014e8: 	punpcklbw	%xmm0, %xmm0
    000014ec: 	punpcklwd	%xmm0, %xmm0
    000014f0: 	pshufd	$0x0, %xmm0, %xmm6
    000014f5: 	movaps	%xmm6, (%rsp)
    000014f9: 	nopl	(%rax) # Size: 7
.Ltmp5131:
    00001500: 	movq	%r12, %rax
    00001503: 	pxor	%xmm0, %xmm0
    00001507: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5129:
    00001510: 	movdqa	(%rsp), %xmm1
    00001515: 	paddb	(%rax), %xmm1
    00001519: 	addq	$0x10, %rax
    0000151d: 	paddb	%xmm1, %xmm0
    00001521: 	cmpq	%rbx, %rax
    00001524: 	jne	.Ltmp5129 # Offset: 5412
    00001526: 	cvttsd2si	init_value(%rip), %edx
    0000152e: 	movdqa	%xmm0, %xmm1
    00001532: 	psrldq	$0x8, %xmm1
    00001537: 	paddb	%xmm1, %xmm0
    0000153b: 	pxor	%xmm1, %xmm1
    0000153f: 	psadbw	%xmm1, %xmm0
    00001543: 	addl	%r14d, %edx
    00001546: 	movd	%xmm0, %eax
    0000154a: 	shll	$0x6, %edx
    0000154d: 	cmpb	%al, %dl
    0000154f: 	je	.Ltmp5130 # Offset: 5455
    00001551: 	movl	current_test(%rip), %edx
    00001557: 	leaq	DATAat0x3d1d8(%rip), %rsi
    0000155e: 	movl	$0x1, %edi
    00001563: 	xorl	%eax, %eax
    00001565: 	callq	__printf_chk@PLT # Offset: 5477
    0000156a: 	movl	iterations(%rip), %ecx
.Ltmp5130:
    00001570: 	addl	$0x1, %r13d
    00001574: 	cmpl	%ecx, %r13d
    00001577: 	jl	.Ltmp5131 # Offset: 5495
.Ltmp5128:
    00001579: 	movq	%r15, %rsi
    0000157c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001583: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 5507
    00001588: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000158f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001596: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000159d: 	je	.Ltmp5132 # Offset: 5533
.Ltmp5246:
    000015a3: 	movq	-0x20(%rax), %r13
    000015a7: 	callq	clock@PLT # Offset: 5543
    000015ac: 	pxor	%xmm0, %xmm0
    000015b0: 	movq	%rax, end_time(%rip)
    000015b7: 	movq	%r13, %rdi
    000015ba: 	subq	start_time(%rip), %rax
    000015c1: 	cvtsi2sd	%rax, %xmm0
    000015c6: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000015ce: 	callq	_Z13record_resultdPKc # Offset: 5582
    000015d3: 	movq	0x110(%rsp), %rdi
    000015db: 	cmpq	0x38(%rsp), %rdi
    000015e0: 	je	.Ltmp5133 # Offset: 5600
    000015e2: 	movq	0x120(%rsp), %rax
    000015ea: 	leaq	0x1(%rax), %rsi
    000015ee: 	callq	_ZdlPvm@PLT # Offset: 5614
.Ltmp5133:
    000015f3: 	movq	0x40(%rsp), %rsi
    000015f8: 	leaq	DATAat0x3d3a8(%rip), %rdx
    000015ff: 	movq	%r15, %rdi
    00001602: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5634
    00001607: 	callq	clock@PLT # Offset: 5639
    0000160c: 	movl	iterations(%rip), %ecx
    00001612: 	movq	%rax, start_time(%rip)
    00001619: 	testl	%ecx, %ecx
    0000161b: 	jle	.Ltmp5134 # Offset: 5659
    00001621: 	movl	0x64(%rsp), %eax
    00001625: 	imull	0x78(%rsp), %eax
    0000162a: 	xorl	%r13d, %r13d
    0000162d: 	leaq	0x20b0(%rsp), %rbx
    00001635: 	cltd
    00001636: 	idivl	0x60(%rsp)
    0000163a: 	movzbl	0x4c(%rsp), %edx
    0000163f: 	subl	%eax, %edx
    00001641: 	movl	%eax, %r14d
    00001644: 	movd	%edx, %xmm0
    00001648: 	punpcklbw	%xmm0, %xmm0
    0000164c: 	punpcklwd	%xmm0, %xmm0
    00001650: 	pshufd	$0x0, %xmm0, %xmm7
    00001655: 	movaps	%xmm7, (%rsp)
    00001659: 	nopl	(%rax) # Size: 7
.Ltmp5137:
    00001660: 	movq	%r12, %rax
    00001663: 	pxor	%xmm0, %xmm0
    00001667: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5135:
    00001670: 	movdqa	(%rsp), %xmm1
    00001675: 	paddb	(%rax), %xmm1
    00001679: 	addq	$0x10, %rax
    0000167d: 	paddb	%xmm1, %xmm0
    00001681: 	cmpq	%rax, %rbx
    00001684: 	jne	.Ltmp5135 # Offset: 5764
    00001686: 	cvttsd2si	init_value(%rip), %edx
    0000168e: 	movdqa	%xmm0, %xmm1
    00001692: 	psrldq	$0x8, %xmm1
    00001697: 	paddb	%xmm1, %xmm0
    0000169b: 	pxor	%xmm1, %xmm1
    0000169f: 	psadbw	%xmm1, %xmm0
    000016a3: 	addl	%ebp, %edx
    000016a5: 	movd	%xmm0, %eax
    000016a9: 	subl	%r14d, %edx
    000016ac: 	shll	$0x6, %edx
    000016af: 	cmpb	%al, %dl
    000016b1: 	je	.Ltmp5136 # Offset: 5809
    000016b3: 	movl	current_test(%rip), %edx
    000016b9: 	leaq	DATAat0x3d1d8(%rip), %rsi
    000016c0: 	movl	$0x1, %edi
    000016c5: 	xorl	%eax, %eax
    000016c7: 	callq	__printf_chk@PLT # Offset: 5831
    000016cc: 	movl	iterations(%rip), %ecx
.Ltmp5136:
    000016d2: 	addl	$0x1, %r13d
    000016d6: 	cmpl	%ecx, %r13d
    000016d9: 	jl	.Ltmp5137 # Offset: 5849
.Ltmp5134:
    000016db: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000016e2: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000016e9: 	subq	$0x20, %rax
    000016ed: 	cmpq	%rax, %rbx
    000016f0: 	je	.Ltmp5138 # Offset: 5872
    000016f6: 	leaq	0x10(%rbx), %rdi
    000016fa: 	movq	0x118(%rsp), %r13
    00001702: 	movq	%rdi, (%rbx)
    00001705: 	movq	0x110(%rsp), %rbp
    0000170d: 	movq	%rbp, %rax
    00001710: 	addq	%r13, %rax
    00001713: 	je	.Ltmp5139 # Offset: 5907
    00001715: 	testq	%rbp, %rbp
    00001718: 	je	.Ltmp5140 # Offset: 5912
.Ltmp5139:
    0000171e: 	movq	%r13, 0x90(%rsp)
    00001726: 	cmpq	$0xf, %r13
    0000172a: 	ja	.Ltmp5141 # Offset: 5930
    00001730: 	cmpq	$0x1, %r13
    00001734: 	jne	.Ltmp5142 # Offset: 5940
    0000173a: 	movzbl	(%rbp), %eax
    0000173e: 	movb	%al, 0x10(%rbx)
.Ltmp5225:
    00001741: 	movq	%r13, 0x8(%rbx)
    00001745: 	movb	$0x0, (%rdi,%r13)
    0000174a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001751: 	addq	$0x20, %rax
    00001755: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp5234:
    0000175c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001763: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000176a: 	je	.Ltmp5143 # Offset: 5994
.Ltmp5232:
    00001770: 	movq	-0x20(%rax), %rbp
    00001774: 	callq	clock@PLT # Offset: 6004
    00001779: 	pxor	%xmm0, %xmm0
    0000177d: 	movq	%rax, end_time(%rip)
    00001784: 	movq	%rbp, %rdi
    00001787: 	subq	start_time(%rip), %rax
    0000178e: 	cvtsi2sd	%rax, %xmm0
    00001793: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000179b: 	callq	_Z13record_resultdPKc # Offset: 6043
    000017a0: 	movq	0x110(%rsp), %rdi
    000017a8: 	cmpq	0x38(%rsp), %rdi
    000017ad: 	je	.Ltmp5144 # Offset: 6061
    000017af: 	movq	0x120(%rsp), %rax
    000017b7: 	leaq	0x1(%rax), %rsi
    000017bb: 	callq	_ZdlPvm@PLT # Offset: 6075
.Ltmp5144:
    000017c0: 	movl	0x60(%rsp), %r8d
    000017c5: 	movl	0x64(%rsp), %ecx
    000017c9: 	movq	%r12, %rdi
    000017cc: 	movl	0x78(%rsp), %edx
    000017d0: 	movl	0x7c(%rsp), %esi
    000017d4: 	callq	_Z20TestLoopsIntegerOnlyIhENSt9enable_ifIXsrSt11is_integralIT_E5valueEvE4typeEPS2_S2_S2_S2_S2_ # Offset: 6100
    000017d9: 	movq	0x40(%rsp), %r14
    000017de: 	leaq	0xd0(%rsp), %rdi
    000017e6: 	leaq	DATAat0x3d3c2(%rip), %rdx
    000017ed: 	movq	%r14, %rsi
    000017f0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6128
    000017f5: 	movl	iterations(%rip), %edx
    000017fb: 	xorl	%r8d, %r8d
    000017fe: 	xorl	%ecx, %ecx
    00001800: 	movl	$0x1f40, %esi
    00001805: 	movq	0xd0(%rsp), %rdi
    0000180d: 	callq	_Z9summarizePKciiii # Offset: 6157
    00001812: 	movsd	init_value(%rip), %xmm0
    0000181a: 	movq	%r12, %rdi
    0000181d: 	xorl	%ebx, %ebx
    0000181f: 	movq	%r14, %rsi
    00001822: 	movabsq	$0x101010101010101, %rcx
    0000182c: 	cvttsd2si	%xmm0, %edx
    00001830: 	addsd	DATAat0x3d700(%rip), %xmm0
    00001838: 	movzbl	%dl, %eax
    0000183b: 	movb	%dl, %bl
    0000183d: 	movb	%dl, 0x9b(%rsp)
    00001844: 	imulq	%rcx, %rax
    00001848: 	movl	$0x3e8, %ecx
    0000184d: 	movb	%dl, %bh
    0000184f: 	movb	%dl, 0x9c(%rsp)
    00001856: 	leaq	DATAat0x3d3d2(%rip), %rdx
    0000185d: 	movw	%bx, 0x90(%rsp)
    00001865: 	movw	%bx, 0x96(%rsp)
    0000186d: 	rep		stosq	%rax, %es:(%rdi)
    00001870: 	cvttsd2si	%xmm0, %eax
    00001874: 	movq	%r15, %rdi
    00001877: 	movslq	%eax, %r13
    0000187a: 	movl	%eax, %ecx
    0000187c: 	imulq	$0x51eb851f, %r13, %r13
    00001883: 	sarl	$0x1f, %ecx
    00001886: 	sarq	$0x24, %r13
    0000188a: 	subl	%ecx, %r13d
    0000188d: 	imull	$0x32, %r13d, %ecx
    00001891: 	subl	%ecx, %eax
    00001893: 	movslq	%eax, %r13
    00001896: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6294
    0000189b: 	callq	clock@PLT # Offset: 6299
    000018a0: 	movl	iterations(%rip), %ecx
    000018a6: 	movq	%rax, start_time(%rip)
    000018ad: 	testl	%ecx, %ecx
    000018af: 	jle	.Ltmp5145 # Offset: 6319
    000018b5: 	movslq	%r13d, %rax
    000018b8: 	xorl	%ebp, %ebp
    000018ba: 	leaq	0x20b0(%rsp), %rbx
    000018c2: 	leaq	0x130(%rsp,%rax), %r14
    000018ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5148:
    000018d0: 	cvttsd2si	init_value(%rip), %edx
    000018d8: 	movq	%r12, %rax
    000018db: 	pxor	%xmm0, %xmm0
    000018df: 	shll	$0x6, %edx
    000018e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5146:
    000018e8: 	paddb	(%rax), %xmm0
    000018ec: 	addq	$0x10, %rax
    000018f0: 	cmpq	%rbx, %rax
    000018f3: 	jne	.Ltmp5146 # Offset: 6387
    000018f5: 	movdqa	%xmm0, %xmm1
    000018f9: 	psrldq	$0x8, %xmm1
    000018fe: 	paddb	%xmm1, %xmm0
    00001902: 	pxor	%xmm1, %xmm1
    00001906: 	psadbw	%xmm1, %xmm0
    0000190a: 	movd	%xmm0, %eax
    0000190e: 	movb	%al, (%r14)
    00001911: 	cmpb	%al, %dl
    00001913: 	je	.Ltmp5147 # Offset: 6419
    00001915: 	movq	0x110(%rsp), %rdx
    0000191d: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001924: 	movl	$0x1, %edi
    00001929: 	xorl	%eax, %eax
    0000192b: 	callq	__printf_chk@PLT # Offset: 6443
    00001930: 	movl	iterations(%rip), %ecx
.Ltmp5147:
    00001936: 	addl	$0x1, %ebp
    00001939: 	cmpl	%ecx, %ebp
    0000193b: 	jl	.Ltmp5148 # Offset: 6459
.Ltmp5145:
    0000193d: 	movq	%r15, %rsi
    00001940: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001947: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6471
    0000194c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001953: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000195a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001961: 	je	.Ltmp5149 # Offset: 6497
.Ltmp5231:
    00001967: 	movq	-0x20(%rax), %rbp
    0000196b: 	callq	clock@PLT # Offset: 6507
    00001970: 	pxor	%xmm0, %xmm0
    00001974: 	movq	%rax, end_time(%rip)
    0000197b: 	movq	%rbp, %rdi
    0000197e: 	subq	start_time(%rip), %rax
    00001985: 	cvtsi2sd	%rax, %xmm0
    0000198a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001992: 	callq	_Z13record_resultdPKc # Offset: 6546
    00001997: 	movq	0x110(%rsp), %rdi
    0000199f: 	cmpq	0x38(%rsp), %rdi
    000019a4: 	je	.Ltmp5150 # Offset: 6564
    000019a6: 	movq	0x120(%rsp), %rax
    000019ae: 	leaq	0x1(%rax), %rsi
    000019b2: 	callq	_ZdlPvm@PLT # Offset: 6578
.Ltmp5150:
    000019b7: 	movq	0x40(%rsp), %rsi
    000019bc: 	leaq	DATAat0x3d3eb(%rip), %rdx
    000019c3: 	movq	%r15, %rdi
    000019c6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6598
    000019cb: 	callq	clock@PLT # Offset: 6603
    000019d0: 	movl	iterations(%rip), %ecx
    000019d6: 	movq	%rax, start_time(%rip)
    000019dd: 	testl	%ecx, %ecx
    000019df: 	jle	.Ltmp5151 # Offset: 6623
    000019e5: 	movslq	%r13d, %rax
    000019e8: 	xorl	%ebp, %ebp
    000019ea: 	leaq	0x20b0(%rsp), %rbx
    000019f2: 	leaq	0x130(%rsp,%rax), %r14
    000019fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5154:
    00001a00: 	cvttsd2si	init_value(%rip), %edx
    00001a08: 	movq	%r12, %rax
    00001a0b: 	pxor	%xmm0, %xmm0
    00001a0f: 	shll	$0x6, %edx
    00001a12: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5152:
    00001a18: 	paddb	(%rax), %xmm0
    00001a1c: 	addq	$0x10, %rax
    00001a20: 	cmpq	%rax, %rbx
    00001a23: 	jne	.Ltmp5152 # Offset: 6691
    00001a25: 	movdqa	%xmm0, %xmm1
    00001a29: 	psrldq	$0x8, %xmm1
    00001a2e: 	paddb	%xmm1, %xmm0
    00001a32: 	pxor	%xmm1, %xmm1
    00001a36: 	psadbw	%xmm1, %xmm0
    00001a3a: 	movd	%xmm0, %eax
    00001a3e: 	movb	%al, (%r14)
    00001a41: 	cmpb	%al, %dl
    00001a43: 	je	.Ltmp5153 # Offset: 6723
    00001a45: 	movq	0x110(%rsp), %rdx
    00001a4d: 	leaq	DATAat0x3d1c8(%rip), %rsi
    00001a54: 	movl	$0x1, %edi
    00001a59: 	xorl	%eax, %eax
    00001a5b: 	callq	__printf_chk@PLT # Offset: 6747
    00001a60: 	movl	iterations(%rip), %ecx
.Ltmp5153:
    00001a66: 	addl	$0x1, %ebp
    00001a69: 	cmpl	%ecx, %ebp
    00001a6b: 	jl	.Ltmp5154 # Offset: 6763
.Ltmp5151:
    00001a6d: 	movq	%r15, %rsi
    00001a70: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a77: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 6775
    00001a7c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a83: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a8a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a91: 	je	.Ltmp5155 # Offset: 6801
.Ltmp5230:
    00001a97: 	movq	-0x20(%rax), %rbp
    00001a9b: 	callq	clock@PLT # Offset: 6811
    00001aa0: 	pxor	%xmm0, %xmm0
    00001aa4: 	movq	%rax, end_time(%rip)
    00001aab: 	movq	%rbp, %rdi
    00001aae: 	subq	start_time(%rip), %rax
    00001ab5: 	cvtsi2sd	%rax, %xmm0
    00001aba: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001ac2: 	callq	_Z13record_resultdPKc # Offset: 6850
    00001ac7: 	movq	0x110(%rsp), %rdi
    00001acf: 	cmpq	0x38(%rsp), %rdi
    00001ad4: 	je	.Ltmp5156 # Offset: 6868
    00001ad6: 	movq	0x120(%rsp), %rax
    00001ade: 	leaq	0x1(%rax), %rsi
    00001ae2: 	callq	_ZdlPvm@PLT # Offset: 6882
.Ltmp5156:
    00001ae7: 	movq	0x40(%rsp), %rsi
    00001aec: 	leaq	DATAat0x3d400(%rip), %rdx
    00001af3: 	movq	%r15, %rdi
    00001af6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6902
    00001afb: 	callq	clock@PLT # Offset: 6907
    00001b00: 	movl	iterations(%rip), %ecx
    00001b06: 	xorl	%ebp, %ebp
    00001b08: 	leaq	0x20b0(%rsp), %rbx
    00001b10: 	movq	%rax, start_time(%rip)
    00001b17: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001b1e: 	testl	%ecx, %ecx
    00001b20: 	jle	.Ltmp5157 # Offset: 6944
    00001b22: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5160:
    00001b28: 	cvttsd2si	init_value(%rip), %edx
    00001b30: 	movq	%r12, %rax
    00001b33: 	pxor	%xmm0, %xmm0
    00001b37: 	shll	$0x6, %edx
    00001b3a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5158:
    00001b40: 	paddb	(%rax), %xmm0
    00001b44: 	addq	$0x10, %rax
    00001b48: 	cmpq	%rbx, %rax
    00001b4b: 	jne	.Ltmp5158 # Offset: 6987
    00001b4d: 	movdqa	%xmm0, %xmm1
    00001b51: 	psrldq	$0x8, %xmm1
    00001b56: 	paddb	%xmm1, %xmm0
    00001b5a: 	pxor	%xmm1, %xmm1
    00001b5e: 	psadbw	%xmm1, %xmm0
    00001b62: 	movd	%xmm0, %eax
    00001b66: 	movb	%al, 0x96(%rsp)
    00001b6d: 	cmpb	%dl, %al
    00001b6f: 	je	.Ltmp5159 # Offset: 7023
    00001b71: 	movq	0x110(%rsp), %rdx
    00001b79: 	movq	%r14, %rsi
    00001b7c: 	movl	$0x1, %edi
    00001b81: 	xorl	%eax, %eax
    00001b83: 	callq	__printf_chk@PLT # Offset: 7043
    00001b88: 	movl	iterations(%rip), %ecx
.Ltmp5159:
    00001b8e: 	addl	$0x1, %ebp
    00001b91: 	cmpl	%ecx, %ebp
    00001b93: 	jl	.Ltmp5160 # Offset: 7059
.Ltmp5157:
    00001b95: 	movq	%r15, %rsi
    00001b98: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b9f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7071
    00001ba4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bb2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bb9: 	je	.Ltmp5161 # Offset: 7097
.Ltmp5229:
    00001bbf: 	movq	-0x20(%rax), %rbp
    00001bc3: 	callq	clock@PLT # Offset: 7107
    00001bc8: 	pxor	%xmm0, %xmm0
    00001bcc: 	movq	%rax, end_time(%rip)
    00001bd3: 	movq	%rbp, %rdi
    00001bd6: 	subq	start_time(%rip), %rax
    00001bdd: 	cvtsi2sd	%rax, %xmm0
    00001be2: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001bea: 	callq	_Z13record_resultdPKc # Offset: 7146
    00001bef: 	movq	0x110(%rsp), %rdi
    00001bf7: 	cmpq	0x38(%rsp), %rdi
    00001bfc: 	je	.Ltmp5162 # Offset: 7164
    00001bfe: 	movq	0x120(%rsp), %rax
    00001c06: 	leaq	0x1(%rax), %rsi
    00001c0a: 	callq	_ZdlPvm@PLT # Offset: 7178
.Ltmp5162:
    00001c0f: 	movq	0x40(%rsp), %rsi
    00001c14: 	leaq	DATAat0x3d41a(%rip), %rdx
    00001c1b: 	movq	%r15, %rdi
    00001c1e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7198
    00001c23: 	callq	clock@PLT # Offset: 7203
    00001c28: 	movl	iterations(%rip), %ecx
    00001c2e: 	xorl	%ebp, %ebp
    00001c30: 	leaq	0x20b0(%rsp), %rbx
    00001c38: 	movq	%rax, start_time(%rip)
    00001c3f: 	leaq	DATAat0x3d1c8(%rip), %r14
    00001c46: 	testl	%ecx, %ecx
    00001c48: 	jle	.Ltmp5163 # Offset: 7240
    00001c4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5166:
    00001c50: 	cvttsd2si	init_value(%rip), %edx
    00001c58: 	movq	%r12, %rax
    00001c5b: 	pxor	%xmm0, %xmm0
    00001c5f: 	shll	$0x6, %edx
    00001c62: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5164:
    00001c68: 	paddb	(%rax), %xmm0
    00001c6c: 	addq	$0x10, %rax
    00001c70: 	cmpq	%rbx, %rax
    00001c73: 	jne	.Ltmp5164 # Offset: 7283
    00001c75: 	movdqa	%xmm0, %xmm1
    00001c79: 	psrldq	$0x8, %xmm1
    00001c7e: 	paddb	%xmm1, %xmm0
    00001c82: 	pxor	%xmm1, %xmm1
    00001c86: 	psadbw	%xmm1, %xmm0
    00001c8a: 	movd	%xmm0, %eax
    00001c8e: 	movb	%al, 0x96(%rsp)
    00001c95: 	cmpb	%al, %dl
    00001c97: 	je	.Ltmp5165 # Offset: 7319
    00001c99: 	movq	0x110(%rsp), %rdx
    00001ca1: 	movq	%r14, %rsi
    00001ca4: 	movl	$0x1, %edi
    00001ca9: 	xorl	%eax, %eax
    00001cab: 	callq	__printf_chk@PLT # Offset: 7339
    00001cb0: 	movl	iterations(%rip), %ecx
.Ltmp5165:
    00001cb6: 	addl	$0x1, %ebp
    00001cb9: 	cmpl	%ecx, %ebp
    00001cbb: 	jl	.Ltmp5166 # Offset: 7355
.Ltmp5163:
    00001cbd: 	movq	%r15, %rsi
    00001cc0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cc7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7367
    00001ccc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cd3: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001cda: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ce1: 	je	.Ltmp5167 # Offset: 7393
.Ltmp5235:
    00001ce7: 	movq	-0x20(%rax), %rbp
    00001ceb: 	callq	clock@PLT # Offset: 7403
    00001cf0: 	pxor	%xmm0, %xmm0
    00001cf4: 	movq	%rax, end_time(%rip)
    00001cfb: 	movq	%rbp, %rdi
    00001cfe: 	subq	start_time(%rip), %rax
    00001d05: 	cvtsi2sd	%rax, %xmm0
    00001d0a: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001d12: 	callq	_Z13record_resultdPKc # Offset: 7442
    00001d17: 	movq	0x110(%rsp), %rdi
    00001d1f: 	cmpq	0x38(%rsp), %rdi
    00001d24: 	je	.Ltmp5168 # Offset: 7460
    00001d26: 	movq	0x120(%rsp), %rax
    00001d2e: 	leaq	0x1(%rax), %rsi
    00001d32: 	callq	_ZdlPvm@PLT # Offset: 7474
.Ltmp5168:
    00001d37: 	movq	0x40(%rsp), %rsi
    00001d3c: 	leaq	DATAat0x3d430(%rip), %rdx
    00001d43: 	movq	%r15, %rdi
    00001d46: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7494
    00001d4b: 	movq	%r15, %rcx
    00001d4e: 	movl	%r13d, %edx
    00001d51: 	movl	$0x1f40, %esi
    00001d56: 	movq	%r12, %rdi
    00001d59: 	callq	_Z23test_array_const_in_optIhEvPT_iiRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7513
    00001d5e: 	movq	0x110(%rsp), %rdi
    00001d66: 	cmpq	0x38(%rsp), %rdi
    00001d6b: 	je	.Ltmp5169 # Offset: 7531
    00001d6d: 	movq	0x120(%rsp), %rax
    00001d75: 	leaq	0x1(%rax), %rsi
    00001d79: 	callq	_ZdlPvm@PLT # Offset: 7545
.Ltmp5169:
    00001d7e: 	movq	0x40(%rsp), %rsi
    00001d83: 	leaq	DATAat0x3d448(%rip), %rdx
    00001d8a: 	movq	%r15, %rdi
    00001d8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7565
    00001d92: 	callq	clock@PLT # Offset: 7570
    00001d97: 	movl	iterations(%rip), %r8d
    00001d9e: 	movslq	%r13d, %rbp
    00001da1: 	xorl	%ebx, %ebx
    00001da3: 	addq	%r12, %rbp
    00001da6: 	movq	%rax, start_time(%rip)
    00001dad: 	leaq	DATAat0x3d1c8(%rip), %r12
    00001db4: 	testl	%r8d, %r8d
    00001db7: 	jle	.Ltmp5170 # Offset: 7607
.Ltmp5226:
    00001db9: 	cvttsd2si	init_value(%rip), %eax
    00001dc1: 	movzbl	(%rbp), %edx
    00001dc5: 	shll	$0x6, %edx
    00001dc8: 	shll	$0x6, %eax
    00001dcb: 	cmpb	%al, %dl
    00001dcd: 	jne	.Ltmp5171 # Offset: 7629
.Ltmp5170:
    00001dd3: 	movq	%r15, %rsi
    00001dd6: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ddd: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7645
    00001de2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001de9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001df0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001df7: 	je	.Ltmp5172 # Offset: 7671
.Ltmp5228:
    00001dfd: 	movq	-0x20(%rax), %rbp
    00001e01: 	callq	clock@PLT # Offset: 7681
    00001e06: 	pxor	%xmm0, %xmm0
    00001e0a: 	movq	%rax, end_time(%rip)
    00001e11: 	movq	%rbp, %rdi
    00001e14: 	subq	start_time(%rip), %rax
    00001e1b: 	cvtsi2sd	%rax, %xmm0
    00001e20: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001e28: 	callq	_Z13record_resultdPKc # Offset: 7720
    00001e2d: 	movq	0x110(%rsp), %rdi
    00001e35: 	cmpq	0x38(%rsp), %rdi
    00001e3a: 	je	.Ltmp5173 # Offset: 7738
    00001e3c: 	movq	0x120(%rsp), %rax
    00001e44: 	leaq	0x1(%rax), %rsi
    00001e48: 	callq	_ZdlPvm@PLT # Offset: 7752
.Ltmp5173:
    00001e4d: 	cvttsd2si	init_value(%rip), %ebx
    00001e55: 	movq	0x40(%rsp), %rsi
    00001e5a: 	leaq	DATAat0x3d45c(%rip), %rdx
    00001e61: 	movq	%r15, %rdi
    00001e64: 	movb	%bl, 0x96(%rsp)
    00001e6b: 	movb	%bl, 0x90(%rsp)
    00001e72: 	movb	%bl, 0x9c(%rsp)
    00001e79: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7801
    00001e7e: 	movq	0x68(%rsp), %rdi
    00001e83: 	movq	%r15, %rdx
    00001e86: 	movl	$0x1f40, %esi
    00001e8b: 	callq	_Z24test_struct_const_in_optIh13simple_structIhEEvPT0_iRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 7819
    00001e90: 	movq	0x110(%rsp), %rdi
    00001e98: 	cmpq	0x38(%rsp), %rdi
    00001e9d: 	je	.Ltmp5174 # Offset: 7837
    00001e9f: 	movq	0x120(%rsp), %rax
    00001ea7: 	leaq	0x1(%rax), %rsi
    00001eab: 	callq	_ZdlPvm@PLT # Offset: 7851
.Ltmp5174:
    00001eb0: 	movq	0x40(%rsp), %rsi
    00001eb5: 	leaq	DATAat0x3d475(%rip), %rdx
    00001ebc: 	movq	%r15, %rdi
    00001ebf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7871
    00001ec4: 	callq	clock@PLT # Offset: 7876
    00001ec9: 	movl	iterations(%rip), %edi
    00001ecf: 	xorl	%ebp, %ebp
    00001ed1: 	shll	$0x6, %ebx
    00001ed4: 	movq	%rax, start_time(%rip)
    00001edb: 	leaq	DATAat0x3d1c8(%rip), %r12
    00001ee2: 	testl	%edi, %edi
    00001ee4: 	jle	.Ltmp5175 # Offset: 7908
.Ltmp5227:
    00001ee6: 	cvttsd2si	init_value(%rip), %eax
    00001eee: 	shll	$0x6, %eax
    00001ef1: 	cmpb	%al, %bl
    00001ef3: 	jne	.Ltmp5176 # Offset: 7923
.Ltmp5175:
    00001ef9: 	movq	%r15, %rsi
    00001efc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f03: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 7939
    00001f08: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f0f: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001f16: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f1d: 	je	.Ltmp5177 # Offset: 7965
.Ltmp5239:
    00001f23: 	movq	-0x20(%rax), %rbp
    00001f27: 	callq	clock@PLT # Offset: 7975
    00001f2c: 	pxor	%xmm0, %xmm0
    00001f30: 	movq	%rax, end_time(%rip)
    00001f37: 	movq	%rbp, %rdi
    00001f3a: 	subq	start_time(%rip), %rax
    00001f41: 	cvtsi2sd	%rax, %xmm0
    00001f46: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00001f4e: 	callq	_Z13record_resultdPKc # Offset: 8014
    00001f53: 	movq	0x110(%rsp), %rdi
    00001f5b: 	cmpq	0x38(%rsp), %rdi
    00001f60: 	je	.Ltmp5178 # Offset: 8032
    00001f62: 	movq	0x120(%rsp), %rax
    00001f6a: 	leaq	0x1(%rax), %rsi
    00001f6e: 	callq	_ZdlPvm@PLT # Offset: 8046
.Ltmp5178:
    00001f73: 	movq	0x40(%rsp), %rsi
    00001f78: 	leaq	DATAat0x3d48a(%rip), %rdx
    00001f7f: 	movq	%r15, %rdi
    00001f82: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8066
    00001f87: 	callq	clock@PLT # Offset: 8071
    00001f8c: 	movl	iterations(%rip), %esi
    00001f92: 	movq	%rax, start_time(%rip)
    00001f99: 	testl	%esi, %esi
    00001f9b: 	jle	.Ltmp5179 # Offset: 8091
    00001f9d: 	movzbl	0x20af(%rsp), %edx
    00001fa5: 	movslq	%r13d, %rax
    00001fa8: 	movb	%dl, 0x130(%rsp,%rax)
.Ltmp5179:
    00001faf: 	movq	%r15, %rsi
    00001fb2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fb9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8121
    00001fbe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fc5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fcc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fd3: 	je	.Ltmp5180 # Offset: 8147
.Ltmp5238:
    00001fd9: 	movq	-0x20(%rax), %rbp
    00001fdd: 	callq	clock@PLT # Offset: 8157
    00001fe2: 	pxor	%xmm0, %xmm0
    00001fe6: 	movq	%rax, end_time(%rip)
    00001fed: 	movq	%rbp, %rdi
    00001ff0: 	subq	start_time(%rip), %rax
    00001ff7: 	cvtsi2sd	%rax, %xmm0
    00001ffc: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002004: 	callq	_Z13record_resultdPKc # Offset: 8196
    00002009: 	movq	0x110(%rsp), %rdi
    00002011: 	cmpq	0x38(%rsp), %rdi
    00002016: 	je	.Ltmp5181 # Offset: 8214
    00002018: 	movq	0x120(%rsp), %rax
    00002020: 	leaq	0x1(%rax), %rsi
    00002024: 	callq	_ZdlPvm@PLT # Offset: 8228
.Ltmp5181:
    00002029: 	movq	0x40(%rsp), %rsi
    0000202e: 	leaq	DATAat0x3d49d(%rip), %rdx
    00002035: 	movq	%r15, %rdi
    00002038: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8248
    0000203d: 	callq	clock@PLT # Offset: 8253
    00002042: 	movl	iterations(%rip), %ecx
    00002048: 	movq	%rax, start_time(%rip)
    0000204f: 	testl	%ecx, %ecx
    00002051: 	jle	.Ltmp5182 # Offset: 8273
    00002053: 	movzbl	0x20af(%rsp), %eax
    0000205b: 	movb	%al, 0x130(%rsp,%r13)
.Ltmp5182:
    00002063: 	movq	%r15, %rsi
    00002066: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000206d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8301
    00002072: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002079: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002080: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002087: 	je	.Ltmp5183 # Offset: 8327
.Ltmp5237:
    0000208d: 	movq	-0x20(%rax), %rbp
    00002091: 	callq	clock@PLT # Offset: 8337
    00002096: 	pxor	%xmm0, %xmm0
    0000209a: 	movq	%rax, end_time(%rip)
    000020a1: 	movq	%rbp, %rdi
    000020a4: 	subq	start_time(%rip), %rax
    000020ab: 	cvtsi2sd	%rax, %xmm0
    000020b0: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000020b8: 	callq	_Z13record_resultdPKc # Offset: 8376
    000020bd: 	movq	0x110(%rsp), %rdi
    000020c5: 	cmpq	0x38(%rsp), %rdi
    000020ca: 	je	.Ltmp5184 # Offset: 8394
    000020cc: 	movq	0x120(%rsp), %rax
    000020d4: 	leaq	0x1(%rax), %rsi
    000020d8: 	callq	_ZdlPvm@PLT # Offset: 8408
.Ltmp5184:
    000020dd: 	movq	0x40(%rsp), %rsi
    000020e2: 	leaq	DATAat0x3d4ac(%rip), %rdx
    000020e9: 	movq	%r15, %rdi
    000020ec: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8428
    000020f1: 	callq	clock@PLT # Offset: 8433
    000020f6: 	movl	iterations(%rip), %edx
    000020fc: 	movq	%rax, start_time(%rip)
    00002103: 	testl	%edx, %edx
    00002105: 	jle	.Ltmp5185 # Offset: 8453
    00002107: 	movzbl	0x20af(%rsp), %eax
    0000210f: 	movb	%al, 0x96(%rsp)
.Ltmp5185:
    00002116: 	movq	%r15, %rsi
    00002119: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002120: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8480
    00002125: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000212c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002133: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000213a: 	je	.Ltmp5186 # Offset: 8506
.Ltmp5236:
    00002140: 	movq	-0x20(%rax), %rbp
    00002144: 	callq	clock@PLT # Offset: 8516
    00002149: 	pxor	%xmm0, %xmm0
    0000214d: 	movq	%rax, end_time(%rip)
    00002154: 	movq	%rbp, %rdi
    00002157: 	subq	start_time(%rip), %rax
    0000215e: 	cvtsi2sd	%rax, %xmm0
    00002163: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000216b: 	callq	_Z13record_resultdPKc # Offset: 8555
    00002170: 	movq	0x110(%rsp), %rdi
    00002178: 	cmpq	0x38(%rsp), %rdi
    0000217d: 	je	.Ltmp5187 # Offset: 8573
    0000217f: 	movq	0x120(%rsp), %rax
    00002187: 	leaq	0x1(%rax), %rsi
    0000218b: 	callq	_ZdlPvm@PLT # Offset: 8587
.Ltmp5187:
    00002190: 	movq	0x40(%rsp), %rsi
    00002195: 	leaq	DATAat0x3d4c0(%rip), %rdx
    0000219c: 	movq	%r15, %rdi
    0000219f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8607
    000021a4: 	callq	clock@PLT # Offset: 8612
    000021a9: 	movq	%rax, start_time(%rip)
    000021b0: 	movl	iterations(%rip), %eax
    000021b6: 	testl	%eax, %eax
    000021b8: 	jle	.Ltmp5188 # Offset: 8632
    000021ba: 	movzbl	0x20af(%rsp), %eax
    000021c2: 	movb	%al, 0x96(%rsp)
.Ltmp5188:
    000021c9: 	movq	%r15, %rsi
    000021cc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021d3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 8659
    000021d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021df: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000021e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021ed: 	je	.Ltmp5189 # Offset: 8685
.Ltmp5245:
    000021f3: 	movq	-0x20(%rax), %rbp
    000021f7: 	callq	clock@PLT # Offset: 8695
    000021fc: 	pxor	%xmm0, %xmm0
    00002200: 	movq	%rax, end_time(%rip)
    00002207: 	movq	%rbp, %rdi
    0000220a: 	subq	start_time(%rip), %rax
    00002211: 	cvtsi2sd	%rax, %xmm0
    00002216: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000221e: 	callq	_Z13record_resultdPKc # Offset: 8734
    00002223: 	movq	0x110(%rsp), %rdi
    0000222b: 	cmpq	0x38(%rsp), %rdi
    00002230: 	je	.Ltmp5190 # Offset: 8752
    00002232: 	movq	0x120(%rsp), %rax
    0000223a: 	leaq	0x1(%rax), %rsi
    0000223e: 	callq	_ZdlPvm@PLT # Offset: 8766
.Ltmp5190:
    00002243: 	movq	0x40(%rsp), %r14
    00002248: 	leaq	0xf0(%rsp), %rdi
    00002250: 	leaq	DATAat0x3d4d0(%rip), %rdx
    00002257: 	movq	%r14, %rsi
    0000225a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8794
    0000225f: 	movl	iterations(%rip), %edx
    00002265: 	xorl	%r8d, %r8d
    00002268: 	xorl	%ecx, %ecx
    0000226a: 	movl	$0x1f40, %esi
    0000226f: 	movq	0xf0(%rsp), %rdi
    00002277: 	callq	_Z9summarizePKciiii # Offset: 8823
    0000227c: 	movsd	DATAat0x3d708(%rip), %xmm0
    00002284: 	leaq	DATAat0x3d4e7(%rip), %rdx
    0000228b: 	movq	%r14, %rsi
    0000228e: 	movq	%r15, %rdi
    00002291: 	addsd	init_value(%rip), %xmm0
    00002299: 	cvttsd2si	%xmm0, %ebx
    0000229d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8861
    000022a2: 	callq	clock@PLT # Offset: 8866
    000022a7: 	movl	iterations(%rip), %ebp
    000022ad: 	movzbl	%bl, %r14d
    000022b1: 	movq	%rax, start_time(%rip)
    000022b8: 	testl	%ebp, %ebp
    000022ba: 	jle	.Ltmp5191 # Offset: 8890
    000022c0: 	pxor	%xmm3, %xmm3
    000022c4: 	xorl	%ebx, %ebx
    000022c6: 	movsd	DATAat0x3d6b8(%rip), %xmm4
    000022ce: 	leaq	DATAat0x3d1c8(%rip), %r12
    000022d5: 	cvtsi2sd	%r14d, %xmm3
    000022da: 	movsd	%xmm4, 0x18(%rsp)
    000022e0: 	movq	%xmm3, %r13
    000022e5: 	nopl	(%rax) # Size: 3
.Ltmp5193:
    000022e8: 	movsd	0x18(%rsp), %xmm1
    000022ee: 	movq	%r13, %xmm0
    000022f3: 	callq	pow@PLT # Offset: 8947
    000022f8: 	movsd	0x18(%rsp), %xmm1
    000022fe: 	movsd	%xmm0, (%rsp)
    00002303: 	movq	%r13, %xmm0
    00002308: 	callq	pow@PLT # Offset: 8968
    0000230d: 	movsd	(%rsp), %xmm2
    00002312: 	cvttsd2si	%xmm0, %eax
    00002316: 	cvttsd2si	%xmm2, %edx
    0000231a: 	shll	$0x6, %eax
    0000231d: 	shll	$0x6, %edx
    00002320: 	cmpb	%al, %dl
    00002322: 	je	.Ltmp5192 # Offset: 8994
    00002324: 	movq	0x110(%rsp), %rdx
    0000232c: 	movq	%r12, %rsi
    0000232f: 	movl	$0x1, %edi
    00002334: 	xorl	%eax, %eax
    00002336: 	callq	__printf_chk@PLT # Offset: 9014
    0000233b: 	movl	iterations(%rip), %ebp
.Ltmp5192:
    00002341: 	addl	$0x1, %ebx
    00002344: 	cmpl	%ebp, %ebx
    00002346: 	jl	.Ltmp5193 # Offset: 9030
.Ltmp5191:
    00002348: 	movq	%r15, %rsi
    0000234b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002352: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9042
    00002357: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000235e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002365: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000236c: 	je	.Ltmp5194 # Offset: 9068
.Ltmp5244:
    00002372: 	movq	-0x20(%rax), %rbp
    00002376: 	callq	clock@PLT # Offset: 9078
    0000237b: 	pxor	%xmm0, %xmm0
    0000237f: 	movq	%rax, end_time(%rip)
    00002386: 	movq	%rbp, %rdi
    00002389: 	subq	start_time(%rip), %rax
    00002390: 	cvtsi2sd	%rax, %xmm0
    00002395: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000239d: 	callq	_Z13record_resultdPKc # Offset: 9117
    000023a2: 	movq	0x110(%rsp), %rdi
    000023aa: 	cmpq	0x38(%rsp), %rdi
    000023af: 	je	.Ltmp5195 # Offset: 9135
    000023b1: 	movq	0x120(%rsp), %rax
    000023b9: 	leaq	0x1(%rax), %rsi
    000023bd: 	callq	_ZdlPvm@PLT # Offset: 9149
.Ltmp5195:
    000023c2: 	movq	0x40(%rsp), %rsi
    000023c7: 	leaq	DATAat0x3d501(%rip), %rdx
    000023ce: 	movq	%r15, %rdi
    000023d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9169
    000023d6: 	movq	%r15, %rdx
    000023d9: 	leaq	_Z10test_powerIhET_S0_(%rip), %rsi
    000023e0: 	movl	%r14d, %edi
    000023e3: 	callq	"_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9187
    000023e8: 	movq	0x110(%rsp), %rdi
    000023f0: 	cmpq	0x38(%rsp), %rdi
    000023f5: 	je	.Ltmp5196 # Offset: 9205
    000023f7: 	movq	0x120(%rsp), %rax
    000023ff: 	leaq	0x1(%rax), %rsi
    00002403: 	callq	_ZdlPvm@PLT # Offset: 9219
.Ltmp5196:
    00002408: 	movq	0x40(%rsp), %rsi
    0000240d: 	leaq	DATAat0x3d51f(%rip), %rdx
    00002414: 	movq	%r15, %rdi
    00002417: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9239
    0000241c: 	callq	clock@PLT # Offset: 9244
    00002421: 	movq	%rax, start_time(%rip)
    00002428: 	movl	iterations(%rip), %eax
    0000242e: 	movl	%eax, 0x34(%rsp)
    00002432: 	testl	%eax, %eax
    00002434: 	jle	.Ltmp5197 # Offset: 9268
    0000243a: 	pxor	%xmm5, %xmm5
    0000243e: 	movsd	DATAat0x3d6b8(%rip), %xmm6
    00002446: 	xorl	%r13d, %r13d
    00002449: 	cvtsi2sd	%r14d, %xmm5
    0000244e: 	movsd	%xmm6, 0x18(%rsp)
    00002454: 	movsd	%xmm5, 0x10(%rsp)
    0000245a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5200:
    00002460: 	movsd	0x18(%rsp), %xmm1
    00002466: 	movsd	0x10(%rsp), %xmm0
    0000246c: 	movl	$0x1f40, %ebx
    00002471: 	xorl	%ebp, %ebp
    00002473: 	callq	pow@PLT # Offset: 9331
    00002478: 	movsd	0x18(%rsp), %xmm1
    0000247e: 	cvttsd2si	%xmm0, %r12d
    00002483: 	shll	$0x6, %r12d
    00002487: 	nopw	(%rax,%rax) # Size: 9
.Ltmp5198:
    00002490: 	movsd	0x10(%rsp), %xmm0
    00002496: 	movsd	%xmm1, (%rsp)
    0000249b: 	callq	pow@PLT # Offset: 9371
    000024a0: 	movsd	(%rsp), %xmm1
    000024a5: 	cvttsd2si	%xmm0, %eax
    000024a9: 	addl	%eax, %ebp
    000024ab: 	subl	$0x1, %ebx
    000024ae: 	jne	.Ltmp5198 # Offset: 9390
    000024b0: 	cmpb	%bpl, %r12b
    000024b3: 	je	.Ltmp5199 # Offset: 9395
    000024b5: 	movq	0x110(%rsp), %rdx
    000024bd: 	leaq	DATAat0x3d1c8(%rip), %rsi
    000024c4: 	movl	$0x1, %edi
    000024c9: 	xorl	%eax, %eax
    000024cb: 	callq	__printf_chk@PLT # Offset: 9419
    000024d0: 	movl	iterations(%rip), %eax
    000024d6: 	movl	%eax, 0x34(%rsp)
.Ltmp5199:
    000024da: 	addl	$0x1, %r13d
    000024de: 	cmpl	0x34(%rsp), %r13d
    000024e3: 	jl	.Ltmp5200 # Offset: 9443
.Ltmp5197:
    000024e9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000024f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000024f7: 	subq	$0x20, %rax
    000024fb: 	cmpq	%rax, %rbx
    000024fe: 	je	.Ltmp5201 # Offset: 9470
    00002504: 	leaq	0x10(%rbx), %rdi
    00002508: 	movq	0x118(%rsp), %r12
    00002510: 	movq	%rdi, (%rbx)
    00002513: 	movq	0x110(%rsp), %rbp
    0000251b: 	movq	%rbp, %rax
    0000251e: 	addq	%r12, %rax
    00002521: 	je	.Ltmp5202 # Offset: 9505
    00002523: 	testq	%rbp, %rbp
    00002526: 	je	.Ltmp5203 # Offset: 9510
.Ltmp5202:
    0000252c: 	movq	%r12, 0x88(%rsp)
    00002534: 	cmpq	$0xf, %r12
    00002538: 	ja	.Ltmp5204 # Offset: 9528
    0000253e: 	cmpq	$0x1, %r12
    00002542: 	jne	.Ltmp5205 # Offset: 9538
    00002548: 	movzbl	(%rbp), %eax
    0000254c: 	movb	%al, 0x10(%rbx)
.Ltmp5262:
    0000254f: 	movq	%r12, 0x8(%rbx)
    00002553: 	movb	$0x0, (%rdi,%r12)
    00002558: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000255f: 	addq	$0x20, %rax
    00002563: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp5243:
    0000256a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002571: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002578: 	je	.Ltmp5206 # Offset: 9592
.Ltmp5242:
    0000257e: 	movq	-0x20(%rax), %rbp
    00002582: 	callq	clock@PLT # Offset: 9602
    00002587: 	pxor	%xmm0, %xmm0
    0000258b: 	movq	%rax, end_time(%rip)
    00002592: 	movq	%rbp, %rdi
    00002595: 	subq	start_time(%rip), %rax
    0000259c: 	cvtsi2sd	%rax, %xmm0
    000025a1: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    000025a9: 	callq	_Z13record_resultdPKc # Offset: 9641
    000025ae: 	movq	0x110(%rsp), %rdi
    000025b6: 	cmpq	0x38(%rsp), %rdi
    000025bb: 	je	.Ltmp5207 # Offset: 9659
    000025bd: 	movq	0x120(%rsp), %rax
    000025c5: 	leaq	0x1(%rax), %rsi
    000025c9: 	callq	_ZdlPvm@PLT # Offset: 9673
.Ltmp5207:
    000025ce: 	movq	0x40(%rsp), %rsi
    000025d3: 	leaq	DATAat0x3d535(%rip), %rdx
    000025da: 	movq	%r15, %rdi
    000025dd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9693
    000025e2: 	callq	clock@PLT # Offset: 9698
    000025e7: 	movq	%r15, %rsi
    000025ea: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000025f1: 	movq	%rax, start_time(%rip)
    000025f8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 9720
    000025fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002604: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000260b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002612: 	je	.Ltmp5208 # Offset: 9746
.Ltmp5241:
    00002618: 	movq	-0x20(%rax), %rbp
    0000261c: 	callq	clock@PLT # Offset: 9756
    00002621: 	pxor	%xmm0, %xmm0
    00002625: 	movq	%rax, end_time(%rip)
    0000262c: 	movq	%rbp, %rdi
    0000262f: 	subq	start_time(%rip), %rax
    00002636: 	cvtsi2sd	%rax, %xmm0
    0000263b: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002643: 	callq	_Z13record_resultdPKc # Offset: 9795
    00002648: 	movq	0x110(%rsp), %rdi
    00002650: 	cmpq	0x38(%rsp), %rdi
    00002655: 	je	.Ltmp5209 # Offset: 9813
    00002657: 	movq	0x120(%rsp), %rax
    0000265f: 	leaq	0x1(%rax), %rsi
    00002663: 	callq	_ZdlPvm@PLT # Offset: 9827
.Ltmp5209:
    00002668: 	movq	0x40(%rsp), %rsi
    0000266d: 	leaq	DATAat0x3d640(%rip), %rdx
    00002674: 	movq	%r15, %rdi
    00002677: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9847
    0000267c: 	leaq	_Z8test_cosIhET_S0_(%rip), %rbp
    00002683: 	movq	%r15, %rdx
    00002686: 	movl	%r14d, %edi
    00002689: 	movq	%rbp, %rsi
    0000268c: 	callq	"_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9868
    00002691: 	movq	0x110(%rsp), %rdi
    00002699: 	cmpq	0x38(%rsp), %rdi
    0000269e: 	je	.Ltmp5210 # Offset: 9886
    000026a0: 	movq	0x120(%rsp), %rax
    000026a8: 	leaq	0x1(%rax), %rsi
    000026ac: 	callq	_ZdlPvm@PLT # Offset: 9900
.Ltmp5210:
    000026b1: 	movq	0x40(%rsp), %rsi
    000026b6: 	leaq	DATAat0x3d550(%rip), %rdx
    000026bd: 	movq	%r15, %rdi
    000026c0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9920
    000026c5: 	movq	%r15, %rdx
    000026c8: 	movq	%rbp, %rsi
    000026cb: 	movl	%r14d, %edi
    000026ce: 	callq	"_Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 9934
    000026d3: 	movq	0x110(%rsp), %rdi
    000026db: 	cmpq	0x38(%rsp), %rdi
    000026e0: 	je	.Ltmp5211 # Offset: 9952
    000026e2: 	movq	0x120(%rsp), %rax
    000026ea: 	leaq	0x1(%rax), %rsi
    000026ee: 	callq	_ZdlPvm@PLT # Offset: 9966
.Ltmp5211:
    000026f3: 	movq	0x40(%rsp), %rsi
    000026f8: 	leaq	DATAat0x3d567(%rip), %rdx
    000026ff: 	movq	%r15, %rdi
    00002702: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 9986
    00002707: 	callq	clock@PLT # Offset: 9991
    0000270c: 	movq	%r15, %rsi
    0000270f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002716: 	movq	%rax, start_time(%rip)
    0000271d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10013
    00002722: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002729: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002730: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002737: 	je	.Ltmp5212 # Offset: 10039
.Ltmp5240:
    0000273d: 	movq	-0x20(%rax), %rbp
    00002741: 	callq	clock@PLT # Offset: 10049
    00002746: 	pxor	%xmm0, %xmm0
    0000274a: 	movq	%rax, end_time(%rip)
    00002751: 	movq	%rbp, %rdi
    00002754: 	subq	start_time(%rip), %rax
    0000275b: 	cvtsi2sd	%rax, %xmm0
    00002760: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    00002768: 	callq	_Z13record_resultdPKc # Offset: 10088
    0000276d: 	movq	0x110(%rsp), %rdi
    00002775: 	cmpq	0x38(%rsp), %rdi
    0000277a: 	je	.Ltmp5213 # Offset: 10106
    0000277c: 	movq	0x120(%rsp), %rax
    00002784: 	leaq	0x1(%rax), %rsi
    00002788: 	callq	_ZdlPvm@PLT # Offset: 10120
.Ltmp5213:
    0000278d: 	movq	0x40(%rsp), %rsi
    00002792: 	leaq	DATAat0x3d660(%rip), %rdx
    00002799: 	movq	%r15, %rdi
    0000279c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10140
    000027a1: 	leaq	_Z8test_sqrIhET_S0_(%rip), %rbp
    000027a8: 	movq	%r15, %rdx
    000027ab: 	movl	%r14d, %edi
    000027ae: 	movq	%rbp, %rsi
    000027b1: 	callq	"_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10161
    000027b6: 	movq	0x110(%rsp), %rdi
    000027be: 	cmpq	0x38(%rsp), %rdi
    000027c3: 	je	.Ltmp5214 # Offset: 10179
    000027c5: 	movq	0x120(%rsp), %rax
    000027cd: 	leaq	0x1(%rax), %rsi
    000027d1: 	callq	_ZdlPvm@PLT # Offset: 10193
.Ltmp5214:
    000027d6: 	movq	0x40(%rsp), %rsi
    000027db: 	leaq	DATAat0x3d582(%rip), %rdx
    000027e2: 	movq	%r15, %rdi
    000027e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10213
    000027ea: 	movq	%r15, %rdx
    000027ed: 	movq	%rbp, %rsi
    000027f0: 	movl	%r14d, %edi
    000027f3: 	callq	"_Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10227
    000027f8: 	movq	0x110(%rsp), %rdi
    00002800: 	cmpq	0x38(%rsp), %rdi
    00002805: 	je	.Ltmp5215 # Offset: 10245
    00002807: 	movq	0x120(%rsp), %rax
    0000280f: 	leaq	0x1(%rax), %rsi
    00002813: 	callq	_ZdlPvm@PLT # Offset: 10259
.Ltmp5215:
    00002818: 	movq	0x40(%rsp), %rsi
    0000281d: 	leaq	DATAat0x3d599(%rip), %rdx
    00002824: 	movq	%r15, %rdi
    00002827: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10279
    0000282c: 	callq	clock@PLT # Offset: 10284
    00002831: 	movq	%r15, %rsi
    00002834: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000283b: 	movq	%rax, start_time(%rip)
    00002842: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_ # Offset: 10306
    00002847: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000284e: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00002855: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000285c: 	je	.Ltmp5216 # Offset: 10332
.Ltmp5233:
    00002862: 	movq	-0x20(%rax), %rbp
    00002866: 	callq	clock@PLT # Offset: 10342
    0000286b: 	pxor	%xmm0, %xmm0
    0000286f: 	movq	%rax, end_time(%rip)
    00002876: 	movq	%rbp, %rdi
    00002879: 	subq	start_time(%rip), %rax
    00002880: 	cvtsi2sd	%rax, %xmm0
    00002885: 	divsd	DATAat0x3d6d0(%rip), %xmm0
    0000288d: 	callq	_Z13record_resultdPKc # Offset: 10381
    00002892: 	movq	0x110(%rsp), %rdi
    0000289a: 	cmpq	0x38(%rsp), %rdi
    0000289f: 	je	.Ltmp5217 # Offset: 10399
    000028a1: 	movq	0x120(%rsp), %rax
    000028a9: 	leaq	0x1(%rax), %rsi
    000028ad: 	callq	_ZdlPvm@PLT # Offset: 10413
.Ltmp5217:
    000028b2: 	movq	0x40(%rsp), %rsi
    000028b7: 	leaq	DATAat0x3d5b2(%rip), %rdx
    000028be: 	movq	%r15, %rdi
    000028c1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10433
    000028c6: 	leaq	_Z9test_hashIhET_S0_(%rip), %rbp
    000028cd: 	movq	%r15, %rdx
    000028d0: 	movl	%r14d, %edi
    000028d3: 	movq	%rbp, %rsi
    000028d6: 	callq	"_Z27test_const_function_halfoptIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10454
    000028db: 	movq	0x110(%rsp), %rdi
    000028e3: 	cmpq	0x38(%rsp), %rdi
    000028e8: 	je	.Ltmp5218 # Offset: 10472
    000028ea: 	movq	0x120(%rsp), %rax
    000028f2: 	leaq	0x1(%rax), %rsi
    000028f6: 	callq	_ZdlPvm@PLT # Offset: 10486
.Ltmp5218:
    000028fb: 	movq	0x40(%rsp), %rsi
    00002900: 	leaq	DATAat0x3d5cf(%rip), %rdx
    00002907: 	movq	%r15, %rdi
    0000290a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10506
    0000290f: 	movq	%r15, %rdx
    00002912: 	movq	%rbp, %rsi
    00002915: 	movl	%r14d, %edi
    00002918: 	callq	"_Z19test_const_functionIhPFhhEEvPT_iiT0_RKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 10520
    0000291d: 	movq	0x110(%rsp), %rdi
    00002925: 	cmpq	0x38(%rsp), %rdi
    0000292a: 	je	.Ltmp5219 # Offset: 10538
    0000292c: 	movq	0x120(%rsp), %rax
    00002934: 	leaq	0x1(%rax), %rsi
    00002938: 	callq	_ZdlPvm@PLT # Offset: 10552
.Ltmp5219:
    0000293d: 	movq	0x40(%rsp), %rsi
    00002942: 	leaq	DATAat0x3d5e4(%rip), %rdx
    00002949: 	movq	%r15, %rdi
    0000294c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 10572
    00002951: 	movl	iterations(%rip), %edx
    00002957: 	xorl	%r8d, %r8d
    0000295a: 	xorl	%ecx, %ecx
    0000295c: 	movl	$0x1f40, %esi
    00002961: 	movq	0x110(%rsp), %rdi
    00002969: 	callq	_Z9summarizePKciiii # Offset: 10601
    0000296e: 	movq	0x110(%rsp), %rdi
    00002976: 	cmpq	0x38(%rsp), %rdi
    0000297b: 	je	.Ltmp5220 # Offset: 10619
    0000297d: 	movq	0x120(%rsp), %rax
    00002985: 	leaq	0x1(%rax), %rsi
    00002989: 	callq	_ZdlPvm@PLT # Offset: 10633
.Ltmp5220:
    0000298e: 	movq	0xf0(%rsp), %rdi
    00002996: 	leaq	0x100(%rsp), %rax
    0000299e: 	cmpq	%rax, %rdi
    000029a1: 	je	.Ltmp5221 # Offset: 10657
    000029a3: 	movq	0x100(%rsp), %rax
    000029ab: 	leaq	0x1(%rax), %rsi
    000029af: 	callq	_ZdlPvm@PLT # Offset: 10671
.Ltmp5221:
    000029b4: 	movq	0xd0(%rsp), %rdi
    000029bc: 	leaq	0xe0(%rsp), %rax
    000029c4: 	cmpq	%rax, %rdi
    000029c7: 	je	.Ltmp5222 # Offset: 10695
    000029c9: 	movq	0xe0(%rsp), %rax
    000029d1: 	leaq	0x1(%rax), %rsi
    000029d5: 	callq	_ZdlPvm@PLT # Offset: 10709
.Ltmp5222:
    000029da: 	movq	0xb0(%rsp), %rdi
    000029e2: 	cmpq	0x70(%rsp), %rdi
    000029e7: 	je	.Ltmp5223 # Offset: 10727
    000029e9: 	movq	0xc0(%rsp), %rax
    000029f1: 	leaq	0x1(%rax), %rsi
    000029f5: 	callq	_ZdlPvm@PLT # Offset: 10741
.Ltmp5223:
    000029fa: 	movq	0x20b8(%rsp), %rax
    00002a02: 	subq	%fs:0x28, %rax
    00002a0b: 	jne	.Ltmp5224 # Offset: 10763
    00002a11: 	addq	$0x20c8, %rsp
    00002a18: 	popq	%rbx
    00002a19: 	popq	%rbp
    00002a1a: 	popq	%r12
    00002a1c: 	popq	%r13
    00002a1e: 	popq	%r14
    00002a20: 	popq	%r15
    00002a22: 	retq # Offset: 10786
.Ltmp5141:
    00002a23: 	movq	0x68(%rsp), %rsi
    00002a28: 	xorl	%edx, %edx
    00002a2a: 	movq	%rbx, %rdi
    00002a2d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10797
    00002a32: 	movq	%rax, (%rbx)
    00002a35: 	movq	%rax, %rdi
    00002a38: 	movq	0x90(%rsp), %rax
    00002a40: 	movq	%rax, 0x10(%rbx)
.Ltmp5261:
    00002a44: 	movq	%r13, %rdx
    00002a47: 	movq	%rbp, %rsi
    00002a4a: 	callq	memcpy@PLT # Offset: 10826
    00002a4f: 	movq	0x90(%rsp), %r13
    00002a57: 	movq	(%rbx), %rdi
    00002a5a: 	jmp	.Ltmp5225 # Offset: 10842
    00002a5f: 	nop # Size: 1
.Ltmp5171:
    00002a60: 	movq	0x110(%rsp), %rdx
    00002a68: 	movq	%r12, %rsi
    00002a6b: 	movl	$0x1, %edi
    00002a70: 	xorl	%eax, %eax
    00002a72: 	callq	__printf_chk@PLT # Offset: 10866
    00002a77: 	addl	$0x1, %ebx
    00002a7a: 	cmpl	iterations(%rip), %ebx
    00002a80: 	jl	.Ltmp5226 # Offset: 10880
    00002a86: 	jmp	.Ltmp5170 # Offset: 10886
    00002a8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5176:
    00002a90: 	movq	0x110(%rsp), %rdx
    00002a98: 	movq	%r12, %rsi
    00002a9b: 	movl	$0x1, %edi
    00002aa0: 	xorl	%eax, %eax
    00002aa2: 	callq	__printf_chk@PLT # Offset: 10914
    00002aa7: 	addl	$0x1, %ebp
    00002aaa: 	cmpl	%ebp, iterations(%rip)
    00002ab0: 	jg	.Ltmp5227 # Offset: 10928
    00002ab6: 	jmp	.Ltmp5175 # Offset: 10934
.Ltmp5172:
    00002abb: 	movq	-0x8(%rdx), %rax
    00002abf: 	addq	$0x200, %rax
    00002ac5: 	jmp	.Ltmp5228 # Offset: 10949
.Ltmp5161:
    00002aca: 	movq	-0x8(%rdx), %rax
    00002ace: 	addq	$0x200, %rax
    00002ad4: 	jmp	.Ltmp5229 # Offset: 10964
.Ltmp5155:
    00002ad9: 	movq	-0x8(%rdx), %rax
    00002add: 	addq	$0x200, %rax
    00002ae3: 	jmp	.Ltmp5230 # Offset: 10979
.Ltmp5149:
    00002ae8: 	movq	-0x8(%rdx), %rax
    00002aec: 	addq	$0x200, %rax
    00002af2: 	jmp	.Ltmp5231 # Offset: 10994
.Ltmp5143:
    00002af7: 	movq	-0x8(%rdx), %rax
    00002afb: 	addq	$0x200, %rax
    00002b01: 	jmp	.Ltmp5232 # Offset: 11009
.Ltmp5216:
    00002b06: 	movq	-0x8(%rdx), %rax
    00002b0a: 	addq	$0x200, %rax
    00002b10: 	jmp	.Ltmp5233 # Offset: 11024
.Ltmp5138:
    00002b15: 	movq	%r15, %rsi
    00002b18: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002b1f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11039
    00002b24: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002b2b: 	jmp	.Ltmp5234 # Offset: 11051
.Ltmp5167:
    00002b30: 	movq	-0x8(%rdx), %rax
    00002b34: 	addq	$0x200, %rax
    00002b3a: 	jmp	.Ltmp5235 # Offset: 11066
.Ltmp5186:
    00002b3f: 	movq	-0x8(%rdx), %rax
    00002b43: 	addq	$0x200, %rax
    00002b49: 	jmp	.Ltmp5236 # Offset: 11081
.Ltmp5183:
    00002b4e: 	movq	-0x8(%rdx), %rax
    00002b52: 	addq	$0x200, %rax
    00002b58: 	jmp	.Ltmp5237 # Offset: 11096
.Ltmp5180:
    00002b5d: 	movq	-0x8(%rdx), %rax
    00002b61: 	addq	$0x200, %rax
    00002b67: 	jmp	.Ltmp5238 # Offset: 11111
.Ltmp5177:
    00002b6c: 	movq	-0x8(%rdx), %rax
    00002b70: 	addq	$0x200, %rax
    00002b76: 	jmp	.Ltmp5239 # Offset: 11126
.Ltmp5212:
    00002b7b: 	movq	-0x8(%rdx), %rax
    00002b7f: 	addq	$0x200, %rax
    00002b85: 	jmp	.Ltmp5240 # Offset: 11141
.Ltmp5208:
    00002b8a: 	movq	-0x8(%rdx), %rax
    00002b8e: 	addq	$0x200, %rax
    00002b94: 	jmp	.Ltmp5241 # Offset: 11156
.Ltmp5206:
    00002b99: 	movq	-0x8(%rdx), %rax
    00002b9d: 	addq	$0x200, %rax
    00002ba3: 	jmp	.Ltmp5242 # Offset: 11171
.Ltmp5201:
    00002ba8: 	movq	%r15, %rsi
    00002bab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002bb2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 11186
    00002bb7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002bbe: 	jmp	.Ltmp5243 # Offset: 11198
.Ltmp5194:
    00002bc3: 	movq	-0x8(%rdx), %rax
    00002bc7: 	addq	$0x200, %rax
    00002bcd: 	jmp	.Ltmp5244 # Offset: 11213
.Ltmp5189:
    00002bd2: 	movq	-0x8(%rdx), %rax
    00002bd6: 	addq	$0x200, %rax
    00002bdc: 	jmp	.Ltmp5245 # Offset: 11228
.Ltmp5132:
    00002be1: 	movq	-0x8(%rdx), %rax
    00002be5: 	addq	$0x200, %rax
    00002beb: 	jmp	.Ltmp5246 # Offset: 11243
.Ltmp5126:
    00002bf0: 	movq	-0x8(%rdx), %rax
    00002bf4: 	addq	$0x200, %rax
    00002bfa: 	jmp	.Ltmp5247 # Offset: 11258
.Ltmp5120:
    00002bff: 	movq	-0x8(%rdx), %rax
    00002c03: 	addq	$0x200, %rax
    00002c09: 	jmp	.Ltmp5248 # Offset: 11273
.Ltmp5114:
    00002c0e: 	movq	-0x8(%rdx), %rax
    00002c12: 	addq	$0x200, %rax
    00002c18: 	jmp	.Ltmp5249 # Offset: 11288
.Ltmp5108:
    00002c1d: 	movq	-0x8(%rdx), %rax
    00002c21: 	addq	$0x200, %rax
    00002c27: 	jmp	.Ltmp5250 # Offset: 11303
.Ltmp5102:
    00002c2c: 	movq	-0x8(%rdx), %rax
    00002c30: 	addq	$0x200, %rax
    00002c36: 	jmp	.Ltmp5251 # Offset: 11318
.Ltmp5096:
    00002c3b: 	movq	-0x8(%rdx), %rax
    00002c3f: 	addq	$0x200, %rax
    00002c45: 	jmp	.Ltmp5252 # Offset: 11333
.Ltmp5090:
    00002c4a: 	movq	-0x8(%rdx), %rax
    00002c4e: 	addq	$0x200, %rax
    00002c54: 	jmp	.Ltmp5253 # Offset: 11348
.Ltmp5084:
    00002c59: 	movq	-0x8(%rdx), %rax
    00002c5d: 	addq	$0x200, %rax
    00002c63: 	jmp	.Ltmp5254 # Offset: 11363
.Ltmp5078:
    00002c68: 	movq	-0x8(%rdx), %rax
    00002c6c: 	addq	$0x200, %rax
    00002c72: 	jmp	.Ltmp5255 # Offset: 11378
.Ltmp5072:
    00002c77: 	movq	-0x8(%rdx), %rax
    00002c7b: 	addq	$0x200, %rax
    00002c81: 	jmp	.Ltmp5256 # Offset: 11393
.Ltmp5066:
    00002c86: 	movq	-0x8(%rdx), %rax
    00002c8a: 	addq	$0x200, %rax
    00002c90: 	jmp	.Ltmp5257 # Offset: 11408
.Ltmp5060:
    00002c95: 	movq	-0x8(%rdx), %rax
    00002c99: 	addq	$0x200, %rax
    00002c9f: 	jmp	.Ltmp5258 # Offset: 11423
.Ltmp5054:
    00002ca4: 	movq	-0x8(%rdx), %rax
    00002ca8: 	addq	$0x200, %rax
    00002cae: 	jmp	.Ltmp5259 # Offset: 11438
.Ltmp5048:
    00002cb3: 	movq	-0x8(%rdx), %rax
    00002cb7: 	addq	$0x200, %rax
    00002cbd: 	jmp	.Ltmp5260 # Offset: 11453
.Ltmp5142:
    00002cc2: 	testq	%r13, %r13
    00002cc5: 	je	.Ltmp5225 # Offset: 11461
    00002ccb: 	jmp	.Ltmp5261 # Offset: 11467
.Ltmp5205:
    00002cd0: 	testq	%r12, %r12
    00002cd3: 	je	.Ltmp5262 # Offset: 11475
    00002cd9: 	jmp	.Ltmp5263 # Offset: 11481
    00002cdb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp5204:
    00002ce0: 	leaq	0x88(%rsp), %rsi
    00002ce8: 	xorl	%edx, %edx
    00002cea: 	movq	%rbx, %rdi
    00002ced: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 11501
    00002cf2: 	movq	%rax, (%rbx)
    00002cf5: 	movq	%rax, %rdi
    00002cf8: 	movq	0x88(%rsp), %rax
    00002d00: 	movq	%rax, 0x10(%rbx)
.Ltmp5263:
    00002d04: 	movq	%r12, %rdx
    00002d07: 	movq	%rbp, %rsi
    00002d0a: 	callq	memcpy@PLT # Offset: 11530
    00002d0f: 	movq	0x88(%rsp), %r12
    00002d17: 	movq	(%rbx), %rdi
    00002d1a: 	jmp	.Ltmp5262 # Offset: 11546
.Ltmp5203:
    00002d1f: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d26: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11558
.Ltmp5224:
    00002d2b: 	callq	__stack_chk_fail@PLT # Offset: 11563
.Ltmp5140:
    00002d30: 	leaq	DATAat0x3d158(%rip), %rdi
    00002d37: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11575
    00002d3c: 	endbr64
.Ltmp5265:
    00002d40: 	movq	%rax, %rbp
    00002d43: 	jmp	.Ltmp5264 # Offset: 11587
    00002d45: 	endbr64
    00002d49: 	jmp	.Ltmp5265 # Offset: 11593
    00002d4b: 	endbr64
    00002d4f: 	jmp	.Ltmp5265 # Offset: 11599
    00002d51: 	endbr64
    00002d55: 	jmp	.Ltmp5265 # Offset: 11605
.Ltmp5264:
    00002d57: 	movq	0x110(%rsp), %rdi
    00002d5f: 	cmpq	0x38(%rsp), %rdi
    00002d64: 	je	.Ltmp5266 # Offset: 11620
.Ltmp5270:
    00002d66: 	movq	0x120(%rsp), %rax
    00002d6e: 	leaq	0x1(%rax), %rsi
    00002d72: 	callq	_ZdlPvm@PLT # Offset: 11634
.Ltmp5266:
    00002d77: 	movq	0xb0(%rsp), %rdi
    00002d7f: 	cmpq	0x70(%rsp), %rdi
    00002d84: 	je	.Ltmp5267 # Offset: 11652
    00002d86: 	movq	0xc0(%rsp), %rax
    00002d8e: 	leaq	0x1(%rax), %rsi
    00002d92: 	callq	_ZdlPvm@PLT # Offset: 11666
.Ltmp5267:
    00002d97: 	movq	%rbp, %rdi
    00002d9a: 	callq	_Unwind_Resume@PLT # Offset: 11674
    00002d9f: 	endbr64
    00002da3: 	jmp	.Ltmp5265 # Offset: 11683
    00002da5: 	endbr64
    00002da9: 	movq	%rax, %rbp
    00002dac: 	jmp	.Ltmp5268 # Offset: 11692
    00002dae: 	endbr64
    00002db2: 	jmp	.Ltmp5265 # Offset: 11698
    00002db4: 	endbr64
    00002db8: 	movq	%rax, %rbp
    00002dbb: 	jmp	.Ltmp5266 # Offset: 11707
    00002dbd: 	endbr64
    00002dc1: 	jmp	.Ltmp5265 # Offset: 11713
    00002dc6: 	endbr64
    00002dca: 	jmp	.Ltmp5265 # Offset: 11722
    00002dcf: 	endbr64
    00002dd3: 	movq	%rax, %rbp
    00002dd6: 	jmp	.Ltmp5269 # Offset: 11734
    00002dd8: 	endbr64
    00002ddc: 	jmp	.Ltmp5265 # Offset: 11740
.Ltmp5268:
    00002de1: 	movq	0x110(%rsp), %rdi
    00002de9: 	leaq	0x120(%rsp), %rax
    00002df1: 	cmpq	%rax, %rdi
    00002df4: 	jne	.Ltmp5270 # Offset: 11764
    00002dfa: 	jmp	.Ltmp5266 # Offset: 11770
.Ltmp5271:
    00002dff: 	movq	0x110(%rsp), %rdi
    00002e07: 	cmpq	0x38(%rsp), %rdi
    00002e0c: 	je	.Ltmp5269 # Offset: 11788
    00002e0e: 	movq	0x120(%rsp), %rax
    00002e16: 	leaq	0x1(%rax), %rsi
    00002e1a: 	callq	_ZdlPvm@PLT # Offset: 11802
.Ltmp5269:
    00002e1f: 	movq	0xd0(%rsp), %rdi
    00002e27: 	leaq	0xe0(%rsp), %rax
    00002e2f: 	cmpq	%rax, %rdi
    00002e32: 	je	.Ltmp5266 # Offset: 11826
    00002e38: 	movq	0xe0(%rsp), %rax
    00002e40: 	leaq	0x1(%rax), %rsi
    00002e44: 	callq	_ZdlPvm@PLT # Offset: 11844
    00002e49: 	jmp	.Ltmp5266 # Offset: 11849
    00002e4e: 	endbr64
    00002e52: 	jmp	.Ltmp5265 # Offset: 11858
    00002e57: 	endbr64
.Ltmp5272:
    00002e5b: 	movq	%rax, %rbp
    00002e5e: 	jmp	.Ltmp5271 # Offset: 11870
    00002e60: 	endbr64
    00002e64: 	jmp	.Ltmp5272 # Offset: 11876
    00002e66: 	endbr64
.Ltmp5274:
    00002e6a: 	movq	%rax, %rbp
    00002e6d: 	jmp	.Ltmp5273 # Offset: 11885
    00002e6f: 	endbr64
    00002e73: 	jmp	.Ltmp5274 # Offset: 11891
.Ltmp5273:
    00002e75: 	movq	0x110(%rsp), %rdi
    00002e7d: 	cmpq	0x38(%rsp), %rdi
    00002e82: 	je	.Ltmp5275 # Offset: 11906
    00002e84: 	movq	0x120(%rsp), %rax
    00002e8c: 	leaq	0x1(%rax), %rsi
    00002e90: 	callq	_ZdlPvm@PLT # Offset: 11920
.Ltmp5275:
    00002e95: 	movq	0xf0(%rsp), %rdi
    00002e9d: 	leaq	0x100(%rsp), %rax
    00002ea5: 	cmpq	%rax, %rdi
    00002ea8: 	je	.Ltmp5269 # Offset: 11944
    00002eae: 	movq	0x100(%rsp), %rax
    00002eb6: 	leaq	0x1(%rax), %rsi
    00002eba: 	callq	_ZdlPvm@PLT # Offset: 11962
    00002ebf: 	jmp	.Ltmp5269 # Offset: 11967
    00002ec4: 	endbr64
    00002ec8: 	jmp	.Ltmp5274 # Offset: 11976
    00002eca: 	endbr64
    00002ece: 	jmp	.Ltmp5274 # Offset: 11982
    00002ed0: 	endbr64
    00002ed4: 	jmp	.Ltmp5274 # Offset: 11988
    00002ed6: 	endbr64
    00002eda: 	jmp	.Ltmp5274 # Offset: 11994
    00002edc: 	endbr64
    00002ee0: 	jmp	.Ltmp5274 # Offset: 12000
    00002ee2: 	endbr64
    00002ee6: 	jmp	.Ltmp5274 # Offset: 12006
    00002ee8: 	endbr64
    00002eec: 	jmp	.Ltmp5265 # Offset: 12012
    00002ef1: 	endbr64
    00002ef5: 	jmp	.Ltmp5265 # Offset: 12021
    00002efa: 	endbr64
    00002efe: 	jmp	.Ltmp5265 # Offset: 12030
    00002f03: 	endbr64
    00002f07: 	jmp	.Ltmp5265 # Offset: 12039
    00002f0c: 	endbr64
    00002f10: 	jmp	.Ltmp5274 # Offset: 12048
    00002f15: 	endbr64
    00002f19: 	jmp	.Ltmp5274 # Offset: 12057
    00002f1e: 	endbr64
    00002f22: 	jmp	.Ltmp5274 # Offset: 12066
    00002f27: 	endbr64
    00002f2b: 	jmp	.Ltmp5274 # Offset: 12075
    00002f30: 	endbr64
    00002f34: 	jmp	.Ltmp5272 # Offset: 12084
    00002f39: 	endbr64
    00002f3d: 	jmp	.Ltmp5272 # Offset: 12093
    00002f42: 	endbr64
    00002f46: 	jmp	.Ltmp5272 # Offset: 12102
    00002f4b: 	endbr64
    00002f4f: 	jmp	.Ltmp5272 # Offset: 12111
    00002f54: 	endbr64
    00002f58: 	jmp	.Ltmp5272 # Offset: 12120
    00002f5d: 	endbr64
    00002f61: 	jmp	.Ltmp5272 # Offset: 12129
    00002f66: 	endbr64
    00002f6a: 	jmp	.Ltmp5272 # Offset: 12138
    00002f6f: 	endbr64
    00002f73: 	jmp	.Ltmp5272 # Offset: 12147
    00002f78: 	endbr64
    00002f7c: 	jmp	.Ltmp5272 # Offset: 12156
    00002f81: 	endbr64
    00002f85: 	jmp	.Ltmp5272 # Offset: 12165
    00002f8a: 	endbr64
    00002f8e: 	movq	%rax, %rbp
    00002f91: 	jmp	.Ltmp5275 # Offset: 12177
    00002f96: 	endbr64
    00002f9a: 	jmp	.Ltmp5274 # Offset: 12186
    00002f9f: 	endbr64
    00002fa3: 	jmp	.Ltmp5265 # Offset: 12195
DWARF CFI Instructions:
    <empty>
End of Function "_Z9TestLoopsIhEvd"

Binary Function "_fini" after disassembly {
  Number      : 159
  State       : disassembled
  Address     : 0x3c6c8
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x3c6c8
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0158:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 160 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 4027 instructions were shortened
BOLT-INFO: removed 457 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 155 out of 191 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x206888
