BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x1c018, which lies outside .bss
BOLT-WARNING: split function detected on input : _Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x2000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x2000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x1bff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x2440
  Size        : 0xd8
  MaxSize     : 0xe0
  Offset      : 0x2440
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x8, %rsp
    00000015: 	cmpl	$0x1, %edi
    00000018: 	jg	.Ltmp5 # Offset: 24
    0000001a: 	jne	.Ltmp6 # Offset: 26
    0000001c: 	movq	(%rsi), %rdx
    0000001f: 	movl	$0x1, %edi
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	DATAat0x1711f(%rip), %rsi
    0000002d: 	callq	__printf_chk@PLT # Offset: 45
.Ltmp6:
    00000032: 	movl	$0x1, %r13d
    00000038: 	movl	$0x4c4b40, %r14d
.Ltmp9:
    0000003e: 	leaq	DATAat0x1711d(%rip), %rsi
    00000045: 	movl	$0x1, %edi
    0000004a: 	xorl	%eax, %eax
    0000004c: 	callq	__printf_chk@PLT # Offset: 76
    00000051: 	movl	%r13d, %esi
    00000054: 	movl	%r14d, %edi
    00000057: 	callq	_Z11TestOneTypeIlLi1EEvii # Offset: 87
    0000005c: 	movl	%r13d, %esi
    0000005f: 	movl	%r14d, %edi
    00000062: 	callq	_Z11TestOneTypeIlLi13EEvii # Offset: 98
    00000067: 	addq	$0x8, %rsp
    0000006b: 	xorl	%eax, %eax
    0000006d: 	popq	%rbx
    0000006e: 	popq	%rbp
    0000006f: 	popq	%r12
    00000071: 	popq	%r13
    00000073: 	popq	%r14
    00000075: 	popq	%r15
    00000077: 	retq # Offset: 119
.Ltmp5:
    00000078: 	movl	%edi, %ebp
    0000007a: 	movq	0x8(%rsi), %rdi
    0000007e: 	movl	$0xa, %edx
    00000083: 	xorl	%esi, %esi
    00000085: 	callq	strtol@PLT # Offset: 133
    0000008a: 	movl	%eax, %r13d
    0000008d: 	cmpl	$0x2, %ebp
    00000090: 	je	.Ltmp7 # Offset: 144
    00000092: 	movq	0x10(%r15), %rdi
    00000096: 	movl	$0xa, %edx
    0000009b: 	xorl	%esi, %esi
    0000009d: 	callq	strtol@PLT # Offset: 157
    000000a2: 	movl	%eax, %r14d
.Ltmp10:
    000000a5: 	xorl	%ebx, %ebx
    000000a7: 	leaq	DATAat0x1711f(%rip), %r12
    000000ae: 	nop # Size: 2
.Ltmp8:
    000000b0: 	movq	(%r15,%rbx,8), %rdx
    000000b4: 	movq	%r12, %rsi
    000000b7: 	movl	$0x1, %edi
    000000bc: 	xorl	%eax, %eax
    000000be: 	addq	$0x1, %rbx
    000000c2: 	callq	__printf_chk@PLT # Offset: 194
    000000c7: 	cmpl	%ebx, %ebp
    000000c9: 	jg	.Ltmp8 # Offset: 201
    000000cb: 	jmp	.Ltmp9 # Offset: 203
.Ltmp7:
    000000d0: 	movl	$0x4c4b40, %r14d
    000000d6: 	jmp	.Ltmp10 # Offset: 214
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 7
  State       : disassembled
  Address     : 0x2600
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x2600
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x1bfe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x2630
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2630
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp11 # Offset: 17
    00000013: 	movq	DATAat0x1bfe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp11 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp11:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x2660
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x2660
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp12 # Offset: 34
    00000024: 	movq	DATAat0x1bff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp12 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp12:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 10
  State       : disassembled
  Address     : 0x26a0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x26a0
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp13 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp14 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp14:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp13:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 11
  State       : disassembled
  Address     : 0x26e0
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x26e0
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1
                _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/smart_pointers.cpp/1
  Number      : 12
  State       : disassembled
  Address     : 0x26f0
  Size        : 0xc0
  MaxSize     : 0xc0
  Offset      : 0x26f0
  Section     : .text
  Orc Section : .local.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	pushq	%r12
    00000002: 	movq	%rdx, %r12
    00000005: 	pushq	%rbp
    00000006: 	movq	%rsi, %rbp
    00000009: 	pushq	%rbx
    0000000a: 	movq	%rdi, %rbx
    0000000d: 	subq	$0x10, %rsp
    00000011: 	movq	%fs:0x28, %rax
    0000001a: 	movq	%rax, 0x8(%rsp)
    0000001f: 	xorl	%eax, %eax
    00000021: 	testq	%rdx, %rdx
    00000024: 	je	.Ltmp15 # Offset: 36
    00000026: 	testq	%rsi, %rsi
    00000029: 	je	.Ltmp16 # Offset: 41
.Ltmp15:
    0000002f: 	subq	%rbp, %r12
    00000032: 	movq	%r12, (%rsp)
    00000036: 	cmpq	$0xf, %r12
    0000003a: 	ja	.Ltmp17 # Offset: 58
    0000003c: 	movq	(%rbx), %rdi
    0000003f: 	cmpq	$0x1, %r12
    00000043: 	jne	.Ltmp18 # Offset: 67
    00000045: 	movzbl	(%rbp), %eax
    00000049: 	movb	%al, (%rdi)
    0000004b: 	movq	(%rsp), %r12
    0000004f: 	movq	(%rbx), %rdi
.Ltmp20:
    00000052: 	movq	%r12, 0x8(%rbx)
    00000056: 	movb	$0x0, (%rdi,%r12)
    0000005b: 	movq	0x8(%rsp), %rax
    00000060: 	subq	%fs:0x28, %rax
    00000069: 	jne	.Ltmp19 # Offset: 105
    0000006b: 	addq	$0x10, %rsp
    0000006f: 	popq	%rbx
    00000070: 	popq	%rbp
    00000071: 	popq	%r12
    00000073: 	retq # Offset: 115
    00000074: 	nopl	(%rax) # Size: 4
.Ltmp18:
    00000078: 	testq	%r12, %r12
    0000007b: 	je	.Ltmp20 # Offset: 123
    0000007d: 	jmp	.Ltmp21 # Offset: 125
    0000007f: 	nop # Size: 1
.Ltmp17:
    00000080: 	movq	%rbx, %rdi
    00000083: 	movq	%rsp, %rsi
    00000086: 	xorl	%edx, %edx
    00000088: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 136
    0000008d: 	movq	%rax, (%rbx)
    00000090: 	movq	%rax, %rdi
    00000093: 	movq	(%rsp), %rax
    00000097: 	movq	%rax, 0x10(%rbx)
.Ltmp21:
    0000009b: 	movq	%r12, %rdx
    0000009e: 	movq	%rbp, %rsi
    000000a1: 	callq	memcpy@PLT # Offset: 161
    000000a6: 	movq	(%rsp), %r12
    000000aa: 	movq	(%rbx), %rdi
    000000ad: 	jmp	.Ltmp20 # Offset: 173
.Ltmp16:
    000000af: 	leaq	DATAat0x17008(%rip), %rdi
    000000b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 182
.Ltmp19:
    000000bb: 	callq	__stack_chk_fail@PLT # Offset: 187
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 13
  State       : disassembled
  Address     : 0x27b0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x27b0
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r15
    00000006: 	movq	%rdx, %r15
    00000009: 	pushq	%r14
    0000000b: 	andl	$0x1, %r15d
    0000000f: 	movq	%rdi, %r14
    00000012: 	pushq	%r13
    00000014: 	movq	%rdx, %r13
    00000017: 	pushq	%r12
    00000019: 	movq	%rax, %r12
    0000001c: 	pushq	%rbp
    0000001d: 	shrq	$0x3f, %r12
    00000021: 	movq	%rsi, %rbp
    00000024: 	pushq	%rbx
    00000025: 	addq	%rax, %r12
    00000028: 	sarq	%r12
    0000002b: 	subq	$0x18, %rsp
    0000002f: 	movq	%rcx, 0x8(%rsp)
    00000034: 	cmpq	%r12, %rsi
    00000037: 	jge	.Ltmp22 # Offset: 55
    0000003d: 	movq	%rsi, %rcx
    00000040: 	jmp	.Ltmp23 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp25:
    00000048: 	movq	%rdx, %rcx
.Ltmp23:
    0000004b: 	leaq	0x1(%rcx), %rbx
    0000004f: 	leaq	(%r14,%rcx,8), %rcx
    00000053: 	leaq	(%rbx,%rbx), %rdx
    00000057: 	shlq	$0x4, %rbx
    0000005b: 	leaq	-0x1(%rdx), %rsi
    0000005f: 	addq	%r14, %rbx
    00000062: 	leaq	(%r14,%rsi,8), %rdi
    00000066: 	movq	(%rbx), %rax
    00000069: 	movq	(%rdi), %r9
    0000006c: 	movq	(%r9), %r8
    0000006f: 	cmpq	%r8, (%rax)
    00000072: 	cmovlq	%rdi, %rbx
    00000076: 	cmovlq	%r9, %rax
    0000007a: 	cmovlq	%rsi, %rdx
    0000007e: 	movq	$0x0, (%rbx)
    00000085: 	movq	(%rcx), %rdi
    00000088: 	movq	%rax, (%rcx)
    0000008b: 	testq	%rdi, %rdi
    0000008e: 	je	.Ltmp24 # Offset: 142
    00000090: 	movl	$0x68, %esi
    00000095: 	movq	%rdx, (%rsp)
    00000099: 	callq	_ZdlPvm@PLT # Offset: 153
    0000009e: 	movq	(%rsp), %rdx
.Ltmp24:
    000000a2: 	cmpq	%r12, %rdx
    000000a5: 	jl	.Ltmp25 # Offset: 165
    000000a7: 	testq	%r15, %r15
    000000aa: 	je	.Ltmp26 # Offset: 170
.Ltmp34:
    000000b0: 	movq	0x8(%rsp), %rax
    000000b5: 	movq	(%rax), %r15
    000000b8: 	movq	$0x0, (%rax)
    000000bf: 	leaq	-0x1(%rdx), %rax
    000000c3: 	movq	%rax, %r12
    000000c6: 	shrq	$0x3f, %r12
    000000ca: 	addq	%rax, %r12
    000000cd: 	sarq	%r12
    000000d0: 	cmpq	%rbp, %rdx
    000000d3: 	jg	.Ltmp27 # Offset: 211
    000000d5: 	jmp	.Ltmp28 # Offset: 213
    000000d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp31:
    000000e0: 	movq	$0x0, (%r13)
    000000e8: 	movq	(%rbx), %rdi
    000000eb: 	movq	%rax, (%rbx)
    000000ee: 	testq	%rdi, %rdi
    000000f1: 	je	.Ltmp29 # Offset: 241
    000000f3: 	movl	$0x68, %esi
    000000f8: 	callq	_ZdlPvm@PLT # Offset: 248
.Ltmp29:
    000000fd: 	leaq	-0x1(%r12), %rdx
    00000102: 	movq	%rdx, %rax
    00000105: 	shrq	$0x3f, %rax
    00000109: 	addq	%rdx, %rax
    0000010c: 	movq	%r12, %rdx
    0000010f: 	sarq	%rax
    00000112: 	cmpq	%r12, %rbp
    00000115: 	jge	.Ltmp30 # Offset: 277
    0000011b: 	movq	%rax, %r12
.Ltmp27:
    0000011e: 	leaq	(%r14,%r12,8), %r13
    00000122: 	movq	(%r15), %rsi
    00000125: 	leaq	(%r14,%rdx,8), %rbx
    00000129: 	movq	(%r13), %rax
    0000012d: 	cmpq	%rsi, (%rax)
    00000130: 	jl	.Ltmp31 # Offset: 304
.Ltmp28:
    00000132: 	movq	(%rbx), %rdi
    00000135: 	movq	%r15, (%rbx)
    00000138: 	testq	%rdi, %rdi
    0000013b: 	je	.Ltmp32 # Offset: 315
    00000141: 	addq	$0x18, %rsp
    00000145: 	movl	$0x68, %esi
    0000014a: 	popq	%rbx
    0000014b: 	popq	%rbp
    0000014c: 	popq	%r12
    0000014e: 	popq	%r13
    00000150: 	popq	%r14
    00000152: 	popq	%r15
    00000154: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 340
    00000159: 	nopl	(%rax) # Size: 7
.Ltmp22:
    00000160: 	leaq	(%rdi,%rsi,8), %rbx
    00000164: 	testq	%r15, %r15
    00000167: 	jne	.Ltmp33 # Offset: 359
    00000169: 	movq	%rbp, %rdx
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp26:
    00000170: 	subq	$0x2, %r13
    00000174: 	movq	%r13, %rax
    00000177: 	shrq	$0x3f, %rax
    0000017b: 	addq	%r13, %rax
    0000017e: 	sarq	%rax
    00000181: 	cmpq	%rdx, %rax
    00000184: 	jne	.Ltmp34 # Offset: 388
    0000018a: 	leaq	0x1(%rdx,%rdx), %rdx
    0000018f: 	leaq	(%r14,%rdx,8), %rax
    00000193: 	movq	(%rax), %rcx
    00000196: 	movq	$0x0, (%rax)
    0000019d: 	movq	(%rbx), %rdi
    000001a0: 	movq	%rcx, (%rbx)
    000001a3: 	movq	%rax, %rbx
    000001a6: 	testq	%rdi, %rdi
    000001a9: 	je	.Ltmp34 # Offset: 425
    000001af: 	movl	$0x68, %esi
    000001b4: 	movq	%rdx, (%rsp)
    000001b8: 	callq	_ZdlPvm@PLT # Offset: 440
    000001bd: 	movq	(%rsp), %rdx
    000001c1: 	jmp	.Ltmp34 # Offset: 449
    000001c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp32:
    000001d0: 	addq	$0x18, %rsp
    000001d4: 	popq	%rbx
    000001d5: 	popq	%rbp
    000001d6: 	popq	%r12
    000001d8: 	popq	%r13
    000001da: 	popq	%r14
    000001dc: 	popq	%r15
    000001de: 	retq # Offset: 478
    000001df: 	nop # Size: 1
.Ltmp30:
    000001e0: 	movq	%r13, %rbx
    000001e3: 	jmp	.Ltmp28 # Offset: 483
.Ltmp33:
    000001e8: 	movq	(%rcx), %r15
    000001eb: 	movq	$0x0, (%rcx)
    000001f2: 	jmp	.Ltmp28 # Offset: 498
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 14
  State       : disassembled
  Address     : 0x29b0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x29b0
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r15
    00000006: 	movq	%rdx, %r15
    00000009: 	pushq	%r14
    0000000b: 	andl	$0x1, %r15d
    0000000f: 	movq	%rdi, %r14
    00000012: 	pushq	%r13
    00000014: 	movq	%rdx, %r13
    00000017: 	pushq	%r12
    00000019: 	movq	%rax, %r12
    0000001c: 	pushq	%rbp
    0000001d: 	shrq	$0x3f, %r12
    00000021: 	movq	%rsi, %rbp
    00000024: 	pushq	%rbx
    00000025: 	addq	%rax, %r12
    00000028: 	sarq	%r12
    0000002b: 	subq	$0x18, %rsp
    0000002f: 	movq	%rcx, 0x8(%rsp)
    00000034: 	cmpq	%r12, %rsi
    00000037: 	jge	.Ltmp35 # Offset: 55
    0000003d: 	movq	%rsi, %rcx
    00000040: 	jmp	.Ltmp36 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp38:
    00000048: 	movq	%rdx, %rcx
.Ltmp36:
    0000004b: 	leaq	0x1(%rcx), %rbx
    0000004f: 	leaq	(%r14,%rcx,8), %rcx
    00000053: 	leaq	(%rbx,%rbx), %rdx
    00000057: 	shlq	$0x4, %rbx
    0000005b: 	leaq	-0x1(%rdx), %rsi
    0000005f: 	addq	%r14, %rbx
    00000062: 	leaq	(%r14,%rsi,8), %rdi
    00000066: 	movq	(%rbx), %rax
    00000069: 	movq	(%rdi), %r9
    0000006c: 	movq	(%r9), %r8
    0000006f: 	cmpq	%r8, (%rax)
    00000072: 	cmovlq	%rdi, %rbx
    00000076: 	cmovlq	%r9, %rax
    0000007a: 	cmovlq	%rsi, %rdx
    0000007e: 	movq	$0x0, (%rbx)
    00000085: 	movq	(%rcx), %rdi
    00000088: 	movq	%rax, (%rcx)
    0000008b: 	testq	%rdi, %rdi
    0000008e: 	je	.Ltmp37 # Offset: 142
    00000090: 	movl	$0x8, %esi
    00000095: 	movq	%rdx, (%rsp)
    00000099: 	callq	_ZdlPvm@PLT # Offset: 153
    0000009e: 	movq	(%rsp), %rdx
.Ltmp37:
    000000a2: 	cmpq	%r12, %rdx
    000000a5: 	jl	.Ltmp38 # Offset: 165
    000000a7: 	testq	%r15, %r15
    000000aa: 	je	.Ltmp39 # Offset: 170
.Ltmp47:
    000000b0: 	movq	0x8(%rsp), %rax
    000000b5: 	movq	(%rax), %r15
    000000b8: 	movq	$0x0, (%rax)
    000000bf: 	leaq	-0x1(%rdx), %rax
    000000c3: 	movq	%rax, %r12
    000000c6: 	shrq	$0x3f, %r12
    000000ca: 	addq	%rax, %r12
    000000cd: 	sarq	%r12
    000000d0: 	cmpq	%rbp, %rdx
    000000d3: 	jg	.Ltmp40 # Offset: 211
    000000d5: 	jmp	.Ltmp41 # Offset: 213
    000000d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp44:
    000000e0: 	movq	$0x0, (%r13)
    000000e8: 	movq	(%rbx), %rdi
    000000eb: 	movq	%rax, (%rbx)
    000000ee: 	testq	%rdi, %rdi
    000000f1: 	je	.Ltmp42 # Offset: 241
    000000f3: 	movl	$0x8, %esi
    000000f8: 	callq	_ZdlPvm@PLT # Offset: 248
.Ltmp42:
    000000fd: 	leaq	-0x1(%r12), %rdx
    00000102: 	movq	%rdx, %rax
    00000105: 	shrq	$0x3f, %rax
    00000109: 	addq	%rdx, %rax
    0000010c: 	movq	%r12, %rdx
    0000010f: 	sarq	%rax
    00000112: 	cmpq	%r12, %rbp
    00000115: 	jge	.Ltmp43 # Offset: 277
    0000011b: 	movq	%rax, %r12
.Ltmp40:
    0000011e: 	leaq	(%r14,%r12,8), %r13
    00000122: 	movq	(%r15), %rsi
    00000125: 	leaq	(%r14,%rdx,8), %rbx
    00000129: 	movq	(%r13), %rax
    0000012d: 	cmpq	%rsi, (%rax)
    00000130: 	jl	.Ltmp44 # Offset: 304
.Ltmp41:
    00000132: 	movq	(%rbx), %rdi
    00000135: 	movq	%r15, (%rbx)
    00000138: 	testq	%rdi, %rdi
    0000013b: 	je	.Ltmp45 # Offset: 315
    00000141: 	addq	$0x18, %rsp
    00000145: 	movl	$0x8, %esi
    0000014a: 	popq	%rbx
    0000014b: 	popq	%rbp
    0000014c: 	popq	%r12
    0000014e: 	popq	%r13
    00000150: 	popq	%r14
    00000152: 	popq	%r15
    00000154: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 340
    00000159: 	nopl	(%rax) # Size: 7
.Ltmp35:
    00000160: 	leaq	(%rdi,%rsi,8), %rbx
    00000164: 	testq	%r15, %r15
    00000167: 	jne	.Ltmp46 # Offset: 359
    00000169: 	movq	%rbp, %rdx
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp39:
    00000170: 	subq	$0x2, %r13
    00000174: 	movq	%r13, %rax
    00000177: 	shrq	$0x3f, %rax
    0000017b: 	addq	%r13, %rax
    0000017e: 	sarq	%rax
    00000181: 	cmpq	%rdx, %rax
    00000184: 	jne	.Ltmp47 # Offset: 388
    0000018a: 	leaq	0x1(%rdx,%rdx), %rdx
    0000018f: 	leaq	(%r14,%rdx,8), %rax
    00000193: 	movq	(%rax), %rcx
    00000196: 	movq	$0x0, (%rax)
    0000019d: 	movq	(%rbx), %rdi
    000001a0: 	movq	%rcx, (%rbx)
    000001a3: 	movq	%rax, %rbx
    000001a6: 	testq	%rdi, %rdi
    000001a9: 	je	.Ltmp47 # Offset: 425
    000001af: 	movl	$0x8, %esi
    000001b4: 	movq	%rdx, (%rsp)
    000001b8: 	callq	_ZdlPvm@PLT # Offset: 440
    000001bd: 	movq	(%rsp), %rdx
    000001c1: 	jmp	.Ltmp47 # Offset: 449
    000001c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp45:
    000001d0: 	addq	$0x18, %rsp
    000001d4: 	popq	%rbx
    000001d5: 	popq	%rbp
    000001d6: 	popq	%r12
    000001d8: 	popq	%r13
    000001da: 	popq	%r14
    000001dc: 	popq	%r15
    000001de: 	retq # Offset: 478
    000001df: 	nop # Size: 1
.Ltmp43:
    000001e0: 	movq	%r13, %rbx
    000001e3: 	jmp	.Ltmp41 # Offset: 483
.Ltmp46:
    000001e8: 	movq	(%rcx), %r15
    000001eb: 	movq	$0x0, (%rcx)
    000001f2: 	jmp	.Ltmp41 # Offset: 498
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1(*2)"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x2fa0
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x2fa0
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x2fc0
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x2fc0
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x17370(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x3000
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3000
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x3030
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3030
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x3060
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3060
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x3090
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3090
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x30c0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x30c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x30f0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x30f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x3120
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3120
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x3150
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3150
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x3180
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3180
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x31b0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x31b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x31e0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x31e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x3210
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x3210
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x3250
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3250
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x3280
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x3280
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x32b0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x32b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x32e0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x32e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x3310
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3310
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x3340
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3340
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x3370
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x3370
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x33a0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x33a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x33d0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x33d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x3400
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x3400
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x3430
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x3430
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_Z14validate_nullsimNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x3460
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x3460
  Section     : .text
  Orc Section : .local.text._Z14validate_nullsimNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	movslq	%edi, %rdi
    00000007: 	cmpq	%rsi, %rdi
    0000000a: 	jne	.Ltmp65 # Offset: 10
    0000000c: 	retq # Offset: 12
    0000000d: 	nopl	(%rax) # Size: 3
.Ltmp65:
    00000010: 	movq	(%rdx), %rdx
    00000013: 	leaq	DATAat0x1710f(%rip), %rsi
    0000001a: 	movl	$0x1, %edi
    0000001f: 	xorl	%eax, %eax
    00000021: 	jmp	__printf_chk@PLT # TAILCALL  # Offset: 33
DWARF CFI Instructions:
    <empty>
End of Function "_Z14validate_nullsimNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x38a0
  Size        : 0x776
  MaxSize     : 0x780
  Offset      : 0x38a0
  Section     : .text
  Orc Section : .local.text._Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x58, %rsp
    00000012: 	movq	gResults+72(%rip), %rdx
    00000019: 	movq	gResults+40(%rip), %r8
    00000020: 	movq	gResults+16(%rip), %rsi
    00000027: 	movq	%rdi, 0x18(%rsp)
    0000002c: 	movq	%rdx, %rax
    0000002f: 	subq	%r8, %rax
    00000032: 	sarq	$0x3, %rax
    00000036: 	cmpq	$0x1, %rdx
    0000003a: 	movabsq	$0x6db6db6db6db6db7, %rdx
    00000044: 	adcq	$-0x1, %rax
    00000048: 	leaq	(%rax,%rax,8), %rbp
    0000004c: 	movq	gResults+48(%rip), %rax
    00000053: 	subq	gResults+56(%rip), %rax
    0000005a: 	sarq	$0x3, %rax
    0000005e: 	imulq	%rdx, %rax
    00000062: 	addq	%rax, %rbp
    00000065: 	movq	gResults+32(%rip), %rax
    0000006c: 	subq	%rsi, %rax
    0000006f: 	sarq	$0x3, %rax
    00000073: 	imulq	%rdx, %rax
    00000077: 	addq	%rbp, %rax
    0000007a: 	movq	%rax, 0x10(%rsp)
    0000007f: 	je	.Ltmp83 # Offset: 127
    00000085: 	movq	%rsi, %rcx
    00000088: 	movl	$0xc, %ebx
    0000008d: 	subq	gResults+24(%rip), %rcx
    00000094: 	movabsq	$-0x1c71c71c71c71c71, %r10
    0000009e: 	movabsq	$0x1c71c71c71c71c72, %r9
    000000a8: 	sarq	$0x3, %rcx
    000000ac: 	imulq	%rdx, %rcx
    000000b0: 	leaq	(%rax,%rcx), %rdi
    000000b4: 	jmp	.Ltmp84 # Offset: 180
    000000b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp87:
    000000c0: 	movq	%rsi, %rax
    000000c3: 	cmpq	$0x8, %rcx
    000000c7: 	jle	.Ltmp85 # Offset: 199
    000000c9: 	movq	%rcx, %rax
    000000cc: 	imulq	%r9
    000000cf: 	movq	%rcx, %rax
    000000d2: 	sarq	$0x3f, %rax
    000000d6: 	subq	%rax, %rdx
.Ltmp88:
    000000d9: 	leaq	(%rdx,%rdx,8), %rax
    000000dd: 	movq	%rcx, %r11
    000000e0: 	movq	(%r8,%rdx,8), %rdx
    000000e4: 	subq	%rax, %r11
    000000e7: 	leaq	(,%r11,8), %rax
    000000ef: 	subq	%r11, %rax
    000000f2: 	leaq	(%rdx,%rax,8), %rax
.Ltmp85:
    000000f6: 	movq	0x20(%rax), %rax
    000000fa: 	cmpq	%rax, %rbx
    000000fd: 	cmovbq	%rax, %rbx
    00000101: 	addq	$0x1, %rcx
    00000105: 	addq	$0x38, %rsi
    00000109: 	cmpq	%rcx, %rdi
    0000010c: 	je	.Ltmp86 # Offset: 268
.Ltmp84:
    00000112: 	testq	%rcx, %rcx
    00000115: 	jns	.Ltmp87 # Offset: 277
    00000117: 	movq	%rcx, %rdx
    0000011a: 	notq	%rdx
    0000011d: 	movq	%rdx, %rax
    00000120: 	mulq	%r10
    00000123: 	shrq	$0x3, %rdx
    00000127: 	notq	%rdx
    0000012a: 	jmp	.Ltmp88 # Offset: 298
    0000012c: 	nopl	(%rax) # Size: 4
.Ltmp90:
    00000130: 	movq	0x18(%r14), %rdi
    00000134: 	leaq	0x28(%r14), %rax
    00000138: 	cmpq	%rax, %rdi
    0000013b: 	je	.Ltmp89 # Offset: 315
    0000013d: 	movq	0x28(%r14), %rax
    00000141: 	leaq	0x1(%rax), %rsi
    00000145: 	callq	_ZdlPvm@PLT # Offset: 325
.Ltmp89:
    0000014a: 	addq	$0x38, %r14
.Ltmp120:
    0000014e: 	cmpq	%r14, 0x8(%rsp)
    00000153: 	jne	.Ltmp90 # Offset: 339
.Ltmp123:
    00000155: 	movq	gResults+72(%rip), %rax
    0000015c: 	leaq	0x8(%rax), %rbx
    00000160: 	cmpq	%r12, %rbx
    00000163: 	jbe	.Ltmp91 # Offset: 355
    00000165: 	nopl	(%rax) # Size: 3
.Ltmp92:
    00000168: 	movq	(%r12), %rdi
    0000016c: 	movl	$0x1f8, %esi
    00000171: 	addq	$0x8, %r12
    00000175: 	callq	_ZdlPvm@PLT # Offset: 373
    0000017a: 	cmpq	%r12, %rbx
    0000017d: 	ja	.Ltmp92 # Offset: 381
.Ltmp91:
    0000017f: 	movdqa	0x20(%rsp), %xmm4
    00000185: 	movdqa	0x30(%rsp), %xmm5
    0000018b: 	movaps	%xmm4, gResults+48(%rip)
    00000192: 	movaps	%xmm5, gResults+64(%rip)
.Ltmp83:
    00000199: 	addq	$0x58, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	popq	%r15
    000001a7: 	retq # Offset: 423
    000001a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp86:
    000001b0: 	leaq	DATAat0x17121(%rip), %r12
    000001b7: 	leal	-0xc(%rbx), %edx
    000001ba: 	xorl	%eax, %eax
    000001bc: 	xorl	%ebp, %ebp
    000001be: 	movq	%r12, %rcx
    000001c1: 	leaq	DATAat0x17068(%rip), %rsi
    000001c8: 	movl	$0x1, %edi
    000001cd: 	xorl	%r14d, %r14d
    000001d0: 	callq	__printf_chk@PLT # Offset: 464
    000001d5: 	movq	%r12, %rcx
    000001d8: 	movl	%ebx, %edx
    000001da: 	xorl	%eax, %eax
    000001dc: 	leaq	DATAat0x17098(%rip), %rsi
    000001e3: 	movl	$0x1, %edi
    000001e8: 	leaq	DATAat0x170c0(%rip), %r15
    000001ef: 	movabsq	$-0x1c71c71c71c71c71, %r13
    000001f9: 	callq	__printf_chk@PLT # Offset: 505
    000001fe: 	movl	%ebx, %eax
    00000200: 	pxor	%xmm3, %xmm3
    00000204: 	movq	%rbp, %rbx
    00000207: 	movabsq	$0x1c71c71c71c71c72, %r12
    00000211: 	movl	%eax, %ebp
    00000213: 	jmp	.Ltmp93 # Offset: 531
    00000218: 	nopl	(%rax,%rax) # Size: 8
.Ltmp99:
    00000220: 	cmpq	$0x8, %rcx
    00000224: 	jg	.Ltmp94 # Offset: 548
    0000022a: 	leaq	(%rdi,%rbx), %rax
    0000022e: 	movsd	(%rax), %xmm2
    00000232: 	movq	0x10(%rax), %rdx
    00000236: 	addsd	%xmm2, %xmm3
    0000023a: 	testq	%rdx, %rdx
    0000023d: 	js	.Ltmp95 # Offset: 573
    00000243: 	pxor	%xmm0, %xmm0
    00000247: 	cvtsi2sd	%rdx, %xmm0
    0000024c: 	movq	0x8(%rax), %rdx
    00000250: 	testq	%rdx, %rdx
    00000253: 	js	.Ltmp96 # Offset: 595
.Ltmp127:
    00000259: 	pxor	%xmm1, %xmm1
    0000025d: 	cvtsi2sd	%rdx, %xmm1
.Ltmp128:
    00000262: 	movsd	DATAat0x17380(%rip), %xmm6
    0000026a: 	mulsd	%xmm1, %xmm0
    0000026e: 	movsd	DATAat0x17378(%rip), %xmm1
    00000276: 	divsd	DATAat0x17370(%rip), %xmm0
    0000027e: 	comisd	%xmm2, %xmm6
    00000282: 	jbe	.Ltmp97 # Offset: 642
.Ltmp103:
    00000288: 	movq	0x18(%rax), %r9
    0000028c: 	movl	%r14d, %edx
    0000028f: 	movl	%ebp, %ecx
    00000291: 	movapd	%xmm2, %xmm0
    00000295: 	subl	0x20(%rax), %ecx
    00000298: 	movq	%r15, %rsi
    0000029b: 	movl	$0x1, %edi
    000002a0: 	movl	$0x2, %eax
    000002a5: 	leaq	DATAat0x1711e(%rip), %r8
    000002ac: 	movsd	%xmm3, 0x8(%rsp)
    000002b2: 	addq	$0x1, %r14
    000002b6: 	addq	$0x38, %rbx
    000002ba: 	callq	__printf_chk@PLT # Offset: 698
    000002bf: 	cmpq	0x10(%rsp), %r14
    000002c4: 	movsd	0x8(%rsp), %xmm3
    000002ca: 	je	.Ltmp98 # Offset: 714
.Ltmp93:
    000002d0: 	movq	gResults+16(%rip), %rdi
    000002d7: 	movq	gResults+40(%rip), %rsi
    000002de: 	movabsq	$0x6db6db6db6db6db7, %rax
    000002e8: 	movq	%rdi, %rcx
    000002eb: 	subq	gResults+24(%rip), %rcx
    000002f2: 	sarq	$0x3, %rcx
    000002f6: 	imulq	%rax, %rcx
    000002fa: 	addq	%r14, %rcx
    000002fd: 	jns	.Ltmp99 # Offset: 765
    00000303: 	movq	%rcx, %r8
    00000306: 	movq	%rcx, %r9
    00000309: 	notq	%r8
    0000030c: 	movq	%r8, %rax
    0000030f: 	mulq	%r13
    00000312: 	shrq	$0x3, %rdx
    00000316: 	notq	%rdx
    00000319: 	leaq	(%rdx,%rdx,8), %rax
    0000031d: 	movq	(%rsi,%rdx,8), %rdx
    00000321: 	subq	%rax, %r9
    00000324: 	leaq	(,%r9,8), %rax
    0000032c: 	subq	%r9, %rax
    0000032f: 	leaq	(%rdx,%rax,8), %rdx
    00000333: 	movq	0x8(%rdx), %rax
    00000337: 	addsd	(%rdx), %xmm3
    0000033b: 	testq	%rax, %rax
    0000033e: 	js	.Ltmp100 # Offset: 830
    00000344: 	pxor	%xmm0, %xmm0
    00000348: 	cvtsi2sd	%rax, %xmm0
.Ltmp114:
    0000034d: 	movq	0x10(%rdx), %rax
    00000351: 	testq	%rax, %rax
    00000354: 	js	.Ltmp101 # Offset: 852
    0000035a: 	pxor	%xmm1, %xmm1
    0000035e: 	cvtsi2sd	%rax, %xmm1
.Ltmp113:
    00000363: 	movq	%r8, %rax
    00000366: 	movq	%rcx, %r9
    00000369: 	movsd	DATAat0x17380(%rip), %xmm5
    00000371: 	movq	DATAat0x17378(%rip), %r10
    00000378: 	mulq	%r13
    0000037b: 	mulsd	%xmm1, %xmm0
    0000037f: 	divsd	DATAat0x17370(%rip), %xmm0
    00000387: 	movq	%r10, %xmm1
    0000038c: 	shrq	$0x3, %rdx
    00000390: 	notq	%rdx
    00000393: 	leaq	(%rdx,%rdx,8), %rax
    00000397: 	subq	%rax, %r9
    0000039a: 	leaq	(,%r9,8), %rax
    000003a2: 	subq	%r9, %rax
    000003a5: 	movq	(%rsi,%rdx,8), %r9
    000003a9: 	leaq	(%r9,%rax,8), %rax
    000003ad: 	comisd	(%rax), %xmm5
    000003b1: 	jbe	.Ltmp102 # Offset: 945
.Ltmp109:
    000003b7: 	movq	%r8, %rax
    000003ba: 	mulq	%r13
    000003bd: 	shrq	$0x3, %rdx
    000003c1: 	notq	%rdx
.Ltmp107:
    000003c4: 	leaq	(%rdx,%rdx,8), %rax
    000003c8: 	movq	(%rsi,%rdx,8), %rdx
    000003cc: 	subq	%rax, %rcx
    000003cf: 	leaq	(,%rcx,8), %rax
    000003d7: 	subq	%rcx, %rax
    000003da: 	leaq	(%rdx,%rax,8), %rax
    000003de: 	movsd	(%rax), %xmm2
    000003e2: 	jmp	.Ltmp103 # Offset: 994
    000003e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp94:
    000003f0: 	movq	%rcx, %rax
    000003f3: 	movq	%rcx, %r8
    000003f6: 	imulq	%r12
    000003f9: 	movq	%rcx, %rax
    000003fc: 	sarq	$0x3f, %rax
    00000400: 	subq	%rax, %rdx
    00000403: 	leaq	(%rdx,%rdx,8), %rax
    00000407: 	movq	(%rsi,%rdx,8), %rdx
    0000040b: 	subq	%rax, %r8
    0000040e: 	leaq	(,%r8,8), %rax
    00000416: 	subq	%r8, %rax
    00000419: 	leaq	(%rdx,%rax,8), %rdx
    0000041d: 	movq	0x8(%rdx), %rax
    00000421: 	addsd	(%rdx), %xmm3
    00000425: 	testq	%rax, %rax
    00000428: 	js	.Ltmp104 # Offset: 1064
    0000042e: 	pxor	%xmm0, %xmm0
    00000432: 	cvtsi2sd	%rax, %xmm0
.Ltmp112:
    00000437: 	movq	0x10(%rdx), %rax
    0000043b: 	testq	%rax, %rax
    0000043e: 	js	.Ltmp105 # Offset: 1086
    00000444: 	pxor	%xmm1, %xmm1
    00000448: 	cvtsi2sd	%rax, %xmm1
.Ltmp111:
    0000044d: 	movq	%rcx, %rax
    00000450: 	movq	%rcx, %r8
    00000453: 	movsd	DATAat0x17380(%rip), %xmm4
    0000045b: 	imulq	%r12
    0000045e: 	mulsd	%xmm1, %xmm0
    00000462: 	movq	%rcx, %rax
    00000465: 	movsd	DATAat0x17378(%rip), %xmm1
    0000046d: 	sarq	$0x3f, %rax
    00000471: 	divsd	DATAat0x17370(%rip), %xmm0
    00000479: 	subq	%rax, %rdx
    0000047c: 	leaq	(%rdx,%rdx,8), %rax
    00000480: 	movq	(%rsi,%rdx,8), %r10
    00000484: 	subq	%rax, %r8
    00000487: 	leaq	(,%r8,8), %rax
    0000048f: 	subq	%r8, %rax
    00000492: 	leaq	(%r10,%rax,8), %rax
    00000496: 	comisd	(%rax), %xmm4
    0000049a: 	jbe	.Ltmp106 # Offset: 1178
.Ltmp110:
    0000049c: 	movq	%rcx, %rax
    0000049f: 	imulq	%r12
    000004a2: 	movq	%rcx, %rax
    000004a5: 	sarq	$0x3f, %rax
    000004a9: 	subq	%rax, %rdx
    000004ac: 	jmp	.Ltmp107 # Offset: 1196
    000004b1: 	nopl	(%rax) # Size: 7
.Ltmp106:
    000004b8: 	cmpq	$0x8, %rcx
    000004bc: 	jle	.Ltmp108 # Offset: 1212
.Ltmp102:
    000004c2: 	leaq	(%rdx,%rdx,8), %rax
    000004c6: 	movq	%rcx, %r8
    000004c9: 	movapd	%xmm0, %xmm1
    000004cd: 	subq	%rax, %r8
    000004d0: 	leaq	(,%r8,8), %rax
    000004d8: 	subq	%r8, %rax
    000004db: 	movq	(%rsi,%rdx,8), %r8
    000004df: 	leaq	(%r8,%rax,8), %rax
    000004e3: 	movq	%rcx, %r8
    000004e6: 	notq	%r8
    000004e9: 	divsd	(%rax), %xmm1
    000004ed: 	testq	%rcx, %rcx
    000004f0: 	js	.Ltmp109 # Offset: 1264
    000004f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp129:
    00000500: 	cmpq	$0x8, %rcx
    00000504: 	jg	.Ltmp110 # Offset: 1284
    00000506: 	leaq	(%rdi,%rbx), %rax
    0000050a: 	movsd	(%rax), %xmm2
    0000050e: 	jmp	.Ltmp103 # Offset: 1294
    00000513: 	nopl	(%rax,%rax) # Size: 5
.Ltmp105:
    00000518: 	movq	%rax, %rdx
    0000051b: 	andl	$0x1, %eax
    0000051e: 	pxor	%xmm1, %xmm1
    00000522: 	shrq	%rdx
    00000525: 	orq	%rax, %rdx
    00000528: 	cvtsi2sd	%rdx, %xmm1
    0000052d: 	addsd	%xmm1, %xmm1
    00000531: 	jmp	.Ltmp111 # Offset: 1329
    00000536: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp104:
    00000540: 	movq	%rax, %r8
    00000543: 	andl	$0x1, %eax
    00000546: 	pxor	%xmm0, %xmm0
    0000054a: 	shrq	%r8
    0000054d: 	orq	%rax, %r8
    00000550: 	cvtsi2sd	%r8, %xmm0
    00000555: 	addsd	%xmm0, %xmm0
    00000559: 	jmp	.Ltmp112 # Offset: 1369
    0000055e: 	nop # Size: 2
.Ltmp101:
    00000560: 	movq	%rax, %rdx
    00000563: 	andl	$0x1, %eax
    00000566: 	pxor	%xmm1, %xmm1
    0000056a: 	shrq	%rdx
    0000056d: 	orq	%rax, %rdx
    00000570: 	cvtsi2sd	%rdx, %xmm1
    00000575: 	addsd	%xmm1, %xmm1
    00000579: 	jmp	.Ltmp113 # Offset: 1401
    0000057e: 	nop # Size: 2
.Ltmp100:
    00000580: 	movq	%rax, %r9
    00000583: 	andl	$0x1, %eax
    00000586: 	pxor	%xmm0, %xmm0
    0000058a: 	shrq	%r9
    0000058d: 	orq	%rax, %r9
    00000590: 	cvtsi2sd	%r9, %xmm0
    00000595: 	addsd	%xmm0, %xmm0
    00000599: 	jmp	.Ltmp114 # Offset: 1433
    0000059e: 	nop # Size: 2
.Ltmp98:
    000005a0: 	movq	0x18(%rsp), %rax
    000005a5: 	movapd	%xmm3, %xmm0
    000005a9: 	movl	$0x1, %edi
    000005ae: 	leaq	DATAat0x170e8(%rip), %rsi
    000005b5: 	movq	(%rax), %rdx
    000005b8: 	movl	$0x1, %eax
    000005bd: 	callq	__printf_chk@PLT # Offset: 1469
    000005c2: 	movdqa	gResults+32(%rip), %xmm7
    000005ca: 	movq	gResults+48(%rip), %rax
    000005d1: 	movdqa	gResults+16(%rip), %xmm6
    000005d9: 	movq	gResults+56(%rip), %r14
    000005e0: 	movhlps	%xmm7, %xmm4
    000005e3: 	movq	%rax, 0x8(%rsp)
    000005e8: 	movq	gResults+72(%rip), %rax
    000005ef: 	movq	%xmm4, %rbx
    000005f4: 	movaps	%xmm6, 0x20(%rsp)
    000005f9: 	movq	%xmm6, %rbp
    000005fe: 	leaq	0x8(%rbx), %r12
    00000602: 	movq	%rax, 0x18(%rsp)
    00000607: 	movaps	%xmm7, 0x30(%rsp)
    0000060c: 	movq	%r12, %r13
    0000060f: 	movq	%xmm4, 0x40(%rsp)
    00000615: 	movq	%xmm7, 0x10(%rsp)
    0000061b: 	cmpq	%r12, %rax
    0000061e: 	jbe	.Ltmp115 # Offset: 1566
    00000620: 	movq	%rax, %r15
    00000623: 	movq	%xmm6, 0x48(%rsp)
    00000629: 	nopl	(%rax) # Size: 7
.Ltmp118:
    00000630: 	movq	(%r13), %rbp
    00000634: 	leaq	0x1f8(%rbp), %rbx
    0000063b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp117:
    00000640: 	movq	0x18(%rbp), %rdi
    00000644: 	leaq	0x28(%rbp), %rdx
    00000648: 	cmpq	%rdx, %rdi
    0000064b: 	je	.Ltmp116 # Offset: 1611
    00000651: 	movq	0x28(%rbp), %rax
    00000655: 	addq	$0x38, %rbp
    00000659: 	leaq	0x1(%rax), %rsi
    0000065d: 	callq	_ZdlPvm@PLT # Offset: 1629
    00000662: 	cmpq	%rbx, %rbp
    00000665: 	jne	.Ltmp117 # Offset: 1637
    00000667: 	addq	$0x8, %r13
    0000066b: 	cmpq	%r13, %r15
    0000066e: 	ja	.Ltmp118 # Offset: 1646
.Ltmp126:
    00000670: 	movq	0x48(%rsp), %rbp
.Ltmp115:
    00000675: 	movq	0x40(%rsp), %rbx
    0000067a: 	cmpq	%rbx, 0x18(%rsp)
    0000067f: 	je	.Ltmp119 # Offset: 1663
    00000681: 	cmpq	0x10(%rsp), %rbp
    00000686: 	je	.Ltmp120 # Offset: 1670
    0000068c: 	nopl	(%rax) # Size: 4
.Ltmp122:
    00000690: 	movq	0x18(%rbp), %rdi
    00000694: 	leaq	0x28(%rbp), %rax
    00000698: 	cmpq	%rax, %rdi
    0000069b: 	je	.Ltmp121 # Offset: 1691
    0000069d: 	movq	0x28(%rbp), %rax
    000006a1: 	leaq	0x1(%rax), %rsi
    000006a5: 	callq	_ZdlPvm@PLT # Offset: 1701
.Ltmp121:
    000006aa: 	addq	$0x38, %rbp
    000006ae: 	cmpq	0x10(%rsp), %rbp
    000006b3: 	jne	.Ltmp122 # Offset: 1715
    000006b5: 	jmp	.Ltmp120 # Offset: 1717
    000006ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp124:
    000006c0: 	movq	0x28(%rbp), %rax
    000006c4: 	addq	$0x38, %rbp
    000006c8: 	leaq	0x1(%rax), %rsi
    000006cc: 	callq	_ZdlPvm@PLT # Offset: 1740
.Ltmp119:
    000006d1: 	cmpq	0x8(%rsp), %rbp
    000006d6: 	je	.Ltmp123 # Offset: 1750
.Ltmp125:
    000006dc: 	movq	0x18(%rbp), %rdi
    000006e0: 	leaq	0x28(%rbp), %rax
    000006e4: 	cmpq	%rax, %rdi
    000006e7: 	jne	.Ltmp124 # Offset: 1767
    000006e9: 	addq	$0x38, %rbp
    000006ed: 	cmpq	%rbp, 0x8(%rsp)
    000006f2: 	jne	.Ltmp125 # Offset: 1778
    000006f4: 	jmp	.Ltmp123 # Offset: 1780
    000006f9: 	nopl	(%rax) # Size: 7
.Ltmp116:
    00000700: 	addq	$0x38, %rbp
    00000704: 	cmpq	%rbx, %rbp
    00000707: 	jne	.Ltmp117 # Offset: 1799
    0000070d: 	addq	$0x8, %r13
    00000711: 	cmpq	%r13, %r15
    00000714: 	ja	.Ltmp118 # Offset: 1812
    0000071a: 	jmp	.Ltmp126 # Offset: 1818
    0000071f: 	nop # Size: 1
.Ltmp95:
    00000720: 	movq	%rdx, %r8
    00000723: 	andl	$0x1, %edx
    00000726: 	pxor	%xmm0, %xmm0
    0000072a: 	shrq	%r8
    0000072d: 	orq	%rdx, %r8
    00000730: 	movq	0x8(%rax), %rdx
    00000734: 	cvtsi2sd	%r8, %xmm0
    00000739: 	addsd	%xmm0, %xmm0
    0000073d: 	testq	%rdx, %rdx
    00000740: 	jns	.Ltmp127 # Offset: 1856
.Ltmp96:
    00000746: 	movq	%rdx, %r8
    00000749: 	andl	$0x1, %edx
    0000074c: 	pxor	%xmm1, %xmm1
    00000750: 	shrq	%r8
    00000753: 	orq	%rdx, %r8
    00000756: 	cvtsi2sd	%r8, %xmm1
    0000075b: 	addsd	%xmm1, %xmm1
    0000075f: 	jmp	.Ltmp128 # Offset: 1887
.Ltmp108:
    00000764: 	movsd	(%rdi,%rbx), %xmm2
.Ltmp97:
    00000769: 	movapd	%xmm0, %xmm1
    0000076d: 	divsd	%xmm2, %xmm1
    00000771: 	jmp	.Ltmp129 # Offset: 1905
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED2Ev(*2)" after disassembly {
  All names   : _ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED2Ev
                _ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED1Ev
  Number      : 44
  State       : disassembled
  Address     : 0x4020
  Size        : 0x5
  MaxSize     : 0x10
  Offset      : 0x4020
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED2Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	retq # Offset: 4
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED2Ev(*2)"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED2Ev(*2)" after disassembly {
  All names   : _ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED2Ev
                _ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED1Ev
  Number      : 45
  State       : disassembled
  Address     : 0x4030
  Size        : 0x5
  MaxSize     : 0x10
  Offset      : 0x4030
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED2Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	retq # Offset: 4
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED2Ev(*2)"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x4040
  Size        : 0x7
  MaxSize     : 0x10
  Offset      : 0x4040
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	xorl	%eax, %eax
    00000006: 	retq # Offset: 6
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x4050
  Size        : 0x7
  MaxSize     : 0x10
  Offset      : 0x4050
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	xorl	%eax, %eax
    00000006: 	retq # Offset: 6
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE14_M_get_deleterERKSt9type_info"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x4060
  Size        : 0x21
  MaxSize     : 0x30
  Offset      : 0x4060
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	movq	0x10(%rdi), %rdi
    00000008: 	testq	%rdi, %rdi
    0000000b: 	je	.Ltmp130 # Offset: 11
    0000000d: 	movl	$0x8, %esi
    00000012: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 18
    00000017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp130:
    00000020: 	retq # Offset: 32
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x4090
  Size        : 0x21
  MaxSize     : 0x30
  Offset      : 0x4090
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	movq	0x10(%rdi), %rdi
    00000008: 	testq	%rdi, %rdi
    0000000b: 	je	.Ltmp131 # Offset: 11
    0000000d: 	movl	$0x68, %esi
    00000012: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 18
    00000017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp131:
    00000020: 	retq # Offset: 32
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_disposeEv"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED0Ev" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x40c0
  Size        : 0xe
  MaxSize     : 0x10
  Offset      : 0x40c0
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED0Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	movl	$0x18, %esi
    00000009: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EED0Ev"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x40d0
  Size        : 0xe
  MaxSize     : 0x10
  Offset      : 0x40d0
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	movl	$0x18, %esi
    00000009: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED0Ev" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x40e0
  Size        : 0xe
  MaxSize     : 0x10
  Offset      : 0x40e0
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED0Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	movl	$0x18, %esi
    00000009: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EED0Ev"

Binary Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x40f0
  Size        : 0xe
  MaxSize     : 0x10
  Offset      : 0x40f0
  Section     : .text
  Orc Section : .local.text._ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	movl	$0x18, %esi
    00000009: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 9
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE10_M_destroyEv"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/smart_pointers.cpp/1
  Number      : 54
  State       : disassembled
  Address     : 0x4100
  Size        : 0x135
  MaxSize     : 0x140
  Offset      : 0x4100
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	leaq	-0x1(%rsi), %rax
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %rcx
    00000009: 	movq	%rdx, %rdi
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rsi, %r12
    00000011: 	pushq	%rbp
    00000012: 	andl	$0x1, %r12d
    00000016: 	pushq	%rbx
    00000017: 	movq	%rax, %rbx
    0000001a: 	shrq	$0x3f, %rbx
    0000001e: 	addq	%rax, %rbx
    00000021: 	sarq	%rbx
    00000024: 	cmpq	$0x2, %rsi
    00000028: 	jle	.Ltmp132 # Offset: 40
    0000002e: 	movq	%rsi, %rbp
    00000031: 	xorl	%r8d, %r8d
    00000034: 	jmp	.Ltmp133 # Offset: 52
    00000036: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp135:
    00000040: 	movq	%r10, (%rcx,%r8,8)
    00000044: 	movq	%rsi, %rax
    00000047: 	cmpq	%rsi, %rbx
    0000004a: 	jle	.Ltmp134 # Offset: 74
.Ltmp136:
    00000050: 	movq	%rax, %r8
.Ltmp133:
    00000053: 	leaq	0x1(%r8), %rdx
    00000057: 	leaq	(%rdx,%rdx), %rsi
    0000005b: 	shlq	$0x4, %rdx
    0000005f: 	leaq	-0x1(%rsi), %rax
    00000063: 	addq	%rcx, %rdx
    00000066: 	leaq	(%rcx,%rax,8), %r11
    0000006a: 	movq	(%rdx), %r10
    0000006d: 	movq	(%r11), %r9
    00000070: 	movq	(%r10), %r14
    00000073: 	cmpq	%r14, (%r9)
    00000076: 	jle	.Ltmp135 # Offset: 118
    00000078: 	movq	%r9, (%rcx,%r8,8)
    0000007c: 	cmpq	%rax, %rbx
    0000007f: 	jg	.Ltmp136 # Offset: 127
    00000081: 	testq	%r12, %r12
    00000084: 	je	.Ltmp137 # Offset: 132
.Ltmp142:
    00000086: 	leaq	-0x1(%rax), %rsi
    0000008a: 	sarq	%rsi
.Ltmp141:
    0000008d: 	movq	(%rdi), %r9
    00000090: 	jmp	.Ltmp138 # Offset: 144
    00000092: 	nopw	(%rax,%rax) # Size: 6
.Ltmp140:
    00000098: 	movq	%rax, (%rdx)
    0000009b: 	leaq	-0x1(%rsi), %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	shrq	$0x3f, %rax
    000000a6: 	addq	%rdx, %rax
    000000a9: 	sarq	%rax
    000000ac: 	movq	%rax, %rdx
    000000af: 	movq	%rsi, %rax
    000000b2: 	testq	%rsi, %rsi
    000000b5: 	je	.Ltmp139 # Offset: 181
    000000b7: 	movq	%rdx, %rsi
.Ltmp138:
    000000ba: 	leaq	(%rcx,%rsi,8), %r8
    000000be: 	leaq	(%rcx,%rax,8), %rdx
    000000c2: 	movq	(%r8), %rax
    000000c5: 	cmpq	%r9, (%rax)
    000000c8: 	jl	.Ltmp140 # Offset: 200
.Ltmp143:
    000000ca: 	movq	%rdi, (%rdx)
    000000cd: 	popq	%rbx
    000000ce: 	popq	%rbp
    000000cf: 	popq	%r12
    000000d1: 	popq	%r14
    000000d3: 	retq # Offset: 211
    000000d4: 	nopl	(%rax) # Size: 4
.Ltmp137:
    000000d8: 	subq	$0x2, %rbp
    000000dc: 	leaq	-0x1(%rax), %rsi
    000000e0: 	sarq	%rbp
    000000e3: 	sarq	%rsi
    000000e6: 	cmpq	%rbp, %rax
    000000e9: 	jne	.Ltmp141 # Offset: 233
.Ltmp144:
    000000eb: 	leaq	0x1(%rax,%rax), %rax
    000000f0: 	movq	(%rcx,%rax,8), %rdx
    000000f4: 	movq	%rdx, (%r11)
    000000f7: 	jmp	.Ltmp142 # Offset: 247
    000000f9: 	nopl	(%rax) # Size: 7
.Ltmp139:
    00000100: 	movq	%r8, %rdx
    00000103: 	movq	%rdi, (%rdx)
    00000106: 	popq	%rbx
    00000107: 	popq	%rbp
    00000108: 	popq	%r12
    0000010a: 	popq	%r14
    0000010c: 	retq # Offset: 268
    0000010d: 	nopl	(%rax) # Size: 3
.Ltmp134:
    00000110: 	movq	%rdx, %r11
    00000113: 	testq	%r12, %r12
    00000116: 	jne	.Ltmp142 # Offset: 278
    0000011c: 	jmp	.Ltmp137 # Offset: 284
    0000011e: 	nop # Size: 2
.Ltmp132:
    00000120: 	movq	%rcx, %rdx
    00000123: 	testq	%r12, %r12
    00000126: 	jne	.Ltmp143 # Offset: 294
    00000128: 	cmpq	$0x2, %rax
    0000012c: 	ja	.Ltmp143 # Offset: 300
    0000012e: 	movq	%rcx, %r11
    00000131: 	xorl	%eax, %eax
    00000133: 	jmp	.Ltmp144 # Offset: 307
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/smart_pointers.cpp/1
  Number      : 55
  State       : disassembled
  Address     : 0x4240
  Size        : 0x135
  MaxSize     : 0x140
  Offset      : 0x4240
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	leaq	-0x1(%rsi), %rax
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %rcx
    00000009: 	movq	%rdx, %rdi
    0000000c: 	pushq	%r12
    0000000e: 	movq	%rsi, %r12
    00000011: 	pushq	%rbp
    00000012: 	andl	$0x1, %r12d
    00000016: 	pushq	%rbx
    00000017: 	movq	%rax, %rbx
    0000001a: 	shrq	$0x3f, %rbx
    0000001e: 	addq	%rax, %rbx
    00000021: 	sarq	%rbx
    00000024: 	cmpq	$0x2, %rsi
    00000028: 	jle	.Ltmp145 # Offset: 40
    0000002e: 	movq	%rsi, %rbp
    00000031: 	xorl	%r8d, %r8d
    00000034: 	jmp	.Ltmp146 # Offset: 52
    00000036: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp148:
    00000040: 	movq	%r10, (%rcx,%r8,8)
    00000044: 	movq	%rsi, %rax
    00000047: 	cmpq	%rsi, %rbx
    0000004a: 	jle	.Ltmp147 # Offset: 74
.Ltmp149:
    00000050: 	movq	%rax, %r8
.Ltmp146:
    00000053: 	leaq	0x1(%r8), %rdx
    00000057: 	leaq	(%rdx,%rdx), %rsi
    0000005b: 	shlq	$0x4, %rdx
    0000005f: 	leaq	-0x1(%rsi), %rax
    00000063: 	addq	%rcx, %rdx
    00000066: 	leaq	(%rcx,%rax,8), %r11
    0000006a: 	movq	(%rdx), %r10
    0000006d: 	movq	(%r11), %r9
    00000070: 	movq	(%r10), %r14
    00000073: 	cmpq	%r14, (%r9)
    00000076: 	jle	.Ltmp148 # Offset: 118
    00000078: 	movq	%r9, (%rcx,%r8,8)
    0000007c: 	cmpq	%rax, %rbx
    0000007f: 	jg	.Ltmp149 # Offset: 127
    00000081: 	testq	%r12, %r12
    00000084: 	je	.Ltmp150 # Offset: 132
.Ltmp155:
    00000086: 	leaq	-0x1(%rax), %rsi
    0000008a: 	sarq	%rsi
.Ltmp154:
    0000008d: 	movq	(%rdi), %r9
    00000090: 	jmp	.Ltmp151 # Offset: 144
    00000092: 	nopw	(%rax,%rax) # Size: 6
.Ltmp153:
    00000098: 	movq	%rax, (%rdx)
    0000009b: 	leaq	-0x1(%rsi), %rdx
    0000009f: 	movq	%rdx, %rax
    000000a2: 	shrq	$0x3f, %rax
    000000a6: 	addq	%rdx, %rax
    000000a9: 	sarq	%rax
    000000ac: 	movq	%rax, %rdx
    000000af: 	movq	%rsi, %rax
    000000b2: 	testq	%rsi, %rsi
    000000b5: 	je	.Ltmp152 # Offset: 181
    000000b7: 	movq	%rdx, %rsi
.Ltmp151:
    000000ba: 	leaq	(%rcx,%rsi,8), %r8
    000000be: 	leaq	(%rcx,%rax,8), %rdx
    000000c2: 	movq	(%r8), %rax
    000000c5: 	cmpq	%r9, (%rax)
    000000c8: 	jl	.Ltmp153 # Offset: 200
.Ltmp156:
    000000ca: 	movq	%rdi, (%rdx)
    000000cd: 	popq	%rbx
    000000ce: 	popq	%rbp
    000000cf: 	popq	%r12
    000000d1: 	popq	%r14
    000000d3: 	retq # Offset: 211
    000000d4: 	nopl	(%rax) # Size: 4
.Ltmp150:
    000000d8: 	subq	$0x2, %rbp
    000000dc: 	leaq	-0x1(%rax), %rsi
    000000e0: 	sarq	%rbp
    000000e3: 	sarq	%rsi
    000000e6: 	cmpq	%rbp, %rax
    000000e9: 	jne	.Ltmp154 # Offset: 233
.Ltmp157:
    000000eb: 	leaq	0x1(%rax,%rax), %rax
    000000f0: 	movq	(%rcx,%rax,8), %rdx
    000000f4: 	movq	%rdx, (%r11)
    000000f7: 	jmp	.Ltmp155 # Offset: 247
    000000f9: 	nopl	(%rax) # Size: 7
.Ltmp152:
    00000100: 	movq	%r8, %rdx
    00000103: 	movq	%rdi, (%rdx)
    00000106: 	popq	%rbx
    00000107: 	popq	%rbp
    00000108: 	popq	%r12
    0000010a: 	popq	%r14
    0000010c: 	retq # Offset: 268
    0000010d: 	nopl	(%rax) # Size: 3
.Ltmp147:
    00000110: 	movq	%rdx, %r11
    00000113: 	testq	%r12, %r12
    00000116: 	jne	.Ltmp155 # Offset: 278
    0000011c: 	jmp	.Ltmp150 # Offset: 284
    0000011e: 	nop # Size: 2
.Ltmp145:
    00000120: 	movq	%rcx, %rdx
    00000123: 	testq	%r12, %r12
    00000126: 	jne	.Ltmp156 # Offset: 294
    00000128: 	cmpq	$0x2, %rax
    0000012c: 	ja	.Ltmp156 # Offset: 300
    0000012e: 	movq	%rcx, %r11
    00000131: 	xorl	%eax, %eax
    00000133: 	jmp	.Ltmp157 # Offset: 307
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 56
  State       : disassembled
  Address     : 0x4380
  Size        : 0x15e
  MaxSize     : 0x160
  Offset      : 0x4380
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r14
    00000006: 	movq	%rsi, %r8
    00000009: 	movq	%rcx, %r9
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rdx, %r13
    00000011: 	pushq	%r12
    00000013: 	andl	$0x1, %r13d
    00000017: 	movq	%rdx, %r12
    0000001a: 	pushq	%rbp
    0000001b: 	movq	%rax, %rbp
    0000001e: 	shrq	$0x3f, %rbp
    00000022: 	pushq	%rbx
    00000023: 	addq	%rax, %rbp
    00000026: 	sarq	%rbp
    00000029: 	cmpq	%rbp, %rsi
    0000002c: 	jge	.Ltmp158 # Offset: 44
    00000032: 	movq	%rsi, %r10
    00000035: 	jmp	.Ltmp159 # Offset: 53
    00000037: 	nopw	(%rax,%rax) # Size: 9
.Ltmp161:
    00000040: 	movq	%rbx, (%rdi,%r10,8)
    00000044: 	movq	%rcx, %rax
    00000047: 	cmpq	%rcx, %rbp
    0000004a: 	jle	.Ltmp160 # Offset: 74
.Ltmp162:
    00000050: 	movq	%rax, %r10
.Ltmp159:
    00000053: 	leaq	0x1(%r10), %rdx
    00000057: 	leaq	(%rdx,%rdx), %rcx
    0000005b: 	shlq	$0x4, %rdx
    0000005f: 	leaq	-0x1(%rcx), %rax
    00000063: 	addq	%rdi, %rdx
    00000066: 	leaq	(%rdi,%rax,8), %rsi
    0000006a: 	movq	(%rdx), %rbx
    0000006d: 	movq	(%rsi), %r11
    00000070: 	movq	(%rbx), %r14
    00000073: 	cmpq	%r14, (%r11)
    00000076: 	jle	.Ltmp161 # Offset: 118
    00000078: 	movq	%r11, (%rdi,%r10,8)
    0000007c: 	cmpq	%rax, %rbp
    0000007f: 	jg	.Ltmp162 # Offset: 127
    00000081: 	testq	%r13, %r13
    00000084: 	je	.Ltmp163 # Offset: 132
.Ltmp168:
    00000086: 	leaq	-0x1(%rax), %rdx
    0000008a: 	movq	%rdx, %rcx
    0000008d: 	shrq	$0x3f, %rcx
    00000091: 	addq	%rdx, %rcx
    00000094: 	sarq	%rcx
    00000097: 	cmpq	%r8, %rax
    0000009a: 	jle	.Ltmp164 # Offset: 154
    0000009c: 	movq	(%r9), %r11
    0000009f: 	jmp	.Ltmp165 # Offset: 159
    000000a1: 	nopl	(%rax) # Size: 7
.Ltmp167:
    000000a8: 	movq	%rdx, (%rsi)
    000000ab: 	leaq	-0x1(%rcx), %rdx
    000000af: 	movq	%rdx, %rax
    000000b2: 	shrq	$0x3f, %rax
    000000b6: 	addq	%rdx, %rax
    000000b9: 	sarq	%rax
    000000bc: 	movq	%rax, %rdx
    000000bf: 	movq	%rcx, %rax
    000000c2: 	cmpq	%rcx, %r8
    000000c5: 	jge	.Ltmp166 # Offset: 197
    000000c7: 	movq	%rdx, %rcx
.Ltmp165:
    000000ca: 	leaq	(%rdi,%rcx,8), %r10
    000000ce: 	leaq	(%rdi,%rax,8), %rsi
    000000d2: 	movq	(%r10), %rdx
    000000d5: 	cmpq	%r11, (%rdx)
    000000d8: 	jl	.Ltmp167 # Offset: 216
.Ltmp164:
    000000da: 	movq	%r9, (%rsi)
    000000dd: 	popq	%rbx
    000000de: 	popq	%rbp
    000000df: 	popq	%r12
    000000e1: 	popq	%r13
    000000e3: 	popq	%r14
    000000e5: 	retq # Offset: 229
    000000e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp158:
    000000f0: 	leaq	(%rdi,%rsi,8), %rsi
    000000f4: 	testq	%r13, %r13
    000000f7: 	jne	.Ltmp164 # Offset: 247
    000000f9: 	movq	%r8, %rax
    000000fc: 	nopl	(%rax) # Size: 4
.Ltmp163:
    00000100: 	subq	$0x2, %r12
    00000104: 	movq	%r12, %rdx
    00000107: 	shrq	$0x3f, %rdx
    0000010b: 	addq	%r12, %rdx
    0000010e: 	sarq	%rdx
    00000111: 	cmpq	%rdx, %rax
    00000114: 	jne	.Ltmp168 # Offset: 276
    0000011a: 	leaq	0x1(%rax,%rax), %rax
    0000011f: 	leaq	(%rdi,%rax,8), %rdx
    00000123: 	movq	(%rdx), %rcx
    00000126: 	movq	%rcx, (%rsi)
    00000129: 	movq	%rdx, %rsi
    0000012c: 	jmp	.Ltmp168 # Offset: 300
    00000131: 	nopl	(%rax) # Size: 7
.Ltmp166:
    00000138: 	movq	%r10, %rsi
    0000013b: 	movq	%r9, (%rsi)
    0000013e: 	popq	%rbx
    0000013f: 	popq	%rbp
    00000140: 	popq	%r12
    00000142: 	popq	%r13
    00000144: 	popq	%r14
    00000146: 	retq # Offset: 326
    00000147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp160:
    00000150: 	movq	%rdx, %rsi
    00000153: 	testq	%r13, %r13
    00000156: 	jne	.Ltmp168 # Offset: 342
    0000015c: 	jmp	.Ltmp163 # Offset: 348
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 57
  State       : disassembled
  Address     : 0x44e0
  Size        : 0x15e
  MaxSize     : 0x160
  Offset      : 0x44e0
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r14
    00000006: 	movq	%rsi, %r8
    00000009: 	movq	%rcx, %r9
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rdx, %r13
    00000011: 	pushq	%r12
    00000013: 	andl	$0x1, %r13d
    00000017: 	movq	%rdx, %r12
    0000001a: 	pushq	%rbp
    0000001b: 	movq	%rax, %rbp
    0000001e: 	shrq	$0x3f, %rbp
    00000022: 	pushq	%rbx
    00000023: 	addq	%rax, %rbp
    00000026: 	sarq	%rbp
    00000029: 	cmpq	%rbp, %rsi
    0000002c: 	jge	.Ltmp169 # Offset: 44
    00000032: 	movq	%rsi, %r10
    00000035: 	jmp	.Ltmp170 # Offset: 53
    00000037: 	nopw	(%rax,%rax) # Size: 9
.Ltmp172:
    00000040: 	movq	%rbx, (%rdi,%r10,8)
    00000044: 	movq	%rcx, %rax
    00000047: 	cmpq	%rcx, %rbp
    0000004a: 	jle	.Ltmp171 # Offset: 74
.Ltmp173:
    00000050: 	movq	%rax, %r10
.Ltmp170:
    00000053: 	leaq	0x1(%r10), %rdx
    00000057: 	leaq	(%rdx,%rdx), %rcx
    0000005b: 	shlq	$0x4, %rdx
    0000005f: 	leaq	-0x1(%rcx), %rax
    00000063: 	addq	%rdi, %rdx
    00000066: 	leaq	(%rdi,%rax,8), %rsi
    0000006a: 	movq	(%rdx), %rbx
    0000006d: 	movq	(%rsi), %r11
    00000070: 	movq	(%rbx), %r14
    00000073: 	cmpq	%r14, (%r11)
    00000076: 	jle	.Ltmp172 # Offset: 118
    00000078: 	movq	%r11, (%rdi,%r10,8)
    0000007c: 	cmpq	%rax, %rbp
    0000007f: 	jg	.Ltmp173 # Offset: 127
    00000081: 	testq	%r13, %r13
    00000084: 	je	.Ltmp174 # Offset: 132
.Ltmp179:
    00000086: 	leaq	-0x1(%rax), %rdx
    0000008a: 	movq	%rdx, %rcx
    0000008d: 	shrq	$0x3f, %rcx
    00000091: 	addq	%rdx, %rcx
    00000094: 	sarq	%rcx
    00000097: 	cmpq	%r8, %rax
    0000009a: 	jle	.Ltmp175 # Offset: 154
    0000009c: 	movq	(%r9), %r11
    0000009f: 	jmp	.Ltmp176 # Offset: 159
    000000a1: 	nopl	(%rax) # Size: 7
.Ltmp178:
    000000a8: 	movq	%rdx, (%rsi)
    000000ab: 	leaq	-0x1(%rcx), %rdx
    000000af: 	movq	%rdx, %rax
    000000b2: 	shrq	$0x3f, %rax
    000000b6: 	addq	%rdx, %rax
    000000b9: 	sarq	%rax
    000000bc: 	movq	%rax, %rdx
    000000bf: 	movq	%rcx, %rax
    000000c2: 	cmpq	%rcx, %r8
    000000c5: 	jge	.Ltmp177 # Offset: 197
    000000c7: 	movq	%rdx, %rcx
.Ltmp176:
    000000ca: 	leaq	(%rdi,%rcx,8), %r10
    000000ce: 	leaq	(%rdi,%rax,8), %rsi
    000000d2: 	movq	(%r10), %rdx
    000000d5: 	cmpq	%r11, (%rdx)
    000000d8: 	jl	.Ltmp178 # Offset: 216
.Ltmp175:
    000000da: 	movq	%r9, (%rsi)
    000000dd: 	popq	%rbx
    000000de: 	popq	%rbp
    000000df: 	popq	%r12
    000000e1: 	popq	%r13
    000000e3: 	popq	%r14
    000000e5: 	retq # Offset: 229
    000000e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp169:
    000000f0: 	leaq	(%rdi,%rsi,8), %rsi
    000000f4: 	testq	%r13, %r13
    000000f7: 	jne	.Ltmp175 # Offset: 247
    000000f9: 	movq	%r8, %rax
    000000fc: 	nopl	(%rax) # Size: 4
.Ltmp174:
    00000100: 	subq	$0x2, %r12
    00000104: 	movq	%r12, %rdx
    00000107: 	shrq	$0x3f, %rdx
    0000010b: 	addq	%r12, %rdx
    0000010e: 	sarq	%rdx
    00000111: 	cmpq	%rdx, %rax
    00000114: 	jne	.Ltmp179 # Offset: 276
    0000011a: 	leaq	0x1(%rax,%rax), %rax
    0000011f: 	leaq	(%rdi,%rax,8), %rdx
    00000123: 	movq	(%rdx), %rcx
    00000126: 	movq	%rcx, (%rsi)
    00000129: 	movq	%rdx, %rsi
    0000012c: 	jmp	.Ltmp179 # Offset: 300
    00000131: 	nopl	(%rax) # Size: 7
.Ltmp177:
    00000138: 	movq	%r10, %rsi
    0000013b: 	movq	%r9, (%rsi)
    0000013e: 	popq	%rbx
    0000013f: 	popq	%rbp
    00000140: 	popq	%r12
    00000142: 	popq	%r13
    00000144: 	popq	%r14
    00000146: 	retq # Offset: 326
    00000147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp171:
    00000150: 	movq	%rdx, %rsi
    00000153: 	testq	%r13, %r13
    00000156: 	jne	.Ltmp179 # Offset: 342
    0000015c: 	jmp	.Ltmp174 # Offset: 348
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1(*2)"

Binary Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1
                _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/smart_pointers.cpp/1
  Number      : 58
  State       : disassembled
  Address     : 0x4640
  Size        : 0x132
  MaxSize     : 0x140
  Offset      : 0x4640
  Section     : .text
  Orc Section : .local.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	cmpq	%rsi, %rdi
    00000003: 	je	.Ltmp180 # Offset: 3
    00000009: 	pushq	%r15
    0000000b: 	pushq	%r14
    0000000d: 	movq	%rsi, %r14
    00000010: 	pushq	%r13
    00000012: 	movq	%rdi, %r13
    00000015: 	pushq	%r12
    00000017: 	pushq	%rbp
    00000018: 	leaq	0x8(%rdi), %rbp
    0000001c: 	pushq	%rbx
    0000001d: 	subq	$0x8, %rsp
.Ltmp186:
    00000021: 	cmpq	%rbp, %r14
    00000024: 	je	.Ltmp181 # Offset: 36
.Ltmp187:
    0000002a: 	movq	(%rbp), %r12
    0000002e: 	movq	(%r13), %rcx
    00000032: 	movq	%rbp, %rax
    00000035: 	addq	$0x8, %rbp
    00000039: 	movq	(%r12), %rdx
    0000003d: 	cmpq	(%rcx), %rdx
    00000040: 	movq	$0x0, -0x8(%rbp)
    00000048: 	jge	.Ltmp182 # Offset: 72
    0000004a: 	subq	%r13, %rax
    0000004d: 	movq	%rbp, %rbx
    00000050: 	movq	%rax, %r15
    00000053: 	sarq	$0x3, %r15
    00000057: 	testq	%rax, %rax
    0000005a: 	jle	.Ltmp183 # Offset: 90
    0000005c: 	nopl	(%rax) # Size: 4
.Ltmp185:
    00000060: 	movq	-0x10(%rbx), %rax
    00000064: 	movq	-0x8(%rbx), %rdi
    00000068: 	subq	$0x8, %rbx
    0000006c: 	movq	$0x0, -0x8(%rbx)
    00000074: 	movq	%rax, (%rbx)
    00000077: 	testq	%rdi, %rdi
    0000007a: 	je	.Ltmp184 # Offset: 122
    0000007c: 	movl	$0x68, %esi
    00000081: 	callq	_ZdlPvm@PLT # Offset: 129
.Ltmp184:
    00000086: 	subq	$0x1, %r15
    0000008a: 	jne	.Ltmp185 # Offset: 138
.Ltmp183:
    0000008c: 	movq	(%r13), %rdi
    00000090: 	movq	%r12, (%r13)
    00000094: 	testq	%rdi, %rdi
    00000097: 	je	.Ltmp186 # Offset: 151
.Ltmp193:
    00000099: 	movl	$0x68, %esi
    0000009e: 	callq	_ZdlPvm@PLT # Offset: 158
    000000a3: 	cmpq	%rbp, %r14
    000000a6: 	jne	.Ltmp187 # Offset: 166
.Ltmp181:
    000000ac: 	addq	$0x8, %rsp
    000000b0: 	popq	%rbx
    000000b1: 	popq	%rbp
    000000b2: 	popq	%r12
    000000b4: 	popq	%r13
    000000b6: 	popq	%r14
    000000b8: 	popq	%r15
    000000ba: 	retq # Offset: 186
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp182:
    000000c0: 	movq	-0x10(%rbp), %rax
    000000c4: 	leaq	-0x10(%rbp), %rbx
    000000c8: 	cmpq	(%rax), %rdx
    000000cb: 	jl	.Ltmp188 # Offset: 203
    000000cd: 	jmp	.Ltmp189 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp191:
    000000d0: 	movl	$0x68, %esi
    000000d5: 	callq	_ZdlPvm@PLT # Offset: 213
    000000da: 	movq	-0x8(%rbx), %rax
    000000de: 	movq	(%r12), %rdx
    000000e2: 	leaq	-0x8(%rbx), %rcx
    000000e6: 	cmpq	%rdx, (%rax)
    000000e9: 	jle	.Ltmp190 # Offset: 233
.Ltmp192:
    000000eb: 	movq	%rcx, %rbx
.Ltmp188:
    000000ee: 	movq	0x8(%rbx), %rdi
    000000f2: 	movq	$0x0, (%rbx)
    000000f9: 	movq	%rax, 0x8(%rbx)
    000000fd: 	testq	%rdi, %rdi
    00000100: 	jne	.Ltmp191 # Offset: 256
    00000102: 	movq	-0x8(%rbx), %rax
    00000106: 	leaq	-0x8(%rbx), %rcx
    0000010a: 	cmpq	%rdx, (%rax)
    0000010d: 	jg	.Ltmp192 # Offset: 269
.Ltmp190:
    0000010f: 	movq	(%rbx), %rdi
    00000112: 	movq	%r12, (%rbx)
    00000115: 	testq	%rdi, %rdi
    00000118: 	jne	.Ltmp193 # Offset: 280
    0000011e: 	jmp	.Ltmp186 # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp189:
    00000128: 	movq	%r12, -0x8(%rbp)
    0000012c: 	jmp	.Ltmp186 # Offset: 300
.Ltmp180:
    00000131: 	retq # Offset: 305
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1(*2)"

Binary Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1
                _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/smart_pointers.cpp/1
  Number      : 59
  State       : disassembled
  Address     : 0x4780
  Size        : 0x132
  MaxSize     : 0x140
  Offset      : 0x4780
  Section     : .text
  Orc Section : .local.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	cmpq	%rsi, %rdi
    00000003: 	je	.Ltmp194 # Offset: 3
    00000009: 	pushq	%r15
    0000000b: 	pushq	%r14
    0000000d: 	movq	%rsi, %r14
    00000010: 	pushq	%r13
    00000012: 	movq	%rdi, %r13
    00000015: 	pushq	%r12
    00000017: 	pushq	%rbp
    00000018: 	leaq	0x8(%rdi), %rbp
    0000001c: 	pushq	%rbx
    0000001d: 	subq	$0x8, %rsp
.Ltmp200:
    00000021: 	cmpq	%rbp, %r14
    00000024: 	je	.Ltmp195 # Offset: 36
.Ltmp201:
    0000002a: 	movq	(%rbp), %r12
    0000002e: 	movq	(%r13), %rcx
    00000032: 	movq	%rbp, %rax
    00000035: 	addq	$0x8, %rbp
    00000039: 	movq	(%r12), %rdx
    0000003d: 	cmpq	(%rcx), %rdx
    00000040: 	movq	$0x0, -0x8(%rbp)
    00000048: 	jge	.Ltmp196 # Offset: 72
    0000004a: 	subq	%r13, %rax
    0000004d: 	movq	%rbp, %rbx
    00000050: 	movq	%rax, %r15
    00000053: 	sarq	$0x3, %r15
    00000057: 	testq	%rax, %rax
    0000005a: 	jle	.Ltmp197 # Offset: 90
    0000005c: 	nopl	(%rax) # Size: 4
.Ltmp199:
    00000060: 	movq	-0x10(%rbx), %rax
    00000064: 	movq	-0x8(%rbx), %rdi
    00000068: 	subq	$0x8, %rbx
    0000006c: 	movq	$0x0, -0x8(%rbx)
    00000074: 	movq	%rax, (%rbx)
    00000077: 	testq	%rdi, %rdi
    0000007a: 	je	.Ltmp198 # Offset: 122
    0000007c: 	movl	$0x8, %esi
    00000081: 	callq	_ZdlPvm@PLT # Offset: 129
.Ltmp198:
    00000086: 	subq	$0x1, %r15
    0000008a: 	jne	.Ltmp199 # Offset: 138
.Ltmp197:
    0000008c: 	movq	(%r13), %rdi
    00000090: 	movq	%r12, (%r13)
    00000094: 	testq	%rdi, %rdi
    00000097: 	je	.Ltmp200 # Offset: 151
.Ltmp207:
    00000099: 	movl	$0x8, %esi
    0000009e: 	callq	_ZdlPvm@PLT # Offset: 158
    000000a3: 	cmpq	%rbp, %r14
    000000a6: 	jne	.Ltmp201 # Offset: 166
.Ltmp195:
    000000ac: 	addq	$0x8, %rsp
    000000b0: 	popq	%rbx
    000000b1: 	popq	%rbp
    000000b2: 	popq	%r12
    000000b4: 	popq	%r13
    000000b6: 	popq	%r14
    000000b8: 	popq	%r15
    000000ba: 	retq # Offset: 186
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp196:
    000000c0: 	movq	-0x10(%rbp), %rax
    000000c4: 	leaq	-0x10(%rbp), %rbx
    000000c8: 	cmpq	(%rax), %rdx
    000000cb: 	jl	.Ltmp202 # Offset: 203
    000000cd: 	jmp	.Ltmp203 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp205:
    000000d0: 	movl	$0x8, %esi
    000000d5: 	callq	_ZdlPvm@PLT # Offset: 213
    000000da: 	movq	-0x8(%rbx), %rax
    000000de: 	movq	(%r12), %rdx
    000000e2: 	leaq	-0x8(%rbx), %rcx
    000000e6: 	cmpq	%rdx, (%rax)
    000000e9: 	jle	.Ltmp204 # Offset: 233
.Ltmp206:
    000000eb: 	movq	%rcx, %rbx
.Ltmp202:
    000000ee: 	movq	0x8(%rbx), %rdi
    000000f2: 	movq	$0x0, (%rbx)
    000000f9: 	movq	%rax, 0x8(%rbx)
    000000fd: 	testq	%rdi, %rdi
    00000100: 	jne	.Ltmp205 # Offset: 256
    00000102: 	movq	-0x8(%rbx), %rax
    00000106: 	leaq	-0x8(%rbx), %rcx
    0000010a: 	cmpq	%rdx, (%rax)
    0000010d: 	jg	.Ltmp206 # Offset: 269
.Ltmp204:
    0000010f: 	movq	(%rbx), %rdi
    00000112: 	movq	%r12, (%rbx)
    00000115: 	testq	%rdi, %rdi
    00000118: 	jne	.Ltmp207 # Offset: 280
    0000011e: 	jmp	.Ltmp200 # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp203:
    00000128: 	movq	%r12, -0x8(%rbp)
    0000012c: 	jmp	.Ltmp200 # Offset: 300
.Ltmp194:
    00000131: 	retq # Offset: 305
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1(*2)"

Binary Function "_ZNSt5dequeI10one_resultSaIS0_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeI10one_resultSaIS0_EED1Ev
                _ZNSt5dequeI10one_resultSaIS0_EED2Ev
  Number      : 60
  State       : disassembled
  Address     : 0x48c0
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x48c0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeI10one_resultSaIS0_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp208 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp211:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x1f8(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp210:
    00000060: 	movq	0x18(%r15), %rdi
    00000064: 	leaq	0x28(%r15), %rdx
    00000068: 	cmpq	%rdx, %rdi
    0000006b: 	je	.Ltmp209 # Offset: 107
    00000071: 	movq	0x28(%r15), %rax
    00000075: 	addq	$0x38, %r15
    00000079: 	leaq	0x1(%rax), %rsi
    0000007d: 	callq	_ZdlPvm@PLT # Offset: 125
    00000082: 	cmpq	%r15, %rbx
    00000085: 	jne	.Ltmp210 # Offset: 133
    00000087: 	addq	$0x8, %r12
    0000008b: 	cmpq	%r12, (%rsp)
    0000008f: 	ja	.Ltmp211 # Offset: 143
.Ltmp208:
    00000091: 	movq	(%rsp), %rcx
    00000095: 	cmpq	%rcx, 0x18(%rsp)
    0000009a: 	je	.Ltmp212 # Offset: 154
    000000a0: 	cmpq	0x10(%rsp), %rbp
    000000a5: 	je	.Ltmp213 # Offset: 165
.Ltmp216:
    000000a7: 	movq	0x18(%rbp), %rdi
    000000ab: 	leaq	0x28(%rbp), %rax
    000000af: 	cmpq	%rax, %rdi
    000000b2: 	je	.Ltmp214 # Offset: 178
.Ltmp215:
    000000b4: 	movq	0x28(%rbp), %rax
    000000b8: 	addq	$0x38, %rbp
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
    000000c5: 	cmpq	%rbp, 0x10(%rsp)
    000000ca: 	je	.Ltmp213 # Offset: 202
    000000cc: 	movq	0x18(%rbp), %rdi
    000000d0: 	leaq	0x28(%rbp), %rax
    000000d4: 	cmpq	%rax, %rdi
    000000d7: 	jne	.Ltmp215 # Offset: 215
.Ltmp214:
    000000d9: 	addq	$0x38, %rbp
    000000dd: 	cmpq	%rbp, 0x10(%rsp)
    000000e2: 	jne	.Ltmp216 # Offset: 226
    000000e4: 	cmpq	%r13, 0x8(%rsp)
    000000e9: 	je	.Ltmp217 # Offset: 233
    000000eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp219:
    000000f0: 	movq	0x18(%r13), %rdi
    000000f4: 	leaq	0x28(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp218 # Offset: 251
    000000fd: 	movq	0x28(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp218:
    0000010a: 	addq	$0x38, %r13
.Ltmp213:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp219 # Offset: 275
.Ltmp217:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp220 # Offset: 283
.Ltmp226:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp221 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp222:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x1f8, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp222 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp221:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp209:
    00000170: 	addq	$0x38, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp210 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp211 # Offset: 389
    0000018b: 	jmp	.Ltmp208 # Offset: 395
.Ltmp212:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp217 # Offset: 405
.Ltmp225:
    0000019b: 	movq	0x18(%rbp), %rdi
    0000019f: 	leaq	0x28(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp223 # Offset: 422
.Ltmp224:
    000001a8: 	movq	0x28(%rbp), %rax
    000001ac: 	addq	$0x38, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp217 # Offset: 446
    000001c4: 	movq	0x18(%rbp), %rdi
    000001c8: 	leaq	0x28(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp224 # Offset: 463
.Ltmp223:
    000001d1: 	addq	$0x38, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp225 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp226 # Offset: 482
.Ltmp220:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeI10one_resultSaIS0_EED1Ev(*2)"

Binary Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1
                _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/smart_pointers.cpp/1
  Number      : 61
  State       : disassembled
  Address     : 0x4ac0
  Size        : 0x2ca
  MaxSize     : 0x2d0
  Offset      : 0x4ac0
  Section     : .text
  Orc Section : .local.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	cmpq	%rsi, %rdi
    00000003: 	je	.Ltmp227 # Offset: 3
    00000009: 	pushq	%r15
    0000000b: 	leaq	0x10(%rdi), %r15
    0000000f: 	pushq	%r14
    00000011: 	pushq	%r13
    00000013: 	movq	%rsi, %r13
    00000016: 	pushq	%r12
    00000018: 	movq	%rdi, %r12
    0000001b: 	pushq	%rbp
    0000001c: 	pushq	%rbx
    0000001d: 	subq	$0x18, %rsp
    00000021: 	cmpq	%r15, %rsi
    00000024: 	je	.Ltmp228 # Offset: 36
    0000002a: 	pxor	%xmm1, %xmm1
    0000002e: 	nop # Size: 2
.Ltmp238:
    00000030: 	movq	(%r15), %r14
    00000033: 	movq	(%r12), %rax
    00000037: 	movq	%r15, %rbp
    0000003a: 	addq	$0x10, %r15
    0000003e: 	movdqu	-0x10(%r15), %xmm2
    00000044: 	movq	(%r14), %rdx
    00000047: 	cmpq	(%rax), %rdx
    0000004a: 	movaps	%xmm2, (%rsp)
    0000004e: 	movups	%xmm1, -0x10(%r15)
    00000053: 	jge	.Ltmp229 # Offset: 83
    00000059: 	movq	%rbp, %rax
    0000005c: 	subq	%r12, %rax
    0000005f: 	movq	%rax, %rbx
    00000062: 	sarq	$0x4, %rbx
    00000066: 	testq	%rax, %rax
    00000069: 	jg	.Ltmp230 # Offset: 105
    0000006b: 	jmp	.Ltmp231 # Offset: 107
.Ltmp232:
    00000070: 	subq	$0x1, %rbx
    00000074: 	je	.Ltmp231 # Offset: 116
.Ltmp230:
    00000076: 	movdqu	-0x10(%rbp), %xmm0
    0000007b: 	movq	0x8(%rbp), %r14
    0000007f: 	subq	$0x10, %rbp
    00000083: 	movups	%xmm1, (%rbp)
    00000087: 	movups	%xmm0, 0x10(%rbp)
    0000008b: 	testq	%r14, %r14
    0000008e: 	je	.Ltmp232 # Offset: 142
    00000090: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000097: 	je	.Ltmp233 # Offset: 151
    0000009d: 	movl	0x8(%r14), %eax
    000000a1: 	leal	-0x1(%rax), %edx
    000000a4: 	movl	%edx, 0x8(%r14)
.Ltmp239:
    000000a8: 	cmpl	$0x1, %eax
    000000ab: 	jne	.Ltmp232 # Offset: 171
    000000ad: 	movq	(%r14), %rax
    000000b0: 	movq	%r14, %rdi
    000000b3: 	callq	*0x10(%rax) # Offset: 179
    000000b6: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000bd: 	pxor	%xmm1, %xmm1
    000000c1: 	je	.Ltmp234 # Offset: 193
    000000c7: 	movl	0xc(%r14), %eax
    000000cb: 	leal	-0x1(%rax), %edx
    000000ce: 	movl	%edx, 0xc(%r14)
.Ltmp252:
    000000d2: 	cmpl	$0x1, %eax
    000000d5: 	jne	.Ltmp232 # Offset: 213
    000000d7: 	movq	(%r14), %rax
    000000da: 	movq	%r14, %rdi
    000000dd: 	callq	*0x18(%rax) # Offset: 221
    000000e0: 	pxor	%xmm1, %xmm1
    000000e4: 	subq	$0x1, %rbx
    000000e8: 	jne	.Ltmp230 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp231:
    000000f0: 	movq	0x8(%r12), %rbp
    000000f5: 	movdqa	(%rsp), %xmm3
    000000fa: 	movups	%xmm3, (%r12)
    000000ff: 	testq	%rbp, %rbp
    00000102: 	je	.Ltmp235 # Offset: 258
    00000104: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000010b: 	je	.Ltmp236 # Offset: 267
.Ltmp248:
    00000111: 	movl	0x8(%rbp), %eax
    00000114: 	leal	-0x1(%rax), %edx
    00000117: 	movl	%edx, 0x8(%rbp)
    0000011a: 	cmpl	$0x1, %eax
    0000011d: 	je	.Ltmp237 # Offset: 285
.Ltmp235:
    00000123: 	cmpq	%r15, %r13
    00000126: 	jne	.Ltmp238 # Offset: 294
.Ltmp228:
    0000012c: 	addq	$0x18, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	popq	%r15
    0000013a: 	retq # Offset: 314
    0000013b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp233:
    00000140: 	movl	$0xffffffff, %eax
    00000145: 	lock # Offset: 325
    00000146: 	xaddl	%eax, 0x8(%r14)
    0000014b: 	jmp	.Ltmp239 # Offset: 331
.Ltmp229:
    00000150: 	movq	-0x20(%r15), %rax
    00000154: 	leaq	-0x20(%r15), %rbx
    00000158: 	cmpq	(%rax), %rdx
    0000015b: 	jl	.Ltmp240 # Offset: 347
    0000015d: 	jmp	.Ltmp241 # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp245:
    00000168: 	movq	(%r14), %rdx
.Ltmp243:
    0000016b: 	movq	-0x10(%rbx), %rax
    0000016f: 	leaq	-0x10(%rbx), %rcx
    00000173: 	cmpq	%rdx, (%rax)
    00000176: 	jle	.Ltmp242 # Offset: 374
.Ltmp247:
    0000017c: 	movq	%rcx, %rbx
.Ltmp240:
    0000017f: 	movq	0x18(%rbx), %rbp
    00000183: 	movq	%rax, %xmm0
    00000188: 	movhps	0x8(%rbx), %xmm0
    0000018c: 	movups	%xmm1, (%rbx)
    0000018f: 	movups	%xmm0, 0x10(%rbx)
    00000193: 	testq	%rbp, %rbp
    00000196: 	je	.Ltmp243 # Offset: 406
    00000198: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000019f: 	je	.Ltmp244 # Offset: 415
    000001a5: 	movl	0x8(%rbp), %eax
    000001a8: 	leal	-0x1(%rax), %edx
    000001ab: 	movl	%edx, 0x8(%rbp)
.Ltmp250:
    000001ae: 	cmpl	$0x1, %eax
    000001b1: 	jne	.Ltmp245 # Offset: 433
    000001b3: 	movq	(%rbp), %rax
    000001b7: 	movq	%rbp, %rdi
    000001ba: 	callq	*0x10(%rax) # Offset: 442
    000001bd: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001c4: 	pxor	%xmm1, %xmm1
    000001c8: 	je	.Ltmp246 # Offset: 456
    000001ce: 	movl	0xc(%rbp), %eax
    000001d1: 	leal	-0x1(%rax), %edx
    000001d4: 	movl	%edx, 0xc(%rbp)
.Ltmp251:
    000001d7: 	cmpl	$0x1, %eax
    000001da: 	jne	.Ltmp245 # Offset: 474
    000001dc: 	movq	(%rbp), %rax
    000001e0: 	movq	%rbp, %rdi
    000001e3: 	callq	*0x18(%rax) # Offset: 483
    000001e6: 	movq	-0x10(%rbx), %rax
    000001ea: 	movq	(%r14), %rdx
    000001ed: 	pxor	%xmm1, %xmm1
    000001f1: 	leaq	-0x10(%rbx), %rcx
    000001f5: 	cmpq	%rdx, (%rax)
    000001f8: 	jg	.Ltmp247 # Offset: 504
    000001fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp242:
    00000200: 	movq	0x8(%rbx), %rbp
    00000204: 	movdqa	(%rsp), %xmm4
    00000209: 	movups	%xmm4, (%rbx)
    0000020c: 	testq	%rbp, %rbp
    0000020f: 	je	.Ltmp235 # Offset: 527
    00000215: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000021c: 	jne	.Ltmp248 # Offset: 540
.Ltmp236:
    00000222: 	movl	$0xffffffff, %eax
    00000227: 	lock # Offset: 551
    00000228: 	xaddl	%eax, 0x8(%rbp)
    0000022c: 	cmpl	$0x1, %eax
    0000022f: 	jne	.Ltmp235 # Offset: 559
.Ltmp237:
    00000235: 	movq	(%rbp), %rax
    00000239: 	movq	%rbp, %rdi
    0000023c: 	callq	*0x10(%rax) # Offset: 572
    0000023f: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000246: 	pxor	%xmm1, %xmm1
    0000024a: 	je	.Ltmp249 # Offset: 586
    0000024c: 	movl	0xc(%rbp), %eax
    0000024f: 	leal	-0x1(%rax), %edx
    00000252: 	movl	%edx, 0xc(%rbp)
.Ltmp253:
    00000255: 	cmpl	$0x1, %eax
    00000258: 	jne	.Ltmp235 # Offset: 600
    0000025e: 	movq	(%rbp), %rax
    00000262: 	movq	%rbp, %rdi
    00000265: 	callq	*0x18(%rax) # Offset: 613
    00000268: 	pxor	%xmm1, %xmm1
    0000026c: 	jmp	.Ltmp235 # Offset: 620
    00000271: 	nopl	(%rax) # Size: 7
.Ltmp244:
    00000278: 	movl	$0xffffffff, %eax
    0000027d: 	lock # Offset: 637
    0000027e: 	xaddl	%eax, 0x8(%rbp)
    00000282: 	jmp	.Ltmp250 # Offset: 642
    00000287: 	nopw	(%rax,%rax) # Size: 9
.Ltmp246:
    00000290: 	movl	$0xffffffff, %eax
    00000295: 	lock # Offset: 661
    00000296: 	xaddl	%eax, 0xc(%rbp)
    0000029a: 	jmp	.Ltmp251 # Offset: 666
    0000029f: 	nop # Size: 1
.Ltmp234:
    000002a0: 	movl	$0xffffffff, %eax
    000002a5: 	lock # Offset: 677
    000002a6: 	xaddl	%eax, 0xc(%r14)
    000002ab: 	jmp	.Ltmp252 # Offset: 683
.Ltmp249:
    000002b0: 	movl	$0xffffffff, %eax
    000002b5: 	lock # Offset: 693
    000002b6: 	xaddl	%eax, 0xc(%rbp)
    000002ba: 	jmp	.Ltmp253 # Offset: 698
    000002bc: 	nopl	(%rax) # Size: 4
.Ltmp241:
    000002c0: 	movups	%xmm2, (%rbp)
    000002c4: 	jmp	.Ltmp235 # Offset: 708
.Ltmp227:
    000002c9: 	retq # Offset: 713
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1(*2)"

Binary Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1
                _ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/smart_pointers.cpp/1
  Number      : 62
  State       : disassembled
  Address     : 0x4d90
  Size        : 0x2ca
  MaxSize     : 0x2d0
  Offset      : 0x4d90
  Section     : .text
  Orc Section : .local.text._ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	cmpq	%rsi, %rdi
    00000003: 	je	.Ltmp254 # Offset: 3
    00000009: 	pushq	%r15
    0000000b: 	leaq	0x10(%rdi), %r15
    0000000f: 	pushq	%r14
    00000011: 	pushq	%r13
    00000013: 	movq	%rsi, %r13
    00000016: 	pushq	%r12
    00000018: 	movq	%rdi, %r12
    0000001b: 	pushq	%rbp
    0000001c: 	pushq	%rbx
    0000001d: 	subq	$0x18, %rsp
    00000021: 	cmpq	%r15, %rsi
    00000024: 	je	.Ltmp255 # Offset: 36
    0000002a: 	pxor	%xmm1, %xmm1
    0000002e: 	nop # Size: 2
.Ltmp265:
    00000030: 	movq	(%r15), %r14
    00000033: 	movq	(%r12), %rax
    00000037: 	movq	%r15, %rbp
    0000003a: 	addq	$0x10, %r15
    0000003e: 	movdqu	-0x10(%r15), %xmm2
    00000044: 	movq	(%r14), %rdx
    00000047: 	cmpq	(%rax), %rdx
    0000004a: 	movaps	%xmm2, (%rsp)
    0000004e: 	movups	%xmm1, -0x10(%r15)
    00000053: 	jge	.Ltmp256 # Offset: 83
    00000059: 	movq	%rbp, %rax
    0000005c: 	subq	%r12, %rax
    0000005f: 	movq	%rax, %rbx
    00000062: 	sarq	$0x4, %rbx
    00000066: 	testq	%rax, %rax
    00000069: 	jg	.Ltmp257 # Offset: 105
    0000006b: 	jmp	.Ltmp258 # Offset: 107
.Ltmp259:
    00000070: 	subq	$0x1, %rbx
    00000074: 	je	.Ltmp258 # Offset: 116
.Ltmp257:
    00000076: 	movdqu	-0x10(%rbp), %xmm0
    0000007b: 	movq	0x8(%rbp), %r14
    0000007f: 	subq	$0x10, %rbp
    00000083: 	movups	%xmm1, (%rbp)
    00000087: 	movups	%xmm0, 0x10(%rbp)
    0000008b: 	testq	%r14, %r14
    0000008e: 	je	.Ltmp259 # Offset: 142
    00000090: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000097: 	je	.Ltmp260 # Offset: 151
    0000009d: 	movl	0x8(%r14), %eax
    000000a1: 	leal	-0x1(%rax), %edx
    000000a4: 	movl	%edx, 0x8(%r14)
.Ltmp266:
    000000a8: 	cmpl	$0x1, %eax
    000000ab: 	jne	.Ltmp259 # Offset: 171
    000000ad: 	movq	(%r14), %rax
    000000b0: 	movq	%r14, %rdi
    000000b3: 	callq	*0x10(%rax) # Offset: 179
    000000b6: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000bd: 	pxor	%xmm1, %xmm1
    000000c1: 	je	.Ltmp261 # Offset: 193
    000000c7: 	movl	0xc(%r14), %eax
    000000cb: 	leal	-0x1(%rax), %edx
    000000ce: 	movl	%edx, 0xc(%r14)
.Ltmp279:
    000000d2: 	cmpl	$0x1, %eax
    000000d5: 	jne	.Ltmp259 # Offset: 213
    000000d7: 	movq	(%r14), %rax
    000000da: 	movq	%r14, %rdi
    000000dd: 	callq	*0x18(%rax) # Offset: 221
    000000e0: 	pxor	%xmm1, %xmm1
    000000e4: 	subq	$0x1, %rbx
    000000e8: 	jne	.Ltmp257 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp258:
    000000f0: 	movq	0x8(%r12), %rbp
    000000f5: 	movdqa	(%rsp), %xmm3
    000000fa: 	movups	%xmm3, (%r12)
    000000ff: 	testq	%rbp, %rbp
    00000102: 	je	.Ltmp262 # Offset: 258
    00000104: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000010b: 	je	.Ltmp263 # Offset: 267
.Ltmp275:
    00000111: 	movl	0x8(%rbp), %eax
    00000114: 	leal	-0x1(%rax), %edx
    00000117: 	movl	%edx, 0x8(%rbp)
    0000011a: 	cmpl	$0x1, %eax
    0000011d: 	je	.Ltmp264 # Offset: 285
.Ltmp262:
    00000123: 	cmpq	%r15, %r13
    00000126: 	jne	.Ltmp265 # Offset: 294
.Ltmp255:
    0000012c: 	addq	$0x18, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	popq	%r15
    0000013a: 	retq # Offset: 314
    0000013b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp260:
    00000140: 	movl	$0xffffffff, %eax
    00000145: 	lock # Offset: 325
    00000146: 	xaddl	%eax, 0x8(%r14)
    0000014b: 	jmp	.Ltmp266 # Offset: 331
.Ltmp256:
    00000150: 	movq	-0x20(%r15), %rax
    00000154: 	leaq	-0x20(%r15), %rbx
    00000158: 	cmpq	(%rax), %rdx
    0000015b: 	jl	.Ltmp267 # Offset: 347
    0000015d: 	jmp	.Ltmp268 # Offset: 349
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp272:
    00000168: 	movq	(%r14), %rdx
.Ltmp270:
    0000016b: 	movq	-0x10(%rbx), %rax
    0000016f: 	leaq	-0x10(%rbx), %rcx
    00000173: 	cmpq	%rdx, (%rax)
    00000176: 	jle	.Ltmp269 # Offset: 374
.Ltmp274:
    0000017c: 	movq	%rcx, %rbx
.Ltmp267:
    0000017f: 	movq	0x18(%rbx), %rbp
    00000183: 	movq	%rax, %xmm0
    00000188: 	movhps	0x8(%rbx), %xmm0
    0000018c: 	movups	%xmm1, (%rbx)
    0000018f: 	movups	%xmm0, 0x10(%rbx)
    00000193: 	testq	%rbp, %rbp
    00000196: 	je	.Ltmp270 # Offset: 406
    00000198: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000019f: 	je	.Ltmp271 # Offset: 415
    000001a5: 	movl	0x8(%rbp), %eax
    000001a8: 	leal	-0x1(%rax), %edx
    000001ab: 	movl	%edx, 0x8(%rbp)
.Ltmp277:
    000001ae: 	cmpl	$0x1, %eax
    000001b1: 	jne	.Ltmp272 # Offset: 433
    000001b3: 	movq	(%rbp), %rax
    000001b7: 	movq	%rbp, %rdi
    000001ba: 	callq	*0x10(%rax) # Offset: 442
    000001bd: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001c4: 	pxor	%xmm1, %xmm1
    000001c8: 	je	.Ltmp273 # Offset: 456
    000001ce: 	movl	0xc(%rbp), %eax
    000001d1: 	leal	-0x1(%rax), %edx
    000001d4: 	movl	%edx, 0xc(%rbp)
.Ltmp278:
    000001d7: 	cmpl	$0x1, %eax
    000001da: 	jne	.Ltmp272 # Offset: 474
    000001dc: 	movq	(%rbp), %rax
    000001e0: 	movq	%rbp, %rdi
    000001e3: 	callq	*0x18(%rax) # Offset: 483
    000001e6: 	movq	-0x10(%rbx), %rax
    000001ea: 	movq	(%r14), %rdx
    000001ed: 	pxor	%xmm1, %xmm1
    000001f1: 	leaq	-0x10(%rbx), %rcx
    000001f5: 	cmpq	%rdx, (%rax)
    000001f8: 	jg	.Ltmp274 # Offset: 504
    000001fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp269:
    00000200: 	movq	0x8(%rbx), %rbp
    00000204: 	movdqa	(%rsp), %xmm4
    00000209: 	movups	%xmm4, (%rbx)
    0000020c: 	testq	%rbp, %rbp
    0000020f: 	je	.Ltmp262 # Offset: 527
    00000215: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000021c: 	jne	.Ltmp275 # Offset: 540
.Ltmp263:
    00000222: 	movl	$0xffffffff, %eax
    00000227: 	lock # Offset: 551
    00000228: 	xaddl	%eax, 0x8(%rbp)
    0000022c: 	cmpl	$0x1, %eax
    0000022f: 	jne	.Ltmp262 # Offset: 559
.Ltmp264:
    00000235: 	movq	(%rbp), %rax
    00000239: 	movq	%rbp, %rdi
    0000023c: 	callq	*0x10(%rax) # Offset: 572
    0000023f: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000246: 	pxor	%xmm1, %xmm1
    0000024a: 	je	.Ltmp276 # Offset: 586
    0000024c: 	movl	0xc(%rbp), %eax
    0000024f: 	leal	-0x1(%rax), %edx
    00000252: 	movl	%edx, 0xc(%rbp)
.Ltmp280:
    00000255: 	cmpl	$0x1, %eax
    00000258: 	jne	.Ltmp262 # Offset: 600
    0000025e: 	movq	(%rbp), %rax
    00000262: 	movq	%rbp, %rdi
    00000265: 	callq	*0x18(%rax) # Offset: 613
    00000268: 	pxor	%xmm1, %xmm1
    0000026c: 	jmp	.Ltmp262 # Offset: 620
    00000271: 	nopl	(%rax) # Size: 7
.Ltmp271:
    00000278: 	movl	$0xffffffff, %eax
    0000027d: 	lock # Offset: 637
    0000027e: 	xaddl	%eax, 0x8(%rbp)
    00000282: 	jmp	.Ltmp277 # Offset: 642
    00000287: 	nopw	(%rax,%rax) # Size: 9
.Ltmp273:
    00000290: 	movl	$0xffffffff, %eax
    00000295: 	lock # Offset: 661
    00000296: 	xaddl	%eax, 0xc(%rbp)
    0000029a: 	jmp	.Ltmp278 # Offset: 666
    0000029f: 	nop # Size: 1
.Ltmp261:
    000002a0: 	movl	$0xffffffff, %eax
    000002a5: 	lock # Offset: 677
    000002a6: 	xaddl	%eax, 0xc(%r14)
    000002ab: 	jmp	.Ltmp279 # Offset: 683
.Ltmp276:
    000002b0: 	movl	$0xffffffff, %eax
    000002b5: 	lock # Offset: 693
    000002b6: 	xaddl	%eax, 0xc(%rbp)
    000002ba: 	jmp	.Ltmp280 # Offset: 698
    000002bc: 	nopl	(%rax) # Size: 4
.Ltmp268:
    000002c0: 	movups	%xmm2, (%rbp)
    000002c4: 	jmp	.Ltmp262 # Offset: 708
.Ltmp254:
    000002c9: 	retq # Offset: 713
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x5060
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x5060
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp281 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp282 # Offset: 63
.Ltmp281:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp283 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp284 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp288:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp285 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp286 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp284:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp287 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp288 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp283:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp289:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp288 # Offset: 248
.Ltmp282:
    000000fd: 	leaq	DATAat0x17008(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp285:
    00000109: 	leaq	DATAat0x17123(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp286:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp287:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp289 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp290 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp290:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_Z13TestNullArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x51b0
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x51b0
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp293:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp291 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp292:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rax, %rdx
    00000076: 	jne	.Ltmp292 # Offset: 118
.Ltmp291:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp293 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp294 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp295 # Offset: 192
.Ltmp294:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp296 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp297 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp306:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp298 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp298:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp299 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp295 # Offset: 319
.Ltmp299:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp300 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp301 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp308:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp302 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp302:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp303 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp303:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp304 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp297:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp305 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp306 # Offset: 479
.Ltmp301:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp307 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp308 # Offset: 496
.Ltmp300:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp310:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp308 # Offset: 557
.Ltmp296:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp309:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp306 # Offset: 661
.Ltmp304:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp305:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp309 # Offset: 679
.Ltmp307:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp310 # Offset: 684
.Ltmp295:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp311 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp312 # Offset: 717
.Ltmp311:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp313 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp313:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp312:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp313 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp313 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x54c0
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x54c0
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movl	$0x14, %ebp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	movl	$0x7b, %edi
    0000001c: 	subq	$0x50, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x48(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	srand@PLT # Offset: 48
    00000035: 	callq	clock@PLT # Offset: 53
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	movq	0x8(%rbx), %rax
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp316:
    00000048: 	movq	(%rbx), %r13
    0000004b: 	cmpq	%rax, %r13
    0000004e: 	je	.Ltmp314 # Offset: 78
.Ltmp315:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, (%rdx)
    00000066: 	movq	0x8(%rbx), %rax
    0000006a: 	cmpq	%r13, %rax
    0000006d: 	jne	.Ltmp315 # Offset: 109
    0000006f: 	subq	$0x1, %rbp
    00000073: 	jne	.Ltmp316 # Offset: 115
    00000075: 	nopl	(%rax) # Size: 3
.Ltmp314:
    00000078: 	callq	clock@PLT # Offset: 120
    0000007d: 	movq	(%r12), %r13
    00000081: 	pxor	%xmm0, %xmm0
    00000085: 	movq	0x8(%r12), %r12
    0000008a: 	movq	%rax, end_time(%rip)
    00000091: 	subq	start_time(%rip), %rax
    00000098: 	leaq	0x30(%rsp), %rbp
    0000009d: 	cvtsi2sd	%rax, %xmm0
    000000a2: 	movq	%r13, %rax
    000000a5: 	movq	%rbp, 0x20(%rsp)
    000000aa: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b2: 	addq	%r12, %rax
    000000b5: 	je	.Ltmp317 # Offset: 181
    000000b7: 	testq	%r13, %r13
    000000ba: 	je	.Ltmp318 # Offset: 186
.Ltmp317:
    000000c0: 	movq	%r12, 0x18(%rsp)
    000000c5: 	cmpq	$0xf, %r12
    000000c9: 	ja	.Ltmp319 # Offset: 201
    000000cb: 	cmpq	$0x1, %r12
    000000cf: 	jne	.Ltmp320 # Offset: 207
    000000d1: 	movzbl	(%r13), %eax
    000000d6: 	leaq	0x20(%rsp), %r14
    000000db: 	movb	%al, 0x30(%rsp)
    000000df: 	movq	%rbp, %rax
.Ltmp324:
    000000e2: 	movq	%r12, 0x28(%rsp)
    000000e7: 	movq	%r14, %rdx
    000000ea: 	movl	$0x14, %edi
    000000ef: 	movb	$0x0, (%rax,%r12)
    000000f4: 	movq	0x8(%rbx), %rsi
    000000f8: 	subq	(%rbx), %rsi
    000000fb: 	sarq	$0x3, %rsi
    000000ff: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 255
    00000104: 	movq	0x20(%rsp), %rdi
    00000109: 	cmpq	%rbp, %rdi
    0000010c: 	je	.Ltmp321 # Offset: 268
    0000010e: 	movq	0x30(%rsp), %rax
    00000113: 	leaq	0x1(%rax), %rsi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp321:
    0000011c: 	movq	0x48(%rsp), %rax
    00000121: 	subq	%fs:0x28, %rax
    0000012a: 	jne	.Ltmp322 # Offset: 298
    0000012c: 	addq	$0x50, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	retq # Offset: 312
.Ltmp320:
    00000139: 	testq	%r12, %r12
    0000013c: 	jne	.Ltmp323 # Offset: 316
    0000013e: 	movq	%rbp, %rax
    00000141: 	leaq	0x20(%rsp), %r14
    00000146: 	jmp	.Ltmp324 # Offset: 326
.Ltmp319:
    00000148: 	leaq	0x20(%rsp), %r14
    0000014d: 	leaq	0x18(%rsp), %rsi
    00000152: 	xorl	%edx, %edx
    00000154: 	movsd	%xmm0, 0x8(%rsp)
    0000015a: 	movq	%r14, %rdi
    0000015d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 349
    00000162: 	movsd	0x8(%rsp), %xmm0
    00000168: 	movq	%rax, 0x20(%rsp)
    0000016d: 	movq	%rax, %rdi
    00000170: 	movq	0x18(%rsp), %rax
    00000175: 	movq	%rax, 0x30(%rsp)
.Ltmp325:
    0000017a: 	movq	%r12, %rdx
    0000017d: 	movq	%r13, %rsi
    00000180: 	movsd	%xmm0, 0x8(%rsp)
    00000186: 	callq	memcpy@PLT # Offset: 390
    0000018b: 	movq	0x18(%rsp), %r12
    00000190: 	movq	0x20(%rsp), %rax
    00000195: 	movsd	0x8(%rsp), %xmm0
    0000019b: 	jmp	.Ltmp324 # Offset: 411
.Ltmp322:
    000001a0: 	callq	__stack_chk_fail@PLT # Offset: 416
.Ltmp323:
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	leaq	0x20(%rsp), %r14
    000001ad: 	jmp	.Ltmp325 # Offset: 429
.Ltmp318:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %r12
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbp, %rdi
    000001ca: 	je	.Ltmp326 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp326:
    000001da: 	movq	%r12, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayI17VariableContainerIlLi1EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x56b0
  Size        : 0x1c2
  MaxSize     : 0x1d0
  Offset      : 0x56b0
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayI17VariableContainerIlLi1EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	movq	%rdi, %r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %rbp
    0000001c: 	subq	(%rdi), %rbp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x3, %rbp
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testq	%rbp, %rbp
    00000042: 	je	.Ltmp327 # Offset: 66
    00000044: 	nopl	(%rax) # Size: 4
.Ltmp329:
    00000048: 	movq	(%r12), %rax
    0000004c: 	movq	(%rax,%rbx,8), %rdi
    00000050: 	testq	%rdi, %rdi
    00000053: 	je	.Ltmp328 # Offset: 83
    00000055: 	movl	$0x8, %esi
    0000005a: 	callq	_ZdlPvm@PLT # Offset: 90
.Ltmp328:
    0000005f: 	addq	$0x1, %rbx
    00000063: 	cmpq	%rbp, %rbx
    00000066: 	jne	.Ltmp329 # Offset: 102
.Ltmp327:
    00000068: 	callq	clock@PLT # Offset: 104
    0000006d: 	movq	(%r13), %r14
    00000071: 	movq	0x8(%r13), %r12
    00000075: 	pxor	%xmm0, %xmm0
    00000079: 	movq	%rax, end_time(%rip)
    00000080: 	subq	start_time(%rip), %rax
    00000087: 	leaq	0x30(%rsp), %rbx
    0000008c: 	cvtsi2sd	%rax, %xmm0
    00000091: 	movq	%r14, %rax
    00000094: 	movq	%rbx, 0x20(%rsp)
    00000099: 	divsd	DATAat0x17370(%rip), %xmm0
    000000a1: 	addq	%r12, %rax
    000000a4: 	je	.Ltmp330 # Offset: 164
    000000a6: 	testq	%r14, %r14
    000000a9: 	je	.Ltmp331 # Offset: 169
.Ltmp330:
    000000af: 	movq	%r12, 0x18(%rsp)
    000000b4: 	cmpq	$0xf, %r12
    000000b8: 	ja	.Ltmp332 # Offset: 184
    000000ba: 	cmpq	$0x1, %r12
    000000be: 	jne	.Ltmp333 # Offset: 190
    000000c0: 	movzbl	(%r14), %eax
    000000c4: 	movb	%al, 0x30(%rsp)
    000000c8: 	movq	%rbx, %rax
.Ltmp337:
    000000cb: 	movq	%r12, 0x28(%rsp)
    000000d0: 	movq	%rbp, %rdi
    000000d3: 	movb	$0x0, (%rax,%r12)
    000000d8: 	movq	0x28(%rsp), %rdx
    000000dd: 	movq	0x20(%rsp), %rsi
    000000e2: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 226
    000000e7: 	movq	0x20(%rsp), %rdi
    000000ec: 	cmpq	%rbx, %rdi
    000000ef: 	je	.Ltmp334 # Offset: 239
    000000f1: 	movq	0x30(%rsp), %rax
    000000f6: 	leaq	0x1(%rax), %rsi
    000000fa: 	callq	_ZdlPvm@PLT # Offset: 250
.Ltmp334:
    000000ff: 	movq	0x48(%rsp), %rax
    00000104: 	subq	%fs:0x28, %rax
    0000010d: 	jne	.Ltmp335 # Offset: 269
    0000010f: 	addq	$0x50, %rsp
    00000113: 	popq	%rbx
    00000114: 	popq	%rbp
    00000115: 	popq	%r12
    00000117: 	popq	%r13
    00000119: 	popq	%r14
    0000011b: 	retq # Offset: 283
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp333:
    00000120: 	testq	%r12, %r12
    00000123: 	jne	.Ltmp336 # Offset: 291
    00000125: 	movq	%rbx, %rax
    00000128: 	jmp	.Ltmp337 # Offset: 296
    0000012a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp332:
    00000130: 	leaq	0x20(%rsp), %rdi
    00000135: 	leaq	0x18(%rsp), %rsi
    0000013a: 	xorl	%edx, %edx
    0000013c: 	movsd	%xmm0, 0x8(%rsp)
    00000142: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 322
    00000147: 	movsd	0x8(%rsp), %xmm0
    0000014d: 	movq	%rax, 0x20(%rsp)
    00000152: 	movq	%rax, %rdi
    00000155: 	movq	0x18(%rsp), %rax
    0000015a: 	movq	%rax, 0x30(%rsp)
.Ltmp338:
    0000015f: 	movq	%r12, %rdx
    00000162: 	movq	%r14, %rsi
    00000165: 	movsd	%xmm0, 0x8(%rsp)
    0000016b: 	callq	memcpy@PLT # Offset: 363
    00000170: 	movq	0x18(%rsp), %r12
    00000175: 	movq	0x20(%rsp), %rax
    0000017a: 	movsd	0x8(%rsp), %xmm0
    00000180: 	jmp	.Ltmp337 # Offset: 384
.Ltmp335:
    00000185: 	callq	__stack_chk_fail@PLT # Offset: 389
.Ltmp336:
    0000018a: 	movq	%rbx, %rdi
    0000018d: 	jmp	.Ltmp338 # Offset: 397
.Ltmp331:
    0000018f: 	leaq	DATAat0x17008(%rip), %rdi
    00000196: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 406
    0000019b: 	endbr64
    0000019f: 	movq	%rax, %rbp
    000001a2: 	movq	0x20(%rsp), %rdi
    000001a7: 	cmpq	%rbx, %rdi
    000001aa: 	je	.Ltmp339 # Offset: 426
    000001ac: 	movq	0x30(%rsp), %rax
    000001b1: 	leaq	0x1(%rax), %rsi
    000001b5: 	callq	_ZdlPvm@PLT # Offset: 437
.Ltmp339:
    000001ba: 	movq	%rbp, %rdi
    000001bd: 	callq	_Unwind_Resume@PLT # Offset: 445
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayI17VariableContainerIlLi1EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi1EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x5880
  Size        : 0x22f
  MaxSize     : 0x230
  Offset      : 0x5880
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi1EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp340 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
    0000004f: 	nop # Size: 1
.Ltmp347:
    00000050: 	callq	clock@PLT # Offset: 80
    00000055: 	movq	(%r14), %rsi
    00000058: 	movq	0x8(%r14), %rdx
    0000005c: 	pxor	%xmm0, %xmm0
    00000060: 	movq	%rax, end_time(%rip)
    00000067: 	leaq	0x20(%rsp), %rbp
    0000006c: 	subq	start_time(%rip), %rax
    00000073: 	leaq	0x10(%rsp), %rdi
    00000078: 	addq	%rsi, %rdx
    0000007b: 	cvtsi2sd	%rax, %xmm0
    00000080: 	movq	%rbp, 0x10(%rsp)
    00000085: 	divsd	DATAat0x17370(%rip), %xmm0
    0000008d: 	movq	%xmm0, %rbx
    00000092: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 146
    00000097: 	movq	0x18(%rsp), %rdx
    0000009c: 	movq	0x10(%rsp), %rsi
    000000a1: 	movq	%r15, %rdi
    000000a4: 	movq	%rbx, %xmm0
    000000a9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 169
    000000ae: 	movq	0x10(%rsp), %rdi
    000000b3: 	cmpq	%rbp, %rdi
    000000b6: 	je	.Ltmp341 # Offset: 182
    000000b8: 	movq	0x20(%rsp), %rax
    000000bd: 	leaq	0x1(%rax), %rsi
    000000c1: 	callq	_ZdlPvm@PLT # Offset: 193
.Ltmp341:
    000000c6: 	movq	0x38(%rsp), %rax
    000000cb: 	subq	%fs:0x28, %rax
    000000d4: 	jne	.Ltmp342 # Offset: 212
    000000da: 	addq	$0x48, %rsp
    000000de: 	movq	%r12, %rax
    000000e1: 	popq	%rbx
    000000e2: 	popq	%rbp
    000000e3: 	popq	%r12
    000000e5: 	popq	%r13
    000000e7: 	popq	%r14
    000000e9: 	popq	%r15
    000000eb: 	retq # Offset: 235
    000000ec: 	nopl	(%rax) # Size: 4
.Ltmp340:
    000000f0: 	movq	%r15, %rax
    000000f3: 	shrq	$0x3c, %rax
    000000f7: 	jne	.Ltmp343 # Offset: 247
    000000fd: 	leaq	(,%r15,8), %r13
    00000105: 	movslq	%edx, %rbp
    00000108: 	movq	%r13, %rdi
    0000010b: 	callq	_Znwm@PLT # Offset: 267
    00000110: 	movq	%rax, %rdi
    00000113: 	movq	%r13, %rdx
    00000116: 	xorl	%esi, %esi
    00000118: 	movq	%r15, %rbx
    0000011b: 	callq	memset@PLT # Offset: 283
    00000120: 	movq	0x8(%r12), %rdi
    00000125: 	movq	(%r12), %r8
    00000129: 	movq	%rax, %rcx
    0000012c: 	cmpq	%r8, %rdi
    0000012f: 	je	.Ltmp344 # Offset: 303
    00000131: 	subq	%r8, %rdi
    00000134: 	movq	%r8, %rdx
    00000137: 	addq	%rax, %rdi
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp345:
    00000140: 	movq	(%rdx), %rsi
    00000143: 	addq	$0x8, %rax
    00000147: 	addq	$0x8, %rdx
    0000014b: 	movq	%rsi, -0x8(%rax)
    0000014f: 	cmpq	%rdi, %rax
    00000152: 	jne	.Ltmp345 # Offset: 338
.Ltmp344:
    00000154: 	testq	%r8, %r8
    00000157: 	je	.Ltmp346 # Offset: 343
    00000159: 	movq	0x10(%r12), %rsi
    0000015e: 	movq	%r8, %rdi
    00000161: 	movq	%rcx, 0x8(%rsp)
    00000166: 	subq	%r8, %rsi
    00000169: 	callq	_ZdlPvm@PLT # Offset: 361
    0000016e: 	movq	0x8(%rsp), %rcx
.Ltmp346:
    00000173: 	addq	%rcx, %r13
    00000176: 	movq	%rcx, %xmm0
    0000017b: 	movq	%r13, %xmm1
    00000180: 	movq	%r13, 0x10(%r12)
    00000185: 	punpcklqdq	%xmm1, %xmm0
    00000189: 	movups	%xmm0, (%r12)
    0000018e: 	callq	clock@PLT # Offset: 398
    00000193: 	movq	%rax, start_time(%rip)
    0000019a: 	testl	%ebx, %ebx
    0000019c: 	jle	.Ltmp347 # Offset: 412
    000001a2: 	leaq	(,%r15,8), %r13
    000001aa: 	xorl	%ebx, %ebx
    000001ac: 	nopl	(%rax) # Size: 4
.Ltmp348:
    000001b0: 	movl	$0x8, %edi
    000001b5: 	callq	_Znwm@PLT # Offset: 437
    000001ba: 	movq	(%r12), %rdx
    000001be: 	movq	%rbp, (%rax)
    000001c1: 	movq	%rax, (%rdx,%rbx)
    000001c5: 	addq	$0x8, %rbx
    000001c9: 	cmpq	%rbx, %r13
    000001cc: 	jne	.Ltmp348 # Offset: 460
    000001ce: 	jmp	.Ltmp347 # Offset: 462
.Ltmp343:
    000001d3: 	leaq	DATAat0x17138(%rip), %rdi
    000001da: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 474
.Ltmp342:
    000001df: 	callq	__stack_chk_fail@PLT # Offset: 479
    000001e4: 	endbr64
    000001e8: 	movq	%rax, %rbx
    000001eb: 	jmp	.Ltmp349 # Offset: 491
    000001ed: 	endbr64
    000001f1: 	movq	%rax, %rbp
    000001f4: 	jmp	.Ltmp350 # Offset: 500
.Ltmp349:
    000001f6: 	movq	0x10(%rsp), %rdi
    000001fb: 	cmpq	%rbp, %rdi
    000001fe: 	je	.Ltmp351 # Offset: 510
    00000200: 	movq	0x20(%rsp), %rax
    00000205: 	leaq	0x1(%rax), %rsi
    00000209: 	callq	_ZdlPvm@PLT # Offset: 521
.Ltmp351:
    0000020e: 	movq	%rbx, %rbp
.Ltmp350:
    00000211: 	movq	(%r12), %rdi
    00000215: 	movq	0x10(%r12), %rsi
    0000021a: 	subq	%rdi, %rsi
    0000021d: 	testq	%rdi, %rdi
    00000220: 	je	.Ltmp352 # Offset: 544
    00000222: 	callq	_ZdlPvm@PLT # Offset: 546
.Ltmp352:
    00000227: 	movq	%rbp, %rdi
    0000022a: 	callq	_Unwind_Resume@PLT # Offset: 554
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi1EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x5ab0
  Size        : 0x22a
  MaxSize     : 0x230
  Offset      : 0x5ab0
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rsi, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rdx, %rbx
    0000001b: 	subq	$0x38, %rsp
    0000001f: 	movq	0x8(%rsi), %r14
    00000023: 	subq	(%rsi), %r14
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x28(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%r14, %rbp
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x3, %rbp
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%r14, %r14
    0000004b: 	jne	.Ltmp353 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%rbp, %rbp
    00000060: 	je	.Ltmp354 # Offset: 96
.Ltmp363:
    00000062: 	movq	(%r12), %rsi
    00000066: 	movq	(%r13), %rcx
    0000006a: 	xorl	%eax, %eax
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp355:
    00000070: 	movq	(%rcx,%rax,8), %rdx
    00000074: 	movq	%rdx, (%rsi,%rax,8)
    00000078: 	addq	$0x1, %rax
    0000007c: 	cmpq	%rbp, %rax
    0000007f: 	jb	.Ltmp355 # Offset: 127
.Ltmp354:
    00000081: 	callq	clock@PLT # Offset: 129
    00000086: 	movq	(%rbx), %rsi
    00000089: 	movq	0x8(%rbx), %rdx
    0000008d: 	pxor	%xmm0, %xmm0
    00000091: 	movq	%rax, end_time(%rip)
    00000098: 	leaq	0x10(%rsp), %r14
    0000009d: 	subq	start_time(%rip), %rax
    000000a4: 	movq	%rsp, %rdi
    000000a7: 	addq	%rsi, %rdx
    000000aa: 	cvtsi2sd	%rax, %xmm0
    000000af: 	movq	%r14, (%rsp)
    000000b3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000bb: 	movq	%xmm0, %r13
    000000c0: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 192
    000000c5: 	movq	0x8(%rsp), %rdx
    000000ca: 	movq	(%rsp), %rsi
    000000ce: 	movq	%rbp, %rdi
    000000d1: 	movq	%r13, %xmm0
    000000d6: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 214
    000000db: 	movq	(%rsp), %rdi
    000000df: 	cmpq	%r14, %rdi
    000000e2: 	je	.Ltmp356 # Offset: 226
    000000e4: 	movq	0x10(%rsp), %rax
    000000e9: 	leaq	0x1(%rax), %rsi
    000000ed: 	callq	_ZdlPvm@PLT # Offset: 237
.Ltmp356:
    000000f2: 	movq	0x28(%rsp), %rax
    000000f7: 	subq	%fs:0x28, %rax
    00000100: 	jne	.Ltmp357 # Offset: 256
    00000106: 	addq	$0x38, %rsp
    0000010a: 	movq	%r12, %rax
    0000010d: 	popq	%rbx
    0000010e: 	popq	%rbp
    0000010f: 	popq	%r12
    00000111: 	popq	%r13
    00000113: 	popq	%r14
    00000115: 	popq	%r15
    00000117: 	retq # Offset: 279
    00000118: 	nopl	(%rax,%rax) # Size: 8
.Ltmp353:
    00000120: 	testq	%rbp, %rbp
    00000123: 	jne	.Ltmp358 # Offset: 291
    00000125: 	movq	$0x0, 0x8(%rdi)
    0000012d: 	callq	clock@PLT # Offset: 301
    00000132: 	movq	%rax, start_time(%rip)
    00000139: 	jmp	.Ltmp354 # Offset: 313
.Ltmp358:
    0000013e: 	movabsq	$0x7ffffffffffffff8, %rax
    00000148: 	cmpq	%rax, %r14
    0000014b: 	ja	.Ltmp359 # Offset: 331
    00000151: 	movq	%r14, %rdi
    00000154: 	callq	_Znwm@PLT # Offset: 340
    00000159: 	xorl	%esi, %esi
    0000015b: 	movq	%rax, %rdi
    0000015e: 	movq	%r14, %rdx
    00000161: 	movq	%rax, %r15
    00000164: 	callq	memset@PLT # Offset: 356
    00000169: 	movq	0x8(%r12), %rsi
    0000016e: 	movq	(%r12), %rdi
    00000172: 	cmpq	%rdi, %rsi
    00000175: 	je	.Ltmp360 # Offset: 373
    00000177: 	subq	%rdi, %rsi
    0000017a: 	movq	%rdi, %rdx
    0000017d: 	addq	%r15, %rsi
.Ltmp361:
    00000180: 	movq	(%rdx), %rcx
    00000183: 	addq	$0x8, %rax
    00000187: 	addq	$0x8, %rdx
    0000018b: 	movq	%rcx, -0x8(%rax)
    0000018f: 	cmpq	%rsi, %rax
    00000192: 	jne	.Ltmp361 # Offset: 402
.Ltmp360:
    00000194: 	testq	%rdi, %rdi
    00000197: 	je	.Ltmp362 # Offset: 407
    00000199: 	movq	0x10(%r12), %rsi
    0000019e: 	subq	%rdi, %rsi
    000001a1: 	callq	_ZdlPvm@PLT # Offset: 417
.Ltmp362:
    000001a6: 	addq	%r15, %r14
    000001a9: 	movq	%r15, %xmm0
    000001ae: 	movq	%r14, %xmm1
    000001b3: 	movq	%r14, 0x10(%r12)
    000001b8: 	punpcklqdq	%xmm1, %xmm0
    000001bc: 	movups	%xmm0, (%r12)
    000001c1: 	callq	clock@PLT # Offset: 449
    000001c6: 	movq	%rax, start_time(%rip)
    000001cd: 	jmp	.Ltmp363 # Offset: 461
.Ltmp359:
    000001d2: 	leaq	DATAat0x17138(%rip), %rdi
    000001d9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 473
.Ltmp357:
    000001de: 	callq	__stack_chk_fail@PLT # Offset: 478
    000001e3: 	endbr64
    000001e7: 	movq	%rax, %rbp
    000001ea: 	jmp	.Ltmp364 # Offset: 490
    000001ec: 	endbr64
    000001f0: 	movq	%rax, %rbp
    000001f3: 	jmp	.Ltmp365 # Offset: 499
.Ltmp364:
    000001f5: 	movq	(%rsp), %rdi
    000001f9: 	cmpq	%r14, %rdi
    000001fc: 	je	.Ltmp365 # Offset: 508
    000001fe: 	movq	0x10(%rsp), %rax
    00000203: 	leaq	0x1(%rax), %rsi
    00000207: 	callq	_ZdlPvm@PLT # Offset: 519
.Ltmp365:
    0000020c: 	movq	(%r12), %rdi
    00000210: 	movq	0x10(%r12), %rsi
    00000215: 	subq	%rdi, %rsi
    00000218: 	testq	%rdi, %rdi
    0000021b: 	je	.Ltmp366 # Offset: 539
    0000021d: 	callq	_ZdlPvm@PLT # Offset: 541
.Ltmp366:
    00000222: 	movq	%rbp, %rdi
    00000225: 	callq	_Unwind_Resume@PLT # Offset: 549
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x5ce0
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x5ce0
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp369:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp367 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp368:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp368 # Offset: 118
.Ltmp367:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp369 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp370 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp371 # Offset: 192
.Ltmp370:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp372 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp373 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp382:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp374 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp374:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp375 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp371 # Offset: 319
.Ltmp375:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp376 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp377 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp384:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp378 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp378:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp379 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp379:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp380 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp373:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp381 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp382 # Offset: 479
.Ltmp377:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp383 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp384 # Offset: 496
.Ltmp376:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp386:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp384 # Offset: 557
.Ltmp372:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp385:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp382 # Offset: 661
.Ltmp380:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp381:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp385 # Offset: 679
.Ltmp383:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp386 # Offset: 684
.Ltmp371:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp387 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp388 # Offset: 717
.Ltmp387:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp389 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp389:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp388:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp389 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp389 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x5ff0
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x5ff0
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movl	$0x14, %ebp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	movl	$0x7b, %edi
    0000001c: 	subq	$0x50, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x48(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	srand@PLT # Offset: 48
    00000035: 	callq	clock@PLT # Offset: 53
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	movq	0x8(%rbx), %rax
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp392:
    00000048: 	movq	(%rbx), %r13
    0000004b: 	cmpq	%rax, %r13
    0000004e: 	je	.Ltmp390 # Offset: 78
.Ltmp391:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, (%rdx)
    00000066: 	movq	0x8(%rbx), %rax
    0000006a: 	cmpq	%r13, %rax
    0000006d: 	jne	.Ltmp391 # Offset: 109
    0000006f: 	subq	$0x1, %rbp
    00000073: 	jne	.Ltmp392 # Offset: 115
    00000075: 	nopl	(%rax) # Size: 3
.Ltmp390:
    00000078: 	callq	clock@PLT # Offset: 120
    0000007d: 	movq	(%r12), %r13
    00000081: 	pxor	%xmm0, %xmm0
    00000085: 	movq	0x8(%r12), %r12
    0000008a: 	movq	%rax, end_time(%rip)
    00000091: 	subq	start_time(%rip), %rax
    00000098: 	leaq	0x30(%rsp), %rbp
    0000009d: 	cvtsi2sd	%rax, %xmm0
    000000a2: 	movq	%r13, %rax
    000000a5: 	movq	%rbp, 0x20(%rsp)
    000000aa: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b2: 	addq	%r12, %rax
    000000b5: 	je	.Ltmp393 # Offset: 181
    000000b7: 	testq	%r13, %r13
    000000ba: 	je	.Ltmp394 # Offset: 186
.Ltmp393:
    000000c0: 	movq	%r12, 0x18(%rsp)
    000000c5: 	cmpq	$0xf, %r12
    000000c9: 	ja	.Ltmp395 # Offset: 201
    000000cb: 	cmpq	$0x1, %r12
    000000cf: 	jne	.Ltmp396 # Offset: 207
    000000d1: 	movzbl	(%r13), %eax
    000000d6: 	leaq	0x20(%rsp), %r14
    000000db: 	movb	%al, 0x30(%rsp)
    000000df: 	movq	%rbp, %rax
.Ltmp400:
    000000e2: 	movq	%r12, 0x28(%rsp)
    000000e7: 	movq	%r14, %rdx
    000000ea: 	movl	$0x14, %edi
    000000ef: 	movb	$0x0, (%rax,%r12)
    000000f4: 	movq	0x8(%rbx), %rsi
    000000f8: 	subq	(%rbx), %rsi
    000000fb: 	sarq	$0x3, %rsi
    000000ff: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 255
    00000104: 	movq	0x20(%rsp), %rdi
    00000109: 	cmpq	%rbp, %rdi
    0000010c: 	je	.Ltmp397 # Offset: 268
    0000010e: 	movq	0x30(%rsp), %rax
    00000113: 	leaq	0x1(%rax), %rsi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp397:
    0000011c: 	movq	0x48(%rsp), %rax
    00000121: 	subq	%fs:0x28, %rax
    0000012a: 	jne	.Ltmp398 # Offset: 298
    0000012c: 	addq	$0x50, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	retq # Offset: 312
.Ltmp396:
    00000139: 	testq	%r12, %r12
    0000013c: 	jne	.Ltmp399 # Offset: 316
    0000013e: 	movq	%rbp, %rax
    00000141: 	leaq	0x20(%rsp), %r14
    00000146: 	jmp	.Ltmp400 # Offset: 326
.Ltmp395:
    00000148: 	leaq	0x20(%rsp), %r14
    0000014d: 	leaq	0x18(%rsp), %rsi
    00000152: 	xorl	%edx, %edx
    00000154: 	movsd	%xmm0, 0x8(%rsp)
    0000015a: 	movq	%r14, %rdi
    0000015d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 349
    00000162: 	movsd	0x8(%rsp), %xmm0
    00000168: 	movq	%rax, 0x20(%rsp)
    0000016d: 	movq	%rax, %rdi
    00000170: 	movq	0x18(%rsp), %rax
    00000175: 	movq	%rax, 0x30(%rsp)
.Ltmp401:
    0000017a: 	movq	%r12, %rdx
    0000017d: 	movq	%r13, %rsi
    00000180: 	movsd	%xmm0, 0x8(%rsp)
    00000186: 	callq	memcpy@PLT # Offset: 390
    0000018b: 	movq	0x18(%rsp), %r12
    00000190: 	movq	0x20(%rsp), %rax
    00000195: 	movsd	0x8(%rsp), %xmm0
    0000019b: 	jmp	.Ltmp400 # Offset: 411
.Ltmp398:
    000001a0: 	callq	__stack_chk_fail@PLT # Offset: 416
.Ltmp399:
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	leaq	0x20(%rsp), %r14
    000001ad: 	jmp	.Ltmp401 # Offset: 429
.Ltmp394:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %r12
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbp, %rdi
    000001ca: 	je	.Ltmp402 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp402:
    000001da: 	movq	%r12, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x61e0
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x61e0
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rsi, %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %r12
    0000001c: 	subq	(%rdi), %r12
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x3, %r12
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testq	%r12, %r12
    00000042: 	jne	.Ltmp403 # Offset: 66
    00000044: 	jmp	.Ltmp404 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp405:
    00000050: 	movl	$0x8, %esi
    00000055: 	addq	$0x1, %rbx
    00000059: 	callq	_ZdlPvm@PLT # Offset: 89
    0000005e: 	movq	$0x0, (%rbp)
    00000066: 	cmpq	%rbx, %r12
    00000069: 	je	.Ltmp404 # Offset: 105
.Ltmp403:
    0000006b: 	movq	(%r13), %rax
.Ltmp406:
    0000006f: 	leaq	(%rax,%rbx,8), %rbp
    00000073: 	movq	(%rbp), %rdi
    00000077: 	testq	%rdi, %rdi
    0000007a: 	jne	.Ltmp405 # Offset: 122
    0000007c: 	addq	$0x1, %rbx
    00000080: 	cmpq	%r12, %rbx
    00000083: 	jne	.Ltmp406 # Offset: 131
.Ltmp404:
    00000085: 	callq	clock@PLT # Offset: 133
    0000008a: 	movq	(%r14), %rbp
    0000008d: 	movq	0x8(%r14), %r13
    00000091: 	pxor	%xmm0, %xmm0
    00000095: 	movq	%rax, end_time(%rip)
    0000009c: 	subq	start_time(%rip), %rax
    000000a3: 	leaq	0x30(%rsp), %rbx
    000000a8: 	cvtsi2sd	%rax, %xmm0
    000000ad: 	movq	%rbp, %rax
    000000b0: 	movq	%rbx, 0x20(%rsp)
    000000b5: 	divsd	DATAat0x17370(%rip), %xmm0
    000000bd: 	addq	%r13, %rax
    000000c0: 	je	.Ltmp407 # Offset: 192
    000000c2: 	testq	%rbp, %rbp
    000000c5: 	je	.Ltmp408 # Offset: 197
.Ltmp407:
    000000cb: 	movq	%r13, 0x18(%rsp)
    000000d0: 	cmpq	$0xf, %r13
    000000d4: 	ja	.Ltmp409 # Offset: 212
    000000d6: 	cmpq	$0x1, %r13
    000000da: 	jne	.Ltmp410 # Offset: 218
    000000dc: 	movzbl	(%rbp), %eax
    000000e0: 	movb	%al, 0x30(%rsp)
    000000e4: 	movq	%rbx, %rax
.Ltmp414:
    000000e7: 	movq	%r13, 0x28(%rsp)
    000000ec: 	movq	%r12, %rdi
    000000ef: 	movb	$0x0, (%rax,%r13)
    000000f4: 	movq	0x28(%rsp), %rdx
    000000f9: 	movq	0x20(%rsp), %rsi
    000000fe: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 254
    00000103: 	movq	0x20(%rsp), %rdi
    00000108: 	cmpq	%rbx, %rdi
    0000010b: 	je	.Ltmp411 # Offset: 267
    0000010d: 	movq	0x30(%rsp), %rax
    00000112: 	leaq	0x1(%rax), %rsi
    00000116: 	callq	_ZdlPvm@PLT # Offset: 278
.Ltmp411:
    0000011b: 	movq	0x48(%rsp), %rax
    00000120: 	subq	%fs:0x28, %rax
    00000129: 	jne	.Ltmp412 # Offset: 297
    0000012b: 	addq	$0x50, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	retq # Offset: 311
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp410:
    00000140: 	testq	%r13, %r13
    00000143: 	jne	.Ltmp413 # Offset: 323
    00000145: 	movq	%rbx, %rax
    00000148: 	jmp	.Ltmp414 # Offset: 328
    0000014a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp409:
    00000150: 	leaq	0x20(%rsp), %rdi
    00000155: 	leaq	0x18(%rsp), %rsi
    0000015a: 	xorl	%edx, %edx
    0000015c: 	movsd	%xmm0, 0x8(%rsp)
    00000162: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 354
    00000167: 	movsd	0x8(%rsp), %xmm0
    0000016d: 	movq	%rax, 0x20(%rsp)
    00000172: 	movq	%rax, %rdi
    00000175: 	movq	0x18(%rsp), %rax
    0000017a: 	movq	%rax, 0x30(%rsp)
.Ltmp415:
    0000017f: 	movq	%r13, %rdx
    00000182: 	movq	%rbp, %rsi
    00000185: 	movsd	%xmm0, 0x8(%rsp)
    0000018b: 	callq	memcpy@PLT # Offset: 395
    00000190: 	movq	0x18(%rsp), %r13
    00000195: 	movq	0x20(%rsp), %rax
    0000019a: 	movsd	0x8(%rsp), %xmm0
    000001a0: 	jmp	.Ltmp414 # Offset: 416
.Ltmp412:
    000001a5: 	callq	__stack_chk_fail@PLT # Offset: 421
.Ltmp413:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	jmp	.Ltmp415 # Offset: 429
.Ltmp408:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %rbp
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbx, %rdi
    000001ca: 	je	.Ltmp416 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp416:
    000001da: 	movq	%rbp, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev
                _ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED2Ev
  Number      : 72
  State       : disassembled
  Address     : 0x63d0
  Size        : 0x75
  MaxSize     : 0x80
  Offset      : 0x63d0
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	pushq	%r12
    00000006: 	movq	%rdi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	0x8(%rdi), %rbx
    0000000f: 	movq	(%rdi), %rbp
    00000012: 	cmpq	%rbp, %rbx
    00000015: 	je	.Ltmp417 # Offset: 21
    00000017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp419:
    00000020: 	movq	(%rbp), %rdi
    00000024: 	testq	%rdi, %rdi
    00000027: 	je	.Ltmp418 # Offset: 39
    00000029: 	movl	$0x8, %esi
    0000002e: 	addq	$0x8, %rbp
    00000032: 	callq	_ZdlPvm@PLT # Offset: 50
    00000037: 	cmpq	%rbp, %rbx
    0000003a: 	jne	.Ltmp419 # Offset: 58
.Ltmp421:
    0000003c: 	movq	(%r12), %rbp
.Ltmp417:
    00000040: 	testq	%rbp, %rbp
    00000043: 	je	.Ltmp420 # Offset: 67
    00000045: 	movq	0x10(%r12), %rsi
    0000004a: 	popq	%rbx
    0000004b: 	movq	%rbp, %rdi
    0000004e: 	subq	%rbp, %rsi
    00000051: 	popq	%rbp
    00000052: 	popq	%r12
    00000054: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 84
    00000059: 	nopl	(%rax) # Size: 7
.Ltmp418:
    00000060: 	addq	$0x8, %rbp
    00000064: 	cmpq	%rbp, %rbx
    00000067: 	jne	.Ltmp419 # Offset: 103
    00000069: 	jmp	.Ltmp421 # Offset: 105
    0000006b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp420:
    00000070: 	popq	%rbx
    00000071: 	popq	%rbp
    00000072: 	popq	%r12
    00000074: 	retq # Offset: 116
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev(*2)"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi1EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0x6450
  Size        : 0x235
  MaxSize     : 0x240
  Offset      : 0x6450
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi1EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp422 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
    0000004f: 	nop # Size: 1
.Ltmp429:
    00000050: 	callq	clock@PLT # Offset: 80
    00000055: 	movq	(%r14), %rsi
    00000058: 	movq	0x8(%r14), %rdx
    0000005c: 	pxor	%xmm0, %xmm0
    00000060: 	movq	%rax, end_time(%rip)
    00000067: 	leaq	0x20(%rsp), %rbp
    0000006c: 	subq	start_time(%rip), %rax
    00000073: 	leaq	0x10(%rsp), %rdi
    00000078: 	addq	%rsi, %rdx
    0000007b: 	cvtsi2sd	%rax, %xmm0
    00000080: 	movq	%rbp, 0x10(%rsp)
    00000085: 	divsd	DATAat0x17370(%rip), %xmm0
    0000008d: 	movq	%xmm0, %rbx
    00000092: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 146
    00000097: 	movq	0x18(%rsp), %rdx
    0000009c: 	movq	0x10(%rsp), %rsi
    000000a1: 	movq	%r15, %rdi
    000000a4: 	movq	%rbx, %xmm0
    000000a9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 169
    000000ae: 	movq	0x10(%rsp), %rdi
    000000b3: 	cmpq	%rbp, %rdi
    000000b6: 	je	.Ltmp423 # Offset: 182
    000000b8: 	movq	0x20(%rsp), %rax
    000000bd: 	leaq	0x1(%rax), %rsi
    000000c1: 	callq	_ZdlPvm@PLT # Offset: 193
.Ltmp423:
    000000c6: 	movq	0x38(%rsp), %rax
    000000cb: 	subq	%fs:0x28, %rax
    000000d4: 	jne	.Ltmp424 # Offset: 212
    000000da: 	addq	$0x48, %rsp
    000000de: 	movq	%r12, %rax
    000000e1: 	popq	%rbx
    000000e2: 	popq	%rbp
    000000e3: 	popq	%r12
    000000e5: 	popq	%r13
    000000e7: 	popq	%r14
    000000e9: 	popq	%r15
    000000eb: 	retq # Offset: 235
    000000ec: 	nopl	(%rax) # Size: 4
.Ltmp422:
    000000f0: 	movq	%r15, %rax
    000000f3: 	shrq	$0x3c, %rax
    000000f7: 	jne	.Ltmp425 # Offset: 247
    000000fd: 	leaq	(,%r15,8), %r13
    00000105: 	movslq	%edx, %rbp
    00000108: 	movq	%r13, %rdi
    0000010b: 	callq	_Znwm@PLT # Offset: 267
    00000110: 	movq	%rax, %rdi
    00000113: 	movq	%r13, %rdx
    00000116: 	xorl	%esi, %esi
    00000118: 	movq	%r15, %rbx
    0000011b: 	callq	memset@PLT # Offset: 283
    00000120: 	movq	0x8(%r12), %rdi
    00000125: 	movq	(%r12), %r8
    00000129: 	movq	%rax, %rcx
    0000012c: 	cmpq	%r8, %rdi
    0000012f: 	je	.Ltmp426 # Offset: 303
    00000131: 	subq	%r8, %rdi
    00000134: 	movq	%r8, %rdx
    00000137: 	addq	%rax, %rdi
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp427:
    00000140: 	movq	(%rdx), %rsi
    00000143: 	addq	$0x8, %rax
    00000147: 	addq	$0x8, %rdx
    0000014b: 	movq	%rsi, -0x8(%rax)
    0000014f: 	cmpq	%rdi, %rax
    00000152: 	jne	.Ltmp427 # Offset: 338
.Ltmp426:
    00000154: 	testq	%r8, %r8
    00000157: 	je	.Ltmp428 # Offset: 343
    00000159: 	movq	0x10(%r12), %rsi
    0000015e: 	movq	%r8, %rdi
    00000161: 	movq	%rcx, 0x8(%rsp)
    00000166: 	subq	%r8, %rsi
    00000169: 	callq	_ZdlPvm@PLT # Offset: 361
    0000016e: 	movq	0x8(%rsp), %rcx
.Ltmp428:
    00000173: 	addq	%rcx, %r13
    00000176: 	movq	%rcx, %xmm0
    0000017b: 	movq	%r13, %xmm1
    00000180: 	movq	%r13, 0x10(%r12)
    00000185: 	punpcklqdq	%xmm1, %xmm0
    00000189: 	movups	%xmm0, (%r12)
    0000018e: 	callq	clock@PLT # Offset: 398
    00000193: 	movq	%rax, start_time(%rip)
    0000019a: 	testl	%ebx, %ebx
    0000019c: 	jle	.Ltmp429 # Offset: 412
    000001a2: 	leaq	(,%r15,8), %r13
    000001aa: 	xorl	%ebx, %ebx
    000001ac: 	nopl	(%rax) # Size: 4
.Ltmp431:
    000001b0: 	movl	$0x8, %edi
    000001b5: 	callq	_Znwm@PLT # Offset: 437
    000001ba: 	movq	(%r12), %rdx
    000001be: 	movq	%rbp, (%rax)
    000001c1: 	addq	%rbx, %rdx
    000001c4: 	movq	(%rdx), %rdi
    000001c7: 	movq	%rax, (%rdx)
    000001ca: 	testq	%rdi, %rdi
    000001cd: 	je	.Ltmp430 # Offset: 461
    000001cf: 	movl	$0x8, %esi
    000001d4: 	callq	_ZdlPvm@PLT # Offset: 468
.Ltmp430:
    000001d9: 	addq	$0x8, %rbx
    000001dd: 	cmpq	%rbx, %r13
    000001e0: 	jne	.Ltmp431 # Offset: 480
    000001e2: 	jmp	.Ltmp429 # Offset: 482
.Ltmp425:
    000001e7: 	leaq	DATAat0x17138(%rip), %rdi
    000001ee: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 494
.Ltmp424:
    000001f3: 	callq	__stack_chk_fail@PLT # Offset: 499
    000001f8: 	endbr64
    000001fc: 	movq	%rax, %rbx
    000001ff: 	jmp	.Ltmp432 # Offset: 511
    00000201: 	endbr64
    00000205: 	movq	%rax, %rbp
    00000208: 	jmp	.Ltmp433 # Offset: 520
.Ltmp432:
    0000020a: 	movq	0x10(%rsp), %rdi
    0000020f: 	cmpq	%rbp, %rdi
    00000212: 	je	.Ltmp434 # Offset: 530
    00000214: 	movq	0x20(%rsp), %rax
    00000219: 	leaq	0x1(%rax), %rsi
    0000021d: 	callq	_ZdlPvm@PLT # Offset: 541
.Ltmp434:
    00000222: 	movq	%rbx, %rbp
.Ltmp433:
    00000225: 	movq	%r12, %rdi
    00000228: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 552
    0000022d: 	movq	%rbp, %rdi
    00000230: 	callq	_Unwind_Resume@PLT # Offset: 560
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi1EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayI17VariableContainerIlLi1EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 74
  State       : disassembled
  Address     : 0x6690
  Size        : 0x23c
  MaxSize     : 0x240
  Offset      : 0x6690
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayI17VariableContainerIlLi1EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rdx, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rsi, %rbx
    0000001b: 	subq	$0x38, %rsp
    0000001f: 	movq	0x8(%rsi), %r14
    00000023: 	subq	(%rsi), %r14
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x28(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%r14, %rbp
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x3, %rbp
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%r14, %r14
    0000004b: 	jne	.Ltmp435 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%rbp, %rbp
    00000060: 	je	.Ltmp436 # Offset: 96
.Ltmp446:
    00000062: 	xorl	%r14d, %r14d
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp438:
    00000068: 	movq	(%rbx), %rdx
    0000006b: 	leaq	(,%r14,8), %rax
    00000073: 	addq	%rax, %rdx
    00000076: 	addq	(%r12), %rax
    0000007a: 	movq	(%rdx), %rcx
    0000007d: 	movq	$0x0, (%rdx)
    00000084: 	movq	(%rax), %rdi
    00000087: 	movq	%rcx, (%rax)
    0000008a: 	testq	%rdi, %rdi
    0000008d: 	je	.Ltmp437 # Offset: 141
    0000008f: 	movl	$0x8, %esi
    00000094: 	callq	_ZdlPvm@PLT # Offset: 148
.Ltmp437:
    00000099: 	addq	$0x1, %r14
    0000009d: 	cmpq	%rbp, %r14
    000000a0: 	jb	.Ltmp438 # Offset: 160
.Ltmp436:
    000000a2: 	callq	clock@PLT # Offset: 162
    000000a7: 	movq	(%r13), %rsi
    000000ab: 	movq	0x8(%r13), %rdx
    000000af: 	movq	%rsp, %rdi
    000000b2: 	movq	%rax, end_time(%rip)
    000000b9: 	pxor	%xmm0, %xmm0
    000000bd: 	subq	start_time(%rip), %rax
    000000c4: 	leaq	0x10(%rsp), %r14
    000000c9: 	addq	%rsi, %rdx
    000000cc: 	cvtsi2sd	%rax, %xmm0
    000000d1: 	movq	%r14, (%rsp)
    000000d5: 	divsd	DATAat0x17370(%rip), %xmm0
    000000dd: 	movq	%xmm0, %rbx
    000000e2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 226
    000000e7: 	movq	0x8(%rsp), %rdx
    000000ec: 	movq	(%rsp), %rsi
    000000f0: 	movq	%rbp, %rdi
    000000f3: 	movq	%rbx, %xmm0
    000000f8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 248
    000000fd: 	movq	(%rsp), %rdi
    00000101: 	cmpq	%r14, %rdi
    00000104: 	je	.Ltmp439 # Offset: 260
    00000106: 	movq	0x10(%rsp), %rax
    0000010b: 	leaq	0x1(%rax), %rsi
    0000010f: 	callq	_ZdlPvm@PLT # Offset: 271
.Ltmp439:
    00000114: 	movq	0x28(%rsp), %rax
    00000119: 	subq	%fs:0x28, %rax
    00000122: 	jne	.Ltmp440 # Offset: 290
    00000128: 	addq	$0x38, %rsp
    0000012c: 	movq	%r12, %rax
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	retq # Offset: 313
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp435:
    00000140: 	testq	%rbp, %rbp
    00000143: 	jne	.Ltmp441 # Offset: 323
    00000145: 	movq	$0x0, 0x8(%rdi)
    0000014d: 	callq	clock@PLT # Offset: 333
    00000152: 	movq	%rax, start_time(%rip)
    00000159: 	jmp	.Ltmp436 # Offset: 345
.Ltmp441:
    0000015e: 	movabsq	$0x7ffffffffffffff8, %rax
    00000168: 	cmpq	%rax, %r14
    0000016b: 	ja	.Ltmp442 # Offset: 363
    00000171: 	movq	%r14, %rdi
    00000174: 	callq	_Znwm@PLT # Offset: 372
    00000179: 	movq	%r14, %rdx
    0000017c: 	xorl	%esi, %esi
    0000017e: 	movq	%rax, %rdi
    00000181: 	movq	%rax, %r15
    00000184: 	callq	memset@PLT # Offset: 388
    00000189: 	movq	(%r12), %rdi
    0000018d: 	movq	0x8(%r12), %rsi
    00000192: 	movq	%r15, %rdx
    00000195: 	movq	%rdi, %rax
    00000198: 	cmpq	%rdi, %rsi
    0000019b: 	je	.Ltmp443 # Offset: 411
    0000019d: 	nopl	(%rax) # Size: 3
.Ltmp444:
    000001a0: 	movq	(%rax), %rcx
    000001a3: 	addq	$0x8, %rax
    000001a7: 	addq	$0x8, %rdx
    000001ab: 	movq	%rcx, -0x8(%rdx)
    000001af: 	cmpq	%rax, %rsi
    000001b2: 	jne	.Ltmp444 # Offset: 434
.Ltmp443:
    000001b4: 	testq	%rdi, %rdi
    000001b7: 	je	.Ltmp445 # Offset: 439
    000001b9: 	movq	0x10(%r12), %rsi
    000001be: 	subq	%rdi, %rsi
    000001c1: 	callq	_ZdlPvm@PLT # Offset: 449
.Ltmp445:
    000001c6: 	addq	%r15, %r14
    000001c9: 	movq	%r15, %xmm0
    000001ce: 	movq	%r14, %xmm1
    000001d3: 	movq	%r14, 0x10(%r12)
    000001d8: 	punpcklqdq	%xmm1, %xmm0
    000001dc: 	movups	%xmm0, (%r12)
    000001e1: 	callq	clock@PLT # Offset: 481
    000001e6: 	movq	%rax, start_time(%rip)
    000001ed: 	jmp	.Ltmp446 # Offset: 493
.Ltmp442:
    000001f2: 	leaq	DATAat0x17138(%rip), %rdi
    000001f9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 505
.Ltmp440:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
    00000203: 	endbr64
    00000207: 	movq	%rax, %rbp
    0000020a: 	jmp	.Ltmp447 # Offset: 522
    0000020c: 	endbr64
    00000210: 	movq	%rax, %rbp
    00000213: 	jmp	.Ltmp448 # Offset: 531
.Ltmp447:
    00000215: 	movq	(%rsp), %rdi
    00000219: 	cmpq	%r14, %rdi
    0000021c: 	je	.Ltmp448 # Offset: 540
    0000021e: 	movq	0x10(%rsp), %rax
    00000223: 	leaq	0x1(%rax), %rsi
    00000227: 	callq	_ZdlPvm@PLT # Offset: 551
.Ltmp448:
    0000022c: 	movq	%r12, %rdi
    0000022f: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 559
    00000234: 	movq	%rbp, %rdi
    00000237: 	callq	_Unwind_Resume@PLT # Offset: 567
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayI17VariableContainerIlLi1EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 75
  State       : disassembled
  Address     : 0x68d0
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x68d0
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp451:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp449 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp450:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp450 # Offset: 118
.Ltmp449:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp451 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp452 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp453 # Offset: 192
.Ltmp452:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp454 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp455 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp464:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp456 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp456:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp457 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp453 # Offset: 319
.Ltmp457:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp458 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp459 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp466:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp460 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp460:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp461 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp461:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp462 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp455:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp463 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp464 # Offset: 479
.Ltmp459:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp465 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp466 # Offset: 496
.Ltmp458:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp468:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp466 # Offset: 557
.Ltmp454:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp467:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp464 # Offset: 661
.Ltmp462:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp463:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp467 # Offset: 679
.Ltmp465:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp468 # Offset: 684
.Ltmp453:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp469 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp470 # Offset: 717
.Ltmp469:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp471 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp471:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp470:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp471 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp471 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 76
  State       : disassembled
  Address     : 0x6be0
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x6be0
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movl	$0x14, %ebp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	movl	$0x7b, %edi
    0000001c: 	subq	$0x50, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x48(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	srand@PLT # Offset: 48
    00000035: 	callq	clock@PLT # Offset: 53
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	movq	0x8(%rbx), %rax
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp474:
    00000048: 	movq	(%rbx), %r13
    0000004b: 	cmpq	%rax, %r13
    0000004e: 	je	.Ltmp472 # Offset: 78
.Ltmp473:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, (%rdx)
    00000066: 	movq	0x8(%rbx), %rax
    0000006a: 	cmpq	%r13, %rax
    0000006d: 	jne	.Ltmp473 # Offset: 109
    0000006f: 	subq	$0x1, %rbp
    00000073: 	jne	.Ltmp474 # Offset: 115
    00000075: 	nopl	(%rax) # Size: 3
.Ltmp472:
    00000078: 	callq	clock@PLT # Offset: 120
    0000007d: 	movq	(%r12), %r13
    00000081: 	pxor	%xmm0, %xmm0
    00000085: 	movq	0x8(%r12), %r12
    0000008a: 	movq	%rax, end_time(%rip)
    00000091: 	subq	start_time(%rip), %rax
    00000098: 	leaq	0x30(%rsp), %rbp
    0000009d: 	cvtsi2sd	%rax, %xmm0
    000000a2: 	movq	%r13, %rax
    000000a5: 	movq	%rbp, 0x20(%rsp)
    000000aa: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b2: 	addq	%r12, %rax
    000000b5: 	je	.Ltmp475 # Offset: 181
    000000b7: 	testq	%r13, %r13
    000000ba: 	je	.Ltmp476 # Offset: 186
.Ltmp475:
    000000c0: 	movq	%r12, 0x18(%rsp)
    000000c5: 	cmpq	$0xf, %r12
    000000c9: 	ja	.Ltmp477 # Offset: 201
    000000cb: 	cmpq	$0x1, %r12
    000000cf: 	jne	.Ltmp478 # Offset: 207
    000000d1: 	movzbl	(%r13), %eax
    000000d6: 	leaq	0x20(%rsp), %r14
    000000db: 	movb	%al, 0x30(%rsp)
    000000df: 	movq	%rbp, %rax
.Ltmp482:
    000000e2: 	movq	%r12, 0x28(%rsp)
    000000e7: 	movq	%r14, %rdx
    000000ea: 	movl	$0x14, %edi
    000000ef: 	movb	$0x0, (%rax,%r12)
    000000f4: 	movq	0x8(%rbx), %rsi
    000000f8: 	subq	(%rbx), %rsi
    000000fb: 	sarq	$0x3, %rsi
    000000ff: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 255
    00000104: 	movq	0x20(%rsp), %rdi
    00000109: 	cmpq	%rbp, %rdi
    0000010c: 	je	.Ltmp479 # Offset: 268
    0000010e: 	movq	0x30(%rsp), %rax
    00000113: 	leaq	0x1(%rax), %rsi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp479:
    0000011c: 	movq	0x48(%rsp), %rax
    00000121: 	subq	%fs:0x28, %rax
    0000012a: 	jne	.Ltmp480 # Offset: 298
    0000012c: 	addq	$0x50, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	retq # Offset: 312
.Ltmp478:
    00000139: 	testq	%r12, %r12
    0000013c: 	jne	.Ltmp481 # Offset: 316
    0000013e: 	movq	%rbp, %rax
    00000141: 	leaq	0x20(%rsp), %r14
    00000146: 	jmp	.Ltmp482 # Offset: 326
.Ltmp477:
    00000148: 	leaq	0x20(%rsp), %r14
    0000014d: 	leaq	0x18(%rsp), %rsi
    00000152: 	xorl	%edx, %edx
    00000154: 	movsd	%xmm0, 0x8(%rsp)
    0000015a: 	movq	%r14, %rdi
    0000015d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 349
    00000162: 	movsd	0x8(%rsp), %xmm0
    00000168: 	movq	%rax, 0x20(%rsp)
    0000016d: 	movq	%rax, %rdi
    00000170: 	movq	0x18(%rsp), %rax
    00000175: 	movq	%rax, 0x30(%rsp)
.Ltmp483:
    0000017a: 	movq	%r12, %rdx
    0000017d: 	movq	%r13, %rsi
    00000180: 	movsd	%xmm0, 0x8(%rsp)
    00000186: 	callq	memcpy@PLT # Offset: 390
    0000018b: 	movq	0x18(%rsp), %r12
    00000190: 	movq	0x20(%rsp), %rax
    00000195: 	movsd	0x8(%rsp), %xmm0
    0000019b: 	jmp	.Ltmp482 # Offset: 411
.Ltmp480:
    000001a0: 	callq	__stack_chk_fail@PLT # Offset: 416
.Ltmp481:
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	leaq	0x20(%rsp), %r14
    000001ad: 	jmp	.Ltmp483 # Offset: 429
.Ltmp476:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %r12
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbp, %rdi
    000001ca: 	je	.Ltmp484 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp484:
    000001da: 	movq	%r12, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0x6dd0
  Size        : 0x1d2
  MaxSize     : 0x1e0
  Offset      : 0x6dd0
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rsi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	xorl	%ebx, %ebx
    00000012: 	subq	$0x58, %rsp
    00000016: 	movq	0x8(%rdi), %rbp
    0000001a: 	subq	(%rdi), %rbp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x48(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	sarq	$0x3, %rbp
    00000031: 	callq	clock@PLT # Offset: 49
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	testq	%rbp, %rbp
    00000040: 	je	.Ltmp485 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp487:
    00000048: 	movq	(%r13), %rax
    0000004c: 	leaq	(%rax,%rbx,8), %rax
    00000050: 	movq	(%rax), %rdi
    00000053: 	movq	$0x0, (%rax)
    0000005a: 	testq	%rdi, %rdi
    0000005d: 	je	.Ltmp486 # Offset: 93
    0000005f: 	movl	$0x8, %esi
    00000064: 	callq	_ZdlPvm@PLT # Offset: 100
.Ltmp486:
    00000069: 	addq	$0x1, %rbx
    0000006d: 	cmpq	%rbp, %rbx
    00000070: 	jne	.Ltmp487 # Offset: 112
.Ltmp485:
    00000072: 	callq	clock@PLT # Offset: 114
    00000077: 	movq	(%r12), %r13
    0000007b: 	pxor	%xmm0, %xmm0
    0000007f: 	movq	0x8(%r12), %r12
    00000084: 	movq	%rax, end_time(%rip)
    0000008b: 	subq	start_time(%rip), %rax
    00000092: 	leaq	0x30(%rsp), %rbx
    00000097: 	cvtsi2sd	%rax, %xmm0
    0000009c: 	movq	%r13, %rax
    0000009f: 	movq	%rbx, 0x20(%rsp)
    000000a4: 	divsd	DATAat0x17370(%rip), %xmm0
    000000ac: 	addq	%r12, %rax
    000000af: 	je	.Ltmp488 # Offset: 175
    000000b1: 	testq	%r13, %r13
    000000b4: 	je	.Ltmp489 # Offset: 180
.Ltmp488:
    000000ba: 	movq	%r12, 0x18(%rsp)
    000000bf: 	cmpq	$0xf, %r12
    000000c3: 	ja	.Ltmp490 # Offset: 195
    000000c5: 	cmpq	$0x1, %r12
    000000c9: 	jne	.Ltmp491 # Offset: 201
    000000cb: 	movzbl	(%r13), %eax
    000000d0: 	movb	%al, 0x30(%rsp)
    000000d4: 	movq	%rbx, %rax
.Ltmp495:
    000000d7: 	movq	%r12, 0x28(%rsp)
    000000dc: 	movq	%rbp, %rdi
    000000df: 	movb	$0x0, (%rax,%r12)
    000000e4: 	movq	0x28(%rsp), %rdx
    000000e9: 	movq	0x20(%rsp), %rsi
    000000ee: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 238
    000000f3: 	movq	0x20(%rsp), %rdi
    000000f8: 	cmpq	%rbx, %rdi
    000000fb: 	je	.Ltmp492 # Offset: 251
    000000fd: 	movq	0x30(%rsp), %rax
    00000102: 	leaq	0x1(%rax), %rsi
    00000106: 	callq	_ZdlPvm@PLT # Offset: 262
.Ltmp492:
    0000010b: 	movq	0x48(%rsp), %rax
    00000110: 	subq	%fs:0x28, %rax
    00000119: 	jne	.Ltmp493 # Offset: 281
    0000011b: 	addq	$0x58, %rsp
    0000011f: 	popq	%rbx
    00000120: 	popq	%rbp
    00000121: 	popq	%r12
    00000123: 	popq	%r13
    00000125: 	retq # Offset: 293
    00000126: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp491:
    00000130: 	testq	%r12, %r12
    00000133: 	jne	.Ltmp494 # Offset: 307
    00000135: 	movq	%rbx, %rax
    00000138: 	jmp	.Ltmp495 # Offset: 312
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp490:
    00000140: 	leaq	0x20(%rsp), %rdi
    00000145: 	leaq	0x18(%rsp), %rsi
    0000014a: 	xorl	%edx, %edx
    0000014c: 	movsd	%xmm0, 0x8(%rsp)
    00000152: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 338
    00000157: 	movsd	0x8(%rsp), %xmm0
    0000015d: 	movq	%rax, 0x20(%rsp)
    00000162: 	movq	%rax, %rdi
    00000165: 	movq	0x18(%rsp), %rax
    0000016a: 	movq	%rax, 0x30(%rsp)
.Ltmp496:
    0000016f: 	movq	%r12, %rdx
    00000172: 	movq	%r13, %rsi
    00000175: 	movsd	%xmm0, 0x8(%rsp)
    0000017b: 	callq	memcpy@PLT # Offset: 379
    00000180: 	movq	0x18(%rsp), %r12
    00000185: 	movq	0x20(%rsp), %rax
    0000018a: 	movsd	0x8(%rsp), %xmm0
    00000190: 	jmp	.Ltmp495 # Offset: 400
.Ltmp493:
    00000195: 	callq	__stack_chk_fail@PLT # Offset: 405
.Ltmp494:
    0000019a: 	movq	%rbx, %rdi
    0000019d: 	jmp	.Ltmp496 # Offset: 413
.Ltmp489:
    0000019f: 	leaq	DATAat0x17008(%rip), %rdi
    000001a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 422
    000001ab: 	endbr64
    000001af: 	movq	%rax, %rbp
    000001b2: 	movq	0x20(%rsp), %rdi
    000001b7: 	cmpq	%rbx, %rdi
    000001ba: 	je	.Ltmp497 # Offset: 442
    000001bc: 	movq	0x30(%rsp), %rax
    000001c1: 	leaq	0x1(%rax), %rsi
    000001c5: 	callq	_ZdlPvm@PLT # Offset: 453
.Ltmp497:
    000001ca: 	movq	%rbp, %rdi
    000001cd: 	callq	_Unwind_Resume@PLT # Offset: 461
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev
                _ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED2Ev
  Number      : 78
  State       : disassembled
  Address     : 0x6fb0
  Size        : 0xdb
  MaxSize     : 0xe0
  Offset      : 0x6fb0
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x8, %rsp
    00000011: 	movq	0x8(%rdi), %rbx
    00000015: 	movq	(%rdi), %rbp
    00000018: 	cmpq	%rbp, %rbx
    0000001b: 	jne	.Ltmp498 # Offset: 27
    0000001d: 	jmp	.Ltmp499 # Offset: 29
    0000001f: 	nop # Size: 1
.Ltmp501:
    00000020: 	addq	$0x10, %rbp
    00000024: 	cmpq	%rbp, %rbx
    00000027: 	je	.Ltmp500 # Offset: 39
.Ltmp498:
    00000029: 	movq	0x8(%rbp), %r12
    0000002d: 	testq	%r12, %r12
    00000030: 	je	.Ltmp501 # Offset: 48
    00000032: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000039: 	je	.Ltmp502 # Offset: 57
    0000003b: 	movl	0x8(%r12), %eax
    00000040: 	leal	-0x1(%rax), %edx
    00000043: 	movl	%edx, 0x8(%r12)
.Ltmp505:
    00000048: 	cmpl	$0x1, %eax
    0000004b: 	jne	.Ltmp501 # Offset: 75
    0000004d: 	movq	(%r12), %rax
    00000051: 	movq	%r12, %rdi
    00000054: 	callq	*0x10(%rax) # Offset: 84
    00000057: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000005e: 	je	.Ltmp503 # Offset: 94
    00000060: 	movl	0xc(%r12), %eax
    00000065: 	leal	-0x1(%rax), %edx
    00000068: 	movl	%edx, 0xc(%r12)
.Ltmp506:
    0000006d: 	cmpl	$0x1, %eax
    00000070: 	jne	.Ltmp501 # Offset: 112
    00000072: 	movq	(%r12), %rax
    00000076: 	addq	$0x10, %rbp
    0000007a: 	movq	%r12, %rdi
    0000007d: 	callq	*0x18(%rax) # Offset: 125
    00000080: 	cmpq	%rbp, %rbx
    00000083: 	jne	.Ltmp498 # Offset: 131
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp500:
    00000088: 	movq	(%r13), %rbp
.Ltmp499:
    0000008c: 	testq	%rbp, %rbp
    0000008f: 	je	.Ltmp504 # Offset: 143
    00000091: 	movq	0x10(%r13), %rsi
    00000095: 	addq	$0x8, %rsp
    00000099: 	movq	%rbp, %rdi
    0000009c: 	popq	%rbx
    0000009d: 	subq	%rbp, %rsi
    000000a0: 	popq	%rbp
    000000a1: 	popq	%r12
    000000a3: 	popq	%r13
    000000a5: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 165
    000000aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp502:
    000000b0: 	movl	$0xffffffff, %eax
    000000b5: 	lock # Offset: 181
    000000b6: 	xaddl	%eax, 0x8(%r12)
    000000bc: 	jmp	.Ltmp505 # Offset: 188
    000000be: 	nop # Size: 2
.Ltmp503:
    000000c0: 	movl	$0xffffffff, %eax
    000000c5: 	lock # Offset: 197
    000000c6: 	xaddl	%eax, 0xc(%r12)
    000000cc: 	jmp	.Ltmp506 # Offset: 204
    000000ce: 	nop # Size: 2
.Ltmp504:
    000000d0: 	addq	$0x8, %rsp
    000000d4: 	popq	%rbx
    000000d5: 	popq	%rbp
    000000d6: 	popq	%r12
    000000d8: 	popq	%r13
    000000da: 	retq # Offset: 218
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev(*2)"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi1EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 79
  State       : disassembled
  Address     : 0x7090
  Size        : 0x358
  MaxSize     : 0x360
  Offset      : 0x7090
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi1EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	pushq	%r12
    00000010: 	movq	%rdi, %r12
    00000013: 	pushq	%rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x58, %rsp
    00000019: 	movq	%rcx, 0x18(%rsp)
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x48(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movslq	%esi, %rax
    00000031: 	movq	$0x0, 0x10(%rdi)
    00000039: 	movq	%rax, 0x8(%rsp)
    0000003e: 	movups	%xmm0, (%rdi)
    00000041: 	testq	%rax, %rax
    00000044: 	jne	.Ltmp507 # Offset: 68
    0000004a: 	callq	clock@PLT # Offset: 74
    0000004f: 	movq	%rax, start_time(%rip)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp514:
    00000060: 	callq	clock@PLT # Offset: 96
    00000065: 	pxor	%xmm0, %xmm0
    00000069: 	leaq	0x30(%rsp), %rbp
    0000006e: 	leaq	0x20(%rsp), %rdi
    00000073: 	movq	%rax, end_time(%rip)
    0000007a: 	subq	start_time(%rip), %rax
    00000081: 	cvtsi2sd	%rax, %xmm0
    00000086: 	movq	0x18(%rsp), %rax
    0000008b: 	divsd	DATAat0x17370(%rip), %xmm0
    00000093: 	movq	%rbp, 0x20(%rsp)
    00000098: 	movq	%xmm0, %rbx
    0000009d: 	movq	(%rax), %rsi
    000000a0: 	movq	0x8(%rax), %rdx
    000000a4: 	addq	%rsi, %rdx
    000000a7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 167
    000000ac: 	movq	0x28(%rsp), %rdx
    000000b1: 	movq	0x20(%rsp), %rsi
    000000b6: 	movq	%rbx, %xmm0
    000000bb: 	movq	0x8(%rsp), %rdi
    000000c0: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 192
    000000c5: 	movq	0x20(%rsp), %rdi
    000000ca: 	cmpq	%rbp, %rdi
    000000cd: 	je	.Ltmp508 # Offset: 205
    000000cf: 	movq	0x30(%rsp), %rax
    000000d4: 	leaq	0x1(%rax), %rsi
    000000d8: 	callq	_ZdlPvm@PLT # Offset: 216
.Ltmp508:
    000000dd: 	movq	0x48(%rsp), %rax
    000000e2: 	subq	%fs:0x28, %rax
    000000eb: 	jne	.Ltmp509 # Offset: 235
    000000f1: 	addq	$0x58, %rsp
    000000f5: 	movq	%r12, %rax
    000000f8: 	popq	%rbx
    000000f9: 	popq	%rbp
    000000fa: 	popq	%r12
    000000fc: 	popq	%r13
    000000fe: 	popq	%r14
    00000100: 	popq	%r15
    00000102: 	retq # Offset: 258
    00000103: 	nopl	(%rax,%rax) # Size: 5
.Ltmp507:
    00000108: 	shrq	$0x3b, %rax
    0000010c: 	jne	.Ltmp510 # Offset: 268
    00000112: 	movq	0x8(%rsp), %rbp
    00000117: 	movl	%esi, %ebx
    00000119: 	movslq	%edx, %r13
    0000011c: 	shlq	$0x4, %rbp
    00000120: 	movq	%rbp, %rdi
    00000123: 	callq	_Znwm@PLT # Offset: 291
    00000128: 	movq	%rax, %xmm0
    0000012d: 	addq	%rbp, %rax
    00000130: 	pxor	%xmm2, %xmm2
    00000134: 	movq	%rax, %xmm1
    00000139: 	movq	%xmm0, %rax
    0000013e: 	nop # Size: 2
.Ltmp511:
    00000140: 	movups	%xmm2, (%rax)
    00000143: 	movq	%xmm1, %rcx
    00000148: 	addq	$0x10, %rax
    0000014c: 	cmpq	%rcx, %rax
    0000014f: 	jne	.Ltmp511 # Offset: 335
    00000151: 	movq	0x8(%r12), %rax
    00000156: 	movq	(%r12), %rdi
    0000015a: 	cmpq	%rdi, %rax
    0000015d: 	je	.Ltmp512 # Offset: 349
    00000163: 	leaq	-0x10(%rax), %rcx
    00000167: 	xorl	%edx, %edx
    00000169: 	xorl	%eax, %eax
    0000016b: 	subq	%rdi, %rcx
    0000016e: 	shrq	$0x4, %rcx
    00000172: 	addq	$0x1, %rcx
    00000176: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp513:
    00000180: 	movdqu	(%rdi,%rax), %xmm4
    00000185: 	movq	%xmm0, %rsi
    0000018a: 	addq	$0x1, %rdx
    0000018e: 	movups	%xmm4, (%rsi,%rax)
    00000192: 	addq	$0x10, %rax
    00000196: 	cmpq	%rdx, %rcx
    00000199: 	ja	.Ltmp513 # Offset: 409
.Ltmp520:
    0000019b: 	movq	0x10(%r12), %rsi
    000001a0: 	movq	%xmm1, 0x10(%rsp)
    000001a6: 	movq	%xmm0, (%rsp)
    000001ab: 	subq	%rdi, %rsi
    000001ae: 	callq	_ZdlPvm@PLT # Offset: 430
    000001b3: 	movq	0x10(%rsp), %xmm1
    000001b9: 	movq	(%rsp), %xmm0
.Ltmp519:
    000001be: 	punpcklqdq	%xmm1, %xmm0
    000001c2: 	movq	%xmm1, 0x10(%r12)
    000001c9: 	movups	%xmm0, (%r12)
    000001ce: 	callq	clock@PLT # Offset: 462
    000001d3: 	movq	%rax, start_time(%rip)
    000001da: 	testl	%ebx, %ebx
    000001dc: 	jle	.Ltmp514 # Offset: 476
    000001e2: 	movq	0x8(%rsp), %rax
    000001e7: 	movq	DATAat0x17388(%rip), %r14
    000001ee: 	xorl	%ebx, %ebx
    000001f0: 	leaq	_ZTVSt15_Sp_counted_ptrIP17VariableContainerIlLi1EELN9__gnu_cxx12_Lock_policyE2EE+16(%rip), %r15
    000001f7: 	shlq	$0x4, %rax
    000001fb: 	movq	%rax, (%rsp)
    000001ff: 	jmp	.Ltmp515 # Offset: 511
    00000201: 	nopl	(%rax) # Size: 7
.Ltmp516:
    00000208: 	addq	$0x10, %rbx
    0000020c: 	cmpq	(%rsp), %rbx
    00000210: 	je	.Ltmp514 # Offset: 528
.Ltmp515:
    00000216: 	movl	$0x8, %edi
    0000021b: 	callq	_Znwm@PLT # Offset: 539
    00000220: 	movq	%r13, (%rax)
    00000223: 	movl	$0x18, %edi
    00000228: 	movq	%rax, %rbp
    0000022b: 	callq	_Znwm@PLT # Offset: 555
    00000230: 	movq	(%r12), %rdx
    00000234: 	movq	%rbp, %xmm0
    00000239: 	movq	%rax, %xmm3
    0000023e: 	movq	%r14, 0x8(%rax)
    00000242: 	punpcklqdq	%xmm3, %xmm0
    00000246: 	movq	%r15, (%rax)
    00000249: 	addq	%rbx, %rdx
    0000024c: 	movq	%rbp, 0x10(%rax)
    00000250: 	movq	0x8(%rdx), %rdi
    00000254: 	movups	%xmm0, (%rdx)
    00000257: 	testq	%rdi, %rdi
    0000025a: 	je	.Ltmp516 # Offset: 602
    0000025c: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000263: 	je	.Ltmp517 # Offset: 611
    00000265: 	movl	0x8(%rdi), %eax
    00000268: 	leal	-0x1(%rax), %edx
    0000026b: 	movl	%edx, 0x8(%rdi)
.Ltmp521:
    0000026e: 	cmpl	$0x1, %eax
    00000271: 	jne	.Ltmp516 # Offset: 625
    00000273: 	movq	(%rdi), %rax
    00000276: 	movq	%rdi, 0x10(%rsp)
    0000027b: 	callq	*0x10(%rax) # Offset: 635
    0000027e: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000285: 	movq	0x10(%rsp), %rdi
    0000028a: 	je	.Ltmp518 # Offset: 650
    0000028c: 	movl	0xc(%rdi), %eax
    0000028f: 	leal	-0x1(%rax), %edx
    00000292: 	movl	%edx, 0xc(%rdi)
.Ltmp522:
    00000295: 	cmpl	$0x1, %eax
    00000298: 	jne	.Ltmp516 # Offset: 664
    0000029e: 	movq	(%rdi), %rax
    000002a1: 	callq	*0x18(%rax) # Offset: 673
    000002a4: 	jmp	.Ltmp516 # Offset: 676
.Ltmp512:
    000002a9: 	testq	%rdi, %rdi
    000002ac: 	je	.Ltmp519 # Offset: 684
    000002b2: 	jmp	.Ltmp520 # Offset: 690
    000002b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp517:
    000002c0: 	movl	$0xffffffff, %eax
    000002c5: 	lock # Offset: 709
    000002c6: 	xaddl	%eax, 0x8(%rdi)
    000002ca: 	jmp	.Ltmp521 # Offset: 714
    000002cc: 	nopl	(%rax) # Size: 4
.Ltmp518:
    000002d0: 	movl	$0xffffffff, %eax
    000002d5: 	lock # Offset: 725
    000002d6: 	xaddl	%eax, 0xc(%rdi)
    000002da: 	jmp	.Ltmp522 # Offset: 730
.Ltmp509:
    000002dc: 	callq	__stack_chk_fail@PLT # Offset: 732
.Ltmp510:
    000002e1: 	leaq	DATAat0x17138(%rip), %rdi
    000002e8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 744
    000002ed: 	endbr64
    000002f1: 	movq	%rax, %rdi
    000002f4: 	jmp	.Ltmp523 # Offset: 756
    000002f6: 	endbr64
    000002fa: 	movq	%rax, %rbx
    000002fd: 	jmp	.Ltmp524 # Offset: 765
    000002ff: 	endbr64
    00000303: 	movq	%rax, %rbp
    00000306: 	jmp	.Ltmp525 # Offset: 774
.Ltmp523:
    00000308: 	callq	__cxa_begin_catch@PLT # Offset: 776
    0000030d: 	movl	$0x8, %esi
    00000312: 	movq	%rbp, %rdi
    00000315: 	callq	_ZdlPvm@PLT # Offset: 789
    0000031a: 	callq	__cxa_rethrow@PLT # Offset: 794
.Ltmp524:
    0000031f: 	movq	0x20(%rsp), %rdi
    00000324: 	cmpq	%rbp, %rdi
    00000327: 	je	.Ltmp526 # Offset: 807
    00000329: 	movq	0x30(%rsp), %rax
    0000032e: 	leaq	0x1(%rax), %rsi
    00000332: 	callq	_ZdlPvm@PLT # Offset: 818
.Ltmp526:
    00000337: 	movq	%rbx, %rbp
.Ltmp525:
    0000033a: 	movq	%r12, %rdi
    0000033d: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev # Offset: 829
    00000342: 	movq	%rbp, %rdi
    00000345: 	callq	_Unwind_Resume@PLT # Offset: 837
    0000034a: 	endbr64
    0000034e: 	movq	%rax, %rbp
    00000351: 	callq	__cxa_end_catch@PLT # Offset: 849
    00000356: 	jmp	.Ltmp525 # Offset: 854
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi1EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 80
  State       : disassembled
  Address     : 0x73f0
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x73f0
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movq	%rdx, %r15
    0000000d: 	pushq	%r14
    0000000f: 	pushq	%r13
    00000011: 	movq	%rsi, %r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	0x8(%rsi), %rbx
    00000023: 	subq	(%rsi), %rbx
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x38(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%rbx, %r14
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x4, %r14
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%rbx, %rbx
    0000004b: 	jne	.Ltmp527 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%r14, %r14
    00000060: 	je	.Ltmp528 # Offset: 96
.Ltmp546:
    00000066: 	xorl	%edx, %edx
    00000068: 	jmp	.Ltmp529 # Offset: 104
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp534:
    00000070: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000077: 	je	.Ltmp530 # Offset: 119
    0000007d: 	addl	$0x1, 0x8(%rbp)
    00000081: 	testq	%rdi, %rdi
    00000084: 	je	.Ltmp531 # Offset: 132
.Ltmp535:
    00000086: 	movl	0x8(%rdi), %eax
    00000089: 	leal	-0x1(%rax), %ecx
    0000008c: 	movl	%ecx, 0x8(%rdi)
    0000008f: 	cmpl	$0x1, %eax
    00000092: 	je	.Ltmp532 # Offset: 146
.Ltmp531:
    00000094: 	movq	%rbp, 0x8(%rbx)
.Ltmp533:
    00000098: 	addq	$0x1, %rdx
    0000009c: 	cmpq	%r14, %rdx
    0000009f: 	jae	.Ltmp528 # Offset: 159
.Ltmp529:
    000000a5: 	movq	(%r13), %rax
    000000a9: 	movq	%rdx, %rbx
    000000ac: 	shlq	$0x4, %rbx
    000000b0: 	addq	%rbx, %rax
    000000b3: 	addq	(%r12), %rbx
    000000b7: 	movq	(%rax), %rcx
    000000ba: 	movq	0x8(%rax), %rbp
    000000be: 	movq	0x8(%rbx), %rdi
    000000c2: 	movq	%rcx, (%rbx)
    000000c5: 	cmpq	%rdi, %rbp
    000000c8: 	je	.Ltmp533 # Offset: 200
    000000ca: 	testq	%rbp, %rbp
    000000cd: 	jne	.Ltmp534 # Offset: 205
.Ltmp537:
    000000cf: 	testq	%rdi, %rdi
    000000d2: 	je	.Ltmp531 # Offset: 210
    000000d4: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000db: 	jne	.Ltmp535 # Offset: 219
    000000dd: 	movl	$0xffffffff, %eax
    000000e2: 	lock # Offset: 226
    000000e3: 	xaddl	%eax, 0x8(%rdi)
    000000e7: 	cmpl	$0x1, %eax
    000000ea: 	jne	.Ltmp531 # Offset: 234
.Ltmp532:
    000000ec: 	movq	(%rdi), %rax
    000000ef: 	movq	%rdx, 0x8(%rsp)
    000000f4: 	movq	%rdi, (%rsp)
    000000f8: 	callq	*0x10(%rax) # Offset: 248
    000000fb: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000102: 	movq	(%rsp), %rdi
    00000106: 	movq	0x8(%rsp), %rdx
    0000010b: 	je	.Ltmp536 # Offset: 267
    00000111: 	movl	0xc(%rdi), %eax
    00000114: 	leal	-0x1(%rax), %ecx
    00000117: 	movl	%ecx, 0xc(%rdi)
.Ltmp541:
    0000011a: 	cmpl	$0x1, %eax
    0000011d: 	jne	.Ltmp531 # Offset: 285
    00000123: 	movq	(%rdi), %rax
    00000126: 	movq	%rdx, (%rsp)
    0000012a: 	callq	*0x18(%rax) # Offset: 298
    0000012d: 	movq	(%rsp), %rdx
    00000131: 	jmp	.Ltmp531 # Offset: 305
    00000136: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp530:
    00000140: 	lock # Offset: 320
    00000141: 	addl	$0x1, 0x8(%rbp)
    00000145: 	movq	0x8(%rbx), %rdi
    00000149: 	jmp	.Ltmp537 # Offset: 329
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp527:
    00000150: 	testq	%r14, %r14
    00000153: 	jne	.Ltmp538 # Offset: 339
    00000159: 	movq	$0x0, 0x8(%rdi)
    00000161: 	callq	clock@PLT # Offset: 353
    00000166: 	movq	%rax, start_time(%rip)
    0000016d: 	nopl	(%rax) # Size: 3
.Ltmp528:
    00000170: 	callq	clock@PLT # Offset: 368
    00000175: 	movq	(%r15), %rsi
    00000178: 	movq	0x8(%r15), %rdx
    0000017c: 	pxor	%xmm0, %xmm0
    00000180: 	movq	%rax, end_time(%rip)
    00000187: 	leaq	0x20(%rsp), %rbp
    0000018c: 	subq	start_time(%rip), %rax
    00000193: 	leaq	0x10(%rsp), %rdi
    00000198: 	addq	%rsi, %rdx
    0000019b: 	cvtsi2sd	%rax, %xmm0
    000001a0: 	movq	%rbp, 0x10(%rsp)
    000001a5: 	divsd	DATAat0x17370(%rip), %xmm0
    000001ad: 	movq	%xmm0, %rbx
    000001b2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 434
    000001b7: 	movq	0x18(%rsp), %rdx
    000001bc: 	movq	0x10(%rsp), %rsi
    000001c1: 	movq	%r14, %rdi
    000001c4: 	movq	%rbx, %xmm0
    000001c9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 457
    000001ce: 	movq	0x10(%rsp), %rdi
    000001d3: 	cmpq	%rbp, %rdi
    000001d6: 	je	.Ltmp539 # Offset: 470
    000001d8: 	movq	0x20(%rsp), %rax
    000001dd: 	leaq	0x1(%rax), %rsi
    000001e1: 	callq	_ZdlPvm@PLT # Offset: 481
.Ltmp539:
    000001e6: 	movq	0x38(%rsp), %rax
    000001eb: 	subq	%fs:0x28, %rax
    000001f4: 	jne	.Ltmp540 # Offset: 500
    000001fa: 	addq	$0x48, %rsp
    000001fe: 	movq	%r12, %rax
    00000201: 	popq	%rbx
    00000202: 	popq	%rbp
    00000203: 	popq	%r12
    00000205: 	popq	%r13
    00000207: 	popq	%r14
    00000209: 	popq	%r15
    0000020b: 	retq # Offset: 523
    0000020c: 	nopl	(%rax) # Size: 4
.Ltmp536:
    00000210: 	movl	$0xffffffff, %eax
    00000215: 	lock # Offset: 533
    00000216: 	xaddl	%eax, 0xc(%rdi)
    0000021a: 	jmp	.Ltmp541 # Offset: 538
.Ltmp538:
    0000021f: 	movabsq	$0x7ffffffffffffff0, %rax
    00000229: 	cmpq	%rax, %rbx
    0000022c: 	ja	.Ltmp542 # Offset: 556
    00000232: 	movq	%rbx, %rdi
    00000235: 	callq	_Znwm@PLT # Offset: 565
    0000023a: 	movq	%rax, %rbp
    0000023d: 	pxor	%xmm0, %xmm0
    00000241: 	xorl	%eax, %eax
    00000243: 	nopl	(%rax,%rax) # Size: 5
.Ltmp543:
    00000248: 	movq	%rax, %rdx
    0000024b: 	addq	$0x1, %rax
    0000024f: 	shlq	$0x4, %rdx
    00000253: 	movups	%xmm0, (%rbp,%rdx)
    00000258: 	cmpq	%rax, %r14
    0000025b: 	jne	.Ltmp543 # Offset: 603
    0000025d: 	movq	0x8(%r12), %rax
    00000262: 	movq	(%r12), %rdi
    00000266: 	cmpq	%rdi, %rax
    00000269: 	je	.Ltmp544 # Offset: 617
    0000026b: 	leaq	-0x10(%rax), %rcx
    0000026f: 	xorl	%edx, %edx
    00000271: 	xorl	%eax, %eax
    00000273: 	subq	%rdi, %rcx
    00000276: 	shrq	$0x4, %rcx
    0000027a: 	addq	$0x1, %rcx
    0000027e: 	nop # Size: 2
.Ltmp545:
    00000280: 	movdqu	(%rdi,%rax), %xmm1
    00000285: 	addq	$0x1, %rdx
    00000289: 	movups	%xmm1, (%rbp,%rax)
    0000028e: 	addq	$0x10, %rax
    00000292: 	cmpq	%rcx, %rdx
    00000295: 	jb	.Ltmp545 # Offset: 661
.Ltmp548:
    00000297: 	movq	0x10(%r12), %rsi
    0000029c: 	subq	%rdi, %rsi
    0000029f: 	callq	_ZdlPvm@PLT # Offset: 671
.Ltmp547:
    000002a4: 	addq	%rbp, %rbx
    000002a7: 	movq	%rbp, %xmm0
    000002ac: 	movq	%rbx, %xmm2
    000002b1: 	movq	%rbx, 0x10(%r12)
    000002b6: 	punpcklqdq	%xmm2, %xmm0
    000002ba: 	movups	%xmm0, (%r12)
    000002bf: 	callq	clock@PLT # Offset: 703
    000002c4: 	movq	%rax, start_time(%rip)
    000002cb: 	jmp	.Ltmp546 # Offset: 715
.Ltmp544:
    000002d0: 	testq	%rdi, %rdi
    000002d3: 	je	.Ltmp547 # Offset: 723
    000002d5: 	jmp	.Ltmp548 # Offset: 725
.Ltmp542:
    000002d7: 	leaq	DATAat0x17138(%rip), %rdi
    000002de: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 734
.Ltmp540:
    000002e3: 	callq	__stack_chk_fail@PLT # Offset: 739
    000002e8: 	endbr64
    000002ec: 	movq	%rax, %rbx
    000002ef: 	jmp	.Ltmp549 # Offset: 751
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rbp
    000002f8: 	jmp	.Ltmp550 # Offset: 760
.Ltmp549:
    000002fa: 	movq	0x10(%rsp), %rdi
    000002ff: 	cmpq	%rbp, %rdi
    00000302: 	je	.Ltmp551 # Offset: 770
    00000304: 	movq	0x20(%rsp), %rax
    00000309: 	leaq	0x1(%rax), %rsi
    0000030d: 	callq	_ZdlPvm@PLT # Offset: 781
.Ltmp551:
    00000312: 	movq	%rbx, %rbp
.Ltmp550:
    00000315: 	movq	%r12, %rdi
    00000318: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev # Offset: 792
    0000031d: 	movq	%rbp, %rdi
    00000320: 	callq	_Unwind_Resume@PLT # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 81
  State       : disassembled
  Address     : 0x7720
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x7720
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x4, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp554:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp552 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp553:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x10, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp553 # Offset: 118
.Ltmp552:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp554 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp555 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp556 # Offset: 192
.Ltmp555:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp557 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp558 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp567:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp559 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp559:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp560 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp556 # Offset: 319
.Ltmp560:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp561 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp562 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp569:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp563 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp563:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp564 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp564:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp565 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp558:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp566 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp567 # Offset: 479
.Ltmp562:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp568 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp569 # Offset: 496
.Ltmp561:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp571:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp569 # Offset: 557
.Ltmp557:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp570:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp567 # Offset: 661
.Ltmp565:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp566:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp570 # Offset: 679
.Ltmp568:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp571 # Offset: 684
.Ltmp556:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp572 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp573 # Offset: 717
.Ltmp572:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp574 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp574:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp573:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp574 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp574 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 82
  State       : disassembled
  Address     : 0x7a30
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x7a30
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movl	$0x14, %ebp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	movl	$0x7b, %edi
    0000001c: 	subq	$0x50, %rsp
    00000020: 	movq	%fs:0x28, %rax
    00000029: 	movq	%rax, 0x48(%rsp)
    0000002e: 	xorl	%eax, %eax
    00000030: 	callq	srand@PLT # Offset: 48
    00000035: 	callq	clock@PLT # Offset: 53
    0000003a: 	movq	%rax, start_time(%rip)
    00000041: 	movq	0x8(%rbx), %rax
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp577:
    00000048: 	movq	(%rbx), %r13
    0000004b: 	cmpq	%rax, %r13
    0000004e: 	je	.Ltmp575 # Offset: 78
.Ltmp576:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x10, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, (%rdx)
    00000066: 	movq	0x8(%rbx), %rax
    0000006a: 	cmpq	%r13, %rax
    0000006d: 	jne	.Ltmp576 # Offset: 109
    0000006f: 	subq	$0x1, %rbp
    00000073: 	jne	.Ltmp577 # Offset: 115
    00000075: 	nopl	(%rax) # Size: 3
.Ltmp575:
    00000078: 	callq	clock@PLT # Offset: 120
    0000007d: 	movq	(%r12), %r13
    00000081: 	pxor	%xmm0, %xmm0
    00000085: 	movq	0x8(%r12), %r12
    0000008a: 	movq	%rax, end_time(%rip)
    00000091: 	subq	start_time(%rip), %rax
    00000098: 	leaq	0x30(%rsp), %rbp
    0000009d: 	cvtsi2sd	%rax, %xmm0
    000000a2: 	movq	%r13, %rax
    000000a5: 	movq	%rbp, 0x20(%rsp)
    000000aa: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b2: 	addq	%r12, %rax
    000000b5: 	je	.Ltmp578 # Offset: 181
    000000b7: 	testq	%r13, %r13
    000000ba: 	je	.Ltmp579 # Offset: 186
.Ltmp578:
    000000c0: 	movq	%r12, 0x18(%rsp)
    000000c5: 	cmpq	$0xf, %r12
    000000c9: 	ja	.Ltmp580 # Offset: 201
    000000cb: 	cmpq	$0x1, %r12
    000000cf: 	jne	.Ltmp581 # Offset: 207
    000000d1: 	movzbl	(%r13), %eax
    000000d6: 	leaq	0x20(%rsp), %r14
    000000db: 	movb	%al, 0x30(%rsp)
    000000df: 	movq	%rbp, %rax
.Ltmp585:
    000000e2: 	movq	%r12, 0x28(%rsp)
    000000e7: 	movq	%r14, %rdx
    000000ea: 	movl	$0x14, %edi
    000000ef: 	movb	$0x0, (%rax,%r12)
    000000f4: 	movq	0x8(%rbx), %rsi
    000000f8: 	subq	(%rbx), %rsi
    000000fb: 	sarq	$0x4, %rsi
    000000ff: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 255
    00000104: 	movq	0x20(%rsp), %rdi
    00000109: 	cmpq	%rbp, %rdi
    0000010c: 	je	.Ltmp582 # Offset: 268
    0000010e: 	movq	0x30(%rsp), %rax
    00000113: 	leaq	0x1(%rax), %rsi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp582:
    0000011c: 	movq	0x48(%rsp), %rax
    00000121: 	subq	%fs:0x28, %rax
    0000012a: 	jne	.Ltmp583 # Offset: 298
    0000012c: 	addq	$0x50, %rsp
    00000130: 	popq	%rbx
    00000131: 	popq	%rbp
    00000132: 	popq	%r12
    00000134: 	popq	%r13
    00000136: 	popq	%r14
    00000138: 	retq # Offset: 312
.Ltmp581:
    00000139: 	testq	%r12, %r12
    0000013c: 	jne	.Ltmp584 # Offset: 316
    0000013e: 	movq	%rbp, %rax
    00000141: 	leaq	0x20(%rsp), %r14
    00000146: 	jmp	.Ltmp585 # Offset: 326
.Ltmp580:
    00000148: 	leaq	0x20(%rsp), %r14
    0000014d: 	leaq	0x18(%rsp), %rsi
    00000152: 	xorl	%edx, %edx
    00000154: 	movsd	%xmm0, 0x8(%rsp)
    0000015a: 	movq	%r14, %rdi
    0000015d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 349
    00000162: 	movsd	0x8(%rsp), %xmm0
    00000168: 	movq	%rax, 0x20(%rsp)
    0000016d: 	movq	%rax, %rdi
    00000170: 	movq	0x18(%rsp), %rax
    00000175: 	movq	%rax, 0x30(%rsp)
.Ltmp586:
    0000017a: 	movq	%r12, %rdx
    0000017d: 	movq	%r13, %rsi
    00000180: 	movsd	%xmm0, 0x8(%rsp)
    00000186: 	callq	memcpy@PLT # Offset: 390
    0000018b: 	movq	0x18(%rsp), %r12
    00000190: 	movq	0x20(%rsp), %rax
    00000195: 	movsd	0x8(%rsp), %xmm0
    0000019b: 	jmp	.Ltmp585 # Offset: 411
.Ltmp583:
    000001a0: 	callq	__stack_chk_fail@PLT # Offset: 416
.Ltmp584:
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	leaq	0x20(%rsp), %r14
    000001ad: 	jmp	.Ltmp586 # Offset: 429
.Ltmp579:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %r12
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbp, %rdi
    000001ca: 	je	.Ltmp587 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp587:
    000001da: 	movq	%r12, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 83
  State       : disassembled
  Address     : 0x7c20
  Size        : 0x252
  MaxSize     : 0x260
  Offset      : 0x7c20
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rsi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %r12
    0000001c: 	subq	(%rdi), %r12
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x4, %r12
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	pxor	%xmm0, %xmm0
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	testq	%r12, %r12
    00000046: 	jne	.Ltmp588 # Offset: 70
    00000048: 	jmp	.Ltmp589 # Offset: 72
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp590:
    00000050: 	addq	$0x1, %rbx
    00000054: 	cmpq	%r12, %rbx
    00000057: 	je	.Ltmp589 # Offset: 87
.Ltmp588:
    00000059: 	movq	%rbx, %rax
    0000005c: 	shlq	$0x4, %rax
    00000060: 	addq	(%r14), %rax
    00000063: 	movq	0x8(%rax), %rbp
    00000067: 	movups	%xmm0, (%rax)
    0000006a: 	testq	%rbp, %rbp
    0000006d: 	je	.Ltmp590 # Offset: 109
    0000006f: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000076: 	je	.Ltmp591 # Offset: 118
    0000007c: 	movl	0x8(%rbp), %eax
    0000007f: 	leal	-0x1(%rax), %edx
    00000082: 	movl	%edx, 0x8(%rbp)
.Ltmp599:
    00000085: 	cmpl	$0x1, %eax
    00000088: 	jne	.Ltmp590 # Offset: 136
    0000008a: 	movq	(%rbp), %rax
    0000008e: 	movq	%rbp, %rdi
    00000091: 	callq	*0x10(%rax) # Offset: 145
    00000094: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000009b: 	pxor	%xmm0, %xmm0
    0000009f: 	je	.Ltmp592 # Offset: 159
    000000a5: 	movl	0xc(%rbp), %eax
    000000a8: 	leal	-0x1(%rax), %edx
    000000ab: 	movl	%edx, 0xc(%rbp)
.Ltmp602:
    000000ae: 	cmpl	$0x1, %eax
    000000b1: 	jne	.Ltmp590 # Offset: 177
    000000b3: 	movq	(%rbp), %rax
    000000b7: 	addq	$0x1, %rbx
    000000bb: 	movq	%rbp, %rdi
    000000be: 	callq	*0x18(%rax) # Offset: 190
    000000c1: 	pxor	%xmm0, %xmm0
    000000c5: 	cmpq	%r12, %rbx
    000000c8: 	jne	.Ltmp588 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp589:
    000000d0: 	callq	clock@PLT # Offset: 208
    000000d5: 	movq	(%r13), %rbp
    000000d9: 	pxor	%xmm0, %xmm0
    000000dd: 	movq	0x8(%r13), %r13
    000000e1: 	movq	%rax, end_time(%rip)
    000000e8: 	subq	start_time(%rip), %rax
    000000ef: 	leaq	0x30(%rsp), %rbx
    000000f4: 	cvtsi2sd	%rax, %xmm0
    000000f9: 	movq	%rbp, %rax
    000000fc: 	movq	%rbx, 0x20(%rsp)
    00000101: 	divsd	DATAat0x17370(%rip), %xmm0
    00000109: 	addq	%r13, %rax
    0000010c: 	je	.Ltmp593 # Offset: 268
    0000010e: 	testq	%rbp, %rbp
    00000111: 	je	.Ltmp594 # Offset: 273
.Ltmp593:
    00000117: 	movq	%r13, 0x18(%rsp)
    0000011c: 	cmpq	$0xf, %r13
    00000120: 	ja	.Ltmp595 # Offset: 288
    00000126: 	cmpq	$0x1, %r13
    0000012a: 	jne	.Ltmp596 # Offset: 298
    0000012c: 	movzbl	(%rbp), %eax
    00000130: 	movb	%al, 0x30(%rsp)
    00000134: 	movq	%rbx, %rax
.Ltmp601:
    00000137: 	movq	%r13, 0x28(%rsp)
    0000013c: 	movq	%r12, %rdi
    0000013f: 	movb	$0x0, (%rax,%r13)
    00000144: 	movq	0x28(%rsp), %rdx
    00000149: 	movq	0x20(%rsp), %rsi
    0000014e: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 334
    00000153: 	movq	0x20(%rsp), %rdi
    00000158: 	cmpq	%rbx, %rdi
    0000015b: 	je	.Ltmp597 # Offset: 347
    0000015d: 	movq	0x30(%rsp), %rax
    00000162: 	leaq	0x1(%rax), %rsi
    00000166: 	callq	_ZdlPvm@PLT # Offset: 358
.Ltmp597:
    0000016b: 	movq	0x48(%rsp), %rax
    00000170: 	subq	%fs:0x28, %rax
    00000179: 	jne	.Ltmp598 # Offset: 377
    0000017f: 	addq	$0x50, %rsp
    00000183: 	popq	%rbx
    00000184: 	popq	%rbp
    00000185: 	popq	%r12
    00000187: 	popq	%r13
    00000189: 	popq	%r14
    0000018b: 	retq # Offset: 395
    0000018c: 	nopl	(%rax) # Size: 4
.Ltmp591:
    00000190: 	movl	$0xffffffff, %eax
    00000195: 	lock # Offset: 405
    00000196: 	xaddl	%eax, 0x8(%rbp)
    0000019a: 	jmp	.Ltmp599 # Offset: 410
    0000019f: 	nop # Size: 1
.Ltmp596:
    000001a0: 	testq	%r13, %r13
    000001a3: 	jne	.Ltmp600 # Offset: 419
    000001a5: 	movq	%rbx, %rax
    000001a8: 	jmp	.Ltmp601 # Offset: 424
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp592:
    000001b0: 	movl	$0xffffffff, %eax
    000001b5: 	lock # Offset: 437
    000001b6: 	xaddl	%eax, 0xc(%rbp)
    000001ba: 	jmp	.Ltmp602 # Offset: 442
    000001bf: 	nop # Size: 1
.Ltmp595:
    000001c0: 	leaq	0x20(%rsp), %rdi
    000001c5: 	leaq	0x18(%rsp), %rsi
    000001ca: 	xorl	%edx, %edx
    000001cc: 	movsd	%xmm0, 0x8(%rsp)
    000001d2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 466
    000001d7: 	movsd	0x8(%rsp), %xmm0
    000001dd: 	movq	%rax, 0x20(%rsp)
    000001e2: 	movq	%rax, %rdi
    000001e5: 	movq	0x18(%rsp), %rax
    000001ea: 	movq	%rax, 0x30(%rsp)
.Ltmp603:
    000001ef: 	movq	%r13, %rdx
    000001f2: 	movq	%rbp, %rsi
    000001f5: 	movsd	%xmm0, 0x8(%rsp)
    000001fb: 	callq	memcpy@PLT # Offset: 507
    00000200: 	movq	0x18(%rsp), %r13
    00000205: 	movq	0x20(%rsp), %rax
    0000020a: 	movsd	0x8(%rsp), %xmm0
    00000210: 	jmp	.Ltmp601 # Offset: 528
.Ltmp598:
    00000215: 	callq	__stack_chk_fail@PLT # Offset: 533
.Ltmp600:
    0000021a: 	movq	%rbx, %rdi
    0000021d: 	jmp	.Ltmp603 # Offset: 541
.Ltmp594:
    0000021f: 	leaq	DATAat0x17008(%rip), %rdi
    00000226: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 550
    0000022b: 	endbr64
    0000022f: 	movq	%rax, %rbp
    00000232: 	movq	0x20(%rsp), %rdi
    00000237: 	cmpq	%rbx, %rdi
    0000023a: 	je	.Ltmp604 # Offset: 570
    0000023c: 	movq	0x30(%rsp), %rax
    00000241: 	leaq	0x1(%rax), %rsi
    00000245: 	callq	_ZdlPvm@PLT # Offset: 581
.Ltmp604:
    0000024a: 	movq	%rbp, %rdi
    0000024d: 	callq	_Unwind_Resume@PLT # Offset: 589
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 84
  State       : disassembled
  Address     : 0x7e80
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x7e80
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp607:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp605 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp606:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rax, %rdx
    00000076: 	jne	.Ltmp606 # Offset: 118
.Ltmp605:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp607 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp608 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp609 # Offset: 192
.Ltmp608:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp610 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp611 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp620:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp612 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp612:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp613 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp609 # Offset: 319
.Ltmp613:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp614 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp615 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp622:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp616 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp616:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp617 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp617:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp618 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp611:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp619 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp620 # Offset: 479
.Ltmp615:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp621 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp622 # Offset: 496
.Ltmp614:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp624:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp622 # Offset: 557
.Ltmp610:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp623:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp620 # Offset: 661
.Ltmp618:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp619:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp623 # Offset: 679
.Ltmp621:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp624 # Offset: 684
.Ltmp609:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp625 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp626 # Offset: 717
.Ltmp625:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp627 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp627:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp626:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp627 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp627 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0x8190
  Size        : 0x1fb
  MaxSize     : 0x200
  Offset      : 0x8190
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	$0x14, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	movl	$0x7b, %edi
    0000001e: 	subq	$0x48, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x38(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	srand@PLT # Offset: 50
    00000037: 	callq	clock@PLT # Offset: 55
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	movq	0x8(%rbx), %rax
.Ltmp630:
    00000047: 	movq	(%rbx), %r13
    0000004a: 	cmpq	%rax, %r13
    0000004d: 	je	.Ltmp628 # Offset: 77
    0000004f: 	nop # Size: 1
.Ltmp629:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, %xmm0
    00000068: 	movq	%rax, 0x60(%rdx)
    0000006c: 	movq	0x8(%rbx), %rax
    00000070: 	punpcklqdq	%xmm0, %xmm0
    00000074: 	movups	%xmm0, (%rdx)
    00000077: 	movups	%xmm0, 0x10(%rdx)
    0000007b: 	movups	%xmm0, 0x20(%rdx)
    0000007f: 	movups	%xmm0, 0x30(%rdx)
    00000083: 	movups	%xmm0, 0x40(%rdx)
    00000087: 	movups	%xmm0, 0x50(%rdx)
    0000008b: 	cmpq	%r13, %rax
    0000008e: 	jne	.Ltmp629 # Offset: 142
    00000090: 	subq	$0x1, %rbp
    00000094: 	jne	.Ltmp630 # Offset: 148
.Ltmp628:
    00000096: 	callq	clock@PLT # Offset: 150
    0000009b: 	movq	(%r12), %r15
    0000009f: 	pxor	%xmm0, %xmm0
    000000a3: 	movq	0x8(%r12), %r12
    000000a8: 	movq	%rax, end_time(%rip)
    000000af: 	subq	start_time(%rip), %rax
    000000b6: 	leaq	0x20(%rsp), %rbp
    000000bb: 	cvtsi2sd	%rax, %xmm0
    000000c0: 	movq	%r15, %rax
    000000c3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000cb: 	movq	%rbp, 0x10(%rsp)
    000000d0: 	addq	%r12, %rax
    000000d3: 	movq	%xmm0, %r13
    000000d8: 	je	.Ltmp631 # Offset: 216
    000000da: 	testq	%r15, %r15
    000000dd: 	je	.Ltmp632 # Offset: 221
.Ltmp631:
    000000e3: 	movq	%r12, 0x8(%rsp)
    000000e8: 	cmpq	$0xf, %r12
    000000ec: 	ja	.Ltmp633 # Offset: 236
    000000f2: 	cmpq	$0x1, %r12
    000000f6: 	jne	.Ltmp634 # Offset: 246
    000000f8: 	movzbl	(%r15), %eax
    000000fc: 	leaq	0x10(%rsp), %r14
    00000101: 	movb	%al, 0x20(%rsp)
    00000105: 	movq	%rbp, %rax
    00000108: 	jmp	.Ltmp635 # Offset: 264
.Ltmp634:
    0000010a: 	testq	%r12, %r12
    0000010d: 	jne	.Ltmp636 # Offset: 269
    00000113: 	movq	%rbp, %rax
    00000116: 	leaq	0x10(%rsp), %r14
.Ltmp635:
    0000011b: 	movq	%r12, 0x18(%rsp)
    00000120: 	movq	%r14, %rdx
    00000123: 	movl	$0x14, %edi
    00000128: 	movq	%r13, %xmm0
    0000012d: 	movb	$0x0, (%rax,%r12)
    00000132: 	movq	0x8(%rbx), %rsi
    00000136: 	subq	(%rbx), %rsi
    00000139: 	sarq	$0x3, %rsi
    0000013d: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 317
    00000142: 	movq	0x10(%rsp), %rdi
    00000147: 	cmpq	%rbp, %rdi
    0000014a: 	je	.Ltmp637 # Offset: 330
    0000014c: 	movq	0x20(%rsp), %rax
    00000151: 	leaq	0x1(%rax), %rsi
    00000155: 	callq	_ZdlPvm@PLT # Offset: 341
.Ltmp637:
    0000015a: 	movq	0x38(%rsp), %rax
    0000015f: 	subq	%fs:0x28, %rax
    00000168: 	jne	.Ltmp638 # Offset: 360
    0000016a: 	addq	$0x48, %rsp
    0000016e: 	popq	%rbx
    0000016f: 	popq	%rbp
    00000170: 	popq	%r12
    00000172: 	popq	%r13
    00000174: 	popq	%r14
    00000176: 	popq	%r15
    00000178: 	retq # Offset: 376
.Ltmp633:
    00000179: 	leaq	0x10(%rsp), %r14
    0000017e: 	leaq	0x8(%rsp), %rsi
    00000183: 	xorl	%edx, %edx
    00000185: 	movq	%r14, %rdi
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, 0x10(%rsp)
    00000192: 	movq	%rax, %rdi
    00000195: 	movq	0x8(%rsp), %rax
    0000019a: 	movq	%rax, 0x20(%rsp)
.Ltmp639:
    0000019f: 	movq	%r12, %rdx
    000001a2: 	movq	%r15, %rsi
    000001a5: 	callq	memcpy@PLT # Offset: 421
    000001aa: 	movq	0x8(%rsp), %r12
    000001af: 	movq	0x10(%rsp), %rax
    000001b4: 	jmp	.Ltmp635 # Offset: 436
.Ltmp636:
    000001b9: 	movq	%rbp, %rdi
    000001bc: 	leaq	0x10(%rsp), %r14
    000001c1: 	jmp	.Ltmp639 # Offset: 449
.Ltmp638:
    000001c3: 	callq	__stack_chk_fail@PLT # Offset: 451
.Ltmp632:
    000001c8: 	leaq	DATAat0x17008(%rip), %rdi
    000001cf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 463
    000001d4: 	endbr64
    000001d8: 	movq	%rax, %r12
    000001db: 	movq	0x10(%rsp), %rdi
    000001e0: 	cmpq	%rbp, %rdi
    000001e3: 	je	.Ltmp640 # Offset: 483
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	leaq	0x1(%rax), %rsi
    000001ee: 	callq	_ZdlPvm@PLT # Offset: 494
.Ltmp640:
    000001f3: 	movq	%r12, %rdi
    000001f6: 	callq	_Unwind_Resume@PLT # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayI17VariableContainerIlLi13EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0x8390
  Size        : 0x1c2
  MaxSize     : 0x1d0
  Offset      : 0x8390
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayI17VariableContainerIlLi13EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	movq	%rdi, %r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %rbp
    0000001c: 	subq	(%rdi), %rbp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x3, %rbp
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testq	%rbp, %rbp
    00000042: 	je	.Ltmp641 # Offset: 66
    00000044: 	nopl	(%rax) # Size: 4
.Ltmp643:
    00000048: 	movq	(%r12), %rax
    0000004c: 	movq	(%rax,%rbx,8), %rdi
    00000050: 	testq	%rdi, %rdi
    00000053: 	je	.Ltmp642 # Offset: 83
    00000055: 	movl	$0x68, %esi
    0000005a: 	callq	_ZdlPvm@PLT # Offset: 90
.Ltmp642:
    0000005f: 	addq	$0x1, %rbx
    00000063: 	cmpq	%rbp, %rbx
    00000066: 	jne	.Ltmp643 # Offset: 102
.Ltmp641:
    00000068: 	callq	clock@PLT # Offset: 104
    0000006d: 	movq	(%r13), %r14
    00000071: 	movq	0x8(%r13), %r12
    00000075: 	pxor	%xmm0, %xmm0
    00000079: 	movq	%rax, end_time(%rip)
    00000080: 	subq	start_time(%rip), %rax
    00000087: 	leaq	0x30(%rsp), %rbx
    0000008c: 	cvtsi2sd	%rax, %xmm0
    00000091: 	movq	%r14, %rax
    00000094: 	movq	%rbx, 0x20(%rsp)
    00000099: 	divsd	DATAat0x17370(%rip), %xmm0
    000000a1: 	addq	%r12, %rax
    000000a4: 	je	.Ltmp644 # Offset: 164
    000000a6: 	testq	%r14, %r14
    000000a9: 	je	.Ltmp645 # Offset: 169
.Ltmp644:
    000000af: 	movq	%r12, 0x18(%rsp)
    000000b4: 	cmpq	$0xf, %r12
    000000b8: 	ja	.Ltmp646 # Offset: 184
    000000ba: 	cmpq	$0x1, %r12
    000000be: 	jne	.Ltmp647 # Offset: 190
    000000c0: 	movzbl	(%r14), %eax
    000000c4: 	movb	%al, 0x30(%rsp)
    000000c8: 	movq	%rbx, %rax
.Ltmp651:
    000000cb: 	movq	%r12, 0x28(%rsp)
    000000d0: 	movq	%rbp, %rdi
    000000d3: 	movb	$0x0, (%rax,%r12)
    000000d8: 	movq	0x28(%rsp), %rdx
    000000dd: 	movq	0x20(%rsp), %rsi
    000000e2: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 226
    000000e7: 	movq	0x20(%rsp), %rdi
    000000ec: 	cmpq	%rbx, %rdi
    000000ef: 	je	.Ltmp648 # Offset: 239
    000000f1: 	movq	0x30(%rsp), %rax
    000000f6: 	leaq	0x1(%rax), %rsi
    000000fa: 	callq	_ZdlPvm@PLT # Offset: 250
.Ltmp648:
    000000ff: 	movq	0x48(%rsp), %rax
    00000104: 	subq	%fs:0x28, %rax
    0000010d: 	jne	.Ltmp649 # Offset: 269
    0000010f: 	addq	$0x50, %rsp
    00000113: 	popq	%rbx
    00000114: 	popq	%rbp
    00000115: 	popq	%r12
    00000117: 	popq	%r13
    00000119: 	popq	%r14
    0000011b: 	retq # Offset: 283
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp647:
    00000120: 	testq	%r12, %r12
    00000123: 	jne	.Ltmp650 # Offset: 291
    00000125: 	movq	%rbx, %rax
    00000128: 	jmp	.Ltmp651 # Offset: 296
    0000012a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp646:
    00000130: 	leaq	0x20(%rsp), %rdi
    00000135: 	leaq	0x18(%rsp), %rsi
    0000013a: 	xorl	%edx, %edx
    0000013c: 	movsd	%xmm0, 0x8(%rsp)
    00000142: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 322
    00000147: 	movsd	0x8(%rsp), %xmm0
    0000014d: 	movq	%rax, 0x20(%rsp)
    00000152: 	movq	%rax, %rdi
    00000155: 	movq	0x18(%rsp), %rax
    0000015a: 	movq	%rax, 0x30(%rsp)
.Ltmp652:
    0000015f: 	movq	%r12, %rdx
    00000162: 	movq	%r14, %rsi
    00000165: 	movsd	%xmm0, 0x8(%rsp)
    0000016b: 	callq	memcpy@PLT # Offset: 363
    00000170: 	movq	0x18(%rsp), %r12
    00000175: 	movq	0x20(%rsp), %rax
    0000017a: 	movsd	0x8(%rsp), %xmm0
    00000180: 	jmp	.Ltmp651 # Offset: 384
.Ltmp649:
    00000185: 	callq	__stack_chk_fail@PLT # Offset: 389
.Ltmp650:
    0000018a: 	movq	%rbx, %rdi
    0000018d: 	jmp	.Ltmp652 # Offset: 397
.Ltmp645:
    0000018f: 	leaq	DATAat0x17008(%rip), %rdi
    00000196: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 406
    0000019b: 	endbr64
    0000019f: 	movq	%rax, %rbp
    000001a2: 	movq	0x20(%rsp), %rdi
    000001a7: 	cmpq	%rbx, %rdi
    000001aa: 	je	.Ltmp653 # Offset: 426
    000001ac: 	movq	0x30(%rsp), %rax
    000001b1: 	leaq	0x1(%rax), %rsi
    000001b5: 	callq	_ZdlPvm@PLT # Offset: 437
.Ltmp653:
    000001ba: 	movq	%rbp, %rdi
    000001bd: 	callq	_Unwind_Resume@PLT # Offset: 445
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayI17VariableContainerIlLi13EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi13EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 87
  State       : disassembled
  Address     : 0x8560
  Size        : 0x248
  MaxSize     : 0x250
  Offset      : 0x8560
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi13EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp654 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
.Ltmp661:
    0000004f: 	callq	clock@PLT # Offset: 79
    00000054: 	movq	(%r14), %rsi
    00000057: 	movq	0x8(%r14), %rdx
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	movq	%rax, end_time(%rip)
    00000066: 	leaq	0x20(%rsp), %rbp
    0000006b: 	subq	start_time(%rip), %rax
    00000072: 	leaq	0x10(%rsp), %rdi
    00000077: 	addq	%rsi, %rdx
    0000007a: 	cvtsi2sd	%rax, %xmm0
    0000007f: 	movq	%rbp, 0x10(%rsp)
    00000084: 	divsd	DATAat0x17370(%rip), %xmm0
    0000008c: 	movq	%xmm0, %rbx
    00000091: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 145
    00000096: 	movq	0x18(%rsp), %rdx
    0000009b: 	movq	0x10(%rsp), %rsi
    000000a0: 	movq	%r15, %rdi
    000000a3: 	movq	%rbx, %xmm0
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x10(%rsp), %rdi
    000000b2: 	cmpq	%rbp, %rdi
    000000b5: 	je	.Ltmp655 # Offset: 181
    000000b7: 	movq	0x20(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp655:
    000000c5: 	movq	0x38(%rsp), %rax
    000000ca: 	subq	%fs:0x28, %rax
    000000d3: 	jne	.Ltmp656 # Offset: 211
    000000d9: 	addq	$0x48, %rsp
    000000dd: 	movq	%r12, %rax
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	retq # Offset: 234
.Ltmp654:
    000000eb: 	movq	%r15, %rax
    000000ee: 	shrq	$0x3c, %rax
    000000f2: 	jne	.Ltmp657 # Offset: 242
    000000f8: 	leaq	(,%r15,8), %r13
    00000100: 	movslq	%edx, %rbp
    00000103: 	movq	%r13, %rdi
    00000106: 	callq	_Znwm@PLT # Offset: 262
    0000010b: 	movq	%rax, %rdi
    0000010e: 	movq	%r13, %rdx
    00000111: 	xorl	%esi, %esi
    00000113: 	movq	%r15, %rbx
    00000116: 	callq	memset@PLT # Offset: 278
    0000011b: 	movq	(%r12), %rdi
    0000011f: 	movq	%rax, %rcx
    00000122: 	movq	0x8(%r12), %rax
    00000127: 	cmpq	%rdi, %rax
    0000012a: 	je	.Ltmp658 # Offset: 298
    0000012c: 	subq	%rdi, %rax
    0000012f: 	movq	%rdi, %rdx
    00000132: 	leaq	(%rcx,%rax), %rsi
    00000136: 	movq	%rcx, %rax
.Ltmp659:
    00000139: 	movq	(%rdx), %r8
    0000013c: 	addq	$0x8, %rax
    00000140: 	addq	$0x8, %rdx
    00000144: 	movq	%r8, -0x8(%rax)
    00000148: 	cmpq	%rsi, %rax
    0000014b: 	jne	.Ltmp659 # Offset: 331
.Ltmp658:
    0000014d: 	testq	%rdi, %rdi
    00000150: 	je	.Ltmp660 # Offset: 336
    00000152: 	movq	0x10(%r12), %rsi
    00000157: 	movq	%rcx, 0x8(%rsp)
    0000015c: 	subq	%rdi, %rsi
    0000015f: 	callq	_ZdlPvm@PLT # Offset: 351
    00000164: 	movq	0x8(%rsp), %rcx
.Ltmp660:
    00000169: 	addq	%rcx, %r13
    0000016c: 	movq	%rcx, %xmm0
    00000171: 	movq	%r13, %xmm1
    00000176: 	movq	%r13, 0x10(%r12)
    0000017b: 	punpcklqdq	%xmm1, %xmm0
    0000017f: 	movups	%xmm0, (%r12)
    00000184: 	callq	clock@PLT # Offset: 388
    00000189: 	movq	%rax, start_time(%rip)
    00000190: 	testl	%ebx, %ebx
    00000192: 	jle	.Ltmp661 # Offset: 402
    00000198: 	leaq	(,%r15,8), %r13
    000001a0: 	xorl	%ebx, %ebx
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp662:
    000001a8: 	movl	$0x68, %edi
    000001ad: 	callq	_Znwm@PLT # Offset: 429
    000001b2: 	movq	(%r12), %rdx
    000001b6: 	movq	%rbp, %xmm0
    000001bb: 	movq	%rbp, 0x60(%rax)
    000001bf: 	punpcklqdq	%xmm0, %xmm0
    000001c3: 	movups	%xmm0, (%rax)
    000001c6: 	movups	%xmm0, 0x10(%rax)
    000001ca: 	movups	%xmm0, 0x20(%rax)
    000001ce: 	movups	%xmm0, 0x30(%rax)
    000001d2: 	movups	%xmm0, 0x40(%rax)
    000001d6: 	movups	%xmm0, 0x50(%rax)
    000001da: 	movq	%rax, (%rdx,%rbx)
    000001de: 	addq	$0x8, %rbx
    000001e2: 	cmpq	%r13, %rbx
    000001e5: 	jne	.Ltmp662 # Offset: 485
    000001e7: 	jmp	.Ltmp661 # Offset: 487
.Ltmp657:
    000001ec: 	leaq	DATAat0x17138(%rip), %rdi
    000001f3: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 499
.Ltmp656:
    000001f8: 	callq	__stack_chk_fail@PLT # Offset: 504
    000001fd: 	endbr64
    00000201: 	movq	%rax, %rbx
    00000204: 	jmp	.Ltmp663 # Offset: 516
    00000206: 	endbr64
    0000020a: 	movq	%rax, %rbp
    0000020d: 	jmp	.Ltmp664 # Offset: 525
.Ltmp663:
    0000020f: 	movq	0x10(%rsp), %rdi
    00000214: 	cmpq	%rbp, %rdi
    00000217: 	je	.Ltmp665 # Offset: 535
    00000219: 	movq	0x20(%rsp), %rax
    0000021e: 	leaq	0x1(%rax), %rsi
    00000222: 	callq	_ZdlPvm@PLT # Offset: 546
.Ltmp665:
    00000227: 	movq	%rbx, %rbp
.Ltmp664:
    0000022a: 	movq	(%r12), %rdi
    0000022e: 	movq	0x10(%r12), %rsi
    00000233: 	subq	%rdi, %rsi
    00000236: 	testq	%rdi, %rdi
    00000239: 	je	.Ltmp666 # Offset: 569
    0000023b: 	callq	_ZdlPvm@PLT # Offset: 571
.Ltmp666:
    00000240: 	movq	%rbp, %rdi
    00000243: 	callq	_Unwind_Resume@PLT # Offset: 579
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi13EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 88
  State       : disassembled
  Address     : 0x87b0
  Size        : 0x22a
  MaxSize     : 0x230
  Offset      : 0x87b0
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rsi, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rdx, %rbx
    0000001b: 	subq	$0x38, %rsp
    0000001f: 	movq	0x8(%rsi), %r14
    00000023: 	subq	(%rsi), %r14
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x28(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%r14, %rbp
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x3, %rbp
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%r14, %r14
    0000004b: 	jne	.Ltmp667 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%rbp, %rbp
    00000060: 	je	.Ltmp668 # Offset: 96
.Ltmp677:
    00000062: 	movq	(%r12), %rsi
    00000066: 	movq	(%r13), %rcx
    0000006a: 	xorl	%eax, %eax
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp669:
    00000070: 	movq	(%rcx,%rax,8), %rdx
    00000074: 	movq	%rdx, (%rsi,%rax,8)
    00000078: 	addq	$0x1, %rax
    0000007c: 	cmpq	%rbp, %rax
    0000007f: 	jb	.Ltmp669 # Offset: 127
.Ltmp668:
    00000081: 	callq	clock@PLT # Offset: 129
    00000086: 	movq	(%rbx), %rsi
    00000089: 	movq	0x8(%rbx), %rdx
    0000008d: 	pxor	%xmm0, %xmm0
    00000091: 	movq	%rax, end_time(%rip)
    00000098: 	leaq	0x10(%rsp), %r14
    0000009d: 	subq	start_time(%rip), %rax
    000000a4: 	movq	%rsp, %rdi
    000000a7: 	addq	%rsi, %rdx
    000000aa: 	cvtsi2sd	%rax, %xmm0
    000000af: 	movq	%r14, (%rsp)
    000000b3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000bb: 	movq	%xmm0, %r13
    000000c0: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 192
    000000c5: 	movq	0x8(%rsp), %rdx
    000000ca: 	movq	(%rsp), %rsi
    000000ce: 	movq	%rbp, %rdi
    000000d1: 	movq	%r13, %xmm0
    000000d6: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 214
    000000db: 	movq	(%rsp), %rdi
    000000df: 	cmpq	%r14, %rdi
    000000e2: 	je	.Ltmp670 # Offset: 226
    000000e4: 	movq	0x10(%rsp), %rax
    000000e9: 	leaq	0x1(%rax), %rsi
    000000ed: 	callq	_ZdlPvm@PLT # Offset: 237
.Ltmp670:
    000000f2: 	movq	0x28(%rsp), %rax
    000000f7: 	subq	%fs:0x28, %rax
    00000100: 	jne	.Ltmp671 # Offset: 256
    00000106: 	addq	$0x38, %rsp
    0000010a: 	movq	%r12, %rax
    0000010d: 	popq	%rbx
    0000010e: 	popq	%rbp
    0000010f: 	popq	%r12
    00000111: 	popq	%r13
    00000113: 	popq	%r14
    00000115: 	popq	%r15
    00000117: 	retq # Offset: 279
    00000118: 	nopl	(%rax,%rax) # Size: 8
.Ltmp667:
    00000120: 	testq	%rbp, %rbp
    00000123: 	jne	.Ltmp672 # Offset: 291
    00000125: 	movq	$0x0, 0x8(%rdi)
    0000012d: 	callq	clock@PLT # Offset: 301
    00000132: 	movq	%rax, start_time(%rip)
    00000139: 	jmp	.Ltmp668 # Offset: 313
.Ltmp672:
    0000013e: 	movabsq	$0x7ffffffffffffff8, %rax
    00000148: 	cmpq	%rax, %r14
    0000014b: 	ja	.Ltmp673 # Offset: 331
    00000151: 	movq	%r14, %rdi
    00000154: 	callq	_Znwm@PLT # Offset: 340
    00000159: 	xorl	%esi, %esi
    0000015b: 	movq	%rax, %rdi
    0000015e: 	movq	%r14, %rdx
    00000161: 	movq	%rax, %r15
    00000164: 	callq	memset@PLT # Offset: 356
    00000169: 	movq	0x8(%r12), %rsi
    0000016e: 	movq	(%r12), %rdi
    00000172: 	cmpq	%rdi, %rsi
    00000175: 	je	.Ltmp674 # Offset: 373
    00000177: 	subq	%rdi, %rsi
    0000017a: 	movq	%rdi, %rdx
    0000017d: 	addq	%r15, %rsi
.Ltmp675:
    00000180: 	movq	(%rdx), %rcx
    00000183: 	addq	$0x8, %rax
    00000187: 	addq	$0x8, %rdx
    0000018b: 	movq	%rcx, -0x8(%rax)
    0000018f: 	cmpq	%rsi, %rax
    00000192: 	jne	.Ltmp675 # Offset: 402
.Ltmp674:
    00000194: 	testq	%rdi, %rdi
    00000197: 	je	.Ltmp676 # Offset: 407
    00000199: 	movq	0x10(%r12), %rsi
    0000019e: 	subq	%rdi, %rsi
    000001a1: 	callq	_ZdlPvm@PLT # Offset: 417
.Ltmp676:
    000001a6: 	addq	%r15, %r14
    000001a9: 	movq	%r15, %xmm0
    000001ae: 	movq	%r14, %xmm1
    000001b3: 	movq	%r14, 0x10(%r12)
    000001b8: 	punpcklqdq	%xmm1, %xmm0
    000001bc: 	movups	%xmm0, (%r12)
    000001c1: 	callq	clock@PLT # Offset: 449
    000001c6: 	movq	%rax, start_time(%rip)
    000001cd: 	jmp	.Ltmp677 # Offset: 461
.Ltmp673:
    000001d2: 	leaq	DATAat0x17138(%rip), %rdi
    000001d9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 473
.Ltmp671:
    000001de: 	callq	__stack_chk_fail@PLT # Offset: 478
    000001e3: 	endbr64
    000001e7: 	movq	%rax, %rbp
    000001ea: 	jmp	.Ltmp678 # Offset: 490
    000001ec: 	endbr64
    000001f0: 	movq	%rax, %rbp
    000001f3: 	jmp	.Ltmp679 # Offset: 499
.Ltmp678:
    000001f5: 	movq	(%rsp), %rdi
    000001f9: 	cmpq	%r14, %rdi
    000001fc: 	je	.Ltmp679 # Offset: 508
    000001fe: 	movq	0x10(%rsp), %rax
    00000203: 	leaq	0x1(%rax), %rsi
    00000207: 	callq	_ZdlPvm@PLT # Offset: 519
.Ltmp679:
    0000020c: 	movq	(%r12), %rdi
    00000210: 	movq	0x10(%r12), %rsi
    00000215: 	subq	%rdi, %rsi
    00000218: 	testq	%rdi, %rdi
    0000021b: 	je	.Ltmp680 # Offset: 539
    0000021d: 	callq	_ZdlPvm@PLT # Offset: 541
.Ltmp680:
    00000222: 	movq	%rbp, %rdi
    00000225: 	callq	_Unwind_Resume@PLT # Offset: 549
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 89
  State       : disassembled
  Address     : 0x89e0
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x89e0
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp683:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp681 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp682:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp682 # Offset: 118
.Ltmp681:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp683 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp684 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp685 # Offset: 192
.Ltmp684:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp686 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp687 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp696:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp688 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp688:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp689 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp685 # Offset: 319
.Ltmp689:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp690 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp691 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp698:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp692 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp692:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp693 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp693:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp694 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp687:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp695 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp696 # Offset: 479
.Ltmp691:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp697 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp698 # Offset: 496
.Ltmp690:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp700:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp698 # Offset: 557
.Ltmp686:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp699:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp696 # Offset: 661
.Ltmp694:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp695:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp699 # Offset: 679
.Ltmp697:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp700 # Offset: 684
.Ltmp685:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp701 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp702 # Offset: 717
.Ltmp701:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp703 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp703:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp702:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp703 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp703 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 90
  State       : disassembled
  Address     : 0x8cf0
  Size        : 0x1fb
  MaxSize     : 0x200
  Offset      : 0x8cf0
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	$0x14, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	movl	$0x7b, %edi
    0000001e: 	subq	$0x48, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x38(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	srand@PLT # Offset: 50
    00000037: 	callq	clock@PLT # Offset: 55
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	movq	0x8(%rbx), %rax
.Ltmp706:
    00000047: 	movq	(%rbx), %r13
    0000004a: 	cmpq	%rax, %r13
    0000004d: 	je	.Ltmp704 # Offset: 77
    0000004f: 	nop # Size: 1
.Ltmp705:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, %xmm0
    00000068: 	movq	%rax, 0x60(%rdx)
    0000006c: 	movq	0x8(%rbx), %rax
    00000070: 	punpcklqdq	%xmm0, %xmm0
    00000074: 	movups	%xmm0, (%rdx)
    00000077: 	movups	%xmm0, 0x10(%rdx)
    0000007b: 	movups	%xmm0, 0x20(%rdx)
    0000007f: 	movups	%xmm0, 0x30(%rdx)
    00000083: 	movups	%xmm0, 0x40(%rdx)
    00000087: 	movups	%xmm0, 0x50(%rdx)
    0000008b: 	cmpq	%r13, %rax
    0000008e: 	jne	.Ltmp705 # Offset: 142
    00000090: 	subq	$0x1, %rbp
    00000094: 	jne	.Ltmp706 # Offset: 148
.Ltmp704:
    00000096: 	callq	clock@PLT # Offset: 150
    0000009b: 	movq	(%r12), %r15
    0000009f: 	pxor	%xmm0, %xmm0
    000000a3: 	movq	0x8(%r12), %r12
    000000a8: 	movq	%rax, end_time(%rip)
    000000af: 	subq	start_time(%rip), %rax
    000000b6: 	leaq	0x20(%rsp), %rbp
    000000bb: 	cvtsi2sd	%rax, %xmm0
    000000c0: 	movq	%r15, %rax
    000000c3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000cb: 	movq	%rbp, 0x10(%rsp)
    000000d0: 	addq	%r12, %rax
    000000d3: 	movq	%xmm0, %r13
    000000d8: 	je	.Ltmp707 # Offset: 216
    000000da: 	testq	%r15, %r15
    000000dd: 	je	.Ltmp708 # Offset: 221
.Ltmp707:
    000000e3: 	movq	%r12, 0x8(%rsp)
    000000e8: 	cmpq	$0xf, %r12
    000000ec: 	ja	.Ltmp709 # Offset: 236
    000000f2: 	cmpq	$0x1, %r12
    000000f6: 	jne	.Ltmp710 # Offset: 246
    000000f8: 	movzbl	(%r15), %eax
    000000fc: 	leaq	0x10(%rsp), %r14
    00000101: 	movb	%al, 0x20(%rsp)
    00000105: 	movq	%rbp, %rax
    00000108: 	jmp	.Ltmp711 # Offset: 264
.Ltmp710:
    0000010a: 	testq	%r12, %r12
    0000010d: 	jne	.Ltmp712 # Offset: 269
    00000113: 	movq	%rbp, %rax
    00000116: 	leaq	0x10(%rsp), %r14
.Ltmp711:
    0000011b: 	movq	%r12, 0x18(%rsp)
    00000120: 	movq	%r14, %rdx
    00000123: 	movl	$0x14, %edi
    00000128: 	movq	%r13, %xmm0
    0000012d: 	movb	$0x0, (%rax,%r12)
    00000132: 	movq	0x8(%rbx), %rsi
    00000136: 	subq	(%rbx), %rsi
    00000139: 	sarq	$0x3, %rsi
    0000013d: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 317
    00000142: 	movq	0x10(%rsp), %rdi
    00000147: 	cmpq	%rbp, %rdi
    0000014a: 	je	.Ltmp713 # Offset: 330
    0000014c: 	movq	0x20(%rsp), %rax
    00000151: 	leaq	0x1(%rax), %rsi
    00000155: 	callq	_ZdlPvm@PLT # Offset: 341
.Ltmp713:
    0000015a: 	movq	0x38(%rsp), %rax
    0000015f: 	subq	%fs:0x28, %rax
    00000168: 	jne	.Ltmp714 # Offset: 360
    0000016a: 	addq	$0x48, %rsp
    0000016e: 	popq	%rbx
    0000016f: 	popq	%rbp
    00000170: 	popq	%r12
    00000172: 	popq	%r13
    00000174: 	popq	%r14
    00000176: 	popq	%r15
    00000178: 	retq # Offset: 376
.Ltmp709:
    00000179: 	leaq	0x10(%rsp), %r14
    0000017e: 	leaq	0x8(%rsp), %rsi
    00000183: 	xorl	%edx, %edx
    00000185: 	movq	%r14, %rdi
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, 0x10(%rsp)
    00000192: 	movq	%rax, %rdi
    00000195: 	movq	0x8(%rsp), %rax
    0000019a: 	movq	%rax, 0x20(%rsp)
.Ltmp715:
    0000019f: 	movq	%r12, %rdx
    000001a2: 	movq	%r15, %rsi
    000001a5: 	callq	memcpy@PLT # Offset: 421
    000001aa: 	movq	0x8(%rsp), %r12
    000001af: 	movq	0x10(%rsp), %rax
    000001b4: 	jmp	.Ltmp711 # Offset: 436
.Ltmp712:
    000001b9: 	movq	%rbp, %rdi
    000001bc: 	leaq	0x10(%rsp), %r14
    000001c1: 	jmp	.Ltmp715 # Offset: 449
.Ltmp714:
    000001c3: 	callq	__stack_chk_fail@PLT # Offset: 451
.Ltmp708:
    000001c8: 	leaq	DATAat0x17008(%rip), %rdi
    000001cf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 463
    000001d4: 	endbr64
    000001d8: 	movq	%rax, %r12
    000001db: 	movq	0x10(%rsp), %rdi
    000001e0: 	cmpq	%rbp, %rdi
    000001e3: 	je	.Ltmp716 # Offset: 483
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	leaq	0x1(%rax), %rsi
    000001ee: 	callq	_ZdlPvm@PLT # Offset: 494
.Ltmp716:
    000001f3: 	movq	%r12, %rdi
    000001f6: 	callq	_Unwind_Resume@PLT # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 91
  State       : disassembled
  Address     : 0x8ef0
  Size        : 0x1e2
  MaxSize     : 0x1f0
  Offset      : 0x8ef0
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rsi, %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %r12
    0000001c: 	subq	(%rdi), %r12
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x3, %r12
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	testq	%r12, %r12
    00000042: 	jne	.Ltmp717 # Offset: 66
    00000044: 	jmp	.Ltmp718 # Offset: 68
    00000046: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp719:
    00000050: 	movl	$0x68, %esi
    00000055: 	addq	$0x1, %rbx
    00000059: 	callq	_ZdlPvm@PLT # Offset: 89
    0000005e: 	movq	$0x0, (%rbp)
    00000066: 	cmpq	%rbx, %r12
    00000069: 	je	.Ltmp718 # Offset: 105
.Ltmp717:
    0000006b: 	movq	(%r13), %rax
.Ltmp720:
    0000006f: 	leaq	(%rax,%rbx,8), %rbp
    00000073: 	movq	(%rbp), %rdi
    00000077: 	testq	%rdi, %rdi
    0000007a: 	jne	.Ltmp719 # Offset: 122
    0000007c: 	addq	$0x1, %rbx
    00000080: 	cmpq	%r12, %rbx
    00000083: 	jne	.Ltmp720 # Offset: 131
.Ltmp718:
    00000085: 	callq	clock@PLT # Offset: 133
    0000008a: 	movq	(%r14), %rbp
    0000008d: 	movq	0x8(%r14), %r13
    00000091: 	pxor	%xmm0, %xmm0
    00000095: 	movq	%rax, end_time(%rip)
    0000009c: 	subq	start_time(%rip), %rax
    000000a3: 	leaq	0x30(%rsp), %rbx
    000000a8: 	cvtsi2sd	%rax, %xmm0
    000000ad: 	movq	%rbp, %rax
    000000b0: 	movq	%rbx, 0x20(%rsp)
    000000b5: 	divsd	DATAat0x17370(%rip), %xmm0
    000000bd: 	addq	%r13, %rax
    000000c0: 	je	.Ltmp721 # Offset: 192
    000000c2: 	testq	%rbp, %rbp
    000000c5: 	je	.Ltmp722 # Offset: 197
.Ltmp721:
    000000cb: 	movq	%r13, 0x18(%rsp)
    000000d0: 	cmpq	$0xf, %r13
    000000d4: 	ja	.Ltmp723 # Offset: 212
    000000d6: 	cmpq	$0x1, %r13
    000000da: 	jne	.Ltmp724 # Offset: 218
    000000dc: 	movzbl	(%rbp), %eax
    000000e0: 	movb	%al, 0x30(%rsp)
    000000e4: 	movq	%rbx, %rax
.Ltmp728:
    000000e7: 	movq	%r13, 0x28(%rsp)
    000000ec: 	movq	%r12, %rdi
    000000ef: 	movb	$0x0, (%rax,%r13)
    000000f4: 	movq	0x28(%rsp), %rdx
    000000f9: 	movq	0x20(%rsp), %rsi
    000000fe: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 254
    00000103: 	movq	0x20(%rsp), %rdi
    00000108: 	cmpq	%rbx, %rdi
    0000010b: 	je	.Ltmp725 # Offset: 267
    0000010d: 	movq	0x30(%rsp), %rax
    00000112: 	leaq	0x1(%rax), %rsi
    00000116: 	callq	_ZdlPvm@PLT # Offset: 278
.Ltmp725:
    0000011b: 	movq	0x48(%rsp), %rax
    00000120: 	subq	%fs:0x28, %rax
    00000129: 	jne	.Ltmp726 # Offset: 297
    0000012b: 	addq	$0x50, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	retq # Offset: 311
    00000138: 	nopl	(%rax,%rax) # Size: 8
.Ltmp724:
    00000140: 	testq	%r13, %r13
    00000143: 	jne	.Ltmp727 # Offset: 323
    00000145: 	movq	%rbx, %rax
    00000148: 	jmp	.Ltmp728 # Offset: 328
    0000014a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp723:
    00000150: 	leaq	0x20(%rsp), %rdi
    00000155: 	leaq	0x18(%rsp), %rsi
    0000015a: 	xorl	%edx, %edx
    0000015c: 	movsd	%xmm0, 0x8(%rsp)
    00000162: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 354
    00000167: 	movsd	0x8(%rsp), %xmm0
    0000016d: 	movq	%rax, 0x20(%rsp)
    00000172: 	movq	%rax, %rdi
    00000175: 	movq	0x18(%rsp), %rax
    0000017a: 	movq	%rax, 0x30(%rsp)
.Ltmp729:
    0000017f: 	movq	%r13, %rdx
    00000182: 	movq	%rbp, %rsi
    00000185: 	movsd	%xmm0, 0x8(%rsp)
    0000018b: 	callq	memcpy@PLT # Offset: 395
    00000190: 	movq	0x18(%rsp), %r13
    00000195: 	movq	0x20(%rsp), %rax
    0000019a: 	movsd	0x8(%rsp), %xmm0
    000001a0: 	jmp	.Ltmp728 # Offset: 416
.Ltmp726:
    000001a5: 	callq	__stack_chk_fail@PLT # Offset: 421
.Ltmp727:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	jmp	.Ltmp729 # Offset: 429
.Ltmp722:
    000001af: 	leaq	DATAat0x17008(%rip), %rdi
    000001b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 438
    000001bb: 	endbr64
    000001bf: 	movq	%rax, %rbp
    000001c2: 	movq	0x20(%rsp), %rdi
    000001c7: 	cmpq	%rbx, %rdi
    000001ca: 	je	.Ltmp730 # Offset: 458
    000001cc: 	movq	0x30(%rsp), %rax
    000001d1: 	leaq	0x1(%rax), %rsi
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
.Ltmp730:
    000001da: 	movq	%rbp, %rdi
    000001dd: 	callq	_Unwind_Resume@PLT # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev
                _ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED2Ev
  Number      : 92
  State       : disassembled
  Address     : 0x90e0
  Size        : 0x75
  MaxSize     : 0x80
  Offset      : 0x90e0
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	endbr64
    00000004: 	pushq	%r12
    00000006: 	movq	%rdi, %r12
    00000009: 	pushq	%rbp
    0000000a: 	pushq	%rbx
    0000000b: 	movq	0x8(%rdi), %rbx
    0000000f: 	movq	(%rdi), %rbp
    00000012: 	cmpq	%rbp, %rbx
    00000015: 	je	.Ltmp731 # Offset: 21
    00000017: 	nopw	(%rax,%rax) # Size: 9
.Ltmp733:
    00000020: 	movq	(%rbp), %rdi
    00000024: 	testq	%rdi, %rdi
    00000027: 	je	.Ltmp732 # Offset: 39
    00000029: 	movl	$0x68, %esi
    0000002e: 	addq	$0x8, %rbp
    00000032: 	callq	_ZdlPvm@PLT # Offset: 50
    00000037: 	cmpq	%rbp, %rbx
    0000003a: 	jne	.Ltmp733 # Offset: 58
.Ltmp735:
    0000003c: 	movq	(%r12), %rbp
.Ltmp731:
    00000040: 	testq	%rbp, %rbp
    00000043: 	je	.Ltmp734 # Offset: 67
    00000045: 	movq	0x10(%r12), %rsi
    0000004a: 	popq	%rbx
    0000004b: 	movq	%rbp, %rdi
    0000004e: 	subq	%rbp, %rsi
    00000051: 	popq	%rbp
    00000052: 	popq	%r12
    00000054: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 84
    00000059: 	nopl	(%rax) # Size: 7
.Ltmp732:
    00000060: 	addq	$0x8, %rbp
    00000064: 	cmpq	%rbp, %rbx
    00000067: 	jne	.Ltmp733 # Offset: 103
    00000069: 	jmp	.Ltmp735 # Offset: 105
    0000006b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp734:
    00000070: 	popq	%rbx
    00000071: 	popq	%rbp
    00000072: 	popq	%r12
    00000074: 	retq # Offset: 116
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev(*2)"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi13EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 93
  State       : disassembled
  Address     : 0x9160
  Size        : 0x24e
  MaxSize     : 0x250
  Offset      : 0x9160
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi13EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp736 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
.Ltmp743:
    0000004f: 	callq	clock@PLT # Offset: 79
    00000054: 	movq	(%r14), %rsi
    00000057: 	movq	0x8(%r14), %rdx
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	movq	%rax, end_time(%rip)
    00000066: 	leaq	0x20(%rsp), %rbp
    0000006b: 	subq	start_time(%rip), %rax
    00000072: 	leaq	0x10(%rsp), %rdi
    00000077: 	addq	%rsi, %rdx
    0000007a: 	cvtsi2sd	%rax, %xmm0
    0000007f: 	movq	%rbp, 0x10(%rsp)
    00000084: 	divsd	DATAat0x17370(%rip), %xmm0
    0000008c: 	movq	%xmm0, %rbx
    00000091: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 145
    00000096: 	movq	0x18(%rsp), %rdx
    0000009b: 	movq	0x10(%rsp), %rsi
    000000a0: 	movq	%r15, %rdi
    000000a3: 	movq	%rbx, %xmm0
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x10(%rsp), %rdi
    000000b2: 	cmpq	%rbp, %rdi
    000000b5: 	je	.Ltmp737 # Offset: 181
    000000b7: 	movq	0x20(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp737:
    000000c5: 	movq	0x38(%rsp), %rax
    000000ca: 	subq	%fs:0x28, %rax
    000000d3: 	jne	.Ltmp738 # Offset: 211
    000000d9: 	addq	$0x48, %rsp
    000000dd: 	movq	%r12, %rax
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	retq # Offset: 234
.Ltmp736:
    000000eb: 	movq	%r15, %rax
    000000ee: 	shrq	$0x3c, %rax
    000000f2: 	jne	.Ltmp739 # Offset: 242
    000000f8: 	leaq	(,%r15,8), %r13
    00000100: 	movslq	%edx, %rbp
    00000103: 	movq	%r13, %rdi
    00000106: 	callq	_Znwm@PLT # Offset: 262
    0000010b: 	movq	%rax, %rdi
    0000010e: 	movq	%r13, %rdx
    00000111: 	xorl	%esi, %esi
    00000113: 	movq	%r15, %rbx
    00000116: 	callq	memset@PLT # Offset: 278
    0000011b: 	movq	(%r12), %rdi
    0000011f: 	movq	%rax, %rcx
    00000122: 	movq	0x8(%r12), %rax
    00000127: 	cmpq	%rdi, %rax
    0000012a: 	je	.Ltmp740 # Offset: 298
    0000012c: 	subq	%rdi, %rax
    0000012f: 	movq	%rdi, %rdx
    00000132: 	leaq	(%rcx,%rax), %rsi
    00000136: 	movq	%rcx, %rax
.Ltmp741:
    00000139: 	movq	(%rdx), %r8
    0000013c: 	addq	$0x8, %rax
    00000140: 	addq	$0x8, %rdx
    00000144: 	movq	%r8, -0x8(%rax)
    00000148: 	cmpq	%rsi, %rax
    0000014b: 	jne	.Ltmp741 # Offset: 331
.Ltmp740:
    0000014d: 	testq	%rdi, %rdi
    00000150: 	je	.Ltmp742 # Offset: 336
    00000152: 	movq	0x10(%r12), %rsi
    00000157: 	movq	%rcx, 0x8(%rsp)
    0000015c: 	subq	%rdi, %rsi
    0000015f: 	callq	_ZdlPvm@PLT # Offset: 351
    00000164: 	movq	0x8(%rsp), %rcx
.Ltmp742:
    00000169: 	addq	%rcx, %r13
    0000016c: 	movq	%rcx, %xmm0
    00000171: 	movq	%r13, %xmm1
    00000176: 	movq	%r13, 0x10(%r12)
    0000017b: 	punpcklqdq	%xmm1, %xmm0
    0000017f: 	movups	%xmm0, (%r12)
    00000184: 	callq	clock@PLT # Offset: 388
    00000189: 	movq	%rax, start_time(%rip)
    00000190: 	testl	%ebx, %ebx
    00000192: 	jle	.Ltmp743 # Offset: 402
    00000198: 	leaq	(,%r15,8), %r13
    000001a0: 	xorl	%ebx, %ebx
    000001a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp745:
    000001a8: 	movl	$0x68, %edi
    000001ad: 	callq	_Znwm@PLT # Offset: 429
    000001b2: 	movq	(%r12), %rdx
    000001b6: 	movq	%rbp, %xmm0
    000001bb: 	movq	%rbp, 0x60(%rax)
    000001bf: 	punpcklqdq	%xmm0, %xmm0
    000001c3: 	addq	%rbx, %rdx
    000001c6: 	movups	%xmm0, (%rax)
    000001c9: 	movq	(%rdx), %rdi
    000001cc: 	movups	%xmm0, 0x10(%rax)
    000001d0: 	movups	%xmm0, 0x20(%rax)
    000001d4: 	movups	%xmm0, 0x30(%rax)
    000001d8: 	movups	%xmm0, 0x40(%rax)
    000001dc: 	movups	%xmm0, 0x50(%rax)
    000001e0: 	movq	%rax, (%rdx)
    000001e3: 	testq	%rdi, %rdi
    000001e6: 	je	.Ltmp744 # Offset: 486
    000001e8: 	movl	$0x68, %esi
    000001ed: 	callq	_ZdlPvm@PLT # Offset: 493
.Ltmp744:
    000001f2: 	addq	$0x8, %rbx
    000001f6: 	cmpq	%r13, %rbx
    000001f9: 	jne	.Ltmp745 # Offset: 505
    000001fb: 	jmp	.Ltmp743 # Offset: 507
.Ltmp739:
    00000200: 	leaq	DATAat0x17138(%rip), %rdi
    00000207: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 519
.Ltmp738:
    0000020c: 	callq	__stack_chk_fail@PLT # Offset: 524
    00000211: 	endbr64
    00000215: 	movq	%rax, %rbx
    00000218: 	jmp	.Ltmp746 # Offset: 536
    0000021a: 	endbr64
    0000021e: 	movq	%rax, %rbp
    00000221: 	jmp	.Ltmp747 # Offset: 545
.Ltmp746:
    00000223: 	movq	0x10(%rsp), %rdi
    00000228: 	cmpq	%rbp, %rdi
    0000022b: 	je	.Ltmp748 # Offset: 555
    0000022d: 	movq	0x20(%rsp), %rax
    00000232: 	leaq	0x1(%rax), %rsi
    00000236: 	callq	_ZdlPvm@PLT # Offset: 566
.Ltmp748:
    0000023b: 	movq	%rbx, %rbp
.Ltmp747:
    0000023e: 	movq	%r12, %rdi
    00000241: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 577
    00000246: 	movq	%rbp, %rdi
    00000249: 	callq	_Unwind_Resume@PLT # Offset: 585
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi13EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayI17VariableContainerIlLi13EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0x93b0
  Size        : 0x23c
  MaxSize     : 0x240
  Offset      : 0x93b0
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayI17VariableContainerIlLi13EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rdx, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rsi, %rbx
    0000001b: 	subq	$0x38, %rsp
    0000001f: 	movq	0x8(%rsi), %r14
    00000023: 	subq	(%rsi), %r14
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x28(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%r14, %rbp
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x3, %rbp
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%r14, %r14
    0000004b: 	jne	.Ltmp749 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%rbp, %rbp
    00000060: 	je	.Ltmp750 # Offset: 96
.Ltmp760:
    00000062: 	xorl	%r14d, %r14d
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp752:
    00000068: 	movq	(%rbx), %rdx
    0000006b: 	leaq	(,%r14,8), %rax
    00000073: 	addq	%rax, %rdx
    00000076: 	addq	(%r12), %rax
    0000007a: 	movq	(%rdx), %rcx
    0000007d: 	movq	$0x0, (%rdx)
    00000084: 	movq	(%rax), %rdi
    00000087: 	movq	%rcx, (%rax)
    0000008a: 	testq	%rdi, %rdi
    0000008d: 	je	.Ltmp751 # Offset: 141
    0000008f: 	movl	$0x68, %esi
    00000094: 	callq	_ZdlPvm@PLT # Offset: 148
.Ltmp751:
    00000099: 	addq	$0x1, %r14
    0000009d: 	cmpq	%rbp, %r14
    000000a0: 	jb	.Ltmp752 # Offset: 160
.Ltmp750:
    000000a2: 	callq	clock@PLT # Offset: 162
    000000a7: 	movq	(%r13), %rsi
    000000ab: 	movq	0x8(%r13), %rdx
    000000af: 	movq	%rsp, %rdi
    000000b2: 	movq	%rax, end_time(%rip)
    000000b9: 	pxor	%xmm0, %xmm0
    000000bd: 	subq	start_time(%rip), %rax
    000000c4: 	leaq	0x10(%rsp), %r14
    000000c9: 	addq	%rsi, %rdx
    000000cc: 	cvtsi2sd	%rax, %xmm0
    000000d1: 	movq	%r14, (%rsp)
    000000d5: 	divsd	DATAat0x17370(%rip), %xmm0
    000000dd: 	movq	%xmm0, %rbx
    000000e2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 226
    000000e7: 	movq	0x8(%rsp), %rdx
    000000ec: 	movq	(%rsp), %rsi
    000000f0: 	movq	%rbp, %rdi
    000000f3: 	movq	%rbx, %xmm0
    000000f8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 248
    000000fd: 	movq	(%rsp), %rdi
    00000101: 	cmpq	%r14, %rdi
    00000104: 	je	.Ltmp753 # Offset: 260
    00000106: 	movq	0x10(%rsp), %rax
    0000010b: 	leaq	0x1(%rax), %rsi
    0000010f: 	callq	_ZdlPvm@PLT # Offset: 271
.Ltmp753:
    00000114: 	movq	0x28(%rsp), %rax
    00000119: 	subq	%fs:0x28, %rax
    00000122: 	jne	.Ltmp754 # Offset: 290
    00000128: 	addq	$0x38, %rsp
    0000012c: 	movq	%r12, %rax
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	retq # Offset: 313
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp749:
    00000140: 	testq	%rbp, %rbp
    00000143: 	jne	.Ltmp755 # Offset: 323
    00000145: 	movq	$0x0, 0x8(%rdi)
    0000014d: 	callq	clock@PLT # Offset: 333
    00000152: 	movq	%rax, start_time(%rip)
    00000159: 	jmp	.Ltmp750 # Offset: 345
.Ltmp755:
    0000015e: 	movabsq	$0x7ffffffffffffff8, %rax
    00000168: 	cmpq	%rax, %r14
    0000016b: 	ja	.Ltmp756 # Offset: 363
    00000171: 	movq	%r14, %rdi
    00000174: 	callq	_Znwm@PLT # Offset: 372
    00000179: 	movq	%r14, %rdx
    0000017c: 	xorl	%esi, %esi
    0000017e: 	movq	%rax, %rdi
    00000181: 	movq	%rax, %r15
    00000184: 	callq	memset@PLT # Offset: 388
    00000189: 	movq	(%r12), %rdi
    0000018d: 	movq	0x8(%r12), %rsi
    00000192: 	movq	%r15, %rdx
    00000195: 	movq	%rdi, %rax
    00000198: 	cmpq	%rdi, %rsi
    0000019b: 	je	.Ltmp757 # Offset: 411
    0000019d: 	nopl	(%rax) # Size: 3
.Ltmp758:
    000001a0: 	movq	(%rax), %rcx
    000001a3: 	addq	$0x8, %rax
    000001a7: 	addq	$0x8, %rdx
    000001ab: 	movq	%rcx, -0x8(%rdx)
    000001af: 	cmpq	%rax, %rsi
    000001b2: 	jne	.Ltmp758 # Offset: 434
.Ltmp757:
    000001b4: 	testq	%rdi, %rdi
    000001b7: 	je	.Ltmp759 # Offset: 439
    000001b9: 	movq	0x10(%r12), %rsi
    000001be: 	subq	%rdi, %rsi
    000001c1: 	callq	_ZdlPvm@PLT # Offset: 449
.Ltmp759:
    000001c6: 	addq	%r15, %r14
    000001c9: 	movq	%r15, %xmm0
    000001ce: 	movq	%r14, %xmm1
    000001d3: 	movq	%r14, 0x10(%r12)
    000001d8: 	punpcklqdq	%xmm1, %xmm0
    000001dc: 	movups	%xmm0, (%r12)
    000001e1: 	callq	clock@PLT # Offset: 481
    000001e6: 	movq	%rax, start_time(%rip)
    000001ed: 	jmp	.Ltmp760 # Offset: 493
.Ltmp756:
    000001f2: 	leaq	DATAat0x17138(%rip), %rdi
    000001f9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 505
.Ltmp754:
    000001fe: 	callq	__stack_chk_fail@PLT # Offset: 510
    00000203: 	endbr64
    00000207: 	movq	%rax, %rbp
    0000020a: 	jmp	.Ltmp761 # Offset: 522
    0000020c: 	endbr64
    00000210: 	movq	%rax, %rbp
    00000213: 	jmp	.Ltmp762 # Offset: 531
.Ltmp761:
    00000215: 	movq	(%rsp), %rdi
    00000219: 	cmpq	%r14, %rdi
    0000021c: 	je	.Ltmp762 # Offset: 540
    0000021e: 	movq	0x10(%rsp), %rax
    00000223: 	leaq	0x1(%rax), %rsi
    00000227: 	callq	_ZdlPvm@PLT # Offset: 551
.Ltmp762:
    0000022c: 	movq	%r12, %rdi
    0000022f: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 559
    00000234: 	movq	%rbp, %rdi
    00000237: 	callq	_Unwind_Resume@PLT # Offset: 567
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayI17VariableContainerIlLi13EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0x95f0
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0x95f0
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x3, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp765:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp763 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp764:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x8, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp764 # Offset: 118
.Ltmp763:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp765 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp766 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp767 # Offset: 192
.Ltmp766:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp768 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp769 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp778:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp770 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp770:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp771 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp767 # Offset: 319
.Ltmp771:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp772 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp773 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp780:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp774 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp774:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp775 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp775:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp776 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp769:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp777 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp778 # Offset: 479
.Ltmp773:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp779 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp780 # Offset: 496
.Ltmp772:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp782:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp780 # Offset: 557
.Ltmp768:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp781:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp778 # Offset: 661
.Ltmp776:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp777:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp781 # Offset: 679
.Ltmp779:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp782 # Offset: 684
.Ltmp767:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp783 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp784 # Offset: 717
.Ltmp783:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp785 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp785:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp784:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp785 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp785 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 96
  State       : disassembled
  Address     : 0x9900
  Size        : 0x1fb
  MaxSize     : 0x200
  Offset      : 0x9900
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	$0x14, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	movl	$0x7b, %edi
    0000001e: 	subq	$0x48, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x38(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	srand@PLT # Offset: 50
    00000037: 	callq	clock@PLT # Offset: 55
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	movq	0x8(%rbx), %rax
.Ltmp788:
    00000047: 	movq	(%rbx), %r13
    0000004a: 	cmpq	%rax, %r13
    0000004d: 	je	.Ltmp786 # Offset: 77
    0000004f: 	nop # Size: 1
.Ltmp787:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x8, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, %xmm0
    00000068: 	movq	%rax, 0x60(%rdx)
    0000006c: 	movq	0x8(%rbx), %rax
    00000070: 	punpcklqdq	%xmm0, %xmm0
    00000074: 	movups	%xmm0, (%rdx)
    00000077: 	movups	%xmm0, 0x10(%rdx)
    0000007b: 	movups	%xmm0, 0x20(%rdx)
    0000007f: 	movups	%xmm0, 0x30(%rdx)
    00000083: 	movups	%xmm0, 0x40(%rdx)
    00000087: 	movups	%xmm0, 0x50(%rdx)
    0000008b: 	cmpq	%r13, %rax
    0000008e: 	jne	.Ltmp787 # Offset: 142
    00000090: 	subq	$0x1, %rbp
    00000094: 	jne	.Ltmp788 # Offset: 148
.Ltmp786:
    00000096: 	callq	clock@PLT # Offset: 150
    0000009b: 	movq	(%r12), %r15
    0000009f: 	pxor	%xmm0, %xmm0
    000000a3: 	movq	0x8(%r12), %r12
    000000a8: 	movq	%rax, end_time(%rip)
    000000af: 	subq	start_time(%rip), %rax
    000000b6: 	leaq	0x20(%rsp), %rbp
    000000bb: 	cvtsi2sd	%rax, %xmm0
    000000c0: 	movq	%r15, %rax
    000000c3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000cb: 	movq	%rbp, 0x10(%rsp)
    000000d0: 	addq	%r12, %rax
    000000d3: 	movq	%xmm0, %r13
    000000d8: 	je	.Ltmp789 # Offset: 216
    000000da: 	testq	%r15, %r15
    000000dd: 	je	.Ltmp790 # Offset: 221
.Ltmp789:
    000000e3: 	movq	%r12, 0x8(%rsp)
    000000e8: 	cmpq	$0xf, %r12
    000000ec: 	ja	.Ltmp791 # Offset: 236
    000000f2: 	cmpq	$0x1, %r12
    000000f6: 	jne	.Ltmp792 # Offset: 246
    000000f8: 	movzbl	(%r15), %eax
    000000fc: 	leaq	0x10(%rsp), %r14
    00000101: 	movb	%al, 0x20(%rsp)
    00000105: 	movq	%rbp, %rax
    00000108: 	jmp	.Ltmp793 # Offset: 264
.Ltmp792:
    0000010a: 	testq	%r12, %r12
    0000010d: 	jne	.Ltmp794 # Offset: 269
    00000113: 	movq	%rbp, %rax
    00000116: 	leaq	0x10(%rsp), %r14
.Ltmp793:
    0000011b: 	movq	%r12, 0x18(%rsp)
    00000120: 	movq	%r14, %rdx
    00000123: 	movl	$0x14, %edi
    00000128: 	movq	%r13, %xmm0
    0000012d: 	movb	$0x0, (%rax,%r12)
    00000132: 	movq	0x8(%rbx), %rsi
    00000136: 	subq	(%rbx), %rsi
    00000139: 	sarq	$0x3, %rsi
    0000013d: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 317
    00000142: 	movq	0x10(%rsp), %rdi
    00000147: 	cmpq	%rbp, %rdi
    0000014a: 	je	.Ltmp795 # Offset: 330
    0000014c: 	movq	0x20(%rsp), %rax
    00000151: 	leaq	0x1(%rax), %rsi
    00000155: 	callq	_ZdlPvm@PLT # Offset: 341
.Ltmp795:
    0000015a: 	movq	0x38(%rsp), %rax
    0000015f: 	subq	%fs:0x28, %rax
    00000168: 	jne	.Ltmp796 # Offset: 360
    0000016a: 	addq	$0x48, %rsp
    0000016e: 	popq	%rbx
    0000016f: 	popq	%rbp
    00000170: 	popq	%r12
    00000172: 	popq	%r13
    00000174: 	popq	%r14
    00000176: 	popq	%r15
    00000178: 	retq # Offset: 376
.Ltmp791:
    00000179: 	leaq	0x10(%rsp), %r14
    0000017e: 	leaq	0x8(%rsp), %rsi
    00000183: 	xorl	%edx, %edx
    00000185: 	movq	%r14, %rdi
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, 0x10(%rsp)
    00000192: 	movq	%rax, %rdi
    00000195: 	movq	0x8(%rsp), %rax
    0000019a: 	movq	%rax, 0x20(%rsp)
.Ltmp797:
    0000019f: 	movq	%r12, %rdx
    000001a2: 	movq	%r15, %rsi
    000001a5: 	callq	memcpy@PLT # Offset: 421
    000001aa: 	movq	0x8(%rsp), %r12
    000001af: 	movq	0x10(%rsp), %rax
    000001b4: 	jmp	.Ltmp793 # Offset: 436
.Ltmp794:
    000001b9: 	movq	%rbp, %rdi
    000001bc: 	leaq	0x10(%rsp), %r14
    000001c1: 	jmp	.Ltmp797 # Offset: 449
.Ltmp796:
    000001c3: 	callq	__stack_chk_fail@PLT # Offset: 451
.Ltmp790:
    000001c8: 	leaq	DATAat0x17008(%rip), %rdi
    000001cf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 463
    000001d4: 	endbr64
    000001d8: 	movq	%rax, %r12
    000001db: 	movq	0x10(%rsp), %rdi
    000001e0: 	cmpq	%rbp, %rdi
    000001e3: 	je	.Ltmp798 # Offset: 483
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	leaq	0x1(%rax), %rsi
    000001ee: 	callq	_ZdlPvm@PLT # Offset: 494
.Ltmp798:
    000001f3: 	movq	%r12, %rdi
    000001f6: 	callq	_Unwind_Resume@PLT # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0x9b00
  Size        : 0x1d2
  MaxSize     : 0x1e0
  Offset      : 0x9b00
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	movq	%rsi, %r12
    0000000e: 	pushq	%rbp
    0000000f: 	pushq	%rbx
    00000010: 	xorl	%ebx, %ebx
    00000012: 	subq	$0x58, %rsp
    00000016: 	movq	0x8(%rdi), %rbp
    0000001a: 	subq	(%rdi), %rbp
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x48(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	sarq	$0x3, %rbp
    00000031: 	callq	clock@PLT # Offset: 49
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	testq	%rbp, %rbp
    00000040: 	je	.Ltmp799 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp801:
    00000048: 	movq	(%r13), %rax
    0000004c: 	leaq	(%rax,%rbx,8), %rax
    00000050: 	movq	(%rax), %rdi
    00000053: 	movq	$0x0, (%rax)
    0000005a: 	testq	%rdi, %rdi
    0000005d: 	je	.Ltmp800 # Offset: 93
    0000005f: 	movl	$0x68, %esi
    00000064: 	callq	_ZdlPvm@PLT # Offset: 100
.Ltmp800:
    00000069: 	addq	$0x1, %rbx
    0000006d: 	cmpq	%rbp, %rbx
    00000070: 	jne	.Ltmp801 # Offset: 112
.Ltmp799:
    00000072: 	callq	clock@PLT # Offset: 114
    00000077: 	movq	(%r12), %r13
    0000007b: 	pxor	%xmm0, %xmm0
    0000007f: 	movq	0x8(%r12), %r12
    00000084: 	movq	%rax, end_time(%rip)
    0000008b: 	subq	start_time(%rip), %rax
    00000092: 	leaq	0x30(%rsp), %rbx
    00000097: 	cvtsi2sd	%rax, %xmm0
    0000009c: 	movq	%r13, %rax
    0000009f: 	movq	%rbx, 0x20(%rsp)
    000000a4: 	divsd	DATAat0x17370(%rip), %xmm0
    000000ac: 	addq	%r12, %rax
    000000af: 	je	.Ltmp802 # Offset: 175
    000000b1: 	testq	%r13, %r13
    000000b4: 	je	.Ltmp803 # Offset: 180
.Ltmp802:
    000000ba: 	movq	%r12, 0x18(%rsp)
    000000bf: 	cmpq	$0xf, %r12
    000000c3: 	ja	.Ltmp804 # Offset: 195
    000000c5: 	cmpq	$0x1, %r12
    000000c9: 	jne	.Ltmp805 # Offset: 201
    000000cb: 	movzbl	(%r13), %eax
    000000d0: 	movb	%al, 0x30(%rsp)
    000000d4: 	movq	%rbx, %rax
.Ltmp809:
    000000d7: 	movq	%r12, 0x28(%rsp)
    000000dc: 	movq	%rbp, %rdi
    000000df: 	movb	$0x0, (%rax,%r12)
    000000e4: 	movq	0x28(%rsp), %rdx
    000000e9: 	movq	0x20(%rsp), %rsi
    000000ee: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 238
    000000f3: 	movq	0x20(%rsp), %rdi
    000000f8: 	cmpq	%rbx, %rdi
    000000fb: 	je	.Ltmp806 # Offset: 251
    000000fd: 	movq	0x30(%rsp), %rax
    00000102: 	leaq	0x1(%rax), %rsi
    00000106: 	callq	_ZdlPvm@PLT # Offset: 262
.Ltmp806:
    0000010b: 	movq	0x48(%rsp), %rax
    00000110: 	subq	%fs:0x28, %rax
    00000119: 	jne	.Ltmp807 # Offset: 281
    0000011b: 	addq	$0x58, %rsp
    0000011f: 	popq	%rbx
    00000120: 	popq	%rbp
    00000121: 	popq	%r12
    00000123: 	popq	%r13
    00000125: 	retq # Offset: 293
    00000126: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp805:
    00000130: 	testq	%r12, %r12
    00000133: 	jne	.Ltmp808 # Offset: 307
    00000135: 	movq	%rbx, %rax
    00000138: 	jmp	.Ltmp809 # Offset: 312
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp804:
    00000140: 	leaq	0x20(%rsp), %rdi
    00000145: 	leaq	0x18(%rsp), %rsi
    0000014a: 	xorl	%edx, %edx
    0000014c: 	movsd	%xmm0, 0x8(%rsp)
    00000152: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 338
    00000157: 	movsd	0x8(%rsp), %xmm0
    0000015d: 	movq	%rax, 0x20(%rsp)
    00000162: 	movq	%rax, %rdi
    00000165: 	movq	0x18(%rsp), %rax
    0000016a: 	movq	%rax, 0x30(%rsp)
.Ltmp810:
    0000016f: 	movq	%r12, %rdx
    00000172: 	movq	%r13, %rsi
    00000175: 	movsd	%xmm0, 0x8(%rsp)
    0000017b: 	callq	memcpy@PLT # Offset: 379
    00000180: 	movq	0x18(%rsp), %r12
    00000185: 	movq	0x20(%rsp), %rax
    0000018a: 	movsd	0x8(%rsp), %xmm0
    00000190: 	jmp	.Ltmp809 # Offset: 400
.Ltmp807:
    00000195: 	callq	__stack_chk_fail@PLT # Offset: 405
.Ltmp808:
    0000019a: 	movq	%rbx, %rdi
    0000019d: 	jmp	.Ltmp810 # Offset: 413
.Ltmp803:
    0000019f: 	leaq	DATAat0x17008(%rip), %rdi
    000001a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 422
    000001ab: 	endbr64
    000001af: 	movq	%rax, %rbp
    000001b2: 	movq	0x20(%rsp), %rdi
    000001b7: 	cmpq	%rbx, %rdi
    000001ba: 	je	.Ltmp811 # Offset: 442
    000001bc: 	movq	0x30(%rsp), %rax
    000001c1: 	leaq	0x1(%rax), %rsi
    000001c5: 	callq	_ZdlPvm@PLT # Offset: 453
.Ltmp811:
    000001ca: 	movq	%rbp, %rdi
    000001cd: 	callq	_Unwind_Resume@PLT # Offset: 461
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev
                _ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED2Ev
  Number      : 98
  State       : disassembled
  Address     : 0x9ce0
  Size        : 0xdb
  MaxSize     : 0xe0
  Offset      : 0x9ce0
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	movq	%rdi, %r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	pushq	%rbx
    0000000d: 	subq	$0x8, %rsp
    00000011: 	movq	0x8(%rdi), %rbx
    00000015: 	movq	(%rdi), %rbp
    00000018: 	cmpq	%rbp, %rbx
    0000001b: 	jne	.Ltmp812 # Offset: 27
    0000001d: 	jmp	.Ltmp813 # Offset: 29
    0000001f: 	nop # Size: 1
.Ltmp815:
    00000020: 	addq	$0x10, %rbp
    00000024: 	cmpq	%rbp, %rbx
    00000027: 	je	.Ltmp814 # Offset: 39
.Ltmp812:
    00000029: 	movq	0x8(%rbp), %r12
    0000002d: 	testq	%r12, %r12
    00000030: 	je	.Ltmp815 # Offset: 48
    00000032: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000039: 	je	.Ltmp816 # Offset: 57
    0000003b: 	movl	0x8(%r12), %eax
    00000040: 	leal	-0x1(%rax), %edx
    00000043: 	movl	%edx, 0x8(%r12)
.Ltmp819:
    00000048: 	cmpl	$0x1, %eax
    0000004b: 	jne	.Ltmp815 # Offset: 75
    0000004d: 	movq	(%r12), %rax
    00000051: 	movq	%r12, %rdi
    00000054: 	callq	*0x10(%rax) # Offset: 84
    00000057: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000005e: 	je	.Ltmp817 # Offset: 94
    00000060: 	movl	0xc(%r12), %eax
    00000065: 	leal	-0x1(%rax), %edx
    00000068: 	movl	%edx, 0xc(%r12)
.Ltmp820:
    0000006d: 	cmpl	$0x1, %eax
    00000070: 	jne	.Ltmp815 # Offset: 112
    00000072: 	movq	(%r12), %rax
    00000076: 	addq	$0x10, %rbp
    0000007a: 	movq	%r12, %rdi
    0000007d: 	callq	*0x18(%rax) # Offset: 125
    00000080: 	cmpq	%rbp, %rbx
    00000083: 	jne	.Ltmp812 # Offset: 131
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp814:
    00000088: 	movq	(%r13), %rbp
.Ltmp813:
    0000008c: 	testq	%rbp, %rbp
    0000008f: 	je	.Ltmp818 # Offset: 143
    00000091: 	movq	0x10(%r13), %rsi
    00000095: 	addq	$0x8, %rsp
    00000099: 	movq	%rbp, %rdi
    0000009c: 	popq	%rbx
    0000009d: 	subq	%rbp, %rsi
    000000a0: 	popq	%rbp
    000000a1: 	popq	%r12
    000000a3: 	popq	%r13
    000000a5: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 165
    000000aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp816:
    000000b0: 	movl	$0xffffffff, %eax
    000000b5: 	lock # Offset: 181
    000000b6: 	xaddl	%eax, 0x8(%r12)
    000000bc: 	jmp	.Ltmp819 # Offset: 188
    000000be: 	nop # Size: 2
.Ltmp817:
    000000c0: 	movl	$0xffffffff, %eax
    000000c5: 	lock # Offset: 197
    000000c6: 	xaddl	%eax, 0xc(%r12)
    000000cc: 	jmp	.Ltmp820 # Offset: 204
    000000ce: 	nop # Size: 2
.Ltmp818:
    000000d0: 	addq	$0x8, %rsp
    000000d4: 	popq	%rbx
    000000d5: 	popq	%rbp
    000000d6: 	popq	%r12
    000000d8: 	popq	%r13
    000000da: 	retq # Offset: 218
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev(*2)"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi13EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 99
  State       : disassembled
  Address     : 0x9dc0
  Size        : 0x364
  MaxSize     : 0x370
  Offset      : 0x9dc0
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi13EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	pushq	%r12
    00000010: 	movq	%rdi, %r12
    00000013: 	pushq	%rbp
    00000014: 	pushq	%rbx
    00000015: 	subq	$0x68, %rsp
    00000019: 	movq	%rcx, 0x28(%rsp)
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x58(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movslq	%esi, %rax
    00000031: 	movq	$0x0, 0x10(%rdi)
    00000039: 	movq	%rax, 0x20(%rsp)
    0000003e: 	movups	%xmm0, (%rdi)
    00000041: 	testq	%rax, %rax
    00000044: 	jne	.Ltmp821 # Offset: 68
    0000004a: 	callq	clock@PLT # Offset: 74
    0000004f: 	movq	%rax, start_time(%rip)
.Ltmp828:
    00000056: 	callq	clock@PLT # Offset: 86
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	leaq	0x40(%rsp), %rbp
    00000064: 	leaq	0x30(%rsp), %rdi
    00000069: 	movq	%rax, end_time(%rip)
    00000070: 	subq	start_time(%rip), %rax
    00000077: 	cvtsi2sd	%rax, %xmm0
    0000007c: 	movq	0x28(%rsp), %rax
    00000081: 	divsd	DATAat0x17370(%rip), %xmm0
    00000089: 	movq	%rbp, 0x30(%rsp)
    0000008e: 	movq	%xmm0, %rbx
    00000093: 	movq	(%rax), %rsi
    00000096: 	movq	0x8(%rax), %rdx
    0000009a: 	addq	%rsi, %rdx
    0000009d: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 157
    000000a2: 	movq	0x38(%rsp), %rdx
    000000a7: 	movq	0x30(%rsp), %rsi
    000000ac: 	movq	%rbx, %xmm0
    000000b1: 	movq	0x20(%rsp), %rdi
    000000b6: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 182
    000000bb: 	movq	0x30(%rsp), %rdi
    000000c0: 	cmpq	%rbp, %rdi
    000000c3: 	je	.Ltmp822 # Offset: 195
    000000c5: 	movq	0x40(%rsp), %rax
    000000ca: 	leaq	0x1(%rax), %rsi
    000000ce: 	callq	_ZdlPvm@PLT # Offset: 206
.Ltmp822:
    000000d3: 	movq	0x58(%rsp), %rax
    000000d8: 	subq	%fs:0x28, %rax
    000000e1: 	jne	.Ltmp823 # Offset: 225
    000000e7: 	addq	$0x68, %rsp
    000000eb: 	movq	%r12, %rax
    000000ee: 	popq	%rbx
    000000ef: 	popq	%rbp
    000000f0: 	popq	%r12
    000000f2: 	popq	%r13
    000000f4: 	popq	%r14
    000000f6: 	popq	%r15
    000000f8: 	retq # Offset: 248
.Ltmp821:
    000000f9: 	shrq	$0x3b, %rax
    000000fd: 	jne	.Ltmp824 # Offset: 253
    00000103: 	movq	0x20(%rsp), %rbp
    00000108: 	movl	%esi, %ebx
    0000010a: 	movslq	%edx, %r13
    0000010d: 	shlq	$0x4, %rbp
    00000111: 	movq	%rbp, %rdi
    00000114: 	callq	_Znwm@PLT # Offset: 276
    00000119: 	movq	%rax, %xmm0
    0000011e: 	addq	%rbp, %rax
    00000121: 	pxor	%xmm2, %xmm2
    00000125: 	movq	%rax, %xmm1
    0000012a: 	movq	%xmm0, %rax
.Ltmp825:
    0000012f: 	movups	%xmm2, (%rax)
    00000132: 	movq	%xmm1, %rcx
    00000137: 	addq	$0x10, %rax
    0000013b: 	cmpq	%rax, %rcx
    0000013e: 	jne	.Ltmp825 # Offset: 318
    00000140: 	movq	0x8(%r12), %rax
    00000145: 	movq	(%r12), %rdi
    00000149: 	cmpq	%rdi, %rax
    0000014c: 	je	.Ltmp826 # Offset: 332
    00000152: 	leaq	-0x10(%rax), %rdx
    00000156: 	xorl	%ecx, %ecx
    00000158: 	xorl	%eax, %eax
    0000015a: 	subq	%rdi, %rdx
    0000015d: 	shrq	$0x4, %rdx
    00000161: 	addq	$0x1, %rdx
.Ltmp827:
    00000165: 	movdqu	(%rdi,%rax), %xmm6
    0000016a: 	movq	%xmm0, %rsi
    0000016f: 	addq	$0x1, %rcx
    00000173: 	movups	%xmm6, (%rsi,%rax)
    00000177: 	addq	$0x10, %rax
    0000017b: 	cmpq	%rcx, %rdx
    0000017e: 	ja	.Ltmp827 # Offset: 382
.Ltmp834:
    00000180: 	movq	0x10(%r12), %rsi
    00000185: 	movq	%xmm1, (%rsp)
    0000018a: 	movq	%xmm0, 0x10(%rsp)
    00000190: 	subq	%rdi, %rsi
    00000193: 	callq	_ZdlPvm@PLT # Offset: 403
    00000198: 	movq	(%rsp), %xmm1
    0000019d: 	movq	0x10(%rsp), %xmm0
.Ltmp833:
    000001a3: 	punpcklqdq	%xmm1, %xmm0
    000001a7: 	movq	%xmm1, 0x10(%r12)
    000001ae: 	movups	%xmm0, (%r12)
    000001b3: 	callq	clock@PLT # Offset: 435
    000001b8: 	movq	%rax, start_time(%rip)
    000001bf: 	testl	%ebx, %ebx
    000001c1: 	jle	.Ltmp828 # Offset: 449
    000001c7: 	movq	0x20(%rsp), %rax
    000001cc: 	movq	%r13, %xmm5
    000001d1: 	movq	DATAat0x17388(%rip), %r14
    000001d8: 	xorl	%ebx, %ebx
    000001da: 	punpcklqdq	%xmm5, %xmm5
    000001de: 	leaq	_ZTVSt15_Sp_counted_ptrIP17VariableContainerIlLi13EELN9__gnu_cxx12_Lock_policyE2EE+16(%rip), %r15
    000001e5: 	shlq	$0x4, %rax
    000001e9: 	movaps	%xmm5, (%rsp)
    000001ed: 	movq	%rax, 0x10(%rsp)
    000001f2: 	jmp	.Ltmp829 # Offset: 498
    000001f4: 	nopl	(%rax) # Size: 4
.Ltmp830:
    000001f8: 	addq	$0x10, %rbx
    000001fc: 	cmpq	0x10(%rsp), %rbx
    00000201: 	je	.Ltmp828 # Offset: 513
.Ltmp829:
    00000207: 	movl	$0x68, %edi
    0000020c: 	callq	_Znwm@PLT # Offset: 524
    00000211: 	movdqa	(%rsp), %xmm3
    00000216: 	movq	%r13, 0x60(%rax)
    0000021a: 	movl	$0x18, %edi
    0000021f: 	movq	%rax, %rbp
    00000222: 	movups	%xmm3, (%rax)
    00000225: 	movups	%xmm3, 0x10(%rax)
    00000229: 	movups	%xmm3, 0x20(%rax)
    0000022d: 	movups	%xmm3, 0x30(%rax)
    00000231: 	movups	%xmm3, 0x40(%rax)
    00000235: 	movups	%xmm3, 0x50(%rax)
    00000239: 	callq	_Znwm@PLT # Offset: 569
    0000023e: 	movq	(%r12), %rdx
    00000242: 	movq	%rbp, %xmm0
    00000247: 	movq	%rax, %xmm4
    0000024c: 	movq	%r14, 0x8(%rax)
    00000250: 	punpcklqdq	%xmm4, %xmm0
    00000254: 	movq	%r15, (%rax)
    00000257: 	addq	%rbx, %rdx
    0000025a: 	movq	%rbp, 0x10(%rax)
    0000025e: 	movq	0x8(%rdx), %rdi
    00000262: 	movups	%xmm0, (%rdx)
    00000265: 	testq	%rdi, %rdi
    00000268: 	je	.Ltmp830 # Offset: 616
    0000026a: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000271: 	je	.Ltmp831 # Offset: 625
    00000273: 	movl	0x8(%rdi), %eax
    00000276: 	leal	-0x1(%rax), %edx
    00000279: 	movl	%edx, 0x8(%rdi)
.Ltmp835:
    0000027c: 	cmpl	$0x1, %eax
    0000027f: 	jne	.Ltmp830 # Offset: 639
    00000285: 	movq	(%rdi), %rax
    00000288: 	movq	%rdi, 0x18(%rsp)
    0000028d: 	callq	*0x10(%rax) # Offset: 653
    00000290: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000297: 	movq	0x18(%rsp), %rdi
    0000029c: 	je	.Ltmp832 # Offset: 668
    0000029e: 	movl	0xc(%rdi), %eax
    000002a1: 	leal	-0x1(%rax), %edx
    000002a4: 	movl	%edx, 0xc(%rdi)
.Ltmp836:
    000002a7: 	cmpl	$0x1, %eax
    000002aa: 	jne	.Ltmp830 # Offset: 682
    000002b0: 	movq	(%rdi), %rax
    000002b3: 	callq	*0x18(%rax) # Offset: 691
    000002b6: 	jmp	.Ltmp830 # Offset: 694
.Ltmp826:
    000002bb: 	testq	%rdi, %rdi
    000002be: 	je	.Ltmp833 # Offset: 702
    000002c4: 	jmp	.Ltmp834 # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp831:
    000002d0: 	movl	$0xffffffff, %eax
    000002d5: 	lock # Offset: 725
    000002d6: 	xaddl	%eax, 0x8(%rdi)
    000002da: 	jmp	.Ltmp835 # Offset: 730
.Ltmp832:
    000002dc: 	movl	$0xffffffff, %eax
    000002e1: 	lock # Offset: 737
    000002e2: 	xaddl	%eax, 0xc(%rdi)
    000002e6: 	jmp	.Ltmp836 # Offset: 742
.Ltmp823:
    000002e8: 	callq	__stack_chk_fail@PLT # Offset: 744
.Ltmp824:
    000002ed: 	leaq	DATAat0x17138(%rip), %rdi
    000002f4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 756
    000002f9: 	endbr64
    000002fd: 	movq	%rax, %rdi
    00000300: 	jmp	.Ltmp837 # Offset: 768
    00000302: 	endbr64
    00000306: 	movq	%rax, %rbx
    00000309: 	jmp	.Ltmp838 # Offset: 777
    0000030b: 	endbr64
    0000030f: 	movq	%rax, %rbp
    00000312: 	jmp	.Ltmp839 # Offset: 786
.Ltmp837:
    00000314: 	callq	__cxa_begin_catch@PLT # Offset: 788
    00000319: 	movl	$0x68, %esi
    0000031e: 	movq	%rbp, %rdi
    00000321: 	callq	_ZdlPvm@PLT # Offset: 801
    00000326: 	callq	__cxa_rethrow@PLT # Offset: 806
.Ltmp838:
    0000032b: 	movq	0x30(%rsp), %rdi
    00000330: 	cmpq	%rbp, %rdi
    00000333: 	je	.Ltmp840 # Offset: 819
    00000335: 	movq	0x40(%rsp), %rax
    0000033a: 	leaq	0x1(%rax), %rsi
    0000033e: 	callq	_ZdlPvm@PLT # Offset: 830
.Ltmp840:
    00000343: 	movq	%rbx, %rbp
.Ltmp839:
    00000346: 	movq	%r12, %rdi
    00000349: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev # Offset: 841
    0000034e: 	movq	%rbp, %rdi
    00000351: 	callq	_Unwind_Resume@PLT # Offset: 849
    00000356: 	endbr64
    0000035a: 	movq	%rax, %rbp
    0000035d: 	callq	__cxa_end_catch@PLT # Offset: 861
    00000362: 	jmp	.Ltmp839 # Offset: 866
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi13EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0xa130
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0xa130
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movq	%rdx, %r15
    0000000d: 	pushq	%r14
    0000000f: 	pushq	%r13
    00000011: 	movq	%rsi, %r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	0x8(%rsi), %rbx
    00000023: 	subq	(%rsi), %rbx
    00000026: 	movq	%fs:0x28, %rax
    0000002f: 	movq	%rax, 0x38(%rsp)
    00000034: 	xorl	%eax, %eax
    00000036: 	movq	%rbx, %r14
    00000039: 	movq	$0x0, 0x10(%rdi)
    00000041: 	sarq	$0x4, %r14
    00000045: 	movups	%xmm0, (%rdi)
    00000048: 	testq	%rbx, %rbx
    0000004b: 	jne	.Ltmp841 # Offset: 75
    00000051: 	callq	clock@PLT # Offset: 81
    00000056: 	movq	%rax, start_time(%rip)
    0000005d: 	testq	%r14, %r14
    00000060: 	je	.Ltmp842 # Offset: 96
.Ltmp860:
    00000066: 	xorl	%edx, %edx
    00000068: 	jmp	.Ltmp843 # Offset: 104
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp848:
    00000070: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000077: 	je	.Ltmp844 # Offset: 119
    0000007d: 	addl	$0x1, 0x8(%rbp)
    00000081: 	testq	%rdi, %rdi
    00000084: 	je	.Ltmp845 # Offset: 132
.Ltmp849:
    00000086: 	movl	0x8(%rdi), %eax
    00000089: 	leal	-0x1(%rax), %ecx
    0000008c: 	movl	%ecx, 0x8(%rdi)
    0000008f: 	cmpl	$0x1, %eax
    00000092: 	je	.Ltmp846 # Offset: 146
.Ltmp845:
    00000094: 	movq	%rbp, 0x8(%rbx)
.Ltmp847:
    00000098: 	addq	$0x1, %rdx
    0000009c: 	cmpq	%r14, %rdx
    0000009f: 	jae	.Ltmp842 # Offset: 159
.Ltmp843:
    000000a5: 	movq	(%r13), %rax
    000000a9: 	movq	%rdx, %rbx
    000000ac: 	shlq	$0x4, %rbx
    000000b0: 	addq	%rbx, %rax
    000000b3: 	addq	(%r12), %rbx
    000000b7: 	movq	(%rax), %rcx
    000000ba: 	movq	0x8(%rax), %rbp
    000000be: 	movq	0x8(%rbx), %rdi
    000000c2: 	movq	%rcx, (%rbx)
    000000c5: 	cmpq	%rdi, %rbp
    000000c8: 	je	.Ltmp847 # Offset: 200
    000000ca: 	testq	%rbp, %rbp
    000000cd: 	jne	.Ltmp848 # Offset: 205
.Ltmp851:
    000000cf: 	testq	%rdi, %rdi
    000000d2: 	je	.Ltmp845 # Offset: 210
    000000d4: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000db: 	jne	.Ltmp849 # Offset: 219
    000000dd: 	movl	$0xffffffff, %eax
    000000e2: 	lock # Offset: 226
    000000e3: 	xaddl	%eax, 0x8(%rdi)
    000000e7: 	cmpl	$0x1, %eax
    000000ea: 	jne	.Ltmp845 # Offset: 234
.Ltmp846:
    000000ec: 	movq	(%rdi), %rax
    000000ef: 	movq	%rdx, 0x8(%rsp)
    000000f4: 	movq	%rdi, (%rsp)
    000000f8: 	callq	*0x10(%rax) # Offset: 248
    000000fb: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000102: 	movq	(%rsp), %rdi
    00000106: 	movq	0x8(%rsp), %rdx
    0000010b: 	je	.Ltmp850 # Offset: 267
    00000111: 	movl	0xc(%rdi), %eax
    00000114: 	leal	-0x1(%rax), %ecx
    00000117: 	movl	%ecx, 0xc(%rdi)
.Ltmp855:
    0000011a: 	cmpl	$0x1, %eax
    0000011d: 	jne	.Ltmp845 # Offset: 285
    00000123: 	movq	(%rdi), %rax
    00000126: 	movq	%rdx, (%rsp)
    0000012a: 	callq	*0x18(%rax) # Offset: 298
    0000012d: 	movq	(%rsp), %rdx
    00000131: 	jmp	.Ltmp845 # Offset: 305
    00000136: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp844:
    00000140: 	lock # Offset: 320
    00000141: 	addl	$0x1, 0x8(%rbp)
    00000145: 	movq	0x8(%rbx), %rdi
    00000149: 	jmp	.Ltmp851 # Offset: 329
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp841:
    00000150: 	testq	%r14, %r14
    00000153: 	jne	.Ltmp852 # Offset: 339
    00000159: 	movq	$0x0, 0x8(%rdi)
    00000161: 	callq	clock@PLT # Offset: 353
    00000166: 	movq	%rax, start_time(%rip)
    0000016d: 	nopl	(%rax) # Size: 3
.Ltmp842:
    00000170: 	callq	clock@PLT # Offset: 368
    00000175: 	movq	(%r15), %rsi
    00000178: 	movq	0x8(%r15), %rdx
    0000017c: 	pxor	%xmm0, %xmm0
    00000180: 	movq	%rax, end_time(%rip)
    00000187: 	leaq	0x20(%rsp), %rbp
    0000018c: 	subq	start_time(%rip), %rax
    00000193: 	leaq	0x10(%rsp), %rdi
    00000198: 	addq	%rsi, %rdx
    0000019b: 	cvtsi2sd	%rax, %xmm0
    000001a0: 	movq	%rbp, 0x10(%rsp)
    000001a5: 	divsd	DATAat0x17370(%rip), %xmm0
    000001ad: 	movq	%xmm0, %rbx
    000001b2: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 434
    000001b7: 	movq	0x18(%rsp), %rdx
    000001bc: 	movq	0x10(%rsp), %rsi
    000001c1: 	movq	%r14, %rdi
    000001c4: 	movq	%rbx, %xmm0
    000001c9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 457
    000001ce: 	movq	0x10(%rsp), %rdi
    000001d3: 	cmpq	%rbp, %rdi
    000001d6: 	je	.Ltmp853 # Offset: 470
    000001d8: 	movq	0x20(%rsp), %rax
    000001dd: 	leaq	0x1(%rax), %rsi
    000001e1: 	callq	_ZdlPvm@PLT # Offset: 481
.Ltmp853:
    000001e6: 	movq	0x38(%rsp), %rax
    000001eb: 	subq	%fs:0x28, %rax
    000001f4: 	jne	.Ltmp854 # Offset: 500
    000001fa: 	addq	$0x48, %rsp
    000001fe: 	movq	%r12, %rax
    00000201: 	popq	%rbx
    00000202: 	popq	%rbp
    00000203: 	popq	%r12
    00000205: 	popq	%r13
    00000207: 	popq	%r14
    00000209: 	popq	%r15
    0000020b: 	retq # Offset: 523
    0000020c: 	nopl	(%rax) # Size: 4
.Ltmp850:
    00000210: 	movl	$0xffffffff, %eax
    00000215: 	lock # Offset: 533
    00000216: 	xaddl	%eax, 0xc(%rdi)
    0000021a: 	jmp	.Ltmp855 # Offset: 538
.Ltmp852:
    0000021f: 	movabsq	$0x7ffffffffffffff0, %rax
    00000229: 	cmpq	%rax, %rbx
    0000022c: 	ja	.Ltmp856 # Offset: 556
    00000232: 	movq	%rbx, %rdi
    00000235: 	callq	_Znwm@PLT # Offset: 565
    0000023a: 	movq	%rax, %rbp
    0000023d: 	pxor	%xmm0, %xmm0
    00000241: 	xorl	%eax, %eax
    00000243: 	nopl	(%rax,%rax) # Size: 5
.Ltmp857:
    00000248: 	movq	%rax, %rdx
    0000024b: 	addq	$0x1, %rax
    0000024f: 	shlq	$0x4, %rdx
    00000253: 	movups	%xmm0, (%rbp,%rdx)
    00000258: 	cmpq	%rax, %r14
    0000025b: 	jne	.Ltmp857 # Offset: 603
    0000025d: 	movq	0x8(%r12), %rax
    00000262: 	movq	(%r12), %rdi
    00000266: 	cmpq	%rdi, %rax
    00000269: 	je	.Ltmp858 # Offset: 617
    0000026b: 	leaq	-0x10(%rax), %rcx
    0000026f: 	xorl	%edx, %edx
    00000271: 	xorl	%eax, %eax
    00000273: 	subq	%rdi, %rcx
    00000276: 	shrq	$0x4, %rcx
    0000027a: 	addq	$0x1, %rcx
    0000027e: 	nop # Size: 2
.Ltmp859:
    00000280: 	movdqu	(%rdi,%rax), %xmm1
    00000285: 	addq	$0x1, %rdx
    00000289: 	movups	%xmm1, (%rbp,%rax)
    0000028e: 	addq	$0x10, %rax
    00000292: 	cmpq	%rcx, %rdx
    00000295: 	jb	.Ltmp859 # Offset: 661
.Ltmp862:
    00000297: 	movq	0x10(%r12), %rsi
    0000029c: 	subq	%rdi, %rsi
    0000029f: 	callq	_ZdlPvm@PLT # Offset: 671
.Ltmp861:
    000002a4: 	addq	%rbp, %rbx
    000002a7: 	movq	%rbp, %xmm0
    000002ac: 	movq	%rbx, %xmm2
    000002b1: 	movq	%rbx, 0x10(%r12)
    000002b6: 	punpcklqdq	%xmm2, %xmm0
    000002ba: 	movups	%xmm0, (%r12)
    000002bf: 	callq	clock@PLT # Offset: 703
    000002c4: 	movq	%rax, start_time(%rip)
    000002cb: 	jmp	.Ltmp860 # Offset: 715
.Ltmp858:
    000002d0: 	testq	%rdi, %rdi
    000002d3: 	je	.Ltmp861 # Offset: 723
    000002d5: 	jmp	.Ltmp862 # Offset: 725
.Ltmp856:
    000002d7: 	leaq	DATAat0x17138(%rip), %rdi
    000002de: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 734
.Ltmp854:
    000002e3: 	callq	__stack_chk_fail@PLT # Offset: 739
    000002e8: 	endbr64
    000002ec: 	movq	%rax, %rbx
    000002ef: 	jmp	.Ltmp863 # Offset: 751
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rbp
    000002f8: 	jmp	.Ltmp864 # Offset: 760
.Ltmp863:
    000002fa: 	movq	0x10(%rsp), %rdi
    000002ff: 	cmpq	%rbp, %rdi
    00000302: 	je	.Ltmp865 # Offset: 770
    00000304: 	movq	0x20(%rsp), %rax
    00000309: 	leaq	0x1(%rax), %rsi
    0000030d: 	callq	_ZdlPvm@PLT # Offset: 781
.Ltmp865:
    00000312: 	movq	%rbx, %rbp
.Ltmp864:
    00000315: 	movq	%r12, %rdi
    00000318: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev # Offset: 792
    0000031d: 	movq	%rbp, %rdi
    00000320: 	callq	_Unwind_Resume@PLT # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0xa460
  Size        : 0x309
  MaxSize     : 0x310
  Offset      : 0xa460
  Section     : .text
  Orc Section : .local.text._Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rsi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x78, %rsp
    00000018: 	movq	0x8(%rdi), %r14
    0000001c: 	subq	(%rdi), %r14
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x68(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	%r14, %rbp
    00000032: 	callq	clock@PLT # Offset: 50
    00000037: 	sarq	$0x4, %rbp
    0000003b: 	movl	$0x14, %ecx
    00000040: 	movq	%rax, start_time(%rip)
    00000047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp868:
    00000050: 	xorl	%ebx, %ebx
    00000052: 	testq	%rbp, %rbp
    00000055: 	je	.Ltmp866 # Offset: 85
    00000057: 	movq	(%r13), %rax
    0000005b: 	xorl	%ebx, %ebx
    0000005d: 	leaq	(%r14,%rax), %rdx
    00000061: 	nopl	(%rax) # Size: 7
.Ltmp867:
    00000068: 	cmpq	$0x1, (%rax)
    0000006c: 	sbbl	$-0x1, %ebx
    0000006f: 	addq	$0x10, %rax
    00000073: 	cmpq	%rdx, %rax
    00000076: 	jne	.Ltmp867 # Offset: 118
.Ltmp866:
    00000078: 	subq	$0x1, %rcx
    0000007c: 	jne	.Ltmp868 # Offset: 124
    0000007e: 	callq	clock@PLT # Offset: 126
    00000083: 	movq	(%r12), %r15
    00000087: 	movq	0x8(%r12), %r13
    0000008c: 	pxor	%xmm0, %xmm0
    00000090: 	movq	%rax, end_time(%rip)
    00000097: 	subq	start_time(%rip), %rax
    0000009e: 	leaq	0x30(%rsp), %r14
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	movq	%r15, %rax
    000000ab: 	movq	%r14, 0x20(%rsp)
    000000b0: 	divsd	DATAat0x17370(%rip), %xmm0
    000000b8: 	addq	%r13, %rax
    000000bb: 	je	.Ltmp869 # Offset: 187
    000000bd: 	testq	%r15, %r15
    000000c0: 	je	.Ltmp870 # Offset: 192
.Ltmp869:
    000000c6: 	movq	%r13, 0x18(%rsp)
    000000cb: 	cmpq	$0xf, %r13
    000000cf: 	ja	.Ltmp871 # Offset: 207
    000000d5: 	cmpq	$0x1, %r13
    000000d9: 	jne	.Ltmp872 # Offset: 217
    000000df: 	movzbl	(%r15), %eax
    000000e3: 	leaq	0x20(%rsp), %r8
    000000e8: 	movb	%al, 0x30(%rsp)
    000000ec: 	movq	%r14, %rax
.Ltmp881:
    000000ef: 	movq	%r13, 0x28(%rsp)
    000000f4: 	movq	%r8, %rdx
    000000f7: 	movq	%rbp, %rsi
    000000fa: 	movl	$0x14, %edi
    000000ff: 	movb	$0x0, (%rax,%r13)
    00000104: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 260
    00000109: 	movq	0x20(%rsp), %rdi
    0000010e: 	cmpq	%r14, %rdi
    00000111: 	je	.Ltmp873 # Offset: 273
    00000113: 	movq	0x30(%rsp), %rax
    00000118: 	leaq	0x1(%rax), %rsi
    0000011c: 	callq	_ZdlPvm@PLT # Offset: 284
.Ltmp873:
    00000121: 	movq	(%r12), %r14
    00000125: 	movq	0x8(%r12), %r12
    0000012a: 	leaq	0x50(%rsp), %r13
    0000012f: 	movq	%r13, 0x40(%rsp)
    00000134: 	movq	%r14, %rax
    00000137: 	addq	%r12, %rax
    0000013a: 	je	.Ltmp874 # Offset: 314
    0000013c: 	testq	%r14, %r14
    0000013f: 	je	.Ltmp870 # Offset: 319
.Ltmp874:
    00000145: 	movq	%r12, 0x18(%rsp)
    0000014a: 	cmpq	$0xf, %r12
    0000014e: 	ja	.Ltmp875 # Offset: 334
    00000154: 	cmpq	$0x1, %r12
    00000158: 	jne	.Ltmp876 # Offset: 344
    0000015e: 	movzbl	(%r14), %eax
    00000162: 	movb	%al, 0x50(%rsp)
    00000166: 	movq	%r13, %rax
.Ltmp883:
    00000169: 	movslq	%ebx, %rbx
    0000016c: 	movq	%r12, 0x48(%rsp)
    00000171: 	movb	$0x0, (%rax,%r12)
    00000176: 	cmpq	%rbx, %rbp
    00000179: 	je	.Ltmp877 # Offset: 377
    0000017b: 	movq	0x40(%rsp), %rdx
    00000180: 	leaq	DATAat0x1710f(%rip), %rsi
    00000187: 	movl	$0x1, %edi
    0000018c: 	xorl	%eax, %eax
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
.Ltmp877:
    00000193: 	movq	0x40(%rsp), %rdi
    00000198: 	cmpq	%r13, %rdi
    0000019b: 	je	.Ltmp878 # Offset: 411
    0000019d: 	movq	0x50(%rsp), %rax
    000001a2: 	leaq	0x1(%rax), %rsi
    000001a6: 	callq	_ZdlPvm@PLT # Offset: 422
.Ltmp878:
    000001ab: 	movq	0x68(%rsp), %rax
    000001b0: 	subq	%fs:0x28, %rax
    000001b9: 	jne	.Ltmp879 # Offset: 441
    000001bf: 	addq	$0x78, %rsp
    000001c3: 	popq	%rbx
    000001c4: 	popq	%rbp
    000001c5: 	popq	%r12
    000001c7: 	popq	%r13
    000001c9: 	popq	%r14
    000001cb: 	popq	%r15
    000001cd: 	retq # Offset: 461
.Ltmp872:
    000001ce: 	testq	%r13, %r13
    000001d1: 	jne	.Ltmp880 # Offset: 465
    000001d7: 	movq	%r14, %rax
    000001da: 	leaq	0x20(%rsp), %r8
    000001df: 	jmp	.Ltmp881 # Offset: 479
.Ltmp876:
    000001e4: 	testq	%r12, %r12
    000001e7: 	jne	.Ltmp882 # Offset: 487
    000001ed: 	movq	%r13, %rax
    000001f0: 	jmp	.Ltmp883 # Offset: 496
.Ltmp875:
    000001f5: 	leaq	0x40(%rsp), %rdi
    000001fa: 	leaq	0x18(%rsp), %rsi
    000001ff: 	xorl	%edx, %edx
    00000201: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 513
    00000206: 	movq	%rax, 0x40(%rsp)
    0000020b: 	movq	%rax, %rdi
    0000020e: 	movq	0x18(%rsp), %rax
    00000213: 	movq	%rax, 0x50(%rsp)
.Ltmp885:
    00000218: 	movq	%r12, %rdx
    0000021b: 	movq	%r14, %rsi
    0000021e: 	callq	memcpy@PLT # Offset: 542
    00000223: 	movq	0x18(%rsp), %r12
    00000228: 	movq	0x40(%rsp), %rax
    0000022d: 	jmp	.Ltmp883 # Offset: 557
.Ltmp871:
    00000232: 	leaq	0x20(%rsp), %r8
    00000237: 	leaq	0x18(%rsp), %rsi
    0000023c: 	xorl	%edx, %edx
    0000023e: 	movsd	%xmm0, 0x8(%rsp)
    00000244: 	movq	%r8, %rdi
    00000247: 	movq	%r8, (%rsp)
    0000024b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 587
    00000250: 	movq	(%rsp), %r8
    00000254: 	movsd	0x8(%rsp), %xmm0
    0000025a: 	movq	%rax, 0x20(%rsp)
    0000025f: 	movq	%rax, %rdi
    00000262: 	movq	0x18(%rsp), %rax
    00000267: 	movq	%rax, 0x30(%rsp)
.Ltmp884:
    0000026c: 	movq	%r13, %rdx
    0000026f: 	movq	%r15, %rsi
    00000272: 	movq	%r8, 0x8(%rsp)
    00000277: 	movsd	%xmm0, (%rsp)
    0000027c: 	callq	memcpy@PLT # Offset: 636
    00000281: 	movq	0x18(%rsp), %r13
    00000286: 	movq	0x20(%rsp), %rax
    0000028b: 	movsd	(%rsp), %xmm0
    00000290: 	movq	0x8(%rsp), %r8
    00000295: 	jmp	.Ltmp881 # Offset: 661
.Ltmp879:
    0000029a: 	callq	__stack_chk_fail@PLT # Offset: 666
.Ltmp880:
    0000029f: 	movq	%r14, %rdi
    000002a2: 	leaq	0x20(%rsp), %r8
    000002a7: 	jmp	.Ltmp884 # Offset: 679
.Ltmp882:
    000002a9: 	movq	%r13, %rdi
    000002ac: 	jmp	.Ltmp885 # Offset: 684
.Ltmp870:
    000002b1: 	leaq	DATAat0x17008(%rip), %rdi
    000002b8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 696
    000002bd: 	endbr64
    000002c1: 	movq	%rax, %rbp
    000002c4: 	jmp	.Ltmp886 # Offset: 708
    000002c6: 	endbr64
    000002ca: 	movq	%rax, %rbp
    000002cd: 	jmp	.Ltmp887 # Offset: 717
.Ltmp886:
    000002cf: 	movq	0x20(%rsp), %rdi
    000002d4: 	cmpq	%r14, %rdi
    000002d7: 	je	.Ltmp888 # Offset: 727
    000002d9: 	movq	0x30(%rsp), %rax
    000002de: 	leaq	0x1(%rax), %rsi
    000002e2: 	callq	_ZdlPvm@PLT # Offset: 738
.Ltmp888:
    000002e7: 	movq	%rbp, %rdi
    000002ea: 	callq	_Unwind_Resume@PLT # Offset: 746
.Ltmp887:
    000002ef: 	movq	0x40(%rsp), %rdi
    000002f4: 	cmpq	%r13, %rdi
    000002f7: 	je	.Ltmp888 # Offset: 759
    000002f9: 	movq	0x50(%rsp), %rax
    000002fe: 	leaq	0x1(%rax), %rsi
    00000302: 	callq	_ZdlPvm@PLT # Offset: 770
    00000307: 	jmp	.Ltmp888 # Offset: 775
DWARF CFI Instructions:
    <empty>
End of Function "_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 102
  State       : disassembled
  Address     : 0xa770
  Size        : 0x1fb
  MaxSize     : 0x200
  Offset      : 0xa770
  Section     : .text
  Orc Section : .local.text._Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0101:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	$0x14, %ebp
    00000015: 	pushq	%rbx
    00000016: 	movq	%rdi, %rbx
    00000019: 	movl	$0x7b, %edi
    0000001e: 	subq	$0x48, %rsp
    00000022: 	movq	%fs:0x28, %rax
    0000002b: 	movq	%rax, 0x38(%rsp)
    00000030: 	xorl	%eax, %eax
    00000032: 	callq	srand@PLT # Offset: 50
    00000037: 	callq	clock@PLT # Offset: 55
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	movq	0x8(%rbx), %rax
.Ltmp891:
    00000047: 	movq	(%rbx), %r13
    0000004a: 	cmpq	%rax, %r13
    0000004d: 	je	.Ltmp889 # Offset: 77
    0000004f: 	nop # Size: 1
.Ltmp890:
    00000050: 	callq	rand@PLT # Offset: 80
    00000055: 	movq	(%r13), %rdx
    00000059: 	addq	$0x10, %r13
    0000005d: 	sarl	$0x5, %eax
    00000060: 	movzwl	%ax, %eax
    00000063: 	movq	%rax, %xmm0
    00000068: 	movq	%rax, 0x60(%rdx)
    0000006c: 	movq	0x8(%rbx), %rax
    00000070: 	punpcklqdq	%xmm0, %xmm0
    00000074: 	movups	%xmm0, (%rdx)
    00000077: 	movups	%xmm0, 0x10(%rdx)
    0000007b: 	movups	%xmm0, 0x20(%rdx)
    0000007f: 	movups	%xmm0, 0x30(%rdx)
    00000083: 	movups	%xmm0, 0x40(%rdx)
    00000087: 	movups	%xmm0, 0x50(%rdx)
    0000008b: 	cmpq	%r13, %rax
    0000008e: 	jne	.Ltmp890 # Offset: 142
    00000090: 	subq	$0x1, %rbp
    00000094: 	jne	.Ltmp891 # Offset: 148
.Ltmp889:
    00000096: 	callq	clock@PLT # Offset: 150
    0000009b: 	movq	(%r12), %r15
    0000009f: 	pxor	%xmm0, %xmm0
    000000a3: 	movq	0x8(%r12), %r12
    000000a8: 	movq	%rax, end_time(%rip)
    000000af: 	subq	start_time(%rip), %rax
    000000b6: 	leaq	0x20(%rsp), %rbp
    000000bb: 	cvtsi2sd	%rax, %xmm0
    000000c0: 	movq	%r15, %rax
    000000c3: 	divsd	DATAat0x17370(%rip), %xmm0
    000000cb: 	movq	%rbp, 0x10(%rsp)
    000000d0: 	addq	%r12, %rax
    000000d3: 	movq	%xmm0, %r13
    000000d8: 	je	.Ltmp892 # Offset: 216
    000000da: 	testq	%r15, %r15
    000000dd: 	je	.Ltmp893 # Offset: 221
.Ltmp892:
    000000e3: 	movq	%r12, 0x8(%rsp)
    000000e8: 	cmpq	$0xf, %r12
    000000ec: 	ja	.Ltmp894 # Offset: 236
    000000f2: 	cmpq	$0x1, %r12
    000000f6: 	jne	.Ltmp895 # Offset: 246
    000000f8: 	movzbl	(%r15), %eax
    000000fc: 	leaq	0x10(%rsp), %r14
    00000101: 	movb	%al, 0x20(%rsp)
    00000105: 	movq	%rbp, %rax
    00000108: 	jmp	.Ltmp896 # Offset: 264
.Ltmp895:
    0000010a: 	testq	%r12, %r12
    0000010d: 	jne	.Ltmp897 # Offset: 269
    00000113: 	movq	%rbp, %rax
    00000116: 	leaq	0x10(%rsp), %r14
.Ltmp896:
    0000011b: 	movq	%r12, 0x18(%rsp)
    00000120: 	movq	%r14, %rdx
    00000123: 	movl	$0x14, %edi
    00000128: 	movq	%r13, %xmm0
    0000012d: 	movb	$0x0, (%rax,%r12)
    00000132: 	movq	0x8(%rbx), %rsi
    00000136: 	subq	(%rbx), %rsi
    00000139: 	sarq	$0x4, %rsi
    0000013d: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 317
    00000142: 	movq	0x10(%rsp), %rdi
    00000147: 	cmpq	%rbp, %rdi
    0000014a: 	je	.Ltmp898 # Offset: 330
    0000014c: 	movq	0x20(%rsp), %rax
    00000151: 	leaq	0x1(%rax), %rsi
    00000155: 	callq	_ZdlPvm@PLT # Offset: 341
.Ltmp898:
    0000015a: 	movq	0x38(%rsp), %rax
    0000015f: 	subq	%fs:0x28, %rax
    00000168: 	jne	.Ltmp899 # Offset: 360
    0000016a: 	addq	$0x48, %rsp
    0000016e: 	popq	%rbx
    0000016f: 	popq	%rbp
    00000170: 	popq	%r12
    00000172: 	popq	%r13
    00000174: 	popq	%r14
    00000176: 	popq	%r15
    00000178: 	retq # Offset: 376
.Ltmp894:
    00000179: 	leaq	0x10(%rsp), %r14
    0000017e: 	leaq	0x8(%rsp), %rsi
    00000183: 	xorl	%edx, %edx
    00000185: 	movq	%r14, %rdi
    00000188: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 392
    0000018d: 	movq	%rax, 0x10(%rsp)
    00000192: 	movq	%rax, %rdi
    00000195: 	movq	0x8(%rsp), %rax
    0000019a: 	movq	%rax, 0x20(%rsp)
.Ltmp900:
    0000019f: 	movq	%r12, %rdx
    000001a2: 	movq	%r15, %rsi
    000001a5: 	callq	memcpy@PLT # Offset: 421
    000001aa: 	movq	0x8(%rsp), %r12
    000001af: 	movq	0x10(%rsp), %rax
    000001b4: 	jmp	.Ltmp896 # Offset: 436
.Ltmp897:
    000001b9: 	movq	%rbp, %rdi
    000001bc: 	leaq	0x10(%rsp), %r14
    000001c1: 	jmp	.Ltmp900 # Offset: 449
.Ltmp899:
    000001c3: 	callq	__stack_chk_fail@PLT # Offset: 451
.Ltmp893:
    000001c8: 	leaq	DATAat0x17008(%rip), %rdi
    000001cf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 463
    000001d4: 	endbr64
    000001d8: 	movq	%rax, %r12
    000001db: 	movq	0x10(%rsp), %rdi
    000001e0: 	cmpq	%rbp, %rdi
    000001e3: 	je	.Ltmp901 # Offset: 483
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	leaq	0x1(%rax), %rsi
    000001ee: 	callq	_ZdlPvm@PLT # Offset: 494
.Ltmp901:
    000001f3: 	movq	%r12, %rdi
    000001f6: 	callq	_Unwind_Resume@PLT # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 103
  State       : disassembled
  Address     : 0xa970
  Size        : 0x252
  MaxSize     : 0x260
  Offset      : 0xa970
  Section     : .text
  Orc Section : .local.text._Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0102:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movq	%rdi, %r14
    00000009: 	pushq	%r13
    0000000b: 	movq	%rsi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	pushq	%rbx
    00000012: 	xorl	%ebx, %ebx
    00000014: 	subq	$0x50, %rsp
    00000018: 	movq	0x8(%rdi), %r12
    0000001c: 	subq	(%rdi), %r12
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	sarq	$0x4, %r12
    00000033: 	callq	clock@PLT # Offset: 51
    00000038: 	pxor	%xmm0, %xmm0
    0000003c: 	movq	%rax, start_time(%rip)
    00000043: 	testq	%r12, %r12
    00000046: 	jne	.Ltmp902 # Offset: 70
    00000048: 	jmp	.Ltmp903 # Offset: 72
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp904:
    00000050: 	addq	$0x1, %rbx
    00000054: 	cmpq	%r12, %rbx
    00000057: 	je	.Ltmp903 # Offset: 87
.Ltmp902:
    00000059: 	movq	%rbx, %rax
    0000005c: 	shlq	$0x4, %rax
    00000060: 	addq	(%r14), %rax
    00000063: 	movq	0x8(%rax), %rbp
    00000067: 	movups	%xmm0, (%rax)
    0000006a: 	testq	%rbp, %rbp
    0000006d: 	je	.Ltmp904 # Offset: 109
    0000006f: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000076: 	je	.Ltmp905 # Offset: 118
    0000007c: 	movl	0x8(%rbp), %eax
    0000007f: 	leal	-0x1(%rax), %edx
    00000082: 	movl	%edx, 0x8(%rbp)
.Ltmp913:
    00000085: 	cmpl	$0x1, %eax
    00000088: 	jne	.Ltmp904 # Offset: 136
    0000008a: 	movq	(%rbp), %rax
    0000008e: 	movq	%rbp, %rdi
    00000091: 	callq	*0x10(%rax) # Offset: 145
    00000094: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000009b: 	pxor	%xmm0, %xmm0
    0000009f: 	je	.Ltmp906 # Offset: 159
    000000a5: 	movl	0xc(%rbp), %eax
    000000a8: 	leal	-0x1(%rax), %edx
    000000ab: 	movl	%edx, 0xc(%rbp)
.Ltmp916:
    000000ae: 	cmpl	$0x1, %eax
    000000b1: 	jne	.Ltmp904 # Offset: 177
    000000b3: 	movq	(%rbp), %rax
    000000b7: 	addq	$0x1, %rbx
    000000bb: 	movq	%rbp, %rdi
    000000be: 	callq	*0x18(%rax) # Offset: 190
    000000c1: 	pxor	%xmm0, %xmm0
    000000c5: 	cmpq	%r12, %rbx
    000000c8: 	jne	.Ltmp902 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp903:
    000000d0: 	callq	clock@PLT # Offset: 208
    000000d5: 	movq	(%r13), %rbp
    000000d9: 	pxor	%xmm0, %xmm0
    000000dd: 	movq	0x8(%r13), %r13
    000000e1: 	movq	%rax, end_time(%rip)
    000000e8: 	subq	start_time(%rip), %rax
    000000ef: 	leaq	0x30(%rsp), %rbx
    000000f4: 	cvtsi2sd	%rax, %xmm0
    000000f9: 	movq	%rbp, %rax
    000000fc: 	movq	%rbx, 0x20(%rsp)
    00000101: 	divsd	DATAat0x17370(%rip), %xmm0
    00000109: 	addq	%r13, %rax
    0000010c: 	je	.Ltmp907 # Offset: 268
    0000010e: 	testq	%rbp, %rbp
    00000111: 	je	.Ltmp908 # Offset: 273
.Ltmp907:
    00000117: 	movq	%r13, 0x18(%rsp)
    0000011c: 	cmpq	$0xf, %r13
    00000120: 	ja	.Ltmp909 # Offset: 288
    00000126: 	cmpq	$0x1, %r13
    0000012a: 	jne	.Ltmp910 # Offset: 298
    0000012c: 	movzbl	(%rbp), %eax
    00000130: 	movb	%al, 0x30(%rsp)
    00000134: 	movq	%rbx, %rax
.Ltmp915:
    00000137: 	movq	%r13, 0x28(%rsp)
    0000013c: 	movq	%r12, %rdi
    0000013f: 	movb	$0x0, (%rax,%r13)
    00000144: 	movq	0x28(%rsp), %rdx
    00000149: 	movq	0x20(%rsp), %rsi
    0000014e: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 334
    00000153: 	movq	0x20(%rsp), %rdi
    00000158: 	cmpq	%rbx, %rdi
    0000015b: 	je	.Ltmp911 # Offset: 347
    0000015d: 	movq	0x30(%rsp), %rax
    00000162: 	leaq	0x1(%rax), %rsi
    00000166: 	callq	_ZdlPvm@PLT # Offset: 358
.Ltmp911:
    0000016b: 	movq	0x48(%rsp), %rax
    00000170: 	subq	%fs:0x28, %rax
    00000179: 	jne	.Ltmp912 # Offset: 377
    0000017f: 	addq	$0x50, %rsp
    00000183: 	popq	%rbx
    00000184: 	popq	%rbp
    00000185: 	popq	%r12
    00000187: 	popq	%r13
    00000189: 	popq	%r14
    0000018b: 	retq # Offset: 395
    0000018c: 	nopl	(%rax) # Size: 4
.Ltmp905:
    00000190: 	movl	$0xffffffff, %eax
    00000195: 	lock # Offset: 405
    00000196: 	xaddl	%eax, 0x8(%rbp)
    0000019a: 	jmp	.Ltmp913 # Offset: 410
    0000019f: 	nop # Size: 1
.Ltmp910:
    000001a0: 	testq	%r13, %r13
    000001a3: 	jne	.Ltmp914 # Offset: 419
    000001a5: 	movq	%rbx, %rax
    000001a8: 	jmp	.Ltmp915 # Offset: 424
    000001aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp906:
    000001b0: 	movl	$0xffffffff, %eax
    000001b5: 	lock # Offset: 437
    000001b6: 	xaddl	%eax, 0xc(%rbp)
    000001ba: 	jmp	.Ltmp916 # Offset: 442
    000001bf: 	nop # Size: 1
.Ltmp909:
    000001c0: 	leaq	0x20(%rsp), %rdi
    000001c5: 	leaq	0x18(%rsp), %rsi
    000001ca: 	xorl	%edx, %edx
    000001cc: 	movsd	%xmm0, 0x8(%rsp)
    000001d2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 466
    000001d7: 	movsd	0x8(%rsp), %xmm0
    000001dd: 	movq	%rax, 0x20(%rsp)
    000001e2: 	movq	%rax, %rdi
    000001e5: 	movq	0x18(%rsp), %rax
    000001ea: 	movq	%rax, 0x30(%rsp)
.Ltmp917:
    000001ef: 	movq	%r13, %rdx
    000001f2: 	movq	%rbp, %rsi
    000001f5: 	movsd	%xmm0, 0x8(%rsp)
    000001fb: 	callq	memcpy@PLT # Offset: 507
    00000200: 	movq	0x18(%rsp), %r13
    00000205: 	movq	0x20(%rsp), %rax
    0000020a: 	movsd	0x8(%rsp), %xmm0
    00000210: 	jmp	.Ltmp915 # Offset: 528
.Ltmp912:
    00000215: 	callq	__stack_chk_fail@PLT # Offset: 533
.Ltmp914:
    0000021a: 	movq	%rbx, %rdi
    0000021d: 	jmp	.Ltmp917 # Offset: 541
.Ltmp908:
    0000021f: 	leaq	DATAat0x17008(%rip), %rdi
    00000226: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 550
    0000022b: 	endbr64
    0000022f: 	movq	%rax, %rbp
    00000232: 	movq	0x20(%rsp), %rdi
    00000237: 	cmpq	%rbx, %rdi
    0000023a: 	je	.Ltmp918 # Offset: 570
    0000023c: 	movq	0x30(%rsp), %rax
    00000241: 	leaq	0x1(%rax), %rsi
    00000245: 	callq	_ZdlPvm@PLT # Offset: 581
.Ltmp918:
    0000024a: 	movq	%rbp, %rdi
    0000024d: 	callq	_Unwind_Resume@PLT # Offset: 589
DWARF CFI Instructions:
    <empty>
End of Function "_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_" after disassembly {
  Number      : 104
  State       : disassembled
  Address     : 0xabd0
  Size        : 0x16f
  MaxSize     : 0x170
  Offset      : 0xabd0
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0103:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp919 # Offset: 31
.Ltmp926:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rcx
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rcx), %rsi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rdi
    00000042: 	movq	(%rdi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rsi, %rdx
    0000004b: 	jge	.Ltmp920 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rsi, %rdx
    00000054: 	movq	%rcx, %rax
    00000057: 	movq	%rcx, (%rdi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rsi
    00000061: 	movq	%r8, %rcx
.Ltmp920:
    00000064: 	movq	-0x8(%r12), %r8
    00000069: 	movq	(%r8), %r9
    0000006c: 	cmpq	%rsi, %r9
    0000006f: 	jge	.Ltmp921 # Offset: 111
    00000071: 	movq	%r8, (%rbp)
    00000075: 	movq	%rsi, %r9
    00000078: 	movq	%rcx, %r8
    0000007b: 	movq	%rcx, -0x8(%r12)
    00000080: 	movq	(%rdi), %rax
    00000083: 	movq	(%rax), %rdx
.Ltmp921:
    00000086: 	cmpq	%rdx, %r9
    00000089: 	jl	.Ltmp922 # Offset: 137
    0000008f: 	movq	-0x8(%r12), %rax
    00000094: 	movq	%rdx, %rdi
    00000097: 	movq	(%rax), %rax
.Ltmp931:
    0000009a: 	movq	%r12, %rbx
    0000009d: 	movq	%rbp, %rsi
.Ltmp930:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp923 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp924 # Offset: 176
.Ltmp927:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp925 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp919 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp926 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp923:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp927 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp928 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp929:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp927 # Offset: 263
.Ltmp928:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp929 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp927 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp924:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp930 # Offset: 297
.Ltmp925:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp919 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp926 # Offset: 335
.Ltmp922:
    00000154: 	movq	%r8, (%rdi)
    00000157: 	movq	%rax, -0x8(%r12)
    0000015c: 	movq	(%rdi), %rax
    0000015f: 	movq	(%rax), %rdi
    00000162: 	movq	%rdx, %rax
    00000165: 	jmp	.Ltmp931 # Offset: 357
.Ltmp919:
    0000016a: 	popq	%rbx
    0000016b: 	popq	%rbp
    0000016c: 	popq	%r12
    0000016e: 	retq # Offset: 366
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_"

Binary Function "_Z14QuickSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 105
  State       : disassembled
  Address     : 0xad40
  Size        : 0x23a
  MaxSize     : 0x240
  Offset      : 0xad40
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0104:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x30(%rsp), %rbx
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	0x8(%rbp), %rsi
    00000034: 	movq	(%rbp), %rdi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 63
    00000044: 	callq	clock@PLT # Offset: 68
    00000049: 	movq	(%r13), %r14
    0000004d: 	movq	0x8(%r13), %r12
    00000051: 	pxor	%xmm0, %xmm0
    00000055: 	movq	%rax, end_time(%rip)
    0000005c: 	subq	start_time(%rip), %rax
    00000063: 	cvtsi2sd	%rax, %xmm0
    00000068: 	movq	%r14, %rax
    0000006b: 	movq	%rbx, 0x20(%rsp)
    00000070: 	divsd	DATAat0x17370(%rip), %xmm0
    00000078: 	addq	%r12, %rax
    0000007b: 	je	.Ltmp932 # Offset: 123
    0000007d: 	testq	%r14, %r14
    00000080: 	je	.Ltmp933 # Offset: 128
.Ltmp932:
    00000086: 	movq	%r12, 0x18(%rsp)
    0000008b: 	cmpq	$0xf, %r12
    0000008f: 	ja	.Ltmp934 # Offset: 143
    00000095: 	cmpq	$0x1, %r12
    00000099: 	jne	.Ltmp935 # Offset: 153
    0000009f: 	movzbl	(%r14), %eax
    000000a3: 	movb	%al, 0x30(%rsp)
    000000a7: 	movq	%rbx, %rax
.Ltmp943:
    000000aa: 	movq	%r12, 0x28(%rsp)
    000000af: 	movb	$0x0, (%rax,%r12)
    000000b4: 	movq	0x8(%rbp), %rdi
    000000b8: 	movq	0x28(%rsp), %rdx
    000000bd: 	subq	(%rbp), %rdi
    000000c1: 	movq	0x20(%rsp), %rsi
    000000c6: 	sarq	$0x3, %rdi
    000000ca: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 202
    000000cf: 	movq	0x20(%rsp), %rdi
    000000d4: 	cmpq	%rbx, %rdi
    000000d7: 	je	.Ltmp936 # Offset: 215
    000000d9: 	movq	0x30(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp936:
    000000e7: 	movq	(%r13), %rsi
    000000eb: 	movq	0x8(%r13), %rdx
    000000ef: 	leaq	0x20(%rsp), %rdi
    000000f4: 	movq	%rbx, 0x20(%rsp)
    000000f9: 	addq	%rsi, %rdx
    000000fc: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 252
    00000101: 	movq	(%rbp), %rax
    00000105: 	movq	0x8(%rbp), %rsi
    00000109: 	addq	$0x8, %rax
    0000010d: 	jmp	.Ltmp937 # Offset: 269
    0000010f: 	nop # Size: 1
.Ltmp939:
    00000110: 	movq	(%rdx), %rcx
    00000113: 	movq	-0x8(%rdx), %rdx
    00000117: 	addq	$0x8, %rax
    0000011b: 	movq	(%rdx), %rdi
    0000011e: 	cmpq	%rdi, (%rcx)
    00000121: 	jl	.Ltmp938 # Offset: 289
.Ltmp937:
    00000123: 	movq	%rax, %rdx
    00000126: 	cmpq	%rax, %rsi
    00000129: 	jne	.Ltmp939 # Offset: 297
.Ltmp944:
    0000012b: 	movq	0x20(%rsp), %rdi
    00000130: 	cmpq	%rbx, %rdi
    00000133: 	je	.Ltmp940 # Offset: 307
    00000135: 	movq	0x30(%rsp), %rax
    0000013a: 	leaq	0x1(%rax), %rsi
    0000013e: 	callq	_ZdlPvm@PLT # Offset: 318
.Ltmp940:
    00000143: 	movq	0x48(%rsp), %rax
    00000148: 	subq	%fs:0x28, %rax
    00000151: 	jne	.Ltmp941 # Offset: 337
    00000157: 	addq	$0x50, %rsp
    0000015b: 	popq	%rbx
    0000015c: 	popq	%rbp
    0000015d: 	popq	%r12
    0000015f: 	popq	%r13
    00000161: 	popq	%r14
    00000163: 	retq # Offset: 355
    00000164: 	nopl	(%rax) # Size: 4
.Ltmp935:
    00000168: 	testq	%r12, %r12
    0000016b: 	jne	.Ltmp942 # Offset: 363
    00000171: 	movq	%rbx, %rax
    00000174: 	jmp	.Ltmp943 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp938:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp944 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp934:
    000001a0: 	leaq	0x20(%rsp), %rdi
    000001a5: 	leaq	0x18(%rsp), %rsi
    000001aa: 	xorl	%edx, %edx
    000001ac: 	movsd	%xmm0, 0x8(%rsp)
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movsd	0x8(%rsp), %xmm0
    000001bd: 	movq	%rax, 0x20(%rsp)
    000001c2: 	movq	%rax, %rdi
    000001c5: 	movq	0x18(%rsp), %rax
    000001ca: 	movq	%rax, 0x30(%rsp)
.Ltmp945:
    000001cf: 	movq	%r12, %rdx
    000001d2: 	movq	%r14, %rsi
    000001d5: 	movsd	%xmm0, 0x8(%rsp)
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x18(%rsp), %r12
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	movsd	0x8(%rsp), %xmm0
    000001f0: 	jmp	.Ltmp943 # Offset: 496
.Ltmp941:
    000001f5: 	callq	__stack_chk_fail@PLT # Offset: 501
.Ltmp942:
    000001fa: 	movq	%rbx, %rdi
    000001fd: 	jmp	.Ltmp945 # Offset: 509
.Ltmp933:
    000001ff: 	leaq	DATAat0x17008(%rip), %rdi
    00000206: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 518
    0000020b: 	endbr64
.Ltmp947:
    0000020f: 	movq	%rax, %rbp
    00000212: 	jmp	.Ltmp946 # Offset: 530
    00000214: 	endbr64
    00000218: 	jmp	.Ltmp947 # Offset: 536
.Ltmp946:
    0000021a: 	movq	0x20(%rsp), %rdi
    0000021f: 	cmpq	%rbx, %rdi
    00000222: 	je	.Ltmp948 # Offset: 546
    00000224: 	movq	0x30(%rsp), %rax
    00000229: 	leaq	0x1(%rax), %rsi
    0000022d: 	callq	_ZdlPvm@PLT # Offset: 557
.Ltmp948:
    00000232: 	movq	%rbp, %rdi
    00000235: 	callq	_Unwind_Resume@PLT # Offset: 565
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_" after disassembly {
  Number      : 106
  State       : disassembled
  Address     : 0xaf80
  Size        : 0x174
  MaxSize     : 0x180
  Offset      : 0xaf80
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0105:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp949 # Offset: 31
.Ltmp956:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rdi
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rdi), %rcx
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rsi
    00000042: 	movq	(%rsi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rcx, %rdx
    0000004b: 	jge	.Ltmp950 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rcx, %rdx
    00000054: 	movq	%rdi, %rax
    00000057: 	movq	%rdi, (%rsi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rcx
    00000061: 	movq	%r8, %rdi
.Ltmp950:
    00000064: 	movq	-0x8(%r12), %r9
    00000069: 	movq	(%r9), %r8
    0000006c: 	cmpq	%rcx, %r8
    0000006f: 	jge	.Ltmp951 # Offset: 111
    00000071: 	movq	%r9, (%rbp)
    00000075: 	movq	%rcx, %r8
    00000078: 	movq	%rdi, -0x8(%r12)
    0000007d: 	movq	(%rsi), %rax
    00000080: 	movq	(%rax), %rdx
.Ltmp951:
    00000083: 	cmpq	%r8, %rdx
    00000086: 	jg	.Ltmp952 # Offset: 134
    0000008c: 	movq	-0x8(%r12), %rax
    00000091: 	movq	%rdx, %rdi
    00000094: 	movq	(%rax), %rax
.Ltmp961:
    00000097: 	movq	%r12, %rbx
    0000009a: 	movq	%rbp, %rsi
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp960:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp953 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp954 # Offset: 176
.Ltmp957:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp955 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp949 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp956 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp953:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp957 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp958 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp959:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp957 # Offset: 263
.Ltmp958:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp959 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp957 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp954:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp960 # Offset: 297
.Ltmp955:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp949 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp956 # Offset: 335
.Ltmp952:
    00000154: 	movq	-0x8(%r12), %rcx
    00000159: 	movq	%rcx, (%rsi)
    0000015c: 	movq	%rax, -0x8(%r12)
    00000161: 	movq	(%rsi), %rax
    00000164: 	movq	(%rax), %rdi
    00000167: 	movq	%rdx, %rax
    0000016a: 	jmp	.Ltmp961 # Offset: 362
.Ltmp949:
    0000016f: 	popq	%rbx
    00000170: 	popq	%rbp
    00000171: 	popq	%r12
    00000173: 	retq # Offset: 371
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_"

Binary Function "_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 107
  State       : disassembled
  Address     : 0xb100
  Size        : 0x2f7
  MaxSize     : 0x300
  Offset      : 0xb100
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0106:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x70, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x68(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x30(%rsp), %rbx
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	0x8(%rbp), %rsi
    00000034: 	movq	(%rbp), %rdi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 63
    00000044: 	callq	clock@PLT # Offset: 68
    00000049: 	movq	(%r13), %r14
    0000004d: 	movq	0x8(%r13), %r12
    00000051: 	pxor	%xmm0, %xmm0
    00000055: 	movq	%rax, end_time(%rip)
    0000005c: 	subq	start_time(%rip), %rax
    00000063: 	cvtsi2sd	%rax, %xmm0
    00000068: 	movq	%r14, %rax
    0000006b: 	movq	%rbx, 0x20(%rsp)
    00000070: 	divsd	DATAat0x17370(%rip), %xmm0
    00000078: 	addq	%r12, %rax
    0000007b: 	je	.Ltmp962 # Offset: 123
    0000007d: 	testq	%r14, %r14
    00000080: 	je	.Ltmp963 # Offset: 128
.Ltmp962:
    00000086: 	movq	%r12, 0x18(%rsp)
    0000008b: 	cmpq	$0xf, %r12
    0000008f: 	ja	.Ltmp964 # Offset: 143
    00000095: 	cmpq	$0x1, %r12
    00000099: 	jne	.Ltmp965 # Offset: 153
    0000009f: 	movzbl	(%r14), %eax
    000000a3: 	movb	%al, 0x30(%rsp)
    000000a7: 	movq	%rbx, %rax
.Ltmp976:
    000000aa: 	movq	%r12, 0x28(%rsp)
    000000af: 	movb	$0x0, (%rax,%r12)
    000000b4: 	movq	0x8(%rbp), %rdi
    000000b8: 	movq	0x28(%rsp), %rdx
    000000bd: 	subq	(%rbp), %rdi
    000000c1: 	movq	0x20(%rsp), %rsi
    000000c6: 	sarq	$0x3, %rdi
    000000ca: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 202
    000000cf: 	movq	0x20(%rsp), %rdi
    000000d4: 	cmpq	%rbx, %rdi
    000000d7: 	je	.Ltmp966 # Offset: 215
    000000d9: 	movq	0x30(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp966:
    000000e7: 	movq	(%r13), %r14
    000000eb: 	movq	0x8(%r13), %r12
    000000ef: 	leaq	0x50(%rsp), %rbx
    000000f4: 	movq	%rbx, 0x40(%rsp)
    000000f9: 	movq	%r14, %rax
    000000fc: 	addq	%r12, %rax
    000000ff: 	je	.Ltmp967 # Offset: 255
    00000101: 	testq	%r14, %r14
    00000104: 	je	.Ltmp963 # Offset: 260
.Ltmp967:
    0000010a: 	movq	%r12, 0x18(%rsp)
    0000010f: 	cmpq	$0xf, %r12
    00000113: 	ja	.Ltmp968 # Offset: 275
    00000119: 	cmpq	$0x1, %r12
    0000011d: 	jne	.Ltmp969 # Offset: 285
    00000123: 	movzbl	(%r14), %eax
    00000127: 	movb	%al, 0x50(%rsp)
    0000012b: 	movq	%rbx, %rax
.Ltmp979:
    0000012e: 	movq	%r12, 0x48(%rsp)
    00000133: 	movb	$0x0, (%rax,%r12)
    00000138: 	movq	(%rbp), %rax
    0000013c: 	movq	0x8(%rbp), %rsi
    00000140: 	addq	$0x8, %rax
    00000144: 	jmp	.Ltmp970 # Offset: 324
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp972:
    00000150: 	movq	(%rdx), %rcx
    00000153: 	movq	-0x8(%rdx), %rdx
    00000157: 	addq	$0x8, %rax
    0000015b: 	movq	(%rdx), %rdi
    0000015e: 	cmpq	%rdi, (%rcx)
    00000161: 	jl	.Ltmp971 # Offset: 353
.Ltmp970:
    00000163: 	movq	%rax, %rdx
    00000166: 	cmpq	%rax, %rsi
    00000169: 	jne	.Ltmp972 # Offset: 361
.Ltmp977:
    0000016b: 	movq	0x40(%rsp), %rdi
    00000170: 	cmpq	%rbx, %rdi
    00000173: 	je	.Ltmp973 # Offset: 371
    00000175: 	movq	0x50(%rsp), %rax
    0000017a: 	leaq	0x1(%rax), %rsi
    0000017e: 	callq	_ZdlPvm@PLT # Offset: 382
.Ltmp973:
    00000183: 	movq	0x68(%rsp), %rax
    00000188: 	subq	%fs:0x28, %rax
    00000191: 	jne	.Ltmp974 # Offset: 401
    00000197: 	addq	$0x70, %rsp
    0000019b: 	popq	%rbx
    0000019c: 	popq	%rbp
    0000019d: 	popq	%r12
    0000019f: 	popq	%r13
    000001a1: 	popq	%r14
    000001a3: 	retq # Offset: 419
    000001a4: 	nopl	(%rax) # Size: 4
.Ltmp965:
    000001a8: 	testq	%r12, %r12
    000001ab: 	jne	.Ltmp975 # Offset: 427
    000001b1: 	movq	%rbx, %rax
    000001b4: 	jmp	.Ltmp976 # Offset: 436
    000001b9: 	nopl	(%rax) # Size: 7
.Ltmp971:
    000001c0: 	movq	0x40(%rsp), %rdx
    000001c5: 	leaq	DATAat0x1710f(%rip), %rsi
    000001cc: 	movl	$0x1, %edi
    000001d1: 	xorl	%eax, %eax
    000001d3: 	callq	__printf_chk@PLT # Offset: 467
    000001d8: 	jmp	.Ltmp977 # Offset: 472
    000001da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp969:
    000001e0: 	testq	%r12, %r12
    000001e3: 	jne	.Ltmp978 # Offset: 483
    000001e9: 	movq	%rbx, %rax
    000001ec: 	jmp	.Ltmp979 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp968:
    000001f8: 	leaq	0x40(%rsp), %rdi
    000001fd: 	leaq	0x18(%rsp), %rsi
    00000202: 	xorl	%edx, %edx
    00000204: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 516
    00000209: 	movq	%rax, 0x40(%rsp)
    0000020e: 	movq	%rax, %rdi
    00000211: 	movq	0x18(%rsp), %rax
    00000216: 	movq	%rax, 0x50(%rsp)
.Ltmp981:
    0000021b: 	movq	%r12, %rdx
    0000021e: 	movq	%r14, %rsi
    00000221: 	callq	memcpy@PLT # Offset: 545
    00000226: 	movq	0x18(%rsp), %r12
    0000022b: 	movq	0x40(%rsp), %rax
    00000230: 	jmp	.Ltmp979 # Offset: 560
    00000235: 	nopl	(%rax) # Size: 3
.Ltmp964:
    00000238: 	leaq	0x20(%rsp), %rdi
    0000023d: 	leaq	0x18(%rsp), %rsi
    00000242: 	xorl	%edx, %edx
    00000244: 	movsd	%xmm0, 0x8(%rsp)
    0000024a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 586
    0000024f: 	movsd	0x8(%rsp), %xmm0
    00000255: 	movq	%rax, 0x20(%rsp)
    0000025a: 	movq	%rax, %rdi
    0000025d: 	movq	0x18(%rsp), %rax
    00000262: 	movq	%rax, 0x30(%rsp)
.Ltmp980:
    00000267: 	movq	%r12, %rdx
    0000026a: 	movq	%r14, %rsi
    0000026d: 	movsd	%xmm0, 0x8(%rsp)
    00000273: 	callq	memcpy@PLT # Offset: 627
    00000278: 	movq	0x18(%rsp), %r12
    0000027d: 	movq	0x20(%rsp), %rax
    00000282: 	movsd	0x8(%rsp), %xmm0
    00000288: 	jmp	.Ltmp976 # Offset: 648
.Ltmp974:
    0000028d: 	callq	__stack_chk_fail@PLT # Offset: 653
.Ltmp975:
    00000292: 	movq	%rbx, %rdi
    00000295: 	jmp	.Ltmp980 # Offset: 661
.Ltmp978:
    00000297: 	movq	%rbx, %rdi
    0000029a: 	jmp	.Ltmp981 # Offset: 666
.Ltmp963:
    0000029f: 	leaq	DATAat0x17008(%rip), %rdi
    000002a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 678
    000002ab: 	endbr64
    000002af: 	movq	%rax, %rbp
    000002b2: 	jmp	.Ltmp982 # Offset: 690
    000002b4: 	endbr64
    000002b8: 	movq	%rax, %rbp
    000002bb: 	jmp	.Ltmp983 # Offset: 699
.Ltmp982:
    000002bd: 	movq	0x40(%rsp), %rdi
    000002c2: 	cmpq	%rbx, %rdi
    000002c5: 	je	.Ltmp984 # Offset: 709
    000002c7: 	movq	0x50(%rsp), %rax
    000002cc: 	leaq	0x1(%rax), %rsi
    000002d0: 	callq	_ZdlPvm@PLT # Offset: 720
.Ltmp984:
    000002d5: 	movq	%rbp, %rdi
    000002d8: 	callq	_Unwind_Resume@PLT # Offset: 728
.Ltmp983:
    000002dd: 	movq	0x20(%rsp), %rdi
    000002e2: 	cmpq	%rbx, %rdi
    000002e5: 	je	.Ltmp984 # Offset: 741
    000002e7: 	movq	0x30(%rsp), %rax
    000002ec: 	leaq	0x1(%rax), %rsi
    000002f0: 	callq	_ZdlPvm@PLT # Offset: 752
    000002f5: 	jmp	.Ltmp984 # Offset: 757
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_" after disassembly {
  Number      : 108
  State       : disassembled
  Address     : 0xb400
  Size        : 0x16f
  MaxSize     : 0x170
  Offset      : 0xb400
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0107:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp985 # Offset: 31
.Ltmp992:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rcx
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rcx), %rsi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rdi
    00000042: 	movq	(%rdi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rsi, %rdx
    0000004b: 	jge	.Ltmp986 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rsi, %rdx
    00000054: 	movq	%rcx, %rax
    00000057: 	movq	%rcx, (%rdi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rsi
    00000061: 	movq	%r8, %rcx
.Ltmp986:
    00000064: 	movq	-0x8(%r12), %r8
    00000069: 	movq	(%r8), %r9
    0000006c: 	cmpq	%rsi, %r9
    0000006f: 	jge	.Ltmp987 # Offset: 111
    00000071: 	movq	%r8, (%rbp)
    00000075: 	movq	%rsi, %r9
    00000078: 	movq	%rcx, %r8
    0000007b: 	movq	%rcx, -0x8(%r12)
    00000080: 	movq	(%rdi), %rax
    00000083: 	movq	(%rax), %rdx
.Ltmp987:
    00000086: 	cmpq	%rdx, %r9
    00000089: 	jl	.Ltmp988 # Offset: 137
    0000008f: 	movq	-0x8(%r12), %rax
    00000094: 	movq	%rdx, %rdi
    00000097: 	movq	(%rax), %rax
.Ltmp997:
    0000009a: 	movq	%r12, %rbx
    0000009d: 	movq	%rbp, %rsi
.Ltmp996:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp989 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp990 # Offset: 176
.Ltmp993:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp991 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp985 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp992 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp989:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp993 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp994 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp995:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp993 # Offset: 263
.Ltmp994:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp995 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp993 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp990:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp996 # Offset: 297
.Ltmp991:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp985 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp992 # Offset: 335
.Ltmp988:
    00000154: 	movq	%r8, (%rdi)
    00000157: 	movq	%rax, -0x8(%r12)
    0000015c: 	movq	(%rdi), %rax
    0000015f: 	movq	(%rax), %rdi
    00000162: 	movq	%rdx, %rax
    00000165: 	jmp	.Ltmp997 # Offset: 357
.Ltmp985:
    0000016a: 	popq	%rbx
    0000016b: 	popq	%rbp
    0000016c: 	popq	%r12
    0000016e: 	retq # Offset: 366
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_"

Binary Function "_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 109
  State       : disassembled
  Address     : 0xb570
  Size        : 0x220
  MaxSize     : 0x220
  Offset      : 0xb570
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0108:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x20(%rsp), %r13
    0000002b: 	leaq	0x30(%rsp), %rbx
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	0x8(%rbp), %rsi
    00000039: 	movq	(%rbp), %rdi
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 68
    00000049: 	callq	clock@PLT # Offset: 73
    0000004e: 	movq	(%r12), %rsi
    00000052: 	movq	%r13, %rdi
    00000055: 	pxor	%xmm0, %xmm0
    00000059: 	movq	0x8(%r12), %rdx
    0000005e: 	movq	%rax, end_time(%rip)
    00000065: 	subq	start_time(%rip), %rax
    0000006c: 	movq	%rbx, 0x20(%rsp)
    00000071: 	addq	%rsi, %rdx
    00000074: 	cvtsi2sd	%rax, %xmm0
    00000079: 	divsd	DATAat0x17370(%rip), %xmm0
    00000081: 	movsd	%xmm0, 0x8(%rsp)
    00000087: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 135
    0000008c: 	movq	0x8(%rbp), %rdi
    00000090: 	movq	0x28(%rsp), %rdx
    00000095: 	subq	(%rbp), %rdi
    00000099: 	movq	0x20(%rsp), %rsi
    0000009e: 	movsd	0x8(%rsp), %xmm0
    000000a4: 	sarq	$0x3, %rdi
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x20(%rsp), %rdi
    000000b2: 	cmpq	%rbx, %rdi
    000000b5: 	je	.Ltmp998 # Offset: 181
    000000b7: 	movq	0x30(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp998:
    000000c5: 	movq	(%r12), %r14
    000000c9: 	movq	0x8(%r12), %r12
    000000ce: 	movq	%rbx, 0x20(%rsp)
    000000d3: 	movq	%r14, %rax
    000000d6: 	addq	%r12, %rax
    000000d9: 	je	.Ltmp999 # Offset: 217
    000000db: 	testq	%r14, %r14
    000000de: 	je	.Ltmp1000 # Offset: 222
.Ltmp999:
    000000e4: 	movq	%r12, 0x18(%rsp)
    000000e9: 	cmpq	$0xf, %r12
    000000ed: 	ja	.Ltmp1001 # Offset: 237
    000000f3: 	cmpq	$0x1, %r12
    000000f7: 	jne	.Ltmp1002 # Offset: 247
    000000f9: 	movzbl	(%r14), %eax
    000000fd: 	movb	%al, 0x30(%rsp)
    00000101: 	movq	%rbx, %rax
.Ltmp1009:
    00000104: 	movq	%r12, 0x28(%rsp)
    00000109: 	movb	$0x0, (%rax,%r12)
    0000010e: 	movq	(%rbp), %rax
    00000112: 	movq	0x8(%rbp), %rsi
    00000116: 	addq	$0x8, %rax
    0000011a: 	jmp	.Ltmp1003 # Offset: 282
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1005:
    00000120: 	movq	(%rdx), %rcx
    00000123: 	movq	-0x8(%rdx), %rdx
    00000127: 	addq	$0x8, %rax
    0000012b: 	movq	(%rdx), %rdi
    0000012e: 	cmpq	%rdi, (%rcx)
    00000131: 	jl	.Ltmp1004 # Offset: 305
.Ltmp1003:
    00000133: 	movq	%rax, %rdx
    00000136: 	cmpq	%rax, %rsi
    00000139: 	jne	.Ltmp1005 # Offset: 313
.Ltmp1010:
    0000013b: 	movq	0x20(%rsp), %rdi
    00000140: 	cmpq	%rbx, %rdi
    00000143: 	je	.Ltmp1006 # Offset: 323
    00000145: 	movq	0x30(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp1006:
    00000153: 	movq	0x48(%rsp), %rax
    00000158: 	subq	%fs:0x28, %rax
    00000161: 	jne	.Ltmp1007 # Offset: 353
    00000163: 	addq	$0x50, %rsp
    00000167: 	popq	%rbx
    00000168: 	popq	%rbp
    00000169: 	popq	%r12
    0000016b: 	popq	%r13
    0000016d: 	popq	%r14
    0000016f: 	retq # Offset: 367
.Ltmp1002:
    00000170: 	testq	%r12, %r12
    00000173: 	jne	.Ltmp1008 # Offset: 371
    00000175: 	movq	%rbx, %rax
    00000178: 	jmp	.Ltmp1009 # Offset: 376
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1004:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp1010 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1001:
    000001a0: 	movq	%r13, %rdi
    000001a3: 	leaq	0x18(%rsp), %rsi
    000001a8: 	xorl	%edx, %edx
    000001aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 426
    000001af: 	movq	%rax, 0x20(%rsp)
    000001b4: 	movq	%rax, %rdi
    000001b7: 	movq	0x18(%rsp), %rax
    000001bc: 	movq	%rax, 0x30(%rsp)
.Ltmp1011:
    000001c1: 	movq	%r12, %rdx
    000001c4: 	movq	%r14, %rsi
    000001c7: 	callq	memcpy@PLT # Offset: 455
    000001cc: 	movq	0x18(%rsp), %r12
    000001d1: 	movq	0x20(%rsp), %rax
    000001d6: 	jmp	.Ltmp1009 # Offset: 470
.Ltmp1007:
    000001db: 	callq	__stack_chk_fail@PLT # Offset: 475
.Ltmp1008:
    000001e0: 	movq	%rbx, %rdi
    000001e3: 	jmp	.Ltmp1011 # Offset: 483
.Ltmp1000:
    000001e5: 	leaq	DATAat0x17008(%rip), %rdi
    000001ec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 492
    000001f1: 	endbr64
.Ltmp1013:
    000001f5: 	movq	%rax, %rbp
    000001f8: 	jmp	.Ltmp1012 # Offset: 504
    000001fa: 	endbr64
    000001fe: 	jmp	.Ltmp1013 # Offset: 510
.Ltmp1012:
    00000200: 	movq	0x20(%rsp), %rdi
    00000205: 	cmpq	%rbx, %rdi
    00000208: 	je	.Ltmp1014 # Offset: 520
    0000020a: 	movq	0x30(%rsp), %rax
    0000020f: 	leaq	0x1(%rax), %rsi
    00000213: 	callq	_ZdlPvm@PLT # Offset: 531
.Ltmp1014:
    00000218: 	movq	%rbp, %rdi
    0000021b: 	callq	_Unwind_Resume@PLT # Offset: 539
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_" after disassembly {
  Number      : 110
  State       : disassembled
  Address     : 0xb790
  Size        : 0x1c3
  MaxSize     : 0x1d0
  Offset      : 0xb790
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0109:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x4, %rdx
    0000001b: 	cmpq	$0x10, %rax
    0000001f: 	jle	.Ltmp1015 # Offset: 31
.Ltmp1022:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rsi
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rsi), %rdi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	shlq	$0x4, %rax
    00000041: 	addq	%rbp, %rax
    00000044: 	movq	(%rax), %rdx
    00000047: 	movq	(%rdx), %rcx
    0000004a: 	cmpq	%rdi, %rcx
    0000004d: 	jge	.Ltmp1016 # Offset: 77
    0000004f: 	movq	%rsi, %xmm0
    00000054: 	movq	%rdx, (%rbp)
    00000058: 	movq	0x8(%rax), %rdx
    0000005c: 	movq	%rdi, %rcx
    0000005f: 	movhps	0x8(%rbp), %xmm0
    00000063: 	movups	%xmm0, (%rax)
    00000066: 	movq	(%rbp), %r8
    0000006a: 	movq	%rdx, 0x8(%rbp)
    0000006e: 	movq	%rsi, %rdx
    00000071: 	movq	(%r8), %rdi
    00000074: 	movq	%r8, %rsi
.Ltmp1016:
    00000077: 	movq	-0x10(%r12), %r8
    0000007c: 	movq	(%r8), %r9
    0000007f: 	cmpq	%rdi, %r9
    00000082: 	jge	.Ltmp1017 # Offset: 130
    00000084: 	movq	-0x8(%r12), %rdx
    00000089: 	movq	%rsi, %xmm0
    0000008e: 	movq	%r8, (%rbp)
    00000092: 	movq	%rdi, %r9
    00000095: 	movhps	0x8(%rbp), %xmm0
    00000099: 	movq	%rsi, %r8
    0000009c: 	movups	%xmm0, -0x10(%r12)
    000000a2: 	movq	%rdx, 0x8(%rbp)
    000000a6: 	movq	(%rax), %rdx
    000000a9: 	movq	(%rdx), %rcx
.Ltmp1017:
    000000ac: 	cmpq	%rcx, %r9
    000000af: 	jl	.Ltmp1018 # Offset: 175
    000000b5: 	movq	-0x10(%r12), %rax
    000000ba: 	movq	%rcx, %rdi
    000000bd: 	movq	(%rax), %rax
.Ltmp1027:
    000000c0: 	movq	%r12, %rbx
    000000c3: 	movq	%rbp, %rsi
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1026:
    000000d0: 	movq	-0x10(%rbx), %r8
    000000d4: 	leaq	-0x10(%rbx), %rcx
    000000d8: 	cmpq	%rax, %rdi
    000000db: 	jg	.Ltmp1019 # Offset: 219
    000000dd: 	cmpq	%rcx, %rsi
    000000e0: 	jb	.Ltmp1020 # Offset: 224
.Ltmp1023:
    000000e2: 	movq	%rcx, %rdx
    000000e5: 	movq	%r12, %rax
    000000e8: 	subq	%rbp, %rdx
    000000eb: 	subq	%rcx, %rax
    000000ee: 	cmpq	%rax, %rdx
    000000f1: 	jle	.Ltmp1021 # Offset: 241
    000000f3: 	movq	%r12, %rsi
    000000f6: 	movq	%rbx, %rdi
    000000f9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 249
    000000fe: 	movq	%rbx, %rax
    00000101: 	subq	%rbp, %rax
    00000104: 	movq	%rax, %rdx
    00000107: 	sarq	$0x4, %rdx
    0000010b: 	cmpq	$0x10, %rax
    0000010f: 	jle	.Ltmp1015 # Offset: 271
    00000115: 	movq	%rbx, %r12
    00000118: 	jmp	.Ltmp1022 # Offset: 280
    0000011d: 	nopl	(%rax) # Size: 3
.Ltmp1019:
    00000120: 	cmpq	%rcx, %rsi
    00000123: 	jae	.Ltmp1023 # Offset: 291
    00000125: 	movq	%rsi, %rax
    00000128: 	jmp	.Ltmp1024 # Offset: 296
    0000012a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1025:
    00000130: 	addq	$0x10, %rax
    00000134: 	cmpq	%rax, %rcx
    00000137: 	jbe	.Ltmp1023 # Offset: 311
.Ltmp1024:
    00000139: 	movq	(%rax), %rdx
    0000013c: 	movq	%rax, %rsi
    0000013f: 	cmpq	%rdi, (%rdx)
    00000142: 	jle	.Ltmp1025 # Offset: 322
    00000144: 	cmpq	%rax, %rcx
    00000147: 	jbe	.Ltmp1023 # Offset: 327
    00000149: 	movq	0x8(%rax), %rax
    0000014d: 	movq	%r8, %xmm0
    00000152: 	movq	%rdx, (%rcx)
    00000155: 	movhps	0x8(%rcx), %xmm0
    00000159: 	movups	%xmm0, (%rsi)
    0000015c: 	movq	%rax, 0x8(%rcx)
.Ltmp1020:
    00000160: 	movq	-0x10(%rcx), %rax
    00000164: 	movq	%rcx, %rbx
    00000167: 	movq	(%rax), %rax
    0000016a: 	jmp	.Ltmp1026 # Offset: 362
.Ltmp1021:
    0000016f: 	movq	%rbx, %rsi
    00000172: 	movq	%rbp, %rdi
    00000175: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 373
    0000017a: 	movq	%r12, %rax
    0000017d: 	subq	%rbx, %rax
    00000180: 	movq	%rax, %rdx
    00000183: 	sarq	$0x4, %rdx
    00000187: 	cmpq	$0x10, %rax
    0000018b: 	jle	.Ltmp1015 # Offset: 395
    0000018d: 	movq	%rbx, %rbp
    00000190: 	jmp	.Ltmp1022 # Offset: 400
.Ltmp1018:
    00000195: 	movq	-0x8(%r12), %rsi
    0000019a: 	movq	%rdx, %xmm0
    0000019f: 	movq	%r8, (%rax)
    000001a2: 	movhps	0x8(%rax), %xmm0
    000001a6: 	movups	%xmm0, -0x10(%r12)
    000001ac: 	movq	%rsi, 0x8(%rax)
    000001b0: 	movq	(%rax), %rax
    000001b3: 	movq	(%rax), %rdi
    000001b6: 	movq	%rcx, %rax
    000001b9: 	jmp	.Ltmp1027 # Offset: 441
.Ltmp1015:
    000001be: 	popq	%rbx
    000001bf: 	popq	%rbp
    000001c0: 	popq	%r12
    000001c2: 	retq # Offset: 450
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_"

Binary Function "_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 111
  State       : disassembled
  Address     : 0xb960
  Size        : 0x220
  MaxSize     : 0x220
  Offset      : 0xb960
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0110:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x20(%rsp), %r13
    0000002b: 	leaq	0x30(%rsp), %rbx
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	0x8(%rbp), %rsi
    00000039: 	movq	(%rbp), %rdi
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 68
    00000049: 	callq	clock@PLT # Offset: 73
    0000004e: 	movq	(%r12), %rsi
    00000052: 	movq	%r13, %rdi
    00000055: 	pxor	%xmm0, %xmm0
    00000059: 	movq	0x8(%r12), %rdx
    0000005e: 	movq	%rax, end_time(%rip)
    00000065: 	subq	start_time(%rip), %rax
    0000006c: 	movq	%rbx, 0x20(%rsp)
    00000071: 	addq	%rsi, %rdx
    00000074: 	cvtsi2sd	%rax, %xmm0
    00000079: 	divsd	DATAat0x17370(%rip), %xmm0
    00000081: 	movsd	%xmm0, 0x8(%rsp)
    00000087: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 135
    0000008c: 	movq	0x8(%rbp), %rdi
    00000090: 	movq	0x28(%rsp), %rdx
    00000095: 	subq	(%rbp), %rdi
    00000099: 	movq	0x20(%rsp), %rsi
    0000009e: 	movsd	0x8(%rsp), %xmm0
    000000a4: 	sarq	$0x4, %rdi
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x20(%rsp), %rdi
    000000b2: 	cmpq	%rbx, %rdi
    000000b5: 	je	.Ltmp1028 # Offset: 181
    000000b7: 	movq	0x30(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp1028:
    000000c5: 	movq	(%r12), %r14
    000000c9: 	movq	0x8(%r12), %r12
    000000ce: 	movq	%rbx, 0x20(%rsp)
    000000d3: 	movq	%r14, %rax
    000000d6: 	addq	%r12, %rax
    000000d9: 	je	.Ltmp1029 # Offset: 217
    000000db: 	testq	%r14, %r14
    000000de: 	je	.Ltmp1030 # Offset: 222
.Ltmp1029:
    000000e4: 	movq	%r12, 0x18(%rsp)
    000000e9: 	cmpq	$0xf, %r12
    000000ed: 	ja	.Ltmp1031 # Offset: 237
    000000f3: 	cmpq	$0x1, %r12
    000000f7: 	jne	.Ltmp1032 # Offset: 247
    000000f9: 	movzbl	(%r14), %eax
    000000fd: 	movb	%al, 0x30(%rsp)
    00000101: 	movq	%rbx, %rax
.Ltmp1039:
    00000104: 	movq	%r12, 0x28(%rsp)
    00000109: 	movb	$0x0, (%rax,%r12)
    0000010e: 	movq	(%rbp), %rax
    00000112: 	movq	0x8(%rbp), %rsi
    00000116: 	addq	$0x10, %rax
    0000011a: 	jmp	.Ltmp1033 # Offset: 282
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1035:
    00000120: 	movq	(%rdx), %rcx
    00000123: 	movq	-0x10(%rdx), %rdx
    00000127: 	addq	$0x10, %rax
    0000012b: 	movq	(%rdx), %rdi
    0000012e: 	cmpq	%rdi, (%rcx)
    00000131: 	jl	.Ltmp1034 # Offset: 305
.Ltmp1033:
    00000133: 	movq	%rax, %rdx
    00000136: 	cmpq	%rax, %rsi
    00000139: 	jne	.Ltmp1035 # Offset: 313
.Ltmp1040:
    0000013b: 	movq	0x20(%rsp), %rdi
    00000140: 	cmpq	%rbx, %rdi
    00000143: 	je	.Ltmp1036 # Offset: 323
    00000145: 	movq	0x30(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp1036:
    00000153: 	movq	0x48(%rsp), %rax
    00000158: 	subq	%fs:0x28, %rax
    00000161: 	jne	.Ltmp1037 # Offset: 353
    00000163: 	addq	$0x50, %rsp
    00000167: 	popq	%rbx
    00000168: 	popq	%rbp
    00000169: 	popq	%r12
    0000016b: 	popq	%r13
    0000016d: 	popq	%r14
    0000016f: 	retq # Offset: 367
.Ltmp1032:
    00000170: 	testq	%r12, %r12
    00000173: 	jne	.Ltmp1038 # Offset: 371
    00000175: 	movq	%rbx, %rax
    00000178: 	jmp	.Ltmp1039 # Offset: 376
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1034:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp1040 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1031:
    000001a0: 	movq	%r13, %rdi
    000001a3: 	leaq	0x18(%rsp), %rsi
    000001a8: 	xorl	%edx, %edx
    000001aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 426
    000001af: 	movq	%rax, 0x20(%rsp)
    000001b4: 	movq	%rax, %rdi
    000001b7: 	movq	0x18(%rsp), %rax
    000001bc: 	movq	%rax, 0x30(%rsp)
.Ltmp1041:
    000001c1: 	movq	%r12, %rdx
    000001c4: 	movq	%r14, %rsi
    000001c7: 	callq	memcpy@PLT # Offset: 455
    000001cc: 	movq	0x18(%rsp), %r12
    000001d1: 	movq	0x20(%rsp), %rax
    000001d6: 	jmp	.Ltmp1039 # Offset: 470
.Ltmp1037:
    000001db: 	callq	__stack_chk_fail@PLT # Offset: 475
.Ltmp1038:
    000001e0: 	movq	%rbx, %rdi
    000001e3: 	jmp	.Ltmp1041 # Offset: 483
.Ltmp1030:
    000001e5: 	leaq	DATAat0x17008(%rip), %rdi
    000001ec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 492
    000001f1: 	endbr64
.Ltmp1043:
    000001f5: 	movq	%rax, %rbp
    000001f8: 	jmp	.Ltmp1042 # Offset: 504
    000001fa: 	endbr64
    000001fe: 	jmp	.Ltmp1043 # Offset: 510
.Ltmp1042:
    00000200: 	movq	0x20(%rsp), %rdi
    00000205: 	cmpq	%rbx, %rdi
    00000208: 	je	.Ltmp1044 # Offset: 520
    0000020a: 	movq	0x30(%rsp), %rax
    0000020f: 	leaq	0x1(%rax), %rsi
    00000213: 	callq	_ZdlPvm@PLT # Offset: 531
.Ltmp1044:
    00000218: 	movq	%rbp, %rdi
    0000021b: 	callq	_Unwind_Resume@PLT # Offset: 539
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_" after disassembly {
  Number      : 112
  State       : disassembled
  Address     : 0xbb80
  Size        : 0x16f
  MaxSize     : 0x170
  Offset      : 0xbb80
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0111:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp1045 # Offset: 31
.Ltmp1052:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rcx
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rcx), %rsi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rdi
    00000042: 	movq	(%rdi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rsi, %rdx
    0000004b: 	jge	.Ltmp1046 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rsi, %rdx
    00000054: 	movq	%rcx, %rax
    00000057: 	movq	%rcx, (%rdi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rsi
    00000061: 	movq	%r8, %rcx
.Ltmp1046:
    00000064: 	movq	-0x8(%r12), %r8
    00000069: 	movq	(%r8), %r9
    0000006c: 	cmpq	%rsi, %r9
    0000006f: 	jge	.Ltmp1047 # Offset: 111
    00000071: 	movq	%r8, (%rbp)
    00000075: 	movq	%rsi, %r9
    00000078: 	movq	%rcx, %r8
    0000007b: 	movq	%rcx, -0x8(%r12)
    00000080: 	movq	(%rdi), %rax
    00000083: 	movq	(%rax), %rdx
.Ltmp1047:
    00000086: 	cmpq	%rdx, %r9
    00000089: 	jl	.Ltmp1048 # Offset: 137
    0000008f: 	movq	-0x8(%r12), %rax
    00000094: 	movq	%rdx, %rdi
    00000097: 	movq	(%rax), %rax
.Ltmp1057:
    0000009a: 	movq	%r12, %rbx
    0000009d: 	movq	%rbp, %rsi
.Ltmp1056:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp1049 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp1050 # Offset: 176
.Ltmp1053:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp1051 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp1045 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp1052 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp1049:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp1053 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp1054 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1055:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp1053 # Offset: 263
.Ltmp1054:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp1055 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp1053 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp1050:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp1056 # Offset: 297
.Ltmp1051:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp1045 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp1052 # Offset: 335
.Ltmp1048:
    00000154: 	movq	%r8, (%rdi)
    00000157: 	movq	%rax, -0x8(%r12)
    0000015c: 	movq	(%rdi), %rax
    0000015f: 	movq	(%rax), %rdi
    00000162: 	movq	%rdx, %rax
    00000165: 	jmp	.Ltmp1057 # Offset: 357
.Ltmp1045:
    0000016a: 	popq	%rbx
    0000016b: 	popq	%rbp
    0000016c: 	popq	%r12
    0000016e: 	retq # Offset: 366
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_"

Binary Function "_Z14QuickSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 113
  State       : disassembled
  Address     : 0xbcf0
  Size        : 0x220
  MaxSize     : 0x220
  Offset      : 0xbcf0
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0112:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x20(%rsp), %r13
    0000002b: 	leaq	0x30(%rsp), %rbx
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	0x8(%rbp), %rsi
    00000039: 	movq	(%rbp), %rdi
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEEEvT_SA_ # Offset: 68
    00000049: 	callq	clock@PLT # Offset: 73
    0000004e: 	movq	(%r12), %rsi
    00000052: 	movq	%r13, %rdi
    00000055: 	pxor	%xmm0, %xmm0
    00000059: 	movq	0x8(%r12), %rdx
    0000005e: 	movq	%rax, end_time(%rip)
    00000065: 	subq	start_time(%rip), %rax
    0000006c: 	movq	%rbx, 0x20(%rsp)
    00000071: 	addq	%rsi, %rdx
    00000074: 	cvtsi2sd	%rax, %xmm0
    00000079: 	divsd	DATAat0x17370(%rip), %xmm0
    00000081: 	movsd	%xmm0, 0x8(%rsp)
    00000087: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 135
    0000008c: 	movq	0x8(%rbp), %rdi
    00000090: 	movq	0x28(%rsp), %rdx
    00000095: 	subq	(%rbp), %rdi
    00000099: 	movq	0x20(%rsp), %rsi
    0000009e: 	movsd	0x8(%rsp), %xmm0
    000000a4: 	sarq	$0x3, %rdi
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x20(%rsp), %rdi
    000000b2: 	cmpq	%rbx, %rdi
    000000b5: 	je	.Ltmp1058 # Offset: 181
    000000b7: 	movq	0x30(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp1058:
    000000c5: 	movq	(%r12), %r14
    000000c9: 	movq	0x8(%r12), %r12
    000000ce: 	movq	%rbx, 0x20(%rsp)
    000000d3: 	movq	%r14, %rax
    000000d6: 	addq	%r12, %rax
    000000d9: 	je	.Ltmp1059 # Offset: 217
    000000db: 	testq	%r14, %r14
    000000de: 	je	.Ltmp1060 # Offset: 222
.Ltmp1059:
    000000e4: 	movq	%r12, 0x18(%rsp)
    000000e9: 	cmpq	$0xf, %r12
    000000ed: 	ja	.Ltmp1061 # Offset: 237
    000000f3: 	cmpq	$0x1, %r12
    000000f7: 	jne	.Ltmp1062 # Offset: 247
    000000f9: 	movzbl	(%r14), %eax
    000000fd: 	movb	%al, 0x30(%rsp)
    00000101: 	movq	%rbx, %rax
.Ltmp1069:
    00000104: 	movq	%r12, 0x28(%rsp)
    00000109: 	movb	$0x0, (%rax,%r12)
    0000010e: 	movq	(%rbp), %rax
    00000112: 	movq	0x8(%rbp), %rsi
    00000116: 	addq	$0x8, %rax
    0000011a: 	jmp	.Ltmp1063 # Offset: 282
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1065:
    00000120: 	movq	(%rdx), %rcx
    00000123: 	movq	-0x8(%rdx), %rdx
    00000127: 	addq	$0x8, %rax
    0000012b: 	movq	(%rdx), %rdi
    0000012e: 	cmpq	%rdi, (%rcx)
    00000131: 	jl	.Ltmp1064 # Offset: 305
.Ltmp1063:
    00000133: 	movq	%rax, %rdx
    00000136: 	cmpq	%rax, %rsi
    00000139: 	jne	.Ltmp1065 # Offset: 313
.Ltmp1070:
    0000013b: 	movq	0x20(%rsp), %rdi
    00000140: 	cmpq	%rbx, %rdi
    00000143: 	je	.Ltmp1066 # Offset: 323
    00000145: 	movq	0x30(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp1066:
    00000153: 	movq	0x48(%rsp), %rax
    00000158: 	subq	%fs:0x28, %rax
    00000161: 	jne	.Ltmp1067 # Offset: 353
    00000163: 	addq	$0x50, %rsp
    00000167: 	popq	%rbx
    00000168: 	popq	%rbp
    00000169: 	popq	%r12
    0000016b: 	popq	%r13
    0000016d: 	popq	%r14
    0000016f: 	retq # Offset: 367
.Ltmp1062:
    00000170: 	testq	%r12, %r12
    00000173: 	jne	.Ltmp1068 # Offset: 371
    00000175: 	movq	%rbx, %rax
    00000178: 	jmp	.Ltmp1069 # Offset: 376
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1064:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp1070 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1061:
    000001a0: 	movq	%r13, %rdi
    000001a3: 	leaq	0x18(%rsp), %rsi
    000001a8: 	xorl	%edx, %edx
    000001aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 426
    000001af: 	movq	%rax, 0x20(%rsp)
    000001b4: 	movq	%rax, %rdi
    000001b7: 	movq	0x18(%rsp), %rax
    000001bc: 	movq	%rax, 0x30(%rsp)
.Ltmp1071:
    000001c1: 	movq	%r12, %rdx
    000001c4: 	movq	%r14, %rsi
    000001c7: 	callq	memcpy@PLT # Offset: 455
    000001cc: 	movq	0x18(%rsp), %r12
    000001d1: 	movq	0x20(%rsp), %rax
    000001d6: 	jmp	.Ltmp1069 # Offset: 470
.Ltmp1067:
    000001db: 	callq	__stack_chk_fail@PLT # Offset: 475
.Ltmp1068:
    000001e0: 	movq	%rbx, %rdi
    000001e3: 	jmp	.Ltmp1071 # Offset: 483
.Ltmp1060:
    000001e5: 	leaq	DATAat0x17008(%rip), %rdi
    000001ec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 492
    000001f1: 	endbr64
.Ltmp1073:
    000001f5: 	movq	%rax, %rbp
    000001f8: 	jmp	.Ltmp1072 # Offset: 504
    000001fa: 	endbr64
    000001fe: 	jmp	.Ltmp1073 # Offset: 510
.Ltmp1072:
    00000200: 	movq	0x20(%rsp), %rdi
    00000205: 	cmpq	%rbx, %rdi
    00000208: 	je	.Ltmp1074 # Offset: 520
    0000020a: 	movq	0x30(%rsp), %rax
    0000020f: 	leaq	0x1(%rax), %rsi
    00000213: 	callq	_ZdlPvm@PLT # Offset: 531
.Ltmp1074:
    00000218: 	movq	%rbp, %rdi
    0000021b: 	callq	_Unwind_Resume@PLT # Offset: 539
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_" after disassembly {
  Number      : 114
  State       : disassembled
  Address     : 0xbf10
  Size        : 0x174
  MaxSize     : 0x180
  Offset      : 0xbf10
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0113:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp1075 # Offset: 31
.Ltmp1082:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rdi
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rdi), %rcx
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rsi
    00000042: 	movq	(%rsi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rcx, %rdx
    0000004b: 	jge	.Ltmp1076 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rcx, %rdx
    00000054: 	movq	%rdi, %rax
    00000057: 	movq	%rdi, (%rsi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rcx
    00000061: 	movq	%r8, %rdi
.Ltmp1076:
    00000064: 	movq	-0x8(%r12), %r9
    00000069: 	movq	(%r9), %r8
    0000006c: 	cmpq	%rcx, %r8
    0000006f: 	jge	.Ltmp1077 # Offset: 111
    00000071: 	movq	%r9, (%rbp)
    00000075: 	movq	%rcx, %r8
    00000078: 	movq	%rdi, -0x8(%r12)
    0000007d: 	movq	(%rsi), %rax
    00000080: 	movq	(%rax), %rdx
.Ltmp1077:
    00000083: 	cmpq	%r8, %rdx
    00000086: 	jg	.Ltmp1078 # Offset: 134
    0000008c: 	movq	-0x8(%r12), %rax
    00000091: 	movq	%rdx, %rdi
    00000094: 	movq	(%rax), %rax
.Ltmp1087:
    00000097: 	movq	%r12, %rbx
    0000009a: 	movq	%rbp, %rsi
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp1086:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp1079 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp1080 # Offset: 176
.Ltmp1083:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp1081 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp1075 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp1082 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp1079:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp1083 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp1084 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1085:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp1083 # Offset: 263
.Ltmp1084:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp1085 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp1083 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp1080:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp1086 # Offset: 297
.Ltmp1081:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp1075 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp1082 # Offset: 335
.Ltmp1078:
    00000154: 	movq	-0x8(%r12), %rcx
    00000159: 	movq	%rcx, (%rsi)
    0000015c: 	movq	%rax, -0x8(%r12)
    00000161: 	movq	(%rsi), %rax
    00000164: 	movq	(%rax), %rdi
    00000167: 	movq	%rdx, %rax
    0000016a: 	jmp	.Ltmp1087 # Offset: 362
.Ltmp1075:
    0000016f: 	popq	%rbx
    00000170: 	popq	%rbp
    00000171: 	popq	%r12
    00000173: 	retq # Offset: 371
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_"

Binary Function "_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 115
  State       : disassembled
  Address     : 0xc090
  Size        : 0x220
  MaxSize     : 0x220
  Offset      : 0xc090
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0114:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rsi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x20(%rsp), %r13
    0000002b: 	leaq	0x30(%rsp), %rbx
    00000030: 	callq	clock@PLT # Offset: 48
    00000035: 	movq	0x8(%rbp), %rsi
    00000039: 	movq	(%rbp), %rdi
    0000003d: 	movq	%rax, start_time(%rip)
    00000044: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 68
    00000049: 	callq	clock@PLT # Offset: 73
    0000004e: 	movq	(%r12), %rsi
    00000052: 	movq	%r13, %rdi
    00000055: 	pxor	%xmm0, %xmm0
    00000059: 	movq	0x8(%r12), %rdx
    0000005e: 	movq	%rax, end_time(%rip)
    00000065: 	subq	start_time(%rip), %rax
    0000006c: 	movq	%rbx, 0x20(%rsp)
    00000071: 	addq	%rsi, %rdx
    00000074: 	cvtsi2sd	%rax, %xmm0
    00000079: 	divsd	DATAat0x17370(%rip), %xmm0
    00000081: 	movsd	%xmm0, 0x8(%rsp)
    00000087: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 135
    0000008c: 	movq	0x8(%rbp), %rdi
    00000090: 	movq	0x28(%rsp), %rdx
    00000095: 	subq	(%rbp), %rdi
    00000099: 	movq	0x20(%rsp), %rsi
    0000009e: 	movsd	0x8(%rsp), %xmm0
    000000a4: 	sarq	$0x3, %rdi
    000000a8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 168
    000000ad: 	movq	0x20(%rsp), %rdi
    000000b2: 	cmpq	%rbx, %rdi
    000000b5: 	je	.Ltmp1088 # Offset: 181
    000000b7: 	movq	0x30(%rsp), %rax
    000000bc: 	leaq	0x1(%rax), %rsi
    000000c0: 	callq	_ZdlPvm@PLT # Offset: 192
.Ltmp1088:
    000000c5: 	movq	(%r12), %r14
    000000c9: 	movq	0x8(%r12), %r12
    000000ce: 	movq	%rbx, 0x20(%rsp)
    000000d3: 	movq	%r14, %rax
    000000d6: 	addq	%r12, %rax
    000000d9: 	je	.Ltmp1089 # Offset: 217
    000000db: 	testq	%r14, %r14
    000000de: 	je	.Ltmp1090 # Offset: 222
.Ltmp1089:
    000000e4: 	movq	%r12, 0x18(%rsp)
    000000e9: 	cmpq	$0xf, %r12
    000000ed: 	ja	.Ltmp1091 # Offset: 237
    000000f3: 	cmpq	$0x1, %r12
    000000f7: 	jne	.Ltmp1092 # Offset: 247
    000000f9: 	movzbl	(%r14), %eax
    000000fd: 	movb	%al, 0x30(%rsp)
    00000101: 	movq	%rbx, %rax
.Ltmp1099:
    00000104: 	movq	%r12, 0x28(%rsp)
    00000109: 	movb	$0x0, (%rax,%r12)
    0000010e: 	movq	(%rbp), %rax
    00000112: 	movq	0x8(%rbp), %rsi
    00000116: 	addq	$0x8, %rax
    0000011a: 	jmp	.Ltmp1093 # Offset: 282
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1095:
    00000120: 	movq	(%rdx), %rcx
    00000123: 	movq	-0x8(%rdx), %rdx
    00000127: 	addq	$0x8, %rax
    0000012b: 	movq	(%rdx), %rdi
    0000012e: 	cmpq	%rdi, (%rcx)
    00000131: 	jl	.Ltmp1094 # Offset: 305
.Ltmp1093:
    00000133: 	movq	%rax, %rdx
    00000136: 	cmpq	%rax, %rsi
    00000139: 	jne	.Ltmp1095 # Offset: 313
.Ltmp1100:
    0000013b: 	movq	0x20(%rsp), %rdi
    00000140: 	cmpq	%rbx, %rdi
    00000143: 	je	.Ltmp1096 # Offset: 323
    00000145: 	movq	0x30(%rsp), %rax
    0000014a: 	leaq	0x1(%rax), %rsi
    0000014e: 	callq	_ZdlPvm@PLT # Offset: 334
.Ltmp1096:
    00000153: 	movq	0x48(%rsp), %rax
    00000158: 	subq	%fs:0x28, %rax
    00000161: 	jne	.Ltmp1097 # Offset: 353
    00000163: 	addq	$0x50, %rsp
    00000167: 	popq	%rbx
    00000168: 	popq	%rbp
    00000169: 	popq	%r12
    0000016b: 	popq	%r13
    0000016d: 	popq	%r14
    0000016f: 	retq # Offset: 367
.Ltmp1092:
    00000170: 	testq	%r12, %r12
    00000173: 	jne	.Ltmp1098 # Offset: 371
    00000175: 	movq	%rbx, %rax
    00000178: 	jmp	.Ltmp1099 # Offset: 376
    0000017a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1094:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp1100 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1091:
    000001a0: 	movq	%r13, %rdi
    000001a3: 	leaq	0x18(%rsp), %rsi
    000001a8: 	xorl	%edx, %edx
    000001aa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 426
    000001af: 	movq	%rax, 0x20(%rsp)
    000001b4: 	movq	%rax, %rdi
    000001b7: 	movq	0x18(%rsp), %rax
    000001bc: 	movq	%rax, 0x30(%rsp)
.Ltmp1101:
    000001c1: 	movq	%r12, %rdx
    000001c4: 	movq	%r14, %rsi
    000001c7: 	callq	memcpy@PLT # Offset: 455
    000001cc: 	movq	0x18(%rsp), %r12
    000001d1: 	movq	0x20(%rsp), %rax
    000001d6: 	jmp	.Ltmp1099 # Offset: 470
.Ltmp1097:
    000001db: 	callq	__stack_chk_fail@PLT # Offset: 475
.Ltmp1098:
    000001e0: 	movq	%rbx, %rdi
    000001e3: 	jmp	.Ltmp1101 # Offset: 483
.Ltmp1090:
    000001e5: 	leaq	DATAat0x17008(%rip), %rdi
    000001ec: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 492
    000001f1: 	endbr64
.Ltmp1103:
    000001f5: 	movq	%rax, %rbp
    000001f8: 	jmp	.Ltmp1102 # Offset: 504
    000001fa: 	endbr64
    000001fe: 	jmp	.Ltmp1103 # Offset: 510
.Ltmp1102:
    00000200: 	movq	0x20(%rsp), %rdi
    00000205: 	cmpq	%rbx, %rdi
    00000208: 	je	.Ltmp1104 # Offset: 520
    0000020a: 	movq	0x30(%rsp), %rax
    0000020f: 	leaq	0x1(%rax), %rsi
    00000213: 	callq	_ZdlPvm@PLT # Offset: 531
.Ltmp1104:
    00000218: 	movq	%rbp, %rdi
    0000021b: 	callq	_Unwind_Resume@PLT # Offset: 539
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_" after disassembly {
  Number      : 116
  State       : disassembled
  Address     : 0xc2b0
  Size        : 0x16f
  MaxSize     : 0x170
  Offset      : 0xc2b0
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0115:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x3, %rdx
    0000001b: 	cmpq	$0x8, %rax
    0000001f: 	jle	.Ltmp1105 # Offset: 31
.Ltmp1112:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rcx
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rcx), %rsi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	leaq	(%rbp,%rax,8), %rdi
    00000042: 	movq	(%rdi), %rax
    00000045: 	movq	(%rax), %rdx
    00000048: 	cmpq	%rsi, %rdx
    0000004b: 	jge	.Ltmp1106 # Offset: 75
    0000004d: 	movq	%rax, (%rbp)
    00000051: 	movq	%rsi, %rdx
    00000054: 	movq	%rcx, %rax
    00000057: 	movq	%rcx, (%rdi)
    0000005a: 	movq	(%rbp), %r8
    0000005e: 	movq	(%r8), %rsi
    00000061: 	movq	%r8, %rcx
.Ltmp1106:
    00000064: 	movq	-0x8(%r12), %r8
    00000069: 	movq	(%r8), %r9
    0000006c: 	cmpq	%rsi, %r9
    0000006f: 	jge	.Ltmp1107 # Offset: 111
    00000071: 	movq	%r8, (%rbp)
    00000075: 	movq	%rsi, %r9
    00000078: 	movq	%rcx, %r8
    0000007b: 	movq	%rcx, -0x8(%r12)
    00000080: 	movq	(%rdi), %rax
    00000083: 	movq	(%rax), %rdx
.Ltmp1107:
    00000086: 	cmpq	%rdx, %r9
    00000089: 	jl	.Ltmp1108 # Offset: 137
    0000008f: 	movq	-0x8(%r12), %rax
    00000094: 	movq	%rdx, %rdi
    00000097: 	movq	(%rax), %rax
.Ltmp1117:
    0000009a: 	movq	%r12, %rbx
    0000009d: 	movq	%rbp, %rsi
.Ltmp1116:
    000000a0: 	movq	-0x8(%rbx), %r8
    000000a4: 	leaq	-0x8(%rbx), %rcx
    000000a8: 	cmpq	%rax, %rdi
    000000ab: 	jg	.Ltmp1109 # Offset: 171
    000000ad: 	cmpq	%rcx, %rsi
    000000b0: 	jb	.Ltmp1110 # Offset: 176
.Ltmp1113:
    000000b2: 	movq	%rcx, %rdx
    000000b5: 	movq	%r12, %rax
    000000b8: 	subq	%rbp, %rdx
    000000bb: 	subq	%rcx, %rax
    000000be: 	cmpq	%rax, %rdx
    000000c1: 	jle	.Ltmp1111 # Offset: 193
    000000c3: 	movq	%r12, %rsi
    000000c6: 	movq	%rbx, %rdi
    000000c9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 201
    000000ce: 	movq	%rbx, %rax
    000000d1: 	subq	%rbp, %rax
    000000d4: 	movq	%rax, %rdx
    000000d7: 	sarq	$0x3, %rdx
    000000db: 	cmpq	$0x8, %rax
    000000df: 	jle	.Ltmp1105 # Offset: 223
    000000e5: 	movq	%rbx, %r12
    000000e8: 	jmp	.Ltmp1112 # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp1109:
    000000f0: 	cmpq	%rcx, %rsi
    000000f3: 	jae	.Ltmp1113 # Offset: 243
    000000f5: 	movq	%rsi, %rax
    000000f8: 	jmp	.Ltmp1114 # Offset: 248
    000000fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1115:
    00000100: 	addq	$0x8, %rax
    00000104: 	cmpq	%rax, %rcx
    00000107: 	jbe	.Ltmp1113 # Offset: 263
.Ltmp1114:
    00000109: 	movq	(%rax), %rdx
    0000010c: 	movq	%rax, %rsi
    0000010f: 	cmpq	%rdi, (%rdx)
    00000112: 	jle	.Ltmp1115 # Offset: 274
    00000114: 	cmpq	%rax, %rcx
    00000117: 	jbe	.Ltmp1113 # Offset: 279
    00000119: 	movq	%rdx, (%rcx)
    0000011c: 	movq	%r8, (%rax)
.Ltmp1110:
    0000011f: 	movq	-0x8(%rcx), %rax
    00000123: 	movq	%rcx, %rbx
    00000126: 	movq	(%rax), %rax
    00000129: 	jmp	.Ltmp1116 # Offset: 297
.Ltmp1111:
    0000012e: 	movq	%rbx, %rsi
    00000131: 	movq	%rbp, %rdi
    00000134: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 308
    00000139: 	movq	%r12, %rax
    0000013c: 	subq	%rbx, %rax
    0000013f: 	movq	%rax, %rdx
    00000142: 	sarq	$0x3, %rdx
    00000146: 	cmpq	$0x8, %rax
    0000014a: 	jle	.Ltmp1105 # Offset: 330
    0000014c: 	movq	%rbx, %rbp
    0000014f: 	jmp	.Ltmp1112 # Offset: 335
.Ltmp1108:
    00000154: 	movq	%r8, (%rdi)
    00000157: 	movq	%rax, -0x8(%r12)
    0000015c: 	movq	(%rdi), %rax
    0000015f: 	movq	(%rax), %rdi
    00000162: 	movq	%rdx, %rax
    00000165: 	jmp	.Ltmp1117 # Offset: 357
.Ltmp1105:
    0000016a: 	popq	%rbx
    0000016b: 	popq	%rbp
    0000016c: 	popq	%r12
    0000016e: 	retq # Offset: 366
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_"

Binary Function "_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 117
  State       : disassembled
  Address     : 0xc420
  Size        : 0x23a
  MaxSize     : 0x240
  Offset      : 0xc420
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0116:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x50, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x48(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x30(%rsp), %rbx
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	0x8(%rbp), %rsi
    00000034: 	movq	(%rbp), %rdi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEEEvT_SD_ # Offset: 63
    00000044: 	callq	clock@PLT # Offset: 68
    00000049: 	movq	(%r13), %r14
    0000004d: 	movq	0x8(%r13), %r12
    00000051: 	pxor	%xmm0, %xmm0
    00000055: 	movq	%rax, end_time(%rip)
    0000005c: 	subq	start_time(%rip), %rax
    00000063: 	cvtsi2sd	%rax, %xmm0
    00000068: 	movq	%r14, %rax
    0000006b: 	movq	%rbx, 0x20(%rsp)
    00000070: 	divsd	DATAat0x17370(%rip), %xmm0
    00000078: 	addq	%r12, %rax
    0000007b: 	je	.Ltmp1118 # Offset: 123
    0000007d: 	testq	%r14, %r14
    00000080: 	je	.Ltmp1119 # Offset: 128
.Ltmp1118:
    00000086: 	movq	%r12, 0x18(%rsp)
    0000008b: 	cmpq	$0xf, %r12
    0000008f: 	ja	.Ltmp1120 # Offset: 143
    00000095: 	cmpq	$0x1, %r12
    00000099: 	jne	.Ltmp1121 # Offset: 153
    0000009f: 	movzbl	(%r14), %eax
    000000a3: 	movb	%al, 0x30(%rsp)
    000000a7: 	movq	%rbx, %rax
.Ltmp1129:
    000000aa: 	movq	%r12, 0x28(%rsp)
    000000af: 	movb	$0x0, (%rax,%r12)
    000000b4: 	movq	0x8(%rbp), %rdi
    000000b8: 	movq	0x28(%rsp), %rdx
    000000bd: 	subq	(%rbp), %rdi
    000000c1: 	movq	0x20(%rsp), %rsi
    000000c6: 	sarq	$0x3, %rdi
    000000ca: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 202
    000000cf: 	movq	0x20(%rsp), %rdi
    000000d4: 	cmpq	%rbx, %rdi
    000000d7: 	je	.Ltmp1122 # Offset: 215
    000000d9: 	movq	0x30(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp1122:
    000000e7: 	movq	(%r13), %rsi
    000000eb: 	movq	0x8(%r13), %rdx
    000000ef: 	leaq	0x20(%rsp), %rdi
    000000f4: 	movq	%rbx, 0x20(%rsp)
    000000f9: 	addq	%rsi, %rdx
    000000fc: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 252
    00000101: 	movq	(%rbp), %rax
    00000105: 	movq	0x8(%rbp), %rsi
    00000109: 	addq	$0x8, %rax
    0000010d: 	jmp	.Ltmp1123 # Offset: 269
    0000010f: 	nop # Size: 1
.Ltmp1125:
    00000110: 	movq	(%rdx), %rcx
    00000113: 	movq	-0x8(%rdx), %rdx
    00000117: 	addq	$0x8, %rax
    0000011b: 	movq	(%rdx), %rdi
    0000011e: 	cmpq	%rdi, (%rcx)
    00000121: 	jl	.Ltmp1124 # Offset: 289
.Ltmp1123:
    00000123: 	movq	%rax, %rdx
    00000126: 	cmpq	%rax, %rsi
    00000129: 	jne	.Ltmp1125 # Offset: 297
.Ltmp1130:
    0000012b: 	movq	0x20(%rsp), %rdi
    00000130: 	cmpq	%rbx, %rdi
    00000133: 	je	.Ltmp1126 # Offset: 307
    00000135: 	movq	0x30(%rsp), %rax
    0000013a: 	leaq	0x1(%rax), %rsi
    0000013e: 	callq	_ZdlPvm@PLT # Offset: 318
.Ltmp1126:
    00000143: 	movq	0x48(%rsp), %rax
    00000148: 	subq	%fs:0x28, %rax
    00000151: 	jne	.Ltmp1127 # Offset: 337
    00000157: 	addq	$0x50, %rsp
    0000015b: 	popq	%rbx
    0000015c: 	popq	%rbp
    0000015d: 	popq	%r12
    0000015f: 	popq	%r13
    00000161: 	popq	%r14
    00000163: 	retq # Offset: 355
    00000164: 	nopl	(%rax) # Size: 4
.Ltmp1121:
    00000168: 	testq	%r12, %r12
    0000016b: 	jne	.Ltmp1128 # Offset: 363
    00000171: 	movq	%rbx, %rax
    00000174: 	jmp	.Ltmp1129 # Offset: 372
    00000179: 	nopl	(%rax) # Size: 7
.Ltmp1124:
    00000180: 	movq	0x20(%rsp), %rdx
    00000185: 	leaq	DATAat0x1710f(%rip), %rsi
    0000018c: 	movl	$0x1, %edi
    00000191: 	xorl	%eax, %eax
    00000193: 	callq	__printf_chk@PLT # Offset: 403
    00000198: 	jmp	.Ltmp1130 # Offset: 408
    0000019a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1120:
    000001a0: 	leaq	0x20(%rsp), %rdi
    000001a5: 	leaq	0x18(%rsp), %rsi
    000001aa: 	xorl	%edx, %edx
    000001ac: 	movsd	%xmm0, 0x8(%rsp)
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movsd	0x8(%rsp), %xmm0
    000001bd: 	movq	%rax, 0x20(%rsp)
    000001c2: 	movq	%rax, %rdi
    000001c5: 	movq	0x18(%rsp), %rax
    000001ca: 	movq	%rax, 0x30(%rsp)
.Ltmp1131:
    000001cf: 	movq	%r12, %rdx
    000001d2: 	movq	%r14, %rsi
    000001d5: 	movsd	%xmm0, 0x8(%rsp)
    000001db: 	callq	memcpy@PLT # Offset: 475
    000001e0: 	movq	0x18(%rsp), %r12
    000001e5: 	movq	0x20(%rsp), %rax
    000001ea: 	movsd	0x8(%rsp), %xmm0
    000001f0: 	jmp	.Ltmp1129 # Offset: 496
.Ltmp1127:
    000001f5: 	callq	__stack_chk_fail@PLT # Offset: 501
.Ltmp1128:
    000001fa: 	movq	%rbx, %rdi
    000001fd: 	jmp	.Ltmp1131 # Offset: 509
.Ltmp1119:
    000001ff: 	leaq	DATAat0x17008(%rip), %rdi
    00000206: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 518
    0000020b: 	endbr64
.Ltmp1133:
    0000020f: 	movq	%rax, %rbp
    00000212: 	jmp	.Ltmp1132 # Offset: 530
    00000214: 	endbr64
    00000218: 	jmp	.Ltmp1133 # Offset: 536
.Ltmp1132:
    0000021a: 	movq	0x20(%rsp), %rdi
    0000021f: 	cmpq	%rbx, %rdi
    00000222: 	je	.Ltmp1134 # Offset: 546
    00000224: 	movq	0x30(%rsp), %rax
    00000229: 	leaq	0x1(%rax), %rsi
    0000022d: 	callq	_ZdlPvm@PLT # Offset: 557
.Ltmp1134:
    00000232: 	movq	%rbp, %rdi
    00000235: 	callq	_Unwind_Resume@PLT # Offset: 565
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_" after disassembly {
  Number      : 118
  State       : disassembled
  Address     : 0xc660
  Size        : 0x1c3
  MaxSize     : 0x1d0
  Offset      : 0xc660
  Section     : .text
  Orc Section : .local.text._Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0117:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	pushq	%r12
    00000009: 	movq	%rsi, %r12
    0000000c: 	subq	%rdi, %rax
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	movq	%rax, %rdx
    00000016: 	pushq	%rbx
    00000017: 	sarq	$0x4, %rdx
    0000001b: 	cmpq	$0x10, %rax
    0000001f: 	jle	.Ltmp1135 # Offset: 31
.Ltmp1142:
    00000025: 	subq	$0x1, %rdx
    00000029: 	movq	(%rbp), %rsi
    0000002d: 	movq	%rdx, %rax
    00000030: 	shrq	$0x3f, %rax
    00000034: 	movq	(%rsi), %rdi
    00000037: 	addq	%rdx, %rax
    0000003a: 	sarq	%rax
    0000003d: 	shlq	$0x4, %rax
    00000041: 	addq	%rbp, %rax
    00000044: 	movq	(%rax), %rdx
    00000047: 	movq	(%rdx), %rcx
    0000004a: 	cmpq	%rdi, %rcx
    0000004d: 	jge	.Ltmp1136 # Offset: 77
    0000004f: 	movq	%rsi, %xmm0
    00000054: 	movq	%rdx, (%rbp)
    00000058: 	movq	0x8(%rax), %rdx
    0000005c: 	movq	%rdi, %rcx
    0000005f: 	movhps	0x8(%rbp), %xmm0
    00000063: 	movups	%xmm0, (%rax)
    00000066: 	movq	(%rbp), %r8
    0000006a: 	movq	%rdx, 0x8(%rbp)
    0000006e: 	movq	%rsi, %rdx
    00000071: 	movq	(%r8), %rdi
    00000074: 	movq	%r8, %rsi
.Ltmp1136:
    00000077: 	movq	-0x10(%r12), %r8
    0000007c: 	movq	(%r8), %r9
    0000007f: 	cmpq	%rdi, %r9
    00000082: 	jge	.Ltmp1137 # Offset: 130
    00000084: 	movq	-0x8(%r12), %rdx
    00000089: 	movq	%rsi, %xmm0
    0000008e: 	movq	%r8, (%rbp)
    00000092: 	movq	%rdi, %r9
    00000095: 	movhps	0x8(%rbp), %xmm0
    00000099: 	movq	%rsi, %r8
    0000009c: 	movups	%xmm0, -0x10(%r12)
    000000a2: 	movq	%rdx, 0x8(%rbp)
    000000a6: 	movq	(%rax), %rdx
    000000a9: 	movq	(%rdx), %rcx
.Ltmp1137:
    000000ac: 	cmpq	%rcx, %r9
    000000af: 	jl	.Ltmp1138 # Offset: 175
    000000b5: 	movq	-0x10(%r12), %rax
    000000ba: 	movq	%rcx, %rdi
    000000bd: 	movq	(%rax), %rax
.Ltmp1147:
    000000c0: 	movq	%r12, %rbx
    000000c3: 	movq	%rbp, %rsi
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1146:
    000000d0: 	movq	-0x10(%rbx), %r8
    000000d4: 	leaq	-0x10(%rbx), %rcx
    000000d8: 	cmpq	%rax, %rdi
    000000db: 	jg	.Ltmp1139 # Offset: 219
    000000dd: 	cmpq	%rcx, %rsi
    000000e0: 	jb	.Ltmp1140 # Offset: 224
.Ltmp1143:
    000000e2: 	movq	%rcx, %rdx
    000000e5: 	movq	%r12, %rax
    000000e8: 	subq	%rbp, %rdx
    000000eb: 	subq	%rcx, %rax
    000000ee: 	cmpq	%rax, %rdx
    000000f1: 	jle	.Ltmp1141 # Offset: 241
    000000f3: 	movq	%r12, %rsi
    000000f6: 	movq	%rbx, %rdi
    000000f9: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 249
    000000fe: 	movq	%rbx, %rax
    00000101: 	subq	%rbp, %rax
    00000104: 	movq	%rax, %rdx
    00000107: 	sarq	$0x4, %rdx
    0000010b: 	cmpq	$0x10, %rax
    0000010f: 	jle	.Ltmp1135 # Offset: 271
    00000115: 	movq	%rbx, %r12
    00000118: 	jmp	.Ltmp1142 # Offset: 280
    0000011d: 	nopl	(%rax) # Size: 3
.Ltmp1139:
    00000120: 	cmpq	%rcx, %rsi
    00000123: 	jae	.Ltmp1143 # Offset: 291
    00000125: 	movq	%rsi, %rax
    00000128: 	jmp	.Ltmp1144 # Offset: 296
    0000012a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1145:
    00000130: 	addq	$0x10, %rax
    00000134: 	cmpq	%rax, %rcx
    00000137: 	jbe	.Ltmp1143 # Offset: 311
.Ltmp1144:
    00000139: 	movq	(%rax), %rdx
    0000013c: 	movq	%rax, %rsi
    0000013f: 	cmpq	%rdi, (%rdx)
    00000142: 	jle	.Ltmp1145 # Offset: 322
    00000144: 	cmpq	%rax, %rcx
    00000147: 	jbe	.Ltmp1143 # Offset: 327
    00000149: 	movq	0x8(%rax), %rax
    0000014d: 	movq	%r8, %xmm0
    00000152: 	movq	%rdx, (%rcx)
    00000155: 	movhps	0x8(%rcx), %xmm0
    00000159: 	movups	%xmm0, (%rsi)
    0000015c: 	movq	%rax, 0x8(%rcx)
.Ltmp1140:
    00000160: 	movq	-0x10(%rcx), %rax
    00000164: 	movq	%rcx, %rbx
    00000167: 	movq	(%rax), %rax
    0000016a: 	jmp	.Ltmp1146 # Offset: 362
.Ltmp1141:
    0000016f: 	movq	%rbx, %rsi
    00000172: 	movq	%rbp, %rdi
    00000175: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 373
    0000017a: 	movq	%r12, %rax
    0000017d: 	subq	%rbx, %rax
    00000180: 	movq	%rax, %rdx
    00000183: 	sarq	$0x4, %rdx
    00000187: 	cmpq	$0x10, %rax
    0000018b: 	jle	.Ltmp1135 # Offset: 395
    0000018d: 	movq	%rbx, %rbp
    00000190: 	jmp	.Ltmp1142 # Offset: 400
.Ltmp1138:
    00000195: 	movq	-0x8(%r12), %rsi
    0000019a: 	movq	%rdx, %xmm0
    0000019f: 	movq	%r8, (%rax)
    000001a2: 	movhps	0x8(%rax), %xmm0
    000001a6: 	movups	%xmm0, -0x10(%r12)
    000001ac: 	movq	%rsi, 0x8(%rax)
    000001b0: 	movq	(%rax), %rax
    000001b3: 	movq	(%rax), %rdi
    000001b6: 	movq	%rcx, %rax
    000001b9: 	jmp	.Ltmp1147 # Offset: 441
.Ltmp1135:
    000001be: 	popq	%rbx
    000001bf: 	popq	%rbp
    000001c0: 	popq	%r12
    000001c2: 	retq # Offset: 450
DWARF CFI Instructions:
    <empty>
End of Function "_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_"

Binary Function "_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 119
  State       : disassembled
  Address     : 0xc830
  Size        : 0x2f7
  MaxSize     : 0x300
  Offset      : 0xc830
  Section     : .text
  Orc Section : .local.text._Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0118:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	movq	%rsi, %r13
    0000000b: 	pushq	%r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdi, %rbp
    00000011: 	pushq	%rbx
    00000012: 	subq	$0x70, %rsp
    00000016: 	movq	%fs:0x28, %rax
    0000001f: 	movq	%rax, 0x68(%rsp)
    00000024: 	xorl	%eax, %eax
    00000026: 	leaq	0x30(%rsp), %rbx
    0000002b: 	callq	clock@PLT # Offset: 43
    00000030: 	movq	0x8(%rbp), %rsi
    00000034: 	movq	(%rbp), %rdi
    00000038: 	movq	%rax, start_time(%rip)
    0000003f: 	callq	_Z15quicksort_derefIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEEEvT_SB_ # Offset: 63
    00000044: 	callq	clock@PLT # Offset: 68
    00000049: 	movq	(%r13), %r14
    0000004d: 	movq	0x8(%r13), %r12
    00000051: 	pxor	%xmm0, %xmm0
    00000055: 	movq	%rax, end_time(%rip)
    0000005c: 	subq	start_time(%rip), %rax
    00000063: 	cvtsi2sd	%rax, %xmm0
    00000068: 	movq	%r14, %rax
    0000006b: 	movq	%rbx, 0x20(%rsp)
    00000070: 	divsd	DATAat0x17370(%rip), %xmm0
    00000078: 	addq	%r12, %rax
    0000007b: 	je	.Ltmp1148 # Offset: 123
    0000007d: 	testq	%r14, %r14
    00000080: 	je	.Ltmp1149 # Offset: 128
.Ltmp1148:
    00000086: 	movq	%r12, 0x18(%rsp)
    0000008b: 	cmpq	$0xf, %r12
    0000008f: 	ja	.Ltmp1150 # Offset: 143
    00000095: 	cmpq	$0x1, %r12
    00000099: 	jne	.Ltmp1151 # Offset: 153
    0000009f: 	movzbl	(%r14), %eax
    000000a3: 	movb	%al, 0x30(%rsp)
    000000a7: 	movq	%rbx, %rax
.Ltmp1162:
    000000aa: 	movq	%r12, 0x28(%rsp)
    000000af: 	movb	$0x0, (%rax,%r12)
    000000b4: 	movq	0x8(%rbp), %rdi
    000000b8: 	movq	0x28(%rsp), %rdx
    000000bd: 	subq	(%rbp), %rdi
    000000c1: 	movq	0x20(%rsp), %rsi
    000000c6: 	sarq	$0x4, %rdi
    000000ca: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 202
    000000cf: 	movq	0x20(%rsp), %rdi
    000000d4: 	cmpq	%rbx, %rdi
    000000d7: 	je	.Ltmp1152 # Offset: 215
    000000d9: 	movq	0x30(%rsp), %rax
    000000de: 	leaq	0x1(%rax), %rsi
    000000e2: 	callq	_ZdlPvm@PLT # Offset: 226
.Ltmp1152:
    000000e7: 	movq	(%r13), %r14
    000000eb: 	movq	0x8(%r13), %r12
    000000ef: 	leaq	0x50(%rsp), %rbx
    000000f4: 	movq	%rbx, 0x40(%rsp)
    000000f9: 	movq	%r14, %rax
    000000fc: 	addq	%r12, %rax
    000000ff: 	je	.Ltmp1153 # Offset: 255
    00000101: 	testq	%r14, %r14
    00000104: 	je	.Ltmp1149 # Offset: 260
.Ltmp1153:
    0000010a: 	movq	%r12, 0x18(%rsp)
    0000010f: 	cmpq	$0xf, %r12
    00000113: 	ja	.Ltmp1154 # Offset: 275
    00000119: 	cmpq	$0x1, %r12
    0000011d: 	jne	.Ltmp1155 # Offset: 285
    00000123: 	movzbl	(%r14), %eax
    00000127: 	movb	%al, 0x50(%rsp)
    0000012b: 	movq	%rbx, %rax
.Ltmp1165:
    0000012e: 	movq	%r12, 0x48(%rsp)
    00000133: 	movb	$0x0, (%rax,%r12)
    00000138: 	movq	(%rbp), %rax
    0000013c: 	movq	0x8(%rbp), %rsi
    00000140: 	addq	$0x10, %rax
    00000144: 	jmp	.Ltmp1156 # Offset: 324
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1158:
    00000150: 	movq	(%rdx), %rcx
    00000153: 	movq	-0x10(%rdx), %rdx
    00000157: 	addq	$0x10, %rax
    0000015b: 	movq	(%rdx), %rdi
    0000015e: 	cmpq	%rdi, (%rcx)
    00000161: 	jl	.Ltmp1157 # Offset: 353
.Ltmp1156:
    00000163: 	movq	%rax, %rdx
    00000166: 	cmpq	%rax, %rsi
    00000169: 	jne	.Ltmp1158 # Offset: 361
.Ltmp1163:
    0000016b: 	movq	0x40(%rsp), %rdi
    00000170: 	cmpq	%rbx, %rdi
    00000173: 	je	.Ltmp1159 # Offset: 371
    00000175: 	movq	0x50(%rsp), %rax
    0000017a: 	leaq	0x1(%rax), %rsi
    0000017e: 	callq	_ZdlPvm@PLT # Offset: 382
.Ltmp1159:
    00000183: 	movq	0x68(%rsp), %rax
    00000188: 	subq	%fs:0x28, %rax
    00000191: 	jne	.Ltmp1160 # Offset: 401
    00000197: 	addq	$0x70, %rsp
    0000019b: 	popq	%rbx
    0000019c: 	popq	%rbp
    0000019d: 	popq	%r12
    0000019f: 	popq	%r13
    000001a1: 	popq	%r14
    000001a3: 	retq # Offset: 419
    000001a4: 	nopl	(%rax) # Size: 4
.Ltmp1151:
    000001a8: 	testq	%r12, %r12
    000001ab: 	jne	.Ltmp1161 # Offset: 427
    000001b1: 	movq	%rbx, %rax
    000001b4: 	jmp	.Ltmp1162 # Offset: 436
    000001b9: 	nopl	(%rax) # Size: 7
.Ltmp1157:
    000001c0: 	movq	0x40(%rsp), %rdx
    000001c5: 	leaq	DATAat0x1710f(%rip), %rsi
    000001cc: 	movl	$0x1, %edi
    000001d1: 	xorl	%eax, %eax
    000001d3: 	callq	__printf_chk@PLT # Offset: 467
    000001d8: 	jmp	.Ltmp1163 # Offset: 472
    000001da: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1155:
    000001e0: 	testq	%r12, %r12
    000001e3: 	jne	.Ltmp1164 # Offset: 483
    000001e9: 	movq	%rbx, %rax
    000001ec: 	jmp	.Ltmp1165 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp1154:
    000001f8: 	leaq	0x40(%rsp), %rdi
    000001fd: 	leaq	0x18(%rsp), %rsi
    00000202: 	xorl	%edx, %edx
    00000204: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 516
    00000209: 	movq	%rax, 0x40(%rsp)
    0000020e: 	movq	%rax, %rdi
    00000211: 	movq	0x18(%rsp), %rax
    00000216: 	movq	%rax, 0x50(%rsp)
.Ltmp1167:
    0000021b: 	movq	%r12, %rdx
    0000021e: 	movq	%r14, %rsi
    00000221: 	callq	memcpy@PLT # Offset: 545
    00000226: 	movq	0x18(%rsp), %r12
    0000022b: 	movq	0x40(%rsp), %rax
    00000230: 	jmp	.Ltmp1165 # Offset: 560
    00000235: 	nopl	(%rax) # Size: 3
.Ltmp1150:
    00000238: 	leaq	0x20(%rsp), %rdi
    0000023d: 	leaq	0x18(%rsp), %rsi
    00000242: 	xorl	%edx, %edx
    00000244: 	movsd	%xmm0, 0x8(%rsp)
    0000024a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 586
    0000024f: 	movsd	0x8(%rsp), %xmm0
    00000255: 	movq	%rax, 0x20(%rsp)
    0000025a: 	movq	%rax, %rdi
    0000025d: 	movq	0x18(%rsp), %rax
    00000262: 	movq	%rax, 0x30(%rsp)
.Ltmp1166:
    00000267: 	movq	%r12, %rdx
    0000026a: 	movq	%r14, %rsi
    0000026d: 	movsd	%xmm0, 0x8(%rsp)
    00000273: 	callq	memcpy@PLT # Offset: 627
    00000278: 	movq	0x18(%rsp), %r12
    0000027d: 	movq	0x20(%rsp), %rax
    00000282: 	movsd	0x8(%rsp), %xmm0
    00000288: 	jmp	.Ltmp1162 # Offset: 648
.Ltmp1160:
    0000028d: 	callq	__stack_chk_fail@PLT # Offset: 653
.Ltmp1161:
    00000292: 	movq	%rbx, %rdi
    00000295: 	jmp	.Ltmp1166 # Offset: 661
.Ltmp1164:
    00000297: 	movq	%rbx, %rdi
    0000029a: 	jmp	.Ltmp1167 # Offset: 666
.Ltmp1149:
    0000029f: 	leaq	DATAat0x17008(%rip), %rdi
    000002a6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 678
    000002ab: 	endbr64
    000002af: 	movq	%rax, %rbp
    000002b2: 	jmp	.Ltmp1168 # Offset: 690
    000002b4: 	endbr64
    000002b8: 	movq	%rax, %rbp
    000002bb: 	jmp	.Ltmp1169 # Offset: 699
.Ltmp1168:
    000002bd: 	movq	0x40(%rsp), %rdi
    000002c2: 	cmpq	%rbx, %rdi
    000002c5: 	je	.Ltmp1170 # Offset: 709
    000002c7: 	movq	0x50(%rsp), %rax
    000002cc: 	leaq	0x1(%rax), %rsi
    000002d0: 	callq	_ZdlPvm@PLT # Offset: 720
.Ltmp1170:
    000002d5: 	movq	%rbp, %rdi
    000002d8: 	callq	_Unwind_Resume@PLT # Offset: 728
.Ltmp1169:
    000002dd: 	movq	0x20(%rsp), %rdi
    000002e2: 	cmpq	%rbx, %rdi
    000002e5: 	je	.Ltmp1170 # Offset: 741
    000002e7: 	movq	0x30(%rsp), %rax
    000002ec: 	leaq	0x1(%rax), %rsi
    000002f0: 	callq	_ZdlPvm@PLT # Offset: 752
    000002f5: 	jmp	.Ltmp1170 # Offset: 757
DWARF CFI Instructions:
    <empty>
End of Function "_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt6vectorIP17VariableContainerIlLi1EESaIS2_EE17_M_default_appendEm" after disassembly {
  Number      : 120
  State       : disassembled
  Address     : 0xcb30
  Size        : 0x1da
  MaxSize     : 0x1e0
  Offset      : 0xcb30
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorIP17VariableContainerIlLi1EESaIS2_EE17_M_default_appendEm
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0119:
    00000000: 	endbr64
    00000004: 	testq	%rsi, %rsi
    00000007: 	je	.Ltmp1171 # Offset: 7
    0000000d: 	movabsq	$0xfffffffffffffff, %rax
    00000017: 	pushq	%r15
    00000019: 	pushq	%r14
    0000001b: 	pushq	%r13
    0000001d: 	pushq	%r12
    0000001f: 	movq	%rdi, %r12
    00000022: 	pushq	%rbp
    00000023: 	pushq	%rbx
    00000024: 	movq	%rsi, %rbx
    00000027: 	subq	$0x18, %rsp
    0000002b: 	movq	0x8(%rdi), %rdx
    0000002f: 	movq	(%rdi), %r8
    00000032: 	movq	%rdx, %rbp
    00000035: 	subq	%r8, %rbp
    00000038: 	movq	%rbp, %r13
    0000003b: 	sarq	$0x3, %r13
    0000003f: 	subq	%r13, %rax
    00000042: 	movq	%rax, %rcx
    00000045: 	movq	0x10(%rdi), %rax
    00000049: 	subq	%rdx, %rax
    0000004c: 	sarq	$0x3, %rax
    00000050: 	cmpq	%rax, %rsi
    00000053: 	jbe	.Ltmp1172 # Offset: 83
    00000059: 	cmpq	%rsi, %rcx
    0000005c: 	jb	.Ltmp1173 # Offset: 92
    00000062: 	cmpq	%r13, %rsi
    00000065: 	movq	%r13, %rax
    00000068: 	cmovaeq	%rsi, %rax
    0000006c: 	addq	%r13, %rax
    0000006f: 	jb	.Ltmp1174 # Offset: 111
    00000075: 	testq	%rax, %rax
    00000078: 	jne	.Ltmp1175 # Offset: 120
    0000007e: 	movq	%rbp, %r9
    00000081: 	xorl	%r14d, %r14d
    00000084: 	xorl	%r15d, %r15d
.Ltmp1182:
    00000087: 	addq	%r15, %rbp
    0000008a: 	movq	%rbx, %rdx
    0000008d: 	movq	$0x0, (%rbp)
    00000095: 	subq	$0x1, %rdx
    00000099: 	je	.Ltmp1176 # Offset: 153
    0000009b: 	leaq	0x8(%rbp), %rdi
    0000009f: 	shlq	$0x3, %rdx
    000000a3: 	xorl	%esi, %esi
    000000a5: 	movq	%r9, 0x8(%rsp)
    000000aa: 	movq	%r8, (%rsp)
    000000ae: 	callq	memset@PLT # Offset: 174
    000000b3: 	movq	(%rsp), %r8
    000000b7: 	movq	0x8(%rsp), %r9
.Ltmp1176:
    000000bc: 	testq	%r9, %r9
    000000bf: 	jg	.Ltmp1177 # Offset: 191
    000000c5: 	testq	%r8, %r8
    000000c8: 	jne	.Ltmp1178 # Offset: 200
.Ltmp1180:
    000000ce: 	addq	%r13, %rbx
    000000d1: 	movq	%r15, %xmm0
    000000d6: 	movq	%r14, 0x10(%r12)
    000000db: 	leaq	(%r15,%rbx,8), %rax
    000000df: 	movq	%rax, %xmm1
    000000e4: 	punpcklqdq	%xmm1, %xmm0
    000000e8: 	movups	%xmm0, (%r12)
    000000ed: 	addq	$0x18, %rsp
    000000f1: 	popq	%rbx
    000000f2: 	popq	%rbp
    000000f3: 	popq	%r12
    000000f5: 	popq	%r13
    000000f7: 	popq	%r14
    000000f9: 	popq	%r15
    000000fb: 	retq # Offset: 251
    000000fc: 	nopl	(%rax) # Size: 4
.Ltmp1172:
    00000100: 	movq	$0x0, (%rdx)
    00000107: 	leaq	0x8(%rdx), %rcx
    0000010b: 	subq	$0x1, %rbx
    0000010f: 	je	.Ltmp1179 # Offset: 271
    00000111: 	leaq	(%rcx,%rbx,8), %rax
    00000115: 	movq	%rcx, %rdi
    00000118: 	xorl	%esi, %esi
    0000011a: 	subq	%rdx, %rax
    0000011d: 	leaq	-0x8(%rax), %rbx
    00000121: 	movq	%rbx, %rdx
    00000124: 	callq	memset@PLT # Offset: 292
    00000129: 	movq	%rax, %rcx
    0000012c: 	addq	%rbx, %rcx
.Ltmp1179:
    0000012f: 	movq	%rcx, 0x8(%r12)
    00000134: 	addq	$0x18, %rsp
    00000138: 	popq	%rbx
    00000139: 	popq	%rbp
    0000013a: 	popq	%r12
    0000013c: 	popq	%r13
    0000013e: 	popq	%r14
    00000140: 	popq	%r15
    00000142: 	retq # Offset: 322
    00000143: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1171:
    00000148: 	retq # Offset: 328
    00000149: 	nopl	(%rax) # Size: 7
.Ltmp1177:
    00000150: 	movq	%r8, %rsi
    00000153: 	movq	%r9, %rdx
    00000156: 	movq	%r15, %rdi
    00000159: 	movq	%r8, (%rsp)
    0000015d: 	callq	memmove@PLT # Offset: 349
    00000162: 	movq	0x10(%r12), %rsi
    00000167: 	movq	(%rsp), %r8
    0000016b: 	subq	%r8, %rsi
.Ltmp1181:
    0000016e: 	movq	%r8, %rdi
    00000171: 	callq	_ZdlPvm@PLT # Offset: 369
    00000176: 	jmp	.Ltmp1180 # Offset: 374
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1178:
    00000180: 	movq	0x10(%r12), %rsi
    00000185: 	subq	%r8, %rsi
    00000188: 	jmp	.Ltmp1181 # Offset: 392
.Ltmp1175:
    0000018a: 	movabsq	$0xfffffffffffffff, %rdx
    00000194: 	cmpq	%rdx, %rax
    00000197: 	cmovaq	%rdx, %rax
    0000019b: 	leaq	(,%rax,8), %r14
.Ltmp1183:
    000001a3: 	movq	%r14, %rdi
    000001a6: 	callq	_Znwm@PLT # Offset: 422
    000001ab: 	movq	(%r12), %r8
    000001af: 	movq	0x8(%r12), %r9
    000001b4: 	movq	%rax, %r15
    000001b7: 	addq	%rax, %r14
    000001ba: 	subq	%r8, %r9
    000001bd: 	jmp	.Ltmp1182 # Offset: 445
.Ltmp1174:
    000001c2: 	movabsq	$0x7ffffffffffffff8, %r14
    000001cc: 	jmp	.Ltmp1183 # Offset: 460
.Ltmp1173:
    000001ce: 	leaq	DATAat0x17138(%rip), %rdi
    000001d5: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 469
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorIP17VariableContainerIlLi1EESaIS2_EE17_M_default_appendEm"

Binary Function "_Z9CopyArrayIP17VariableContainerIlLi1EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 121
  State       : disassembled
  Address     : 0xcd10
  Size        : 0x264
  MaxSize     : 0x270
  Offset      : 0xcd10
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayIP17VariableContainerIlLi1EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0120:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rsi, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rdx, %rbx
    0000001b: 	subq	$0x58, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	movq	0x8(%rsi), %rax
    00000031: 	subq	(%rsi), %rax
    00000034: 	movq	$0x0, 0x10(%rdi)
    0000003c: 	movq	%rax, %rbp
    0000003f: 	movups	%xmm0, (%rdi)
    00000042: 	sarq	$0x3, %rbp
    00000046: 	testq	%rax, %rax
    00000049: 	jne	.Ltmp1184 # Offset: 73
.Ltmp1196:
    0000004f: 	callq	clock@PLT # Offset: 79
    00000054: 	movq	%rax, start_time(%rip)
    0000005b: 	testq	%rbp, %rbp
    0000005e: 	je	.Ltmp1185 # Offset: 94
    00000060: 	movq	(%r13), %rcx
    00000064: 	movq	(%r12), %rdx
    00000068: 	leaq	0x8(%rcx), %rax
    0000006c: 	cmpq	%rax, %rdx
    0000006f: 	je	.Ltmp1186 # Offset: 111
    00000075: 	leaq	-0x1(%rbp), %rax
    00000079: 	cmpq	$0x2, %rax
    0000007d: 	jbe	.Ltmp1186 # Offset: 125
    00000083: 	movq	%rbp, %rsi
    00000086: 	xorl	%eax, %eax
    00000088: 	shrq	%rsi
    0000008b: 	shlq	$0x4, %rsi
    0000008f: 	nop # Size: 1
.Ltmp1187:
    00000090: 	movdqu	(%rcx,%rax), %xmm1
    00000095: 	movups	%xmm1, (%rdx,%rax)
    00000099: 	addq	$0x10, %rax
    0000009d: 	cmpq	%rax, %rsi
    000000a0: 	jne	.Ltmp1187 # Offset: 160
    000000a2: 	movq	%rbp, %rax
    000000a5: 	andq	$-0x2, %rax
    000000a9: 	testb	$0x1, %bpl
    000000ad: 	je	.Ltmp1185 # Offset: 173
    000000af: 	movq	(%rcx,%rax,8), %rcx
    000000b3: 	movq	%rcx, (%rdx,%rax,8)
.Ltmp1185:
    000000b7: 	callq	clock@PLT # Offset: 183
    000000bc: 	movq	(%rbx), %r14
    000000bf: 	movq	0x8(%rbx), %r15
    000000c3: 	pxor	%xmm0, %xmm0
    000000c7: 	movq	%rax, end_time(%rip)
    000000ce: 	subq	start_time(%rip), %rax
    000000d5: 	leaq	0x30(%rsp), %r13
    000000da: 	cvtsi2sd	%rax, %xmm0
    000000df: 	movq	%r14, %rax
    000000e2: 	divsd	DATAat0x17370(%rip), %xmm0
    000000ea: 	movq	%r13, 0x20(%rsp)
    000000ef: 	addq	%r15, %rax
    000000f2: 	movsd	%xmm0, 0x8(%rsp)
    000000f8: 	je	.Ltmp1188 # Offset: 248
    000000fa: 	testq	%r14, %r14
    000000fd: 	je	.Ltmp1189 # Offset: 253
.Ltmp1188:
    00000103: 	movq	%r15, 0x18(%rsp)
    00000108: 	cmpq	$0xf, %r15
    0000010c: 	ja	.Ltmp1190 # Offset: 268
    00000112: 	cmpq	$0x1, %r15
    00000116: 	jne	.Ltmp1191 # Offset: 278
    00000118: 	movzbl	(%r14), %eax
    0000011c: 	movb	%al, 0x30(%rsp)
    00000120: 	movq	%r13, %rax
.Ltmp1195:
    00000123: 	movq	%r15, 0x28(%rsp)
    00000128: 	movsd	0x8(%rsp), %xmm0
    0000012e: 	movq	%rbp, %rdi
    00000131: 	movb	$0x0, (%rax,%r15)
    00000136: 	movq	0x28(%rsp), %rdx
    0000013b: 	movq	0x20(%rsp), %rsi
    00000140: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 320
    00000145: 	movq	0x20(%rsp), %rdi
    0000014a: 	cmpq	%r13, %rdi
    0000014d: 	je	.Ltmp1192 # Offset: 333
    0000014f: 	movq	0x30(%rsp), %rax
    00000154: 	leaq	0x1(%rax), %rsi
    00000158: 	callq	_ZdlPvm@PLT # Offset: 344
.Ltmp1192:
    0000015d: 	movq	0x48(%rsp), %rax
    00000162: 	subq	%fs:0x28, %rax
    0000016b: 	jne	.Ltmp1193 # Offset: 363
    00000171: 	addq	$0x58, %rsp
    00000175: 	movq	%r12, %rax
    00000178: 	popq	%rbx
    00000179: 	popq	%rbp
    0000017a: 	popq	%r12
    0000017c: 	popq	%r13
    0000017e: 	popq	%r14
    00000180: 	popq	%r15
    00000182: 	retq # Offset: 386
    00000183: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1191:
    00000188: 	testq	%r15, %r15
    0000018b: 	jne	.Ltmp1194 # Offset: 395
    0000018d: 	movq	%r13, %rax
    00000190: 	jmp	.Ltmp1195 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1190:
    00000198: 	leaq	0x18(%rsp), %rsi
    0000019d: 	leaq	0x20(%rsp), %rdi
    000001a2: 	xorl	%edx, %edx
    000001a4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 420
    000001a9: 	movq	%rax, 0x20(%rsp)
    000001ae: 	movq	%rax, %rdi
    000001b1: 	movq	0x18(%rsp), %rax
    000001b6: 	movq	%rax, 0x30(%rsp)
.Ltmp1198:
    000001bb: 	movq	%r15, %rdx
    000001be: 	movq	%r14, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	0x18(%rsp), %r15
    000001cb: 	movq	0x20(%rsp), %rax
    000001d0: 	jmp	.Ltmp1195 # Offset: 464
    000001d5: 	nopl	(%rax) # Size: 3
.Ltmp1184:
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	_ZNSt6vectorIP17VariableContainerIlLi1EESaIS2_EE17_M_default_appendEm # Offset: 475
    000001e0: 	jmp	.Ltmp1196 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp1186:
    000001e8: 	xorl	%eax, %eax
    000001ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1197:
    000001f0: 	movq	(%rcx,%rax,8), %rsi
    000001f4: 	movq	%rsi, (%rdx,%rax,8)
    000001f8: 	addq	$0x1, %rax
    000001fc: 	cmpq	%rax, %rbp
    000001ff: 	jne	.Ltmp1197 # Offset: 511
    00000201: 	jmp	.Ltmp1185 # Offset: 513
.Ltmp1194:
    00000206: 	movq	%r13, %rdi
    00000209: 	jmp	.Ltmp1198 # Offset: 521
.Ltmp1189:
    0000020b: 	leaq	DATAat0x17008(%rip), %rdi
    00000212: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 530
.Ltmp1193:
    00000217: 	callq	__stack_chk_fail@PLT # Offset: 535
    0000021c: 	endbr64
    00000220: 	movq	%rax, %rbp
    00000223: 	jmp	.Ltmp1199 # Offset: 547
    00000225: 	endbr64
    00000229: 	movq	%rax, %rbp
    0000022c: 	jmp	.Ltmp1200 # Offset: 556
.Ltmp1199:
    0000022e: 	movq	0x20(%rsp), %rdi
    00000233: 	cmpq	%r13, %rdi
    00000236: 	je	.Ltmp1200 # Offset: 566
    00000238: 	movq	0x30(%rsp), %rax
    0000023d: 	leaq	0x1(%rax), %rsi
    00000241: 	callq	_ZdlPvm@PLT # Offset: 577
.Ltmp1200:
    00000246: 	movq	(%r12), %rdi
    0000024a: 	movq	0x10(%r12), %rsi
    0000024f: 	subq	%rdi, %rsi
    00000252: 	testq	%rdi, %rdi
    00000255: 	je	.Ltmp1201 # Offset: 597
    00000257: 	callq	_ZdlPvm@PLT # Offset: 599
.Ltmp1201:
    0000025c: 	movq	%rbp, %rdi
    0000025f: 	callq	_Unwind_Resume@PLT # Offset: 607
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayIP17VariableContainerIlLi1EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi1EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 122
  State       : disassembled
  Address     : 0xcf80
  Size        : 0x226
  MaxSize     : 0x230
  Offset      : 0xcf80
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi1EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0121:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp1202 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
    0000004f: 	nop # Size: 1
.Ltmp1211:
    00000050: 	callq	clock@PLT # Offset: 80
    00000055: 	movq	(%r14), %r13
    00000058: 	pxor	%xmm0, %xmm0
    0000005c: 	movq	0x8(%r14), %r14
    00000060: 	movq	%rax, end_time(%rip)
    00000067: 	subq	start_time(%rip), %rax
    0000006e: 	leaq	0x20(%rsp), %rbp
    00000073: 	cvtsi2sd	%rax, %xmm0
    00000078: 	movq	%r13, %rax
    0000007b: 	divsd	DATAat0x17370(%rip), %xmm0
    00000083: 	movq	%rbp, 0x10(%rsp)
    00000088: 	addq	%r14, %rax
    0000008b: 	movq	%xmm0, %rbx
    00000090: 	je	.Ltmp1203 # Offset: 144
    00000092: 	testq	%r13, %r13
    00000095: 	je	.Ltmp1204 # Offset: 149
.Ltmp1203:
    0000009b: 	movq	%r14, 0x8(%rsp)
    000000a0: 	cmpq	$0xf, %r14
    000000a4: 	ja	.Ltmp1205 # Offset: 164
    000000aa: 	cmpq	$0x1, %r14
    000000ae: 	jne	.Ltmp1206 # Offset: 174
    000000b0: 	movzbl	(%r13), %eax
    000000b5: 	movb	%al, 0x20(%rsp)
    000000b9: 	movq	%rbp, %rax
.Ltmp1210:
    000000bc: 	movq	%r14, 0x18(%rsp)
    000000c1: 	movq	%r15, %rdi
    000000c4: 	movq	%rbx, %xmm0
    000000c9: 	movb	$0x0, (%rax,%r14)
    000000ce: 	movq	0x18(%rsp), %rdx
    000000d3: 	movq	0x10(%rsp), %rsi
    000000d8: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 216
    000000dd: 	movq	0x10(%rsp), %rdi
    000000e2: 	cmpq	%rbp, %rdi
    000000e5: 	je	.Ltmp1207 # Offset: 229
    000000e7: 	movq	0x20(%rsp), %rax
    000000ec: 	leaq	0x1(%rax), %rsi
    000000f0: 	callq	_ZdlPvm@PLT # Offset: 240
.Ltmp1207:
    000000f5: 	movq	0x38(%rsp), %rax
    000000fa: 	subq	%fs:0x28, %rax
    00000103: 	jne	.Ltmp1208 # Offset: 259
    00000109: 	addq	$0x48, %rsp
    0000010d: 	movq	%r12, %rax
    00000110: 	popq	%rbx
    00000111: 	popq	%rbp
    00000112: 	popq	%r12
    00000114: 	popq	%r13
    00000116: 	popq	%r14
    00000118: 	popq	%r15
    0000011a: 	retq # Offset: 282
    0000011b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1206:
    00000120: 	testq	%r14, %r14
    00000123: 	jne	.Ltmp1209 # Offset: 291
    00000129: 	movq	%rbp, %rax
    0000012c: 	jmp	.Ltmp1210 # Offset: 300
    0000012e: 	nop # Size: 2
.Ltmp1202:
    00000130: 	movq	%r15, %rsi
    00000133: 	movslq	%edx, %rbp
    00000136: 	callq	_ZNSt6vectorIP17VariableContainerIlLi1EESaIS2_EE17_M_default_appendEm # Offset: 310
    0000013b: 	callq	clock@PLT # Offset: 315
    00000140: 	movq	%rax, start_time(%rip)
    00000147: 	testl	%r15d, %r15d
    0000014a: 	jle	.Ltmp1211 # Offset: 330
    00000150: 	leaq	(,%r15,8), %r13
    00000158: 	xorl	%ebx, %ebx
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1212:
    00000160: 	movl	$0x8, %edi
    00000165: 	callq	_Znwm@PLT # Offset: 357
    0000016a: 	movq	(%r12), %rdx
    0000016e: 	movq	%rbp, (%rax)
    00000171: 	movq	%rax, (%rdx,%rbx)
    00000175: 	addq	$0x8, %rbx
    00000179: 	cmpq	%r13, %rbx
    0000017c: 	jne	.Ltmp1212 # Offset: 380
    0000017e: 	jmp	.Ltmp1211 # Offset: 382
    00000183: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1205:
    00000188: 	leaq	0x8(%rsp), %rsi
    0000018d: 	leaq	0x10(%rsp), %rdi
    00000192: 	xorl	%edx, %edx
    00000194: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 404
    00000199: 	movq	%rax, 0x10(%rsp)
    0000019e: 	movq	%rax, %rdi
    000001a1: 	movq	0x8(%rsp), %rax
    000001a6: 	movq	%rax, 0x20(%rsp)
.Ltmp1213:
    000001ab: 	movq	%r14, %rdx
    000001ae: 	movq	%r13, %rsi
    000001b1: 	callq	memcpy@PLT # Offset: 433
    000001b6: 	movq	0x8(%rsp), %r14
    000001bb: 	movq	0x10(%rsp), %rax
    000001c0: 	jmp	.Ltmp1210 # Offset: 448
.Ltmp1208:
    000001c5: 	callq	__stack_chk_fail@PLT # Offset: 453
.Ltmp1209:
    000001ca: 	movq	%rbp, %rdi
    000001cd: 	jmp	.Ltmp1213 # Offset: 461
.Ltmp1204:
    000001cf: 	leaq	DATAat0x17008(%rip), %rdi
    000001d6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 470
    000001db: 	endbr64
    000001df: 	movq	%rax, %rbp
    000001e2: 	jmp	.Ltmp1214 # Offset: 482
    000001e4: 	endbr64
    000001e8: 	movq	%rax, %rbx
    000001eb: 	movq	0x10(%rsp), %rdi
    000001f0: 	cmpq	%rbp, %rdi
    000001f3: 	jne	.Ltmp1215 # Offset: 499
.Ltmp1217:
    000001f5: 	movq	%rbx, %rbp
.Ltmp1214:
    000001f8: 	movq	(%r12), %rdi
    000001fc: 	movq	0x10(%r12), %rsi
    00000201: 	subq	%rdi, %rsi
    00000204: 	testq	%rdi, %rdi
    00000207: 	je	.Ltmp1216 # Offset: 519
    00000209: 	callq	_ZdlPvm@PLT # Offset: 521
.Ltmp1216:
    0000020e: 	movq	%rbp, %rdi
    00000211: 	callq	_Unwind_Resume@PLT # Offset: 529
.Ltmp1215:
    00000216: 	movq	0x20(%rsp), %rax
    0000021b: 	leaq	0x1(%rax), %rsi
    0000021f: 	callq	_ZdlPvm@PLT # Offset: 543
    00000224: 	jmp	.Ltmp1217 # Offset: 548
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi1EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv" after disassembly {
  Number      : 123
  State       : disassembled
  Address     : 0xd1b0
  Size        : 0x7c
  MaxSize     : 0x80
  Offset      : 0xd1b0
  Section     : .text
  Orc Section : .local.text._ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0122:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000000b: 	pushq	%rbp
    0000000c: 	movq	%rdi, %rbp
    0000000f: 	je	.Ltmp1218 # Offset: 15
    00000011: 	movl	0x8(%rdi), %eax
    00000014: 	leal	-0x1(%rax), %edx
    00000017: 	movl	%edx, 0x8(%rdi)
.Ltmp1222:
    0000001a: 	cmpl	$0x1, %eax
    0000001d: 	je	.Ltmp1219 # Offset: 29
.Ltmp1221:
    0000001f: 	popq	%rbp
    00000020: 	retq # Offset: 32
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp1219:
    00000028: 	movq	(%rbp), %rax
    0000002c: 	movq	%rbp, %rdi
    0000002f: 	callq	*0x10(%rax) # Offset: 47
    00000032: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000039: 	je	.Ltmp1220 # Offset: 57
    0000003b: 	movl	0xc(%rbp), %eax
    0000003e: 	leal	-0x1(%rax), %edx
    00000041: 	movl	%edx, 0xc(%rbp)
.Ltmp1223:
    00000044: 	cmpl	$0x1, %eax
    00000047: 	jne	.Ltmp1221 # Offset: 71
    00000049: 	movq	(%rbp), %rax
    0000004d: 	movq	%rbp, %rdi
    00000050: 	popq	%rbp
    00000051: 	movq	0x18(%rax), %rax
    00000055: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 85
    00000057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1218:
    00000060: 	movl	$0xffffffff, %eax
    00000065: 	lock # Offset: 101
    00000066: 	xaddl	%eax, 0x8(%rdi)
    0000006a: 	jmp	.Ltmp1222 # Offset: 106
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp1220:
    00000070: 	movl	$0xffffffff, %eax
    00000075: 	lock # Offset: 117
    00000076: 	xaddl	%eax, 0xc(%rbp)
    0000007a: 	jmp	.Ltmp1223 # Offset: 122
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 124
  State       : disassembled
  Address     : 0xd230
  Size        : 0x371
  MaxSize     : 0x380
  Offset      : 0xd230
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0123:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rax, %rsi
    0000000e: 	movq	%rdi, %r14
    00000011: 	pushq	%r13
    00000013: 	shrq	$0x3f, %rsi
    00000017: 	pushq	%r12
    00000019: 	addq	%rax, %rsi
    0000001c: 	movq	%rdx, %r12
    0000001f: 	pushq	%rbp
    00000020: 	sarq	%rsi
    00000023: 	pushq	%rbx
    00000024: 	subq	$0x28, %rsp
    00000028: 	movq	%rcx, 0x10(%rsp)
    0000002d: 	cmpq	%rsi, %r15
    00000030: 	jge	.Ltmp1224 # Offset: 48
    00000036: 	movq	%rsi, %r13
    00000039: 	movq	%r15, %rax
    0000003c: 	pxor	%xmm1, %xmm1
    00000040: 	jmp	.Ltmp1225 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1227:
    00000048: 	cmpq	%r13, %rbp
    0000004b: 	jge	.Ltmp1226 # Offset: 75
.Ltmp1230:
    00000051: 	movq	%rbp, %rax
.Ltmp1225:
    00000054: 	leaq	0x1(%rax), %rbx
    00000058: 	leaq	(%rbx,%rbx), %rbp
    0000005c: 	shlq	$0x5, %rbx
    00000060: 	leaq	-0x1(%rbp), %rdi
    00000064: 	addq	%r14, %rbx
    00000067: 	movq	%rdi, %rcx
    0000006a: 	movq	(%rbx), %rdx
    0000006d: 	shlq	$0x4, %rcx
    00000071: 	addq	%r14, %rcx
    00000074: 	movq	(%rcx), %r8
    00000077: 	movq	(%r8), %rsi
    0000007a: 	cmpq	%rsi, (%rdx)
    0000007d: 	cmovlq	%r8, %rdx
    00000081: 	cmovlq	%rcx, %rbx
    00000085: 	cmovlq	%rdi, %rbp
    00000089: 	shlq	$0x4, %rax
    0000008d: 	addq	%r14, %rax
    00000090: 	movq	%rdx, %xmm0
    00000095: 	movhps	0x8(%rbx), %xmm0
    00000099: 	movups	%xmm1, (%rbx)
    0000009c: 	movq	0x8(%rax), %rdi
    000000a0: 	movups	%xmm0, (%rax)
    000000a3: 	testq	%rdi, %rdi
    000000a6: 	je	.Ltmp1227 # Offset: 166
    000000a8: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000af: 	je	.Ltmp1228 # Offset: 175
    000000b5: 	movl	0x8(%rdi), %eax
    000000b8: 	leal	-0x1(%rax), %edx
    000000bb: 	movl	%edx, 0x8(%rdi)
.Ltmp1239:
    000000be: 	cmpl	$0x1, %eax
    000000c1: 	jne	.Ltmp1227 # Offset: 193
    000000c3: 	movq	(%rdi), %rax
    000000c6: 	movq	%rdi, 0x8(%rsp)
    000000cb: 	callq	*0x10(%rax) # Offset: 203
    000000ce: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000d5: 	movq	0x8(%rsp), %rdi
    000000da: 	pxor	%xmm1, %xmm1
    000000de: 	je	.Ltmp1229 # Offset: 222
    000000e4: 	movl	0xc(%rdi), %eax
    000000e7: 	leal	-0x1(%rax), %edx
    000000ea: 	movl	%edx, 0xc(%rdi)
.Ltmp1245:
    000000ed: 	cmpl	$0x1, %eax
    000000f0: 	jne	.Ltmp1227 # Offset: 240
    000000f6: 	movq	(%rdi), %rax
    000000f9: 	callq	*0x18(%rax) # Offset: 249
    000000fc: 	pxor	%xmm1, %xmm1
    00000100: 	cmpq	%r13, %rbp
    00000103: 	jl	.Ltmp1230 # Offset: 259
    00000109: 	nopl	(%rax) # Size: 7
.Ltmp1226:
    00000110: 	testb	$0x1, %r12b
    00000114: 	jne	.Ltmp1231 # Offset: 276
    00000116: 	subq	$0x2, %r12
    0000011a: 	movq	%r12, %rax
    0000011d: 	shrq	$0x3f, %rax
    00000121: 	addq	%r12, %rax
    00000124: 	sarq	%rax
    00000127: 	cmpq	%rbp, %rax
    0000012a: 	je	.Ltmp1232 # Offset: 298
.Ltmp1231:
    00000130: 	movq	0x10(%rsp), %rax
    00000135: 	pxor	%xmm0, %xmm0
    00000139: 	movdqa	%xmm0, %xmm1
    0000013d: 	movdqu	(%rax), %xmm2
    00000141: 	movups	%xmm0, (%rax)
    00000144: 	leaq	-0x1(%rbp), %rax
    00000148: 	movq	%rax, %r13
    0000014b: 	shrq	$0x3f, %r13
    0000014f: 	movaps	%xmm2, 0x10(%rsp)
    00000154: 	movq	%xmm2, %rcx
    00000159: 	addq	%rax, %r13
    0000015c: 	sarq	%r13
    0000015f: 	cmpq	%r15, %rbp
    00000162: 	jg	.Ltmp1233 # Offset: 354
    00000164: 	jmp	.Ltmp1234 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp1236:
    00000170: 	leaq	-0x1(%r13), %rdx
    00000174: 	movq	%r13, %rbp
    00000177: 	movq	%rdx, %rax
    0000017a: 	shrq	$0x3f, %rax
    0000017e: 	addq	%rdx, %rax
    00000181: 	sarq	%rax
    00000184: 	cmpq	%r13, %r15
    00000187: 	jge	.Ltmp1235 # Offset: 391
    0000018d: 	movq	%rax, %r13
.Ltmp1233:
    00000190: 	movq	%r13, %r12
    00000193: 	movq	%rbp, %rbx
    00000196: 	movq	(%rcx), %rsi
    00000199: 	shlq	$0x4, %r12
    0000019d: 	shlq	$0x4, %rbx
    000001a1: 	addq	%r14, %r12
    000001a4: 	addq	%r14, %rbx
    000001a7: 	movq	(%r12), %rax
    000001ab: 	cmpq	%rsi, (%rax)
    000001ae: 	jge	.Ltmp1234 # Offset: 430
    000001b4: 	movq	%rax, %xmm0
    000001b9: 	movhps	0x8(%r12), %xmm0
    000001bf: 	movups	%xmm1, (%r12)
    000001c4: 	movq	0x8(%rbx), %rbp
    000001c8: 	movups	%xmm0, (%rbx)
    000001cb: 	testq	%rbp, %rbp
    000001ce: 	je	.Ltmp1236 # Offset: 462
    000001d0: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001d7: 	je	.Ltmp1237 # Offset: 471
    000001d9: 	movl	0x8(%rbp), %eax
    000001dc: 	leal	-0x1(%rax), %edx
    000001df: 	movl	%edx, 0x8(%rbp)
.Ltmp1240:
    000001e2: 	cmpl	$0x1, %eax
    000001e5: 	jne	.Ltmp1236 # Offset: 485
    000001e7: 	movq	(%rbp), %rax
    000001eb: 	movq	%rcx, 0x8(%rsp)
    000001f0: 	movq	%rbp, %rdi
    000001f3: 	callq	*0x10(%rax) # Offset: 499
    000001f6: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001fd: 	movq	0x8(%rsp), %rcx
    00000202: 	pxor	%xmm1, %xmm1
    00000206: 	je	.Ltmp1238 # Offset: 518
    0000020c: 	movl	0xc(%rbp), %eax
    0000020f: 	leal	-0x1(%rax), %edx
    00000212: 	movl	%edx, 0xc(%rbp)
.Ltmp1244:
    00000215: 	cmpl	$0x1, %eax
    00000218: 	jne	.Ltmp1236 # Offset: 536
    0000021e: 	movq	(%rbp), %rax
    00000222: 	movq	%rcx, 0x8(%rsp)
    00000227: 	movq	%rbp, %rdi
    0000022a: 	callq	*0x18(%rax) # Offset: 554
    0000022d: 	movq	0x8(%rsp), %rcx
    00000232: 	pxor	%xmm1, %xmm1
    00000236: 	jmp	.Ltmp1236 # Offset: 566
    0000023b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1228:
    00000240: 	movl	$0xffffffff, %eax
    00000245: 	lock # Offset: 581
    00000246: 	xaddl	%eax, 0x8(%rdi)
    0000024a: 	jmp	.Ltmp1239 # Offset: 586
    0000024f: 	nop # Size: 1
.Ltmp1237:
    00000250: 	movl	$0xffffffff, %eax
    00000255: 	lock # Offset: 597
    00000256: 	xaddl	%eax, 0x8(%rbp)
    0000025a: 	jmp	.Ltmp1240 # Offset: 602
    0000025c: 	nopl	(%rax) # Size: 4
.Ltmp1235:
    00000260: 	movq	%r12, %rbx
.Ltmp1234:
    00000263: 	movq	0x8(%rbx), %rbp
    00000267: 	movdqa	0x10(%rsp), %xmm3
    0000026d: 	movups	%xmm3, (%rbx)
    00000270: 	testq	%rbp, %rbp
    00000273: 	je	.Ltmp1241 # Offset: 627
    00000275: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000027c: 	je	.Ltmp1242 # Offset: 636
    00000282: 	movl	0x8(%rbp), %eax
    00000285: 	leal	-0x1(%rax), %edx
    00000288: 	movl	%edx, 0x8(%rbp)
.Ltmp1247:
    0000028b: 	cmpl	$0x1, %eax
    0000028e: 	je	.Ltmp1243 # Offset: 654
.Ltmp1241:
    00000290: 	addq	$0x28, %rsp
    00000294: 	popq	%rbx
    00000295: 	popq	%rbp
    00000296: 	popq	%r12
    00000298: 	popq	%r13
    0000029a: 	popq	%r14
    0000029c: 	popq	%r15
    0000029e: 	retq # Offset: 670
    0000029f: 	nop # Size: 1
.Ltmp1238:
    000002a0: 	movl	$0xffffffff, %eax
    000002a5: 	lock # Offset: 677
    000002a6: 	xaddl	%eax, 0xc(%rbp)
    000002aa: 	jmp	.Ltmp1244 # Offset: 682
    000002af: 	nop # Size: 1
.Ltmp1229:
    000002b0: 	movl	$0xffffffff, %eax
    000002b5: 	lock # Offset: 693
    000002b6: 	xaddl	%eax, 0xc(%rdi)
    000002ba: 	jmp	.Ltmp1245 # Offset: 698
    000002bf: 	nop # Size: 1
.Ltmp1243:
    000002c0: 	movq	(%rbp), %rax
    000002c4: 	movq	%rbp, %rdi
    000002c7: 	callq	*0x10(%rax) # Offset: 711
    000002ca: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000002d1: 	je	.Ltmp1246 # Offset: 721
    000002d7: 	movl	0xc(%rbp), %eax
    000002da: 	leal	-0x1(%rax), %edx
    000002dd: 	movl	%edx, 0xc(%rbp)
.Ltmp1248:
    000002e0: 	cmpl	$0x1, %eax
    000002e3: 	jne	.Ltmp1241 # Offset: 739
    000002e5: 	movq	(%rbp), %rax
    000002e9: 	movq	%rbp, %rdi
    000002ec: 	movq	0x18(%rax), %rax
    000002f0: 	addq	$0x28, %rsp
    000002f4: 	popq	%rbx
    000002f5: 	popq	%rbp
    000002f6: 	popq	%r12
    000002f8: 	popq	%r13
    000002fa: 	popq	%r14
    000002fc: 	popq	%r15
    000002fe: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 766
.Ltmp1242:
    00000300: 	movl	$0xffffffff, %eax
    00000305: 	lock # Offset: 773
    00000306: 	xaddl	%eax, 0x8(%rbp)
    0000030a: 	jmp	.Ltmp1247 # Offset: 778
    0000030f: 	nop # Size: 1
.Ltmp1232:
    00000310: 	leaq	0x1(%rbp,%rbp), %rbp
    00000315: 	pxor	%xmm1, %xmm1
    00000319: 	movq	%rbp, %rax
    0000031c: 	shlq	$0x4, %rax
    00000320: 	addq	%r14, %rax
    00000323: 	movdqu	(%rax), %xmm0
    00000327: 	movups	%xmm1, (%rax)
    0000032a: 	movq	0x8(%rbx), %rdi
    0000032e: 	movups	%xmm0, (%rbx)
    00000331: 	movq	%rax, %rbx
    00000334: 	testq	%rdi, %rdi
    00000337: 	je	.Ltmp1231 # Offset: 823
    0000033d: 	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv # Offset: 829
    00000342: 	jmp	.Ltmp1231 # Offset: 834
    00000347: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1224:
    00000350: 	movq	%r15, %rbx
    00000353: 	movq	%r15, %rbp
    00000356: 	shlq	$0x4, %rbx
    0000035a: 	addq	%rdi, %rbx
    0000035d: 	jmp	.Ltmp1226 # Offset: 861
.Ltmp1246:
    00000362: 	movl	$0xffffffff, %eax
    00000367: 	lock # Offset: 871
    00000368: 	xaddl	%eax, 0xc(%rbp)
    0000036c: 	jmp	.Ltmp1248 # Offset: 876
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1(*2)"

Binary Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1(*2)" after disassembly {
  All names   : _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1
                _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/smart_pointers.cpp/1
  Number      : 125
  State       : disassembled
  Address     : 0xd5b0
  Size        : 0x371
  MaxSize     : 0x380
  Offset      : 0xd5b0
  Section     : .text
  Orc Section : .local.text._ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0124:
    00000000: 	leaq	-0x1(%rdx), %rax
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movq	%rax, %rsi
    0000000e: 	movq	%rdi, %r14
    00000011: 	pushq	%r13
    00000013: 	shrq	$0x3f, %rsi
    00000017: 	pushq	%r12
    00000019: 	addq	%rax, %rsi
    0000001c: 	movq	%rdx, %r12
    0000001f: 	pushq	%rbp
    00000020: 	sarq	%rsi
    00000023: 	pushq	%rbx
    00000024: 	subq	$0x28, %rsp
    00000028: 	movq	%rcx, 0x10(%rsp)
    0000002d: 	cmpq	%rsi, %r15
    00000030: 	jge	.Ltmp1249 # Offset: 48
    00000036: 	movq	%rsi, %r13
    00000039: 	movq	%r15, %rax
    0000003c: 	pxor	%xmm1, %xmm1
    00000040: 	jmp	.Ltmp1250 # Offset: 64
    00000042: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1252:
    00000048: 	cmpq	%r13, %rbp
    0000004b: 	jge	.Ltmp1251 # Offset: 75
.Ltmp1255:
    00000051: 	movq	%rbp, %rax
.Ltmp1250:
    00000054: 	leaq	0x1(%rax), %rbx
    00000058: 	leaq	(%rbx,%rbx), %rbp
    0000005c: 	shlq	$0x5, %rbx
    00000060: 	leaq	-0x1(%rbp), %rdi
    00000064: 	addq	%r14, %rbx
    00000067: 	movq	%rdi, %rcx
    0000006a: 	movq	(%rbx), %rdx
    0000006d: 	shlq	$0x4, %rcx
    00000071: 	addq	%r14, %rcx
    00000074: 	movq	(%rcx), %r8
    00000077: 	movq	(%r8), %rsi
    0000007a: 	cmpq	%rsi, (%rdx)
    0000007d: 	cmovlq	%r8, %rdx
    00000081: 	cmovlq	%rcx, %rbx
    00000085: 	cmovlq	%rdi, %rbp
    00000089: 	shlq	$0x4, %rax
    0000008d: 	addq	%r14, %rax
    00000090: 	movq	%rdx, %xmm0
    00000095: 	movhps	0x8(%rbx), %xmm0
    00000099: 	movups	%xmm1, (%rbx)
    0000009c: 	movq	0x8(%rax), %rdi
    000000a0: 	movups	%xmm0, (%rax)
    000000a3: 	testq	%rdi, %rdi
    000000a6: 	je	.Ltmp1252 # Offset: 166
    000000a8: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000af: 	je	.Ltmp1253 # Offset: 175
    000000b5: 	movl	0x8(%rdi), %eax
    000000b8: 	leal	-0x1(%rax), %edx
    000000bb: 	movl	%edx, 0x8(%rdi)
.Ltmp1264:
    000000be: 	cmpl	$0x1, %eax
    000000c1: 	jne	.Ltmp1252 # Offset: 193
    000000c3: 	movq	(%rdi), %rax
    000000c6: 	movq	%rdi, 0x8(%rsp)
    000000cb: 	callq	*0x10(%rax) # Offset: 203
    000000ce: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000000d5: 	movq	0x8(%rsp), %rdi
    000000da: 	pxor	%xmm1, %xmm1
    000000de: 	je	.Ltmp1254 # Offset: 222
    000000e4: 	movl	0xc(%rdi), %eax
    000000e7: 	leal	-0x1(%rax), %edx
    000000ea: 	movl	%edx, 0xc(%rdi)
.Ltmp1270:
    000000ed: 	cmpl	$0x1, %eax
    000000f0: 	jne	.Ltmp1252 # Offset: 240
    000000f6: 	movq	(%rdi), %rax
    000000f9: 	callq	*0x18(%rax) # Offset: 249
    000000fc: 	pxor	%xmm1, %xmm1
    00000100: 	cmpq	%r13, %rbp
    00000103: 	jl	.Ltmp1255 # Offset: 259
    00000109: 	nopl	(%rax) # Size: 7
.Ltmp1251:
    00000110: 	testb	$0x1, %r12b
    00000114: 	jne	.Ltmp1256 # Offset: 276
    00000116: 	subq	$0x2, %r12
    0000011a: 	movq	%r12, %rax
    0000011d: 	shrq	$0x3f, %rax
    00000121: 	addq	%r12, %rax
    00000124: 	sarq	%rax
    00000127: 	cmpq	%rbp, %rax
    0000012a: 	je	.Ltmp1257 # Offset: 298
.Ltmp1256:
    00000130: 	movq	0x10(%rsp), %rax
    00000135: 	pxor	%xmm0, %xmm0
    00000139: 	movdqa	%xmm0, %xmm1
    0000013d: 	movdqu	(%rax), %xmm2
    00000141: 	movups	%xmm0, (%rax)
    00000144: 	leaq	-0x1(%rbp), %rax
    00000148: 	movq	%rax, %r13
    0000014b: 	shrq	$0x3f, %r13
    0000014f: 	movaps	%xmm2, 0x10(%rsp)
    00000154: 	movq	%xmm2, %rcx
    00000159: 	addq	%rax, %r13
    0000015c: 	sarq	%r13
    0000015f: 	cmpq	%r15, %rbp
    00000162: 	jg	.Ltmp1258 # Offset: 354
    00000164: 	jmp	.Ltmp1259 # Offset: 356
    00000169: 	nopl	(%rax) # Size: 7
.Ltmp1261:
    00000170: 	leaq	-0x1(%r13), %rdx
    00000174: 	movq	%r13, %rbp
    00000177: 	movq	%rdx, %rax
    0000017a: 	shrq	$0x3f, %rax
    0000017e: 	addq	%rdx, %rax
    00000181: 	sarq	%rax
    00000184: 	cmpq	%r13, %r15
    00000187: 	jge	.Ltmp1260 # Offset: 391
    0000018d: 	movq	%rax, %r13
.Ltmp1258:
    00000190: 	movq	%r13, %r12
    00000193: 	movq	%rbp, %rbx
    00000196: 	movq	(%rcx), %rsi
    00000199: 	shlq	$0x4, %r12
    0000019d: 	shlq	$0x4, %rbx
    000001a1: 	addq	%r14, %r12
    000001a4: 	addq	%r14, %rbx
    000001a7: 	movq	(%r12), %rax
    000001ab: 	cmpq	%rsi, (%rax)
    000001ae: 	jge	.Ltmp1259 # Offset: 430
    000001b4: 	movq	%rax, %xmm0
    000001b9: 	movhps	0x8(%r12), %xmm0
    000001bf: 	movups	%xmm1, (%r12)
    000001c4: 	movq	0x8(%rbx), %rbp
    000001c8: 	movups	%xmm0, (%rbx)
    000001cb: 	testq	%rbp, %rbp
    000001ce: 	je	.Ltmp1261 # Offset: 462
    000001d0: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001d7: 	je	.Ltmp1262 # Offset: 471
    000001d9: 	movl	0x8(%rbp), %eax
    000001dc: 	leal	-0x1(%rax), %edx
    000001df: 	movl	%edx, 0x8(%rbp)
.Ltmp1265:
    000001e2: 	cmpl	$0x1, %eax
    000001e5: 	jne	.Ltmp1261 # Offset: 485
    000001e7: 	movq	(%rbp), %rax
    000001eb: 	movq	%rcx, 0x8(%rsp)
    000001f0: 	movq	%rbp, %rdi
    000001f3: 	callq	*0x10(%rax) # Offset: 499
    000001f6: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000001fd: 	movq	0x8(%rsp), %rcx
    00000202: 	pxor	%xmm1, %xmm1
    00000206: 	je	.Ltmp1263 # Offset: 518
    0000020c: 	movl	0xc(%rbp), %eax
    0000020f: 	leal	-0x1(%rax), %edx
    00000212: 	movl	%edx, 0xc(%rbp)
.Ltmp1269:
    00000215: 	cmpl	$0x1, %eax
    00000218: 	jne	.Ltmp1261 # Offset: 536
    0000021e: 	movq	(%rbp), %rax
    00000222: 	movq	%rcx, 0x8(%rsp)
    00000227: 	movq	%rbp, %rdi
    0000022a: 	callq	*0x18(%rax) # Offset: 554
    0000022d: 	movq	0x8(%rsp), %rcx
    00000232: 	pxor	%xmm1, %xmm1
    00000236: 	jmp	.Ltmp1261 # Offset: 566
    0000023b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1253:
    00000240: 	movl	$0xffffffff, %eax
    00000245: 	lock # Offset: 581
    00000246: 	xaddl	%eax, 0x8(%rdi)
    0000024a: 	jmp	.Ltmp1264 # Offset: 586
    0000024f: 	nop # Size: 1
.Ltmp1262:
    00000250: 	movl	$0xffffffff, %eax
    00000255: 	lock # Offset: 597
    00000256: 	xaddl	%eax, 0x8(%rbp)
    0000025a: 	jmp	.Ltmp1265 # Offset: 602
    0000025c: 	nopl	(%rax) # Size: 4
.Ltmp1260:
    00000260: 	movq	%r12, %rbx
.Ltmp1259:
    00000263: 	movq	0x8(%rbx), %rbp
    00000267: 	movdqa	0x10(%rsp), %xmm3
    0000026d: 	movups	%xmm3, (%rbx)
    00000270: 	testq	%rbp, %rbp
    00000273: 	je	.Ltmp1266 # Offset: 627
    00000275: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000027c: 	je	.Ltmp1267 # Offset: 636
    00000282: 	movl	0x8(%rbp), %eax
    00000285: 	leal	-0x1(%rax), %edx
    00000288: 	movl	%edx, 0x8(%rbp)
.Ltmp1272:
    0000028b: 	cmpl	$0x1, %eax
    0000028e: 	je	.Ltmp1268 # Offset: 654
.Ltmp1266:
    00000290: 	addq	$0x28, %rsp
    00000294: 	popq	%rbx
    00000295: 	popq	%rbp
    00000296: 	popq	%r12
    00000298: 	popq	%r13
    0000029a: 	popq	%r14
    0000029c: 	popq	%r15
    0000029e: 	retq # Offset: 670
    0000029f: 	nop # Size: 1
.Ltmp1263:
    000002a0: 	movl	$0xffffffff, %eax
    000002a5: 	lock # Offset: 677
    000002a6: 	xaddl	%eax, 0xc(%rbp)
    000002aa: 	jmp	.Ltmp1269 # Offset: 682
    000002af: 	nop # Size: 1
.Ltmp1254:
    000002b0: 	movl	$0xffffffff, %eax
    000002b5: 	lock # Offset: 693
    000002b6: 	xaddl	%eax, 0xc(%rdi)
    000002ba: 	jmp	.Ltmp1270 # Offset: 698
    000002bf: 	nop # Size: 1
.Ltmp1268:
    000002c0: 	movq	(%rbp), %rax
    000002c4: 	movq	%rbp, %rdi
    000002c7: 	callq	*0x10(%rax) # Offset: 711
    000002ca: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000002d1: 	je	.Ltmp1271 # Offset: 721
    000002d7: 	movl	0xc(%rbp), %eax
    000002da: 	leal	-0x1(%rax), %edx
    000002dd: 	movl	%edx, 0xc(%rbp)
.Ltmp1273:
    000002e0: 	cmpl	$0x1, %eax
    000002e3: 	jne	.Ltmp1266 # Offset: 739
    000002e5: 	movq	(%rbp), %rax
    000002e9: 	movq	%rbp, %rdi
    000002ec: 	movq	0x18(%rax), %rax
    000002f0: 	addq	$0x28, %rsp
    000002f4: 	popq	%rbx
    000002f5: 	popq	%rbp
    000002f6: 	popq	%r12
    000002f8: 	popq	%r13
    000002fa: 	popq	%r14
    000002fc: 	popq	%r15
    000002fe: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 766
.Ltmp1267:
    00000300: 	movl	$0xffffffff, %eax
    00000305: 	lock # Offset: 773
    00000306: 	xaddl	%eax, 0x8(%rbp)
    0000030a: 	jmp	.Ltmp1272 # Offset: 778
    0000030f: 	nop # Size: 1
.Ltmp1257:
    00000310: 	leaq	0x1(%rbp,%rbp), %rbp
    00000315: 	pxor	%xmm1, %xmm1
    00000319: 	movq	%rbp, %rax
    0000031c: 	shlq	$0x4, %rax
    00000320: 	addq	%r14, %rax
    00000323: 	movdqu	(%rax), %xmm0
    00000327: 	movups	%xmm1, (%rax)
    0000032a: 	movq	0x8(%rbx), %rdi
    0000032e: 	movups	%xmm0, (%rbx)
    00000331: 	movq	%rax, %rbx
    00000334: 	testq	%rdi, %rdi
    00000337: 	je	.Ltmp1256 # Offset: 823
    0000033d: 	callq	_ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv # Offset: 829
    00000342: 	jmp	.Ltmp1256 # Offset: 834
    00000347: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1249:
    00000350: 	movq	%r15, %rbx
    00000353: 	movq	%r15, %rbp
    00000356: 	shlq	$0x4, %rbx
    0000035a: 	addq	%rdi, %rbx
    0000035d: 	jmp	.Ltmp1251 # Offset: 861
.Ltmp1271:
    00000362: 	movl	$0xffffffff, %eax
    00000367: 	lock # Offset: 871
    00000368: 	xaddl	%eax, 0xc(%rbp)
    0000036c: 	jmp	.Ltmp1273 # Offset: 876
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1(*2)"

Binary Function "_ZNSt6vectorIP17VariableContainerIlLi13EESaIS2_EE17_M_default_appendEm" after disassembly {
  Number      : 126
  State       : disassembled
  Address     : 0xd930
  Size        : 0x1da
  MaxSize     : 0x1e0
  Offset      : 0xd930
  Section     : .text
  Orc Section : .local.text._ZNSt6vectorIP17VariableContainerIlLi13EESaIS2_EE17_M_default_appendEm
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0125:
    00000000: 	endbr64
    00000004: 	testq	%rsi, %rsi
    00000007: 	je	.Ltmp1274 # Offset: 7
    0000000d: 	movabsq	$0xfffffffffffffff, %rax
    00000017: 	pushq	%r15
    00000019: 	pushq	%r14
    0000001b: 	pushq	%r13
    0000001d: 	pushq	%r12
    0000001f: 	movq	%rdi, %r12
    00000022: 	pushq	%rbp
    00000023: 	pushq	%rbx
    00000024: 	movq	%rsi, %rbx
    00000027: 	subq	$0x18, %rsp
    0000002b: 	movq	0x8(%rdi), %rdx
    0000002f: 	movq	(%rdi), %r8
    00000032: 	movq	%rdx, %rbp
    00000035: 	subq	%r8, %rbp
    00000038: 	movq	%rbp, %r13
    0000003b: 	sarq	$0x3, %r13
    0000003f: 	subq	%r13, %rax
    00000042: 	movq	%rax, %rcx
    00000045: 	movq	0x10(%rdi), %rax
    00000049: 	subq	%rdx, %rax
    0000004c: 	sarq	$0x3, %rax
    00000050: 	cmpq	%rax, %rsi
    00000053: 	jbe	.Ltmp1275 # Offset: 83
    00000059: 	cmpq	%rsi, %rcx
    0000005c: 	jb	.Ltmp1276 # Offset: 92
    00000062: 	cmpq	%r13, %rsi
    00000065: 	movq	%r13, %rax
    00000068: 	cmovaeq	%rsi, %rax
    0000006c: 	addq	%r13, %rax
    0000006f: 	jb	.Ltmp1277 # Offset: 111
    00000075: 	testq	%rax, %rax
    00000078: 	jne	.Ltmp1278 # Offset: 120
    0000007e: 	movq	%rbp, %r9
    00000081: 	xorl	%r14d, %r14d
    00000084: 	xorl	%r15d, %r15d
.Ltmp1285:
    00000087: 	addq	%r15, %rbp
    0000008a: 	movq	%rbx, %rdx
    0000008d: 	movq	$0x0, (%rbp)
    00000095: 	subq	$0x1, %rdx
    00000099: 	je	.Ltmp1279 # Offset: 153
    0000009b: 	leaq	0x8(%rbp), %rdi
    0000009f: 	shlq	$0x3, %rdx
    000000a3: 	xorl	%esi, %esi
    000000a5: 	movq	%r9, 0x8(%rsp)
    000000aa: 	movq	%r8, (%rsp)
    000000ae: 	callq	memset@PLT # Offset: 174
    000000b3: 	movq	(%rsp), %r8
    000000b7: 	movq	0x8(%rsp), %r9
.Ltmp1279:
    000000bc: 	testq	%r9, %r9
    000000bf: 	jg	.Ltmp1280 # Offset: 191
    000000c5: 	testq	%r8, %r8
    000000c8: 	jne	.Ltmp1281 # Offset: 200
.Ltmp1283:
    000000ce: 	addq	%r13, %rbx
    000000d1: 	movq	%r15, %xmm0
    000000d6: 	movq	%r14, 0x10(%r12)
    000000db: 	leaq	(%r15,%rbx,8), %rax
    000000df: 	movq	%rax, %xmm1
    000000e4: 	punpcklqdq	%xmm1, %xmm0
    000000e8: 	movups	%xmm0, (%r12)
    000000ed: 	addq	$0x18, %rsp
    000000f1: 	popq	%rbx
    000000f2: 	popq	%rbp
    000000f3: 	popq	%r12
    000000f5: 	popq	%r13
    000000f7: 	popq	%r14
    000000f9: 	popq	%r15
    000000fb: 	retq # Offset: 251
    000000fc: 	nopl	(%rax) # Size: 4
.Ltmp1275:
    00000100: 	movq	$0x0, (%rdx)
    00000107: 	leaq	0x8(%rdx), %rcx
    0000010b: 	subq	$0x1, %rbx
    0000010f: 	je	.Ltmp1282 # Offset: 271
    00000111: 	leaq	(%rcx,%rbx,8), %rax
    00000115: 	movq	%rcx, %rdi
    00000118: 	xorl	%esi, %esi
    0000011a: 	subq	%rdx, %rax
    0000011d: 	leaq	-0x8(%rax), %rbx
    00000121: 	movq	%rbx, %rdx
    00000124: 	callq	memset@PLT # Offset: 292
    00000129: 	movq	%rax, %rcx
    0000012c: 	addq	%rbx, %rcx
.Ltmp1282:
    0000012f: 	movq	%rcx, 0x8(%r12)
    00000134: 	addq	$0x18, %rsp
    00000138: 	popq	%rbx
    00000139: 	popq	%rbp
    0000013a: 	popq	%r12
    0000013c: 	popq	%r13
    0000013e: 	popq	%r14
    00000140: 	popq	%r15
    00000142: 	retq # Offset: 322
    00000143: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1274:
    00000148: 	retq # Offset: 328
    00000149: 	nopl	(%rax) # Size: 7
.Ltmp1280:
    00000150: 	movq	%r8, %rsi
    00000153: 	movq	%r9, %rdx
    00000156: 	movq	%r15, %rdi
    00000159: 	movq	%r8, (%rsp)
    0000015d: 	callq	memmove@PLT # Offset: 349
    00000162: 	movq	0x10(%r12), %rsi
    00000167: 	movq	(%rsp), %r8
    0000016b: 	subq	%r8, %rsi
.Ltmp1284:
    0000016e: 	movq	%r8, %rdi
    00000171: 	callq	_ZdlPvm@PLT # Offset: 369
    00000176: 	jmp	.Ltmp1283 # Offset: 374
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1281:
    00000180: 	movq	0x10(%r12), %rsi
    00000185: 	subq	%r8, %rsi
    00000188: 	jmp	.Ltmp1284 # Offset: 392
.Ltmp1278:
    0000018a: 	movabsq	$0xfffffffffffffff, %rdx
    00000194: 	cmpq	%rdx, %rax
    00000197: 	cmovaq	%rdx, %rax
    0000019b: 	leaq	(,%rax,8), %r14
.Ltmp1286:
    000001a3: 	movq	%r14, %rdi
    000001a6: 	callq	_Znwm@PLT # Offset: 422
    000001ab: 	movq	(%r12), %r8
    000001af: 	movq	0x8(%r12), %r9
    000001b4: 	movq	%rax, %r15
    000001b7: 	addq	%rax, %r14
    000001ba: 	subq	%r8, %r9
    000001bd: 	jmp	.Ltmp1285 # Offset: 445
.Ltmp1277:
    000001c2: 	movabsq	$0x7ffffffffffffff8, %r14
    000001cc: 	jmp	.Ltmp1286 # Offset: 460
.Ltmp1276:
    000001ce: 	leaq	DATAat0x17138(%rip), %rdi
    000001d5: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 469
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt6vectorIP17VariableContainerIlLi13EESaIS2_EE17_M_default_appendEm"

Binary Function "_Z11CreateArrayI17VariableContainerIlLi13EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 127
  State       : disassembled
  Address     : 0xdb10
  Size        : 0x235
  MaxSize     : 0x240
  Offset      : 0xdb10
  Section     : .text
  Orc Section : .local.text._Z11CreateArrayI17VariableContainerIlLi13EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0126:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	movslq	%esi, %r15
    0000000d: 	pushq	%r14
    0000000f: 	movq	%rcx, %r14
    00000012: 	pushq	%r13
    00000014: 	pushq	%r12
    00000016: 	movq	%rdi, %r12
    00000019: 	pushq	%rbp
    0000001a: 	pushq	%rbx
    0000001b: 	subq	$0x48, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x38(%rsp)
    0000002d: 	xorl	%eax, %eax
    0000002f: 	movq	$0x0, 0x10(%rdi)
    00000037: 	movups	%xmm0, (%rdi)
    0000003a: 	testq	%r15, %r15
    0000003d: 	jne	.Ltmp1287 # Offset: 61
    00000043: 	callq	clock@PLT # Offset: 67
    00000048: 	movq	%rax, start_time(%rip)
.Ltmp1296:
    0000004f: 	callq	clock@PLT # Offset: 79
    00000054: 	movq	(%r14), %r13
    00000057: 	pxor	%xmm0, %xmm0
    0000005b: 	movq	0x8(%r14), %r14
    0000005f: 	movq	%rax, end_time(%rip)
    00000066: 	subq	start_time(%rip), %rax
    0000006d: 	leaq	0x20(%rsp), %rbx
    00000072: 	cvtsi2sd	%rax, %xmm0
    00000077: 	movq	%r13, %rax
    0000007a: 	divsd	DATAat0x17370(%rip), %xmm0
    00000082: 	movq	%rbx, 0x10(%rsp)
    00000087: 	addq	%r14, %rax
    0000008a: 	movq	%xmm0, %rbp
    0000008f: 	je	.Ltmp1288 # Offset: 143
    00000091: 	testq	%r13, %r13
    00000094: 	je	.Ltmp1289 # Offset: 148
.Ltmp1288:
    0000009a: 	movq	%r14, 0x8(%rsp)
    0000009f: 	cmpq	$0xf, %r14
    000000a3: 	ja	.Ltmp1290 # Offset: 163
    000000a9: 	cmpq	$0x1, %r14
    000000ad: 	jne	.Ltmp1291 # Offset: 173
    000000af: 	movzbl	(%r13), %eax
    000000b4: 	movb	%al, 0x20(%rsp)
    000000b8: 	movq	%rbx, %rax
.Ltmp1295:
    000000bb: 	movq	%r14, 0x18(%rsp)
    000000c0: 	movq	%r15, %rdi
    000000c3: 	movq	%rbp, %xmm0
    000000c8: 	movb	$0x0, (%rax,%r14)
    000000cd: 	movq	0x18(%rsp), %rdx
    000000d2: 	movq	0x10(%rsp), %rsi
    000000d7: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 215
    000000dc: 	movq	0x10(%rsp), %rdi
    000000e1: 	cmpq	%rbx, %rdi
    000000e4: 	je	.Ltmp1292 # Offset: 228
    000000e6: 	movq	0x20(%rsp), %rax
    000000eb: 	leaq	0x1(%rax), %rsi
    000000ef: 	callq	_ZdlPvm@PLT # Offset: 239
.Ltmp1292:
    000000f4: 	movq	0x38(%rsp), %rax
    000000f9: 	subq	%fs:0x28, %rax
    00000102: 	jne	.Ltmp1293 # Offset: 258
    00000108: 	addq	$0x48, %rsp
    0000010c: 	movq	%r12, %rax
    0000010f: 	popq	%rbx
    00000110: 	popq	%rbp
    00000111: 	popq	%r12
    00000113: 	popq	%r13
    00000115: 	popq	%r14
    00000117: 	popq	%r15
    00000119: 	retq # Offset: 281
.Ltmp1291:
    0000011a: 	testq	%r14, %r14
    0000011d: 	jne	.Ltmp1294 # Offset: 285
    00000123: 	movq	%rbx, %rax
    00000126: 	jmp	.Ltmp1295 # Offset: 294
.Ltmp1287:
    00000128: 	movq	%r15, %rsi
    0000012b: 	movslq	%edx, %rbp
    0000012e: 	callq	_ZNSt6vectorIP17VariableContainerIlLi13EESaIS2_EE17_M_default_appendEm # Offset: 302
    00000133: 	callq	clock@PLT # Offset: 307
    00000138: 	movq	%rax, start_time(%rip)
    0000013f: 	testl	%r15d, %r15d
    00000142: 	jle	.Ltmp1296 # Offset: 322
    00000148: 	leaq	(,%r15,8), %r13
    00000150: 	xorl	%ebx, %ebx
    00000152: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1297:
    00000158: 	movl	$0x68, %edi
    0000015d: 	callq	_Znwm@PLT # Offset: 349
    00000162: 	movq	(%r12), %rdx
    00000166: 	movq	%rbp, %xmm0
    0000016b: 	movq	%rbp, 0x60(%rax)
    0000016f: 	punpcklqdq	%xmm0, %xmm0
    00000173: 	movups	%xmm0, (%rax)
    00000176: 	movups	%xmm0, 0x10(%rax)
    0000017a: 	movups	%xmm0, 0x20(%rax)
    0000017e: 	movups	%xmm0, 0x30(%rax)
    00000182: 	movups	%xmm0, 0x40(%rax)
    00000186: 	movups	%xmm0, 0x50(%rax)
    0000018a: 	movq	%rax, (%rdx,%rbx)
    0000018e: 	addq	$0x8, %rbx
    00000192: 	cmpq	%r13, %rbx
    00000195: 	jne	.Ltmp1297 # Offset: 405
    00000197: 	jmp	.Ltmp1296 # Offset: 407
.Ltmp1290:
    0000019c: 	leaq	0x8(%rsp), %rsi
    000001a1: 	leaq	0x10(%rsp), %rdi
    000001a6: 	xorl	%edx, %edx
    000001a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 424
    000001ad: 	movq	%rax, 0x10(%rsp)
    000001b2: 	movq	%rax, %rdi
    000001b5: 	movq	0x8(%rsp), %rax
    000001ba: 	movq	%rax, 0x20(%rsp)
.Ltmp1298:
    000001bf: 	movq	%r14, %rdx
    000001c2: 	movq	%r13, %rsi
    000001c5: 	callq	memcpy@PLT # Offset: 453
    000001ca: 	movq	0x8(%rsp), %r14
    000001cf: 	movq	0x10(%rsp), %rax
    000001d4: 	jmp	.Ltmp1295 # Offset: 468
.Ltmp1293:
    000001d9: 	callq	__stack_chk_fail@PLT # Offset: 473
.Ltmp1294:
    000001de: 	movq	%rbx, %rdi
    000001e1: 	jmp	.Ltmp1298 # Offset: 481
.Ltmp1289:
    000001e3: 	leaq	DATAat0x17008(%rip), %rdi
    000001ea: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 490
    000001ef: 	endbr64
    000001f3: 	movq	%rax, %rbp
    000001f6: 	jmp	.Ltmp1299 # Offset: 502
    000001f8: 	endbr64
    000001fc: 	movq	%rax, %rbp
    000001ff: 	movq	0x10(%rsp), %rdi
    00000204: 	cmpq	%rbx, %rdi
    00000207: 	je	.Ltmp1299 # Offset: 519
    00000209: 	movq	0x20(%rsp), %rax
    0000020e: 	leaq	0x1(%rax), %rsi
    00000212: 	callq	_ZdlPvm@PLT # Offset: 530
.Ltmp1299:
    00000217: 	movq	(%r12), %rdi
    0000021b: 	movq	0x10(%r12), %rsi
    00000220: 	subq	%rdi, %rsi
    00000223: 	testq	%rdi, %rdi
    00000226: 	je	.Ltmp1300 # Offset: 550
    00000228: 	callq	_ZdlPvm@PLT # Offset: 552
.Ltmp1300:
    0000022d: 	movq	%rbp, %rdi
    00000230: 	callq	_Unwind_Resume@PLT # Offset: 560
DWARF CFI Instructions:
    <empty>
End of Function "_Z11CreateArrayI17VariableContainerIlLi13EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z9CopyArrayIP17VariableContainerIlLi13EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 128
  State       : disassembled
  Address     : 0xdd50
  Size        : 0x264
  MaxSize     : 0x270
  Offset      : 0xdd50
  Section     : .text
  Orc Section : .local.text._Z9CopyArrayIP17VariableContainerIlLi13EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0127:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pxor	%xmm0, %xmm0
    0000000a: 	pushq	%r14
    0000000c: 	pushq	%r13
    0000000e: 	movq	%rsi, %r13
    00000011: 	pushq	%r12
    00000013: 	movq	%rdi, %r12
    00000016: 	pushq	%rbp
    00000017: 	pushq	%rbx
    00000018: 	movq	%rdx, %rbx
    0000001b: 	subq	$0x58, %rsp
    0000001f: 	movq	%fs:0x28, %rax
    00000028: 	movq	%rax, 0x48(%rsp)
    0000002d: 	movq	0x8(%rsi), %rax
    00000031: 	subq	(%rsi), %rax
    00000034: 	movq	$0x0, 0x10(%rdi)
    0000003c: 	movq	%rax, %rbp
    0000003f: 	movups	%xmm0, (%rdi)
    00000042: 	sarq	$0x3, %rbp
    00000046: 	testq	%rax, %rax
    00000049: 	jne	.Ltmp1301 # Offset: 73
.Ltmp1313:
    0000004f: 	callq	clock@PLT # Offset: 79
    00000054: 	movq	%rax, start_time(%rip)
    0000005b: 	testq	%rbp, %rbp
    0000005e: 	je	.Ltmp1302 # Offset: 94
    00000060: 	movq	(%r13), %rcx
    00000064: 	movq	(%r12), %rdx
    00000068: 	leaq	0x8(%rcx), %rax
    0000006c: 	cmpq	%rax, %rdx
    0000006f: 	je	.Ltmp1303 # Offset: 111
    00000075: 	leaq	-0x1(%rbp), %rax
    00000079: 	cmpq	$0x2, %rax
    0000007d: 	jbe	.Ltmp1303 # Offset: 125
    00000083: 	movq	%rbp, %rsi
    00000086: 	xorl	%eax, %eax
    00000088: 	shrq	%rsi
    0000008b: 	shlq	$0x4, %rsi
    0000008f: 	nop # Size: 1
.Ltmp1304:
    00000090: 	movdqu	(%rcx,%rax), %xmm1
    00000095: 	movups	%xmm1, (%rdx,%rax)
    00000099: 	addq	$0x10, %rax
    0000009d: 	cmpq	%rax, %rsi
    000000a0: 	jne	.Ltmp1304 # Offset: 160
    000000a2: 	movq	%rbp, %rax
    000000a5: 	andq	$-0x2, %rax
    000000a9: 	testb	$0x1, %bpl
    000000ad: 	je	.Ltmp1302 # Offset: 173
    000000af: 	movq	(%rcx,%rax,8), %rcx
    000000b3: 	movq	%rcx, (%rdx,%rax,8)
.Ltmp1302:
    000000b7: 	callq	clock@PLT # Offset: 183
    000000bc: 	movq	(%rbx), %r14
    000000bf: 	movq	0x8(%rbx), %r15
    000000c3: 	pxor	%xmm0, %xmm0
    000000c7: 	movq	%rax, end_time(%rip)
    000000ce: 	subq	start_time(%rip), %rax
    000000d5: 	leaq	0x30(%rsp), %r13
    000000da: 	cvtsi2sd	%rax, %xmm0
    000000df: 	movq	%r14, %rax
    000000e2: 	divsd	DATAat0x17370(%rip), %xmm0
    000000ea: 	movq	%r13, 0x20(%rsp)
    000000ef: 	addq	%r15, %rax
    000000f2: 	movsd	%xmm0, 0x8(%rsp)
    000000f8: 	je	.Ltmp1305 # Offset: 248
    000000fa: 	testq	%r14, %r14
    000000fd: 	je	.Ltmp1306 # Offset: 253
.Ltmp1305:
    00000103: 	movq	%r15, 0x18(%rsp)
    00000108: 	cmpq	$0xf, %r15
    0000010c: 	ja	.Ltmp1307 # Offset: 268
    00000112: 	cmpq	$0x1, %r15
    00000116: 	jne	.Ltmp1308 # Offset: 278
    00000118: 	movzbl	(%r14), %eax
    0000011c: 	movb	%al, 0x30(%rsp)
    00000120: 	movq	%r13, %rax
.Ltmp1312:
    00000123: 	movq	%r15, 0x28(%rsp)
    00000128: 	movsd	0x8(%rsp), %xmm0
    0000012e: 	movq	%rbp, %rdi
    00000131: 	movb	$0x0, (%rax,%r15)
    00000136: 	movq	0x28(%rsp), %rdx
    0000013b: 	movq	0x20(%rsp), %rsi
    00000140: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 320
    00000145: 	movq	0x20(%rsp), %rdi
    0000014a: 	cmpq	%r13, %rdi
    0000014d: 	je	.Ltmp1309 # Offset: 333
    0000014f: 	movq	0x30(%rsp), %rax
    00000154: 	leaq	0x1(%rax), %rsi
    00000158: 	callq	_ZdlPvm@PLT # Offset: 344
.Ltmp1309:
    0000015d: 	movq	0x48(%rsp), %rax
    00000162: 	subq	%fs:0x28, %rax
    0000016b: 	jne	.Ltmp1310 # Offset: 363
    00000171: 	addq	$0x58, %rsp
    00000175: 	movq	%r12, %rax
    00000178: 	popq	%rbx
    00000179: 	popq	%rbp
    0000017a: 	popq	%r12
    0000017c: 	popq	%r13
    0000017e: 	popq	%r14
    00000180: 	popq	%r15
    00000182: 	retq # Offset: 386
    00000183: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1308:
    00000188: 	testq	%r15, %r15
    0000018b: 	jne	.Ltmp1311 # Offset: 395
    0000018d: 	movq	%r13, %rax
    00000190: 	jmp	.Ltmp1312 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1307:
    00000198: 	leaq	0x18(%rsp), %rsi
    0000019d: 	leaq	0x20(%rsp), %rdi
    000001a2: 	xorl	%edx, %edx
    000001a4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 420
    000001a9: 	movq	%rax, 0x20(%rsp)
    000001ae: 	movq	%rax, %rdi
    000001b1: 	movq	0x18(%rsp), %rax
    000001b6: 	movq	%rax, 0x30(%rsp)
.Ltmp1315:
    000001bb: 	movq	%r15, %rdx
    000001be: 	movq	%r14, %rsi
    000001c1: 	callq	memcpy@PLT # Offset: 449
    000001c6: 	movq	0x18(%rsp), %r15
    000001cb: 	movq	0x20(%rsp), %rax
    000001d0: 	jmp	.Ltmp1312 # Offset: 464
    000001d5: 	nopl	(%rax) # Size: 3
.Ltmp1301:
    000001d8: 	movq	%rbp, %rsi
    000001db: 	callq	_ZNSt6vectorIP17VariableContainerIlLi13EESaIS2_EE17_M_default_appendEm # Offset: 475
    000001e0: 	jmp	.Ltmp1313 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp1303:
    000001e8: 	xorl	%eax, %eax
    000001ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1314:
    000001f0: 	movq	(%rcx,%rax,8), %rsi
    000001f4: 	movq	%rsi, (%rdx,%rax,8)
    000001f8: 	addq	$0x1, %rax
    000001fc: 	cmpq	%rax, %rbp
    000001ff: 	jne	.Ltmp1314 # Offset: 511
    00000201: 	jmp	.Ltmp1302 # Offset: 513
.Ltmp1311:
    00000206: 	movq	%r13, %rdi
    00000209: 	jmp	.Ltmp1315 # Offset: 521
.Ltmp1306:
    0000020b: 	leaq	DATAat0x17008(%rip), %rdi
    00000212: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 530
.Ltmp1310:
    00000217: 	callq	__stack_chk_fail@PLT # Offset: 535
    0000021c: 	endbr64
    00000220: 	movq	%rax, %rbp
    00000223: 	jmp	.Ltmp1316 # Offset: 547
    00000225: 	endbr64
    00000229: 	movq	%rax, %rbp
    0000022c: 	jmp	.Ltmp1317 # Offset: 556
.Ltmp1316:
    0000022e: 	movq	0x20(%rsp), %rdi
    00000233: 	cmpq	%r13, %rdi
    00000236: 	je	.Ltmp1317 # Offset: 566
    00000238: 	movq	0x30(%rsp), %rax
    0000023d: 	leaq	0x1(%rax), %rsi
    00000241: 	callq	_ZdlPvm@PLT # Offset: 577
.Ltmp1317:
    00000246: 	movq	(%r12), %rdi
    0000024a: 	movq	0x10(%r12), %rsi
    0000024f: 	subq	%rdi, %rsi
    00000252: 	testq	%rdi, %rdi
    00000255: 	je	.Ltmp1318 # Offset: 597
    00000257: 	callq	_ZdlPvm@PLT # Offset: 599
.Ltmp1318:
    0000025c: 	movq	%rbp, %rdi
    0000025f: 	callq	_Unwind_Resume@PLT # Offset: 607
DWARF CFI Instructions:
    <empty>
End of Function "_Z9CopyArrayIP17VariableContainerIlLi13EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_" after disassembly {
  Number      : 129
  State       : disassembled
  Address     : 0xdfc0
  Size        : 0x1d8
  MaxSize     : 0x1e0
  Offset      : 0xdfc0
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0128:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	subq	%rdi, %rax
    0000000a: 	cmpq	$0x80, %rax
    00000010: 	jle	.Ltmp1319 # Offset: 16
    00000016: 	pushq	%r13
    00000018: 	movq	%rdx, %r13
    0000001b: 	pushq	%r12
    0000001d: 	movq	%rdi, %r12
    00000020: 	pushq	%rbp
    00000021: 	pushq	%rbx
    00000022: 	movq	%rsi, %rbx
    00000025: 	subq	$0x8, %rsp
    00000029: 	testq	%rdx, %rdx
    0000002c: 	je	.Ltmp1320 # Offset: 44
    00000032: 	movq	%rsi, %r8
    00000035: 	leaq	0x8(%r12), %rbp
.Ltmp1332:
    0000003a: 	movq	%r8, %rax
    0000003d: 	movdqu	(%r12), %xmm0
    00000043: 	movq	-0x8(%r8), %r10
    00000047: 	subq	$0x1, %r13
    0000004b: 	subq	%r12, %rax
    0000004e: 	movq	%rax, %rdx
    00000051: 	shrq	$0x3f, %rax
    00000055: 	movdqa	%xmm0, %xmm1
    00000059: 	movq	(%r10), %rsi
    0000005c: 	sarq	$0x3, %rdx
    00000060: 	shufpd	$0x1, %xmm0, %xmm1
    00000065: 	addq	%rdx, %rax
    00000068: 	movq	%xmm0, %rdx
    0000006d: 	sarq	%rax
    00000070: 	leaq	(%r12,%rax,8), %rdi
    00000074: 	movq	0x8(%r12), %rax
    00000079: 	movq	(%rdi), %r9
    0000007c: 	movq	(%rax), %rcx
    0000007f: 	movq	(%r9), %rax
    00000082: 	cmpq	%rax, %rcx
    00000085: 	jge	.Ltmp1321 # Offset: 133
    00000087: 	cmpq	%rsi, %rax
    0000008a: 	jl	.Ltmp1322 # Offset: 138
    00000090: 	cmpq	%rsi, %rcx
    00000093: 	jl	.Ltmp1323 # Offset: 147
.Ltmp1329:
    00000095: 	movups	%xmm1, (%r12)
    0000009a: 	movq	-0x8(%r8), %rsi
.Ltmp1330:
    0000009e: 	movq	%r8, %rax
    000000a1: 	movq	%rbp, %rbx
    000000a4: 	jmp	.Ltmp1324 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1325:
    000000b0: 	movq	0x8(%rbx), %rdx
    000000b4: 	addq	$0x8, %rbx
.Ltmp1324:
    000000b8: 	cmpq	%rcx, (%rdx)
    000000bb: 	jl	.Ltmp1325 # Offset: 187
    000000bd: 	subq	$0x8, %rax
    000000c1: 	cmpq	%rcx, (%rsi)
    000000c4: 	jle	.Ltmp1326 # Offset: 196
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1327:
    000000d0: 	movq	-0x8(%rax), %rsi
    000000d4: 	subq	$0x8, %rax
    000000d8: 	cmpq	%rcx, (%rsi)
    000000db: 	jg	.Ltmp1327 # Offset: 219
.Ltmp1326:
    000000dd: 	cmpq	%rbx, %rax
    000000e0: 	jbe	.Ltmp1328 # Offset: 224
    000000e2: 	movq	%rsi, (%rbx)
    000000e5: 	addq	$0x8, %rbx
    000000e9: 	movq	-0x8(%rax), %rsi
    000000ed: 	movq	%rdx, (%rax)
    000000f0: 	movq	(%r12), %rcx
    000000f4: 	movq	(%rbx), %rdx
    000000f7: 	movq	(%rcx), %rcx
    000000fa: 	jmp	.Ltmp1324 # Offset: 250
.Ltmp1321:
    000000fc: 	cmpq	%rsi, %rcx
    000000ff: 	jl	.Ltmp1329 # Offset: 255
    00000101: 	cmpq	%rsi, %rax
    00000104: 	jge	.Ltmp1322 # Offset: 260
.Ltmp1323:
    00000106: 	movq	%r10, (%r12)
    0000010a: 	movq	%rdx, %rsi
    0000010d: 	movq	%rdx, -0x8(%r8)
    00000111: 	movq	(%r12), %rax
    00000115: 	movq	0x8(%r12), %rdx
    0000011a: 	movq	(%rax), %rcx
    0000011d: 	jmp	.Ltmp1330 # Offset: 285
    00000122: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1328:
    00000128: 	movq	%r13, %rdx
    0000012b: 	movq	%r8, %rsi
    0000012e: 	movq	%rbx, %rdi
    00000131: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_ # Offset: 305
    00000136: 	movq	%rbx, %rax
    00000139: 	subq	%r12, %rax
    0000013c: 	cmpq	$0x80, %rax
    00000142: 	jle	.Ltmp1331 # Offset: 322
    00000148: 	testq	%r13, %r13
    0000014b: 	je	.Ltmp1320 # Offset: 331
    0000014d: 	movq	%rbx, %r8
    00000150: 	jmp	.Ltmp1332 # Offset: 336
.Ltmp1322:
    00000155: 	movq	%r9, (%r12)
    00000159: 	movq	%rdx, (%rdi)
    0000015c: 	movq	(%r12), %rax
    00000160: 	movq	0x8(%r12), %rdx
    00000165: 	movq	-0x8(%r8), %rsi
    00000169: 	movq	(%rax), %rcx
    0000016c: 	jmp	.Ltmp1330 # Offset: 364
.Ltmp1320:
    00000171: 	sarq	$0x3, %rax
    00000175: 	leaq	-0x2(%rax), %r13
    00000179: 	movq	%rax, %rbp
    0000017c: 	sarq	%r13
    0000017f: 	jmp	.Ltmp1333 # Offset: 383
.Ltmp1334:
    00000181: 	subq	$0x1, %r13
.Ltmp1333:
    00000185: 	movq	(%r12,%r13,8), %rcx
    00000189: 	movq	%rbp, %rdx
    0000018c: 	movq	%r13, %rsi
    0000018f: 	movq	%r12, %rdi
    00000192: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1" # Offset: 402
    00000197: 	testq	%r13, %r13
    0000019a: 	jne	.Ltmp1334 # Offset: 410
    0000019c: 	subq	$0x8, %rbx
.Ltmp1335:
    000001a0: 	movq	(%r12), %rax
    000001a4: 	movq	%rbx, %rbp
    000001a7: 	movq	(%rbx), %rcx
    000001aa: 	xorl	%esi, %esi
    000001ac: 	subq	%r12, %rbp
    000001af: 	movq	%r12, %rdi
    000001b2: 	subq	$0x8, %rbx
    000001b6: 	movq	%rax, 0x8(%rbx)
    000001ba: 	movq	%rbp, %rdx
    000001bd: 	sarq	$0x3, %rdx
    000001c1: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1" # Offset: 449
    000001c6: 	cmpq	$0x8, %rbp
    000001ca: 	jg	.Ltmp1335 # Offset: 458
.Ltmp1331:
    000001cc: 	addq	$0x8, %rsp
    000001d0: 	popq	%rbx
    000001d1: 	popq	%rbp
    000001d2: 	popq	%r12
    000001d4: 	popq	%r13
    000001d6: 	retq # Offset: 470
.Ltmp1319:
    000001d7: 	retq # Offset: 471
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_"

Binary Function "_Z12StdSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 130
  State       : disassembled
  Address     : 0xe1a0
  Size        : 0x349
  MaxSize     : 0x350
  Offset      : 0xe1a0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0129:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%rbp), %r13
    00000031: 	movq	(%rbp), %r14
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	cmpq	%r13, %r14
    0000003f: 	je	.Ltmp1336 # Offset: 63
    00000045: 	movq	%r13, %r15
    00000048: 	movl	$0x3f, %edx
    0000004d: 	movq	%r13, %rsi
    00000050: 	movq	%r14, %rdi
    00000053: 	subq	%r14, %r15
    00000056: 	leaq	0x8(%r14), %rbx
    0000005a: 	movq	%r15, %rax
    0000005d: 	sarq	$0x3, %rax
    00000061: 	bsrq	%rax, %rax
    00000065: 	xorq	$0x3f, %rax
    00000069: 	subl	%eax, %edx
    0000006b: 	movslq	%edx, %rdx
    0000006e: 	addq	%rdx, %rdx
    00000071: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi1EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_ # Offset: 113
    00000076: 	cmpq	$0x80, %r15
    0000007d: 	jle	.Ltmp1337 # Offset: 125
    00000083: 	leaq	0x80(%r14), %r15
    0000008a: 	jmp	.Ltmp1338 # Offset: 138
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp1341:
    00000090: 	cmpq	%rbx, %r14
    00000093: 	je	.Ltmp1339 # Offset: 147
    00000095: 	movl	$0x8, %eax
    0000009a: 	movq	%rbx, %rdx
    0000009d: 	movq	%r14, %rsi
    000000a0: 	movq	%r8, 0x8(%rsp)
    000000a5: 	subq	%r14, %rdx
    000000a8: 	leaq	(%r14,%rax), %rdi
    000000ac: 	callq	memmove@PLT # Offset: 172
    000000b1: 	movq	0x8(%rsp), %r8
.Ltmp1339:
    000000b6: 	addq	$0x8, %rbx
    000000ba: 	movq	%r8, (%r14)
    000000bd: 	cmpq	%rbx, %r15
    000000c0: 	je	.Ltmp1340 # Offset: 192
.Ltmp1338:
    000000c2: 	movq	(%rbx), %r8
    000000c5: 	movq	(%r14), %rax
    000000c8: 	movq	(%r8), %rsi
    000000cb: 	cmpq	(%rax), %rsi
    000000ce: 	jl	.Ltmp1341 # Offset: 206
    000000d0: 	movq	-0x8(%rbx), %rdx
    000000d4: 	leaq	-0x8(%rbx), %rax
    000000d8: 	cmpq	(%rdx), %rsi
    000000db: 	jge	.Ltmp1342 # Offset: 219
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp1343:
    000000e8: 	movq	%rdx, 0x8(%rax)
    000000ec: 	movq	%rax, %rdi
    000000ef: 	movq	-0x8(%rax), %rdx
    000000f3: 	subq	$0x8, %rax
    000000f7: 	cmpq	(%rdx), %rsi
    000000fa: 	jl	.Ltmp1343 # Offset: 250
.Ltmp1360:
    000000fc: 	addq	$0x8, %rbx
    00000100: 	movq	%r8, (%rdi)
    00000103: 	cmpq	%rbx, %r15
    00000106: 	jne	.Ltmp1338 # Offset: 262
.Ltmp1340:
    00000108: 	cmpq	%r15, %r13
    0000010b: 	je	.Ltmp1336 # Offset: 267
    0000010d: 	nopl	(%rax) # Size: 3
.Ltmp1346:
    00000110: 	movq	(%r15), %rdi
    00000113: 	movq	-0x8(%r15), %rdx
    00000117: 	leaq	-0x8(%r15), %rax
    0000011b: 	movq	(%rdi), %rcx
    0000011e: 	cmpq	(%rdx), %rcx
    00000121: 	jge	.Ltmp1344 # Offset: 289
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1345:
    00000130: 	movq	%rdx, 0x8(%rax)
    00000134: 	movq	%rax, %rsi
    00000137: 	movq	-0x8(%rax), %rdx
    0000013b: 	subq	$0x8, %rax
    0000013f: 	cmpq	%rcx, (%rdx)
    00000142: 	jg	.Ltmp1345 # Offset: 322
    00000144: 	addq	$0x8, %r15
    00000148: 	movq	%rdi, (%rsi)
    0000014b: 	cmpq	%r15, %r13
    0000014e: 	jne	.Ltmp1346 # Offset: 334
.Ltmp1336:
    00000150: 	callq	clock@PLT # Offset: 336
    00000155: 	movq	(%r12), %rsi
    00000159: 	movq	0x8(%r12), %rdx
    0000015e: 	leaq	0x10(%rsp), %r13
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	%r13, %rdi
    0000016d: 	pxor	%xmm0, %xmm0
    00000171: 	subq	start_time(%rip), %rax
    00000178: 	addq	%rsi, %rdx
    0000017b: 	cvtsi2sd	%rax, %xmm0
    00000180: 	leaq	0x20(%rsp), %rbx
    00000185: 	divsd	DATAat0x17370(%rip), %xmm0
    0000018d: 	movq	%rbx, 0x10(%rsp)
    00000192: 	movsd	%xmm0, 0x8(%rsp)
    00000198: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 408
    0000019d: 	movq	0x8(%rbp), %rdi
    000001a1: 	movq	0x18(%rsp), %rdx
    000001a6: 	subq	(%rbp), %rdi
    000001aa: 	movq	0x10(%rsp), %rsi
    000001af: 	movsd	0x8(%rsp), %xmm0
    000001b5: 	sarq	$0x3, %rdi
    000001b9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 441
    000001be: 	movq	0x10(%rsp), %rdi
    000001c3: 	cmpq	%rbx, %rdi
    000001c6: 	je	.Ltmp1347 # Offset: 454
    000001c8: 	movq	0x20(%rsp), %rax
    000001cd: 	leaq	0x1(%rax), %rsi
    000001d1: 	callq	_ZdlPvm@PLT # Offset: 465
.Ltmp1347:
    000001d6: 	movq	(%r12), %rsi
    000001da: 	movq	0x8(%r12), %rdx
    000001df: 	movq	%r13, %rdi
    000001e2: 	movq	%rbx, 0x10(%rsp)
    000001e7: 	addq	%rsi, %rdx
    000001ea: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 490
    000001ef: 	movq	(%rbp), %rax
    000001f3: 	movq	0x8(%rbp), %rsi
    000001f7: 	addq	$0x8, %rax
    000001fb: 	jmp	.Ltmp1348 # Offset: 507
    000001fd: 	nopl	(%rax) # Size: 3
.Ltmp1350:
    00000200: 	movq	(%rdx), %rcx
    00000203: 	movq	-0x8(%rdx), %rdx
    00000207: 	addq	$0x8, %rax
    0000020b: 	movq	(%rdx), %rdi
    0000020e: 	cmpq	%rdi, (%rcx)
    00000211: 	jl	.Ltmp1349 # Offset: 529
.Ltmp1348:
    00000217: 	movq	%rax, %rdx
    0000021a: 	cmpq	%rax, %rsi
    0000021d: 	jne	.Ltmp1350 # Offset: 541
.Ltmp1358:
    0000021f: 	movq	0x10(%rsp), %rdi
    00000224: 	cmpq	%rbx, %rdi
    00000227: 	je	.Ltmp1351 # Offset: 551
    00000229: 	movq	0x20(%rsp), %rax
    0000022e: 	leaq	0x1(%rax), %rsi
    00000232: 	callq	_ZdlPvm@PLT # Offset: 562
.Ltmp1351:
    00000237: 	movq	0x38(%rsp), %rax
    0000023c: 	subq	%fs:0x28, %rax
    00000245: 	jne	.Ltmp1352 # Offset: 581
    0000024b: 	addq	$0x48, %rsp
    0000024f: 	popq	%rbx
    00000250: 	popq	%rbp
    00000251: 	popq	%r12
    00000253: 	popq	%r13
    00000255: 	popq	%r14
    00000257: 	popq	%r15
    00000259: 	retq # Offset: 601
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1354:
    00000260: 	cmpq	%rbx, %r14
    00000263: 	je	.Ltmp1353 # Offset: 611
    00000265: 	movq	%rbx, %rdx
    00000268: 	movl	$0x8, %eax
    0000026d: 	movq	%r14, %rsi
    00000270: 	subq	%r14, %rdx
    00000273: 	leaq	(%r14,%rax), %rdi
    00000277: 	callq	memmove@PLT # Offset: 631
.Ltmp1353:
    0000027c: 	movq	%r15, (%r14)
.Ltmp1357:
    0000027f: 	addq	$0x8, %rbx
.Ltmp1337:
    00000283: 	cmpq	%rbx, %r13
    00000286: 	je	.Ltmp1336 # Offset: 646
    0000028c: 	movq	(%rbx), %r15
    0000028f: 	movq	(%r14), %rax
    00000292: 	movq	(%r15), %rsi
    00000295: 	cmpq	(%rax), %rsi
    00000298: 	jl	.Ltmp1354 # Offset: 664
    0000029a: 	movq	-0x8(%rbx), %rdx
    0000029e: 	leaq	-0x8(%rbx), %rax
    000002a2: 	cmpq	(%rdx), %rsi
    000002a5: 	jge	.Ltmp1355 # Offset: 677
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1356:
    000002b0: 	movq	%rdx, 0x8(%rax)
    000002b4: 	movq	%rax, %rdi
    000002b7: 	movq	-0x8(%rax), %rdx
    000002bb: 	subq	$0x8, %rax
    000002bf: 	cmpq	(%rdx), %rsi
    000002c2: 	jl	.Ltmp1356 # Offset: 706
.Ltmp1359:
    000002c4: 	movq	%r15, (%rdi)
    000002c7: 	jmp	.Ltmp1357 # Offset: 711
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp1349:
    000002d0: 	movq	0x10(%rsp), %rdx
    000002d5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002dc: 	movl	$0x1, %edi
    000002e1: 	xorl	%eax, %eax
    000002e3: 	callq	__printf_chk@PLT # Offset: 739
    000002e8: 	jmp	.Ltmp1358 # Offset: 744
    000002ed: 	nopl	(%rax) # Size: 3
.Ltmp1344:
    000002f0: 	movq	%r15, %rsi
    000002f3: 	addq	$0x8, %r15
    000002f7: 	movq	%rdi, (%rsi)
    000002fa: 	cmpq	%r15, %r13
    000002fd: 	jne	.Ltmp1346 # Offset: 765
    00000303: 	jmp	.Ltmp1336 # Offset: 771
.Ltmp1355:
    00000308: 	movq	%rbx, %rdi
    0000030b: 	jmp	.Ltmp1359 # Offset: 779
.Ltmp1342:
    0000030d: 	movq	%rbx, %rdi
    00000310: 	jmp	.Ltmp1360 # Offset: 784
.Ltmp1352:
    00000315: 	callq	__stack_chk_fail@PLT # Offset: 789
    0000031a: 	endbr64
.Ltmp1362:
    0000031e: 	movq	%rax, %rbp
    00000321: 	jmp	.Ltmp1361 # Offset: 801
    00000323: 	endbr64
    00000327: 	jmp	.Ltmp1362 # Offset: 807
.Ltmp1361:
    00000329: 	movq	0x10(%rsp), %rdi
    0000032e: 	cmpq	%rbx, %rdi
    00000331: 	je	.Ltmp1363 # Offset: 817
    00000333: 	movq	0x20(%rsp), %rax
    00000338: 	leaq	0x1(%rax), %rsi
    0000033c: 	callq	_ZdlPvm@PLT # Offset: 828
.Ltmp1363:
    00000341: 	movq	%rbp, %rdi
    00000344: 	callq	_Unwind_Resume@PLT # Offset: 836
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_" after disassembly {
  Number      : 131
  State       : disassembled
  Address     : 0xe4f0
  Size        : 0x460
  MaxSize     : 0x460
  Offset      : 0xe4f0
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0130:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x28(%rsp)
    00000020: 	movq	%rsi, %rax
    00000023: 	subq	%rdi, %rax
    00000026: 	cmpq	$0x100, %rax
    0000002c: 	jle	.Ltmp1364 # Offset: 44
    00000032: 	movq	%rdi, %r12
    00000035: 	movq	%rdx, %r13
    00000038: 	movq	%rsi, %rbp
    0000003b: 	testq	%rdx, %rdx
    0000003e: 	je	.Ltmp1365 # Offset: 62
    00000044: 	movq	%rsi, %r8
    00000047: 	leaq	0x10(%r12), %rbx
.Ltmp1377:
    0000004c: 	movq	%r8, %rax
    0000004f: 	movq	0x10(%r12), %rsi
    00000054: 	movq	-0x10(%r8), %r11
    00000058: 	subq	$0x1, %r13
    0000005c: 	subq	%r12, %rax
    0000005f: 	movdqu	(%r12), %xmm0
    00000065: 	movq	%rax, %rdx
    00000068: 	shrq	$0x3f, %rax
    0000006c: 	movq	(%rsi), %rcx
    0000006f: 	movq	(%r11), %r9
    00000072: 	sarq	$0x4, %rdx
    00000076: 	movdqa	%xmm0, %xmm1
    0000007a: 	addq	%rdx, %rax
    0000007d: 	movhps	0x8(%r12), %xmm1
    00000083: 	movq	%xmm0, %rdx
    00000088: 	sarq	%rax
    0000008b: 	shlq	$0x4, %rax
    0000008f: 	addq	%r12, %rax
    00000092: 	movq	(%rax), %r10
    00000095: 	movq	(%r10), %rdi
    00000098: 	cmpq	%rdi, %rcx
    0000009b: 	jge	.Ltmp1366 # Offset: 155
    000000a1: 	cmpq	%r9, %rdi
    000000a4: 	jl	.Ltmp1367 # Offset: 164
    000000aa: 	cmpq	%r9, %rcx
    000000ad: 	jl	.Ltmp1368 # Offset: 173
.Ltmp1378:
    000000b3: 	movq	%rsi, %xmm0
    000000b8: 	movhps	0x18(%r12), %xmm0
    000000be: 	movups	%xmm1, 0x10(%r12)
    000000c4: 	movups	%xmm0, (%r12)
    000000c9: 	movq	-0x10(%r8), %rsi
.Ltmp1379:
    000000cd: 	movq	%r8, %rdi
    000000d0: 	movq	%rbx, %rax
    000000d3: 	cmpq	(%rdx), %rcx
    000000d6: 	jle	.Ltmp1369 # Offset: 214
    000000d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1374:
    000000e0: 	addq	$0x10, %rax
    000000e4: 	nopl	(%rax) # Size: 4
.Ltmp1370:
    000000e8: 	movq	(%rax), %rdx
    000000eb: 	movq	%rax, %rbp
    000000ee: 	addq	$0x10, %rax
    000000f2: 	cmpq	(%rdx), %rcx
    000000f5: 	jg	.Ltmp1370 # Offset: 245
    000000f7: 	leaq	-0x10(%rdi), %rax
    000000fb: 	cmpq	(%rsi), %rcx
    000000fe: 	jge	.Ltmp1371 # Offset: 254
.Ltmp1375:
    00000100: 	leaq	-0x20(%rdi), %rax
    00000104: 	nopl	(%rax) # Size: 4
.Ltmp1372:
    00000108: 	movq	(%rax), %rsi
    0000010b: 	movq	%rax, %rdi
    0000010e: 	subq	$0x10, %rax
    00000112: 	cmpq	(%rsi), %rcx
    00000115: 	jl	.Ltmp1372 # Offset: 277
    00000117: 	cmpq	%rdi, %rbp
    0000011a: 	jae	.Ltmp1373 # Offset: 282
.Ltmp1376:
    0000011c: 	movq	%rdx, %xmm0
    00000121: 	movq	%rsi, (%rbp)
    00000125: 	movq	0x8(%rdi), %rax
    00000129: 	movhps	0x8(%rbp), %xmm0
    0000012d: 	movq	-0x10(%rdi), %rsi
    00000131: 	movups	%xmm0, (%rdi)
    00000134: 	movq	(%r12), %rdx
    00000138: 	movq	%rax, 0x8(%rbp)
    0000013c: 	leaq	0x10(%rbp), %rax
    00000140: 	movq	(%rdx), %rcx
    00000143: 	movq	0x10(%rbp), %rdx
    00000147: 	cmpq	(%rdx), %rcx
    0000014a: 	jg	.Ltmp1374 # Offset: 330
.Ltmp1369:
    0000014c: 	movq	%rax, %rbp
    0000014f: 	leaq	-0x10(%rdi), %rax
    00000153: 	cmpq	(%rsi), %rcx
    00000156: 	jl	.Ltmp1375 # Offset: 342
    00000158: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1371:
    00000160: 	movq	%rax, %rdi
    00000163: 	cmpq	%rdi, %rbp
    00000166: 	jb	.Ltmp1376 # Offset: 358
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1373:
    00000170: 	movq	%r13, %rdx
    00000173: 	movq	%r8, %rsi
    00000176: 	movq	%rbp, %rdi
    00000179: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 377
    0000017e: 	movq	%rbp, %rax
    00000181: 	subq	%r12, %rax
    00000184: 	cmpq	$0x100, %rax
    0000018a: 	jle	.Ltmp1364 # Offset: 394
    0000018c: 	testq	%r13, %r13
    0000018f: 	je	.Ltmp1365 # Offset: 399
    00000195: 	movq	%rbp, %r8
    00000198: 	jmp	.Ltmp1377 # Offset: 408
.Ltmp1366:
    0000019d: 	cmpq	%r9, %rcx
    000001a0: 	jl	.Ltmp1378 # Offset: 416
    000001a6: 	cmpq	%r9, %rdi
    000001a9: 	jge	.Ltmp1367 # Offset: 425
.Ltmp1368:
    000001ab: 	movq	-0x8(%r8), %rax
    000001af: 	movq	%r11, (%r12)
    000001b3: 	movq	%rdx, %rsi
    000001b6: 	movups	%xmm0, -0x10(%r8)
    000001bb: 	movq	0x10(%r12), %rdx
    000001c0: 	movq	%rax, 0x8(%r12)
    000001c5: 	movq	(%r12), %rax
    000001c9: 	movq	(%rax), %rcx
    000001cc: 	jmp	.Ltmp1379 # Offset: 460
.Ltmp1367:
    000001d1: 	movq	0x8(%rax), %rdx
    000001d5: 	movq	%r10, (%r12)
    000001d9: 	movups	%xmm0, (%rax)
    000001dc: 	movq	(%r12), %rax
    000001e0: 	movq	-0x10(%r8), %rsi
    000001e4: 	movq	%rdx, 0x8(%r12)
    000001e9: 	movq	0x10(%r12), %rdx
    000001ee: 	movq	(%rax), %rcx
    000001f1: 	jmp	.Ltmp1379 # Offset: 497
.Ltmp1364:
    000001f6: 	movq	0x28(%rsp), %rax
    000001fb: 	subq	%fs:0x28, %rax
    00000204: 	jne	.Ltmp1380 # Offset: 516
    0000020a: 	addq	$0x38, %rsp
    0000020e: 	popq	%rbx
    0000020f: 	popq	%rbp
    00000210: 	popq	%r12
    00000212: 	popq	%r13
    00000214: 	popq	%r14
    00000216: 	popq	%r15
    00000218: 	retq # Offset: 536
.Ltmp1365:
    00000219: 	sarq	$0x4, %rax
    0000021d: 	leaq	0x10(%rsp), %rbx
    00000222: 	leaq	-0x2(%rax), %r14
    00000226: 	movq	%rax, %r13
    00000229: 	sarq	%r14
    0000022c: 	movq	%r14, %r15
    0000022f: 	shlq	$0x4, %r15
    00000233: 	addq	%r12, %r15
    00000236: 	jmp	.Ltmp1381 # Offset: 566
.Ltmp1383:
    00000238: 	subq	$0x10, %r15
    0000023c: 	testq	%r14, %r14
    0000023f: 	je	.Ltmp1382 # Offset: 575
.Ltmp1386:
    00000245: 	subq	$0x1, %r14
.Ltmp1381:
    00000249: 	movdqu	(%r15), %xmm3
    0000024e: 	pxor	%xmm4, %xmm4
    00000252: 	movq	%r12, %rdi
    00000255: 	movq	%rbx, %rcx
    00000258: 	movups	%xmm4, (%r15)
    0000025c: 	movq	%r13, %rdx
    0000025f: 	movq	%r14, %rsi
    00000262: 	movaps	%xmm3, 0x10(%rsp)
    00000267: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1" # Offset: 615
    0000026c: 	movq	0x18(%rsp), %rdi
    00000271: 	testq	%rdi, %rdi
    00000274: 	je	.Ltmp1383 # Offset: 628
    00000276: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000027d: 	je	.Ltmp1384 # Offset: 637
    00000283: 	movl	0x8(%rdi), %eax
    00000286: 	leal	-0x1(%rax), %edx
    00000289: 	movl	%edx, 0x8(%rdi)
.Ltmp1397:
    0000028c: 	cmpl	$0x1, %eax
    0000028f: 	jne	.Ltmp1383 # Offset: 655
    00000291: 	movq	(%rdi), %rax
    00000294: 	movq	%rdi, (%rsp)
    00000298: 	callq	*0x10(%rax) # Offset: 664
    0000029b: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000002a2: 	movq	(%rsp), %rdi
    000002a6: 	je	.Ltmp1385 # Offset: 678
    000002ac: 	movl	0xc(%rdi), %eax
    000002af: 	leal	-0x1(%rax), %edx
    000002b2: 	movl	%edx, 0xc(%rdi)
.Ltmp1400:
    000002b5: 	cmpl	$0x1, %eax
    000002b8: 	jne	.Ltmp1383 # Offset: 696
    000002be: 	movq	(%rdi), %rax
    000002c1: 	subq	$0x10, %r15
    000002c5: 	callq	*0x18(%rax) # Offset: 709
    000002c8: 	testq	%r14, %r14
    000002cb: 	jne	.Ltmp1386 # Offset: 715
.Ltmp1382:
    000002d1: 	subq	$0x10, %rbp
    000002d5: 	jmp	.Ltmp1387 # Offset: 725
    000002d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1391:
    000002e0: 	movq	%rbp, %r14
    000002e3: 	movq	%rbx, %rcx
    000002e6: 	xorl	%esi, %esi
    000002e8: 	movq	%r12, %rdi
    000002eb: 	subq	%r12, %r14
    000002ee: 	movaps	%xmm0, 0x10(%rsp)
    000002f3: 	movq	%r14, %rdx
    000002f6: 	sarq	$0x4, %rdx
    000002fa: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1" # Offset: 762
    000002ff: 	movq	0x18(%rsp), %r13
    00000304: 	testq	%r13, %r13
    00000307: 	je	.Ltmp1388 # Offset: 775
    00000309: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000310: 	je	.Ltmp1389 # Offset: 784
    00000316: 	movl	0x8(%r13), %eax
    0000031a: 	leal	-0x1(%rax), %edx
    0000031d: 	movl	%edx, 0x8(%r13)
.Ltmp1396:
    00000321: 	cmpl	$0x1, %eax
    00000324: 	je	.Ltmp1390 # Offset: 804
.Ltmp1388:
    0000032a: 	subq	$0x10, %rbp
    0000032e: 	cmpq	$0x10, %r14
    00000332: 	jle	.Ltmp1364 # Offset: 818
.Ltmp1387:
    00000338: 	pxor	%xmm2, %xmm2
    0000033c: 	movdqu	(%rbp), %xmm0
    00000341: 	movups	%xmm2, (%rbp)
    00000345: 	movdqu	(%r12), %xmm1
    0000034b: 	movups	%xmm2, (%r12)
    00000350: 	movq	0x8(%rbp), %r13
    00000354: 	movups	%xmm1, (%rbp)
    00000358: 	testq	%r13, %r13
    0000035b: 	je	.Ltmp1391 # Offset: 859
    0000035d: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000364: 	je	.Ltmp1392 # Offset: 868
    0000036a: 	movl	0x8(%r13), %eax
    0000036e: 	leal	-0x1(%rax), %edx
    00000371: 	movl	%edx, 0x8(%r13)
.Ltmp1395:
    00000375: 	cmpl	$0x1, %eax
    00000378: 	jne	.Ltmp1391 # Offset: 888
    0000037e: 	movq	(%r13), %rax
    00000382: 	movaps	%xmm0, (%rsp)
    00000386: 	movq	%r13, %rdi
    00000389: 	callq	*0x10(%rax) # Offset: 905
    0000038c: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000393: 	movdqa	(%rsp), %xmm0
    00000398: 	je	.Ltmp1393 # Offset: 920
    0000039e: 	movl	0xc(%r13), %eax
    000003a2: 	leal	-0x1(%rax), %edx
    000003a5: 	movl	%edx, 0xc(%r13)
.Ltmp1399:
    000003a9: 	cmpl	$0x1, %eax
    000003ac: 	jne	.Ltmp1391 # Offset: 940
    000003b2: 	movq	(%r13), %rax
    000003b6: 	movaps	%xmm0, (%rsp)
    000003ba: 	movq	%r13, %rdi
    000003bd: 	callq	*0x18(%rax) # Offset: 957
    000003c0: 	movdqa	(%rsp), %xmm0
    000003c5: 	jmp	.Ltmp1391 # Offset: 965
.Ltmp1390:
    000003ca: 	movq	(%r13), %rax
    000003ce: 	movq	%r13, %rdi
    000003d1: 	callq	*0x10(%rax) # Offset: 977
    000003d4: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000003db: 	je	.Ltmp1394 # Offset: 987
    000003dd: 	movl	0xc(%r13), %eax
    000003e1: 	leal	-0x1(%rax), %edx
    000003e4: 	movl	%edx, 0xc(%r13)
.Ltmp1398:
    000003e8: 	cmpl	$0x1, %eax
    000003eb: 	jne	.Ltmp1388 # Offset: 1003
    000003f1: 	movq	(%r13), %rax
    000003f5: 	movq	%r13, %rdi
    000003f8: 	callq	*0x18(%rax) # Offset: 1016
    000003fb: 	jmp	.Ltmp1388 # Offset: 1019
.Ltmp1392:
    00000400: 	movl	$0xffffffff, %eax
    00000405: 	lock # Offset: 1029
    00000406: 	xaddl	%eax, 0x8(%r13)
    0000040b: 	jmp	.Ltmp1395 # Offset: 1035
.Ltmp1389:
    00000410: 	movl	$0xffffffff, %eax
    00000415: 	lock # Offset: 1045
    00000416: 	xaddl	%eax, 0x8(%r13)
    0000041b: 	jmp	.Ltmp1396 # Offset: 1051
.Ltmp1384:
    00000420: 	movl	$0xffffffff, %eax
    00000425: 	lock # Offset: 1061
    00000426: 	xaddl	%eax, 0x8(%rdi)
    0000042a: 	jmp	.Ltmp1397 # Offset: 1066
.Ltmp1394:
    0000042f: 	movl	$0xffffffff, %eax
    00000434: 	lock # Offset: 1076
    00000435: 	xaddl	%eax, 0xc(%r13)
    0000043a: 	jmp	.Ltmp1398 # Offset: 1082
.Ltmp1393:
    0000043c: 	movl	$0xffffffff, %eax
    00000441: 	lock # Offset: 1089
    00000442: 	xaddl	%eax, 0xc(%r13)
    00000447: 	jmp	.Ltmp1399 # Offset: 1095
.Ltmp1385:
    0000044c: 	movl	$0xffffffff, %eax
    00000451: 	lock # Offset: 1105
    00000452: 	xaddl	%eax, 0xc(%rdi)
    00000456: 	jmp	.Ltmp1400 # Offset: 1110
.Ltmp1380:
    0000045b: 	callq	__stack_chk_fail@PLT # Offset: 1115
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_"

Binary Function "_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 132
  State       : disassembled
  Address     : 0xe950
  Size        : 0x3a9
  MaxSize     : 0x3b0
  Offset      : 0xe950
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0131:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rsi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x58, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x48(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%r12), %rsi
    00000032: 	movq	(%r12), %rbp
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	movq	%rsi, 0x18(%rsp)
    00000042: 	cmpq	%rsi, %rbp
    00000045: 	je	.Ltmp1401 # Offset: 69
    0000004b: 	movq	%rsi, %rbx
    0000004e: 	movl	$0x3f, %edx
    00000053: 	movq	%rbp, %rdi
    00000056: 	movq	%rsi, %r14
    00000059: 	subq	%rbp, %rbx
    0000005c: 	movq	%rbx, %rax
    0000005f: 	sarq	$0x4, %rax
    00000063: 	bsrq	%rax, %rax
    00000067: 	xorq	$0x3f, %rax
    0000006b: 	subl	%eax, %edx
    0000006d: 	movslq	%edx, %rdx
    00000070: 	addq	%rdx, %rdx
    00000073: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 115
    00000078: 	cmpq	$0x100, %rbx
    0000007f: 	jle	.Ltmp1402 # Offset: 127
    00000085: 	leaq	0x100(%rbp), %r15
    0000008c: 	movq	%rbp, %rdi
    0000008f: 	movq	%r15, %rsi
    00000092: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1" # Offset: 146
    00000097: 	pxor	%xmm1, %xmm1
    0000009b: 	cmpq	%r15, %r14
    0000009e: 	je	.Ltmp1401 # Offset: 158
    000000a4: 	nopl	(%rax) # Size: 4
.Ltmp1414:
    000000a8: 	movdqu	(%r15), %xmm2
    000000ad: 	movq	-0x10(%r15), %rax
    000000b1: 	movups	%xmm1, (%r15)
    000000b5: 	leaq	-0x10(%r15), %rbx
    000000b9: 	movq	%xmm2, %r14
    000000be: 	movaps	%xmm2, (%rsp)
    000000c2: 	movq	(%r14), %rcx
    000000c5: 	cmpq	%rcx, (%rax)
    000000c8: 	jg	.Ltmp1403 # Offset: 200
    000000ca: 	jmp	.Ltmp1404 # Offset: 202
    000000cf: 	nop # Size: 1
.Ltmp1408:
    000000d0: 	movq	(%r14), %rcx
.Ltmp1406:
    000000d3: 	movq	-0x10(%rbx), %rax
    000000d7: 	leaq	-0x10(%rbx), %rdx
    000000db: 	cmpq	%rcx, (%rax)
    000000de: 	jle	.Ltmp1405 # Offset: 222
.Ltmp1410:
    000000e4: 	movq	%rdx, %rbx
.Ltmp1403:
    000000e7: 	movq	0x18(%rbx), %rbp
    000000eb: 	movq	%rax, %xmm0
    000000f0: 	movhps	0x8(%rbx), %xmm0
    000000f4: 	movups	%xmm1, (%rbx)
    000000f7: 	movups	%xmm0, 0x10(%rbx)
    000000fb: 	testq	%rbp, %rbp
    000000fe: 	je	.Ltmp1406 # Offset: 254
    00000100: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000107: 	je	.Ltmp1407 # Offset: 263
    0000010d: 	movl	0x8(%rbp), %eax
    00000110: 	leal	-0x1(%rax), %edx
    00000113: 	movl	%edx, 0x8(%rbp)
.Ltmp1421:
    00000116: 	cmpl	$0x1, %eax
    00000119: 	jne	.Ltmp1408 # Offset: 281
    0000011b: 	movq	(%rbp), %rax
    0000011f: 	movq	%rbp, %rdi
    00000122: 	callq	*0x10(%rax) # Offset: 290
    00000125: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000012c: 	pxor	%xmm1, %xmm1
    00000130: 	je	.Ltmp1409 # Offset: 304
    00000136: 	movl	0xc(%rbp), %eax
    00000139: 	leal	-0x1(%rax), %edx
    0000013c: 	movl	%edx, 0xc(%rbp)
.Ltmp1422:
    0000013f: 	cmpl	$0x1, %eax
    00000142: 	jne	.Ltmp1408 # Offset: 322
    00000144: 	movq	(%rbp), %rax
    00000148: 	movq	%rbp, %rdi
    0000014b: 	callq	*0x18(%rax) # Offset: 331
    0000014e: 	movq	-0x10(%rbx), %rax
    00000152: 	movq	(%r14), %rcx
    00000155: 	pxor	%xmm1, %xmm1
    00000159: 	leaq	-0x10(%rbx), %rdx
    0000015d: 	cmpq	%rcx, (%rax)
    00000160: 	jg	.Ltmp1410 # Offset: 352
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1405:
    00000168: 	movq	0x8(%rbx), %rbp
    0000016c: 	movdqa	(%rsp), %xmm3
    00000171: 	movups	%xmm3, (%rbx)
    00000174: 	testq	%rbp, %rbp
    00000177: 	je	.Ltmp1411 # Offset: 375
    00000179: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000180: 	je	.Ltmp1412 # Offset: 384
    00000186: 	movl	0x8(%rbp), %eax
    00000189: 	leal	-0x1(%rax), %edx
    0000018c: 	movl	%edx, 0x8(%rbp)
.Ltmp1425:
    0000018f: 	cmpl	$0x1, %eax
    00000192: 	je	.Ltmp1413 # Offset: 402
.Ltmp1411:
    00000198: 	addq	$0x10, %r15
    0000019c: 	cmpq	%r15, 0x18(%rsp)
    000001a1: 	jne	.Ltmp1414 # Offset: 417
.Ltmp1401:
    000001a7: 	callq	clock@PLT # Offset: 423
    000001ac: 	movq	(%r13), %rsi
    000001b0: 	movq	0x8(%r13), %rdx
    000001b4: 	leaq	0x20(%rsp), %rbp
    000001b9: 	movq	%rax, end_time(%rip)
    000001c0: 	movq	%rbp, %rdi
    000001c3: 	pxor	%xmm0, %xmm0
    000001c7: 	subq	start_time(%rip), %rax
    000001ce: 	addq	%rsi, %rdx
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	leaq	0x30(%rsp), %rbx
    000001db: 	divsd	DATAat0x17370(%rip), %xmm0
    000001e3: 	movq	%rbx, 0x20(%rsp)
    000001e8: 	movsd	%xmm0, (%rsp)
    000001ed: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 493
    000001f2: 	movq	0x8(%r12), %rdi
    000001f7: 	movq	0x28(%rsp), %rdx
    000001fc: 	subq	(%r12), %rdi
    00000200: 	movq	0x20(%rsp), %rsi
    00000205: 	movsd	(%rsp), %xmm0
    0000020a: 	sarq	$0x4, %rdi
    0000020e: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 526
    00000213: 	movq	0x20(%rsp), %rdi
    00000218: 	cmpq	%rbx, %rdi
    0000021b: 	je	.Ltmp1415 # Offset: 539
    0000021d: 	movq	0x30(%rsp), %rax
    00000222: 	leaq	0x1(%rax), %rsi
    00000226: 	callq	_ZdlPvm@PLT # Offset: 550
.Ltmp1415:
    0000022b: 	movq	(%r13), %rsi
    0000022f: 	movq	0x8(%r13), %rdx
    00000233: 	movq	%rbp, %rdi
    00000236: 	movq	%rbx, 0x20(%rsp)
    0000023b: 	addq	%rsi, %rdx
    0000023e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 574
    00000243: 	movq	(%r12), %rax
    00000247: 	movq	0x8(%r12), %rsi
    0000024c: 	addq	$0x10, %rax
    00000250: 	jmp	.Ltmp1416 # Offset: 592
    00000252: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1418:
    00000258: 	movq	(%rdx), %rcx
    0000025b: 	movq	-0x10(%rdx), %rdx
    0000025f: 	addq	$0x10, %rax
    00000263: 	movq	(%rdx), %rdi
    00000266: 	cmpq	%rdi, (%rcx)
    00000269: 	jl	.Ltmp1417 # Offset: 617
.Ltmp1416:
    0000026f: 	movq	%rax, %rdx
    00000272: 	cmpq	%rax, %rsi
    00000275: 	jne	.Ltmp1418 # Offset: 629
.Ltmp1423:
    00000277: 	movq	0x20(%rsp), %rdi
    0000027c: 	cmpq	%rbx, %rdi
    0000027f: 	je	.Ltmp1419 # Offset: 639
    00000281: 	movq	0x30(%rsp), %rax
    00000286: 	leaq	0x1(%rax), %rsi
    0000028a: 	callq	_ZdlPvm@PLT # Offset: 650
.Ltmp1419:
    0000028f: 	movq	0x48(%rsp), %rax
    00000294: 	subq	%fs:0x28, %rax
    0000029d: 	jne	.Ltmp1420 # Offset: 669
    000002a3: 	addq	$0x58, %rsp
    000002a7: 	popq	%rbx
    000002a8: 	popq	%rbp
    000002a9: 	popq	%r12
    000002ab: 	popq	%r13
    000002ad: 	popq	%r14
    000002af: 	popq	%r15
    000002b1: 	retq # Offset: 689
    000002b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1402:
    000002b8: 	movq	0x18(%rsp), %rsi
    000002bd: 	movq	%rbp, %rdi
    000002c0: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1" # Offset: 704
    000002c5: 	jmp	.Ltmp1401 # Offset: 709
    000002ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1407:
    000002d0: 	movl	$0xffffffff, %eax
    000002d5: 	lock # Offset: 725
    000002d6: 	xaddl	%eax, 0x8(%rbp)
    000002da: 	jmp	.Ltmp1421 # Offset: 730
    000002df: 	nop # Size: 1
.Ltmp1409:
    000002e0: 	movl	$0xffffffff, %eax
    000002e5: 	lock # Offset: 741
    000002e6: 	xaddl	%eax, 0xc(%rbp)
    000002ea: 	jmp	.Ltmp1422 # Offset: 746
    000002ef: 	nop # Size: 1
.Ltmp1417:
    000002f0: 	movq	0x20(%rsp), %rdx
    000002f5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002fc: 	movl	$0x1, %edi
    00000301: 	xorl	%eax, %eax
    00000303: 	callq	__printf_chk@PLT # Offset: 771
    00000308: 	jmp	.Ltmp1423 # Offset: 776
    0000030d: 	nopl	(%rax) # Size: 3
.Ltmp1413:
    00000310: 	movq	(%rbp), %rax
    00000314: 	movq	%rbp, %rdi
    00000317: 	callq	*0x10(%rax) # Offset: 791
    0000031a: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000321: 	pxor	%xmm1, %xmm1
    00000325: 	je	.Ltmp1424 # Offset: 805
    00000327: 	movl	0xc(%rbp), %eax
    0000032a: 	leal	-0x1(%rax), %edx
    0000032d: 	movl	%edx, 0xc(%rbp)
.Ltmp1426:
    00000330: 	cmpl	$0x1, %eax
    00000333: 	jne	.Ltmp1411 # Offset: 819
    00000339: 	movq	(%rbp), %rax
    0000033d: 	movq	%rbp, %rdi
    00000340: 	callq	*0x18(%rax) # Offset: 832
    00000343: 	pxor	%xmm1, %xmm1
    00000347: 	jmp	.Ltmp1411 # Offset: 839
    0000034c: 	nopl	(%rax) # Size: 4
.Ltmp1412:
    00000350: 	movl	$0xffffffff, %eax
    00000355: 	lock # Offset: 853
    00000356: 	xaddl	%eax, 0x8(%rbp)
    0000035a: 	jmp	.Ltmp1425 # Offset: 858
    0000035f: 	nop # Size: 1
.Ltmp1404:
    00000360: 	movups	%xmm2, (%r15)
    00000364: 	jmp	.Ltmp1411 # Offset: 868
.Ltmp1424:
    00000369: 	movl	$0xffffffff, %eax
    0000036e: 	lock # Offset: 878
    0000036f: 	xaddl	%eax, 0xc(%rbp)
    00000373: 	jmp	.Ltmp1426 # Offset: 883
.Ltmp1420:
    00000375: 	callq	__stack_chk_fail@PLT # Offset: 885
    0000037a: 	endbr64
.Ltmp1428:
    0000037e: 	movq	%rax, %rbp
    00000381: 	jmp	.Ltmp1427 # Offset: 897
    00000383: 	endbr64
    00000387: 	jmp	.Ltmp1428 # Offset: 903
.Ltmp1427:
    00000389: 	movq	0x20(%rsp), %rdi
    0000038e: 	cmpq	%rbx, %rdi
    00000391: 	je	.Ltmp1429 # Offset: 913
    00000393: 	movq	0x30(%rsp), %rax
    00000398: 	leaq	0x1(%rax), %rsi
    0000039c: 	callq	_ZdlPvm@PLT # Offset: 924
.Ltmp1429:
    000003a1: 	movq	%rbp, %rdi
    000003a4: 	callq	_Unwind_Resume@PLT # Offset: 932
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/smart_pointers.cpp/1
  Number      : 133
  State       : disassembled
  Address     : 0xed00
  Size        : 0x8fc
  MaxSize     : 0x900
  Offset      : 0xed00
  Section     : .text
  Orc Section : .local.text._Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0132:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movq	%rcx, %r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	movl	%edi, %ebp
    0000000e: 	pushq	%rbx
    0000000f: 	movl	%esi, %ebx
    00000011: 	subq	$0xc8, %rsp
    00000018: 	movl	%esi, 0x18(%rsp)
    0000001c: 	leaq	0x90(%rsp), %r12
    00000024: 	movq	%rcx, %rsi
    00000027: 	movl	%edx, 0x1c(%rsp)
    0000002b: 	movq	%r12, %rdi
    0000002e: 	leaq	DATAat0x17152(%rip), %rdx
    00000035: 	movq	%fs:0x28, %rax
    0000003e: 	movq	%rax, 0xb8(%rsp)
    00000046: 	xorl	%eax, %eax
    00000048: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 72
    0000004d: 	leaq	0x30(%rsp), %rax
    00000052: 	movq	%r12, %rcx
    00000055: 	movl	%ebx, %edx
    00000057: 	movl	%ebp, %esi
    00000059: 	movq	%rax, %rdi
    0000005c: 	movq	%rax, 0x8(%rsp)
    00000061: 	callq	_Z11CreateArrayI17VariableContainerIlLi1EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 97
    00000066: 	movq	0x90(%rsp), %rdi
    0000006e: 	leaq	0xa0(%rsp), %r13
    00000076: 	cmpq	%r13, %rdi
    00000079: 	je	.Ltmp1430 # Offset: 121
    0000007b: 	movq	0xa0(%rsp), %rax
    00000083: 	leaq	0x1(%rax), %rsi
    00000087: 	callq	_ZdlPvm@PLT # Offset: 135
.Ltmp1430:
    0000008c: 	leaq	DATAat0x17160(%rip), %rdx
    00000093: 	movq	%r14, %rsi
    00000096: 	movq	%r12, %rdi
    00000099: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 153
    0000009e: 	leaq	0x50(%rsp), %r15
    000000a3: 	movq	0x8(%rsp), %rsi
    000000a8: 	movq	%r12, %rdx
    000000ab: 	movq	%r15, %rdi
    000000ae: 	callq	_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 174
    000000b3: 	movq	0x90(%rsp), %rdi
    000000bb: 	cmpq	%r13, %rdi
    000000be: 	je	.Ltmp1431 # Offset: 190
    000000c0: 	movq	0xa0(%rsp), %rax
    000000c8: 	leaq	0x1(%rax), %rsi
    000000cc: 	callq	_ZdlPvm@PLT # Offset: 204
.Ltmp1431:
    000000d1: 	leaq	0x70(%rsp), %rdi
    000000d6: 	leaq	DATAat0x1716c(%rip), %rdx
    000000dd: 	movq	%r14, %rsi
    000000e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 224
    000000e5: 	movq	0x58(%rsp), %rdi
    000000ea: 	subq	0x50(%rsp), %rdi
    000000ef: 	movq	%rdi, %rbp
    000000f2: 	movq	%rdi, 0x10(%rsp)
    000000f7: 	callq	clock@PLT # Offset: 247
    000000fc: 	movq	0x50(%rsp), %rsi
    00000101: 	movq	0x10(%rsp), %rdi
    00000106: 	sarq	$0x4, %rbp
    0000010a: 	movq	%rax, start_time(%rip)
    00000111: 	movl	$0x14, %ecx
    00000116: 	movq	(%rsi), %rax
    00000119: 	movq	(%rax), %r8
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1434:
    00000120: 	movq	%r8, %rbx
    00000123: 	cmpq	$0x10, %rdi
    00000127: 	jbe	.Ltmp1432 # Offset: 295
    00000129: 	movl	$0x1, %eax
    0000012e: 	nop # Size: 2
.Ltmp1433:
    00000130: 	movq	%rax, %rdx
    00000133: 	addq	$0x1, %rax
    00000137: 	shlq	$0x4, %rdx
    0000013b: 	movq	(%rsi,%rdx), %rdx
    0000013f: 	addq	(%rdx), %rbx
    00000142: 	cmpq	%rax, %rbp
    00000145: 	ja	.Ltmp1433 # Offset: 325
.Ltmp1432:
    00000147: 	subq	$0x1, %rcx
    0000014b: 	jne	.Ltmp1434 # Offset: 331
    0000014d: 	callq	clock@PLT # Offset: 333
    00000152: 	movq	0x70(%rsp), %rsi
    00000157: 	movq	0x78(%rsp), %rdx
    0000015c: 	movq	%r12, %rdi
    0000015f: 	movq	%rax, end_time(%rip)
    00000166: 	pxor	%xmm0, %xmm0
    0000016a: 	subq	start_time(%rip), %rax
    00000171: 	addq	%rsi, %rdx
    00000174: 	cvtsi2sd	%rax, %xmm0
    00000179: 	movq	%r13, 0x90(%rsp)
    00000181: 	divsd	DATAat0x17370(%rip), %xmm0
    00000189: 	movsd	%xmm0, 0x10(%rsp)
    0000018f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 399
    00000194: 	movsd	0x10(%rsp), %xmm0
    0000019a: 	movq	%r12, %rdx
    0000019d: 	movq	%rbp, %rsi
    000001a0: 	movl	$0x14, %edi
    000001a5: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 421
    000001aa: 	movq	0x90(%rsp), %rdi
    000001b2: 	cmpq	%r13, %rdi
    000001b5: 	je	.Ltmp1435 # Offset: 437
    000001b7: 	movq	0xa0(%rsp), %rax
    000001bf: 	leaq	0x1(%rax), %rsi
    000001c3: 	callq	_ZdlPvm@PLT # Offset: 451
.Ltmp1435:
    000001c8: 	movq	0x70(%rsp), %rsi
    000001cd: 	movq	0x78(%rsp), %rdx
    000001d2: 	movq	%r12, %rdi
    000001d5: 	movq	%r13, 0x90(%rsp)
    000001dd: 	addq	%rsi, %rdx
    000001e0: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 480
    000001e5: 	movslq	0x18(%rsp), %rax
    000001ea: 	movq	0x90(%rsp), %rdx
    000001f2: 	imulq	%rbp, %rax
    000001f6: 	cmpq	%rax, %rbx
    000001f9: 	jne	.Ltmp1436 # Offset: 505
.Ltmp1478:
    000001ff: 	cmpq	%r13, %rdx
    00000202: 	je	.Ltmp1437 # Offset: 514
    00000204: 	movq	0xa0(%rsp), %rax
    0000020c: 	movq	%rdx, %rdi
    0000020f: 	leaq	0x1(%rax), %rsi
    00000213: 	callq	_ZdlPvm@PLT # Offset: 531
.Ltmp1437:
    00000218: 	movq	0x70(%rsp), %rdi
    0000021d: 	leaq	0x80(%rsp), %rax
    00000225: 	cmpq	%rax, %rdi
    00000228: 	je	.Ltmp1438 # Offset: 552
    0000022a: 	movq	0x80(%rsp), %rax
    00000232: 	leaq	0x1(%rax), %rsi
    00000236: 	callq	_ZdlPvm@PLT # Offset: 566
.Ltmp1438:
    0000023b: 	leaq	DATAat0x1717f(%rip), %rdx
    00000242: 	movq	%r14, %rsi
    00000245: 	movq	%r12, %rdi
    00000248: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 584
    0000024d: 	movq	%r12, %rsi
    00000250: 	movq	%r15, %rdi
    00000253: 	callq	_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 595
    00000258: 	movq	0x90(%rsp), %rdi
    00000260: 	cmpq	%r13, %rdi
    00000263: 	je	.Ltmp1439 # Offset: 611
    00000265: 	movq	0xa0(%rsp), %rax
    0000026d: 	leaq	0x1(%rax), %rsi
    00000271: 	callq	_ZdlPvm@PLT # Offset: 625
.Ltmp1439:
    00000276: 	leaq	DATAat0x17190(%rip), %rdx
    0000027d: 	movq	%r14, %rsi
    00000280: 	movq	%r12, %rdi
    00000283: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 643
    00000288: 	movq	%r12, %rsi
    0000028b: 	movq	%r15, %rdi
    0000028e: 	callq	_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 654
    00000293: 	movq	0x90(%rsp), %rdi
    0000029b: 	cmpq	%r13, %rdi
    0000029e: 	je	.Ltmp1440 # Offset: 670
    000002a0: 	movq	0xa0(%rsp), %rax
    000002a8: 	leaq	0x1(%rax), %rsi
    000002ac: 	callq	_ZdlPvm@PLT # Offset: 684
.Ltmp1440:
    000002b1: 	movq	(%r14), %rbp
    000002b4: 	movq	0x8(%r14), %rbx
    000002b8: 	movq	%r13, 0x90(%rsp)
    000002c0: 	movq	%rbp, %rax
    000002c3: 	addq	%rbx, %rax
    000002c6: 	je	.Ltmp1441 # Offset: 710
    000002c8: 	testq	%rbp, %rbp
    000002cb: 	je	.Ltmp1442 # Offset: 715
.Ltmp1441:
    000002d1: 	movq	%rbx, 0x28(%rsp)
    000002d6: 	cmpq	$0xf, %rbx
    000002da: 	ja	.Ltmp1443 # Offset: 730
    000002e0: 	cmpq	$0x1, %rbx
    000002e4: 	jne	.Ltmp1444 # Offset: 740
    000002ea: 	movzbl	(%rbp), %eax
    000002ee: 	movb	%al, 0xa0(%rsp)
    000002f5: 	movq	%r13, %rax
.Ltmp1474:
    000002f8: 	movq	%rbx, 0x98(%rsp)
    00000300: 	movb	$0x0, (%rax,%rbx)
    00000304: 	movabsq	$0x3fffffffffffffff, %rax
    0000030e: 	subq	0x98(%rsp), %rax
    00000316: 	cmpq	$0xf, %rax
    0000031a: 	jbe	.Ltmp1445 # Offset: 794
    00000320: 	movl	$0x10, %edx
    00000325: 	leaq	DATAat0x1719f(%rip), %rsi
    0000032c: 	movq	%r12, %rdi
    0000032f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 815
    00000334: 	movq	%r12, %rsi
    00000337: 	movq	%r15, %rdi
    0000033a: 	callq	_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 826
    0000033f: 	movq	0x90(%rsp), %rdi
    00000347: 	cmpq	%r13, %rdi
    0000034a: 	je	.Ltmp1446 # Offset: 842
    0000034c: 	movq	0xa0(%rsp), %rax
    00000354: 	leaq	0x1(%rax), %rsi
    00000358: 	callq	_ZdlPvm@PLT # Offset: 856
.Ltmp1446:
    0000035d: 	movl	$0x7b, %edi
    00000362: 	callq	srand@PLT # Offset: 866
    00000367: 	movq	0x50(%rsp), %rbx
    0000036c: 	cmpq	%rbx, 0x58(%rsp)
    00000371: 	je	.Ltmp1447 # Offset: 881
    00000373: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1448:
    00000378: 	callq	rand@PLT # Offset: 888
    0000037d: 	movq	(%rbx), %rdx
    00000380: 	addq	$0x10, %rbx
    00000384: 	sarl	$0x5, %eax
    00000387: 	movzwl	%ax, %eax
    0000038a: 	movq	%rax, (%rdx)
    0000038d: 	cmpq	%rbx, 0x58(%rsp)
    00000392: 	jne	.Ltmp1448 # Offset: 914
.Ltmp1447:
    00000394: 	movq	(%r14), %rbp
    00000397: 	movq	0x8(%r14), %rbx
    0000039b: 	movq	%r13, 0x90(%rsp)
    000003a3: 	movq	%rbp, %rax
    000003a6: 	addq	%rbx, %rax
    000003a9: 	je	.Ltmp1449 # Offset: 937
    000003ab: 	testq	%rbp, %rbp
    000003ae: 	je	.Ltmp1450 # Offset: 942
.Ltmp1449:
    000003b4: 	movq	%rbx, 0x28(%rsp)
    000003b9: 	cmpq	$0xf, %rbx
    000003bd: 	ja	.Ltmp1451 # Offset: 957
    000003c3: 	cmpq	$0x1, %rbx
    000003c7: 	jne	.Ltmp1452 # Offset: 967
    000003cd: 	movzbl	(%rbp), %eax
    000003d1: 	movb	%al, 0xa0(%rsp)
    000003d8: 	movq	%r13, %rax
.Ltmp1481:
    000003db: 	movq	%rbx, 0x98(%rsp)
    000003e3: 	movb	$0x0, (%rax,%rbx)
    000003e7: 	movabsq	$0x3fffffffffffffff, %rax
    000003f1: 	subq	0x98(%rsp), %rax
    000003f9: 	cmpq	$0xf, %rax
    000003fd: 	jbe	.Ltmp1453 # Offset: 1021
    00000403: 	movl	$0x10, %edx
    00000408: 	leaq	DATAat0x171b0(%rip), %rsi
    0000040f: 	movq	%r12, %rdi
    00000412: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1042
    00000417: 	movq	%r12, %rsi
    0000041a: 	movq	%r15, %rdi
    0000041d: 	callq	_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1053
    00000422: 	movq	0x90(%rsp), %rdi
    0000042a: 	cmpq	%r13, %rdi
    0000042d: 	je	.Ltmp1454 # Offset: 1069
    0000042f: 	movq	0xa0(%rsp), %rax
    00000437: 	leaq	0x1(%rax), %rsi
    0000043b: 	callq	_ZdlPvm@PLT # Offset: 1083
.Ltmp1454:
    00000440: 	cmpb	$0x0, 0x1c(%rsp)
    00000445: 	je	.Ltmp1455 # Offset: 1093
    00000447: 	leaq	DATAat0x171c1(%rip), %rdx
    0000044e: 	movq	%r14, %rsi
    00000451: 	movq	%r12, %rdi
    00000454: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1108
    00000459: 	movq	0x8(%rsp), %rdi
    0000045e: 	movq	%r12, %rsi
    00000461: 	callq	_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1121
    00000466: 	movq	0x90(%rsp), %rdi
    0000046e: 	cmpq	%r13, %rdi
    00000471: 	je	.Ltmp1455 # Offset: 1137
    00000473: 	movq	0xa0(%rsp), %rax
    0000047b: 	leaq	0x1(%rax), %rsi
    0000047f: 	callq	_ZdlPvm@PLT # Offset: 1151
.Ltmp1455:
    00000484: 	leaq	DATAat0x171d9(%rip), %rdx
    0000048b: 	movq	%r14, %rsi
    0000048e: 	movq	%r12, %rdi
    00000491: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1169
    00000496: 	movq	%r12, %rsi
    00000499: 	movq	%r15, %rdi
    0000049c: 	callq	_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1180
    000004a1: 	movq	0x90(%rsp), %rdi
    000004a9: 	cmpq	%r13, %rdi
    000004ac: 	je	.Ltmp1456 # Offset: 1196
    000004ae: 	movq	0xa0(%rsp), %rax
    000004b6: 	leaq	0x1(%rax), %rsi
    000004ba: 	callq	_ZdlPvm@PLT # Offset: 1210
.Ltmp1456:
    000004bf: 	leaq	DATAat0x171ed(%rip), %rdx
    000004c6: 	movq	%r14, %rsi
    000004c9: 	movq	%r12, %rdi
    000004cc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1228
    000004d1: 	movq	%r12, %rdi
    000004d4: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1236
    000004d9: 	movq	0x90(%rsp), %rdi
    000004e1: 	cmpq	%r13, %rdi
    000004e4: 	je	.Ltmp1457 # Offset: 1252
    000004e6: 	movq	0xa0(%rsp), %rax
    000004ee: 	leaq	0x1(%rax), %rsi
    000004f2: 	callq	_ZdlPvm@PLT # Offset: 1266
.Ltmp1457:
    000004f7: 	movq	0x58(%rsp), %rbx
    000004fc: 	movq	0x50(%rsp), %rbp
    00000501: 	cmpq	%rbp, %rbx
    00000504: 	jne	.Ltmp1458 # Offset: 1284
    00000506: 	jmp	.Ltmp1459 # Offset: 1286
    00000508: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1461:
    00000510: 	addq	$0x10, %rbp
    00000514: 	cmpq	%rbp, %rbx
    00000517: 	je	.Ltmp1460 # Offset: 1303
.Ltmp1458:
    00000519: 	movq	0x8(%rbp), %r12
    0000051d: 	testq	%r12, %r12
    00000520: 	je	.Ltmp1461 # Offset: 1312
    00000522: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000529: 	je	.Ltmp1462 # Offset: 1321
    0000052f: 	movl	0x8(%r12), %eax
    00000534: 	leal	-0x1(%rax), %edx
    00000537: 	movl	%edx, 0x8(%r12)
.Ltmp1475:
    0000053c: 	cmpl	$0x1, %eax
    0000053f: 	jne	.Ltmp1461 # Offset: 1343
    00000541: 	movq	(%r12), %rax
    00000545: 	movq	%r12, %rdi
    00000548: 	callq	*0x10(%rax) # Offset: 1352
    0000054b: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000552: 	je	.Ltmp1463 # Offset: 1362
    00000558: 	movl	0xc(%r12), %eax
    0000055d: 	leal	-0x1(%rax), %edx
    00000560: 	movl	%edx, 0xc(%r12)
.Ltmp1479:
    00000565: 	cmpl	$0x1, %eax
    00000568: 	jne	.Ltmp1461 # Offset: 1384
    0000056a: 	movq	(%r12), %rax
    0000056e: 	addq	$0x10, %rbp
    00000572: 	movq	%r12, %rdi
    00000575: 	callq	*0x18(%rax) # Offset: 1397
    00000578: 	cmpq	%rbp, %rbx
    0000057b: 	jne	.Ltmp1458 # Offset: 1403
.Ltmp1460:
    0000057d: 	movq	0x50(%rsp), %rbp
.Ltmp1459:
    00000582: 	testq	%rbp, %rbp
    00000585: 	je	.Ltmp1464 # Offset: 1413
    00000587: 	movq	0x60(%rsp), %rsi
    0000058c: 	movq	%rbp, %rdi
    0000058f: 	subq	%rbp, %rsi
    00000592: 	callq	_ZdlPvm@PLT # Offset: 1426
.Ltmp1464:
    00000597: 	movq	0x38(%rsp), %rbx
    0000059c: 	movq	0x30(%rsp), %rbp
    000005a1: 	cmpq	%rbp, %rbx
    000005a4: 	jne	.Ltmp1465 # Offset: 1444
    000005a6: 	jmp	.Ltmp1466 # Offset: 1446
    000005a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1468:
    000005b0: 	addq	$0x10, %rbp
    000005b4: 	cmpq	%rbp, %rbx
    000005b7: 	je	.Ltmp1467 # Offset: 1463
.Ltmp1465:
    000005b9: 	movq	0x8(%rbp), %r12
    000005bd: 	testq	%r12, %r12
    000005c0: 	je	.Ltmp1468 # Offset: 1472
    000005c2: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000005c9: 	je	.Ltmp1469 # Offset: 1481
    000005cf: 	movl	0x8(%r12), %eax
    000005d4: 	leal	-0x1(%rax), %edx
    000005d7: 	movl	%edx, 0x8(%r12)
.Ltmp1476:
    000005dc: 	cmpl	$0x1, %eax
    000005df: 	jne	.Ltmp1468 # Offset: 1503
    000005e1: 	movq	(%r12), %rax
    000005e5: 	movq	%r12, %rdi
    000005e8: 	callq	*0x10(%rax) # Offset: 1512
    000005eb: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000005f2: 	je	.Ltmp1470 # Offset: 1522
    000005f8: 	movl	0xc(%r12), %eax
    000005fd: 	leal	-0x1(%rax), %edx
    00000600: 	movl	%edx, 0xc(%r12)
.Ltmp1477:
    00000605: 	cmpl	$0x1, %eax
    00000608: 	jne	.Ltmp1468 # Offset: 1544
    0000060a: 	movq	(%r12), %rax
    0000060e: 	addq	$0x10, %rbp
    00000612: 	movq	%r12, %rdi
    00000615: 	callq	*0x18(%rax) # Offset: 1557
    00000618: 	cmpq	%rbp, %rbx
    0000061b: 	jne	.Ltmp1465 # Offset: 1563
.Ltmp1467:
    0000061d: 	movq	0x30(%rsp), %rbp
.Ltmp1466:
    00000622: 	testq	%rbp, %rbp
    00000625: 	je	.Ltmp1471 # Offset: 1573
    00000627: 	movq	0x40(%rsp), %rsi
    0000062c: 	movq	%rbp, %rdi
    0000062f: 	subq	%rbp, %rsi
    00000632: 	callq	_ZdlPvm@PLT # Offset: 1586
.Ltmp1471:
    00000637: 	movq	0xb8(%rsp), %rax
    0000063f: 	subq	%fs:0x28, %rax
    00000648: 	jne	.Ltmp1472 # Offset: 1608
    0000064e: 	addq	$0xc8, %rsp
    00000655: 	popq	%rbx
    00000656: 	popq	%rbp
    00000657: 	popq	%r12
    00000659: 	popq	%r13
    0000065b: 	popq	%r14
    0000065d: 	popq	%r15
    0000065f: 	retq # Offset: 1631
.Ltmp1444:
    00000660: 	testq	%rbx, %rbx
    00000663: 	jne	.Ltmp1473 # Offset: 1635
    00000669: 	movq	%r13, %rax
    0000066c: 	jmp	.Ltmp1474 # Offset: 1644
.Ltmp1462:
    00000671: 	movl	$0xffffffff, %eax
    00000676: 	lock # Offset: 1654
    00000677: 	xaddl	%eax, 0x8(%r12)
    0000067d: 	jmp	.Ltmp1475 # Offset: 1661
.Ltmp1469:
    00000682: 	movl	$0xffffffff, %eax
    00000687: 	lock # Offset: 1671
    00000688: 	xaddl	%eax, 0x8(%r12)
    0000068e: 	jmp	.Ltmp1476 # Offset: 1678
.Ltmp1470:
    00000693: 	movl	$0xffffffff, %eax
    00000698: 	lock # Offset: 1688
    00000699: 	xaddl	%eax, 0xc(%r12)
    0000069f: 	jmp	.Ltmp1477 # Offset: 1695
.Ltmp1436:
    000006a4: 	leaq	DATAat0x1710f(%rip), %rsi
    000006ab: 	movl	$0x1, %edi
    000006b0: 	xorl	%eax, %eax
    000006b2: 	callq	__printf_chk@PLT # Offset: 1714
    000006b7: 	movq	0x90(%rsp), %rdx
    000006bf: 	jmp	.Ltmp1478 # Offset: 1727
.Ltmp1463:
    000006c4: 	movl	$0xffffffff, %eax
    000006c9: 	lock # Offset: 1737
    000006ca: 	xaddl	%eax, 0xc(%r12)
    000006d0: 	jmp	.Ltmp1479 # Offset: 1744
.Ltmp1452:
    000006d5: 	testq	%rbx, %rbx
    000006d8: 	jne	.Ltmp1480 # Offset: 1752
    000006de: 	movq	%r13, %rax
    000006e1: 	jmp	.Ltmp1481 # Offset: 1761
.Ltmp1451:
    000006e6: 	leaq	0x28(%rsp), %rsi
    000006eb: 	xorl	%edx, %edx
    000006ed: 	movq	%r12, %rdi
    000006f0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1776
    000006f5: 	movq	%rax, 0x90(%rsp)
    000006fd: 	movq	%rax, %rdi
    00000700: 	movq	0x28(%rsp), %rax
    00000705: 	movq	%rax, 0xa0(%rsp)
.Ltmp1483:
    0000070d: 	movq	%rbx, %rdx
    00000710: 	movq	%rbp, %rsi
    00000713: 	callq	memcpy@PLT # Offset: 1811
    00000718: 	movq	0x28(%rsp), %rbx
    0000071d: 	movq	0x90(%rsp), %rax
    00000725: 	jmp	.Ltmp1481 # Offset: 1829
.Ltmp1443:
    0000072a: 	leaq	0x28(%rsp), %rsi
    0000072f: 	xorl	%edx, %edx
    00000731: 	movq	%r12, %rdi
    00000734: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1844
    00000739: 	movq	%rax, 0x90(%rsp)
    00000741: 	movq	%rax, %rdi
    00000744: 	movq	0x28(%rsp), %rax
    00000749: 	movq	%rax, 0xa0(%rsp)
.Ltmp1482:
    00000751: 	movq	%rbx, %rdx
    00000754: 	movq	%rbp, %rsi
    00000757: 	callq	memcpy@PLT # Offset: 1879
    0000075c: 	movq	0x28(%rsp), %rbx
    00000761: 	movq	0x90(%rsp), %rax
    00000769: 	jmp	.Ltmp1474 # Offset: 1897
.Ltmp1445:
    0000076e: 	leaq	DATAat0x17123(%rip), %rdi
    00000775: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 1909
.Ltmp1450:
    0000077a: 	leaq	DATAat0x17008(%rip), %rdi
    00000781: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1921
.Ltmp1453:
    00000786: 	leaq	DATAat0x17123(%rip), %rdi
    0000078d: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 1933
.Ltmp1473:
    00000792: 	movq	%r13, %rdi
    00000795: 	jmp	.Ltmp1482 # Offset: 1941
.Ltmp1472:
    00000797: 	callq	__stack_chk_fail@PLT # Offset: 1943
.Ltmp1480:
    0000079c: 	movq	%r13, %rdi
    0000079f: 	jmp	.Ltmp1483 # Offset: 1951
.Ltmp1442:
    000007a4: 	leaq	DATAat0x17008(%rip), %rdi
    000007ab: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1963
    000007b0: 	endbr64
    000007b4: 	movq	%rax, %rbx
    000007b7: 	jmp	.Ltmp1484 # Offset: 1975
    000007b9: 	endbr64
    000007bd: 	movq	%rax, %rbx
    000007c0: 	jmp	.Ltmp1485 # Offset: 1984
.Ltmp1484:
    000007c2: 	movq	0x90(%rsp), %rdi
    000007ca: 	cmpq	%r13, %rdi
    000007cd: 	je	.Ltmp1485 # Offset: 1997
    000007cf: 	movq	0xa0(%rsp), %rax
    000007d7: 	leaq	0x1(%rax), %rsi
    000007db: 	callq	_ZdlPvm@PLT # Offset: 2011
.Ltmp1485:
    000007e0: 	movq	0x8(%rsp), %rdi
    000007e5: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev # Offset: 2021
    000007ea: 	movq	%rbx, %rdi
    000007ed: 	callq	_Unwind_Resume@PLT # Offset: 2029
    000007f2: 	endbr64
.Ltmp1487:
    000007f6: 	movq	%rax, %rbx
    000007f9: 	jmp	.Ltmp1486 # Offset: 2041
    000007fb: 	endbr64
    000007ff: 	jmp	.Ltmp1487 # Offset: 2047
    00000801: 	endbr64
    00000805: 	movq	%rax, %rbx
    00000808: 	jmp	.Ltmp1488 # Offset: 2056
    0000080a: 	endbr64
    0000080e: 	jmp	.Ltmp1487 # Offset: 2062
    00000810: 	endbr64
    00000814: 	movq	%rax, %rbx
    00000817: 	jmp	.Ltmp1489 # Offset: 2071
.Ltmp1486:
    00000819: 	movq	0x90(%rsp), %rdi
    00000821: 	cmpq	%r13, %rdi
    00000824: 	je	.Ltmp1489 # Offset: 2084
    00000826: 	movq	0xa0(%rsp), %rax
    0000082e: 	leaq	0x1(%rax), %rsi
    00000832: 	callq	_ZdlPvm@PLT # Offset: 2098
.Ltmp1489:
    00000837: 	movq	%r15, %rdi
    0000083a: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi1EEESaIS3_EED1Ev # Offset: 2106
    0000083f: 	jmp	.Ltmp1485 # Offset: 2111
    00000841: 	endbr64
.Ltmp1490:
    00000845: 	movq	%rax, %rbx
    00000848: 	movq	0x90(%rsp), %rdi
    00000850: 	cmpq	%r13, %rdi
    00000853: 	je	.Ltmp1488 # Offset: 2131
    00000855: 	movq	0xa0(%rsp), %rax
    0000085d: 	leaq	0x1(%rax), %rsi
    00000861: 	callq	_ZdlPvm@PLT # Offset: 2145
.Ltmp1488:
    00000866: 	movq	0x70(%rsp), %rdi
    0000086b: 	leaq	0x80(%rsp), %rax
    00000873: 	cmpq	%rax, %rdi
    00000876: 	je	.Ltmp1489 # Offset: 2166
    00000878: 	movq	0x80(%rsp), %rax
    00000880: 	leaq	0x1(%rax), %rsi
    00000884: 	callq	_ZdlPvm@PLT # Offset: 2180
    00000889: 	jmp	.Ltmp1489 # Offset: 2185
    0000088b: 	endbr64
    0000088f: 	jmp	.Ltmp1490 # Offset: 2191
    00000891: 	endbr64
    00000895: 	jmp	.Ltmp1487 # Offset: 2197
    0000089a: 	endbr64
    0000089e: 	jmp	.Ltmp1487 # Offset: 2206
    000008a3: 	endbr64
    000008a7: 	jmp	.Ltmp1487 # Offset: 2215
    000008ac: 	endbr64
    000008b0: 	jmp	.Ltmp1487 # Offset: 2224
    000008b5: 	endbr64
    000008b9: 	jmp	.Ltmp1487 # Offset: 2233
    000008be: 	endbr64
    000008c2: 	jmp	.Ltmp1487 # Offset: 2242
    000008c7: 	endbr64
    000008cb: 	movq	%rax, %rbp
    000008ce: 	movq	0x90(%rsp), %rdi
    000008d6: 	leaq	0xa0(%rsp), %rax
    000008de: 	cmpq	%rax, %rdi
    000008e1: 	je	.Ltmp1491 # Offset: 2273
    000008e3: 	movq	0xa0(%rsp), %rax
    000008eb: 	leaq	0x1(%rax), %rsi
    000008ef: 	callq	_ZdlPvm@PLT # Offset: 2287
.Ltmp1491:
    000008f4: 	movq	%rbp, %rdi
    000008f7: 	callq	_Unwind_Resume@PLT # Offset: 2295
DWARF CFI Instructions:
    <empty>
End of Function "_Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_" after disassembly {
  Number      : 134
  State       : disassembled
  Address     : 0xf600
  Size        : 0x1d8
  MaxSize     : 0x1e0
  Offset      : 0xf600
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0133:
    00000000: 	endbr64
    00000004: 	movq	%rsi, %rax
    00000007: 	subq	%rdi, %rax
    0000000a: 	cmpq	$0x80, %rax
    00000010: 	jle	.Ltmp1492 # Offset: 16
    00000016: 	pushq	%r13
    00000018: 	movq	%rdx, %r13
    0000001b: 	pushq	%r12
    0000001d: 	movq	%rdi, %r12
    00000020: 	pushq	%rbp
    00000021: 	pushq	%rbx
    00000022: 	movq	%rsi, %rbx
    00000025: 	subq	$0x8, %rsp
    00000029: 	testq	%rdx, %rdx
    0000002c: 	je	.Ltmp1493 # Offset: 44
    00000032: 	movq	%rsi, %r8
    00000035: 	leaq	0x8(%r12), %rbp
.Ltmp1505:
    0000003a: 	movq	%r8, %rax
    0000003d: 	movdqu	(%r12), %xmm0
    00000043: 	movq	-0x8(%r8), %r10
    00000047: 	subq	$0x1, %r13
    0000004b: 	subq	%r12, %rax
    0000004e: 	movq	%rax, %rdx
    00000051: 	shrq	$0x3f, %rax
    00000055: 	movdqa	%xmm0, %xmm1
    00000059: 	movq	(%r10), %rsi
    0000005c: 	sarq	$0x3, %rdx
    00000060: 	shufpd	$0x1, %xmm0, %xmm1
    00000065: 	addq	%rdx, %rax
    00000068: 	movq	%xmm0, %rdx
    0000006d: 	sarq	%rax
    00000070: 	leaq	(%r12,%rax,8), %rdi
    00000074: 	movq	0x8(%r12), %rax
    00000079: 	movq	(%rdi), %r9
    0000007c: 	movq	(%rax), %rcx
    0000007f: 	movq	(%r9), %rax
    00000082: 	cmpq	%rax, %rcx
    00000085: 	jge	.Ltmp1494 # Offset: 133
    00000087: 	cmpq	%rsi, %rax
    0000008a: 	jl	.Ltmp1495 # Offset: 138
    00000090: 	cmpq	%rsi, %rcx
    00000093: 	jl	.Ltmp1496 # Offset: 147
.Ltmp1502:
    00000095: 	movups	%xmm1, (%r12)
    0000009a: 	movq	-0x8(%r8), %rsi
.Ltmp1503:
    0000009e: 	movq	%r8, %rax
    000000a1: 	movq	%rbp, %rbx
    000000a4: 	jmp	.Ltmp1497 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1498:
    000000b0: 	movq	0x8(%rbx), %rdx
    000000b4: 	addq	$0x8, %rbx
.Ltmp1497:
    000000b8: 	cmpq	%rcx, (%rdx)
    000000bb: 	jl	.Ltmp1498 # Offset: 187
    000000bd: 	subq	$0x8, %rax
    000000c1: 	cmpq	%rcx, (%rsi)
    000000c4: 	jle	.Ltmp1499 # Offset: 196
    000000c6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1500:
    000000d0: 	movq	-0x8(%rax), %rsi
    000000d4: 	subq	$0x8, %rax
    000000d8: 	cmpq	%rcx, (%rsi)
    000000db: 	jg	.Ltmp1500 # Offset: 219
.Ltmp1499:
    000000dd: 	cmpq	%rbx, %rax
    000000e0: 	jbe	.Ltmp1501 # Offset: 224
    000000e2: 	movq	%rsi, (%rbx)
    000000e5: 	addq	$0x8, %rbx
    000000e9: 	movq	-0x8(%rax), %rsi
    000000ed: 	movq	%rdx, (%rax)
    000000f0: 	movq	(%r12), %rcx
    000000f4: 	movq	(%rbx), %rdx
    000000f7: 	movq	(%rcx), %rcx
    000000fa: 	jmp	.Ltmp1497 # Offset: 250
.Ltmp1494:
    000000fc: 	cmpq	%rsi, %rcx
    000000ff: 	jl	.Ltmp1502 # Offset: 255
    00000101: 	cmpq	%rsi, %rax
    00000104: 	jge	.Ltmp1495 # Offset: 260
.Ltmp1496:
    00000106: 	movq	%r10, (%r12)
    0000010a: 	movq	%rdx, %rsi
    0000010d: 	movq	%rdx, -0x8(%r8)
    00000111: 	movq	(%r12), %rax
    00000115: 	movq	0x8(%r12), %rdx
    0000011a: 	movq	(%rax), %rcx
    0000011d: 	jmp	.Ltmp1503 # Offset: 285
    00000122: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1501:
    00000128: 	movq	%r13, %rdx
    0000012b: 	movq	%r8, %rsi
    0000012e: 	movq	%rbx, %rdi
    00000131: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_ # Offset: 305
    00000136: 	movq	%rbx, %rax
    00000139: 	subq	%r12, %rax
    0000013c: 	cmpq	$0x80, %rax
    00000142: 	jle	.Ltmp1504 # Offset: 322
    00000148: 	testq	%r13, %r13
    0000014b: 	je	.Ltmp1493 # Offset: 331
    0000014d: 	movq	%rbx, %r8
    00000150: 	jmp	.Ltmp1505 # Offset: 336
.Ltmp1495:
    00000155: 	movq	%r9, (%r12)
    00000159: 	movq	%rdx, (%rdi)
    0000015c: 	movq	(%r12), %rax
    00000160: 	movq	0x8(%r12), %rdx
    00000165: 	movq	-0x8(%r8), %rsi
    00000169: 	movq	(%rax), %rcx
    0000016c: 	jmp	.Ltmp1503 # Offset: 364
.Ltmp1493:
    00000171: 	sarq	$0x3, %rax
    00000175: 	leaq	-0x2(%rax), %r13
    00000179: 	movq	%rax, %rbp
    0000017c: 	sarq	%r13
    0000017f: 	jmp	.Ltmp1506 # Offset: 383
.Ltmp1507:
    00000181: 	subq	$0x1, %r13
.Ltmp1506:
    00000185: 	movq	(%r12,%r13,8), %rcx
    00000189: 	movq	%rbp, %rdx
    0000018c: 	movq	%r13, %rsi
    0000018f: 	movq	%r12, %rdi
    00000192: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1" # Offset: 402
    00000197: 	testq	%r13, %r13
    0000019a: 	jne	.Ltmp1507 # Offset: 410
    0000019c: 	subq	$0x8, %rbx
.Ltmp1508:
    000001a0: 	movq	(%r12), %rax
    000001a4: 	movq	%rbx, %rbp
    000001a7: 	movq	(%rbx), %rcx
    000001aa: 	xorl	%esi, %esi
    000001ac: 	subq	%r12, %rbp
    000001af: 	movq	%r12, %rdi
    000001b2: 	subq	$0x8, %rbx
    000001b6: 	movq	%rax, 0x8(%rbx)
    000001ba: 	movq	%rbp, %rdx
    000001bd: 	sarq	$0x3, %rdx
    000001c1: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElS4_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_T0_SQ_T1_T2_.isra.0/1" # Offset: 449
    000001c6: 	cmpq	$0x8, %rbp
    000001ca: 	jg	.Ltmp1508 # Offset: 458
.Ltmp1504:
    000001cc: 	addq	$0x8, %rsp
    000001d0: 	popq	%rbx
    000001d1: 	popq	%rbp
    000001d2: 	popq	%r12
    000001d4: 	popq	%r13
    000001d6: 	retq # Offset: 470
.Ltmp1492:
    000001d7: 	retq # Offset: 471
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_"

Binary Function "_Z12StdSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 135
  State       : disassembled
  Address     : 0xf7e0
  Size        : 0x349
  MaxSize     : 0x350
  Offset      : 0xf7e0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0134:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	movq	%rsi, %r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%rbp), %r13
    00000031: 	movq	(%rbp), %r14
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	cmpq	%r13, %r14
    0000003f: 	je	.Ltmp1509 # Offset: 63
    00000045: 	movq	%r13, %r15
    00000048: 	movl	$0x3f, %edx
    0000004d: 	movq	%r13, %rsi
    00000050: 	movq	%r14, %rdi
    00000053: 	subq	%r14, %r15
    00000056: 	leaq	0x8(%r14), %rbx
    0000005a: 	movq	%r15, %rax
    0000005d: 	sarq	$0x3, %rax
    00000061: 	bsrq	%rax, %rax
    00000065: 	xorq	$0x3f, %rax
    00000069: 	subl	%eax, %edx
    0000006b: 	movslq	%edx, %rdx
    0000006e: 	addq	%rdx, %rdx
    00000071: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPP17VariableContainerIlLi13EESt6vectorIS4_SaIS4_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS4_EvRS6_IT_SaISD_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS4_SN_E_EEEvSD_SD_T0_T1_ # Offset: 113
    00000076: 	cmpq	$0x80, %r15
    0000007d: 	jle	.Ltmp1510 # Offset: 125
    00000083: 	leaq	0x80(%r14), %r15
    0000008a: 	jmp	.Ltmp1511 # Offset: 138
    0000008c: 	nopl	(%rax) # Size: 4
.Ltmp1514:
    00000090: 	cmpq	%rbx, %r14
    00000093: 	je	.Ltmp1512 # Offset: 147
    00000095: 	movl	$0x8, %eax
    0000009a: 	movq	%rbx, %rdx
    0000009d: 	movq	%r14, %rsi
    000000a0: 	movq	%r8, 0x8(%rsp)
    000000a5: 	subq	%r14, %rdx
    000000a8: 	leaq	(%r14,%rax), %rdi
    000000ac: 	callq	memmove@PLT # Offset: 172
    000000b1: 	movq	0x8(%rsp), %r8
.Ltmp1512:
    000000b6: 	addq	$0x8, %rbx
    000000ba: 	movq	%r8, (%r14)
    000000bd: 	cmpq	%rbx, %r15
    000000c0: 	je	.Ltmp1513 # Offset: 192
.Ltmp1511:
    000000c2: 	movq	(%rbx), %r8
    000000c5: 	movq	(%r14), %rax
    000000c8: 	movq	(%r8), %rsi
    000000cb: 	cmpq	(%rax), %rsi
    000000ce: 	jl	.Ltmp1514 # Offset: 206
    000000d0: 	movq	-0x8(%rbx), %rdx
    000000d4: 	leaq	-0x8(%rbx), %rax
    000000d8: 	cmpq	(%rdx), %rsi
    000000db: 	jge	.Ltmp1515 # Offset: 219
    000000e1: 	nopl	(%rax) # Size: 7
.Ltmp1516:
    000000e8: 	movq	%rdx, 0x8(%rax)
    000000ec: 	movq	%rax, %rdi
    000000ef: 	movq	-0x8(%rax), %rdx
    000000f3: 	subq	$0x8, %rax
    000000f7: 	cmpq	(%rdx), %rsi
    000000fa: 	jl	.Ltmp1516 # Offset: 250
.Ltmp1533:
    000000fc: 	addq	$0x8, %rbx
    00000100: 	movq	%r8, (%rdi)
    00000103: 	cmpq	%rbx, %r15
    00000106: 	jne	.Ltmp1511 # Offset: 262
.Ltmp1513:
    00000108: 	cmpq	%r15, %r13
    0000010b: 	je	.Ltmp1509 # Offset: 267
    0000010d: 	nopl	(%rax) # Size: 3
.Ltmp1519:
    00000110: 	movq	(%r15), %rdi
    00000113: 	movq	-0x8(%r15), %rdx
    00000117: 	leaq	-0x8(%r15), %rax
    0000011b: 	movq	(%rdi), %rcx
    0000011e: 	cmpq	(%rdx), %rcx
    00000121: 	jge	.Ltmp1517 # Offset: 289
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1518:
    00000130: 	movq	%rdx, 0x8(%rax)
    00000134: 	movq	%rax, %rsi
    00000137: 	movq	-0x8(%rax), %rdx
    0000013b: 	subq	$0x8, %rax
    0000013f: 	cmpq	%rcx, (%rdx)
    00000142: 	jg	.Ltmp1518 # Offset: 322
    00000144: 	addq	$0x8, %r15
    00000148: 	movq	%rdi, (%rsi)
    0000014b: 	cmpq	%r15, %r13
    0000014e: 	jne	.Ltmp1519 # Offset: 334
.Ltmp1509:
    00000150: 	callq	clock@PLT # Offset: 336
    00000155: 	movq	(%r12), %rsi
    00000159: 	movq	0x8(%r12), %rdx
    0000015e: 	leaq	0x10(%rsp), %r13
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	%r13, %rdi
    0000016d: 	pxor	%xmm0, %xmm0
    00000171: 	subq	start_time(%rip), %rax
    00000178: 	addq	%rsi, %rdx
    0000017b: 	cvtsi2sd	%rax, %xmm0
    00000180: 	leaq	0x20(%rsp), %rbx
    00000185: 	divsd	DATAat0x17370(%rip), %xmm0
    0000018d: 	movq	%rbx, 0x10(%rsp)
    00000192: 	movsd	%xmm0, 0x8(%rsp)
    00000198: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 408
    0000019d: 	movq	0x8(%rbp), %rdi
    000001a1: 	movq	0x18(%rsp), %rdx
    000001a6: 	subq	(%rbp), %rdi
    000001aa: 	movq	0x10(%rsp), %rsi
    000001af: 	movsd	0x8(%rsp), %xmm0
    000001b5: 	sarq	$0x3, %rdi
    000001b9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 441
    000001be: 	movq	0x10(%rsp), %rdi
    000001c3: 	cmpq	%rbx, %rdi
    000001c6: 	je	.Ltmp1520 # Offset: 454
    000001c8: 	movq	0x20(%rsp), %rax
    000001cd: 	leaq	0x1(%rax), %rsi
    000001d1: 	callq	_ZdlPvm@PLT # Offset: 465
.Ltmp1520:
    000001d6: 	movq	(%r12), %rsi
    000001da: 	movq	0x8(%r12), %rdx
    000001df: 	movq	%r13, %rdi
    000001e2: 	movq	%rbx, 0x10(%rsp)
    000001e7: 	addq	%rsi, %rdx
    000001ea: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 490
    000001ef: 	movq	(%rbp), %rax
    000001f3: 	movq	0x8(%rbp), %rsi
    000001f7: 	addq	$0x8, %rax
    000001fb: 	jmp	.Ltmp1521 # Offset: 507
    000001fd: 	nopl	(%rax) # Size: 3
.Ltmp1523:
    00000200: 	movq	(%rdx), %rcx
    00000203: 	movq	-0x8(%rdx), %rdx
    00000207: 	addq	$0x8, %rax
    0000020b: 	movq	(%rdx), %rdi
    0000020e: 	cmpq	%rdi, (%rcx)
    00000211: 	jl	.Ltmp1522 # Offset: 529
.Ltmp1521:
    00000217: 	movq	%rax, %rdx
    0000021a: 	cmpq	%rax, %rsi
    0000021d: 	jne	.Ltmp1523 # Offset: 541
.Ltmp1531:
    0000021f: 	movq	0x10(%rsp), %rdi
    00000224: 	cmpq	%rbx, %rdi
    00000227: 	je	.Ltmp1524 # Offset: 551
    00000229: 	movq	0x20(%rsp), %rax
    0000022e: 	leaq	0x1(%rax), %rsi
    00000232: 	callq	_ZdlPvm@PLT # Offset: 562
.Ltmp1524:
    00000237: 	movq	0x38(%rsp), %rax
    0000023c: 	subq	%fs:0x28, %rax
    00000245: 	jne	.Ltmp1525 # Offset: 581
    0000024b: 	addq	$0x48, %rsp
    0000024f: 	popq	%rbx
    00000250: 	popq	%rbp
    00000251: 	popq	%r12
    00000253: 	popq	%r13
    00000255: 	popq	%r14
    00000257: 	popq	%r15
    00000259: 	retq # Offset: 601
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1527:
    00000260: 	cmpq	%rbx, %r14
    00000263: 	je	.Ltmp1526 # Offset: 611
    00000265: 	movq	%rbx, %rdx
    00000268: 	movl	$0x8, %eax
    0000026d: 	movq	%r14, %rsi
    00000270: 	subq	%r14, %rdx
    00000273: 	leaq	(%r14,%rax), %rdi
    00000277: 	callq	memmove@PLT # Offset: 631
.Ltmp1526:
    0000027c: 	movq	%r15, (%r14)
.Ltmp1530:
    0000027f: 	addq	$0x8, %rbx
.Ltmp1510:
    00000283: 	cmpq	%rbx, %r13
    00000286: 	je	.Ltmp1509 # Offset: 646
    0000028c: 	movq	(%rbx), %r15
    0000028f: 	movq	(%r14), %rax
    00000292: 	movq	(%r15), %rsi
    00000295: 	cmpq	(%rax), %rsi
    00000298: 	jl	.Ltmp1527 # Offset: 664
    0000029a: 	movq	-0x8(%rbx), %rdx
    0000029e: 	leaq	-0x8(%rbx), %rax
    000002a2: 	cmpq	(%rdx), %rsi
    000002a5: 	jge	.Ltmp1528 # Offset: 677
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1529:
    000002b0: 	movq	%rdx, 0x8(%rax)
    000002b4: 	movq	%rax, %rdi
    000002b7: 	movq	-0x8(%rax), %rdx
    000002bb: 	subq	$0x8, %rax
    000002bf: 	cmpq	(%rdx), %rsi
    000002c2: 	jl	.Ltmp1529 # Offset: 706
.Ltmp1532:
    000002c4: 	movq	%r15, (%rdi)
    000002c7: 	jmp	.Ltmp1530 # Offset: 711
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp1522:
    000002d0: 	movq	0x10(%rsp), %rdx
    000002d5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002dc: 	movl	$0x1, %edi
    000002e1: 	xorl	%eax, %eax
    000002e3: 	callq	__printf_chk@PLT # Offset: 739
    000002e8: 	jmp	.Ltmp1531 # Offset: 744
    000002ed: 	nopl	(%rax) # Size: 3
.Ltmp1517:
    000002f0: 	movq	%r15, %rsi
    000002f3: 	addq	$0x8, %r15
    000002f7: 	movq	%rdi, (%rsi)
    000002fa: 	cmpq	%r15, %r13
    000002fd: 	jne	.Ltmp1519 # Offset: 765
    00000303: 	jmp	.Ltmp1509 # Offset: 771
.Ltmp1528:
    00000308: 	movq	%rbx, %rdi
    0000030b: 	jmp	.Ltmp1532 # Offset: 779
.Ltmp1515:
    0000030d: 	movq	%rbx, %rdi
    00000310: 	jmp	.Ltmp1533 # Offset: 784
.Ltmp1525:
    00000315: 	callq	__stack_chk_fail@PLT # Offset: 789
    0000031a: 	endbr64
.Ltmp1535:
    0000031e: 	movq	%rax, %rbp
    00000321: 	jmp	.Ltmp1534 # Offset: 801
    00000323: 	endbr64
    00000327: 	jmp	.Ltmp1535 # Offset: 807
.Ltmp1534:
    00000329: 	movq	0x10(%rsp), %rdi
    0000032e: 	cmpq	%rbx, %rdi
    00000331: 	je	.Ltmp1536 # Offset: 817
    00000333: 	movq	0x20(%rsp), %rax
    00000338: 	leaq	0x1(%rax), %rsi
    0000033c: 	callq	_ZdlPvm@PLT # Offset: 828
.Ltmp1536:
    00000341: 	movq	%rbp, %rdi
    00000344: 	callq	_Unwind_Resume@PLT # Offset: 836
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_" after disassembly {
  Number      : 136
  State       : disassembled
  Address     : 0xfb30
  Size        : 0x460
  MaxSize     : 0x460
  Offset      : 0xfb30
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0135:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x28(%rsp)
    00000020: 	movq	%rsi, %rax
    00000023: 	subq	%rdi, %rax
    00000026: 	cmpq	$0x100, %rax
    0000002c: 	jle	.Ltmp1537 # Offset: 44
    00000032: 	movq	%rdi, %r12
    00000035: 	movq	%rdx, %r13
    00000038: 	movq	%rsi, %rbp
    0000003b: 	testq	%rdx, %rdx
    0000003e: 	je	.Ltmp1538 # Offset: 62
    00000044: 	movq	%rsi, %r8
    00000047: 	leaq	0x10(%r12), %rbx
.Ltmp1550:
    0000004c: 	movq	%r8, %rax
    0000004f: 	movq	0x10(%r12), %rsi
    00000054: 	movq	-0x10(%r8), %r11
    00000058: 	subq	$0x1, %r13
    0000005c: 	subq	%r12, %rax
    0000005f: 	movdqu	(%r12), %xmm0
    00000065: 	movq	%rax, %rdx
    00000068: 	shrq	$0x3f, %rax
    0000006c: 	movq	(%rsi), %rcx
    0000006f: 	movq	(%r11), %r9
    00000072: 	sarq	$0x4, %rdx
    00000076: 	movdqa	%xmm0, %xmm1
    0000007a: 	addq	%rdx, %rax
    0000007d: 	movhps	0x8(%r12), %xmm1
    00000083: 	movq	%xmm0, %rdx
    00000088: 	sarq	%rax
    0000008b: 	shlq	$0x4, %rax
    0000008f: 	addq	%r12, %rax
    00000092: 	movq	(%rax), %r10
    00000095: 	movq	(%r10), %rdi
    00000098: 	cmpq	%rdi, %rcx
    0000009b: 	jge	.Ltmp1539 # Offset: 155
    000000a1: 	cmpq	%r9, %rdi
    000000a4: 	jl	.Ltmp1540 # Offset: 164
    000000aa: 	cmpq	%r9, %rcx
    000000ad: 	jl	.Ltmp1541 # Offset: 173
.Ltmp1551:
    000000b3: 	movq	%rsi, %xmm0
    000000b8: 	movhps	0x18(%r12), %xmm0
    000000be: 	movups	%xmm1, 0x10(%r12)
    000000c4: 	movups	%xmm0, (%r12)
    000000c9: 	movq	-0x10(%r8), %rsi
.Ltmp1552:
    000000cd: 	movq	%r8, %rdi
    000000d0: 	movq	%rbx, %rax
    000000d3: 	cmpq	(%rdx), %rcx
    000000d6: 	jle	.Ltmp1542 # Offset: 214
    000000d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1547:
    000000e0: 	addq	$0x10, %rax
    000000e4: 	nopl	(%rax) # Size: 4
.Ltmp1543:
    000000e8: 	movq	(%rax), %rdx
    000000eb: 	movq	%rax, %rbp
    000000ee: 	addq	$0x10, %rax
    000000f2: 	cmpq	(%rdx), %rcx
    000000f5: 	jg	.Ltmp1543 # Offset: 245
    000000f7: 	leaq	-0x10(%rdi), %rax
    000000fb: 	cmpq	(%rsi), %rcx
    000000fe: 	jge	.Ltmp1544 # Offset: 254
.Ltmp1548:
    00000100: 	leaq	-0x20(%rdi), %rax
    00000104: 	nopl	(%rax) # Size: 4
.Ltmp1545:
    00000108: 	movq	(%rax), %rsi
    0000010b: 	movq	%rax, %rdi
    0000010e: 	subq	$0x10, %rax
    00000112: 	cmpq	(%rsi), %rcx
    00000115: 	jl	.Ltmp1545 # Offset: 277
    00000117: 	cmpq	%rdi, %rbp
    0000011a: 	jae	.Ltmp1546 # Offset: 282
.Ltmp1549:
    0000011c: 	movq	%rdx, %xmm0
    00000121: 	movq	%rsi, (%rbp)
    00000125: 	movq	0x8(%rdi), %rax
    00000129: 	movhps	0x8(%rbp), %xmm0
    0000012d: 	movq	-0x10(%rdi), %rsi
    00000131: 	movups	%xmm0, (%rdi)
    00000134: 	movq	(%r12), %rdx
    00000138: 	movq	%rax, 0x8(%rbp)
    0000013c: 	leaq	0x10(%rbp), %rax
    00000140: 	movq	(%rdx), %rcx
    00000143: 	movq	0x10(%rbp), %rdx
    00000147: 	cmpq	(%rdx), %rcx
    0000014a: 	jg	.Ltmp1547 # Offset: 330
.Ltmp1542:
    0000014c: 	movq	%rax, %rbp
    0000014f: 	leaq	-0x10(%rdi), %rax
    00000153: 	cmpq	(%rsi), %rcx
    00000156: 	jl	.Ltmp1548 # Offset: 342
    00000158: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1544:
    00000160: 	movq	%rax, %rdi
    00000163: 	cmpq	%rdi, %rbp
    00000166: 	jb	.Ltmp1549 # Offset: 358
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1546:
    00000170: 	movq	%r13, %rdx
    00000173: 	movq	%r8, %rsi
    00000176: 	movq	%rbp, %rdi
    00000179: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 377
    0000017e: 	movq	%rbp, %rax
    00000181: 	subq	%r12, %rax
    00000184: 	cmpq	$0x100, %rax
    0000018a: 	jle	.Ltmp1537 # Offset: 394
    0000018c: 	testq	%r13, %r13
    0000018f: 	je	.Ltmp1538 # Offset: 399
    00000195: 	movq	%rbp, %r8
    00000198: 	jmp	.Ltmp1550 # Offset: 408
.Ltmp1539:
    0000019d: 	cmpq	%r9, %rcx
    000001a0: 	jl	.Ltmp1551 # Offset: 416
    000001a6: 	cmpq	%r9, %rdi
    000001a9: 	jge	.Ltmp1540 # Offset: 425
.Ltmp1541:
    000001ab: 	movq	-0x8(%r8), %rax
    000001af: 	movq	%r11, (%r12)
    000001b3: 	movq	%rdx, %rsi
    000001b6: 	movups	%xmm0, -0x10(%r8)
    000001bb: 	movq	0x10(%r12), %rdx
    000001c0: 	movq	%rax, 0x8(%r12)
    000001c5: 	movq	(%r12), %rax
    000001c9: 	movq	(%rax), %rcx
    000001cc: 	jmp	.Ltmp1552 # Offset: 460
.Ltmp1540:
    000001d1: 	movq	0x8(%rax), %rdx
    000001d5: 	movq	%r10, (%r12)
    000001d9: 	movups	%xmm0, (%rax)
    000001dc: 	movq	(%r12), %rax
    000001e0: 	movq	-0x10(%r8), %rsi
    000001e4: 	movq	%rdx, 0x8(%r12)
    000001e9: 	movq	0x10(%r12), %rdx
    000001ee: 	movq	(%rax), %rcx
    000001f1: 	jmp	.Ltmp1552 # Offset: 497
.Ltmp1537:
    000001f6: 	movq	0x28(%rsp), %rax
    000001fb: 	subq	%fs:0x28, %rax
    00000204: 	jne	.Ltmp1553 # Offset: 516
    0000020a: 	addq	$0x38, %rsp
    0000020e: 	popq	%rbx
    0000020f: 	popq	%rbp
    00000210: 	popq	%r12
    00000212: 	popq	%r13
    00000214: 	popq	%r14
    00000216: 	popq	%r15
    00000218: 	retq # Offset: 536
.Ltmp1538:
    00000219: 	sarq	$0x4, %rax
    0000021d: 	leaq	0x10(%rsp), %rbx
    00000222: 	leaq	-0x2(%rax), %r14
    00000226: 	movq	%rax, %r13
    00000229: 	sarq	%r14
    0000022c: 	movq	%r14, %r15
    0000022f: 	shlq	$0x4, %r15
    00000233: 	addq	%r12, %r15
    00000236: 	jmp	.Ltmp1554 # Offset: 566
.Ltmp1556:
    00000238: 	subq	$0x10, %r15
    0000023c: 	testq	%r14, %r14
    0000023f: 	je	.Ltmp1555 # Offset: 575
.Ltmp1559:
    00000245: 	subq	$0x1, %r14
.Ltmp1554:
    00000249: 	movdqu	(%r15), %xmm3
    0000024e: 	pxor	%xmm4, %xmm4
    00000252: 	movq	%r12, %rdi
    00000255: 	movq	%rbx, %rcx
    00000258: 	movups	%xmm4, (%r15)
    0000025c: 	movq	%r13, %rdx
    0000025f: 	movq	%r14, %rsi
    00000262: 	movaps	%xmm3, 0x10(%rsp)
    00000267: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1" # Offset: 615
    0000026c: 	movq	0x18(%rsp), %rdi
    00000271: 	testq	%rdi, %rdi
    00000274: 	je	.Ltmp1556 # Offset: 628
    00000276: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000027d: 	je	.Ltmp1557 # Offset: 637
    00000283: 	movl	0x8(%rdi), %eax
    00000286: 	leal	-0x1(%rax), %edx
    00000289: 	movl	%edx, 0x8(%rdi)
.Ltmp1570:
    0000028c: 	cmpl	$0x1, %eax
    0000028f: 	jne	.Ltmp1556 # Offset: 655
    00000291: 	movq	(%rdi), %rax
    00000294: 	movq	%rdi, (%rsp)
    00000298: 	callq	*0x10(%rax) # Offset: 664
    0000029b: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000002a2: 	movq	(%rsp), %rdi
    000002a6: 	je	.Ltmp1558 # Offset: 678
    000002ac: 	movl	0xc(%rdi), %eax
    000002af: 	leal	-0x1(%rax), %edx
    000002b2: 	movl	%edx, 0xc(%rdi)
.Ltmp1573:
    000002b5: 	cmpl	$0x1, %eax
    000002b8: 	jne	.Ltmp1556 # Offset: 696
    000002be: 	movq	(%rdi), %rax
    000002c1: 	subq	$0x10, %r15
    000002c5: 	callq	*0x18(%rax) # Offset: 709
    000002c8: 	testq	%r14, %r14
    000002cb: 	jne	.Ltmp1559 # Offset: 715
.Ltmp1555:
    000002d1: 	subq	$0x10, %rbp
    000002d5: 	jmp	.Ltmp1560 # Offset: 725
    000002d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1564:
    000002e0: 	movq	%rbp, %r14
    000002e3: 	movq	%rbx, %rcx
    000002e6: 	xorl	%esi, %esi
    000002e8: 	movq	%r12, %rdi
    000002eb: 	subq	%r12, %r14
    000002ee: 	movaps	%xmm0, 0x10(%rsp)
    000002f3: 	movq	%r14, %rdx
    000002f6: 	sarq	$0x4, %rdx
    000002fa: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.isra.0/1" # Offset: 762
    000002ff: 	movq	0x18(%rsp), %r13
    00000304: 	testq	%r13, %r13
    00000307: 	je	.Ltmp1561 # Offset: 775
    00000309: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000310: 	je	.Ltmp1562 # Offset: 784
    00000316: 	movl	0x8(%r13), %eax
    0000031a: 	leal	-0x1(%rax), %edx
    0000031d: 	movl	%edx, 0x8(%r13)
.Ltmp1569:
    00000321: 	cmpl	$0x1, %eax
    00000324: 	je	.Ltmp1563 # Offset: 804
.Ltmp1561:
    0000032a: 	subq	$0x10, %rbp
    0000032e: 	cmpq	$0x10, %r14
    00000332: 	jle	.Ltmp1537 # Offset: 818
.Ltmp1560:
    00000338: 	pxor	%xmm2, %xmm2
    0000033c: 	movdqu	(%rbp), %xmm0
    00000341: 	movups	%xmm2, (%rbp)
    00000345: 	movdqu	(%r12), %xmm1
    0000034b: 	movups	%xmm2, (%r12)
    00000350: 	movq	0x8(%rbp), %r13
    00000354: 	movups	%xmm1, (%rbp)
    00000358: 	testq	%r13, %r13
    0000035b: 	je	.Ltmp1564 # Offset: 859
    0000035d: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000364: 	je	.Ltmp1565 # Offset: 868
    0000036a: 	movl	0x8(%r13), %eax
    0000036e: 	leal	-0x1(%rax), %edx
    00000371: 	movl	%edx, 0x8(%r13)
.Ltmp1568:
    00000375: 	cmpl	$0x1, %eax
    00000378: 	jne	.Ltmp1564 # Offset: 888
    0000037e: 	movq	(%r13), %rax
    00000382: 	movaps	%xmm0, (%rsp)
    00000386: 	movq	%r13, %rdi
    00000389: 	callq	*0x10(%rax) # Offset: 905
    0000038c: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000393: 	movdqa	(%rsp), %xmm0
    00000398: 	je	.Ltmp1566 # Offset: 920
    0000039e: 	movl	0xc(%r13), %eax
    000003a2: 	leal	-0x1(%rax), %edx
    000003a5: 	movl	%edx, 0xc(%r13)
.Ltmp1572:
    000003a9: 	cmpl	$0x1, %eax
    000003ac: 	jne	.Ltmp1564 # Offset: 940
    000003b2: 	movq	(%r13), %rax
    000003b6: 	movaps	%xmm0, (%rsp)
    000003ba: 	movq	%r13, %rdi
    000003bd: 	callq	*0x18(%rax) # Offset: 957
    000003c0: 	movdqa	(%rsp), %xmm0
    000003c5: 	jmp	.Ltmp1564 # Offset: 965
.Ltmp1563:
    000003ca: 	movq	(%r13), %rax
    000003ce: 	movq	%r13, %rdi
    000003d1: 	callq	*0x10(%rax) # Offset: 977
    000003d4: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000003db: 	je	.Ltmp1567 # Offset: 987
    000003dd: 	movl	0xc(%r13), %eax
    000003e1: 	leal	-0x1(%rax), %edx
    000003e4: 	movl	%edx, 0xc(%r13)
.Ltmp1571:
    000003e8: 	cmpl	$0x1, %eax
    000003eb: 	jne	.Ltmp1561 # Offset: 1003
    000003f1: 	movq	(%r13), %rax
    000003f5: 	movq	%r13, %rdi
    000003f8: 	callq	*0x18(%rax) # Offset: 1016
    000003fb: 	jmp	.Ltmp1561 # Offset: 1019
.Ltmp1565:
    00000400: 	movl	$0xffffffff, %eax
    00000405: 	lock # Offset: 1029
    00000406: 	xaddl	%eax, 0x8(%r13)
    0000040b: 	jmp	.Ltmp1568 # Offset: 1035
.Ltmp1562:
    00000410: 	movl	$0xffffffff, %eax
    00000415: 	lock # Offset: 1045
    00000416: 	xaddl	%eax, 0x8(%r13)
    0000041b: 	jmp	.Ltmp1569 # Offset: 1051
.Ltmp1557:
    00000420: 	movl	$0xffffffff, %eax
    00000425: 	lock # Offset: 1061
    00000426: 	xaddl	%eax, 0x8(%rdi)
    0000042a: 	jmp	.Ltmp1570 # Offset: 1066
.Ltmp1567:
    0000042f: 	movl	$0xffffffff, %eax
    00000434: 	lock # Offset: 1076
    00000435: 	xaddl	%eax, 0xc(%r13)
    0000043a: 	jmp	.Ltmp1571 # Offset: 1082
.Ltmp1566:
    0000043c: 	movl	$0xffffffff, %eax
    00000441: 	lock # Offset: 1089
    00000442: 	xaddl	%eax, 0xc(%r13)
    00000447: 	jmp	.Ltmp1572 # Offset: 1095
.Ltmp1558:
    0000044c: 	movl	$0xffffffff, %eax
    00000451: 	lock # Offset: 1105
    00000452: 	xaddl	%eax, 0xc(%rdi)
    00000456: 	jmp	.Ltmp1573 # Offset: 1110
.Ltmp1553:
    0000045b: 	callq	__stack_chk_fail@PLT # Offset: 1115
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_"

Binary Function "_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 137
  State       : disassembled
  Address     : 0xff90
  Size        : 0x3a9
  MaxSize     : 0x3b0
  Offset      : 0xff90
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0136:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rsi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x58, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x48(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%r12), %rsi
    00000032: 	movq	(%r12), %rbp
    00000036: 	movq	%rax, start_time(%rip)
    0000003d: 	movq	%rsi, 0x18(%rsp)
    00000042: 	cmpq	%rsi, %rbp
    00000045: 	je	.Ltmp1574 # Offset: 69
    0000004b: 	movq	%rsi, %rbx
    0000004e: 	movl	$0x3f, %edx
    00000053: 	movq	%rbp, %rdi
    00000056: 	movq	%rsi, %r14
    00000059: 	subq	%rbp, %rbx
    0000005c: 	movq	%rbx, %rax
    0000005f: 	sarq	$0x4, %rax
    00000063: 	bsrq	%rax, %rax
    00000067: 	xorq	$0x3f, %rax
    0000006b: 	subl	%eax, %edx
    0000006d: 	movslq	%edx, %rdx
    00000070: 	addq	%rdx, %rdx
    00000073: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 115
    00000078: 	cmpq	$0x100, %rbx
    0000007f: 	jle	.Ltmp1575 # Offset: 127
    00000085: 	leaq	0x100(%rbp), %r15
    0000008c: 	movq	%rbp, %rdi
    0000008f: 	movq	%r15, %rsi
    00000092: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1" # Offset: 146
    00000097: 	pxor	%xmm1, %xmm1
    0000009b: 	cmpq	%r15, %r14
    0000009e: 	je	.Ltmp1574 # Offset: 158
    000000a4: 	nopl	(%rax) # Size: 4
.Ltmp1587:
    000000a8: 	movdqu	(%r15), %xmm2
    000000ad: 	movq	-0x10(%r15), %rax
    000000b1: 	movups	%xmm1, (%r15)
    000000b5: 	leaq	-0x10(%r15), %rbx
    000000b9: 	movq	%xmm2, %r14
    000000be: 	movaps	%xmm2, (%rsp)
    000000c2: 	movq	(%r14), %rcx
    000000c5: 	cmpq	%rcx, (%rax)
    000000c8: 	jg	.Ltmp1576 # Offset: 200
    000000ca: 	jmp	.Ltmp1577 # Offset: 202
    000000cf: 	nop # Size: 1
.Ltmp1581:
    000000d0: 	movq	(%r14), %rcx
.Ltmp1579:
    000000d3: 	movq	-0x10(%rbx), %rax
    000000d7: 	leaq	-0x10(%rbx), %rdx
    000000db: 	cmpq	%rcx, (%rax)
    000000de: 	jle	.Ltmp1578 # Offset: 222
.Ltmp1583:
    000000e4: 	movq	%rdx, %rbx
.Ltmp1576:
    000000e7: 	movq	0x18(%rbx), %rbp
    000000eb: 	movq	%rax, %xmm0
    000000f0: 	movhps	0x8(%rbx), %xmm0
    000000f4: 	movups	%xmm1, (%rbx)
    000000f7: 	movups	%xmm0, 0x10(%rbx)
    000000fb: 	testq	%rbp, %rbp
    000000fe: 	je	.Ltmp1579 # Offset: 254
    00000100: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000107: 	je	.Ltmp1580 # Offset: 263
    0000010d: 	movl	0x8(%rbp), %eax
    00000110: 	leal	-0x1(%rax), %edx
    00000113: 	movl	%edx, 0x8(%rbp)
.Ltmp1594:
    00000116: 	cmpl	$0x1, %eax
    00000119: 	jne	.Ltmp1581 # Offset: 281
    0000011b: 	movq	(%rbp), %rax
    0000011f: 	movq	%rbp, %rdi
    00000122: 	callq	*0x10(%rax) # Offset: 290
    00000125: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    0000012c: 	pxor	%xmm1, %xmm1
    00000130: 	je	.Ltmp1582 # Offset: 304
    00000136: 	movl	0xc(%rbp), %eax
    00000139: 	leal	-0x1(%rax), %edx
    0000013c: 	movl	%edx, 0xc(%rbp)
.Ltmp1595:
    0000013f: 	cmpl	$0x1, %eax
    00000142: 	jne	.Ltmp1581 # Offset: 322
    00000144: 	movq	(%rbp), %rax
    00000148: 	movq	%rbp, %rdi
    0000014b: 	callq	*0x18(%rax) # Offset: 331
    0000014e: 	movq	-0x10(%rbx), %rax
    00000152: 	movq	(%r14), %rcx
    00000155: 	pxor	%xmm1, %xmm1
    00000159: 	leaq	-0x10(%rbx), %rdx
    0000015d: 	cmpq	%rcx, (%rax)
    00000160: 	jg	.Ltmp1583 # Offset: 352
    00000162: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1578:
    00000168: 	movq	0x8(%rbx), %rbp
    0000016c: 	movdqa	(%rsp), %xmm3
    00000171: 	movups	%xmm3, (%rbx)
    00000174: 	testq	%rbp, %rbp
    00000177: 	je	.Ltmp1584 # Offset: 375
    00000179: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000180: 	je	.Ltmp1585 # Offset: 384
    00000186: 	movl	0x8(%rbp), %eax
    00000189: 	leal	-0x1(%rax), %edx
    0000018c: 	movl	%edx, 0x8(%rbp)
.Ltmp1598:
    0000018f: 	cmpl	$0x1, %eax
    00000192: 	je	.Ltmp1586 # Offset: 402
.Ltmp1584:
    00000198: 	addq	$0x10, %r15
    0000019c: 	cmpq	%r15, 0x18(%rsp)
    000001a1: 	jne	.Ltmp1587 # Offset: 417
.Ltmp1574:
    000001a7: 	callq	clock@PLT # Offset: 423
    000001ac: 	movq	(%r13), %rsi
    000001b0: 	movq	0x8(%r13), %rdx
    000001b4: 	leaq	0x20(%rsp), %rbp
    000001b9: 	movq	%rax, end_time(%rip)
    000001c0: 	movq	%rbp, %rdi
    000001c3: 	pxor	%xmm0, %xmm0
    000001c7: 	subq	start_time(%rip), %rax
    000001ce: 	addq	%rsi, %rdx
    000001d1: 	cvtsi2sd	%rax, %xmm0
    000001d6: 	leaq	0x30(%rsp), %rbx
    000001db: 	divsd	DATAat0x17370(%rip), %xmm0
    000001e3: 	movq	%rbx, 0x20(%rsp)
    000001e8: 	movsd	%xmm0, (%rsp)
    000001ed: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 493
    000001f2: 	movq	0x8(%r12), %rdi
    000001f7: 	movq	0x28(%rsp), %rdx
    000001fc: 	subq	(%r12), %rdi
    00000200: 	movq	0x20(%rsp), %rsi
    00000205: 	movsd	(%rsp), %xmm0
    0000020a: 	sarq	$0x4, %rdi
    0000020e: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 526
    00000213: 	movq	0x20(%rsp), %rdi
    00000218: 	cmpq	%rbx, %rdi
    0000021b: 	je	.Ltmp1588 # Offset: 539
    0000021d: 	movq	0x30(%rsp), %rax
    00000222: 	leaq	0x1(%rax), %rsi
    00000226: 	callq	_ZdlPvm@PLT # Offset: 550
.Ltmp1588:
    0000022b: 	movq	(%r13), %rsi
    0000022f: 	movq	0x8(%r13), %rdx
    00000233: 	movq	%rbp, %rdi
    00000236: 	movq	%rbx, 0x20(%rsp)
    0000023b: 	addq	%rsi, %rdx
    0000023e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 574
    00000243: 	movq	(%r12), %rax
    00000247: 	movq	0x8(%r12), %rsi
    0000024c: 	addq	$0x10, %rax
    00000250: 	jmp	.Ltmp1589 # Offset: 592
    00000252: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1591:
    00000258: 	movq	(%rdx), %rcx
    0000025b: 	movq	-0x10(%rdx), %rdx
    0000025f: 	addq	$0x10, %rax
    00000263: 	movq	(%rdx), %rdi
    00000266: 	cmpq	%rdi, (%rcx)
    00000269: 	jl	.Ltmp1590 # Offset: 617
.Ltmp1589:
    0000026f: 	movq	%rax, %rdx
    00000272: 	cmpq	%rax, %rsi
    00000275: 	jne	.Ltmp1591 # Offset: 629
.Ltmp1596:
    00000277: 	movq	0x20(%rsp), %rdi
    0000027c: 	cmpq	%rbx, %rdi
    0000027f: 	je	.Ltmp1592 # Offset: 639
    00000281: 	movq	0x30(%rsp), %rax
    00000286: 	leaq	0x1(%rax), %rsi
    0000028a: 	callq	_ZdlPvm@PLT # Offset: 650
.Ltmp1592:
    0000028f: 	movq	0x48(%rsp), %rax
    00000294: 	subq	%fs:0x28, %rax
    0000029d: 	jne	.Ltmp1593 # Offset: 669
    000002a3: 	addq	$0x58, %rsp
    000002a7: 	popq	%rbx
    000002a8: 	popq	%rbp
    000002a9: 	popq	%r12
    000002ab: 	popq	%r13
    000002ad: 	popq	%r14
    000002af: 	popq	%r15
    000002b1: 	retq # Offset: 689
    000002b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1575:
    000002b8: 	movq	0x18(%rsp), %rsi
    000002bd: 	movq	%rbp, %rdi
    000002c0: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10shared_ptrI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_.isra.0/1" # Offset: 704
    000002c5: 	jmp	.Ltmp1574 # Offset: 709
    000002ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1580:
    000002d0: 	movl	$0xffffffff, %eax
    000002d5: 	lock # Offset: 725
    000002d6: 	xaddl	%eax, 0x8(%rbp)
    000002da: 	jmp	.Ltmp1594 # Offset: 730
    000002df: 	nop # Size: 1
.Ltmp1582:
    000002e0: 	movl	$0xffffffff, %eax
    000002e5: 	lock # Offset: 741
    000002e6: 	xaddl	%eax, 0xc(%rbp)
    000002ea: 	jmp	.Ltmp1595 # Offset: 746
    000002ef: 	nop # Size: 1
.Ltmp1590:
    000002f0: 	movq	0x20(%rsp), %rdx
    000002f5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002fc: 	movl	$0x1, %edi
    00000301: 	xorl	%eax, %eax
    00000303: 	callq	__printf_chk@PLT # Offset: 771
    00000308: 	jmp	.Ltmp1596 # Offset: 776
    0000030d: 	nopl	(%rax) # Size: 3
.Ltmp1586:
    00000310: 	movq	(%rbp), %rax
    00000314: 	movq	%rbp, %rdi
    00000317: 	callq	*0x10(%rax) # Offset: 791
    0000031a: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000321: 	pxor	%xmm1, %xmm1
    00000325: 	je	.Ltmp1597 # Offset: 805
    00000327: 	movl	0xc(%rbp), %eax
    0000032a: 	leal	-0x1(%rax), %edx
    0000032d: 	movl	%edx, 0xc(%rbp)
.Ltmp1599:
    00000330: 	cmpl	$0x1, %eax
    00000333: 	jne	.Ltmp1584 # Offset: 819
    00000339: 	movq	(%rbp), %rax
    0000033d: 	movq	%rbp, %rdi
    00000340: 	callq	*0x18(%rax) # Offset: 832
    00000343: 	pxor	%xmm1, %xmm1
    00000347: 	jmp	.Ltmp1584 # Offset: 839
    0000034c: 	nopl	(%rax) # Size: 4
.Ltmp1585:
    00000350: 	movl	$0xffffffff, %eax
    00000355: 	lock # Offset: 853
    00000356: 	xaddl	%eax, 0x8(%rbp)
    0000035a: 	jmp	.Ltmp1598 # Offset: 858
    0000035f: 	nop # Size: 1
.Ltmp1577:
    00000360: 	movups	%xmm2, (%r15)
    00000364: 	jmp	.Ltmp1584 # Offset: 868
.Ltmp1597:
    00000369: 	movl	$0xffffffff, %eax
    0000036e: 	lock # Offset: 878
    0000036f: 	xaddl	%eax, 0xc(%rbp)
    00000373: 	jmp	.Ltmp1599 # Offset: 883
.Ltmp1593:
    00000375: 	callq	__stack_chk_fail@PLT # Offset: 885
    0000037a: 	endbr64
.Ltmp1601:
    0000037e: 	movq	%rax, %rbp
    00000381: 	jmp	.Ltmp1600 # Offset: 897
    00000383: 	endbr64
    00000387: 	jmp	.Ltmp1601 # Offset: 903
.Ltmp1600:
    00000389: 	movq	0x20(%rsp), %rdi
    0000038e: 	cmpq	%rbx, %rdi
    00000391: 	je	.Ltmp1602 # Offset: 913
    00000393: 	movq	0x30(%rsp), %rax
    00000398: 	leaq	0x1(%rax), %rsi
    0000039c: 	callq	_ZdlPvm@PLT # Offset: 924
.Ltmp1602:
    000003a1: 	movq	%rbp, %rdi
    000003a4: 	callq	_Unwind_Resume@PLT # Offset: 932
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)" after disassembly {
  All names   : _Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
                _Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/smart_pointers.cpp/1
  Number      : 138
  State       : disassembled
  Address     : 0x10340
  Size        : 0x906
  MaxSize     : 0x910
  Offset      : 0x10340
  Section     : .text
  Orc Section : .local.text._Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0137:
    00000000: 	pushq	%r15
    00000002: 	pushq	%r14
    00000004: 	movq	%rcx, %r14
    00000007: 	pushq	%r13
    00000009: 	pushq	%r12
    0000000b: 	pushq	%rbp
    0000000c: 	movl	%edi, %ebp
    0000000e: 	pushq	%rbx
    0000000f: 	movl	%esi, %ebx
    00000011: 	subq	$0xc8, %rsp
    00000018: 	movl	%esi, 0x18(%rsp)
    0000001c: 	leaq	0x90(%rsp), %r12
    00000024: 	movq	%rcx, %rsi
    00000027: 	movl	%edx, 0x1c(%rsp)
    0000002b: 	movq	%r12, %rdi
    0000002e: 	leaq	DATAat0x17152(%rip), %rdx
    00000035: 	movq	%fs:0x28, %rax
    0000003e: 	movq	%rax, 0xb8(%rsp)
    00000046: 	xorl	%eax, %eax
    00000048: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 72
    0000004d: 	leaq	0x30(%rsp), %rax
    00000052: 	movq	%r12, %rcx
    00000055: 	movl	%ebx, %edx
    00000057: 	movl	%ebp, %esi
    00000059: 	movq	%rax, %rdi
    0000005c: 	movq	%rax, 0x8(%rsp)
    00000061: 	callq	_Z11CreateArrayI17VariableContainerIlLi13EESt10shared_ptrIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 97
    00000066: 	movq	0x90(%rsp), %rdi
    0000006e: 	leaq	0xa0(%rsp), %r13
    00000076: 	cmpq	%r13, %rdi
    00000079: 	je	.Ltmp1603 # Offset: 121
    0000007b: 	movq	0xa0(%rsp), %rax
    00000083: 	leaq	0x1(%rax), %rsi
    00000087: 	callq	_ZdlPvm@PLT # Offset: 135
.Ltmp1603:
    0000008c: 	movq	(%r14), %rbp
    0000008f: 	movq	0x8(%r14), %r15
    00000093: 	movq	%r13, 0x90(%rsp)
    0000009b: 	movq	%rbp, %rax
    0000009e: 	addq	%r15, %rax
    000000a1: 	je	.Ltmp1604 # Offset: 161
    000000a3: 	testq	%rbp, %rbp
    000000a6: 	je	.Ltmp1605 # Offset: 166
.Ltmp1604:
    000000ac: 	movq	%r15, 0x50(%rsp)
    000000b1: 	cmpq	$0xf, %r15
    000000b5: 	ja	.Ltmp1606 # Offset: 181
    000000bb: 	cmpq	$0x1, %r15
    000000bf: 	jne	.Ltmp1607 # Offset: 191
    000000c5: 	movzbl	(%rbp), %eax
    000000c9: 	movb	%al, 0xa0(%rsp)
    000000d0: 	movq	%r13, %rax
.Ltmp1647:
    000000d3: 	movq	%r15, 0x98(%rsp)
    000000db: 	movb	$0x0, (%rax,%r15)
    000000e0: 	movabsq	$0x3fffffffffffffff, %rax
    000000ea: 	subq	0x98(%rsp), %rax
    000000f2: 	cmpq	$0xa, %rax
    000000f6: 	jbe	.Ltmp1608 # Offset: 246
    000000fc: 	movl	$0xb, %edx
    00000101: 	leaq	DATAat0x17160(%rip), %rsi
    00000108: 	movq	%r12, %rdi
    0000010b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 267
    00000110: 	leaq	0x50(%rsp), %r15
    00000115: 	movq	0x8(%rsp), %rsi
    0000011a: 	movq	%r12, %rdx
    0000011d: 	movq	%r15, %rdi
    00000120: 	callq	_Z9CopyArrayISt10shared_ptrI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 288
    00000125: 	movq	0x90(%rsp), %rdi
    0000012d: 	cmpq	%r13, %rdi
    00000130: 	je	.Ltmp1609 # Offset: 304
    00000132: 	movq	0xa0(%rsp), %rax
    0000013a: 	leaq	0x1(%rax), %rsi
    0000013e: 	callq	_ZdlPvm@PLT # Offset: 318
.Ltmp1609:
    00000143: 	leaq	0x70(%rsp), %rdi
    00000148: 	leaq	DATAat0x1716c(%rip), %rdx
    0000014f: 	movq	%r14, %rsi
    00000152: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 338
    00000157: 	movq	0x58(%rsp), %rdi
    0000015c: 	subq	0x50(%rsp), %rdi
    00000161: 	movq	%rdi, %rbp
    00000164: 	movq	%rdi, 0x10(%rsp)
    00000169: 	callq	clock@PLT # Offset: 361
    0000016e: 	movq	0x50(%rsp), %rsi
    00000173: 	movq	0x10(%rsp), %rdi
    00000178: 	sarq	$0x4, %rbp
    0000017c: 	movq	%rax, start_time(%rip)
    00000183: 	movl	$0x14, %ecx
    00000188: 	movq	(%rsi), %rax
    0000018b: 	movq	(%rax), %r8
    0000018e: 	nop # Size: 2
.Ltmp1612:
    00000190: 	movq	%r8, %rbx
    00000193: 	cmpq	$0x10, %rdi
    00000197: 	jbe	.Ltmp1610 # Offset: 407
    00000199: 	movl	$0x1, %eax
    0000019e: 	nop # Size: 2
.Ltmp1611:
    000001a0: 	movq	%rax, %rdx
    000001a3: 	addq	$0x1, %rax
    000001a7: 	shlq	$0x4, %rdx
    000001ab: 	movq	(%rsi,%rdx), %rdx
    000001af: 	addq	(%rdx), %rbx
    000001b2: 	cmpq	%rax, %rbp
    000001b5: 	ja	.Ltmp1611 # Offset: 437
.Ltmp1610:
    000001b7: 	subq	$0x1, %rcx
    000001bb: 	jne	.Ltmp1612 # Offset: 443
    000001bd: 	callq	clock@PLT # Offset: 445
    000001c2: 	movq	0x70(%rsp), %rsi
    000001c7: 	movq	0x78(%rsp), %rdx
    000001cc: 	movq	%r12, %rdi
    000001cf: 	movq	%rax, end_time(%rip)
    000001d6: 	pxor	%xmm0, %xmm0
    000001da: 	subq	start_time(%rip), %rax
    000001e1: 	addq	%rsi, %rdx
    000001e4: 	cvtsi2sd	%rax, %xmm0
    000001e9: 	movq	%r13, 0x90(%rsp)
    000001f1: 	divsd	DATAat0x17370(%rip), %xmm0
    000001f9: 	movsd	%xmm0, 0x10(%rsp)
    000001ff: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 511
    00000204: 	movsd	0x10(%rsp), %xmm0
    0000020a: 	movq	%r12, %rdx
    0000020d: 	movq	%rbp, %rsi
    00000210: 	movl	$0x14, %edi
    00000215: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 533
    0000021a: 	movq	0x90(%rsp), %rdi
    00000222: 	cmpq	%r13, %rdi
    00000225: 	je	.Ltmp1613 # Offset: 549
    00000227: 	movq	0xa0(%rsp), %rax
    0000022f: 	leaq	0x1(%rax), %rsi
    00000233: 	callq	_ZdlPvm@PLT # Offset: 563
.Ltmp1613:
    00000238: 	movq	0x70(%rsp), %rsi
    0000023d: 	movq	0x78(%rsp), %rdx
    00000242: 	movq	%r12, %rdi
    00000245: 	movq	%r13, 0x90(%rsp)
    0000024d: 	addq	%rsi, %rdx
    00000250: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 592
    00000255: 	movslq	0x18(%rsp), %rax
    0000025a: 	movq	0x90(%rsp), %rdx
    00000262: 	imulq	%rbp, %rax
    00000266: 	cmpq	%rbx, %rax
    00000269: 	je	.Ltmp1614 # Offset: 617
    0000026b: 	leaq	DATAat0x1710f(%rip), %rsi
    00000272: 	movl	$0x1, %edi
    00000277: 	xorl	%eax, %eax
    00000279: 	callq	__printf_chk@PLT # Offset: 633
    0000027e: 	movq	0x90(%rsp), %rdx
.Ltmp1614:
    00000286: 	cmpq	%r13, %rdx
    00000289: 	je	.Ltmp1615 # Offset: 649
    0000028b: 	movq	0xa0(%rsp), %rax
    00000293: 	movq	%rdx, %rdi
    00000296: 	leaq	0x1(%rax), %rsi
    0000029a: 	callq	_ZdlPvm@PLT # Offset: 666
.Ltmp1615:
    0000029f: 	movq	0x70(%rsp), %rdi
    000002a4: 	leaq	0x80(%rsp), %rax
    000002ac: 	cmpq	%rax, %rdi
    000002af: 	je	.Ltmp1616 # Offset: 687
    000002b1: 	movq	0x80(%rsp), %rax
    000002b9: 	leaq	0x1(%rax), %rsi
    000002bd: 	callq	_ZdlPvm@PLT # Offset: 701
.Ltmp1616:
    000002c2: 	leaq	DATAat0x1717f(%rip), %rdx
    000002c9: 	movq	%r14, %rsi
    000002cc: 	movq	%r12, %rdi
    000002cf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 719
    000002d4: 	movq	%r12, %rsi
    000002d7: 	movq	%r15, %rdi
    000002da: 	callq	_Z13TestNullArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 730
    000002df: 	movq	0x90(%rsp), %rdi
    000002e7: 	cmpq	%r13, %rdi
    000002ea: 	je	.Ltmp1617 # Offset: 746
    000002ec: 	movq	0xa0(%rsp), %rax
    000002f4: 	leaq	0x1(%rax), %rsi
    000002f8: 	callq	_ZdlPvm@PLT # Offset: 760
.Ltmp1617:
    000002fd: 	leaq	DATAat0x17190(%rip), %rdx
    00000304: 	movq	%r14, %rsi
    00000307: 	movq	%r12, %rdi
    0000030a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 778
    0000030f: 	movq	%r12, %rsi
    00000312: 	movq	%r15, %rdi
    00000315: 	callq	_Z17RandomValuesArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 789
    0000031a: 	movq	0x90(%rsp), %rdi
    00000322: 	cmpq	%r13, %rdi
    00000325: 	je	.Ltmp1618 # Offset: 805
    00000327: 	movq	0xa0(%rsp), %rax
    0000032f: 	leaq	0x1(%rax), %rsi
    00000333: 	callq	_ZdlPvm@PLT # Offset: 819
.Ltmp1618:
    00000338: 	movq	(%r14), %rbp
    0000033b: 	movq	0x8(%r14), %rbx
    0000033f: 	movq	%r13, 0x90(%rsp)
    00000347: 	movq	%rbp, %rax
    0000034a: 	addq	%rbx, %rax
    0000034d: 	je	.Ltmp1619 # Offset: 845
    0000034f: 	testq	%rbp, %rbp
    00000352: 	je	.Ltmp1620 # Offset: 850
.Ltmp1619:
    00000358: 	movq	%rbx, 0x28(%rsp)
    0000035d: 	cmpq	$0xf, %rbx
    00000361: 	ja	.Ltmp1621 # Offset: 865
    00000367: 	cmpq	$0x1, %rbx
    0000036b: 	jne	.Ltmp1622 # Offset: 875
    00000371: 	movzbl	(%rbp), %eax
    00000375: 	movb	%al, 0xa0(%rsp)
    0000037c: 	movq	%r13, %rax
.Ltmp1653:
    0000037f: 	movq	%rbx, 0x98(%rsp)
    00000387: 	movb	$0x0, (%rax,%rbx)
    0000038b: 	movabsq	$0x3fffffffffffffff, %rax
    00000395: 	subq	0x98(%rsp), %rax
    0000039d: 	cmpq	$0xf, %rax
    000003a1: 	jbe	.Ltmp1623 # Offset: 929
    000003a7: 	movl	$0x10, %edx
    000003ac: 	leaq	DATAat0x1719f(%rip), %rsi
    000003b3: 	movq	%r12, %rdi
    000003b6: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 950
    000003bb: 	movq	%r12, %rsi
    000003be: 	movq	%r15, %rdi
    000003c1: 	callq	_Z14QuickSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 961
    000003c6: 	movq	0x90(%rsp), %rdi
    000003ce: 	cmpq	%r13, %rdi
    000003d1: 	je	.Ltmp1624 # Offset: 977
    000003d3: 	movq	0xa0(%rsp), %rax
    000003db: 	leaq	0x1(%rax), %rsi
    000003df: 	callq	_ZdlPvm@PLT # Offset: 991
.Ltmp1624:
    000003e4: 	movl	$0x7b, %edi
    000003e9: 	callq	srand@PLT # Offset: 1001
    000003ee: 	movq	0x50(%rsp), %rbx
    000003f3: 	cmpq	%rbx, 0x58(%rsp)
    000003f8: 	je	.Ltmp1625 # Offset: 1016
    000003fa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1626:
    00000400: 	callq	rand@PLT # Offset: 1024
    00000405: 	movq	(%rbx), %rdx
    00000408: 	addq	$0x10, %rbx
    0000040c: 	sarl	$0x5, %eax
    0000040f: 	movzwl	%ax, %eax
    00000412: 	movq	%rax, %xmm0
    00000417: 	movq	%rax, 0x60(%rdx)
    0000041b: 	punpcklqdq	%xmm0, %xmm0
    0000041f: 	movups	%xmm0, (%rdx)
    00000422: 	movups	%xmm0, 0x10(%rdx)
    00000426: 	movups	%xmm0, 0x20(%rdx)
    0000042a: 	movups	%xmm0, 0x30(%rdx)
    0000042e: 	movups	%xmm0, 0x40(%rdx)
    00000432: 	movups	%xmm0, 0x50(%rdx)
    00000436: 	cmpq	%rbx, 0x58(%rsp)
    0000043b: 	jne	.Ltmp1626 # Offset: 1083
.Ltmp1625:
    0000043d: 	leaq	DATAat0x171b0(%rip), %rdx
    00000444: 	movq	%r14, %rsi
    00000447: 	movq	%r12, %rdi
    0000044a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1098
    0000044f: 	movq	%r12, %rsi
    00000452: 	movq	%r15, %rdi
    00000455: 	callq	_Z12StdSortArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1109
    0000045a: 	movq	0x90(%rsp), %rdi
    00000462: 	cmpq	%r13, %rdi
    00000465: 	je	.Ltmp1627 # Offset: 1125
    00000467: 	movq	0xa0(%rsp), %rax
    0000046f: 	leaq	0x1(%rax), %rsi
    00000473: 	callq	_ZdlPvm@PLT # Offset: 1139
.Ltmp1627:
    00000478: 	cmpb	$0x0, 0x1c(%rsp)
    0000047d: 	je	.Ltmp1628 # Offset: 1149
    0000047f: 	leaq	DATAat0x171c1(%rip), %rdx
    00000486: 	movq	%r14, %rsi
    00000489: 	movq	%r12, %rdi
    0000048c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1164
    00000491: 	movq	0x8(%rsp), %rdi
    00000496: 	movq	%r12, %rsi
    00000499: 	callq	_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1177
    0000049e: 	movq	0x90(%rsp), %rdi
    000004a6: 	cmpq	%r13, %rdi
    000004a9: 	je	.Ltmp1628 # Offset: 1193
    000004ab: 	movq	0xa0(%rsp), %rax
    000004b3: 	leaq	0x1(%rax), %rsi
    000004b7: 	callq	_ZdlPvm@PLT # Offset: 1207
.Ltmp1628:
    000004bc: 	leaq	DATAat0x171d9(%rip), %rdx
    000004c3: 	movq	%r14, %rsi
    000004c6: 	movq	%r12, %rdi
    000004c9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1225
    000004ce: 	movq	%r12, %rsi
    000004d1: 	movq	%r15, %rdi
    000004d4: 	callq	_Z9FreeArrayISt10shared_ptrI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1236
    000004d9: 	movq	0x90(%rsp), %rdi
    000004e1: 	cmpq	%r13, %rdi
    000004e4: 	je	.Ltmp1629 # Offset: 1252
    000004e6: 	movq	0xa0(%rsp), %rax
    000004ee: 	leaq	0x1(%rax), %rsi
    000004f2: 	callq	_ZdlPvm@PLT # Offset: 1266
.Ltmp1629:
    000004f7: 	leaq	DATAat0x171ed(%rip), %rdx
    000004fe: 	movq	%r14, %rsi
    00000501: 	movq	%r12, %rdi
    00000504: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1284
    00000509: 	movq	%r12, %rdi
    0000050c: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1292
    00000511: 	movq	0x90(%rsp), %rdi
    00000519: 	cmpq	%r13, %rdi
    0000051c: 	je	.Ltmp1630 # Offset: 1308
    0000051e: 	movq	0xa0(%rsp), %rax
    00000526: 	leaq	0x1(%rax), %rsi
    0000052a: 	callq	_ZdlPvm@PLT # Offset: 1322
.Ltmp1630:
    0000052f: 	movq	0x58(%rsp), %rbx
    00000534: 	movq	0x50(%rsp), %rbp
    00000539: 	cmpq	%rbp, %rbx
    0000053c: 	jne	.Ltmp1631 # Offset: 1340
    0000053e: 	jmp	.Ltmp1632 # Offset: 1342
.Ltmp1634:
    00000540: 	addq	$0x10, %rbp
    00000544: 	cmpq	%rbp, %rbx
    00000547: 	je	.Ltmp1633 # Offset: 1351
.Ltmp1631:
    00000549: 	movq	0x8(%rbp), %r12
    0000054d: 	testq	%r12, %r12
    00000550: 	je	.Ltmp1634 # Offset: 1360
    00000552: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000559: 	je	.Ltmp1635 # Offset: 1369
    0000055f: 	movl	0x8(%r12), %eax
    00000564: 	leal	-0x1(%rax), %edx
    00000567: 	movl	%edx, 0x8(%r12)
.Ltmp1648:
    0000056c: 	cmpl	$0x1, %eax
    0000056f: 	jne	.Ltmp1634 # Offset: 1391
    00000571: 	movq	(%r12), %rax
    00000575: 	movq	%r12, %rdi
    00000578: 	callq	*0x10(%rax) # Offset: 1400
    0000057b: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000582: 	je	.Ltmp1636 # Offset: 1410
    00000588: 	movl	0xc(%r12), %eax
    0000058d: 	leal	-0x1(%rax), %edx
    00000590: 	movl	%edx, 0xc(%r12)
.Ltmp1651:
    00000595: 	cmpl	$0x1, %eax
    00000598: 	jne	.Ltmp1634 # Offset: 1432
    0000059a: 	movq	(%r12), %rax
    0000059e: 	addq	$0x10, %rbp
    000005a2: 	movq	%r12, %rdi
    000005a5: 	callq	*0x18(%rax) # Offset: 1445
    000005a8: 	cmpq	%rbp, %rbx
    000005ab: 	jne	.Ltmp1631 # Offset: 1451
.Ltmp1633:
    000005ad: 	movq	0x50(%rsp), %rbp
.Ltmp1632:
    000005b2: 	testq	%rbp, %rbp
    000005b5: 	je	.Ltmp1637 # Offset: 1461
    000005b7: 	movq	0x60(%rsp), %rsi
    000005bc: 	movq	%rbp, %rdi
    000005bf: 	subq	%rbp, %rsi
    000005c2: 	callq	_ZdlPvm@PLT # Offset: 1474
.Ltmp1637:
    000005c7: 	movq	0x38(%rsp), %rbx
    000005cc: 	movq	0x30(%rsp), %rbp
    000005d1: 	cmpq	%rbp, %rbx
    000005d4: 	jne	.Ltmp1638 # Offset: 1492
    000005d6: 	jmp	.Ltmp1639 # Offset: 1494
    000005d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1641:
    000005e0: 	addq	$0x10, %rbp
    000005e4: 	cmpq	%rbp, %rbx
    000005e7: 	je	.Ltmp1640 # Offset: 1511
.Ltmp1638:
    000005e9: 	movq	0x8(%rbp), %r12
    000005ed: 	testq	%r12, %r12
    000005f0: 	je	.Ltmp1641 # Offset: 1520
    000005f2: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    000005f9: 	je	.Ltmp1642 # Offset: 1529
    000005ff: 	movl	0x8(%r12), %eax
    00000604: 	leal	-0x1(%rax), %edx
    00000607: 	movl	%edx, 0x8(%r12)
.Ltmp1649:
    0000060c: 	cmpl	$0x1, %eax
    0000060f: 	jne	.Ltmp1641 # Offset: 1551
    00000611: 	movq	(%r12), %rax
    00000615: 	movq	%r12, %rdi
    00000618: 	callq	*0x10(%rax) # Offset: 1560
    0000061b: 	cmpb	$0x0, __libc_single_threaded@GLIBC_2.32(%rip)
    00000622: 	je	.Ltmp1643 # Offset: 1570
    00000628: 	movl	0xc(%r12), %eax
    0000062d: 	leal	-0x1(%rax), %edx
    00000630: 	movl	%edx, 0xc(%r12)
.Ltmp1650:
    00000635: 	cmpl	$0x1, %eax
    00000638: 	jne	.Ltmp1641 # Offset: 1592
    0000063a: 	movq	(%r12), %rax
    0000063e: 	addq	$0x10, %rbp
    00000642: 	movq	%r12, %rdi
    00000645: 	callq	*0x18(%rax) # Offset: 1605
    00000648: 	cmpq	%rbp, %rbx
    0000064b: 	jne	.Ltmp1638 # Offset: 1611
.Ltmp1640:
    0000064d: 	movq	0x30(%rsp), %rbp
.Ltmp1639:
    00000652: 	testq	%rbp, %rbp
    00000655: 	je	.Ltmp1644 # Offset: 1621
    00000657: 	movq	0x40(%rsp), %rsi
    0000065c: 	movq	%rbp, %rdi
    0000065f: 	subq	%rbp, %rsi
    00000662: 	callq	_ZdlPvm@PLT # Offset: 1634
.Ltmp1644:
    00000667: 	movq	0xb8(%rsp), %rax
    0000066f: 	subq	%fs:0x28, %rax
    00000678: 	jne	.Ltmp1645 # Offset: 1656
    0000067e: 	addq	$0xc8, %rsp
    00000685: 	popq	%rbx
    00000686: 	popq	%rbp
    00000687: 	popq	%r12
    00000689: 	popq	%r13
    0000068b: 	popq	%r14
    0000068d: 	popq	%r15
    0000068f: 	retq # Offset: 1679
.Ltmp1607:
    00000690: 	testq	%r15, %r15
    00000693: 	jne	.Ltmp1646 # Offset: 1683
    00000699: 	movq	%r13, %rax
    0000069c: 	jmp	.Ltmp1647 # Offset: 1692
.Ltmp1635:
    000006a1: 	movl	$0xffffffff, %eax
    000006a6: 	lock # Offset: 1702
    000006a7: 	xaddl	%eax, 0x8(%r12)
    000006ad: 	jmp	.Ltmp1648 # Offset: 1709
.Ltmp1642:
    000006b2: 	movl	$0xffffffff, %eax
    000006b7: 	lock # Offset: 1719
    000006b8: 	xaddl	%eax, 0x8(%r12)
    000006be: 	jmp	.Ltmp1649 # Offset: 1726
.Ltmp1643:
    000006c3: 	movl	$0xffffffff, %eax
    000006c8: 	lock # Offset: 1736
    000006c9: 	xaddl	%eax, 0xc(%r12)
    000006cf: 	jmp	.Ltmp1650 # Offset: 1743
.Ltmp1636:
    000006d4: 	movl	$0xffffffff, %eax
    000006d9: 	lock # Offset: 1753
    000006da: 	xaddl	%eax, 0xc(%r12)
    000006e0: 	jmp	.Ltmp1651 # Offset: 1760
.Ltmp1622:
    000006e5: 	testq	%rbx, %rbx
    000006e8: 	jne	.Ltmp1652 # Offset: 1768
    000006ee: 	movq	%r13, %rax
    000006f1: 	jmp	.Ltmp1653 # Offset: 1777
.Ltmp1621:
    000006f6: 	leaq	0x28(%rsp), %rsi
    000006fb: 	xorl	%edx, %edx
    000006fd: 	movq	%r12, %rdi
    00000700: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1792
    00000705: 	movq	%rax, 0x90(%rsp)
    0000070d: 	movq	%rax, %rdi
    00000710: 	movq	0x28(%rsp), %rax
    00000715: 	movq	%rax, 0xa0(%rsp)
.Ltmp1655:
    0000071d: 	movq	%rbx, %rdx
    00000720: 	movq	%rbp, %rsi
    00000723: 	callq	memcpy@PLT # Offset: 1827
    00000728: 	movq	0x28(%rsp), %rbx
    0000072d: 	movq	0x90(%rsp), %rax
    00000735: 	jmp	.Ltmp1653 # Offset: 1845
.Ltmp1606:
    0000073a: 	leaq	0x50(%rsp), %rsi
    0000073f: 	xorl	%edx, %edx
    00000741: 	movq	%r12, %rdi
    00000744: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 1860
    00000749: 	movq	%rax, 0x90(%rsp)
    00000751: 	movq	%rax, %rdi
    00000754: 	movq	0x50(%rsp), %rax
    00000759: 	movq	%rax, 0xa0(%rsp)
.Ltmp1654:
    00000761: 	movq	%r15, %rdx
    00000764: 	movq	%rbp, %rsi
    00000767: 	callq	memcpy@PLT # Offset: 1895
    0000076c: 	movq	0x50(%rsp), %r15
    00000771: 	movq	0x90(%rsp), %rax
    00000779: 	jmp	.Ltmp1647 # Offset: 1913
.Ltmp1608:
    0000077e: 	leaq	DATAat0x17123(%rip), %rdi
    00000785: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 1925
.Ltmp1620:
    0000078a: 	leaq	DATAat0x17008(%rip), %rdi
    00000791: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1937
.Ltmp1623:
    00000796: 	leaq	DATAat0x17123(%rip), %rdi
    0000079d: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 1949
.Ltmp1646:
    000007a2: 	movq	%r13, %rdi
    000007a5: 	jmp	.Ltmp1654 # Offset: 1957
.Ltmp1645:
    000007a7: 	callq	__stack_chk_fail@PLT # Offset: 1959
.Ltmp1652:
    000007ac: 	movq	%r13, %rdi
    000007af: 	jmp	.Ltmp1655 # Offset: 1967
.Ltmp1605:
    000007b4: 	leaq	DATAat0x17008(%rip), %rdi
    000007bb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 1979
    000007c0: 	endbr64
    000007c4: 	movq	%rax, %rbx
    000007c7: 	jmp	.Ltmp1656 # Offset: 1991
    000007c9: 	endbr64
    000007cd: 	movq	%rax, %rbx
    000007d0: 	jmp	.Ltmp1657 # Offset: 2000
.Ltmp1658:
    000007d2: 	movq	0x90(%rsp), %rdi
    000007da: 	cmpq	%r13, %rdi
    000007dd: 	je	.Ltmp1657 # Offset: 2013
    000007df: 	movq	0xa0(%rsp), %rax
    000007e7: 	leaq	0x1(%rax), %rsi
    000007eb: 	callq	_ZdlPvm@PLT # Offset: 2027
.Ltmp1657:
    000007f0: 	movq	0x70(%rsp), %rdi
    000007f5: 	leaq	0x80(%rsp), %rax
    000007fd: 	cmpq	%rax, %rdi
    00000800: 	je	.Ltmp1656 # Offset: 2048
    00000802: 	movq	0x80(%rsp), %rax
    0000080a: 	leaq	0x1(%rax), %rsi
    0000080e: 	callq	_ZdlPvm@PLT # Offset: 2062
.Ltmp1656:
    00000813: 	movq	%r15, %rdi
    00000816: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev # Offset: 2070
.Ltmp1661:
    0000081b: 	movq	0x8(%rsp), %rdi
    00000820: 	callq	_ZNSt6vectorISt10shared_ptrI17VariableContainerIlLi13EEESaIS3_EED1Ev # Offset: 2080
    00000825: 	movq	%rbx, %rdi
    00000828: 	callq	_Unwind_Resume@PLT # Offset: 2088
    0000082d: 	endbr64
.Ltmp1659:
    00000831: 	movq	%rax, %rbx
    00000834: 	jmp	.Ltmp1658 # Offset: 2100
    00000836: 	endbr64
    0000083a: 	jmp	.Ltmp1659 # Offset: 2106
    0000083c: 	endbr64
.Ltmp1662:
    00000840: 	movq	%rax, %rbx
    00000843: 	jmp	.Ltmp1660 # Offset: 2115
    00000845: 	endbr64
    00000849: 	movq	%rax, %rbx
    0000084c: 	jmp	.Ltmp1661 # Offset: 2124
    0000084e: 	endbr64
    00000852: 	jmp	.Ltmp1662 # Offset: 2130
    00000854: 	endbr64
    00000858: 	movq	%rax, %rbp
    0000085b: 	movq	0x90(%rsp), %rdi
    00000863: 	leaq	0xa0(%rsp), %rax
    0000086b: 	cmpq	%rax, %rdi
    0000086e: 	je	.Ltmp1663 # Offset: 2158
    00000870: 	movq	0xa0(%rsp), %rax
    00000878: 	leaq	0x1(%rax), %rsi
    0000087c: 	callq	_ZdlPvm@PLT # Offset: 2172
.Ltmp1663:
    00000881: 	movq	%rbp, %rdi
    00000884: 	callq	_Unwind_Resume@PLT # Offset: 2180
.Ltmp1660:
    00000889: 	movq	0x90(%rsp), %rdi
    00000891: 	cmpq	%r13, %rdi
    00000894: 	je	.Ltmp1661 # Offset: 2196
    00000896: 	movq	0xa0(%rsp), %rax
    0000089e: 	leaq	0x1(%rax), %rsi
    000008a2: 	callq	_ZdlPvm@PLT # Offset: 2210
    000008a7: 	jmp	.Ltmp1661 # Offset: 2215
    000008ac: 	endbr64
.Ltmp1665:
    000008b0: 	movq	%rax, %rbx
    000008b3: 	jmp	.Ltmp1664 # Offset: 2227
    000008b5: 	endbr64
    000008b9: 	jmp	.Ltmp1665 # Offset: 2233
    000008bb: 	endbr64
    000008bf: 	jmp	.Ltmp1665 # Offset: 2239
    000008c1: 	endbr64
    000008c5: 	jmp	.Ltmp1665 # Offset: 2245
.Ltmp1664:
    000008c7: 	movq	0x90(%rsp), %rdi
    000008cf: 	cmpq	%r13, %rdi
    000008d2: 	je	.Ltmp1656 # Offset: 2258
    000008d8: 	movq	0xa0(%rsp), %rax
    000008e0: 	leaq	0x1(%rax), %rsi
    000008e4: 	callq	_ZdlPvm@PLT # Offset: 2276
    000008e9: 	jmp	.Ltmp1656 # Offset: 2281
    000008ee: 	endbr64
    000008f2: 	jmp	.Ltmp1665 # Offset: 2290
    000008f4: 	endbr64
    000008f8: 	jmp	.Ltmp1665 # Offset: 2296
    000008fa: 	endbr64
    000008fe: 	jmp	.Ltmp1665 # Offset: 2302
    00000900: 	endbr64
    00000904: 	jmp	.Ltmp1665 # Offset: 2308
DWARF CFI Instructions:
    <empty>
End of Function "_Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1(*2)"

Binary Function "_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_" after disassembly {
  Number      : 139
  State       : disassembled
  Address     : 0x10c50
  Size        : 0x134
  MaxSize     : 0x140
  Offset      : 0x10c50
  Section     : .text
  Orc Section : .local.text._ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0138:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdx, %r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	movq	%rsi, %rax
    0000002c: 	subq	%rdi, %rax
    0000002f: 	movq	%rax, %r14
    00000032: 	sarq	$0x3, %r14
    00000036: 	cmpq	$0x8, %rax
    0000003a: 	jle	.Ltmp1666 # Offset: 58
    0000003c: 	leaq	-0x2(%r14), %rax
    00000040: 	movq	%rsp, %r15
    00000043: 	movq	%rax, %r12
    00000046: 	shrq	$0x3f, %r12
    0000004a: 	addq	%rax, %r12
    0000004d: 	sarq	%r12
    00000050: 	jmp	.Ltmp1667 # Offset: 80
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1668:
    00000058: 	movl	$0x8, %esi
    0000005d: 	callq	_ZdlPvm@PLT # Offset: 93
    00000062: 	testq	%r12, %r12
    00000065: 	je	.Ltmp1666 # Offset: 101
.Ltmp1669:
    00000067: 	subq	$0x1, %r12
.Ltmp1667:
    0000006b: 	movq	(%rbp,%r12,8), %rax
    00000070: 	movq	%rbp, %rdi
    00000073: 	movq	%r15, %rcx
    00000076: 	movq	%r14, %rdx
    00000079: 	movq	$0x0, (%rbp,%r12,8)
    00000082: 	movq	%r12, %rsi
    00000085: 	movq	%rax, (%rsp)
    00000089: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 137
    0000008e: 	movq	(%rsp), %rdi
    00000092: 	testq	%rdi, %rdi
    00000095: 	jne	.Ltmp1668 # Offset: 149
    00000097: 	testq	%r12, %r12
    0000009a: 	jne	.Ltmp1669 # Offset: 154
.Ltmp1666:
    0000009c: 	cmpq	%rbx, %r13
    0000009f: 	jbe	.Ltmp1670 # Offset: 159
    000000a1: 	movq	%rsp, %r12
    000000a4: 	jmp	.Ltmp1671 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1672:
    000000b0: 	addq	$0x8, %rbx
    000000b4: 	cmpq	%rbx, %r13
    000000b7: 	jbe	.Ltmp1670 # Offset: 183
.Ltmp1671:
    000000b9: 	movq	(%rbp), %rdx
    000000bd: 	movq	(%rbx), %rax
    000000c0: 	movq	(%rdx), %rcx
    000000c3: 	cmpq	%rcx, (%rax)
    000000c6: 	jge	.Ltmp1672 # Offset: 198
    000000c8: 	movq	$0x0, (%rbx)
    000000cf: 	movq	(%rbp), %rdx
    000000d3: 	movq	%rbp, %rdi
    000000d6: 	xorl	%esi, %esi
    000000d8: 	movq	$0x0, (%rbp)
    000000e0: 	movq	%r12, %rcx
    000000e3: 	movq	%rdx, (%rbx)
    000000e6: 	movq	%r14, %rdx
    000000e9: 	movq	%rax, (%rsp)
    000000ed: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 237
    000000f2: 	movq	(%rsp), %rdi
    000000f6: 	testq	%rdi, %rdi
    000000f9: 	je	.Ltmp1672 # Offset: 249
    000000fb: 	movl	$0x8, %esi
    00000100: 	addq	$0x8, %rbx
    00000104: 	callq	_ZdlPvm@PLT # Offset: 260
    00000109: 	cmpq	%rbx, %r13
    0000010c: 	ja	.Ltmp1671 # Offset: 268
    0000010e: 	nop # Size: 2
.Ltmp1670:
    00000110: 	movq	0x8(%rsp), %rax
    00000115: 	subq	%fs:0x28, %rax
    0000011e: 	jne	.Ltmp1673 # Offset: 286
    00000120: 	addq	$0x18, %rsp
    00000124: 	popq	%rbx
    00000125: 	popq	%rbp
    00000126: 	popq	%r12
    00000128: 	popq	%r13
    0000012a: 	popq	%r14
    0000012c: 	popq	%r15
    0000012e: 	retq # Offset: 302
.Ltmp1673:
    0000012f: 	callq	__stack_chk_fail@PLT # Offset: 303
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_" after disassembly {
  Number      : 140
  State       : disassembled
  Address     : 0x10d90
  Size        : 0x223
  MaxSize     : 0x230
  Offset      : 0x10d90
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0139:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	movq	%rsi, %rax
    0000001f: 	subq	%rdi, %rax
    00000022: 	cmpq	$0x80, %rax
    00000028: 	jle	.Ltmp1674 # Offset: 40
    0000002e: 	movq	%rdi, %r12
    00000031: 	movq	%rsi, %rbp
    00000034: 	movq	%rdx, %r13
    00000037: 	movq	%rsi, %r8
    0000003a: 	leaq	0x8(%rdi), %rbx
    0000003e: 	testq	%rdx, %rdx
    00000041: 	je	.Ltmp1675 # Offset: 65
.Ltmp1688:
    00000047: 	movq	%r8, %rax
    0000004a: 	movdqu	(%r12), %xmm0
    00000050: 	movq	-0x8(%r8), %r10
    00000054: 	subq	$0x1, %r13
    00000058: 	subq	%r12, %rax
    0000005b: 	movq	%rax, %rdx
    0000005e: 	shrq	$0x3f, %rax
    00000062: 	movdqa	%xmm0, %xmm1
    00000066: 	movq	%xmm0, %rcx
    0000006b: 	sarq	$0x3, %rdx
    0000006f: 	shufpd	$0x1, %xmm0, %xmm1
    00000074: 	addq	%rdx, %rax
    00000077: 	movq	(%r10), %rdx
    0000007a: 	sarq	%rax
    0000007d: 	leaq	(%r12,%rax,8), %rdi
    00000081: 	movq	0x8(%r12), %rax
    00000086: 	movq	(%rdi), %r9
    00000089: 	movq	(%rax), %rsi
    0000008c: 	movq	(%r9), %rax
    0000008f: 	cmpq	%rax, %rsi
    00000092: 	jge	.Ltmp1676 # Offset: 146
    00000098: 	cmpq	%rdx, %rax
    0000009b: 	jl	.Ltmp1677 # Offset: 155
    000000a1: 	cmpq	%rdx, %rsi
    000000a4: 	jl	.Ltmp1678 # Offset: 164
.Ltmp1686:
    000000a6: 	movups	%xmm1, (%r12)
    000000ab: 	movq	-0x8(%r8), %rdi
.Ltmp1687:
    000000af: 	movq	%r8, %rdx
    000000b2: 	movq	%rbx, %rax
    000000b5: 	cmpq	%rsi, (%rcx)
    000000b8: 	jge	.Ltmp1679 # Offset: 184
    000000ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1684:
    000000c0: 	addq	$0x8, %rax
    000000c4: 	nopl	(%rax) # Size: 4
.Ltmp1680:
    000000c8: 	movq	(%rax), %rcx
    000000cb: 	movq	%rax, %rbp
    000000ce: 	addq	$0x8, %rax
    000000d2: 	cmpq	%rsi, (%rcx)
    000000d5: 	jl	.Ltmp1680 # Offset: 213
.Ltmp1685:
    000000d7: 	subq	$0x8, %rdx
    000000db: 	cmpq	%rsi, (%rdi)
    000000de: 	jle	.Ltmp1681 # Offset: 222
.Ltmp1682:
    000000e0: 	movq	-0x8(%rdx), %rdi
    000000e4: 	subq	$0x8, %rdx
    000000e8: 	cmpq	%rsi, (%rdi)
    000000eb: 	jg	.Ltmp1682 # Offset: 235
.Ltmp1681:
    000000ed: 	cmpq	%rbp, %rdx
    000000f0: 	jbe	.Ltmp1683 # Offset: 240
    000000f2: 	movq	%rdi, (%rbp)
    000000f6: 	leaq	0x8(%rbp), %rax
    000000fa: 	movq	-0x8(%rdx), %rdi
    000000fe: 	movq	%rcx, (%rdx)
    00000101: 	movq	(%r12), %rsi
    00000105: 	movq	0x8(%rbp), %rcx
    00000109: 	movq	(%rsi), %rsi
    0000010c: 	cmpq	%rsi, (%rcx)
    0000010f: 	jl	.Ltmp1684 # Offset: 271
.Ltmp1679:
    00000111: 	movq	%rax, %rbp
    00000114: 	jmp	.Ltmp1685 # Offset: 276
.Ltmp1676:
    00000116: 	cmpq	%rdx, %rsi
    00000119: 	jl	.Ltmp1686 # Offset: 281
    0000011b: 	cmpq	%rdx, %rax
    0000011e: 	jge	.Ltmp1677 # Offset: 286
.Ltmp1678:
    00000120: 	movq	%r10, (%r12)
    00000124: 	movq	%rcx, %rdi
    00000127: 	movq	%rcx, -0x8(%r8)
    0000012b: 	movq	(%r12), %rax
    0000012f: 	movq	0x8(%r12), %rcx
    00000134: 	movq	(%rax), %rsi
    00000137: 	jmp	.Ltmp1687 # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp1683:
    00000140: 	movq	%r13, %rdx
    00000143: 	movq	%r8, %rsi
    00000146: 	movq	%rbp, %rdi
    00000149: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_ # Offset: 329
    0000014e: 	movq	%rbp, %rax
    00000151: 	subq	%r12, %rax
    00000154: 	cmpq	$0x80, %rax
    0000015a: 	jle	.Ltmp1674 # Offset: 346
    00000160: 	testq	%r13, %r13
    00000163: 	je	.Ltmp1675 # Offset: 355
    00000165: 	movq	%rbp, %r8
    00000168: 	jmp	.Ltmp1688 # Offset: 360
.Ltmp1677:
    0000016d: 	movq	%r9, (%r12)
    00000171: 	movq	%rcx, (%rdi)
    00000174: 	movq	(%r12), %rax
    00000178: 	movq	0x8(%r12), %rcx
    0000017d: 	movq	-0x8(%r8), %rdi
    00000181: 	movq	(%rax), %rsi
    00000184: 	jmp	.Ltmp1687 # Offset: 388
.Ltmp1675:
    00000189: 	movq	%rbp, %rdx
    0000018c: 	movq	%rbp, %rsi
    0000018f: 	movq	%r12, %rdi
    00000192: 	subq	$0x8, %rbp
    00000196: 	callq	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_ # Offset: 406
    0000019b: 	movq	%rsp, %r13
    0000019e: 	nop # Size: 2
.Ltmp1690:
    000001a0: 	movq	(%rbp), %rax
    000001a4: 	movq	%rbp, %rbx
    000001a7: 	movq	%r12, %rdi
    000001aa: 	movq	%r13, %rcx
    000001ad: 	movq	$0x0, (%rbp)
    000001b5: 	movq	(%r12), %rdx
    000001b9: 	subq	%r12, %rbx
    000001bc: 	xorl	%esi, %esi
    000001be: 	movq	$0x0, (%r12)
    000001c6: 	movq	%rdx, (%rbp)
    000001ca: 	movq	%rbx, %rdx
    000001cd: 	sarq	$0x3, %rdx
    000001d1: 	movq	%rax, (%rsp)
    000001d5: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 469
    000001da: 	movq	(%rsp), %rdi
    000001de: 	testq	%rdi, %rdi
    000001e1: 	je	.Ltmp1689 # Offset: 481
    000001e3: 	movl	$0x8, %esi
    000001e8: 	subq	$0x8, %rbp
    000001ec: 	callq	_ZdlPvm@PLT # Offset: 492
    000001f1: 	cmpq	$0x8, %rbx
    000001f5: 	jg	.Ltmp1690 # Offset: 501
.Ltmp1674:
    000001f7: 	movq	0x8(%rsp), %rax
    000001fc: 	subq	%fs:0x28, %rax
    00000205: 	jne	.Ltmp1691 # Offset: 517
    00000207: 	addq	$0x18, %rsp
    0000020b: 	popq	%rbx
    0000020c: 	popq	%rbp
    0000020d: 	popq	%r12
    0000020f: 	popq	%r13
    00000211: 	retq # Offset: 529
.Ltmp1689:
    00000212: 	subq	$0x8, %rbp
    00000216: 	cmpq	$0x8, %rbx
    0000021a: 	jg	.Ltmp1690 # Offset: 538
    0000021c: 	jmp	.Ltmp1674 # Offset: 540
.Ltmp1691:
    0000021e: 	callq	__stack_chk_fail@PLT # Offset: 542
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_"

Binary Function "_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 141
  State       : disassembled
  Address     : 0x10fc0
  Size        : 0x29d
  MaxSize     : 0x2a0
  Offset      : 0x10fc0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0140:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rsi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%r13), %r15
    00000031: 	movq	(%r13), %r12
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	cmpq	%r15, %r12
    0000003f: 	je	.Ltmp1692 # Offset: 63
    00000045: 	movq	%r15, %rbx
    00000048: 	movl	$0x3f, %edx
    0000004d: 	movq	%r15, %rsi
    00000050: 	movq	%r12, %rdi
    00000053: 	subq	%r12, %rbx
    00000056: 	movq	%rbx, %rax
    00000059: 	sarq	$0x3, %rax
    0000005d: 	bsrq	%rax, %rax
    00000061: 	xorq	$0x3f, %rax
    00000065: 	subl	%eax, %edx
    00000067: 	movslq	%edx, %rdx
    0000006a: 	addq	%rdx, %rdx
    0000006d: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_ # Offset: 109
    00000072: 	cmpq	$0x80, %rbx
    00000079: 	jle	.Ltmp1693 # Offset: 121
    0000007f: 	leaq	0x80(%r12), %rbp
    00000087: 	movq	%r12, %rdi
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1" # Offset: 141
    00000092: 	cmpq	%rbp, %r15
    00000095: 	je	.Ltmp1692 # Offset: 149
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1700:
    000000a0: 	movq	(%rbp), %r12
    000000a4: 	movq	-0x8(%rbp), %rax
    000000a8: 	leaq	-0x8(%rbp), %rbx
    000000ac: 	movq	$0x0, (%rbp)
    000000b4: 	movq	(%r12), %rcx
    000000b8: 	cmpq	%rcx, (%rax)
    000000bb: 	jg	.Ltmp1694 # Offset: 187
    000000bd: 	jmp	.Ltmp1695 # Offset: 189
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1697:
    000000c8: 	movl	$0x8, %esi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	movq	-0x8(%rbx), %rax
    000000d6: 	movq	(%r12), %rcx
    000000da: 	leaq	-0x8(%rbx), %rdx
    000000de: 	cmpq	%rcx, (%rax)
    000000e1: 	jle	.Ltmp1696 # Offset: 225
.Ltmp1698:
    000000e3: 	movq	%rdx, %rbx
.Ltmp1694:
    000000e6: 	movq	0x8(%rbx), %rdi
    000000ea: 	movq	$0x0, (%rbx)
    000000f1: 	movq	%rax, 0x8(%rbx)
    000000f5: 	testq	%rdi, %rdi
    000000f8: 	jne	.Ltmp1697 # Offset: 248
    000000fa: 	movq	-0x8(%rbx), %rax
    000000fe: 	leaq	-0x8(%rbx), %rdx
    00000102: 	cmpq	%rcx, (%rax)
    00000105: 	jg	.Ltmp1698 # Offset: 261
.Ltmp1696:
    00000107: 	movq	(%rbx), %rdi
    0000010a: 	movq	%r12, (%rbx)
    0000010d: 	testq	%rdi, %rdi
    00000110: 	je	.Ltmp1699 # Offset: 272
    00000112: 	movl	$0x8, %esi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp1699:
    0000011c: 	addq	$0x8, %rbp
    00000120: 	cmpq	%rbp, %r15
    00000123: 	jne	.Ltmp1700 # Offset: 291
.Ltmp1692:
    00000129: 	callq	clock@PLT # Offset: 297
    0000012e: 	movq	(%r14), %rsi
    00000131: 	movq	0x8(%r14), %rdx
    00000135: 	pxor	%xmm0, %xmm0
    00000139: 	leaq	0x10(%rsp), %rbp
    0000013e: 	movq	%rax, end_time(%rip)
    00000145: 	leaq	0x20(%rsp), %rbx
    0000014a: 	subq	start_time(%rip), %rax
    00000151: 	addq	%rsi, %rdx
    00000154: 	cvtsi2sd	%rax, %xmm0
    00000159: 	movq	%rbp, %rdi
    0000015c: 	movq	%rbx, 0x10(%rsp)
    00000161: 	divsd	DATAat0x17370(%rip), %xmm0
    00000169: 	movsd	%xmm0, 0x8(%rsp)
    0000016f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 367
    00000174: 	movq	0x8(%r13), %rdi
    00000178: 	movq	0x18(%rsp), %rdx
    0000017d: 	subq	(%r13), %rdi
    00000181: 	movq	0x10(%rsp), %rsi
    00000186: 	movsd	0x8(%rsp), %xmm0
    0000018c: 	sarq	$0x3, %rdi
    00000190: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 400
    00000195: 	movq	0x10(%rsp), %rdi
    0000019a: 	cmpq	%rbx, %rdi
    0000019d: 	je	.Ltmp1701 # Offset: 413
    0000019f: 	movq	0x20(%rsp), %rax
    000001a4: 	leaq	0x1(%rax), %rsi
    000001a8: 	callq	_ZdlPvm@PLT # Offset: 424
.Ltmp1701:
    000001ad: 	movq	(%r14), %rsi
    000001b0: 	movq	0x8(%r14), %rdx
    000001b4: 	movq	%rbp, %rdi
    000001b7: 	movq	%rbx, 0x10(%rsp)
    000001bc: 	addq	%rsi, %rdx
    000001bf: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 447
    000001c4: 	movq	(%r13), %rax
    000001c8: 	movq	0x8(%r13), %rsi
    000001cc: 	addq	$0x8, %rax
    000001d0: 	jmp	.Ltmp1702 # Offset: 464
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1704:
    000001d8: 	movq	(%rdx), %rcx
    000001db: 	movq	-0x8(%rdx), %rdx
    000001df: 	addq	$0x8, %rax
    000001e3: 	movq	(%rdx), %rdi
    000001e6: 	cmpq	%rdi, (%rcx)
    000001e9: 	jl	.Ltmp1703 # Offset: 489
.Ltmp1702:
    000001eb: 	movq	%rax, %rdx
    000001ee: 	cmpq	%rax, %rsi
    000001f1: 	jne	.Ltmp1704 # Offset: 497
.Ltmp1707:
    000001f3: 	movq	0x10(%rsp), %rdi
    000001f8: 	cmpq	%rbx, %rdi
    000001fb: 	je	.Ltmp1705 # Offset: 507
    000001fd: 	movq	0x20(%rsp), %rax
    00000202: 	leaq	0x1(%rax), %rsi
    00000206: 	callq	_ZdlPvm@PLT # Offset: 518
.Ltmp1705:
    0000020b: 	movq	0x38(%rsp), %rax
    00000210: 	subq	%fs:0x28, %rax
    00000219: 	jne	.Ltmp1706 # Offset: 537
    0000021b: 	addq	$0x48, %rsp
    0000021f: 	popq	%rbx
    00000220: 	popq	%rbp
    00000221: 	popq	%r12
    00000223: 	popq	%r13
    00000225: 	popq	%r14
    00000227: 	popq	%r15
    00000229: 	retq # Offset: 553
    0000022a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1693:
    00000230: 	movq	%r15, %rsi
    00000233: 	movq	%r12, %rdi
    00000236: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1" # Offset: 566
    0000023b: 	jmp	.Ltmp1692 # Offset: 571
.Ltmp1703:
    00000240: 	movq	0x10(%rsp), %rdx
    00000245: 	leaq	DATAat0x1710f(%rip), %rsi
    0000024c: 	movl	$0x1, %edi
    00000251: 	xorl	%eax, %eax
    00000253: 	callq	__printf_chk@PLT # Offset: 595
    00000258: 	jmp	.Ltmp1707 # Offset: 600
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1695:
    00000260: 	movq	%r12, (%rbp)
    00000264: 	jmp	.Ltmp1699 # Offset: 612
.Ltmp1706:
    00000269: 	callq	__stack_chk_fail@PLT # Offset: 617
    0000026e: 	endbr64
.Ltmp1709:
    00000272: 	movq	%rax, %rbp
    00000275: 	jmp	.Ltmp1708 # Offset: 629
    00000277: 	endbr64
    0000027b: 	jmp	.Ltmp1709 # Offset: 635
.Ltmp1708:
    0000027d: 	movq	0x10(%rsp), %rdi
    00000282: 	cmpq	%rbx, %rdi
    00000285: 	je	.Ltmp1710 # Offset: 645
    00000287: 	movq	0x20(%rsp), %rax
    0000028c: 	leaq	0x1(%rax), %rsi
    00000290: 	callq	_ZdlPvm@PLT # Offset: 656
.Ltmp1710:
    00000295: 	movq	%rbp, %rdi
    00000298: 	callq	_Unwind_Resume@PLT # Offset: 664
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_" after disassembly {
  Number      : 142
  State       : disassembled
  Address     : 0x11260
  Size        : 0x134
  MaxSize     : 0x140
  Offset      : 0x11260
  Section     : .text
  Orc Section : .local.text._ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0141:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdx, %r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movq	%rdi, %rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rsi, %rbx
    00000017: 	subq	$0x18, %rsp
    0000001b: 	movq	%fs:0x28, %rax
    00000024: 	movq	%rax, 0x8(%rsp)
    00000029: 	movq	%rsi, %rax
    0000002c: 	subq	%rdi, %rax
    0000002f: 	movq	%rax, %r14
    00000032: 	sarq	$0x3, %r14
    00000036: 	cmpq	$0x8, %rax
    0000003a: 	jle	.Ltmp1711 # Offset: 58
    0000003c: 	leaq	-0x2(%r14), %rax
    00000040: 	movq	%rsp, %r15
    00000043: 	movq	%rax, %r12
    00000046: 	shrq	$0x3f, %r12
    0000004a: 	addq	%rax, %r12
    0000004d: 	sarq	%r12
    00000050: 	jmp	.Ltmp1712 # Offset: 80
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1713:
    00000058: 	movl	$0x68, %esi
    0000005d: 	callq	_ZdlPvm@PLT # Offset: 93
    00000062: 	testq	%r12, %r12
    00000065: 	je	.Ltmp1711 # Offset: 101
.Ltmp1714:
    00000067: 	subq	$0x1, %r12
.Ltmp1712:
    0000006b: 	movq	(%rbp,%r12,8), %rax
    00000070: 	movq	%rbp, %rdi
    00000073: 	movq	%r15, %rcx
    00000076: 	movq	%r14, %rdx
    00000079: 	movq	$0x0, (%rbp,%r12,8)
    00000082: 	movq	%r12, %rsi
    00000085: 	movq	%rax, (%rsp)
    00000089: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 137
    0000008e: 	movq	(%rsp), %rdi
    00000092: 	testq	%rdi, %rdi
    00000095: 	jne	.Ltmp1713 # Offset: 149
    00000097: 	testq	%r12, %r12
    0000009a: 	jne	.Ltmp1714 # Offset: 154
.Ltmp1711:
    0000009c: 	cmpq	%rbx, %r13
    0000009f: 	jbe	.Ltmp1715 # Offset: 159
    000000a1: 	movq	%rsp, %r12
    000000a4: 	jmp	.Ltmp1716 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1717:
    000000b0: 	addq	$0x8, %rbx
    000000b4: 	cmpq	%rbx, %r13
    000000b7: 	jbe	.Ltmp1715 # Offset: 183
.Ltmp1716:
    000000b9: 	movq	(%rbp), %rdx
    000000bd: 	movq	(%rbx), %rax
    000000c0: 	movq	(%rdx), %rcx
    000000c3: 	cmpq	%rcx, (%rax)
    000000c6: 	jge	.Ltmp1717 # Offset: 198
    000000c8: 	movq	$0x0, (%rbx)
    000000cf: 	movq	(%rbp), %rdx
    000000d3: 	movq	%rbp, %rdi
    000000d6: 	xorl	%esi, %esi
    000000d8: 	movq	$0x0, (%rbp)
    000000e0: 	movq	%r12, %rcx
    000000e3: 	movq	%rdx, (%rbx)
    000000e6: 	movq	%r14, %rdx
    000000e9: 	movq	%rax, (%rsp)
    000000ed: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 237
    000000f2: 	movq	(%rsp), %rdi
    000000f6: 	testq	%rdi, %rdi
    000000f9: 	je	.Ltmp1717 # Offset: 249
    000000fb: 	movl	$0x68, %esi
    00000100: 	addq	$0x8, %rbx
    00000104: 	callq	_ZdlPvm@PLT # Offset: 260
    00000109: 	cmpq	%rbx, %r13
    0000010c: 	ja	.Ltmp1716 # Offset: 268
    0000010e: 	nop # Size: 2
.Ltmp1715:
    00000110: 	movq	0x8(%rsp), %rax
    00000115: 	subq	%fs:0x28, %rax
    0000011e: 	jne	.Ltmp1718 # Offset: 286
    00000120: 	addq	$0x18, %rsp
    00000124: 	popq	%rbx
    00000125: 	popq	%rbp
    00000126: 	popq	%r12
    00000128: 	popq	%r13
    0000012a: 	popq	%r14
    0000012c: 	popq	%r15
    0000012e: 	retq # Offset: 302
.Ltmp1718:
    0000012f: 	callq	__stack_chk_fail@PLT # Offset: 303
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_" after disassembly {
  Number      : 143
  State       : disassembled
  Address     : 0x113a0
  Size        : 0x223
  MaxSize     : 0x230
  Offset      : 0x113a0
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0142:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	movq	%rsi, %rax
    0000001f: 	subq	%rdi, %rax
    00000022: 	cmpq	$0x80, %rax
    00000028: 	jle	.Ltmp1719 # Offset: 40
    0000002e: 	movq	%rdi, %r12
    00000031: 	movq	%rsi, %rbp
    00000034: 	movq	%rdx, %r13
    00000037: 	movq	%rsi, %r8
    0000003a: 	leaq	0x8(%rdi), %rbx
    0000003e: 	testq	%rdx, %rdx
    00000041: 	je	.Ltmp1720 # Offset: 65
.Ltmp1733:
    00000047: 	movq	%r8, %rax
    0000004a: 	movdqu	(%r12), %xmm0
    00000050: 	movq	-0x8(%r8), %r10
    00000054: 	subq	$0x1, %r13
    00000058: 	subq	%r12, %rax
    0000005b: 	movq	%rax, %rdx
    0000005e: 	shrq	$0x3f, %rax
    00000062: 	movdqa	%xmm0, %xmm1
    00000066: 	movq	%xmm0, %rcx
    0000006b: 	sarq	$0x3, %rdx
    0000006f: 	shufpd	$0x1, %xmm0, %xmm1
    00000074: 	addq	%rdx, %rax
    00000077: 	movq	(%r10), %rdx
    0000007a: 	sarq	%rax
    0000007d: 	leaq	(%r12,%rax,8), %rdi
    00000081: 	movq	0x8(%r12), %rax
    00000086: 	movq	(%rdi), %r9
    00000089: 	movq	(%rax), %rsi
    0000008c: 	movq	(%r9), %rax
    0000008f: 	cmpq	%rax, %rsi
    00000092: 	jge	.Ltmp1721 # Offset: 146
    00000098: 	cmpq	%rdx, %rax
    0000009b: 	jl	.Ltmp1722 # Offset: 155
    000000a1: 	cmpq	%rdx, %rsi
    000000a4: 	jl	.Ltmp1723 # Offset: 164
.Ltmp1731:
    000000a6: 	movups	%xmm1, (%r12)
    000000ab: 	movq	-0x8(%r8), %rdi
.Ltmp1732:
    000000af: 	movq	%r8, %rdx
    000000b2: 	movq	%rbx, %rax
    000000b5: 	cmpq	%rsi, (%rcx)
    000000b8: 	jge	.Ltmp1724 # Offset: 184
    000000ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1729:
    000000c0: 	addq	$0x8, %rax
    000000c4: 	nopl	(%rax) # Size: 4
.Ltmp1725:
    000000c8: 	movq	(%rax), %rcx
    000000cb: 	movq	%rax, %rbp
    000000ce: 	addq	$0x8, %rax
    000000d2: 	cmpq	%rsi, (%rcx)
    000000d5: 	jl	.Ltmp1725 # Offset: 213
.Ltmp1730:
    000000d7: 	subq	$0x8, %rdx
    000000db: 	cmpq	%rsi, (%rdi)
    000000de: 	jle	.Ltmp1726 # Offset: 222
.Ltmp1727:
    000000e0: 	movq	-0x8(%rdx), %rdi
    000000e4: 	subq	$0x8, %rdx
    000000e8: 	cmpq	%rsi, (%rdi)
    000000eb: 	jg	.Ltmp1727 # Offset: 235
.Ltmp1726:
    000000ed: 	cmpq	%rbp, %rdx
    000000f0: 	jbe	.Ltmp1728 # Offset: 240
    000000f2: 	movq	%rdi, (%rbp)
    000000f6: 	leaq	0x8(%rbp), %rax
    000000fa: 	movq	-0x8(%rdx), %rdi
    000000fe: 	movq	%rcx, (%rdx)
    00000101: 	movq	(%r12), %rsi
    00000105: 	movq	0x8(%rbp), %rcx
    00000109: 	movq	(%rsi), %rsi
    0000010c: 	cmpq	%rsi, (%rcx)
    0000010f: 	jl	.Ltmp1729 # Offset: 271
.Ltmp1724:
    00000111: 	movq	%rax, %rbp
    00000114: 	jmp	.Ltmp1730 # Offset: 276
.Ltmp1721:
    00000116: 	cmpq	%rdx, %rsi
    00000119: 	jl	.Ltmp1731 # Offset: 281
    0000011b: 	cmpq	%rdx, %rax
    0000011e: 	jge	.Ltmp1722 # Offset: 286
.Ltmp1723:
    00000120: 	movq	%r10, (%r12)
    00000124: 	movq	%rcx, %rdi
    00000127: 	movq	%rcx, -0x8(%r8)
    0000012b: 	movq	(%r12), %rax
    0000012f: 	movq	0x8(%r12), %rcx
    00000134: 	movq	(%rax), %rsi
    00000137: 	jmp	.Ltmp1732 # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp1728:
    00000140: 	movq	%r13, %rdx
    00000143: 	movq	%r8, %rsi
    00000146: 	movq	%rbp, %rdi
    00000149: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_ # Offset: 329
    0000014e: 	movq	%rbp, %rax
    00000151: 	subq	%r12, %rax
    00000154: 	cmpq	$0x80, %rax
    0000015a: 	jle	.Ltmp1719 # Offset: 346
    00000160: 	testq	%r13, %r13
    00000163: 	je	.Ltmp1720 # Offset: 355
    00000165: 	movq	%rbp, %r8
    00000168: 	jmp	.Ltmp1733 # Offset: 360
.Ltmp1722:
    0000016d: 	movq	%r9, (%r12)
    00000171: 	movq	%rcx, (%rdi)
    00000174: 	movq	(%r12), %rax
    00000178: 	movq	0x8(%r12), %rcx
    0000017d: 	movq	-0x8(%r8), %rdi
    00000181: 	movq	(%rax), %rsi
    00000184: 	jmp	.Ltmp1732 # Offset: 388
.Ltmp1720:
    00000189: 	movq	%rbp, %rdx
    0000018c: 	movq	%rbp, %rsi
    0000018f: 	movq	%r12, %rdi
    00000192: 	subq	$0x8, %rbp
    00000196: 	callq	_ZSt13__heap_selectIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_SG_T0_ # Offset: 406
    0000019b: 	movq	%rsp, %r13
    0000019e: 	nop # Size: 2
.Ltmp1735:
    000001a0: 	movq	(%rbp), %rax
    000001a4: 	movq	%rbp, %rbx
    000001a7: 	movq	%r12, %rdi
    000001aa: 	movq	%r13, %rcx
    000001ad: 	movq	$0x0, (%rbp)
    000001b5: 	movq	(%r12), %rdx
    000001b9: 	subq	%r12, %rbx
    000001bc: 	xorl	%esi, %esi
    000001be: 	movq	$0x0, (%r12)
    000001c6: 	movq	%rdx, (%rbp)
    000001ca: 	movq	%rbx, %rdx
    000001cd: 	sarq	$0x3, %rdx
    000001d1: 	movq	%rax, (%rsp)
    000001d5: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElS7_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_T0_ST_T1_T2_.isra.0/1" # Offset: 469
    000001da: 	movq	(%rsp), %rdi
    000001de: 	testq	%rdi, %rdi
    000001e1: 	je	.Ltmp1734 # Offset: 481
    000001e3: 	movl	$0x68, %esi
    000001e8: 	subq	$0x8, %rbp
    000001ec: 	callq	_ZdlPvm@PLT # Offset: 492
    000001f1: 	cmpq	$0x8, %rbx
    000001f5: 	jg	.Ltmp1735 # Offset: 501
.Ltmp1719:
    000001f7: 	movq	0x8(%rsp), %rax
    000001fc: 	subq	%fs:0x28, %rax
    00000205: 	jne	.Ltmp1736 # Offset: 517
    00000207: 	addq	$0x18, %rsp
    0000020b: 	popq	%rbx
    0000020c: 	popq	%rbp
    0000020d: 	popq	%r12
    0000020f: 	popq	%r13
    00000211: 	retq # Offset: 529
.Ltmp1734:
    00000212: 	subq	$0x8, %rbp
    00000216: 	cmpq	$0x8, %rbx
    0000021a: 	jg	.Ltmp1735 # Offset: 538
    0000021c: 	jmp	.Ltmp1719 # Offset: 540
.Ltmp1736:
    0000021e: 	callq	__stack_chk_fail@PLT # Offset: 542
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_"

Binary Function "_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 144
  State       : disassembled
  Address     : 0x115d0
  Size        : 0x29d
  MaxSize     : 0x2a0
  Offset      : 0x115d0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0143:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rsi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%r13), %r15
    00000031: 	movq	(%r13), %r12
    00000035: 	movq	%rax, start_time(%rip)
    0000003c: 	cmpq	%r15, %r12
    0000003f: 	je	.Ltmp1737 # Offset: 63
    00000045: 	movq	%r15, %rbx
    00000048: 	movl	$0x3f, %edx
    0000004d: 	movq	%r15, %rsi
    00000050: 	movq	%r12, %rdi
    00000053: 	subq	%r12, %rbx
    00000056: 	movq	%rbx, %rax
    00000059: 	sarq	$0x3, %rax
    0000005d: 	bsrq	%rax, %rax
    00000061: 	xorq	$0x3f, %rax
    00000065: 	subl	%eax, %edx
    00000067: 	movslq	%edx, %rdx
    0000006a: 	addq	%rdx, %rdx
    0000006d: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_T1_ # Offset: 109
    00000072: 	cmpq	$0x80, %rbx
    00000079: 	jle	.Ltmp1738 # Offset: 121
    0000007f: 	leaq	0x80(%r12), %rbp
    00000087: 	movq	%r12, %rdi
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1" # Offset: 141
    00000092: 	cmpq	%rbp, %r15
    00000095: 	je	.Ltmp1737 # Offset: 149
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1745:
    000000a0: 	movq	(%rbp), %r12
    000000a4: 	movq	-0x8(%rbp), %rax
    000000a8: 	leaq	-0x8(%rbp), %rbx
    000000ac: 	movq	$0x0, (%rbp)
    000000b4: 	movq	(%r12), %rcx
    000000b8: 	cmpq	%rcx, (%rax)
    000000bb: 	jg	.Ltmp1739 # Offset: 187
    000000bd: 	jmp	.Ltmp1740 # Offset: 189
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1742:
    000000c8: 	movl	$0x68, %esi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	movq	-0x8(%rbx), %rax
    000000d6: 	movq	(%r12), %rcx
    000000da: 	leaq	-0x8(%rbx), %rdx
    000000de: 	cmpq	%rcx, (%rax)
    000000e1: 	jle	.Ltmp1741 # Offset: 225
.Ltmp1743:
    000000e3: 	movq	%rdx, %rbx
.Ltmp1739:
    000000e6: 	movq	0x8(%rbx), %rdi
    000000ea: 	movq	$0x0, (%rbx)
    000000f1: 	movq	%rax, 0x8(%rbx)
    000000f5: 	testq	%rdi, %rdi
    000000f8: 	jne	.Ltmp1742 # Offset: 248
    000000fa: 	movq	-0x8(%rbx), %rax
    000000fe: 	leaq	-0x8(%rbx), %rdx
    00000102: 	cmpq	%rcx, (%rax)
    00000105: 	jg	.Ltmp1743 # Offset: 261
.Ltmp1741:
    00000107: 	movq	(%rbx), %rdi
    0000010a: 	movq	%r12, (%rbx)
    0000010d: 	testq	%rdi, %rdi
    00000110: 	je	.Ltmp1744 # Offset: 272
    00000112: 	movl	$0x68, %esi
    00000117: 	callq	_ZdlPvm@PLT # Offset: 279
.Ltmp1744:
    0000011c: 	addq	$0x8, %rbp
    00000120: 	cmpq	%rbp, %r15
    00000123: 	jne	.Ltmp1745 # Offset: 291
.Ltmp1737:
    00000129: 	callq	clock@PLT # Offset: 297
    0000012e: 	movq	(%r14), %rsi
    00000131: 	movq	0x8(%r14), %rdx
    00000135: 	pxor	%xmm0, %xmm0
    00000139: 	leaq	0x10(%rsp), %rbp
    0000013e: 	movq	%rax, end_time(%rip)
    00000145: 	leaq	0x20(%rsp), %rbx
    0000014a: 	subq	start_time(%rip), %rax
    00000151: 	addq	%rsi, %rdx
    00000154: 	cvtsi2sd	%rax, %xmm0
    00000159: 	movq	%rbp, %rdi
    0000015c: 	movq	%rbx, 0x10(%rsp)
    00000161: 	divsd	DATAat0x17370(%rip), %xmm0
    00000169: 	movsd	%xmm0, 0x8(%rsp)
    0000016f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 367
    00000174: 	movq	0x8(%r13), %rdi
    00000178: 	movq	0x18(%rsp), %rdx
    0000017d: 	subq	(%r13), %rdi
    00000181: 	movq	0x10(%rsp), %rsi
    00000186: 	movsd	0x8(%rsp), %xmm0
    0000018c: 	sarq	$0x3, %rdi
    00000190: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 400
    00000195: 	movq	0x10(%rsp), %rdi
    0000019a: 	cmpq	%rbx, %rdi
    0000019d: 	je	.Ltmp1746 # Offset: 413
    0000019f: 	movq	0x20(%rsp), %rax
    000001a4: 	leaq	0x1(%rax), %rsi
    000001a8: 	callq	_ZdlPvm@PLT # Offset: 424
.Ltmp1746:
    000001ad: 	movq	(%r14), %rsi
    000001b0: 	movq	0x8(%r14), %rdx
    000001b4: 	movq	%rbp, %rdi
    000001b7: 	movq	%rbx, 0x10(%rsp)
    000001bc: 	addq	%rsi, %rdx
    000001bf: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 447
    000001c4: 	movq	(%r13), %rax
    000001c8: 	movq	0x8(%r13), %rsi
    000001cc: 	addq	$0x8, %rax
    000001d0: 	jmp	.Ltmp1747 # Offset: 464
    000001d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1749:
    000001d8: 	movq	(%rdx), %rcx
    000001db: 	movq	-0x8(%rdx), %rdx
    000001df: 	addq	$0x8, %rax
    000001e3: 	movq	(%rdx), %rdi
    000001e6: 	cmpq	%rdi, (%rcx)
    000001e9: 	jl	.Ltmp1748 # Offset: 489
.Ltmp1747:
    000001eb: 	movq	%rax, %rdx
    000001ee: 	cmpq	%rax, %rsi
    000001f1: 	jne	.Ltmp1749 # Offset: 497
.Ltmp1752:
    000001f3: 	movq	0x10(%rsp), %rdi
    000001f8: 	cmpq	%rbx, %rdi
    000001fb: 	je	.Ltmp1750 # Offset: 507
    000001fd: 	movq	0x20(%rsp), %rax
    00000202: 	leaq	0x1(%rax), %rsi
    00000206: 	callq	_ZdlPvm@PLT # Offset: 518
.Ltmp1750:
    0000020b: 	movq	0x38(%rsp), %rax
    00000210: 	subq	%fs:0x28, %rax
    00000219: 	jne	.Ltmp1751 # Offset: 537
    0000021b: 	addq	$0x48, %rsp
    0000021f: 	popq	%rbx
    00000220: 	popq	%rbp
    00000221: 	popq	%r12
    00000223: 	popq	%r13
    00000225: 	popq	%r14
    00000227: 	popq	%r15
    00000229: 	retq # Offset: 553
    0000022a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1738:
    00000230: 	movq	%r15, %rsi
    00000233: 	movq	%r12, %rdi
    00000236: 	callq	"_ZSt16__insertion_sortIN9__gnu_cxx17__normal_iteratorIPSt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS4_EESt6vectorIS7_SaIS7_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS7_EvRS9_IT_SaISG_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS7_SQ_E_EEEvSG_SG_T0_.isra.0/1" # Offset: 566
    0000023b: 	jmp	.Ltmp1737 # Offset: 571
.Ltmp1748:
    00000240: 	movq	0x10(%rsp), %rdx
    00000245: 	leaq	DATAat0x1710f(%rip), %rsi
    0000024c: 	movl	$0x1, %edi
    00000251: 	xorl	%eax, %eax
    00000253: 	callq	__printf_chk@PLT # Offset: 595
    00000258: 	jmp	.Ltmp1752 # Offset: 600
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1740:
    00000260: 	movq	%r12, (%rbp)
    00000264: 	jmp	.Ltmp1744 # Offset: 612
.Ltmp1751:
    00000269: 	callq	__stack_chk_fail@PLT # Offset: 617
    0000026e: 	endbr64
.Ltmp1754:
    00000272: 	movq	%rax, %rbp
    00000275: 	jmp	.Ltmp1753 # Offset: 629
    00000277: 	endbr64
    0000027b: 	jmp	.Ltmp1754 # Offset: 635
.Ltmp1753:
    0000027d: 	movq	0x10(%rsp), %rdi
    00000282: 	cmpq	%rbx, %rdi
    00000285: 	je	.Ltmp1755 # Offset: 645
    00000287: 	movq	0x20(%rsp), %rax
    0000028c: 	leaq	0x1(%rax), %rsi
    00000290: 	callq	_ZdlPvm@PLT # Offset: 656
.Ltmp1755:
    00000295: 	movq	%rbp, %rdi
    00000298: 	callq	_Unwind_Resume@PLT # Offset: 664
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_" after disassembly {
  Number      : 145
  State       : disassembled
  Address     : 0x11870
  Size        : 0x18a
  MaxSize     : 0x190
  Offset      : 0x11870
  Section     : .text
  Orc Section : .local.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0144:
    00000000: 	endbr64
    00000004: 	subq	%rdi, %rsi
    00000007: 	cmpq	$0x8, %rsi
    0000000b: 	jle	.Ltmp1756 # Offset: 11
    00000011: 	sarq	$0x3, %rsi
    00000015: 	pushq	%r15
    00000017: 	movq	%rdi, %rcx
    0000001a: 	leaq	-0x2(%rsi), %rax
    0000001e: 	pushq	%r14
    00000020: 	leaq	-0x1(%rsi), %r8
    00000024: 	notq	%rsi
    00000027: 	pushq	%r13
    00000029: 	movl	%esi, %r11d
    0000002c: 	sarq	%r8
    0000002f: 	pushq	%r12
    00000031: 	andl	$0x1, %r11d
    00000035: 	pushq	%rbp
    00000036: 	pushq	%rbx
    00000037: 	movq	%rax, %rbx
    0000003a: 	shrq	$0x3f, %rbx
    0000003e: 	addq	%rax, %rbx
    00000041: 	sarq	%rbx
    00000044: 	leaq	(%rdi,%rbx,8), %r9
    00000048: 	movq	%rbx, %rdi
    0000004b: 	movq	(%r9), %r10
    0000004e: 	movq	%r9, %rsi
    00000051: 	cmpq	%r8, %rdi
    00000054: 	jge	.Ltmp1757 # Offset: 84
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1769:
    00000060: 	movq	%rdi, %r12
    00000063: 	jmp	.Ltmp1758 # Offset: 99
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp1760:
    00000068: 	movq	%r14, (%rcx,%r12,8)
    0000006c: 	cmpq	%rbp, %r8
    0000006f: 	jle	.Ltmp1759 # Offset: 111
    00000075: 	movq	%rbp, %rax
.Ltmp1761:
    00000078: 	movq	%rax, %r12
.Ltmp1758:
    0000007b: 	leaq	0x1(%r12), %rdx
    00000080: 	leaq	(%rdx,%rdx), %rbp
    00000084: 	shlq	$0x4, %rdx
    00000088: 	leaq	-0x1(%rbp), %rax
    0000008c: 	addq	%rcx, %rdx
    0000008f: 	leaq	(%rcx,%rax,8), %rsi
    00000093: 	movq	(%rdx), %r14
    00000096: 	movq	(%rsi), %r13
    00000099: 	movq	(%r14), %r15
    0000009c: 	cmpq	%r15, (%r13)
    000000a0: 	jle	.Ltmp1760 # Offset: 160
    000000a2: 	movq	%r13, (%rcx,%r12,8)
    000000a6: 	cmpq	%rax, %r8
    000000a9: 	jg	.Ltmp1761 # Offset: 169
.Ltmp1772:
    000000ab: 	cmpq	%rax, %rbx
    000000ae: 	jne	.Ltmp1762 # Offset: 174
    000000b0: 	testb	%r11b, %r11b
    000000b3: 	jne	.Ltmp1763 # Offset: 179
.Ltmp1762:
    000000b5: 	leaq	-0x1(%rax), %rbp
    000000b9: 	sarq	%rbp
    000000bc: 	cmpq	%rax, %rdi
    000000bf: 	jge	.Ltmp1764 # Offset: 191
    000000c5: 	movq	(%r10), %r13
    000000c8: 	jmp	.Ltmp1765 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1767:
    000000d0: 	leaq	-0x1(%rbp), %rdx
    000000d4: 	movq	%rax, (%rsi)
    000000d7: 	movq	%rdx, %rax
    000000da: 	shrq	$0x3f, %rax
    000000de: 	addq	%rdx, %rax
    000000e1: 	sarq	%rax
    000000e4: 	movq	%rax, %rdx
    000000e7: 	movq	%rbp, %rax
    000000ea: 	cmpq	%rbp, %rdi
    000000ed: 	jge	.Ltmp1766 # Offset: 237
    000000ef: 	movq	%rdx, %rbp
.Ltmp1765:
    000000f2: 	leaq	(%rcx,%rbp,8), %r12
    000000f6: 	leaq	(%rcx,%rax,8), %rsi
    000000fa: 	movq	(%r12), %rax
    000000fe: 	cmpq	%r13, (%rax)
    00000101: 	jl	.Ltmp1767 # Offset: 257
.Ltmp1770:
    00000103: 	movq	%r10, (%rsi)
    00000106: 	subq	$0x8, %r9
    0000010a: 	testq	%rdi, %rdi
    0000010d: 	je	.Ltmp1768 # Offset: 269
.Ltmp1771:
    0000010f: 	subq	$0x1, %rdi
    00000113: 	movq	(%r9), %r10
    00000116: 	movq	%r9, %rsi
    00000119: 	cmpq	%r8, %rdi
    0000011c: 	jl	.Ltmp1769 # Offset: 284
.Ltmp1757:
    00000122: 	cmpq	%rbx, %rdi
    00000125: 	jne	.Ltmp1770 # Offset: 293
    00000127: 	movq	%rdi, %rax
    0000012a: 	testb	%r11b, %r11b
    0000012d: 	je	.Ltmp1770 # Offset: 301
.Ltmp1763:
    0000012f: 	leaq	0x1(%rax,%rax), %rax
    00000134: 	leaq	(%rcx,%rax,8), %rdx
    00000138: 	movq	(%rdx), %rbp
    0000013b: 	movq	%rbp, (%rsi)
    0000013e: 	movq	%rdx, %rsi
    00000141: 	jmp	.Ltmp1762 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1766:
    00000150: 	movq	%r12, %rsi
    00000153: 	subq	$0x8, %r9
    00000157: 	movq	%r10, (%rsi)
    0000015a: 	testq	%rdi, %rdi
    0000015d: 	jne	.Ltmp1771 # Offset: 349
.Ltmp1768:
    0000015f: 	popq	%rbx
    00000160: 	popq	%rbp
    00000161: 	popq	%r12
    00000163: 	popq	%r13
    00000165: 	popq	%r14
    00000167: 	popq	%r15
    00000169: 	retq # Offset: 361
    0000016a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1759:
    00000170: 	movq	%rdx, %rsi
    00000173: 	movq	%rbp, %rax
    00000176: 	jmp	.Ltmp1772 # Offset: 374
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1756:
    00000180: 	retq # Offset: 384
.Ltmp1764:
    00000181: 	movq	%r10, (%rsi)
    00000184: 	subq	$0x8, %r9
    00000188: 	jmp	.Ltmp1771 # Offset: 392
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_" after disassembly {
  Number      : 146
  State       : disassembled
  Address     : 0x11a00
  Size        : 0x1eb
  MaxSize     : 0x1f0
  Offset      : 0x11a00
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0145:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	movq	%rsi, %rax
    0000001f: 	subq	%rdi, %rax
    00000022: 	cmpq	$0x80, %rax
    00000028: 	jle	.Ltmp1773 # Offset: 40
    0000002e: 	movq	%rdi, %r12
    00000031: 	movq	%rsi, %rbp
    00000034: 	movq	%rdx, %r13
    00000037: 	movq	%rsi, %r8
    0000003a: 	leaq	0x8(%rdi), %rbx
    0000003e: 	testq	%rdx, %rdx
    00000041: 	je	.Ltmp1774 # Offset: 65
.Ltmp1787:
    00000047: 	movq	%r8, %rax
    0000004a: 	movq	0x8(%r12), %r10
    0000004f: 	movq	-0x8(%r8), %r11
    00000053: 	subq	$0x1, %r13
    00000057: 	subq	%r12, %rax
    0000005a: 	movq	(%r12), %rcx
    0000005e: 	movq	%rax, %rdx
    00000061: 	shrq	$0x3f, %rax
    00000065: 	movq	(%r11), %rsi
    00000068: 	sarq	$0x3, %rdx
    0000006c: 	addq	%rdx, %rax
    0000006f: 	movq	(%r10), %rdx
    00000072: 	sarq	%rax
    00000075: 	leaq	(%r12,%rax,8), %rdi
    00000079: 	movq	(%rdi), %r9
    0000007c: 	movq	(%r9), %rax
    0000007f: 	cmpq	%rax, %rdx
    00000082: 	jge	.Ltmp1775 # Offset: 130
    00000088: 	cmpq	%rsi, %rax
    0000008b: 	jl	.Ltmp1776 # Offset: 139
    00000091: 	cmpq	%rsi, %rdx
    00000094: 	jl	.Ltmp1777 # Offset: 148
.Ltmp1785:
    0000009a: 	movq	%r10, (%r12)
    0000009e: 	movq	%rcx, 0x8(%r12)
    000000a3: 	movq	-0x8(%r8), %rdi
.Ltmp1786:
    000000a7: 	movq	(%r12), %rsi
    000000ab: 	movq	%r8, %rdx
    000000ae: 	movq	%rbx, %rax
    000000b1: 	movq	(%rsi), %rsi
    000000b4: 	cmpq	%rsi, (%rcx)
    000000b7: 	jge	.Ltmp1778 # Offset: 183
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp1783:
    000000c0: 	addq	$0x8, %rax
    000000c4: 	nopl	(%rax) # Size: 4
.Ltmp1779:
    000000c8: 	movq	(%rax), %rcx
    000000cb: 	movq	%rax, %rbp
    000000ce: 	addq	$0x8, %rax
    000000d2: 	cmpq	%rsi, (%rcx)
    000000d5: 	jl	.Ltmp1779 # Offset: 213
.Ltmp1784:
    000000d7: 	subq	$0x8, %rdx
    000000db: 	cmpq	%rsi, (%rdi)
    000000de: 	jle	.Ltmp1780 # Offset: 222
.Ltmp1781:
    000000e0: 	movq	-0x8(%rdx), %rax
    000000e4: 	subq	$0x8, %rdx
    000000e8: 	cmpq	%rsi, (%rax)
    000000eb: 	jg	.Ltmp1781 # Offset: 235
.Ltmp1780:
    000000ed: 	cmpq	%rbp, %rdx
    000000f0: 	jbe	.Ltmp1782 # Offset: 240
    000000f2: 	movq	(%rdx), %rax
    000000f5: 	movq	%rax, (%rbp)
    000000f9: 	leaq	0x8(%rbp), %rax
    000000fd: 	movq	-0x8(%rdx), %rdi
    00000101: 	movq	%rcx, (%rdx)
    00000104: 	movq	(%r12), %rsi
    00000108: 	movq	0x8(%rbp), %rcx
    0000010c: 	movq	(%rsi), %rsi
    0000010f: 	cmpq	%rsi, (%rcx)
    00000112: 	jl	.Ltmp1783 # Offset: 274
.Ltmp1778:
    00000114: 	movq	%rax, %rbp
    00000117: 	jmp	.Ltmp1784 # Offset: 279
.Ltmp1775:
    00000119: 	cmpq	%rsi, %rdx
    0000011c: 	jl	.Ltmp1785 # Offset: 284
    00000122: 	cmpq	%rsi, %rax
    00000125: 	jge	.Ltmp1776 # Offset: 293
.Ltmp1777:
    00000127: 	movq	%r11, (%r12)
    0000012b: 	movq	%rcx, %rdi
    0000012e: 	movq	%rcx, -0x8(%r8)
    00000132: 	movq	0x8(%r12), %rcx
    00000137: 	jmp	.Ltmp1786 # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp1782:
    00000140: 	movq	%r13, %rdx
    00000143: 	movq	%r8, %rsi
    00000146: 	movq	%rbp, %rdi
    00000149: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 329
    0000014e: 	movq	%rbp, %rax
    00000151: 	subq	%r12, %rax
    00000154: 	cmpq	$0x80, %rax
    0000015a: 	jle	.Ltmp1773 # Offset: 346
    0000015c: 	testq	%r13, %r13
    0000015f: 	je	.Ltmp1774 # Offset: 351
    00000161: 	movq	%rbp, %r8
    00000164: 	jmp	.Ltmp1787 # Offset: 356
.Ltmp1776:
    00000169: 	movq	%r9, (%r12)
    0000016d: 	movq	%rcx, (%rdi)
    00000170: 	movq	0x8(%r12), %rcx
    00000175: 	movq	-0x8(%r8), %rdi
    00000179: 	jmp	.Ltmp1786 # Offset: 377
.Ltmp1774:
    0000017e: 	movzbl	0x40(%rsp), %eax
    00000183: 	leaq	0x7(%rsp), %rdx
    00000188: 	movq	%rbp, %rsi
    0000018b: 	movq	%r12, %rdi
    0000018e: 	movb	%al, 0x7(%rsp)
    00000192: 	callq	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_ # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1788:
    000001a0: 	subq	$0x8, %rbp
    000001a4: 	movq	(%r12), %rax
    000001a8: 	movq	(%rbp), %rdx
    000001ac: 	movq	%r12, %rdi
    000001af: 	movq	%rbp, %rbx
    000001b2: 	subq	%r12, %rbx
    000001b5: 	movq	%rax, (%rbp)
    000001b9: 	movq	%rbx, %rsi
    000001bc: 	sarq	$0x3, %rsi
    000001c0: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1" # Offset: 448
    000001c5: 	cmpq	$0x8, %rbx
    000001c9: 	jg	.Ltmp1788 # Offset: 457
.Ltmp1773:
    000001cb: 	movq	0x8(%rsp), %rax
    000001d0: 	subq	%fs:0x28, %rax
    000001d9: 	jne	.Ltmp1789 # Offset: 473
    000001db: 	addq	$0x18, %rsp
    000001df: 	popq	%rbx
    000001e0: 	popq	%rbp
    000001e1: 	popq	%r12
    000001e3: 	popq	%r13
    000001e5: 	retq # Offset: 485
.Ltmp1789:
    000001e6: 	callq	__stack_chk_fail@PLT # Offset: 486
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_"

Binary Function "_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 147
  State       : disassembled
  Address     : 0x11bf0
  Size        : 0x349
  MaxSize     : 0x350
  Offset      : 0x11bf0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0146:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%rbx), %r13
    00000031: 	movq	(%rbx), %r14
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	cmpq	%r13, %r14
    0000003e: 	je	.Ltmp1790 # Offset: 62
    00000044: 	movq	%r13, %r15
    00000047: 	movl	$0x3f, %edx
    0000004c: 	movq	%r13, %rsi
    0000004f: 	movq	%r14, %rdi
    00000052: 	subq	%r14, %r15
    00000055: 	leaq	0x8(%r14), %r12
    00000059: 	movq	%r15, %rax
    0000005c: 	sarq	$0x3, %rax
    00000060: 	bsrq	%rax, %rax
    00000064: 	xorq	$0x3f, %rax
    00000068: 	subl	%eax, %edx
    0000006a: 	movslq	%edx, %rdx
    0000006d: 	addq	%rdx, %rdx
    00000070: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi1EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 112
    00000075: 	cmpq	$0x80, %r15
    0000007c: 	jle	.Ltmp1791 # Offset: 124
    00000082: 	leaq	0x80(%r14), %r15
    00000089: 	jmp	.Ltmp1792 # Offset: 137
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1795:
    00000090: 	cmpq	%r12, %r14
    00000093: 	je	.Ltmp1793 # Offset: 147
    00000095: 	movl	$0x8, %eax
    0000009a: 	movq	%r12, %rdx
    0000009d: 	movq	%r14, %rsi
    000000a0: 	movq	%r8, 0x8(%rsp)
    000000a5: 	subq	%r14, %rdx
    000000a8: 	leaq	(%r14,%rax), %rdi
    000000ac: 	callq	memmove@PLT # Offset: 172
    000000b1: 	movq	0x8(%rsp), %r8
.Ltmp1793:
    000000b6: 	addq	$0x8, %r12
    000000ba: 	movq	%r8, (%r14)
    000000bd: 	cmpq	%r12, %r15
    000000c0: 	je	.Ltmp1794 # Offset: 192
.Ltmp1792:
    000000c2: 	movq	(%r12), %r8
    000000c6: 	movq	(%r14), %rax
    000000c9: 	movq	(%r8), %rdx
    000000cc: 	cmpq	(%rax), %rdx
    000000cf: 	jl	.Ltmp1795 # Offset: 207
    000000d1: 	movq	-0x8(%r12), %rsi
    000000d6: 	leaq	-0x8(%r12), %rax
    000000db: 	cmpq	(%rsi), %rdx
    000000de: 	jge	.Ltmp1796 # Offset: 222
    000000e4: 	nopl	(%rax) # Size: 4
.Ltmp1797:
    000000e8: 	movq	(%rax), %rsi
    000000eb: 	movq	%rax, %rdi
    000000ee: 	subq	$0x8, %rax
    000000f2: 	movq	%rsi, 0x10(%rax)
    000000f6: 	movq	(%rax), %rsi
    000000f9: 	cmpq	(%rsi), %rdx
    000000fc: 	jl	.Ltmp1797 # Offset: 252
.Ltmp1814:
    000000fe: 	addq	$0x8, %r12
    00000102: 	movq	%r8, (%rdi)
    00000105: 	cmpq	%r12, %r15
    00000108: 	jne	.Ltmp1792 # Offset: 264
.Ltmp1794:
    0000010a: 	cmpq	%r15, %r13
    0000010d: 	je	.Ltmp1790 # Offset: 269
    0000010f: 	nop # Size: 1
.Ltmp1800:
    00000110: 	movq	(%r15), %rdi
    00000113: 	movq	-0x8(%r15), %rdx
    00000117: 	leaq	-0x8(%r15), %rax
    0000011b: 	movq	(%rdi), %rcx
    0000011e: 	cmpq	(%rdx), %rcx
    00000121: 	jge	.Ltmp1798 # Offset: 289
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1799:
    00000130: 	movq	(%rax), %rdx
    00000133: 	movq	%rax, %rsi
    00000136: 	subq	$0x8, %rax
    0000013a: 	movq	%rdx, 0x10(%rax)
    0000013e: 	movq	(%rax), %rdx
    00000141: 	cmpq	%rcx, (%rdx)
    00000144: 	jg	.Ltmp1799 # Offset: 324
    00000146: 	addq	$0x8, %r15
    0000014a: 	movq	%rdi, (%rsi)
    0000014d: 	cmpq	%r15, %r13
    00000150: 	jne	.Ltmp1800 # Offset: 336
.Ltmp1790:
    00000152: 	callq	clock@PLT # Offset: 338
    00000157: 	movq	(%rbp), %rsi
    0000015b: 	movq	0x8(%rbp), %rdx
    0000015f: 	leaq	0x10(%rsp), %r13
    00000164: 	movq	%rax, end_time(%rip)
    0000016b: 	movq	%r13, %rdi
    0000016e: 	pxor	%xmm0, %xmm0
    00000172: 	subq	start_time(%rip), %rax
    00000179: 	addq	%rsi, %rdx
    0000017c: 	cvtsi2sd	%rax, %xmm0
    00000181: 	leaq	0x20(%rsp), %r12
    00000186: 	divsd	DATAat0x17370(%rip), %xmm0
    0000018e: 	movq	%r12, 0x10(%rsp)
    00000193: 	movsd	%xmm0, 0x8(%rsp)
    00000199: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 409
    0000019e: 	movq	0x8(%rbx), %rdi
    000001a2: 	movq	0x18(%rsp), %rdx
    000001a7: 	subq	(%rbx), %rdi
    000001aa: 	movq	0x10(%rsp), %rsi
    000001af: 	movsd	0x8(%rsp), %xmm0
    000001b5: 	sarq	$0x3, %rdi
    000001b9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 441
    000001be: 	movq	0x10(%rsp), %rdi
    000001c3: 	cmpq	%r12, %rdi
    000001c6: 	je	.Ltmp1801 # Offset: 454
    000001c8: 	movq	0x20(%rsp), %rax
    000001cd: 	leaq	0x1(%rax), %rsi
    000001d1: 	callq	_ZdlPvm@PLT # Offset: 465
.Ltmp1801:
    000001d6: 	movq	(%rbp), %rsi
    000001da: 	movq	0x8(%rbp), %rdx
    000001de: 	movq	%r13, %rdi
    000001e1: 	movq	%r12, 0x10(%rsp)
    000001e6: 	addq	%rsi, %rdx
    000001e9: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 489
    000001ee: 	movq	(%rbx), %rax
    000001f1: 	movq	0x8(%rbx), %rsi
    000001f5: 	addq	$0x8, %rax
    000001f9: 	jmp	.Ltmp1802 # Offset: 505
    000001fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1804:
    00000200: 	movq	(%rdx), %rcx
    00000203: 	movq	-0x8(%rdx), %rdx
    00000207: 	addq	$0x8, %rax
    0000020b: 	movq	(%rdx), %rbx
    0000020e: 	cmpq	%rbx, (%rcx)
    00000211: 	jl	.Ltmp1803 # Offset: 529
.Ltmp1802:
    00000217: 	movq	%rax, %rdx
    0000021a: 	cmpq	%rax, %rsi
    0000021d: 	jne	.Ltmp1804 # Offset: 541
.Ltmp1812:
    0000021f: 	movq	0x10(%rsp), %rdi
    00000224: 	cmpq	%r12, %rdi
    00000227: 	je	.Ltmp1805 # Offset: 551
    00000229: 	movq	0x20(%rsp), %rax
    0000022e: 	leaq	0x1(%rax), %rsi
    00000232: 	callq	_ZdlPvm@PLT # Offset: 562
.Ltmp1805:
    00000237: 	movq	0x38(%rsp), %rax
    0000023c: 	subq	%fs:0x28, %rax
    00000245: 	jne	.Ltmp1806 # Offset: 581
    0000024b: 	addq	$0x48, %rsp
    0000024f: 	popq	%rbx
    00000250: 	popq	%rbp
    00000251: 	popq	%r12
    00000253: 	popq	%r13
    00000255: 	popq	%r14
    00000257: 	popq	%r15
    00000259: 	retq # Offset: 601
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1808:
    00000260: 	cmpq	%r12, %r14
    00000263: 	je	.Ltmp1807 # Offset: 611
    00000265: 	movq	%r12, %rdx
    00000268: 	movl	$0x8, %eax
    0000026d: 	movq	%r14, %rsi
    00000270: 	subq	%r14, %rdx
    00000273: 	leaq	(%r14,%rax), %rdi
    00000277: 	callq	memmove@PLT # Offset: 631
.Ltmp1807:
    0000027c: 	movq	%r15, (%r14)
.Ltmp1811:
    0000027f: 	addq	$0x8, %r12
.Ltmp1791:
    00000283: 	cmpq	%r12, %r13
    00000286: 	je	.Ltmp1790 # Offset: 646
    0000028c: 	movq	(%r12), %r15
    00000290: 	movq	(%r14), %rax
    00000293: 	movq	(%r15), %rdx
    00000296: 	cmpq	(%rax), %rdx
    00000299: 	jl	.Ltmp1808 # Offset: 665
    0000029b: 	movq	-0x8(%r12), %rsi
    000002a0: 	leaq	-0x8(%r12), %rax
    000002a5: 	cmpq	(%rsi), %rdx
    000002a8: 	jge	.Ltmp1809 # Offset: 680
    000002aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1810:
    000002b0: 	movq	(%rax), %rsi
    000002b3: 	movq	%rax, %rdi
    000002b6: 	subq	$0x8, %rax
    000002ba: 	movq	%rsi, 0x10(%rax)
    000002be: 	movq	(%rax), %rsi
    000002c1: 	cmpq	(%rsi), %rdx
    000002c4: 	jl	.Ltmp1810 # Offset: 708
.Ltmp1813:
    000002c6: 	movq	%r15, (%rdi)
    000002c9: 	jmp	.Ltmp1811 # Offset: 713
    000002cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1803:
    000002d0: 	movq	0x10(%rsp), %rdx
    000002d5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002dc: 	movl	$0x1, %edi
    000002e1: 	xorl	%eax, %eax
    000002e3: 	callq	__printf_chk@PLT # Offset: 739
    000002e8: 	jmp	.Ltmp1812 # Offset: 744
    000002ed: 	nopl	(%rax) # Size: 3
.Ltmp1798:
    000002f0: 	movq	%r15, %rsi
    000002f3: 	addq	$0x8, %r15
    000002f7: 	movq	%rdi, (%rsi)
    000002fa: 	cmpq	%r15, %r13
    000002fd: 	jne	.Ltmp1800 # Offset: 765
    00000303: 	jmp	.Ltmp1790 # Offset: 771
.Ltmp1809:
    00000308: 	movq	%r12, %rdi
    0000030b: 	jmp	.Ltmp1813 # Offset: 779
.Ltmp1796:
    0000030d: 	movq	%r12, %rdi
    00000310: 	jmp	.Ltmp1814 # Offset: 784
.Ltmp1806:
    00000315: 	callq	__stack_chk_fail@PLT # Offset: 789
    0000031a: 	endbr64
.Ltmp1816:
    0000031e: 	movq	%rax, %rbp
    00000321: 	jmp	.Ltmp1815 # Offset: 801
    00000323: 	endbr64
    00000327: 	jmp	.Ltmp1816 # Offset: 807
.Ltmp1815:
    00000329: 	movq	0x10(%rsp), %rdi
    0000032e: 	cmpq	%r12, %rdi
    00000331: 	je	.Ltmp1817 # Offset: 817
    00000333: 	movq	0x20(%rsp), %rax
    00000338: 	leaq	0x1(%rax), %rsi
    0000033c: 	callq	_ZdlPvm@PLT # Offset: 828
.Ltmp1817:
    00000341: 	movq	%rbp, %rdi
    00000344: 	callq	_Unwind_Resume@PLT # Offset: 836
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIlLi1EEvii" after disassembly {
  Number      : 148
  State       : disassembled
  Address     : 0x11f40
  Size        : 0x1e0d
  MaxSize     : 0x1e10
  Offset      : 0x11f40
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlLi1EEvii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0147:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	$0x2d, %edx
    0000000b: 	pushq	%r14
    0000000d: 	pushq	%r13
    0000000f: 	pushq	%r12
    00000011: 	pushq	%rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x128, %rsp
    0000001a: 	movl	%edi, 0x1c(%rsp)
    0000001e: 	leaq	0xf0(%rsp), %r12
    00000026: 	leaq	0x100(%rsp), %rbp
    0000002e: 	movl	%esi, 0x18(%rsp)
    00000032: 	movq	%r12, %rdi
    00000035: 	movl	$0x1, %esi
    0000003a: 	leaq	0xb0(%rsp), %r13
    00000042: 	movq	%fs:0x28, %rax
    0000004b: 	movq	%rax, 0x118(%rsp)
    00000053: 	xorl	%eax, %eax
    00000055: 	movq	%rbp, 0xf0(%rsp)
    0000005d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@PLT # Offset: 93
    00000062: 	movq	0xf0(%rsp), %rax
    0000006a: 	movl	$0x1, %edx
    0000006f: 	movq	%r13, %rdi
    00000072: 	leaq	DATAat0x171fd(%rip), %rsi
    00000079: 	movb	$0x31, (%rax)
    0000007c: 	leaq	0xc0(%rsp), %rax
    00000084: 	movq	%rax, (%rsp)
    00000088: 	movq	%rax, 0xb0(%rsp)
    00000090: 	movl	$0x5f34, %eax
    00000095: 	movl	$0x36746e69, 0xc0(%rsp)
    000000a0: 	movw	%ax, 0xc4(%rsp)
    000000a8: 	movb	$0x74, 0xc6(%rsp)
    000000b0: 	movq	$0x7, 0xb8(%rsp)
    000000bc: 	movb	$0x0, 0xc7(%rsp)
    000000c4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 196
    000000c9: 	leaq	0xe0(%rsp), %rcx
    000000d1: 	leaq	0x10(%rax), %rdx
    000000d5: 	movq	%rcx, 0x8(%rsp)
    000000da: 	movq	%rcx, 0xd0(%rsp)
    000000e2: 	movq	(%rax), %rcx
    000000e5: 	cmpq	%rdx, %rcx
    000000e8: 	je	.Ltmp1818 # Offset: 232
    000000ee: 	movq	%rcx, 0xd0(%rsp)
    000000f6: 	movq	0x10(%rax), %rcx
    000000fa: 	movq	%rcx, 0xe0(%rsp)
.Ltmp1953:
    00000102: 	movq	0x8(%rax), %rcx
    00000106: 	movq	%rcx, 0xd8(%rsp)
    0000010e: 	movb	$0x0, 0x10(%rax)
    00000112: 	movq	%rdx, (%rax)
    00000115: 	movq	0xd0(%rsp), %r9
    0000011d: 	movq	$0x0, 0x8(%rax)
    00000125: 	movl	$0xf, %eax
    0000012a: 	movq	0xd8(%rsp), %r8
    00000132: 	movq	0xf8(%rsp), %rdx
    0000013a: 	cmpq	0x8(%rsp), %r9
    0000013f: 	movq	%rax, %rdi
    00000142: 	cmovneq	0xe0(%rsp), %rdi
    0000014b: 	movq	0xf0(%rsp), %rsi
    00000153: 	leaq	(%r8,%rdx), %rcx
    00000157: 	cmpq	%rdi, %rcx
    0000015a: 	jbe	.Ltmp1819 # Offset: 346
    0000015c: 	cmpq	%rbp, %rsi
    0000015f: 	cmovneq	0x100(%rsp), %rax
    00000168: 	cmpq	%rax, %rcx
    0000016b: 	jbe	.Ltmp1820 # Offset: 363
.Ltmp1819:
    00000171: 	leaq	0xd0(%rsp), %rdi
    00000179: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 377
    0000017e: 	leaq	0xa0(%rsp), %rcx
    00000186: 	leaq	0x10(%rax), %rdx
    0000018a: 	movq	%rcx, 0x30(%rsp)
    0000018f: 	movq	%rcx, 0x90(%rsp)
    00000197: 	movq	(%rax), %rcx
    0000019a: 	cmpq	%rdx, %rcx
    0000019d: 	je	.Ltmp1821 # Offset: 413
.Ltmp1939:
    000001a3: 	movq	%rcx, 0x90(%rsp)
    000001ab: 	movq	0x10(%rax), %rcx
    000001af: 	movq	%rcx, 0xa0(%rsp)
.Ltmp1940:
    000001b7: 	movq	0x8(%rax), %rcx
    000001bb: 	movq	%rcx, 0x98(%rsp)
    000001c3: 	movq	%rdx, (%rax)
    000001c6: 	movb	$0x0, 0x10(%rax)
    000001ca: 	movq	0xd0(%rsp), %rdi
    000001d2: 	movq	$0x0, 0x8(%rax)
    000001da: 	cmpq	0x8(%rsp), %rdi
    000001df: 	je	.Ltmp1822 # Offset: 479
    000001e1: 	movq	0xe0(%rsp), %rax
    000001e9: 	leaq	0x1(%rax), %rsi
    000001ed: 	callq	_ZdlPvm@PLT # Offset: 493
.Ltmp1822:
    000001f2: 	movq	0xb0(%rsp), %rdi
    000001fa: 	cmpq	(%rsp), %rdi
    000001fe: 	je	.Ltmp1823 # Offset: 510
    00000200: 	movq	0xc0(%rsp), %rax
    00000208: 	leaq	0x1(%rax), %rsi
    0000020c: 	callq	_ZdlPvm@PLT # Offset: 524
.Ltmp1823:
    00000211: 	movq	0xf0(%rsp), %rdi
    00000219: 	cmpq	%rbp, %rdi
    0000021c: 	je	.Ltmp1824 # Offset: 540
    0000021e: 	movq	0x100(%rsp), %rax
    00000226: 	leaq	0x1(%rax), %rsi
    0000022a: 	callq	_ZdlPvm@PLT # Offset: 554
.Ltmp1824:
    0000022f: 	movq	0x90(%rsp), %rsi
    00000237: 	movq	0x98(%rsp), %rdx
    0000023f: 	movq	%r13, %rdi
    00000242: 	movq	(%rsp), %rax
    00000246: 	addq	%rsi, %rdx
    00000249: 	movq	%rax, 0xb0(%rsp)
    00000251: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 593
    00000256: 	movabsq	$0x3fffffffffffffff, %rax
    00000260: 	subq	0xb8(%rsp), %rax
    00000268: 	cmpq	$0x7, %rax
    0000026c: 	jbe	.Ltmp1825 # Offset: 620
    00000272: 	movl	$0x8, %edx
    00000277: 	leaq	DATAat0x171ff(%rip), %rsi
    0000027e: 	movq	%r13, %rdi
    00000281: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 641
    00000286: 	movq	0xb0(%rsp), %rsi
    0000028e: 	movq	0xb8(%rsp), %rdx
    00000296: 	movq	%r12, %rdi
    00000299: 	movq	%rbp, 0xf0(%rsp)
    000002a1: 	addq	%rsi, %rdx
    000002a4: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 676
    000002a9: 	movabsq	$0x3fffffffffffffff, %rax
    000002b3: 	subq	0xf8(%rsp), %rax
    000002bb: 	cmpq	$0xc, %rax
    000002bf: 	jbe	.Ltmp1826 # Offset: 703
    000002c5: 	movl	$0xd, %edx
    000002ca: 	leaq	DATAat0x17152(%rip), %rsi
    000002d1: 	movq	%r12, %rdi
    000002d4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 724
    000002d9: 	leaq	0x50(%rsp), %rax
    000002de: 	movl	0x18(%rsp), %edx
    000002e2: 	movl	0x1c(%rsp), %esi
    000002e6: 	movq	%r12, %rcx
    000002e9: 	movq	%rax, %rdi
    000002ec: 	movq	%rax, 0x10(%rsp)
    000002f1: 	callq	_Z11CreateArrayI17VariableContainerIlLi1EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 753
    000002f6: 	movq	0xf0(%rsp), %rdi
    000002fe: 	cmpq	%rbp, %rdi
    00000301: 	je	.Ltmp1827 # Offset: 769
    00000303: 	movq	0x100(%rsp), %rax
    0000030b: 	leaq	0x1(%rax), %rsi
    0000030f: 	callq	_ZdlPvm@PLT # Offset: 783
.Ltmp1827:
    00000314: 	leaq	DATAat0x17160(%rip), %rdx
    0000031b: 	movq	%r13, %rsi
    0000031e: 	movq	%r12, %rdi
    00000321: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 801
    00000326: 	leaq	0x70(%rsp), %r15
    0000032b: 	movq	0x10(%rsp), %rsi
    00000330: 	movq	%r12, %rdx
    00000333: 	movq	%r15, %rdi
    00000336: 	callq	_Z9CopyArrayIP17VariableContainerIlLi1EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 822
    0000033b: 	movq	0xf0(%rsp), %rdi
    00000343: 	cmpq	%rbp, %rdi
    00000346: 	je	.Ltmp1828 # Offset: 838
    00000348: 	movq	0x100(%rsp), %rax
    00000350: 	leaq	0x1(%rax), %rsi
    00000354: 	callq	_ZdlPvm@PLT # Offset: 852
.Ltmp1828:
    00000359: 	movq	0x8(%rsp), %rax
    0000035e: 	movq	0xb0(%rsp), %rbx
    00000366: 	movq	0xb8(%rsp), %r14
    0000036e: 	movq	%rax, 0xd0(%rsp)
    00000376: 	movq	%rbx, %rax
    00000379: 	addq	%r14, %rax
    0000037c: 	je	.Ltmp1829 # Offset: 892
    0000037e: 	testq	%rbx, %rbx
    00000381: 	je	.Ltmp1830 # Offset: 897
.Ltmp1829:
    00000387: 	movq	%r14, 0x48(%rsp)
    0000038c: 	cmpq	$0xf, %r14
    00000390: 	ja	.Ltmp1831 # Offset: 912
    00000396: 	cmpq	$0x1, %r14
    0000039a: 	jne	.Ltmp1832 # Offset: 922
    000003a0: 	movzbl	(%rbx), %eax
    000003a3: 	movb	%al, 0xe0(%rsp)
    000003aa: 	movq	0x8(%rsp), %rax
.Ltmp1938:
    000003af: 	movq	%r14, 0xd8(%rsp)
    000003b7: 	movb	$0x0, (%rax,%r14)
    000003bc: 	movabsq	$0x3fffffffffffffff, %rax
    000003c6: 	subq	0xd8(%rsp), %rax
    000003ce: 	cmpq	$0x11, %rax
    000003d2: 	jbe	.Ltmp1833 # Offset: 978
    000003d8: 	leaq	0xd0(%rsp), %rax
    000003e0: 	movl	$0x12, %edx
    000003e5: 	leaq	DATAat0x1716c(%rip), %rsi
    000003ec: 	movq	%rax, %rdi
    000003ef: 	movq	%rax, 0x28(%rsp)
    000003f4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1012
    000003f9: 	movq	0x78(%rsp), %rdi
    000003fe: 	subq	0x70(%rsp), %rdi
    00000403: 	movq	%rdi, %r14
    00000406: 	movq	%rdi, 0x20(%rsp)
    0000040b: 	callq	clock@PLT # Offset: 1035
    00000410: 	movq	0x70(%rsp), %rsi
    00000415: 	movq	0x20(%rsp), %rdi
    0000041a: 	sarq	$0x3, %r14
    0000041e: 	movq	%rax, start_time(%rip)
    00000425: 	movl	$0x14, %ecx
    0000042a: 	movq	(%rsi), %rax
    0000042d: 	movq	(%rax), %r8
.Ltmp1836:
    00000430: 	movq	%r8, %rbx
    00000433: 	cmpq	$0x8, %rdi
    00000437: 	jbe	.Ltmp1834 # Offset: 1079
    00000439: 	movl	$0x1, %eax
    0000043e: 	nop # Size: 2
.Ltmp1835:
    00000440: 	movq	(%rsi,%rax,8), %rdx
    00000444: 	addq	$0x1, %rax
    00000448: 	addq	(%rdx), %rbx
    0000044b: 	cmpq	%rax, %r14
    0000044e: 	ja	.Ltmp1835 # Offset: 1102
.Ltmp1834:
    00000450: 	subq	$0x1, %rcx
    00000454: 	jne	.Ltmp1836 # Offset: 1108
    00000456: 	callq	clock@PLT # Offset: 1110
    0000045b: 	movq	0xd0(%rsp), %rsi
    00000463: 	pxor	%xmm0, %xmm0
    00000467: 	movq	%r12, %rdi
    0000046a: 	movq	0xd8(%rsp), %rdx
    00000472: 	movq	%rax, end_time(%rip)
    00000479: 	subq	start_time(%rip), %rax
    00000480: 	movq	%rbp, 0xf0(%rsp)
    00000488: 	addq	%rsi, %rdx
    0000048b: 	cvtsi2sd	%rax, %xmm0
    00000490: 	divsd	DATAat0x17370(%rip), %xmm0
    00000498: 	movsd	%xmm0, 0x20(%rsp)
    0000049e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1182
    000004a3: 	movsd	0x20(%rsp), %xmm0
    000004a9: 	movq	%r12, %rdx
    000004ac: 	movq	%r14, %rsi
    000004af: 	movl	$0x14, %edi
    000004b4: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1204
    000004b9: 	movq	0xf0(%rsp), %rdi
    000004c1: 	cmpq	%rbp, %rdi
    000004c4: 	je	.Ltmp1837 # Offset: 1220
    000004c6: 	movq	0x100(%rsp), %rax
    000004ce: 	leaq	0x1(%rax), %rsi
    000004d2: 	callq	_ZdlPvm@PLT # Offset: 1234
.Ltmp1837:
    000004d7: 	movq	0xd0(%rsp), %rsi
    000004df: 	movq	0xd8(%rsp), %rdx
    000004e7: 	movq	%r12, %rdi
    000004ea: 	movq	%rbp, 0xf0(%rsp)
    000004f2: 	addq	%rsi, %rdx
    000004f5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1269
    000004fa: 	movslq	0x18(%rsp), %rax
    000004ff: 	movq	0xf0(%rsp), %rdx
    00000507: 	imulq	%rax, %r14
    0000050b: 	movq	%rax, 0x20(%rsp)
    00000510: 	cmpq	%rbx, %r14
    00000513: 	je	.Ltmp1838 # Offset: 1299
    00000515: 	leaq	DATAat0x1710f(%rip), %rsi
    0000051c: 	movl	$0x1, %edi
    00000521: 	xorl	%eax, %eax
    00000523: 	callq	__printf_chk@PLT # Offset: 1315
    00000528: 	movq	0xf0(%rsp), %rdx
.Ltmp1838:
    00000530: 	cmpq	%rbp, %rdx
    00000533: 	je	.Ltmp1839 # Offset: 1331
    00000535: 	movq	0x100(%rsp), %rax
    0000053d: 	movq	%rdx, %rdi
    00000540: 	leaq	0x1(%rax), %rsi
    00000544: 	callq	_ZdlPvm@PLT # Offset: 1348
.Ltmp1839:
    00000549: 	movq	0xd0(%rsp), %rdi
    00000551: 	cmpq	0x8(%rsp), %rdi
    00000556: 	je	.Ltmp1840 # Offset: 1366
    00000558: 	movq	0xe0(%rsp), %rax
    00000560: 	leaq	0x1(%rax), %rsi
    00000564: 	callq	_ZdlPvm@PLT # Offset: 1380
.Ltmp1840:
    00000569: 	movq	0xb0(%rsp), %rsi
    00000571: 	movq	0xb8(%rsp), %rdx
    00000579: 	movq	%r12, %rdi
    0000057c: 	movq	%rbp, 0xf0(%rsp)
    00000584: 	addq	%rsi, %rdx
    00000587: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1415
    0000058c: 	movabsq	$0x3fffffffffffffff, %rax
    00000596: 	subq	0xf8(%rsp), %rax
    0000059e: 	cmpq	$0xf, %rax
    000005a2: 	jbe	.Ltmp1841 # Offset: 1442
    000005a8: 	movl	$0x10, %edx
    000005ad: 	leaq	DATAat0x1717f(%rip), %rsi
    000005b4: 	movq	%r12, %rdi
    000005b7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1463
    000005bc: 	movq	%r12, %rsi
    000005bf: 	movq	%r15, %rdi
    000005c2: 	callq	_Z13TestNullArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1474
    000005c7: 	movq	0xf0(%rsp), %rdi
    000005cf: 	cmpq	%rbp, %rdi
    000005d2: 	je	.Ltmp1842 # Offset: 1490
    000005d4: 	movq	0x100(%rsp), %rax
    000005dc: 	leaq	0x1(%rax), %rsi
    000005e0: 	callq	_ZdlPvm@PLT # Offset: 1504
.Ltmp1842:
    000005e5: 	leaq	DATAat0x17190(%rip), %rdx
    000005ec: 	movq	%r13, %rsi
    000005ef: 	movq	%r12, %rdi
    000005f2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1522
    000005f7: 	movq	%r12, %rsi
    000005fa: 	movq	%r15, %rdi
    000005fd: 	callq	_Z17RandomValuesArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1533
    00000602: 	movq	0xf0(%rsp), %rdi
    0000060a: 	cmpq	%rbp, %rdi
    0000060d: 	je	.Ltmp1843 # Offset: 1549
    0000060f: 	movq	0x100(%rsp), %rax
    00000617: 	leaq	0x1(%rax), %rsi
    0000061b: 	callq	_ZdlPvm@PLT # Offset: 1563
.Ltmp1843:
    00000620: 	movq	0xb0(%rsp), %rsi
    00000628: 	movq	0xb8(%rsp), %rdx
    00000630: 	movq	%r12, %rdi
    00000633: 	movq	%rbp, 0xf0(%rsp)
    0000063b: 	addq	%rsi, %rdx
    0000063e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1598
    00000643: 	movabsq	$0x3fffffffffffffff, %rax
    0000064d: 	subq	0xf8(%rsp), %rax
    00000655: 	cmpq	$0xf, %rax
    00000659: 	jbe	.Ltmp1844 # Offset: 1625
    0000065f: 	movl	$0x10, %edx
    00000664: 	leaq	DATAat0x1719f(%rip), %rsi
    0000066b: 	movq	%r12, %rdi
    0000066e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1646
    00000673: 	movq	%r12, %rsi
    00000676: 	movq	%r15, %rdi
    00000679: 	callq	_Z14QuickSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1657
    0000067e: 	movq	0xf0(%rsp), %rdi
    00000686: 	cmpq	%rbp, %rdi
    00000689: 	je	.Ltmp1845 # Offset: 1673
    0000068b: 	movq	0x100(%rsp), %rax
    00000693: 	leaq	0x1(%rax), %rsi
    00000697: 	callq	_ZdlPvm@PLT # Offset: 1687
.Ltmp1845:
    0000069c: 	movl	$0x7b, %edi
    000006a1: 	callq	srand@PLT # Offset: 1697
    000006a6: 	movq	0x70(%rsp), %rbx
    000006ab: 	cmpq	0x78(%rsp), %rbx
    000006b0: 	je	.Ltmp1846 # Offset: 1712
    000006b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1847:
    000006b8: 	callq	rand@PLT # Offset: 1720
    000006bd: 	movq	(%rbx), %rdx
    000006c0: 	addq	$0x8, %rbx
    000006c4: 	sarl	$0x5, %eax
    000006c7: 	movzwl	%ax, %eax
    000006ca: 	movq	%rax, (%rdx)
    000006cd: 	cmpq	%rbx, 0x78(%rsp)
    000006d2: 	jne	.Ltmp1847 # Offset: 1746
.Ltmp1846:
    000006d4: 	leaq	DATAat0x171b0(%rip), %rdx
    000006db: 	movq	%r13, %rsi
    000006de: 	movq	%r12, %rdi
    000006e1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1761
    000006e6: 	movq	%r12, %rsi
    000006e9: 	movq	%r15, %rdi
    000006ec: 	callq	_Z12StdSortArrayIP17VariableContainerIlLi1EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1772
    000006f1: 	movq	0xf0(%rsp), %rdi
    000006f9: 	cmpq	%rbp, %rdi
    000006fc: 	je	.Ltmp1848 # Offset: 1788
    000006fe: 	movq	0x100(%rsp), %rax
    00000706: 	leaq	0x1(%rax), %rsi
    0000070a: 	callq	_ZdlPvm@PLT # Offset: 1802
.Ltmp1848:
    0000070f: 	movq	0xb0(%rsp), %rbx
    00000717: 	movq	0xb8(%rsp), %r14
    0000071f: 	movq	%rbp, 0xf0(%rsp)
    00000727: 	movq	%rbx, %rax
    0000072a: 	addq	%r14, %rax
    0000072d: 	je	.Ltmp1849 # Offset: 1837
    0000072f: 	testq	%rbx, %rbx
    00000732: 	je	.Ltmp1850 # Offset: 1842
.Ltmp1849:
    00000738: 	movq	%r14, 0x48(%rsp)
    0000073d: 	cmpq	$0xf, %r14
    00000741: 	ja	.Ltmp1851 # Offset: 1857
    00000747: 	cmpq	$0x1, %r14
    0000074b: 	jne	.Ltmp1852 # Offset: 1867
    00000751: 	movzbl	(%rbx), %eax
    00000754: 	movb	%al, 0x100(%rsp)
    0000075b: 	movq	%rbp, %rax
.Ltmp1946:
    0000075e: 	movq	%r14, 0xf8(%rsp)
    00000766: 	movb	$0x0, (%rax,%r14)
    0000076b: 	movabsq	$0x3fffffffffffffff, %rax
    00000775: 	subq	0xf8(%rsp), %rax
    0000077d: 	cmpq	$0x12, %rax
    00000781: 	jbe	.Ltmp1853 # Offset: 1921
    00000787: 	movl	$0x13, %edx
    0000078c: 	leaq	DATAat0x171d9(%rip), %rsi
    00000793: 	movq	%r12, %rdi
    00000796: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1942
    0000079b: 	movq	%r12, %rsi
    0000079e: 	movq	%r15, %rdi
    000007a1: 	callq	_Z9FreeArrayI17VariableContainerIlLi1EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1953
    000007a6: 	movq	0xf0(%rsp), %rdi
    000007ae: 	cmpq	%rbp, %rdi
    000007b1: 	je	.Ltmp1854 # Offset: 1969
    000007b3: 	movq	0x100(%rsp), %rax
    000007bb: 	leaq	0x1(%rax), %rsi
    000007bf: 	callq	_ZdlPvm@PLT # Offset: 1983
.Ltmp1854:
    000007c4: 	leaq	DATAat0x171ed(%rip), %rdx
    000007cb: 	movq	%r13, %rsi
    000007ce: 	movq	%r12, %rdi
    000007d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2001
    000007d6: 	movq	%r12, %rdi
    000007d9: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2009
    000007de: 	movq	0xf0(%rsp), %rdi
    000007e6: 	cmpq	%rbp, %rdi
    000007e9: 	je	.Ltmp1855 # Offset: 2025
    000007eb: 	movq	0x100(%rsp), %rax
    000007f3: 	leaq	0x1(%rax), %rsi
    000007f7: 	callq	_ZdlPvm@PLT # Offset: 2039
.Ltmp1855:
    000007fc: 	movq	0x70(%rsp), %rdi
    00000801: 	testq	%rdi, %rdi
    00000804: 	je	.Ltmp1856 # Offset: 2052
    00000806: 	movq	0x80(%rsp), %rsi
    0000080e: 	subq	%rdi, %rsi
    00000811: 	callq	_ZdlPvm@PLT # Offset: 2065
.Ltmp1856:
    00000816: 	movq	0x50(%rsp), %rdi
    0000081b: 	testq	%rdi, %rdi
    0000081e: 	je	.Ltmp1857 # Offset: 2078
    00000820: 	movq	0x60(%rsp), %rsi
    00000825: 	subq	%rdi, %rsi
    00000828: 	callq	_ZdlPvm@PLT # Offset: 2088
.Ltmp1857:
    0000082d: 	movq	0xb0(%rsp), %rdi
    00000835: 	cmpq	(%rsp), %rdi
    00000839: 	je	.Ltmp1858 # Offset: 2105
    0000083b: 	movq	0xc0(%rsp), %rax
    00000843: 	leaq	0x1(%rax), %rsi
    00000847: 	callq	_ZdlPvm@PLT # Offset: 2119
.Ltmp1858:
    0000084c: 	movq	0x90(%rsp), %rsi
    00000854: 	movq	0x98(%rsp), %rdx
    0000085c: 	movq	%r13, %rdi
    0000085f: 	movq	(%rsp), %rax
    00000863: 	addq	%rsi, %rdx
    00000866: 	movq	%rax, 0xb0(%rsp)
    0000086e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2158
    00000873: 	movabsq	$0x3fffffffffffffff, %rax
    0000087d: 	subq	0xb8(%rsp), %rax
    00000885: 	cmpq	$0xb, %rax
    00000889: 	jbe	.Ltmp1859 # Offset: 2185
    0000088f: 	movl	$0xc, %edx
    00000894: 	leaq	DATAat0x17208(%rip), %rsi
    0000089b: 	movq	%r13, %rdi
    0000089e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2206
    000008a3: 	movq	0xb0(%rsp), %rbx
    000008ab: 	movq	0xb8(%rsp), %r14
    000008b3: 	movq	%rbp, 0xf0(%rsp)
    000008bb: 	movq	%rbx, %rax
    000008be: 	addq	%r14, %rax
    000008c1: 	je	.Ltmp1860 # Offset: 2241
    000008c3: 	testq	%rbx, %rbx
    000008c6: 	je	.Ltmp1861 # Offset: 2246
.Ltmp1860:
    000008cc: 	movq	%r14, 0x70(%rsp)
    000008d1: 	cmpq	$0xf, %r14
    000008d5: 	ja	.Ltmp1862 # Offset: 2261
    000008db: 	cmpq	$0x1, %r14
    000008df: 	jne	.Ltmp1863 # Offset: 2271
    000008e5: 	movzbl	(%rbx), %eax
    000008e8: 	movb	%al, 0x100(%rsp)
    000008ef: 	movq	%rbp, %rax
.Ltmp1944:
    000008f2: 	movq	%r14, 0xf8(%rsp)
    000008fa: 	movb	$0x0, (%rax,%r14)
    000008ff: 	movabsq	$0x3fffffffffffffff, %rax
    00000909: 	subq	0xf8(%rsp), %rax
    00000911: 	cmpq	$0xc, %rax
    00000915: 	jbe	.Ltmp1864 # Offset: 2325
    0000091b: 	movl	$0xd, %edx
    00000920: 	leaq	DATAat0x17152(%rip), %rsi
    00000927: 	movq	%r12, %rdi
    0000092a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2346
    0000092f: 	movl	0x18(%rsp), %edx
    00000933: 	movl	0x1c(%rsp), %esi
    00000937: 	movq	%r12, %rcx
    0000093a: 	movq	0x10(%rsp), %rdi
    0000093f: 	callq	_Z11CreateArrayI17VariableContainerIlLi1EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2367
    00000944: 	movq	0xf0(%rsp), %rdi
    0000094c: 	cmpq	%rbp, %rdi
    0000094f: 	je	.Ltmp1865 # Offset: 2383
    00000951: 	movq	0x100(%rsp), %rax
    00000959: 	leaq	0x1(%rax), %rsi
    0000095d: 	callq	_ZdlPvm@PLT # Offset: 2397
.Ltmp1865:
    00000962: 	leaq	DATAat0x17160(%rip), %rdx
    00000969: 	movq	%r13, %rsi
    0000096c: 	movq	%r12, %rdi
    0000096f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2415
    00000974: 	movq	0x10(%rsp), %rsi
    00000979: 	movq	%r12, %rdx
    0000097c: 	movq	%r15, %rdi
    0000097f: 	callq	_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi1EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2431
    00000984: 	movq	0xf0(%rsp), %rdi
    0000098c: 	cmpq	%rbp, %rdi
    0000098f: 	je	.Ltmp1866 # Offset: 2447
    00000991: 	movq	0x100(%rsp), %rax
    00000999: 	leaq	0x1(%rax), %rsi
    0000099d: 	callq	_ZdlPvm@PLT # Offset: 2461
.Ltmp1866:
    000009a2: 	movq	0x28(%rsp), %rdi
    000009a7: 	leaq	DATAat0x1716c(%rip), %rdx
    000009ae: 	movq	%r13, %rsi
    000009b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2481
    000009b6: 	movq	0x78(%rsp), %rdi
    000009bb: 	subq	0x70(%rsp), %rdi
    000009c0: 	movq	%rdi, %r14
    000009c3: 	movq	%rdi, 0x38(%rsp)
    000009c8: 	callq	clock@PLT # Offset: 2504
    000009cd: 	movq	0x70(%rsp), %rsi
    000009d2: 	movq	0x38(%rsp), %rdi
    000009d7: 	sarq	$0x3, %r14
    000009db: 	movq	%rax, start_time(%rip)
    000009e2: 	movl	$0x14, %ecx
    000009e7: 	movq	(%rsi), %rax
    000009ea: 	movq	(%rax), %r8
    000009ed: 	nopl	(%rax) # Size: 3
.Ltmp1869:
    000009f0: 	movq	%r8, %rbx
    000009f3: 	cmpq	$0x8, %rdi
    000009f7: 	jbe	.Ltmp1867 # Offset: 2551
    000009f9: 	movl	$0x1, %eax
    000009fe: 	nop # Size: 2
.Ltmp1868:
    00000a00: 	movq	(%rsi,%rax,8), %rdx
    00000a04: 	addq	$0x1, %rax
    00000a08: 	addq	(%rdx), %rbx
    00000a0b: 	cmpq	%rax, %r14
    00000a0e: 	ja	.Ltmp1868 # Offset: 2574
.Ltmp1867:
    00000a10: 	subq	$0x1, %rcx
    00000a14: 	jne	.Ltmp1869 # Offset: 2580
    00000a16: 	callq	clock@PLT # Offset: 2582
    00000a1b: 	movq	0xd0(%rsp), %rsi
    00000a23: 	pxor	%xmm0, %xmm0
    00000a27: 	movq	%r12, %rdi
    00000a2a: 	movq	0xd8(%rsp), %rdx
    00000a32: 	movq	%rax, end_time(%rip)
    00000a39: 	subq	start_time(%rip), %rax
    00000a40: 	movq	%rbp, 0xf0(%rsp)
    00000a48: 	addq	%rsi, %rdx
    00000a4b: 	cvtsi2sd	%rax, %xmm0
    00000a50: 	divsd	DATAat0x17370(%rip), %xmm0
    00000a58: 	movsd	%xmm0, 0x38(%rsp)
    00000a5e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2654
    00000a63: 	movsd	0x38(%rsp), %xmm0
    00000a69: 	movq	%r12, %rdx
    00000a6c: 	movq	%r14, %rsi
    00000a6f: 	movl	$0x14, %edi
    00000a74: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2676
    00000a79: 	movq	0xf0(%rsp), %rdi
    00000a81: 	cmpq	%rbp, %rdi
    00000a84: 	je	.Ltmp1870 # Offset: 2692
    00000a86: 	movq	0x100(%rsp), %rax
    00000a8e: 	leaq	0x1(%rax), %rsi
    00000a92: 	callq	_ZdlPvm@PLT # Offset: 2706
.Ltmp1870:
    00000a97: 	movq	0xd0(%rsp), %rsi
    00000a9f: 	movq	0xd8(%rsp), %rdx
    00000aa7: 	movq	%r12, %rdi
    00000aaa: 	movq	%rbp, 0xf0(%rsp)
    00000ab2: 	addq	%rsi, %rdx
    00000ab5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2741
    00000aba: 	imulq	0x20(%rsp), %r14
    00000ac0: 	movq	0xf0(%rsp), %rdx
    00000ac8: 	cmpq	%r14, %rbx
    00000acb: 	je	.Ltmp1871 # Offset: 2763
    00000acd: 	leaq	DATAat0x1710f(%rip), %rsi
    00000ad4: 	movl	$0x1, %edi
    00000ad9: 	xorl	%eax, %eax
    00000adb: 	callq	__printf_chk@PLT # Offset: 2779
    00000ae0: 	movq	0xf0(%rsp), %rdx
.Ltmp1871:
    00000ae8: 	cmpq	%rbp, %rdx
    00000aeb: 	je	.Ltmp1872 # Offset: 2795
    00000aed: 	movq	0x100(%rsp), %rax
    00000af5: 	movq	%rdx, %rdi
    00000af8: 	leaq	0x1(%rax), %rsi
    00000afc: 	callq	_ZdlPvm@PLT # Offset: 2812
.Ltmp1872:
    00000b01: 	movq	0xd0(%rsp), %rdi
    00000b09: 	cmpq	0x8(%rsp), %rdi
    00000b0e: 	je	.Ltmp1873 # Offset: 2830
    00000b10: 	movq	0xe0(%rsp), %rax
    00000b18: 	leaq	0x1(%rax), %rsi
    00000b1c: 	callq	_ZdlPvm@PLT # Offset: 2844
.Ltmp1873:
    00000b21: 	movq	0xb0(%rsp), %rsi
    00000b29: 	movq	0xb8(%rsp), %rdx
    00000b31: 	movq	%r12, %rdi
    00000b34: 	movq	%rbp, 0xf0(%rsp)
    00000b3c: 	addq	%rsi, %rdx
    00000b3f: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2879
    00000b44: 	movabsq	$0x3fffffffffffffff, %rax
    00000b4e: 	subq	0xf8(%rsp), %rax
    00000b56: 	cmpq	$0xf, %rax
    00000b5a: 	jbe	.Ltmp1874 # Offset: 2906
    00000b60: 	movl	$0x10, %edx
    00000b65: 	leaq	DATAat0x1717f(%rip), %rsi
    00000b6c: 	movq	%r12, %rdi
    00000b6f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2927
    00000b74: 	movq	%r12, %rsi
    00000b77: 	movq	%r15, %rdi
    00000b7a: 	callq	_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2938
    00000b7f: 	movq	0xf0(%rsp), %rdi
    00000b87: 	cmpq	%rbp, %rdi
    00000b8a: 	je	.Ltmp1875 # Offset: 2954
    00000b8c: 	movq	0x100(%rsp), %rax
    00000b94: 	leaq	0x1(%rax), %rsi
    00000b98: 	callq	_ZdlPvm@PLT # Offset: 2968
.Ltmp1875:
    00000b9d: 	movq	0xb0(%rsp), %rsi
    00000ba5: 	movq	0xb8(%rsp), %rdx
    00000bad: 	movq	%r12, %rdi
    00000bb0: 	movq	%rbp, 0xf0(%rsp)
    00000bb8: 	addq	%rsi, %rdx
    00000bbb: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3003
    00000bc0: 	movabsq	$0x3fffffffffffffff, %rax
    00000bca: 	subq	0xf8(%rsp), %rax
    00000bd2: 	cmpq	$0xd, %rax
    00000bd6: 	jbe	.Ltmp1876 # Offset: 3030
    00000bdc: 	movl	$0xe, %edx
    00000be1: 	leaq	DATAat0x17190(%rip), %rsi
    00000be8: 	movq	%r12, %rdi
    00000beb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3051
    00000bf0: 	movq	%r12, %rsi
    00000bf3: 	movq	%r15, %rdi
    00000bf6: 	callq	_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3062
    00000bfb: 	movq	0xf0(%rsp), %rdi
    00000c03: 	cmpq	%rbp, %rdi
    00000c06: 	je	.Ltmp1877 # Offset: 3078
    00000c08: 	movq	0x100(%rsp), %rax
    00000c10: 	leaq	0x1(%rax), %rsi
    00000c14: 	callq	_ZdlPvm@PLT # Offset: 3092
.Ltmp1877:
    00000c19: 	movq	0xb0(%rsp), %rsi
    00000c21: 	movq	0xb8(%rsp), %rdx
    00000c29: 	movq	%r12, %rdi
    00000c2c: 	movq	%rbp, 0xf0(%rsp)
    00000c34: 	addq	%rsi, %rdx
    00000c37: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3127
    00000c3c: 	movabsq	$0x3fffffffffffffff, %rax
    00000c46: 	subq	0xf8(%rsp), %rax
    00000c4e: 	cmpq	$0xf, %rax
    00000c52: 	jbe	.Ltmp1878 # Offset: 3154
    00000c58: 	movl	$0x10, %edx
    00000c5d: 	leaq	DATAat0x1719f(%rip), %rsi
    00000c64: 	movq	%r12, %rdi
    00000c67: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3175
    00000c6c: 	movq	%r12, %rsi
    00000c6f: 	movq	%r15, %rdi
    00000c72: 	callq	_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3186
    00000c77: 	movq	0xf0(%rsp), %rdi
    00000c7f: 	cmpq	%rbp, %rdi
    00000c82: 	je	.Ltmp1879 # Offset: 3202
    00000c84: 	movq	0x100(%rsp), %rax
    00000c8c: 	leaq	0x1(%rax), %rsi
    00000c90: 	callq	_ZdlPvm@PLT # Offset: 3216
.Ltmp1879:
    00000c95: 	movl	$0x7b, %edi
    00000c9a: 	callq	srand@PLT # Offset: 3226
    00000c9f: 	movq	0x70(%rsp), %rbx
    00000ca4: 	cmpq	0x78(%rsp), %rbx
    00000ca9: 	je	.Ltmp1880 # Offset: 3241
    00000cab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1881:
    00000cb0: 	callq	rand@PLT # Offset: 3248
    00000cb5: 	movq	(%rbx), %rdx
    00000cb8: 	addq	$0x8, %rbx
    00000cbc: 	sarl	$0x5, %eax
    00000cbf: 	movzwl	%ax, %eax
    00000cc2: 	movq	%rax, (%rdx)
    00000cc5: 	cmpq	%rbx, 0x78(%rsp)
    00000cca: 	jne	.Ltmp1881 # Offset: 3274
.Ltmp1880:
    00000ccc: 	leaq	DATAat0x171b0(%rip), %rdx
    00000cd3: 	movq	%r13, %rsi
    00000cd6: 	movq	%r12, %rdi
    00000cd9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3289
    00000cde: 	movq	%r12, %rsi
    00000ce1: 	movq	%r15, %rdi
    00000ce4: 	callq	_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3300
    00000ce9: 	movq	0xf0(%rsp), %rdi
    00000cf1: 	cmpq	%rbp, %rdi
    00000cf4: 	je	.Ltmp1882 # Offset: 3316
    00000cf6: 	movq	0x100(%rsp), %rax
    00000cfe: 	leaq	0x1(%rax), %rsi
    00000d02: 	callq	_ZdlPvm@PLT # Offset: 3330
.Ltmp1882:
    00000d07: 	movq	0xb0(%rsp), %rbx
    00000d0f: 	movq	0xb8(%rsp), %r14
    00000d17: 	movq	%rbp, 0xf0(%rsp)
    00000d1f: 	movq	%rbx, %rax
    00000d22: 	addq	%r14, %rax
    00000d25: 	je	.Ltmp1883 # Offset: 3365
    00000d27: 	testq	%rbx, %rbx
    00000d2a: 	je	.Ltmp1884 # Offset: 3370
.Ltmp1883:
    00000d30: 	movq	%r14, 0x48(%rsp)
    00000d35: 	cmpq	$0xf, %r14
    00000d39: 	ja	.Ltmp1885 # Offset: 3385
    00000d3f: 	cmpq	$0x1, %r14
    00000d43: 	jne	.Ltmp1886 # Offset: 3395
    00000d49: 	movzbl	(%rbx), %eax
    00000d4c: 	movb	%al, 0x100(%rsp)
    00000d53: 	movq	%rbp, %rax
.Ltmp1950:
    00000d56: 	movq	%r14, 0xf8(%rsp)
    00000d5e: 	movb	$0x0, (%rax,%r14)
    00000d63: 	movabsq	$0x3fffffffffffffff, %rax
    00000d6d: 	subq	0xf8(%rsp), %rax
    00000d75: 	cmpq	$0x12, %rax
    00000d79: 	jbe	.Ltmp1887 # Offset: 3449
    00000d7f: 	movl	$0x13, %edx
    00000d84: 	leaq	DATAat0x171d9(%rip), %rsi
    00000d8b: 	movq	%r12, %rdi
    00000d8e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3470
    00000d93: 	movq	%r12, %rsi
    00000d96: 	movq	%r15, %rdi
    00000d99: 	callq	_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi1EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3481
    00000d9e: 	movq	0xf0(%rsp), %rdi
    00000da6: 	cmpq	%rbp, %rdi
    00000da9: 	je	.Ltmp1888 # Offset: 3497
    00000dab: 	movq	0x100(%rsp), %rax
    00000db3: 	leaq	0x1(%rax), %rsi
    00000db7: 	callq	_ZdlPvm@PLT # Offset: 3511
.Ltmp1888:
    00000dbc: 	leaq	DATAat0x171ed(%rip), %rdx
    00000dc3: 	movq	%r13, %rsi
    00000dc6: 	movq	%r12, %rdi
    00000dc9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3529
    00000dce: 	movq	%r12, %rdi
    00000dd1: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3537
    00000dd6: 	movq	0xf0(%rsp), %rdi
    00000dde: 	cmpq	%rbp, %rdi
    00000de1: 	je	.Ltmp1889 # Offset: 3553
    00000de3: 	movq	0x100(%rsp), %rax
    00000deb: 	leaq	0x1(%rax), %rsi
    00000def: 	callq	_ZdlPvm@PLT # Offset: 3567
.Ltmp1889:
    00000df4: 	movq	0x70(%rsp), %rdi
    00000df9: 	testq	%rdi, %rdi
    00000dfc: 	je	.Ltmp1890 # Offset: 3580
    00000dfe: 	movq	0x80(%rsp), %rsi
    00000e06: 	subq	%rdi, %rsi
    00000e09: 	callq	_ZdlPvm@PLT # Offset: 3593
.Ltmp1890:
    00000e0e: 	movq	0x50(%rsp), %rdi
    00000e13: 	testq	%rdi, %rdi
    00000e16: 	je	.Ltmp1891 # Offset: 3606
    00000e18: 	movq	0x60(%rsp), %rsi
    00000e1d: 	subq	%rdi, %rsi
    00000e20: 	callq	_ZdlPvm@PLT # Offset: 3616
.Ltmp1891:
    00000e25: 	movq	0xb0(%rsp), %rdi
    00000e2d: 	cmpq	(%rsp), %rdi
    00000e31: 	je	.Ltmp1892 # Offset: 3633
    00000e33: 	movq	0xc0(%rsp), %rax
    00000e3b: 	leaq	0x1(%rax), %rsi
    00000e3f: 	callq	_ZdlPvm@PLT # Offset: 3647
.Ltmp1892:
    00000e44: 	movq	0x90(%rsp), %rsi
    00000e4c: 	movq	0x98(%rsp), %rdx
    00000e54: 	movq	%r13, %rdi
    00000e57: 	movq	(%rsp), %rax
    00000e5b: 	addq	%rsi, %rdx
    00000e5e: 	movq	%rax, 0xb0(%rsp)
    00000e66: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3686
    00000e6b: 	movabsq	$0x3fffffffffffffff, %rax
    00000e75: 	subq	0xb8(%rsp), %rax
    00000e7d: 	cmpq	$0xa, %rax
    00000e81: 	jbe	.Ltmp1893 # Offset: 3713
    00000e87: 	movl	$0xb, %edx
    00000e8c: 	leaq	DATAat0x17215(%rip), %rsi
    00000e93: 	movq	%r13, %rdi
    00000e96: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3734
    00000e9b: 	movq	0xb0(%rsp), %rsi
    00000ea3: 	movq	0xb8(%rsp), %rdx
    00000eab: 	movq	%r12, %rdi
    00000eae: 	movq	%rbp, 0xf0(%rsp)
    00000eb6: 	addq	%rsi, %rdx
    00000eb9: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3769
    00000ebe: 	movabsq	$0x3fffffffffffffff, %rax
    00000ec8: 	subq	0xf8(%rsp), %rax
    00000ed0: 	cmpq	$0xc, %rax
    00000ed4: 	jbe	.Ltmp1894 # Offset: 3796
    00000eda: 	movl	$0xd, %edx
    00000edf: 	leaq	DATAat0x17152(%rip), %rsi
    00000ee6: 	movq	%r12, %rdi
    00000ee9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3817
    00000eee: 	movl	0x18(%rsp), %edx
    00000ef2: 	movl	0x1c(%rsp), %esi
    00000ef6: 	movq	%r12, %rcx
    00000ef9: 	movq	0x10(%rsp), %rdi
    00000efe: 	callq	_Z11CreateArrayI17VariableContainerIlLi1EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3838
    00000f03: 	movq	0xf0(%rsp), %rdi
    00000f0b: 	cmpq	%rbp, %rdi
    00000f0e: 	je	.Ltmp1895 # Offset: 3854
    00000f10: 	movq	0x100(%rsp), %rax
    00000f18: 	leaq	0x1(%rax), %rsi
    00000f1c: 	callq	_ZdlPvm@PLT # Offset: 3868
.Ltmp1895:
    00000f21: 	leaq	DATAat0x17160(%rip), %rdx
    00000f28: 	movq	%r13, %rsi
    00000f2b: 	movq	%r12, %rdi
    00000f2e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3886
    00000f33: 	movq	0x10(%rsp), %rsi
    00000f38: 	movq	%r12, %rdx
    00000f3b: 	movq	%r15, %rdi
    00000f3e: 	callq	_Z9CopyArrayI17VariableContainerIlLi1EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3902
    00000f43: 	movq	0xf0(%rsp), %rdi
    00000f4b: 	cmpq	%rbp, %rdi
    00000f4e: 	je	.Ltmp1896 # Offset: 3918
    00000f50: 	movq	0x100(%rsp), %rax
    00000f58: 	leaq	0x1(%rax), %rsi
    00000f5c: 	callq	_ZdlPvm@PLT # Offset: 3932
.Ltmp1896:
    00000f61: 	movq	0x28(%rsp), %rdi
    00000f66: 	leaq	DATAat0x1716c(%rip), %rdx
    00000f6d: 	movq	%r13, %rsi
    00000f70: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3952
    00000f75: 	movq	0x78(%rsp), %rdi
    00000f7a: 	subq	0x70(%rsp), %rdi
    00000f7f: 	movq	%rdi, %r14
    00000f82: 	movq	%rdi, 0x28(%rsp)
    00000f87: 	callq	clock@PLT # Offset: 3975
    00000f8c: 	movq	0x70(%rsp), %rsi
    00000f91: 	movq	0x28(%rsp), %rdi
    00000f96: 	sarq	$0x3, %r14
    00000f9a: 	movq	%rax, start_time(%rip)
    00000fa1: 	movl	$0x14, %ecx
    00000fa6: 	movq	(%rsi), %rax
    00000fa9: 	movq	(%rax), %r8
    00000fac: 	nopl	(%rax) # Size: 4
.Ltmp1899:
    00000fb0: 	movq	%r8, %rbx
    00000fb3: 	cmpq	$0x8, %rdi
    00000fb7: 	jbe	.Ltmp1897 # Offset: 4023
    00000fb9: 	movl	$0x1, %eax
    00000fbe: 	nop # Size: 2
.Ltmp1898:
    00000fc0: 	movq	(%rsi,%rax,8), %rdx
    00000fc4: 	addq	$0x1, %rax
    00000fc8: 	addq	(%rdx), %rbx
    00000fcb: 	cmpq	%rax, %r14
    00000fce: 	ja	.Ltmp1898 # Offset: 4046
.Ltmp1897:
    00000fd0: 	subq	$0x1, %rcx
    00000fd4: 	jne	.Ltmp1899 # Offset: 4052
    00000fd6: 	callq	clock@PLT # Offset: 4054
    00000fdb: 	movq	0xd0(%rsp), %rsi
    00000fe3: 	pxor	%xmm0, %xmm0
    00000fe7: 	movq	%r12, %rdi
    00000fea: 	movq	0xd8(%rsp), %rdx
    00000ff2: 	movq	%rax, end_time(%rip)
    00000ff9: 	subq	start_time(%rip), %rax
    00001000: 	movq	%rbp, 0xf0(%rsp)
    00001008: 	addq	%rsi, %rdx
    0000100b: 	cvtsi2sd	%rax, %xmm0
    00001010: 	divsd	DATAat0x17370(%rip), %xmm0
    00001018: 	movsd	%xmm0, 0x28(%rsp)
    0000101e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4126
    00001023: 	movsd	0x28(%rsp), %xmm0
    00001029: 	movq	%r12, %rdx
    0000102c: 	movq	%r14, %rsi
    0000102f: 	movl	$0x14, %edi
    00001034: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4148
    00001039: 	movq	0xf0(%rsp), %rdi
    00001041: 	cmpq	%rbp, %rdi
    00001044: 	je	.Ltmp1900 # Offset: 4164
    00001046: 	movq	0x100(%rsp), %rax
    0000104e: 	leaq	0x1(%rax), %rsi
    00001052: 	callq	_ZdlPvm@PLT # Offset: 4178
.Ltmp1900:
    00001057: 	movq	0xd0(%rsp), %rsi
    0000105f: 	movq	0xd8(%rsp), %rdx
    00001067: 	movq	%r12, %rdi
    0000106a: 	movq	%rbp, 0xf0(%rsp)
    00001072: 	addq	%rsi, %rdx
    00001075: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4213
    0000107a: 	movq	0x20(%rsp), %rax
    0000107f: 	movq	0xf0(%rsp), %rdx
    00001087: 	imulq	%r14, %rax
    0000108b: 	cmpq	%rax, %rbx
    0000108e: 	je	.Ltmp1901 # Offset: 4238
    00001090: 	leaq	DATAat0x1710f(%rip), %rsi
    00001097: 	movl	$0x1, %edi
    0000109c: 	xorl	%eax, %eax
    0000109e: 	callq	__printf_chk@PLT # Offset: 4254
    000010a3: 	movq	0xf0(%rsp), %rdx
.Ltmp1901:
    000010ab: 	cmpq	%rbp, %rdx
    000010ae: 	je	.Ltmp1902 # Offset: 4270
    000010b0: 	movq	0x100(%rsp), %rax
    000010b8: 	movq	%rdx, %rdi
    000010bb: 	leaq	0x1(%rax), %rsi
    000010bf: 	callq	_ZdlPvm@PLT # Offset: 4287
.Ltmp1902:
    000010c4: 	movq	0xd0(%rsp), %rdi
    000010cc: 	cmpq	0x8(%rsp), %rdi
    000010d1: 	je	.Ltmp1903 # Offset: 4305
    000010d3: 	movq	0xe0(%rsp), %rax
    000010db: 	leaq	0x1(%rax), %rsi
    000010df: 	callq	_ZdlPvm@PLT # Offset: 4319
.Ltmp1903:
    000010e4: 	movq	0xb0(%rsp), %rbx
    000010ec: 	movq	0xb8(%rsp), %r14
    000010f4: 	movq	%rbp, 0xf0(%rsp)
    000010fc: 	movq	%rbx, %rax
    000010ff: 	addq	%r14, %rax
    00001102: 	je	.Ltmp1904 # Offset: 4354
    00001104: 	testq	%rbx, %rbx
    00001107: 	je	.Ltmp1905 # Offset: 4359
.Ltmp1904:
    0000110d: 	movq	%r14, 0x48(%rsp)
    00001112: 	cmpq	$0xf, %r14
    00001116: 	ja	.Ltmp1906 # Offset: 4374
    0000111c: 	cmpq	$0x1, %r14
    00001120: 	jne	.Ltmp1907 # Offset: 4384
    00001126: 	movzbl	(%rbx), %eax
    00001129: 	movb	%al, 0x100(%rsp)
    00001130: 	movq	%rbp, %rax
.Ltmp1948:
    00001133: 	movq	%r14, 0xf8(%rsp)
    0000113b: 	movb	$0x0, (%rax,%r14)
    00001140: 	movabsq	$0x3fffffffffffffff, %rax
    0000114a: 	subq	0xf8(%rsp), %rax
    00001152: 	cmpq	$0xf, %rax
    00001156: 	jbe	.Ltmp1908 # Offset: 4438
    0000115c: 	movl	$0x10, %edx
    00001161: 	leaq	DATAat0x1717f(%rip), %rsi
    00001168: 	movq	%r12, %rdi
    0000116b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4459
    00001170: 	movq	%r12, %rsi
    00001173: 	movq	%r15, %rdi
    00001176: 	callq	_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4470
    0000117b: 	movq	0xf0(%rsp), %rdi
    00001183: 	cmpq	%rbp, %rdi
    00001186: 	je	.Ltmp1909 # Offset: 4486
    00001188: 	movq	0x100(%rsp), %rax
    00001190: 	leaq	0x1(%rax), %rsi
    00001194: 	callq	_ZdlPvm@PLT # Offset: 4500
.Ltmp1909:
    00001199: 	movq	0xb0(%rsp), %rsi
    000011a1: 	movq	0xb8(%rsp), %rdx
    000011a9: 	movq	%r12, %rdi
    000011ac: 	movq	%rbp, 0xf0(%rsp)
    000011b4: 	addq	%rsi, %rdx
    000011b7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4535
    000011bc: 	movabsq	$0x3fffffffffffffff, %rax
    000011c6: 	subq	0xf8(%rsp), %rax
    000011ce: 	cmpq	$0xd, %rax
    000011d2: 	jbe	.Ltmp1910 # Offset: 4562
    000011d8: 	movl	$0xe, %edx
    000011dd: 	leaq	DATAat0x17190(%rip), %rsi
    000011e4: 	movq	%r12, %rdi
    000011e7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4583
    000011ec: 	movq	%r12, %rsi
    000011ef: 	movq	%r15, %rdi
    000011f2: 	callq	_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4594
    000011f7: 	movq	0xf0(%rsp), %rdi
    000011ff: 	cmpq	%rbp, %rdi
    00001202: 	je	.Ltmp1911 # Offset: 4610
    00001204: 	movq	0x100(%rsp), %rax
    0000120c: 	leaq	0x1(%rax), %rsi
    00001210: 	callq	_ZdlPvm@PLT # Offset: 4624
.Ltmp1911:
    00001215: 	leaq	DATAat0x1719f(%rip), %rdx
    0000121c: 	movq	%r13, %rsi
    0000121f: 	movq	%r12, %rdi
    00001222: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4642
    00001227: 	movq	%r12, %rsi
    0000122a: 	movq	%r15, %rdi
    0000122d: 	callq	_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4653
    00001232: 	movq	0xf0(%rsp), %rdi
    0000123a: 	cmpq	%rbp, %rdi
    0000123d: 	je	.Ltmp1912 # Offset: 4669
    0000123f: 	movq	0x100(%rsp), %rax
    00001247: 	leaq	0x1(%rax), %rsi
    0000124b: 	callq	_ZdlPvm@PLT # Offset: 4683
.Ltmp1912:
    00001250: 	movl	$0x7b, %edi
    00001255: 	callq	srand@PLT # Offset: 4693
    0000125a: 	movq	0x70(%rsp), %rbx
    0000125f: 	cmpq	%rbx, 0x78(%rsp)
    00001264: 	je	.Ltmp1913 # Offset: 4708
    00001266: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1914:
    00001270: 	callq	rand@PLT # Offset: 4720
    00001275: 	movq	(%rbx), %rdx
    00001278: 	addq	$0x8, %rbx
    0000127c: 	sarl	$0x5, %eax
    0000127f: 	movzwl	%ax, %eax
    00001282: 	movq	%rax, (%rdx)
    00001285: 	cmpq	%rbx, 0x78(%rsp)
    0000128a: 	jne	.Ltmp1914 # Offset: 4746
.Ltmp1913:
    0000128c: 	leaq	DATAat0x171b0(%rip), %rdx
    00001293: 	movq	%r13, %rsi
    00001296: 	movq	%r12, %rdi
    00001299: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4761
    0000129e: 	movq	%r12, %rsi
    000012a1: 	movq	%r15, %rdi
    000012a4: 	callq	_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4772
    000012a9: 	movq	0xf0(%rsp), %rdi
    000012b1: 	cmpq	%rbp, %rdi
    000012b4: 	je	.Ltmp1915 # Offset: 4788
    000012b6: 	movq	0x100(%rsp), %rax
    000012be: 	leaq	0x1(%rax), %rsi
    000012c2: 	callq	_ZdlPvm@PLT # Offset: 4802
.Ltmp1915:
    000012c7: 	leaq	DATAat0x171c1(%rip), %rdx
    000012ce: 	movq	%r13, %rsi
    000012d1: 	movq	%r12, %rdi
    000012d4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4820
    000012d9: 	movq	0x10(%rsp), %rdi
    000012de: 	movq	%r12, %rsi
    000012e1: 	callq	_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4833
    000012e6: 	movq	0xf0(%rsp), %rdi
    000012ee: 	cmpq	%rbp, %rdi
    000012f1: 	je	.Ltmp1916 # Offset: 4849
    000012f3: 	movq	0x100(%rsp), %rax
    000012fb: 	leaq	0x1(%rax), %rsi
    000012ff: 	callq	_ZdlPvm@PLT # Offset: 4863
.Ltmp1916:
    00001304: 	leaq	DATAat0x171d9(%rip), %rdx
    0000130b: 	movq	%r13, %rsi
    0000130e: 	movq	%r12, %rdi
    00001311: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4881
    00001316: 	movq	%r12, %rsi
    00001319: 	movq	%r15, %rdi
    0000131c: 	callq	_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4892
    00001321: 	movq	0xf0(%rsp), %rdi
    00001329: 	cmpq	%rbp, %rdi
    0000132c: 	je	.Ltmp1917 # Offset: 4908
    0000132e: 	movq	0x100(%rsp), %rax
    00001336: 	leaq	0x1(%rax), %rsi
    0000133a: 	callq	_ZdlPvm@PLT # Offset: 4922
.Ltmp1917:
    0000133f: 	movq	0xb0(%rsp), %r14
    00001347: 	movq	0xb8(%rsp), %r13
    0000134f: 	movq	%rbp, 0xf0(%rsp)
    00001357: 	movq	%r14, %rax
    0000135a: 	addq	%r13, %rax
    0000135d: 	je	.Ltmp1918 # Offset: 4957
    0000135f: 	testq	%r14, %r14
    00001362: 	je	.Ltmp1919 # Offset: 4962
.Ltmp1918:
    00001368: 	movq	%r13, 0x48(%rsp)
    0000136d: 	cmpq	$0xf, %r13
    00001371: 	ja	.Ltmp1920 # Offset: 4977
    00001377: 	cmpq	$0x1, %r13
    0000137b: 	jne	.Ltmp1921 # Offset: 4987
    00001381: 	movzbl	(%r14), %eax
    00001385: 	movb	%al, 0x100(%rsp)
    0000138c: 	movq	%rbp, %rax
.Ltmp1952:
    0000138f: 	movq	%r13, 0xf8(%rsp)
    00001397: 	movb	$0x0, (%rax,%r13)
    0000139c: 	movabsq	$0x3fffffffffffffff, %rax
    000013a6: 	subq	0xf8(%rsp), %rax
    000013ae: 	cmpq	$0xe, %rax
    000013b2: 	jbe	.Ltmp1922 # Offset: 5042
    000013b8: 	movl	$0xf, %edx
    000013bd: 	leaq	DATAat0x171ed(%rip), %rsi
    000013c4: 	movq	%r12, %rdi
    000013c7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 5063
    000013cc: 	movq	%r12, %rdi
    000013cf: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5071
    000013d4: 	movq	0xf0(%rsp), %rdi
    000013dc: 	cmpq	%rbp, %rdi
    000013df: 	je	.Ltmp1923 # Offset: 5087
    000013e1: 	movq	0x100(%rsp), %rax
    000013e9: 	leaq	0x1(%rax), %rsi
    000013ed: 	callq	_ZdlPvm@PLT # Offset: 5101
.Ltmp1923:
    000013f2: 	movq	0x78(%rsp), %rbx
    000013f7: 	movq	0x70(%rsp), %r13
    000013fc: 	cmpq	%r13, %rbx
    000013ff: 	je	.Ltmp1924 # Offset: 5119
    00001401: 	nopl	(%rax) # Size: 7
.Ltmp1926:
    00001408: 	movq	(%r13), %rdi
    0000140c: 	testq	%rdi, %rdi
    0000140f: 	je	.Ltmp1925 # Offset: 5135
    00001415: 	movl	$0x8, %esi
    0000141a: 	addq	$0x8, %r13
    0000141e: 	callq	_ZdlPvm@PLT # Offset: 5150
    00001423: 	cmpq	%rbx, %r13
    00001426: 	jne	.Ltmp1926 # Offset: 5158
.Ltmp1942:
    00001428: 	movq	0x70(%rsp), %r13
.Ltmp1924:
    0000142d: 	testq	%r13, %r13
    00001430: 	je	.Ltmp1927 # Offset: 5168
    00001432: 	movq	0x80(%rsp), %rsi
    0000143a: 	movq	%r13, %rdi
    0000143d: 	subq	%r13, %rsi
    00001440: 	callq	_ZdlPvm@PLT # Offset: 5184
.Ltmp1927:
    00001445: 	movq	0x58(%rsp), %rbx
    0000144a: 	movq	0x50(%rsp), %r13
    0000144f: 	cmpq	%r13, %rbx
    00001452: 	je	.Ltmp1928 # Offset: 5202
    00001454: 	nopl	(%rax) # Size: 4
.Ltmp1930:
    00001458: 	movq	(%r13), %rdi
    0000145c: 	testq	%rdi, %rdi
    0000145f: 	je	.Ltmp1929 # Offset: 5215
    00001465: 	movl	$0x8, %esi
    0000146a: 	addq	$0x8, %r13
    0000146e: 	callq	_ZdlPvm@PLT # Offset: 5230
    00001473: 	cmpq	%r13, %rbx
    00001476: 	jne	.Ltmp1930 # Offset: 5238
.Ltmp1941:
    00001478: 	movq	0x50(%rsp), %r13
.Ltmp1928:
    0000147d: 	testq	%r13, %r13
    00001480: 	je	.Ltmp1931 # Offset: 5248
    00001482: 	movq	0x60(%rsp), %rsi
    00001487: 	movq	%r13, %rdi
    0000148a: 	subq	%r13, %rsi
    0000148d: 	callq	_ZdlPvm@PLT # Offset: 5261
.Ltmp1931:
    00001492: 	movq	0xb0(%rsp), %rdi
    0000149a: 	cmpq	(%rsp), %rdi
    0000149e: 	je	.Ltmp1932 # Offset: 5278
    000014a0: 	movq	0xc0(%rsp), %rax
    000014a8: 	leaq	0x1(%rax), %rsi
    000014ac: 	callq	_ZdlPvm@PLT # Offset: 5292
.Ltmp1932:
    000014b1: 	movq	0x90(%rsp), %rsi
    000014b9: 	movq	0x98(%rsp), %rdx
    000014c1: 	movq	%r12, %rdi
    000014c4: 	movq	%rbp, 0xf0(%rsp)
    000014cc: 	addq	%rsi, %rdx
    000014cf: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 5327
    000014d4: 	movabsq	$0x3fffffffffffffff, %rax
    000014de: 	subq	0xf8(%rsp), %rax
    000014e6: 	cmpq	$0xa, %rax
    000014ea: 	jbe	.Ltmp1933 # Offset: 5354
    000014f0: 	movl	$0xb, %edx
    000014f5: 	leaq	DATAat0x17221(%rip), %rsi
    000014fc: 	movq	%r12, %rdi
    000014ff: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 5375
    00001504: 	movl	0x18(%rsp), %esi
    00001508: 	movl	0x1c(%rsp), %edi
    0000150c: 	movq	%r12, %rcx
    0000150f: 	movl	$0x1, %edx
    00001514: 	callq	"_Z14TestOnePointerI17VariableContainerIlLi1EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 5396
    00001519: 	movq	0xf0(%rsp), %rdi
    00001521: 	cmpq	%rbp, %rdi
    00001524: 	je	.Ltmp1934 # Offset: 5412
    00001526: 	movq	0x100(%rsp), %rax
    0000152e: 	leaq	0x1(%rax), %rsi
    00001532: 	callq	_ZdlPvm@PLT # Offset: 5426
.Ltmp1934:
    00001537: 	movq	0x90(%rsp), %rdi
    0000153f: 	cmpq	0x30(%rsp), %rdi
    00001544: 	je	.Ltmp1935 # Offset: 5444
    00001546: 	movq	0xa0(%rsp), %rax
    0000154e: 	leaq	0x1(%rax), %rsi
    00001552: 	callq	_ZdlPvm@PLT # Offset: 5458
.Ltmp1935:
    00001557: 	movq	0x118(%rsp), %rax
    0000155f: 	subq	%fs:0x28, %rax
    00001568: 	jne	.Ltmp1936 # Offset: 5480
    0000156e: 	addq	$0x128, %rsp
    00001575: 	popq	%rbx
    00001576: 	popq	%rbp
    00001577: 	popq	%r12
    00001579: 	popq	%r13
    0000157b: 	popq	%r14
    0000157d: 	popq	%r15
    0000157f: 	retq # Offset: 5503
.Ltmp1832:
    00001580: 	testq	%r14, %r14
    00001583: 	jne	.Ltmp1937 # Offset: 5507
    00001589: 	movq	0x8(%rsp), %rax
    0000158e: 	jmp	.Ltmp1938 # Offset: 5518
.Ltmp1820:
    00001593: 	movq	%r9, %rcx
    00001596: 	xorl	%edx, %edx
    00001598: 	xorl	%esi, %esi
    0000159a: 	movq	%r12, %rdi
    0000159d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT # Offset: 5533
    000015a2: 	leaq	0xa0(%rsp), %rcx
    000015aa: 	leaq	0x10(%rax), %rdx
    000015ae: 	movq	%rcx, 0x30(%rsp)
    000015b3: 	movq	%rcx, 0x90(%rsp)
    000015bb: 	movq	(%rax), %rcx
    000015be: 	cmpq	%rdx, %rcx
    000015c1: 	jne	.Ltmp1939 # Offset: 5569
    000015c7: 	movdqu	0x10(%rax), %xmm2
    000015cc: 	movaps	%xmm2, 0xa0(%rsp)
    000015d4: 	jmp	.Ltmp1940 # Offset: 5588
    000015d9: 	nopl	(%rax) # Size: 7
.Ltmp1929:
    000015e0: 	addq	$0x8, %r13
    000015e4: 	cmpq	%r13, %rbx
    000015e7: 	jne	.Ltmp1930 # Offset: 5607
    000015ed: 	jmp	.Ltmp1941 # Offset: 5613
    000015f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1925:
    000015f8: 	addq	$0x8, %r13
    000015fc: 	cmpq	%r13, %rbx
    000015ff: 	jne	.Ltmp1926 # Offset: 5631
    00001605: 	jmp	.Ltmp1942 # Offset: 5637
.Ltmp1863:
    0000160a: 	testq	%r14, %r14
    0000160d: 	jne	.Ltmp1943 # Offset: 5645
    00001613: 	movq	%rbp, %rax
    00001616: 	jmp	.Ltmp1944 # Offset: 5654
.Ltmp1852:
    0000161b: 	testq	%r14, %r14
    0000161e: 	jne	.Ltmp1945 # Offset: 5662
    00001624: 	movq	%rbp, %rax
    00001627: 	jmp	.Ltmp1946 # Offset: 5671
.Ltmp1862:
    0000162c: 	xorl	%edx, %edx
    0000162e: 	movq	%r15, %rsi
    00001631: 	movq	%r12, %rdi
    00001634: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5684
    00001639: 	movq	%rax, 0xf0(%rsp)
    00001641: 	movq	%rax, %rdi
    00001644: 	movq	0x70(%rsp), %rax
    00001649: 	movq	%rax, 0x100(%rsp)
.Ltmp1955:
    00001651: 	movq	%r14, %rdx
    00001654: 	movq	%rbx, %rsi
    00001657: 	callq	memcpy@PLT # Offset: 5719
    0000165c: 	movq	0x70(%rsp), %r14
    00001661: 	movq	0xf0(%rsp), %rax
    00001669: 	jmp	.Ltmp1944 # Offset: 5737
.Ltmp1851:
    0000166e: 	leaq	0x48(%rsp), %rsi
    00001673: 	xorl	%edx, %edx
    00001675: 	movq	%r12, %rdi
    00001678: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5752
    0000167d: 	movq	%rax, 0xf0(%rsp)
    00001685: 	movq	%rax, %rdi
    00001688: 	movq	0x48(%rsp), %rax
    0000168d: 	movq	%rax, 0x100(%rsp)
.Ltmp1956:
    00001695: 	movq	%r14, %rdx
    00001698: 	movq	%rbx, %rsi
    0000169b: 	callq	memcpy@PLT # Offset: 5787
    000016a0: 	movq	0x48(%rsp), %r14
    000016a5: 	movq	0xf0(%rsp), %rax
    000016ad: 	jmp	.Ltmp1946 # Offset: 5805
.Ltmp1907:
    000016b2: 	testq	%r14, %r14
    000016b5: 	jne	.Ltmp1947 # Offset: 5813
    000016bb: 	movq	%rbp, %rax
    000016be: 	jmp	.Ltmp1948 # Offset: 5822
.Ltmp1906:
    000016c3: 	leaq	0x48(%rsp), %rsi
    000016c8: 	xorl	%edx, %edx
    000016ca: 	movq	%r12, %rdi
    000016cd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5837
    000016d2: 	movq	%rax, 0xf0(%rsp)
    000016da: 	movq	%rax, %rdi
    000016dd: 	movq	0x48(%rsp), %rax
    000016e2: 	movq	%rax, 0x100(%rsp)
.Ltmp1957:
    000016ea: 	movq	%r14, %rdx
    000016ed: 	movq	%rbx, %rsi
    000016f0: 	callq	memcpy@PLT # Offset: 5872
    000016f5: 	movq	0x48(%rsp), %r14
    000016fa: 	movq	0xf0(%rsp), %rax
    00001702: 	jmp	.Ltmp1948 # Offset: 5890
.Ltmp1886:
    00001707: 	testq	%r14, %r14
    0000170a: 	jne	.Ltmp1949 # Offset: 5898
    00001710: 	movq	%rbp, %rax
    00001713: 	jmp	.Ltmp1950 # Offset: 5907
.Ltmp1885:
    00001718: 	leaq	0x48(%rsp), %rsi
    0000171d: 	xorl	%edx, %edx
    0000171f: 	movq	%r12, %rdi
    00001722: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5922
    00001727: 	movq	%rax, 0xf0(%rsp)
    0000172f: 	movq	%rax, %rdi
    00001732: 	movq	0x48(%rsp), %rax
    00001737: 	movq	%rax, 0x100(%rsp)
.Ltmp1958:
    0000173f: 	movq	%r14, %rdx
    00001742: 	movq	%rbx, %rsi
    00001745: 	callq	memcpy@PLT # Offset: 5957
    0000174a: 	movq	0x48(%rsp), %r14
    0000174f: 	movq	0xf0(%rsp), %rax
    00001757: 	jmp	.Ltmp1950 # Offset: 5975
.Ltmp1831:
    0000175c: 	leaq	0x48(%rsp), %rsi
    00001761: 	leaq	0xd0(%rsp), %rdi
    00001769: 	xorl	%edx, %edx
    0000176b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5995
    00001770: 	movq	%rax, 0xd0(%rsp)
    00001778: 	movq	%rax, %rdi
    0000177b: 	movq	0x48(%rsp), %rax
    00001780: 	movq	%rax, 0xe0(%rsp)
.Ltmp1954:
    00001788: 	movq	%r14, %rdx
    0000178b: 	movq	%rbx, %rsi
    0000178e: 	callq	memcpy@PLT # Offset: 6030
    00001793: 	movq	0x48(%rsp), %r14
    00001798: 	movq	0xd0(%rsp), %rax
    000017a0: 	jmp	.Ltmp1938 # Offset: 6048
.Ltmp1921:
    000017a5: 	testq	%r13, %r13
    000017a8: 	jne	.Ltmp1951 # Offset: 6056
    000017ae: 	movq	%rbp, %rax
    000017b1: 	jmp	.Ltmp1952 # Offset: 6065
.Ltmp1920:
    000017b6: 	leaq	0x48(%rsp), %rsi
    000017bb: 	xorl	%edx, %edx
    000017bd: 	movq	%r12, %rdi
    000017c0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6080
    000017c5: 	movq	%rax, 0xf0(%rsp)
    000017cd: 	movq	%rax, %rdi
    000017d0: 	movq	0x48(%rsp), %rax
    000017d5: 	movq	%rax, 0x100(%rsp)
.Ltmp1959:
    000017dd: 	movq	%r13, %rdx
    000017e0: 	movq	%r14, %rsi
    000017e3: 	callq	memcpy@PLT # Offset: 6115
    000017e8: 	movq	0x48(%rsp), %r13
    000017ed: 	movq	0xf0(%rsp), %rax
    000017f5: 	jmp	.Ltmp1952 # Offset: 6133
.Ltmp1818:
    000017fa: 	movdqu	0x10(%rax), %xmm1
    000017ff: 	movaps	%xmm1, 0xe0(%rsp)
    00001807: 	jmp	.Ltmp1953 # Offset: 6151
.Ltmp1821:
    0000180c: 	movdqu	0x10(%rax), %xmm3
    00001811: 	movaps	%xmm3, 0xa0(%rsp)
    00001819: 	jmp	.Ltmp1940 # Offset: 6169
.Ltmp1937:
    0000181e: 	movq	0x8(%rsp), %rdi
    00001823: 	jmp	.Ltmp1954 # Offset: 6179
.Ltmp1943:
    00001828: 	movq	%rbp, %rdi
    0000182b: 	jmp	.Ltmp1955 # Offset: 6187
.Ltmp1945:
    00001830: 	movq	%rbp, %rdi
    00001833: 	jmp	.Ltmp1956 # Offset: 6195
.Ltmp1947:
    00001838: 	movq	%rbp, %rdi
    0000183b: 	jmp	.Ltmp1957 # Offset: 6203
.Ltmp1949:
    00001840: 	movq	%rbp, %rdi
    00001843: 	jmp	.Ltmp1958 # Offset: 6211
.Ltmp1951:
    00001848: 	movq	%rbp, %rdi
    0000184b: 	jmp	.Ltmp1959 # Offset: 6219
.Ltmp1826:
    0000184d: 	leaq	DATAat0x17123(%rip), %rdi
    00001854: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6228
.Ltmp1825:
    00001859: 	leaq	DATAat0x17123(%rip), %rdi
    00001860: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6240
.Ltmp1830:
    00001865: 	leaq	DATAat0x17008(%rip), %rdi
    0000186c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6252
.Ltmp1833:
    00001871: 	leaq	DATAat0x17123(%rip), %rdi
    00001878: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6264
.Ltmp1841:
    0000187d: 	leaq	DATAat0x17123(%rip), %rdi
    00001884: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6276
.Ltmp1844:
    00001889: 	leaq	DATAat0x17123(%rip), %rdi
    00001890: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6288
.Ltmp1850:
    00001895: 	leaq	DATAat0x17008(%rip), %rdi
    0000189c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6300
.Ltmp1853:
    000018a1: 	leaq	DATAat0x17123(%rip), %rdi
    000018a8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6312
.Ltmp1859:
    000018ad: 	leaq	DATAat0x17123(%rip), %rdi
    000018b4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6324
.Ltmp1861:
    000018b9: 	leaq	DATAat0x17008(%rip), %rdi
    000018c0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6336
.Ltmp1864:
    000018c5: 	leaq	DATAat0x17123(%rip), %rdi
    000018cc: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6348
.Ltmp1874:
    000018d1: 	leaq	DATAat0x17123(%rip), %rdi
    000018d8: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6360
.Ltmp1876:
    000018dd: 	leaq	DATAat0x17123(%rip), %rdi
    000018e4: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6372
.Ltmp1878:
    000018e9: 	leaq	DATAat0x17123(%rip), %rdi
    000018f0: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6384
.Ltmp1884:
    000018f5: 	leaq	DATAat0x17008(%rip), %rdi
    000018fc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6396
.Ltmp1887:
    00001901: 	leaq	DATAat0x17123(%rip), %rdi
    00001908: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6408
.Ltmp1893:
    0000190d: 	leaq	DATAat0x17123(%rip), %rdi
    00001914: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6420
.Ltmp1894:
    00001919: 	leaq	DATAat0x17123(%rip), %rdi
    00001920: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6432
.Ltmp1905:
    00001925: 	leaq	DATAat0x17008(%rip), %rdi
    0000192c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6444
.Ltmp1908:
    00001931: 	leaq	DATAat0x17123(%rip), %rdi
    00001938: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6456
.Ltmp1910:
    0000193d: 	leaq	DATAat0x17123(%rip), %rdi
    00001944: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6468
.Ltmp1919:
    00001949: 	leaq	DATAat0x17008(%rip), %rdi
    00001950: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6480
.Ltmp1922:
    00001955: 	leaq	DATAat0x17123(%rip), %rdi
    0000195c: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6492
.Ltmp1933:
    00001961: 	leaq	DATAat0x17123(%rip), %rdi
    00001968: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6504
.Ltmp1936:
    0000196d: 	callq	__stack_chk_fail@PLT # Offset: 6509
    00001972: 	endbr64
.Ltmp1961:
    00001976: 	movq	%rax, %rbx
    00001979: 	jmp	.Ltmp1960 # Offset: 6521
    0000197e: 	endbr64
    00001982: 	jmp	.Ltmp1961 # Offset: 6530
    00001984: 	endbr64
.Ltmp1990:
    00001988: 	movq	%rax, %rbx
    0000198b: 	jmp	.Ltmp1962 # Offset: 6539
    0000198d: 	endbr64
    00001991: 	jmp	.Ltmp1961 # Offset: 6545
    00001993: 	endbr64
    00001997: 	jmp	.Ltmp1961 # Offset: 6551
    00001999: 	endbr64
    0000199d: 	jmp	.Ltmp1961 # Offset: 6557
.Ltmp1962:
    0000199f: 	movq	0xf0(%rsp), %rdi
    000019a7: 	cmpq	%rbp, %rdi
    000019aa: 	jne	.Ltmp1963 # Offset: 6570
.Ltmp1967:
    000019ac: 	movq	%r15, %rdi
    000019af: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 6575
.Ltmp1988:
    000019b4: 	movq	0x10(%rsp), %rdi
    000019b9: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi1EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 6585
.Ltmp1974:
    000019be: 	movq	%rbx, %rbp
.Ltmp1966:
    000019c1: 	movq	0xb0(%rsp), %rdi
    000019c9: 	cmpq	(%rsp), %rdi
    000019cd: 	je	.Ltmp1964 # Offset: 6605
    000019cf: 	movq	0xc0(%rsp), %rax
    000019d7: 	leaq	0x1(%rax), %rsi
    000019db: 	callq	_ZdlPvm@PLT # Offset: 6619
.Ltmp1964:
    000019e0: 	movq	0x90(%rsp), %rdi
    000019e8: 	cmpq	0x30(%rsp), %rdi
    000019ed: 	je	.Ltmp1965 # Offset: 6637
    000019ef: 	movq	0xa0(%rsp), %rax
    000019f7: 	leaq	0x1(%rax), %rsi
    000019fb: 	callq	_ZdlPvm@PLT # Offset: 6651
.Ltmp1965:
    00001a00: 	movq	%rbp, %rdi
    00001a03: 	callq	_Unwind_Resume@PLT # Offset: 6659
    00001a08: 	endbr64
.Ltmp1982:
    00001a0c: 	movq	%rax, %rbp
    00001a0f: 	jmp	.Ltmp1966 # Offset: 6671
    00001a11: 	endbr64
    00001a15: 	jmp	.Ltmp1961 # Offset: 6677
    00001a1a: 	endbr64
    00001a1e: 	jmp	.Ltmp1961 # Offset: 6686
.Ltmp1963:
    00001a23: 	movq	0x100(%rsp), %rax
    00001a2b: 	leaq	0x1(%rax), %rsi
    00001a2f: 	callq	_ZdlPvm@PLT # Offset: 6703
    00001a34: 	jmp	.Ltmp1967 # Offset: 6708
    00001a39: 	endbr64
    00001a3d: 	jmp	.Ltmp1961 # Offset: 6717
    00001a42: 	endbr64
    00001a46: 	jmp	.Ltmp1961 # Offset: 6726
    00001a4b: 	endbr64
.Ltmp1976:
    00001a4f: 	movq	%rax, %rbx
    00001a52: 	jmp	.Ltmp1968 # Offset: 6738
    00001a54: 	endbr64
.Ltmp1985:
    00001a58: 	movq	%rax, %rbx
    00001a5b: 	jmp	.Ltmp1969 # Offset: 6747
    00001a5d: 	endbr64
.Ltmp1971:
    00001a61: 	movq	%rax, %rbx
    00001a64: 	jmp	.Ltmp1970 # Offset: 6756
    00001a66: 	endbr64
    00001a6a: 	jmp	.Ltmp1961 # Offset: 6762
    00001a6f: 	endbr64
    00001a73: 	jmp	.Ltmp1971 # Offset: 6771
    00001a75: 	endbr64
    00001a79: 	jmp	.Ltmp1961 # Offset: 6777
    00001a7e: 	endbr64
.Ltmp1984:
    00001a82: 	movq	%rax, %rbx
    00001a85: 	jmp	.Ltmp1972 # Offset: 6789
.Ltmp1970:
    00001a87: 	movq	0xf0(%rsp), %rdi
    00001a8f: 	cmpq	%rbp, %rdi
    00001a92: 	je	.Ltmp1968 # Offset: 6802
    00001a94: 	movq	0x100(%rsp), %rax
    00001a9c: 	leaq	0x1(%rax), %rsi
    00001aa0: 	callq	_ZdlPvm@PLT # Offset: 6816
.Ltmp1968:
    00001aa5: 	movq	0xd0(%rsp), %rdi
    00001aad: 	cmpq	0x8(%rsp), %rdi
    00001ab2: 	je	.Ltmp1969 # Offset: 6834
    00001ab4: 	movq	0xe0(%rsp), %rax
    00001abc: 	leaq	0x1(%rax), %rsi
    00001ac0: 	callq	_ZdlPvm@PLT # Offset: 6848
.Ltmp1969:
    00001ac5: 	movq	0x70(%rsp), %rdi
    00001aca: 	movq	0x80(%rsp), %rsi
    00001ad2: 	subq	%rdi, %rsi
    00001ad5: 	testq	%rdi, %rdi
    00001ad8: 	je	.Ltmp1973 # Offset: 6872
.Ltmp1981:
    00001ada: 	callq	_ZdlPvm@PLT # Offset: 6874
.Ltmp1973:
    00001adf: 	movq	0x50(%rsp), %rdi
    00001ae4: 	movq	0x60(%rsp), %rsi
    00001ae9: 	subq	%rdi, %rsi
    00001aec: 	testq	%rdi, %rdi
    00001aef: 	je	.Ltmp1974 # Offset: 6895
.Ltmp1975:
    00001af5: 	callq	_ZdlPvm@PLT # Offset: 6901
    00001afa: 	jmp	.Ltmp1974 # Offset: 6906
.Ltmp1972:
    00001aff: 	movq	0xf0(%rsp), %rdi
    00001b07: 	cmpq	%rbp, %rdi
    00001b0a: 	je	.Ltmp1974 # Offset: 6922
    00001b10: 	movq	0x100(%rsp), %rax
    00001b18: 	leaq	0x1(%rax), %rsi
    00001b1c: 	jmp	.Ltmp1975 # Offset: 6940
    00001b1e: 	endbr64
    00001b22: 	jmp	.Ltmp1976 # Offset: 6946
    00001b27: 	endbr64
    00001b2b: 	movq	%rax, %rbp
    00001b2e: 	jmp	.Ltmp1964 # Offset: 6958
    00001b33: 	endbr64
.Ltmp1986:
    00001b37: 	movq	%rax, %rbx
    00001b3a: 	jmp	.Ltmp1977 # Offset: 6970
    00001b3c: 	endbr64
    00001b40: 	movq	%rax, %r12
    00001b43: 	jmp	.Ltmp1978 # Offset: 6979
.Ltmp1983:
    00001b45: 	movq	0xd0(%rsp), %rdi
    00001b4d: 	cmpq	0x8(%rsp), %rdi
    00001b52: 	je	.Ltmp1978 # Offset: 6994
    00001b54: 	movq	0xe0(%rsp), %rax
    00001b5c: 	leaq	0x1(%rax), %rsi
    00001b60: 	callq	_ZdlPvm@PLT # Offset: 7008
.Ltmp1978:
    00001b65: 	movq	0xb0(%rsp), %rdi
    00001b6d: 	cmpq	(%rsp), %rdi
    00001b71: 	je	.Ltmp1979 # Offset: 7025
    00001b73: 	movq	0xc0(%rsp), %rax
    00001b7b: 	leaq	0x1(%rax), %rsi
    00001b7f: 	callq	_ZdlPvm@PLT # Offset: 7039
.Ltmp1979:
    00001b84: 	movq	0xf0(%rsp), %rdi
    00001b8c: 	cmpq	%rbp, %rdi
    00001b8f: 	je	.Ltmp1980 # Offset: 7055
    00001b91: 	movq	0x100(%rsp), %rax
    00001b99: 	leaq	0x1(%rax), %rsi
    00001b9d: 	callq	_ZdlPvm@PLT # Offset: 7069
.Ltmp1980:
    00001ba2: 	movq	%r12, %rdi
    00001ba5: 	callq	_Unwind_Resume@PLT # Offset: 7077
.Ltmp1977:
    00001baa: 	movq	0xf0(%rsp), %rdi
    00001bb2: 	cmpq	%rbp, %rdi
    00001bb5: 	je	.Ltmp1973 # Offset: 7093
    00001bbb: 	movq	0x100(%rsp), %rax
    00001bc3: 	leaq	0x1(%rax), %rsi
    00001bc7: 	jmp	.Ltmp1981 # Offset: 7111
    00001bcc: 	endbr64
    00001bd0: 	jmp	.Ltmp1982 # Offset: 7120
    00001bd5: 	endbr64
    00001bd9: 	jmp	.Ltmp1982 # Offset: 7129
    00001bde: 	endbr64
    00001be2: 	movq	%rax, %r12
    00001be5: 	jmp	.Ltmp1983 # Offset: 7141
    00001bea: 	endbr64
    00001bee: 	jmp	.Ltmp1984 # Offset: 7150
    00001bf3: 	endbr64
.Ltmp1987:
    00001bf7: 	movq	%rax, %rbx
    00001bfa: 	jmp	.Ltmp1973 # Offset: 7162
    00001bff: 	endbr64
    00001c03: 	jmp	.Ltmp1971 # Offset: 7171
    00001c08: 	endbr64
    00001c0c: 	jmp	.Ltmp1985 # Offset: 7180
    00001c11: 	endbr64
    00001c15: 	jmp	.Ltmp1976 # Offset: 7189
    00001c1a: 	endbr64
    00001c1e: 	jmp	.Ltmp1986 # Offset: 7198
    00001c23: 	endbr64
    00001c27: 	jmp	.Ltmp1987 # Offset: 7207
    00001c29: 	endbr64
    00001c2d: 	jmp	.Ltmp1984 # Offset: 7213
    00001c32: 	endbr64
    00001c36: 	jmp	.Ltmp1984 # Offset: 7222
    00001c3b: 	endbr64
    00001c3f: 	jmp	.Ltmp1961 # Offset: 7231
    00001c44: 	endbr64
    00001c48: 	jmp	.Ltmp1984 # Offset: 7240
    00001c4d: 	endbr64
    00001c51: 	jmp	.Ltmp1984 # Offset: 7249
    00001c56: 	endbr64
    00001c5a: 	movq	%rax, %rbx
    00001c5d: 	jmp	.Ltmp1988 # Offset: 7261
    00001c62: 	endbr64
    00001c66: 	movq	%rax, %rbx
    00001c69: 	jmp	.Ltmp1989 # Offset: 7273
    00001c6b: 	endbr64
    00001c6f: 	jmp	.Ltmp1961 # Offset: 7279
.Ltmp1989:
    00001c74: 	movq	0xf0(%rsp), %rdi
    00001c7c: 	cmpq	%rbp, %rdi
    00001c7f: 	je	.Ltmp1988 # Offset: 7295
    00001c85: 	movq	0x100(%rsp), %rax
    00001c8d: 	leaq	0x1(%rax), %rsi
    00001c91: 	callq	_ZdlPvm@PLT # Offset: 7313
    00001c96: 	jmp	.Ltmp1988 # Offset: 7318
    00001c9b: 	endbr64
    00001c9f: 	jmp	.Ltmp1961 # Offset: 7327
    00001ca4: 	endbr64
    00001ca8: 	jmp	.Ltmp1961 # Offset: 7336
    00001cad: 	endbr64
    00001cb1: 	jmp	.Ltmp1982 # Offset: 7345
    00001cb6: 	endbr64
    00001cba: 	jmp	.Ltmp1961 # Offset: 7354
    00001cbf: 	endbr64
    00001cc3: 	jmp	.Ltmp1961 # Offset: 7363
    00001cc8: 	endbr64
    00001ccc: 	jmp	.Ltmp1961 # Offset: 7372
    00001cd1: 	endbr64
    00001cd5: 	jmp	.Ltmp1961 # Offset: 7381
    00001cda: 	endbr64
    00001cde: 	jmp	.Ltmp1982 # Offset: 7390
    00001ce3: 	endbr64
    00001ce7: 	jmp	.Ltmp1971 # Offset: 7399
    00001cec: 	endbr64
    00001cf0: 	jmp	.Ltmp1982 # Offset: 7408
    00001cf5: 	endbr64
    00001cf9: 	jmp	.Ltmp1990 # Offset: 7417
    00001cfe: 	endbr64
.Ltmp1992:
    00001d02: 	movq	%rax, %rbx
    00001d05: 	jmp	.Ltmp1991 # Offset: 7429
    00001d07: 	endbr64
    00001d0b: 	jmp	.Ltmp1992 # Offset: 7435
    00001d0d: 	endbr64
    00001d11: 	jmp	.Ltmp1990 # Offset: 7441
    00001d16: 	endbr64
    00001d1a: 	jmp	.Ltmp1990 # Offset: 7450
    00001d1f: 	endbr64
    00001d23: 	jmp	.Ltmp1990 # Offset: 7459
    00001d28: 	endbr64
    00001d2c: 	jmp	.Ltmp1990 # Offset: 7468
    00001d31: 	endbr64
    00001d35: 	jmp	.Ltmp1990 # Offset: 7477
.Ltmp1991:
    00001d3a: 	movq	0xf0(%rsp), %rdi
    00001d42: 	cmpq	%rbp, %rdi
    00001d45: 	je	.Ltmp1993 # Offset: 7493
    00001d47: 	movq	0x100(%rsp), %rax
    00001d4f: 	leaq	0x1(%rax), %rsi
    00001d53: 	callq	_ZdlPvm@PLT # Offset: 7507
.Ltmp1993:
    00001d58: 	movq	%rbx, %rbp
    00001d5b: 	jmp	.Ltmp1964 # Offset: 7515
    00001d60: 	endbr64
.Ltmp1996:
    00001d64: 	movq	%rax, %rbx
    00001d67: 	jmp	.Ltmp1994 # Offset: 7527
    00001d69: 	endbr64
    00001d6d: 	jmp	.Ltmp1990 # Offset: 7533
    00001d72: 	endbr64
    00001d76: 	movq	%rax, %rbx
    00001d79: 	jmp	.Ltmp1995 # Offset: 7545
    00001d7b: 	endbr64
    00001d7f: 	jmp	.Ltmp1990 # Offset: 7551
    00001d84: 	endbr64
    00001d88: 	movq	%rax, %rbx
    00001d8b: 	jmp	.Ltmp1967 # Offset: 7563
    00001d90: 	endbr64
    00001d94: 	jmp	.Ltmp1996 # Offset: 7572
.Ltmp1994:
    00001d96: 	movq	0xf0(%rsp), %rdi
    00001d9e: 	cmpq	%rbp, %rdi
    00001da1: 	je	.Ltmp1995 # Offset: 7585
    00001da3: 	movq	0x100(%rsp), %rax
    00001dab: 	leaq	0x1(%rax), %rsi
    00001daf: 	callq	_ZdlPvm@PLT # Offset: 7599
.Ltmp1995:
    00001db4: 	movq	0xd0(%rsp), %rdi
    00001dbc: 	cmpq	0x8(%rsp), %rdi
    00001dc1: 	je	.Ltmp1967 # Offset: 7617
    00001dc7: 	movq	0xe0(%rsp), %rax
    00001dcf: 	leaq	0x1(%rax), %rsi
    00001dd3: 	callq	_ZdlPvm@PLT # Offset: 7635
    00001dd8: 	jmp	.Ltmp1967 # Offset: 7640
.Ltmp1960:
    00001ddd: 	movq	0xf0(%rsp), %rdi
    00001de5: 	cmpq	%rbp, %rdi
    00001de8: 	je	.Ltmp1969 # Offset: 7656
    00001dee: 	movq	0x100(%rsp), %rax
    00001df6: 	leaq	0x1(%rax), %rsi
    00001dfa: 	callq	_ZdlPvm@PLT # Offset: 7674
    00001dff: 	jmp	.Ltmp1969 # Offset: 7679
    00001e04: 	endbr64
    00001e08: 	jmp	.Ltmp1990 # Offset: 7688
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlLi1EEvii"

Binary Function "_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_" after disassembly {
  Number      : 149
  State       : disassembled
  Address     : 0x13d50
  Size        : 0x18a
  MaxSize     : 0x190
  Offset      : 0x13d50
  Section     : .text
  Orc Section : .local.text._ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0148:
    00000000: 	endbr64
    00000004: 	subq	%rdi, %rsi
    00000007: 	cmpq	$0x8, %rsi
    0000000b: 	jle	.Ltmp1997 # Offset: 11
    00000011: 	sarq	$0x3, %rsi
    00000015: 	pushq	%r15
    00000017: 	movq	%rdi, %rcx
    0000001a: 	leaq	-0x2(%rsi), %rax
    0000001e: 	pushq	%r14
    00000020: 	leaq	-0x1(%rsi), %r8
    00000024: 	notq	%rsi
    00000027: 	pushq	%r13
    00000029: 	movl	%esi, %r11d
    0000002c: 	sarq	%r8
    0000002f: 	pushq	%r12
    00000031: 	andl	$0x1, %r11d
    00000035: 	pushq	%rbp
    00000036: 	pushq	%rbx
    00000037: 	movq	%rax, %rbx
    0000003a: 	shrq	$0x3f, %rbx
    0000003e: 	addq	%rax, %rbx
    00000041: 	sarq	%rbx
    00000044: 	leaq	(%rdi,%rbx,8), %r9
    00000048: 	movq	%rbx, %rdi
    0000004b: 	movq	(%r9), %r10
    0000004e: 	movq	%r9, %rsi
    00000051: 	cmpq	%r8, %rdi
    00000054: 	jge	.Ltmp1998 # Offset: 84
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2010:
    00000060: 	movq	%rdi, %r12
    00000063: 	jmp	.Ltmp1999 # Offset: 99
    00000065: 	nopl	(%rax) # Size: 3
.Ltmp2001:
    00000068: 	movq	%r14, (%rcx,%r12,8)
    0000006c: 	cmpq	%rbp, %r8
    0000006f: 	jle	.Ltmp2000 # Offset: 111
    00000075: 	movq	%rbp, %rax
.Ltmp2002:
    00000078: 	movq	%rax, %r12
.Ltmp1999:
    0000007b: 	leaq	0x1(%r12), %rdx
    00000080: 	leaq	(%rdx,%rdx), %rbp
    00000084: 	shlq	$0x4, %rdx
    00000088: 	leaq	-0x1(%rbp), %rax
    0000008c: 	addq	%rcx, %rdx
    0000008f: 	leaq	(%rcx,%rax,8), %rsi
    00000093: 	movq	(%rdx), %r14
    00000096: 	movq	(%rsi), %r13
    00000099: 	movq	(%r14), %r15
    0000009c: 	cmpq	%r15, (%r13)
    000000a0: 	jle	.Ltmp2001 # Offset: 160
    000000a2: 	movq	%r13, (%rcx,%r12,8)
    000000a6: 	cmpq	%rax, %r8
    000000a9: 	jg	.Ltmp2002 # Offset: 169
.Ltmp2013:
    000000ab: 	cmpq	%rax, %rbx
    000000ae: 	jne	.Ltmp2003 # Offset: 174
    000000b0: 	testb	%r11b, %r11b
    000000b3: 	jne	.Ltmp2004 # Offset: 179
.Ltmp2003:
    000000b5: 	leaq	-0x1(%rax), %rbp
    000000b9: 	sarq	%rbp
    000000bc: 	cmpq	%rax, %rdi
    000000bf: 	jge	.Ltmp2005 # Offset: 191
    000000c5: 	movq	(%r10), %r13
    000000c8: 	jmp	.Ltmp2006 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2008:
    000000d0: 	leaq	-0x1(%rbp), %rdx
    000000d4: 	movq	%rax, (%rsi)
    000000d7: 	movq	%rdx, %rax
    000000da: 	shrq	$0x3f, %rax
    000000de: 	addq	%rdx, %rax
    000000e1: 	sarq	%rax
    000000e4: 	movq	%rax, %rdx
    000000e7: 	movq	%rbp, %rax
    000000ea: 	cmpq	%rbp, %rdi
    000000ed: 	jge	.Ltmp2007 # Offset: 237
    000000ef: 	movq	%rdx, %rbp
.Ltmp2006:
    000000f2: 	leaq	(%rcx,%rbp,8), %r12
    000000f6: 	leaq	(%rcx,%rax,8), %rsi
    000000fa: 	movq	(%r12), %rax
    000000fe: 	cmpq	%r13, (%rax)
    00000101: 	jl	.Ltmp2008 # Offset: 257
.Ltmp2011:
    00000103: 	movq	%r10, (%rsi)
    00000106: 	subq	$0x8, %r9
    0000010a: 	testq	%rdi, %rdi
    0000010d: 	je	.Ltmp2009 # Offset: 269
.Ltmp2012:
    0000010f: 	subq	$0x1, %rdi
    00000113: 	movq	(%r9), %r10
    00000116: 	movq	%r9, %rsi
    00000119: 	cmpq	%r8, %rdi
    0000011c: 	jl	.Ltmp2010 # Offset: 284
.Ltmp1998:
    00000122: 	cmpq	%rbx, %rdi
    00000125: 	jne	.Ltmp2011 # Offset: 293
    00000127: 	movq	%rdi, %rax
    0000012a: 	testb	%r11b, %r11b
    0000012d: 	je	.Ltmp2011 # Offset: 301
.Ltmp2004:
    0000012f: 	leaq	0x1(%rax,%rax), %rax
    00000134: 	leaq	(%rcx,%rax,8), %rdx
    00000138: 	movq	(%rdx), %rbp
    0000013b: 	movq	%rbp, (%rsi)
    0000013e: 	movq	%rdx, %rsi
    00000141: 	jmp	.Ltmp2003 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2007:
    00000150: 	movq	%r12, %rsi
    00000153: 	subq	$0x8, %r9
    00000157: 	movq	%r10, (%rsi)
    0000015a: 	testq	%rdi, %rdi
    0000015d: 	jne	.Ltmp2012 # Offset: 349
.Ltmp2009:
    0000015f: 	popq	%rbx
    00000160: 	popq	%rbp
    00000161: 	popq	%r12
    00000163: 	popq	%r13
    00000165: 	popq	%r14
    00000167: 	popq	%r15
    00000169: 	retq # Offset: 361
    0000016a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2000:
    00000170: 	movq	%rdx, %rsi
    00000173: 	movq	%rbp, %rax
    00000176: 	jmp	.Ltmp2013 # Offset: 374
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1997:
    00000180: 	retq # Offset: 384
.Ltmp2005:
    00000181: 	movq	%r10, (%rsi)
    00000184: 	subq	$0x8, %r9
    00000188: 	jmp	.Ltmp2012 # Offset: 392
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_"

Binary Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_" after disassembly {
  Number      : 150
  State       : disassembled
  Address     : 0x13ee0
  Size        : 0x1eb
  MaxSize     : 0x1f0
  Offset      : 0x13ee0
  Section     : .text
  Orc Section : .local.text._ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0149:
    00000000: 	endbr64
    00000004: 	pushq	%r13
    00000006: 	pushq	%r12
    00000008: 	pushq	%rbp
    00000009: 	pushq	%rbx
    0000000a: 	subq	$0x18, %rsp
    0000000e: 	movq	%fs:0x28, %rax
    00000017: 	movq	%rax, 0x8(%rsp)
    0000001c: 	movq	%rsi, %rax
    0000001f: 	subq	%rdi, %rax
    00000022: 	cmpq	$0x80, %rax
    00000028: 	jle	.Ltmp2014 # Offset: 40
    0000002e: 	movq	%rdi, %r12
    00000031: 	movq	%rsi, %rbp
    00000034: 	movq	%rdx, %r13
    00000037: 	movq	%rsi, %r8
    0000003a: 	leaq	0x8(%rdi), %rbx
    0000003e: 	testq	%rdx, %rdx
    00000041: 	je	.Ltmp2015 # Offset: 65
.Ltmp2028:
    00000047: 	movq	%r8, %rax
    0000004a: 	movq	0x8(%r12), %r10
    0000004f: 	movq	-0x8(%r8), %r11
    00000053: 	subq	$0x1, %r13
    00000057: 	subq	%r12, %rax
    0000005a: 	movq	(%r12), %rcx
    0000005e: 	movq	%rax, %rdx
    00000061: 	shrq	$0x3f, %rax
    00000065: 	movq	(%r11), %rsi
    00000068: 	sarq	$0x3, %rdx
    0000006c: 	addq	%rdx, %rax
    0000006f: 	movq	(%r10), %rdx
    00000072: 	sarq	%rax
    00000075: 	leaq	(%r12,%rax,8), %rdi
    00000079: 	movq	(%rdi), %r9
    0000007c: 	movq	(%r9), %rax
    0000007f: 	cmpq	%rax, %rdx
    00000082: 	jge	.Ltmp2016 # Offset: 130
    00000088: 	cmpq	%rsi, %rax
    0000008b: 	jl	.Ltmp2017 # Offset: 139
    00000091: 	cmpq	%rsi, %rdx
    00000094: 	jl	.Ltmp2018 # Offset: 148
.Ltmp2026:
    0000009a: 	movq	%r10, (%r12)
    0000009e: 	movq	%rcx, 0x8(%r12)
    000000a3: 	movq	-0x8(%r8), %rdi
.Ltmp2027:
    000000a7: 	movq	(%r12), %rsi
    000000ab: 	movq	%r8, %rdx
    000000ae: 	movq	%rbx, %rax
    000000b1: 	movq	(%rsi), %rsi
    000000b4: 	cmpq	%rsi, (%rcx)
    000000b7: 	jge	.Ltmp2019 # Offset: 183
    000000b9: 	nopl	(%rax) # Size: 7
.Ltmp2024:
    000000c0: 	addq	$0x8, %rax
    000000c4: 	nopl	(%rax) # Size: 4
.Ltmp2020:
    000000c8: 	movq	(%rax), %rcx
    000000cb: 	movq	%rax, %rbp
    000000ce: 	addq	$0x8, %rax
    000000d2: 	cmpq	%rsi, (%rcx)
    000000d5: 	jl	.Ltmp2020 # Offset: 213
.Ltmp2025:
    000000d7: 	subq	$0x8, %rdx
    000000db: 	cmpq	%rsi, (%rdi)
    000000de: 	jle	.Ltmp2021 # Offset: 222
.Ltmp2022:
    000000e0: 	movq	-0x8(%rdx), %rax
    000000e4: 	subq	$0x8, %rdx
    000000e8: 	cmpq	%rsi, (%rax)
    000000eb: 	jg	.Ltmp2022 # Offset: 235
.Ltmp2021:
    000000ed: 	cmpq	%rbp, %rdx
    000000f0: 	jbe	.Ltmp2023 # Offset: 240
    000000f2: 	movq	(%rdx), %rax
    000000f5: 	movq	%rax, (%rbp)
    000000f9: 	leaq	0x8(%rbp), %rax
    000000fd: 	movq	-0x8(%rdx), %rdi
    00000101: 	movq	%rcx, (%rdx)
    00000104: 	movq	(%r12), %rsi
    00000108: 	movq	0x8(%rbp), %rcx
    0000010c: 	movq	(%rsi), %rsi
    0000010f: 	cmpq	%rsi, (%rcx)
    00000112: 	jl	.Ltmp2024 # Offset: 274
.Ltmp2019:
    00000114: 	movq	%rax, %rbp
    00000117: 	jmp	.Ltmp2025 # Offset: 279
.Ltmp2016:
    00000119: 	cmpq	%rsi, %rdx
    0000011c: 	jl	.Ltmp2026 # Offset: 284
    00000122: 	cmpq	%rsi, %rax
    00000125: 	jge	.Ltmp2017 # Offset: 293
.Ltmp2018:
    00000127: 	movq	%r11, (%r12)
    0000012b: 	movq	%rcx, %rdi
    0000012e: 	movq	%rcx, -0x8(%r8)
    00000132: 	movq	0x8(%r12), %rcx
    00000137: 	jmp	.Ltmp2027 # Offset: 311
    0000013c: 	nopl	(%rax) # Size: 4
.Ltmp2023:
    00000140: 	movq	%r13, %rdx
    00000143: 	movq	%r8, %rsi
    00000146: 	movq	%rbp, %rdi
    00000149: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 329
    0000014e: 	movq	%rbp, %rax
    00000151: 	subq	%r12, %rax
    00000154: 	cmpq	$0x80, %rax
    0000015a: 	jle	.Ltmp2014 # Offset: 346
    0000015c: 	testq	%r13, %r13
    0000015f: 	je	.Ltmp2015 # Offset: 351
    00000161: 	movq	%rbp, %r8
    00000164: 	jmp	.Ltmp2028 # Offset: 356
.Ltmp2017:
    00000169: 	movq	%r9, (%r12)
    0000016d: 	movq	%rcx, (%rdi)
    00000170: 	movq	0x8(%r12), %rcx
    00000175: 	movq	-0x8(%r8), %rdi
    00000179: 	jmp	.Ltmp2027 # Offset: 377
.Ltmp2015:
    0000017e: 	movzbl	0x40(%rsp), %eax
    00000183: 	leaq	0x7(%rsp), %rdx
    00000188: 	movq	%rbp, %rsi
    0000018b: 	movq	%r12, %rdi
    0000018e: 	movb	%al, 0x7(%rsp)
    00000192: 	callq	_ZSt11__make_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEENS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_RT0_ # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2029:
    000001a0: 	subq	$0x8, %rbp
    000001a4: 	movq	(%r12), %rax
    000001a8: 	movq	(%rbp), %rdx
    000001ac: 	movq	%r12, %rdi
    000001af: 	movq	%rbp, %rbx
    000001b2: 	subq	%r12, %rbx
    000001b5: 	movq	%rax, (%rbp)
    000001b9: 	movq	%rbx, %rsi
    000001bc: 	sarq	$0x3, %rsi
    000001c0: 	callq	"_ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElS5_NS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_T0_SR_T1_T2_.constprop.0/1" # Offset: 448
    000001c5: 	cmpq	$0x8, %rbx
    000001c9: 	jg	.Ltmp2029 # Offset: 457
.Ltmp2014:
    000001cb: 	movq	0x8(%rsp), %rax
    000001d0: 	subq	%fs:0x28, %rax
    000001d9: 	jne	.Ltmp2030 # Offset: 473
    000001db: 	addq	$0x18, %rsp
    000001df: 	popq	%rbx
    000001e0: 	popq	%rbp
    000001e1: 	popq	%r12
    000001e3: 	popq	%r13
    000001e5: 	retq # Offset: 485
.Ltmp2030:
    000001e6: 	callq	__stack_chk_fail@PLT # Offset: 486
DWARF CFI Instructions:
    <empty>
End of Function "_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_"

Binary Function "_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE" after disassembly {
  Number      : 151
  State       : disassembled
  Address     : 0x140d0
  Size        : 0x349
  MaxSize     : 0x350
  Offset      : 0x140d0
  Section     : .text
  Orc Section : .local.text._Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0150:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x48, %rsp
    00000018: 	movq	%fs:0x28, %rax
    00000021: 	movq	%rax, 0x38(%rsp)
    00000026: 	xorl	%eax, %eax
    00000028: 	callq	clock@PLT # Offset: 40
    0000002d: 	movq	0x8(%rbx), %r13
    00000031: 	movq	(%rbx), %r14
    00000034: 	movq	%rax, start_time(%rip)
    0000003b: 	cmpq	%r13, %r14
    0000003e: 	je	.Ltmp2031 # Offset: 62
    00000044: 	movq	%r13, %r15
    00000047: 	movl	$0x3f, %edx
    0000004c: 	movq	%r13, %rsi
    0000004f: 	movq	%r14, %rdi
    00000052: 	subq	%r14, %r15
    00000055: 	leaq	0x8(%r14), %r12
    00000059: 	movq	%r15, %rax
    0000005c: 	sarq	$0x3, %rax
    00000060: 	bsrq	%rax, %rax
    00000064: 	xorq	$0x3f, %rax
    00000068: 	subl	%eax, %edx
    0000006a: 	movslq	%edx, %rdx
    0000006d: 	addq	%rdx, %rdx
    00000070: 	callq	_ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIP14PointerWrapperI17VariableContainerIlLi13EEESt6vectorIS5_SaIS5_EEEElNS0_5__ops15_Iter_comp_iterIZ12StdSortArrayIS5_EvRS7_IT_SaISE_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEUlRS5_SO_E_EEEvSE_SE_T0_T1_ # Offset: 112
    00000075: 	cmpq	$0x80, %r15
    0000007c: 	jle	.Ltmp2032 # Offset: 124
    00000082: 	leaq	0x80(%r14), %r15
    00000089: 	jmp	.Ltmp2033 # Offset: 137
    0000008b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2036:
    00000090: 	cmpq	%r12, %r14
    00000093: 	je	.Ltmp2034 # Offset: 147
    00000095: 	movl	$0x8, %eax
    0000009a: 	movq	%r12, %rdx
    0000009d: 	movq	%r14, %rsi
    000000a0: 	movq	%r8, 0x8(%rsp)
    000000a5: 	subq	%r14, %rdx
    000000a8: 	leaq	(%r14,%rax), %rdi
    000000ac: 	callq	memmove@PLT # Offset: 172
    000000b1: 	movq	0x8(%rsp), %r8
.Ltmp2034:
    000000b6: 	addq	$0x8, %r12
    000000ba: 	movq	%r8, (%r14)
    000000bd: 	cmpq	%r12, %r15
    000000c0: 	je	.Ltmp2035 # Offset: 192
.Ltmp2033:
    000000c2: 	movq	(%r12), %r8
    000000c6: 	movq	(%r14), %rax
    000000c9: 	movq	(%r8), %rdx
    000000cc: 	cmpq	(%rax), %rdx
    000000cf: 	jl	.Ltmp2036 # Offset: 207
    000000d1: 	movq	-0x8(%r12), %rsi
    000000d6: 	leaq	-0x8(%r12), %rax
    000000db: 	cmpq	(%rsi), %rdx
    000000de: 	jge	.Ltmp2037 # Offset: 222
    000000e4: 	nopl	(%rax) # Size: 4
.Ltmp2038:
    000000e8: 	movq	(%rax), %rsi
    000000eb: 	movq	%rax, %rdi
    000000ee: 	subq	$0x8, %rax
    000000f2: 	movq	%rsi, 0x10(%rax)
    000000f6: 	movq	(%rax), %rsi
    000000f9: 	cmpq	(%rsi), %rdx
    000000fc: 	jl	.Ltmp2038 # Offset: 252
.Ltmp2055:
    000000fe: 	addq	$0x8, %r12
    00000102: 	movq	%r8, (%rdi)
    00000105: 	cmpq	%r12, %r15
    00000108: 	jne	.Ltmp2033 # Offset: 264
.Ltmp2035:
    0000010a: 	cmpq	%r15, %r13
    0000010d: 	je	.Ltmp2031 # Offset: 269
    0000010f: 	nop # Size: 1
.Ltmp2041:
    00000110: 	movq	(%r15), %rdi
    00000113: 	movq	-0x8(%r15), %rdx
    00000117: 	leaq	-0x8(%r15), %rax
    0000011b: 	movq	(%rdi), %rcx
    0000011e: 	cmpq	(%rdx), %rcx
    00000121: 	jge	.Ltmp2039 # Offset: 289
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2040:
    00000130: 	movq	(%rax), %rdx
    00000133: 	movq	%rax, %rsi
    00000136: 	subq	$0x8, %rax
    0000013a: 	movq	%rdx, 0x10(%rax)
    0000013e: 	movq	(%rax), %rdx
    00000141: 	cmpq	%rcx, (%rdx)
    00000144: 	jg	.Ltmp2040 # Offset: 324
    00000146: 	addq	$0x8, %r15
    0000014a: 	movq	%rdi, (%rsi)
    0000014d: 	cmpq	%r15, %r13
    00000150: 	jne	.Ltmp2041 # Offset: 336
.Ltmp2031:
    00000152: 	callq	clock@PLT # Offset: 338
    00000157: 	movq	(%rbp), %rsi
    0000015b: 	movq	0x8(%rbp), %rdx
    0000015f: 	leaq	0x10(%rsp), %r13
    00000164: 	movq	%rax, end_time(%rip)
    0000016b: 	movq	%r13, %rdi
    0000016e: 	pxor	%xmm0, %xmm0
    00000172: 	subq	start_time(%rip), %rax
    00000179: 	addq	%rsi, %rdx
    0000017c: 	cvtsi2sd	%rax, %xmm0
    00000181: 	leaq	0x20(%rsp), %r12
    00000186: 	divsd	DATAat0x17370(%rip), %xmm0
    0000018e: 	movq	%r12, 0x10(%rsp)
    00000193: 	movsd	%xmm0, 0x8(%rsp)
    00000199: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 409
    0000019e: 	movq	0x8(%rbx), %rdi
    000001a2: 	movq	0x18(%rsp), %rdx
    000001a7: 	subq	(%rbx), %rdi
    000001aa: 	movq	0x10(%rsp), %rsi
    000001af: 	movsd	0x8(%rsp), %xmm0
    000001b5: 	sarq	$0x3, %rdi
    000001b9: 	callq	"_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0.isra.0/1" # Offset: 441
    000001be: 	movq	0x10(%rsp), %rdi
    000001c3: 	cmpq	%r12, %rdi
    000001c6: 	je	.Ltmp2042 # Offset: 454
    000001c8: 	movq	0x20(%rsp), %rax
    000001cd: 	leaq	0x1(%rax), %rsi
    000001d1: 	callq	_ZdlPvm@PLT # Offset: 465
.Ltmp2042:
    000001d6: 	movq	(%rbp), %rsi
    000001da: 	movq	0x8(%rbp), %rdx
    000001de: 	movq	%r13, %rdi
    000001e1: 	movq	%r12, 0x10(%rsp)
    000001e6: 	addq	%rsi, %rdx
    000001e9: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 489
    000001ee: 	movq	(%rbx), %rax
    000001f1: 	movq	0x8(%rbx), %rsi
    000001f5: 	addq	$0x8, %rax
    000001f9: 	jmp	.Ltmp2043 # Offset: 505
    000001fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2045:
    00000200: 	movq	(%rdx), %rcx
    00000203: 	movq	-0x8(%rdx), %rdx
    00000207: 	addq	$0x8, %rax
    0000020b: 	movq	(%rdx), %rbx
    0000020e: 	cmpq	%rbx, (%rcx)
    00000211: 	jl	.Ltmp2044 # Offset: 529
.Ltmp2043:
    00000217: 	movq	%rax, %rdx
    0000021a: 	cmpq	%rax, %rsi
    0000021d: 	jne	.Ltmp2045 # Offset: 541
.Ltmp2053:
    0000021f: 	movq	0x10(%rsp), %rdi
    00000224: 	cmpq	%r12, %rdi
    00000227: 	je	.Ltmp2046 # Offset: 551
    00000229: 	movq	0x20(%rsp), %rax
    0000022e: 	leaq	0x1(%rax), %rsi
    00000232: 	callq	_ZdlPvm@PLT # Offset: 562
.Ltmp2046:
    00000237: 	movq	0x38(%rsp), %rax
    0000023c: 	subq	%fs:0x28, %rax
    00000245: 	jne	.Ltmp2047 # Offset: 581
    0000024b: 	addq	$0x48, %rsp
    0000024f: 	popq	%rbx
    00000250: 	popq	%rbp
    00000251: 	popq	%r12
    00000253: 	popq	%r13
    00000255: 	popq	%r14
    00000257: 	popq	%r15
    00000259: 	retq # Offset: 601
    0000025a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2049:
    00000260: 	cmpq	%r12, %r14
    00000263: 	je	.Ltmp2048 # Offset: 611
    00000265: 	movq	%r12, %rdx
    00000268: 	movl	$0x8, %eax
    0000026d: 	movq	%r14, %rsi
    00000270: 	subq	%r14, %rdx
    00000273: 	leaq	(%r14,%rax), %rdi
    00000277: 	callq	memmove@PLT # Offset: 631
.Ltmp2048:
    0000027c: 	movq	%r15, (%r14)
.Ltmp2052:
    0000027f: 	addq	$0x8, %r12
.Ltmp2032:
    00000283: 	cmpq	%r12, %r13
    00000286: 	je	.Ltmp2031 # Offset: 646
    0000028c: 	movq	(%r12), %r15
    00000290: 	movq	(%r14), %rax
    00000293: 	movq	(%r15), %rdx
    00000296: 	cmpq	(%rax), %rdx
    00000299: 	jl	.Ltmp2049 # Offset: 665
    0000029b: 	movq	-0x8(%r12), %rsi
    000002a0: 	leaq	-0x8(%r12), %rax
    000002a5: 	cmpq	(%rsi), %rdx
    000002a8: 	jge	.Ltmp2050 # Offset: 680
    000002aa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2051:
    000002b0: 	movq	(%rax), %rsi
    000002b3: 	movq	%rax, %rdi
    000002b6: 	subq	$0x8, %rax
    000002ba: 	movq	%rsi, 0x10(%rax)
    000002be: 	movq	(%rax), %rsi
    000002c1: 	cmpq	(%rsi), %rdx
    000002c4: 	jl	.Ltmp2051 # Offset: 708
.Ltmp2054:
    000002c6: 	movq	%r15, (%rdi)
    000002c9: 	jmp	.Ltmp2052 # Offset: 713
    000002cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2044:
    000002d0: 	movq	0x10(%rsp), %rdx
    000002d5: 	leaq	DATAat0x1710f(%rip), %rsi
    000002dc: 	movl	$0x1, %edi
    000002e1: 	xorl	%eax, %eax
    000002e3: 	callq	__printf_chk@PLT # Offset: 739
    000002e8: 	jmp	.Ltmp2053 # Offset: 744
    000002ed: 	nopl	(%rax) # Size: 3
.Ltmp2039:
    000002f0: 	movq	%r15, %rsi
    000002f3: 	addq	$0x8, %r15
    000002f7: 	movq	%rdi, (%rsi)
    000002fa: 	cmpq	%r15, %r13
    000002fd: 	jne	.Ltmp2041 # Offset: 765
    00000303: 	jmp	.Ltmp2031 # Offset: 771
.Ltmp2050:
    00000308: 	movq	%r12, %rdi
    0000030b: 	jmp	.Ltmp2054 # Offset: 779
.Ltmp2037:
    0000030d: 	movq	%r12, %rdi
    00000310: 	jmp	.Ltmp2055 # Offset: 784
.Ltmp2047:
    00000315: 	callq	__stack_chk_fail@PLT # Offset: 789
    0000031a: 	endbr64
.Ltmp2057:
    0000031e: 	movq	%rax, %rbp
    00000321: 	jmp	.Ltmp2056 # Offset: 801
    00000323: 	endbr64
    00000327: 	jmp	.Ltmp2057 # Offset: 807
.Ltmp2056:
    00000329: 	movq	0x10(%rsp), %rdi
    0000032e: 	cmpq	%r12, %rdi
    00000331: 	je	.Ltmp2058 # Offset: 817
    00000333: 	movq	0x20(%rsp), %rax
    00000338: 	leaq	0x1(%rax), %rsi
    0000033c: 	callq	_ZdlPvm@PLT # Offset: 828
.Ltmp2058:
    00000341: 	movq	%rbp, %rdi
    00000344: 	callq	_Unwind_Resume@PLT # Offset: 836
DWARF CFI Instructions:
    <empty>
End of Function "_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE"

Binary Function "_Z11TestOneTypeIlLi13EEvii" after disassembly {
  Number      : 152
  State       : disassembled
  Address     : 0x14420
  Size        : 0x1dc8
  MaxSize     : 0x1dc8
  Offset      : 0x14420
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlLi13EEvii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0151:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	$0x2d, %edx
    0000000b: 	pushq	%r14
    0000000d: 	pushq	%r13
    0000000f: 	pushq	%r12
    00000011: 	pushq	%rbp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x128, %rsp
    0000001a: 	movl	%edi, 0x1c(%rsp)
    0000001e: 	leaq	0xf0(%rsp), %r12
    00000026: 	leaq	0x100(%rsp), %rbp
    0000002e: 	movl	%esi, 0x18(%rsp)
    00000032: 	movq	%r12, %rdi
    00000035: 	movl	$0x2, %esi
    0000003a: 	leaq	0xb0(%rsp), %r13
    00000042: 	movq	%fs:0x28, %rax
    0000004b: 	movq	%rax, 0x118(%rsp)
    00000053: 	xorl	%eax, %eax
    00000055: 	movq	%rbp, 0xf0(%rsp)
    0000005d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc@PLT # Offset: 93
    00000062: 	movq	0xf0(%rsp), %rax
    0000006a: 	movq	%r13, %rdi
    0000006d: 	movl	$0x3331, %edx
    00000072: 	movl	$0x5f34, %ecx
    00000077: 	leaq	DATAat0x171fd(%rip), %rsi
    0000007e: 	movw	%dx, (%rax)
    00000081: 	leaq	0xc0(%rsp), %rax
    00000089: 	movl	$0x1, %edx
    0000008e: 	movq	%rax, (%rsp)
    00000092: 	movq	%rax, 0xb0(%rsp)
    0000009a: 	movl	$0x36746e69, 0xc0(%rsp)
    000000a5: 	movw	%cx, 0xc4(%rsp)
    000000ad: 	movb	$0x74, 0xc6(%rsp)
    000000b5: 	movq	$0x7, 0xb8(%rsp)
    000000c1: 	movb	$0x0, 0xc7(%rsp)
    000000c9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 201
    000000ce: 	leaq	0xe0(%rsp), %rcx
    000000d6: 	leaq	0x10(%rax), %rdx
    000000da: 	movq	%rcx, 0x8(%rsp)
    000000df: 	movq	%rcx, 0xd0(%rsp)
    000000e7: 	movq	(%rax), %rcx
    000000ea: 	cmpq	%rdx, %rcx
    000000ed: 	je	.Ltmp2059 # Offset: 237
    000000f3: 	movq	%rcx, 0xd0(%rsp)
    000000fb: 	movq	0x10(%rax), %rcx
    000000ff: 	movq	%rcx, 0xe0(%rsp)
.Ltmp2193:
    00000107: 	movq	0x8(%rax), %rcx
    0000010b: 	movq	%rcx, 0xd8(%rsp)
    00000113: 	movb	$0x0, 0x10(%rax)
    00000117: 	movq	%rdx, (%rax)
    0000011a: 	movq	0xd0(%rsp), %r9
    00000122: 	movq	$0x0, 0x8(%rax)
    0000012a: 	movl	$0xf, %eax
    0000012f: 	movq	0xd8(%rsp), %r8
    00000137: 	movq	0xf8(%rsp), %rdx
    0000013f: 	cmpq	0x8(%rsp), %r9
    00000144: 	movq	%rax, %rdi
    00000147: 	cmovneq	0xe0(%rsp), %rdi
    00000150: 	movq	0xf0(%rsp), %rsi
    00000158: 	leaq	(%r8,%rdx), %rcx
    0000015c: 	cmpq	%rdi, %rcx
    0000015f: 	jbe	.Ltmp2060 # Offset: 351
    00000161: 	cmpq	%rbp, %rsi
    00000164: 	cmovneq	0x100(%rsp), %rax
    0000016d: 	cmpq	%rax, %rcx
    00000170: 	jbe	.Ltmp2061 # Offset: 368
.Ltmp2060:
    00000176: 	leaq	0xd0(%rsp), %rdi
    0000017e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 382
    00000183: 	leaq	0xa0(%rsp), %rcx
    0000018b: 	leaq	0x10(%rax), %rdx
    0000018f: 	movq	%rcx, 0x30(%rsp)
    00000194: 	movq	%rcx, 0x90(%rsp)
    0000019c: 	movq	(%rax), %rcx
    0000019f: 	cmpq	%rdx, %rcx
    000001a2: 	je	.Ltmp2062 # Offset: 418
.Ltmp2178:
    000001a8: 	movq	%rcx, 0x90(%rsp)
    000001b0: 	movq	0x10(%rax), %rcx
    000001b4: 	movq	%rcx, 0xa0(%rsp)
.Ltmp2179:
    000001bc: 	movq	0x8(%rax), %rcx
    000001c0: 	movq	%rcx, 0x98(%rsp)
    000001c8: 	movq	%rdx, (%rax)
    000001cb: 	movb	$0x0, 0x10(%rax)
    000001cf: 	movq	0xd0(%rsp), %rdi
    000001d7: 	movq	$0x0, 0x8(%rax)
    000001df: 	cmpq	0x8(%rsp), %rdi
    000001e4: 	je	.Ltmp2063 # Offset: 484
    000001e6: 	movq	0xe0(%rsp), %rax
    000001ee: 	leaq	0x1(%rax), %rsi
    000001f2: 	callq	_ZdlPvm@PLT # Offset: 498
.Ltmp2063:
    000001f7: 	movq	0xb0(%rsp), %rdi
    000001ff: 	cmpq	(%rsp), %rdi
    00000203: 	je	.Ltmp2064 # Offset: 515
    00000205: 	movq	0xc0(%rsp), %rax
    0000020d: 	leaq	0x1(%rax), %rsi
    00000211: 	callq	_ZdlPvm@PLT # Offset: 529
.Ltmp2064:
    00000216: 	movq	0xf0(%rsp), %rdi
    0000021e: 	cmpq	%rbp, %rdi
    00000221: 	je	.Ltmp2065 # Offset: 545
    00000223: 	movq	0x100(%rsp), %rax
    0000022b: 	leaq	0x1(%rax), %rsi
    0000022f: 	callq	_ZdlPvm@PLT # Offset: 559
.Ltmp2065:
    00000234: 	movq	0x90(%rsp), %rsi
    0000023c: 	movq	0x98(%rsp), %rdx
    00000244: 	movq	%r13, %rdi
    00000247: 	movq	(%rsp), %rax
    0000024b: 	addq	%rsi, %rdx
    0000024e: 	movq	%rax, 0xb0(%rsp)
    00000256: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 598
    0000025b: 	movabsq	$0x3fffffffffffffff, %rax
    00000265: 	subq	0xb8(%rsp), %rax
    0000026d: 	cmpq	$0x7, %rax
    00000271: 	jbe	.Ltmp2066 # Offset: 625
    00000277: 	movl	$0x8, %edx
    0000027c: 	leaq	DATAat0x171ff(%rip), %rsi
    00000283: 	movq	%r13, %rdi
    00000286: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 646
    0000028b: 	leaq	DATAat0x17152(%rip), %rdx
    00000292: 	movq	%r13, %rsi
    00000295: 	movq	%r12, %rdi
    00000298: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 664
    0000029d: 	leaq	0x50(%rsp), %rax
    000002a2: 	movl	0x18(%rsp), %edx
    000002a6: 	movl	0x1c(%rsp), %esi
    000002aa: 	movq	%r12, %rcx
    000002ad: 	movq	%rax, %rdi
    000002b0: 	movq	%rax, 0x10(%rsp)
    000002b5: 	callq	_Z11CreateArrayI17VariableContainerIlLi13EEPS1_ESt6vectorIT0_SaIS4_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 693
    000002ba: 	movq	0xf0(%rsp), %rdi
    000002c2: 	cmpq	%rbp, %rdi
    000002c5: 	je	.Ltmp2067 # Offset: 709
    000002c7: 	movq	0x100(%rsp), %rax
    000002cf: 	leaq	0x1(%rax), %rsi
    000002d3: 	callq	_ZdlPvm@PLT # Offset: 723
.Ltmp2067:
    000002d8: 	leaq	DATAat0x17160(%rip), %rdx
    000002df: 	movq	%r13, %rsi
    000002e2: 	movq	%r12, %rdi
    000002e5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 741
    000002ea: 	leaq	0x70(%rsp), %r15
    000002ef: 	movq	0x10(%rsp), %rsi
    000002f4: 	movq	%r12, %rdx
    000002f7: 	movq	%r15, %rdi
    000002fa: 	callq	_Z9CopyArrayIP17VariableContainerIlLi13EEESt6vectorIT_SaIS4_EERS6_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 762
    000002ff: 	movq	0xf0(%rsp), %rdi
    00000307: 	cmpq	%rbp, %rdi
    0000030a: 	je	.Ltmp2068 # Offset: 778
    0000030c: 	movq	0x100(%rsp), %rax
    00000314: 	leaq	0x1(%rax), %rsi
    00000318: 	callq	_ZdlPvm@PLT # Offset: 792
.Ltmp2068:
    0000031d: 	movq	0xb0(%rsp), %rsi
    00000325: 	movq	0xb8(%rsp), %rdx
    0000032d: 	leaq	0xd0(%rsp), %rdi
    00000335: 	movq	0x8(%rsp), %rax
    0000033a: 	movq	%rdi, 0x20(%rsp)
    0000033f: 	addq	%rsi, %rdx
    00000342: 	movq	%rax, 0xd0(%rsp)
    0000034a: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 842
    0000034f: 	movabsq	$0x3fffffffffffffff, %rax
    00000359: 	subq	0xd8(%rsp), %rax
    00000361: 	cmpq	$0x11, %rax
    00000365: 	jbe	.Ltmp2069 # Offset: 869
    0000036b: 	movq	0x20(%rsp), %rdi
    00000370: 	movl	$0x12, %edx
    00000375: 	leaq	DATAat0x1716c(%rip), %rsi
    0000037c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 892
    00000381: 	movq	0x78(%rsp), %rdi
    00000386: 	subq	0x70(%rsp), %rdi
    0000038b: 	movq	%rdi, %r14
    0000038e: 	movq	%rdi, 0x28(%rsp)
    00000393: 	callq	clock@PLT # Offset: 915
    00000398: 	movq	0x70(%rsp), %rsi
    0000039d: 	movq	0x28(%rsp), %rdi
    000003a2: 	sarq	$0x3, %r14
    000003a6: 	movq	%rax, start_time(%rip)
    000003ad: 	movl	$0x14, %ecx
    000003b2: 	movq	(%rsi), %rax
    000003b5: 	movq	(%rax), %r8
    000003b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2072:
    000003c0: 	movq	%r8, %rbx
    000003c3: 	cmpq	$0x8, %rdi
    000003c7: 	jbe	.Ltmp2070 # Offset: 967
    000003c9: 	movl	$0x1, %eax
    000003ce: 	nop # Size: 2
.Ltmp2071:
    000003d0: 	movq	(%rsi,%rax,8), %rdx
    000003d4: 	addq	$0x1, %rax
    000003d8: 	addq	(%rdx), %rbx
    000003db: 	cmpq	%rax, %r14
    000003de: 	ja	.Ltmp2071 # Offset: 990
.Ltmp2070:
    000003e0: 	subq	$0x1, %rcx
    000003e4: 	jne	.Ltmp2072 # Offset: 996
    000003e6: 	callq	clock@PLT # Offset: 998
    000003eb: 	movq	0xd0(%rsp), %rsi
    000003f3: 	pxor	%xmm0, %xmm0
    000003f7: 	movq	%r12, %rdi
    000003fa: 	movq	0xd8(%rsp), %rdx
    00000402: 	movq	%rax, end_time(%rip)
    00000409: 	subq	start_time(%rip), %rax
    00000410: 	movq	%rbp, 0xf0(%rsp)
    00000418: 	addq	%rsi, %rdx
    0000041b: 	cvtsi2sd	%rax, %xmm0
    00000420: 	divsd	DATAat0x17370(%rip), %xmm0
    00000428: 	movsd	%xmm0, 0x28(%rsp)
    0000042e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1070
    00000433: 	movsd	0x28(%rsp), %xmm0
    00000439: 	movq	%r12, %rdx
    0000043c: 	movq	%r14, %rsi
    0000043f: 	movl	$0x14, %edi
    00000444: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1092
    00000449: 	movq	0xf0(%rsp), %rdi
    00000451: 	cmpq	%rbp, %rdi
    00000454: 	je	.Ltmp2073 # Offset: 1108
    00000456: 	movq	0x100(%rsp), %rax
    0000045e: 	leaq	0x1(%rax), %rsi
    00000462: 	callq	_ZdlPvm@PLT # Offset: 1122
.Ltmp2073:
    00000467: 	movq	0xd0(%rsp), %rsi
    0000046f: 	movq	0xd8(%rsp), %rdx
    00000477: 	movq	%r12, %rdi
    0000047a: 	movq	%rbp, 0xf0(%rsp)
    00000482: 	addq	%rsi, %rdx
    00000485: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1157
    0000048a: 	movslq	0x18(%rsp), %rax
    0000048f: 	movq	0xf0(%rsp), %rdx
    00000497: 	imulq	%rax, %r14
    0000049b: 	movq	%rax, 0x28(%rsp)
    000004a0: 	cmpq	%rbx, %r14
    000004a3: 	jne	.Ltmp2074 # Offset: 1187
.Ltmp2182:
    000004a9: 	cmpq	%rbp, %rdx
    000004ac: 	je	.Ltmp2075 # Offset: 1196
    000004ae: 	movq	0x100(%rsp), %rax
    000004b6: 	movq	%rdx, %rdi
    000004b9: 	leaq	0x1(%rax), %rsi
    000004bd: 	callq	_ZdlPvm@PLT # Offset: 1213
.Ltmp2075:
    000004c2: 	movq	0xd0(%rsp), %rdi
    000004ca: 	cmpq	0x8(%rsp), %rdi
    000004cf: 	je	.Ltmp2076 # Offset: 1231
    000004d1: 	movq	0xe0(%rsp), %rax
    000004d9: 	leaq	0x1(%rax), %rsi
    000004dd: 	callq	_ZdlPvm@PLT # Offset: 1245
.Ltmp2076:
    000004e2: 	leaq	DATAat0x1717f(%rip), %rdx
    000004e9: 	movq	%r13, %rsi
    000004ec: 	movq	%r12, %rdi
    000004ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1263
    000004f4: 	movq	%r12, %rsi
    000004f7: 	movq	%r15, %rdi
    000004fa: 	callq	_Z13TestNullArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1274
    000004ff: 	movq	0xf0(%rsp), %rdi
    00000507: 	cmpq	%rbp, %rdi
    0000050a: 	je	.Ltmp2077 # Offset: 1290
    0000050c: 	movq	0x100(%rsp), %rax
    00000514: 	leaq	0x1(%rax), %rsi
    00000518: 	callq	_ZdlPvm@PLT # Offset: 1304
.Ltmp2077:
    0000051d: 	movq	0xb0(%rsp), %rbx
    00000525: 	movq	0xb8(%rsp), %r14
    0000052d: 	movq	%rbp, 0xf0(%rsp)
    00000535: 	movq	%rbx, %rax
    00000538: 	addq	%r14, %rax
    0000053b: 	je	.Ltmp2078 # Offset: 1339
    0000053d: 	testq	%rbx, %rbx
    00000540: 	je	.Ltmp2079 # Offset: 1344
.Ltmp2078:
    00000546: 	movq	%r14, 0x48(%rsp)
    0000054b: 	cmpq	$0xf, %r14
    0000054f: 	ja	.Ltmp2080 # Offset: 1359
    00000555: 	cmpq	$0x1, %r14
    00000559: 	jne	.Ltmp2081 # Offset: 1369
    0000055f: 	movzbl	(%rbx), %eax
    00000562: 	movb	%al, 0x100(%rsp)
    00000569: 	movq	%rbp, %rax
.Ltmp2177:
    0000056c: 	movq	%r14, 0xf8(%rsp)
    00000574: 	movb	$0x0, (%rax,%r14)
    00000579: 	movabsq	$0x3fffffffffffffff, %rax
    00000583: 	subq	0xf8(%rsp), %rax
    0000058b: 	cmpq	$0xd, %rax
    0000058f: 	jbe	.Ltmp2082 # Offset: 1423
    00000595: 	movl	$0xe, %edx
    0000059a: 	leaq	DATAat0x17190(%rip), %rsi
    000005a1: 	movq	%r12, %rdi
    000005a4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1444
    000005a9: 	movq	%r12, %rsi
    000005ac: 	movq	%r15, %rdi
    000005af: 	callq	_Z17RandomValuesArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1455
    000005b4: 	movq	0xf0(%rsp), %rdi
    000005bc: 	cmpq	%rbp, %rdi
    000005bf: 	je	.Ltmp2083 # Offset: 1471
    000005c1: 	movq	0x100(%rsp), %rax
    000005c9: 	leaq	0x1(%rax), %rsi
    000005cd: 	callq	_ZdlPvm@PLT # Offset: 1485
.Ltmp2083:
    000005d2: 	leaq	DATAat0x1719f(%rip), %rdx
    000005d9: 	movq	%r13, %rsi
    000005dc: 	movq	%r12, %rdi
    000005df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1503
    000005e4: 	movq	%r12, %rsi
    000005e7: 	movq	%r15, %rdi
    000005ea: 	callq	_Z14QuickSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1514
    000005ef: 	movq	0xf0(%rsp), %rdi
    000005f7: 	cmpq	%rbp, %rdi
    000005fa: 	je	.Ltmp2084 # Offset: 1530
    000005fc: 	movq	0x100(%rsp), %rax
    00000604: 	leaq	0x1(%rax), %rsi
    00000608: 	callq	_ZdlPvm@PLT # Offset: 1544
.Ltmp2084:
    0000060d: 	movl	$0x7b, %edi
    00000612: 	callq	srand@PLT # Offset: 1554
    00000617: 	movq	0x70(%rsp), %rbx
    0000061c: 	cmpq	0x78(%rsp), %rbx
    00000621: 	je	.Ltmp2085 # Offset: 1569
    00000623: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2086:
    00000628: 	callq	rand@PLT # Offset: 1576
    0000062d: 	movq	(%rbx), %rdx
    00000630: 	addq	$0x8, %rbx
    00000634: 	sarl	$0x5, %eax
    00000637: 	movzwl	%ax, %eax
    0000063a: 	movq	%rax, %xmm0
    0000063f: 	movq	%rax, 0x60(%rdx)
    00000643: 	punpcklqdq	%xmm0, %xmm0
    00000647: 	movups	%xmm0, (%rdx)
    0000064a: 	movups	%xmm0, 0x10(%rdx)
    0000064e: 	movups	%xmm0, 0x20(%rdx)
    00000652: 	movups	%xmm0, 0x30(%rdx)
    00000656: 	movups	%xmm0, 0x40(%rdx)
    0000065a: 	movups	%xmm0, 0x50(%rdx)
    0000065e: 	cmpq	%rbx, 0x78(%rsp)
    00000663: 	jne	.Ltmp2086 # Offset: 1635
.Ltmp2085:
    00000665: 	movq	0xb0(%rsp), %rsi
    0000066d: 	movq	0xb8(%rsp), %rdx
    00000675: 	movq	%r12, %rdi
    00000678: 	movq	%rbp, 0xf0(%rsp)
    00000680: 	addq	%rsi, %rdx
    00000683: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 1667
    00000688: 	movabsq	$0x3fffffffffffffff, %rax
    00000692: 	subq	0xf8(%rsp), %rax
    0000069a: 	cmpq	$0xf, %rax
    0000069e: 	jbe	.Ltmp2087 # Offset: 1694
    000006a4: 	movl	$0x10, %edx
    000006a9: 	leaq	DATAat0x171b0(%rip), %rsi
    000006b0: 	movq	%r12, %rdi
    000006b3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1715
    000006b8: 	movq	%r12, %rsi
    000006bb: 	movq	%r15, %rdi
    000006be: 	callq	_Z12StdSortArrayIP17VariableContainerIlLi13EEEvRSt6vectorIT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1726
    000006c3: 	movq	0xf0(%rsp), %rdi
    000006cb: 	cmpq	%rbp, %rdi
    000006ce: 	je	.Ltmp2088 # Offset: 1742
    000006d0: 	movq	0x100(%rsp), %rax
    000006d8: 	leaq	0x1(%rax), %rsi
    000006dc: 	callq	_ZdlPvm@PLT # Offset: 1756
.Ltmp2088:
    000006e1: 	movq	0xb0(%rsp), %rbx
    000006e9: 	movq	0xb8(%rsp), %r14
    000006f1: 	movq	%rbp, 0xf0(%rsp)
    000006f9: 	movq	%rbx, %rax
    000006fc: 	addq	%r14, %rax
    000006ff: 	je	.Ltmp2089 # Offset: 1791
    00000701: 	testq	%rbx, %rbx
    00000704: 	je	.Ltmp2090 # Offset: 1796
.Ltmp2089:
    0000070a: 	movq	%r14, 0x48(%rsp)
    0000070f: 	cmpq	$0xf, %r14
    00000713: 	ja	.Ltmp2091 # Offset: 1811
    00000719: 	cmpq	$0x1, %r14
    0000071d: 	jne	.Ltmp2092 # Offset: 1821
    00000723: 	movzbl	(%rbx), %eax
    00000726: 	movb	%al, 0x100(%rsp)
    0000072d: 	movq	%rbp, %rax
.Ltmp2186:
    00000730: 	movq	%r14, 0xf8(%rsp)
    00000738: 	movb	$0x0, (%rax,%r14)
    0000073d: 	movabsq	$0x3fffffffffffffff, %rax
    00000747: 	subq	0xf8(%rsp), %rax
    0000074f: 	cmpq	$0x12, %rax
    00000753: 	jbe	.Ltmp2093 # Offset: 1875
    00000759: 	movl	$0x13, %edx
    0000075e: 	leaq	DATAat0x171d9(%rip), %rsi
    00000765: 	movq	%r12, %rdi
    00000768: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 1896
    0000076d: 	movq	%r12, %rsi
    00000770: 	movq	%r15, %rdi
    00000773: 	callq	_Z9FreeArrayI17VariableContainerIlLi13EEEvRSt6vectorIPT_SaIS4_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1907
    00000778: 	movq	0xf0(%rsp), %rdi
    00000780: 	cmpq	%rbp, %rdi
    00000783: 	je	.Ltmp2094 # Offset: 1923
    00000785: 	movq	0x100(%rsp), %rax
    0000078d: 	leaq	0x1(%rax), %rsi
    00000791: 	callq	_ZdlPvm@PLT # Offset: 1937
.Ltmp2094:
    00000796: 	leaq	DATAat0x171ed(%rip), %rdx
    0000079d: 	movq	%r13, %rsi
    000007a0: 	movq	%r12, %rdi
    000007a3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1955
    000007a8: 	movq	%r12, %rdi
    000007ab: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 1963
    000007b0: 	movq	0xf0(%rsp), %rdi
    000007b8: 	cmpq	%rbp, %rdi
    000007bb: 	je	.Ltmp2095 # Offset: 1979
    000007bd: 	movq	0x100(%rsp), %rax
    000007c5: 	leaq	0x1(%rax), %rsi
    000007c9: 	callq	_ZdlPvm@PLT # Offset: 1993
.Ltmp2095:
    000007ce: 	movq	0x70(%rsp), %rdi
    000007d3: 	testq	%rdi, %rdi
    000007d6: 	je	.Ltmp2096 # Offset: 2006
    000007d8: 	movq	0x80(%rsp), %rsi
    000007e0: 	subq	%rdi, %rsi
    000007e3: 	callq	_ZdlPvm@PLT # Offset: 2019
.Ltmp2096:
    000007e8: 	movq	0x50(%rsp), %rdi
    000007ed: 	testq	%rdi, %rdi
    000007f0: 	je	.Ltmp2097 # Offset: 2032
    000007f2: 	movq	0x60(%rsp), %rsi
    000007f7: 	subq	%rdi, %rsi
    000007fa: 	callq	_ZdlPvm@PLT # Offset: 2042
.Ltmp2097:
    000007ff: 	movq	0xb0(%rsp), %rdi
    00000807: 	cmpq	(%rsp), %rdi
    0000080b: 	je	.Ltmp2098 # Offset: 2059
    0000080d: 	movq	0xc0(%rsp), %rax
    00000815: 	leaq	0x1(%rax), %rsi
    00000819: 	callq	_ZdlPvm@PLT # Offset: 2073
.Ltmp2098:
    0000081e: 	movq	0x90(%rsp), %rsi
    00000826: 	movq	0x98(%rsp), %rdx
    0000082e: 	movq	%r13, %rdi
    00000831: 	movq	(%rsp), %rax
    00000835: 	addq	%rsi, %rdx
    00000838: 	movq	%rax, 0xb0(%rsp)
    00000840: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2112
    00000845: 	movabsq	$0x3fffffffffffffff, %rax
    0000084f: 	subq	0xb8(%rsp), %rax
    00000857: 	cmpq	$0xb, %rax
    0000085b: 	jbe	.Ltmp2099 # Offset: 2139
    00000861: 	movl	$0xc, %edx
    00000866: 	leaq	DATAat0x17208(%rip), %rsi
    0000086d: 	movq	%r13, %rdi
    00000870: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2160
    00000875: 	movq	0xb0(%rsp), %rsi
    0000087d: 	movq	0xb8(%rsp), %rdx
    00000885: 	movq	%r12, %rdi
    00000888: 	movq	%rbp, 0xf0(%rsp)
    00000890: 	addq	%rsi, %rdx
    00000893: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2195
    00000898: 	movabsq	$0x3fffffffffffffff, %rax
    000008a2: 	subq	0xf8(%rsp), %rax
    000008aa: 	cmpq	$0xc, %rax
    000008ae: 	jbe	.Ltmp2100 # Offset: 2222
    000008b4: 	movl	$0xd, %edx
    000008b9: 	leaq	DATAat0x17152(%rip), %rsi
    000008c0: 	movq	%r12, %rdi
    000008c3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2243
    000008c8: 	movl	0x18(%rsp), %edx
    000008cc: 	movl	0x1c(%rsp), %esi
    000008d0: 	movq	%r12, %rcx
    000008d3: 	movq	0x10(%rsp), %rdi
    000008d8: 	callq	_Z11CreateArrayI17VariableContainerIlLi13EE14PointerWrapperIS1_EESt6vectorIT0_SaIS5_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2264
    000008dd: 	movq	0xf0(%rsp), %rdi
    000008e5: 	cmpq	%rbp, %rdi
    000008e8: 	je	.Ltmp2101 # Offset: 2280
    000008ea: 	movq	0x100(%rsp), %rax
    000008f2: 	leaq	0x1(%rax), %rsi
    000008f6: 	callq	_ZdlPvm@PLT # Offset: 2294
.Ltmp2101:
    000008fb: 	leaq	DATAat0x17160(%rip), %rdx
    00000902: 	movq	%r13, %rsi
    00000905: 	movq	%r12, %rdi
    00000908: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2312
    0000090d: 	movq	0x10(%rsp), %rsi
    00000912: 	movq	%r12, %rdx
    00000915: 	movq	%r15, %rdi
    00000918: 	callq	_Z9CopyArrayI14PointerWrapperI17VariableContainerIlLi13EEEESt6vectorIT_SaIS5_EERS7_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2328
    0000091d: 	movq	0xf0(%rsp), %rdi
    00000925: 	cmpq	%rbp, %rdi
    00000928: 	je	.Ltmp2102 # Offset: 2344
    0000092a: 	movq	0x100(%rsp), %rax
    00000932: 	leaq	0x1(%rax), %rsi
    00000936: 	callq	_ZdlPvm@PLT # Offset: 2358
.Ltmp2102:
    0000093b: 	movq	0x20(%rsp), %rdi
    00000940: 	leaq	DATAat0x1716c(%rip), %rdx
    00000947: 	movq	%r13, %rsi
    0000094a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2378
    0000094f: 	movq	0x78(%rsp), %rdi
    00000954: 	subq	0x70(%rsp), %rdi
    00000959: 	movq	%rdi, %r14
    0000095c: 	movq	%rdi, 0x38(%rsp)
    00000961: 	callq	clock@PLT # Offset: 2401
    00000966: 	movq	0x70(%rsp), %rsi
    0000096b: 	movq	0x38(%rsp), %rdi
    00000970: 	sarq	$0x3, %r14
    00000974: 	movq	%rax, start_time(%rip)
    0000097b: 	movl	$0x14, %ecx
    00000980: 	movq	(%rsi), %rax
    00000983: 	movq	(%rax), %r8
    00000986: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2105:
    00000990: 	movq	%r8, %rbx
    00000993: 	cmpq	$0x8, %rdi
    00000997: 	jbe	.Ltmp2103 # Offset: 2455
    00000999: 	movl	$0x1, %eax
    0000099e: 	nop # Size: 2
.Ltmp2104:
    000009a0: 	movq	(%rsi,%rax,8), %rdx
    000009a4: 	addq	$0x1, %rax
    000009a8: 	addq	(%rdx), %rbx
    000009ab: 	cmpq	%rax, %r14
    000009ae: 	ja	.Ltmp2104 # Offset: 2478
.Ltmp2103:
    000009b0: 	subq	$0x1, %rcx
    000009b4: 	jne	.Ltmp2105 # Offset: 2484
    000009b6: 	callq	clock@PLT # Offset: 2486
    000009bb: 	movq	0xd0(%rsp), %rsi
    000009c3: 	pxor	%xmm0, %xmm0
    000009c7: 	movq	%r12, %rdi
    000009ca: 	movq	0xd8(%rsp), %rdx
    000009d2: 	movq	%rax, end_time(%rip)
    000009d9: 	subq	start_time(%rip), %rax
    000009e0: 	movq	%rbp, 0xf0(%rsp)
    000009e8: 	addq	%rsi, %rdx
    000009eb: 	cvtsi2sd	%rax, %xmm0
    000009f0: 	divsd	DATAat0x17370(%rip), %xmm0
    000009f8: 	movsd	%xmm0, 0x38(%rsp)
    000009fe: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2558
    00000a03: 	movsd	0x38(%rsp), %xmm0
    00000a09: 	movq	%r12, %rdx
    00000a0c: 	movq	%r14, %rsi
    00000a0f: 	movl	$0x14, %edi
    00000a14: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2580
    00000a19: 	movq	0xf0(%rsp), %rdi
    00000a21: 	cmpq	%rbp, %rdi
    00000a24: 	je	.Ltmp2106 # Offset: 2596
    00000a26: 	movq	0x100(%rsp), %rax
    00000a2e: 	leaq	0x1(%rax), %rsi
    00000a32: 	callq	_ZdlPvm@PLT # Offset: 2610
.Ltmp2106:
    00000a37: 	movq	0xd0(%rsp), %rsi
    00000a3f: 	movq	0xd8(%rsp), %rdx
    00000a47: 	movq	%r12, %rdi
    00000a4a: 	movq	%rbp, 0xf0(%rsp)
    00000a52: 	addq	%rsi, %rdx
    00000a55: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 2645
    00000a5a: 	imulq	0x28(%rsp), %r14
    00000a60: 	movq	0xf0(%rsp), %rdx
    00000a68: 	cmpq	%rbx, %r14
    00000a6b: 	je	.Ltmp2107 # Offset: 2667
    00000a6d: 	leaq	DATAat0x1710f(%rip), %rsi
    00000a74: 	movl	$0x1, %edi
    00000a79: 	xorl	%eax, %eax
    00000a7b: 	callq	__printf_chk@PLT # Offset: 2683
    00000a80: 	movq	0xf0(%rsp), %rdx
.Ltmp2107:
    00000a88: 	cmpq	%rbp, %rdx
    00000a8b: 	je	.Ltmp2108 # Offset: 2699
    00000a8d: 	movq	0x100(%rsp), %rax
    00000a95: 	movq	%rdx, %rdi
    00000a98: 	leaq	0x1(%rax), %rsi
    00000a9c: 	callq	_ZdlPvm@PLT # Offset: 2716
.Ltmp2108:
    00000aa1: 	movq	0xd0(%rsp), %rdi
    00000aa9: 	cmpq	0x8(%rsp), %rdi
    00000aae: 	je	.Ltmp2109 # Offset: 2734
    00000ab0: 	movq	0xe0(%rsp), %rax
    00000ab8: 	leaq	0x1(%rax), %rsi
    00000abc: 	callq	_ZdlPvm@PLT # Offset: 2748
.Ltmp2109:
    00000ac1: 	movq	0xb0(%rsp), %rbx
    00000ac9: 	movq	0xb8(%rsp), %r14
    00000ad1: 	movq	%rbp, 0xf0(%rsp)
    00000ad9: 	movq	%rbx, %rax
    00000adc: 	addq	%r14, %rax
    00000adf: 	je	.Ltmp2110 # Offset: 2783
    00000ae1: 	testq	%rbx, %rbx
    00000ae4: 	je	.Ltmp2111 # Offset: 2788
.Ltmp2110:
    00000aea: 	movq	%r14, 0x48(%rsp)
    00000aef: 	cmpq	$0xf, %r14
    00000af3: 	ja	.Ltmp2112 # Offset: 2803
    00000af9: 	cmpq	$0x1, %r14
    00000afd: 	jne	.Ltmp2113 # Offset: 2813
    00000b03: 	movzbl	(%rbx), %eax
    00000b06: 	movb	%al, 0x100(%rsp)
    00000b0d: 	movq	%rbp, %rax
.Ltmp2184:
    00000b10: 	movq	%r14, 0xf8(%rsp)
    00000b18: 	movb	$0x0, (%rax,%r14)
    00000b1d: 	movabsq	$0x3fffffffffffffff, %rax
    00000b27: 	subq	0xf8(%rsp), %rax
    00000b2f: 	cmpq	$0xf, %rax
    00000b33: 	jbe	.Ltmp2114 # Offset: 2867
    00000b39: 	movl	$0x10, %edx
    00000b3e: 	leaq	DATAat0x1717f(%rip), %rsi
    00000b45: 	movq	%r12, %rdi
    00000b48: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 2888
    00000b4d: 	movq	%r12, %rsi
    00000b50: 	movq	%r15, %rdi
    00000b53: 	callq	_Z13TestNullArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 2899
    00000b58: 	movq	0xf0(%rsp), %rdi
    00000b60: 	cmpq	%rbp, %rdi
    00000b63: 	je	.Ltmp2115 # Offset: 2915
    00000b65: 	movq	0x100(%rsp), %rax
    00000b6d: 	leaq	0x1(%rax), %rsi
    00000b71: 	callq	_ZdlPvm@PLT # Offset: 2929
.Ltmp2115:
    00000b76: 	movq	0xb0(%rsp), %rbx
    00000b7e: 	movq	0xb8(%rsp), %r14
    00000b86: 	movq	%rbp, 0xf0(%rsp)
    00000b8e: 	movq	%rbx, %rax
    00000b91: 	addq	%r14, %rax
    00000b94: 	je	.Ltmp2116 # Offset: 2964
    00000b96: 	testq	%rbx, %rbx
    00000b99: 	je	.Ltmp2117 # Offset: 2969
.Ltmp2116:
    00000b9f: 	movq	%r14, 0x48(%rsp)
    00000ba4: 	cmpq	$0xf, %r14
    00000ba8: 	ja	.Ltmp2118 # Offset: 2984
    00000bae: 	cmpq	$0x1, %r14
    00000bb2: 	jne	.Ltmp2119 # Offset: 2994
    00000bb8: 	movzbl	(%rbx), %eax
    00000bbb: 	movb	%al, 0x100(%rsp)
    00000bc2: 	movq	%rbp, %rax
.Ltmp2189:
    00000bc5: 	movq	%r14, 0xf8(%rsp)
    00000bcd: 	movb	$0x0, (%rax,%r14)
    00000bd2: 	movabsq	$0x3fffffffffffffff, %rax
    00000bdc: 	subq	0xf8(%rsp), %rax
    00000be4: 	cmpq	$0xd, %rax
    00000be8: 	jbe	.Ltmp2120 # Offset: 3048
    00000bee: 	movl	$0xe, %edx
    00000bf3: 	leaq	DATAat0x17190(%rip), %rsi
    00000bfa: 	movq	%r12, %rdi
    00000bfd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3069
    00000c02: 	movq	%r12, %rsi
    00000c05: 	movq	%r15, %rdi
    00000c08: 	callq	_Z17RandomValuesArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3080
    00000c0d: 	movq	0xf0(%rsp), %rdi
    00000c15: 	cmpq	%rbp, %rdi
    00000c18: 	je	.Ltmp2121 # Offset: 3096
    00000c1a: 	movq	0x100(%rsp), %rax
    00000c22: 	leaq	0x1(%rax), %rsi
    00000c26: 	callq	_ZdlPvm@PLT # Offset: 3110
.Ltmp2121:
    00000c2b: 	leaq	DATAat0x1719f(%rip), %rdx
    00000c32: 	movq	%r13, %rsi
    00000c35: 	movq	%r12, %rdi
    00000c38: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3128
    00000c3d: 	movq	%r12, %rsi
    00000c40: 	movq	%r15, %rdi
    00000c43: 	callq	_Z14QuickSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3139
    00000c48: 	movq	0xf0(%rsp), %rdi
    00000c50: 	cmpq	%rbp, %rdi
    00000c53: 	je	.Ltmp2122 # Offset: 3155
    00000c55: 	movq	0x100(%rsp), %rax
    00000c5d: 	leaq	0x1(%rax), %rsi
    00000c61: 	callq	_ZdlPvm@PLT # Offset: 3169
.Ltmp2122:
    00000c66: 	movl	$0x7b, %edi
    00000c6b: 	callq	srand@PLT # Offset: 3179
    00000c70: 	movq	0x70(%rsp), %rbx
    00000c75: 	cmpq	0x78(%rsp), %rbx
    00000c7a: 	je	.Ltmp2123 # Offset: 3194
    00000c7c: 	nopl	(%rax) # Size: 4
.Ltmp2124:
    00000c80: 	callq	rand@PLT # Offset: 3200
    00000c85: 	movq	(%rbx), %rdx
    00000c88: 	addq	$0x8, %rbx
    00000c8c: 	sarl	$0x5, %eax
    00000c8f: 	movzwl	%ax, %eax
    00000c92: 	movq	%rax, %xmm0
    00000c97: 	movq	%rax, 0x60(%rdx)
    00000c9b: 	punpcklqdq	%xmm0, %xmm0
    00000c9f: 	movups	%xmm0, (%rdx)
    00000ca2: 	movups	%xmm0, 0x10(%rdx)
    00000ca6: 	movups	%xmm0, 0x20(%rdx)
    00000caa: 	movups	%xmm0, 0x30(%rdx)
    00000cae: 	movups	%xmm0, 0x40(%rdx)
    00000cb2: 	movups	%xmm0, 0x50(%rdx)
    00000cb6: 	cmpq	%rbx, 0x78(%rsp)
    00000cbb: 	jne	.Ltmp2124 # Offset: 3259
.Ltmp2123:
    00000cbd: 	movq	0xb0(%rsp), %rsi
    00000cc5: 	movq	0xb8(%rsp), %rdx
    00000ccd: 	movq	%r12, %rdi
    00000cd0: 	movq	%rbp, 0xf0(%rsp)
    00000cd8: 	addq	%rsi, %rdx
    00000cdb: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3291
    00000ce0: 	movabsq	$0x3fffffffffffffff, %rax
    00000cea: 	subq	0xf8(%rsp), %rax
    00000cf2: 	cmpq	$0xf, %rax
    00000cf6: 	jbe	.Ltmp2125 # Offset: 3318
    00000cfc: 	movl	$0x10, %edx
    00000d01: 	leaq	DATAat0x171b0(%rip), %rsi
    00000d08: 	movq	%r12, %rdi
    00000d0b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3339
    00000d10: 	movq	%r12, %rsi
    00000d13: 	movq	%r15, %rdi
    00000d16: 	callq	_Z12StdSortArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3350
    00000d1b: 	movq	0xf0(%rsp), %rdi
    00000d23: 	cmpq	%rbp, %rdi
    00000d26: 	je	.Ltmp2126 # Offset: 3366
    00000d28: 	movq	0x100(%rsp), %rax
    00000d30: 	leaq	0x1(%rax), %rsi
    00000d34: 	callq	_ZdlPvm@PLT # Offset: 3380
.Ltmp2126:
    00000d39: 	leaq	DATAat0x171d9(%rip), %rdx
    00000d40: 	movq	%r13, %rsi
    00000d43: 	movq	%r12, %rdi
    00000d46: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3398
    00000d4b: 	movq	%r12, %rsi
    00000d4e: 	movq	%r15, %rdi
    00000d51: 	callq	_Z9FreeArrayI14PointerWrapperI17VariableContainerIlLi13EEEEvRSt6vectorIT_SaIS5_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3409
    00000d56: 	movq	0xf0(%rsp), %rdi
    00000d5e: 	cmpq	%rbp, %rdi
    00000d61: 	je	.Ltmp2127 # Offset: 3425
    00000d63: 	movq	0x100(%rsp), %rax
    00000d6b: 	leaq	0x1(%rax), %rsi
    00000d6f: 	callq	_ZdlPvm@PLT # Offset: 3439
.Ltmp2127:
    00000d74: 	leaq	DATAat0x171ed(%rip), %rdx
    00000d7b: 	movq	%r13, %rsi
    00000d7e: 	movq	%r12, %rdi
    00000d81: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3457
    00000d86: 	movq	%r12, %rdi
    00000d89: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3465
    00000d8e: 	movq	0xf0(%rsp), %rdi
    00000d96: 	cmpq	%rbp, %rdi
    00000d99: 	je	.Ltmp2128 # Offset: 3481
    00000d9b: 	movq	0x100(%rsp), %rax
    00000da3: 	leaq	0x1(%rax), %rsi
    00000da7: 	callq	_ZdlPvm@PLT # Offset: 3495
.Ltmp2128:
    00000dac: 	movq	0x70(%rsp), %rdi
    00000db1: 	testq	%rdi, %rdi
    00000db4: 	je	.Ltmp2129 # Offset: 3508
    00000db6: 	movq	0x80(%rsp), %rsi
    00000dbe: 	subq	%rdi, %rsi
    00000dc1: 	callq	_ZdlPvm@PLT # Offset: 3521
.Ltmp2129:
    00000dc6: 	movq	0x50(%rsp), %rdi
    00000dcb: 	testq	%rdi, %rdi
    00000dce: 	je	.Ltmp2130 # Offset: 3534
    00000dd0: 	movq	0x60(%rsp), %rsi
    00000dd5: 	subq	%rdi, %rsi
    00000dd8: 	callq	_ZdlPvm@PLT # Offset: 3544
.Ltmp2130:
    00000ddd: 	movq	0xb0(%rsp), %rdi
    00000de5: 	cmpq	(%rsp), %rdi
    00000de9: 	je	.Ltmp2131 # Offset: 3561
    00000deb: 	movq	0xc0(%rsp), %rax
    00000df3: 	leaq	0x1(%rax), %rsi
    00000df7: 	callq	_ZdlPvm@PLT # Offset: 3575
.Ltmp2131:
    00000dfc: 	movq	0x90(%rsp), %rsi
    00000e04: 	movq	0x98(%rsp), %rdx
    00000e0c: 	movq	%r13, %rdi
    00000e0f: 	movq	(%rsp), %rax
    00000e13: 	addq	%rsi, %rdx
    00000e16: 	movq	%rax, 0xb0(%rsp)
    00000e1e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3614
    00000e23: 	movabsq	$0x3fffffffffffffff, %rax
    00000e2d: 	subq	0xb8(%rsp), %rax
    00000e35: 	cmpq	$0xa, %rax
    00000e39: 	jbe	.Ltmp2132 # Offset: 3641
    00000e3f: 	movl	$0xb, %edx
    00000e44: 	leaq	DATAat0x17215(%rip), %rsi
    00000e4b: 	movq	%r13, %rdi
    00000e4e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3662
    00000e53: 	movq	0xb0(%rsp), %rsi
    00000e5b: 	movq	0xb8(%rsp), %rdx
    00000e63: 	movq	%r12, %rdi
    00000e66: 	movq	%rbp, 0xf0(%rsp)
    00000e6e: 	addq	%rsi, %rdx
    00000e71: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 3697
    00000e76: 	movabsq	$0x3fffffffffffffff, %rax
    00000e80: 	subq	0xf8(%rsp), %rax
    00000e88: 	cmpq	$0xc, %rax
    00000e8c: 	jbe	.Ltmp2133 # Offset: 3724
    00000e92: 	movl	$0xd, %edx
    00000e97: 	leaq	DATAat0x17152(%rip), %rsi
    00000e9e: 	movq	%r12, %rdi
    00000ea1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3745
    00000ea6: 	movl	0x18(%rsp), %edx
    00000eaa: 	movl	0x1c(%rsp), %esi
    00000eae: 	movq	%r12, %rcx
    00000eb1: 	movq	0x10(%rsp), %rdi
    00000eb6: 	callq	_Z11CreateArrayI17VariableContainerIlLi13EESt10unique_ptrIS1_St14default_deleteIS1_EEESt6vectorIT0_SaIS7_EEiiNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3766
    00000ebb: 	movq	0xf0(%rsp), %rdi
    00000ec3: 	cmpq	%rbp, %rdi
    00000ec6: 	je	.Ltmp2134 # Offset: 3782
    00000ec8: 	movq	0x100(%rsp), %rax
    00000ed0: 	leaq	0x1(%rax), %rsi
    00000ed4: 	callq	_ZdlPvm@PLT # Offset: 3796
.Ltmp2134:
    00000ed9: 	movq	0xb0(%rsp), %rbx
    00000ee1: 	movq	0xb8(%rsp), %r14
    00000ee9: 	movq	%rbp, 0xf0(%rsp)
    00000ef1: 	movq	%rbx, %rax
    00000ef4: 	addq	%r14, %rax
    00000ef7: 	je	.Ltmp2135 # Offset: 3831
    00000ef9: 	testq	%rbx, %rbx
    00000efc: 	je	.Ltmp2136 # Offset: 3836
.Ltmp2135:
    00000f02: 	movq	%r14, 0x70(%rsp)
    00000f07: 	cmpq	$0xf, %r14
    00000f0b: 	ja	.Ltmp2137 # Offset: 3851
    00000f11: 	cmpq	$0x1, %r14
    00000f15: 	jne	.Ltmp2138 # Offset: 3861
    00000f1b: 	movzbl	(%rbx), %eax
    00000f1e: 	movb	%al, 0x100(%rsp)
    00000f25: 	movq	%rbp, %rax
.Ltmp2187:
    00000f28: 	movq	%r14, 0xf8(%rsp)
    00000f30: 	movb	$0x0, (%rax,%r14)
    00000f35: 	movabsq	$0x3fffffffffffffff, %rax
    00000f3f: 	subq	0xf8(%rsp), %rax
    00000f47: 	cmpq	$0xa, %rax
    00000f4b: 	jbe	.Ltmp2139 # Offset: 3915
    00000f51: 	movl	$0xb, %edx
    00000f56: 	leaq	DATAat0x17160(%rip), %rsi
    00000f5d: 	movq	%r12, %rdi
    00000f60: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 3936
    00000f65: 	movq	0x10(%rsp), %rsi
    00000f6a: 	movq	%r12, %rdx
    00000f6d: 	movq	%r15, %rdi
    00000f70: 	callq	_Z9CopyArrayI17VariableContainerIlLi13EEESt6vectorISt10unique_ptrIT_St14default_deleteIS4_EESaIS7_EERS9_NSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 3952
    00000f75: 	movq	0xf0(%rsp), %rdi
    00000f7d: 	cmpq	%rbp, %rdi
    00000f80: 	je	.Ltmp2140 # Offset: 3968
    00000f82: 	movq	0x100(%rsp), %rax
    00000f8a: 	leaq	0x1(%rax), %rsi
    00000f8e: 	callq	_ZdlPvm@PLT # Offset: 3982
.Ltmp2140:
    00000f93: 	movq	0x20(%rsp), %rdi
    00000f98: 	leaq	DATAat0x1716c(%rip), %rdx
    00000f9f: 	movq	%r13, %rsi
    00000fa2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4002
    00000fa7: 	movq	0x78(%rsp), %rdi
    00000fac: 	subq	0x70(%rsp), %rdi
    00000fb1: 	movq	%rdi, %r14
    00000fb4: 	movq	%rdi, 0x20(%rsp)
    00000fb9: 	callq	clock@PLT # Offset: 4025
    00000fbe: 	movq	0x70(%rsp), %rsi
    00000fc3: 	movq	0x20(%rsp), %rdi
    00000fc8: 	sarq	$0x3, %r14
    00000fcc: 	movq	%rax, start_time(%rip)
    00000fd3: 	movl	$0x14, %ecx
    00000fd8: 	movq	(%rsi), %rax
    00000fdb: 	movq	(%rax), %r8
    00000fde: 	nop # Size: 2
.Ltmp2143:
    00000fe0: 	movq	%r8, %rbx
    00000fe3: 	cmpq	$0x8, %rdi
    00000fe7: 	jbe	.Ltmp2141 # Offset: 4071
    00000fe9: 	movl	$0x1, %eax
    00000fee: 	nop # Size: 2
.Ltmp2142:
    00000ff0: 	movq	(%rsi,%rax,8), %rdx
    00000ff4: 	addq	$0x1, %rax
    00000ff8: 	addq	(%rdx), %rbx
    00000ffb: 	cmpq	%rax, %r14
    00000ffe: 	ja	.Ltmp2142 # Offset: 4094
.Ltmp2141:
    00001000: 	subq	$0x1, %rcx
    00001004: 	jne	.Ltmp2143 # Offset: 4100
    00001006: 	callq	clock@PLT # Offset: 4102
    0000100b: 	movq	0xd0(%rsp), %rsi
    00001013: 	pxor	%xmm0, %xmm0
    00001017: 	movq	%r12, %rdi
    0000101a: 	movq	0xd8(%rsp), %rdx
    00001022: 	movq	%rax, end_time(%rip)
    00001029: 	subq	start_time(%rip), %rax
    00001030: 	movq	%rbp, 0xf0(%rsp)
    00001038: 	addq	%rsi, %rdx
    0000103b: 	cvtsi2sd	%rax, %xmm0
    00001040: 	divsd	DATAat0x17370(%rip), %xmm0
    00001048: 	movsd	%xmm0, 0x20(%rsp)
    0000104e: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4174
    00001053: 	movsd	0x20(%rsp), %xmm0
    00001059: 	movq	%r12, %rdx
    0000105c: 	movq	%r14, %rsi
    0000105f: 	movl	$0x14, %edi
    00001064: 	callq	_Z13record_resultdmmNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4196
    00001069: 	movq	0xf0(%rsp), %rdi
    00001071: 	cmpq	%rbp, %rdi
    00001074: 	je	.Ltmp2144 # Offset: 4212
    00001076: 	movq	0x100(%rsp), %rax
    0000107e: 	leaq	0x1(%rax), %rsi
    00001082: 	callq	_ZdlPvm@PLT # Offset: 4226
.Ltmp2144:
    00001087: 	movq	0xd0(%rsp), %rsi
    0000108f: 	movq	0xd8(%rsp), %rdx
    00001097: 	movq	%r12, %rdi
    0000109a: 	movq	%rbp, 0xf0(%rsp)
    000010a2: 	addq	%rsi, %rdx
    000010a5: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4261
    000010aa: 	movq	0x28(%rsp), %rax
    000010af: 	movq	0xf0(%rsp), %rdx
    000010b7: 	imulq	%r14, %rax
    000010bb: 	cmpq	%rbx, %rax
    000010be: 	je	.Ltmp2145 # Offset: 4286
    000010c0: 	leaq	DATAat0x1710f(%rip), %rsi
    000010c7: 	movl	$0x1, %edi
    000010cc: 	xorl	%eax, %eax
    000010ce: 	callq	__printf_chk@PLT # Offset: 4302
    000010d3: 	movq	0xf0(%rsp), %rdx
.Ltmp2145:
    000010db: 	cmpq	%rbp, %rdx
    000010de: 	je	.Ltmp2146 # Offset: 4318
    000010e0: 	movq	0x100(%rsp), %rax
    000010e8: 	movq	%rdx, %rdi
    000010eb: 	leaq	0x1(%rax), %rsi
    000010ef: 	callq	_ZdlPvm@PLT # Offset: 4335
.Ltmp2146:
    000010f4: 	movq	0xd0(%rsp), %rdi
    000010fc: 	cmpq	0x8(%rsp), %rdi
    00001101: 	je	.Ltmp2147 # Offset: 4353
    00001103: 	movq	0xe0(%rsp), %rax
    0000110b: 	leaq	0x1(%rax), %rsi
    0000110f: 	callq	_ZdlPvm@PLT # Offset: 4367
.Ltmp2147:
    00001114: 	movq	0xb0(%rsp), %rsi
    0000111c: 	movq	0xb8(%rsp), %rdx
    00001124: 	movq	%r12, %rdi
    00001127: 	movq	%rbp, 0xf0(%rsp)
    0000112f: 	addq	%rsi, %rdx
    00001132: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 4402
    00001137: 	movabsq	$0x3fffffffffffffff, %rax
    00001141: 	subq	0xf8(%rsp), %rax
    00001149: 	cmpq	$0xf, %rax
    0000114d: 	jbe	.Ltmp2148 # Offset: 4429
    00001153: 	movl	$0x10, %edx
    00001158: 	leaq	DATAat0x1717f(%rip), %rsi
    0000115f: 	movq	%r12, %rdi
    00001162: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4450
    00001167: 	movq	%r12, %rsi
    0000116a: 	movq	%r15, %rdi
    0000116d: 	callq	_Z13TestNullArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4461
    00001172: 	movq	0xf0(%rsp), %rdi
    0000117a: 	cmpq	%rbp, %rdi
    0000117d: 	je	.Ltmp2149 # Offset: 4477
    0000117f: 	movq	0x100(%rsp), %rax
    00001187: 	leaq	0x1(%rax), %rsi
    0000118b: 	callq	_ZdlPvm@PLT # Offset: 4491
.Ltmp2149:
    00001190: 	leaq	DATAat0x17190(%rip), %rdx
    00001197: 	movq	%r13, %rsi
    0000119a: 	movq	%r12, %rdi
    0000119d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4509
    000011a2: 	movq	%r12, %rsi
    000011a5: 	movq	%r15, %rdi
    000011a8: 	callq	_Z17RandomValuesArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4520
    000011ad: 	movq	0xf0(%rsp), %rdi
    000011b5: 	cmpq	%rbp, %rdi
    000011b8: 	je	.Ltmp2150 # Offset: 4536
    000011ba: 	movq	0x100(%rsp), %rax
    000011c2: 	leaq	0x1(%rax), %rsi
    000011c6: 	callq	_ZdlPvm@PLT # Offset: 4550
.Ltmp2150:
    000011cb: 	movq	0xb0(%rsp), %rbx
    000011d3: 	movq	0xb8(%rsp), %r14
    000011db: 	movq	%rbp, 0xf0(%rsp)
    000011e3: 	movq	%rbx, %rax
    000011e6: 	addq	%r14, %rax
    000011e9: 	je	.Ltmp2151 # Offset: 4585
    000011eb: 	testq	%rbx, %rbx
    000011ee: 	je	.Ltmp2152 # Offset: 4590
.Ltmp2151:
    000011f4: 	movq	%r14, 0x48(%rsp)
    000011f9: 	cmpq	$0xf, %r14
    000011fd: 	ja	.Ltmp2153 # Offset: 4605
    00001203: 	cmpq	$0x1, %r14
    00001207: 	jne	.Ltmp2154 # Offset: 4615
    0000120d: 	movzbl	(%rbx), %eax
    00001210: 	movb	%al, 0x100(%rsp)
    00001217: 	movq	%rbp, %rax
.Ltmp2191:
    0000121a: 	movq	%r14, 0xf8(%rsp)
    00001222: 	movb	$0x0, (%rax,%r14)
    00001227: 	movabsq	$0x3fffffffffffffff, %rax
    00001231: 	subq	0xf8(%rsp), %rax
    00001239: 	cmpq	$0xf, %rax
    0000123d: 	jbe	.Ltmp2155 # Offset: 4669
    00001243: 	movl	$0x10, %edx
    00001248: 	leaq	DATAat0x1719f(%rip), %rsi
    0000124f: 	movq	%r12, %rdi
    00001252: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 4690
    00001257: 	movq	%r12, %rsi
    0000125a: 	movq	%r15, %rdi
    0000125d: 	callq	_Z14QuickSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4701
    00001262: 	movq	0xf0(%rsp), %rdi
    0000126a: 	cmpq	%rbp, %rdi
    0000126d: 	je	.Ltmp2156 # Offset: 4717
    0000126f: 	movq	0x100(%rsp), %rax
    00001277: 	leaq	0x1(%rax), %rsi
    0000127b: 	callq	_ZdlPvm@PLT # Offset: 4731
.Ltmp2156:
    00001280: 	movl	$0x7b, %edi
    00001285: 	callq	srand@PLT # Offset: 4741
    0000128a: 	movq	0x70(%rsp), %rbx
    0000128f: 	cmpq	%rbx, 0x78(%rsp)
    00001294: 	je	.Ltmp2157 # Offset: 4756
    00001296: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2158:
    000012a0: 	callq	rand@PLT # Offset: 4768
    000012a5: 	movq	(%rbx), %rdx
    000012a8: 	addq	$0x8, %rbx
    000012ac: 	sarl	$0x5, %eax
    000012af: 	movzwl	%ax, %eax
    000012b2: 	movq	%rax, %xmm0
    000012b7: 	movq	%rax, 0x60(%rdx)
    000012bb: 	punpcklqdq	%xmm0, %xmm0
    000012bf: 	movups	%xmm0, (%rdx)
    000012c2: 	movups	%xmm0, 0x10(%rdx)
    000012c6: 	movups	%xmm0, 0x20(%rdx)
    000012ca: 	movups	%xmm0, 0x30(%rdx)
    000012ce: 	movups	%xmm0, 0x40(%rdx)
    000012d2: 	movups	%xmm0, 0x50(%rdx)
    000012d6: 	cmpq	%rbx, 0x78(%rsp)
    000012db: 	jne	.Ltmp2158 # Offset: 4827
.Ltmp2157:
    000012dd: 	leaq	DATAat0x171b0(%rip), %rdx
    000012e4: 	movq	%r13, %rsi
    000012e7: 	movq	%r12, %rdi
    000012ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4842
    000012ef: 	movq	%r12, %rsi
    000012f2: 	movq	%r15, %rdi
    000012f5: 	callq	_Z12StdSortArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4853
    000012fa: 	movq	0xf0(%rsp), %rdi
    00001302: 	cmpq	%rbp, %rdi
    00001305: 	je	.Ltmp2159 # Offset: 4869
    00001307: 	movq	0x100(%rsp), %rax
    0000130f: 	leaq	0x1(%rax), %rsi
    00001313: 	callq	_ZdlPvm@PLT # Offset: 4883
.Ltmp2159:
    00001318: 	leaq	DATAat0x171c1(%rip), %rdx
    0000131f: 	movq	%r13, %rsi
    00001322: 	movq	%r12, %rdi
    00001325: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4901
    0000132a: 	movq	0x10(%rsp), %rdi
    0000132f: 	movq	%r12, %rsi
    00001332: 	callq	_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4914
    00001337: 	movq	0xf0(%rsp), %rdi
    0000133f: 	cmpq	%rbp, %rdi
    00001342: 	je	.Ltmp2160 # Offset: 4930
    00001344: 	movq	0x100(%rsp), %rax
    0000134c: 	leaq	0x1(%rax), %rsi
    00001350: 	callq	_ZdlPvm@PLT # Offset: 4944
.Ltmp2160:
    00001355: 	leaq	DATAat0x171d9(%rip), %rdx
    0000135c: 	movq	%r13, %rsi
    0000135f: 	movq	%r12, %rdi
    00001362: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4962
    00001367: 	movq	%r12, %rsi
    0000136a: 	movq	%r15, %rdi
    0000136d: 	callq	_Z9FreeArrayISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EEEvRSt6vectorIT_SaIS7_EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 4973
    00001372: 	movq	0xf0(%rsp), %rdi
    0000137a: 	cmpq	%rbp, %rdi
    0000137d: 	je	.Ltmp2161 # Offset: 4989
    0000137f: 	movq	0x100(%rsp), %rax
    00001387: 	leaq	0x1(%rax), %rsi
    0000138b: 	callq	_ZdlPvm@PLT # Offset: 5003
.Ltmp2161:
    00001390: 	leaq	DATAat0x171ed(%rip), %rdx
    00001397: 	movq	%r13, %rsi
    0000139a: 	movq	%r12, %rdi
    0000139d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5021
    000013a2: 	movq	%r12, %rdi
    000013a5: 	callq	_Z9summarizeNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE # Offset: 5029
    000013aa: 	movq	0xf0(%rsp), %rdi
    000013b2: 	cmpq	%rbp, %rdi
    000013b5: 	je	.Ltmp2162 # Offset: 5045
    000013b7: 	movq	0x100(%rsp), %rax
    000013bf: 	leaq	0x1(%rax), %rsi
    000013c3: 	callq	_ZdlPvm@PLT # Offset: 5059
.Ltmp2162:
    000013c8: 	movq	0x78(%rsp), %rbx
    000013cd: 	movq	0x70(%rsp), %r13
    000013d2: 	cmpq	%r13, %rbx
    000013d5: 	je	.Ltmp2163 # Offset: 5077
    000013d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2165:
    000013e0: 	movq	(%r13), %rdi
    000013e4: 	testq	%rdi, %rdi
    000013e7: 	je	.Ltmp2164 # Offset: 5095
    000013ed: 	movl	$0x68, %esi
    000013f2: 	addq	$0x8, %r13
    000013f6: 	callq	_ZdlPvm@PLT # Offset: 5110
    000013fb: 	cmpq	%r13, %rbx
    000013fe: 	jne	.Ltmp2165 # Offset: 5118
.Ltmp2181:
    00001400: 	movq	0x70(%rsp), %r13
.Ltmp2163:
    00001405: 	testq	%r13, %r13
    00001408: 	je	.Ltmp2166 # Offset: 5128
    0000140a: 	movq	0x80(%rsp), %rsi
    00001412: 	movq	%r13, %rdi
    00001415: 	subq	%r13, %rsi
    00001418: 	callq	_ZdlPvm@PLT # Offset: 5144
.Ltmp2166:
    0000141d: 	movq	0x58(%rsp), %rbx
    00001422: 	movq	0x50(%rsp), %r13
    00001427: 	cmpq	%r13, %rbx
    0000142a: 	je	.Ltmp2167 # Offset: 5162
    0000142c: 	nopl	(%rax) # Size: 4
.Ltmp2169:
    00001430: 	movq	(%r13), %rdi
    00001434: 	testq	%rdi, %rdi
    00001437: 	je	.Ltmp2168 # Offset: 5175
    0000143d: 	movl	$0x68, %esi
    00001442: 	addq	$0x8, %r13
    00001446: 	callq	_ZdlPvm@PLT # Offset: 5190
    0000144b: 	cmpq	%r13, %rbx
    0000144e: 	jne	.Ltmp2169 # Offset: 5198
.Ltmp2180:
    00001450: 	movq	0x50(%rsp), %r13
.Ltmp2167:
    00001455: 	testq	%r13, %r13
    00001458: 	je	.Ltmp2170 # Offset: 5208
    0000145a: 	movq	0x60(%rsp), %rsi
    0000145f: 	movq	%r13, %rdi
    00001462: 	subq	%r13, %rsi
    00001465: 	callq	_ZdlPvm@PLT # Offset: 5221
.Ltmp2170:
    0000146a: 	movq	0xb0(%rsp), %rdi
    00001472: 	cmpq	(%rsp), %rdi
    00001476: 	je	.Ltmp2171 # Offset: 5238
    00001478: 	movq	0xc0(%rsp), %rax
    00001480: 	leaq	0x1(%rax), %rsi
    00001484: 	callq	_ZdlPvm@PLT # Offset: 5252
.Ltmp2171:
    00001489: 	movq	0x90(%rsp), %rsi
    00001491: 	movq	0x98(%rsp), %rdx
    00001499: 	movq	%r12, %rdi
    0000149c: 	movq	%rbp, 0xf0(%rsp)
    000014a4: 	addq	%rsi, %rdx
    000014a7: 	callq	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag.constprop.0/1" # Offset: 5287
    000014ac: 	movabsq	$0x3fffffffffffffff, %rax
    000014b6: 	subq	0xf8(%rsp), %rax
    000014be: 	cmpq	$0xa, %rax
    000014c2: 	jbe	.Ltmp2172 # Offset: 5314
    000014c8: 	movl	$0xb, %edx
    000014cd: 	leaq	DATAat0x17221(%rip), %rsi
    000014d4: 	movq	%r12, %rdi
    000014d7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 5335
    000014dc: 	movl	0x18(%rsp), %esi
    000014e0: 	movl	0x1c(%rsp), %edi
    000014e4: 	movq	%r12, %rcx
    000014e7: 	movl	$0x1, %edx
    000014ec: 	callq	"_Z14TestOnePointerI17VariableContainerIlLi13EESt10shared_ptrIS1_EEviiibNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.isra.0/1" # Offset: 5356
    000014f1: 	movq	0xf0(%rsp), %rdi
    000014f9: 	cmpq	%rbp, %rdi
    000014fc: 	je	.Ltmp2173 # Offset: 5372
    000014fe: 	movq	0x100(%rsp), %rax
    00001506: 	leaq	0x1(%rax), %rsi
    0000150a: 	callq	_ZdlPvm@PLT # Offset: 5386
.Ltmp2173:
    0000150f: 	movq	0x90(%rsp), %rdi
    00001517: 	cmpq	0x30(%rsp), %rdi
    0000151c: 	je	.Ltmp2174 # Offset: 5404
    0000151e: 	movq	0xa0(%rsp), %rax
    00001526: 	leaq	0x1(%rax), %rsi
    0000152a: 	callq	_ZdlPvm@PLT # Offset: 5418
.Ltmp2174:
    0000152f: 	movq	0x118(%rsp), %rax
    00001537: 	subq	%fs:0x28, %rax
    00001540: 	jne	.Ltmp2175 # Offset: 5440
    00001546: 	addq	$0x128, %rsp
    0000154d: 	popq	%rbx
    0000154e: 	popq	%rbp
    0000154f: 	popq	%r12
    00001551: 	popq	%r13
    00001553: 	popq	%r14
    00001555: 	popq	%r15
    00001557: 	retq # Offset: 5463
.Ltmp2081:
    00001558: 	testq	%r14, %r14
    0000155b: 	jne	.Ltmp2176 # Offset: 5467
    00001561: 	movq	%rbp, %rax
    00001564: 	jmp	.Ltmp2177 # Offset: 5476
.Ltmp2061:
    00001569: 	movq	%r9, %rcx
    0000156c: 	xorl	%edx, %edx
    0000156e: 	xorl	%esi, %esi
    00001570: 	movq	%r12, %rdi
    00001573: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT # Offset: 5491
    00001578: 	leaq	0xa0(%rsp), %rcx
    00001580: 	leaq	0x10(%rax), %rdx
    00001584: 	movq	%rcx, 0x30(%rsp)
    00001589: 	movq	%rcx, 0x90(%rsp)
    00001591: 	movq	(%rax), %rcx
    00001594: 	cmpq	%rdx, %rcx
    00001597: 	jne	.Ltmp2178 # Offset: 5527
    0000159d: 	movdqu	0x10(%rax), %xmm2
    000015a2: 	movaps	%xmm2, 0xa0(%rsp)
    000015aa: 	jmp	.Ltmp2179 # Offset: 5546
    000015af: 	nop # Size: 1
.Ltmp2168:
    000015b0: 	addq	$0x8, %r13
    000015b4: 	cmpq	%r13, %rbx
    000015b7: 	jne	.Ltmp2169 # Offset: 5559
    000015bd: 	jmp	.Ltmp2180 # Offset: 5565
    000015c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2164:
    000015c8: 	addq	$0x8, %r13
    000015cc: 	cmpq	%r13, %rbx
    000015cf: 	jne	.Ltmp2165 # Offset: 5583
    000015d5: 	jmp	.Ltmp2181 # Offset: 5589
.Ltmp2074:
    000015da: 	leaq	DATAat0x1710f(%rip), %rsi
    000015e1: 	movl	$0x1, %edi
    000015e6: 	xorl	%eax, %eax
    000015e8: 	callq	__printf_chk@PLT # Offset: 5608
    000015ed: 	movq	0xf0(%rsp), %rdx
    000015f5: 	jmp	.Ltmp2182 # Offset: 5621
.Ltmp2113:
    000015fa: 	testq	%r14, %r14
    000015fd: 	jne	.Ltmp2183 # Offset: 5629
    00001603: 	movq	%rbp, %rax
    00001606: 	jmp	.Ltmp2184 # Offset: 5638
.Ltmp2092:
    0000160b: 	testq	%r14, %r14
    0000160e: 	jne	.Ltmp2185 # Offset: 5646
    00001614: 	movq	%rbp, %rax
    00001617: 	jmp	.Ltmp2186 # Offset: 5655
.Ltmp2137:
    0000161c: 	xorl	%edx, %edx
    0000161e: 	movq	%r15, %rsi
    00001621: 	movq	%r12, %rdi
    00001624: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5668
    00001629: 	movq	%rax, 0xf0(%rsp)
    00001631: 	movq	%rax, %rdi
    00001634: 	movq	0x70(%rsp), %rax
    00001639: 	movq	%rax, 0x100(%rsp)
.Ltmp2199:
    00001641: 	movq	%r14, %rdx
    00001644: 	movq	%rbx, %rsi
    00001647: 	callq	memcpy@PLT # Offset: 5703
    0000164c: 	movq	0x70(%rsp), %r14
    00001651: 	movq	0xf0(%rsp), %rax
    00001659: 	jmp	.Ltmp2187 # Offset: 5721
.Ltmp2119:
    0000165e: 	testq	%r14, %r14
    00001661: 	jne	.Ltmp2188 # Offset: 5729
    00001667: 	movq	%rbp, %rax
    0000166a: 	jmp	.Ltmp2189 # Offset: 5738
.Ltmp2118:
    0000166f: 	leaq	0x48(%rsp), %rsi
    00001674: 	xorl	%edx, %edx
    00001676: 	movq	%r12, %rdi
    00001679: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5753
    0000167e: 	movq	%rax, 0xf0(%rsp)
    00001686: 	movq	%rax, %rdi
    00001689: 	movq	0x48(%rsp), %rax
    0000168e: 	movq	%rax, 0x100(%rsp)
.Ltmp2197:
    00001696: 	movq	%r14, %rdx
    00001699: 	movq	%rbx, %rsi
    0000169c: 	callq	memcpy@PLT # Offset: 5788
    000016a1: 	movq	0x48(%rsp), %r14
    000016a6: 	movq	0xf0(%rsp), %rax
    000016ae: 	jmp	.Ltmp2189 # Offset: 5806
.Ltmp2112:
    000016b3: 	leaq	0x48(%rsp), %rsi
    000016b8: 	xorl	%edx, %edx
    000016ba: 	movq	%r12, %rdi
    000016bd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5821
    000016c2: 	movq	%rax, 0xf0(%rsp)
    000016ca: 	movq	%rax, %rdi
    000016cd: 	movq	0x48(%rsp), %rax
    000016d2: 	movq	%rax, 0x100(%rsp)
.Ltmp2195:
    000016da: 	movq	%r14, %rdx
    000016dd: 	movq	%rbx, %rsi
    000016e0: 	callq	memcpy@PLT # Offset: 5856
    000016e5: 	movq	0x48(%rsp), %r14
    000016ea: 	movq	0xf0(%rsp), %rax
    000016f2: 	jmp	.Ltmp2184 # Offset: 5874
.Ltmp2091:
    000016f7: 	leaq	0x48(%rsp), %rsi
    000016fc: 	xorl	%edx, %edx
    000016fe: 	movq	%r12, %rdi
    00001701: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5889
    00001706: 	movq	%rax, 0xf0(%rsp)
    0000170e: 	movq	%rax, %rdi
    00001711: 	movq	0x48(%rsp), %rax
    00001716: 	movq	%rax, 0x100(%rsp)
.Ltmp2196:
    0000171e: 	movq	%r14, %rdx
    00001721: 	movq	%rbx, %rsi
    00001724: 	callq	memcpy@PLT # Offset: 5924
    00001729: 	movq	0x48(%rsp), %r14
    0000172e: 	movq	0xf0(%rsp), %rax
    00001736: 	jmp	.Ltmp2186 # Offset: 5942
.Ltmp2080:
    0000173b: 	leaq	0x48(%rsp), %rsi
    00001740: 	xorl	%edx, %edx
    00001742: 	movq	%r12, %rdi
    00001745: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5957
    0000174a: 	movq	%rax, 0xf0(%rsp)
    00001752: 	movq	%rax, %rdi
    00001755: 	movq	0x48(%rsp), %rax
    0000175a: 	movq	%rax, 0x100(%rsp)
.Ltmp2194:
    00001762: 	movq	%r14, %rdx
    00001765: 	movq	%rbx, %rsi
    00001768: 	callq	memcpy@PLT # Offset: 5992
    0000176d: 	movq	0x48(%rsp), %r14
    00001772: 	movq	0xf0(%rsp), %rax
    0000177a: 	jmp	.Ltmp2177 # Offset: 6010
.Ltmp2154:
    0000177f: 	testq	%r14, %r14
    00001782: 	jne	.Ltmp2190 # Offset: 6018
    00001788: 	movq	%rbp, %rax
    0000178b: 	jmp	.Ltmp2191 # Offset: 6027
.Ltmp2153:
    00001790: 	leaq	0x48(%rsp), %rsi
    00001795: 	xorl	%edx, %edx
    00001797: 	movq	%r12, %rdi
    0000179a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6042
    0000179f: 	movq	%rax, 0xf0(%rsp)
    000017a7: 	movq	%rax, %rdi
    000017aa: 	movq	0x48(%rsp), %rax
    000017af: 	movq	%rax, 0x100(%rsp)
.Ltmp2198:
    000017b7: 	movq	%r14, %rdx
    000017ba: 	movq	%rbx, %rsi
    000017bd: 	callq	memcpy@PLT # Offset: 6077
    000017c2: 	movq	0x48(%rsp), %r14
    000017c7: 	movq	0xf0(%rsp), %rax
    000017cf: 	jmp	.Ltmp2191 # Offset: 6095
.Ltmp2138:
    000017d4: 	testq	%r14, %r14
    000017d7: 	jne	.Ltmp2192 # Offset: 6103
    000017d9: 	movq	%rbp, %rax
    000017dc: 	jmp	.Ltmp2187 # Offset: 6108
.Ltmp2059:
    000017e1: 	movdqu	0x10(%rax), %xmm1
    000017e6: 	movaps	%xmm1, 0xe0(%rsp)
    000017ee: 	jmp	.Ltmp2193 # Offset: 6126
.Ltmp2062:
    000017f3: 	movdqu	0x10(%rax), %xmm3
    000017f8: 	movaps	%xmm3, 0xa0(%rsp)
    00001800: 	jmp	.Ltmp2179 # Offset: 6144
.Ltmp2176:
    00001805: 	movq	%rbp, %rdi
    00001808: 	jmp	.Ltmp2194 # Offset: 6152
.Ltmp2183:
    0000180d: 	movq	%rbp, %rdi
    00001810: 	jmp	.Ltmp2195 # Offset: 6160
.Ltmp2185:
    00001815: 	movq	%rbp, %rdi
    00001818: 	jmp	.Ltmp2196 # Offset: 6168
.Ltmp2188:
    0000181d: 	movq	%rbp, %rdi
    00001820: 	jmp	.Ltmp2197 # Offset: 6176
.Ltmp2190:
    00001825: 	movq	%rbp, %rdi
    00001828: 	jmp	.Ltmp2198 # Offset: 6184
.Ltmp2192:
    0000182a: 	movq	%rbp, %rdi
    0000182d: 	jmp	.Ltmp2199 # Offset: 6189
.Ltmp2069:
    00001832: 	leaq	DATAat0x17123(%rip), %rdi
    00001839: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6201
.Ltmp2066:
    0000183e: 	leaq	DATAat0x17123(%rip), %rdi
    00001845: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6213
.Ltmp2079:
    0000184a: 	leaq	DATAat0x17008(%rip), %rdi
    00001851: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6225
.Ltmp2082:
    00001856: 	leaq	DATAat0x17123(%rip), %rdi
    0000185d: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6237
.Ltmp2087:
    00001862: 	leaq	DATAat0x17123(%rip), %rdi
    00001869: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6249
.Ltmp2090:
    0000186e: 	leaq	DATAat0x17008(%rip), %rdi
    00001875: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6261
.Ltmp2093:
    0000187a: 	leaq	DATAat0x17123(%rip), %rdi
    00001881: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6273
.Ltmp2099:
    00001886: 	leaq	DATAat0x17123(%rip), %rdi
    0000188d: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6285
.Ltmp2100:
    00001892: 	leaq	DATAat0x17123(%rip), %rdi
    00001899: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6297
.Ltmp2111:
    0000189e: 	leaq	DATAat0x17008(%rip), %rdi
    000018a5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6309
.Ltmp2114:
    000018aa: 	leaq	DATAat0x17123(%rip), %rdi
    000018b1: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6321
.Ltmp2117:
    000018b6: 	leaq	DATAat0x17008(%rip), %rdi
    000018bd: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6333
.Ltmp2120:
    000018c2: 	leaq	DATAat0x17123(%rip), %rdi
    000018c9: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6345
.Ltmp2125:
    000018ce: 	leaq	DATAat0x17123(%rip), %rdi
    000018d5: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6357
.Ltmp2132:
    000018da: 	leaq	DATAat0x17123(%rip), %rdi
    000018e1: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6369
.Ltmp2133:
    000018e6: 	leaq	DATAat0x17123(%rip), %rdi
    000018ed: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6381
.Ltmp2136:
    000018f2: 	leaq	DATAat0x17008(%rip), %rdi
    000018f9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6393
.Ltmp2139:
    000018fe: 	leaq	DATAat0x17123(%rip), %rdi
    00001905: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6405
.Ltmp2148:
    0000190a: 	leaq	DATAat0x17123(%rip), %rdi
    00001911: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6417
.Ltmp2152:
    00001916: 	leaq	DATAat0x17008(%rip), %rdi
    0000191d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 6429
.Ltmp2155:
    00001922: 	leaq	DATAat0x17123(%rip), %rdi
    00001929: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6441
.Ltmp2172:
    0000192e: 	leaq	DATAat0x17123(%rip), %rdi
    00001935: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 6453
.Ltmp2175:
    0000193a: 	callq	__stack_chk_fail@PLT # Offset: 6458
    0000193f: 	endbr64
.Ltmp2201:
    00001943: 	movq	%rax, %rbx
    00001946: 	jmp	.Ltmp2200 # Offset: 6470
    00001948: 	endbr64
    0000194c: 	jmp	.Ltmp2201 # Offset: 6476
    0000194e: 	endbr64
.Ltmp2216:
    00001952: 	movq	%rax, %rbx
    00001955: 	jmp	.Ltmp2202 # Offset: 6485
.Ltmp2200:
    00001957: 	movq	0xf0(%rsp), %rdi
    0000195f: 	cmpq	%rbp, %rdi
    00001962: 	jne	.Ltmp2203 # Offset: 6498
.Ltmp2207:
    00001964: 	movq	%r15, %rdi
    00001967: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 6503
.Ltmp2209:
    0000196c: 	movq	0x10(%rsp), %rdi
    00001971: 	callq	_ZNSt6vectorISt10unique_ptrI17VariableContainerIlLi13EESt14default_deleteIS2_EESaIS5_EED1Ev # Offset: 6513
.Ltmp2212:
    00001976: 	movq	%rbx, %rbp
.Ltmp2221:
    00001979: 	movq	0xb0(%rsp), %rdi
    00001981: 	cmpq	(%rsp), %rdi
    00001985: 	je	.Ltmp2204 # Offset: 6533
    00001987: 	movq	0xc0(%rsp), %rax
    0000198f: 	leaq	0x1(%rax), %rsi
    00001993: 	callq	_ZdlPvm@PLT # Offset: 6547
.Ltmp2204:
    00001998: 	movq	0x90(%rsp), %rdi
    000019a0: 	cmpq	0x30(%rsp), %rdi
    000019a5: 	je	.Ltmp2205 # Offset: 6565
    000019a7: 	movq	0xa0(%rsp), %rax
    000019af: 	leaq	0x1(%rax), %rsi
    000019b3: 	callq	_ZdlPvm@PLT # Offset: 6579
.Ltmp2205:
    000019b8: 	movq	%rbp, %rdi
    000019bb: 	callq	_Unwind_Resume@PLT # Offset: 6587
.Ltmp2202:
    000019c0: 	movq	0xf0(%rsp), %rdi
    000019c8: 	cmpq	%rbp, %rdi
    000019cb: 	je	.Ltmp2206 # Offset: 6603
    000019cd: 	movq	0x100(%rsp), %rax
    000019d5: 	leaq	0x1(%rax), %rsi
    000019d9: 	callq	_ZdlPvm@PLT # Offset: 6617
.Ltmp2206:
    000019de: 	movq	%rbx, %rbp
    000019e1: 	jmp	.Ltmp2204 # Offset: 6625
.Ltmp2203:
    000019e3: 	movq	0x100(%rsp), %rax
    000019eb: 	leaq	0x1(%rax), %rsi
    000019ef: 	callq	_ZdlPvm@PLT # Offset: 6639
    000019f4: 	jmp	.Ltmp2207 # Offset: 6644
    000019f9: 	endbr64
.Ltmp2226:
    000019fd: 	movq	%rax, %rbx
    00001a00: 	jmp	.Ltmp2208 # Offset: 6656
    00001a02: 	endbr64
    00001a06: 	movq	%rax, %rbx
    00001a09: 	jmp	.Ltmp2209 # Offset: 6665
    00001a0e: 	endbr64
    00001a12: 	movq	%rax, %rbp
    00001a15: 	jmp	.Ltmp2204 # Offset: 6677
    00001a17: 	endbr64
.Ltmp2218:
    00001a1b: 	movq	%rax, %rbx
    00001a1e: 	jmp	.Ltmp2210 # Offset: 6686
.Ltmp2208:
    00001a20: 	movq	0xf0(%rsp), %rdi
    00001a28: 	cmpq	%rbp, %rdi
    00001a2b: 	je	.Ltmp2211 # Offset: 6699
    00001a2d: 	movq	0x100(%rsp), %rax
    00001a35: 	leaq	0x1(%rax), %rsi
.Ltmp2215:
    00001a39: 	callq	_ZdlPvm@PLT # Offset: 6713
.Ltmp2211:
    00001a3e: 	movq	0x50(%rsp), %rdi
    00001a43: 	movq	0x60(%rsp), %rsi
    00001a48: 	subq	%rdi, %rsi
    00001a4b: 	testq	%rdi, %rdi
    00001a4e: 	je	.Ltmp2212 # Offset: 6734
.Ltmp2224:
    00001a54: 	callq	_ZdlPvm@PLT # Offset: 6740
    00001a59: 	jmp	.Ltmp2212 # Offset: 6745
.Ltmp2210:
    00001a5e: 	movq	0xf0(%rsp), %rdi
    00001a66: 	cmpq	%rbp, %rdi
    00001a69: 	je	.Ltmp2213 # Offset: 6761
    00001a6b: 	movq	0x100(%rsp), %rax
    00001a73: 	leaq	0x1(%rax), %rsi
    00001a77: 	callq	_ZdlPvm@PLT # Offset: 6775
.Ltmp2213:
    00001a7c: 	movq	0xd0(%rsp), %rdi
    00001a84: 	cmpq	0x8(%rsp), %rdi
    00001a89: 	je	.Ltmp2214 # Offset: 6793
    00001a8b: 	movq	0xe0(%rsp), %rax
    00001a93: 	leaq	0x1(%rax), %rsi
    00001a97: 	callq	_ZdlPvm@PLT # Offset: 6807
.Ltmp2214:
    00001a9c: 	movq	0x70(%rsp), %rdi
    00001aa1: 	movq	0x80(%rsp), %rsi
    00001aa9: 	subq	%rdi, %rsi
    00001aac: 	testq	%rdi, %rdi
    00001aaf: 	jne	.Ltmp2215 # Offset: 6831
    00001ab1: 	jmp	.Ltmp2211 # Offset: 6833
    00001ab3: 	endbr64
    00001ab7: 	jmp	.Ltmp2216 # Offset: 6839
    00001abc: 	endbr64
    00001ac0: 	jmp	.Ltmp2201 # Offset: 6848
    00001ac5: 	endbr64
    00001ac9: 	jmp	.Ltmp2201 # Offset: 6857
    00001ace: 	endbr64
    00001ad2: 	jmp	.Ltmp2201 # Offset: 6866
    00001ad7: 	endbr64
    00001adb: 	jmp	.Ltmp2201 # Offset: 6875
    00001ae0: 	endbr64
.Ltmp2230:
    00001ae4: 	movq	%rax, %rbx
    00001ae7: 	jmp	.Ltmp2217 # Offset: 6887
    00001aec: 	endbr64
    00001af0: 	movq	%rax, %rbx
    00001af3: 	jmp	.Ltmp2207 # Offset: 6899
    00001af8: 	endbr64
    00001afc: 	jmp	.Ltmp2201 # Offset: 6908
    00001b01: 	endbr64
    00001b05: 	jmp	.Ltmp2201 # Offset: 6917
    00001b0a: 	endbr64
.Ltmp2236:
    00001b0e: 	movq	%rax, %rbx
    00001b11: 	jmp	.Ltmp2214 # Offset: 6929
    00001b13: 	endbr64
.Ltmp2231:
    00001b17: 	movq	%rax, %rbx
    00001b1a: 	jmp	.Ltmp2213 # Offset: 6938
    00001b1f: 	endbr64
    00001b23: 	jmp	.Ltmp2218 # Offset: 6947
    00001b28: 	endbr64
.Ltmp2220:
    00001b2c: 	movq	%rax, %rbx
    00001b2f: 	jmp	.Ltmp2219 # Offset: 6959
    00001b31: 	endbr64
    00001b35: 	jmp	.Ltmp2220 # Offset: 6965
    00001b37: 	endbr64
.Ltmp2223:
    00001b3b: 	movq	%rax, %rbp
    00001b3e: 	jmp	.Ltmp2221 # Offset: 6974
    00001b43: 	endbr64
.Ltmp2225:
    00001b47: 	movq	%rax, %rbx
    00001b4a: 	jmp	.Ltmp2222 # Offset: 6986
    00001b4c: 	endbr64
    00001b50: 	jmp	.Ltmp2223 # Offset: 6992
.Ltmp2222:
    00001b52: 	movq	0xf0(%rsp), %rdi
    00001b5a: 	cmpq	%rbp, %rdi
    00001b5d: 	je	.Ltmp2212 # Offset: 7005
    00001b63: 	movq	0x100(%rsp), %rax
    00001b6b: 	leaq	0x1(%rax), %rsi
    00001b6f: 	jmp	.Ltmp2224 # Offset: 7023
.Ltmp2219:
    00001b74: 	movq	0xf0(%rsp), %rdi
    00001b7c: 	cmpq	%rbp, %rdi
    00001b7f: 	je	.Ltmp2214 # Offset: 7039
    00001b85: 	movq	0x100(%rsp), %rax
    00001b8d: 	leaq	0x1(%rax), %rsi
    00001b91: 	callq	_ZdlPvm@PLT # Offset: 7057
    00001b96: 	jmp	.Ltmp2214 # Offset: 7062
    00001b9b: 	endbr64
    00001b9f: 	jmp	.Ltmp2201 # Offset: 7071
    00001ba4: 	endbr64
    00001ba8: 	jmp	.Ltmp2225 # Offset: 7080
    00001baa: 	endbr64
.Ltmp2235:
    00001bae: 	movq	%rax, %rbx
    00001bb1: 	jmp	.Ltmp2211 # Offset: 7089
    00001bb6: 	endbr64
    00001bba: 	jmp	.Ltmp2226 # Offset: 7098
    00001bbf: 	endbr64
.Ltmp2228:
    00001bc3: 	movq	%rax, %rbx
    00001bc6: 	jmp	.Ltmp2227 # Offset: 7110
    00001bc8: 	endbr64
    00001bcc: 	jmp	.Ltmp2228 # Offset: 7116
    00001bce: 	endbr64
    00001bd2: 	movq	%rax, %rbx
    00001bd5: 	jmp	.Ltmp2229 # Offset: 7125
.Ltmp2217:
    00001bd7: 	movq	0xf0(%rsp), %rdi
    00001bdf: 	cmpq	%rbp, %rdi
    00001be2: 	je	.Ltmp2209 # Offset: 7138
    00001be8: 	movq	0x100(%rsp), %rax
    00001bf0: 	leaq	0x1(%rax), %rsi
    00001bf4: 	callq	_ZdlPvm@PLT # Offset: 7156
    00001bf9: 	jmp	.Ltmp2209 # Offset: 7161
.Ltmp2227:
    00001bfe: 	movq	0xf0(%rsp), %rdi
    00001c06: 	cmpq	%rbp, %rdi
    00001c09: 	je	.Ltmp2229 # Offset: 7177
    00001c0b: 	movq	0x100(%rsp), %rax
    00001c13: 	leaq	0x1(%rax), %rsi
    00001c17: 	callq	_ZdlPvm@PLT # Offset: 7191
.Ltmp2229:
    00001c1c: 	movq	0xd0(%rsp), %rdi
    00001c24: 	cmpq	0x8(%rsp), %rdi
    00001c29: 	je	.Ltmp2207 # Offset: 7209
    00001c2f: 	movq	0xe0(%rsp), %rax
    00001c37: 	leaq	0x1(%rax), %rsi
    00001c3b: 	callq	_ZdlPvm@PLT # Offset: 7227
    00001c40: 	jmp	.Ltmp2207 # Offset: 7232
    00001c45: 	endbr64
    00001c49: 	jmp	.Ltmp2218 # Offset: 7241
    00001c4e: 	endbr64
    00001c52: 	jmp	.Ltmp2220 # Offset: 7250
    00001c57: 	endbr64
    00001c5b: 	jmp	.Ltmp2220 # Offset: 7259
    00001c60: 	endbr64
    00001c64: 	jmp	.Ltmp2220 # Offset: 7268
    00001c69: 	endbr64
    00001c6d: 	jmp	.Ltmp2220 # Offset: 7277
    00001c72: 	endbr64
    00001c76: 	jmp	.Ltmp2220 # Offset: 7286
    00001c7b: 	endbr64
    00001c7f: 	jmp	.Ltmp2220 # Offset: 7295
    00001c84: 	endbr64
    00001c88: 	jmp	.Ltmp2220 # Offset: 7304
    00001c8d: 	endbr64
    00001c91: 	jmp	.Ltmp2220 # Offset: 7313
    00001c96: 	endbr64
    00001c9a: 	jmp	.Ltmp2220 # Offset: 7322
    00001c9f: 	endbr64
    00001ca3: 	jmp	.Ltmp2220 # Offset: 7331
    00001ca8: 	endbr64
    00001cac: 	jmp	.Ltmp2220 # Offset: 7340
    00001cb1: 	endbr64
    00001cb5: 	jmp	.Ltmp2220 # Offset: 7349
    00001cba: 	endbr64
    00001cbe: 	jmp	.Ltmp2223 # Offset: 7358
    00001cc3: 	endbr64
    00001cc7: 	jmp	.Ltmp2223 # Offset: 7367
    00001ccc: 	endbr64
    00001cd0: 	jmp	.Ltmp2220 # Offset: 7376
    00001cd5: 	endbr64
    00001cd9: 	jmp	.Ltmp2225 # Offset: 7385
    00001cde: 	endbr64
    00001ce2: 	jmp	.Ltmp2220 # Offset: 7394
    00001ce7: 	endbr64
    00001ceb: 	jmp	.Ltmp2220 # Offset: 7403
    00001cf0: 	endbr64
    00001cf4: 	jmp	.Ltmp2225 # Offset: 7412
    00001cf9: 	endbr64
    00001cfd: 	jmp	.Ltmp2230 # Offset: 7421
    00001d02: 	endbr64
    00001d06: 	jmp	.Ltmp2218 # Offset: 7430
    00001d0b: 	endbr64
    00001d0f: 	jmp	.Ltmp2231 # Offset: 7439
    00001d14: 	endbr64
    00001d18: 	jmp	.Ltmp2220 # Offset: 7448
    00001d1d: 	endbr64
    00001d21: 	movq	%rax, %r12
    00001d24: 	jmp	.Ltmp2232 # Offset: 7460
    00001d26: 	endbr64
    00001d2a: 	movq	%rax, %r12
    00001d2d: 	movq	0xd0(%rsp), %rdi
    00001d35: 	cmpq	0x8(%rsp), %rdi
    00001d3a: 	je	.Ltmp2232 # Offset: 7482
    00001d3c: 	movq	0xe0(%rsp), %rax
    00001d44: 	leaq	0x1(%rax), %rsi
    00001d48: 	callq	_ZdlPvm@PLT # Offset: 7496
.Ltmp2232:
    00001d4d: 	movq	0xb0(%rsp), %rdi
    00001d55: 	cmpq	(%rsp), %rdi
    00001d59: 	je	.Ltmp2233 # Offset: 7513
    00001d5b: 	movq	0xc0(%rsp), %rax
    00001d63: 	leaq	0x1(%rax), %rsi
    00001d67: 	callq	_ZdlPvm@PLT # Offset: 7527
.Ltmp2233:
    00001d6c: 	movq	0xf0(%rsp), %rdi
    00001d74: 	cmpq	%rbp, %rdi
    00001d77: 	je	.Ltmp2234 # Offset: 7543
    00001d79: 	movq	0x100(%rsp), %rax
    00001d81: 	leaq	0x1(%rax), %rsi
    00001d85: 	callq	_ZdlPvm@PLT # Offset: 7557
.Ltmp2234:
    00001d8a: 	movq	%r12, %rdi
    00001d8d: 	callq	_Unwind_Resume@PLT # Offset: 7565
    00001d92: 	endbr64
    00001d96: 	jmp	.Ltmp2225 # Offset: 7574
    00001d9b: 	endbr64
    00001d9f: 	jmp	.Ltmp2223 # Offset: 7583
    00001da4: 	endbr64
    00001da8: 	jmp	.Ltmp2231 # Offset: 7592
    00001dad: 	endbr64
    00001db1: 	jmp	.Ltmp2235 # Offset: 7601
    00001db6: 	endbr64
    00001dba: 	jmp	.Ltmp2223 # Offset: 7610
    00001dbf: 	endbr64
    00001dc3: 	jmp	.Ltmp2236 # Offset: 7619
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlLi13EEvii"

Binary Function "_fini" after disassembly {
  Number      : 153
  State       : disassembled
  Address     : 0x161e8
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x161e8
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0152:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 154 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 1139 instructions were shortened
BOLT-INFO: removed 382 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 145 out of 180 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x2056b4
