BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x1b028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x1aff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x13f0
  Size        : 0x17d
  MaxSize     : 0x180
  Offset      : 0x13f0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	subq	$0x10, %rsp
    00000010: 	testl	%edi, %edi
    00000012: 	jle	.Ltmp1 # Offset: 18
    00000018: 	leal	-0x1(%rdi), %eax
    0000001b: 	movl	%edi, %r13d
    0000001e: 	movq	%rsi, %r14
    00000021: 	movq	%rsi, %rbx
    00000024: 	leaq	0x8(%rsi,%rax,8), %r12
    00000029: 	leaq	DATAat0x17150(%rip), %rbp
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%rbx, %r12
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x17136(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000068: 	movsd	DATAat0x17350(%rip), %xmm0
.Ltmp5:
    00000070: 	movl	iterations(%rip), %ebx
    00000076: 	movsd	%xmm0, 0x8(%rsp)
    0000007c: 	callq	_Z11TestOneTypeI15SingleItemClassIiEEvd # Offset: 124
    00000081: 	movsd	0x8(%rsp), %xmm0
    00000087: 	callq	_Z11TestOneTypeI12TwoItemClassIiEEvd # Offset: 135
    0000008c: 	testl	%ebx, %ebx
    0000008e: 	leal	0x7(%rbx), %eax
    00000091: 	movsd	0x8(%rsp), %xmm0
    00000097: 	cmovnsl	%ebx, %eax
    0000009a: 	sarl	$0x3, %eax
    0000009d: 	movl	%eax, iterations(%rip)
    000000a3: 	callq	_Z11TestOneTypeI13FourItemClassIiEEvd # Offset: 163
    000000a8: 	movsd	0x8(%rsp), %xmm0
    000000ae: 	callq	_Z11TestOneTypeI12SixItemClassIiEEvd # Offset: 174
    000000b3: 	testl	%ebx, %ebx
    000000b5: 	leal	0x3(%rbx), %eax
    000000b8: 	movsd	0x8(%rsp), %xmm0
    000000be: 	cmovnsl	%ebx, %eax
    000000c1: 	sarl	$0x2, %eax
    000000c4: 	movl	%eax, iterations(%rip)
    000000ca: 	callq	_Z11TestOneTypeI15SingleItemClassIdEEvd # Offset: 202
    000000cf: 	movsd	0x8(%rsp), %xmm0
    000000d5: 	callq	_Z11TestOneTypeI12TwoItemClassIdEEvd # Offset: 213
    000000da: 	movslq	%ebx, %rax
    000000dd: 	movsd	0x8(%rsp), %xmm0
    000000e3: 	sarl	$0x1f, %ebx
    000000e6: 	imulq	$0x2aaaaaab, %rax, %rax
    000000ed: 	sarq	$0x21, %rax
    000000f1: 	subl	%ebx, %eax
    000000f3: 	movl	%eax, iterations(%rip)
    000000f9: 	callq	_Z11TestOneTypeI13FourItemClassIdEEvd # Offset: 249
    000000fe: 	movsd	0x8(%rsp), %xmm0
    00000104: 	callq	_Z11TestOneTypeI12SixItemClassIdEEvd # Offset: 260
    00000109: 	addq	$0x10, %rsp
    0000010d: 	xorl	%eax, %eax
    0000010f: 	popq	%rbx
    00000110: 	popq	%rbp
    00000111: 	popq	%r12
    00000113: 	popq	%r13
    00000115: 	popq	%r14
    00000117: 	retq # Offset: 279
.Ltmp3:
    00000118: 	movq	0x8(%r14), %rdi
    0000011c: 	movl	$0xa, %edx
    00000121: 	xorl	%esi, %esi
    00000123: 	callq	strtol@PLT # Offset: 291
    00000128: 	movl	%eax, iterations(%rip)
    0000012e: 	cmpl	$0x2, %r13d
    00000132: 	jle	.Ltmp4 # Offset: 306
    00000138: 	movq	0x10(%r14), %rdi
    0000013c: 	xorl	%esi, %esi
    0000013e: 	callq	strtod@PLT # Offset: 318
    00000143: 	movsd	%xmm0, init_value(%rip)
    0000014b: 	cmpl	$0x3, %r13d
    0000014f: 	jle	.Ltmp4 # Offset: 335
    00000155: 	movq	0x18(%r14), %rdi
    00000159: 	xorl	%esi, %esi
    0000015b: 	callq	strtod@PLT # Offset: 347
    00000160: 	jmp	.Ltmp5 # Offset: 352
.Ltmp1:
    00000165: 	leaq	DATAat0x17136(%rip), %rsi
    0000016c: 	movl	$0x1, %edi
    00000171: 	xorl	%eax, %eax
    00000173: 	callq	__printf_chk@PLT # Offset: 371
    00000178: 	jmp	.Ltmp4 # Offset: 376
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x1650
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1650
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x1afe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1680
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1680
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp6 # Offset: 17
    00000013: 	movq	DATAat0x1afe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp6 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp6:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x16b0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x16b0
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp7 # Offset: 34
    00000024: 	movq	DATAat0x1aff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp7 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x16f0
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x16f0
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp8 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp9 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp9:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp8:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x1730
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x1730
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x1740
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x1740
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp10 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp11 # Offset: 38
.Ltmp10:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp12 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp11:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp12:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x17008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x17e0
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x17e0
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp13 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp14 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp15:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp15 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp28:
    00000069: 	leaq	DATAat0x17152(%rip), %rbp
    00000070: 	leaq	DATAat0x17028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x17068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp16 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x17360(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x17098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x17358(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp17 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp21:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp18 # Offset: 244
    000000fa: 	movq	DATAat0x17348(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp22:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x17348(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp19 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp19:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x17137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x17360(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp20 # Offset: 398
.Ltmp17:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp21 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp22 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp18:
    000001c8: 	movq	DATAat0x17350(%rip), %rsi
    000001cf: 	movq	DATAat0x17348(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp19 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp20:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp16 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp23 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp24:
    00000210: 	addq	$0x10, %rax
.Ltmp23:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp24 # Offset: 542
.Ltmp29:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x170c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp25 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp26 # Offset: 592
.Ltmp25:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp13:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp26:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp27:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp27 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x17112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp13 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp14:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp28 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp16:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp29 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1b10
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1b10
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp30 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp31 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp32:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp32 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp37:
    0000006a: 	leaq	DATAat0x17152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x170f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x17138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x17152(%rip), %r8
    000000a1: 	leaq	DATAat0x17126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp33 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp34:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x17137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp34 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp33 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp35 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp36:
    00000140: 	addq	$0x10, %rax
.Ltmp35:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp36 # Offset: 334
.Ltmp38:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x170c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp30:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp31:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp37 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp33:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp38 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1cc0
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1cc0
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1ce0
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1ce0
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x17358(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1d20
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1d20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1d50
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1d80
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1db0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1db0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1de0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1de0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1e10
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1e10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1e40
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1e70
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1ea0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1ea0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1ed0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1ed0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1f00
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1f00
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1f30
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x1f30
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x1f70
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1f70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x1fa0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1fa0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x1fd0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1fd0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x2000
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2000
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x2030
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2030
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x2060
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2060
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2090
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2090
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x20c0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x20c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x20f0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x20f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x2120
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x2120
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x2150
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2150
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI15SingleItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x2180
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2180
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI15SingleItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x73, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x73616c4331746e69, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI15SingleItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI12TwoItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x21b0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x21b0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI12TwoItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x73, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x73616c4332746e69, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI12TwoItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI13FourItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x21e0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x21e0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI13FourItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x73, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x73616c4334746e69, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI13FourItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI12SixItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x2210
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x2210
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI12SixItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x73, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x73616c4336746e69, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI12SixItemClassIiEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI15SingleItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x2240
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2240
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI15SingleItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x4331656c62756f64, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x7373616c, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI15SingleItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI12TwoItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x2270
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x2270
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI12TwoItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x4332656c62756f64, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x7373616c, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI12TwoItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI13FourItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x22a0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x22a0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI13FourItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x4334656c62756f64, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x7373616c, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI13FourItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameI12SixItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x22d0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x22d0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameI12SixItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x4336656c62756f64, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x7373616c, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameI12SixItemClassIdEEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/custom_types_loop_invariant.cpp/1
  Number      : 46
  State       : disassembled
  Address     : 0x2300
  Size        : 0x114
  MaxSize     : 0x120
  Offset      : 0x2300
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	pushq	%r12
    00000002: 	movq	%rdi, %rsi
    00000005: 	pushq	%rbp
    00000006: 	pushq	%rbx
    00000007: 	subq	$0x10, %rsp
    0000000b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp39 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %rbp
    00000044: 	movq	%rbp, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp40 # Offset: 74
    0000004c: 	testq	%rbp, %rbp
    0000004f: 	je	.Ltmp41 # Offset: 79
.Ltmp40:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp42 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp43 # Offset: 99
    00000069: 	movzbl	(%rbp), %eax
    0000006d: 	movb	%al, 0x10(%rbx)
.Ltmp45:
    00000070: 	movq	%r12, 0x8(%rbx)
    00000074: 	movb	$0x0, (%rdi,%r12)
    00000079: 	addq	$0x20, "_ZL7gLabels/1"+48(%rip)
    00000081: 	movq	0x8(%rsp), %rax
    00000086: 	subq	%fs:0x28, %rax
    0000008f: 	jne	.Ltmp44 # Offset: 143
    00000091: 	addq	$0x10, %rsp
    00000095: 	popq	%rbx
    00000096: 	popq	%rbp
    00000097: 	popq	%r12
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp42:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp46:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%rbp, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp45 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp39:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp44 # Offset: 222
    000000e0: 	addq	$0x10, %rsp
    000000e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000000eb: 	popq	%rbx
    000000ec: 	popq	%rbp
    000000ed: 	popq	%r12
    000000ef: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 239
    000000f4: 	nopl	(%rax) # Size: 4
.Ltmp43:
    000000f8: 	testq	%r12, %r12
    000000fb: 	je	.Ltmp45 # Offset: 251
    00000101: 	jmp	.Ltmp46 # Offset: 257
.Ltmp41:
    00000103: 	leaq	DATAat0x17158(%rip), %rdi
    0000010a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 266
.Ltmp44:
    0000010f: 	callq	__stack_chk_fail@PLT # Offset: 271
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 47
  State       : disassembled
  Address     : 0x2420
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x2420
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp47 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp50:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp49:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp48 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp49 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp50 # Offset: 142
.Ltmp47:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp51 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp52 # Offset: 164
.Ltmp55:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp53 # Offset: 177
.Ltmp54:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp52 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp54 # Offset: 214
.Ltmp53:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp55 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp56 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp58:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp57 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp57:
    0000010a: 	addq	$0x20, %r13
.Ltmp52:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp58 # Offset: 275
.Ltmp56:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp59 # Offset: 283
.Ltmp65:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp60 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp61:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp61 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp60:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp48:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp49 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp50 # Offset: 389
    0000018b: 	jmp	.Ltmp47 # Offset: 395
.Ltmp51:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp56 # Offset: 405
.Ltmp64:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp62 # Offset: 422
.Ltmp63:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp56 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp63 # Offset: 463
.Ltmp62:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp64 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp65 # Offset: 482
.Ltmp59:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x2620
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x2620
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp66 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp67 # Offset: 63
.Ltmp66:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp68 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp69 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp73:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp70 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp71 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp69:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp72 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp73 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp68:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp74:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp73 # Offset: 248
.Ltmp67:
    000000fd: 	leaq	DATAat0x17158(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp70:
    00000109: 	leaq	DATAat0x17182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp71:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp72:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp74 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp75 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp75:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x2770
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x2770
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp76 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp77 # Offset: 152
.Ltmp88:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp78 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp79 # Offset: 204
.Ltmp78:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp80 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp81 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp83:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp82 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp81:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp83 # Offset: 339
    00000155: 	jmp	.Ltmp84 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp77:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp85 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp86 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp87 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp87:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp90:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp88 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp80:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp84:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp83 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp85:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp89 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp90 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp90 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp89:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp90 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp90 # Offset: 696
.Ltmp79:
    000002bd: 	leaq	DATAat0x17158(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp86:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp91 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp91:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp76:
    000002e0: 	leaq	DATAat0x17198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp82:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_Z11TestOneTypeI12SixItemClassIdEEvd" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x2aa0
  Size        : 0x2243
  MaxSize     : 0x2250
  Offset      : 0x2aa0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI12SixItemClassIdEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x5d000(%rsp), %r11
.Ltmp92:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp92 # Offset: 37
    00000027: 	subq	$0xcf8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm1
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movq	%xmm2, %rbp
    0000004a: 	movsd	%xmm0, 0x68(%rsp)
    00000050: 	movq	%fs:0x28, %rax
    00000059: 	movq	%rax, 0x5dce8(%rsp)
    00000061: 	xorl	%eax, %eax
    00000063: 	leaq	0xb0(%rsp), %rax
    0000006b: 	movaps	%xmm2, 0x30(%rsp)
    00000070: 	movhlps	%xmm1, %xmm2
    00000073: 	movq	%rax, 0x98(%rsp)
    0000007b: 	movq	%xmm2, %rcx
    00000080: 	movq	%rax, 0xa0(%rsp)
    00000088: 	leaq	0x8(%rcx), %r12
    0000008c: 	movabsq	$0x4336656c62756f64, %rax
    00000096: 	movq	%rax, 0xb0(%rsp)
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a5: 	movl	$0x7373616c, 0xb8(%rsp)
    000000b0: 	movq	%rax, (%rsp)
    000000b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000bb: 	movq	$0xc, 0xa8(%rsp)
    000000c7: 	movb	$0x0, 0xbc(%rsp)
    000000cf: 	movq	%rax, 0x20(%rsp)
    000000d4: 	movaps	%xmm1, 0x40(%rsp)
    000000d9: 	movq	%xmm2, 0x58(%rsp)
    000000df: 	movq	%xmm1, 0x10(%rsp)
    000000e5: 	cmpq	%r12, %rax
    000000e8: 	jbe	.Ltmp93 # Offset: 232
    000000ea: 	movq	%rbp, 0x60(%rsp)
    000000ef: 	movq	%r12, %r13
    000000f2: 	movq	%rax, %r15
    000000f5: 	nopl	(%rax) # Size: 3
.Ltmp96:
    000000f8: 	movq	(%r13), %rbp
    000000fc: 	leaq	0x200(%rbp), %rbx
    00000103: 	nopl	(%rax,%rax) # Size: 5
.Ltmp95:
    00000108: 	movq	(%rbp), %rdi
    0000010c: 	leaq	0x10(%rbp), %rdx
    00000110: 	cmpq	%rdx, %rdi
    00000113: 	je	.Ltmp94 # Offset: 275
    00000119: 	movq	0x10(%rbp), %rax
    0000011d: 	addq	$0x20, %rbp
    00000121: 	leaq	0x1(%rax), %rsi
    00000125: 	callq	_ZdlPvm@PLT # Offset: 293
    0000012a: 	cmpq	%rbp, %rbx
    0000012d: 	jne	.Ltmp95 # Offset: 301
    0000012f: 	addq	$0x8, %r13
    00000133: 	cmpq	%r13, %r15
    00000136: 	ja	.Ltmp96 # Offset: 310
.Ltmp211:
    00000138: 	movq	0x60(%rsp), %rbp
.Ltmp93:
    0000013d: 	movq	0x58(%rsp), %rcx
    00000142: 	cmpq	%rcx, 0x20(%rsp)
    00000147: 	jne	.Ltmp97 # Offset: 327
    00000149: 	jmp	.Ltmp98 # Offset: 329
    0000014e: 	nop # Size: 2
.Ltmp100:
    00000150: 	movq	0x10(%rbp), %rax
    00000154: 	addq	$0x20, %rbp
    00000158: 	leaq	0x1(%rax), %rsi
    0000015c: 	callq	_ZdlPvm@PLT # Offset: 348
.Ltmp97:
    00000161: 	cmpq	%rbp, 0x10(%rsp)
    00000166: 	je	.Ltmp99 # Offset: 358
.Ltmp101:
    00000168: 	movq	(%rbp), %rdi
    0000016c: 	leaq	0x10(%rbp), %rax
    00000170: 	cmpq	%rax, %rdi
    00000173: 	jne	.Ltmp100 # Offset: 371
    00000175: 	addq	$0x20, %rbp
    00000179: 	cmpq	0x10(%rsp), %rbp
    0000017e: 	jne	.Ltmp101 # Offset: 382
    00000180: 	cmpq	%r14, (%rsp)
    00000184: 	je	.Ltmp102 # Offset: 388
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp104:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp103 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp103:
    000001a9: 	addq	$0x20, %r14
.Ltmp99:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp104 # Offset: 433
.Ltmp102:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp105 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp106:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp106 # Offset: 477
.Ltmp105:
    000001df: 	movdqa	0x30(%rsp), %xmm2
    000001e5: 	movsd	init_value(%rip), %xmm0
    000001ed: 	leaq	0xe0(%rsp), %r12
    000001f5: 	leaq	0x5dce0(%rsp), %rbx
    000001fd: 	movq	%r12, %rax
    00000200: 	movaps	%xmm2, "_ZL7gLabels/1"+48(%rip)
    00000207: 	movdqa	0x40(%rsp), %xmm2
    0000020d: 	unpcklpd	%xmm0, %xmm0
    00000211: 	movaps	%xmm2, "_ZL7gLabels/1"+64(%rip)
    00000218: 	nopl	(%rax,%rax) # Size: 8
.Ltmp107:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x30, %rax
    00000227: 	movaps	%xmm0, -0x20(%rax)
    0000022b: 	movaps	%xmm0, -0x10(%rax)
    0000022f: 	cmpq	%rbx, %rax
    00000232: 	jne	.Ltmp107 # Offset: 562
    00000234: 	movsd	0x68(%rsp), %xmm1
    0000023a: 	movsd	DATAat0x17368(%rip), %xmm6
    00000242: 	leaq	0xc0(%rsp), %r13
    0000024a: 	leaq	0xa0(%rsp), %rsi
    00000252: 	leaq	DATAat0x171c8(%rip), %rdx
    00000259: 	movq	%r13, %rdi
    0000025c: 	movq	%rsi, 0x90(%rsp)
    00000264: 	movapd	%xmm1, %xmm2
    00000268: 	addsd	%xmm1, %xmm6
    0000026c: 	addsd	%xmm1, %xmm2
    00000270: 	movsd	%xmm6, 0x78(%rsp)
    00000276: 	movsd	%xmm2, 0x80(%rsp)
    0000027f: 	divsd	%xmm6, %xmm2
    00000283: 	movapd	%xmm2, %xmm0
    00000287: 	addsd	%xmm1, %xmm0
    0000028b: 	movsd	%xmm0, 0x70(%rsp)
    00000291: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 657
    00000296: 	callq	clock@PLT # Offset: 662
    0000029b: 	movq	%rax, start_time(%rip)
    000002a2: 	movl	iterations(%rip), %eax
    000002a8: 	testl	%eax, %eax
    000002aa: 	jle	.Ltmp108 # Offset: 682
    000002b0: 	movsd	0x68(%rsp), %xmm1
    000002b6: 	movsd	DATAat0x17370(%rip), %xmm2
    000002be: 	xorl	%r14d, %r14d
    000002c1: 	leaq	init_value(%rip), %rbp
    000002c8: 	leaq	DATAat0x171d6(%rip), %r15
    000002cf: 	unpcklpd	%xmm1, %xmm1
    000002d3: 	movsd	%xmm2, 0x40(%rsp)
    000002d9: 	movsd	DATAat0x17350(%rip), %xmm2
    000002e1: 	movaps	%xmm1, (%rsp)
    000002e5: 	pxor	%xmm1, %xmm1
    000002e9: 	movsd	%xmm1, 0x60(%rsp)
    000002ef: 	movsd	%xmm2, 0x58(%rsp)
    000002f5: 	nopl	(%rax) # Size: 3
.Ltmp112:
    000002f8: 	pxor	%xmm0, %xmm0
    000002fc: 	movq	%r12, %rax
    000002ff: 	movapd	%xmm0, %xmm1
    00000303: 	movapd	%xmm0, %xmm2
    00000307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp109:
    00000310: 	movapd	(%rsp), %xmm5
    00000315: 	movapd	(%rax), %xmm3
    00000319: 	addq	$0x30, %rax
    0000031d: 	addpd	%xmm5, %xmm3
    00000321: 	addpd	%xmm3, %xmm2
    00000325: 	movapd	-0x20(%rax), %xmm3
    0000032a: 	addpd	%xmm5, %xmm3
    0000032e: 	addpd	-0x10(%rax), %xmm5
    00000333: 	addpd	%xmm3, %xmm1
    00000337: 	addpd	%xmm5, %xmm0
    0000033b: 	cmpq	%rbx, %rax
    0000033e: 	jne	.Ltmp109 # Offset: 830
    00000340: 	movsd	0x68(%rsp), %xmm4
    00000346: 	addsd	(%rbp), %xmm4
    0000034b: 	movapd	%xmm2, %xmm6
    0000034f: 	mulsd	0x40(%rsp), %xmm4
    00000355: 	unpckhpd	%xmm6, %xmm6
    00000359: 	movapd	%xmm6, %xmm3
    0000035d: 	subsd	%xmm4, %xmm3
    00000361: 	subsd	%xmm4, %xmm2
    00000365: 	addsd	%xmm3, %xmm2
    00000369: 	movapd	%xmm1, %xmm3
    0000036d: 	unpckhpd	%xmm1, %xmm1
    00000371: 	subsd	%xmm4, %xmm3
    00000375: 	subsd	%xmm4, %xmm1
    00000379: 	addsd	%xmm3, %xmm2
    0000037d: 	addsd	%xmm2, %xmm1
    00000381: 	movapd	%xmm0, %xmm2
    00000385: 	unpckhpd	%xmm0, %xmm0
    00000389: 	subsd	%xmm4, %xmm2
    0000038d: 	subsd	%xmm4, %xmm0
    00000391: 	addsd	%xmm2, %xmm1
    00000395: 	addsd	%xmm1, %xmm0
    00000399: 	movsd	0x60(%rsp), %xmm1
    0000039f: 	comisd	%xmm0, %xmm1
    000003a3: 	jbe	.Ltmp110 # Offset: 931
    000003a5: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp110:
    000003ad: 	movsd	0x58(%rsp), %xmm1
    000003b3: 	comisd	%xmm0, %xmm1
    000003b7: 	jbe	.Ltmp111 # Offset: 951
.Ltmp223:
    000003bd: 	addl	$0x1, %r14d
    000003c1: 	cmpl	iterations(%rip), %r14d
    000003c8: 	jl	.Ltmp112 # Offset: 968
.Ltmp108:
    000003ce: 	movq	%r13, %rdi
    000003d1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 977
    000003d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003dd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003e4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003eb: 	je	.Ltmp113 # Offset: 1003
.Ltmp226:
    000003f1: 	movq	-0x20(%rax), %rbp
    000003f5: 	callq	clock@PLT # Offset: 1013
    000003fa: 	pxor	%xmm0, %xmm0
    000003fe: 	movq	%rax, end_time(%rip)
    00000405: 	movq	%rbp, %rdi
    00000408: 	subq	start_time(%rip), %rax
    0000040f: 	cvtsi2sd	%rax, %xmm0
    00000414: 	divsd	DATAat0x17358(%rip), %xmm0
    0000041c: 	callq	_Z13record_resultdPKc # Offset: 1052
    00000421: 	movq	0xc0(%rsp), %rdi
    00000429: 	leaq	0xd0(%rsp), %rax
    00000431: 	movq	%rax, 0x88(%rsp)
    00000439: 	cmpq	%rax, %rdi
    0000043c: 	je	.Ltmp114 # Offset: 1084
    0000043e: 	movq	0xd0(%rsp), %rax
    00000446: 	leaq	0x1(%rax), %rsi
    0000044a: 	callq	_ZdlPvm@PLT # Offset: 1098
.Ltmp114:
    0000044f: 	movq	0x90(%rsp), %rsi
    00000457: 	leaq	DATAat0x171e6(%rip), %rdx
    0000045e: 	movq	%r13, %rdi
    00000461: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1121
    00000466: 	callq	clock@PLT # Offset: 1126
    0000046b: 	movq	%rax, start_time(%rip)
    00000472: 	movl	iterations(%rip), %eax
    00000478: 	testl	%eax, %eax
    0000047a: 	jle	.Ltmp115 # Offset: 1146
    00000480: 	movsd	0x70(%rsp), %xmm2
    00000486: 	movsd	DATAat0x17370(%rip), %xmm1
    0000048e: 	xorl	%r14d, %r14d
    00000491: 	leaq	init_value(%rip), %rbp
    00000498: 	movsd	0x80(%rsp), %xmm0
    000004a1: 	addsd	0x68(%rsp), %xmm0
    000004a7: 	leaq	DATAat0x171d6(%rip), %r15
    000004ae: 	addsd	0x78(%rsp), %xmm0
    000004b4: 	movsd	%xmm1, 0x40(%rsp)
    000004ba: 	pxor	%xmm1, %xmm1
    000004be: 	movsd	%xmm1, 0x60(%rsp)
    000004c4: 	movsd	DATAat0x17350(%rip), %xmm1
    000004cc: 	addsd	%xmm0, %xmm2
    000004d0: 	movsd	%xmm1, 0x58(%rsp)
    000004d6: 	movapd	%xmm2, %xmm1
    000004da: 	movsd	%xmm2, 0x10(%rsp)
    000004e0: 	unpcklpd	%xmm1, %xmm1
    000004e4: 	movaps	%xmm1, (%rsp)
    000004e8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp119:
    000004f0: 	pxor	%xmm0, %xmm0
    000004f4: 	movq	%r12, %rax
    000004f7: 	movapd	%xmm0, %xmm1
    000004fb: 	movapd	%xmm0, %xmm2
    000004ff: 	nop # Size: 1
.Ltmp116:
    00000500: 	movapd	(%rsp), %xmm6
    00000505: 	movapd	(%rax), %xmm3
    00000509: 	addq	$0x30, %rax
    0000050d: 	addpd	%xmm6, %xmm3
    00000511: 	addpd	%xmm3, %xmm2
    00000515: 	movapd	-0x20(%rax), %xmm3
    0000051a: 	addpd	%xmm6, %xmm3
    0000051e: 	addpd	-0x10(%rax), %xmm6
    00000523: 	addpd	%xmm3, %xmm1
    00000527: 	addpd	%xmm6, %xmm0
    0000052b: 	cmpq	%rbx, %rax
    0000052e: 	jne	.Ltmp116 # Offset: 1326
    00000530: 	movsd	0x10(%rsp), %xmm4
    00000536: 	addsd	(%rbp), %xmm4
    0000053b: 	movapd	%xmm2, %xmm7
    0000053f: 	mulsd	0x40(%rsp), %xmm4
    00000545: 	unpckhpd	%xmm7, %xmm7
    00000549: 	movapd	%xmm7, %xmm3
    0000054d: 	subsd	%xmm4, %xmm3
    00000551: 	subsd	%xmm4, %xmm2
    00000555: 	addsd	%xmm3, %xmm2
    00000559: 	movapd	%xmm1, %xmm3
    0000055d: 	unpckhpd	%xmm1, %xmm1
    00000561: 	subsd	%xmm4, %xmm3
    00000565: 	subsd	%xmm4, %xmm1
    00000569: 	addsd	%xmm3, %xmm2
    0000056d: 	addsd	%xmm2, %xmm1
    00000571: 	movapd	%xmm0, %xmm2
    00000575: 	unpckhpd	%xmm0, %xmm0
    00000579: 	subsd	%xmm4, %xmm2
    0000057d: 	subsd	%xmm4, %xmm0
    00000581: 	addsd	%xmm2, %xmm1
    00000585: 	addsd	%xmm1, %xmm0
    00000589: 	movsd	0x60(%rsp), %xmm1
    0000058f: 	comisd	%xmm0, %xmm1
    00000593: 	jbe	.Ltmp117 # Offset: 1427
    00000595: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp117:
    0000059d: 	movsd	0x58(%rsp), %xmm1
    000005a3: 	comisd	%xmm0, %xmm1
    000005a7: 	jbe	.Ltmp118 # Offset: 1447
.Ltmp225:
    000005ad: 	addl	$0x1, %r14d
    000005b1: 	cmpl	iterations(%rip), %r14d
    000005b8: 	jl	.Ltmp119 # Offset: 1464
.Ltmp115:
    000005be: 	movq	%r13, %rdi
    000005c1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1473
    000005c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005cd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005d4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005db: 	je	.Ltmp120 # Offset: 1499
.Ltmp239:
    000005e1: 	movq	-0x20(%rax), %rbp
    000005e5: 	callq	clock@PLT # Offset: 1509
    000005ea: 	pxor	%xmm0, %xmm0
    000005ee: 	movq	%rax, end_time(%rip)
    000005f5: 	movq	%rbp, %rdi
    000005f8: 	subq	start_time(%rip), %rax
    000005ff: 	cvtsi2sd	%rax, %xmm0
    00000604: 	divsd	DATAat0x17358(%rip), %xmm0
    0000060c: 	callq	_Z13record_resultdPKc # Offset: 1548
    00000611: 	movq	0xc0(%rsp), %rdi
    00000619: 	cmpq	0x88(%rsp), %rdi
    00000621: 	je	.Ltmp121 # Offset: 1569
    00000623: 	movq	0xd0(%rsp), %rax
    0000062b: 	leaq	0x1(%rax), %rsi
    0000062f: 	callq	_ZdlPvm@PLT # Offset: 1583
.Ltmp121:
    00000634: 	movq	0x90(%rsp), %rsi
    0000063c: 	leaq	DATAat0x171fe(%rip), %rdx
    00000643: 	movq	%r13, %rdi
    00000646: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1606
    0000064b: 	callq	clock@PLT # Offset: 1611
    00000650: 	movl	iterations(%rip), %r15d
    00000657: 	movq	%rax, start_time(%rip)
    0000065e: 	testl	%r15d, %r15d
    00000661: 	jle	.Ltmp122 # Offset: 1633
    00000667: 	movsd	0x68(%rsp), %xmm1
    0000066d: 	movsd	DATAat0x17370(%rip), %xmm2
    00000675: 	xorl	%r14d, %r14d
    00000678: 	leaq	init_value(%rip), %rbp
    0000067f: 	leaq	DATAat0x171d6(%rip), %r15
    00000686: 	unpcklpd	%xmm1, %xmm1
    0000068a: 	movsd	%xmm2, 0x40(%rsp)
    00000690: 	pxor	%xmm2, %xmm2
    00000694: 	movaps	%xmm1, (%rsp)
    00000698: 	movsd	0x70(%rsp), %xmm1
    0000069e: 	movsd	%xmm2, 0x60(%rsp)
    000006a4: 	movsd	DATAat0x17350(%rip), %xmm2
    000006ac: 	unpcklpd	%xmm1, %xmm1
    000006b0: 	movsd	%xmm2, 0x58(%rsp)
    000006b6: 	movsd	0x80(%rsp), %xmm2
    000006bf: 	movaps	%xmm1, 0x10(%rsp)
    000006c4: 	movsd	0x78(%rsp), %xmm1
    000006ca: 	unpcklpd	%xmm2, %xmm2
    000006ce: 	unpcklpd	%xmm1, %xmm1
    000006d2: 	movaps	%xmm2, 0x30(%rsp)
    000006d7: 	movaps	%xmm1, 0x20(%rsp)
    000006dc: 	nopl	(%rax) # Size: 4
.Ltmp126:
    000006e0: 	pxor	%xmm1, %xmm1
    000006e4: 	movq	%r12, %rax
    000006e7: 	movapd	%xmm1, %xmm2
    000006eb: 	movapd	%xmm1, %xmm3
    000006ef: 	nop # Size: 1
.Ltmp123:
    000006f0: 	movapd	(%rsp), %xmm7
    000006f5: 	movapd	(%rax), %xmm0
    000006f9: 	addq	$0x30, %rax
    000006fd: 	movapd	0x30(%rsp), %xmm4
    00000703: 	movapd	0x20(%rsp), %xmm5
    00000709: 	addpd	%xmm7, %xmm0
    0000070d: 	movapd	0x10(%rsp), %xmm6
    00000713: 	addpd	%xmm4, %xmm0
    00000717: 	addpd	%xmm5, %xmm0
    0000071b: 	addpd	%xmm6, %xmm0
    0000071f: 	addpd	%xmm0, %xmm3
    00000723: 	movapd	-0x20(%rax), %xmm0
    00000728: 	addpd	%xmm7, %xmm0
    0000072c: 	addpd	-0x10(%rax), %xmm7
    00000731: 	addpd	%xmm4, %xmm0
    00000735: 	addpd	%xmm5, %xmm0
    00000739: 	addpd	%xmm6, %xmm0
    0000073d: 	addpd	%xmm0, %xmm2
    00000741: 	movapd	%xmm7, %xmm0
    00000745: 	addpd	%xmm4, %xmm0
    00000749: 	addpd	%xmm5, %xmm0
    0000074d: 	addpd	%xmm6, %xmm0
    00000751: 	addpd	%xmm0, %xmm1
    00000755: 	cmpq	%rbx, %rax
    00000758: 	jne	.Ltmp123 # Offset: 1880
    0000075a: 	movsd	0x68(%rsp), %xmm4
    00000760: 	addsd	(%rbp), %xmm4
    00000765: 	movapd	%xmm3, %xmm6
    00000769: 	addsd	0x80(%rsp), %xmm4
    00000772: 	addsd	0x78(%rsp), %xmm4
    00000778: 	unpckhpd	%xmm6, %xmm6
    0000077c: 	addsd	0x70(%rsp), %xmm4
    00000782: 	mulsd	0x40(%rsp), %xmm4
    00000788: 	movapd	%xmm6, %xmm0
    0000078c: 	subsd	%xmm4, %xmm3
    00000790: 	subsd	%xmm4, %xmm0
    00000794: 	addsd	%xmm3, %xmm0
    00000798: 	movapd	%xmm2, %xmm3
    0000079c: 	unpckhpd	%xmm2, %xmm2
    000007a0: 	subsd	%xmm4, %xmm3
    000007a4: 	subsd	%xmm4, %xmm2
    000007a8: 	addsd	%xmm3, %xmm0
    000007ac: 	addsd	%xmm2, %xmm0
    000007b0: 	movapd	%xmm1, %xmm2
    000007b4: 	unpckhpd	%xmm1, %xmm1
    000007b8: 	subsd	%xmm4, %xmm2
    000007bc: 	subsd	%xmm4, %xmm1
    000007c0: 	addsd	%xmm2, %xmm0
    000007c4: 	addsd	%xmm1, %xmm0
    000007c8: 	movsd	0x60(%rsp), %xmm1
    000007ce: 	comisd	%xmm0, %xmm1
    000007d2: 	jbe	.Ltmp124 # Offset: 2002
    000007d4: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp124:
    000007dc: 	movsd	0x58(%rsp), %xmm1
    000007e2: 	comisd	%xmm0, %xmm1
    000007e6: 	jbe	.Ltmp125 # Offset: 2022
.Ltmp224:
    000007ec: 	addl	$0x1, %r14d
    000007f0: 	cmpl	iterations(%rip), %r14d
    000007f7: 	jl	.Ltmp126 # Offset: 2039
.Ltmp122:
    000007fd: 	movq	%r13, %rdi
    00000800: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2048
    00000805: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000080c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000813: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000081a: 	je	.Ltmp127 # Offset: 2074
.Ltmp238:
    00000820: 	movq	-0x20(%rax), %rbp
    00000824: 	callq	clock@PLT # Offset: 2084
    00000829: 	pxor	%xmm0, %xmm0
    0000082d: 	movq	%rax, end_time(%rip)
    00000834: 	movq	%rbp, %rdi
    00000837: 	subq	start_time(%rip), %rax
    0000083e: 	cvtsi2sd	%rax, %xmm0
    00000843: 	divsd	DATAat0x17358(%rip), %xmm0
    0000084b: 	callq	_Z13record_resultdPKc # Offset: 2123
    00000850: 	movq	0xc0(%rsp), %rdi
    00000858: 	cmpq	0x88(%rsp), %rdi
    00000860: 	je	.Ltmp128 # Offset: 2144
    00000862: 	movq	0xd0(%rsp), %rax
    0000086a: 	leaq	0x1(%rax), %rsi
    0000086e: 	callq	_ZdlPvm@PLT # Offset: 2158
.Ltmp128:
    00000873: 	movq	0x90(%rsp), %rsi
    0000087b: 	leaq	DATAat0x17217(%rip), %rdx
    00000882: 	movq	%r13, %rdi
    00000885: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2181
    0000088a: 	callq	clock@PLT # Offset: 2186
    0000088f: 	movl	iterations(%rip), %r14d
    00000896: 	movq	%rax, start_time(%rip)
    0000089d: 	testl	%r14d, %r14d
    000008a0: 	jle	.Ltmp129 # Offset: 2208
    000008a6: 	movsd	0x68(%rsp), %xmm1
    000008ac: 	movsd	DATAat0x17370(%rip), %xmm2
    000008b4: 	xorl	%r14d, %r14d
    000008b7: 	leaq	init_value(%rip), %rbp
    000008be: 	leaq	DATAat0x171d6(%rip), %r15
    000008c5: 	unpcklpd	%xmm1, %xmm1
    000008c9: 	movsd	%xmm2, 0x40(%rsp)
    000008cf: 	movsd	DATAat0x17350(%rip), %xmm2
    000008d7: 	movaps	%xmm1, (%rsp)
    000008db: 	pxor	%xmm1, %xmm1
    000008df: 	movsd	%xmm1, 0x60(%rsp)
    000008e5: 	movsd	%xmm2, 0x58(%rsp)
    000008eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp133:
    000008f0: 	pxor	%xmm1, %xmm1
    000008f4: 	movq	%r12, %rax
    000008f7: 	movapd	%xmm1, %xmm2
    000008fb: 	movapd	%xmm1, %xmm3
    000008ff: 	nop # Size: 1
.Ltmp130:
    00000900: 	movapd	(%rsp), %xmm7
    00000905: 	movapd	(%rax), %xmm0
    00000909: 	addq	$0x30, %rax
    0000090d: 	subpd	%xmm7, %xmm0
    00000911: 	addpd	%xmm0, %xmm3
    00000915: 	movapd	-0x20(%rax), %xmm0
    0000091a: 	subpd	%xmm7, %xmm0
    0000091e: 	addpd	%xmm0, %xmm2
    00000922: 	movapd	-0x10(%rax), %xmm0
    00000927: 	subpd	%xmm7, %xmm0
    0000092b: 	addpd	%xmm0, %xmm1
    0000092f: 	cmpq	%rbx, %rax
    00000932: 	jne	.Ltmp130 # Offset: 2354
    00000934: 	movsd	(%rbp), %xmm4
    00000939: 	subsd	0x68(%rsp), %xmm4
    0000093f: 	movapd	%xmm3, %xmm7
    00000943: 	mulsd	0x40(%rsp), %xmm4
    00000949: 	unpckhpd	%xmm7, %xmm7
    0000094d: 	movapd	%xmm7, %xmm0
    00000951: 	subsd	%xmm4, %xmm3
    00000955: 	subsd	%xmm4, %xmm0
    00000959: 	addsd	%xmm3, %xmm0
    0000095d: 	movapd	%xmm2, %xmm3
    00000961: 	unpckhpd	%xmm2, %xmm2
    00000965: 	subsd	%xmm4, %xmm3
    00000969: 	subsd	%xmm4, %xmm2
    0000096d: 	addsd	%xmm3, %xmm0
    00000971: 	addsd	%xmm2, %xmm0
    00000975: 	movapd	%xmm1, %xmm2
    00000979: 	unpckhpd	%xmm1, %xmm1
    0000097d: 	subsd	%xmm4, %xmm2
    00000981: 	subsd	%xmm4, %xmm1
    00000985: 	addsd	%xmm2, %xmm0
    00000989: 	addsd	%xmm1, %xmm0
    0000098d: 	movsd	0x60(%rsp), %xmm1
    00000993: 	comisd	%xmm0, %xmm1
    00000997: 	jbe	.Ltmp131 # Offset: 2455
    00000999: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp131:
    000009a1: 	movsd	0x58(%rsp), %xmm1
    000009a7: 	comisd	%xmm0, %xmm1
    000009ab: 	jbe	.Ltmp132 # Offset: 2475
.Ltmp222:
    000009b1: 	addl	$0x1, %r14d
    000009b5: 	cmpl	iterations(%rip), %r14d
    000009bc: 	jl	.Ltmp133 # Offset: 2492
.Ltmp129:
    000009c2: 	movq	%r13, %rdi
    000009c5: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2501
    000009ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009d1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009df: 	je	.Ltmp134 # Offset: 2527
.Ltmp237:
    000009e5: 	movq	-0x20(%rax), %rbp
    000009e9: 	callq	clock@PLT # Offset: 2537
    000009ee: 	pxor	%xmm0, %xmm0
    000009f2: 	movq	%rax, end_time(%rip)
    000009f9: 	movq	%rbp, %rdi
    000009fc: 	subq	start_time(%rip), %rax
    00000a03: 	cvtsi2sd	%rax, %xmm0
    00000a08: 	divsd	DATAat0x17358(%rip), %xmm0
    00000a10: 	callq	_Z13record_resultdPKc # Offset: 2576
    00000a15: 	movq	0xc0(%rsp), %rdi
    00000a1d: 	cmpq	0x88(%rsp), %rdi
    00000a25: 	je	.Ltmp135 # Offset: 2597
    00000a27: 	movq	0xd0(%rsp), %rax
    00000a2f: 	leaq	0x1(%rax), %rsi
    00000a33: 	callq	_ZdlPvm@PLT # Offset: 2611
.Ltmp135:
    00000a38: 	movq	0x90(%rsp), %rsi
    00000a40: 	leaq	DATAat0x1722a(%rip), %rdx
    00000a47: 	movq	%r13, %rdi
    00000a4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2634
    00000a4f: 	callq	clock@PLT # Offset: 2639
    00000a54: 	movl	iterations(%rip), %ebp
    00000a5a: 	movq	%rax, start_time(%rip)
    00000a61: 	testl	%ebp, %ebp
    00000a63: 	jle	.Ltmp136 # Offset: 2659
    00000a69: 	movsd	0x70(%rsp), %xmm1
    00000a6f: 	movsd	DATAat0x17370(%rip), %xmm2
    00000a77: 	xorl	%r14d, %r14d
    00000a7a: 	leaq	init_value(%rip), %rbp
    00000a81: 	movsd	0x80(%rsp), %xmm0
    00000a8a: 	addsd	0x68(%rsp), %xmm0
    00000a90: 	leaq	DATAat0x171d6(%rip), %r15
    00000a97: 	addsd	0x78(%rsp), %xmm0
    00000a9d: 	movsd	%xmm2, 0x40(%rsp)
    00000aa3: 	pxor	%xmm2, %xmm2
    00000aa7: 	movsd	%xmm2, 0x60(%rsp)
    00000aad: 	movsd	DATAat0x17350(%rip), %xmm2
    00000ab5: 	addsd	%xmm0, %xmm1
    00000ab9: 	movsd	%xmm2, 0x58(%rsp)
    00000abf: 	movapd	%xmm1, %xmm2
    00000ac3: 	movsd	%xmm1, 0x10(%rsp)
    00000ac9: 	unpcklpd	%xmm2, %xmm2
    00000acd: 	movaps	%xmm2, (%rsp)
    00000ad1: 	nopl	(%rax) # Size: 7
.Ltmp140:
    00000ad8: 	pxor	%xmm1, %xmm1
    00000adc: 	movq	%r12, %rax
    00000adf: 	movapd	%xmm1, %xmm2
    00000ae3: 	movapd	%xmm1, %xmm3
    00000ae7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp137:
    00000af0: 	movapd	(%rsp), %xmm4
    00000af5: 	movapd	(%rax), %xmm0
    00000af9: 	addq	$0x30, %rax
    00000afd: 	subpd	%xmm4, %xmm0
    00000b01: 	addpd	%xmm0, %xmm3
    00000b05: 	movapd	-0x20(%rax), %xmm0
    00000b0a: 	subpd	%xmm4, %xmm0
    00000b0e: 	addpd	%xmm0, %xmm2
    00000b12: 	movapd	-0x10(%rax), %xmm0
    00000b17: 	subpd	%xmm4, %xmm0
    00000b1b: 	addpd	%xmm0, %xmm1
    00000b1f: 	cmpq	%rax, %rbx
    00000b22: 	jne	.Ltmp137 # Offset: 2850
    00000b24: 	movsd	(%rbp), %xmm4
    00000b29: 	subsd	0x10(%rsp), %xmm4
    00000b2f: 	movapd	%xmm3, %xmm6
    00000b33: 	mulsd	0x40(%rsp), %xmm4
    00000b39: 	unpckhpd	%xmm6, %xmm6
    00000b3d: 	movapd	%xmm6, %xmm0
    00000b41: 	subsd	%xmm4, %xmm3
    00000b45: 	subsd	%xmm4, %xmm0
    00000b49: 	addsd	%xmm3, %xmm0
    00000b4d: 	movapd	%xmm2, %xmm3
    00000b51: 	unpckhpd	%xmm2, %xmm2
    00000b55: 	subsd	%xmm4, %xmm3
    00000b59: 	subsd	%xmm4, %xmm2
    00000b5d: 	addsd	%xmm3, %xmm0
    00000b61: 	addsd	%xmm2, %xmm0
    00000b65: 	movapd	%xmm1, %xmm2
    00000b69: 	unpckhpd	%xmm1, %xmm1
    00000b6d: 	subsd	%xmm4, %xmm2
    00000b71: 	subsd	%xmm4, %xmm1
    00000b75: 	addsd	%xmm2, %xmm0
    00000b79: 	addsd	%xmm1, %xmm0
    00000b7d: 	movsd	0x60(%rsp), %xmm1
    00000b83: 	comisd	%xmm0, %xmm1
    00000b87: 	jbe	.Ltmp138 # Offset: 2951
    00000b89: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp138:
    00000b91: 	movsd	0x58(%rsp), %xmm1
    00000b97: 	comisd	%xmm0, %xmm1
    00000b9b: 	jbe	.Ltmp139 # Offset: 2971
.Ltmp221:
    00000ba1: 	addl	$0x1, %r14d
    00000ba5: 	cmpl	iterations(%rip), %r14d
    00000bac: 	jl	.Ltmp140 # Offset: 2988
.Ltmp136:
    00000bb2: 	movq	%r13, %rdi
    00000bb5: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2997
    00000bba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bc1: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bc8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bcf: 	je	.Ltmp141 # Offset: 3023
.Ltmp236:
    00000bd5: 	movq	-0x20(%rax), %rbp
    00000bd9: 	callq	clock@PLT # Offset: 3033
    00000bde: 	pxor	%xmm0, %xmm0
    00000be2: 	movq	%rax, end_time(%rip)
    00000be9: 	movq	%rbp, %rdi
    00000bec: 	subq	start_time(%rip), %rax
    00000bf3: 	cvtsi2sd	%rax, %xmm0
    00000bf8: 	divsd	DATAat0x17358(%rip), %xmm0
    00000c00: 	callq	_Z13record_resultdPKc # Offset: 3072
    00000c05: 	movq	0xc0(%rsp), %rdi
    00000c0d: 	cmpq	0x88(%rsp), %rdi
    00000c15: 	je	.Ltmp142 # Offset: 3093
    00000c17: 	movq	0xd0(%rsp), %rax
    00000c1f: 	leaq	0x1(%rax), %rsi
    00000c23: 	callq	_ZdlPvm@PLT # Offset: 3107
.Ltmp142:
    00000c28: 	movq	0x90(%rsp), %rsi
    00000c30: 	leaq	DATAat0x17247(%rip), %rdx
    00000c37: 	movq	%r13, %rdi
    00000c3a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3130
    00000c3f: 	callq	clock@PLT # Offset: 3135
    00000c44: 	movl	iterations(%rip), %r11d
    00000c4b: 	movq	%rax, start_time(%rip)
    00000c52: 	testl	%r11d, %r11d
    00000c55: 	jle	.Ltmp143 # Offset: 3157
    00000c5b: 	movsd	0x68(%rsp), %xmm1
    00000c61: 	movsd	0x70(%rsp), %xmm2
    00000c67: 	xorl	%r14d, %r14d
    00000c6a: 	leaq	init_value(%rip), %rbp
    00000c71: 	leaq	DATAat0x171d6(%rip), %r15
    00000c78: 	unpcklpd	%xmm1, %xmm1
    00000c7c: 	unpcklpd	%xmm2, %xmm2
    00000c80: 	movaps	%xmm1, (%rsp)
    00000c84: 	movsd	DATAat0x17370(%rip), %xmm1
    00000c8c: 	movaps	%xmm2, 0x10(%rsp)
    00000c91: 	movsd	0x80(%rsp), %xmm2
    00000c9a: 	movsd	%xmm1, 0x40(%rsp)
    00000ca0: 	pxor	%xmm1, %xmm1
    00000ca4: 	movsd	%xmm1, 0x60(%rsp)
    00000caa: 	movsd	DATAat0x17350(%rip), %xmm1
    00000cb2: 	unpcklpd	%xmm2, %xmm2
    00000cb6: 	movaps	%xmm2, 0x30(%rsp)
    00000cbb: 	movsd	%xmm1, 0x58(%rsp)
    00000cc1: 	movsd	0x78(%rsp), %xmm1
    00000cc7: 	unpcklpd	%xmm1, %xmm1
    00000ccb: 	movaps	%xmm1, 0x20(%rsp)
.Ltmp147:
    00000cd0: 	pxor	%xmm1, %xmm1
    00000cd4: 	movq	%r12, %rax
    00000cd7: 	movapd	%xmm1, %xmm2
    00000cdb: 	movapd	%xmm1, %xmm3
    00000cdf: 	nop # Size: 1
.Ltmp144:
    00000ce0: 	movapd	(%rsp), %xmm5
    00000ce5: 	movapd	(%rax), %xmm0
    00000ce9: 	addq	$0x30, %rax
    00000ced: 	movapd	0x30(%rsp), %xmm6
    00000cf3: 	movapd	0x20(%rsp), %xmm7
    00000cf9: 	subpd	%xmm5, %xmm0
    00000cfd: 	movapd	0x10(%rsp), %xmm4
    00000d03: 	subpd	%xmm6, %xmm0
    00000d07: 	subpd	%xmm7, %xmm0
    00000d0b: 	subpd	%xmm4, %xmm0
    00000d0f: 	addpd	%xmm0, %xmm3
    00000d13: 	movapd	-0x20(%rax), %xmm0
    00000d18: 	subpd	%xmm5, %xmm0
    00000d1c: 	subpd	%xmm6, %xmm0
    00000d20: 	subpd	%xmm7, %xmm0
    00000d24: 	subpd	%xmm4, %xmm0
    00000d28: 	addpd	%xmm0, %xmm2
    00000d2c: 	movapd	-0x10(%rax), %xmm0
    00000d31: 	subpd	%xmm5, %xmm0
    00000d35: 	subpd	%xmm6, %xmm0
    00000d39: 	subpd	%xmm7, %xmm0
    00000d3d: 	subpd	%xmm4, %xmm0
    00000d41: 	addpd	%xmm0, %xmm1
    00000d45: 	cmpq	%rbx, %rax
    00000d48: 	jne	.Ltmp144 # Offset: 3400
    00000d4a: 	movsd	(%rbp), %xmm0
    00000d4f: 	subsd	0x68(%rsp), %xmm0
    00000d55: 	movapd	%xmm3, %xmm7
    00000d59: 	subsd	0x80(%rsp), %xmm0
    00000d62: 	subsd	0x78(%rsp), %xmm0
    00000d68: 	unpckhpd	%xmm7, %xmm7
    00000d6c: 	subsd	0x70(%rsp), %xmm0
    00000d72: 	mulsd	0x40(%rsp), %xmm0
    00000d78: 	movapd	%xmm7, %xmm4
    00000d7c: 	subsd	%xmm0, %xmm4
    00000d80: 	subsd	%xmm0, %xmm3
    00000d84: 	addsd	%xmm4, %xmm3
    00000d88: 	movapd	%xmm2, %xmm4
    00000d8c: 	unpckhpd	%xmm2, %xmm2
    00000d90: 	subsd	%xmm0, %xmm4
    00000d94: 	subsd	%xmm0, %xmm2
    00000d98: 	addsd	%xmm4, %xmm3
    00000d9c: 	addsd	%xmm3, %xmm2
    00000da0: 	movapd	%xmm1, %xmm3
    00000da4: 	unpckhpd	%xmm1, %xmm1
    00000da8: 	subsd	%xmm0, %xmm3
    00000dac: 	subsd	%xmm0, %xmm1
    00000db0: 	addsd	%xmm3, %xmm2
    00000db4: 	addsd	%xmm1, %xmm2
    00000db8: 	movsd	0x60(%rsp), %xmm1
    00000dbe: 	comisd	%xmm2, %xmm1
    00000dc2: 	movapd	%xmm2, %xmm0
    00000dc6: 	jbe	.Ltmp145 # Offset: 3526
    00000dc8: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp145:
    00000dd0: 	movsd	0x58(%rsp), %xmm1
    00000dd6: 	comisd	%xmm0, %xmm1
    00000dda: 	jbe	.Ltmp146 # Offset: 3546
.Ltmp220:
    00000de0: 	addl	$0x1, %r14d
    00000de4: 	cmpl	iterations(%rip), %r14d
    00000deb: 	jl	.Ltmp147 # Offset: 3563
.Ltmp143:
    00000df1: 	movq	%r13, %rdi
    00000df4: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3572
    00000df9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e00: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e07: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e0e: 	je	.Ltmp148 # Offset: 3598
.Ltmp235:
    00000e14: 	movq	-0x20(%rax), %rbp
    00000e18: 	callq	clock@PLT # Offset: 3608
    00000e1d: 	pxor	%xmm0, %xmm0
    00000e21: 	movq	%rax, end_time(%rip)
    00000e28: 	movq	%rbp, %rdi
    00000e2b: 	subq	start_time(%rip), %rax
    00000e32: 	cvtsi2sd	%rax, %xmm0
    00000e37: 	divsd	DATAat0x17358(%rip), %xmm0
    00000e3f: 	callq	_Z13record_resultdPKc # Offset: 3647
    00000e44: 	movq	0xc0(%rsp), %rdi
    00000e4c: 	cmpq	0x88(%rsp), %rdi
    00000e54: 	je	.Ltmp149 # Offset: 3668
    00000e56: 	movq	0xd0(%rsp), %rax
    00000e5e: 	leaq	0x1(%rax), %rsi
    00000e62: 	callq	_ZdlPvm@PLT # Offset: 3682
.Ltmp149:
    00000e67: 	movq	0x90(%rsp), %rsi
    00000e6f: 	leaq	DATAat0x17265(%rip), %rdx
    00000e76: 	movq	%r13, %rdi
    00000e79: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3705
    00000e7e: 	callq	clock@PLT # Offset: 3710
    00000e83: 	movl	iterations(%rip), %r10d
    00000e8a: 	movq	%rax, start_time(%rip)
    00000e91: 	testl	%r10d, %r10d
    00000e94: 	jle	.Ltmp150 # Offset: 3732
    00000e9a: 	movsd	0x68(%rsp), %xmm1
    00000ea0: 	movsd	DATAat0x17350(%rip), %xmm2
    00000ea8: 	xorl	%r14d, %r14d
    00000eab: 	leaq	init_value(%rip), %rbp
    00000eb2: 	leaq	DATAat0x171d6(%rip), %r15
    00000eb9: 	unpcklpd	%xmm1, %xmm1
    00000ebd: 	movsd	%xmm2, 0x58(%rsp)
    00000ec3: 	movaps	%xmm1, (%rsp)
    00000ec7: 	movsd	DATAat0x17370(%rip), %xmm1
    00000ecf: 	movsd	%xmm1, 0x40(%rsp)
    00000ed5: 	pxor	%xmm1, %xmm1
    00000ed9: 	movsd	%xmm1, 0x60(%rsp)
    00000edf: 	nop # Size: 1
.Ltmp154:
    00000ee0: 	pxor	%xmm0, %xmm0
    00000ee4: 	movq	%r12, %rax
    00000ee7: 	movapd	%xmm0, %xmm1
    00000eeb: 	movapd	%xmm0, %xmm2
    00000eef: 	nop # Size: 1
.Ltmp151:
    00000ef0: 	movapd	(%rsp), %xmm5
    00000ef5: 	movapd	(%rax), %xmm3
    00000ef9: 	addq	$0x30, %rax
    00000efd: 	mulpd	%xmm5, %xmm3
    00000f01: 	addpd	%xmm3, %xmm2
    00000f05: 	movapd	-0x20(%rax), %xmm3
    00000f0a: 	mulpd	%xmm5, %xmm3
    00000f0e: 	mulpd	-0x10(%rax), %xmm5
    00000f13: 	addpd	%xmm3, %xmm1
    00000f17: 	addpd	%xmm5, %xmm0
    00000f1b: 	cmpq	%rbx, %rax
    00000f1e: 	jne	.Ltmp151 # Offset: 3870
    00000f20: 	movsd	0x68(%rsp), %xmm4
    00000f26: 	mulsd	(%rbp), %xmm4
    00000f2b: 	movapd	%xmm2, %xmm6
    00000f2f: 	mulsd	0x40(%rsp), %xmm4
    00000f35: 	unpckhpd	%xmm6, %xmm6
    00000f39: 	movapd	%xmm6, %xmm3
    00000f3d: 	subsd	%xmm4, %xmm3
    00000f41: 	subsd	%xmm4, %xmm2
    00000f45: 	addsd	%xmm3, %xmm2
    00000f49: 	movapd	%xmm1, %xmm3
    00000f4d: 	unpckhpd	%xmm1, %xmm1
    00000f51: 	subsd	%xmm4, %xmm3
    00000f55: 	subsd	%xmm4, %xmm1
    00000f59: 	addsd	%xmm3, %xmm2
    00000f5d: 	addsd	%xmm2, %xmm1
    00000f61: 	movapd	%xmm0, %xmm2
    00000f65: 	unpckhpd	%xmm0, %xmm0
    00000f69: 	subsd	%xmm4, %xmm2
    00000f6d: 	subsd	%xmm4, %xmm0
    00000f71: 	addsd	%xmm2, %xmm1
    00000f75: 	addsd	%xmm1, %xmm0
    00000f79: 	movsd	0x60(%rsp), %xmm1
    00000f7f: 	comisd	%xmm0, %xmm1
    00000f83: 	jbe	.Ltmp152 # Offset: 3971
    00000f85: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp152:
    00000f8d: 	movsd	0x58(%rsp), %xmm1
    00000f93: 	comisd	%xmm0, %xmm1
    00000f97: 	jbe	.Ltmp153 # Offset: 3991
.Ltmp219:
    00000f9d: 	addl	$0x1, %r14d
    00000fa1: 	cmpl	iterations(%rip), %r14d
    00000fa8: 	jl	.Ltmp154 # Offset: 4008
.Ltmp150:
    00000fae: 	movq	%r13, %rdi
    00000fb1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4017
    00000fb6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fbd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fc4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fcb: 	je	.Ltmp155 # Offset: 4043
.Ltmp234:
    00000fd1: 	movq	-0x20(%rax), %rbp
    00000fd5: 	callq	clock@PLT # Offset: 4053
    00000fda: 	pxor	%xmm0, %xmm0
    00000fde: 	movq	%rax, end_time(%rip)
    00000fe5: 	movq	%rbp, %rdi
    00000fe8: 	subq	start_time(%rip), %rax
    00000fef: 	cvtsi2sd	%rax, %xmm0
    00000ff4: 	divsd	DATAat0x17358(%rip), %xmm0
    00000ffc: 	callq	_Z13record_resultdPKc # Offset: 4092
    00001001: 	movq	0xc0(%rsp), %rdi
    00001009: 	cmpq	0x88(%rsp), %rdi
    00001011: 	je	.Ltmp156 # Offset: 4113
    00001013: 	movq	0xd0(%rsp), %rax
    0000101b: 	leaq	0x1(%rax), %rsi
    0000101f: 	callq	_ZdlPvm@PLT # Offset: 4127
.Ltmp156:
    00001024: 	movq	0x90(%rsp), %rsi
    0000102c: 	leaq	DATAat0x17278(%rip), %rdx
    00001033: 	movq	%r13, %rdi
    00001036: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4150
    0000103b: 	callq	clock@PLT # Offset: 4155
    00001040: 	movl	iterations(%rip), %r9d
    00001047: 	movq	%rax, start_time(%rip)
    0000104e: 	testl	%r9d, %r9d
    00001051: 	jle	.Ltmp157 # Offset: 4177
    00001057: 	movsd	0x70(%rsp), %xmm1
    0000105d: 	movsd	DATAat0x17370(%rip), %xmm2
    00001065: 	xorl	%r14d, %r14d
    00001068: 	leaq	init_value(%rip), %rbp
    0000106f: 	movsd	0x80(%rsp), %xmm0
    00001078: 	mulsd	0x68(%rsp), %xmm0
    0000107e: 	leaq	DATAat0x171d6(%rip), %r15
    00001085: 	mulsd	0x78(%rsp), %xmm0
    0000108b: 	movsd	%xmm2, 0x40(%rsp)
    00001091: 	pxor	%xmm2, %xmm2
    00001095: 	movsd	%xmm2, 0x60(%rsp)
    0000109b: 	movsd	DATAat0x17350(%rip), %xmm2
    000010a3: 	movsd	%xmm2, 0x58(%rsp)
    000010a9: 	mulsd	%xmm0, %xmm1
    000010ad: 	movapd	%xmm1, %xmm2
    000010b1: 	movsd	%xmm1, 0x10(%rsp)
    000010b7: 	unpcklpd	%xmm2, %xmm2
    000010bb: 	movaps	%xmm2, (%rsp)
    000010bf: 	nop # Size: 1
.Ltmp161:
    000010c0: 	pxor	%xmm0, %xmm0
    000010c4: 	movq	%r12, %rax
    000010c7: 	movapd	%xmm0, %xmm1
    000010cb: 	movapd	%xmm0, %xmm2
    000010cf: 	nop # Size: 1
.Ltmp158:
    000010d0: 	movapd	(%rsp), %xmm6
    000010d5: 	movapd	(%rax), %xmm3
    000010d9: 	addq	$0x30, %rax
    000010dd: 	mulpd	%xmm6, %xmm3
    000010e1: 	addpd	%xmm3, %xmm2
    000010e5: 	movapd	-0x20(%rax), %xmm3
    000010ea: 	mulpd	%xmm6, %xmm3
    000010ee: 	mulpd	-0x10(%rax), %xmm6
    000010f3: 	addpd	%xmm3, %xmm1
    000010f7: 	addpd	%xmm6, %xmm0
    000010fb: 	cmpq	%rbx, %rax
    000010fe: 	jne	.Ltmp158 # Offset: 4350
    00001100: 	movsd	0x10(%rsp), %xmm4
    00001106: 	mulsd	(%rbp), %xmm4
    0000110b: 	movapd	%xmm2, %xmm7
    0000110f: 	mulsd	0x40(%rsp), %xmm4
    00001115: 	unpckhpd	%xmm7, %xmm7
    00001119: 	movapd	%xmm7, %xmm3
    0000111d: 	subsd	%xmm4, %xmm3
    00001121: 	subsd	%xmm4, %xmm2
    00001125: 	addsd	%xmm3, %xmm2
    00001129: 	movapd	%xmm1, %xmm3
    0000112d: 	unpckhpd	%xmm1, %xmm1
    00001131: 	subsd	%xmm4, %xmm3
    00001135: 	subsd	%xmm4, %xmm1
    00001139: 	addsd	%xmm3, %xmm2
    0000113d: 	addsd	%xmm2, %xmm1
    00001141: 	movapd	%xmm0, %xmm2
    00001145: 	unpckhpd	%xmm0, %xmm0
    00001149: 	subsd	%xmm4, %xmm2
    0000114d: 	subsd	%xmm4, %xmm0
    00001151: 	addsd	%xmm2, %xmm1
    00001155: 	addsd	%xmm1, %xmm0
    00001159: 	movsd	0x60(%rsp), %xmm1
    0000115f: 	comisd	%xmm0, %xmm1
    00001163: 	jbe	.Ltmp159 # Offset: 4451
    00001165: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp159:
    0000116d: 	movsd	0x58(%rsp), %xmm1
    00001173: 	comisd	%xmm0, %xmm1
    00001177: 	jbe	.Ltmp160 # Offset: 4471
.Ltmp218:
    0000117d: 	addl	$0x1, %r14d
    00001181: 	cmpl	iterations(%rip), %r14d
    00001188: 	jl	.Ltmp161 # Offset: 4488
.Ltmp157:
    0000118e: 	movq	%r13, %rdi
    00001191: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4497
    00001196: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000119d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000011a4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011ab: 	je	.Ltmp162 # Offset: 4523
.Ltmp233:
    000011b1: 	movq	-0x20(%rax), %rbp
    000011b5: 	callq	clock@PLT # Offset: 4533
    000011ba: 	pxor	%xmm0, %xmm0
    000011be: 	movq	%rax, end_time(%rip)
    000011c5: 	movq	%rbp, %rdi
    000011c8: 	subq	start_time(%rip), %rax
    000011cf: 	cvtsi2sd	%rax, %xmm0
    000011d4: 	divsd	DATAat0x17358(%rip), %xmm0
    000011dc: 	callq	_Z13record_resultdPKc # Offset: 4572
    000011e1: 	movq	0xc0(%rsp), %rdi
    000011e9: 	cmpq	0x88(%rsp), %rdi
    000011f1: 	je	.Ltmp163 # Offset: 4593
    000011f3: 	movq	0xd0(%rsp), %rax
    000011fb: 	leaq	0x1(%rax), %rsi
    000011ff: 	callq	_ZdlPvm@PLT # Offset: 4607
.Ltmp163:
    00001204: 	movq	0x90(%rsp), %rsi
    0000120c: 	leaq	DATAat0x17308(%rip), %rdx
    00001213: 	movq	%r13, %rdi
    00001216: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4630
    0000121b: 	callq	clock@PLT # Offset: 4635
    00001220: 	movl	iterations(%rip), %r8d
    00001227: 	movq	%rax, start_time(%rip)
    0000122e: 	testl	%r8d, %r8d
    00001231: 	jle	.Ltmp164 # Offset: 4657
    00001237: 	movsd	0x70(%rsp), %xmm2
    0000123d: 	movsd	DATAat0x17370(%rip), %xmm1
    00001245: 	xorl	%r14d, %r14d
    00001248: 	leaq	init_value(%rip), %rbp
    0000124f: 	movsd	0x80(%rsp), %xmm0
    00001258: 	mulsd	0x68(%rsp), %xmm0
    0000125e: 	leaq	DATAat0x171d6(%rip), %r15
    00001265: 	mulsd	0x78(%rsp), %xmm0
    0000126b: 	movsd	%xmm1, 0x40(%rsp)
    00001271: 	pxor	%xmm1, %xmm1
    00001275: 	movsd	%xmm1, 0x60(%rsp)
    0000127b: 	movsd	DATAat0x17350(%rip), %xmm1
    00001283: 	movsd	%xmm1, 0x58(%rsp)
    00001289: 	mulsd	%xmm0, %xmm2
    0000128d: 	movapd	%xmm2, %xmm1
    00001291: 	movsd	%xmm2, 0x10(%rsp)
    00001297: 	unpcklpd	%xmm1, %xmm1
    0000129b: 	movaps	%xmm1, (%rsp)
    0000129f: 	nop # Size: 1
.Ltmp168:
    000012a0: 	pxor	%xmm0, %xmm0
    000012a4: 	movq	%r12, %rax
    000012a7: 	movapd	%xmm0, %xmm1
    000012ab: 	movapd	%xmm0, %xmm2
    000012af: 	nop # Size: 1
.Ltmp165:
    000012b0: 	movapd	(%rsp), %xmm7
    000012b5: 	movapd	(%rax), %xmm3
    000012b9: 	addq	$0x30, %rax
    000012bd: 	addpd	%xmm7, %xmm3
    000012c1: 	addpd	%xmm3, %xmm2
    000012c5: 	movapd	-0x20(%rax), %xmm3
    000012ca: 	addpd	%xmm7, %xmm3
    000012ce: 	addpd	-0x10(%rax), %xmm7
    000012d3: 	addpd	%xmm3, %xmm1
    000012d7: 	addpd	%xmm7, %xmm0
    000012db: 	cmpq	%rbx, %rax
    000012de: 	jne	.Ltmp165 # Offset: 4830
    000012e0: 	movsd	0x10(%rsp), %xmm4
    000012e6: 	addsd	(%rbp), %xmm4
    000012eb: 	movapd	%xmm2, %xmm6
    000012ef: 	mulsd	0x40(%rsp), %xmm4
    000012f5: 	unpckhpd	%xmm6, %xmm6
    000012f9: 	movapd	%xmm6, %xmm3
    000012fd: 	subsd	%xmm4, %xmm3
    00001301: 	subsd	%xmm4, %xmm2
    00001305: 	addsd	%xmm3, %xmm2
    00001309: 	movapd	%xmm1, %xmm3
    0000130d: 	unpckhpd	%xmm1, %xmm1
    00001311: 	subsd	%xmm4, %xmm3
    00001315: 	subsd	%xmm4, %xmm1
    00001319: 	addsd	%xmm3, %xmm2
    0000131d: 	addsd	%xmm2, %xmm1
    00001321: 	movapd	%xmm0, %xmm2
    00001325: 	unpckhpd	%xmm0, %xmm0
    00001329: 	subsd	%xmm4, %xmm2
    0000132d: 	subsd	%xmm4, %xmm0
    00001331: 	addsd	%xmm2, %xmm1
    00001335: 	addsd	%xmm1, %xmm0
    00001339: 	movsd	0x60(%rsp), %xmm1
    0000133f: 	comisd	%xmm0, %xmm1
    00001343: 	jbe	.Ltmp166 # Offset: 4931
    00001345: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp166:
    0000134d: 	movsd	0x58(%rsp), %xmm1
    00001353: 	comisd	%xmm0, %xmm1
    00001357: 	jbe	.Ltmp167 # Offset: 4951
.Ltmp217:
    0000135d: 	addl	$0x1, %r14d
    00001361: 	cmpl	iterations(%rip), %r14d
    00001368: 	jl	.Ltmp168 # Offset: 4968
.Ltmp164:
    0000136e: 	movq	%r13, %rdi
    00001371: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4977
    00001376: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000137d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001384: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000138b: 	je	.Ltmp169 # Offset: 5003
.Ltmp232:
    00001391: 	movq	-0x20(%rax), %rbp
    00001395: 	callq	clock@PLT # Offset: 5013
    0000139a: 	pxor	%xmm0, %xmm0
    0000139e: 	movq	%rax, end_time(%rip)
    000013a5: 	movq	%rbp, %rdi
    000013a8: 	subq	start_time(%rip), %rax
    000013af: 	cvtsi2sd	%rax, %xmm0
    000013b4: 	divsd	DATAat0x17358(%rip), %xmm0
    000013bc: 	callq	_Z13record_resultdPKc # Offset: 5052
    000013c1: 	movq	0xc0(%rsp), %rdi
    000013c9: 	cmpq	0x88(%rsp), %rdi
    000013d1: 	je	.Ltmp170 # Offset: 5073
    000013d3: 	movq	0xd0(%rsp), %rax
    000013db: 	leaq	0x1(%rax), %rsi
    000013df: 	callq	_ZdlPvm@PLT # Offset: 5087
.Ltmp170:
    000013e4: 	movq	0x90(%rsp), %rsi
    000013ec: 	leaq	DATAat0x17328(%rip), %rdx
    000013f3: 	movq	%r13, %rdi
    000013f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5110
    000013fb: 	callq	clock@PLT # Offset: 5115
    00001400: 	movl	iterations(%rip), %edi
    00001406: 	movq	%rax, start_time(%rip)
    0000140d: 	testl	%edi, %edi
    0000140f: 	jle	.Ltmp171 # Offset: 5135
    00001415: 	movsd	0x68(%rsp), %xmm2
    0000141b: 	movsd	DATAat0x17350(%rip), %xmm1
    00001423: 	xorl	%r14d, %r14d
    00001426: 	leaq	init_value(%rip), %rbp
    0000142d: 	leaq	DATAat0x171d6(%rip), %r15
    00001434: 	unpcklpd	%xmm2, %xmm2
    00001438: 	movsd	%xmm1, 0x58(%rsp)
    0000143e: 	movsd	0x70(%rsp), %xmm1
    00001444: 	movaps	%xmm2, (%rsp)
    00001448: 	movsd	DATAat0x17370(%rip), %xmm2
    00001450: 	unpcklpd	%xmm1, %xmm1
    00001454: 	movsd	%xmm2, 0x40(%rsp)
    0000145a: 	pxor	%xmm2, %xmm2
    0000145e: 	movsd	%xmm2, 0x60(%rsp)
    00001464: 	movsd	0x78(%rsp), %xmm2
    0000146a: 	movaps	%xmm1, 0x10(%rsp)
    0000146f: 	movsd	0x80(%rsp), %xmm1
    00001478: 	unpcklpd	%xmm2, %xmm2
    0000147c: 	unpcklpd	%xmm1, %xmm1
    00001480: 	movaps	%xmm2, 0x20(%rsp)
    00001485: 	movaps	%xmm1, 0x30(%rsp)
    0000148a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp175:
    00001490: 	pxor	%xmm1, %xmm1
    00001494: 	movq	%r12, %rax
    00001497: 	movapd	%xmm1, %xmm2
    0000149b: 	movapd	%xmm1, %xmm3
    0000149f: 	nop # Size: 1
.Ltmp172:
    000014a0: 	movapd	(%rsp), %xmm4
    000014a5: 	movapd	(%rax), %xmm0
    000014a9: 	addq	$0x30, %rax
    000014ad: 	movapd	0x30(%rsp), %xmm5
    000014b3: 	movapd	0x20(%rsp), %xmm6
    000014b9: 	mulpd	%xmm4, %xmm0
    000014bd: 	movapd	0x10(%rsp), %xmm7
    000014c3: 	mulpd	%xmm5, %xmm0
    000014c7: 	mulpd	%xmm6, %xmm0
    000014cb: 	mulpd	%xmm7, %xmm0
    000014cf: 	addpd	%xmm0, %xmm3
    000014d3: 	movapd	-0x20(%rax), %xmm0
    000014d8: 	mulpd	%xmm4, %xmm0
    000014dc: 	mulpd	-0x10(%rax), %xmm4
    000014e1: 	mulpd	%xmm5, %xmm0
    000014e5: 	mulpd	%xmm6, %xmm0
    000014e9: 	mulpd	%xmm7, %xmm0
    000014ed: 	addpd	%xmm0, %xmm2
    000014f1: 	movapd	%xmm4, %xmm0
    000014f5: 	mulpd	%xmm5, %xmm0
    000014f9: 	mulpd	%xmm6, %xmm0
    000014fd: 	mulpd	%xmm7, %xmm0
    00001501: 	addpd	%xmm0, %xmm1
    00001505: 	cmpq	%rax, %rbx
    00001508: 	jne	.Ltmp172 # Offset: 5384
    0000150a: 	movsd	0x68(%rsp), %xmm4
    00001510: 	mulsd	(%rbp), %xmm4
    00001515: 	movapd	%xmm3, %xmm7
    00001519: 	mulsd	0x80(%rsp), %xmm4
    00001522: 	unpckhpd	%xmm7, %xmm7
    00001526: 	mulsd	0x78(%rsp), %xmm4
    0000152c: 	movapd	%xmm7, %xmm0
    00001530: 	mulsd	0x70(%rsp), %xmm4
    00001536: 	mulsd	0x40(%rsp), %xmm4
    0000153c: 	subsd	%xmm4, %xmm3
    00001540: 	subsd	%xmm4, %xmm0
    00001544: 	addsd	%xmm3, %xmm0
    00001548: 	movapd	%xmm2, %xmm3
    0000154c: 	unpckhpd	%xmm2, %xmm2
    00001550: 	subsd	%xmm4, %xmm3
    00001554: 	subsd	%xmm4, %xmm2
    00001558: 	addsd	%xmm3, %xmm0
    0000155c: 	addsd	%xmm2, %xmm0
    00001560: 	movapd	%xmm1, %xmm2
    00001564: 	unpckhpd	%xmm1, %xmm1
    00001568: 	subsd	%xmm4, %xmm2
    0000156c: 	subsd	%xmm4, %xmm1
    00001570: 	addsd	%xmm2, %xmm0
    00001574: 	addsd	%xmm1, %xmm0
    00001578: 	movsd	0x60(%rsp), %xmm1
    0000157e: 	comisd	%xmm0, %xmm1
    00001582: 	jbe	.Ltmp173 # Offset: 5506
    00001584: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp173:
    0000158c: 	movsd	0x58(%rsp), %xmm1
    00001592: 	comisd	%xmm0, %xmm1
    00001596: 	jbe	.Ltmp174 # Offset: 5526
.Ltmp216:
    0000159c: 	addl	$0x1, %r14d
    000015a0: 	cmpl	iterations(%rip), %r14d
    000015a7: 	jl	.Ltmp175 # Offset: 5543
.Ltmp171:
    000015ad: 	movq	%r13, %rdi
    000015b0: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5552
    000015b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015bc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015ca: 	je	.Ltmp176 # Offset: 5578
.Ltmp231:
    000015d0: 	movq	-0x20(%rax), %rbp
    000015d4: 	callq	clock@PLT # Offset: 5588
    000015d9: 	pxor	%xmm0, %xmm0
    000015dd: 	movq	%rax, end_time(%rip)
    000015e4: 	movq	%rbp, %rdi
    000015e7: 	subq	start_time(%rip), %rax
    000015ee: 	cvtsi2sd	%rax, %xmm0
    000015f3: 	divsd	DATAat0x17358(%rip), %xmm0
    000015fb: 	callq	_Z13record_resultdPKc # Offset: 5627
    00001600: 	movq	0xc0(%rsp), %rdi
    00001608: 	cmpq	0x88(%rsp), %rdi
    00001610: 	je	.Ltmp177 # Offset: 5648
    00001612: 	movq	0xd0(%rsp), %rax
    0000161a: 	leaq	0x1(%rax), %rsi
    0000161e: 	callq	_ZdlPvm@PLT # Offset: 5662
.Ltmp177:
    00001623: 	movq	0x90(%rsp), %rsi
    0000162b: 	leaq	DATAat0x17296(%rip), %rdx
    00001632: 	movq	%r13, %rdi
    00001635: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5685
    0000163a: 	callq	clock@PLT # Offset: 5690
    0000163f: 	movl	iterations(%rip), %esi
    00001645: 	movq	%rax, start_time(%rip)
    0000164c: 	testl	%esi, %esi
    0000164e: 	jle	.Ltmp178 # Offset: 5710
    00001654: 	movsd	0x68(%rsp), %xmm2
    0000165a: 	pxor	%xmm1, %xmm1
    0000165e: 	xorl	%r14d, %r14d
    00001661: 	leaq	init_value(%rip), %rbp
    00001668: 	movsd	%xmm1, 0x60(%rsp)
    0000166e: 	leaq	DATAat0x171d6(%rip), %r15
    00001675: 	unpcklpd	%xmm2, %xmm2
    00001679: 	movaps	%xmm2, (%rsp)
    0000167d: 	movsd	DATAat0x17370(%rip), %xmm2
    00001685: 	movsd	%xmm2, 0x40(%rsp)
    0000168b: 	movsd	DATAat0x17350(%rip), %xmm2
    00001693: 	movsd	%xmm2, 0x58(%rsp)
    00001699: 	nopl	(%rax) # Size: 7
.Ltmp182:
    000016a0: 	pxor	%xmm1, %xmm1
    000016a4: 	movq	%r12, %rax
    000016a7: 	movapd	%xmm1, %xmm2
    000016ab: 	movapd	%xmm1, %xmm3
    000016af: 	nop # Size: 1
.Ltmp179:
    000016b0: 	movapd	(%rsp), %xmm4
    000016b5: 	movapd	(%rax), %xmm0
    000016b9: 	addq	$0x30, %rax
    000016bd: 	divpd	%xmm4, %xmm0
    000016c1: 	addpd	%xmm0, %xmm3
    000016c5: 	movapd	-0x20(%rax), %xmm0
    000016ca: 	divpd	%xmm4, %xmm0
    000016ce: 	addpd	%xmm0, %xmm2
    000016d2: 	movapd	-0x10(%rax), %xmm0
    000016d7: 	divpd	%xmm4, %xmm0
    000016db: 	addpd	%xmm0, %xmm1
    000016df: 	cmpq	%rbx, %rax
    000016e2: 	jne	.Ltmp179 # Offset: 5858
    000016e4: 	movsd	(%rbp), %xmm4
    000016e9: 	divsd	0x68(%rsp), %xmm4
    000016ef: 	movapd	%xmm3, %xmm6
    000016f3: 	mulsd	0x40(%rsp), %xmm4
    000016f9: 	unpckhpd	%xmm6, %xmm6
    000016fd: 	movapd	%xmm6, %xmm0
    00001701: 	subsd	%xmm4, %xmm3
    00001705: 	subsd	%xmm4, %xmm0
    00001709: 	addsd	%xmm3, %xmm0
    0000170d: 	movapd	%xmm2, %xmm3
    00001711: 	unpckhpd	%xmm2, %xmm2
    00001715: 	subsd	%xmm4, %xmm3
    00001719: 	subsd	%xmm4, %xmm2
    0000171d: 	addsd	%xmm3, %xmm0
    00001721: 	addsd	%xmm2, %xmm0
    00001725: 	movapd	%xmm1, %xmm2
    00001729: 	unpckhpd	%xmm1, %xmm1
    0000172d: 	subsd	%xmm4, %xmm2
    00001731: 	subsd	%xmm4, %xmm1
    00001735: 	addsd	%xmm2, %xmm0
    00001739: 	addsd	%xmm1, %xmm0
    0000173d: 	movsd	0x60(%rsp), %xmm1
    00001743: 	comisd	%xmm0, %xmm1
    00001747: 	jbe	.Ltmp180 # Offset: 5959
    00001749: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp180:
    00001751: 	movsd	0x58(%rsp), %xmm1
    00001757: 	comisd	%xmm0, %xmm1
    0000175b: 	jbe	.Ltmp181 # Offset: 5979
.Ltmp215:
    00001761: 	addl	$0x1, %r14d
    00001765: 	cmpl	iterations(%rip), %r14d
    0000176c: 	jl	.Ltmp182 # Offset: 5996
.Ltmp178:
    00001772: 	movq	%r13, %rdi
    00001775: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6005
    0000177a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001781: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001788: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000178f: 	je	.Ltmp183 # Offset: 6031
.Ltmp230:
    00001795: 	movq	-0x20(%rax), %rbp
    00001799: 	callq	clock@PLT # Offset: 6041
    0000179e: 	pxor	%xmm0, %xmm0
    000017a2: 	movq	%rax, end_time(%rip)
    000017a9: 	movq	%rbp, %rdi
    000017ac: 	subq	start_time(%rip), %rax
    000017b3: 	cvtsi2sd	%rax, %xmm0
    000017b8: 	divsd	DATAat0x17358(%rip), %xmm0
    000017c0: 	callq	_Z13record_resultdPKc # Offset: 6080
    000017c5: 	movq	0xc0(%rsp), %rdi
    000017cd: 	cmpq	0x88(%rsp), %rdi
    000017d5: 	je	.Ltmp184 # Offset: 6101
    000017d7: 	movq	0xd0(%rsp), %rax
    000017df: 	leaq	0x1(%rax), %rsi
    000017e3: 	callq	_ZdlPvm@PLT # Offset: 6115
.Ltmp184:
    000017e8: 	movq	0x90(%rsp), %rsi
    000017f0: 	leaq	DATAat0x172a7(%rip), %rdx
    000017f7: 	movq	%r13, %rdi
    000017fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6138
    000017ff: 	callq	clock@PLT # Offset: 6143
    00001804: 	movl	iterations(%rip), %ecx
    0000180a: 	movq	%rax, start_time(%rip)
    00001811: 	testl	%ecx, %ecx
    00001813: 	jle	.Ltmp185 # Offset: 6163
    00001819: 	movsd	0x68(%rsp), %xmm0
    0000181f: 	movsd	DATAat0x17370(%rip), %xmm1
    00001827: 	divsd	0x80(%rsp), %xmm0
    00001830: 	divsd	0x78(%rsp), %xmm0
    00001836: 	movapd	%xmm0, %xmm2
    0000183a: 	divsd	0x70(%rsp), %xmm2
    00001840: 	xorl	%r14d, %r14d
    00001843: 	movsd	%xmm2, 0x10(%rsp)
    00001849: 	movsd	%xmm1, 0x40(%rsp)
    0000184f: 	pxor	%xmm1, %xmm1
    00001853: 	leaq	init_value(%rip), %rbp
    0000185a: 	leaq	DATAat0x171d6(%rip), %r15
    00001861: 	movsd	%xmm1, 0x60(%rsp)
    00001867: 	movsd	DATAat0x17350(%rip), %xmm1
    0000186f: 	movsd	%xmm1, 0x58(%rsp)
    00001875: 	movapd	%xmm2, %xmm1
    00001879: 	unpcklpd	%xmm1, %xmm1
    0000187d: 	movaps	%xmm1, (%rsp)
    00001881: 	nopl	(%rax) # Size: 7
.Ltmp189:
    00001888: 	pxor	%xmm0, %xmm0
    0000188c: 	movq	%r12, %rax
    0000188f: 	movapd	%xmm0, %xmm1
    00001893: 	movapd	%xmm0, %xmm2
    00001897: 	nopw	(%rax,%rax) # Size: 9
.Ltmp186:
    000018a0: 	movapd	(%rsp), %xmm5
    000018a5: 	movapd	(%rax), %xmm3
    000018a9: 	addq	$0x30, %rax
    000018ad: 	addpd	%xmm5, %xmm3
    000018b1: 	addpd	%xmm3, %xmm2
    000018b5: 	movapd	-0x20(%rax), %xmm3
    000018ba: 	addpd	%xmm5, %xmm3
    000018be: 	addpd	-0x10(%rax), %xmm5
    000018c3: 	addpd	%xmm3, %xmm1
    000018c7: 	addpd	%xmm5, %xmm0
    000018cb: 	cmpq	%rbx, %rax
    000018ce: 	jne	.Ltmp186 # Offset: 6350
    000018d0: 	movsd	0x10(%rsp), %xmm4
    000018d6: 	addsd	(%rbp), %xmm4
    000018db: 	movapd	%xmm2, %xmm7
    000018df: 	mulsd	0x40(%rsp), %xmm4
    000018e5: 	unpckhpd	%xmm7, %xmm7
    000018e9: 	movapd	%xmm7, %xmm3
    000018ed: 	subsd	%xmm4, %xmm3
    000018f1: 	subsd	%xmm4, %xmm2
    000018f5: 	addsd	%xmm3, %xmm2
    000018f9: 	movapd	%xmm1, %xmm3
    000018fd: 	unpckhpd	%xmm1, %xmm1
    00001901: 	subsd	%xmm4, %xmm3
    00001905: 	subsd	%xmm4, %xmm1
    00001909: 	addsd	%xmm3, %xmm2
    0000190d: 	addsd	%xmm2, %xmm1
    00001911: 	movapd	%xmm0, %xmm2
    00001915: 	unpckhpd	%xmm0, %xmm0
    00001919: 	subsd	%xmm4, %xmm2
    0000191d: 	subsd	%xmm4, %xmm0
    00001921: 	addsd	%xmm2, %xmm1
    00001925: 	addsd	%xmm1, %xmm0
    00001929: 	movsd	0x60(%rsp), %xmm1
    0000192f: 	comisd	%xmm0, %xmm1
    00001933: 	jbe	.Ltmp187 # Offset: 6451
    00001935: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp187:
    0000193d: 	movsd	0x58(%rsp), %xmm1
    00001943: 	comisd	%xmm0, %xmm1
    00001947: 	jbe	.Ltmp188 # Offset: 6471
.Ltmp214:
    0000194d: 	addl	$0x1, %r14d
    00001951: 	cmpl	iterations(%rip), %r14d
    00001958: 	jl	.Ltmp189 # Offset: 6488
.Ltmp185:
    0000195e: 	movq	%r13, %rdi
    00001961: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6497
    00001966: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000196d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001974: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000197b: 	je	.Ltmp190 # Offset: 6523
.Ltmp229:
    00001981: 	movq	-0x20(%rax), %rbp
    00001985: 	callq	clock@PLT # Offset: 6533
    0000198a: 	pxor	%xmm0, %xmm0
    0000198e: 	movq	%rax, end_time(%rip)
    00001995: 	movq	%rbp, %rdi
    00001998: 	subq	start_time(%rip), %rax
    0000199f: 	cvtsi2sd	%rax, %xmm0
    000019a4: 	divsd	DATAat0x17358(%rip), %xmm0
    000019ac: 	callq	_Z13record_resultdPKc # Offset: 6572
    000019b1: 	movq	0xc0(%rsp), %rdi
    000019b9: 	cmpq	0x88(%rsp), %rdi
    000019c1: 	je	.Ltmp191 # Offset: 6593
    000019c3: 	movq	0xd0(%rsp), %rax
    000019cb: 	leaq	0x1(%rax), %rsi
    000019cf: 	callq	_ZdlPvm@PLT # Offset: 6607
.Ltmp191:
    000019d4: 	movq	0x90(%rsp), %rsi
    000019dc: 	leaq	DATAat0x172c3(%rip), %rdx
    000019e3: 	movq	%r13, %rdi
    000019e6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6630
    000019eb: 	callq	clock@PLT # Offset: 6635
    000019f0: 	movl	iterations(%rip), %edx
    000019f6: 	movq	%rax, start_time(%rip)
    000019fd: 	testl	%edx, %edx
    000019ff: 	jle	.Ltmp192 # Offset: 6655
    00001a05: 	movsd	0x68(%rsp), %xmm1
    00001a0b: 	movsd	DATAat0x17370(%rip), %xmm2
    00001a13: 	xorl	%r14d, %r14d
    00001a16: 	leaq	init_value(%rip), %rbp
    00001a1d: 	movsd	0x78(%rsp), %xmm0
    00001a23: 	leaq	DATAat0x171d6(%rip), %r15
    00001a2a: 	mulsd	0x80(%rsp), %xmm0
    00001a33: 	movsd	%xmm2, 0x40(%rsp)
    00001a39: 	divsd	0x70(%rsp), %xmm0
    00001a3f: 	pxor	%xmm2, %xmm2
    00001a43: 	subsd	%xmm0, %xmm1
    00001a47: 	movsd	%xmm2, 0x60(%rsp)
    00001a4d: 	movsd	DATAat0x17350(%rip), %xmm2
    00001a55: 	movsd	%xmm2, 0x58(%rsp)
    00001a5b: 	movapd	%xmm1, %xmm2
    00001a5f: 	unpcklpd	%xmm2, %xmm2
    00001a63: 	movsd	%xmm1, 0x10(%rsp)
    00001a69: 	movaps	%xmm2, (%rsp)
    00001a6d: 	nopl	(%rax) # Size: 3
.Ltmp196:
    00001a70: 	pxor	%xmm0, %xmm0
    00001a74: 	movq	%r12, %rax
    00001a77: 	movapd	%xmm0, %xmm1
    00001a7b: 	movapd	%xmm0, %xmm2
    00001a7f: 	nop # Size: 1
.Ltmp193:
    00001a80: 	movapd	(%rsp), %xmm6
    00001a85: 	movapd	(%rax), %xmm3
    00001a89: 	addq	$0x30, %rax
    00001a8d: 	addpd	%xmm6, %xmm3
    00001a91: 	addpd	%xmm3, %xmm2
    00001a95: 	movapd	-0x20(%rax), %xmm3
    00001a9a: 	addpd	%xmm6, %xmm3
    00001a9e: 	addpd	-0x10(%rax), %xmm6
    00001aa3: 	addpd	%xmm3, %xmm1
    00001aa7: 	addpd	%xmm6, %xmm0
    00001aab: 	cmpq	%rbx, %rax
    00001aae: 	jne	.Ltmp193 # Offset: 6830
    00001ab0: 	movsd	0x10(%rsp), %xmm4
    00001ab6: 	addsd	(%rbp), %xmm4
    00001abb: 	movapd	%xmm2, %xmm6
    00001abf: 	mulsd	0x40(%rsp), %xmm4
    00001ac5: 	unpckhpd	%xmm6, %xmm6
    00001ac9: 	movapd	%xmm6, %xmm3
    00001acd: 	subsd	%xmm4, %xmm3
    00001ad1: 	subsd	%xmm4, %xmm2
    00001ad5: 	addsd	%xmm3, %xmm2
    00001ad9: 	movapd	%xmm1, %xmm3
    00001add: 	unpckhpd	%xmm1, %xmm1
    00001ae1: 	subsd	%xmm4, %xmm3
    00001ae5: 	subsd	%xmm4, %xmm1
    00001ae9: 	addsd	%xmm3, %xmm2
    00001aed: 	addsd	%xmm2, %xmm1
    00001af1: 	movapd	%xmm0, %xmm2
    00001af5: 	unpckhpd	%xmm0, %xmm0
    00001af9: 	subsd	%xmm4, %xmm2
    00001afd: 	subsd	%xmm4, %xmm0
    00001b01: 	addsd	%xmm2, %xmm1
    00001b05: 	addsd	%xmm1, %xmm0
    00001b09: 	movsd	0x60(%rsp), %xmm1
    00001b0f: 	comisd	%xmm0, %xmm1
    00001b13: 	jbe	.Ltmp194 # Offset: 6931
    00001b15: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp194:
    00001b1d: 	movsd	0x58(%rsp), %xmm1
    00001b23: 	comisd	%xmm0, %xmm1
    00001b27: 	jbe	.Ltmp195 # Offset: 6951
.Ltmp213:
    00001b2d: 	addl	$0x1, %r14d
    00001b31: 	cmpl	iterations(%rip), %r14d
    00001b38: 	jl	.Ltmp196 # Offset: 6968
.Ltmp192:
    00001b3e: 	movq	%r13, %rdi
    00001b41: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6977
    00001b46: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b4d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b54: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b5b: 	je	.Ltmp197 # Offset: 7003
.Ltmp228:
    00001b61: 	movq	-0x20(%rax), %rbp
    00001b65: 	callq	clock@PLT # Offset: 7013
    00001b6a: 	pxor	%xmm0, %xmm0
    00001b6e: 	movq	%rax, end_time(%rip)
    00001b75: 	movq	%rbp, %rdi
    00001b78: 	subq	start_time(%rip), %rax
    00001b7f: 	cvtsi2sd	%rax, %xmm0
    00001b84: 	divsd	DATAat0x17358(%rip), %xmm0
    00001b8c: 	callq	_Z13record_resultdPKc # Offset: 7052
    00001b91: 	movq	0xc0(%rsp), %rdi
    00001b99: 	cmpq	0x88(%rsp), %rdi
    00001ba1: 	je	.Ltmp198 # Offset: 7073
    00001ba3: 	movq	0xd0(%rsp), %rax
    00001bab: 	leaq	0x1(%rax), %rsi
    00001baf: 	callq	_ZdlPvm@PLT # Offset: 7087
.Ltmp198:
    00001bb4: 	movq	0x90(%rsp), %rsi
    00001bbc: 	leaq	DATAat0x172dc(%rip), %rdx
    00001bc3: 	movq	%r13, %rdi
    00001bc6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7110
    00001bcb: 	callq	clock@PLT # Offset: 7115
    00001bd0: 	movq	%rax, start_time(%rip)
    00001bd7: 	movl	iterations(%rip), %eax
    00001bdd: 	testl	%eax, %eax
    00001bdf: 	jle	.Ltmp199 # Offset: 7135
    00001be5: 	movsd	0x78(%rsp), %xmm0
    00001beb: 	movsd	DATAat0x17370(%rip), %xmm2
    00001bf3: 	xorl	%r14d, %r14d
    00001bf6: 	leaq	init_value(%rip), %rbp
    00001bfd: 	mulsd	0x80(%rsp), %xmm0
    00001c06: 	movsd	0x68(%rsp), %xmm1
    00001c0c: 	leaq	DATAat0x171d6(%rip), %r15
    00001c13: 	movsd	%xmm2, 0x40(%rsp)
    00001c19: 	movsd	DATAat0x17350(%rip), %xmm2
    00001c21: 	unpcklpd	%xmm1, %xmm1
    00001c25: 	movsd	%xmm2, 0x58(%rsp)
    00001c2b: 	movaps	%xmm1, (%rsp)
    00001c2f: 	pxor	%xmm1, %xmm1
    00001c33: 	movapd	%xmm0, %xmm7
    00001c37: 	divsd	0x70(%rsp), %xmm7
    00001c3d: 	movapd	%xmm7, %xmm2
    00001c41: 	movsd	%xmm7, 0x20(%rsp)
    00001c47: 	unpcklpd	%xmm2, %xmm2
    00001c4b: 	movsd	%xmm1, 0x60(%rsp)
    00001c51: 	movaps	%xmm2, 0x10(%rsp)
    00001c56: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp203:
    00001c60: 	pxor	%xmm1, %xmm1
    00001c64: 	movq	%r12, %rax
    00001c67: 	movapd	%xmm1, %xmm2
    00001c6b: 	movapd	%xmm1, %xmm3
    00001c6f: 	nop # Size: 1
.Ltmp200:
    00001c70: 	movapd	(%rsp), %xmm7
    00001c75: 	movapd	(%rax), %xmm0
    00001c79: 	addq	$0x30, %rax
    00001c7d: 	movapd	0x10(%rsp), %xmm5
    00001c83: 	addpd	%xmm7, %xmm0
    00001c87: 	subpd	%xmm5, %xmm0
    00001c8b: 	addpd	%xmm0, %xmm3
    00001c8f: 	movapd	-0x20(%rax), %xmm0
    00001c94: 	addpd	%xmm7, %xmm0
    00001c98: 	addpd	-0x10(%rax), %xmm7
    00001c9d: 	subpd	%xmm5, %xmm0
    00001ca1: 	addpd	%xmm0, %xmm2
    00001ca5: 	movapd	%xmm7, %xmm0
    00001ca9: 	subpd	%xmm5, %xmm0
    00001cad: 	addpd	%xmm0, %xmm1
    00001cb1: 	cmpq	%rbx, %rax
    00001cb4: 	jne	.Ltmp200 # Offset: 7348
    00001cb6: 	movsd	0x68(%rsp), %xmm4
    00001cbc: 	addsd	(%rbp), %xmm4
    00001cc1: 	movapd	%xmm3, %xmm7
    00001cc5: 	subsd	0x20(%rsp), %xmm4
    00001ccb: 	mulsd	0x40(%rsp), %xmm4
    00001cd1: 	unpckhpd	%xmm7, %xmm7
    00001cd5: 	movapd	%xmm7, %xmm0
    00001cd9: 	subsd	%xmm4, %xmm3
    00001cdd: 	subsd	%xmm4, %xmm0
    00001ce1: 	addsd	%xmm3, %xmm0
    00001ce5: 	movapd	%xmm2, %xmm3
    00001ce9: 	unpckhpd	%xmm2, %xmm2
    00001ced: 	subsd	%xmm4, %xmm3
    00001cf1: 	subsd	%xmm4, %xmm2
    00001cf5: 	addsd	%xmm3, %xmm0
    00001cf9: 	addsd	%xmm2, %xmm0
    00001cfd: 	movapd	%xmm1, %xmm2
    00001d01: 	unpckhpd	%xmm1, %xmm1
    00001d05: 	subsd	%xmm4, %xmm2
    00001d09: 	subsd	%xmm4, %xmm1
    00001d0d: 	addsd	%xmm2, %xmm0
    00001d11: 	addsd	%xmm1, %xmm0
    00001d15: 	movsd	0x60(%rsp), %xmm1
    00001d1b: 	comisd	%xmm0, %xmm1
    00001d1f: 	jbe	.Ltmp201 # Offset: 7455
    00001d21: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp201:
    00001d29: 	movsd	0x58(%rsp), %xmm1
    00001d2f: 	comisd	%xmm0, %xmm1
    00001d33: 	jbe	.Ltmp202 # Offset: 7475
.Ltmp212:
    00001d39: 	addl	$0x1, %r14d
    00001d3d: 	cmpl	iterations(%rip), %r14d
    00001d44: 	jl	.Ltmp203 # Offset: 7492
.Ltmp199:
    00001d4a: 	movq	%r13, %rdi
    00001d4d: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 7501
    00001d52: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d59: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d60: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d67: 	je	.Ltmp204 # Offset: 7527
.Ltmp227:
    00001d6d: 	movq	-0x20(%rax), %rbp
    00001d71: 	callq	clock@PLT # Offset: 7537
    00001d76: 	pxor	%xmm0, %xmm0
    00001d7a: 	movq	%rax, end_time(%rip)
    00001d81: 	movq	%rbp, %rdi
    00001d84: 	subq	start_time(%rip), %rax
    00001d8b: 	cvtsi2sd	%rax, %xmm0
    00001d90: 	divsd	DATAat0x17358(%rip), %xmm0
    00001d98: 	callq	_Z13record_resultdPKc # Offset: 7576
    00001d9d: 	movq	0xc0(%rsp), %rdi
    00001da5: 	cmpq	0x88(%rsp), %rdi
    00001dad: 	je	.Ltmp205 # Offset: 7597
    00001daf: 	movq	0xd0(%rsp), %rax
    00001db7: 	leaq	0x1(%rax), %rsi
    00001dbb: 	callq	_ZdlPvm@PLT # Offset: 7611
.Ltmp205:
    00001dc0: 	movq	0x90(%rsp), %rsi
    00001dc8: 	leaq	DATAat0x172f6(%rip), %rdx
    00001dcf: 	movq	%r13, %rdi
    00001dd2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7634
    00001dd7: 	movl	iterations(%rip), %edx
    00001ddd: 	xorl	%r8d, %r8d
    00001de0: 	xorl	%ecx, %ecx
    00001de2: 	movl	$0x1f40, %esi
    00001de7: 	movq	0xc0(%rsp), %rdi
    00001def: 	callq	_Z9summarizePKciiii # Offset: 7663
    00001df4: 	movq	0xc0(%rsp), %rdi
    00001dfc: 	cmpq	0x88(%rsp), %rdi
    00001e04: 	je	.Ltmp206 # Offset: 7684
    00001e06: 	movq	0xd0(%rsp), %rax
    00001e0e: 	leaq	0x1(%rax), %rsi
    00001e12: 	callq	_ZdlPvm@PLT # Offset: 7698
.Ltmp206:
    00001e17: 	movq	0xa0(%rsp), %rdi
    00001e1f: 	cmpq	0x98(%rsp), %rdi
    00001e27: 	je	.Ltmp207 # Offset: 7719
    00001e29: 	movq	0xb0(%rsp), %rax
    00001e31: 	leaq	0x1(%rax), %rsi
    00001e35: 	callq	_ZdlPvm@PLT # Offset: 7733
.Ltmp207:
    00001e3a: 	movq	0x5dce8(%rsp), %rax
    00001e42: 	subq	%fs:0x28, %rax
    00001e4b: 	jne	.Ltmp208 # Offset: 7755
    00001e51: 	addq	$0x5dcf8, %rsp
    00001e58: 	popq	%rbx
    00001e59: 	popq	%rbp
    00001e5a: 	popq	%r12
    00001e5c: 	popq	%r13
    00001e5e: 	popq	%r14
    00001e60: 	popq	%r15
    00001e62: 	retq # Offset: 7778
    00001e63: 	nopl	(%rax,%rax) # Size: 5
.Ltmp209:
    00001e68: 	addq	$0x20, %rbp
.Ltmp98:
    00001e6c: 	cmpq	%rbp, (%rsp)
    00001e70: 	je	.Ltmp102 # Offset: 7792
.Ltmp210:
    00001e76: 	movq	(%rbp), %rdi
    00001e7a: 	leaq	0x10(%rbp), %rax
    00001e7e: 	cmpq	%rax, %rdi
    00001e81: 	je	.Ltmp209 # Offset: 7809
    00001e83: 	movq	0x10(%rbp), %rax
    00001e87: 	addq	$0x20, %rbp
    00001e8b: 	leaq	0x1(%rax), %rsi
    00001e8f: 	callq	_ZdlPvm@PLT # Offset: 7823
    00001e94: 	cmpq	%rbp, (%rsp)
    00001e98: 	jne	.Ltmp210 # Offset: 7832
    00001e9a: 	jmp	.Ltmp102 # Offset: 7834
    00001e9f: 	nop # Size: 1
.Ltmp94:
    00001ea0: 	addq	$0x20, %rbp
    00001ea4: 	cmpq	%rbx, %rbp
    00001ea7: 	jne	.Ltmp95 # Offset: 7847
    00001ead: 	addq	$0x8, %r13
    00001eb1: 	cmpq	%r13, %r15
    00001eb4: 	ja	.Ltmp96 # Offset: 7860
    00001eba: 	jmp	.Ltmp211 # Offset: 7866
    00001ebf: 	nop # Size: 1
.Ltmp202:
    00001ec0: 	movl	current_test(%rip), %edx
    00001ec6: 	movq	%r15, %rsi
    00001ec9: 	movl	$0x1, %edi
    00001ece: 	xorl	%eax, %eax
    00001ed0: 	callq	__printf_chk@PLT # Offset: 7888
    00001ed5: 	jmp	.Ltmp212 # Offset: 7893
    00001eda: 	nopw	(%rax,%rax) # Size: 6
.Ltmp195:
    00001ee0: 	movl	current_test(%rip), %edx
    00001ee6: 	movq	%r15, %rsi
    00001ee9: 	movl	$0x1, %edi
    00001eee: 	xorl	%eax, %eax
    00001ef0: 	callq	__printf_chk@PLT # Offset: 7920
    00001ef5: 	jmp	.Ltmp213 # Offset: 7925
    00001efa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp188:
    00001f00: 	movl	current_test(%rip), %edx
    00001f06: 	movq	%r15, %rsi
    00001f09: 	movl	$0x1, %edi
    00001f0e: 	xorl	%eax, %eax
    00001f10: 	callq	__printf_chk@PLT # Offset: 7952
    00001f15: 	jmp	.Ltmp214 # Offset: 7957
    00001f1a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp181:
    00001f20: 	movl	current_test(%rip), %edx
    00001f26: 	movq	%r15, %rsi
    00001f29: 	movl	$0x1, %edi
    00001f2e: 	xorl	%eax, %eax
    00001f30: 	callq	__printf_chk@PLT # Offset: 7984
    00001f35: 	jmp	.Ltmp215 # Offset: 7989
    00001f3a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp174:
    00001f40: 	movl	current_test(%rip), %edx
    00001f46: 	movq	%r15, %rsi
    00001f49: 	movl	$0x1, %edi
    00001f4e: 	xorl	%eax, %eax
    00001f50: 	callq	__printf_chk@PLT # Offset: 8016
    00001f55: 	jmp	.Ltmp216 # Offset: 8021
    00001f5a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp167:
    00001f60: 	movl	current_test(%rip), %edx
    00001f66: 	movq	%r15, %rsi
    00001f69: 	movl	$0x1, %edi
    00001f6e: 	xorl	%eax, %eax
    00001f70: 	callq	__printf_chk@PLT # Offset: 8048
    00001f75: 	jmp	.Ltmp217 # Offset: 8053
    00001f7a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp160:
    00001f80: 	movl	current_test(%rip), %edx
    00001f86: 	movq	%r15, %rsi
    00001f89: 	movl	$0x1, %edi
    00001f8e: 	xorl	%eax, %eax
    00001f90: 	callq	__printf_chk@PLT # Offset: 8080
    00001f95: 	jmp	.Ltmp218 # Offset: 8085
    00001f9a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp153:
    00001fa0: 	movl	current_test(%rip), %edx
    00001fa6: 	movq	%r15, %rsi
    00001fa9: 	movl	$0x1, %edi
    00001fae: 	xorl	%eax, %eax
    00001fb0: 	callq	__printf_chk@PLT # Offset: 8112
    00001fb5: 	jmp	.Ltmp219 # Offset: 8117
    00001fba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp146:
    00001fc0: 	movl	current_test(%rip), %edx
    00001fc6: 	movq	%r15, %rsi
    00001fc9: 	movl	$0x1, %edi
    00001fce: 	xorl	%eax, %eax
    00001fd0: 	callq	__printf_chk@PLT # Offset: 8144
    00001fd5: 	jmp	.Ltmp220 # Offset: 8149
    00001fda: 	nopw	(%rax,%rax) # Size: 6
.Ltmp139:
    00001fe0: 	movl	current_test(%rip), %edx
    00001fe6: 	movq	%r15, %rsi
    00001fe9: 	movl	$0x1, %edi
    00001fee: 	xorl	%eax, %eax
    00001ff0: 	callq	__printf_chk@PLT # Offset: 8176
    00001ff5: 	jmp	.Ltmp221 # Offset: 8181
    00001ffa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp132:
    00002000: 	movl	current_test(%rip), %edx
    00002006: 	movq	%r15, %rsi
    00002009: 	movl	$0x1, %edi
    0000200e: 	xorl	%eax, %eax
    00002010: 	callq	__printf_chk@PLT # Offset: 8208
    00002015: 	jmp	.Ltmp222 # Offset: 8213
    0000201a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp111:
    00002020: 	movl	current_test(%rip), %edx
    00002026: 	movq	%r15, %rsi
    00002029: 	movl	$0x1, %edi
    0000202e: 	xorl	%eax, %eax
    00002030: 	callq	__printf_chk@PLT # Offset: 8240
    00002035: 	jmp	.Ltmp223 # Offset: 8245
    0000203a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp125:
    00002040: 	movl	current_test(%rip), %edx
    00002046: 	movq	%r15, %rsi
    00002049: 	movl	$0x1, %edi
    0000204e: 	xorl	%eax, %eax
    00002050: 	callq	__printf_chk@PLT # Offset: 8272
    00002055: 	jmp	.Ltmp224 # Offset: 8277
    0000205a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp118:
    00002060: 	movl	current_test(%rip), %edx
    00002066: 	movq	%r15, %rsi
    00002069: 	movl	$0x1, %edi
    0000206e: 	xorl	%eax, %eax
    00002070: 	callq	__printf_chk@PLT # Offset: 8304
    00002075: 	jmp	.Ltmp225 # Offset: 8309
.Ltmp113:
    0000207a: 	movq	-0x8(%rdx), %rax
    0000207e: 	addq	$0x200, %rax
    00002084: 	jmp	.Ltmp226 # Offset: 8324
.Ltmp204:
    00002089: 	movq	-0x8(%rdx), %rax
    0000208d: 	addq	$0x200, %rax
    00002093: 	jmp	.Ltmp227 # Offset: 8339
.Ltmp197:
    00002098: 	movq	-0x8(%rdx), %rax
    0000209c: 	addq	$0x200, %rax
    000020a2: 	jmp	.Ltmp228 # Offset: 8354
.Ltmp190:
    000020a7: 	movq	-0x8(%rdx), %rax
    000020ab: 	addq	$0x200, %rax
    000020b1: 	jmp	.Ltmp229 # Offset: 8369
.Ltmp183:
    000020b6: 	movq	-0x8(%rdx), %rax
    000020ba: 	addq	$0x200, %rax
    000020c0: 	jmp	.Ltmp230 # Offset: 8384
.Ltmp176:
    000020c5: 	movq	-0x8(%rdx), %rax
    000020c9: 	addq	$0x200, %rax
    000020cf: 	jmp	.Ltmp231 # Offset: 8399
.Ltmp169:
    000020d4: 	movq	-0x8(%rdx), %rax
    000020d8: 	addq	$0x200, %rax
    000020de: 	jmp	.Ltmp232 # Offset: 8414
.Ltmp162:
    000020e3: 	movq	-0x8(%rdx), %rax
    000020e7: 	addq	$0x200, %rax
    000020ed: 	jmp	.Ltmp233 # Offset: 8429
.Ltmp155:
    000020f2: 	movq	-0x8(%rdx), %rax
    000020f6: 	addq	$0x200, %rax
    000020fc: 	jmp	.Ltmp234 # Offset: 8444
.Ltmp148:
    00002101: 	movq	-0x8(%rdx), %rax
    00002105: 	addq	$0x200, %rax
    0000210b: 	jmp	.Ltmp235 # Offset: 8459
.Ltmp141:
    00002110: 	movq	-0x8(%rdx), %rax
    00002114: 	addq	$0x200, %rax
    0000211a: 	jmp	.Ltmp236 # Offset: 8474
.Ltmp134:
    0000211f: 	movq	-0x8(%rdx), %rax
    00002123: 	addq	$0x200, %rax
    00002129: 	jmp	.Ltmp237 # Offset: 8489
.Ltmp127:
    0000212e: 	movq	-0x8(%rdx), %rax
    00002132: 	addq	$0x200, %rax
    00002138: 	jmp	.Ltmp238 # Offset: 8504
.Ltmp120:
    0000213d: 	movq	-0x8(%rdx), %rax
    00002141: 	addq	$0x200, %rax
    00002147: 	jmp	.Ltmp239 # Offset: 8519
.Ltmp208:
    0000214c: 	callq	__stack_chk_fail@PLT # Offset: 8524
    00002151: 	endbr64
.Ltmp241:
    00002155: 	movq	%rax, %rbp
    00002158: 	jmp	.Ltmp240 # Offset: 8536
    0000215a: 	endbr64
    0000215e: 	jmp	.Ltmp241 # Offset: 8542
    00002160: 	endbr64
    00002164: 	movq	%rax, %rbp
    00002167: 	jmp	.Ltmp242 # Offset: 8551
    00002169: 	endbr64
    0000216d: 	movq	%rax, %rbp
    00002170: 	jmp	.Ltmp243 # Offset: 8560
.Ltmp240:
    00002172: 	movq	0xc0(%rsp), %rdi
    0000217a: 	cmpq	0x88(%rsp), %rdi
    00002182: 	je	.Ltmp243 # Offset: 8578
.Ltmp245:
    00002184: 	movq	0xd0(%rsp), %rax
    0000218c: 	leaq	0x1(%rax), %rsi
    00002190: 	callq	_ZdlPvm@PLT # Offset: 8592
.Ltmp243:
    00002195: 	movq	0xa0(%rsp), %rdi
    0000219d: 	cmpq	0x98(%rsp), %rdi
    000021a5: 	je	.Ltmp244 # Offset: 8613
    000021a7: 	movq	0xb0(%rsp), %rax
    000021af: 	leaq	0x1(%rax), %rsi
    000021b3: 	callq	_ZdlPvm@PLT # Offset: 8627
.Ltmp244:
    000021b8: 	movq	%rbp, %rdi
    000021bb: 	callq	_Unwind_Resume@PLT # Offset: 8635
.Ltmp242:
    000021c0: 	movq	0xc0(%rsp), %rdi
    000021c8: 	leaq	0xd0(%rsp), %rax
    000021d0: 	cmpq	%rax, %rdi
    000021d3: 	jne	.Ltmp245 # Offset: 8659
    000021d5: 	jmp	.Ltmp243 # Offset: 8661
    000021d7: 	endbr64
    000021db: 	jmp	.Ltmp241 # Offset: 8667
    000021e0: 	endbr64
    000021e4: 	jmp	.Ltmp241 # Offset: 8676
    000021e9: 	endbr64
    000021ed: 	jmp	.Ltmp241 # Offset: 8685
    000021f2: 	endbr64
    000021f6: 	jmp	.Ltmp241 # Offset: 8694
    000021fb: 	endbr64
    000021ff: 	jmp	.Ltmp241 # Offset: 8703
    00002204: 	endbr64
    00002208: 	jmp	.Ltmp241 # Offset: 8712
    0000220d: 	endbr64
    00002211: 	jmp	.Ltmp241 # Offset: 8721
    00002216: 	endbr64
    0000221a: 	jmp	.Ltmp241 # Offset: 8730
    0000221f: 	endbr64
    00002223: 	jmp	.Ltmp241 # Offset: 8739
    00002228: 	endbr64
    0000222c: 	jmp	.Ltmp241 # Offset: 8748
    00002231: 	endbr64
    00002235: 	jmp	.Ltmp241 # Offset: 8757
    0000223a: 	endbr64
    0000223e: 	jmp	.Ltmp241 # Offset: 8766
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI12SixItemClassIdEEvd"

Binary Function "_Z11TestOneTypeI15SingleItemClassIiEEvd" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x4cf0
  Size        : 0x25f7
  MaxSize     : 0x2600
  Offset      : 0x4cf0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI15SingleItemClassIiEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp246:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp246 # Offset: 37
    00000027: 	subq	$0xde8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm4, %xmm6
    00000048: 	movq	%xmm5, %rbp
    0000004d: 	movq	%xmm6, %rsi
    00000052: 	leaq	0x8(%rsi), %r12
    00000056: 	movsd	%xmm0, 0x58(%rsp)
    0000005c: 	movq	%fs:0x28, %rax
    00000065: 	movq	%rax, 0x7dd8(%rsp)
    0000006d: 	xorl	%eax, %eax
    0000006f: 	leaq	0xa0(%rsp), %rax
    00000077: 	movb	$0x73, 0xa8(%rsp)
    0000007f: 	movq	%rax, 0x78(%rsp)
    00000084: 	movq	%rax, 0x90(%rsp)
    0000008c: 	movabsq	$0x73616c4331746e69, %rax
    00000096: 	movq	%rax, 0xa0(%rsp)
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a5: 	movq	$0x9, 0x98(%rsp)
    000000b1: 	movq	%rax, (%rsp)
    000000b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000bc: 	movb	$0x0, 0xa9(%rsp)
    000000c4: 	movq	%rax, 0x20(%rsp)
    000000c9: 	movaps	%xmm5, 0x30(%rsp)
    000000ce: 	movaps	%xmm4, 0x40(%rsp)
    000000d3: 	movq	%xmm6, 0x50(%rsp)
    000000d9: 	movq	%xmm4, 0x10(%rsp)
    000000df: 	cmpq	%r12, %rax
    000000e2: 	jbe	.Ltmp247 # Offset: 226
    000000e4: 	movq	%r12, %r13
    000000e7: 	movq	%rax, %r15
    000000ea: 	movq	%xmm5, 0x60(%rsp)
.Ltmp250:
    000000f0: 	movq	(%r13), %rbp
    000000f4: 	leaq	0x200(%rbp), %rbx
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp249:
    00000100: 	movq	(%rbp), %rdi
    00000104: 	leaq	0x10(%rbp), %rdx
    00000108: 	cmpq	%rdx, %rdi
    0000010b: 	je	.Ltmp248 # Offset: 267
    00000111: 	movq	0x10(%rbp), %rax
    00000115: 	addq	$0x20, %rbp
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%rbp, %rbx
    00000125: 	jne	.Ltmp249 # Offset: 293
    00000127: 	addq	$0x8, %r13
    0000012b: 	cmpq	%r13, %r15
    0000012e: 	ja	.Ltmp250 # Offset: 302
.Ltmp421:
    00000130: 	movq	0x60(%rsp), %rbp
.Ltmp247:
    00000135: 	movq	0x50(%rsp), %rsi
    0000013a: 	cmpq	%rsi, 0x20(%rsp)
    0000013f: 	jne	.Ltmp251 # Offset: 319
    00000141: 	jmp	.Ltmp252 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp254:
    00000150: 	movq	0x10(%rbp), %rax
    00000154: 	addq	$0x20, %rbp
    00000158: 	leaq	0x1(%rax), %rsi
    0000015c: 	callq	_ZdlPvm@PLT # Offset: 348
.Ltmp251:
    00000161: 	cmpq	%rbp, 0x10(%rsp)
    00000166: 	je	.Ltmp253 # Offset: 358
.Ltmp255:
    00000168: 	movq	(%rbp), %rdi
    0000016c: 	leaq	0x10(%rbp), %rax
    00000170: 	cmpq	%rax, %rdi
    00000173: 	jne	.Ltmp254 # Offset: 371
    00000175: 	addq	$0x20, %rbp
    00000179: 	cmpq	0x10(%rsp), %rbp
    0000017e: 	jne	.Ltmp255 # Offset: 382
    00000180: 	cmpq	%r14, (%rsp)
    00000184: 	je	.Ltmp256 # Offset: 388
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp258:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp257 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp257:
    000001a9: 	addq	$0x20, %r14
.Ltmp253:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp258 # Offset: 433
.Ltmp256:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp259 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp260:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp260 # Offset: 477
.Ltmp259:
    000001df: 	cvttsd2si	init_value(%rip), %eax
    000001e7: 	movdqa	0x30(%rsp), %xmm6
    000001ed: 	leaq	0xd0(%rsp), %r15
    000001f5: 	leaq	0x7dd0(%rsp), %rbx
    000001fd: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    00000204: 	movdqa	0x40(%rsp), %xmm6
    0000020a: 	movd	%eax, %xmm0
    0000020e: 	movaps	%xmm6, "_ZL7gLabels/1"+64(%rip)
    00000215: 	movq	%r15, %rax
    00000218: 	pshufd	$0x0, %xmm0, %xmm0
    0000021d: 	nopl	(%rax) # Size: 3
.Ltmp261:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x10, %rax
    00000227: 	cmpq	%rax, %rbx
    0000022a: 	jne	.Ltmp261 # Offset: 554
    0000022c: 	cvttsd2si	0x58(%rsp), %ebp
    00000232: 	leaq	0xb0(%rsp), %rdi
    0000023a: 	movq	%rdi, 0x60(%rsp)
    0000023f: 	leal	(%rbp,%rbp), %eax
    00000243: 	leal	0x2(%rbp), %esi
    00000246: 	cltd
    00000247: 	movl	%eax, 0x58(%rsp)
    0000024b: 	idivl	%esi
    0000024d: 	movl	%esi, 0x40(%rsp)
    00000251: 	leaq	DATAat0x171c8(%rip), %rdx
    00000258: 	addl	%ebp, %eax
    0000025a: 	movl	%eax, 0x50(%rsp)
    0000025e: 	leaq	0x90(%rsp), %rax
    00000266: 	movq	%rax, %rsi
    00000269: 	movq	%rax, 0x70(%rsp)
    0000026e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 622
    00000273: 	callq	clock@PLT # Offset: 627
    00000278: 	movd	%ebp, %xmm5
    0000027c: 	movl	iterations(%rip), %ecx
    00000282: 	xorl	%r13d, %r13d
    00000285: 	pshufd	$0x0, %xmm5, %xmm6
    0000028a: 	movq	%rax, start_time(%rip)
    00000291: 	leaq	init_value(%rip), %r12
    00000298: 	leaq	DATAat0x171d6(%rip), %r14
    0000029f: 	movaps	%xmm6, (%rsp)
    000002a3: 	testl	%ecx, %ecx
    000002a5: 	jle	.Ltmp262 # Offset: 677
    000002ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp265:
    000002b0: 	movq	%r15, %rax
    000002b3: 	pxor	%xmm0, %xmm0
    000002b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp263:
    000002c0: 	movdqa	(%rsp), %xmm1
    000002c5: 	paddd	(%rax), %xmm1
    000002c9: 	addq	$0x10, %rax
    000002cd: 	paddd	%xmm1, %xmm0
    000002d1: 	cmpq	%rbx, %rax
    000002d4: 	jne	.Ltmp263 # Offset: 724
    000002d6: 	cvttsd2si	(%r12), %edx
    000002dc: 	movdqa	%xmm0, %xmm1
    000002e0: 	psrldq	$0x8, %xmm1
    000002e5: 	paddd	%xmm1, %xmm0
    000002e9: 	movdqa	%xmm0, %xmm1
    000002ed: 	addl	%ebp, %edx
    000002ef: 	psrldq	$0x4, %xmm1
    000002f4: 	imull	$0x1f40, %edx, %edx
    000002fa: 	paddd	%xmm1, %xmm0
    000002fe: 	movd	%xmm0, %eax
    00000302: 	cmpl	%eax, %edx
    00000304: 	je	.Ltmp264 # Offset: 772
    00000306: 	movl	current_test(%rip), %edx
    0000030c: 	movq	%r14, %rsi
    0000030f: 	movl	$0x1, %edi
    00000314: 	xorl	%eax, %eax
    00000316: 	callq	__printf_chk@PLT # Offset: 790
    0000031b: 	movl	iterations(%rip), %ecx
.Ltmp264:
    00000321: 	addl	$0x1, %r13d
    00000325: 	cmpl	%ecx, %r13d
    00000328: 	jl	.Ltmp265 # Offset: 808
.Ltmp262:
    0000032a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000331: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000338: 	subq	$0x20, %rax
    0000033c: 	cmpq	%rax, %r13
    0000033f: 	je	.Ltmp266 # Offset: 831
    00000345: 	leaq	0x10(%r13), %rdi
    00000349: 	movq	0xb8(%rsp), %r12
    00000351: 	movq	%rdi, (%r13)
    00000355: 	movq	0xb0(%rsp), %r14
    0000035d: 	movq	%r14, %rax
    00000360: 	addq	%r12, %rax
    00000363: 	je	.Ltmp267 # Offset: 867
    00000365: 	testq	%r14, %r14
    00000368: 	je	.Ltmp268 # Offset: 872
.Ltmp267:
    0000036e: 	movq	%r12, 0x88(%rsp)
    00000376: 	cmpq	$0xf, %r12
    0000037a: 	ja	.Ltmp269 # Offset: 890
    00000380: 	cmpq	$0x1, %r12
    00000384: 	jne	.Ltmp270 # Offset: 900
    0000038a: 	movzbl	(%r14), %eax
    0000038e: 	movb	%al, 0x10(%r13)
.Ltmp422:
    00000392: 	movq	%r12, 0x8(%r13)
    00000396: 	movb	$0x0, (%rdi,%r12)
    0000039b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a9: 	addq	$0x20, %rax
    000003ad: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003b4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000003bb: 	je	.Ltmp271 # Offset: 955
.Ltmp436:
    000003c1: 	movq	-0x20(%rax), %r12
    000003c5: 	callq	clock@PLT # Offset: 965
    000003ca: 	pxor	%xmm0, %xmm0
    000003ce: 	movq	%rax, end_time(%rip)
    000003d5: 	movq	%r12, %rdi
    000003d8: 	subq	start_time(%rip), %rax
    000003df: 	cvtsi2sd	%rax, %xmm0
    000003e4: 	divsd	DATAat0x17358(%rip), %xmm0
    000003ec: 	callq	_Z13record_resultdPKc # Offset: 1004
    000003f1: 	movq	0xb0(%rsp), %rdi
    000003f9: 	leaq	0xc0(%rsp), %rax
    00000401: 	movq	%rax, 0x68(%rsp)
    00000406: 	cmpq	%rax, %rdi
    00000409: 	je	.Ltmp272 # Offset: 1033
    0000040b: 	movq	0xc0(%rsp), %rax
    00000413: 	leaq	0x1(%rax), %rsi
    00000417: 	callq	_ZdlPvm@PLT # Offset: 1047
.Ltmp272:
    0000041c: 	movq	0x70(%rsp), %rsi
    00000421: 	movq	0x60(%rsp), %rdi
    00000426: 	leaq	DATAat0x171e6(%rip), %rdx
    0000042d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1069
    00000432: 	callq	clock@PLT # Offset: 1074
    00000437: 	movl	iterations(%rip), %ecx
    0000043d: 	movq	%rax, start_time(%rip)
    00000444: 	testl	%ecx, %ecx
    00000446: 	jle	.Ltmp273 # Offset: 1094
    0000044c: 	movl	0x58(%rsp), %eax
    00000450: 	xorl	%r13d, %r13d
    00000453: 	leaq	init_value(%rip), %r12
    0000045a: 	leal	(%rax,%rbp), %r14d
    0000045e: 	addl	0x40(%rsp), %r14d
    00000463: 	addl	0x50(%rsp), %r14d
    00000468: 	movd	%r14d, %xmm5
    0000046d: 	pshufd	$0x0, %xmm5, %xmm6
    00000472: 	movaps	%xmm6, (%rsp)
    00000476: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp276:
    00000480: 	movq	%r15, %rax
    00000483: 	pxor	%xmm0, %xmm0
    00000487: 	nopw	(%rax,%rax) # Size: 9
.Ltmp274:
    00000490: 	movdqa	(%rsp), %xmm1
    00000495: 	paddd	(%rax), %xmm1
    00000499: 	addq	$0x10, %rax
    0000049d: 	paddd	%xmm1, %xmm0
    000004a1: 	cmpq	%rax, %rbx
    000004a4: 	jne	.Ltmp274 # Offset: 1188
    000004a6: 	cvttsd2si	(%r12), %edx
    000004ac: 	movdqa	%xmm0, %xmm1
    000004b0: 	psrldq	$0x8, %xmm1
    000004b5: 	paddd	%xmm1, %xmm0
    000004b9: 	movdqa	%xmm0, %xmm1
    000004bd: 	addl	%r14d, %edx
    000004c0: 	psrldq	$0x4, %xmm1
    000004c5: 	imull	$0x1f40, %edx, %edx
    000004cb: 	paddd	%xmm1, %xmm0
    000004cf: 	movd	%xmm0, %eax
    000004d3: 	cmpl	%eax, %edx
    000004d5: 	je	.Ltmp275 # Offset: 1237
    000004d7: 	movl	current_test(%rip), %edx
    000004dd: 	leaq	DATAat0x171d6(%rip), %rsi
    000004e4: 	movl	$0x1, %edi
    000004e9: 	xorl	%eax, %eax
    000004eb: 	callq	__printf_chk@PLT # Offset: 1259
    000004f0: 	movl	iterations(%rip), %ecx
.Ltmp275:
    000004f6: 	addl	$0x1, %r13d
    000004fa: 	cmpl	%ecx, %r13d
    000004fd: 	jl	.Ltmp276 # Offset: 1277
.Ltmp273:
    000004ff: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000506: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000050d: 	subq	$0x20, %rax
    00000511: 	cmpq	%rax, %r13
    00000514: 	je	.Ltmp277 # Offset: 1300
    0000051a: 	leaq	0x10(%r13), %rdi
    0000051e: 	movq	0xb8(%rsp), %r12
    00000526: 	movq	%rdi, (%r13)
    0000052a: 	movq	0xb0(%rsp), %r14
    00000532: 	movq	%r14, %rax
    00000535: 	addq	%r12, %rax
    00000538: 	je	.Ltmp278 # Offset: 1336
    0000053a: 	testq	%r14, %r14
    0000053d: 	je	.Ltmp279 # Offset: 1341
.Ltmp278:
    00000543: 	movq	%r12, 0x88(%rsp)
    0000054b: 	cmpq	$0xf, %r12
    0000054f: 	ja	.Ltmp280 # Offset: 1359
    00000555: 	cmpq	$0x1, %r12
    00000559: 	jne	.Ltmp281 # Offset: 1369
    0000055f: 	movzbl	(%r14), %eax
    00000563: 	movb	%al, 0x10(%r13)
.Ltmp459:
    00000567: 	movq	%r12, 0x8(%r13)
    0000056b: 	movb	$0x0, (%rdi,%r12)
    00000570: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000577: 	addq	$0x20, %rax
    0000057b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp440:
    00000582: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000589: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000590: 	je	.Ltmp282 # Offset: 1424
.Ltmp439:
    00000596: 	movq	-0x20(%rax), %r12
    0000059a: 	callq	clock@PLT # Offset: 1434
    0000059f: 	pxor	%xmm0, %xmm0
    000005a3: 	movq	%rax, end_time(%rip)
    000005aa: 	movq	%r12, %rdi
    000005ad: 	subq	start_time(%rip), %rax
    000005b4: 	cvtsi2sd	%rax, %xmm0
    000005b9: 	divsd	DATAat0x17358(%rip), %xmm0
    000005c1: 	callq	_Z13record_resultdPKc # Offset: 1473
    000005c6: 	movq	0xb0(%rsp), %rdi
    000005ce: 	cmpq	0x68(%rsp), %rdi
    000005d3: 	je	.Ltmp283 # Offset: 1491
    000005d5: 	movq	0xc0(%rsp), %rax
    000005dd: 	leaq	0x1(%rax), %rsi
    000005e1: 	callq	_ZdlPvm@PLT # Offset: 1505
.Ltmp283:
    000005e6: 	movq	0x70(%rsp), %rsi
    000005eb: 	movq	0x60(%rsp), %rdi
    000005f0: 	leaq	DATAat0x171fe(%rip), %rdx
    000005f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1527
    000005fc: 	callq	clock@PLT # Offset: 1532
    00000601: 	movl	iterations(%rip), %ecx
    00000607: 	movq	%rax, start_time(%rip)
    0000060e: 	testl	%ecx, %ecx
    00000610: 	jle	.Ltmp284 # Offset: 1552
    00000616: 	movd	%ebp, %xmm4
    0000061a: 	xorl	%r13d, %r13d
    0000061d: 	leaq	init_value(%rip), %r12
    00000624: 	pshufd	$0x0, %xmm4, %xmm6
    00000629: 	leaq	DATAat0x171d6(%rip), %r14
    00000630: 	movaps	%xmm6, (%rsp)
    00000634: 	movd	0x58(%rsp), %xmm6
    0000063a: 	pshufd	$0x0, %xmm6, %xmm5
    0000063f: 	movaps	%xmm5, 0x30(%rsp)
    00000644: 	movd	0x40(%rsp), %xmm5
    0000064a: 	pshufd	$0x0, %xmm5, %xmm4
    0000064f: 	movaps	%xmm4, 0x20(%rsp)
    00000654: 	movd	0x50(%rsp), %xmm4
    0000065a: 	pshufd	$0x0, %xmm4, %xmm6
    0000065f: 	movaps	%xmm6, 0x10(%rsp)
    00000664: 	nopl	(%rax) # Size: 4
.Ltmp287:
    00000668: 	movq	%r15, %rax
    0000066b: 	pxor	%xmm1, %xmm1
    0000066f: 	nop # Size: 1
.Ltmp285:
    00000670: 	movdqa	(%rsp), %xmm0
    00000675: 	paddd	(%rax), %xmm0
    00000679: 	addq	$0x10, %rax
    0000067d: 	paddd	0x30(%rsp), %xmm0
    00000683: 	paddd	0x20(%rsp), %xmm0
    00000689: 	paddd	0x10(%rsp), %xmm0
    0000068f: 	paddd	%xmm0, %xmm1
    00000693: 	cmpq	%rbx, %rax
    00000696: 	jne	.Ltmp285 # Offset: 1686
    00000698: 	cvttsd2si	(%r12), %edx
    0000069e: 	movdqa	%xmm1, %xmm0
    000006a2: 	psrldq	$0x8, %xmm0
    000006a7: 	paddd	%xmm0, %xmm1
    000006ab: 	movdqa	%xmm1, %xmm0
    000006af: 	addl	%ebp, %edx
    000006b1: 	psrldq	$0x4, %xmm0
    000006b6: 	addl	0x58(%rsp), %edx
    000006ba: 	addl	0x40(%rsp), %edx
    000006be: 	addl	0x50(%rsp), %edx
    000006c2: 	paddd	%xmm0, %xmm1
    000006c6: 	imull	$0x1f40, %edx, %edx
    000006cc: 	movd	%xmm1, %eax
    000006d0: 	cmpl	%eax, %edx
    000006d2: 	je	.Ltmp286 # Offset: 1746
    000006d4: 	movl	current_test(%rip), %edx
    000006da: 	movq	%r14, %rsi
    000006dd: 	movl	$0x1, %edi
    000006e2: 	xorl	%eax, %eax
    000006e4: 	callq	__printf_chk@PLT # Offset: 1764
    000006e9: 	movl	iterations(%rip), %ecx
.Ltmp286:
    000006ef: 	addl	$0x1, %r13d
    000006f3: 	cmpl	%ecx, %r13d
    000006f6: 	jl	.Ltmp287 # Offset: 1782
.Ltmp284:
    000006fc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000703: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000070a: 	subq	$0x20, %rax
    0000070e: 	cmpq	%rax, %r13
    00000711: 	je	.Ltmp288 # Offset: 1809
    00000717: 	leaq	0x10(%r13), %rdi
    0000071b: 	movq	0xb8(%rsp), %r12
    00000723: 	movq	%rdi, (%r13)
    00000727: 	movq	0xb0(%rsp), %r14
    0000072f: 	movq	%r14, %rax
    00000732: 	addq	%r12, %rax
    00000735: 	je	.Ltmp289 # Offset: 1845
    00000737: 	testq	%r14, %r14
    0000073a: 	je	.Ltmp290 # Offset: 1850
.Ltmp289:
    00000740: 	movq	%r12, 0x88(%rsp)
    00000748: 	cmpq	$0xf, %r12
    0000074c: 	ja	.Ltmp291 # Offset: 1868
    00000752: 	cmpq	$0x1, %r12
    00000756: 	jne	.Ltmp292 # Offset: 1878
    0000075c: 	movzbl	(%r14), %eax
    00000760: 	movb	%al, 0x10(%r13)
.Ltmp455:
    00000764: 	movq	%r12, 0x8(%r13)
    00000768: 	movb	$0x0, (%rdi,%r12)
    0000076d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000774: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000077b: 	addq	$0x20, %rax
    0000077f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000786: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000078d: 	je	.Ltmp293 # Offset: 1933
.Ltmp438:
    00000793: 	movq	-0x20(%rax), %r12
    00000797: 	callq	clock@PLT # Offset: 1943
    0000079c: 	pxor	%xmm0, %xmm0
    000007a0: 	movq	%rax, end_time(%rip)
    000007a7: 	movq	%r12, %rdi
    000007aa: 	subq	start_time(%rip), %rax
    000007b1: 	cvtsi2sd	%rax, %xmm0
    000007b6: 	divsd	DATAat0x17358(%rip), %xmm0
    000007be: 	callq	_Z13record_resultdPKc # Offset: 1982
    000007c3: 	movq	0xb0(%rsp), %rdi
    000007cb: 	cmpq	0x68(%rsp), %rdi
    000007d0: 	je	.Ltmp294 # Offset: 2000
    000007d2: 	movq	0xc0(%rsp), %rax
    000007da: 	leaq	0x1(%rax), %rsi
    000007de: 	callq	_ZdlPvm@PLT # Offset: 2014
.Ltmp294:
    000007e3: 	movq	0x70(%rsp), %rsi
    000007e8: 	movq	0x60(%rsp), %rdi
    000007ed: 	leaq	DATAat0x17217(%rip), %rdx
    000007f4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2036
    000007f9: 	callq	clock@PLT # Offset: 2041
    000007fe: 	movd	%ebp, %xmm5
    00000802: 	movl	iterations(%rip), %ecx
    00000808: 	xorl	%r13d, %r13d
    0000080b: 	pshufd	$0x0, %xmm5, %xmm6
    00000810: 	movq	%rax, start_time(%rip)
    00000817: 	leaq	init_value(%rip), %r12
    0000081e: 	leaq	DATAat0x171d6(%rip), %r14
    00000825: 	movaps	%xmm6, (%rsp)
    00000829: 	testl	%ecx, %ecx
    0000082b: 	jle	.Ltmp295 # Offset: 2091
    0000082d: 	nopl	(%rax) # Size: 3
.Ltmp298:
    00000830: 	movq	%r15, %rax
    00000833: 	pxor	%xmm0, %xmm0
    00000837: 	nopw	(%rax,%rax) # Size: 9
.Ltmp296:
    00000840: 	paddd	(%rax), %xmm0
    00000844: 	addq	$0x10, %rax
    00000848: 	psubd	(%rsp), %xmm0
    0000084d: 	cmpq	%rax, %rbx
    00000850: 	jne	.Ltmp296 # Offset: 2128
    00000852: 	cvttsd2si	(%r12), %edx
    00000858: 	movdqa	%xmm0, %xmm1
    0000085c: 	psrldq	$0x8, %xmm1
    00000861: 	paddd	%xmm1, %xmm0
    00000865: 	movdqa	%xmm0, %xmm1
    00000869: 	subl	%ebp, %edx
    0000086b: 	psrldq	$0x4, %xmm1
    00000870: 	imull	$0x1f40, %edx, %edx
    00000876: 	paddd	%xmm1, %xmm0
    0000087a: 	movd	%xmm0, %eax
    0000087e: 	cmpl	%eax, %edx
    00000880: 	je	.Ltmp297 # Offset: 2176
    00000882: 	movl	current_test(%rip), %edx
    00000888: 	movq	%r14, %rsi
    0000088b: 	movl	$0x1, %edi
    00000890: 	xorl	%eax, %eax
    00000892: 	callq	__printf_chk@PLT # Offset: 2194
    00000897: 	movl	iterations(%rip), %ecx
.Ltmp297:
    0000089d: 	addl	$0x1, %r13d
    000008a1: 	cmpl	%ecx, %r13d
    000008a4: 	jl	.Ltmp298 # Offset: 2212
.Ltmp295:
    000008a6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008ad: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000008b4: 	subq	$0x20, %rax
    000008b8: 	cmpq	%rax, %r13
    000008bb: 	je	.Ltmp299 # Offset: 2235
    000008c1: 	leaq	0x10(%r13), %rdi
    000008c5: 	movq	0xb8(%rsp), %r12
    000008cd: 	movq	%rdi, (%r13)
    000008d1: 	movq	0xb0(%rsp), %r14
    000008d9: 	movq	%r14, %rax
    000008dc: 	addq	%r12, %rax
    000008df: 	je	.Ltmp300 # Offset: 2271
    000008e1: 	testq	%r14, %r14
    000008e4: 	je	.Ltmp301 # Offset: 2276
.Ltmp300:
    000008ea: 	movq	%r12, 0x88(%rsp)
    000008f2: 	cmpq	$0xf, %r12
    000008f6: 	ja	.Ltmp302 # Offset: 2294
    000008fc: 	cmpq	$0x1, %r12
    00000900: 	jne	.Ltmp303 # Offset: 2304
    00000906: 	movzbl	(%r14), %eax
    0000090a: 	movb	%al, 0x10(%r13)
.Ltmp451:
    0000090e: 	movq	%r12, 0x8(%r13)
    00000912: 	movb	$0x0, (%rdi,%r12)
    00000917: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000091e: 	addq	$0x20, %rax
    00000922: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp447:
    00000929: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000930: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000937: 	je	.Ltmp304 # Offset: 2359
.Ltmp446:
    0000093d: 	movq	-0x20(%rax), %r12
    00000941: 	callq	clock@PLT # Offset: 2369
    00000946: 	pxor	%xmm0, %xmm0
    0000094a: 	movq	%rax, end_time(%rip)
    00000951: 	movq	%r12, %rdi
    00000954: 	subq	start_time(%rip), %rax
    0000095b: 	cvtsi2sd	%rax, %xmm0
    00000960: 	divsd	DATAat0x17358(%rip), %xmm0
    00000968: 	callq	_Z13record_resultdPKc # Offset: 2408
    0000096d: 	movq	0xb0(%rsp), %rdi
    00000975: 	cmpq	0x68(%rsp), %rdi
    0000097a: 	je	.Ltmp305 # Offset: 2426
    0000097c: 	movq	0xc0(%rsp), %rax
    00000984: 	leaq	0x1(%rax), %rsi
    00000988: 	callq	_ZdlPvm@PLT # Offset: 2440
.Ltmp305:
    0000098d: 	movq	0x70(%rsp), %rsi
    00000992: 	movq	0x60(%rsp), %rdi
    00000997: 	leaq	DATAat0x1722a(%rip), %rdx
    0000099e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2462
    000009a3: 	callq	clock@PLT # Offset: 2467
    000009a8: 	movl	iterations(%rip), %ecx
    000009ae: 	movq	%rax, start_time(%rip)
    000009b5: 	testl	%ecx, %ecx
    000009b7: 	jle	.Ltmp306 # Offset: 2487
    000009bd: 	movl	0x58(%rsp), %eax
    000009c1: 	xorl	%r13d, %r13d
    000009c4: 	leaq	init_value(%rip), %r12
    000009cb: 	leal	(%rax,%rbp), %r14d
    000009cf: 	addl	0x40(%rsp), %r14d
    000009d4: 	addl	0x50(%rsp), %r14d
    000009d9: 	movd	%r14d, %xmm7
    000009de: 	pshufd	$0x0, %xmm7, %xmm5
    000009e3: 	movaps	%xmm5, (%rsp)
    000009e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp309:
    000009f0: 	movq	%r15, %rax
    000009f3: 	pxor	%xmm0, %xmm0
    000009f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp307:
    00000a00: 	paddd	(%rax), %xmm0
    00000a04: 	addq	$0x10, %rax
    00000a08: 	psubd	(%rsp), %xmm0
    00000a0d: 	cmpq	%rbx, %rax
    00000a10: 	jne	.Ltmp307 # Offset: 2576
    00000a12: 	cvttsd2si	(%r12), %edx
    00000a18: 	movdqa	%xmm0, %xmm1
    00000a1c: 	psrldq	$0x8, %xmm1
    00000a21: 	paddd	%xmm1, %xmm0
    00000a25: 	movdqa	%xmm0, %xmm1
    00000a29: 	subl	%r14d, %edx
    00000a2c: 	psrldq	$0x4, %xmm1
    00000a31: 	imull	$0x1f40, %edx, %edx
    00000a37: 	paddd	%xmm1, %xmm0
    00000a3b: 	movd	%xmm0, %eax
    00000a3f: 	cmpl	%eax, %edx
    00000a41: 	je	.Ltmp308 # Offset: 2625
    00000a43: 	movl	current_test(%rip), %edx
    00000a49: 	leaq	DATAat0x171d6(%rip), %rsi
    00000a50: 	movl	$0x1, %edi
    00000a55: 	xorl	%eax, %eax
    00000a57: 	callq	__printf_chk@PLT # Offset: 2647
    00000a5c: 	movl	iterations(%rip), %ecx
.Ltmp308:
    00000a62: 	addl	$0x1, %r13d
    00000a66: 	cmpl	%ecx, %r13d
    00000a69: 	jl	.Ltmp309 # Offset: 2665
.Ltmp306:
    00000a6b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a72: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000a79: 	subq	$0x20, %rax
    00000a7d: 	cmpq	%rax, %r13
    00000a80: 	je	.Ltmp310 # Offset: 2688
    00000a86: 	leaq	0x10(%r13), %rdi
    00000a8a: 	movq	0xb8(%rsp), %r12
    00000a92: 	movq	%rdi, (%r13)
    00000a96: 	movq	0xb0(%rsp), %r14
    00000a9e: 	movq	%r14, %rax
    00000aa1: 	addq	%r12, %rax
    00000aa4: 	je	.Ltmp311 # Offset: 2724
    00000aa6: 	testq	%r14, %r14
    00000aa9: 	je	.Ltmp312 # Offset: 2729
.Ltmp311:
    00000aaf: 	movq	%r12, 0x88(%rsp)
    00000ab7: 	cmpq	$0xf, %r12
    00000abb: 	ja	.Ltmp313 # Offset: 2747
    00000ac1: 	cmpq	$0x1, %r12
    00000ac5: 	jne	.Ltmp314 # Offset: 2757
    00000acb: 	movzbl	(%r14), %eax
    00000acf: 	movb	%al, 0x10(%r13)
.Ltmp449:
    00000ad3: 	movq	%r12, 0x8(%r13)
    00000ad7: 	movb	$0x0, (%rdi,%r12)
    00000adc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ae3: 	addq	$0x20, %rax
    00000ae7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp445:
    00000aee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000af5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000afc: 	je	.Ltmp315 # Offset: 2812
.Ltmp444:
    00000b02: 	movq	-0x20(%rax), %r12
    00000b06: 	callq	clock@PLT # Offset: 2822
    00000b0b: 	pxor	%xmm0, %xmm0
    00000b0f: 	movq	%rax, end_time(%rip)
    00000b16: 	movq	%r12, %rdi
    00000b19: 	subq	start_time(%rip), %rax
    00000b20: 	cvtsi2sd	%rax, %xmm0
    00000b25: 	divsd	DATAat0x17358(%rip), %xmm0
    00000b2d: 	callq	_Z13record_resultdPKc # Offset: 2861
    00000b32: 	movq	0xb0(%rsp), %rdi
    00000b3a: 	cmpq	0x68(%rsp), %rdi
    00000b3f: 	je	.Ltmp316 # Offset: 2879
    00000b41: 	movq	0xc0(%rsp), %rax
    00000b49: 	leaq	0x1(%rax), %rsi
    00000b4d: 	callq	_ZdlPvm@PLT # Offset: 2893
.Ltmp316:
    00000b52: 	movq	0x70(%rsp), %rsi
    00000b57: 	movq	0x60(%rsp), %rdi
    00000b5c: 	leaq	DATAat0x17247(%rip), %rdx
    00000b63: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2915
    00000b68: 	callq	clock@PLT # Offset: 2920
    00000b6d: 	movl	iterations(%rip), %ecx
    00000b73: 	movq	%rax, start_time(%rip)
    00000b7a: 	testl	%ecx, %ecx
    00000b7c: 	jle	.Ltmp317 # Offset: 2940
    00000b82: 	movd	0x58(%rsp), %xmm7
    00000b88: 	movd	%ebp, %xmm4
    00000b8c: 	xorl	%r13d, %r13d
    00000b8f: 	leaq	init_value(%rip), %r12
    00000b96: 	pshufd	$0x0, %xmm4, %xmm6
    00000b9b: 	movd	0x40(%rsp), %xmm4
    00000ba1: 	leaq	DATAat0x171d6(%rip), %r14
    00000ba8: 	pshufd	$0x0, %xmm7, %xmm5
    00000bad: 	movd	0x50(%rsp), %xmm7
    00000bb3: 	movaps	%xmm6, (%rsp)
    00000bb7: 	movaps	%xmm5, 0x30(%rsp)
    00000bbc: 	pshufd	$0x0, %xmm4, %xmm6
    00000bc1: 	pshufd	$0x0, %xmm7, %xmm5
    00000bc6: 	movaps	%xmm6, 0x20(%rsp)
    00000bcb: 	movaps	%xmm5, 0x10(%rsp)
.Ltmp320:
    00000bd0: 	movq	%r15, %rax
    00000bd3: 	pxor	%xmm1, %xmm1
    00000bd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp318:
    00000be0: 	movdqa	(%rax), %xmm0
    00000be4: 	psubd	(%rsp), %xmm0
    00000be9: 	addq	$0x10, %rax
    00000bed: 	psubd	0x30(%rsp), %xmm0
    00000bf3: 	psubd	0x20(%rsp), %xmm0
    00000bf9: 	psubd	0x10(%rsp), %xmm0
    00000bff: 	paddd	%xmm0, %xmm1
    00000c03: 	cmpq	%rax, %rbx
    00000c06: 	jne	.Ltmp318 # Offset: 3078
    00000c08: 	cvttsd2si	(%r12), %edx
    00000c0e: 	movdqa	%xmm1, %xmm0
    00000c12: 	psrldq	$0x8, %xmm0
    00000c17: 	paddd	%xmm0, %xmm1
    00000c1b: 	movdqa	%xmm1, %xmm0
    00000c1f: 	subl	%ebp, %edx
    00000c21: 	psrldq	$0x4, %xmm0
    00000c26: 	subl	0x58(%rsp), %edx
    00000c2a: 	subl	0x40(%rsp), %edx
    00000c2e: 	subl	0x50(%rsp), %edx
    00000c32: 	paddd	%xmm0, %xmm1
    00000c36: 	imull	$0x1f40, %edx, %edx
    00000c3c: 	movd	%xmm1, %eax
    00000c40: 	cmpl	%eax, %edx
    00000c42: 	je	.Ltmp319 # Offset: 3138
    00000c44: 	movl	current_test(%rip), %edx
    00000c4a: 	movq	%r14, %rsi
    00000c4d: 	movl	$0x1, %edi
    00000c52: 	xorl	%eax, %eax
    00000c54: 	callq	__printf_chk@PLT # Offset: 3156
    00000c59: 	movl	iterations(%rip), %ecx
.Ltmp319:
    00000c5f: 	addl	$0x1, %r13d
    00000c63: 	cmpl	%ecx, %r13d
    00000c66: 	jl	.Ltmp320 # Offset: 3174
.Ltmp317:
    00000c6c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c73: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000c7a: 	subq	$0x20, %rax
    00000c7e: 	cmpq	%rax, %r13
    00000c81: 	je	.Ltmp321 # Offset: 3201
    00000c87: 	leaq	0x10(%r13), %rdi
    00000c8b: 	movq	0xb8(%rsp), %r12
    00000c93: 	movq	%rdi, (%r13)
    00000c97: 	movq	0xb0(%rsp), %r14
    00000c9f: 	movq	%r14, %rax
    00000ca2: 	addq	%r12, %rax
    00000ca5: 	je	.Ltmp322 # Offset: 3237
    00000ca7: 	testq	%r14, %r14
    00000caa: 	je	.Ltmp323 # Offset: 3242
.Ltmp322:
    00000cb0: 	movq	%r12, 0x88(%rsp)
    00000cb8: 	cmpq	$0xf, %r12
    00000cbc: 	ja	.Ltmp324 # Offset: 3260
    00000cc2: 	cmpq	$0x1, %r12
    00000cc6: 	jne	.Ltmp325 # Offset: 3270
    00000ccc: 	movzbl	(%r14), %eax
    00000cd0: 	movb	%al, 0x10(%r13)
.Ltmp457:
    00000cd4: 	movq	%r12, 0x8(%r13)
    00000cd8: 	movb	$0x0, (%rdi,%r12)
    00000cdd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ce4: 	addq	$0x20, %rax
    00000ce8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp443:
    00000cef: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000cf6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cfd: 	je	.Ltmp326 # Offset: 3325
.Ltmp442:
    00000d03: 	movq	-0x20(%rax), %r12
    00000d07: 	callq	clock@PLT # Offset: 3335
    00000d0c: 	pxor	%xmm0, %xmm0
    00000d10: 	movq	%rax, end_time(%rip)
    00000d17: 	movq	%r12, %rdi
    00000d1a: 	subq	start_time(%rip), %rax
    00000d21: 	cvtsi2sd	%rax, %xmm0
    00000d26: 	divsd	DATAat0x17358(%rip), %xmm0
    00000d2e: 	callq	_Z13record_resultdPKc # Offset: 3374
    00000d33: 	movq	0xb0(%rsp), %rdi
    00000d3b: 	cmpq	0x68(%rsp), %rdi
    00000d40: 	je	.Ltmp327 # Offset: 3392
    00000d42: 	movq	0xc0(%rsp), %rax
    00000d4a: 	leaq	0x1(%rax), %rsi
    00000d4e: 	callq	_ZdlPvm@PLT # Offset: 3406
.Ltmp327:
    00000d53: 	movq	0x70(%rsp), %rsi
    00000d58: 	movq	0x60(%rsp), %rdi
    00000d5d: 	leaq	DATAat0x17265(%rip), %rdx
    00000d64: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3428
    00000d69: 	callq	clock@PLT # Offset: 3433
    00000d6e: 	movd	%ebp, %xmm5
    00000d72: 	movl	iterations(%rip), %ecx
    00000d78: 	xorl	%r13d, %r13d
    00000d7b: 	pshufd	$0x0, %xmm5, %xmm6
    00000d80: 	movq	%rax, start_time(%rip)
    00000d87: 	leaq	init_value(%rip), %r12
    00000d8e: 	leaq	DATAat0x171d6(%rip), %r14
    00000d95: 	movaps	%xmm6, (%rsp)
    00000d99: 	testl	%ecx, %ecx
    00000d9b: 	jle	.Ltmp328 # Offset: 3483
    00000da1: 	nopl	(%rax) # Size: 7
.Ltmp331:
    00000da8: 	movdqa	(%rsp), %xmm3
    00000dad: 	movq	%r15, %rax
    00000db0: 	pxor	%xmm2, %xmm2
    00000db4: 	psrlq	$0x20, %xmm3
    00000db9: 	nopl	(%rax) # Size: 7
.Ltmp329:
    00000dc0: 	movdqa	(%rax), %xmm0
    00000dc4: 	movdqa	(%rsp), %xmm1
    00000dc9: 	pmuludq	(%rax), %xmm1
    00000dcd: 	pshufd	$0x8, %xmm1, %xmm1
    00000dd2: 	addq	$0x10, %rax
    00000dd6: 	psrlq	$0x20, %xmm0
    00000ddb: 	pmuludq	%xmm3, %xmm0
    00000ddf: 	pshufd	$0x8, %xmm0, %xmm0
    00000de4: 	punpckldq	%xmm0, %xmm1
    00000de8: 	paddd	%xmm1, %xmm2
    00000dec: 	cmpq	%rbx, %rax
    00000def: 	jne	.Ltmp329 # Offset: 3567
    00000df1: 	cvttsd2si	(%r12), %edx
    00000df7: 	movdqa	%xmm2, %xmm0
    00000dfb: 	psrldq	$0x8, %xmm0
    00000e00: 	paddd	%xmm0, %xmm2
    00000e04: 	movdqa	%xmm2, %xmm0
    00000e08: 	imull	%ebp, %edx
    00000e0b: 	psrldq	$0x4, %xmm0
    00000e10: 	paddd	%xmm0, %xmm2
    00000e14: 	movd	%xmm2, %eax
    00000e18: 	imull	$0x1f40, %edx, %edx
    00000e1e: 	cmpl	%eax, %edx
    00000e20: 	je	.Ltmp330 # Offset: 3616
    00000e22: 	movl	current_test(%rip), %edx
    00000e28: 	movq	%r14, %rsi
    00000e2b: 	movl	$0x1, %edi
    00000e30: 	xorl	%eax, %eax
    00000e32: 	callq	__printf_chk@PLT # Offset: 3634
    00000e37: 	movl	iterations(%rip), %ecx
.Ltmp330:
    00000e3d: 	addl	$0x1, %r13d
    00000e41: 	cmpl	%ecx, %r13d
    00000e44: 	jl	.Ltmp331 # Offset: 3652
.Ltmp328:
    00000e4a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e51: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000e58: 	subq	$0x20, %rax
    00000e5c: 	cmpq	%rax, %r13
    00000e5f: 	je	.Ltmp332 # Offset: 3679
    00000e65: 	leaq	0x10(%r13), %rdi
    00000e69: 	movq	0xb8(%rsp), %r12
    00000e71: 	movq	%rdi, (%r13)
    00000e75: 	movq	0xb0(%rsp), %r14
    00000e7d: 	movq	%r14, %rax
    00000e80: 	addq	%r12, %rax
    00000e83: 	je	.Ltmp333 # Offset: 3715
    00000e85: 	testq	%r14, %r14
    00000e88: 	je	.Ltmp334 # Offset: 3720
.Ltmp333:
    00000e8e: 	movq	%r12, 0x88(%rsp)
    00000e96: 	cmpq	$0xf, %r12
    00000e9a: 	ja	.Ltmp335 # Offset: 3738
    00000ea0: 	cmpq	$0x1, %r12
    00000ea4: 	jne	.Ltmp336 # Offset: 3748
    00000eaa: 	movzbl	(%r14), %eax
    00000eae: 	movb	%al, 0x10(%r13)
.Ltmp453:
    00000eb2: 	movq	%r12, 0x8(%r13)
    00000eb6: 	movb	$0x0, (%rdi,%r12)
    00000ebb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ec2: 	addq	$0x20, %rax
    00000ec6: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp441:
    00000ecd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ed4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000edb: 	je	.Ltmp337 # Offset: 3803
.Ltmp434:
    00000ee1: 	movq	-0x20(%rax), %r12
    00000ee5: 	callq	clock@PLT # Offset: 3813
    00000eea: 	pxor	%xmm0, %xmm0
    00000eee: 	movq	%rax, end_time(%rip)
    00000ef5: 	movq	%r12, %rdi
    00000ef8: 	subq	start_time(%rip), %rax
    00000eff: 	cvtsi2sd	%rax, %xmm0
    00000f04: 	divsd	DATAat0x17358(%rip), %xmm0
    00000f0c: 	callq	_Z13record_resultdPKc # Offset: 3852
    00000f11: 	movq	0xb0(%rsp), %rdi
    00000f19: 	cmpq	0x68(%rsp), %rdi
    00000f1e: 	je	.Ltmp338 # Offset: 3870
    00000f20: 	movq	0xc0(%rsp), %rax
    00000f28: 	leaq	0x1(%rax), %rsi
    00000f2c: 	callq	_ZdlPvm@PLT # Offset: 3884
.Ltmp338:
    00000f31: 	movq	0x70(%rsp), %rsi
    00000f36: 	movq	0x60(%rsp), %rdi
    00000f3b: 	leaq	DATAat0x17278(%rip), %rdx
    00000f42: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3906
    00000f47: 	callq	clock@PLT # Offset: 3911
    00000f4c: 	movl	iterations(%rip), %ecx
    00000f52: 	movq	%rax, start_time(%rip)
    00000f59: 	testl	%ecx, %ecx
    00000f5b: 	jle	.Ltmp339 # Offset: 3931
    00000f61: 	movl	0x58(%rsp), %r14d
    00000f66: 	xorl	%r13d, %r13d
    00000f69: 	leaq	init_value(%rip), %r12
    00000f70: 	imull	%ebp, %r14d
    00000f74: 	imull	0x40(%rsp), %r14d
    00000f7a: 	imull	0x50(%rsp), %r14d
    00000f80: 	movd	%r14d, %xmm4
    00000f85: 	pshufd	$0x0, %xmm4, %xmm6
    00000f8a: 	movaps	%xmm6, (%rsp)
    00000f8e: 	nop # Size: 2
.Ltmp342:
    00000f90: 	movdqa	(%rsp), %xmm3
    00000f95: 	movq	%r15, %rax
    00000f98: 	pxor	%xmm2, %xmm2
    00000f9c: 	psrlq	$0x20, %xmm3
    00000fa1: 	nopl	(%rax) # Size: 7
.Ltmp340:
    00000fa8: 	movdqa	(%rax), %xmm0
    00000fac: 	movdqa	(%rsp), %xmm1
    00000fb1: 	pmuludq	(%rax), %xmm1
    00000fb5: 	pshufd	$0x8, %xmm1, %xmm1
    00000fba: 	addq	$0x10, %rax
    00000fbe: 	psrlq	$0x20, %xmm0
    00000fc3: 	pmuludq	%xmm3, %xmm0
    00000fc7: 	pshufd	$0x8, %xmm0, %xmm0
    00000fcc: 	punpckldq	%xmm0, %xmm1
    00000fd0: 	paddd	%xmm1, %xmm2
    00000fd4: 	cmpq	%rax, %rbx
    00000fd7: 	jne	.Ltmp340 # Offset: 4055
    00000fd9: 	cvttsd2si	(%r12), %edx
    00000fdf: 	movdqa	%xmm2, %xmm0
    00000fe3: 	psrldq	$0x8, %xmm0
    00000fe8: 	paddd	%xmm0, %xmm2
    00000fec: 	movdqa	%xmm2, %xmm0
    00000ff0: 	imull	%r14d, %edx
    00000ff4: 	psrldq	$0x4, %xmm0
    00000ff9: 	paddd	%xmm0, %xmm2
    00000ffd: 	movd	%xmm2, %eax
    00001001: 	imull	$0x1f40, %edx, %edx
    00001007: 	cmpl	%eax, %edx
    00001009: 	je	.Ltmp341 # Offset: 4105
    0000100b: 	movl	current_test(%rip), %edx
    00001011: 	leaq	DATAat0x171d6(%rip), %rsi
    00001018: 	movl	$0x1, %edi
    0000101d: 	xorl	%eax, %eax
    0000101f: 	callq	__printf_chk@PLT # Offset: 4127
    00001024: 	movl	iterations(%rip), %ecx
.Ltmp341:
    0000102a: 	addl	$0x1, %r13d
    0000102e: 	cmpl	%ecx, %r13d
    00001031: 	jl	.Ltmp342 # Offset: 4145
.Ltmp339:
    00001037: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000103e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001045: 	subq	$0x20, %rax
    00001049: 	cmpq	%rax, %r13
    0000104c: 	je	.Ltmp343 # Offset: 4172
    00001052: 	leaq	0x10(%r13), %rdi
    00001056: 	movq	0xb8(%rsp), %r12
    0000105e: 	movq	%rdi, (%r13)
    00001062: 	movq	0xb0(%rsp), %r14
    0000106a: 	movq	%r14, %rax
    0000106d: 	addq	%r12, %rax
    00001070: 	je	.Ltmp344 # Offset: 4208
    00001072: 	testq	%r14, %r14
    00001075: 	je	.Ltmp345 # Offset: 4213
.Ltmp344:
    0000107b: 	movq	%r12, 0x88(%rsp)
    00001083: 	cmpq	$0xf, %r12
    00001087: 	ja	.Ltmp346 # Offset: 4231
    0000108d: 	cmpq	$0x1, %r12
    00001091: 	jne	.Ltmp347 # Offset: 4241
    00001097: 	movzbl	(%r14), %eax
    0000109b: 	movb	%al, 0x10(%r13)
.Ltmp468:
    0000109f: 	movq	%r12, 0x8(%r13)
    000010a3: 	movb	$0x0, (%rdi,%r12)
    000010a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010af: 	addq	$0x20, %rax
    000010b3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp433:
    000010ba: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000010c1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010c8: 	je	.Ltmp348 # Offset: 4296
.Ltmp432:
    000010ce: 	movq	-0x20(%rax), %r12
    000010d2: 	callq	clock@PLT # Offset: 4306
    000010d7: 	pxor	%xmm0, %xmm0
    000010db: 	movq	%rax, end_time(%rip)
    000010e2: 	movq	%r12, %rdi
    000010e5: 	subq	start_time(%rip), %rax
    000010ec: 	cvtsi2sd	%rax, %xmm0
    000010f1: 	divsd	DATAat0x17358(%rip), %xmm0
    000010f9: 	callq	_Z13record_resultdPKc # Offset: 4345
    000010fe: 	movq	0xb0(%rsp), %rdi
    00001106: 	cmpq	0x68(%rsp), %rdi
    0000110b: 	je	.Ltmp349 # Offset: 4363
    0000110d: 	movq	0xc0(%rsp), %rax
    00001115: 	leaq	0x1(%rax), %rsi
    00001119: 	callq	_ZdlPvm@PLT # Offset: 4377
.Ltmp349:
    0000111e: 	movq	0x70(%rsp), %rsi
    00001123: 	movq	0x60(%rsp), %rdi
    00001128: 	leaq	DATAat0x17308(%rip), %rdx
    0000112f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4399
    00001134: 	callq	clock@PLT # Offset: 4404
    00001139: 	movl	iterations(%rip), %ecx
    0000113f: 	movq	%rax, start_time(%rip)
    00001146: 	testl	%ecx, %ecx
    00001148: 	jle	.Ltmp350 # Offset: 4424
    0000114e: 	movl	0x58(%rsp), %r14d
    00001153: 	xorl	%r13d, %r13d
    00001156: 	leaq	init_value(%rip), %r12
    0000115d: 	imull	%ebp, %r14d
    00001161: 	imull	0x40(%rsp), %r14d
    00001167: 	imull	0x50(%rsp), %r14d
    0000116d: 	movd	%r14d, %xmm7
    00001172: 	pshufd	$0x0, %xmm7, %xmm5
    00001177: 	movaps	%xmm5, (%rsp)
    0000117b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp353:
    00001180: 	movq	%r15, %rax
    00001183: 	pxor	%xmm0, %xmm0
    00001187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp351:
    00001190: 	movdqa	(%rsp), %xmm1
    00001195: 	paddd	(%rax), %xmm1
    00001199: 	addq	$0x10, %rax
    0000119d: 	paddd	%xmm1, %xmm0
    000011a1: 	cmpq	%rbx, %rax
    000011a4: 	jne	.Ltmp351 # Offset: 4516
    000011a6: 	cvttsd2si	(%r12), %edx
    000011ac: 	movdqa	%xmm0, %xmm1
    000011b0: 	psrldq	$0x8, %xmm1
    000011b5: 	paddd	%xmm1, %xmm0
    000011b9: 	movdqa	%xmm0, %xmm1
    000011bd: 	addl	%r14d, %edx
    000011c0: 	psrldq	$0x4, %xmm1
    000011c5: 	imull	$0x1f40, %edx, %edx
    000011cb: 	paddd	%xmm1, %xmm0
    000011cf: 	movd	%xmm0, %eax
    000011d3: 	cmpl	%eax, %edx
    000011d5: 	je	.Ltmp352 # Offset: 4565
    000011d7: 	movl	current_test(%rip), %edx
    000011dd: 	leaq	DATAat0x171d6(%rip), %rsi
    000011e4: 	movl	$0x1, %edi
    000011e9: 	xorl	%eax, %eax
    000011eb: 	callq	__printf_chk@PLT # Offset: 4587
    000011f0: 	movl	iterations(%rip), %ecx
.Ltmp352:
    000011f6: 	addl	$0x1, %r13d
    000011fa: 	cmpl	%ecx, %r13d
    000011fd: 	jl	.Ltmp353 # Offset: 4605
.Ltmp350:
    000011ff: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001206: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000120d: 	subq	$0x20, %rax
    00001211: 	cmpq	%rax, %r13
    00001214: 	je	.Ltmp354 # Offset: 4628
    0000121a: 	leaq	0x10(%r13), %rdi
    0000121e: 	movq	0xb8(%rsp), %r12
    00001226: 	movq	%rdi, (%r13)
    0000122a: 	movq	0xb0(%rsp), %r14
    00001232: 	movq	%r14, %rax
    00001235: 	addq	%r12, %rax
    00001238: 	je	.Ltmp355 # Offset: 4664
    0000123a: 	testq	%r14, %r14
    0000123d: 	je	.Ltmp356 # Offset: 4669
.Ltmp355:
    00001243: 	movq	%r12, 0x88(%rsp)
    0000124b: 	cmpq	$0xf, %r12
    0000124f: 	ja	.Ltmp357 # Offset: 4687
    00001255: 	cmpq	$0x1, %r12
    00001259: 	jne	.Ltmp358 # Offset: 4697
    0000125f: 	movzbl	(%r14), %eax
    00001263: 	movb	%al, 0x10(%r13)
.Ltmp465:
    00001267: 	movq	%r12, 0x8(%r13)
    0000126b: 	movb	$0x0, (%rdi,%r12)
    00001270: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001277: 	addq	$0x20, %rax
    0000127b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp431:
    00001282: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001289: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001290: 	je	.Ltmp359 # Offset: 4752
.Ltmp430:
    00001296: 	movq	-0x20(%rax), %r12
    0000129a: 	callq	clock@PLT # Offset: 4762
    0000129f: 	pxor	%xmm0, %xmm0
    000012a3: 	movq	%rax, end_time(%rip)
    000012aa: 	movq	%r12, %rdi
    000012ad: 	subq	start_time(%rip), %rax
    000012b4: 	cvtsi2sd	%rax, %xmm0
    000012b9: 	divsd	DATAat0x17358(%rip), %xmm0
    000012c1: 	callq	_Z13record_resultdPKc # Offset: 4801
    000012c6: 	movq	0xb0(%rsp), %rdi
    000012ce: 	cmpq	0x68(%rsp), %rdi
    000012d3: 	je	.Ltmp360 # Offset: 4819
    000012d5: 	movq	0xc0(%rsp), %rax
    000012dd: 	leaq	0x1(%rax), %rsi
    000012e1: 	callq	_ZdlPvm@PLT # Offset: 4833
.Ltmp360:
    000012e6: 	movq	0x70(%rsp), %rsi
    000012eb: 	movq	0x60(%rsp), %rdi
    000012f0: 	leaq	DATAat0x17328(%rip), %rdx
    000012f7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4855
    000012fc: 	callq	clock@PLT # Offset: 4860
    00001301: 	movl	iterations(%rip), %ecx
    00001307: 	movq	%rax, start_time(%rip)
    0000130e: 	testl	%ecx, %ecx
    00001310: 	jle	.Ltmp361 # Offset: 4880
    00001316: 	movd	0x58(%rsp), %xmm7
    0000131c: 	movd	%ebp, %xmm4
    00001320: 	xorl	%r13d, %r13d
    00001323: 	leaq	init_value(%rip), %r12
    0000132a: 	pshufd	$0x0, %xmm4, %xmm6
    0000132f: 	movd	0x40(%rsp), %xmm4
    00001335: 	leaq	DATAat0x171d6(%rip), %r14
    0000133c: 	pshufd	$0x0, %xmm7, %xmm5
    00001341: 	movd	0x50(%rsp), %xmm7
    00001347: 	movaps	%xmm6, (%rsp)
    0000134b: 	movaps	%xmm5, 0x30(%rsp)
    00001350: 	pshufd	$0x0, %xmm4, %xmm6
    00001355: 	pshufd	$0x0, %xmm7, %xmm5
    0000135a: 	movaps	%xmm6, 0x20(%rsp)
    0000135f: 	movaps	%xmm5, 0x10(%rsp)
    00001364: 	nopl	(%rax) # Size: 4
.Ltmp364:
    00001368: 	movdqa	(%rsp), %xmm6
    0000136d: 	movdqa	0x30(%rsp), %xmm5
    00001373: 	movq	%r15, %rax
    00001376: 	pxor	%xmm2, %xmm2
    0000137a: 	movdqa	0x20(%rsp), %xmm4
    00001380: 	movdqa	0x10(%rsp), %xmm3
    00001386: 	psrlq	$0x20, %xmm6
    0000138b: 	psrlq	$0x20, %xmm5
    00001390: 	psrlq	$0x20, %xmm4
    00001395: 	psrlq	$0x20, %xmm3
    0000139a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp362:
    000013a0: 	movdqa	(%rax), %xmm1
    000013a4: 	movdqa	(%rsp), %xmm0
    000013a9: 	pmuludq	(%rax), %xmm0
    000013ad: 	pshufd	$0x8, %xmm0, %xmm0
    000013b2: 	addq	$0x10, %rax
    000013b6: 	psrlq	$0x20, %xmm1
    000013bb: 	pmuludq	%xmm6, %xmm1
    000013bf: 	pshufd	$0x8, %xmm1, %xmm1
    000013c4: 	punpckldq	%xmm1, %xmm0
    000013c8: 	movdqa	0x30(%rsp), %xmm1
    000013ce: 	pmuludq	%xmm0, %xmm1
    000013d2: 	psrlq	$0x20, %xmm0
    000013d7: 	pmuludq	%xmm5, %xmm0
    000013db: 	pshufd	$0x8, %xmm1, %xmm1
    000013e0: 	pshufd	$0x8, %xmm0, %xmm0
    000013e5: 	punpckldq	%xmm0, %xmm1
    000013e9: 	movdqa	0x20(%rsp), %xmm0
    000013ef: 	pmuludq	%xmm1, %xmm0
    000013f3: 	psrlq	$0x20, %xmm1
    000013f8: 	pmuludq	%xmm4, %xmm1
    000013fc: 	pshufd	$0x8, %xmm0, %xmm0
    00001401: 	pshufd	$0x8, %xmm1, %xmm1
    00001406: 	punpckldq	%xmm1, %xmm0
    0000140a: 	movdqa	0x10(%rsp), %xmm1
    00001410: 	pmuludq	%xmm0, %xmm1
    00001414: 	psrlq	$0x20, %xmm0
    00001419: 	pmuludq	%xmm3, %xmm0
    0000141d: 	pshufd	$0x8, %xmm1, %xmm1
    00001422: 	pshufd	$0x8, %xmm0, %xmm0
    00001427: 	punpckldq	%xmm0, %xmm1
    0000142b: 	paddd	%xmm1, %xmm2
    0000142f: 	cmpq	%rbx, %rax
    00001432: 	jne	.Ltmp362 # Offset: 5170
    00001438: 	cvttsd2si	(%r12), %edx
    0000143e: 	movdqa	%xmm2, %xmm0
    00001442: 	psrldq	$0x8, %xmm0
    00001447: 	paddd	%xmm0, %xmm2
    0000144b: 	movdqa	%xmm2, %xmm0
    0000144f: 	imull	%ebp, %edx
    00001452: 	psrldq	$0x4, %xmm0
    00001457: 	imull	0x58(%rsp), %edx
    0000145c: 	paddd	%xmm0, %xmm2
    00001460: 	imull	0x40(%rsp), %edx
    00001465: 	movd	%xmm2, %eax
    00001469: 	imull	0x50(%rsp), %edx
    0000146e: 	imull	$0x1f40, %edx, %edx
    00001474: 	cmpl	%eax, %edx
    00001476: 	je	.Ltmp363 # Offset: 5238
    00001478: 	movl	current_test(%rip), %edx
    0000147e: 	movq	%r14, %rsi
    00001481: 	movl	$0x1, %edi
    00001486: 	xorl	%eax, %eax
    00001488: 	callq	__printf_chk@PLT # Offset: 5256
    0000148d: 	movl	iterations(%rip), %ecx
.Ltmp363:
    00001493: 	addl	$0x1, %r13d
    00001497: 	cmpl	%ecx, %r13d
    0000149a: 	jl	.Ltmp364 # Offset: 5274
.Ltmp361:
    000014a0: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000014a7: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000014ae: 	subq	$0x20, %rax
    000014b2: 	cmpq	%rax, %r13
    000014b5: 	je	.Ltmp365 # Offset: 5301
    000014bb: 	leaq	0x10(%r13), %rdi
    000014bf: 	movq	0xb8(%rsp), %r12
    000014c7: 	movq	%rdi, (%r13)
    000014cb: 	movq	0xb0(%rsp), %r14
    000014d3: 	movq	%r14, %rax
    000014d6: 	addq	%r12, %rax
    000014d9: 	je	.Ltmp366 # Offset: 5337
    000014db: 	testq	%r14, %r14
    000014de: 	je	.Ltmp367 # Offset: 5342
.Ltmp366:
    000014e4: 	movq	%r12, 0x88(%rsp)
    000014ec: 	cmpq	$0xf, %r12
    000014f0: 	ja	.Ltmp368 # Offset: 5360
    000014f6: 	cmpq	$0x1, %r12
    000014fa: 	jne	.Ltmp369 # Offset: 5370
    00001500: 	movzbl	(%r14), %eax
    00001504: 	movb	%al, 0x10(%r13)
.Ltmp467:
    00001508: 	movq	%r12, 0x8(%r13)
    0000150c: 	movb	$0x0, (%rdi,%r12)
    00001511: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001518: 	addq	$0x20, %rax
    0000151c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp429:
    00001523: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000152a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001531: 	je	.Ltmp370 # Offset: 5425
.Ltmp428:
    00001537: 	movq	-0x20(%rax), %r12
    0000153b: 	callq	clock@PLT # Offset: 5435
    00001540: 	pxor	%xmm0, %xmm0
    00001544: 	movq	%rax, end_time(%rip)
    0000154b: 	movq	%r12, %rdi
    0000154e: 	subq	start_time(%rip), %rax
    00001555: 	cvtsi2sd	%rax, %xmm0
    0000155a: 	divsd	DATAat0x17358(%rip), %xmm0
    00001562: 	callq	_Z13record_resultdPKc # Offset: 5474
    00001567: 	movq	0xb0(%rsp), %rdi
    0000156f: 	cmpq	0x68(%rsp), %rdi
    00001574: 	je	.Ltmp371 # Offset: 5492
    00001576: 	movq	0xc0(%rsp), %rax
    0000157e: 	leaq	0x1(%rax), %rsi
    00001582: 	callq	_ZdlPvm@PLT # Offset: 5506
.Ltmp371:
    00001587: 	movq	0x70(%rsp), %rsi
    0000158c: 	movq	0x60(%rsp), %rdi
    00001591: 	leaq	DATAat0x17296(%rip), %rdx
    00001598: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5528
    0000159d: 	callq	clock@PLT # Offset: 5533
    000015a2: 	movl	iterations(%rip), %edi
    000015a8: 	xorl	%r13d, %r13d
    000015ab: 	leaq	init_value(%rip), %r12
    000015b2: 	movq	%rax, start_time(%rip)
    000015b9: 	leaq	DATAat0x171d6(%rip), %r14
    000015c0: 	testl	%edi, %edi
    000015c2: 	jle	.Ltmp372 # Offset: 5570
    000015c4: 	nopl	(%rax) # Size: 4
.Ltmp375:
    000015c8: 	movq	%r15, %rcx
    000015cb: 	xorl	%esi, %esi
    000015cd: 	nopl	(%rax) # Size: 3
.Ltmp373:
    000015d0: 	movl	(%rcx), %eax
    000015d2: 	addq	$0x4, %rcx
    000015d6: 	cltd
    000015d7: 	idivl	%ebp
    000015d9: 	addl	%eax, %esi
    000015db: 	cmpq	%rcx, %rbx
    000015de: 	jne	.Ltmp373 # Offset: 5598
    000015e0: 	cvttsd2si	(%r12), %eax
    000015e6: 	cltd
    000015e7: 	idivl	%ebp
    000015e9: 	imull	$0x1f40, %eax, %eax
    000015ef: 	cmpl	%eax, %esi
    000015f1: 	je	.Ltmp374 # Offset: 5617
    000015f3: 	movl	current_test(%rip), %edx
    000015f9: 	movq	%r14, %rsi
    000015fc: 	movl	$0x1, %edi
    00001601: 	xorl	%eax, %eax
    00001603: 	callq	__printf_chk@PLT # Offset: 5635
    00001608: 	movl	iterations(%rip), %edi
.Ltmp374:
    0000160e: 	addl	$0x1, %r13d
    00001612: 	cmpl	%edi, %r13d
    00001615: 	jl	.Ltmp375 # Offset: 5653
.Ltmp372:
    00001617: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000161e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001625: 	subq	$0x20, %rax
    00001629: 	cmpq	%rax, %r13
    0000162c: 	je	.Ltmp376 # Offset: 5676
    00001632: 	leaq	0x10(%r13), %rdi
    00001636: 	movq	0xb8(%rsp), %r12
    0000163e: 	movq	%rdi, (%r13)
    00001642: 	movq	0xb0(%rsp), %r14
    0000164a: 	movq	%r14, %rax
    0000164d: 	addq	%r12, %rax
    00001650: 	je	.Ltmp377 # Offset: 5712
    00001652: 	testq	%r14, %r14
    00001655: 	je	.Ltmp378 # Offset: 5717
.Ltmp377:
    0000165b: 	movq	%r12, 0x88(%rsp)
    00001663: 	cmpq	$0xf, %r12
    00001667: 	ja	.Ltmp379 # Offset: 5735
    0000166d: 	cmpq	$0x1, %r12
    00001671: 	jne	.Ltmp380 # Offset: 5745
    00001677: 	movzbl	(%r14), %eax
    0000167b: 	movb	%al, 0x10(%r13)
.Ltmp461:
    0000167f: 	movq	%r12, 0x8(%r13)
    00001683: 	movb	$0x0, (%rdi,%r12)
    00001688: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000168f: 	addq	$0x20, %rax
    00001693: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp427:
    0000169a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016a1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016a8: 	je	.Ltmp381 # Offset: 5800
.Ltmp426:
    000016ae: 	movq	-0x20(%rax), %r12
    000016b2: 	callq	clock@PLT # Offset: 5810
    000016b7: 	pxor	%xmm0, %xmm0
    000016bb: 	movq	%rax, end_time(%rip)
    000016c2: 	movq	%r12, %rdi
    000016c5: 	subq	start_time(%rip), %rax
    000016cc: 	cvtsi2sd	%rax, %xmm0
    000016d1: 	divsd	DATAat0x17358(%rip), %xmm0
    000016d9: 	callq	_Z13record_resultdPKc # Offset: 5849
    000016de: 	movq	0xb0(%rsp), %rdi
    000016e6: 	cmpq	0x68(%rsp), %rdi
    000016eb: 	je	.Ltmp382 # Offset: 5867
    000016ed: 	movq	0xc0(%rsp), %rax
    000016f5: 	leaq	0x1(%rax), %rsi
    000016f9: 	callq	_ZdlPvm@PLT # Offset: 5881
.Ltmp382:
    000016fe: 	movq	0x70(%rsp), %rsi
    00001703: 	movq	0x60(%rsp), %rdi
    00001708: 	leaq	DATAat0x172a7(%rip), %rdx
    0000170f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5903
    00001714: 	callq	clock@PLT # Offset: 5908
    00001719: 	movl	iterations(%rip), %ecx
    0000171f: 	movq	%rax, start_time(%rip)
    00001726: 	testl	%ecx, %ecx
    00001728: 	jle	.Ltmp383 # Offset: 5928
    0000172e: 	movl	%ebp, %eax
    00001730: 	xorl	%r13d, %r13d
    00001733: 	leaq	init_value(%rip), %r12
    0000173a: 	cltd
    0000173b: 	idivl	0x58(%rsp)
    0000173f: 	cltd
    00001740: 	idivl	0x40(%rsp)
    00001744: 	cltd
    00001745: 	idivl	0x50(%rsp)
    00001749: 	movd	%eax, %xmm4
    0000174d: 	movl	%eax, %r14d
    00001750: 	pshufd	$0x0, %xmm4, %xmm6
    00001755: 	movaps	%xmm6, (%rsp)
    00001759: 	nopl	(%rax) # Size: 7
.Ltmp386:
    00001760: 	movq	%r15, %rax
    00001763: 	pxor	%xmm0, %xmm0
    00001767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp384:
    00001770: 	movdqa	(%rsp), %xmm1
    00001775: 	paddd	(%rax), %xmm1
    00001779: 	addq	$0x10, %rax
    0000177d: 	paddd	%xmm1, %xmm0
    00001781: 	cmpq	%rbx, %rax
    00001784: 	jne	.Ltmp384 # Offset: 6020
    00001786: 	cvttsd2si	(%r12), %edx
    0000178c: 	movdqa	%xmm0, %xmm1
    00001790: 	psrldq	$0x8, %xmm1
    00001795: 	paddd	%xmm1, %xmm0
    00001799: 	movdqa	%xmm0, %xmm1
    0000179d: 	addl	%r14d, %edx
    000017a0: 	psrldq	$0x4, %xmm1
    000017a5: 	imull	$0x1f40, %edx, %edx
    000017ab: 	paddd	%xmm1, %xmm0
    000017af: 	movd	%xmm0, %eax
    000017b3: 	cmpl	%eax, %edx
    000017b5: 	je	.Ltmp385 # Offset: 6069
    000017b7: 	movl	current_test(%rip), %edx
    000017bd: 	leaq	DATAat0x171d6(%rip), %rsi
    000017c4: 	movl	$0x1, %edi
    000017c9: 	xorl	%eax, %eax
    000017cb: 	callq	__printf_chk@PLT # Offset: 6091
    000017d0: 	movl	iterations(%rip), %ecx
.Ltmp385:
    000017d6: 	addl	$0x1, %r13d
    000017da: 	cmpl	%ecx, %r13d
    000017dd: 	jl	.Ltmp386 # Offset: 6109
.Ltmp383:
    000017df: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017e6: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000017ed: 	subq	$0x20, %rax
    000017f1: 	cmpq	%rax, %r13
    000017f4: 	je	.Ltmp387 # Offset: 6132
    000017fa: 	leaq	0x10(%r13), %rdi
    000017fe: 	movq	0xb8(%rsp), %r12
    00001806: 	movq	%rdi, (%r13)
    0000180a: 	movq	0xb0(%rsp), %r14
    00001812: 	movq	%r14, %rax
    00001815: 	addq	%r12, %rax
    00001818: 	je	.Ltmp388 # Offset: 6168
    0000181a: 	testq	%r14, %r14
    0000181d: 	je	.Ltmp389 # Offset: 6173
.Ltmp388:
    00001823: 	movq	%r12, 0x88(%rsp)
    0000182b: 	cmpq	$0xf, %r12
    0000182f: 	ja	.Ltmp390 # Offset: 6191
    00001835: 	cmpq	$0x1, %r12
    00001839: 	jne	.Ltmp391 # Offset: 6201
    0000183f: 	movzbl	(%r14), %eax
    00001843: 	movb	%al, 0x10(%r13)
.Ltmp470:
    00001847: 	movq	%r12, 0x8(%r13)
    0000184b: 	movb	$0x0, (%rdi,%r12)
    00001850: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001857: 	addq	$0x20, %rax
    0000185b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp425:
    00001862: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001869: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001870: 	je	.Ltmp392 # Offset: 6256
.Ltmp424:
    00001876: 	movq	-0x20(%rax), %r12
    0000187a: 	callq	clock@PLT # Offset: 6266
    0000187f: 	pxor	%xmm0, %xmm0
    00001883: 	movq	%rax, end_time(%rip)
    0000188a: 	movq	%r12, %rdi
    0000188d: 	subq	start_time(%rip), %rax
    00001894: 	cvtsi2sd	%rax, %xmm0
    00001899: 	divsd	DATAat0x17358(%rip), %xmm0
    000018a1: 	callq	_Z13record_resultdPKc # Offset: 6305
    000018a6: 	movq	0xb0(%rsp), %rdi
    000018ae: 	cmpq	0x68(%rsp), %rdi
    000018b3: 	je	.Ltmp393 # Offset: 6323
    000018b5: 	movq	0xc0(%rsp), %rax
    000018bd: 	leaq	0x1(%rax), %rsi
    000018c1: 	callq	_ZdlPvm@PLT # Offset: 6337
.Ltmp393:
    000018c6: 	movq	0x70(%rsp), %rsi
    000018cb: 	movq	0x60(%rsp), %rdi
    000018d0: 	leaq	DATAat0x172c3(%rip), %rdx
    000018d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6359
    000018dc: 	callq	clock@PLT # Offset: 6364
    000018e1: 	movl	iterations(%rip), %ecx
    000018e7: 	movq	%rax, start_time(%rip)
    000018ee: 	testl	%ecx, %ecx
    000018f0: 	jle	.Ltmp394 # Offset: 6384
    000018f6: 	movl	0x40(%rsp), %eax
    000018fa: 	imull	0x58(%rsp), %eax
    000018ff: 	movl	%ebp, %r14d
    00001902: 	xorl	%r13d, %r13d
    00001905: 	leaq	init_value(%rip), %r12
    0000190c: 	cltd
    0000190d: 	idivl	0x50(%rsp)
    00001911: 	subl	%eax, %r14d
    00001914: 	movd	%r14d, %xmm7
    00001919: 	pshufd	$0x0, %xmm7, %xmm5
    0000191e: 	movaps	%xmm5, (%rsp)
    00001922: 	nopw	(%rax,%rax) # Size: 6
.Ltmp397:
    00001928: 	movq	%r15, %rax
    0000192b: 	pxor	%xmm0, %xmm0
    0000192f: 	nop # Size: 1
.Ltmp395:
    00001930: 	movdqa	(%rsp), %xmm1
    00001935: 	paddd	(%rax), %xmm1
    00001939: 	addq	$0x10, %rax
    0000193d: 	paddd	%xmm1, %xmm0
    00001941: 	cmpq	%rbx, %rax
    00001944: 	jne	.Ltmp395 # Offset: 6468
    00001946: 	cvttsd2si	(%r12), %edx
    0000194c: 	movdqa	%xmm0, %xmm1
    00001950: 	psrldq	$0x8, %xmm1
    00001955: 	paddd	%xmm1, %xmm0
    00001959: 	movdqa	%xmm0, %xmm1
    0000195d: 	addl	%r14d, %edx
    00001960: 	psrldq	$0x4, %xmm1
    00001965: 	imull	$0x1f40, %edx, %edx
    0000196b: 	paddd	%xmm1, %xmm0
    0000196f: 	movd	%xmm0, %eax
    00001973: 	cmpl	%eax, %edx
    00001975: 	je	.Ltmp396 # Offset: 6517
    00001977: 	movl	current_test(%rip), %edx
    0000197d: 	leaq	DATAat0x171d6(%rip), %rsi
    00001984: 	movl	$0x1, %edi
    00001989: 	xorl	%eax, %eax
    0000198b: 	callq	__printf_chk@PLT # Offset: 6539
    00001990: 	movl	iterations(%rip), %ecx
.Ltmp396:
    00001996: 	addl	$0x1, %r13d
    0000199a: 	cmpl	%ecx, %r13d
    0000199d: 	jl	.Ltmp397 # Offset: 6557
.Ltmp394:
    0000199f: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000019a6: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000019ad: 	subq	$0x20, %rax
    000019b1: 	cmpq	%rax, %r13
    000019b4: 	je	.Ltmp398 # Offset: 6580
    000019ba: 	leaq	0x10(%r13), %rdi
    000019be: 	movq	0xb8(%rsp), %r12
    000019c6: 	movq	%rdi, (%r13)
    000019ca: 	movq	0xb0(%rsp), %r14
    000019d2: 	movq	%r14, %rax
    000019d5: 	addq	%r12, %rax
    000019d8: 	je	.Ltmp399 # Offset: 6616
    000019da: 	testq	%r14, %r14
    000019dd: 	je	.Ltmp400 # Offset: 6621
.Ltmp399:
    000019e3: 	movq	%r12, 0x88(%rsp)
    000019eb: 	cmpq	$0xf, %r12
    000019ef: 	ja	.Ltmp401 # Offset: 6639
    000019f5: 	cmpq	$0x1, %r12
    000019f9: 	jne	.Ltmp402 # Offset: 6649
    000019ff: 	movzbl	(%r14), %eax
    00001a03: 	movb	%al, 0x10(%r13)
.Ltmp464:
    00001a07: 	movq	%r12, 0x8(%r13)
    00001a0b: 	movb	$0x0, (%rdi,%r12)
    00001a10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a1e: 	addq	$0x20, %rax
    00001a22: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a29: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001a30: 	je	.Ltmp403 # Offset: 6704
.Ltmp423:
    00001a36: 	movq	-0x20(%rax), %r12
    00001a3a: 	callq	clock@PLT # Offset: 6714
    00001a3f: 	pxor	%xmm0, %xmm0
    00001a43: 	movq	%rax, end_time(%rip)
    00001a4a: 	movq	%r12, %rdi
    00001a4d: 	subq	start_time(%rip), %rax
    00001a54: 	cvtsi2sd	%rax, %xmm0
    00001a59: 	divsd	DATAat0x17358(%rip), %xmm0
    00001a61: 	callq	_Z13record_resultdPKc # Offset: 6753
    00001a66: 	movq	0xb0(%rsp), %rdi
    00001a6e: 	cmpq	0x68(%rsp), %rdi
    00001a73: 	je	.Ltmp404 # Offset: 6771
    00001a75: 	movq	0xc0(%rsp), %rax
    00001a7d: 	leaq	0x1(%rax), %rsi
    00001a81: 	callq	_ZdlPvm@PLT # Offset: 6785
.Ltmp404:
    00001a86: 	movq	0x70(%rsp), %rsi
    00001a8b: 	movq	0x60(%rsp), %rdi
    00001a90: 	leaq	DATAat0x172dc(%rip), %rdx
    00001a97: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6807
    00001a9c: 	callq	clock@PLT # Offset: 6812
    00001aa1: 	movl	iterations(%rip), %ecx
    00001aa7: 	movq	%rax, start_time(%rip)
    00001aae: 	testl	%ecx, %ecx
    00001ab0: 	jle	.Ltmp405 # Offset: 6832
    00001ab6: 	movl	0x40(%rsp), %eax
    00001aba: 	imull	0x58(%rsp), %eax
    00001abf: 	movd	%ebp, %xmm4
    00001ac3: 	xorl	%r14d, %r14d
    00001ac6: 	pshufd	$0x0, %xmm4, %xmm6
    00001acb: 	leaq	init_value(%rip), %r12
    00001ad2: 	movaps	%xmm6, (%rsp)
    00001ad6: 	cltd
    00001ad7: 	idivl	0x50(%rsp)
    00001adb: 	movd	%eax, %xmm7
    00001adf: 	movl	%eax, %r13d
    00001ae2: 	pshufd	$0x0, %xmm7, %xmm5
    00001ae7: 	movaps	%xmm5, 0x10(%rsp)
    00001aec: 	nopl	(%rax) # Size: 4
.Ltmp408:
    00001af0: 	movq	%r15, %rax
    00001af3: 	pxor	%xmm1, %xmm1
    00001af7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp406:
    00001b00: 	movdqa	(%rsp), %xmm0
    00001b05: 	paddd	(%rax), %xmm0
    00001b09: 	addq	$0x10, %rax
    00001b0d: 	psubd	0x10(%rsp), %xmm0
    00001b13: 	paddd	%xmm0, %xmm1
    00001b17: 	cmpq	%rax, %rbx
    00001b1a: 	jne	.Ltmp406 # Offset: 6938
    00001b1c: 	cvttsd2si	(%r12), %edx
    00001b22: 	movdqa	%xmm1, %xmm0
    00001b26: 	psrldq	$0x8, %xmm0
    00001b2b: 	paddd	%xmm0, %xmm1
    00001b2f: 	movdqa	%xmm1, %xmm0
    00001b33: 	addl	%ebp, %edx
    00001b35: 	psrldq	$0x4, %xmm0
    00001b3a: 	subl	%r13d, %edx
    00001b3d: 	paddd	%xmm0, %xmm1
    00001b41: 	imull	$0x1f40, %edx, %edx
    00001b47: 	movd	%xmm1, %eax
    00001b4b: 	cmpl	%eax, %edx
    00001b4d: 	je	.Ltmp407 # Offset: 6989
    00001b4f: 	movl	current_test(%rip), %edx
    00001b55: 	leaq	DATAat0x171d6(%rip), %rsi
    00001b5c: 	movl	$0x1, %edi
    00001b61: 	xorl	%eax, %eax
    00001b63: 	callq	__printf_chk@PLT # Offset: 7011
    00001b68: 	movl	iterations(%rip), %ecx
.Ltmp407:
    00001b6e: 	addl	$0x1, %r14d
    00001b72: 	cmpl	%ecx, %r14d
    00001b75: 	jl	.Ltmp408 # Offset: 7029
.Ltmp405:
    00001b7b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001b82: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001b89: 	subq	$0x20, %rax
    00001b8d: 	cmpq	%rax, %rbx
    00001b90: 	je	.Ltmp409 # Offset: 7056
    00001b96: 	leaq	0x10(%rbx), %rdi
    00001b9a: 	movq	0xb8(%rsp), %r12
    00001ba2: 	movq	%rdi, (%rbx)
    00001ba5: 	movq	0xb0(%rsp), %rbp
    00001bad: 	movq	%rbp, %rax
    00001bb0: 	addq	%r12, %rax
    00001bb3: 	je	.Ltmp410 # Offset: 7091
    00001bb5: 	testq	%rbp, %rbp
    00001bb8: 	je	.Ltmp411 # Offset: 7096
.Ltmp410:
    00001bbe: 	movq	%r12, 0x88(%rsp)
    00001bc6: 	cmpq	$0xf, %r12
    00001bca: 	ja	.Ltmp412 # Offset: 7114
    00001bd0: 	cmpq	$0x1, %r12
    00001bd4: 	jne	.Ltmp413 # Offset: 7124
    00001bda: 	movzbl	(%rbp), %eax
    00001bde: 	movb	%al, 0x10(%rbx)
.Ltmp462:
    00001be1: 	movq	%r12, 0x8(%rbx)
    00001be5: 	movb	$0x0, (%rdi,%r12)
    00001bea: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bf1: 	addq	$0x20, %rax
    00001bf5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp437:
    00001bfc: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c03: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c0a: 	je	.Ltmp414 # Offset: 7178
.Ltmp435:
    00001c10: 	movq	-0x20(%rax), %rbp
    00001c14: 	callq	clock@PLT # Offset: 7188
    00001c19: 	pxor	%xmm0, %xmm0
    00001c1d: 	movq	%rax, end_time(%rip)
    00001c24: 	movq	%rbp, %rdi
    00001c27: 	subq	start_time(%rip), %rax
    00001c2e: 	cvtsi2sd	%rax, %xmm0
    00001c33: 	divsd	DATAat0x17358(%rip), %xmm0
    00001c3b: 	callq	_Z13record_resultdPKc # Offset: 7227
    00001c40: 	movq	0xb0(%rsp), %rdi
    00001c48: 	cmpq	0x68(%rsp), %rdi
    00001c4d: 	je	.Ltmp415 # Offset: 7245
    00001c4f: 	movq	0xc0(%rsp), %rax
    00001c57: 	leaq	0x1(%rax), %rsi
    00001c5b: 	callq	_ZdlPvm@PLT # Offset: 7259
.Ltmp415:
    00001c60: 	movq	0x70(%rsp), %rsi
    00001c65: 	movq	0x60(%rsp), %rdi
    00001c6a: 	leaq	DATAat0x172f6(%rip), %rdx
    00001c71: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7281
    00001c76: 	movl	iterations(%rip), %edx
    00001c7c: 	xorl	%r8d, %r8d
    00001c7f: 	xorl	%ecx, %ecx
    00001c81: 	movl	$0x1f40, %esi
    00001c86: 	movq	0xb0(%rsp), %rdi
    00001c8e: 	callq	_Z9summarizePKciiii # Offset: 7310
    00001c93: 	movq	0xb0(%rsp), %rdi
    00001c9b: 	cmpq	0x68(%rsp), %rdi
    00001ca0: 	je	.Ltmp416 # Offset: 7328
    00001ca2: 	movq	0xc0(%rsp), %rax
    00001caa: 	leaq	0x1(%rax), %rsi
    00001cae: 	callq	_ZdlPvm@PLT # Offset: 7342
.Ltmp416:
    00001cb3: 	movq	0x90(%rsp), %rdi
    00001cbb: 	cmpq	0x78(%rsp), %rdi
    00001cc0: 	je	.Ltmp417 # Offset: 7360
    00001cc2: 	movq	0xa0(%rsp), %rax
    00001cca: 	leaq	0x1(%rax), %rsi
    00001cce: 	callq	_ZdlPvm@PLT # Offset: 7374
.Ltmp417:
    00001cd3: 	movq	0x7dd8(%rsp), %rax
    00001cdb: 	subq	%fs:0x28, %rax
    00001ce4: 	jne	.Ltmp418 # Offset: 7396
    00001cea: 	addq	$0x7de8, %rsp
    00001cf1: 	popq	%rbx
    00001cf2: 	popq	%rbp
    00001cf3: 	popq	%r12
    00001cf5: 	popq	%r13
    00001cf7: 	popq	%r14
    00001cf9: 	popq	%r15
    00001cfb: 	retq # Offset: 7419
    00001cfc: 	nopl	(%rax) # Size: 4
.Ltmp419:
    00001d00: 	addq	$0x20, %rbp
.Ltmp252:
    00001d04: 	cmpq	%rbp, (%rsp)
    00001d08: 	je	.Ltmp256 # Offset: 7432
.Ltmp420:
    00001d0e: 	movq	(%rbp), %rdi
    00001d12: 	leaq	0x10(%rbp), %rax
    00001d16: 	cmpq	%rax, %rdi
    00001d19: 	je	.Ltmp419 # Offset: 7449
    00001d1b: 	movq	0x10(%rbp), %rax
    00001d1f: 	addq	$0x20, %rbp
    00001d23: 	leaq	0x1(%rax), %rsi
    00001d27: 	callq	_ZdlPvm@PLT # Offset: 7463
    00001d2c: 	cmpq	%rbp, (%rsp)
    00001d30: 	jne	.Ltmp420 # Offset: 7472
    00001d32: 	jmp	.Ltmp256 # Offset: 7474
    00001d37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp248:
    00001d40: 	addq	$0x20, %rbp
    00001d44: 	cmpq	%rbx, %rbp
    00001d47: 	jne	.Ltmp249 # Offset: 7495
    00001d4d: 	addq	$0x8, %r13
    00001d51: 	cmpq	%r13, %r15
    00001d54: 	ja	.Ltmp250 # Offset: 7508
    00001d5a: 	jmp	.Ltmp421 # Offset: 7514
.Ltmp269:
    00001d5f: 	leaq	0x88(%rsp), %rsi
    00001d67: 	xorl	%edx, %edx
    00001d69: 	movq	%r13, %rdi
    00001d6c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7532
    00001d71: 	movq	%rax, (%r13)
    00001d75: 	movq	%rax, %rdi
    00001d78: 	movq	0x88(%rsp), %rax
    00001d80: 	movq	%rax, 0x10(%r13)
.Ltmp448:
    00001d84: 	movq	%r12, %rdx
    00001d87: 	movq	%r14, %rsi
    00001d8a: 	callq	memcpy@PLT # Offset: 7562
    00001d8f: 	movq	0x88(%rsp), %r12
    00001d97: 	movq	(%r13), %rdi
    00001d9b: 	jmp	.Ltmp422 # Offset: 7579
.Ltmp398:
    00001da0: 	movq	0x60(%rsp), %rsi
    00001da5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001dac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7596
    00001db1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001dbf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dc6: 	jne	.Ltmp423 # Offset: 7622
.Ltmp403:
    00001dcc: 	movq	-0x8(%rdx), %rax
    00001dd0: 	addq	$0x200, %rax
    00001dd6: 	jmp	.Ltmp423 # Offset: 7638
.Ltmp392:
    00001ddb: 	movq	-0x8(%rdx), %rax
    00001ddf: 	addq	$0x200, %rax
    00001de5: 	jmp	.Ltmp424 # Offset: 7653
.Ltmp387:
    00001dea: 	movq	0x60(%rsp), %rsi
    00001def: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001df6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7670
    00001dfb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e02: 	jmp	.Ltmp425 # Offset: 7682
.Ltmp381:
    00001e07: 	movq	-0x8(%rdx), %rax
    00001e0b: 	addq	$0x200, %rax
    00001e11: 	jmp	.Ltmp426 # Offset: 7697
.Ltmp376:
    00001e16: 	movq	0x60(%rsp), %rsi
    00001e1b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e22: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7714
    00001e27: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e2e: 	jmp	.Ltmp427 # Offset: 7726
.Ltmp370:
    00001e33: 	movq	-0x8(%rdx), %rax
    00001e37: 	addq	$0x200, %rax
    00001e3d: 	jmp	.Ltmp428 # Offset: 7741
.Ltmp365:
    00001e42: 	movq	0x60(%rsp), %rsi
    00001e47: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e4e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7758
    00001e53: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e5a: 	jmp	.Ltmp429 # Offset: 7770
.Ltmp359:
    00001e5f: 	movq	-0x8(%rdx), %rax
    00001e63: 	addq	$0x200, %rax
    00001e69: 	jmp	.Ltmp430 # Offset: 7785
.Ltmp354:
    00001e6e: 	movq	0x60(%rsp), %rsi
    00001e73: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e7a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7802
    00001e7f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e86: 	jmp	.Ltmp431 # Offset: 7814
.Ltmp348:
    00001e8b: 	movq	-0x8(%rdx), %rax
    00001e8f: 	addq	$0x200, %rax
    00001e95: 	jmp	.Ltmp432 # Offset: 7829
.Ltmp343:
    00001e9a: 	movq	0x60(%rsp), %rsi
    00001e9f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ea6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7846
    00001eab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001eb2: 	jmp	.Ltmp433 # Offset: 7858
.Ltmp337:
    00001eb7: 	movq	-0x8(%rdx), %rax
    00001ebb: 	addq	$0x200, %rax
    00001ec1: 	jmp	.Ltmp434 # Offset: 7873
.Ltmp414:
    00001ec6: 	movq	-0x8(%rdx), %rax
    00001eca: 	addq	$0x200, %rax
    00001ed0: 	jmp	.Ltmp435 # Offset: 7888
.Ltmp266:
    00001ed5: 	movq	0x60(%rsp), %rsi
    00001eda: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ee1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7905
    00001ee6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001eed: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001ef4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001efb: 	jne	.Ltmp436 # Offset: 7931
.Ltmp271:
    00001f01: 	movq	-0x8(%rdx), %rax
    00001f05: 	addq	$0x200, %rax
    00001f0b: 	jmp	.Ltmp436 # Offset: 7947
.Ltmp409:
    00001f10: 	movq	0x60(%rsp), %rsi
    00001f15: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f1c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7964
    00001f21: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f28: 	jmp	.Ltmp437 # Offset: 7976
.Ltmp288:
    00001f2d: 	movq	0x60(%rsp), %rsi
    00001f32: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f39: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7993
    00001f3e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f45: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001f4c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f53: 	jne	.Ltmp438 # Offset: 8019
.Ltmp293:
    00001f59: 	movq	-0x8(%rdx), %rax
    00001f5d: 	addq	$0x200, %rax
    00001f63: 	jmp	.Ltmp438 # Offset: 8035
.Ltmp282:
    00001f68: 	movq	-0x8(%rdx), %rax
    00001f6c: 	addq	$0x200, %rax
    00001f72: 	jmp	.Ltmp439 # Offset: 8050
.Ltmp277:
    00001f77: 	movq	0x60(%rsp), %rsi
    00001f7c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f83: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8067
    00001f88: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f8f: 	jmp	.Ltmp440 # Offset: 8079
.Ltmp332:
    00001f94: 	movq	0x60(%rsp), %rsi
    00001f99: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fa0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8096
    00001fa5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fac: 	jmp	.Ltmp441 # Offset: 8108
.Ltmp326:
    00001fb1: 	movq	-0x8(%rdx), %rax
    00001fb5: 	addq	$0x200, %rax
    00001fbb: 	jmp	.Ltmp442 # Offset: 8123
.Ltmp321:
    00001fc0: 	movq	0x60(%rsp), %rsi
    00001fc5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fcc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8140
    00001fd1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fd8: 	jmp	.Ltmp443 # Offset: 8152
.Ltmp315:
    00001fdd: 	movq	-0x8(%rdx), %rax
    00001fe1: 	addq	$0x200, %rax
    00001fe7: 	jmp	.Ltmp444 # Offset: 8167
.Ltmp310:
    00001fec: 	movq	0x60(%rsp), %rsi
    00001ff1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ff8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8184
    00001ffd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002004: 	jmp	.Ltmp445 # Offset: 8196
.Ltmp304:
    00002009: 	movq	-0x8(%rdx), %rax
    0000200d: 	addq	$0x200, %rax
    00002013: 	jmp	.Ltmp446 # Offset: 8211
.Ltmp299:
    00002018: 	movq	0x60(%rsp), %rsi
    0000201d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002024: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8228
    00002029: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002030: 	jmp	.Ltmp447 # Offset: 8240
.Ltmp270:
    00002035: 	testq	%r12, %r12
    00002038: 	je	.Ltmp422 # Offset: 8248
    0000203e: 	jmp	.Ltmp448 # Offset: 8254
    00002043: 	nopl	(%rax,%rax) # Size: 5
.Ltmp314:
    00002048: 	testq	%r12, %r12
    0000204b: 	je	.Ltmp449 # Offset: 8267
    00002051: 	jmp	.Ltmp450 # Offset: 8273
    00002056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp303:
    00002060: 	testq	%r12, %r12
    00002063: 	je	.Ltmp451 # Offset: 8291
    00002069: 	jmp	.Ltmp452 # Offset: 8297
    0000206e: 	nop # Size: 2
.Ltmp336:
    00002070: 	testq	%r12, %r12
    00002073: 	je	.Ltmp453 # Offset: 8307
    00002079: 	jmp	.Ltmp454 # Offset: 8313
    0000207e: 	nop # Size: 2
.Ltmp292:
    00002080: 	testq	%r12, %r12
    00002083: 	je	.Ltmp455 # Offset: 8323
    00002089: 	jmp	.Ltmp456 # Offset: 8329
    0000208e: 	nop # Size: 2
.Ltmp325:
    00002090: 	testq	%r12, %r12
    00002093: 	je	.Ltmp457 # Offset: 8339
    00002099: 	jmp	.Ltmp458 # Offset: 8345
    0000209e: 	nop # Size: 2
.Ltmp281:
    000020a0: 	testq	%r12, %r12
    000020a3: 	je	.Ltmp459 # Offset: 8355
    000020a9: 	jmp	.Ltmp460 # Offset: 8361
    000020ae: 	nop # Size: 2
.Ltmp380:
    000020b0: 	testq	%r12, %r12
    000020b3: 	je	.Ltmp461 # Offset: 8371
.Ltmp471:
    000020b9: 	movq	%r12, %rdx
    000020bc: 	movq	%r14, %rsi
    000020bf: 	callq	memcpy@PLT # Offset: 8383
    000020c4: 	movq	0x88(%rsp), %r12
    000020cc: 	movq	(%r13), %rdi
    000020d0: 	jmp	.Ltmp461 # Offset: 8400
.Ltmp413:
    000020d5: 	testq	%r12, %r12
    000020d8: 	je	.Ltmp462 # Offset: 8408
    000020de: 	jmp	.Ltmp463 # Offset: 8414
    000020e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp402:
    000020e8: 	testq	%r12, %r12
    000020eb: 	je	.Ltmp464 # Offset: 8427
.Ltmp473:
    000020f1: 	movq	%r12, %rdx
    000020f4: 	movq	%r14, %rsi
    000020f7: 	callq	memcpy@PLT # Offset: 8439
    000020fc: 	movq	0x88(%rsp), %r12
    00002104: 	movq	(%r13), %rdi
    00002108: 	jmp	.Ltmp464 # Offset: 8456
.Ltmp358:
    0000210d: 	testq	%r12, %r12
    00002110: 	je	.Ltmp465 # Offset: 8464
    00002116: 	jmp	.Ltmp466 # Offset: 8470
    0000211b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp369:
    00002120: 	testq	%r12, %r12
    00002123: 	je	.Ltmp467 # Offset: 8483
.Ltmp472:
    00002129: 	movq	%r12, %rdx
    0000212c: 	movq	%r14, %rsi
    0000212f: 	callq	memcpy@PLT # Offset: 8495
    00002134: 	movq	0x88(%rsp), %r12
    0000213c: 	movq	(%r13), %rdi
    00002140: 	jmp	.Ltmp467 # Offset: 8512
.Ltmp347:
    00002145: 	testq	%r12, %r12
    00002148: 	je	.Ltmp468 # Offset: 8520
    0000214e: 	jmp	.Ltmp469 # Offset: 8526
    00002153: 	nopl	(%rax,%rax) # Size: 5
.Ltmp391:
    00002158: 	testq	%r12, %r12
    0000215b: 	je	.Ltmp470 # Offset: 8539
.Ltmp474:
    00002161: 	movq	%r12, %rdx
    00002164: 	movq	%r14, %rsi
    00002167: 	callq	memcpy@PLT # Offset: 8551
    0000216c: 	movq	0x88(%rsp), %r12
    00002174: 	movq	(%r13), %rdi
    00002178: 	jmp	.Ltmp470 # Offset: 8568
.Ltmp313:
    0000217d: 	leaq	0x88(%rsp), %rsi
    00002185: 	xorl	%edx, %edx
    00002187: 	movq	%r13, %rdi
    0000218a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8586
    0000218f: 	movq	%rax, (%r13)
    00002193: 	movq	%rax, %rdi
    00002196: 	movq	0x88(%rsp), %rax
    0000219e: 	movq	%rax, 0x10(%r13)
.Ltmp450:
    000021a2: 	movq	%r12, %rdx
    000021a5: 	movq	%r14, %rsi
    000021a8: 	callq	memcpy@PLT # Offset: 8616
    000021ad: 	movq	0x88(%rsp), %r12
    000021b5: 	movq	(%r13), %rdi
    000021b9: 	jmp	.Ltmp449 # Offset: 8633
.Ltmp302:
    000021be: 	leaq	0x88(%rsp), %rsi
    000021c6: 	xorl	%edx, %edx
    000021c8: 	movq	%r13, %rdi
    000021cb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8651
    000021d0: 	movq	%rax, (%r13)
    000021d4: 	movq	%rax, %rdi
    000021d7: 	movq	0x88(%rsp), %rax
    000021df: 	movq	%rax, 0x10(%r13)
.Ltmp452:
    000021e3: 	movq	%r12, %rdx
    000021e6: 	movq	%r14, %rsi
    000021e9: 	callq	memcpy@PLT # Offset: 8681
    000021ee: 	movq	0x88(%rsp), %r12
    000021f6: 	movq	(%r13), %rdi
    000021fa: 	jmp	.Ltmp451 # Offset: 8698
.Ltmp335:
    000021ff: 	leaq	0x88(%rsp), %rsi
    00002207: 	xorl	%edx, %edx
    00002209: 	movq	%r13, %rdi
    0000220c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8716
    00002211: 	movq	%rax, (%r13)
    00002215: 	movq	%rax, %rdi
    00002218: 	movq	0x88(%rsp), %rax
    00002220: 	movq	%rax, 0x10(%r13)
.Ltmp454:
    00002224: 	movq	%r12, %rdx
    00002227: 	movq	%r14, %rsi
    0000222a: 	callq	memcpy@PLT # Offset: 8746
    0000222f: 	movq	0x88(%rsp), %r12
    00002237: 	movq	(%r13), %rdi
    0000223b: 	jmp	.Ltmp453 # Offset: 8763
.Ltmp291:
    00002240: 	leaq	0x88(%rsp), %rsi
    00002248: 	xorl	%edx, %edx
    0000224a: 	movq	%r13, %rdi
    0000224d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8781
    00002252: 	movq	%rax, (%r13)
    00002256: 	movq	%rax, %rdi
    00002259: 	movq	0x88(%rsp), %rax
    00002261: 	movq	%rax, 0x10(%r13)
.Ltmp456:
    00002265: 	movq	%r12, %rdx
    00002268: 	movq	%r14, %rsi
    0000226b: 	callq	memcpy@PLT # Offset: 8811
    00002270: 	movq	0x88(%rsp), %r12
    00002278: 	movq	(%r13), %rdi
    0000227c: 	jmp	.Ltmp455 # Offset: 8828
.Ltmp324:
    00002281: 	leaq	0x88(%rsp), %rsi
    00002289: 	xorl	%edx, %edx
    0000228b: 	movq	%r13, %rdi
    0000228e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8846
    00002293: 	movq	%rax, (%r13)
    00002297: 	movq	%rax, %rdi
    0000229a: 	movq	0x88(%rsp), %rax
    000022a2: 	movq	%rax, 0x10(%r13)
.Ltmp458:
    000022a6: 	movq	%r12, %rdx
    000022a9: 	movq	%r14, %rsi
    000022ac: 	callq	memcpy@PLT # Offset: 8876
    000022b1: 	movq	0x88(%rsp), %r12
    000022b9: 	movq	(%r13), %rdi
    000022bd: 	jmp	.Ltmp457 # Offset: 8893
.Ltmp280:
    000022c2: 	leaq	0x88(%rsp), %rsi
    000022ca: 	xorl	%edx, %edx
    000022cc: 	movq	%r13, %rdi
    000022cf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8911
    000022d4: 	movq	%rax, (%r13)
    000022d8: 	movq	%rax, %rdi
    000022db: 	movq	0x88(%rsp), %rax
    000022e3: 	movq	%rax, 0x10(%r13)
.Ltmp460:
    000022e7: 	movq	%r12, %rdx
    000022ea: 	movq	%r14, %rsi
    000022ed: 	callq	memcpy@PLT # Offset: 8941
    000022f2: 	movq	0x88(%rsp), %r12
    000022fa: 	movq	(%r13), %rdi
    000022fe: 	jmp	.Ltmp459 # Offset: 8958
.Ltmp412:
    00002303: 	leaq	0x88(%rsp), %rsi
    0000230b: 	xorl	%edx, %edx
    0000230d: 	movq	%rbx, %rdi
    00002310: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8976
    00002315: 	movq	%rax, (%rbx)
    00002318: 	movq	%rax, %rdi
    0000231b: 	movq	0x88(%rsp), %rax
    00002323: 	movq	%rax, 0x10(%rbx)
.Ltmp463:
    00002327: 	movq	%r12, %rdx
    0000232a: 	movq	%rbp, %rsi
    0000232d: 	callq	memcpy@PLT # Offset: 9005
    00002332: 	movq	0x88(%rsp), %r12
    0000233a: 	movq	(%rbx), %rdi
    0000233d: 	jmp	.Ltmp462 # Offset: 9021
.Ltmp379:
    00002342: 	leaq	0x88(%rsp), %rsi
    0000234a: 	xorl	%edx, %edx
    0000234c: 	movq	%r13, %rdi
    0000234f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9039
    00002354: 	movq	%rax, (%r13)
    00002358: 	movq	%rax, %rdi
    0000235b: 	movq	0x88(%rsp), %rax
    00002363: 	movq	%rax, 0x10(%r13)
    00002367: 	jmp	.Ltmp471 # Offset: 9063
.Ltmp357:
    0000236c: 	leaq	0x88(%rsp), %rsi
    00002374: 	xorl	%edx, %edx
    00002376: 	movq	%r13, %rdi
    00002379: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9081
    0000237e: 	movq	%rax, (%r13)
    00002382: 	movq	%rax, %rdi
    00002385: 	movq	0x88(%rsp), %rax
    0000238d: 	movq	%rax, 0x10(%r13)
.Ltmp466:
    00002391: 	movq	%r12, %rdx
    00002394: 	movq	%r14, %rsi
    00002397: 	callq	memcpy@PLT # Offset: 9111
    0000239c: 	movq	0x88(%rsp), %r12
    000023a4: 	movq	(%r13), %rdi
    000023a8: 	jmp	.Ltmp465 # Offset: 9128
.Ltmp346:
    000023ad: 	leaq	0x88(%rsp), %rsi
    000023b5: 	xorl	%edx, %edx
    000023b7: 	movq	%r13, %rdi
    000023ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9146
    000023bf: 	movq	%rax, (%r13)
    000023c3: 	movq	%rax, %rdi
    000023c6: 	movq	0x88(%rsp), %rax
    000023ce: 	movq	%rax, 0x10(%r13)
.Ltmp469:
    000023d2: 	movq	%r12, %rdx
    000023d5: 	movq	%r14, %rsi
    000023d8: 	callq	memcpy@PLT # Offset: 9176
    000023dd: 	movq	0x88(%rsp), %r12
    000023e5: 	movq	(%r13), %rdi
    000023e9: 	jmp	.Ltmp468 # Offset: 9193
.Ltmp368:
    000023ee: 	leaq	0x88(%rsp), %rsi
    000023f6: 	xorl	%edx, %edx
    000023f8: 	movq	%r13, %rdi
    000023fb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9211
    00002400: 	movq	%rax, (%r13)
    00002404: 	movq	%rax, %rdi
    00002407: 	movq	0x88(%rsp), %rax
    0000240f: 	movq	%rax, 0x10(%r13)
    00002413: 	jmp	.Ltmp472 # Offset: 9235
.Ltmp401:
    00002418: 	leaq	0x88(%rsp), %rsi
    00002420: 	xorl	%edx, %edx
    00002422: 	movq	%r13, %rdi
    00002425: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9253
    0000242a: 	movq	%rax, (%r13)
    0000242e: 	movq	%rax, %rdi
    00002431: 	movq	0x88(%rsp), %rax
    00002439: 	movq	%rax, 0x10(%r13)
    0000243d: 	jmp	.Ltmp473 # Offset: 9277
.Ltmp390:
    00002442: 	leaq	0x88(%rsp), %rsi
    0000244a: 	xorl	%edx, %edx
    0000244c: 	movq	%r13, %rdi
    0000244f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9295
    00002454: 	movq	%rax, (%r13)
    00002458: 	movq	%rax, %rdi
    0000245b: 	movq	0x88(%rsp), %rax
    00002463: 	movq	%rax, 0x10(%r13)
    00002467: 	jmp	.Ltmp474 # Offset: 9319
.Ltmp279:
    0000246c: 	leaq	DATAat0x17158(%rip), %rdi
    00002473: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9331
.Ltmp290:
    00002478: 	leaq	DATAat0x17158(%rip), %rdi
    0000247f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9343
.Ltmp301:
    00002484: 	leaq	DATAat0x17158(%rip), %rdi
    0000248b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9355
.Ltmp312:
    00002490: 	leaq	DATAat0x17158(%rip), %rdi
    00002497: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9367
.Ltmp323:
    0000249c: 	leaq	DATAat0x17158(%rip), %rdi
    000024a3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9379
.Ltmp334:
    000024a8: 	leaq	DATAat0x17158(%rip), %rdi
    000024af: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9391
.Ltmp345:
    000024b4: 	leaq	DATAat0x17158(%rip), %rdi
    000024bb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9403
.Ltmp356:
    000024c0: 	leaq	DATAat0x17158(%rip), %rdi
    000024c7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9415
.Ltmp367:
    000024cc: 	leaq	DATAat0x17158(%rip), %rdi
    000024d3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9427
.Ltmp378:
    000024d8: 	leaq	DATAat0x17158(%rip), %rdi
    000024df: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9439
.Ltmp389:
    000024e4: 	leaq	DATAat0x17158(%rip), %rdi
    000024eb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9451
.Ltmp400:
    000024f0: 	leaq	DATAat0x17158(%rip), %rdi
    000024f7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9463
.Ltmp411:
    000024fc: 	leaq	DATAat0x17158(%rip), %rdi
    00002503: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9475
.Ltmp418:
    00002508: 	callq	__stack_chk_fail@PLT # Offset: 9480
.Ltmp268:
    0000250d: 	leaq	DATAat0x17158(%rip), %rdi
    00002514: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9492
    00002519: 	endbr64
.Ltmp476:
    0000251d: 	movq	%rax, %rbp
    00002520: 	jmp	.Ltmp475 # Offset: 9504
    00002522: 	endbr64
    00002526: 	jmp	.Ltmp476 # Offset: 9510
    00002528: 	endbr64
    0000252c: 	jmp	.Ltmp476 # Offset: 9516
    0000252e: 	endbr64
    00002532: 	jmp	.Ltmp476 # Offset: 9522
.Ltmp475:
    00002534: 	movq	0xb0(%rsp), %rdi
    0000253c: 	cmpq	0x68(%rsp), %rdi
    00002541: 	je	.Ltmp477 # Offset: 9537
.Ltmp480:
    00002543: 	movq	0xc0(%rsp), %rax
    0000254b: 	leaq	0x1(%rax), %rsi
    0000254f: 	callq	_ZdlPvm@PLT # Offset: 9551
.Ltmp477:
    00002554: 	movq	0x90(%rsp), %rdi
    0000255c: 	cmpq	0x78(%rsp), %rdi
    00002561: 	je	.Ltmp478 # Offset: 9569
    00002563: 	movq	0xa0(%rsp), %rax
    0000256b: 	leaq	0x1(%rax), %rsi
    0000256f: 	callq	_ZdlPvm@PLT # Offset: 9583
.Ltmp478:
    00002574: 	movq	%rbp, %rdi
    00002577: 	callq	_Unwind_Resume@PLT # Offset: 9591
    0000257c: 	endbr64
    00002580: 	jmp	.Ltmp476 # Offset: 9600
    00002582: 	endbr64
    00002586: 	jmp	.Ltmp476 # Offset: 9606
    00002588: 	endbr64
    0000258c: 	jmp	.Ltmp476 # Offset: 9612
    0000258e: 	endbr64
    00002592: 	jmp	.Ltmp476 # Offset: 9618
    00002594: 	endbr64
    00002598: 	jmp	.Ltmp476 # Offset: 9624
    0000259a: 	endbr64
    0000259e: 	movq	%rax, %rbp
    000025a1: 	jmp	.Ltmp479 # Offset: 9633
    000025a3: 	endbr64
    000025a7: 	jmp	.Ltmp476 # Offset: 9639
    000025ac: 	endbr64
    000025b0: 	jmp	.Ltmp476 # Offset: 9648
.Ltmp479:
    000025b5: 	movq	0xb0(%rsp), %rdi
    000025bd: 	leaq	0xc0(%rsp), %rax
    000025c5: 	cmpq	%rax, %rdi
    000025c8: 	jne	.Ltmp480 # Offset: 9672
    000025ce: 	jmp	.Ltmp477 # Offset: 9678
    000025d0: 	endbr64
    000025d4: 	movq	%rax, %rbp
    000025d7: 	jmp	.Ltmp477 # Offset: 9687
    000025dc: 	endbr64
    000025e0: 	jmp	.Ltmp476 # Offset: 9696
    000025e5: 	endbr64
    000025e9: 	jmp	.Ltmp476 # Offset: 9705
    000025ee: 	endbr64
    000025f2: 	jmp	.Ltmp476 # Offset: 9714
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI15SingleItemClassIiEEvd"

Binary Function "_Z11TestOneTypeI15SingleItemClassIdEEvd" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x72f0
  Size        : 0x2988
  MaxSize     : 0x2990
  Offset      : 0x72f0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI15SingleItemClassIdEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp481:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp481 # Offset: 37
    00000027: 	subq	$0xb08, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movq	%xmm7, %rbp
    0000004a: 	movsd	%xmm0, 0x68(%rsp)
    00000050: 	movq	%fs:0x28, %rax
    00000059: 	movq	%rax, 0xfaf8(%rsp)
    00000061: 	xorl	%eax, %eax
    00000063: 	leaq	0xc0(%rsp), %rax
    0000006b: 	movaps	%xmm7, 0x30(%rsp)
    00000070: 	movhlps	%xmm4, %xmm7
    00000073: 	movq	%rax, 0x98(%rsp)
    0000007b: 	movq	%xmm7, %rcx
    00000080: 	movq	%rax, 0xb0(%rsp)
    00000088: 	leaq	0x8(%rcx), %r12
    0000008c: 	movabsq	$0x4331656c62756f64, %rax
    00000096: 	movq	%rax, 0xc0(%rsp)
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a5: 	movl	$0x7373616c, 0xc8(%rsp)
    000000b0: 	movq	%rax, (%rsp)
    000000b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000bb: 	movq	$0xc, 0xb8(%rsp)
    000000c7: 	movb	$0x0, 0xcc(%rsp)
    000000cf: 	movq	%rax, 0x20(%rsp)
    000000d4: 	movaps	%xmm4, 0x50(%rsp)
    000000d9: 	movq	%xmm7, 0x40(%rsp)
    000000df: 	movq	%xmm4, 0x18(%rsp)
    000000e5: 	cmpq	%r12, %rax
    000000e8: 	jbe	.Ltmp482 # Offset: 232
    000000ea: 	movq	%rbp, 0x60(%rsp)
    000000ef: 	movq	%r12, %r13
    000000f2: 	movq	%rax, %r15
    000000f5: 	nopl	(%rax) # Size: 3
.Ltmp485:
    000000f8: 	movq	(%r13), %rbp
    000000fc: 	leaq	0x200(%rbp), %rbx
    00000103: 	nopl	(%rax,%rax) # Size: 5
.Ltmp484:
    00000108: 	movq	(%rbp), %rdi
    0000010c: 	leaq	0x10(%rbp), %rdx
    00000110: 	cmpq	%rdx, %rdi
    00000113: 	je	.Ltmp483 # Offset: 275
    00000119: 	movq	0x10(%rbp), %rax
    0000011d: 	addq	$0x20, %rbp
    00000121: 	leaq	0x1(%rax), %rsi
    00000125: 	callq	_ZdlPvm@PLT # Offset: 293
    0000012a: 	cmpq	%rbx, %rbp
    0000012d: 	jne	.Ltmp484 # Offset: 301
    0000012f: 	addq	$0x8, %r13
    00000133: 	cmpq	%r13, %r15
    00000136: 	ja	.Ltmp485 # Offset: 310
.Ltmp670:
    00000138: 	movq	0x60(%rsp), %rbp
.Ltmp482:
    0000013d: 	movq	0x40(%rsp), %rcx
    00000142: 	cmpq	%rcx, 0x20(%rsp)
    00000147: 	jne	.Ltmp486 # Offset: 327
    00000149: 	jmp	.Ltmp487 # Offset: 329
    0000014e: 	nop # Size: 2
.Ltmp489:
    00000150: 	movq	0x10(%rbp), %rax
    00000154: 	addq	$0x20, %rbp
    00000158: 	leaq	0x1(%rax), %rsi
    0000015c: 	callq	_ZdlPvm@PLT # Offset: 348
.Ltmp486:
    00000161: 	cmpq	%rbp, 0x18(%rsp)
    00000166: 	je	.Ltmp488 # Offset: 358
.Ltmp490:
    00000168: 	movq	(%rbp), %rdi
    0000016c: 	leaq	0x10(%rbp), %rax
    00000170: 	cmpq	%rax, %rdi
    00000173: 	jne	.Ltmp489 # Offset: 371
    00000175: 	addq	$0x20, %rbp
    00000179: 	cmpq	0x18(%rsp), %rbp
    0000017e: 	jne	.Ltmp490 # Offset: 382
    00000180: 	cmpq	%r14, (%rsp)
    00000184: 	je	.Ltmp491 # Offset: 388
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp493:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp492 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp492:
    000001a9: 	addq	$0x20, %r14
.Ltmp488:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp493 # Offset: 433
.Ltmp491:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp494 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp495:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp495 # Offset: 477
.Ltmp494:
    000001df: 	movdqa	0x30(%rsp), %xmm6
    000001e5: 	movdqa	0x50(%rsp), %xmm7
    000001eb: 	leaq	0xf0(%rsp), %r12
    000001f3: 	leaq	0xfaf0(%rsp), %rbx
    000001fb: 	movsd	init_value(%rip), %xmm0
    00000203: 	movq	%r12, %rax
    00000206: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    0000020d: 	movaps	%xmm7, "_ZL7gLabels/1"+64(%rip)
    00000214: 	unpcklpd	%xmm0, %xmm0
    00000218: 	nopl	(%rax,%rax) # Size: 8
.Ltmp496:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x10, %rax
    00000227: 	cmpq	%rbx, %rax
    0000022a: 	jne	.Ltmp496 # Offset: 554
    0000022c: 	movsd	0x68(%rsp), %xmm4
    00000232: 	movsd	DATAat0x17368(%rip), %xmm6
    0000023a: 	leaq	0xb0(%rsp), %rax
    00000242: 	leaq	0xd0(%rsp), %r14
    0000024a: 	leaq	DATAat0x171c8(%rip), %rdx
    00000251: 	movq	%rax, %rsi
    00000254: 	movq	%r14, %rdi
    00000257: 	movq	%rax, 0x90(%rsp)
    0000025f: 	movapd	%xmm4, %xmm5
    00000263: 	addsd	%xmm4, %xmm6
    00000267: 	addsd	%xmm4, %xmm5
    0000026b: 	movsd	%xmm6, 0x78(%rsp)
    00000271: 	movsd	%xmm5, 0x80(%rsp)
    0000027a: 	divsd	%xmm6, %xmm5
    0000027e: 	movapd	%xmm5, %xmm0
    00000282: 	addsd	%xmm4, %xmm0
    00000286: 	movsd	%xmm0, 0x70(%rsp)
    0000028c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 652
    00000291: 	callq	clock@PLT # Offset: 657
    00000296: 	movl	iterations(%rip), %edx
    0000029c: 	movq	%rax, start_time(%rip)
    000002a3: 	testl	%edx, %edx
    000002a5: 	jle	.Ltmp497 # Offset: 677
    000002ab: 	movsd	0x68(%rsp), %xmm3
    000002b1: 	movsd	DATAat0x17370(%rip), %xmm4
    000002b9: 	pxor	%xmm6, %xmm6
    000002bd: 	xorl	%r13d, %r13d
    000002c0: 	movsd	%xmm6, 0x18(%rsp)
    000002c6: 	leaq	init_value(%rip), %rbp
    000002cd: 	leaq	DATAat0x171d6(%rip), %r15
    000002d4: 	unpcklpd	%xmm3, %xmm3
    000002d8: 	movsd	%xmm4, 0x50(%rsp)
    000002de: 	movaps	%xmm3, (%rsp)
    000002e2: 	movsd	DATAat0x17350(%rip), %xmm3
    000002ea: 	movsd	%xmm3, 0x60(%rsp)
.Ltmp501:
    000002f0: 	movq	%r12, %rax
    000002f3: 	pxor	%xmm0, %xmm0
    000002f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp498:
    00000300: 	movapd	(%rsp), %xmm2
    00000305: 	addpd	(%rax), %xmm2
    00000309: 	addq	$0x10, %rax
    0000030d: 	addsd	%xmm2, %xmm0
    00000311: 	unpckhpd	%xmm2, %xmm2
    00000315: 	addsd	%xmm2, %xmm0
    00000319: 	cmpq	%rbx, %rax
    0000031c: 	jne	.Ltmp498 # Offset: 796
    0000031e: 	movsd	0x68(%rsp), %xmm1
    00000324: 	addsd	(%rbp), %xmm1
    00000329: 	mulsd	0x50(%rsp), %xmm1
    0000032f: 	movsd	0x18(%rsp), %xmm7
    00000335: 	subsd	%xmm1, %xmm0
    00000339: 	comisd	%xmm0, %xmm7
    0000033d: 	jbe	.Ltmp499 # Offset: 829
    0000033f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp499:
    00000347: 	movsd	0x60(%rsp), %xmm7
    0000034d: 	comisd	%xmm0, %xmm7
    00000351: 	jbe	.Ltmp500 # Offset: 849
.Ltmp671:
    00000357: 	addl	$0x1, %r13d
    0000035b: 	cmpl	%edx, %r13d
    0000035e: 	jl	.Ltmp501 # Offset: 862
.Ltmp497:
    00000360: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000367: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000036e: 	subq	$0x20, %rax
    00000372: 	cmpq	%rax, %rbp
    00000375: 	je	.Ltmp502 # Offset: 885
    0000037b: 	leaq	0x10(%rbp), %rdi
    0000037f: 	movq	0xd8(%rsp), %r13
    00000387: 	movq	%rdi, (%rbp)
    0000038b: 	movq	0xd0(%rsp), %r15
    00000393: 	movq	%r15, %rax
    00000396: 	addq	%r13, %rax
    00000399: 	je	.Ltmp503 # Offset: 921
    0000039b: 	testq	%r15, %r15
    0000039e: 	je	.Ltmp504 # Offset: 926
.Ltmp503:
    000003a4: 	movq	%r13, 0xa8(%rsp)
    000003ac: 	cmpq	$0xf, %r13
    000003b0: 	ja	.Ltmp505 # Offset: 944
    000003b6: 	cmpq	$0x1, %r13
    000003ba: 	jne	.Ltmp506 # Offset: 954
    000003c0: 	movzbl	(%r15), %eax
    000003c4: 	movb	%al, 0x10(%rbp)
.Ltmp672:
    000003c7: 	movq	%r13, 0x8(%rbp)
    000003cb: 	movb	$0x0, (%rdi,%r13)
    000003d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003d7: 	addq	$0x20, %rax
    000003db: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp694:
    000003e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003f0: 	je	.Ltmp507 # Offset: 1008
.Ltmp692:
    000003f6: 	movq	-0x20(%rax), %rbp
    000003fa: 	callq	clock@PLT # Offset: 1018
    000003ff: 	pxor	%xmm0, %xmm0
    00000403: 	movq	%rax, end_time(%rip)
    0000040a: 	movq	%rbp, %rdi
    0000040d: 	subq	start_time(%rip), %rax
    00000414: 	cvtsi2sd	%rax, %xmm0
    00000419: 	divsd	DATAat0x17358(%rip), %xmm0
    00000421: 	callq	_Z13record_resultdPKc # Offset: 1057
    00000426: 	movq	0xd0(%rsp), %rdi
    0000042e: 	leaq	0xe0(%rsp), %rax
    00000436: 	movq	%rax, 0x88(%rsp)
    0000043e: 	cmpq	%rax, %rdi
    00000441: 	je	.Ltmp508 # Offset: 1089
    00000443: 	movq	0xe0(%rsp), %rax
    0000044b: 	leaq	0x1(%rax), %rsi
    0000044f: 	callq	_ZdlPvm@PLT # Offset: 1103
.Ltmp508:
    00000454: 	movq	0x90(%rsp), %rsi
    0000045c: 	leaq	DATAat0x171e6(%rip), %rdx
    00000463: 	movq	%r14, %rdi
    00000466: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1126
    0000046b: 	callq	clock@PLT # Offset: 1131
    00000470: 	movl	iterations(%rip), %edx
    00000476: 	movq	%rax, start_time(%rip)
    0000047d: 	testl	%edx, %edx
    0000047f: 	jle	.Ltmp509 # Offset: 1151
    00000485: 	movsd	0x80(%rsp), %xmm0
    0000048e: 	addsd	0x68(%rsp), %xmm0
    00000494: 	pxor	%xmm3, %xmm3
    00000498: 	xorl	%r13d, %r13d
    0000049b: 	addsd	0x78(%rsp), %xmm0
    000004a1: 	movsd	0x70(%rsp), %xmm5
    000004a7: 	movsd	%xmm3, 0x18(%rsp)
    000004ad: 	leaq	init_value(%rip), %rbp
    000004b4: 	movsd	DATAat0x17370(%rip), %xmm7
    000004bc: 	movsd	DATAat0x17350(%rip), %xmm6
    000004c4: 	leaq	DATAat0x171d6(%rip), %r15
    000004cb: 	addsd	%xmm0, %xmm5
    000004cf: 	movsd	%xmm7, 0x50(%rsp)
    000004d5: 	movsd	%xmm6, 0x60(%rsp)
    000004db: 	movapd	%xmm5, %xmm7
    000004df: 	movsd	%xmm5, 0x20(%rsp)
    000004e5: 	unpcklpd	%xmm7, %xmm7
    000004e9: 	movaps	%xmm7, (%rsp)
    000004ed: 	nopl	(%rax) # Size: 3
.Ltmp513:
    000004f0: 	movq	%r12, %rax
    000004f3: 	pxor	%xmm0, %xmm0
    000004f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp510:
    00000500: 	movapd	(%rsp), %xmm2
    00000505: 	addpd	(%rax), %xmm2
    00000509: 	addq	$0x10, %rax
    0000050d: 	addsd	%xmm2, %xmm0
    00000511: 	unpckhpd	%xmm2, %xmm2
    00000515: 	addsd	%xmm2, %xmm0
    00000519: 	cmpq	%rax, %rbx
    0000051c: 	jne	.Ltmp510 # Offset: 1308
    0000051e: 	movsd	0x20(%rsp), %xmm1
    00000524: 	addsd	(%rbp), %xmm1
    00000529: 	mulsd	0x50(%rsp), %xmm1
    0000052f: 	movsd	0x18(%rsp), %xmm7
    00000535: 	subsd	%xmm1, %xmm0
    00000539: 	comisd	%xmm0, %xmm7
    0000053d: 	jbe	.Ltmp511 # Offset: 1341
    0000053f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp511:
    00000547: 	movsd	0x60(%rsp), %xmm7
    0000054d: 	comisd	%xmm0, %xmm7
    00000551: 	jbe	.Ltmp512 # Offset: 1361
.Ltmp676:
    00000557: 	addl	$0x1, %r13d
    0000055b: 	cmpl	%edx, %r13d
    0000055e: 	jl	.Ltmp513 # Offset: 1374
.Ltmp509:
    00000560: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000567: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000056e: 	subq	$0x20, %rax
    00000572: 	cmpq	%rax, %rbp
    00000575: 	je	.Ltmp514 # Offset: 1397
    0000057b: 	leaq	0x10(%rbp), %rdi
    0000057f: 	movq	0xd8(%rsp), %r13
    00000587: 	movq	%rdi, (%rbp)
    0000058b: 	movq	0xd0(%rsp), %r15
    00000593: 	movq	%r15, %rax
    00000596: 	addq	%r13, %rax
    00000599: 	je	.Ltmp515 # Offset: 1433
    0000059b: 	testq	%r15, %r15
    0000059e: 	je	.Ltmp516 # Offset: 1438
.Ltmp515:
    000005a4: 	movq	%r13, 0xa8(%rsp)
    000005ac: 	cmpq	$0xf, %r13
    000005b0: 	ja	.Ltmp517 # Offset: 1456
    000005b6: 	cmpq	$0x1, %r13
    000005ba: 	jne	.Ltmp518 # Offset: 1466
    000005c0: 	movzbl	(%r15), %eax
    000005c4: 	movb	%al, 0x10(%rbp)
.Ltmp726:
    000005c7: 	movq	%r13, 0x8(%rbp)
    000005cb: 	movb	$0x0, (%rdi,%r13)
    000005d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005d7: 	addq	$0x20, %rax
    000005db: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp693:
    000005e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000005e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005f0: 	je	.Ltmp519 # Offset: 1520
.Ltmp689:
    000005f6: 	movq	-0x20(%rax), %rbp
    000005fa: 	callq	clock@PLT # Offset: 1530
    000005ff: 	pxor	%xmm0, %xmm0
    00000603: 	movq	%rax, end_time(%rip)
    0000060a: 	movq	%rbp, %rdi
    0000060d: 	subq	start_time(%rip), %rax
    00000614: 	cvtsi2sd	%rax, %xmm0
    00000619: 	divsd	DATAat0x17358(%rip), %xmm0
    00000621: 	callq	_Z13record_resultdPKc # Offset: 1569
    00000626: 	movq	0xd0(%rsp), %rdi
    0000062e: 	cmpq	0x88(%rsp), %rdi
    00000636: 	je	.Ltmp520 # Offset: 1590
    00000638: 	movq	0xe0(%rsp), %rax
    00000640: 	leaq	0x1(%rax), %rsi
    00000644: 	callq	_ZdlPvm@PLT # Offset: 1604
.Ltmp520:
    00000649: 	movq	0x90(%rsp), %rsi
    00000651: 	leaq	DATAat0x171fe(%rip), %rdx
    00000658: 	movq	%r14, %rdi
    0000065b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1627
    00000660: 	callq	clock@PLT # Offset: 1632
    00000665: 	movl	iterations(%rip), %edx
    0000066b: 	movq	%rax, start_time(%rip)
    00000672: 	testl	%edx, %edx
    00000674: 	jle	.Ltmp521 # Offset: 1652
    0000067a: 	movsd	DATAat0x17350(%rip), %xmm5
    00000682: 	movsd	0x68(%rsp), %xmm3
    00000688: 	pxor	%xmm4, %xmm4
    0000068c: 	xorl	%r13d, %r13d
    0000068f: 	movsd	0x80(%rsp), %xmm7
    00000698: 	movsd	0x78(%rsp), %xmm6
    0000069e: 	movsd	%xmm4, 0x18(%rsp)
    000006a4: 	leaq	init_value(%rip), %rbp
    000006ab: 	unpcklpd	%xmm3, %xmm3
    000006af: 	movsd	%xmm5, 0x60(%rsp)
    000006b5: 	movsd	0x70(%rsp), %xmm5
    000006bb: 	leaq	DATAat0x171d6(%rip), %r15
    000006c2: 	movaps	%xmm3, (%rsp)
    000006c6: 	movsd	DATAat0x17370(%rip), %xmm3
    000006ce: 	unpcklpd	%xmm7, %xmm7
    000006d2: 	unpcklpd	%xmm6, %xmm6
    000006d6: 	unpcklpd	%xmm5, %xmm5
    000006da: 	movaps	%xmm7, 0x40(%rsp)
    000006df: 	movsd	%xmm3, 0x50(%rsp)
    000006e5: 	movaps	%xmm6, 0x30(%rsp)
    000006ea: 	movaps	%xmm5, 0x20(%rsp)
    000006ef: 	nop # Size: 1
.Ltmp525:
    000006f0: 	movq	%r12, %rax
    000006f3: 	pxor	%xmm1, %xmm1
    000006f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp522:
    00000700: 	movapd	(%rsp), %xmm0
    00000705: 	addpd	(%rax), %xmm0
    00000709: 	addq	$0x10, %rax
    0000070d: 	addpd	0x40(%rsp), %xmm0
    00000713: 	addpd	0x30(%rsp), %xmm0
    00000719: 	addpd	0x20(%rsp), %xmm0
    0000071f: 	addsd	%xmm0, %xmm1
    00000723: 	unpckhpd	%xmm0, %xmm0
    00000727: 	addsd	%xmm0, %xmm1
    0000072b: 	cmpq	%rbx, %rax
    0000072e: 	jne	.Ltmp522 # Offset: 1838
    00000730: 	movsd	0x68(%rsp), %xmm0
    00000736: 	addsd	(%rbp), %xmm0
    0000073b: 	addsd	0x80(%rsp), %xmm0
    00000744: 	addsd	0x78(%rsp), %xmm0
    0000074a: 	addsd	0x70(%rsp), %xmm0
    00000750: 	mulsd	0x50(%rsp), %xmm0
    00000756: 	movsd	0x18(%rsp), %xmm7
    0000075c: 	subsd	%xmm0, %xmm1
    00000760: 	comisd	%xmm1, %xmm7
    00000764: 	jbe	.Ltmp523 # Offset: 1892
    00000766: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp523:
    0000076e: 	movsd	0x60(%rsp), %xmm3
    00000774: 	comisd	%xmm1, %xmm3
    00000778: 	jbe	.Ltmp524 # Offset: 1912
.Ltmp675:
    0000077e: 	addl	$0x1, %r13d
    00000782: 	cmpl	%edx, %r13d
    00000785: 	jl	.Ltmp525 # Offset: 1925
.Ltmp521:
    0000078b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000792: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000799: 	subq	$0x20, %rax
    0000079d: 	cmpq	%rax, %rbp
    000007a0: 	je	.Ltmp526 # Offset: 1952
    000007a6: 	leaq	0x10(%rbp), %rdi
    000007aa: 	movq	0xd8(%rsp), %r13
    000007b2: 	movq	%rdi, (%rbp)
    000007b6: 	movq	0xd0(%rsp), %r15
    000007be: 	movq	%r15, %rax
    000007c1: 	addq	%r13, %rax
    000007c4: 	je	.Ltmp527 # Offset: 1988
    000007c6: 	testq	%r15, %r15
    000007c9: 	je	.Ltmp528 # Offset: 1993
.Ltmp527:
    000007cf: 	movq	%r13, 0xa8(%rsp)
    000007d7: 	cmpq	$0xf, %r13
    000007db: 	ja	.Ltmp529 # Offset: 2011
    000007e1: 	cmpq	$0x1, %r13
    000007e5: 	jne	.Ltmp530 # Offset: 2021
    000007eb: 	movzbl	(%r15), %eax
    000007ef: 	movb	%al, 0x10(%rbp)
.Ltmp712:
    000007f2: 	movq	%r13, 0x8(%rbp)
    000007f6: 	movb	$0x0, (%rdi,%r13)
    000007fb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000802: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000809: 	addq	$0x20, %rax
    0000080d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000814: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000081b: 	je	.Ltmp531 # Offset: 2075
.Ltmp691:
    00000821: 	movq	-0x20(%rax), %rbp
    00000825: 	callq	clock@PLT # Offset: 2085
    0000082a: 	pxor	%xmm0, %xmm0
    0000082e: 	movq	%rax, end_time(%rip)
    00000835: 	movq	%rbp, %rdi
    00000838: 	subq	start_time(%rip), %rax
    0000083f: 	cvtsi2sd	%rax, %xmm0
    00000844: 	divsd	DATAat0x17358(%rip), %xmm0
    0000084c: 	callq	_Z13record_resultdPKc # Offset: 2124
    00000851: 	movq	0xd0(%rsp), %rdi
    00000859: 	cmpq	0x88(%rsp), %rdi
    00000861: 	je	.Ltmp532 # Offset: 2145
    00000863: 	movq	0xe0(%rsp), %rax
    0000086b: 	leaq	0x1(%rax), %rsi
    0000086f: 	callq	_ZdlPvm@PLT # Offset: 2159
.Ltmp532:
    00000874: 	movq	0x90(%rsp), %rsi
    0000087c: 	leaq	DATAat0x17217(%rip), %rdx
    00000883: 	movq	%r14, %rdi
    00000886: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2182
    0000088b: 	callq	clock@PLT # Offset: 2187
    00000890: 	movl	iterations(%rip), %edx
    00000896: 	movq	%rax, start_time(%rip)
    0000089d: 	testl	%edx, %edx
    0000089f: 	jle	.Ltmp533 # Offset: 2207
    000008a5: 	movsd	0x68(%rsp), %xmm3
    000008ab: 	movsd	DATAat0x17370(%rip), %xmm6
    000008b3: 	pxor	%xmm7, %xmm7
    000008b7: 	xorl	%r13d, %r13d
    000008ba: 	movsd	DATAat0x17350(%rip), %xmm4
    000008c2: 	movsd	%xmm7, 0x18(%rsp)
    000008c8: 	leaq	init_value(%rip), %rbp
    000008cf: 	leaq	DATAat0x171d6(%rip), %r15
    000008d6: 	unpcklpd	%xmm3, %xmm3
    000008da: 	movsd	%xmm6, 0x50(%rsp)
    000008e0: 	movaps	%xmm3, (%rsp)
    000008e4: 	movsd	%xmm4, 0x60(%rsp)
    000008ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp537:
    000008f0: 	movq	%r12, %rax
    000008f3: 	pxor	%xmm1, %xmm1
    000008f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp534:
    00000900: 	movapd	(%rax), %xmm0
    00000904: 	subpd	(%rsp), %xmm0
    00000909: 	addq	$0x10, %rax
    0000090d: 	addsd	%xmm0, %xmm1
    00000911: 	unpckhpd	%xmm0, %xmm0
    00000915: 	addsd	%xmm0, %xmm1
    00000919: 	cmpq	%rbx, %rax
    0000091c: 	jne	.Ltmp534 # Offset: 2332
    0000091e: 	movsd	(%rbp), %xmm0
    00000923: 	subsd	0x68(%rsp), %xmm0
    00000929: 	mulsd	0x50(%rsp), %xmm0
    0000092f: 	movsd	0x18(%rsp), %xmm6
    00000935: 	subsd	%xmm0, %xmm1
    00000939: 	comisd	%xmm1, %xmm6
    0000093d: 	jbe	.Ltmp535 # Offset: 2365
    0000093f: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp535:
    00000947: 	movsd	0x60(%rsp), %xmm7
    0000094d: 	comisd	%xmm1, %xmm7
    00000951: 	jbe	.Ltmp536 # Offset: 2385
.Ltmp679:
    00000957: 	addl	$0x1, %r13d
    0000095b: 	cmpl	%edx, %r13d
    0000095e: 	jl	.Ltmp537 # Offset: 2398
.Ltmp533:
    00000960: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000967: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000096e: 	subq	$0x20, %rax
    00000972: 	cmpq	%rax, %rbp
    00000975: 	je	.Ltmp538 # Offset: 2421
    0000097b: 	leaq	0x10(%rbp), %rdi
    0000097f: 	movq	0xd8(%rsp), %r13
    00000987: 	movq	%rdi, (%rbp)
    0000098b: 	movq	0xd0(%rsp), %r15
    00000993: 	movq	%r15, %rax
    00000996: 	addq	%r13, %rax
    00000999: 	je	.Ltmp539 # Offset: 2457
    0000099b: 	testq	%r15, %r15
    0000099e: 	je	.Ltmp540 # Offset: 2462
.Ltmp539:
    000009a4: 	movq	%r13, 0xa8(%rsp)
    000009ac: 	cmpq	$0xf, %r13
    000009b0: 	ja	.Ltmp541 # Offset: 2480
    000009b6: 	cmpq	$0x1, %r13
    000009ba: 	jne	.Ltmp542 # Offset: 2490
    000009c0: 	movzbl	(%r15), %eax
    000009c4: 	movb	%al, 0x10(%rbp)
.Ltmp717:
    000009c7: 	movq	%r13, 0x8(%rbp)
    000009cb: 	movb	$0x0, (%rdi,%r13)
    000009d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009d7: 	addq	$0x20, %rax
    000009db: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp701:
    000009e2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000009e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009f0: 	je	.Ltmp543 # Offset: 2544
.Ltmp700:
    000009f6: 	movq	-0x20(%rax), %rbp
    000009fa: 	callq	clock@PLT # Offset: 2554
    000009ff: 	pxor	%xmm0, %xmm0
    00000a03: 	movq	%rax, end_time(%rip)
    00000a0a: 	movq	%rbp, %rdi
    00000a0d: 	subq	start_time(%rip), %rax
    00000a14: 	cvtsi2sd	%rax, %xmm0
    00000a19: 	divsd	DATAat0x17358(%rip), %xmm0
    00000a21: 	callq	_Z13record_resultdPKc # Offset: 2593
    00000a26: 	movq	0xd0(%rsp), %rdi
    00000a2e: 	cmpq	0x88(%rsp), %rdi
    00000a36: 	je	.Ltmp544 # Offset: 2614
    00000a38: 	movq	0xe0(%rsp), %rax
    00000a40: 	leaq	0x1(%rax), %rsi
    00000a44: 	callq	_ZdlPvm@PLT # Offset: 2628
.Ltmp544:
    00000a49: 	movq	0x90(%rsp), %rsi
    00000a51: 	leaq	DATAat0x1722a(%rip), %rdx
    00000a58: 	movq	%r14, %rdi
    00000a5b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2651
    00000a60: 	callq	clock@PLT # Offset: 2656
    00000a65: 	movl	iterations(%rip), %edx
    00000a6b: 	movq	%rax, start_time(%rip)
    00000a72: 	testl	%edx, %edx
    00000a74: 	jle	.Ltmp545 # Offset: 2676
    00000a7a: 	movsd	0x80(%rsp), %xmm0
    00000a83: 	addsd	0x68(%rsp), %xmm0
    00000a89: 	pxor	%xmm6, %xmm6
    00000a8d: 	xorl	%r13d, %r13d
    00000a90: 	addsd	0x78(%rsp), %xmm0
    00000a96: 	movsd	0x70(%rsp), %xmm3
    00000a9c: 	movsd	%xmm6, 0x18(%rsp)
    00000aa2: 	leaq	init_value(%rip), %rbp
    00000aa9: 	movsd	DATAat0x17370(%rip), %xmm4
    00000ab1: 	movsd	DATAat0x17350(%rip), %xmm5
    00000ab9: 	leaq	DATAat0x171d6(%rip), %r15
    00000ac0: 	addsd	%xmm0, %xmm3
    00000ac4: 	movsd	%xmm4, 0x50(%rsp)
    00000aca: 	movsd	%xmm5, 0x60(%rsp)
    00000ad0: 	movapd	%xmm3, %xmm7
    00000ad4: 	movsd	%xmm3, 0x20(%rsp)
    00000ada: 	unpcklpd	%xmm7, %xmm7
    00000ade: 	movaps	%xmm7, (%rsp)
    00000ae2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp549:
    00000ae8: 	movq	%r12, %rax
    00000aeb: 	pxor	%xmm1, %xmm1
    00000aef: 	nop # Size: 1
.Ltmp546:
    00000af0: 	movapd	(%rax), %xmm0
    00000af4: 	subpd	(%rsp), %xmm0
    00000af9: 	addq	$0x10, %rax
    00000afd: 	addsd	%xmm0, %xmm1
    00000b01: 	unpckhpd	%xmm0, %xmm0
    00000b05: 	addsd	%xmm0, %xmm1
    00000b09: 	cmpq	%rax, %rbx
    00000b0c: 	jne	.Ltmp546 # Offset: 2828
    00000b0e: 	movsd	(%rbp), %xmm0
    00000b13: 	subsd	0x20(%rsp), %xmm0
    00000b19: 	mulsd	0x50(%rsp), %xmm0
    00000b1f: 	movsd	0x18(%rsp), %xmm5
    00000b25: 	subsd	%xmm0, %xmm1
    00000b29: 	comisd	%xmm1, %xmm5
    00000b2d: 	jbe	.Ltmp547 # Offset: 2861
    00000b2f: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp547:
    00000b37: 	movsd	0x60(%rsp), %xmm6
    00000b3d: 	comisd	%xmm1, %xmm6
    00000b41: 	jbe	.Ltmp548 # Offset: 2881
.Ltmp678:
    00000b47: 	addl	$0x1, %r13d
    00000b4b: 	cmpl	%edx, %r13d
    00000b4e: 	jl	.Ltmp549 # Offset: 2894
.Ltmp545:
    00000b50: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b57: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000b5e: 	subq	$0x20, %rax
    00000b62: 	cmpq	%rax, %rbp
    00000b65: 	je	.Ltmp550 # Offset: 2917
    00000b6b: 	leaq	0x10(%rbp), %rdi
    00000b6f: 	movq	0xd8(%rsp), %r13
    00000b77: 	movq	%rdi, (%rbp)
    00000b7b: 	movq	0xd0(%rsp), %r15
    00000b83: 	movq	%r15, %rax
    00000b86: 	addq	%r13, %rax
    00000b89: 	je	.Ltmp551 # Offset: 2953
    00000b8b: 	testq	%r15, %r15
    00000b8e: 	je	.Ltmp552 # Offset: 2958
.Ltmp551:
    00000b94: 	movq	%r13, 0xa8(%rsp)
    00000b9c: 	cmpq	$0xf, %r13
    00000ba0: 	ja	.Ltmp553 # Offset: 2976
    00000ba6: 	cmpq	$0x1, %r13
    00000baa: 	jne	.Ltmp554 # Offset: 2986
    00000bb0: 	movzbl	(%r15), %eax
    00000bb4: 	movb	%al, 0x10(%rbp)
.Ltmp730:
    00000bb7: 	movq	%r13, 0x8(%rbp)
    00000bbb: 	movb	$0x0, (%rdi,%r13)
    00000bc0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bc7: 	addq	$0x20, %rax
    00000bcb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp688:
    00000bd2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000bd9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000be0: 	je	.Ltmp555 # Offset: 3040
.Ltmp687:
    00000be6: 	movq	-0x20(%rax), %rbp
    00000bea: 	callq	clock@PLT # Offset: 3050
    00000bef: 	pxor	%xmm0, %xmm0
    00000bf3: 	movq	%rax, end_time(%rip)
    00000bfa: 	movq	%rbp, %rdi
    00000bfd: 	subq	start_time(%rip), %rax
    00000c04: 	cvtsi2sd	%rax, %xmm0
    00000c09: 	divsd	DATAat0x17358(%rip), %xmm0
    00000c11: 	callq	_Z13record_resultdPKc # Offset: 3089
    00000c16: 	movq	0xd0(%rsp), %rdi
    00000c1e: 	cmpq	0x88(%rsp), %rdi
    00000c26: 	je	.Ltmp556 # Offset: 3110
    00000c28: 	movq	0xe0(%rsp), %rax
    00000c30: 	leaq	0x1(%rax), %rsi
    00000c34: 	callq	_ZdlPvm@PLT # Offset: 3124
.Ltmp556:
    00000c39: 	movq	0x90(%rsp), %rsi
    00000c41: 	leaq	DATAat0x17247(%rip), %rdx
    00000c48: 	movq	%r14, %rdi
    00000c4b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3147
    00000c50: 	callq	clock@PLT # Offset: 3152
    00000c55: 	movl	iterations(%rip), %edx
    00000c5b: 	movq	%rax, start_time(%rip)
    00000c62: 	testl	%edx, %edx
    00000c64: 	jle	.Ltmp557 # Offset: 3172
    00000c6a: 	movsd	0x68(%rsp), %xmm6
    00000c70: 	pxor	%xmm3, %xmm3
    00000c74: 	movsd	0x78(%rsp), %xmm5
    00000c7a: 	xorl	%r13d, %r13d
    00000c7d: 	movsd	0x80(%rsp), %xmm4
    00000c86: 	movsd	%xmm3, 0x18(%rsp)
    00000c8c: 	movsd	0x70(%rsp), %xmm3
    00000c92: 	leaq	init_value(%rip), %rbp
    00000c99: 	unpcklpd	%xmm6, %xmm6
    00000c9d: 	movsd	DATAat0x17370(%rip), %xmm7
    00000ca5: 	unpcklpd	%xmm5, %xmm5
    00000ca9: 	leaq	DATAat0x171d6(%rip), %r15
    00000cb0: 	movaps	%xmm6, (%rsp)
    00000cb4: 	unpcklpd	%xmm4, %xmm4
    00000cb8: 	unpcklpd	%xmm3, %xmm3
    00000cbc: 	movsd	DATAat0x17350(%rip), %xmm6
    00000cc4: 	movsd	%xmm7, 0x50(%rsp)
    00000cca: 	movsd	%xmm6, 0x60(%rsp)
    00000cd0: 	movaps	%xmm4, 0x40(%rsp)
    00000cd5: 	movaps	%xmm5, 0x30(%rsp)
    00000cda: 	movaps	%xmm3, 0x20(%rsp)
    00000cdf: 	nop # Size: 1
.Ltmp561:
    00000ce0: 	movq	%r12, %rax
    00000ce3: 	pxor	%xmm1, %xmm1
    00000ce7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp558:
    00000cf0: 	movapd	(%rax), %xmm0
    00000cf4: 	subpd	(%rsp), %xmm0
    00000cf9: 	addq	$0x10, %rax
    00000cfd: 	subpd	0x40(%rsp), %xmm0
    00000d03: 	subpd	0x30(%rsp), %xmm0
    00000d09: 	subpd	0x20(%rsp), %xmm0
    00000d0f: 	addsd	%xmm0, %xmm1
    00000d13: 	unpckhpd	%xmm0, %xmm0
    00000d17: 	addsd	%xmm0, %xmm1
    00000d1b: 	cmpq	%rbx, %rax
    00000d1e: 	jne	.Ltmp558 # Offset: 3358
    00000d20: 	movsd	(%rbp), %xmm0
    00000d25: 	subsd	0x68(%rsp), %xmm0
    00000d2b: 	subsd	0x80(%rsp), %xmm0
    00000d34: 	subsd	0x78(%rsp), %xmm0
    00000d3a: 	subsd	0x70(%rsp), %xmm0
    00000d40: 	mulsd	0x50(%rsp), %xmm0
    00000d46: 	movsd	0x18(%rsp), %xmm7
    00000d4c: 	subsd	%xmm0, %xmm1
    00000d50: 	comisd	%xmm1, %xmm7
    00000d54: 	jbe	.Ltmp559 # Offset: 3412
    00000d56: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp559:
    00000d5e: 	movsd	0x60(%rsp), %xmm3
    00000d64: 	comisd	%xmm1, %xmm3
    00000d68: 	jbe	.Ltmp560 # Offset: 3432
.Ltmp677:
    00000d6e: 	addl	$0x1, %r13d
    00000d72: 	cmpl	%edx, %r13d
    00000d75: 	jl	.Ltmp561 # Offset: 3445
.Ltmp557:
    00000d7b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d82: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000d89: 	subq	$0x20, %rax
    00000d8d: 	cmpq	%rax, %rbp
    00000d90: 	je	.Ltmp562 # Offset: 3472
    00000d96: 	leaq	0x10(%rbp), %rdi
    00000d9a: 	movq	0xd8(%rsp), %r13
    00000da2: 	movq	%rdi, (%rbp)
    00000da6: 	movq	0xd0(%rsp), %r15
    00000dae: 	movq	%r15, %rax
    00000db1: 	addq	%r13, %rax
    00000db4: 	je	.Ltmp563 # Offset: 3508
    00000db6: 	testq	%r15, %r15
    00000db9: 	je	.Ltmp564 # Offset: 3513
.Ltmp563:
    00000dbf: 	movq	%r13, 0xa8(%rsp)
    00000dc7: 	cmpq	$0xf, %r13
    00000dcb: 	ja	.Ltmp565 # Offset: 3531
    00000dd1: 	cmpq	$0x1, %r13
    00000dd5: 	jne	.Ltmp566 # Offset: 3541
    00000ddb: 	movzbl	(%r15), %eax
    00000ddf: 	movb	%al, 0x10(%rbp)
.Ltmp714:
    00000de2: 	movq	%r13, 0x8(%rbp)
    00000de6: 	movb	$0x0, (%rdi,%r13)
    00000deb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000df2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000df9: 	addq	$0x20, %rax
    00000dfd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e04: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000e0b: 	je	.Ltmp567 # Offset: 3595
.Ltmp690:
    00000e11: 	movq	-0x20(%rax), %rbp
    00000e15: 	callq	clock@PLT # Offset: 3605
    00000e1a: 	pxor	%xmm0, %xmm0
    00000e1e: 	movq	%rax, end_time(%rip)
    00000e25: 	movq	%rbp, %rdi
    00000e28: 	subq	start_time(%rip), %rax
    00000e2f: 	cvtsi2sd	%rax, %xmm0
    00000e34: 	divsd	DATAat0x17358(%rip), %xmm0
    00000e3c: 	callq	_Z13record_resultdPKc # Offset: 3644
    00000e41: 	movq	0xd0(%rsp), %rdi
    00000e49: 	cmpq	0x88(%rsp), %rdi
    00000e51: 	je	.Ltmp568 # Offset: 3665
    00000e53: 	movq	0xe0(%rsp), %rax
    00000e5b: 	leaq	0x1(%rax), %rsi
    00000e5f: 	callq	_ZdlPvm@PLT # Offset: 3679
.Ltmp568:
    00000e64: 	movq	0x90(%rsp), %rsi
    00000e6c: 	leaq	DATAat0x17265(%rip), %rdx
    00000e73: 	movq	%r14, %rdi
    00000e76: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3702
    00000e7b: 	callq	clock@PLT # Offset: 3707
    00000e80: 	movl	iterations(%rip), %edx
    00000e86: 	movq	%rax, start_time(%rip)
    00000e8d: 	testl	%edx, %edx
    00000e8f: 	jle	.Ltmp569 # Offset: 3727
    00000e95: 	movsd	0x68(%rsp), %xmm7
    00000e9b: 	movsd	DATAat0x17370(%rip), %xmm3
    00000ea3: 	pxor	%xmm4, %xmm4
    00000ea7: 	xorl	%r13d, %r13d
    00000eaa: 	movsd	DATAat0x17350(%rip), %xmm5
    00000eb2: 	movsd	%xmm4, 0x18(%rsp)
    00000eb8: 	leaq	init_value(%rip), %rbp
    00000ebf: 	leaq	DATAat0x171d6(%rip), %r15
    00000ec6: 	unpcklpd	%xmm7, %xmm7
    00000eca: 	movsd	%xmm3, 0x50(%rsp)
    00000ed0: 	movaps	%xmm7, (%rsp)
    00000ed4: 	movsd	%xmm5, 0x60(%rsp)
    00000eda: 	nopw	(%rax,%rax) # Size: 6
.Ltmp573:
    00000ee0: 	movq	%r12, %rax
    00000ee3: 	pxor	%xmm0, %xmm0
    00000ee7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp570:
    00000ef0: 	movapd	(%rsp), %xmm2
    00000ef5: 	mulpd	(%rax), %xmm2
    00000ef9: 	addq	$0x10, %rax
    00000efd: 	addsd	%xmm2, %xmm0
    00000f01: 	unpckhpd	%xmm2, %xmm2
    00000f05: 	addsd	%xmm2, %xmm0
    00000f09: 	cmpq	%rax, %rbx
    00000f0c: 	jne	.Ltmp570 # Offset: 3852
    00000f0e: 	movsd	0x68(%rsp), %xmm1
    00000f14: 	mulsd	(%rbp), %xmm1
    00000f19: 	mulsd	0x50(%rsp), %xmm1
    00000f1f: 	movsd	0x18(%rsp), %xmm5
    00000f25: 	subsd	%xmm1, %xmm0
    00000f29: 	comisd	%xmm0, %xmm5
    00000f2d: 	jbe	.Ltmp571 # Offset: 3885
    00000f2f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp571:
    00000f37: 	movsd	0x60(%rsp), %xmm6
    00000f3d: 	comisd	%xmm0, %xmm6
    00000f41: 	jbe	.Ltmp572 # Offset: 3905
.Ltmp685:
    00000f47: 	addl	$0x1, %r13d
    00000f4b: 	cmpl	%edx, %r13d
    00000f4e: 	jl	.Ltmp573 # Offset: 3918
.Ltmp569:
    00000f50: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f57: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000f5e: 	subq	$0x20, %rax
    00000f62: 	cmpq	%rax, %rbp
    00000f65: 	je	.Ltmp574 # Offset: 3941
    00000f6b: 	leaq	0x10(%rbp), %rdi
    00000f6f: 	movq	0xd8(%rsp), %r13
    00000f77: 	movq	%rdi, (%rbp)
    00000f7b: 	movq	0xd0(%rsp), %r15
    00000f83: 	movq	%r15, %rax
    00000f86: 	addq	%r13, %rax
    00000f89: 	je	.Ltmp575 # Offset: 3977
    00000f8b: 	testq	%r15, %r15
    00000f8e: 	je	.Ltmp576 # Offset: 3982
.Ltmp575:
    00000f94: 	movq	%r13, 0xa8(%rsp)
    00000f9c: 	cmpq	$0xf, %r13
    00000fa0: 	ja	.Ltmp577 # Offset: 4000
    00000fa6: 	cmpq	$0x1, %r13
    00000faa: 	jne	.Ltmp578 # Offset: 4010
    00000fb0: 	movzbl	(%r15), %eax
    00000fb4: 	movb	%al, 0x10(%rbp)
.Ltmp722:
    00000fb7: 	movq	%r13, 0x8(%rbp)
    00000fbb: 	movb	$0x0, (%rdi,%r13)
    00000fc0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fc7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fce: 	addq	$0x20, %rax
    00000fd2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000fd9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000fe0: 	je	.Ltmp579 # Offset: 4064
.Ltmp686:
    00000fe6: 	movq	-0x20(%rax), %rbp
    00000fea: 	callq	clock@PLT # Offset: 4074
    00000fef: 	pxor	%xmm0, %xmm0
    00000ff3: 	movq	%rax, end_time(%rip)
    00000ffa: 	movq	%rbp, %rdi
    00000ffd: 	subq	start_time(%rip), %rax
    00001004: 	cvtsi2sd	%rax, %xmm0
    00001009: 	divsd	DATAat0x17358(%rip), %xmm0
    00001011: 	callq	_Z13record_resultdPKc # Offset: 4113
    00001016: 	movq	0xd0(%rsp), %rdi
    0000101e: 	cmpq	0x88(%rsp), %rdi
    00001026: 	je	.Ltmp580 # Offset: 4134
    00001028: 	movq	0xe0(%rsp), %rax
    00001030: 	leaq	0x1(%rax), %rsi
    00001034: 	callq	_ZdlPvm@PLT # Offset: 4148
.Ltmp580:
    00001039: 	movq	0x90(%rsp), %rsi
    00001041: 	leaq	DATAat0x17278(%rip), %rdx
    00001048: 	movq	%r14, %rdi
    0000104b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4171
    00001050: 	callq	clock@PLT # Offset: 4176
    00001055: 	movl	iterations(%rip), %edx
    0000105b: 	movq	%rax, start_time(%rip)
    00001062: 	testl	%edx, %edx
    00001064: 	jle	.Ltmp581 # Offset: 4196
    0000106a: 	movsd	0x80(%rsp), %xmm0
    00001073: 	mulsd	0x68(%rsp), %xmm0
    00001079: 	pxor	%xmm3, %xmm3
    0000107d: 	xorl	%r13d, %r13d
    00001080: 	mulsd	0x78(%rsp), %xmm0
    00001086: 	movsd	0x70(%rsp), %xmm7
    0000108c: 	movsd	%xmm3, 0x18(%rsp)
    00001092: 	leaq	init_value(%rip), %rbp
    00001099: 	movsd	DATAat0x17350(%rip), %xmm6
    000010a1: 	movsd	DATAat0x17370(%rip), %xmm5
    000010a9: 	leaq	DATAat0x171d6(%rip), %r15
    000010b0: 	movsd	%xmm6, 0x60(%rsp)
    000010b6: 	movsd	%xmm5, 0x50(%rsp)
    000010bc: 	mulsd	%xmm0, %xmm7
    000010c0: 	movapd	%xmm7, %xmm6
    000010c4: 	movsd	%xmm7, 0x20(%rsp)
    000010ca: 	unpcklpd	%xmm6, %xmm6
    000010ce: 	movaps	%xmm6, (%rsp)
    000010d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp585:
    000010d8: 	movq	%r12, %rax
    000010db: 	pxor	%xmm0, %xmm0
    000010df: 	nop # Size: 1
.Ltmp582:
    000010e0: 	movapd	(%rsp), %xmm2
    000010e5: 	mulpd	(%rax), %xmm2
    000010e9: 	addq	$0x10, %rax
    000010ed: 	addsd	%xmm2, %xmm0
    000010f1: 	unpckhpd	%xmm2, %xmm2
    000010f5: 	addsd	%xmm2, %xmm0
    000010f9: 	cmpq	%rbx, %rax
    000010fc: 	jne	.Ltmp582 # Offset: 4348
    000010fe: 	movsd	0x20(%rsp), %xmm1
    00001104: 	mulsd	(%rbp), %xmm1
    00001109: 	mulsd	0x50(%rsp), %xmm1
    0000110f: 	movsd	0x18(%rsp), %xmm4
    00001115: 	subsd	%xmm1, %xmm0
    00001119: 	comisd	%xmm0, %xmm4
    0000111d: 	jbe	.Ltmp583 # Offset: 4381
    0000111f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp583:
    00001127: 	movsd	0x60(%rsp), %xmm5
    0000112d: 	comisd	%xmm0, %xmm5
    00001131: 	jbe	.Ltmp584 # Offset: 4401
.Ltmp684:
    00001137: 	addl	$0x1, %r13d
    0000113b: 	cmpl	%edx, %r13d
    0000113e: 	jl	.Ltmp585 # Offset: 4414
.Ltmp581:
    00001140: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001147: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000114e: 	subq	$0x20, %rax
    00001152: 	cmpq	%rax, %rbp
    00001155: 	je	.Ltmp586 # Offset: 4437
    0000115b: 	leaq	0x10(%rbp), %rdi
    0000115f: 	movq	0xd8(%rsp), %r13
    00001167: 	movq	%rdi, (%rbp)
    0000116b: 	movq	0xd0(%rsp), %r15
    00001173: 	movq	%r15, %rax
    00001176: 	addq	%r13, %rax
    00001179: 	je	.Ltmp587 # Offset: 4473
    0000117b: 	testq	%r15, %r15
    0000117e: 	je	.Ltmp588 # Offset: 4478
.Ltmp587:
    00001184: 	movq	%r13, 0xa8(%rsp)
    0000118c: 	cmpq	$0xf, %r13
    00001190: 	ja	.Ltmp589 # Offset: 4496
    00001196: 	cmpq	$0x1, %r13
    0000119a: 	jne	.Ltmp590 # Offset: 4506
    000011a0: 	movzbl	(%r15), %eax
    000011a4: 	movb	%al, 0x10(%rbp)
.Ltmp715:
    000011a7: 	movq	%r13, 0x8(%rbp)
    000011ab: 	movb	$0x0, (%rdi,%r13)
    000011b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011b7: 	addq	$0x20, %rax
    000011bb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp703:
    000011c2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011c9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011d0: 	je	.Ltmp591 # Offset: 4560
.Ltmp702:
    000011d6: 	movq	-0x20(%rax), %rbp
    000011da: 	callq	clock@PLT # Offset: 4570
    000011df: 	pxor	%xmm0, %xmm0
    000011e3: 	movq	%rax, end_time(%rip)
    000011ea: 	movq	%rbp, %rdi
    000011ed: 	subq	start_time(%rip), %rax
    000011f4: 	cvtsi2sd	%rax, %xmm0
    000011f9: 	divsd	DATAat0x17358(%rip), %xmm0
    00001201: 	callq	_Z13record_resultdPKc # Offset: 4609
    00001206: 	movq	0xd0(%rsp), %rdi
    0000120e: 	cmpq	0x88(%rsp), %rdi
    00001216: 	je	.Ltmp592 # Offset: 4630
    00001218: 	movq	0xe0(%rsp), %rax
    00001220: 	leaq	0x1(%rax), %rsi
    00001224: 	callq	_ZdlPvm@PLT # Offset: 4644
.Ltmp592:
    00001229: 	movq	0x90(%rsp), %rsi
    00001231: 	leaq	DATAat0x17308(%rip), %rdx
    00001238: 	movq	%r14, %rdi
    0000123b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4667
    00001240: 	callq	clock@PLT # Offset: 4672
    00001245: 	movl	iterations(%rip), %edx
    0000124b: 	movq	%rax, start_time(%rip)
    00001252: 	testl	%edx, %edx
    00001254: 	jle	.Ltmp593 # Offset: 4692
    0000125a: 	movsd	0x80(%rsp), %xmm0
    00001263: 	mulsd	0x68(%rsp), %xmm0
    00001269: 	pxor	%xmm5, %xmm5
    0000126d: 	xorl	%r13d, %r13d
    00001270: 	mulsd	0x78(%rsp), %xmm0
    00001276: 	movsd	0x70(%rsp), %xmm6
    0000127c: 	movsd	%xmm5, 0x18(%rsp)
    00001282: 	leaq	init_value(%rip), %rbp
    00001289: 	movsd	DATAat0x17350(%rip), %xmm4
    00001291: 	movsd	DATAat0x17370(%rip), %xmm7
    00001299: 	leaq	DATAat0x171d6(%rip), %r15
    000012a0: 	movsd	%xmm4, 0x60(%rsp)
    000012a6: 	movsd	%xmm7, 0x50(%rsp)
    000012ac: 	mulsd	%xmm0, %xmm6
    000012b0: 	movapd	%xmm6, %xmm4
    000012b4: 	movsd	%xmm6, 0x20(%rsp)
    000012ba: 	unpcklpd	%xmm4, %xmm4
    000012be: 	movaps	%xmm4, (%rsp)
    000012c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp597:
    000012c8: 	movq	%r12, %rax
    000012cb: 	pxor	%xmm0, %xmm0
    000012cf: 	nop # Size: 1
.Ltmp594:
    000012d0: 	movapd	(%rsp), %xmm2
    000012d5: 	addpd	(%rax), %xmm2
    000012d9: 	addq	$0x10, %rax
    000012dd: 	addsd	%xmm2, %xmm0
    000012e1: 	unpckhpd	%xmm2, %xmm2
    000012e5: 	addsd	%xmm2, %xmm0
    000012e9: 	cmpq	%rbx, %rax
    000012ec: 	jne	.Ltmp594 # Offset: 4844
    000012ee: 	movsd	0x20(%rsp), %xmm1
    000012f4: 	addsd	(%rbp), %xmm1
    000012f9: 	mulsd	0x50(%rsp), %xmm1
    000012ff: 	movsd	0x18(%rsp), %xmm3
    00001305: 	subsd	%xmm1, %xmm0
    00001309: 	comisd	%xmm0, %xmm3
    0000130d: 	jbe	.Ltmp595 # Offset: 4877
    0000130f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp595:
    00001317: 	movsd	0x60(%rsp), %xmm7
    0000131d: 	comisd	%xmm0, %xmm7
    00001321: 	jbe	.Ltmp596 # Offset: 4897
.Ltmp683:
    00001327: 	addl	$0x1, %r13d
    0000132b: 	cmpl	%edx, %r13d
    0000132e: 	jl	.Ltmp597 # Offset: 4910
.Ltmp593:
    00001330: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001337: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000133e: 	subq	$0x20, %rax
    00001342: 	cmpq	%rax, %rbp
    00001345: 	je	.Ltmp598 # Offset: 4933
    0000134b: 	leaq	0x10(%rbp), %rdi
    0000134f: 	movq	0xd8(%rsp), %r13
    00001357: 	movq	%rdi, (%rbp)
    0000135b: 	movq	0xd0(%rsp), %r15
    00001363: 	movq	%r15, %rax
    00001366: 	addq	%r13, %rax
    00001369: 	je	.Ltmp599 # Offset: 4969
    0000136b: 	testq	%r15, %r15
    0000136e: 	je	.Ltmp600 # Offset: 4974
.Ltmp599:
    00001374: 	movq	%r13, 0xa8(%rsp)
    0000137c: 	cmpq	$0xf, %r13
    00001380: 	ja	.Ltmp601 # Offset: 4992
    00001386: 	cmpq	$0x1, %r13
    0000138a: 	jne	.Ltmp602 # Offset: 5002
    00001390: 	movzbl	(%r15), %eax
    00001394: 	movb	%al, 0x10(%rbp)
.Ltmp720:
    00001397: 	movq	%r13, 0x8(%rbp)
    0000139b: 	movb	$0x0, (%rdi,%r13)
    000013a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013a7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ae: 	addq	$0x20, %rax
    000013b2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013b9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000013c0: 	je	.Ltmp603 # Offset: 5056
.Ltmp699:
    000013c6: 	movq	-0x20(%rax), %rbp
    000013ca: 	callq	clock@PLT # Offset: 5066
    000013cf: 	pxor	%xmm0, %xmm0
    000013d3: 	movq	%rax, end_time(%rip)
    000013da: 	movq	%rbp, %rdi
    000013dd: 	subq	start_time(%rip), %rax
    000013e4: 	cvtsi2sd	%rax, %xmm0
    000013e9: 	divsd	DATAat0x17358(%rip), %xmm0
    000013f1: 	callq	_Z13record_resultdPKc # Offset: 5105
    000013f6: 	movq	0xd0(%rsp), %rdi
    000013fe: 	cmpq	0x88(%rsp), %rdi
    00001406: 	je	.Ltmp604 # Offset: 5126
    00001408: 	movq	0xe0(%rsp), %rax
    00001410: 	leaq	0x1(%rax), %rsi
    00001414: 	callq	_ZdlPvm@PLT # Offset: 5140
.Ltmp604:
    00001419: 	movq	0x90(%rsp), %rsi
    00001421: 	leaq	DATAat0x17328(%rip), %rdx
    00001428: 	movq	%r14, %rdi
    0000142b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5163
    00001430: 	callq	clock@PLT # Offset: 5168
    00001435: 	movl	iterations(%rip), %edx
    0000143b: 	movq	%rax, start_time(%rip)
    00001442: 	testl	%edx, %edx
    00001444: 	jle	.Ltmp605 # Offset: 5188
    0000144a: 	movsd	DATAat0x17370(%rip), %xmm3
    00001452: 	movsd	0x68(%rsp), %xmm5
    00001458: 	pxor	%xmm6, %xmm6
    0000145c: 	xorl	%r13d, %r13d
    0000145f: 	movsd	0x78(%rsp), %xmm7
    00001465: 	movsd	%xmm6, 0x18(%rsp)
    0000146b: 	movsd	0x70(%rsp), %xmm6
    00001471: 	leaq	init_value(%rip), %rbp
    00001478: 	unpcklpd	%xmm5, %xmm5
    0000147c: 	movsd	%xmm3, 0x50(%rsp)
    00001482: 	movsd	0x80(%rsp), %xmm3
    0000148b: 	leaq	DATAat0x171d6(%rip), %r15
    00001492: 	movaps	%xmm5, (%rsp)
    00001496: 	movsd	DATAat0x17350(%rip), %xmm5
    0000149e: 	unpcklpd	%xmm7, %xmm7
    000014a2: 	unpcklpd	%xmm6, %xmm6
    000014a6: 	unpcklpd	%xmm3, %xmm3
    000014aa: 	movaps	%xmm7, 0x30(%rsp)
    000014af: 	movsd	%xmm5, 0x60(%rsp)
    000014b5: 	movaps	%xmm3, 0x40(%rsp)
    000014ba: 	movaps	%xmm6, 0x20(%rsp)
    000014bf: 	nop # Size: 1
.Ltmp609:
    000014c0: 	movq	%r12, %rax
    000014c3: 	pxor	%xmm1, %xmm1
    000014c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp606:
    000014d0: 	movapd	(%rsp), %xmm0
    000014d5: 	mulpd	(%rax), %xmm0
    000014d9: 	addq	$0x10, %rax
    000014dd: 	mulpd	0x40(%rsp), %xmm0
    000014e3: 	mulpd	0x30(%rsp), %xmm0
    000014e9: 	mulpd	0x20(%rsp), %xmm0
    000014ef: 	addsd	%xmm0, %xmm1
    000014f3: 	unpckhpd	%xmm0, %xmm0
    000014f7: 	addsd	%xmm0, %xmm1
    000014fb: 	cmpq	%rax, %rbx
    000014fe: 	jne	.Ltmp606 # Offset: 5374
    00001500: 	movsd	0x68(%rsp), %xmm0
    00001506: 	mulsd	(%rbp), %xmm0
    0000150b: 	mulsd	0x80(%rsp), %xmm0
    00001514: 	movsd	0x18(%rsp), %xmm7
    0000151a: 	mulsd	0x78(%rsp), %xmm0
    00001520: 	mulsd	0x70(%rsp), %xmm0
    00001526: 	mulsd	0x50(%rsp), %xmm0
    0000152c: 	subsd	%xmm0, %xmm1
    00001530: 	comisd	%xmm1, %xmm7
    00001534: 	jbe	.Ltmp607 # Offset: 5428
    00001536: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp607:
    0000153e: 	movsd	0x60(%rsp), %xmm4
    00001544: 	comisd	%xmm1, %xmm4
    00001548: 	jbe	.Ltmp608 # Offset: 5448
.Ltmp682:
    0000154e: 	addl	$0x1, %r13d
    00001552: 	cmpl	%edx, %r13d
    00001555: 	jl	.Ltmp609 # Offset: 5461
.Ltmp605:
    0000155b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001562: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001569: 	subq	$0x20, %rax
    0000156d: 	cmpq	%rax, %rbp
    00001570: 	je	.Ltmp610 # Offset: 5488
    00001576: 	leaq	0x10(%rbp), %rdi
    0000157a: 	movq	0xd8(%rsp), %r13
    00001582: 	movq	%rdi, (%rbp)
    00001586: 	movq	0xd0(%rsp), %r15
    0000158e: 	movq	%r15, %rax
    00001591: 	addq	%r13, %rax
    00001594: 	je	.Ltmp611 # Offset: 5524
    00001596: 	testq	%r15, %r15
    00001599: 	je	.Ltmp612 # Offset: 5529
.Ltmp611:
    0000159f: 	movq	%r13, 0xa8(%rsp)
    000015a7: 	cmpq	$0xf, %r13
    000015ab: 	ja	.Ltmp613 # Offset: 5547
    000015b1: 	cmpq	$0x1, %r13
    000015b5: 	jne	.Ltmp614 # Offset: 5557
    000015bb: 	movzbl	(%r15), %eax
    000015bf: 	movb	%al, 0x10(%rbp)
.Ltmp709:
    000015c2: 	movq	%r13, 0x8(%rbp)
    000015c6: 	movb	$0x0, (%rdi,%r13)
    000015cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015d9: 	addq	$0x20, %rax
    000015dd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000015e4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000015eb: 	je	.Ltmp615 # Offset: 5611
.Ltmp705:
    000015f1: 	movq	-0x20(%rax), %rbp
    000015f5: 	callq	clock@PLT # Offset: 5621
    000015fa: 	pxor	%xmm0, %xmm0
    000015fe: 	movq	%rax, end_time(%rip)
    00001605: 	movq	%rbp, %rdi
    00001608: 	subq	start_time(%rip), %rax
    0000160f: 	cvtsi2sd	%rax, %xmm0
    00001614: 	divsd	DATAat0x17358(%rip), %xmm0
    0000161c: 	callq	_Z13record_resultdPKc # Offset: 5660
    00001621: 	movq	0xd0(%rsp), %rdi
    00001629: 	cmpq	0x88(%rsp), %rdi
    00001631: 	je	.Ltmp616 # Offset: 5681
    00001633: 	movq	0xe0(%rsp), %rax
    0000163b: 	leaq	0x1(%rax), %rsi
    0000163f: 	callq	_ZdlPvm@PLT # Offset: 5695
.Ltmp616:
    00001644: 	movq	0x90(%rsp), %rsi
    0000164c: 	leaq	DATAat0x17296(%rip), %rdx
    00001653: 	movq	%r14, %rdi
    00001656: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5718
    0000165b: 	callq	clock@PLT # Offset: 5723
    00001660: 	movl	iterations(%rip), %edx
    00001666: 	movq	%rax, start_time(%rip)
    0000166d: 	testl	%edx, %edx
    0000166f: 	jle	.Ltmp617 # Offset: 5743
    00001675: 	movsd	0x68(%rsp), %xmm4
    0000167b: 	movsd	DATAat0x17370(%rip), %xmm6
    00001683: 	pxor	%xmm7, %xmm7
    00001687: 	xorl	%r13d, %r13d
    0000168a: 	movsd	%xmm7, 0x18(%rsp)
    00001690: 	leaq	init_value(%rip), %rbp
    00001697: 	leaq	DATAat0x171d6(%rip), %r15
    0000169e: 	unpcklpd	%xmm4, %xmm4
    000016a2: 	movsd	%xmm6, 0x50(%rsp)
    000016a8: 	movaps	%xmm4, (%rsp)
    000016ac: 	movsd	DATAat0x17350(%rip), %xmm4
    000016b4: 	movsd	%xmm4, 0x60(%rsp)
    000016ba: 	nopw	(%rax,%rax) # Size: 6
.Ltmp621:
    000016c0: 	movq	%r12, %rax
    000016c3: 	pxor	%xmm1, %xmm1
    000016c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp618:
    000016d0: 	movapd	(%rax), %xmm0
    000016d4: 	divpd	(%rsp), %xmm0
    000016d9: 	addsd	%xmm0, %xmm1
    000016dd: 	unpckhpd	%xmm0, %xmm0
    000016e1: 	addq	$0x10, %rax
    000016e5: 	addsd	%xmm0, %xmm1
    000016e9: 	cmpq	%rbx, %rax
    000016ec: 	jne	.Ltmp618 # Offset: 5868
    000016ee: 	movsd	(%rbp), %xmm0
    000016f3: 	divsd	0x68(%rsp), %xmm0
    000016f9: 	mulsd	0x50(%rsp), %xmm0
    000016ff: 	movsd	0x18(%rsp), %xmm3
    00001705: 	subsd	%xmm0, %xmm1
    00001709: 	comisd	%xmm1, %xmm3
    0000170d: 	jbe	.Ltmp619 # Offset: 5901
    0000170f: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp619:
    00001717: 	movsd	0x60(%rsp), %xmm7
    0000171d: 	comisd	%xmm1, %xmm7
    00001721: 	jbe	.Ltmp620 # Offset: 5921
.Ltmp681:
    00001727: 	addl	$0x1, %r13d
    0000172b: 	cmpl	%edx, %r13d
    0000172e: 	jl	.Ltmp621 # Offset: 5934
.Ltmp617:
    00001730: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001737: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000173e: 	subq	$0x20, %rax
    00001742: 	cmpq	%rax, %rbp
    00001745: 	je	.Ltmp622 # Offset: 5957
    0000174b: 	leaq	0x10(%rbp), %rdi
    0000174f: 	movq	0xd8(%rsp), %r13
    00001757: 	movq	%rdi, (%rbp)
    0000175b: 	movq	0xd0(%rsp), %r15
    00001763: 	movq	%r15, %rax
    00001766: 	addq	%r13, %rax
    00001769: 	je	.Ltmp623 # Offset: 5993
    0000176b: 	testq	%r15, %r15
    0000176e: 	je	.Ltmp624 # Offset: 5998
.Ltmp623:
    00001774: 	movq	%r13, 0xa8(%rsp)
    0000177c: 	cmpq	$0xf, %r13
    00001780: 	ja	.Ltmp625 # Offset: 6016
    00001786: 	cmpq	$0x1, %r13
    0000178a: 	jne	.Ltmp626 # Offset: 6026
    00001790: 	movzbl	(%r15), %eax
    00001794: 	movb	%al, 0x10(%rbp)
.Ltmp708:
    00001797: 	movq	%r13, 0x8(%rbp)
    0000179b: 	movb	$0x0, (%rdi,%r13)
    000017a0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017a7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017ae: 	addq	$0x20, %rax
    000017b2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017b9: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000017c0: 	je	.Ltmp627 # Offset: 6080
.Ltmp704:
    000017c6: 	movq	-0x20(%rax), %rbp
    000017ca: 	callq	clock@PLT # Offset: 6090
    000017cf: 	pxor	%xmm0, %xmm0
    000017d3: 	movq	%rax, end_time(%rip)
    000017da: 	movq	%rbp, %rdi
    000017dd: 	subq	start_time(%rip), %rax
    000017e4: 	cvtsi2sd	%rax, %xmm0
    000017e9: 	divsd	DATAat0x17358(%rip), %xmm0
    000017f1: 	callq	_Z13record_resultdPKc # Offset: 6129
    000017f6: 	movq	0xd0(%rsp), %rdi
    000017fe: 	cmpq	0x88(%rsp), %rdi
    00001806: 	je	.Ltmp628 # Offset: 6150
    00001808: 	movq	0xe0(%rsp), %rax
    00001810: 	leaq	0x1(%rax), %rsi
    00001814: 	callq	_ZdlPvm@PLT # Offset: 6164
.Ltmp628:
    00001819: 	movq	0x90(%rsp), %rsi
    00001821: 	leaq	DATAat0x172a7(%rip), %rdx
    00001828: 	movq	%r14, %rdi
    0000182b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6187
    00001830: 	callq	clock@PLT # Offset: 6192
    00001835: 	movl	iterations(%rip), %edx
    0000183b: 	movq	%rax, start_time(%rip)
    00001842: 	testl	%edx, %edx
    00001844: 	jle	.Ltmp629 # Offset: 6212
    0000184a: 	movsd	DATAat0x17350(%rip), %xmm5
    00001852: 	movsd	0x68(%rsp), %xmm0
    00001858: 	pxor	%xmm6, %xmm6
    0000185c: 	xorl	%r13d, %r13d
    0000185f: 	movsd	DATAat0x17370(%rip), %xmm4
    00001867: 	movsd	%xmm6, 0x18(%rsp)
    0000186d: 	divsd	0x80(%rsp), %xmm0
    00001876: 	divsd	0x78(%rsp), %xmm0
    0000187c: 	movsd	%xmm5, 0x60(%rsp)
    00001882: 	movapd	%xmm0, %xmm3
    00001886: 	divsd	0x70(%rsp), %xmm3
    0000188c: 	movapd	%xmm3, %xmm5
    00001890: 	unpcklpd	%xmm5, %xmm5
    00001894: 	movsd	%xmm3, 0x20(%rsp)
    0000189a: 	leaq	init_value(%rip), %rbp
    000018a1: 	leaq	DATAat0x171d6(%rip), %r15
    000018a8: 	movsd	%xmm4, 0x50(%rsp)
    000018ae: 	movaps	%xmm5, (%rsp)
    000018b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp633:
    000018b8: 	movq	%r12, %rax
    000018bb: 	pxor	%xmm0, %xmm0
    000018bf: 	nop # Size: 1
.Ltmp630:
    000018c0: 	movapd	(%rsp), %xmm2
    000018c5: 	addpd	(%rax), %xmm2
    000018c9: 	addq	$0x10, %rax
    000018cd: 	addsd	%xmm2, %xmm0
    000018d1: 	unpckhpd	%xmm2, %xmm2
    000018d5: 	addsd	%xmm2, %xmm0
    000018d9: 	cmpq	%rax, %rbx
    000018dc: 	jne	.Ltmp630 # Offset: 6364
    000018de: 	movsd	0x20(%rsp), %xmm1
    000018e4: 	addsd	(%rbp), %xmm1
    000018e9: 	mulsd	0x50(%rsp), %xmm1
    000018ef: 	movsd	0x18(%rsp), %xmm5
    000018f5: 	subsd	%xmm1, %xmm0
    000018f9: 	comisd	%xmm0, %xmm5
    000018fd: 	jbe	.Ltmp631 # Offset: 6397
    000018ff: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp631:
    00001907: 	movsd	0x60(%rsp), %xmm6
    0000190d: 	comisd	%xmm0, %xmm6
    00001911: 	jbe	.Ltmp632 # Offset: 6417
.Ltmp680:
    00001917: 	addl	$0x1, %r13d
    0000191b: 	cmpl	%edx, %r13d
    0000191e: 	jl	.Ltmp633 # Offset: 6430
.Ltmp629:
    00001920: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001927: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000192e: 	subq	$0x20, %rax
    00001932: 	cmpq	%rax, %rbp
    00001935: 	je	.Ltmp634 # Offset: 6453
    0000193b: 	leaq	0x10(%rbp), %rdi
    0000193f: 	movq	0xd8(%rsp), %r13
    00001947: 	movq	%rdi, (%rbp)
    0000194b: 	movq	0xd0(%rsp), %r15
    00001953: 	movq	%r15, %rax
    00001956: 	addq	%r13, %rax
    00001959: 	je	.Ltmp635 # Offset: 6489
    0000195b: 	testq	%r15, %r15
    0000195e: 	je	.Ltmp636 # Offset: 6494
.Ltmp635:
    00001964: 	movq	%r13, 0xa8(%rsp)
    0000196c: 	cmpq	$0xf, %r13
    00001970: 	ja	.Ltmp637 # Offset: 6512
    00001976: 	cmpq	$0x1, %r13
    0000197a: 	jne	.Ltmp638 # Offset: 6522
    00001980: 	movzbl	(%r15), %eax
    00001984: 	movb	%al, 0x10(%rbp)
.Ltmp711:
    00001987: 	movq	%r13, 0x8(%rbp)
    0000198b: 	movb	$0x0, (%rdi,%r13)
    00001990: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001997: 	addq	$0x20, %rax
    0000199b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp707:
    000019a2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019a9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019b0: 	je	.Ltmp639 # Offset: 6576
.Ltmp706:
    000019b6: 	movq	-0x20(%rax), %rbp
    000019ba: 	callq	clock@PLT # Offset: 6586
    000019bf: 	pxor	%xmm0, %xmm0
    000019c3: 	movq	%rax, end_time(%rip)
    000019ca: 	movq	%rbp, %rdi
    000019cd: 	subq	start_time(%rip), %rax
    000019d4: 	cvtsi2sd	%rax, %xmm0
    000019d9: 	divsd	DATAat0x17358(%rip), %xmm0
    000019e1: 	callq	_Z13record_resultdPKc # Offset: 6625
    000019e6: 	movq	0xd0(%rsp), %rdi
    000019ee: 	cmpq	0x88(%rsp), %rdi
    000019f6: 	je	.Ltmp640 # Offset: 6646
    000019f8: 	movq	0xe0(%rsp), %rax
    00001a00: 	leaq	0x1(%rax), %rsi
    00001a04: 	callq	_ZdlPvm@PLT # Offset: 6660
.Ltmp640:
    00001a09: 	movq	0x90(%rsp), %rsi
    00001a11: 	leaq	DATAat0x172c3(%rip), %rdx
    00001a18: 	movq	%r14, %rdi
    00001a1b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6683
    00001a20: 	callq	clock@PLT # Offset: 6688
    00001a25: 	movl	iterations(%rip), %edx
    00001a2b: 	movq	%rax, start_time(%rip)
    00001a32: 	testl	%edx, %edx
    00001a34: 	jle	.Ltmp641 # Offset: 6708
    00001a3a: 	movsd	0x68(%rsp), %xmm5
    00001a40: 	pxor	%xmm6, %xmm6
    00001a44: 	xorl	%r13d, %r13d
    00001a47: 	movsd	0x78(%rsp), %xmm0
    00001a4d: 	mulsd	0x80(%rsp), %xmm0
    00001a56: 	movsd	DATAat0x17350(%rip), %xmm3
    00001a5e: 	movsd	%xmm6, 0x18(%rsp)
    00001a64: 	leaq	init_value(%rip), %rbp
    00001a6b: 	divsd	0x70(%rsp), %xmm0
    00001a71: 	subsd	%xmm0, %xmm5
    00001a75: 	movsd	DATAat0x17370(%rip), %xmm4
    00001a7d: 	leaq	DATAat0x171d6(%rip), %r15
    00001a84: 	movsd	%xmm3, 0x60(%rsp)
    00001a8a: 	movsd	%xmm4, 0x50(%rsp)
    00001a90: 	movapd	%xmm5, %xmm3
    00001a94: 	movsd	%xmm5, 0x20(%rsp)
    00001a9a: 	unpcklpd	%xmm3, %xmm3
    00001a9e: 	movaps	%xmm3, (%rsp)
    00001aa2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp645:
    00001aa8: 	movq	%r12, %rax
    00001aab: 	pxor	%xmm0, %xmm0
    00001aaf: 	nop # Size: 1
.Ltmp642:
    00001ab0: 	movapd	(%rsp), %xmm2
    00001ab5: 	addpd	(%rax), %xmm2
    00001ab9: 	addq	$0x10, %rax
    00001abd: 	addsd	%xmm2, %xmm0
    00001ac1: 	unpckhpd	%xmm2, %xmm2
    00001ac5: 	addsd	%xmm2, %xmm0
    00001ac9: 	cmpq	%rbx, %rax
    00001acc: 	jne	.Ltmp642 # Offset: 6860
    00001ace: 	movsd	0x20(%rsp), %xmm1
    00001ad4: 	addsd	(%rbp), %xmm1
    00001ad9: 	mulsd	0x50(%rsp), %xmm1
    00001adf: 	movsd	0x18(%rsp), %xmm7
    00001ae5: 	subsd	%xmm1, %xmm0
    00001ae9: 	comisd	%xmm0, %xmm7
    00001aed: 	jbe	.Ltmp643 # Offset: 6893
    00001aef: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp643:
    00001af7: 	movsd	0x60(%rsp), %xmm4
    00001afd: 	comisd	%xmm0, %xmm4
    00001b01: 	jbe	.Ltmp644 # Offset: 6913
.Ltmp674:
    00001b07: 	addl	$0x1, %r13d
    00001b0b: 	cmpl	%edx, %r13d
    00001b0e: 	jl	.Ltmp645 # Offset: 6926
.Ltmp641:
    00001b10: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001b17: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001b1e: 	subq	$0x20, %rax
    00001b22: 	cmpq	%rax, %rbp
    00001b25: 	je	.Ltmp646 # Offset: 6949
    00001b2b: 	leaq	0x10(%rbp), %rdi
    00001b2f: 	movq	0xd8(%rsp), %r13
    00001b37: 	movq	%rdi, (%rbp)
    00001b3b: 	movq	0xd0(%rsp), %r15
    00001b43: 	movq	%r15, %rax
    00001b46: 	addq	%r13, %rax
    00001b49: 	je	.Ltmp647 # Offset: 6985
    00001b4b: 	testq	%r15, %r15
    00001b4e: 	je	.Ltmp648 # Offset: 6990
.Ltmp647:
    00001b54: 	movq	%r13, 0xa8(%rsp)
    00001b5c: 	cmpq	$0xf, %r13
    00001b60: 	ja	.Ltmp649 # Offset: 7008
    00001b66: 	cmpq	$0x1, %r13
    00001b6a: 	jne	.Ltmp650 # Offset: 7018
    00001b70: 	movzbl	(%r15), %eax
    00001b74: 	movb	%al, 0x10(%rbp)
.Ltmp728:
    00001b77: 	movq	%r13, 0x8(%rbp)
    00001b7b: 	movb	$0x0, (%rdi,%r13)
    00001b80: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b87: 	addq	$0x20, %rax
    00001b8b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp696:
    00001b92: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b99: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ba0: 	je	.Ltmp651 # Offset: 7072
.Ltmp695:
    00001ba6: 	movq	-0x20(%rax), %rbp
    00001baa: 	callq	clock@PLT # Offset: 7082
    00001baf: 	pxor	%xmm0, %xmm0
    00001bb3: 	movq	%rax, end_time(%rip)
    00001bba: 	movq	%rbp, %rdi
    00001bbd: 	subq	start_time(%rip), %rax
    00001bc4: 	cvtsi2sd	%rax, %xmm0
    00001bc9: 	divsd	DATAat0x17358(%rip), %xmm0
    00001bd1: 	callq	_Z13record_resultdPKc # Offset: 7121
    00001bd6: 	movq	0xd0(%rsp), %rdi
    00001bde: 	cmpq	0x88(%rsp), %rdi
    00001be6: 	je	.Ltmp652 # Offset: 7142
    00001be8: 	movq	0xe0(%rsp), %rax
    00001bf0: 	leaq	0x1(%rax), %rsi
    00001bf4: 	callq	_ZdlPvm@PLT # Offset: 7156
.Ltmp652:
    00001bf9: 	movq	0x90(%rsp), %rsi
    00001c01: 	leaq	DATAat0x172dc(%rip), %rdx
    00001c08: 	movq	%r14, %rdi
    00001c0b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7179
    00001c10: 	callq	clock@PLT # Offset: 7184
    00001c15: 	movl	iterations(%rip), %edx
    00001c1b: 	movq	%rax, start_time(%rip)
    00001c22: 	testl	%edx, %edx
    00001c24: 	jle	.Ltmp653 # Offset: 7204
    00001c2a: 	movsd	0x78(%rsp), %xmm0
    00001c30: 	pxor	%xmm6, %xmm6
    00001c34: 	movsd	0x68(%rsp), %xmm7
    00001c3a: 	xorl	%r13d, %r13d
    00001c3d: 	mulsd	0x80(%rsp), %xmm0
    00001c46: 	movsd	DATAat0x17370(%rip), %xmm4
    00001c4e: 	movsd	%xmm6, 0x18(%rsp)
    00001c54: 	leaq	init_value(%rip), %rbp
    00001c5b: 	movsd	DATAat0x17350(%rip), %xmm3
    00001c63: 	unpcklpd	%xmm7, %xmm7
    00001c67: 	leaq	DATAat0x171d6(%rip), %r15
    00001c6e: 	movaps	%xmm7, (%rsp)
    00001c72: 	movsd	%xmm4, 0x50(%rsp)
    00001c78: 	movsd	%xmm3, 0x60(%rsp)
    00001c7e: 	movapd	%xmm0, %xmm5
    00001c82: 	divsd	0x70(%rsp), %xmm5
    00001c88: 	movapd	%xmm5, %xmm6
    00001c8c: 	movsd	%xmm5, 0x30(%rsp)
    00001c92: 	unpcklpd	%xmm6, %xmm6
    00001c96: 	movaps	%xmm6, 0x20(%rsp)
    00001c9b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp657:
    00001ca0: 	movq	%r12, %rax
    00001ca3: 	pxor	%xmm1, %xmm1
    00001ca7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp654:
    00001cb0: 	movapd	(%rsp), %xmm0
    00001cb5: 	addpd	(%rax), %xmm0
    00001cb9: 	addq	$0x10, %rax
    00001cbd: 	subpd	0x20(%rsp), %xmm0
    00001cc3: 	addsd	%xmm0, %xmm1
    00001cc7: 	unpckhpd	%xmm0, %xmm0
    00001ccb: 	addsd	%xmm0, %xmm1
    00001ccf: 	cmpq	%rax, %rbx
    00001cd2: 	jne	.Ltmp654 # Offset: 7378
    00001cd4: 	movsd	0x68(%rsp), %xmm0
    00001cda: 	addsd	(%rbp), %xmm0
    00001cdf: 	subsd	0x30(%rsp), %xmm0
    00001ce5: 	mulsd	0x50(%rsp), %xmm0
    00001ceb: 	movsd	0x18(%rsp), %xmm3
    00001cf1: 	subsd	%xmm0, %xmm1
    00001cf5: 	comisd	%xmm1, %xmm3
    00001cf9: 	jbe	.Ltmp655 # Offset: 7417
    00001cfb: 	xorpd	DATAat0x17380(%rip), %xmm1
.Ltmp655:
    00001d03: 	movsd	0x60(%rsp), %xmm7
    00001d09: 	comisd	%xmm1, %xmm7
    00001d0d: 	jbe	.Ltmp656 # Offset: 7437
.Ltmp673:
    00001d13: 	addl	$0x1, %r13d
    00001d17: 	cmpl	%edx, %r13d
    00001d1a: 	jl	.Ltmp657 # Offset: 7450
.Ltmp653:
    00001d1c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001d23: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001d2a: 	subq	$0x20, %rax
    00001d2e: 	cmpq	%rax, %rbx
    00001d31: 	je	.Ltmp658 # Offset: 7473
    00001d37: 	leaq	0x10(%rbx), %rdi
    00001d3b: 	movq	0xd8(%rsp), %r12
    00001d43: 	movq	%rdi, (%rbx)
    00001d46: 	movq	0xd0(%rsp), %rbp
    00001d4e: 	movq	%rbp, %rax
    00001d51: 	addq	%r12, %rax
    00001d54: 	je	.Ltmp659 # Offset: 7508
    00001d56: 	testq	%rbp, %rbp
    00001d59: 	je	.Ltmp660 # Offset: 7513
.Ltmp659:
    00001d5f: 	movq	%r12, 0xa8(%rsp)
    00001d67: 	cmpq	$0xf, %r12
    00001d6b: 	ja	.Ltmp661 # Offset: 7531
    00001d71: 	cmpq	$0x1, %r12
    00001d75: 	jne	.Ltmp662 # Offset: 7541
    00001d7b: 	movzbl	(%rbp), %eax
    00001d7f: 	movb	%al, 0x10(%rbx)
.Ltmp724:
    00001d82: 	movq	%r12, 0x8(%rbx)
    00001d86: 	movb	$0x0, (%rdi,%r12)
    00001d8b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d92: 	addq	$0x20, %rax
    00001d96: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp698:
    00001d9d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001da4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001dab: 	je	.Ltmp663 # Offset: 7595
.Ltmp697:
    00001db1: 	movq	-0x20(%rax), %rbp
    00001db5: 	callq	clock@PLT # Offset: 7605
    00001dba: 	pxor	%xmm0, %xmm0
    00001dbe: 	movq	%rax, end_time(%rip)
    00001dc5: 	movq	%rbp, %rdi
    00001dc8: 	subq	start_time(%rip), %rax
    00001dcf: 	cvtsi2sd	%rax, %xmm0
    00001dd4: 	divsd	DATAat0x17358(%rip), %xmm0
    00001ddc: 	callq	_Z13record_resultdPKc # Offset: 7644
    00001de1: 	movq	0xd0(%rsp), %rdi
    00001de9: 	cmpq	0x88(%rsp), %rdi
    00001df1: 	je	.Ltmp664 # Offset: 7665
    00001df3: 	movq	0xe0(%rsp), %rax
    00001dfb: 	leaq	0x1(%rax), %rsi
    00001dff: 	callq	_ZdlPvm@PLT # Offset: 7679
.Ltmp664:
    00001e04: 	movq	0x90(%rsp), %rsi
    00001e0c: 	leaq	DATAat0x172f6(%rip), %rdx
    00001e13: 	movq	%r14, %rdi
    00001e16: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7702
    00001e1b: 	movl	iterations(%rip), %edx
    00001e21: 	xorl	%r8d, %r8d
    00001e24: 	xorl	%ecx, %ecx
    00001e26: 	movl	$0x1f40, %esi
    00001e2b: 	movq	0xd0(%rsp), %rdi
    00001e33: 	callq	_Z9summarizePKciiii # Offset: 7731
    00001e38: 	movq	0xd0(%rsp), %rdi
    00001e40: 	cmpq	0x88(%rsp), %rdi
    00001e48: 	je	.Ltmp665 # Offset: 7752
    00001e4a: 	movq	0xe0(%rsp), %rax
    00001e52: 	leaq	0x1(%rax), %rsi
    00001e56: 	callq	_ZdlPvm@PLT # Offset: 7766
.Ltmp665:
    00001e5b: 	movq	0xb0(%rsp), %rdi
    00001e63: 	cmpq	0x98(%rsp), %rdi
    00001e6b: 	je	.Ltmp666 # Offset: 7787
    00001e6d: 	movq	0xc0(%rsp), %rax
    00001e75: 	leaq	0x1(%rax), %rsi
    00001e79: 	callq	_ZdlPvm@PLT # Offset: 7801
.Ltmp666:
    00001e7e: 	movq	0xfaf8(%rsp), %rax
    00001e86: 	subq	%fs:0x28, %rax
    00001e8f: 	jne	.Ltmp667 # Offset: 7823
    00001e95: 	addq	$0xfb08, %rsp
    00001e9c: 	popq	%rbx
    00001e9d: 	popq	%rbp
    00001e9e: 	popq	%r12
    00001ea0: 	popq	%r13
    00001ea2: 	popq	%r14
    00001ea4: 	popq	%r15
    00001ea6: 	retq # Offset: 7846
    00001ea7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp668:
    00001eb0: 	addq	$0x20, %rbp
.Ltmp487:
    00001eb4: 	cmpq	%rbp, (%rsp)
    00001eb8: 	je	.Ltmp491 # Offset: 7864
.Ltmp669:
    00001ebe: 	movq	(%rbp), %rdi
    00001ec2: 	leaq	0x10(%rbp), %rax
    00001ec6: 	cmpq	%rax, %rdi
    00001ec9: 	je	.Ltmp668 # Offset: 7881
    00001ecb: 	movq	0x10(%rbp), %rax
    00001ecf: 	addq	$0x20, %rbp
    00001ed3: 	leaq	0x1(%rax), %rsi
    00001ed7: 	callq	_ZdlPvm@PLT # Offset: 7895
    00001edc: 	cmpq	%rbp, (%rsp)
    00001ee0: 	jne	.Ltmp669 # Offset: 7904
    00001ee2: 	jmp	.Ltmp491 # Offset: 7906
    00001ee7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp483:
    00001ef0: 	addq	$0x20, %rbp
    00001ef4: 	cmpq	%rbx, %rbp
    00001ef7: 	jne	.Ltmp484 # Offset: 7927
    00001efd: 	addq	$0x8, %r13
    00001f01: 	cmpq	%r13, %r15
    00001f04: 	ja	.Ltmp485 # Offset: 7940
    00001f0a: 	jmp	.Ltmp670 # Offset: 7946
    00001f0f: 	nop # Size: 1
.Ltmp500:
    00001f10: 	movl	current_test(%rip), %edx
    00001f16: 	movq	%r15, %rsi
    00001f19: 	movl	$0x1, %edi
    00001f1e: 	xorl	%eax, %eax
    00001f20: 	callq	__printf_chk@PLT # Offset: 7968
    00001f25: 	movl	iterations(%rip), %edx
    00001f2b: 	jmp	.Ltmp671 # Offset: 7979
.Ltmp505:
    00001f30: 	leaq	0xa8(%rsp), %rsi
    00001f38: 	xorl	%edx, %edx
    00001f3a: 	movq	%rbp, %rdi
    00001f3d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7997
    00001f42: 	movq	%rax, (%rbp)
    00001f46: 	movq	%rax, %rdi
    00001f49: 	movq	0xa8(%rsp), %rax
    00001f51: 	movq	%rax, 0x10(%rbp)
.Ltmp719:
    00001f55: 	movq	%r13, %rdx
    00001f58: 	movq	%r15, %rsi
    00001f5b: 	callq	memcpy@PLT # Offset: 8027
    00001f60: 	movq	0xa8(%rsp), %r13
    00001f68: 	movq	(%rbp), %rdi
    00001f6c: 	jmp	.Ltmp672 # Offset: 8044
    00001f71: 	nopl	(%rax) # Size: 7
.Ltmp656:
    00001f78: 	movl	current_test(%rip), %edx
    00001f7e: 	movq	%r15, %rsi
    00001f81: 	movl	$0x1, %edi
    00001f86: 	xorl	%eax, %eax
    00001f88: 	callq	__printf_chk@PLT # Offset: 8072
    00001f8d: 	movl	iterations(%rip), %edx
    00001f93: 	jmp	.Ltmp673 # Offset: 8083
    00001f98: 	nopl	(%rax,%rax) # Size: 8
.Ltmp644:
    00001fa0: 	movl	current_test(%rip), %edx
    00001fa6: 	movq	%r15, %rsi
    00001fa9: 	movl	$0x1, %edi
    00001fae: 	xorl	%eax, %eax
    00001fb0: 	callq	__printf_chk@PLT # Offset: 8112
    00001fb5: 	movl	iterations(%rip), %edx
    00001fbb: 	jmp	.Ltmp674 # Offset: 8123
.Ltmp524:
    00001fc0: 	movl	current_test(%rip), %edx
    00001fc6: 	movq	%r15, %rsi
    00001fc9: 	movl	$0x1, %edi
    00001fce: 	xorl	%eax, %eax
    00001fd0: 	callq	__printf_chk@PLT # Offset: 8144
    00001fd5: 	movl	iterations(%rip), %edx
    00001fdb: 	jmp	.Ltmp675 # Offset: 8155
.Ltmp512:
    00001fe0: 	movl	current_test(%rip), %edx
    00001fe6: 	movq	%r15, %rsi
    00001fe9: 	movl	$0x1, %edi
    00001fee: 	xorl	%eax, %eax
    00001ff0: 	callq	__printf_chk@PLT # Offset: 8176
    00001ff5: 	movl	iterations(%rip), %edx
    00001ffb: 	jmp	.Ltmp676 # Offset: 8187
.Ltmp560:
    00002000: 	movl	current_test(%rip), %edx
    00002006: 	movq	%r15, %rsi
    00002009: 	movl	$0x1, %edi
    0000200e: 	xorl	%eax, %eax
    00002010: 	callq	__printf_chk@PLT # Offset: 8208
    00002015: 	movl	iterations(%rip), %edx
    0000201b: 	jmp	.Ltmp677 # Offset: 8219
.Ltmp548:
    00002020: 	movl	current_test(%rip), %edx
    00002026: 	movq	%r15, %rsi
    00002029: 	movl	$0x1, %edi
    0000202e: 	xorl	%eax, %eax
    00002030: 	callq	__printf_chk@PLT # Offset: 8240
    00002035: 	movl	iterations(%rip), %edx
    0000203b: 	jmp	.Ltmp678 # Offset: 8251
.Ltmp536:
    00002040: 	movl	current_test(%rip), %edx
    00002046: 	movq	%r15, %rsi
    00002049: 	movl	$0x1, %edi
    0000204e: 	xorl	%eax, %eax
    00002050: 	callq	__printf_chk@PLT # Offset: 8272
    00002055: 	movl	iterations(%rip), %edx
    0000205b: 	jmp	.Ltmp679 # Offset: 8283
.Ltmp632:
    00002060: 	movl	current_test(%rip), %edx
    00002066: 	movq	%r15, %rsi
    00002069: 	movl	$0x1, %edi
    0000206e: 	xorl	%eax, %eax
    00002070: 	callq	__printf_chk@PLT # Offset: 8304
    00002075: 	movl	iterations(%rip), %edx
    0000207b: 	jmp	.Ltmp680 # Offset: 8315
.Ltmp620:
    00002080: 	movl	current_test(%rip), %edx
    00002086: 	movq	%r15, %rsi
    00002089: 	movl	$0x1, %edi
    0000208e: 	xorl	%eax, %eax
    00002090: 	callq	__printf_chk@PLT # Offset: 8336
    00002095: 	movl	iterations(%rip), %edx
    0000209b: 	jmp	.Ltmp681 # Offset: 8347
.Ltmp608:
    000020a0: 	movl	current_test(%rip), %edx
    000020a6: 	movq	%r15, %rsi
    000020a9: 	movl	$0x1, %edi
    000020ae: 	xorl	%eax, %eax
    000020b0: 	callq	__printf_chk@PLT # Offset: 8368
    000020b5: 	movl	iterations(%rip), %edx
    000020bb: 	jmp	.Ltmp682 # Offset: 8379
.Ltmp596:
    000020c0: 	movl	current_test(%rip), %edx
    000020c6: 	movq	%r15, %rsi
    000020c9: 	movl	$0x1, %edi
    000020ce: 	xorl	%eax, %eax
    000020d0: 	callq	__printf_chk@PLT # Offset: 8400
    000020d5: 	movl	iterations(%rip), %edx
    000020db: 	jmp	.Ltmp683 # Offset: 8411
.Ltmp584:
    000020e0: 	movl	current_test(%rip), %edx
    000020e6: 	movq	%r15, %rsi
    000020e9: 	movl	$0x1, %edi
    000020ee: 	xorl	%eax, %eax
    000020f0: 	callq	__printf_chk@PLT # Offset: 8432
    000020f5: 	movl	iterations(%rip), %edx
    000020fb: 	jmp	.Ltmp684 # Offset: 8443
.Ltmp572:
    00002100: 	movl	current_test(%rip), %edx
    00002106: 	movq	%r15, %rsi
    00002109: 	movl	$0x1, %edi
    0000210e: 	xorl	%eax, %eax
    00002110: 	callq	__printf_chk@PLT # Offset: 8464
    00002115: 	movl	iterations(%rip), %edx
    0000211b: 	jmp	.Ltmp685 # Offset: 8475
.Ltmp574:
    00002120: 	movq	%r14, %rsi
    00002123: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000212a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8490
    0000212f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002136: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000213d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002144: 	jne	.Ltmp686 # Offset: 8516
.Ltmp579:
    0000214a: 	movq	-0x8(%rdx), %rax
    0000214e: 	addq	$0x200, %rax
    00002154: 	jmp	.Ltmp686 # Offset: 8532
.Ltmp555:
    00002159: 	movq	-0x8(%rdx), %rax
    0000215d: 	addq	$0x200, %rax
    00002163: 	jmp	.Ltmp687 # Offset: 8547
.Ltmp550:
    00002168: 	movq	%r14, %rsi
    0000216b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002172: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8562
    00002177: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000217e: 	jmp	.Ltmp688 # Offset: 8574
.Ltmp519:
    00002183: 	movq	-0x8(%rdx), %rax
    00002187: 	addq	$0x200, %rax
    0000218d: 	jmp	.Ltmp689 # Offset: 8589
.Ltmp562:
    00002192: 	movq	%r14, %rsi
    00002195: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000219c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8604
    000021a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021a8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000021af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021b6: 	jne	.Ltmp690 # Offset: 8630
.Ltmp567:
    000021bc: 	movq	-0x8(%rdx), %rax
    000021c0: 	addq	$0x200, %rax
    000021c6: 	jmp	.Ltmp690 # Offset: 8646
.Ltmp526:
    000021cb: 	movq	%r14, %rsi
    000021ce: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000021d5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8661
    000021da: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000021e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000021e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000021ef: 	jne	.Ltmp691 # Offset: 8687
.Ltmp531:
    000021f5: 	movq	-0x8(%rdx), %rax
    000021f9: 	addq	$0x200, %rax
    000021ff: 	jmp	.Ltmp691 # Offset: 8703
.Ltmp507:
    00002204: 	movq	-0x8(%rdx), %rax
    00002208: 	addq	$0x200, %rax
    0000220e: 	jmp	.Ltmp692 # Offset: 8718
.Ltmp514:
    00002213: 	movq	%r14, %rsi
    00002216: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000221d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8733
    00002222: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002229: 	jmp	.Ltmp693 # Offset: 8745
.Ltmp502:
    0000222e: 	movq	%r14, %rsi
    00002231: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002238: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8760
    0000223d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002244: 	jmp	.Ltmp694 # Offset: 8772
.Ltmp651:
    00002249: 	movq	-0x8(%rdx), %rax
    0000224d: 	addq	$0x200, %rax
    00002253: 	jmp	.Ltmp695 # Offset: 8787
.Ltmp646:
    00002258: 	movq	%r14, %rsi
    0000225b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002262: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8802
    00002267: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000226e: 	jmp	.Ltmp696 # Offset: 8814
.Ltmp663:
    00002273: 	movq	-0x8(%rdx), %rax
    00002277: 	addq	$0x200, %rax
    0000227d: 	jmp	.Ltmp697 # Offset: 8829
.Ltmp658:
    00002282: 	movq	%r14, %rsi
    00002285: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000228c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8844
    00002291: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002298: 	jmp	.Ltmp698 # Offset: 8856
.Ltmp598:
    0000229d: 	movq	%r14, %rsi
    000022a0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022a7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8871
    000022ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022b3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000022ba: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022c1: 	jne	.Ltmp699 # Offset: 8897
.Ltmp603:
    000022c7: 	movq	-0x8(%rdx), %rax
    000022cb: 	addq	$0x200, %rax
    000022d1: 	jmp	.Ltmp699 # Offset: 8913
.Ltmp543:
    000022d6: 	movq	-0x8(%rdx), %rax
    000022da: 	addq	$0x200, %rax
    000022e0: 	jmp	.Ltmp700 # Offset: 8928
.Ltmp538:
    000022e5: 	movq	%r14, %rsi
    000022e8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8943
    000022f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022fb: 	jmp	.Ltmp701 # Offset: 8955
.Ltmp591:
    00002300: 	movq	-0x8(%rdx), %rax
    00002304: 	addq	$0x200, %rax
    0000230a: 	jmp	.Ltmp702 # Offset: 8970
.Ltmp586:
    0000230f: 	movq	%r14, %rsi
    00002312: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002319: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8985
    0000231e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002325: 	jmp	.Ltmp703 # Offset: 8997
.Ltmp622:
    0000232a: 	movq	%r14, %rsi
    0000232d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002334: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9012
    00002339: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002340: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002347: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000234e: 	jne	.Ltmp704 # Offset: 9038
.Ltmp627:
    00002354: 	movq	-0x8(%rdx), %rax
    00002358: 	addq	$0x200, %rax
    0000235e: 	jmp	.Ltmp704 # Offset: 9054
.Ltmp610:
    00002363: 	movq	%r14, %rsi
    00002366: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000236d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9069
    00002372: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002379: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002380: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002387: 	jne	.Ltmp705 # Offset: 9095
.Ltmp615:
    0000238d: 	movq	-0x8(%rdx), %rax
    00002391: 	addq	$0x200, %rax
    00002397: 	jmp	.Ltmp705 # Offset: 9111
.Ltmp639:
    0000239c: 	movq	-0x8(%rdx), %rax
    000023a0: 	addq	$0x200, %rax
    000023a6: 	jmp	.Ltmp706 # Offset: 9126
.Ltmp634:
    000023ab: 	movq	%r14, %rsi
    000023ae: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023b5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9141
    000023ba: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023c1: 	jmp	.Ltmp707 # Offset: 9153
.Ltmp626:
    000023c6: 	testq	%r13, %r13
    000023c9: 	je	.Ltmp708 # Offset: 9161
.Ltmp732:
    000023cf: 	movq	%r13, %rdx
    000023d2: 	movq	%r15, %rsi
    000023d5: 	callq	memcpy@PLT # Offset: 9173
    000023da: 	movq	0xa8(%rsp), %r13
    000023e2: 	movq	(%rbp), %rdi
    000023e6: 	jmp	.Ltmp708 # Offset: 9190
.Ltmp614:
    000023eb: 	testq	%r13, %r13
    000023ee: 	je	.Ltmp709 # Offset: 9198
    000023f4: 	jmp	.Ltmp710 # Offset: 9204
    000023f9: 	nopl	(%rax) # Size: 7
.Ltmp638:
    00002400: 	testq	%r13, %r13
    00002403: 	je	.Ltmp711 # Offset: 9219
.Ltmp731:
    00002409: 	movq	%r13, %rdx
    0000240c: 	movq	%r15, %rsi
    0000240f: 	callq	memcpy@PLT # Offset: 9231
    00002414: 	movq	0xa8(%rsp), %r13
    0000241c: 	movq	(%rbp), %rdi
    00002420: 	jmp	.Ltmp711 # Offset: 9248
.Ltmp530:
    00002425: 	testq	%r13, %r13
    00002428: 	je	.Ltmp712 # Offset: 9256
    0000242e: 	jmp	.Ltmp713 # Offset: 9262
    00002433: 	nopl	(%rax,%rax) # Size: 5
.Ltmp566:
    00002438: 	testq	%r13, %r13
    0000243b: 	je	.Ltmp714 # Offset: 9275
.Ltmp733:
    00002441: 	movq	%r13, %rdx
    00002444: 	movq	%r15, %rsi
    00002447: 	callq	memcpy@PLT # Offset: 9287
    0000244c: 	movq	0xa8(%rsp), %r13
    00002454: 	movq	(%rbp), %rdi
    00002458: 	jmp	.Ltmp714 # Offset: 9304
.Ltmp590:
    0000245d: 	testq	%r13, %r13
    00002460: 	je	.Ltmp715 # Offset: 9312
    00002466: 	jmp	.Ltmp716 # Offset: 9318
    0000246b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp542:
    00002470: 	testq	%r13, %r13
    00002473: 	je	.Ltmp717 # Offset: 9331
    00002479: 	jmp	.Ltmp718 # Offset: 9337
    0000247e: 	nop # Size: 2
.Ltmp506:
    00002480: 	testq	%r13, %r13
    00002483: 	je	.Ltmp672 # Offset: 9347
    00002489: 	jmp	.Ltmp719 # Offset: 9353
    0000248e: 	nop # Size: 2
.Ltmp602:
    00002490: 	testq	%r13, %r13
    00002493: 	je	.Ltmp720 # Offset: 9363
    00002499: 	jmp	.Ltmp721 # Offset: 9369
    0000249e: 	nop # Size: 2
.Ltmp578:
    000024a0: 	testq	%r13, %r13
    000024a3: 	je	.Ltmp722 # Offset: 9379
    000024a9: 	jmp	.Ltmp723 # Offset: 9385
    000024ae: 	nop # Size: 2
.Ltmp662:
    000024b0: 	testq	%r12, %r12
    000024b3: 	je	.Ltmp724 # Offset: 9395
    000024b9: 	jmp	.Ltmp725 # Offset: 9401
    000024be: 	nop # Size: 2
.Ltmp518:
    000024c0: 	testq	%r13, %r13
    000024c3: 	je	.Ltmp726 # Offset: 9411
    000024c9: 	jmp	.Ltmp727 # Offset: 9417
    000024ce: 	nop # Size: 2
.Ltmp650:
    000024d0: 	testq	%r13, %r13
    000024d3: 	je	.Ltmp728 # Offset: 9427
    000024d9: 	jmp	.Ltmp729 # Offset: 9433
    000024de: 	nop # Size: 2
.Ltmp554:
    000024e0: 	testq	%r13, %r13
    000024e3: 	je	.Ltmp730 # Offset: 9443
.Ltmp734:
    000024e9: 	movq	%r13, %rdx
    000024ec: 	movq	%r15, %rsi
    000024ef: 	callq	memcpy@PLT # Offset: 9455
    000024f4: 	movq	0xa8(%rsp), %r13
    000024fc: 	movq	(%rbp), %rdi
    00002500: 	jmp	.Ltmp730 # Offset: 9472
.Ltmp601:
    00002505: 	leaq	0xa8(%rsp), %rsi
    0000250d: 	xorl	%edx, %edx
    0000250f: 	movq	%rbp, %rdi
    00002512: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9490
    00002517: 	movq	%rax, (%rbp)
    0000251b: 	movq	%rax, %rdi
    0000251e: 	movq	0xa8(%rsp), %rax
    00002526: 	movq	%rax, 0x10(%rbp)
.Ltmp721:
    0000252a: 	movq	%r13, %rdx
    0000252d: 	movq	%r15, %rsi
    00002530: 	callq	memcpy@PLT # Offset: 9520
    00002535: 	movq	0xa8(%rsp), %r13
    0000253d: 	movq	(%rbp), %rdi
    00002541: 	jmp	.Ltmp720 # Offset: 9537
.Ltmp577:
    00002546: 	leaq	0xa8(%rsp), %rsi
    0000254e: 	xorl	%edx, %edx
    00002550: 	movq	%rbp, %rdi
    00002553: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9555
    00002558: 	movq	%rax, (%rbp)
    0000255c: 	movq	%rax, %rdi
    0000255f: 	movq	0xa8(%rsp), %rax
    00002567: 	movq	%rax, 0x10(%rbp)
.Ltmp723:
    0000256b: 	movq	%r13, %rdx
    0000256e: 	movq	%r15, %rsi
    00002571: 	callq	memcpy@PLT # Offset: 9585
    00002576: 	movq	0xa8(%rsp), %r13
    0000257e: 	movq	(%rbp), %rdi
    00002582: 	jmp	.Ltmp722 # Offset: 9602
.Ltmp589:
    00002587: 	leaq	0xa8(%rsp), %rsi
    0000258f: 	xorl	%edx, %edx
    00002591: 	movq	%rbp, %rdi
    00002594: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9620
    00002599: 	movq	%rax, (%rbp)
    0000259d: 	movq	%rax, %rdi
    000025a0: 	movq	0xa8(%rsp), %rax
    000025a8: 	movq	%rax, 0x10(%rbp)
.Ltmp716:
    000025ac: 	movq	%r13, %rdx
    000025af: 	movq	%r15, %rsi
    000025b2: 	callq	memcpy@PLT # Offset: 9650
    000025b7: 	movq	0xa8(%rsp), %r13
    000025bf: 	movq	(%rbp), %rdi
    000025c3: 	jmp	.Ltmp715 # Offset: 9667
.Ltmp613:
    000025c8: 	leaq	0xa8(%rsp), %rsi
    000025d0: 	xorl	%edx, %edx
    000025d2: 	movq	%rbp, %rdi
    000025d5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9685
    000025da: 	movq	%rax, (%rbp)
    000025de: 	movq	%rax, %rdi
    000025e1: 	movq	0xa8(%rsp), %rax
    000025e9: 	movq	%rax, 0x10(%rbp)
.Ltmp710:
    000025ed: 	movq	%r13, %rdx
    000025f0: 	movq	%r15, %rsi
    000025f3: 	callq	memcpy@PLT # Offset: 9715
    000025f8: 	movq	0xa8(%rsp), %r13
    00002600: 	movq	(%rbp), %rdi
    00002604: 	jmp	.Ltmp709 # Offset: 9732
.Ltmp529:
    00002609: 	leaq	0xa8(%rsp), %rsi
    00002611: 	xorl	%edx, %edx
    00002613: 	movq	%rbp, %rdi
    00002616: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9750
    0000261b: 	movq	%rax, (%rbp)
    0000261f: 	movq	%rax, %rdi
    00002622: 	movq	0xa8(%rsp), %rax
    0000262a: 	movq	%rax, 0x10(%rbp)
.Ltmp713:
    0000262e: 	movq	%r13, %rdx
    00002631: 	movq	%r15, %rsi
    00002634: 	callq	memcpy@PLT # Offset: 9780
    00002639: 	movq	0xa8(%rsp), %r13
    00002641: 	movq	(%rbp), %rdi
    00002645: 	jmp	.Ltmp712 # Offset: 9797
.Ltmp541:
    0000264a: 	leaq	0xa8(%rsp), %rsi
    00002652: 	xorl	%edx, %edx
    00002654: 	movq	%rbp, %rdi
    00002657: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9815
    0000265c: 	movq	%rax, (%rbp)
    00002660: 	movq	%rax, %rdi
    00002663: 	movq	0xa8(%rsp), %rax
    0000266b: 	movq	%rax, 0x10(%rbp)
.Ltmp718:
    0000266f: 	movq	%r13, %rdx
    00002672: 	movq	%r15, %rsi
    00002675: 	callq	memcpy@PLT # Offset: 9845
    0000267a: 	movq	0xa8(%rsp), %r13
    00002682: 	movq	(%rbp), %rdi
    00002686: 	jmp	.Ltmp717 # Offset: 9862
.Ltmp637:
    0000268b: 	leaq	0xa8(%rsp), %rsi
    00002693: 	xorl	%edx, %edx
    00002695: 	movq	%rbp, %rdi
    00002698: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9880
    0000269d: 	movq	%rax, (%rbp)
    000026a1: 	movq	%rax, %rdi
    000026a4: 	movq	0xa8(%rsp), %rax
    000026ac: 	movq	%rax, 0x10(%rbp)
    000026b0: 	jmp	.Ltmp731 # Offset: 9904
.Ltmp517:
    000026b5: 	leaq	0xa8(%rsp), %rsi
    000026bd: 	xorl	%edx, %edx
    000026bf: 	movq	%rbp, %rdi
    000026c2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9922
    000026c7: 	movq	%rax, (%rbp)
    000026cb: 	movq	%rax, %rdi
    000026ce: 	movq	0xa8(%rsp), %rax
    000026d6: 	movq	%rax, 0x10(%rbp)
.Ltmp727:
    000026da: 	movq	%r13, %rdx
    000026dd: 	movq	%r15, %rsi
    000026e0: 	callq	memcpy@PLT # Offset: 9952
    000026e5: 	movq	0xa8(%rsp), %r13
    000026ed: 	movq	(%rbp), %rdi
    000026f1: 	jmp	.Ltmp726 # Offset: 9969
.Ltmp661:
    000026f6: 	leaq	0xa8(%rsp), %rsi
    000026fe: 	xorl	%edx, %edx
    00002700: 	movq	%rbx, %rdi
    00002703: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9987
    00002708: 	movq	%rax, (%rbx)
    0000270b: 	movq	%rax, %rdi
    0000270e: 	movq	0xa8(%rsp), %rax
    00002716: 	movq	%rax, 0x10(%rbx)
.Ltmp725:
    0000271a: 	movq	%r12, %rdx
    0000271d: 	movq	%rbp, %rsi
    00002720: 	callq	memcpy@PLT # Offset: 10016
    00002725: 	movq	0xa8(%rsp), %r12
    0000272d: 	movq	(%rbx), %rdi
    00002730: 	jmp	.Ltmp724 # Offset: 10032
.Ltmp649:
    00002735: 	leaq	0xa8(%rsp), %rsi
    0000273d: 	xorl	%edx, %edx
    0000273f: 	movq	%rbp, %rdi
    00002742: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10050
    00002747: 	movq	%rax, (%rbp)
    0000274b: 	movq	%rax, %rdi
    0000274e: 	movq	0xa8(%rsp), %rax
    00002756: 	movq	%rax, 0x10(%rbp)
.Ltmp729:
    0000275a: 	movq	%r13, %rdx
    0000275d: 	movq	%r15, %rsi
    00002760: 	callq	memcpy@PLT # Offset: 10080
    00002765: 	movq	0xa8(%rsp), %r13
    0000276d: 	movq	(%rbp), %rdi
    00002771: 	jmp	.Ltmp728 # Offset: 10097
.Ltmp625:
    00002776: 	leaq	0xa8(%rsp), %rsi
    0000277e: 	xorl	%edx, %edx
    00002780: 	movq	%rbp, %rdi
    00002783: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10115
    00002788: 	movq	%rax, (%rbp)
    0000278c: 	movq	%rax, %rdi
    0000278f: 	movq	0xa8(%rsp), %rax
    00002797: 	movq	%rax, 0x10(%rbp)
    0000279b: 	jmp	.Ltmp732 # Offset: 10139
.Ltmp565:
    000027a0: 	leaq	0xa8(%rsp), %rsi
    000027a8: 	xorl	%edx, %edx
    000027aa: 	movq	%rbp, %rdi
    000027ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10157
    000027b2: 	movq	%rax, (%rbp)
    000027b6: 	movq	%rax, %rdi
    000027b9: 	movq	0xa8(%rsp), %rax
    000027c1: 	movq	%rax, 0x10(%rbp)
    000027c5: 	jmp	.Ltmp733 # Offset: 10181
.Ltmp553:
    000027ca: 	leaq	0xa8(%rsp), %rsi
    000027d2: 	xorl	%edx, %edx
    000027d4: 	movq	%rbp, %rdi
    000027d7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10199
    000027dc: 	movq	%rax, (%rbp)
    000027e0: 	movq	%rax, %rdi
    000027e3: 	movq	0xa8(%rsp), %rax
    000027eb: 	movq	%rax, 0x10(%rbp)
    000027ef: 	jmp	.Ltmp734 # Offset: 10223
.Ltmp516:
    000027f4: 	leaq	DATAat0x17158(%rip), %rdi
    000027fb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10235
.Ltmp528:
    00002800: 	leaq	DATAat0x17158(%rip), %rdi
    00002807: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10247
.Ltmp540:
    0000280c: 	leaq	DATAat0x17158(%rip), %rdi
    00002813: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10259
.Ltmp552:
    00002818: 	leaq	DATAat0x17158(%rip), %rdi
    0000281f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10271
.Ltmp564:
    00002824: 	leaq	DATAat0x17158(%rip), %rdi
    0000282b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10283
.Ltmp576:
    00002830: 	leaq	DATAat0x17158(%rip), %rdi
    00002837: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10295
.Ltmp588:
    0000283c: 	leaq	DATAat0x17158(%rip), %rdi
    00002843: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10307
.Ltmp600:
    00002848: 	leaq	DATAat0x17158(%rip), %rdi
    0000284f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10319
.Ltmp612:
    00002854: 	leaq	DATAat0x17158(%rip), %rdi
    0000285b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10331
.Ltmp624:
    00002860: 	leaq	DATAat0x17158(%rip), %rdi
    00002867: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10343
.Ltmp636:
    0000286c: 	leaq	DATAat0x17158(%rip), %rdi
    00002873: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10355
.Ltmp648:
    00002878: 	leaq	DATAat0x17158(%rip), %rdi
    0000287f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10367
.Ltmp660:
    00002884: 	leaq	DATAat0x17158(%rip), %rdi
    0000288b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10379
.Ltmp667:
    00002890: 	callq	__stack_chk_fail@PLT # Offset: 10384
.Ltmp504:
    00002895: 	leaq	DATAat0x17158(%rip), %rdi
    0000289c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10396
    000028a1: 	endbr64
.Ltmp736:
    000028a5: 	movq	%rax, %rbp
    000028a8: 	jmp	.Ltmp735 # Offset: 10408
    000028aa: 	endbr64
    000028ae: 	jmp	.Ltmp736 # Offset: 10414
    000028b0: 	endbr64
    000028b4: 	jmp	.Ltmp736 # Offset: 10420
    000028b6: 	endbr64
    000028ba: 	jmp	.Ltmp736 # Offset: 10426
.Ltmp735:
    000028bc: 	movq	0xd0(%rsp), %rdi
    000028c4: 	cmpq	0x88(%rsp), %rdi
    000028cc: 	je	.Ltmp737 # Offset: 10444
.Ltmp740:
    000028ce: 	movq	0xe0(%rsp), %rax
    000028d6: 	leaq	0x1(%rax), %rsi
    000028da: 	callq	_ZdlPvm@PLT # Offset: 10458
.Ltmp737:
    000028df: 	movq	0xb0(%rsp), %rdi
    000028e7: 	cmpq	0x98(%rsp), %rdi
    000028ef: 	je	.Ltmp738 # Offset: 10479
    000028f1: 	movq	0xc0(%rsp), %rax
    000028f9: 	leaq	0x1(%rax), %rsi
    000028fd: 	callq	_ZdlPvm@PLT # Offset: 10493
.Ltmp738:
    00002902: 	movq	%rbp, %rdi
    00002905: 	callq	_Unwind_Resume@PLT # Offset: 10501
    0000290a: 	endbr64
    0000290e: 	jmp	.Ltmp736 # Offset: 10510
    00002910: 	endbr64
    00002914: 	jmp	.Ltmp736 # Offset: 10516
    00002916: 	endbr64
    0000291a: 	jmp	.Ltmp736 # Offset: 10522
    0000291c: 	endbr64
    00002920: 	jmp	.Ltmp736 # Offset: 10528
    00002922: 	endbr64
    00002926: 	movq	%rax, %rbp
    00002929: 	jmp	.Ltmp737 # Offset: 10537
    0000292b: 	endbr64
    0000292f: 	movq	%rax, %rbp
    00002932: 	jmp	.Ltmp739 # Offset: 10546
    00002934: 	endbr64
    00002938: 	jmp	.Ltmp736 # Offset: 10552
    0000293d: 	endbr64
    00002941: 	jmp	.Ltmp736 # Offset: 10561
.Ltmp739:
    00002946: 	movq	0xd0(%rsp), %rdi
    0000294e: 	leaq	0xe0(%rsp), %rax
    00002956: 	cmpq	%rax, %rdi
    00002959: 	jne	.Ltmp740 # Offset: 10585
    0000295f: 	jmp	.Ltmp737 # Offset: 10591
    00002964: 	endbr64
    00002968: 	jmp	.Ltmp736 # Offset: 10600
    0000296d: 	endbr64
    00002971: 	jmp	.Ltmp736 # Offset: 10609
    00002976: 	endbr64
    0000297a: 	jmp	.Ltmp736 # Offset: 10618
    0000297f: 	endbr64
    00002983: 	jmp	.Ltmp736 # Offset: 10627
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI15SingleItemClassIdEEvd"

Binary Function "_Z11TestOneTypeI12TwoItemClassIiEEvd" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x9c80
  Size        : 0x26da
  MaxSize     : 0x26e0
  Offset      : 0x9c80
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI12TwoItemClassIiEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp741:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp741 # Offset: 37
    00000027: 	subq	$0xae8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm4, %xmm2
    00000048: 	movq	%xmm5, %rbp
    0000004d: 	movq	%xmm2, %rsi
    00000052: 	leaq	0x8(%rsi), %r12
    00000056: 	movsd	%xmm0, 0x58(%rsp)
    0000005c: 	movq	%fs:0x28, %rax
    00000065: 	movq	%rax, 0xfad8(%rsp)
    0000006d: 	xorl	%eax, %eax
    0000006f: 	leaq	0xa0(%rsp), %rax
    00000077: 	movb	$0x73, 0xa8(%rsp)
    0000007f: 	movq	%rax, 0x78(%rsp)
    00000084: 	movq	%rax, 0x90(%rsp)
    0000008c: 	movabsq	$0x73616c4332746e69, %rax
    00000096: 	movq	%rax, 0xa0(%rsp)
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a5: 	movq	$0x9, 0x98(%rsp)
    000000b1: 	movq	%rax, (%rsp)
    000000b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000bc: 	movb	$0x0, 0xa9(%rsp)
    000000c4: 	movq	%rax, 0x20(%rsp)
    000000c9: 	movaps	%xmm5, 0x30(%rsp)
    000000ce: 	movaps	%xmm4, 0x40(%rsp)
    000000d3: 	movq	%xmm2, 0x50(%rsp)
    000000d9: 	movq	%xmm4, 0x10(%rsp)
    000000df: 	cmpq	%r12, %rax
    000000e2: 	jbe	.Ltmp742 # Offset: 226
    000000e4: 	movq	%r12, %r13
    000000e7: 	movq	%rax, %r15
    000000ea: 	movq	%xmm5, 0x60(%rsp)
.Ltmp745:
    000000f0: 	movq	(%r13), %rbp
    000000f4: 	leaq	0x200(%rbp), %rbx
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp744:
    00000100: 	movq	(%rbp), %rdi
    00000104: 	leaq	0x10(%rbp), %rdx
    00000108: 	cmpq	%rdx, %rdi
    0000010b: 	je	.Ltmp743 # Offset: 267
    00000111: 	movq	0x10(%rbp), %rax
    00000115: 	addq	$0x20, %rbp
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%rbp, %rbx
    00000125: 	jne	.Ltmp744 # Offset: 293
    00000127: 	addq	$0x8, %r13
    0000012b: 	cmpq	%r13, %r15
    0000012e: 	ja	.Ltmp745 # Offset: 302
.Ltmp916:
    00000130: 	movq	0x60(%rsp), %rbp
.Ltmp742:
    00000135: 	movq	0x50(%rsp), %rsi
    0000013a: 	cmpq	%rsi, 0x20(%rsp)
    0000013f: 	jne	.Ltmp746 # Offset: 319
    00000141: 	jmp	.Ltmp747 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp749:
    00000150: 	movq	0x10(%rbp), %rax
    00000154: 	addq	$0x20, %rbp
    00000158: 	leaq	0x1(%rax), %rsi
    0000015c: 	callq	_ZdlPvm@PLT # Offset: 348
.Ltmp746:
    00000161: 	cmpq	%rbp, 0x10(%rsp)
    00000166: 	je	.Ltmp748 # Offset: 358
.Ltmp750:
    00000168: 	movq	(%rbp), %rdi
    0000016c: 	leaq	0x10(%rbp), %rax
    00000170: 	cmpq	%rax, %rdi
    00000173: 	jne	.Ltmp749 # Offset: 371
    00000175: 	addq	$0x20, %rbp
    00000179: 	cmpq	0x10(%rsp), %rbp
    0000017e: 	jne	.Ltmp750 # Offset: 382
    00000180: 	cmpq	%r14, (%rsp)
    00000184: 	je	.Ltmp751 # Offset: 388
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp753:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp752 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp752:
    000001a9: 	addq	$0x20, %r14
.Ltmp748:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp753 # Offset: 433
.Ltmp751:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp754 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp755:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp755 # Offset: 477
.Ltmp754:
    000001df: 	cvttsd2si	init_value(%rip), %eax
    000001e7: 	movdqa	0x30(%rsp), %xmm6
    000001ed: 	leaq	0xd0(%rsp), %r12
    000001f5: 	leaq	0xfad0(%rsp), %rbx
    000001fd: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    00000204: 	movdqa	0x40(%rsp), %xmm6
    0000020a: 	movd	%eax, %xmm0
    0000020e: 	movaps	%xmm6, "_ZL7gLabels/1"+64(%rip)
    00000215: 	movq	%r12, %rax
    00000218: 	pshufd	$0x0, %xmm0, %xmm0
    0000021d: 	nopl	(%rax) # Size: 3
.Ltmp756:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x10, %rax
    00000227: 	cmpq	%rbx, %rax
    0000022a: 	jne	.Ltmp756 # Offset: 554
    0000022c: 	cvttsd2si	0x58(%rsp), %ebp
    00000232: 	leaq	0xb0(%rsp), %rdi
    0000023a: 	movq	%rdi, 0x60(%rsp)
    0000023f: 	leal	(%rbp,%rbp), %eax
    00000243: 	leal	0x2(%rbp), %esi
    00000246: 	cltd
    00000247: 	movl	%eax, 0x58(%rsp)
    0000024b: 	idivl	%esi
    0000024d: 	movl	%esi, 0x40(%rsp)
    00000251: 	leaq	DATAat0x171c8(%rip), %rdx
    00000258: 	addl	%ebp, %eax
    0000025a: 	movl	%eax, 0x50(%rsp)
    0000025e: 	leaq	0x90(%rsp), %rax
    00000266: 	movq	%rax, %rsi
    00000269: 	movq	%rax, 0x70(%rsp)
    0000026e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 622
    00000273: 	callq	clock@PLT # Offset: 627
    00000278: 	movd	%ebp, %xmm5
    0000027c: 	xorl	%r13d, %r13d
    0000027f: 	movl	iterations(%rip), %ecx
    00000285: 	pshufd	$0x0, %xmm5, %xmm6
    0000028a: 	movq	%rax, start_time(%rip)
    00000291: 	leaq	DATAat0x171d6(%rip), %r14
    00000298: 	movaps	%xmm6, (%rsp)
    0000029c: 	testl	%ecx, %ecx
    0000029e: 	jle	.Ltmp757 # Offset: 670
.Ltmp760:
    000002a0: 	movq	%r12, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp758:
    000002b0: 	movdqa	(%rsp), %xmm1
    000002b5: 	paddd	(%rax), %xmm1
    000002b9: 	addq	$0x10, %rax
    000002bd: 	paddd	%xmm1, %xmm0
    000002c1: 	cmpq	%rbx, %rax
    000002c4: 	jne	.Ltmp758 # Offset: 708
    000002c6: 	cvttsd2si	init_value(%rip), %edi
    000002ce: 	pshufd	$0xff, %xmm0, %xmm1
    000002d3: 	movd	%xmm1, %edx
    000002d7: 	pshufd	$0x55, %xmm0, %xmm1
    000002dc: 	movd	%xmm1, %eax
    000002e0: 	movdqa	%xmm0, %xmm1
    000002e4: 	punpckhdq	%xmm0, %xmm1
    000002e8: 	addl	%eax, %edx
    000002ea: 	movd	%xmm0, %eax
    000002ee: 	addl	%ebp, %edi
    000002f0: 	movd	%xmm1, %esi
    000002f4: 	imull	$0x1f40, %edi, %edi
    000002fa: 	addl	%esi, %eax
    000002fc: 	subl	%edi, %edx
    000002fe: 	subl	%edi, %eax
    00000300: 	addl	%eax, %edx
    00000302: 	jne	.Ltmp759 # Offset: 770
.Ltmp917:
    00000308: 	addl	$0x1, %r13d
    0000030c: 	cmpl	%ecx, %r13d
    0000030f: 	jl	.Ltmp760 # Offset: 783
.Ltmp757:
    00000311: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000318: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000031f: 	subq	$0x20, %rax
    00000323: 	cmpq	%rax, %r14
    00000326: 	je	.Ltmp761 # Offset: 806
    0000032c: 	leaq	0x10(%r14), %rdi
    00000330: 	movq	0xb8(%rsp), %r13
    00000338: 	movq	%rdi, (%r14)
    0000033b: 	movq	0xb0(%rsp), %r15
    00000343: 	movq	%r15, %rax
    00000346: 	addq	%r13, %rax
    00000349: 	je	.Ltmp762 # Offset: 841
    0000034b: 	testq	%r15, %r15
    0000034e: 	je	.Ltmp763 # Offset: 846
.Ltmp762:
    00000354: 	movq	%r13, 0x88(%rsp)
    0000035c: 	cmpq	$0xf, %r13
    00000360: 	ja	.Ltmp764 # Offset: 864
    00000366: 	cmpq	$0x1, %r13
    0000036a: 	jne	.Ltmp765 # Offset: 874
    00000370: 	movzbl	(%r15), %eax
    00000374: 	movb	%al, 0x10(%r14)
.Ltmp918:
    00000378: 	movq	%r13, 0x8(%r14)
    0000037c: 	movb	$0x0, (%rdi,%r13)
    00000381: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000388: 	addq	$0x20, %rax
    0000038c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp940:
    00000393: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000039a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a1: 	je	.Ltmp766 # Offset: 929
.Ltmp938:
    000003a7: 	movq	-0x20(%rax), %r13
    000003ab: 	callq	clock@PLT # Offset: 939
    000003b0: 	pxor	%xmm0, %xmm0
    000003b4: 	movq	%rax, end_time(%rip)
    000003bb: 	movq	%r13, %rdi
    000003be: 	subq	start_time(%rip), %rax
    000003c5: 	cvtsi2sd	%rax, %xmm0
    000003ca: 	divsd	DATAat0x17358(%rip), %xmm0
    000003d2: 	callq	_Z13record_resultdPKc # Offset: 978
    000003d7: 	movq	0xb0(%rsp), %rdi
    000003df: 	leaq	0xc0(%rsp), %rax
    000003e7: 	movq	%rax, 0x68(%rsp)
    000003ec: 	cmpq	%rax, %rdi
    000003ef: 	je	.Ltmp767 # Offset: 1007
    000003f1: 	movq	0xc0(%rsp), %rax
    000003f9: 	leaq	0x1(%rax), %rsi
    000003fd: 	callq	_ZdlPvm@PLT # Offset: 1021
.Ltmp767:
    00000402: 	movq	0x70(%rsp), %rsi
    00000407: 	movq	0x60(%rsp), %rdi
    0000040c: 	leaq	DATAat0x171e6(%rip), %rdx
    00000413: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1043
    00000418: 	callq	clock@PLT # Offset: 1048
    0000041d: 	movl	iterations(%rip), %ecx
    00000423: 	movq	%rax, start_time(%rip)
    0000042a: 	testl	%ecx, %ecx
    0000042c: 	jle	.Ltmp768 # Offset: 1068
    00000432: 	movl	0x58(%rsp), %eax
    00000436: 	xorl	%r13d, %r13d
    00000439: 	leaq	DATAat0x171d6(%rip), %r15
    00000440: 	leal	(%rbp,%rax), %r14d
    00000445: 	addl	0x40(%rsp), %r14d
    0000044a: 	addl	0x50(%rsp), %r14d
    0000044f: 	movd	%r14d, %xmm5
    00000454: 	pshufd	$0x0, %xmm5, %xmm6
    00000459: 	movaps	%xmm6, (%rsp)
    0000045d: 	nopl	(%rax) # Size: 3
.Ltmp771:
    00000460: 	movq	%r12, %rax
    00000463: 	pxor	%xmm0, %xmm0
    00000467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp769:
    00000470: 	movdqa	(%rsp), %xmm1
    00000475: 	paddd	(%rax), %xmm1
    00000479: 	addq	$0x10, %rax
    0000047d: 	paddd	%xmm1, %xmm0
    00000481: 	cmpq	%rbx, %rax
    00000484: 	jne	.Ltmp769 # Offset: 1156
    00000486: 	cvttsd2si	init_value(%rip), %edi
    0000048e: 	pshufd	$0xff, %xmm0, %xmm1
    00000493: 	movd	%xmm1, %edx
    00000497: 	pshufd	$0x55, %xmm0, %xmm1
    0000049c: 	movd	%xmm1, %eax
    000004a0: 	movdqa	%xmm0, %xmm1
    000004a4: 	punpckhdq	%xmm0, %xmm1
    000004a8: 	addl	%eax, %edx
    000004aa: 	movd	%xmm0, %eax
    000004ae: 	addl	%r14d, %edi
    000004b1: 	movd	%xmm1, %esi
    000004b5: 	imull	$0x1f40, %edi, %edi
    000004bb: 	addl	%esi, %eax
    000004bd: 	subl	%edi, %edx
    000004bf: 	subl	%edi, %eax
    000004c1: 	addl	%eax, %edx
    000004c3: 	jne	.Ltmp770 # Offset: 1219
.Ltmp922:
    000004c9: 	addl	$0x1, %r13d
    000004cd: 	cmpl	%ecx, %r13d
    000004d0: 	jl	.Ltmp771 # Offset: 1232
.Ltmp768:
    000004d2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000004d9: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000004e0: 	subq	$0x20, %rax
    000004e4: 	cmpq	%rax, %r14
    000004e7: 	je	.Ltmp772 # Offset: 1255
    000004ed: 	leaq	0x10(%r14), %rdi
    000004f1: 	movq	0xb8(%rsp), %r13
    000004f9: 	movq	%rdi, (%r14)
    000004fc: 	movq	0xb0(%rsp), %r15
    00000504: 	movq	%r15, %rax
    00000507: 	addq	%r13, %rax
    0000050a: 	je	.Ltmp773 # Offset: 1290
    0000050c: 	testq	%r15, %r15
    0000050f: 	je	.Ltmp774 # Offset: 1295
.Ltmp773:
    00000515: 	movq	%r13, 0x88(%rsp)
    0000051d: 	cmpq	$0xf, %r13
    00000521: 	ja	.Ltmp775 # Offset: 1313
    00000527: 	cmpq	$0x1, %r13
    0000052b: 	jne	.Ltmp776 # Offset: 1323
    00000531: 	movzbl	(%r15), %eax
    00000535: 	movb	%al, 0x10(%r14)
.Ltmp972:
    00000539: 	movq	%r13, 0x8(%r14)
    0000053d: 	movb	$0x0, (%rdi,%r13)
    00000542: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000549: 	addq	$0x20, %rax
    0000054d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp939:
    00000554: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000055b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000562: 	je	.Ltmp777 # Offset: 1378
.Ltmp935:
    00000568: 	movq	-0x20(%rax), %r13
    0000056c: 	callq	clock@PLT # Offset: 1388
    00000571: 	pxor	%xmm0, %xmm0
    00000575: 	movq	%rax, end_time(%rip)
    0000057c: 	movq	%r13, %rdi
    0000057f: 	subq	start_time(%rip), %rax
    00000586: 	cvtsi2sd	%rax, %xmm0
    0000058b: 	divsd	DATAat0x17358(%rip), %xmm0
    00000593: 	callq	_Z13record_resultdPKc # Offset: 1427
    00000598: 	movq	0xb0(%rsp), %rdi
    000005a0: 	cmpq	0x68(%rsp), %rdi
    000005a5: 	je	.Ltmp778 # Offset: 1445
    000005a7: 	movq	0xc0(%rsp), %rax
    000005af: 	leaq	0x1(%rax), %rsi
    000005b3: 	callq	_ZdlPvm@PLT # Offset: 1459
.Ltmp778:
    000005b8: 	movq	0x70(%rsp), %rsi
    000005bd: 	movq	0x60(%rsp), %rdi
    000005c2: 	leaq	DATAat0x171fe(%rip), %rdx
    000005c9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1481
    000005ce: 	callq	clock@PLT # Offset: 1486
    000005d3: 	movl	iterations(%rip), %ecx
    000005d9: 	movq	%rax, start_time(%rip)
    000005e0: 	testl	%ecx, %ecx
    000005e2: 	jle	.Ltmp779 # Offset: 1506
    000005e8: 	movd	%ebp, %xmm4
    000005ec: 	xorl	%r13d, %r13d
    000005ef: 	leaq	DATAat0x171d6(%rip), %r14
    000005f6: 	pshufd	$0x0, %xmm4, %xmm6
    000005fb: 	movaps	%xmm6, (%rsp)
    000005ff: 	movd	0x50(%rsp), %xmm6
    00000605: 	pshufd	$0x0, %xmm6, %xmm5
    0000060a: 	movaps	%xmm5, 0x10(%rsp)
    0000060f: 	movd	0x40(%rsp), %xmm5
    00000615: 	pshufd	$0x0, %xmm5, %xmm4
    0000061a: 	movaps	%xmm4, 0x20(%rsp)
    0000061f: 	movd	0x58(%rsp), %xmm4
    00000625: 	pshufd	$0x0, %xmm4, %xmm6
    0000062a: 	movaps	%xmm6, 0x30(%rsp)
    0000062f: 	nop # Size: 1
.Ltmp782:
    00000630: 	movq	%r12, %rax
    00000633: 	pxor	%xmm1, %xmm1
    00000637: 	nopw	(%rax,%rax) # Size: 9
.Ltmp780:
    00000640: 	movdqa	(%rsp), %xmm0
    00000645: 	paddd	(%rax), %xmm0
    00000649: 	addq	$0x10, %rax
    0000064d: 	paddd	0x30(%rsp), %xmm0
    00000653: 	paddd	0x20(%rsp), %xmm0
    00000659: 	paddd	0x10(%rsp), %xmm0
    0000065f: 	paddd	%xmm0, %xmm1
    00000663: 	cmpq	%rbx, %rax
    00000666: 	jne	.Ltmp780 # Offset: 1638
    00000668: 	cvttsd2si	init_value(%rip), %edx
    00000670: 	pshufd	$0xff, %xmm1, %xmm0
    00000675: 	movd	%xmm0, %esi
    00000679: 	pshufd	$0x55, %xmm1, %xmm0
    0000067e: 	movd	%xmm0, %eax
    00000682: 	movdqa	%xmm1, %xmm0
    00000686: 	punpckhdq	%xmm1, %xmm0
    0000068a: 	addl	%eax, %esi
    0000068c: 	movd	%xmm1, %eax
    00000690: 	addl	%ebp, %edx
    00000692: 	addl	0x58(%rsp), %edx
    00000696: 	movd	%xmm0, %edi
    0000069a: 	addl	0x40(%rsp), %edx
    0000069e: 	addl	0x50(%rsp), %edx
    000006a2: 	addl	%edi, %eax
    000006a4: 	imull	$0x1f40, %edx, %edx
    000006aa: 	subl	%edx, %esi
    000006ac: 	subl	%edx, %eax
    000006ae: 	addl	%eax, %esi
    000006b0: 	jne	.Ltmp781 # Offset: 1712
.Ltmp921:
    000006b6: 	addl	$0x1, %r13d
    000006ba: 	cmpl	%ecx, %r13d
    000006bd: 	jl	.Ltmp782 # Offset: 1725
.Ltmp779:
    000006c3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000006ca: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000006d1: 	subq	$0x20, %rax
    000006d5: 	cmpq	%rax, %r14
    000006d8: 	je	.Ltmp783 # Offset: 1752
    000006de: 	leaq	0x10(%r14), %rdi
    000006e2: 	movq	0xb8(%rsp), %r13
    000006ea: 	movq	%rdi, (%r14)
    000006ed: 	movq	0xb0(%rsp), %r15
    000006f5: 	movq	%r15, %rax
    000006f8: 	addq	%r13, %rax
    000006fb: 	je	.Ltmp784 # Offset: 1787
    000006fd: 	testq	%r15, %r15
    00000700: 	je	.Ltmp785 # Offset: 1792
.Ltmp784:
    00000706: 	movq	%r13, 0x88(%rsp)
    0000070e: 	cmpq	$0xf, %r13
    00000712: 	ja	.Ltmp786 # Offset: 1810
    00000718: 	cmpq	$0x1, %r13
    0000071c: 	jne	.Ltmp787 # Offset: 1820
    00000722: 	movzbl	(%r15), %eax
    00000726: 	movb	%al, 0x10(%r14)
.Ltmp958:
    0000072a: 	movq	%r13, 0x8(%r14)
    0000072e: 	movb	$0x0, (%rdi,%r13)
    00000733: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000073a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000741: 	addq	$0x20, %rax
    00000745: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000074c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000753: 	je	.Ltmp788 # Offset: 1875
.Ltmp937:
    00000759: 	movq	-0x20(%rax), %r13
    0000075d: 	callq	clock@PLT # Offset: 1885
    00000762: 	pxor	%xmm0, %xmm0
    00000766: 	movq	%rax, end_time(%rip)
    0000076d: 	movq	%r13, %rdi
    00000770: 	subq	start_time(%rip), %rax
    00000777: 	cvtsi2sd	%rax, %xmm0
    0000077c: 	divsd	DATAat0x17358(%rip), %xmm0
    00000784: 	callq	_Z13record_resultdPKc # Offset: 1924
    00000789: 	movq	0xb0(%rsp), %rdi
    00000791: 	cmpq	0x68(%rsp), %rdi
    00000796: 	je	.Ltmp789 # Offset: 1942
    00000798: 	movq	0xc0(%rsp), %rax
    000007a0: 	leaq	0x1(%rax), %rsi
    000007a4: 	callq	_ZdlPvm@PLT # Offset: 1956
.Ltmp789:
    000007a9: 	movq	0x70(%rsp), %rsi
    000007ae: 	movq	0x60(%rsp), %rdi
    000007b3: 	leaq	DATAat0x17217(%rip), %rdx
    000007ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1978
    000007bf: 	callq	clock@PLT # Offset: 1983
    000007c4: 	movd	%ebp, %xmm5
    000007c8: 	xorl	%r13d, %r13d
    000007cb: 	movl	iterations(%rip), %ecx
    000007d1: 	pshufd	$0x0, %xmm5, %xmm6
    000007d6: 	movq	%rax, start_time(%rip)
    000007dd: 	leaq	DATAat0x171d6(%rip), %r14
    000007e4: 	movaps	%xmm6, (%rsp)
    000007e8: 	testl	%ecx, %ecx
    000007ea: 	jle	.Ltmp790 # Offset: 2026
    000007ec: 	nopl	(%rax) # Size: 4
.Ltmp793:
    000007f0: 	movq	%r12, %rax
    000007f3: 	pxor	%xmm0, %xmm0
    000007f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp791:
    00000800: 	paddd	(%rax), %xmm0
    00000804: 	addq	$0x10, %rax
    00000808: 	psubd	(%rsp), %xmm0
    0000080d: 	cmpq	%rbx, %rax
    00000810: 	jne	.Ltmp791 # Offset: 2064
    00000812: 	cvttsd2si	init_value(%rip), %edi
    0000081a: 	pshufd	$0xff, %xmm0, %xmm1
    0000081f: 	movd	%xmm1, %edx
    00000823: 	pshufd	$0x55, %xmm0, %xmm1
    00000828: 	movd	%xmm1, %eax
    0000082c: 	movdqa	%xmm0, %xmm1
    00000830: 	punpckhdq	%xmm0, %xmm1
    00000834: 	addl	%eax, %edx
    00000836: 	movd	%xmm0, %eax
    0000083a: 	subl	%ebp, %edi
    0000083c: 	movd	%xmm1, %esi
    00000840: 	imull	$0x1f40, %edi, %edi
    00000846: 	addl	%esi, %eax
    00000848: 	subl	%edi, %edx
    0000084a: 	subl	%edi, %eax
    0000084c: 	addl	%eax, %edx
    0000084e: 	jne	.Ltmp792 # Offset: 2126
.Ltmp925:
    00000854: 	addl	$0x1, %r13d
    00000858: 	cmpl	%ecx, %r13d
    0000085b: 	jl	.Ltmp793 # Offset: 2139
.Ltmp790:
    0000085d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000864: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000086b: 	subq	$0x20, %rax
    0000086f: 	cmpq	%rax, %r14
    00000872: 	je	.Ltmp794 # Offset: 2162
    00000878: 	leaq	0x10(%r14), %rdi
    0000087c: 	movq	0xb8(%rsp), %r13
    00000884: 	movq	%rdi, (%r14)
    00000887: 	movq	0xb0(%rsp), %r15
    0000088f: 	movq	%r15, %rax
    00000892: 	addq	%r13, %rax
    00000895: 	je	.Ltmp795 # Offset: 2197
    00000897: 	testq	%r15, %r15
    0000089a: 	je	.Ltmp796 # Offset: 2202
.Ltmp795:
    000008a0: 	movq	%r13, 0x88(%rsp)
    000008a8: 	cmpq	$0xf, %r13
    000008ac: 	ja	.Ltmp797 # Offset: 2220
    000008b2: 	cmpq	$0x1, %r13
    000008b6: 	jne	.Ltmp798 # Offset: 2230
    000008bc: 	movzbl	(%r15), %eax
    000008c0: 	movb	%al, 0x10(%r14)
.Ltmp963:
    000008c4: 	movq	%r13, 0x8(%r14)
    000008c8: 	movb	$0x0, (%rdi,%r13)
    000008cd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008d4: 	addq	$0x20, %rax
    000008d8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp947:
    000008df: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008ed: 	je	.Ltmp799 # Offset: 2285
.Ltmp946:
    000008f3: 	movq	-0x20(%rax), %r13
    000008f7: 	callq	clock@PLT # Offset: 2295
    000008fc: 	pxor	%xmm0, %xmm0
    00000900: 	movq	%rax, end_time(%rip)
    00000907: 	movq	%r13, %rdi
    0000090a: 	subq	start_time(%rip), %rax
    00000911: 	cvtsi2sd	%rax, %xmm0
    00000916: 	divsd	DATAat0x17358(%rip), %xmm0
    0000091e: 	callq	_Z13record_resultdPKc # Offset: 2334
    00000923: 	movq	0xb0(%rsp), %rdi
    0000092b: 	cmpq	0x68(%rsp), %rdi
    00000930: 	je	.Ltmp800 # Offset: 2352
    00000932: 	movq	0xc0(%rsp), %rax
    0000093a: 	leaq	0x1(%rax), %rsi
    0000093e: 	callq	_ZdlPvm@PLT # Offset: 2366
.Ltmp800:
    00000943: 	movq	0x70(%rsp), %rsi
    00000948: 	movq	0x60(%rsp), %rdi
    0000094d: 	leaq	DATAat0x1722a(%rip), %rdx
    00000954: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2388
    00000959: 	callq	clock@PLT # Offset: 2393
    0000095e: 	movl	iterations(%rip), %ecx
    00000964: 	movq	%rax, start_time(%rip)
    0000096b: 	testl	%ecx, %ecx
    0000096d: 	jle	.Ltmp801 # Offset: 2413
    00000973: 	movl	0x58(%rsp), %eax
    00000977: 	xorl	%r13d, %r13d
    0000097a: 	leaq	DATAat0x171d6(%rip), %r15
    00000981: 	leal	(%rbp,%rax), %r14d
    00000986: 	addl	0x40(%rsp), %r14d
    0000098b: 	addl	0x50(%rsp), %r14d
    00000990: 	movd	%r14d, %xmm5
    00000995: 	pshufd	$0x0, %xmm5, %xmm2
    0000099a: 	movaps	%xmm2, (%rsp)
    0000099e: 	nop # Size: 2
.Ltmp804:
    000009a0: 	movq	%r12, %rax
    000009a3: 	pxor	%xmm0, %xmm0
    000009a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp802:
    000009b0: 	paddd	(%rax), %xmm0
    000009b4: 	addq	$0x10, %rax
    000009b8: 	psubd	(%rsp), %xmm0
    000009bd: 	cmpq	%rbx, %rax
    000009c0: 	jne	.Ltmp802 # Offset: 2496
    000009c2: 	cvttsd2si	init_value(%rip), %edi
    000009ca: 	pshufd	$0xff, %xmm0, %xmm1
    000009cf: 	movd	%xmm1, %edx
    000009d3: 	pshufd	$0x55, %xmm0, %xmm1
    000009d8: 	movd	%xmm1, %eax
    000009dc: 	movdqa	%xmm0, %xmm1
    000009e0: 	punpckhdq	%xmm0, %xmm1
    000009e4: 	addl	%eax, %edx
    000009e6: 	movd	%xmm0, %eax
    000009ea: 	subl	%r14d, %edi
    000009ed: 	movd	%xmm1, %esi
    000009f1: 	imull	$0x1f40, %edi, %edi
    000009f7: 	addl	%esi, %eax
    000009f9: 	subl	%edi, %edx
    000009fb: 	subl	%edi, %eax
    000009fd: 	addl	%eax, %edx
    000009ff: 	jne	.Ltmp803 # Offset: 2559
.Ltmp924:
    00000a05: 	addl	$0x1, %r13d
    00000a09: 	cmpl	%ecx, %r13d
    00000a0c: 	jl	.Ltmp804 # Offset: 2572
.Ltmp801:
    00000a0e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a15: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000a1c: 	subq	$0x20, %rax
    00000a20: 	cmpq	%rax, %r14
    00000a23: 	je	.Ltmp805 # Offset: 2595
    00000a29: 	leaq	0x10(%r14), %rdi
    00000a2d: 	movq	0xb8(%rsp), %r13
    00000a35: 	movq	%rdi, (%r14)
    00000a38: 	movq	0xb0(%rsp), %r15
    00000a40: 	movq	%r15, %rax
    00000a43: 	addq	%r13, %rax
    00000a46: 	je	.Ltmp806 # Offset: 2630
    00000a48: 	testq	%r15, %r15
    00000a4b: 	je	.Ltmp807 # Offset: 2635
.Ltmp806:
    00000a51: 	movq	%r13, 0x88(%rsp)
    00000a59: 	cmpq	$0xf, %r13
    00000a5d: 	ja	.Ltmp808 # Offset: 2653
    00000a63: 	cmpq	$0x1, %r13
    00000a67: 	jne	.Ltmp809 # Offset: 2663
    00000a6d: 	movzbl	(%r15), %eax
    00000a71: 	movb	%al, 0x10(%r14)
.Ltmp976:
    00000a75: 	movq	%r13, 0x8(%r14)
    00000a79: 	movb	$0x0, (%rdi,%r13)
    00000a7e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a85: 	addq	$0x20, %rax
    00000a89: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp934:
    00000a90: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a97: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a9e: 	je	.Ltmp810 # Offset: 2718
.Ltmp933:
    00000aa4: 	movq	-0x20(%rax), %r13
    00000aa8: 	callq	clock@PLT # Offset: 2728
    00000aad: 	pxor	%xmm0, %xmm0
    00000ab1: 	movq	%rax, end_time(%rip)
    00000ab8: 	movq	%r13, %rdi
    00000abb: 	subq	start_time(%rip), %rax
    00000ac2: 	cvtsi2sd	%rax, %xmm0
    00000ac7: 	divsd	DATAat0x17358(%rip), %xmm0
    00000acf: 	callq	_Z13record_resultdPKc # Offset: 2767
    00000ad4: 	movq	0xb0(%rsp), %rdi
    00000adc: 	cmpq	0x68(%rsp), %rdi
    00000ae1: 	je	.Ltmp811 # Offset: 2785
    00000ae3: 	movq	0xc0(%rsp), %rax
    00000aeb: 	leaq	0x1(%rax), %rsi
    00000aef: 	callq	_ZdlPvm@PLT # Offset: 2799
.Ltmp811:
    00000af4: 	movq	0x70(%rsp), %rsi
    00000af9: 	movq	0x60(%rsp), %rdi
    00000afe: 	leaq	DATAat0x17247(%rip), %rdx
    00000b05: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2821
    00000b0a: 	callq	clock@PLT # Offset: 2826
    00000b0f: 	movl	iterations(%rip), %ecx
    00000b15: 	movq	%rax, start_time(%rip)
    00000b1c: 	testl	%ecx, %ecx
    00000b1e: 	jle	.Ltmp812 # Offset: 2846
    00000b24: 	movd	0x50(%rsp), %xmm2
    00000b2a: 	movd	%ebp, %xmm6
    00000b2e: 	xorl	%r13d, %r13d
    00000b31: 	leaq	DATAat0x171d6(%rip), %r14
    00000b38: 	pshufd	$0x0, %xmm6, %xmm7
    00000b3d: 	pshufd	$0x0, %xmm2, %xmm4
    00000b42: 	movaps	%xmm7, (%rsp)
    00000b46: 	movd	0x40(%rsp), %xmm7
    00000b4c: 	movaps	%xmm4, 0x10(%rsp)
    00000b51: 	movd	0x58(%rsp), %xmm4
    00000b57: 	pshufd	$0x0, %xmm7, %xmm5
    00000b5c: 	pshufd	$0x0, %xmm4, %xmm6
    00000b61: 	movaps	%xmm5, 0x20(%rsp)
    00000b66: 	movaps	%xmm6, 0x30(%rsp)
    00000b6b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp815:
    00000b70: 	movq	%r12, %rax
    00000b73: 	pxor	%xmm1, %xmm1
    00000b77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp813:
    00000b80: 	movdqa	(%rax), %xmm0
    00000b84: 	psubd	(%rsp), %xmm0
    00000b89: 	addq	$0x10, %rax
    00000b8d: 	psubd	0x30(%rsp), %xmm0
    00000b93: 	psubd	0x20(%rsp), %xmm0
    00000b99: 	psubd	0x10(%rsp), %xmm0
    00000b9f: 	paddd	%xmm0, %xmm1
    00000ba3: 	cmpq	%rax, %rbx
    00000ba6: 	jne	.Ltmp813 # Offset: 2982
    00000ba8: 	cvttsd2si	init_value(%rip), %edx
    00000bb0: 	pshufd	$0xff, %xmm1, %xmm0
    00000bb5: 	movd	%xmm0, %esi
    00000bb9: 	pshufd	$0x55, %xmm1, %xmm0
    00000bbe: 	movd	%xmm0, %eax
    00000bc2: 	movdqa	%xmm1, %xmm0
    00000bc6: 	punpckhdq	%xmm1, %xmm0
    00000bca: 	addl	%eax, %esi
    00000bcc: 	movd	%xmm1, %eax
    00000bd0: 	subl	%ebp, %edx
    00000bd2: 	subl	0x58(%rsp), %edx
    00000bd6: 	movd	%xmm0, %edi
    00000bda: 	subl	0x40(%rsp), %edx
    00000bde: 	subl	0x50(%rsp), %edx
    00000be2: 	addl	%edi, %eax
    00000be4: 	imull	$0x1f40, %edx, %edx
    00000bea: 	subl	%edx, %esi
    00000bec: 	subl	%edx, %eax
    00000bee: 	addl	%eax, %esi
    00000bf0: 	jne	.Ltmp814 # Offset: 3056
.Ltmp923:
    00000bf6: 	addl	$0x1, %r13d
    00000bfa: 	cmpl	%ecx, %r13d
    00000bfd: 	jl	.Ltmp815 # Offset: 3069
.Ltmp812:
    00000c03: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c0a: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000c11: 	subq	$0x20, %rax
    00000c15: 	cmpq	%rax, %r14
    00000c18: 	je	.Ltmp816 # Offset: 3096
    00000c1e: 	leaq	0x10(%r14), %rdi
    00000c22: 	movq	0xb8(%rsp), %r13
    00000c2a: 	movq	%rdi, (%r14)
    00000c2d: 	movq	0xb0(%rsp), %r15
    00000c35: 	movq	%r15, %rax
    00000c38: 	addq	%r13, %rax
    00000c3b: 	je	.Ltmp817 # Offset: 3131
    00000c3d: 	testq	%r15, %r15
    00000c40: 	je	.Ltmp818 # Offset: 3136
.Ltmp817:
    00000c46: 	movq	%r13, 0x88(%rsp)
    00000c4e: 	cmpq	$0xf, %r13
    00000c52: 	ja	.Ltmp819 # Offset: 3154
    00000c58: 	cmpq	$0x1, %r13
    00000c5c: 	jne	.Ltmp820 # Offset: 3164
    00000c62: 	movzbl	(%r15), %eax
    00000c66: 	movb	%al, 0x10(%r14)
.Ltmp960:
    00000c6a: 	movq	%r13, 0x8(%r14)
    00000c6e: 	movb	$0x0, (%rdi,%r13)
    00000c73: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c7a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c81: 	addq	$0x20, %rax
    00000c85: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c8c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000c93: 	je	.Ltmp821 # Offset: 3219
.Ltmp936:
    00000c99: 	movq	-0x20(%rax), %r13
    00000c9d: 	callq	clock@PLT # Offset: 3229
    00000ca2: 	pxor	%xmm0, %xmm0
    00000ca6: 	movq	%rax, end_time(%rip)
    00000cad: 	movq	%r13, %rdi
    00000cb0: 	subq	start_time(%rip), %rax
    00000cb7: 	cvtsi2sd	%rax, %xmm0
    00000cbc: 	divsd	DATAat0x17358(%rip), %xmm0
    00000cc4: 	callq	_Z13record_resultdPKc # Offset: 3268
    00000cc9: 	movq	0xb0(%rsp), %rdi
    00000cd1: 	cmpq	0x68(%rsp), %rdi
    00000cd6: 	je	.Ltmp822 # Offset: 3286
    00000cd8: 	movq	0xc0(%rsp), %rax
    00000ce0: 	leaq	0x1(%rax), %rsi
    00000ce4: 	callq	_ZdlPvm@PLT # Offset: 3300
.Ltmp822:
    00000ce9: 	movq	0x70(%rsp), %rsi
    00000cee: 	movq	0x60(%rsp), %rdi
    00000cf3: 	leaq	DATAat0x17265(%rip), %rdx
    00000cfa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3322
    00000cff: 	callq	clock@PLT # Offset: 3327
    00000d04: 	movd	%ebp, %xmm5
    00000d08: 	xorl	%r13d, %r13d
    00000d0b: 	movl	iterations(%rip), %ecx
    00000d11: 	pshufd	$0x0, %xmm5, %xmm6
    00000d16: 	movq	%rax, start_time(%rip)
    00000d1d: 	leaq	DATAat0x171d6(%rip), %r14
    00000d24: 	movaps	%xmm6, (%rsp)
    00000d28: 	testl	%ecx, %ecx
    00000d2a: 	jle	.Ltmp823 # Offset: 3370
.Ltmp826:
    00000d30: 	movdqa	(%rsp), %xmm3
    00000d35: 	movq	%r12, %rax
    00000d38: 	pxor	%xmm2, %xmm2
    00000d3c: 	psrlq	$0x20, %xmm3
    00000d41: 	nopl	(%rax) # Size: 7
.Ltmp824:
    00000d48: 	movdqa	(%rax), %xmm0
    00000d4c: 	movdqa	(%rsp), %xmm1
    00000d51: 	pmuludq	(%rax), %xmm1
    00000d55: 	pshufd	$0x8, %xmm1, %xmm1
    00000d5a: 	addq	$0x10, %rax
    00000d5e: 	psrlq	$0x20, %xmm0
    00000d63: 	pmuludq	%xmm3, %xmm0
    00000d67: 	pshufd	$0x8, %xmm0, %xmm0
    00000d6c: 	punpckldq	%xmm0, %xmm1
    00000d70: 	paddd	%xmm1, %xmm2
    00000d74: 	cmpq	%rbx, %rax
    00000d77: 	jne	.Ltmp824 # Offset: 3447
    00000d79: 	cvttsd2si	init_value(%rip), %edi
    00000d81: 	pshufd	$0xff, %xmm2, %xmm0
    00000d86: 	movd	%xmm0, %edx
    00000d8a: 	pshufd	$0x55, %xmm2, %xmm0
    00000d8f: 	movd	%xmm0, %eax
    00000d93: 	movdqa	%xmm2, %xmm0
    00000d97: 	punpckhdq	%xmm2, %xmm0
    00000d9b: 	addl	%eax, %edx
    00000d9d: 	movd	%xmm2, %eax
    00000da1: 	imull	%ebp, %edi
    00000da4: 	movd	%xmm0, %esi
    00000da8: 	addl	%esi, %eax
    00000daa: 	imull	$0x1f40, %edi, %edi
    00000db0: 	subl	%edi, %edx
    00000db2: 	subl	%edi, %eax
    00000db4: 	addl	%eax, %edx
    00000db6: 	jne	.Ltmp825 # Offset: 3510
.Ltmp931:
    00000dbc: 	addl	$0x1, %r13d
    00000dc0: 	cmpl	%ecx, %r13d
    00000dc3: 	jl	.Ltmp826 # Offset: 3523
.Ltmp823:
    00000dc9: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000dd0: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000dd7: 	subq	$0x20, %rax
    00000ddb: 	cmpq	%rax, %r14
    00000dde: 	je	.Ltmp827 # Offset: 3550
    00000de4: 	leaq	0x10(%r14), %rdi
    00000de8: 	movq	0xb8(%rsp), %r13
    00000df0: 	movq	%rdi, (%r14)
    00000df3: 	movq	0xb0(%rsp), %r15
    00000dfb: 	movq	%r15, %rax
    00000dfe: 	addq	%r13, %rax
    00000e01: 	je	.Ltmp828 # Offset: 3585
    00000e03: 	testq	%r15, %r15
    00000e06: 	je	.Ltmp829 # Offset: 3590
.Ltmp828:
    00000e0c: 	movq	%r13, 0x88(%rsp)
    00000e14: 	cmpq	$0xf, %r13
    00000e18: 	ja	.Ltmp830 # Offset: 3608
    00000e1e: 	cmpq	$0x1, %r13
    00000e22: 	jne	.Ltmp831 # Offset: 3618
    00000e28: 	movzbl	(%r15), %eax
    00000e2c: 	movb	%al, 0x10(%r14)
.Ltmp968:
    00000e30: 	movq	%r13, 0x8(%r14)
    00000e34: 	movb	$0x0, (%rdi,%r13)
    00000e39: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e40: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e47: 	addq	$0x20, %rax
    00000e4b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e52: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000e59: 	je	.Ltmp832 # Offset: 3673
.Ltmp932:
    00000e5f: 	movq	-0x20(%rax), %r13
    00000e63: 	callq	clock@PLT # Offset: 3683
    00000e68: 	pxor	%xmm0, %xmm0
    00000e6c: 	movq	%rax, end_time(%rip)
    00000e73: 	movq	%r13, %rdi
    00000e76: 	subq	start_time(%rip), %rax
    00000e7d: 	cvtsi2sd	%rax, %xmm0
    00000e82: 	divsd	DATAat0x17358(%rip), %xmm0
    00000e8a: 	callq	_Z13record_resultdPKc # Offset: 3722
    00000e8f: 	movq	0xb0(%rsp), %rdi
    00000e97: 	cmpq	0x68(%rsp), %rdi
    00000e9c: 	je	.Ltmp833 # Offset: 3740
    00000e9e: 	movq	0xc0(%rsp), %rax
    00000ea6: 	leaq	0x1(%rax), %rsi
    00000eaa: 	callq	_ZdlPvm@PLT # Offset: 3754
.Ltmp833:
    00000eaf: 	movq	0x70(%rsp), %rsi
    00000eb4: 	movq	0x60(%rsp), %rdi
    00000eb9: 	leaq	DATAat0x17278(%rip), %rdx
    00000ec0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3776
    00000ec5: 	callq	clock@PLT # Offset: 3781
    00000eca: 	movl	iterations(%rip), %ecx
    00000ed0: 	movq	%rax, start_time(%rip)
    00000ed7: 	testl	%ecx, %ecx
    00000ed9: 	jle	.Ltmp834 # Offset: 3801
    00000edf: 	movl	0x58(%rsp), %r14d
    00000ee4: 	xorl	%r13d, %r13d
    00000ee7: 	leaq	DATAat0x171d6(%rip), %r15
    00000eee: 	imull	%ebp, %r14d
    00000ef2: 	imull	0x40(%rsp), %r14d
    00000ef8: 	imull	0x50(%rsp), %r14d
    00000efe: 	movd	%r14d, %xmm5
    00000f03: 	pshufd	$0x0, %xmm5, %xmm2
    00000f08: 	movaps	%xmm2, (%rsp)
    00000f0c: 	nopl	(%rax) # Size: 4
.Ltmp837:
    00000f10: 	movdqa	(%rsp), %xmm3
    00000f15: 	movq	%r12, %rax
    00000f18: 	pxor	%xmm2, %xmm2
    00000f1c: 	psrlq	$0x20, %xmm3
    00000f21: 	nopl	(%rax) # Size: 7
.Ltmp835:
    00000f28: 	movdqa	(%rax), %xmm0
    00000f2c: 	movdqa	(%rsp), %xmm1
    00000f31: 	pmuludq	(%rax), %xmm1
    00000f35: 	pshufd	$0x8, %xmm1, %xmm1
    00000f3a: 	addq	$0x10, %rax
    00000f3e: 	psrlq	$0x20, %xmm0
    00000f43: 	pmuludq	%xmm3, %xmm0
    00000f47: 	pshufd	$0x8, %xmm0, %xmm0
    00000f4c: 	punpckldq	%xmm0, %xmm1
    00000f50: 	paddd	%xmm1, %xmm2
    00000f54: 	cmpq	%rbx, %rax
    00000f57: 	jne	.Ltmp835 # Offset: 3927
    00000f59: 	cvttsd2si	init_value(%rip), %edi
    00000f61: 	pshufd	$0xff, %xmm2, %xmm0
    00000f66: 	movd	%xmm0, %edx
    00000f6a: 	pshufd	$0x55, %xmm2, %xmm0
    00000f6f: 	movd	%xmm0, %eax
    00000f73: 	movdqa	%xmm2, %xmm0
    00000f77: 	punpckhdq	%xmm2, %xmm0
    00000f7b: 	addl	%eax, %edx
    00000f7d: 	movd	%xmm2, %eax
    00000f81: 	imull	%r14d, %edi
    00000f85: 	movd	%xmm0, %esi
    00000f89: 	addl	%esi, %eax
    00000f8b: 	imull	$0x1f40, %edi, %edi
    00000f91: 	subl	%edi, %edx
    00000f93: 	subl	%edi, %eax
    00000f95: 	addl	%eax, %edx
    00000f97: 	jne	.Ltmp836 # Offset: 3991
.Ltmp930:
    00000f9d: 	addl	$0x1, %r13d
    00000fa1: 	cmpl	%ecx, %r13d
    00000fa4: 	jl	.Ltmp837 # Offset: 4004
.Ltmp834:
    00000faa: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fb1: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000fb8: 	subq	$0x20, %rax
    00000fbc: 	cmpq	%rax, %r14
    00000fbf: 	je	.Ltmp838 # Offset: 4031
    00000fc5: 	leaq	0x10(%r14), %rdi
    00000fc9: 	movq	0xb8(%rsp), %r13
    00000fd1: 	movq	%rdi, (%r14)
    00000fd4: 	movq	0xb0(%rsp), %r15
    00000fdc: 	movq	%r15, %rax
    00000fdf: 	addq	%r13, %rax
    00000fe2: 	je	.Ltmp839 # Offset: 4066
    00000fe4: 	testq	%r15, %r15
    00000fe7: 	je	.Ltmp840 # Offset: 4071
.Ltmp839:
    00000fed: 	movq	%r13, 0x88(%rsp)
    00000ff5: 	cmpq	$0xf, %r13
    00000ff9: 	ja	.Ltmp841 # Offset: 4089
    00000fff: 	cmpq	$0x1, %r13
    00001003: 	jne	.Ltmp842 # Offset: 4099
    00001009: 	movzbl	(%r15), %eax
    0000100d: 	movb	%al, 0x10(%r14)
.Ltmp961:
    00001011: 	movq	%r13, 0x8(%r14)
    00001015: 	movb	$0x0, (%rdi,%r13)
    0000101a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001021: 	addq	$0x20, %rax
    00001025: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp949:
    0000102c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001033: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000103a: 	je	.Ltmp843 # Offset: 4154
.Ltmp948:
    00001040: 	movq	-0x20(%rax), %r13
    00001044: 	callq	clock@PLT # Offset: 4164
    00001049: 	pxor	%xmm0, %xmm0
    0000104d: 	movq	%rax, end_time(%rip)
    00001054: 	movq	%r13, %rdi
    00001057: 	subq	start_time(%rip), %rax
    0000105e: 	cvtsi2sd	%rax, %xmm0
    00001063: 	divsd	DATAat0x17358(%rip), %xmm0
    0000106b: 	callq	_Z13record_resultdPKc # Offset: 4203
    00001070: 	movq	0xb0(%rsp), %rdi
    00001078: 	cmpq	0x68(%rsp), %rdi
    0000107d: 	je	.Ltmp844 # Offset: 4221
    0000107f: 	movq	0xc0(%rsp), %rax
    00001087: 	leaq	0x1(%rax), %rsi
    0000108b: 	callq	_ZdlPvm@PLT # Offset: 4235
.Ltmp844:
    00001090: 	movq	0x70(%rsp), %rsi
    00001095: 	movq	0x60(%rsp), %rdi
    0000109a: 	leaq	DATAat0x17308(%rip), %rdx
    000010a1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4257
    000010a6: 	callq	clock@PLT # Offset: 4262
    000010ab: 	movl	iterations(%rip), %ecx
    000010b1: 	movq	%rax, start_time(%rip)
    000010b8: 	testl	%ecx, %ecx
    000010ba: 	jle	.Ltmp845 # Offset: 4282
    000010c0: 	movl	0x58(%rsp), %r14d
    000010c5: 	xorl	%r13d, %r13d
    000010c8: 	leaq	DATAat0x171d6(%rip), %r15
    000010cf: 	imull	%ebp, %r14d
    000010d3: 	imull	0x40(%rsp), %r14d
    000010d9: 	imull	0x50(%rsp), %r14d
    000010df: 	movd	%r14d, %xmm6
    000010e4: 	pshufd	$0x0, %xmm6, %xmm7
    000010e9: 	movaps	%xmm7, (%rsp)
    000010ed: 	nopl	(%rax) # Size: 3
.Ltmp848:
    000010f0: 	movq	%r12, %rax
    000010f3: 	pxor	%xmm0, %xmm0
    000010f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp846:
    00001100: 	movdqa	(%rsp), %xmm1
    00001105: 	paddd	(%rax), %xmm1
    00001109: 	addq	$0x10, %rax
    0000110d: 	paddd	%xmm1, %xmm0
    00001111: 	cmpq	%rbx, %rax
    00001114: 	jne	.Ltmp846 # Offset: 4372
    00001116: 	cvttsd2si	init_value(%rip), %edi
    0000111e: 	pshufd	$0xff, %xmm0, %xmm1
    00001123: 	movd	%xmm1, %edx
    00001127: 	pshufd	$0x55, %xmm0, %xmm1
    0000112c: 	movd	%xmm1, %eax
    00001130: 	movdqa	%xmm0, %xmm1
    00001134: 	punpckhdq	%xmm0, %xmm1
    00001138: 	addl	%eax, %edx
    0000113a: 	movd	%xmm0, %eax
    0000113e: 	addl	%r14d, %edi
    00001141: 	movd	%xmm1, %esi
    00001145: 	imull	$0x1f40, %edi, %edi
    0000114b: 	addl	%esi, %eax
    0000114d: 	subl	%edi, %edx
    0000114f: 	subl	%edi, %eax
    00001151: 	addl	%eax, %edx
    00001153: 	jne	.Ltmp847 # Offset: 4435
.Ltmp929:
    00001159: 	addl	$0x1, %r13d
    0000115d: 	cmpl	%ecx, %r13d
    00001160: 	jl	.Ltmp848 # Offset: 4448
.Ltmp845:
    00001162: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001169: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001170: 	subq	$0x20, %rax
    00001174: 	cmpq	%rax, %r14
    00001177: 	je	.Ltmp849 # Offset: 4471
    0000117d: 	leaq	0x10(%r14), %rdi
    00001181: 	movq	0xb8(%rsp), %r13
    00001189: 	movq	%rdi, (%r14)
    0000118c: 	movq	0xb0(%rsp), %r15
    00001194: 	movq	%r15, %rax
    00001197: 	addq	%r13, %rax
    0000119a: 	je	.Ltmp850 # Offset: 4506
    0000119c: 	testq	%r15, %r15
    0000119f: 	je	.Ltmp851 # Offset: 4511
.Ltmp850:
    000011a5: 	movq	%r13, 0x88(%rsp)
    000011ad: 	cmpq	$0xf, %r13
    000011b1: 	ja	.Ltmp852 # Offset: 4529
    000011b7: 	cmpq	$0x1, %r13
    000011bb: 	jne	.Ltmp853 # Offset: 4539
    000011c1: 	movzbl	(%r15), %eax
    000011c5: 	movb	%al, 0x10(%r14)
.Ltmp966:
    000011c9: 	movq	%r13, 0x8(%r14)
    000011cd: 	movb	$0x0, (%rdi,%r13)
    000011d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011e0: 	addq	$0x20, %rax
    000011e4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011eb: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000011f2: 	je	.Ltmp854 # Offset: 4594
.Ltmp945:
    000011f8: 	movq	-0x20(%rax), %r13
    000011fc: 	callq	clock@PLT # Offset: 4604
    00001201: 	pxor	%xmm0, %xmm0
    00001205: 	movq	%rax, end_time(%rip)
    0000120c: 	movq	%r13, %rdi
    0000120f: 	subq	start_time(%rip), %rax
    00001216: 	cvtsi2sd	%rax, %xmm0
    0000121b: 	divsd	DATAat0x17358(%rip), %xmm0
    00001223: 	callq	_Z13record_resultdPKc # Offset: 4643
    00001228: 	movq	0xb0(%rsp), %rdi
    00001230: 	cmpq	0x68(%rsp), %rdi
    00001235: 	je	.Ltmp855 # Offset: 4661
    00001237: 	movq	0xc0(%rsp), %rax
    0000123f: 	leaq	0x1(%rax), %rsi
    00001243: 	callq	_ZdlPvm@PLT # Offset: 4675
.Ltmp855:
    00001248: 	movq	0x70(%rsp), %rsi
    0000124d: 	movq	0x60(%rsp), %rdi
    00001252: 	leaq	DATAat0x17328(%rip), %rdx
    00001259: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4697
    0000125e: 	callq	clock@PLT # Offset: 4702
    00001263: 	movl	iterations(%rip), %ecx
    00001269: 	movq	%rax, start_time(%rip)
    00001270: 	testl	%ecx, %ecx
    00001272: 	jle	.Ltmp856 # Offset: 4722
    00001278: 	movd	0x50(%rsp), %xmm7
    0000127e: 	movd	%ebp, %xmm2
    00001282: 	xorl	%r13d, %r13d
    00001285: 	leaq	DATAat0x171d6(%rip), %r14
    0000128c: 	pshufd	$0x0, %xmm2, %xmm4
    00001291: 	pshufd	$0x0, %xmm7, %xmm5
    00001296: 	movaps	%xmm4, (%rsp)
    0000129a: 	movd	0x40(%rsp), %xmm4
    000012a0: 	movaps	%xmm5, 0x10(%rsp)
    000012a5: 	movd	0x58(%rsp), %xmm5
    000012ab: 	pshufd	$0x0, %xmm4, %xmm6
    000012b0: 	pshufd	$0x0, %xmm5, %xmm2
    000012b5: 	movaps	%xmm6, 0x20(%rsp)
    000012ba: 	movaps	%xmm2, 0x30(%rsp)
    000012bf: 	nop # Size: 1
.Ltmp859:
    000012c0: 	movdqa	(%rsp), %xmm6
    000012c5: 	movdqa	0x30(%rsp), %xmm5
    000012cb: 	movq	%r12, %rax
    000012ce: 	pxor	%xmm2, %xmm2
    000012d2: 	movdqa	0x20(%rsp), %xmm4
    000012d8: 	movdqa	0x10(%rsp), %xmm3
    000012de: 	psrlq	$0x20, %xmm6
    000012e3: 	psrlq	$0x20, %xmm5
    000012e8: 	psrlq	$0x20, %xmm4
    000012ed: 	psrlq	$0x20, %xmm3
    000012f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp857:
    000012f8: 	movdqa	(%rax), %xmm1
    000012fc: 	movdqa	(%rsp), %xmm0
    00001301: 	pmuludq	(%rax), %xmm0
    00001305: 	pshufd	$0x8, %xmm0, %xmm0
    0000130a: 	addq	$0x10, %rax
    0000130e: 	psrlq	$0x20, %xmm1
    00001313: 	pmuludq	%xmm6, %xmm1
    00001317: 	pshufd	$0x8, %xmm1, %xmm1
    0000131c: 	punpckldq	%xmm1, %xmm0
    00001320: 	movdqa	0x30(%rsp), %xmm1
    00001326: 	pmuludq	%xmm0, %xmm1
    0000132a: 	psrlq	$0x20, %xmm0
    0000132f: 	pmuludq	%xmm5, %xmm0
    00001333: 	pshufd	$0x8, %xmm1, %xmm1
    00001338: 	pshufd	$0x8, %xmm0, %xmm0
    0000133d: 	punpckldq	%xmm0, %xmm1
    00001341: 	movdqa	0x20(%rsp), %xmm0
    00001347: 	pmuludq	%xmm1, %xmm0
    0000134b: 	psrlq	$0x20, %xmm1
    00001350: 	pmuludq	%xmm4, %xmm1
    00001354: 	pshufd	$0x8, %xmm0, %xmm0
    00001359: 	pshufd	$0x8, %xmm1, %xmm1
    0000135e: 	punpckldq	%xmm1, %xmm0
    00001362: 	movdqa	0x10(%rsp), %xmm1
    00001368: 	pmuludq	%xmm0, %xmm1
    0000136c: 	psrlq	$0x20, %xmm0
    00001371: 	pmuludq	%xmm3, %xmm0
    00001375: 	pshufd	$0x8, %xmm1, %xmm1
    0000137a: 	pshufd	$0x8, %xmm0, %xmm0
    0000137f: 	punpckldq	%xmm0, %xmm1
    00001383: 	paddd	%xmm1, %xmm2
    00001387: 	cmpq	%rbx, %rax
    0000138a: 	jne	.Ltmp857 # Offset: 5002
    00001390: 	cvttsd2si	init_value(%rip), %edx
    00001398: 	pshufd	$0xff, %xmm2, %xmm0
    0000139d: 	movd	%xmm0, %esi
    000013a1: 	pshufd	$0x55, %xmm2, %xmm0
    000013a6: 	movd	%xmm0, %eax
    000013aa: 	movdqa	%xmm2, %xmm0
    000013ae: 	punpckhdq	%xmm2, %xmm0
    000013b2: 	addl	%eax, %esi
    000013b4: 	movd	%xmm2, %eax
    000013b8: 	imull	%ebp, %edx
    000013bb: 	movd	%xmm0, %edi
    000013bf: 	imull	0x58(%rsp), %edx
    000013c4: 	addl	%edi, %eax
    000013c6: 	imull	0x40(%rsp), %edx
    000013cb: 	imull	0x50(%rsp), %edx
    000013d0: 	imull	$0x1f40, %edx, %edx
    000013d6: 	subl	%edx, %esi
    000013d8: 	subl	%edx, %eax
    000013da: 	addl	%eax, %esi
    000013dc: 	jne	.Ltmp858 # Offset: 5084
.Ltmp928:
    000013e2: 	addl	$0x1, %r13d
    000013e6: 	cmpl	%ecx, %r13d
    000013e9: 	jl	.Ltmp859 # Offset: 5097
.Ltmp856:
    000013ef: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013f6: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000013fd: 	subq	$0x20, %rax
    00001401: 	cmpq	%rax, %r14
    00001404: 	je	.Ltmp860 # Offset: 5124
    0000140a: 	leaq	0x10(%r14), %rdi
    0000140e: 	movq	0xb8(%rsp), %r13
    00001416: 	movq	%rdi, (%r14)
    00001419: 	movq	0xb0(%rsp), %r15
    00001421: 	movq	%r15, %rax
    00001424: 	addq	%r13, %rax
    00001427: 	je	.Ltmp861 # Offset: 5159
    00001429: 	testq	%r15, %r15
    0000142c: 	je	.Ltmp862 # Offset: 5164
.Ltmp861:
    00001432: 	movq	%r13, 0x88(%rsp)
    0000143a: 	cmpq	$0xf, %r13
    0000143e: 	ja	.Ltmp863 # Offset: 5182
    00001444: 	cmpq	$0x1, %r13
    00001448: 	jne	.Ltmp864 # Offset: 5192
    0000144e: 	movzbl	(%r15), %eax
    00001452: 	movb	%al, 0x10(%r14)
.Ltmp955:
    00001456: 	movq	%r13, 0x8(%r14)
    0000145a: 	movb	$0x0, (%rdi,%r13)
    0000145f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001466: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000146d: 	addq	$0x20, %rax
    00001471: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001478: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000147f: 	je	.Ltmp865 # Offset: 5247
.Ltmp951:
    00001485: 	movq	-0x20(%rax), %r13
    00001489: 	callq	clock@PLT # Offset: 5257
    0000148e: 	pxor	%xmm0, %xmm0
    00001492: 	movq	%rax, end_time(%rip)
    00001499: 	movq	%r13, %rdi
    0000149c: 	subq	start_time(%rip), %rax
    000014a3: 	cvtsi2sd	%rax, %xmm0
    000014a8: 	divsd	DATAat0x17358(%rip), %xmm0
    000014b0: 	callq	_Z13record_resultdPKc # Offset: 5296
    000014b5: 	movq	0xb0(%rsp), %rdi
    000014bd: 	cmpq	0x68(%rsp), %rdi
    000014c2: 	je	.Ltmp866 # Offset: 5314
    000014c4: 	movq	0xc0(%rsp), %rax
    000014cc: 	leaq	0x1(%rax), %rsi
    000014d0: 	callq	_ZdlPvm@PLT # Offset: 5328
.Ltmp866:
    000014d5: 	movq	0x70(%rsp), %rsi
    000014da: 	movq	0x60(%rsp), %rdi
    000014df: 	leaq	DATAat0x17296(%rip), %rdx
    000014e6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5350
    000014eb: 	callq	clock@PLT # Offset: 5355
    000014f0: 	movl	iterations(%rip), %edi
    000014f6: 	xorl	%r13d, %r13d
    000014f9: 	leaq	DATAat0x171d6(%rip), %r14
    00001500: 	movq	%rax, start_time(%rip)
    00001507: 	testl	%edi, %edi
    00001509: 	jle	.Ltmp867 # Offset: 5385
    0000150b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp870:
    00001510: 	movq	%r12, %rcx
    00001513: 	xorl	%esi, %esi
    00001515: 	xorl	%r8d, %r8d
    00001518: 	nopl	(%rax,%rax) # Size: 8
.Ltmp868:
    00001520: 	movl	(%rcx), %eax
    00001522: 	addq	$0x8, %rcx
    00001526: 	cltd
    00001527: 	idivl	%ebp
    00001529: 	addl	%eax, %r8d
    0000152c: 	movl	-0x4(%rcx), %eax
    0000152f: 	cltd
    00001530: 	idivl	%ebp
    00001532: 	addl	%eax, %esi
    00001534: 	cmpq	%rbx, %rcx
    00001537: 	jne	.Ltmp868 # Offset: 5431
    00001539: 	cvttsd2si	init_value(%rip), %eax
    00001541: 	cltd
    00001542: 	idivl	%ebp
    00001544: 	imull	$0x1f40, %eax, %eax
    0000154a: 	subl	%eax, %esi
    0000154c: 	subl	%eax, %r8d
    0000154f: 	addl	%r8d, %esi
    00001552: 	jne	.Ltmp869 # Offset: 5458
.Ltmp927:
    00001558: 	addl	$0x1, %r13d
    0000155c: 	cmpl	%edi, %r13d
    0000155f: 	jl	.Ltmp870 # Offset: 5471
.Ltmp867:
    00001561: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001568: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000156f: 	subq	$0x20, %rax
    00001573: 	cmpq	%rax, %r14
    00001576: 	je	.Ltmp871 # Offset: 5494
    0000157c: 	leaq	0x10(%r14), %rdi
    00001580: 	movq	0xb8(%rsp), %r13
    00001588: 	movq	%rdi, (%r14)
    0000158b: 	movq	0xb0(%rsp), %r15
    00001593: 	movq	%r15, %rax
    00001596: 	addq	%r13, %rax
    00001599: 	je	.Ltmp872 # Offset: 5529
    0000159b: 	testq	%r15, %r15
    0000159e: 	je	.Ltmp873 # Offset: 5534
.Ltmp872:
    000015a4: 	movq	%r13, 0x88(%rsp)
    000015ac: 	cmpq	$0xf, %r13
    000015b0: 	ja	.Ltmp874 # Offset: 5552
    000015b6: 	cmpq	$0x1, %r13
    000015ba: 	jne	.Ltmp875 # Offset: 5562
    000015c0: 	movzbl	(%r15), %eax
    000015c4: 	movb	%al, 0x10(%r14)
.Ltmp954:
    000015c8: 	movq	%r13, 0x8(%r14)
    000015cc: 	movb	$0x0, (%rdi,%r13)
    000015d1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015df: 	addq	$0x20, %rax
    000015e3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000015ea: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000015f1: 	je	.Ltmp876 # Offset: 5617
.Ltmp950:
    000015f7: 	movq	-0x20(%rax), %r13
    000015fb: 	callq	clock@PLT # Offset: 5627
    00001600: 	pxor	%xmm0, %xmm0
    00001604: 	movq	%rax, end_time(%rip)
    0000160b: 	movq	%r13, %rdi
    0000160e: 	subq	start_time(%rip), %rax
    00001615: 	cvtsi2sd	%rax, %xmm0
    0000161a: 	divsd	DATAat0x17358(%rip), %xmm0
    00001622: 	callq	_Z13record_resultdPKc # Offset: 5666
    00001627: 	movq	0xb0(%rsp), %rdi
    0000162f: 	cmpq	0x68(%rsp), %rdi
    00001634: 	je	.Ltmp877 # Offset: 5684
    00001636: 	movq	0xc0(%rsp), %rax
    0000163e: 	leaq	0x1(%rax), %rsi
    00001642: 	callq	_ZdlPvm@PLT # Offset: 5698
.Ltmp877:
    00001647: 	movq	0x70(%rsp), %rsi
    0000164c: 	movq	0x60(%rsp), %rdi
    00001651: 	leaq	DATAat0x172a7(%rip), %rdx
    00001658: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5720
    0000165d: 	callq	clock@PLT # Offset: 5725
    00001662: 	movl	iterations(%rip), %ecx
    00001668: 	movq	%rax, start_time(%rip)
    0000166f: 	testl	%ecx, %ecx
    00001671: 	jle	.Ltmp878 # Offset: 5745
    00001677: 	movl	%ebp, %eax
    00001679: 	xorl	%r13d, %r13d
    0000167c: 	leaq	DATAat0x171d6(%rip), %r15
    00001683: 	cltd
    00001684: 	idivl	0x58(%rsp)
    00001688: 	cltd
    00001689: 	idivl	0x40(%rsp)
    0000168d: 	cltd
    0000168e: 	idivl	0x50(%rsp)
    00001692: 	movd	%eax, %xmm6
    00001696: 	movl	%eax, %r14d
    00001699: 	pshufd	$0x0, %xmm6, %xmm7
    0000169e: 	movaps	%xmm7, (%rsp)
    000016a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp881:
    000016a8: 	movq	%r12, %rax
    000016ab: 	pxor	%xmm0, %xmm0
    000016af: 	nop # Size: 1
.Ltmp879:
    000016b0: 	movdqa	(%rsp), %xmm1
    000016b5: 	paddd	(%rax), %xmm1
    000016b9: 	addq	$0x10, %rax
    000016bd: 	paddd	%xmm1, %xmm0
    000016c1: 	cmpq	%rax, %rbx
    000016c4: 	jne	.Ltmp879 # Offset: 5828
    000016c6: 	cvttsd2si	init_value(%rip), %edi
    000016ce: 	pshufd	$0xff, %xmm0, %xmm1
    000016d3: 	movd	%xmm1, %edx
    000016d7: 	pshufd	$0x55, %xmm0, %xmm1
    000016dc: 	movd	%xmm1, %eax
    000016e0: 	movdqa	%xmm0, %xmm1
    000016e4: 	punpckhdq	%xmm0, %xmm1
    000016e8: 	addl	%eax, %edx
    000016ea: 	movd	%xmm0, %eax
    000016ee: 	addl	%r14d, %edi
    000016f1: 	movd	%xmm1, %esi
    000016f5: 	imull	$0x1f40, %edi, %edi
    000016fb: 	addl	%esi, %eax
    000016fd: 	subl	%edi, %edx
    000016ff: 	subl	%edi, %eax
    00001701: 	addl	%eax, %edx
    00001703: 	jne	.Ltmp880 # Offset: 5891
.Ltmp926:
    00001709: 	addl	$0x1, %r13d
    0000170d: 	cmpl	%ecx, %r13d
    00001710: 	jl	.Ltmp881 # Offset: 5904
.Ltmp878:
    00001712: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001719: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001720: 	subq	$0x20, %rax
    00001724: 	cmpq	%rax, %r14
    00001727: 	je	.Ltmp882 # Offset: 5927
    0000172d: 	leaq	0x10(%r14), %rdi
    00001731: 	movq	0xb8(%rsp), %r13
    00001739: 	movq	%rdi, (%r14)
    0000173c: 	movq	0xb0(%rsp), %r15
    00001744: 	movq	%r15, %rax
    00001747: 	addq	%r13, %rax
    0000174a: 	je	.Ltmp883 # Offset: 5962
    0000174c: 	testq	%r15, %r15
    0000174f: 	je	.Ltmp884 # Offset: 5967
.Ltmp883:
    00001755: 	movq	%r13, 0x88(%rsp)
    0000175d: 	cmpq	$0xf, %r13
    00001761: 	ja	.Ltmp885 # Offset: 5985
    00001767: 	cmpq	$0x1, %r13
    0000176b: 	jne	.Ltmp886 # Offset: 5995
    00001771: 	movzbl	(%r15), %eax
    00001775: 	movb	%al, 0x10(%r14)
.Ltmp957:
    00001779: 	movq	%r13, 0x8(%r14)
    0000177d: 	movb	$0x0, (%rdi,%r13)
    00001782: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001789: 	addq	$0x20, %rax
    0000178d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp953:
    00001794: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000179b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017a2: 	je	.Ltmp887 # Offset: 6050
.Ltmp952:
    000017a8: 	movq	-0x20(%rax), %r13
    000017ac: 	callq	clock@PLT # Offset: 6060
    000017b1: 	pxor	%xmm0, %xmm0
    000017b5: 	movq	%rax, end_time(%rip)
    000017bc: 	movq	%r13, %rdi
    000017bf: 	subq	start_time(%rip), %rax
    000017c6: 	cvtsi2sd	%rax, %xmm0
    000017cb: 	divsd	DATAat0x17358(%rip), %xmm0
    000017d3: 	callq	_Z13record_resultdPKc # Offset: 6099
    000017d8: 	movq	0xb0(%rsp), %rdi
    000017e0: 	cmpq	0x68(%rsp), %rdi
    000017e5: 	je	.Ltmp888 # Offset: 6117
    000017e7: 	movq	0xc0(%rsp), %rax
    000017ef: 	leaq	0x1(%rax), %rsi
    000017f3: 	callq	_ZdlPvm@PLT # Offset: 6131
.Ltmp888:
    000017f8: 	movq	0x70(%rsp), %rsi
    000017fd: 	movq	0x60(%rsp), %rdi
    00001802: 	leaq	DATAat0x172c3(%rip), %rdx
    00001809: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6153
    0000180e: 	callq	clock@PLT # Offset: 6158
    00001813: 	movl	iterations(%rip), %ecx
    00001819: 	movq	%rax, start_time(%rip)
    00001820: 	testl	%ecx, %ecx
    00001822: 	jle	.Ltmp889 # Offset: 6178
    00001828: 	movl	0x40(%rsp), %eax
    0000182c: 	imull	0x58(%rsp), %eax
    00001831: 	movl	%ebp, %r14d
    00001834: 	xorl	%r13d, %r13d
    00001837: 	leaq	DATAat0x171d6(%rip), %r15
    0000183e: 	cltd
    0000183f: 	idivl	0x50(%rsp)
    00001843: 	subl	%eax, %r14d
    00001846: 	movd	%r14d, %xmm2
    0000184b: 	pshufd	$0x0, %xmm2, %xmm4
    00001850: 	movaps	%xmm4, (%rsp)
    00001854: 	nopl	(%rax) # Size: 4
.Ltmp892:
    00001858: 	movq	%r12, %rax
    0000185b: 	pxor	%xmm0, %xmm0
    0000185f: 	nop # Size: 1
.Ltmp890:
    00001860: 	movdqa	(%rsp), %xmm1
    00001865: 	paddd	(%rax), %xmm1
    00001869: 	addq	$0x10, %rax
    0000186d: 	paddd	%xmm1, %xmm0
    00001871: 	cmpq	%rbx, %rax
    00001874: 	jne	.Ltmp890 # Offset: 6260
    00001876: 	cvttsd2si	init_value(%rip), %edi
    0000187e: 	pshufd	$0xff, %xmm0, %xmm1
    00001883: 	movd	%xmm1, %edx
    00001887: 	pshufd	$0x55, %xmm0, %xmm1
    0000188c: 	movd	%xmm1, %eax
    00001890: 	movdqa	%xmm0, %xmm1
    00001894: 	punpckhdq	%xmm0, %xmm1
    00001898: 	addl	%eax, %edx
    0000189a: 	movd	%xmm0, %eax
    0000189e: 	addl	%r14d, %edi
    000018a1: 	movd	%xmm1, %esi
    000018a5: 	imull	$0x1f40, %edi, %edi
    000018ab: 	addl	%esi, %eax
    000018ad: 	subl	%edi, %edx
    000018af: 	subl	%edi, %eax
    000018b1: 	addl	%eax, %edx
    000018b3: 	jne	.Ltmp891 # Offset: 6323
.Ltmp920:
    000018b9: 	addl	$0x1, %r13d
    000018bd: 	cmpl	%ecx, %r13d
    000018c0: 	jl	.Ltmp892 # Offset: 6336
.Ltmp889:
    000018c2: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000018c9: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000018d0: 	subq	$0x20, %rax
    000018d4: 	cmpq	%rax, %r14
    000018d7: 	je	.Ltmp893 # Offset: 6359
    000018dd: 	leaq	0x10(%r14), %rdi
    000018e1: 	movq	0xb8(%rsp), %r13
    000018e9: 	movq	%rdi, (%r14)
    000018ec: 	movq	0xb0(%rsp), %r15
    000018f4: 	movq	%r15, %rax
    000018f7: 	addq	%r13, %rax
    000018fa: 	je	.Ltmp894 # Offset: 6394
    000018fc: 	testq	%r15, %r15
    000018ff: 	je	.Ltmp895 # Offset: 6399
.Ltmp894:
    00001905: 	movq	%r13, 0x88(%rsp)
    0000190d: 	cmpq	$0xf, %r13
    00001911: 	ja	.Ltmp896 # Offset: 6417
    00001917: 	cmpq	$0x1, %r13
    0000191b: 	jne	.Ltmp897 # Offset: 6427
    00001921: 	movzbl	(%r15), %eax
    00001925: 	movb	%al, 0x10(%r14)
.Ltmp974:
    00001929: 	movq	%r13, 0x8(%r14)
    0000192d: 	movb	$0x0, (%rdi,%r13)
    00001932: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001939: 	addq	$0x20, %rax
    0000193d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp942:
    00001944: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000194b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001952: 	je	.Ltmp898 # Offset: 6482
.Ltmp941:
    00001958: 	movq	-0x20(%rax), %r13
    0000195c: 	callq	clock@PLT # Offset: 6492
    00001961: 	pxor	%xmm0, %xmm0
    00001965: 	movq	%rax, end_time(%rip)
    0000196c: 	movq	%r13, %rdi
    0000196f: 	subq	start_time(%rip), %rax
    00001976: 	cvtsi2sd	%rax, %xmm0
    0000197b: 	divsd	DATAat0x17358(%rip), %xmm0
    00001983: 	callq	_Z13record_resultdPKc # Offset: 6531
    00001988: 	movq	0xb0(%rsp), %rdi
    00001990: 	cmpq	0x68(%rsp), %rdi
    00001995: 	je	.Ltmp899 # Offset: 6549
    00001997: 	movq	0xc0(%rsp), %rax
    0000199f: 	leaq	0x1(%rax), %rsi
    000019a3: 	callq	_ZdlPvm@PLT # Offset: 6563
.Ltmp899:
    000019a8: 	movq	0x70(%rsp), %rsi
    000019ad: 	movq	0x60(%rsp), %rdi
    000019b2: 	leaq	DATAat0x172dc(%rip), %rdx
    000019b9: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6585
    000019be: 	callq	clock@PLT # Offset: 6590
    000019c3: 	movl	iterations(%rip), %ecx
    000019c9: 	movq	%rax, start_time(%rip)
    000019d0: 	testl	%ecx, %ecx
    000019d2: 	jle	.Ltmp900 # Offset: 6610
    000019d8: 	movl	0x40(%rsp), %eax
    000019dc: 	imull	0x58(%rsp), %eax
    000019e1: 	movd	%ebp, %xmm7
    000019e5: 	xorl	%r14d, %r14d
    000019e8: 	pshufd	$0x0, %xmm7, %xmm5
    000019ed: 	leaq	DATAat0x171d6(%rip), %r15
    000019f4: 	movaps	%xmm5, (%rsp)
    000019f8: 	cltd
    000019f9: 	idivl	0x50(%rsp)
    000019fd: 	movd	%eax, %xmm4
    00001a01: 	movl	%eax, %r13d
    00001a04: 	pshufd	$0x0, %xmm4, %xmm6
    00001a09: 	movaps	%xmm6, 0x10(%rsp)
    00001a0e: 	nop # Size: 2
.Ltmp903:
    00001a10: 	movq	%r12, %rax
    00001a13: 	pxor	%xmm1, %xmm1
    00001a17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp901:
    00001a20: 	movdqa	(%rsp), %xmm0
    00001a25: 	paddd	(%rax), %xmm0
    00001a29: 	addq	$0x10, %rax
    00001a2d: 	psubd	0x10(%rsp), %xmm0
    00001a33: 	paddd	%xmm0, %xmm1
    00001a37: 	cmpq	%rbx, %rax
    00001a3a: 	jne	.Ltmp901 # Offset: 6714
    00001a3c: 	cvttsd2si	init_value(%rip), %esi
    00001a44: 	pshufd	$0xff, %xmm1, %xmm0
    00001a49: 	movd	%xmm0, %edx
    00001a4d: 	pshufd	$0x55, %xmm1, %xmm0
    00001a52: 	movd	%xmm0, %eax
    00001a56: 	movdqa	%xmm1, %xmm0
    00001a5a: 	punpckhdq	%xmm1, %xmm0
    00001a5e: 	addl	%eax, %edx
    00001a60: 	movd	%xmm1, %eax
    00001a64: 	addl	%ebp, %esi
    00001a66: 	movd	%xmm0, %edi
    00001a6a: 	subl	%r13d, %esi
    00001a6d: 	addl	%edi, %eax
    00001a6f: 	imull	$0x1f40, %esi, %esi
    00001a75: 	subl	%esi, %edx
    00001a77: 	subl	%esi, %eax
    00001a79: 	addl	%eax, %edx
    00001a7b: 	jne	.Ltmp902 # Offset: 6779
.Ltmp919:
    00001a81: 	addl	$0x1, %r14d
    00001a85: 	cmpl	%ecx, %r14d
    00001a88: 	jl	.Ltmp903 # Offset: 6792
.Ltmp900:
    00001a8a: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001a91: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001a98: 	subq	$0x20, %rax
    00001a9c: 	cmpq	%rax, %rbx
    00001a9f: 	je	.Ltmp904 # Offset: 6815
    00001aa5: 	leaq	0x10(%rbx), %rdi
    00001aa9: 	movq	0xb8(%rsp), %r12
    00001ab1: 	movq	%rdi, (%rbx)
    00001ab4: 	movq	0xb0(%rsp), %rbp
    00001abc: 	movq	%rbp, %rax
    00001abf: 	addq	%r12, %rax
    00001ac2: 	je	.Ltmp905 # Offset: 6850
    00001ac4: 	testq	%rbp, %rbp
    00001ac7: 	je	.Ltmp906 # Offset: 6855
.Ltmp905:
    00001acd: 	movq	%r12, 0x88(%rsp)
    00001ad5: 	cmpq	$0xf, %r12
    00001ad9: 	ja	.Ltmp907 # Offset: 6873
    00001adf: 	cmpq	$0x1, %r12
    00001ae3: 	jne	.Ltmp908 # Offset: 6883
    00001ae9: 	movzbl	(%rbp), %eax
    00001aed: 	movb	%al, 0x10(%rbx)
.Ltmp970:
    00001af0: 	movq	%r12, 0x8(%rbx)
    00001af4: 	movb	$0x0, (%rdi,%r12)
    00001af9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b00: 	addq	$0x20, %rax
    00001b04: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp944:
    00001b0b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b12: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b19: 	je	.Ltmp909 # Offset: 6937
.Ltmp943:
    00001b1f: 	movq	-0x20(%rax), %rbp
    00001b23: 	callq	clock@PLT # Offset: 6947
    00001b28: 	pxor	%xmm0, %xmm0
    00001b2c: 	movq	%rax, end_time(%rip)
    00001b33: 	movq	%rbp, %rdi
    00001b36: 	subq	start_time(%rip), %rax
    00001b3d: 	cvtsi2sd	%rax, %xmm0
    00001b42: 	divsd	DATAat0x17358(%rip), %xmm0
    00001b4a: 	callq	_Z13record_resultdPKc # Offset: 6986
    00001b4f: 	movq	0xb0(%rsp), %rdi
    00001b57: 	cmpq	0x68(%rsp), %rdi
    00001b5c: 	je	.Ltmp910 # Offset: 7004
    00001b5e: 	movq	0xc0(%rsp), %rax
    00001b66: 	leaq	0x1(%rax), %rsi
    00001b6a: 	callq	_ZdlPvm@PLT # Offset: 7018
.Ltmp910:
    00001b6f: 	movq	0x70(%rsp), %rsi
    00001b74: 	movq	0x60(%rsp), %rdi
    00001b79: 	leaq	DATAat0x172f6(%rip), %rdx
    00001b80: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7040
    00001b85: 	movl	iterations(%rip), %edx
    00001b8b: 	xorl	%r8d, %r8d
    00001b8e: 	xorl	%ecx, %ecx
    00001b90: 	movl	$0x1f40, %esi
    00001b95: 	movq	0xb0(%rsp), %rdi
    00001b9d: 	callq	_Z9summarizePKciiii # Offset: 7069
    00001ba2: 	movq	0xb0(%rsp), %rdi
    00001baa: 	cmpq	0x68(%rsp), %rdi
    00001baf: 	je	.Ltmp911 # Offset: 7087
    00001bb1: 	movq	0xc0(%rsp), %rax
    00001bb9: 	leaq	0x1(%rax), %rsi
    00001bbd: 	callq	_ZdlPvm@PLT # Offset: 7101
.Ltmp911:
    00001bc2: 	movq	0x90(%rsp), %rdi
    00001bca: 	cmpq	0x78(%rsp), %rdi
    00001bcf: 	je	.Ltmp912 # Offset: 7119
    00001bd1: 	movq	0xa0(%rsp), %rax
    00001bd9: 	leaq	0x1(%rax), %rsi
    00001bdd: 	callq	_ZdlPvm@PLT # Offset: 7133
.Ltmp912:
    00001be2: 	movq	0xfad8(%rsp), %rax
    00001bea: 	subq	%fs:0x28, %rax
    00001bf3: 	jne	.Ltmp913 # Offset: 7155
    00001bf9: 	addq	$0xfae8, %rsp
    00001c00: 	popq	%rbx
    00001c01: 	popq	%rbp
    00001c02: 	popq	%r12
    00001c04: 	popq	%r13
    00001c06: 	popq	%r14
    00001c08: 	popq	%r15
    00001c0a: 	retq # Offset: 7178
    00001c0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp914:
    00001c10: 	addq	$0x20, %rbp
.Ltmp747:
    00001c14: 	cmpq	%rbp, (%rsp)
    00001c18: 	je	.Ltmp751 # Offset: 7192
.Ltmp915:
    00001c1e: 	movq	(%rbp), %rdi
    00001c22: 	leaq	0x10(%rbp), %rax
    00001c26: 	cmpq	%rax, %rdi
    00001c29: 	je	.Ltmp914 # Offset: 7209
    00001c2b: 	movq	0x10(%rbp), %rax
    00001c2f: 	addq	$0x20, %rbp
    00001c33: 	leaq	0x1(%rax), %rsi
    00001c37: 	callq	_ZdlPvm@PLT # Offset: 7223
    00001c3c: 	cmpq	%rbp, (%rsp)
    00001c40: 	jne	.Ltmp915 # Offset: 7232
    00001c42: 	jmp	.Ltmp751 # Offset: 7234
    00001c47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp743:
    00001c50: 	addq	$0x20, %rbp
    00001c54: 	cmpq	%rbx, %rbp
    00001c57: 	jne	.Ltmp744 # Offset: 7255
    00001c5d: 	addq	$0x8, %r13
    00001c61: 	cmpq	%r13, %r15
    00001c64: 	ja	.Ltmp745 # Offset: 7268
    00001c6a: 	jmp	.Ltmp916 # Offset: 7274
    00001c6f: 	nop # Size: 1
.Ltmp759:
    00001c70: 	movl	current_test(%rip), %edx
    00001c76: 	movq	%r14, %rsi
    00001c79: 	movl	$0x1, %edi
    00001c7e: 	xorl	%eax, %eax
    00001c80: 	callq	__printf_chk@PLT # Offset: 7296
    00001c85: 	movl	iterations(%rip), %ecx
    00001c8b: 	jmp	.Ltmp917 # Offset: 7307
.Ltmp764:
    00001c90: 	leaq	0x88(%rsp), %rsi
    00001c98: 	xorl	%edx, %edx
    00001c9a: 	movq	%r14, %rdi
    00001c9d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7325
    00001ca2: 	movq	%rax, (%r14)
    00001ca5: 	movq	%rax, %rdi
    00001ca8: 	movq	0x88(%rsp), %rax
    00001cb0: 	movq	%rax, 0x10(%r14)
.Ltmp965:
    00001cb4: 	movq	%r13, %rdx
    00001cb7: 	movq	%r15, %rsi
    00001cba: 	callq	memcpy@PLT # Offset: 7354
    00001cbf: 	movq	0x88(%rsp), %r13
    00001cc7: 	movq	(%r14), %rdi
    00001cca: 	jmp	.Ltmp918 # Offset: 7370
    00001ccf: 	nop # Size: 1
.Ltmp902:
    00001cd0: 	movl	current_test(%rip), %edx
    00001cd6: 	movq	%r15, %rsi
    00001cd9: 	movl	$0x1, %edi
    00001cde: 	xorl	%eax, %eax
    00001ce0: 	callq	__printf_chk@PLT # Offset: 7392
    00001ce5: 	movl	iterations(%rip), %ecx
    00001ceb: 	jmp	.Ltmp919 # Offset: 7403
.Ltmp891:
    00001cf0: 	movl	current_test(%rip), %edx
    00001cf6: 	movq	%r15, %rsi
    00001cf9: 	movl	$0x1, %edi
    00001cfe: 	xorl	%eax, %eax
    00001d00: 	callq	__printf_chk@PLT # Offset: 7424
    00001d05: 	movl	iterations(%rip), %ecx
    00001d0b: 	jmp	.Ltmp920 # Offset: 7435
.Ltmp781:
    00001d10: 	movl	current_test(%rip), %edx
    00001d16: 	movq	%r14, %rsi
    00001d19: 	movl	$0x1, %edi
    00001d1e: 	xorl	%eax, %eax
    00001d20: 	callq	__printf_chk@PLT # Offset: 7456
    00001d25: 	movl	iterations(%rip), %ecx
    00001d2b: 	jmp	.Ltmp921 # Offset: 7467
.Ltmp770:
    00001d30: 	movl	current_test(%rip), %edx
    00001d36: 	movq	%r15, %rsi
    00001d39: 	movl	$0x1, %edi
    00001d3e: 	xorl	%eax, %eax
    00001d40: 	callq	__printf_chk@PLT # Offset: 7488
    00001d45: 	movl	iterations(%rip), %ecx
    00001d4b: 	jmp	.Ltmp922 # Offset: 7499
.Ltmp814:
    00001d50: 	movl	current_test(%rip), %edx
    00001d56: 	movq	%r14, %rsi
    00001d59: 	movl	$0x1, %edi
    00001d5e: 	xorl	%eax, %eax
    00001d60: 	callq	__printf_chk@PLT # Offset: 7520
    00001d65: 	movl	iterations(%rip), %ecx
    00001d6b: 	jmp	.Ltmp923 # Offset: 7531
.Ltmp803:
    00001d70: 	movl	current_test(%rip), %edx
    00001d76: 	movq	%r15, %rsi
    00001d79: 	movl	$0x1, %edi
    00001d7e: 	xorl	%eax, %eax
    00001d80: 	callq	__printf_chk@PLT # Offset: 7552
    00001d85: 	movl	iterations(%rip), %ecx
    00001d8b: 	jmp	.Ltmp924 # Offset: 7563
.Ltmp792:
    00001d90: 	movl	current_test(%rip), %edx
    00001d96: 	movq	%r14, %rsi
    00001d99: 	movl	$0x1, %edi
    00001d9e: 	xorl	%eax, %eax
    00001da0: 	callq	__printf_chk@PLT # Offset: 7584
    00001da5: 	movl	iterations(%rip), %ecx
    00001dab: 	jmp	.Ltmp925 # Offset: 7595
.Ltmp880:
    00001db0: 	movl	current_test(%rip), %edx
    00001db6: 	movq	%r15, %rsi
    00001db9: 	movl	$0x1, %edi
    00001dbe: 	xorl	%eax, %eax
    00001dc0: 	callq	__printf_chk@PLT # Offset: 7616
    00001dc5: 	movl	iterations(%rip), %ecx
    00001dcb: 	jmp	.Ltmp926 # Offset: 7627
.Ltmp869:
    00001dd0: 	movl	current_test(%rip), %edx
    00001dd6: 	movq	%r14, %rsi
    00001dd9: 	movl	$0x1, %edi
    00001dde: 	xorl	%eax, %eax
    00001de0: 	callq	__printf_chk@PLT # Offset: 7648
    00001de5: 	movl	iterations(%rip), %edi
    00001deb: 	jmp	.Ltmp927 # Offset: 7659
.Ltmp858:
    00001df0: 	movl	current_test(%rip), %edx
    00001df6: 	movq	%r14, %rsi
    00001df9: 	movl	$0x1, %edi
    00001dfe: 	xorl	%eax, %eax
    00001e00: 	callq	__printf_chk@PLT # Offset: 7680
    00001e05: 	movl	iterations(%rip), %ecx
    00001e0b: 	jmp	.Ltmp928 # Offset: 7691
.Ltmp847:
    00001e10: 	movl	current_test(%rip), %edx
    00001e16: 	movq	%r15, %rsi
    00001e19: 	movl	$0x1, %edi
    00001e1e: 	xorl	%eax, %eax
    00001e20: 	callq	__printf_chk@PLT # Offset: 7712
    00001e25: 	movl	iterations(%rip), %ecx
    00001e2b: 	jmp	.Ltmp929 # Offset: 7723
.Ltmp836:
    00001e30: 	movl	current_test(%rip), %edx
    00001e36: 	movq	%r15, %rsi
    00001e39: 	movl	$0x1, %edi
    00001e3e: 	xorl	%eax, %eax
    00001e40: 	callq	__printf_chk@PLT # Offset: 7744
    00001e45: 	movl	iterations(%rip), %ecx
    00001e4b: 	jmp	.Ltmp930 # Offset: 7755
.Ltmp825:
    00001e50: 	movl	current_test(%rip), %edx
    00001e56: 	movq	%r14, %rsi
    00001e59: 	movl	$0x1, %edi
    00001e5e: 	xorl	%eax, %eax
    00001e60: 	callq	__printf_chk@PLT # Offset: 7776
    00001e65: 	movl	iterations(%rip), %ecx
    00001e6b: 	jmp	.Ltmp931 # Offset: 7787
.Ltmp827:
    00001e70: 	movq	0x60(%rsp), %rsi
    00001e75: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001e7c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7804
    00001e81: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e88: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001e8f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e96: 	jne	.Ltmp932 # Offset: 7830
.Ltmp832:
    00001e9c: 	movq	-0x8(%rdx), %rax
    00001ea0: 	addq	$0x200, %rax
    00001ea6: 	jmp	.Ltmp932 # Offset: 7846
.Ltmp810:
    00001eab: 	movq	-0x8(%rdx), %rax
    00001eaf: 	addq	$0x200, %rax
    00001eb5: 	jmp	.Ltmp933 # Offset: 7861
.Ltmp805:
    00001eba: 	movq	0x60(%rsp), %rsi
    00001ebf: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ec6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7878
    00001ecb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ed2: 	jmp	.Ltmp934 # Offset: 7890
.Ltmp777:
    00001ed7: 	movq	-0x8(%rdx), %rax
    00001edb: 	addq	$0x200, %rax
    00001ee1: 	jmp	.Ltmp935 # Offset: 7905
.Ltmp816:
    00001ee6: 	movq	0x60(%rsp), %rsi
    00001eeb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ef2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7922
    00001ef7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001efe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001f05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f0c: 	jne	.Ltmp936 # Offset: 7948
.Ltmp821:
    00001f12: 	movq	-0x8(%rdx), %rax
    00001f16: 	addq	$0x200, %rax
    00001f1c: 	jmp	.Ltmp936 # Offset: 7964
.Ltmp783:
    00001f21: 	movq	0x60(%rsp), %rsi
    00001f26: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f2d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7981
    00001f32: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f39: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001f40: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f47: 	jne	.Ltmp937 # Offset: 8007
.Ltmp788:
    00001f4d: 	movq	-0x8(%rdx), %rax
    00001f51: 	addq	$0x200, %rax
    00001f57: 	jmp	.Ltmp937 # Offset: 8023
.Ltmp766:
    00001f5c: 	movq	-0x8(%rdx), %rax
    00001f60: 	addq	$0x200, %rax
    00001f66: 	jmp	.Ltmp938 # Offset: 8038
.Ltmp772:
    00001f6b: 	movq	0x60(%rsp), %rsi
    00001f70: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f77: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8055
    00001f7c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f83: 	jmp	.Ltmp939 # Offset: 8067
.Ltmp761:
    00001f88: 	movq	0x60(%rsp), %rsi
    00001f8d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f94: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8084
    00001f99: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fa0: 	jmp	.Ltmp940 # Offset: 8096
.Ltmp898:
    00001fa5: 	movq	-0x8(%rdx), %rax
    00001fa9: 	addq	$0x200, %rax
    00001faf: 	jmp	.Ltmp941 # Offset: 8111
.Ltmp893:
    00001fb4: 	movq	0x60(%rsp), %rsi
    00001fb9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fc0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8128
    00001fc5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fcc: 	jmp	.Ltmp942 # Offset: 8140
.Ltmp909:
    00001fd1: 	movq	-0x8(%rdx), %rax
    00001fd5: 	addq	$0x200, %rax
    00001fdb: 	jmp	.Ltmp943 # Offset: 8155
.Ltmp904:
    00001fe0: 	movq	0x60(%rsp), %rsi
    00001fe5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8172
    00001ff1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ff8: 	jmp	.Ltmp944 # Offset: 8184
.Ltmp849:
    00001ffd: 	movq	0x60(%rsp), %rsi
    00002002: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002009: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8201
    0000200e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002015: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000201c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002023: 	jne	.Ltmp945 # Offset: 8227
.Ltmp854:
    00002029: 	movq	-0x8(%rdx), %rax
    0000202d: 	addq	$0x200, %rax
    00002033: 	jmp	.Ltmp945 # Offset: 8243
.Ltmp799:
    00002038: 	movq	-0x8(%rdx), %rax
    0000203c: 	addq	$0x200, %rax
    00002042: 	jmp	.Ltmp946 # Offset: 8258
.Ltmp794:
    00002047: 	movq	0x60(%rsp), %rsi
    0000204c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002053: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8275
    00002058: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000205f: 	jmp	.Ltmp947 # Offset: 8287
.Ltmp843:
    00002064: 	movq	-0x8(%rdx), %rax
    00002068: 	addq	$0x200, %rax
    0000206e: 	jmp	.Ltmp948 # Offset: 8302
.Ltmp838:
    00002073: 	movq	0x60(%rsp), %rsi
    00002078: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000207f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8319
    00002084: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000208b: 	jmp	.Ltmp949 # Offset: 8331
.Ltmp871:
    00002090: 	movq	0x60(%rsp), %rsi
    00002095: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000209c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8348
    000020a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020a8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000020af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020b6: 	jne	.Ltmp950 # Offset: 8374
.Ltmp876:
    000020bc: 	movq	-0x8(%rdx), %rax
    000020c0: 	addq	$0x200, %rax
    000020c6: 	jmp	.Ltmp950 # Offset: 8390
.Ltmp860:
    000020cb: 	movq	0x60(%rsp), %rsi
    000020d0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020d7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8407
    000020dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020e3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000020ea: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020f1: 	jne	.Ltmp951 # Offset: 8433
.Ltmp865:
    000020f7: 	movq	-0x8(%rdx), %rax
    000020fb: 	addq	$0x200, %rax
    00002101: 	jmp	.Ltmp951 # Offset: 8449
.Ltmp887:
    00002106: 	movq	-0x8(%rdx), %rax
    0000210a: 	addq	$0x200, %rax
    00002110: 	jmp	.Ltmp952 # Offset: 8464
.Ltmp882:
    00002115: 	movq	0x60(%rsp), %rsi
    0000211a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002121: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8481
    00002126: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000212d: 	jmp	.Ltmp953 # Offset: 8493
.Ltmp875:
    00002132: 	testq	%r13, %r13
    00002135: 	je	.Ltmp954 # Offset: 8501
.Ltmp978:
    0000213b: 	movq	%r13, %rdx
    0000213e: 	movq	%r15, %rsi
    00002141: 	callq	memcpy@PLT # Offset: 8513
    00002146: 	movq	0x88(%rsp), %r13
    0000214e: 	movq	(%r14), %rdi
    00002151: 	jmp	.Ltmp954 # Offset: 8529
.Ltmp864:
    00002156: 	testq	%r13, %r13
    00002159: 	je	.Ltmp955 # Offset: 8537
    0000215f: 	jmp	.Ltmp956 # Offset: 8543
    00002164: 	nopl	(%rax) # Size: 4
.Ltmp886:
    00002168: 	testq	%r13, %r13
    0000216b: 	je	.Ltmp957 # Offset: 8555
.Ltmp977:
    00002171: 	movq	%r13, %rdx
    00002174: 	movq	%r15, %rsi
    00002177: 	callq	memcpy@PLT # Offset: 8567
    0000217c: 	movq	0x88(%rsp), %r13
    00002184: 	movq	(%r14), %rdi
    00002187: 	jmp	.Ltmp957 # Offset: 8583
.Ltmp787:
    0000218c: 	testq	%r13, %r13
    0000218f: 	je	.Ltmp958 # Offset: 8591
    00002195: 	jmp	.Ltmp959 # Offset: 8597
    0000219a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp820:
    000021a0: 	testq	%r13, %r13
    000021a3: 	je	.Ltmp960 # Offset: 8611
.Ltmp979:
    000021a9: 	movq	%r13, %rdx
    000021ac: 	movq	%r15, %rsi
    000021af: 	callq	memcpy@PLT # Offset: 8623
    000021b4: 	movq	0x88(%rsp), %r13
    000021bc: 	movq	(%r14), %rdi
    000021bf: 	jmp	.Ltmp960 # Offset: 8639
.Ltmp842:
    000021c4: 	testq	%r13, %r13
    000021c7: 	je	.Ltmp961 # Offset: 8647
    000021cd: 	jmp	.Ltmp962 # Offset: 8653
    000021d2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp798:
    000021d8: 	testq	%r13, %r13
    000021db: 	je	.Ltmp963 # Offset: 8667
    000021e1: 	jmp	.Ltmp964 # Offset: 8673
    000021e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp765:
    000021f0: 	testq	%r13, %r13
    000021f3: 	je	.Ltmp918 # Offset: 8691
    000021f9: 	jmp	.Ltmp965 # Offset: 8697
    000021fe: 	nop # Size: 2
.Ltmp853:
    00002200: 	testq	%r13, %r13
    00002203: 	je	.Ltmp966 # Offset: 8707
    00002209: 	jmp	.Ltmp967 # Offset: 8713
    0000220e: 	nop # Size: 2
.Ltmp831:
    00002210: 	testq	%r13, %r13
    00002213: 	je	.Ltmp968 # Offset: 8723
    00002219: 	jmp	.Ltmp969 # Offset: 8729
    0000221e: 	nop # Size: 2
.Ltmp908:
    00002220: 	testq	%r12, %r12
    00002223: 	je	.Ltmp970 # Offset: 8739
    00002229: 	jmp	.Ltmp971 # Offset: 8745
    0000222e: 	nop # Size: 2
.Ltmp776:
    00002230: 	testq	%r13, %r13
    00002233: 	je	.Ltmp972 # Offset: 8755
    00002239: 	jmp	.Ltmp973 # Offset: 8761
    0000223e: 	nop # Size: 2
.Ltmp897:
    00002240: 	testq	%r13, %r13
    00002243: 	je	.Ltmp974 # Offset: 8771
    00002249: 	jmp	.Ltmp975 # Offset: 8777
    0000224e: 	nop # Size: 2
.Ltmp809:
    00002250: 	testq	%r13, %r13
    00002253: 	je	.Ltmp976 # Offset: 8787
.Ltmp980:
    00002259: 	movq	%r13, %rdx
    0000225c: 	movq	%r15, %rsi
    0000225f: 	callq	memcpy@PLT # Offset: 8799
    00002264: 	movq	0x88(%rsp), %r13
    0000226c: 	movq	(%r14), %rdi
    0000226f: 	jmp	.Ltmp976 # Offset: 8815
.Ltmp852:
    00002274: 	leaq	0x88(%rsp), %rsi
    0000227c: 	xorl	%edx, %edx
    0000227e: 	movq	%r14, %rdi
    00002281: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8833
    00002286: 	movq	%rax, (%r14)
    00002289: 	movq	%rax, %rdi
    0000228c: 	movq	0x88(%rsp), %rax
    00002294: 	movq	%rax, 0x10(%r14)
.Ltmp967:
    00002298: 	movq	%r13, %rdx
    0000229b: 	movq	%r15, %rsi
    0000229e: 	callq	memcpy@PLT # Offset: 8862
    000022a3: 	movq	0x88(%rsp), %r13
    000022ab: 	movq	(%r14), %rdi
    000022ae: 	jmp	.Ltmp966 # Offset: 8878
.Ltmp830:
    000022b3: 	leaq	0x88(%rsp), %rsi
    000022bb: 	xorl	%edx, %edx
    000022bd: 	movq	%r14, %rdi
    000022c0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8896
    000022c5: 	movq	%rax, (%r14)
    000022c8: 	movq	%rax, %rdi
    000022cb: 	movq	0x88(%rsp), %rax
    000022d3: 	movq	%rax, 0x10(%r14)
.Ltmp969:
    000022d7: 	movq	%r13, %rdx
    000022da: 	movq	%r15, %rsi
    000022dd: 	callq	memcpy@PLT # Offset: 8925
    000022e2: 	movq	0x88(%rsp), %r13
    000022ea: 	movq	(%r14), %rdi
    000022ed: 	jmp	.Ltmp968 # Offset: 8941
.Ltmp841:
    000022f2: 	leaq	0x88(%rsp), %rsi
    000022fa: 	xorl	%edx, %edx
    000022fc: 	movq	%r14, %rdi
    000022ff: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8959
    00002304: 	movq	%rax, (%r14)
    00002307: 	movq	%rax, %rdi
    0000230a: 	movq	0x88(%rsp), %rax
    00002312: 	movq	%rax, 0x10(%r14)
.Ltmp962:
    00002316: 	movq	%r13, %rdx
    00002319: 	movq	%r15, %rsi
    0000231c: 	callq	memcpy@PLT # Offset: 8988
    00002321: 	movq	0x88(%rsp), %r13
    00002329: 	movq	(%r14), %rdi
    0000232c: 	jmp	.Ltmp961 # Offset: 9004
.Ltmp863:
    00002331: 	leaq	0x88(%rsp), %rsi
    00002339: 	xorl	%edx, %edx
    0000233b: 	movq	%r14, %rdi
    0000233e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9022
    00002343: 	movq	%rax, (%r14)
    00002346: 	movq	%rax, %rdi
    00002349: 	movq	0x88(%rsp), %rax
    00002351: 	movq	%rax, 0x10(%r14)
.Ltmp956:
    00002355: 	movq	%r13, %rdx
    00002358: 	movq	%r15, %rsi
    0000235b: 	callq	memcpy@PLT # Offset: 9051
    00002360: 	movq	0x88(%rsp), %r13
    00002368: 	movq	(%r14), %rdi
    0000236b: 	jmp	.Ltmp955 # Offset: 9067
.Ltmp786:
    00002370: 	leaq	0x88(%rsp), %rsi
    00002378: 	xorl	%edx, %edx
    0000237a: 	movq	%r14, %rdi
    0000237d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9085
    00002382: 	movq	%rax, (%r14)
    00002385: 	movq	%rax, %rdi
    00002388: 	movq	0x88(%rsp), %rax
    00002390: 	movq	%rax, 0x10(%r14)
.Ltmp959:
    00002394: 	movq	%r13, %rdx
    00002397: 	movq	%r15, %rsi
    0000239a: 	callq	memcpy@PLT # Offset: 9114
    0000239f: 	movq	0x88(%rsp), %r13
    000023a7: 	movq	(%r14), %rdi
    000023aa: 	jmp	.Ltmp958 # Offset: 9130
.Ltmp797:
    000023af: 	leaq	0x88(%rsp), %rsi
    000023b7: 	xorl	%edx, %edx
    000023b9: 	movq	%r14, %rdi
    000023bc: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9148
    000023c1: 	movq	%rax, (%r14)
    000023c4: 	movq	%rax, %rdi
    000023c7: 	movq	0x88(%rsp), %rax
    000023cf: 	movq	%rax, 0x10(%r14)
.Ltmp964:
    000023d3: 	movq	%r13, %rdx
    000023d6: 	movq	%r15, %rsi
    000023d9: 	callq	memcpy@PLT # Offset: 9177
    000023de: 	movq	0x88(%rsp), %r13
    000023e6: 	movq	(%r14), %rdi
    000023e9: 	jmp	.Ltmp963 # Offset: 9193
.Ltmp885:
    000023ee: 	leaq	0x88(%rsp), %rsi
    000023f6: 	xorl	%edx, %edx
    000023f8: 	movq	%r14, %rdi
    000023fb: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9211
    00002400: 	movq	%rax, (%r14)
    00002403: 	movq	%rax, %rdi
    00002406: 	movq	0x88(%rsp), %rax
    0000240e: 	movq	%rax, 0x10(%r14)
    00002412: 	jmp	.Ltmp977 # Offset: 9234
.Ltmp775:
    00002417: 	leaq	0x88(%rsp), %rsi
    0000241f: 	xorl	%edx, %edx
    00002421: 	movq	%r14, %rdi
    00002424: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9252
    00002429: 	movq	%rax, (%r14)
    0000242c: 	movq	%rax, %rdi
    0000242f: 	movq	0x88(%rsp), %rax
    00002437: 	movq	%rax, 0x10(%r14)
.Ltmp973:
    0000243b: 	movq	%r13, %rdx
    0000243e: 	movq	%r15, %rsi
    00002441: 	callq	memcpy@PLT # Offset: 9281
    00002446: 	movq	0x88(%rsp), %r13
    0000244e: 	movq	(%r14), %rdi
    00002451: 	jmp	.Ltmp972 # Offset: 9297
.Ltmp907:
    00002456: 	leaq	0x88(%rsp), %rsi
    0000245e: 	xorl	%edx, %edx
    00002460: 	movq	%rbx, %rdi
    00002463: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9315
    00002468: 	movq	%rax, (%rbx)
    0000246b: 	movq	%rax, %rdi
    0000246e: 	movq	0x88(%rsp), %rax
    00002476: 	movq	%rax, 0x10(%rbx)
.Ltmp971:
    0000247a: 	movq	%r12, %rdx
    0000247d: 	movq	%rbp, %rsi
    00002480: 	callq	memcpy@PLT # Offset: 9344
    00002485: 	movq	0x88(%rsp), %r12
    0000248d: 	movq	(%rbx), %rdi
    00002490: 	jmp	.Ltmp970 # Offset: 9360
.Ltmp896:
    00002495: 	leaq	0x88(%rsp), %rsi
    0000249d: 	xorl	%edx, %edx
    0000249f: 	movq	%r14, %rdi
    000024a2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9378
    000024a7: 	movq	%rax, (%r14)
    000024aa: 	movq	%rax, %rdi
    000024ad: 	movq	0x88(%rsp), %rax
    000024b5: 	movq	%rax, 0x10(%r14)
.Ltmp975:
    000024b9: 	movq	%r13, %rdx
    000024bc: 	movq	%r15, %rsi
    000024bf: 	callq	memcpy@PLT # Offset: 9407
    000024c4: 	movq	0x88(%rsp), %r13
    000024cc: 	movq	(%r14), %rdi
    000024cf: 	jmp	.Ltmp974 # Offset: 9423
.Ltmp874:
    000024d4: 	leaq	0x88(%rsp), %rsi
    000024dc: 	xorl	%edx, %edx
    000024de: 	movq	%r14, %rdi
    000024e1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9441
    000024e6: 	movq	%rax, (%r14)
    000024e9: 	movq	%rax, %rdi
    000024ec: 	movq	0x88(%rsp), %rax
    000024f4: 	movq	%rax, 0x10(%r14)
    000024f8: 	jmp	.Ltmp978 # Offset: 9464
.Ltmp819:
    000024fd: 	leaq	0x88(%rsp), %rsi
    00002505: 	xorl	%edx, %edx
    00002507: 	movq	%r14, %rdi
    0000250a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9482
    0000250f: 	movq	%rax, (%r14)
    00002512: 	movq	%rax, %rdi
    00002515: 	movq	0x88(%rsp), %rax
    0000251d: 	movq	%rax, 0x10(%r14)
    00002521: 	jmp	.Ltmp979 # Offset: 9505
.Ltmp808:
    00002526: 	leaq	0x88(%rsp), %rsi
    0000252e: 	xorl	%edx, %edx
    00002530: 	movq	%r14, %rdi
    00002533: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9523
    00002538: 	movq	%rax, (%r14)
    0000253b: 	movq	%rax, %rdi
    0000253e: 	movq	0x88(%rsp), %rax
    00002546: 	movq	%rax, 0x10(%r14)
    0000254a: 	jmp	.Ltmp980 # Offset: 9546
.Ltmp774:
    0000254f: 	leaq	DATAat0x17158(%rip), %rdi
    00002556: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9558
.Ltmp785:
    0000255b: 	leaq	DATAat0x17158(%rip), %rdi
    00002562: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9570
.Ltmp796:
    00002567: 	leaq	DATAat0x17158(%rip), %rdi
    0000256e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9582
.Ltmp807:
    00002573: 	leaq	DATAat0x17158(%rip), %rdi
    0000257a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9594
.Ltmp818:
    0000257f: 	leaq	DATAat0x17158(%rip), %rdi
    00002586: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9606
.Ltmp829:
    0000258b: 	leaq	DATAat0x17158(%rip), %rdi
    00002592: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9618
.Ltmp840:
    00002597: 	leaq	DATAat0x17158(%rip), %rdi
    0000259e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9630
.Ltmp851:
    000025a3: 	leaq	DATAat0x17158(%rip), %rdi
    000025aa: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9642
.Ltmp862:
    000025af: 	leaq	DATAat0x17158(%rip), %rdi
    000025b6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9654
.Ltmp873:
    000025bb: 	leaq	DATAat0x17158(%rip), %rdi
    000025c2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9666
.Ltmp884:
    000025c7: 	leaq	DATAat0x17158(%rip), %rdi
    000025ce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9678
.Ltmp895:
    000025d3: 	leaq	DATAat0x17158(%rip), %rdi
    000025da: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9690
.Ltmp906:
    000025df: 	leaq	DATAat0x17158(%rip), %rdi
    000025e6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9702
.Ltmp913:
    000025eb: 	callq	__stack_chk_fail@PLT # Offset: 9707
.Ltmp763:
    000025f0: 	leaq	DATAat0x17158(%rip), %rdi
    000025f7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9719
    000025fc: 	endbr64
.Ltmp982:
    00002600: 	movq	%rax, %rbp
    00002603: 	jmp	.Ltmp981 # Offset: 9731
    00002605: 	endbr64
    00002609: 	jmp	.Ltmp982 # Offset: 9737
    0000260b: 	endbr64
    0000260f: 	jmp	.Ltmp982 # Offset: 9743
    00002611: 	endbr64
    00002615: 	jmp	.Ltmp982 # Offset: 9749
.Ltmp981:
    00002617: 	movq	0xb0(%rsp), %rdi
    0000261f: 	cmpq	0x68(%rsp), %rdi
    00002624: 	je	.Ltmp983 # Offset: 9764
.Ltmp986:
    00002626: 	movq	0xc0(%rsp), %rax
    0000262e: 	leaq	0x1(%rax), %rsi
    00002632: 	callq	_ZdlPvm@PLT # Offset: 9778
.Ltmp983:
    00002637: 	movq	0x90(%rsp), %rdi
    0000263f: 	cmpq	0x78(%rsp), %rdi
    00002644: 	je	.Ltmp984 # Offset: 9796
    00002646: 	movq	0xa0(%rsp), %rax
    0000264e: 	leaq	0x1(%rax), %rsi
    00002652: 	callq	_ZdlPvm@PLT # Offset: 9810
.Ltmp984:
    00002657: 	movq	%rbp, %rdi
    0000265a: 	callq	_Unwind_Resume@PLT # Offset: 9818
    0000265f: 	endbr64
    00002663: 	jmp	.Ltmp982 # Offset: 9827
    00002665: 	endbr64
    00002669: 	jmp	.Ltmp982 # Offset: 9833
    0000266b: 	endbr64
    0000266f: 	jmp	.Ltmp982 # Offset: 9839
    00002671: 	endbr64
    00002675: 	jmp	.Ltmp982 # Offset: 9845
    00002677: 	endbr64
    0000267b: 	movq	%rax, %rbp
    0000267e: 	jmp	.Ltmp983 # Offset: 9854
    00002680: 	endbr64
    00002684: 	movq	%rax, %rbp
    00002687: 	jmp	.Ltmp985 # Offset: 9863
    00002689: 	endbr64
    0000268d: 	jmp	.Ltmp982 # Offset: 9869
    00002692: 	endbr64
    00002696: 	jmp	.Ltmp982 # Offset: 9878
.Ltmp985:
    0000269b: 	movq	0xb0(%rsp), %rdi
    000026a3: 	leaq	0xc0(%rsp), %rax
    000026ab: 	cmpq	%rax, %rdi
    000026ae: 	jne	.Ltmp986 # Offset: 9902
    000026b4: 	jmp	.Ltmp983 # Offset: 9908
    000026b6: 	endbr64
    000026ba: 	jmp	.Ltmp982 # Offset: 9914
    000026bf: 	endbr64
    000026c3: 	jmp	.Ltmp982 # Offset: 9923
    000026c8: 	endbr64
    000026cc: 	jmp	.Ltmp982 # Offset: 9932
    000026d1: 	endbr64
    000026d5: 	jmp	.Ltmp982 # Offset: 9941
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI12TwoItemClassIiEEvd"

Binary Function "_Z11TestOneTypeI12TwoItemClassIdEEvd" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0xc360
  Size        : 0x2a78
  MaxSize     : 0x2a80
  Offset      : 0xc360
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI12TwoItemClassIdEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x1f000(%rsp), %r11
.Ltmp987:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp987 # Offset: 37
    00000027: 	subq	$0x508, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm6
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm7, %xmm5
    00000048: 	movq	%xmm6, %rbp
    0000004d: 	movq	%xmm5, %rcx
    00000052: 	leaq	0x8(%rcx), %r12
    00000056: 	movsd	%xmm0, 0x68(%rsp)
    0000005c: 	movq	%fs:0x28, %rax
    00000065: 	movq	%rax, 0x1f4f8(%rsp)
    0000006d: 	xorl	%eax, %eax
    0000006f: 	leaq	0xc0(%rsp), %rax
    00000077: 	movb	$0x0, 0xcc(%rsp)
    0000007f: 	movq	%rax, 0x98(%rsp)
    00000087: 	movq	%rax, 0xb0(%rsp)
    0000008f: 	movabsq	$0x4332656c62756f64, %rax
    00000099: 	movq	%rax, 0xc0(%rsp)
    000000a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a8: 	movl	$0x7373616c, 0xc8(%rsp)
    000000b3: 	movq	%rax, (%rsp)
    000000b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000be: 	movq	$0xc, 0xb8(%rsp)
    000000ca: 	movq	%rax, 0x20(%rsp)
    000000cf: 	movaps	%xmm6, 0x30(%rsp)
    000000d4: 	movaps	%xmm7, 0x50(%rsp)
    000000d9: 	movq	%xmm5, 0x48(%rsp)
    000000df: 	movq	%xmm7, 0x10(%rsp)
    000000e5: 	cmpq	%r12, %rax
    000000e8: 	jbe	.Ltmp988 # Offset: 232
    000000ea: 	movq	%r12, %r13
    000000ed: 	movq	%rax, %r15
    000000f0: 	movq	%xmm6, 0x60(%rsp)
    000000f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp991:
    00000100: 	movq	(%r13), %rbp
    00000104: 	leaq	0x200(%rbp), %rbx
    0000010b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp990:
    00000110: 	movq	(%rbp), %rdi
    00000114: 	leaq	0x10(%rbp), %rdx
    00000118: 	cmpq	%rdx, %rdi
    0000011b: 	je	.Ltmp989 # Offset: 283
    00000121: 	movq	0x10(%rbp), %rax
    00000125: 	addq	$0x20, %rbp
    00000129: 	leaq	0x1(%rax), %rsi
    0000012d: 	callq	_ZdlPvm@PLT # Offset: 301
    00000132: 	cmpq	%rbp, %rbx
    00000135: 	jne	.Ltmp990 # Offset: 309
    00000137: 	addq	$0x8, %r13
    0000013b: 	cmpq	%r13, %r15
    0000013e: 	ja	.Ltmp991 # Offset: 318
.Ltmp1176:
    00000140: 	movq	0x60(%rsp), %rbp
.Ltmp988:
    00000145: 	movq	0x48(%rsp), %rcx
    0000014a: 	cmpq	%rcx, 0x20(%rsp)
    0000014f: 	jne	.Ltmp992 # Offset: 335
    00000151: 	jmp	.Ltmp993 # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp995:
    00000160: 	movq	0x10(%rbp), %rax
    00000164: 	addq	$0x20, %rbp
    00000168: 	leaq	0x1(%rax), %rsi
    0000016c: 	callq	_ZdlPvm@PLT # Offset: 364
.Ltmp992:
    00000171: 	cmpq	%rbp, 0x10(%rsp)
    00000176: 	je	.Ltmp994 # Offset: 374
.Ltmp996:
    00000178: 	movq	(%rbp), %rdi
    0000017c: 	leaq	0x10(%rbp), %rax
    00000180: 	cmpq	%rax, %rdi
    00000183: 	jne	.Ltmp995 # Offset: 387
    00000185: 	addq	$0x20, %rbp
    00000189: 	cmpq	0x10(%rsp), %rbp
    0000018e: 	jne	.Ltmp996 # Offset: 398
    00000190: 	cmpq	%r14, (%rsp)
    00000194: 	je	.Ltmp997 # Offset: 404
    00000196: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp999:
    000001a0: 	movq	(%r14), %rdi
    000001a3: 	leaq	0x10(%r14), %rax
    000001a7: 	cmpq	%rax, %rdi
    000001aa: 	je	.Ltmp998 # Offset: 426
    000001ac: 	movq	0x10(%r14), %rax
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
.Ltmp998:
    000001b9: 	addq	$0x20, %r14
.Ltmp994:
    000001bd: 	cmpq	%r14, (%rsp)
    000001c1: 	jne	.Ltmp999 # Offset: 449
.Ltmp997:
    000001c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ca: 	leaq	0x8(%rax), %rbx
    000001ce: 	cmpq	%r12, %rbx
    000001d1: 	jbe	.Ltmp1000 # Offset: 465
    000001d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1001:
    000001d8: 	movq	(%r12), %rdi
    000001dc: 	movl	$0x200, %esi
    000001e1: 	addq	$0x8, %r12
    000001e5: 	callq	_ZdlPvm@PLT # Offset: 485
    000001ea: 	cmpq	%r12, %rbx
    000001ed: 	ja	.Ltmp1001 # Offset: 493
.Ltmp1000:
    000001ef: 	movdqa	0x30(%rsp), %xmm3
    000001f5: 	movsd	init_value(%rip), %xmm0
    000001fd: 	leaq	0xf0(%rsp), %r12
    00000205: 	leaq	0x1f4f0(%rsp), %rbx
    0000020d: 	movq	%r12, %rax
    00000210: 	movaps	%xmm3, "_ZL7gLabels/1"+48(%rip)
    00000217: 	movdqa	0x50(%rsp), %xmm3
    0000021d: 	unpcklpd	%xmm0, %xmm0
    00000221: 	movaps	%xmm3, "_ZL7gLabels/1"+64(%rip)
    00000228: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1002:
    00000230: 	movaps	%xmm0, (%rax)
    00000233: 	addq	$0x10, %rax
    00000237: 	cmpq	%rbx, %rax
    0000023a: 	jne	.Ltmp1002 # Offset: 570
    0000023c: 	movsd	0x68(%rsp), %xmm5
    00000242: 	movsd	DATAat0x17368(%rip), %xmm4
    0000024a: 	leaq	0xb0(%rsp), %rax
    00000252: 	leaq	0xd0(%rsp), %r14
    0000025a: 	leaq	DATAat0x171c8(%rip), %rdx
    00000261: 	movq	%rax, %rsi
    00000264: 	movq	%r14, %rdi
    00000267: 	movq	%rax, 0x90(%rsp)
    0000026f: 	movapd	%xmm5, %xmm6
    00000273: 	addsd	%xmm5, %xmm4
    00000277: 	addsd	%xmm5, %xmm6
    0000027b: 	movsd	%xmm4, 0x78(%rsp)
    00000281: 	movsd	%xmm6, 0x80(%rsp)
    0000028a: 	divsd	%xmm4, %xmm6
    0000028e: 	movapd	%xmm6, %xmm0
    00000292: 	addsd	%xmm5, %xmm0
    00000296: 	movsd	%xmm0, 0x70(%rsp)
    0000029c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 668
    000002a1: 	callq	clock@PLT # Offset: 673
    000002a6: 	movl	iterations(%rip), %edx
    000002ac: 	movq	%rax, start_time(%rip)
    000002b3: 	testl	%edx, %edx
    000002b5: 	jle	.Ltmp1003 # Offset: 693
    000002bb: 	movsd	0x68(%rsp), %xmm3
    000002c1: 	movsd	DATAat0x17350(%rip), %xmm5
    000002c9: 	pxor	%xmm4, %xmm4
    000002cd: 	xorl	%r13d, %r13d
    000002d0: 	leaq	init_value(%rip), %rbp
    000002d7: 	movsd	%xmm4, 0x60(%rsp)
    000002dd: 	leaq	DATAat0x171d6(%rip), %r15
    000002e4: 	unpcklpd	%xmm3, %xmm3
    000002e8: 	movsd	%xmm5, 0x50(%rsp)
    000002ee: 	movaps	%xmm3, (%rsp)
    000002f2: 	movsd	DATAat0x17370(%rip), %xmm3
    000002fa: 	movsd	%xmm3, 0x48(%rsp)
.Ltmp1007:
    00000300: 	movq	%r12, %rax
    00000303: 	pxor	%xmm0, %xmm0
    00000307: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1004:
    00000310: 	movapd	(%rsp), %xmm1
    00000315: 	addpd	(%rax), %xmm1
    00000319: 	addq	$0x10, %rax
    0000031d: 	addpd	%xmm1, %xmm0
    00000321: 	cmpq	%rbx, %rax
    00000324: 	jne	.Ltmp1004 # Offset: 804
    00000326: 	movsd	0x68(%rsp), %xmm2
    0000032c: 	addsd	(%rbp), %xmm2
    00000331: 	movapd	%xmm0, %xmm7
    00000335: 	mulsd	0x48(%rsp), %xmm2
    0000033b: 	unpckhpd	%xmm7, %xmm7
    0000033f: 	movsd	0x60(%rsp), %xmm4
    00000345: 	movapd	%xmm7, %xmm1
    00000349: 	subsd	%xmm2, %xmm1
    0000034d: 	subsd	%xmm2, %xmm0
    00000351: 	addsd	%xmm1, %xmm0
    00000355: 	comisd	%xmm0, %xmm4
    00000359: 	jbe	.Ltmp1005 # Offset: 857
    0000035b: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1005:
    00000363: 	movsd	0x50(%rsp), %xmm5
    00000369: 	comisd	%xmm0, %xmm5
    0000036d: 	jbe	.Ltmp1006 # Offset: 877
.Ltmp1177:
    00000373: 	addl	$0x1, %r13d
    00000377: 	cmpl	%edx, %r13d
    0000037a: 	jl	.Ltmp1007 # Offset: 890
.Ltmp1003:
    0000037c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000383: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000038a: 	subq	$0x20, %rax
    0000038e: 	cmpq	%rax, %rbp
    00000391: 	je	.Ltmp1008 # Offset: 913
    00000397: 	leaq	0x10(%rbp), %rdi
    0000039b: 	movq	0xd8(%rsp), %r13
    000003a3: 	movq	%rdi, (%rbp)
    000003a7: 	movq	0xd0(%rsp), %r15
    000003af: 	movq	%r15, %rax
    000003b2: 	addq	%r13, %rax
    000003b5: 	je	.Ltmp1009 # Offset: 949
    000003b7: 	testq	%r15, %r15
    000003ba: 	je	.Ltmp1010 # Offset: 954
.Ltmp1009:
    000003c0: 	movq	%r13, 0xa8(%rsp)
    000003c8: 	cmpq	$0xf, %r13
    000003cc: 	ja	.Ltmp1011 # Offset: 972
    000003d2: 	cmpq	$0x1, %r13
    000003d6: 	jne	.Ltmp1012 # Offset: 982
    000003dc: 	movzbl	(%r15), %eax
    000003e0: 	movb	%al, 0x10(%rbp)
.Ltmp1178:
    000003e3: 	movq	%r13, 0x8(%rbp)
    000003e7: 	movb	$0x0, (%rdi,%r13)
    000003ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003f3: 	addq	$0x20, %rax
    000003f7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1200:
    000003fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000405: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000040c: 	je	.Ltmp1013 # Offset: 1036
.Ltmp1198:
    00000412: 	movq	-0x20(%rax), %rbp
    00000416: 	callq	clock@PLT # Offset: 1046
    0000041b: 	pxor	%xmm0, %xmm0
    0000041f: 	movq	%rax, end_time(%rip)
    00000426: 	movq	%rbp, %rdi
    00000429: 	subq	start_time(%rip), %rax
    00000430: 	cvtsi2sd	%rax, %xmm0
    00000435: 	divsd	DATAat0x17358(%rip), %xmm0
    0000043d: 	callq	_Z13record_resultdPKc # Offset: 1085
    00000442: 	movq	0xd0(%rsp), %rdi
    0000044a: 	leaq	0xe0(%rsp), %rax
    00000452: 	movq	%rax, 0x88(%rsp)
    0000045a: 	cmpq	%rax, %rdi
    0000045d: 	je	.Ltmp1014 # Offset: 1117
    0000045f: 	movq	0xe0(%rsp), %rax
    00000467: 	leaq	0x1(%rax), %rsi
    0000046b: 	callq	_ZdlPvm@PLT # Offset: 1131
.Ltmp1014:
    00000470: 	movq	0x90(%rsp), %rsi
    00000478: 	leaq	DATAat0x171e6(%rip), %rdx
    0000047f: 	movq	%r14, %rdi
    00000482: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1154
    00000487: 	callq	clock@PLT # Offset: 1159
    0000048c: 	movl	iterations(%rip), %edx
    00000492: 	movq	%rax, start_time(%rip)
    00000499: 	testl	%edx, %edx
    0000049b: 	jle	.Ltmp1015 # Offset: 1179
    000004a1: 	movsd	0x80(%rsp), %xmm0
    000004aa: 	pxor	%xmm3, %xmm3
    000004ae: 	addsd	0x68(%rsp), %xmm0
    000004b4: 	xorl	%r13d, %r13d
    000004b7: 	addsd	0x78(%rsp), %xmm0
    000004bd: 	movsd	0x70(%rsp), %xmm4
    000004c3: 	movsd	%xmm3, 0x60(%rsp)
    000004c9: 	leaq	init_value(%rip), %rbp
    000004d0: 	movsd	DATAat0x17370(%rip), %xmm6
    000004d8: 	movsd	DATAat0x17350(%rip), %xmm5
    000004e0: 	leaq	DATAat0x171d6(%rip), %r15
    000004e7: 	addsd	%xmm0, %xmm4
    000004eb: 	movsd	%xmm6, 0x48(%rsp)
    000004f1: 	movsd	%xmm5, 0x50(%rsp)
    000004f7: 	movapd	%xmm4, %xmm3
    000004fb: 	movsd	%xmm4, 0x10(%rsp)
    00000501: 	unpcklpd	%xmm3, %xmm3
    00000505: 	movaps	%xmm3, (%rsp)
    00000509: 	nopl	(%rax) # Size: 7
.Ltmp1019:
    00000510: 	movq	%r12, %rax
    00000513: 	pxor	%xmm0, %xmm0
    00000517: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1016:
    00000520: 	movapd	(%rsp), %xmm1
    00000525: 	addpd	(%rax), %xmm1
    00000529: 	addq	$0x10, %rax
    0000052d: 	addpd	%xmm1, %xmm0
    00000531: 	cmpq	%rbx, %rax
    00000534: 	jne	.Ltmp1016 # Offset: 1332
    00000536: 	movsd	0x10(%rsp), %xmm2
    0000053c: 	addsd	(%rbp), %xmm2
    00000541: 	movapd	%xmm0, %xmm7
    00000545: 	mulsd	0x48(%rsp), %xmm2
    0000054b: 	unpckhpd	%xmm7, %xmm7
    0000054f: 	movsd	0x60(%rsp), %xmm3
    00000555: 	movapd	%xmm7, %xmm1
    00000559: 	subsd	%xmm2, %xmm1
    0000055d: 	subsd	%xmm2, %xmm0
    00000561: 	addsd	%xmm1, %xmm0
    00000565: 	comisd	%xmm0, %xmm3
    00000569: 	jbe	.Ltmp1017 # Offset: 1385
    0000056b: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1017:
    00000573: 	movsd	0x50(%rsp), %xmm7
    00000579: 	comisd	%xmm0, %xmm7
    0000057d: 	jbe	.Ltmp1018 # Offset: 1405
.Ltmp1182:
    00000583: 	addl	$0x1, %r13d
    00000587: 	cmpl	%edx, %r13d
    0000058a: 	jl	.Ltmp1019 # Offset: 1418
.Ltmp1015:
    0000058c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000593: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    0000059a: 	subq	$0x20, %rax
    0000059e: 	cmpq	%rax, %rbp
    000005a1: 	je	.Ltmp1020 # Offset: 1441
    000005a7: 	leaq	0x10(%rbp), %rdi
    000005ab: 	movq	0xd8(%rsp), %r13
    000005b3: 	movq	%rdi, (%rbp)
    000005b7: 	movq	0xd0(%rsp), %r15
    000005bf: 	movq	%r15, %rax
    000005c2: 	addq	%r13, %rax
    000005c5: 	je	.Ltmp1021 # Offset: 1477
    000005c7: 	testq	%r15, %r15
    000005ca: 	je	.Ltmp1022 # Offset: 1482
.Ltmp1021:
    000005d0: 	movq	%r13, 0xa8(%rsp)
    000005d8: 	cmpq	$0xf, %r13
    000005dc: 	ja	.Ltmp1023 # Offset: 1500
    000005e2: 	cmpq	$0x1, %r13
    000005e6: 	jne	.Ltmp1024 # Offset: 1510
    000005ec: 	movzbl	(%r15), %eax
    000005f0: 	movb	%al, 0x10(%rbp)
.Ltmp1232:
    000005f3: 	movq	%r13, 0x8(%rbp)
    000005f7: 	movb	$0x0, (%rdi,%r13)
    000005fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000603: 	addq	$0x20, %rax
    00000607: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1199:
    0000060e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000615: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000061c: 	je	.Ltmp1025 # Offset: 1564
.Ltmp1195:
    00000622: 	movq	-0x20(%rax), %rbp
    00000626: 	callq	clock@PLT # Offset: 1574
    0000062b: 	pxor	%xmm0, %xmm0
    0000062f: 	movq	%rax, end_time(%rip)
    00000636: 	movq	%rbp, %rdi
    00000639: 	subq	start_time(%rip), %rax
    00000640: 	cvtsi2sd	%rax, %xmm0
    00000645: 	divsd	DATAat0x17358(%rip), %xmm0
    0000064d: 	callq	_Z13record_resultdPKc # Offset: 1613
    00000652: 	movq	0xd0(%rsp), %rdi
    0000065a: 	cmpq	0x88(%rsp), %rdi
    00000662: 	je	.Ltmp1026 # Offset: 1634
    00000664: 	movq	0xe0(%rsp), %rax
    0000066c: 	leaq	0x1(%rax), %rsi
    00000670: 	callq	_ZdlPvm@PLT # Offset: 1648
.Ltmp1026:
    00000675: 	movq	0x90(%rsp), %rsi
    0000067d: 	leaq	DATAat0x171fe(%rip), %rdx
    00000684: 	movq	%r14, %rdi
    00000687: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1671
    0000068c: 	callq	clock@PLT # Offset: 1676
    00000691: 	movl	iterations(%rip), %edx
    00000697: 	movq	%rax, start_time(%rip)
    0000069e: 	testl	%edx, %edx
    000006a0: 	jle	.Ltmp1027 # Offset: 1696
    000006a6: 	movsd	0x68(%rsp), %xmm4
    000006ac: 	movsd	DATAat0x17350(%rip), %xmm6
    000006b4: 	xorl	%r13d, %r13d
    000006b7: 	leaq	init_value(%rip), %rbp
    000006be: 	movsd	0x78(%rsp), %xmm3
    000006c4: 	leaq	DATAat0x171d6(%rip), %r15
    000006cb: 	unpcklpd	%xmm4, %xmm4
    000006cf: 	movsd	%xmm6, 0x50(%rsp)
    000006d5: 	movsd	0x70(%rsp), %xmm6
    000006db: 	movaps	%xmm4, (%rsp)
    000006df: 	movsd	DATAat0x17370(%rip), %xmm4
    000006e7: 	unpcklpd	%xmm3, %xmm3
    000006eb: 	unpcklpd	%xmm6, %xmm6
    000006ef: 	movaps	%xmm3, 0x20(%rsp)
    000006f4: 	movsd	%xmm4, 0x48(%rsp)
    000006fa: 	pxor	%xmm4, %xmm4
    000006fe: 	movsd	%xmm4, 0x60(%rsp)
    00000704: 	movsd	0x80(%rsp), %xmm4
    0000070d: 	movaps	%xmm6, 0x10(%rsp)
    00000712: 	unpcklpd	%xmm4, %xmm4
    00000716: 	movaps	%xmm4, 0x30(%rsp)
    0000071b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1031:
    00000720: 	movq	%r12, %rax
    00000723: 	pxor	%xmm1, %xmm1
    00000727: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1028:
    00000730: 	movapd	(%rsp), %xmm0
    00000735: 	addpd	(%rax), %xmm0
    00000739: 	addq	$0x10, %rax
    0000073d: 	addpd	0x30(%rsp), %xmm0
    00000743: 	addpd	0x20(%rsp), %xmm0
    00000749: 	addpd	0x10(%rsp), %xmm0
    0000074f: 	addpd	%xmm0, %xmm1
    00000753: 	cmpq	%rax, %rbx
    00000756: 	jne	.Ltmp1028 # Offset: 1878
    00000758: 	movsd	0x68(%rsp), %xmm0
    0000075e: 	addsd	(%rbp), %xmm0
    00000763: 	movapd	%xmm1, %xmm7
    00000767: 	addsd	0x80(%rsp), %xmm0
    00000770: 	addsd	0x78(%rsp), %xmm0
    00000776: 	unpckhpd	%xmm7, %xmm7
    0000077a: 	addsd	0x70(%rsp), %xmm0
    00000780: 	mulsd	0x48(%rsp), %xmm0
    00000786: 	movapd	%xmm7, %xmm2
    0000078a: 	movsd	0x60(%rsp), %xmm7
    00000790: 	subsd	%xmm0, %xmm2
    00000794: 	subsd	%xmm0, %xmm1
    00000798: 	addsd	%xmm1, %xmm2
    0000079c: 	comisd	%xmm2, %xmm7
    000007a0: 	movapd	%xmm2, %xmm0
    000007a4: 	jbe	.Ltmp1029 # Offset: 1956
    000007a6: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1029:
    000007ae: 	movsd	0x50(%rsp), %xmm4
    000007b4: 	comisd	%xmm0, %xmm4
    000007b8: 	jbe	.Ltmp1030 # Offset: 1976
.Ltmp1181:
    000007be: 	addl	$0x1, %r13d
    000007c2: 	cmpl	%edx, %r13d
    000007c5: 	jl	.Ltmp1031 # Offset: 1989
.Ltmp1027:
    000007cb: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007d2: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000007d9: 	subq	$0x20, %rax
    000007dd: 	cmpq	%rax, %rbp
    000007e0: 	je	.Ltmp1032 # Offset: 2016
    000007e6: 	leaq	0x10(%rbp), %rdi
    000007ea: 	movq	0xd8(%rsp), %r13
    000007f2: 	movq	%rdi, (%rbp)
    000007f6: 	movq	0xd0(%rsp), %r15
    000007fe: 	movq	%r15, %rax
    00000801: 	addq	%r13, %rax
    00000804: 	je	.Ltmp1033 # Offset: 2052
    00000806: 	testq	%r15, %r15
    00000809: 	je	.Ltmp1034 # Offset: 2057
.Ltmp1033:
    0000080f: 	movq	%r13, 0xa8(%rsp)
    00000817: 	cmpq	$0xf, %r13
    0000081b: 	ja	.Ltmp1035 # Offset: 2075
    00000821: 	cmpq	$0x1, %r13
    00000825: 	jne	.Ltmp1036 # Offset: 2085
    0000082b: 	movzbl	(%r15), %eax
    0000082f: 	movb	%al, 0x10(%rbp)
.Ltmp1218:
    00000832: 	movq	%r13, 0x8(%rbp)
    00000836: 	movb	$0x0, (%rdi,%r13)
    0000083b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000842: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000849: 	addq	$0x20, %rax
    0000084d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000854: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000085b: 	je	.Ltmp1037 # Offset: 2139
.Ltmp1197:
    00000861: 	movq	-0x20(%rax), %rbp
    00000865: 	callq	clock@PLT # Offset: 2149
    0000086a: 	pxor	%xmm0, %xmm0
    0000086e: 	movq	%rax, end_time(%rip)
    00000875: 	movq	%rbp, %rdi
    00000878: 	subq	start_time(%rip), %rax
    0000087f: 	cvtsi2sd	%rax, %xmm0
    00000884: 	divsd	DATAat0x17358(%rip), %xmm0
    0000088c: 	callq	_Z13record_resultdPKc # Offset: 2188
    00000891: 	movq	0xd0(%rsp), %rdi
    00000899: 	cmpq	0x88(%rsp), %rdi
    000008a1: 	je	.Ltmp1038 # Offset: 2209
    000008a3: 	movq	0xe0(%rsp), %rax
    000008ab: 	leaq	0x1(%rax), %rsi
    000008af: 	callq	_ZdlPvm@PLT # Offset: 2223
.Ltmp1038:
    000008b4: 	movq	0x90(%rsp), %rsi
    000008bc: 	leaq	DATAat0x17217(%rip), %rdx
    000008c3: 	movq	%r14, %rdi
    000008c6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2246
    000008cb: 	callq	clock@PLT # Offset: 2251
    000008d0: 	movl	iterations(%rip), %edx
    000008d6: 	movq	%rax, start_time(%rip)
    000008dd: 	testl	%edx, %edx
    000008df: 	jle	.Ltmp1039 # Offset: 2271
    000008e5: 	movsd	0x68(%rsp), %xmm5
    000008eb: 	movsd	DATAat0x17370(%rip), %xmm7
    000008f3: 	pxor	%xmm3, %xmm3
    000008f7: 	xorl	%r13d, %r13d
    000008fa: 	movsd	DATAat0x17350(%rip), %xmm4
    00000902: 	leaq	init_value(%rip), %rbp
    00000909: 	movsd	%xmm3, 0x60(%rsp)
    0000090f: 	leaq	DATAat0x171d6(%rip), %r15
    00000916: 	unpcklpd	%xmm5, %xmm5
    0000091a: 	movsd	%xmm7, 0x48(%rsp)
    00000920: 	movaps	%xmm5, (%rsp)
    00000924: 	movsd	%xmm4, 0x50(%rsp)
    0000092a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1043:
    00000930: 	movq	%r12, %rax
    00000933: 	pxor	%xmm1, %xmm1
    00000937: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1040:
    00000940: 	movapd	(%rax), %xmm0
    00000944: 	subpd	(%rsp), %xmm0
    00000949: 	addq	$0x10, %rax
    0000094d: 	addpd	%xmm0, %xmm1
    00000951: 	cmpq	%rbx, %rax
    00000954: 	jne	.Ltmp1040 # Offset: 2388
    00000956: 	movsd	(%rbp), %xmm2
    0000095b: 	subsd	0x68(%rsp), %xmm2
    00000961: 	movapd	%xmm1, %xmm7
    00000965: 	mulsd	0x48(%rsp), %xmm2
    0000096b: 	unpckhpd	%xmm7, %xmm7
    0000096f: 	movsd	0x60(%rsp), %xmm3
    00000975: 	movapd	%xmm7, %xmm0
    00000979: 	subsd	%xmm2, %xmm0
    0000097d: 	subsd	%xmm2, %xmm1
    00000981: 	addsd	%xmm1, %xmm0
    00000985: 	comisd	%xmm0, %xmm3
    00000989: 	jbe	.Ltmp1041 # Offset: 2441
    0000098b: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1041:
    00000993: 	movsd	0x50(%rsp), %xmm7
    00000999: 	comisd	%xmm0, %xmm7
    0000099d: 	jbe	.Ltmp1042 # Offset: 2461
.Ltmp1185:
    000009a3: 	addl	$0x1, %r13d
    000009a7: 	cmpl	%edx, %r13d
    000009aa: 	jl	.Ltmp1043 # Offset: 2474
.Ltmp1039:
    000009ac: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009b3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000009ba: 	subq	$0x20, %rax
    000009be: 	cmpq	%rax, %rbp
    000009c1: 	je	.Ltmp1044 # Offset: 2497
    000009c7: 	leaq	0x10(%rbp), %rdi
    000009cb: 	movq	0xd8(%rsp), %r13
    000009d3: 	movq	%rdi, (%rbp)
    000009d7: 	movq	0xd0(%rsp), %r15
    000009df: 	movq	%r15, %rax
    000009e2: 	addq	%r13, %rax
    000009e5: 	je	.Ltmp1045 # Offset: 2533
    000009e7: 	testq	%r15, %r15
    000009ea: 	je	.Ltmp1046 # Offset: 2538
.Ltmp1045:
    000009f0: 	movq	%r13, 0xa8(%rsp)
    000009f8: 	cmpq	$0xf, %r13
    000009fc: 	ja	.Ltmp1047 # Offset: 2556
    00000a02: 	cmpq	$0x1, %r13
    00000a06: 	jne	.Ltmp1048 # Offset: 2566
    00000a0c: 	movzbl	(%r15), %eax
    00000a10: 	movb	%al, 0x10(%rbp)
.Ltmp1223:
    00000a13: 	movq	%r13, 0x8(%rbp)
    00000a17: 	movb	$0x0, (%rdi,%r13)
    00000a1c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a23: 	addq	$0x20, %rax
    00000a27: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1207:
    00000a2e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a35: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a3c: 	je	.Ltmp1049 # Offset: 2620
.Ltmp1206:
    00000a42: 	movq	-0x20(%rax), %rbp
    00000a46: 	callq	clock@PLT # Offset: 2630
    00000a4b: 	pxor	%xmm0, %xmm0
    00000a4f: 	movq	%rax, end_time(%rip)
    00000a56: 	movq	%rbp, %rdi
    00000a59: 	subq	start_time(%rip), %rax
    00000a60: 	cvtsi2sd	%rax, %xmm0
    00000a65: 	divsd	DATAat0x17358(%rip), %xmm0
    00000a6d: 	callq	_Z13record_resultdPKc # Offset: 2669
    00000a72: 	movq	0xd0(%rsp), %rdi
    00000a7a: 	cmpq	0x88(%rsp), %rdi
    00000a82: 	je	.Ltmp1050 # Offset: 2690
    00000a84: 	movq	0xe0(%rsp), %rax
    00000a8c: 	leaq	0x1(%rax), %rsi
    00000a90: 	callq	_ZdlPvm@PLT # Offset: 2704
.Ltmp1050:
    00000a95: 	movq	0x90(%rsp), %rsi
    00000a9d: 	leaq	DATAat0x1722a(%rip), %rdx
    00000aa4: 	movq	%r14, %rdi
    00000aa7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2727
    00000aac: 	callq	clock@PLT # Offset: 2732
    00000ab1: 	movl	iterations(%rip), %edx
    00000ab7: 	movq	%rax, start_time(%rip)
    00000abe: 	testl	%edx, %edx
    00000ac0: 	jle	.Ltmp1051 # Offset: 2752
    00000ac6: 	movsd	0x80(%rsp), %xmm0
    00000acf: 	addsd	0x68(%rsp), %xmm0
    00000ad5: 	pxor	%xmm4, %xmm4
    00000ad9: 	xorl	%r13d, %r13d
    00000adc: 	addsd	0x78(%rsp), %xmm0
    00000ae2: 	movsd	0x70(%rsp), %xmm5
    00000ae8: 	leaq	init_value(%rip), %rbp
    00000aef: 	movsd	%xmm4, 0x60(%rsp)
    00000af5: 	movsd	DATAat0x17350(%rip), %xmm6
    00000afd: 	movsd	DATAat0x17370(%rip), %xmm3
    00000b05: 	leaq	DATAat0x171d6(%rip), %r15
    00000b0c: 	addsd	%xmm0, %xmm5
    00000b10: 	movsd	%xmm6, 0x50(%rsp)
    00000b16: 	movsd	%xmm3, 0x48(%rsp)
    00000b1c: 	movapd	%xmm5, %xmm6
    00000b20: 	movsd	%xmm5, 0x10(%rsp)
    00000b26: 	unpcklpd	%xmm6, %xmm6
    00000b2a: 	movaps	%xmm6, (%rsp)
    00000b2e: 	nop # Size: 2
.Ltmp1055:
    00000b30: 	movq	%r12, %rax
    00000b33: 	pxor	%xmm1, %xmm1
    00000b37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1052:
    00000b40: 	movapd	(%rax), %xmm0
    00000b44: 	subpd	(%rsp), %xmm0
    00000b49: 	addq	$0x10, %rax
    00000b4d: 	addpd	%xmm0, %xmm1
    00000b51: 	cmpq	%rbx, %rax
    00000b54: 	jne	.Ltmp1052 # Offset: 2900
    00000b56: 	movsd	(%rbp), %xmm2
    00000b5b: 	subsd	0x10(%rsp), %xmm2
    00000b61: 	movapd	%xmm1, %xmm7
    00000b65: 	mulsd	0x48(%rsp), %xmm2
    00000b6b: 	unpckhpd	%xmm7, %xmm7
    00000b6f: 	movsd	0x60(%rsp), %xmm6
    00000b75: 	movapd	%xmm7, %xmm0
    00000b79: 	subsd	%xmm2, %xmm0
    00000b7d: 	subsd	%xmm2, %xmm1
    00000b81: 	addsd	%xmm1, %xmm0
    00000b85: 	comisd	%xmm0, %xmm6
    00000b89: 	jbe	.Ltmp1053 # Offset: 2953
    00000b8b: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1053:
    00000b93: 	movsd	0x50(%rsp), %xmm3
    00000b99: 	comisd	%xmm0, %xmm3
    00000b9d: 	jbe	.Ltmp1054 # Offset: 2973
.Ltmp1184:
    00000ba3: 	addl	$0x1, %r13d
    00000ba7: 	cmpl	%edx, %r13d
    00000baa: 	jl	.Ltmp1055 # Offset: 2986
.Ltmp1051:
    00000bac: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000bb3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000bba: 	subq	$0x20, %rax
    00000bbe: 	cmpq	%rax, %rbp
    00000bc1: 	je	.Ltmp1056 # Offset: 3009
    00000bc7: 	leaq	0x10(%rbp), %rdi
    00000bcb: 	movq	0xd8(%rsp), %r13
    00000bd3: 	movq	%rdi, (%rbp)
    00000bd7: 	movq	0xd0(%rsp), %r15
    00000bdf: 	movq	%r15, %rax
    00000be2: 	addq	%r13, %rax
    00000be5: 	je	.Ltmp1057 # Offset: 3045
    00000be7: 	testq	%r15, %r15
    00000bea: 	je	.Ltmp1058 # Offset: 3050
.Ltmp1057:
    00000bf0: 	movq	%r13, 0xa8(%rsp)
    00000bf8: 	cmpq	$0xf, %r13
    00000bfc: 	ja	.Ltmp1059 # Offset: 3068
    00000c02: 	cmpq	$0x1, %r13
    00000c06: 	jne	.Ltmp1060 # Offset: 3078
    00000c0c: 	movzbl	(%r15), %eax
    00000c10: 	movb	%al, 0x10(%rbp)
.Ltmp1236:
    00000c13: 	movq	%r13, 0x8(%rbp)
    00000c17: 	movb	$0x0, (%rdi,%r13)
    00000c1c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c23: 	addq	$0x20, %rax
    00000c27: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1194:
    00000c2e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c35: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c3c: 	je	.Ltmp1061 # Offset: 3132
.Ltmp1193:
    00000c42: 	movq	-0x20(%rax), %rbp
    00000c46: 	callq	clock@PLT # Offset: 3142
    00000c4b: 	pxor	%xmm0, %xmm0
    00000c4f: 	movq	%rax, end_time(%rip)
    00000c56: 	movq	%rbp, %rdi
    00000c59: 	subq	start_time(%rip), %rax
    00000c60: 	cvtsi2sd	%rax, %xmm0
    00000c65: 	divsd	DATAat0x17358(%rip), %xmm0
    00000c6d: 	callq	_Z13record_resultdPKc # Offset: 3181
    00000c72: 	movq	0xd0(%rsp), %rdi
    00000c7a: 	cmpq	0x88(%rsp), %rdi
    00000c82: 	je	.Ltmp1062 # Offset: 3202
    00000c84: 	movq	0xe0(%rsp), %rax
    00000c8c: 	leaq	0x1(%rax), %rsi
    00000c90: 	callq	_ZdlPvm@PLT # Offset: 3216
.Ltmp1062:
    00000c95: 	movq	0x90(%rsp), %rsi
    00000c9d: 	leaq	DATAat0x17247(%rip), %rdx
    00000ca4: 	movq	%r14, %rdi
    00000ca7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3239
    00000cac: 	callq	clock@PLT # Offset: 3244
    00000cb1: 	movl	iterations(%rip), %edx
    00000cb7: 	movq	%rax, start_time(%rip)
    00000cbe: 	testl	%edx, %edx
    00000cc0: 	jle	.Ltmp1063 # Offset: 3264
    00000cc6: 	movsd	DATAat0x17370(%rip), %xmm5
    00000cce: 	movsd	0x68(%rsp), %xmm3
    00000cd4: 	pxor	%xmm7, %xmm7
    00000cd8: 	xorl	%r13d, %r13d
    00000cdb: 	movsd	0x78(%rsp), %xmm4
    00000ce1: 	movsd	%xmm7, 0x60(%rsp)
    00000ce7: 	movsd	0x70(%rsp), %xmm7
    00000ced: 	leaq	init_value(%rip), %rbp
    00000cf4: 	unpcklpd	%xmm3, %xmm3
    00000cf8: 	movsd	%xmm5, 0x48(%rsp)
    00000cfe: 	movsd	0x80(%rsp), %xmm5
    00000d07: 	leaq	DATAat0x171d6(%rip), %r15
    00000d0e: 	movaps	%xmm3, (%rsp)
    00000d12: 	movsd	DATAat0x17350(%rip), %xmm3
    00000d1a: 	unpcklpd	%xmm7, %xmm7
    00000d1e: 	unpcklpd	%xmm4, %xmm4
    00000d22: 	unpcklpd	%xmm5, %xmm5
    00000d26: 	movaps	%xmm7, 0x10(%rsp)
    00000d2b: 	movsd	%xmm3, 0x50(%rsp)
    00000d31: 	movaps	%xmm4, 0x20(%rsp)
    00000d36: 	movaps	%xmm5, 0x30(%rsp)
    00000d3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1067:
    00000d40: 	movq	%r12, %rax
    00000d43: 	pxor	%xmm1, %xmm1
    00000d47: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1064:
    00000d50: 	movapd	(%rax), %xmm0
    00000d54: 	subpd	(%rsp), %xmm0
    00000d59: 	addq	$0x10, %rax
    00000d5d: 	subpd	0x30(%rsp), %xmm0
    00000d63: 	subpd	0x20(%rsp), %xmm0
    00000d69: 	subpd	0x10(%rsp), %xmm0
    00000d6f: 	addpd	%xmm0, %xmm1
    00000d73: 	cmpq	%rbx, %rax
    00000d76: 	jne	.Ltmp1064 # Offset: 3446
    00000d78: 	movsd	(%rbp), %xmm0
    00000d7d: 	subsd	0x68(%rsp), %xmm0
    00000d83: 	movapd	%xmm1, %xmm3
    00000d87: 	subsd	0x80(%rsp), %xmm0
    00000d90: 	subsd	0x78(%rsp), %xmm0
    00000d96: 	unpckhpd	%xmm3, %xmm3
    00000d9a: 	subsd	0x70(%rsp), %xmm0
    00000da0: 	mulsd	0x48(%rsp), %xmm0
    00000da6: 	movapd	%xmm3, %xmm2
    00000daa: 	movsd	0x60(%rsp), %xmm7
    00000db0: 	subsd	%xmm0, %xmm2
    00000db4: 	subsd	%xmm0, %xmm1
    00000db8: 	addsd	%xmm1, %xmm2
    00000dbc: 	comisd	%xmm2, %xmm7
    00000dc0: 	movapd	%xmm2, %xmm0
    00000dc4: 	jbe	.Ltmp1065 # Offset: 3524
    00000dc6: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1065:
    00000dce: 	movsd	0x50(%rsp), %xmm4
    00000dd4: 	comisd	%xmm0, %xmm4
    00000dd8: 	jbe	.Ltmp1066 # Offset: 3544
.Ltmp1183:
    00000dde: 	addl	$0x1, %r13d
    00000de2: 	cmpl	%edx, %r13d
    00000de5: 	jl	.Ltmp1067 # Offset: 3557
.Ltmp1063:
    00000deb: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000df2: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000df9: 	subq	$0x20, %rax
    00000dfd: 	cmpq	%rax, %rbp
    00000e00: 	je	.Ltmp1068 # Offset: 3584
    00000e06: 	leaq	0x10(%rbp), %rdi
    00000e0a: 	movq	0xd8(%rsp), %r13
    00000e12: 	movq	%rdi, (%rbp)
    00000e16: 	movq	0xd0(%rsp), %r15
    00000e1e: 	movq	%r15, %rax
    00000e21: 	addq	%r13, %rax
    00000e24: 	je	.Ltmp1069 # Offset: 3620
    00000e26: 	testq	%r15, %r15
    00000e29: 	je	.Ltmp1070 # Offset: 3625
.Ltmp1069:
    00000e2f: 	movq	%r13, 0xa8(%rsp)
    00000e37: 	cmpq	$0xf, %r13
    00000e3b: 	ja	.Ltmp1071 # Offset: 3643
    00000e41: 	cmpq	$0x1, %r13
    00000e45: 	jne	.Ltmp1072 # Offset: 3653
    00000e4b: 	movzbl	(%r15), %eax
    00000e4f: 	movb	%al, 0x10(%rbp)
.Ltmp1220:
    00000e52: 	movq	%r13, 0x8(%rbp)
    00000e56: 	movb	$0x0, (%rdi,%r13)
    00000e5b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e62: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e69: 	addq	$0x20, %rax
    00000e6d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e74: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000e7b: 	je	.Ltmp1073 # Offset: 3707
.Ltmp1196:
    00000e81: 	movq	-0x20(%rax), %rbp
    00000e85: 	callq	clock@PLT # Offset: 3717
    00000e8a: 	pxor	%xmm0, %xmm0
    00000e8e: 	movq	%rax, end_time(%rip)
    00000e95: 	movq	%rbp, %rdi
    00000e98: 	subq	start_time(%rip), %rax
    00000e9f: 	cvtsi2sd	%rax, %xmm0
    00000ea4: 	divsd	DATAat0x17358(%rip), %xmm0
    00000eac: 	callq	_Z13record_resultdPKc # Offset: 3756
    00000eb1: 	movq	0xd0(%rsp), %rdi
    00000eb9: 	cmpq	0x88(%rsp), %rdi
    00000ec1: 	je	.Ltmp1074 # Offset: 3777
    00000ec3: 	movq	0xe0(%rsp), %rax
    00000ecb: 	leaq	0x1(%rax), %rsi
    00000ecf: 	callq	_ZdlPvm@PLT # Offset: 3791
.Ltmp1074:
    00000ed4: 	movq	0x90(%rsp), %rsi
    00000edc: 	leaq	DATAat0x17265(%rip), %rdx
    00000ee3: 	movq	%r14, %rdi
    00000ee6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3814
    00000eeb: 	callq	clock@PLT # Offset: 3819
    00000ef0: 	movl	iterations(%rip), %edx
    00000ef6: 	movq	%rax, start_time(%rip)
    00000efd: 	testl	%edx, %edx
    00000eff: 	jle	.Ltmp1075 # Offset: 3839
    00000f05: 	movsd	0x68(%rsp), %xmm6
    00000f0b: 	movsd	DATAat0x17370(%rip), %xmm4
    00000f13: 	pxor	%xmm5, %xmm5
    00000f17: 	xorl	%r13d, %r13d
    00000f1a: 	leaq	init_value(%rip), %rbp
    00000f21: 	movsd	%xmm5, 0x60(%rsp)
    00000f27: 	leaq	DATAat0x171d6(%rip), %r15
    00000f2e: 	unpcklpd	%xmm6, %xmm6
    00000f32: 	movsd	%xmm4, 0x48(%rsp)
    00000f38: 	movaps	%xmm6, (%rsp)
    00000f3c: 	movsd	DATAat0x17350(%rip), %xmm6
    00000f44: 	movsd	%xmm6, 0x50(%rsp)
    00000f4a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1079:
    00000f50: 	movq	%r12, %rax
    00000f53: 	pxor	%xmm0, %xmm0
    00000f57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1076:
    00000f60: 	movapd	(%rsp), %xmm1
    00000f65: 	mulpd	(%rax), %xmm1
    00000f69: 	addq	$0x10, %rax
    00000f6d: 	addpd	%xmm1, %xmm0
    00000f71: 	cmpq	%rbx, %rax
    00000f74: 	jne	.Ltmp1076 # Offset: 3956
    00000f76: 	movsd	0x68(%rsp), %xmm2
    00000f7c: 	mulsd	(%rbp), %xmm2
    00000f81: 	movapd	%xmm0, %xmm4
    00000f85: 	mulsd	0x48(%rsp), %xmm2
    00000f8b: 	unpckhpd	%xmm4, %xmm4
    00000f8f: 	movsd	0x60(%rsp), %xmm6
    00000f95: 	movapd	%xmm4, %xmm1
    00000f99: 	subsd	%xmm2, %xmm1
    00000f9d: 	subsd	%xmm2, %xmm0
    00000fa1: 	addsd	%xmm1, %xmm0
    00000fa5: 	comisd	%xmm0, %xmm6
    00000fa9: 	jbe	.Ltmp1077 # Offset: 4009
    00000fab: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1077:
    00000fb3: 	movsd	0x50(%rsp), %xmm3
    00000fb9: 	comisd	%xmm0, %xmm3
    00000fbd: 	jbe	.Ltmp1078 # Offset: 4029
.Ltmp1191:
    00000fc3: 	addl	$0x1, %r13d
    00000fc7: 	cmpl	%edx, %r13d
    00000fca: 	jl	.Ltmp1079 # Offset: 4042
.Ltmp1075:
    00000fcc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fd3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000fda: 	subq	$0x20, %rax
    00000fde: 	cmpq	%rax, %rbp
    00000fe1: 	je	.Ltmp1080 # Offset: 4065
    00000fe7: 	leaq	0x10(%rbp), %rdi
    00000feb: 	movq	0xd8(%rsp), %r13
    00000ff3: 	movq	%rdi, (%rbp)
    00000ff7: 	movq	0xd0(%rsp), %r15
    00000fff: 	movq	%r15, %rax
    00001002: 	addq	%r13, %rax
    00001005: 	je	.Ltmp1081 # Offset: 4101
    00001007: 	testq	%r15, %r15
    0000100a: 	je	.Ltmp1082 # Offset: 4106
.Ltmp1081:
    00001010: 	movq	%r13, 0xa8(%rsp)
    00001018: 	cmpq	$0xf, %r13
    0000101c: 	ja	.Ltmp1083 # Offset: 4124
    00001022: 	cmpq	$0x1, %r13
    00001026: 	jne	.Ltmp1084 # Offset: 4134
    0000102c: 	movzbl	(%r15), %eax
    00001030: 	movb	%al, 0x10(%rbp)
.Ltmp1228:
    00001033: 	movq	%r13, 0x8(%rbp)
    00001037: 	movb	$0x0, (%rdi,%r13)
    0000103c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001043: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000104a: 	addq	$0x20, %rax
    0000104e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001055: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000105c: 	je	.Ltmp1085 # Offset: 4188
.Ltmp1192:
    00001062: 	movq	-0x20(%rax), %rbp
    00001066: 	callq	clock@PLT # Offset: 4198
    0000106b: 	pxor	%xmm0, %xmm0
    0000106f: 	movq	%rax, end_time(%rip)
    00001076: 	movq	%rbp, %rdi
    00001079: 	subq	start_time(%rip), %rax
    00001080: 	cvtsi2sd	%rax, %xmm0
    00001085: 	divsd	DATAat0x17358(%rip), %xmm0
    0000108d: 	callq	_Z13record_resultdPKc # Offset: 4237
    00001092: 	movq	0xd0(%rsp), %rdi
    0000109a: 	cmpq	0x88(%rsp), %rdi
    000010a2: 	je	.Ltmp1086 # Offset: 4258
    000010a4: 	movq	0xe0(%rsp), %rax
    000010ac: 	leaq	0x1(%rax), %rsi
    000010b0: 	callq	_ZdlPvm@PLT # Offset: 4272
.Ltmp1086:
    000010b5: 	movq	0x90(%rsp), %rsi
    000010bd: 	leaq	DATAat0x17278(%rip), %rdx
    000010c4: 	movq	%r14, %rdi
    000010c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4295
    000010cc: 	callq	clock@PLT # Offset: 4300
    000010d1: 	movl	iterations(%rip), %edx
    000010d7: 	movq	%rax, start_time(%rip)
    000010de: 	testl	%edx, %edx
    000010e0: 	jle	.Ltmp1087 # Offset: 4320
    000010e6: 	movsd	0x80(%rsp), %xmm0
    000010ef: 	mulsd	0x68(%rsp), %xmm0
    000010f5: 	pxor	%xmm7, %xmm7
    000010f9: 	xorl	%r13d, %r13d
    000010fc: 	mulsd	0x78(%rsp), %xmm0
    00001102: 	movsd	0x70(%rsp), %xmm6
    00001108: 	leaq	init_value(%rip), %rbp
    0000110f: 	movsd	%xmm7, 0x60(%rsp)
    00001115: 	movsd	DATAat0x17350(%rip), %xmm3
    0000111d: 	movsd	DATAat0x17370(%rip), %xmm5
    00001125: 	leaq	DATAat0x171d6(%rip), %r15
    0000112c: 	movsd	%xmm3, 0x50(%rsp)
    00001132: 	movsd	%xmm5, 0x48(%rsp)
    00001138: 	mulsd	%xmm0, %xmm6
    0000113c: 	movapd	%xmm6, %xmm3
    00001140: 	movsd	%xmm6, 0x10(%rsp)
    00001146: 	unpcklpd	%xmm3, %xmm3
    0000114a: 	movaps	%xmm3, (%rsp)
    0000114e: 	nop # Size: 2
.Ltmp1091:
    00001150: 	movq	%r12, %rax
    00001153: 	pxor	%xmm0, %xmm0
    00001157: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1088:
    00001160: 	movapd	(%rsp), %xmm1
    00001165: 	mulpd	(%rax), %xmm1
    00001169: 	addq	$0x10, %rax
    0000116d: 	addpd	%xmm1, %xmm0
    00001171: 	cmpq	%rbx, %rax
    00001174: 	jne	.Ltmp1088 # Offset: 4468
    00001176: 	movsd	0x10(%rsp), %xmm2
    0000117c: 	mulsd	(%rbp), %xmm2
    00001181: 	movapd	%xmm0, %xmm5
    00001185: 	mulsd	0x48(%rsp), %xmm2
    0000118b: 	unpckhpd	%xmm5, %xmm5
    0000118f: 	movapd	%xmm5, %xmm1
    00001193: 	movsd	0x60(%rsp), %xmm5
    00001199: 	subsd	%xmm2, %xmm1
    0000119d: 	subsd	%xmm2, %xmm0
    000011a1: 	addsd	%xmm1, %xmm0
    000011a5: 	comisd	%xmm0, %xmm5
    000011a9: 	jbe	.Ltmp1089 # Offset: 4521
    000011ab: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1089:
    000011b3: 	movsd	0x50(%rsp), %xmm6
    000011b9: 	comisd	%xmm0, %xmm6
    000011bd: 	jbe	.Ltmp1090 # Offset: 4541
.Ltmp1190:
    000011c3: 	addl	$0x1, %r13d
    000011c7: 	cmpl	%edx, %r13d
    000011ca: 	jl	.Ltmp1091 # Offset: 4554
.Ltmp1087:
    000011cc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000011da: 	subq	$0x20, %rax
    000011de: 	cmpq	%rax, %rbp
    000011e1: 	je	.Ltmp1092 # Offset: 4577
    000011e7: 	leaq	0x10(%rbp), %rdi
    000011eb: 	movq	0xd8(%rsp), %r13
    000011f3: 	movq	%rdi, (%rbp)
    000011f7: 	movq	0xd0(%rsp), %r15
    000011ff: 	movq	%r15, %rax
    00001202: 	addq	%r13, %rax
    00001205: 	je	.Ltmp1093 # Offset: 4613
    00001207: 	testq	%r15, %r15
    0000120a: 	je	.Ltmp1094 # Offset: 4618
.Ltmp1093:
    00001210: 	movq	%r13, 0xa8(%rsp)
    00001218: 	cmpq	$0xf, %r13
    0000121c: 	ja	.Ltmp1095 # Offset: 4636
    00001222: 	cmpq	$0x1, %r13
    00001226: 	jne	.Ltmp1096 # Offset: 4646
    0000122c: 	movzbl	(%r15), %eax
    00001230: 	movb	%al, 0x10(%rbp)
.Ltmp1221:
    00001233: 	movq	%r13, 0x8(%rbp)
    00001237: 	movb	$0x0, (%rdi,%r13)
    0000123c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001243: 	addq	$0x20, %rax
    00001247: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1209:
    0000124e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001255: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000125c: 	je	.Ltmp1097 # Offset: 4700
.Ltmp1208:
    00001262: 	movq	-0x20(%rax), %rbp
    00001266: 	callq	clock@PLT # Offset: 4710
    0000126b: 	pxor	%xmm0, %xmm0
    0000126f: 	movq	%rax, end_time(%rip)
    00001276: 	movq	%rbp, %rdi
    00001279: 	subq	start_time(%rip), %rax
    00001280: 	cvtsi2sd	%rax, %xmm0
    00001285: 	divsd	DATAat0x17358(%rip), %xmm0
    0000128d: 	callq	_Z13record_resultdPKc # Offset: 4749
    00001292: 	movq	0xd0(%rsp), %rdi
    0000129a: 	cmpq	0x88(%rsp), %rdi
    000012a2: 	je	.Ltmp1098 # Offset: 4770
    000012a4: 	movq	0xe0(%rsp), %rax
    000012ac: 	leaq	0x1(%rax), %rsi
    000012b0: 	callq	_ZdlPvm@PLT # Offset: 4784
.Ltmp1098:
    000012b5: 	movq	0x90(%rsp), %rsi
    000012bd: 	leaq	DATAat0x17308(%rip), %rdx
    000012c4: 	movq	%r14, %rdi
    000012c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4807
    000012cc: 	callq	clock@PLT # Offset: 4812
    000012d1: 	movl	iterations(%rip), %edx
    000012d7: 	movq	%rax, start_time(%rip)
    000012de: 	testl	%edx, %edx
    000012e0: 	jle	.Ltmp1099 # Offset: 4832
    000012e6: 	movsd	0x80(%rsp), %xmm0
    000012ef: 	pxor	%xmm7, %xmm7
    000012f3: 	movsd	0x70(%rsp), %xmm3
    000012f9: 	xorl	%r13d, %r13d
    000012fc: 	mulsd	0x68(%rsp), %xmm0
    00001302: 	movsd	DATAat0x17370(%rip), %xmm6
    0000130a: 	movsd	%xmm7, 0x60(%rsp)
    00001310: 	leaq	init_value(%rip), %rbp
    00001317: 	mulsd	0x78(%rsp), %xmm0
    0000131d: 	movsd	DATAat0x17350(%rip), %xmm4
    00001325: 	leaq	DATAat0x171d6(%rip), %r15
    0000132c: 	movsd	%xmm6, 0x48(%rsp)
    00001332: 	movsd	%xmm4, 0x50(%rsp)
    00001338: 	mulsd	%xmm0, %xmm3
    0000133c: 	movapd	%xmm3, %xmm7
    00001340: 	movsd	%xmm3, 0x10(%rsp)
    00001346: 	unpcklpd	%xmm7, %xmm7
    0000134a: 	movaps	%xmm7, (%rsp)
    0000134e: 	nop # Size: 2
.Ltmp1103:
    00001350: 	movq	%r12, %rax
    00001353: 	pxor	%xmm0, %xmm0
    00001357: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1100:
    00001360: 	movapd	(%rsp), %xmm1
    00001365: 	addpd	(%rax), %xmm1
    00001369: 	addq	$0x10, %rax
    0000136d: 	addpd	%xmm1, %xmm0
    00001371: 	cmpq	%rbx, %rax
    00001374: 	jne	.Ltmp1100 # Offset: 4980
    00001376: 	movsd	0x10(%rsp), %xmm2
    0000137c: 	addsd	(%rbp), %xmm2
    00001381: 	movapd	%xmm0, %xmm6
    00001385: 	mulsd	0x48(%rsp), %xmm2
    0000138b: 	unpckhpd	%xmm6, %xmm6
    0000138f: 	movsd	0x60(%rsp), %xmm3
    00001395: 	movapd	%xmm6, %xmm1
    00001399: 	subsd	%xmm2, %xmm1
    0000139d: 	subsd	%xmm2, %xmm0
    000013a1: 	addsd	%xmm1, %xmm0
    000013a5: 	comisd	%xmm0, %xmm3
    000013a9: 	jbe	.Ltmp1101 # Offset: 5033
    000013ab: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1101:
    000013b3: 	movsd	0x50(%rsp), %xmm7
    000013b9: 	comisd	%xmm0, %xmm7
    000013bd: 	jbe	.Ltmp1102 # Offset: 5053
.Ltmp1189:
    000013c3: 	addl	$0x1, %r13d
    000013c7: 	cmpl	%edx, %r13d
    000013ca: 	jl	.Ltmp1103 # Offset: 5066
.Ltmp1099:
    000013cc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013d3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000013da: 	subq	$0x20, %rax
    000013de: 	cmpq	%rax, %rbp
    000013e1: 	je	.Ltmp1104 # Offset: 5089
    000013e7: 	leaq	0x10(%rbp), %rdi
    000013eb: 	movq	0xd8(%rsp), %r13
    000013f3: 	movq	%rdi, (%rbp)
    000013f7: 	movq	0xd0(%rsp), %r15
    000013ff: 	movq	%r15, %rax
    00001402: 	addq	%r13, %rax
    00001405: 	je	.Ltmp1105 # Offset: 5125
    00001407: 	testq	%r15, %r15
    0000140a: 	je	.Ltmp1106 # Offset: 5130
.Ltmp1105:
    00001410: 	movq	%r13, 0xa8(%rsp)
    00001418: 	cmpq	$0xf, %r13
    0000141c: 	ja	.Ltmp1107 # Offset: 5148
    00001422: 	cmpq	$0x1, %r13
    00001426: 	jne	.Ltmp1108 # Offset: 5158
    0000142c: 	movzbl	(%r15), %eax
    00001430: 	movb	%al, 0x10(%rbp)
.Ltmp1226:
    00001433: 	movq	%r13, 0x8(%rbp)
    00001437: 	movb	$0x0, (%rdi,%r13)
    0000143c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001443: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000144a: 	addq	$0x20, %rax
    0000144e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001455: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000145c: 	je	.Ltmp1109 # Offset: 5212
.Ltmp1205:
    00001462: 	movq	-0x20(%rax), %rbp
    00001466: 	callq	clock@PLT # Offset: 5222
    0000146b: 	pxor	%xmm0, %xmm0
    0000146f: 	movq	%rax, end_time(%rip)
    00001476: 	movq	%rbp, %rdi
    00001479: 	subq	start_time(%rip), %rax
    00001480: 	cvtsi2sd	%rax, %xmm0
    00001485: 	divsd	DATAat0x17358(%rip), %xmm0
    0000148d: 	callq	_Z13record_resultdPKc # Offset: 5261
    00001492: 	movq	0xd0(%rsp), %rdi
    0000149a: 	cmpq	0x88(%rsp), %rdi
    000014a2: 	je	.Ltmp1110 # Offset: 5282
    000014a4: 	movq	0xe0(%rsp), %rax
    000014ac: 	leaq	0x1(%rax), %rsi
    000014b0: 	callq	_ZdlPvm@PLT # Offset: 5296
.Ltmp1110:
    000014b5: 	movq	0x90(%rsp), %rsi
    000014bd: 	leaq	DATAat0x17328(%rip), %rdx
    000014c4: 	movq	%r14, %rdi
    000014c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5319
    000014cc: 	callq	clock@PLT # Offset: 5324
    000014d1: 	movl	iterations(%rip), %edx
    000014d7: 	movq	%rax, start_time(%rip)
    000014de: 	testl	%edx, %edx
    000014e0: 	jle	.Ltmp1111 # Offset: 5344
    000014e6: 	movsd	DATAat0x17370(%rip), %xmm3
    000014ee: 	pxor	%xmm5, %xmm5
    000014f2: 	movsd	0x68(%rsp), %xmm4
    000014f8: 	xorl	%r13d, %r13d
    000014fb: 	movsd	DATAat0x17350(%rip), %xmm6
    00001503: 	movsd	%xmm5, 0x60(%rsp)
    00001509: 	movsd	0x70(%rsp), %xmm5
    0000150f: 	leaq	init_value(%rip), %rbp
    00001516: 	movsd	%xmm3, 0x48(%rsp)
    0000151c: 	unpcklpd	%xmm4, %xmm4
    00001520: 	movsd	0x80(%rsp), %xmm3
    00001529: 	leaq	DATAat0x171d6(%rip), %r15
    00001530: 	movsd	%xmm6, 0x50(%rsp)
    00001536: 	movsd	0x78(%rsp), %xmm6
    0000153c: 	unpcklpd	%xmm5, %xmm5
    00001540: 	unpcklpd	%xmm3, %xmm3
    00001544: 	movaps	%xmm4, (%rsp)
    00001548: 	unpcklpd	%xmm6, %xmm6
    0000154c: 	movaps	%xmm5, 0x10(%rsp)
    00001551: 	movaps	%xmm6, 0x20(%rsp)
    00001556: 	movaps	%xmm3, 0x30(%rsp)
    0000155b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1115:
    00001560: 	movq	%r12, %rax
    00001563: 	pxor	%xmm1, %xmm1
    00001567: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1112:
    00001570: 	movapd	(%rsp), %xmm0
    00001575: 	mulpd	(%rax), %xmm0
    00001579: 	addq	$0x10, %rax
    0000157d: 	mulpd	0x30(%rsp), %xmm0
    00001583: 	mulpd	0x20(%rsp), %xmm0
    00001589: 	mulpd	0x10(%rsp), %xmm0
    0000158f: 	addpd	%xmm0, %xmm1
    00001593: 	cmpq	%rbx, %rax
    00001596: 	jne	.Ltmp1112 # Offset: 5526
    00001598: 	movsd	0x68(%rsp), %xmm0
    0000159e: 	mulsd	(%rbp), %xmm0
    000015a3: 	movapd	%xmm1, %xmm7
    000015a7: 	mulsd	0x80(%rsp), %xmm0
    000015b0: 	unpckhpd	%xmm7, %xmm7
    000015b4: 	mulsd	0x78(%rsp), %xmm0
    000015ba: 	movapd	%xmm7, %xmm2
    000015be: 	movsd	0x60(%rsp), %xmm7
    000015c4: 	mulsd	0x70(%rsp), %xmm0
    000015ca: 	mulsd	0x48(%rsp), %xmm0
    000015d0: 	subsd	%xmm0, %xmm2
    000015d4: 	subsd	%xmm0, %xmm1
    000015d8: 	addsd	%xmm1, %xmm2
    000015dc: 	comisd	%xmm2, %xmm7
    000015e0: 	movapd	%xmm2, %xmm0
    000015e4: 	jbe	.Ltmp1113 # Offset: 5604
    000015e6: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1113:
    000015ee: 	movsd	0x50(%rsp), %xmm5
    000015f4: 	comisd	%xmm0, %xmm5
    000015f8: 	jbe	.Ltmp1114 # Offset: 5624
.Ltmp1188:
    000015fe: 	addl	$0x1, %r13d
    00001602: 	cmpl	%edx, %r13d
    00001605: 	jl	.Ltmp1115 # Offset: 5637
.Ltmp1111:
    0000160b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001612: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001619: 	subq	$0x20, %rax
    0000161d: 	cmpq	%rax, %rbp
    00001620: 	je	.Ltmp1116 # Offset: 5664
    00001626: 	leaq	0x10(%rbp), %rdi
    0000162a: 	movq	0xd8(%rsp), %r13
    00001632: 	movq	%rdi, (%rbp)
    00001636: 	movq	0xd0(%rsp), %r15
    0000163e: 	movq	%r15, %rax
    00001641: 	addq	%r13, %rax
    00001644: 	je	.Ltmp1117 # Offset: 5700
    00001646: 	testq	%r15, %r15
    00001649: 	je	.Ltmp1118 # Offset: 5705
.Ltmp1117:
    0000164f: 	movq	%r13, 0xa8(%rsp)
    00001657: 	cmpq	$0xf, %r13
    0000165b: 	ja	.Ltmp1119 # Offset: 5723
    00001661: 	cmpq	$0x1, %r13
    00001665: 	jne	.Ltmp1120 # Offset: 5733
    0000166b: 	movzbl	(%r15), %eax
    0000166f: 	movb	%al, 0x10(%rbp)
.Ltmp1215:
    00001672: 	movq	%r13, 0x8(%rbp)
    00001676: 	movb	$0x0, (%rdi,%r13)
    0000167b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001682: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001689: 	addq	$0x20, %rax
    0000168d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001694: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000169b: 	je	.Ltmp1121 # Offset: 5787
.Ltmp1211:
    000016a1: 	movq	-0x20(%rax), %rbp
    000016a5: 	callq	clock@PLT # Offset: 5797
    000016aa: 	pxor	%xmm0, %xmm0
    000016ae: 	movq	%rax, end_time(%rip)
    000016b5: 	movq	%rbp, %rdi
    000016b8: 	subq	start_time(%rip), %rax
    000016bf: 	cvtsi2sd	%rax, %xmm0
    000016c4: 	divsd	DATAat0x17358(%rip), %xmm0
    000016cc: 	callq	_Z13record_resultdPKc # Offset: 5836
    000016d1: 	movq	0xd0(%rsp), %rdi
    000016d9: 	cmpq	0x88(%rsp), %rdi
    000016e1: 	je	.Ltmp1122 # Offset: 5857
    000016e3: 	movq	0xe0(%rsp), %rax
    000016eb: 	leaq	0x1(%rax), %rsi
    000016ef: 	callq	_ZdlPvm@PLT # Offset: 5871
.Ltmp1122:
    000016f4: 	movq	0x90(%rsp), %rsi
    000016fc: 	leaq	DATAat0x17296(%rip), %rdx
    00001703: 	movq	%r14, %rdi
    00001706: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5894
    0000170b: 	callq	clock@PLT # Offset: 5899
    00001710: 	movl	iterations(%rip), %edx
    00001716: 	movq	%rax, start_time(%rip)
    0000171d: 	testl	%edx, %edx
    0000171f: 	jle	.Ltmp1123 # Offset: 5919
    00001725: 	movsd	0x68(%rsp), %xmm7
    0000172b: 	movsd	DATAat0x17350(%rip), %xmm4
    00001733: 	pxor	%xmm3, %xmm3
    00001737: 	xorl	%r13d, %r13d
    0000173a: 	leaq	init_value(%rip), %rbp
    00001741: 	movsd	%xmm3, 0x60(%rsp)
    00001747: 	leaq	DATAat0x171d6(%rip), %r15
    0000174e: 	unpcklpd	%xmm7, %xmm7
    00001752: 	movsd	%xmm4, 0x50(%rsp)
    00001758: 	movaps	%xmm7, (%rsp)
    0000175c: 	movsd	DATAat0x17370(%rip), %xmm7
    00001764: 	movsd	%xmm7, 0x48(%rsp)
    0000176a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1127:
    00001770: 	movq	%r12, %rax
    00001773: 	pxor	%xmm1, %xmm1
    00001777: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1124:
    00001780: 	movapd	(%rax), %xmm0
    00001784: 	addq	$0x10, %rax
    00001788: 	divpd	(%rsp), %xmm0
    0000178d: 	addpd	%xmm0, %xmm1
    00001791: 	cmpq	%rbx, %rax
    00001794: 	jne	.Ltmp1124 # Offset: 6036
    00001796: 	movsd	(%rbp), %xmm2
    0000179b: 	divsd	0x68(%rsp), %xmm2
    000017a1: 	movapd	%xmm1, %xmm4
    000017a5: 	movsd	0x60(%rsp), %xmm3
    000017ab: 	mulsd	0x48(%rsp), %xmm2
    000017b1: 	unpckhpd	%xmm4, %xmm4
    000017b5: 	movapd	%xmm4, %xmm0
    000017b9: 	subsd	%xmm2, %xmm0
    000017bd: 	subsd	%xmm2, %xmm1
    000017c1: 	addsd	%xmm1, %xmm0
    000017c5: 	comisd	%xmm0, %xmm3
    000017c9: 	jbe	.Ltmp1125 # Offset: 6089
    000017cb: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1125:
    000017d3: 	movsd	0x50(%rsp), %xmm7
    000017d9: 	comisd	%xmm0, %xmm7
    000017dd: 	jbe	.Ltmp1126 # Offset: 6109
.Ltmp1187:
    000017e3: 	addl	$0x1, %r13d
    000017e7: 	cmpl	%edx, %r13d
    000017ea: 	jl	.Ltmp1127 # Offset: 6122
.Ltmp1123:
    000017ec: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000017fa: 	subq	$0x20, %rax
    000017fe: 	cmpq	%rax, %rbp
    00001801: 	je	.Ltmp1128 # Offset: 6145
    00001807: 	leaq	0x10(%rbp), %rdi
    0000180b: 	movq	0xd8(%rsp), %r13
    00001813: 	movq	%rdi, (%rbp)
    00001817: 	movq	0xd0(%rsp), %r15
    0000181f: 	movq	%r15, %rax
    00001822: 	addq	%r13, %rax
    00001825: 	je	.Ltmp1129 # Offset: 6181
    00001827: 	testq	%r15, %r15
    0000182a: 	je	.Ltmp1130 # Offset: 6186
.Ltmp1129:
    00001830: 	movq	%r13, 0xa8(%rsp)
    00001838: 	cmpq	$0xf, %r13
    0000183c: 	ja	.Ltmp1131 # Offset: 6204
    00001842: 	cmpq	$0x1, %r13
    00001846: 	jne	.Ltmp1132 # Offset: 6214
    0000184c: 	movzbl	(%r15), %eax
    00001850: 	movb	%al, 0x10(%rbp)
.Ltmp1214:
    00001853: 	movq	%r13, 0x8(%rbp)
    00001857: 	movb	$0x0, (%rdi,%r13)
    0000185c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001863: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000186a: 	addq	$0x20, %rax
    0000186e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001875: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000187c: 	je	.Ltmp1133 # Offset: 6268
.Ltmp1210:
    00001882: 	movq	-0x20(%rax), %rbp
    00001886: 	callq	clock@PLT # Offset: 6278
    0000188b: 	pxor	%xmm0, %xmm0
    0000188f: 	movq	%rax, end_time(%rip)
    00001896: 	movq	%rbp, %rdi
    00001899: 	subq	start_time(%rip), %rax
    000018a0: 	cvtsi2sd	%rax, %xmm0
    000018a5: 	divsd	DATAat0x17358(%rip), %xmm0
    000018ad: 	callq	_Z13record_resultdPKc # Offset: 6317
    000018b2: 	movq	0xd0(%rsp), %rdi
    000018ba: 	cmpq	0x88(%rsp), %rdi
    000018c2: 	je	.Ltmp1134 # Offset: 6338
    000018c4: 	movq	0xe0(%rsp), %rax
    000018cc: 	leaq	0x1(%rax), %rsi
    000018d0: 	callq	_ZdlPvm@PLT # Offset: 6352
.Ltmp1134:
    000018d5: 	movq	0x90(%rsp), %rsi
    000018dd: 	leaq	DATAat0x172a7(%rip), %rdx
    000018e4: 	movq	%r14, %rdi
    000018e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6375
    000018ec: 	callq	clock@PLT # Offset: 6380
    000018f1: 	movl	iterations(%rip), %edx
    000018f7: 	movq	%rax, start_time(%rip)
    000018fe: 	testl	%edx, %edx
    00001900: 	jle	.Ltmp1135 # Offset: 6400
    00001906: 	pxor	%xmm4, %xmm4
    0000190a: 	movsd	0x68(%rsp), %xmm0
    00001910: 	xorl	%r13d, %r13d
    00001913: 	movsd	DATAat0x17370(%rip), %xmm3
    0000191b: 	movsd	DATAat0x17350(%rip), %xmm6
    00001923: 	movsd	%xmm4, 0x60(%rsp)
    00001929: 	divsd	0x80(%rsp), %xmm0
    00001932: 	divsd	0x78(%rsp), %xmm0
    00001938: 	movapd	%xmm0, %xmm5
    0000193c: 	divsd	0x70(%rsp), %xmm5
    00001942: 	movapd	%xmm5, %xmm4
    00001946: 	movsd	%xmm5, 0x10(%rsp)
    0000194c: 	unpcklpd	%xmm4, %xmm4
    00001950: 	leaq	init_value(%rip), %rbp
    00001957: 	movsd	%xmm3, 0x48(%rsp)
    0000195d: 	leaq	DATAat0x171d6(%rip), %r15
    00001964: 	movsd	%xmm6, 0x50(%rsp)
    0000196a: 	movaps	%xmm4, (%rsp)
    0000196e: 	nop # Size: 2
.Ltmp1139:
    00001970: 	movq	%r12, %rax
    00001973: 	pxor	%xmm0, %xmm0
    00001977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1136:
    00001980: 	movapd	(%rsp), %xmm1
    00001985: 	addpd	(%rax), %xmm1
    00001989: 	addq	$0x10, %rax
    0000198d: 	addpd	%xmm1, %xmm0
    00001991: 	cmpq	%rax, %rbx
    00001994: 	jne	.Ltmp1136 # Offset: 6548
    00001996: 	movsd	0x10(%rsp), %xmm2
    0000199c: 	addsd	(%rbp), %xmm2
    000019a1: 	movapd	%xmm0, %xmm5
    000019a5: 	mulsd	0x48(%rsp), %xmm2
    000019ab: 	unpckhpd	%xmm5, %xmm5
    000019af: 	movsd	0x60(%rsp), %xmm6
    000019b5: 	movapd	%xmm5, %xmm1
    000019b9: 	subsd	%xmm2, %xmm1
    000019bd: 	subsd	%xmm2, %xmm0
    000019c1: 	addsd	%xmm1, %xmm0
    000019c5: 	comisd	%xmm0, %xmm6
    000019c9: 	jbe	.Ltmp1137 # Offset: 6601
    000019cb: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1137:
    000019d3: 	movsd	0x50(%rsp), %xmm4
    000019d9: 	comisd	%xmm0, %xmm4
    000019dd: 	jbe	.Ltmp1138 # Offset: 6621
.Ltmp1186:
    000019e3: 	addl	$0x1, %r13d
    000019e7: 	cmpl	%edx, %r13d
    000019ea: 	jl	.Ltmp1139 # Offset: 6634
.Ltmp1135:
    000019ec: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000019f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000019fa: 	subq	$0x20, %rax
    000019fe: 	cmpq	%rax, %rbp
    00001a01: 	je	.Ltmp1140 # Offset: 6657
    00001a07: 	leaq	0x10(%rbp), %rdi
    00001a0b: 	movq	0xd8(%rsp), %r13
    00001a13: 	movq	%rdi, (%rbp)
    00001a17: 	movq	0xd0(%rsp), %r15
    00001a1f: 	movq	%r15, %rax
    00001a22: 	addq	%r13, %rax
    00001a25: 	je	.Ltmp1141 # Offset: 6693
    00001a27: 	testq	%r15, %r15
    00001a2a: 	je	.Ltmp1142 # Offset: 6698
.Ltmp1141:
    00001a30: 	movq	%r13, 0xa8(%rsp)
    00001a38: 	cmpq	$0xf, %r13
    00001a3c: 	ja	.Ltmp1143 # Offset: 6716
    00001a42: 	cmpq	$0x1, %r13
    00001a46: 	jne	.Ltmp1144 # Offset: 6726
    00001a4c: 	movzbl	(%r15), %eax
    00001a50: 	movb	%al, 0x10(%rbp)
.Ltmp1217:
    00001a53: 	movq	%r13, 0x8(%rbp)
    00001a57: 	movb	$0x0, (%rdi,%r13)
    00001a5c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a63: 	addq	$0x20, %rax
    00001a67: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1213:
    00001a6e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a75: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a7c: 	je	.Ltmp1145 # Offset: 6780
.Ltmp1212:
    00001a82: 	movq	-0x20(%rax), %rbp
    00001a86: 	callq	clock@PLT # Offset: 6790
    00001a8b: 	pxor	%xmm0, %xmm0
    00001a8f: 	movq	%rax, end_time(%rip)
    00001a96: 	movq	%rbp, %rdi
    00001a99: 	subq	start_time(%rip), %rax
    00001aa0: 	cvtsi2sd	%rax, %xmm0
    00001aa5: 	divsd	DATAat0x17358(%rip), %xmm0
    00001aad: 	callq	_Z13record_resultdPKc # Offset: 6829
    00001ab2: 	movq	0xd0(%rsp), %rdi
    00001aba: 	cmpq	0x88(%rsp), %rdi
    00001ac2: 	je	.Ltmp1146 # Offset: 6850
    00001ac4: 	movq	0xe0(%rsp), %rax
    00001acc: 	leaq	0x1(%rax), %rsi
    00001ad0: 	callq	_ZdlPvm@PLT # Offset: 6864
.Ltmp1146:
    00001ad5: 	movq	0x90(%rsp), %rsi
    00001add: 	leaq	DATAat0x172c3(%rip), %rdx
    00001ae4: 	movq	%r14, %rdi
    00001ae7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6887
    00001aec: 	callq	clock@PLT # Offset: 6892
    00001af1: 	movl	iterations(%rip), %edx
    00001af7: 	movq	%rax, start_time(%rip)
    00001afe: 	testl	%edx, %edx
    00001b00: 	jle	.Ltmp1147 # Offset: 6912
    00001b06: 	movsd	0x68(%rsp), %xmm4
    00001b0c: 	pxor	%xmm5, %xmm5
    00001b10: 	movsd	0x78(%rsp), %xmm0
    00001b16: 	xorl	%r13d, %r13d
    00001b19: 	mulsd	0x80(%rsp), %xmm0
    00001b22: 	movsd	DATAat0x17370(%rip), %xmm3
    00001b2a: 	movsd	%xmm5, 0x60(%rsp)
    00001b30: 	leaq	init_value(%rip), %rbp
    00001b37: 	divsd	0x70(%rsp), %xmm0
    00001b3d: 	subsd	%xmm0, %xmm4
    00001b41: 	movsd	DATAat0x17350(%rip), %xmm6
    00001b49: 	leaq	DATAat0x171d6(%rip), %r15
    00001b50: 	movsd	%xmm3, 0x48(%rsp)
    00001b56: 	movsd	%xmm6, 0x50(%rsp)
    00001b5c: 	movapd	%xmm4, %xmm5
    00001b60: 	movsd	%xmm4, 0x10(%rsp)
    00001b66: 	unpcklpd	%xmm5, %xmm5
    00001b6a: 	movaps	%xmm5, (%rsp)
    00001b6e: 	nop # Size: 2
.Ltmp1151:
    00001b70: 	movq	%r12, %rax
    00001b73: 	pxor	%xmm0, %xmm0
    00001b77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1148:
    00001b80: 	movapd	(%rsp), %xmm1
    00001b85: 	addpd	(%rax), %xmm1
    00001b89: 	addq	$0x10, %rax
    00001b8d: 	addpd	%xmm1, %xmm0
    00001b91: 	cmpq	%rbx, %rax
    00001b94: 	jne	.Ltmp1148 # Offset: 7060
    00001b96: 	movsd	0x10(%rsp), %xmm2
    00001b9c: 	addsd	(%rbp), %xmm2
    00001ba1: 	movapd	%xmm0, %xmm6
    00001ba5: 	mulsd	0x48(%rsp), %xmm2
    00001bab: 	unpckhpd	%xmm6, %xmm6
    00001baf: 	movsd	0x60(%rsp), %xmm7
    00001bb5: 	movapd	%xmm6, %xmm1
    00001bb9: 	subsd	%xmm2, %xmm1
    00001bbd: 	subsd	%xmm2, %xmm0
    00001bc1: 	addsd	%xmm1, %xmm0
    00001bc5: 	comisd	%xmm0, %xmm7
    00001bc9: 	jbe	.Ltmp1149 # Offset: 7113
    00001bcb: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1149:
    00001bd3: 	movsd	0x50(%rsp), %xmm5
    00001bd9: 	comisd	%xmm0, %xmm5
    00001bdd: 	jbe	.Ltmp1150 # Offset: 7133
.Ltmp1180:
    00001be3: 	addl	$0x1, %r13d
    00001be7: 	cmpl	%edx, %r13d
    00001bea: 	jl	.Ltmp1151 # Offset: 7146
.Ltmp1147:
    00001bec: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001bf3: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001bfa: 	subq	$0x20, %rax
    00001bfe: 	cmpq	%rax, %rbp
    00001c01: 	je	.Ltmp1152 # Offset: 7169
    00001c07: 	leaq	0x10(%rbp), %rdi
    00001c0b: 	movq	0xd8(%rsp), %r13
    00001c13: 	movq	%rdi, (%rbp)
    00001c17: 	movq	0xd0(%rsp), %r15
    00001c1f: 	movq	%r15, %rax
    00001c22: 	addq	%r13, %rax
    00001c25: 	je	.Ltmp1153 # Offset: 7205
    00001c27: 	testq	%r15, %r15
    00001c2a: 	je	.Ltmp1154 # Offset: 7210
.Ltmp1153:
    00001c30: 	movq	%r13, 0xa8(%rsp)
    00001c38: 	cmpq	$0xf, %r13
    00001c3c: 	ja	.Ltmp1155 # Offset: 7228
    00001c42: 	cmpq	$0x1, %r13
    00001c46: 	jne	.Ltmp1156 # Offset: 7238
    00001c4c: 	movzbl	(%r15), %eax
    00001c50: 	movb	%al, 0x10(%rbp)
.Ltmp1234:
    00001c53: 	movq	%r13, 0x8(%rbp)
    00001c57: 	movb	$0x0, (%rdi,%r13)
    00001c5c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c63: 	addq	$0x20, %rax
    00001c67: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1202:
    00001c6e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c75: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c7c: 	je	.Ltmp1157 # Offset: 7292
.Ltmp1201:
    00001c82: 	movq	-0x20(%rax), %rbp
    00001c86: 	callq	clock@PLT # Offset: 7302
    00001c8b: 	pxor	%xmm0, %xmm0
    00001c8f: 	movq	%rax, end_time(%rip)
    00001c96: 	movq	%rbp, %rdi
    00001c99: 	subq	start_time(%rip), %rax
    00001ca0: 	cvtsi2sd	%rax, %xmm0
    00001ca5: 	divsd	DATAat0x17358(%rip), %xmm0
    00001cad: 	callq	_Z13record_resultdPKc # Offset: 7341
    00001cb2: 	movq	0xd0(%rsp), %rdi
    00001cba: 	cmpq	0x88(%rsp), %rdi
    00001cc2: 	je	.Ltmp1158 # Offset: 7362
    00001cc4: 	movq	0xe0(%rsp), %rax
    00001ccc: 	leaq	0x1(%rax), %rsi
    00001cd0: 	callq	_ZdlPvm@PLT # Offset: 7376
.Ltmp1158:
    00001cd5: 	movq	0x90(%rsp), %rsi
    00001cdd: 	leaq	DATAat0x172dc(%rip), %rdx
    00001ce4: 	movq	%r14, %rdi
    00001ce7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7399
    00001cec: 	callq	clock@PLT # Offset: 7404
    00001cf1: 	movl	iterations(%rip), %edx
    00001cf7: 	movq	%rax, start_time(%rip)
    00001cfe: 	testl	%edx, %edx
    00001d00: 	jle	.Ltmp1159 # Offset: 7424
    00001d06: 	movsd	0x78(%rsp), %xmm0
    00001d0c: 	movsd	0x68(%rsp), %xmm6
    00001d12: 	pxor	%xmm5, %xmm5
    00001d16: 	xorl	%r13d, %r13d
    00001d19: 	mulsd	0x80(%rsp), %xmm0
    00001d22: 	movsd	DATAat0x17370(%rip), %xmm4
    00001d2a: 	leaq	init_value(%rip), %rbp
    00001d31: 	movsd	%xmm5, 0x60(%rsp)
    00001d37: 	unpcklpd	%xmm6, %xmm6
    00001d3b: 	leaq	DATAat0x171d6(%rip), %r15
    00001d42: 	movaps	%xmm6, (%rsp)
    00001d46: 	movsd	DATAat0x17350(%rip), %xmm6
    00001d4e: 	movsd	%xmm4, 0x48(%rsp)
    00001d54: 	movsd	%xmm6, 0x50(%rsp)
    00001d5a: 	movapd	%xmm0, %xmm7
    00001d5e: 	divsd	0x70(%rsp), %xmm7
    00001d64: 	movapd	%xmm7, %xmm3
    00001d68: 	movsd	%xmm7, 0x20(%rsp)
    00001d6e: 	unpcklpd	%xmm3, %xmm3
    00001d72: 	movaps	%xmm3, 0x10(%rsp)
    00001d77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1163:
    00001d80: 	movq	%r12, %rax
    00001d83: 	pxor	%xmm1, %xmm1
    00001d87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1160:
    00001d90: 	movapd	(%rsp), %xmm0
    00001d95: 	addpd	(%rax), %xmm0
    00001d99: 	addq	$0x10, %rax
    00001d9d: 	subpd	0x10(%rsp), %xmm0
    00001da3: 	addpd	%xmm0, %xmm1
    00001da7: 	cmpq	%rbx, %rax
    00001daa: 	jne	.Ltmp1160 # Offset: 7594
    00001dac: 	movsd	0x68(%rsp), %xmm2
    00001db2: 	addsd	(%rbp), %xmm2
    00001db7: 	movapd	%xmm1, %xmm3
    00001dbb: 	subsd	0x20(%rsp), %xmm2
    00001dc1: 	mulsd	0x48(%rsp), %xmm2
    00001dc7: 	unpckhpd	%xmm3, %xmm3
    00001dcb: 	movapd	%xmm3, %xmm0
    00001dcf: 	movsd	0x60(%rsp), %xmm3
    00001dd5: 	subsd	%xmm2, %xmm0
    00001dd9: 	subsd	%xmm2, %xmm1
    00001ddd: 	addsd	%xmm1, %xmm0
    00001de1: 	comisd	%xmm0, %xmm3
    00001de5: 	jbe	.Ltmp1161 # Offset: 7653
    00001de7: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1161:
    00001def: 	movsd	0x50(%rsp), %xmm7
    00001df5: 	comisd	%xmm0, %xmm7
    00001df9: 	jbe	.Ltmp1162 # Offset: 7673
.Ltmp1179:
    00001dff: 	addl	$0x1, %r13d
    00001e03: 	cmpl	%edx, %r13d
    00001e06: 	jl	.Ltmp1163 # Offset: 7686
.Ltmp1159:
    00001e0c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001e13: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001e1a: 	subq	$0x20, %rax
    00001e1e: 	cmpq	%rax, %rbx
    00001e21: 	je	.Ltmp1164 # Offset: 7713
    00001e27: 	leaq	0x10(%rbx), %rdi
    00001e2b: 	movq	0xd8(%rsp), %r12
    00001e33: 	movq	%rdi, (%rbx)
    00001e36: 	movq	0xd0(%rsp), %rbp
    00001e3e: 	movq	%rbp, %rax
    00001e41: 	addq	%r12, %rax
    00001e44: 	je	.Ltmp1165 # Offset: 7748
    00001e46: 	testq	%rbp, %rbp
    00001e49: 	je	.Ltmp1166 # Offset: 7753
.Ltmp1165:
    00001e4f: 	movq	%r12, 0xa8(%rsp)
    00001e57: 	cmpq	$0xf, %r12
    00001e5b: 	ja	.Ltmp1167 # Offset: 7771
    00001e61: 	cmpq	$0x1, %r12
    00001e65: 	jne	.Ltmp1168 # Offset: 7781
    00001e6b: 	movzbl	(%rbp), %eax
    00001e6f: 	movb	%al, 0x10(%rbx)
.Ltmp1230:
    00001e72: 	movq	%r12, 0x8(%rbx)
    00001e76: 	movb	$0x0, (%rdi,%r12)
    00001e7b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e82: 	addq	$0x20, %rax
    00001e86: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1204:
    00001e8d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001e94: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e9b: 	je	.Ltmp1169 # Offset: 7835
.Ltmp1203:
    00001ea1: 	movq	-0x20(%rax), %rbp
    00001ea5: 	callq	clock@PLT # Offset: 7845
    00001eaa: 	pxor	%xmm0, %xmm0
    00001eae: 	movq	%rax, end_time(%rip)
    00001eb5: 	movq	%rbp, %rdi
    00001eb8: 	subq	start_time(%rip), %rax
    00001ebf: 	cvtsi2sd	%rax, %xmm0
    00001ec4: 	divsd	DATAat0x17358(%rip), %xmm0
    00001ecc: 	callq	_Z13record_resultdPKc # Offset: 7884
    00001ed1: 	movq	0xd0(%rsp), %rdi
    00001ed9: 	cmpq	0x88(%rsp), %rdi
    00001ee1: 	je	.Ltmp1170 # Offset: 7905
    00001ee3: 	movq	0xe0(%rsp), %rax
    00001eeb: 	leaq	0x1(%rax), %rsi
    00001eef: 	callq	_ZdlPvm@PLT # Offset: 7919
.Ltmp1170:
    00001ef4: 	movq	0x90(%rsp), %rsi
    00001efc: 	leaq	DATAat0x172f6(%rip), %rdx
    00001f03: 	movq	%r14, %rdi
    00001f06: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7942
    00001f0b: 	movl	iterations(%rip), %edx
    00001f11: 	xorl	%r8d, %r8d
    00001f14: 	xorl	%ecx, %ecx
    00001f16: 	movl	$0x1f40, %esi
    00001f1b: 	movq	0xd0(%rsp), %rdi
    00001f23: 	callq	_Z9summarizePKciiii # Offset: 7971
    00001f28: 	movq	0xd0(%rsp), %rdi
    00001f30: 	cmpq	0x88(%rsp), %rdi
    00001f38: 	je	.Ltmp1171 # Offset: 7992
    00001f3a: 	movq	0xe0(%rsp), %rax
    00001f42: 	leaq	0x1(%rax), %rsi
    00001f46: 	callq	_ZdlPvm@PLT # Offset: 8006
.Ltmp1171:
    00001f4b: 	movq	0xb0(%rsp), %rdi
    00001f53: 	cmpq	0x98(%rsp), %rdi
    00001f5b: 	je	.Ltmp1172 # Offset: 8027
    00001f5d: 	movq	0xc0(%rsp), %rax
    00001f65: 	leaq	0x1(%rax), %rsi
    00001f69: 	callq	_ZdlPvm@PLT # Offset: 8041
.Ltmp1172:
    00001f6e: 	movq	0x1f4f8(%rsp), %rax
    00001f76: 	subq	%fs:0x28, %rax
    00001f7f: 	jne	.Ltmp1173 # Offset: 8063
    00001f85: 	addq	$0x1f508, %rsp
    00001f8c: 	popq	%rbx
    00001f8d: 	popq	%rbp
    00001f8e: 	popq	%r12
    00001f90: 	popq	%r13
    00001f92: 	popq	%r14
    00001f94: 	popq	%r15
    00001f96: 	retq # Offset: 8086
    00001f97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1174:
    00001fa0: 	addq	$0x20, %rbp
.Ltmp993:
    00001fa4: 	cmpq	%rbp, (%rsp)
    00001fa8: 	je	.Ltmp997 # Offset: 8104
.Ltmp1175:
    00001fae: 	movq	(%rbp), %rdi
    00001fb2: 	leaq	0x10(%rbp), %rax
    00001fb6: 	cmpq	%rax, %rdi
    00001fb9: 	je	.Ltmp1174 # Offset: 8121
    00001fbb: 	movq	0x10(%rbp), %rax
    00001fbf: 	addq	$0x20, %rbp
    00001fc3: 	leaq	0x1(%rax), %rsi
    00001fc7: 	callq	_ZdlPvm@PLT # Offset: 8135
    00001fcc: 	cmpq	%rbp, (%rsp)
    00001fd0: 	jne	.Ltmp1175 # Offset: 8144
    00001fd2: 	jmp	.Ltmp997 # Offset: 8146
    00001fd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp989:
    00001fe0: 	addq	$0x20, %rbp
    00001fe4: 	cmpq	%rbx, %rbp
    00001fe7: 	jne	.Ltmp990 # Offset: 8167
    00001fed: 	addq	$0x8, %r13
    00001ff1: 	cmpq	%r13, %r15
    00001ff4: 	ja	.Ltmp991 # Offset: 8180
    00001ffa: 	jmp	.Ltmp1176 # Offset: 8186
    00001fff: 	nop # Size: 1
.Ltmp1006:
    00002000: 	movl	current_test(%rip), %edx
    00002006: 	movq	%r15, %rsi
    00002009: 	movl	$0x1, %edi
    0000200e: 	xorl	%eax, %eax
    00002010: 	callq	__printf_chk@PLT # Offset: 8208
    00002015: 	movl	iterations(%rip), %edx
    0000201b: 	jmp	.Ltmp1177 # Offset: 8219
.Ltmp1011:
    00002020: 	leaq	0xa8(%rsp), %rsi
    00002028: 	xorl	%edx, %edx
    0000202a: 	movq	%rbp, %rdi
    0000202d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8237
    00002032: 	movq	%rax, (%rbp)
    00002036: 	movq	%rax, %rdi
    00002039: 	movq	0xa8(%rsp), %rax
    00002041: 	movq	%rax, 0x10(%rbp)
.Ltmp1225:
    00002045: 	movq	%r13, %rdx
    00002048: 	movq	%r15, %rsi
    0000204b: 	callq	memcpy@PLT # Offset: 8267
    00002050: 	movq	0xa8(%rsp), %r13
    00002058: 	movq	(%rbp), %rdi
    0000205c: 	jmp	.Ltmp1178 # Offset: 8284
    00002061: 	nopl	(%rax) # Size: 7
.Ltmp1162:
    00002068: 	movl	current_test(%rip), %edx
    0000206e: 	movq	%r15, %rsi
    00002071: 	movl	$0x1, %edi
    00002076: 	xorl	%eax, %eax
    00002078: 	callq	__printf_chk@PLT # Offset: 8312
    0000207d: 	movl	iterations(%rip), %edx
    00002083: 	jmp	.Ltmp1179 # Offset: 8323
    00002088: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1150:
    00002090: 	movl	current_test(%rip), %edx
    00002096: 	movq	%r15, %rsi
    00002099: 	movl	$0x1, %edi
    0000209e: 	xorl	%eax, %eax
    000020a0: 	callq	__printf_chk@PLT # Offset: 8352
    000020a5: 	movl	iterations(%rip), %edx
    000020ab: 	jmp	.Ltmp1180 # Offset: 8363
.Ltmp1030:
    000020b0: 	movl	current_test(%rip), %edx
    000020b6: 	movq	%r15, %rsi
    000020b9: 	movl	$0x1, %edi
    000020be: 	xorl	%eax, %eax
    000020c0: 	callq	__printf_chk@PLT # Offset: 8384
    000020c5: 	movl	iterations(%rip), %edx
    000020cb: 	jmp	.Ltmp1181 # Offset: 8395
.Ltmp1018:
    000020d0: 	movl	current_test(%rip), %edx
    000020d6: 	movq	%r15, %rsi
    000020d9: 	movl	$0x1, %edi
    000020de: 	xorl	%eax, %eax
    000020e0: 	callq	__printf_chk@PLT # Offset: 8416
    000020e5: 	movl	iterations(%rip), %edx
    000020eb: 	jmp	.Ltmp1182 # Offset: 8427
.Ltmp1066:
    000020f0: 	movl	current_test(%rip), %edx
    000020f6: 	movq	%r15, %rsi
    000020f9: 	movl	$0x1, %edi
    000020fe: 	xorl	%eax, %eax
    00002100: 	callq	__printf_chk@PLT # Offset: 8448
    00002105: 	movl	iterations(%rip), %edx
    0000210b: 	jmp	.Ltmp1183 # Offset: 8459
.Ltmp1054:
    00002110: 	movl	current_test(%rip), %edx
    00002116: 	movq	%r15, %rsi
    00002119: 	movl	$0x1, %edi
    0000211e: 	xorl	%eax, %eax
    00002120: 	callq	__printf_chk@PLT # Offset: 8480
    00002125: 	movl	iterations(%rip), %edx
    0000212b: 	jmp	.Ltmp1184 # Offset: 8491
.Ltmp1042:
    00002130: 	movl	current_test(%rip), %edx
    00002136: 	movq	%r15, %rsi
    00002139: 	movl	$0x1, %edi
    0000213e: 	xorl	%eax, %eax
    00002140: 	callq	__printf_chk@PLT # Offset: 8512
    00002145: 	movl	iterations(%rip), %edx
    0000214b: 	jmp	.Ltmp1185 # Offset: 8523
.Ltmp1138:
    00002150: 	movl	current_test(%rip), %edx
    00002156: 	movq	%r15, %rsi
    00002159: 	movl	$0x1, %edi
    0000215e: 	xorl	%eax, %eax
    00002160: 	callq	__printf_chk@PLT # Offset: 8544
    00002165: 	movl	iterations(%rip), %edx
    0000216b: 	jmp	.Ltmp1186 # Offset: 8555
.Ltmp1126:
    00002170: 	movl	current_test(%rip), %edx
    00002176: 	movq	%r15, %rsi
    00002179: 	movl	$0x1, %edi
    0000217e: 	xorl	%eax, %eax
    00002180: 	callq	__printf_chk@PLT # Offset: 8576
    00002185: 	movl	iterations(%rip), %edx
    0000218b: 	jmp	.Ltmp1187 # Offset: 8587
.Ltmp1114:
    00002190: 	movl	current_test(%rip), %edx
    00002196: 	movq	%r15, %rsi
    00002199: 	movl	$0x1, %edi
    0000219e: 	xorl	%eax, %eax
    000021a0: 	callq	__printf_chk@PLT # Offset: 8608
    000021a5: 	movl	iterations(%rip), %edx
    000021ab: 	jmp	.Ltmp1188 # Offset: 8619
.Ltmp1102:
    000021b0: 	movl	current_test(%rip), %edx
    000021b6: 	movq	%r15, %rsi
    000021b9: 	movl	$0x1, %edi
    000021be: 	xorl	%eax, %eax
    000021c0: 	callq	__printf_chk@PLT # Offset: 8640
    000021c5: 	movl	iterations(%rip), %edx
    000021cb: 	jmp	.Ltmp1189 # Offset: 8651
.Ltmp1090:
    000021d0: 	movl	current_test(%rip), %edx
    000021d6: 	movq	%r15, %rsi
    000021d9: 	movl	$0x1, %edi
    000021de: 	xorl	%eax, %eax
    000021e0: 	callq	__printf_chk@PLT # Offset: 8672
    000021e5: 	movl	iterations(%rip), %edx
    000021eb: 	jmp	.Ltmp1190 # Offset: 8683
.Ltmp1078:
    000021f0: 	movl	current_test(%rip), %edx
    000021f6: 	movq	%r15, %rsi
    000021f9: 	movl	$0x1, %edi
    000021fe: 	xorl	%eax, %eax
    00002200: 	callq	__printf_chk@PLT # Offset: 8704
    00002205: 	movl	iterations(%rip), %edx
    0000220b: 	jmp	.Ltmp1191 # Offset: 8715
.Ltmp1080:
    00002210: 	movq	%r14, %rsi
    00002213: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000221a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8730
    0000221f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002226: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000222d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002234: 	jne	.Ltmp1192 # Offset: 8756
.Ltmp1085:
    0000223a: 	movq	-0x8(%rdx), %rax
    0000223e: 	addq	$0x200, %rax
    00002244: 	jmp	.Ltmp1192 # Offset: 8772
.Ltmp1061:
    00002249: 	movq	-0x8(%rdx), %rax
    0000224d: 	addq	$0x200, %rax
    00002253: 	jmp	.Ltmp1193 # Offset: 8787
.Ltmp1056:
    00002258: 	movq	%r14, %rsi
    0000225b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002262: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8802
    00002267: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000226e: 	jmp	.Ltmp1194 # Offset: 8814
.Ltmp1025:
    00002273: 	movq	-0x8(%rdx), %rax
    00002277: 	addq	$0x200, %rax
    0000227d: 	jmp	.Ltmp1195 # Offset: 8829
.Ltmp1068:
    00002282: 	movq	%r14, %rsi
    00002285: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000228c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8844
    00002291: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002298: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000229f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022a6: 	jne	.Ltmp1196 # Offset: 8870
.Ltmp1073:
    000022ac: 	movq	-0x8(%rdx), %rax
    000022b0: 	addq	$0x200, %rax
    000022b6: 	jmp	.Ltmp1196 # Offset: 8886
.Ltmp1032:
    000022bb: 	movq	%r14, %rsi
    000022be: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000022c5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8901
    000022ca: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022d1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000022d8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022df: 	jne	.Ltmp1197 # Offset: 8927
.Ltmp1037:
    000022e5: 	movq	-0x8(%rdx), %rax
    000022e9: 	addq	$0x200, %rax
    000022ef: 	jmp	.Ltmp1197 # Offset: 8943
.Ltmp1013:
    000022f4: 	movq	-0x8(%rdx), %rax
    000022f8: 	addq	$0x200, %rax
    000022fe: 	jmp	.Ltmp1198 # Offset: 8958
.Ltmp1020:
    00002303: 	movq	%r14, %rsi
    00002306: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000230d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8973
    00002312: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002319: 	jmp	.Ltmp1199 # Offset: 8985
.Ltmp1008:
    0000231e: 	movq	%r14, %rsi
    00002321: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002328: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9000
    0000232d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002334: 	jmp	.Ltmp1200 # Offset: 9012
.Ltmp1157:
    00002339: 	movq	-0x8(%rdx), %rax
    0000233d: 	addq	$0x200, %rax
    00002343: 	jmp	.Ltmp1201 # Offset: 9027
.Ltmp1152:
    00002348: 	movq	%r14, %rsi
    0000234b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002352: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9042
    00002357: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000235e: 	jmp	.Ltmp1202 # Offset: 9054
.Ltmp1169:
    00002363: 	movq	-0x8(%rdx), %rax
    00002367: 	addq	$0x200, %rax
    0000236d: 	jmp	.Ltmp1203 # Offset: 9069
.Ltmp1164:
    00002372: 	movq	%r14, %rsi
    00002375: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000237c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9084
    00002381: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002388: 	jmp	.Ltmp1204 # Offset: 9096
.Ltmp1104:
    0000238d: 	movq	%r14, %rsi
    00002390: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002397: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9111
    0000239c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023a3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000023aa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023b1: 	jne	.Ltmp1205 # Offset: 9137
.Ltmp1109:
    000023b7: 	movq	-0x8(%rdx), %rax
    000023bb: 	addq	$0x200, %rax
    000023c1: 	jmp	.Ltmp1205 # Offset: 9153
.Ltmp1049:
    000023c6: 	movq	-0x8(%rdx), %rax
    000023ca: 	addq	$0x200, %rax
    000023d0: 	jmp	.Ltmp1206 # Offset: 9168
.Ltmp1044:
    000023d5: 	movq	%r14, %rsi
    000023d8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023df: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9183
    000023e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023eb: 	jmp	.Ltmp1207 # Offset: 9195
.Ltmp1097:
    000023f0: 	movq	-0x8(%rdx), %rax
    000023f4: 	addq	$0x200, %rax
    000023fa: 	jmp	.Ltmp1208 # Offset: 9210
.Ltmp1092:
    000023ff: 	movq	%r14, %rsi
    00002402: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002409: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9225
    0000240e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002415: 	jmp	.Ltmp1209 # Offset: 9237
.Ltmp1128:
    0000241a: 	movq	%r14, %rsi
    0000241d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002424: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9252
    00002429: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002430: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002437: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000243e: 	jne	.Ltmp1210 # Offset: 9278
.Ltmp1133:
    00002444: 	movq	-0x8(%rdx), %rax
    00002448: 	addq	$0x200, %rax
    0000244e: 	jmp	.Ltmp1210 # Offset: 9294
.Ltmp1116:
    00002453: 	movq	%r14, %rsi
    00002456: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000245d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9309
    00002462: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002469: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002470: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002477: 	jne	.Ltmp1211 # Offset: 9335
.Ltmp1121:
    0000247d: 	movq	-0x8(%rdx), %rax
    00002481: 	addq	$0x200, %rax
    00002487: 	jmp	.Ltmp1211 # Offset: 9351
.Ltmp1145:
    0000248c: 	movq	-0x8(%rdx), %rax
    00002490: 	addq	$0x200, %rax
    00002496: 	jmp	.Ltmp1212 # Offset: 9366
.Ltmp1140:
    0000249b: 	movq	%r14, %rsi
    0000249e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000024a5: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9381
    000024aa: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000024b1: 	jmp	.Ltmp1213 # Offset: 9393
.Ltmp1132:
    000024b6: 	testq	%r13, %r13
    000024b9: 	je	.Ltmp1214 # Offset: 9401
.Ltmp1238:
    000024bf: 	movq	%r13, %rdx
    000024c2: 	movq	%r15, %rsi
    000024c5: 	callq	memcpy@PLT # Offset: 9413
    000024ca: 	movq	0xa8(%rsp), %r13
    000024d2: 	movq	(%rbp), %rdi
    000024d6: 	jmp	.Ltmp1214 # Offset: 9430
.Ltmp1120:
    000024db: 	testq	%r13, %r13
    000024de: 	je	.Ltmp1215 # Offset: 9438
    000024e4: 	jmp	.Ltmp1216 # Offset: 9444
    000024e9: 	nopl	(%rax) # Size: 7
.Ltmp1144:
    000024f0: 	testq	%r13, %r13
    000024f3: 	je	.Ltmp1217 # Offset: 9459
.Ltmp1237:
    000024f9: 	movq	%r13, %rdx
    000024fc: 	movq	%r15, %rsi
    000024ff: 	callq	memcpy@PLT # Offset: 9471
    00002504: 	movq	0xa8(%rsp), %r13
    0000250c: 	movq	(%rbp), %rdi
    00002510: 	jmp	.Ltmp1217 # Offset: 9488
.Ltmp1036:
    00002515: 	testq	%r13, %r13
    00002518: 	je	.Ltmp1218 # Offset: 9496
    0000251e: 	jmp	.Ltmp1219 # Offset: 9502
    00002523: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1072:
    00002528: 	testq	%r13, %r13
    0000252b: 	je	.Ltmp1220 # Offset: 9515
.Ltmp1239:
    00002531: 	movq	%r13, %rdx
    00002534: 	movq	%r15, %rsi
    00002537: 	callq	memcpy@PLT # Offset: 9527
    0000253c: 	movq	0xa8(%rsp), %r13
    00002544: 	movq	(%rbp), %rdi
    00002548: 	jmp	.Ltmp1220 # Offset: 9544
.Ltmp1096:
    0000254d: 	testq	%r13, %r13
    00002550: 	je	.Ltmp1221 # Offset: 9552
    00002556: 	jmp	.Ltmp1222 # Offset: 9558
    0000255b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1048:
    00002560: 	testq	%r13, %r13
    00002563: 	je	.Ltmp1223 # Offset: 9571
    00002569: 	jmp	.Ltmp1224 # Offset: 9577
    0000256e: 	nop # Size: 2
.Ltmp1012:
    00002570: 	testq	%r13, %r13
    00002573: 	je	.Ltmp1178 # Offset: 9587
    00002579: 	jmp	.Ltmp1225 # Offset: 9593
    0000257e: 	nop # Size: 2
.Ltmp1108:
    00002580: 	testq	%r13, %r13
    00002583: 	je	.Ltmp1226 # Offset: 9603
    00002589: 	jmp	.Ltmp1227 # Offset: 9609
    0000258e: 	nop # Size: 2
.Ltmp1084:
    00002590: 	testq	%r13, %r13
    00002593: 	je	.Ltmp1228 # Offset: 9619
    00002599: 	jmp	.Ltmp1229 # Offset: 9625
    0000259e: 	nop # Size: 2
.Ltmp1168:
    000025a0: 	testq	%r12, %r12
    000025a3: 	je	.Ltmp1230 # Offset: 9635
    000025a9: 	jmp	.Ltmp1231 # Offset: 9641
    000025ae: 	nop # Size: 2
.Ltmp1024:
    000025b0: 	testq	%r13, %r13
    000025b3: 	je	.Ltmp1232 # Offset: 9651
    000025b9: 	jmp	.Ltmp1233 # Offset: 9657
    000025be: 	nop # Size: 2
.Ltmp1156:
    000025c0: 	testq	%r13, %r13
    000025c3: 	je	.Ltmp1234 # Offset: 9667
    000025c9: 	jmp	.Ltmp1235 # Offset: 9673
    000025ce: 	nop # Size: 2
.Ltmp1060:
    000025d0: 	testq	%r13, %r13
    000025d3: 	je	.Ltmp1236 # Offset: 9683
.Ltmp1240:
    000025d9: 	movq	%r13, %rdx
    000025dc: 	movq	%r15, %rsi
    000025df: 	callq	memcpy@PLT # Offset: 9695
    000025e4: 	movq	0xa8(%rsp), %r13
    000025ec: 	movq	(%rbp), %rdi
    000025f0: 	jmp	.Ltmp1236 # Offset: 9712
.Ltmp1107:
    000025f5: 	leaq	0xa8(%rsp), %rsi
    000025fd: 	xorl	%edx, %edx
    000025ff: 	movq	%rbp, %rdi
    00002602: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9730
    00002607: 	movq	%rax, (%rbp)
    0000260b: 	movq	%rax, %rdi
    0000260e: 	movq	0xa8(%rsp), %rax
    00002616: 	movq	%rax, 0x10(%rbp)
.Ltmp1227:
    0000261a: 	movq	%r13, %rdx
    0000261d: 	movq	%r15, %rsi
    00002620: 	callq	memcpy@PLT # Offset: 9760
    00002625: 	movq	0xa8(%rsp), %r13
    0000262d: 	movq	(%rbp), %rdi
    00002631: 	jmp	.Ltmp1226 # Offset: 9777
.Ltmp1083:
    00002636: 	leaq	0xa8(%rsp), %rsi
    0000263e: 	xorl	%edx, %edx
    00002640: 	movq	%rbp, %rdi
    00002643: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9795
    00002648: 	movq	%rax, (%rbp)
    0000264c: 	movq	%rax, %rdi
    0000264f: 	movq	0xa8(%rsp), %rax
    00002657: 	movq	%rax, 0x10(%rbp)
.Ltmp1229:
    0000265b: 	movq	%r13, %rdx
    0000265e: 	movq	%r15, %rsi
    00002661: 	callq	memcpy@PLT # Offset: 9825
    00002666: 	movq	0xa8(%rsp), %r13
    0000266e: 	movq	(%rbp), %rdi
    00002672: 	jmp	.Ltmp1228 # Offset: 9842
.Ltmp1095:
    00002677: 	leaq	0xa8(%rsp), %rsi
    0000267f: 	xorl	%edx, %edx
    00002681: 	movq	%rbp, %rdi
    00002684: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9860
    00002689: 	movq	%rax, (%rbp)
    0000268d: 	movq	%rax, %rdi
    00002690: 	movq	0xa8(%rsp), %rax
    00002698: 	movq	%rax, 0x10(%rbp)
.Ltmp1222:
    0000269c: 	movq	%r13, %rdx
    0000269f: 	movq	%r15, %rsi
    000026a2: 	callq	memcpy@PLT # Offset: 9890
    000026a7: 	movq	0xa8(%rsp), %r13
    000026af: 	movq	(%rbp), %rdi
    000026b3: 	jmp	.Ltmp1221 # Offset: 9907
.Ltmp1119:
    000026b8: 	leaq	0xa8(%rsp), %rsi
    000026c0: 	xorl	%edx, %edx
    000026c2: 	movq	%rbp, %rdi
    000026c5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9925
    000026ca: 	movq	%rax, (%rbp)
    000026ce: 	movq	%rax, %rdi
    000026d1: 	movq	0xa8(%rsp), %rax
    000026d9: 	movq	%rax, 0x10(%rbp)
.Ltmp1216:
    000026dd: 	movq	%r13, %rdx
    000026e0: 	movq	%r15, %rsi
    000026e3: 	callq	memcpy@PLT # Offset: 9955
    000026e8: 	movq	0xa8(%rsp), %r13
    000026f0: 	movq	(%rbp), %rdi
    000026f4: 	jmp	.Ltmp1215 # Offset: 9972
.Ltmp1035:
    000026f9: 	leaq	0xa8(%rsp), %rsi
    00002701: 	xorl	%edx, %edx
    00002703: 	movq	%rbp, %rdi
    00002706: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9990
    0000270b: 	movq	%rax, (%rbp)
    0000270f: 	movq	%rax, %rdi
    00002712: 	movq	0xa8(%rsp), %rax
    0000271a: 	movq	%rax, 0x10(%rbp)
.Ltmp1219:
    0000271e: 	movq	%r13, %rdx
    00002721: 	movq	%r15, %rsi
    00002724: 	callq	memcpy@PLT # Offset: 10020
    00002729: 	movq	0xa8(%rsp), %r13
    00002731: 	movq	(%rbp), %rdi
    00002735: 	jmp	.Ltmp1218 # Offset: 10037
.Ltmp1047:
    0000273a: 	leaq	0xa8(%rsp), %rsi
    00002742: 	xorl	%edx, %edx
    00002744: 	movq	%rbp, %rdi
    00002747: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10055
    0000274c: 	movq	%rax, (%rbp)
    00002750: 	movq	%rax, %rdi
    00002753: 	movq	0xa8(%rsp), %rax
    0000275b: 	movq	%rax, 0x10(%rbp)
.Ltmp1224:
    0000275f: 	movq	%r13, %rdx
    00002762: 	movq	%r15, %rsi
    00002765: 	callq	memcpy@PLT # Offset: 10085
    0000276a: 	movq	0xa8(%rsp), %r13
    00002772: 	movq	(%rbp), %rdi
    00002776: 	jmp	.Ltmp1223 # Offset: 10102
.Ltmp1143:
    0000277b: 	leaq	0xa8(%rsp), %rsi
    00002783: 	xorl	%edx, %edx
    00002785: 	movq	%rbp, %rdi
    00002788: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10120
    0000278d: 	movq	%rax, (%rbp)
    00002791: 	movq	%rax, %rdi
    00002794: 	movq	0xa8(%rsp), %rax
    0000279c: 	movq	%rax, 0x10(%rbp)
    000027a0: 	jmp	.Ltmp1237 # Offset: 10144
.Ltmp1023:
    000027a5: 	leaq	0xa8(%rsp), %rsi
    000027ad: 	xorl	%edx, %edx
    000027af: 	movq	%rbp, %rdi
    000027b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10162
    000027b7: 	movq	%rax, (%rbp)
    000027bb: 	movq	%rax, %rdi
    000027be: 	movq	0xa8(%rsp), %rax
    000027c6: 	movq	%rax, 0x10(%rbp)
.Ltmp1233:
    000027ca: 	movq	%r13, %rdx
    000027cd: 	movq	%r15, %rsi
    000027d0: 	callq	memcpy@PLT # Offset: 10192
    000027d5: 	movq	0xa8(%rsp), %r13
    000027dd: 	movq	(%rbp), %rdi
    000027e1: 	jmp	.Ltmp1232 # Offset: 10209
.Ltmp1167:
    000027e6: 	leaq	0xa8(%rsp), %rsi
    000027ee: 	xorl	%edx, %edx
    000027f0: 	movq	%rbx, %rdi
    000027f3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10227
    000027f8: 	movq	%rax, (%rbx)
    000027fb: 	movq	%rax, %rdi
    000027fe: 	movq	0xa8(%rsp), %rax
    00002806: 	movq	%rax, 0x10(%rbx)
.Ltmp1231:
    0000280a: 	movq	%r12, %rdx
    0000280d: 	movq	%rbp, %rsi
    00002810: 	callq	memcpy@PLT # Offset: 10256
    00002815: 	movq	0xa8(%rsp), %r12
    0000281d: 	movq	(%rbx), %rdi
    00002820: 	jmp	.Ltmp1230 # Offset: 10272
.Ltmp1155:
    00002825: 	leaq	0xa8(%rsp), %rsi
    0000282d: 	xorl	%edx, %edx
    0000282f: 	movq	%rbp, %rdi
    00002832: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10290
    00002837: 	movq	%rax, (%rbp)
    0000283b: 	movq	%rax, %rdi
    0000283e: 	movq	0xa8(%rsp), %rax
    00002846: 	movq	%rax, 0x10(%rbp)
.Ltmp1235:
    0000284a: 	movq	%r13, %rdx
    0000284d: 	movq	%r15, %rsi
    00002850: 	callq	memcpy@PLT # Offset: 10320
    00002855: 	movq	0xa8(%rsp), %r13
    0000285d: 	movq	(%rbp), %rdi
    00002861: 	jmp	.Ltmp1234 # Offset: 10337
.Ltmp1131:
    00002866: 	leaq	0xa8(%rsp), %rsi
    0000286e: 	xorl	%edx, %edx
    00002870: 	movq	%rbp, %rdi
    00002873: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10355
    00002878: 	movq	%rax, (%rbp)
    0000287c: 	movq	%rax, %rdi
    0000287f: 	movq	0xa8(%rsp), %rax
    00002887: 	movq	%rax, 0x10(%rbp)
    0000288b: 	jmp	.Ltmp1238 # Offset: 10379
.Ltmp1071:
    00002890: 	leaq	0xa8(%rsp), %rsi
    00002898: 	xorl	%edx, %edx
    0000289a: 	movq	%rbp, %rdi
    0000289d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10397
    000028a2: 	movq	%rax, (%rbp)
    000028a6: 	movq	%rax, %rdi
    000028a9: 	movq	0xa8(%rsp), %rax
    000028b1: 	movq	%rax, 0x10(%rbp)
    000028b5: 	jmp	.Ltmp1239 # Offset: 10421
.Ltmp1059:
    000028ba: 	leaq	0xa8(%rsp), %rsi
    000028c2: 	xorl	%edx, %edx
    000028c4: 	movq	%rbp, %rdi
    000028c7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10439
    000028cc: 	movq	%rax, (%rbp)
    000028d0: 	movq	%rax, %rdi
    000028d3: 	movq	0xa8(%rsp), %rax
    000028db: 	movq	%rax, 0x10(%rbp)
    000028df: 	jmp	.Ltmp1240 # Offset: 10463
.Ltmp1022:
    000028e4: 	leaq	DATAat0x17158(%rip), %rdi
    000028eb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10475
.Ltmp1034:
    000028f0: 	leaq	DATAat0x17158(%rip), %rdi
    000028f7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10487
.Ltmp1046:
    000028fc: 	leaq	DATAat0x17158(%rip), %rdi
    00002903: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10499
.Ltmp1058:
    00002908: 	leaq	DATAat0x17158(%rip), %rdi
    0000290f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10511
.Ltmp1070:
    00002914: 	leaq	DATAat0x17158(%rip), %rdi
    0000291b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10523
.Ltmp1082:
    00002920: 	leaq	DATAat0x17158(%rip), %rdi
    00002927: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10535
.Ltmp1094:
    0000292c: 	leaq	DATAat0x17158(%rip), %rdi
    00002933: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10547
.Ltmp1106:
    00002938: 	leaq	DATAat0x17158(%rip), %rdi
    0000293f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10559
.Ltmp1118:
    00002944: 	leaq	DATAat0x17158(%rip), %rdi
    0000294b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10571
.Ltmp1130:
    00002950: 	leaq	DATAat0x17158(%rip), %rdi
    00002957: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10583
.Ltmp1142:
    0000295c: 	leaq	DATAat0x17158(%rip), %rdi
    00002963: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10595
.Ltmp1154:
    00002968: 	leaq	DATAat0x17158(%rip), %rdi
    0000296f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10607
.Ltmp1166:
    00002974: 	leaq	DATAat0x17158(%rip), %rdi
    0000297b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10619
.Ltmp1173:
    00002980: 	callq	__stack_chk_fail@PLT # Offset: 10624
.Ltmp1010:
    00002985: 	leaq	DATAat0x17158(%rip), %rdi
    0000298c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10636
    00002991: 	endbr64
.Ltmp1242:
    00002995: 	movq	%rax, %rbp
    00002998: 	jmp	.Ltmp1241 # Offset: 10648
    0000299a: 	endbr64
    0000299e: 	jmp	.Ltmp1242 # Offset: 10654
    000029a0: 	endbr64
    000029a4: 	jmp	.Ltmp1242 # Offset: 10660
    000029a6: 	endbr64
    000029aa: 	jmp	.Ltmp1242 # Offset: 10666
.Ltmp1241:
    000029ac: 	movq	0xd0(%rsp), %rdi
    000029b4: 	cmpq	0x88(%rsp), %rdi
    000029bc: 	je	.Ltmp1243 # Offset: 10684
.Ltmp1246:
    000029be: 	movq	0xe0(%rsp), %rax
    000029c6: 	leaq	0x1(%rax), %rsi
    000029ca: 	callq	_ZdlPvm@PLT # Offset: 10698
.Ltmp1243:
    000029cf: 	movq	0xb0(%rsp), %rdi
    000029d7: 	cmpq	0x98(%rsp), %rdi
    000029df: 	je	.Ltmp1244 # Offset: 10719
    000029e1: 	movq	0xc0(%rsp), %rax
    000029e9: 	leaq	0x1(%rax), %rsi
    000029ed: 	callq	_ZdlPvm@PLT # Offset: 10733
.Ltmp1244:
    000029f2: 	movq	%rbp, %rdi
    000029f5: 	callq	_Unwind_Resume@PLT # Offset: 10741
    000029fa: 	endbr64
    000029fe: 	jmp	.Ltmp1242 # Offset: 10750
    00002a00: 	endbr64
    00002a04: 	jmp	.Ltmp1242 # Offset: 10756
    00002a06: 	endbr64
    00002a0a: 	jmp	.Ltmp1242 # Offset: 10762
    00002a0c: 	endbr64
    00002a10: 	jmp	.Ltmp1242 # Offset: 10768
    00002a12: 	endbr64
    00002a16: 	movq	%rax, %rbp
    00002a19: 	jmp	.Ltmp1243 # Offset: 10777
    00002a1b: 	endbr64
    00002a1f: 	movq	%rax, %rbp
    00002a22: 	jmp	.Ltmp1245 # Offset: 10786
    00002a24: 	endbr64
    00002a28: 	jmp	.Ltmp1242 # Offset: 10792
    00002a2d: 	endbr64
    00002a31: 	jmp	.Ltmp1242 # Offset: 10801
.Ltmp1245:
    00002a36: 	movq	0xd0(%rsp), %rdi
    00002a3e: 	leaq	0xe0(%rsp), %rax
    00002a46: 	cmpq	%rax, %rdi
    00002a49: 	jne	.Ltmp1246 # Offset: 10825
    00002a4f: 	jmp	.Ltmp1243 # Offset: 10831
    00002a54: 	endbr64
    00002a58: 	jmp	.Ltmp1242 # Offset: 10840
    00002a5d: 	endbr64
    00002a61: 	jmp	.Ltmp1242 # Offset: 10849
    00002a66: 	endbr64
    00002a6a: 	jmp	.Ltmp1242 # Offset: 10858
    00002a6f: 	endbr64
    00002a73: 	jmp	.Ltmp1242 # Offset: 10867
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI12TwoItemClassIdEEvd"

Binary Function "_Z11TestOneTypeI13FourItemClassIdEEvd" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0xede0
  Size        : 0x2c26
  MaxSize     : 0x2c30
  Offset      : 0xede0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI13FourItemClassIdEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x3e000(%rsp), %r11
.Ltmp1247:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1247 # Offset: 37
    00000027: 	subq	$0x908, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm1
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm3, %xmm4
    00000048: 	movq	%xmm1, %rbp
    0000004d: 	movq	%xmm4, %rcx
    00000052: 	leaq	0x8(%rcx), %r12
    00000056: 	movsd	%xmm0, 0x68(%rsp)
    0000005c: 	movq	%fs:0x28, %rax
    00000065: 	movq	%rax, 0x3e8f8(%rsp)
    0000006d: 	xorl	%eax, %eax
    0000006f: 	leaq	0xc0(%rsp), %rax
    00000077: 	movb	$0x0, 0xcc(%rsp)
    0000007f: 	movq	%rax, 0x98(%rsp)
    00000087: 	movq	%rax, 0xb0(%rsp)
    0000008f: 	movabsq	$0x4334656c62756f64, %rax
    00000099: 	movq	%rax, 0xc0(%rsp)
    000000a1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a8: 	movl	$0x7373616c, 0xc8(%rsp)
    000000b3: 	movq	%rax, (%rsp)
    000000b7: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000be: 	movq	$0xc, 0xb8(%rsp)
    000000ca: 	movq	%rax, 0x20(%rsp)
    000000cf: 	movaps	%xmm1, 0x30(%rsp)
    000000d4: 	movaps	%xmm3, 0x40(%rsp)
    000000d9: 	movq	%xmm4, 0x58(%rsp)
    000000df: 	movq	%xmm3, 0x10(%rsp)
    000000e5: 	cmpq	%r12, %rax
    000000e8: 	jbe	.Ltmp1248 # Offset: 232
    000000ea: 	movq	%r12, %r13
    000000ed: 	movq	%rax, %r15
    000000f0: 	movq	%xmm1, 0x60(%rsp)
    000000f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1251:
    00000100: 	movq	(%r13), %rbp
    00000104: 	leaq	0x200(%rbp), %rbx
    0000010b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1250:
    00000110: 	movq	(%rbp), %rdi
    00000114: 	leaq	0x10(%rbp), %rdx
    00000118: 	cmpq	%rdx, %rdi
    0000011b: 	je	.Ltmp1249 # Offset: 283
    00000121: 	movq	0x10(%rbp), %rax
    00000125: 	addq	$0x20, %rbp
    00000129: 	leaq	0x1(%rax), %rsi
    0000012d: 	callq	_ZdlPvm@PLT # Offset: 301
    00000132: 	cmpq	%rbp, %rbx
    00000135: 	jne	.Ltmp1250 # Offset: 309
    00000137: 	addq	$0x8, %r13
    0000013b: 	cmpq	%r13, %r15
    0000013e: 	ja	.Ltmp1251 # Offset: 318
.Ltmp1431:
    00000140: 	movq	0x60(%rsp), %rbp
.Ltmp1248:
    00000145: 	movq	0x58(%rsp), %rcx
    0000014a: 	cmpq	%rcx, 0x20(%rsp)
    0000014f: 	jne	.Ltmp1252 # Offset: 335
    00000151: 	jmp	.Ltmp1253 # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1255:
    00000160: 	movq	0x10(%rbp), %rax
    00000164: 	addq	$0x20, %rbp
    00000168: 	leaq	0x1(%rax), %rsi
    0000016c: 	callq	_ZdlPvm@PLT # Offset: 364
.Ltmp1252:
    00000171: 	cmpq	%rbp, 0x10(%rsp)
    00000176: 	je	.Ltmp1254 # Offset: 374
.Ltmp1256:
    00000178: 	movq	(%rbp), %rdi
    0000017c: 	leaq	0x10(%rbp), %rax
    00000180: 	cmpq	%rax, %rdi
    00000183: 	jne	.Ltmp1255 # Offset: 387
    00000185: 	addq	$0x20, %rbp
    00000189: 	cmpq	0x10(%rsp), %rbp
    0000018e: 	jne	.Ltmp1256 # Offset: 398
    00000190: 	cmpq	%r14, (%rsp)
    00000194: 	je	.Ltmp1257 # Offset: 404
    00000196: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1259:
    000001a0: 	movq	(%r14), %rdi
    000001a3: 	leaq	0x10(%r14), %rax
    000001a7: 	cmpq	%rax, %rdi
    000001aa: 	je	.Ltmp1258 # Offset: 426
    000001ac: 	movq	0x10(%r14), %rax
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
.Ltmp1258:
    000001b9: 	addq	$0x20, %r14
.Ltmp1254:
    000001bd: 	cmpq	%r14, (%rsp)
    000001c1: 	jne	.Ltmp1259 # Offset: 449
.Ltmp1257:
    000001c3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ca: 	leaq	0x8(%rax), %rbx
    000001ce: 	cmpq	%r12, %rbx
    000001d1: 	jbe	.Ltmp1260 # Offset: 465
    000001d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1261:
    000001d8: 	movq	(%r12), %rdi
    000001dc: 	movl	$0x200, %esi
    000001e1: 	addq	$0x8, %r12
    000001e5: 	callq	_ZdlPvm@PLT # Offset: 485
    000001ea: 	cmpq	%r12, %rbx
    000001ed: 	ja	.Ltmp1261 # Offset: 493
.Ltmp1260:
    000001ef: 	movdqa	0x30(%rsp), %xmm6
    000001f5: 	movsd	init_value(%rip), %xmm0
    000001fd: 	leaq	0xf0(%rsp), %r12
    00000205: 	leaq	0x3e8f0(%rsp), %rbx
    0000020d: 	movq	%r12, %rax
    00000210: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    00000217: 	movdqa	0x40(%rsp), %xmm6
    0000021d: 	unpcklpd	%xmm0, %xmm0
    00000221: 	movaps	%xmm6, "_ZL7gLabels/1"+64(%rip)
    00000228: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1262:
    00000230: 	movaps	%xmm0, (%rax)
    00000233: 	addq	$0x20, %rax
    00000237: 	movaps	%xmm0, -0x10(%rax)
    0000023b: 	cmpq	%rbx, %rax
    0000023e: 	jne	.Ltmp1262 # Offset: 574
    00000240: 	movsd	0x68(%rsp), %xmm1
    00000246: 	movsd	DATAat0x17368(%rip), %xmm4
    0000024e: 	leaq	0xb0(%rsp), %rax
    00000256: 	leaq	0xd0(%rsp), %r14
    0000025e: 	leaq	DATAat0x171c8(%rip), %rdx
    00000265: 	movq	%rax, %rsi
    00000268: 	movq	%r14, %rdi
    0000026b: 	movq	%rax, 0x90(%rsp)
    00000273: 	movapd	%xmm1, %xmm7
    00000277: 	addsd	%xmm1, %xmm4
    0000027b: 	addsd	%xmm1, %xmm7
    0000027f: 	movsd	%xmm4, 0x78(%rsp)
    00000285: 	movsd	%xmm7, 0x80(%rsp)
    0000028e: 	divsd	%xmm4, %xmm7
    00000292: 	movapd	%xmm7, %xmm0
    00000296: 	addsd	%xmm1, %xmm0
    0000029a: 	movsd	%xmm0, 0x70(%rsp)
    000002a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 672
    000002a5: 	callq	clock@PLT # Offset: 677
    000002aa: 	movl	iterations(%rip), %edx
    000002b0: 	movq	%rax, start_time(%rip)
    000002b7: 	testl	%edx, %edx
    000002b9: 	jle	.Ltmp1263 # Offset: 697
    000002bf: 	movsd	0x68(%rsp), %xmm1
    000002c5: 	movsd	DATAat0x17370(%rip), %xmm3
    000002cd: 	pxor	%xmm7, %xmm7
    000002d1: 	xorl	%r13d, %r13d
    000002d4: 	leaq	init_value(%rip), %rbp
    000002db: 	movsd	%xmm7, 0x60(%rsp)
    000002e1: 	leaq	DATAat0x171d6(%rip), %r15
    000002e8: 	unpcklpd	%xmm1, %xmm1
    000002ec: 	movsd	%xmm3, 0x40(%rsp)
    000002f2: 	movaps	%xmm1, (%rsp)
    000002f6: 	movsd	DATAat0x17350(%rip), %xmm1
    000002fe: 	movsd	%xmm1, 0x58(%rsp)
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp1267:
    00000308: 	pxor	%xmm0, %xmm0
    0000030c: 	movq	%r12, %rax
    0000030f: 	movapd	%xmm0, %xmm1
    00000313: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1264:
    00000318: 	movapd	(%rsp), %xmm4
    0000031d: 	movapd	(%rax), %xmm2
    00000321: 	addq	$0x20, %rax
    00000325: 	addpd	%xmm4, %xmm2
    00000329: 	addpd	-0x10(%rax), %xmm4
    0000032e: 	addpd	%xmm2, %xmm1
    00000332: 	addpd	%xmm4, %xmm0
    00000336: 	cmpq	%rax, %rbx
    00000339: 	jne	.Ltmp1264 # Offset: 825
    0000033b: 	movsd	0x68(%rsp), %xmm3
    00000341: 	addsd	(%rbp), %xmm3
    00000346: 	movapd	%xmm1, %xmm6
    0000034a: 	mulsd	0x40(%rsp), %xmm3
    00000350: 	unpckhpd	%xmm6, %xmm6
    00000354: 	movapd	%xmm6, %xmm2
    00000358: 	subsd	%xmm3, %xmm2
    0000035c: 	subsd	%xmm3, %xmm1
    00000360: 	addsd	%xmm2, %xmm1
    00000364: 	movapd	%xmm0, %xmm2
    00000368: 	unpckhpd	%xmm0, %xmm0
    0000036c: 	subsd	%xmm3, %xmm2
    00000370: 	subsd	%xmm3, %xmm0
    00000374: 	addsd	%xmm2, %xmm1
    00000378: 	addsd	%xmm1, %xmm0
    0000037c: 	movsd	0x60(%rsp), %xmm1
    00000382: 	comisd	%xmm0, %xmm1
    00000386: 	jbe	.Ltmp1265 # Offset: 902
    00000388: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1265:
    00000390: 	movsd	0x58(%rsp), %xmm1
    00000396: 	comisd	%xmm0, %xmm1
    0000039a: 	jbe	.Ltmp1266 # Offset: 922
.Ltmp1432:
    000003a0: 	addl	$0x1, %r13d
    000003a4: 	cmpl	%edx, %r13d
    000003a7: 	jl	.Ltmp1267 # Offset: 935
.Ltmp1263:
    000003ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000003bb: 	subq	$0x20, %rax
    000003bf: 	cmpq	%rax, %rbp
    000003c2: 	je	.Ltmp1268 # Offset: 962
    000003c8: 	leaq	0x10(%rbp), %rdi
    000003cc: 	movq	0xd8(%rsp), %r13
    000003d4: 	movq	%rdi, (%rbp)
    000003d8: 	movq	0xd0(%rsp), %r15
    000003e0: 	movq	%r15, %rax
    000003e3: 	addq	%r13, %rax
    000003e6: 	je	.Ltmp1269 # Offset: 998
    000003e8: 	testq	%r15, %r15
    000003eb: 	je	.Ltmp1270 # Offset: 1003
.Ltmp1269:
    000003f1: 	movq	%r13, 0xa8(%rsp)
    000003f9: 	cmpq	$0xf, %r13
    000003fd: 	ja	.Ltmp1271 # Offset: 1021
    00000403: 	cmpq	$0x1, %r13
    00000407: 	jne	.Ltmp1272 # Offset: 1031
    0000040d: 	movzbl	(%r15), %eax
    00000411: 	movb	%al, 0x10(%rbp)
.Ltmp1433:
    00000414: 	movq	%r13, 0x8(%rbp)
    00000418: 	movb	$0x0, (%rdi,%r13)
    0000041d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000424: 	addq	$0x20, %rax
    00000428: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1455:
    0000042f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000436: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000043d: 	je	.Ltmp1273 # Offset: 1085
.Ltmp1451:
    00000443: 	movq	-0x20(%rax), %rbp
    00000447: 	callq	clock@PLT # Offset: 1095
    0000044c: 	pxor	%xmm0, %xmm0
    00000450: 	movq	%rax, end_time(%rip)
    00000457: 	movq	%rbp, %rdi
    0000045a: 	subq	start_time(%rip), %rax
    00000461: 	cvtsi2sd	%rax, %xmm0
    00000466: 	divsd	DATAat0x17358(%rip), %xmm0
    0000046e: 	callq	_Z13record_resultdPKc # Offset: 1134
    00000473: 	movq	0xd0(%rsp), %rdi
    0000047b: 	leaq	0xe0(%rsp), %rax
    00000483: 	movq	%rax, 0x88(%rsp)
    0000048b: 	cmpq	%rax, %rdi
    0000048e: 	je	.Ltmp1274 # Offset: 1166
    00000490: 	movq	0xe0(%rsp), %rax
    00000498: 	leaq	0x1(%rax), %rsi
    0000049c: 	callq	_ZdlPvm@PLT # Offset: 1180
.Ltmp1274:
    000004a1: 	movq	0x90(%rsp), %rsi
    000004a9: 	leaq	DATAat0x171e6(%rip), %rdx
    000004b0: 	movq	%r14, %rdi
    000004b3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1203
    000004b8: 	callq	clock@PLT # Offset: 1208
    000004bd: 	movl	iterations(%rip), %edx
    000004c3: 	movq	%rax, start_time(%rip)
    000004ca: 	testl	%edx, %edx
    000004cc: 	jle	.Ltmp1275 # Offset: 1228
    000004d2: 	movsd	0x80(%rsp), %xmm0
    000004db: 	addsd	0x68(%rsp), %xmm0
    000004e1: 	pxor	%xmm6, %xmm6
    000004e5: 	xorl	%r13d, %r13d
    000004e8: 	addsd	0x78(%rsp), %xmm0
    000004ee: 	movsd	0x70(%rsp), %xmm4
    000004f4: 	leaq	init_value(%rip), %rbp
    000004fb: 	movsd	%xmm6, 0x60(%rsp)
    00000501: 	movsd	DATAat0x17370(%rip), %xmm1
    00000509: 	movsd	DATAat0x17350(%rip), %xmm3
    00000511: 	leaq	DATAat0x171d6(%rip), %r15
    00000518: 	addsd	%xmm0, %xmm4
    0000051c: 	movsd	%xmm1, 0x40(%rsp)
    00000522: 	movsd	%xmm3, 0x58(%rsp)
    00000528: 	movapd	%xmm4, %xmm1
    0000052c: 	movsd	%xmm4, 0x10(%rsp)
    00000532: 	unpcklpd	%xmm1, %xmm1
    00000536: 	movaps	%xmm1, (%rsp)
    0000053a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1279:
    00000540: 	pxor	%xmm0, %xmm0
    00000544: 	movq	%r12, %rax
    00000547: 	movapd	%xmm0, %xmm1
    0000054b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1276:
    00000550: 	movapd	(%rsp), %xmm5
    00000555: 	movapd	(%rax), %xmm2
    00000559: 	addq	$0x20, %rax
    0000055d: 	addpd	%xmm5, %xmm2
    00000561: 	addpd	-0x10(%rax), %xmm5
    00000566: 	addpd	%xmm2, %xmm1
    0000056a: 	addpd	%xmm5, %xmm0
    0000056e: 	cmpq	%rax, %rbx
    00000571: 	jne	.Ltmp1276 # Offset: 1393
    00000573: 	movsd	0x10(%rsp), %xmm3
    00000579: 	addsd	(%rbp), %xmm3
    0000057e: 	movapd	%xmm1, %xmm6
    00000582: 	mulsd	0x40(%rsp), %xmm3
    00000588: 	unpckhpd	%xmm6, %xmm6
    0000058c: 	movapd	%xmm6, %xmm2
    00000590: 	subsd	%xmm3, %xmm2
    00000594: 	subsd	%xmm3, %xmm1
    00000598: 	addsd	%xmm2, %xmm1
    0000059c: 	movapd	%xmm0, %xmm2
    000005a0: 	unpckhpd	%xmm0, %xmm0
    000005a4: 	subsd	%xmm3, %xmm2
    000005a8: 	subsd	%xmm3, %xmm0
    000005ac: 	addsd	%xmm2, %xmm1
    000005b0: 	addsd	%xmm1, %xmm0
    000005b4: 	movsd	0x60(%rsp), %xmm1
    000005ba: 	comisd	%xmm0, %xmm1
    000005be: 	jbe	.Ltmp1277 # Offset: 1470
    000005c0: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1277:
    000005c8: 	movsd	0x58(%rsp), %xmm1
    000005ce: 	comisd	%xmm0, %xmm1
    000005d2: 	jbe	.Ltmp1278 # Offset: 1490
.Ltmp1436:
    000005d8: 	addl	$0x1, %r13d
    000005dc: 	cmpl	%r13d, %edx
    000005df: 	jg	.Ltmp1279 # Offset: 1503
.Ltmp1275:
    000005e5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000005f3: 	subq	$0x20, %rax
    000005f7: 	cmpq	%rax, %rbp
    000005fa: 	je	.Ltmp1280 # Offset: 1530
    00000600: 	leaq	0x10(%rbp), %rdi
    00000604: 	movq	0xd8(%rsp), %r13
    0000060c: 	movq	%rdi, (%rbp)
    00000610: 	movq	0xd0(%rsp), %r15
    00000618: 	movq	%r15, %rax
    0000061b: 	addq	%r13, %rax
    0000061e: 	je	.Ltmp1281 # Offset: 1566
    00000620: 	testq	%r15, %r15
    00000623: 	je	.Ltmp1282 # Offset: 1571
.Ltmp1281:
    00000629: 	movq	%r13, 0xa8(%rsp)
    00000631: 	cmpq	$0xf, %r13
    00000635: 	ja	.Ltmp1283 # Offset: 1589
    0000063b: 	cmpq	$0x1, %r13
    0000063f: 	jne	.Ltmp1284 # Offset: 1599
    00000645: 	movzbl	(%r15), %eax
    00000649: 	movb	%al, 0x10(%rbp)
.Ltmp1482:
    0000064c: 	movq	%r13, 0x8(%rbp)
    00000650: 	movb	$0x0, (%rdi,%r13)
    00000655: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000065c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000663: 	addq	$0x20, %rax
    00000667: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000066e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000675: 	je	.Ltmp1285 # Offset: 1653
.Ltmp1452:
    0000067b: 	movq	-0x20(%rax), %rbp
    0000067f: 	callq	clock@PLT # Offset: 1663
    00000684: 	pxor	%xmm0, %xmm0
    00000688: 	movq	%rax, end_time(%rip)
    0000068f: 	movq	%rbp, %rdi
    00000692: 	subq	start_time(%rip), %rax
    00000699: 	cvtsi2sd	%rax, %xmm0
    0000069e: 	divsd	DATAat0x17358(%rip), %xmm0
    000006a6: 	callq	_Z13record_resultdPKc # Offset: 1702
    000006ab: 	movq	0xd0(%rsp), %rdi
    000006b3: 	cmpq	0x88(%rsp), %rdi
    000006bb: 	je	.Ltmp1286 # Offset: 1723
    000006bd: 	movq	0xe0(%rsp), %rax
    000006c5: 	leaq	0x1(%rax), %rsi
    000006c9: 	callq	_ZdlPvm@PLT # Offset: 1737
.Ltmp1286:
    000006ce: 	movq	0x90(%rsp), %rsi
    000006d6: 	leaq	DATAat0x171fe(%rip), %rdx
    000006dd: 	movq	%r14, %rdi
    000006e0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1760
    000006e5: 	callq	clock@PLT # Offset: 1765
    000006ea: 	movl	iterations(%rip), %edx
    000006f0: 	movq	%rax, start_time(%rip)
    000006f7: 	testl	%edx, %edx
    000006f9: 	jle	.Ltmp1287 # Offset: 1785
    000006ff: 	movsd	0x68(%rsp), %xmm1
    00000705: 	movsd	DATAat0x17370(%rip), %xmm7
    0000070d: 	xorl	%r13d, %r13d
    00000710: 	leaq	init_value(%rip), %rbp
    00000717: 	movsd	DATAat0x17350(%rip), %xmm6
    0000071f: 	leaq	DATAat0x171d6(%rip), %r15
    00000726: 	unpcklpd	%xmm1, %xmm1
    0000072a: 	movsd	%xmm7, 0x40(%rsp)
    00000730: 	movaps	%xmm1, (%rsp)
    00000734: 	pxor	%xmm1, %xmm1
    00000738: 	movsd	%xmm1, 0x60(%rsp)
    0000073e: 	movsd	0x70(%rsp), %xmm1
    00000744: 	movsd	%xmm6, 0x58(%rsp)
    0000074a: 	unpcklpd	%xmm1, %xmm1
    0000074e: 	movaps	%xmm1, 0x10(%rsp)
    00000753: 	movsd	0x78(%rsp), %xmm1
    00000759: 	unpcklpd	%xmm1, %xmm1
    0000075d: 	movaps	%xmm1, 0x20(%rsp)
    00000762: 	movsd	0x80(%rsp), %xmm1
    0000076b: 	unpcklpd	%xmm1, %xmm1
    0000076f: 	movaps	%xmm1, 0x30(%rsp)
    00000774: 	nopl	(%rax) # Size: 4
.Ltmp1291:
    00000778: 	pxor	%xmm1, %xmm1
    0000077c: 	movq	%r12, %rax
    0000077f: 	movapd	%xmm1, %xmm2
    00000783: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1288:
    00000788: 	movapd	(%rsp), %xmm6
    0000078d: 	movapd	(%rax), %xmm0
    00000791: 	addq	$0x20, %rax
    00000795: 	movapd	0x30(%rsp), %xmm7
    0000079b: 	movapd	0x20(%rsp), %xmm4
    000007a1: 	addpd	%xmm6, %xmm0
    000007a5: 	movapd	0x10(%rsp), %xmm3
    000007ab: 	addpd	-0x10(%rax), %xmm6
    000007b0: 	addpd	%xmm7, %xmm0
    000007b4: 	addpd	%xmm4, %xmm0
    000007b8: 	addpd	%xmm3, %xmm0
    000007bc: 	addpd	%xmm0, %xmm2
    000007c0: 	movapd	%xmm6, %xmm0
    000007c4: 	addpd	%xmm7, %xmm0
    000007c8: 	addpd	%xmm4, %xmm0
    000007cc: 	addpd	%xmm3, %xmm0
    000007d0: 	addpd	%xmm0, %xmm1
    000007d4: 	cmpq	%rbx, %rax
    000007d7: 	jne	.Ltmp1288 # Offset: 2007
    000007d9: 	movsd	0x68(%rsp), %xmm0
    000007df: 	addsd	(%rbp), %xmm0
    000007e4: 	movapd	%xmm2, %xmm6
    000007e8: 	addsd	0x80(%rsp), %xmm0
    000007f1: 	addsd	0x78(%rsp), %xmm0
    000007f7: 	unpckhpd	%xmm6, %xmm6
    000007fb: 	addsd	0x70(%rsp), %xmm0
    00000801: 	mulsd	0x40(%rsp), %xmm0
    00000807: 	movapd	%xmm6, %xmm3
    0000080b: 	subsd	%xmm0, %xmm3
    0000080f: 	subsd	%xmm0, %xmm2
    00000813: 	addsd	%xmm3, %xmm2
    00000817: 	movapd	%xmm1, %xmm3
    0000081b: 	unpckhpd	%xmm1, %xmm1
    0000081f: 	subsd	%xmm0, %xmm3
    00000823: 	subsd	%xmm0, %xmm1
    00000827: 	addsd	%xmm3, %xmm2
    0000082b: 	addsd	%xmm1, %xmm2
    0000082f: 	movsd	0x60(%rsp), %xmm1
    00000835: 	comisd	%xmm2, %xmm1
    00000839: 	movapd	%xmm2, %xmm0
    0000083d: 	jbe	.Ltmp1289 # Offset: 2109
    0000083f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1289:
    00000847: 	movsd	0x58(%rsp), %xmm1
    0000084d: 	comisd	%xmm0, %xmm1
    00000851: 	jbe	.Ltmp1290 # Offset: 2129
.Ltmp1435:
    00000857: 	addl	$0x1, %r13d
    0000085b: 	cmpl	%edx, %r13d
    0000085e: 	jl	.Ltmp1291 # Offset: 2142
.Ltmp1287:
    00000864: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000086b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000872: 	subq	$0x20, %rax
    00000876: 	cmpq	%rax, %rbp
    00000879: 	je	.Ltmp1292 # Offset: 2169
    0000087f: 	leaq	0x10(%rbp), %rdi
    00000883: 	movq	0xd8(%rsp), %r13
    0000088b: 	movq	%rdi, (%rbp)
    0000088f: 	movq	0xd0(%rsp), %r15
    00000897: 	movq	%r15, %rax
    0000089a: 	addq	%r13, %rax
    0000089d: 	je	.Ltmp1293 # Offset: 2205
    0000089f: 	testq	%r15, %r15
    000008a2: 	je	.Ltmp1294 # Offset: 2210
.Ltmp1293:
    000008a8: 	movq	%r13, 0xa8(%rsp)
    000008b0: 	cmpq	$0xf, %r13
    000008b4: 	ja	.Ltmp1295 # Offset: 2228
    000008ba: 	cmpq	$0x1, %r13
    000008be: 	jne	.Ltmp1296 # Offset: 2238
    000008c4: 	movzbl	(%r15), %eax
    000008c8: 	movb	%al, 0x10(%rbp)
.Ltmp1490:
    000008cb: 	movq	%r13, 0x8(%rbp)
    000008cf: 	movb	$0x0, (%rdi,%r13)
    000008d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008db: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008e2: 	addq	$0x20, %rax
    000008e6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008ed: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000008f4: 	je	.Ltmp1297 # Offset: 2292
.Ltmp1450:
    000008fa: 	movq	-0x20(%rax), %rbp
    000008fe: 	callq	clock@PLT # Offset: 2302
    00000903: 	pxor	%xmm0, %xmm0
    00000907: 	movq	%rax, end_time(%rip)
    0000090e: 	movq	%rbp, %rdi
    00000911: 	subq	start_time(%rip), %rax
    00000918: 	cvtsi2sd	%rax, %xmm0
    0000091d: 	divsd	DATAat0x17358(%rip), %xmm0
    00000925: 	callq	_Z13record_resultdPKc # Offset: 2341
    0000092a: 	movq	0xd0(%rsp), %rdi
    00000932: 	cmpq	0x88(%rsp), %rdi
    0000093a: 	je	.Ltmp1298 # Offset: 2362
    0000093c: 	movq	0xe0(%rsp), %rax
    00000944: 	leaq	0x1(%rax), %rsi
    00000948: 	callq	_ZdlPvm@PLT # Offset: 2376
.Ltmp1298:
    0000094d: 	movq	0x90(%rsp), %rsi
    00000955: 	leaq	DATAat0x17217(%rip), %rdx
    0000095c: 	movq	%r14, %rdi
    0000095f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2399
    00000964: 	callq	clock@PLT # Offset: 2404
    00000969: 	movl	iterations(%rip), %edx
    0000096f: 	movq	%rax, start_time(%rip)
    00000976: 	testl	%edx, %edx
    00000978: 	jle	.Ltmp1299 # Offset: 2424
    0000097e: 	movsd	0x68(%rsp), %xmm1
    00000984: 	movsd	DATAat0x17370(%rip), %xmm4
    0000098c: 	pxor	%xmm3, %xmm3
    00000990: 	xorl	%r13d, %r13d
    00000993: 	movsd	DATAat0x17350(%rip), %xmm7
    0000099b: 	leaq	init_value(%rip), %rbp
    000009a2: 	movsd	%xmm3, 0x60(%rsp)
    000009a8: 	leaq	DATAat0x171d6(%rip), %r15
    000009af: 	unpcklpd	%xmm1, %xmm1
    000009b3: 	movsd	%xmm4, 0x40(%rsp)
    000009b9: 	movaps	%xmm1, (%rsp)
    000009bd: 	movsd	%xmm7, 0x58(%rsp)
    000009c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1303:
    000009c8: 	pxor	%xmm1, %xmm1
    000009cc: 	movq	%r12, %rax
    000009cf: 	movapd	%xmm1, %xmm2
    000009d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1300:
    000009d8: 	movapd	(%rax), %xmm0
    000009dc: 	movapd	(%rsp), %xmm5
    000009e1: 	addq	$0x20, %rax
    000009e5: 	subpd	%xmm5, %xmm0
    000009e9: 	addpd	%xmm0, %xmm2
    000009ed: 	movapd	-0x10(%rax), %xmm0
    000009f2: 	subpd	%xmm5, %xmm0
    000009f6: 	addpd	%xmm0, %xmm1
    000009fa: 	cmpq	%rbx, %rax
    000009fd: 	jne	.Ltmp1300 # Offset: 2557
    000009ff: 	movsd	(%rbp), %xmm3
    00000a04: 	subsd	0x68(%rsp), %xmm3
    00000a0a: 	movapd	%xmm2, %xmm7
    00000a0e: 	mulsd	0x40(%rsp), %xmm3
    00000a14: 	unpckhpd	%xmm7, %xmm7
    00000a18: 	movapd	%xmm7, %xmm0
    00000a1c: 	subsd	%xmm3, %xmm2
    00000a20: 	subsd	%xmm3, %xmm0
    00000a24: 	addsd	%xmm2, %xmm0
    00000a28: 	movapd	%xmm1, %xmm2
    00000a2c: 	unpckhpd	%xmm1, %xmm1
    00000a30: 	subsd	%xmm3, %xmm2
    00000a34: 	subsd	%xmm3, %xmm1
    00000a38: 	addsd	%xmm2, %xmm0
    00000a3c: 	addsd	%xmm1, %xmm0
    00000a40: 	movsd	0x60(%rsp), %xmm1
    00000a46: 	comisd	%xmm0, %xmm1
    00000a4a: 	jbe	.Ltmp1301 # Offset: 2634
    00000a4c: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1301:
    00000a54: 	movsd	0x58(%rsp), %xmm1
    00000a5a: 	comisd	%xmm0, %xmm1
    00000a5e: 	jbe	.Ltmp1302 # Offset: 2654
.Ltmp1439:
    00000a64: 	addl	$0x1, %r13d
    00000a68: 	cmpl	%edx, %r13d
    00000a6b: 	jl	.Ltmp1303 # Offset: 2667
.Ltmp1299:
    00000a71: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a78: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000a7f: 	subq	$0x20, %rax
    00000a83: 	cmpq	%rax, %rbp
    00000a86: 	je	.Ltmp1304 # Offset: 2694
    00000a8c: 	leaq	0x10(%rbp), %rdi
    00000a90: 	movq	0xd8(%rsp), %r13
    00000a98: 	movq	%rdi, (%rbp)
    00000a9c: 	movq	0xd0(%rsp), %r15
    00000aa4: 	movq	%r15, %rax
    00000aa7: 	addq	%r13, %rax
    00000aaa: 	je	.Ltmp1305 # Offset: 2730
    00000aac: 	testq	%r15, %r15
    00000aaf: 	je	.Ltmp1306 # Offset: 2735
.Ltmp1305:
    00000ab5: 	movq	%r13, 0xa8(%rsp)
    00000abd: 	cmpq	$0xf, %r13
    00000ac1: 	ja	.Ltmp1307 # Offset: 2753
    00000ac7: 	cmpq	$0x1, %r13
    00000acb: 	jne	.Ltmp1308 # Offset: 2763
    00000ad1: 	movzbl	(%r15), %eax
    00000ad5: 	movb	%al, 0x10(%rbp)
.Ltmp1480:
    00000ad8: 	movq	%r13, 0x8(%rbp)
    00000adc: 	movb	$0x0, (%rdi,%r13)
    00000ae1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ae8: 	addq	$0x20, %rax
    00000aec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1458:
    00000af3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000afa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b01: 	je	.Ltmp1309 # Offset: 2817
.Ltmp1457:
    00000b07: 	movq	-0x20(%rax), %rbp
    00000b0b: 	callq	clock@PLT # Offset: 2827
    00000b10: 	pxor	%xmm0, %xmm0
    00000b14: 	movq	%rax, end_time(%rip)
    00000b1b: 	movq	%rbp, %rdi
    00000b1e: 	subq	start_time(%rip), %rax
    00000b25: 	cvtsi2sd	%rax, %xmm0
    00000b2a: 	divsd	DATAat0x17358(%rip), %xmm0
    00000b32: 	callq	_Z13record_resultdPKc # Offset: 2866
    00000b37: 	movq	0xd0(%rsp), %rdi
    00000b3f: 	cmpq	0x88(%rsp), %rdi
    00000b47: 	je	.Ltmp1310 # Offset: 2887
    00000b49: 	movq	0xe0(%rsp), %rax
    00000b51: 	leaq	0x1(%rax), %rsi
    00000b55: 	callq	_ZdlPvm@PLT # Offset: 2901
.Ltmp1310:
    00000b5a: 	movq	0x90(%rsp), %rsi
    00000b62: 	leaq	DATAat0x1722a(%rip), %rdx
    00000b69: 	movq	%r14, %rdi
    00000b6c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2924
    00000b71: 	callq	clock@PLT # Offset: 2929
    00000b76: 	movl	iterations(%rip), %edx
    00000b7c: 	movq	%rax, start_time(%rip)
    00000b83: 	testl	%edx, %edx
    00000b85: 	jle	.Ltmp1311 # Offset: 2949
    00000b8b: 	movsd	0x80(%rsp), %xmm0
    00000b94: 	pxor	%xmm1, %xmm1
    00000b98: 	addsd	0x68(%rsp), %xmm0
    00000b9e: 	xorl	%r13d, %r13d
    00000ba1: 	addsd	0x78(%rsp), %xmm0
    00000ba7: 	movsd	0x70(%rsp), %xmm7
    00000bad: 	movsd	%xmm1, 0x60(%rsp)
    00000bb3: 	leaq	init_value(%rip), %rbp
    00000bba: 	movsd	DATAat0x17370(%rip), %xmm3
    00000bc2: 	movsd	DATAat0x17350(%rip), %xmm6
    00000bca: 	leaq	DATAat0x171d6(%rip), %r15
    00000bd1: 	addsd	%xmm0, %xmm7
    00000bd5: 	movsd	%xmm3, 0x40(%rsp)
    00000bdb: 	movsd	%xmm6, 0x58(%rsp)
    00000be1: 	movapd	%xmm7, %xmm1
    00000be5: 	movsd	%xmm7, 0x10(%rsp)
    00000beb: 	unpcklpd	%xmm1, %xmm1
    00000bef: 	movaps	%xmm1, (%rsp)
    00000bf3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1315:
    00000bf8: 	pxor	%xmm1, %xmm1
    00000bfc: 	movq	%r12, %rax
    00000bff: 	movapd	%xmm1, %xmm2
    00000c03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1312:
    00000c08: 	movapd	(%rax), %xmm0
    00000c0c: 	movapd	(%rsp), %xmm6
    00000c11: 	addq	$0x20, %rax
    00000c15: 	subpd	%xmm6, %xmm0
    00000c19: 	addpd	%xmm0, %xmm2
    00000c1d: 	movapd	-0x10(%rax), %xmm0
    00000c22: 	subpd	%xmm6, %xmm0
    00000c26: 	addpd	%xmm0, %xmm1
    00000c2a: 	cmpq	%rbx, %rax
    00000c2d: 	jne	.Ltmp1312 # Offset: 3117
    00000c2f: 	movsd	(%rbp), %xmm3
    00000c34: 	subsd	0x10(%rsp), %xmm3
    00000c3a: 	movapd	%xmm2, %xmm4
    00000c3e: 	mulsd	0x40(%rsp), %xmm3
    00000c44: 	unpckhpd	%xmm4, %xmm4
    00000c48: 	movapd	%xmm4, %xmm0
    00000c4c: 	subsd	%xmm3, %xmm2
    00000c50: 	subsd	%xmm3, %xmm0
    00000c54: 	addsd	%xmm2, %xmm0
    00000c58: 	movapd	%xmm1, %xmm2
    00000c5c: 	unpckhpd	%xmm1, %xmm1
    00000c60: 	subsd	%xmm3, %xmm2
    00000c64: 	subsd	%xmm3, %xmm1
    00000c68: 	addsd	%xmm2, %xmm0
    00000c6c: 	addsd	%xmm1, %xmm0
    00000c70: 	movsd	0x60(%rsp), %xmm1
    00000c76: 	comisd	%xmm0, %xmm1
    00000c7a: 	jbe	.Ltmp1313 # Offset: 3194
    00000c7c: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1313:
    00000c84: 	movsd	0x58(%rsp), %xmm1
    00000c8a: 	comisd	%xmm0, %xmm1
    00000c8e: 	jbe	.Ltmp1314 # Offset: 3214
.Ltmp1438:
    00000c94: 	addl	$0x1, %r13d
    00000c98: 	cmpl	%edx, %r13d
    00000c9b: 	jl	.Ltmp1315 # Offset: 3227
.Ltmp1311:
    00000ca1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ca8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000caf: 	subq	$0x20, %rax
    00000cb3: 	cmpq	%rax, %rbp
    00000cb6: 	je	.Ltmp1316 # Offset: 3254
    00000cbc: 	leaq	0x10(%rbp), %rdi
    00000cc0: 	movq	0xd8(%rsp), %r13
    00000cc8: 	movq	%rdi, (%rbp)
    00000ccc: 	movq	0xd0(%rsp), %r15
    00000cd4: 	movq	%r15, %rax
    00000cd7: 	addq	%r13, %rax
    00000cda: 	je	.Ltmp1317 # Offset: 3290
    00000cdc: 	testq	%r15, %r15
    00000cdf: 	je	.Ltmp1318 # Offset: 3295
.Ltmp1317:
    00000ce5: 	movq	%r13, 0xa8(%rsp)
    00000ced: 	cmpq	$0xf, %r13
    00000cf1: 	ja	.Ltmp1319 # Offset: 3313
    00000cf7: 	cmpq	$0x1, %r13
    00000cfb: 	jne	.Ltmp1320 # Offset: 3323
    00000d01: 	movzbl	(%r15), %eax
    00000d05: 	movb	%al, 0x10(%rbp)
.Ltmp1469:
    00000d08: 	movq	%r13, 0x8(%rbp)
    00000d0c: 	movb	$0x0, (%rdi,%r13)
    00000d11: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d18: 	addq	$0x20, %rax
    00000d1c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1467:
    00000d23: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d31: 	je	.Ltmp1321 # Offset: 3377
.Ltmp1466:
    00000d37: 	movq	-0x20(%rax), %rbp
    00000d3b: 	callq	clock@PLT # Offset: 3387
    00000d40: 	pxor	%xmm0, %xmm0
    00000d44: 	movq	%rax, end_time(%rip)
    00000d4b: 	movq	%rbp, %rdi
    00000d4e: 	subq	start_time(%rip), %rax
    00000d55: 	cvtsi2sd	%rax, %xmm0
    00000d5a: 	divsd	DATAat0x17358(%rip), %xmm0
    00000d62: 	callq	_Z13record_resultdPKc # Offset: 3426
    00000d67: 	movq	0xd0(%rsp), %rdi
    00000d6f: 	cmpq	0x88(%rsp), %rdi
    00000d77: 	je	.Ltmp1322 # Offset: 3447
    00000d79: 	movq	0xe0(%rsp), %rax
    00000d81: 	leaq	0x1(%rax), %rsi
    00000d85: 	callq	_ZdlPvm@PLT # Offset: 3461
.Ltmp1322:
    00000d8a: 	movq	0x90(%rsp), %rsi
    00000d92: 	leaq	DATAat0x17247(%rip), %rdx
    00000d99: 	movq	%r14, %rdi
    00000d9c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3484
    00000da1: 	callq	clock@PLT # Offset: 3489
    00000da6: 	movl	iterations(%rip), %edx
    00000dac: 	movq	%rax, start_time(%rip)
    00000db3: 	testl	%edx, %edx
    00000db5: 	jle	.Ltmp1323 # Offset: 3509
    00000dbb: 	movsd	0x68(%rsp), %xmm1
    00000dc1: 	pxor	%xmm4, %xmm4
    00000dc5: 	xorl	%r13d, %r13d
    00000dc8: 	movsd	DATAat0x17370(%rip), %xmm7
    00000dd0: 	movsd	%xmm4, 0x60(%rsp)
    00000dd6: 	movsd	DATAat0x17350(%rip), %xmm3
    00000dde: 	movsd	0x80(%rsp), %xmm4
    00000de7: 	leaq	init_value(%rip), %rbp
    00000dee: 	unpcklpd	%xmm1, %xmm1
    00000df2: 	movsd	%xmm7, 0x40(%rsp)
    00000df8: 	leaq	DATAat0x171d6(%rip), %r15
    00000dff: 	movaps	%xmm1, (%rsp)
    00000e03: 	movsd	0x70(%rsp), %xmm1
    00000e09: 	unpcklpd	%xmm4, %xmm4
    00000e0d: 	movsd	%xmm3, 0x58(%rsp)
    00000e13: 	unpcklpd	%xmm1, %xmm1
    00000e17: 	movaps	%xmm4, 0x30(%rsp)
    00000e1c: 	movaps	%xmm1, 0x10(%rsp)
    00000e21: 	movsd	0x78(%rsp), %xmm1
    00000e27: 	unpcklpd	%xmm1, %xmm1
    00000e2b: 	movaps	%xmm1, 0x20(%rsp)
.Ltmp1327:
    00000e30: 	pxor	%xmm1, %xmm1
    00000e34: 	movq	%r12, %rax
    00000e37: 	movapd	%xmm1, %xmm2
    00000e3b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1324:
    00000e40: 	movapd	(%rax), %xmm0
    00000e44: 	movapd	(%rsp), %xmm7
    00000e49: 	addq	$0x20, %rax
    00000e4d: 	movapd	0x30(%rsp), %xmm4
    00000e53: 	movapd	0x20(%rsp), %xmm3
    00000e59: 	subpd	%xmm7, %xmm0
    00000e5d: 	movapd	0x10(%rsp), %xmm5
    00000e63: 	subpd	%xmm4, %xmm0
    00000e67: 	subpd	%xmm3, %xmm0
    00000e6b: 	subpd	%xmm5, %xmm0
    00000e6f: 	addpd	%xmm0, %xmm2
    00000e73: 	movapd	-0x10(%rax), %xmm0
    00000e78: 	subpd	%xmm7, %xmm0
    00000e7c: 	subpd	%xmm4, %xmm0
    00000e80: 	subpd	%xmm3, %xmm0
    00000e84: 	subpd	%xmm5, %xmm0
    00000e88: 	addpd	%xmm0, %xmm1
    00000e8c: 	cmpq	%rbx, %rax
    00000e8f: 	jne	.Ltmp1324 # Offset: 3727
    00000e91: 	movsd	(%rbp), %xmm0
    00000e96: 	subsd	0x68(%rsp), %xmm0
    00000e9c: 	movapd	%xmm2, %xmm6
    00000ea0: 	subsd	0x80(%rsp), %xmm0
    00000ea9: 	subsd	0x78(%rsp), %xmm0
    00000eaf: 	unpckhpd	%xmm6, %xmm6
    00000eb3: 	subsd	0x70(%rsp), %xmm0
    00000eb9: 	mulsd	0x40(%rsp), %xmm0
    00000ebf: 	movapd	%xmm6, %xmm3
    00000ec3: 	subsd	%xmm0, %xmm3
    00000ec7: 	subsd	%xmm0, %xmm2
    00000ecb: 	addsd	%xmm3, %xmm2
    00000ecf: 	movapd	%xmm1, %xmm3
    00000ed3: 	unpckhpd	%xmm1, %xmm1
    00000ed7: 	subsd	%xmm0, %xmm3
    00000edb: 	subsd	%xmm0, %xmm1
    00000edf: 	addsd	%xmm3, %xmm2
    00000ee3: 	addsd	%xmm1, %xmm2
    00000ee7: 	movsd	0x60(%rsp), %xmm1
    00000eed: 	comisd	%xmm2, %xmm1
    00000ef1: 	movapd	%xmm2, %xmm0
    00000ef5: 	jbe	.Ltmp1325 # Offset: 3829
    00000ef7: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1325:
    00000eff: 	movsd	0x58(%rsp), %xmm1
    00000f05: 	comisd	%xmm0, %xmm1
    00000f09: 	jbe	.Ltmp1326 # Offset: 3849
.Ltmp1437:
    00000f0f: 	addl	$0x1, %r13d
    00000f13: 	cmpl	%edx, %r13d
    00000f16: 	jl	.Ltmp1327 # Offset: 3862
.Ltmp1323:
    00000f1c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f23: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00000f2a: 	subq	$0x20, %rax
    00000f2e: 	cmpq	%rax, %rbp
    00000f31: 	je	.Ltmp1328 # Offset: 3889
    00000f37: 	leaq	0x10(%rbp), %rdi
    00000f3b: 	movq	0xd8(%rsp), %r13
    00000f43: 	movq	%rdi, (%rbp)
    00000f47: 	movq	0xd0(%rsp), %r15
    00000f4f: 	movq	%r15, %rax
    00000f52: 	addq	%r13, %rax
    00000f55: 	je	.Ltmp1329 # Offset: 3925
    00000f57: 	testq	%r15, %r15
    00000f5a: 	je	.Ltmp1330 # Offset: 3930
.Ltmp1329:
    00000f60: 	movq	%r13, 0xa8(%rsp)
    00000f68: 	cmpq	$0xf, %r13
    00000f6c: 	ja	.Ltmp1331 # Offset: 3948
    00000f72: 	cmpq	$0x1, %r13
    00000f76: 	jne	.Ltmp1332 # Offset: 3958
    00000f7c: 	movzbl	(%r15), %eax
    00000f80: 	movb	%al, 0x10(%rbp)
.Ltmp1478:
    00000f83: 	movq	%r13, 0x8(%rbp)
    00000f87: 	movb	$0x0, (%rdi,%r13)
    00000f8c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f93: 	addq	$0x20, %rax
    00000f97: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1456:
    00000f9e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000fa5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fac: 	je	.Ltmp1333 # Offset: 4012
.Ltmp1449:
    00000fb2: 	movq	-0x20(%rax), %rbp
    00000fb6: 	callq	clock@PLT # Offset: 4022
    00000fbb: 	pxor	%xmm0, %xmm0
    00000fbf: 	movq	%rax, end_time(%rip)
    00000fc6: 	movq	%rbp, %rdi
    00000fc9: 	subq	start_time(%rip), %rax
    00000fd0: 	cvtsi2sd	%rax, %xmm0
    00000fd5: 	divsd	DATAat0x17358(%rip), %xmm0
    00000fdd: 	callq	_Z13record_resultdPKc # Offset: 4061
    00000fe2: 	movq	0xd0(%rsp), %rdi
    00000fea: 	cmpq	0x88(%rsp), %rdi
    00000ff2: 	je	.Ltmp1334 # Offset: 4082
    00000ff4: 	movq	0xe0(%rsp), %rax
    00000ffc: 	leaq	0x1(%rax), %rsi
    00001000: 	callq	_ZdlPvm@PLT # Offset: 4096
.Ltmp1334:
    00001005: 	movq	0x90(%rsp), %rsi
    0000100d: 	leaq	DATAat0x17265(%rip), %rdx
    00001014: 	movq	%r14, %rdi
    00001017: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4119
    0000101c: 	callq	clock@PLT # Offset: 4124
    00001021: 	movl	iterations(%rip), %edx
    00001027: 	movq	%rax, start_time(%rip)
    0000102e: 	testl	%edx, %edx
    00001030: 	jle	.Ltmp1335 # Offset: 4144
    00001036: 	movsd	0x68(%rsp), %xmm7
    0000103c: 	movsd	DATAat0x17350(%rip), %xmm6
    00001044: 	pxor	%xmm1, %xmm1
    00001048: 	xorl	%r13d, %r13d
    0000104b: 	leaq	init_value(%rip), %rbp
    00001052: 	movsd	%xmm1, 0x60(%rsp)
    00001058: 	leaq	DATAat0x171d6(%rip), %r15
    0000105f: 	unpcklpd	%xmm7, %xmm7
    00001063: 	movsd	%xmm6, 0x58(%rsp)
    00001069: 	movaps	%xmm7, (%rsp)
    0000106d: 	movsd	DATAat0x17370(%rip), %xmm7
    00001075: 	movsd	%xmm7, 0x40(%rsp)
    0000107b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1339:
    00001080: 	pxor	%xmm0, %xmm0
    00001084: 	movq	%r12, %rax
    00001087: 	movapd	%xmm0, %xmm1
    0000108b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1336:
    00001090: 	movapd	(%rsp), %xmm7
    00001095: 	movapd	(%rax), %xmm2
    00001099: 	addq	$0x20, %rax
    0000109d: 	mulpd	%xmm7, %xmm2
    000010a1: 	mulpd	-0x10(%rax), %xmm7
    000010a6: 	addpd	%xmm2, %xmm1
    000010aa: 	addpd	%xmm7, %xmm0
    000010ae: 	cmpq	%rax, %rbx
    000010b1: 	jne	.Ltmp1336 # Offset: 4273
    000010b3: 	movsd	0x68(%rsp), %xmm3
    000010b9: 	mulsd	(%rbp), %xmm3
    000010be: 	movapd	%xmm1, %xmm7
    000010c2: 	mulsd	0x40(%rsp), %xmm3
    000010c8: 	unpckhpd	%xmm7, %xmm7
    000010cc: 	movapd	%xmm7, %xmm2
    000010d0: 	subsd	%xmm3, %xmm2
    000010d4: 	subsd	%xmm3, %xmm1
    000010d8: 	addsd	%xmm2, %xmm1
    000010dc: 	movapd	%xmm0, %xmm2
    000010e0: 	unpckhpd	%xmm0, %xmm0
    000010e4: 	subsd	%xmm3, %xmm2
    000010e8: 	subsd	%xmm3, %xmm0
    000010ec: 	addsd	%xmm2, %xmm1
    000010f0: 	addsd	%xmm1, %xmm0
    000010f4: 	movsd	0x60(%rsp), %xmm1
    000010fa: 	comisd	%xmm0, %xmm1
    000010fe: 	jbe	.Ltmp1337 # Offset: 4350
    00001100: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1337:
    00001108: 	movsd	0x58(%rsp), %xmm1
    0000110e: 	comisd	%xmm0, %xmm1
    00001112: 	jbe	.Ltmp1338 # Offset: 4370
.Ltmp1446:
    00001118: 	addl	$0x1, %r13d
    0000111c: 	cmpl	%edx, %r13d
    0000111f: 	jl	.Ltmp1339 # Offset: 4383
.Ltmp1335:
    00001125: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000112c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001133: 	subq	$0x20, %rax
    00001137: 	cmpq	%rax, %rbp
    0000113a: 	je	.Ltmp1340 # Offset: 4410
    00001140: 	leaq	0x10(%rbp), %rdi
    00001144: 	movq	0xd8(%rsp), %r13
    0000114c: 	movq	%rdi, (%rbp)
    00001150: 	movq	0xd0(%rsp), %r15
    00001158: 	movq	%r15, %rax
    0000115b: 	addq	%r13, %rax
    0000115e: 	je	.Ltmp1341 # Offset: 4446
    00001160: 	testq	%r15, %r15
    00001163: 	je	.Ltmp1342 # Offset: 4451
.Ltmp1341:
    00001169: 	movq	%r13, 0xa8(%rsp)
    00001171: 	cmpq	$0xf, %r13
    00001175: 	ja	.Ltmp1343 # Offset: 4469
    0000117b: 	cmpq	$0x1, %r13
    0000117f: 	jne	.Ltmp1344 # Offset: 4479
    00001185: 	movzbl	(%r15), %eax
    00001189: 	movb	%al, 0x10(%rbp)
.Ltmp1485:
    0000118c: 	movq	%r13, 0x8(%rbp)
    00001190: 	movb	$0x0, (%rdi,%r13)
    00001195: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000119c: 	addq	$0x20, %rax
    000011a0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1448:
    000011a7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011ae: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011b5: 	je	.Ltmp1345 # Offset: 4533
.Ltmp1447:
    000011bb: 	movq	-0x20(%rax), %rbp
    000011bf: 	callq	clock@PLT # Offset: 4543
    000011c4: 	pxor	%xmm0, %xmm0
    000011c8: 	movq	%rax, end_time(%rip)
    000011cf: 	movq	%rbp, %rdi
    000011d2: 	subq	start_time(%rip), %rax
    000011d9: 	cvtsi2sd	%rax, %xmm0
    000011de: 	divsd	DATAat0x17358(%rip), %xmm0
    000011e6: 	callq	_Z13record_resultdPKc # Offset: 4582
    000011eb: 	movq	0xd0(%rsp), %rdi
    000011f3: 	cmpq	0x88(%rsp), %rdi
    000011fb: 	je	.Ltmp1346 # Offset: 4603
    000011fd: 	movq	0xe0(%rsp), %rax
    00001205: 	leaq	0x1(%rax), %rsi
    00001209: 	callq	_ZdlPvm@PLT # Offset: 4617
.Ltmp1346:
    0000120e: 	movq	0x90(%rsp), %rsi
    00001216: 	leaq	DATAat0x17278(%rip), %rdx
    0000121d: 	movq	%r14, %rdi
    00001220: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4640
    00001225: 	callq	clock@PLT # Offset: 4645
    0000122a: 	movl	iterations(%rip), %edx
    00001230: 	movq	%rax, start_time(%rip)
    00001237: 	testl	%edx, %edx
    00001239: 	jle	.Ltmp1347 # Offset: 4665
    0000123f: 	movsd	0x80(%rsp), %xmm0
    00001248: 	mulsd	0x68(%rsp), %xmm0
    0000124e: 	pxor	%xmm4, %xmm4
    00001252: 	xorl	%r13d, %r13d
    00001255: 	mulsd	0x78(%rsp), %xmm0
    0000125b: 	movsd	0x70(%rsp), %xmm6
    00001261: 	leaq	init_value(%rip), %rbp
    00001268: 	movsd	%xmm4, 0x60(%rsp)
    0000126e: 	movsd	DATAat0x17370(%rip), %xmm1
    00001276: 	movsd	DATAat0x17350(%rip), %xmm3
    0000127e: 	leaq	DATAat0x171d6(%rip), %r15
    00001285: 	movsd	%xmm1, 0x40(%rsp)
    0000128b: 	movsd	%xmm3, 0x58(%rsp)
    00001291: 	mulsd	%xmm0, %xmm6
    00001295: 	movapd	%xmm6, %xmm1
    00001299: 	movsd	%xmm6, 0x10(%rsp)
    0000129f: 	unpcklpd	%xmm1, %xmm1
    000012a3: 	movaps	%xmm1, (%rsp)
    000012a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1351:
    000012b0: 	pxor	%xmm0, %xmm0
    000012b4: 	movq	%r12, %rax
    000012b7: 	movapd	%xmm0, %xmm1
    000012bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1348:
    000012c0: 	movapd	(%rsp), %xmm5
    000012c5: 	movapd	(%rax), %xmm2
    000012c9: 	addq	$0x20, %rax
    000012cd: 	mulpd	%xmm5, %xmm2
    000012d1: 	mulpd	-0x10(%rax), %xmm5
    000012d6: 	addpd	%xmm2, %xmm1
    000012da: 	addpd	%xmm5, %xmm0
    000012de: 	cmpq	%rbx, %rax
    000012e1: 	jne	.Ltmp1348 # Offset: 4833
    000012e3: 	movsd	0x10(%rsp), %xmm3
    000012e9: 	mulsd	(%rbp), %xmm3
    000012ee: 	movapd	%xmm1, %xmm4
    000012f2: 	mulsd	0x40(%rsp), %xmm3
    000012f8: 	unpckhpd	%xmm4, %xmm4
    000012fc: 	movapd	%xmm4, %xmm2
    00001300: 	subsd	%xmm3, %xmm2
    00001304: 	subsd	%xmm3, %xmm1
    00001308: 	addsd	%xmm2, %xmm1
    0000130c: 	movapd	%xmm0, %xmm2
    00001310: 	unpckhpd	%xmm0, %xmm0
    00001314: 	subsd	%xmm3, %xmm2
    00001318: 	subsd	%xmm3, %xmm0
    0000131c: 	addsd	%xmm2, %xmm1
    00001320: 	addsd	%xmm1, %xmm0
    00001324: 	movsd	0x60(%rsp), %xmm1
    0000132a: 	comisd	%xmm0, %xmm1
    0000132e: 	jbe	.Ltmp1349 # Offset: 4910
    00001330: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1349:
    00001338: 	movsd	0x58(%rsp), %xmm1
    0000133e: 	comisd	%xmm0, %xmm1
    00001342: 	jbe	.Ltmp1350 # Offset: 4930
.Ltmp1445:
    00001348: 	addl	$0x1, %r13d
    0000134c: 	cmpl	%edx, %r13d
    0000134f: 	jl	.Ltmp1351 # Offset: 4943
.Ltmp1347:
    00001355: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000135c: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001363: 	subq	$0x20, %rax
    00001367: 	cmpq	%rax, %rbp
    0000136a: 	je	.Ltmp1352 # Offset: 4970
    00001370: 	leaq	0x10(%rbp), %rdi
    00001374: 	movq	0xd8(%rsp), %r13
    0000137c: 	movq	%rdi, (%rbp)
    00001380: 	movq	0xd0(%rsp), %r15
    00001388: 	movq	%r15, %rax
    0000138b: 	addq	%r13, %rax
    0000138e: 	je	.Ltmp1353 # Offset: 5006
    00001390: 	testq	%r15, %r15
    00001393: 	je	.Ltmp1354 # Offset: 5011
.Ltmp1353:
    00001399: 	movq	%r13, 0xa8(%rsp)
    000013a1: 	cmpq	$0xf, %r13
    000013a5: 	ja	.Ltmp1355 # Offset: 5029
    000013ab: 	cmpq	$0x1, %r13
    000013af: 	jne	.Ltmp1356 # Offset: 5039
    000013b5: 	movzbl	(%r15), %eax
    000013b9: 	movb	%al, 0x10(%rbp)
.Ltmp1472:
    000013bc: 	movq	%r13, 0x8(%rbp)
    000013c0: 	movb	$0x0, (%rdi,%r13)
    000013c5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013cc: 	addq	$0x20, %rax
    000013d0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1462:
    000013d7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013e5: 	je	.Ltmp1357 # Offset: 5093
.Ltmp1461:
    000013eb: 	movq	-0x20(%rax), %rbp
    000013ef: 	callq	clock@PLT # Offset: 5103
    000013f4: 	pxor	%xmm0, %xmm0
    000013f8: 	movq	%rax, end_time(%rip)
    000013ff: 	movq	%rbp, %rdi
    00001402: 	subq	start_time(%rip), %rax
    00001409: 	cvtsi2sd	%rax, %xmm0
    0000140e: 	divsd	DATAat0x17358(%rip), %xmm0
    00001416: 	callq	_Z13record_resultdPKc # Offset: 5142
    0000141b: 	movq	0xd0(%rsp), %rdi
    00001423: 	cmpq	0x88(%rsp), %rdi
    0000142b: 	je	.Ltmp1358 # Offset: 5163
    0000142d: 	movq	0xe0(%rsp), %rax
    00001435: 	leaq	0x1(%rax), %rsi
    00001439: 	callq	_ZdlPvm@PLT # Offset: 5177
.Ltmp1358:
    0000143e: 	movq	0x90(%rsp), %rsi
    00001446: 	leaq	DATAat0x17308(%rip), %rdx
    0000144d: 	movq	%r14, %rdi
    00001450: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5200
    00001455: 	callq	clock@PLT # Offset: 5205
    0000145a: 	movl	iterations(%rip), %edx
    00001460: 	movq	%rax, start_time(%rip)
    00001467: 	testl	%edx, %edx
    00001469: 	jle	.Ltmp1359 # Offset: 5225
    0000146f: 	movsd	0x80(%rsp), %xmm0
    00001478: 	pxor	%xmm3, %xmm3
    0000147c: 	movsd	0x70(%rsp), %xmm1
    00001482: 	xorl	%r13d, %r13d
    00001485: 	mulsd	0x68(%rsp), %xmm0
    0000148b: 	movsd	DATAat0x17370(%rip), %xmm4
    00001493: 	movsd	%xmm3, 0x60(%rsp)
    00001499: 	leaq	init_value(%rip), %rbp
    000014a0: 	mulsd	0x78(%rsp), %xmm0
    000014a6: 	movsd	DATAat0x17350(%rip), %xmm7
    000014ae: 	leaq	DATAat0x171d6(%rip), %r15
    000014b5: 	movsd	%xmm4, 0x40(%rsp)
    000014bb: 	movsd	%xmm7, 0x58(%rsp)
    000014c1: 	mulsd	%xmm0, %xmm1
    000014c5: 	movapd	%xmm1, %xmm3
    000014c9: 	movsd	%xmm1, 0x10(%rsp)
    000014cf: 	unpcklpd	%xmm3, %xmm3
    000014d3: 	movaps	%xmm3, (%rsp)
    000014d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1363:
    000014e0: 	pxor	%xmm0, %xmm0
    000014e4: 	movq	%r12, %rax
    000014e7: 	movapd	%xmm0, %xmm1
    000014eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1360:
    000014f0: 	movapd	(%rsp), %xmm6
    000014f5: 	movapd	(%rax), %xmm2
    000014f9: 	addq	$0x20, %rax
    000014fd: 	addpd	%xmm6, %xmm2
    00001501: 	addpd	-0x10(%rax), %xmm6
    00001506: 	addpd	%xmm2, %xmm1
    0000150a: 	addpd	%xmm6, %xmm0
    0000150e: 	cmpq	%rbx, %rax
    00001511: 	jne	.Ltmp1360 # Offset: 5393
    00001513: 	movsd	0x10(%rsp), %xmm3
    00001519: 	addsd	(%rbp), %xmm3
    0000151e: 	movapd	%xmm1, %xmm6
    00001522: 	mulsd	0x40(%rsp), %xmm3
    00001528: 	unpckhpd	%xmm6, %xmm6
    0000152c: 	movapd	%xmm6, %xmm2
    00001530: 	subsd	%xmm3, %xmm2
    00001534: 	subsd	%xmm3, %xmm1
    00001538: 	addsd	%xmm2, %xmm1
    0000153c: 	movapd	%xmm0, %xmm2
    00001540: 	unpckhpd	%xmm0, %xmm0
    00001544: 	subsd	%xmm3, %xmm2
    00001548: 	subsd	%xmm3, %xmm0
    0000154c: 	addsd	%xmm2, %xmm1
    00001550: 	addsd	%xmm1, %xmm0
    00001554: 	movsd	0x60(%rsp), %xmm1
    0000155a: 	comisd	%xmm0, %xmm1
    0000155e: 	jbe	.Ltmp1361 # Offset: 5470
    00001560: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1361:
    00001568: 	movsd	0x58(%rsp), %xmm1
    0000156e: 	comisd	%xmm0, %xmm1
    00001572: 	jbe	.Ltmp1362 # Offset: 5490
.Ltmp1444:
    00001578: 	addl	$0x1, %r13d
    0000157c: 	cmpl	%edx, %r13d
    0000157f: 	jl	.Ltmp1363 # Offset: 5503
.Ltmp1359:
    00001585: 	movq	%r14, %rdi
    00001588: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5512
    0000158d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001594: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000159b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000015a2: 	je	.Ltmp1364 # Offset: 5538
.Ltmp1460:
    000015a8: 	movq	-0x20(%rax), %rbp
    000015ac: 	callq	clock@PLT # Offset: 5548
    000015b1: 	pxor	%xmm0, %xmm0
    000015b5: 	movq	%rax, end_time(%rip)
    000015bc: 	movq	%rbp, %rdi
    000015bf: 	subq	start_time(%rip), %rax
    000015c6: 	cvtsi2sd	%rax, %xmm0
    000015cb: 	divsd	DATAat0x17358(%rip), %xmm0
    000015d3: 	callq	_Z13record_resultdPKc # Offset: 5587
    000015d8: 	movq	0xd0(%rsp), %rdi
    000015e0: 	cmpq	0x88(%rsp), %rdi
    000015e8: 	je	.Ltmp1365 # Offset: 5608
    000015ea: 	movq	0xe0(%rsp), %rax
    000015f2: 	leaq	0x1(%rax), %rsi
    000015f6: 	callq	_ZdlPvm@PLT # Offset: 5622
.Ltmp1365:
    000015fb: 	movq	0x90(%rsp), %rsi
    00001603: 	leaq	DATAat0x17328(%rip), %rdx
    0000160a: 	movq	%r14, %rdi
    0000160d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5645
    00001612: 	callq	clock@PLT # Offset: 5650
    00001617: 	movl	iterations(%rip), %edx
    0000161d: 	movq	%rax, start_time(%rip)
    00001624: 	testl	%edx, %edx
    00001626: 	jle	.Ltmp1366 # Offset: 5670
    0000162c: 	movsd	0x68(%rsp), %xmm4
    00001632: 	movsd	0x70(%rsp), %xmm7
    00001638: 	xorl	%r13d, %r13d
    0000163b: 	leaq	init_value(%rip), %rbp
    00001642: 	movsd	DATAat0x17370(%rip), %xmm1
    0000164a: 	movsd	DATAat0x17350(%rip), %xmm6
    00001652: 	leaq	DATAat0x171d6(%rip), %r15
    00001659: 	unpcklpd	%xmm4, %xmm4
    0000165d: 	unpcklpd	%xmm7, %xmm7
    00001661: 	movsd	%xmm1, 0x40(%rsp)
    00001667: 	pxor	%xmm1, %xmm1
    0000166b: 	movsd	%xmm1, 0x60(%rsp)
    00001671: 	movsd	0x78(%rsp), %xmm1
    00001677: 	movsd	%xmm6, 0x58(%rsp)
    0000167d: 	movsd	0x80(%rsp), %xmm6
    00001686: 	unpcklpd	%xmm1, %xmm1
    0000168a: 	movaps	%xmm4, (%rsp)
    0000168e: 	unpcklpd	%xmm6, %xmm6
    00001692: 	movaps	%xmm7, 0x10(%rsp)
    00001697: 	movaps	%xmm1, 0x20(%rsp)
    0000169c: 	movaps	%xmm6, 0x30(%rsp)
    000016a1: 	nopl	(%rax) # Size: 7
.Ltmp1370:
    000016a8: 	pxor	%xmm1, %xmm1
    000016ac: 	movq	%r12, %rax
    000016af: 	movapd	%xmm1, %xmm2
    000016b3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1367:
    000016b8: 	movapd	(%rsp), %xmm7
    000016bd: 	movapd	(%rax), %xmm0
    000016c1: 	addq	$0x20, %rax
    000016c5: 	movapd	0x30(%rsp), %xmm6
    000016cb: 	movapd	0x20(%rsp), %xmm4
    000016d1: 	mulpd	%xmm7, %xmm0
    000016d5: 	movapd	0x10(%rsp), %xmm3
    000016db: 	mulpd	-0x10(%rax), %xmm7
    000016e0: 	mulpd	%xmm6, %xmm0
    000016e4: 	mulpd	%xmm4, %xmm0
    000016e8: 	mulpd	%xmm3, %xmm0
    000016ec: 	addpd	%xmm0, %xmm2
    000016f0: 	movapd	%xmm7, %xmm0
    000016f4: 	mulpd	%xmm6, %xmm0
    000016f8: 	mulpd	%xmm4, %xmm0
    000016fc: 	mulpd	%xmm3, %xmm0
    00001700: 	addpd	%xmm0, %xmm1
    00001704: 	cmpq	%rbx, %rax
    00001707: 	jne	.Ltmp1367 # Offset: 5895
    00001709: 	movsd	0x68(%rsp), %xmm0
    0000170f: 	mulsd	(%rbp), %xmm0
    00001714: 	movapd	%xmm2, %xmm7
    00001718: 	mulsd	0x80(%rsp), %xmm0
    00001721: 	unpckhpd	%xmm7, %xmm7
    00001725: 	mulsd	0x78(%rsp), %xmm0
    0000172b: 	movapd	%xmm7, %xmm3
    0000172f: 	mulsd	0x70(%rsp), %xmm0
    00001735: 	mulsd	0x40(%rsp), %xmm0
    0000173b: 	subsd	%xmm0, %xmm3
    0000173f: 	subsd	%xmm0, %xmm2
    00001743: 	addsd	%xmm3, %xmm2
    00001747: 	movapd	%xmm1, %xmm3
    0000174b: 	unpckhpd	%xmm1, %xmm1
    0000174f: 	subsd	%xmm0, %xmm3
    00001753: 	subsd	%xmm0, %xmm1
    00001757: 	addsd	%xmm3, %xmm2
    0000175b: 	addsd	%xmm1, %xmm2
    0000175f: 	movsd	0x60(%rsp), %xmm1
    00001765: 	comisd	%xmm2, %xmm1
    00001769: 	movapd	%xmm2, %xmm0
    0000176d: 	jbe	.Ltmp1368 # Offset: 5997
    0000176f: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1368:
    00001777: 	movsd	0x58(%rsp), %xmm1
    0000177d: 	comisd	%xmm0, %xmm1
    00001781: 	jbe	.Ltmp1369 # Offset: 6017
.Ltmp1443:
    00001787: 	addl	$0x1, %r13d
    0000178b: 	cmpl	%edx, %r13d
    0000178e: 	jl	.Ltmp1370 # Offset: 6030
.Ltmp1366:
    00001794: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000179b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000017a2: 	subq	$0x20, %rax
    000017a6: 	cmpq	%rax, %rbp
    000017a9: 	je	.Ltmp1371 # Offset: 6057
    000017af: 	leaq	0x10(%rbp), %rdi
    000017b3: 	movq	0xd8(%rsp), %r13
    000017bb: 	movq	%rdi, (%rbp)
    000017bf: 	movq	0xd0(%rsp), %r15
    000017c7: 	movq	%r15, %rax
    000017ca: 	addq	%r13, %rax
    000017cd: 	je	.Ltmp1372 # Offset: 6093
    000017cf: 	testq	%r15, %r15
    000017d2: 	je	.Ltmp1373 # Offset: 6098
.Ltmp1372:
    000017d8: 	movq	%r13, 0xa8(%rsp)
    000017e0: 	cmpq	$0xf, %r13
    000017e4: 	ja	.Ltmp1374 # Offset: 6116
    000017ea: 	cmpq	$0x1, %r13
    000017ee: 	jne	.Ltmp1375 # Offset: 6126
    000017f4: 	movzbl	(%r15), %eax
    000017f8: 	movb	%al, 0x10(%rbp)
.Ltmp1474:
    000017fb: 	movq	%r13, 0x8(%rbp)
    000017ff: 	movb	$0x0, (%rdi,%r13)
    00001804: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000180b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001812: 	addq	$0x20, %rax
    00001816: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000181d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001824: 	je	.Ltmp1376 # Offset: 6180
.Ltmp1459:
    0000182a: 	movq	-0x20(%rax), %rbp
    0000182e: 	callq	clock@PLT # Offset: 6190
    00001833: 	pxor	%xmm0, %xmm0
    00001837: 	movq	%rax, end_time(%rip)
    0000183e: 	movq	%rbp, %rdi
    00001841: 	subq	start_time(%rip), %rax
    00001848: 	cvtsi2sd	%rax, %xmm0
    0000184d: 	divsd	DATAat0x17358(%rip), %xmm0
    00001855: 	callq	_Z13record_resultdPKc # Offset: 6229
    0000185a: 	movq	0xd0(%rsp), %rdi
    00001862: 	cmpq	0x88(%rsp), %rdi
    0000186a: 	je	.Ltmp1377 # Offset: 6250
    0000186c: 	movq	0xe0(%rsp), %rax
    00001874: 	leaq	0x1(%rax), %rsi
    00001878: 	callq	_ZdlPvm@PLT # Offset: 6264
.Ltmp1377:
    0000187d: 	movq	0x90(%rsp), %rsi
    00001885: 	leaq	DATAat0x17296(%rip), %rdx
    0000188c: 	movq	%r14, %rdi
    0000188f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6287
    00001894: 	callq	clock@PLT # Offset: 6292
    00001899: 	movl	iterations(%rip), %edx
    0000189f: 	movq	%rax, start_time(%rip)
    000018a6: 	testl	%edx, %edx
    000018a8: 	jle	.Ltmp1378 # Offset: 6312
    000018ae: 	movsd	0x68(%rsp), %xmm3
    000018b4: 	movsd	DATAat0x17370(%rip), %xmm4
    000018bc: 	xorl	%r13d, %r13d
    000018bf: 	leaq	init_value(%rip), %rbp
    000018c6: 	movsd	DATAat0x17350(%rip), %xmm7
    000018ce: 	leaq	DATAat0x171d6(%rip), %r15
    000018d5: 	unpcklpd	%xmm3, %xmm3
    000018d9: 	movsd	%xmm4, 0x40(%rsp)
    000018df: 	movaps	%xmm3, (%rsp)
    000018e3: 	pxor	%xmm3, %xmm3
    000018e7: 	movsd	%xmm3, 0x60(%rsp)
    000018ed: 	movsd	%xmm7, 0x58(%rsp)
    000018f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1382:
    000018f8: 	pxor	%xmm1, %xmm1
    000018fc: 	movq	%r12, %rax
    000018ff: 	movapd	%xmm1, %xmm2
    00001903: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1379:
    00001908: 	movapd	(%rax), %xmm0
    0000190c: 	movapd	(%rsp), %xmm7
    00001911: 	addq	$0x20, %rax
    00001915: 	divpd	%xmm7, %xmm0
    00001919: 	addpd	%xmm0, %xmm2
    0000191d: 	movapd	-0x10(%rax), %xmm0
    00001922: 	divpd	%xmm7, %xmm0
    00001926: 	addpd	%xmm0, %xmm1
    0000192a: 	cmpq	%rax, %rbx
    0000192d: 	jne	.Ltmp1379 # Offset: 6445
    0000192f: 	movsd	(%rbp), %xmm3
    00001934: 	divsd	0x68(%rsp), %xmm3
    0000193a: 	movapd	%xmm2, %xmm4
    0000193e: 	mulsd	0x40(%rsp), %xmm3
    00001944: 	unpckhpd	%xmm4, %xmm4
    00001948: 	movapd	%xmm4, %xmm0
    0000194c: 	subsd	%xmm3, %xmm2
    00001950: 	subsd	%xmm3, %xmm0
    00001954: 	addsd	%xmm2, %xmm0
    00001958: 	movapd	%xmm1, %xmm2
    0000195c: 	unpckhpd	%xmm1, %xmm1
    00001960: 	subsd	%xmm3, %xmm2
    00001964: 	subsd	%xmm3, %xmm1
    00001968: 	addsd	%xmm2, %xmm0
    0000196c: 	addsd	%xmm1, %xmm0
    00001970: 	movsd	0x60(%rsp), %xmm1
    00001976: 	comisd	%xmm0, %xmm1
    0000197a: 	jbe	.Ltmp1380 # Offset: 6522
    0000197c: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1380:
    00001984: 	movsd	0x58(%rsp), %xmm1
    0000198a: 	comisd	%xmm0, %xmm1
    0000198e: 	jbe	.Ltmp1381 # Offset: 6542
.Ltmp1442:
    00001994: 	addl	$0x1, %r13d
    00001998: 	cmpl	%edx, %r13d
    0000199b: 	jl	.Ltmp1382 # Offset: 6555
.Ltmp1378:
    000019a1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000019a8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    000019af: 	subq	$0x20, %rax
    000019b3: 	cmpq	%rax, %rbp
    000019b6: 	je	.Ltmp1383 # Offset: 6582
    000019bc: 	leaq	0x10(%rbp), %rdi
    000019c0: 	movq	0xd8(%rsp), %r13
    000019c8: 	movq	%rdi, (%rbp)
    000019cc: 	movq	0xd0(%rsp), %r15
    000019d4: 	movq	%r15, %rax
    000019d7: 	addq	%r13, %rax
    000019da: 	je	.Ltmp1384 # Offset: 6618
    000019dc: 	testq	%r15, %r15
    000019df: 	je	.Ltmp1385 # Offset: 6623
.Ltmp1384:
    000019e5: 	movq	%r13, 0xa8(%rsp)
    000019ed: 	cmpq	$0xf, %r13
    000019f1: 	ja	.Ltmp1386 # Offset: 6641
    000019f7: 	cmpq	$0x1, %r13
    000019fb: 	jne	.Ltmp1387 # Offset: 6651
    00001a01: 	movzbl	(%r15), %eax
    00001a05: 	movb	%al, 0x10(%rbp)
.Ltmp1470:
    00001a08: 	movq	%r13, 0x8(%rbp)
    00001a0c: 	movb	$0x0, (%rdi,%r13)
    00001a11: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a18: 	addq	$0x20, %rax
    00001a1c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1465:
    00001a23: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a2a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a31: 	je	.Ltmp1388 # Offset: 6705
.Ltmp1464:
    00001a37: 	movq	-0x20(%rax), %rbp
    00001a3b: 	callq	clock@PLT # Offset: 6715
    00001a40: 	pxor	%xmm0, %xmm0
    00001a44: 	movq	%rax, end_time(%rip)
    00001a4b: 	movq	%rbp, %rdi
    00001a4e: 	subq	start_time(%rip), %rax
    00001a55: 	cvtsi2sd	%rax, %xmm0
    00001a5a: 	divsd	DATAat0x17358(%rip), %xmm0
    00001a62: 	callq	_Z13record_resultdPKc # Offset: 6754
    00001a67: 	movq	0xd0(%rsp), %rdi
    00001a6f: 	cmpq	0x88(%rsp), %rdi
    00001a77: 	je	.Ltmp1389 # Offset: 6775
    00001a79: 	movq	0xe0(%rsp), %rax
    00001a81: 	leaq	0x1(%rax), %rsi
    00001a85: 	callq	_ZdlPvm@PLT # Offset: 6789
.Ltmp1389:
    00001a8a: 	movq	0x90(%rsp), %rsi
    00001a92: 	leaq	DATAat0x172a7(%rip), %rdx
    00001a99: 	movq	%r14, %rdi
    00001a9c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6812
    00001aa1: 	callq	clock@PLT # Offset: 6817
    00001aa6: 	movl	iterations(%rip), %edx
    00001aac: 	movq	%rax, start_time(%rip)
    00001ab3: 	testl	%edx, %edx
    00001ab5: 	jle	.Ltmp1390 # Offset: 6837
    00001abb: 	movsd	0x68(%rsp), %xmm0
    00001ac1: 	movsd	DATAat0x17370(%rip), %xmm3
    00001ac9: 	pxor	%xmm1, %xmm1
    00001acd: 	xorl	%r13d, %r13d
    00001ad0: 	movsd	DATAat0x17350(%rip), %xmm6
    00001ad8: 	leaq	init_value(%rip), %rbp
    00001adf: 	divsd	0x80(%rsp), %xmm0
    00001ae8: 	divsd	0x78(%rsp), %xmm0
    00001aee: 	movapd	%xmm0, %xmm7
    00001af2: 	divsd	0x70(%rsp), %xmm7
    00001af8: 	movapd	%xmm7, %xmm4
    00001afc: 	movsd	%xmm7, 0x10(%rsp)
    00001b02: 	unpcklpd	%xmm4, %xmm4
    00001b06: 	movsd	%xmm3, 0x40(%rsp)
    00001b0c: 	leaq	DATAat0x171d6(%rip), %r15
    00001b13: 	movsd	%xmm1, 0x60(%rsp)
    00001b19: 	movsd	%xmm6, 0x58(%rsp)
    00001b1f: 	movaps	%xmm4, (%rsp)
    00001b23: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1394:
    00001b28: 	pxor	%xmm0, %xmm0
    00001b2c: 	movq	%r12, %rax
    00001b2f: 	movapd	%xmm0, %xmm1
    00001b33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1391:
    00001b38: 	movapd	(%rsp), %xmm4
    00001b3d: 	movapd	(%rax), %xmm2
    00001b41: 	addq	$0x20, %rax
    00001b45: 	addpd	%xmm4, %xmm2
    00001b49: 	addpd	-0x10(%rax), %xmm4
    00001b4e: 	addpd	%xmm2, %xmm1
    00001b52: 	addpd	%xmm4, %xmm0
    00001b56: 	cmpq	%rbx, %rax
    00001b59: 	jne	.Ltmp1391 # Offset: 7001
    00001b5b: 	movsd	0x10(%rsp), %xmm3
    00001b61: 	addsd	(%rbp), %xmm3
    00001b66: 	movapd	%xmm1, %xmm6
    00001b6a: 	mulsd	0x40(%rsp), %xmm3
    00001b70: 	unpckhpd	%xmm6, %xmm6
    00001b74: 	movapd	%xmm6, %xmm2
    00001b78: 	subsd	%xmm3, %xmm2
    00001b7c: 	subsd	%xmm3, %xmm1
    00001b80: 	addsd	%xmm2, %xmm1
    00001b84: 	movapd	%xmm0, %xmm2
    00001b88: 	unpckhpd	%xmm0, %xmm0
    00001b8c: 	subsd	%xmm3, %xmm2
    00001b90: 	subsd	%xmm3, %xmm0
    00001b94: 	addsd	%xmm2, %xmm1
    00001b98: 	addsd	%xmm1, %xmm0
    00001b9c: 	movsd	0x60(%rsp), %xmm1
    00001ba2: 	comisd	%xmm0, %xmm1
    00001ba6: 	jbe	.Ltmp1392 # Offset: 7078
    00001ba8: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1392:
    00001bb0: 	movsd	0x58(%rsp), %xmm1
    00001bb6: 	comisd	%xmm0, %xmm1
    00001bba: 	jbe	.Ltmp1393 # Offset: 7098
.Ltmp1441:
    00001bc0: 	addl	$0x1, %r13d
    00001bc4: 	cmpl	%edx, %r13d
    00001bc7: 	jl	.Ltmp1394 # Offset: 7111
.Ltmp1390:
    00001bcd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001bd4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001bdb: 	subq	$0x20, %rax
    00001bdf: 	cmpq	%rax, %rbp
    00001be2: 	je	.Ltmp1395 # Offset: 7138
    00001be8: 	leaq	0x10(%rbp), %rdi
    00001bec: 	movq	0xd8(%rsp), %r13
    00001bf4: 	movq	%rdi, (%rbp)
    00001bf8: 	movq	0xd0(%rsp), %r15
    00001c00: 	movq	%r15, %rax
    00001c03: 	addq	%r13, %rax
    00001c06: 	je	.Ltmp1396 # Offset: 7174
    00001c08: 	testq	%r15, %r15
    00001c0b: 	je	.Ltmp1397 # Offset: 7179
.Ltmp1396:
    00001c11: 	movq	%r13, 0xa8(%rsp)
    00001c19: 	cmpq	$0xf, %r13
    00001c1d: 	ja	.Ltmp1398 # Offset: 7197
    00001c23: 	cmpq	$0x1, %r13
    00001c27: 	jne	.Ltmp1399 # Offset: 7207
    00001c2d: 	movzbl	(%r15), %eax
    00001c31: 	movb	%al, 0x10(%rbp)
.Ltmp1476:
    00001c34: 	movq	%r13, 0x8(%rbp)
    00001c38: 	movb	$0x0, (%rdi,%r13)
    00001c3d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c44: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c4b: 	addq	$0x20, %rax
    00001c4f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c56: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001c5d: 	je	.Ltmp1400 # Offset: 7261
.Ltmp1463:
    00001c63: 	movq	-0x20(%rax), %rbp
    00001c67: 	callq	clock@PLT # Offset: 7271
    00001c6c: 	pxor	%xmm0, %xmm0
    00001c70: 	movq	%rax, end_time(%rip)
    00001c77: 	movq	%rbp, %rdi
    00001c7a: 	subq	start_time(%rip), %rax
    00001c81: 	cvtsi2sd	%rax, %xmm0
    00001c86: 	divsd	DATAat0x17358(%rip), %xmm0
    00001c8e: 	callq	_Z13record_resultdPKc # Offset: 7310
    00001c93: 	movq	0xd0(%rsp), %rdi
    00001c9b: 	cmpq	0x88(%rsp), %rdi
    00001ca3: 	je	.Ltmp1401 # Offset: 7331
    00001ca5: 	movq	0xe0(%rsp), %rax
    00001cad: 	leaq	0x1(%rax), %rsi
    00001cb1: 	callq	_ZdlPvm@PLT # Offset: 7345
.Ltmp1401:
    00001cb6: 	movq	0x90(%rsp), %rsi
    00001cbe: 	leaq	DATAat0x172c3(%rip), %rdx
    00001cc5: 	movq	%r14, %rdi
    00001cc8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7368
    00001ccd: 	callq	clock@PLT # Offset: 7373
    00001cd2: 	movl	iterations(%rip), %edx
    00001cd8: 	movq	%rax, start_time(%rip)
    00001cdf: 	testl	%edx, %edx
    00001ce1: 	jle	.Ltmp1402 # Offset: 7393
    00001ce7: 	movsd	0x68(%rsp), %xmm4
    00001ced: 	pxor	%xmm7, %xmm7
    00001cf1: 	movsd	0x78(%rsp), %xmm0
    00001cf7: 	xorl	%r13d, %r13d
    00001cfa: 	mulsd	0x80(%rsp), %xmm0
    00001d03: 	movsd	DATAat0x17370(%rip), %xmm3
    00001d0b: 	movsd	%xmm7, 0x60(%rsp)
    00001d11: 	leaq	init_value(%rip), %rbp
    00001d18: 	divsd	0x70(%rsp), %xmm0
    00001d1e: 	subsd	%xmm0, %xmm4
    00001d22: 	movsd	DATAat0x17350(%rip), %xmm1
    00001d2a: 	leaq	DATAat0x171d6(%rip), %r15
    00001d31: 	movsd	%xmm3, 0x40(%rsp)
    00001d37: 	movsd	%xmm1, 0x58(%rsp)
    00001d3d: 	movapd	%xmm4, %xmm7
    00001d41: 	movsd	%xmm4, 0x10(%rsp)
    00001d47: 	unpcklpd	%xmm7, %xmm7
    00001d4b: 	movaps	%xmm7, (%rsp)
    00001d4f: 	nop # Size: 1
.Ltmp1406:
    00001d50: 	pxor	%xmm0, %xmm0
    00001d54: 	movq	%r12, %rax
    00001d57: 	movapd	%xmm0, %xmm1
    00001d5b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1403:
    00001d60: 	movapd	(%rsp), %xmm5
    00001d65: 	movapd	(%rax), %xmm2
    00001d69: 	addq	$0x20, %rax
    00001d6d: 	addpd	%xmm5, %xmm2
    00001d71: 	addpd	-0x10(%rax), %xmm5
    00001d76: 	addpd	%xmm2, %xmm1
    00001d7a: 	addpd	%xmm5, %xmm0
    00001d7e: 	cmpq	%rbx, %rax
    00001d81: 	jne	.Ltmp1403 # Offset: 7553
    00001d83: 	movsd	0x10(%rsp), %xmm3
    00001d89: 	addsd	(%rbp), %xmm3
    00001d8e: 	movapd	%xmm1, %xmm7
    00001d92: 	mulsd	0x40(%rsp), %xmm3
    00001d98: 	unpckhpd	%xmm7, %xmm7
    00001d9c: 	movapd	%xmm7, %xmm2
    00001da0: 	subsd	%xmm3, %xmm2
    00001da4: 	subsd	%xmm3, %xmm1
    00001da8: 	addsd	%xmm2, %xmm1
    00001dac: 	movapd	%xmm0, %xmm2
    00001db0: 	unpckhpd	%xmm0, %xmm0
    00001db4: 	subsd	%xmm3, %xmm2
    00001db8: 	subsd	%xmm3, %xmm0
    00001dbc: 	addsd	%xmm2, %xmm1
    00001dc0: 	addsd	%xmm1, %xmm0
    00001dc4: 	movsd	0x60(%rsp), %xmm1
    00001dca: 	comisd	%xmm0, %xmm1
    00001dce: 	jbe	.Ltmp1404 # Offset: 7630
    00001dd0: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1404:
    00001dd8: 	movsd	0x58(%rsp), %xmm1
    00001dde: 	comisd	%xmm0, %xmm1
    00001de2: 	jbe	.Ltmp1405 # Offset: 7650
.Ltmp1440:
    00001de8: 	addl	$0x1, %r13d
    00001dec: 	cmpl	%edx, %r13d
    00001def: 	jl	.Ltmp1406 # Offset: 7663
.Ltmp1402:
    00001df5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001dfc: 	movq	"_ZL7gLabels/1"+48(%rip), %rbp
    00001e03: 	subq	$0x20, %rax
    00001e07: 	cmpq	%rax, %rbp
    00001e0a: 	je	.Ltmp1407 # Offset: 7690
    00001e10: 	leaq	0x10(%rbp), %rdi
    00001e14: 	movq	0xd8(%rsp), %r13
    00001e1c: 	movq	%rdi, (%rbp)
    00001e20: 	movq	0xd0(%rsp), %r15
    00001e28: 	movq	%r15, %rax
    00001e2b: 	addq	%r13, %rax
    00001e2e: 	je	.Ltmp1408 # Offset: 7726
    00001e30: 	testq	%r15, %r15
    00001e33: 	je	.Ltmp1409 # Offset: 7731
.Ltmp1408:
    00001e39: 	movq	%r13, 0xa8(%rsp)
    00001e41: 	cmpq	$0xf, %r13
    00001e45: 	ja	.Ltmp1410 # Offset: 7749
    00001e4b: 	cmpq	$0x1, %r13
    00001e4f: 	jne	.Ltmp1411 # Offset: 7759
    00001e55: 	movzbl	(%r15), %eax
    00001e59: 	movb	%al, 0x10(%rbp)
.Ltmp1483:
    00001e5c: 	movq	%r13, 0x8(%rbp)
    00001e60: 	movb	$0x0, (%rdi,%r13)
    00001e65: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001e6c: 	addq	$0x20, %rax
    00001e70: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1468:
    00001e77: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001e7e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001e85: 	je	.Ltmp1412 # Offset: 7813
.Ltmp1454:
    00001e8b: 	movq	-0x20(%rax), %rbp
    00001e8f: 	callq	clock@PLT # Offset: 7823
    00001e94: 	pxor	%xmm0, %xmm0
    00001e98: 	movq	%rax, end_time(%rip)
    00001e9f: 	movq	%rbp, %rdi
    00001ea2: 	subq	start_time(%rip), %rax
    00001ea9: 	cvtsi2sd	%rax, %xmm0
    00001eae: 	divsd	DATAat0x17358(%rip), %xmm0
    00001eb6: 	callq	_Z13record_resultdPKc # Offset: 7862
    00001ebb: 	movq	0xd0(%rsp), %rdi
    00001ec3: 	cmpq	0x88(%rsp), %rdi
    00001ecb: 	je	.Ltmp1413 # Offset: 7883
    00001ecd: 	movq	0xe0(%rsp), %rax
    00001ed5: 	leaq	0x1(%rax), %rsi
    00001ed9: 	callq	_ZdlPvm@PLT # Offset: 7897
.Ltmp1413:
    00001ede: 	movq	0x90(%rsp), %rsi
    00001ee6: 	leaq	DATAat0x172dc(%rip), %rdx
    00001eed: 	movq	%r14, %rdi
    00001ef0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7920
    00001ef5: 	callq	clock@PLT # Offset: 7925
    00001efa: 	movl	iterations(%rip), %edx
    00001f00: 	movq	%rax, start_time(%rip)
    00001f07: 	testl	%edx, %edx
    00001f09: 	jle	.Ltmp1414 # Offset: 7945
    00001f0f: 	movsd	0x78(%rsp), %xmm0
    00001f15: 	movsd	DATAat0x17350(%rip), %xmm6
    00001f1d: 	xorl	%r13d, %r13d
    00001f20: 	leaq	init_value(%rip), %rbp
    00001f27: 	mulsd	0x80(%rsp), %xmm0
    00001f30: 	movsd	0x68(%rsp), %xmm1
    00001f36: 	leaq	DATAat0x171d6(%rip), %r15
    00001f3d: 	movsd	DATAat0x17370(%rip), %xmm7
    00001f45: 	movsd	%xmm6, 0x58(%rsp)
    00001f4b: 	unpcklpd	%xmm1, %xmm1
    00001f4f: 	movaps	%xmm1, (%rsp)
    00001f53: 	pxor	%xmm1, %xmm1
    00001f57: 	movsd	%xmm7, 0x40(%rsp)
    00001f5d: 	movapd	%xmm0, %xmm4
    00001f61: 	divsd	0x70(%rsp), %xmm4
    00001f67: 	movapd	%xmm4, %xmm6
    00001f6b: 	movsd	%xmm4, 0x20(%rsp)
    00001f71: 	unpcklpd	%xmm6, %xmm6
    00001f75: 	movsd	%xmm1, 0x60(%rsp)
    00001f7b: 	movaps	%xmm6, 0x10(%rsp)
.Ltmp1418:
    00001f80: 	pxor	%xmm1, %xmm1
    00001f84: 	movq	%r12, %rax
    00001f87: 	movapd	%xmm1, %xmm2
    00001f8b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1415:
    00001f90: 	movapd	(%rsp), %xmm6
    00001f95: 	movapd	(%rax), %xmm0
    00001f99: 	addq	$0x20, %rax
    00001f9d: 	movapd	0x10(%rsp), %xmm5
    00001fa3: 	addpd	%xmm6, %xmm0
    00001fa7: 	addpd	-0x10(%rax), %xmm6
    00001fac: 	subpd	%xmm5, %xmm0
    00001fb0: 	addpd	%xmm0, %xmm2
    00001fb4: 	movapd	%xmm6, %xmm0
    00001fb8: 	subpd	%xmm5, %xmm0
    00001fbc: 	addpd	%xmm0, %xmm1
    00001fc0: 	cmpq	%rax, %rbx
    00001fc3: 	jne	.Ltmp1415 # Offset: 8131
    00001fc5: 	movsd	0x68(%rsp), %xmm3
    00001fcb: 	addsd	(%rbp), %xmm3
    00001fd0: 	movapd	%xmm2, %xmm4
    00001fd4: 	subsd	0x20(%rsp), %xmm3
    00001fda: 	mulsd	0x40(%rsp), %xmm3
    00001fe0: 	unpckhpd	%xmm4, %xmm4
    00001fe4: 	movapd	%xmm4, %xmm0
    00001fe8: 	subsd	%xmm3, %xmm2
    00001fec: 	subsd	%xmm3, %xmm0
    00001ff0: 	addsd	%xmm2, %xmm0
    00001ff4: 	movapd	%xmm1, %xmm2
    00001ff8: 	unpckhpd	%xmm1, %xmm1
    00001ffc: 	subsd	%xmm3, %xmm2
    00002000: 	subsd	%xmm3, %xmm1
    00002004: 	addsd	%xmm2, %xmm0
    00002008: 	addsd	%xmm1, %xmm0
    0000200c: 	movsd	0x60(%rsp), %xmm1
    00002012: 	comisd	%xmm0, %xmm1
    00002016: 	jbe	.Ltmp1416 # Offset: 8214
    00002018: 	xorpd	DATAat0x17380(%rip), %xmm0
.Ltmp1416:
    00002020: 	movsd	0x58(%rsp), %xmm1
    00002026: 	comisd	%xmm0, %xmm1
    0000202a: 	jbe	.Ltmp1417 # Offset: 8234
.Ltmp1434:
    00002030: 	addl	$0x1, %r13d
    00002034: 	cmpl	%edx, %r13d
    00002037: 	jl	.Ltmp1418 # Offset: 8247
.Ltmp1414:
    0000203d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00002044: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000204b: 	subq	$0x20, %rax
    0000204f: 	cmpq	%rax, %rbx
    00002052: 	je	.Ltmp1419 # Offset: 8274
    00002058: 	leaq	0x10(%rbx), %rdi
    0000205c: 	movq	0xd8(%rsp), %r12
    00002064: 	movq	%rdi, (%rbx)
    00002067: 	movq	0xd0(%rsp), %rbp
    0000206f: 	movq	%rbp, %rax
    00002072: 	addq	%r12, %rax
    00002075: 	je	.Ltmp1420 # Offset: 8309
    00002077: 	testq	%rbp, %rbp
    0000207a: 	je	.Ltmp1421 # Offset: 8314
.Ltmp1420:
    00002080: 	movq	%r12, 0xa8(%rsp)
    00002088: 	cmpq	$0xf, %r12
    0000208c: 	ja	.Ltmp1422 # Offset: 8332
    00002092: 	cmpq	$0x1, %r12
    00002096: 	jne	.Ltmp1423 # Offset: 8342
    0000209c: 	movzbl	(%rbp), %eax
    000020a0: 	movb	%al, 0x10(%rbx)
.Ltmp1487:
    000020a3: 	movq	%r12, 0x8(%rbx)
    000020a7: 	movb	$0x0, (%rdi,%r12)
    000020ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020ba: 	addq	$0x20, %rax
    000020be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000020c5: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000020cc: 	je	.Ltmp1424 # Offset: 8396
.Ltmp1453:
    000020d2: 	movq	-0x20(%rax), %rbp
    000020d6: 	callq	clock@PLT # Offset: 8406
    000020db: 	pxor	%xmm0, %xmm0
    000020df: 	movq	%rax, end_time(%rip)
    000020e6: 	movq	%rbp, %rdi
    000020e9: 	subq	start_time(%rip), %rax
    000020f0: 	cvtsi2sd	%rax, %xmm0
    000020f5: 	divsd	DATAat0x17358(%rip), %xmm0
    000020fd: 	callq	_Z13record_resultdPKc # Offset: 8445
    00002102: 	movq	0xd0(%rsp), %rdi
    0000210a: 	cmpq	0x88(%rsp), %rdi
    00002112: 	je	.Ltmp1425 # Offset: 8466
    00002114: 	movq	0xe0(%rsp), %rax
    0000211c: 	leaq	0x1(%rax), %rsi
    00002120: 	callq	_ZdlPvm@PLT # Offset: 8480
.Ltmp1425:
    00002125: 	movq	0x90(%rsp), %rsi
    0000212d: 	leaq	DATAat0x172f6(%rip), %rdx
    00002134: 	movq	%r14, %rdi
    00002137: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8503
    0000213c: 	movl	iterations(%rip), %edx
    00002142: 	xorl	%r8d, %r8d
    00002145: 	xorl	%ecx, %ecx
    00002147: 	movl	$0x1f40, %esi
    0000214c: 	movq	0xd0(%rsp), %rdi
    00002154: 	callq	_Z9summarizePKciiii # Offset: 8532
    00002159: 	movq	0xd0(%rsp), %rdi
    00002161: 	cmpq	0x88(%rsp), %rdi
    00002169: 	je	.Ltmp1426 # Offset: 8553
    0000216b: 	movq	0xe0(%rsp), %rax
    00002173: 	leaq	0x1(%rax), %rsi
    00002177: 	callq	_ZdlPvm@PLT # Offset: 8567
.Ltmp1426:
    0000217c: 	movq	0xb0(%rsp), %rdi
    00002184: 	cmpq	0x98(%rsp), %rdi
    0000218c: 	je	.Ltmp1427 # Offset: 8588
    0000218e: 	movq	0xc0(%rsp), %rax
    00002196: 	leaq	0x1(%rax), %rsi
    0000219a: 	callq	_ZdlPvm@PLT # Offset: 8602
.Ltmp1427:
    0000219f: 	movq	0x3e8f8(%rsp), %rax
    000021a7: 	subq	%fs:0x28, %rax
    000021b0: 	jne	.Ltmp1428 # Offset: 8624
    000021b6: 	addq	$0x3e908, %rsp
    000021bd: 	popq	%rbx
    000021be: 	popq	%rbp
    000021bf: 	popq	%r12
    000021c1: 	popq	%r13
    000021c3: 	popq	%r14
    000021c5: 	popq	%r15
    000021c7: 	retq # Offset: 8647
    000021c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1429:
    000021d0: 	addq	$0x20, %rbp
.Ltmp1253:
    000021d4: 	cmpq	%rbp, (%rsp)
    000021d8: 	je	.Ltmp1257 # Offset: 8664
.Ltmp1430:
    000021de: 	movq	(%rbp), %rdi
    000021e2: 	leaq	0x10(%rbp), %rax
    000021e6: 	cmpq	%rax, %rdi
    000021e9: 	je	.Ltmp1429 # Offset: 8681
    000021eb: 	movq	0x10(%rbp), %rax
    000021ef: 	addq	$0x20, %rbp
    000021f3: 	leaq	0x1(%rax), %rsi
    000021f7: 	callq	_ZdlPvm@PLT # Offset: 8695
    000021fc: 	cmpq	%rbp, (%rsp)
    00002200: 	jne	.Ltmp1430 # Offset: 8704
    00002202: 	jmp	.Ltmp1257 # Offset: 8706
    00002207: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1249:
    00002210: 	addq	$0x20, %rbp
    00002214: 	cmpq	%rbx, %rbp
    00002217: 	jne	.Ltmp1250 # Offset: 8727
    0000221d: 	addq	$0x8, %r13
    00002221: 	cmpq	%r13, %r15
    00002224: 	ja	.Ltmp1251 # Offset: 8740
    0000222a: 	jmp	.Ltmp1431 # Offset: 8746
    0000222f: 	nop # Size: 1
.Ltmp1266:
    00002230: 	movl	current_test(%rip), %edx
    00002236: 	movq	%r15, %rsi
    00002239: 	movl	$0x1, %edi
    0000223e: 	xorl	%eax, %eax
    00002240: 	callq	__printf_chk@PLT # Offset: 8768
    00002245: 	movl	iterations(%rip), %edx
    0000224b: 	jmp	.Ltmp1432 # Offset: 8779
.Ltmp1271:
    00002250: 	leaq	0xa8(%rsp), %rsi
    00002258: 	xorl	%edx, %edx
    0000225a: 	movq	%rbp, %rdi
    0000225d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8797
    00002262: 	movq	%rax, (%rbp)
    00002266: 	movq	%rax, %rdi
    00002269: 	movq	0xa8(%rsp), %rax
    00002271: 	movq	%rax, 0x10(%rbp)
.Ltmp1489:
    00002275: 	movq	%r13, %rdx
    00002278: 	movq	%r15, %rsi
    0000227b: 	callq	memcpy@PLT # Offset: 8827
    00002280: 	movq	0xa8(%rsp), %r13
    00002288: 	movq	(%rbp), %rdi
    0000228c: 	jmp	.Ltmp1433 # Offset: 8844
    00002291: 	nopl	(%rax) # Size: 7
.Ltmp1417:
    00002298: 	movl	current_test(%rip), %edx
    0000229e: 	movq	%r15, %rsi
    000022a1: 	movl	$0x1, %edi
    000022a6: 	xorl	%eax, %eax
    000022a8: 	callq	__printf_chk@PLT # Offset: 8872
    000022ad: 	movl	iterations(%rip), %edx
    000022b3: 	jmp	.Ltmp1434 # Offset: 8883
    000022b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1290:
    000022c0: 	movl	current_test(%rip), %edx
    000022c6: 	movq	%r15, %rsi
    000022c9: 	movl	$0x1, %edi
    000022ce: 	xorl	%eax, %eax
    000022d0: 	callq	__printf_chk@PLT # Offset: 8912
    000022d5: 	movl	iterations(%rip), %edx
    000022db: 	jmp	.Ltmp1435 # Offset: 8923
.Ltmp1278:
    000022e0: 	movl	current_test(%rip), %edx
    000022e6: 	movq	%r15, %rsi
    000022e9: 	movl	$0x1, %edi
    000022ee: 	xorl	%eax, %eax
    000022f0: 	callq	__printf_chk@PLT # Offset: 8944
    000022f5: 	movl	iterations(%rip), %edx
    000022fb: 	jmp	.Ltmp1436 # Offset: 8955
.Ltmp1326:
    00002300: 	movl	current_test(%rip), %edx
    00002306: 	movq	%r15, %rsi
    00002309: 	movl	$0x1, %edi
    0000230e: 	xorl	%eax, %eax
    00002310: 	callq	__printf_chk@PLT # Offset: 8976
    00002315: 	movl	iterations(%rip), %edx
    0000231b: 	jmp	.Ltmp1437 # Offset: 8987
.Ltmp1314:
    00002320: 	movl	current_test(%rip), %edx
    00002326: 	movq	%r15, %rsi
    00002329: 	movl	$0x1, %edi
    0000232e: 	xorl	%eax, %eax
    00002330: 	callq	__printf_chk@PLT # Offset: 9008
    00002335: 	movl	iterations(%rip), %edx
    0000233b: 	jmp	.Ltmp1438 # Offset: 9019
.Ltmp1302:
    00002340: 	movl	current_test(%rip), %edx
    00002346: 	movq	%r15, %rsi
    00002349: 	movl	$0x1, %edi
    0000234e: 	xorl	%eax, %eax
    00002350: 	callq	__printf_chk@PLT # Offset: 9040
    00002355: 	movl	iterations(%rip), %edx
    0000235b: 	jmp	.Ltmp1439 # Offset: 9051
.Ltmp1405:
    00002360: 	movl	current_test(%rip), %edx
    00002366: 	movq	%r15, %rsi
    00002369: 	movl	$0x1, %edi
    0000236e: 	xorl	%eax, %eax
    00002370: 	callq	__printf_chk@PLT # Offset: 9072
    00002375: 	movl	iterations(%rip), %edx
    0000237b: 	jmp	.Ltmp1440 # Offset: 9083
.Ltmp1393:
    00002380: 	movl	current_test(%rip), %edx
    00002386: 	movq	%r15, %rsi
    00002389: 	movl	$0x1, %edi
    0000238e: 	xorl	%eax, %eax
    00002390: 	callq	__printf_chk@PLT # Offset: 9104
    00002395: 	movl	iterations(%rip), %edx
    0000239b: 	jmp	.Ltmp1441 # Offset: 9115
.Ltmp1381:
    000023a0: 	movl	current_test(%rip), %edx
    000023a6: 	movq	%r15, %rsi
    000023a9: 	movl	$0x1, %edi
    000023ae: 	xorl	%eax, %eax
    000023b0: 	callq	__printf_chk@PLT # Offset: 9136
    000023b5: 	movl	iterations(%rip), %edx
    000023bb: 	jmp	.Ltmp1442 # Offset: 9147
.Ltmp1369:
    000023c0: 	movl	current_test(%rip), %edx
    000023c6: 	movq	%r15, %rsi
    000023c9: 	movl	$0x1, %edi
    000023ce: 	xorl	%eax, %eax
    000023d0: 	callq	__printf_chk@PLT # Offset: 9168
    000023d5: 	movl	iterations(%rip), %edx
    000023db: 	jmp	.Ltmp1443 # Offset: 9179
.Ltmp1362:
    000023e0: 	movl	current_test(%rip), %edx
    000023e6: 	movq	%r15, %rsi
    000023e9: 	movl	$0x1, %edi
    000023ee: 	xorl	%eax, %eax
    000023f0: 	callq	__printf_chk@PLT # Offset: 9200
    000023f5: 	movl	iterations(%rip), %edx
    000023fb: 	jmp	.Ltmp1444 # Offset: 9211
.Ltmp1350:
    00002400: 	movl	current_test(%rip), %edx
    00002406: 	movq	%r15, %rsi
    00002409: 	movl	$0x1, %edi
    0000240e: 	xorl	%eax, %eax
    00002410: 	callq	__printf_chk@PLT # Offset: 9232
    00002415: 	movl	iterations(%rip), %edx
    0000241b: 	jmp	.Ltmp1445 # Offset: 9243
.Ltmp1338:
    00002420: 	movl	current_test(%rip), %edx
    00002426: 	movq	%r15, %rsi
    00002429: 	movl	$0x1, %edi
    0000242e: 	xorl	%eax, %eax
    00002430: 	callq	__printf_chk@PLT # Offset: 9264
    00002435: 	movl	iterations(%rip), %edx
    0000243b: 	jmp	.Ltmp1446 # Offset: 9275
.Ltmp1345:
    00002440: 	movq	-0x8(%rdx), %rax
    00002444: 	addq	$0x200, %rax
    0000244a: 	jmp	.Ltmp1447 # Offset: 9290
.Ltmp1340:
    0000244f: 	movq	%r14, %rsi
    00002452: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002459: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9305
    0000245e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002465: 	jmp	.Ltmp1448 # Offset: 9317
.Ltmp1333:
    0000246a: 	movq	-0x8(%rdx), %rax
    0000246e: 	addq	$0x200, %rax
    00002474: 	jmp	.Ltmp1449 # Offset: 9332
.Ltmp1292:
    00002479: 	movq	%r14, %rsi
    0000247c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002483: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9347
    00002488: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000248f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002496: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000249d: 	jne	.Ltmp1450 # Offset: 9373
.Ltmp1297:
    000024a3: 	movq	-0x8(%rdx), %rax
    000024a7: 	addq	$0x200, %rax
    000024ad: 	jmp	.Ltmp1450 # Offset: 9389
.Ltmp1273:
    000024b2: 	movq	-0x8(%rdx), %rax
    000024b6: 	addq	$0x200, %rax
    000024bc: 	jmp	.Ltmp1451 # Offset: 9404
.Ltmp1280:
    000024c1: 	movq	%r14, %rsi
    000024c4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000024cb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9419
    000024d0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000024d7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000024de: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000024e5: 	jne	.Ltmp1452 # Offset: 9445
.Ltmp1285:
    000024eb: 	movq	-0x8(%rdx), %rax
    000024ef: 	addq	$0x200, %rax
    000024f5: 	jmp	.Ltmp1452 # Offset: 9461
.Ltmp1419:
    000024fa: 	movq	%r14, %rsi
    000024fd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002504: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9476
    00002509: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002510: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002517: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000251e: 	jne	.Ltmp1453 # Offset: 9502
.Ltmp1424:
    00002524: 	movq	-0x8(%rdx), %rax
    00002528: 	addq	$0x200, %rax
    0000252e: 	jmp	.Ltmp1453 # Offset: 9518
.Ltmp1412:
    00002533: 	movq	-0x8(%rdx), %rax
    00002537: 	addq	$0x200, %rax
    0000253d: 	jmp	.Ltmp1454 # Offset: 9533
.Ltmp1268:
    00002542: 	movq	%r14, %rsi
    00002545: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000254c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9548
    00002551: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002558: 	jmp	.Ltmp1455 # Offset: 9560
.Ltmp1328:
    0000255d: 	movq	%r14, %rsi
    00002560: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002567: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9575
    0000256c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002573: 	jmp	.Ltmp1456 # Offset: 9587
.Ltmp1309:
    00002578: 	movq	-0x8(%rdx), %rax
    0000257c: 	addq	$0x200, %rax
    00002582: 	jmp	.Ltmp1457 # Offset: 9602
.Ltmp1304:
    00002587: 	movq	%r14, %rsi
    0000258a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002591: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9617
    00002596: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000259d: 	jmp	.Ltmp1458 # Offset: 9629
.Ltmp1371:
    000025a2: 	movq	%r14, %rsi
    000025a5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000025ac: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9644
    000025b1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000025b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000025bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000025c6: 	jne	.Ltmp1459 # Offset: 9670
.Ltmp1376:
    000025cc: 	movq	-0x8(%rdx), %rax
    000025d0: 	addq	$0x200, %rax
    000025d6: 	jmp	.Ltmp1459 # Offset: 9686
.Ltmp1364:
    000025db: 	movq	-0x8(%rdx), %rax
    000025df: 	addq	$0x200, %rax
    000025e5: 	jmp	.Ltmp1460 # Offset: 9701
.Ltmp1357:
    000025ea: 	movq	-0x8(%rdx), %rax
    000025ee: 	addq	$0x200, %rax
    000025f4: 	jmp	.Ltmp1461 # Offset: 9716
.Ltmp1352:
    000025f9: 	movq	%r14, %rsi
    000025fc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002603: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9731
    00002608: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000260f: 	jmp	.Ltmp1462 # Offset: 9743
.Ltmp1395:
    00002614: 	movq	%r14, %rsi
    00002617: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000261e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9758
    00002623: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000262a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002631: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002638: 	jne	.Ltmp1463 # Offset: 9784
.Ltmp1400:
    0000263e: 	movq	-0x8(%rdx), %rax
    00002642: 	addq	$0x200, %rax
    00002648: 	jmp	.Ltmp1463 # Offset: 9800
.Ltmp1388:
    0000264d: 	movq	-0x8(%rdx), %rax
    00002651: 	addq	$0x200, %rax
    00002657: 	jmp	.Ltmp1464 # Offset: 9815
.Ltmp1383:
    0000265c: 	movq	%r14, %rsi
    0000265f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002666: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9830
    0000266b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002672: 	jmp	.Ltmp1465 # Offset: 9842
.Ltmp1321:
    00002677: 	movq	-0x8(%rdx), %rax
    0000267b: 	addq	$0x200, %rax
    00002681: 	jmp	.Ltmp1466 # Offset: 9857
.Ltmp1316:
    00002686: 	movq	%r14, %rsi
    00002689: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002690: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9872
    00002695: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000269c: 	jmp	.Ltmp1467 # Offset: 9884
.Ltmp1407:
    000026a1: 	movq	%r14, %rsi
    000026a4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000026ab: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9899
    000026b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000026b7: 	jmp	.Ltmp1468 # Offset: 9911
.Ltmp1320:
    000026bc: 	testq	%r13, %r13
    000026bf: 	je	.Ltmp1469 # Offset: 9919
.Ltmp1492:
    000026c5: 	movq	%r13, %rdx
    000026c8: 	movq	%r15, %rsi
    000026cb: 	callq	memcpy@PLT # Offset: 9931
    000026d0: 	movq	0xa8(%rsp), %r13
    000026d8: 	movq	(%rbp), %rdi
    000026dc: 	jmp	.Ltmp1469 # Offset: 9948
.Ltmp1387:
    000026e1: 	testq	%r13, %r13
    000026e4: 	je	.Ltmp1470 # Offset: 9956
    000026ea: 	jmp	.Ltmp1471 # Offset: 9962
    000026ef: 	nop # Size: 1
.Ltmp1356:
    000026f0: 	testq	%r13, %r13
    000026f3: 	je	.Ltmp1472 # Offset: 9971
    000026f9: 	jmp	.Ltmp1473 # Offset: 9977
    000026fe: 	nop # Size: 2
.Ltmp1375:
    00002700: 	testq	%r13, %r13
    00002703: 	je	.Ltmp1474 # Offset: 9987
    00002709: 	jmp	.Ltmp1475 # Offset: 9993
    0000270e: 	nop # Size: 2
.Ltmp1399:
    00002710: 	testq	%r13, %r13
    00002713: 	je	.Ltmp1476 # Offset: 10003
    00002719: 	jmp	.Ltmp1477 # Offset: 10009
    0000271e: 	nop # Size: 2
.Ltmp1332:
    00002720: 	testq	%r13, %r13
    00002723: 	je	.Ltmp1478 # Offset: 10019
    00002729: 	jmp	.Ltmp1479 # Offset: 10025
    0000272e: 	nop # Size: 2
.Ltmp1308:
    00002730: 	testq	%r13, %r13
    00002733: 	je	.Ltmp1480 # Offset: 10035
    00002739: 	jmp	.Ltmp1481 # Offset: 10041
    0000273e: 	nop # Size: 2
.Ltmp1284:
    00002740: 	testq	%r13, %r13
    00002743: 	je	.Ltmp1482 # Offset: 10051
.Ltmp1493:
    00002749: 	movq	%r13, %rdx
    0000274c: 	movq	%r15, %rsi
    0000274f: 	callq	memcpy@PLT # Offset: 10063
    00002754: 	movq	0xa8(%rsp), %r13
    0000275c: 	movq	(%rbp), %rdi
    00002760: 	jmp	.Ltmp1482 # Offset: 10080
.Ltmp1411:
    00002765: 	testq	%r13, %r13
    00002768: 	je	.Ltmp1483 # Offset: 10088
    0000276e: 	jmp	.Ltmp1484 # Offset: 10094
    00002773: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1344:
    00002778: 	testq	%r13, %r13
    0000277b: 	je	.Ltmp1485 # Offset: 10107
    00002781: 	jmp	.Ltmp1486 # Offset: 10113
    00002786: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1423:
    00002790: 	testq	%r12, %r12
    00002793: 	je	.Ltmp1487 # Offset: 10131
    00002799: 	jmp	.Ltmp1488 # Offset: 10137
    0000279e: 	nop # Size: 2
.Ltmp1272:
    000027a0: 	testq	%r13, %r13
    000027a3: 	je	.Ltmp1433 # Offset: 10147
    000027a9: 	jmp	.Ltmp1489 # Offset: 10153
    000027ae: 	nop # Size: 2
.Ltmp1296:
    000027b0: 	testq	%r13, %r13
    000027b3: 	je	.Ltmp1490 # Offset: 10163
    000027b9: 	jmp	.Ltmp1491 # Offset: 10169
    000027bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1295:
    000027c0: 	leaq	0xa8(%rsp), %rsi
    000027c8: 	xorl	%edx, %edx
    000027ca: 	movq	%rbp, %rdi
    000027cd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10189
    000027d2: 	movq	%rax, (%rbp)
    000027d6: 	movq	%rax, %rdi
    000027d9: 	movq	0xa8(%rsp), %rax
    000027e1: 	movq	%rax, 0x10(%rbp)
.Ltmp1491:
    000027e5: 	movq	%r13, %rdx
    000027e8: 	movq	%r15, %rsi
    000027eb: 	callq	memcpy@PLT # Offset: 10219
    000027f0: 	movq	0xa8(%rsp), %r13
    000027f8: 	movq	(%rbp), %rdi
    000027fc: 	jmp	.Ltmp1490 # Offset: 10236
.Ltmp1386:
    00002801: 	leaq	0xa8(%rsp), %rsi
    00002809: 	xorl	%edx, %edx
    0000280b: 	movq	%rbp, %rdi
    0000280e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10254
    00002813: 	movq	%rax, (%rbp)
    00002817: 	movq	%rax, %rdi
    0000281a: 	movq	0xa8(%rsp), %rax
    00002822: 	movq	%rax, 0x10(%rbp)
.Ltmp1471:
    00002826: 	movq	%r13, %rdx
    00002829: 	movq	%r15, %rsi
    0000282c: 	callq	memcpy@PLT # Offset: 10284
    00002831: 	movq	0xa8(%rsp), %r13
    00002839: 	movq	(%rbp), %rdi
    0000283d: 	jmp	.Ltmp1470 # Offset: 10301
.Ltmp1355:
    00002842: 	leaq	0xa8(%rsp), %rsi
    0000284a: 	xorl	%edx, %edx
    0000284c: 	movq	%rbp, %rdi
    0000284f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10319
    00002854: 	movq	%rax, (%rbp)
    00002858: 	movq	%rax, %rdi
    0000285b: 	movq	0xa8(%rsp), %rax
    00002863: 	movq	%rax, 0x10(%rbp)
.Ltmp1473:
    00002867: 	movq	%r13, %rdx
    0000286a: 	movq	%r15, %rsi
    0000286d: 	callq	memcpy@PLT # Offset: 10349
    00002872: 	movq	0xa8(%rsp), %r13
    0000287a: 	movq	(%rbp), %rdi
    0000287e: 	jmp	.Ltmp1472 # Offset: 10366
.Ltmp1374:
    00002883: 	leaq	0xa8(%rsp), %rsi
    0000288b: 	xorl	%edx, %edx
    0000288d: 	movq	%rbp, %rdi
    00002890: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10384
    00002895: 	movq	%rax, (%rbp)
    00002899: 	movq	%rax, %rdi
    0000289c: 	movq	0xa8(%rsp), %rax
    000028a4: 	movq	%rax, 0x10(%rbp)
.Ltmp1475:
    000028a8: 	movq	%r13, %rdx
    000028ab: 	movq	%r15, %rsi
    000028ae: 	callq	memcpy@PLT # Offset: 10414
    000028b3: 	movq	0xa8(%rsp), %r13
    000028bb: 	movq	(%rbp), %rdi
    000028bf: 	jmp	.Ltmp1474 # Offset: 10431
.Ltmp1398:
    000028c4: 	leaq	0xa8(%rsp), %rsi
    000028cc: 	xorl	%edx, %edx
    000028ce: 	movq	%rbp, %rdi
    000028d1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10449
    000028d6: 	movq	%rax, (%rbp)
    000028da: 	movq	%rax, %rdi
    000028dd: 	movq	0xa8(%rsp), %rax
    000028e5: 	movq	%rax, 0x10(%rbp)
.Ltmp1477:
    000028e9: 	movq	%r13, %rdx
    000028ec: 	movq	%r15, %rsi
    000028ef: 	callq	memcpy@PLT # Offset: 10479
    000028f4: 	movq	0xa8(%rsp), %r13
    000028fc: 	movq	(%rbp), %rdi
    00002900: 	jmp	.Ltmp1476 # Offset: 10496
.Ltmp1410:
    00002905: 	leaq	0xa8(%rsp), %rsi
    0000290d: 	xorl	%edx, %edx
    0000290f: 	movq	%rbp, %rdi
    00002912: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10514
    00002917: 	movq	%rax, (%rbp)
    0000291b: 	movq	%rax, %rdi
    0000291e: 	movq	0xa8(%rsp), %rax
    00002926: 	movq	%rax, 0x10(%rbp)
.Ltmp1484:
    0000292a: 	movq	%r13, %rdx
    0000292d: 	movq	%r15, %rsi
    00002930: 	callq	memcpy@PLT # Offset: 10544
    00002935: 	movq	0xa8(%rsp), %r13
    0000293d: 	movq	(%rbp), %rdi
    00002941: 	jmp	.Ltmp1483 # Offset: 10561
.Ltmp1319:
    00002946: 	leaq	0xa8(%rsp), %rsi
    0000294e: 	xorl	%edx, %edx
    00002950: 	movq	%rbp, %rdi
    00002953: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10579
    00002958: 	movq	%rax, (%rbp)
    0000295c: 	movq	%rax, %rdi
    0000295f: 	movq	0xa8(%rsp), %rax
    00002967: 	movq	%rax, 0x10(%rbp)
    0000296b: 	jmp	.Ltmp1492 # Offset: 10603
.Ltmp1331:
    00002970: 	leaq	0xa8(%rsp), %rsi
    00002978: 	xorl	%edx, %edx
    0000297a: 	movq	%rbp, %rdi
    0000297d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10621
    00002982: 	movq	%rax, (%rbp)
    00002986: 	movq	%rax, %rdi
    00002989: 	movq	0xa8(%rsp), %rax
    00002991: 	movq	%rax, 0x10(%rbp)
.Ltmp1479:
    00002995: 	movq	%r13, %rdx
    00002998: 	movq	%r15, %rsi
    0000299b: 	callq	memcpy@PLT # Offset: 10651
    000029a0: 	movq	0xa8(%rsp), %r13
    000029a8: 	movq	(%rbp), %rdi
    000029ac: 	jmp	.Ltmp1478 # Offset: 10668
.Ltmp1283:
    000029b1: 	leaq	0xa8(%rsp), %rsi
    000029b9: 	xorl	%edx, %edx
    000029bb: 	movq	%rbp, %rdi
    000029be: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10686
    000029c3: 	movq	%rax, (%rbp)
    000029c7: 	movq	%rax, %rdi
    000029ca: 	movq	0xa8(%rsp), %rax
    000029d2: 	movq	%rax, 0x10(%rbp)
    000029d6: 	jmp	.Ltmp1493 # Offset: 10710
.Ltmp1343:
    000029db: 	leaq	0xa8(%rsp), %rsi
    000029e3: 	xorl	%edx, %edx
    000029e5: 	movq	%rbp, %rdi
    000029e8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10728
    000029ed: 	movq	%rax, (%rbp)
    000029f1: 	movq	%rax, %rdi
    000029f4: 	movq	0xa8(%rsp), %rax
    000029fc: 	movq	%rax, 0x10(%rbp)
.Ltmp1486:
    00002a00: 	movq	%r13, %rdx
    00002a03: 	movq	%r15, %rsi
    00002a06: 	callq	memcpy@PLT # Offset: 10758
    00002a0b: 	movq	0xa8(%rsp), %r13
    00002a13: 	movq	(%rbp), %rdi
    00002a17: 	jmp	.Ltmp1485 # Offset: 10775
.Ltmp1307:
    00002a1c: 	leaq	0xa8(%rsp), %rsi
    00002a24: 	xorl	%edx, %edx
    00002a26: 	movq	%rbp, %rdi
    00002a29: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10793
    00002a2e: 	movq	%rax, (%rbp)
    00002a32: 	movq	%rax, %rdi
    00002a35: 	movq	0xa8(%rsp), %rax
    00002a3d: 	movq	%rax, 0x10(%rbp)
.Ltmp1481:
    00002a41: 	movq	%r13, %rdx
    00002a44: 	movq	%r15, %rsi
    00002a47: 	callq	memcpy@PLT # Offset: 10823
    00002a4c: 	movq	0xa8(%rsp), %r13
    00002a54: 	movq	(%rbp), %rdi
    00002a58: 	jmp	.Ltmp1480 # Offset: 10840
.Ltmp1422:
    00002a5d: 	leaq	0xa8(%rsp), %rsi
    00002a65: 	xorl	%edx, %edx
    00002a67: 	movq	%rbx, %rdi
    00002a6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 10858
    00002a6f: 	movq	%rax, (%rbx)
    00002a72: 	movq	%rax, %rdi
    00002a75: 	movq	0xa8(%rsp), %rax
    00002a7d: 	movq	%rax, 0x10(%rbx)
.Ltmp1488:
    00002a81: 	movq	%r12, %rdx
    00002a84: 	movq	%rbp, %rsi
    00002a87: 	callq	memcpy@PLT # Offset: 10887
    00002a8c: 	movq	0xa8(%rsp), %r12
    00002a94: 	movq	(%rbx), %rdi
    00002a97: 	jmp	.Ltmp1487 # Offset: 10903
.Ltmp1282:
    00002a9c: 	leaq	DATAat0x17158(%rip), %rdi
    00002aa3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10915
.Ltmp1294:
    00002aa8: 	leaq	DATAat0x17158(%rip), %rdi
    00002aaf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10927
.Ltmp1306:
    00002ab4: 	leaq	DATAat0x17158(%rip), %rdi
    00002abb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10939
.Ltmp1318:
    00002ac0: 	leaq	DATAat0x17158(%rip), %rdi
    00002ac7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10951
.Ltmp1330:
    00002acc: 	leaq	DATAat0x17158(%rip), %rdi
    00002ad3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10963
.Ltmp1342:
    00002ad8: 	leaq	DATAat0x17158(%rip), %rdi
    00002adf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10975
.Ltmp1354:
    00002ae4: 	leaq	DATAat0x17158(%rip), %rdi
    00002aeb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10987
.Ltmp1373:
    00002af0: 	leaq	DATAat0x17158(%rip), %rdi
    00002af7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 10999
.Ltmp1385:
    00002afc: 	leaq	DATAat0x17158(%rip), %rdi
    00002b03: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11011
.Ltmp1397:
    00002b08: 	leaq	DATAat0x17158(%rip), %rdi
    00002b0f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11023
.Ltmp1409:
    00002b14: 	leaq	DATAat0x17158(%rip), %rdi
    00002b1b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11035
.Ltmp1421:
    00002b20: 	leaq	DATAat0x17158(%rip), %rdi
    00002b27: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11047
.Ltmp1428:
    00002b2c: 	callq	__stack_chk_fail@PLT # Offset: 11052
.Ltmp1270:
    00002b31: 	leaq	DATAat0x17158(%rip), %rdi
    00002b38: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 11064
    00002b3d: 	endbr64
.Ltmp1495:
    00002b41: 	movq	%rax, %rbp
    00002b44: 	jmp	.Ltmp1494 # Offset: 11076
    00002b46: 	endbr64
    00002b4a: 	jmp	.Ltmp1495 # Offset: 11082
    00002b4c: 	endbr64
    00002b50: 	jmp	.Ltmp1495 # Offset: 11088
    00002b52: 	endbr64
    00002b56: 	jmp	.Ltmp1495 # Offset: 11094
.Ltmp1494:
    00002b58: 	movq	0xd0(%rsp), %rdi
    00002b60: 	cmpq	0x88(%rsp), %rdi
    00002b68: 	je	.Ltmp1496 # Offset: 11112
.Ltmp1499:
    00002b6a: 	movq	0xe0(%rsp), %rax
    00002b72: 	leaq	0x1(%rax), %rsi
    00002b76: 	callq	_ZdlPvm@PLT # Offset: 11126
.Ltmp1496:
    00002b7b: 	movq	0xb0(%rsp), %rdi
    00002b83: 	cmpq	0x98(%rsp), %rdi
    00002b8b: 	je	.Ltmp1497 # Offset: 11147
    00002b8d: 	movq	0xc0(%rsp), %rax
    00002b95: 	leaq	0x1(%rax), %rsi
    00002b99: 	callq	_ZdlPvm@PLT # Offset: 11161
.Ltmp1497:
    00002b9e: 	movq	%rbp, %rdi
    00002ba1: 	callq	_Unwind_Resume@PLT # Offset: 11169
    00002ba6: 	endbr64
    00002baa: 	jmp	.Ltmp1495 # Offset: 11178
    00002bac: 	endbr64
    00002bb0: 	movq	%rax, %rbp
    00002bb3: 	jmp	.Ltmp1496 # Offset: 11187
    00002bb5: 	endbr64
    00002bb9: 	movq	%rax, %rbp
    00002bbc: 	jmp	.Ltmp1498 # Offset: 11196
    00002bbe: 	endbr64
    00002bc2: 	jmp	.Ltmp1495 # Offset: 11202
.Ltmp1498:
    00002bc7: 	movq	0xd0(%rsp), %rdi
    00002bcf: 	leaq	0xe0(%rsp), %rax
    00002bd7: 	cmpq	%rax, %rdi
    00002bda: 	jne	.Ltmp1499 # Offset: 11226
    00002bdc: 	jmp	.Ltmp1496 # Offset: 11228
    00002bde: 	endbr64
    00002be2: 	jmp	.Ltmp1495 # Offset: 11234
    00002be7: 	endbr64
    00002beb: 	jmp	.Ltmp1495 # Offset: 11243
    00002bf0: 	endbr64
    00002bf4: 	jmp	.Ltmp1495 # Offset: 11252
    00002bf9: 	endbr64
    00002bfd: 	jmp	.Ltmp1495 # Offset: 11261
    00002c02: 	endbr64
    00002c06: 	jmp	.Ltmp1495 # Offset: 11270
    00002c0b: 	endbr64
    00002c0f: 	jmp	.Ltmp1495 # Offset: 11279
    00002c14: 	endbr64
    00002c18: 	jmp	.Ltmp1495 # Offset: 11288
    00002c1d: 	endbr64
    00002c21: 	jmp	.Ltmp1495 # Offset: 11297
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI13FourItemClassIdEEvd"

Binary Function "_Z11TestOneTypeI12SixItemClassIiEEvd" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x11a10
  Size        : 0x273b
  MaxSize     : 0x2740
  Offset      : 0x11a10
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI12SixItemClassIiEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x2e000(%rsp), %r11
.Ltmp1500:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1500 # Offset: 37
    00000027: 	subq	$0xee8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    0000003d: 	movq	%xmm2, %rbp
    00000042: 	movsd	%xmm0, 0x58(%rsp)
    00000048: 	movq	%fs:0x28, %rax
    00000051: 	movq	%rax, 0x2eed8(%rsp)
    00000059: 	xorl	%eax, %eax
    0000005b: 	leaq	0xa0(%rsp), %rax
    00000063: 	movaps	%xmm2, 0x30(%rsp)
    00000068: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm2
    00000070: 	movq	%rax, 0x78(%rsp)
    00000075: 	movq	%rax, 0x90(%rsp)
    0000007d: 	movhlps	%xmm2, %xmm4
    00000080: 	movabsq	$0x73616c4336746e69, %rax
    0000008a: 	movq	%rax, 0xa0(%rsp)
    00000092: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000099: 	movq	%xmm4, %rbx
    0000009e: 	leaq	0x8(%rbx), %r12
    000000a2: 	movb	$0x73, 0xa8(%rsp)
    000000aa: 	movq	%rax, (%rsp)
    000000ae: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000b5: 	movq	$0x9, 0x98(%rsp)
    000000c1: 	movb	$0x0, 0xa9(%rsp)
    000000c9: 	movq	%rax, 0x20(%rsp)
    000000ce: 	movaps	%xmm2, 0x40(%rsp)
    000000d3: 	movq	%xmm4, 0x50(%rsp)
    000000d9: 	movq	%xmm2, 0x10(%rsp)
    000000df: 	cmpq	%r12, %rax
    000000e2: 	jbe	.Ltmp1501 # Offset: 226
    000000e4: 	movq	%rbp, 0x60(%rsp)
    000000e9: 	movq	%r12, %r13
    000000ec: 	movq	%rax, %r15
    000000ef: 	nop # Size: 1
.Ltmp1504:
    000000f0: 	movq	(%r13), %rbp
    000000f4: 	leaq	0x200(%rbp), %rbx
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1503:
    00000100: 	movq	(%rbp), %rdi
    00000104: 	leaq	0x10(%rbp), %rdx
    00000108: 	cmpq	%rdx, %rdi
    0000010b: 	je	.Ltmp1502 # Offset: 267
    00000111: 	movq	0x10(%rbp), %rax
    00000115: 	addq	$0x20, %rbp
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%rbp, %rbx
    00000125: 	jne	.Ltmp1503 # Offset: 293
    00000127: 	addq	$0x8, %r13
    0000012b: 	cmpq	%r13, %r15
    0000012e: 	ja	.Ltmp1504 # Offset: 302
.Ltmp1630:
    00000130: 	movq	0x60(%rsp), %rbp
.Ltmp1501:
    00000135: 	movq	0x50(%rsp), %rbx
    0000013a: 	cmpq	%rbx, 0x20(%rsp)
    0000013f: 	je	.Ltmp1505 # Offset: 319
    00000145: 	cmpq	%rbp, 0x10(%rsp)
    0000014a: 	je	.Ltmp1506 # Offset: 330
.Ltmp1509:
    0000014c: 	movq	(%rbp), %rdi
    00000150: 	leaq	0x10(%rbp), %rax
    00000154: 	cmpq	%rax, %rdi
    00000157: 	je	.Ltmp1507 # Offset: 343
.Ltmp1508:
    00000159: 	movq	0x10(%rbp), %rax
    0000015d: 	addq	$0x20, %rbp
    00000161: 	leaq	0x1(%rax), %rsi
    00000165: 	callq	_ZdlPvm@PLT # Offset: 357
    0000016a: 	cmpq	0x10(%rsp), %rbp
    0000016f: 	je	.Ltmp1506 # Offset: 367
    00000171: 	movq	(%rbp), %rdi
    00000175: 	leaq	0x10(%rbp), %rax
    00000179: 	cmpq	%rax, %rdi
    0000017c: 	jne	.Ltmp1508 # Offset: 380
.Ltmp1507:
    0000017e: 	addq	$0x20, %rbp
    00000182: 	cmpq	0x10(%rsp), %rbp
    00000187: 	jne	.Ltmp1509 # Offset: 391
    00000189: 	cmpq	%r14, (%rsp)
    0000018d: 	je	.Ltmp1510 # Offset: 397
    0000018f: 	nop # Size: 1
.Ltmp1512:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp1511 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp1511:
    000001a9: 	addq	$0x20, %r14
.Ltmp1506:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp1512 # Offset: 433
.Ltmp1510:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp1513 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1514:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp1514 # Offset: 477
.Ltmp1513:
    000001df: 	cvttsd2si	init_value(%rip), %eax
    000001e7: 	movdqa	0x30(%rsp), %xmm2
    000001ed: 	leaq	0xd0(%rsp), %r12
    000001f5: 	leaq	0x2eed0(%rsp), %rbp
    000001fd: 	movaps	%xmm2, "_ZL7gLabels/1"+48(%rip)
    00000204: 	movdqa	0x40(%rsp), %xmm2
    0000020a: 	movd	%eax, %xmm0
    0000020e: 	movaps	%xmm2, "_ZL7gLabels/1"+64(%rip)
    00000215: 	movq	%r12, %rax
    00000218: 	pshufd	$0x0, %xmm0, %xmm0
    0000021d: 	nopl	(%rax) # Size: 3
.Ltmp1515:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x30, %rax
    00000227: 	movaps	%xmm0, -0x20(%rax)
    0000022b: 	movaps	%xmm0, -0x10(%rax)
    0000022f: 	cmpq	%rbp, %rax
    00000232: 	jne	.Ltmp1515 # Offset: 562
    00000234: 	cvttsd2si	0x58(%rsp), %ebx
    0000023a: 	leaq	0xb0(%rsp), %rdi
    00000242: 	movq	%rdi, 0x60(%rsp)
    00000247: 	leal	(%rbx,%rbx), %eax
    0000024a: 	leal	0x2(%rbx), %esi
    0000024d: 	cltd
    0000024e: 	movl	%eax, 0x58(%rsp)
    00000252: 	idivl	%esi
    00000254: 	movl	%esi, 0x50(%rsp)
    00000258: 	leaq	DATAat0x171c8(%rip), %rdx
    0000025f: 	addl	%ebx, %eax
    00000261: 	movl	%eax, 0x40(%rsp)
    00000265: 	leaq	0x90(%rsp), %rax
    0000026d: 	movq	%rax, %rsi
    00000270: 	movq	%rax, 0x70(%rsp)
    00000275: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 629
    0000027a: 	callq	clock@PLT # Offset: 634
    0000027f: 	movd	%ebx, %xmm2
    00000283: 	xorl	%r13d, %r13d
    00000286: 	movl	iterations(%rip), %esi
    0000028c: 	pshufd	$0x0, %xmm2, %xmm2
    00000291: 	movq	%rax, start_time(%rip)
    00000298: 	leaq	DATAat0x171d6(%rip), %r14
    0000029f: 	movaps	%xmm2, (%rsp)
    000002a3: 	testl	%esi, %esi
    000002a5: 	jle	.Ltmp1516 # Offset: 677
    000002ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1519:
    000002b0: 	pxor	%xmm0, %xmm0
    000002b4: 	movq	%r12, %rax
    000002b7: 	movdqa	%xmm0, %xmm1
    000002bb: 	movdqa	%xmm0, %xmm2
    000002bf: 	nop # Size: 1
.Ltmp1517:
    000002c0: 	movdqa	(%rsp), %xmm6
    000002c5: 	movdqa	(%rax), %xmm3
    000002c9: 	addq	$0x30, %rax
    000002cd: 	paddd	%xmm6, %xmm3
    000002d1: 	paddd	%xmm3, %xmm2
    000002d5: 	movdqa	-0x20(%rax), %xmm3
    000002da: 	paddd	%xmm6, %xmm3
    000002de: 	paddd	-0x10(%rax), %xmm6
    000002e3: 	paddd	%xmm3, %xmm1
    000002e7: 	paddd	%xmm6, %xmm0
    000002eb: 	cmpq	%rbp, %rax
    000002ee: 	jne	.Ltmp1517 # Offset: 750
    000002f0: 	cvttsd2si	init_value(%rip), %edi
    000002f8: 	pshufd	$0xff, %xmm1, %xmm3
    000002fd: 	movd	%xmm2, %edx
    00000301: 	movd	%xmm3, %ecx
    00000305: 	pshufd	$0x55, %xmm2, %xmm3
    0000030a: 	movd	%xmm3, %eax
    0000030e: 	movdqa	%xmm1, %xmm3
    00000312: 	punpckhdq	%xmm1, %xmm3
    00000316: 	addl	%eax, %ecx
    00000318: 	addl	%ebx, %edi
    0000031a: 	movd	%xmm3, %eax
    0000031e: 	movdqa	%xmm2, %xmm3
    00000322: 	imull	$0x1f40, %edi, %edi
    00000328: 	addl	%edx, %eax
    0000032a: 	punpckhdq	%xmm2, %xmm3
    0000032e: 	movd	%xmm3, %edx
    00000332: 	pshufd	$0xff, %xmm2, %xmm2
    00000337: 	pshufd	$0x55, %xmm0, %xmm3
    0000033c: 	subl	%edi, %eax
    0000033e: 	subl	%edi, %ecx
    00000340: 	addl	%eax, %ecx
    00000342: 	movd	%xmm0, %eax
    00000346: 	addl	%edx, %eax
    00000348: 	movd	%xmm3, %edx
    0000034c: 	subl	%edi, %eax
    0000034e: 	addl	%eax, %ecx
    00000350: 	movd	%xmm2, %eax
    00000354: 	movdqa	%xmm0, %xmm2
    00000358: 	addl	%edx, %eax
    0000035a: 	punpckhdq	%xmm0, %xmm2
    0000035e: 	movd	%xmm1, %edx
    00000362: 	subl	%edi, %eax
    00000364: 	pshufd	$0xff, %xmm0, %xmm0
    00000369: 	pshufd	$0x55, %xmm1, %xmm1
    0000036e: 	addl	%eax, %ecx
    00000370: 	movd	%xmm2, %eax
    00000374: 	addl	%edx, %eax
    00000376: 	movd	%xmm1, %edx
    0000037a: 	subl	%edi, %eax
    0000037c: 	addl	%eax, %ecx
    0000037e: 	movd	%xmm0, %eax
    00000382: 	addl	%edx, %eax
    00000384: 	subl	%edi, %eax
    00000386: 	addl	%eax, %ecx
    00000388: 	jne	.Ltmp1518 # Offset: 904
.Ltmp1631:
    0000038e: 	addl	$0x1, %r13d
    00000392: 	cmpl	%esi, %r13d
    00000395: 	jl	.Ltmp1519 # Offset: 917
.Ltmp1516:
    0000039b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003a2: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000003a9: 	subq	$0x20, %rax
    000003ad: 	cmpq	%rax, %r14
    000003b0: 	je	.Ltmp1520 # Offset: 944
    000003b6: 	leaq	0x10(%r14), %rdi
    000003ba: 	movq	0xb8(%rsp), %r13
    000003c2: 	movq	%rdi, (%r14)
    000003c5: 	movq	0xb0(%rsp), %r15
    000003cd: 	movq	%r15, %rax
    000003d0: 	addq	%r13, %rax
    000003d3: 	je	.Ltmp1521 # Offset: 979
    000003d5: 	testq	%r15, %r15
    000003d8: 	je	.Ltmp1522 # Offset: 984
.Ltmp1521:
    000003de: 	movq	%r13, 0x88(%rsp)
    000003e6: 	cmpq	$0xf, %r13
    000003ea: 	ja	.Ltmp1523 # Offset: 1002
    000003f0: 	cmpq	$0x1, %r13
    000003f4: 	jne	.Ltmp1524 # Offset: 1012
    000003fa: 	movzbl	(%r15), %eax
    000003fe: 	movb	%al, 0x10(%r14)
.Ltmp1632:
    00000402: 	movq	%r13, 0x8(%r14)
    00000406: 	movb	$0x0, (%rdi,%r13)
    0000040b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000412: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000419: 	addq	$0x20, %rax
    0000041d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000424: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000042b: 	je	.Ltmp1525 # Offset: 1067
.Ltmp1654:
    00000431: 	movq	-0x20(%rax), %r13
    00000435: 	callq	clock@PLT # Offset: 1077
    0000043a: 	pxor	%xmm0, %xmm0
    0000043e: 	movq	%rax, end_time(%rip)
    00000445: 	movq	%r13, %rdi
    00000448: 	subq	start_time(%rip), %rax
    0000044f: 	cvtsi2sd	%rax, %xmm0
    00000454: 	divsd	DATAat0x17358(%rip), %xmm0
    0000045c: 	callq	_Z13record_resultdPKc # Offset: 1116
    00000461: 	movq	0xb0(%rsp), %rdi
    00000469: 	leaq	0xc0(%rsp), %rax
    00000471: 	movq	%rax, 0x68(%rsp)
    00000476: 	cmpq	%rax, %rdi
    00000479: 	je	.Ltmp1526 # Offset: 1145
    0000047b: 	movq	0xc0(%rsp), %rax
    00000483: 	leaq	0x1(%rax), %rsi
    00000487: 	callq	_ZdlPvm@PLT # Offset: 1159
.Ltmp1526:
    0000048c: 	movq	0x70(%rsp), %rsi
    00000491: 	movq	0x60(%rsp), %rdi
    00000496: 	leaq	DATAat0x171e6(%rip), %rdx
    0000049d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1181
    000004a2: 	callq	clock@PLT # Offset: 1186
    000004a7: 	movl	iterations(%rip), %esi
    000004ad: 	movq	%rax, start_time(%rip)
    000004b4: 	testl	%esi, %esi
    000004b6: 	jle	.Ltmp1527 # Offset: 1206
    000004bc: 	movl	0x58(%rsp), %eax
    000004c0: 	xorl	%r13d, %r13d
    000004c3: 	leaq	DATAat0x171d6(%rip), %r15
    000004ca: 	leal	(%rbx,%rax), %r14d
    000004ce: 	addl	0x50(%rsp), %r14d
    000004d3: 	addl	0x40(%rsp), %r14d
    000004d8: 	movd	%r14d, %xmm2
    000004dd: 	pshufd	$0x0, %xmm2, %xmm2
    000004e2: 	movaps	%xmm2, (%rsp)
    000004e6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1530:
    000004f0: 	pxor	%xmm0, %xmm0
    000004f4: 	movq	%r12, %rax
    000004f7: 	movdqa	%xmm0, %xmm1
    000004fb: 	movdqa	%xmm0, %xmm2
    000004ff: 	nop # Size: 1
.Ltmp1528:
    00000500: 	movdqa	(%rsp), %xmm7
    00000505: 	movdqa	(%rax), %xmm3
    00000509: 	addq	$0x30, %rax
    0000050d: 	paddd	%xmm7, %xmm3
    00000511: 	paddd	%xmm3, %xmm2
    00000515: 	movdqa	-0x20(%rax), %xmm3
    0000051a: 	paddd	%xmm7, %xmm3
    0000051e: 	paddd	-0x10(%rax), %xmm7
    00000523: 	paddd	%xmm3, %xmm1
    00000527: 	paddd	%xmm7, %xmm0
    0000052b: 	cmpq	%rbp, %rax
    0000052e: 	jne	.Ltmp1528 # Offset: 1326
    00000530: 	cvttsd2si	init_value(%rip), %edi
    00000538: 	pshufd	$0xff, %xmm1, %xmm3
    0000053d: 	movd	%xmm2, %edx
    00000541: 	movd	%xmm3, %ecx
    00000545: 	pshufd	$0x55, %xmm2, %xmm3
    0000054a: 	movd	%xmm3, %eax
    0000054e: 	movdqa	%xmm1, %xmm3
    00000552: 	punpckhdq	%xmm1, %xmm3
    00000556: 	addl	%eax, %ecx
    00000558: 	addl	%r14d, %edi
    0000055b: 	movd	%xmm3, %eax
    0000055f: 	movdqa	%xmm2, %xmm3
    00000563: 	imull	$0x1f40, %edi, %edi
    00000569: 	addl	%edx, %eax
    0000056b: 	punpckhdq	%xmm2, %xmm3
    0000056f: 	movd	%xmm3, %edx
    00000573: 	pshufd	$0xff, %xmm2, %xmm2
    00000578: 	pshufd	$0x55, %xmm0, %xmm3
    0000057d: 	subl	%edi, %eax
    0000057f: 	subl	%edi, %ecx
    00000581: 	addl	%eax, %ecx
    00000583: 	movd	%xmm0, %eax
    00000587: 	addl	%edx, %eax
    00000589: 	movd	%xmm3, %edx
    0000058d: 	subl	%edi, %eax
    0000058f: 	addl	%eax, %ecx
    00000591: 	movd	%xmm2, %eax
    00000595: 	movdqa	%xmm0, %xmm2
    00000599: 	addl	%edx, %eax
    0000059b: 	punpckhdq	%xmm0, %xmm2
    0000059f: 	movd	%xmm1, %edx
    000005a3: 	subl	%edi, %eax
    000005a5: 	pshufd	$0xff, %xmm0, %xmm0
    000005aa: 	pshufd	$0x55, %xmm1, %xmm1
    000005af: 	addl	%eax, %ecx
    000005b1: 	movd	%xmm2, %eax
    000005b5: 	addl	%edx, %eax
    000005b7: 	movd	%xmm1, %edx
    000005bb: 	subl	%edi, %eax
    000005bd: 	addl	%eax, %ecx
    000005bf: 	movd	%xmm0, %eax
    000005c3: 	addl	%edx, %eax
    000005c5: 	subl	%edi, %eax
    000005c7: 	addl	%eax, %ecx
    000005c9: 	jne	.Ltmp1529 # Offset: 1481
.Ltmp1639:
    000005cf: 	addl	$0x1, %r13d
    000005d3: 	cmpl	%esi, %r13d
    000005d6: 	jl	.Ltmp1530 # Offset: 1494
.Ltmp1527:
    000005dc: 	movq	0x60(%rsp), %rdi
    000005e1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1505
    000005e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005ed: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000005f4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005fb: 	je	.Ltmp1531 # Offset: 1531
.Ltmp1655:
    00000601: 	movq	-0x20(%rax), %r13
    00000605: 	callq	clock@PLT # Offset: 1541
    0000060a: 	pxor	%xmm0, %xmm0
    0000060e: 	movq	%rax, end_time(%rip)
    00000615: 	movq	%r13, %rdi
    00000618: 	subq	start_time(%rip), %rax
    0000061f: 	cvtsi2sd	%rax, %xmm0
    00000624: 	divsd	DATAat0x17358(%rip), %xmm0
    0000062c: 	callq	_Z13record_resultdPKc # Offset: 1580
    00000631: 	movq	0xb0(%rsp), %rdi
    00000639: 	cmpq	0x68(%rsp), %rdi
    0000063e: 	je	.Ltmp1532 # Offset: 1598
    00000640: 	movq	0xc0(%rsp), %rax
    00000648: 	leaq	0x1(%rax), %rsi
    0000064c: 	callq	_ZdlPvm@PLT # Offset: 1612
.Ltmp1532:
    00000651: 	movq	0x70(%rsp), %rsi
    00000656: 	movq	0x60(%rsp), %rdi
    0000065b: 	leaq	DATAat0x171fe(%rip), %rdx
    00000662: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1634
    00000667: 	callq	clock@PLT # Offset: 1639
    0000066c: 	movl	iterations(%rip), %esi
    00000672: 	movq	%rax, start_time(%rip)
    00000679: 	testl	%esi, %esi
    0000067b: 	jle	.Ltmp1533 # Offset: 1659
    00000681: 	movd	%ebx, %xmm2
    00000685: 	xorl	%r13d, %r13d
    00000688: 	leaq	DATAat0x171d6(%rip), %r14
    0000068f: 	pshufd	$0x0, %xmm2, %xmm2
    00000694: 	movaps	%xmm2, (%rsp)
    00000698: 	movd	0x40(%rsp), %xmm2
    0000069e: 	pshufd	$0x0, %xmm2, %xmm2
    000006a3: 	movaps	%xmm2, 0x10(%rsp)
    000006a8: 	movd	0x50(%rsp), %xmm2
    000006ae: 	pshufd	$0x0, %xmm2, %xmm2
    000006b3: 	movaps	%xmm2, 0x20(%rsp)
    000006b8: 	movd	0x58(%rsp), %xmm2
    000006be: 	pshufd	$0x0, %xmm2, %xmm2
    000006c3: 	movaps	%xmm2, 0x30(%rsp)
    000006c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1536:
    000006d0: 	pxor	%xmm1, %xmm1
    000006d4: 	movq	%r12, %rax
    000006d7: 	movdqa	%xmm1, %xmm2
    000006db: 	movdqa	%xmm1, %xmm3
    000006df: 	nop # Size: 1
.Ltmp1534:
    000006e0: 	movdqa	(%rsp), %xmm4
    000006e5: 	movdqa	(%rax), %xmm0
    000006e9: 	addq	$0x30, %rax
    000006ed: 	movdqa	0x30(%rsp), %xmm5
    000006f3: 	movdqa	0x20(%rsp), %xmm7
    000006f9: 	paddd	%xmm4, %xmm0
    000006fd: 	movdqa	0x10(%rsp), %xmm6
    00000703: 	paddd	%xmm5, %xmm0
    00000707: 	paddd	%xmm7, %xmm0
    0000070b: 	paddd	%xmm6, %xmm0
    0000070f: 	paddd	%xmm0, %xmm3
    00000713: 	movdqa	-0x20(%rax), %xmm0
    00000718: 	paddd	%xmm4, %xmm0
    0000071c: 	paddd	-0x10(%rax), %xmm4
    00000721: 	paddd	%xmm5, %xmm0
    00000725: 	paddd	%xmm7, %xmm0
    00000729: 	paddd	%xmm6, %xmm0
    0000072d: 	paddd	%xmm0, %xmm2
    00000731: 	movdqa	%xmm4, %xmm0
    00000735: 	paddd	%xmm5, %xmm0
    00000739: 	paddd	%xmm7, %xmm0
    0000073d: 	paddd	%xmm6, %xmm0
    00000741: 	paddd	%xmm0, %xmm1
    00000745: 	cmpq	%rbp, %rax
    00000748: 	jne	.Ltmp1534 # Offset: 1864
    0000074a: 	cvttsd2si	init_value(%rip), %edi
    00000752: 	pshufd	$0xff, %xmm2, %xmm0
    00000757: 	movd	%xmm3, %edx
    0000075b: 	movd	%xmm0, %ecx
    0000075f: 	pshufd	$0x55, %xmm3, %xmm0
    00000764: 	movd	%xmm0, %eax
    00000768: 	movdqa	%xmm2, %xmm0
    0000076c: 	punpckhdq	%xmm2, %xmm0
    00000770: 	addl	%eax, %ecx
    00000772: 	addl	%ebx, %edi
    00000774: 	addl	0x58(%rsp), %edi
    00000778: 	movd	%xmm0, %eax
    0000077c: 	addl	0x50(%rsp), %edi
    00000780: 	addl	0x40(%rsp), %edi
    00000784: 	addl	%edx, %eax
    00000786: 	movdqa	%xmm3, %xmm0
    0000078a: 	imull	$0x1f40, %edi, %edi
    00000790: 	punpckhdq	%xmm3, %xmm0
    00000794: 	pshufd	$0xff, %xmm3, %xmm3
    00000799: 	movd	%xmm0, %edx
    0000079d: 	pshufd	$0x55, %xmm1, %xmm0
    000007a2: 	subl	%edi, %eax
    000007a4: 	subl	%edi, %ecx
    000007a6: 	addl	%eax, %ecx
    000007a8: 	movd	%xmm1, %eax
    000007ac: 	addl	%edx, %eax
    000007ae: 	movd	%xmm0, %edx
    000007b2: 	movdqa	%xmm1, %xmm0
    000007b6: 	subl	%edi, %eax
    000007b8: 	punpckhdq	%xmm1, %xmm0
    000007bc: 	addl	%eax, %ecx
    000007be: 	movd	%xmm3, %eax
    000007c2: 	addl	%edx, %eax
    000007c4: 	movd	%xmm2, %edx
    000007c8: 	pshufd	$0x55, %xmm2, %xmm2
    000007cd: 	subl	%edi, %eax
    000007cf: 	addl	%eax, %ecx
    000007d1: 	movd	%xmm0, %eax
    000007d5: 	pshufd	$0xff, %xmm1, %xmm0
    000007da: 	addl	%edx, %eax
    000007dc: 	movd	%xmm2, %edx
    000007e0: 	subl	%edi, %eax
    000007e2: 	addl	%eax, %ecx
    000007e4: 	movd	%xmm0, %eax
    000007e8: 	addl	%edx, %eax
    000007ea: 	subl	%edi, %eax
    000007ec: 	addl	%eax, %ecx
    000007ee: 	jne	.Ltmp1535 # Offset: 2030
.Ltmp1638:
    000007f4: 	addl	$0x1, %r13d
    000007f8: 	cmpl	%esi, %r13d
    000007fb: 	jl	.Ltmp1536 # Offset: 2043
.Ltmp1533:
    00000801: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000808: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000080f: 	subq	$0x20, %rax
    00000813: 	cmpq	%rax, %r14
    00000816: 	je	.Ltmp1537 # Offset: 2070
    0000081c: 	leaq	0x10(%r14), %rdi
    00000820: 	movq	0xb8(%rsp), %r13
    00000828: 	movq	%rdi, (%r14)
    0000082b: 	movq	0xb0(%rsp), %r15
    00000833: 	movq	%r15, %rax
    00000836: 	addq	%r13, %rax
    00000839: 	je	.Ltmp1538 # Offset: 2105
    0000083b: 	testq	%r15, %r15
    0000083e: 	je	.Ltmp1539 # Offset: 2110
.Ltmp1538:
    00000844: 	movq	%r13, 0x88(%rsp)
    0000084c: 	cmpq	$0xf, %r13
    00000850: 	ja	.Ltmp1540 # Offset: 2128
    00000856: 	cmpq	$0x1, %r13
    0000085a: 	jne	.Ltmp1541 # Offset: 2138
    00000860: 	movzbl	(%r15), %eax
    00000864: 	movb	%al, 0x10(%r14)
.Ltmp1670:
    00000868: 	movq	%r13, 0x8(%r14)
    0000086c: 	movb	$0x0, (%rdi,%r13)
    00000871: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000878: 	addq	$0x20, %rax
    0000087c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1659:
    00000883: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000088a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000891: 	je	.Ltmp1542 # Offset: 2193
.Ltmp1658:
    00000897: 	movq	-0x20(%rax), %r13
    0000089b: 	callq	clock@PLT # Offset: 2203
    000008a0: 	pxor	%xmm0, %xmm0
    000008a4: 	movq	%rax, end_time(%rip)
    000008ab: 	movq	%r13, %rdi
    000008ae: 	subq	start_time(%rip), %rax
    000008b5: 	cvtsi2sd	%rax, %xmm0
    000008ba: 	divsd	DATAat0x17358(%rip), %xmm0
    000008c2: 	callq	_Z13record_resultdPKc # Offset: 2242
    000008c7: 	movq	0xb0(%rsp), %rdi
    000008cf: 	cmpq	0x68(%rsp), %rdi
    000008d4: 	je	.Ltmp1543 # Offset: 2260
    000008d6: 	movq	0xc0(%rsp), %rax
    000008de: 	leaq	0x1(%rax), %rsi
    000008e2: 	callq	_ZdlPvm@PLT # Offset: 2274
.Ltmp1543:
    000008e7: 	movq	0x70(%rsp), %rsi
    000008ec: 	movq	0x60(%rsp), %rdi
    000008f1: 	leaq	DATAat0x17217(%rip), %rdx
    000008f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2296
    000008fd: 	callq	clock@PLT # Offset: 2301
    00000902: 	movd	%ebx, %xmm2
    00000906: 	xorl	%r13d, %r13d
    00000909: 	movl	iterations(%rip), %ecx
    0000090f: 	pshufd	$0x0, %xmm2, %xmm2
    00000914: 	movq	%rax, start_time(%rip)
    0000091b: 	leaq	DATAat0x171d6(%rip), %r14
    00000922: 	movaps	%xmm2, (%rsp)
    00000926: 	testl	%ecx, %ecx
    00000928: 	jle	.Ltmp1544 # Offset: 2344
    0000092e: 	nop # Size: 2
.Ltmp1547:
    00000930: 	pxor	%xmm0, %xmm0
    00000934: 	movq	%r12, %rax
    00000937: 	movdqa	%xmm0, %xmm1
    0000093b: 	movdqa	%xmm0, %xmm2
    0000093f: 	nop # Size: 1
.Ltmp1545:
    00000940: 	movdqa	(%rsp), %xmm4
    00000945: 	paddd	(%rax), %xmm2
    00000949: 	addq	$0x30, %rax
    0000094d: 	paddd	-0x20(%rax), %xmm1
    00000952: 	paddd	-0x10(%rax), %xmm0
    00000957: 	psubd	%xmm4, %xmm2
    0000095b: 	psubd	%xmm4, %xmm1
    0000095f: 	psubd	%xmm4, %xmm0
    00000963: 	cmpq	%rbp, %rax
    00000966: 	jne	.Ltmp1545 # Offset: 2406
    00000968: 	cvttsd2si	init_value(%rip), %esi
    00000970: 	pshufd	$0xff, %xmm1, %xmm3
    00000975: 	movd	%xmm2, %edx
    00000979: 	movd	%xmm3, %ecx
    0000097d: 	pshufd	$0x55, %xmm2, %xmm3
    00000982: 	movd	%xmm3, %eax
    00000986: 	movdqa	%xmm1, %xmm3
    0000098a: 	punpckhdq	%xmm1, %xmm3
    0000098e: 	addl	%eax, %ecx
    00000990: 	subl	%ebx, %esi
    00000992: 	movd	%xmm3, %eax
    00000996: 	movdqa	%xmm2, %xmm3
    0000099a: 	imull	$0x1f40, %esi, %esi
    000009a0: 	addl	%edx, %eax
    000009a2: 	punpckhdq	%xmm2, %xmm3
    000009a6: 	movd	%xmm3, %edx
    000009aa: 	pshufd	$0xff, %xmm2, %xmm2
    000009af: 	pshufd	$0x55, %xmm0, %xmm3
    000009b4: 	subl	%esi, %eax
    000009b6: 	subl	%esi, %ecx
    000009b8: 	addl	%eax, %ecx
    000009ba: 	movd	%xmm0, %eax
    000009be: 	addl	%edx, %eax
    000009c0: 	movd	%xmm3, %edx
    000009c4: 	subl	%esi, %eax
    000009c6: 	addl	%eax, %ecx
    000009c8: 	movd	%xmm2, %eax
    000009cc: 	movdqa	%xmm0, %xmm2
    000009d0: 	addl	%edx, %eax
    000009d2: 	punpckhdq	%xmm0, %xmm2
    000009d6: 	movd	%xmm1, %edx
    000009da: 	subl	%esi, %eax
    000009dc: 	pshufd	$0xff, %xmm0, %xmm0
    000009e1: 	pshufd	$0x55, %xmm1, %xmm1
    000009e6: 	addl	%eax, %ecx
    000009e8: 	movd	%xmm2, %eax
    000009ec: 	addl	%edx, %eax
    000009ee: 	movd	%xmm1, %edx
    000009f2: 	subl	%esi, %eax
    000009f4: 	addl	%eax, %ecx
    000009f6: 	movd	%xmm0, %eax
    000009fa: 	addl	%edx, %eax
    000009fc: 	subl	%esi, %eax
    000009fe: 	addl	%eax, %ecx
    00000a00: 	jne	.Ltmp1546 # Offset: 2560
.Ltmp1645:
    00000a06: 	addl	$0x1, %r13d
    00000a0a: 	cmpl	iterations(%rip), %r13d
    00000a11: 	jl	.Ltmp1547 # Offset: 2577
.Ltmp1544:
    00000a17: 	movq	0x60(%rsp), %rdi
    00000a1c: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2588
    00000a21: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a28: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a2f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a36: 	je	.Ltmp1548 # Offset: 2614
.Ltmp1647:
    00000a3c: 	movq	-0x20(%rax), %r13
    00000a40: 	callq	clock@PLT # Offset: 2624
    00000a45: 	pxor	%xmm0, %xmm0
    00000a49: 	movq	%rax, end_time(%rip)
    00000a50: 	movq	%r13, %rdi
    00000a53: 	subq	start_time(%rip), %rax
    00000a5a: 	cvtsi2sd	%rax, %xmm0
    00000a5f: 	divsd	DATAat0x17358(%rip), %xmm0
    00000a67: 	callq	_Z13record_resultdPKc # Offset: 2663
    00000a6c: 	movq	0xb0(%rsp), %rdi
    00000a74: 	cmpq	0x68(%rsp), %rdi
    00000a79: 	je	.Ltmp1549 # Offset: 2681
    00000a7b: 	movq	0xc0(%rsp), %rax
    00000a83: 	leaq	0x1(%rax), %rsi
    00000a87: 	callq	_ZdlPvm@PLT # Offset: 2695
.Ltmp1549:
    00000a8c: 	movq	0x70(%rsp), %rsi
    00000a91: 	movq	0x60(%rsp), %rdi
    00000a96: 	leaq	DATAat0x1722a(%rip), %rdx
    00000a9d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2717
    00000aa2: 	callq	clock@PLT # Offset: 2722
    00000aa7: 	movl	iterations(%rip), %edx
    00000aad: 	movq	%rax, start_time(%rip)
    00000ab4: 	testl	%edx, %edx
    00000ab6: 	jle	.Ltmp1550 # Offset: 2742
    00000abc: 	movl	0x58(%rsp), %eax
    00000ac0: 	xorl	%r13d, %r13d
    00000ac3: 	leaq	DATAat0x171d6(%rip), %r15
    00000aca: 	leal	(%rbx,%rax), %r14d
    00000ace: 	addl	0x50(%rsp), %r14d
    00000ad3: 	addl	0x40(%rsp), %r14d
    00000ad8: 	movd	%r14d, %xmm2
    00000add: 	pshufd	$0x0, %xmm2, %xmm2
    00000ae2: 	movaps	%xmm2, (%rsp)
    00000ae6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1553:
    00000af0: 	pxor	%xmm0, %xmm0
    00000af4: 	movq	%r12, %rax
    00000af7: 	movdqa	%xmm0, %xmm1
    00000afb: 	movdqa	%xmm0, %xmm2
    00000aff: 	nop # Size: 1
.Ltmp1551:
    00000b00: 	movdqa	(%rsp), %xmm5
    00000b05: 	paddd	(%rax), %xmm2
    00000b09: 	addq	$0x30, %rax
    00000b0d: 	paddd	-0x20(%rax), %xmm1
    00000b12: 	paddd	-0x10(%rax), %xmm0
    00000b17: 	psubd	%xmm5, %xmm2
    00000b1b: 	psubd	%xmm5, %xmm1
    00000b1f: 	psubd	%xmm5, %xmm0
    00000b23: 	cmpq	%rax, %rbp
    00000b26: 	jne	.Ltmp1551 # Offset: 2854
    00000b28: 	cvttsd2si	init_value(%rip), %esi
    00000b30: 	pshufd	$0xff, %xmm1, %xmm3
    00000b35: 	movd	%xmm2, %edx
    00000b39: 	movd	%xmm3, %ecx
    00000b3d: 	pshufd	$0x55, %xmm2, %xmm3
    00000b42: 	movd	%xmm3, %eax
    00000b46: 	movdqa	%xmm1, %xmm3
    00000b4a: 	punpckhdq	%xmm1, %xmm3
    00000b4e: 	addl	%eax, %ecx
    00000b50: 	subl	%r14d, %esi
    00000b53: 	movd	%xmm3, %eax
    00000b57: 	movdqa	%xmm2, %xmm3
    00000b5b: 	imull	$0x1f40, %esi, %esi
    00000b61: 	addl	%edx, %eax
    00000b63: 	punpckhdq	%xmm2, %xmm3
    00000b67: 	movd	%xmm3, %edx
    00000b6b: 	pshufd	$0xff, %xmm2, %xmm2
    00000b70: 	pshufd	$0x55, %xmm0, %xmm3
    00000b75: 	subl	%esi, %eax
    00000b77: 	subl	%esi, %ecx
    00000b79: 	addl	%eax, %ecx
    00000b7b: 	movd	%xmm0, %eax
    00000b7f: 	addl	%edx, %eax
    00000b81: 	movd	%xmm3, %edx
    00000b85: 	subl	%esi, %eax
    00000b87: 	addl	%eax, %ecx
    00000b89: 	movd	%xmm2, %eax
    00000b8d: 	movdqa	%xmm0, %xmm2
    00000b91: 	addl	%edx, %eax
    00000b93: 	punpckhdq	%xmm0, %xmm2
    00000b97: 	movd	%xmm1, %edx
    00000b9b: 	subl	%esi, %eax
    00000b9d: 	pshufd	$0xff, %xmm0, %xmm0
    00000ba2: 	pshufd	$0x55, %xmm1, %xmm1
    00000ba7: 	addl	%eax, %ecx
    00000ba9: 	movd	%xmm2, %eax
    00000bad: 	addl	%edx, %eax
    00000baf: 	movd	%xmm1, %edx
    00000bb3: 	subl	%esi, %eax
    00000bb5: 	addl	%eax, %ecx
    00000bb7: 	movd	%xmm0, %eax
    00000bbb: 	addl	%edx, %eax
    00000bbd: 	subl	%esi, %eax
    00000bbf: 	addl	%eax, %ecx
    00000bc1: 	jne	.Ltmp1552 # Offset: 3009
.Ltmp1644:
    00000bc7: 	addl	$0x1, %r13d
    00000bcb: 	cmpl	iterations(%rip), %r13d
    00000bd2: 	jl	.Ltmp1553 # Offset: 3026
.Ltmp1550:
    00000bd8: 	movq	0x60(%rsp), %rdi
    00000bdd: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3037
    00000be2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000be9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000bf0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bf7: 	je	.Ltmp1554 # Offset: 3063
.Ltmp1646:
    00000bfd: 	movq	-0x20(%rax), %r13
    00000c01: 	callq	clock@PLT # Offset: 3073
    00000c06: 	pxor	%xmm0, %xmm0
    00000c0a: 	movq	%rax, end_time(%rip)
    00000c11: 	movq	%r13, %rdi
    00000c14: 	subq	start_time(%rip), %rax
    00000c1b: 	cvtsi2sd	%rax, %xmm0
    00000c20: 	divsd	DATAat0x17358(%rip), %xmm0
    00000c28: 	callq	_Z13record_resultdPKc # Offset: 3112
    00000c2d: 	movq	0xb0(%rsp), %rdi
    00000c35: 	cmpq	0x68(%rsp), %rdi
    00000c3a: 	je	.Ltmp1555 # Offset: 3130
    00000c3c: 	movq	0xc0(%rsp), %rax
    00000c44: 	leaq	0x1(%rax), %rsi
    00000c48: 	callq	_ZdlPvm@PLT # Offset: 3144
.Ltmp1555:
    00000c4d: 	movq	0x70(%rsp), %rsi
    00000c52: 	movq	0x60(%rsp), %rdi
    00000c57: 	leaq	DATAat0x17247(%rip), %rdx
    00000c5e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3166
    00000c63: 	callq	clock@PLT # Offset: 3171
    00000c68: 	movq	%rax, start_time(%rip)
    00000c6f: 	movl	iterations(%rip), %eax
    00000c75: 	testl	%eax, %eax
    00000c77: 	jle	.Ltmp1556 # Offset: 3191
    00000c7d: 	movd	%ebx, %xmm2
    00000c81: 	xorl	%r13d, %r13d
    00000c84: 	leaq	DATAat0x171d6(%rip), %r14
    00000c8b: 	pshufd	$0x0, %xmm2, %xmm2
    00000c90: 	movaps	%xmm2, (%rsp)
    00000c94: 	movd	0x40(%rsp), %xmm2
    00000c9a: 	pshufd	$0x0, %xmm2, %xmm2
    00000c9f: 	movaps	%xmm2, 0x10(%rsp)
    00000ca4: 	movd	0x50(%rsp), %xmm2
    00000caa: 	pshufd	$0x0, %xmm2, %xmm2
    00000caf: 	movaps	%xmm2, 0x20(%rsp)
    00000cb4: 	movd	0x58(%rsp), %xmm2
    00000cba: 	pshufd	$0x0, %xmm2, %xmm2
    00000cbf: 	movaps	%xmm2, 0x30(%rsp)
    00000cc4: 	nopl	(%rax) # Size: 4
.Ltmp1559:
    00000cc8: 	pxor	%xmm1, %xmm1
    00000ccc: 	movq	%r12, %rax
    00000ccf: 	movdqa	%xmm1, %xmm2
    00000cd3: 	movdqa	%xmm1, %xmm3
    00000cd7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1557:
    00000ce0: 	movdqa	(%rsp), %xmm7
    00000ce5: 	movdqa	(%rax), %xmm0
    00000ce9: 	addq	$0x30, %rax
    00000ced: 	movdqa	0x30(%rsp), %xmm6
    00000cf3: 	movdqa	0x20(%rsp), %xmm4
    00000cf9: 	psubd	%xmm7, %xmm0
    00000cfd: 	movdqa	0x10(%rsp), %xmm5
    00000d03: 	psubd	%xmm6, %xmm0
    00000d07: 	psubd	%xmm4, %xmm0
    00000d0b: 	psubd	%xmm5, %xmm0
    00000d0f: 	paddd	%xmm0, %xmm3
    00000d13: 	movdqa	-0x20(%rax), %xmm0
    00000d18: 	psubd	%xmm7, %xmm0
    00000d1c: 	psubd	%xmm6, %xmm0
    00000d20: 	psubd	%xmm4, %xmm0
    00000d24: 	psubd	%xmm5, %xmm0
    00000d28: 	paddd	%xmm0, %xmm2
    00000d2c: 	movdqa	-0x10(%rax), %xmm0
    00000d31: 	psubd	%xmm7, %xmm0
    00000d35: 	psubd	%xmm6, %xmm0
    00000d39: 	psubd	%xmm4, %xmm0
    00000d3d: 	psubd	%xmm5, %xmm0
    00000d41: 	paddd	%xmm0, %xmm1
    00000d45: 	cmpq	%rbp, %rax
    00000d48: 	jne	.Ltmp1557 # Offset: 3400
    00000d4a: 	cvttsd2si	init_value(%rip), %esi
    00000d52: 	pshufd	$0xff, %xmm2, %xmm0
    00000d57: 	movd	%xmm3, %edx
    00000d5b: 	movd	%xmm0, %ecx
    00000d5f: 	pshufd	$0x55, %xmm3, %xmm0
    00000d64: 	movd	%xmm0, %eax
    00000d68: 	movdqa	%xmm2, %xmm0
    00000d6c: 	punpckhdq	%xmm2, %xmm0
    00000d70: 	addl	%eax, %ecx
    00000d72: 	subl	%ebx, %esi
    00000d74: 	subl	0x58(%rsp), %esi
    00000d78: 	movd	%xmm0, %eax
    00000d7c: 	subl	0x50(%rsp), %esi
    00000d80: 	subl	0x40(%rsp), %esi
    00000d84: 	addl	%edx, %eax
    00000d86: 	movdqa	%xmm3, %xmm0
    00000d8a: 	imull	$0x1f40, %esi, %esi
    00000d90: 	punpckhdq	%xmm3, %xmm0
    00000d94: 	pshufd	$0xff, %xmm3, %xmm3
    00000d99: 	movd	%xmm0, %edx
    00000d9d: 	pshufd	$0x55, %xmm1, %xmm0
    00000da2: 	subl	%esi, %eax
    00000da4: 	subl	%esi, %ecx
    00000da6: 	addl	%eax, %ecx
    00000da8: 	movd	%xmm1, %eax
    00000dac: 	addl	%edx, %eax
    00000dae: 	movd	%xmm0, %edx
    00000db2: 	movdqa	%xmm1, %xmm0
    00000db6: 	subl	%esi, %eax
    00000db8: 	punpckhdq	%xmm1, %xmm0
    00000dbc: 	addl	%eax, %ecx
    00000dbe: 	movd	%xmm3, %eax
    00000dc2: 	addl	%edx, %eax
    00000dc4: 	movd	%xmm2, %edx
    00000dc8: 	pshufd	$0x55, %xmm2, %xmm2
    00000dcd: 	subl	%esi, %eax
    00000dcf: 	addl	%eax, %ecx
    00000dd1: 	movd	%xmm0, %eax
    00000dd5: 	pshufd	$0xff, %xmm1, %xmm0
    00000dda: 	addl	%edx, %eax
    00000ddc: 	movd	%xmm2, %edx
    00000de0: 	subl	%esi, %eax
    00000de2: 	addl	%eax, %ecx
    00000de4: 	movd	%xmm0, %eax
    00000de8: 	addl	%edx, %eax
    00000dea: 	subl	%esi, %eax
    00000dec: 	addl	%eax, %ecx
    00000dee: 	jne	.Ltmp1558 # Offset: 3566
.Ltmp1643:
    00000df4: 	addl	$0x1, %r13d
    00000df8: 	cmpl	iterations(%rip), %r13d
    00000dff: 	jl	.Ltmp1559 # Offset: 3583
.Ltmp1556:
    00000e05: 	movq	0x60(%rsp), %rdi
    00000e0a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3594
    00000e0f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e16: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e1d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e24: 	je	.Ltmp1560 # Offset: 3620
.Ltmp1649:
    00000e2a: 	movq	-0x20(%rax), %r13
    00000e2e: 	callq	clock@PLT # Offset: 3630
    00000e33: 	pxor	%xmm0, %xmm0
    00000e37: 	movq	%rax, end_time(%rip)
    00000e3e: 	movq	%r13, %rdi
    00000e41: 	subq	start_time(%rip), %rax
    00000e48: 	cvtsi2sd	%rax, %xmm0
    00000e4d: 	divsd	DATAat0x17358(%rip), %xmm0
    00000e55: 	callq	_Z13record_resultdPKc # Offset: 3669
    00000e5a: 	movq	0xb0(%rsp), %rdi
    00000e62: 	cmpq	0x68(%rsp), %rdi
    00000e67: 	je	.Ltmp1561 # Offset: 3687
    00000e69: 	movq	0xc0(%rsp), %rax
    00000e71: 	leaq	0x1(%rax), %rsi
    00000e75: 	callq	_ZdlPvm@PLT # Offset: 3701
.Ltmp1561:
    00000e7a: 	movq	0x70(%rsp), %rsi
    00000e7f: 	movq	0x60(%rsp), %rdi
    00000e84: 	leaq	DATAat0x17265(%rip), %rdx
    00000e8b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3723
    00000e90: 	callq	clock@PLT # Offset: 3728
    00000e95: 	movd	%ebx, %xmm2
    00000e99: 	xorl	%r13d, %r13d
    00000e9c: 	movl	iterations(%rip), %esi
    00000ea2: 	pshufd	$0x0, %xmm2, %xmm2
    00000ea7: 	movq	%rax, start_time(%rip)
    00000eae: 	leaq	DATAat0x171d6(%rip), %r14
    00000eb5: 	movaps	%xmm2, (%rsp)
    00000eb9: 	testl	%esi, %esi
    00000ebb: 	jle	.Ltmp1562 # Offset: 3771
    00000ec1: 	nopl	(%rax) # Size: 7
.Ltmp1565:
    00000ec8: 	movdqa	(%rsp), %xmm5
    00000ecd: 	pxor	%xmm2, %xmm2
    00000ed1: 	movq	%r12, %rax
    00000ed4: 	movdqa	%xmm2, %xmm3
    00000ed8: 	movdqa	%xmm2, %xmm4
    00000edc: 	psrlq	$0x20, %xmm5
    00000ee1: 	nopl	(%rax) # Size: 7
.Ltmp1563:
    00000ee8: 	movdqa	(%rax), %xmm0
    00000eec: 	movdqa	(%rsp), %xmm6
    00000ef1: 	addq	$0x30, %rax
    00000ef5: 	psrlq	$0x20, %xmm0
    00000efa: 	movdqa	%xmm6, %xmm1
    00000efe: 	pmuludq	-0x30(%rax), %xmm1
    00000f03: 	pshufd	$0x8, %xmm1, %xmm1
    00000f08: 	pmuludq	%xmm5, %xmm0
    00000f0c: 	pshufd	$0x8, %xmm0, %xmm0
    00000f11: 	punpckldq	%xmm0, %xmm1
    00000f15: 	movdqa	-0x20(%rax), %xmm0
    00000f1a: 	paddd	%xmm1, %xmm4
    00000f1e: 	movdqa	%xmm6, %xmm1
    00000f22: 	pmuludq	-0x20(%rax), %xmm1
    00000f27: 	pshufd	$0x8, %xmm1, %xmm1
    00000f2c: 	psrlq	$0x20, %xmm0
    00000f31: 	pmuludq	%xmm5, %xmm0
    00000f35: 	pshufd	$0x8, %xmm0, %xmm0
    00000f3a: 	punpckldq	%xmm0, %xmm1
    00000f3e: 	movdqa	-0x10(%rax), %xmm0
    00000f43: 	paddd	%xmm1, %xmm3
    00000f47: 	movdqa	%xmm6, %xmm1
    00000f4b: 	pmuludq	-0x10(%rax), %xmm1
    00000f50: 	pshufd	$0x8, %xmm1, %xmm1
    00000f55: 	psrlq	$0x20, %xmm0
    00000f5a: 	pmuludq	%xmm5, %xmm0
    00000f5e: 	pshufd	$0x8, %xmm0, %xmm0
    00000f63: 	punpckldq	%xmm0, %xmm1
    00000f67: 	paddd	%xmm1, %xmm2
    00000f6b: 	cmpq	%rbp, %rax
    00000f6e: 	jne	.Ltmp1563 # Offset: 3950
    00000f74: 	cvttsd2si	init_value(%rip), %edi
    00000f7c: 	pshufd	$0xff, %xmm3, %xmm0
    00000f81: 	movd	%xmm4, %edx
    00000f85: 	movd	%xmm0, %ecx
    00000f89: 	pshufd	$0x55, %xmm4, %xmm0
    00000f8e: 	movd	%xmm0, %eax
    00000f92: 	movdqa	%xmm3, %xmm0
    00000f96: 	punpckhdq	%xmm3, %xmm0
    00000f9a: 	addl	%eax, %ecx
    00000f9c: 	imull	%ebx, %edi
    00000f9f: 	movd	%xmm0, %eax
    00000fa3: 	movdqa	%xmm4, %xmm0
    00000fa7: 	addl	%edx, %eax
    00000fa9: 	punpckhdq	%xmm4, %xmm0
    00000fad: 	pshufd	$0xff, %xmm4, %xmm4
    00000fb2: 	movd	%xmm0, %edx
    00000fb6: 	pshufd	$0x55, %xmm2, %xmm0
    00000fbb: 	imull	$0x1f40, %edi, %edi
    00000fc1: 	subl	%edi, %eax
    00000fc3: 	subl	%edi, %ecx
    00000fc5: 	addl	%eax, %ecx
    00000fc7: 	movd	%xmm2, %eax
    00000fcb: 	addl	%edx, %eax
    00000fcd: 	movd	%xmm0, %edx
    00000fd1: 	movdqa	%xmm2, %xmm0
    00000fd5: 	subl	%edi, %eax
    00000fd7: 	punpckhdq	%xmm2, %xmm0
    00000fdb: 	pshufd	$0xff, %xmm2, %xmm2
    00000fe0: 	addl	%eax, %ecx
    00000fe2: 	movd	%xmm4, %eax
    00000fe6: 	addl	%edx, %eax
    00000fe8: 	movd	%xmm3, %edx
    00000fec: 	pshufd	$0x55, %xmm3, %xmm3
    00000ff1: 	subl	%edi, %eax
    00000ff3: 	addl	%eax, %ecx
    00000ff5: 	movd	%xmm0, %eax
    00000ff9: 	addl	%edx, %eax
    00000ffb: 	movd	%xmm3, %edx
    00000fff: 	subl	%edi, %eax
    00001001: 	addl	%eax, %ecx
    00001003: 	movd	%xmm2, %eax
    00001007: 	addl	%edx, %eax
    00001009: 	subl	%edi, %eax
    0000100b: 	addl	%eax, %ecx
    0000100d: 	jne	.Ltmp1564 # Offset: 4109
.Ltmp1642:
    00001013: 	addl	$0x1, %r13d
    00001017: 	cmpl	%esi, %r13d
    0000101a: 	jl	.Ltmp1565 # Offset: 4122
.Ltmp1562:
    00001020: 	movq	0x60(%rsp), %rdi
    00001025: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4133
    0000102a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001031: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001038: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000103f: 	je	.Ltmp1566 # Offset: 4159
.Ltmp1648:
    00001045: 	movq	-0x20(%rax), %r13
    00001049: 	callq	clock@PLT # Offset: 4169
    0000104e: 	pxor	%xmm0, %xmm0
    00001052: 	movq	%rax, end_time(%rip)
    00001059: 	movq	%r13, %rdi
    0000105c: 	subq	start_time(%rip), %rax
    00001063: 	cvtsi2sd	%rax, %xmm0
    00001068: 	divsd	DATAat0x17358(%rip), %xmm0
    00001070: 	callq	_Z13record_resultdPKc # Offset: 4208
    00001075: 	movq	0xb0(%rsp), %rdi
    0000107d: 	cmpq	0x68(%rsp), %rdi
    00001082: 	je	.Ltmp1567 # Offset: 4226
    00001084: 	movq	0xc0(%rsp), %rax
    0000108c: 	leaq	0x1(%rax), %rsi
    00001090: 	callq	_ZdlPvm@PLT # Offset: 4240
.Ltmp1567:
    00001095: 	movq	0x70(%rsp), %rsi
    0000109a: 	movq	0x60(%rsp), %rdi
    0000109f: 	leaq	DATAat0x17278(%rip), %rdx
    000010a6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4262
    000010ab: 	callq	clock@PLT # Offset: 4267
    000010b0: 	movl	iterations(%rip), %esi
    000010b6: 	movq	%rax, start_time(%rip)
    000010bd: 	testl	%esi, %esi
    000010bf: 	jle	.Ltmp1568 # Offset: 4287
    000010c5: 	movl	0x58(%rsp), %r14d
    000010ca: 	xorl	%r13d, %r13d
    000010cd: 	leaq	DATAat0x171d6(%rip), %r15
    000010d4: 	imull	%ebx, %r14d
    000010d8: 	imull	0x50(%rsp), %r14d
    000010de: 	imull	0x40(%rsp), %r14d
    000010e4: 	movd	%r14d, %xmm2
    000010e9: 	pshufd	$0x0, %xmm2, %xmm2
    000010ee: 	movaps	%xmm2, (%rsp)
    000010f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1571:
    000010f8: 	movdqa	(%rsp), %xmm5
    000010fd: 	pxor	%xmm2, %xmm2
    00001101: 	movq	%r12, %rax
    00001104: 	movdqa	%xmm2, %xmm3
    00001108: 	movdqa	%xmm2, %xmm4
    0000110c: 	psrlq	$0x20, %xmm5
    00001111: 	nopl	(%rax) # Size: 7
.Ltmp1569:
    00001118: 	movdqa	(%rax), %xmm0
    0000111c: 	movdqa	(%rsp), %xmm6
    00001121: 	addq	$0x30, %rax
    00001125: 	psrlq	$0x20, %xmm0
    0000112a: 	movdqa	%xmm6, %xmm1
    0000112e: 	pmuludq	-0x30(%rax), %xmm1
    00001133: 	pshufd	$0x8, %xmm1, %xmm1
    00001138: 	pmuludq	%xmm5, %xmm0
    0000113c: 	pshufd	$0x8, %xmm0, %xmm0
    00001141: 	punpckldq	%xmm0, %xmm1
    00001145: 	movdqa	-0x20(%rax), %xmm0
    0000114a: 	paddd	%xmm1, %xmm4
    0000114e: 	movdqa	%xmm6, %xmm1
    00001152: 	pmuludq	-0x20(%rax), %xmm1
    00001157: 	pshufd	$0x8, %xmm1, %xmm1
    0000115c: 	psrlq	$0x20, %xmm0
    00001161: 	pmuludq	%xmm5, %xmm0
    00001165: 	pshufd	$0x8, %xmm0, %xmm0
    0000116a: 	punpckldq	%xmm0, %xmm1
    0000116e: 	movdqa	-0x10(%rax), %xmm0
    00001173: 	paddd	%xmm1, %xmm3
    00001177: 	movdqa	%xmm6, %xmm1
    0000117b: 	pmuludq	-0x10(%rax), %xmm1
    00001180: 	pshufd	$0x8, %xmm1, %xmm1
    00001185: 	psrlq	$0x20, %xmm0
    0000118a: 	pmuludq	%xmm5, %xmm0
    0000118e: 	pshufd	$0x8, %xmm0, %xmm0
    00001193: 	punpckldq	%xmm0, %xmm1
    00001197: 	paddd	%xmm1, %xmm2
    0000119b: 	cmpq	%rbp, %rax
    0000119e: 	jne	.Ltmp1569 # Offset: 4510
    000011a4: 	cvttsd2si	init_value(%rip), %edi
    000011ac: 	pshufd	$0xff, %xmm3, %xmm0
    000011b1: 	movd	%xmm4, %edx
    000011b5: 	movd	%xmm0, %ecx
    000011b9: 	pshufd	$0x55, %xmm4, %xmm0
    000011be: 	movd	%xmm0, %eax
    000011c2: 	movdqa	%xmm3, %xmm0
    000011c6: 	punpckhdq	%xmm3, %xmm0
    000011ca: 	addl	%eax, %ecx
    000011cc: 	imull	%r14d, %edi
    000011d0: 	movd	%xmm0, %eax
    000011d4: 	movdqa	%xmm4, %xmm0
    000011d8: 	addl	%edx, %eax
    000011da: 	punpckhdq	%xmm4, %xmm0
    000011de: 	pshufd	$0xff, %xmm4, %xmm4
    000011e3: 	movd	%xmm0, %edx
    000011e7: 	pshufd	$0x55, %xmm2, %xmm0
    000011ec: 	imull	$0x1f40, %edi, %edi
    000011f2: 	subl	%edi, %eax
    000011f4: 	subl	%edi, %ecx
    000011f6: 	addl	%eax, %ecx
    000011f8: 	movd	%xmm2, %eax
    000011fc: 	addl	%edx, %eax
    000011fe: 	movd	%xmm0, %edx
    00001202: 	movdqa	%xmm2, %xmm0
    00001206: 	subl	%edi, %eax
    00001208: 	punpckhdq	%xmm2, %xmm0
    0000120c: 	pshufd	$0xff, %xmm2, %xmm2
    00001211: 	addl	%eax, %ecx
    00001213: 	movd	%xmm4, %eax
    00001217: 	addl	%edx, %eax
    00001219: 	movd	%xmm3, %edx
    0000121d: 	pshufd	$0x55, %xmm3, %xmm3
    00001222: 	subl	%edi, %eax
    00001224: 	addl	%eax, %ecx
    00001226: 	movd	%xmm0, %eax
    0000122a: 	addl	%edx, %eax
    0000122c: 	movd	%xmm3, %edx
    00001230: 	subl	%edi, %eax
    00001232: 	addl	%eax, %ecx
    00001234: 	movd	%xmm2, %eax
    00001238: 	addl	%edx, %eax
    0000123a: 	subl	%edi, %eax
    0000123c: 	addl	%eax, %ecx
    0000123e: 	jne	.Ltmp1570 # Offset: 4670
.Ltmp1641:
    00001244: 	addl	$0x1, %r13d
    00001248: 	cmpl	%esi, %r13d
    0000124b: 	jl	.Ltmp1571 # Offset: 4683
.Ltmp1568:
    00001251: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001258: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000125f: 	subq	$0x20, %rax
    00001263: 	cmpq	%rax, %r14
    00001266: 	je	.Ltmp1572 # Offset: 4710
    0000126c: 	leaq	0x10(%r14), %rdi
    00001270: 	movq	0xb8(%rsp), %r13
    00001278: 	movq	%rdi, (%r14)
    0000127b: 	movq	0xb0(%rsp), %r15
    00001283: 	movq	%r15, %rax
    00001286: 	addq	%r13, %rax
    00001289: 	je	.Ltmp1573 # Offset: 4745
    0000128b: 	testq	%r15, %r15
    0000128e: 	je	.Ltmp1574 # Offset: 4750
.Ltmp1573:
    00001294: 	movq	%r13, 0x88(%rsp)
    0000129c: 	cmpq	$0xf, %r13
    000012a0: 	ja	.Ltmp1575 # Offset: 4768
    000012a6: 	cmpq	$0x1, %r13
    000012aa: 	jne	.Ltmp1576 # Offset: 4778
    000012b0: 	movzbl	(%r15), %eax
    000012b4: 	movb	%al, 0x10(%r14)
.Ltmp1664:
    000012b8: 	movq	%r13, 0x8(%r14)
    000012bc: 	movb	$0x0, (%rdi,%r13)
    000012c1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012c8: 	addq	$0x20, %rax
    000012cc: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1652:
    000012d3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000012da: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012e1: 	je	.Ltmp1577 # Offset: 4833
.Ltmp1651:
    000012e7: 	movq	-0x20(%rax), %r13
    000012eb: 	callq	clock@PLT # Offset: 4843
    000012f0: 	pxor	%xmm0, %xmm0
    000012f4: 	movq	%rax, end_time(%rip)
    000012fb: 	movq	%r13, %rdi
    000012fe: 	subq	start_time(%rip), %rax
    00001305: 	cvtsi2sd	%rax, %xmm0
    0000130a: 	divsd	DATAat0x17358(%rip), %xmm0
    00001312: 	callq	_Z13record_resultdPKc # Offset: 4882
    00001317: 	movq	0xb0(%rsp), %rdi
    0000131f: 	cmpq	0x68(%rsp), %rdi
    00001324: 	je	.Ltmp1578 # Offset: 4900
    00001326: 	movq	0xc0(%rsp), %rax
    0000132e: 	leaq	0x1(%rax), %rsi
    00001332: 	callq	_ZdlPvm@PLT # Offset: 4914
.Ltmp1578:
    00001337: 	movq	0x70(%rsp), %rsi
    0000133c: 	movq	0x60(%rsp), %rdi
    00001341: 	leaq	DATAat0x17308(%rip), %rdx
    00001348: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4936
    0000134d: 	callq	clock@PLT # Offset: 4941
    00001352: 	movl	iterations(%rip), %esi
    00001358: 	movq	%rax, start_time(%rip)
    0000135f: 	testl	%esi, %esi
    00001361: 	jle	.Ltmp1579 # Offset: 4961
    00001367: 	movl	0x58(%rsp), %r14d
    0000136c: 	xorl	%r13d, %r13d
    0000136f: 	leaq	DATAat0x171d6(%rip), %r15
    00001376: 	imull	%ebx, %r14d
    0000137a: 	imull	0x50(%rsp), %r14d
    00001380: 	imull	0x40(%rsp), %r14d
    00001386: 	movd	%r14d, %xmm2
    0000138b: 	pshufd	$0x0, %xmm2, %xmm2
    00001390: 	movaps	%xmm2, (%rsp)
    00001394: 	nopl	(%rax) # Size: 4
.Ltmp1582:
    00001398: 	pxor	%xmm0, %xmm0
    0000139c: 	movq	%r12, %rax
    0000139f: 	movdqa	%xmm0, %xmm1
    000013a3: 	movdqa	%xmm0, %xmm2
    000013a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1580:
    000013b0: 	movdqa	(%rsp), %xmm5
    000013b5: 	movdqa	(%rax), %xmm3
    000013b9: 	addq	$0x30, %rax
    000013bd: 	paddd	%xmm5, %xmm3
    000013c1: 	paddd	%xmm3, %xmm2
    000013c5: 	movdqa	-0x20(%rax), %xmm3
    000013ca: 	paddd	%xmm5, %xmm3
    000013ce: 	paddd	-0x10(%rax), %xmm5
    000013d3: 	paddd	%xmm3, %xmm1
    000013d7: 	paddd	%xmm5, %xmm0
    000013db: 	cmpq	%rbp, %rax
    000013de: 	jne	.Ltmp1580 # Offset: 5086
    000013e0: 	cvttsd2si	init_value(%rip), %edi
    000013e8: 	pshufd	$0xff, %xmm1, %xmm3
    000013ed: 	movd	%xmm2, %edx
    000013f1: 	movd	%xmm3, %ecx
    000013f5: 	pshufd	$0x55, %xmm2, %xmm3
    000013fa: 	movd	%xmm3, %eax
    000013fe: 	movdqa	%xmm1, %xmm3
    00001402: 	punpckhdq	%xmm1, %xmm3
    00001406: 	addl	%eax, %ecx
    00001408: 	addl	%r14d, %edi
    0000140b: 	movd	%xmm3, %eax
    0000140f: 	movdqa	%xmm2, %xmm3
    00001413: 	imull	$0x1f40, %edi, %edi
    00001419: 	addl	%edx, %eax
    0000141b: 	punpckhdq	%xmm2, %xmm3
    0000141f: 	movd	%xmm3, %edx
    00001423: 	pshufd	$0xff, %xmm2, %xmm2
    00001428: 	pshufd	$0x55, %xmm0, %xmm3
    0000142d: 	subl	%edi, %eax
    0000142f: 	subl	%edi, %ecx
    00001431: 	addl	%eax, %ecx
    00001433: 	movd	%xmm0, %eax
    00001437: 	addl	%edx, %eax
    00001439: 	movd	%xmm3, %edx
    0000143d: 	subl	%edi, %eax
    0000143f: 	addl	%eax, %ecx
    00001441: 	movd	%xmm2, %eax
    00001445: 	movdqa	%xmm0, %xmm2
    00001449: 	addl	%edx, %eax
    0000144b: 	punpckhdq	%xmm0, %xmm2
    0000144f: 	movd	%xmm1, %edx
    00001453: 	subl	%edi, %eax
    00001455: 	pshufd	$0xff, %xmm0, %xmm0
    0000145a: 	pshufd	$0x55, %xmm1, %xmm1
    0000145f: 	addl	%eax, %ecx
    00001461: 	movd	%xmm2, %eax
    00001465: 	addl	%edx, %eax
    00001467: 	movd	%xmm1, %edx
    0000146b: 	subl	%edi, %eax
    0000146d: 	addl	%eax, %ecx
    0000146f: 	movd	%xmm0, %eax
    00001473: 	addl	%edx, %eax
    00001475: 	subl	%edi, %eax
    00001477: 	addl	%eax, %ecx
    00001479: 	jne	.Ltmp1581 # Offset: 5241
.Ltmp1640:
    0000147f: 	addl	$0x1, %r13d
    00001483: 	cmpl	%esi, %r13d
    00001486: 	jl	.Ltmp1582 # Offset: 5254
.Ltmp1579:
    0000148c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001493: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000149a: 	subq	$0x20, %rax
    0000149e: 	cmpq	%rax, %r14
    000014a1: 	je	.Ltmp1583 # Offset: 5281
    000014a7: 	leaq	0x10(%r14), %rdi
    000014ab: 	movq	0xb8(%rsp), %r13
    000014b3: 	movq	%rdi, (%r14)
    000014b6: 	movq	0xb0(%rsp), %r15
    000014be: 	movq	%r15, %rax
    000014c1: 	addq	%r13, %rax
    000014c4: 	je	.Ltmp1584 # Offset: 5316
    000014c6: 	testq	%r15, %r15
    000014c9: 	je	.Ltmp1585 # Offset: 5321
.Ltmp1584:
    000014cf: 	movq	%r13, 0x88(%rsp)
    000014d7: 	cmpq	$0xf, %r13
    000014db: 	ja	.Ltmp1586 # Offset: 5339
    000014e1: 	cmpq	$0x1, %r13
    000014e5: 	jne	.Ltmp1587 # Offset: 5349
    000014eb: 	movzbl	(%r15), %eax
    000014ef: 	movb	%al, 0x10(%r14)
.Ltmp1668:
    000014f3: 	movq	%r13, 0x8(%r14)
    000014f7: 	movb	$0x0, (%rdi,%r13)
    000014fc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001503: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150a: 	addq	$0x20, %rax
    0000150e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001515: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000151c: 	je	.Ltmp1588 # Offset: 5404
.Ltmp1650:
    00001522: 	movq	-0x20(%rax), %r13
    00001526: 	callq	clock@PLT # Offset: 5414
    0000152b: 	pxor	%xmm0, %xmm0
    0000152f: 	movq	%rax, end_time(%rip)
    00001536: 	movq	%r13, %rdi
    00001539: 	subq	start_time(%rip), %rax
    00001540: 	cvtsi2sd	%rax, %xmm0
    00001545: 	divsd	DATAat0x17358(%rip), %xmm0
    0000154d: 	callq	_Z13record_resultdPKc # Offset: 5453
    00001552: 	movq	0xb0(%rsp), %rdi
    0000155a: 	cmpq	0x68(%rsp), %rdi
    0000155f: 	je	.Ltmp1589 # Offset: 5471
    00001561: 	movq	0xc0(%rsp), %rax
    00001569: 	leaq	0x1(%rax), %rsi
    0000156d: 	callq	_ZdlPvm@PLT # Offset: 5485
.Ltmp1589:
    00001572: 	movq	0x70(%rsp), %rsi
    00001577: 	movq	0x60(%rsp), %rdi
    0000157c: 	leaq	DATAat0x17328(%rip), %rdx
    00001583: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5507
    00001588: 	callq	clock@PLT # Offset: 5512
    0000158d: 	movl	iterations(%rip), %esi
    00001593: 	movq	%rax, start_time(%rip)
    0000159a: 	testl	%esi, %esi
    0000159c: 	jle	.Ltmp1590 # Offset: 5532
    000015a2: 	movd	%ebx, %xmm2
    000015a6: 	xorl	%r13d, %r13d
    000015a9: 	leaq	DATAat0x171d6(%rip), %r14
    000015b0: 	pshufd	$0x0, %xmm2, %xmm2
    000015b5: 	movaps	%xmm2, (%rsp)
    000015b9: 	movd	0x40(%rsp), %xmm2
    000015bf: 	pshufd	$0x0, %xmm2, %xmm2
    000015c4: 	movaps	%xmm2, 0x10(%rsp)
    000015c9: 	movd	0x50(%rsp), %xmm2
    000015cf: 	pshufd	$0x0, %xmm2, %xmm2
    000015d4: 	movaps	%xmm2, 0x20(%rsp)
    000015d9: 	movd	0x58(%rsp), %xmm2
    000015df: 	pshufd	$0x0, %xmm2, %xmm2
    000015e4: 	movaps	%xmm2, 0x30(%rsp)
    000015e9: 	nopl	(%rax) # Size: 7
.Ltmp1593:
    000015f0: 	movdqa	(%rsp), %xmm8
    000015f6: 	movdqa	0x30(%rsp), %xmm7
    000015fc: 	pxor	%xmm2, %xmm2
    00001600: 	movq	%r12, %rax
    00001603: 	movdqa	0x20(%rsp), %xmm6
    00001609: 	movdqa	0x10(%rsp), %xmm5
    0000160f: 	movdqa	%xmm2, %xmm3
    00001613: 	movdqa	%xmm2, %xmm4
    00001617: 	psrlq	$0x20, %xmm8
    0000161d: 	psrlq	$0x20, %xmm7
    00001622: 	psrlq	$0x20, %xmm6
    00001627: 	psrlq	$0x20, %xmm5
    0000162c: 	nopl	(%rax) # Size: 4
.Ltmp1591:
    00001630: 	movdqa	(%rax), %xmm1
    00001634: 	movdqa	(%rsp), %xmm12
    0000163a: 	addq	$0x30, %rax
    0000163e: 	movdqa	0x30(%rsp), %xmm11
    00001645: 	movdqa	0x20(%rsp), %xmm10
    0000164c: 	psrlq	$0x20, %xmm1
    00001651: 	movdqa	%xmm12, %xmm0
    00001656: 	pmuludq	-0x30(%rax), %xmm0
    0000165b: 	pshufd	$0x8, %xmm0, %xmm0
    00001660: 	pmuludq	%xmm8, %xmm1
    00001665: 	movdqa	0x10(%rsp), %xmm9
    0000166c: 	pshufd	$0x8, %xmm1, %xmm1
    00001671: 	punpckldq	%xmm1, %xmm0
    00001675: 	movdqa	%xmm11, %xmm1
    0000167a: 	pmuludq	%xmm0, %xmm1
    0000167e: 	psrlq	$0x20, %xmm0
    00001683: 	pmuludq	%xmm7, %xmm0
    00001687: 	pshufd	$0x8, %xmm1, %xmm1
    0000168c: 	pshufd	$0x8, %xmm0, %xmm0
    00001691: 	punpckldq	%xmm0, %xmm1
    00001695: 	movdqa	%xmm10, %xmm0
    0000169a: 	pmuludq	%xmm1, %xmm0
    0000169e: 	psrlq	$0x20, %xmm1
    000016a3: 	pmuludq	%xmm6, %xmm1
    000016a7: 	pshufd	$0x8, %xmm0, %xmm0
    000016ac: 	pshufd	$0x8, %xmm1, %xmm1
    000016b1: 	punpckldq	%xmm1, %xmm0
    000016b5: 	movdqa	%xmm9, %xmm1
    000016ba: 	pmuludq	%xmm0, %xmm1
    000016be: 	psrlq	$0x20, %xmm0
    000016c3: 	pmuludq	%xmm5, %xmm0
    000016c7: 	pshufd	$0x8, %xmm1, %xmm1
    000016cc: 	pshufd	$0x8, %xmm0, %xmm0
    000016d1: 	punpckldq	%xmm0, %xmm1
    000016d5: 	movdqa	%xmm12, %xmm0
    000016da: 	pmuludq	-0x20(%rax), %xmm0
    000016df: 	pshufd	$0x8, %xmm0, %xmm0
    000016e4: 	paddd	%xmm1, %xmm4
    000016e8: 	movdqa	-0x20(%rax), %xmm1
    000016ed: 	psrlq	$0x20, %xmm1
    000016f2: 	pmuludq	%xmm8, %xmm1
    000016f7: 	pshufd	$0x8, %xmm1, %xmm1
    000016fc: 	punpckldq	%xmm1, %xmm0
    00001700: 	movdqa	%xmm11, %xmm1
    00001705: 	pmuludq	%xmm0, %xmm1
    00001709: 	psrlq	$0x20, %xmm0
    0000170e: 	pmuludq	%xmm7, %xmm0
    00001712: 	pshufd	$0x8, %xmm1, %xmm1
    00001717: 	pshufd	$0x8, %xmm0, %xmm0
    0000171c: 	punpckldq	%xmm0, %xmm1
    00001720: 	movdqa	%xmm10, %xmm0
    00001725: 	pmuludq	%xmm1, %xmm0
    00001729: 	psrlq	$0x20, %xmm1
    0000172e: 	pmuludq	%xmm6, %xmm1
    00001732: 	pshufd	$0x8, %xmm0, %xmm0
    00001737: 	pshufd	$0x8, %xmm1, %xmm1
    0000173c: 	punpckldq	%xmm1, %xmm0
    00001740: 	movdqa	%xmm9, %xmm1
    00001745: 	pmuludq	%xmm0, %xmm1
    00001749: 	psrlq	$0x20, %xmm0
    0000174e: 	pmuludq	%xmm5, %xmm0
    00001752: 	pshufd	$0x8, %xmm1, %xmm1
    00001757: 	pshufd	$0x8, %xmm0, %xmm0
    0000175c: 	punpckldq	%xmm0, %xmm1
    00001760: 	movdqa	%xmm12, %xmm0
    00001765: 	pmuludq	-0x10(%rax), %xmm0
    0000176a: 	pshufd	$0x8, %xmm0, %xmm0
    0000176f: 	paddd	%xmm1, %xmm3
    00001773: 	movdqa	-0x10(%rax), %xmm1
    00001778: 	psrlq	$0x20, %xmm1
    0000177d: 	pmuludq	%xmm8, %xmm1
    00001782: 	pshufd	$0x8, %xmm1, %xmm1
    00001787: 	punpckldq	%xmm1, %xmm0
    0000178b: 	movdqa	%xmm11, %xmm1
    00001790: 	pmuludq	%xmm0, %xmm1
    00001794: 	psrlq	$0x20, %xmm0
    00001799: 	pmuludq	%xmm7, %xmm0
    0000179d: 	pshufd	$0x8, %xmm1, %xmm1
    000017a2: 	pshufd	$0x8, %xmm0, %xmm0
    000017a7: 	punpckldq	%xmm0, %xmm1
    000017ab: 	movdqa	%xmm10, %xmm0
    000017b0: 	pmuludq	%xmm1, %xmm0
    000017b4: 	psrlq	$0x20, %xmm1
    000017b9: 	pmuludq	%xmm6, %xmm1
    000017bd: 	pshufd	$0x8, %xmm0, %xmm0
    000017c2: 	pshufd	$0x8, %xmm1, %xmm1
    000017c7: 	punpckldq	%xmm1, %xmm0
    000017cb: 	movdqa	%xmm9, %xmm1
    000017d0: 	pmuludq	%xmm0, %xmm1
    000017d4: 	psrlq	$0x20, %xmm0
    000017d9: 	pmuludq	%xmm5, %xmm0
    000017dd: 	pshufd	$0x8, %xmm1, %xmm1
    000017e2: 	pshufd	$0x8, %xmm0, %xmm0
    000017e7: 	punpckldq	%xmm0, %xmm1
    000017eb: 	paddd	%xmm1, %xmm2
    000017ef: 	cmpq	%rax, %rbp
    000017f2: 	jne	.Ltmp1591 # Offset: 6130
    000017f8: 	cvttsd2si	init_value(%rip), %edi
    00001800: 	pshufd	$0xff, %xmm3, %xmm0
    00001805: 	movd	%xmm4, %edx
    00001809: 	movd	%xmm0, %ecx
    0000180d: 	pshufd	$0x55, %xmm4, %xmm0
    00001812: 	movd	%xmm0, %eax
    00001816: 	movdqa	%xmm3, %xmm0
    0000181a: 	punpckhdq	%xmm3, %xmm0
    0000181e: 	addl	%eax, %ecx
    00001820: 	imull	%ebx, %edi
    00001823: 	movd	%xmm0, %eax
    00001827: 	movdqa	%xmm4, %xmm0
    0000182b: 	imull	0x58(%rsp), %edi
    00001830: 	addl	%edx, %eax
    00001832: 	punpckhdq	%xmm4, %xmm0
    00001836: 	imull	0x50(%rsp), %edi
    0000183b: 	movd	%xmm0, %edx
    0000183f: 	pshufd	$0xff, %xmm4, %xmm4
    00001844: 	imull	0x40(%rsp), %edi
    00001849: 	pshufd	$0x55, %xmm2, %xmm0
    0000184e: 	imull	$0x1f40, %edi, %edi
    00001854: 	subl	%edi, %eax
    00001856: 	subl	%edi, %ecx
    00001858: 	addl	%eax, %ecx
    0000185a: 	movd	%xmm2, %eax
    0000185e: 	addl	%edx, %eax
    00001860: 	movd	%xmm0, %edx
    00001864: 	movdqa	%xmm2, %xmm0
    00001868: 	subl	%edi, %eax
    0000186a: 	punpckhdq	%xmm2, %xmm0
    0000186e: 	pshufd	$0xff, %xmm2, %xmm2
    00001873: 	addl	%eax, %ecx
    00001875: 	movd	%xmm4, %eax
    00001879: 	addl	%edx, %eax
    0000187b: 	movd	%xmm3, %edx
    0000187f: 	pshufd	$0x55, %xmm3, %xmm3
    00001884: 	subl	%edi, %eax
    00001886: 	addl	%eax, %ecx
    00001888: 	movd	%xmm0, %eax
    0000188c: 	addl	%edx, %eax
    0000188e: 	movd	%xmm3, %edx
    00001892: 	subl	%edi, %eax
    00001894: 	addl	%eax, %ecx
    00001896: 	movd	%xmm2, %eax
    0000189a: 	addl	%edx, %eax
    0000189c: 	subl	%edi, %eax
    0000189e: 	addl	%eax, %ecx
    000018a0: 	jne	.Ltmp1592 # Offset: 6304
.Ltmp1635:
    000018a6: 	addl	$0x1, %r13d
    000018aa: 	cmpl	%esi, %r13d
    000018ad: 	jl	.Ltmp1593 # Offset: 6317
.Ltmp1590:
    000018b3: 	movq	0x60(%rsp), %rdi
    000018b8: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6328
    000018bd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018cb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018d2: 	je	.Ltmp1594 # Offset: 6354
.Ltmp1661:
    000018d8: 	movq	-0x20(%rax), %r13
    000018dc: 	callq	clock@PLT # Offset: 6364
    000018e1: 	pxor	%xmm0, %xmm0
    000018e5: 	movq	%rax, end_time(%rip)
    000018ec: 	movq	%r13, %rdi
    000018ef: 	subq	start_time(%rip), %rax
    000018f6: 	cvtsi2sd	%rax, %xmm0
    000018fb: 	divsd	DATAat0x17358(%rip), %xmm0
    00001903: 	callq	_Z13record_resultdPKc # Offset: 6403
    00001908: 	movq	0xb0(%rsp), %rdi
    00001910: 	cmpq	0x68(%rsp), %rdi
    00001915: 	je	.Ltmp1595 # Offset: 6421
    00001917: 	movq	0xc0(%rsp), %rax
    0000191f: 	leaq	0x1(%rax), %rsi
    00001923: 	callq	_ZdlPvm@PLT # Offset: 6435
.Ltmp1595:
    00001928: 	movq	0x70(%rsp), %rsi
    0000192d: 	movq	0x60(%rsp), %rdi
    00001932: 	leaq	DATAat0x17296(%rip), %rdx
    00001939: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6457
    0000193e: 	callq	clock@PLT # Offset: 6462
    00001943: 	movl	iterations(%rip), %r15d
    0000194a: 	xorl	%r13d, %r13d
    0000194d: 	leaq	DATAat0x171d6(%rip), %r14
    00001954: 	movq	%rax, start_time(%rip)
    0000195b: 	testl	%r15d, %r15d
    0000195e: 	jle	.Ltmp1596 # Offset: 6494
    00001964: 	nopl	(%rax) # Size: 4
.Ltmp1599:
    00001968: 	movq	%r12, %rcx
    0000196b: 	xorl	%edi, %edi
    0000196d: 	xorl	%r8d, %r8d
    00001970: 	xorl	%r9d, %r9d
    00001973: 	xorl	%r10d, %r10d
    00001976: 	xorl	%esi, %esi
    00001978: 	xorl	%r11d, %r11d
    0000197b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1597:
    00001980: 	movl	(%rcx), %eax
    00001982: 	addq	$0x18, %rcx
    00001986: 	cltd
    00001987: 	idivl	%ebx
    00001989: 	addl	%eax, %r11d
    0000198c: 	movl	-0x14(%rcx), %eax
    0000198f: 	cltd
    00001990: 	idivl	%ebx
    00001992: 	addl	%eax, %esi
    00001994: 	movl	-0x10(%rcx), %eax
    00001997: 	cltd
    00001998: 	idivl	%ebx
    0000199a: 	addl	%eax, %r10d
    0000199d: 	movl	-0xc(%rcx), %eax
    000019a0: 	cltd
    000019a1: 	idivl	%ebx
    000019a3: 	addl	%eax, %r9d
    000019a6: 	movl	-0x8(%rcx), %eax
    000019a9: 	cltd
    000019aa: 	idivl	%ebx
    000019ac: 	addl	%eax, %r8d
    000019af: 	movl	-0x4(%rcx), %eax
    000019b2: 	cltd
    000019b3: 	idivl	%ebx
    000019b5: 	addl	%eax, %edi
    000019b7: 	cmpq	%rbp, %rcx
    000019ba: 	jne	.Ltmp1597 # Offset: 6586
    000019bc: 	cvttsd2si	init_value(%rip), %eax
    000019c4: 	cltd
    000019c5: 	idivl	%ebx
    000019c7: 	imull	$0x1f40, %eax, %eax
    000019cd: 	subl	%eax, %esi
    000019cf: 	subl	%eax, %r11d
    000019d2: 	subl	%eax, %r10d
    000019d5: 	subl	%eax, %r9d
    000019d8: 	addl	%r11d, %esi
    000019db: 	subl	%eax, %r8d
    000019de: 	subl	%eax, %edi
    000019e0: 	addl	%esi, %r10d
    000019e3: 	addl	%r10d, %r9d
    000019e6: 	addl	%r9d, %r8d
    000019e9: 	addl	%edi, %r8d
    000019ec: 	jne	.Ltmp1598 # Offset: 6636
.Ltmp1634:
    000019f2: 	addl	$0x1, %r13d
    000019f6: 	cmpl	%r15d, %r13d
    000019f9: 	jl	.Ltmp1599 # Offset: 6649
.Ltmp1596:
    000019ff: 	movq	0x60(%rsp), %rdi
    00001a04: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6660
    00001a09: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a10: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001a17: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a1e: 	je	.Ltmp1600 # Offset: 6686
.Ltmp1660:
    00001a24: 	movq	-0x20(%rax), %r13
    00001a28: 	callq	clock@PLT # Offset: 6696
    00001a2d: 	pxor	%xmm0, %xmm0
    00001a31: 	movq	%rax, end_time(%rip)
    00001a38: 	movq	%r13, %rdi
    00001a3b: 	subq	start_time(%rip), %rax
    00001a42: 	cvtsi2sd	%rax, %xmm0
    00001a47: 	divsd	DATAat0x17358(%rip), %xmm0
    00001a4f: 	callq	_Z13record_resultdPKc # Offset: 6735
    00001a54: 	movq	0xb0(%rsp), %rdi
    00001a5c: 	cmpq	0x68(%rsp), %rdi
    00001a61: 	je	.Ltmp1601 # Offset: 6753
    00001a63: 	movq	0xc0(%rsp), %rax
    00001a6b: 	leaq	0x1(%rax), %rsi
    00001a6f: 	callq	_ZdlPvm@PLT # Offset: 6767
.Ltmp1601:
    00001a74: 	movq	0x70(%rsp), %rsi
    00001a79: 	movq	0x60(%rsp), %rdi
    00001a7e: 	leaq	DATAat0x172a7(%rip), %rdx
    00001a85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6789
    00001a8a: 	callq	clock@PLT # Offset: 6794
    00001a8f: 	movl	iterations(%rip), %ecx
    00001a95: 	movq	%rax, start_time(%rip)
    00001a9c: 	testl	%ecx, %ecx
    00001a9e: 	jle	.Ltmp1602 # Offset: 6814
    00001aa4: 	movl	%ebx, %eax
    00001aa6: 	xorl	%r13d, %r13d
    00001aa9: 	leaq	DATAat0x171d6(%rip), %r15
    00001ab0: 	cltd
    00001ab1: 	idivl	0x58(%rsp)
    00001ab5: 	cltd
    00001ab6: 	idivl	0x50(%rsp)
    00001aba: 	cltd
    00001abb: 	idivl	0x40(%rsp)
    00001abf: 	movd	%eax, %xmm2
    00001ac3: 	movl	%eax, %r14d
    00001ac6: 	pshufd	$0x0, %xmm2, %xmm2
    00001acb: 	movaps	%xmm2, (%rsp)
    00001acf: 	nop # Size: 1
.Ltmp1605:
    00001ad0: 	pxor	%xmm0, %xmm0
    00001ad4: 	movq	%r12, %rax
    00001ad7: 	movdqa	%xmm0, %xmm1
    00001adb: 	movdqa	%xmm0, %xmm2
    00001adf: 	nop # Size: 1
.Ltmp1603:
    00001ae0: 	movdqa	(%rsp), %xmm7
    00001ae5: 	movdqa	(%rax), %xmm3
    00001ae9: 	addq	$0x30, %rax
    00001aed: 	paddd	%xmm7, %xmm3
    00001af1: 	paddd	%xmm3, %xmm2
    00001af5: 	movdqa	-0x20(%rax), %xmm3
    00001afa: 	paddd	%xmm7, %xmm3
    00001afe: 	paddd	-0x10(%rax), %xmm7
    00001b03: 	paddd	%xmm3, %xmm1
    00001b07: 	paddd	%xmm7, %xmm0
    00001b0b: 	cmpq	%rbp, %rax
    00001b0e: 	jne	.Ltmp1603 # Offset: 6926
    00001b10: 	cvttsd2si	init_value(%rip), %edi
    00001b18: 	pshufd	$0xff, %xmm1, %xmm3
    00001b1d: 	movd	%xmm2, %edx
    00001b21: 	movd	%xmm3, %esi
    00001b25: 	pshufd	$0x55, %xmm2, %xmm3
    00001b2a: 	movd	%xmm3, %eax
    00001b2e: 	movdqa	%xmm1, %xmm3
    00001b32: 	punpckhdq	%xmm1, %xmm3
    00001b36: 	addl	%eax, %esi
    00001b38: 	addl	%r14d, %edi
    00001b3b: 	movd	%xmm3, %eax
    00001b3f: 	movdqa	%xmm2, %xmm3
    00001b43: 	imull	$0x1f40, %edi, %edi
    00001b49: 	addl	%edx, %eax
    00001b4b: 	punpckhdq	%xmm2, %xmm3
    00001b4f: 	movd	%xmm3, %edx
    00001b53: 	pshufd	$0xff, %xmm2, %xmm2
    00001b58: 	pshufd	$0x55, %xmm0, %xmm3
    00001b5d: 	subl	%edi, %eax
    00001b5f: 	subl	%edi, %esi
    00001b61: 	addl	%eax, %esi
    00001b63: 	movd	%xmm0, %eax
    00001b67: 	addl	%edx, %eax
    00001b69: 	movd	%xmm3, %edx
    00001b6d: 	subl	%edi, %eax
    00001b6f: 	addl	%eax, %esi
    00001b71: 	movd	%xmm2, %eax
    00001b75: 	movdqa	%xmm0, %xmm2
    00001b79: 	addl	%edx, %eax
    00001b7b: 	punpckhdq	%xmm0, %xmm2
    00001b7f: 	movd	%xmm1, %edx
    00001b83: 	subl	%edi, %eax
    00001b85: 	pshufd	$0xff, %xmm0, %xmm0
    00001b8a: 	pshufd	$0x55, %xmm1, %xmm1
    00001b8f: 	addl	%eax, %esi
    00001b91: 	movd	%xmm2, %eax
    00001b95: 	addl	%edx, %eax
    00001b97: 	movd	%xmm1, %edx
    00001b9b: 	subl	%edi, %eax
    00001b9d: 	addl	%eax, %esi
    00001b9f: 	movd	%xmm0, %eax
    00001ba3: 	addl	%edx, %eax
    00001ba5: 	subl	%edi, %eax
    00001ba7: 	addl	%eax, %esi
    00001ba9: 	jne	.Ltmp1604 # Offset: 7081
.Ltmp1633:
    00001baf: 	addl	$0x1, %r13d
    00001bb3: 	cmpl	%ecx, %r13d
    00001bb6: 	jl	.Ltmp1605 # Offset: 7094
.Ltmp1602:
    00001bbc: 	movq	0x60(%rsp), %rdi
    00001bc1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 7105
    00001bc6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bcd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001bd4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bdb: 	je	.Ltmp1606 # Offset: 7131
.Ltmp1662:
    00001be1: 	movq	-0x20(%rax), %r13
    00001be5: 	callq	clock@PLT # Offset: 7141
    00001bea: 	pxor	%xmm0, %xmm0
    00001bee: 	movq	%rax, end_time(%rip)
    00001bf5: 	movq	%r13, %rdi
    00001bf8: 	subq	start_time(%rip), %rax
    00001bff: 	cvtsi2sd	%rax, %xmm0
    00001c04: 	divsd	DATAat0x17358(%rip), %xmm0
    00001c0c: 	callq	_Z13record_resultdPKc # Offset: 7180
    00001c11: 	movq	0xb0(%rsp), %rdi
    00001c19: 	cmpq	0x68(%rsp), %rdi
    00001c1e: 	je	.Ltmp1607 # Offset: 7198
    00001c20: 	movq	0xc0(%rsp), %rax
    00001c28: 	leaq	0x1(%rax), %rsi
    00001c2c: 	callq	_ZdlPvm@PLT # Offset: 7212
.Ltmp1607:
    00001c31: 	movq	0x70(%rsp), %rsi
    00001c36: 	movq	0x60(%rsp), %rdi
    00001c3b: 	leaq	DATAat0x172c3(%rip), %rdx
    00001c42: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7234
    00001c47: 	callq	clock@PLT # Offset: 7239
    00001c4c: 	movl	iterations(%rip), %ecx
    00001c52: 	movq	%rax, start_time(%rip)
    00001c59: 	testl	%ecx, %ecx
    00001c5b: 	jle	.Ltmp1608 # Offset: 7259
    00001c61: 	movl	0x50(%rsp), %eax
    00001c65: 	imull	0x58(%rsp), %eax
    00001c6a: 	movl	%ebx, %r14d
    00001c6d: 	xorl	%r13d, %r13d
    00001c70: 	leaq	DATAat0x171d6(%rip), %r15
    00001c77: 	cltd
    00001c78: 	idivl	0x40(%rsp)
    00001c7c: 	subl	%eax, %r14d
    00001c7f: 	movd	%r14d, %xmm2
    00001c84: 	pshufd	$0x0, %xmm2, %xmm2
    00001c89: 	movaps	%xmm2, (%rsp)
    00001c8d: 	nopl	(%rax) # Size: 3
.Ltmp1611:
    00001c90: 	pxor	%xmm0, %xmm0
    00001c94: 	movq	%r12, %rax
    00001c97: 	movdqa	%xmm0, %xmm1
    00001c9b: 	movdqa	%xmm0, %xmm2
    00001c9f: 	nop # Size: 1
.Ltmp1609:
    00001ca0: 	movdqa	(%rsp), %xmm6
    00001ca5: 	movdqa	(%rax), %xmm3
    00001ca9: 	addq	$0x30, %rax
    00001cad: 	paddd	%xmm6, %xmm3
    00001cb1: 	paddd	%xmm3, %xmm2
    00001cb5: 	movdqa	-0x20(%rax), %xmm3
    00001cba: 	paddd	%xmm6, %xmm3
    00001cbe: 	paddd	-0x10(%rax), %xmm6
    00001cc3: 	paddd	%xmm3, %xmm1
    00001cc7: 	paddd	%xmm6, %xmm0
    00001ccb: 	cmpq	%rbp, %rax
    00001cce: 	jne	.Ltmp1609 # Offset: 7374
    00001cd0: 	cvttsd2si	init_value(%rip), %edi
    00001cd8: 	pshufd	$0xff, %xmm1, %xmm3
    00001cdd: 	movd	%xmm2, %edx
    00001ce1: 	movd	%xmm3, %esi
    00001ce5: 	pshufd	$0x55, %xmm2, %xmm3
    00001cea: 	movd	%xmm3, %eax
    00001cee: 	movdqa	%xmm1, %xmm3
    00001cf2: 	punpckhdq	%xmm1, %xmm3
    00001cf6: 	addl	%eax, %esi
    00001cf8: 	addl	%r14d, %edi
    00001cfb: 	movd	%xmm3, %eax
    00001cff: 	movdqa	%xmm2, %xmm3
    00001d03: 	imull	$0x1f40, %edi, %edi
    00001d09: 	addl	%edx, %eax
    00001d0b: 	punpckhdq	%xmm2, %xmm3
    00001d0f: 	movd	%xmm3, %edx
    00001d13: 	pshufd	$0xff, %xmm2, %xmm2
    00001d18: 	pshufd	$0x55, %xmm0, %xmm3
    00001d1d: 	subl	%edi, %eax
    00001d1f: 	subl	%edi, %esi
    00001d21: 	addl	%eax, %esi
    00001d23: 	movd	%xmm0, %eax
    00001d27: 	addl	%edx, %eax
    00001d29: 	movd	%xmm3, %edx
    00001d2d: 	subl	%edi, %eax
    00001d2f: 	addl	%eax, %esi
    00001d31: 	movd	%xmm2, %eax
    00001d35: 	movdqa	%xmm0, %xmm2
    00001d39: 	addl	%edx, %eax
    00001d3b: 	punpckhdq	%xmm0, %xmm2
    00001d3f: 	movd	%xmm1, %edx
    00001d43: 	subl	%edi, %eax
    00001d45: 	pshufd	$0xff, %xmm0, %xmm0
    00001d4a: 	pshufd	$0x55, %xmm1, %xmm1
    00001d4f: 	addl	%eax, %esi
    00001d51: 	movd	%xmm2, %eax
    00001d55: 	addl	%edx, %eax
    00001d57: 	movd	%xmm1, %edx
    00001d5b: 	subl	%edi, %eax
    00001d5d: 	addl	%eax, %esi
    00001d5f: 	movd	%xmm0, %eax
    00001d63: 	addl	%edx, %eax
    00001d65: 	subl	%edi, %eax
    00001d67: 	addl	%eax, %esi
    00001d69: 	jne	.Ltmp1610 # Offset: 7529
.Ltmp1637:
    00001d6f: 	addl	$0x1, %r13d
    00001d73: 	cmpl	%r13d, %ecx
    00001d76: 	jg	.Ltmp1611 # Offset: 7542
.Ltmp1608:
    00001d7c: 	movq	0x60(%rsp), %rdi
    00001d81: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 7553
    00001d86: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d8d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001d94: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d9b: 	je	.Ltmp1612 # Offset: 7579
.Ltmp1657:
    00001da1: 	movq	-0x20(%rax), %r13
    00001da5: 	callq	clock@PLT # Offset: 7589
    00001daa: 	pxor	%xmm0, %xmm0
    00001dae: 	movq	%rax, end_time(%rip)
    00001db5: 	movq	%r13, %rdi
    00001db8: 	subq	start_time(%rip), %rax
    00001dbf: 	cvtsi2sd	%rax, %xmm0
    00001dc4: 	divsd	DATAat0x17358(%rip), %xmm0
    00001dcc: 	callq	_Z13record_resultdPKc # Offset: 7628
    00001dd1: 	movq	0xb0(%rsp), %rdi
    00001dd9: 	cmpq	0x68(%rsp), %rdi
    00001dde: 	je	.Ltmp1613 # Offset: 7646
    00001de0: 	movq	0xc0(%rsp), %rax
    00001de8: 	leaq	0x1(%rax), %rsi
    00001dec: 	callq	_ZdlPvm@PLT # Offset: 7660
.Ltmp1613:
    00001df1: 	movq	0x70(%rsp), %rsi
    00001df6: 	movq	0x60(%rsp), %rdi
    00001dfb: 	leaq	DATAat0x172dc(%rip), %rdx
    00001e02: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7682
    00001e07: 	callq	clock@PLT # Offset: 7687
    00001e0c: 	movl	iterations(%rip), %ecx
    00001e12: 	movq	%rax, start_time(%rip)
    00001e19: 	testl	%ecx, %ecx
    00001e1b: 	jle	.Ltmp1614 # Offset: 7707
    00001e21: 	movl	0x50(%rsp), %eax
    00001e25: 	imull	0x58(%rsp), %eax
    00001e2a: 	movd	%ebx, %xmm2
    00001e2e: 	xorl	%r14d, %r14d
    00001e31: 	pshufd	$0x0, %xmm2, %xmm2
    00001e36: 	leaq	DATAat0x171d6(%rip), %r15
    00001e3d: 	movaps	%xmm2, (%rsp)
    00001e41: 	cltd
    00001e42: 	idivl	0x40(%rsp)
    00001e46: 	movd	%eax, %xmm2
    00001e4a: 	movl	%eax, %r13d
    00001e4d: 	pshufd	$0x0, %xmm2, %xmm2
    00001e52: 	movaps	%xmm2, 0x10(%rsp)
    00001e57: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1617:
    00001e60: 	pxor	%xmm0, %xmm0
    00001e64: 	movq	%r12, %rax
    00001e67: 	movdqa	%xmm0, %xmm2
    00001e6b: 	movdqa	%xmm0, %xmm3
    00001e6f: 	nop # Size: 1
.Ltmp1615:
    00001e70: 	movdqa	(%rsp), %xmm4
    00001e75: 	movdqa	(%rax), %xmm1
    00001e79: 	addq	$0x30, %rax
    00001e7d: 	movdqa	0x10(%rsp), %xmm7
    00001e83: 	paddd	%xmm4, %xmm1
    00001e87: 	psubd	%xmm7, %xmm1
    00001e8b: 	paddd	%xmm1, %xmm3
    00001e8f: 	movdqa	-0x20(%rax), %xmm1
    00001e94: 	paddd	%xmm4, %xmm1
    00001e98: 	paddd	-0x10(%rax), %xmm4
    00001e9d: 	psubd	%xmm7, %xmm1
    00001ea1: 	paddd	%xmm1, %xmm2
    00001ea5: 	movdqa	%xmm4, %xmm1
    00001ea9: 	psubd	%xmm7, %xmm1
    00001ead: 	paddd	%xmm1, %xmm0
    00001eb1: 	cmpq	%rbp, %rax
    00001eb4: 	jne	.Ltmp1615 # Offset: 7860
    00001eb6: 	cvttsd2si	init_value(%rip), %edi
    00001ebe: 	pshufd	$0xff, %xmm2, %xmm1
    00001ec3: 	movd	%xmm3, %edx
    00001ec7: 	movd	%xmm1, %esi
    00001ecb: 	pshufd	$0x55, %xmm3, %xmm1
    00001ed0: 	movd	%xmm1, %eax
    00001ed4: 	movdqa	%xmm2, %xmm1
    00001ed8: 	punpckhdq	%xmm2, %xmm1
    00001edc: 	addl	%eax, %esi
    00001ede: 	addl	%ebx, %edi
    00001ee0: 	movd	%xmm1, %eax
    00001ee4: 	movdqa	%xmm3, %xmm1
    00001ee8: 	subl	%r13d, %edi
    00001eeb: 	addl	%edx, %eax
    00001eed: 	punpckhdq	%xmm3, %xmm1
    00001ef1: 	imull	$0x1f40, %edi, %edi
    00001ef7: 	movd	%xmm1, %edx
    00001efb: 	pshufd	$0xff, %xmm3, %xmm3
    00001f00: 	pshufd	$0x55, %xmm0, %xmm1
    00001f05: 	subl	%edi, %eax
    00001f07: 	subl	%edi, %esi
    00001f09: 	addl	%eax, %esi
    00001f0b: 	movd	%xmm0, %eax
    00001f0f: 	addl	%edx, %eax
    00001f11: 	movd	%xmm1, %edx
    00001f15: 	movdqa	%xmm0, %xmm1
    00001f19: 	subl	%edi, %eax
    00001f1b: 	punpckhdq	%xmm0, %xmm1
    00001f1f: 	pshufd	$0xff, %xmm0, %xmm0
    00001f24: 	addl	%eax, %esi
    00001f26: 	movd	%xmm3, %eax
    00001f2a: 	addl	%edx, %eax
    00001f2c: 	movd	%xmm2, %edx
    00001f30: 	pshufd	$0x55, %xmm2, %xmm2
    00001f35: 	subl	%edi, %eax
    00001f37: 	addl	%eax, %esi
    00001f39: 	movd	%xmm1, %eax
    00001f3d: 	addl	%edx, %eax
    00001f3f: 	movd	%xmm2, %edx
    00001f43: 	subl	%edi, %eax
    00001f45: 	addl	%eax, %esi
    00001f47: 	movd	%xmm0, %eax
    00001f4b: 	addl	%edx, %eax
    00001f4d: 	subl	%edi, %eax
    00001f4f: 	addl	%eax, %esi
    00001f51: 	jne	.Ltmp1616 # Offset: 8017
.Ltmp1636:
    00001f57: 	addl	$0x1, %r14d
    00001f5b: 	cmpl	%r14d, %ecx
    00001f5e: 	jg	.Ltmp1617 # Offset: 8030
.Ltmp1614:
    00001f64: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001f6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001f72: 	subq	$0x20, %rax
    00001f76: 	cmpq	%rax, %rbx
    00001f79: 	je	.Ltmp1618 # Offset: 8057
    00001f7f: 	leaq	0x10(%rbx), %rdi
    00001f83: 	movq	0xb8(%rsp), %r12
    00001f8b: 	movq	%rdi, (%rbx)
    00001f8e: 	movq	0xb0(%rsp), %rbp
    00001f96: 	movq	%rbp, %rax
    00001f99: 	addq	%r12, %rax
    00001f9c: 	je	.Ltmp1619 # Offset: 8092
    00001f9e: 	testq	%rbp, %rbp
    00001fa1: 	je	.Ltmp1620 # Offset: 8097
.Ltmp1619:
    00001fa7: 	movq	%r12, 0x88(%rsp)
    00001faf: 	cmpq	$0xf, %r12
    00001fb3: 	ja	.Ltmp1621 # Offset: 8115
    00001fb9: 	cmpq	$0x1, %r12
    00001fbd: 	jne	.Ltmp1622 # Offset: 8125
    00001fc3: 	movzbl	(%rbp), %eax
    00001fc7: 	movb	%al, 0x10(%rbx)
.Ltmp1666:
    00001fca: 	movq	%r12, 0x8(%rbx)
    00001fce: 	movb	$0x0, (%rdi,%r12)
    00001fd3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fda: 	addq	$0x20, %rax
    00001fde: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1656:
    00001fe5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fec: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ff3: 	je	.Ltmp1623 # Offset: 8179
.Ltmp1653:
    00001ff9: 	movq	-0x20(%rax), %rbp
    00001ffd: 	callq	clock@PLT # Offset: 8189
    00002002: 	pxor	%xmm0, %xmm0
    00002006: 	movq	%rax, end_time(%rip)
    0000200d: 	movq	%rbp, %rdi
    00002010: 	subq	start_time(%rip), %rax
    00002017: 	cvtsi2sd	%rax, %xmm0
    0000201c: 	divsd	DATAat0x17358(%rip), %xmm0
    00002024: 	callq	_Z13record_resultdPKc # Offset: 8228
    00002029: 	movq	0xb0(%rsp), %rdi
    00002031: 	cmpq	0x68(%rsp), %rdi
    00002036: 	je	.Ltmp1624 # Offset: 8246
    00002038: 	movq	0xc0(%rsp), %rax
    00002040: 	leaq	0x1(%rax), %rsi
    00002044: 	callq	_ZdlPvm@PLT # Offset: 8260
.Ltmp1624:
    00002049: 	movq	0x70(%rsp), %rsi
    0000204e: 	movq	0x60(%rsp), %rdi
    00002053: 	leaq	DATAat0x172f6(%rip), %rdx
    0000205a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 8282
    0000205f: 	movl	iterations(%rip), %edx
    00002065: 	xorl	%r8d, %r8d
    00002068: 	xorl	%ecx, %ecx
    0000206a: 	movl	$0x1f40, %esi
    0000206f: 	movq	0xb0(%rsp), %rdi
    00002077: 	callq	_Z9summarizePKciiii # Offset: 8311
    0000207c: 	movq	0xb0(%rsp), %rdi
    00002084: 	cmpq	0x68(%rsp), %rdi
    00002089: 	je	.Ltmp1625 # Offset: 8329
    0000208b: 	movq	0xc0(%rsp), %rax
    00002093: 	leaq	0x1(%rax), %rsi
    00002097: 	callq	_ZdlPvm@PLT # Offset: 8343
.Ltmp1625:
    0000209c: 	movq	0x90(%rsp), %rdi
    000020a4: 	cmpq	0x78(%rsp), %rdi
    000020a9: 	je	.Ltmp1626 # Offset: 8361
    000020ab: 	movq	0xa0(%rsp), %rax
    000020b3: 	leaq	0x1(%rax), %rsi
    000020b7: 	callq	_ZdlPvm@PLT # Offset: 8375
.Ltmp1626:
    000020bc: 	movq	0x2eed8(%rsp), %rax
    000020c4: 	subq	%fs:0x28, %rax
    000020cd: 	jne	.Ltmp1627 # Offset: 8397
    000020d3: 	addq	$0x2eee8, %rsp
    000020da: 	popq	%rbx
    000020db: 	popq	%rbp
    000020dc: 	popq	%r12
    000020de: 	popq	%r13
    000020e0: 	popq	%r14
    000020e2: 	popq	%r15
    000020e4: 	retq # Offset: 8420
    000020e5: 	nopl	(%rax) # Size: 3
.Ltmp1628:
    000020e8: 	addq	$0x20, %rbp
.Ltmp1505:
    000020ec: 	cmpq	%rbp, (%rsp)
    000020f0: 	je	.Ltmp1510 # Offset: 8432
.Ltmp1629:
    000020f6: 	movq	(%rbp), %rdi
    000020fa: 	leaq	0x10(%rbp), %rax
    000020fe: 	cmpq	%rax, %rdi
    00002101: 	je	.Ltmp1628 # Offset: 8449
    00002103: 	movq	0x10(%rbp), %rax
    00002107: 	addq	$0x20, %rbp
    0000210b: 	leaq	0x1(%rax), %rsi
    0000210f: 	callq	_ZdlPvm@PLT # Offset: 8463
    00002114: 	cmpq	%rbp, (%rsp)
    00002118: 	jne	.Ltmp1629 # Offset: 8472
    0000211a: 	jmp	.Ltmp1510 # Offset: 8474
    0000211f: 	nop # Size: 1
.Ltmp1502:
    00002120: 	addq	$0x20, %rbp
    00002124: 	cmpq	%rbx, %rbp
    00002127: 	jne	.Ltmp1503 # Offset: 8487
    0000212d: 	addq	$0x8, %r13
    00002131: 	cmpq	%r13, %r15
    00002134: 	ja	.Ltmp1504 # Offset: 8500
    0000213a: 	jmp	.Ltmp1630 # Offset: 8506
    0000213f: 	nop # Size: 1
.Ltmp1518:
    00002140: 	movl	current_test(%rip), %edx
    00002146: 	movq	%r14, %rsi
    00002149: 	movl	$0x1, %edi
    0000214e: 	xorl	%eax, %eax
    00002150: 	callq	__printf_chk@PLT # Offset: 8528
    00002155: 	movl	iterations(%rip), %esi
    0000215b: 	jmp	.Ltmp1631 # Offset: 8539
.Ltmp1523:
    00002160: 	leaq	0x88(%rsp), %rsi
    00002168: 	xorl	%edx, %edx
    0000216a: 	movq	%r14, %rdi
    0000216d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8557
    00002172: 	movq	%rax, (%r14)
    00002175: 	movq	%rax, %rdi
    00002178: 	movq	0x88(%rsp), %rax
    00002180: 	movq	%rax, 0x10(%r14)
.Ltmp1663:
    00002184: 	movq	%r13, %rdx
    00002187: 	movq	%r15, %rsi
    0000218a: 	callq	memcpy@PLT # Offset: 8586
    0000218f: 	movq	0x88(%rsp), %r13
    00002197: 	movq	(%r14), %rdi
    0000219a: 	jmp	.Ltmp1632 # Offset: 8602
    0000219f: 	nop # Size: 1
.Ltmp1604:
    000021a0: 	movl	current_test(%rip), %edx
    000021a6: 	movq	%r15, %rsi
    000021a9: 	movl	$0x1, %edi
    000021ae: 	xorl	%eax, %eax
    000021b0: 	callq	__printf_chk@PLT # Offset: 8624
    000021b5: 	movl	iterations(%rip), %ecx
    000021bb: 	jmp	.Ltmp1633 # Offset: 8635
.Ltmp1598:
    000021c0: 	movl	current_test(%rip), %edx
    000021c6: 	movq	%r14, %rsi
    000021c9: 	movl	$0x1, %edi
    000021ce: 	xorl	%eax, %eax
    000021d0: 	callq	__printf_chk@PLT # Offset: 8656
    000021d5: 	movl	iterations(%rip), %r15d
    000021dc: 	jmp	.Ltmp1634 # Offset: 8668
    000021e1: 	nopl	(%rax) # Size: 7
.Ltmp1592:
    000021e8: 	movl	current_test(%rip), %edx
    000021ee: 	movq	%r14, %rsi
    000021f1: 	movl	$0x1, %edi
    000021f6: 	xorl	%eax, %eax
    000021f8: 	callq	__printf_chk@PLT # Offset: 8696
    000021fd: 	movl	iterations(%rip), %esi
    00002203: 	jmp	.Ltmp1635 # Offset: 8707
    00002208: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1616:
    00002210: 	movl	current_test(%rip), %edx
    00002216: 	movq	%r15, %rsi
    00002219: 	movl	$0x1, %edi
    0000221e: 	xorl	%eax, %eax
    00002220: 	callq	__printf_chk@PLT # Offset: 8736
    00002225: 	movl	iterations(%rip), %ecx
    0000222b: 	jmp	.Ltmp1636 # Offset: 8747
.Ltmp1610:
    00002230: 	movl	current_test(%rip), %edx
    00002236: 	movq	%r15, %rsi
    00002239: 	movl	$0x1, %edi
    0000223e: 	xorl	%eax, %eax
    00002240: 	callq	__printf_chk@PLT # Offset: 8768
    00002245: 	movl	iterations(%rip), %ecx
    0000224b: 	jmp	.Ltmp1637 # Offset: 8779
.Ltmp1535:
    00002250: 	movl	current_test(%rip), %edx
    00002256: 	movq	%r14, %rsi
    00002259: 	movl	$0x1, %edi
    0000225e: 	xorl	%eax, %eax
    00002260: 	callq	__printf_chk@PLT # Offset: 8800
    00002265: 	movl	iterations(%rip), %esi
    0000226b: 	jmp	.Ltmp1638 # Offset: 8811
.Ltmp1529:
    00002270: 	movl	current_test(%rip), %edx
    00002276: 	movq	%r15, %rsi
    00002279: 	movl	$0x1, %edi
    0000227e: 	xorl	%eax, %eax
    00002280: 	callq	__printf_chk@PLT # Offset: 8832
    00002285: 	movl	iterations(%rip), %esi
    0000228b: 	jmp	.Ltmp1639 # Offset: 8843
.Ltmp1581:
    00002290: 	movl	current_test(%rip), %edx
    00002296: 	movq	%r15, %rsi
    00002299: 	movl	$0x1, %edi
    0000229e: 	xorl	%eax, %eax
    000022a0: 	callq	__printf_chk@PLT # Offset: 8864
    000022a5: 	movl	iterations(%rip), %esi
    000022ab: 	jmp	.Ltmp1640 # Offset: 8875
.Ltmp1570:
    000022b0: 	movl	current_test(%rip), %edx
    000022b6: 	movq	%r15, %rsi
    000022b9: 	movl	$0x1, %edi
    000022be: 	xorl	%eax, %eax
    000022c0: 	callq	__printf_chk@PLT # Offset: 8896
    000022c5: 	movl	iterations(%rip), %esi
    000022cb: 	jmp	.Ltmp1641 # Offset: 8907
.Ltmp1564:
    000022d0: 	movl	current_test(%rip), %edx
    000022d6: 	movq	%r14, %rsi
    000022d9: 	movl	$0x1, %edi
    000022de: 	xorl	%eax, %eax
    000022e0: 	callq	__printf_chk@PLT # Offset: 8928
    000022e5: 	movl	iterations(%rip), %esi
    000022eb: 	jmp	.Ltmp1642 # Offset: 8939
.Ltmp1558:
    000022f0: 	movl	current_test(%rip), %edx
    000022f6: 	movq	%r14, %rsi
    000022f9: 	movl	$0x1, %edi
    000022fe: 	xorl	%eax, %eax
    00002300: 	callq	__printf_chk@PLT # Offset: 8960
    00002305: 	jmp	.Ltmp1643 # Offset: 8965
    0000230a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1552:
    00002310: 	movl	current_test(%rip), %edx
    00002316: 	movq	%r15, %rsi
    00002319: 	movl	$0x1, %edi
    0000231e: 	xorl	%eax, %eax
    00002320: 	callq	__printf_chk@PLT # Offset: 8992
    00002325: 	jmp	.Ltmp1644 # Offset: 8997
    0000232a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1546:
    00002330: 	movl	current_test(%rip), %edx
    00002336: 	movq	%r14, %rsi
    00002339: 	movl	$0x1, %edi
    0000233e: 	xorl	%eax, %eax
    00002340: 	callq	__printf_chk@PLT # Offset: 9024
    00002345: 	jmp	.Ltmp1645 # Offset: 9029
.Ltmp1554:
    0000234a: 	movq	-0x8(%rdx), %rax
    0000234e: 	addq	$0x200, %rax
    00002354: 	jmp	.Ltmp1646 # Offset: 9044
.Ltmp1548:
    00002359: 	movq	-0x8(%rdx), %rax
    0000235d: 	addq	$0x200, %rax
    00002363: 	jmp	.Ltmp1647 # Offset: 9059
.Ltmp1566:
    00002368: 	movq	-0x8(%rdx), %rax
    0000236c: 	addq	$0x200, %rax
    00002372: 	jmp	.Ltmp1648 # Offset: 9074
.Ltmp1560:
    00002377: 	movq	-0x8(%rdx), %rax
    0000237b: 	addq	$0x200, %rax
    00002381: 	jmp	.Ltmp1649 # Offset: 9089
.Ltmp1583:
    00002386: 	movq	0x60(%rsp), %rsi
    0000238b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002392: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9106
    00002397: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000239e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000023a5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000023ac: 	jne	.Ltmp1650 # Offset: 9132
.Ltmp1588:
    000023b2: 	movq	-0x8(%rdx), %rax
    000023b6: 	addq	$0x200, %rax
    000023bc: 	jmp	.Ltmp1650 # Offset: 9148
.Ltmp1577:
    000023c1: 	movq	-0x8(%rdx), %rax
    000023c5: 	addq	$0x200, %rax
    000023cb: 	jmp	.Ltmp1651 # Offset: 9163
.Ltmp1572:
    000023d0: 	movq	0x60(%rsp), %rsi
    000023d5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023dc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9180
    000023e1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023e8: 	jmp	.Ltmp1652 # Offset: 9192
.Ltmp1623:
    000023ed: 	movq	-0x8(%rdx), %rax
    000023f1: 	addq	$0x200, %rax
    000023f7: 	jmp	.Ltmp1653 # Offset: 9207
.Ltmp1520:
    000023fc: 	movq	0x60(%rsp), %rsi
    00002401: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002408: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9224
    0000240d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002414: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000241b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002422: 	jne	.Ltmp1654 # Offset: 9250
.Ltmp1525:
    00002428: 	movq	-0x8(%rdx), %rax
    0000242c: 	addq	$0x200, %rax
    00002432: 	jmp	.Ltmp1654 # Offset: 9266
.Ltmp1531:
    00002437: 	movq	-0x8(%rdx), %rax
    0000243b: 	addq	$0x200, %rax
    00002441: 	jmp	.Ltmp1655 # Offset: 9281
.Ltmp1618:
    00002446: 	movq	0x60(%rsp), %rsi
    0000244b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002452: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9298
    00002457: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000245e: 	jmp	.Ltmp1656 # Offset: 9310
.Ltmp1612:
    00002463: 	movq	-0x8(%rdx), %rax
    00002467: 	addq	$0x200, %rax
    0000246d: 	jmp	.Ltmp1657 # Offset: 9325
.Ltmp1542:
    00002472: 	movq	-0x8(%rdx), %rax
    00002476: 	addq	$0x200, %rax
    0000247c: 	jmp	.Ltmp1658 # Offset: 9340
.Ltmp1537:
    00002481: 	movq	0x60(%rsp), %rsi
    00002486: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000248d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9357
    00002492: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002499: 	jmp	.Ltmp1659 # Offset: 9369
.Ltmp1600:
    0000249e: 	movq	-0x8(%rdx), %rax
    000024a2: 	addq	$0x200, %rax
    000024a8: 	jmp	.Ltmp1660 # Offset: 9384
.Ltmp1594:
    000024ad: 	movq	-0x8(%rdx), %rax
    000024b1: 	addq	$0x200, %rax
    000024b7: 	jmp	.Ltmp1661 # Offset: 9399
.Ltmp1606:
    000024bc: 	movq	-0x8(%rdx), %rax
    000024c0: 	addq	$0x200, %rax
    000024c6: 	jmp	.Ltmp1662 # Offset: 9414
.Ltmp1524:
    000024cb: 	testq	%r13, %r13
    000024ce: 	je	.Ltmp1632 # Offset: 9422
    000024d4: 	jmp	.Ltmp1663 # Offset: 9428
    000024d9: 	nopl	(%rax) # Size: 7
.Ltmp1576:
    000024e0: 	testq	%r13, %r13
    000024e3: 	je	.Ltmp1664 # Offset: 9443
    000024e9: 	jmp	.Ltmp1665 # Offset: 9449
    000024eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1622:
    000024f0: 	testq	%r12, %r12
    000024f3: 	je	.Ltmp1666 # Offset: 9459
    000024f9: 	jmp	.Ltmp1667 # Offset: 9465
    000024fe: 	nop # Size: 2
.Ltmp1587:
    00002500: 	testq	%r13, %r13
    00002503: 	je	.Ltmp1668 # Offset: 9475
    00002509: 	jmp	.Ltmp1669 # Offset: 9481
    0000250e: 	nop # Size: 2
.Ltmp1541:
    00002510: 	testq	%r13, %r13
    00002513: 	je	.Ltmp1670 # Offset: 9491
.Ltmp1671:
    00002519: 	movq	%r13, %rdx
    0000251c: 	movq	%r15, %rsi
    0000251f: 	callq	memcpy@PLT # Offset: 9503
    00002524: 	movq	0x88(%rsp), %r13
    0000252c: 	movq	(%r14), %rdi
    0000252f: 	jmp	.Ltmp1670 # Offset: 9519
.Ltmp1575:
    00002534: 	leaq	0x88(%rsp), %rsi
    0000253c: 	xorl	%edx, %edx
    0000253e: 	movq	%r14, %rdi
    00002541: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9537
    00002546: 	movq	%rax, (%r14)
    00002549: 	movq	%rax, %rdi
    0000254c: 	movq	0x88(%rsp), %rax
    00002554: 	movq	%rax, 0x10(%r14)
.Ltmp1665:
    00002558: 	movq	%r13, %rdx
    0000255b: 	movq	%r15, %rsi
    0000255e: 	callq	memcpy@PLT # Offset: 9566
    00002563: 	movq	0x88(%rsp), %r13
    0000256b: 	movq	(%r14), %rdi
    0000256e: 	jmp	.Ltmp1664 # Offset: 9582
.Ltmp1621:
    00002573: 	leaq	0x88(%rsp), %rsi
    0000257b: 	xorl	%edx, %edx
    0000257d: 	movq	%rbx, %rdi
    00002580: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9600
    00002585: 	movq	%rax, (%rbx)
    00002588: 	movq	%rax, %rdi
    0000258b: 	movq	0x88(%rsp), %rax
    00002593: 	movq	%rax, 0x10(%rbx)
.Ltmp1667:
    00002597: 	movq	%r12, %rdx
    0000259a: 	movq	%rbp, %rsi
    0000259d: 	callq	memcpy@PLT # Offset: 9629
    000025a2: 	movq	0x88(%rsp), %r12
    000025aa: 	movq	(%rbx), %rdi
    000025ad: 	jmp	.Ltmp1666 # Offset: 9645
.Ltmp1540:
    000025b2: 	leaq	0x88(%rsp), %rsi
    000025ba: 	xorl	%edx, %edx
    000025bc: 	movq	%r14, %rdi
    000025bf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9663
    000025c4: 	movq	%rax, (%r14)
    000025c7: 	movq	%rax, %rdi
    000025ca: 	movq	0x88(%rsp), %rax
    000025d2: 	movq	%rax, 0x10(%r14)
    000025d6: 	jmp	.Ltmp1671 # Offset: 9686
.Ltmp1586:
    000025db: 	leaq	0x88(%rsp), %rsi
    000025e3: 	xorl	%edx, %edx
    000025e5: 	movq	%r14, %rdi
    000025e8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9704
    000025ed: 	movq	%rax, (%r14)
    000025f0: 	movq	%rax, %rdi
    000025f3: 	movq	0x88(%rsp), %rax
    000025fb: 	movq	%rax, 0x10(%r14)
.Ltmp1669:
    000025ff: 	movq	%r13, %rdx
    00002602: 	movq	%r15, %rsi
    00002605: 	callq	memcpy@PLT # Offset: 9733
    0000260a: 	movq	0x88(%rsp), %r13
    00002612: 	movq	(%r14), %rdi
    00002615: 	jmp	.Ltmp1668 # Offset: 9749
.Ltmp1539:
    0000261a: 	leaq	DATAat0x17158(%rip), %rdi
    00002621: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9761
.Ltmp1574:
    00002626: 	leaq	DATAat0x17158(%rip), %rdi
    0000262d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9773
.Ltmp1585:
    00002632: 	leaq	DATAat0x17158(%rip), %rdi
    00002639: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9785
.Ltmp1620:
    0000263e: 	leaq	DATAat0x17158(%rip), %rdi
    00002645: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9797
.Ltmp1627:
    0000264a: 	callq	__stack_chk_fail@PLT # Offset: 9802
.Ltmp1522:
    0000264f: 	leaq	DATAat0x17158(%rip), %rdi
    00002656: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9814
    0000265b: 	endbr64
.Ltmp1673:
    0000265f: 	movq	%rax, %rbp
    00002662: 	jmp	.Ltmp1672 # Offset: 9826
    00002664: 	endbr64
    00002668: 	jmp	.Ltmp1673 # Offset: 9832
    0000266a: 	endbr64
    0000266e: 	jmp	.Ltmp1673 # Offset: 9838
    00002670: 	endbr64
    00002674: 	jmp	.Ltmp1673 # Offset: 9844
.Ltmp1672:
    00002676: 	movq	0xb0(%rsp), %rdi
    0000267e: 	cmpq	0x68(%rsp), %rdi
    00002683: 	je	.Ltmp1674 # Offset: 9859
.Ltmp1677:
    00002685: 	movq	0xc0(%rsp), %rax
    0000268d: 	leaq	0x1(%rax), %rsi
    00002691: 	callq	_ZdlPvm@PLT # Offset: 9873
.Ltmp1674:
    00002696: 	movq	0x90(%rsp), %rdi
    0000269e: 	cmpq	0x78(%rsp), %rdi
    000026a3: 	je	.Ltmp1675 # Offset: 9891
    000026a5: 	movq	0xa0(%rsp), %rax
    000026ad: 	leaq	0x1(%rax), %rsi
    000026b1: 	callq	_ZdlPvm@PLT # Offset: 9905
.Ltmp1675:
    000026b6: 	movq	%rbp, %rdi
    000026b9: 	callq	_Unwind_Resume@PLT # Offset: 9913
    000026be: 	endbr64
    000026c2: 	jmp	.Ltmp1673 # Offset: 9922
    000026c4: 	endbr64
    000026c8: 	jmp	.Ltmp1673 # Offset: 9928
    000026ca: 	endbr64
    000026ce: 	movq	%rax, %rbp
    000026d1: 	jmp	.Ltmp1676 # Offset: 9937
    000026d3: 	endbr64
    000026d7: 	jmp	.Ltmp1673 # Offset: 9943
.Ltmp1676:
    000026d9: 	movq	0xb0(%rsp), %rdi
    000026e1: 	leaq	0xc0(%rsp), %rax
    000026e9: 	cmpq	%rax, %rdi
    000026ec: 	jne	.Ltmp1677 # Offset: 9964
    000026ee: 	jmp	.Ltmp1674 # Offset: 9966
    000026f0: 	endbr64
    000026f4: 	jmp	.Ltmp1673 # Offset: 9972
    000026f9: 	endbr64
    000026fd: 	jmp	.Ltmp1673 # Offset: 9981
    00002702: 	endbr64
    00002706: 	jmp	.Ltmp1673 # Offset: 9990
    0000270b: 	endbr64
    0000270f: 	jmp	.Ltmp1673 # Offset: 9999
    00002714: 	endbr64
    00002718: 	jmp	.Ltmp1673 # Offset: 10008
    0000271d: 	endbr64
    00002721: 	jmp	.Ltmp1673 # Offset: 10017
    00002726: 	endbr64
    0000272a: 	jmp	.Ltmp1673 # Offset: 10026
    0000272f: 	endbr64
    00002733: 	movq	%rax, %rbp
    00002736: 	jmp	.Ltmp1674 # Offset: 10038
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI12SixItemClassIiEEvd"

Binary Function "_Z11TestOneTypeI13FourItemClassIiEEvd" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x14150
  Size        : 0x274a
  MaxSize     : 0x274a
  Offset      : 0x14150
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeI13FourItemClassIiEEvd
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x1f000(%rsp), %r11
.Ltmp1678:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1678 # Offset: 37
    00000027: 	subq	$0x4e8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm4
    00000036: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm5
    0000003e: 	movq	"_ZL7gLabels/1"+56(%rip), %r14
    00000045: 	movhlps	%xmm4, %xmm6
    00000048: 	movq	%xmm5, %rbp
    0000004d: 	movq	%xmm6, %rdi
    00000052: 	leaq	0x8(%rdi), %r12
    00000056: 	movsd	%xmm0, 0x58(%rsp)
    0000005c: 	movq	%fs:0x28, %rax
    00000065: 	movq	%rax, 0x1f4d8(%rsp)
    0000006d: 	xorl	%eax, %eax
    0000006f: 	leaq	0xa0(%rsp), %rax
    00000077: 	movb	$0x73, 0xa8(%rsp)
    0000007f: 	movq	%rax, 0x78(%rsp)
    00000084: 	movq	%rax, 0x90(%rsp)
    0000008c: 	movabsq	$0x73616c4334746e69, %rax
    00000096: 	movq	%rax, 0xa0(%rsp)
    0000009e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000000a5: 	movq	$0x9, 0x98(%rsp)
    000000b1: 	movq	%rax, (%rsp)
    000000b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000000bc: 	movb	$0x0, 0xa9(%rsp)
    000000c4: 	movq	%rax, 0x20(%rsp)
    000000c9: 	movaps	%xmm5, 0x30(%rsp)
    000000ce: 	movaps	%xmm4, 0x40(%rsp)
    000000d3: 	movq	%xmm6, 0x50(%rsp)
    000000d9: 	movq	%xmm4, 0x10(%rsp)
    000000df: 	cmpq	%r12, %rax
    000000e2: 	jbe	.Ltmp1679 # Offset: 226
    000000e4: 	movq	%r12, %r13
    000000e7: 	movq	%rax, %r15
    000000ea: 	movq	%xmm5, 0x60(%rsp)
.Ltmp1682:
    000000f0: 	movq	(%r13), %rbp
    000000f4: 	leaq	0x200(%rbp), %rbx
    000000fb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1681:
    00000100: 	movq	(%rbp), %rdi
    00000104: 	leaq	0x10(%rbp), %rdx
    00000108: 	cmpq	%rdx, %rdi
    0000010b: 	je	.Ltmp1680 # Offset: 267
    00000111: 	movq	0x10(%rbp), %rax
    00000115: 	addq	$0x20, %rbp
    00000119: 	leaq	0x1(%rax), %rsi
    0000011d: 	callq	_ZdlPvm@PLT # Offset: 285
    00000122: 	cmpq	%rbp, %rbx
    00000125: 	jne	.Ltmp1681 # Offset: 293
    00000127: 	addq	$0x8, %r13
    0000012b: 	cmpq	%r13, %r15
    0000012e: 	ja	.Ltmp1682 # Offset: 302
.Ltmp1853:
    00000130: 	movq	0x60(%rsp), %rbp
.Ltmp1679:
    00000135: 	movq	0x50(%rsp), %rdi
    0000013a: 	cmpq	%rdi, 0x20(%rsp)
    0000013f: 	jne	.Ltmp1683 # Offset: 319
    00000141: 	jmp	.Ltmp1684 # Offset: 321
    00000146: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1686:
    00000150: 	movq	0x10(%rbp), %rax
    00000154: 	addq	$0x20, %rbp
    00000158: 	leaq	0x1(%rax), %rsi
    0000015c: 	callq	_ZdlPvm@PLT # Offset: 348
.Ltmp1683:
    00000161: 	cmpq	%rbp, 0x10(%rsp)
    00000166: 	je	.Ltmp1685 # Offset: 358
.Ltmp1687:
    00000168: 	movq	(%rbp), %rdi
    0000016c: 	leaq	0x10(%rbp), %rax
    00000170: 	cmpq	%rax, %rdi
    00000173: 	jne	.Ltmp1686 # Offset: 371
    00000175: 	addq	$0x20, %rbp
    00000179: 	cmpq	0x10(%rsp), %rbp
    0000017e: 	jne	.Ltmp1687 # Offset: 382
    00000180: 	cmpq	%r14, (%rsp)
    00000184: 	je	.Ltmp1688 # Offset: 388
    00000186: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1690:
    00000190: 	movq	(%r14), %rdi
    00000193: 	leaq	0x10(%r14), %rax
    00000197: 	cmpq	%rax, %rdi
    0000019a: 	je	.Ltmp1689 # Offset: 410
    0000019c: 	movq	0x10(%r14), %rax
    000001a0: 	leaq	0x1(%rax), %rsi
    000001a4: 	callq	_ZdlPvm@PLT # Offset: 420
.Ltmp1689:
    000001a9: 	addq	$0x20, %r14
.Ltmp1685:
    000001ad: 	cmpq	%r14, (%rsp)
    000001b1: 	jne	.Ltmp1690 # Offset: 433
.Ltmp1688:
    000001b3: 	movq	"_ZL7gLabels/1"+72(%rip), %rax
    000001ba: 	leaq	0x8(%rax), %rbx
    000001be: 	cmpq	%r12, %rbx
    000001c1: 	jbe	.Ltmp1691 # Offset: 449
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1692:
    000001c8: 	movq	(%r12), %rdi
    000001cc: 	movl	$0x200, %esi
    000001d1: 	addq	$0x8, %r12
    000001d5: 	callq	_ZdlPvm@PLT # Offset: 469
    000001da: 	cmpq	%r12, %rbx
    000001dd: 	ja	.Ltmp1692 # Offset: 477
.Ltmp1691:
    000001df: 	cvttsd2si	init_value(%rip), %eax
    000001e7: 	movdqa	0x30(%rsp), %xmm6
    000001ed: 	leaq	0xd0(%rsp), %r12
    000001f5: 	leaq	0x1f4d0(%rsp), %rbx
    000001fd: 	movaps	%xmm6, "_ZL7gLabels/1"+48(%rip)
    00000204: 	movdqa	0x40(%rsp), %xmm6
    0000020a: 	movd	%eax, %xmm0
    0000020e: 	movaps	%xmm6, "_ZL7gLabels/1"+64(%rip)
    00000215: 	movq	%r12, %rax
    00000218: 	pshufd	$0x0, %xmm0, %xmm0
    0000021d: 	nopl	(%rax) # Size: 3
.Ltmp1693:
    00000220: 	movaps	%xmm0, (%rax)
    00000223: 	addq	$0x10, %rax
    00000227: 	cmpq	%rbx, %rax
    0000022a: 	jne	.Ltmp1693 # Offset: 554
    0000022c: 	cvttsd2si	0x58(%rsp), %ebp
    00000232: 	leal	(%rbp,%rbp), %eax
    00000236: 	leal	0x2(%rbp), %edi
    00000239: 	cltd
    0000023a: 	movl	%eax, 0x58(%rsp)
    0000023e: 	idivl	%edi
    00000240: 	movl	%edi, 0x50(%rsp)
    00000244: 	leaq	DATAat0x171c8(%rip), %rdx
    0000024b: 	leaq	0xb0(%rsp), %rdi
    00000253: 	movq	%rdi, 0x60(%rsp)
    00000258: 	addl	%ebp, %eax
    0000025a: 	movl	%eax, 0x40(%rsp)
    0000025e: 	leaq	0x90(%rsp), %rax
    00000266: 	movq	%rax, %rsi
    00000269: 	movq	%rax, 0x70(%rsp)
    0000026e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 622
    00000273: 	callq	clock@PLT # Offset: 627
    00000278: 	movd	%ebp, %xmm5
    0000027c: 	xorl	%r13d, %r13d
    0000027f: 	movl	iterations(%rip), %ecx
    00000285: 	pshufd	$0x0, %xmm5, %xmm6
    0000028a: 	movq	%rax, start_time(%rip)
    00000291: 	leaq	DATAat0x171d6(%rip), %r14
    00000298: 	movaps	%xmm6, (%rsp)
    0000029c: 	testl	%ecx, %ecx
    0000029e: 	jle	.Ltmp1694 # Offset: 670
.Ltmp1697:
    000002a0: 	movq	%r12, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1695:
    000002b0: 	movdqa	(%rsp), %xmm1
    000002b5: 	paddd	(%rax), %xmm1
    000002b9: 	addq	$0x10, %rax
    000002bd: 	paddd	%xmm1, %xmm0
    000002c1: 	cmpq	%rbx, %rax
    000002c4: 	jne	.Ltmp1695 # Offset: 708
    000002c6: 	cvttsd2si	init_value(%rip), %ecx
    000002ce: 	pshufd	$0x55, %xmm0, %xmm1
    000002d3: 	movd	%xmm0, %eax
    000002d7: 	movd	%xmm1, %edx
    000002db: 	movdqa	%xmm0, %xmm1
    000002df: 	punpckhdq	%xmm0, %xmm1
    000002e3: 	pshufd	$0xff, %xmm0, %xmm0
    000002e8: 	addl	%ebp, %ecx
    000002ea: 	imull	$0x1f40, %ecx, %ecx
    000002f0: 	subl	%ecx, %eax
    000002f2: 	subl	%ecx, %edx
    000002f4: 	addl	%eax, %edx
    000002f6: 	movd	%xmm1, %eax
    000002fa: 	subl	%ecx, %eax
    000002fc: 	addl	%eax, %edx
    000002fe: 	movd	%xmm0, %eax
    00000302: 	subl	%ecx, %eax
    00000304: 	addl	%eax, %edx
    00000306: 	jne	.Ltmp1696 # Offset: 774
.Ltmp1854:
    0000030c: 	addl	$0x1, %r13d
    00000310: 	cmpl	iterations(%rip), %r13d
    00000317: 	jl	.Ltmp1697 # Offset: 791
.Ltmp1694:
    00000319: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000320: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000327: 	subq	$0x20, %rax
    0000032b: 	cmpq	%rax, %r14
    0000032e: 	je	.Ltmp1698 # Offset: 814
    00000334: 	leaq	0x10(%r14), %rdi
    00000338: 	movq	0xb8(%rsp), %r13
    00000340: 	movq	%rdi, (%r14)
    00000343: 	movq	0xb0(%rsp), %r15
    0000034b: 	movq	%r15, %rax
    0000034e: 	addq	%r13, %rax
    00000351: 	je	.Ltmp1699 # Offset: 849
    00000353: 	testq	%r15, %r15
    00000356: 	je	.Ltmp1700 # Offset: 854
.Ltmp1699:
    0000035c: 	movq	%r13, 0x88(%rsp)
    00000364: 	cmpq	$0xf, %r13
    00000368: 	ja	.Ltmp1701 # Offset: 872
    0000036e: 	cmpq	$0x1, %r13
    00000372: 	jne	.Ltmp1702 # Offset: 882
    00000378: 	movzbl	(%r15), %eax
    0000037c: 	movb	%al, 0x10(%r14)
.Ltmp1855:
    00000380: 	movq	%r13, 0x8(%r14)
    00000384: 	movb	$0x0, (%rdi,%r13)
    00000389: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000390: 	addq	$0x20, %rax
    00000394: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1877:
    0000039b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a9: 	je	.Ltmp1703 # Offset: 937
.Ltmp1875:
    000003af: 	movq	-0x20(%rax), %r13
    000003b3: 	callq	clock@PLT # Offset: 947
    000003b8: 	pxor	%xmm0, %xmm0
    000003bc: 	movq	%rax, end_time(%rip)
    000003c3: 	movq	%r13, %rdi
    000003c6: 	subq	start_time(%rip), %rax
    000003cd: 	cvtsi2sd	%rax, %xmm0
    000003d2: 	divsd	DATAat0x17358(%rip), %xmm0
    000003da: 	callq	_Z13record_resultdPKc # Offset: 986
    000003df: 	movq	0xb0(%rsp), %rdi
    000003e7: 	leaq	0xc0(%rsp), %rax
    000003ef: 	movq	%rax, 0x68(%rsp)
    000003f4: 	cmpq	%rax, %rdi
    000003f7: 	je	.Ltmp1704 # Offset: 1015
    000003f9: 	movq	0xc0(%rsp), %rax
    00000401: 	leaq	0x1(%rax), %rsi
    00000405: 	callq	_ZdlPvm@PLT # Offset: 1029
.Ltmp1704:
    0000040a: 	movq	0x70(%rsp), %rsi
    0000040f: 	movq	0x60(%rsp), %rdi
    00000414: 	leaq	DATAat0x171e6(%rip), %rdx
    0000041b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1051
    00000420: 	callq	clock@PLT # Offset: 1056
    00000425: 	movl	iterations(%rip), %edx
    0000042b: 	movq	%rax, start_time(%rip)
    00000432: 	testl	%edx, %edx
    00000434: 	jle	.Ltmp1705 # Offset: 1076
    0000043a: 	movl	0x58(%rsp), %eax
    0000043e: 	xorl	%r13d, %r13d
    00000441: 	leaq	DATAat0x171d6(%rip), %r15
    00000448: 	leal	(%rbp,%rax), %r14d
    0000044d: 	addl	0x50(%rsp), %r14d
    00000452: 	addl	0x40(%rsp), %r14d
    00000457: 	movd	%r14d, %xmm5
    0000045c: 	pshufd	$0x0, %xmm5, %xmm6
    00000461: 	movaps	%xmm6, (%rsp)
    00000465: 	nopl	(%rax) # Size: 3
.Ltmp1708:
    00000468: 	movq	%r12, %rax
    0000046b: 	pxor	%xmm0, %xmm0
    0000046f: 	nop # Size: 1
.Ltmp1706:
    00000470: 	movdqa	(%rsp), %xmm1
    00000475: 	paddd	(%rax), %xmm1
    00000479: 	addq	$0x10, %rax
    0000047d: 	paddd	%xmm1, %xmm0
    00000481: 	cmpq	%rbx, %rax
    00000484: 	jne	.Ltmp1706 # Offset: 1156
    00000486: 	cvttsd2si	init_value(%rip), %ecx
    0000048e: 	pshufd	$0x55, %xmm0, %xmm1
    00000493: 	movd	%xmm0, %eax
    00000497: 	movd	%xmm1, %edx
    0000049b: 	movdqa	%xmm0, %xmm1
    0000049f: 	punpckhdq	%xmm0, %xmm1
    000004a3: 	pshufd	$0xff, %xmm0, %xmm0
    000004a8: 	addl	%r14d, %ecx
    000004ab: 	imull	$0x1f40, %ecx, %ecx
    000004b1: 	subl	%ecx, %eax
    000004b3: 	subl	%ecx, %edx
    000004b5: 	addl	%eax, %edx
    000004b7: 	movd	%xmm1, %eax
    000004bb: 	subl	%ecx, %eax
    000004bd: 	addl	%eax, %edx
    000004bf: 	movd	%xmm0, %eax
    000004c3: 	subl	%ecx, %eax
    000004c5: 	addl	%eax, %edx
    000004c7: 	jne	.Ltmp1707 # Offset: 1223
.Ltmp1859:
    000004cd: 	addl	$0x1, %r13d
    000004d1: 	cmpl	iterations(%rip), %r13d
    000004d8: 	jl	.Ltmp1708 # Offset: 1240
.Ltmp1705:
    000004da: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000004e1: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000004e8: 	subq	$0x20, %rax
    000004ec: 	cmpq	%rax, %r14
    000004ef: 	je	.Ltmp1709 # Offset: 1263
    000004f5: 	leaq	0x10(%r14), %rdi
    000004f9: 	movq	0xb8(%rsp), %r13
    00000501: 	movq	%rdi, (%r14)
    00000504: 	movq	0xb0(%rsp), %r15
    0000050c: 	movq	%r15, %rax
    0000050f: 	addq	%r13, %rax
    00000512: 	je	.Ltmp1710 # Offset: 1298
    00000514: 	testq	%r15, %r15
    00000517: 	je	.Ltmp1711 # Offset: 1303
.Ltmp1710:
    0000051d: 	movq	%r13, 0x88(%rsp)
    00000525: 	cmpq	$0xf, %r13
    00000529: 	ja	.Ltmp1712 # Offset: 1321
    0000052f: 	cmpq	$0x1, %r13
    00000533: 	jne	.Ltmp1713 # Offset: 1331
    00000539: 	movzbl	(%r15), %eax
    0000053d: 	movb	%al, 0x10(%r14)
.Ltmp1909:
    00000541: 	movq	%r13, 0x8(%r14)
    00000545: 	movb	$0x0, (%rdi,%r13)
    0000054a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000551: 	addq	$0x20, %rax
    00000555: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1876:
    0000055c: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000563: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000056a: 	je	.Ltmp1714 # Offset: 1386
.Ltmp1872:
    00000570: 	movq	-0x20(%rax), %r13
    00000574: 	callq	clock@PLT # Offset: 1396
    00000579: 	pxor	%xmm0, %xmm0
    0000057d: 	movq	%rax, end_time(%rip)
    00000584: 	movq	%r13, %rdi
    00000587: 	subq	start_time(%rip), %rax
    0000058e: 	cvtsi2sd	%rax, %xmm0
    00000593: 	divsd	DATAat0x17358(%rip), %xmm0
    0000059b: 	callq	_Z13record_resultdPKc # Offset: 1435
    000005a0: 	movq	0xb0(%rsp), %rdi
    000005a8: 	cmpq	0x68(%rsp), %rdi
    000005ad: 	je	.Ltmp1715 # Offset: 1453
    000005af: 	movq	0xc0(%rsp), %rax
    000005b7: 	leaq	0x1(%rax), %rsi
    000005bb: 	callq	_ZdlPvm@PLT # Offset: 1467
.Ltmp1715:
    000005c0: 	movq	0x70(%rsp), %rsi
    000005c5: 	movq	0x60(%rsp), %rdi
    000005ca: 	leaq	DATAat0x171fe(%rip), %rdx
    000005d1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1489
    000005d6: 	callq	clock@PLT # Offset: 1494
    000005db: 	movq	%rax, start_time(%rip)
    000005e2: 	movl	iterations(%rip), %eax
    000005e8: 	testl	%eax, %eax
    000005ea: 	jle	.Ltmp1716 # Offset: 1514
    000005f0: 	movd	%ebp, %xmm4
    000005f4: 	xorl	%r13d, %r13d
    000005f7: 	leaq	DATAat0x171d6(%rip), %r14
    000005fe: 	pshufd	$0x0, %xmm4, %xmm6
    00000603: 	movaps	%xmm6, (%rsp)
    00000607: 	movd	0x40(%rsp), %xmm6
    0000060d: 	pshufd	$0x0, %xmm6, %xmm5
    00000612: 	movaps	%xmm5, 0x10(%rsp)
    00000617: 	movd	0x50(%rsp), %xmm5
    0000061d: 	pshufd	$0x0, %xmm5, %xmm4
    00000622: 	movaps	%xmm4, 0x20(%rsp)
    00000627: 	movd	0x58(%rsp), %xmm4
    0000062d: 	pshufd	$0x0, %xmm4, %xmm6
    00000632: 	movaps	%xmm6, 0x30(%rsp)
    00000637: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1719:
    00000640: 	movq	%r12, %rax
    00000643: 	pxor	%xmm1, %xmm1
    00000647: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1717:
    00000650: 	movdqa	(%rsp), %xmm0
    00000655: 	paddd	(%rax), %xmm0
    00000659: 	addq	$0x10, %rax
    0000065d: 	paddd	0x30(%rsp), %xmm0
    00000663: 	paddd	0x20(%rsp), %xmm0
    00000669: 	paddd	0x10(%rsp), %xmm0
    0000066f: 	paddd	%xmm0, %xmm1
    00000673: 	cmpq	%rbx, %rax
    00000676: 	jne	.Ltmp1717 # Offset: 1654
    00000678: 	cvttsd2si	init_value(%rip), %edx
    00000680: 	pshufd	$0x55, %xmm1, %xmm0
    00000685: 	movd	%xmm1, %eax
    00000689: 	movd	%xmm0, %ecx
    0000068d: 	movdqa	%xmm1, %xmm0
    00000691: 	punpckhdq	%xmm1, %xmm0
    00000695: 	pshufd	$0xff, %xmm1, %xmm1
    0000069a: 	addl	%ebp, %edx
    0000069c: 	addl	0x58(%rsp), %edx
    000006a0: 	addl	0x50(%rsp), %edx
    000006a4: 	addl	0x40(%rsp), %edx
    000006a8: 	imull	$0x1f40, %edx, %edx
    000006ae: 	subl	%edx, %eax
    000006b0: 	subl	%edx, %ecx
    000006b2: 	addl	%eax, %ecx
    000006b4: 	movd	%xmm0, %eax
    000006b8: 	subl	%edx, %eax
    000006ba: 	addl	%eax, %ecx
    000006bc: 	movd	%xmm1, %eax
    000006c0: 	subl	%edx, %eax
    000006c2: 	addl	%eax, %ecx
    000006c4: 	jne	.Ltmp1718 # Offset: 1732
.Ltmp1858:
    000006ca: 	addl	$0x1, %r13d
    000006ce: 	cmpl	iterations(%rip), %r13d
    000006d5: 	jl	.Ltmp1719 # Offset: 1749
.Ltmp1716:
    000006db: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000006e2: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000006e9: 	subq	$0x20, %rax
    000006ed: 	cmpq	%rax, %r14
    000006f0: 	je	.Ltmp1720 # Offset: 1776
    000006f6: 	leaq	0x10(%r14), %rdi
    000006fa: 	movq	0xb8(%rsp), %r13
    00000702: 	movq	%rdi, (%r14)
    00000705: 	movq	0xb0(%rsp), %r15
    0000070d: 	movq	%r15, %rax
    00000710: 	addq	%r13, %rax
    00000713: 	je	.Ltmp1721 # Offset: 1811
    00000715: 	testq	%r15, %r15
    00000718: 	je	.Ltmp1722 # Offset: 1816
.Ltmp1721:
    0000071e: 	movq	%r13, 0x88(%rsp)
    00000726: 	cmpq	$0xf, %r13
    0000072a: 	ja	.Ltmp1723 # Offset: 1834
    00000730: 	cmpq	$0x1, %r13
    00000734: 	jne	.Ltmp1724 # Offset: 1844
    0000073a: 	movzbl	(%r15), %eax
    0000073e: 	movb	%al, 0x10(%r14)
.Ltmp1895:
    00000742: 	movq	%r13, 0x8(%r14)
    00000746: 	movb	$0x0, (%rdi,%r13)
    0000074b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000752: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000759: 	addq	$0x20, %rax
    0000075d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000764: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000076b: 	je	.Ltmp1725 # Offset: 1899
.Ltmp1874:
    00000771: 	movq	-0x20(%rax), %r13
    00000775: 	callq	clock@PLT # Offset: 1909
    0000077a: 	pxor	%xmm0, %xmm0
    0000077e: 	movq	%rax, end_time(%rip)
    00000785: 	movq	%r13, %rdi
    00000788: 	subq	start_time(%rip), %rax
    0000078f: 	cvtsi2sd	%rax, %xmm0
    00000794: 	divsd	DATAat0x17358(%rip), %xmm0
    0000079c: 	callq	_Z13record_resultdPKc # Offset: 1948
    000007a1: 	movq	0xb0(%rsp), %rdi
    000007a9: 	cmpq	0x68(%rsp), %rdi
    000007ae: 	je	.Ltmp1726 # Offset: 1966
    000007b0: 	movq	0xc0(%rsp), %rax
    000007b8: 	leaq	0x1(%rax), %rsi
    000007bc: 	callq	_ZdlPvm@PLT # Offset: 1980
.Ltmp1726:
    000007c1: 	movq	0x70(%rsp), %rsi
    000007c6: 	movq	0x60(%rsp), %rdi
    000007cb: 	leaq	DATAat0x17217(%rip), %rdx
    000007d2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2002
    000007d7: 	callq	clock@PLT # Offset: 2007
    000007dc: 	movd	%ebp, %xmm5
    000007e0: 	xorl	%r13d, %r13d
    000007e3: 	movl	iterations(%rip), %ecx
    000007e9: 	pshufd	$0x0, %xmm5, %xmm6
    000007ee: 	movq	%rax, start_time(%rip)
    000007f5: 	leaq	DATAat0x171d6(%rip), %r14
    000007fc: 	movaps	%xmm6, (%rsp)
    00000800: 	testl	%ecx, %ecx
    00000802: 	jle	.Ltmp1727 # Offset: 2050
    00000804: 	nopl	(%rax) # Size: 4
.Ltmp1730:
    00000808: 	movq	%r12, %rax
    0000080b: 	pxor	%xmm0, %xmm0
    0000080f: 	nop # Size: 1
.Ltmp1728:
    00000810: 	paddd	(%rax), %xmm0
    00000814: 	addq	$0x10, %rax
    00000818: 	psubd	(%rsp), %xmm0
    0000081d: 	cmpq	%rbx, %rax
    00000820: 	jne	.Ltmp1728 # Offset: 2080
    00000822: 	cvttsd2si	init_value(%rip), %esi
    0000082a: 	pshufd	$0x55, %xmm0, %xmm1
    0000082f: 	movd	%xmm0, %eax
    00000833: 	movd	%xmm1, %edx
    00000837: 	movdqa	%xmm0, %xmm1
    0000083b: 	punpckhdq	%xmm0, %xmm1
    0000083f: 	pshufd	$0xff, %xmm0, %xmm0
    00000844: 	subl	%ebp, %esi
    00000846: 	imull	$0x1f40, %esi, %esi
    0000084c: 	subl	%esi, %eax
    0000084e: 	subl	%esi, %edx
    00000850: 	addl	%eax, %edx
    00000852: 	movd	%xmm1, %eax
    00000856: 	subl	%esi, %eax
    00000858: 	addl	%eax, %edx
    0000085a: 	movd	%xmm0, %eax
    0000085e: 	subl	%esi, %eax
    00000860: 	addl	%eax, %edx
    00000862: 	jne	.Ltmp1729 # Offset: 2146
.Ltmp1862:
    00000868: 	addl	$0x1, %r13d
    0000086c: 	cmpl	%ecx, %r13d
    0000086f: 	jl	.Ltmp1730 # Offset: 2159
.Ltmp1727:
    00000871: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000878: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    0000087f: 	subq	$0x20, %rax
    00000883: 	cmpq	%rax, %r14
    00000886: 	je	.Ltmp1731 # Offset: 2182
    0000088c: 	leaq	0x10(%r14), %rdi
    00000890: 	movq	0xb8(%rsp), %r13
    00000898: 	movq	%rdi, (%r14)
    0000089b: 	movq	0xb0(%rsp), %r15
    000008a3: 	movq	%r15, %rax
    000008a6: 	addq	%r13, %rax
    000008a9: 	je	.Ltmp1732 # Offset: 2217
    000008ab: 	testq	%r15, %r15
    000008ae: 	je	.Ltmp1733 # Offset: 2222
.Ltmp1732:
    000008b4: 	movq	%r13, 0x88(%rsp)
    000008bc: 	cmpq	$0xf, %r13
    000008c0: 	ja	.Ltmp1734 # Offset: 2240
    000008c6: 	cmpq	$0x1, %r13
    000008ca: 	jne	.Ltmp1735 # Offset: 2250
    000008d0: 	movzbl	(%r15), %eax
    000008d4: 	movb	%al, 0x10(%r14)
.Ltmp1900:
    000008d8: 	movq	%r13, 0x8(%r14)
    000008dc: 	movb	$0x0, (%rdi,%r13)
    000008e1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008e8: 	addq	$0x20, %rax
    000008ec: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1884:
    000008f3: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000901: 	je	.Ltmp1736 # Offset: 2305
.Ltmp1883:
    00000907: 	movq	-0x20(%rax), %r13
    0000090b: 	callq	clock@PLT # Offset: 2315
    00000910: 	pxor	%xmm0, %xmm0
    00000914: 	movq	%rax, end_time(%rip)
    0000091b: 	movq	%r13, %rdi
    0000091e: 	subq	start_time(%rip), %rax
    00000925: 	cvtsi2sd	%rax, %xmm0
    0000092a: 	divsd	DATAat0x17358(%rip), %xmm0
    00000932: 	callq	_Z13record_resultdPKc # Offset: 2354
    00000937: 	movq	0xb0(%rsp), %rdi
    0000093f: 	cmpq	0x68(%rsp), %rdi
    00000944: 	je	.Ltmp1737 # Offset: 2372
    00000946: 	movq	0xc0(%rsp), %rax
    0000094e: 	leaq	0x1(%rax), %rsi
    00000952: 	callq	_ZdlPvm@PLT # Offset: 2386
.Ltmp1737:
    00000957: 	movq	0x70(%rsp), %rsi
    0000095c: 	movq	0x60(%rsp), %rdi
    00000961: 	leaq	DATAat0x1722a(%rip), %rdx
    00000968: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2408
    0000096d: 	callq	clock@PLT # Offset: 2413
    00000972: 	movl	iterations(%rip), %ecx
    00000978: 	movq	%rax, start_time(%rip)
    0000097f: 	testl	%ecx, %ecx
    00000981: 	jle	.Ltmp1738 # Offset: 2433
    00000987: 	movl	0x58(%rsp), %eax
    0000098b: 	xorl	%r13d, %r13d
    0000098e: 	leaq	DATAat0x171d6(%rip), %r15
    00000995: 	leal	(%rbp,%rax), %r14d
    0000099a: 	addl	0x50(%rsp), %r14d
    0000099f: 	addl	0x40(%rsp), %r14d
    000009a4: 	movd	%r14d, %xmm6
    000009a9: 	pshufd	$0x0, %xmm6, %xmm5
    000009ae: 	movaps	%xmm5, (%rsp)
    000009b2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1741:
    000009b8: 	movq	%r12, %rax
    000009bb: 	pxor	%xmm0, %xmm0
    000009bf: 	nop # Size: 1
.Ltmp1739:
    000009c0: 	paddd	(%rax), %xmm0
    000009c4: 	addq	$0x10, %rax
    000009c8: 	psubd	(%rsp), %xmm0
    000009cd: 	cmpq	%rbx, %rax
    000009d0: 	jne	.Ltmp1739 # Offset: 2512
    000009d2: 	cvttsd2si	init_value(%rip), %esi
    000009da: 	pshufd	$0x55, %xmm0, %xmm1
    000009df: 	movd	%xmm0, %eax
    000009e3: 	movd	%xmm1, %edx
    000009e7: 	movdqa	%xmm0, %xmm1
    000009eb: 	punpckhdq	%xmm0, %xmm1
    000009ef: 	pshufd	$0xff, %xmm0, %xmm0
    000009f4: 	subl	%r14d, %esi
    000009f7: 	imull	$0x1f40, %esi, %esi
    000009fd: 	subl	%esi, %eax
    000009ff: 	subl	%esi, %edx
    00000a01: 	addl	%eax, %edx
    00000a03: 	movd	%xmm1, %eax
    00000a07: 	subl	%esi, %eax
    00000a09: 	addl	%eax, %edx
    00000a0b: 	movd	%xmm0, %eax
    00000a0f: 	subl	%esi, %eax
    00000a11: 	addl	%eax, %edx
    00000a13: 	jne	.Ltmp1740 # Offset: 2579
.Ltmp1861:
    00000a19: 	addl	$0x1, %r13d
    00000a1d: 	cmpl	%ecx, %r13d
    00000a20: 	jl	.Ltmp1741 # Offset: 2592
.Ltmp1738:
    00000a22: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a29: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000a30: 	subq	$0x20, %rax
    00000a34: 	cmpq	%rax, %r14
    00000a37: 	je	.Ltmp1742 # Offset: 2615
    00000a3d: 	leaq	0x10(%r14), %rdi
    00000a41: 	movq	0xb8(%rsp), %r13
    00000a49: 	movq	%rdi, (%r14)
    00000a4c: 	movq	0xb0(%rsp), %r15
    00000a54: 	movq	%r15, %rax
    00000a57: 	addq	%r13, %rax
    00000a5a: 	je	.Ltmp1743 # Offset: 2650
    00000a5c: 	testq	%r15, %r15
    00000a5f: 	je	.Ltmp1744 # Offset: 2655
.Ltmp1743:
    00000a65: 	movq	%r13, 0x88(%rsp)
    00000a6d: 	cmpq	$0xf, %r13
    00000a71: 	ja	.Ltmp1745 # Offset: 2673
    00000a77: 	cmpq	$0x1, %r13
    00000a7b: 	jne	.Ltmp1746 # Offset: 2683
    00000a81: 	movzbl	(%r15), %eax
    00000a85: 	movb	%al, 0x10(%r14)
.Ltmp1913:
    00000a89: 	movq	%r13, 0x8(%r14)
    00000a8d: 	movb	$0x0, (%rdi,%r13)
    00000a92: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a99: 	addq	$0x20, %rax
    00000a9d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1871:
    00000aa4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000aab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ab2: 	je	.Ltmp1747 # Offset: 2738
.Ltmp1870:
    00000ab8: 	movq	-0x20(%rax), %r13
    00000abc: 	callq	clock@PLT # Offset: 2748
    00000ac1: 	pxor	%xmm0, %xmm0
    00000ac5: 	movq	%rax, end_time(%rip)
    00000acc: 	movq	%r13, %rdi
    00000acf: 	subq	start_time(%rip), %rax
    00000ad6: 	cvtsi2sd	%rax, %xmm0
    00000adb: 	divsd	DATAat0x17358(%rip), %xmm0
    00000ae3: 	callq	_Z13record_resultdPKc # Offset: 2787
    00000ae8: 	movq	0xb0(%rsp), %rdi
    00000af0: 	cmpq	0x68(%rsp), %rdi
    00000af5: 	je	.Ltmp1748 # Offset: 2805
    00000af7: 	movq	0xc0(%rsp), %rax
    00000aff: 	leaq	0x1(%rax), %rsi
    00000b03: 	callq	_ZdlPvm@PLT # Offset: 2819
.Ltmp1748:
    00000b08: 	movq	0x70(%rsp), %rsi
    00000b0d: 	movq	0x60(%rsp), %rdi
    00000b12: 	leaq	DATAat0x17247(%rip), %rdx
    00000b19: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2841
    00000b1e: 	callq	clock@PLT # Offset: 2846
    00000b23: 	movl	iterations(%rip), %esi
    00000b29: 	movq	%rax, start_time(%rip)
    00000b30: 	testl	%esi, %esi
    00000b32: 	jle	.Ltmp1749 # Offset: 2866
    00000b38: 	movd	%ebp, %xmm5
    00000b3c: 	xorl	%r13d, %r13d
    00000b3f: 	leaq	DATAat0x171d6(%rip), %r14
    00000b46: 	pshufd	$0x0, %xmm5, %xmm4
    00000b4b: 	movaps	%xmm4, (%rsp)
    00000b4f: 	movd	0x40(%rsp), %xmm4
    00000b55: 	pshufd	$0x0, %xmm4, %xmm6
    00000b5a: 	movaps	%xmm6, 0x10(%rsp)
    00000b5f: 	movd	0x50(%rsp), %xmm6
    00000b65: 	pshufd	$0x0, %xmm6, %xmm5
    00000b6a: 	movaps	%xmm5, 0x20(%rsp)
    00000b6f: 	movd	0x58(%rsp), %xmm5
    00000b75: 	pshufd	$0x0, %xmm5, %xmm4
    00000b7a: 	movaps	%xmm4, 0x30(%rsp)
    00000b7f: 	nop # Size: 1
.Ltmp1752:
    00000b80: 	movq	%r12, %rax
    00000b83: 	pxor	%xmm1, %xmm1
    00000b87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1750:
    00000b90: 	movdqa	(%rax), %xmm0
    00000b94: 	psubd	(%rsp), %xmm0
    00000b99: 	addq	$0x10, %rax
    00000b9d: 	psubd	0x30(%rsp), %xmm0
    00000ba3: 	psubd	0x20(%rsp), %xmm0
    00000ba9: 	psubd	0x10(%rsp), %xmm0
    00000baf: 	paddd	%xmm0, %xmm1
    00000bb3: 	cmpq	%rbx, %rax
    00000bb6: 	jne	.Ltmp1750 # Offset: 2998
    00000bb8: 	cvttsd2si	init_value(%rip), %edx
    00000bc0: 	pshufd	$0x55, %xmm1, %xmm0
    00000bc5: 	movd	%xmm1, %eax
    00000bc9: 	movd	%xmm0, %ecx
    00000bcd: 	movdqa	%xmm1, %xmm0
    00000bd1: 	punpckhdq	%xmm1, %xmm0
    00000bd5: 	pshufd	$0xff, %xmm1, %xmm1
    00000bda: 	subl	%ebp, %edx
    00000bdc: 	subl	0x58(%rsp), %edx
    00000be0: 	subl	0x50(%rsp), %edx
    00000be4: 	subl	0x40(%rsp), %edx
    00000be8: 	imull	$0x1f40, %edx, %edx
    00000bee: 	subl	%edx, %eax
    00000bf0: 	subl	%edx, %ecx
    00000bf2: 	addl	%eax, %ecx
    00000bf4: 	movd	%xmm0, %eax
    00000bf8: 	subl	%edx, %eax
    00000bfa: 	addl	%eax, %ecx
    00000bfc: 	movd	%xmm1, %eax
    00000c00: 	subl	%edx, %eax
    00000c02: 	addl	%eax, %ecx
    00000c04: 	jne	.Ltmp1751 # Offset: 3076
.Ltmp1860:
    00000c0a: 	addl	$0x1, %r13d
    00000c0e: 	cmpl	%esi, %r13d
    00000c11: 	jl	.Ltmp1752 # Offset: 3089
.Ltmp1749:
    00000c17: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c1e: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000c25: 	subq	$0x20, %rax
    00000c29: 	cmpq	%rax, %r14
    00000c2c: 	je	.Ltmp1753 # Offset: 3116
    00000c32: 	leaq	0x10(%r14), %rdi
    00000c36: 	movq	0xb8(%rsp), %r13
    00000c3e: 	movq	%rdi, (%r14)
    00000c41: 	movq	0xb0(%rsp), %r15
    00000c49: 	movq	%r15, %rax
    00000c4c: 	addq	%r13, %rax
    00000c4f: 	je	.Ltmp1754 # Offset: 3151
    00000c51: 	testq	%r15, %r15
    00000c54: 	je	.Ltmp1755 # Offset: 3156
.Ltmp1754:
    00000c5a: 	movq	%r13, 0x88(%rsp)
    00000c62: 	cmpq	$0xf, %r13
    00000c66: 	ja	.Ltmp1756 # Offset: 3174
    00000c6c: 	cmpq	$0x1, %r13
    00000c70: 	jne	.Ltmp1757 # Offset: 3184
    00000c76: 	movzbl	(%r15), %eax
    00000c7a: 	movb	%al, 0x10(%r14)
.Ltmp1897:
    00000c7e: 	movq	%r13, 0x8(%r14)
    00000c82: 	movb	$0x0, (%rdi,%r13)
    00000c87: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c8e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c95: 	addq	$0x20, %rax
    00000c99: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ca0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000ca7: 	je	.Ltmp1758 # Offset: 3239
.Ltmp1873:
    00000cad: 	movq	-0x20(%rax), %r13
    00000cb1: 	callq	clock@PLT # Offset: 3249
    00000cb6: 	pxor	%xmm0, %xmm0
    00000cba: 	movq	%rax, end_time(%rip)
    00000cc1: 	movq	%r13, %rdi
    00000cc4: 	subq	start_time(%rip), %rax
    00000ccb: 	cvtsi2sd	%rax, %xmm0
    00000cd0: 	divsd	DATAat0x17358(%rip), %xmm0
    00000cd8: 	callq	_Z13record_resultdPKc # Offset: 3288
    00000cdd: 	movq	0xb0(%rsp), %rdi
    00000ce5: 	cmpq	0x68(%rsp), %rdi
    00000cea: 	je	.Ltmp1759 # Offset: 3306
    00000cec: 	movq	0xc0(%rsp), %rax
    00000cf4: 	leaq	0x1(%rax), %rsi
    00000cf8: 	callq	_ZdlPvm@PLT # Offset: 3320
.Ltmp1759:
    00000cfd: 	movq	0x70(%rsp), %rsi
    00000d02: 	movq	0x60(%rsp), %rdi
    00000d07: 	leaq	DATAat0x17265(%rip), %rdx
    00000d0e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3342
    00000d13: 	callq	clock@PLT # Offset: 3347
    00000d18: 	movd	%ebp, %xmm5
    00000d1c: 	xorl	%r13d, %r13d
    00000d1f: 	movl	iterations(%rip), %ecx
    00000d25: 	pshufd	$0x0, %xmm5, %xmm6
    00000d2a: 	movq	%rax, start_time(%rip)
    00000d31: 	leaq	DATAat0x171d6(%rip), %r14
    00000d38: 	movaps	%xmm6, (%rsp)
    00000d3c: 	testl	%ecx, %ecx
    00000d3e: 	jle	.Ltmp1760 # Offset: 3390
    00000d44: 	nopl	(%rax) # Size: 4
.Ltmp1763:
    00000d48: 	movdqa	(%rsp), %xmm3
    00000d4d: 	movq	%r12, %rax
    00000d50: 	pxor	%xmm2, %xmm2
    00000d54: 	psrlq	$0x20, %xmm3
    00000d59: 	nopl	(%rax) # Size: 7
.Ltmp1761:
    00000d60: 	movdqa	(%rax), %xmm0
    00000d64: 	movdqa	(%rsp), %xmm1
    00000d69: 	pmuludq	(%rax), %xmm1
    00000d6d: 	pshufd	$0x8, %xmm1, %xmm1
    00000d72: 	addq	$0x10, %rax
    00000d76: 	psrlq	$0x20, %xmm0
    00000d7b: 	pmuludq	%xmm3, %xmm0
    00000d7f: 	pshufd	$0x8, %xmm0, %xmm0
    00000d84: 	punpckldq	%xmm0, %xmm1
    00000d88: 	paddd	%xmm1, %xmm2
    00000d8c: 	cmpq	%rbx, %rax
    00000d8f: 	jne	.Ltmp1761 # Offset: 3471
    00000d91: 	cvttsd2si	init_value(%rip), %esi
    00000d99: 	pshufd	$0x55, %xmm2, %xmm0
    00000d9e: 	movd	%xmm2, %eax
    00000da2: 	movd	%xmm0, %edx
    00000da6: 	movdqa	%xmm2, %xmm0
    00000daa: 	punpckhdq	%xmm2, %xmm0
    00000dae: 	pshufd	$0xff, %xmm2, %xmm2
    00000db3: 	imull	%ebp, %esi
    00000db6: 	imull	$0x1f40, %esi, %esi
    00000dbc: 	subl	%esi, %eax
    00000dbe: 	subl	%esi, %edx
    00000dc0: 	addl	%eax, %edx
    00000dc2: 	movd	%xmm0, %eax
    00000dc6: 	subl	%esi, %eax
    00000dc8: 	addl	%eax, %edx
    00000dca: 	movd	%xmm2, %eax
    00000dce: 	subl	%esi, %eax
    00000dd0: 	addl	%eax, %edx
    00000dd2: 	jne	.Ltmp1762 # Offset: 3538
.Ltmp1868:
    00000dd8: 	addl	$0x1, %r13d
    00000ddc: 	cmpl	%ecx, %r13d
    00000ddf: 	jl	.Ltmp1763 # Offset: 3551
.Ltmp1760:
    00000de5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000dec: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000df3: 	subq	$0x20, %rax
    00000df7: 	cmpq	%rax, %r14
    00000dfa: 	je	.Ltmp1764 # Offset: 3578
    00000e00: 	leaq	0x10(%r14), %rdi
    00000e04: 	movq	0xb8(%rsp), %r13
    00000e0c: 	movq	%rdi, (%r14)
    00000e0f: 	movq	0xb0(%rsp), %r15
    00000e17: 	movq	%r15, %rax
    00000e1a: 	addq	%r13, %rax
    00000e1d: 	je	.Ltmp1765 # Offset: 3613
    00000e1f: 	testq	%r15, %r15
    00000e22: 	je	.Ltmp1766 # Offset: 3618
.Ltmp1765:
    00000e28: 	movq	%r13, 0x88(%rsp)
    00000e30: 	cmpq	$0xf, %r13
    00000e34: 	ja	.Ltmp1767 # Offset: 3636
    00000e3a: 	cmpq	$0x1, %r13
    00000e3e: 	jne	.Ltmp1768 # Offset: 3646
    00000e44: 	movzbl	(%r15), %eax
    00000e48: 	movb	%al, 0x10(%r14)
.Ltmp1905:
    00000e4c: 	movq	%r13, 0x8(%r14)
    00000e50: 	movb	$0x0, (%rdi,%r13)
    00000e55: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e5c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e63: 	addq	$0x20, %rax
    00000e67: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000e6e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000e75: 	je	.Ltmp1769 # Offset: 3701
.Ltmp1869:
    00000e7b: 	movq	-0x20(%rax), %r13
    00000e7f: 	callq	clock@PLT # Offset: 3711
    00000e84: 	pxor	%xmm0, %xmm0
    00000e88: 	movq	%rax, end_time(%rip)
    00000e8f: 	movq	%r13, %rdi
    00000e92: 	subq	start_time(%rip), %rax
    00000e99: 	cvtsi2sd	%rax, %xmm0
    00000e9e: 	divsd	DATAat0x17358(%rip), %xmm0
    00000ea6: 	callq	_Z13record_resultdPKc # Offset: 3750
    00000eab: 	movq	0xb0(%rsp), %rdi
    00000eb3: 	cmpq	0x68(%rsp), %rdi
    00000eb8: 	je	.Ltmp1770 # Offset: 3768
    00000eba: 	movq	0xc0(%rsp), %rax
    00000ec2: 	leaq	0x1(%rax), %rsi
    00000ec6: 	callq	_ZdlPvm@PLT # Offset: 3782
.Ltmp1770:
    00000ecb: 	movq	0x70(%rsp), %rsi
    00000ed0: 	movq	0x60(%rsp), %rdi
    00000ed5: 	leaq	DATAat0x17278(%rip), %rdx
    00000edc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3804
    00000ee1: 	callq	clock@PLT # Offset: 3809
    00000ee6: 	movl	iterations(%rip), %ecx
    00000eec: 	movq	%rax, start_time(%rip)
    00000ef3: 	testl	%ecx, %ecx
    00000ef5: 	jle	.Ltmp1771 # Offset: 3829
    00000efb: 	movl	0x58(%rsp), %r14d
    00000f00: 	xorl	%r13d, %r13d
    00000f03: 	leaq	DATAat0x171d6(%rip), %r15
    00000f0a: 	imull	%ebp, %r14d
    00000f0e: 	imull	0x50(%rsp), %r14d
    00000f14: 	imull	0x40(%rsp), %r14d
    00000f1a: 	movd	%r14d, %xmm4
    00000f1f: 	pshufd	$0x0, %xmm4, %xmm6
    00000f24: 	movaps	%xmm6, (%rsp)
    00000f28: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1774:
    00000f30: 	movdqa	(%rsp), %xmm3
    00000f35: 	movq	%r12, %rax
    00000f38: 	pxor	%xmm2, %xmm2
    00000f3c: 	psrlq	$0x20, %xmm3
    00000f41: 	nopl	(%rax) # Size: 7
.Ltmp1772:
    00000f48: 	movdqa	(%rax), %xmm0
    00000f4c: 	movdqa	(%rsp), %xmm1
    00000f51: 	pmuludq	(%rax), %xmm1
    00000f55: 	pshufd	$0x8, %xmm1, %xmm1
    00000f5a: 	addq	$0x10, %rax
    00000f5e: 	psrlq	$0x20, %xmm0
    00000f63: 	pmuludq	%xmm3, %xmm0
    00000f67: 	pshufd	$0x8, %xmm0, %xmm0
    00000f6c: 	punpckldq	%xmm0, %xmm1
    00000f70: 	paddd	%xmm1, %xmm2
    00000f74: 	cmpq	%rbx, %rax
    00000f77: 	jne	.Ltmp1772 # Offset: 3959
    00000f79: 	cvttsd2si	init_value(%rip), %esi
    00000f81: 	pshufd	$0x55, %xmm2, %xmm0
    00000f86: 	movd	%xmm2, %eax
    00000f8a: 	movd	%xmm0, %edx
    00000f8e: 	movdqa	%xmm2, %xmm0
    00000f92: 	punpckhdq	%xmm2, %xmm0
    00000f96: 	pshufd	$0xff, %xmm2, %xmm2
    00000f9b: 	imull	%r14d, %esi
    00000f9f: 	imull	$0x1f40, %esi, %esi
    00000fa5: 	subl	%esi, %eax
    00000fa7: 	subl	%esi, %edx
    00000fa9: 	addl	%eax, %edx
    00000fab: 	movd	%xmm0, %eax
    00000faf: 	subl	%esi, %eax
    00000fb1: 	addl	%eax, %edx
    00000fb3: 	movd	%xmm2, %eax
    00000fb7: 	subl	%esi, %eax
    00000fb9: 	addl	%eax, %edx
    00000fbb: 	jne	.Ltmp1773 # Offset: 4027
.Ltmp1867:
    00000fc1: 	addl	$0x1, %r13d
    00000fc5: 	cmpl	%ecx, %r13d
    00000fc8: 	jl	.Ltmp1774 # Offset: 4040
.Ltmp1771:
    00000fce: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fd5: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000fdc: 	subq	$0x20, %rax
    00000fe0: 	cmpq	%rax, %r14
    00000fe3: 	je	.Ltmp1775 # Offset: 4067
    00000fe9: 	leaq	0x10(%r14), %rdi
    00000fed: 	movq	0xb8(%rsp), %r13
    00000ff5: 	movq	%rdi, (%r14)
    00000ff8: 	movq	0xb0(%rsp), %r15
    00001000: 	movq	%r15, %rax
    00001003: 	addq	%r13, %rax
    00001006: 	je	.Ltmp1776 # Offset: 4102
    00001008: 	testq	%r15, %r15
    0000100b: 	je	.Ltmp1777 # Offset: 4107
.Ltmp1776:
    00001011: 	movq	%r13, 0x88(%rsp)
    00001019: 	cmpq	$0xf, %r13
    0000101d: 	ja	.Ltmp1778 # Offset: 4125
    00001023: 	cmpq	$0x1, %r13
    00001027: 	jne	.Ltmp1779 # Offset: 4135
    0000102d: 	movzbl	(%r15), %eax
    00001031: 	movb	%al, 0x10(%r14)
.Ltmp1898:
    00001035: 	movq	%r13, 0x8(%r14)
    00001039: 	movb	$0x0, (%rdi,%r13)
    0000103e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001045: 	addq	$0x20, %rax
    00001049: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1886:
    00001050: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001057: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000105e: 	je	.Ltmp1780 # Offset: 4190
.Ltmp1885:
    00001064: 	movq	-0x20(%rax), %r13
    00001068: 	callq	clock@PLT # Offset: 4200
    0000106d: 	pxor	%xmm0, %xmm0
    00001071: 	movq	%rax, end_time(%rip)
    00001078: 	movq	%r13, %rdi
    0000107b: 	subq	start_time(%rip), %rax
    00001082: 	cvtsi2sd	%rax, %xmm0
    00001087: 	divsd	DATAat0x17358(%rip), %xmm0
    0000108f: 	callq	_Z13record_resultdPKc # Offset: 4239
    00001094: 	movq	0xb0(%rsp), %rdi
    0000109c: 	cmpq	0x68(%rsp), %rdi
    000010a1: 	je	.Ltmp1781 # Offset: 4257
    000010a3: 	movq	0xc0(%rsp), %rax
    000010ab: 	leaq	0x1(%rax), %rsi
    000010af: 	callq	_ZdlPvm@PLT # Offset: 4271
.Ltmp1781:
    000010b4: 	movq	0x70(%rsp), %rsi
    000010b9: 	movq	0x60(%rsp), %rdi
    000010be: 	leaq	DATAat0x17308(%rip), %rdx
    000010c5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4293
    000010ca: 	callq	clock@PLT # Offset: 4298
    000010cf: 	movl	iterations(%rip), %ecx
    000010d5: 	movq	%rax, start_time(%rip)
    000010dc: 	testl	%ecx, %ecx
    000010de: 	jle	.Ltmp1782 # Offset: 4318
    000010e4: 	movl	0x58(%rsp), %r14d
    000010e9: 	xorl	%r13d, %r13d
    000010ec: 	leaq	DATAat0x171d6(%rip), %r15
    000010f3: 	imull	%ebp, %r14d
    000010f7: 	imull	0x50(%rsp), %r14d
    000010fd: 	imull	0x40(%rsp), %r14d
    00001103: 	movd	%r14d, %xmm6
    00001108: 	pshufd	$0x0, %xmm6, %xmm5
    0000110d: 	movaps	%xmm5, (%rsp)
    00001111: 	nopl	(%rax) # Size: 7
.Ltmp1785:
    00001118: 	movq	%r12, %rax
    0000111b: 	pxor	%xmm0, %xmm0
    0000111f: 	nop # Size: 1
.Ltmp1783:
    00001120: 	movdqa	(%rsp), %xmm1
    00001125: 	paddd	(%rax), %xmm1
    00001129: 	addq	$0x10, %rax
    0000112d: 	paddd	%xmm1, %xmm0
    00001131: 	cmpq	%rbx, %rax
    00001134: 	jne	.Ltmp1783 # Offset: 4404
    00001136: 	cvttsd2si	init_value(%rip), %esi
    0000113e: 	pshufd	$0x55, %xmm0, %xmm1
    00001143: 	movd	%xmm0, %eax
    00001147: 	movd	%xmm1, %edx
    0000114b: 	movdqa	%xmm0, %xmm1
    0000114f: 	punpckhdq	%xmm0, %xmm1
    00001153: 	pshufd	$0xff, %xmm0, %xmm0
    00001158: 	addl	%r14d, %esi
    0000115b: 	imull	$0x1f40, %esi, %esi
    00001161: 	subl	%esi, %eax
    00001163: 	subl	%esi, %edx
    00001165: 	addl	%eax, %edx
    00001167: 	movd	%xmm1, %eax
    0000116b: 	subl	%esi, %eax
    0000116d: 	addl	%eax, %edx
    0000116f: 	movd	%xmm0, %eax
    00001173: 	subl	%esi, %eax
    00001175: 	addl	%eax, %edx
    00001177: 	jne	.Ltmp1784 # Offset: 4471
.Ltmp1866:
    0000117d: 	addl	$0x1, %r13d
    00001181: 	cmpl	%ecx, %r13d
    00001184: 	jl	.Ltmp1785 # Offset: 4484
.Ltmp1782:
    00001186: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000118d: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001194: 	subq	$0x20, %rax
    00001198: 	cmpq	%rax, %r14
    0000119b: 	je	.Ltmp1786 # Offset: 4507
    000011a1: 	leaq	0x10(%r14), %rdi
    000011a5: 	movq	0xb8(%rsp), %r13
    000011ad: 	movq	%rdi, (%r14)
    000011b0: 	movq	0xb0(%rsp), %r15
    000011b8: 	movq	%r15, %rax
    000011bb: 	addq	%r13, %rax
    000011be: 	je	.Ltmp1787 # Offset: 4542
    000011c0: 	testq	%r15, %r15
    000011c3: 	je	.Ltmp1788 # Offset: 4547
.Ltmp1787:
    000011c9: 	movq	%r13, 0x88(%rsp)
    000011d1: 	cmpq	$0xf, %r13
    000011d5: 	ja	.Ltmp1789 # Offset: 4565
    000011db: 	cmpq	$0x1, %r13
    000011df: 	jne	.Ltmp1790 # Offset: 4575
    000011e5: 	movzbl	(%r15), %eax
    000011e9: 	movb	%al, 0x10(%r14)
.Ltmp1903:
    000011ed: 	movq	%r13, 0x8(%r14)
    000011f1: 	movb	$0x0, (%rdi,%r13)
    000011f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011fd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001204: 	addq	$0x20, %rax
    00001208: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000120f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001216: 	je	.Ltmp1791 # Offset: 4630
.Ltmp1882:
    0000121c: 	movq	-0x20(%rax), %r13
    00001220: 	callq	clock@PLT # Offset: 4640
    00001225: 	pxor	%xmm0, %xmm0
    00001229: 	movq	%rax, end_time(%rip)
    00001230: 	movq	%r13, %rdi
    00001233: 	subq	start_time(%rip), %rax
    0000123a: 	cvtsi2sd	%rax, %xmm0
    0000123f: 	divsd	DATAat0x17358(%rip), %xmm0
    00001247: 	callq	_Z13record_resultdPKc # Offset: 4679
    0000124c: 	movq	0xb0(%rsp), %rdi
    00001254: 	cmpq	0x68(%rsp), %rdi
    00001259: 	je	.Ltmp1792 # Offset: 4697
    0000125b: 	movq	0xc0(%rsp), %rax
    00001263: 	leaq	0x1(%rax), %rsi
    00001267: 	callq	_ZdlPvm@PLT # Offset: 4711
.Ltmp1792:
    0000126c: 	movq	0x70(%rsp), %rsi
    00001271: 	movq	0x60(%rsp), %rdi
    00001276: 	leaq	DATAat0x17328(%rip), %rdx
    0000127d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4733
    00001282: 	callq	clock@PLT # Offset: 4738
    00001287: 	movl	iterations(%rip), %ecx
    0000128d: 	movq	%rax, start_time(%rip)
    00001294: 	testl	%ecx, %ecx
    00001296: 	jle	.Ltmp1793 # Offset: 4758
    0000129c: 	movd	%ebp, %xmm5
    000012a0: 	xorl	%r13d, %r13d
    000012a3: 	leaq	DATAat0x171d6(%rip), %r14
    000012aa: 	pshufd	$0x0, %xmm5, %xmm4
    000012af: 	movaps	%xmm4, (%rsp)
    000012b3: 	movd	0x40(%rsp), %xmm4
    000012b9: 	pshufd	$0x0, %xmm4, %xmm6
    000012be: 	movaps	%xmm6, 0x10(%rsp)
    000012c3: 	movd	0x50(%rsp), %xmm6
    000012c9: 	pshufd	$0x0, %xmm6, %xmm5
    000012ce: 	movaps	%xmm5, 0x20(%rsp)
    000012d3: 	movd	0x58(%rsp), %xmm5
    000012d9: 	pshufd	$0x0, %xmm5, %xmm4
    000012de: 	movaps	%xmm4, 0x30(%rsp)
    000012e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1796:
    000012e8: 	movdqa	(%rsp), %xmm6
    000012ed: 	movdqa	0x30(%rsp), %xmm5
    000012f3: 	movq	%r12, %rax
    000012f6: 	pxor	%xmm2, %xmm2
    000012fa: 	movdqa	0x20(%rsp), %xmm4
    00001300: 	movdqa	0x10(%rsp), %xmm3
    00001306: 	psrlq	$0x20, %xmm6
    0000130b: 	psrlq	$0x20, %xmm5
    00001310: 	psrlq	$0x20, %xmm4
    00001315: 	psrlq	$0x20, %xmm3
    0000131a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1794:
    00001320: 	movdqa	(%rax), %xmm1
    00001324: 	movdqa	(%rsp), %xmm0
    00001329: 	pmuludq	(%rax), %xmm0
    0000132d: 	pshufd	$0x8, %xmm0, %xmm0
    00001332: 	addq	$0x10, %rax
    00001336: 	psrlq	$0x20, %xmm1
    0000133b: 	pmuludq	%xmm6, %xmm1
    0000133f: 	pshufd	$0x8, %xmm1, %xmm1
    00001344: 	punpckldq	%xmm1, %xmm0
    00001348: 	movdqa	0x30(%rsp), %xmm1
    0000134e: 	pmuludq	%xmm0, %xmm1
    00001352: 	psrlq	$0x20, %xmm0
    00001357: 	pmuludq	%xmm5, %xmm0
    0000135b: 	pshufd	$0x8, %xmm1, %xmm1
    00001360: 	pshufd	$0x8, %xmm0, %xmm0
    00001365: 	punpckldq	%xmm0, %xmm1
    00001369: 	movdqa	0x20(%rsp), %xmm0
    0000136f: 	pmuludq	%xmm1, %xmm0
    00001373: 	psrlq	$0x20, %xmm1
    00001378: 	pmuludq	%xmm4, %xmm1
    0000137c: 	pshufd	$0x8, %xmm0, %xmm0
    00001381: 	pshufd	$0x8, %xmm1, %xmm1
    00001386: 	punpckldq	%xmm1, %xmm0
    0000138a: 	movdqa	0x10(%rsp), %xmm1
    00001390: 	pmuludq	%xmm0, %xmm1
    00001394: 	psrlq	$0x20, %xmm0
    00001399: 	pmuludq	%xmm3, %xmm0
    0000139d: 	pshufd	$0x8, %xmm1, %xmm1
    000013a2: 	pshufd	$0x8, %xmm0, %xmm0
    000013a7: 	punpckldq	%xmm0, %xmm1
    000013ab: 	paddd	%xmm1, %xmm2
    000013af: 	cmpq	%rbx, %rax
    000013b2: 	jne	.Ltmp1794 # Offset: 5042
    000013b8: 	cvttsd2si	init_value(%rip), %esi
    000013c0: 	pshufd	$0x55, %xmm2, %xmm0
    000013c5: 	movd	%xmm2, %eax
    000013c9: 	movd	%xmm0, %edx
    000013cd: 	movdqa	%xmm2, %xmm0
    000013d1: 	punpckhdq	%xmm2, %xmm0
    000013d5: 	pshufd	$0xff, %xmm2, %xmm2
    000013da: 	imull	%ebp, %esi
    000013dd: 	imull	0x58(%rsp), %esi
    000013e2: 	imull	0x50(%rsp), %esi
    000013e7: 	imull	0x40(%rsp), %esi
    000013ec: 	imull	$0x1f40, %esi, %esi
    000013f2: 	subl	%esi, %eax
    000013f4: 	subl	%esi, %edx
    000013f6: 	addl	%eax, %edx
    000013f8: 	movd	%xmm0, %eax
    000013fc: 	subl	%esi, %eax
    000013fe: 	addl	%eax, %edx
    00001400: 	movd	%xmm2, %eax
    00001404: 	subl	%esi, %eax
    00001406: 	addl	%eax, %edx
    00001408: 	jne	.Ltmp1795 # Offset: 5128
.Ltmp1865:
    0000140e: 	addl	$0x1, %r13d
    00001412: 	cmpl	%ecx, %r13d
    00001415: 	jl	.Ltmp1796 # Offset: 5141
.Ltmp1793:
    0000141b: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001422: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001429: 	subq	$0x20, %rax
    0000142d: 	cmpq	%rax, %r14
    00001430: 	je	.Ltmp1797 # Offset: 5168
    00001436: 	leaq	0x10(%r14), %rdi
    0000143a: 	movq	0xb8(%rsp), %r13
    00001442: 	movq	%rdi, (%r14)
    00001445: 	movq	0xb0(%rsp), %r15
    0000144d: 	movq	%r15, %rax
    00001450: 	addq	%r13, %rax
    00001453: 	je	.Ltmp1798 # Offset: 5203
    00001455: 	testq	%r15, %r15
    00001458: 	je	.Ltmp1799 # Offset: 5208
.Ltmp1798:
    0000145e: 	movq	%r13, 0x88(%rsp)
    00001466: 	cmpq	$0xf, %r13
    0000146a: 	ja	.Ltmp1800 # Offset: 5226
    00001470: 	cmpq	$0x1, %r13
    00001474: 	jne	.Ltmp1801 # Offset: 5236
    0000147a: 	movzbl	(%r15), %eax
    0000147e: 	movb	%al, 0x10(%r14)
.Ltmp1892:
    00001482: 	movq	%r13, 0x8(%r14)
    00001486: 	movb	$0x0, (%rdi,%r13)
    0000148b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001492: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001499: 	addq	$0x20, %rax
    0000149d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014a4: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000014ab: 	je	.Ltmp1802 # Offset: 5291
.Ltmp1888:
    000014b1: 	movq	-0x20(%rax), %r13
    000014b5: 	callq	clock@PLT # Offset: 5301
    000014ba: 	pxor	%xmm0, %xmm0
    000014be: 	movq	%rax, end_time(%rip)
    000014c5: 	movq	%r13, %rdi
    000014c8: 	subq	start_time(%rip), %rax
    000014cf: 	cvtsi2sd	%rax, %xmm0
    000014d4: 	divsd	DATAat0x17358(%rip), %xmm0
    000014dc: 	callq	_Z13record_resultdPKc # Offset: 5340
    000014e1: 	movq	0xb0(%rsp), %rdi
    000014e9: 	cmpq	0x68(%rsp), %rdi
    000014ee: 	je	.Ltmp1803 # Offset: 5358
    000014f0: 	movq	0xc0(%rsp), %rax
    000014f8: 	leaq	0x1(%rax), %rsi
    000014fc: 	callq	_ZdlPvm@PLT # Offset: 5372
.Ltmp1803:
    00001501: 	movq	0x70(%rsp), %rsi
    00001506: 	movq	0x60(%rsp), %rdi
    0000150b: 	leaq	DATAat0x17296(%rip), %rdx
    00001512: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5394
    00001517: 	callq	clock@PLT # Offset: 5399
    0000151c: 	movl	iterations(%rip), %r10d
    00001523: 	xorl	%r13d, %r13d
    00001526: 	leaq	DATAat0x171d6(%rip), %r14
    0000152d: 	movq	%rax, start_time(%rip)
    00001534: 	testl	%r10d, %r10d
    00001537: 	jle	.Ltmp1804 # Offset: 5431
    00001539: 	nopl	(%rax) # Size: 7
.Ltmp1807:
    00001540: 	movq	%r12, %rcx
    00001543: 	xorl	%edi, %edi
    00001545: 	xorl	%r8d, %r8d
    00001548: 	xorl	%esi, %esi
    0000154a: 	xorl	%r9d, %r9d
    0000154d: 	nopl	(%rax) # Size: 3
.Ltmp1805:
    00001550: 	movl	(%rcx), %eax
    00001552: 	addq	$0x10, %rcx
    00001556: 	cltd
    00001557: 	idivl	%ebp
    00001559: 	addl	%eax, %r9d
    0000155c: 	movl	-0xc(%rcx), %eax
    0000155f: 	cltd
    00001560: 	idivl	%ebp
    00001562: 	addl	%eax, %esi
    00001564: 	movl	-0x8(%rcx), %eax
    00001567: 	cltd
    00001568: 	idivl	%ebp
    0000156a: 	addl	%eax, %r8d
    0000156d: 	movl	-0x4(%rcx), %eax
    00001570: 	cltd
    00001571: 	idivl	%ebp
    00001573: 	addl	%eax, %edi
    00001575: 	cmpq	%rbx, %rcx
    00001578: 	jne	.Ltmp1805 # Offset: 5496
    0000157a: 	cvttsd2si	init_value(%rip), %eax
    00001582: 	cltd
    00001583: 	idivl	%ebp
    00001585: 	imull	$0x1f40, %eax, %eax
    0000158b: 	subl	%eax, %esi
    0000158d: 	subl	%eax, %r9d
    00001590: 	subl	%eax, %r8d
    00001593: 	subl	%eax, %edi
    00001595: 	addl	%r9d, %esi
    00001598: 	addl	%esi, %r8d
    0000159b: 	addl	%edi, %r8d
    0000159e: 	jne	.Ltmp1806 # Offset: 5534
.Ltmp1864:
    000015a4: 	addl	$0x1, %r13d
    000015a8: 	cmpl	%r10d, %r13d
    000015ab: 	jl	.Ltmp1807 # Offset: 5547
.Ltmp1804:
    000015ad: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015b4: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000015bb: 	subq	$0x20, %rax
    000015bf: 	cmpq	%rax, %r14
    000015c2: 	je	.Ltmp1808 # Offset: 5570
    000015c8: 	leaq	0x10(%r14), %rdi
    000015cc: 	movq	0xb8(%rsp), %r13
    000015d4: 	movq	%rdi, (%r14)
    000015d7: 	movq	0xb0(%rsp), %r15
    000015df: 	movq	%r15, %rax
    000015e2: 	addq	%r13, %rax
    000015e5: 	je	.Ltmp1809 # Offset: 5605
    000015e7: 	testq	%r15, %r15
    000015ea: 	je	.Ltmp1810 # Offset: 5610
.Ltmp1809:
    000015f0: 	movq	%r13, 0x88(%rsp)
    000015f8: 	cmpq	$0xf, %r13
    000015fc: 	ja	.Ltmp1811 # Offset: 5628
    00001602: 	cmpq	$0x1, %r13
    00001606: 	jne	.Ltmp1812 # Offset: 5638
    0000160c: 	movzbl	(%r15), %eax
    00001610: 	movb	%al, 0x10(%r14)
.Ltmp1891:
    00001614: 	movq	%r13, 0x8(%r14)
    00001618: 	movb	$0x0, (%rdi,%r13)
    0000161d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001624: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000162b: 	addq	$0x20, %rax
    0000162f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001636: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000163d: 	je	.Ltmp1813 # Offset: 5693
.Ltmp1887:
    00001643: 	movq	-0x20(%rax), %r13
    00001647: 	callq	clock@PLT # Offset: 5703
    0000164c: 	pxor	%xmm0, %xmm0
    00001650: 	movq	%rax, end_time(%rip)
    00001657: 	movq	%r13, %rdi
    0000165a: 	subq	start_time(%rip), %rax
    00001661: 	cvtsi2sd	%rax, %xmm0
    00001666: 	divsd	DATAat0x17358(%rip), %xmm0
    0000166e: 	callq	_Z13record_resultdPKc # Offset: 5742
    00001673: 	movq	0xb0(%rsp), %rdi
    0000167b: 	cmpq	0x68(%rsp), %rdi
    00001680: 	je	.Ltmp1814 # Offset: 5760
    00001682: 	movq	0xc0(%rsp), %rax
    0000168a: 	leaq	0x1(%rax), %rsi
    0000168e: 	callq	_ZdlPvm@PLT # Offset: 5774
.Ltmp1814:
    00001693: 	movq	0x70(%rsp), %rsi
    00001698: 	movq	0x60(%rsp), %rdi
    0000169d: 	leaq	DATAat0x172a7(%rip), %rdx
    000016a4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5796
    000016a9: 	callq	clock@PLT # Offset: 5801
    000016ae: 	movl	iterations(%rip), %ecx
    000016b4: 	movq	%rax, start_time(%rip)
    000016bb: 	testl	%ecx, %ecx
    000016bd: 	jle	.Ltmp1815 # Offset: 5821
    000016c3: 	movl	%ebp, %eax
    000016c5: 	xorl	%r13d, %r13d
    000016c8: 	leaq	DATAat0x171d6(%rip), %r15
    000016cf: 	cltd
    000016d0: 	idivl	0x58(%rsp)
    000016d4: 	cltd
    000016d5: 	idivl	0x50(%rsp)
    000016d9: 	cltd
    000016da: 	idivl	0x40(%rsp)
    000016de: 	movd	%eax, %xmm4
    000016e2: 	movl	%eax, %r14d
    000016e5: 	pshufd	$0x0, %xmm4, %xmm6
    000016ea: 	movaps	%xmm6, (%rsp)
    000016ee: 	nop # Size: 2
.Ltmp1818:
    000016f0: 	movq	%r12, %rax
    000016f3: 	pxor	%xmm0, %xmm0
    000016f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1816:
    00001700: 	movdqa	(%rsp), %xmm1
    00001705: 	paddd	(%rax), %xmm1
    00001709: 	addq	$0x10, %rax
    0000170d: 	paddd	%xmm1, %xmm0
    00001711: 	cmpq	%rbx, %rax
    00001714: 	jne	.Ltmp1816 # Offset: 5908
    00001716: 	cvttsd2si	init_value(%rip), %esi
    0000171e: 	pshufd	$0x55, %xmm0, %xmm1
    00001723: 	movd	%xmm0, %eax
    00001727: 	movd	%xmm1, %edx
    0000172b: 	movdqa	%xmm0, %xmm1
    0000172f: 	punpckhdq	%xmm0, %xmm1
    00001733: 	pshufd	$0xff, %xmm0, %xmm0
    00001738: 	addl	%r14d, %esi
    0000173b: 	imull	$0x1f40, %esi, %esi
    00001741: 	subl	%esi, %eax
    00001743: 	subl	%esi, %edx
    00001745: 	addl	%eax, %edx
    00001747: 	movd	%xmm1, %eax
    0000174b: 	subl	%esi, %eax
    0000174d: 	addl	%eax, %edx
    0000174f: 	movd	%xmm0, %eax
    00001753: 	subl	%esi, %eax
    00001755: 	addl	%eax, %edx
    00001757: 	jne	.Ltmp1817 # Offset: 5975
.Ltmp1863:
    0000175d: 	addl	$0x1, %r13d
    00001761: 	cmpl	%ecx, %r13d
    00001764: 	jl	.Ltmp1818 # Offset: 5988
.Ltmp1815:
    00001766: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000176d: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001774: 	subq	$0x20, %rax
    00001778: 	cmpq	%rax, %r14
    0000177b: 	je	.Ltmp1819 # Offset: 6011
    00001781: 	leaq	0x10(%r14), %rdi
    00001785: 	movq	0xb8(%rsp), %r13
    0000178d: 	movq	%rdi, (%r14)
    00001790: 	movq	0xb0(%rsp), %r15
    00001798: 	movq	%r15, %rax
    0000179b: 	addq	%r13, %rax
    0000179e: 	je	.Ltmp1820 # Offset: 6046
    000017a0: 	testq	%r15, %r15
    000017a3: 	je	.Ltmp1821 # Offset: 6051
.Ltmp1820:
    000017a9: 	movq	%r13, 0x88(%rsp)
    000017b1: 	cmpq	$0xf, %r13
    000017b5: 	ja	.Ltmp1822 # Offset: 6069
    000017bb: 	cmpq	$0x1, %r13
    000017bf: 	jne	.Ltmp1823 # Offset: 6079
    000017c5: 	movzbl	(%r15), %eax
    000017c9: 	movb	%al, 0x10(%r14)
.Ltmp1894:
    000017cd: 	movq	%r13, 0x8(%r14)
    000017d1: 	movb	$0x0, (%rdi,%r13)
    000017d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017dd: 	addq	$0x20, %rax
    000017e1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1890:
    000017e8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000017ef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017f6: 	je	.Ltmp1824 # Offset: 6134
.Ltmp1889:
    000017fc: 	movq	-0x20(%rax), %r13
    00001800: 	callq	clock@PLT # Offset: 6144
    00001805: 	pxor	%xmm0, %xmm0
    00001809: 	movq	%rax, end_time(%rip)
    00001810: 	movq	%r13, %rdi
    00001813: 	subq	start_time(%rip), %rax
    0000181a: 	cvtsi2sd	%rax, %xmm0
    0000181f: 	divsd	DATAat0x17358(%rip), %xmm0
    00001827: 	callq	_Z13record_resultdPKc # Offset: 6183
    0000182c: 	movq	0xb0(%rsp), %rdi
    00001834: 	cmpq	0x68(%rsp), %rdi
    00001839: 	je	.Ltmp1825 # Offset: 6201
    0000183b: 	movq	0xc0(%rsp), %rax
    00001843: 	leaq	0x1(%rax), %rsi
    00001847: 	callq	_ZdlPvm@PLT # Offset: 6215
.Ltmp1825:
    0000184c: 	movq	0x70(%rsp), %rsi
    00001851: 	movq	0x60(%rsp), %rdi
    00001856: 	leaq	DATAat0x172c3(%rip), %rdx
    0000185d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6237
    00001862: 	callq	clock@PLT # Offset: 6242
    00001867: 	movl	iterations(%rip), %ecx
    0000186d: 	movq	%rax, start_time(%rip)
    00001874: 	testl	%ecx, %ecx
    00001876: 	jle	.Ltmp1826 # Offset: 6262
    0000187c: 	movl	0x50(%rsp), %eax
    00001880: 	imull	0x58(%rsp), %eax
    00001885: 	movl	%ebp, %r14d
    00001888: 	xorl	%r13d, %r13d
    0000188b: 	leaq	DATAat0x171d6(%rip), %r15
    00001892: 	cltd
    00001893: 	idivl	0x40(%rsp)
    00001897: 	subl	%eax, %r14d
    0000189a: 	movd	%r14d, %xmm5
    0000189f: 	pshufd	$0x0, %xmm5, %xmm2
    000018a4: 	movaps	%xmm2, (%rsp)
    000018a8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1829:
    000018b0: 	movq	%r12, %rax
    000018b3: 	pxor	%xmm0, %xmm0
    000018b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1827:
    000018c0: 	movdqa	(%rsp), %xmm1
    000018c5: 	paddd	(%rax), %xmm1
    000018c9: 	addq	$0x10, %rax
    000018cd: 	paddd	%xmm1, %xmm0
    000018d1: 	cmpq	%rbx, %rax
    000018d4: 	jne	.Ltmp1827 # Offset: 6356
    000018d6: 	cvttsd2si	init_value(%rip), %esi
    000018de: 	pshufd	$0x55, %xmm0, %xmm1
    000018e3: 	movd	%xmm0, %eax
    000018e7: 	movd	%xmm1, %edx
    000018eb: 	movdqa	%xmm0, %xmm1
    000018ef: 	punpckhdq	%xmm0, %xmm1
    000018f3: 	pshufd	$0xff, %xmm0, %xmm0
    000018f8: 	addl	%r14d, %esi
    000018fb: 	imull	$0x1f40, %esi, %esi
    00001901: 	subl	%esi, %eax
    00001903: 	subl	%esi, %edx
    00001905: 	addl	%eax, %edx
    00001907: 	movd	%xmm1, %eax
    0000190b: 	subl	%esi, %eax
    0000190d: 	addl	%eax, %edx
    0000190f: 	movd	%xmm0, %eax
    00001913: 	subl	%esi, %eax
    00001915: 	addl	%eax, %edx
    00001917: 	jne	.Ltmp1828 # Offset: 6423
.Ltmp1857:
    0000191d: 	addl	$0x1, %r13d
    00001921: 	cmpl	%ecx, %r13d
    00001924: 	jl	.Ltmp1829 # Offset: 6436
.Ltmp1826:
    00001926: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000192d: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001934: 	subq	$0x20, %rax
    00001938: 	cmpq	%rax, %r14
    0000193b: 	je	.Ltmp1830 # Offset: 6459
    00001941: 	leaq	0x10(%r14), %rdi
    00001945: 	movq	0xb8(%rsp), %r13
    0000194d: 	movq	%rdi, (%r14)
    00001950: 	movq	0xb0(%rsp), %r15
    00001958: 	movq	%r15, %rax
    0000195b: 	addq	%r13, %rax
    0000195e: 	je	.Ltmp1831 # Offset: 6494
    00001960: 	testq	%r15, %r15
    00001963: 	je	.Ltmp1832 # Offset: 6499
.Ltmp1831:
    00001969: 	movq	%r13, 0x88(%rsp)
    00001971: 	cmpq	$0xf, %r13
    00001975: 	ja	.Ltmp1833 # Offset: 6517
    0000197b: 	cmpq	$0x1, %r13
    0000197f: 	jne	.Ltmp1834 # Offset: 6527
    00001985: 	movzbl	(%r15), %eax
    00001989: 	movb	%al, 0x10(%r14)
.Ltmp1911:
    0000198d: 	movq	%r13, 0x8(%r14)
    00001991: 	movb	$0x0, (%rdi,%r13)
    00001996: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000199d: 	addq	$0x20, %rax
    000019a1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1879:
    000019a8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019af: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019b6: 	je	.Ltmp1835 # Offset: 6582
.Ltmp1878:
    000019bc: 	movq	-0x20(%rax), %r13
    000019c0: 	callq	clock@PLT # Offset: 6592
    000019c5: 	pxor	%xmm0, %xmm0
    000019c9: 	movq	%rax, end_time(%rip)
    000019d0: 	movq	%r13, %rdi
    000019d3: 	subq	start_time(%rip), %rax
    000019da: 	cvtsi2sd	%rax, %xmm0
    000019df: 	divsd	DATAat0x17358(%rip), %xmm0
    000019e7: 	callq	_Z13record_resultdPKc # Offset: 6631
    000019ec: 	movq	0xb0(%rsp), %rdi
    000019f4: 	cmpq	0x68(%rsp), %rdi
    000019f9: 	je	.Ltmp1836 # Offset: 6649
    000019fb: 	movq	0xc0(%rsp), %rax
    00001a03: 	leaq	0x1(%rax), %rsi
    00001a07: 	callq	_ZdlPvm@PLT # Offset: 6663
.Ltmp1836:
    00001a0c: 	movq	0x70(%rsp), %rsi
    00001a11: 	movq	0x60(%rsp), %rdi
    00001a16: 	leaq	DATAat0x172dc(%rip), %rdx
    00001a1d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6685
    00001a22: 	callq	clock@PLT # Offset: 6690
    00001a27: 	movl	iterations(%rip), %ecx
    00001a2d: 	movq	%rax, start_time(%rip)
    00001a34: 	testl	%ecx, %ecx
    00001a36: 	jle	.Ltmp1837 # Offset: 6710
    00001a3c: 	movl	0x50(%rsp), %eax
    00001a40: 	imull	0x58(%rsp), %eax
    00001a45: 	movd	%ebp, %xmm4
    00001a49: 	xorl	%r14d, %r14d
    00001a4c: 	pshufd	$0x0, %xmm4, %xmm6
    00001a51: 	leaq	DATAat0x171d6(%rip), %r15
    00001a58: 	movaps	%xmm6, (%rsp)
    00001a5c: 	cltd
    00001a5d: 	idivl	0x40(%rsp)
    00001a61: 	movd	%eax, %xmm5
    00001a65: 	movl	%eax, %r13d
    00001a68: 	pshufd	$0x0, %xmm5, %xmm2
    00001a6d: 	movaps	%xmm2, 0x10(%rsp)
    00001a72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1840:
    00001a78: 	movq	%r12, %rax
    00001a7b: 	pxor	%xmm1, %xmm1
    00001a7f: 	nop # Size: 1
.Ltmp1838:
    00001a80: 	movdqa	(%rsp), %xmm0
    00001a85: 	paddd	(%rax), %xmm0
    00001a89: 	addq	$0x10, %rax
    00001a8d: 	psubd	0x10(%rsp), %xmm0
    00001a93: 	paddd	%xmm0, %xmm1
    00001a97: 	cmpq	%rbx, %rax
    00001a9a: 	jne	.Ltmp1838 # Offset: 6810
    00001a9c: 	cvttsd2si	init_value(%rip), %esi
    00001aa4: 	pshufd	$0x55, %xmm1, %xmm0
    00001aa9: 	movd	%xmm1, %eax
    00001aad: 	movd	%xmm0, %edx
    00001ab1: 	movdqa	%xmm1, %xmm0
    00001ab5: 	punpckhdq	%xmm1, %xmm0
    00001ab9: 	pshufd	$0xff, %xmm1, %xmm1
    00001abe: 	addl	%ebp, %esi
    00001ac0: 	subl	%r13d, %esi
    00001ac3: 	imull	$0x1f40, %esi, %esi
    00001ac9: 	subl	%esi, %eax
    00001acb: 	subl	%esi, %edx
    00001acd: 	addl	%eax, %edx
    00001acf: 	movd	%xmm0, %eax
    00001ad3: 	subl	%esi, %eax
    00001ad5: 	addl	%eax, %edx
    00001ad7: 	movd	%xmm1, %eax
    00001adb: 	subl	%esi, %eax
    00001add: 	addl	%eax, %edx
    00001adf: 	jne	.Ltmp1839 # Offset: 6879
.Ltmp1856:
    00001ae5: 	addl	$0x1, %r14d
    00001ae9: 	cmpl	%ecx, %r14d
    00001aec: 	jl	.Ltmp1840 # Offset: 6892
.Ltmp1837:
    00001aee: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001af5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001afc: 	subq	$0x20, %rax
    00001b00: 	cmpq	%rax, %rbx
    00001b03: 	je	.Ltmp1841 # Offset: 6915
    00001b09: 	leaq	0x10(%rbx), %rdi
    00001b0d: 	movq	0xb8(%rsp), %r12
    00001b15: 	movq	%rdi, (%rbx)
    00001b18: 	movq	0xb0(%rsp), %rbp
    00001b20: 	movq	%rbp, %rax
    00001b23: 	addq	%r12, %rax
    00001b26: 	je	.Ltmp1842 # Offset: 6950
    00001b28: 	testq	%rbp, %rbp
    00001b2b: 	je	.Ltmp1843 # Offset: 6955
.Ltmp1842:
    00001b31: 	movq	%r12, 0x88(%rsp)
    00001b39: 	cmpq	$0xf, %r12
    00001b3d: 	ja	.Ltmp1844 # Offset: 6973
    00001b43: 	cmpq	$0x1, %r12
    00001b47: 	jne	.Ltmp1845 # Offset: 6983
    00001b4d: 	movzbl	(%rbp), %eax
    00001b51: 	movb	%al, 0x10(%rbx)
.Ltmp1907:
    00001b54: 	movq	%r12, 0x8(%rbx)
    00001b58: 	movb	$0x0, (%rdi,%r12)
    00001b5d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b64: 	addq	$0x20, %rax
    00001b68: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1881:
    00001b6f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b7d: 	je	.Ltmp1846 # Offset: 7037
.Ltmp1880:
    00001b83: 	movq	-0x20(%rax), %rbp
    00001b87: 	callq	clock@PLT # Offset: 7047
    00001b8c: 	pxor	%xmm0, %xmm0
    00001b90: 	movq	%rax, end_time(%rip)
    00001b97: 	movq	%rbp, %rdi
    00001b9a: 	subq	start_time(%rip), %rax
    00001ba1: 	cvtsi2sd	%rax, %xmm0
    00001ba6: 	divsd	DATAat0x17358(%rip), %xmm0
    00001bae: 	callq	_Z13record_resultdPKc # Offset: 7086
    00001bb3: 	movq	0xb0(%rsp), %rdi
    00001bbb: 	cmpq	0x68(%rsp), %rdi
    00001bc0: 	je	.Ltmp1847 # Offset: 7104
    00001bc2: 	movq	0xc0(%rsp), %rax
    00001bca: 	leaq	0x1(%rax), %rsi
    00001bce: 	callq	_ZdlPvm@PLT # Offset: 7118
.Ltmp1847:
    00001bd3: 	movq	0x70(%rsp), %rsi
    00001bd8: 	movq	0x60(%rsp), %rdi
    00001bdd: 	leaq	DATAat0x172f6(%rip), %rdx
    00001be4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7140
    00001be9: 	movl	iterations(%rip), %edx
    00001bef: 	xorl	%r8d, %r8d
    00001bf2: 	xorl	%ecx, %ecx
    00001bf4: 	movl	$0x1f40, %esi
    00001bf9: 	movq	0xb0(%rsp), %rdi
    00001c01: 	callq	_Z9summarizePKciiii # Offset: 7169
    00001c06: 	movq	0xb0(%rsp), %rdi
    00001c0e: 	cmpq	0x68(%rsp), %rdi
    00001c13: 	je	.Ltmp1848 # Offset: 7187
    00001c15: 	movq	0xc0(%rsp), %rax
    00001c1d: 	leaq	0x1(%rax), %rsi
    00001c21: 	callq	_ZdlPvm@PLT # Offset: 7201
.Ltmp1848:
    00001c26: 	movq	0x90(%rsp), %rdi
    00001c2e: 	cmpq	0x78(%rsp), %rdi
    00001c33: 	je	.Ltmp1849 # Offset: 7219
    00001c35: 	movq	0xa0(%rsp), %rax
    00001c3d: 	leaq	0x1(%rax), %rsi
    00001c41: 	callq	_ZdlPvm@PLT # Offset: 7233
.Ltmp1849:
    00001c46: 	movq	0x1f4d8(%rsp), %rax
    00001c4e: 	subq	%fs:0x28, %rax
    00001c57: 	jne	.Ltmp1850 # Offset: 7255
    00001c5d: 	addq	$0x1f4e8, %rsp
    00001c64: 	popq	%rbx
    00001c65: 	popq	%rbp
    00001c66: 	popq	%r12
    00001c68: 	popq	%r13
    00001c6a: 	popq	%r14
    00001c6c: 	popq	%r15
    00001c6e: 	retq # Offset: 7278
    00001c6f: 	nop # Size: 1
.Ltmp1851:
    00001c70: 	addq	$0x20, %rbp
.Ltmp1684:
    00001c74: 	cmpq	%rbp, (%rsp)
    00001c78: 	je	.Ltmp1688 # Offset: 7288
.Ltmp1852:
    00001c7e: 	movq	(%rbp), %rdi
    00001c82: 	leaq	0x10(%rbp), %rax
    00001c86: 	cmpq	%rax, %rdi
    00001c89: 	je	.Ltmp1851 # Offset: 7305
    00001c8b: 	movq	0x10(%rbp), %rax
    00001c8f: 	addq	$0x20, %rbp
    00001c93: 	leaq	0x1(%rax), %rsi
    00001c97: 	callq	_ZdlPvm@PLT # Offset: 7319
    00001c9c: 	cmpq	%rbp, (%rsp)
    00001ca0: 	jne	.Ltmp1852 # Offset: 7328
    00001ca2: 	jmp	.Ltmp1688 # Offset: 7330
    00001ca7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1680:
    00001cb0: 	addq	$0x20, %rbp
    00001cb4: 	cmpq	%rbx, %rbp
    00001cb7: 	jne	.Ltmp1681 # Offset: 7351
    00001cbd: 	addq	$0x8, %r13
    00001cc1: 	cmpq	%r13, %r15
    00001cc4: 	ja	.Ltmp1682 # Offset: 7364
    00001cca: 	jmp	.Ltmp1853 # Offset: 7370
    00001ccf: 	nop # Size: 1
.Ltmp1696:
    00001cd0: 	movl	current_test(%rip), %edx
    00001cd6: 	movq	%r14, %rsi
    00001cd9: 	movl	$0x1, %edi
    00001cde: 	xorl	%eax, %eax
    00001ce0: 	callq	__printf_chk@PLT # Offset: 7392
    00001ce5: 	jmp	.Ltmp1854 # Offset: 7397
.Ltmp1701:
    00001cea: 	leaq	0x88(%rsp), %rsi
    00001cf2: 	xorl	%edx, %edx
    00001cf4: 	movq	%r14, %rdi
    00001cf7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7415
    00001cfc: 	movq	%rax, (%r14)
    00001cff: 	movq	%rax, %rdi
    00001d02: 	movq	0x88(%rsp), %rax
    00001d0a: 	movq	%rax, 0x10(%r14)
.Ltmp1902:
    00001d0e: 	movq	%r13, %rdx
    00001d11: 	movq	%r15, %rsi
    00001d14: 	callq	memcpy@PLT # Offset: 7444
    00001d19: 	movq	0x88(%rsp), %r13
    00001d21: 	movq	(%r14), %rdi
    00001d24: 	jmp	.Ltmp1855 # Offset: 7460
    00001d29: 	nopl	(%rax) # Size: 7
.Ltmp1839:
    00001d30: 	movl	current_test(%rip), %edx
    00001d36: 	movq	%r15, %rsi
    00001d39: 	movl	$0x1, %edi
    00001d3e: 	xorl	%eax, %eax
    00001d40: 	callq	__printf_chk@PLT # Offset: 7488
    00001d45: 	movl	iterations(%rip), %ecx
    00001d4b: 	jmp	.Ltmp1856 # Offset: 7499
.Ltmp1828:
    00001d50: 	movl	current_test(%rip), %edx
    00001d56: 	movq	%r15, %rsi
    00001d59: 	movl	$0x1, %edi
    00001d5e: 	xorl	%eax, %eax
    00001d60: 	callq	__printf_chk@PLT # Offset: 7520
    00001d65: 	movl	iterations(%rip), %ecx
    00001d6b: 	jmp	.Ltmp1857 # Offset: 7531
.Ltmp1718:
    00001d70: 	movl	current_test(%rip), %edx
    00001d76: 	movq	%r14, %rsi
    00001d79: 	movl	$0x1, %edi
    00001d7e: 	xorl	%eax, %eax
    00001d80: 	callq	__printf_chk@PLT # Offset: 7552
    00001d85: 	jmp	.Ltmp1858 # Offset: 7557
    00001d8a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1707:
    00001d90: 	movl	current_test(%rip), %edx
    00001d96: 	movq	%r15, %rsi
    00001d99: 	movl	$0x1, %edi
    00001d9e: 	xorl	%eax, %eax
    00001da0: 	callq	__printf_chk@PLT # Offset: 7584
    00001da5: 	jmp	.Ltmp1859 # Offset: 7589
    00001daa: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1751:
    00001db0: 	movl	current_test(%rip), %edx
    00001db6: 	movq	%r14, %rsi
    00001db9: 	movl	$0x1, %edi
    00001dbe: 	xorl	%eax, %eax
    00001dc0: 	callq	__printf_chk@PLT # Offset: 7616
    00001dc5: 	movl	iterations(%rip), %esi
    00001dcb: 	jmp	.Ltmp1860 # Offset: 7627
.Ltmp1740:
    00001dd0: 	movl	current_test(%rip), %edx
    00001dd6: 	movq	%r15, %rsi
    00001dd9: 	movl	$0x1, %edi
    00001dde: 	xorl	%eax, %eax
    00001de0: 	callq	__printf_chk@PLT # Offset: 7648
    00001de5: 	movl	iterations(%rip), %ecx
    00001deb: 	jmp	.Ltmp1861 # Offset: 7659
.Ltmp1729:
    00001df0: 	movl	current_test(%rip), %edx
    00001df6: 	movq	%r14, %rsi
    00001df9: 	movl	$0x1, %edi
    00001dfe: 	xorl	%eax, %eax
    00001e00: 	callq	__printf_chk@PLT # Offset: 7680
    00001e05: 	movl	iterations(%rip), %ecx
    00001e0b: 	jmp	.Ltmp1862 # Offset: 7691
.Ltmp1817:
    00001e10: 	movl	current_test(%rip), %edx
    00001e16: 	movq	%r15, %rsi
    00001e19: 	movl	$0x1, %edi
    00001e1e: 	xorl	%eax, %eax
    00001e20: 	callq	__printf_chk@PLT # Offset: 7712
    00001e25: 	movl	iterations(%rip), %ecx
    00001e2b: 	jmp	.Ltmp1863 # Offset: 7723
.Ltmp1806:
    00001e30: 	movl	current_test(%rip), %edx
    00001e36: 	movq	%r14, %rsi
    00001e39: 	movl	$0x1, %edi
    00001e3e: 	xorl	%eax, %eax
    00001e40: 	callq	__printf_chk@PLT # Offset: 7744
    00001e45: 	movl	iterations(%rip), %r10d
    00001e4c: 	jmp	.Ltmp1864 # Offset: 7756
    00001e51: 	nopl	(%rax) # Size: 7
.Ltmp1795:
    00001e58: 	movl	current_test(%rip), %edx
    00001e5e: 	movq	%r14, %rsi
    00001e61: 	movl	$0x1, %edi
    00001e66: 	xorl	%eax, %eax
    00001e68: 	callq	__printf_chk@PLT # Offset: 7784
    00001e6d: 	movl	iterations(%rip), %ecx
    00001e73: 	jmp	.Ltmp1865 # Offset: 7795
    00001e78: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1784:
    00001e80: 	movl	current_test(%rip), %edx
    00001e86: 	movq	%r15, %rsi
    00001e89: 	movl	$0x1, %edi
    00001e8e: 	xorl	%eax, %eax
    00001e90: 	callq	__printf_chk@PLT # Offset: 7824
    00001e95: 	movl	iterations(%rip), %ecx
    00001e9b: 	jmp	.Ltmp1866 # Offset: 7835
.Ltmp1773:
    00001ea0: 	movl	current_test(%rip), %edx
    00001ea6: 	movq	%r15, %rsi
    00001ea9: 	movl	$0x1, %edi
    00001eae: 	xorl	%eax, %eax
    00001eb0: 	callq	__printf_chk@PLT # Offset: 7856
    00001eb5: 	movl	iterations(%rip), %ecx
    00001ebb: 	jmp	.Ltmp1867 # Offset: 7867
.Ltmp1762:
    00001ec0: 	movl	current_test(%rip), %edx
    00001ec6: 	movq	%r14, %rsi
    00001ec9: 	movl	$0x1, %edi
    00001ece: 	xorl	%eax, %eax
    00001ed0: 	callq	__printf_chk@PLT # Offset: 7888
    00001ed5: 	movl	iterations(%rip), %ecx
    00001edb: 	jmp	.Ltmp1868 # Offset: 7899
.Ltmp1764:
    00001ee0: 	movq	0x60(%rsp), %rsi
    00001ee5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001eec: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7916
    00001ef1: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ef8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001eff: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f06: 	jne	.Ltmp1869 # Offset: 7942
.Ltmp1769:
    00001f0c: 	movq	-0x8(%rdx), %rax
    00001f10: 	addq	$0x200, %rax
    00001f16: 	jmp	.Ltmp1869 # Offset: 7958
.Ltmp1747:
    00001f1b: 	movq	-0x8(%rdx), %rax
    00001f1f: 	addq	$0x200, %rax
    00001f25: 	jmp	.Ltmp1870 # Offset: 7973
.Ltmp1742:
    00001f2a: 	movq	0x60(%rsp), %rsi
    00001f2f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f36: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7990
    00001f3b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f42: 	jmp	.Ltmp1871 # Offset: 8002
.Ltmp1714:
    00001f47: 	movq	-0x8(%rdx), %rax
    00001f4b: 	addq	$0x200, %rax
    00001f51: 	jmp	.Ltmp1872 # Offset: 8017
.Ltmp1753:
    00001f56: 	movq	0x60(%rsp), %rsi
    00001f5b: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f62: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8034
    00001f67: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f6e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001f75: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f7c: 	jne	.Ltmp1873 # Offset: 8060
.Ltmp1758:
    00001f82: 	movq	-0x8(%rdx), %rax
    00001f86: 	addq	$0x200, %rax
    00001f8c: 	jmp	.Ltmp1873 # Offset: 8076
.Ltmp1720:
    00001f91: 	movq	0x60(%rsp), %rsi
    00001f96: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f9d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8093
    00001fa2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fa9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001fb0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fb7: 	jne	.Ltmp1874 # Offset: 8119
.Ltmp1725:
    00001fbd: 	movq	-0x8(%rdx), %rax
    00001fc1: 	addq	$0x200, %rax
    00001fc7: 	jmp	.Ltmp1874 # Offset: 8135
.Ltmp1703:
    00001fcc: 	movq	-0x8(%rdx), %rax
    00001fd0: 	addq	$0x200, %rax
    00001fd6: 	jmp	.Ltmp1875 # Offset: 8150
.Ltmp1709:
    00001fdb: 	movq	0x60(%rsp), %rsi
    00001fe0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fe7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8167
    00001fec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ff3: 	jmp	.Ltmp1876 # Offset: 8179
.Ltmp1698:
    00001ff8: 	movq	0x60(%rsp), %rsi
    00001ffd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002004: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8196
    00002009: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002010: 	jmp	.Ltmp1877 # Offset: 8208
.Ltmp1835:
    00002015: 	movq	-0x8(%rdx), %rax
    00002019: 	addq	$0x200, %rax
    0000201f: 	jmp	.Ltmp1878 # Offset: 8223
.Ltmp1830:
    00002024: 	movq	0x60(%rsp), %rsi
    00002029: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002030: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8240
    00002035: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000203c: 	jmp	.Ltmp1879 # Offset: 8252
.Ltmp1846:
    00002041: 	movq	-0x8(%rdx), %rax
    00002045: 	addq	$0x200, %rax
    0000204b: 	jmp	.Ltmp1880 # Offset: 8267
.Ltmp1841:
    00002050: 	movq	0x60(%rsp), %rsi
    00002055: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000205c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8284
    00002061: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002068: 	jmp	.Ltmp1881 # Offset: 8296
.Ltmp1786:
    0000206d: 	movq	0x60(%rsp), %rsi
    00002072: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002079: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8313
    0000207e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002085: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000208c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002093: 	jne	.Ltmp1882 # Offset: 8339
.Ltmp1791:
    00002099: 	movq	-0x8(%rdx), %rax
    0000209d: 	addq	$0x200, %rax
    000020a3: 	jmp	.Ltmp1882 # Offset: 8355
.Ltmp1736:
    000020a8: 	movq	-0x8(%rdx), %rax
    000020ac: 	addq	$0x200, %rax
    000020b2: 	jmp	.Ltmp1883 # Offset: 8370
.Ltmp1731:
    000020b7: 	movq	0x60(%rsp), %rsi
    000020bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8387
    000020c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020cf: 	jmp	.Ltmp1884 # Offset: 8399
.Ltmp1780:
    000020d4: 	movq	-0x8(%rdx), %rax
    000020d8: 	addq	$0x200, %rax
    000020de: 	jmp	.Ltmp1885 # Offset: 8414
.Ltmp1775:
    000020e3: 	movq	0x60(%rsp), %rsi
    000020e8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020ef: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8431
    000020f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020fb: 	jmp	.Ltmp1886 # Offset: 8443
.Ltmp1808:
    00002100: 	movq	0x60(%rsp), %rsi
    00002105: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000210c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8460
    00002111: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002118: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000211f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002126: 	jne	.Ltmp1887 # Offset: 8486
.Ltmp1813:
    0000212c: 	movq	-0x8(%rdx), %rax
    00002130: 	addq	$0x200, %rax
    00002136: 	jmp	.Ltmp1887 # Offset: 8502
.Ltmp1797:
    0000213b: 	movq	0x60(%rsp), %rsi
    00002140: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002147: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8519
    0000214c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002153: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000215a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002161: 	jne	.Ltmp1888 # Offset: 8545
.Ltmp1802:
    00002167: 	movq	-0x8(%rdx), %rax
    0000216b: 	addq	$0x200, %rax
    00002171: 	jmp	.Ltmp1888 # Offset: 8561
.Ltmp1824:
    00002176: 	movq	-0x8(%rdx), %rax
    0000217a: 	addq	$0x200, %rax
    00002180: 	jmp	.Ltmp1889 # Offset: 8576
.Ltmp1819:
    00002185: 	movq	0x60(%rsp), %rsi
    0000218a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002191: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8593
    00002196: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000219d: 	jmp	.Ltmp1890 # Offset: 8605
.Ltmp1812:
    000021a2: 	testq	%r13, %r13
    000021a5: 	je	.Ltmp1891 # Offset: 8613
.Ltmp1915:
    000021ab: 	movq	%r13, %rdx
    000021ae: 	movq	%r15, %rsi
    000021b1: 	callq	memcpy@PLT # Offset: 8625
    000021b6: 	movq	0x88(%rsp), %r13
    000021be: 	movq	(%r14), %rdi
    000021c1: 	jmp	.Ltmp1891 # Offset: 8641
.Ltmp1801:
    000021c6: 	testq	%r13, %r13
    000021c9: 	je	.Ltmp1892 # Offset: 8649
    000021cf: 	jmp	.Ltmp1893 # Offset: 8655
    000021d4: 	nopl	(%rax) # Size: 4
.Ltmp1823:
    000021d8: 	testq	%r13, %r13
    000021db: 	je	.Ltmp1894 # Offset: 8667
.Ltmp1914:
    000021e1: 	movq	%r13, %rdx
    000021e4: 	movq	%r15, %rsi
    000021e7: 	callq	memcpy@PLT # Offset: 8679
    000021ec: 	movq	0x88(%rsp), %r13
    000021f4: 	movq	(%r14), %rdi
    000021f7: 	jmp	.Ltmp1894 # Offset: 8695
.Ltmp1724:
    000021fc: 	testq	%r13, %r13
    000021ff: 	je	.Ltmp1895 # Offset: 8703
    00002205: 	jmp	.Ltmp1896 # Offset: 8709
    0000220a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1757:
    00002210: 	testq	%r13, %r13
    00002213: 	je	.Ltmp1897 # Offset: 8723
.Ltmp1916:
    00002219: 	movq	%r13, %rdx
    0000221c: 	movq	%r15, %rsi
    0000221f: 	callq	memcpy@PLT # Offset: 8735
    00002224: 	movq	0x88(%rsp), %r13
    0000222c: 	movq	(%r14), %rdi
    0000222f: 	jmp	.Ltmp1897 # Offset: 8751
.Ltmp1779:
    00002234: 	testq	%r13, %r13
    00002237: 	je	.Ltmp1898 # Offset: 8759
    0000223d: 	jmp	.Ltmp1899 # Offset: 8765
    00002242: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1735:
    00002248: 	testq	%r13, %r13
    0000224b: 	je	.Ltmp1900 # Offset: 8779
    00002251: 	jmp	.Ltmp1901 # Offset: 8785
    00002256: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1702:
    00002260: 	testq	%r13, %r13
    00002263: 	je	.Ltmp1855 # Offset: 8803
    00002269: 	jmp	.Ltmp1902 # Offset: 8809
    0000226e: 	nop # Size: 2
.Ltmp1790:
    00002270: 	testq	%r13, %r13
    00002273: 	je	.Ltmp1903 # Offset: 8819
    00002279: 	jmp	.Ltmp1904 # Offset: 8825
    0000227e: 	nop # Size: 2
.Ltmp1768:
    00002280: 	testq	%r13, %r13
    00002283: 	je	.Ltmp1905 # Offset: 8835
    00002289: 	jmp	.Ltmp1906 # Offset: 8841
    0000228e: 	nop # Size: 2
.Ltmp1845:
    00002290: 	testq	%r12, %r12
    00002293: 	je	.Ltmp1907 # Offset: 8851
    00002299: 	jmp	.Ltmp1908 # Offset: 8857
    0000229e: 	nop # Size: 2
.Ltmp1713:
    000022a0: 	testq	%r13, %r13
    000022a3: 	je	.Ltmp1909 # Offset: 8867
    000022a9: 	jmp	.Ltmp1910 # Offset: 8873
    000022ae: 	nop # Size: 2
.Ltmp1834:
    000022b0: 	testq	%r13, %r13
    000022b3: 	je	.Ltmp1911 # Offset: 8883
    000022b9: 	jmp	.Ltmp1912 # Offset: 8889
    000022be: 	nop # Size: 2
.Ltmp1746:
    000022c0: 	testq	%r13, %r13
    000022c3: 	je	.Ltmp1913 # Offset: 8899
.Ltmp1917:
    000022c9: 	movq	%r13, %rdx
    000022cc: 	movq	%r15, %rsi
    000022cf: 	callq	memcpy@PLT # Offset: 8911
    000022d4: 	movq	0x88(%rsp), %r13
    000022dc: 	movq	(%r14), %rdi
    000022df: 	jmp	.Ltmp1913 # Offset: 8927
.Ltmp1789:
    000022e4: 	leaq	0x88(%rsp), %rsi
    000022ec: 	xorl	%edx, %edx
    000022ee: 	movq	%r14, %rdi
    000022f1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8945
    000022f6: 	movq	%rax, (%r14)
    000022f9: 	movq	%rax, %rdi
    000022fc: 	movq	0x88(%rsp), %rax
    00002304: 	movq	%rax, 0x10(%r14)
.Ltmp1904:
    00002308: 	movq	%r13, %rdx
    0000230b: 	movq	%r15, %rsi
    0000230e: 	callq	memcpy@PLT # Offset: 8974
    00002313: 	movq	0x88(%rsp), %r13
    0000231b: 	movq	(%r14), %rdi
    0000231e: 	jmp	.Ltmp1903 # Offset: 8990
.Ltmp1767:
    00002323: 	leaq	0x88(%rsp), %rsi
    0000232b: 	xorl	%edx, %edx
    0000232d: 	movq	%r14, %rdi
    00002330: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9008
    00002335: 	movq	%rax, (%r14)
    00002338: 	movq	%rax, %rdi
    0000233b: 	movq	0x88(%rsp), %rax
    00002343: 	movq	%rax, 0x10(%r14)
.Ltmp1906:
    00002347: 	movq	%r13, %rdx
    0000234a: 	movq	%r15, %rsi
    0000234d: 	callq	memcpy@PLT # Offset: 9037
    00002352: 	movq	0x88(%rsp), %r13
    0000235a: 	movq	(%r14), %rdi
    0000235d: 	jmp	.Ltmp1905 # Offset: 9053
.Ltmp1778:
    00002362: 	leaq	0x88(%rsp), %rsi
    0000236a: 	xorl	%edx, %edx
    0000236c: 	movq	%r14, %rdi
    0000236f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9071
    00002374: 	movq	%rax, (%r14)
    00002377: 	movq	%rax, %rdi
    0000237a: 	movq	0x88(%rsp), %rax
    00002382: 	movq	%rax, 0x10(%r14)
.Ltmp1899:
    00002386: 	movq	%r13, %rdx
    00002389: 	movq	%r15, %rsi
    0000238c: 	callq	memcpy@PLT # Offset: 9100
    00002391: 	movq	0x88(%rsp), %r13
    00002399: 	movq	(%r14), %rdi
    0000239c: 	jmp	.Ltmp1898 # Offset: 9116
.Ltmp1800:
    000023a1: 	leaq	0x88(%rsp), %rsi
    000023a9: 	xorl	%edx, %edx
    000023ab: 	movq	%r14, %rdi
    000023ae: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9134
    000023b3: 	movq	%rax, (%r14)
    000023b6: 	movq	%rax, %rdi
    000023b9: 	movq	0x88(%rsp), %rax
    000023c1: 	movq	%rax, 0x10(%r14)
.Ltmp1893:
    000023c5: 	movq	%r13, %rdx
    000023c8: 	movq	%r15, %rsi
    000023cb: 	callq	memcpy@PLT # Offset: 9163
    000023d0: 	movq	0x88(%rsp), %r13
    000023d8: 	movq	(%r14), %rdi
    000023db: 	jmp	.Ltmp1892 # Offset: 9179
.Ltmp1723:
    000023e0: 	leaq	0x88(%rsp), %rsi
    000023e8: 	xorl	%edx, %edx
    000023ea: 	movq	%r14, %rdi
    000023ed: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9197
    000023f2: 	movq	%rax, (%r14)
    000023f5: 	movq	%rax, %rdi
    000023f8: 	movq	0x88(%rsp), %rax
    00002400: 	movq	%rax, 0x10(%r14)
.Ltmp1896:
    00002404: 	movq	%r13, %rdx
    00002407: 	movq	%r15, %rsi
    0000240a: 	callq	memcpy@PLT # Offset: 9226
    0000240f: 	movq	0x88(%rsp), %r13
    00002417: 	movq	(%r14), %rdi
    0000241a: 	jmp	.Ltmp1895 # Offset: 9242
.Ltmp1734:
    0000241f: 	leaq	0x88(%rsp), %rsi
    00002427: 	xorl	%edx, %edx
    00002429: 	movq	%r14, %rdi
    0000242c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9260
    00002431: 	movq	%rax, (%r14)
    00002434: 	movq	%rax, %rdi
    00002437: 	movq	0x88(%rsp), %rax
    0000243f: 	movq	%rax, 0x10(%r14)
.Ltmp1901:
    00002443: 	movq	%r13, %rdx
    00002446: 	movq	%r15, %rsi
    00002449: 	callq	memcpy@PLT # Offset: 9289
    0000244e: 	movq	0x88(%rsp), %r13
    00002456: 	movq	(%r14), %rdi
    00002459: 	jmp	.Ltmp1900 # Offset: 9305
.Ltmp1822:
    0000245e: 	leaq	0x88(%rsp), %rsi
    00002466: 	xorl	%edx, %edx
    00002468: 	movq	%r14, %rdi
    0000246b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9323
    00002470: 	movq	%rax, (%r14)
    00002473: 	movq	%rax, %rdi
    00002476: 	movq	0x88(%rsp), %rax
    0000247e: 	movq	%rax, 0x10(%r14)
    00002482: 	jmp	.Ltmp1914 # Offset: 9346
.Ltmp1712:
    00002487: 	leaq	0x88(%rsp), %rsi
    0000248f: 	xorl	%edx, %edx
    00002491: 	movq	%r14, %rdi
    00002494: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9364
    00002499: 	movq	%rax, (%r14)
    0000249c: 	movq	%rax, %rdi
    0000249f: 	movq	0x88(%rsp), %rax
    000024a7: 	movq	%rax, 0x10(%r14)
.Ltmp1910:
    000024ab: 	movq	%r13, %rdx
    000024ae: 	movq	%r15, %rsi
    000024b1: 	callq	memcpy@PLT # Offset: 9393
    000024b6: 	movq	0x88(%rsp), %r13
    000024be: 	movq	(%r14), %rdi
    000024c1: 	jmp	.Ltmp1909 # Offset: 9409
.Ltmp1844:
    000024c6: 	leaq	0x88(%rsp), %rsi
    000024ce: 	xorl	%edx, %edx
    000024d0: 	movq	%rbx, %rdi
    000024d3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9427
    000024d8: 	movq	%rax, (%rbx)
    000024db: 	movq	%rax, %rdi
    000024de: 	movq	0x88(%rsp), %rax
    000024e6: 	movq	%rax, 0x10(%rbx)
.Ltmp1908:
    000024ea: 	movq	%r12, %rdx
    000024ed: 	movq	%rbp, %rsi
    000024f0: 	callq	memcpy@PLT # Offset: 9456
    000024f5: 	movq	0x88(%rsp), %r12
    000024fd: 	movq	(%rbx), %rdi
    00002500: 	jmp	.Ltmp1907 # Offset: 9472
.Ltmp1833:
    00002505: 	leaq	0x88(%rsp), %rsi
    0000250d: 	xorl	%edx, %edx
    0000250f: 	movq	%r14, %rdi
    00002512: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9490
    00002517: 	movq	%rax, (%r14)
    0000251a: 	movq	%rax, %rdi
    0000251d: 	movq	0x88(%rsp), %rax
    00002525: 	movq	%rax, 0x10(%r14)
.Ltmp1912:
    00002529: 	movq	%r13, %rdx
    0000252c: 	movq	%r15, %rsi
    0000252f: 	callq	memcpy@PLT # Offset: 9519
    00002534: 	movq	0x88(%rsp), %r13
    0000253c: 	movq	(%r14), %rdi
    0000253f: 	jmp	.Ltmp1911 # Offset: 9535
.Ltmp1811:
    00002544: 	leaq	0x88(%rsp), %rsi
    0000254c: 	xorl	%edx, %edx
    0000254e: 	movq	%r14, %rdi
    00002551: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9553
    00002556: 	movq	%rax, (%r14)
    00002559: 	movq	%rax, %rdi
    0000255c: 	movq	0x88(%rsp), %rax
    00002564: 	movq	%rax, 0x10(%r14)
    00002568: 	jmp	.Ltmp1915 # Offset: 9576
.Ltmp1756:
    0000256d: 	leaq	0x88(%rsp), %rsi
    00002575: 	xorl	%edx, %edx
    00002577: 	movq	%r14, %rdi
    0000257a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9594
    0000257f: 	movq	%rax, (%r14)
    00002582: 	movq	%rax, %rdi
    00002585: 	movq	0x88(%rsp), %rax
    0000258d: 	movq	%rax, 0x10(%r14)
    00002591: 	jmp	.Ltmp1916 # Offset: 9617
.Ltmp1745:
    00002596: 	leaq	0x88(%rsp), %rsi
    0000259e: 	xorl	%edx, %edx
    000025a0: 	movq	%r14, %rdi
    000025a3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9635
    000025a8: 	movq	%rax, (%r14)
    000025ab: 	movq	%rax, %rdi
    000025ae: 	movq	0x88(%rsp), %rax
    000025b6: 	movq	%rax, 0x10(%r14)
    000025ba: 	jmp	.Ltmp1917 # Offset: 9658
.Ltmp1711:
    000025bf: 	leaq	DATAat0x17158(%rip), %rdi
    000025c6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9670
.Ltmp1722:
    000025cb: 	leaq	DATAat0x17158(%rip), %rdi
    000025d2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9682
.Ltmp1733:
    000025d7: 	leaq	DATAat0x17158(%rip), %rdi
    000025de: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9694
.Ltmp1744:
    000025e3: 	leaq	DATAat0x17158(%rip), %rdi
    000025ea: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9706
.Ltmp1755:
    000025ef: 	leaq	DATAat0x17158(%rip), %rdi
    000025f6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9718
.Ltmp1766:
    000025fb: 	leaq	DATAat0x17158(%rip), %rdi
    00002602: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9730
.Ltmp1777:
    00002607: 	leaq	DATAat0x17158(%rip), %rdi
    0000260e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9742
.Ltmp1788:
    00002613: 	leaq	DATAat0x17158(%rip), %rdi
    0000261a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9754
.Ltmp1799:
    0000261f: 	leaq	DATAat0x17158(%rip), %rdi
    00002626: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9766
.Ltmp1810:
    0000262b: 	leaq	DATAat0x17158(%rip), %rdi
    00002632: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9778
.Ltmp1821:
    00002637: 	leaq	DATAat0x17158(%rip), %rdi
    0000263e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9790
.Ltmp1832:
    00002643: 	leaq	DATAat0x17158(%rip), %rdi
    0000264a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9802
.Ltmp1843:
    0000264f: 	leaq	DATAat0x17158(%rip), %rdi
    00002656: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9814
.Ltmp1850:
    0000265b: 	callq	__stack_chk_fail@PLT # Offset: 9819
.Ltmp1700:
    00002660: 	leaq	DATAat0x17158(%rip), %rdi
    00002667: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9831
    0000266c: 	endbr64
.Ltmp1919:
    00002670: 	movq	%rax, %rbp
    00002673: 	jmp	.Ltmp1918 # Offset: 9843
    00002675: 	endbr64
    00002679: 	jmp	.Ltmp1919 # Offset: 9849
    0000267b: 	endbr64
    0000267f: 	jmp	.Ltmp1919 # Offset: 9855
    00002681: 	endbr64
    00002685: 	jmp	.Ltmp1919 # Offset: 9861
.Ltmp1918:
    00002687: 	movq	0xb0(%rsp), %rdi
    0000268f: 	cmpq	0x68(%rsp), %rdi
    00002694: 	je	.Ltmp1920 # Offset: 9876
.Ltmp1923:
    00002696: 	movq	0xc0(%rsp), %rax
    0000269e: 	leaq	0x1(%rax), %rsi
    000026a2: 	callq	_ZdlPvm@PLT # Offset: 9890
.Ltmp1920:
    000026a7: 	movq	0x90(%rsp), %rdi
    000026af: 	cmpq	0x78(%rsp), %rdi
    000026b4: 	je	.Ltmp1921 # Offset: 9908
    000026b6: 	movq	0xa0(%rsp), %rax
    000026be: 	leaq	0x1(%rax), %rsi
    000026c2: 	callq	_ZdlPvm@PLT # Offset: 9922
.Ltmp1921:
    000026c7: 	movq	%rbp, %rdi
    000026ca: 	callq	_Unwind_Resume@PLT # Offset: 9930
    000026cf: 	endbr64
    000026d3: 	jmp	.Ltmp1919 # Offset: 9939
    000026d5: 	endbr64
    000026d9: 	jmp	.Ltmp1919 # Offset: 9945
    000026db: 	endbr64
    000026df: 	jmp	.Ltmp1919 # Offset: 9951
    000026e1: 	endbr64
    000026e5: 	jmp	.Ltmp1919 # Offset: 9957
    000026e7: 	endbr64
    000026eb: 	movq	%rax, %rbp
    000026ee: 	jmp	.Ltmp1920 # Offset: 9966
    000026f0: 	endbr64
    000026f4: 	movq	%rax, %rbp
    000026f7: 	jmp	.Ltmp1922 # Offset: 9975
    000026f9: 	endbr64
    000026fd: 	jmp	.Ltmp1919 # Offset: 9981
    00002702: 	endbr64
    00002706: 	jmp	.Ltmp1919 # Offset: 9990
.Ltmp1922:
    0000270b: 	movq	0xb0(%rsp), %rdi
    00002713: 	leaq	0xc0(%rsp), %rax
    0000271b: 	cmpq	%rax, %rdi
    0000271e: 	jne	.Ltmp1923 # Offset: 10014
    00002724: 	jmp	.Ltmp1920 # Offset: 10020
    00002726: 	endbr64
    0000272a: 	jmp	.Ltmp1919 # Offset: 10026
    0000272f: 	endbr64
    00002733: 	jmp	.Ltmp1919 # Offset: 10035
    00002738: 	endbr64
    0000273c: 	jmp	.Ltmp1919 # Offset: 10044
    00002741: 	endbr64
    00002745: 	jmp	.Ltmp1919 # Offset: 10053
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeI13FourItemClassIiEEvd"

Binary Function "_fini" after disassembly {
  Number      : 58
  State       : disassembled
  Address     : 0x1689c
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x1689c
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 59 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 1479 instructions were shortened
BOLT-INFO: removed 182 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 54 out of 86 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x202318
