BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x1701c, which lies outside .bss
BOLT-WARNING: ignoring symbol __TMC_END__ at 0x17020, which lies outside .data
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x2000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x2000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x16fe8(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 2
  State       : disassembled
  Address     : 0x2ca0
  Size        : 0xd1e
  MaxSize     : 0xd20
  Offset      : 0x2ca0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB01:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	subq	$0x10, %rsp
    00000010: 	testl	%edi, %edi
    00000012: 	jle	.Ltmp1 # Offset: 18
    00000018: 	leal	-0x1(%rdi), %eax
    0000001b: 	movl	%edi, %r13d
    0000001e: 	movq	%rsi, %r14
    00000021: 	movq	%rsi, %rbp
    00000024: 	leaq	0x8(%rsi,%rax,8), %r12
    00000029: 	leaq	DATAat0x12150(%rip), %rbx
.Ltmp2:
    00000030: 	movq	(%rbp), %rdx
    00000034: 	movq	%rbx, %rsi
    00000037: 	movl	$0x1, %edi
    0000003c: 	xorl	%eax, %eax
    0000003e: 	addq	$0x8, %rbp
    00000042: 	callq	__printf_chk@PLT # Offset: 66
    00000047: 	cmpq	%r12, %rbp
    0000004a: 	jne	.Ltmp2 # Offset: 74
    0000004c: 	xorl	%eax, %eax
    0000004e: 	leaq	DATAat0x12136(%rip), %rsi
    00000055: 	movl	$0x1, %edi
    0000005a: 	callq	__printf_chk@PLT # Offset: 90
    0000005f: 	cmpl	$0x1, %r13d
    00000063: 	jg	.Ltmp3 # Offset: 99
.Ltmp10:
    00000069: 	movsd	DATAat0x12868(%rip), %xmm2
    00000071: 	movl	$0x5, %r12d
    00000077: 	movq	%xmm2, %r14
.Ltmp12:
    0000007c: 	movsd	init_value(%rip), %xmm0
    00000084: 	leaq	dataDouble(%rip), %rbx
    0000008b: 	leaq	0xfa00(%rbx), %r13
    00000092: 	movq	%rbx, %rbp
    00000095: 	movq	%rbx, %rax
    00000098: 	unpcklpd	%xmm0, %xmm0
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp4:
    000000a0: 	movaps	%xmm0, (%rax)
    000000a3: 	addq	$0x10, %rax
    000000a7: 	cmpq	%r13, %rax
    000000aa: 	jne	.Ltmp4 # Offset: 170
    000000ac: 	movq	%rbp, %rdi
    000000af: 	leaq	DATAat0x12154(%rip), %rdx
    000000b6: 	movl	$0x1f40, %esi
    000000bb: 	callq	_Z13test_constantId12mathlib_fabsIdEEvPT_iPKc # Offset: 187
    000000c0: 	movq	%rbp, %rdi
    000000c3: 	movl	$0x1f40, %esi
    000000c8: 	leaq	DATAat0x12160(%rip), %rdx
    000000cf: 	callq	_Z13test_constantId12mathlib_ceilIdEEvPT_iPKc # Offset: 207
    000000d4: 	movq	%rbp, %rdi
    000000d7: 	movl	$0x1f40, %esi
    000000dc: 	leaq	DATAat0x1216c(%rip), %rdx
    000000e3: 	callq	_Z13test_constantId13mathlib_floorIdEEvPT_iPKc # Offset: 227
    000000e8: 	movq	%rbp, %rdi
    000000eb: 	movq	%r14, %xmm0
    000000f0: 	leaq	DATAat0x12179(%rip), %rdx
    000000f7: 	movl	$0x1f40, %esi
    000000fc: 	callq	_Z14test_variable1Id10inline_maxIdEEvPT_iS2_PKc # Offset: 252
    00000101: 	movq	%rbp, %rdi
    00000104: 	movq	%r14, %xmm0
    00000109: 	leaq	DATAat0x1218b(%rip), %rdx
    00000110: 	movl	$0x1f40, %esi
    00000115: 	callq	_Z14test_variable1Id10inline_minIdEEvPT_iS2_PKc # Offset: 277
    0000011a: 	movq	%rbp, %rdi
    0000011d: 	movq	%r14, %xmm0
    00000122: 	leaq	DATAat0x1219d(%rip), %rdx
    00000129: 	movl	$0x1f40, %esi
    0000012e: 	callq	_Z14test_variable1Id12mathlib_fmaxIdEEvPT_iS2_PKc # Offset: 302
    00000133: 	movq	%r14, %xmm0
    00000138: 	movq	%rbp, %rdi
    0000013b: 	leaq	DATAat0x121a9(%rip), %rdx
    00000142: 	movl	$0x1f40, %esi
    00000147: 	callq	_Z14test_variable1Id12mathlib_fminIdEEvPT_iS2_PKc # Offset: 327
    0000014c: 	movq	%rbp, %rdi
    0000014f: 	movl	$0x1f40, %esi
    00000154: 	leaq	DATAat0x121b5(%rip), %rdx
    0000015b: 	callq	_Z20test_constant_resultIdi18mathlib_fpclassifyIdEEvPT_iPKc # Offset: 347
    00000160: 	movq	%rbp, %rdi
    00000163: 	movl	$0x1f40, %esi
    00000168: 	leaq	DATAat0x121c7(%rip), %rdx
    0000016f: 	callq	_Z20test_constant_resultIdi16mathlib_isnormalIdEEvPT_iPKc # Offset: 367
    00000174: 	movq	%rbp, %rdi
    00000177: 	movl	$0x1f40, %esi
    0000017c: 	leaq	DATAat0x121d7(%rip), %rdx
    00000183: 	callq	_Z20test_constant_resultIdi15inline_isfiniteIdEEvPT_iPKc # Offset: 387
    00000188: 	movq	%rbp, %rdi
    0000018b: 	movl	$0x1f40, %esi
    00000190: 	leaq	DATAat0x121ee(%rip), %rdx
    00000197: 	callq	_Z20test_constant_resultIdi16mathlib_isfiniteIdEEvPT_iPKc # Offset: 407
    0000019c: 	movq	%rbp, %rdi
    0000019f: 	movl	$0x1f40, %esi
    000001a4: 	leaq	DATAat0x121fe(%rip), %rdx
    000001ab: 	callq	_Z20test_constant_resultIdi12inline_isinfIdEEvPT_iPKc # Offset: 427
    000001b0: 	movq	%rbp, %rdi
    000001b3: 	movl	$0x1f40, %esi
    000001b8: 	leaq	DATAat0x12212(%rip), %rdx
    000001bf: 	callq	_Z20test_constant_resultIdi13mathlib_isinfIdEEvPT_iPKc # Offset: 447
    000001c4: 	movq	%rbp, %rdi
    000001c7: 	movl	$0x1f40, %esi
    000001cc: 	leaq	DATAat0x1221f(%rip), %rdx
    000001d3: 	callq	_Z20test_constant_resultIdi12inline_isnanIdEEvPT_iPKc # Offset: 467
    000001d8: 	movq	%rbp, %rdi
    000001db: 	movl	$0x1f40, %esi
    000001e0: 	leaq	DATAat0x12233(%rip), %rdx
    000001e7: 	callq	_Z20test_constant_resultIdi13mathlib_isnanIdEEvPT_iPKc # Offset: 487
    000001ec: 	movq	%rbp, %rdi
    000001ef: 	movl	$0x1f40, %esi
    000001f4: 	leaq	DATAat0x12240(%rip), %rdx
    000001fb: 	callq	_Z20test_constant_resultIdi14inline_signbitIdEEvPT_iPKc # Offset: 507
    00000200: 	movq	%rbp, %rdi
    00000203: 	movl	$0x1f40, %esi
    00000208: 	leaq	DATAat0x12256(%rip), %rdx
    0000020f: 	callq	_Z20test_constant_resultIdi15mathlib_signbitIdEEvPT_iPKc # Offset: 527
    00000214: 	movq	%rbp, %rdi
    00000217: 	movl	$0x1f40, %esi
    0000021c: 	leaq	DATAat0x12265(%rip), %rdx
    00000223: 	callq	_Z13test_constantId12mathlib_sqrtIdEEvPT_iPKc # Offset: 547
    00000228: 	movq	%rbp, %rdi
    0000022b: 	movq	%r14, %xmm0
    00000230: 	leaq	DATAat0x12271(%rip), %rdx
    00000237: 	movl	$0x1f40, %esi
    0000023c: 	callq	_Z14test_variable1Id12inline_hypotIdEEvPT_iS2_PKc # Offset: 572
    00000241: 	movq	%r14, %xmm0
    00000246: 	movq	%rbp, %rdi
    00000249: 	leaq	DATAat0x12285(%rip), %rdx
    00000250: 	movl	$0x1f40, %esi
    00000255: 	callq	_Z14test_variable1Id13mathlib_hypotIdEEvPT_iS2_PKc # Offset: 597
    0000025a: 	movq	%rbp, %rdi
    0000025d: 	movl	$0x1f40, %esi
    00000262: 	leaq	DATAat0x12292(%rip), %rdx
    00000269: 	callq	_Z13test_constantId11mathlib_cosIdEEvPT_iPKc # Offset: 617
    0000026e: 	movq	%rbp, %rdi
    00000271: 	movl	$0x1f40, %esi
    00000276: 	leaq	DATAat0x1229d(%rip), %rdx
    0000027d: 	callq	_Z13test_constantId11mathlib_sinIdEEvPT_iPKc # Offset: 637
    00000282: 	movq	%rbp, %rdi
    00000285: 	movl	$0x1f40, %esi
    0000028a: 	leaq	DATAat0x122a8(%rip), %rdx
    00000291: 	callq	_Z13test_constantId11mathlib_tanIdEEvPT_iPKc # Offset: 657
    00000296: 	movq	%rbp, %rdi
    00000299: 	movl	$0x1f40, %esi
    0000029e: 	leaq	DATAat0x122b3(%rip), %rdx
    000002a5: 	callq	_Z13test_constantId12mathlib_acosIdEEvPT_iPKc # Offset: 677
    000002aa: 	movq	%rbp, %rdi
    000002ad: 	movl	$0x1f40, %esi
    000002b2: 	leaq	DATAat0x122bf(%rip), %rdx
    000002b9: 	callq	_Z13test_constantId12mathlib_asinIdEEvPT_iPKc # Offset: 697
    000002be: 	movq	%rbp, %rdi
    000002c1: 	movl	$0x1f40, %esi
    000002c6: 	leaq	DATAat0x122cb(%rip), %rdx
    000002cd: 	callq	_Z13test_constantId12mathlib_atanIdEEvPT_iPKc # Offset: 717
    000002d2: 	movq	%r14, %xmm0
    000002d7: 	movq	%rbp, %rdi
    000002da: 	leaq	DATAat0x122d7(%rip), %rdx
    000002e1: 	movl	$0x1f40, %esi
    000002e6: 	callq	_Z14test_variable1Id13mathlib_atan2IdEEvPT_iS2_PKc # Offset: 742
    000002eb: 	movq	%rbp, %rdi
    000002ee: 	movl	$0x1f40, %esi
    000002f3: 	leaq	DATAat0x122e4(%rip), %rdx
    000002fa: 	callq	_Z13test_constantId11mathlib_expIdEEvPT_iPKc # Offset: 762
    000002ff: 	movq	%rbp, %rdi
    00000302: 	movl	$0x1f40, %esi
    00000307: 	leaq	DATAat0x122ef(%rip), %rdx
    0000030e: 	callq	_Z13test_constantId12mathlib_exp2IdEEvPT_iPKc # Offset: 782
    00000313: 	movq	%rbp, %rdi
    00000316: 	movl	$0x1f40, %esi
    0000031b: 	leaq	DATAat0x122fb(%rip), %rdx
    00000322: 	callq	_Z13test_constantId11mathlib_logIdEEvPT_iPKc # Offset: 802
    00000327: 	movq	%rbp, %rdi
    0000032a: 	movl	$0x1f40, %esi
    0000032f: 	leaq	DATAat0x12306(%rip), %rdx
    00000336: 	callq	_Z13test_constantId13mathlib_log10IdEEvPT_iPKc # Offset: 822
    0000033b: 	movq	%rbp, %rdi
    0000033e: 	movl	$0x1f40, %esi
    00000343: 	leaq	DATAat0x12313(%rip), %rdx
    0000034a: 	callq	_Z13test_constantId12mathlib_log2IdEEvPT_iPKc # Offset: 842
    0000034f: 	movq	%r14, %xmm0
    00000354: 	movq	%rbp, %rdi
    00000357: 	leaq	DATAat0x1231f(%rip), %rdx
    0000035e: 	movl	$0x1f40, %esi
    00000363: 	callq	_Z14test_variable1Id11mathlib_powIdEEvPT_iS2_PKc # Offset: 867
    00000368: 	movq	%rbp, %rdi
    0000036b: 	movl	$0x1f40, %esi
    00000370: 	leaq	DATAat0x1232a(%rip), %rdx
    00000377: 	callq	_Z13test_constantId13mathlib_roundIdEEvPT_iPKc # Offset: 887
    0000037c: 	movq	%rbp, %rdi
    0000037f: 	movl	$0x1f40, %esi
    00000384: 	leaq	DATAat0x12337(%rip), %rdx
    0000038b: 	callq	_Z20test_constant_resultIdi14mathlib_lroundIdEEvPT_iPKc # Offset: 907
    00000390: 	movq	%rbp, %rdi
    00000393: 	movl	$0x1f40, %esi
    00000398: 	leaq	DATAat0x12345(%rip), %rdx
    0000039f: 	callq	_Z20test_constant_resultIdx15mathlib_llroundIdEEvPT_iPKc # Offset: 927
    000003a4: 	movq	%rbp, %rdi
    000003a7: 	movl	$0x1f40, %esi
    000003ac: 	leaq	DATAat0x12354(%rip), %rdx
    000003b3: 	callq	_Z13test_constantId13mathlib_truncIdEEvPT_iPKc # Offset: 947
    000003b8: 	movq	%rbp, %rdi
    000003bb: 	movl	$0x1f40, %esi
    000003c0: 	leaq	DATAat0x12361(%rip), %rdx
    000003c7: 	callq	_Z13test_constantId12mathlib_coshIdEEvPT_iPKc # Offset: 967
    000003cc: 	movq	%rbp, %rdi
    000003cf: 	movl	$0x1f40, %esi
    000003d4: 	leaq	DATAat0x1236d(%rip), %rdx
    000003db: 	callq	_Z13test_constantId12mathlib_sinhIdEEvPT_iPKc # Offset: 987
    000003e0: 	movq	%rbp, %rdi
    000003e3: 	movl	$0x1f40, %esi
    000003e8: 	leaq	DATAat0x12379(%rip), %rdx
    000003ef: 	callq	_Z13test_constantId12mathlib_tanhIdEEvPT_iPKc # Offset: 1007
    000003f4: 	movsd	DATAat0x12878(%rip), %xmm0
    000003fc: 	addsd	init_value(%rip), %xmm0
    00000404: 	leaq	dataDouble(%rip), %rbp
    0000040b: 	movq	%rbp, %rax
    0000040e: 	movsd	%xmm0, init_value(%rip)
    00000416: 	unpcklpd	%xmm0, %xmm0
    0000041a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp5:
    00000420: 	movaps	%xmm0, (%rax)
    00000423: 	addq	$0x10, %rax
    00000427: 	cmpq	%r13, %rax
    0000042a: 	jne	.Ltmp5 # Offset: 1066
    0000042c: 	leaq	DATAat0x12385(%rip), %rdx
    00000433: 	movl	$0x1f40, %esi
    00000438: 	movq	%rbp, %rdi
    0000043b: 	callq	_Z13test_constantId13mathlib_acoshIdEEvPT_iPKc # Offset: 1083
    00000440: 	leaq	DATAat0x12392(%rip), %rdx
    00000447: 	movl	$0x1f40, %esi
    0000044c: 	movq	%rbp, %rdi
    0000044f: 	callq	_Z13test_constantId13mathlib_asinhIdEEvPT_iPKc # Offset: 1103
    00000454: 	movsd	init_value(%rip), %xmm0
    0000045c: 	subsd	DATAat0x12878(%rip), %xmm0
    00000464: 	movsd	%xmm0, init_value(%rip)
    0000046c: 	unpcklpd	%xmm0, %xmm0
.Ltmp6:
    00000470: 	movaps	%xmm0, (%rbx)
    00000473: 	addq	$0x10, %rbx
    00000477: 	cmpq	%r13, %rbx
    0000047a: 	jne	.Ltmp6 # Offset: 1146
    0000047c: 	movq	%rbp, %rdi
    0000047f: 	leaq	DATAat0x1239f(%rip), %rdx
    00000486: 	movl	$0x1f40, %esi
    0000048b: 	callq	_Z13test_constantId13mathlib_atanhIdEEvPT_iPKc # Offset: 1163
    00000490: 	movq	%rbp, %rdi
    00000493: 	movq	%r14, %xmm0
    00000498: 	leaq	DATAat0x123ac(%rip), %rdx
    0000049f: 	movl	$0x1f40, %esi
    000004a4: 	leaq	dataFloat(%rip), %rbx
    000004ab: 	callq	_Z14test_variable1Id12mathlib_fmodIdEEvPT_iS2_PKc # Offset: 1195
    000004b0: 	movq	%rbp, %rdi
    000004b3: 	movq	%r14, %xmm0
    000004b8: 	leaq	DATAat0x123b8(%rip), %rdx
    000004bf: 	movl	$0x1f40, %esi
    000004c4: 	leaq	0x7d00(%rbx), %r13
    000004cb: 	callq	_Z14test_variable1Id17mathlib_remainderIdEEvPT_iS2_PKc # Offset: 1227
    000004d0: 	movq	%r14, %xmm0
    000004d5: 	movq	%rbp, %rdi
    000004d8: 	leaq	DATAat0x123c9(%rip), %rdx
    000004df: 	movl	$0x1f40, %esi
    000004e4: 	callq	_Z14test_variable1Id16mathlib_copysignIdEEvPT_iS2_PKc # Offset: 1252
    000004e9: 	movq	%rbp, %rdi
    000004ec: 	movl	%r12d, %edx
    000004ef: 	movl	$0x1f40, %esi
    000004f4: 	leaq	DATAat0x123d9(%rip), %rcx
    000004fb: 	callq	_Z14test_variable1Idi13mathlib_ldexpIdiEEvPT_iT0_PKc # Offset: 1275
    00000500: 	movq	%rbp, %rdi
    00000503: 	movl	%r12d, %edx
    00000506: 	movl	$0x1f40, %esi
    0000050b: 	leaq	DATAat0x123e6(%rip), %rcx
    00000512: 	callq	_Z17test_variable1ptrIdi13mathlib_frexpIdiEEvPT_iT0_PKc # Offset: 1298
    00000517: 	movq	%rbp, %rdi
    0000051a: 	movl	$0x1f40, %esi
    0000051f: 	leaq	DATAat0x123f3(%rip), %rdx
    00000526: 	callq	_Z13test_constantId10mathlib_j0IdEEvPT_iPKc # Offset: 1318
    0000052b: 	movq	%rbp, %rdi
    0000052e: 	movl	$0x1f40, %esi
    00000533: 	leaq	DATAat0x123fd(%rip), %rdx
    0000053a: 	callq	_Z13test_constantId10mathlib_j1IdEEvPT_iPKc # Offset: 1338
    0000053f: 	movq	%rbp, %rdi
    00000542: 	movl	$0x1f40, %esi
    00000547: 	leaq	DATAat0x12407(%rip), %rdx
    0000054e: 	callq	_Z13test_constantId10mathlib_y0IdEEvPT_iPKc # Offset: 1358
    00000553: 	movq	%rbp, %rdi
    00000556: 	movl	$0x1f40, %esi
    0000055b: 	leaq	DATAat0x12411(%rip), %rdx
    00000562: 	callq	_Z13test_constantId10mathlib_y1IdEEvPT_iPKc # Offset: 1378
    00000567: 	movq	%rbp, %rdi
    0000056a: 	movl	%r12d, %edx
    0000056d: 	movl	$0x1f40, %esi
    00000572: 	leaq	DATAat0x1241b(%rip), %rcx
    00000579: 	callq	_Z14test_variable1Idi10mathlib_jnIdiEEvPT_iT0_PKc # Offset: 1401
    0000057e: 	movq	%rbp, %rdi
    00000581: 	movl	%r12d, %edx
    00000584: 	movl	$0x1f40, %esi
    00000589: 	leaq	DATAat0x12425(%rip), %rcx
    00000590: 	callq	_Z14test_variable1Idi10mathlib_ynIdiEEvPT_iT0_PKc # Offset: 1424
    00000595: 	movq	%rbp, %rdi
    00000598: 	movl	$0x1f40, %esi
    0000059d: 	leaq	DATAat0x1242f(%rip), %rdx
    000005a4: 	callq	_Z13test_constantId13mathlib_expm1IdEEvPT_iPKc # Offset: 1444
    000005a9: 	movq	%rbp, %rdi
    000005ac: 	movl	$0x1f40, %esi
    000005b1: 	leaq	DATAat0x1243c(%rip), %rdx
    000005b8: 	callq	_Z13test_constantId13mathlib_log1pIdEEvPT_iPKc # Offset: 1464
    000005bd: 	movq	%rbp, %rdi
    000005c0: 	movl	$0x1f40, %esi
    000005c5: 	leaq	DATAat0x12449(%rip), %rdx
    000005cc: 	callq	_Z13test_constantId12mathlib_logbIdEEvPT_iPKc # Offset: 1484
    000005d1: 	movq	%rbp, %rdi
    000005d4: 	movl	$0x1f40, %esi
    000005d9: 	leaq	DATAat0x12455(%rip), %rdx
    000005e0: 	callq	_Z13test_constantId12mathlib_cbrtIdEEvPT_iPKc # Offset: 1504
    000005e5: 	movq	%rbp, %rdi
    000005e8: 	movl	$0x1f40, %esi
    000005ed: 	leaq	DATAat0x12461(%rip), %rdx
    000005f4: 	callq	_Z13test_constantId11mathlib_erfIdEEvPT_iPKc # Offset: 1524
    000005f9: 	movq	%rbp, %rdi
    000005fc: 	movl	$0x1f40, %esi
    00000601: 	leaq	DATAat0x1246c(%rip), %rdx
    00000608: 	callq	_Z13test_constantId12mathlib_erfcIdEEvPT_iPKc # Offset: 1544
    0000060d: 	movq	%rbp, %rdi
    00000610: 	movl	$0x1f40, %esi
    00000615: 	leaq	DATAat0x12478(%rip), %rdx
    0000061c: 	callq	_Z13test_constantId14mathlib_lgammaIdEEvPT_iPKc # Offset: 1564
    00000621: 	movq	%rbp, %rdi
    00000624: 	movl	$0x1f40, %esi
    00000629: 	leaq	DATAat0x12486(%rip), %rdx
    00000630: 	callq	_Z13test_constantId14mathlib_tgammaIdEEvPT_iPKc # Offset: 1584
    00000635: 	movq	%rbp, %rdi
    00000638: 	movl	$0x1f40, %esi
    0000063d: 	leaq	DATAat0x12494(%rip), %rdx
    00000644: 	callq	_Z13test_constantId17mathlib_nearbyintIdEEvPT_iPKc # Offset: 1604
    00000649: 	movq	%rbp, %rdi
    0000064c: 	movl	$0x1f40, %esi
    00000651: 	leaq	DATAat0x124a5(%rip), %rdx
    00000658: 	callq	_Z13test_constantId12mathlib_rintIdEEvPT_iPKc # Offset: 1624
    0000065d: 	movq	%rbp, %rdi
    00000660: 	movl	$0x1f40, %esi
    00000665: 	leaq	DATAat0x124b1(%rip), %rdx
    0000066c: 	callq	_Z20test_constant_resultIdi13mathlib_ilogbIdEEvPT_iPKc # Offset: 1644
    00000671: 	movq	%rbp, %rdi
    00000674: 	movl	$0x1f40, %esi
    00000679: 	leaq	DATAat0x124be(%rip), %rdx
    00000680: 	callq	_Z20test_constant_resultIdl13mathlib_lrintIdEEvPT_iPKc # Offset: 1664
    00000685: 	movq	%rbp, %rdi
    00000688: 	movl	$0x1f40, %esi
    0000068d: 	movq	%rbx, %rbp
    00000690: 	leaq	DATAat0x124cb(%rip), %rdx
    00000697: 	callq	_Z20test_constant_resultIdx14mathlib_llrintIdEEvPT_iPKc # Offset: 1687
    0000069c: 	movl	iterations(%rip), %edx
    000006a2: 	xorl	%r8d, %r8d
    000006a5: 	xorl	%ecx, %ecx
    000006a7: 	movl	$0x1f40, %esi
    000006ac: 	leaq	DATAat0x124d9(%rip), %rdi
    000006b3: 	callq	_Z9summarizePKciiii # Offset: 1715
    000006b8: 	pxor	%xmm0, %xmm0
    000006bc: 	movq	%rbx, %rax
    000006bf: 	cvtsd2ss	init_value(%rip), %xmm0
    000006c7: 	shufps	$0x0, %xmm0, %xmm0
    000006cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp7:
    000006d0: 	movaps	%xmm0, (%rax)
    000006d3: 	addq	$0x10, %rax
    000006d7: 	cmpq	%rax, %r13
    000006da: 	jne	.Ltmp7 # Offset: 1754
    000006dc: 	movq	%r14, %xmm4
    000006e1: 	movq	%rbp, %rdi
    000006e4: 	leaq	DATAat0x124e8(%rip), %rdx
    000006eb: 	movl	$0x1f40, %esi
    000006f0: 	pxor	%xmm1, %xmm1
    000006f4: 	cvtsd2ss	%xmm4, %xmm1
    000006f8: 	movss	%xmm1, 0xc(%rsp)
    000006fe: 	callq	_Z13test_constantIf13mathlib_fabsfIfEEvPT_iPKc # Offset: 1790
    00000703: 	movq	%rbp, %rdi
    00000706: 	movl	$0x1f40, %esi
    0000070b: 	leaq	DATAat0x124f3(%rip), %rdx
    00000712: 	callq	_Z13test_constantIf13mathlib_ceilfIfEEvPT_iPKc # Offset: 1810
    00000717: 	movq	%rbp, %rdi
    0000071a: 	movl	$0x1f40, %esi
    0000071f: 	leaq	DATAat0x124fe(%rip), %rdx
    00000726: 	callq	_Z13test_constantIf14mathlib_floorfIfEEvPT_iPKc # Offset: 1830
    0000072b: 	movss	0xc(%rsp), %xmm0
    00000731: 	movq	%rbp, %rdi
    00000734: 	leaq	DATAat0x1250a(%rip), %rdx
    0000073b: 	movl	$0x1f40, %esi
    00000740: 	callq	_Z14test_variable1If10inline_maxIfEEvPT_iS2_PKc # Offset: 1856
    00000745: 	movss	0xc(%rsp), %xmm0
    0000074b: 	movq	%rbp, %rdi
    0000074e: 	leaq	DATAat0x1251b(%rip), %rdx
    00000755: 	movl	$0x1f40, %esi
    0000075a: 	callq	_Z14test_variable1If10inline_minIfEEvPT_iS2_PKc # Offset: 1882
    0000075f: 	movss	0xc(%rsp), %xmm0
    00000765: 	movq	%rbp, %rdi
    00000768: 	leaq	DATAat0x1252c(%rip), %rdx
    0000076f: 	movl	$0x1f40, %esi
    00000774: 	callq	_Z14test_variable1If13mathlib_fmaxfIfEEvPT_iS2_PKc # Offset: 1908
    00000779: 	movss	0xc(%rsp), %xmm0
    0000077f: 	movq	%rbp, %rdi
    00000782: 	leaq	DATAat0x12537(%rip), %rdx
    00000789: 	movl	$0x1f40, %esi
    0000078e: 	callq	_Z14test_variable1If13mathlib_fminfIfEEvPT_iS2_PKc # Offset: 1934
    00000793: 	movq	%rbp, %rdi
    00000796: 	movl	$0x1f40, %esi
    0000079b: 	leaq	DATAat0x12542(%rip), %rdx
    000007a2: 	callq	_Z20test_constant_resultIfi18mathlib_fpclassifyIfEEvPT_iPKc # Offset: 1954
    000007a7: 	movq	%rbp, %rdi
    000007aa: 	movl	$0x1f40, %esi
    000007af: 	leaq	DATAat0x12553(%rip), %rdx
    000007b6: 	callq	_Z20test_constant_resultIfi16mathlib_isnormalIfEEvPT_iPKc # Offset: 1974
    000007bb: 	movq	%rbp, %rdi
    000007be: 	movl	$0x1f40, %esi
    000007c3: 	leaq	DATAat0x12562(%rip), %rdx
    000007ca: 	callq	_Z20test_constant_resultIfi15inline_isfiniteIfEEvPT_iPKc # Offset: 1994
    000007cf: 	movq	%rbp, %rdi
    000007d2: 	movl	$0x1f40, %esi
    000007d7: 	leaq	DATAat0x12578(%rip), %rdx
    000007de: 	callq	_Z20test_constant_resultIfi16mathlib_isfiniteIfEEvPT_iPKc # Offset: 2014
    000007e3: 	movq	%rbp, %rdi
    000007e6: 	movl	$0x1f40, %esi
    000007eb: 	leaq	DATAat0x12587(%rip), %rdx
    000007f2: 	callq	_Z20test_constant_resultIfi12inline_isinfIfEEvPT_iPKc # Offset: 2034
    000007f7: 	movq	%rbp, %rdi
    000007fa: 	movl	$0x1f40, %esi
    000007ff: 	leaq	DATAat0x1259a(%rip), %rdx
    00000806: 	callq	_Z20test_constant_resultIfi13mathlib_isinfIfEEvPT_iPKc # Offset: 2054
    0000080b: 	movq	%rbp, %rdi
    0000080e: 	movl	$0x1f40, %esi
    00000813: 	leaq	DATAat0x125a6(%rip), %rdx
    0000081a: 	callq	_Z20test_constant_resultIfi12inline_isnanIfEEvPT_iPKc # Offset: 2074
    0000081f: 	movq	%rbp, %rdi
    00000822: 	movl	$0x1f40, %esi
    00000827: 	leaq	DATAat0x125b9(%rip), %rdx
    0000082e: 	callq	_Z20test_constant_resultIfi13mathlib_isnanIfEEvPT_iPKc # Offset: 2094
    00000833: 	movq	%rbp, %rdi
    00000836: 	movl	$0x1f40, %esi
    0000083b: 	leaq	DATAat0x125c5(%rip), %rdx
    00000842: 	callq	_Z20test_constant_resultIfi14inline_signbitIfEEvPT_iPKc # Offset: 2114
    00000847: 	movq	%rbp, %rdi
    0000084a: 	movl	$0x1f40, %esi
    0000084f: 	leaq	DATAat0x125da(%rip), %rdx
    00000856: 	callq	_Z20test_constant_resultIfi15mathlib_signbitIfEEvPT_iPKc # Offset: 2134
    0000085b: 	movq	%rbp, %rdi
    0000085e: 	movl	$0x1f40, %esi
    00000863: 	leaq	DATAat0x125e8(%rip), %rdx
    0000086a: 	callq	_Z13test_constantIf13mathlib_sqrtfIfEEvPT_iPKc # Offset: 2154
    0000086f: 	movss	0xc(%rsp), %xmm0
    00000875: 	movq	%rbp, %rdi
    00000878: 	leaq	DATAat0x125f3(%rip), %rdx
    0000087f: 	movl	$0x1f40, %esi
    00000884: 	callq	_Z14test_variable1If13inline_hypotfIfEEvPT_iS2_PKc # Offset: 2180
    00000889: 	movss	0xc(%rsp), %xmm0
    0000088f: 	movq	%rbp, %rdi
    00000892: 	leaq	DATAat0x12606(%rip), %rdx
    00000899: 	movl	$0x1f40, %esi
    0000089e: 	callq	_Z14test_variable1If14mathlib_hypotfIfEEvPT_iS2_PKc # Offset: 2206
    000008a3: 	movq	%rbp, %rdi
    000008a6: 	movl	$0x1f40, %esi
    000008ab: 	leaq	DATAat0x12612(%rip), %rdx
    000008b2: 	callq	_Z13test_constantIf12mathlib_cosfIfEEvPT_iPKc # Offset: 2226
    000008b7: 	movq	%rbp, %rdi
    000008ba: 	movl	$0x1f40, %esi
    000008bf: 	leaq	DATAat0x1261c(%rip), %rdx
    000008c6: 	callq	_Z13test_constantIf12mathlib_sinfIfEEvPT_iPKc # Offset: 2246
    000008cb: 	movq	%rbp, %rdi
    000008ce: 	movl	$0x1f40, %esi
    000008d3: 	leaq	DATAat0x12626(%rip), %rdx
    000008da: 	callq	_Z13test_constantIf12mathlib_tanfIfEEvPT_iPKc # Offset: 2266
    000008df: 	movq	%rbp, %rdi
    000008e2: 	movl	$0x1f40, %esi
    000008e7: 	leaq	DATAat0x12630(%rip), %rdx
    000008ee: 	callq	_Z13test_constantIf13mathlib_acosfIfEEvPT_iPKc # Offset: 2286
    000008f3: 	movq	%rbp, %rdi
    000008f6: 	movl	$0x1f40, %esi
    000008fb: 	leaq	DATAat0x1263b(%rip), %rdx
    00000902: 	callq	_Z13test_constantIf13mathlib_asinfIfEEvPT_iPKc # Offset: 2306
    00000907: 	movq	%rbp, %rdi
    0000090a: 	movl	$0x1f40, %esi
    0000090f: 	leaq	DATAat0x12646(%rip), %rdx
    00000916: 	callq	_Z13test_constantIf13mathlib_atanfIfEEvPT_iPKc # Offset: 2326
    0000091b: 	movss	0xc(%rsp), %xmm0
    00000921: 	movq	%rbp, %rdi
    00000924: 	leaq	DATAat0x12651(%rip), %rdx
    0000092b: 	movl	$0x1f40, %esi
    00000930: 	callq	_Z14test_variable1If14mathlib_atan2fIfEEvPT_iS2_PKc # Offset: 2352
    00000935: 	movq	%rbp, %rdi
    00000938: 	movl	$0x1f40, %esi
    0000093d: 	leaq	DATAat0x1265d(%rip), %rdx
    00000944: 	callq	_Z13test_constantIf12mathlib_expfIfEEvPT_iPKc # Offset: 2372
    00000949: 	movq	%rbp, %rdi
    0000094c: 	movl	$0x1f40, %esi
    00000951: 	leaq	DATAat0x12667(%rip), %rdx
    00000958: 	callq	_Z13test_constantIf13mathlib_exp2fIfEEvPT_iPKc # Offset: 2392
    0000095d: 	movq	%rbp, %rdi
    00000960: 	movl	$0x1f40, %esi
    00000965: 	leaq	DATAat0x12672(%rip), %rdx
    0000096c: 	callq	_Z13test_constantIf12mathlib_logfIfEEvPT_iPKc # Offset: 2412
    00000971: 	movq	%rbp, %rdi
    00000974: 	movl	$0x1f40, %esi
    00000979: 	leaq	DATAat0x1267c(%rip), %rdx
    00000980: 	callq	_Z13test_constantIf14mathlib_log10fIfEEvPT_iPKc # Offset: 2432
    00000985: 	movq	%rbp, %rdi
    00000988: 	movl	$0x1f40, %esi
    0000098d: 	leaq	DATAat0x12688(%rip), %rdx
    00000994: 	callq	_Z13test_constantIf13mathlib_log2fIfEEvPT_iPKc # Offset: 2452
    00000999: 	movss	0xc(%rsp), %xmm0
    0000099f: 	movq	%rbp, %rdi
    000009a2: 	leaq	DATAat0x12693(%rip), %rdx
    000009a9: 	movl	$0x1f40, %esi
    000009ae: 	callq	_Z14test_variable1If12mathlib_powfIfEEvPT_iS2_PKc # Offset: 2478
    000009b3: 	movq	%rbp, %rdi
    000009b6: 	movl	$0x1f40, %esi
    000009bb: 	leaq	DATAat0x1269d(%rip), %rdx
    000009c2: 	callq	_Z13test_constantIf14mathlib_roundfIfEEvPT_iPKc # Offset: 2498
    000009c7: 	movq	%rbp, %rdi
    000009ca: 	movl	$0x1f40, %esi
    000009cf: 	leaq	DATAat0x126a9(%rip), %rdx
    000009d6: 	callq	_Z20test_constant_resultIfi15mathlib_lroundfIfEEvPT_iPKc # Offset: 2518
    000009db: 	movq	%rbp, %rdi
    000009de: 	movl	$0x1f40, %esi
    000009e3: 	leaq	DATAat0x126b6(%rip), %rdx
    000009ea: 	callq	_Z20test_constant_resultIfx16mathlib_llroundfIfEEvPT_iPKc # Offset: 2538
    000009ef: 	movq	%rbp, %rdi
    000009f2: 	movl	$0x1f40, %esi
    000009f7: 	leaq	DATAat0x126c4(%rip), %rdx
    000009fe: 	callq	_Z13test_constantIf14mathlib_truncfIfEEvPT_iPKc # Offset: 2558
    00000a03: 	movq	%rbp, %rdi
    00000a06: 	movl	$0x1f40, %esi
    00000a0b: 	leaq	DATAat0x126d0(%rip), %rdx
    00000a12: 	callq	_Z13test_constantIf13mathlib_coshfIfEEvPT_iPKc # Offset: 2578
    00000a17: 	movq	%rbp, %rdi
    00000a1a: 	movl	$0x1f40, %esi
    00000a1f: 	leaq	DATAat0x126db(%rip), %rdx
    00000a26: 	callq	_Z13test_constantIf13mathlib_sinhfIfEEvPT_iPKc # Offset: 2598
    00000a2b: 	movq	%rbp, %rdi
    00000a2e: 	movl	$0x1f40, %esi
    00000a33: 	leaq	DATAat0x126e6(%rip), %rdx
    00000a3a: 	callq	_Z13test_constantIf13mathlib_tanhfIfEEvPT_iPKc # Offset: 2618
    00000a3f: 	movsd	DATAat0x12878(%rip), %xmm0
    00000a47: 	addsd	init_value(%rip), %xmm0
    00000a4f: 	leaq	dataFloat(%rip), %rbp
    00000a56: 	movq	%rbp, %rax
    00000a59: 	movsd	%xmm0, init_value(%rip)
    00000a61: 	cvtsd2ss	%xmm0, %xmm0
    00000a65: 	shufps	$0x0, %xmm0, %xmm0
    00000a69: 	nopl	(%rax) # Size: 7
.Ltmp8:
    00000a70: 	movaps	%xmm0, (%rax)
    00000a73: 	addq	$0x10, %rax
    00000a77: 	cmpq	%r13, %rax
    00000a7a: 	jne	.Ltmp8 # Offset: 2682
    00000a7c: 	leaq	DATAat0x126f1(%rip), %rdx
    00000a83: 	movl	$0x1f40, %esi
    00000a88: 	movq	%rbp, %rdi
    00000a8b: 	callq	_Z13test_constantIf14mathlib_acoshfIfEEvPT_iPKc # Offset: 2699
    00000a90: 	leaq	DATAat0x126fd(%rip), %rdx
    00000a97: 	movl	$0x1f40, %esi
    00000a9c: 	movq	%rbp, %rdi
    00000a9f: 	callq	_Z13test_constantIf14mathlib_asinhfIfEEvPT_iPKc # Offset: 2719
    00000aa4: 	movsd	init_value(%rip), %xmm0
    00000aac: 	subsd	DATAat0x12878(%rip), %xmm0
    00000ab4: 	movsd	%xmm0, init_value(%rip)
    00000abc: 	cvtsd2ss	%xmm0, %xmm0
    00000ac0: 	shufps	$0x0, %xmm0, %xmm0
    00000ac4: 	nopl	(%rax) # Size: 4
.Ltmp9:
    00000ac8: 	movaps	%xmm0, (%rbx)
    00000acb: 	addq	$0x10, %rbx
    00000acf: 	cmpq	%rbx, %r13
    00000ad2: 	jne	.Ltmp9 # Offset: 2770
    00000ad4: 	movq	%rbp, %rdi
    00000ad7: 	leaq	DATAat0x12709(%rip), %rdx
    00000ade: 	movl	$0x1f40, %esi
    00000ae3: 	callq	_Z13test_constantIf14mathlib_atanhfIfEEvPT_iPKc # Offset: 2787
    00000ae8: 	movss	0xc(%rsp), %xmm0
    00000aee: 	movq	%rbp, %rdi
    00000af1: 	leaq	DATAat0x12715(%rip), %rdx
    00000af8: 	movl	$0x1f40, %esi
    00000afd: 	callq	_Z14test_variable1If13mathlib_fmodfIfEEvPT_iS2_PKc # Offset: 2813
    00000b02: 	movss	0xc(%rsp), %xmm0
    00000b08: 	movq	%rbp, %rdi
    00000b0b: 	leaq	DATAat0x12720(%rip), %rdx
    00000b12: 	movl	$0x1f40, %esi
    00000b17: 	callq	_Z14test_variable1If18mathlib_remainderfIfEEvPT_iS2_PKc # Offset: 2839
    00000b1c: 	movss	0xc(%rsp), %xmm0
    00000b22: 	movq	%rbp, %rdi
    00000b25: 	leaq	DATAat0x12730(%rip), %rdx
    00000b2c: 	movl	$0x1f40, %esi
    00000b31: 	callq	_Z14test_variable1If17mathlib_copysignfIfEEvPT_iS2_PKc # Offset: 2865
    00000b36: 	movl	%r12d, %edx
    00000b39: 	movq	%rbp, %rdi
    00000b3c: 	movl	$0x1f40, %esi
    00000b41: 	leaq	DATAat0x1273f(%rip), %rcx
    00000b48: 	callq	_Z14test_variable1Ifi14mathlib_ldexpfIfiEEvPT_iT0_PKc # Offset: 2888
    00000b4d: 	movl	%r12d, %edx
    00000b50: 	movq	%rbp, %rdi
    00000b53: 	movl	$0x1f40, %esi
    00000b58: 	leaq	DATAat0x1274b(%rip), %rcx
    00000b5f: 	callq	_Z17test_variable1ptrIfi14mathlib_frexpfIfiEEvPT_iT0_PKc # Offset: 2911
    00000b64: 	movq	%rbp, %rdi
    00000b67: 	movl	$0x1f40, %esi
    00000b6c: 	leaq	DATAat0x12757(%rip), %rdx
    00000b73: 	callq	_Z13test_constantIf14mathlib_expm1fIfEEvPT_iPKc # Offset: 2931
    00000b78: 	movq	%rbp, %rdi
    00000b7b: 	movl	$0x1f40, %esi
    00000b80: 	leaq	DATAat0x12763(%rip), %rdx
    00000b87: 	callq	_Z13test_constantIf14mathlib_log1pfIfEEvPT_iPKc # Offset: 2951
    00000b8c: 	movq	%rbp, %rdi
    00000b8f: 	movl	$0x1f40, %esi
    00000b94: 	leaq	DATAat0x1276f(%rip), %rdx
    00000b9b: 	callq	_Z13test_constantIf13mathlib_logbfIfEEvPT_iPKc # Offset: 2971
    00000ba0: 	movq	%rbp, %rdi
    00000ba3: 	movl	$0x1f40, %esi
    00000ba8: 	leaq	DATAat0x1277a(%rip), %rdx
    00000baf: 	callq	_Z13test_constantIf13mathlib_cbrtfIfEEvPT_iPKc # Offset: 2991
    00000bb4: 	movq	%rbp, %rdi
    00000bb7: 	movl	$0x1f40, %esi
    00000bbc: 	leaq	DATAat0x12785(%rip), %rdx
    00000bc3: 	callq	_Z13test_constantIf12mathlib_erffIfEEvPT_iPKc # Offset: 3011
    00000bc8: 	movq	%rbp, %rdi
    00000bcb: 	movl	$0x1f40, %esi
    00000bd0: 	leaq	DATAat0x1278f(%rip), %rdx
    00000bd7: 	callq	_Z13test_constantIf13mathlib_erfcfIfEEvPT_iPKc # Offset: 3031
    00000bdc: 	movq	%rbp, %rdi
    00000bdf: 	movl	$0x1f40, %esi
    00000be4: 	leaq	DATAat0x1279a(%rip), %rdx
    00000beb: 	callq	_Z13test_constantIf15mathlib_lgammafIfEEvPT_iPKc # Offset: 3051
    00000bf0: 	movq	%rbp, %rdi
    00000bf3: 	movl	$0x1f40, %esi
    00000bf8: 	leaq	DATAat0x127a7(%rip), %rdx
    00000bff: 	callq	_Z13test_constantIf15mathlib_tgammafIfEEvPT_iPKc # Offset: 3071
    00000c04: 	movq	%rbp, %rdi
    00000c07: 	movl	$0x1f40, %esi
    00000c0c: 	leaq	DATAat0x127b4(%rip), %rdx
    00000c13: 	callq	_Z13test_constantIf18mathlib_nearbyintfIfEEvPT_iPKc # Offset: 3091
    00000c18: 	movq	%rbp, %rdi
    00000c1b: 	movl	$0x1f40, %esi
    00000c20: 	leaq	DATAat0x127c4(%rip), %rdx
    00000c27: 	callq	_Z13test_constantIf13mathlib_rintfIfEEvPT_iPKc # Offset: 3111
    00000c2c: 	movq	%rbp, %rdi
    00000c2f: 	movl	$0x1f40, %esi
    00000c34: 	leaq	DATAat0x127cf(%rip), %rdx
    00000c3b: 	callq	_Z20test_constant_resultIfi14mathlib_ilogbfIfEEvPT_iPKc # Offset: 3131
    00000c40: 	movq	%rbp, %rdi
    00000c43: 	movl	$0x1f40, %esi
    00000c48: 	leaq	DATAat0x127db(%rip), %rdx
    00000c4f: 	callq	_Z20test_constant_resultIfl14mathlib_lrintfIfEEvPT_iPKc # Offset: 3151
    00000c54: 	movq	%rbp, %rdi
    00000c57: 	movl	$0x1f40, %esi
    00000c5c: 	leaq	DATAat0x127e7(%rip), %rdx
    00000c63: 	callq	_Z20test_constant_resultIfx15mathlib_llrintfIfEEvPT_iPKc # Offset: 3171
    00000c68: 	movl	iterations(%rip), %edx
    00000c6e: 	xorl	%r8d, %r8d
    00000c71: 	xorl	%ecx, %ecx
    00000c73: 	movl	$0x1f40, %esi
    00000c78: 	leaq	DATAat0x127f4(%rip), %rdi
    00000c7f: 	callq	_Z9summarizePKciiii # Offset: 3199
    00000c84: 	addq	$0x10, %rsp
    00000c88: 	xorl	%eax, %eax
    00000c8a: 	popq	%rbx
    00000c8b: 	popq	%rbp
    00000c8c: 	popq	%r12
    00000c8e: 	popq	%r13
    00000c90: 	popq	%r14
    00000c92: 	retq # Offset: 3218
.Ltmp3:
    00000c93: 	movq	0x8(%r14), %rdi
    00000c97: 	movl	$0xa, %edx
    00000c9c: 	xorl	%esi, %esi
    00000c9e: 	callq	strtol@PLT # Offset: 3230
    00000ca3: 	movl	%eax, iterations(%rip)
    00000ca9: 	cmpl	$0x2, %r13d
    00000cad: 	jle	.Ltmp10 # Offset: 3245
    00000cb3: 	movq	0x10(%r14), %rdi
    00000cb7: 	xorl	%esi, %esi
    00000cb9: 	callq	strtod@PLT # Offset: 3257
    00000cbe: 	movsd	%xmm0, init_value(%rip)
    00000cc6: 	cmpl	$0x3, %r13d
    00000cca: 	jle	.Ltmp11 # Offset: 3274
    00000ccc: 	movq	0x18(%r14), %rdi
    00000cd0: 	xorl	%esi, %esi
    00000cd2: 	callq	strtod@PLT # Offset: 3282
    00000cd7: 	movq	%xmm0, %r14
    00000cdc: 	mulsd	DATAat0x12870(%rip), %xmm0
    00000ce4: 	cvttsd2si	%xmm0, %r12d
    00000ce9: 	jmp	.Ltmp12 # Offset: 3305
.Ltmp1:
    00000cee: 	leaq	DATAat0x12136(%rip), %rsi
    00000cf5: 	movl	$0x1, %edi
    00000cfa: 	xorl	%eax, %eax
    00000cfc: 	callq	__printf_chk@PLT # Offset: 3324
    00000d01: 	jmp	.Ltmp10 # Offset: 3329
.Ltmp11:
    00000d06: 	movsd	DATAat0x12868(%rip), %xmm3
    00000d0e: 	movl	$0x5, %r12d
    00000d14: 	movq	%xmm3, %r14
    00000d19: 	jmp	.Ltmp12 # Offset: 3353
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x39c0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x39c0
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x16fd8(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 4
  State       : disassembled
  Address     : 0x39f0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x39f0
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB03:
    00000000: 	leaq	"completed.0/1"(%rip), %rdi
    00000007: 	leaq	"completed.0/1"(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp13 # Offset: 17
    00000013: 	movq	DATAat0x16fe0(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp13 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp13:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 5
  State       : disassembled
  Address     : 0x3a20
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x3a20
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	leaq	"completed.0/1"(%rip), %rdi
    00000007: 	leaq	"completed.0/1"(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp14 # Offset: 34
    00000024: 	movq	DATAat0x16ff0(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp14 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp14:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x3a60
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x3a60
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp15 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp16 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp16:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp15:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x3aa0
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x3aa0
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 8
  State       : disassembled
  Address     : 0x3ab0
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x3ab0
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp17 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp18 # Offset: 38
.Ltmp17:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp19 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp18:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp19:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x12008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 9
  State       : disassembled
  Address     : 0x3b50
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x3b50
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp20 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp21 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp22:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp22 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp35:
    00000069: 	leaq	DATAat0x12152(%rip), %rbp
    00000070: 	leaq	DATAat0x12028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x12068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp23 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x12830(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x12098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x12828(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp24 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp28:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp25 # Offset: 244
    000000fa: 	movq	DATAat0x12818(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp29:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x12818(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp26 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp26:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x12137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x12830(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp27 # Offset: 398
.Ltmp24:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp28 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp29 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp25:
    000001c8: 	movq	DATAat0x12820(%rip), %rsi
    000001cf: 	movq	DATAat0x12818(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp26 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp27:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp23 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp30 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp31:
    00000210: 	addq	$0x10, %rax
.Ltmp30:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp31 # Offset: 542
.Ltmp36:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x120c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp32 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp33 # Offset: 592
.Ltmp32:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp20:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp33:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp34:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp34 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x12112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp20 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp21:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp35 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp23:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp36 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x3e80
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x3e80
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp37 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp38 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp39:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp39 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp44:
    0000006a: 	leaq	DATAat0x12152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x120f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x12138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x12152(%rip), %r8
    000000a1: 	leaq	DATAat0x12126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp40 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp41:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x12137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp41 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp40 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp42 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp43:
    00000140: 	addq	$0x10, %rax
.Ltmp42:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp43 # Offset: 334
.Ltmp45:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x120c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp37:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp38:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp44 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp40:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp45 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x4030
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x4030
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x4050
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x4050
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x12828(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_Z13test_constantId12mathlib_fabsIdEEvPT_iPKc" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x4090
  Size        : 0x1ea
  MaxSize     : 0x1f0
  Offset      : 0x4090
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_fabsIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %edx
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%edx, %edx
    00000031: 	jle	.Ltmp46 # Offset: 49
    00000037: 	movl	%r13d, %eax
    0000003a: 	movl	%r13d, %r15d
    0000003d: 	movq	DATAat0x12890(%rip), %xmm3
    00000045: 	movsd	DATAat0x12840(%rip), %xmm7
    0000004d: 	shrl	%eax
    0000004f: 	andl	$-0x2, %r15d
    00000053: 	pxor	%xmm8, %xmm8
    00000058: 	xorl	%r14d, %r14d
    0000005b: 	subl	$0x1, %eax
    0000005e: 	movsd	DATAat0x12848(%rip), %xmm6
    00000066: 	movsd	init_value(%rip), %xmm9
    0000006f: 	leaq	DATAat0x12802(%rip), %rbp
    00000076: 	shlq	$0x4, %rax
    0000007a: 	movapd	DATAat0x12880(%rip), %xmm4
    00000082: 	leaq	0x10(%rbx,%rax), %r12
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp53:
    00000090: 	movapd	%xmm9, %xmm5
    00000095: 	andpd	%xmm3, %xmm5
    00000099: 	mulsd	%xmm6, %xmm5
    0000009d: 	testl	%r13d, %r13d
    000000a0: 	jle	.Ltmp47 # Offset: 160
    000000a6: 	cmpl	$0x1, %r13d
    000000aa: 	je	.Ltmp48 # Offset: 170
    000000b0: 	movq	%rbx, %rax
    000000b3: 	movapd	%xmm8, %xmm0
    000000b8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp49:
    000000c0: 	movupd	(%rax), %xmm1
    000000c4: 	addq	$0x10, %rax
    000000c8: 	andpd	%xmm4, %xmm1
    000000cc: 	addsd	%xmm1, %xmm0
    000000d0: 	unpckhpd	%xmm1, %xmm1
    000000d4: 	addsd	%xmm1, %xmm0
    000000d8: 	cmpq	%rax, %r12
    000000db: 	jne	.Ltmp49 # Offset: 219
    000000dd: 	movslq	%r15d, %rax
    000000e0: 	cmpl	%r13d, %r15d
    000000e3: 	je	.Ltmp50 # Offset: 227
.Ltmp54:
    000000e5: 	movsd	(%rbx,%rax,8), %xmm1
    000000ea: 	andpd	%xmm3, %xmm1
    000000ee: 	addsd	%xmm1, %xmm0
.Ltmp50:
    000000f2: 	movapd	%xmm0, %xmm2
    000000f6: 	movapd	%xmm0, %xmm1
    000000fa: 	andpd	%xmm3, %xmm2
    000000fe: 	comisd	DATAat0x12838(%rip), %xmm2
    00000106: 	subsd	%xmm5, %xmm1
    0000010a: 	jbe	.Ltmp51 # Offset: 266
    0000010c: 	divsd	%xmm0, %xmm1
.Ltmp51:
    00000110: 	andpd	%xmm3, %xmm1
    00000114: 	comisd	%xmm1, %xmm7
    00000118: 	jbe	.Ltmp52 # Offset: 280
    0000011a: 	addl	$0x1, %r14d
    0000011e: 	cmpl	%edx, %r14d
    00000121: 	jl	.Ltmp53 # Offset: 289
.Ltmp46:
    00000127: 	callq	clock@PLT # Offset: 295
    0000012c: 	pxor	%xmm0, %xmm0
    00000130: 	movq	0x8(%rsp), %rdi
    00000135: 	movq	%rax, end_time(%rip)
    0000013c: 	subq	start_time(%rip), %rax
    00000143: 	cvtsi2sd	%rax, %xmm0
    00000148: 	divsd	DATAat0x12828(%rip), %xmm0
    00000150: 	addq	$0x18, %rsp
    00000154: 	popq	%rbx
    00000155: 	popq	%rbp
    00000156: 	popq	%r12
    00000158: 	popq	%r13
    0000015a: 	popq	%r14
    0000015c: 	popq	%r15
    0000015e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 350
    00000163: 	nopl	(%rax,%rax) # Size: 5
.Ltmp52:
    00000168: 	movl	current_test(%rip), %edx
    0000016e: 	movq	%rbp, %rsi
    00000171: 	movl	$0x1, %edi
    00000176: 	xorl	%eax, %eax
    00000178: 	addl	$0x1, %r14d
    0000017c: 	callq	__printf_chk@PLT # Offset: 380
    00000181: 	movl	iterations(%rip), %edx
    00000187: 	cmpl	%edx, %r14d
    0000018a: 	jge	.Ltmp46 # Offset: 394
    0000018c: 	movq	DATAat0x12848(%rip), %rax
    00000193: 	movq	DATAat0x12890(%rip), %xmm3
    0000019b: 	pxor	%xmm8, %xmm8
    000001a0: 	movsd	init_value(%rip), %xmm9
    000001a9: 	movapd	DATAat0x12880(%rip), %xmm4
    000001b1: 	movq	%rax, %xmm6
    000001b6: 	movq	DATAat0x12840(%rip), %rax
    000001bd: 	movq	%rax, %xmm7
    000001c2: 	jmp	.Ltmp53 # Offset: 450
    000001c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp47:
    000001d0: 	movapd	%xmm8, %xmm1
    000001d5: 	subsd	%xmm5, %xmm1
    000001d9: 	jmp	.Ltmp51 # Offset: 473
.Ltmp48:
    000001de: 	xorl	%eax, %eax
    000001e0: 	movapd	%xmm8, %xmm0
    000001e5: 	jmp	.Ltmp54 # Offset: 485
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_fabsIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_ceilIdEEvPT_iPKc" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x4280
  Size        : 0x227
  MaxSize     : 0x230
  Offset      : 0x4280
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_ceilIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	callq	clock@PLT # Offset: 21
    0000001a: 	movl	iterations(%rip), %ecx
    00000020: 	movq	%rax, start_time(%rip)
    00000027: 	testl	%ecx, %ecx
    00000029: 	jle	.Ltmp55 # Offset: 41
    0000002f: 	leal	-0x1(%r14), %eax
    00000033: 	xorl	%r12d, %r12d
    00000036: 	movsd	DATAat0x12850(%rip), %xmm5
    0000003e: 	movq	DATAat0x12890(%rip), %xmm7
    00000046: 	movsd	DATAat0x12840(%rip), %xmm10
    0000004f: 	movsd	DATAat0x12820(%rip), %xmm6
    00000057: 	leaq	0x8(%r13,%rax,8), %rbx
    0000005c: 	pxor	%xmm8, %xmm8
    00000061: 	movsd	init_value(%rip), %xmm12
    0000006a: 	movsd	DATAat0x12848(%rip), %xmm9
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp62:
    00000078: 	movapd	%xmm12, %xmm0
    0000007d: 	movapd	%xmm12, %xmm11
    00000082: 	movapd	%xmm7, %xmm2
    00000086: 	andpd	%xmm7, %xmm0
    0000008a: 	ucomisd	%xmm0, %xmm5
    0000008e: 	jbe	.Ltmp56 # Offset: 142
    00000090: 	cvttsd2si	%xmm12, %rax
    00000095: 	pxor	%xmm0, %xmm0
    00000099: 	movapd	%xmm12, %xmm1
    0000009e: 	andnpd	%xmm12, %xmm2
    000000a3: 	cvtsi2sd	%rax, %xmm0
    000000a8: 	cmpnlesd	%xmm0, %xmm1
    000000ad: 	andpd	%xmm6, %xmm1
    000000b1: 	addsd	%xmm1, %xmm0
    000000b5: 	orpd	%xmm2, %xmm0
    000000b9: 	movapd	%xmm0, %xmm11
.Ltmp56:
    000000be: 	mulsd	%xmm9, %xmm11
    000000c3: 	movapd	%xmm8, %xmm2
    000000c8: 	movapd	%xmm7, %xmm4
    000000cc: 	movq	%r13, %rax
    000000cf: 	testl	%r14d, %r14d
    000000d2: 	jle	.Ltmp57 # Offset: 210
    000000d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp59:
    000000e0: 	movsd	(%rax), %xmm0
    000000e4: 	movapd	%xmm0, %xmm1
    000000e8: 	andpd	%xmm4, %xmm1
    000000ec: 	ucomisd	%xmm1, %xmm5
    000000f0: 	jbe	.Ltmp58 # Offset: 240
    000000f2: 	cvttsd2si	%xmm0, %rdx
    000000f7: 	pxor	%xmm1, %xmm1
    000000fb: 	movapd	%xmm0, %xmm3
    000000ff: 	cvtsi2sd	%rdx, %xmm1
    00000104: 	cmpnlesd	%xmm1, %xmm3
    00000109: 	andpd	%xmm6, %xmm3
    0000010d: 	addsd	%xmm3, %xmm1
    00000111: 	movapd	%xmm4, %xmm3
    00000115: 	andnpd	%xmm0, %xmm3
    00000119: 	movapd	%xmm1, %xmm0
    0000011d: 	orpd	%xmm3, %xmm0
.Ltmp58:
    00000121: 	addq	$0x8, %rax
    00000125: 	addsd	%xmm0, %xmm2
    00000129: 	cmpq	%rax, %rbx
    0000012c: 	jne	.Ltmp59 # Offset: 300
    0000012e: 	movapd	%xmm2, %xmm1
    00000132: 	movapd	%xmm2, %xmm0
    00000136: 	andpd	%xmm7, %xmm1
    0000013a: 	comisd	DATAat0x12838(%rip), %xmm1
    00000142: 	subsd	%xmm11, %xmm0
    00000147: 	jbe	.Ltmp60 # Offset: 327
    00000149: 	divsd	%xmm2, %xmm0
.Ltmp60:
    0000014d: 	andpd	%xmm7, %xmm0
    00000151: 	comisd	%xmm0, %xmm10
    00000156: 	jbe	.Ltmp61 # Offset: 342
    00000158: 	addl	$0x1, %r12d
    0000015c: 	cmpl	%ecx, %r12d
    0000015f: 	jl	.Ltmp62 # Offset: 351
.Ltmp55:
    00000165: 	callq	clock@PLT # Offset: 357
    0000016a: 	popq	%rbx
    0000016b: 	pxor	%xmm0, %xmm0
    0000016f: 	movq	%rbp, %rdi
    00000172: 	movq	%rax, end_time(%rip)
    00000179: 	popq	%rbp
    0000017a: 	subq	start_time(%rip), %rax
    00000181: 	popq	%r12
    00000183: 	popq	%r13
    00000185: 	cvtsi2sd	%rax, %xmm0
    0000018a: 	popq	%r14
    0000018c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000194: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 404
    00000199: 	nopl	(%rax) # Size: 7
.Ltmp61:
    000001a0: 	movl	current_test(%rip), %edx
    000001a6: 	leaq	DATAat0x12802(%rip), %rsi
    000001ad: 	movl	$0x1, %edi
    000001b2: 	xorl	%eax, %eax
    000001b4: 	addl	$0x1, %r12d
    000001b8: 	callq	__printf_chk@PLT # Offset: 440
    000001bd: 	movl	iterations(%rip), %ecx
    000001c3: 	cmpl	%ecx, %r12d
    000001c6: 	jge	.Ltmp55 # Offset: 454
    000001c8: 	movq	DATAat0x12840(%rip), %rax
    000001cf: 	movq	DATAat0x12890(%rip), %xmm7
    000001d7: 	pxor	%xmm8, %xmm8
    000001dc: 	movsd	init_value(%rip), %xmm12
    000001e5: 	movq	%rax, %xmm10
    000001ea: 	movq	DATAat0x12848(%rip), %rax
    000001f1: 	movq	%rax, %xmm9
    000001f6: 	movq	DATAat0x12850(%rip), %rax
    000001fd: 	movq	%rax, %xmm5
    00000202: 	movq	DATAat0x12820(%rip), %rax
    00000209: 	movq	%rax, %xmm6
    0000020e: 	jmp	.Ltmp62 # Offset: 526
    00000213: 	nopl	(%rax,%rax) # Size: 5
.Ltmp57:
    00000218: 	movapd	%xmm8, %xmm0
    0000021d: 	subsd	%xmm11, %xmm0
    00000222: 	jmp	.Ltmp60 # Offset: 546
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_ceilIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_floorIdEEvPT_iPKc" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x44b0
  Size        : 0x227
  MaxSize     : 0x230
  Offset      : 0x44b0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_floorIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	callq	clock@PLT # Offset: 21
    0000001a: 	movl	iterations(%rip), %ecx
    00000020: 	movq	%rax, start_time(%rip)
    00000027: 	testl	%ecx, %ecx
    00000029: 	jle	.Ltmp63 # Offset: 41
    0000002f: 	leal	-0x1(%r14), %eax
    00000033: 	xorl	%r12d, %r12d
    00000036: 	movsd	DATAat0x12850(%rip), %xmm5
    0000003e: 	movq	DATAat0x12890(%rip), %xmm7
    00000046: 	movsd	DATAat0x12840(%rip), %xmm11
    0000004f: 	movsd	DATAat0x12820(%rip), %xmm6
    00000057: 	leaq	0x8(%r13,%rax,8), %rbx
    0000005c: 	pxor	%xmm9, %xmm9
    00000061: 	movsd	init_value(%rip), %xmm8
    0000006a: 	movsd	DATAat0x12848(%rip), %xmm10
    00000073: 	nopl	(%rax,%rax) # Size: 5
.Ltmp70:
    00000078: 	movapd	%xmm8, %xmm0
    0000007d: 	movapd	%xmm8, %xmm12
    00000082: 	movapd	%xmm7, %xmm2
    00000086: 	andpd	%xmm7, %xmm0
    0000008a: 	ucomisd	%xmm0, %xmm5
    0000008e: 	jbe	.Ltmp64 # Offset: 142
    00000090: 	cvttsd2si	%xmm8, %rax
    00000095: 	pxor	%xmm0, %xmm0
    00000099: 	andnpd	%xmm8, %xmm2
    0000009e: 	cvtsi2sd	%rax, %xmm0
    000000a3: 	movapd	%xmm0, %xmm1
    000000a7: 	cmpnlesd	%xmm8, %xmm1
    000000ad: 	andpd	%xmm6, %xmm1
    000000b1: 	subsd	%xmm1, %xmm0
    000000b5: 	orpd	%xmm2, %xmm0
    000000b9: 	movapd	%xmm0, %xmm12
.Ltmp64:
    000000be: 	mulsd	%xmm10, %xmm12
    000000c3: 	movapd	%xmm9, %xmm2
    000000c8: 	movapd	%xmm7, %xmm4
    000000cc: 	movq	%r13, %rax
    000000cf: 	testl	%r14d, %r14d
    000000d2: 	jle	.Ltmp65 # Offset: 210
    000000d8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp67:
    000000e0: 	movsd	(%rax), %xmm0
    000000e4: 	movapd	%xmm0, %xmm1
    000000e8: 	andpd	%xmm4, %xmm1
    000000ec: 	ucomisd	%xmm1, %xmm5
    000000f0: 	jbe	.Ltmp66 # Offset: 240
    000000f2: 	cvttsd2si	%xmm0, %rdx
    000000f7: 	pxor	%xmm1, %xmm1
    000000fb: 	cvtsi2sd	%rdx, %xmm1
    00000100: 	movapd	%xmm1, %xmm3
    00000104: 	cmpnlesd	%xmm0, %xmm3
    00000109: 	andpd	%xmm6, %xmm3
    0000010d: 	subsd	%xmm3, %xmm1
    00000111: 	movapd	%xmm4, %xmm3
    00000115: 	andnpd	%xmm0, %xmm3
    00000119: 	movapd	%xmm1, %xmm0
    0000011d: 	orpd	%xmm3, %xmm0
.Ltmp66:
    00000121: 	addq	$0x8, %rax
    00000125: 	addsd	%xmm0, %xmm2
    00000129: 	cmpq	%rax, %rbx
    0000012c: 	jne	.Ltmp67 # Offset: 300
    0000012e: 	movapd	%xmm2, %xmm1
    00000132: 	movapd	%xmm2, %xmm0
    00000136: 	andpd	%xmm7, %xmm1
    0000013a: 	comisd	DATAat0x12838(%rip), %xmm1
    00000142: 	subsd	%xmm12, %xmm0
    00000147: 	jbe	.Ltmp68 # Offset: 327
    00000149: 	divsd	%xmm2, %xmm0
.Ltmp68:
    0000014d: 	andpd	%xmm7, %xmm0
    00000151: 	comisd	%xmm0, %xmm11
    00000156: 	jbe	.Ltmp69 # Offset: 342
    00000158: 	addl	$0x1, %r12d
    0000015c: 	cmpl	%ecx, %r12d
    0000015f: 	jl	.Ltmp70 # Offset: 351
.Ltmp63:
    00000165: 	callq	clock@PLT # Offset: 357
    0000016a: 	popq	%rbx
    0000016b: 	pxor	%xmm0, %xmm0
    0000016f: 	movq	%rbp, %rdi
    00000172: 	movq	%rax, end_time(%rip)
    00000179: 	popq	%rbp
    0000017a: 	subq	start_time(%rip), %rax
    00000181: 	popq	%r12
    00000183: 	popq	%r13
    00000185: 	cvtsi2sd	%rax, %xmm0
    0000018a: 	popq	%r14
    0000018c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000194: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 404
    00000199: 	nopl	(%rax) # Size: 7
.Ltmp69:
    000001a0: 	movl	current_test(%rip), %edx
    000001a6: 	leaq	DATAat0x12802(%rip), %rsi
    000001ad: 	movl	$0x1, %edi
    000001b2: 	xorl	%eax, %eax
    000001b4: 	addl	$0x1, %r12d
    000001b8: 	callq	__printf_chk@PLT # Offset: 440
    000001bd: 	movl	iterations(%rip), %ecx
    000001c3: 	cmpl	%ecx, %r12d
    000001c6: 	jge	.Ltmp63 # Offset: 454
    000001c8: 	movq	DATAat0x12840(%rip), %rax
    000001cf: 	movq	DATAat0x12890(%rip), %xmm7
    000001d7: 	pxor	%xmm9, %xmm9
    000001dc: 	movsd	init_value(%rip), %xmm8
    000001e5: 	movq	%rax, %xmm11
    000001ea: 	movq	DATAat0x12848(%rip), %rax
    000001f1: 	movq	%rax, %xmm10
    000001f6: 	movq	DATAat0x12850(%rip), %rax
    000001fd: 	movq	%rax, %xmm5
    00000202: 	movq	DATAat0x12820(%rip), %rax
    00000209: 	movq	%rax, %xmm6
    0000020e: 	jmp	.Ltmp70 # Offset: 526
    00000213: 	nopl	(%rax,%rax) # Size: 5
.Ltmp65:
    00000218: 	movapd	%xmm9, %xmm0
    0000021d: 	subsd	%xmm12, %xmm0
    00000222: 	jmp	.Ltmp68 # Offset: 546
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_floorIdEEvPT_iPKc"

Binary Function "_Z14test_variable1Id10inline_maxIdEEvPT_iS2_PKc" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x46e0
  Size        : 0x241
  MaxSize     : 0x250
  Offset      : 0x46e0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id10inline_maxIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, 0x10(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %edx
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	testl	%edx, %edx
    00000037: 	jle	.Ltmp71 # Offset: 55
    0000003d: 	movl	%r13d, %eax
    00000040: 	movsd	0x10(%rsp), %xmm3
    00000046: 	movl	%r13d, %r15d
    00000049: 	xorl	%r14d, %r14d
    0000004c: 	shrl	%eax
    0000004e: 	andl	$-0x2, %r15d
    00000052: 	movq	DATAat0x12890(%rip), %xmm6
    0000005a: 	movsd	DATAat0x12848(%rip), %xmm7
    00000062: 	subl	$0x1, %eax
    00000065: 	movapd	%xmm3, %xmm4
    00000069: 	movsd	DATAat0x12840(%rip), %xmm8
    00000072: 	movsd	init_value(%rip), %xmm5
    0000007a: 	shlq	$0x4, %rax
    0000007e: 	pxor	%xmm9, %xmm9
    00000083: 	unpcklpd	%xmm4, %xmm4
    00000087: 	movsd	DATAat0x12838(%rip), %xmm10
    00000090: 	leaq	0x10(%rbx,%rax), %r12
    00000095: 	leaq	DATAat0x12802(%rip), %rbp
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp78:
    000000a0: 	testl	%r13d, %r13d
    000000a3: 	jle	.Ltmp72 # Offset: 163
.Ltmp79:
    000000a9: 	cmpl	$0x1, %r13d
    000000ad: 	je	.Ltmp73 # Offset: 173
    000000b3: 	movq	%rbx, %rax
    000000b6: 	movapd	%xmm9, %xmm0
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp74:
    000000c0: 	movupd	(%rax), %xmm2
    000000c4: 	movapd	%xmm4, %xmm1
    000000c8: 	addq	$0x10, %rax
    000000cc: 	maxpd	%xmm2, %xmm1
    000000d0: 	addsd	%xmm1, %xmm0
    000000d4: 	unpckhpd	%xmm1, %xmm1
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	cmpq	%rax, %r12
    000000df: 	jne	.Ltmp74 # Offset: 223
    000000e1: 	movslq	%r15d, %rax
    000000e4: 	cmpl	%r15d, %r13d
    000000e7: 	je	.Ltmp75 # Offset: 231
.Ltmp81:
    000000e9: 	movapd	%xmm3, %xmm1
    000000ed: 	maxsd	(%rbx,%rax,8), %xmm1
    000000f2: 	addsd	%xmm1, %xmm0
.Ltmp75:
    000000f6: 	movapd	%xmm5, %xmm1
    000000fa: 	movapd	%xmm5, %xmm2
    000000fe: 	movapd	%xmm0, %xmm11
    00000103: 	cmpnltsd	%xmm3, %xmm1
    00000108: 	andpd	%xmm6, %xmm11
    0000010d: 	comisd	%xmm10, %xmm11
    00000112: 	andpd	%xmm1, %xmm2
    00000116: 	andnpd	%xmm3, %xmm1
    0000011a: 	orpd	%xmm2, %xmm1
    0000011e: 	movapd	%xmm0, %xmm2
    00000122: 	mulsd	%xmm7, %xmm1
    00000126: 	subsd	%xmm1, %xmm2
    0000012a: 	jbe	.Ltmp76 # Offset: 298
    0000012c: 	divsd	%xmm0, %xmm2
.Ltmp76:
    00000130: 	andpd	%xmm6, %xmm2
    00000134: 	comisd	%xmm2, %xmm8
    00000139: 	jbe	.Ltmp77 # Offset: 313
    0000013b: 	addl	$0x1, %r14d
    0000013f: 	cmpl	%edx, %r14d
    00000142: 	jl	.Ltmp78 # Offset: 322
.Ltmp71:
    00000148: 	callq	clock@PLT # Offset: 328
    0000014d: 	pxor	%xmm0, %xmm0
    00000151: 	movq	0x18(%rsp), %rdi
    00000156: 	movq	%rax, end_time(%rip)
    0000015d: 	subq	start_time(%rip), %rax
    00000164: 	cvtsi2sd	%rax, %xmm0
    00000169: 	divsd	DATAat0x12828(%rip), %xmm0
    00000171: 	addq	$0x28, %rsp
    00000175: 	popq	%rbx
    00000176: 	popq	%rbp
    00000177: 	popq	%r12
    00000179: 	popq	%r13
    0000017b: 	popq	%r14
    0000017d: 	popq	%r15
    0000017f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp77:
    00000188: 	movl	current_test(%rip), %edx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	movl	$0x1, %edi
    00000196: 	xorl	%eax, %eax
    00000198: 	movaps	%xmm4, (%rsp)
    0000019c: 	addl	$0x1, %r14d
    000001a0: 	movsd	%xmm3, 0x10(%rsp)
    000001a6: 	callq	__printf_chk@PLT # Offset: 422
    000001ab: 	movl	iterations(%rip), %edx
    000001b1: 	cmpl	%r14d, %edx
    000001b4: 	jle	.Ltmp71 # Offset: 436
    000001b6: 	movsd	0x10(%rsp), %xmm3
    000001bc: 	movq	DATAat0x12848(%rip), %rax
    000001c3: 	pxor	%xmm9, %xmm9
    000001c8: 	movsd	init_value(%rip), %xmm5
    000001d0: 	movq	DATAat0x12890(%rip), %xmm6
    000001d8: 	movq	%rax, %xmm7
    000001dd: 	movq	DATAat0x12840(%rip), %rax
    000001e4: 	movapd	(%rsp), %xmm4
    000001e9: 	movq	%rax, %xmm8
    000001ee: 	movq	DATAat0x12838(%rip), %rax
    000001f5: 	movq	%rax, %xmm10
    000001fa: 	testl	%r13d, %r13d
    000001fd: 	jg	.Ltmp79 # Offset: 509
.Ltmp72:
    00000203: 	comisd	%xmm5, %xmm3
    00000207: 	jbe	.Ltmp80 # Offset: 519
    00000209: 	movapd	%xmm3, %xmm0
    0000020d: 	movapd	%xmm9, %xmm2
    00000212: 	mulsd	%xmm7, %xmm0
    00000216: 	subsd	%xmm0, %xmm2
    0000021a: 	jmp	.Ltmp76 # Offset: 538
.Ltmp73:
    0000021f: 	xorl	%eax, %eax
    00000221: 	movapd	%xmm9, %xmm0
    00000226: 	jmp	.Ltmp81 # Offset: 550
.Ltmp80:
    0000022b: 	movapd	%xmm5, %xmm0
    0000022f: 	movapd	%xmm9, %xmm2
    00000234: 	mulsd	%xmm7, %xmm0
    00000238: 	subsd	%xmm0, %xmm2
    0000023c: 	jmp	.Ltmp76 # Offset: 572
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id10inline_maxIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id10inline_minIdEEvPT_iS2_PKc" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x4930
  Size        : 0x241
  MaxSize     : 0x250
  Offset      : 0x4930
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id10inline_minIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, 0x10(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %edx
    0000002e: 	movq	%rax, start_time(%rip)
    00000035: 	testl	%edx, %edx
    00000037: 	jle	.Ltmp82 # Offset: 55
    0000003d: 	movl	%r13d, %eax
    00000040: 	movsd	0x10(%rsp), %xmm3
    00000046: 	movl	%r13d, %r15d
    00000049: 	xorl	%r14d, %r14d
    0000004c: 	shrl	%eax
    0000004e: 	andl	$-0x2, %r15d
    00000052: 	movq	DATAat0x12890(%rip), %xmm6
    0000005a: 	movsd	DATAat0x12848(%rip), %xmm7
    00000062: 	subl	$0x1, %eax
    00000065: 	movapd	%xmm3, %xmm4
    00000069: 	movsd	DATAat0x12840(%rip), %xmm8
    00000072: 	movsd	init_value(%rip), %xmm5
    0000007a: 	shlq	$0x4, %rax
    0000007e: 	pxor	%xmm9, %xmm9
    00000083: 	unpcklpd	%xmm4, %xmm4
    00000087: 	movsd	DATAat0x12838(%rip), %xmm10
    00000090: 	leaq	0x10(%rbx,%rax), %r12
    00000095: 	leaq	DATAat0x12802(%rip), %rbp
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp89:
    000000a0: 	testl	%r13d, %r13d
    000000a3: 	jle	.Ltmp83 # Offset: 163
.Ltmp90:
    000000a9: 	cmpl	$0x1, %r13d
    000000ad: 	je	.Ltmp84 # Offset: 173
    000000b3: 	movq	%rbx, %rax
    000000b6: 	movapd	%xmm9, %xmm0
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp85:
    000000c0: 	movupd	(%rax), %xmm2
    000000c4: 	movapd	%xmm4, %xmm1
    000000c8: 	addq	$0x10, %rax
    000000cc: 	minpd	%xmm2, %xmm1
    000000d0: 	addsd	%xmm1, %xmm0
    000000d4: 	unpckhpd	%xmm1, %xmm1
    000000d8: 	addsd	%xmm1, %xmm0
    000000dc: 	cmpq	%rax, %r12
    000000df: 	jne	.Ltmp85 # Offset: 223
    000000e1: 	movslq	%r15d, %rax
    000000e4: 	cmpl	%r15d, %r13d
    000000e7: 	je	.Ltmp86 # Offset: 231
.Ltmp92:
    000000e9: 	movapd	%xmm3, %xmm1
    000000ed: 	minsd	(%rbx,%rax,8), %xmm1
    000000f2: 	addsd	%xmm1, %xmm0
.Ltmp86:
    000000f6: 	movapd	%xmm3, %xmm1
    000000fa: 	movapd	%xmm5, %xmm2
    000000fe: 	movapd	%xmm0, %xmm11
    00000103: 	cmpnltsd	%xmm5, %xmm1
    00000108: 	andpd	%xmm6, %xmm11
    0000010d: 	comisd	%xmm10, %xmm11
    00000112: 	andpd	%xmm1, %xmm2
    00000116: 	andnpd	%xmm3, %xmm1
    0000011a: 	orpd	%xmm2, %xmm1
    0000011e: 	movapd	%xmm0, %xmm2
    00000122: 	mulsd	%xmm7, %xmm1
    00000126: 	subsd	%xmm1, %xmm2
    0000012a: 	jbe	.Ltmp87 # Offset: 298
    0000012c: 	divsd	%xmm0, %xmm2
.Ltmp87:
    00000130: 	andpd	%xmm6, %xmm2
    00000134: 	comisd	%xmm2, %xmm8
    00000139: 	jbe	.Ltmp88 # Offset: 313
    0000013b: 	addl	$0x1, %r14d
    0000013f: 	cmpl	%edx, %r14d
    00000142: 	jl	.Ltmp89 # Offset: 322
.Ltmp82:
    00000148: 	callq	clock@PLT # Offset: 328
    0000014d: 	pxor	%xmm0, %xmm0
    00000151: 	movq	0x18(%rsp), %rdi
    00000156: 	movq	%rax, end_time(%rip)
    0000015d: 	subq	start_time(%rip), %rax
    00000164: 	cvtsi2sd	%rax, %xmm0
    00000169: 	divsd	DATAat0x12828(%rip), %xmm0
    00000171: 	addq	$0x28, %rsp
    00000175: 	popq	%rbx
    00000176: 	popq	%rbp
    00000177: 	popq	%r12
    00000179: 	popq	%r13
    0000017b: 	popq	%r14
    0000017d: 	popq	%r15
    0000017f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 383
    00000184: 	nopl	(%rax) # Size: 4
.Ltmp88:
    00000188: 	movl	current_test(%rip), %edx
    0000018e: 	movq	%rbp, %rsi
    00000191: 	movl	$0x1, %edi
    00000196: 	xorl	%eax, %eax
    00000198: 	movaps	%xmm4, (%rsp)
    0000019c: 	addl	$0x1, %r14d
    000001a0: 	movsd	%xmm3, 0x10(%rsp)
    000001a6: 	callq	__printf_chk@PLT # Offset: 422
    000001ab: 	movl	iterations(%rip), %edx
    000001b1: 	cmpl	%r14d, %edx
    000001b4: 	jle	.Ltmp82 # Offset: 436
    000001b6: 	movsd	0x10(%rsp), %xmm3
    000001bc: 	movq	DATAat0x12848(%rip), %rax
    000001c3: 	pxor	%xmm9, %xmm9
    000001c8: 	movsd	init_value(%rip), %xmm5
    000001d0: 	movq	DATAat0x12890(%rip), %xmm6
    000001d8: 	movq	%rax, %xmm7
    000001dd: 	movq	DATAat0x12840(%rip), %rax
    000001e4: 	movapd	(%rsp), %xmm4
    000001e9: 	movq	%rax, %xmm8
    000001ee: 	movq	DATAat0x12838(%rip), %rax
    000001f5: 	movq	%rax, %xmm10
    000001fa: 	testl	%r13d, %r13d
    000001fd: 	jg	.Ltmp90 # Offset: 509
.Ltmp83:
    00000203: 	comisd	%xmm3, %xmm5
    00000207: 	jbe	.Ltmp91 # Offset: 519
    00000209: 	movapd	%xmm3, %xmm0
    0000020d: 	movapd	%xmm9, %xmm2
    00000212: 	mulsd	%xmm7, %xmm0
    00000216: 	subsd	%xmm0, %xmm2
    0000021a: 	jmp	.Ltmp87 # Offset: 538
.Ltmp84:
    0000021f: 	xorl	%eax, %eax
    00000221: 	movapd	%xmm9, %xmm0
    00000226: 	jmp	.Ltmp92 # Offset: 550
.Ltmp91:
    0000022b: 	movapd	%xmm5, %xmm0
    0000022f: 	movapd	%xmm9, %xmm2
    00000234: 	mulsd	%xmm7, %xmm0
    00000238: 	subsd	%xmm0, %xmm2
    0000023c: 	jmp	.Ltmp87 # Offset: 572
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id10inline_minIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id12mathlib_fmaxIdEEvPT_iS2_PKc" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x4b80
  Size        : 0x1af
  MaxSize     : 0x1b0
  Offset      : 0x4b80
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id12mathlib_fmaxIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x28(%rsp)
    0000001d: 	movsd	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %r12d
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%r12d, %r12d
    00000039: 	jle	.Ltmp93 # Offset: 57
    0000003f: 	movsd	init_value(%rip), %xmm7
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movsd	0x8(%rsp), %xmm1
    00000051: 	xorl	%ebp, %ebp
    00000053: 	leaq	0x8(%r13,%rax,8), %rbx
    00000058: 	movsd	%xmm7, 0x20(%rsp)
    0000005e: 	nop # Size: 2
.Ltmp98:
    00000060: 	movsd	0x20(%rsp), %xmm0
    00000066: 	movsd	%xmm1, 0x8(%rsp)
    0000006c: 	movq	%r13, %r15
    0000006f: 	callq	fmax@PLT # Offset: 111
    00000074: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000007c: 	testl	%r14d, %r14d
    0000007f: 	pxor	%xmm2, %xmm2
    00000083: 	movsd	0x8(%rsp), %xmm1
    00000089: 	movsd	%xmm0, 0x18(%rsp)
    0000008f: 	jle	.Ltmp94 # Offset: 143
    00000095: 	nopl	(%rax) # Size: 3
.Ltmp95:
    00000098: 	movsd	(%r15), %xmm0
    0000009d: 	movsd	%xmm2, 0x10(%rsp)
    000000a3: 	addq	$0x8, %r15
    000000a7: 	movsd	%xmm1, 0x8(%rsp)
    000000ad: 	callq	fmax@PLT # Offset: 173
    000000b2: 	movsd	0x10(%rsp), %xmm2
    000000b8: 	cmpq	%r15, %rbx
    000000bb: 	movsd	0x8(%rsp), %xmm1
    000000c1: 	addsd	%xmm0, %xmm2
    000000c5: 	jne	.Ltmp95 # Offset: 197
    000000c7: 	movapd	%xmm2, %xmm3
    000000cb: 	andpd	DATAat0x12890(%rip), %xmm3
    000000d3: 	movapd	%xmm2, %xmm0
    000000d7: 	comisd	DATAat0x12838(%rip), %xmm3
    000000df: 	subsd	0x18(%rsp), %xmm0
    000000e5: 	jbe	.Ltmp96 # Offset: 229
    000000e7: 	divsd	%xmm2, %xmm0
.Ltmp96:
    000000eb: 	andpd	DATAat0x12890(%rip), %xmm0
    000000f3: 	movsd	DATAat0x12840(%rip), %xmm4
    000000fb: 	comisd	%xmm0, %xmm4
    000000ff: 	jbe	.Ltmp97 # Offset: 255
    00000101: 	addl	$0x1, %ebp
    00000104: 	cmpl	%r12d, %ebp
    00000107: 	jl	.Ltmp98 # Offset: 263
.Ltmp93:
    0000010d: 	callq	clock@PLT # Offset: 269
    00000112: 	pxor	%xmm0, %xmm0
    00000116: 	movq	0x28(%rsp), %rdi
    0000011b: 	movq	%rax, end_time(%rip)
    00000122: 	subq	start_time(%rip), %rax
    00000129: 	cvtsi2sd	%rax, %xmm0
    0000012e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000136: 	addq	$0x38, %rsp
    0000013a: 	popq	%rbx
    0000013b: 	popq	%rbp
    0000013c: 	popq	%r12
    0000013e: 	popq	%r13
    00000140: 	popq	%r14
    00000142: 	popq	%r15
    00000144: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 324
    00000149: 	nopl	(%rax) # Size: 7
.Ltmp97:
    00000150: 	movl	current_test(%rip), %edx
    00000156: 	movl	$0x1, %edi
    0000015b: 	xorl	%eax, %eax
    0000015d: 	addl	$0x1, %ebp
    00000160: 	leaq	DATAat0x12802(%rip), %rsi
    00000167: 	movsd	%xmm1, 0x8(%rsp)
    0000016d: 	callq	__printf_chk@PLT # Offset: 365
    00000172: 	movl	iterations(%rip), %r12d
    00000179: 	cmpl	%r12d, %ebp
    0000017c: 	jge	.Ltmp93 # Offset: 380
    0000017e: 	movsd	init_value(%rip), %xmm6
    00000186: 	movsd	0x8(%rsp), %xmm1
    0000018c: 	movsd	%xmm6, 0x20(%rsp)
    00000192: 	jmp	.Ltmp98 # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp94:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	subsd	0x18(%rsp), %xmm0
    000001aa: 	jmp	.Ltmp96 # Offset: 426
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id12mathlib_fmaxIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id12mathlib_fminIdEEvPT_iS2_PKc" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x4d30
  Size        : 0x1af
  MaxSize     : 0x1b0
  Offset      : 0x4d30
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id12mathlib_fminIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rdx, 0x28(%rsp)
    0000001d: 	movsd	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %r12d
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%r12d, %r12d
    00000039: 	jle	.Ltmp99 # Offset: 57
    0000003f: 	movsd	init_value(%rip), %xmm7
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	movsd	0x8(%rsp), %xmm1
    00000051: 	xorl	%ebp, %ebp
    00000053: 	leaq	0x8(%r13,%rax,8), %rbx
    00000058: 	movsd	%xmm7, 0x20(%rsp)
    0000005e: 	nop # Size: 2
.Ltmp104:
    00000060: 	movsd	0x20(%rsp), %xmm0
    00000066: 	movsd	%xmm1, 0x8(%rsp)
    0000006c: 	movq	%r13, %r15
    0000006f: 	callq	fmin@PLT # Offset: 111
    00000074: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000007c: 	testl	%r14d, %r14d
    0000007f: 	pxor	%xmm2, %xmm2
    00000083: 	movsd	0x8(%rsp), %xmm1
    00000089: 	movsd	%xmm0, 0x18(%rsp)
    0000008f: 	jle	.Ltmp100 # Offset: 143
    00000095: 	nopl	(%rax) # Size: 3
.Ltmp101:
    00000098: 	movsd	(%r15), %xmm0
    0000009d: 	movsd	%xmm2, 0x10(%rsp)
    000000a3: 	addq	$0x8, %r15
    000000a7: 	movsd	%xmm1, 0x8(%rsp)
    000000ad: 	callq	fmin@PLT # Offset: 173
    000000b2: 	movsd	0x10(%rsp), %xmm2
    000000b8: 	cmpq	%r15, %rbx
    000000bb: 	movsd	0x8(%rsp), %xmm1
    000000c1: 	addsd	%xmm0, %xmm2
    000000c5: 	jne	.Ltmp101 # Offset: 197
    000000c7: 	movapd	%xmm2, %xmm3
    000000cb: 	andpd	DATAat0x12890(%rip), %xmm3
    000000d3: 	movapd	%xmm2, %xmm0
    000000d7: 	comisd	DATAat0x12838(%rip), %xmm3
    000000df: 	subsd	0x18(%rsp), %xmm0
    000000e5: 	jbe	.Ltmp102 # Offset: 229
    000000e7: 	divsd	%xmm2, %xmm0
.Ltmp102:
    000000eb: 	andpd	DATAat0x12890(%rip), %xmm0
    000000f3: 	movsd	DATAat0x12840(%rip), %xmm4
    000000fb: 	comisd	%xmm0, %xmm4
    000000ff: 	jbe	.Ltmp103 # Offset: 255
    00000101: 	addl	$0x1, %ebp
    00000104: 	cmpl	%r12d, %ebp
    00000107: 	jl	.Ltmp104 # Offset: 263
.Ltmp99:
    0000010d: 	callq	clock@PLT # Offset: 269
    00000112: 	pxor	%xmm0, %xmm0
    00000116: 	movq	0x28(%rsp), %rdi
    0000011b: 	movq	%rax, end_time(%rip)
    00000122: 	subq	start_time(%rip), %rax
    00000129: 	cvtsi2sd	%rax, %xmm0
    0000012e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000136: 	addq	$0x38, %rsp
    0000013a: 	popq	%rbx
    0000013b: 	popq	%rbp
    0000013c: 	popq	%r12
    0000013e: 	popq	%r13
    00000140: 	popq	%r14
    00000142: 	popq	%r15
    00000144: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 324
    00000149: 	nopl	(%rax) # Size: 7
.Ltmp103:
    00000150: 	movl	current_test(%rip), %edx
    00000156: 	movl	$0x1, %edi
    0000015b: 	xorl	%eax, %eax
    0000015d: 	addl	$0x1, %ebp
    00000160: 	leaq	DATAat0x12802(%rip), %rsi
    00000167: 	movsd	%xmm1, 0x8(%rsp)
    0000016d: 	callq	__printf_chk@PLT # Offset: 365
    00000172: 	movl	iterations(%rip), %r12d
    00000179: 	cmpl	%r12d, %ebp
    0000017c: 	jge	.Ltmp99 # Offset: 380
    0000017e: 	movsd	init_value(%rip), %xmm6
    00000186: 	movsd	0x8(%rsp), %xmm1
    0000018c: 	movsd	%xmm6, 0x20(%rsp)
    00000192: 	jmp	.Ltmp104 # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp100:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	subsd	0x18(%rsp), %xmm0
    000001aa: 	jmp	.Ltmp102 # Offset: 426
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id12mathlib_fminIdEEvPT_iS2_PKc"

Binary Function "_Z20test_constant_resultIdi18mathlib_fpclassifyIdEEvPT_iPKc" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x4ee0
  Size        : 0x1df
  MaxSize     : 0x1e0
  Offset      : 0x4ee0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi18mathlib_fpclassifyIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	pushq	%r12
    0000000d: 	movq	%rdx, %r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdi, %rbp
    00000014: 	pushq	%rbx
    00000015: 	callq	clock@PLT # Offset: 21
    0000001a: 	movl	iterations(%rip), %ecx
    00000020: 	movq	%rax, start_time(%rip)
    00000027: 	testl	%ecx, %ecx
    00000029: 	jle	.Ltmp105 # Offset: 41
    0000002f: 	leal	-0x1(%r14), %eax
    00000033: 	xorl	%r13d, %r13d
    00000036: 	pxor	%xmm6, %xmm6
    0000003a: 	movq	DATAat0x12890(%rip), %xmm2
    00000042: 	movsd	DATAat0x128a0(%rip), %xmm3
    0000004a: 	movsd	DATAat0x12858(%rip), %xmm5
    00000052: 	leaq	0x8(%rbp,%rax,8), %rbx
    00000057: 	nopw	(%rax,%rax) # Size: 9
.Ltmp117:
    00000060: 	movsd	init_value(%rip), %xmm7
    00000068: 	movq	%rbp, %rax
    0000006b: 	xorl	%edx, %edx
    0000006d: 	movapd	%xmm7, %xmm4
    00000071: 	andpd	%xmm2, %xmm4
    00000075: 	testl	%r14d, %r14d
    00000078: 	jg	.Ltmp106 # Offset: 120
    0000007a: 	jmp	.Ltmp107 # Offset: 122
    0000007f: 	nop # Size: 1
.Ltmp110:
    00000080: 	addl	$0x1, %edx
.Ltmp109:
    00000083: 	addq	$0x8, %rax
    00000087: 	cmpq	%rax, %rbx
    0000008a: 	je	.Ltmp108 # Offset: 138
.Ltmp106:
    0000008c: 	movsd	(%rax), %xmm1
    00000090: 	movapd	%xmm1, %xmm0
    00000094: 	andpd	%xmm2, %xmm0
    00000098: 	ucomisd	%xmm0, %xmm0
    0000009c: 	jp	.Ltmp109 # Offset: 156
    0000009e: 	ucomisd	%xmm3, %xmm0
    000000a2: 	ja	.Ltmp110 # Offset: 162
    000000a4: 	comisd	%xmm5, %xmm0
    000000a8: 	jae	.Ltmp111 # Offset: 168
    000000ae: 	ucomisd	%xmm6, %xmm1
    000000b2: 	jp	.Ltmp112 # Offset: 178
    000000b8: 	jne	.Ltmp112 # Offset: 184
    000000be: 	addq	$0x8, %rax
    000000c2: 	addl	$0x2, %edx
    000000c5: 	cmpq	%rax, %rbx
    000000c8: 	jne	.Ltmp106 # Offset: 200
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp108:
    000000d0: 	ucomisd	%xmm4, %xmm4
    000000d4: 	jp	.Ltmp113 # Offset: 212
    000000da: 	ucomisd	DATAat0x128a0(%rip), %xmm4
    000000e2: 	movl	$0x1f40, %eax
    000000e7: 	ja	.Ltmp114 # Offset: 231
    000000e9: 	comisd	DATAat0x12858(%rip), %xmm4
    000000f1: 	movl	$0x7d00, %eax
    000000f6: 	jae	.Ltmp114 # Offset: 246
.Ltmp120:
    000000f8: 	ucomisd	DATAat0x12898(%rip), %xmm7
    00000100: 	jp	.Ltmp115 # Offset: 256
    00000102: 	movl	$0x3e80, %eax
    00000107: 	je	.Ltmp114 # Offset: 263
.Ltmp115:
    00000109: 	movl	$0x5dc0, %eax
    0000010e: 	nop # Size: 2
.Ltmp114:
    00000110: 	cmpl	%eax, %edx
    00000112: 	jne	.Ltmp116 # Offset: 274
.Ltmp118:
    00000114: 	addl	$0x1, %r13d
    00000118: 	cmpl	%ecx, %r13d
    0000011b: 	jl	.Ltmp117 # Offset: 283
.Ltmp105:
    00000121: 	callq	clock@PLT # Offset: 289
    00000126: 	popq	%rbx
    00000127: 	pxor	%xmm0, %xmm0
    0000012b: 	popq	%rbp
    0000012c: 	movq	%rax, end_time(%rip)
    00000133: 	movq	%r12, %rdi
    00000136: 	popq	%r12
    00000138: 	subq	start_time(%rip), %rax
    0000013f: 	popq	%r13
    00000141: 	popq	%r14
    00000143: 	cvtsi2sd	%rax, %xmm0
    00000148: 	divsd	DATAat0x12828(%rip), %xmm0
    00000150: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 336
    00000155: 	nopl	(%rax) # Size: 3
.Ltmp111:
    00000158: 	addl	$0x4, %edx
    0000015b: 	jmp	.Ltmp109 # Offset: 347
.Ltmp112:
    00000160: 	addl	$0x3, %edx
    00000163: 	jmp	.Ltmp109 # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp107:
    00000170: 	ucomisd	%xmm4, %xmm4
    00000174: 	jp	.Ltmp118 # Offset: 372
    00000176: 	ucomisd	DATAat0x128a0(%rip), %xmm4
    0000017e: 	jbe	.Ltmp119 # Offset: 382
.Ltmp116:
    00000180: 	movl	current_test(%rip), %edx
    00000186: 	leaq	DATAat0x12802(%rip), %rsi
    0000018d: 	movl	$0x1, %edi
    00000192: 	xorl	%eax, %eax
    00000194: 	callq	__printf_chk@PLT # Offset: 404
    00000199: 	movq	DATAat0x12858(%rip), %rax
    000001a0: 	movl	iterations(%rip), %ecx
    000001a6: 	pxor	%xmm6, %xmm6
    000001aa: 	movq	DATAat0x12890(%rip), %xmm2
    000001b2: 	movq	%rax, %xmm5
    000001b7: 	movq	DATAat0x128a0(%rip), %rax
    000001be: 	movq	%rax, %xmm3
    000001c3: 	jmp	.Ltmp118 # Offset: 451
.Ltmp113:
    000001c8: 	xorl	%eax, %eax
    000001ca: 	jmp	.Ltmp114 # Offset: 458
.Ltmp119:
    000001cf: 	comisd	DATAat0x12858(%rip), %xmm4
    000001d7: 	jb	.Ltmp120 # Offset: 471
    000001dd: 	jmp	.Ltmp116 # Offset: 477
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi18mathlib_fpclassifyIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi16mathlib_isnormalIdEEvPT_iPKc" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x50c0
  Size        : 0x157
  MaxSize     : 0x160
  Offset      : 0x50c0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi16mathlib_isnormalIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %edi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%edi, %edi
    0000002f: 	jle	.Ltmp121 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movq	DATAat0x12890(%rip), %xmm2
    00000041: 	xorl	%r14d, %r14d
    00000044: 	movsd	DATAat0x128a0(%rip), %xmm1
    0000004c: 	movsd	init_value(%rip), %xmm3
    00000054: 	leaq	0x8(%rbx,%rax,8), %r13
    00000059: 	leaq	DATAat0x12802(%rip), %rbp
.Ltmp125:
    00000060: 	movq	%rbx, %rax
    00000063: 	xorl	%ecx, %ecx
    00000065: 	testl	%r15d, %r15d
    00000068: 	jle	.Ltmp122 # Offset: 104
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp123:
    00000070: 	movsd	(%rax), %xmm0
    00000074: 	andpd	%xmm2, %xmm0
    00000078: 	ucomisd	%xmm0, %xmm1
    0000007c: 	setb	%dl
    0000007f: 	ucomisd	DATAat0x12858(%rip), %xmm0
    00000087: 	setb	%sil
    0000008b: 	orl	%esi, %edx
    0000008d: 	cmpb	$0x1, %dl
    00000090: 	adcl	$0x0, %ecx
    00000093: 	addq	$0x8, %rax
    00000097: 	cmpq	%rax, %r13
    0000009a: 	jne	.Ltmp123 # Offset: 154
.Ltmp122:
    0000009c: 	movapd	%xmm3, %xmm0
    000000a0: 	andpd	%xmm2, %xmm0
    000000a4: 	ucomisd	%xmm0, %xmm1
    000000a8: 	setb	%al
    000000ab: 	ucomisd	DATAat0x12858(%rip), %xmm0
    000000b3: 	setb	%dl
    000000b6: 	orl	%edx, %eax
    000000b8: 	cmpb	$0x1, %al
    000000ba: 	sbbl	%eax, %eax
    000000bc: 	andl	$0x1f40, %eax
    000000c1: 	cmpl	%ecx, %eax
    000000c3: 	je	.Ltmp124 # Offset: 195
    000000c5: 	movl	current_test(%rip), %edx
    000000cb: 	movl	$0x1, %edi
    000000d0: 	movq	%rbp, %rsi
    000000d3: 	xorl	%eax, %eax
    000000d5: 	addl	$0x1, %r14d
    000000d9: 	callq	__printf_chk@PLT # Offset: 217
    000000de: 	movl	iterations(%rip), %edi
    000000e4: 	cmpl	%edi, %r14d
    000000e7: 	jge	.Ltmp121 # Offset: 231
    000000e9: 	movq	DATAat0x128a0(%rip), %rax
    000000f0: 	movsd	init_value(%rip), %xmm3
    000000f8: 	movq	DATAat0x12890(%rip), %xmm2
    00000100: 	movq	%rax, %xmm1
    00000105: 	jmp	.Ltmp125 # Offset: 261
    0000010a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp124:
    00000110: 	addl	$0x1, %r14d
    00000114: 	cmpl	%edi, %r14d
    00000117: 	jl	.Ltmp125 # Offset: 279
.Ltmp121:
    0000011d: 	callq	clock@PLT # Offset: 285
    00000122: 	pxor	%xmm0, %xmm0
    00000126: 	movq	%r12, %rdi
    00000129: 	movq	%rax, end_time(%rip)
    00000130: 	subq	start_time(%rip), %rax
    00000137: 	cvtsi2sd	%rax, %xmm0
    0000013c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000144: 	addq	$0x8, %rsp
    00000148: 	popq	%rbx
    00000149: 	popq	%rbp
    0000014a: 	popq	%r12
    0000014c: 	popq	%r13
    0000014e: 	popq	%r14
    00000150: 	popq	%r15
    00000152: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 338
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi16mathlib_isnormalIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi15inline_isfiniteIdEEvPT_iPKc" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x5220
  Size        : 0x257
  MaxSize     : 0x260
  Offset      : 0x5220
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi15inline_isfiniteIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp126 # Offset: 49
    00000037: 	movl	%r13d, %eax
    0000003a: 	movl	%r13d, %ebp
    0000003d: 	leal	-0x1(%r13), %ebx
    00000041: 	xorl	%r14d, %r14d
    00000044: 	shrl	$0x2, %eax
    00000047: 	andl	$-0x4, %ebp
    0000004a: 	subl	$0x1, %eax
    0000004d: 	shlq	$0x5, %rax
    00000051: 	leaq	0x20(%r15,%rax), %r12
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp135:
    00000060: 	movsd	init_value(%rip), %xmm7
    00000068: 	testl	%r13d, %r13d
    0000006b: 	jle	.Ltmp127 # Offset: 107
    00000071: 	cmpl	$0x2, %ebx
    00000074: 	jbe	.Ltmp128 # Offset: 116
    0000007a: 	movapd	DATAat0x12880(%rip), %xmm4
    00000082: 	movapd	DATAat0x128a0(%rip), %xmm3
    0000008a: 	movq	%r15, %rax
    0000008d: 	pxor	%xmm2, %xmm2
    00000091: 	nopl	(%rax) # Size: 7
.Ltmp129:
    00000098: 	movupd	(%rax), %xmm0
    0000009c: 	movapd	%xmm3, %xmm5
    000000a0: 	movupd	0x10(%rax), %xmm1
    000000a5: 	addq	$0x20, %rax
    000000a9: 	movapd	%xmm0, %xmm6
    000000ad: 	cmpeqpd	%xmm0, %xmm0
    000000b2: 	andpd	%xmm4, %xmm6
    000000b6: 	cmpnltpd	%xmm6, %xmm5
    000000bb: 	movapd	%xmm1, %xmm6
    000000bf: 	andpd	%xmm4, %xmm6
    000000c3: 	cmpeqpd	%xmm1, %xmm1
    000000c8: 	pand	%xmm5, %xmm0
    000000cc: 	movapd	%xmm3, %xmm5
    000000d0: 	cmpnltpd	%xmm6, %xmm5
    000000d5: 	pand	%xmm5, %xmm1
    000000d9: 	shufps	$0x88, %xmm1, %xmm0
    000000dd: 	psubd	%xmm0, %xmm2
    000000e1: 	cmpq	%rax, %r12
    000000e4: 	jne	.Ltmp129 # Offset: 228
    000000e6: 	movdqa	%xmm2, %xmm0
    000000ea: 	movl	%ebp, %edx
    000000ec: 	psrldq	$0x8, %xmm0
    000000f1: 	paddd	%xmm0, %xmm2
    000000f5: 	movdqa	%xmm2, %xmm0
    000000f9: 	psrldq	$0x4, %xmm0
    000000fe: 	paddd	%xmm0, %xmm2
    00000102: 	movd	%xmm2, %eax
    00000106: 	cmpl	%ebp, %r13d
    00000109: 	je	.Ltmp130 # Offset: 265
.Ltmp138:
    0000010f: 	movslq	%edx, %rdi
    00000112: 	movsd	(%r15,%rdi,8), %xmm0
    00000118: 	leaq	(,%rdi,8), %r8
    00000120: 	ucomisd	%xmm0, %xmm0
    00000124: 	jp	.Ltmp131 # Offset: 292
    00000126: 	andpd	DATAat0x12890(%rip), %xmm0
    0000012e: 	ucomisd	DATAat0x128a0(%rip), %xmm0
    00000136: 	ja	.Ltmp131 # Offset: 310
    00000138: 	addl	$0x1, %eax
.Ltmp131:
    0000013b: 	leal	0x1(%rdx), %edi
    0000013e: 	cmpl	%edi, %r13d
    00000141: 	jle	.Ltmp130 # Offset: 321
    00000143: 	movsd	0x8(%r15,%r8), %xmm0
    0000014a: 	ucomisd	%xmm0, %xmm0
    0000014e: 	jp	.Ltmp132 # Offset: 334
    00000150: 	andpd	DATAat0x12890(%rip), %xmm0
    00000158: 	ucomisd	DATAat0x128a0(%rip), %xmm0
    00000160: 	ja	.Ltmp132 # Offset: 352
    00000162: 	addl	$0x1, %eax
.Ltmp132:
    00000165: 	addl	$0x2, %edx
    00000168: 	cmpl	%edx, %r13d
    0000016b: 	jle	.Ltmp130 # Offset: 363
    0000016d: 	movsd	0x10(%r15,%r8), %xmm0
    00000174: 	ucomisd	%xmm0, %xmm0
    00000178: 	jp	.Ltmp130 # Offset: 376
    0000017a: 	andpd	DATAat0x12890(%rip), %xmm0
    00000182: 	ucomisd	DATAat0x128a0(%rip), %xmm0
    0000018a: 	ja	.Ltmp130 # Offset: 394
    0000018c: 	addl	$0x1, %eax
    0000018f: 	nop # Size: 1
.Ltmp130:
    00000190: 	ucomisd	%xmm7, %xmm7
    00000194: 	jp	.Ltmp133 # Offset: 404
    0000019a: 	andpd	DATAat0x12890(%rip), %xmm7
    000001a2: 	ucomisd	DATAat0x128a0(%rip), %xmm7
    000001aa: 	setbe	%dl
.Ltmp136:
    000001ad: 	shll	$0x1f, %edx
    000001b0: 	sarl	$0x1f, %edx
    000001b3: 	andl	$0x1f40, %edx
    000001b9: 	cmpl	%eax, %edx
    000001bb: 	je	.Ltmp134 # Offset: 443
.Ltmp137:
    000001bd: 	movl	current_test(%rip), %edx
    000001c3: 	leaq	DATAat0x12802(%rip), %rsi
    000001ca: 	movl	$0x1, %edi
    000001cf: 	xorl	%eax, %eax
    000001d1: 	callq	__printf_chk@PLT # Offset: 465
    000001d6: 	movl	iterations(%rip), %esi
.Ltmp134:
    000001dc: 	addl	$0x1, %r14d
    000001e0: 	cmpl	%esi, %r14d
    000001e3: 	jl	.Ltmp135 # Offset: 483
.Ltmp126:
    000001e9: 	callq	clock@PLT # Offset: 489
    000001ee: 	pxor	%xmm0, %xmm0
    000001f2: 	movq	0x8(%rsp), %rdi
    000001f7: 	movq	%rax, end_time(%rip)
    000001fe: 	subq	start_time(%rip), %rax
    00000205: 	cvtsi2sd	%rax, %xmm0
    0000020a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000212: 	addq	$0x18, %rsp
    00000216: 	popq	%rbx
    00000217: 	popq	%rbp
    00000218: 	popq	%r12
    0000021a: 	popq	%r13
    0000021c: 	popq	%r14
    0000021e: 	popq	%r15
    00000220: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 544
    00000225: 	nopl	(%rax) # Size: 3
.Ltmp133:
    00000228: 	xorl	%edx, %edx
    0000022a: 	jmp	.Ltmp136 # Offset: 554
    0000022f: 	nop # Size: 1
.Ltmp127:
    00000230: 	ucomisd	%xmm7, %xmm7
    00000234: 	jp	.Ltmp134 # Offset: 564
    00000236: 	andpd	DATAat0x12890(%rip), %xmm7
    0000023e: 	ucomisd	DATAat0x128a0(%rip), %xmm7
    00000246: 	jbe	.Ltmp137 # Offset: 582
    0000024c: 	jmp	.Ltmp134 # Offset: 588
.Ltmp128:
    0000024e: 	xorl	%edx, %edx
    00000250: 	xorl	%eax, %eax
    00000252: 	jmp	.Ltmp138 # Offset: 594
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi15inline_isfiniteIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi16mathlib_isfiniteIdEEvPT_iPKc" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x5480
  Size        : 0x137
  MaxSize     : 0x140
  Offset      : 0x5480
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi16mathlib_isfiniteIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp139 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movq	DATAat0x12890(%rip), %xmm2
    00000041: 	xorl	%r14d, %r14d
    00000044: 	movsd	DATAat0x128a0(%rip), %xmm1
    0000004c: 	movsd	init_value(%rip), %xmm3
    00000054: 	leaq	0x8(%rbx,%rax,8), %r13
    00000059: 	leaq	DATAat0x12802(%rip), %rbp
.Ltmp143:
    00000060: 	movq	%rbx, %rax
    00000063: 	xorl	%edx, %edx
    00000065: 	testl	%r15d, %r15d
    00000068: 	jle	.Ltmp140 # Offset: 104
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp141:
    00000070: 	movsd	(%rax), %xmm0
    00000074: 	xorl	%ecx, %ecx
    00000076: 	andpd	%xmm2, %xmm0
    0000007a: 	ucomisd	%xmm0, %xmm1
    0000007e: 	setae	%cl
    00000081: 	addq	$0x8, %rax
    00000085: 	addl	%ecx, %edx
    00000087: 	cmpq	%rax, %r13
    0000008a: 	jne	.Ltmp141 # Offset: 138
.Ltmp140:
    0000008c: 	movapd	%xmm3, %xmm0
    00000090: 	xorl	%eax, %eax
    00000092: 	movl	$0x1f40, %ecx
    00000097: 	andpd	%xmm2, %xmm0
    0000009b: 	ucomisd	%xmm0, %xmm1
    0000009f: 	cmovael	%ecx, %eax
    000000a2: 	cmpl	%edx, %eax
    000000a4: 	je	.Ltmp142 # Offset: 164
    000000a6: 	movl	current_test(%rip), %edx
    000000ac: 	movq	%rbp, %rsi
    000000af: 	movl	$0x1, %edi
    000000b4: 	xorl	%eax, %eax
    000000b6: 	addl	$0x1, %r14d
    000000ba: 	callq	__printf_chk@PLT # Offset: 186
    000000bf: 	movl	iterations(%rip), %esi
    000000c5: 	cmpl	%esi, %r14d
    000000c8: 	jge	.Ltmp139 # Offset: 200
    000000ca: 	movq	DATAat0x128a0(%rip), %rax
    000000d1: 	movsd	init_value(%rip), %xmm3
    000000d9: 	movq	DATAat0x12890(%rip), %xmm2
    000000e1: 	movq	%rax, %xmm1
    000000e6: 	jmp	.Ltmp143 # Offset: 230
    000000eb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp142:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%esi, %r14d
    000000f7: 	jl	.Ltmp143 # Offset: 247
.Ltmp139:
    000000fd: 	callq	clock@PLT # Offset: 253
    00000102: 	pxor	%xmm0, %xmm0
    00000106: 	movq	%r12, %rdi
    00000109: 	movq	%rax, end_time(%rip)
    00000110: 	subq	start_time(%rip), %rax
    00000117: 	cvtsi2sd	%rax, %xmm0
    0000011c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000124: 	addq	$0x8, %rsp
    00000128: 	popq	%rbx
    00000129: 	popq	%rbp
    0000012a: 	popq	%r12
    0000012c: 	popq	%r13
    0000012e: 	popq	%r14
    00000130: 	popq	%r15
    00000132: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 306
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi16mathlib_isfiniteIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi12inline_isinfIdEEvPT_iPKc" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x55c0
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x55c0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi12inline_isinfIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %edi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%edi, %edi
    0000002f: 	jle	.Ltmp144 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movq	DATAat0x12890(%rip), %xmm2
    00000041: 	xorl	%r14d, %r14d
    00000044: 	movsd	DATAat0x12818(%rip), %xmm1
    0000004c: 	movsd	init_value(%rip), %xmm3
    00000054: 	leaq	0x8(%rbx,%rax,8), %r13
    00000059: 	leaq	DATAat0x12802(%rip), %rbp
.Ltmp149:
    00000060: 	movq	%rbx, %rax
    00000063: 	xorl	%ecx, %ecx
    00000065: 	xorl	%esi, %esi
    00000067: 	testl	%r15d, %r15d
    0000006a: 	jle	.Ltmp145 # Offset: 106
    0000006c: 	nopl	(%rax) # Size: 4
.Ltmp146:
    00000070: 	movsd	(%rax), %xmm0
    00000074: 	xorl	%edx, %edx
    00000076: 	andpd	%xmm2, %xmm0
    0000007a: 	ucomisd	DATAat0x12818(%rip), %xmm0
    00000082: 	setnp	%dl
    00000085: 	ucomisd	%xmm1, %xmm0
    00000089: 	cmovnel	%esi, %edx
    0000008c: 	addq	$0x8, %rax
    00000090: 	addl	%edx, %ecx
    00000092: 	cmpq	%rax, %r13
    00000095: 	jne	.Ltmp146 # Offset: 149
.Ltmp145:
    00000097: 	movapd	%xmm3, %xmm0
    0000009b: 	andpd	%xmm2, %xmm0
    0000009f: 	ucomisd	%xmm1, %xmm0
    000000a3: 	jp	.Ltmp147 # Offset: 163
    000000a5: 	movl	$0x1f40, %eax
    000000aa: 	jne	.Ltmp147 # Offset: 170
    000000ac: 	cmpl	%ecx, %eax
    000000ae: 	je	.Ltmp148 # Offset: 174
.Ltmp150:
    000000b0: 	movl	current_test(%rip), %edx
    000000b6: 	movl	$0x1, %edi
    000000bb: 	movq	%rbp, %rsi
    000000be: 	xorl	%eax, %eax
    000000c0: 	addl	$0x1, %r14d
    000000c4: 	callq	__printf_chk@PLT # Offset: 196
    000000c9: 	movl	iterations(%rip), %edi
    000000cf: 	cmpl	%edi, %r14d
    000000d2: 	jge	.Ltmp144 # Offset: 210
    000000d4: 	movq	DATAat0x12818(%rip), %rax
    000000db: 	movsd	init_value(%rip), %xmm3
    000000e3: 	movq	DATAat0x12890(%rip), %xmm2
    000000eb: 	movq	%rax, %xmm1
    000000f0: 	jmp	.Ltmp149 # Offset: 240
    000000f5: 	nopl	(%rax) # Size: 3
.Ltmp147:
    000000f8: 	xorl	%eax, %eax
    000000fa: 	cmpl	%ecx, %eax
    000000fc: 	jne	.Ltmp150 # Offset: 252
.Ltmp148:
    000000fe: 	addl	$0x1, %r14d
    00000102: 	cmpl	%edi, %r14d
    00000105: 	jl	.Ltmp149 # Offset: 261
.Ltmp144:
    0000010b: 	callq	clock@PLT # Offset: 267
    00000110: 	pxor	%xmm0, %xmm0
    00000114: 	movq	%r12, %rdi
    00000117: 	movq	%rax, end_time(%rip)
    0000011e: 	subq	start_time(%rip), %rax
    00000125: 	cvtsi2sd	%rax, %xmm0
    0000012a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000132: 	addq	$0x8, %rsp
    00000136: 	popq	%rbx
    00000137: 	popq	%rbp
    00000138: 	popq	%r12
    0000013a: 	popq	%r13
    0000013c: 	popq	%r14
    0000013e: 	popq	%r15
    00000140: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi12inline_isinfIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi13mathlib_isinfIdEEvPT_iPKc" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x5710
  Size        : 0x137
  MaxSize     : 0x140
  Offset      : 0x5710
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi13mathlib_isinfIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp151 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movq	DATAat0x12890(%rip), %xmm1
    00000041: 	xorl	%r14d, %r14d
    00000044: 	movsd	init_value(%rip), %xmm2
    0000004c: 	leaq	0x8(%rbx,%rax,8), %r13
    00000051: 	leaq	DATAat0x12802(%rip), %rbp
    00000058: 	nopl	(%rax,%rax) # Size: 8
.Ltmp155:
    00000060: 	movq	%rbx, %rax
    00000063: 	xorl	%edx, %edx
    00000065: 	testl	%r15d, %r15d
    00000068: 	jle	.Ltmp152 # Offset: 104
    0000006a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp153:
    00000070: 	movsd	(%rax), %xmm0
    00000074: 	xorl	%ecx, %ecx
    00000076: 	andpd	%xmm1, %xmm0
    0000007a: 	ucomisd	DATAat0x128a0(%rip), %xmm0
    00000082: 	seta	%cl
    00000085: 	addq	$0x8, %rax
    00000089: 	addl	%ecx, %edx
    0000008b: 	cmpq	%rax, %r13
    0000008e: 	jne	.Ltmp153 # Offset: 142
.Ltmp152:
    00000090: 	movapd	%xmm2, %xmm0
    00000094: 	xorl	%eax, %eax
    00000096: 	movl	$0x1f40, %ecx
    0000009b: 	andpd	%xmm1, %xmm0
    0000009f: 	ucomisd	DATAat0x128a0(%rip), %xmm0
    000000a7: 	cmoval	%ecx, %eax
    000000aa: 	cmpl	%edx, %eax
    000000ac: 	je	.Ltmp154 # Offset: 172
    000000ae: 	movl	current_test(%rip), %edx
    000000b4: 	movq	%rbp, %rsi
    000000b7: 	movl	$0x1, %edi
    000000bc: 	xorl	%eax, %eax
    000000be: 	addl	$0x1, %r14d
    000000c2: 	callq	__printf_chk@PLT # Offset: 194
    000000c7: 	movl	iterations(%rip), %esi
    000000cd: 	cmpl	%esi, %r14d
    000000d0: 	jge	.Ltmp151 # Offset: 208
    000000d2: 	movsd	init_value(%rip), %xmm2
    000000da: 	movq	DATAat0x12890(%rip), %xmm1
    000000e2: 	jmp	.Ltmp155 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp154:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%esi, %r14d
    000000f7: 	jl	.Ltmp155 # Offset: 247
.Ltmp151:
    000000fd: 	callq	clock@PLT # Offset: 253
    00000102: 	pxor	%xmm0, %xmm0
    00000106: 	movq	%r12, %rdi
    00000109: 	movq	%rax, end_time(%rip)
    00000110: 	subq	start_time(%rip), %rax
    00000117: 	cvtsi2sd	%rax, %xmm0
    0000011c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000124: 	addq	$0x8, %rsp
    00000128: 	popq	%rbx
    00000129: 	popq	%rbp
    0000012a: 	popq	%r12
    0000012c: 	popq	%r13
    0000012e: 	popq	%r14
    00000130: 	popq	%r15
    00000132: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 306
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi13mathlib_isinfIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi12inline_isnanIdEEvPT_iPKc" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x5850
  Size        : 0x103
  MaxSize     : 0x110
  Offset      : 0x5850
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi12inline_isnanIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp156 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movsd	init_value(%rip), %xmm1
    00000041: 	xorl	%r14d, %r14d
    00000044: 	leaq	DATAat0x12802(%rip), %rbp
    0000004b: 	leaq	0x8(%rbx,%rax,8), %r13
.Ltmp160:
    00000050: 	movq	%rbx, %rax
    00000053: 	xorl	%edx, %edx
    00000055: 	testl	%r15d, %r15d
    00000058: 	jle	.Ltmp157 # Offset: 88
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp158:
    00000060: 	movsd	(%rax), %xmm0
    00000064: 	xorl	%ecx, %ecx
    00000066: 	ucomisd	%xmm0, %xmm0
    0000006a: 	setp	%cl
    0000006d: 	addq	$0x8, %rax
    00000071: 	addl	%ecx, %edx
    00000073: 	cmpq	%rax, %r13
    00000076: 	jne	.Ltmp158 # Offset: 118
.Ltmp157:
    00000078: 	ucomisd	%xmm1, %xmm1
    0000007c: 	movl	$0x1f40, %eax
    00000081: 	movl	$0x0, %ecx
    00000086: 	cmovnpl	%ecx, %eax
    00000089: 	cmpl	%edx, %eax
    0000008b: 	je	.Ltmp159 # Offset: 139
    0000008d: 	movl	current_test(%rip), %edx
    00000093: 	movq	%rbp, %rsi
    00000096: 	movl	$0x1, %edi
    0000009b: 	xorl	%eax, %eax
    0000009d: 	addl	$0x1, %r14d
    000000a1: 	callq	__printf_chk@PLT # Offset: 161
    000000a6: 	movl	iterations(%rip), %esi
    000000ac: 	cmpl	%esi, %r14d
    000000af: 	jge	.Ltmp156 # Offset: 175
    000000b1: 	movsd	init_value(%rip), %xmm1
    000000b9: 	jmp	.Ltmp160 # Offset: 185
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp159:
    000000c0: 	addl	$0x1, %r14d
    000000c4: 	cmpl	%esi, %r14d
    000000c7: 	jl	.Ltmp160 # Offset: 199
.Ltmp156:
    000000c9: 	callq	clock@PLT # Offset: 201
    000000ce: 	pxor	%xmm0, %xmm0
    000000d2: 	movq	%r12, %rdi
    000000d5: 	movq	%rax, end_time(%rip)
    000000dc: 	subq	start_time(%rip), %rax
    000000e3: 	cvtsi2sd	%rax, %xmm0
    000000e8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000f0: 	addq	$0x8, %rsp
    000000f4: 	popq	%rbx
    000000f5: 	popq	%rbp
    000000f6: 	popq	%r12
    000000f8: 	popq	%r13
    000000fa: 	popq	%r14
    000000fc: 	popq	%r15
    000000fe: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 254
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi12inline_isnanIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi13mathlib_isnanIdEEvPT_iPKc" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x5960
  Size        : 0x103
  MaxSize     : 0x110
  Offset      : 0x5960
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi13mathlib_isnanIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp161 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movsd	init_value(%rip), %xmm1
    00000041: 	xorl	%r14d, %r14d
    00000044: 	leaq	DATAat0x12802(%rip), %rbp
    0000004b: 	leaq	0x8(%rbx,%rax,8), %r13
.Ltmp165:
    00000050: 	movq	%rbx, %rax
    00000053: 	xorl	%edx, %edx
    00000055: 	testl	%r15d, %r15d
    00000058: 	jle	.Ltmp162 # Offset: 88
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp163:
    00000060: 	movsd	(%rax), %xmm0
    00000064: 	xorl	%ecx, %ecx
    00000066: 	ucomisd	%xmm0, %xmm0
    0000006a: 	setp	%cl
    0000006d: 	addq	$0x8, %rax
    00000071: 	addl	%ecx, %edx
    00000073: 	cmpq	%rax, %r13
    00000076: 	jne	.Ltmp163 # Offset: 118
.Ltmp162:
    00000078: 	ucomisd	%xmm1, %xmm1
    0000007c: 	movl	$0x1f40, %eax
    00000081: 	movl	$0x0, %ecx
    00000086: 	cmovnpl	%ecx, %eax
    00000089: 	cmpl	%edx, %eax
    0000008b: 	je	.Ltmp164 # Offset: 139
    0000008d: 	movl	current_test(%rip), %edx
    00000093: 	movq	%rbp, %rsi
    00000096: 	movl	$0x1, %edi
    0000009b: 	xorl	%eax, %eax
    0000009d: 	addl	$0x1, %r14d
    000000a1: 	callq	__printf_chk@PLT # Offset: 161
    000000a6: 	movl	iterations(%rip), %esi
    000000ac: 	cmpl	%esi, %r14d
    000000af: 	jge	.Ltmp161 # Offset: 175
    000000b1: 	movsd	init_value(%rip), %xmm1
    000000b9: 	jmp	.Ltmp165 # Offset: 185
    000000bb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp164:
    000000c0: 	addl	$0x1, %r14d
    000000c4: 	cmpl	%esi, %r14d
    000000c7: 	jl	.Ltmp165 # Offset: 199
.Ltmp161:
    000000c9: 	callq	clock@PLT # Offset: 201
    000000ce: 	pxor	%xmm0, %xmm0
    000000d2: 	movq	%r12, %rdi
    000000d5: 	movq	%rax, end_time(%rip)
    000000dc: 	subq	start_time(%rip), %rax
    000000e3: 	cvtsi2sd	%rax, %xmm0
    000000e8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000f0: 	addq	$0x8, %rsp
    000000f4: 	popq	%rbx
    000000f5: 	popq	%rbp
    000000f6: 	popq	%r12
    000000f8: 	popq	%r13
    000000fa: 	popq	%r14
    000000fc: 	popq	%r15
    000000fe: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 254
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi13mathlib_isnanIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi14inline_signbitIdEEvPT_iPKc" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x5a70
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0x5a70
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi14inline_signbitIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp166 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	xorl	%r14d, %r14d
    0000003c: 	pxor	%xmm0, %xmm0
    00000040: 	leaq	0x8(%rbx,%rax,8), %r13
    00000045: 	leaq	DATAat0x12802(%rip), %rbp
    0000004c: 	nopl	(%rax) # Size: 4
.Ltmp170:
    00000050: 	movq	%rbx, %rax
    00000053: 	xorl	%edx, %edx
    00000055: 	testl	%r15d, %r15d
    00000058: 	jle	.Ltmp167 # Offset: 88
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp168:
    00000060: 	xorl	%ecx, %ecx
    00000062: 	comisd	(%rax), %xmm0
    00000066: 	seta	%cl
    00000069: 	addq	$0x8, %rax
    0000006d: 	addl	%ecx, %edx
    0000006f: 	cmpq	%rax, %r13
    00000072: 	jne	.Ltmp168 # Offset: 114
.Ltmp167:
    00000074: 	comisd	init_value(%rip), %xmm0
    0000007c: 	movl	$0x1f40, %eax
    00000081: 	movl	$0x0, %ecx
    00000086: 	cmovbel	%ecx, %eax
    00000089: 	cmpl	%edx, %eax
    0000008b: 	je	.Ltmp169 # Offset: 139
    0000008d: 	movl	current_test(%rip), %edx
    00000093: 	movq	%rbp, %rsi
    00000096: 	xorl	%eax, %eax
    00000098: 	movl	$0x1, %edi
    0000009d: 	addl	$0x1, %r14d
    000000a1: 	callq	__printf_chk@PLT # Offset: 161
    000000a6: 	movl	iterations(%rip), %esi
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	cmpl	%esi, %r14d
    000000b3: 	jl	.Ltmp170 # Offset: 179
.Ltmp166:
    000000b5: 	callq	clock@PLT # Offset: 181
    000000ba: 	pxor	%xmm0, %xmm0
    000000be: 	movq	%r12, %rdi
    000000c1: 	movq	%rax, end_time(%rip)
    000000c8: 	subq	start_time(%rip), %rax
    000000cf: 	cvtsi2sd	%rax, %xmm0
    000000d4: 	divsd	DATAat0x12828(%rip), %xmm0
    000000dc: 	addq	$0x8, %rsp
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp169:
    000000f0: 	addl	$0x1, %r14d
    000000f4: 	cmpl	%esi, %r14d
    000000f7: 	jl	.Ltmp170 # Offset: 247
    000000fd: 	jmp	.Ltmp166 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi14inline_signbitIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi15mathlib_signbitIdEEvPT_iPKc" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x5b70
  Size        : 0x103
  MaxSize     : 0x110
  Offset      : 0x5b70
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi15mathlib_signbitIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %esi
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%esi, %esi
    0000002f: 	jle	.Ltmp171 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	movsd	init_value(%rip), %xmm1
    00000041: 	xorl	%r14d, %r14d
    00000044: 	leaq	DATAat0x12802(%rip), %rbp
    0000004b: 	leaq	0x8(%rbx,%rax,8), %r13
.Ltmp175:
    00000050: 	movq	%rbx, %rax
    00000053: 	xorl	%ecx, %ecx
    00000055: 	testl	%r15d, %r15d
    00000058: 	jle	.Ltmp172 # Offset: 88
    0000005a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp173:
    00000060: 	movsd	(%rax), %xmm0
    00000064: 	addq	$0x8, %rax
    00000068: 	movmskpd	%xmm0, %edx
    0000006c: 	andl	$0x1, %edx
    0000006f: 	addl	%edx, %ecx
    00000071: 	cmpq	%rax, %r13
    00000074: 	jne	.Ltmp173 # Offset: 116
.Ltmp172:
    00000076: 	movmskpd	%xmm1, %eax
    0000007a: 	andl	$0x1, %eax
    0000007d: 	negl	%eax
    0000007f: 	andl	$0x1f40, %eax
    00000084: 	cmpl	%ecx, %eax
    00000086: 	je	.Ltmp174 # Offset: 134
    00000088: 	movl	current_test(%rip), %edx
    0000008e: 	movq	%rbp, %rsi
    00000091: 	movl	$0x1, %edi
    00000096: 	xorl	%eax, %eax
    00000098: 	addl	$0x1, %r14d
    0000009c: 	callq	__printf_chk@PLT # Offset: 156
    000000a1: 	movl	iterations(%rip), %esi
    000000a7: 	cmpl	%esi, %r14d
    000000aa: 	jge	.Ltmp171 # Offset: 170
    000000ac: 	movsd	init_value(%rip), %xmm1
    000000b4: 	jmp	.Ltmp175 # Offset: 180
    000000b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp174:
    000000c0: 	addl	$0x1, %r14d
    000000c4: 	cmpl	%esi, %r14d
    000000c7: 	jl	.Ltmp175 # Offset: 199
.Ltmp171:
    000000c9: 	callq	clock@PLT # Offset: 201
    000000ce: 	pxor	%xmm0, %xmm0
    000000d2: 	movq	%r12, %rdi
    000000d5: 	movq	%rax, end_time(%rip)
    000000dc: 	subq	start_time(%rip), %rax
    000000e3: 	cvtsi2sd	%rax, %xmm0
    000000e8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000f0: 	addq	$0x8, %rsp
    000000f4: 	popq	%rbx
    000000f5: 	popq	%rbp
    000000f6: 	popq	%r12
    000000f8: 	popq	%r13
    000000fa: 	popq	%r14
    000000fc: 	popq	%r15
    000000fe: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 254
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi15mathlib_signbitIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_sqrtIdEEvPT_iPKc" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x5c80
  Size        : 0x23e
  MaxSize     : 0x240
  Offset      : 0x5c80
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_sqrtIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, (%rsp)
    0000001c: 	callq	clock@PLT # Offset: 28
    00000021: 	movq	%rax, start_time(%rip)
    00000028: 	movl	iterations(%rip), %eax
    0000002e: 	testl	%eax, %eax
    00000030: 	jle	.Ltmp176 # Offset: 48
    00000036: 	leal	-0x1(%r12), %edx
    0000003b: 	xorl	%r14d, %r14d
    0000003e: 	pxor	%xmm2, %xmm2
    00000042: 	movq	DATAat0x12890(%rip), %xmm4
    0000004a: 	movsd	DATAat0x12848(%rip), %xmm8
    00000053: 	movsd	DATAat0x12838(%rip), %xmm7
    0000005b: 	leaq	0x8(%r15,%rdx,8), %rbp
    00000060: 	leaq	DATAat0x12802(%rip), %r13
    00000067: 	movsd	DATAat0x12840(%rip), %xmm6
    0000006f: 	nop # Size: 1
.Ltmp183:
    00000070: 	movq	%r15, %rbx
    00000073: 	movapd	%xmm2, %xmm1
    00000077: 	movapd	%xmm2, %xmm5
    0000007b: 	testl	%r12d, %r12d
    0000007e: 	jle	.Ltmp177 # Offset: 126
.Ltmp179:
    00000080: 	movsd	(%rbx), %xmm0
    00000084: 	ucomisd	%xmm0, %xmm2
    00000088: 	ja	.Ltmp178 # Offset: 136
    0000008e: 	sqrtsd	%xmm0, %xmm0
    00000092: 	addq	$0x8, %rbx
    00000096: 	addsd	%xmm0, %xmm1
    0000009a: 	cmpq	%rbx, %rbp
    0000009d: 	jne	.Ltmp179 # Offset: 157
.Ltmp184:
    0000009f: 	movapd	%xmm1, %xmm5
    000000a3: 	andpd	%xmm4, %xmm5
.Ltmp177:
    000000a7: 	movsd	init_value(%rip), %xmm0
    000000af: 	ucomisd	%xmm0, %xmm2
    000000b3: 	ja	.Ltmp180 # Offset: 179
    000000b9: 	sqrtsd	%xmm0, %xmm0
.Ltmp185:
    000000bd: 	mulsd	%xmm8, %xmm0
    000000c2: 	comisd	%xmm7, %xmm5
    000000c6: 	movapd	%xmm1, %xmm3
    000000ca: 	subsd	%xmm0, %xmm3
    000000ce: 	jbe	.Ltmp181 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm3
.Ltmp181:
    000000d4: 	andpd	%xmm4, %xmm3
    000000d8: 	comisd	%xmm3, %xmm6
    000000dc: 	jbe	.Ltmp182 # Offset: 220
    000000de: 	addl	$0x1, %r14d
    000000e2: 	cmpl	%r14d, %eax
    000000e5: 	jg	.Ltmp183 # Offset: 229
.Ltmp176:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	(%rsp), %rdi
    000000f4: 	movq	%rax, end_time(%rip)
    000000fb: 	subq	start_time(%rip), %rax
    00000102: 	cvtsi2sd	%rax, %xmm0
    00000107: 	divsd	DATAat0x12828(%rip), %xmm0
    0000010f: 	addq	$0x28, %rsp
    00000113: 	popq	%rbx
    00000114: 	popq	%rbp
    00000115: 	popq	%r12
    00000117: 	popq	%r13
    00000119: 	popq	%r14
    0000011b: 	popq	%r15
    0000011d: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 285
    00000122: 	nopw	(%rax,%rax) # Size: 6
.Ltmp182:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	movq	%r13, %rsi
    00000131: 	xorl	%eax, %eax
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %r14d
    0000013c: 	callq	__printf_chk@PLT # Offset: 316
    00000141: 	movq	DATAat0x12840(%rip), %rcx
    00000148: 	movl	iterations(%rip), %eax
    0000014e: 	pxor	%xmm2, %xmm2
    00000152: 	movq	DATAat0x12838(%rip), %rsi
    00000159: 	movq	DATAat0x12890(%rip), %xmm4
    00000161: 	movq	%rcx, %xmm6
    00000166: 	movq	DATAat0x12848(%rip), %rcx
    0000016d: 	cmpl	%r14d, %eax
    00000170: 	movq	%rsi, %xmm7
    00000175: 	movq	%rcx, %xmm8
    0000017a: 	jg	.Ltmp183 # Offset: 378
    00000180: 	jmp	.Ltmp176 # Offset: 384
.Ltmp178:
    00000185: 	movl	%eax, 0xc(%rsp)
    00000189: 	addq	$0x8, %rbx
    0000018d: 	movsd	%xmm1, 0x10(%rsp)
    00000193: 	callq	sqrt@PLT # Offset: 403
    00000198: 	cmpq	%rbp, %rbx
    0000019b: 	movl	0xc(%rsp), %eax
    0000019f: 	pxor	%xmm2, %xmm2
    000001a3: 	movq	DATAat0x12838(%rip), %rdi
    000001aa: 	movsd	0x10(%rsp), %xmm1
    000001b0: 	movq	DATAat0x12890(%rip), %xmm4
    000001b8: 	movq	%rdi, %xmm7
    000001bd: 	movq	DATAat0x12840(%rip), %rdi
    000001c4: 	addsd	%xmm0, %xmm1
    000001c8: 	movq	%rdi, %xmm6
    000001cd: 	movq	DATAat0x12848(%rip), %rdi
    000001d4: 	movq	%rdi, %xmm8
    000001d9: 	jne	.Ltmp179 # Offset: 473
    000001df: 	jmp	.Ltmp184 # Offset: 479
.Ltmp180:
    000001e4: 	movl	%eax, 0xc(%rsp)
    000001e8: 	movsd	%xmm5, 0x18(%rsp)
    000001ee: 	movsd	%xmm1, 0x10(%rsp)
    000001f4: 	callq	sqrt@PLT # Offset: 500
    000001f9: 	movq	DATAat0x12848(%rip), %rax
    00000200: 	pxor	%xmm2, %xmm2
    00000204: 	movq	DATAat0x12890(%rip), %xmm4
    0000020c: 	movsd	0x18(%rsp), %xmm5
    00000212: 	movsd	0x10(%rsp), %xmm1
    00000218: 	movq	%rax, %xmm8
    0000021d: 	movq	DATAat0x12840(%rip), %rax
    00000224: 	movq	%rax, %xmm6
    00000229: 	movq	DATAat0x12838(%rip), %rax
    00000230: 	movq	%rax, %xmm7
    00000235: 	movl	0xc(%rsp), %eax
    00000239: 	jmp	.Ltmp185 # Offset: 569
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_sqrtIdEEvPT_iPKc"

Binary Function "_Z14test_variable1Id12inline_hypotIdEEvPT_iS2_PKc" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x5ec0
  Size        : 0x28c
  MaxSize     : 0x290
  Offset      : 0x5ec0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id12inline_hypotIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x38, %rsp
    00000017: 	movq	%rdx, 0x10(%rsp)
    0000001c: 	movsd	%xmm0, 0x8(%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp186 # Offset: 54
    0000003c: 	movsd	0x8(%rsp), %xmm3
    00000042: 	leal	-0x1(%rbp), %edx
    00000045: 	xorl	%r14d, %r14d
    00000048: 	pxor	%xmm2, %xmm2
    0000004c: 	movq	DATAat0x12890(%rip), %xmm4
    00000054: 	movsd	DATAat0x12848(%rip), %xmm7
    0000005c: 	leaq	0x8(%r15,%rdx,8), %r13
    00000061: 	leaq	DATAat0x12802(%rip), %r12
    00000068: 	mulsd	%xmm3, %xmm3
    0000006c: 	movsd	DATAat0x12838(%rip), %xmm6
    00000074: 	movsd	DATAat0x12840(%rip), %xmm5
    0000007c: 	nopl	(%rax) # Size: 4
.Ltmp193:
    00000080: 	movq	%r15, %rbx
    00000083: 	movapd	%xmm2, %xmm1
    00000087: 	movapd	%xmm2, %xmm9
    0000008c: 	testl	%ebp, %ebp
    0000008e: 	jle	.Ltmp187 # Offset: 142
.Ltmp189:
    00000090: 	movsd	(%rbx), %xmm0
    00000094: 	mulsd	%xmm0, %xmm0
    00000098: 	addsd	%xmm3, %xmm0
    0000009c: 	ucomisd	%xmm0, %xmm2
    000000a0: 	ja	.Ltmp188 # Offset: 160
    000000a6: 	sqrtsd	%xmm0, %xmm0
    000000aa: 	addq	$0x8, %rbx
    000000ae: 	addsd	%xmm0, %xmm1
    000000b2: 	cmpq	%rbx, %r13
    000000b5: 	jne	.Ltmp189 # Offset: 181
.Ltmp194:
    000000b7: 	movapd	%xmm1, %xmm9
    000000bc: 	andpd	%xmm4, %xmm9
.Ltmp187:
    000000c1: 	movsd	init_value(%rip), %xmm0
    000000c9: 	mulsd	%xmm0, %xmm0
    000000cd: 	addsd	%xmm3, %xmm0
    000000d1: 	ucomisd	%xmm0, %xmm2
    000000d5: 	ja	.Ltmp190 # Offset: 213
    000000db: 	sqrtsd	%xmm0, %xmm0
.Ltmp195:
    000000df: 	mulsd	%xmm7, %xmm0
    000000e3: 	comisd	%xmm6, %xmm9
    000000e8: 	movapd	%xmm1, %xmm8
    000000ed: 	subsd	%xmm0, %xmm8
    000000f2: 	jbe	.Ltmp191 # Offset: 242
    000000f4: 	divsd	%xmm1, %xmm8
.Ltmp191:
    000000f9: 	andpd	%xmm4, %xmm8
    000000fe: 	comisd	%xmm8, %xmm5
    00000103: 	jbe	.Ltmp192 # Offset: 259
    00000105: 	addl	$0x1, %r14d
    00000109: 	cmpl	%eax, %r14d
    0000010c: 	jl	.Ltmp193 # Offset: 268
.Ltmp186:
    00000112: 	callq	clock@PLT # Offset: 274
    00000117: 	pxor	%xmm0, %xmm0
    0000011b: 	movq	0x10(%rsp), %rdi
    00000120: 	movq	%rax, end_time(%rip)
    00000127: 	subq	start_time(%rip), %rax
    0000012e: 	cvtsi2sd	%rax, %xmm0
    00000133: 	divsd	DATAat0x12828(%rip), %xmm0
    0000013b: 	addq	$0x38, %rsp
    0000013f: 	popq	%rbx
    00000140: 	popq	%rbp
    00000141: 	popq	%r12
    00000143: 	popq	%r13
    00000145: 	popq	%r14
    00000147: 	popq	%r15
    00000149: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 329
    0000014e: 	nop # Size: 2
.Ltmp192:
    00000150: 	movl	current_test(%rip), %edx
    00000156: 	movq	%r12, %rsi
    00000159: 	xorl	%eax, %eax
    0000015b: 	movl	$0x1, %edi
    00000160: 	movsd	%xmm3, 0x8(%rsp)
    00000166: 	addl	$0x1, %r14d
    0000016a: 	callq	__printf_chk@PLT # Offset: 362
    0000016f: 	movq	DATAat0x12838(%rip), %rcx
    00000176: 	pxor	%xmm2, %xmm2
    0000017a: 	movl	iterations(%rip), %eax
    00000180: 	movq	DATAat0x12848(%rip), %rsi
    00000187: 	movsd	0x8(%rsp), %xmm3
    0000018d: 	movq	%rcx, %xmm6
    00000192: 	movq	DATAat0x12840(%rip), %rcx
    00000199: 	cmpl	%eax, %r14d
    0000019c: 	movq	DATAat0x12890(%rip), %xmm4
    000001a4: 	movq	%rsi, %xmm7
    000001a9: 	movq	%rcx, %xmm5
    000001ae: 	jl	.Ltmp193 # Offset: 430
    000001b4: 	jmp	.Ltmp186 # Offset: 436
.Ltmp188:
    000001b9: 	movl	%eax, 0x24(%rsp)
    000001bd: 	addq	$0x8, %rbx
    000001c1: 	movsd	%xmm3, 0x18(%rsp)
    000001c7: 	movsd	%xmm1, 0x8(%rsp)
    000001cd: 	callq	sqrt@PLT # Offset: 461
    000001d2: 	cmpq	%r13, %rbx
    000001d5: 	movl	0x24(%rsp), %eax
    000001d9: 	pxor	%xmm2, %xmm2
    000001dd: 	movq	DATAat0x12848(%rip), %rdi
    000001e4: 	movsd	0x8(%rsp), %xmm1
    000001ea: 	movsd	0x18(%rsp), %xmm3
    000001f0: 	movq	DATAat0x12890(%rip), %xmm4
    000001f8: 	movq	%rdi, %xmm7
    000001fd: 	movq	DATAat0x12838(%rip), %rdi
    00000204: 	addsd	%xmm0, %xmm1
    00000208: 	movq	%rdi, %xmm6
    0000020d: 	movq	DATAat0x12840(%rip), %rdi
    00000214: 	movq	%rdi, %xmm5
    00000219: 	jne	.Ltmp189 # Offset: 537
    0000021f: 	jmp	.Ltmp194 # Offset: 543
.Ltmp190:
    00000224: 	movl	%eax, 0x24(%rsp)
    00000228: 	movsd	%xmm9, 0x28(%rsp)
    0000022f: 	movsd	%xmm3, 0x18(%rsp)
    00000235: 	movsd	%xmm1, 0x8(%rsp)
    0000023b: 	callq	sqrt@PLT # Offset: 571
    00000240: 	movq	DATAat0x12840(%rip), %rax
    00000247: 	pxor	%xmm2, %xmm2
    0000024b: 	movq	DATAat0x12890(%rip), %xmm4
    00000253: 	movsd	0x28(%rsp), %xmm9
    0000025a: 	movsd	0x18(%rsp), %xmm3
    00000260: 	movq	%rax, %xmm5
    00000265: 	movq	DATAat0x12838(%rip), %rax
    0000026c: 	movsd	0x8(%rsp), %xmm1
    00000272: 	movq	%rax, %xmm6
    00000277: 	movq	DATAat0x12848(%rip), %rax
    0000027e: 	movq	%rax, %xmm7
    00000283: 	movl	0x24(%rsp), %eax
    00000287: 	jmp	.Ltmp195 # Offset: 647
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id12inline_hypotIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id13mathlib_hypotIdEEvPT_iS2_PKc" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x6150
  Size        : 0x1b8
  MaxSize     : 0x1c0
  Offset      : 0x6150
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id13mathlib_hypotIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp196 # Offset: 54
    0000003c: 	leal	-0x1(%r13), %eax
    00000040: 	movsd	(%rsp), %xmm1
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	DATAat0x12802(%rip), %r15
    0000004e: 	leaq	0x8(%r12,%rax,8), %rbx
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp201:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp197 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp198:
    00000080: 	movsd	(%r14), %xmm0
    00000085: 	movsd	%xmm2, 0x8(%rsp)
    0000008b: 	addq	$0x8, %r14
    0000008f: 	movsd	%xmm1, (%rsp)
    00000094: 	callq	hypot@PLT # Offset: 148
    00000099: 	movsd	0x8(%rsp), %xmm2
    0000009f: 	cmpq	%rbx, %r14
    000000a2: 	movsd	(%rsp), %xmm1
    000000a7: 	addsd	%xmm0, %xmm2
    000000ab: 	jne	.Ltmp198 # Offset: 171
    000000ad: 	movsd	0x10(%rsp), %xmm0
    000000b3: 	movsd	%xmm2, 0x8(%rsp)
    000000b9: 	callq	hypot@PLT # Offset: 185
    000000be: 	movsd	0x8(%rsp), %xmm2
    000000c4: 	movsd	(%rsp), %xmm1
    000000c9: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000d1: 	movapd	%xmm2, %xmm3
    000000d5: 	subsd	%xmm0, %xmm3
    000000d9: 	movapd	%xmm2, %xmm0
    000000dd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000e5: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ed: 	jbe	.Ltmp199 # Offset: 237
    000000ef: 	divsd	%xmm2, %xmm3
.Ltmp199:
    000000f3: 	andpd	DATAat0x12890(%rip), %xmm3
    000000fb: 	movsd	DATAat0x12840(%rip), %xmm4
    00000103: 	comisd	%xmm3, %xmm4
    00000107: 	jbe	.Ltmp200 # Offset: 263
    00000109: 	addl	$0x1, %ebp
    0000010c: 	cmpl	%ebp, iterations(%rip)
    00000112: 	jg	.Ltmp201 # Offset: 274
.Ltmp196:
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	pxor	%xmm0, %xmm0
    00000121: 	movq	0x18(%rsp), %rdi
    00000126: 	movq	%rax, end_time(%rip)
    0000012d: 	subq	start_time(%rip), %rax
    00000134: 	cvtsi2sd	%rax, %xmm0
    00000139: 	divsd	DATAat0x12828(%rip), %xmm0
    00000141: 	addq	$0x28, %rsp
    00000145: 	popq	%rbx
    00000146: 	popq	%rbp
    00000147: 	popq	%r12
    00000149: 	popq	%r13
    0000014b: 	popq	%r14
    0000014d: 	popq	%r15
    0000014f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 335
    00000154: 	nopl	(%rax) # Size: 4
.Ltmp200:
    00000158: 	movl	current_test(%rip), %edx
    0000015e: 	xorl	%eax, %eax
    00000160: 	movq	%r15, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	movsd	%xmm1, (%rsp)
    0000016d: 	addl	$0x1, %ebp
    00000170: 	callq	__printf_chk@PLT # Offset: 368
    00000175: 	cmpl	%ebp, iterations(%rip)
    0000017b: 	movsd	(%rsp), %xmm1
    00000180: 	jg	.Ltmp201 # Offset: 384
    00000186: 	jmp	.Ltmp196 # Offset: 390
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp197:
    00000190: 	movapd	%xmm5, %xmm0
    00000194: 	movsd	%xmm1, (%rsp)
    00000199: 	callq	hypot@PLT # Offset: 409
    0000019e: 	pxor	%xmm3, %xmm3
    000001a2: 	movsd	(%rsp), %xmm1
    000001a7: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001af: 	subsd	%xmm0, %xmm3
    000001b3: 	jmp	.Ltmp199 # Offset: 435
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id13mathlib_hypotIdEEvPT_iS2_PKc"

Binary Function "_Z13test_constantId11mathlib_cosIdEEvPT_iPKc" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x6310
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x6310
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_cosIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp202 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp207:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	cos@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp203 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp204:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	cos@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp204 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp205 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp205:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp206 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp207 # Offset: 233
.Ltmp202:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp206:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp202 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp207 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp203:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp205 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_cosIdEEvPT_iPKc"

Binary Function "_Z13test_constantId11mathlib_sinIdEEvPT_iPKc" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x6490
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x6490
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_sinIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp208 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp213:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	sin@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp209 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp210:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	sin@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp210 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp211 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp211:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp212 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp213 # Offset: 233
.Ltmp208:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp212:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp208 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp213 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp209:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp211 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_sinIdEEvPT_iPKc"

Binary Function "_Z13test_constantId11mathlib_tanIdEEvPT_iPKc" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x6610
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x6610
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_tanIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp214 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp219:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	tan@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp215 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp216:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	tan@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp216 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp217 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp217:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp218 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp219 # Offset: 233
.Ltmp214:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp218:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp214 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp219 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp215:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp217 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_tanIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_acosIdEEvPT_iPKc" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x6790
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x6790
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_acosIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp220 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp225:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp221 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp222:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	acos@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp222 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	acos@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp223 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp223:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp224 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp225 # Offset: 243
.Ltmp220:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp224:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp225 # Offset: 342
    0000015c: 	jmp	.Ltmp220 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp221:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	acos@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp223 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_acosIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_asinIdEEvPT_iPKc" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x6910
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x6910
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_asinIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp226 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp231:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp227 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp228:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	asin@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp228 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	asin@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp229 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp229:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp230 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp231 # Offset: 243
.Ltmp226:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp230:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp231 # Offset: 342
    0000015c: 	jmp	.Ltmp226 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp227:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	asin@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp229 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_asinIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_atanIdEEvPT_iPKc" after disassembly {
  Number      : 38
  State       : disassembled
  Address     : 0x6a90
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x6a90
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_atanIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp232 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp237:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	atan@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp233 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp234:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	atan@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp234 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp235 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp235:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp236 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp237 # Offset: 233
.Ltmp232:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp236:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp232 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp237 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp233:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp235 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_atanIdEEvPT_iPKc"

Binary Function "_Z14test_variable1Id13mathlib_atan2IdEEvPT_iS2_PKc" after disassembly {
  Number      : 39
  State       : disassembled
  Address     : 0x6c10
  Size        : 0x1b8
  MaxSize     : 0x1c0
  Offset      : 0x6c10
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id13mathlib_atan2IdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp238 # Offset: 54
    0000003c: 	leal	-0x1(%r13), %eax
    00000040: 	movsd	(%rsp), %xmm1
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	DATAat0x12802(%rip), %r15
    0000004e: 	leaq	0x8(%r12,%rax,8), %rbx
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp243:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp239 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp240:
    00000080: 	movsd	(%r14), %xmm0
    00000085: 	movsd	%xmm2, 0x8(%rsp)
    0000008b: 	addq	$0x8, %r14
    0000008f: 	movsd	%xmm1, (%rsp)
    00000094: 	callq	atan2@PLT # Offset: 148
    00000099: 	movsd	0x8(%rsp), %xmm2
    0000009f: 	cmpq	%rbx, %r14
    000000a2: 	movsd	(%rsp), %xmm1
    000000a7: 	addsd	%xmm0, %xmm2
    000000ab: 	jne	.Ltmp240 # Offset: 171
    000000ad: 	movsd	0x10(%rsp), %xmm0
    000000b3: 	movsd	%xmm2, 0x8(%rsp)
    000000b9: 	callq	atan2@PLT # Offset: 185
    000000be: 	movsd	0x8(%rsp), %xmm2
    000000c4: 	movsd	(%rsp), %xmm1
    000000c9: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000d1: 	movapd	%xmm2, %xmm3
    000000d5: 	subsd	%xmm0, %xmm3
    000000d9: 	movapd	%xmm2, %xmm0
    000000dd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000e5: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ed: 	jbe	.Ltmp241 # Offset: 237
    000000ef: 	divsd	%xmm2, %xmm3
.Ltmp241:
    000000f3: 	andpd	DATAat0x12890(%rip), %xmm3
    000000fb: 	movsd	DATAat0x12840(%rip), %xmm4
    00000103: 	comisd	%xmm3, %xmm4
    00000107: 	jbe	.Ltmp242 # Offset: 263
    00000109: 	addl	$0x1, %ebp
    0000010c: 	cmpl	%ebp, iterations(%rip)
    00000112: 	jg	.Ltmp243 # Offset: 274
.Ltmp238:
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	pxor	%xmm0, %xmm0
    00000121: 	movq	0x18(%rsp), %rdi
    00000126: 	movq	%rax, end_time(%rip)
    0000012d: 	subq	start_time(%rip), %rax
    00000134: 	cvtsi2sd	%rax, %xmm0
    00000139: 	divsd	DATAat0x12828(%rip), %xmm0
    00000141: 	addq	$0x28, %rsp
    00000145: 	popq	%rbx
    00000146: 	popq	%rbp
    00000147: 	popq	%r12
    00000149: 	popq	%r13
    0000014b: 	popq	%r14
    0000014d: 	popq	%r15
    0000014f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 335
    00000154: 	nopl	(%rax) # Size: 4
.Ltmp242:
    00000158: 	movl	current_test(%rip), %edx
    0000015e: 	xorl	%eax, %eax
    00000160: 	movq	%r15, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	movsd	%xmm1, (%rsp)
    0000016d: 	addl	$0x1, %ebp
    00000170: 	callq	__printf_chk@PLT # Offset: 368
    00000175: 	cmpl	%ebp, iterations(%rip)
    0000017b: 	movsd	(%rsp), %xmm1
    00000180: 	jg	.Ltmp243 # Offset: 384
    00000186: 	jmp	.Ltmp238 # Offset: 390
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp239:
    00000190: 	movapd	%xmm5, %xmm0
    00000194: 	movsd	%xmm1, (%rsp)
    00000199: 	callq	atan2@PLT # Offset: 409
    0000019e: 	pxor	%xmm3, %xmm3
    000001a2: 	movsd	(%rsp), %xmm1
    000001a7: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001af: 	subsd	%xmm0, %xmm3
    000001b3: 	jmp	.Ltmp241 # Offset: 435
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id13mathlib_atan2IdEEvPT_iS2_PKc"

Binary Function "_Z13test_constantId11mathlib_expIdEEvPT_iPKc" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x6dd0
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x6dd0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_expIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp244 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp249:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp245 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp246:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	exp@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp246 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	exp@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp247 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp247:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp248 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp249 # Offset: 243
.Ltmp244:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp248:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp249 # Offset: 342
    0000015c: 	jmp	.Ltmp244 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp245:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	exp@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp247 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_expIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_exp2IdEEvPT_iPKc" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x6f50
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x6f50
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_exp2IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp250 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp255:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp251 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp252:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	exp2@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp252 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	exp2@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp253 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp253:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp254 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp255 # Offset: 243
.Ltmp250:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp254:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp255 # Offset: 342
    0000015c: 	jmp	.Ltmp250 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp251:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	exp2@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp253 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_exp2IdEEvPT_iPKc"

Binary Function "_Z13test_constantId11mathlib_logIdEEvPT_iPKc" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x70d0
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x70d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_logIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp256 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp261:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp257 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp258:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	log@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp258 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	log@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp259 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp259:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp260 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp261 # Offset: 243
.Ltmp256:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp260:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp261 # Offset: 342
    0000015c: 	jmp	.Ltmp256 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp257:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	log@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp259 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_logIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_log10IdEEvPT_iPKc" after disassembly {
  Number      : 43
  State       : disassembled
  Address     : 0x7250
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x7250
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_log10IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp262 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp267:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp263 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp264:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	log10@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp264 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	log10@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp265 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp265:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp266 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp267 # Offset: 243
.Ltmp262:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp266:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp267 # Offset: 342
    0000015c: 	jmp	.Ltmp262 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp263:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	log10@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp265 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_log10IdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_log2IdEEvPT_iPKc" after disassembly {
  Number      : 44
  State       : disassembled
  Address     : 0x73d0
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x73d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_log2IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp268 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp273:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp269 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp270:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	log2@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp270 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	log2@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp271 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp271:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp272 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp273 # Offset: 243
.Ltmp268:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp272:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp273 # Offset: 342
    0000015c: 	jmp	.Ltmp268 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp269:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	log2@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp271 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_log2IdEEvPT_iPKc"

Binary Function "_Z14test_variable1Id11mathlib_powIdEEvPT_iS2_PKc" after disassembly {
  Number      : 45
  State       : disassembled
  Address     : 0x7550
  Size        : 0x1b8
  MaxSize     : 0x1c0
  Offset      : 0x7550
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id11mathlib_powIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp274 # Offset: 54
    0000003c: 	leal	-0x1(%r13), %eax
    00000040: 	movsd	(%rsp), %xmm1
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	DATAat0x12802(%rip), %r15
    0000004e: 	leaq	0x8(%r12,%rax,8), %rbx
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp279:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp275 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp276:
    00000080: 	movsd	(%r14), %xmm0
    00000085: 	movsd	%xmm2, 0x8(%rsp)
    0000008b: 	addq	$0x8, %r14
    0000008f: 	movsd	%xmm1, (%rsp)
    00000094: 	callq	pow@PLT # Offset: 148
    00000099: 	movsd	0x8(%rsp), %xmm2
    0000009f: 	cmpq	%rbx, %r14
    000000a2: 	movsd	(%rsp), %xmm1
    000000a7: 	addsd	%xmm0, %xmm2
    000000ab: 	jne	.Ltmp276 # Offset: 171
    000000ad: 	movsd	0x10(%rsp), %xmm0
    000000b3: 	movsd	%xmm2, 0x8(%rsp)
    000000b9: 	callq	pow@PLT # Offset: 185
    000000be: 	movsd	0x8(%rsp), %xmm2
    000000c4: 	movsd	(%rsp), %xmm1
    000000c9: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000d1: 	movapd	%xmm2, %xmm3
    000000d5: 	subsd	%xmm0, %xmm3
    000000d9: 	movapd	%xmm2, %xmm0
    000000dd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000e5: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ed: 	jbe	.Ltmp277 # Offset: 237
    000000ef: 	divsd	%xmm2, %xmm3
.Ltmp277:
    000000f3: 	andpd	DATAat0x12890(%rip), %xmm3
    000000fb: 	movsd	DATAat0x12840(%rip), %xmm4
    00000103: 	comisd	%xmm3, %xmm4
    00000107: 	jbe	.Ltmp278 # Offset: 263
    00000109: 	addl	$0x1, %ebp
    0000010c: 	cmpl	%ebp, iterations(%rip)
    00000112: 	jg	.Ltmp279 # Offset: 274
.Ltmp274:
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	pxor	%xmm0, %xmm0
    00000121: 	movq	0x18(%rsp), %rdi
    00000126: 	movq	%rax, end_time(%rip)
    0000012d: 	subq	start_time(%rip), %rax
    00000134: 	cvtsi2sd	%rax, %xmm0
    00000139: 	divsd	DATAat0x12828(%rip), %xmm0
    00000141: 	addq	$0x28, %rsp
    00000145: 	popq	%rbx
    00000146: 	popq	%rbp
    00000147: 	popq	%r12
    00000149: 	popq	%r13
    0000014b: 	popq	%r14
    0000014d: 	popq	%r15
    0000014f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 335
    00000154: 	nopl	(%rax) # Size: 4
.Ltmp278:
    00000158: 	movl	current_test(%rip), %edx
    0000015e: 	xorl	%eax, %eax
    00000160: 	movq	%r15, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	movsd	%xmm1, (%rsp)
    0000016d: 	addl	$0x1, %ebp
    00000170: 	callq	__printf_chk@PLT # Offset: 368
    00000175: 	cmpl	%ebp, iterations(%rip)
    0000017b: 	movsd	(%rsp), %xmm1
    00000180: 	jg	.Ltmp279 # Offset: 384
    00000186: 	jmp	.Ltmp274 # Offset: 390
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp275:
    00000190: 	movapd	%xmm5, %xmm0
    00000194: 	movsd	%xmm1, (%rsp)
    00000199: 	callq	pow@PLT # Offset: 409
    0000019e: 	pxor	%xmm3, %xmm3
    000001a2: 	movsd	(%rsp), %xmm1
    000001a7: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001af: 	subsd	%xmm0, %xmm3
    000001b3: 	jmp	.Ltmp277 # Offset: 435
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id11mathlib_powIdEEvPT_iS2_PKc"

Binary Function "_Z13test_constantId13mathlib_roundIdEEvPT_iPKc" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x7710
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x7710
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_roundIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp280 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp285:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	round@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp281 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp282:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	round@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp282 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp283 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp283:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp284 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp285 # Offset: 233
.Ltmp280:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp284:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp280 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp285 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp281:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp283 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_roundIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi14mathlib_lroundIdEEvPT_iPKc" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x7890
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0x7890
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi14mathlib_lroundIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp286 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%rbx,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp290:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp287 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp288:
    00000058: 	movsd	(%r14), %xmm0
    0000005d: 	addq	$0x8, %r14
    00000061: 	callq	lround@PLT # Offset: 97
    00000066: 	addl	%eax, %ebx
    00000068: 	cmpq	%rbp, %r14
    0000006b: 	jne	.Ltmp288 # Offset: 107
.Ltmp287:
    0000006d: 	movsd	init_value(%rip), %xmm0
    00000075: 	callq	lround@PLT # Offset: 117
    0000007a: 	imull	$0x1f40, %eax, %eax
    00000080: 	cmpl	%ebx, %eax
    00000082: 	je	.Ltmp289 # Offset: 130
    00000084: 	movl	current_test(%rip), %edx
    0000008a: 	leaq	DATAat0x12802(%rip), %rsi
    00000091: 	movl	$0x1, %edi
    00000096: 	xorl	%eax, %eax
    00000098: 	addl	$0x1, %r12d
    0000009c: 	callq	__printf_chk@PLT # Offset: 156
    000000a1: 	movl	iterations(%rip), %r13d
    000000a8: 	cmpl	%r13d, %r12d
    000000ab: 	jl	.Ltmp290 # Offset: 171
.Ltmp286:
    000000ad: 	callq	clock@PLT # Offset: 173
    000000b2: 	pxor	%xmm0, %xmm0
    000000b6: 	movq	0x8(%rsp), %rdi
    000000bb: 	movq	%rax, end_time(%rip)
    000000c2: 	subq	start_time(%rip), %rax
    000000c9: 	cvtsi2sd	%rax, %xmm0
    000000ce: 	divsd	DATAat0x12828(%rip), %xmm0
    000000d6: 	addq	$0x18, %rsp
    000000da: 	popq	%rbx
    000000db: 	popq	%rbp
    000000dc: 	popq	%r12
    000000de: 	popq	%r13
    000000e0: 	popq	%r14
    000000e2: 	popq	%r15
    000000e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 228
    000000e9: 	nopl	(%rax) # Size: 7
.Ltmp289:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp290 # Offset: 247
    000000fd: 	jmp	.Ltmp286 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi14mathlib_lroundIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdx15mathlib_llroundIdEEvPT_iPKc" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x7990
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0x7990
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdx15mathlib_llroundIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp291 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%rbx,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp295:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp292 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp293:
    00000058: 	movsd	(%r14), %xmm0
    0000005d: 	addq	$0x8, %r14
    00000061: 	callq	llround@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp293 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp292:
    00000071: 	movsd	init_value(%rip), %xmm0
    00000079: 	callq	llround@PLT # Offset: 121
    0000007e: 	imulq	$0x1f40, %rax, %rax
    00000085: 	cmpq	%rbx, %rax
    00000088: 	je	.Ltmp294 # Offset: 136
    0000008a: 	movl	current_test(%rip), %edx
    00000090: 	leaq	DATAat0x12802(%rip), %rsi
    00000097: 	movl	$0x1, %edi
    0000009c: 	xorl	%eax, %eax
    0000009e: 	addl	$0x1, %r12d
    000000a2: 	callq	__printf_chk@PLT # Offset: 162
    000000a7: 	movl	iterations(%rip), %r13d
    000000ae: 	cmpl	%r13d, %r12d
    000000b1: 	jl	.Ltmp295 # Offset: 177
.Ltmp291:
    000000b3: 	callq	clock@PLT # Offset: 179
    000000b8: 	pxor	%xmm0, %xmm0
    000000bc: 	movq	0x8(%rsp), %rdi
    000000c1: 	movq	%rax, end_time(%rip)
    000000c8: 	subq	start_time(%rip), %rax
    000000cf: 	cvtsi2sd	%rax, %xmm0
    000000d4: 	divsd	DATAat0x12828(%rip), %xmm0
    000000dc: 	addq	$0x18, %rsp
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp294:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp295 # Offset: 247
    000000fd: 	jmp	.Ltmp291 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdx15mathlib_llroundIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_truncIdEEvPT_iPKc" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x7a90
  Size        : 0x1fe
  MaxSize     : 0x200
  Offset      : 0x7a90
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_truncIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %ecx
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%ecx, %ecx
    0000002f: 	jle	.Ltmp296 # Offset: 47
    00000035: 	movq	DATAat0x12890(%rip), %xmm8
    0000003e: 	leal	-0x1(%r14), %eax
    00000042: 	movsd	DATAat0x12850(%rip), %xmm4
    0000004a: 	xorl	%r12d, %r12d
    0000004d: 	movsd	DATAat0x12840(%rip), %xmm11
    00000056: 	leaq	0x8(%r13,%rax,8), %rbx
    0000005b: 	movsd	init_value(%rip), %xmm7
    00000063: 	pxor	%xmm9, %xmm9
    00000068: 	movsd	DATAat0x12848(%rip), %xmm10
    00000071: 	movapd	%xmm8, %xmm3
    00000076: 	leaq	DATAat0x12802(%rip), %r15
    0000007d: 	nopl	(%rax) # Size: 3
.Ltmp303:
    00000080: 	movapd	%xmm7, %xmm1
    00000084: 	movapd	%xmm7, %xmm6
    00000088: 	andpd	%xmm3, %xmm1
    0000008c: 	ucomisd	%xmm1, %xmm4
    00000090: 	jbe	.Ltmp297 # Offset: 144
    00000092: 	cvttsd2si	%xmm7, %rax
    00000097: 	pxor	%xmm1, %xmm1
    0000009b: 	movapd	%xmm3, %xmm6
    0000009f: 	andnpd	%xmm7, %xmm6
    000000a3: 	cvtsi2sd	%rax, %xmm1
    000000a8: 	orpd	%xmm1, %xmm6
.Ltmp297:
    000000ac: 	mulsd	%xmm10, %xmm6
    000000b1: 	movq	%r13, %rax
    000000b4: 	movapd	%xmm9, %xmm2
    000000b9: 	testl	%r14d, %r14d
    000000bc: 	jle	.Ltmp298 # Offset: 188
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp300:
    000000c8: 	movsd	(%rax), %xmm0
    000000cc: 	movapd	%xmm0, %xmm1
    000000d0: 	andpd	%xmm3, %xmm1
    000000d4: 	ucomisd	%xmm1, %xmm4
    000000d8: 	jbe	.Ltmp299 # Offset: 216
    000000da: 	cvttsd2si	%xmm0, %rdx
    000000df: 	pxor	%xmm1, %xmm1
    000000e3: 	movapd	%xmm3, %xmm5
    000000e7: 	andnpd	%xmm0, %xmm5
    000000eb: 	cvtsi2sd	%rdx, %xmm1
    000000f0: 	movapd	%xmm1, %xmm0
    000000f4: 	orpd	%xmm5, %xmm0
.Ltmp299:
    000000f8: 	addq	$0x8, %rax
    000000fc: 	addsd	%xmm0, %xmm2
    00000100: 	cmpq	%rax, %rbx
    00000103: 	jne	.Ltmp300 # Offset: 259
    00000105: 	movapd	%xmm2, %xmm1
    00000109: 	movapd	%xmm2, %xmm0
    0000010d: 	andpd	%xmm8, %xmm1
    00000112: 	comisd	DATAat0x12838(%rip), %xmm1
    0000011a: 	subsd	%xmm6, %xmm0
    0000011e: 	jbe	.Ltmp301 # Offset: 286
    00000120: 	divsd	%xmm2, %xmm0
.Ltmp301:
    00000124: 	andpd	%xmm8, %xmm0
    00000129: 	comisd	%xmm0, %xmm11
    0000012e: 	jbe	.Ltmp302 # Offset: 302
    00000130: 	addl	$0x1, %r12d
    00000134: 	cmpl	%ecx, %r12d
    00000137: 	jl	.Ltmp303 # Offset: 311
.Ltmp296:
    0000013d: 	callq	clock@PLT # Offset: 317
    00000142: 	pxor	%xmm0, %xmm0
    00000146: 	movq	%rbp, %rdi
    00000149: 	movq	%rax, end_time(%rip)
    00000150: 	subq	start_time(%rip), %rax
    00000157: 	cvtsi2sd	%rax, %xmm0
    0000015c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000164: 	addq	$0x8, %rsp
    00000168: 	popq	%rbx
    00000169: 	popq	%rbp
    0000016a: 	popq	%r12
    0000016c: 	popq	%r13
    0000016e: 	popq	%r14
    00000170: 	popq	%r15
    00000172: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 370
    00000177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp302:
    00000180: 	movl	current_test(%rip), %edx
    00000186: 	movq	%r15, %rsi
    00000189: 	movl	$0x1, %edi
    0000018e: 	xorl	%eax, %eax
    00000190: 	addl	$0x1, %r12d
    00000194: 	callq	__printf_chk@PLT # Offset: 404
    00000199: 	movl	iterations(%rip), %ecx
    0000019f: 	cmpl	%ecx, %r12d
    000001a2: 	jge	.Ltmp296 # Offset: 418
    000001a4: 	movq	DATAat0x12880(%rip), %rax
    000001ab: 	movsd	init_value(%rip), %xmm7
    000001b3: 	pxor	%xmm9, %xmm9
    000001b8: 	movq	DATAat0x12890(%rip), %xmm8
    000001c1: 	movq	%rax, %xmm3
    000001c6: 	movq	DATAat0x12848(%rip), %rax
    000001cd: 	movq	%rax, %xmm10
    000001d2: 	movq	DATAat0x12850(%rip), %rax
    000001d9: 	movq	%rax, %xmm4
    000001de: 	movq	DATAat0x12840(%rip), %rax
    000001e5: 	movq	%rax, %xmm11
    000001ea: 	jmp	.Ltmp303 # Offset: 490
    000001ef: 	nop # Size: 1
.Ltmp298:
    000001f0: 	movapd	%xmm9, %xmm0
    000001f5: 	subsd	%xmm6, %xmm0
    000001f9: 	jmp	.Ltmp301 # Offset: 505
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_truncIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_coshIdEEvPT_iPKc" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0x7c90
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x7c90
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_coshIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp304 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp309:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp305 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp306:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	cosh@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp306 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	cosh@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp307 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp307:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp308 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp309 # Offset: 243
.Ltmp304:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp308:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp309 # Offset: 342
    0000015c: 	jmp	.Ltmp304 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp305:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	cosh@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp307 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_coshIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_sinhIdEEvPT_iPKc" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0x7e10
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x7e10
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_sinhIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp310 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp315:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp311 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp312:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	sinh@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp312 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	sinh@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp313 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp313:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp314 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp315 # Offset: 243
.Ltmp310:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp314:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp315 # Offset: 342
    0000015c: 	jmp	.Ltmp310 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp311:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	sinh@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp313 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_sinhIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_tanhIdEEvPT_iPKc" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0x7f90
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x7f90
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_tanhIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp316 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp321:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	tanh@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp317 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp318:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	tanh@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp318 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp319 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp319:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp320 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp321 # Offset: 233
.Ltmp316:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp320:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp316 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp321 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp317:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp319 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_tanhIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_acoshIdEEvPT_iPKc" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x8110
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x8110
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_acoshIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp322 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp327:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp323 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp324:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	acosh@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp324 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	acosh@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp325 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp325:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp326 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp327 # Offset: 243
.Ltmp322:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp326:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp327 # Offset: 342
    0000015c: 	jmp	.Ltmp322 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp323:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	acosh@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp325 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_acoshIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_asinhIdEEvPT_iPKc" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0x8290
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x8290
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_asinhIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp328 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp333:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	asinh@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp329 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp330:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	asinh@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp330 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp331 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp331:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp332 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp333 # Offset: 233
.Ltmp328:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp332:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp328 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp333 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp329:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp331 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_asinhIdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_atanhIdEEvPT_iPKc" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x8410
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x8410
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_atanhIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp334 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp339:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp335 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp336:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	atanh@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp336 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	atanh@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp337 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp337:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp338 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp339 # Offset: 243
.Ltmp334:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp338:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp339 # Offset: 342
    0000015c: 	jmp	.Ltmp334 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp335:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	atanh@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp337 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_atanhIdEEvPT_iPKc"

Binary Function "_Z14test_variable1Id12mathlib_fmodIdEEvPT_iS2_PKc" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x8590
  Size        : 0x1b8
  MaxSize     : 0x1c0
  Offset      : 0x8590
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id12mathlib_fmodIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp340 # Offset: 54
    0000003c: 	leal	-0x1(%r13), %eax
    00000040: 	movsd	(%rsp), %xmm1
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	DATAat0x12802(%rip), %r15
    0000004e: 	leaq	0x8(%r12,%rax,8), %rbx
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp345:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp341 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp342:
    00000080: 	movsd	(%r14), %xmm0
    00000085: 	movsd	%xmm2, 0x8(%rsp)
    0000008b: 	addq	$0x8, %r14
    0000008f: 	movsd	%xmm1, (%rsp)
    00000094: 	callq	fmod@PLT # Offset: 148
    00000099: 	movsd	0x8(%rsp), %xmm2
    0000009f: 	cmpq	%rbx, %r14
    000000a2: 	movsd	(%rsp), %xmm1
    000000a7: 	addsd	%xmm0, %xmm2
    000000ab: 	jne	.Ltmp342 # Offset: 171
    000000ad: 	movsd	0x10(%rsp), %xmm0
    000000b3: 	movsd	%xmm2, 0x8(%rsp)
    000000b9: 	callq	fmod@PLT # Offset: 185
    000000be: 	movsd	0x8(%rsp), %xmm2
    000000c4: 	movsd	(%rsp), %xmm1
    000000c9: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000d1: 	movapd	%xmm2, %xmm3
    000000d5: 	subsd	%xmm0, %xmm3
    000000d9: 	movapd	%xmm2, %xmm0
    000000dd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000e5: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ed: 	jbe	.Ltmp343 # Offset: 237
    000000ef: 	divsd	%xmm2, %xmm3
.Ltmp343:
    000000f3: 	andpd	DATAat0x12890(%rip), %xmm3
    000000fb: 	movsd	DATAat0x12840(%rip), %xmm4
    00000103: 	comisd	%xmm3, %xmm4
    00000107: 	jbe	.Ltmp344 # Offset: 263
    00000109: 	addl	$0x1, %ebp
    0000010c: 	cmpl	%ebp, iterations(%rip)
    00000112: 	jg	.Ltmp345 # Offset: 274
.Ltmp340:
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	pxor	%xmm0, %xmm0
    00000121: 	movq	0x18(%rsp), %rdi
    00000126: 	movq	%rax, end_time(%rip)
    0000012d: 	subq	start_time(%rip), %rax
    00000134: 	cvtsi2sd	%rax, %xmm0
    00000139: 	divsd	DATAat0x12828(%rip), %xmm0
    00000141: 	addq	$0x28, %rsp
    00000145: 	popq	%rbx
    00000146: 	popq	%rbp
    00000147: 	popq	%r12
    00000149: 	popq	%r13
    0000014b: 	popq	%r14
    0000014d: 	popq	%r15
    0000014f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 335
    00000154: 	nopl	(%rax) # Size: 4
.Ltmp344:
    00000158: 	movl	current_test(%rip), %edx
    0000015e: 	xorl	%eax, %eax
    00000160: 	movq	%r15, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	movsd	%xmm1, (%rsp)
    0000016d: 	addl	$0x1, %ebp
    00000170: 	callq	__printf_chk@PLT # Offset: 368
    00000175: 	cmpl	%ebp, iterations(%rip)
    0000017b: 	movsd	(%rsp), %xmm1
    00000180: 	jg	.Ltmp345 # Offset: 384
    00000186: 	jmp	.Ltmp340 # Offset: 390
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp341:
    00000190: 	movapd	%xmm5, %xmm0
    00000194: 	movsd	%xmm1, (%rsp)
    00000199: 	callq	fmod@PLT # Offset: 409
    0000019e: 	pxor	%xmm3, %xmm3
    000001a2: 	movsd	(%rsp), %xmm1
    000001a7: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001af: 	subsd	%xmm0, %xmm3
    000001b3: 	jmp	.Ltmp343 # Offset: 435
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id12mathlib_fmodIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id17mathlib_remainderIdEEvPT_iS2_PKc" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x8750
  Size        : 0x1b8
  MaxSize     : 0x1c0
  Offset      : 0x8750
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id17mathlib_remainderIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp346 # Offset: 54
    0000003c: 	leal	-0x1(%r13), %eax
    00000040: 	movsd	(%rsp), %xmm1
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	DATAat0x12802(%rip), %r15
    0000004e: 	leaq	0x8(%r12,%rax,8), %rbx
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp351:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp347 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp348:
    00000080: 	movsd	(%r14), %xmm0
    00000085: 	movsd	%xmm2, 0x8(%rsp)
    0000008b: 	addq	$0x8, %r14
    0000008f: 	movsd	%xmm1, (%rsp)
    00000094: 	callq	remainder@PLT # Offset: 148
    00000099: 	movsd	0x8(%rsp), %xmm2
    0000009f: 	cmpq	%rbx, %r14
    000000a2: 	movsd	(%rsp), %xmm1
    000000a7: 	addsd	%xmm0, %xmm2
    000000ab: 	jne	.Ltmp348 # Offset: 171
    000000ad: 	movsd	0x10(%rsp), %xmm0
    000000b3: 	movsd	%xmm2, 0x8(%rsp)
    000000b9: 	callq	remainder@PLT # Offset: 185
    000000be: 	movsd	0x8(%rsp), %xmm2
    000000c4: 	movsd	(%rsp), %xmm1
    000000c9: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000d1: 	movapd	%xmm2, %xmm3
    000000d5: 	subsd	%xmm0, %xmm3
    000000d9: 	movapd	%xmm2, %xmm0
    000000dd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000e5: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ed: 	jbe	.Ltmp349 # Offset: 237
    000000ef: 	divsd	%xmm2, %xmm3
.Ltmp349:
    000000f3: 	andpd	DATAat0x12890(%rip), %xmm3
    000000fb: 	movsd	DATAat0x12840(%rip), %xmm4
    00000103: 	comisd	%xmm3, %xmm4
    00000107: 	jbe	.Ltmp350 # Offset: 263
    00000109: 	addl	$0x1, %ebp
    0000010c: 	cmpl	%ebp, iterations(%rip)
    00000112: 	jg	.Ltmp351 # Offset: 274
.Ltmp346:
    00000118: 	callq	clock@PLT # Offset: 280
    0000011d: 	pxor	%xmm0, %xmm0
    00000121: 	movq	0x18(%rsp), %rdi
    00000126: 	movq	%rax, end_time(%rip)
    0000012d: 	subq	start_time(%rip), %rax
    00000134: 	cvtsi2sd	%rax, %xmm0
    00000139: 	divsd	DATAat0x12828(%rip), %xmm0
    00000141: 	addq	$0x28, %rsp
    00000145: 	popq	%rbx
    00000146: 	popq	%rbp
    00000147: 	popq	%r12
    00000149: 	popq	%r13
    0000014b: 	popq	%r14
    0000014d: 	popq	%r15
    0000014f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 335
    00000154: 	nopl	(%rax) # Size: 4
.Ltmp350:
    00000158: 	movl	current_test(%rip), %edx
    0000015e: 	xorl	%eax, %eax
    00000160: 	movq	%r15, %rsi
    00000163: 	movl	$0x1, %edi
    00000168: 	movsd	%xmm1, (%rsp)
    0000016d: 	addl	$0x1, %ebp
    00000170: 	callq	__printf_chk@PLT # Offset: 368
    00000175: 	cmpl	%ebp, iterations(%rip)
    0000017b: 	movsd	(%rsp), %xmm1
    00000180: 	jg	.Ltmp351 # Offset: 384
    00000186: 	jmp	.Ltmp346 # Offset: 390
    00000188: 	nopl	(%rax,%rax) # Size: 8
.Ltmp347:
    00000190: 	movapd	%xmm5, %xmm0
    00000194: 	movsd	%xmm1, (%rsp)
    00000199: 	callq	remainder@PLT # Offset: 409
    0000019e: 	pxor	%xmm3, %xmm3
    000001a2: 	movsd	(%rsp), %xmm1
    000001a7: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001af: 	subsd	%xmm0, %xmm3
    000001b3: 	jmp	.Ltmp349 # Offset: 435
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id17mathlib_remainderIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Id16mathlib_copysignIdEEvPT_iS2_PKc" after disassembly {
  Number      : 58
  State       : disassembled
  Address     : 0x8910
  Size        : 0x23a
  MaxSize     : 0x240
  Offset      : 0x8910
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Id16mathlib_copysignIdEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB057:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movsd	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %edx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%edx, %edx
    00000036: 	jle	.Ltmp352 # Offset: 54
    0000003c: 	movl	%r13d, %eax
    0000003f: 	movl	%r13d, %r15d
    00000042: 	movsd	(%rsp), %xmm11
    00000048: 	xorl	%r14d, %r14d
    0000004b: 	shrl	%eax
    0000004d: 	andl	$-0x2, %r15d
    00000051: 	movq	DATAat0x128c0(%rip), %xmm5
    00000059: 	movq	DATAat0x12890(%rip), %xmm4
    00000061: 	subl	$0x1, %eax
    00000064: 	pxor	%xmm10, %xmm10
    00000069: 	movsd	DATAat0x12840(%rip), %xmm9
    00000072: 	movsd	init_value(%rip), %xmm12
    0000007b: 	shlq	$0x4, %rax
    0000007f: 	movapd	DATAat0x128b0(%rip), %xmm6
    00000087: 	movsd	DATAat0x12848(%rip), %xmm8
    00000090: 	leaq	DATAat0x12802(%rip), %rbp
    00000097: 	leaq	0x10(%rbx,%rax), %r12
    0000009c: 	nopl	(%rax) # Size: 4
.Ltmp359:
    000000a0: 	movapd	%xmm5, %xmm7
    000000a4: 	movapd	%xmm11, %xmm2
    000000a9: 	andpd	%xmm5, %xmm2
    000000ad: 	andnpd	%xmm12, %xmm7
    000000b2: 	orpd	%xmm2, %xmm7
    000000b6: 	mulsd	%xmm8, %xmm7
    000000bb: 	testl	%r13d, %r13d
    000000be: 	jle	.Ltmp353 # Offset: 190
    000000c4: 	cmpl	$0x1, %r13d
    000000c8: 	je	.Ltmp354 # Offset: 200
    000000ce: 	movapd	%xmm11, %xmm3
    000000d3: 	movq	%rbx, %rax
    000000d6: 	movapd	%xmm10, %xmm1
    000000db: 	unpcklpd	%xmm3, %xmm3
    000000df: 	andpd	%xmm6, %xmm3
    000000e3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp355:
    000000e8: 	movupd	(%rax), %xmm2
    000000ec: 	movapd	%xmm6, %xmm0
    000000f0: 	addq	$0x10, %rax
    000000f4: 	andnpd	%xmm2, %xmm0
    000000f8: 	orpd	%xmm3, %xmm0
    000000fc: 	addsd	%xmm0, %xmm1
    00000100: 	unpckhpd	%xmm0, %xmm0
    00000104: 	addsd	%xmm0, %xmm1
    00000108: 	cmpq	%rax, %r12
    0000010b: 	jne	.Ltmp355 # Offset: 267
    0000010d: 	movslq	%r15d, %rax
    00000110: 	cmpl	%r13d, %r15d
    00000113: 	je	.Ltmp356 # Offset: 275
.Ltmp360:
    00000115: 	movsd	(%rbx,%rax,8), %xmm0
    0000011a: 	movapd	%xmm11, %xmm3
    0000011f: 	andpd	%xmm5, %xmm3
    00000123: 	andpd	%xmm4, %xmm0
    00000127: 	orpd	%xmm3, %xmm0
    0000012b: 	addsd	%xmm0, %xmm1
.Ltmp356:
    0000012f: 	movapd	%xmm1, %xmm2
    00000133: 	movapd	%xmm1, %xmm0
    00000137: 	andpd	%xmm4, %xmm2
    0000013b: 	comisd	DATAat0x12838(%rip), %xmm2
    00000143: 	subsd	%xmm7, %xmm0
    00000147: 	jbe	.Ltmp357 # Offset: 327
    00000149: 	divsd	%xmm1, %xmm0
.Ltmp357:
    0000014d: 	andpd	%xmm4, %xmm0
    00000151: 	comisd	%xmm0, %xmm9
    00000156: 	jbe	.Ltmp358 # Offset: 342
    00000158: 	addl	$0x1, %r14d
    0000015c: 	cmpl	%edx, %r14d
    0000015f: 	jl	.Ltmp359 # Offset: 351
.Ltmp352:
    00000165: 	callq	clock@PLT # Offset: 357
    0000016a: 	pxor	%xmm0, %xmm0
    0000016e: 	movq	0x8(%rsp), %rdi
    00000173: 	movq	%rax, end_time(%rip)
    0000017a: 	subq	start_time(%rip), %rax
    00000181: 	cvtsi2sd	%rax, %xmm0
    00000186: 	divsd	DATAat0x12828(%rip), %xmm0
    0000018e: 	addq	$0x18, %rsp
    00000192: 	popq	%rbx
    00000193: 	popq	%rbp
    00000194: 	popq	%r12
    00000196: 	popq	%r13
    00000198: 	popq	%r14
    0000019a: 	popq	%r15
    0000019c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 412
    000001a1: 	nopl	(%rax) # Size: 7
.Ltmp358:
    000001a8: 	movl	current_test(%rip), %edx
    000001ae: 	movq	%rbp, %rsi
    000001b1: 	movl	$0x1, %edi
    000001b6: 	xorl	%eax, %eax
    000001b8: 	movsd	%xmm11, (%rsp)
    000001be: 	addl	$0x1, %r14d
    000001c2: 	callq	__printf_chk@PLT # Offset: 450
    000001c7: 	movl	iterations(%rip), %edx
    000001cd: 	cmpl	%edx, %r14d
    000001d0: 	jge	.Ltmp352 # Offset: 464
    000001d2: 	movq	DATAat0x12840(%rip), %rax
    000001d9: 	movsd	(%rsp), %xmm11
    000001df: 	pxor	%xmm10, %xmm10
    000001e4: 	movq	DATAat0x128c0(%rip), %xmm5
    000001ec: 	movq	DATAat0x12890(%rip), %xmm4
    000001f4: 	movq	%rax, %xmm9
    000001f9: 	movq	DATAat0x12848(%rip), %rax
    00000200: 	movsd	init_value(%rip), %xmm12
    00000209: 	movapd	DATAat0x128b0(%rip), %xmm6
    00000211: 	movq	%rax, %xmm8
    00000216: 	jmp	.Ltmp359 # Offset: 534
    0000021b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp353:
    00000220: 	movapd	%xmm10, %xmm0
    00000225: 	subsd	%xmm7, %xmm0
    00000229: 	jmp	.Ltmp357 # Offset: 553
.Ltmp354:
    0000022e: 	xorl	%eax, %eax
    00000230: 	movapd	%xmm10, %xmm1
    00000235: 	jmp	.Ltmp360 # Offset: 565
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Id16mathlib_copysignIdEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Idi13mathlib_ldexpIdiEEvPT_iT0_PKc" after disassembly {
  Number      : 59
  State       : disassembled
  Address     : 0x8b50
  Size        : 0x190
  MaxSize     : 0x190
  Offset      : 0x8b50
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Idi13mathlib_ldexpIdiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB058:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x18(%rsp)
    0000001f: 	callq	clock@PLT # Offset: 31
    00000024: 	movq	%rax, start_time(%rip)
    0000002b: 	movl	iterations(%rip), %eax
    00000031: 	testl	%eax, %eax
    00000033: 	jle	.Ltmp361 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%r13,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp366:
    00000048: 	movsd	init_value(%rip), %xmm4
    00000050: 	movq	%r13, %r15
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	movsd	%xmm4, 0x10(%rsp)
    0000005d: 	testl	%r14d, %r14d
    00000060: 	jle	.Ltmp362 # Offset: 96
    00000066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp363:
    00000070: 	movsd	(%r15), %xmm0
    00000075: 	movl	%ebx, %edi
    00000077: 	movsd	%xmm1, 0x8(%rsp)
    0000007d: 	addq	$0x8, %r15
    00000081: 	callq	ldexp@PLT # Offset: 129
    00000086: 	movsd	0x8(%rsp), %xmm1
    0000008c: 	addsd	%xmm0, %xmm1
    00000090: 	cmpq	%rbp, %r15
    00000093: 	jne	.Ltmp363 # Offset: 147
    00000095: 	movsd	0x10(%rsp), %xmm0
    0000009b: 	movl	%ebx, %edi
    0000009d: 	movsd	%xmm1, 0x8(%rsp)
    000000a3: 	callq	ldexp@PLT # Offset: 163
    000000a8: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000b0: 	movsd	0x8(%rsp), %xmm1
    000000b6: 	movapd	%xmm1, %xmm2
    000000ba: 	subsd	%xmm0, %xmm2
    000000be: 	movapd	%xmm1, %xmm0
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ca: 	comisd	DATAat0x12838(%rip), %xmm0
    000000d2: 	jbe	.Ltmp364 # Offset: 210
    000000d4: 	divsd	%xmm1, %xmm2
.Ltmp364:
    000000d8: 	andpd	DATAat0x12890(%rip), %xmm2
    000000e0: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e8: 	comisd	%xmm2, %xmm3
    000000ec: 	jbe	.Ltmp365 # Offset: 236
    000000ee: 	addl	$0x1, %r12d
    000000f2: 	cmpl	%r12d, iterations(%rip)
    000000f9: 	jg	.Ltmp366 # Offset: 249
.Ltmp361:
    000000ff: 	callq	clock@PLT # Offset: 255
    00000104: 	pxor	%xmm0, %xmm0
    00000108: 	movq	0x18(%rsp), %rdi
    0000010d: 	movq	%rax, end_time(%rip)
    00000114: 	subq	start_time(%rip), %rax
    0000011b: 	cvtsi2sd	%rax, %xmm0
    00000120: 	divsd	DATAat0x12828(%rip), %xmm0
    00000128: 	addq	$0x28, %rsp
    0000012c: 	popq	%rbx
    0000012d: 	popq	%rbp
    0000012e: 	popq	%r12
    00000130: 	popq	%r13
    00000132: 	popq	%r14
    00000134: 	popq	%r15
    00000136: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 310
    0000013b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp365:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movl	$0x1, %edi
    0000014d: 	addl	$0x1, %r12d
    00000151: 	leaq	DATAat0x12802(%rip), %rsi
    00000158: 	callq	__printf_chk@PLT # Offset: 344
    0000015d: 	cmpl	%r12d, iterations(%rip)
    00000164: 	jg	.Ltmp366 # Offset: 356
    0000016a: 	jmp	.Ltmp361 # Offset: 362
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp362:
    00000170: 	movapd	%xmm4, %xmm0
    00000174: 	movl	%ebx, %edi
    00000176: 	callq	ldexp@PLT # Offset: 374
    0000017b: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000183: 	pxor	%xmm2, %xmm2
    00000187: 	subsd	%xmm0, %xmm2
    0000018b: 	jmp	.Ltmp364 # Offset: 395
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Idi13mathlib_ldexpIdiEEvPT_iT0_PKc"

Binary Function "_Z17test_variable1ptrIdi13mathlib_frexpIdiEEvPT_iT0_PKc" after disassembly {
  Number      : 60
  State       : disassembled
  Address     : 0x8ce0
  Size        : 0x1c6
  MaxSize     : 0x1d0
  Offset      : 0x8ce0
  Section     : .text
  Orc Section : .local.text._Z17test_variable1ptrIdi13mathlib_frexpIdiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB059:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rcx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	testl	%eax, %eax
    00000041: 	jle	.Ltmp367 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	xorl	%r12d, %r12d
    0000004e: 	leaq	0x24(%rsp), %rbx
    00000053: 	leaq	0x8(%r13,%rax,8), %rbp
    00000058: 	nopl	(%rax,%rax) # Size: 8
.Ltmp372:
    00000060: 	movsd	init_value(%rip), %xmm4
    00000068: 	movq	%r13, %r15
    0000006b: 	pxor	%xmm1, %xmm1
    0000006f: 	movsd	%xmm4, 0x10(%rsp)
    00000075: 	testl	%r14d, %r14d
    00000078: 	jle	.Ltmp368 # Offset: 120
    0000007e: 	nop # Size: 2
.Ltmp369:
    00000080: 	movsd	(%r15), %xmm0
    00000085: 	movq	%rbx, %rdi
    00000088: 	movsd	%xmm1, 0x8(%rsp)
    0000008e: 	addq	$0x8, %r15
    00000092: 	callq	frexp@PLT # Offset: 146
    00000097: 	movsd	0x8(%rsp), %xmm1
    0000009d: 	addsd	%xmm0, %xmm1
    000000a1: 	cmpq	%rbp, %r15
    000000a4: 	jne	.Ltmp369 # Offset: 164
    000000a6: 	movsd	0x10(%rsp), %xmm0
    000000ac: 	movq	%rbx, %rdi
    000000af: 	movsd	%xmm1, 0x8(%rsp)
    000000b5: 	callq	frexp@PLT # Offset: 181
    000000ba: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000c2: 	movsd	0x8(%rsp), %xmm1
    000000c8: 	movapd	%xmm1, %xmm2
    000000cc: 	subsd	%xmm0, %xmm2
    000000d0: 	movapd	%xmm1, %xmm0
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000dc: 	comisd	DATAat0x12838(%rip), %xmm0
    000000e4: 	jbe	.Ltmp370 # Offset: 228
    000000e6: 	divsd	%xmm1, %xmm2
.Ltmp370:
    000000ea: 	andpd	DATAat0x12890(%rip), %xmm2
    000000f2: 	movsd	DATAat0x12840(%rip), %xmm3
    000000fa: 	comisd	%xmm2, %xmm3
    000000fe: 	jbe	.Ltmp371 # Offset: 254
    00000100: 	addl	$0x1, %r12d
    00000104: 	cmpl	%r12d, iterations(%rip)
    0000010b: 	jg	.Ltmp372 # Offset: 267
.Ltmp367:
    00000111: 	callq	clock@PLT # Offset: 273
    00000116: 	movq	%rax, end_time(%rip)
    0000011d: 	movq	0x28(%rsp), %rdx
    00000122: 	subq	%fs:0x28, %rdx
    0000012b: 	jne	.Ltmp373 # Offset: 299
    00000131: 	subq	start_time(%rip), %rax
    00000138: 	pxor	%xmm0, %xmm0
    0000013c: 	movq	0x18(%rsp), %rdi
    00000141: 	cvtsi2sd	%rax, %xmm0
    00000146: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014e: 	addq	$0x38, %rsp
    00000152: 	popq	%rbx
    00000153: 	popq	%rbp
    00000154: 	popq	%r12
    00000156: 	popq	%r13
    00000158: 	popq	%r14
    0000015a: 	popq	%r15
    0000015c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 348
    00000161: 	nopl	(%rax) # Size: 7
.Ltmp371:
    00000168: 	movl	current_test(%rip), %edx
    0000016e: 	xorl	%eax, %eax
    00000170: 	movl	$0x1, %edi
    00000175: 	addl	$0x1, %r12d
    00000179: 	leaq	DATAat0x12802(%rip), %rsi
    00000180: 	callq	__printf_chk@PLT # Offset: 384
    00000185: 	cmpl	iterations(%rip), %r12d
    0000018c: 	jl	.Ltmp372 # Offset: 396
    00000192: 	jmp	.Ltmp367 # Offset: 402
    00000197: 	nopw	(%rax,%rax) # Size: 9
.Ltmp368:
    000001a0: 	movapd	%xmm4, %xmm0
    000001a4: 	movq	%rbx, %rdi
    000001a7: 	callq	frexp@PLT # Offset: 423
    000001ac: 	mulsd	DATAat0x12848(%rip), %xmm0
    000001b4: 	pxor	%xmm2, %xmm2
    000001b8: 	subsd	%xmm0, %xmm2
    000001bc: 	jmp	.Ltmp370 # Offset: 444
.Ltmp373:
    000001c1: 	callq	__stack_chk_fail@PLT # Offset: 449
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_variable1ptrIdi13mathlib_frexpIdiEEvPT_iT0_PKc"

Binary Function "_Z13test_constantId10mathlib_j0IdEEvPT_iPKc" after disassembly {
  Number      : 61
  State       : disassembled
  Address     : 0x8eb0
  Size        : 0x17a
  MaxSize     : 0x180
  Offset      : 0x8eb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId10mathlib_j0IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB060:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp374 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp379:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp375 # Offset: 90
.Ltmp376:
    00000060: 	movsd	(%r14), %xmm0
    00000065: 	movsd	%xmm1, (%rsp)
    0000006a: 	addq	$0x8, %r14
    0000006e: 	callq	j0@PLT # Offset: 110
    00000073: 	movsd	(%rsp), %xmm1
    00000078: 	addsd	%xmm0, %xmm1
    0000007c: 	cmpq	%rbx, %r14
    0000007f: 	jne	.Ltmp376 # Offset: 127
    00000081: 	movsd	init_value(%rip), %xmm0
    00000089: 	movsd	%xmm1, (%rsp)
    0000008e: 	callq	j0@PLT # Offset: 142
    00000093: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	movapd	%xmm1, %xmm2
    000000a4: 	subsd	%xmm0, %xmm2
    000000a8: 	movapd	%xmm1, %xmm0
    000000ac: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b4: 	comisd	DATAat0x12838(%rip), %xmm0
    000000bc: 	jbe	.Ltmp377 # Offset: 188
    000000be: 	divsd	%xmm1, %xmm2
.Ltmp377:
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ca: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d2: 	comisd	%xmm2, %xmm3
    000000d6: 	jbe	.Ltmp378 # Offset: 214
    000000d8: 	addl	$0x1, %ebp
    000000db: 	cmpl	%ebp, iterations(%rip)
    000000e1: 	jg	.Ltmp379 # Offset: 225
.Ltmp374:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	0x8(%rsp), %rdi
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	subq	start_time(%rip), %rax
    00000103: 	cvtsi2sd	%rax, %xmm0
    00000108: 	divsd	DATAat0x12828(%rip), %xmm0
    00000110: 	addq	$0x18, %rsp
    00000114: 	popq	%rbx
    00000115: 	popq	%rbp
    00000116: 	popq	%r12
    00000118: 	popq	%r13
    0000011a: 	popq	%r14
    0000011c: 	popq	%r15
    0000011e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp378:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	xorl	%eax, %eax
    00000130: 	movq	%r15, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %ebp
    0000013b: 	callq	__printf_chk@PLT # Offset: 315
    00000140: 	cmpl	%ebp, iterations(%rip)
    00000146: 	jle	.Ltmp374 # Offset: 326
    00000148: 	movq	%r12, %r14
    0000014b: 	pxor	%xmm1, %xmm1
    0000014f: 	testl	%r13d, %r13d
    00000152: 	jg	.Ltmp376 # Offset: 338
.Ltmp375:
    00000158: 	movsd	init_value(%rip), %xmm0
    00000160: 	callq	j0@PLT # Offset: 352
    00000165: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000016d: 	pxor	%xmm2, %xmm2
    00000171: 	subsd	%xmm0, %xmm2
    00000175: 	jmp	.Ltmp377 # Offset: 373
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId10mathlib_j0IdEEvPT_iPKc"

Binary Function "_Z13test_constantId10mathlib_j1IdEEvPT_iPKc" after disassembly {
  Number      : 62
  State       : disassembled
  Address     : 0x9030
  Size        : 0x17a
  MaxSize     : 0x180
  Offset      : 0x9030
  Section     : .text
  Orc Section : .local.text._Z13test_constantId10mathlib_j1IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB061:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp380 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp385:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp381 # Offset: 90
.Ltmp382:
    00000060: 	movsd	(%r14), %xmm0
    00000065: 	movsd	%xmm1, (%rsp)
    0000006a: 	addq	$0x8, %r14
    0000006e: 	callq	j1@PLT # Offset: 110
    00000073: 	movsd	(%rsp), %xmm1
    00000078: 	addsd	%xmm0, %xmm1
    0000007c: 	cmpq	%rbx, %r14
    0000007f: 	jne	.Ltmp382 # Offset: 127
    00000081: 	movsd	init_value(%rip), %xmm0
    00000089: 	movsd	%xmm1, (%rsp)
    0000008e: 	callq	j1@PLT # Offset: 142
    00000093: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	movapd	%xmm1, %xmm2
    000000a4: 	subsd	%xmm0, %xmm2
    000000a8: 	movapd	%xmm1, %xmm0
    000000ac: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b4: 	comisd	DATAat0x12838(%rip), %xmm0
    000000bc: 	jbe	.Ltmp383 # Offset: 188
    000000be: 	divsd	%xmm1, %xmm2
.Ltmp383:
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ca: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d2: 	comisd	%xmm2, %xmm3
    000000d6: 	jbe	.Ltmp384 # Offset: 214
    000000d8: 	addl	$0x1, %ebp
    000000db: 	cmpl	%ebp, iterations(%rip)
    000000e1: 	jg	.Ltmp385 # Offset: 225
.Ltmp380:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	0x8(%rsp), %rdi
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	subq	start_time(%rip), %rax
    00000103: 	cvtsi2sd	%rax, %xmm0
    00000108: 	divsd	DATAat0x12828(%rip), %xmm0
    00000110: 	addq	$0x18, %rsp
    00000114: 	popq	%rbx
    00000115: 	popq	%rbp
    00000116: 	popq	%r12
    00000118: 	popq	%r13
    0000011a: 	popq	%r14
    0000011c: 	popq	%r15
    0000011e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp384:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	xorl	%eax, %eax
    00000130: 	movq	%r15, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %ebp
    0000013b: 	callq	__printf_chk@PLT # Offset: 315
    00000140: 	cmpl	%ebp, iterations(%rip)
    00000146: 	jle	.Ltmp380 # Offset: 326
    00000148: 	movq	%r12, %r14
    0000014b: 	pxor	%xmm1, %xmm1
    0000014f: 	testl	%r13d, %r13d
    00000152: 	jg	.Ltmp382 # Offset: 338
.Ltmp381:
    00000158: 	movsd	init_value(%rip), %xmm0
    00000160: 	callq	j1@PLT # Offset: 352
    00000165: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000016d: 	pxor	%xmm2, %xmm2
    00000171: 	subsd	%xmm0, %xmm2
    00000175: 	jmp	.Ltmp383 # Offset: 373
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId10mathlib_j1IdEEvPT_iPKc"

Binary Function "_Z13test_constantId10mathlib_y0IdEEvPT_iPKc" after disassembly {
  Number      : 63
  State       : disassembled
  Address     : 0x91b0
  Size        : 0x17a
  MaxSize     : 0x180
  Offset      : 0x91b0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId10mathlib_y0IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB062:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp386 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp391:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp387 # Offset: 90
.Ltmp388:
    00000060: 	movsd	(%r14), %xmm0
    00000065: 	movsd	%xmm1, (%rsp)
    0000006a: 	addq	$0x8, %r14
    0000006e: 	callq	y0@PLT # Offset: 110
    00000073: 	movsd	(%rsp), %xmm1
    00000078: 	addsd	%xmm0, %xmm1
    0000007c: 	cmpq	%rbx, %r14
    0000007f: 	jne	.Ltmp388 # Offset: 127
    00000081: 	movsd	init_value(%rip), %xmm0
    00000089: 	movsd	%xmm1, (%rsp)
    0000008e: 	callq	y0@PLT # Offset: 142
    00000093: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	movapd	%xmm1, %xmm2
    000000a4: 	subsd	%xmm0, %xmm2
    000000a8: 	movapd	%xmm1, %xmm0
    000000ac: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b4: 	comisd	DATAat0x12838(%rip), %xmm0
    000000bc: 	jbe	.Ltmp389 # Offset: 188
    000000be: 	divsd	%xmm1, %xmm2
.Ltmp389:
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ca: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d2: 	comisd	%xmm2, %xmm3
    000000d6: 	jbe	.Ltmp390 # Offset: 214
    000000d8: 	addl	$0x1, %ebp
    000000db: 	cmpl	%ebp, iterations(%rip)
    000000e1: 	jg	.Ltmp391 # Offset: 225
.Ltmp386:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	0x8(%rsp), %rdi
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	subq	start_time(%rip), %rax
    00000103: 	cvtsi2sd	%rax, %xmm0
    00000108: 	divsd	DATAat0x12828(%rip), %xmm0
    00000110: 	addq	$0x18, %rsp
    00000114: 	popq	%rbx
    00000115: 	popq	%rbp
    00000116: 	popq	%r12
    00000118: 	popq	%r13
    0000011a: 	popq	%r14
    0000011c: 	popq	%r15
    0000011e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp390:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	xorl	%eax, %eax
    00000130: 	movq	%r15, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %ebp
    0000013b: 	callq	__printf_chk@PLT # Offset: 315
    00000140: 	cmpl	%ebp, iterations(%rip)
    00000146: 	jle	.Ltmp386 # Offset: 326
    00000148: 	movq	%r12, %r14
    0000014b: 	pxor	%xmm1, %xmm1
    0000014f: 	testl	%r13d, %r13d
    00000152: 	jg	.Ltmp388 # Offset: 338
.Ltmp387:
    00000158: 	movsd	init_value(%rip), %xmm0
    00000160: 	callq	y0@PLT # Offset: 352
    00000165: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000016d: 	pxor	%xmm2, %xmm2
    00000171: 	subsd	%xmm0, %xmm2
    00000175: 	jmp	.Ltmp389 # Offset: 373
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId10mathlib_y0IdEEvPT_iPKc"

Binary Function "_Z13test_constantId10mathlib_y1IdEEvPT_iPKc" after disassembly {
  Number      : 64
  State       : disassembled
  Address     : 0x9330
  Size        : 0x17a
  MaxSize     : 0x180
  Offset      : 0x9330
  Section     : .text
  Orc Section : .local.text._Z13test_constantId10mathlib_y1IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB063:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp392 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp397:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp393 # Offset: 90
.Ltmp394:
    00000060: 	movsd	(%r14), %xmm0
    00000065: 	movsd	%xmm1, (%rsp)
    0000006a: 	addq	$0x8, %r14
    0000006e: 	callq	y1@PLT # Offset: 110
    00000073: 	movsd	(%rsp), %xmm1
    00000078: 	addsd	%xmm0, %xmm1
    0000007c: 	cmpq	%rbx, %r14
    0000007f: 	jne	.Ltmp394 # Offset: 127
    00000081: 	movsd	init_value(%rip), %xmm0
    00000089: 	movsd	%xmm1, (%rsp)
    0000008e: 	callq	y1@PLT # Offset: 142
    00000093: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	movapd	%xmm1, %xmm2
    000000a4: 	subsd	%xmm0, %xmm2
    000000a8: 	movapd	%xmm1, %xmm0
    000000ac: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b4: 	comisd	DATAat0x12838(%rip), %xmm0
    000000bc: 	jbe	.Ltmp395 # Offset: 188
    000000be: 	divsd	%xmm1, %xmm2
.Ltmp395:
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ca: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d2: 	comisd	%xmm2, %xmm3
    000000d6: 	jbe	.Ltmp396 # Offset: 214
    000000d8: 	addl	$0x1, %ebp
    000000db: 	cmpl	%ebp, iterations(%rip)
    000000e1: 	jg	.Ltmp397 # Offset: 225
.Ltmp392:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	0x8(%rsp), %rdi
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	subq	start_time(%rip), %rax
    00000103: 	cvtsi2sd	%rax, %xmm0
    00000108: 	divsd	DATAat0x12828(%rip), %xmm0
    00000110: 	addq	$0x18, %rsp
    00000114: 	popq	%rbx
    00000115: 	popq	%rbp
    00000116: 	popq	%r12
    00000118: 	popq	%r13
    0000011a: 	popq	%r14
    0000011c: 	popq	%r15
    0000011e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp396:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	xorl	%eax, %eax
    00000130: 	movq	%r15, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %ebp
    0000013b: 	callq	__printf_chk@PLT # Offset: 315
    00000140: 	cmpl	%ebp, iterations(%rip)
    00000146: 	jle	.Ltmp392 # Offset: 326
    00000148: 	movq	%r12, %r14
    0000014b: 	pxor	%xmm1, %xmm1
    0000014f: 	testl	%r13d, %r13d
    00000152: 	jg	.Ltmp394 # Offset: 338
.Ltmp393:
    00000158: 	movsd	init_value(%rip), %xmm0
    00000160: 	callq	y1@PLT # Offset: 352
    00000165: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000016d: 	pxor	%xmm2, %xmm2
    00000171: 	subsd	%xmm0, %xmm2
    00000175: 	jmp	.Ltmp395 # Offset: 373
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId10mathlib_y1IdEEvPT_iPKc"

Binary Function "_Z14test_variable1Idi10mathlib_jnIdiEEvPT_iT0_PKc" after disassembly {
  Number      : 65
  State       : disassembled
  Address     : 0x94b0
  Size        : 0x18a
  MaxSize     : 0x190
  Offset      : 0x94b0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Idi10mathlib_jnIdiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB064:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x18, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	callq	clock@PLT # Offset: 31
    00000024: 	movq	%rax, start_time(%rip)
    0000002b: 	movl	iterations(%rip), %eax
    00000031: 	testl	%eax, %eax
    00000033: 	jle	.Ltmp398 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%r13,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp403:
    00000048: 	movq	%r13, %r15
    0000004b: 	pxor	%xmm1, %xmm1
    0000004f: 	testl	%r14d, %r14d
    00000052: 	jle	.Ltmp399 # Offset: 82
    00000058: 	nopl	(%rax,%rax) # Size: 8
.Ltmp400:
    00000060: 	movsd	(%r15), %xmm0
    00000065: 	movl	%ebx, %edi
    00000067: 	movsd	%xmm1, (%rsp)
    0000006c: 	addq	$0x8, %r15
    00000070: 	callq	jn@PLT # Offset: 112
    00000075: 	movsd	(%rsp), %xmm1
    0000007a: 	addsd	%xmm0, %xmm1
    0000007e: 	cmpq	%rbp, %r15
    00000081: 	jne	.Ltmp400 # Offset: 129
    00000083: 	movsd	init_value(%rip), %xmm0
    0000008b: 	movl	%ebx, %edi
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	callq	jn@PLT # Offset: 146
    00000097: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009f: 	movsd	(%rsp), %xmm1
    000000a4: 	movapd	%xmm1, %xmm2
    000000a8: 	subsd	%xmm0, %xmm2
    000000ac: 	movapd	%xmm1, %xmm0
    000000b0: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b8: 	comisd	DATAat0x12838(%rip), %xmm0
    000000c0: 	jbe	.Ltmp401 # Offset: 192
    000000c2: 	divsd	%xmm1, %xmm2
.Ltmp401:
    000000c6: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ce: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d6: 	comisd	%xmm2, %xmm3
    000000da: 	jbe	.Ltmp402 # Offset: 218
    000000dc: 	addl	$0x1, %r12d
    000000e0: 	cmpl	%r12d, iterations(%rip)
    000000e7: 	jg	.Ltmp403 # Offset: 231
.Ltmp398:
    000000ed: 	callq	clock@PLT # Offset: 237
    000000f2: 	pxor	%xmm0, %xmm0
    000000f6: 	movq	0x8(%rsp), %rdi
    000000fb: 	movq	%rax, end_time(%rip)
    00000102: 	subq	start_time(%rip), %rax
    00000109: 	cvtsi2sd	%rax, %xmm0
    0000010e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000116: 	addq	$0x18, %rsp
    0000011a: 	popq	%rbx
    0000011b: 	popq	%rbp
    0000011c: 	popq	%r12
    0000011e: 	popq	%r13
    00000120: 	popq	%r14
    00000122: 	popq	%r15
    00000124: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 292
    00000129: 	nopl	(%rax) # Size: 7
.Ltmp402:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	xorl	%eax, %eax
    00000138: 	movl	$0x1, %edi
    0000013d: 	addl	$0x1, %r12d
    00000141: 	leaq	DATAat0x12802(%rip), %rsi
    00000148: 	callq	__printf_chk@PLT # Offset: 328
    0000014d: 	cmpl	%r12d, iterations(%rip)
    00000154: 	jle	.Ltmp398 # Offset: 340
    00000156: 	movq	%r13, %r15
    00000159: 	pxor	%xmm1, %xmm1
    0000015d: 	testl	%r14d, %r14d
    00000160: 	jg	.Ltmp400 # Offset: 352
.Ltmp399:
    00000166: 	movsd	init_value(%rip), %xmm0
    0000016e: 	movl	%ebx, %edi
    00000170: 	callq	jn@PLT # Offset: 368
    00000175: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000017d: 	pxor	%xmm2, %xmm2
    00000181: 	subsd	%xmm0, %xmm2
    00000185: 	jmp	.Ltmp401 # Offset: 389
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Idi10mathlib_jnIdiEEvPT_iT0_PKc"

Binary Function "_Z14test_variable1Idi10mathlib_ynIdiEEvPT_iT0_PKc" after disassembly {
  Number      : 66
  State       : disassembled
  Address     : 0x9640
  Size        : 0x18a
  MaxSize     : 0x190
  Offset      : 0x9640
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Idi10mathlib_ynIdiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB065:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x18, %rsp
    0000001a: 	movq	%rcx, 0x8(%rsp)
    0000001f: 	callq	clock@PLT # Offset: 31
    00000024: 	movq	%rax, start_time(%rip)
    0000002b: 	movl	iterations(%rip), %eax
    00000031: 	testl	%eax, %eax
    00000033: 	jle	.Ltmp404 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%r13,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp409:
    00000048: 	movq	%r13, %r15
    0000004b: 	pxor	%xmm1, %xmm1
    0000004f: 	testl	%r14d, %r14d
    00000052: 	jle	.Ltmp405 # Offset: 82
    00000058: 	nopl	(%rax,%rax) # Size: 8
.Ltmp406:
    00000060: 	movsd	(%r15), %xmm0
    00000065: 	movl	%ebx, %edi
    00000067: 	movsd	%xmm1, (%rsp)
    0000006c: 	addq	$0x8, %r15
    00000070: 	callq	yn@PLT # Offset: 112
    00000075: 	movsd	(%rsp), %xmm1
    0000007a: 	addsd	%xmm0, %xmm1
    0000007e: 	cmpq	%rbp, %r15
    00000081: 	jne	.Ltmp406 # Offset: 129
    00000083: 	movsd	init_value(%rip), %xmm0
    0000008b: 	movl	%ebx, %edi
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	callq	yn@PLT # Offset: 146
    00000097: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009f: 	movsd	(%rsp), %xmm1
    000000a4: 	movapd	%xmm1, %xmm2
    000000a8: 	subsd	%xmm0, %xmm2
    000000ac: 	movapd	%xmm1, %xmm0
    000000b0: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b8: 	comisd	DATAat0x12838(%rip), %xmm0
    000000c0: 	jbe	.Ltmp407 # Offset: 192
    000000c2: 	divsd	%xmm1, %xmm2
.Ltmp407:
    000000c6: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ce: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d6: 	comisd	%xmm2, %xmm3
    000000da: 	jbe	.Ltmp408 # Offset: 218
    000000dc: 	addl	$0x1, %r12d
    000000e0: 	cmpl	%r12d, iterations(%rip)
    000000e7: 	jg	.Ltmp409 # Offset: 231
.Ltmp404:
    000000ed: 	callq	clock@PLT # Offset: 237
    000000f2: 	pxor	%xmm0, %xmm0
    000000f6: 	movq	0x8(%rsp), %rdi
    000000fb: 	movq	%rax, end_time(%rip)
    00000102: 	subq	start_time(%rip), %rax
    00000109: 	cvtsi2sd	%rax, %xmm0
    0000010e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000116: 	addq	$0x18, %rsp
    0000011a: 	popq	%rbx
    0000011b: 	popq	%rbp
    0000011c: 	popq	%r12
    0000011e: 	popq	%r13
    00000120: 	popq	%r14
    00000122: 	popq	%r15
    00000124: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 292
    00000129: 	nopl	(%rax) # Size: 7
.Ltmp408:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	xorl	%eax, %eax
    00000138: 	movl	$0x1, %edi
    0000013d: 	addl	$0x1, %r12d
    00000141: 	leaq	DATAat0x12802(%rip), %rsi
    00000148: 	callq	__printf_chk@PLT # Offset: 328
    0000014d: 	cmpl	%r12d, iterations(%rip)
    00000154: 	jle	.Ltmp404 # Offset: 340
    00000156: 	movq	%r13, %r15
    00000159: 	pxor	%xmm1, %xmm1
    0000015d: 	testl	%r14d, %r14d
    00000160: 	jg	.Ltmp406 # Offset: 352
.Ltmp405:
    00000166: 	movsd	init_value(%rip), %xmm0
    0000016e: 	movl	%ebx, %edi
    00000170: 	callq	yn@PLT # Offset: 368
    00000175: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000017d: 	pxor	%xmm2, %xmm2
    00000181: 	subsd	%xmm0, %xmm2
    00000185: 	jmp	.Ltmp407 # Offset: 389
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Idi10mathlib_ynIdiEEvPT_iT0_PKc"

Binary Function "_Z13test_constantId13mathlib_expm1IdEEvPT_iPKc" after disassembly {
  Number      : 67
  State       : disassembled
  Address     : 0x97d0
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x97d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_expm1IdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB066:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp410 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp415:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp411 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp412:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	expm1@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp412 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	expm1@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp413 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp413:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp414 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp415 # Offset: 243
.Ltmp410:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp414:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp415 # Offset: 342
    0000015c: 	jmp	.Ltmp410 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp411:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	expm1@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp413 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_expm1IdEEvPT_iPKc"

Binary Function "_Z13test_constantId13mathlib_log1pIdEEvPT_iPKc" after disassembly {
  Number      : 68
  State       : disassembled
  Address     : 0x9950
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x9950
  Section     : .text
  Orc Section : .local.text._Z13test_constantId13mathlib_log1pIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB067:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp416 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp421:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp417 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp418:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	log1p@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp418 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	log1p@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp419 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp419:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp420 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp421 # Offset: 243
.Ltmp416:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp420:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp421 # Offset: 342
    0000015c: 	jmp	.Ltmp416 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp417:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	log1p@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp419 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId13mathlib_log1pIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_logbIdEEvPT_iPKc" after disassembly {
  Number      : 69
  State       : disassembled
  Address     : 0x9ad0
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x9ad0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_logbIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB068:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp422 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp427:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp423 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp424:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	logb@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp424 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	logb@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp425 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp425:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp426 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp427 # Offset: 243
.Ltmp422:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp426:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp427 # Offset: 342
    0000015c: 	jmp	.Ltmp422 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp423:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	logb@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp425 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_logbIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_cbrtIdEEvPT_iPKc" after disassembly {
  Number      : 70
  State       : disassembled
  Address     : 0x9c50
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x9c50
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_cbrtIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB069:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp428 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp433:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	cbrt@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp429 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp430:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	cbrt@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp430 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp431 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp431:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp432 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp433 # Offset: 233
.Ltmp428:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp432:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp428 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp433 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp429:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp431 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_cbrtIdEEvPT_iPKc"

Binary Function "_Z13test_constantId11mathlib_erfIdEEvPT_iPKc" after disassembly {
  Number      : 71
  State       : disassembled
  Address     : 0x9dd0
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0x9dd0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId11mathlib_erfIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB070:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp434 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp439:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	erf@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp435 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp436:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	erf@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp436 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp437 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp437:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp438 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp439 # Offset: 233
.Ltmp434:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp438:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp434 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp439 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp435:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp437 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId11mathlib_erfIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_erfcIdEEvPT_iPKc" after disassembly {
  Number      : 72
  State       : disassembled
  Address     : 0x9f50
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0x9f50
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_erfcIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB071:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp440 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp445:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp441 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp442:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	erfc@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp442 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	erfc@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp443 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp443:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp444 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp445 # Offset: 243
.Ltmp440:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp444:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp445 # Offset: 342
    0000015c: 	jmp	.Ltmp440 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp441:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	erfc@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp443 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_erfcIdEEvPT_iPKc"

Binary Function "_Z13test_constantId14mathlib_lgammaIdEEvPT_iPKc" after disassembly {
  Number      : 73
  State       : disassembled
  Address     : 0xa0d0
  Size        : 0x17a
  MaxSize     : 0x180
  Offset      : 0xa0d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId14mathlib_lgammaIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB072:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp446 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp451:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp447 # Offset: 90
.Ltmp448:
    00000060: 	movsd	(%r14), %xmm0
    00000065: 	movsd	%xmm1, (%rsp)
    0000006a: 	addq	$0x8, %r14
    0000006e: 	callq	lgamma@PLT # Offset: 110
    00000073: 	movsd	(%rsp), %xmm1
    00000078: 	addsd	%xmm0, %xmm1
    0000007c: 	cmpq	%rbx, %r14
    0000007f: 	jne	.Ltmp448 # Offset: 127
    00000081: 	movsd	init_value(%rip), %xmm0
    00000089: 	movsd	%xmm1, (%rsp)
    0000008e: 	callq	lgamma@PLT # Offset: 142
    00000093: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	movapd	%xmm1, %xmm2
    000000a4: 	subsd	%xmm0, %xmm2
    000000a8: 	movapd	%xmm1, %xmm0
    000000ac: 	andpd	DATAat0x12890(%rip), %xmm0
    000000b4: 	comisd	DATAat0x12838(%rip), %xmm0
    000000bc: 	jbe	.Ltmp449 # Offset: 188
    000000be: 	divsd	%xmm1, %xmm2
.Ltmp449:
    000000c2: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ca: 	movsd	DATAat0x12840(%rip), %xmm3
    000000d2: 	comisd	%xmm2, %xmm3
    000000d6: 	jbe	.Ltmp450 # Offset: 214
    000000d8: 	addl	$0x1, %ebp
    000000db: 	cmpl	%ebp, iterations(%rip)
    000000e1: 	jg	.Ltmp451 # Offset: 225
.Ltmp446:
    000000e7: 	callq	clock@PLT # Offset: 231
    000000ec: 	pxor	%xmm0, %xmm0
    000000f0: 	movq	0x8(%rsp), %rdi
    000000f5: 	movq	%rax, end_time(%rip)
    000000fc: 	subq	start_time(%rip), %rax
    00000103: 	cvtsi2sd	%rax, %xmm0
    00000108: 	divsd	DATAat0x12828(%rip), %xmm0
    00000110: 	addq	$0x18, %rsp
    00000114: 	popq	%rbx
    00000115: 	popq	%rbp
    00000116: 	popq	%r12
    00000118: 	popq	%r13
    0000011a: 	popq	%r14
    0000011c: 	popq	%r15
    0000011e: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 286
    00000123: 	nopl	(%rax,%rax) # Size: 5
.Ltmp450:
    00000128: 	movl	current_test(%rip), %edx
    0000012e: 	xorl	%eax, %eax
    00000130: 	movq	%r15, %rsi
    00000133: 	movl	$0x1, %edi
    00000138: 	addl	$0x1, %ebp
    0000013b: 	callq	__printf_chk@PLT # Offset: 315
    00000140: 	cmpl	%ebp, iterations(%rip)
    00000146: 	jle	.Ltmp446 # Offset: 326
    00000148: 	movq	%r12, %r14
    0000014b: 	pxor	%xmm1, %xmm1
    0000014f: 	testl	%r13d, %r13d
    00000152: 	jg	.Ltmp448 # Offset: 338
.Ltmp447:
    00000158: 	movsd	init_value(%rip), %xmm0
    00000160: 	callq	lgamma@PLT # Offset: 352
    00000165: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000016d: 	pxor	%xmm2, %xmm2
    00000171: 	subsd	%xmm0, %xmm2
    00000175: 	jmp	.Ltmp449 # Offset: 373
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId14mathlib_lgammaIdEEvPT_iPKc"

Binary Function "_Z13test_constantId14mathlib_tgammaIdEEvPT_iPKc" after disassembly {
  Number      : 74
  State       : disassembled
  Address     : 0xa250
  Size        : 0x17e
  MaxSize     : 0x180
  Offset      : 0xa250
  Section     : .text
  Orc Section : .local.text._Z13test_constantId14mathlib_tgammaIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB073:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp452 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x8(%r12,%rax,8), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp457:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp453 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp454:
    00000070: 	movsd	(%r14), %xmm0
    00000075: 	movsd	%xmm1, 0x8(%rsp)
    0000007b: 	addq	$0x8, %r14
    0000007f: 	callq	tgamma@PLT # Offset: 127
    00000084: 	movsd	0x8(%rsp), %xmm1
    0000008a: 	addsd	%xmm0, %xmm1
    0000008e: 	cmpq	%rbx, %r14
    00000091: 	jne	.Ltmp454 # Offset: 145
    00000093: 	movsd	0x10(%rsp), %xmm0
    00000099: 	movsd	%xmm1, 0x8(%rsp)
    0000009f: 	callq	tgamma@PLT # Offset: 159
    000000a4: 	mulsd	DATAat0x12848(%rip), %xmm0
    000000ac: 	movsd	0x8(%rsp), %xmm1
    000000b2: 	movapd	%xmm1, %xmm2
    000000b6: 	subsd	%xmm0, %xmm2
    000000ba: 	movapd	%xmm1, %xmm0
    000000be: 	andpd	DATAat0x12890(%rip), %xmm0
    000000c6: 	comisd	DATAat0x12838(%rip), %xmm0
    000000ce: 	jbe	.Ltmp455 # Offset: 206
    000000d0: 	divsd	%xmm1, %xmm2
.Ltmp455:
    000000d4: 	andpd	DATAat0x12890(%rip), %xmm2
    000000dc: 	movsd	DATAat0x12840(%rip), %xmm3
    000000e4: 	comisd	%xmm2, %xmm3
    000000e8: 	jbe	.Ltmp456 # Offset: 232
    000000ea: 	addl	$0x1, %ebp
    000000ed: 	cmpl	%ebp, iterations(%rip)
    000000f3: 	jg	.Ltmp457 # Offset: 243
.Ltmp452:
    000000f9: 	callq	clock@PLT # Offset: 249
    000000fe: 	pxor	%xmm0, %xmm0
    00000102: 	movq	0x18(%rsp), %rdi
    00000107: 	movq	%rax, end_time(%rip)
    0000010e: 	subq	start_time(%rip), %rax
    00000115: 	cvtsi2sd	%rax, %xmm0
    0000011a: 	divsd	DATAat0x12828(%rip), %xmm0
    00000122: 	addq	$0x28, %rsp
    00000126: 	popq	%rbx
    00000127: 	popq	%rbp
    00000128: 	popq	%r12
    0000012a: 	popq	%r13
    0000012c: 	popq	%r14
    0000012e: 	popq	%r15
    00000130: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 304
    00000135: 	nopl	(%rax) # Size: 3
.Ltmp456:
    00000138: 	movl	current_test(%rip), %edx
    0000013e: 	xorl	%eax, %eax
    00000140: 	movq	%r15, %rsi
    00000143: 	movl	$0x1, %edi
    00000148: 	addl	$0x1, %ebp
    0000014b: 	callq	__printf_chk@PLT # Offset: 331
    00000150: 	cmpl	%ebp, iterations(%rip)
    00000156: 	jg	.Ltmp457 # Offset: 342
    0000015c: 	jmp	.Ltmp452 # Offset: 348
    0000015e: 	nop # Size: 2
.Ltmp453:
    00000160: 	movapd	%xmm4, %xmm0
    00000164: 	callq	tgamma@PLT # Offset: 356
    00000169: 	mulsd	DATAat0x12848(%rip), %xmm0
    00000171: 	pxor	%xmm2, %xmm2
    00000175: 	subsd	%xmm0, %xmm2
    00000179: 	jmp	.Ltmp455 # Offset: 377
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId14mathlib_tgammaIdEEvPT_iPKc"

Binary Function "_Z13test_constantId17mathlib_nearbyintIdEEvPT_iPKc" after disassembly {
  Number      : 75
  State       : disassembled
  Address     : 0xa3d0
  Size        : 0x17f
  MaxSize     : 0x180
  Offset      : 0xa3d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantId17mathlib_nearbyintIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB074:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp458 # Offset: 51
    00000039: 	movsd	init_value(%rip), %xmm6
    00000041: 	leal	-0x1(%r14), %eax
    00000045: 	xorl	%ebp, %ebp
    00000047: 	leaq	0x8(%r13,%rax,8), %rbx
    0000004c: 	movsd	%xmm6, 0x10(%rsp)
    00000052: 	nopw	(%rax,%rax) # Size: 6
.Ltmp463:
    00000058: 	movsd	0x10(%rsp), %xmm0
    0000005e: 	movq	%r13, %r15
    00000061: 	callq	nearbyint@PLT # Offset: 97
    00000066: 	mulsd	DATAat0x12848(%rip), %xmm0
    0000006e: 	pxor	%xmm1, %xmm1
    00000072: 	movsd	%xmm0, 0x8(%rsp)
    00000078: 	testl	%r14d, %r14d
    0000007b: 	jle	.Ltmp459 # Offset: 123
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp460:
    00000088: 	movsd	(%r15), %xmm0
    0000008d: 	movsd	%xmm1, (%rsp)
    00000092: 	addq	$0x8, %r15
    00000096: 	callq	nearbyint@PLT # Offset: 150
    0000009b: 	movsd	(%rsp), %xmm1
    000000a0: 	addsd	%xmm0, %xmm1
    000000a4: 	cmpq	%r15, %rbx
    000000a7: 	jne	.Ltmp460 # Offset: 167
    000000a9: 	movapd	%xmm1, %xmm2
    000000ad: 	andpd	DATAat0x12890(%rip), %xmm2
    000000b5: 	movapd	%xmm1, %xmm0
    000000b9: 	comisd	DATAat0x12838(%rip), %xmm2
    000000c1: 	subsd	0x8(%rsp), %xmm0
    000000c7: 	jbe	.Ltmp461 # Offset: 199
    000000c9: 	divsd	%xmm1, %xmm0
.Ltmp461:
    000000cd: 	andpd	DATAat0x12890(%rip), %xmm0
    000000d5: 	movsd	DATAat0x12840(%rip), %xmm3
    000000dd: 	comisd	%xmm0, %xmm3
    000000e1: 	jbe	.Ltmp462 # Offset: 225
    000000e3: 	addl	$0x1, %ebp
    000000e6: 	cmpl	%r12d, %ebp
    000000e9: 	jl	.Ltmp463 # Offset: 233
.Ltmp458:
    000000ef: 	callq	clock@PLT # Offset: 239
    000000f4: 	pxor	%xmm0, %xmm0
    000000f8: 	movq	0x18(%rsp), %rdi
    000000fd: 	movq	%rax, end_time(%rip)
    00000104: 	subq	start_time(%rip), %rax
    0000010b: 	cvtsi2sd	%rax, %xmm0
    00000110: 	divsd	DATAat0x12828(%rip), %xmm0
    00000118: 	addq	$0x28, %rsp
    0000011c: 	popq	%rbx
    0000011d: 	popq	%rbp
    0000011e: 	popq	%r12
    00000120: 	popq	%r13
    00000122: 	popq	%r14
    00000124: 	popq	%r15
    00000126: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 294
    0000012b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp462:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	movl	$0x1, %edi
    0000013b: 	xorl	%eax, %eax
    0000013d: 	addl	$0x1, %ebp
    00000140: 	leaq	DATAat0x12802(%rip), %rsi
    00000147: 	callq	__printf_chk@PLT # Offset: 327
    0000014c: 	movl	iterations(%rip), %r12d
    00000153: 	cmpl	%r12d, %ebp
    00000156: 	jge	.Ltmp458 # Offset: 342
    00000158: 	movsd	init_value(%rip), %xmm5
    00000160: 	movsd	%xmm5, 0x10(%rsp)
    00000166: 	jmp	.Ltmp463 # Offset: 358
    0000016b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp459:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	subsd	0x8(%rsp), %xmm0
    0000017a: 	jmp	.Ltmp461 # Offset: 378
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId17mathlib_nearbyintIdEEvPT_iPKc"

Binary Function "_Z13test_constantId12mathlib_rintIdEEvPT_iPKc" after disassembly {
  Number      : 76
  State       : disassembled
  Address     : 0xa550
  Size        : 0x1ee
  MaxSize     : 0x1f0
  Offset      : 0xa550
  Section     : .text
  Orc Section : .local.text._Z13test_constantId12mathlib_rintIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB075:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %edx
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%edx, %edx
    0000002f: 	jle	.Ltmp464 # Offset: 47
    00000035: 	movq	DATAat0x12890(%rip), %xmm7
    0000003d: 	leal	-0x1(%r14), %eax
    00000041: 	movsd	DATAat0x12850(%rip), %xmm3
    00000049: 	xorl	%r12d, %r12d
    0000004c: 	movsd	DATAat0x12840(%rip), %xmm10
    00000055: 	leaq	0x8(%r13,%rax,8), %rbx
    0000005a: 	movsd	init_value(%rip), %xmm11
    00000063: 	pxor	%xmm8, %xmm8
    00000068: 	movsd	DATAat0x12848(%rip), %xmm9
    00000071: 	movapd	%xmm7, %xmm4
    00000075: 	leaq	DATAat0x12802(%rip), %r15
    0000007c: 	nopl	(%rax) # Size: 4
.Ltmp471:
    00000080: 	movapd	%xmm11, %xmm1
    00000085: 	movapd	%xmm11, %xmm6
    0000008a: 	andpd	%xmm4, %xmm1
    0000008e: 	ucomisd	%xmm1, %xmm3
    00000092: 	jbe	.Ltmp465 # Offset: 146
    00000094: 	addsd	%xmm3, %xmm1
    00000098: 	movapd	%xmm4, %xmm6
    0000009c: 	andnpd	%xmm11, %xmm6
    000000a1: 	subsd	%xmm3, %xmm1
    000000a5: 	orpd	%xmm1, %xmm6
.Ltmp465:
    000000a9: 	mulsd	%xmm9, %xmm6
    000000ae: 	movq	%r13, %rax
    000000b1: 	movapd	%xmm8, %xmm2
    000000b6: 	testl	%r14d, %r14d
    000000b9: 	jle	.Ltmp466 # Offset: 185
    000000bf: 	nop # Size: 1
.Ltmp468:
    000000c0: 	movsd	(%rax), %xmm1
    000000c4: 	movapd	%xmm1, %xmm0
    000000c8: 	andpd	%xmm4, %xmm0
    000000cc: 	ucomisd	%xmm0, %xmm3
    000000d0: 	jbe	.Ltmp467 # Offset: 208
    000000d2: 	addsd	%xmm3, %xmm0
    000000d6: 	movapd	%xmm4, %xmm5
    000000da: 	andnpd	%xmm1, %xmm5
    000000de: 	subsd	%xmm3, %xmm0
    000000e2: 	movapd	%xmm0, %xmm1
    000000e6: 	orpd	%xmm5, %xmm1
.Ltmp467:
    000000ea: 	addq	$0x8, %rax
    000000ee: 	addsd	%xmm1, %xmm2
    000000f2: 	cmpq	%rax, %rbx
    000000f5: 	jne	.Ltmp468 # Offset: 245
    000000f7: 	movapd	%xmm2, %xmm1
    000000fb: 	movapd	%xmm2, %xmm0
    000000ff: 	andpd	%xmm7, %xmm1
    00000103: 	comisd	DATAat0x12838(%rip), %xmm1
    0000010b: 	subsd	%xmm6, %xmm0
    0000010f: 	jbe	.Ltmp469 # Offset: 271
    00000111: 	divsd	%xmm2, %xmm0
.Ltmp469:
    00000115: 	andpd	%xmm7, %xmm0
    00000119: 	comisd	%xmm0, %xmm10
    0000011e: 	jbe	.Ltmp470 # Offset: 286
    00000120: 	addl	$0x1, %r12d
    00000124: 	cmpl	%edx, %r12d
    00000127: 	jl	.Ltmp471 # Offset: 295
.Ltmp464:
    0000012d: 	callq	clock@PLT # Offset: 301
    00000132: 	pxor	%xmm0, %xmm0
    00000136: 	movq	%rbp, %rdi
    00000139: 	movq	%rax, end_time(%rip)
    00000140: 	subq	start_time(%rip), %rax
    00000147: 	cvtsi2sd	%rax, %xmm0
    0000014c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000154: 	addq	$0x8, %rsp
    00000158: 	popq	%rbx
    00000159: 	popq	%rbp
    0000015a: 	popq	%r12
    0000015c: 	popq	%r13
    0000015e: 	popq	%r14
    00000160: 	popq	%r15
    00000162: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp470:
    00000170: 	movl	current_test(%rip), %edx
    00000176: 	movq	%r15, %rsi
    00000179: 	movl	$0x1, %edi
    0000017e: 	xorl	%eax, %eax
    00000180: 	addl	$0x1, %r12d
    00000184: 	callq	__printf_chk@PLT # Offset: 388
    00000189: 	movl	iterations(%rip), %edx
    0000018f: 	cmpl	%edx, %r12d
    00000192: 	jge	.Ltmp464 # Offset: 402
    00000194: 	movq	DATAat0x12880(%rip), %rax
    0000019b: 	movq	DATAat0x12890(%rip), %xmm7
    000001a3: 	pxor	%xmm8, %xmm8
    000001a8: 	movsd	init_value(%rip), %xmm11
    000001b1: 	movq	%rax, %xmm4
    000001b6: 	movq	DATAat0x12848(%rip), %rax
    000001bd: 	movq	%rax, %xmm9
    000001c2: 	movq	DATAat0x12850(%rip), %rax
    000001c9: 	movq	%rax, %xmm3
    000001ce: 	movq	DATAat0x12840(%rip), %rax
    000001d5: 	movq	%rax, %xmm10
    000001da: 	jmp	.Ltmp471 # Offset: 474
    000001df: 	nop # Size: 1
.Ltmp466:
    000001e0: 	movapd	%xmm8, %xmm0
    000001e5: 	subsd	%xmm6, %xmm0
    000001e9: 	jmp	.Ltmp469 # Offset: 489
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantId12mathlib_rintIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdi13mathlib_ilogbIdEEvPT_iPKc" after disassembly {
  Number      : 77
  State       : disassembled
  Address     : 0xa740
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0xa740
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdi13mathlib_ilogbIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB076:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp472 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%rbx,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp476:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp473 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp474:
    00000058: 	movsd	(%r14), %xmm0
    0000005d: 	addq	$0x8, %r14
    00000061: 	callq	ilogb@PLT # Offset: 97
    00000066: 	addl	%eax, %ebx
    00000068: 	cmpq	%rbp, %r14
    0000006b: 	jne	.Ltmp474 # Offset: 107
.Ltmp473:
    0000006d: 	movsd	init_value(%rip), %xmm0
    00000075: 	callq	ilogb@PLT # Offset: 117
    0000007a: 	imull	$0x1f40, %eax, %eax
    00000080: 	cmpl	%ebx, %eax
    00000082: 	je	.Ltmp475 # Offset: 130
    00000084: 	movl	current_test(%rip), %edx
    0000008a: 	leaq	DATAat0x12802(%rip), %rsi
    00000091: 	movl	$0x1, %edi
    00000096: 	xorl	%eax, %eax
    00000098: 	addl	$0x1, %r12d
    0000009c: 	callq	__printf_chk@PLT # Offset: 156
    000000a1: 	movl	iterations(%rip), %r13d
    000000a8: 	cmpl	%r13d, %r12d
    000000ab: 	jl	.Ltmp476 # Offset: 171
.Ltmp472:
    000000ad: 	callq	clock@PLT # Offset: 173
    000000b2: 	pxor	%xmm0, %xmm0
    000000b6: 	movq	0x8(%rsp), %rdi
    000000bb: 	movq	%rax, end_time(%rip)
    000000c2: 	subq	start_time(%rip), %rax
    000000c9: 	cvtsi2sd	%rax, %xmm0
    000000ce: 	divsd	DATAat0x12828(%rip), %xmm0
    000000d6: 	addq	$0x18, %rsp
    000000da: 	popq	%rbx
    000000db: 	popq	%rbp
    000000dc: 	popq	%r12
    000000de: 	popq	%r13
    000000e0: 	popq	%r14
    000000e2: 	popq	%r15
    000000e4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 228
    000000e9: 	nopl	(%rax) # Size: 7
.Ltmp475:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp476 # Offset: 247
    000000fd: 	jmp	.Ltmp472 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdi13mathlib_ilogbIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdl13mathlib_lrintIdEEvPT_iPKc" after disassembly {
  Number      : 78
  State       : disassembled
  Address     : 0xa840
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0xa840
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdl13mathlib_lrintIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB077:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp477 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%rbx,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp481:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp478 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp479:
    00000058: 	movsd	(%r14), %xmm0
    0000005d: 	addq	$0x8, %r14
    00000061: 	callq	lrint@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp479 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp478:
    00000071: 	movsd	init_value(%rip), %xmm0
    00000079: 	callq	lrint@PLT # Offset: 121
    0000007e: 	imulq	$0x1f40, %rax, %rax
    00000085: 	cmpq	%rbx, %rax
    00000088: 	je	.Ltmp480 # Offset: 136
    0000008a: 	movl	current_test(%rip), %edx
    00000090: 	leaq	DATAat0x12802(%rip), %rsi
    00000097: 	movl	$0x1, %edi
    0000009c: 	xorl	%eax, %eax
    0000009e: 	addl	$0x1, %r12d
    000000a2: 	callq	__printf_chk@PLT # Offset: 162
    000000a7: 	movl	iterations(%rip), %r13d
    000000ae: 	cmpl	%r13d, %r12d
    000000b1: 	jl	.Ltmp481 # Offset: 177
.Ltmp477:
    000000b3: 	callq	clock@PLT # Offset: 179
    000000b8: 	pxor	%xmm0, %xmm0
    000000bc: 	movq	0x8(%rsp), %rdi
    000000c1: 	movq	%rax, end_time(%rip)
    000000c8: 	subq	start_time(%rip), %rax
    000000cf: 	cvtsi2sd	%rax, %xmm0
    000000d4: 	divsd	DATAat0x12828(%rip), %xmm0
    000000dc: 	addq	$0x18, %rsp
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp480:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp481 # Offset: 247
    000000fd: 	jmp	.Ltmp477 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdl13mathlib_lrintIdEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIdx14mathlib_llrintIdEEvPT_iPKc" after disassembly {
  Number      : 79
  State       : disassembled
  Address     : 0xa940
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0xa940
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIdx14mathlib_llrintIdEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB078:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp482 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x8(%rbx,%rax,8), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp486:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp483 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp484:
    00000058: 	movsd	(%r14), %xmm0
    0000005d: 	addq	$0x8, %r14
    00000061: 	callq	llrint@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp484 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp483:
    00000071: 	movsd	init_value(%rip), %xmm0
    00000079: 	callq	llrint@PLT # Offset: 121
    0000007e: 	imulq	$0x1f40, %rax, %rax
    00000085: 	cmpq	%rbx, %rax
    00000088: 	je	.Ltmp485 # Offset: 136
    0000008a: 	movl	current_test(%rip), %edx
    00000090: 	leaq	DATAat0x12802(%rip), %rsi
    00000097: 	movl	$0x1, %edi
    0000009c: 	xorl	%eax, %eax
    0000009e: 	addl	$0x1, %r12d
    000000a2: 	callq	__printf_chk@PLT # Offset: 162
    000000a7: 	movl	iterations(%rip), %r13d
    000000ae: 	cmpl	%r13d, %r12d
    000000b1: 	jl	.Ltmp486 # Offset: 177
.Ltmp482:
    000000b3: 	callq	clock@PLT # Offset: 179
    000000b8: 	pxor	%xmm0, %xmm0
    000000bc: 	movq	0x8(%rsp), %rdi
    000000c1: 	movq	%rax, end_time(%rip)
    000000c8: 	subq	start_time(%rip), %rax
    000000cf: 	cvtsi2sd	%rax, %xmm0
    000000d4: 	divsd	DATAat0x12828(%rip), %xmm0
    000000dc: 	addq	$0x18, %rsp
    000000e0: 	popq	%rbx
    000000e1: 	popq	%rbp
    000000e2: 	popq	%r12
    000000e4: 	popq	%r13
    000000e6: 	popq	%r14
    000000e8: 	popq	%r15
    000000ea: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 234
    000000ef: 	nop # Size: 1
.Ltmp485:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp486 # Offset: 247
    000000fd: 	jmp	.Ltmp482 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIdx14mathlib_llrintIdEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_fabsfIfEEvPT_iPKc" after disassembly {
  Number      : 80
  State       : disassembled
  Address     : 0xaa40
  Size        : 0x257
  MaxSize     : 0x260
  Offset      : 0xaa40
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_fabsfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB079:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %edx
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%edx, %edx
    00000031: 	jle	.Ltmp487 # Offset: 49
    00000037: 	movl	%r12d, %eax
    0000003a: 	movl	%r12d, %r15d
    0000003d: 	movaps	DATAat0x128d0(%rip), %xmm3
    00000044: 	xorl	%r14d, %r14d
    00000047: 	shrl	$0x2, %eax
    0000004a: 	movsd	DATAat0x12860(%rip), %xmm7
    00000052: 	movq	DATAat0x12890(%rip), %xmm8
    0000005b: 	pxor	%xmm10, %xmm10
    00000060: 	subl	$0x1, %eax
    00000063: 	movss	DATAat0x12950(%rip), %xmm6
    0000006b: 	leal	-0x1(%r12), %ecx
    00000070: 	andl	$-0x4, %r15d
    00000074: 	shlq	$0x4, %rax
    00000078: 	pxor	%xmm9, %xmm9
    0000007d: 	movss	DATAat0x128e0(%rip), %xmm5
    00000085: 	cvtsd2ss	init_value(%rip), %xmm10
    0000008e: 	leaq	0x10(%r13,%rax), %rbx
    00000093: 	leaq	DATAat0x12802(%rip), %rbp
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp494:
    000000a0: 	movaps	%xmm10, %xmm4
    000000a4: 	andps	%xmm5, %xmm4
    000000a7: 	mulss	%xmm6, %xmm4
    000000ab: 	testl	%r12d, %r12d
    000000ae: 	jle	.Ltmp488 # Offset: 174
.Ltmp495:
    000000b4: 	cmpl	$0x2, %ecx
    000000b7: 	jbe	.Ltmp489 # Offset: 183
    000000bd: 	movq	%r13, %rax
    000000c0: 	movaps	%xmm9, %xmm1
    000000c4: 	nopl	(%rax) # Size: 4
.Ltmp490:
    000000c8: 	movups	(%rax), %xmm0
    000000cb: 	addq	$0x10, %rax
    000000cf: 	andps	%xmm3, %xmm0
    000000d2: 	addss	%xmm0, %xmm1
    000000d6: 	movaps	%xmm0, %xmm2
    000000d9: 	shufps	$0x55, %xmm0, %xmm2
    000000dd: 	addss	%xmm1, %xmm2
    000000e1: 	movaps	%xmm0, %xmm1
    000000e4: 	unpckhps	%xmm0, %xmm1
    000000e7: 	shufps	$0xff, %xmm0, %xmm0
    000000eb: 	addss	%xmm2, %xmm1
    000000ef: 	addss	%xmm0, %xmm1
    000000f3: 	cmpq	%rax, %rbx
    000000f6: 	jne	.Ltmp490 # Offset: 246
    000000f8: 	movl	%r15d, %eax
    000000fb: 	cmpl	%r12d, %r15d
    000000fe: 	je	.Ltmp491 # Offset: 254
.Ltmp496:
    00000100: 	movslq	%eax, %rdi
    00000103: 	movss	(%r13,%rdi,4), %xmm0
    0000010a: 	leaq	(,%rdi,4), %r8
    00000112: 	leal	0x1(%rax), %edi
    00000115: 	andps	%xmm5, %xmm0
    00000118: 	addss	%xmm0, %xmm1
    0000011c: 	cmpl	%edi, %r12d
    0000011f: 	jle	.Ltmp491 # Offset: 287
    00000121: 	movss	0x4(%r13,%r8), %xmm0
    00000128: 	addl	$0x2, %eax
    0000012b: 	andps	%xmm5, %xmm0
    0000012e: 	addss	%xmm0, %xmm1
    00000132: 	cmpl	%eax, %r12d
    00000135: 	jle	.Ltmp491 # Offset: 309
    00000137: 	movss	0x8(%r13,%r8), %xmm0
    0000013e: 	andps	%xmm5, %xmm0
    00000141: 	addss	%xmm0, %xmm1
.Ltmp491:
    00000145: 	movaps	%xmm1, %xmm2
    00000148: 	movaps	%xmm1, %xmm0
    0000014b: 	andps	%xmm5, %xmm2
    0000014e: 	subss	%xmm4, %xmm0
    00000152: 	cvtss2sd	%xmm2, %xmm2
    00000156: 	comisd	DATAat0x12830(%rip), %xmm2
    0000015e: 	jbe	.Ltmp492 # Offset: 350
    00000160: 	divss	%xmm1, %xmm0
.Ltmp492:
    00000164: 	cvtss2sd	%xmm0, %xmm0
    00000168: 	andpd	%xmm8, %xmm0
    0000016d: 	comisd	%xmm0, %xmm7
    00000171: 	jbe	.Ltmp493 # Offset: 369
    00000173: 	addl	$0x1, %r14d
    00000177: 	cmpl	%edx, %r14d
    0000017a: 	jl	.Ltmp494 # Offset: 378
.Ltmp487:
    00000180: 	callq	clock@PLT # Offset: 384
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	0x8(%rsp), %rdi
    0000018e: 	movq	%rax, end_time(%rip)
    00000195: 	subq	start_time(%rip), %rax
    0000019c: 	cvtsi2sd	%rax, %xmm0
    000001a1: 	divsd	DATAat0x12828(%rip), %xmm0
    000001a9: 	addq	$0x18, %rsp
    000001ad: 	popq	%rbx
    000001ae: 	popq	%rbp
    000001af: 	popq	%r12
    000001b1: 	popq	%r13
    000001b3: 	popq	%r14
    000001b5: 	popq	%r15
    000001b7: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 439
    000001bc: 	nopl	(%rax) # Size: 4
.Ltmp493:
    000001c0: 	movl	current_test(%rip), %edx
    000001c6: 	movq	%rbp, %rsi
    000001c9: 	movl	$0x1, %edi
    000001ce: 	xorl	%eax, %eax
    000001d0: 	movl	%ecx, 0x4(%rsp)
    000001d4: 	addl	$0x1, %r14d
    000001d8: 	callq	__printf_chk@PLT # Offset: 472
    000001dd: 	movl	iterations(%rip), %edx
    000001e3: 	cmpl	%edx, %r14d
    000001e6: 	jge	.Ltmp487 # Offset: 486
    000001e8: 	pxor	%xmm10, %xmm10
    000001ed: 	movq	DATAat0x12860(%rip), %rax
    000001f4: 	movl	0x4(%rsp), %ecx
    000001f8: 	movss	DATAat0x128e0(%rip), %xmm5
    00000200: 	movss	DATAat0x12950(%rip), %xmm6
    00000208: 	movaps	DATAat0x128d0(%rip), %xmm3
    0000020f: 	cvtsd2ss	init_value(%rip), %xmm10
    00000218: 	movaps	%xmm10, %xmm4
    0000021c: 	andps	%xmm5, %xmm4
    0000021f: 	movq	%rax, %xmm7
    00000224: 	pxor	%xmm9, %xmm9
    00000229: 	movq	DATAat0x12890(%rip), %xmm8
    00000232: 	mulss	%xmm6, %xmm4
    00000236: 	testl	%r12d, %r12d
    00000239: 	jg	.Ltmp495 # Offset: 569
.Ltmp488:
    0000023f: 	movaps	%xmm9, %xmm0
    00000243: 	subss	%xmm4, %xmm0
    00000247: 	jmp	.Ltmp492 # Offset: 583
.Ltmp489:
    0000024c: 	xorl	%eax, %eax
    0000024e: 	movaps	%xmm9, %xmm1
    00000252: 	jmp	.Ltmp496 # Offset: 594
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_fabsfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_ceilfIfEEvPT_iPKc" after disassembly {
  Number      : 81
  State       : disassembled
  Address     : 0xaca0
  Size        : 0x21e
  MaxSize     : 0x220
  Offset      : 0xaca0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_ceilfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB080:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	callq	clock@PLT # Offset: 21
    0000001a: 	movl	iterations(%rip), %ecx
    00000020: 	movq	%rax, start_time(%rip)
    00000027: 	testl	%ecx, %ecx
    00000029: 	jle	.Ltmp497 # Offset: 41
    0000002f: 	leal	-0x1(%r14), %eax
    00000033: 	pxor	%xmm13, %xmm13
    00000038: 	movss	DATAat0x12954(%rip), %xmm5
    00000040: 	movq	DATAat0x12890(%rip), %xmm11
    00000049: 	movss	DATAat0x12958(%rip), %xmm6
    00000051: 	leaq	0x4(%r13,%rax,4), %rbx
    00000056: 	xorl	%r12d, %r12d
    00000059: 	movsd	DATAat0x12860(%rip), %xmm10
    00000062: 	movss	DATAat0x12950(%rip), %xmm9
    0000006b: 	pxor	%xmm8, %xmm8
    00000070: 	movss	DATAat0x128e0(%rip), %xmm7
    00000078: 	cvtsd2ss	init_value(%rip), %xmm13
    00000081: 	nopl	(%rax) # Size: 7
.Ltmp504:
    00000088: 	movaps	%xmm13, %xmm0
    0000008c: 	movaps	%xmm13, %xmm12
    00000090: 	movaps	%xmm7, %xmm1
    00000093: 	andps	%xmm7, %xmm0
    00000096: 	ucomiss	%xmm0, %xmm5
    00000099: 	jbe	.Ltmp498 # Offset: 153
    0000009b: 	cvttss2si	%xmm13, %eax
    000000a0: 	pxor	%xmm0, %xmm0
    000000a4: 	movaps	%xmm13, %xmm2
    000000a8: 	andnps	%xmm13, %xmm1
    000000ac: 	cvtsi2ss	%eax, %xmm0
    000000b0: 	cmpnless	%xmm0, %xmm2
    000000b5: 	andps	%xmm6, %xmm2
    000000b8: 	addss	%xmm2, %xmm0
    000000bc: 	orps	%xmm1, %xmm0
    000000bf: 	movaps	%xmm0, %xmm12
.Ltmp498:
    000000c3: 	mulss	%xmm9, %xmm12
    000000c8: 	movaps	%xmm8, %xmm2
    000000cc: 	movaps	%xmm7, %xmm4
    000000cf: 	movq	%r13, %rax
    000000d2: 	testl	%r14d, %r14d
    000000d5: 	jle	.Ltmp499 # Offset: 213
    000000db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp501:
    000000e0: 	movss	(%rax), %xmm0
    000000e4: 	movaps	%xmm0, %xmm1
    000000e7: 	andps	%xmm4, %xmm1
    000000ea: 	ucomiss	%xmm1, %xmm5
    000000ed: 	jbe	.Ltmp500 # Offset: 237
    000000ef: 	cvttss2si	%xmm0, %edx
    000000f3: 	pxor	%xmm1, %xmm1
    000000f7: 	movaps	%xmm0, %xmm3
    000000fa: 	cvtsi2ss	%edx, %xmm1
    000000fe: 	cmpnless	%xmm1, %xmm3
    00000103: 	andps	%xmm6, %xmm3
    00000106: 	addss	%xmm3, %xmm1
    0000010a: 	movaps	%xmm4, %xmm3
    0000010d: 	andnps	%xmm0, %xmm3
    00000110: 	movaps	%xmm1, %xmm0
    00000113: 	orps	%xmm3, %xmm0
.Ltmp500:
    00000116: 	addq	$0x4, %rax
    0000011a: 	addss	%xmm0, %xmm2
    0000011e: 	cmpq	%rax, %rbx
    00000121: 	jne	.Ltmp501 # Offset: 289
    00000123: 	movaps	%xmm2, %xmm1
    00000126: 	movaps	%xmm2, %xmm0
    00000129: 	andps	%xmm7, %xmm1
    0000012c: 	subss	%xmm12, %xmm0
    00000131: 	cvtss2sd	%xmm1, %xmm1
    00000135: 	comisd	DATAat0x12830(%rip), %xmm1
    0000013d: 	jbe	.Ltmp502 # Offset: 317
    0000013f: 	divss	%xmm2, %xmm0
.Ltmp502:
    00000143: 	cvtss2sd	%xmm0, %xmm0
    00000147: 	andpd	%xmm11, %xmm0
    0000014c: 	comisd	%xmm0, %xmm10
    00000151: 	jbe	.Ltmp503 # Offset: 337
    00000153: 	addl	$0x1, %r12d
    00000157: 	cmpl	%ecx, %r12d
    0000015a: 	jl	.Ltmp504 # Offset: 346
.Ltmp497:
    00000160: 	callq	clock@PLT # Offset: 352
    00000165: 	popq	%rbx
    00000166: 	pxor	%xmm0, %xmm0
    0000016a: 	movq	%rbp, %rdi
    0000016d: 	movq	%rax, end_time(%rip)
    00000174: 	popq	%rbp
    00000175: 	subq	start_time(%rip), %rax
    0000017c: 	popq	%r12
    0000017e: 	popq	%r13
    00000180: 	cvtsi2sd	%rax, %xmm0
    00000185: 	popq	%r14
    00000187: 	divsd	DATAat0x12828(%rip), %xmm0
    0000018f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 399
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp503:
    00000198: 	movl	current_test(%rip), %edx
    0000019e: 	leaq	DATAat0x12802(%rip), %rsi
    000001a5: 	movl	$0x1, %edi
    000001aa: 	xorl	%eax, %eax
    000001ac: 	addl	$0x1, %r12d
    000001b0: 	callq	__printf_chk@PLT # Offset: 432
    000001b5: 	movl	iterations(%rip), %ecx
    000001bb: 	cmpl	%ecx, %r12d
    000001be: 	jge	.Ltmp497 # Offset: 446
    000001c0: 	movq	DATAat0x12860(%rip), %rax
    000001c7: 	pxor	%xmm13, %xmm13
    000001cc: 	movss	DATAat0x12950(%rip), %xmm9
    000001d5: 	pxor	%xmm8, %xmm8
    000001da: 	movss	DATAat0x12954(%rip), %xmm5
    000001e2: 	movss	DATAat0x12958(%rip), %xmm6
    000001ea: 	movss	DATAat0x128e0(%rip), %xmm7
    000001f2: 	cvtsd2ss	init_value(%rip), %xmm13
    000001fb: 	movq	DATAat0x12890(%rip), %xmm11
    00000204: 	movq	%rax, %xmm10
    00000209: 	jmp	.Ltmp504 # Offset: 521
    0000020e: 	nop # Size: 2
.Ltmp499:
    00000210: 	movaps	%xmm8, %xmm0
    00000214: 	subss	%xmm12, %xmm0
    00000219: 	jmp	.Ltmp502 # Offset: 537
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_ceilfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_floorfIfEEvPT_iPKc" after disassembly {
  Number      : 82
  State       : disassembled
  Address     : 0xaec0
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0xaec0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_floorfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB081:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	movl	%esi, %r14d
    00000009: 	pushq	%r13
    0000000b: 	movq	%rdi, %r13
    0000000e: 	pushq	%r12
    00000010: 	pushq	%rbp
    00000011: 	movq	%rdx, %rbp
    00000014: 	pushq	%rbx
    00000015: 	callq	clock@PLT # Offset: 21
    0000001a: 	movl	iterations(%rip), %ecx
    00000020: 	movq	%rax, start_time(%rip)
    00000027: 	testl	%ecx, %ecx
    00000029: 	jle	.Ltmp505 # Offset: 41
    0000002f: 	leal	-0x1(%r14), %eax
    00000033: 	pxor	%xmm8, %xmm8
    00000038: 	movss	DATAat0x12954(%rip), %xmm5
    00000040: 	movq	DATAat0x12890(%rip), %xmm13
    00000049: 	movss	DATAat0x12958(%rip), %xmm6
    00000051: 	leaq	0x4(%r13,%rax,4), %rbx
    00000056: 	xorl	%r12d, %r12d
    00000059: 	movsd	DATAat0x12860(%rip), %xmm12
    00000062: 	movss	DATAat0x12950(%rip), %xmm11
    0000006b: 	pxor	%xmm10, %xmm10
    00000070: 	movss	DATAat0x128e0(%rip), %xmm9
    00000079: 	cvtsd2ss	init_value(%rip), %xmm8
    00000082: 	nopw	(%rax,%rax) # Size: 6
.Ltmp512:
    00000088: 	movaps	%xmm8, %xmm0
    0000008c: 	movaps	%xmm8, %xmm7
    00000090: 	movaps	%xmm9, %xmm1
    00000094: 	andps	%xmm9, %xmm0
    00000098: 	ucomiss	%xmm0, %xmm5
    0000009b: 	jbe	.Ltmp506 # Offset: 155
    0000009d: 	cvttss2si	%xmm8, %eax
    000000a2: 	pxor	%xmm0, %xmm0
    000000a6: 	andnps	%xmm8, %xmm1
    000000aa: 	cvtsi2ss	%eax, %xmm0
    000000ae: 	movaps	%xmm0, %xmm2
    000000b1: 	cmpnless	%xmm8, %xmm2
    000000b7: 	andps	%xmm6, %xmm2
    000000ba: 	subss	%xmm2, %xmm0
    000000be: 	movaps	%xmm0, %xmm7
    000000c1: 	orps	%xmm1, %xmm7
.Ltmp506:
    000000c4: 	mulss	%xmm11, %xmm7
    000000c9: 	movaps	%xmm10, %xmm2
    000000cd: 	movaps	%xmm9, %xmm4
    000000d1: 	movq	%r13, %rax
    000000d4: 	testl	%r14d, %r14d
    000000d7: 	jle	.Ltmp507 # Offset: 215
    000000dd: 	nopl	(%rax) # Size: 3
.Ltmp509:
    000000e0: 	movss	(%rax), %xmm0
    000000e4: 	movaps	%xmm0, %xmm1
    000000e7: 	andps	%xmm4, %xmm1
    000000ea: 	ucomiss	%xmm1, %xmm5
    000000ed: 	jbe	.Ltmp508 # Offset: 237
    000000ef: 	cvttss2si	%xmm0, %edx
    000000f3: 	pxor	%xmm1, %xmm1
    000000f7: 	cvtsi2ss	%edx, %xmm1
    000000fb: 	movaps	%xmm1, %xmm3
    000000fe: 	cmpnless	%xmm0, %xmm3
    00000103: 	andps	%xmm6, %xmm3
    00000106: 	subss	%xmm3, %xmm1
    0000010a: 	movaps	%xmm4, %xmm3
    0000010d: 	andnps	%xmm0, %xmm3
    00000110: 	movaps	%xmm1, %xmm0
    00000113: 	orps	%xmm3, %xmm0
.Ltmp508:
    00000116: 	addq	$0x4, %rax
    0000011a: 	addss	%xmm0, %xmm2
    0000011e: 	cmpq	%rax, %rbx
    00000121: 	jne	.Ltmp509 # Offset: 289
    00000123: 	movaps	%xmm2, %xmm1
    00000126: 	movaps	%xmm2, %xmm0
    00000129: 	andps	%xmm9, %xmm1
    0000012d: 	subss	%xmm7, %xmm0
    00000131: 	cvtss2sd	%xmm1, %xmm1
    00000135: 	comisd	DATAat0x12830(%rip), %xmm1
    0000013d: 	jbe	.Ltmp510 # Offset: 317
    0000013f: 	divss	%xmm2, %xmm0
.Ltmp510:
    00000143: 	cvtss2sd	%xmm0, %xmm0
    00000147: 	andpd	%xmm13, %xmm0
    0000014c: 	comisd	%xmm0, %xmm12
    00000151: 	jbe	.Ltmp511 # Offset: 337
    00000153: 	addl	$0x1, %r12d
    00000157: 	cmpl	%ecx, %r12d
    0000015a: 	jl	.Ltmp512 # Offset: 346
.Ltmp505:
    00000160: 	callq	clock@PLT # Offset: 352
    00000165: 	popq	%rbx
    00000166: 	pxor	%xmm0, %xmm0
    0000016a: 	movq	%rbp, %rdi
    0000016d: 	movq	%rax, end_time(%rip)
    00000174: 	popq	%rbp
    00000175: 	subq	start_time(%rip), %rax
    0000017c: 	popq	%r12
    0000017e: 	popq	%r13
    00000180: 	cvtsi2sd	%rax, %xmm0
    00000185: 	popq	%r14
    00000187: 	divsd	DATAat0x12828(%rip), %xmm0
    0000018f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 399
    00000194: 	nopl	(%rax) # Size: 4
.Ltmp511:
    00000198: 	movl	current_test(%rip), %edx
    0000019e: 	leaq	DATAat0x12802(%rip), %rsi
    000001a5: 	movl	$0x1, %edi
    000001aa: 	xorl	%eax, %eax
    000001ac: 	addl	$0x1, %r12d
    000001b0: 	callq	__printf_chk@PLT # Offset: 432
    000001b5: 	movl	iterations(%rip), %ecx
    000001bb: 	cmpl	%ecx, %r12d
    000001be: 	jge	.Ltmp505 # Offset: 446
    000001c0: 	movq	DATAat0x12860(%rip), %rax
    000001c7: 	pxor	%xmm8, %xmm8
    000001cc: 	movss	DATAat0x12950(%rip), %xmm11
    000001d5: 	pxor	%xmm10, %xmm10
    000001da: 	movss	DATAat0x12954(%rip), %xmm5
    000001e2: 	movq	DATAat0x12890(%rip), %xmm13
    000001eb: 	movss	DATAat0x128e0(%rip), %xmm9
    000001f4: 	cvtsd2ss	init_value(%rip), %xmm8
    000001fd: 	movss	DATAat0x12958(%rip), %xmm6
    00000205: 	movq	%rax, %xmm12
    0000020a: 	jmp	.Ltmp512 # Offset: 522
    0000020f: 	nop # Size: 1
.Ltmp507:
    00000210: 	movaps	%xmm10, %xmm0
    00000214: 	subss	%xmm7, %xmm0
    00000218: 	jmp	.Ltmp510 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_floorfIfEEvPT_iPKc"

Binary Function "_Z14test_variable1If10inline_maxIfEEvPT_iS2_PKc" after disassembly {
  Number      : 83
  State       : disassembled
  Address     : 0xb0e0
  Size        : 0x2a9
  MaxSize     : 0x2b0
  Offset      : 0xb0e0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If10inline_maxIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB082:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movss	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %edx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%edx, %edx
    00000036: 	jle	.Ltmp513 # Offset: 54
    0000003c: 	movl	%r12d, %eax
    0000003f: 	movl	%r12d, %r15d
    00000042: 	movss	(%rsp), %xmm3
    00000047: 	pxor	%xmm4, %xmm4
    0000004b: 	shrl	$0x2, %eax
    0000004e: 	leal	-0x1(%r12), %ecx
    00000053: 	andl	$-0x4, %r15d
    00000057: 	xorl	%r14d, %r14d
    0000005a: 	subl	$0x1, %eax
    0000005d: 	movss	DATAat0x12950(%rip), %xmm5
    00000065: 	movq	DATAat0x12890(%rip), %xmm7
    0000006d: 	pxor	%xmm8, %xmm8
    00000072: 	shlq	$0x4, %rax
    00000076: 	leaq	DATAat0x12802(%rip), %rbp
    0000007d: 	movsd	DATAat0x12860(%rip), %xmm6
    00000085: 	movsd	DATAat0x12830(%rip), %xmm9
    0000008e: 	leaq	0x10(%r13,%rax), %rbx
    00000093: 	cvtsd2ss	init_value(%rip), %xmm4
    0000009b: 	movss	DATAat0x128e0(%rip), %xmm10
    000000a4: 	nopl	(%rax) # Size: 4
.Ltmp520:
    000000a8: 	testl	%r12d, %r12d
    000000ab: 	jle	.Ltmp514 # Offset: 171
.Ltmp521:
    000000b1: 	cmpl	$0x2, %ecx
    000000b4: 	jbe	.Ltmp515 # Offset: 180
    000000ba: 	movaps	%xmm3, %xmm2
    000000bd: 	movq	%r13, %rax
    000000c0: 	movaps	%xmm8, %xmm11
    000000c4: 	shufps	$0x0, %xmm2, %xmm2
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp516:
    000000d0: 	movups	(%rax), %xmm1
    000000d3: 	movaps	%xmm2, %xmm0
    000000d6: 	addq	$0x10, %rax
    000000da: 	maxps	%xmm1, %xmm0
    000000dd: 	movaps	%xmm0, %xmm1
    000000e0: 	addss	%xmm11, %xmm1
    000000e5: 	movaps	%xmm0, %xmm11
    000000e9: 	shufps	$0x55, %xmm0, %xmm11
    000000ee: 	addss	%xmm11, %xmm1
    000000f3: 	movaps	%xmm0, %xmm11
    000000f7: 	unpckhps	%xmm0, %xmm11
    000000fb: 	shufps	$0xff, %xmm0, %xmm0
    000000ff: 	addss	%xmm11, %xmm1
    00000104: 	addss	%xmm0, %xmm1
    00000108: 	movaps	%xmm1, %xmm11
    0000010c: 	cmpq	%rax, %rbx
    0000010f: 	jne	.Ltmp516 # Offset: 271
    00000111: 	movl	%r15d, %eax
    00000114: 	cmpl	%r12d, %r15d
    00000117: 	je	.Ltmp517 # Offset: 279
.Ltmp523:
    00000119: 	movslq	%eax, %rdi
    0000011c: 	movaps	%xmm3, %xmm0
    0000011f: 	maxss	(%r13,%rdi,4), %xmm0
    00000126: 	leaq	(,%rdi,4), %r8
    0000012e: 	leal	0x1(%rax), %edi
    00000131: 	addss	%xmm0, %xmm11
    00000136: 	cmpl	%edi, %r12d
    00000139: 	jle	.Ltmp517 # Offset: 313
    0000013b: 	movaps	%xmm3, %xmm0
    0000013e: 	maxss	0x4(%r13,%r8), %xmm0
    00000145: 	addl	$0x2, %eax
    00000148: 	addss	%xmm0, %xmm11
    0000014d: 	cmpl	%eax, %r12d
    00000150: 	jle	.Ltmp517 # Offset: 336
    00000152: 	movaps	%xmm3, %xmm0
    00000155: 	maxss	0x8(%r13,%r8), %xmm0
    0000015c: 	addss	%xmm0, %xmm11
.Ltmp517:
    00000161: 	movaps	%xmm4, %xmm0
    00000164: 	movaps	%xmm4, %xmm1
    00000167: 	movaps	%xmm11, %xmm2
    0000016b: 	cmpnltss	%xmm3, %xmm0
    00000170: 	andps	%xmm10, %xmm2
    00000174: 	cvtss2sd	%xmm2, %xmm2
    00000178: 	comisd	%xmm9, %xmm2
    0000017d: 	andps	%xmm0, %xmm1
    00000180: 	andnps	%xmm3, %xmm0
    00000183: 	orps	%xmm1, %xmm0
    00000186: 	movaps	%xmm11, %xmm1
    0000018a: 	mulss	%xmm5, %xmm0
    0000018e: 	subss	%xmm0, %xmm1
    00000192: 	jbe	.Ltmp518 # Offset: 402
    00000194: 	divss	%xmm11, %xmm1
.Ltmp518:
    00000199: 	cvtss2sd	%xmm1, %xmm1
    0000019d: 	andpd	%xmm7, %xmm1
    000001a1: 	comisd	%xmm1, %xmm6
    000001a5: 	jbe	.Ltmp519 # Offset: 421
    000001a7: 	addl	$0x1, %r14d
    000001ab: 	cmpl	%edx, %r14d
    000001ae: 	jl	.Ltmp520 # Offset: 430
.Ltmp513:
    000001b4: 	callq	clock@PLT # Offset: 436
    000001b9: 	pxor	%xmm0, %xmm0
    000001bd: 	movq	0x8(%rsp), %rdi
    000001c2: 	movq	%rax, end_time(%rip)
    000001c9: 	subq	start_time(%rip), %rax
    000001d0: 	cvtsi2sd	%rax, %xmm0
    000001d5: 	divsd	DATAat0x12828(%rip), %xmm0
    000001dd: 	addq	$0x18, %rsp
    000001e1: 	popq	%rbx
    000001e2: 	popq	%rbp
    000001e3: 	popq	%r12
    000001e5: 	popq	%r13
    000001e7: 	popq	%r14
    000001e9: 	popq	%r15
    000001eb: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 491
.Ltmp519:
    000001f0: 	movl	current_test(%rip), %edx
    000001f6: 	movq	%rbp, %rsi
    000001f9: 	movl	$0x1, %edi
    000001fe: 	xorl	%eax, %eax
    00000200: 	movl	%ecx, (%rsp)
    00000203: 	addl	$0x1, %r14d
    00000207: 	movss	%xmm3, 0x4(%rsp)
    0000020d: 	callq	__printf_chk@PLT # Offset: 525
    00000212: 	movl	iterations(%rip), %edx
    00000218: 	cmpl	%edx, %r14d
    0000021b: 	jge	.Ltmp513 # Offset: 539
    0000021d: 	movq	DATAat0x12860(%rip), %rax
    00000224: 	pxor	%xmm4, %xmm4
    00000228: 	movl	(%rsp), %ecx
    0000022b: 	pxor	%xmm8, %xmm8
    00000230: 	movss	0x4(%rsp), %xmm3
    00000236: 	movss	DATAat0x12950(%rip), %xmm5
    0000023e: 	movss	DATAat0x128e0(%rip), %xmm10
    00000247: 	cvtsd2ss	init_value(%rip), %xmm4
    0000024f: 	movq	%rax, %xmm6
    00000254: 	movq	DATAat0x12830(%rip), %rax
    0000025b: 	movq	DATAat0x12890(%rip), %xmm7
    00000263: 	movq	%rax, %xmm9
    00000268: 	testl	%r12d, %r12d
    0000026b: 	jg	.Ltmp521 # Offset: 619
.Ltmp514:
    00000271: 	comiss	%xmm4, %xmm3
    00000274: 	jbe	.Ltmp522 # Offset: 628
    00000276: 	movaps	%xmm3, %xmm0
    00000279: 	movaps	%xmm8, %xmm1
    0000027d: 	mulss	%xmm5, %xmm0
    00000281: 	subss	%xmm0, %xmm1
    00000285: 	jmp	.Ltmp518 # Offset: 645
.Ltmp515:
    0000028a: 	xorl	%eax, %eax
    0000028c: 	movaps	%xmm8, %xmm11
    00000290: 	jmp	.Ltmp523 # Offset: 656
.Ltmp522:
    00000295: 	movaps	%xmm4, %xmm0
    00000298: 	movaps	%xmm8, %xmm1
    0000029c: 	mulss	%xmm5, %xmm0
    000002a0: 	subss	%xmm0, %xmm1
    000002a4: 	jmp	.Ltmp518 # Offset: 676
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If10inline_maxIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If10inline_minIfEEvPT_iS2_PKc" after disassembly {
  Number      : 84
  State       : disassembled
  Address     : 0xb390
  Size        : 0x2a9
  MaxSize     : 0x2b0
  Offset      : 0xb390
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If10inline_minIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB083:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movss	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %edx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%edx, %edx
    00000036: 	jle	.Ltmp524 # Offset: 54
    0000003c: 	movl	%r12d, %eax
    0000003f: 	movl	%r12d, %r15d
    00000042: 	movss	(%rsp), %xmm3
    00000047: 	pxor	%xmm4, %xmm4
    0000004b: 	shrl	$0x2, %eax
    0000004e: 	leal	-0x1(%r12), %ecx
    00000053: 	andl	$-0x4, %r15d
    00000057: 	xorl	%r14d, %r14d
    0000005a: 	subl	$0x1, %eax
    0000005d: 	movss	DATAat0x12950(%rip), %xmm5
    00000065: 	movq	DATAat0x12890(%rip), %xmm7
    0000006d: 	pxor	%xmm8, %xmm8
    00000072: 	shlq	$0x4, %rax
    00000076: 	leaq	DATAat0x12802(%rip), %rbp
    0000007d: 	movsd	DATAat0x12860(%rip), %xmm6
    00000085: 	movsd	DATAat0x12830(%rip), %xmm9
    0000008e: 	leaq	0x10(%r13,%rax), %rbx
    00000093: 	cvtsd2ss	init_value(%rip), %xmm4
    0000009b: 	movss	DATAat0x128e0(%rip), %xmm10
    000000a4: 	nopl	(%rax) # Size: 4
.Ltmp531:
    000000a8: 	testl	%r12d, %r12d
    000000ab: 	jle	.Ltmp525 # Offset: 171
.Ltmp532:
    000000b1: 	cmpl	$0x2, %ecx
    000000b4: 	jbe	.Ltmp526 # Offset: 180
    000000ba: 	movaps	%xmm3, %xmm2
    000000bd: 	movq	%r13, %rax
    000000c0: 	movaps	%xmm8, %xmm11
    000000c4: 	shufps	$0x0, %xmm2, %xmm2
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp527:
    000000d0: 	movups	(%rax), %xmm1
    000000d3: 	movaps	%xmm2, %xmm0
    000000d6: 	addq	$0x10, %rax
    000000da: 	minps	%xmm1, %xmm0
    000000dd: 	movaps	%xmm0, %xmm1
    000000e0: 	addss	%xmm11, %xmm1
    000000e5: 	movaps	%xmm0, %xmm11
    000000e9: 	shufps	$0x55, %xmm0, %xmm11
    000000ee: 	addss	%xmm11, %xmm1
    000000f3: 	movaps	%xmm0, %xmm11
    000000f7: 	unpckhps	%xmm0, %xmm11
    000000fb: 	shufps	$0xff, %xmm0, %xmm0
    000000ff: 	addss	%xmm11, %xmm1
    00000104: 	addss	%xmm0, %xmm1
    00000108: 	movaps	%xmm1, %xmm11
    0000010c: 	cmpq	%rax, %rbx
    0000010f: 	jne	.Ltmp527 # Offset: 271
    00000111: 	movl	%r15d, %eax
    00000114: 	cmpl	%r12d, %r15d
    00000117: 	je	.Ltmp528 # Offset: 279
.Ltmp534:
    00000119: 	movslq	%eax, %rdi
    0000011c: 	movaps	%xmm3, %xmm0
    0000011f: 	minss	(%r13,%rdi,4), %xmm0
    00000126: 	leaq	(,%rdi,4), %r8
    0000012e: 	leal	0x1(%rax), %edi
    00000131: 	addss	%xmm0, %xmm11
    00000136: 	cmpl	%edi, %r12d
    00000139: 	jle	.Ltmp528 # Offset: 313
    0000013b: 	movaps	%xmm3, %xmm0
    0000013e: 	minss	0x4(%r13,%r8), %xmm0
    00000145: 	addl	$0x2, %eax
    00000148: 	addss	%xmm0, %xmm11
    0000014d: 	cmpl	%eax, %r12d
    00000150: 	jle	.Ltmp528 # Offset: 336
    00000152: 	movaps	%xmm3, %xmm0
    00000155: 	minss	0x8(%r13,%r8), %xmm0
    0000015c: 	addss	%xmm0, %xmm11
.Ltmp528:
    00000161: 	movaps	%xmm3, %xmm0
    00000164: 	movaps	%xmm4, %xmm1
    00000167: 	movaps	%xmm11, %xmm2
    0000016b: 	cmpnltss	%xmm4, %xmm0
    00000170: 	andps	%xmm10, %xmm2
    00000174: 	cvtss2sd	%xmm2, %xmm2
    00000178: 	comisd	%xmm9, %xmm2
    0000017d: 	andps	%xmm0, %xmm1
    00000180: 	andnps	%xmm3, %xmm0
    00000183: 	orps	%xmm1, %xmm0
    00000186: 	movaps	%xmm11, %xmm1
    0000018a: 	mulss	%xmm5, %xmm0
    0000018e: 	subss	%xmm0, %xmm1
    00000192: 	jbe	.Ltmp529 # Offset: 402
    00000194: 	divss	%xmm11, %xmm1
.Ltmp529:
    00000199: 	cvtss2sd	%xmm1, %xmm1
    0000019d: 	andpd	%xmm7, %xmm1
    000001a1: 	comisd	%xmm1, %xmm6
    000001a5: 	jbe	.Ltmp530 # Offset: 421
    000001a7: 	addl	$0x1, %r14d
    000001ab: 	cmpl	%edx, %r14d
    000001ae: 	jl	.Ltmp531 # Offset: 430
.Ltmp524:
    000001b4: 	callq	clock@PLT # Offset: 436
    000001b9: 	pxor	%xmm0, %xmm0
    000001bd: 	movq	0x8(%rsp), %rdi
    000001c2: 	movq	%rax, end_time(%rip)
    000001c9: 	subq	start_time(%rip), %rax
    000001d0: 	cvtsi2sd	%rax, %xmm0
    000001d5: 	divsd	DATAat0x12828(%rip), %xmm0
    000001dd: 	addq	$0x18, %rsp
    000001e1: 	popq	%rbx
    000001e2: 	popq	%rbp
    000001e3: 	popq	%r12
    000001e5: 	popq	%r13
    000001e7: 	popq	%r14
    000001e9: 	popq	%r15
    000001eb: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 491
.Ltmp530:
    000001f0: 	movl	current_test(%rip), %edx
    000001f6: 	movq	%rbp, %rsi
    000001f9: 	movl	$0x1, %edi
    000001fe: 	xorl	%eax, %eax
    00000200: 	movl	%ecx, (%rsp)
    00000203: 	addl	$0x1, %r14d
    00000207: 	movss	%xmm3, 0x4(%rsp)
    0000020d: 	callq	__printf_chk@PLT # Offset: 525
    00000212: 	movl	iterations(%rip), %edx
    00000218: 	cmpl	%edx, %r14d
    0000021b: 	jge	.Ltmp524 # Offset: 539
    0000021d: 	movq	DATAat0x12860(%rip), %rax
    00000224: 	pxor	%xmm4, %xmm4
    00000228: 	movl	(%rsp), %ecx
    0000022b: 	pxor	%xmm8, %xmm8
    00000230: 	movss	0x4(%rsp), %xmm3
    00000236: 	movss	DATAat0x12950(%rip), %xmm5
    0000023e: 	movss	DATAat0x128e0(%rip), %xmm10
    00000247: 	cvtsd2ss	init_value(%rip), %xmm4
    0000024f: 	movq	%rax, %xmm6
    00000254: 	movq	DATAat0x12830(%rip), %rax
    0000025b: 	movq	DATAat0x12890(%rip), %xmm7
    00000263: 	movq	%rax, %xmm9
    00000268: 	testl	%r12d, %r12d
    0000026b: 	jg	.Ltmp532 # Offset: 619
.Ltmp525:
    00000271: 	comiss	%xmm3, %xmm4
    00000274: 	jbe	.Ltmp533 # Offset: 628
    00000276: 	movaps	%xmm3, %xmm0
    00000279: 	movaps	%xmm8, %xmm1
    0000027d: 	mulss	%xmm5, %xmm0
    00000281: 	subss	%xmm0, %xmm1
    00000285: 	jmp	.Ltmp529 # Offset: 645
.Ltmp526:
    0000028a: 	xorl	%eax, %eax
    0000028c: 	movaps	%xmm8, %xmm11
    00000290: 	jmp	.Ltmp534 # Offset: 656
.Ltmp533:
    00000295: 	movaps	%xmm4, %xmm0
    00000298: 	movaps	%xmm8, %xmm1
    0000029c: 	mulss	%xmm5, %xmm0
    000002a0: 	subss	%xmm0, %xmm1
    000002a4: 	jmp	.Ltmp529 # Offset: 676
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If10inline_minIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If13mathlib_fmaxfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 85
  State       : disassembled
  Address     : 0xb640
  Size        : 0x1bf
  MaxSize     : 0x1c0
  Offset      : 0xb640
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If13mathlib_fmaxfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB084:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %r12d
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%r12d, %r12d
    00000039: 	jle	.Ltmp535 # Offset: 57
    0000003f: 	leal	-0x1(%r14), %eax
    00000043: 	pxor	%xmm7, %xmm7
    00000047: 	movss	0x8(%rsp), %xmm1
    0000004d: 	xorl	%ebp, %ebp
    0000004f: 	cvtsd2ss	init_value(%rip), %xmm7
    00000057: 	leaq	0x4(%r13,%rax,4), %rbx
    0000005c: 	movss	%xmm7, 0x14(%rsp)
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp540:
    00000068: 	movss	0x14(%rsp), %xmm0
    0000006e: 	movss	%xmm1, 0x8(%rsp)
    00000074: 	movq	%r13, %r15
    00000077: 	callq	fmaxf@PLT # Offset: 119
    0000007c: 	mulss	DATAat0x12950(%rip), %xmm0
    00000084: 	testl	%r14d, %r14d
    00000087: 	pxor	%xmm2, %xmm2
    0000008b: 	movss	0x8(%rsp), %xmm1
    00000091: 	movss	%xmm0, 0x10(%rsp)
    00000097: 	jle	.Ltmp536 # Offset: 151
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp537:
    000000a0: 	movss	(%r15), %xmm0
    000000a5: 	movss	%xmm2, 0xc(%rsp)
    000000ab: 	addq	$0x4, %r15
    000000af: 	movss	%xmm1, 0x8(%rsp)
    000000b5: 	callq	fmaxf@PLT # Offset: 181
    000000ba: 	movss	0xc(%rsp), %xmm2
    000000c0: 	cmpq	%r15, %rbx
    000000c3: 	movss	0x8(%rsp), %xmm1
    000000c9: 	addss	%xmm0, %xmm2
    000000cd: 	jne	.Ltmp537 # Offset: 205
    000000cf: 	movaps	%xmm2, %xmm3
    000000d2: 	andps	DATAat0x128e0(%rip), %xmm3
    000000d9: 	movaps	%xmm2, %xmm0
    000000dc: 	subss	0x10(%rsp), %xmm0
    000000e2: 	cvtss2sd	%xmm3, %xmm3
    000000e6: 	comisd	DATAat0x12830(%rip), %xmm3
    000000ee: 	jbe	.Ltmp538 # Offset: 238
    000000f0: 	divss	%xmm2, %xmm0
.Ltmp538:
    000000f4: 	movsd	DATAat0x12860(%rip), %xmm4
    000000fc: 	cvtss2sd	%xmm0, %xmm0
    00000100: 	andpd	DATAat0x12890(%rip), %xmm0
    00000108: 	comisd	%xmm0, %xmm4
    0000010c: 	jbe	.Ltmp539 # Offset: 268
    0000010e: 	addl	$0x1, %ebp
    00000111: 	cmpl	%r12d, %ebp
    00000114: 	jl	.Ltmp540 # Offset: 276
.Ltmp535:
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	pxor	%xmm0, %xmm0
    00000123: 	movq	0x18(%rsp), %rdi
    00000128: 	movq	%rax, end_time(%rip)
    0000012f: 	subq	start_time(%rip), %rax
    00000136: 	cvtsi2sd	%rax, %xmm0
    0000013b: 	divsd	DATAat0x12828(%rip), %xmm0
    00000143: 	addq	$0x28, %rsp
    00000147: 	popq	%rbx
    00000148: 	popq	%rbp
    00000149: 	popq	%r12
    0000014b: 	popq	%r13
    0000014d: 	popq	%r14
    0000014f: 	popq	%r15
    00000151: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp539:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	movl	$0x1, %edi
    0000016b: 	xorl	%eax, %eax
    0000016d: 	addl	$0x1, %ebp
    00000170: 	leaq	DATAat0x12802(%rip), %rsi
    00000177: 	movss	%xmm1, 0x8(%rsp)
    0000017d: 	callq	__printf_chk@PLT # Offset: 381
    00000182: 	movl	iterations(%rip), %r12d
    00000189: 	cmpl	%r12d, %ebp
    0000018c: 	jge	.Ltmp535 # Offset: 396
    0000018e: 	pxor	%xmm6, %xmm6
    00000192: 	movss	0x8(%rsp), %xmm1
    00000198: 	cvtsd2ss	init_value(%rip), %xmm6
    000001a0: 	movss	%xmm6, 0x14(%rsp)
    000001a6: 	jmp	.Ltmp540 # Offset: 422
    000001ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp536:
    000001b0: 	pxor	%xmm0, %xmm0
    000001b4: 	subss	0x10(%rsp), %xmm0
    000001ba: 	jmp	.Ltmp538 # Offset: 442
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If13mathlib_fmaxfIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If13mathlib_fminfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 86
  State       : disassembled
  Address     : 0xb800
  Size        : 0x1bf
  MaxSize     : 0x1c0
  Offset      : 0xb800
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If13mathlib_fminfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB085:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movl	iterations(%rip), %r12d
    0000002f: 	movq	%rax, start_time(%rip)
    00000036: 	testl	%r12d, %r12d
    00000039: 	jle	.Ltmp541 # Offset: 57
    0000003f: 	leal	-0x1(%r14), %eax
    00000043: 	pxor	%xmm7, %xmm7
    00000047: 	movss	0x8(%rsp), %xmm1
    0000004d: 	xorl	%ebp, %ebp
    0000004f: 	cvtsd2ss	init_value(%rip), %xmm7
    00000057: 	leaq	0x4(%r13,%rax,4), %rbx
    0000005c: 	movss	%xmm7, 0x14(%rsp)
    00000062: 	nopw	(%rax,%rax) # Size: 6
.Ltmp546:
    00000068: 	movss	0x14(%rsp), %xmm0
    0000006e: 	movss	%xmm1, 0x8(%rsp)
    00000074: 	movq	%r13, %r15
    00000077: 	callq	fminf@PLT # Offset: 119
    0000007c: 	mulss	DATAat0x12950(%rip), %xmm0
    00000084: 	testl	%r14d, %r14d
    00000087: 	pxor	%xmm2, %xmm2
    0000008b: 	movss	0x8(%rsp), %xmm1
    00000091: 	movss	%xmm0, 0x10(%rsp)
    00000097: 	jle	.Ltmp542 # Offset: 151
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp543:
    000000a0: 	movss	(%r15), %xmm0
    000000a5: 	movss	%xmm2, 0xc(%rsp)
    000000ab: 	addq	$0x4, %r15
    000000af: 	movss	%xmm1, 0x8(%rsp)
    000000b5: 	callq	fminf@PLT # Offset: 181
    000000ba: 	movss	0xc(%rsp), %xmm2
    000000c0: 	cmpq	%r15, %rbx
    000000c3: 	movss	0x8(%rsp), %xmm1
    000000c9: 	addss	%xmm0, %xmm2
    000000cd: 	jne	.Ltmp543 # Offset: 205
    000000cf: 	movaps	%xmm2, %xmm3
    000000d2: 	andps	DATAat0x128e0(%rip), %xmm3
    000000d9: 	movaps	%xmm2, %xmm0
    000000dc: 	subss	0x10(%rsp), %xmm0
    000000e2: 	cvtss2sd	%xmm3, %xmm3
    000000e6: 	comisd	DATAat0x12830(%rip), %xmm3
    000000ee: 	jbe	.Ltmp544 # Offset: 238
    000000f0: 	divss	%xmm2, %xmm0
.Ltmp544:
    000000f4: 	movsd	DATAat0x12860(%rip), %xmm4
    000000fc: 	cvtss2sd	%xmm0, %xmm0
    00000100: 	andpd	DATAat0x12890(%rip), %xmm0
    00000108: 	comisd	%xmm0, %xmm4
    0000010c: 	jbe	.Ltmp545 # Offset: 268
    0000010e: 	addl	$0x1, %ebp
    00000111: 	cmpl	%r12d, %ebp
    00000114: 	jl	.Ltmp546 # Offset: 276
.Ltmp541:
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	pxor	%xmm0, %xmm0
    00000123: 	movq	0x18(%rsp), %rdi
    00000128: 	movq	%rax, end_time(%rip)
    0000012f: 	subq	start_time(%rip), %rax
    00000136: 	cvtsi2sd	%rax, %xmm0
    0000013b: 	divsd	DATAat0x12828(%rip), %xmm0
    00000143: 	addq	$0x28, %rsp
    00000147: 	popq	%rbx
    00000148: 	popq	%rbp
    00000149: 	popq	%r12
    0000014b: 	popq	%r13
    0000014d: 	popq	%r14
    0000014f: 	popq	%r15
    00000151: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 337
    00000156: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp545:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	movl	$0x1, %edi
    0000016b: 	xorl	%eax, %eax
    0000016d: 	addl	$0x1, %ebp
    00000170: 	leaq	DATAat0x12802(%rip), %rsi
    00000177: 	movss	%xmm1, 0x8(%rsp)
    0000017d: 	callq	__printf_chk@PLT # Offset: 381
    00000182: 	movl	iterations(%rip), %r12d
    00000189: 	cmpl	%r12d, %ebp
    0000018c: 	jge	.Ltmp541 # Offset: 396
    0000018e: 	pxor	%xmm6, %xmm6
    00000192: 	movss	0x8(%rsp), %xmm1
    00000198: 	cvtsd2ss	init_value(%rip), %xmm6
    000001a0: 	movss	%xmm6, 0x14(%rsp)
    000001a6: 	jmp	.Ltmp546 # Offset: 422
    000001ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp542:
    000001b0: 	pxor	%xmm0, %xmm0
    000001b4: 	subss	0x10(%rsp), %xmm0
    000001ba: 	jmp	.Ltmp544 # Offset: 442
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If13mathlib_fminfIfEEvPT_iS2_PKc"

Binary Function "_Z20test_constant_resultIfi18mathlib_fpclassifyIfEEvPT_iPKc" after disassembly {
  Number      : 87
  State       : disassembled
  Address     : 0xb9c0
  Size        : 0x1d2
  MaxSize     : 0x1e0
  Offset      : 0xb9c0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi18mathlib_fpclassifyIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB086:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdx, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movq	%rdi, %rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %ecx
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%ecx, %ecx
    0000002f: 	jle	.Ltmp547 # Offset: 47
    00000035: 	leal	-0x1(%r15), %eax
    00000039: 	xorl	%r14d, %r14d
    0000003c: 	pxor	%xmm4, %xmm4
    00000040: 	leaq	0x4(%rbx,%rax,4), %r13
    00000045: 	movss	DATAat0x128e0(%rip), %xmm2
    0000004d: 	leaq	DATAat0x12802(%rip), %rbp
    00000054: 	nopl	(%rax) # Size: 4
.Ltmp559:
    00000058: 	pxor	%xmm5, %xmm5
    0000005c: 	movq	%rbx, %rax
    0000005f: 	xorl	%edx, %edx
    00000061: 	cvtsd2ss	init_value(%rip), %xmm5
    00000069: 	movaps	%xmm5, %xmm3
    0000006c: 	andps	%xmm2, %xmm3
    0000006f: 	testl	%r15d, %r15d
    00000072: 	jg	.Ltmp548 # Offset: 114
    00000074: 	jmp	.Ltmp549 # Offset: 116
    00000079: 	nopl	(%rax) # Size: 7
.Ltmp552:
    00000080: 	addl	$0x1, %edx
.Ltmp551:
    00000083: 	addq	$0x4, %rax
    00000087: 	cmpq	%r13, %rax
    0000008a: 	je	.Ltmp550 # Offset: 138
.Ltmp548:
    0000008c: 	movss	(%rax), %xmm1
    00000090: 	movaps	%xmm1, %xmm0
    00000093: 	andps	%xmm2, %xmm0
    00000096: 	ucomiss	%xmm0, %xmm0
    00000099: 	jp	.Ltmp551 # Offset: 153
    0000009b: 	ucomiss	DATAat0x12900(%rip), %xmm0
    000000a2: 	ja	.Ltmp552 # Offset: 162
    000000a4: 	comiss	DATAat0x128f0(%rip), %xmm0
    000000ab: 	jae	.Ltmp553 # Offset: 171
    000000b1: 	ucomiss	%xmm4, %xmm1
    000000b4: 	jp	.Ltmp554 # Offset: 180
    000000ba: 	jne	.Ltmp554 # Offset: 186
    000000c0: 	addq	$0x4, %rax
    000000c4: 	addl	$0x2, %edx
    000000c7: 	cmpq	%r13, %rax
    000000ca: 	jne	.Ltmp548 # Offset: 202
    000000cc: 	nopl	(%rax) # Size: 4
.Ltmp550:
    000000d0: 	ucomiss	%xmm3, %xmm3
    000000d3: 	jp	.Ltmp555 # Offset: 211
    000000d9: 	ucomiss	DATAat0x12900(%rip), %xmm3
    000000e0: 	movl	$0x1f40, %eax
    000000e5: 	ja	.Ltmp556 # Offset: 229
    000000e7: 	comiss	DATAat0x128f0(%rip), %xmm3
    000000ee: 	movl	$0x7d00, %eax
    000000f3: 	jae	.Ltmp556 # Offset: 243
.Ltmp562:
    000000f5: 	ucomiss	%xmm4, %xmm5
    000000f8: 	jp	.Ltmp557 # Offset: 248
    000000fa: 	movl	$0x3e80, %eax
    000000ff: 	je	.Ltmp556 # Offset: 255
.Ltmp557:
    00000101: 	movl	$0x5dc0, %eax
    00000106: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp556:
    00000110: 	cmpl	%eax, %edx
    00000112: 	jne	.Ltmp558 # Offset: 274
.Ltmp560:
    00000114: 	addl	$0x1, %r14d
    00000118: 	cmpl	%ecx, %r14d
    0000011b: 	jl	.Ltmp559 # Offset: 283
.Ltmp547:
    00000121: 	callq	clock@PLT # Offset: 289
    00000126: 	pxor	%xmm0, %xmm0
    0000012a: 	movq	%r12, %rdi
    0000012d: 	movq	%rax, end_time(%rip)
    00000134: 	subq	start_time(%rip), %rax
    0000013b: 	cvtsi2sd	%rax, %xmm0
    00000140: 	divsd	DATAat0x12828(%rip), %xmm0
    00000148: 	addq	$0x8, %rsp
    0000014c: 	popq	%rbx
    0000014d: 	popq	%rbp
    0000014e: 	popq	%r12
    00000150: 	popq	%r13
    00000152: 	popq	%r14
    00000154: 	popq	%r15
    00000156: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 342
    0000015b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp553:
    00000160: 	addl	$0x4, %edx
    00000163: 	jmp	.Ltmp551 # Offset: 355
    00000168: 	nopl	(%rax,%rax) # Size: 8
.Ltmp554:
    00000170: 	addl	$0x3, %edx
    00000173: 	jmp	.Ltmp551 # Offset: 371
    00000178: 	nopl	(%rax,%rax) # Size: 8
.Ltmp549:
    00000180: 	ucomiss	%xmm3, %xmm3
    00000183: 	jp	.Ltmp560 # Offset: 387
    00000185: 	ucomiss	DATAat0x12900(%rip), %xmm3
    0000018c: 	jbe	.Ltmp561 # Offset: 396
    0000018e: 	nop # Size: 2
.Ltmp558:
    00000190: 	movl	current_test(%rip), %edx
    00000196: 	movq	%rbp, %rsi
    00000199: 	movl	$0x1, %edi
    0000019e: 	xorl	%eax, %eax
    000001a0: 	callq	__printf_chk@PLT # Offset: 416
    000001a5: 	movl	iterations(%rip), %ecx
    000001ab: 	pxor	%xmm4, %xmm4
    000001af: 	movss	DATAat0x128e0(%rip), %xmm2
    000001b7: 	jmp	.Ltmp560 # Offset: 439
.Ltmp555:
    000001bc: 	xorl	%eax, %eax
    000001be: 	jmp	.Ltmp556 # Offset: 446
.Ltmp561:
    000001c3: 	comiss	DATAat0x128f0(%rip), %xmm3
    000001ca: 	jb	.Ltmp562 # Offset: 458
    000001d0: 	jmp	.Ltmp558 # Offset: 464
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi18mathlib_fpclassifyIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi16mathlib_isnormalIfEEvPT_iPKc" after disassembly {
  Number      : 88
  State       : disassembled
  Address     : 0xbba0
  Size        : 0x272
  MaxSize     : 0x280
  Offset      : 0xbba0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi16mathlib_isnormalIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB087:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp563 # Offset: 49
    00000037: 	movl	%r13d, %eax
    0000003a: 	movl	%r13d, %r12d
    0000003d: 	movaps	DATAat0x128d0(%rip), %xmm6
    00000044: 	xorl	%r15d, %r15d
    00000047: 	shrl	$0x2, %eax
    0000004a: 	pxor	%xmm9, %xmm9
    0000004f: 	leal	-0x1(%r13), %ebp
    00000053: 	andl	$-0x4, %r12d
    00000057: 	subl	$0x1, %eax
    0000005a: 	movss	DATAat0x12900(%rip), %xmm7
    00000062: 	pcmpeqd	%xmm3, %xmm3
    00000066: 	movaps	DATAat0x128f0(%rip), %xmm5
    0000006d: 	shlq	$0x4, %rax
    00000071: 	movaps	DATAat0x12900(%rip), %xmm4
    00000078: 	movss	DATAat0x128e0(%rip), %xmm8
    00000081: 	cvtsd2ss	init_value(%rip), %xmm9
    0000008a: 	leaq	0x10(%r14,%rax), %rbx
    0000008f: 	nop # Size: 1
.Ltmp568:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r13d, %r13d
    00000095: 	jle	.Ltmp564 # Offset: 149
    0000009b: 	cmpl	$0x2, %ebp
    0000009e: 	jbe	.Ltmp565 # Offset: 158
    000000a4: 	movq	%r14, %rax
    000000a7: 	pxor	%xmm1, %xmm1
    000000ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp566:
    000000b0: 	movups	(%rax), %xmm0
    000000b3: 	movaps	%xmm5, %xmm2
    000000b6: 	addq	$0x10, %rax
    000000ba: 	andps	%xmm6, %xmm0
    000000bd: 	cmpnleps	%xmm0, %xmm2
    000000c1: 	cmpnleps	%xmm4, %xmm0
    000000c5: 	por	%xmm2, %xmm0
    000000c9: 	pxor	%xmm3, %xmm0
    000000cd: 	psubd	%xmm0, %xmm1
    000000d1: 	cmpq	%rbx, %rax
    000000d4: 	jne	.Ltmp566 # Offset: 212
    000000d6: 	movdqa	%xmm1, %xmm0
    000000da: 	movl	%r12d, %edx
    000000dd: 	psrldq	$0x8, %xmm0
    000000e2: 	paddd	%xmm0, %xmm1
    000000e6: 	movdqa	%xmm1, %xmm0
    000000ea: 	psrldq	$0x4, %xmm0
    000000ef: 	paddd	%xmm0, %xmm1
    000000f3: 	movd	%xmm1, %eax
    000000f7: 	cmpl	%r13d, %r12d
    000000fa: 	je	.Ltmp564 # Offset: 250
.Ltmp569:
    00000100: 	movslq	%edx, %rdi
    00000103: 	movss	(%r14,%rdi,4), %xmm0
    00000109: 	leaq	(,%rdi,4), %r8
    00000111: 	andps	%xmm8, %xmm0
    00000115: 	ucomiss	%xmm0, %xmm7
    00000118: 	setb	%dil
    0000011c: 	ucomiss	DATAat0x128f0(%rip), %xmm0
    00000123: 	setb	%r9b
    00000127: 	orl	%r9d, %edi
    0000012a: 	cmpb	$0x1, %dil
    0000012e: 	leal	0x1(%rdx), %edi
    00000131: 	adcl	$0x0, %eax
    00000134: 	cmpl	%edi, %r13d
    00000137: 	jle	.Ltmp564 # Offset: 311
    00000139: 	movss	0x4(%r14,%r8), %xmm0
    00000140: 	andps	%xmm8, %xmm0
    00000144: 	ucomiss	DATAat0x128f0(%rip), %xmm0
    0000014b: 	setb	%dil
    0000014f: 	ucomiss	%xmm0, %xmm7
    00000152: 	setb	%r9b
    00000156: 	orl	%r9d, %edi
    00000159: 	cmpb	$0x1, %dil
    0000015d: 	adcl	$0x0, %eax
    00000160: 	addl	$0x2, %edx
    00000163: 	cmpl	%edx, %r13d
    00000166: 	jle	.Ltmp564 # Offset: 358
    00000168: 	movss	0x8(%r14,%r8), %xmm0
    0000016f: 	andps	%xmm8, %xmm0
    00000173: 	ucomiss	DATAat0x128f0(%rip), %xmm0
    0000017a: 	setb	%dl
    0000017d: 	ucomiss	%xmm0, %xmm7
    00000180: 	setb	%dil
    00000184: 	orl	%edi, %edx
    00000186: 	cmpb	$0x1, %dl
    00000189: 	adcl	$0x0, %eax
.Ltmp564:
    0000018c: 	movaps	%xmm9, %xmm0
    00000190: 	andps	%xmm8, %xmm0
    00000194: 	ucomiss	%xmm0, %xmm7
    00000197: 	setb	%dl
    0000019a: 	ucomiss	DATAat0x128f0(%rip), %xmm0
    000001a1: 	setb	%dil
    000001a5: 	orl	%edi, %edx
    000001a7: 	cmpb	$0x1, %dl
    000001aa: 	sbbl	%edx, %edx
    000001ac: 	andl	$0x1f40, %edx
    000001b2: 	cmpl	%eax, %edx
    000001b4: 	je	.Ltmp567 # Offset: 436
    000001b6: 	movl	current_test(%rip), %edx
    000001bc: 	leaq	DATAat0x12802(%rip), %rsi
    000001c3: 	movl	$0x1, %edi
    000001c8: 	xorl	%eax, %eax
    000001ca: 	addl	$0x1, %r15d
    000001ce: 	callq	__printf_chk@PLT # Offset: 462
    000001d3: 	movl	iterations(%rip), %esi
    000001d9: 	cmpl	%esi, %r15d
    000001dc: 	jge	.Ltmp563 # Offset: 476
    000001de: 	pxor	%xmm9, %xmm9
    000001e3: 	movss	DATAat0x12900(%rip), %xmm7
    000001eb: 	movaps	DATAat0x128d0(%rip), %xmm6
    000001f2: 	movss	DATAat0x128e0(%rip), %xmm8
    000001fb: 	movaps	DATAat0x128f0(%rip), %xmm5
    00000202: 	movaps	DATAat0x12900(%rip), %xmm4
    00000209: 	pcmpeqd	%xmm3, %xmm3
    0000020d: 	cvtsd2ss	init_value(%rip), %xmm9
    00000216: 	jmp	.Ltmp568 # Offset: 534
    0000021b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp567:
    00000220: 	addl	$0x1, %r15d
    00000224: 	cmpl	%esi, %r15d
    00000227: 	jl	.Ltmp568 # Offset: 551
.Ltmp563:
    0000022d: 	callq	clock@PLT # Offset: 557
    00000232: 	pxor	%xmm0, %xmm0
    00000236: 	movq	0x8(%rsp), %rdi
    0000023b: 	movq	%rax, end_time(%rip)
    00000242: 	subq	start_time(%rip), %rax
    00000249: 	cvtsi2sd	%rax, %xmm0
    0000024e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000256: 	addq	$0x18, %rsp
    0000025a: 	popq	%rbx
    0000025b: 	popq	%rbp
    0000025c: 	popq	%r12
    0000025e: 	popq	%r13
    00000260: 	popq	%r14
    00000262: 	popq	%r15
    00000264: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 612
.Ltmp565:
    00000269: 	xorl	%edx, %edx
    0000026b: 	xorl	%eax, %eax
    0000026d: 	jmp	.Ltmp569 # Offset: 621
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi16mathlib_isnormalIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi15inline_isfiniteIfEEvPT_iPKc" after disassembly {
  Number      : 89
  State       : disassembled
  Address     : 0xbe20
  Size        : 0x225
  MaxSize     : 0x230
  Offset      : 0xbe20
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi15inline_isfiniteIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB088:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	movl	%esi, %r13d
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp570 # Offset: 49
    00000037: 	movl	%r13d, %eax
    0000003a: 	movl	%r13d, %ebp
    0000003d: 	leal	-0x1(%r13), %ebx
    00000041: 	xorl	%r14d, %r14d
    00000044: 	shrl	$0x2, %eax
    00000047: 	andl	$-0x4, %ebp
    0000004a: 	subl	$0x1, %eax
    0000004d: 	shlq	$0x4, %rax
    00000051: 	leaq	0x10(%r15,%rax), %r12
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp579:
    00000060: 	pxor	%xmm7, %xmm7
    00000064: 	cvtsd2ss	init_value(%rip), %xmm7
    0000006c: 	testl	%r13d, %r13d
    0000006f: 	jle	.Ltmp571 # Offset: 111
    00000075: 	cmpl	$0x2, %ebx
    00000078: 	jbe	.Ltmp572 # Offset: 120
    0000007e: 	movaps	DATAat0x128d0(%rip), %xmm6
    00000085: 	movaps	DATAat0x12900(%rip), %xmm5
    0000008c: 	movq	%r15, %rax
    0000008f: 	pxor	%xmm2, %xmm2
    00000093: 	movdqa	DATAat0x12910(%rip), %xmm4
    0000009b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp573:
    000000a0: 	movups	(%rax), %xmm1
    000000a3: 	movaps	%xmm5, %xmm0
    000000a6: 	addq	$0x10, %rax
    000000aa: 	movaps	%xmm1, %xmm3
    000000ad: 	cmpeqps	%xmm1, %xmm1
    000000b1: 	andps	%xmm6, %xmm3
    000000b4: 	cmpnltps	%xmm3, %xmm0
    000000b8: 	pand	%xmm4, %xmm0
    000000bc: 	pand	%xmm1, %xmm0
    000000c0: 	paddd	%xmm0, %xmm2
    000000c4: 	cmpq	%rax, %r12
    000000c7: 	jne	.Ltmp573 # Offset: 199
    000000c9: 	movdqa	%xmm2, %xmm0
    000000cd: 	movl	%ebp, %edx
    000000cf: 	psrldq	$0x8, %xmm0
    000000d4: 	paddd	%xmm0, %xmm2
    000000d8: 	movdqa	%xmm2, %xmm0
    000000dc: 	psrldq	$0x4, %xmm0
    000000e1: 	paddd	%xmm0, %xmm2
    000000e5: 	movd	%xmm2, %eax
    000000e9: 	cmpl	%ebp, %r13d
    000000ec: 	je	.Ltmp574 # Offset: 236
.Ltmp582:
    000000ee: 	movslq	%edx, %rdi
    000000f1: 	movss	(%r15,%rdi,4), %xmm0
    000000f7: 	leaq	(,%rdi,4), %r8
    000000ff: 	ucomiss	%xmm0, %xmm0
    00000102: 	jp	.Ltmp575 # Offset: 258
    00000104: 	xorl	%edi, %edi
    00000106: 	andps	DATAat0x128e0(%rip), %xmm0
    0000010d: 	ucomiss	DATAat0x12900(%rip), %xmm0
    00000114: 	setbe	%dil
    00000118: 	addl	%edi, %eax
.Ltmp575:
    0000011a: 	leal	0x1(%rdx), %edi
    0000011d: 	cmpl	%edi, %r13d
    00000120: 	jle	.Ltmp574 # Offset: 288
    00000122: 	movss	0x4(%r15,%r8), %xmm0
    00000129: 	ucomiss	%xmm0, %xmm0
    0000012c: 	jp	.Ltmp576 # Offset: 300
    0000012e: 	xorl	%edi, %edi
    00000130: 	andps	DATAat0x128e0(%rip), %xmm0
    00000137: 	ucomiss	DATAat0x12900(%rip), %xmm0
    0000013e: 	setbe	%dil
    00000142: 	addl	%edi, %eax
.Ltmp576:
    00000144: 	addl	$0x2, %edx
    00000147: 	cmpl	%edx, %r13d
    0000014a: 	jle	.Ltmp574 # Offset: 330
    0000014c: 	movss	0x8(%r15,%r8), %xmm0
    00000153: 	ucomiss	%xmm0, %xmm0
    00000156: 	jp	.Ltmp574 # Offset: 342
    00000158: 	xorl	%edx, %edx
    0000015a: 	andps	DATAat0x128e0(%rip), %xmm0
    00000161: 	ucomiss	DATAat0x12900(%rip), %xmm0
    00000168: 	setbe	%dl
    0000016b: 	addl	%edx, %eax
.Ltmp574:
    0000016d: 	ucomiss	%xmm7, %xmm7
    00000170: 	jp	.Ltmp577 # Offset: 368
.Ltmp581:
    00000176: 	andps	DATAat0x128e0(%rip), %xmm7
    0000017d: 	ucomiss	DATAat0x12900(%rip), %xmm7
    00000184: 	setbe	%dl
.Ltmp580:
    00000187: 	shll	$0x1f, %edx
    0000018a: 	sarl	$0x1f, %edx
    0000018d: 	andl	$0x1f40, %edx
    00000193: 	cmpl	%eax, %edx
    00000195: 	je	.Ltmp578 # Offset: 405
    00000197: 	movl	current_test(%rip), %edx
    0000019d: 	leaq	DATAat0x12802(%rip), %rsi
    000001a4: 	movl	$0x1, %edi
    000001a9: 	xorl	%eax, %eax
    000001ab: 	callq	__printf_chk@PLT # Offset: 427
    000001b0: 	movl	iterations(%rip), %esi
.Ltmp578:
    000001b6: 	addl	$0x1, %r14d
    000001ba: 	cmpl	%esi, %r14d
    000001bd: 	jl	.Ltmp579 # Offset: 445
.Ltmp570:
    000001c3: 	callq	clock@PLT # Offset: 451
    000001c8: 	pxor	%xmm0, %xmm0
    000001cc: 	movq	0x8(%rsp), %rdi
    000001d1: 	movq	%rax, end_time(%rip)
    000001d8: 	subq	start_time(%rip), %rax
    000001df: 	cvtsi2sd	%rax, %xmm0
    000001e4: 	divsd	DATAat0x12828(%rip), %xmm0
    000001ec: 	addq	$0x18, %rsp
    000001f0: 	popq	%rbx
    000001f1: 	popq	%rbp
    000001f2: 	popq	%r12
    000001f4: 	popq	%r13
    000001f6: 	popq	%r14
    000001f8: 	popq	%r15
    000001fa: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 506
    000001ff: 	nop # Size: 1
.Ltmp577:
    00000200: 	xorl	%edx, %edx
    00000202: 	jmp	.Ltmp580 # Offset: 514
    00000207: 	nopw	(%rax,%rax) # Size: 9
.Ltmp571:
    00000210: 	ucomiss	%xmm7, %xmm7
    00000213: 	jp	.Ltmp578 # Offset: 531
    00000215: 	xorl	%eax, %eax
    00000217: 	jmp	.Ltmp581 # Offset: 535
.Ltmp572:
    0000021c: 	xorl	%edx, %edx
    0000021e: 	xorl	%eax, %eax
    00000220: 	jmp	.Ltmp582 # Offset: 544
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi15inline_isfiniteIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi16mathlib_isfiniteIfEEvPT_iPKc" after disassembly {
  Number      : 90
  State       : disassembled
  Address     : 0xc050
  Size        : 0x21a
  MaxSize     : 0x220
  Offset      : 0xc050
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi16mathlib_isfiniteIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB089:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp583 # Offset: 49
    00000037: 	leal	-0x1(%r14), %eax
    0000003b: 	movl	%r14d, %r12d
    0000003e: 	movaps	DATAat0x128d0(%rip), %xmm4
    00000045: 	xorl	%ebp, %ebp
    00000047: 	movl	%eax, 0x4(%rsp)
    0000004b: 	movl	%r14d, %eax
    0000004e: 	pxor	%xmm7, %xmm7
    00000052: 	andl	$-0x4, %r12d
    00000056: 	shrl	$0x2, %eax
    00000059: 	movss	DATAat0x12900(%rip), %xmm5
    00000061: 	xorl	%r13d, %r13d
    00000064: 	movaps	DATAat0x12900(%rip), %xmm3
    0000006b: 	subl	$0x1, %eax
    0000006e: 	movdqa	DATAat0x12910(%rip), %xmm2
    00000076: 	movss	DATAat0x128e0(%rip), %xmm6
    0000007e: 	cvtsd2ss	init_value(%rip), %xmm7
    00000086: 	shlq	$0x4, %rax
    0000008a: 	leaq	0x10(%r15,%rax), %rbx
    0000008f: 	nop # Size: 1
.Ltmp588:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp584 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp585 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm1, %xmm1
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp586:
    000000b0: 	movups	(%rax), %xmm0
    000000b3: 	addq	$0x10, %rax
    000000b7: 	andps	%xmm4, %xmm0
    000000ba: 	cmpnleps	%xmm3, %xmm0
    000000be: 	pandn	%xmm2, %xmm0
    000000c2: 	paddd	%xmm0, %xmm1
    000000c6: 	cmpq	%rbx, %rax
    000000c9: 	jne	.Ltmp586 # Offset: 201
    000000cb: 	movdqa	%xmm1, %xmm0
    000000cf: 	movl	%r12d, %edx
    000000d2: 	psrldq	$0x8, %xmm0
    000000d7: 	paddd	%xmm0, %xmm1
    000000db: 	movdqa	%xmm1, %xmm0
    000000df: 	psrldq	$0x4, %xmm0
    000000e4: 	paddd	%xmm0, %xmm1
    000000e8: 	movd	%xmm1, %eax
    000000ec: 	cmpl	%r14d, %r12d
    000000ef: 	je	.Ltmp584 # Offset: 239
.Ltmp589:
    000000f1: 	movslq	%edx, %r9
    000000f4: 	movss	(%r15,%r9,4), %xmm0
    000000fa: 	leaq	(,%r9,4), %rdi
    00000102: 	xorl	%r9d, %r9d
    00000105: 	andps	%xmm6, %xmm0
    00000108: 	ucomiss	%xmm0, %xmm5
    0000010b: 	setae	%r9b
    0000010f: 	addl	%r9d, %eax
    00000112: 	leal	0x1(%rdx), %r9d
    00000116: 	cmpl	%r9d, %r14d
    00000119: 	jle	.Ltmp584 # Offset: 281
    0000011b: 	movss	0x4(%r15,%rdi), %xmm0
    00000122: 	xorl	%r9d, %r9d
    00000125: 	andps	%xmm6, %xmm0
    00000128: 	ucomiss	%xmm0, %xmm5
    0000012b: 	setae	%r9b
    0000012f: 	addl	$0x2, %edx
    00000132: 	addl	%r9d, %eax
    00000135: 	cmpl	%edx, %r14d
    00000138: 	jle	.Ltmp584 # Offset: 312
    0000013a: 	movss	0x8(%r15,%rdi), %xmm0
    00000141: 	xorl	%edx, %edx
    00000143: 	andps	%xmm6, %xmm0
    00000146: 	ucomiss	%xmm0, %xmm5
    00000149: 	setae	%dl
    0000014c: 	addl	%edx, %eax
.Ltmp584:
    0000014e: 	movaps	%xmm7, %xmm0
    00000151: 	movl	$0x1f40, %edx
    00000156: 	andps	%xmm6, %xmm0
    00000159: 	ucomiss	%xmm0, %xmm5
    0000015c: 	cmovbl	%ebp, %edx
    0000015f: 	cmpl	%eax, %edx
    00000161: 	je	.Ltmp587 # Offset: 353
    00000163: 	movl	current_test(%rip), %edx
    00000169: 	leaq	DATAat0x12802(%rip), %rsi
    00000170: 	movl	$0x1, %edi
    00000175: 	xorl	%eax, %eax
    00000177: 	addl	$0x1, %r13d
    0000017b: 	callq	__printf_chk@PLT # Offset: 379
    00000180: 	movl	iterations(%rip), %esi
    00000186: 	cmpl	%esi, %r13d
    00000189: 	jge	.Ltmp583 # Offset: 393
    0000018b: 	pxor	%xmm7, %xmm7
    0000018f: 	movss	DATAat0x12900(%rip), %xmm5
    00000197: 	movaps	DATAat0x128d0(%rip), %xmm4
    0000019e: 	movss	DATAat0x128e0(%rip), %xmm6
    000001a6: 	movaps	DATAat0x12900(%rip), %xmm3
    000001ad: 	movdqa	DATAat0x12910(%rip), %xmm2
    000001b5: 	cvtsd2ss	init_value(%rip), %xmm7
    000001bd: 	jmp	.Ltmp588 # Offset: 445
    000001c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp587:
    000001c8: 	addl	$0x1, %r13d
    000001cc: 	cmpl	%esi, %r13d
    000001cf: 	jl	.Ltmp588 # Offset: 463
.Ltmp583:
    000001d5: 	callq	clock@PLT # Offset: 469
    000001da: 	pxor	%xmm0, %xmm0
    000001de: 	movq	0x8(%rsp), %rdi
    000001e3: 	movq	%rax, end_time(%rip)
    000001ea: 	subq	start_time(%rip), %rax
    000001f1: 	cvtsi2sd	%rax, %xmm0
    000001f6: 	divsd	DATAat0x12828(%rip), %xmm0
    000001fe: 	addq	$0x18, %rsp
    00000202: 	popq	%rbx
    00000203: 	popq	%rbp
    00000204: 	popq	%r12
    00000206: 	popq	%r13
    00000208: 	popq	%r14
    0000020a: 	popq	%r15
    0000020c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 524
.Ltmp585:
    00000211: 	xorl	%edx, %edx
    00000213: 	xorl	%eax, %eax
    00000215: 	jmp	.Ltmp589 # Offset: 533
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi16mathlib_isfiniteIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi12inline_isinfIfEEvPT_iPKc" after disassembly {
  Number      : 91
  State       : disassembled
  Address     : 0xc270
  Size        : 0x20e
  MaxSize     : 0x210
  Offset      : 0xc270
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi12inline_isinfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB090:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %edi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%edi, %edi
    00000031: 	jle	.Ltmp590 # Offset: 49
    00000037: 	leal	-0x1(%r14), %eax
    0000003b: 	movl	%r14d, %r12d
    0000003e: 	movaps	DATAat0x128d0(%rip), %xmm3
    00000045: 	xorl	%ebp, %ebp
    00000047: 	movl	%eax, 0x4(%rsp)
    0000004b: 	movl	%r14d, %eax
    0000004e: 	pxor	%xmm5, %xmm5
    00000052: 	andl	$-0x4, %r12d
    00000056: 	shrl	$0x2, %eax
    00000059: 	movaps	DATAat0x12920(%rip), %xmm2
    00000060: 	xorl	%r13d, %r13d
    00000063: 	movss	DATAat0x128e0(%rip), %xmm4
    0000006b: 	subl	$0x1, %eax
    0000006e: 	cvtsd2ss	init_value(%rip), %xmm5
    00000076: 	shlq	$0x4, %rax
    0000007a: 	leaq	0x10(%r15,%rax), %rbx
    0000007f: 	nop # Size: 1
.Ltmp596:
    00000080: 	xorl	%eax, %eax
    00000082: 	testl	%r14d, %r14d
    00000085: 	jle	.Ltmp591 # Offset: 133
    0000008b: 	cmpl	$0x2, 0x4(%rsp)
    00000090: 	jbe	.Ltmp592 # Offset: 144
    00000096: 	movq	%r15, %rax
    00000099: 	pxor	%xmm1, %xmm1
    0000009d: 	nopl	(%rax) # Size: 3
.Ltmp593:
    000000a0: 	movups	(%rax), %xmm0
    000000a3: 	addq	$0x10, %rax
    000000a7: 	andps	%xmm3, %xmm0
    000000aa: 	cmpeqps	%xmm2, %xmm0
    000000ae: 	psubd	%xmm0, %xmm1
    000000b2: 	cmpq	%rbx, %rax
    000000b5: 	jne	.Ltmp593 # Offset: 181
    000000b7: 	movdqa	%xmm1, %xmm0
    000000bb: 	movl	%r12d, %edx
    000000be: 	psrldq	$0x8, %xmm0
    000000c3: 	paddd	%xmm0, %xmm1
    000000c7: 	movdqa	%xmm1, %xmm0
    000000cb: 	psrldq	$0x4, %xmm0
    000000d0: 	paddd	%xmm0, %xmm1
    000000d4: 	movd	%xmm1, %eax
    000000d8: 	cmpl	%r14d, %r12d
    000000db: 	je	.Ltmp591 # Offset: 219
.Ltmp598:
    000000dd: 	movslq	%edx, %rsi
    000000e0: 	movss	(%r15,%rsi,4), %xmm0
    000000e6: 	leaq	(,%rsi,4), %r10
    000000ee: 	xorl	%esi, %esi
    000000f0: 	andps	%xmm4, %xmm0
    000000f3: 	ucomiss	DATAat0x12920(%rip), %xmm0
    000000fa: 	setnp	%sil
    000000fe: 	cmovnel	%r13d, %esi
    00000102: 	addl	%esi, %eax
    00000104: 	leal	0x1(%rdx), %esi
    00000107: 	cmpl	%esi, %r14d
    0000010a: 	jle	.Ltmp591 # Offset: 266
    0000010c: 	movss	0x4(%r15,%r10), %xmm0
    00000113: 	xorl	%esi, %esi
    00000115: 	andps	%xmm4, %xmm0
    00000118: 	ucomiss	DATAat0x12920(%rip), %xmm0
    0000011f: 	setnp	%sil
    00000123: 	cmovnel	%r13d, %esi
    00000127: 	addl	$0x2, %edx
    0000012a: 	addl	%esi, %eax
    0000012c: 	cmpl	%edx, %r14d
    0000012f: 	jle	.Ltmp591 # Offset: 303
    00000131: 	movss	0x8(%r15,%r10), %xmm0
    00000138: 	xorl	%edx, %edx
    0000013a: 	andps	%xmm4, %xmm0
    0000013d: 	ucomiss	DATAat0x12920(%rip), %xmm0
    00000144: 	setnp	%dl
    00000147: 	cmovnel	%r13d, %edx
    0000014b: 	addl	%edx, %eax
.Ltmp591:
    0000014d: 	movaps	%xmm5, %xmm0
    00000150: 	andps	%xmm4, %xmm0
    00000153: 	ucomiss	DATAat0x12920(%rip), %xmm0
    0000015a: 	jp	.Ltmp594 # Offset: 346
    0000015c: 	movl	$0x1f40, %edx
    00000161: 	jne	.Ltmp594 # Offset: 353
    00000163: 	cmpl	%eax, %edx
    00000165: 	je	.Ltmp595 # Offset: 357
.Ltmp597:
    00000167: 	movl	current_test(%rip), %edx
    0000016d: 	movl	$0x1, %edi
    00000172: 	xorl	%eax, %eax
    00000174: 	addl	$0x1, %ebp
    00000177: 	leaq	DATAat0x12802(%rip), %rsi
    0000017e: 	callq	__printf_chk@PLT # Offset: 382
    00000183: 	movl	iterations(%rip), %edi
    00000189: 	cmpl	%edi, %ebp
    0000018b: 	jge	.Ltmp590 # Offset: 395
    0000018d: 	pxor	%xmm5, %xmm5
    00000191: 	movaps	DATAat0x128d0(%rip), %xmm3
    00000198: 	movaps	DATAat0x12920(%rip), %xmm2
    0000019f: 	movss	DATAat0x128e0(%rip), %xmm4
    000001a7: 	cvtsd2ss	init_value(%rip), %xmm5
    000001af: 	jmp	.Ltmp596 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp594:
    000001b8: 	xorl	%edx, %edx
    000001ba: 	cmpl	%eax, %edx
    000001bc: 	jne	.Ltmp597 # Offset: 444
.Ltmp595:
    000001be: 	addl	$0x1, %ebp
    000001c1: 	cmpl	%edi, %ebp
    000001c3: 	jl	.Ltmp596 # Offset: 451
.Ltmp590:
    000001c9: 	callq	clock@PLT # Offset: 457
    000001ce: 	pxor	%xmm0, %xmm0
    000001d2: 	movq	0x8(%rsp), %rdi
    000001d7: 	movq	%rax, end_time(%rip)
    000001de: 	subq	start_time(%rip), %rax
    000001e5: 	cvtsi2sd	%rax, %xmm0
    000001ea: 	divsd	DATAat0x12828(%rip), %xmm0
    000001f2: 	addq	$0x18, %rsp
    000001f6: 	popq	%rbx
    000001f7: 	popq	%rbp
    000001f8: 	popq	%r12
    000001fa: 	popq	%r13
    000001fc: 	popq	%r14
    000001fe: 	popq	%r15
    00000200: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 512
.Ltmp592:
    00000205: 	xorl	%edx, %edx
    00000207: 	xorl	%eax, %eax
    00000209: 	jmp	.Ltmp598 # Offset: 521
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi12inline_isinfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi13mathlib_isinfIfEEvPT_iPKc" after disassembly {
  Number      : 92
  State       : disassembled
  Address     : 0xc480
  Size        : 0x222
  MaxSize     : 0x230
  Offset      : 0xc480
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi13mathlib_isinfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB091:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp599 # Offset: 49
    00000037: 	leal	-0x1(%r14), %eax
    0000003b: 	movl	%r14d, %r12d
    0000003e: 	movaps	DATAat0x128d0(%rip), %xmm5
    00000045: 	xorl	%ebp, %ebp
    00000047: 	movl	%eax, 0x4(%rsp)
    0000004b: 	movl	%r14d, %eax
    0000004e: 	pxor	%xmm7, %xmm7
    00000052: 	andl	$-0x4, %r12d
    00000056: 	shrl	$0x2, %eax
    00000059: 	movaps	DATAat0x12900(%rip), %xmm4
    00000060: 	xorl	%r13d, %r13d
    00000063: 	movdqa	DATAat0x12910(%rip), %xmm3
    0000006b: 	subl	$0x1, %eax
    0000006e: 	movss	DATAat0x128e0(%rip), %xmm6
    00000076: 	cvtsd2ss	init_value(%rip), %xmm7
    0000007e: 	shlq	$0x4, %rax
    00000082: 	leaq	0x10(%r15,%rax), %rbx
    00000087: 	nopw	(%rax,%rax) # Size: 9
.Ltmp604:
    00000090: 	xorl	%eax, %eax
    00000092: 	testl	%r14d, %r14d
    00000095: 	jle	.Ltmp600 # Offset: 149
    0000009b: 	cmpl	$0x2, 0x4(%rsp)
    000000a0: 	jbe	.Ltmp601 # Offset: 160
    000000a6: 	movq	%r15, %rax
    000000a9: 	pxor	%xmm2, %xmm2
    000000ad: 	nopl	(%rax) # Size: 3
.Ltmp602:
    000000b0: 	movups	(%rax), %xmm1
    000000b3: 	movaps	%xmm4, %xmm0
    000000b6: 	addq	$0x10, %rax
    000000ba: 	andps	%xmm5, %xmm1
    000000bd: 	cmpnltps	%xmm1, %xmm0
    000000c1: 	pandn	%xmm3, %xmm0
    000000c5: 	paddd	%xmm0, %xmm2
    000000c9: 	cmpq	%rbx, %rax
    000000cc: 	jne	.Ltmp602 # Offset: 204
    000000ce: 	movdqa	%xmm2, %xmm0
    000000d2: 	movl	%r12d, %edx
    000000d5: 	psrldq	$0x8, %xmm0
    000000da: 	paddd	%xmm0, %xmm2
    000000de: 	movdqa	%xmm2, %xmm0
    000000e2: 	psrldq	$0x4, %xmm0
    000000e7: 	paddd	%xmm0, %xmm2
    000000eb: 	movd	%xmm2, %eax
    000000ef: 	cmpl	%r14d, %r12d
    000000f2: 	je	.Ltmp600 # Offset: 242
.Ltmp605:
    000000f4: 	movslq	%edx, %r9
    000000f7: 	movss	(%r15,%r9,4), %xmm0
    000000fd: 	leaq	(,%r9,4), %rdi
    00000105: 	xorl	%r9d, %r9d
    00000108: 	andps	%xmm6, %xmm0
    0000010b: 	ucomiss	DATAat0x12900(%rip), %xmm0
    00000112: 	seta	%r9b
    00000116: 	addl	%r9d, %eax
    00000119: 	leal	0x1(%rdx), %r9d
    0000011d: 	cmpl	%r9d, %r14d
    00000120: 	jle	.Ltmp600 # Offset: 288
    00000122: 	movss	0x4(%r15,%rdi), %xmm0
    00000129: 	xorl	%r9d, %r9d
    0000012c: 	andps	%xmm6, %xmm0
    0000012f: 	ucomiss	DATAat0x12900(%rip), %xmm0
    00000136: 	seta	%r9b
    0000013a: 	addl	$0x2, %edx
    0000013d: 	addl	%r9d, %eax
    00000140: 	cmpl	%edx, %r14d
    00000143: 	jle	.Ltmp600 # Offset: 323
    00000145: 	movss	0x8(%r15,%rdi), %xmm0
    0000014c: 	xorl	%edx, %edx
    0000014e: 	andps	%xmm6, %xmm0
    00000151: 	ucomiss	DATAat0x12900(%rip), %xmm0
    00000158: 	seta	%dl
    0000015b: 	addl	%edx, %eax
.Ltmp600:
    0000015d: 	movaps	%xmm7, %xmm0
    00000160: 	movl	$0x1f40, %edx
    00000165: 	andps	%xmm6, %xmm0
    00000168: 	ucomiss	DATAat0x12900(%rip), %xmm0
    0000016f: 	cmovbel	%ebp, %edx
    00000172: 	cmpl	%eax, %edx
    00000174: 	je	.Ltmp603 # Offset: 372
    00000176: 	movl	current_test(%rip), %edx
    0000017c: 	leaq	DATAat0x12802(%rip), %rsi
    00000183: 	movl	$0x1, %edi
    00000188: 	xorl	%eax, %eax
    0000018a: 	addl	$0x1, %r13d
    0000018e: 	callq	__printf_chk@PLT # Offset: 398
    00000193: 	movl	iterations(%rip), %esi
    00000199: 	cmpl	%esi, %r13d
    0000019c: 	jge	.Ltmp599 # Offset: 412
    0000019e: 	pxor	%xmm7, %xmm7
    000001a2: 	movaps	DATAat0x128d0(%rip), %xmm5
    000001a9: 	movaps	DATAat0x12900(%rip), %xmm4
    000001b0: 	movss	DATAat0x128e0(%rip), %xmm6
    000001b8: 	movdqa	DATAat0x12910(%rip), %xmm3
    000001c0: 	cvtsd2ss	init_value(%rip), %xmm7
    000001c8: 	jmp	.Ltmp604 # Offset: 456
    000001cd: 	nopl	(%rax) # Size: 3
.Ltmp603:
    000001d0: 	addl	$0x1, %r13d
    000001d4: 	cmpl	%esi, %r13d
    000001d7: 	jl	.Ltmp604 # Offset: 471
.Ltmp599:
    000001dd: 	callq	clock@PLT # Offset: 477
    000001e2: 	pxor	%xmm0, %xmm0
    000001e6: 	movq	0x8(%rsp), %rdi
    000001eb: 	movq	%rax, end_time(%rip)
    000001f2: 	subq	start_time(%rip), %rax
    000001f9: 	cvtsi2sd	%rax, %xmm0
    000001fe: 	divsd	DATAat0x12828(%rip), %xmm0
    00000206: 	addq	$0x18, %rsp
    0000020a: 	popq	%rbx
    0000020b: 	popq	%rbp
    0000020c: 	popq	%r12
    0000020e: 	popq	%r13
    00000210: 	popq	%r14
    00000212: 	popq	%r15
    00000214: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 532
.Ltmp601:
    00000219: 	xorl	%edx, %edx
    0000021b: 	xorl	%eax, %eax
    0000021d: 	jmp	.Ltmp605 # Offset: 541
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi13mathlib_isinfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi12inline_isnanIfEEvPT_iPKc" after disassembly {
  Number      : 93
  State       : disassembled
  Address     : 0xc6b0
  Size        : 0x1ba
  MaxSize     : 0x1c0
  Offset      : 0xc6b0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi12inline_isnanIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB092:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp606 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	movl	%r13d, %r12d
    0000003e: 	pxor	%xmm2, %xmm2
    00000042: 	xorl	%r14d, %r14d
    00000045: 	movl	%eax, 0x4(%rsp)
    00000049: 	movl	%r13d, %eax
    0000004c: 	andl	$-0x4, %r12d
    00000050: 	xorl	%ebp, %ebp
    00000052: 	shrl	$0x2, %eax
    00000055: 	cvtsd2ss	init_value(%rip), %xmm2
    0000005d: 	subl	$0x1, %eax
    00000060: 	shlq	$0x4, %rax
    00000064: 	leaq	0x10(%rbx,%rax), %r15
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp611:
    00000070: 	xorl	%eax, %eax
    00000072: 	testl	%r13d, %r13d
    00000075: 	jle	.Ltmp607 # Offset: 117
    0000007b: 	cmpl	$0x2, 0x4(%rsp)
    00000080: 	jbe	.Ltmp608 # Offset: 128
    00000086: 	movq	%rbx, %rax
    00000089: 	pxor	%xmm1, %xmm1
    0000008d: 	nopl	(%rax) # Size: 3
.Ltmp609:
    00000090: 	movups	(%rax), %xmm0
    00000093: 	addq	$0x10, %rax
    00000097: 	cmpneqps	%xmm0, %xmm0
    0000009b: 	psubd	%xmm0, %xmm1
    0000009f: 	cmpq	%r15, %rax
    000000a2: 	jne	.Ltmp609 # Offset: 162
    000000a4: 	movdqa	%xmm1, %xmm0
    000000a8: 	movl	%r12d, %edx
    000000ab: 	psrldq	$0x8, %xmm0
    000000b0: 	paddd	%xmm0, %xmm1
    000000b4: 	movdqa	%xmm1, %xmm0
    000000b8: 	psrldq	$0x4, %xmm0
    000000bd: 	paddd	%xmm0, %xmm1
    000000c1: 	movd	%xmm1, %eax
    000000c5: 	cmpl	%r13d, %r12d
    000000c8: 	je	.Ltmp607 # Offset: 200
.Ltmp612:
    000000ca: 	movslq	%edx, %r11
    000000cd: 	movss	(%rbx,%r11,4), %xmm0
    000000d3: 	leaq	(,%r11,4), %rdi
    000000db: 	xorl	%r11d, %r11d
    000000de: 	ucomiss	%xmm0, %xmm0
    000000e1: 	setp	%r11b
    000000e5: 	addl	%r11d, %eax
    000000e8: 	leal	0x1(%rdx), %r11d
    000000ec: 	cmpl	%r11d, %r13d
    000000ef: 	jle	.Ltmp607 # Offset: 239
    000000f1: 	movss	0x4(%rbx,%rdi), %xmm0
    000000f7: 	xorl	%r11d, %r11d
    000000fa: 	ucomiss	%xmm0, %xmm0
    000000fd: 	setp	%r11b
    00000101: 	addl	$0x2, %edx
    00000104: 	addl	%r11d, %eax
    00000107: 	cmpl	%edx, %r13d
    0000010a: 	jle	.Ltmp607 # Offset: 266
    0000010c: 	movss	0x8(%rbx,%rdi), %xmm0
    00000112: 	xorl	%edx, %edx
    00000114: 	ucomiss	%xmm0, %xmm0
    00000117: 	setp	%dl
    0000011a: 	addl	%edx, %eax
.Ltmp607:
    0000011c: 	ucomiss	%xmm2, %xmm2
    0000011f: 	movl	$0x1f40, %edx
    00000124: 	cmovnpl	%ebp, %edx
    00000127: 	cmpl	%eax, %edx
    00000129: 	je	.Ltmp610 # Offset: 297
    0000012b: 	movl	current_test(%rip), %edx
    00000131: 	leaq	DATAat0x12802(%rip), %rsi
    00000138: 	movl	$0x1, %edi
    0000013d: 	xorl	%eax, %eax
    0000013f: 	addl	$0x1, %r14d
    00000143: 	callq	__printf_chk@PLT # Offset: 323
    00000148: 	movl	iterations(%rip), %esi
    0000014e: 	cmpl	%r14d, %esi
    00000151: 	jle	.Ltmp606 # Offset: 337
    00000153: 	pxor	%xmm2, %xmm2
    00000157: 	cvtsd2ss	init_value(%rip), %xmm2
    0000015f: 	jmp	.Ltmp611 # Offset: 351
    00000164: 	nopl	(%rax) # Size: 4
.Ltmp610:
    00000168: 	addl	$0x1, %r14d
    0000016c: 	cmpl	%esi, %r14d
    0000016f: 	jl	.Ltmp611 # Offset: 367
.Ltmp606:
    00000175: 	callq	clock@PLT # Offset: 373
    0000017a: 	pxor	%xmm0, %xmm0
    0000017e: 	movq	0x8(%rsp), %rdi
    00000183: 	movq	%rax, end_time(%rip)
    0000018a: 	subq	start_time(%rip), %rax
    00000191: 	cvtsi2sd	%rax, %xmm0
    00000196: 	divsd	DATAat0x12828(%rip), %xmm0
    0000019e: 	addq	$0x18, %rsp
    000001a2: 	popq	%rbx
    000001a3: 	popq	%rbp
    000001a4: 	popq	%r12
    000001a6: 	popq	%r13
    000001a8: 	popq	%r14
    000001aa: 	popq	%r15
    000001ac: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 428
.Ltmp608:
    000001b1: 	xorl	%edx, %edx
    000001b3: 	xorl	%eax, %eax
    000001b5: 	jmp	.Ltmp612 # Offset: 437
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi12inline_isnanIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi13mathlib_isnanIfEEvPT_iPKc" after disassembly {
  Number      : 94
  State       : disassembled
  Address     : 0xc870
  Size        : 0x1ba
  MaxSize     : 0x1c0
  Offset      : 0xc870
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi13mathlib_isnanIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB093:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp613 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	movl	%r13d, %r12d
    0000003e: 	pxor	%xmm2, %xmm2
    00000042: 	xorl	%r14d, %r14d
    00000045: 	movl	%eax, 0x4(%rsp)
    00000049: 	movl	%r13d, %eax
    0000004c: 	andl	$-0x4, %r12d
    00000050: 	xorl	%ebp, %ebp
    00000052: 	shrl	$0x2, %eax
    00000055: 	cvtsd2ss	init_value(%rip), %xmm2
    0000005d: 	subl	$0x1, %eax
    00000060: 	shlq	$0x4, %rax
    00000064: 	leaq	0x10(%rbx,%rax), %r15
    00000069: 	nopl	(%rax) # Size: 7
.Ltmp618:
    00000070: 	xorl	%eax, %eax
    00000072: 	testl	%r13d, %r13d
    00000075: 	jle	.Ltmp614 # Offset: 117
    0000007b: 	cmpl	$0x2, 0x4(%rsp)
    00000080: 	jbe	.Ltmp615 # Offset: 128
    00000086: 	movq	%rbx, %rax
    00000089: 	pxor	%xmm1, %xmm1
    0000008d: 	nopl	(%rax) # Size: 3
.Ltmp616:
    00000090: 	movups	(%rax), %xmm0
    00000093: 	addq	$0x10, %rax
    00000097: 	cmpunordps	%xmm0, %xmm0
    0000009b: 	psubd	%xmm0, %xmm1
    0000009f: 	cmpq	%r15, %rax
    000000a2: 	jne	.Ltmp616 # Offset: 162
    000000a4: 	movdqa	%xmm1, %xmm0
    000000a8: 	movl	%r12d, %edx
    000000ab: 	psrldq	$0x8, %xmm0
    000000b0: 	paddd	%xmm0, %xmm1
    000000b4: 	movdqa	%xmm1, %xmm0
    000000b8: 	psrldq	$0x4, %xmm0
    000000bd: 	paddd	%xmm0, %xmm1
    000000c1: 	movd	%xmm1, %eax
    000000c5: 	cmpl	%r13d, %r12d
    000000c8: 	je	.Ltmp614 # Offset: 200
.Ltmp619:
    000000ca: 	movslq	%edx, %r11
    000000cd: 	movss	(%rbx,%r11,4), %xmm0
    000000d3: 	leaq	(,%r11,4), %rdi
    000000db: 	xorl	%r11d, %r11d
    000000de: 	ucomiss	%xmm0, %xmm0
    000000e1: 	setp	%r11b
    000000e5: 	addl	%r11d, %eax
    000000e8: 	leal	0x1(%rdx), %r11d
    000000ec: 	cmpl	%r11d, %r13d
    000000ef: 	jle	.Ltmp614 # Offset: 239
    000000f1: 	movss	0x4(%rbx,%rdi), %xmm0
    000000f7: 	xorl	%r11d, %r11d
    000000fa: 	ucomiss	%xmm0, %xmm0
    000000fd: 	setp	%r11b
    00000101: 	addl	$0x2, %edx
    00000104: 	addl	%r11d, %eax
    00000107: 	cmpl	%edx, %r13d
    0000010a: 	jle	.Ltmp614 # Offset: 266
    0000010c: 	movss	0x8(%rbx,%rdi), %xmm0
    00000112: 	xorl	%edx, %edx
    00000114: 	ucomiss	%xmm0, %xmm0
    00000117: 	setp	%dl
    0000011a: 	addl	%edx, %eax
.Ltmp614:
    0000011c: 	ucomiss	%xmm2, %xmm2
    0000011f: 	movl	$0x1f40, %edx
    00000124: 	cmovnpl	%ebp, %edx
    00000127: 	cmpl	%eax, %edx
    00000129: 	je	.Ltmp617 # Offset: 297
    0000012b: 	movl	current_test(%rip), %edx
    00000131: 	leaq	DATAat0x12802(%rip), %rsi
    00000138: 	movl	$0x1, %edi
    0000013d: 	xorl	%eax, %eax
    0000013f: 	addl	$0x1, %r14d
    00000143: 	callq	__printf_chk@PLT # Offset: 323
    00000148: 	movl	iterations(%rip), %esi
    0000014e: 	cmpl	%r14d, %esi
    00000151: 	jle	.Ltmp613 # Offset: 337
    00000153: 	pxor	%xmm2, %xmm2
    00000157: 	cvtsd2ss	init_value(%rip), %xmm2
    0000015f: 	jmp	.Ltmp618 # Offset: 351
    00000164: 	nopl	(%rax) # Size: 4
.Ltmp617:
    00000168: 	addl	$0x1, %r14d
    0000016c: 	cmpl	%esi, %r14d
    0000016f: 	jl	.Ltmp618 # Offset: 367
.Ltmp613:
    00000175: 	callq	clock@PLT # Offset: 373
    0000017a: 	pxor	%xmm0, %xmm0
    0000017e: 	movq	0x8(%rsp), %rdi
    00000183: 	movq	%rax, end_time(%rip)
    0000018a: 	subq	start_time(%rip), %rax
    00000191: 	cvtsi2sd	%rax, %xmm0
    00000196: 	divsd	DATAat0x12828(%rip), %xmm0
    0000019e: 	addq	$0x18, %rsp
    000001a2: 	popq	%rbx
    000001a3: 	popq	%rbp
    000001a4: 	popq	%r12
    000001a6: 	popq	%r13
    000001a8: 	popq	%r14
    000001aa: 	popq	%r15
    000001ac: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 428
.Ltmp615:
    000001b1: 	xorl	%edx, %edx
    000001b3: 	xorl	%eax, %eax
    000001b5: 	jmp	.Ltmp619 # Offset: 437
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi13mathlib_isnanIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi14inline_signbitIfEEvPT_iPKc" after disassembly {
  Number      : 95
  State       : disassembled
  Address     : 0xca30
  Size        : 0x1b2
  MaxSize     : 0x1c0
  Offset      : 0xca30
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi14inline_signbitIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB094:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp620 # Offset: 49
    00000037: 	leal	-0x1(%r15), %eax
    0000003b: 	movl	%r15d, %ebp
    0000003e: 	pxor	%xmm4, %xmm4
    00000042: 	xorl	%r13d, %r13d
    00000045: 	movl	%eax, 0x4(%rsp)
    00000049: 	movl	%r15d, %eax
    0000004c: 	andl	$-0x4, %ebp
    0000004f: 	pxor	%xmm3, %xmm3
    00000053: 	shrl	$0x2, %eax
    00000056: 	xorl	%ebx, %ebx
    00000058: 	pxor	%xmm2, %xmm2
    0000005c: 	cvtsd2ss	init_value(%rip), %xmm4
    00000064: 	subl	$0x1, %eax
    00000067: 	shlq	$0x4, %rax
    0000006b: 	leaq	0x10(%r12,%rax), %r14
.Ltmp625:
    00000070: 	xorl	%eax, %eax
    00000072: 	testl	%r15d, %r15d
    00000075: 	jle	.Ltmp621 # Offset: 117
    0000007b: 	cmpl	$0x2, 0x4(%rsp)
    00000080: 	jbe	.Ltmp622 # Offset: 128
    00000086: 	movq	%r12, %rax
    00000089: 	pxor	%xmm1, %xmm1
    0000008d: 	nopl	(%rax) # Size: 3
.Ltmp623:
    00000090: 	movups	(%rax), %xmm0
    00000093: 	addq	$0x10, %rax
    00000097: 	cmpltps	%xmm2, %xmm0
    0000009b: 	psubd	%xmm0, %xmm1
    0000009f: 	cmpq	%r14, %rax
    000000a2: 	jne	.Ltmp623 # Offset: 162
    000000a4: 	movdqa	%xmm1, %xmm0
    000000a8: 	movl	%ebp, %edx
    000000aa: 	psrldq	$0x8, %xmm0
    000000af: 	paddd	%xmm0, %xmm1
    000000b3: 	movdqa	%xmm1, %xmm0
    000000b7: 	psrldq	$0x4, %xmm0
    000000bc: 	paddd	%xmm0, %xmm1
    000000c0: 	movd	%xmm1, %eax
    000000c4: 	cmpl	%r15d, %ebp
    000000c7: 	je	.Ltmp621 # Offset: 199
.Ltmp626:
    000000c9: 	movslq	%edx, %rdi
    000000cc: 	comiss	(%r12,%rdi,4), %xmm3
    000000d1: 	leaq	(,%rdi,4), %r10
    000000d9: 	seta	%dil
    000000dd: 	movzbl	%dil, %edi
    000000e1: 	addl	%edi, %eax
    000000e3: 	leal	0x1(%rdx), %edi
    000000e6: 	cmpl	%edi, %r15d
    000000e9: 	jle	.Ltmp621 # Offset: 233
    000000eb: 	xorl	%edi, %edi
    000000ed: 	comiss	0x4(%r12,%r10), %xmm3
    000000f3: 	seta	%dil
    000000f7: 	addl	$0x2, %edx
    000000fa: 	addl	%edi, %eax
    000000fc: 	cmpl	%edx, %r15d
    000000ff: 	jle	.Ltmp621 # Offset: 255
    00000101: 	xorl	%edx, %edx
    00000103: 	comiss	0x8(%r12,%r10), %xmm3
    00000109: 	seta	%dl
    0000010c: 	addl	%edx, %eax
.Ltmp621:
    0000010e: 	comiss	%xmm4, %xmm3
    00000111: 	movl	$0x1f40, %edx
    00000116: 	cmovbel	%ebx, %edx
    00000119: 	cmpl	%eax, %edx
    0000011b: 	je	.Ltmp624 # Offset: 283
    0000011d: 	movl	current_test(%rip), %edx
    00000123: 	leaq	DATAat0x12802(%rip), %rsi
    0000012a: 	movl	$0x1, %edi
    0000012f: 	xorl	%eax, %eax
    00000131: 	addl	$0x1, %r13d
    00000135: 	callq	__printf_chk@PLT # Offset: 309
    0000013a: 	movl	iterations(%rip), %esi
    00000140: 	cmpl	%esi, %r13d
    00000143: 	jge	.Ltmp620 # Offset: 323
    00000145: 	pxor	%xmm4, %xmm4
    00000149: 	pxor	%xmm3, %xmm3
    0000014d: 	pxor	%xmm2, %xmm2
    00000151: 	cvtsd2ss	init_value(%rip), %xmm4
    00000159: 	jmp	.Ltmp625 # Offset: 345
    0000015e: 	nop # Size: 2
.Ltmp624:
    00000160: 	addl	$0x1, %r13d
    00000164: 	cmpl	%esi, %r13d
    00000167: 	jl	.Ltmp625 # Offset: 359
.Ltmp620:
    0000016d: 	callq	clock@PLT # Offset: 365
    00000172: 	pxor	%xmm0, %xmm0
    00000176: 	movq	0x8(%rsp), %rdi
    0000017b: 	movq	%rax, end_time(%rip)
    00000182: 	subq	start_time(%rip), %rax
    00000189: 	cvtsi2sd	%rax, %xmm0
    0000018e: 	divsd	DATAat0x12828(%rip), %xmm0
    00000196: 	addq	$0x18, %rsp
    0000019a: 	popq	%rbx
    0000019b: 	popq	%rbp
    0000019c: 	popq	%r12
    0000019e: 	popq	%r13
    000001a0: 	popq	%r14
    000001a2: 	popq	%r15
    000001a4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 420
.Ltmp622:
    000001a9: 	xorl	%edx, %edx
    000001ab: 	xorl	%eax, %eax
    000001ad: 	jmp	.Ltmp626 # Offset: 429
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi14inline_signbitIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi15mathlib_signbitIfEEvPT_iPKc" after disassembly {
  Number      : 96
  State       : disassembled
  Address     : 0xcbf0
  Size        : 0x1d2
  MaxSize     : 0x1e0
  Offset      : 0xcbf0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi15mathlib_signbitIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB095:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	movl	%esi, %r14d
    0000000e: 	pushq	%r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %esi
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	testl	%esi, %esi
    00000031: 	jle	.Ltmp627 # Offset: 49
    00000037: 	leal	-0x1(%r14), %eax
    0000003b: 	movl	%r14d, %ebx
    0000003e: 	pxor	%xmm4, %xmm4
    00000042: 	xorl	%r12d, %r12d
    00000045: 	movl	%eax, 0x4(%rsp)
    00000049: 	movl	%r14d, %eax
    0000004c: 	cvtsd2ss	init_value(%rip), %xmm4
    00000054: 	andl	$-0x4, %ebx
    00000057: 	shrl	$0x2, %eax
    0000005a: 	movd	%xmm4, %edi
    0000005e: 	leaq	DATAat0x12802(%rip), %rbp
    00000065: 	subl	$0x1, %eax
    00000068: 	shlq	$0x4, %rax
    0000006c: 	leaq	0x10(%r15,%rax), %r13
    00000071: 	nopl	(%rax) # Size: 7
.Ltmp632:
    00000078: 	xorl	%eax, %eax
    0000007a: 	testl	%r14d, %r14d
    0000007d: 	jle	.Ltmp628 # Offset: 125
    00000083: 	cmpl	$0x2, 0x4(%rsp)
    00000088: 	jbe	.Ltmp629 # Offset: 136
    0000008e: 	pxor	%xmm1, %xmm1
    00000092: 	movq	%r15, %rax
    00000095: 	movdqa	%xmm1, %xmm2
    00000099: 	nopl	(%rax) # Size: 7
.Ltmp630:
    000000a0: 	movdqu	(%rax), %xmm0
    000000a4: 	addq	$0x10, %rax
    000000a8: 	psrld	$0x1f, %xmm0
    000000ad: 	pcmpeqd	%xmm2, %xmm0
    000000b1: 	pcmpeqd	%xmm2, %xmm0
    000000b5: 	psubd	%xmm0, %xmm1
    000000b9: 	cmpq	%r13, %rax
    000000bc: 	jne	.Ltmp630 # Offset: 188
    000000be: 	movdqa	%xmm1, %xmm0
    000000c2: 	movl	%ebx, %edx
    000000c4: 	psrldq	$0x8, %xmm0
    000000c9: 	paddd	%xmm0, %xmm1
    000000cd: 	movdqa	%xmm1, %xmm0
    000000d1: 	psrldq	$0x4, %xmm0
    000000d6: 	paddd	%xmm0, %xmm1
    000000da: 	movd	%xmm1, %eax
    000000de: 	cmpl	%r14d, %ebx
    000000e1: 	je	.Ltmp628 # Offset: 225
.Ltmp633:
    000000e3: 	movslq	%edx, %r9
    000000e6: 	leaq	(,%r9,4), %r10
    000000ee: 	movl	(%r15,%r9,4), %r9d
    000000f2: 	testl	%r9d, %r9d
    000000f5: 	sets	%r9b
    000000f9: 	movzbl	%r9b, %r9d
    000000fd: 	addl	%r9d, %eax
    00000100: 	leal	0x1(%rdx), %r9d
    00000104: 	cmpl	%r9d, %r14d
    00000107: 	jle	.Ltmp628 # Offset: 263
    00000109: 	movl	0x4(%r15,%r10), %r8d
    0000010e: 	xorl	%r9d, %r9d
    00000111: 	testl	%r8d, %r8d
    00000114: 	sets	%r9b
    00000118: 	addl	$0x2, %edx
    0000011b: 	addl	%r9d, %eax
    0000011e: 	cmpl	%edx, %r14d
    00000121: 	jle	.Ltmp628 # Offset: 289
    00000123: 	movl	0x8(%r15,%r10), %ecx
    00000128: 	xorl	%edx, %edx
    0000012a: 	testl	%ecx, %ecx
    0000012c: 	sets	%dl
    0000012f: 	addl	%edx, %eax
.Ltmp628:
    00000131: 	movl	%edi, %edx
    00000133: 	andl	$0x80000000, %edx
    00000139: 	negl	%edx
    0000013b: 	sbbl	%edx, %edx
    0000013d: 	andl	$0x1f40, %edx
    00000143: 	cmpl	%eax, %edx
    00000145: 	je	.Ltmp631 # Offset: 325
    00000147: 	movl	current_test(%rip), %edx
    0000014d: 	movq	%rbp, %rsi
    00000150: 	movl	$0x1, %edi
    00000155: 	xorl	%eax, %eax
    00000157: 	addl	$0x1, %r12d
    0000015b: 	callq	__printf_chk@PLT # Offset: 347
    00000160: 	movl	iterations(%rip), %esi
    00000166: 	cmpl	%esi, %r12d
    00000169: 	jge	.Ltmp627 # Offset: 361
    0000016b: 	pxor	%xmm3, %xmm3
    0000016f: 	cvtsd2ss	init_value(%rip), %xmm3
    00000177: 	movd	%xmm3, %edi
    0000017b: 	jmp	.Ltmp632 # Offset: 379
.Ltmp631:
    00000180: 	addl	$0x1, %r12d
    00000184: 	cmpl	%esi, %r12d
    00000187: 	jl	.Ltmp632 # Offset: 391
.Ltmp627:
    0000018d: 	callq	clock@PLT # Offset: 397
    00000192: 	pxor	%xmm0, %xmm0
    00000196: 	movq	0x8(%rsp), %rdi
    0000019b: 	movq	%rax, end_time(%rip)
    000001a2: 	subq	start_time(%rip), %rax
    000001a9: 	cvtsi2sd	%rax, %xmm0
    000001ae: 	divsd	DATAat0x12828(%rip), %xmm0
    000001b6: 	addq	$0x18, %rsp
    000001ba: 	popq	%rbx
    000001bb: 	popq	%rbp
    000001bc: 	popq	%r12
    000001be: 	popq	%r13
    000001c0: 	popq	%r14
    000001c2: 	popq	%r15
    000001c4: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 452
.Ltmp629:
    000001c9: 	xorl	%edx, %edx
    000001cb: 	xorl	%eax, %eax
    000001cd: 	jmp	.Ltmp633 # Offset: 461
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi15mathlib_signbitIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_sqrtfIfEEvPT_iPKc" after disassembly {
  Number      : 97
  State       : disassembled
  Address     : 0xcdd0
  Size        : 0x26f
  MaxSize     : 0x270
  Offset      : 0xcdd0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_sqrtfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB096:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp634 # Offset: 49
    00000037: 	leal	-0x1(%r12), %edx
    0000003c: 	movss	DATAat0x12950(%rip), %xmm7
    00000044: 	movsd	DATAat0x12830(%rip), %xmm6
    0000004c: 	xorl	%r14d, %r14d
    0000004f: 	leaq	0x4(%r15,%rdx,4), %rbp
    00000054: 	movq	DATAat0x12890(%rip), %xmm5
    0000005c: 	pxor	%xmm2, %xmm2
    00000060: 	movsd	DATAat0x12860(%rip), %xmm4
    00000068: 	movss	DATAat0x128e0(%rip), %xmm8
    00000071: 	leaq	DATAat0x12802(%rip), %r13
    00000078: 	nopl	(%rax,%rax) # Size: 8
.Ltmp641:
    00000080: 	movq	%r15, %rbx
    00000083: 	movaps	%xmm2, %xmm1
    00000086: 	movaps	%xmm2, %xmm9
    0000008a: 	testl	%r12d, %r12d
    0000008d: 	jle	.Ltmp635 # Offset: 141
    0000008f: 	nop # Size: 1
.Ltmp637:
    00000090: 	movss	(%rbx), %xmm0
    00000094: 	ucomiss	%xmm0, %xmm2
    00000097: 	ja	.Ltmp636 # Offset: 151
    0000009d: 	sqrtss	%xmm0, %xmm0
    000000a1: 	addq	$0x4, %rbx
    000000a5: 	addss	%xmm0, %xmm1
    000000a9: 	cmpq	%rbx, %rbp
    000000ac: 	jne	.Ltmp637 # Offset: 172
.Ltmp642:
    000000ae: 	movaps	%xmm1, %xmm9
    000000b2: 	andps	%xmm8, %xmm9
.Ltmp635:
    000000b6: 	pxor	%xmm0, %xmm0
    000000ba: 	cvtsd2ss	init_value(%rip), %xmm0
    000000c2: 	ucomiss	%xmm0, %xmm2
    000000c5: 	ja	.Ltmp638 # Offset: 197
    000000cb: 	sqrtss	%xmm0, %xmm0
.Ltmp643:
    000000cf: 	mulss	%xmm7, %xmm0
    000000d3: 	cvtss2sd	%xmm9, %xmm9
    000000d8: 	comisd	%xmm6, %xmm9
    000000dd: 	movaps	%xmm1, %xmm3
    000000e0: 	subss	%xmm0, %xmm3
    000000e4: 	jbe	.Ltmp639 # Offset: 228
    000000e6: 	divss	%xmm1, %xmm3
.Ltmp639:
    000000ea: 	cvtss2sd	%xmm3, %xmm3
    000000ee: 	andpd	%xmm5, %xmm3
    000000f2: 	comisd	%xmm3, %xmm4
    000000f6: 	jbe	.Ltmp640 # Offset: 246
    000000f8: 	addl	$0x1, %r14d
    000000fc: 	cmpl	%eax, %r14d
    000000ff: 	jl	.Ltmp641 # Offset: 255
.Ltmp634:
    00000105: 	callq	clock@PLT # Offset: 261
    0000010a: 	pxor	%xmm0, %xmm0
    0000010e: 	movq	0x8(%rsp), %rdi
    00000113: 	movq	%rax, end_time(%rip)
    0000011a: 	subq	start_time(%rip), %rax
    00000121: 	cvtsi2sd	%rax, %xmm0
    00000126: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012e: 	addq	$0x28, %rsp
    00000132: 	popq	%rbx
    00000133: 	popq	%rbp
    00000134: 	popq	%r12
    00000136: 	popq	%r13
    00000138: 	popq	%r14
    0000013a: 	popq	%r15
    0000013c: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 316
    00000141: 	nopl	(%rax) # Size: 7
.Ltmp640:
    00000148: 	movl	current_test(%rip), %edx
    0000014e: 	xorl	%eax, %eax
    00000150: 	movq	%r13, %rsi
    00000153: 	movl	$0x1, %edi
    00000158: 	addl	$0x1, %r14d
    0000015c: 	callq	__printf_chk@PLT # Offset: 348
    00000161: 	movq	DATAat0x12860(%rip), %rcx
    00000168: 	movl	iterations(%rip), %eax
    0000016e: 	pxor	%xmm2, %xmm2
    00000172: 	movq	DATAat0x12890(%rip), %xmm5
    0000017a: 	movss	DATAat0x12950(%rip), %xmm7
    00000182: 	movss	DATAat0x128e0(%rip), %xmm8
    0000018b: 	movq	%rcx, %xmm4
    00000190: 	movq	DATAat0x12830(%rip), %rcx
    00000197: 	cmpl	%eax, %r14d
    0000019a: 	movq	%rcx, %xmm6
    0000019f: 	jl	.Ltmp641 # Offset: 415
    000001a5: 	jmp	.Ltmp634 # Offset: 421
.Ltmp636:
    000001aa: 	movl	%eax, 0x18(%rsp)
    000001ae: 	addq	$0x4, %rbx
    000001b2: 	movss	%xmm1, 0x14(%rsp)
    000001b8: 	callq	sqrtf@PLT # Offset: 440
    000001bd: 	cmpq	%rbp, %rbx
    000001c0: 	movl	0x18(%rsp), %eax
    000001c4: 	pxor	%xmm2, %xmm2
    000001c8: 	movq	DATAat0x12860(%rip), %rsi
    000001cf: 	movss	0x14(%rsp), %xmm1
    000001d5: 	movss	DATAat0x128e0(%rip), %xmm8
    000001de: 	movq	DATAat0x12890(%rip), %xmm5
    000001e6: 	movss	DATAat0x12950(%rip), %xmm7
    000001ee: 	movq	%rsi, %xmm4
    000001f3: 	movq	DATAat0x12830(%rip), %rsi
    000001fa: 	addss	%xmm0, %xmm1
    000001fe: 	movq	%rsi, %xmm6
    00000203: 	jne	.Ltmp637 # Offset: 515
    00000209: 	jmp	.Ltmp642 # Offset: 521
.Ltmp638:
    0000020e: 	movl	%eax, 0x1c(%rsp)
    00000212: 	movss	%xmm1, 0x18(%rsp)
    00000218: 	movss	%xmm9, 0x14(%rsp)
    0000021f: 	callq	sqrtf@PLT # Offset: 543
    00000224: 	movq	DATAat0x12830(%rip), %rax
    0000022b: 	pxor	%xmm2, %xmm2
    0000022f: 	movss	DATAat0x12950(%rip), %xmm7
    00000237: 	movq	DATAat0x12890(%rip), %xmm5
    0000023f: 	movss	0x18(%rsp), %xmm1
    00000245: 	movss	DATAat0x128e0(%rip), %xmm8
    0000024e: 	movq	%rax, %xmm6
    00000253: 	movq	DATAat0x12860(%rip), %rax
    0000025a: 	movss	0x14(%rsp), %xmm9
    00000261: 	movq	%rax, %xmm4
    00000266: 	movl	0x1c(%rsp), %eax
    0000026a: 	jmp	.Ltmp643 # Offset: 618
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_sqrtfIfEEvPT_iPKc"

Binary Function "_Z14test_variable1If13inline_hypotfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 98
  State       : disassembled
  Address     : 0xd040
  Size        : 0x2bb
  MaxSize     : 0x2c0
  Offset      : 0xd040
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If13inline_hypotfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB097:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rdi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	movl	%esi, %ebp
    00000012: 	pushq	%rbx
    00000013: 	subq	$0x28, %rsp
    00000017: 	movq	%rdx, 0x8(%rsp)
    0000001c: 	movss	%xmm0, 0x10(%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movq	%rax, start_time(%rip)
    0000002e: 	movl	iterations(%rip), %eax
    00000034: 	testl	%eax, %eax
    00000036: 	jle	.Ltmp644 # Offset: 54
    0000003c: 	movss	0x10(%rsp), %xmm3
    00000042: 	leal	-0x1(%rbp), %edx
    00000045: 	xorl	%r14d, %r14d
    00000048: 	pxor	%xmm2, %xmm2
    0000004c: 	movss	DATAat0x12950(%rip), %xmm7
    00000054: 	movsd	DATAat0x12830(%rip), %xmm6
    0000005c: 	leaq	0x4(%r15,%rdx,4), %r13
    00000061: 	movss	DATAat0x128e0(%rip), %xmm8
    0000006a: 	mulss	%xmm3, %xmm3
    0000006e: 	movq	DATAat0x12890(%rip), %xmm5
    00000076: 	movsd	DATAat0x12860(%rip), %xmm4
    0000007e: 	leaq	DATAat0x12802(%rip), %r12
    00000085: 	nopl	(%rax) # Size: 3
.Ltmp651:
    00000088: 	movq	%r15, %rbx
    0000008b: 	movaps	%xmm2, %xmm1
    0000008e: 	movaps	%xmm2, %xmm9
    00000092: 	testl	%ebp, %ebp
    00000094: 	jle	.Ltmp645 # Offset: 148
    00000096: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp647:
    000000a0: 	movss	(%rbx), %xmm0
    000000a4: 	mulss	%xmm0, %xmm0
    000000a8: 	addss	%xmm3, %xmm0
    000000ac: 	ucomiss	%xmm0, %xmm2
    000000af: 	ja	.Ltmp646 # Offset: 175
    000000b5: 	sqrtss	%xmm0, %xmm0
    000000b9: 	addq	$0x4, %rbx
    000000bd: 	addss	%xmm0, %xmm1
    000000c1: 	cmpq	%rbx, %r13
    000000c4: 	jne	.Ltmp647 # Offset: 196
.Ltmp652:
    000000c6: 	movaps	%xmm1, %xmm9
    000000ca: 	andps	%xmm8, %xmm9
.Ltmp645:
    000000ce: 	pxor	%xmm0, %xmm0
    000000d2: 	cvtsd2ss	init_value(%rip), %xmm0
    000000da: 	mulss	%xmm0, %xmm0
    000000de: 	addss	%xmm3, %xmm0
    000000e2: 	ucomiss	%xmm0, %xmm2
    000000e5: 	ja	.Ltmp648 # Offset: 229
    000000eb: 	sqrtss	%xmm0, %xmm0
.Ltmp653:
    000000ef: 	mulss	%xmm7, %xmm0
    000000f3: 	cvtss2sd	%xmm9, %xmm9
    000000f8: 	comisd	%xmm6, %xmm9
    000000fd: 	movaps	%xmm1, %xmm10
    00000101: 	subss	%xmm0, %xmm10
    00000106: 	jbe	.Ltmp649 # Offset: 262
    00000108: 	divss	%xmm1, %xmm10
.Ltmp649:
    0000010d: 	cvtss2sd	%xmm10, %xmm10
    00000112: 	andpd	%xmm5, %xmm10
    00000117: 	comisd	%xmm10, %xmm4
    0000011c: 	jbe	.Ltmp650 # Offset: 284
    0000011e: 	addl	$0x1, %r14d
    00000122: 	cmpl	%eax, %r14d
    00000125: 	jl	.Ltmp651 # Offset: 293
.Ltmp644:
    0000012b: 	callq	clock@PLT # Offset: 299
    00000130: 	pxor	%xmm0, %xmm0
    00000134: 	movq	0x8(%rsp), %rdi
    00000139: 	movq	%rax, end_time(%rip)
    00000140: 	subq	start_time(%rip), %rax
    00000147: 	cvtsi2sd	%rax, %xmm0
    0000014c: 	divsd	DATAat0x12828(%rip), %xmm0
    00000154: 	addq	$0x28, %rsp
    00000158: 	popq	%rbx
    00000159: 	popq	%rbp
    0000015a: 	popq	%r12
    0000015c: 	popq	%r13
    0000015e: 	popq	%r14
    00000160: 	popq	%r15
    00000162: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 354
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp650:
    00000170: 	movl	current_test(%rip), %edx
    00000176: 	xorl	%eax, %eax
    00000178: 	movq	%r12, %rsi
    0000017b: 	movl	$0x1, %edi
    00000180: 	movss	%xmm3, 0x10(%rsp)
    00000186: 	addl	$0x1, %r14d
    0000018a: 	callq	__printf_chk@PLT # Offset: 394
    0000018f: 	movq	DATAat0x12860(%rip), %rcx
    00000196: 	movl	iterations(%rip), %eax
    0000019c: 	pxor	%xmm2, %xmm2
    000001a0: 	movss	0x10(%rsp), %xmm3
    000001a6: 	movq	DATAat0x12890(%rip), %xmm5
    000001ae: 	movss	DATAat0x128e0(%rip), %xmm8
    000001b7: 	movq	%rcx, %xmm4
    000001bc: 	movq	DATAat0x12830(%rip), %rcx
    000001c3: 	cmpl	%eax, %r14d
    000001c6: 	movss	DATAat0x12950(%rip), %xmm7
    000001ce: 	movq	%rcx, %xmm6
    000001d3: 	jl	.Ltmp651 # Offset: 467
    000001d9: 	jmp	.Ltmp644 # Offset: 473
.Ltmp646:
    000001de: 	movl	%eax, 0x10(%rsp)
    000001e2: 	addq	$0x4, %rbx
    000001e6: 	movss	%xmm3, 0x18(%rsp)
    000001ec: 	movss	%xmm1, 0x14(%rsp)
    000001f2: 	callq	sqrtf@PLT # Offset: 498
    000001f7: 	cmpq	%r13, %rbx
    000001fa: 	movl	0x10(%rsp), %eax
    000001fe: 	pxor	%xmm2, %xmm2
    00000202: 	movq	DATAat0x12860(%rip), %rsi
    00000209: 	movss	0x14(%rsp), %xmm1
    0000020f: 	movss	DATAat0x128e0(%rip), %xmm8
    00000218: 	movss	0x18(%rsp), %xmm3
    0000021e: 	movq	DATAat0x12890(%rip), %xmm5
    00000226: 	movq	%rsi, %xmm4
    0000022b: 	movq	DATAat0x12830(%rip), %rsi
    00000232: 	addss	%xmm0, %xmm1
    00000236: 	movss	DATAat0x12950(%rip), %xmm7
    0000023e: 	movq	%rsi, %xmm6
    00000243: 	jne	.Ltmp647 # Offset: 579
    00000249: 	jmp	.Ltmp652 # Offset: 585
.Ltmp648:
    0000024e: 	movl	%eax, 0x10(%rsp)
    00000252: 	movss	%xmm9, 0x1c(%rsp)
    00000259: 	movss	%xmm3, 0x18(%rsp)
    0000025f: 	movss	%xmm1, 0x14(%rsp)
    00000265: 	callq	sqrtf@PLT # Offset: 613
    0000026a: 	movq	DATAat0x12830(%rip), %rax
    00000271: 	pxor	%xmm2, %xmm2
    00000275: 	movss	DATAat0x12950(%rip), %xmm7
    0000027d: 	movq	DATAat0x12890(%rip), %xmm5
    00000285: 	movss	0x1c(%rsp), %xmm9
    0000028c: 	movss	DATAat0x128e0(%rip), %xmm8
    00000295: 	movq	%rax, %xmm6
    0000029a: 	movq	DATAat0x12860(%rip), %rax
    000002a1: 	movss	0x18(%rsp), %xmm3
    000002a7: 	movss	0x14(%rsp), %xmm1
    000002ad: 	movq	%rax, %xmm4
    000002b2: 	movl	0x10(%rsp), %eax
    000002b6: 	jmp	.Ltmp653 # Offset: 694
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If13inline_hypotfIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If14mathlib_hypotfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 99
  State       : disassembled
  Address     : 0xd300
  Size        : 0x1c8
  MaxSize     : 0x1d0
  Offset      : 0xd300
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If14mathlib_hypotfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB098:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	movl	iterations(%rip), %eax
    00000035: 	testl	%eax, %eax
    00000037: 	jle	.Ltmp654 # Offset: 55
    0000003d: 	leal	-0x1(%r13), %eax
    00000041: 	movss	0x8(%rsp), %xmm1
    00000047: 	xorl	%ebp, %ebp
    00000049: 	leaq	DATAat0x12802(%rip), %r15
    00000050: 	leaq	0x4(%r12,%rax,4), %rbx
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp659:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp655 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp656:
    00000080: 	movss	(%r14), %xmm0
    00000085: 	movss	%xmm2, 0xc(%rsp)
    0000008b: 	addq	$0x4, %r14
    0000008f: 	movss	%xmm1, 0x8(%rsp)
    00000095: 	callq	hypotf@PLT # Offset: 149
    0000009a: 	movss	0xc(%rsp), %xmm2
    000000a0: 	cmpq	%r14, %rbx
    000000a3: 	movss	0x8(%rsp), %xmm1
    000000a9: 	addss	%xmm0, %xmm2
    000000ad: 	jne	.Ltmp656 # Offset: 173
    000000af: 	pxor	%xmm0, %xmm0
    000000b3: 	movss	%xmm2, 0xc(%rsp)
    000000b9: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000bf: 	callq	hypotf@PLT # Offset: 191
    000000c4: 	mulss	DATAat0x12950(%rip), %xmm0
    000000cc: 	movss	0xc(%rsp), %xmm2
    000000d2: 	movss	0x8(%rsp), %xmm1
    000000d8: 	movaps	%xmm2, %xmm3
    000000db: 	subss	%xmm0, %xmm3
    000000df: 	movaps	%xmm2, %xmm0
    000000e2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000e9: 	cvtss2sd	%xmm0, %xmm0
    000000ed: 	comisd	DATAat0x12830(%rip), %xmm0
    000000f5: 	jbe	.Ltmp657 # Offset: 245
    000000f7: 	divss	%xmm2, %xmm3
.Ltmp657:
    000000fb: 	movsd	DATAat0x12860(%rip), %xmm4
    00000103: 	cvtss2sd	%xmm3, %xmm3
    00000107: 	andpd	DATAat0x12890(%rip), %xmm3
    0000010f: 	comisd	%xmm3, %xmm4
    00000113: 	jbe	.Ltmp658 # Offset: 275
    00000115: 	addl	$0x1, %ebp
    00000118: 	cmpl	%ebp, iterations(%rip)
    0000011e: 	jg	.Ltmp659 # Offset: 286
.Ltmp654:
    00000124: 	callq	clock@PLT # Offset: 292
    00000129: 	pxor	%xmm0, %xmm0
    0000012d: 	movq	0x18(%rsp), %rdi
    00000132: 	movq	%rax, end_time(%rip)
    00000139: 	subq	start_time(%rip), %rax
    00000140: 	cvtsi2sd	%rax, %xmm0
    00000145: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014d: 	addq	$0x28, %rsp
    00000151: 	popq	%rbx
    00000152: 	popq	%rbp
    00000153: 	popq	%r12
    00000155: 	popq	%r13
    00000157: 	popq	%r14
    00000159: 	popq	%r15
    0000015b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 347
.Ltmp658:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	xorl	%eax, %eax
    00000168: 	movq	%r15, %rsi
    0000016b: 	movl	$0x1, %edi
    00000170: 	movss	%xmm1, 0x8(%rsp)
    00000176: 	addl	$0x1, %ebp
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebp, iterations(%rip)
    00000184: 	movss	0x8(%rsp), %xmm1
    0000018a: 	jg	.Ltmp659 # Offset: 394
    00000190: 	jmp	.Ltmp654 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp655:
    00000198: 	pxor	%xmm0, %xmm0
    0000019c: 	movss	%xmm1, 0x8(%rsp)
    000001a2: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001a8: 	callq	hypotf@PLT # Offset: 424
    000001ad: 	pxor	%xmm3, %xmm3
    000001b1: 	movss	0x8(%rsp), %xmm1
    000001b7: 	mulss	DATAat0x12950(%rip), %xmm0
    000001bf: 	subss	%xmm0, %xmm3
    000001c3: 	jmp	.Ltmp657 # Offset: 451
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If14mathlib_hypotfIfEEvPT_iS2_PKc"

Binary Function "_Z13test_constantIf12mathlib_cosfIfEEvPT_iPKc" after disassembly {
  Number      : 100
  State       : disassembled
  Address     : 0xd4d0
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xd4d0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_cosfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB099:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp660 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp665:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	cosf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp661 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp662:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	cosf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp662 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp663 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp663:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp664 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp665 # Offset: 248
.Ltmp660:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp664:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp660 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp665 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp661:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp663 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_cosfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf12mathlib_sinfIfEEvPT_iPKc" after disassembly {
  Number      : 101
  State       : disassembled
  Address     : 0xd660
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xd660
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_sinfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0100:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp666 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp671:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	sinf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp667 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp668:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	sinf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp668 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp669 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp669:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp670 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp671 # Offset: 248
.Ltmp666:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp670:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp666 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp671 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp667:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp669 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_sinfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf12mathlib_tanfIfEEvPT_iPKc" after disassembly {
  Number      : 102
  State       : disassembled
  Address     : 0xd7f0
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xd7f0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_tanfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0101:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp672 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp677:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	tanf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp673 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp674:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	tanf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp674 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp675 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp675:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp676 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp677 # Offset: 248
.Ltmp672:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp676:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp672 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp677 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp673:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp675 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_tanfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_acosfIfEEvPT_iPKc" after disassembly {
  Number      : 103
  State       : disassembled
  Address     : 0xd980
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xd980
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_acosfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0102:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp678 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp683:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp679 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp680:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	acosf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp680 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	acosf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp681 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp681:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp682 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp683 # Offset: 252
.Ltmp678:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp682:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp683 # Offset: 350
    00000164: 	jmp	.Ltmp678 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp679:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	acosf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp681 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_acosfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_asinfIfEEvPT_iPKc" after disassembly {
  Number      : 104
  State       : disassembled
  Address     : 0xdb20
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xdb20
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_asinfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0103:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp684 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp689:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp685 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp686:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	asinf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp686 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	asinf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp687 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp687:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp688 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp689 # Offset: 252
.Ltmp684:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp688:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp689 # Offset: 350
    00000164: 	jmp	.Ltmp684 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp685:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	asinf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp687 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_asinfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_atanfIfEEvPT_iPKc" after disassembly {
  Number      : 105
  State       : disassembled
  Address     : 0xdcc0
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xdcc0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_atanfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0104:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp690 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp695:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	atanf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp691 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp692:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	atanf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp692 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp693 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp693:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp694 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp695 # Offset: 248
.Ltmp690:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp694:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp690 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp695 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp691:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp693 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_atanfIfEEvPT_iPKc"

Binary Function "_Z14test_variable1If14mathlib_atan2fIfEEvPT_iS2_PKc" after disassembly {
  Number      : 106
  State       : disassembled
  Address     : 0xde50
  Size        : 0x1c8
  MaxSize     : 0x1d0
  Offset      : 0xde50
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If14mathlib_atan2fIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0105:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	movl	iterations(%rip), %eax
    00000035: 	testl	%eax, %eax
    00000037: 	jle	.Ltmp696 # Offset: 55
    0000003d: 	leal	-0x1(%r13), %eax
    00000041: 	movss	0x8(%rsp), %xmm1
    00000047: 	xorl	%ebp, %ebp
    00000049: 	leaq	DATAat0x12802(%rip), %r15
    00000050: 	leaq	0x4(%r12,%rax,4), %rbx
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp701:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp697 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp698:
    00000080: 	movss	(%r14), %xmm0
    00000085: 	movss	%xmm2, 0xc(%rsp)
    0000008b: 	addq	$0x4, %r14
    0000008f: 	movss	%xmm1, 0x8(%rsp)
    00000095: 	callq	atan2f@PLT # Offset: 149
    0000009a: 	movss	0xc(%rsp), %xmm2
    000000a0: 	cmpq	%r14, %rbx
    000000a3: 	movss	0x8(%rsp), %xmm1
    000000a9: 	addss	%xmm0, %xmm2
    000000ad: 	jne	.Ltmp698 # Offset: 173
    000000af: 	pxor	%xmm0, %xmm0
    000000b3: 	movss	%xmm2, 0xc(%rsp)
    000000b9: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000bf: 	callq	atan2f@PLT # Offset: 191
    000000c4: 	mulss	DATAat0x12950(%rip), %xmm0
    000000cc: 	movss	0xc(%rsp), %xmm2
    000000d2: 	movss	0x8(%rsp), %xmm1
    000000d8: 	movaps	%xmm2, %xmm3
    000000db: 	subss	%xmm0, %xmm3
    000000df: 	movaps	%xmm2, %xmm0
    000000e2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000e9: 	cvtss2sd	%xmm0, %xmm0
    000000ed: 	comisd	DATAat0x12830(%rip), %xmm0
    000000f5: 	jbe	.Ltmp699 # Offset: 245
    000000f7: 	divss	%xmm2, %xmm3
.Ltmp699:
    000000fb: 	movsd	DATAat0x12860(%rip), %xmm4
    00000103: 	cvtss2sd	%xmm3, %xmm3
    00000107: 	andpd	DATAat0x12890(%rip), %xmm3
    0000010f: 	comisd	%xmm3, %xmm4
    00000113: 	jbe	.Ltmp700 # Offset: 275
    00000115: 	addl	$0x1, %ebp
    00000118: 	cmpl	%ebp, iterations(%rip)
    0000011e: 	jg	.Ltmp701 # Offset: 286
.Ltmp696:
    00000124: 	callq	clock@PLT # Offset: 292
    00000129: 	pxor	%xmm0, %xmm0
    0000012d: 	movq	0x18(%rsp), %rdi
    00000132: 	movq	%rax, end_time(%rip)
    00000139: 	subq	start_time(%rip), %rax
    00000140: 	cvtsi2sd	%rax, %xmm0
    00000145: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014d: 	addq	$0x28, %rsp
    00000151: 	popq	%rbx
    00000152: 	popq	%rbp
    00000153: 	popq	%r12
    00000155: 	popq	%r13
    00000157: 	popq	%r14
    00000159: 	popq	%r15
    0000015b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 347
.Ltmp700:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	xorl	%eax, %eax
    00000168: 	movq	%r15, %rsi
    0000016b: 	movl	$0x1, %edi
    00000170: 	movss	%xmm1, 0x8(%rsp)
    00000176: 	addl	$0x1, %ebp
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebp, iterations(%rip)
    00000184: 	movss	0x8(%rsp), %xmm1
    0000018a: 	jg	.Ltmp701 # Offset: 394
    00000190: 	jmp	.Ltmp696 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp697:
    00000198: 	pxor	%xmm0, %xmm0
    0000019c: 	movss	%xmm1, 0x8(%rsp)
    000001a2: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001a8: 	callq	atan2f@PLT # Offset: 424
    000001ad: 	pxor	%xmm3, %xmm3
    000001b1: 	movss	0x8(%rsp), %xmm1
    000001b7: 	mulss	DATAat0x12950(%rip), %xmm0
    000001bf: 	subss	%xmm0, %xmm3
    000001c3: 	jmp	.Ltmp699 # Offset: 451
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If14mathlib_atan2fIfEEvPT_iS2_PKc"

Binary Function "_Z13test_constantIf12mathlib_expfIfEEvPT_iPKc" after disassembly {
  Number      : 107
  State       : disassembled
  Address     : 0xe020
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xe020
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_expfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0106:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp702 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp707:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp703 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp704:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	expf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp704 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	expf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp705 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp705:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp706 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp707 # Offset: 252
.Ltmp702:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp706:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp707 # Offset: 350
    00000164: 	jmp	.Ltmp702 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp703:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	expf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp705 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_expfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_exp2fIfEEvPT_iPKc" after disassembly {
  Number      : 108
  State       : disassembled
  Address     : 0xe1c0
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xe1c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_exp2fIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0107:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp708 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp713:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp709 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp710:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	exp2f@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp710 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	exp2f@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp711 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp711:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp712 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp713 # Offset: 252
.Ltmp708:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp712:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp713 # Offset: 350
    00000164: 	jmp	.Ltmp708 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp709:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	exp2f@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp711 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_exp2fIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf12mathlib_logfIfEEvPT_iPKc" after disassembly {
  Number      : 109
  State       : disassembled
  Address     : 0xe360
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xe360
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_logfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0108:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp714 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp719:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp715 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp716:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	logf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp716 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	logf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp717 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp717:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp718 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp719 # Offset: 252
.Ltmp714:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp718:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp719 # Offset: 350
    00000164: 	jmp	.Ltmp714 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp715:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	logf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp717 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_logfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_log10fIfEEvPT_iPKc" after disassembly {
  Number      : 110
  State       : disassembled
  Address     : 0xe500
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xe500
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_log10fIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0109:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp720 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp725:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp721 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp722:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	log10f@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp722 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	log10f@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp723 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp723:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp724 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp725 # Offset: 252
.Ltmp720:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp724:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp725 # Offset: 350
    00000164: 	jmp	.Ltmp720 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp721:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	log10f@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp723 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_log10fIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_log2fIfEEvPT_iPKc" after disassembly {
  Number      : 111
  State       : disassembled
  Address     : 0xe6a0
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xe6a0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_log2fIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0110:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp726 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp731:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp727 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp728:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	log2f@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp728 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	log2f@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp729 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp729:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp730 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp731 # Offset: 252
.Ltmp726:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp730:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp731 # Offset: 350
    00000164: 	jmp	.Ltmp726 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp727:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	log2f@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp729 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_log2fIfEEvPT_iPKc"

Binary Function "_Z14test_variable1If12mathlib_powfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 112
  State       : disassembled
  Address     : 0xe840
  Size        : 0x1c8
  MaxSize     : 0x1d0
  Offset      : 0xe840
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If12mathlib_powfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0111:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	movl	iterations(%rip), %eax
    00000035: 	testl	%eax, %eax
    00000037: 	jle	.Ltmp732 # Offset: 55
    0000003d: 	leal	-0x1(%r13), %eax
    00000041: 	movss	0x8(%rsp), %xmm1
    00000047: 	xorl	%ebp, %ebp
    00000049: 	leaq	DATAat0x12802(%rip), %r15
    00000050: 	leaq	0x4(%r12,%rax,4), %rbx
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp737:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp733 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp734:
    00000080: 	movss	(%r14), %xmm0
    00000085: 	movss	%xmm2, 0xc(%rsp)
    0000008b: 	addq	$0x4, %r14
    0000008f: 	movss	%xmm1, 0x8(%rsp)
    00000095: 	callq	powf@PLT # Offset: 149
    0000009a: 	movss	0xc(%rsp), %xmm2
    000000a0: 	cmpq	%r14, %rbx
    000000a3: 	movss	0x8(%rsp), %xmm1
    000000a9: 	addss	%xmm0, %xmm2
    000000ad: 	jne	.Ltmp734 # Offset: 173
    000000af: 	pxor	%xmm0, %xmm0
    000000b3: 	movss	%xmm2, 0xc(%rsp)
    000000b9: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000bf: 	callq	powf@PLT # Offset: 191
    000000c4: 	mulss	DATAat0x12950(%rip), %xmm0
    000000cc: 	movss	0xc(%rsp), %xmm2
    000000d2: 	movss	0x8(%rsp), %xmm1
    000000d8: 	movaps	%xmm2, %xmm3
    000000db: 	subss	%xmm0, %xmm3
    000000df: 	movaps	%xmm2, %xmm0
    000000e2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000e9: 	cvtss2sd	%xmm0, %xmm0
    000000ed: 	comisd	DATAat0x12830(%rip), %xmm0
    000000f5: 	jbe	.Ltmp735 # Offset: 245
    000000f7: 	divss	%xmm2, %xmm3
.Ltmp735:
    000000fb: 	movsd	DATAat0x12860(%rip), %xmm4
    00000103: 	cvtss2sd	%xmm3, %xmm3
    00000107: 	andpd	DATAat0x12890(%rip), %xmm3
    0000010f: 	comisd	%xmm3, %xmm4
    00000113: 	jbe	.Ltmp736 # Offset: 275
    00000115: 	addl	$0x1, %ebp
    00000118: 	cmpl	%ebp, iterations(%rip)
    0000011e: 	jg	.Ltmp737 # Offset: 286
.Ltmp732:
    00000124: 	callq	clock@PLT # Offset: 292
    00000129: 	pxor	%xmm0, %xmm0
    0000012d: 	movq	0x18(%rsp), %rdi
    00000132: 	movq	%rax, end_time(%rip)
    00000139: 	subq	start_time(%rip), %rax
    00000140: 	cvtsi2sd	%rax, %xmm0
    00000145: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014d: 	addq	$0x28, %rsp
    00000151: 	popq	%rbx
    00000152: 	popq	%rbp
    00000153: 	popq	%r12
    00000155: 	popq	%r13
    00000157: 	popq	%r14
    00000159: 	popq	%r15
    0000015b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 347
.Ltmp736:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	xorl	%eax, %eax
    00000168: 	movq	%r15, %rsi
    0000016b: 	movl	$0x1, %edi
    00000170: 	movss	%xmm1, 0x8(%rsp)
    00000176: 	addl	$0x1, %ebp
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebp, iterations(%rip)
    00000184: 	movss	0x8(%rsp), %xmm1
    0000018a: 	jg	.Ltmp737 # Offset: 394
    00000190: 	jmp	.Ltmp732 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp733:
    00000198: 	pxor	%xmm0, %xmm0
    0000019c: 	movss	%xmm1, 0x8(%rsp)
    000001a2: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001a8: 	callq	powf@PLT # Offset: 424
    000001ad: 	pxor	%xmm3, %xmm3
    000001b1: 	movss	0x8(%rsp), %xmm1
    000001b7: 	mulss	DATAat0x12950(%rip), %xmm0
    000001bf: 	subss	%xmm0, %xmm3
    000001c3: 	jmp	.Ltmp735 # Offset: 451
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If12mathlib_powfIfEEvPT_iS2_PKc"

Binary Function "_Z13test_constantIf14mathlib_roundfIfEEvPT_iPKc" after disassembly {
  Number      : 113
  State       : disassembled
  Address     : 0xea10
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xea10
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_roundfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0112:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp738 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp743:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	roundf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp739 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp740:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	roundf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp740 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp741 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp741:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp742 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp743 # Offset: 248
.Ltmp738:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp742:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp738 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp743 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp739:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp741 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_roundfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi15mathlib_lroundfIfEEvPT_iPKc" after disassembly {
  Number      : 114
  State       : disassembled
  Address     : 0xeba0
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0xeba0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi15mathlib_lroundfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0113:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp744 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%rbx,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp748:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp745 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp746:
    00000058: 	movss	(%r14), %xmm0
    0000005d: 	addq	$0x4, %r14
    00000061: 	callq	lroundf@PLT # Offset: 97
    00000066: 	addl	%eax, %ebx
    00000068: 	cmpq	%rbp, %r14
    0000006b: 	jne	.Ltmp746 # Offset: 107
.Ltmp745:
    0000006d: 	pxor	%xmm0, %xmm0
    00000071: 	cvtsd2ss	init_value(%rip), %xmm0
    00000079: 	callq	lroundf@PLT # Offset: 121
    0000007e: 	imull	$0x1f40, %eax, %eax
    00000084: 	cmpl	%ebx, %eax
    00000086: 	je	.Ltmp747 # Offset: 134
    00000088: 	movl	current_test(%rip), %edx
    0000008e: 	leaq	DATAat0x12802(%rip), %rsi
    00000095: 	movl	$0x1, %edi
    0000009a: 	xorl	%eax, %eax
    0000009c: 	addl	$0x1, %r12d
    000000a0: 	callq	__printf_chk@PLT # Offset: 160
    000000a5: 	movl	iterations(%rip), %r13d
    000000ac: 	cmpl	%r13d, %r12d
    000000af: 	jl	.Ltmp748 # Offset: 175
.Ltmp744:
    000000b1: 	callq	clock@PLT # Offset: 177
    000000b6: 	pxor	%xmm0, %xmm0
    000000ba: 	movq	0x8(%rsp), %rdi
    000000bf: 	movq	%rax, end_time(%rip)
    000000c6: 	subq	start_time(%rip), %rax
    000000cd: 	cvtsi2sd	%rax, %xmm0
    000000d2: 	divsd	DATAat0x12828(%rip), %xmm0
    000000da: 	addq	$0x18, %rsp
    000000de: 	popq	%rbx
    000000df: 	popq	%rbp
    000000e0: 	popq	%r12
    000000e2: 	popq	%r13
    000000e4: 	popq	%r14
    000000e6: 	popq	%r15
    000000e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp747:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp748 # Offset: 247
    000000fd: 	jmp	.Ltmp744 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi15mathlib_lroundfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfx16mathlib_llroundfIfEEvPT_iPKc" after disassembly {
  Number      : 115
  State       : disassembled
  Address     : 0xeca0
  Size        : 0x107
  MaxSize     : 0x110
  Offset      : 0xeca0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfx16mathlib_llroundfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0114:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp749 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%rbx,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp753:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp750 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp751:
    00000058: 	movss	(%r14), %xmm0
    0000005d: 	addq	$0x4, %r14
    00000061: 	callq	llroundf@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp751 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp750:
    00000071: 	pxor	%xmm0, %xmm0
    00000075: 	cvtsd2ss	init_value(%rip), %xmm0
    0000007d: 	callq	llroundf@PLT # Offset: 125
    00000082: 	imulq	$0x1f40, %rax, %rax
    00000089: 	cmpq	%rbx, %rax
    0000008c: 	je	.Ltmp752 # Offset: 140
    0000008e: 	movl	current_test(%rip), %edx
    00000094: 	leaq	DATAat0x12802(%rip), %rsi
    0000009b: 	movl	$0x1, %edi
    000000a0: 	xorl	%eax, %eax
    000000a2: 	addl	$0x1, %r12d
    000000a6: 	callq	__printf_chk@PLT # Offset: 166
    000000ab: 	movl	iterations(%rip), %r13d
    000000b2: 	cmpl	%r13d, %r12d
    000000b5: 	jl	.Ltmp753 # Offset: 181
.Ltmp749:
    000000b7: 	callq	clock@PLT # Offset: 183
    000000bc: 	pxor	%xmm0, %xmm0
    000000c0: 	movq	0x8(%rsp), %rdi
    000000c5: 	movq	%rax, end_time(%rip)
    000000cc: 	subq	start_time(%rip), %rax
    000000d3: 	cvtsi2sd	%rax, %xmm0
    000000d8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	popq	%r14
    000000ec: 	popq	%r15
    000000ee: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 238
    000000f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp752:
    000000f8: 	addl	$0x1, %r12d
    000000fc: 	cmpl	%r12d, %r13d
    000000ff: 	jg	.Ltmp753 # Offset: 255
    00000105: 	jmp	.Ltmp749 # Offset: 261
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfx16mathlib_llroundfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_truncfIfEEvPT_iPKc" after disassembly {
  Number      : 116
  State       : disassembled
  Address     : 0xedb0
  Size        : 0x204
  MaxSize     : 0x210
  Offset      : 0xedb0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_truncfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0115:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %ecx
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%ecx, %ecx
    0000002f: 	jle	.Ltmp754 # Offset: 47
    00000035: 	leal	-0x1(%r14), %eax
    00000039: 	pxor	%xmm12, %xmm12
    0000003e: 	pxor	%xmm7, %xmm7
    00000042: 	xorl	%r12d, %r12d
    00000045: 	movss	DATAat0x128e0(%rip), %xmm11
    0000004e: 	leaq	0x4(%r13,%rax,4), %rbx
    00000053: 	movss	DATAat0x12954(%rip), %xmm4
    0000005b: 	movq	DATAat0x12890(%rip), %xmm10
    00000064: 	movsd	DATAat0x12860(%rip), %xmm9
    0000006d: 	movaps	%xmm11, %xmm3
    00000071: 	movss	DATAat0x12950(%rip), %xmm8
    0000007a: 	leaq	DATAat0x12802(%rip), %r15
    00000081: 	cvtsd2ss	init_value(%rip), %xmm12
    0000008a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp761:
    00000090: 	movaps	%xmm12, %xmm1
    00000094: 	movaps	%xmm12, %xmm6
    00000098: 	andps	%xmm3, %xmm1
    0000009b: 	ucomiss	%xmm1, %xmm4
    0000009e: 	jbe	.Ltmp755 # Offset: 158
    000000a0: 	cvttss2si	%xmm12, %eax
    000000a5: 	pxor	%xmm1, %xmm1
    000000a9: 	movaps	%xmm3, %xmm6
    000000ac: 	andnps	%xmm12, %xmm6
    000000b0: 	cvtsi2ss	%eax, %xmm1
    000000b4: 	orps	%xmm1, %xmm6
.Ltmp755:
    000000b7: 	mulss	%xmm8, %xmm6
    000000bc: 	movq	%r13, %rax
    000000bf: 	movaps	%xmm7, %xmm2
    000000c2: 	testl	%r14d, %r14d
    000000c5: 	jle	.Ltmp756 # Offset: 197
    000000cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp758:
    000000d0: 	movss	(%rax), %xmm0
    000000d4: 	movaps	%xmm0, %xmm1
    000000d7: 	andps	%xmm3, %xmm1
    000000da: 	ucomiss	%xmm1, %xmm4
    000000dd: 	jbe	.Ltmp757 # Offset: 221
    000000df: 	cvttss2si	%xmm0, %edx
    000000e3: 	pxor	%xmm1, %xmm1
    000000e7: 	movaps	%xmm3, %xmm5
    000000ea: 	andnps	%xmm0, %xmm5
    000000ed: 	cvtsi2ss	%edx, %xmm1
    000000f1: 	movaps	%xmm1, %xmm0
    000000f4: 	orps	%xmm5, %xmm0
.Ltmp757:
    000000f7: 	addq	$0x4, %rax
    000000fb: 	addss	%xmm0, %xmm2
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	jne	.Ltmp758 # Offset: 258
    00000104: 	movaps	%xmm2, %xmm1
    00000107: 	movaps	%xmm2, %xmm0
    0000010a: 	andps	%xmm11, %xmm1
    0000010e: 	subss	%xmm6, %xmm0
    00000112: 	cvtss2sd	%xmm1, %xmm1
    00000116: 	comisd	DATAat0x12830(%rip), %xmm1
    0000011e: 	jbe	.Ltmp759 # Offset: 286
    00000120: 	divss	%xmm2, %xmm0
.Ltmp759:
    00000124: 	cvtss2sd	%xmm0, %xmm0
    00000128: 	andpd	%xmm10, %xmm0
    0000012d: 	comisd	%xmm0, %xmm9
    00000132: 	jbe	.Ltmp760 # Offset: 306
    00000134: 	addl	$0x1, %r12d
    00000138: 	cmpl	%ecx, %r12d
    0000013b: 	jl	.Ltmp761 # Offset: 315
.Ltmp754:
    00000141: 	callq	clock@PLT # Offset: 321
    00000146: 	pxor	%xmm0, %xmm0
    0000014a: 	movq	%rbp, %rdi
    0000014d: 	movq	%rax, end_time(%rip)
    00000154: 	subq	start_time(%rip), %rax
    0000015b: 	cvtsi2sd	%rax, %xmm0
    00000160: 	divsd	DATAat0x12828(%rip), %xmm0
    00000168: 	addq	$0x8, %rsp
    0000016c: 	popq	%rbx
    0000016d: 	popq	%rbp
    0000016e: 	popq	%r12
    00000170: 	popq	%r13
    00000172: 	popq	%r14
    00000174: 	popq	%r15
    00000176: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 374
    0000017b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp760:
    00000180: 	movl	current_test(%rip), %edx
    00000186: 	movq	%r15, %rsi
    00000189: 	movl	$0x1, %edi
    0000018e: 	xorl	%eax, %eax
    00000190: 	addl	$0x1, %r12d
    00000194: 	callq	__printf_chk@PLT # Offset: 404
    00000199: 	movl	iterations(%rip), %ecx
    0000019f: 	cmpl	%ecx, %r12d
    000001a2: 	jge	.Ltmp754 # Offset: 418
    000001a4: 	movq	DATAat0x12860(%rip), %rax
    000001ab: 	pxor	%xmm12, %xmm12
    000001b0: 	movss	DATAat0x12884(%rip), %xmm3
    000001b8: 	pxor	%xmm7, %xmm7
    000001bc: 	movss	DATAat0x12950(%rip), %xmm8
    000001c5: 	movss	DATAat0x12954(%rip), %xmm4
    000001cd: 	movss	DATAat0x128e0(%rip), %xmm11
    000001d6: 	cvtsd2ss	init_value(%rip), %xmm12
    000001df: 	movq	DATAat0x12890(%rip), %xmm10
    000001e8: 	movq	%rax, %xmm9
    000001ed: 	jmp	.Ltmp761 # Offset: 493
    000001f2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp756:
    000001f8: 	movaps	%xmm7, %xmm0
    000001fb: 	subss	%xmm6, %xmm0
    000001ff: 	jmp	.Ltmp759 # Offset: 511
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_truncfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_coshfIfEEvPT_iPKc" after disassembly {
  Number      : 117
  State       : disassembled
  Address     : 0xefc0
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xefc0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_coshfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0116:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp762 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp767:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp763 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp764:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	coshf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp764 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	coshf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp765 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp765:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp766 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp767 # Offset: 252
.Ltmp762:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp766:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp767 # Offset: 350
    00000164: 	jmp	.Ltmp762 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp763:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	coshf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp765 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_coshfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_sinhfIfEEvPT_iPKc" after disassembly {
  Number      : 118
  State       : disassembled
  Address     : 0xf160
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xf160
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_sinhfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0117:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp768 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp773:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp769 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp770:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	sinhf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp770 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	sinhf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp771 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp771:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp772 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp773 # Offset: 252
.Ltmp768:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp772:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp773 # Offset: 350
    00000164: 	jmp	.Ltmp768 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp769:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	sinhf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp771 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_sinhfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_tanhfIfEEvPT_iPKc" after disassembly {
  Number      : 119
  State       : disassembled
  Address     : 0xf300
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xf300
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_tanhfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0118:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp774 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp779:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	tanhf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp775 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp776:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	tanhf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp776 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp777 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp777:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp778 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp779 # Offset: 248
.Ltmp774:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp778:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp774 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp779 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp775:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp777 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_tanhfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_acoshfIfEEvPT_iPKc" after disassembly {
  Number      : 120
  State       : disassembled
  Address     : 0xf490
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xf490
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_acoshfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0119:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp780 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp785:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp781 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp782:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	acoshf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp782 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	acoshf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp783 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp783:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp784 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp785 # Offset: 252
.Ltmp780:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp784:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp785 # Offset: 350
    00000164: 	jmp	.Ltmp780 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp781:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	acoshf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp783 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_acoshfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_asinhfIfEEvPT_iPKc" after disassembly {
  Number      : 121
  State       : disassembled
  Address     : 0xf630
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0xf630
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_asinhfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0120:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp786 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp791:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	asinhf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp787 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp788:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	asinhf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp788 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp789 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp789:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp790 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp791 # Offset: 248
.Ltmp786:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp790:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp786 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp791 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp787:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp789 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_asinhfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_atanhfIfEEvPT_iPKc" after disassembly {
  Number      : 122
  State       : disassembled
  Address     : 0xf7c0
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0xf7c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_atanhfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0121:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp792 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp797:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp793 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp794:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	atanhf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp794 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	atanhf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp795 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp795:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp796 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp797 # Offset: 252
.Ltmp792:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp796:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp797 # Offset: 350
    00000164: 	jmp	.Ltmp792 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp793:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	atanhf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp795 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_atanhfIfEEvPT_iPKc"

Binary Function "_Z14test_variable1If13mathlib_fmodfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 123
  State       : disassembled
  Address     : 0xf960
  Size        : 0x1c8
  MaxSize     : 0x1d0
  Offset      : 0xf960
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If13mathlib_fmodfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0122:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	movl	iterations(%rip), %eax
    00000035: 	testl	%eax, %eax
    00000037: 	jle	.Ltmp798 # Offset: 55
    0000003d: 	leal	-0x1(%r13), %eax
    00000041: 	movss	0x8(%rsp), %xmm1
    00000047: 	xorl	%ebp, %ebp
    00000049: 	leaq	DATAat0x12802(%rip), %r15
    00000050: 	leaq	0x4(%r12,%rax,4), %rbx
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp803:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp799 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp800:
    00000080: 	movss	(%r14), %xmm0
    00000085: 	movss	%xmm2, 0xc(%rsp)
    0000008b: 	addq	$0x4, %r14
    0000008f: 	movss	%xmm1, 0x8(%rsp)
    00000095: 	callq	fmodf@PLT # Offset: 149
    0000009a: 	movss	0xc(%rsp), %xmm2
    000000a0: 	cmpq	%r14, %rbx
    000000a3: 	movss	0x8(%rsp), %xmm1
    000000a9: 	addss	%xmm0, %xmm2
    000000ad: 	jne	.Ltmp800 # Offset: 173
    000000af: 	pxor	%xmm0, %xmm0
    000000b3: 	movss	%xmm2, 0xc(%rsp)
    000000b9: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000bf: 	callq	fmodf@PLT # Offset: 191
    000000c4: 	mulss	DATAat0x12950(%rip), %xmm0
    000000cc: 	movss	0xc(%rsp), %xmm2
    000000d2: 	movss	0x8(%rsp), %xmm1
    000000d8: 	movaps	%xmm2, %xmm3
    000000db: 	subss	%xmm0, %xmm3
    000000df: 	movaps	%xmm2, %xmm0
    000000e2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000e9: 	cvtss2sd	%xmm0, %xmm0
    000000ed: 	comisd	DATAat0x12830(%rip), %xmm0
    000000f5: 	jbe	.Ltmp801 # Offset: 245
    000000f7: 	divss	%xmm2, %xmm3
.Ltmp801:
    000000fb: 	movsd	DATAat0x12860(%rip), %xmm4
    00000103: 	cvtss2sd	%xmm3, %xmm3
    00000107: 	andpd	DATAat0x12890(%rip), %xmm3
    0000010f: 	comisd	%xmm3, %xmm4
    00000113: 	jbe	.Ltmp802 # Offset: 275
    00000115: 	addl	$0x1, %ebp
    00000118: 	cmpl	%ebp, iterations(%rip)
    0000011e: 	jg	.Ltmp803 # Offset: 286
.Ltmp798:
    00000124: 	callq	clock@PLT # Offset: 292
    00000129: 	pxor	%xmm0, %xmm0
    0000012d: 	movq	0x18(%rsp), %rdi
    00000132: 	movq	%rax, end_time(%rip)
    00000139: 	subq	start_time(%rip), %rax
    00000140: 	cvtsi2sd	%rax, %xmm0
    00000145: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014d: 	addq	$0x28, %rsp
    00000151: 	popq	%rbx
    00000152: 	popq	%rbp
    00000153: 	popq	%r12
    00000155: 	popq	%r13
    00000157: 	popq	%r14
    00000159: 	popq	%r15
    0000015b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 347
.Ltmp802:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	xorl	%eax, %eax
    00000168: 	movq	%r15, %rsi
    0000016b: 	movl	$0x1, %edi
    00000170: 	movss	%xmm1, 0x8(%rsp)
    00000176: 	addl	$0x1, %ebp
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebp, iterations(%rip)
    00000184: 	movss	0x8(%rsp), %xmm1
    0000018a: 	jg	.Ltmp803 # Offset: 394
    00000190: 	jmp	.Ltmp798 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp799:
    00000198: 	pxor	%xmm0, %xmm0
    0000019c: 	movss	%xmm1, 0x8(%rsp)
    000001a2: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001a8: 	callq	fmodf@PLT # Offset: 424
    000001ad: 	pxor	%xmm3, %xmm3
    000001b1: 	movss	0x8(%rsp), %xmm1
    000001b7: 	mulss	DATAat0x12950(%rip), %xmm0
    000001bf: 	subss	%xmm0, %xmm3
    000001c3: 	jmp	.Ltmp801 # Offset: 451
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If13mathlib_fmodfIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If18mathlib_remainderfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 124
  State       : disassembled
  Address     : 0xfb30
  Size        : 0x1c8
  MaxSize     : 0x1d0
  Offset      : 0xfb30
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If18mathlib_remainderfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0123:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	movss	%xmm0, 0x8(%rsp)
    00000023: 	callq	clock@PLT # Offset: 35
    00000028: 	movq	%rax, start_time(%rip)
    0000002f: 	movl	iterations(%rip), %eax
    00000035: 	testl	%eax, %eax
    00000037: 	jle	.Ltmp804 # Offset: 55
    0000003d: 	leal	-0x1(%r13), %eax
    00000041: 	movss	0x8(%rsp), %xmm1
    00000047: 	xorl	%ebp, %ebp
    00000049: 	leaq	DATAat0x12802(%rip), %r15
    00000050: 	leaq	0x4(%r12,%rax,4), %rbx
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp809:
    00000058: 	movsd	init_value(%rip), %xmm5
    00000060: 	movq	%r12, %r14
    00000063: 	pxor	%xmm2, %xmm2
    00000067: 	movsd	%xmm5, 0x10(%rsp)
    0000006d: 	testl	%r13d, %r13d
    00000070: 	jle	.Ltmp805 # Offset: 112
    00000076: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp806:
    00000080: 	movss	(%r14), %xmm0
    00000085: 	movss	%xmm2, 0xc(%rsp)
    0000008b: 	addq	$0x4, %r14
    0000008f: 	movss	%xmm1, 0x8(%rsp)
    00000095: 	callq	remainderf@PLT # Offset: 149
    0000009a: 	movss	0xc(%rsp), %xmm2
    000000a0: 	cmpq	%r14, %rbx
    000000a3: 	movss	0x8(%rsp), %xmm1
    000000a9: 	addss	%xmm0, %xmm2
    000000ad: 	jne	.Ltmp806 # Offset: 173
    000000af: 	pxor	%xmm0, %xmm0
    000000b3: 	movss	%xmm2, 0xc(%rsp)
    000000b9: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000bf: 	callq	remainderf@PLT # Offset: 191
    000000c4: 	mulss	DATAat0x12950(%rip), %xmm0
    000000cc: 	movss	0xc(%rsp), %xmm2
    000000d2: 	movss	0x8(%rsp), %xmm1
    000000d8: 	movaps	%xmm2, %xmm3
    000000db: 	subss	%xmm0, %xmm3
    000000df: 	movaps	%xmm2, %xmm0
    000000e2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000e9: 	cvtss2sd	%xmm0, %xmm0
    000000ed: 	comisd	DATAat0x12830(%rip), %xmm0
    000000f5: 	jbe	.Ltmp807 # Offset: 245
    000000f7: 	divss	%xmm2, %xmm3
.Ltmp807:
    000000fb: 	movsd	DATAat0x12860(%rip), %xmm4
    00000103: 	cvtss2sd	%xmm3, %xmm3
    00000107: 	andpd	DATAat0x12890(%rip), %xmm3
    0000010f: 	comisd	%xmm3, %xmm4
    00000113: 	jbe	.Ltmp808 # Offset: 275
    00000115: 	addl	$0x1, %ebp
    00000118: 	cmpl	%ebp, iterations(%rip)
    0000011e: 	jg	.Ltmp809 # Offset: 286
.Ltmp804:
    00000124: 	callq	clock@PLT # Offset: 292
    00000129: 	pxor	%xmm0, %xmm0
    0000012d: 	movq	0x18(%rsp), %rdi
    00000132: 	movq	%rax, end_time(%rip)
    00000139: 	subq	start_time(%rip), %rax
    00000140: 	cvtsi2sd	%rax, %xmm0
    00000145: 	divsd	DATAat0x12828(%rip), %xmm0
    0000014d: 	addq	$0x28, %rsp
    00000151: 	popq	%rbx
    00000152: 	popq	%rbp
    00000153: 	popq	%r12
    00000155: 	popq	%r13
    00000157: 	popq	%r14
    00000159: 	popq	%r15
    0000015b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 347
.Ltmp808:
    00000160: 	movl	current_test(%rip), %edx
    00000166: 	xorl	%eax, %eax
    00000168: 	movq	%r15, %rsi
    0000016b: 	movl	$0x1, %edi
    00000170: 	movss	%xmm1, 0x8(%rsp)
    00000176: 	addl	$0x1, %ebp
    00000179: 	callq	__printf_chk@PLT # Offset: 377
    0000017e: 	cmpl	%ebp, iterations(%rip)
    00000184: 	movss	0x8(%rsp), %xmm1
    0000018a: 	jg	.Ltmp809 # Offset: 394
    00000190: 	jmp	.Ltmp804 # Offset: 400
    00000192: 	nopw	(%rax,%rax) # Size: 6
.Ltmp805:
    00000198: 	pxor	%xmm0, %xmm0
    0000019c: 	movss	%xmm1, 0x8(%rsp)
    000001a2: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001a8: 	callq	remainderf@PLT # Offset: 424
    000001ad: 	pxor	%xmm3, %xmm3
    000001b1: 	movss	0x8(%rsp), %xmm1
    000001b7: 	mulss	DATAat0x12950(%rip), %xmm0
    000001bf: 	subss	%xmm0, %xmm3
    000001c3: 	jmp	.Ltmp807 # Offset: 451
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If18mathlib_remainderfIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1If17mathlib_copysignfIfEEvPT_iS2_PKc" after disassembly {
  Number      : 125
  State       : disassembled
  Address     : 0xfd00
  Size        : 0x2b0
  MaxSize     : 0x2b0
  Offset      : 0xfd00
  Section     : .text
  Orc Section : .local.text._Z14test_variable1If17mathlib_copysignfIfEEvPT_iS2_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0124:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movq	%rdi, %r13
    0000000d: 	pushq	%r12
    0000000f: 	movl	%esi, %r12d
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	movss	%xmm0, (%rsp)
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %edx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%edx, %edx
    00000036: 	jle	.Ltmp810 # Offset: 54
    0000003c: 	movl	%r12d, %eax
    0000003f: 	movl	%r12d, %r15d
    00000042: 	movaps	DATAat0x12930(%rip), %xmm3
    00000049: 	xorl	%r14d, %r14d
    0000004c: 	shrl	$0x2, %eax
    0000004f: 	movss	DATAat0x12950(%rip), %xmm7
    00000057: 	movq	DATAat0x12890(%rip), %xmm9
    00000060: 	pxor	%xmm13, %xmm13
    00000065: 	subl	$0x1, %eax
    00000068: 	movss	(%rsp), %xmm12
    0000006e: 	leal	-0x1(%r12), %ecx
    00000073: 	movsd	DATAat0x12860(%rip), %xmm8
    0000007c: 	shlq	$0x4, %rax
    00000080: 	andl	$-0x4, %r15d
    00000084: 	pxor	%xmm10, %xmm10
    00000089: 	cvtsd2ss	init_value(%rip), %xmm13
    00000092: 	leaq	0x10(%r13,%rax), %rbx
    00000097: 	movss	DATAat0x12940(%rip), %xmm6
    0000009f: 	movss	DATAat0x128e0(%rip), %xmm5
    000000a7: 	leaq	DATAat0x12802(%rip), %rbp
    000000ae: 	nop # Size: 2
.Ltmp817:
    000000b0: 	movaps	%xmm6, %xmm4
    000000b3: 	movaps	%xmm12, %xmm2
    000000b7: 	andps	%xmm6, %xmm2
    000000ba: 	andnps	%xmm13, %xmm4
    000000be: 	orps	%xmm2, %xmm4
    000000c1: 	mulss	%xmm7, %xmm4
    000000c5: 	testl	%r12d, %r12d
    000000c8: 	jle	.Ltmp811 # Offset: 200
    000000ce: 	cmpl	$0x2, %ecx
    000000d1: 	jbe	.Ltmp812 # Offset: 209
    000000d7: 	movaps	%xmm12, %xmm2
    000000db: 	movq	%r13, %rax
    000000de: 	movaps	%xmm10, %xmm1
    000000e2: 	shufps	$0x0, %xmm2, %xmm2
    000000e6: 	andps	%xmm3, %xmm2
    000000e9: 	nopl	(%rax) # Size: 7
.Ltmp813:
    000000f0: 	movups	(%rax), %xmm14
    000000f4: 	movaps	%xmm3, %xmm0
    000000f7: 	addq	$0x10, %rax
    000000fb: 	andnps	%xmm14, %xmm0
    000000ff: 	orps	%xmm2, %xmm0
    00000102: 	addss	%xmm0, %xmm1
    00000106: 	movaps	%xmm0, %xmm11
    0000010a: 	shufps	$0x55, %xmm0, %xmm11
    0000010f: 	addss	%xmm1, %xmm11
    00000114: 	movaps	%xmm0, %xmm1
    00000117: 	unpckhps	%xmm0, %xmm1
    0000011a: 	shufps	$0xff, %xmm0, %xmm0
    0000011e: 	addss	%xmm11, %xmm1
    00000123: 	addss	%xmm0, %xmm1
    00000127: 	cmpq	%rax, %rbx
    0000012a: 	jne	.Ltmp813 # Offset: 298
    0000012c: 	movl	%r15d, %eax
    0000012f: 	cmpl	%r12d, %r15d
    00000132: 	je	.Ltmp814 # Offset: 306
.Ltmp818:
    00000134: 	movslq	%eax, %r8
    00000137: 	movaps	%xmm12, %xmm2
    0000013b: 	movss	(%r13,%r8,4), %xmm0
    00000142: 	andps	%xmm6, %xmm2
    00000145: 	leaq	(,%r8,4), %rdi
    0000014d: 	leal	0x1(%rax), %r8d
    00000151: 	andps	%xmm5, %xmm0
    00000154: 	orps	%xmm2, %xmm0
    00000157: 	addss	%xmm0, %xmm1
    0000015b: 	cmpl	%r8d, %r12d
    0000015e: 	jle	.Ltmp814 # Offset: 350
    00000160: 	movss	0x4(%r13,%rdi), %xmm0
    00000167: 	movaps	%xmm12, %xmm2
    0000016b: 	addl	$0x2, %eax
    0000016e: 	andps	%xmm6, %xmm2
    00000171: 	andps	%xmm5, %xmm0
    00000174: 	orps	%xmm2, %xmm0
    00000177: 	addss	%xmm0, %xmm1
    0000017b: 	cmpl	%eax, %r12d
    0000017e: 	jle	.Ltmp814 # Offset: 382
    00000180: 	movss	0x8(%r13,%rdi), %xmm0
    00000187: 	movaps	%xmm12, %xmm2
    0000018b: 	andps	%xmm6, %xmm2
    0000018e: 	andps	%xmm5, %xmm0
    00000191: 	orps	%xmm2, %xmm0
    00000194: 	addss	%xmm0, %xmm1
.Ltmp814:
    00000198: 	movaps	%xmm1, %xmm2
    0000019b: 	movaps	%xmm1, %xmm0
    0000019e: 	andps	%xmm5, %xmm2
    000001a1: 	subss	%xmm4, %xmm0
    000001a5: 	cvtss2sd	%xmm2, %xmm2
    000001a9: 	comisd	DATAat0x12830(%rip), %xmm2
    000001b1: 	jbe	.Ltmp815 # Offset: 433
    000001b3: 	divss	%xmm1, %xmm0
.Ltmp815:
    000001b7: 	cvtss2sd	%xmm0, %xmm0
    000001bb: 	andpd	%xmm9, %xmm0
    000001c0: 	comisd	%xmm0, %xmm8
    000001c5: 	jbe	.Ltmp816 # Offset: 453
    000001c7: 	addl	$0x1, %r14d
    000001cb: 	cmpl	%edx, %r14d
    000001ce: 	jl	.Ltmp817 # Offset: 462
.Ltmp810:
    000001d4: 	callq	clock@PLT # Offset: 468
    000001d9: 	pxor	%xmm0, %xmm0
    000001dd: 	movq	0x8(%rsp), %rdi
    000001e2: 	movq	%rax, end_time(%rip)
    000001e9: 	subq	start_time(%rip), %rax
    000001f0: 	cvtsi2sd	%rax, %xmm0
    000001f5: 	divsd	DATAat0x12828(%rip), %xmm0
    000001fd: 	addq	$0x18, %rsp
    00000201: 	popq	%rbx
    00000202: 	popq	%rbp
    00000203: 	popq	%r12
    00000205: 	popq	%r13
    00000207: 	popq	%r14
    00000209: 	popq	%r15
    0000020b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 523
.Ltmp816:
    00000210: 	movl	current_test(%rip), %edx
    00000216: 	movq	%rbp, %rsi
    00000219: 	movl	$0x1, %edi
    0000021e: 	xorl	%eax, %eax
    00000220: 	movl	%ecx, (%rsp)
    00000223: 	addl	$0x1, %r14d
    00000227: 	movss	%xmm12, 0x4(%rsp)
    0000022e: 	callq	__printf_chk@PLT # Offset: 558
    00000233: 	movl	iterations(%rip), %edx
    00000239: 	cmpl	%edx, %r14d
    0000023c: 	jge	.Ltmp810 # Offset: 572
    0000023e: 	movq	DATAat0x12860(%rip), %rax
    00000245: 	pxor	%xmm13, %xmm13
    0000024a: 	movl	(%rsp), %ecx
    0000024d: 	movss	DATAat0x128e0(%rip), %xmm5
    00000255: 	movss	0x4(%rsp), %xmm12
    0000025c: 	movss	DATAat0x12950(%rip), %xmm7
    00000264: 	pxor	%xmm10, %xmm10
    00000269: 	movss	DATAat0x12940(%rip), %xmm6
    00000271: 	movq	DATAat0x12890(%rip), %xmm9
    0000027a: 	movaps	DATAat0x12930(%rip), %xmm3
    00000281: 	movq	%rax, %xmm8
    00000286: 	cvtsd2ss	init_value(%rip), %xmm13
    0000028f: 	jmp	.Ltmp817 # Offset: 655
    00000294: 	nopl	(%rax) # Size: 4
.Ltmp811:
    00000298: 	movaps	%xmm10, %xmm0
    0000029c: 	subss	%xmm4, %xmm0
    000002a0: 	jmp	.Ltmp815 # Offset: 672
.Ltmp812:
    000002a5: 	xorl	%eax, %eax
    000002a7: 	movaps	%xmm10, %xmm1
    000002ab: 	jmp	.Ltmp818 # Offset: 683
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1If17mathlib_copysignfIfEEvPT_iS2_PKc"

Binary Function "_Z14test_variable1Ifi14mathlib_ldexpfIfiEEvPT_iT0_PKc" after disassembly {
  Number      : 126
  State       : disassembled
  Address     : 0xffb0
  Size        : 0x19e
  MaxSize     : 0x1a0
  Offset      : 0xffb0
  Section     : .text
  Orc Section : .local.text._Z14test_variable1Ifi14mathlib_ldexpfIfiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0125:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	movl	%edx, %ebx
    00000016: 	subq	$0x28, %rsp
    0000001a: 	movq	%rcx, 0x18(%rsp)
    0000001f: 	callq	clock@PLT # Offset: 31
    00000024: 	movq	%rax, start_time(%rip)
    0000002b: 	movl	iterations(%rip), %eax
    00000031: 	testl	%eax, %eax
    00000033: 	jle	.Ltmp819 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%r13,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp824:
    00000048: 	movsd	init_value(%rip), %xmm4
    00000050: 	movq	%r13, %r15
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	movsd	%xmm4, 0x10(%rsp)
    0000005d: 	testl	%r14d, %r14d
    00000060: 	jle	.Ltmp820 # Offset: 96
    00000066: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp821:
    00000070: 	movss	(%r15), %xmm0
    00000075: 	movl	%ebx, %edi
    00000077: 	movss	%xmm1, 0xc(%rsp)
    0000007d: 	addq	$0x4, %r15
    00000081: 	callq	ldexpf@PLT # Offset: 129
    00000086: 	movss	0xc(%rsp), %xmm1
    0000008c: 	addss	%xmm0, %xmm1
    00000090: 	cmpq	%r15, %rbp
    00000093: 	jne	.Ltmp821 # Offset: 147
    00000095: 	pxor	%xmm0, %xmm0
    00000099: 	movl	%ebx, %edi
    0000009b: 	movss	%xmm1, 0xc(%rsp)
    000000a1: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a7: 	callq	ldexpf@PLT # Offset: 167
    000000ac: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b4: 	movss	0xc(%rsp), %xmm1
    000000ba: 	movaps	%xmm1, %xmm2
    000000bd: 	subss	%xmm0, %xmm2
    000000c1: 	movaps	%xmm1, %xmm0
    000000c4: 	andps	DATAat0x128e0(%rip), %xmm0
    000000cb: 	cvtss2sd	%xmm0, %xmm0
    000000cf: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d7: 	jbe	.Ltmp822 # Offset: 215
    000000d9: 	divss	%xmm1, %xmm2
.Ltmp822:
    000000dd: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e5: 	cvtss2sd	%xmm2, %xmm2
    000000e9: 	andpd	DATAat0x12890(%rip), %xmm2
    000000f1: 	comisd	%xmm2, %xmm3
    000000f5: 	jbe	.Ltmp823 # Offset: 245
    000000f7: 	addl	$0x1, %r12d
    000000fb: 	cmpl	%r12d, iterations(%rip)
    00000102: 	jg	.Ltmp824 # Offset: 258
.Ltmp819:
    00000108: 	callq	clock@PLT # Offset: 264
    0000010d: 	pxor	%xmm0, %xmm0
    00000111: 	movq	0x18(%rsp), %rdi
    00000116: 	movq	%rax, end_time(%rip)
    0000011d: 	subq	start_time(%rip), %rax
    00000124: 	cvtsi2sd	%rax, %xmm0
    00000129: 	divsd	DATAat0x12828(%rip), %xmm0
    00000131: 	addq	$0x28, %rsp
    00000135: 	popq	%rbx
    00000136: 	popq	%rbp
    00000137: 	popq	%r12
    00000139: 	popq	%r13
    0000013b: 	popq	%r14
    0000013d: 	popq	%r15
    0000013f: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 319
    00000144: 	nopl	(%rax) # Size: 4
.Ltmp823:
    00000148: 	movl	current_test(%rip), %edx
    0000014e: 	xorl	%eax, %eax
    00000150: 	movl	$0x1, %edi
    00000155: 	addl	$0x1, %r12d
    00000159: 	leaq	DATAat0x12802(%rip), %rsi
    00000160: 	callq	__printf_chk@PLT # Offset: 352
    00000165: 	cmpl	%r12d, iterations(%rip)
    0000016c: 	jg	.Ltmp824 # Offset: 364
    00000172: 	jmp	.Ltmp819 # Offset: 370
    00000174: 	nopl	(%rax) # Size: 4
.Ltmp820:
    00000178: 	pxor	%xmm0, %xmm0
    0000017c: 	movl	%ebx, %edi
    0000017e: 	cvtsd2ss	0x10(%rsp), %xmm0
    00000184: 	callq	ldexpf@PLT # Offset: 388
    00000189: 	pxor	%xmm2, %xmm2
    0000018d: 	mulss	DATAat0x12950(%rip), %xmm0
    00000195: 	subss	%xmm0, %xmm2
    00000199: 	jmp	.Ltmp822 # Offset: 409
DWARF CFI Instructions:
    <empty>
End of Function "_Z14test_variable1Ifi14mathlib_ldexpfIfiEEvPT_iT0_PKc"

Binary Function "_Z17test_variable1ptrIfi14mathlib_frexpfIfiEEvPT_iT0_PKc" after disassembly {
  Number      : 127
  State       : disassembled
  Address     : 0x10150
  Size        : 0x1cc
  MaxSize     : 0x1d0
  Offset      : 0x10150
  Section     : .text
  Orc Section : .local.text._Z17test_variable1ptrIfi14mathlib_frexpfIfiEEvPT_iT0_PKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0126:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x38, %rsp
    00000018: 	movq	%rcx, 0x18(%rsp)
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x28(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	callq	clock@PLT # Offset: 45
    00000032: 	movq	%rax, start_time(%rip)
    00000039: 	movl	iterations(%rip), %eax
    0000003f: 	testl	%eax, %eax
    00000041: 	jle	.Ltmp825 # Offset: 65
    00000047: 	leal	-0x1(%r14), %eax
    0000004b: 	xorl	%r12d, %r12d
    0000004e: 	leaq	0x24(%rsp), %rbx
    00000053: 	leaq	0x4(%r13,%rax,4), %rbp
    00000058: 	nopl	(%rax,%rax) # Size: 8
.Ltmp830:
    00000060: 	movsd	init_value(%rip), %xmm4
    00000068: 	movq	%r13, %r15
    0000006b: 	pxor	%xmm1, %xmm1
    0000006f: 	movsd	%xmm4, 0x10(%rsp)
    00000075: 	testl	%r14d, %r14d
    00000078: 	jle	.Ltmp826 # Offset: 120
    0000007e: 	nop # Size: 2
.Ltmp827:
    00000080: 	movss	(%r15), %xmm0
    00000085: 	movq	%rbx, %rdi
    00000088: 	movss	%xmm1, 0xc(%rsp)
    0000008e: 	addq	$0x4, %r15
    00000092: 	callq	frexpf@PLT # Offset: 146
    00000097: 	movss	0xc(%rsp), %xmm1
    0000009d: 	addss	%xmm0, %xmm1
    000000a1: 	cmpq	%r15, %rbp
    000000a4: 	jne	.Ltmp827 # Offset: 164
    000000a6: 	pxor	%xmm0, %xmm0
    000000aa: 	movq	%rbx, %rdi
    000000ad: 	movss	%xmm1, 0xc(%rsp)
    000000b3: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000b9: 	callq	frexpf@PLT # Offset: 185
    000000be: 	mulss	DATAat0x12950(%rip), %xmm0
    000000c6: 	movss	0xc(%rsp), %xmm1
    000000cc: 	movaps	%xmm1, %xmm2
    000000cf: 	subss	%xmm0, %xmm2
    000000d3: 	movaps	%xmm1, %xmm0
    000000d6: 	andps	DATAat0x128e0(%rip), %xmm0
    000000dd: 	cvtss2sd	%xmm0, %xmm0
    000000e1: 	comisd	DATAat0x12830(%rip), %xmm0
    000000e9: 	jbe	.Ltmp828 # Offset: 233
    000000eb: 	divss	%xmm1, %xmm2
.Ltmp828:
    000000ef: 	movsd	DATAat0x12860(%rip), %xmm3
    000000f7: 	cvtss2sd	%xmm2, %xmm2
    000000fb: 	andpd	DATAat0x12890(%rip), %xmm2
    00000103: 	comisd	%xmm2, %xmm3
    00000107: 	jbe	.Ltmp829 # Offset: 263
    00000109: 	addl	$0x1, %r12d
    0000010d: 	cmpl	%r12d, iterations(%rip)
    00000114: 	jg	.Ltmp830 # Offset: 276
.Ltmp825:
    0000011a: 	callq	clock@PLT # Offset: 282
    0000011f: 	movq	%rax, end_time(%rip)
    00000126: 	movq	0x28(%rsp), %rdx
    0000012b: 	subq	%fs:0x28, %rdx
    00000134: 	jne	.Ltmp831 # Offset: 308
    0000013a: 	subq	start_time(%rip), %rax
    00000141: 	pxor	%xmm0, %xmm0
    00000145: 	movq	0x18(%rsp), %rdi
    0000014a: 	cvtsi2sd	%rax, %xmm0
    0000014f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000157: 	addq	$0x38, %rsp
    0000015b: 	popq	%rbx
    0000015c: 	popq	%rbp
    0000015d: 	popq	%r12
    0000015f: 	popq	%r13
    00000161: 	popq	%r14
    00000163: 	popq	%r15
    00000165: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 357
    0000016a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp829:
    00000170: 	movl	current_test(%rip), %edx
    00000176: 	xorl	%eax, %eax
    00000178: 	movl	$0x1, %edi
    0000017d: 	addl	$0x1, %r12d
    00000181: 	leaq	DATAat0x12802(%rip), %rsi
    00000188: 	callq	__printf_chk@PLT # Offset: 392
    0000018d: 	cmpl	iterations(%rip), %r12d
    00000194: 	jl	.Ltmp830 # Offset: 404
    0000019a: 	jmp	.Ltmp825 # Offset: 410
    0000019f: 	nop # Size: 1
.Ltmp826:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	movq	%rbx, %rdi
    000001a7: 	cvtsd2ss	0x10(%rsp), %xmm0
    000001ad: 	callq	frexpf@PLT # Offset: 429
    000001b2: 	pxor	%xmm2, %xmm2
    000001b6: 	mulss	DATAat0x12950(%rip), %xmm0
    000001be: 	subss	%xmm0, %xmm2
    000001c2: 	jmp	.Ltmp828 # Offset: 450
.Ltmp831:
    000001c7: 	callq	__stack_chk_fail@PLT # Offset: 455
DWARF CFI Instructions:
    <empty>
End of Function "_Z17test_variable1ptrIfi14mathlib_frexpfIfiEEvPT_iT0_PKc"

Binary Function "_Z13test_constantIf14mathlib_expm1fIfEEvPT_iPKc" after disassembly {
  Number      : 128
  State       : disassembled
  Address     : 0x10320
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0x10320
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_expm1fIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0127:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp832 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp837:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp833 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp834:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	expm1f@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp834 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	expm1f@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp835 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp835:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp836 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp837 # Offset: 252
.Ltmp832:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp836:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp837 # Offset: 350
    00000164: 	jmp	.Ltmp832 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp833:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	expm1f@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp835 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_expm1fIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf14mathlib_log1pfIfEEvPT_iPKc" after disassembly {
  Number      : 129
  State       : disassembled
  Address     : 0x104c0
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0x104c0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf14mathlib_log1pfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0128:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp838 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp843:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp839 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp840:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	log1pf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp840 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	log1pf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp841 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp841:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp842 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp843 # Offset: 252
.Ltmp838:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp842:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp843 # Offset: 350
    00000164: 	jmp	.Ltmp838 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp839:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	log1pf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp841 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf14mathlib_log1pfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_logbfIfEEvPT_iPKc" after disassembly {
  Number      : 130
  State       : disassembled
  Address     : 0x10660
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0x10660
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_logbfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0129:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp844 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp849:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp845 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp846:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	logbf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp846 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	logbf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp847 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp847:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp848 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp849 # Offset: 252
.Ltmp844:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp848:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp849 # Offset: 350
    00000164: 	jmp	.Ltmp844 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp845:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	logbf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp847 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_logbfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_cbrtfIfEEvPT_iPKc" after disassembly {
  Number      : 131
  State       : disassembled
  Address     : 0x10800
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0x10800
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_cbrtfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0130:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp850 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp855:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	cbrtf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp851 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp852:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	cbrtf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp852 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp853 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp853:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp854 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp855 # Offset: 248
.Ltmp850:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp854:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp850 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp855 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp851:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp853 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_cbrtfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf12mathlib_erffIfEEvPT_iPKc" after disassembly {
  Number      : 132
  State       : disassembled
  Address     : 0x10990
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0x10990
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf12mathlib_erffIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0131:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp856 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp861:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	erff@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp857 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp858:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	erff@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp858 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp859 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp859:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp860 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp861 # Offset: 248
.Ltmp856:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp860:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp856 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp861 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp857:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp859 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf12mathlib_erffIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_erfcfIfEEvPT_iPKc" after disassembly {
  Number      : 133
  State       : disassembled
  Address     : 0x10b20
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0x10b20
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_erfcfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0132:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp862 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp867:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp863 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp864:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	erfcf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp864 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	erfcf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp865 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp865:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp866 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp867 # Offset: 252
.Ltmp862:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp866:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp867 # Offset: 350
    00000164: 	jmp	.Ltmp862 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp863:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	erfcf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp865 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_erfcfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf15mathlib_lgammafIfEEvPT_iPKc" after disassembly {
  Number      : 134
  State       : disassembled
  Address     : 0x10cc0
  Size        : 0x186
  MaxSize     : 0x190
  Offset      : 0x10cc0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf15mathlib_lgammafIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0133:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdx, 0x8(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp868 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp873:
    00000050: 	movq	%r12, %r14
    00000053: 	pxor	%xmm1, %xmm1
    00000057: 	testl	%r13d, %r13d
    0000005a: 	jle	.Ltmp869 # Offset: 90
.Ltmp870:
    00000060: 	movss	(%r14), %xmm0
    00000065: 	movss	%xmm1, 0x4(%rsp)
    0000006b: 	addq	$0x4, %r14
    0000006f: 	callq	lgammaf@PLT # Offset: 111
    00000074: 	movss	0x4(%rsp), %xmm1
    0000007a: 	addss	%xmm0, %xmm1
    0000007e: 	cmpq	%r14, %rbx
    00000081: 	jne	.Ltmp870 # Offset: 129
    00000083: 	pxor	%xmm0, %xmm0
    00000087: 	movss	%xmm1, 0x4(%rsp)
    0000008d: 	cvtsd2ss	init_value(%rip), %xmm0
    00000095: 	callq	lgammaf@PLT # Offset: 149
    0000009a: 	mulss	DATAat0x12950(%rip), %xmm0
    000000a2: 	movss	0x4(%rsp), %xmm1
    000000a8: 	movaps	%xmm1, %xmm2
    000000ab: 	subss	%xmm0, %xmm2
    000000af: 	movaps	%xmm1, %xmm0
    000000b2: 	andps	DATAat0x128e0(%rip), %xmm0
    000000b9: 	cvtss2sd	%xmm0, %xmm0
    000000bd: 	comisd	DATAat0x12830(%rip), %xmm0
    000000c5: 	jbe	.Ltmp871 # Offset: 197
    000000c7: 	divss	%xmm1, %xmm2
.Ltmp871:
    000000cb: 	movsd	DATAat0x12860(%rip), %xmm3
    000000d3: 	cvtss2sd	%xmm2, %xmm2
    000000d7: 	andpd	DATAat0x12890(%rip), %xmm2
    000000df: 	comisd	%xmm2, %xmm3
    000000e3: 	jbe	.Ltmp872 # Offset: 227
    000000e5: 	addl	$0x1, %ebp
    000000e8: 	cmpl	%ebp, iterations(%rip)
    000000ee: 	jg	.Ltmp873 # Offset: 238
.Ltmp868:
    000000f4: 	callq	clock@PLT # Offset: 244
    000000f9: 	pxor	%xmm0, %xmm0
    000000fd: 	movq	0x8(%rsp), %rdi
    00000102: 	movq	%rax, end_time(%rip)
    00000109: 	subq	start_time(%rip), %rax
    00000110: 	cvtsi2sd	%rax, %xmm0
    00000115: 	divsd	DATAat0x12828(%rip), %xmm0
    0000011d: 	addq	$0x18, %rsp
    00000121: 	popq	%rbx
    00000122: 	popq	%rbp
    00000123: 	popq	%r12
    00000125: 	popq	%r13
    00000127: 	popq	%r14
    00000129: 	popq	%r15
    0000012b: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 299
.Ltmp872:
    00000130: 	movl	current_test(%rip), %edx
    00000136: 	xorl	%eax, %eax
    00000138: 	movq	%r15, %rsi
    0000013b: 	movl	$0x1, %edi
    00000140: 	addl	$0x1, %ebp
    00000143: 	callq	__printf_chk@PLT # Offset: 323
    00000148: 	cmpl	%ebp, iterations(%rip)
    0000014e: 	jle	.Ltmp868 # Offset: 334
    00000150: 	movq	%r12, %r14
    00000153: 	pxor	%xmm1, %xmm1
    00000157: 	testl	%r13d, %r13d
    0000015a: 	jg	.Ltmp870 # Offset: 346
.Ltmp869:
    00000160: 	pxor	%xmm0, %xmm0
    00000164: 	cvtsd2ss	init_value(%rip), %xmm0
    0000016c: 	callq	lgammaf@PLT # Offset: 364
    00000171: 	mulss	DATAat0x12950(%rip), %xmm0
    00000179: 	pxor	%xmm2, %xmm2
    0000017d: 	subss	%xmm0, %xmm2
    00000181: 	jmp	.Ltmp871 # Offset: 385
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf15mathlib_lgammafIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf15mathlib_tgammafIfEEvPT_iPKc" after disassembly {
  Number      : 135
  State       : disassembled
  Address     : 0x10e50
  Size        : 0x194
  MaxSize     : 0x1a0
  Offset      : 0x10e50
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf15mathlib_tgammafIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0134:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	movl	%esi, %r13d
    0000000d: 	pushq	%r12
    0000000f: 	movq	%rdi, %r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movq	%rax, start_time(%rip)
    00000029: 	movl	iterations(%rip), %eax
    0000002f: 	testl	%eax, %eax
    00000031: 	jle	.Ltmp874 # Offset: 49
    00000037: 	leal	-0x1(%r13), %eax
    0000003b: 	xorl	%ebp, %ebp
    0000003d: 	leaq	DATAat0x12802(%rip), %r15
    00000044: 	leaq	0x4(%r12,%rax,4), %rbx
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp879:
    00000050: 	movsd	init_value(%rip), %xmm4
    00000058: 	movq	%r12, %r14
    0000005b: 	pxor	%xmm1, %xmm1
    0000005f: 	movsd	%xmm4, 0x10(%rsp)
    00000065: 	testl	%r13d, %r13d
    00000068: 	jle	.Ltmp875 # Offset: 104
    0000006e: 	nop # Size: 2
.Ltmp876:
    00000070: 	movss	(%r14), %xmm0
    00000075: 	movss	%xmm1, 0xc(%rsp)
    0000007b: 	addq	$0x4, %r14
    0000007f: 	callq	tgammaf@PLT # Offset: 127
    00000084: 	movss	0xc(%rsp), %xmm1
    0000008a: 	addss	%xmm0, %xmm1
    0000008e: 	cmpq	%r14, %rbx
    00000091: 	jne	.Ltmp876 # Offset: 145
    00000093: 	pxor	%xmm0, %xmm0
    00000097: 	movss	%xmm1, 0xc(%rsp)
    0000009d: 	cvtsd2ss	0x10(%rsp), %xmm0
    000000a3: 	callq	tgammaf@PLT # Offset: 163
    000000a8: 	mulss	DATAat0x12950(%rip), %xmm0
    000000b0: 	movss	0xc(%rsp), %xmm1
    000000b6: 	movaps	%xmm1, %xmm2
    000000b9: 	subss	%xmm0, %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	andps	DATAat0x128e0(%rip), %xmm0
    000000c7: 	cvtss2sd	%xmm0, %xmm0
    000000cb: 	comisd	DATAat0x12830(%rip), %xmm0
    000000d3: 	jbe	.Ltmp877 # Offset: 211
    000000d5: 	divss	%xmm1, %xmm2
.Ltmp877:
    000000d9: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e1: 	cvtss2sd	%xmm2, %xmm2
    000000e5: 	andpd	DATAat0x12890(%rip), %xmm2
    000000ed: 	comisd	%xmm2, %xmm3
    000000f1: 	jbe	.Ltmp878 # Offset: 241
    000000f3: 	addl	$0x1, %ebp
    000000f6: 	cmpl	%ebp, iterations(%rip)
    000000fc: 	jg	.Ltmp879 # Offset: 252
.Ltmp874:
    00000102: 	callq	clock@PLT # Offset: 258
    00000107: 	pxor	%xmm0, %xmm0
    0000010b: 	movq	0x18(%rsp), %rdi
    00000110: 	movq	%rax, end_time(%rip)
    00000117: 	subq	start_time(%rip), %rax
    0000011e: 	cvtsi2sd	%rax, %xmm0
    00000123: 	divsd	DATAat0x12828(%rip), %xmm0
    0000012b: 	addq	$0x28, %rsp
    0000012f: 	popq	%rbx
    00000130: 	popq	%rbp
    00000131: 	popq	%r12
    00000133: 	popq	%r13
    00000135: 	popq	%r14
    00000137: 	popq	%r15
    00000139: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 313
    0000013e: 	nop # Size: 2
.Ltmp878:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	xorl	%eax, %eax
    00000148: 	movq	%r15, %rsi
    0000014b: 	movl	$0x1, %edi
    00000150: 	addl	$0x1, %ebp
    00000153: 	callq	__printf_chk@PLT # Offset: 339
    00000158: 	cmpl	%ebp, iterations(%rip)
    0000015e: 	jg	.Ltmp879 # Offset: 350
    00000164: 	jmp	.Ltmp874 # Offset: 356
    00000166: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp875:
    00000170: 	pxor	%xmm0, %xmm0
    00000174: 	cvtsd2ss	0x10(%rsp), %xmm0
    0000017a: 	callq	tgammaf@PLT # Offset: 378
    0000017f: 	pxor	%xmm2, %xmm2
    00000183: 	mulss	DATAat0x12950(%rip), %xmm0
    0000018b: 	subss	%xmm0, %xmm2
    0000018f: 	jmp	.Ltmp877 # Offset: 399
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf15mathlib_tgammafIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf18mathlib_nearbyintfIfEEvPT_iPKc" after disassembly {
  Number      : 136
  State       : disassembled
  Address     : 0x10ff0
  Size        : 0x18f
  MaxSize     : 0x190
  Offset      : 0x10ff0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf18mathlib_nearbyintfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0135:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	pushq	%rbx
    00000014: 	subq	$0x28, %rsp
    00000018: 	movq	%rdx, 0x18(%rsp)
    0000001d: 	callq	clock@PLT # Offset: 29
    00000022: 	movl	iterations(%rip), %r12d
    00000029: 	movq	%rax, start_time(%rip)
    00000030: 	testl	%r12d, %r12d
    00000033: 	jle	.Ltmp880 # Offset: 51
    00000039: 	leal	-0x1(%r14), %eax
    0000003d: 	pxor	%xmm6, %xmm6
    00000041: 	xorl	%ebp, %ebp
    00000043: 	cvtsd2ss	init_value(%rip), %xmm6
    0000004b: 	leaq	0x4(%r13,%rax,4), %rbx
    00000050: 	movss	%xmm6, 0x14(%rsp)
    00000056: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp885:
    00000060: 	movss	0x14(%rsp), %xmm0
    00000066: 	movq	%r13, %r15
    00000069: 	callq	nearbyintf@PLT # Offset: 105
    0000006e: 	mulss	DATAat0x12950(%rip), %xmm0
    00000076: 	pxor	%xmm1, %xmm1
    0000007a: 	movss	%xmm0, 0x10(%rsp)
    00000080: 	testl	%r14d, %r14d
    00000083: 	jle	.Ltmp881 # Offset: 131
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp882:
    00000090: 	movss	(%r15), %xmm0
    00000095: 	movss	%xmm1, 0xc(%rsp)
    0000009b: 	addq	$0x4, %r15
    0000009f: 	callq	nearbyintf@PLT # Offset: 159
    000000a4: 	movss	0xc(%rsp), %xmm1
    000000aa: 	addss	%xmm0, %xmm1
    000000ae: 	cmpq	%r15, %rbx
    000000b1: 	jne	.Ltmp882 # Offset: 177
    000000b3: 	movaps	%xmm1, %xmm2
    000000b6: 	andps	DATAat0x128e0(%rip), %xmm2
    000000bd: 	movaps	%xmm1, %xmm0
    000000c0: 	subss	0x10(%rsp), %xmm0
    000000c6: 	cvtss2sd	%xmm2, %xmm2
    000000ca: 	comisd	DATAat0x12830(%rip), %xmm2
    000000d2: 	jbe	.Ltmp883 # Offset: 210
    000000d4: 	divss	%xmm1, %xmm0
.Ltmp883:
    000000d8: 	movsd	DATAat0x12860(%rip), %xmm3
    000000e0: 	cvtss2sd	%xmm0, %xmm0
    000000e4: 	andpd	DATAat0x12890(%rip), %xmm0
    000000ec: 	comisd	%xmm0, %xmm3
    000000f0: 	jbe	.Ltmp884 # Offset: 240
    000000f2: 	addl	$0x1, %ebp
    000000f5: 	cmpl	%r12d, %ebp
    000000f8: 	jl	.Ltmp885 # Offset: 248
.Ltmp880:
    000000fe: 	callq	clock@PLT # Offset: 254
    00000103: 	pxor	%xmm0, %xmm0
    00000107: 	movq	0x18(%rsp), %rdi
    0000010c: 	movq	%rax, end_time(%rip)
    00000113: 	subq	start_time(%rip), %rax
    0000011a: 	cvtsi2sd	%rax, %xmm0
    0000011f: 	divsd	DATAat0x12828(%rip), %xmm0
    00000127: 	addq	$0x28, %rsp
    0000012b: 	popq	%rbx
    0000012c: 	popq	%rbp
    0000012d: 	popq	%r12
    0000012f: 	popq	%r13
    00000131: 	popq	%r14
    00000133: 	popq	%r15
    00000135: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 309
    0000013a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp884:
    00000140: 	movl	current_test(%rip), %edx
    00000146: 	movl	$0x1, %edi
    0000014b: 	xorl	%eax, %eax
    0000014d: 	addl	$0x1, %ebp
    00000150: 	leaq	DATAat0x12802(%rip), %rsi
    00000157: 	callq	__printf_chk@PLT # Offset: 343
    0000015c: 	movl	iterations(%rip), %r12d
    00000163: 	cmpl	%r12d, %ebp
    00000166: 	jge	.Ltmp880 # Offset: 358
    00000168: 	pxor	%xmm5, %xmm5
    0000016c: 	cvtsd2ss	init_value(%rip), %xmm5
    00000174: 	movss	%xmm5, 0x14(%rsp)
    0000017a: 	jmp	.Ltmp885 # Offset: 378
    0000017f: 	nop # Size: 1
.Ltmp881:
    00000180: 	pxor	%xmm0, %xmm0
    00000184: 	subss	0x10(%rsp), %xmm0
    0000018a: 	jmp	.Ltmp883 # Offset: 394
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf18mathlib_nearbyintfIfEEvPT_iPKc"

Binary Function "_Z13test_constantIf13mathlib_rintfIfEEvPT_iPKc" after disassembly {
  Number      : 137
  State       : disassembled
  Address     : 0x11180
  Size        : 0x205
  MaxSize     : 0x210
  Offset      : 0x11180
  Section     : .text
  Orc Section : .local.text._Z13test_constantIf13mathlib_rintfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0136:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movl	%esi, %r14d
    0000000b: 	pushq	%r13
    0000000d: 	movq	%rdi, %r13
    00000010: 	pushq	%r12
    00000012: 	pushq	%rbp
    00000013: 	movq	%rdx, %rbp
    00000016: 	pushq	%rbx
    00000017: 	subq	$0x8, %rsp
    0000001b: 	callq	clock@PLT # Offset: 27
    00000020: 	movl	iterations(%rip), %edx
    00000026: 	movq	%rax, start_time(%rip)
    0000002d: 	testl	%edx, %edx
    0000002f: 	jle	.Ltmp886 # Offset: 47
    00000035: 	leal	-0x1(%r14), %eax
    00000039: 	pxor	%xmm12, %xmm12
    0000003e: 	pxor	%xmm6, %xmm6
    00000042: 	xorl	%r12d, %r12d
    00000045: 	movss	DATAat0x128e0(%rip), %xmm10
    0000004e: 	leaq	0x4(%r13,%rax,4), %rbx
    00000053: 	movss	DATAat0x12954(%rip), %xmm3
    0000005b: 	movq	DATAat0x12890(%rip), %xmm9
    00000064: 	movsd	DATAat0x12860(%rip), %xmm8
    0000006d: 	movss	DATAat0x12950(%rip), %xmm7
    00000075: 	movaps	%xmm10, %xmm4
    00000079: 	leaq	DATAat0x12802(%rip), %r15
    00000080: 	cvtsd2ss	init_value(%rip), %xmm12
    00000089: 	nopl	(%rax) # Size: 7
.Ltmp893:
    00000090: 	movaps	%xmm12, %xmm1
    00000094: 	movaps	%xmm12, %xmm11
    00000098: 	andps	%xmm4, %xmm1
    0000009b: 	ucomiss	%xmm1, %xmm3
    0000009e: 	jbe	.Ltmp887 # Offset: 158
    000000a0: 	addss	%xmm3, %xmm1
    000000a4: 	movaps	%xmm4, %xmm11
    000000a8: 	andnps	%xmm12, %xmm11
    000000ac: 	subss	%xmm3, %xmm1
    000000b0: 	orps	%xmm1, %xmm11
.Ltmp887:
    000000b4: 	mulss	%xmm7, %xmm11
    000000b9: 	movq	%r13, %rax
    000000bc: 	movaps	%xmm6, %xmm2
    000000bf: 	testl	%r14d, %r14d
    000000c2: 	jle	.Ltmp888 # Offset: 194
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp890:
    000000d0: 	movss	(%rax), %xmm1
    000000d4: 	movaps	%xmm1, %xmm0
    000000d7: 	andps	%xmm4, %xmm0
    000000da: 	ucomiss	%xmm0, %xmm3
    000000dd: 	jbe	.Ltmp889 # Offset: 221
    000000df: 	addss	%xmm3, %xmm0
    000000e3: 	movaps	%xmm4, %xmm5
    000000e6: 	andnps	%xmm1, %xmm5
    000000e9: 	subss	%xmm3, %xmm0
    000000ed: 	movaps	%xmm0, %xmm1
    000000f0: 	orps	%xmm5, %xmm1
.Ltmp889:
    000000f3: 	addq	$0x4, %rax
    000000f7: 	addss	%xmm1, %xmm2
    000000fb: 	cmpq	%rax, %rbx
    000000fe: 	jne	.Ltmp890 # Offset: 254
    00000100: 	movaps	%xmm2, %xmm1
    00000103: 	movaps	%xmm2, %xmm0
    00000106: 	andps	%xmm10, %xmm1
    0000010a: 	subss	%xmm11, %xmm0
    0000010f: 	cvtss2sd	%xmm1, %xmm1
    00000113: 	comisd	DATAat0x12830(%rip), %xmm1
    0000011b: 	jbe	.Ltmp891 # Offset: 283
    0000011d: 	divss	%xmm2, %xmm0
.Ltmp891:
    00000121: 	cvtss2sd	%xmm0, %xmm0
    00000125: 	andpd	%xmm9, %xmm0
    0000012a: 	comisd	%xmm0, %xmm8
    0000012f: 	jbe	.Ltmp892 # Offset: 303
    00000131: 	addl	$0x1, %r12d
    00000135: 	cmpl	%edx, %r12d
    00000138: 	jl	.Ltmp893 # Offset: 312
.Ltmp886:
    0000013e: 	callq	clock@PLT # Offset: 318
    00000143: 	pxor	%xmm0, %xmm0
    00000147: 	movq	%rbp, %rdi
    0000014a: 	movq	%rax, end_time(%rip)
    00000151: 	subq	start_time(%rip), %rax
    00000158: 	cvtsi2sd	%rax, %xmm0
    0000015d: 	divsd	DATAat0x12828(%rip), %xmm0
    00000165: 	addq	$0x8, %rsp
    00000169: 	popq	%rbx
    0000016a: 	popq	%rbp
    0000016b: 	popq	%r12
    0000016d: 	popq	%r13
    0000016f: 	popq	%r14
    00000171: 	popq	%r15
    00000173: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 371
    00000178: 	nopl	(%rax,%rax) # Size: 8
.Ltmp892:
    00000180: 	movl	current_test(%rip), %edx
    00000186: 	movq	%r15, %rsi
    00000189: 	movl	$0x1, %edi
    0000018e: 	xorl	%eax, %eax
    00000190: 	addl	$0x1, %r12d
    00000194: 	callq	__printf_chk@PLT # Offset: 404
    00000199: 	movl	iterations(%rip), %edx
    0000019f: 	cmpl	%edx, %r12d
    000001a2: 	jge	.Ltmp886 # Offset: 418
    000001a4: 	movq	DATAat0x12860(%rip), %rax
    000001ab: 	pxor	%xmm12, %xmm12
    000001b0: 	movss	DATAat0x12884(%rip), %xmm4
    000001b8: 	pxor	%xmm6, %xmm6
    000001bc: 	movss	DATAat0x12950(%rip), %xmm7
    000001c4: 	movss	DATAat0x12954(%rip), %xmm3
    000001cc: 	movss	DATAat0x128e0(%rip), %xmm10
    000001d5: 	cvtsd2ss	init_value(%rip), %xmm12
    000001de: 	movq	DATAat0x12890(%rip), %xmm9
    000001e7: 	movq	%rax, %xmm8
    000001ec: 	jmp	.Ltmp893 # Offset: 492
    000001f1: 	nopl	(%rax) # Size: 7
.Ltmp888:
    000001f8: 	movaps	%xmm6, %xmm0
    000001fb: 	subss	%xmm11, %xmm0
    00000200: 	jmp	.Ltmp891 # Offset: 512
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIf13mathlib_rintfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfi14mathlib_ilogbfIfEEvPT_iPKc" after disassembly {
  Number      : 138
  State       : disassembled
  Address     : 0x11390
  Size        : 0xff
  MaxSize     : 0x100
  Offset      : 0x11390
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfi14mathlib_ilogbfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0137:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp894 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%rbx,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp898:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp895 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp896:
    00000058: 	movss	(%r14), %xmm0
    0000005d: 	addq	$0x4, %r14
    00000061: 	callq	ilogbf@PLT # Offset: 97
    00000066: 	addl	%eax, %ebx
    00000068: 	cmpq	%rbp, %r14
    0000006b: 	jne	.Ltmp896 # Offset: 107
.Ltmp895:
    0000006d: 	pxor	%xmm0, %xmm0
    00000071: 	cvtsd2ss	init_value(%rip), %xmm0
    00000079: 	callq	ilogbf@PLT # Offset: 121
    0000007e: 	imull	$0x1f40, %eax, %eax
    00000084: 	cmpl	%ebx, %eax
    00000086: 	je	.Ltmp897 # Offset: 134
    00000088: 	movl	current_test(%rip), %edx
    0000008e: 	leaq	DATAat0x12802(%rip), %rsi
    00000095: 	movl	$0x1, %edi
    0000009a: 	xorl	%eax, %eax
    0000009c: 	addl	$0x1, %r12d
    000000a0: 	callq	__printf_chk@PLT # Offset: 160
    000000a5: 	movl	iterations(%rip), %r13d
    000000ac: 	cmpl	%r13d, %r12d
    000000af: 	jl	.Ltmp898 # Offset: 175
.Ltmp894:
    000000b1: 	callq	clock@PLT # Offset: 177
    000000b6: 	pxor	%xmm0, %xmm0
    000000ba: 	movq	0x8(%rsp), %rdi
    000000bf: 	movq	%rax, end_time(%rip)
    000000c6: 	subq	start_time(%rip), %rax
    000000cd: 	cvtsi2sd	%rax, %xmm0
    000000d2: 	divsd	DATAat0x12828(%rip), %xmm0
    000000da: 	addq	$0x18, %rsp
    000000de: 	popq	%rbx
    000000df: 	popq	%rbp
    000000e0: 	popq	%r12
    000000e2: 	popq	%r13
    000000e4: 	popq	%r14
    000000e6: 	popq	%r15
    000000e8: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 232
    000000ed: 	nopl	(%rax) # Size: 3
.Ltmp897:
    000000f0: 	addl	$0x1, %r12d
    000000f4: 	cmpl	%r12d, %r13d
    000000f7: 	jg	.Ltmp898 # Offset: 247
    000000fd: 	jmp	.Ltmp894 # Offset: 253
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfi14mathlib_ilogbfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfl14mathlib_lrintfIfEEvPT_iPKc" after disassembly {
  Number      : 139
  State       : disassembled
  Address     : 0x11490
  Size        : 0x107
  MaxSize     : 0x110
  Offset      : 0x11490
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfl14mathlib_lrintfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0138:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp899 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%rbx,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp903:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp900 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp901:
    00000058: 	movss	(%r14), %xmm0
    0000005d: 	addq	$0x4, %r14
    00000061: 	callq	lrintf@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp901 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp900:
    00000071: 	pxor	%xmm0, %xmm0
    00000075: 	cvtsd2ss	init_value(%rip), %xmm0
    0000007d: 	callq	lrintf@PLT # Offset: 125
    00000082: 	imulq	$0x1f40, %rax, %rax
    00000089: 	cmpq	%rbx, %rax
    0000008c: 	je	.Ltmp902 # Offset: 140
    0000008e: 	movl	current_test(%rip), %edx
    00000094: 	leaq	DATAat0x12802(%rip), %rsi
    0000009b: 	movl	$0x1, %edi
    000000a0: 	xorl	%eax, %eax
    000000a2: 	addl	$0x1, %r12d
    000000a6: 	callq	__printf_chk@PLT # Offset: 166
    000000ab: 	movl	iterations(%rip), %r13d
    000000b2: 	cmpl	%r13d, %r12d
    000000b5: 	jl	.Ltmp903 # Offset: 181
.Ltmp899:
    000000b7: 	callq	clock@PLT # Offset: 183
    000000bc: 	pxor	%xmm0, %xmm0
    000000c0: 	movq	0x8(%rsp), %rdi
    000000c5: 	movq	%rax, end_time(%rip)
    000000cc: 	subq	start_time(%rip), %rax
    000000d3: 	cvtsi2sd	%rax, %xmm0
    000000d8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	popq	%r14
    000000ec: 	popq	%r15
    000000ee: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 238
    000000f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp902:
    000000f8: 	addl	$0x1, %r12d
    000000fc: 	cmpl	%r12d, %r13d
    000000ff: 	jg	.Ltmp903 # Offset: 255
    00000105: 	jmp	.Ltmp899 # Offset: 261
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfl14mathlib_lrintfIfEEvPT_iPKc"

Binary Function "_Z20test_constant_resultIfx15mathlib_llrintfIfEEvPT_iPKc" after disassembly {
  Number      : 140
  State       : disassembled
  Address     : 0x115a0
  Size        : 0x107
  MaxSize     : 0x107
  Offset      : 0x115a0
  Section     : .text
  Orc Section : .local.text._Z20test_constant_resultIfx15mathlib_llrintfIfEEvPT_iPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0139:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movl	%esi, %r15d
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	movq	%rdi, %rbx
    00000014: 	subq	$0x18, %rsp
    00000018: 	movq	%rdi, (%rsp)
    0000001c: 	movq	%rdx, 0x8(%rsp)
    00000021: 	callq	clock@PLT # Offset: 33
    00000026: 	movl	iterations(%rip), %r13d
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%r13d, %r13d
    00000037: 	jle	.Ltmp904 # Offset: 55
    00000039: 	leal	-0x1(%r15), %eax
    0000003d: 	xorl	%r12d, %r12d
    00000040: 	leaq	0x4(%rbx,%rax,4), %rbp
    00000045: 	nopl	(%rax) # Size: 3
.Ltmp908:
    00000048: 	movq	(%rsp), %r14
    0000004c: 	xorl	%ebx, %ebx
    0000004e: 	testl	%r15d, %r15d
    00000051: 	jle	.Ltmp905 # Offset: 81
    00000053: 	nopl	(%rax,%rax) # Size: 5
.Ltmp906:
    00000058: 	movss	(%r14), %xmm0
    0000005d: 	addq	$0x4, %r14
    00000061: 	callq	llrintf@PLT # Offset: 97
    00000066: 	addq	%rax, %rbx
    00000069: 	cmpq	%r14, %rbp
    0000006c: 	jne	.Ltmp906 # Offset: 108
    0000006e: 	movslq	%ebx, %rbx
.Ltmp905:
    00000071: 	pxor	%xmm0, %xmm0
    00000075: 	cvtsd2ss	init_value(%rip), %xmm0
    0000007d: 	callq	llrintf@PLT # Offset: 125
    00000082: 	imulq	$0x1f40, %rax, %rax
    00000089: 	cmpq	%rbx, %rax
    0000008c: 	je	.Ltmp907 # Offset: 140
    0000008e: 	movl	current_test(%rip), %edx
    00000094: 	leaq	DATAat0x12802(%rip), %rsi
    0000009b: 	movl	$0x1, %edi
    000000a0: 	xorl	%eax, %eax
    000000a2: 	addl	$0x1, %r12d
    000000a6: 	callq	__printf_chk@PLT # Offset: 166
    000000ab: 	movl	iterations(%rip), %r13d
    000000b2: 	cmpl	%r13d, %r12d
    000000b5: 	jl	.Ltmp908 # Offset: 181
.Ltmp904:
    000000b7: 	callq	clock@PLT # Offset: 183
    000000bc: 	pxor	%xmm0, %xmm0
    000000c0: 	movq	0x8(%rsp), %rdi
    000000c5: 	movq	%rax, end_time(%rip)
    000000cc: 	subq	start_time(%rip), %rax
    000000d3: 	cvtsi2sd	%rax, %xmm0
    000000d8: 	divsd	DATAat0x12828(%rip), %xmm0
    000000e0: 	addq	$0x18, %rsp
    000000e4: 	popq	%rbx
    000000e5: 	popq	%rbp
    000000e6: 	popq	%r12
    000000e8: 	popq	%r13
    000000ea: 	popq	%r14
    000000ec: 	popq	%r15
    000000ee: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 238
    000000f3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp907:
    000000f8: 	addl	$0x1, %r12d
    000000fc: 	cmpl	%r12d, %r13d
    000000ff: 	jg	.Ltmp908 # Offset: 255
    00000105: 	jmp	.Ltmp904 # Offset: 261
DWARF CFI Instructions:
    <empty>
End of Function "_Z20test_constant_resultIfx15mathlib_llrintfIfEEvPT_iPKc"

Binary Function "_fini" after disassembly {
  Number      : 141
  State       : disassembled
  Address     : 0x116a8
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x116a8
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB0140:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 142 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 669 instructions were shortened
BOLT-INFO: removed 323 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 139 out of 242 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x205388
