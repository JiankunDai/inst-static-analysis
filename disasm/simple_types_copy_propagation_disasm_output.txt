BOLT-INFO: shared object or position-independent executable detected
BOLT-INFO: Target architecture: x86_64
BOLT-INFO: BOLT version: <unknown>
BOLT-INFO: first alloc address is 0x0
BOLT-INFO: creating new program header table at address 0x200000, offset 0x200000
BOLT-INFO: enabling lite mode
BOLT-WARNING: ignoring symbol __bss_start at 0x1e028, which lies outside .bss
BOLT-WARNING: split function detected on input : _GLOBAL__sub_I_results.cold
Binary Function "_init" after disassembly {
  Number      : 1
  State       : disassembled
  Address     : 0x1000
  Size        : 0x1b
  MaxSize     : 0x1b
  Offset      : 0x1000
  Section     : .init
  Orc Section : .local.text._init
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB00:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	movq	DATAat0x1dff0(%rip), %rax
    0000000f: 	testq	%rax, %rax
    00000012: 	je	.Ltmp0 # Offset: 18
    00000014: 	callq	*%rax # Offset: 20
.Ltmp0:
    00000016: 	addq	$0x8, %rsp
    0000001a: 	retq # Offset: 26
DWARF CFI Instructions:
    <empty>
End of Function "_init"

Binary Function "main" after disassembly {
  Number      : 3
  State       : disassembled
  Address     : 0x13f0
  Size        : 0x11a
  MaxSize     : 0x120
  Offset      : 0x13f0
  Section     : .text
  Orc Section : .local.text.main
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB02:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	pushq	%rbp
    0000000b: 	pushq	%rbx
    0000000c: 	testl	%edi, %edi
    0000000e: 	jle	.Ltmp1 # Offset: 14
    00000014: 	leal	-0x1(%rdi), %eax
    00000017: 	movl	%edi, %r13d
    0000001a: 	movq	%rsi, %r14
    0000001d: 	movq	%rsi, %rbx
    00000020: 	leaq	0x8(%rsi,%rax,8), %r12
    00000025: 	leaq	DATAat0x1a150(%rip), %rbp
    0000002c: 	nopl	(%rax) # Size: 4
.Ltmp2:
    00000030: 	movq	(%rbx), %rdx
    00000033: 	movq	%rbp, %rsi
    00000036: 	movl	$0x1, %edi
    0000003b: 	xorl	%eax, %eax
    0000003d: 	addq	$0x8, %rbx
    00000041: 	callq	__printf_chk@PLT # Offset: 65
    00000046: 	cmpq	%r12, %rbx
    00000049: 	jne	.Ltmp2 # Offset: 73
    0000004b: 	xorl	%eax, %eax
    0000004d: 	leaq	DATAat0x1a136(%rip), %rsi
    00000054: 	movl	$0x1, %edi
    00000059: 	callq	__printf_chk@PLT # Offset: 89
    0000005e: 	cmpl	$0x1, %r13d
    00000062: 	jg	.Ltmp3 # Offset: 98
.Ltmp4:
    00000064: 	callq	_Z11TestOneTypeIaEvv # Offset: 100
    00000069: 	callq	_Z11TestOneTypeIhEvv # Offset: 105
    0000006e: 	callq	_Z11TestOneTypeIsEvv # Offset: 110
    00000073: 	callq	_Z11TestOneTypeItEvv # Offset: 115
    00000078: 	callq	_Z11TestOneTypeIiEvv # Offset: 120
    0000007d: 	callq	_Z11TestOneTypeIjEvv # Offset: 125
    00000082: 	movslq	iterations(%rip), %rax
    00000089: 	movq	%rax, %rdx
    0000008c: 	imulq	$0x66666667, %rax, %rax
    00000093: 	sarl	$0x1f, %edx
    00000096: 	sarq	$0x22, %rax
    0000009a: 	subl	%edx, %eax
    0000009c: 	movl	%eax, iterations(%rip)
    000000a2: 	callq	_Z11TestOneTypeIlEvv # Offset: 162
    000000a7: 	callq	_Z11TestOneTypeImEvv # Offset: 167
    000000ac: 	callq	_Z11TestOneTypeIfEvv # Offset: 172
    000000b1: 	callq	_Z11TestOneTypeIdEvv # Offset: 177
    000000b6: 	callq	_Z11TestOneTypeIeEvv # Offset: 182
    000000bb: 	popq	%rbx
    000000bc: 	xorl	%eax, %eax
    000000be: 	popq	%rbp
    000000bf: 	popq	%r12
    000000c1: 	popq	%r13
    000000c3: 	popq	%r14
    000000c5: 	retq # Offset: 197
.Ltmp3:
    000000c6: 	movq	0x8(%r14), %rdi
    000000ca: 	movl	$0xa, %edx
    000000cf: 	xorl	%esi, %esi
    000000d1: 	callq	strtol@PLT # Offset: 209
    000000d6: 	movl	%eax, iterations(%rip)
    000000dc: 	cmpl	$0x2, %r13d
    000000e0: 	jle	.Ltmp4 # Offset: 224
    000000e2: 	movq	0x10(%r14), %rdi
    000000e6: 	xorl	%esi, %esi
    000000e8: 	callq	strtod@PLT # Offset: 232
    000000ed: 	andpd	DATAat0x1a360(%rip), %xmm0
    000000f5: 	movsd	%xmm0, init_value(%rip)
    000000fd: 	jmp	.Ltmp4 # Offset: 253
.Ltmp1:
    00000102: 	leaq	DATAat0x1a136(%rip), %rsi
    00000109: 	movl	$0x1, %edi
    0000010e: 	xorl	%eax, %eax
    00000110: 	callq	__printf_chk@PLT # Offset: 272
    00000115: 	jmp	.Ltmp4 # Offset: 277
DWARF CFI Instructions:
    <empty>
End of Function "main"

Binary Function "_start" after disassembly {
  Number      : 5
  State       : disassembled
  Address     : 0x15f0
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x15f0
  Section     : .text
  Orc Section : .local.text._start
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB04:
    00000000: 	endbr64
    00000004: 	xorl	%ebp, %ebp
    00000006: 	movq	%rdx, %r9
    00000009: 	popq	%rsi
    0000000a: 	movq	%rsp, %rdx
    0000000d: 	andq	$-0x10, %rsp
    00000011: 	pushq	%rax
    00000012: 	pushq	%rsp
    00000013: 	xorl	%r8d, %r8d
    00000016: 	xorl	%ecx, %ecx
    00000018: 	leaq	main(%rip), %rdi
    0000001f: 	callq	*DATAat0x1dfe0(%rip) # Offset: 31
    00000025: 	hlt
DWARF CFI Instructions:
    <empty>
End of Function "_start"

Binary Function "deregister_tm_clones/1(*2)" after disassembly {
  All names   : deregister_tm_clones/1
                deregister_tm_clones/crtstuff.c/1
  Number      : 6
  State       : disassembled
  Address     : 0x1620
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x1620
  Section     : .text
  Orc Section : .local.text.deregister_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB05:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rax
    0000000e: 	cmpq	%rdi, %rax
    00000011: 	je	.Ltmp5 # Offset: 17
    00000013: 	movq	DATAat0x1dfe8(%rip), %rax
    0000001a: 	testq	%rax, %rax
    0000001d: 	je	.Ltmp5 # Offset: 29
    0000001f: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 31
    00000021: 	nopl	(%rax) # Size: 7
.Ltmp5:
    00000028: 	retq # Offset: 40
    00000029: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "deregister_tm_clones/1(*2)"

Binary Function "register_tm_clones/1(*2)" after disassembly {
  All names   : register_tm_clones/1
                register_tm_clones/crtstuff.c/1
  Number      : 7
  State       : disassembled
  Address     : 0x1650
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1650
  Section     : .text
  Orc Section : .local.text.register_tm_clones/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB06:
    00000000: 	leaq	_edata(%rip), %rdi
    00000007: 	leaq	_edata(%rip), %rsi
    0000000e: 	subq	%rdi, %rsi
    00000011: 	movq	%rsi, %rax
    00000014: 	shrq	$0x3f, %rsi
    00000018: 	sarq	$0x3, %rax
    0000001c: 	addq	%rax, %rsi
    0000001f: 	sarq	%rsi
    00000022: 	je	.Ltmp6 # Offset: 34
    00000024: 	movq	DATAat0x1dff8(%rip), %rax
    0000002b: 	testq	%rax, %rax
    0000002e: 	je	.Ltmp6 # Offset: 46
    00000030: 	jmpq	*%rax # UNKNOWN CONTROL FLOW # Offset: 48
    00000032: 	nopw	(%rax,%rax) # Size: 6
.Ltmp6:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "register_tm_clones/1(*2)"

Binary Function "__do_global_dtors_aux/1(*2)" after disassembly {
  All names   : __do_global_dtors_aux/1
                __do_global_dtors_aux/crtstuff.c/1
  Number      : 8
  State       : disassembled
  Address     : 0x1690
  Size        : 0x40
  MaxSize     : 0x40
  Offset      : 0x1690
  Section     : .text
  Orc Section : .local.text.__do_global_dtors_aux/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB07:
    00000000: 	endbr64
    00000004: 	cmpb	$0x0, "completed.0/1"(%rip)
    0000000b: 	jne	.Ltmp7 # Offset: 11
    0000000d: 	pushq	%rbp
    0000000e: 	cmpq	$0x0, __cxa_finalize@GOT(%rip)
    00000016: 	movq	%rsp, %rbp
    00000019: 	je	.Ltmp8 # Offset: 25
    0000001b: 	movq	__dso_handle(%rip), %rdi
    00000022: 	callq	__cxa_finalize@PLT # Offset: 34
.Ltmp8:
    00000027: 	callq	"deregister_tm_clones/1" # Offset: 39
    0000002c: 	movb	$0x1, "completed.0/1"(%rip)
    00000033: 	popq	%rbp
    00000034: 	retq # Offset: 52
    00000035: 	nopl	(%rax) # Size: 3
.Ltmp7:
    00000038: 	retq # Offset: 56
    00000039: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "__do_global_dtors_aux/1(*2)"

Binary Function "frame_dummy/1(*2)" after disassembly {
  All names   : frame_dummy/1
                frame_dummy/crtstuff.c/1
  Number      : 9
  State       : disassembled
  Address     : 0x16d0
  Size        : 0x10
  MaxSize     : 0x10
  Offset      : 0x16d0
  Section     : .text
  Orc Section : .local.text.frame_dummy/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB08:
    00000000: 	endbr64
    00000004: 	jmp	"register_tm_clones/1" # TAILCALL  # Offset: 4
    00000009: 	nopl	(%rax) # Size: 7
DWARF CFI Instructions:
    <empty>
End of Function "frame_dummy/1(*2)"

Binary Function "_Z13record_resultdPKc" after disassembly {
  Number      : 10
  State       : disassembled
  Address     : 0x16e0
  Size        : 0xa0
  MaxSize     : 0xa0
  Offset      : 0x16e0
  Section     : .text
  Orc Section : .local.text._Z13record_resultdPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB09:
    00000000: 	endbr64
    00000004: 	pushq	%rbx
    00000005: 	movq	%rdi, %rbx
    00000008: 	subq	$0x10, %rsp
    0000000c: 	movq	results(%rip), %rdi
    00000013: 	movl	allocated_results(%rip), %esi
    00000019: 	testq	%rdi, %rdi
    0000001c: 	je	.Ltmp9 # Offset: 28
    0000001e: 	movl	current_test(%rip), %eax
    00000024: 	cmpl	%esi, %eax
    00000026: 	jl	.Ltmp10 # Offset: 38
.Ltmp9:
    00000028: 	addl	$0xa, %esi
    0000002b: 	movsd	%xmm0, 0x8(%rsp)
    00000031: 	movl	%esi, allocated_results(%rip)
    00000037: 	movslq	%esi, %rsi
    0000003a: 	shlq	$0x4, %rsi
    0000003e: 	callq	realloc@PLT # Offset: 62
    00000043: 	movq	%rax, results(%rip)
    0000004a: 	movq	%rax, %rdi
    0000004d: 	testq	%rax, %rax
    00000050: 	je	.Ltmp11 # Offset: 80
    00000052: 	movl	current_test(%rip), %eax
    00000058: 	movsd	0x8(%rsp), %xmm0
.Ltmp10:
    0000005e: 	movslq	%eax, %rdx
    00000061: 	addl	$0x1, %eax
    00000064: 	shlq	$0x4, %rdx
    00000068: 	addq	%rdx, %rdi
    0000006b: 	movsd	%xmm0, (%rdi)
    0000006f: 	movq	%rbx, 0x8(%rdi)
    00000073: 	movl	%eax, current_test(%rip)
    00000079: 	addq	$0x10, %rsp
    0000007d: 	popq	%rbx
    0000007e: 	retq # Offset: 126
.Ltmp11:
    0000007f: 	movl	allocated_results(%rip), %edx
    00000085: 	movl	$0x1, %edi
    0000008a: 	leaq	DATAat0x1a008(%rip), %rsi
    00000091: 	xorl	%eax, %eax
    00000093: 	callq	__printf_chk@PLT # Offset: 147
    00000098: 	orl	$-0x1, %edi
    0000009b: 	callq	exit@PLT # Offset: 155
DWARF CFI Instructions:
    <empty>
End of Function "_Z13record_resultdPKc"

Binary Function "_Z9summarizePKciiii" after disassembly {
  Number      : 11
  State       : disassembled
  Address     : 0x1780
  Size        : 0x325
  MaxSize     : 0x330
  Offset      : 0x1780
  Section     : .text
  Orc Section : .local.text._Z9summarizePKciiii
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB010:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x38, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movl	%r8d, 0x2c(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp12 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	movl	%esi, %r15d
    0000002b: 	movl	%edx, %r13d
    0000002e: 	jle	.Ltmp13 # Offset: 46
    00000034: 	movq	results(%rip), %rcx
    0000003b: 	subl	$0x1, %eax
    0000003e: 	movl	$0xc, %ebx
    00000043: 	shlq	$0x4, %rax
    00000047: 	leaq	0x8(%rcx), %r14
    0000004b: 	leaq	0x18(%rcx,%rax), %rbp
.Ltmp14:
    00000050: 	movq	(%r14), %rdi
    00000053: 	callq	strlen@PLT # Offset: 83
    00000058: 	cmpl	%eax, %ebx
    0000005a: 	cmovll	%eax, %ebx
    0000005d: 	addq	$0x10, %r14
    00000061: 	cmpq	%r14, %rbp
    00000064: 	jne	.Ltmp14 # Offset: 100
    00000066: 	leal	-0xc(%rbx), %edx
.Ltmp27:
    00000069: 	leaq	DATAat0x1a152(%rip), %rbp
    00000070: 	leaq	DATAat0x1a028(%rip), %rsi
    00000077: 	movl	$0x1, %edi
    0000007c: 	xorl	%eax, %eax
    0000007e: 	movq	%rbp, %rcx
    00000081: 	callq	__printf_chk@PLT # Offset: 129
    00000086: 	movl	%ebx, %edx
    00000088: 	movq	%rbp, %rcx
    0000008b: 	movl	$0x1, %edi
    00000090: 	leaq	DATAat0x1a068(%rip), %rsi
    00000097: 	xorl	%eax, %eax
    00000099: 	callq	__printf_chk@PLT # Offset: 153
    0000009e: 	movl	current_test(%rip), %edx
    000000a4: 	testl	%edx, %edx
    000000a6: 	jle	.Ltmp15 # Offset: 166
    000000ac: 	pxor	%xmm0, %xmm0
    000000b0: 	pxor	%xmm1, %xmm1
    000000b4: 	xorl	%r14d, %r14d
    000000b7: 	movsd	DATAat0x1a320(%rip), %xmm3
    000000bf: 	cvtsi2sd	%r15d, %xmm0
    000000c4: 	leaq	DATAat0x1a098(%rip), %rbp
    000000cb: 	cvtsi2sd	%r13d, %xmm1
    000000d0: 	mulsd	%xmm1, %xmm0
    000000d4: 	divsd	DATAat0x1a318(%rip), %xmm0
    000000dc: 	movsd	%xmm0, 0x20(%rsp)
    000000e2: 	jmp	.Ltmp16 # Offset: 226
    000000e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp20:
    000000f0: 	comisd	%xmm0, %xmm3
    000000f4: 	ja	.Ltmp17 # Offset: 244
    000000fa: 	movq	DATAat0x1a308(%rip), %rdi
    00000101: 	movq	%rdi, %xmm2
.Ltmp21:
    00000106: 	comisd	%xmm0, %xmm3
    0000010a: 	movq	DATAat0x1a308(%rip), %rsi
    00000111: 	movq	%rsi, %xmm1
    00000116: 	ja	.Ltmp18 # Offset: 278
    00000118: 	movsd	0x20(%rsp), %xmm1
    0000011e: 	divsd	%xmm0, %xmm1
.Ltmp18:
    00000122: 	movq	0x8(%rax), %r15
    00000126: 	movsd	%xmm0, 0x18(%rsp)
    0000012c: 	addq	$0x1, %r14
    00000130: 	movsd	%xmm1, 0x10(%rsp)
    00000136: 	movq	%r15, %rdi
    00000139: 	movsd	%xmm2, 0x8(%rsp)
    0000013f: 	callq	strlen@PLT # Offset: 319
    00000144: 	movsd	0x8(%rsp), %xmm2
    0000014a: 	movl	%ebx, %ecx
    0000014c: 	movq	%r15, %r9
    0000014f: 	movsd	0x10(%rsp), %xmm1
    00000155: 	subl	%eax, %ecx
    00000157: 	movl	$0x1, %edi
    0000015c: 	movl	%r13d, %edx
    0000015f: 	movsd	0x18(%rsp), %xmm0
    00000165: 	leaq	DATAat0x1a137(%rip), %r8
    0000016c: 	movq	%rbp, %rsi
    0000016f: 	movl	$0x3, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	current_test(%rip), %eax
    0000017f: 	movq	DATAat0x1a320(%rip), %rdi
    00000186: 	cmpl	%r14d, %eax
    00000189: 	movq	%rdi, %xmm3
    0000018e: 	jle	.Ltmp19 # Offset: 398
.Ltmp16:
    00000190: 	movq	results(%rip), %rax
    00000197: 	movq	%r14, %rcx
    0000019a: 	movl	%r14d, %r13d
    0000019d: 	shlq	$0x4, %rcx
    000001a1: 	movsd	(%rax), %xmm1
    000001a5: 	addq	%rcx, %rax
    000001a8: 	movsd	(%rax), %xmm0
    000001ac: 	comisd	%xmm1, %xmm3
    000001b0: 	ja	.Ltmp20 # Offset: 432
    000001b6: 	movapd	%xmm0, %xmm2
    000001ba: 	divsd	%xmm1, %xmm2
    000001be: 	jmp	.Ltmp21 # Offset: 446
    000001c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp17:
    000001c8: 	movq	DATAat0x1a310(%rip), %rsi
    000001cf: 	movq	DATAat0x1a308(%rip), %rdx
    000001d6: 	movq	%rsi, %xmm2
    000001db: 	movq	%rdx, %xmm1
    000001e0: 	jmp	.Ltmp18 # Offset: 480
    000001e5: 	nopl	(%rax) # Size: 3
.Ltmp19:
    000001e8: 	testl	%eax, %eax
    000001ea: 	jle	.Ltmp15 # Offset: 490
    000001f0: 	movq	results(%rip), %rdx
    000001f7: 	leal	-0x1(%rax), %ecx
    000001fa: 	pxor	%xmm1, %xmm1
    000001fe: 	shlq	$0x4, %rcx
    00000202: 	movapd	%xmm1, %xmm0
    00000206: 	leaq	0x10(%rdx), %rax
    0000020a: 	addq	%rax, %rcx
    0000020d: 	jmp	.Ltmp22 # Offset: 525
    0000020f: 	nop # Size: 1
.Ltmp23:
    00000210: 	addq	$0x10, %rax
.Ltmp22:
    00000214: 	addsd	(%rdx), %xmm0
    00000218: 	movq	%rax, %rdx
    0000021b: 	cmpq	%rax, %rcx
    0000021e: 	jne	.Ltmp23 # Offset: 542
.Ltmp28:
    00000220: 	movq	%r12, %rdx
    00000223: 	movl	$0x1, %edi
    00000228: 	movl	$0x1, %eax
    0000022d: 	movsd	%xmm1, 0x8(%rsp)
    00000233: 	leaq	DATAat0x1a0c8(%rip), %rsi
    0000023a: 	callq	__printf_chk@PLT # Offset: 570
    0000023f: 	movl	0x2c(%rsp), %eax
    00000243: 	movl	current_test(%rip), %ebp
    00000249: 	testl	%eax, %eax
    0000024b: 	je	.Ltmp24 # Offset: 587
    0000024d: 	cmpl	$0x1, %ebp
    00000250: 	jg	.Ltmp25 # Offset: 592
.Ltmp24:
    00000252: 	movl	$0x0, current_test(%rip)
.Ltmp12:
    0000025c: 	addq	$0x38, %rsp
    00000260: 	popq	%rbx
    00000261: 	popq	%rbp
    00000262: 	popq	%r12
    00000264: 	popq	%r13
    00000266: 	popq	%r14
    00000268: 	popq	%r15
    0000026a: 	retq # Offset: 618
    0000026b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp25:
    00000270: 	movq	results(%rip), %rbx
    00000277: 	movsd	0x8(%rsp), %xmm1
    0000027d: 	movl	$0x1, %r13d
    00000283: 	movsd	(%rbx), %xmm5
    00000287: 	addq	$0x10, %rbx
    0000028b: 	movsd	%xmm5, 0x10(%rsp)
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp26:
    00000298: 	movsd	(%rbx), %xmm0
    0000029c: 	movsd	%xmm1, 0x8(%rsp)
    000002a2: 	addl	$0x1, %r13d
    000002a6: 	addq	$0x10, %rbx
    000002aa: 	divsd	0x10(%rsp), %xmm0
    000002b0: 	callq	log@PLT # Offset: 688
    000002b5: 	movsd	0x8(%rsp), %xmm1
    000002bb: 	addsd	%xmm0, %xmm1
    000002bf: 	cmpl	%r13d, %ebp
    000002c2: 	jg	.Ltmp26 # Offset: 706
    000002c4: 	subl	$0x1, %ebp
    000002c7: 	pxor	%xmm0, %xmm0
    000002cb: 	cvtsi2sd	%ebp, %xmm0
    000002cf: 	divsd	%xmm0, %xmm1
    000002d3: 	movapd	%xmm1, %xmm0
    000002d7: 	callq	exp@PLT # Offset: 727
    000002dc: 	movq	%r12, %rdx
    000002df: 	movl	$0x1, %edi
    000002e4: 	leaq	DATAat0x1a112(%rip), %rsi
    000002eb: 	movl	$0x1, %eax
    000002f0: 	callq	__printf_chk@PLT # Offset: 752
    000002f5: 	movl	$0x0, current_test(%rip)
    000002ff: 	jmp	.Ltmp12 # Offset: 767
    00000304: 	nopl	(%rax) # Size: 4
.Ltmp13:
    00000308: 	xorl	%edx, %edx
    0000030a: 	movl	$0xc, %ebx
    0000030f: 	jmp	.Ltmp27 # Offset: 783
    00000314: 	nopl	(%rax) # Size: 4
.Ltmp15:
    00000318: 	pxor	%xmm1, %xmm1
    0000031c: 	movapd	%xmm1, %xmm0
    00000320: 	jmp	.Ltmp28 # Offset: 800
DWARF CFI Instructions:
    <empty>
End of Function "_Z9summarizePKciiii"

Binary Function "_Z17summarize_simplefP8_IO_FILEPKc" after disassembly {
  Number      : 12
  State       : disassembled
  Address     : 0x1ab0
  Size        : 0x1a6
  MaxSize     : 0x1b0
  Offset      : 0x1ab0
  Section     : .text
  Orc Section : .local.text._Z17summarize_simplefP8_IO_FILEPKc
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB011:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x18, %rsp
    00000012: 	movl	current_test(%rip), %eax
    00000018: 	movq	%rsi, 0x8(%rsp)
    0000001d: 	testl	%eax, %eax
    0000001f: 	je	.Ltmp29 # Offset: 31
    00000025: 	movq	%rdi, %r12
    00000028: 	jle	.Ltmp30 # Offset: 40
    0000002e: 	movq	results(%rip), %rdx
    00000035: 	subl	$0x1, %eax
    00000038: 	movl	$0xc, %ebp
    0000003d: 	shlq	$0x4, %rax
    00000041: 	leaq	0x8(%rdx), %r13
    00000045: 	leaq	0x18(%rdx,%rax), %rbx
    0000004a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp31:
    00000050: 	movq	(%r13), %rdi
    00000054: 	callq	strlen@PLT # Offset: 84
    00000059: 	cmpl	%eax, %ebp
    0000005b: 	cmovll	%eax, %ebp
    0000005e: 	addq	$0x10, %r13
    00000062: 	cmpq	%r13, %rbx
    00000065: 	jne	.Ltmp31 # Offset: 101
    00000067: 	leal	-0xc(%rbp), %ecx
.Ltmp36:
    0000006a: 	leaq	DATAat0x1a152(%rip), %r8
    00000071: 	movl	$0x1, %esi
    00000076: 	xorl	%eax, %eax
    00000078: 	xorl	%ebx, %ebx
    0000007a: 	leaq	DATAat0x1a0f0(%rip), %rdx
    00000081: 	movq	%r12, %rdi
    00000084: 	leaq	DATAat0x1a138(%rip), %r14
    0000008b: 	callq	__fprintf_chk@PLT # Offset: 139
    00000090: 	movl	$0x1, %esi
    00000095: 	movl	%ebp, %ecx
    00000097: 	movq	%r12, %rdi
    0000009a: 	leaq	DATAat0x1a152(%rip), %r8
    000000a1: 	leaq	DATAat0x1a126(%rip), %rdx
    000000a8: 	xorl	%eax, %eax
    000000aa: 	callq	__fprintf_chk@PLT # Offset: 170
    000000af: 	movl	current_test(%rip), %esi
    000000b5: 	testl	%esi, %esi
    000000b7: 	jle	.Ltmp32 # Offset: 183
    000000bd: 	nopl	(%rax) # Size: 3
.Ltmp33:
    000000c0: 	movq	%rbx, %rdx
    000000c3: 	shlq	$0x4, %rdx
    000000c7: 	addq	results(%rip), %rdx
    000000ce: 	movq	0x8(%rdx), %r13
    000000d2: 	movq	%rdx, %r15
    000000d5: 	movq	%r13, %rdi
    000000d8: 	callq	strlen@PLT # Offset: 216
    000000dd: 	subq	$0x8, %rsp
    000000e1: 	movsd	(%r15), %xmm0
    000000e6: 	movl	%ebx, %ecx
    000000e8: 	pushq	%r13
    000000ea: 	movl	%ebp, %r8d
    000000ed: 	movq	%r14, %rdx
    000000f0: 	leaq	DATAat0x1a137(%rip), %r9
    000000f7: 	subl	%eax, %r8d
    000000fa: 	movl	$0x1, %esi
    000000ff: 	movq	%r12, %rdi
    00000102: 	movl	$0x1, %eax
    00000107: 	addq	$0x1, %rbx
    0000010b: 	callq	__fprintf_chk@PLT # Offset: 267
    00000110: 	movl	current_test(%rip), %eax
    00000116: 	popq	%rdx
    00000117: 	popq	%rcx
    00000118: 	cmpl	%ebx, %eax
    0000011a: 	jg	.Ltmp33 # Offset: 282
    0000011c: 	testl	%eax, %eax
    0000011e: 	jle	.Ltmp32 # Offset: 286
    00000124: 	movq	results(%rip), %rdx
    0000012b: 	leal	-0x1(%rax), %ecx
    0000012e: 	pxor	%xmm0, %xmm0
    00000132: 	shlq	$0x4, %rcx
    00000136: 	leaq	0x10(%rdx), %rax
    0000013a: 	addq	%rax, %rcx
    0000013d: 	jmp	.Ltmp34 # Offset: 317
    0000013f: 	nop # Size: 1
.Ltmp35:
    00000140: 	addq	$0x10, %rax
.Ltmp34:
    00000144: 	addsd	(%rdx), %xmm0
    00000148: 	movq	%rax, %rdx
    0000014b: 	cmpq	%rax, %rcx
    0000014e: 	jne	.Ltmp35 # Offset: 334
.Ltmp37:
    00000150: 	movq	0x8(%rsp), %rcx
    00000155: 	movl	$0x1, %esi
    0000015a: 	movq	%r12, %rdi
    0000015d: 	movl	$0x1, %eax
    00000162: 	leaq	DATAat0x1a0c8(%rip), %rdx
    00000169: 	callq	__fprintf_chk@PLT # Offset: 361
    0000016e: 	movl	$0x0, current_test(%rip)
.Ltmp29:
    00000178: 	addq	$0x18, %rsp
    0000017c: 	popq	%rbx
    0000017d: 	popq	%rbp
    0000017e: 	popq	%r12
    00000180: 	popq	%r13
    00000182: 	popq	%r14
    00000184: 	popq	%r15
    00000186: 	retq # Offset: 390
    00000187: 	nopw	(%rax,%rax) # Size: 9
.Ltmp30:
    00000190: 	xorl	%ecx, %ecx
    00000192: 	movl	$0xc, %ebp
    00000197: 	jmp	.Ltmp36 # Offset: 407
    0000019c: 	nopl	(%rax) # Size: 4
.Ltmp32:
    000001a0: 	pxor	%xmm0, %xmm0
    000001a4: 	jmp	.Ltmp37 # Offset: 420
DWARF CFI Instructions:
    <empty>
End of Function "_Z17summarize_simplefP8_IO_FILEPKc"

Binary Function "_Z11start_timerv" after disassembly {
  Number      : 13
  State       : disassembled
  Address     : 0x1c60
  Size        : 0x19
  MaxSize     : 0x20
  Offset      : 0x1c60
  Section     : .text
  Orc Section : .local.text._Z11start_timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB012:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	movq	%rax, start_time(%rip)
    00000014: 	addq	$0x8, %rsp
    00000018: 	retq # Offset: 24
DWARF CFI Instructions:
    <empty>
End of Function "_Z11start_timerv"

Binary Function "_Z5timerv" after disassembly {
  Number      : 14
  State       : disassembled
  Address     : 0x1c80
  Size        : 0x31
  MaxSize     : 0x40
  Offset      : 0x1c80
  Section     : .text
  Orc Section : .local.text._Z5timerv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB013:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	callq	clock@PLT # Offset: 8
    0000000d: 	pxor	%xmm0, %xmm0
    00000011: 	movq	%rax, end_time(%rip)
    00000018: 	subq	start_time(%rip), %rax
    0000001f: 	cvtsi2sd	%rax, %xmm0
    00000024: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000002c: 	addq	$0x8, %rsp
    00000030: 	retq # Offset: 48
DWARF CFI Instructions:
    <empty>
End of Function "_Z5timerv"

Binary Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 15
  State       : disassembled
  Address     : 0x1cc0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1cc0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB014:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f38, %edx
    00000017: 	movl	$0x746e6975, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 16
  State       : disassembled
  Address     : 0x1cf0
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1cf0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB015:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3631746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameItEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 17
  State       : disassembled
  Address     : 0x1d20
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d20
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB016:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3233746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 18
  State       : disassembled
  Address     : 0x1d50
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1d50
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB017:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x745f3436746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameImEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 19
  State       : disassembled
  Address     : 0x1d80
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1d80
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB018:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 20
  State       : disassembled
  Address     : 0x1db0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1db0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB019:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x38746e69, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x745f, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIcEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 21
  State       : disassembled
  Address     : 0x1de0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1de0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB020:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f36, %edx
    00000017: 	movl	$0x31746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 22
  State       : disassembled
  Address     : 0x1e10
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB021:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f32, %edx
    00000017: 	movl	$0x33746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 23
  State       : disassembled
  Address     : 0x1e40
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1e40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB022:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x5f34, %edx
    00000017: 	movl	$0x36746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 24
  State       : disassembled
  Address     : 0x1e70
  Size        : 0x26
  MaxSize     : 0x30
  Offset      : 0x1e70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB023:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x74, 0x14(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x616f6c66, 0x10(%rdi)
    00000019: 	movq	$0x5, 0x8(%rdi)
    00000021: 	movb	$0x0, 0x15(%rdi)
    00000025: 	retq # Offset: 37
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 25
  State       : disassembled
  Address     : 0x1ea0
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x1ea0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB024:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x62756f64, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x656c, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 26
  State       : disassembled
  Address     : 0x1ed0
  Size        : 0x36
  MaxSize     : 0x40
  Offset      : 0x1ed0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB025:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x65, 0x1a(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movl	$0x6c62, %edx
    00000021: 	movq	%rcx, 0x10(%rdi)
    00000025: 	movw	%dx, 0x18(%rdi)
    00000029: 	movq	$0xb, 0x8(%rdi)
    00000031: 	movb	$0x0, 0x1b(%rdi)
    00000035: 	retq # Offset: 53
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 27
  State       : disassembled
  Address     : 0x1f10
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x1f10
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB026:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f38746e6975, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPhEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 28
  State       : disassembled
  Address     : 0x1f40
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1f40
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB027:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3631746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPtEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 29
  State       : disassembled
  Address     : 0x1f70
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1f70
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB028:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3233746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPjEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 30
  State       : disassembled
  Address     : 0x1fa0
  Size        : 0x2d
  MaxSize     : 0x30
  Offset      : 0x1fa0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB029:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x18(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x745f3436746e6975, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movq	$0x9, 0x8(%rdi)
    00000028: 	movb	$0x0, 0x19(%rdi)
    0000002c: 	retq # Offset: 44
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPmEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 31
  State       : disassembled
  Address     : 0x1fd0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x1fd0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB030:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x745f, %edx
    00000017: 	movl	$0x38746e69, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPaEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 32
  State       : disassembled
  Address     : 0x2000
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2000
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB031:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3631746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPsEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 33
  State       : disassembled
  Address     : 0x2030
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2030
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB032:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3233746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPiEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 34
  State       : disassembled
  Address     : 0x2060
  Size        : 0x29
  MaxSize     : 0x30
  Offset      : 0x2060
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB033:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movq	$0x8, 0x8(%rdi)
    00000010: 	movq	%rdi, %rax
    00000013: 	movabsq	$0x2a745f3436746e69, %rcx
    0000001d: 	movq	%rdx, (%rdi)
    00000020: 	movq	%rcx, 0x10(%rdi)
    00000024: 	movb	$0x0, 0x18(%rdi)
    00000028: 	retq # Offset: 40
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPlEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 35
  State       : disassembled
  Address     : 0x2090
  Size        : 0x2b
  MaxSize     : 0x30
  Offset      : 0x2090
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB034:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movl	$0x616f6c66, 0x10(%rdi)
    0000000f: 	movq	%rdi, %rax
    00000012: 	movq	%rdx, (%rdi)
    00000015: 	movl	$0x2a74, %edx
    0000001a: 	movw	%dx, 0x14(%rdi)
    0000001e: 	movq	$0x6, 0x8(%rdi)
    00000026: 	movb	$0x0, 0x16(%rdi)
    0000002a: 	retq # Offset: 42
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPfEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 36
  State       : disassembled
  Address     : 0x20c0
  Size        : 0x2f
  MaxSize     : 0x30
  Offset      : 0x20c0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB035:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x2a, 0x16(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movq	%rdx, (%rdi)
    00000012: 	movl	$0x656c, %edx
    00000017: 	movl	$0x62756f64, 0x10(%rdi)
    0000001e: 	movw	%dx, 0x14(%rdi)
    00000022: 	movq	$0x7, 0x8(%rdi)
    0000002a: 	movb	$0x0, 0x17(%rdi)
    0000002e: 	retq # Offset: 46
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPdEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv" after disassembly {
  Number      : 37
  State       : disassembled
  Address     : 0x20f0
  Size        : 0x30
  MaxSize     : 0x30
  Offset      : 0x20f0
  Section     : .text
  Orc Section : .local.text._ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB036:
    00000000: 	endbr64
    00000004: 	leaq	0x10(%rdi), %rdx
    00000008: 	movb	$0x0, 0x1c(%rdi)
    0000000c: 	movq	%rdi, %rax
    0000000f: 	movabsq	$0x756f6420676e6f6c, %rcx
    00000019: 	movq	%rdx, (%rdi)
    0000001c: 	movq	%rcx, 0x10(%rdi)
    00000020: 	movl	$0x2a656c62, 0x18(%rdi)
    00000027: 	movq	$0xc, 0x8(%rdi)
    0000002f: 	retq # Offset: 47
DWARF CFI Instructions:
    <empty>
End of Function "_ZN9benchmark11getTypeNameIPeEENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEv"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/simple_types_copy_propagation.cpp/1
  Number      : 38
  State       : disassembled
  Address     : 0x2120
  Size        : 0x114
  MaxSize     : 0x120
  Offset      : 0x2120
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB037:
    00000000: 	pushq	%r12
    00000002: 	movq	%rdi, %rsi
    00000005: 	pushq	%rbp
    00000006: 	pushq	%rbx
    00000007: 	subq	$0x10, %rsp
    0000000b: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000029: 	subq	$0x20, %rax
    0000002d: 	cmpq	%rax, %rbx
    00000030: 	je	.Ltmp38 # Offset: 48
    00000036: 	leaq	0x10(%rbx), %rdi
    0000003a: 	movq	0x8(%rsi), %r12
    0000003e: 	movq	%rdi, (%rbx)
    00000041: 	movq	(%rsi), %rbp
    00000044: 	movq	%rbp, %rax
    00000047: 	addq	%r12, %rax
    0000004a: 	je	.Ltmp39 # Offset: 74
    0000004c: 	testq	%rbp, %rbp
    0000004f: 	je	.Ltmp40 # Offset: 79
.Ltmp39:
    00000055: 	movq	%r12, (%rsp)
    00000059: 	cmpq	$0xf, %r12
    0000005d: 	ja	.Ltmp41 # Offset: 93
    0000005f: 	cmpq	$0x1, %r12
    00000063: 	jne	.Ltmp42 # Offset: 99
    00000069: 	movzbl	(%rbp), %eax
    0000006d: 	movb	%al, 0x10(%rbx)
.Ltmp44:
    00000070: 	movq	%r12, 0x8(%rbx)
    00000074: 	movb	$0x0, (%rdi,%r12)
    00000079: 	addq	$0x20, "_ZL7gLabels/1"+48(%rip)
    00000081: 	movq	0x8(%rsp), %rax
    00000086: 	subq	%fs:0x28, %rax
    0000008f: 	jne	.Ltmp43 # Offset: 143
    00000091: 	addq	$0x10, %rsp
    00000095: 	popq	%rbx
    00000096: 	popq	%rbp
    00000097: 	popq	%r12
    00000099: 	retq # Offset: 153
    0000009a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp41:
    000000a0: 	movq	%rbx, %rdi
    000000a3: 	movq	%rsp, %rsi
    000000a6: 	xorl	%edx, %edx
    000000a8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 168
    000000ad: 	movq	%rax, (%rbx)
    000000b0: 	movq	%rax, %rdi
    000000b3: 	movq	(%rsp), %rax
    000000b7: 	movq	%rax, 0x10(%rbx)
.Ltmp45:
    000000bb: 	movq	%r12, %rdx
    000000be: 	movq	%rbp, %rsi
    000000c1: 	callq	memcpy@PLT # Offset: 193
    000000c6: 	movq	(%rsp), %r12
    000000ca: 	movq	(%rbx), %rdi
    000000cd: 	jmp	.Ltmp44 # Offset: 205
    000000cf: 	nop # Size: 1
.Ltmp38:
    000000d0: 	movq	0x8(%rsp), %rax
    000000d5: 	subq	%fs:0x28, %rax
    000000de: 	jne	.Ltmp43 # Offset: 222
    000000e0: 	addq	$0x10, %rsp
    000000e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000000eb: 	popq	%rbx
    000000ec: 	popq	%rbp
    000000ed: 	popq	%r12
    000000ef: 	jmp	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # TAILCALL  # Offset: 239
    000000f4: 	nopl	(%rax) # Size: 4
.Ltmp42:
    000000f8: 	testq	%r12, %r12
    000000fb: 	je	.Ltmp44 # Offset: 251
    00000101: 	jmp	.Ltmp45 # Offset: 257
.Ltmp40:
    00000103: 	leaq	DATAat0x1a158(%rip), %rdi
    0000010a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 266
.Ltmp43:
    0000010f: 	callq	__stack_chk_fail@PLT # Offset: 271
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1(*2)"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)" after disassembly {
  All names   : _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
                _ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev
  Number      : 39
  State       : disassembled
  Address     : 0x2240
  Size        : 0x1f7
  MaxSize     : 0x200
  Offset      : 0x2240
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB038:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	movq	%rdi, %r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x28, %rsp
    00000015: 	movq	0x20(%rdi), %rcx
    00000019: 	movq	0x30(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	0x10(%rdi), %rbp
    00000025: 	movq	%rcx, 0x10(%rsp)
    0000002a: 	movq	0x28(%rdi), %rcx
    0000002e: 	movq	%rax, 0x8(%rsp)
    00000033: 	movq	0x48(%rdi), %rax
    00000037: 	leaq	0x8(%rcx), %r12
    0000003b: 	movq	%rcx, 0x18(%rsp)
    00000040: 	movq	%rax, (%rsp)
    00000044: 	cmpq	%r12, %rax
    00000047: 	jbe	.Ltmp46 # Offset: 71
    00000049: 	nopl	(%rax) # Size: 7
.Ltmp49:
    00000050: 	movq	(%r12), %r15
    00000054: 	leaq	0x200(%r15), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp48:
    00000060: 	movq	(%r15), %rdi
    00000063: 	leaq	0x10(%r15), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp47 # Offset: 106
    00000070: 	movq	0x10(%r15), %rax
    00000074: 	addq	$0x20, %r15
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%r15, %rbx
    00000084: 	jne	.Ltmp48 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp49 # Offset: 142
.Ltmp46:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x18(%rsp)
    00000099: 	je	.Ltmp50 # Offset: 153
    0000009f: 	cmpq	0x10(%rsp), %rbp
    000000a4: 	je	.Ltmp51 # Offset: 164
.Ltmp54:
    000000a6: 	movq	(%rbp), %rdi
    000000aa: 	leaq	0x10(%rbp), %rax
    000000ae: 	cmpq	%rax, %rdi
    000000b1: 	je	.Ltmp52 # Offset: 177
.Ltmp53:
    000000b3: 	movq	0x10(%rbp), %rax
    000000b7: 	addq	$0x20, %rbp
    000000bb: 	leaq	0x1(%rax), %rsi
    000000bf: 	callq	_ZdlPvm@PLT # Offset: 191
    000000c4: 	cmpq	%rbp, 0x10(%rsp)
    000000c9: 	je	.Ltmp51 # Offset: 201
    000000cb: 	movq	(%rbp), %rdi
    000000cf: 	leaq	0x10(%rbp), %rax
    000000d3: 	cmpq	%rax, %rdi
    000000d6: 	jne	.Ltmp53 # Offset: 214
.Ltmp52:
    000000d8: 	addq	$0x20, %rbp
    000000dc: 	cmpq	%rbp, 0x10(%rsp)
    000000e1: 	jne	.Ltmp54 # Offset: 225
    000000e3: 	cmpq	%r13, 0x8(%rsp)
    000000e8: 	je	.Ltmp55 # Offset: 232
    000000ea: 	nopw	(%rax,%rax) # Size: 6
.Ltmp57:
    000000f0: 	movq	(%r13), %rdi
    000000f4: 	leaq	0x10(%r13), %rax
    000000f8: 	cmpq	%rax, %rdi
    000000fb: 	je	.Ltmp56 # Offset: 251
    000000fd: 	movq	0x10(%r13), %rax
    00000101: 	leaq	0x1(%rax), %rsi
    00000105: 	callq	_ZdlPvm@PLT # Offset: 261
.Ltmp56:
    0000010a: 	addq	$0x20, %r13
.Ltmp51:
    0000010e: 	cmpq	%r13, 0x8(%rsp)
    00000113: 	jne	.Ltmp57 # Offset: 275
.Ltmp55:
    00000115: 	movq	(%r14), %rdi
    00000118: 	testq	%rdi, %rdi
    0000011b: 	je	.Ltmp58 # Offset: 283
.Ltmp64:
    00000121: 	movq	0x48(%r14), %rax
    00000125: 	movq	0x28(%r14), %rbx
    00000129: 	leaq	0x8(%rax), %rbp
    0000012d: 	cmpq	%rbx, %rbp
    00000130: 	jbe	.Ltmp59 # Offset: 304
    00000132: 	nopw	(%rax,%rax) # Size: 6
.Ltmp60:
    00000138: 	movq	(%rbx), %rdi
    0000013b: 	movl	$0x200, %esi
    00000140: 	addq	$0x8, %rbx
    00000144: 	callq	_ZdlPvm@PLT # Offset: 324
    00000149: 	cmpq	%rbx, %rbp
    0000014c: 	ja	.Ltmp60 # Offset: 332
    0000014e: 	movq	(%r14), %rdi
.Ltmp59:
    00000151: 	movq	0x8(%r14), %rsi
    00000155: 	addq	$0x28, %rsp
    00000159: 	popq	%rbx
    0000015a: 	popq	%rbp
    0000015b: 	shlq	$0x3, %rsi
    0000015f: 	popq	%r12
    00000161: 	popq	%r13
    00000163: 	popq	%r14
    00000165: 	popq	%r15
    00000167: 	jmp	_ZdlPvm@PLT # TAILCALL  # Offset: 359
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp47:
    00000170: 	addq	$0x20, %r15
    00000174: 	cmpq	%r15, %rbx
    00000177: 	jne	.Ltmp48 # Offset: 375
    0000017d: 	addq	$0x8, %r12
    00000181: 	cmpq	%r12, (%rsp)
    00000185: 	ja	.Ltmp49 # Offset: 389
    0000018b: 	jmp	.Ltmp46 # Offset: 395
.Ltmp50:
    00000190: 	cmpq	0x8(%rsp), %rbp
    00000195: 	je	.Ltmp55 # Offset: 405
.Ltmp63:
    0000019b: 	movq	(%rbp), %rdi
    0000019f: 	leaq	0x10(%rbp), %rax
    000001a3: 	cmpq	%rax, %rdi
    000001a6: 	je	.Ltmp61 # Offset: 422
.Ltmp62:
    000001a8: 	movq	0x10(%rbp), %rax
    000001ac: 	addq	$0x20, %rbp
    000001b0: 	leaq	0x1(%rax), %rsi
    000001b4: 	callq	_ZdlPvm@PLT # Offset: 436
    000001b9: 	cmpq	%rbp, 0x8(%rsp)
    000001be: 	je	.Ltmp55 # Offset: 446
    000001c4: 	movq	(%rbp), %rdi
    000001c8: 	leaq	0x10(%rbp), %rax
    000001cc: 	cmpq	%rax, %rdi
    000001cf: 	jne	.Ltmp62 # Offset: 463
.Ltmp61:
    000001d1: 	addq	$0x20, %rbp
    000001d5: 	cmpq	%rbp, 0x8(%rsp)
    000001da: 	jne	.Ltmp63 # Offset: 474
    000001dc: 	movq	(%r14), %rdi
    000001df: 	testq	%rdi, %rdi
    000001e2: 	jne	.Ltmp64 # Offset: 482
.Ltmp58:
    000001e8: 	addq	$0x28, %rsp
    000001ec: 	popq	%rbx
    000001ed: 	popq	%rbp
    000001ee: 	popq	%r12
    000001f0: 	popq	%r13
    000001f2: 	popq	%r14
    000001f4: 	popq	%r15
    000001f6: 	retq # Offset: 502
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED1Ev(*2)"

Binary Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_" after disassembly {
  Number      : 40
  State       : disassembled
  Address     : 0x2440
  Size        : 0x145
  MaxSize     : 0x150
  Offset      : 0x2440
  Section     : .text
  Orc Section : .local.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB039:
    00000000: 	endbr64
    00000004: 	pushq	%r14
    00000006: 	pushq	%r13
    00000008: 	pushq	%r12
    0000000a: 	movq	%rdi, %r12
    0000000d: 	pushq	%rbp
    0000000e: 	movq	%rdx, %rbp
    00000011: 	pushq	%rbx
    00000012: 	leaq	0x10(%rdi), %rbx
    00000016: 	subq	$0x10, %rsp
    0000001a: 	movq	0x8(%rsi), %r13
    0000001e: 	movq	%fs:0x28, %rax
    00000027: 	movq	%rax, 0x8(%rsp)
    0000002c: 	xorl	%eax, %eax
    0000002e: 	movq	%rbx, (%rdi)
    00000031: 	movq	(%rsi), %r14
    00000034: 	movq	%r14, %rax
    00000037: 	addq	%r13, %rax
    0000003a: 	je	.Ltmp65 # Offset: 58
    0000003c: 	testq	%r14, %r14
    0000003f: 	je	.Ltmp66 # Offset: 63
.Ltmp65:
    00000045: 	movq	%r13, (%rsp)
    00000049: 	cmpq	$0xf, %r13
    0000004d: 	ja	.Ltmp67 # Offset: 77
    0000004f: 	cmpq	$0x1, %r13
    00000053: 	jne	.Ltmp68 # Offset: 83
    00000055: 	movzbl	(%r14), %eax
    00000059: 	movb	%al, 0x10(%r12)
    0000005e: 	movq	%rbx, %rax
.Ltmp72:
    00000061: 	movq	%r13, 0x8(%r12)
    00000066: 	movq	%rbp, %rdi
    00000069: 	movb	$0x0, (%rax,%r13)
    0000006e: 	callq	strlen@PLT # Offset: 110
    00000073: 	movq	%rax, %rdx
    00000076: 	movabsq	$0x3fffffffffffffff, %rax
    00000080: 	subq	0x8(%r12), %rax
    00000085: 	cmpq	%rax, %rdx
    00000088: 	ja	.Ltmp69 # Offset: 136
    0000008a: 	movq	%rbp, %rsi
    0000008d: 	movq	%r12, %rdi
    00000090: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT # Offset: 144
    00000095: 	movq	0x8(%rsp), %rax
    0000009a: 	subq	%fs:0x28, %rax
    000000a3: 	jne	.Ltmp70 # Offset: 163
    000000a5: 	addq	$0x10, %rsp
    000000a9: 	movq	%r12, %rax
    000000ac: 	popq	%rbx
    000000ad: 	popq	%rbp
    000000ae: 	popq	%r12
    000000b0: 	popq	%r13
    000000b2: 	popq	%r14
    000000b4: 	retq # Offset: 180
    000000b5: 	nopl	(%rax) # Size: 3
.Ltmp68:
    000000b8: 	testq	%r13, %r13
    000000bb: 	jne	.Ltmp71 # Offset: 187
    000000bd: 	movq	%rbx, %rax
    000000c0: 	jmp	.Ltmp72 # Offset: 192
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp67:
    000000c8: 	movq	%r12, %rdi
    000000cb: 	movq	%rsp, %rsi
    000000ce: 	xorl	%edx, %edx
    000000d0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 208
    000000d5: 	movq	%rax, (%r12)
    000000d9: 	movq	%rax, %rdi
    000000dc: 	movq	(%rsp), %rax
    000000e0: 	movq	%rax, 0x10(%r12)
.Ltmp73:
    000000e5: 	movq	%r13, %rdx
    000000e8: 	movq	%r14, %rsi
    000000eb: 	callq	memcpy@PLT # Offset: 235
    000000f0: 	movq	(%rsp), %r13
    000000f4: 	movq	(%r12), %rax
    000000f8: 	jmp	.Ltmp72 # Offset: 248
.Ltmp66:
    000000fd: 	leaq	DATAat0x1a158(%rip), %rdi
    00000104: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 260
.Ltmp69:
    00000109: 	leaq	DATAat0x1a182(%rip), %rdi
    00000110: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 272
.Ltmp70:
    00000115: 	callq	__stack_chk_fail@PLT # Offset: 277
.Ltmp71:
    0000011a: 	movq	%rbx, %rdi
    0000011d: 	jmp	.Ltmp73 # Offset: 285
    0000011f: 	endbr64
    00000123: 	movq	%rax, %rbp
    00000126: 	movq	(%r12), %rdi
    0000012a: 	cmpq	%rdi, %rbx
    0000012d: 	je	.Ltmp74 # Offset: 301
    0000012f: 	movq	0x10(%r12), %rsi
    00000134: 	addq	$0x1, %rsi
    00000138: 	callq	_ZdlPvm@PLT # Offset: 312
.Ltmp74:
    0000013d: 	movq	%rbp, %rdi
    00000140: 	callq	_Unwind_Resume@PLT # Offset: 320
DWARF CFI Instructions:
    <empty>
End of Function "_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E" after disassembly {
  Number      : 41
  State       : disassembled
  Address     : 0x2590
  Size        : 0x21d
  MaxSize     : 0x220
  Offset      : 0x2590
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB040:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	movq	%rsi, %r15
    00000009: 	pushq	%r14
    0000000b: 	pushq	%r13
    0000000d: 	pushq	%r12
    0000000f: 	pushq	%rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x38, %rsp
    00000015: 	movq	0x30(%rdi), %rcx
    00000019: 	movq	0x48(%rdi), %rax
    0000001d: 	movq	0x38(%rdi), %r13
    00000021: 	movq	(%rsi), %rbp
    00000024: 	movq	%rdi, 0x20(%rsp)
    00000029: 	movq	%rcx, 0x10(%rsp)
    0000002e: 	movq	0x10(%rsi), %rcx
    00000032: 	movq	%rax, (%rsp)
    00000036: 	movq	%rcx, 0x18(%rsp)
    0000003b: 	movq	0x18(%rsi), %rcx
    0000003f: 	leaq	0x8(%rcx), %r12
    00000043: 	movq	%rcx, 0x28(%rsp)
    00000048: 	cmpq	%r12, %rax
    0000004b: 	jbe	.Ltmp75 # Offset: 75
    0000004d: 	nopl	(%rax) # Size: 3
.Ltmp78:
    00000050: 	movq	(%r12), %r14
    00000054: 	leaq	0x200(%r14), %rbx
    0000005b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp77:
    00000060: 	movq	(%r14), %rdi
    00000063: 	leaq	0x10(%r14), %rdx
    00000067: 	cmpq	%rdx, %rdi
    0000006a: 	je	.Ltmp76 # Offset: 106
    00000070: 	movq	0x10(%r14), %rax
    00000074: 	addq	$0x20, %r14
    00000078: 	leaq	0x1(%rax), %rsi
    0000007c: 	callq	_ZdlPvm@PLT # Offset: 124
    00000081: 	cmpq	%rbx, %r14
    00000084: 	jne	.Ltmp77 # Offset: 132
    00000086: 	addq	$0x8, %r12
    0000008a: 	cmpq	%r12, (%rsp)
    0000008e: 	ja	.Ltmp78 # Offset: 142
.Ltmp75:
    00000090: 	movq	(%rsp), %rcx
    00000094: 	cmpq	%rcx, 0x28(%rsp)
    00000099: 	je	.Ltmp79 # Offset: 153
    0000009f: 	cmpq	0x18(%rsp), %rbp
    000000a4: 	je	.Ltmp80 # Offset: 164
    000000a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp82:
    000000b0: 	movq	(%rbp), %rdi
    000000b4: 	leaq	0x10(%rbp), %rax
    000000b8: 	cmpq	%rax, %rdi
    000000bb: 	je	.Ltmp81 # Offset: 187
    000000c1: 	movq	0x10(%rbp), %rax
    000000c5: 	addq	$0x20, %rbp
    000000c9: 	leaq	0x1(%rax), %rsi
    000000cd: 	callq	_ZdlPvm@PLT # Offset: 205
    000000d2: 	cmpq	%rbp, 0x18(%rsp)
    000000d7: 	jne	.Ltmp82 # Offset: 215
.Ltmp80:
    000000d9: 	cmpq	%r13, 0x10(%rsp)
    000000de: 	je	.Ltmp83 # Offset: 222
.Ltmp85:
    000000e0: 	movq	(%r13), %rdi
    000000e4: 	leaq	0x10(%r13), %rax
    000000e8: 	cmpq	%rax, %rdi
    000000eb: 	je	.Ltmp84 # Offset: 235
    000000f1: 	movq	0x10(%r13), %rax
    000000f5: 	addq	$0x20, %r13
    000000f9: 	leaq	0x1(%rax), %rsi
    000000fd: 	callq	_ZdlPvm@PLT # Offset: 253
    00000102: 	cmpq	%r13, 0x10(%rsp)
    00000107: 	jne	.Ltmp85 # Offset: 263
.Ltmp83:
    00000109: 	movq	0x20(%rsp), %rax
    0000010e: 	movq	0x48(%rax), %rax
    00000112: 	movq	%rax, (%rsp)
    00000116: 	leaq	0x8(%rax), %rbp
    0000011a: 	movq	0x18(%r15), %rax
    0000011e: 	leaq	0x8(%rax), %rbx
    00000122: 	cmpq	%rbx, %rbp
    00000125: 	jbe	.Ltmp86 # Offset: 293
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp87:
    00000130: 	movq	(%rbx), %rdi
    00000133: 	movl	$0x200, %esi
    00000138: 	addq	$0x8, %rbx
    0000013c: 	callq	_ZdlPvm@PLT # Offset: 316
    00000141: 	cmpq	%rbx, %rbp
    00000144: 	ja	.Ltmp87 # Offset: 324
.Ltmp86:
    00000146: 	movdqu	(%r15), %xmm0
    0000014b: 	movq	0x20(%rsp), %rax
    00000150: 	movups	%xmm0, 0x30(%rax)
    00000154: 	movdqu	0x10(%r15), %xmm1
    0000015a: 	movaps	%xmm1, (%rsp)
    0000015e: 	movups	%xmm1, 0x40(%rax)
    00000162: 	addq	$0x38, %rsp
    00000166: 	popq	%rbx
    00000167: 	popq	%rbp
    00000168: 	popq	%r12
    0000016a: 	popq	%r13
    0000016c: 	popq	%r14
    0000016e: 	popq	%r15
    00000170: 	retq # Offset: 368
    00000171: 	nopl	(%rax) # Size: 7
.Ltmp76:
    00000178: 	addq	$0x20, %r14
    0000017c: 	cmpq	%r14, %rbx
    0000017f: 	jne	.Ltmp77 # Offset: 383
    00000185: 	addq	$0x8, %r12
    00000189: 	cmpq	%r12, (%rsp)
    0000018d: 	ja	.Ltmp78 # Offset: 397
    00000193: 	jmp	.Ltmp75 # Offset: 403
    00000198: 	nopl	(%rax,%rax) # Size: 8
.Ltmp84:
    000001a0: 	addq	$0x20, %r13
    000001a4: 	cmpq	%r13, 0x10(%rsp)
    000001a9: 	jne	.Ltmp85 # Offset: 425
    000001af: 	jmp	.Ltmp83 # Offset: 431
    000001b4: 	nopl	(%rax) # Size: 4
.Ltmp81:
    000001b8: 	addq	$0x20, %rbp
    000001bc: 	cmpq	%rbp, 0x18(%rsp)
    000001c1: 	jne	.Ltmp82 # Offset: 449
    000001c7: 	jmp	.Ltmp80 # Offset: 455
.Ltmp79:
    000001cc: 	cmpq	0x10(%rsp), %rbp
    000001d1: 	je	.Ltmp83 # Offset: 465
.Ltmp90:
    000001d7: 	movq	(%rbp), %rdi
    000001db: 	leaq	0x10(%rbp), %rax
    000001df: 	cmpq	%rax, %rdi
    000001e2: 	je	.Ltmp88 # Offset: 482
.Ltmp89:
    000001e4: 	movq	0x10(%rbp), %rax
    000001e8: 	addq	$0x20, %rbp
    000001ec: 	leaq	0x1(%rax), %rsi
    000001f0: 	callq	_ZdlPvm@PLT # Offset: 496
    000001f5: 	cmpq	%rbp, 0x10(%rsp)
    000001fa: 	je	.Ltmp83 # Offset: 506
    00000200: 	movq	(%rbp), %rdi
    00000204: 	leaq	0x10(%rbp), %rax
    00000208: 	cmpq	%rax, %rdi
    0000020b: 	jne	.Ltmp89 # Offset: 523
.Ltmp88:
    0000020d: 	addq	$0x20, %rbp
    00000211: 	cmpq	%rbp, 0x10(%rsp)
    00000216: 	jne	.Ltmp90 # Offset: 534
    00000218: 	jmp	.Ltmp83 # Offset: 536
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E"

Binary Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_" after disassembly {
  Number      : 42
  State       : disassembled
  Address     : 0x27b0
  Size        : 0x328
  MaxSize     : 0x330
  Offset      : 0x27b0
  Section     : .text
  Orc Section : .local.text._ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB041:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	movq	%rsi, %rbp
    00000010: 	pushq	%rbx
    00000011: 	subq	$0x18, %rsp
    00000015: 	movq	0x48(%rdi), %r12
    00000019: 	movq	0x28(%rdi), %rsi
    0000001d: 	movq	%fs:0x28, %rax
    00000026: 	movq	%rax, 0x8(%rsp)
    0000002b: 	xorl	%eax, %eax
    0000002d: 	movq	0x30(%rdi), %rax
    00000031: 	subq	0x38(%rdi), %rax
    00000035: 	movq	%r12, %r13
    00000038: 	sarq	$0x5, %rax
    0000003c: 	subq	%rsi, %r13
    0000003f: 	movq	%r13, %rcx
    00000042: 	sarq	$0x3, %rcx
    00000046: 	cmpq	$0x1, %r12
    0000004a: 	movq	%rcx, %rdx
    0000004d: 	adcq	$-0x1, %rdx
    00000051: 	shlq	$0x4, %rdx
    00000055: 	addq	%rdx, %rax
    00000058: 	movq	0x20(%rdi), %rdx
    0000005c: 	subq	0x10(%rdi), %rdx
    00000060: 	sarq	$0x5, %rdx
    00000064: 	addq	%rdx, %rax
    00000067: 	movabsq	$0x3ffffffffffffff, %rdx
    00000071: 	cmpq	%rdx, %rax
    00000074: 	je	.Ltmp91 # Offset: 116
    0000007a: 	movq	0x8(%rdi), %rdx
    0000007e: 	movq	%rdi, %rbx
    00000081: 	movq	(%rdi), %rdi
    00000084: 	movq	%r12, %rax
    00000087: 	subq	%rdi, %rax
    0000008a: 	movq	%rdx, %r8
    0000008d: 	sarq	$0x3, %rax
    00000091: 	subq	%rax, %r8
    00000094: 	cmpq	$0x1, %r8
    00000098: 	jbe	.Ltmp92 # Offset: 152
.Ltmp103:
    0000009e: 	movl	$0x200, %edi
    000000a3: 	callq	_Znwm@PLT # Offset: 163
    000000a8: 	movq	%rax, 0x8(%r12)
    000000ad: 	movq	0x30(%rbx), %r13
    000000b1: 	movq	0x8(%rbp), %r12
    000000b5: 	leaq	0x10(%r13), %rdi
    000000b9: 	movq	%rdi, (%r13)
    000000bd: 	movq	(%rbp), %r14
    000000c1: 	movq	%r14, %rax
    000000c4: 	addq	%r12, %rax
    000000c7: 	je	.Ltmp93 # Offset: 199
    000000c9: 	testq	%r14, %r14
    000000cc: 	je	.Ltmp94 # Offset: 204
.Ltmp93:
    000000d2: 	movq	%r12, (%rsp)
    000000d6: 	cmpq	$0xf, %r12
    000000da: 	ja	.Ltmp95 # Offset: 218
    000000e0: 	cmpq	$0x1, %r12
    000000e4: 	jne	.Ltmp96 # Offset: 228
    000000e6: 	movzbl	(%r14), %eax
    000000ea: 	movb	%al, 0x10(%r13)
.Ltmp98:
    000000ee: 	movq	%r12, 0x8(%r13)
    000000f2: 	movb	$0x0, (%rdi,%r12)
    000000f7: 	movq	0x48(%rbx), %rdx
    000000fb: 	movq	0x8(%rdx), %rax
    000000ff: 	addq	$0x8, %rdx
    00000103: 	movq	%rdx, %xmm1
    00000108: 	movq	%rax, %xmm0
    0000010d: 	addq	$0x200, %rax
    00000113: 	punpcklqdq	%xmm0, %xmm0
    00000117: 	movups	%xmm0, 0x30(%rbx)
    0000011b: 	movq	%rax, %xmm0
    00000120: 	punpcklqdq	%xmm1, %xmm0
    00000124: 	movups	%xmm0, 0x40(%rbx)
    00000128: 	movq	0x8(%rsp), %rax
    0000012d: 	subq	%fs:0x28, %rax
    00000136: 	jne	.Ltmp97 # Offset: 310
    0000013c: 	addq	$0x18, %rsp
    00000140: 	popq	%rbx
    00000141: 	popq	%rbp
    00000142: 	popq	%r12
    00000144: 	popq	%r13
    00000146: 	popq	%r14
    00000148: 	popq	%r15
    0000014a: 	retq # Offset: 330
    0000014b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp96:
    00000150: 	testq	%r12, %r12
    00000153: 	je	.Ltmp98 # Offset: 339
    00000155: 	jmp	.Ltmp99 # Offset: 341
    0000015a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp92:
    00000160: 	leaq	0x2(%rcx), %r14
    00000164: 	leaq	(%r14,%r14), %rax
    00000168: 	cmpq	%rax, %rdx
    0000016b: 	ja	.Ltmp100 # Offset: 363
    00000171: 	testq	%rdx, %rdx
    00000174: 	movl	$0x1, %eax
    00000179: 	cmovneq	%rdx, %rax
    0000017d: 	leaq	0x2(%rdx,%rax), %r15
    00000182: 	movq	%r15, %rax
    00000185: 	shrq	$0x3c, %rax
    00000189: 	jne	.Ltmp101 # Offset: 393
    0000018f: 	leaq	(,%r15,8), %rdi
    00000197: 	callq	_Znwm@PLT # Offset: 407
    0000019c: 	movq	0x28(%rbx), %rsi
    000001a0: 	movq	%rax, %r12
    000001a3: 	movq	%r15, %rax
    000001a6: 	subq	%r14, %rax
    000001a9: 	shrq	%rax
    000001ac: 	leaq	(%r12,%rax,8), %r14
    000001b0: 	movq	0x48(%rbx), %rax
    000001b4: 	leaq	0x8(%rax), %rdx
    000001b8: 	cmpq	%rsi, %rdx
    000001bb: 	je	.Ltmp102 # Offset: 443
    000001bd: 	subq	%rsi, %rdx
    000001c0: 	movq	%r14, %rdi
    000001c3: 	callq	memmove@PLT # Offset: 451
.Ltmp102:
    000001c8: 	movq	0x8(%rbx), %rax
    000001cc: 	movq	(%rbx), %rdi
    000001cf: 	leaq	(,%rax,8), %rsi
    000001d7: 	callq	_ZdlPvm@PLT # Offset: 471
    000001dc: 	movq	%r12, (%rbx)
    000001df: 	movq	%r15, 0x8(%rbx)
.Ltmp105:
    000001e3: 	movq	(%r14), %rax
    000001e6: 	movq	(%r14), %xmm0
    000001eb: 	leaq	(%r14,%r13), %r12
    000001ef: 	movq	%r14, 0x28(%rbx)
    000001f3: 	movq	%r12, 0x48(%rbx)
    000001f7: 	addq	$0x200, %rax
    000001fd: 	movq	%rax, %xmm2
    00000202: 	punpcklqdq	%xmm2, %xmm0
    00000206: 	movups	%xmm0, 0x18(%rbx)
    0000020a: 	movq	(%r12), %rax
    0000020e: 	movq	(%r12), %xmm0
    00000214: 	addq	$0x200, %rax
    0000021a: 	movq	%rax, %xmm3
    0000021f: 	punpcklqdq	%xmm3, %xmm0
    00000223: 	movups	%xmm0, 0x38(%rbx)
    00000227: 	jmp	.Ltmp103 # Offset: 551
    0000022c: 	nopl	(%rax) # Size: 4
.Ltmp95:
    00000230: 	movq	%rsp, %rsi
    00000233: 	xorl	%edx, %edx
    00000235: 	movq	%r13, %rdi
    00000238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 568
    0000023d: 	movq	%rax, (%r13)
    00000241: 	movq	%rax, %rdi
    00000244: 	movq	(%rsp), %rax
    00000248: 	movq	%rax, 0x10(%r13)
.Ltmp99:
    0000024c: 	movq	%r12, %rdx
    0000024f: 	movq	%r14, %rsi
    00000252: 	callq	memcpy@PLT # Offset: 594
    00000257: 	movq	(%rsp), %r12
    0000025b: 	movq	(%r13), %rdi
    0000025f: 	jmp	.Ltmp98 # Offset: 607
    00000264: 	nopl	(%rax) # Size: 4
.Ltmp100:
    00000268: 	subq	%r14, %rdx
    0000026b: 	addq	$0x8, %r12
    0000026f: 	shrq	%rdx
    00000272: 	leaq	(%rdi,%rdx,8), %r14
    00000276: 	movq	%r12, %rdx
    00000279: 	subq	%rsi, %rdx
    0000027c: 	cmpq	%r14, %rsi
    0000027f: 	jbe	.Ltmp104 # Offset: 639
    00000281: 	cmpq	%r12, %rsi
    00000284: 	je	.Ltmp105 # Offset: 644
    0000028a: 	movq	%r14, %rdi
    0000028d: 	callq	memmove@PLT # Offset: 653
    00000292: 	jmp	.Ltmp105 # Offset: 658
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp104:
    000002a0: 	cmpq	%r12, %rsi
    000002a3: 	je	.Ltmp105 # Offset: 675
    000002a9: 	leaq	0x8(%r13), %rdi
    000002ad: 	subq	%rdx, %rdi
    000002b0: 	addq	%r14, %rdi
    000002b3: 	callq	memmove@PLT # Offset: 691
    000002b8: 	jmp	.Ltmp105 # Offset: 696
.Ltmp94:
    000002bd: 	leaq	DATAat0x1a158(%rip), %rdi
    000002c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 708
    000002c9: 	nopl	(%rax) # Size: 7
.Ltmp101:
    000002d0: 	shrq	$0x3d, %r15
    000002d4: 	je	.Ltmp106 # Offset: 724
    000002d6: 	callq	_ZSt28__throw_bad_array_new_lengthv@PLT # Offset: 726
.Ltmp106:
    000002db: 	callq	_ZSt17__throw_bad_allocv@PLT # Offset: 731
.Ltmp91:
    000002e0: 	leaq	DATAat0x1a198(%rip), %rdi
    000002e7: 	callq	_ZSt20__throw_length_errorPKc@PLT # Offset: 743
.Ltmp97:
    000002ec: 	callq	__stack_chk_fail@PLT # Offset: 748
    000002f1: 	endbr64
    000002f5: 	movq	%rax, %rdi
    000002f8: 	callq	__cxa_begin_catch@PLT # Offset: 760
    000002fd: 	movq	0x48(%rbx), %rax
    00000301: 	movl	$0x200, %esi
    00000306: 	movq	0x8(%rax), %rdi
    0000030a: 	callq	_ZdlPvm@PLT # Offset: 778
    0000030f: 	callq	__cxa_rethrow@PLT # Offset: 783
    00000314: 	endbr64
    00000318: 	movq	%rax, %rbp
    0000031b: 	callq	__cxa_end_catch@PLT # Offset: 795
    00000320: 	movq	%rbp, %rdi
    00000323: 	callq	_Unwind_Resume@PLT # Offset: 803
DWARF CFI Instructions:
    <empty>
End of Function "_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_"

Binary Function "_Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_copy_propagation.cpp/1
  Number      : 43
  State       : disassembled
  Address     : 0x2ae0
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x2ae0
  Section     : .text
  Orc Section : .local.text._Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB042:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp107 # Offset: 54
    0000003c: 	cvttsd2si	init_value(%rip), %esi
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x1a1c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp110:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp108:
    00000060: 	movdqu	(%rax), %xmm2
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm2, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp108 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	movl	%esi, %edx
    00000077: 	psrldq	$0x8, %xmm1
    0000007c: 	shll	$0x6, %edx
    0000007f: 	paddb	%xmm1, %xmm0
    00000083: 	pxor	%xmm1, %xmm1
    00000087: 	psadbw	%xmm1, %xmm0
    0000008b: 	movd	%xmm0, %eax
    0000008f: 	cmpb	%al, %dl
    00000091: 	je	.Ltmp109 # Offset: 145
    00000093: 	movl	current_test(%rip), %edx
    00000099: 	movq	%r12, %rsi
    0000009c: 	movl	$0x1, %edi
    000000a1: 	xorl	%eax, %eax
    000000a3: 	addl	$0x1, %r14d
    000000a7: 	callq	__printf_chk@PLT # Offset: 167
    000000ac: 	movl	iterations(%rip), %ecx
    000000b2: 	cmpl	%r14d, %ecx
    000000b5: 	jle	.Ltmp107 # Offset: 181
    000000b7: 	cvttsd2si	init_value(%rip), %esi
    000000bf: 	jmp	.Ltmp110 # Offset: 191
    000000c1: 	nopl	(%rax) # Size: 7
.Ltmp109:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp110 # Offset: 207
.Ltmp107:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp111 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp112 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp113 # Offset: 262
.Ltmp112:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp114 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp115 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp118:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp116 # Offset: 340
.Ltmp119:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp117 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp114:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp120:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp118 # Offset: 471
.Ltmp111:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp119 # Offset: 512
.Ltmp116:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp119 # Offset: 528
.Ltmp115:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp118 # Offset: 536
    0000021e: 	jmp	.Ltmp120 # Offset: 542
.Ltmp117:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp113:
    00000225: 	leaq	DATAat0x1a158(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_copy_propagation.cpp/1
  Number      : 44
  State       : disassembled
  Address     : 0x2d20
  Size        : 0x231
  MaxSize     : 0x240
  Offset      : 0x2d20
  Section     : .text
  Orc Section : .local.text._Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB043:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp121 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x1f40(%rbp), %rbx
    0000004e: 	leaq	DATAat0x1a1c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp124:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp122:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddb	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp122 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %edx
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddb	%xmm1, %xmm0
    00000082: 	pxor	%xmm1, %xmm1
    00000086: 	psadbw	%xmm1, %xmm0
    0000008a: 	movd	%xmm0, %eax
    0000008e: 	shll	$0x6, %edx
    00000091: 	cmpb	%al, %dl
    00000093: 	je	.Ltmp123 # Offset: 147
    00000095: 	movl	current_test(%rip), %edx
    0000009b: 	movq	%r12, %rsi
    0000009e: 	movl	$0x1, %edi
    000000a3: 	xorl	%eax, %eax
    000000a5: 	addl	$0x1, %r14d
    000000a9: 	callq	__printf_chk@PLT # Offset: 169
    000000ae: 	movl	iterations(%rip), %ecx
    000000b4: 	cmpl	%r14d, %ecx
    000000b7: 	jle	.Ltmp121 # Offset: 183
    000000b9: 	movsd	init_value(%rip), %xmm2
    000000c1: 	jmp	.Ltmp124 # Offset: 193
    000000c3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp123:
    000000c8: 	addl	$0x1, %r14d
    000000cc: 	cmpl	%ecx, %r14d
    000000cf: 	jl	.Ltmp124 # Offset: 207
.Ltmp121:
    000000d1: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000df: 	subq	$0x20, %rax
    000000e3: 	cmpq	%rax, %rbx
    000000e6: 	je	.Ltmp125 # Offset: 230
    000000ec: 	leaq	0x10(%rbx), %rdi
    000000f0: 	movq	0x8(%r13), %r12
    000000f4: 	movq	%rdi, (%rbx)
    000000f7: 	movq	(%r13), %rbp
    000000fb: 	movq	%rbp, %rax
    000000fe: 	addq	%r12, %rax
    00000101: 	je	.Ltmp126 # Offset: 257
    00000103: 	testq	%rbp, %rbp
    00000106: 	je	.Ltmp127 # Offset: 262
.Ltmp126:
    0000010c: 	movq	%r12, (%rsp)
    00000110: 	cmpq	$0xf, %r12
    00000114: 	ja	.Ltmp128 # Offset: 276
    0000011a: 	cmpq	$0x1, %r12
    0000011e: 	jne	.Ltmp129 # Offset: 286
    00000124: 	movzbl	(%rbp), %eax
    00000128: 	movb	%al, 0x10(%rbx)
.Ltmp132:
    0000012b: 	movq	%r12, 0x8(%rbx)
    0000012f: 	movb	$0x0, (%rdi,%r12)
    00000134: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000013b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000142: 	addq	$0x20, %rax
    00000146: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000014d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000154: 	je	.Ltmp130 # Offset: 340
.Ltmp133:
    0000015a: 	movq	-0x20(%rax), %rbp
    0000015e: 	callq	clock@PLT # Offset: 350
    00000163: 	movq	%rax, end_time(%rip)
    0000016a: 	movq	0x8(%rsp), %rdx
    0000016f: 	subq	%fs:0x28, %rdx
    00000178: 	jne	.Ltmp131 # Offset: 376
    0000017e: 	subq	start_time(%rip), %rax
    00000185: 	pxor	%xmm0, %xmm0
    00000189: 	movq	%rbp, %rdi
    0000018c: 	cvtsi2sd	%rax, %xmm0
    00000191: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000199: 	addq	$0x10, %rsp
    0000019d: 	popq	%rbx
    0000019e: 	popq	%rbp
    0000019f: 	popq	%r12
    000001a1: 	popq	%r13
    000001a3: 	popq	%r14
    000001a5: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 421
.Ltmp128:
    000001aa: 	movq	%rbx, %rdi
    000001ad: 	movq	%rsp, %rsi
    000001b0: 	xorl	%edx, %edx
    000001b2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 434
    000001b7: 	movq	%rax, (%rbx)
    000001ba: 	movq	%rax, %rdi
    000001bd: 	movq	(%rsp), %rax
    000001c1: 	movq	%rax, 0x10(%rbx)
.Ltmp134:
    000001c5: 	movq	%r12, %rdx
    000001c8: 	movq	%rbp, %rsi
    000001cb: 	callq	memcpy@PLT # Offset: 459
    000001d0: 	movq	(%rsp), %r12
    000001d4: 	movq	(%rbx), %rdi
    000001d7: 	jmp	.Ltmp132 # Offset: 471
.Ltmp125:
    000001dc: 	movq	%r13, %rsi
    000001df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000001e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 486
    000001eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000200: 	jne	.Ltmp133 # Offset: 512
.Ltmp130:
    00000206: 	movq	-0x8(%rdx), %rax
    0000020a: 	addq	$0x200, %rax
    00000210: 	jmp	.Ltmp133 # Offset: 528
.Ltmp129:
    00000215: 	testq	%r12, %r12
    00000218: 	je	.Ltmp132 # Offset: 536
    0000021e: 	jmp	.Ltmp134 # Offset: 542
.Ltmp131:
    00000220: 	callq	__stack_chk_fail@PLT # Offset: 544
.Ltmp127:
    00000225: 	leaq	DATAat0x1a158(%rip), %rdi
    0000022c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 556
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)" after disassembly {
  All names   : _Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
                _Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/simple_types_copy_propagation.cpp/1
  Number      : 45
  State       : disassembled
  Address     : 0x2f60
  Size        : 0x24d
  MaxSize     : 0x250
  Offset      : 0x2f60
  Section     : .text
  Orc Section : .local.text._Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB044:
    00000000: 	pushq	%r14
    00000002: 	pushq	%r13
    00000004: 	movq	%rsi, %r13
    00000007: 	pushq	%r12
    00000009: 	pushq	%rbp
    0000000a: 	movq	%rdi, %rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x10, %rsp
    00000012: 	movq	%fs:0x28, %rax
    0000001b: 	movq	%rax, 0x8(%rsp)
    00000020: 	xorl	%eax, %eax
    00000022: 	callq	clock@PLT # Offset: 34
    00000027: 	movl	iterations(%rip), %ecx
    0000002d: 	movq	%rax, start_time(%rip)
    00000034: 	testl	%ecx, %ecx
    00000036: 	jle	.Ltmp135 # Offset: 54
    0000003c: 	movsd	init_value(%rip), %xmm2
    00000044: 	xorl	%r14d, %r14d
    00000047: 	leaq	0x3e80(%rbp), %rbx
    0000004e: 	leaq	DATAat0x1a1c8(%rip), %r12
    00000055: 	nopl	(%rax) # Size: 3
.Ltmp138:
    00000058: 	movq	%rbp, %rax
    0000005b: 	pxor	%xmm0, %xmm0
    0000005f: 	nop # Size: 1
.Ltmp136:
    00000060: 	movdqu	(%rax), %xmm3
    00000064: 	addq	$0x10, %rax
    00000068: 	paddw	%xmm3, %xmm0
    0000006c: 	cmpq	%rax, %rbx
    0000006f: 	jne	.Ltmp136 # Offset: 111
    00000071: 	movdqa	%xmm0, %xmm1
    00000075: 	cvttsd2si	%xmm2, %eax
    00000079: 	psrldq	$0x8, %xmm1
    0000007e: 	paddw	%xmm1, %xmm0
    00000082: 	movdqa	%xmm0, %xmm1
    00000086: 	psrldq	$0x4, %xmm1
    0000008b: 	imulw	$0x1f40, %ax, %ax
    00000090: 	paddw	%xmm1, %xmm0
    00000094: 	movdqa	%xmm0, %xmm1
    00000098: 	psrldq	$0x2, %xmm1
    0000009d: 	paddw	%xmm1, %xmm0
    000000a1: 	pextrw	$0x0, %xmm0, %edx
    000000a6: 	cmpw	%dx, %ax
    000000a9: 	je	.Ltmp137 # Offset: 169
    000000ab: 	movl	current_test(%rip), %edx
    000000b1: 	movq	%r12, %rsi
    000000b4: 	movl	$0x1, %edi
    000000b9: 	xorl	%eax, %eax
    000000bb: 	addl	$0x1, %r14d
    000000bf: 	callq	__printf_chk@PLT # Offset: 191
    000000c4: 	movl	iterations(%rip), %ecx
    000000ca: 	cmpl	%ecx, %r14d
    000000cd: 	jge	.Ltmp135 # Offset: 205
    000000cf: 	movsd	init_value(%rip), %xmm2
    000000d7: 	jmp	.Ltmp138 # Offset: 215
    000000dc: 	nopl	(%rax) # Size: 4
.Ltmp137:
    000000e0: 	addl	$0x1, %r14d
    000000e4: 	cmpl	%ecx, %r14d
    000000e7: 	jl	.Ltmp138 # Offset: 231
.Ltmp135:
    000000ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000000f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000000fb: 	subq	$0x20, %rax
    000000ff: 	cmpq	%rax, %rbx
    00000102: 	je	.Ltmp139 # Offset: 258
    00000108: 	leaq	0x10(%rbx), %rdi
    0000010c: 	movq	0x8(%r13), %r12
    00000110: 	movq	%rdi, (%rbx)
    00000113: 	movq	(%r13), %rbp
    00000117: 	movq	%rbp, %rax
    0000011a: 	addq	%r12, %rax
    0000011d: 	je	.Ltmp140 # Offset: 285
    0000011f: 	testq	%rbp, %rbp
    00000122: 	je	.Ltmp141 # Offset: 290
.Ltmp140:
    00000128: 	movq	%r12, (%rsp)
    0000012c: 	cmpq	$0xf, %r12
    00000130: 	ja	.Ltmp142 # Offset: 304
    00000136: 	cmpq	$0x1, %r12
    0000013a: 	jne	.Ltmp143 # Offset: 314
    00000140: 	movzbl	(%rbp), %eax
    00000144: 	movb	%al, 0x10(%rbx)
.Ltmp146:
    00000147: 	movq	%r12, 0x8(%rbx)
    0000014b: 	movb	$0x0, (%rdi,%r12)
    00000150: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000157: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000015e: 	addq	$0x20, %rax
    00000162: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000169: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000170: 	je	.Ltmp144 # Offset: 368
.Ltmp147:
    00000176: 	movq	-0x20(%rax), %rbp
    0000017a: 	callq	clock@PLT # Offset: 378
    0000017f: 	movq	%rax, end_time(%rip)
    00000186: 	movq	0x8(%rsp), %rdx
    0000018b: 	subq	%fs:0x28, %rdx
    00000194: 	jne	.Ltmp145 # Offset: 404
    0000019a: 	subq	start_time(%rip), %rax
    000001a1: 	pxor	%xmm0, %xmm0
    000001a5: 	movq	%rbp, %rdi
    000001a8: 	cvtsi2sd	%rax, %xmm0
    000001ad: 	divsd	DATAat0x1a318(%rip), %xmm0
    000001b5: 	addq	$0x10, %rsp
    000001b9: 	popq	%rbx
    000001ba: 	popq	%rbp
    000001bb: 	popq	%r12
    000001bd: 	popq	%r13
    000001bf: 	popq	%r14
    000001c1: 	jmp	_Z13record_resultdPKc # TAILCALL  # Offset: 449
.Ltmp142:
    000001c6: 	movq	%rbx, %rdi
    000001c9: 	movq	%rsp, %rsi
    000001cc: 	xorl	%edx, %edx
    000001ce: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 462
    000001d3: 	movq	%rax, (%rbx)
    000001d6: 	movq	%rax, %rdi
    000001d9: 	movq	(%rsp), %rax
    000001dd: 	movq	%rax, 0x10(%rbx)
.Ltmp148:
    000001e1: 	movq	%r12, %rdx
    000001e4: 	movq	%rbp, %rsi
    000001e7: 	callq	memcpy@PLT # Offset: 487
    000001ec: 	movq	(%rsp), %r12
    000001f0: 	movq	(%rbx), %rdi
    000001f3: 	jmp	.Ltmp146 # Offset: 499
.Ltmp139:
    000001f8: 	movq	%r13, %rsi
    000001fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000202: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 514
    00000207: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000020e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000215: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000021c: 	jne	.Ltmp147 # Offset: 540
.Ltmp144:
    00000222: 	movq	-0x8(%rdx), %rax
    00000226: 	addq	$0x200, %rax
    0000022c: 	jmp	.Ltmp147 # Offset: 556
.Ltmp143:
    00000231: 	testq	%r12, %r12
    00000234: 	je	.Ltmp146 # Offset: 564
    0000023a: 	jmp	.Ltmp148 # Offset: 570
.Ltmp145:
    0000023c: 	callq	__stack_chk_fail@PLT # Offset: 572
.Ltmp141:
    00000241: 	leaq	DATAat0x1a158(%rip), %rdi
    00000248: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 584
DWARF CFI Instructions:
    <empty>
End of Function "_Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1(*2)"

Binary Function "_Z11TestOneTypeIhEvv" after disassembly {
  Number      : 46
  State       : disassembled
  Address     : 0x31b0
  Size        : 0x1e26
  MaxSize     : 0x1e30
  Offset      : 0x31b0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIhEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB045:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0xfd8, %rsp
    00000021: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000029: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000031: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000038: 	movq	%fs:0x28, %rax
    00000041: 	movq	%rax, 0x1fc8(%rsp)
    00000049: 	xorl	%eax, %eax
    0000004b: 	leaq	0x20(%rsp), %rsi
    00000050: 	movaps	%xmm2, 0x20(%rsp)
    00000055: 	leaq	0x80(%rsp), %rbp
    0000005d: 	movq	%rsi, 0x8(%rsp)
    00000062: 	leaq	0x60(%rsp), %r12
    00000067: 	leaq	0x40(%rsp), %r15
    0000006c: 	movaps	%xmm3, 0x30(%rsp)
    00000071: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 113
    00000076: 	leaq	0x50(%rsp), %rax
    0000007b: 	movq	%rbp, %rdi
    0000007e: 	movq	%r15, %rsi
    00000081: 	movq	%rax, 0x10(%rsp)
    00000086: 	movl	$0x3e8, %ecx
    0000008b: 	movabsq	$0x101010101010101, %rdx
    00000095: 	movq	%rax, 0x40(%rsp)
    0000009a: 	movl	$0x5f38, %eax
    0000009f: 	movw	%ax, 0x54(%rsp)
    000000a4: 	cvttsd2si	init_value(%rip), %eax
    000000ac: 	movl	$0x746e6975, 0x50(%rsp)
    000000b4: 	movb	$0x74, 0x56(%rsp)
    000000b9: 	movq	$0x7, 0x48(%rsp)
    000000c2: 	movzbl	%al, %eax
    000000c5: 	movb	$0x0, 0x57(%rsp)
    000000ca: 	imulq	%rdx, %rax
    000000ce: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000d5: 	rep		stosq	%rax, %es:(%rdi)
    000000d8: 	movq	%r12, %rdi
    000000db: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 219
    000000e0: 	callq	clock@PLT # Offset: 224
    000000e5: 	movl	iterations(%rip), %ecx
    000000eb: 	xorl	%r13d, %r13d
    000000ee: 	leaq	0x1fc0(%rsp), %rbx
    000000f6: 	movq	%rax, start_time(%rip)
    000000fd: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000104: 	testl	%ecx, %ecx
    00000106: 	jle	.Ltmp149 # Offset: 262
    00000108: 	nopl	(%rax,%rax) # Size: 8
.Ltmp152:
    00000110: 	movq	%rbp, %rax
    00000113: 	pxor	%xmm0, %xmm0
    00000117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp150:
    00000120: 	paddb	(%rax), %xmm0
    00000124: 	addq	$0x10, %rax
    00000128: 	cmpq	%rbx, %rax
    0000012b: 	jne	.Ltmp150 # Offset: 299
    0000012d: 	movdqa	%xmm0, %xmm1
    00000131: 	cvttsd2si	init_value(%rip), %edx
    00000139: 	psrldq	$0x8, %xmm1
    0000013e: 	paddb	%xmm1, %xmm0
    00000142: 	pxor	%xmm1, %xmm1
    00000146: 	psadbw	%xmm1, %xmm0
    0000014a: 	movd	%xmm0, %eax
    0000014e: 	shll	$0x6, %edx
    00000151: 	cmpb	%al, %dl
    00000153: 	je	.Ltmp151 # Offset: 339
    00000155: 	movl	current_test(%rip), %edx
    0000015b: 	movq	%r14, %rsi
    0000015e: 	movl	$0x1, %edi
    00000163: 	xorl	%eax, %eax
    00000165: 	callq	__printf_chk@PLT # Offset: 357
    0000016a: 	movl	iterations(%rip), %ecx
.Ltmp151:
    00000170: 	addl	$0x1, %r13d
    00000174: 	cmpl	%ecx, %r13d
    00000177: 	jl	.Ltmp152 # Offset: 375
.Ltmp149:
    00000179: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000180: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000187: 	subq	$0x20, %rax
    0000018b: 	cmpq	%rax, %rbx
    0000018e: 	je	.Ltmp153 # Offset: 398
    00000194: 	leaq	0x10(%rbx), %rdi
    00000198: 	movq	0x68(%rsp), %r13
    0000019d: 	movq	%rdi, (%rbx)
    000001a0: 	movq	0x60(%rsp), %r14
    000001a5: 	movq	%r14, %rax
    000001a8: 	addq	%r13, %rax
    000001ab: 	je	.Ltmp154 # Offset: 427
    000001ad: 	testq	%r14, %r14
    000001b0: 	je	.Ltmp155 # Offset: 432
.Ltmp154:
    000001b6: 	movq	%r13, 0x20(%rsp)
    000001bb: 	cmpq	$0xf, %r13
    000001bf: 	ja	.Ltmp156 # Offset: 447
    000001c5: 	cmpq	$0x1, %r13
    000001c9: 	jne	.Ltmp157 # Offset: 457
    000001cf: 	movzbl	(%r14), %eax
    000001d3: 	movb	%al, 0x10(%rbx)
.Ltmp304:
    000001d6: 	movq	%r13, 0x8(%rbx)
    000001da: 	movb	$0x0, (%rdi,%r13)
    000001df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001ed: 	addq	$0x20, %rax
    000001f1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001f8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ff: 	je	.Ltmp158 # Offset: 511
.Ltmp305:
    00000205: 	movq	-0x20(%rax), %r13
    00000209: 	callq	clock@PLT # Offset: 521
    0000020e: 	pxor	%xmm0, %xmm0
    00000212: 	movq	%rax, end_time(%rip)
    00000219: 	movq	%r13, %rdi
    0000021c: 	subq	start_time(%rip), %rax
    00000223: 	cvtsi2sd	%rax, %xmm0
    00000228: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000230: 	callq	_Z13record_resultdPKc # Offset: 560
    00000235: 	movq	0x60(%rsp), %rdi
    0000023a: 	leaq	0x70(%rsp), %r14
    0000023f: 	cmpq	%r14, %rdi
    00000242: 	je	.Ltmp159 # Offset: 578
    00000244: 	movq	0x70(%rsp), %rax
    00000249: 	leaq	0x1(%rax), %rsi
    0000024d: 	callq	_ZdlPvm@PLT # Offset: 589
.Ltmp159:
    00000252: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000259: 	movq	%r15, %rsi
    0000025c: 	movq	%r12, %rdi
    0000025f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 607
    00000264: 	callq	clock@PLT # Offset: 612
    00000269: 	movl	iterations(%rip), %ecx
    0000026f: 	xorl	%r13d, %r13d
    00000272: 	leaq	0x1fc0(%rsp), %rbx
    0000027a: 	movq	%rax, start_time(%rip)
    00000281: 	testl	%ecx, %ecx
    00000283: 	jle	.Ltmp160 # Offset: 643
    00000285: 	nopl	(%rax) # Size: 3
.Ltmp163:
    00000288: 	movq	%rbp, %rax
    0000028b: 	pxor	%xmm0, %xmm0
    0000028f: 	nop # Size: 1
.Ltmp161:
    00000290: 	paddb	(%rax), %xmm0
    00000294: 	addq	$0x10, %rax
    00000298: 	cmpq	%rax, %rbx
    0000029b: 	jne	.Ltmp161 # Offset: 667
    0000029d: 	movdqa	%xmm0, %xmm1
    000002a1: 	cvttsd2si	init_value(%rip), %edx
    000002a9: 	psrldq	$0x8, %xmm1
    000002ae: 	paddb	%xmm1, %xmm0
    000002b2: 	pxor	%xmm1, %xmm1
    000002b6: 	psadbw	%xmm1, %xmm0
    000002ba: 	movd	%xmm0, %eax
    000002be: 	shll	$0x6, %edx
    000002c1: 	cmpb	%al, %dl
    000002c3: 	je	.Ltmp162 # Offset: 707
    000002c5: 	movl	current_test(%rip), %edx
    000002cb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002d2: 	movl	$0x1, %edi
    000002d7: 	xorl	%eax, %eax
    000002d9: 	callq	__printf_chk@PLT # Offset: 729
    000002de: 	movl	iterations(%rip), %ecx
.Ltmp162:
    000002e4: 	addl	$0x1, %r13d
    000002e8: 	cmpl	%ecx, %r13d
    000002eb: 	jl	.Ltmp163 # Offset: 747
.Ltmp160:
    000002ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002fb: 	subq	$0x20, %rax
    000002ff: 	cmpq	%rax, %rbx
    00000302: 	je	.Ltmp164 # Offset: 770
    00000308: 	leaq	0x10(%rbx), %rdi
    0000030c: 	movq	0x68(%rsp), %r13
    00000311: 	movq	%rdi, (%rbx)
    00000314: 	movq	0x60(%rsp), %rax
    00000319: 	movq	%rax, %rsi
    0000031c: 	movq	%rax, 0x18(%rsp)
    00000321: 	addq	%r13, %rsi
    00000324: 	je	.Ltmp165 # Offset: 804
    00000326: 	testq	%rax, %rax
    00000329: 	je	.Ltmp166 # Offset: 809
.Ltmp165:
    0000032f: 	movq	%r13, 0x20(%rsp)
    00000334: 	cmpq	$0xf, %r13
    00000338: 	ja	.Ltmp167 # Offset: 824
    0000033e: 	cmpq	$0x1, %r13
    00000342: 	jne	.Ltmp168 # Offset: 834
    00000348: 	movq	0x18(%rsp), %rax
    0000034d: 	movzbl	(%rax), %eax
    00000350: 	movb	%al, 0x10(%rbx)
.Ltmp334:
    00000353: 	movq	%r13, 0x8(%rbx)
    00000357: 	movb	$0x0, (%rdi,%r13)
    0000035c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000363: 	addq	$0x20, %rax
    00000367: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp319:
    0000036e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000375: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000037c: 	je	.Ltmp169 # Offset: 892
.Ltmp318:
    00000382: 	movq	-0x20(%rax), %r13
    00000386: 	callq	clock@PLT # Offset: 902
    0000038b: 	pxor	%xmm0, %xmm0
    0000038f: 	movq	%rax, end_time(%rip)
    00000396: 	movq	%r13, %rdi
    00000399: 	subq	start_time(%rip), %rax
    000003a0: 	cvtsi2sd	%rax, %xmm0
    000003a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000003ad: 	callq	_Z13record_resultdPKc # Offset: 941
    000003b2: 	movq	0x60(%rsp), %rdi
    000003b7: 	cmpq	%r14, %rdi
    000003ba: 	je	.Ltmp170 # Offset: 954
    000003bc: 	movq	0x70(%rsp), %rax
    000003c1: 	leaq	0x1(%rax), %rsi
    000003c5: 	callq	_ZdlPvm@PLT # Offset: 965
.Ltmp170:
    000003ca: 	leaq	DATAat0x1a1ee(%rip), %rdx
    000003d1: 	movq	%r15, %rsi
    000003d4: 	movq	%r12, %rdi
    000003d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 983
    000003dc: 	movq	%r12, %rsi
    000003df: 	movq	%rbp, %rdi
    000003e2: 	callq	"_Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 994
    000003e7: 	movq	0x60(%rsp), %rdi
    000003ec: 	cmpq	%r14, %rdi
    000003ef: 	je	.Ltmp171 # Offset: 1007
    000003f1: 	movq	0x70(%rsp), %rax
    000003f6: 	leaq	0x1(%rax), %rsi
    000003fa: 	callq	_ZdlPvm@PLT # Offset: 1018
.Ltmp171:
    000003ff: 	leaq	DATAat0x1a1fb(%rip), %rdx
    00000406: 	movq	%r15, %rsi
    00000409: 	movq	%r12, %rdi
    0000040c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1036
    00000411: 	movq	%r12, %rsi
    00000414: 	movq	%rbp, %rdi
    00000417: 	callq	"_Z13test_constantIh18custom_copy_chain2IhEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1047
    0000041c: 	movq	0x60(%rsp), %rdi
    00000421: 	cmpq	%r14, %rdi
    00000424: 	je	.Ltmp172 # Offset: 1060
    00000426: 	movq	0x70(%rsp), %rax
    0000042b: 	leaq	0x1(%rax), %rsi
    0000042f: 	callq	_ZdlPvm@PLT # Offset: 1071
.Ltmp172:
    00000434: 	leaq	DATAat0x1a208(%rip), %rdx
    0000043b: 	movq	%r15, %rsi
    0000043e: 	movq	%r12, %rdi
    00000441: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1089
    00000446: 	callq	clock@PLT # Offset: 1094
    0000044b: 	movl	iterations(%rip), %ecx
    00000451: 	xorl	%r13d, %r13d
    00000454: 	leaq	0x1fc0(%rsp), %rbx
    0000045c: 	movq	%rax, start_time(%rip)
    00000463: 	testl	%ecx, %ecx
    00000465: 	jle	.Ltmp173 # Offset: 1125
    00000467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp176:
    00000470: 	movq	%rbp, %rax
    00000473: 	pxor	%xmm0, %xmm0
    00000477: 	nopw	(%rax,%rax) # Size: 9
.Ltmp174:
    00000480: 	paddb	(%rax), %xmm0
    00000484: 	addq	$0x10, %rax
    00000488: 	cmpq	%rbx, %rax
    0000048b: 	jne	.Ltmp174 # Offset: 1163
    0000048d: 	movdqa	%xmm0, %xmm1
    00000491: 	cvttsd2si	init_value(%rip), %edx
    00000499: 	psrldq	$0x8, %xmm1
    0000049e: 	paddb	%xmm1, %xmm0
    000004a2: 	pxor	%xmm1, %xmm1
    000004a6: 	psadbw	%xmm1, %xmm0
    000004aa: 	movd	%xmm0, %eax
    000004ae: 	shll	$0x6, %edx
    000004b1: 	cmpb	%al, %dl
    000004b3: 	je	.Ltmp175 # Offset: 1203
    000004b5: 	movl	current_test(%rip), %edx
    000004bb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000004c2: 	movl	$0x1, %edi
    000004c7: 	xorl	%eax, %eax
    000004c9: 	callq	__printf_chk@PLT # Offset: 1225
    000004ce: 	movl	iterations(%rip), %ecx
.Ltmp175:
    000004d4: 	addl	$0x1, %r13d
    000004d8: 	cmpl	%ecx, %r13d
    000004db: 	jl	.Ltmp176 # Offset: 1243
.Ltmp173:
    000004dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000004e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000004eb: 	subq	$0x20, %rax
    000004ef: 	cmpq	%rax, %rbx
    000004f2: 	je	.Ltmp177 # Offset: 1266
    000004f8: 	leaq	0x10(%rbx), %rdi
    000004fc: 	movq	0x68(%rsp), %r13
    00000501: 	movq	%rdi, (%rbx)
    00000504: 	movq	0x60(%rsp), %rax
    00000509: 	movq	%rax, %rsi
    0000050c: 	movq	%rax, 0x18(%rsp)
    00000511: 	addq	%r13, %rsi
    00000514: 	je	.Ltmp178 # Offset: 1300
    00000516: 	testq	%rax, %rax
    00000519: 	je	.Ltmp179 # Offset: 1305
.Ltmp178:
    0000051f: 	movq	%r13, 0x20(%rsp)
    00000524: 	cmpq	$0xf, %r13
    00000528: 	ja	.Ltmp180 # Offset: 1320
    0000052e: 	cmpq	$0x1, %r13
    00000532: 	jne	.Ltmp181 # Offset: 1330
    00000538: 	movq	0x18(%rsp), %rax
    0000053d: 	movzbl	(%rax), %eax
    00000540: 	movb	%al, 0x10(%rbx)
.Ltmp347:
    00000543: 	movq	%r13, 0x8(%rbx)
    00000547: 	movb	$0x0, (%rdi,%r13)
    0000054c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000553: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000055a: 	addq	$0x20, %rax
    0000055e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000565: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000056c: 	je	.Ltmp182 # Offset: 1388
.Ltmp317:
    00000572: 	movq	-0x20(%rax), %r13
    00000576: 	callq	clock@PLT # Offset: 1398
    0000057b: 	pxor	%xmm0, %xmm0
    0000057f: 	movq	%rax, end_time(%rip)
    00000586: 	movq	%r13, %rdi
    00000589: 	subq	start_time(%rip), %rax
    00000590: 	cvtsi2sd	%rax, %xmm0
    00000595: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000059d: 	callq	_Z13record_resultdPKc # Offset: 1437
    000005a2: 	movq	0x60(%rsp), %rdi
    000005a7: 	cmpq	%r14, %rdi
    000005aa: 	je	.Ltmp183 # Offset: 1450
    000005ac: 	movq	0x70(%rsp), %rax
    000005b1: 	leaq	0x1(%rax), %rsi
    000005b5: 	callq	_ZdlPvm@PLT # Offset: 1461
.Ltmp183:
    000005ba: 	leaq	DATAat0x1a215(%rip), %rdx
    000005c1: 	movq	%r15, %rsi
    000005c4: 	movq	%r12, %rdi
    000005c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1479
    000005cc: 	callq	clock@PLT # Offset: 1484
    000005d1: 	movl	iterations(%rip), %ecx
    000005d7: 	xorl	%r13d, %r13d
    000005da: 	leaq	0x1fc0(%rsp), %rbx
    000005e2: 	movq	%rax, start_time(%rip)
    000005e9: 	testl	%ecx, %ecx
    000005eb: 	jle	.Ltmp184 # Offset: 1515
    000005ed: 	nopl	(%rax) # Size: 3
.Ltmp187:
    000005f0: 	movq	%rbp, %rax
    000005f3: 	pxor	%xmm0, %xmm0
    000005f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp185:
    00000600: 	paddb	(%rax), %xmm0
    00000604: 	addq	$0x10, %rax
    00000608: 	cmpq	%rax, %rbx
    0000060b: 	jne	.Ltmp185 # Offset: 1547
    0000060d: 	movdqa	%xmm0, %xmm1
    00000611: 	cvttsd2si	init_value(%rip), %edx
    00000619: 	psrldq	$0x8, %xmm1
    0000061e: 	paddb	%xmm1, %xmm0
    00000622: 	pxor	%xmm1, %xmm1
    00000626: 	psadbw	%xmm1, %xmm0
    0000062a: 	movd	%xmm0, %eax
    0000062e: 	shll	$0x6, %edx
    00000631: 	cmpb	%al, %dl
    00000633: 	je	.Ltmp186 # Offset: 1587
    00000635: 	movl	current_test(%rip), %edx
    0000063b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000642: 	movl	$0x1, %edi
    00000647: 	xorl	%eax, %eax
    00000649: 	callq	__printf_chk@PLT # Offset: 1609
    0000064e: 	movl	iterations(%rip), %ecx
.Ltmp186:
    00000654: 	addl	$0x1, %r13d
    00000658: 	cmpl	%ecx, %r13d
    0000065b: 	jl	.Ltmp187 # Offset: 1627
.Ltmp184:
    0000065d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000664: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000066b: 	subq	$0x20, %rax
    0000066f: 	cmpq	%rax, %rbx
    00000672: 	je	.Ltmp188 # Offset: 1650
    00000678: 	leaq	0x10(%rbx), %rdi
    0000067c: 	movq	0x68(%rsp), %r13
    00000681: 	movq	%rdi, (%rbx)
    00000684: 	movq	0x60(%rsp), %rax
    00000689: 	movq	%rax, %rsi
    0000068c: 	movq	%rax, 0x18(%rsp)
    00000691: 	addq	%r13, %rsi
    00000694: 	je	.Ltmp189 # Offset: 1684
    00000696: 	testq	%rax, %rax
    00000699: 	je	.Ltmp190 # Offset: 1689
.Ltmp189:
    0000069f: 	movq	%r13, 0x20(%rsp)
    000006a4: 	cmpq	$0xf, %r13
    000006a8: 	ja	.Ltmp191 # Offset: 1704
    000006ae: 	cmpq	$0x1, %r13
    000006b2: 	jne	.Ltmp192 # Offset: 1714
    000006b8: 	movq	0x18(%rsp), %rax
    000006bd: 	movzbl	(%rax), %eax
    000006c0: 	movb	%al, 0x10(%rbx)
.Ltmp332:
    000006c3: 	movq	%r13, 0x8(%rbx)
    000006c7: 	movb	$0x0, (%rdi,%r13)
    000006cc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006d3: 	addq	$0x20, %rax
    000006d7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp328:
    000006de: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006e5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006ec: 	je	.Ltmp193 # Offset: 1772
.Ltmp327:
    000006f2: 	movq	-0x20(%rax), %r13
    000006f6: 	callq	clock@PLT # Offset: 1782
    000006fb: 	pxor	%xmm0, %xmm0
    000006ff: 	movq	%rax, end_time(%rip)
    00000706: 	movq	%r13, %rdi
    00000709: 	subq	start_time(%rip), %rax
    00000710: 	cvtsi2sd	%rax, %xmm0
    00000715: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000071d: 	callq	_Z13record_resultdPKc # Offset: 1821
    00000722: 	movq	0x60(%rsp), %rdi
    00000727: 	cmpq	%r14, %rdi
    0000072a: 	je	.Ltmp194 # Offset: 1834
    0000072c: 	movq	0x70(%rsp), %rax
    00000731: 	leaq	0x1(%rax), %rsi
    00000735: 	callq	_ZdlPvm@PLT # Offset: 1845
.Ltmp194:
    0000073a: 	leaq	DATAat0x1a226(%rip), %rdx
    00000741: 	movq	%r15, %rsi
    00000744: 	movq	%r12, %rdi
    00000747: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1863
    0000074c: 	callq	clock@PLT # Offset: 1868
    00000751: 	movl	iterations(%rip), %ecx
    00000757: 	xorl	%r13d, %r13d
    0000075a: 	leaq	0x1fc0(%rsp), %rbx
    00000762: 	movq	%rax, start_time(%rip)
    00000769: 	testl	%ecx, %ecx
    0000076b: 	jle	.Ltmp195 # Offset: 1899
    0000076d: 	nopl	(%rax) # Size: 3
.Ltmp198:
    00000770: 	movq	%rbp, %rax
    00000773: 	pxor	%xmm0, %xmm0
    00000777: 	nopw	(%rax,%rax) # Size: 9
.Ltmp196:
    00000780: 	paddb	(%rax), %xmm0
    00000784: 	addq	$0x10, %rax
    00000788: 	cmpq	%rbx, %rax
    0000078b: 	jne	.Ltmp196 # Offset: 1931
    0000078d: 	movdqa	%xmm0, %xmm1
    00000791: 	cvttsd2si	init_value(%rip), %edx
    00000799: 	psrldq	$0x8, %xmm1
    0000079e: 	paddb	%xmm1, %xmm0
    000007a2: 	pxor	%xmm1, %xmm1
    000007a6: 	psadbw	%xmm1, %xmm0
    000007aa: 	movd	%xmm0, %eax
    000007ae: 	shll	$0x6, %edx
    000007b1: 	cmpb	%al, %dl
    000007b3: 	je	.Ltmp197 # Offset: 1971
    000007b5: 	movl	current_test(%rip), %edx
    000007bb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000007c2: 	movl	$0x1, %edi
    000007c7: 	xorl	%eax, %eax
    000007c9: 	callq	__printf_chk@PLT # Offset: 1993
    000007ce: 	movl	iterations(%rip), %ecx
.Ltmp197:
    000007d4: 	addl	$0x1, %r13d
    000007d8: 	cmpl	%ecx, %r13d
    000007db: 	jl	.Ltmp198 # Offset: 2011
.Ltmp195:
    000007dd: 	movq	%r12, %rdi
    000007e0: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2016
    000007e5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007ec: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007f3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007fa: 	je	.Ltmp199 # Offset: 2042
.Ltmp326:
    00000800: 	movq	-0x20(%rax), %r13
    00000804: 	callq	clock@PLT # Offset: 2052
    00000809: 	pxor	%xmm0, %xmm0
    0000080d: 	movq	%rax, end_time(%rip)
    00000814: 	movq	%r13, %rdi
    00000817: 	subq	start_time(%rip), %rax
    0000081e: 	cvtsi2sd	%rax, %xmm0
    00000823: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000082b: 	callq	_Z13record_resultdPKc # Offset: 2091
    00000830: 	movq	0x60(%rsp), %rdi
    00000835: 	cmpq	%r14, %rdi
    00000838: 	je	.Ltmp200 # Offset: 2104
    0000083a: 	movq	0x70(%rsp), %rax
    0000083f: 	leaq	0x1(%rax), %rsi
    00000843: 	callq	_ZdlPvm@PLT # Offset: 2115
.Ltmp200:
    00000848: 	leaq	DATAat0x1a238(%rip), %rdx
    0000084f: 	movq	%r15, %rsi
    00000852: 	movq	%r12, %rdi
    00000855: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2133
    0000085a: 	callq	clock@PLT # Offset: 2138
    0000085f: 	movl	iterations(%rip), %ecx
    00000865: 	xorl	%r13d, %r13d
    00000868: 	leaq	0x1fc0(%rsp), %rbx
    00000870: 	movq	%rax, start_time(%rip)
    00000877: 	testl	%ecx, %ecx
    00000879: 	jle	.Ltmp201 # Offset: 2169
    0000087b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp204:
    00000880: 	movq	%rbp, %rax
    00000883: 	pxor	%xmm0, %xmm0
    00000887: 	nopw	(%rax,%rax) # Size: 9
.Ltmp202:
    00000890: 	paddb	(%rax), %xmm0
    00000894: 	addq	$0x10, %rax
    00000898: 	cmpq	%rbx, %rax
    0000089b: 	jne	.Ltmp202 # Offset: 2203
    0000089d: 	movdqa	%xmm0, %xmm1
    000008a1: 	cvttsd2si	init_value(%rip), %edx
    000008a9: 	psrldq	$0x8, %xmm1
    000008ae: 	paddb	%xmm1, %xmm0
    000008b2: 	pxor	%xmm1, %xmm1
    000008b6: 	psadbw	%xmm1, %xmm0
    000008ba: 	movd	%xmm0, %eax
    000008be: 	shll	$0x6, %edx
    000008c1: 	cmpb	%al, %dl
    000008c3: 	je	.Ltmp203 # Offset: 2243
    000008c5: 	movl	current_test(%rip), %edx
    000008cb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000008d2: 	movl	$0x1, %edi
    000008d7: 	xorl	%eax, %eax
    000008d9: 	callq	__printf_chk@PLT # Offset: 2265
    000008de: 	movl	iterations(%rip), %ecx
.Ltmp203:
    000008e4: 	addl	$0x1, %r13d
    000008e8: 	cmpl	%ecx, %r13d
    000008eb: 	jl	.Ltmp204 # Offset: 2283
.Ltmp201:
    000008ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000008fb: 	subq	$0x20, %rax
    000008ff: 	cmpq	%rax, %rbx
    00000902: 	je	.Ltmp205 # Offset: 2306
    00000908: 	leaq	0x10(%rbx), %rdi
    0000090c: 	movq	0x68(%rsp), %r13
    00000911: 	movq	%rdi, (%rbx)
    00000914: 	movq	0x60(%rsp), %rax
    00000919: 	movq	%rax, %rsi
    0000091c: 	movq	%rax, 0x18(%rsp)
    00000921: 	addq	%r13, %rsi
    00000924: 	je	.Ltmp206 # Offset: 2340
    00000926: 	testq	%rax, %rax
    00000929: 	je	.Ltmp207 # Offset: 2345
.Ltmp206:
    0000092f: 	movq	%r13, 0x20(%rsp)
    00000934: 	cmpq	$0xf, %r13
    00000938: 	ja	.Ltmp208 # Offset: 2360
    0000093e: 	cmpq	$0x1, %r13
    00000942: 	jne	.Ltmp209 # Offset: 2370
    00000948: 	movq	0x18(%rsp), %rax
    0000094d: 	movzbl	(%rax), %eax
    00000950: 	movb	%al, 0x10(%rbx)
.Ltmp330:
    00000953: 	movq	%r13, 0x8(%rbx)
    00000957: 	movb	$0x0, (%rdi,%r13)
    0000095c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000963: 	addq	$0x20, %rax
    00000967: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp325:
    0000096e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000975: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000097c: 	je	.Ltmp210 # Offset: 2428
.Ltmp324:
    00000982: 	movq	-0x20(%rax), %r13
    00000986: 	callq	clock@PLT # Offset: 2438
    0000098b: 	pxor	%xmm0, %xmm0
    0000098f: 	movq	%rax, end_time(%rip)
    00000996: 	movq	%r13, %rdi
    00000999: 	subq	start_time(%rip), %rax
    000009a0: 	cvtsi2sd	%rax, %xmm0
    000009a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000009ad: 	callq	_Z13record_resultdPKc # Offset: 2477
    000009b2: 	movq	0x60(%rsp), %rdi
    000009b7: 	cmpq	%r14, %rdi
    000009ba: 	je	.Ltmp211 # Offset: 2490
    000009bc: 	movq	0x70(%rsp), %rax
    000009c1: 	leaq	0x1(%rax), %rsi
    000009c5: 	callq	_ZdlPvm@PLT # Offset: 2501
.Ltmp211:
    000009ca: 	leaq	DATAat0x1a24a(%rip), %rdx
    000009d1: 	movq	%r15, %rsi
    000009d4: 	movq	%r12, %rdi
    000009d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2519
    000009dc: 	callq	clock@PLT # Offset: 2524
    000009e1: 	movl	iterations(%rip), %ecx
    000009e7: 	xorl	%r13d, %r13d
    000009ea: 	leaq	0x1fc0(%rsp), %rbx
    000009f2: 	movq	%rax, start_time(%rip)
    000009f9: 	testl	%ecx, %ecx
    000009fb: 	jle	.Ltmp212 # Offset: 2555
    000009fd: 	nopl	(%rax) # Size: 3
.Ltmp215:
    00000a00: 	movq	%rbp, %rax
    00000a03: 	pxor	%xmm0, %xmm0
    00000a07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp213:
    00000a10: 	paddb	(%rax), %xmm0
    00000a14: 	addq	$0x10, %rax
    00000a18: 	cmpq	%rax, %rbx
    00000a1b: 	jne	.Ltmp213 # Offset: 2587
    00000a1d: 	movdqa	%xmm0, %xmm1
    00000a21: 	cvttsd2si	init_value(%rip), %edx
    00000a29: 	psrldq	$0x8, %xmm1
    00000a2e: 	paddb	%xmm1, %xmm0
    00000a32: 	pxor	%xmm1, %xmm1
    00000a36: 	psadbw	%xmm1, %xmm0
    00000a3a: 	movd	%xmm0, %eax
    00000a3e: 	shll	$0x6, %edx
    00000a41: 	cmpb	%al, %dl
    00000a43: 	je	.Ltmp214 # Offset: 2627
    00000a45: 	movl	current_test(%rip), %edx
    00000a4b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000a52: 	movl	$0x1, %edi
    00000a57: 	xorl	%eax, %eax
    00000a59: 	callq	__printf_chk@PLT # Offset: 2649
    00000a5e: 	movl	iterations(%rip), %ecx
.Ltmp214:
    00000a64: 	addl	$0x1, %r13d
    00000a68: 	cmpl	%ecx, %r13d
    00000a6b: 	jl	.Ltmp215 # Offset: 2667
.Ltmp212:
    00000a6d: 	movq	%r12, %rdi
    00000a70: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2672
    00000a75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a7c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a83: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a8a: 	je	.Ltmp216 # Offset: 2698
.Ltmp323:
    00000a90: 	movq	-0x20(%rax), %r13
    00000a94: 	callq	clock@PLT # Offset: 2708
    00000a99: 	pxor	%xmm0, %xmm0
    00000a9d: 	movq	%rax, end_time(%rip)
    00000aa4: 	movq	%r13, %rdi
    00000aa7: 	subq	start_time(%rip), %rax
    00000aae: 	cvtsi2sd	%rax, %xmm0
    00000ab3: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000abb: 	callq	_Z13record_resultdPKc # Offset: 2747
    00000ac0: 	movq	0x60(%rsp), %rdi
    00000ac5: 	cmpq	%r14, %rdi
    00000ac8: 	je	.Ltmp217 # Offset: 2760
    00000aca: 	movq	0x70(%rsp), %rax
    00000acf: 	leaq	0x1(%rax), %rsi
    00000ad3: 	callq	_ZdlPvm@PLT # Offset: 2771
.Ltmp217:
    00000ad8: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000adf: 	movq	%r15, %rsi
    00000ae2: 	movq	%r12, %rdi
    00000ae5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2789
    00000aea: 	callq	clock@PLT # Offset: 2794
    00000aef: 	movl	iterations(%rip), %ecx
    00000af5: 	xorl	%r13d, %r13d
    00000af8: 	leaq	0x1fc0(%rsp), %rbx
    00000b00: 	movq	%rax, start_time(%rip)
    00000b07: 	testl	%ecx, %ecx
    00000b09: 	jle	.Ltmp218 # Offset: 2825
    00000b0b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp221:
    00000b10: 	movq	%rbp, %rax
    00000b13: 	pxor	%xmm0, %xmm0
    00000b17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp219:
    00000b20: 	paddb	(%rax), %xmm0
    00000b24: 	addq	$0x10, %rax
    00000b28: 	cmpq	%rbx, %rax
    00000b2b: 	jne	.Ltmp219 # Offset: 2859
    00000b2d: 	movdqa	%xmm0, %xmm1
    00000b31: 	cvttsd2si	init_value(%rip), %edx
    00000b39: 	psrldq	$0x8, %xmm1
    00000b3e: 	paddb	%xmm1, %xmm0
    00000b42: 	pxor	%xmm1, %xmm1
    00000b46: 	psadbw	%xmm1, %xmm0
    00000b4a: 	movd	%xmm0, %eax
    00000b4e: 	shll	$0x6, %edx
    00000b51: 	cmpb	%al, %dl
    00000b53: 	je	.Ltmp220 # Offset: 2899
    00000b55: 	movl	current_test(%rip), %edx
    00000b5b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000b62: 	movl	$0x1, %edi
    00000b67: 	xorl	%eax, %eax
    00000b69: 	callq	__printf_chk@PLT # Offset: 2921
    00000b6e: 	movl	iterations(%rip), %ecx
.Ltmp220:
    00000b74: 	addl	$0x1, %r13d
    00000b78: 	cmpl	%ecx, %r13d
    00000b7b: 	jl	.Ltmp221 # Offset: 2939
.Ltmp218:
    00000b7d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b84: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000b8b: 	subq	$0x20, %rax
    00000b8f: 	cmpq	%rax, %rbx
    00000b92: 	je	.Ltmp222 # Offset: 2962
    00000b98: 	leaq	0x10(%rbx), %rdi
    00000b9c: 	movq	0x68(%rsp), %r13
    00000ba1: 	movq	%rdi, (%rbx)
    00000ba4: 	movq	0x60(%rsp), %rax
    00000ba9: 	movq	%rax, %rsi
    00000bac: 	movq	%rax, 0x18(%rsp)
    00000bb1: 	addq	%r13, %rsi
    00000bb4: 	je	.Ltmp223 # Offset: 2996
    00000bb6: 	testq	%rax, %rax
    00000bb9: 	je	.Ltmp224 # Offset: 3001
.Ltmp223:
    00000bbf: 	movq	%r13, 0x20(%rsp)
    00000bc4: 	cmpq	$0xf, %r13
    00000bc8: 	ja	.Ltmp225 # Offset: 3016
    00000bce: 	cmpq	$0x1, %r13
    00000bd2: 	jne	.Ltmp226 # Offset: 3026
    00000bd8: 	movq	0x18(%rsp), %rax
    00000bdd: 	movzbl	(%rax), %eax
    00000be0: 	movb	%al, 0x10(%rbx)
.Ltmp336:
    00000be3: 	movq	%r13, 0x8(%rbx)
    00000be7: 	movb	$0x0, (%rdi,%r13)
    00000bec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bf3: 	addq	$0x20, %rax
    00000bf7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp322:
    00000bfe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c0c: 	je	.Ltmp227 # Offset: 3084
.Ltmp321:
    00000c12: 	movq	-0x20(%rax), %r13
    00000c16: 	callq	clock@PLT # Offset: 3094
    00000c1b: 	pxor	%xmm0, %xmm0
    00000c1f: 	movq	%rax, end_time(%rip)
    00000c26: 	movq	%r13, %rdi
    00000c29: 	subq	start_time(%rip), %rax
    00000c30: 	cvtsi2sd	%rax, %xmm0
    00000c35: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000c3d: 	callq	_Z13record_resultdPKc # Offset: 3133
    00000c42: 	movq	0x60(%rsp), %rdi
    00000c47: 	cmpq	%r14, %rdi
    00000c4a: 	je	.Ltmp228 # Offset: 3146
    00000c4c: 	movq	0x70(%rsp), %rax
    00000c51: 	leaq	0x1(%rax), %rsi
    00000c55: 	callq	_ZdlPvm@PLT # Offset: 3157
.Ltmp228:
    00000c5a: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000c61: 	movq	%r15, %rsi
    00000c64: 	movq	%r12, %rdi
    00000c67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3175
    00000c6c: 	callq	clock@PLT # Offset: 3180
    00000c71: 	movl	iterations(%rip), %ecx
    00000c77: 	xorl	%r13d, %r13d
    00000c7a: 	leaq	0x1fc0(%rsp), %rbx
    00000c82: 	movq	%rax, start_time(%rip)
    00000c89: 	testl	%ecx, %ecx
    00000c8b: 	jle	.Ltmp229 # Offset: 3211
    00000c8d: 	nopl	(%rax) # Size: 3
.Ltmp232:
    00000c90: 	movq	%rbp, %rax
    00000c93: 	pxor	%xmm0, %xmm0
    00000c97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp230:
    00000ca0: 	paddb	(%rax), %xmm0
    00000ca4: 	addq	$0x10, %rax
    00000ca8: 	cmpq	%rax, %rbx
    00000cab: 	jne	.Ltmp230 # Offset: 3243
    00000cad: 	movdqa	%xmm0, %xmm1
    00000cb1: 	cvttsd2si	init_value(%rip), %edx
    00000cb9: 	psrldq	$0x8, %xmm1
    00000cbe: 	paddb	%xmm1, %xmm0
    00000cc2: 	pxor	%xmm1, %xmm1
    00000cc6: 	psadbw	%xmm1, %xmm0
    00000cca: 	movd	%xmm0, %eax
    00000cce: 	shll	$0x6, %edx
    00000cd1: 	cmpb	%al, %dl
    00000cd3: 	je	.Ltmp231 # Offset: 3283
    00000cd5: 	movl	current_test(%rip), %edx
    00000cdb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000ce2: 	movl	$0x1, %edi
    00000ce7: 	xorl	%eax, %eax
    00000ce9: 	callq	__printf_chk@PLT # Offset: 3305
    00000cee: 	movl	iterations(%rip), %ecx
.Ltmp231:
    00000cf4: 	addl	$0x1, %r13d
    00000cf8: 	cmpl	%ecx, %r13d
    00000cfb: 	jl	.Ltmp232 # Offset: 3323
.Ltmp229:
    00000cfd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000d04: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000d0b: 	subq	$0x20, %rax
    00000d0f: 	cmpq	%rax, %rbx
    00000d12: 	je	.Ltmp233 # Offset: 3346
    00000d18: 	leaq	0x10(%rbx), %rdi
    00000d1c: 	movq	0x68(%rsp), %r13
    00000d21: 	movq	%rdi, (%rbx)
    00000d24: 	movq	0x60(%rsp), %rax
    00000d29: 	movq	%rax, %rsi
    00000d2c: 	movq	%rax, 0x18(%rsp)
    00000d31: 	addq	%r13, %rsi
    00000d34: 	je	.Ltmp234 # Offset: 3380
    00000d36: 	testq	%rax, %rax
    00000d39: 	je	.Ltmp235 # Offset: 3385
.Ltmp234:
    00000d3f: 	movq	%r13, 0x20(%rsp)
    00000d44: 	cmpq	$0xf, %r13
    00000d48: 	ja	.Ltmp236 # Offset: 3400
    00000d4e: 	cmpq	$0x1, %r13
    00000d52: 	jne	.Ltmp237 # Offset: 3410
    00000d58: 	movq	0x18(%rsp), %rax
    00000d5d: 	movzbl	(%rax), %eax
    00000d60: 	movb	%al, 0x10(%rbx)
.Ltmp338:
    00000d63: 	movq	%r13, 0x8(%rbx)
    00000d67: 	movb	$0x0, (%rdi,%r13)
    00000d6c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d73: 	addq	$0x20, %rax
    00000d77: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp320:
    00000d7e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d85: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d8c: 	je	.Ltmp238 # Offset: 3468
.Ltmp313:
    00000d92: 	movq	-0x20(%rax), %r13
    00000d96: 	callq	clock@PLT # Offset: 3478
    00000d9b: 	pxor	%xmm0, %xmm0
    00000d9f: 	movq	%rax, end_time(%rip)
    00000da6: 	movq	%r13, %rdi
    00000da9: 	subq	start_time(%rip), %rax
    00000db0: 	cvtsi2sd	%rax, %xmm0
    00000db5: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000dbd: 	callq	_Z13record_resultdPKc # Offset: 3517
    00000dc2: 	movq	0x60(%rsp), %rdi
    00000dc7: 	cmpq	%r14, %rdi
    00000dca: 	je	.Ltmp239 # Offset: 3530
    00000dcc: 	movq	0x70(%rsp), %rax
    00000dd1: 	leaq	0x1(%rax), %rsi
    00000dd5: 	callq	_ZdlPvm@PLT # Offset: 3541
.Ltmp239:
    00000dda: 	leaq	DATAat0x1a27b(%rip), %rdx
    00000de1: 	movq	%r15, %rsi
    00000de4: 	movq	%r12, %rdi
    00000de7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3559
    00000dec: 	callq	clock@PLT # Offset: 3564
    00000df1: 	movl	iterations(%rip), %ecx
    00000df7: 	xorl	%r13d, %r13d
    00000dfa: 	leaq	0x1fc0(%rsp), %rbx
    00000e02: 	movq	%rax, start_time(%rip)
    00000e09: 	testl	%ecx, %ecx
    00000e0b: 	jle	.Ltmp240 # Offset: 3595
    00000e0d: 	nopl	(%rax) # Size: 3
.Ltmp243:
    00000e10: 	movq	%rbp, %rax
    00000e13: 	pxor	%xmm0, %xmm0
    00000e17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp241:
    00000e20: 	paddb	(%rax), %xmm0
    00000e24: 	addq	$0x10, %rax
    00000e28: 	cmpq	%rbx, %rax
    00000e2b: 	jne	.Ltmp241 # Offset: 3627
    00000e2d: 	movdqa	%xmm0, %xmm1
    00000e31: 	cvttsd2si	init_value(%rip), %edx
    00000e39: 	psrldq	$0x8, %xmm1
    00000e3e: 	paddb	%xmm1, %xmm0
    00000e42: 	pxor	%xmm1, %xmm1
    00000e46: 	psadbw	%xmm1, %xmm0
    00000e4a: 	movd	%xmm0, %eax
    00000e4e: 	shll	$0x6, %edx
    00000e51: 	cmpb	%al, %dl
    00000e53: 	je	.Ltmp242 # Offset: 3667
    00000e55: 	movl	current_test(%rip), %edx
    00000e5b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000e62: 	movl	$0x1, %edi
    00000e67: 	xorl	%eax, %eax
    00000e69: 	callq	__printf_chk@PLT # Offset: 3689
    00000e6e: 	movl	iterations(%rip), %ecx
.Ltmp242:
    00000e74: 	addl	$0x1, %r13d
    00000e78: 	cmpl	%ecx, %r13d
    00000e7b: 	jl	.Ltmp243 # Offset: 3707
.Ltmp240:
    00000e7d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e84: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e8b: 	subq	$0x20, %rax
    00000e8f: 	cmpq	%rax, %rbx
    00000e92: 	je	.Ltmp244 # Offset: 3730
    00000e98: 	leaq	0x10(%rbx), %rdi
    00000e9c: 	movq	0x68(%rsp), %r13
    00000ea1: 	movq	%rdi, (%rbx)
    00000ea4: 	movq	0x60(%rsp), %rax
    00000ea9: 	movq	%rax, %rsi
    00000eac: 	movq	%rax, 0x18(%rsp)
    00000eb1: 	addq	%r13, %rsi
    00000eb4: 	je	.Ltmp245 # Offset: 3764
    00000eb6: 	testq	%rax, %rax
    00000eb9: 	je	.Ltmp246 # Offset: 3769
.Ltmp245:
    00000ebf: 	movq	%r13, 0x20(%rsp)
    00000ec4: 	cmpq	$0xf, %r13
    00000ec8: 	ja	.Ltmp247 # Offset: 3784
    00000ece: 	cmpq	$0x1, %r13
    00000ed2: 	jne	.Ltmp248 # Offset: 3794
    00000ed8: 	movq	0x18(%rsp), %rax
    00000edd: 	movzbl	(%rax), %eax
    00000ee0: 	movb	%al, 0x10(%rbx)
.Ltmp345:
    00000ee3: 	movq	%r13, 0x8(%rbx)
    00000ee7: 	movb	$0x0, (%rdi,%r13)
    00000eec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ef3: 	addq	$0x20, %rax
    00000ef7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp312:
    00000efe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f0c: 	je	.Ltmp249 # Offset: 3852
.Ltmp311:
    00000f12: 	movq	-0x20(%rax), %r13
    00000f16: 	callq	clock@PLT # Offset: 3862
    00000f1b: 	pxor	%xmm0, %xmm0
    00000f1f: 	movq	%rax, end_time(%rip)
    00000f26: 	movq	%r13, %rdi
    00000f29: 	subq	start_time(%rip), %rax
    00000f30: 	cvtsi2sd	%rax, %xmm0
    00000f35: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000f3d: 	callq	_Z13record_resultdPKc # Offset: 3901
    00000f42: 	movq	0x60(%rsp), %rdi
    00000f47: 	cmpq	%r14, %rdi
    00000f4a: 	je	.Ltmp250 # Offset: 3914
    00000f4c: 	movq	0x70(%rsp), %rax
    00000f51: 	leaq	0x1(%rax), %rsi
    00000f55: 	callq	_ZdlPvm@PLT # Offset: 3925
.Ltmp250:
    00000f5a: 	leaq	DATAat0x1a28b(%rip), %rdx
    00000f61: 	movq	%r15, %rsi
    00000f64: 	movq	%r12, %rdi
    00000f67: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3943
    00000f6c: 	callq	clock@PLT # Offset: 3948
    00000f71: 	movl	iterations(%rip), %ecx
    00000f77: 	xorl	%r13d, %r13d
    00000f7a: 	leaq	0x1fc0(%rsp), %rbx
    00000f82: 	movq	%rax, start_time(%rip)
    00000f89: 	testl	%ecx, %ecx
    00000f8b: 	jle	.Ltmp251 # Offset: 3979
    00000f8d: 	nopl	(%rax) # Size: 3
.Ltmp254:
    00000f90: 	movq	%rbp, %rax
    00000f93: 	pxor	%xmm0, %xmm0
    00000f97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp252:
    00000fa0: 	paddb	(%rax), %xmm0
    00000fa4: 	addq	$0x10, %rax
    00000fa8: 	cmpq	%rbx, %rax
    00000fab: 	jne	.Ltmp252 # Offset: 4011
    00000fad: 	movdqa	%xmm0, %xmm1
    00000fb1: 	cvttsd2si	init_value(%rip), %edx
    00000fb9: 	psrldq	$0x8, %xmm1
    00000fbe: 	paddb	%xmm1, %xmm0
    00000fc2: 	pxor	%xmm1, %xmm1
    00000fc6: 	psadbw	%xmm1, %xmm0
    00000fca: 	movd	%xmm0, %eax
    00000fce: 	shll	$0x6, %edx
    00000fd1: 	cmpb	%al, %dl
    00000fd3: 	je	.Ltmp253 # Offset: 4051
    00000fd5: 	movl	current_test(%rip), %edx
    00000fdb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000fe2: 	movl	$0x1, %edi
    00000fe7: 	xorl	%eax, %eax
    00000fe9: 	callq	__printf_chk@PLT # Offset: 4073
    00000fee: 	movl	iterations(%rip), %ecx
.Ltmp253:
    00000ff4: 	addl	$0x1, %r13d
    00000ff8: 	cmpl	%ecx, %r13d
    00000ffb: 	jl	.Ltmp254 # Offset: 4091
.Ltmp251:
    00000ffd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001004: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000100b: 	subq	$0x20, %rax
    0000100f: 	cmpq	%rax, %rbx
    00001012: 	je	.Ltmp255 # Offset: 4114
    00001018: 	leaq	0x10(%rbx), %rdi
    0000101c: 	movq	0x68(%rsp), %r13
    00001021: 	movq	%rdi, (%rbx)
    00001024: 	movq	0x60(%rsp), %rax
    00001029: 	movq	%rax, %rsi
    0000102c: 	movq	%rax, 0x18(%rsp)
    00001031: 	addq	%r13, %rsi
    00001034: 	je	.Ltmp256 # Offset: 4148
    00001036: 	testq	%rax, %rax
    00001039: 	je	.Ltmp257 # Offset: 4153
.Ltmp256:
    0000103f: 	movq	%r13, 0x20(%rsp)
    00001044: 	cmpq	$0xf, %r13
    00001048: 	ja	.Ltmp258 # Offset: 4168
    0000104e: 	cmpq	$0x1, %r13
    00001052: 	jne	.Ltmp259 # Offset: 4178
    00001058: 	movq	0x18(%rsp), %rax
    0000105d: 	movzbl	(%rax), %eax
    00001060: 	movb	%al, 0x10(%rbx)
.Ltmp342:
    00001063: 	movq	%r13, 0x8(%rbx)
    00001067: 	movb	$0x0, (%rdi,%r13)
    0000106c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001073: 	addq	$0x20, %rax
    00001077: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp310:
    0000107e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001085: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000108c: 	je	.Ltmp260 # Offset: 4236
.Ltmp309:
    00001092: 	movq	-0x20(%rax), %r13
    00001096: 	callq	clock@PLT # Offset: 4246
    0000109b: 	pxor	%xmm0, %xmm0
    0000109f: 	movq	%rax, end_time(%rip)
    000010a6: 	movq	%r13, %rdi
    000010a9: 	subq	start_time(%rip), %rax
    000010b0: 	cvtsi2sd	%rax, %xmm0
    000010b5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010bd: 	callq	_Z13record_resultdPKc # Offset: 4285
    000010c2: 	movq	0x60(%rsp), %rdi
    000010c7: 	cmpq	%r14, %rdi
    000010ca: 	je	.Ltmp261 # Offset: 4298
    000010cc: 	movq	0x70(%rsp), %rax
    000010d1: 	leaq	0x1(%rax), %rsi
    000010d5: 	callq	_ZdlPvm@PLT # Offset: 4309
.Ltmp261:
    000010da: 	leaq	DATAat0x1a29b(%rip), %rdx
    000010e1: 	movq	%r15, %rsi
    000010e4: 	movq	%r12, %rdi
    000010e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4327
    000010ec: 	callq	clock@PLT # Offset: 4332
    000010f1: 	movl	iterations(%rip), %ecx
    000010f7: 	xorl	%r13d, %r13d
    000010fa: 	leaq	0x1fc0(%rsp), %rbx
    00001102: 	movq	%rax, start_time(%rip)
    00001109: 	testl	%ecx, %ecx
    0000110b: 	jle	.Ltmp262 # Offset: 4363
    0000110d: 	nopl	(%rax) # Size: 3
.Ltmp265:
    00001110: 	movq	%rbp, %rax
    00001113: 	pxor	%xmm0, %xmm0
    00001117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp263:
    00001120: 	paddb	(%rax), %xmm0
    00001124: 	addq	$0x10, %rax
    00001128: 	cmpq	%rax, %rbx
    0000112b: 	jne	.Ltmp263 # Offset: 4395
    0000112d: 	movdqa	%xmm0, %xmm1
    00001131: 	cvttsd2si	init_value(%rip), %edx
    00001139: 	psrldq	$0x8, %xmm1
    0000113e: 	paddb	%xmm1, %xmm0
    00001142: 	pxor	%xmm1, %xmm1
    00001146: 	psadbw	%xmm1, %xmm0
    0000114a: 	movd	%xmm0, %eax
    0000114e: 	shll	$0x6, %edx
    00001151: 	cmpb	%al, %dl
    00001153: 	je	.Ltmp264 # Offset: 4435
    00001155: 	movl	current_test(%rip), %edx
    0000115b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001162: 	movl	$0x1, %edi
    00001167: 	xorl	%eax, %eax
    00001169: 	callq	__printf_chk@PLT # Offset: 4457
    0000116e: 	movl	iterations(%rip), %ecx
.Ltmp264:
    00001174: 	addl	$0x1, %r13d
    00001178: 	cmpl	%ecx, %r13d
    0000117b: 	jl	.Ltmp265 # Offset: 4475
.Ltmp262:
    0000117d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001184: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000118b: 	subq	$0x20, %rax
    0000118f: 	cmpq	%rax, %rbx
    00001192: 	je	.Ltmp266 # Offset: 4498
    00001198: 	leaq	0x10(%rbx), %rdi
    0000119c: 	movq	0x68(%rsp), %r13
    000011a1: 	movq	%rdi, (%rbx)
    000011a4: 	movq	0x60(%rsp), %rax
    000011a9: 	movq	%rax, %rsi
    000011ac: 	movq	%rax, 0x18(%rsp)
    000011b1: 	addq	%r13, %rsi
    000011b4: 	je	.Ltmp267 # Offset: 4532
    000011b6: 	testq	%rax, %rax
    000011b9: 	je	.Ltmp268 # Offset: 4537
.Ltmp267:
    000011bf: 	movq	%r13, 0x20(%rsp)
    000011c4: 	cmpq	$0xf, %r13
    000011c8: 	ja	.Ltmp269 # Offset: 4552
    000011ce: 	cmpq	$0x1, %r13
    000011d2: 	jne	.Ltmp270 # Offset: 4562
    000011d8: 	movq	0x18(%rsp), %rax
    000011dd: 	movzbl	(%rax), %eax
    000011e0: 	movb	%al, 0x10(%rbx)
.Ltmp339:
    000011e3: 	movq	%r13, 0x8(%rbx)
    000011e7: 	movb	$0x0, (%rdi,%r13)
    000011ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011f3: 	addq	$0x20, %rax
    000011f7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp308:
    000011fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001205: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000120c: 	je	.Ltmp271 # Offset: 4620
.Ltmp307:
    00001212: 	movq	-0x20(%rax), %r13
    00001216: 	callq	clock@PLT # Offset: 4630
    0000121b: 	pxor	%xmm0, %xmm0
    0000121f: 	movq	%rax, end_time(%rip)
    00001226: 	movq	%r13, %rdi
    00001229: 	subq	start_time(%rip), %rax
    00001230: 	cvtsi2sd	%rax, %xmm0
    00001235: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000123d: 	callq	_Z13record_resultdPKc # Offset: 4669
    00001242: 	movq	0x60(%rsp), %rdi
    00001247: 	cmpq	%r14, %rdi
    0000124a: 	je	.Ltmp272 # Offset: 4682
    0000124c: 	movq	0x70(%rsp), %rax
    00001251: 	leaq	0x1(%rax), %rsi
    00001255: 	callq	_ZdlPvm@PLT # Offset: 4693
.Ltmp272:
    0000125a: 	leaq	DATAat0x1a2af(%rip), %rdx
    00001261: 	movq	%r15, %rsi
    00001264: 	movq	%r12, %rdi
    00001267: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4711
    0000126c: 	callq	clock@PLT # Offset: 4716
    00001271: 	movl	iterations(%rip), %ecx
    00001277: 	xorl	%r13d, %r13d
    0000127a: 	leaq	0x1fc0(%rsp), %rbx
    00001282: 	movq	%rax, start_time(%rip)
    00001289: 	testl	%ecx, %ecx
    0000128b: 	jle	.Ltmp273 # Offset: 4747
    0000128d: 	nopl	(%rax) # Size: 3
.Ltmp276:
    00001290: 	movq	%rbp, %rax
    00001293: 	pxor	%xmm0, %xmm0
    00001297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp274:
    000012a0: 	paddb	(%rax), %xmm0
    000012a4: 	addq	$0x10, %rax
    000012a8: 	cmpq	%rbx, %rax
    000012ab: 	jne	.Ltmp274 # Offset: 4779
    000012ad: 	movdqa	%xmm0, %xmm1
    000012b1: 	cvttsd2si	init_value(%rip), %edx
    000012b9: 	psrldq	$0x8, %xmm1
    000012be: 	paddb	%xmm1, %xmm0
    000012c2: 	pxor	%xmm1, %xmm1
    000012c6: 	psadbw	%xmm1, %xmm0
    000012ca: 	movd	%xmm0, %eax
    000012ce: 	shll	$0x6, %edx
    000012d1: 	cmpb	%al, %dl
    000012d3: 	je	.Ltmp275 # Offset: 4819
    000012d5: 	movl	current_test(%rip), %edx
    000012db: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000012e2: 	movl	$0x1, %edi
    000012e7: 	xorl	%eax, %eax
    000012e9: 	callq	__printf_chk@PLT # Offset: 4841
    000012ee: 	movl	iterations(%rip), %ecx
.Ltmp275:
    000012f4: 	addl	$0x1, %r13d
    000012f8: 	cmpl	%ecx, %r13d
    000012fb: 	jl	.Ltmp276 # Offset: 4859
.Ltmp273:
    000012fd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001304: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000130b: 	subq	$0x20, %rax
    0000130f: 	cmpq	%rax, %rbx
    00001312: 	je	.Ltmp277 # Offset: 4882
    00001318: 	leaq	0x10(%rbx), %rdi
    0000131c: 	movq	0x68(%rsp), %r13
    00001321: 	movq	%rdi, (%rbx)
    00001324: 	movq	0x60(%rsp), %rax
    00001329: 	movq	%rax, %rsi
    0000132c: 	movq	%rax, 0x18(%rsp)
    00001331: 	addq	%r13, %rsi
    00001334: 	je	.Ltmp278 # Offset: 4916
    00001336: 	testq	%rax, %rax
    00001339: 	je	.Ltmp279 # Offset: 4921
.Ltmp278:
    0000133f: 	movq	%r13, 0x20(%rsp)
    00001344: 	cmpq	$0xf, %r13
    00001348: 	ja	.Ltmp280 # Offset: 4936
    0000134e: 	cmpq	$0x1, %r13
    00001352: 	jne	.Ltmp281 # Offset: 4946
    00001358: 	movq	0x18(%rsp), %rax
    0000135d: 	movzbl	(%rax), %eax
    00001360: 	movb	%al, 0x10(%rbx)
.Ltmp341:
    00001363: 	movq	%r13, 0x8(%rbx)
    00001367: 	movb	$0x0, (%rdi,%r13)
    0000136c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001373: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000137a: 	addq	$0x20, %rax
    0000137e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001385: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000138c: 	je	.Ltmp282 # Offset: 5004
.Ltmp306:
    00001392: 	movq	-0x20(%rax), %r13
    00001396: 	callq	clock@PLT # Offset: 5014
    0000139b: 	pxor	%xmm0, %xmm0
    0000139f: 	movq	%rax, end_time(%rip)
    000013a6: 	movq	%r13, %rdi
    000013a9: 	subq	start_time(%rip), %rax
    000013b0: 	cvtsi2sd	%rax, %xmm0
    000013b5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000013bd: 	callq	_Z13record_resultdPKc # Offset: 5053
    000013c2: 	movq	0x60(%rsp), %rdi
    000013c7: 	cmpq	%r14, %rdi
    000013ca: 	je	.Ltmp283 # Offset: 5066
    000013cc: 	movq	0x70(%rsp), %rax
    000013d1: 	leaq	0x1(%rax), %rsi
    000013d5: 	callq	_ZdlPvm@PLT # Offset: 5077
.Ltmp283:
    000013da: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000013e1: 	movq	%r15, %rsi
    000013e4: 	movq	%r12, %rdi
    000013e7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5095
    000013ec: 	callq	clock@PLT # Offset: 5100
    000013f1: 	movl	iterations(%rip), %ecx
    000013f7: 	xorl	%r13d, %r13d
    000013fa: 	leaq	0x1fc0(%rsp), %rbx
    00001402: 	movq	%rax, start_time(%rip)
    00001409: 	testl	%ecx, %ecx
    0000140b: 	jle	.Ltmp284 # Offset: 5131
    0000140d: 	nopl	(%rax) # Size: 3
.Ltmp287:
    00001410: 	movq	%rbp, %rax
    00001413: 	pxor	%xmm0, %xmm0
    00001417: 	nopw	(%rax,%rax) # Size: 9
.Ltmp285:
    00001420: 	paddb	(%rax), %xmm0
    00001424: 	addq	$0x10, %rax
    00001428: 	cmpq	%rax, %rbx
    0000142b: 	jne	.Ltmp285 # Offset: 5163
    0000142d: 	movdqa	%xmm0, %xmm1
    00001431: 	cvttsd2si	init_value(%rip), %edx
    00001439: 	psrldq	$0x8, %xmm1
    0000143e: 	paddb	%xmm1, %xmm0
    00001442: 	pxor	%xmm1, %xmm1
    00001446: 	psadbw	%xmm1, %xmm0
    0000144a: 	movd	%xmm0, %eax
    0000144e: 	shll	$0x6, %edx
    00001451: 	cmpb	%al, %dl
    00001453: 	je	.Ltmp286 # Offset: 5203
    00001455: 	movl	current_test(%rip), %edx
    0000145b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001462: 	movl	$0x1, %edi
    00001467: 	xorl	%eax, %eax
    00001469: 	callq	__printf_chk@PLT # Offset: 5225
    0000146e: 	movl	iterations(%rip), %ecx
.Ltmp286:
    00001474: 	addl	$0x1, %r13d
    00001478: 	cmpl	%ecx, %r13d
    0000147b: 	jl	.Ltmp287 # Offset: 5243
.Ltmp284:
    0000147d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001484: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000148b: 	subq	$0x20, %rax
    0000148f: 	cmpq	%rax, %rbx
    00001492: 	je	.Ltmp288 # Offset: 5266
    00001498: 	leaq	0x10(%rbx), %rdi
    0000149c: 	movq	0x68(%rsp), %r13
    000014a1: 	movq	%rdi, (%rbx)
    000014a4: 	movq	0x60(%rsp), %rax
    000014a9: 	movq	%rax, %rsi
    000014ac: 	movq	%rax, 0x18(%rsp)
    000014b1: 	addq	%r13, %rsi
    000014b4: 	je	.Ltmp289 # Offset: 5300
    000014b6: 	testq	%rax, %rax
    000014b9: 	je	.Ltmp290 # Offset: 5305
.Ltmp289:
    000014bf: 	movq	%r13, 0x20(%rsp)
    000014c4: 	cmpq	$0xf, %r13
    000014c8: 	ja	.Ltmp291 # Offset: 5320
    000014ce: 	cmpq	$0x1, %r13
    000014d2: 	jne	.Ltmp292 # Offset: 5330
    000014d8: 	movq	0x18(%rsp), %rax
    000014dd: 	movzbl	(%rax), %eax
    000014e0: 	movb	%al, 0x10(%rbx)
.Ltmp344:
    000014e3: 	movq	%r13, 0x8(%rbx)
    000014e7: 	movb	$0x0, (%rdi,%r13)
    000014ec: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014f3: 	addq	$0x20, %rax
    000014f7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp316:
    000014fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001505: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000150c: 	je	.Ltmp293 # Offset: 5388
.Ltmp315:
    00001512: 	movq	-0x20(%rax), %r13
    00001516: 	callq	clock@PLT # Offset: 5398
    0000151b: 	pxor	%xmm0, %xmm0
    0000151f: 	movq	%rax, end_time(%rip)
    00001526: 	movq	%r13, %rdi
    00001529: 	subq	start_time(%rip), %rax
    00001530: 	cvtsi2sd	%rax, %xmm0
    00001535: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000153d: 	callq	_Z13record_resultdPKc # Offset: 5437
    00001542: 	movq	0x60(%rsp), %rdi
    00001547: 	cmpq	%r14, %rdi
    0000154a: 	je	.Ltmp294 # Offset: 5450
    0000154c: 	movq	0x70(%rsp), %rax
    00001551: 	leaq	0x1(%rax), %rsi
    00001555: 	callq	_ZdlPvm@PLT # Offset: 5461
.Ltmp294:
    0000155a: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001561: 	movq	%r15, %rsi
    00001564: 	movq	%r12, %rdi
    00001567: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5479
    0000156c: 	callq	clock@PLT # Offset: 5484
    00001571: 	movl	iterations(%rip), %ecx
    00001577: 	xorl	%r13d, %r13d
    0000157a: 	leaq	0x1fc0(%rsp), %rbx
    00001582: 	movq	%rax, start_time(%rip)
    00001589: 	testl	%ecx, %ecx
    0000158b: 	jle	.Ltmp295 # Offset: 5515
    0000158d: 	nopl	(%rax) # Size: 3
.Ltmp298:
    00001590: 	movq	%rbp, %rax
    00001593: 	pxor	%xmm0, %xmm0
    00001597: 	nopw	(%rax,%rax) # Size: 9
.Ltmp296:
    000015a0: 	paddb	(%rax), %xmm0
    000015a4: 	addq	$0x10, %rax
    000015a8: 	cmpq	%rbx, %rax
    000015ab: 	jne	.Ltmp296 # Offset: 5547
    000015ad: 	movdqa	%xmm0, %xmm1
    000015b1: 	cvttsd2si	init_value(%rip), %edx
    000015b9: 	psrldq	$0x8, %xmm1
    000015be: 	paddb	%xmm1, %xmm0
    000015c2: 	pxor	%xmm1, %xmm1
    000015c6: 	psadbw	%xmm1, %xmm0
    000015ca: 	movd	%xmm0, %eax
    000015ce: 	shll	$0x6, %edx
    000015d1: 	cmpb	%al, %dl
    000015d3: 	je	.Ltmp297 # Offset: 5587
    000015d5: 	movl	current_test(%rip), %edx
    000015db: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000015e2: 	movl	$0x1, %edi
    000015e7: 	xorl	%eax, %eax
    000015e9: 	callq	__printf_chk@PLT # Offset: 5609
    000015ee: 	movl	iterations(%rip), %ecx
.Ltmp297:
    000015f4: 	addl	$0x1, %r13d
    000015f8: 	cmpl	%ecx, %r13d
    000015fb: 	jl	.Ltmp298 # Offset: 5627
.Ltmp295:
    000015fd: 	movq	%r12, %rdi
    00001600: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5632
    00001605: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000160c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001613: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000161a: 	je	.Ltmp299 # Offset: 5658
.Ltmp314:
    00001620: 	movq	-0x20(%rax), %rbp
    00001624: 	callq	clock@PLT # Offset: 5668
    00001629: 	pxor	%xmm0, %xmm0
    0000162d: 	movq	%rax, end_time(%rip)
    00001634: 	movq	%rbp, %rdi
    00001637: 	subq	start_time(%rip), %rax
    0000163e: 	cvtsi2sd	%rax, %xmm0
    00001643: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000164b: 	callq	_Z13record_resultdPKc # Offset: 5707
    00001650: 	movq	0x60(%rsp), %rdi
    00001655: 	cmpq	%r14, %rdi
    00001658: 	je	.Ltmp300 # Offset: 5720
    0000165a: 	movq	0x70(%rsp), %rax
    0000165f: 	leaq	0x1(%rax), %rsi
    00001663: 	callq	_ZdlPvm@PLT # Offset: 5731
.Ltmp300:
    00001668: 	leaq	DATAat0x1a2ee(%rip), %rdx
    0000166f: 	movq	%r15, %rsi
    00001672: 	movq	%r12, %rdi
    00001675: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5749
    0000167a: 	movl	iterations(%rip), %edx
    00001680: 	movq	0x60(%rsp), %rdi
    00001685: 	xorl	%r8d, %r8d
    00001688: 	xorl	%ecx, %ecx
    0000168a: 	movl	$0x1f40, %esi
    0000168f: 	callq	_Z9summarizePKciiii # Offset: 5775
    00001694: 	movq	0x60(%rsp), %rdi
    00001699: 	cmpq	%r14, %rdi
    0000169c: 	je	.Ltmp301 # Offset: 5788
    0000169e: 	movq	0x70(%rsp), %rax
    000016a3: 	leaq	0x1(%rax), %rsi
    000016a7: 	callq	_ZdlPvm@PLT # Offset: 5799
.Ltmp301:
    000016ac: 	movq	0x40(%rsp), %rdi
    000016b1: 	cmpq	0x10(%rsp), %rdi
    000016b6: 	je	.Ltmp302 # Offset: 5814
    000016b8: 	movq	0x50(%rsp), %rax
    000016bd: 	leaq	0x1(%rax), %rsi
    000016c1: 	callq	_ZdlPvm@PLT # Offset: 5825
.Ltmp302:
    000016c6: 	movq	0x1fc8(%rsp), %rax
    000016ce: 	subq	%fs:0x28, %rax
    000016d7: 	jne	.Ltmp303 # Offset: 5847
    000016dd: 	addq	$0x1fd8, %rsp
    000016e4: 	popq	%rbx
    000016e5: 	popq	%rbp
    000016e6: 	popq	%r12
    000016e8: 	popq	%r13
    000016ea: 	popq	%r14
    000016ec: 	popq	%r15
    000016ee: 	retq # Offset: 5870
.Ltmp156:
    000016ef: 	movq	0x8(%rsp), %rsi
    000016f4: 	xorl	%edx, %edx
    000016f6: 	movq	%rbx, %rdi
    000016f9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5881
    000016fe: 	movq	%rax, (%rbx)
    00001701: 	movq	%rax, %rdi
    00001704: 	movq	0x20(%rsp), %rax
    00001709: 	movq	%rax, 0x10(%rbx)
.Ltmp329:
    0000170d: 	movq	%r13, %rdx
    00001710: 	movq	%r14, %rsi
    00001713: 	callq	memcpy@PLT # Offset: 5907
    00001718: 	movq	0x20(%rsp), %r13
    0000171d: 	movq	(%rbx), %rdi
    00001720: 	jmp	.Ltmp304 # Offset: 5920
.Ltmp153:
    00001725: 	movq	%r12, %rsi
    00001728: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000172f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5935
    00001734: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000173b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001742: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001749: 	jne	.Ltmp305 # Offset: 5961
.Ltmp158:
    0000174f: 	movq	-0x8(%rdx), %rax
    00001753: 	addq	$0x200, %rax
    00001759: 	jmp	.Ltmp305 # Offset: 5977
.Ltmp277:
    0000175e: 	movq	%r12, %rsi
    00001761: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001768: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5992
    0000176d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001774: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000177b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001782: 	jne	.Ltmp306 # Offset: 6018
.Ltmp282:
    00001788: 	movq	-0x8(%rdx), %rax
    0000178c: 	addq	$0x200, %rax
    00001792: 	jmp	.Ltmp306 # Offset: 6034
.Ltmp271:
    00001797: 	movq	-0x8(%rdx), %rax
    0000179b: 	addq	$0x200, %rax
    000017a1: 	jmp	.Ltmp307 # Offset: 6049
.Ltmp266:
    000017a6: 	movq	%r12, %rsi
    000017a9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017b0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6064
    000017b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017bc: 	jmp	.Ltmp308 # Offset: 6076
.Ltmp260:
    000017c1: 	movq	-0x8(%rdx), %rax
    000017c5: 	addq	$0x200, %rax
    000017cb: 	jmp	.Ltmp309 # Offset: 6091
.Ltmp255:
    000017d0: 	movq	%r12, %rsi
    000017d3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017da: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6106
    000017df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017e6: 	jmp	.Ltmp310 # Offset: 6118
.Ltmp249:
    000017eb: 	movq	-0x8(%rdx), %rax
    000017ef: 	addq	$0x200, %rax
    000017f5: 	jmp	.Ltmp311 # Offset: 6133
.Ltmp244:
    000017fa: 	movq	%r12, %rsi
    000017fd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001804: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6148
    00001809: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001810: 	jmp	.Ltmp312 # Offset: 6160
.Ltmp238:
    00001815: 	movq	-0x8(%rdx), %rax
    00001819: 	addq	$0x200, %rax
    0000181f: 	jmp	.Ltmp313 # Offset: 6175
.Ltmp299:
    00001824: 	movq	-0x8(%rdx), %rax
    00001828: 	addq	$0x200, %rax
    0000182e: 	jmp	.Ltmp314 # Offset: 6190
.Ltmp293:
    00001833: 	movq	-0x8(%rdx), %rax
    00001837: 	addq	$0x200, %rax
    0000183d: 	jmp	.Ltmp315 # Offset: 6205
.Ltmp288:
    00001842: 	movq	%r12, %rsi
    00001845: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000184c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6220
    00001851: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001858: 	jmp	.Ltmp316 # Offset: 6232
.Ltmp177:
    0000185d: 	movq	%r12, %rsi
    00001860: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001867: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6247
    0000186c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001873: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000187a: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001881: 	jne	.Ltmp317 # Offset: 6273
.Ltmp182:
    00001887: 	movq	-0x8(%rdx), %rax
    0000188b: 	addq	$0x200, %rax
    00001891: 	jmp	.Ltmp317 # Offset: 6289
.Ltmp169:
    00001896: 	movq	-0x8(%rdx), %rax
    0000189a: 	addq	$0x200, %rax
    000018a0: 	jmp	.Ltmp318 # Offset: 6304
.Ltmp164:
    000018a5: 	movq	%r12, %rsi
    000018a8: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018af: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6319
    000018b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018bb: 	jmp	.Ltmp319 # Offset: 6331
.Ltmp233:
    000018c0: 	movq	%r12, %rsi
    000018c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6346
    000018cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018d6: 	jmp	.Ltmp320 # Offset: 6358
.Ltmp227:
    000018db: 	movq	-0x8(%rdx), %rax
    000018df: 	addq	$0x200, %rax
    000018e5: 	jmp	.Ltmp321 # Offset: 6373
.Ltmp222:
    000018ea: 	movq	%r12, %rsi
    000018ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6388
    000018f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001900: 	jmp	.Ltmp322 # Offset: 6400
.Ltmp216:
    00001905: 	movq	-0x8(%rdx), %rax
    00001909: 	addq	$0x200, %rax
    0000190f: 	jmp	.Ltmp323 # Offset: 6415
.Ltmp210:
    00001914: 	movq	-0x8(%rdx), %rax
    00001918: 	addq	$0x200, %rax
    0000191e: 	jmp	.Ltmp324 # Offset: 6430
.Ltmp205:
    00001923: 	movq	%r12, %rsi
    00001926: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000192d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6445
    00001932: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001939: 	jmp	.Ltmp325 # Offset: 6457
.Ltmp199:
    0000193e: 	movq	-0x8(%rdx), %rax
    00001942: 	addq	$0x200, %rax
    00001948: 	jmp	.Ltmp326 # Offset: 6472
.Ltmp193:
    0000194d: 	movq	-0x8(%rdx), %rax
    00001951: 	addq	$0x200, %rax
    00001957: 	jmp	.Ltmp327 # Offset: 6487
.Ltmp188:
    0000195c: 	movq	%r12, %rsi
    0000195f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001966: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6502
    0000196b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001972: 	jmp	.Ltmp328 # Offset: 6514
.Ltmp157:
    00001977: 	testq	%r13, %r13
    0000197a: 	je	.Ltmp304 # Offset: 6522
    00001980: 	jmp	.Ltmp329 # Offset: 6528
    00001985: 	nopl	(%rax) # Size: 3
.Ltmp209:
    00001988: 	testq	%r13, %r13
    0000198b: 	je	.Ltmp330 # Offset: 6539
    00001991: 	jmp	.Ltmp331 # Offset: 6545
    00001996: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp192:
    000019a0: 	testq	%r13, %r13
    000019a3: 	je	.Ltmp332 # Offset: 6563
    000019a9: 	jmp	.Ltmp333 # Offset: 6569
    000019ae: 	nop # Size: 2
.Ltmp168:
    000019b0: 	testq	%r13, %r13
    000019b3: 	je	.Ltmp334 # Offset: 6579
    000019b9: 	jmp	.Ltmp335 # Offset: 6585
    000019be: 	nop # Size: 2
.Ltmp226:
    000019c0: 	testq	%r13, %r13
    000019c3: 	je	.Ltmp336 # Offset: 6595
    000019c9: 	jmp	.Ltmp337 # Offset: 6601
    000019ce: 	nop # Size: 2
.Ltmp237:
    000019d0: 	testq	%r13, %r13
    000019d3: 	je	.Ltmp338 # Offset: 6611
.Ltmp348:
    000019d9: 	movq	0x18(%rsp), %rsi
    000019de: 	movq	%r13, %rdx
    000019e1: 	callq	memcpy@PLT # Offset: 6625
    000019e6: 	movq	0x20(%rsp), %r13
    000019eb: 	movq	(%rbx), %rdi
    000019ee: 	jmp	.Ltmp338 # Offset: 6638
.Ltmp270:
    000019f3: 	testq	%r13, %r13
    000019f6: 	je	.Ltmp339 # Offset: 6646
    000019fc: 	jmp	.Ltmp340 # Offset: 6652
    00001a01: 	nopl	(%rax) # Size: 7
.Ltmp281:
    00001a08: 	testq	%r13, %r13
    00001a0b: 	je	.Ltmp341 # Offset: 6667
.Ltmp350:
    00001a11: 	movq	0x18(%rsp), %rsi
    00001a16: 	movq	%r13, %rdx
    00001a19: 	callq	memcpy@PLT # Offset: 6681
    00001a1e: 	movq	0x20(%rsp), %r13
    00001a23: 	movq	(%rbx), %rdi
    00001a26: 	jmp	.Ltmp341 # Offset: 6694
.Ltmp259:
    00001a2b: 	testq	%r13, %r13
    00001a2e: 	je	.Ltmp342 # Offset: 6702
    00001a34: 	jmp	.Ltmp343 # Offset: 6708
    00001a39: 	nopl	(%rax) # Size: 7
.Ltmp292:
    00001a40: 	testq	%r13, %r13
    00001a43: 	je	.Ltmp344 # Offset: 6723
.Ltmp349:
    00001a49: 	movq	0x18(%rsp), %rsi
    00001a4e: 	movq	%r13, %rdx
    00001a51: 	callq	memcpy@PLT # Offset: 6737
    00001a56: 	movq	0x20(%rsp), %r13
    00001a5b: 	movq	(%rbx), %rdi
    00001a5e: 	jmp	.Ltmp344 # Offset: 6750
.Ltmp248:
    00001a63: 	testq	%r13, %r13
    00001a66: 	je	.Ltmp345 # Offset: 6758
    00001a6c: 	jmp	.Ltmp346 # Offset: 6764
    00001a71: 	nopl	(%rax) # Size: 7
.Ltmp181:
    00001a78: 	testq	%r13, %r13
    00001a7b: 	je	.Ltmp347 # Offset: 6779
.Ltmp351:
    00001a81: 	movq	0x18(%rsp), %rsi
    00001a86: 	movq	%r13, %rdx
    00001a89: 	callq	memcpy@PLT # Offset: 6793
    00001a8e: 	movq	0x20(%rsp), %r13
    00001a93: 	movq	(%rbx), %rdi
    00001a96: 	jmp	.Ltmp347 # Offset: 6806
.Ltmp208:
    00001a9b: 	movq	0x8(%rsp), %rsi
    00001aa0: 	xorl	%edx, %edx
    00001aa2: 	movq	%rbx, %rdi
    00001aa5: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6821
    00001aaa: 	movq	%rax, (%rbx)
    00001aad: 	movq	%rax, %rdi
    00001ab0: 	movq	0x20(%rsp), %rax
    00001ab5: 	movq	%rax, 0x10(%rbx)
.Ltmp331:
    00001ab9: 	movq	0x18(%rsp), %rsi
    00001abe: 	movq	%r13, %rdx
    00001ac1: 	callq	memcpy@PLT # Offset: 6849
    00001ac6: 	movq	0x20(%rsp), %r13
    00001acb: 	movq	(%rbx), %rdi
    00001ace: 	jmp	.Ltmp330 # Offset: 6862
.Ltmp191:
    00001ad3: 	movq	0x8(%rsp), %rsi
    00001ad8: 	xorl	%edx, %edx
    00001ada: 	movq	%rbx, %rdi
    00001add: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6877
    00001ae2: 	movq	%rax, (%rbx)
    00001ae5: 	movq	%rax, %rdi
    00001ae8: 	movq	0x20(%rsp), %rax
    00001aed: 	movq	%rax, 0x10(%rbx)
.Ltmp333:
    00001af1: 	movq	0x18(%rsp), %rsi
    00001af6: 	movq	%r13, %rdx
    00001af9: 	callq	memcpy@PLT # Offset: 6905
    00001afe: 	movq	0x20(%rsp), %r13
    00001b03: 	movq	(%rbx), %rdi
    00001b06: 	jmp	.Ltmp332 # Offset: 6918
.Ltmp167:
    00001b0b: 	movq	0x8(%rsp), %rsi
    00001b10: 	xorl	%edx, %edx
    00001b12: 	movq	%rbx, %rdi
    00001b15: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6933
    00001b1a: 	movq	%rax, (%rbx)
    00001b1d: 	movq	%rax, %rdi
    00001b20: 	movq	0x20(%rsp), %rax
    00001b25: 	movq	%rax, 0x10(%rbx)
.Ltmp335:
    00001b29: 	movq	0x18(%rsp), %rsi
    00001b2e: 	movq	%r13, %rdx
    00001b31: 	callq	memcpy@PLT # Offset: 6961
    00001b36: 	movq	0x20(%rsp), %r13
    00001b3b: 	movq	(%rbx), %rdi
    00001b3e: 	jmp	.Ltmp334 # Offset: 6974
.Ltmp225:
    00001b43: 	movq	0x8(%rsp), %rsi
    00001b48: 	xorl	%edx, %edx
    00001b4a: 	movq	%rbx, %rdi
    00001b4d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6989
    00001b52: 	movq	%rax, (%rbx)
    00001b55: 	movq	%rax, %rdi
    00001b58: 	movq	0x20(%rsp), %rax
    00001b5d: 	movq	%rax, 0x10(%rbx)
.Ltmp337:
    00001b61: 	movq	0x18(%rsp), %rsi
    00001b66: 	movq	%r13, %rdx
    00001b69: 	callq	memcpy@PLT # Offset: 7017
    00001b6e: 	movq	0x20(%rsp), %r13
    00001b73: 	movq	(%rbx), %rdi
    00001b76: 	jmp	.Ltmp336 # Offset: 7030
.Ltmp269:
    00001b7b: 	movq	0x8(%rsp), %rsi
    00001b80: 	xorl	%edx, %edx
    00001b82: 	movq	%rbx, %rdi
    00001b85: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7045
    00001b8a: 	movq	%rax, (%rbx)
    00001b8d: 	movq	%rax, %rdi
    00001b90: 	movq	0x20(%rsp), %rax
    00001b95: 	movq	%rax, 0x10(%rbx)
.Ltmp340:
    00001b99: 	movq	0x18(%rsp), %rsi
    00001b9e: 	movq	%r13, %rdx
    00001ba1: 	callq	memcpy@PLT # Offset: 7073
    00001ba6: 	movq	0x20(%rsp), %r13
    00001bab: 	movq	(%rbx), %rdi
    00001bae: 	jmp	.Ltmp339 # Offset: 7086
.Ltmp236:
    00001bb3: 	movq	0x8(%rsp), %rsi
    00001bb8: 	xorl	%edx, %edx
    00001bba: 	movq	%rbx, %rdi
    00001bbd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7101
    00001bc2: 	movq	%rax, (%rbx)
    00001bc5: 	movq	%rax, %rdi
    00001bc8: 	movq	0x20(%rsp), %rax
    00001bcd: 	movq	%rax, 0x10(%rbx)
    00001bd1: 	jmp	.Ltmp348 # Offset: 7121
.Ltmp258:
    00001bd6: 	movq	0x8(%rsp), %rsi
    00001bdb: 	xorl	%edx, %edx
    00001bdd: 	movq	%rbx, %rdi
    00001be0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7136
    00001be5: 	movq	%rax, (%rbx)
    00001be8: 	movq	%rax, %rdi
    00001beb: 	movq	0x20(%rsp), %rax
    00001bf0: 	movq	%rax, 0x10(%rbx)
.Ltmp343:
    00001bf4: 	movq	0x18(%rsp), %rsi
    00001bf9: 	movq	%r13, %rdx
    00001bfc: 	callq	memcpy@PLT # Offset: 7164
    00001c01: 	movq	0x20(%rsp), %r13
    00001c06: 	movq	(%rbx), %rdi
    00001c09: 	jmp	.Ltmp342 # Offset: 7177
.Ltmp247:
    00001c0e: 	movq	0x8(%rsp), %rsi
    00001c13: 	xorl	%edx, %edx
    00001c15: 	movq	%rbx, %rdi
    00001c18: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7192
    00001c1d: 	movq	%rax, (%rbx)
    00001c20: 	movq	%rax, %rdi
    00001c23: 	movq	0x20(%rsp), %rax
    00001c28: 	movq	%rax, 0x10(%rbx)
.Ltmp346:
    00001c2c: 	movq	0x18(%rsp), %rsi
    00001c31: 	movq	%r13, %rdx
    00001c34: 	callq	memcpy@PLT # Offset: 7220
    00001c39: 	movq	0x20(%rsp), %r13
    00001c3e: 	movq	(%rbx), %rdi
    00001c41: 	jmp	.Ltmp345 # Offset: 7233
.Ltmp291:
    00001c46: 	movq	0x8(%rsp), %rsi
    00001c4b: 	xorl	%edx, %edx
    00001c4d: 	movq	%rbx, %rdi
    00001c50: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7248
    00001c55: 	movq	%rax, (%rbx)
    00001c58: 	movq	%rax, %rdi
    00001c5b: 	movq	0x20(%rsp), %rax
    00001c60: 	movq	%rax, 0x10(%rbx)
    00001c64: 	jmp	.Ltmp349 # Offset: 7268
.Ltmp280:
    00001c69: 	movq	0x8(%rsp), %rsi
    00001c6e: 	xorl	%edx, %edx
    00001c70: 	movq	%rbx, %rdi
    00001c73: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7283
    00001c78: 	movq	%rax, (%rbx)
    00001c7b: 	movq	%rax, %rdi
    00001c7e: 	movq	0x20(%rsp), %rax
    00001c83: 	movq	%rax, 0x10(%rbx)
    00001c87: 	jmp	.Ltmp350 # Offset: 7303
.Ltmp180:
    00001c8c: 	movq	0x8(%rsp), %rsi
    00001c91: 	xorl	%edx, %edx
    00001c93: 	movq	%rbx, %rdi
    00001c96: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7318
    00001c9b: 	movq	%rax, (%rbx)
    00001c9e: 	movq	%rax, %rdi
    00001ca1: 	movq	0x20(%rsp), %rax
    00001ca6: 	movq	%rax, 0x10(%rbx)
    00001caa: 	jmp	.Ltmp351 # Offset: 7338
.Ltmp166:
    00001caf: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cb6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7350
.Ltmp179:
    00001cbb: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cc2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7362
.Ltmp190:
    00001cc7: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cce: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7374
.Ltmp207:
    00001cd3: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cda: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7386
.Ltmp224:
    00001cdf: 	leaq	DATAat0x1a158(%rip), %rdi
    00001ce6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7398
.Ltmp235:
    00001ceb: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cf2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7410
.Ltmp246:
    00001cf7: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cfe: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7422
.Ltmp257:
    00001d03: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d0a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7434
.Ltmp268:
    00001d0f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d16: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7446
.Ltmp279:
    00001d1b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d22: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7458
.Ltmp290:
    00001d27: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d2e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7470
.Ltmp303:
    00001d33: 	callq	__stack_chk_fail@PLT # Offset: 7475
.Ltmp155:
    00001d38: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d3f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7487
    00001d44: 	endbr64
.Ltmp353:
    00001d48: 	movq	%rax, %rbp
    00001d4b: 	jmp	.Ltmp352 # Offset: 7499
    00001d4d: 	endbr64
    00001d51: 	jmp	.Ltmp353 # Offset: 7505
    00001d53: 	endbr64
    00001d57: 	movq	%rax, %rbp
    00001d5a: 	movq	0x60(%rsp), %rdi
    00001d5f: 	leaq	0x70(%rsp), %rax
    00001d64: 	cmpq	%rax, %rdi
    00001d67: 	je	.Ltmp354 # Offset: 7527
.Ltmp356:
    00001d69: 	movq	0x70(%rsp), %rax
    00001d6e: 	leaq	0x1(%rax), %rsi
    00001d72: 	callq	_ZdlPvm@PLT # Offset: 7538
.Ltmp354:
    00001d77: 	movq	0x40(%rsp), %rdi
    00001d7c: 	cmpq	0x10(%rsp), %rdi
    00001d81: 	je	.Ltmp355 # Offset: 7553
    00001d83: 	movq	0x50(%rsp), %rax
    00001d88: 	leaq	0x1(%rax), %rsi
    00001d8c: 	callq	_ZdlPvm@PLT # Offset: 7564
.Ltmp355:
    00001d91: 	movq	%rbp, %rdi
    00001d94: 	callq	_Unwind_Resume@PLT # Offset: 7572
.Ltmp352:
    00001d99: 	movq	0x60(%rsp), %rdi
    00001d9e: 	cmpq	%r14, %rdi
    00001da1: 	jne	.Ltmp356 # Offset: 7585
    00001da3: 	jmp	.Ltmp354 # Offset: 7587
    00001da5: 	endbr64
    00001da9: 	jmp	.Ltmp353 # Offset: 7593
    00001dab: 	endbr64
    00001daf: 	jmp	.Ltmp353 # Offset: 7599
    00001db1: 	endbr64
    00001db5: 	jmp	.Ltmp353 # Offset: 7605
    00001db7: 	endbr64
    00001dbb: 	jmp	.Ltmp353 # Offset: 7611
    00001dbd: 	endbr64
    00001dc1: 	jmp	.Ltmp353 # Offset: 7617
    00001dc3: 	endbr64
    00001dc7: 	jmp	.Ltmp353 # Offset: 7623
    00001dcc: 	endbr64
    00001dd0: 	jmp	.Ltmp353 # Offset: 7632
    00001dd5: 	endbr64
    00001dd9: 	jmp	.Ltmp353 # Offset: 7641
    00001dde: 	endbr64
    00001de2: 	movq	%rax, %rbp
    00001de5: 	jmp	.Ltmp354 # Offset: 7653
    00001de7: 	endbr64
    00001deb: 	jmp	.Ltmp353 # Offset: 7659
    00001df0: 	endbr64
    00001df4: 	jmp	.Ltmp353 # Offset: 7668
    00001df9: 	endbr64
    00001dfd: 	jmp	.Ltmp353 # Offset: 7677
    00001e02: 	endbr64
    00001e06: 	jmp	.Ltmp353 # Offset: 7686
    00001e0b: 	endbr64
    00001e0f: 	jmp	.Ltmp353 # Offset: 7695
    00001e14: 	endbr64
    00001e18: 	jmp	.Ltmp353 # Offset: 7704
    00001e1d: 	endbr64
    00001e21: 	jmp	.Ltmp353 # Offset: 7713
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIhEvv"

Binary Function "_Z11TestOneTypeIaEvv" after disassembly {
  Number      : 47
  State       : disassembled
  Address     : 0x4fe0
  Size        : 0x1e0b
  MaxSize     : 0x1e10
  Offset      : 0x4fe0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIaEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB046:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0xfd8, %rsp
    00000021: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000029: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000031: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000038: 	movq	%fs:0x28, %rax
    00000041: 	movq	%rax, 0x1fc8(%rsp)
    00000049: 	xorl	%eax, %eax
    0000004b: 	leaq	0x20(%rsp), %rsi
    00000050: 	movaps	%xmm2, 0x20(%rsp)
    00000055: 	leaq	0x80(%rsp), %rbp
    0000005d: 	movq	%rsi, 0x8(%rsp)
    00000062: 	leaq	0x60(%rsp), %r12
    00000067: 	leaq	0x40(%rsp), %r15
    0000006c: 	movaps	%xmm3, 0x30(%rsp)
    00000071: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 113
    00000076: 	leaq	0x50(%rsp), %rax
    0000007b: 	movq	%rbp, %rdi
    0000007e: 	movq	%r15, %rsi
    00000081: 	movq	%rax, 0x10(%rsp)
    00000086: 	movl	$0x3e8, %ecx
    0000008b: 	movabsq	$0x101010101010101, %rdx
    00000095: 	movq	%rax, 0x40(%rsp)
    0000009a: 	movl	$0x745f, %eax
    0000009f: 	movw	%ax, 0x54(%rsp)
    000000a4: 	cvttsd2si	init_value(%rip), %eax
    000000ac: 	movl	$0x38746e69, 0x50(%rsp)
    000000b4: 	movq	$0x6, 0x48(%rsp)
    000000bd: 	movb	$0x0, 0x56(%rsp)
    000000c2: 	movzbl	%al, %eax
    000000c5: 	imulq	%rdx, %rax
    000000c9: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000d0: 	rep		stosq	%rax, %es:(%rdi)
    000000d3: 	movq	%r12, %rdi
    000000d6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 214
    000000db: 	callq	clock@PLT # Offset: 219
    000000e0: 	movl	iterations(%rip), %ecx
    000000e6: 	xorl	%r13d, %r13d
    000000e9: 	leaq	0x1fc0(%rsp), %rbx
    000000f1: 	movq	%rax, start_time(%rip)
    000000f8: 	leaq	DATAat0x1a1c8(%rip), %r14
    000000ff: 	testl	%ecx, %ecx
    00000101: 	jle	.Ltmp357 # Offset: 257
    00000103: 	nopl	(%rax,%rax) # Size: 5
.Ltmp360:
    00000108: 	movq	%rbp, %rax
    0000010b: 	pxor	%xmm0, %xmm0
    0000010f: 	nop # Size: 1
.Ltmp358:
    00000110: 	paddb	(%rax), %xmm0
    00000114: 	addq	$0x10, %rax
    00000118: 	cmpq	%rbx, %rax
    0000011b: 	jne	.Ltmp358 # Offset: 283
    0000011d: 	movdqa	%xmm0, %xmm1
    00000121: 	cvttsd2si	init_value(%rip), %edx
    00000129: 	psrldq	$0x8, %xmm1
    0000012e: 	paddb	%xmm1, %xmm0
    00000132: 	pxor	%xmm1, %xmm1
    00000136: 	psadbw	%xmm1, %xmm0
    0000013a: 	movd	%xmm0, %eax
    0000013e: 	shll	$0x6, %edx
    00000141: 	cmpb	%al, %dl
    00000143: 	je	.Ltmp359 # Offset: 323
    00000145: 	movl	current_test(%rip), %edx
    0000014b: 	movq	%r14, %rsi
    0000014e: 	movl	$0x1, %edi
    00000153: 	xorl	%eax, %eax
    00000155: 	callq	__printf_chk@PLT # Offset: 341
    0000015a: 	movl	iterations(%rip), %ecx
.Ltmp359:
    00000160: 	addl	$0x1, %r13d
    00000164: 	cmpl	%ecx, %r13d
    00000167: 	jl	.Ltmp360 # Offset: 359
.Ltmp357:
    00000169: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000170: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000177: 	subq	$0x20, %rax
    0000017b: 	cmpq	%rax, %rbx
    0000017e: 	je	.Ltmp361 # Offset: 382
    00000184: 	leaq	0x10(%rbx), %rdi
    00000188: 	movq	0x68(%rsp), %r13
    0000018d: 	movq	%rdi, (%rbx)
    00000190: 	movq	0x60(%rsp), %r14
    00000195: 	movq	%r14, %rax
    00000198: 	addq	%r13, %rax
    0000019b: 	je	.Ltmp362 # Offset: 411
    0000019d: 	testq	%r14, %r14
    000001a0: 	je	.Ltmp363 # Offset: 416
.Ltmp362:
    000001a6: 	movq	%r13, 0x20(%rsp)
    000001ab: 	cmpq	$0xf, %r13
    000001af: 	ja	.Ltmp364 # Offset: 431
    000001b5: 	cmpq	$0x1, %r13
    000001b9: 	jne	.Ltmp365 # Offset: 441
    000001bf: 	movzbl	(%r14), %eax
    000001c3: 	movb	%al, 0x10(%rbx)
.Ltmp512:
    000001c6: 	movq	%r13, 0x8(%rbx)
    000001ca: 	movb	$0x0, (%rdi,%r13)
    000001cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001d6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001dd: 	addq	$0x20, %rax
    000001e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000001e8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000001ef: 	je	.Ltmp366 # Offset: 495
.Ltmp513:
    000001f5: 	movq	-0x20(%rax), %r13
    000001f9: 	callq	clock@PLT # Offset: 505
    000001fe: 	pxor	%xmm0, %xmm0
    00000202: 	movq	%rax, end_time(%rip)
    00000209: 	movq	%r13, %rdi
    0000020c: 	subq	start_time(%rip), %rax
    00000213: 	cvtsi2sd	%rax, %xmm0
    00000218: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000220: 	callq	_Z13record_resultdPKc # Offset: 544
    00000225: 	movq	0x60(%rsp), %rdi
    0000022a: 	leaq	0x70(%rsp), %r14
    0000022f: 	cmpq	%r14, %rdi
    00000232: 	je	.Ltmp367 # Offset: 562
    00000234: 	movq	0x70(%rsp), %rax
    00000239: 	leaq	0x1(%rax), %rsi
    0000023d: 	callq	_ZdlPvm@PLT # Offset: 573
.Ltmp367:
    00000242: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000249: 	movq	%r15, %rsi
    0000024c: 	movq	%r12, %rdi
    0000024f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 591
    00000254: 	callq	clock@PLT # Offset: 596
    00000259: 	movl	iterations(%rip), %ecx
    0000025f: 	xorl	%r13d, %r13d
    00000262: 	leaq	0x1fc0(%rsp), %rbx
    0000026a: 	movq	%rax, start_time(%rip)
    00000271: 	testl	%ecx, %ecx
    00000273: 	jle	.Ltmp368 # Offset: 627
    00000275: 	nopl	(%rax) # Size: 3
.Ltmp371:
    00000278: 	movq	%rbp, %rax
    0000027b: 	pxor	%xmm0, %xmm0
    0000027f: 	nop # Size: 1
.Ltmp369:
    00000280: 	paddb	(%rax), %xmm0
    00000284: 	addq	$0x10, %rax
    00000288: 	cmpq	%rbx, %rax
    0000028b: 	jne	.Ltmp369 # Offset: 651
    0000028d: 	movdqa	%xmm0, %xmm1
    00000291: 	cvttsd2si	init_value(%rip), %edx
    00000299: 	psrldq	$0x8, %xmm1
    0000029e: 	paddb	%xmm1, %xmm0
    000002a2: 	pxor	%xmm1, %xmm1
    000002a6: 	psadbw	%xmm1, %xmm0
    000002aa: 	movd	%xmm0, %eax
    000002ae: 	shll	$0x6, %edx
    000002b1: 	cmpb	%al, %dl
    000002b3: 	je	.Ltmp370 # Offset: 691
    000002b5: 	movl	current_test(%rip), %edx
    000002bb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002c2: 	movl	$0x1, %edi
    000002c7: 	xorl	%eax, %eax
    000002c9: 	callq	__printf_chk@PLT # Offset: 713
    000002ce: 	movl	iterations(%rip), %ecx
.Ltmp370:
    000002d4: 	addl	$0x1, %r13d
    000002d8: 	cmpl	%ecx, %r13d
    000002db: 	jl	.Ltmp371 # Offset: 731
.Ltmp368:
    000002dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000002eb: 	subq	$0x20, %rax
    000002ef: 	cmpq	%rax, %rbx
    000002f2: 	je	.Ltmp372 # Offset: 754
    000002f8: 	leaq	0x10(%rbx), %rdi
    000002fc: 	movq	0x68(%rsp), %r13
    00000301: 	movq	%rdi, (%rbx)
    00000304: 	movq	0x60(%rsp), %rax
    00000309: 	movq	%rax, %rsi
    0000030c: 	movq	%rax, 0x18(%rsp)
    00000311: 	addq	%r13, %rsi
    00000314: 	je	.Ltmp373 # Offset: 788
    00000316: 	testq	%rax, %rax
    00000319: 	je	.Ltmp374 # Offset: 793
.Ltmp373:
    0000031f: 	movq	%r13, 0x20(%rsp)
    00000324: 	cmpq	$0xf, %r13
    00000328: 	ja	.Ltmp375 # Offset: 808
    0000032e: 	cmpq	$0x1, %r13
    00000332: 	jne	.Ltmp376 # Offset: 818
    00000338: 	movq	0x18(%rsp), %rax
    0000033d: 	movzbl	(%rax), %eax
    00000340: 	movb	%al, 0x10(%rbx)
.Ltmp543:
    00000343: 	movq	%r13, 0x8(%rbx)
    00000347: 	movb	$0x0, (%rdi,%r13)
    0000034c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000353: 	addq	$0x20, %rax
    00000357: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp528:
    0000035e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000365: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000036c: 	je	.Ltmp377 # Offset: 876
.Ltmp527:
    00000372: 	movq	-0x20(%rax), %r13
    00000376: 	callq	clock@PLT # Offset: 886
    0000037b: 	pxor	%xmm0, %xmm0
    0000037f: 	movq	%rax, end_time(%rip)
    00000386: 	movq	%r13, %rdi
    00000389: 	subq	start_time(%rip), %rax
    00000390: 	cvtsi2sd	%rax, %xmm0
    00000395: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000039d: 	callq	_Z13record_resultdPKc # Offset: 925
    000003a2: 	movq	0x60(%rsp), %rdi
    000003a7: 	cmpq	%r14, %rdi
    000003aa: 	je	.Ltmp378 # Offset: 938
    000003ac: 	movq	0x70(%rsp), %rax
    000003b1: 	leaq	0x1(%rax), %rsi
    000003b5: 	callq	_ZdlPvm@PLT # Offset: 949
.Ltmp378:
    000003ba: 	leaq	DATAat0x1a1ee(%rip), %rdx
    000003c1: 	movq	%r15, %rsi
    000003c4: 	movq	%r12, %rdi
    000003c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 967
    000003cc: 	movq	%r12, %rsi
    000003cf: 	movq	%rbp, %rdi
    000003d2: 	callq	"_Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 978
    000003d7: 	movq	0x60(%rsp), %rdi
    000003dc: 	cmpq	%r14, %rdi
    000003df: 	je	.Ltmp379 # Offset: 991
    000003e1: 	movq	0x70(%rsp), %rax
    000003e6: 	leaq	0x1(%rax), %rsi
    000003ea: 	callq	_ZdlPvm@PLT # Offset: 1002
.Ltmp379:
    000003ef: 	leaq	DATAat0x1a1fb(%rip), %rdx
    000003f6: 	movq	%r15, %rsi
    000003f9: 	movq	%r12, %rdi
    000003fc: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1020
    00000401: 	movq	%r12, %rsi
    00000404: 	movq	%rbp, %rdi
    00000407: 	callq	"_Z13test_constantIa18custom_copy_chain2IaEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1031
    0000040c: 	movq	0x60(%rsp), %rdi
    00000411: 	cmpq	%r14, %rdi
    00000414: 	je	.Ltmp380 # Offset: 1044
    00000416: 	movq	0x70(%rsp), %rax
    0000041b: 	leaq	0x1(%rax), %rsi
    0000041f: 	callq	_ZdlPvm@PLT # Offset: 1055
.Ltmp380:
    00000424: 	leaq	DATAat0x1a208(%rip), %rdx
    0000042b: 	movq	%r15, %rsi
    0000042e: 	movq	%r12, %rdi
    00000431: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1073
    00000436: 	callq	clock@PLT # Offset: 1078
    0000043b: 	movl	iterations(%rip), %ecx
    00000441: 	xorl	%r13d, %r13d
    00000444: 	leaq	0x1fc0(%rsp), %rbx
    0000044c: 	movq	%rax, start_time(%rip)
    00000453: 	testl	%ecx, %ecx
    00000455: 	jle	.Ltmp381 # Offset: 1109
    00000457: 	nopw	(%rax,%rax) # Size: 9
.Ltmp384:
    00000460: 	movq	%rbp, %rax
    00000463: 	pxor	%xmm0, %xmm0
    00000467: 	nopw	(%rax,%rax) # Size: 9
.Ltmp382:
    00000470: 	paddb	(%rax), %xmm0
    00000474: 	addq	$0x10, %rax
    00000478: 	cmpq	%rbx, %rax
    0000047b: 	jne	.Ltmp382 # Offset: 1147
    0000047d: 	movdqa	%xmm0, %xmm1
    00000481: 	cvttsd2si	init_value(%rip), %edx
    00000489: 	psrldq	$0x8, %xmm1
    0000048e: 	paddb	%xmm1, %xmm0
    00000492: 	pxor	%xmm1, %xmm1
    00000496: 	psadbw	%xmm1, %xmm0
    0000049a: 	movd	%xmm0, %eax
    0000049e: 	shll	$0x6, %edx
    000004a1: 	cmpb	%al, %dl
    000004a3: 	je	.Ltmp383 # Offset: 1187
    000004a5: 	movl	current_test(%rip), %edx
    000004ab: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000004b2: 	movl	$0x1, %edi
    000004b7: 	xorl	%eax, %eax
    000004b9: 	callq	__printf_chk@PLT # Offset: 1209
    000004be: 	movl	iterations(%rip), %ecx
.Ltmp383:
    000004c4: 	addl	$0x1, %r13d
    000004c8: 	cmpl	%ecx, %r13d
    000004cb: 	jl	.Ltmp384 # Offset: 1227
.Ltmp381:
    000004cd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000004d4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000004db: 	subq	$0x20, %rax
    000004df: 	cmpq	%rax, %rbx
    000004e2: 	je	.Ltmp385 # Offset: 1250
    000004e8: 	leaq	0x10(%rbx), %rdi
    000004ec: 	movq	0x68(%rsp), %r13
    000004f1: 	movq	%rdi, (%rbx)
    000004f4: 	movq	0x60(%rsp), %rax
    000004f9: 	movq	%rax, %rsi
    000004fc: 	movq	%rax, 0x18(%rsp)
    00000501: 	addq	%r13, %rsi
    00000504: 	je	.Ltmp386 # Offset: 1284
    00000506: 	testq	%rax, %rax
    00000509: 	je	.Ltmp387 # Offset: 1289
.Ltmp386:
    0000050f: 	movq	%r13, 0x20(%rsp)
    00000514: 	cmpq	$0xf, %r13
    00000518: 	ja	.Ltmp388 # Offset: 1304
    0000051e: 	cmpq	$0x1, %r13
    00000522: 	jne	.Ltmp389 # Offset: 1314
    00000528: 	movq	0x18(%rsp), %rax
    0000052d: 	movzbl	(%rax), %eax
    00000530: 	movb	%al, 0x10(%rbx)
.Ltmp556:
    00000533: 	movq	%r13, 0x8(%rbx)
    00000537: 	movb	$0x0, (%rdi,%r13)
    0000053c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000543: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000054a: 	addq	$0x20, %rax
    0000054e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000555: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000055c: 	je	.Ltmp390 # Offset: 1372
.Ltmp526:
    00000562: 	movq	-0x20(%rax), %r13
    00000566: 	callq	clock@PLT # Offset: 1382
    0000056b: 	pxor	%xmm0, %xmm0
    0000056f: 	movq	%rax, end_time(%rip)
    00000576: 	movq	%r13, %rdi
    00000579: 	subq	start_time(%rip), %rax
    00000580: 	cvtsi2sd	%rax, %xmm0
    00000585: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000058d: 	callq	_Z13record_resultdPKc # Offset: 1421
    00000592: 	movq	0x60(%rsp), %rdi
    00000597: 	cmpq	%r14, %rdi
    0000059a: 	je	.Ltmp391 # Offset: 1434
    0000059c: 	movq	0x70(%rsp), %rax
    000005a1: 	leaq	0x1(%rax), %rsi
    000005a5: 	callq	_ZdlPvm@PLT # Offset: 1445
.Ltmp391:
    000005aa: 	leaq	DATAat0x1a215(%rip), %rdx
    000005b1: 	movq	%r15, %rsi
    000005b4: 	movq	%r12, %rdi
    000005b7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1463
    000005bc: 	callq	clock@PLT # Offset: 1468
    000005c1: 	movl	iterations(%rip), %ecx
    000005c7: 	xorl	%r13d, %r13d
    000005ca: 	leaq	0x1fc0(%rsp), %rbx
    000005d2: 	movq	%rax, start_time(%rip)
    000005d9: 	testl	%ecx, %ecx
    000005db: 	jle	.Ltmp392 # Offset: 1499
    000005dd: 	nopl	(%rax) # Size: 3
.Ltmp395:
    000005e0: 	movq	%rbp, %rax
    000005e3: 	pxor	%xmm0, %xmm0
    000005e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp393:
    000005f0: 	paddb	(%rax), %xmm0
    000005f4: 	addq	$0x10, %rax
    000005f8: 	cmpq	%rbx, %rax
    000005fb: 	jne	.Ltmp393 # Offset: 1531
    000005fd: 	movdqa	%xmm0, %xmm1
    00000601: 	cvttsd2si	init_value(%rip), %edx
    00000609: 	psrldq	$0x8, %xmm1
    0000060e: 	paddb	%xmm1, %xmm0
    00000612: 	pxor	%xmm1, %xmm1
    00000616: 	psadbw	%xmm1, %xmm0
    0000061a: 	movd	%xmm0, %eax
    0000061e: 	shll	$0x6, %edx
    00000621: 	cmpb	%al, %dl
    00000623: 	je	.Ltmp394 # Offset: 1571
    00000625: 	movl	current_test(%rip), %edx
    0000062b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000632: 	movl	$0x1, %edi
    00000637: 	xorl	%eax, %eax
    00000639: 	callq	__printf_chk@PLT # Offset: 1593
    0000063e: 	movl	iterations(%rip), %ecx
.Ltmp394:
    00000644: 	addl	$0x1, %r13d
    00000648: 	cmpl	%ecx, %r13d
    0000064b: 	jl	.Ltmp395 # Offset: 1611
.Ltmp392:
    0000064d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000654: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000065b: 	subq	$0x20, %rax
    0000065f: 	cmpq	%rax, %rbx
    00000662: 	je	.Ltmp396 # Offset: 1634
    00000668: 	leaq	0x10(%rbx), %rdi
    0000066c: 	movq	0x68(%rsp), %r13
    00000671: 	movq	%rdi, (%rbx)
    00000674: 	movq	0x60(%rsp), %rax
    00000679: 	movq	%rax, %rsi
    0000067c: 	movq	%rax, 0x18(%rsp)
    00000681: 	addq	%r13, %rsi
    00000684: 	je	.Ltmp397 # Offset: 1668
    00000686: 	testq	%rax, %rax
    00000689: 	je	.Ltmp398 # Offset: 1673
.Ltmp397:
    0000068f: 	movq	%r13, 0x20(%rsp)
    00000694: 	cmpq	$0xf, %r13
    00000698: 	ja	.Ltmp399 # Offset: 1688
    0000069e: 	cmpq	$0x1, %r13
    000006a2: 	jne	.Ltmp400 # Offset: 1698
    000006a8: 	movq	0x18(%rsp), %rax
    000006ad: 	movzbl	(%rax), %eax
    000006b0: 	movb	%al, 0x10(%rbx)
.Ltmp539:
    000006b3: 	movq	%r13, 0x8(%rbx)
    000006b7: 	movb	$0x0, (%rdi,%r13)
    000006bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006c3: 	addq	$0x20, %rax
    000006c7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp536:
    000006ce: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006d5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006dc: 	je	.Ltmp401 # Offset: 1756
.Ltmp535:
    000006e2: 	movq	-0x20(%rax), %r13
    000006e6: 	callq	clock@PLT # Offset: 1766
    000006eb: 	pxor	%xmm0, %xmm0
    000006ef: 	movq	%rax, end_time(%rip)
    000006f6: 	movq	%r13, %rdi
    000006f9: 	subq	start_time(%rip), %rax
    00000700: 	cvtsi2sd	%rax, %xmm0
    00000705: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000070d: 	callq	_Z13record_resultdPKc # Offset: 1805
    00000712: 	movq	0x60(%rsp), %rdi
    00000717: 	cmpq	%r14, %rdi
    0000071a: 	je	.Ltmp402 # Offset: 1818
    0000071c: 	movq	0x70(%rsp), %rax
    00000721: 	leaq	0x1(%rax), %rsi
    00000725: 	callq	_ZdlPvm@PLT # Offset: 1829
.Ltmp402:
    0000072a: 	leaq	DATAat0x1a226(%rip), %rdx
    00000731: 	movq	%r15, %rsi
    00000734: 	movq	%r12, %rdi
    00000737: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1847
    0000073c: 	callq	clock@PLT # Offset: 1852
    00000741: 	movl	iterations(%rip), %ecx
    00000747: 	xorl	%r13d, %r13d
    0000074a: 	leaq	0x1fc0(%rsp), %rbx
    00000752: 	movq	%rax, start_time(%rip)
    00000759: 	testl	%ecx, %ecx
    0000075b: 	jle	.Ltmp403 # Offset: 1883
    0000075d: 	nopl	(%rax) # Size: 3
.Ltmp406:
    00000760: 	movq	%rbp, %rax
    00000763: 	pxor	%xmm0, %xmm0
    00000767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp404:
    00000770: 	paddb	(%rax), %xmm0
    00000774: 	addq	$0x10, %rax
    00000778: 	cmpq	%rax, %rbx
    0000077b: 	jne	.Ltmp404 # Offset: 1915
    0000077d: 	movdqa	%xmm0, %xmm1
    00000781: 	cvttsd2si	init_value(%rip), %edx
    00000789: 	psrldq	$0x8, %xmm1
    0000078e: 	paddb	%xmm1, %xmm0
    00000792: 	pxor	%xmm1, %xmm1
    00000796: 	psadbw	%xmm1, %xmm0
    0000079a: 	movd	%xmm0, %eax
    0000079e: 	shll	$0x6, %edx
    000007a1: 	cmpb	%al, %dl
    000007a3: 	je	.Ltmp405 # Offset: 1955
    000007a5: 	movl	current_test(%rip), %edx
    000007ab: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000007b2: 	movl	$0x1, %edi
    000007b7: 	xorl	%eax, %eax
    000007b9: 	callq	__printf_chk@PLT # Offset: 1977
    000007be: 	movl	iterations(%rip), %ecx
.Ltmp405:
    000007c4: 	addl	$0x1, %r13d
    000007c8: 	cmpl	%ecx, %r13d
    000007cb: 	jl	.Ltmp406 # Offset: 1995
.Ltmp403:
    000007cd: 	movq	%r12, %rdi
    000007d0: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2000
    000007d5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007dc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007e3: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007ea: 	je	.Ltmp407 # Offset: 2026
.Ltmp534:
    000007f0: 	movq	-0x20(%rax), %r13
    000007f4: 	callq	clock@PLT # Offset: 2036
    000007f9: 	pxor	%xmm0, %xmm0
    000007fd: 	movq	%rax, end_time(%rip)
    00000804: 	movq	%r13, %rdi
    00000807: 	subq	start_time(%rip), %rax
    0000080e: 	cvtsi2sd	%rax, %xmm0
    00000813: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000081b: 	callq	_Z13record_resultdPKc # Offset: 2075
    00000820: 	movq	0x60(%rsp), %rdi
    00000825: 	cmpq	%r14, %rdi
    00000828: 	je	.Ltmp408 # Offset: 2088
    0000082a: 	movq	0x70(%rsp), %rax
    0000082f: 	leaq	0x1(%rax), %rsi
    00000833: 	callq	_ZdlPvm@PLT # Offset: 2099
.Ltmp408:
    00000838: 	leaq	DATAat0x1a238(%rip), %rdx
    0000083f: 	movq	%r15, %rsi
    00000842: 	movq	%r12, %rdi
    00000845: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2117
    0000084a: 	callq	clock@PLT # Offset: 2122
    0000084f: 	movl	iterations(%rip), %ecx
    00000855: 	xorl	%r13d, %r13d
    00000858: 	leaq	0x1fc0(%rsp), %rbx
    00000860: 	movq	%rax, start_time(%rip)
    00000867: 	testl	%ecx, %ecx
    00000869: 	jle	.Ltmp409 # Offset: 2153
    0000086b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp412:
    00000870: 	movq	%rbp, %rax
    00000873: 	pxor	%xmm0, %xmm0
    00000877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp410:
    00000880: 	paddb	(%rax), %xmm0
    00000884: 	addq	$0x10, %rax
    00000888: 	cmpq	%rbx, %rax
    0000088b: 	jne	.Ltmp410 # Offset: 2187
    0000088d: 	movdqa	%xmm0, %xmm1
    00000891: 	cvttsd2si	init_value(%rip), %edx
    00000899: 	psrldq	$0x8, %xmm1
    0000089e: 	paddb	%xmm1, %xmm0
    000008a2: 	pxor	%xmm1, %xmm1
    000008a6: 	psadbw	%xmm1, %xmm0
    000008aa: 	movd	%xmm0, %eax
    000008ae: 	shll	$0x6, %edx
    000008b1: 	cmpb	%al, %dl
    000008b3: 	je	.Ltmp411 # Offset: 2227
    000008b5: 	movl	current_test(%rip), %edx
    000008bb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000008c2: 	movl	$0x1, %edi
    000008c7: 	xorl	%eax, %eax
    000008c9: 	callq	__printf_chk@PLT # Offset: 2249
    000008ce: 	movl	iterations(%rip), %ecx
.Ltmp411:
    000008d4: 	addl	$0x1, %r13d
    000008d8: 	cmpl	%ecx, %r13d
    000008db: 	jl	.Ltmp412 # Offset: 2267
.Ltmp409:
    000008dd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008e4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000008eb: 	subq	$0x20, %rax
    000008ef: 	cmpq	%rax, %rbx
    000008f2: 	je	.Ltmp413 # Offset: 2290
    000008f8: 	leaq	0x10(%rbx), %rdi
    000008fc: 	movq	0x68(%rsp), %r13
    00000901: 	movq	%rdi, (%rbx)
    00000904: 	movq	0x60(%rsp), %rax
    00000909: 	movq	%rax, %rsi
    0000090c: 	movq	%rax, 0x18(%rsp)
    00000911: 	addq	%r13, %rsi
    00000914: 	je	.Ltmp414 # Offset: 2324
    00000916: 	testq	%rax, %rax
    00000919: 	je	.Ltmp415 # Offset: 2329
.Ltmp414:
    0000091f: 	movq	%r13, 0x20(%rsp)
    00000924: 	cmpq	$0xf, %r13
    00000928: 	ja	.Ltmp416 # Offset: 2344
    0000092e: 	cmpq	$0x1, %r13
    00000932: 	jne	.Ltmp417 # Offset: 2354
    00000938: 	movq	0x18(%rsp), %rax
    0000093d: 	movzbl	(%rax), %eax
    00000940: 	movb	%al, 0x10(%rbx)
.Ltmp537:
    00000943: 	movq	%r13, 0x8(%rbx)
    00000947: 	movb	$0x0, (%rdi,%r13)
    0000094c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000953: 	addq	$0x20, %rax
    00000957: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp533:
    0000095e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000965: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000096c: 	je	.Ltmp418 # Offset: 2412
.Ltmp532:
    00000972: 	movq	-0x20(%rax), %r13
    00000976: 	callq	clock@PLT # Offset: 2422
    0000097b: 	pxor	%xmm0, %xmm0
    0000097f: 	movq	%rax, end_time(%rip)
    00000986: 	movq	%r13, %rdi
    00000989: 	subq	start_time(%rip), %rax
    00000990: 	cvtsi2sd	%rax, %xmm0
    00000995: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000099d: 	callq	_Z13record_resultdPKc # Offset: 2461
    000009a2: 	movq	0x60(%rsp), %rdi
    000009a7: 	cmpq	%r14, %rdi
    000009aa: 	je	.Ltmp419 # Offset: 2474
    000009ac: 	movq	0x70(%rsp), %rax
    000009b1: 	leaq	0x1(%rax), %rsi
    000009b5: 	callq	_ZdlPvm@PLT # Offset: 2485
.Ltmp419:
    000009ba: 	leaq	DATAat0x1a24a(%rip), %rdx
    000009c1: 	movq	%r15, %rsi
    000009c4: 	movq	%r12, %rdi
    000009c7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2503
    000009cc: 	callq	clock@PLT # Offset: 2508
    000009d1: 	movl	iterations(%rip), %ecx
    000009d7: 	xorl	%r13d, %r13d
    000009da: 	leaq	0x1fc0(%rsp), %rbx
    000009e2: 	movq	%rax, start_time(%rip)
    000009e9: 	testl	%ecx, %ecx
    000009eb: 	jle	.Ltmp420 # Offset: 2539
    000009ed: 	nopl	(%rax) # Size: 3
.Ltmp423:
    000009f0: 	movq	%rbp, %rax
    000009f3: 	pxor	%xmm0, %xmm0
    000009f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp421:
    00000a00: 	paddb	(%rax), %xmm0
    00000a04: 	addq	$0x10, %rax
    00000a08: 	cmpq	%rax, %rbx
    00000a0b: 	jne	.Ltmp421 # Offset: 2571
    00000a0d: 	movdqa	%xmm0, %xmm1
    00000a11: 	cvttsd2si	init_value(%rip), %edx
    00000a19: 	psrldq	$0x8, %xmm1
    00000a1e: 	paddb	%xmm1, %xmm0
    00000a22: 	pxor	%xmm1, %xmm1
    00000a26: 	psadbw	%xmm1, %xmm0
    00000a2a: 	movd	%xmm0, %eax
    00000a2e: 	shll	$0x6, %edx
    00000a31: 	cmpb	%al, %dl
    00000a33: 	je	.Ltmp422 # Offset: 2611
    00000a35: 	movl	current_test(%rip), %edx
    00000a3b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000a42: 	movl	$0x1, %edi
    00000a47: 	xorl	%eax, %eax
    00000a49: 	callq	__printf_chk@PLT # Offset: 2633
    00000a4e: 	movl	iterations(%rip), %ecx
.Ltmp422:
    00000a54: 	addl	$0x1, %r13d
    00000a58: 	cmpl	%ecx, %r13d
    00000a5b: 	jl	.Ltmp423 # Offset: 2651
.Ltmp420:
    00000a5d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000a64: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000a6b: 	subq	$0x20, %rax
    00000a6f: 	cmpq	%rax, %rbx
    00000a72: 	je	.Ltmp424 # Offset: 2674
    00000a78: 	leaq	0x10(%rbx), %rdi
    00000a7c: 	movq	0x68(%rsp), %r13
    00000a81: 	movq	%rdi, (%rbx)
    00000a84: 	movq	0x60(%rsp), %rax
    00000a89: 	movq	%rax, %rsi
    00000a8c: 	movq	%rax, 0x18(%rsp)
    00000a91: 	addq	%r13, %rsi
    00000a94: 	je	.Ltmp425 # Offset: 2708
    00000a96: 	testq	%rax, %rax
    00000a99: 	je	.Ltmp426 # Offset: 2713
.Ltmp425:
    00000a9f: 	movq	%r13, 0x20(%rsp)
    00000aa4: 	cmpq	$0xf, %r13
    00000aa8: 	ja	.Ltmp427 # Offset: 2728
    00000aae: 	cmpq	$0x1, %r13
    00000ab2: 	jne	.Ltmp428 # Offset: 2738
    00000ab8: 	movq	0x18(%rsp), %rax
    00000abd: 	movzbl	(%rax), %eax
    00000ac0: 	movb	%al, 0x10(%rbx)
.Ltmp541:
    00000ac3: 	movq	%r13, 0x8(%rbx)
    00000ac7: 	movb	$0x0, (%rdi,%r13)
    00000acc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ad3: 	addq	$0x20, %rax
    00000ad7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp531:
    00000ade: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ae5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000aec: 	je	.Ltmp429 # Offset: 2796
.Ltmp530:
    00000af2: 	movq	-0x20(%rax), %r13
    00000af6: 	callq	clock@PLT # Offset: 2806
    00000afb: 	pxor	%xmm0, %xmm0
    00000aff: 	movq	%rax, end_time(%rip)
    00000b06: 	movq	%r13, %rdi
    00000b09: 	subq	start_time(%rip), %rax
    00000b10: 	cvtsi2sd	%rax, %xmm0
    00000b15: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000b1d: 	callq	_Z13record_resultdPKc # Offset: 2845
    00000b22: 	movq	0x60(%rsp), %rdi
    00000b27: 	cmpq	%r14, %rdi
    00000b2a: 	je	.Ltmp430 # Offset: 2858
    00000b2c: 	movq	0x70(%rsp), %rax
    00000b31: 	leaq	0x1(%rax), %rsi
    00000b35: 	callq	_ZdlPvm@PLT # Offset: 2869
.Ltmp430:
    00000b3a: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000b41: 	movq	%r15, %rsi
    00000b44: 	movq	%r12, %rdi
    00000b47: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2887
    00000b4c: 	callq	clock@PLT # Offset: 2892
    00000b51: 	movl	iterations(%rip), %ecx
    00000b57: 	xorl	%r13d, %r13d
    00000b5a: 	leaq	0x1fc0(%rsp), %rbx
    00000b62: 	movq	%rax, start_time(%rip)
    00000b69: 	testl	%ecx, %ecx
    00000b6b: 	jle	.Ltmp431 # Offset: 2923
    00000b6d: 	nopl	(%rax) # Size: 3
.Ltmp434:
    00000b70: 	movq	%rbp, %rax
    00000b73: 	pxor	%xmm0, %xmm0
    00000b77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp432:
    00000b80: 	paddb	(%rax), %xmm0
    00000b84: 	addq	$0x10, %rax
    00000b88: 	cmpq	%rbx, %rax
    00000b8b: 	jne	.Ltmp432 # Offset: 2955
    00000b8d: 	movdqa	%xmm0, %xmm1
    00000b91: 	cvttsd2si	init_value(%rip), %edx
    00000b99: 	psrldq	$0x8, %xmm1
    00000b9e: 	paddb	%xmm1, %xmm0
    00000ba2: 	pxor	%xmm1, %xmm1
    00000ba6: 	psadbw	%xmm1, %xmm0
    00000baa: 	movd	%xmm0, %eax
    00000bae: 	shll	$0x6, %edx
    00000bb1: 	cmpb	%al, %dl
    00000bb3: 	je	.Ltmp433 # Offset: 2995
    00000bb5: 	movl	current_test(%rip), %edx
    00000bbb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000bc2: 	movl	$0x1, %edi
    00000bc7: 	xorl	%eax, %eax
    00000bc9: 	callq	__printf_chk@PLT # Offset: 3017
    00000bce: 	movl	iterations(%rip), %ecx
.Ltmp433:
    00000bd4: 	addl	$0x1, %r13d
    00000bd8: 	cmpl	%ecx, %r13d
    00000bdb: 	jl	.Ltmp434 # Offset: 3035
.Ltmp431:
    00000bdd: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000be4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000beb: 	subq	$0x20, %rax
    00000bef: 	cmpq	%rax, %rbx
    00000bf2: 	je	.Ltmp435 # Offset: 3058
    00000bf8: 	leaq	0x10(%rbx), %rdi
    00000bfc: 	movq	0x68(%rsp), %r13
    00000c01: 	movq	%rdi, (%rbx)
    00000c04: 	movq	0x60(%rsp), %rax
    00000c09: 	movq	%rax, %rsi
    00000c0c: 	movq	%rax, 0x18(%rsp)
    00000c11: 	addq	%r13, %rsi
    00000c14: 	je	.Ltmp436 # Offset: 3092
    00000c16: 	testq	%rax, %rax
    00000c19: 	je	.Ltmp437 # Offset: 3097
.Ltmp436:
    00000c1f: 	movq	%r13, 0x20(%rsp)
    00000c24: 	cmpq	$0xf, %r13
    00000c28: 	ja	.Ltmp438 # Offset: 3112
    00000c2e: 	cmpq	$0x1, %r13
    00000c32: 	jne	.Ltmp439 # Offset: 3122
    00000c38: 	movq	0x18(%rsp), %rax
    00000c3d: 	movzbl	(%rax), %eax
    00000c40: 	movb	%al, 0x10(%rbx)
.Ltmp557:
    00000c43: 	movq	%r13, 0x8(%rbx)
    00000c47: 	movb	$0x0, (%rdi,%r13)
    00000c4c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c53: 	addq	$0x20, %rax
    00000c57: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp529:
    00000c5e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c65: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c6c: 	je	.Ltmp440 # Offset: 3180
.Ltmp522:
    00000c72: 	movq	-0x20(%rax), %r13
    00000c76: 	callq	clock@PLT # Offset: 3190
    00000c7b: 	pxor	%xmm0, %xmm0
    00000c7f: 	movq	%rax, end_time(%rip)
    00000c86: 	movq	%r13, %rdi
    00000c89: 	subq	start_time(%rip), %rax
    00000c90: 	cvtsi2sd	%rax, %xmm0
    00000c95: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000c9d: 	callq	_Z13record_resultdPKc # Offset: 3229
    00000ca2: 	movq	0x60(%rsp), %rdi
    00000ca7: 	cmpq	%r14, %rdi
    00000caa: 	je	.Ltmp441 # Offset: 3242
    00000cac: 	movq	0x70(%rsp), %rax
    00000cb1: 	leaq	0x1(%rax), %rsi
    00000cb5: 	callq	_ZdlPvm@PLT # Offset: 3253
.Ltmp441:
    00000cba: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000cc1: 	movq	%r15, %rsi
    00000cc4: 	movq	%r12, %rdi
    00000cc7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3271
    00000ccc: 	callq	clock@PLT # Offset: 3276
    00000cd1: 	movl	iterations(%rip), %ecx
    00000cd7: 	xorl	%r13d, %r13d
    00000cda: 	leaq	0x1fc0(%rsp), %rbx
    00000ce2: 	movq	%rax, start_time(%rip)
    00000ce9: 	testl	%ecx, %ecx
    00000ceb: 	jle	.Ltmp442 # Offset: 3307
    00000ced: 	nopl	(%rax) # Size: 3
.Ltmp445:
    00000cf0: 	movq	%rbp, %rax
    00000cf3: 	pxor	%xmm0, %xmm0
    00000cf7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp443:
    00000d00: 	paddb	(%rax), %xmm0
    00000d04: 	addq	$0x10, %rax
    00000d08: 	cmpq	%rax, %rbx
    00000d0b: 	jne	.Ltmp443 # Offset: 3339
    00000d0d: 	movdqa	%xmm0, %xmm1
    00000d11: 	cvttsd2si	init_value(%rip), %edx
    00000d19: 	psrldq	$0x8, %xmm1
    00000d1e: 	paddb	%xmm1, %xmm0
    00000d22: 	pxor	%xmm1, %xmm1
    00000d26: 	psadbw	%xmm1, %xmm0
    00000d2a: 	movd	%xmm0, %eax
    00000d2e: 	shll	$0x6, %edx
    00000d31: 	cmpb	%al, %dl
    00000d33: 	je	.Ltmp444 # Offset: 3379
    00000d35: 	movl	current_test(%rip), %edx
    00000d3b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000d42: 	movl	$0x1, %edi
    00000d47: 	xorl	%eax, %eax
    00000d49: 	callq	__printf_chk@PLT # Offset: 3401
    00000d4e: 	movl	iterations(%rip), %ecx
.Ltmp444:
    00000d54: 	addl	$0x1, %r13d
    00000d58: 	cmpl	%ecx, %r13d
    00000d5b: 	jl	.Ltmp445 # Offset: 3419
.Ltmp442:
    00000d5d: 	movq	%r12, %rdi
    00000d60: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3424
    00000d65: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d6c: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d73: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d7a: 	je	.Ltmp446 # Offset: 3450
.Ltmp521:
    00000d80: 	movq	-0x20(%rax), %r13
    00000d84: 	callq	clock@PLT # Offset: 3460
    00000d89: 	pxor	%xmm0, %xmm0
    00000d8d: 	movq	%rax, end_time(%rip)
    00000d94: 	movq	%r13, %rdi
    00000d97: 	subq	start_time(%rip), %rax
    00000d9e: 	cvtsi2sd	%rax, %xmm0
    00000da3: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000dab: 	callq	_Z13record_resultdPKc # Offset: 3499
    00000db0: 	movq	0x60(%rsp), %rdi
    00000db5: 	cmpq	%r14, %rdi
    00000db8: 	je	.Ltmp447 # Offset: 3512
    00000dba: 	movq	0x70(%rsp), %rax
    00000dbf: 	leaq	0x1(%rax), %rsi
    00000dc3: 	callq	_ZdlPvm@PLT # Offset: 3523
.Ltmp447:
    00000dc8: 	leaq	DATAat0x1a27b(%rip), %rdx
    00000dcf: 	movq	%r15, %rsi
    00000dd2: 	movq	%r12, %rdi
    00000dd5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3541
    00000dda: 	callq	clock@PLT # Offset: 3546
    00000ddf: 	movl	iterations(%rip), %ecx
    00000de5: 	xorl	%r13d, %r13d
    00000de8: 	leaq	0x1fc0(%rsp), %rbx
    00000df0: 	movq	%rax, start_time(%rip)
    00000df7: 	testl	%ecx, %ecx
    00000df9: 	jle	.Ltmp448 # Offset: 3577
    00000dfb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp451:
    00000e00: 	movq	%rbp, %rax
    00000e03: 	pxor	%xmm0, %xmm0
    00000e07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp449:
    00000e10: 	paddb	(%rax), %xmm0
    00000e14: 	addq	$0x10, %rax
    00000e18: 	cmpq	%rbx, %rax
    00000e1b: 	jne	.Ltmp449 # Offset: 3611
    00000e1d: 	movdqa	%xmm0, %xmm1
    00000e21: 	cvttsd2si	init_value(%rip), %edx
    00000e29: 	psrldq	$0x8, %xmm1
    00000e2e: 	paddb	%xmm1, %xmm0
    00000e32: 	pxor	%xmm1, %xmm1
    00000e36: 	psadbw	%xmm1, %xmm0
    00000e3a: 	movd	%xmm0, %eax
    00000e3e: 	shll	$0x6, %edx
    00000e41: 	cmpb	%al, %dl
    00000e43: 	je	.Ltmp450 # Offset: 3651
    00000e45: 	movl	current_test(%rip), %edx
    00000e4b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000e52: 	movl	$0x1, %edi
    00000e57: 	xorl	%eax, %eax
    00000e59: 	callq	__printf_chk@PLT # Offset: 3673
    00000e5e: 	movl	iterations(%rip), %ecx
.Ltmp450:
    00000e64: 	addl	$0x1, %r13d
    00000e68: 	cmpl	%ecx, %r13d
    00000e6b: 	jl	.Ltmp451 # Offset: 3691
.Ltmp448:
    00000e6d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e74: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000e7b: 	subq	$0x20, %rax
    00000e7f: 	cmpq	%rax, %rbx
    00000e82: 	je	.Ltmp452 # Offset: 3714
    00000e88: 	leaq	0x10(%rbx), %rdi
    00000e8c: 	movq	0x68(%rsp), %r13
    00000e91: 	movq	%rdi, (%rbx)
    00000e94: 	movq	0x60(%rsp), %rax
    00000e99: 	movq	%rax, %rsi
    00000e9c: 	movq	%rax, 0x18(%rsp)
    00000ea1: 	addq	%r13, %rsi
    00000ea4: 	je	.Ltmp453 # Offset: 3748
    00000ea6: 	testq	%rax, %rax
    00000ea9: 	je	.Ltmp454 # Offset: 3753
.Ltmp453:
    00000eaf: 	movq	%r13, 0x20(%rsp)
    00000eb4: 	cmpq	$0xf, %r13
    00000eb8: 	ja	.Ltmp455 # Offset: 3768
    00000ebe: 	cmpq	$0x1, %r13
    00000ec2: 	jne	.Ltmp456 # Offset: 3778
    00000ec8: 	movq	0x18(%rsp), %rax
    00000ecd: 	movzbl	(%rax), %eax
    00000ed0: 	movb	%al, 0x10(%rbx)
.Ltmp550:
    00000ed3: 	movq	%r13, 0x8(%rbx)
    00000ed7: 	movb	$0x0, (%rdi,%r13)
    00000edc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ee3: 	addq	$0x20, %rax
    00000ee7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp520:
    00000eee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ef5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000efc: 	je	.Ltmp457 # Offset: 3836
.Ltmp519:
    00000f02: 	movq	-0x20(%rax), %r13
    00000f06: 	callq	clock@PLT # Offset: 3846
    00000f0b: 	pxor	%xmm0, %xmm0
    00000f0f: 	movq	%rax, end_time(%rip)
    00000f16: 	movq	%r13, %rdi
    00000f19: 	subq	start_time(%rip), %rax
    00000f20: 	cvtsi2sd	%rax, %xmm0
    00000f25: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000f2d: 	callq	_Z13record_resultdPKc # Offset: 3885
    00000f32: 	movq	0x60(%rsp), %rdi
    00000f37: 	cmpq	%r14, %rdi
    00000f3a: 	je	.Ltmp458 # Offset: 3898
    00000f3c: 	movq	0x70(%rsp), %rax
    00000f41: 	leaq	0x1(%rax), %rsi
    00000f45: 	callq	_ZdlPvm@PLT # Offset: 3909
.Ltmp458:
    00000f4a: 	leaq	DATAat0x1a28b(%rip), %rdx
    00000f51: 	movq	%r15, %rsi
    00000f54: 	movq	%r12, %rdi
    00000f57: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3927
    00000f5c: 	callq	clock@PLT # Offset: 3932
    00000f61: 	movl	iterations(%rip), %ecx
    00000f67: 	xorl	%r13d, %r13d
    00000f6a: 	leaq	0x1fc0(%rsp), %rbx
    00000f72: 	movq	%rax, start_time(%rip)
    00000f79: 	testl	%ecx, %ecx
    00000f7b: 	jle	.Ltmp459 # Offset: 3963
    00000f7d: 	nopl	(%rax) # Size: 3
.Ltmp462:
    00000f80: 	movq	%rbp, %rax
    00000f83: 	pxor	%xmm0, %xmm0
    00000f87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp460:
    00000f90: 	paddb	(%rax), %xmm0
    00000f94: 	addq	$0x10, %rax
    00000f98: 	cmpq	%rax, %rbx
    00000f9b: 	jne	.Ltmp460 # Offset: 3995
    00000f9d: 	movdqa	%xmm0, %xmm1
    00000fa1: 	cvttsd2si	init_value(%rip), %edx
    00000fa9: 	psrldq	$0x8, %xmm1
    00000fae: 	paddb	%xmm1, %xmm0
    00000fb2: 	pxor	%xmm1, %xmm1
    00000fb6: 	psadbw	%xmm1, %xmm0
    00000fba: 	movd	%xmm0, %eax
    00000fbe: 	shll	$0x6, %edx
    00000fc1: 	cmpb	%al, %dl
    00000fc3: 	je	.Ltmp461 # Offset: 4035
    00000fc5: 	movl	current_test(%rip), %edx
    00000fcb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000fd2: 	movl	$0x1, %edi
    00000fd7: 	xorl	%eax, %eax
    00000fd9: 	callq	__printf_chk@PLT # Offset: 4057
    00000fde: 	movl	iterations(%rip), %ecx
.Ltmp461:
    00000fe4: 	addl	$0x1, %r13d
    00000fe8: 	cmpl	%ecx, %r13d
    00000feb: 	jl	.Ltmp462 # Offset: 4075
.Ltmp459:
    00000fed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ff4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00000ffb: 	subq	$0x20, %rax
    00000fff: 	cmpq	%rax, %rbx
    00001002: 	je	.Ltmp463 # Offset: 4098
    00001008: 	leaq	0x10(%rbx), %rdi
    0000100c: 	movq	0x68(%rsp), %r13
    00001011: 	movq	%rdi, (%rbx)
    00001014: 	movq	0x60(%rsp), %rax
    00001019: 	movq	%rax, %rsi
    0000101c: 	movq	%rax, 0x18(%rsp)
    00001021: 	addq	%r13, %rsi
    00001024: 	je	.Ltmp464 # Offset: 4132
    00001026: 	testq	%rax, %rax
    00001029: 	je	.Ltmp465 # Offset: 4137
.Ltmp464:
    0000102f: 	movq	%r13, 0x20(%rsp)
    00001034: 	cmpq	$0xf, %r13
    00001038: 	ja	.Ltmp466 # Offset: 4152
    0000103e: 	cmpq	$0x1, %r13
    00001042: 	jne	.Ltmp467 # Offset: 4162
    00001048: 	movq	0x18(%rsp), %rax
    0000104d: 	movzbl	(%rax), %eax
    00001050: 	movb	%al, 0x10(%rbx)
.Ltmp548:
    00001053: 	movq	%r13, 0x8(%rbx)
    00001057: 	movb	$0x0, (%rdi,%r13)
    0000105c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001063: 	addq	$0x20, %rax
    00001067: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp518:
    0000106e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001075: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000107c: 	je	.Ltmp468 # Offset: 4220
.Ltmp517:
    00001082: 	movq	-0x20(%rax), %r13
    00001086: 	callq	clock@PLT # Offset: 4230
    0000108b: 	pxor	%xmm0, %xmm0
    0000108f: 	movq	%rax, end_time(%rip)
    00001096: 	movq	%r13, %rdi
    00001099: 	subq	start_time(%rip), %rax
    000010a0: 	cvtsi2sd	%rax, %xmm0
    000010a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010ad: 	callq	_Z13record_resultdPKc # Offset: 4269
    000010b2: 	movq	0x60(%rsp), %rdi
    000010b7: 	cmpq	%r14, %rdi
    000010ba: 	je	.Ltmp469 # Offset: 4282
    000010bc: 	movq	0x70(%rsp), %rax
    000010c1: 	leaq	0x1(%rax), %rsi
    000010c5: 	callq	_ZdlPvm@PLT # Offset: 4293
.Ltmp469:
    000010ca: 	leaq	DATAat0x1a29b(%rip), %rdx
    000010d1: 	movq	%r15, %rsi
    000010d4: 	movq	%r12, %rdi
    000010d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4311
    000010dc: 	callq	clock@PLT # Offset: 4316
    000010e1: 	movl	iterations(%rip), %ecx
    000010e7: 	xorl	%r13d, %r13d
    000010ea: 	leaq	0x1fc0(%rsp), %rbx
    000010f2: 	movq	%rax, start_time(%rip)
    000010f9: 	testl	%ecx, %ecx
    000010fb: 	jle	.Ltmp470 # Offset: 4347
    000010fd: 	nopl	(%rax) # Size: 3
.Ltmp473:
    00001100: 	movq	%rbp, %rax
    00001103: 	pxor	%xmm0, %xmm0
    00001107: 	nopw	(%rax,%rax) # Size: 9
.Ltmp471:
    00001110: 	paddb	(%rax), %xmm0
    00001114: 	addq	$0x10, %rax
    00001118: 	cmpq	%rbx, %rax
    0000111b: 	jne	.Ltmp471 # Offset: 4379
    0000111d: 	movdqa	%xmm0, %xmm1
    00001121: 	cvttsd2si	init_value(%rip), %edx
    00001129: 	psrldq	$0x8, %xmm1
    0000112e: 	paddb	%xmm1, %xmm0
    00001132: 	pxor	%xmm1, %xmm1
    00001136: 	psadbw	%xmm1, %xmm0
    0000113a: 	movd	%xmm0, %eax
    0000113e: 	shll	$0x6, %edx
    00001141: 	cmpb	%al, %dl
    00001143: 	je	.Ltmp472 # Offset: 4419
    00001145: 	movl	current_test(%rip), %edx
    0000114b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001152: 	movl	$0x1, %edi
    00001157: 	xorl	%eax, %eax
    00001159: 	callq	__printf_chk@PLT # Offset: 4441
    0000115e: 	movl	iterations(%rip), %ecx
.Ltmp472:
    00001164: 	addl	$0x1, %r13d
    00001168: 	cmpl	%ecx, %r13d
    0000116b: 	jl	.Ltmp473 # Offset: 4459
.Ltmp470:
    0000116d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001174: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000117b: 	subq	$0x20, %rax
    0000117f: 	cmpq	%rax, %rbx
    00001182: 	je	.Ltmp474 # Offset: 4482
    00001188: 	leaq	0x10(%rbx), %rdi
    0000118c: 	movq	0x68(%rsp), %r13
    00001191: 	movq	%rdi, (%rbx)
    00001194: 	movq	0x60(%rsp), %rax
    00001199: 	movq	%rax, %rsi
    0000119c: 	movq	%rax, 0x18(%rsp)
    000011a1: 	addq	%r13, %rsi
    000011a4: 	je	.Ltmp475 # Offset: 4516
    000011a6: 	testq	%rax, %rax
    000011a9: 	je	.Ltmp476 # Offset: 4521
.Ltmp475:
    000011af: 	movq	%r13, 0x20(%rsp)
    000011b4: 	cmpq	$0xf, %r13
    000011b8: 	ja	.Ltmp477 # Offset: 4536
    000011be: 	cmpq	$0x1, %r13
    000011c2: 	jne	.Ltmp478 # Offset: 4546
    000011c8: 	movq	0x18(%rsp), %rax
    000011cd: 	movzbl	(%rax), %eax
    000011d0: 	movb	%al, 0x10(%rbx)
.Ltmp546:
    000011d3: 	movq	%r13, 0x8(%rbx)
    000011d7: 	movb	$0x0, (%rdi,%r13)
    000011dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011e3: 	addq	$0x20, %rax
    000011e7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp516:
    000011ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011fc: 	je	.Ltmp479 # Offset: 4604
.Ltmp515:
    00001202: 	movq	-0x20(%rax), %r13
    00001206: 	callq	clock@PLT # Offset: 4614
    0000120b: 	pxor	%xmm0, %xmm0
    0000120f: 	movq	%rax, end_time(%rip)
    00001216: 	movq	%r13, %rdi
    00001219: 	subq	start_time(%rip), %rax
    00001220: 	cvtsi2sd	%rax, %xmm0
    00001225: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000122d: 	callq	_Z13record_resultdPKc # Offset: 4653
    00001232: 	movq	0x60(%rsp), %rdi
    00001237: 	cmpq	%r14, %rdi
    0000123a: 	je	.Ltmp480 # Offset: 4666
    0000123c: 	movq	0x70(%rsp), %rax
    00001241: 	leaq	0x1(%rax), %rsi
    00001245: 	callq	_ZdlPvm@PLT # Offset: 4677
.Ltmp480:
    0000124a: 	leaq	DATAat0x1a2af(%rip), %rdx
    00001251: 	movq	%r15, %rsi
    00001254: 	movq	%r12, %rdi
    00001257: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4695
    0000125c: 	callq	clock@PLT # Offset: 4700
    00001261: 	movl	iterations(%rip), %ecx
    00001267: 	xorl	%r13d, %r13d
    0000126a: 	leaq	0x1fc0(%rsp), %rbx
    00001272: 	movq	%rax, start_time(%rip)
    00001279: 	testl	%ecx, %ecx
    0000127b: 	jle	.Ltmp481 # Offset: 4731
    0000127d: 	nopl	(%rax) # Size: 3
.Ltmp484:
    00001280: 	movq	%rbp, %rax
    00001283: 	pxor	%xmm0, %xmm0
    00001287: 	nopw	(%rax,%rax) # Size: 9
.Ltmp482:
    00001290: 	paddb	(%rax), %xmm0
    00001294: 	addq	$0x10, %rax
    00001298: 	cmpq	%rax, %rbx
    0000129b: 	jne	.Ltmp482 # Offset: 4763
    0000129d: 	movdqa	%xmm0, %xmm1
    000012a1: 	cvttsd2si	init_value(%rip), %edx
    000012a9: 	psrldq	$0x8, %xmm1
    000012ae: 	paddb	%xmm1, %xmm0
    000012b2: 	pxor	%xmm1, %xmm1
    000012b6: 	psadbw	%xmm1, %xmm0
    000012ba: 	movd	%xmm0, %eax
    000012be: 	shll	$0x6, %edx
    000012c1: 	cmpb	%al, %dl
    000012c3: 	je	.Ltmp483 # Offset: 4803
    000012c5: 	movl	current_test(%rip), %edx
    000012cb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000012d2: 	movl	$0x1, %edi
    000012d7: 	xorl	%eax, %eax
    000012d9: 	callq	__printf_chk@PLT # Offset: 4825
    000012de: 	movl	iterations(%rip), %ecx
.Ltmp483:
    000012e4: 	addl	$0x1, %r13d
    000012e8: 	cmpl	%ecx, %r13d
    000012eb: 	jl	.Ltmp484 # Offset: 4843
.Ltmp481:
    000012ed: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012f4: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000012fb: 	subq	$0x20, %rax
    000012ff: 	cmpq	%rax, %rbx
    00001302: 	je	.Ltmp485 # Offset: 4866
    00001308: 	leaq	0x10(%rbx), %rdi
    0000130c: 	movq	0x68(%rsp), %r13
    00001311: 	movq	%rdi, (%rbx)
    00001314: 	movq	0x60(%rsp), %rax
    00001319: 	movq	%rax, %rsi
    0000131c: 	movq	%rax, 0x18(%rsp)
    00001321: 	addq	%r13, %rsi
    00001324: 	je	.Ltmp486 # Offset: 4900
    00001326: 	testq	%rax, %rax
    00001329: 	je	.Ltmp487 # Offset: 4905
.Ltmp486:
    0000132f: 	movq	%r13, 0x20(%rsp)
    00001334: 	cmpq	$0xf, %r13
    00001338: 	ja	.Ltmp488 # Offset: 4920
    0000133e: 	cmpq	$0x1, %r13
    00001342: 	jne	.Ltmp489 # Offset: 4930
    00001348: 	movq	0x18(%rsp), %rax
    0000134d: 	movzbl	(%rax), %eax
    00001350: 	movb	%al, 0x10(%rbx)
.Ltmp552:
    00001353: 	movq	%r13, 0x8(%rbx)
    00001357: 	movb	$0x0, (%rdi,%r13)
    0000135c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001363: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000136a: 	addq	$0x20, %rax
    0000136e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001375: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000137c: 	je	.Ltmp490 # Offset: 4988
.Ltmp514:
    00001382: 	movq	-0x20(%rax), %r13
    00001386: 	callq	clock@PLT # Offset: 4998
    0000138b: 	pxor	%xmm0, %xmm0
    0000138f: 	movq	%rax, end_time(%rip)
    00001396: 	movq	%r13, %rdi
    00001399: 	subq	start_time(%rip), %rax
    000013a0: 	cvtsi2sd	%rax, %xmm0
    000013a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000013ad: 	callq	_Z13record_resultdPKc # Offset: 5037
    000013b2: 	movq	0x60(%rsp), %rdi
    000013b7: 	cmpq	%r14, %rdi
    000013ba: 	je	.Ltmp491 # Offset: 5050
    000013bc: 	movq	0x70(%rsp), %rax
    000013c1: 	leaq	0x1(%rax), %rsi
    000013c5: 	callq	_ZdlPvm@PLT # Offset: 5061
.Ltmp491:
    000013ca: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000013d1: 	movq	%r15, %rsi
    000013d4: 	movq	%r12, %rdi
    000013d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5079
    000013dc: 	callq	clock@PLT # Offset: 5084
    000013e1: 	movl	iterations(%rip), %ecx
    000013e7: 	xorl	%r13d, %r13d
    000013ea: 	leaq	0x1fc0(%rsp), %rbx
    000013f2: 	movq	%rax, start_time(%rip)
    000013f9: 	testl	%ecx, %ecx
    000013fb: 	jle	.Ltmp492 # Offset: 5115
    000013fd: 	nopl	(%rax) # Size: 3
.Ltmp495:
    00001400: 	movq	%rbp, %rax
    00001403: 	pxor	%xmm0, %xmm0
    00001407: 	nopw	(%rax,%rax) # Size: 9
.Ltmp493:
    00001410: 	paddb	(%rax), %xmm0
    00001414: 	addq	$0x10, %rax
    00001418: 	cmpq	%rbx, %rax
    0000141b: 	jne	.Ltmp493 # Offset: 5147
    0000141d: 	movdqa	%xmm0, %xmm1
    00001421: 	cvttsd2si	init_value(%rip), %edx
    00001429: 	psrldq	$0x8, %xmm1
    0000142e: 	paddb	%xmm1, %xmm0
    00001432: 	pxor	%xmm1, %xmm1
    00001436: 	psadbw	%xmm1, %xmm0
    0000143a: 	movd	%xmm0, %eax
    0000143e: 	shll	$0x6, %edx
    00001441: 	cmpb	%al, %dl
    00001443: 	je	.Ltmp494 # Offset: 5187
    00001445: 	movl	current_test(%rip), %edx
    0000144b: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001452: 	movl	$0x1, %edi
    00001457: 	xorl	%eax, %eax
    00001459: 	callq	__printf_chk@PLT # Offset: 5209
    0000145e: 	movl	iterations(%rip), %ecx
.Ltmp494:
    00001464: 	addl	$0x1, %r13d
    00001468: 	cmpl	%ecx, %r13d
    0000146b: 	jl	.Ltmp495 # Offset: 5227
.Ltmp492:
    0000146d: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001474: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    0000147b: 	subq	$0x20, %rax
    0000147f: 	cmpq	%rax, %rbx
    00001482: 	je	.Ltmp496 # Offset: 5250
    00001488: 	leaq	0x10(%rbx), %rdi
    0000148c: 	movq	0x68(%rsp), %r13
    00001491: 	movq	%rdi, (%rbx)
    00001494: 	movq	0x60(%rsp), %rax
    00001499: 	movq	%rax, %rsi
    0000149c: 	movq	%rax, 0x18(%rsp)
    000014a1: 	addq	%r13, %rsi
    000014a4: 	je	.Ltmp497 # Offset: 5284
    000014a6: 	testq	%rax, %rax
    000014a9: 	je	.Ltmp498 # Offset: 5289
.Ltmp497:
    000014af: 	movq	%r13, 0x20(%rsp)
    000014b4: 	cmpq	$0xf, %r13
    000014b8: 	ja	.Ltmp499 # Offset: 5304
    000014be: 	cmpq	$0x1, %r13
    000014c2: 	jne	.Ltmp500 # Offset: 5314
    000014c8: 	movq	0x18(%rsp), %rax
    000014cd: 	movzbl	(%rax), %eax
    000014d0: 	movb	%al, 0x10(%rbx)
.Ltmp554:
    000014d3: 	movq	%r13, 0x8(%rbx)
    000014d7: 	movb	$0x0, (%rdi,%r13)
    000014dc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014e3: 	addq	$0x20, %rax
    000014e7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp525:
    000014ee: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014f5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014fc: 	je	.Ltmp501 # Offset: 5372
.Ltmp524:
    00001502: 	movq	-0x20(%rax), %r13
    00001506: 	callq	clock@PLT # Offset: 5382
    0000150b: 	pxor	%xmm0, %xmm0
    0000150f: 	movq	%rax, end_time(%rip)
    00001516: 	movq	%r13, %rdi
    00001519: 	subq	start_time(%rip), %rax
    00001520: 	cvtsi2sd	%rax, %xmm0
    00001525: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000152d: 	callq	_Z13record_resultdPKc # Offset: 5421
    00001532: 	movq	0x60(%rsp), %rdi
    00001537: 	cmpq	%r14, %rdi
    0000153a: 	je	.Ltmp502 # Offset: 5434
    0000153c: 	movq	0x70(%rsp), %rax
    00001541: 	leaq	0x1(%rax), %rsi
    00001545: 	callq	_ZdlPvm@PLT # Offset: 5445
.Ltmp502:
    0000154a: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001551: 	movq	%r15, %rsi
    00001554: 	movq	%r12, %rdi
    00001557: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5463
    0000155c: 	callq	clock@PLT # Offset: 5468
    00001561: 	movl	iterations(%rip), %ecx
    00001567: 	xorl	%r13d, %r13d
    0000156a: 	leaq	0x1fc0(%rsp), %rbx
    00001572: 	movq	%rax, start_time(%rip)
    00001579: 	testl	%ecx, %ecx
    0000157b: 	jle	.Ltmp503 # Offset: 5499
    0000157d: 	nopl	(%rax) # Size: 3
.Ltmp506:
    00001580: 	movq	%rbp, %rax
    00001583: 	pxor	%xmm0, %xmm0
    00001587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp504:
    00001590: 	paddb	(%rax), %xmm0
    00001594: 	addq	$0x10, %rax
    00001598: 	cmpq	%rbx, %rax
    0000159b: 	jne	.Ltmp504 # Offset: 5531
    0000159d: 	movdqa	%xmm0, %xmm1
    000015a1: 	cvttsd2si	init_value(%rip), %edx
    000015a9: 	psrldq	$0x8, %xmm1
    000015ae: 	paddb	%xmm1, %xmm0
    000015b2: 	pxor	%xmm1, %xmm1
    000015b6: 	psadbw	%xmm1, %xmm0
    000015ba: 	movd	%xmm0, %eax
    000015be: 	shll	$0x6, %edx
    000015c1: 	cmpb	%al, %dl
    000015c3: 	je	.Ltmp505 # Offset: 5571
    000015c5: 	movl	current_test(%rip), %edx
    000015cb: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000015d2: 	movl	$0x1, %edi
    000015d7: 	xorl	%eax, %eax
    000015d9: 	callq	__printf_chk@PLT # Offset: 5593
    000015de: 	movl	iterations(%rip), %ecx
.Ltmp505:
    000015e4: 	addl	$0x1, %r13d
    000015e8: 	cmpl	%ecx, %r13d
    000015eb: 	jl	.Ltmp506 # Offset: 5611
.Ltmp503:
    000015ed: 	movq	%r12, %rdi
    000015f0: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5616
    000015f5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015fc: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001603: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000160a: 	je	.Ltmp507 # Offset: 5642
.Ltmp523:
    00001610: 	movq	-0x20(%rax), %rbp
    00001614: 	callq	clock@PLT # Offset: 5652
    00001619: 	pxor	%xmm0, %xmm0
    0000161d: 	movq	%rax, end_time(%rip)
    00001624: 	movq	%rbp, %rdi
    00001627: 	subq	start_time(%rip), %rax
    0000162e: 	cvtsi2sd	%rax, %xmm0
    00001633: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000163b: 	callq	_Z13record_resultdPKc # Offset: 5691
    00001640: 	movq	0x60(%rsp), %rdi
    00001645: 	cmpq	%r14, %rdi
    00001648: 	je	.Ltmp508 # Offset: 5704
    0000164a: 	movq	0x70(%rsp), %rax
    0000164f: 	leaq	0x1(%rax), %rsi
    00001653: 	callq	_ZdlPvm@PLT # Offset: 5715
.Ltmp508:
    00001658: 	leaq	DATAat0x1a2ee(%rip), %rdx
    0000165f: 	movq	%r15, %rsi
    00001662: 	movq	%r12, %rdi
    00001665: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5733
    0000166a: 	movl	iterations(%rip), %edx
    00001670: 	movq	0x60(%rsp), %rdi
    00001675: 	xorl	%r8d, %r8d
    00001678: 	xorl	%ecx, %ecx
    0000167a: 	movl	$0x1f40, %esi
    0000167f: 	callq	_Z9summarizePKciiii # Offset: 5759
    00001684: 	movq	0x60(%rsp), %rdi
    00001689: 	cmpq	%r14, %rdi
    0000168c: 	je	.Ltmp509 # Offset: 5772
    0000168e: 	movq	0x70(%rsp), %rax
    00001693: 	leaq	0x1(%rax), %rsi
    00001697: 	callq	_ZdlPvm@PLT # Offset: 5783
.Ltmp509:
    0000169c: 	movq	0x40(%rsp), %rdi
    000016a1: 	cmpq	0x10(%rsp), %rdi
    000016a6: 	je	.Ltmp510 # Offset: 5798
    000016a8: 	movq	0x50(%rsp), %rax
    000016ad: 	leaq	0x1(%rax), %rsi
    000016b1: 	callq	_ZdlPvm@PLT # Offset: 5809
.Ltmp510:
    000016b6: 	movq	0x1fc8(%rsp), %rax
    000016be: 	subq	%fs:0x28, %rax
    000016c7: 	jne	.Ltmp511 # Offset: 5831
    000016cd: 	addq	$0x1fd8, %rsp
    000016d4: 	popq	%rbx
    000016d5: 	popq	%rbp
    000016d6: 	popq	%r12
    000016d8: 	popq	%r13
    000016da: 	popq	%r14
    000016dc: 	popq	%r15
    000016de: 	retq # Offset: 5854
.Ltmp364:
    000016df: 	movq	0x8(%rsp), %rsi
    000016e4: 	xorl	%edx, %edx
    000016e6: 	movq	%rbx, %rdi
    000016e9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 5865
    000016ee: 	movq	%rax, (%rbx)
    000016f1: 	movq	%rax, %rdi
    000016f4: 	movq	0x20(%rsp), %rax
    000016f9: 	movq	%rax, 0x10(%rbx)
.Ltmp545:
    000016fd: 	movq	%r13, %rdx
    00001700: 	movq	%r14, %rsi
    00001703: 	callq	memcpy@PLT # Offset: 5891
    00001708: 	movq	0x20(%rsp), %r13
    0000170d: 	movq	(%rbx), %rdi
    00001710: 	jmp	.Ltmp512 # Offset: 5904
.Ltmp361:
    00001715: 	movq	%r12, %rsi
    00001718: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000171f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5919
    00001724: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000172b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001732: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001739: 	jne	.Ltmp513 # Offset: 5945
.Ltmp366:
    0000173f: 	movq	-0x8(%rdx), %rax
    00001743: 	addq	$0x200, %rax
    00001749: 	jmp	.Ltmp513 # Offset: 5961
.Ltmp485:
    0000174e: 	movq	%r12, %rsi
    00001751: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001758: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 5976
    0000175d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001764: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000176b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001772: 	jne	.Ltmp514 # Offset: 6002
.Ltmp490:
    00001778: 	movq	-0x8(%rdx), %rax
    0000177c: 	addq	$0x200, %rax
    00001782: 	jmp	.Ltmp514 # Offset: 6018
.Ltmp479:
    00001787: 	movq	-0x8(%rdx), %rax
    0000178b: 	addq	$0x200, %rax
    00001791: 	jmp	.Ltmp515 # Offset: 6033
.Ltmp474:
    00001796: 	movq	%r12, %rsi
    00001799: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017a0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6048
    000017a5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017ac: 	jmp	.Ltmp516 # Offset: 6060
.Ltmp468:
    000017b1: 	movq	-0x8(%rdx), %rax
    000017b5: 	addq	$0x200, %rax
    000017bb: 	jmp	.Ltmp517 # Offset: 6075
.Ltmp463:
    000017c0: 	movq	%r12, %rsi
    000017c3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017ca: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6090
    000017cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017d6: 	jmp	.Ltmp518 # Offset: 6102
.Ltmp457:
    000017db: 	movq	-0x8(%rdx), %rax
    000017df: 	addq	$0x200, %rax
    000017e5: 	jmp	.Ltmp519 # Offset: 6117
.Ltmp452:
    000017ea: 	movq	%r12, %rsi
    000017ed: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000017f4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6132
    000017f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001800: 	jmp	.Ltmp520 # Offset: 6144
.Ltmp446:
    00001805: 	movq	-0x8(%rdx), %rax
    00001809: 	addq	$0x200, %rax
    0000180f: 	jmp	.Ltmp521 # Offset: 6159
.Ltmp440:
    00001814: 	movq	-0x8(%rdx), %rax
    00001818: 	addq	$0x200, %rax
    0000181e: 	jmp	.Ltmp522 # Offset: 6174
.Ltmp507:
    00001823: 	movq	-0x8(%rdx), %rax
    00001827: 	addq	$0x200, %rax
    0000182d: 	jmp	.Ltmp523 # Offset: 6189
.Ltmp501:
    00001832: 	movq	-0x8(%rdx), %rax
    00001836: 	addq	$0x200, %rax
    0000183c: 	jmp	.Ltmp524 # Offset: 6204
.Ltmp496:
    00001841: 	movq	%r12, %rsi
    00001844: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000184b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6219
    00001850: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001857: 	jmp	.Ltmp525 # Offset: 6231
.Ltmp385:
    0000185c: 	movq	%r12, %rsi
    0000185f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001866: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6246
    0000186b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001872: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001879: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001880: 	jne	.Ltmp526 # Offset: 6272
.Ltmp390:
    00001886: 	movq	-0x8(%rdx), %rax
    0000188a: 	addq	$0x200, %rax
    00001890: 	jmp	.Ltmp526 # Offset: 6288
.Ltmp377:
    00001895: 	movq	-0x8(%rdx), %rax
    00001899: 	addq	$0x200, %rax
    0000189f: 	jmp	.Ltmp527 # Offset: 6303
.Ltmp372:
    000018a4: 	movq	%r12, %rsi
    000018a7: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018ae: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6318
    000018b3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018ba: 	jmp	.Ltmp528 # Offset: 6330
.Ltmp435:
    000018bf: 	movq	%r12, %rsi
    000018c2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018c9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6345
    000018ce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018d5: 	jmp	.Ltmp529 # Offset: 6357
.Ltmp429:
    000018da: 	movq	-0x8(%rdx), %rax
    000018de: 	addq	$0x200, %rax
    000018e4: 	jmp	.Ltmp530 # Offset: 6372
.Ltmp424:
    000018e9: 	movq	%r12, %rsi
    000018ec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018f3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6387
    000018f8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018ff: 	jmp	.Ltmp531 # Offset: 6399
.Ltmp418:
    00001904: 	movq	-0x8(%rdx), %rax
    00001908: 	addq	$0x200, %rax
    0000190e: 	jmp	.Ltmp532 # Offset: 6414
.Ltmp413:
    00001913: 	movq	%r12, %rsi
    00001916: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000191d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6429
    00001922: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001929: 	jmp	.Ltmp533 # Offset: 6441
.Ltmp407:
    0000192e: 	movq	-0x8(%rdx), %rax
    00001932: 	addq	$0x200, %rax
    00001938: 	jmp	.Ltmp534 # Offset: 6456
.Ltmp401:
    0000193d: 	movq	-0x8(%rdx), %rax
    00001941: 	addq	$0x200, %rax
    00001947: 	jmp	.Ltmp535 # Offset: 6471
.Ltmp396:
    0000194c: 	movq	%r12, %rsi
    0000194f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001956: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6486
    0000195b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001962: 	jmp	.Ltmp536 # Offset: 6498
.Ltmp417:
    00001967: 	testq	%r13, %r13
    0000196a: 	je	.Ltmp537 # Offset: 6506
    00001970: 	jmp	.Ltmp538 # Offset: 6512
    00001975: 	nopl	(%rax) # Size: 3
.Ltmp400:
    00001978: 	testq	%r13, %r13
    0000197b: 	je	.Ltmp539 # Offset: 6523
    00001981: 	jmp	.Ltmp540 # Offset: 6529
    00001986: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp428:
    00001990: 	testq	%r13, %r13
    00001993: 	je	.Ltmp541 # Offset: 6547
    00001999: 	jmp	.Ltmp542 # Offset: 6553
    0000199e: 	nop # Size: 2
.Ltmp376:
    000019a0: 	testq	%r13, %r13
    000019a3: 	je	.Ltmp543 # Offset: 6563
    000019a9: 	jmp	.Ltmp544 # Offset: 6569
    000019ae: 	nop # Size: 2
.Ltmp365:
    000019b0: 	testq	%r13, %r13
    000019b3: 	je	.Ltmp512 # Offset: 6579
    000019b9: 	jmp	.Ltmp545 # Offset: 6585
    000019be: 	nop # Size: 2
.Ltmp478:
    000019c0: 	testq	%r13, %r13
    000019c3: 	je	.Ltmp546 # Offset: 6595
    000019c9: 	jmp	.Ltmp547 # Offset: 6601
    000019ce: 	nop # Size: 2
.Ltmp467:
    000019d0: 	testq	%r13, %r13
    000019d3: 	je	.Ltmp548 # Offset: 6611
    000019d9: 	jmp	.Ltmp549 # Offset: 6617
    000019de: 	nop # Size: 2
.Ltmp456:
    000019e0: 	testq	%r13, %r13
    000019e3: 	je	.Ltmp550 # Offset: 6627
    000019e9: 	jmp	.Ltmp551 # Offset: 6633
    000019ee: 	nop # Size: 2
.Ltmp489:
    000019f0: 	testq	%r13, %r13
    000019f3: 	je	.Ltmp552 # Offset: 6643
    000019f9: 	jmp	.Ltmp553 # Offset: 6649
    000019fe: 	nop # Size: 2
.Ltmp500:
    00001a00: 	testq	%r13, %r13
    00001a03: 	je	.Ltmp554 # Offset: 6659
    00001a09: 	jmp	.Ltmp555 # Offset: 6665
    00001a0e: 	nop # Size: 2
.Ltmp389:
    00001a10: 	testq	%r13, %r13
    00001a13: 	je	.Ltmp556 # Offset: 6675
.Ltmp559:
    00001a19: 	movq	0x18(%rsp), %rsi
    00001a1e: 	movq	%r13, %rdx
    00001a21: 	callq	memcpy@PLT # Offset: 6689
    00001a26: 	movq	0x20(%rsp), %r13
    00001a2b: 	movq	(%rbx), %rdi
    00001a2e: 	jmp	.Ltmp556 # Offset: 6702
.Ltmp439:
    00001a33: 	testq	%r13, %r13
    00001a36: 	je	.Ltmp557 # Offset: 6710
.Ltmp558:
    00001a3c: 	movq	0x18(%rsp), %rsi
    00001a41: 	movq	%r13, %rdx
    00001a44: 	callq	memcpy@PLT # Offset: 6724
    00001a49: 	movq	0x20(%rsp), %r13
    00001a4e: 	movq	(%rbx), %rdi
    00001a51: 	jmp	.Ltmp557 # Offset: 6737
.Ltmp477:
    00001a56: 	movq	0x8(%rsp), %rsi
    00001a5b: 	xorl	%edx, %edx
    00001a5d: 	movq	%rbx, %rdi
    00001a60: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6752
    00001a65: 	movq	%rax, (%rbx)
    00001a68: 	movq	%rax, %rdi
    00001a6b: 	movq	0x20(%rsp), %rax
    00001a70: 	movq	%rax, 0x10(%rbx)
.Ltmp547:
    00001a74: 	movq	0x18(%rsp), %rsi
    00001a79: 	movq	%r13, %rdx
    00001a7c: 	callq	memcpy@PLT # Offset: 6780
    00001a81: 	movq	0x20(%rsp), %r13
    00001a86: 	movq	(%rbx), %rdi
    00001a89: 	jmp	.Ltmp546 # Offset: 6793
.Ltmp466:
    00001a8e: 	movq	0x8(%rsp), %rsi
    00001a93: 	xorl	%edx, %edx
    00001a95: 	movq	%rbx, %rdi
    00001a98: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6808
    00001a9d: 	movq	%rax, (%rbx)
    00001aa0: 	movq	%rax, %rdi
    00001aa3: 	movq	0x20(%rsp), %rax
    00001aa8: 	movq	%rax, 0x10(%rbx)
.Ltmp549:
    00001aac: 	movq	0x18(%rsp), %rsi
    00001ab1: 	movq	%r13, %rdx
    00001ab4: 	callq	memcpy@PLT # Offset: 6836
    00001ab9: 	movq	0x20(%rsp), %r13
    00001abe: 	movq	(%rbx), %rdi
    00001ac1: 	jmp	.Ltmp548 # Offset: 6849
.Ltmp455:
    00001ac6: 	movq	0x8(%rsp), %rsi
    00001acb: 	xorl	%edx, %edx
    00001acd: 	movq	%rbx, %rdi
    00001ad0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6864
    00001ad5: 	movq	%rax, (%rbx)
    00001ad8: 	movq	%rax, %rdi
    00001adb: 	movq	0x20(%rsp), %rax
    00001ae0: 	movq	%rax, 0x10(%rbx)
.Ltmp551:
    00001ae4: 	movq	0x18(%rsp), %rsi
    00001ae9: 	movq	%r13, %rdx
    00001aec: 	callq	memcpy@PLT # Offset: 6892
    00001af1: 	movq	0x20(%rsp), %r13
    00001af6: 	movq	(%rbx), %rdi
    00001af9: 	jmp	.Ltmp550 # Offset: 6905
.Ltmp416:
    00001afe: 	movq	0x8(%rsp), %rsi
    00001b03: 	xorl	%edx, %edx
    00001b05: 	movq	%rbx, %rdi
    00001b08: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6920
    00001b0d: 	movq	%rax, (%rbx)
    00001b10: 	movq	%rax, %rdi
    00001b13: 	movq	0x20(%rsp), %rax
    00001b18: 	movq	%rax, 0x10(%rbx)
.Ltmp538:
    00001b1c: 	movq	0x18(%rsp), %rsi
    00001b21: 	movq	%r13, %rdx
    00001b24: 	callq	memcpy@PLT # Offset: 6948
    00001b29: 	movq	0x20(%rsp), %r13
    00001b2e: 	movq	(%rbx), %rdi
    00001b31: 	jmp	.Ltmp537 # Offset: 6961
.Ltmp427:
    00001b36: 	movq	0x8(%rsp), %rsi
    00001b3b: 	xorl	%edx, %edx
    00001b3d: 	movq	%rbx, %rdi
    00001b40: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6976
    00001b45: 	movq	%rax, (%rbx)
    00001b48: 	movq	%rax, %rdi
    00001b4b: 	movq	0x20(%rsp), %rax
    00001b50: 	movq	%rax, 0x10(%rbx)
.Ltmp542:
    00001b54: 	movq	0x18(%rsp), %rsi
    00001b59: 	movq	%r13, %rdx
    00001b5c: 	callq	memcpy@PLT # Offset: 7004
    00001b61: 	movq	0x20(%rsp), %r13
    00001b66: 	movq	(%rbx), %rdi
    00001b69: 	jmp	.Ltmp541 # Offset: 7017
.Ltmp399:
    00001b6e: 	movq	0x8(%rsp), %rsi
    00001b73: 	xorl	%edx, %edx
    00001b75: 	movq	%rbx, %rdi
    00001b78: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7032
    00001b7d: 	movq	%rax, (%rbx)
    00001b80: 	movq	%rax, %rdi
    00001b83: 	movq	0x20(%rsp), %rax
    00001b88: 	movq	%rax, 0x10(%rbx)
.Ltmp540:
    00001b8c: 	movq	0x18(%rsp), %rsi
    00001b91: 	movq	%r13, %rdx
    00001b94: 	callq	memcpy@PLT # Offset: 7060
    00001b99: 	movq	0x20(%rsp), %r13
    00001b9e: 	movq	(%rbx), %rdi
    00001ba1: 	jmp	.Ltmp539 # Offset: 7073
.Ltmp488:
    00001ba6: 	movq	0x8(%rsp), %rsi
    00001bab: 	xorl	%edx, %edx
    00001bad: 	movq	%rbx, %rdi
    00001bb0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7088
    00001bb5: 	movq	%rax, (%rbx)
    00001bb8: 	movq	%rax, %rdi
    00001bbb: 	movq	0x20(%rsp), %rax
    00001bc0: 	movq	%rax, 0x10(%rbx)
.Ltmp553:
    00001bc4: 	movq	0x18(%rsp), %rsi
    00001bc9: 	movq	%r13, %rdx
    00001bcc: 	callq	memcpy@PLT # Offset: 7116
    00001bd1: 	movq	0x20(%rsp), %r13
    00001bd6: 	movq	(%rbx), %rdi
    00001bd9: 	jmp	.Ltmp552 # Offset: 7129
.Ltmp438:
    00001bde: 	movq	0x8(%rsp), %rsi
    00001be3: 	xorl	%edx, %edx
    00001be5: 	movq	%rbx, %rdi
    00001be8: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7144
    00001bed: 	movq	%rax, (%rbx)
    00001bf0: 	movq	%rax, %rdi
    00001bf3: 	movq	0x20(%rsp), %rax
    00001bf8: 	movq	%rax, 0x10(%rbx)
    00001bfc: 	jmp	.Ltmp558 # Offset: 7164
.Ltmp375:
    00001c01: 	movq	0x8(%rsp), %rsi
    00001c06: 	xorl	%edx, %edx
    00001c08: 	movq	%rbx, %rdi
    00001c0b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7179
    00001c10: 	movq	%rax, (%rbx)
    00001c13: 	movq	%rax, %rdi
    00001c16: 	movq	0x20(%rsp), %rax
    00001c1b: 	movq	%rax, 0x10(%rbx)
.Ltmp544:
    00001c1f: 	movq	0x18(%rsp), %rsi
    00001c24: 	movq	%r13, %rdx
    00001c27: 	callq	memcpy@PLT # Offset: 7207
    00001c2c: 	movq	0x20(%rsp), %r13
    00001c31: 	movq	(%rbx), %rdi
    00001c34: 	jmp	.Ltmp543 # Offset: 7220
.Ltmp499:
    00001c39: 	movq	0x8(%rsp), %rsi
    00001c3e: 	xorl	%edx, %edx
    00001c40: 	movq	%rbx, %rdi
    00001c43: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7235
    00001c48: 	movq	%rax, (%rbx)
    00001c4b: 	movq	%rax, %rdi
    00001c4e: 	movq	0x20(%rsp), %rax
    00001c53: 	movq	%rax, 0x10(%rbx)
.Ltmp555:
    00001c57: 	movq	0x18(%rsp), %rsi
    00001c5c: 	movq	%r13, %rdx
    00001c5f: 	callq	memcpy@PLT # Offset: 7263
    00001c64: 	movq	0x20(%rsp), %r13
    00001c69: 	movq	(%rbx), %rdi
    00001c6c: 	jmp	.Ltmp554 # Offset: 7276
.Ltmp388:
    00001c71: 	movq	0x8(%rsp), %rsi
    00001c76: 	xorl	%edx, %edx
    00001c78: 	movq	%rbx, %rdi
    00001c7b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7291
    00001c80: 	movq	%rax, (%rbx)
    00001c83: 	movq	%rax, %rdi
    00001c86: 	movq	0x20(%rsp), %rax
    00001c8b: 	movq	%rax, 0x10(%rbx)
    00001c8f: 	jmp	.Ltmp559 # Offset: 7311
.Ltmp374:
    00001c94: 	leaq	DATAat0x1a158(%rip), %rdi
    00001c9b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7323
.Ltmp387:
    00001ca0: 	leaq	DATAat0x1a158(%rip), %rdi
    00001ca7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7335
.Ltmp398:
    00001cac: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cb3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7347
.Ltmp415:
    00001cb8: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cbf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7359
.Ltmp426:
    00001cc4: 	leaq	DATAat0x1a158(%rip), %rdi
    00001ccb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7371
.Ltmp437:
    00001cd0: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cd7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7383
.Ltmp454:
    00001cdc: 	leaq	DATAat0x1a158(%rip), %rdi
    00001ce3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7395
.Ltmp465:
    00001ce8: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cef: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7407
.Ltmp476:
    00001cf4: 	leaq	DATAat0x1a158(%rip), %rdi
    00001cfb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7419
.Ltmp487:
    00001d00: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d07: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7431
.Ltmp498:
    00001d0c: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d13: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7443
.Ltmp511:
    00001d18: 	callq	__stack_chk_fail@PLT # Offset: 7448
.Ltmp363:
    00001d1d: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d24: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7460
    00001d29: 	endbr64
.Ltmp561:
    00001d2d: 	movq	%rax, %rbp
    00001d30: 	jmp	.Ltmp560 # Offset: 7472
    00001d32: 	endbr64
    00001d36: 	jmp	.Ltmp561 # Offset: 7478
    00001d38: 	endbr64
    00001d3c: 	movq	%rax, %rbp
    00001d3f: 	movq	0x60(%rsp), %rdi
    00001d44: 	leaq	0x70(%rsp), %rax
    00001d49: 	cmpq	%rax, %rdi
    00001d4c: 	je	.Ltmp562 # Offset: 7500
.Ltmp564:
    00001d4e: 	movq	0x70(%rsp), %rax
    00001d53: 	leaq	0x1(%rax), %rsi
    00001d57: 	callq	_ZdlPvm@PLT # Offset: 7511
.Ltmp562:
    00001d5c: 	movq	0x40(%rsp), %rdi
    00001d61: 	cmpq	0x10(%rsp), %rdi
    00001d66: 	je	.Ltmp563 # Offset: 7526
    00001d68: 	movq	0x50(%rsp), %rax
    00001d6d: 	leaq	0x1(%rax), %rsi
    00001d71: 	callq	_ZdlPvm@PLT # Offset: 7537
.Ltmp563:
    00001d76: 	movq	%rbp, %rdi
    00001d79: 	callq	_Unwind_Resume@PLT # Offset: 7545
.Ltmp560:
    00001d7e: 	movq	0x60(%rsp), %rdi
    00001d83: 	cmpq	%r14, %rdi
    00001d86: 	jne	.Ltmp564 # Offset: 7558
    00001d88: 	jmp	.Ltmp562 # Offset: 7560
    00001d8a: 	endbr64
    00001d8e: 	jmp	.Ltmp561 # Offset: 7566
    00001d90: 	endbr64
    00001d94: 	jmp	.Ltmp561 # Offset: 7572
    00001d96: 	endbr64
    00001d9a: 	jmp	.Ltmp561 # Offset: 7578
    00001d9c: 	endbr64
    00001da0: 	jmp	.Ltmp561 # Offset: 7584
    00001da2: 	endbr64
    00001da6: 	jmp	.Ltmp561 # Offset: 7590
    00001da8: 	endbr64
    00001dac: 	jmp	.Ltmp561 # Offset: 7596
    00001db1: 	endbr64
    00001db5: 	jmp	.Ltmp561 # Offset: 7605
    00001dba: 	endbr64
    00001dbe: 	jmp	.Ltmp561 # Offset: 7614
    00001dc3: 	endbr64
    00001dc7: 	movq	%rax, %rbp
    00001dca: 	jmp	.Ltmp562 # Offset: 7626
    00001dcc: 	endbr64
    00001dd0: 	jmp	.Ltmp561 # Offset: 7632
    00001dd5: 	endbr64
    00001dd9: 	jmp	.Ltmp561 # Offset: 7641
    00001dde: 	endbr64
    00001de2: 	jmp	.Ltmp561 # Offset: 7650
    00001de7: 	endbr64
    00001deb: 	jmp	.Ltmp561 # Offset: 7659
    00001df0: 	endbr64
    00001df4: 	jmp	.Ltmp561 # Offset: 7668
    00001df9: 	endbr64
    00001dfd: 	jmp	.Ltmp561 # Offset: 7677
    00001e02: 	endbr64
    00001e06: 	jmp	.Ltmp561 # Offset: 7686
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIaEvv"

Binary Function "_Z11TestOneTypeIsEvv" after disassembly {
  Number      : 48
  State       : disassembled
  Address     : 0x6df0
  Size        : 0x2081
  MaxSize     : 0x2090
  Offset      : 0x6df0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIsEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB047:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf18, %rsp
    00000039: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000041: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000049: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000050: 	movq	%fs:0x28, %rax
    00000059: 	movq	%rax, 0x3f08(%rsp)
    00000061: 	xorl	%eax, %eax
    00000063: 	leaq	0x20(%rsp), %rsi
    00000068: 	movaps	%xmm2, 0x20(%rsp)
    0000006d: 	leaq	0x80(%rsp), %rbp
    00000075: 	movq	%rsi, (%rsp)
    00000079: 	leaq	0x3f00(%rsp), %rbx
    00000081: 	movaps	%xmm3, 0x30(%rsp)
    00000086: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 134
    0000008b: 	leaq	0x50(%rsp), %rax
    00000090: 	movb	$0x74, 0x56(%rsp)
    00000095: 	movq	%rax, 0x10(%rsp)
    0000009a: 	movq	%rax, 0x40(%rsp)
    0000009f: 	movl	$0x5f36, %eax
    000000a4: 	movw	%ax, 0x54(%rsp)
    000000a9: 	cvttsd2si	init_value(%rip), %eax
    000000b1: 	movl	$0x31746e69, 0x50(%rsp)
    000000b9: 	movq	$0x7, 0x48(%rsp)
    000000c2: 	movb	$0x0, 0x57(%rsp)
    000000c7: 	movd	%eax, %xmm0
    000000cb: 	movq	%rbp, %rax
    000000ce: 	punpcklwd	%xmm0, %xmm0
    000000d2: 	pshufd	$0x0, %xmm0, %xmm0
    000000d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp565:
    000000e0: 	movaps	%xmm0, (%rax)
    000000e3: 	addq	$0x10, %rax
    000000e7: 	cmpq	%rbx, %rax
    000000ea: 	jne	.Ltmp565 # Offset: 234
    000000ec: 	leaq	0x60(%rsp), %r12
    000000f1: 	leaq	0x40(%rsp), %r15
    000000f6: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000fd: 	movq	%r15, %rsi
    00000100: 	movq	%r12, %rdi
    00000103: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 259
    00000108: 	callq	clock@PLT # Offset: 264
    0000010d: 	movl	iterations(%rip), %ecx
    00000113: 	xorl	%r13d, %r13d
    00000116: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000011d: 	movq	%rax, start_time(%rip)
    00000124: 	testl	%ecx, %ecx
    00000126: 	jle	.Ltmp566 # Offset: 294
    0000012c: 	nopl	(%rax) # Size: 4
.Ltmp569:
    00000130: 	movq	%rbp, %rax
    00000133: 	pxor	%xmm0, %xmm0
    00000137: 	nopw	(%rax,%rax) # Size: 9
.Ltmp567:
    00000140: 	paddw	(%rax), %xmm0
    00000144: 	addq	$0x10, %rax
    00000148: 	cmpq	%rax, %rbx
    0000014b: 	jne	.Ltmp567 # Offset: 331
    0000014d: 	movdqa	%xmm0, %xmm1
    00000151: 	cvttsd2si	init_value(%rip), %eax
    00000159: 	psrldq	$0x8, %xmm1
    0000015e: 	paddw	%xmm1, %xmm0
    00000162: 	movdqa	%xmm0, %xmm1
    00000166: 	psrldq	$0x4, %xmm1
    0000016b: 	imulw	$0x1f40, %ax, %ax
    00000170: 	paddw	%xmm1, %xmm0
    00000174: 	movdqa	%xmm0, %xmm1
    00000178: 	psrldq	$0x2, %xmm1
    0000017d: 	paddw	%xmm1, %xmm0
    00000181: 	pextrw	$0x0, %xmm0, %edx
    00000186: 	cmpw	%dx, %ax
    00000189: 	je	.Ltmp568 # Offset: 393
    0000018b: 	movl	current_test(%rip), %edx
    00000191: 	movq	%r14, %rsi
    00000194: 	movl	$0x1, %edi
    00000199: 	xorl	%eax, %eax
    0000019b: 	callq	__printf_chk@PLT # Offset: 411
    000001a0: 	movl	iterations(%rip), %ecx
.Ltmp568:
    000001a6: 	addl	$0x1, %r13d
    000001aa: 	cmpl	%ecx, %r13d
    000001ad: 	jl	.Ltmp569 # Offset: 429
.Ltmp566:
    000001af: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000001b6: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000001bd: 	subq	$0x20, %rax
    000001c1: 	cmpq	%rax, %r13
    000001c4: 	je	.Ltmp570 # Offset: 452
    000001ca: 	leaq	0x10(%r13), %rdi
    000001ce: 	movq	0x68(%rsp), %r14
    000001d3: 	movq	%rdi, (%r13)
    000001d7: 	movq	0x60(%rsp), %rax
    000001dc: 	movq	%rax, %rsi
    000001df: 	movq	%rax, 0x8(%rsp)
    000001e4: 	addq	%r14, %rsi
    000001e7: 	je	.Ltmp571 # Offset: 487
    000001e9: 	testq	%rax, %rax
    000001ec: 	je	.Ltmp572 # Offset: 492
.Ltmp571:
    000001f2: 	movq	%r14, 0x20(%rsp)
    000001f7: 	cmpq	$0xf, %r14
    000001fb: 	ja	.Ltmp573 # Offset: 507
    00000201: 	cmpq	$0x1, %r14
    00000205: 	jne	.Ltmp574 # Offset: 517
    0000020b: 	movq	0x8(%rsp), %rax
    00000210: 	movzbl	(%rax), %eax
    00000213: 	movb	%al, 0x10(%r13)
.Ltmp721:
    00000217: 	movq	%r14, 0x8(%r13)
    0000021b: 	movb	$0x0, (%rdi,%r14)
    00000220: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000227: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000022e: 	addq	$0x20, %rax
    00000232: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000239: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000240: 	je	.Ltmp575 # Offset: 576
.Ltmp722:
    00000246: 	movq	-0x20(%rax), %r13
    0000024a: 	callq	clock@PLT # Offset: 586
    0000024f: 	pxor	%xmm0, %xmm0
    00000253: 	movq	%rax, end_time(%rip)
    0000025a: 	movq	%r13, %rdi
    0000025d: 	subq	start_time(%rip), %rax
    00000264: 	cvtsi2sd	%rax, %xmm0
    00000269: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000271: 	callq	_Z13record_resultdPKc # Offset: 625
    00000276: 	movq	0x60(%rsp), %rdi
    0000027b: 	leaq	0x70(%rsp), %r14
    00000280: 	cmpq	%r14, %rdi
    00000283: 	je	.Ltmp576 # Offset: 643
    00000285: 	movq	0x70(%rsp), %rax
    0000028a: 	leaq	0x1(%rax), %rsi
    0000028e: 	callq	_ZdlPvm@PLT # Offset: 654
.Ltmp576:
    00000293: 	leaq	DATAat0x1a1e2(%rip), %rdx
    0000029a: 	movq	%r15, %rsi
    0000029d: 	movq	%r12, %rdi
    000002a0: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 672
    000002a5: 	callq	clock@PLT # Offset: 677
    000002aa: 	movl	iterations(%rip), %ecx
    000002b0: 	xorl	%r13d, %r13d
    000002b3: 	movq	%rax, start_time(%rip)
    000002ba: 	testl	%ecx, %ecx
    000002bc: 	jle	.Ltmp577 # Offset: 700
    000002c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp580:
    000002c8: 	movq	%rbp, %rax
    000002cb: 	pxor	%xmm0, %xmm0
    000002cf: 	nop # Size: 1
.Ltmp578:
    000002d0: 	paddw	(%rax), %xmm0
    000002d4: 	addq	$0x10, %rax
    000002d8: 	cmpq	%rbx, %rax
    000002db: 	jne	.Ltmp578 # Offset: 731
    000002dd: 	movdqa	%xmm0, %xmm1
    000002e1: 	cvttsd2si	init_value(%rip), %eax
    000002e9: 	psrldq	$0x8, %xmm1
    000002ee: 	paddw	%xmm1, %xmm0
    000002f2: 	movdqa	%xmm0, %xmm1
    000002f6: 	psrldq	$0x4, %xmm1
    000002fb: 	imulw	$0x1f40, %ax, %ax
    00000300: 	paddw	%xmm1, %xmm0
    00000304: 	movdqa	%xmm0, %xmm1
    00000308: 	psrldq	$0x2, %xmm1
    0000030d: 	paddw	%xmm1, %xmm0
    00000311: 	pextrw	$0x0, %xmm0, %edx
    00000316: 	cmpw	%dx, %ax
    00000319: 	je	.Ltmp579 # Offset: 793
    0000031b: 	movl	current_test(%rip), %edx
    00000321: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000328: 	movl	$0x1, %edi
    0000032d: 	xorl	%eax, %eax
    0000032f: 	callq	__printf_chk@PLT # Offset: 815
    00000334: 	movl	iterations(%rip), %ecx
.Ltmp579:
    0000033a: 	addl	$0x1, %r13d
    0000033e: 	cmpl	%ecx, %r13d
    00000341: 	jl	.Ltmp580 # Offset: 833
.Ltmp577:
    00000347: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000034e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000355: 	subq	$0x20, %rax
    00000359: 	cmpq	%rax, %r13
    0000035c: 	je	.Ltmp581 # Offset: 860
    00000362: 	leaq	0x10(%r13), %rdi
    00000366: 	movq	0x68(%rsp), %rcx
    0000036b: 	movq	%rdi, (%r13)
    0000036f: 	movq	0x60(%rsp), %rsi
    00000374: 	movq	%rcx, 0x8(%rsp)
    00000379: 	movq	%rsi, %rax
    0000037c: 	movq	%rsi, 0x18(%rsp)
    00000381: 	addq	%rcx, %rax
    00000384: 	je	.Ltmp582 # Offset: 900
    00000386: 	testq	%rsi, %rsi
    00000389: 	je	.Ltmp583 # Offset: 905
.Ltmp582:
    0000038f: 	movq	0x8(%rsp), %rax
    00000394: 	movq	%rax, 0x20(%rsp)
    00000399: 	cmpq	$0xf, %rax
    0000039d: 	ja	.Ltmp584 # Offset: 925
    000003a3: 	cmpq	$0x1, 0x8(%rsp)
    000003a9: 	jne	.Ltmp585 # Offset: 937
    000003af: 	movq	0x18(%rsp), %rax
    000003b4: 	movzbl	(%rax), %eax
    000003b7: 	movb	%al, 0x10(%r13)
.Ltmp751:
    000003bb: 	movq	0x8(%rsp), %rax
    000003c0: 	movq	%rax, 0x8(%r13)
    000003c4: 	movb	$0x0, (%rdi,%rax)
    000003c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003cf: 	addq	$0x20, %rax
    000003d3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp736:
    000003da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003e8: 	je	.Ltmp586 # Offset: 1000
.Ltmp735:
    000003ee: 	movq	-0x20(%rax), %r13
    000003f2: 	callq	clock@PLT # Offset: 1010
    000003f7: 	pxor	%xmm0, %xmm0
    000003fb: 	movq	%rax, end_time(%rip)
    00000402: 	movq	%r13, %rdi
    00000405: 	subq	start_time(%rip), %rax
    0000040c: 	cvtsi2sd	%rax, %xmm0
    00000411: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000419: 	callq	_Z13record_resultdPKc # Offset: 1049
    0000041e: 	movq	0x60(%rsp), %rdi
    00000423: 	cmpq	%r14, %rdi
    00000426: 	je	.Ltmp587 # Offset: 1062
    00000428: 	movq	0x70(%rsp), %rax
    0000042d: 	leaq	0x1(%rax), %rsi
    00000431: 	callq	_ZdlPvm@PLT # Offset: 1073
.Ltmp587:
    00000436: 	leaq	DATAat0x1a1ee(%rip), %rdx
    0000043d: 	movq	%r15, %rsi
    00000440: 	movq	%r12, %rdi
    00000443: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1091
    00000448: 	movq	%r12, %rsi
    0000044b: 	movq	%rbp, %rdi
    0000044e: 	callq	"_Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1102
    00000453: 	movq	0x60(%rsp), %rdi
    00000458: 	cmpq	%r14, %rdi
    0000045b: 	je	.Ltmp588 # Offset: 1115
    0000045d: 	movq	0x70(%rsp), %rax
    00000462: 	leaq	0x1(%rax), %rsi
    00000466: 	callq	_ZdlPvm@PLT # Offset: 1126
.Ltmp588:
    0000046b: 	leaq	DATAat0x1a1fb(%rip), %rdx
    00000472: 	movq	%r15, %rsi
    00000475: 	movq	%r12, %rdi
    00000478: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1144
    0000047d: 	movq	%r12, %rsi
    00000480: 	movq	%rbp, %rdi
    00000483: 	callq	"_Z13test_constantIs18custom_copy_chain2IsEEvPT_iNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.constprop.0/1" # Offset: 1155
    00000488: 	movq	0x60(%rsp), %rdi
    0000048d: 	cmpq	%r14, %rdi
    00000490: 	je	.Ltmp589 # Offset: 1168
    00000492: 	movq	0x70(%rsp), %rax
    00000497: 	leaq	0x1(%rax), %rsi
    0000049b: 	callq	_ZdlPvm@PLT # Offset: 1179
.Ltmp589:
    000004a0: 	leaq	DATAat0x1a208(%rip), %rdx
    000004a7: 	movq	%r15, %rsi
    000004aa: 	movq	%r12, %rdi
    000004ad: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1197
    000004b2: 	callq	clock@PLT # Offset: 1202
    000004b7: 	movl	iterations(%rip), %ecx
    000004bd: 	xorl	%r13d, %r13d
    000004c0: 	movq	%rax, start_time(%rip)
    000004c7: 	testl	%ecx, %ecx
    000004c9: 	jle	.Ltmp590 # Offset: 1225
    000004cf: 	nop # Size: 1
.Ltmp593:
    000004d0: 	movq	%rbp, %rax
    000004d3: 	pxor	%xmm0, %xmm0
    000004d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp591:
    000004e0: 	paddw	(%rax), %xmm0
    000004e4: 	addq	$0x10, %rax
    000004e8: 	cmpq	%rax, %rbx
    000004eb: 	jne	.Ltmp591 # Offset: 1259
    000004ed: 	movdqa	%xmm0, %xmm1
    000004f1: 	cvttsd2si	init_value(%rip), %eax
    000004f9: 	psrldq	$0x8, %xmm1
    000004fe: 	paddw	%xmm1, %xmm0
    00000502: 	movdqa	%xmm0, %xmm1
    00000506: 	psrldq	$0x4, %xmm1
    0000050b: 	imulw	$0x1f40, %ax, %ax
    00000510: 	paddw	%xmm1, %xmm0
    00000514: 	movdqa	%xmm0, %xmm1
    00000518: 	psrldq	$0x2, %xmm1
    0000051d: 	paddw	%xmm1, %xmm0
    00000521: 	pextrw	$0x0, %xmm0, %edx
    00000526: 	cmpw	%dx, %ax
    00000529: 	je	.Ltmp592 # Offset: 1321
    0000052b: 	movl	current_test(%rip), %edx
    00000531: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000538: 	movl	$0x1, %edi
    0000053d: 	xorl	%eax, %eax
    0000053f: 	callq	__printf_chk@PLT # Offset: 1343
    00000544: 	movl	iterations(%rip), %ecx
.Ltmp592:
    0000054a: 	addl	$0x1, %r13d
    0000054e: 	cmpl	%ecx, %r13d
    00000551: 	jl	.Ltmp593 # Offset: 1361
.Ltmp590:
    00000557: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000055e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000565: 	subq	$0x20, %rax
    00000569: 	cmpq	%rax, %r13
    0000056c: 	je	.Ltmp594 # Offset: 1388
    00000572: 	leaq	0x10(%r13), %rdi
    00000576: 	movq	0x68(%rsp), %rcx
    0000057b: 	movq	%rdi, (%r13)
    0000057f: 	movq	0x60(%rsp), %rsi
    00000584: 	movq	%rcx, 0x8(%rsp)
    00000589: 	movq	%rsi, %rax
    0000058c: 	movq	%rsi, 0x18(%rsp)
    00000591: 	addq	%rcx, %rax
    00000594: 	je	.Ltmp595 # Offset: 1428
    00000596: 	testq	%rsi, %rsi
    00000599: 	je	.Ltmp596 # Offset: 1433
.Ltmp595:
    0000059f: 	movq	0x8(%rsp), %rax
    000005a4: 	movq	%rax, 0x20(%rsp)
    000005a9: 	cmpq	$0xf, %rax
    000005ad: 	ja	.Ltmp597 # Offset: 1453
    000005b3: 	cmpq	$0x1, 0x8(%rsp)
    000005b9: 	jne	.Ltmp598 # Offset: 1465
    000005bf: 	movq	0x18(%rsp), %rax
    000005c4: 	movzbl	(%rax), %eax
    000005c7: 	movb	%al, 0x10(%r13)
.Ltmp764:
    000005cb: 	movq	0x8(%rsp), %rax
    000005d0: 	movq	%rax, 0x8(%r13)
    000005d4: 	movb	$0x0, (%rdi,%rax)
    000005d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005e6: 	addq	$0x20, %rax
    000005ea: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000005f1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000005f8: 	je	.Ltmp599 # Offset: 1528
.Ltmp734:
    000005fe: 	movq	-0x20(%rax), %r13
    00000602: 	callq	clock@PLT # Offset: 1538
    00000607: 	pxor	%xmm0, %xmm0
    0000060b: 	movq	%rax, end_time(%rip)
    00000612: 	movq	%r13, %rdi
    00000615: 	subq	start_time(%rip), %rax
    0000061c: 	cvtsi2sd	%rax, %xmm0
    00000621: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000629: 	callq	_Z13record_resultdPKc # Offset: 1577
    0000062e: 	movq	0x60(%rsp), %rdi
    00000633: 	cmpq	%r14, %rdi
    00000636: 	je	.Ltmp600 # Offset: 1590
    00000638: 	movq	0x70(%rsp), %rax
    0000063d: 	leaq	0x1(%rax), %rsi
    00000641: 	callq	_ZdlPvm@PLT # Offset: 1601
.Ltmp600:
    00000646: 	leaq	DATAat0x1a215(%rip), %rdx
    0000064d: 	movq	%r15, %rsi
    00000650: 	movq	%r12, %rdi
    00000653: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1619
    00000658: 	callq	clock@PLT # Offset: 1624
    0000065d: 	movl	iterations(%rip), %ecx
    00000663: 	xorl	%r13d, %r13d
    00000666: 	movq	%rax, start_time(%rip)
    0000066d: 	testl	%ecx, %ecx
    0000066f: 	jle	.Ltmp601 # Offset: 1647
    00000675: 	nopl	(%rax) # Size: 3
.Ltmp604:
    00000678: 	movq	%rbp, %rax
    0000067b: 	pxor	%xmm0, %xmm0
    0000067f: 	nop # Size: 1
.Ltmp602:
    00000680: 	paddw	(%rax), %xmm0
    00000684: 	addq	$0x10, %rax
    00000688: 	cmpq	%rbx, %rax
    0000068b: 	jne	.Ltmp602 # Offset: 1675
    0000068d: 	movdqa	%xmm0, %xmm1
    00000691: 	cvttsd2si	init_value(%rip), %eax
    00000699: 	psrldq	$0x8, %xmm1
    0000069e: 	paddw	%xmm1, %xmm0
    000006a2: 	movdqa	%xmm0, %xmm1
    000006a6: 	psrldq	$0x4, %xmm1
    000006ab: 	imulw	$0x1f40, %ax, %ax
    000006b0: 	paddw	%xmm1, %xmm0
    000006b4: 	movdqa	%xmm0, %xmm1
    000006b8: 	psrldq	$0x2, %xmm1
    000006bd: 	paddw	%xmm1, %xmm0
    000006c1: 	pextrw	$0x0, %xmm0, %edx
    000006c6: 	cmpw	%dx, %ax
    000006c9: 	je	.Ltmp603 # Offset: 1737
    000006cb: 	movl	current_test(%rip), %edx
    000006d1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000006d8: 	movl	$0x1, %edi
    000006dd: 	xorl	%eax, %eax
    000006df: 	callq	__printf_chk@PLT # Offset: 1759
    000006e4: 	movl	iterations(%rip), %ecx
.Ltmp603:
    000006ea: 	addl	$0x1, %r13d
    000006ee: 	cmpl	%ecx, %r13d
    000006f1: 	jl	.Ltmp604 # Offset: 1777
.Ltmp601:
    000006f3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000006fa: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000701: 	subq	$0x20, %rax
    00000705: 	cmpq	%rax, %r13
    00000708: 	je	.Ltmp605 # Offset: 1800
    0000070e: 	leaq	0x10(%r13), %rdi
    00000712: 	movq	0x68(%rsp), %rcx
    00000717: 	movq	%rdi, (%r13)
    0000071b: 	movq	0x60(%rsp), %rsi
    00000720: 	movq	%rcx, 0x8(%rsp)
    00000725: 	movq	%rsi, %rax
    00000728: 	movq	%rsi, 0x18(%rsp)
    0000072d: 	addq	%rcx, %rax
    00000730: 	je	.Ltmp606 # Offset: 1840
    00000732: 	testq	%rsi, %rsi
    00000735: 	je	.Ltmp607 # Offset: 1845
.Ltmp606:
    0000073b: 	movq	0x8(%rsp), %rax
    00000740: 	movq	%rax, 0x20(%rsp)
    00000745: 	cmpq	$0xf, %rax
    00000749: 	ja	.Ltmp608 # Offset: 1865
    0000074f: 	cmpq	$0x1, 0x8(%rsp)
    00000755: 	jne	.Ltmp609 # Offset: 1877
    0000075b: 	movq	0x18(%rsp), %rax
    00000760: 	movzbl	(%rax), %eax
    00000763: 	movb	%al, 0x10(%r13)
.Ltmp749:
    00000767: 	movq	0x8(%rsp), %rax
    0000076c: 	movq	%rax, 0x8(%r13)
    00000770: 	movb	$0x0, (%rdi,%rax)
    00000774: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000077b: 	addq	$0x20, %rax
    0000077f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp745:
    00000786: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000078d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000794: 	je	.Ltmp610 # Offset: 1940
.Ltmp744:
    0000079a: 	movq	-0x20(%rax), %r13
    0000079e: 	callq	clock@PLT # Offset: 1950
    000007a3: 	pxor	%xmm0, %xmm0
    000007a7: 	movq	%rax, end_time(%rip)
    000007ae: 	movq	%r13, %rdi
    000007b1: 	subq	start_time(%rip), %rax
    000007b8: 	cvtsi2sd	%rax, %xmm0
    000007bd: 	divsd	DATAat0x1a318(%rip), %xmm0
    000007c5: 	callq	_Z13record_resultdPKc # Offset: 1989
    000007ca: 	movq	0x60(%rsp), %rdi
    000007cf: 	cmpq	%r14, %rdi
    000007d2: 	je	.Ltmp611 # Offset: 2002
    000007d4: 	movq	0x70(%rsp), %rax
    000007d9: 	leaq	0x1(%rax), %rsi
    000007dd: 	callq	_ZdlPvm@PLT # Offset: 2013
.Ltmp611:
    000007e2: 	leaq	DATAat0x1a226(%rip), %rdx
    000007e9: 	movq	%r15, %rsi
    000007ec: 	movq	%r12, %rdi
    000007ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2031
    000007f4: 	callq	clock@PLT # Offset: 2036
    000007f9: 	movl	iterations(%rip), %ecx
    000007ff: 	xorl	%r13d, %r13d
    00000802: 	movq	%rax, start_time(%rip)
    00000809: 	testl	%ecx, %ecx
    0000080b: 	jle	.Ltmp612 # Offset: 2059
    00000811: 	nopl	(%rax) # Size: 7
.Ltmp615:
    00000818: 	movq	%rbp, %rax
    0000081b: 	pxor	%xmm0, %xmm0
    0000081f: 	nop # Size: 1
.Ltmp613:
    00000820: 	paddw	(%rax), %xmm0
    00000824: 	addq	$0x10, %rax
    00000828: 	cmpq	%rbx, %rax
    0000082b: 	jne	.Ltmp613 # Offset: 2091
    0000082d: 	movdqa	%xmm0, %xmm1
    00000831: 	cvttsd2si	init_value(%rip), %eax
    00000839: 	psrldq	$0x8, %xmm1
    0000083e: 	paddw	%xmm1, %xmm0
    00000842: 	movdqa	%xmm0, %xmm1
    00000846: 	psrldq	$0x4, %xmm1
    0000084b: 	imulw	$0x1f40, %ax, %ax
    00000850: 	paddw	%xmm1, %xmm0
    00000854: 	movdqa	%xmm0, %xmm1
    00000858: 	psrldq	$0x2, %xmm1
    0000085d: 	paddw	%xmm1, %xmm0
    00000861: 	pextrw	$0x0, %xmm0, %edx
    00000866: 	cmpw	%dx, %ax
    00000869: 	je	.Ltmp614 # Offset: 2153
    0000086b: 	movl	current_test(%rip), %edx
    00000871: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000878: 	movl	$0x1, %edi
    0000087d: 	xorl	%eax, %eax
    0000087f: 	callq	__printf_chk@PLT # Offset: 2175
    00000884: 	movl	iterations(%rip), %ecx
.Ltmp614:
    0000088a: 	addl	$0x1, %r13d
    0000088e: 	cmpl	%ecx, %r13d
    00000891: 	jl	.Ltmp615 # Offset: 2193
.Ltmp612:
    00000897: 	movq	%r12, %rdi
    0000089a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2202
    0000089f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008b4: 	je	.Ltmp616 # Offset: 2228
.Ltmp743:
    000008ba: 	movq	-0x20(%rax), %r13
    000008be: 	callq	clock@PLT # Offset: 2238
    000008c3: 	pxor	%xmm0, %xmm0
    000008c7: 	movq	%rax, end_time(%rip)
    000008ce: 	movq	%r13, %rdi
    000008d1: 	subq	start_time(%rip), %rax
    000008d8: 	cvtsi2sd	%rax, %xmm0
    000008dd: 	divsd	DATAat0x1a318(%rip), %xmm0
    000008e5: 	callq	_Z13record_resultdPKc # Offset: 2277
    000008ea: 	movq	0x60(%rsp), %rdi
    000008ef: 	cmpq	%r14, %rdi
    000008f2: 	je	.Ltmp617 # Offset: 2290
    000008f4: 	movq	0x70(%rsp), %rax
    000008f9: 	leaq	0x1(%rax), %rsi
    000008fd: 	callq	_ZdlPvm@PLT # Offset: 2301
.Ltmp617:
    00000902: 	leaq	DATAat0x1a238(%rip), %rdx
    00000909: 	movq	%r15, %rsi
    0000090c: 	movq	%r12, %rdi
    0000090f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2319
    00000914: 	callq	clock@PLT # Offset: 2324
    00000919: 	movl	iterations(%rip), %ecx
    0000091f: 	xorl	%r13d, %r13d
    00000922: 	movq	%rax, start_time(%rip)
    00000929: 	testl	%ecx, %ecx
    0000092b: 	jle	.Ltmp618 # Offset: 2347
    00000931: 	nopl	(%rax) # Size: 7
.Ltmp621:
    00000938: 	movq	%rbp, %rax
    0000093b: 	pxor	%xmm0, %xmm0
    0000093f: 	nop # Size: 1
.Ltmp619:
    00000940: 	paddw	(%rax), %xmm0
    00000944: 	addq	$0x10, %rax
    00000948: 	cmpq	%rbx, %rax
    0000094b: 	jne	.Ltmp619 # Offset: 2379
    0000094d: 	movdqa	%xmm0, %xmm1
    00000951: 	cvttsd2si	init_value(%rip), %eax
    00000959: 	psrldq	$0x8, %xmm1
    0000095e: 	paddw	%xmm1, %xmm0
    00000962: 	movdqa	%xmm0, %xmm1
    00000966: 	psrldq	$0x4, %xmm1
    0000096b: 	imulw	$0x1f40, %ax, %ax
    00000970: 	paddw	%xmm1, %xmm0
    00000974: 	movdqa	%xmm0, %xmm1
    00000978: 	psrldq	$0x2, %xmm1
    0000097d: 	paddw	%xmm1, %xmm0
    00000981: 	pextrw	$0x0, %xmm0, %edx
    00000986: 	cmpw	%dx, %ax
    00000989: 	je	.Ltmp620 # Offset: 2441
    0000098b: 	movl	current_test(%rip), %edx
    00000991: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000998: 	movl	$0x1, %edi
    0000099d: 	xorl	%eax, %eax
    0000099f: 	callq	__printf_chk@PLT # Offset: 2463
    000009a4: 	movl	iterations(%rip), %ecx
.Ltmp620:
    000009aa: 	addl	$0x1, %r13d
    000009ae: 	cmpl	%ecx, %r13d
    000009b1: 	jl	.Ltmp621 # Offset: 2481
.Ltmp618:
    000009b7: 	movq	%r12, %rdi
    000009ba: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2490
    000009bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009c6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000009d4: 	je	.Ltmp622 # Offset: 2516
.Ltmp742:
    000009da: 	movq	-0x20(%rax), %r13
    000009de: 	callq	clock@PLT # Offset: 2526
    000009e3: 	pxor	%xmm0, %xmm0
    000009e7: 	movq	%rax, end_time(%rip)
    000009ee: 	movq	%r13, %rdi
    000009f1: 	subq	start_time(%rip), %rax
    000009f8: 	cvtsi2sd	%rax, %xmm0
    000009fd: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a05: 	callq	_Z13record_resultdPKc # Offset: 2565
    00000a0a: 	movq	0x60(%rsp), %rdi
    00000a0f: 	cmpq	%r14, %rdi
    00000a12: 	je	.Ltmp623 # Offset: 2578
    00000a14: 	movq	0x70(%rsp), %rax
    00000a19: 	leaq	0x1(%rax), %rsi
    00000a1d: 	callq	_ZdlPvm@PLT # Offset: 2589
.Ltmp623:
    00000a22: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000a29: 	movq	%r15, %rsi
    00000a2c: 	movq	%r12, %rdi
    00000a2f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2607
    00000a34: 	callq	clock@PLT # Offset: 2612
    00000a39: 	movl	iterations(%rip), %ecx
    00000a3f: 	xorl	%r13d, %r13d
    00000a42: 	movq	%rax, start_time(%rip)
    00000a49: 	testl	%ecx, %ecx
    00000a4b: 	jle	.Ltmp624 # Offset: 2635
    00000a51: 	nopl	(%rax) # Size: 7
.Ltmp627:
    00000a58: 	movq	%rbp, %rax
    00000a5b: 	pxor	%xmm0, %xmm0
    00000a5f: 	nop # Size: 1
.Ltmp625:
    00000a60: 	paddw	(%rax), %xmm0
    00000a64: 	addq	$0x10, %rax
    00000a68: 	cmpq	%rbx, %rax
    00000a6b: 	jne	.Ltmp625 # Offset: 2667
    00000a6d: 	movdqa	%xmm0, %xmm1
    00000a71: 	cvttsd2si	init_value(%rip), %eax
    00000a79: 	psrldq	$0x8, %xmm1
    00000a7e: 	paddw	%xmm1, %xmm0
    00000a82: 	movdqa	%xmm0, %xmm1
    00000a86: 	psrldq	$0x4, %xmm1
    00000a8b: 	imulw	$0x1f40, %ax, %ax
    00000a90: 	paddw	%xmm1, %xmm0
    00000a94: 	movdqa	%xmm0, %xmm1
    00000a98: 	psrldq	$0x2, %xmm1
    00000a9d: 	paddw	%xmm1, %xmm0
    00000aa1: 	pextrw	$0x0, %xmm0, %edx
    00000aa6: 	cmpw	%dx, %ax
    00000aa9: 	je	.Ltmp626 # Offset: 2729
    00000aab: 	movl	current_test(%rip), %edx
    00000ab1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000ab8: 	movl	$0x1, %edi
    00000abd: 	xorl	%eax, %eax
    00000abf: 	callq	__printf_chk@PLT # Offset: 2751
    00000ac4: 	movl	iterations(%rip), %ecx
.Ltmp626:
    00000aca: 	addl	$0x1, %r13d
    00000ace: 	cmpl	%ecx, %r13d
    00000ad1: 	jl	.Ltmp627 # Offset: 2769
.Ltmp624:
    00000ad7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ade: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000ae5: 	subq	$0x20, %rax
    00000ae9: 	cmpq	%rax, %r13
    00000aec: 	je	.Ltmp628 # Offset: 2796
    00000af2: 	leaq	0x10(%r13), %rdi
    00000af6: 	movq	0x68(%rsp), %rcx
    00000afb: 	movq	%rdi, (%r13)
    00000aff: 	movq	0x60(%rsp), %rsi
    00000b04: 	movq	%rcx, 0x8(%rsp)
    00000b09: 	movq	%rsi, %rax
    00000b0c: 	movq	%rsi, 0x18(%rsp)
    00000b11: 	addq	%rcx, %rax
    00000b14: 	je	.Ltmp629 # Offset: 2836
    00000b16: 	testq	%rsi, %rsi
    00000b19: 	je	.Ltmp630 # Offset: 2841
.Ltmp629:
    00000b1f: 	movq	0x8(%rsp), %rax
    00000b24: 	movq	%rax, 0x20(%rsp)
    00000b29: 	cmpq	$0xf, %rax
    00000b2d: 	ja	.Ltmp631 # Offset: 2861
    00000b33: 	cmpq	$0x1, 0x8(%rsp)
    00000b39: 	jne	.Ltmp632 # Offset: 2873
    00000b3f: 	movq	0x18(%rsp), %rax
    00000b44: 	movzbl	(%rax), %eax
    00000b47: 	movb	%al, 0x10(%r13)
.Ltmp747:
    00000b4b: 	movq	0x8(%rsp), %rax
    00000b50: 	movq	%rax, 0x8(%r13)
    00000b54: 	movb	$0x0, (%rdi,%rax)
    00000b58: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b5f: 	addq	$0x20, %rax
    00000b63: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp741:
    00000b6a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000b71: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b78: 	je	.Ltmp633 # Offset: 2936
.Ltmp740:
    00000b7e: 	movq	-0x20(%rax), %r13
    00000b82: 	callq	clock@PLT # Offset: 2946
    00000b87: 	pxor	%xmm0, %xmm0
    00000b8b: 	movq	%rax, end_time(%rip)
    00000b92: 	movq	%r13, %rdi
    00000b95: 	subq	start_time(%rip), %rax
    00000b9c: 	cvtsi2sd	%rax, %xmm0
    00000ba1: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ba9: 	callq	_Z13record_resultdPKc # Offset: 2985
    00000bae: 	movq	0x60(%rsp), %rdi
    00000bb3: 	cmpq	%r14, %rdi
    00000bb6: 	je	.Ltmp634 # Offset: 2998
    00000bb8: 	movq	0x70(%rsp), %rax
    00000bbd: 	leaq	0x1(%rax), %rsi
    00000bc1: 	callq	_ZdlPvm@PLT # Offset: 3009
.Ltmp634:
    00000bc6: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000bcd: 	movq	%r15, %rsi
    00000bd0: 	movq	%r12, %rdi
    00000bd3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3027
    00000bd8: 	callq	clock@PLT # Offset: 3032
    00000bdd: 	movl	iterations(%rip), %ecx
    00000be3: 	xorl	%r13d, %r13d
    00000be6: 	movq	%rax, start_time(%rip)
    00000bed: 	testl	%ecx, %ecx
    00000bef: 	jle	.Ltmp635 # Offset: 3055
    00000bf5: 	nopl	(%rax) # Size: 3
.Ltmp638:
    00000bf8: 	movq	%rbp, %rax
    00000bfb: 	pxor	%xmm0, %xmm0
    00000bff: 	nop # Size: 1
.Ltmp636:
    00000c00: 	paddw	(%rax), %xmm0
    00000c04: 	addq	$0x10, %rax
    00000c08: 	cmpq	%rax, %rbx
    00000c0b: 	jne	.Ltmp636 # Offset: 3083
    00000c0d: 	movdqa	%xmm0, %xmm1
    00000c11: 	cvttsd2si	init_value(%rip), %eax
    00000c19: 	psrldq	$0x8, %xmm1
    00000c1e: 	paddw	%xmm1, %xmm0
    00000c22: 	movdqa	%xmm0, %xmm1
    00000c26: 	psrldq	$0x4, %xmm1
    00000c2b: 	imulw	$0x1f40, %ax, %ax
    00000c30: 	paddw	%xmm1, %xmm0
    00000c34: 	movdqa	%xmm0, %xmm1
    00000c38: 	psrldq	$0x2, %xmm1
    00000c3d: 	paddw	%xmm1, %xmm0
    00000c41: 	pextrw	$0x0, %xmm0, %edx
    00000c46: 	cmpw	%dx, %ax
    00000c49: 	je	.Ltmp637 # Offset: 3145
    00000c4b: 	movl	current_test(%rip), %edx
    00000c51: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000c58: 	movl	$0x1, %edi
    00000c5d: 	xorl	%eax, %eax
    00000c5f: 	callq	__printf_chk@PLT # Offset: 3167
    00000c64: 	movl	iterations(%rip), %ecx
.Ltmp637:
    00000c6a: 	addl	$0x1, %r13d
    00000c6e: 	cmpl	%ecx, %r13d
    00000c71: 	jl	.Ltmp638 # Offset: 3185
.Ltmp635:
    00000c73: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c7a: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000c81: 	subq	$0x20, %rax
    00000c85: 	cmpq	%rax, %r13
    00000c88: 	je	.Ltmp639 # Offset: 3208
    00000c8e: 	leaq	0x10(%r13), %rdi
    00000c92: 	movq	0x68(%rsp), %rcx
    00000c97: 	movq	%rdi, (%r13)
    00000c9b: 	movq	0x60(%rsp), %rsi
    00000ca0: 	movq	%rcx, 0x8(%rsp)
    00000ca5: 	movq	%rsi, %rax
    00000ca8: 	movq	%rsi, 0x18(%rsp)
    00000cad: 	addq	%rcx, %rax
    00000cb0: 	je	.Ltmp640 # Offset: 3248
    00000cb2: 	testq	%rsi, %rsi
    00000cb5: 	je	.Ltmp641 # Offset: 3253
.Ltmp640:
    00000cbb: 	movq	0x8(%rsp), %rax
    00000cc0: 	movq	%rax, 0x20(%rsp)
    00000cc5: 	cmpq	$0xf, %rax
    00000cc9: 	ja	.Ltmp642 # Offset: 3273
    00000ccf: 	cmpq	$0x1, 0x8(%rsp)
    00000cd5: 	jne	.Ltmp643 # Offset: 3285
    00000cdb: 	movq	0x18(%rsp), %rax
    00000ce0: 	movzbl	(%rax), %eax
    00000ce3: 	movb	%al, 0x10(%r13)
.Ltmp753:
    00000ce7: 	movq	0x8(%rsp), %rax
    00000cec: 	movq	%rax, 0x8(%r13)
    00000cf0: 	movb	$0x0, (%rdi,%rax)
    00000cf4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cfb: 	addq	$0x20, %rax
    00000cff: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp739:
    00000d06: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d0d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d14: 	je	.Ltmp644 # Offset: 3348
.Ltmp738:
    00000d1a: 	movq	-0x20(%rax), %r13
    00000d1e: 	callq	clock@PLT # Offset: 3358
    00000d23: 	pxor	%xmm0, %xmm0
    00000d27: 	movq	%rax, end_time(%rip)
    00000d2e: 	movq	%r13, %rdi
    00000d31: 	subq	start_time(%rip), %rax
    00000d38: 	cvtsi2sd	%rax, %xmm0
    00000d3d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d45: 	callq	_Z13record_resultdPKc # Offset: 3397
    00000d4a: 	movq	0x60(%rsp), %rdi
    00000d4f: 	cmpq	%r14, %rdi
    00000d52: 	je	.Ltmp645 # Offset: 3410
    00000d54: 	movq	0x70(%rsp), %rax
    00000d59: 	leaq	0x1(%rax), %rsi
    00000d5d: 	callq	_ZdlPvm@PLT # Offset: 3421
.Ltmp645:
    00000d62: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000d69: 	movq	%r15, %rsi
    00000d6c: 	movq	%r12, %rdi
    00000d6f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3439
    00000d74: 	callq	clock@PLT # Offset: 3444
    00000d79: 	movl	iterations(%rip), %ecx
    00000d7f: 	xorl	%r13d, %r13d
    00000d82: 	movq	%rax, start_time(%rip)
    00000d89: 	testl	%ecx, %ecx
    00000d8b: 	jle	.Ltmp646 # Offset: 3467
    00000d91: 	nopl	(%rax) # Size: 7
.Ltmp649:
    00000d98: 	movq	%rbp, %rax
    00000d9b: 	pxor	%xmm0, %xmm0
    00000d9f: 	nop # Size: 1
.Ltmp647:
    00000da0: 	paddw	(%rax), %xmm0
    00000da4: 	addq	$0x10, %rax
    00000da8: 	cmpq	%rbx, %rax
    00000dab: 	jne	.Ltmp647 # Offset: 3499
    00000dad: 	movdqa	%xmm0, %xmm1
    00000db1: 	cvttsd2si	init_value(%rip), %eax
    00000db9: 	psrldq	$0x8, %xmm1
    00000dbe: 	paddw	%xmm1, %xmm0
    00000dc2: 	movdqa	%xmm0, %xmm1
    00000dc6: 	psrldq	$0x4, %xmm1
    00000dcb: 	imulw	$0x1f40, %ax, %ax
    00000dd0: 	paddw	%xmm1, %xmm0
    00000dd4: 	movdqa	%xmm0, %xmm1
    00000dd8: 	psrldq	$0x2, %xmm1
    00000ddd: 	paddw	%xmm1, %xmm0
    00000de1: 	pextrw	$0x0, %xmm0, %edx
    00000de6: 	cmpw	%dx, %ax
    00000de9: 	je	.Ltmp648 # Offset: 3561
    00000deb: 	movl	current_test(%rip), %edx
    00000df1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000df8: 	movl	$0x1, %edi
    00000dfd: 	xorl	%eax, %eax
    00000dff: 	callq	__printf_chk@PLT # Offset: 3583
    00000e04: 	movl	iterations(%rip), %ecx
.Ltmp648:
    00000e0a: 	addl	$0x1, %r13d
    00000e0e: 	cmpl	%ecx, %r13d
    00000e11: 	jl	.Ltmp649 # Offset: 3601
.Ltmp646:
    00000e17: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e1e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000e25: 	subq	$0x20, %rax
    00000e29: 	cmpq	%rax, %r13
    00000e2c: 	je	.Ltmp650 # Offset: 3628
    00000e32: 	leaq	0x10(%r13), %rdi
    00000e36: 	movq	0x68(%rsp), %rcx
    00000e3b: 	movq	%rdi, (%r13)
    00000e3f: 	movq	0x60(%rsp), %rsi
    00000e44: 	movq	%rcx, 0x8(%rsp)
    00000e49: 	movq	%rsi, %rax
    00000e4c: 	movq	%rsi, 0x18(%rsp)
    00000e51: 	addq	%rcx, %rax
    00000e54: 	je	.Ltmp651 # Offset: 3668
    00000e56: 	testq	%rsi, %rsi
    00000e59: 	je	.Ltmp652 # Offset: 3673
.Ltmp651:
    00000e5f: 	movq	0x8(%rsp), %rax
    00000e64: 	movq	%rax, 0x20(%rsp)
    00000e69: 	cmpq	$0xf, %rax
    00000e6d: 	ja	.Ltmp653 # Offset: 3693
    00000e73: 	cmpq	$0x1, 0x8(%rsp)
    00000e79: 	jne	.Ltmp654 # Offset: 3705
    00000e7f: 	movq	0x18(%rsp), %rax
    00000e84: 	movzbl	(%rax), %eax
    00000e87: 	movb	%al, 0x10(%r13)
.Ltmp755:
    00000e8b: 	movq	0x8(%rsp), %rax
    00000e90: 	movq	%rax, 0x8(%r13)
    00000e94: 	movb	$0x0, (%rdi,%rax)
    00000e98: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e9f: 	addq	$0x20, %rax
    00000ea3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp737:
    00000eaa: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000eb1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eb8: 	je	.Ltmp655 # Offset: 3768
.Ltmp730:
    00000ebe: 	movq	-0x20(%rax), %r13
    00000ec2: 	callq	clock@PLT # Offset: 3778
    00000ec7: 	pxor	%xmm0, %xmm0
    00000ecb: 	movq	%rax, end_time(%rip)
    00000ed2: 	movq	%r13, %rdi
    00000ed5: 	subq	start_time(%rip), %rax
    00000edc: 	cvtsi2sd	%rax, %xmm0
    00000ee1: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ee9: 	callq	_Z13record_resultdPKc # Offset: 3817
    00000eee: 	movq	0x60(%rsp), %rdi
    00000ef3: 	cmpq	%r14, %rdi
    00000ef6: 	je	.Ltmp656 # Offset: 3830
    00000ef8: 	movq	0x70(%rsp), %rax
    00000efd: 	leaq	0x1(%rax), %rsi
    00000f01: 	callq	_ZdlPvm@PLT # Offset: 3841
.Ltmp656:
    00000f06: 	leaq	DATAat0x1a27b(%rip), %rdx
    00000f0d: 	movq	%r15, %rsi
    00000f10: 	movq	%r12, %rdi
    00000f13: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3859
    00000f18: 	callq	clock@PLT # Offset: 3864
    00000f1d: 	movl	iterations(%rip), %ecx
    00000f23: 	xorl	%r13d, %r13d
    00000f26: 	movq	%rax, start_time(%rip)
    00000f2d: 	testl	%ecx, %ecx
    00000f2f: 	jle	.Ltmp657 # Offset: 3887
    00000f35: 	nopl	(%rax) # Size: 3
.Ltmp660:
    00000f38: 	movq	%rbp, %rax
    00000f3b: 	pxor	%xmm0, %xmm0
    00000f3f: 	nop # Size: 1
.Ltmp658:
    00000f40: 	paddw	(%rax), %xmm0
    00000f44: 	addq	$0x10, %rax
    00000f48: 	cmpq	%rax, %rbx
    00000f4b: 	jne	.Ltmp658 # Offset: 3915
    00000f4d: 	movdqa	%xmm0, %xmm1
    00000f51: 	cvttsd2si	init_value(%rip), %eax
    00000f59: 	psrldq	$0x8, %xmm1
    00000f5e: 	paddw	%xmm1, %xmm0
    00000f62: 	movdqa	%xmm0, %xmm1
    00000f66: 	psrldq	$0x4, %xmm1
    00000f6b: 	imulw	$0x1f40, %ax, %ax
    00000f70: 	paddw	%xmm1, %xmm0
    00000f74: 	movdqa	%xmm0, %xmm1
    00000f78: 	psrldq	$0x2, %xmm1
    00000f7d: 	paddw	%xmm1, %xmm0
    00000f81: 	pextrw	$0x0, %xmm0, %edx
    00000f86: 	cmpw	%dx, %ax
    00000f89: 	je	.Ltmp659 # Offset: 3977
    00000f8b: 	movl	current_test(%rip), %edx
    00000f91: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000f98: 	movl	$0x1, %edi
    00000f9d: 	xorl	%eax, %eax
    00000f9f: 	callq	__printf_chk@PLT # Offset: 3999
    00000fa4: 	movl	iterations(%rip), %ecx
.Ltmp659:
    00000faa: 	addl	$0x1, %r13d
    00000fae: 	cmpl	%ecx, %r13d
    00000fb1: 	jl	.Ltmp660 # Offset: 4017
.Ltmp657:
    00000fb3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fba: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000fc1: 	subq	$0x20, %rax
    00000fc5: 	cmpq	%rax, %r13
    00000fc8: 	je	.Ltmp661 # Offset: 4040
    00000fce: 	leaq	0x10(%r13), %rdi
    00000fd2: 	movq	0x68(%rsp), %rcx
    00000fd7: 	movq	%rdi, (%r13)
    00000fdb: 	movq	0x60(%rsp), %rsi
    00000fe0: 	movq	%rcx, 0x8(%rsp)
    00000fe5: 	movq	%rsi, %rax
    00000fe8: 	movq	%rsi, 0x18(%rsp)
    00000fed: 	addq	%rcx, %rax
    00000ff0: 	je	.Ltmp662 # Offset: 4080
    00000ff2: 	testq	%rsi, %rsi
    00000ff5: 	je	.Ltmp663 # Offset: 4085
.Ltmp662:
    00000ffb: 	movq	0x8(%rsp), %rax
    00001000: 	movq	%rax, 0x20(%rsp)
    00001005: 	cmpq	$0xf, %rax
    00001009: 	ja	.Ltmp664 # Offset: 4105
    0000100f: 	cmpq	$0x1, 0x8(%rsp)
    00001015: 	jne	.Ltmp665 # Offset: 4117
    0000101b: 	movq	0x18(%rsp), %rax
    00001020: 	movzbl	(%rax), %eax
    00001023: 	movb	%al, 0x10(%r13)
.Ltmp762:
    00001027: 	movq	0x8(%rsp), %rax
    0000102c: 	movq	%rax, 0x8(%r13)
    00001030: 	movb	$0x0, (%rdi,%rax)
    00001034: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000103b: 	addq	$0x20, %rax
    0000103f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp729:
    00001046: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000104d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001054: 	je	.Ltmp666 # Offset: 4180
.Ltmp728:
    0000105a: 	movq	-0x20(%rax), %r13
    0000105e: 	callq	clock@PLT # Offset: 4190
    00001063: 	pxor	%xmm0, %xmm0
    00001067: 	movq	%rax, end_time(%rip)
    0000106e: 	movq	%r13, %rdi
    00001071: 	subq	start_time(%rip), %rax
    00001078: 	cvtsi2sd	%rax, %xmm0
    0000107d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001085: 	callq	_Z13record_resultdPKc # Offset: 4229
    0000108a: 	movq	0x60(%rsp), %rdi
    0000108f: 	cmpq	%r14, %rdi
    00001092: 	je	.Ltmp667 # Offset: 4242
    00001094: 	movq	0x70(%rsp), %rax
    00001099: 	leaq	0x1(%rax), %rsi
    0000109d: 	callq	_ZdlPvm@PLT # Offset: 4253
.Ltmp667:
    000010a2: 	leaq	DATAat0x1a28b(%rip), %rdx
    000010a9: 	movq	%r15, %rsi
    000010ac: 	movq	%r12, %rdi
    000010af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4271
    000010b4: 	callq	clock@PLT # Offset: 4276
    000010b9: 	movl	iterations(%rip), %ecx
    000010bf: 	xorl	%r13d, %r13d
    000010c2: 	movq	%rax, start_time(%rip)
    000010c9: 	testl	%ecx, %ecx
    000010cb: 	jle	.Ltmp668 # Offset: 4299
    000010d1: 	nopl	(%rax) # Size: 7
.Ltmp671:
    000010d8: 	movq	%rbp, %rax
    000010db: 	pxor	%xmm0, %xmm0
    000010df: 	nop # Size: 1
.Ltmp669:
    000010e0: 	paddw	(%rax), %xmm0
    000010e4: 	addq	$0x10, %rax
    000010e8: 	cmpq	%rbx, %rax
    000010eb: 	jne	.Ltmp669 # Offset: 4331
    000010ed: 	movdqa	%xmm0, %xmm1
    000010f1: 	cvttsd2si	init_value(%rip), %eax
    000010f9: 	psrldq	$0x8, %xmm1
    000010fe: 	paddw	%xmm1, %xmm0
    00001102: 	movdqa	%xmm0, %xmm1
    00001106: 	psrldq	$0x4, %xmm1
    0000110b: 	imulw	$0x1f40, %ax, %ax
    00001110: 	paddw	%xmm1, %xmm0
    00001114: 	movdqa	%xmm0, %xmm1
    00001118: 	psrldq	$0x2, %xmm1
    0000111d: 	paddw	%xmm1, %xmm0
    00001121: 	pextrw	$0x0, %xmm0, %edx
    00001126: 	cmpw	%dx, %ax
    00001129: 	je	.Ltmp670 # Offset: 4393
    0000112b: 	movl	current_test(%rip), %edx
    00001131: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001138: 	movl	$0x1, %edi
    0000113d: 	xorl	%eax, %eax
    0000113f: 	callq	__printf_chk@PLT # Offset: 4415
    00001144: 	movl	iterations(%rip), %ecx
.Ltmp670:
    0000114a: 	addl	$0x1, %r13d
    0000114e: 	cmpl	%ecx, %r13d
    00001151: 	jl	.Ltmp671 # Offset: 4433
.Ltmp668:
    00001157: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000115e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001165: 	subq	$0x20, %rax
    00001169: 	cmpq	%rax, %r13
    0000116c: 	je	.Ltmp672 # Offset: 4460
    00001172: 	leaq	0x10(%r13), %rdi
    00001176: 	movq	0x68(%rsp), %rcx
    0000117b: 	movq	%rdi, (%r13)
    0000117f: 	movq	0x60(%rsp), %rsi
    00001184: 	movq	%rcx, 0x8(%rsp)
    00001189: 	movq	%rsi, %rax
    0000118c: 	movq	%rsi, 0x18(%rsp)
    00001191: 	addq	%rcx, %rax
    00001194: 	je	.Ltmp673 # Offset: 4500
    00001196: 	testq	%rsi, %rsi
    00001199: 	je	.Ltmp674 # Offset: 4505
.Ltmp673:
    0000119f: 	movq	0x8(%rsp), %rax
    000011a4: 	movq	%rax, 0x20(%rsp)
    000011a9: 	cmpq	$0xf, %rax
    000011ad: 	ja	.Ltmp675 # Offset: 4525
    000011b3: 	cmpq	$0x1, 0x8(%rsp)
    000011b9: 	jne	.Ltmp676 # Offset: 4537
    000011bf: 	movq	0x18(%rsp), %rax
    000011c4: 	movzbl	(%rax), %eax
    000011c7: 	movb	%al, 0x10(%r13)
.Ltmp759:
    000011cb: 	movq	0x8(%rsp), %rax
    000011d0: 	movq	%rax, 0x8(%r13)
    000011d4: 	movb	$0x0, (%rdi,%rax)
    000011d8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000011df: 	addq	$0x20, %rax
    000011e3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp727:
    000011ea: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000011f1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000011f8: 	je	.Ltmp677 # Offset: 4600
.Ltmp726:
    000011fe: 	movq	-0x20(%rax), %r13
    00001202: 	callq	clock@PLT # Offset: 4610
    00001207: 	pxor	%xmm0, %xmm0
    0000120b: 	movq	%rax, end_time(%rip)
    00001212: 	movq	%r13, %rdi
    00001215: 	subq	start_time(%rip), %rax
    0000121c: 	cvtsi2sd	%rax, %xmm0
    00001221: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001229: 	callq	_Z13record_resultdPKc # Offset: 4649
    0000122e: 	movq	0x60(%rsp), %rdi
    00001233: 	cmpq	%r14, %rdi
    00001236: 	je	.Ltmp678 # Offset: 4662
    00001238: 	movq	0x70(%rsp), %rax
    0000123d: 	leaq	0x1(%rax), %rsi
    00001241: 	callq	_ZdlPvm@PLT # Offset: 4673
.Ltmp678:
    00001246: 	leaq	DATAat0x1a29b(%rip), %rdx
    0000124d: 	movq	%r15, %rsi
    00001250: 	movq	%r12, %rdi
    00001253: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4691
    00001258: 	callq	clock@PLT # Offset: 4696
    0000125d: 	movl	iterations(%rip), %ecx
    00001263: 	xorl	%r13d, %r13d
    00001266: 	movq	%rax, start_time(%rip)
    0000126d: 	testl	%ecx, %ecx
    0000126f: 	jle	.Ltmp679 # Offset: 4719
    00001275: 	nopl	(%rax) # Size: 3
.Ltmp682:
    00001278: 	movq	%rbp, %rax
    0000127b: 	pxor	%xmm0, %xmm0
    0000127f: 	nop # Size: 1
.Ltmp680:
    00001280: 	paddw	(%rax), %xmm0
    00001284: 	addq	$0x10, %rax
    00001288: 	cmpq	%rbx, %rax
    0000128b: 	jne	.Ltmp680 # Offset: 4747
    0000128d: 	movdqa	%xmm0, %xmm1
    00001291: 	cvttsd2si	init_value(%rip), %eax
    00001299: 	psrldq	$0x8, %xmm1
    0000129e: 	paddw	%xmm1, %xmm0
    000012a2: 	movdqa	%xmm0, %xmm1
    000012a6: 	psrldq	$0x4, %xmm1
    000012ab: 	imulw	$0x1f40, %ax, %ax
    000012b0: 	paddw	%xmm1, %xmm0
    000012b4: 	movdqa	%xmm0, %xmm1
    000012b8: 	psrldq	$0x2, %xmm1
    000012bd: 	paddw	%xmm1, %xmm0
    000012c1: 	pextrw	$0x0, %xmm0, %edx
    000012c6: 	cmpw	%dx, %ax
    000012c9: 	je	.Ltmp681 # Offset: 4809
    000012cb: 	movl	current_test(%rip), %edx
    000012d1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000012d8: 	movl	$0x1, %edi
    000012dd: 	xorl	%eax, %eax
    000012df: 	callq	__printf_chk@PLT # Offset: 4831
    000012e4: 	movl	iterations(%rip), %ecx
.Ltmp681:
    000012ea: 	addl	$0x1, %r13d
    000012ee: 	cmpl	%ecx, %r13d
    000012f1: 	jl	.Ltmp682 # Offset: 4849
.Ltmp679:
    000012f3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000012fa: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001301: 	subq	$0x20, %rax
    00001305: 	cmpq	%rax, %r13
    00001308: 	je	.Ltmp683 # Offset: 4872
    0000130e: 	leaq	0x10(%r13), %rdi
    00001312: 	movq	0x68(%rsp), %rcx
    00001317: 	movq	%rdi, (%r13)
    0000131b: 	movq	0x60(%rsp), %rsi
    00001320: 	movq	%rcx, 0x8(%rsp)
    00001325: 	movq	%rsi, %rax
    00001328: 	movq	%rsi, 0x18(%rsp)
    0000132d: 	addq	%rcx, %rax
    00001330: 	je	.Ltmp684 # Offset: 4912
    00001332: 	testq	%rsi, %rsi
    00001335: 	je	.Ltmp685 # Offset: 4917
.Ltmp684:
    0000133b: 	movq	0x8(%rsp), %rax
    00001340: 	movq	%rax, 0x20(%rsp)
    00001345: 	cmpq	$0xf, %rax
    00001349: 	ja	.Ltmp686 # Offset: 4937
    0000134f: 	cmpq	$0x1, 0x8(%rsp)
    00001355: 	jne	.Ltmp687 # Offset: 4949
    0000135b: 	movq	0x18(%rsp), %rax
    00001360: 	movzbl	(%rax), %eax
    00001363: 	movb	%al, 0x10(%r13)
.Ltmp756:
    00001367: 	movq	0x8(%rsp), %rax
    0000136c: 	movq	%rax, 0x8(%r13)
    00001370: 	movb	$0x0, (%rdi,%rax)
    00001374: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000137b: 	addq	$0x20, %rax
    0000137f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp725:
    00001386: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000138d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001394: 	je	.Ltmp688 # Offset: 5012
.Ltmp724:
    0000139a: 	movq	-0x20(%rax), %r13
    0000139e: 	callq	clock@PLT # Offset: 5022
    000013a3: 	pxor	%xmm0, %xmm0
    000013a7: 	movq	%rax, end_time(%rip)
    000013ae: 	movq	%r13, %rdi
    000013b1: 	subq	start_time(%rip), %rax
    000013b8: 	cvtsi2sd	%rax, %xmm0
    000013bd: 	divsd	DATAat0x1a318(%rip), %xmm0
    000013c5: 	callq	_Z13record_resultdPKc # Offset: 5061
    000013ca: 	movq	0x60(%rsp), %rdi
    000013cf: 	cmpq	%r14, %rdi
    000013d2: 	je	.Ltmp689 # Offset: 5074
    000013d4: 	movq	0x70(%rsp), %rax
    000013d9: 	leaq	0x1(%rax), %rsi
    000013dd: 	callq	_ZdlPvm@PLT # Offset: 5085
.Ltmp689:
    000013e2: 	leaq	DATAat0x1a2af(%rip), %rdx
    000013e9: 	movq	%r15, %rsi
    000013ec: 	movq	%r12, %rdi
    000013ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5103
    000013f4: 	callq	clock@PLT # Offset: 5108
    000013f9: 	movl	iterations(%rip), %ecx
    000013ff: 	xorl	%r13d, %r13d
    00001402: 	movq	%rax, start_time(%rip)
    00001409: 	testl	%ecx, %ecx
    0000140b: 	jle	.Ltmp690 # Offset: 5131
    00001411: 	nopl	(%rax) # Size: 7
.Ltmp693:
    00001418: 	movq	%rbp, %rax
    0000141b: 	pxor	%xmm0, %xmm0
    0000141f: 	nop # Size: 1
.Ltmp691:
    00001420: 	paddw	(%rax), %xmm0
    00001424: 	addq	$0x10, %rax
    00001428: 	cmpq	%rbx, %rax
    0000142b: 	jne	.Ltmp691 # Offset: 5163
    0000142d: 	movdqa	%xmm0, %xmm1
    00001431: 	cvttsd2si	init_value(%rip), %eax
    00001439: 	psrldq	$0x8, %xmm1
    0000143e: 	paddw	%xmm1, %xmm0
    00001442: 	movdqa	%xmm0, %xmm1
    00001446: 	psrldq	$0x4, %xmm1
    0000144b: 	imulw	$0x1f40, %ax, %ax
    00001450: 	paddw	%xmm1, %xmm0
    00001454: 	movdqa	%xmm0, %xmm1
    00001458: 	psrldq	$0x2, %xmm1
    0000145d: 	paddw	%xmm1, %xmm0
    00001461: 	pextrw	$0x0, %xmm0, %edx
    00001466: 	cmpw	%dx, %ax
    00001469: 	je	.Ltmp692 # Offset: 5225
    0000146b: 	movl	current_test(%rip), %edx
    00001471: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001478: 	movl	$0x1, %edi
    0000147d: 	xorl	%eax, %eax
    0000147f: 	callq	__printf_chk@PLT # Offset: 5247
    00001484: 	movl	iterations(%rip), %ecx
.Ltmp692:
    0000148a: 	addl	$0x1, %r13d
    0000148e: 	cmpl	%ecx, %r13d
    00001491: 	jl	.Ltmp693 # Offset: 5265
.Ltmp690:
    00001497: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000149e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000014a5: 	subq	$0x20, %rax
    000014a9: 	cmpq	%rax, %r13
    000014ac: 	je	.Ltmp694 # Offset: 5292
    000014b2: 	leaq	0x10(%r13), %rdi
    000014b6: 	movq	0x68(%rsp), %rcx
    000014bb: 	movq	%rdi, (%r13)
    000014bf: 	movq	0x60(%rsp), %rsi
    000014c4: 	movq	%rcx, 0x8(%rsp)
    000014c9: 	movq	%rsi, %rax
    000014cc: 	movq	%rsi, 0x18(%rsp)
    000014d1: 	addq	%rcx, %rax
    000014d4: 	je	.Ltmp695 # Offset: 5332
    000014d6: 	testq	%rsi, %rsi
    000014d9: 	je	.Ltmp696 # Offset: 5337
.Ltmp695:
    000014df: 	movq	0x8(%rsp), %rax
    000014e4: 	movq	%rax, 0x20(%rsp)
    000014e9: 	cmpq	$0xf, %rax
    000014ed: 	ja	.Ltmp697 # Offset: 5357
    000014f3: 	cmpq	$0x1, 0x8(%rsp)
    000014f9: 	jne	.Ltmp698 # Offset: 5369
    000014ff: 	movq	0x18(%rsp), %rax
    00001504: 	movzbl	(%rax), %eax
    00001507: 	movb	%al, 0x10(%r13)
.Ltmp758:
    0000150b: 	movq	0x8(%rsp), %rax
    00001510: 	movq	%rax, 0x8(%r13)
    00001514: 	movb	$0x0, (%rdi,%rax)
    00001518: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000151f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001526: 	addq	$0x20, %rax
    0000152a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001531: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001538: 	je	.Ltmp699 # Offset: 5432
.Ltmp723:
    0000153e: 	movq	-0x20(%rax), %r13
    00001542: 	callq	clock@PLT # Offset: 5442
    00001547: 	pxor	%xmm0, %xmm0
    0000154b: 	movq	%rax, end_time(%rip)
    00001552: 	movq	%r13, %rdi
    00001555: 	subq	start_time(%rip), %rax
    0000155c: 	cvtsi2sd	%rax, %xmm0
    00001561: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001569: 	callq	_Z13record_resultdPKc # Offset: 5481
    0000156e: 	movq	0x60(%rsp), %rdi
    00001573: 	cmpq	%r14, %rdi
    00001576: 	je	.Ltmp700 # Offset: 5494
    00001578: 	movq	0x70(%rsp), %rax
    0000157d: 	leaq	0x1(%rax), %rsi
    00001581: 	callq	_ZdlPvm@PLT # Offset: 5505
.Ltmp700:
    00001586: 	leaq	DATAat0x1a2c4(%rip), %rdx
    0000158d: 	movq	%r15, %rsi
    00001590: 	movq	%r12, %rdi
    00001593: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5523
    00001598: 	callq	clock@PLT # Offset: 5528
    0000159d: 	movl	iterations(%rip), %ecx
    000015a3: 	xorl	%r13d, %r13d
    000015a6: 	movq	%rax, start_time(%rip)
    000015ad: 	testl	%ecx, %ecx
    000015af: 	jle	.Ltmp701 # Offset: 5551
    000015b5: 	nopl	(%rax) # Size: 3
.Ltmp704:
    000015b8: 	movq	%rbp, %rax
    000015bb: 	pxor	%xmm0, %xmm0
    000015bf: 	nop # Size: 1
.Ltmp702:
    000015c0: 	paddw	(%rax), %xmm0
    000015c4: 	addq	$0x10, %rax
    000015c8: 	cmpq	%rbx, %rax
    000015cb: 	jne	.Ltmp702 # Offset: 5579
    000015cd: 	movdqa	%xmm0, %xmm1
    000015d1: 	cvttsd2si	init_value(%rip), %eax
    000015d9: 	psrldq	$0x8, %xmm1
    000015de: 	paddw	%xmm1, %xmm0
    000015e2: 	movdqa	%xmm0, %xmm1
    000015e6: 	psrldq	$0x4, %xmm1
    000015eb: 	imulw	$0x1f40, %ax, %ax
    000015f0: 	paddw	%xmm1, %xmm0
    000015f4: 	movdqa	%xmm0, %xmm1
    000015f8: 	psrldq	$0x2, %xmm1
    000015fd: 	paddw	%xmm1, %xmm0
    00001601: 	pextrw	$0x0, %xmm0, %edx
    00001606: 	cmpw	%dx, %ax
    00001609: 	je	.Ltmp703 # Offset: 5641
    0000160b: 	movl	current_test(%rip), %edx
    00001611: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001618: 	movl	$0x1, %edi
    0000161d: 	xorl	%eax, %eax
    0000161f: 	callq	__printf_chk@PLT # Offset: 5663
    00001624: 	movl	iterations(%rip), %ecx
.Ltmp703:
    0000162a: 	addl	$0x1, %r13d
    0000162e: 	cmpl	%ecx, %r13d
    00001631: 	jl	.Ltmp704 # Offset: 5681
.Ltmp701:
    00001633: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000163a: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001641: 	subq	$0x20, %rax
    00001645: 	cmpq	%rax, %r13
    00001648: 	je	.Ltmp705 # Offset: 5704
    0000164e: 	leaq	0x10(%r13), %rdi
    00001652: 	movq	0x68(%rsp), %rcx
    00001657: 	movq	%rdi, (%r13)
    0000165b: 	movq	0x60(%rsp), %rsi
    00001660: 	movq	%rcx, 0x8(%rsp)
    00001665: 	movq	%rsi, %rax
    00001668: 	movq	%rsi, 0x18(%rsp)
    0000166d: 	addq	%rcx, %rax
    00001670: 	je	.Ltmp706 # Offset: 5744
    00001672: 	testq	%rsi, %rsi
    00001675: 	je	.Ltmp707 # Offset: 5749
.Ltmp706:
    0000167b: 	movq	0x8(%rsp), %rax
    00001680: 	movq	%rax, 0x20(%rsp)
    00001685: 	cmpq	$0xf, %rax
    00001689: 	ja	.Ltmp708 # Offset: 5769
    0000168f: 	cmpq	$0x1, 0x8(%rsp)
    00001695: 	jne	.Ltmp709 # Offset: 5781
    0000169b: 	movq	0x18(%rsp), %rax
    000016a0: 	movzbl	(%rax), %eax
    000016a3: 	movb	%al, 0x10(%r13)
.Ltmp761:
    000016a7: 	movq	0x8(%rsp), %rax
    000016ac: 	movq	%rax, 0x8(%r13)
    000016b0: 	movb	$0x0, (%rdi,%rax)
    000016b4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016bb: 	addq	$0x20, %rax
    000016bf: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp733:
    000016c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000016cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016d4: 	je	.Ltmp710 # Offset: 5844
.Ltmp732:
    000016da: 	movq	-0x20(%rax), %r13
    000016de: 	callq	clock@PLT # Offset: 5854
    000016e3: 	pxor	%xmm0, %xmm0
    000016e7: 	movq	%rax, end_time(%rip)
    000016ee: 	movq	%r13, %rdi
    000016f1: 	subq	start_time(%rip), %rax
    000016f8: 	cvtsi2sd	%rax, %xmm0
    000016fd: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001705: 	callq	_Z13record_resultdPKc # Offset: 5893
    0000170a: 	movq	0x60(%rsp), %rdi
    0000170f: 	cmpq	%r14, %rdi
    00001712: 	je	.Ltmp711 # Offset: 5906
    00001714: 	movq	0x70(%rsp), %rax
    00001719: 	leaq	0x1(%rax), %rsi
    0000171d: 	callq	_ZdlPvm@PLT # Offset: 5917
.Ltmp711:
    00001722: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001729: 	movq	%r15, %rsi
    0000172c: 	movq	%r12, %rdi
    0000172f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5935
    00001734: 	callq	clock@PLT # Offset: 5940
    00001739: 	movl	iterations(%rip), %ecx
    0000173f: 	xorl	%r13d, %r13d
    00001742: 	movq	%rax, start_time(%rip)
    00001749: 	testl	%ecx, %ecx
    0000174b: 	jle	.Ltmp712 # Offset: 5963
    00001751: 	nopl	(%rax) # Size: 7
.Ltmp715:
    00001758: 	movq	%rbp, %rax
    0000175b: 	pxor	%xmm0, %xmm0
    0000175f: 	nop # Size: 1
.Ltmp713:
    00001760: 	paddw	(%rax), %xmm0
    00001764: 	addq	$0x10, %rax
    00001768: 	cmpq	%rbx, %rax
    0000176b: 	jne	.Ltmp713 # Offset: 5995
    0000176d: 	movdqa	%xmm0, %xmm1
    00001771: 	cvttsd2si	init_value(%rip), %eax
    00001779: 	psrldq	$0x8, %xmm1
    0000177e: 	paddw	%xmm1, %xmm0
    00001782: 	movdqa	%xmm0, %xmm1
    00001786: 	psrldq	$0x4, %xmm1
    0000178b: 	imulw	$0x1f40, %ax, %ax
    00001790: 	paddw	%xmm1, %xmm0
    00001794: 	movdqa	%xmm0, %xmm1
    00001798: 	psrldq	$0x2, %xmm1
    0000179d: 	paddw	%xmm1, %xmm0
    000017a1: 	pextrw	$0x0, %xmm0, %edx
    000017a6: 	cmpw	%dx, %ax
    000017a9: 	je	.Ltmp714 # Offset: 6057
    000017ab: 	movl	current_test(%rip), %edx
    000017b1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000017b8: 	movl	$0x1, %edi
    000017bd: 	xorl	%eax, %eax
    000017bf: 	callq	__printf_chk@PLT # Offset: 6079
    000017c4: 	movl	iterations(%rip), %ecx
.Ltmp714:
    000017ca: 	addl	$0x1, %r13d
    000017ce: 	cmpl	%ecx, %r13d
    000017d1: 	jl	.Ltmp715 # Offset: 6097
.Ltmp712:
    000017d7: 	movq	%r12, %rdi
    000017da: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6106
    000017df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017e6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017f4: 	je	.Ltmp716 # Offset: 6132
.Ltmp731:
    000017fa: 	movq	-0x20(%rax), %rbp
    000017fe: 	callq	clock@PLT # Offset: 6142
    00001803: 	pxor	%xmm0, %xmm0
    00001807: 	movq	%rax, end_time(%rip)
    0000180e: 	movq	%rbp, %rdi
    00001811: 	subq	start_time(%rip), %rax
    00001818: 	cvtsi2sd	%rax, %xmm0
    0000181d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001825: 	callq	_Z13record_resultdPKc # Offset: 6181
    0000182a: 	movq	0x60(%rsp), %rdi
    0000182f: 	cmpq	%r14, %rdi
    00001832: 	je	.Ltmp717 # Offset: 6194
    00001834: 	movq	0x70(%rsp), %rax
    00001839: 	leaq	0x1(%rax), %rsi
    0000183d: 	callq	_ZdlPvm@PLT # Offset: 6205
.Ltmp717:
    00001842: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001849: 	movq	%r15, %rsi
    0000184c: 	movq	%r12, %rdi
    0000184f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6223
    00001854: 	movl	iterations(%rip), %edx
    0000185a: 	movq	0x60(%rsp), %rdi
    0000185f: 	xorl	%r8d, %r8d
    00001862: 	xorl	%ecx, %ecx
    00001864: 	movl	$0x1f40, %esi
    00001869: 	callq	_Z9summarizePKciiii # Offset: 6249
    0000186e: 	movq	0x60(%rsp), %rdi
    00001873: 	cmpq	%r14, %rdi
    00001876: 	je	.Ltmp718 # Offset: 6262
    00001878: 	movq	0x70(%rsp), %rax
    0000187d: 	leaq	0x1(%rax), %rsi
    00001881: 	callq	_ZdlPvm@PLT # Offset: 6273
.Ltmp718:
    00001886: 	movq	0x40(%rsp), %rdi
    0000188b: 	cmpq	0x10(%rsp), %rdi
    00001890: 	je	.Ltmp719 # Offset: 6288
    00001892: 	movq	0x50(%rsp), %rax
    00001897: 	leaq	0x1(%rax), %rsi
    0000189b: 	callq	_ZdlPvm@PLT # Offset: 6299
.Ltmp719:
    000018a0: 	movq	0x3f08(%rsp), %rax
    000018a8: 	subq	%fs:0x28, %rax
    000018b1: 	jne	.Ltmp720 # Offset: 6321
    000018b7: 	addq	$0x3f18, %rsp
    000018be: 	popq	%rbx
    000018bf: 	popq	%rbp
    000018c0: 	popq	%r12
    000018c2: 	popq	%r13
    000018c4: 	popq	%r14
    000018c6: 	popq	%r15
    000018c8: 	retq # Offset: 6344
.Ltmp573:
    000018c9: 	movq	(%rsp), %rsi
    000018cd: 	xorl	%edx, %edx
    000018cf: 	movq	%r13, %rdi
    000018d2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6354
    000018d7: 	movq	%rax, (%r13)
    000018db: 	movq	%rax, %rdi
    000018de: 	movq	0x20(%rsp), %rax
    000018e3: 	movq	%rax, 0x10(%r13)
.Ltmp746:
    000018e7: 	movq	0x8(%rsp), %rsi
    000018ec: 	movq	%r14, %rdx
    000018ef: 	callq	memcpy@PLT # Offset: 6383
    000018f4: 	movq	0x20(%rsp), %r14
    000018f9: 	movq	(%r13), %rdi
    000018fd: 	jmp	.Ltmp721 # Offset: 6397
.Ltmp570:
    00001902: 	movq	%r12, %rsi
    00001905: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000190c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6412
    00001911: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001918: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000191f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001926: 	jne	.Ltmp722 # Offset: 6438
.Ltmp575:
    0000192c: 	movq	-0x8(%rdx), %rax
    00001930: 	addq	$0x200, %rax
    00001936: 	jmp	.Ltmp722 # Offset: 6454
.Ltmp694:
    0000193b: 	movq	%r12, %rsi
    0000193e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001945: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6469
    0000194a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001951: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001958: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000195f: 	jne	.Ltmp723 # Offset: 6495
.Ltmp699:
    00001965: 	movq	-0x8(%rdx), %rax
    00001969: 	addq	$0x200, %rax
    0000196f: 	jmp	.Ltmp723 # Offset: 6511
.Ltmp688:
    00001974: 	movq	-0x8(%rdx), %rax
    00001978: 	addq	$0x200, %rax
    0000197e: 	jmp	.Ltmp724 # Offset: 6526
.Ltmp683:
    00001983: 	movq	%r12, %rsi
    00001986: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000198d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6541
    00001992: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001999: 	jmp	.Ltmp725 # Offset: 6553
.Ltmp677:
    0000199e: 	movq	-0x8(%rdx), %rax
    000019a2: 	addq	$0x200, %rax
    000019a8: 	jmp	.Ltmp726 # Offset: 6568
.Ltmp672:
    000019ad: 	movq	%r12, %rsi
    000019b0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019b7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6583
    000019bc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019c3: 	jmp	.Ltmp727 # Offset: 6595
.Ltmp666:
    000019c8: 	movq	-0x8(%rdx), %rax
    000019cc: 	addq	$0x200, %rax
    000019d2: 	jmp	.Ltmp728 # Offset: 6610
.Ltmp661:
    000019d7: 	movq	%r12, %rsi
    000019da: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019e1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6625
    000019e6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019ed: 	jmp	.Ltmp729 # Offset: 6637
.Ltmp655:
    000019f2: 	movq	-0x8(%rdx), %rax
    000019f6: 	addq	$0x200, %rax
    000019fc: 	jmp	.Ltmp730 # Offset: 6652
.Ltmp716:
    00001a01: 	movq	-0x8(%rdx), %rax
    00001a05: 	addq	$0x200, %rax
    00001a0b: 	jmp	.Ltmp731 # Offset: 6667
.Ltmp710:
    00001a10: 	movq	-0x8(%rdx), %rax
    00001a14: 	addq	$0x200, %rax
    00001a1a: 	jmp	.Ltmp732 # Offset: 6682
.Ltmp705:
    00001a1f: 	movq	%r12, %rsi
    00001a22: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a29: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6697
    00001a2e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a35: 	jmp	.Ltmp733 # Offset: 6709
.Ltmp594:
    00001a3a: 	movq	%r12, %rsi
    00001a3d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a44: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6724
    00001a49: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a50: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a57: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a5e: 	jne	.Ltmp734 # Offset: 6750
.Ltmp599:
    00001a64: 	movq	-0x8(%rdx), %rax
    00001a68: 	addq	$0x200, %rax
    00001a6e: 	jmp	.Ltmp734 # Offset: 6766
.Ltmp586:
    00001a73: 	movq	-0x8(%rdx), %rax
    00001a77: 	addq	$0x200, %rax
    00001a7d: 	jmp	.Ltmp735 # Offset: 6781
.Ltmp581:
    00001a82: 	movq	%r12, %rsi
    00001a85: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a8c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6796
    00001a91: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a98: 	jmp	.Ltmp736 # Offset: 6808
.Ltmp650:
    00001a9d: 	movq	%r12, %rsi
    00001aa0: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001aa7: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6823
    00001aac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ab3: 	jmp	.Ltmp737 # Offset: 6835
.Ltmp644:
    00001ab8: 	movq	-0x8(%rdx), %rax
    00001abc: 	addq	$0x200, %rax
    00001ac2: 	jmp	.Ltmp738 # Offset: 6850
.Ltmp639:
    00001ac7: 	movq	%r12, %rsi
    00001aca: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ad1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6865
    00001ad6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001add: 	jmp	.Ltmp739 # Offset: 6877
.Ltmp633:
    00001ae2: 	movq	-0x8(%rdx), %rax
    00001ae6: 	addq	$0x200, %rax
    00001aec: 	jmp	.Ltmp740 # Offset: 6892
.Ltmp628:
    00001af1: 	movq	%r12, %rsi
    00001af4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001afb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6907
    00001b00: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b07: 	jmp	.Ltmp741 # Offset: 6919
.Ltmp622:
    00001b0c: 	movq	-0x8(%rdx), %rax
    00001b10: 	addq	$0x200, %rax
    00001b16: 	jmp	.Ltmp742 # Offset: 6934
.Ltmp616:
    00001b1b: 	movq	-0x8(%rdx), %rax
    00001b1f: 	addq	$0x200, %rax
    00001b25: 	jmp	.Ltmp743 # Offset: 6949
.Ltmp610:
    00001b2a: 	movq	-0x8(%rdx), %rax
    00001b2e: 	addq	$0x200, %rax
    00001b34: 	jmp	.Ltmp744 # Offset: 6964
.Ltmp605:
    00001b39: 	movq	%r12, %rsi
    00001b3c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b43: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6979
    00001b48: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b4f: 	jmp	.Ltmp745 # Offset: 6991
.Ltmp574:
    00001b54: 	testq	%r14, %r14
    00001b57: 	je	.Ltmp721 # Offset: 6999
    00001b5d: 	jmp	.Ltmp746 # Offset: 7005
    00001b62: 	nopw	(%rax,%rax) # Size: 6
.Ltmp632:
    00001b68: 	cmpq	$0x0, 0x8(%rsp)
    00001b6e: 	je	.Ltmp747 # Offset: 7022
    00001b74: 	jmp	.Ltmp748 # Offset: 7028
    00001b79: 	nopl	(%rax) # Size: 7
.Ltmp609:
    00001b80: 	cmpq	$0x0, 0x8(%rsp)
    00001b86: 	je	.Ltmp749 # Offset: 7046
    00001b8c: 	jmp	.Ltmp750 # Offset: 7052
    00001b91: 	nopl	(%rax) # Size: 7
.Ltmp585:
    00001b98: 	cmpq	$0x0, 0x8(%rsp)
    00001b9e: 	je	.Ltmp751 # Offset: 7070
    00001ba4: 	jmp	.Ltmp752 # Offset: 7076
    00001ba9: 	nopl	(%rax) # Size: 7
.Ltmp643:
    00001bb0: 	cmpq	$0x0, 0x8(%rsp)
    00001bb6: 	je	.Ltmp753 # Offset: 7094
    00001bbc: 	jmp	.Ltmp754 # Offset: 7100
    00001bc1: 	nopl	(%rax) # Size: 7
.Ltmp654:
    00001bc8: 	cmpq	$0x0, 0x8(%rsp)
    00001bce: 	je	.Ltmp755 # Offset: 7118
.Ltmp765:
    00001bd4: 	movq	0x8(%rsp), %rdx
    00001bd9: 	movq	0x18(%rsp), %rsi
    00001bde: 	callq	memcpy@PLT # Offset: 7134
    00001be3: 	movq	0x20(%rsp), %rax
    00001be8: 	movq	(%r13), %rdi
    00001bec: 	movq	%rax, 0x8(%rsp)
    00001bf1: 	jmp	.Ltmp755 # Offset: 7153
.Ltmp687:
    00001bf6: 	cmpq	$0x0, 0x8(%rsp)
    00001bfc: 	je	.Ltmp756 # Offset: 7164
    00001c02: 	jmp	.Ltmp757 # Offset: 7170
    00001c07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp698:
    00001c10: 	cmpq	$0x0, 0x8(%rsp)
    00001c16: 	je	.Ltmp758 # Offset: 7190
.Ltmp767:
    00001c1c: 	movq	0x8(%rsp), %rdx
    00001c21: 	movq	0x18(%rsp), %rsi
    00001c26: 	callq	memcpy@PLT # Offset: 7206
    00001c2b: 	movq	0x20(%rsp), %rax
    00001c30: 	movq	(%r13), %rdi
    00001c34: 	movq	%rax, 0x8(%rsp)
    00001c39: 	jmp	.Ltmp758 # Offset: 7225
.Ltmp676:
    00001c3e: 	cmpq	$0x0, 0x8(%rsp)
    00001c44: 	je	.Ltmp759 # Offset: 7236
    00001c4a: 	jmp	.Ltmp760 # Offset: 7242
    00001c4f: 	nop # Size: 1
.Ltmp709:
    00001c50: 	cmpq	$0x0, 0x8(%rsp)
    00001c56: 	je	.Ltmp761 # Offset: 7254
.Ltmp766:
    00001c5c: 	movq	0x8(%rsp), %rdx
    00001c61: 	movq	0x18(%rsp), %rsi
    00001c66: 	callq	memcpy@PLT # Offset: 7270
    00001c6b: 	movq	0x20(%rsp), %rax
    00001c70: 	movq	(%r13), %rdi
    00001c74: 	movq	%rax, 0x8(%rsp)
    00001c79: 	jmp	.Ltmp761 # Offset: 7289
.Ltmp665:
    00001c7e: 	cmpq	$0x0, 0x8(%rsp)
    00001c84: 	je	.Ltmp762 # Offset: 7300
    00001c8a: 	jmp	.Ltmp763 # Offset: 7306
    00001c8f: 	nop # Size: 1
.Ltmp598:
    00001c90: 	cmpq	$0x0, 0x8(%rsp)
    00001c96: 	je	.Ltmp764 # Offset: 7318
.Ltmp768:
    00001c9c: 	movq	0x8(%rsp), %rdx
    00001ca1: 	movq	0x18(%rsp), %rsi
    00001ca6: 	callq	memcpy@PLT # Offset: 7334
    00001cab: 	movq	0x20(%rsp), %rax
    00001cb0: 	movq	(%r13), %rdi
    00001cb4: 	movq	%rax, 0x8(%rsp)
    00001cb9: 	jmp	.Ltmp764 # Offset: 7353
.Ltmp631:
    00001cbe: 	movq	(%rsp), %rsi
    00001cc2: 	xorl	%edx, %edx
    00001cc4: 	movq	%r13, %rdi
    00001cc7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7367
    00001ccc: 	movq	%rax, (%r13)
    00001cd0: 	movq	%rax, %rdi
    00001cd3: 	movq	0x20(%rsp), %rax
    00001cd8: 	movq	%rax, 0x10(%r13)
.Ltmp748:
    00001cdc: 	movq	0x8(%rsp), %rdx
    00001ce1: 	movq	0x18(%rsp), %rsi
    00001ce6: 	callq	memcpy@PLT # Offset: 7398
    00001ceb: 	movq	0x20(%rsp), %rax
    00001cf0: 	movq	(%r13), %rdi
    00001cf4: 	movq	%rax, 0x8(%rsp)
    00001cf9: 	jmp	.Ltmp747 # Offset: 7417
.Ltmp608:
    00001cfe: 	movq	(%rsp), %rsi
    00001d02: 	xorl	%edx, %edx
    00001d04: 	movq	%r13, %rdi
    00001d07: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7431
    00001d0c: 	movq	%rax, (%r13)
    00001d10: 	movq	%rax, %rdi
    00001d13: 	movq	0x20(%rsp), %rax
    00001d18: 	movq	%rax, 0x10(%r13)
.Ltmp750:
    00001d1c: 	movq	0x8(%rsp), %rdx
    00001d21: 	movq	0x18(%rsp), %rsi
    00001d26: 	callq	memcpy@PLT # Offset: 7462
    00001d2b: 	movq	0x20(%rsp), %rax
    00001d30: 	movq	(%r13), %rdi
    00001d34: 	movq	%rax, 0x8(%rsp)
    00001d39: 	jmp	.Ltmp749 # Offset: 7481
.Ltmp584:
    00001d3e: 	movq	(%rsp), %rsi
    00001d42: 	xorl	%edx, %edx
    00001d44: 	movq	%r13, %rdi
    00001d47: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7495
    00001d4c: 	movq	%rax, (%r13)
    00001d50: 	movq	%rax, %rdi
    00001d53: 	movq	0x20(%rsp), %rax
    00001d58: 	movq	%rax, 0x10(%r13)
.Ltmp752:
    00001d5c: 	movq	0x8(%rsp), %rdx
    00001d61: 	movq	0x18(%rsp), %rsi
    00001d66: 	callq	memcpy@PLT # Offset: 7526
    00001d6b: 	movq	0x20(%rsp), %rax
    00001d70: 	movq	(%r13), %rdi
    00001d74: 	movq	%rax, 0x8(%rsp)
    00001d79: 	jmp	.Ltmp751 # Offset: 7545
.Ltmp642:
    00001d7e: 	movq	(%rsp), %rsi
    00001d82: 	xorl	%edx, %edx
    00001d84: 	movq	%r13, %rdi
    00001d87: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7559
    00001d8c: 	movq	%rax, (%r13)
    00001d90: 	movq	%rax, %rdi
    00001d93: 	movq	0x20(%rsp), %rax
    00001d98: 	movq	%rax, 0x10(%r13)
.Ltmp754:
    00001d9c: 	movq	0x8(%rsp), %rdx
    00001da1: 	movq	0x18(%rsp), %rsi
    00001da6: 	callq	memcpy@PLT # Offset: 7590
    00001dab: 	movq	0x20(%rsp), %rax
    00001db0: 	movq	(%r13), %rdi
    00001db4: 	movq	%rax, 0x8(%rsp)
    00001db9: 	jmp	.Ltmp753 # Offset: 7609
.Ltmp686:
    00001dbe: 	movq	(%rsp), %rsi
    00001dc2: 	xorl	%edx, %edx
    00001dc4: 	movq	%r13, %rdi
    00001dc7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7623
    00001dcc: 	movq	%rax, (%r13)
    00001dd0: 	movq	%rax, %rdi
    00001dd3: 	movq	0x20(%rsp), %rax
    00001dd8: 	movq	%rax, 0x10(%r13)
.Ltmp757:
    00001ddc: 	movq	0x8(%rsp), %rdx
    00001de1: 	movq	0x18(%rsp), %rsi
    00001de6: 	callq	memcpy@PLT # Offset: 7654
    00001deb: 	movq	0x20(%rsp), %rax
    00001df0: 	movq	(%r13), %rdi
    00001df4: 	movq	%rax, 0x8(%rsp)
    00001df9: 	jmp	.Ltmp756 # Offset: 7673
.Ltmp653:
    00001dfe: 	movq	(%rsp), %rsi
    00001e02: 	xorl	%edx, %edx
    00001e04: 	movq	%r13, %rdi
    00001e07: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7687
    00001e0c: 	movq	%rax, (%r13)
    00001e10: 	movq	%rax, %rdi
    00001e13: 	movq	0x20(%rsp), %rax
    00001e18: 	movq	%rax, 0x10(%r13)
    00001e1c: 	jmp	.Ltmp765 # Offset: 7708
.Ltmp675:
    00001e21: 	movq	(%rsp), %rsi
    00001e25: 	xorl	%edx, %edx
    00001e27: 	movq	%r13, %rdi
    00001e2a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7722
    00001e2f: 	movq	%rax, (%r13)
    00001e33: 	movq	%rax, %rdi
    00001e36: 	movq	0x20(%rsp), %rax
    00001e3b: 	movq	%rax, 0x10(%r13)
.Ltmp760:
    00001e3f: 	movq	0x8(%rsp), %rdx
    00001e44: 	movq	0x18(%rsp), %rsi
    00001e49: 	callq	memcpy@PLT # Offset: 7753
    00001e4e: 	movq	0x20(%rsp), %rax
    00001e53: 	movq	(%r13), %rdi
    00001e57: 	movq	%rax, 0x8(%rsp)
    00001e5c: 	jmp	.Ltmp759 # Offset: 7772
.Ltmp664:
    00001e61: 	movq	(%rsp), %rsi
    00001e65: 	xorl	%edx, %edx
    00001e67: 	movq	%r13, %rdi
    00001e6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7786
    00001e6f: 	movq	%rax, (%r13)
    00001e73: 	movq	%rax, %rdi
    00001e76: 	movq	0x20(%rsp), %rax
    00001e7b: 	movq	%rax, 0x10(%r13)
.Ltmp763:
    00001e7f: 	movq	0x8(%rsp), %rdx
    00001e84: 	movq	0x18(%rsp), %rsi
    00001e89: 	callq	memcpy@PLT # Offset: 7817
    00001e8e: 	movq	0x20(%rsp), %rax
    00001e93: 	movq	(%r13), %rdi
    00001e97: 	movq	%rax, 0x8(%rsp)
    00001e9c: 	jmp	.Ltmp762 # Offset: 7836
.Ltmp708:
    00001ea1: 	movq	(%rsp), %rsi
    00001ea5: 	xorl	%edx, %edx
    00001ea7: 	movq	%r13, %rdi
    00001eaa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7850
    00001eaf: 	movq	%rax, (%r13)
    00001eb3: 	movq	%rax, %rdi
    00001eb6: 	movq	0x20(%rsp), %rax
    00001ebb: 	movq	%rax, 0x10(%r13)
    00001ebf: 	jmp	.Ltmp766 # Offset: 7871
.Ltmp697:
    00001ec4: 	movq	(%rsp), %rsi
    00001ec8: 	xorl	%edx, %edx
    00001eca: 	movq	%r13, %rdi
    00001ecd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7885
    00001ed2: 	movq	%rax, (%r13)
    00001ed6: 	movq	%rax, %rdi
    00001ed9: 	movq	0x20(%rsp), %rax
    00001ede: 	movq	%rax, 0x10(%r13)
    00001ee2: 	jmp	.Ltmp767 # Offset: 7906
.Ltmp597:
    00001ee7: 	movq	(%rsp), %rsi
    00001eeb: 	xorl	%edx, %edx
    00001eed: 	movq	%r13, %rdi
    00001ef0: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7920
    00001ef5: 	movq	%rax, (%r13)
    00001ef9: 	movq	%rax, %rdi
    00001efc: 	movq	0x20(%rsp), %rax
    00001f01: 	movq	%rax, 0x10(%r13)
    00001f05: 	jmp	.Ltmp768 # Offset: 7941
.Ltmp583:
    00001f0a: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f11: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7953
.Ltmp596:
    00001f16: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f1d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7965
.Ltmp607:
    00001f22: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f29: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7977
.Ltmp630:
    00001f2e: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f35: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7989
.Ltmp641:
    00001f3a: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f41: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8001
.Ltmp652:
    00001f46: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f4d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8013
.Ltmp663:
    00001f52: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f59: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8025
.Ltmp674:
    00001f5e: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f65: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8037
.Ltmp685:
    00001f6a: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f71: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8049
.Ltmp696:
    00001f76: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f7d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8061
.Ltmp707:
    00001f82: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f89: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8073
.Ltmp720:
    00001f8e: 	callq	__stack_chk_fail@PLT # Offset: 8078
.Ltmp572:
    00001f93: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f9a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8090
    00001f9f: 	endbr64
.Ltmp770:
    00001fa3: 	movq	%rax, %rbp
    00001fa6: 	jmp	.Ltmp769 # Offset: 8102
    00001fa8: 	endbr64
    00001fac: 	jmp	.Ltmp770 # Offset: 8108
    00001fae: 	endbr64
    00001fb2: 	movq	%rax, %rbp
    00001fb5: 	movq	0x60(%rsp), %rdi
    00001fba: 	leaq	0x70(%rsp), %rax
    00001fbf: 	cmpq	%rax, %rdi
    00001fc2: 	je	.Ltmp771 # Offset: 8130
.Ltmp773:
    00001fc4: 	movq	0x70(%rsp), %rax
    00001fc9: 	leaq	0x1(%rax), %rsi
    00001fcd: 	callq	_ZdlPvm@PLT # Offset: 8141
.Ltmp771:
    00001fd2: 	movq	0x40(%rsp), %rdi
    00001fd7: 	cmpq	0x10(%rsp), %rdi
    00001fdc: 	je	.Ltmp772 # Offset: 8156
    00001fde: 	movq	0x50(%rsp), %rax
    00001fe3: 	leaq	0x1(%rax), %rsi
    00001fe7: 	callq	_ZdlPvm@PLT # Offset: 8167
.Ltmp772:
    00001fec: 	movq	%rbp, %rdi
    00001fef: 	callq	_Unwind_Resume@PLT # Offset: 8175
.Ltmp769:
    00001ff4: 	movq	0x60(%rsp), %rdi
    00001ff9: 	cmpq	%r14, %rdi
    00001ffc: 	jne	.Ltmp773 # Offset: 8188
    00001ffe: 	jmp	.Ltmp771 # Offset: 8190
    00002000: 	endbr64
    00002004: 	jmp	.Ltmp770 # Offset: 8196
    00002006: 	endbr64
    0000200a: 	jmp	.Ltmp770 # Offset: 8202
    0000200c: 	endbr64
    00002010: 	jmp	.Ltmp770 # Offset: 8208
    00002012: 	endbr64
    00002016: 	jmp	.Ltmp770 # Offset: 8214
    00002018: 	endbr64
    0000201c: 	jmp	.Ltmp770 # Offset: 8220
    0000201e: 	endbr64
    00002022: 	jmp	.Ltmp770 # Offset: 8226
    00002027: 	endbr64
    0000202b: 	jmp	.Ltmp770 # Offset: 8235
    00002030: 	endbr64
    00002034: 	jmp	.Ltmp770 # Offset: 8244
    00002039: 	endbr64
    0000203d: 	movq	%rax, %rbp
    00002040: 	jmp	.Ltmp771 # Offset: 8256
    00002042: 	endbr64
    00002046: 	jmp	.Ltmp770 # Offset: 8262
    0000204b: 	endbr64
    0000204f: 	jmp	.Ltmp770 # Offset: 8271
    00002054: 	endbr64
    00002058: 	jmp	.Ltmp770 # Offset: 8280
    0000205d: 	endbr64
    00002061: 	jmp	.Ltmp770 # Offset: 8289
    00002066: 	endbr64
    0000206a: 	jmp	.Ltmp770 # Offset: 8298
    0000206f: 	endbr64
    00002073: 	jmp	.Ltmp770 # Offset: 8307
    00002078: 	endbr64
    0000207c: 	jmp	.Ltmp770 # Offset: 8316
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIsEvv"

Binary Function "_Z11TestOneTypeIjEvv" after disassembly {
  Number      : 49
  State       : disassembled
  Address     : 0x8e80
  Size        : 0x1f20
  MaxSize     : 0x1f20
  Offset      : 0x8e80
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIjEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB048:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp774:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp774 # Offset: 37
    00000027: 	subq	$0xd98, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0x7d88(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x20(%rsp), %rsi
    0000005d: 	movaps	%xmm2, 0x20(%rsp)
    00000062: 	leaq	0x80(%rsp), %rbp
    0000006a: 	movq	%rsi, (%rsp)
    0000006e: 	leaq	0x7d80(%rsp), %rbx
    00000076: 	movaps	%xmm3, 0x30(%rsp)
    0000007b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 123
    00000080: 	leaq	0x50(%rsp), %rax
    00000085: 	movb	$0x0, 0x58(%rsp)
    0000008a: 	movq	%rax, 0x10(%rsp)
    0000008f: 	movq	%rax, 0x40(%rsp)
    00000094: 	movabsq	$0x745f3233746e6975, %rax
    0000009e: 	movq	%rax, 0x50(%rsp)
    000000a3: 	cvttsd2si	init_value(%rip), %rax
    000000ac: 	movq	$0x8, 0x48(%rsp)
    000000b5: 	movq	%rax, %xmm0
    000000ba: 	movq	%rbp, %rax
    000000bd: 	pshufd	$0x0, %xmm0, %xmm0
    000000c2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp775:
    000000c8: 	movaps	%xmm0, (%rax)
    000000cb: 	addq	$0x10, %rax
    000000cf: 	cmpq	%rax, %rbx
    000000d2: 	jne	.Ltmp775 # Offset: 210
    000000d4: 	leaq	0x60(%rsp), %r12
    000000d9: 	leaq	0x40(%rsp), %r15
    000000de: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000e5: 	movq	%r15, %rsi
    000000e8: 	movq	%r12, %rdi
    000000eb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 235
    000000f0: 	callq	clock@PLT # Offset: 240
    000000f5: 	movl	iterations(%rip), %ecx
    000000fb: 	xorl	%r13d, %r13d
    000000fe: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000105: 	movq	%rax, start_time(%rip)
    0000010c: 	testl	%ecx, %ecx
    0000010e: 	jle	.Ltmp776 # Offset: 270
.Ltmp779:
    00000110: 	movq	%rbp, %rax
    00000113: 	pxor	%xmm0, %xmm0
    00000117: 	nopw	(%rax,%rax) # Size: 9
.Ltmp777:
    00000120: 	paddd	(%rax), %xmm0
    00000124: 	addq	$0x10, %rax
    00000128: 	cmpq	%rbx, %rax
    0000012b: 	jne	.Ltmp777 # Offset: 299
    0000012d: 	cvttsd2si	init_value(%rip), %rdx
    00000136: 	movdqa	%xmm0, %xmm1
    0000013a: 	psrldq	$0x8, %xmm1
    0000013f: 	paddd	%xmm1, %xmm0
    00000143: 	movdqa	%xmm0, %xmm1
    00000147: 	psrldq	$0x4, %xmm1
    0000014c: 	imull	$0x1f40, %edx, %edx
    00000152: 	paddd	%xmm1, %xmm0
    00000156: 	movd	%xmm0, %eax
    0000015a: 	cmpl	%eax, %edx
    0000015c: 	je	.Ltmp778 # Offset: 348
    0000015e: 	movl	current_test(%rip), %edx
    00000164: 	movq	%r14, %rsi
    00000167: 	movl	$0x1, %edi
    0000016c: 	xorl	%eax, %eax
    0000016e: 	callq	__printf_chk@PLT # Offset: 366
    00000173: 	movl	iterations(%rip), %ecx
.Ltmp778:
    00000179: 	addl	$0x1, %r13d
    0000017d: 	cmpl	%ecx, %r13d
    00000180: 	jl	.Ltmp779 # Offset: 384
.Ltmp776:
    00000182: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000189: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000190: 	subq	$0x20, %rax
    00000194: 	cmpq	%rax, %r13
    00000197: 	je	.Ltmp780 # Offset: 407
    0000019d: 	leaq	0x10(%r13), %rdi
    000001a1: 	movq	0x68(%rsp), %r14
    000001a6: 	movq	%rdi, (%r13)
    000001aa: 	movq	0x60(%rsp), %rax
    000001af: 	movq	%rax, %rsi
    000001b2: 	movq	%rax, 0x8(%rsp)
    000001b7: 	addq	%r14, %rsi
    000001ba: 	je	.Ltmp781 # Offset: 442
    000001bc: 	testq	%rax, %rax
    000001bf: 	je	.Ltmp782 # Offset: 447
.Ltmp781:
    000001c5: 	movq	%r14, 0x20(%rsp)
    000001ca: 	cmpq	$0xf, %r14
    000001ce: 	ja	.Ltmp783 # Offset: 462
    000001d4: 	cmpq	$0x1, %r14
    000001d8: 	jne	.Ltmp784 # Offset: 472
    000001de: 	movq	0x8(%rsp), %rax
    000001e3: 	movzbl	(%rax), %eax
    000001e6: 	movb	%al, 0x10(%r13)
.Ltmp931:
    000001ea: 	movq	%r14, 0x8(%r13)
    000001ee: 	movb	$0x0, (%rdi,%r14)
    000001f3: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001fa: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000201: 	addq	$0x20, %rax
    00000205: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000020c: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000213: 	je	.Ltmp785 # Offset: 531
.Ltmp942:
    00000219: 	movq	-0x20(%rax), %r13
    0000021d: 	callq	clock@PLT # Offset: 541
    00000222: 	pxor	%xmm0, %xmm0
    00000226: 	movq	%rax, end_time(%rip)
    0000022d: 	movq	%r13, %rdi
    00000230: 	subq	start_time(%rip), %rax
    00000237: 	cvtsi2sd	%rax, %xmm0
    0000023c: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000244: 	callq	_Z13record_resultdPKc # Offset: 580
    00000249: 	movq	0x60(%rsp), %rdi
    0000024e: 	leaq	0x70(%rsp), %r14
    00000253: 	cmpq	%r14, %rdi
    00000256: 	je	.Ltmp786 # Offset: 598
    00000258: 	movq	0x70(%rsp), %rax
    0000025d: 	leaq	0x1(%rax), %rsi
    00000261: 	callq	_ZdlPvm@PLT # Offset: 609
.Ltmp786:
    00000266: 	leaq	DATAat0x1a1e2(%rip), %rdx
    0000026d: 	movq	%r15, %rsi
    00000270: 	movq	%r12, %rdi
    00000273: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 627
    00000278: 	callq	clock@PLT # Offset: 632
    0000027d: 	movl	iterations(%rip), %ecx
    00000283: 	xorl	%r13d, %r13d
    00000286: 	movq	%rax, start_time(%rip)
    0000028d: 	testl	%ecx, %ecx
    0000028f: 	jle	.Ltmp787 # Offset: 655
    00000291: 	nopl	(%rax) # Size: 7
.Ltmp790:
    00000298: 	movq	%rbp, %rax
    0000029b: 	pxor	%xmm0, %xmm0
    0000029f: 	nop # Size: 1
.Ltmp788:
    000002a0: 	paddd	(%rax), %xmm0
    000002a4: 	addq	$0x10, %rax
    000002a8: 	cmpq	%rax, %rbx
    000002ab: 	jne	.Ltmp788 # Offset: 683
    000002ad: 	cvttsd2si	init_value(%rip), %rdx
    000002b6: 	movdqa	%xmm0, %xmm1
    000002ba: 	psrldq	$0x8, %xmm1
    000002bf: 	paddd	%xmm1, %xmm0
    000002c3: 	movdqa	%xmm0, %xmm1
    000002c7: 	psrldq	$0x4, %xmm1
    000002cc: 	imull	$0x1f40, %edx, %edx
    000002d2: 	paddd	%xmm1, %xmm0
    000002d6: 	movd	%xmm0, %eax
    000002da: 	cmpl	%eax, %edx
    000002dc: 	je	.Ltmp789 # Offset: 732
    000002de: 	movl	current_test(%rip), %edx
    000002e4: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002eb: 	movl	$0x1, %edi
    000002f0: 	xorl	%eax, %eax
    000002f2: 	callq	__printf_chk@PLT # Offset: 754
    000002f7: 	movl	iterations(%rip), %ecx
.Ltmp789:
    000002fd: 	addl	$0x1, %r13d
    00000301: 	cmpl	%ecx, %r13d
    00000304: 	jl	.Ltmp790 # Offset: 772
.Ltmp787:
    00000306: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000030d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000314: 	subq	$0x20, %rax
    00000318: 	cmpq	%rax, %r13
    0000031b: 	je	.Ltmp791 # Offset: 795
    00000321: 	leaq	0x10(%r13), %rdi
    00000325: 	movq	0x68(%rsp), %rcx
    0000032a: 	movq	%rdi, (%r13)
    0000032e: 	movq	0x60(%rsp), %rsi
    00000333: 	movq	%rcx, 0x8(%rsp)
    00000338: 	movq	%rsi, %rax
    0000033b: 	movq	%rsi, 0x18(%rsp)
    00000340: 	addq	%rcx, %rax
    00000343: 	je	.Ltmp792 # Offset: 835
    00000345: 	testq	%rsi, %rsi
    00000348: 	je	.Ltmp793 # Offset: 840
.Ltmp792:
    0000034e: 	movq	0x8(%rsp), %rax
    00000353: 	movq	%rax, 0x20(%rsp)
    00000358: 	cmpq	$0xf, %rax
    0000035c: 	ja	.Ltmp794 # Offset: 860
    00000362: 	cmpq	$0x1, 0x8(%rsp)
    00000368: 	jne	.Ltmp795 # Offset: 872
    0000036e: 	movq	0x18(%rsp), %rax
    00000373: 	movzbl	(%rax), %eax
    00000376: 	movb	%al, 0x10(%r13)
.Ltmp968:
    0000037a: 	movq	0x8(%rsp), %rax
    0000037f: 	movq	%rax, 0x8(%r13)
    00000383: 	movb	$0x0, (%rdi,%rax)
    00000387: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000038e: 	addq	$0x20, %rax
    00000392: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp947:
    00000399: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003a7: 	je	.Ltmp796 # Offset: 935
.Ltmp946:
    000003ad: 	movq	-0x20(%rax), %r13
    000003b1: 	callq	clock@PLT # Offset: 945
    000003b6: 	pxor	%xmm0, %xmm0
    000003ba: 	movq	%rax, end_time(%rip)
    000003c1: 	movq	%r13, %rdi
    000003c4: 	subq	start_time(%rip), %rax
    000003cb: 	cvtsi2sd	%rax, %xmm0
    000003d0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000003d8: 	callq	_Z13record_resultdPKc # Offset: 984
    000003dd: 	movq	0x60(%rsp), %rdi
    000003e2: 	cmpq	%r14, %rdi
    000003e5: 	je	.Ltmp797 # Offset: 997
    000003e7: 	movq	0x70(%rsp), %rax
    000003ec: 	leaq	0x1(%rax), %rsi
    000003f0: 	callq	_ZdlPvm@PLT # Offset: 1008
.Ltmp797:
    000003f5: 	leaq	DATAat0x1a1ee(%rip), %rdx
    000003fc: 	movq	%r15, %rsi
    000003ff: 	movq	%r12, %rdi
    00000402: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1026
    00000407: 	callq	clock@PLT # Offset: 1031
    0000040c: 	movl	iterations(%rip), %ecx
    00000412: 	xorl	%r13d, %r13d
    00000415: 	movq	%rax, start_time(%rip)
    0000041c: 	testl	%ecx, %ecx
    0000041e: 	jle	.Ltmp798 # Offset: 1054
.Ltmp801:
    00000420: 	movq	%rbp, %rax
    00000423: 	pxor	%xmm0, %xmm0
    00000427: 	nopw	(%rax,%rax) # Size: 9
.Ltmp799:
    00000430: 	paddd	(%rax), %xmm0
    00000434: 	addq	$0x10, %rax
    00000438: 	cmpq	%rbx, %rax
    0000043b: 	jne	.Ltmp799 # Offset: 1083
    0000043d: 	cvttsd2si	init_value(%rip), %rdx
    00000446: 	movdqa	%xmm0, %xmm1
    0000044a: 	psrldq	$0x8, %xmm1
    0000044f: 	paddd	%xmm1, %xmm0
    00000453: 	movdqa	%xmm0, %xmm1
    00000457: 	psrldq	$0x4, %xmm1
    0000045c: 	imull	$0x1f40, %edx, %edx
    00000462: 	paddd	%xmm1, %xmm0
    00000466: 	movd	%xmm0, %eax
    0000046a: 	cmpl	%eax, %edx
    0000046c: 	je	.Ltmp800 # Offset: 1132
    0000046e: 	movl	current_test(%rip), %edx
    00000474: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000047b: 	movl	$0x1, %edi
    00000480: 	xorl	%eax, %eax
    00000482: 	callq	__printf_chk@PLT # Offset: 1154
    00000487: 	movl	iterations(%rip), %ecx
.Ltmp800:
    0000048d: 	addl	$0x1, %r13d
    00000491: 	cmpl	%ecx, %r13d
    00000494: 	jl	.Ltmp801 # Offset: 1172
.Ltmp798:
    00000496: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000049d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000004a4: 	subq	$0x20, %rax
    000004a8: 	cmpq	%rax, %r13
    000004ab: 	je	.Ltmp802 # Offset: 1195
    000004b1: 	leaq	0x10(%r13), %rdi
    000004b5: 	movq	0x68(%rsp), %rcx
    000004ba: 	movq	%rdi, (%r13)
    000004be: 	movq	0x60(%rsp), %rsi
    000004c3: 	movq	%rcx, 0x8(%rsp)
    000004c8: 	movq	%rsi, %rax
    000004cb: 	movq	%rsi, 0x18(%rsp)
    000004d0: 	addq	%rcx, %rax
    000004d3: 	je	.Ltmp803 # Offset: 1235
    000004d5: 	testq	%rsi, %rsi
    000004d8: 	je	.Ltmp804 # Offset: 1240
.Ltmp803:
    000004de: 	movq	0x8(%rsp), %rax
    000004e3: 	movq	%rax, 0x20(%rsp)
    000004e8: 	cmpq	$0xf, %rax
    000004ec: 	ja	.Ltmp805 # Offset: 1260
    000004f2: 	cmpq	$0x1, 0x8(%rsp)
    000004f8: 	jne	.Ltmp806 # Offset: 1272
    000004fe: 	movq	0x18(%rsp), %rax
    00000503: 	movzbl	(%rax), %eax
    00000506: 	movb	%al, 0x10(%r13)
.Ltmp970:
    0000050a: 	movq	0x8(%rsp), %rax
    0000050f: 	movq	%rax, 0x8(%r13)
    00000513: 	movb	$0x0, (%rdi,%rax)
    00000517: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000051e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000525: 	addq	$0x20, %rax
    00000529: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000530: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000537: 	je	.Ltmp807 # Offset: 1335
.Ltmp945:
    0000053d: 	movq	-0x20(%rax), %r13
    00000541: 	callq	clock@PLT # Offset: 1345
    00000546: 	pxor	%xmm0, %xmm0
    0000054a: 	movq	%rax, end_time(%rip)
    00000551: 	movq	%r13, %rdi
    00000554: 	subq	start_time(%rip), %rax
    0000055b: 	cvtsi2sd	%rax, %xmm0
    00000560: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000568: 	callq	_Z13record_resultdPKc # Offset: 1384
    0000056d: 	movq	0x60(%rsp), %rdi
    00000572: 	cmpq	%r14, %rdi
    00000575: 	je	.Ltmp808 # Offset: 1397
    00000577: 	movq	0x70(%rsp), %rax
    0000057c: 	leaq	0x1(%rax), %rsi
    00000580: 	callq	_ZdlPvm@PLT # Offset: 1408
.Ltmp808:
    00000585: 	leaq	DATAat0x1a1fb(%rip), %rdx
    0000058c: 	movq	%r15, %rsi
    0000058f: 	movq	%r12, %rdi
    00000592: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1426
    00000597: 	callq	clock@PLT # Offset: 1431
    0000059c: 	movl	iterations(%rip), %ecx
    000005a2: 	xorl	%r13d, %r13d
    000005a5: 	movq	%rax, start_time(%rip)
    000005ac: 	testl	%ecx, %ecx
    000005ae: 	jle	.Ltmp809 # Offset: 1454
.Ltmp812:
    000005b0: 	movq	%rbp, %rax
    000005b3: 	pxor	%xmm0, %xmm0
    000005b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp810:
    000005c0: 	paddd	(%rax), %xmm0
    000005c4: 	addq	$0x10, %rax
    000005c8: 	cmpq	%rax, %rbx
    000005cb: 	jne	.Ltmp810 # Offset: 1483
    000005cd: 	cvttsd2si	init_value(%rip), %rdx
    000005d6: 	movdqa	%xmm0, %xmm1
    000005da: 	psrldq	$0x8, %xmm1
    000005df: 	paddd	%xmm1, %xmm0
    000005e3: 	movdqa	%xmm0, %xmm1
    000005e7: 	psrldq	$0x4, %xmm1
    000005ec: 	imull	$0x1f40, %edx, %edx
    000005f2: 	paddd	%xmm1, %xmm0
    000005f6: 	movd	%xmm0, %eax
    000005fa: 	cmpl	%eax, %edx
    000005fc: 	je	.Ltmp811 # Offset: 1532
    000005fe: 	movl	current_test(%rip), %edx
    00000604: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000060b: 	movl	$0x1, %edi
    00000610: 	xorl	%eax, %eax
    00000612: 	callq	__printf_chk@PLT # Offset: 1554
    00000617: 	movl	iterations(%rip), %ecx
.Ltmp811:
    0000061d: 	addl	$0x1, %r13d
    00000621: 	cmpl	%ecx, %r13d
    00000624: 	jl	.Ltmp812 # Offset: 1572
.Ltmp809:
    00000626: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000062d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000634: 	subq	$0x20, %rax
    00000638: 	cmpq	%rax, %r13
    0000063b: 	je	.Ltmp813 # Offset: 1595
    00000641: 	leaq	0x10(%r13), %rdi
    00000645: 	movq	0x68(%rsp), %rcx
    0000064a: 	movq	%rdi, (%r13)
    0000064e: 	movq	0x60(%rsp), %rsi
    00000653: 	movq	%rcx, 0x8(%rsp)
    00000658: 	movq	%rsi, %rax
    0000065b: 	movq	%rsi, 0x18(%rsp)
    00000660: 	addq	%rcx, %rax
    00000663: 	je	.Ltmp814 # Offset: 1635
    00000665: 	testq	%rsi, %rsi
    00000668: 	je	.Ltmp815 # Offset: 1640
.Ltmp814:
    0000066e: 	movq	0x8(%rsp), %rax
    00000673: 	movq	%rax, 0x20(%rsp)
    00000678: 	cmpq	$0xf, %rax
    0000067c: 	ja	.Ltmp816 # Offset: 1660
    00000682: 	cmpq	$0x1, 0x8(%rsp)
    00000688: 	jne	.Ltmp817 # Offset: 1672
    0000068e: 	movq	0x18(%rsp), %rax
    00000693: 	movzbl	(%rax), %eax
    00000696: 	movb	%al, 0x10(%r13)
.Ltmp959:
    0000069a: 	movq	0x8(%rsp), %rax
    0000069f: 	movq	%rax, 0x8(%r13)
    000006a3: 	movb	$0x0, (%rdi,%rax)
    000006a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000006ae: 	addq	$0x20, %rax
    000006b2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp956:
    000006b9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000006c0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000006c7: 	je	.Ltmp818 # Offset: 1735
.Ltmp955:
    000006cd: 	movq	-0x20(%rax), %r13
    000006d1: 	callq	clock@PLT # Offset: 1745
    000006d6: 	pxor	%xmm0, %xmm0
    000006da: 	movq	%rax, end_time(%rip)
    000006e1: 	movq	%r13, %rdi
    000006e4: 	subq	start_time(%rip), %rax
    000006eb: 	cvtsi2sd	%rax, %xmm0
    000006f0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000006f8: 	callq	_Z13record_resultdPKc # Offset: 1784
    000006fd: 	movq	0x60(%rsp), %rdi
    00000702: 	cmpq	%r14, %rdi
    00000705: 	je	.Ltmp819 # Offset: 1797
    00000707: 	movq	0x70(%rsp), %rax
    0000070c: 	leaq	0x1(%rax), %rsi
    00000710: 	callq	_ZdlPvm@PLT # Offset: 1808
.Ltmp819:
    00000715: 	leaq	DATAat0x1a208(%rip), %rdx
    0000071c: 	movq	%r15, %rsi
    0000071f: 	movq	%r12, %rdi
    00000722: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1826
    00000727: 	callq	clock@PLT # Offset: 1831
    0000072c: 	movl	iterations(%rip), %ecx
    00000732: 	xorl	%r13d, %r13d
    00000735: 	movq	%rax, start_time(%rip)
    0000073c: 	testl	%ecx, %ecx
    0000073e: 	jle	.Ltmp820 # Offset: 1854
.Ltmp823:
    00000740: 	movq	%rbp, %rax
    00000743: 	pxor	%xmm0, %xmm0
    00000747: 	nopw	(%rax,%rax) # Size: 9
.Ltmp821:
    00000750: 	paddd	(%rax), %xmm0
    00000754: 	addq	$0x10, %rax
    00000758: 	cmpq	%rbx, %rax
    0000075b: 	jne	.Ltmp821 # Offset: 1883
    0000075d: 	cvttsd2si	init_value(%rip), %rdx
    00000766: 	movdqa	%xmm0, %xmm1
    0000076a: 	psrldq	$0x8, %xmm1
    0000076f: 	paddd	%xmm1, %xmm0
    00000773: 	movdqa	%xmm0, %xmm1
    00000777: 	psrldq	$0x4, %xmm1
    0000077c: 	imull	$0x1f40, %edx, %edx
    00000782: 	paddd	%xmm1, %xmm0
    00000786: 	movd	%xmm0, %eax
    0000078a: 	cmpl	%eax, %edx
    0000078c: 	je	.Ltmp822 # Offset: 1932
    0000078e: 	movl	current_test(%rip), %edx
    00000794: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000079b: 	movl	$0x1, %edi
    000007a0: 	xorl	%eax, %eax
    000007a2: 	callq	__printf_chk@PLT # Offset: 1954
    000007a7: 	movl	iterations(%rip), %ecx
.Ltmp822:
    000007ad: 	addl	$0x1, %r13d
    000007b1: 	cmpl	%ecx, %r13d
    000007b4: 	jl	.Ltmp823 # Offset: 1972
.Ltmp820:
    000007b6: 	movq	%r12, %rdi
    000007b9: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1977
    000007be: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007c5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000007cc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007d3: 	je	.Ltmp824 # Offset: 2003
.Ltmp954:
    000007d9: 	movq	-0x20(%rax), %r13
    000007dd: 	callq	clock@PLT # Offset: 2013
    000007e2: 	pxor	%xmm0, %xmm0
    000007e6: 	movq	%rax, end_time(%rip)
    000007ed: 	movq	%r13, %rdi
    000007f0: 	subq	start_time(%rip), %rax
    000007f7: 	cvtsi2sd	%rax, %xmm0
    000007fc: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000804: 	callq	_Z13record_resultdPKc # Offset: 2052
    00000809: 	movq	0x60(%rsp), %rdi
    0000080e: 	cmpq	%r14, %rdi
    00000811: 	je	.Ltmp825 # Offset: 2065
    00000813: 	movq	0x70(%rsp), %rax
    00000818: 	leaq	0x1(%rax), %rsi
    0000081c: 	callq	_ZdlPvm@PLT # Offset: 2076
.Ltmp825:
    00000821: 	leaq	DATAat0x1a215(%rip), %rdx
    00000828: 	movq	%r15, %rsi
    0000082b: 	movq	%r12, %rdi
    0000082e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2094
    00000833: 	callq	clock@PLT # Offset: 2099
    00000838: 	movl	iterations(%rip), %ecx
    0000083e: 	xorl	%r13d, %r13d
    00000841: 	movq	%rax, start_time(%rip)
    00000848: 	testl	%ecx, %ecx
    0000084a: 	jle	.Ltmp826 # Offset: 2122
    0000084c: 	nopl	(%rax) # Size: 4
.Ltmp829:
    00000850: 	movq	%rbp, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp827:
    00000860: 	paddd	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	cmpq	%rbx, %rax
    0000086b: 	jne	.Ltmp827 # Offset: 2155
    0000086d: 	cvttsd2si	init_value(%rip), %rdx
    00000876: 	movdqa	%xmm0, %xmm1
    0000087a: 	psrldq	$0x8, %xmm1
    0000087f: 	paddd	%xmm1, %xmm0
    00000883: 	movdqa	%xmm0, %xmm1
    00000887: 	psrldq	$0x4, %xmm1
    0000088c: 	imull	$0x1f40, %edx, %edx
    00000892: 	paddd	%xmm1, %xmm0
    00000896: 	movd	%xmm0, %eax
    0000089a: 	cmpl	%eax, %edx
    0000089c: 	je	.Ltmp828 # Offset: 2204
    0000089e: 	movl	current_test(%rip), %edx
    000008a4: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000008ab: 	movl	$0x1, %edi
    000008b0: 	xorl	%eax, %eax
    000008b2: 	callq	__printf_chk@PLT # Offset: 2226
    000008b7: 	movl	iterations(%rip), %ecx
.Ltmp828:
    000008bd: 	addl	$0x1, %r13d
    000008c1: 	cmpl	%ecx, %r13d
    000008c4: 	jl	.Ltmp829 # Offset: 2244
.Ltmp826:
    000008c6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000008cd: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000008d4: 	subq	$0x20, %rax
    000008d8: 	cmpq	%rax, %r13
    000008db: 	je	.Ltmp830 # Offset: 2267
    000008e1: 	leaq	0x10(%r13), %rdi
    000008e5: 	movq	0x68(%rsp), %rcx
    000008ea: 	movq	%rdi, (%r13)
    000008ee: 	movq	0x60(%rsp), %rsi
    000008f3: 	movq	%rcx, 0x8(%rsp)
    000008f8: 	movq	%rsi, %rax
    000008fb: 	movq	%rsi, 0x18(%rsp)
    00000900: 	addq	%rcx, %rax
    00000903: 	je	.Ltmp831 # Offset: 2307
    00000905: 	testq	%rsi, %rsi
    00000908: 	je	.Ltmp832 # Offset: 2312
.Ltmp831:
    0000090e: 	movq	0x8(%rsp), %rax
    00000913: 	movq	%rax, 0x20(%rsp)
    00000918: 	cmpq	$0xf, %rax
    0000091c: 	ja	.Ltmp833 # Offset: 2332
    00000922: 	cmpq	$0x1, 0x8(%rsp)
    00000928: 	jne	.Ltmp834 # Offset: 2344
    0000092e: 	movq	0x18(%rsp), %rax
    00000933: 	movzbl	(%rax), %eax
    00000936: 	movb	%al, 0x10(%r13)
.Ltmp957:
    0000093a: 	movq	0x8(%rsp), %rax
    0000093f: 	movq	%rax, 0x8(%r13)
    00000943: 	movb	$0x0, (%rdi,%rax)
    00000947: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000094e: 	addq	$0x20, %rax
    00000952: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp953:
    00000959: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000960: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000967: 	je	.Ltmp835 # Offset: 2407
.Ltmp952:
    0000096d: 	movq	-0x20(%rax), %r13
    00000971: 	callq	clock@PLT # Offset: 2417
    00000976: 	pxor	%xmm0, %xmm0
    0000097a: 	movq	%rax, end_time(%rip)
    00000981: 	movq	%r13, %rdi
    00000984: 	subq	start_time(%rip), %rax
    0000098b: 	cvtsi2sd	%rax, %xmm0
    00000990: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000998: 	callq	_Z13record_resultdPKc # Offset: 2456
    0000099d: 	movq	0x60(%rsp), %rdi
    000009a2: 	cmpq	%r14, %rdi
    000009a5: 	je	.Ltmp836 # Offset: 2469
    000009a7: 	movq	0x70(%rsp), %rax
    000009ac: 	leaq	0x1(%rax), %rsi
    000009b0: 	callq	_ZdlPvm@PLT # Offset: 2480
.Ltmp836:
    000009b5: 	leaq	DATAat0x1a226(%rip), %rdx
    000009bc: 	movq	%r15, %rsi
    000009bf: 	movq	%r12, %rdi
    000009c2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2498
    000009c7: 	callq	clock@PLT # Offset: 2503
    000009cc: 	movl	iterations(%rip), %ecx
    000009d2: 	xorl	%r13d, %r13d
    000009d5: 	movq	%rax, start_time(%rip)
    000009dc: 	testl	%ecx, %ecx
    000009de: 	jle	.Ltmp837 # Offset: 2526
.Ltmp840:
    000009e0: 	movq	%rbp, %rax
    000009e3: 	pxor	%xmm0, %xmm0
    000009e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp838:
    000009f0: 	paddd	(%rax), %xmm0
    000009f4: 	addq	$0x10, %rax
    000009f8: 	cmpq	%rbx, %rax
    000009fb: 	jne	.Ltmp838 # Offset: 2555
    000009fd: 	cvttsd2si	init_value(%rip), %rdx
    00000a06: 	movdqa	%xmm0, %xmm1
    00000a0a: 	psrldq	$0x8, %xmm1
    00000a0f: 	paddd	%xmm1, %xmm0
    00000a13: 	movdqa	%xmm0, %xmm1
    00000a17: 	psrldq	$0x4, %xmm1
    00000a1c: 	imull	$0x1f40, %edx, %edx
    00000a22: 	paddd	%xmm1, %xmm0
    00000a26: 	movd	%xmm0, %eax
    00000a2a: 	cmpl	%eax, %edx
    00000a2c: 	je	.Ltmp839 # Offset: 2604
    00000a2e: 	movl	current_test(%rip), %edx
    00000a34: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000a3b: 	movl	$0x1, %edi
    00000a40: 	xorl	%eax, %eax
    00000a42: 	callq	__printf_chk@PLT # Offset: 2626
    00000a47: 	movl	iterations(%rip), %ecx
.Ltmp839:
    00000a4d: 	addl	$0x1, %r13d
    00000a51: 	cmpl	%ecx, %r13d
    00000a54: 	jl	.Ltmp840 # Offset: 2644
.Ltmp837:
    00000a56: 	movq	%r12, %rdi
    00000a59: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2649
    00000a5e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a65: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000a6c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a73: 	je	.Ltmp841 # Offset: 2675
.Ltmp951:
    00000a79: 	movq	-0x20(%rax), %r13
    00000a7d: 	callq	clock@PLT # Offset: 2685
    00000a82: 	pxor	%xmm0, %xmm0
    00000a86: 	movq	%rax, end_time(%rip)
    00000a8d: 	movq	%r13, %rdi
    00000a90: 	subq	start_time(%rip), %rax
    00000a97: 	cvtsi2sd	%rax, %xmm0
    00000a9c: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000aa4: 	callq	_Z13record_resultdPKc # Offset: 2724
    00000aa9: 	movq	0x60(%rsp), %rdi
    00000aae: 	cmpq	%r14, %rdi
    00000ab1: 	je	.Ltmp842 # Offset: 2737
    00000ab3: 	movq	0x70(%rsp), %rax
    00000ab8: 	leaq	0x1(%rax), %rsi
    00000abc: 	callq	_ZdlPvm@PLT # Offset: 2748
.Ltmp842:
    00000ac1: 	leaq	DATAat0x1a238(%rip), %rdx
    00000ac8: 	movq	%r15, %rsi
    00000acb: 	movq	%r12, %rdi
    00000ace: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2766
    00000ad3: 	callq	clock@PLT # Offset: 2771
    00000ad8: 	movl	iterations(%rip), %ecx
    00000ade: 	xorl	%r13d, %r13d
    00000ae1: 	movq	%rax, start_time(%rip)
    00000ae8: 	testl	%ecx, %ecx
    00000aea: 	jle	.Ltmp843 # Offset: 2794
    00000aec: 	nopl	(%rax) # Size: 4
.Ltmp846:
    00000af0: 	movq	%rbp, %rax
    00000af3: 	pxor	%xmm0, %xmm0
    00000af7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp844:
    00000b00: 	paddd	(%rax), %xmm0
    00000b04: 	addq	$0x10, %rax
    00000b08: 	cmpq	%rax, %rbx
    00000b0b: 	jne	.Ltmp844 # Offset: 2827
    00000b0d: 	cvttsd2si	init_value(%rip), %rdx
    00000b16: 	movdqa	%xmm0, %xmm1
    00000b1a: 	psrldq	$0x8, %xmm1
    00000b1f: 	paddd	%xmm1, %xmm0
    00000b23: 	movdqa	%xmm0, %xmm1
    00000b27: 	psrldq	$0x4, %xmm1
    00000b2c: 	imull	$0x1f40, %edx, %edx
    00000b32: 	paddd	%xmm1, %xmm0
    00000b36: 	movd	%xmm0, %eax
    00000b3a: 	cmpl	%eax, %edx
    00000b3c: 	je	.Ltmp845 # Offset: 2876
    00000b3e: 	movl	current_test(%rip), %edx
    00000b44: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000b4b: 	movl	$0x1, %edi
    00000b50: 	xorl	%eax, %eax
    00000b52: 	callq	__printf_chk@PLT # Offset: 2898
    00000b57: 	movl	iterations(%rip), %ecx
.Ltmp845:
    00000b5d: 	addl	$0x1, %r13d
    00000b61: 	cmpl	%ecx, %r13d
    00000b64: 	jl	.Ltmp846 # Offset: 2916
.Ltmp843:
    00000b66: 	movq	%r12, %rdi
    00000b69: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2921
    00000b6e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b75: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b7c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b83: 	je	.Ltmp847 # Offset: 2947
.Ltmp950:
    00000b89: 	movq	-0x20(%rax), %r13
    00000b8d: 	callq	clock@PLT # Offset: 2957
    00000b92: 	pxor	%xmm0, %xmm0
    00000b96: 	movq	%rax, end_time(%rip)
    00000b9d: 	movq	%r13, %rdi
    00000ba0: 	subq	start_time(%rip), %rax
    00000ba7: 	cvtsi2sd	%rax, %xmm0
    00000bac: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000bb4: 	callq	_Z13record_resultdPKc # Offset: 2996
    00000bb9: 	movq	0x60(%rsp), %rdi
    00000bbe: 	cmpq	%r14, %rdi
    00000bc1: 	je	.Ltmp848 # Offset: 3009
    00000bc3: 	movq	0x70(%rsp), %rax
    00000bc8: 	leaq	0x1(%rax), %rsi
    00000bcc: 	callq	_ZdlPvm@PLT # Offset: 3020
.Ltmp848:
    00000bd1: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000bd8: 	movq	%r15, %rsi
    00000bdb: 	movq	%r12, %rdi
    00000bde: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3038
    00000be3: 	callq	clock@PLT # Offset: 3043
    00000be8: 	movl	iterations(%rip), %ecx
    00000bee: 	xorl	%r13d, %r13d
    00000bf1: 	movq	%rax, start_time(%rip)
    00000bf8: 	testl	%ecx, %ecx
    00000bfa: 	jle	.Ltmp849 # Offset: 3066
    00000bfc: 	nopl	(%rax) # Size: 4
.Ltmp852:
    00000c00: 	movq	%rbp, %rax
    00000c03: 	pxor	%xmm0, %xmm0
    00000c07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp850:
    00000c10: 	paddd	(%rax), %xmm0
    00000c14: 	addq	$0x10, %rax
    00000c18: 	cmpq	%rbx, %rax
    00000c1b: 	jne	.Ltmp850 # Offset: 3099
    00000c1d: 	cvttsd2si	init_value(%rip), %rdx
    00000c26: 	movdqa	%xmm0, %xmm1
    00000c2a: 	psrldq	$0x8, %xmm1
    00000c2f: 	paddd	%xmm1, %xmm0
    00000c33: 	movdqa	%xmm0, %xmm1
    00000c37: 	psrldq	$0x4, %xmm1
    00000c3c: 	imull	$0x1f40, %edx, %edx
    00000c42: 	paddd	%xmm1, %xmm0
    00000c46: 	movd	%xmm0, %eax
    00000c4a: 	cmpl	%eax, %edx
    00000c4c: 	je	.Ltmp851 # Offset: 3148
    00000c4e: 	movl	current_test(%rip), %edx
    00000c54: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000c5b: 	movl	$0x1, %edi
    00000c60: 	xorl	%eax, %eax
    00000c62: 	callq	__printf_chk@PLT # Offset: 3170
    00000c67: 	movl	iterations(%rip), %ecx
.Ltmp851:
    00000c6d: 	addl	$0x1, %r13d
    00000c71: 	cmpl	%ecx, %r13d
    00000c74: 	jl	.Ltmp852 # Offset: 3188
.Ltmp849:
    00000c76: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c7d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000c84: 	subq	$0x20, %rax
    00000c88: 	cmpq	%rax, %r13
    00000c8b: 	je	.Ltmp853 # Offset: 3211
    00000c91: 	leaq	0x10(%r13), %rdi
    00000c95: 	movq	0x68(%rsp), %rcx
    00000c9a: 	movq	%rdi, (%r13)
    00000c9e: 	movq	0x60(%rsp), %rsi
    00000ca3: 	movq	%rcx, 0x8(%rsp)
    00000ca8: 	movq	%rsi, %rax
    00000cab: 	movq	%rsi, 0x18(%rsp)
    00000cb0: 	addq	%rcx, %rax
    00000cb3: 	je	.Ltmp854 # Offset: 3251
    00000cb5: 	testq	%rsi, %rsi
    00000cb8: 	je	.Ltmp855 # Offset: 3256
.Ltmp854:
    00000cbe: 	movq	0x8(%rsp), %rax
    00000cc3: 	movq	%rax, 0x20(%rsp)
    00000cc8: 	cmpq	$0xf, %rax
    00000ccc: 	ja	.Ltmp856 # Offset: 3276
    00000cd2: 	cmpq	$0x1, 0x8(%rsp)
    00000cd8: 	jne	.Ltmp857 # Offset: 3288
    00000cde: 	movq	0x18(%rsp), %rax
    00000ce3: 	movzbl	(%rax), %eax
    00000ce6: 	movb	%al, 0x10(%r13)
.Ltmp972:
    00000cea: 	movq	0x8(%rsp), %rax
    00000cef: 	movq	%rax, 0x8(%r13)
    00000cf3: 	movb	$0x0, (%rdi,%rax)
    00000cf7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cfe: 	addq	$0x20, %rax
    00000d02: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp949:
    00000d09: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d10: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d17: 	je	.Ltmp858 # Offset: 3351
.Ltmp948:
    00000d1d: 	movq	-0x20(%rax), %r13
    00000d21: 	callq	clock@PLT # Offset: 3361
    00000d26: 	pxor	%xmm0, %xmm0
    00000d2a: 	movq	%rax, end_time(%rip)
    00000d31: 	movq	%r13, %rdi
    00000d34: 	subq	start_time(%rip), %rax
    00000d3b: 	cvtsi2sd	%rax, %xmm0
    00000d40: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d48: 	callq	_Z13record_resultdPKc # Offset: 3400
    00000d4d: 	movq	0x60(%rsp), %rdi
    00000d52: 	cmpq	%r14, %rdi
    00000d55: 	je	.Ltmp859 # Offset: 3413
    00000d57: 	movq	0x70(%rsp), %rax
    00000d5c: 	leaq	0x1(%rax), %rsi
    00000d60: 	callq	_ZdlPvm@PLT # Offset: 3424
.Ltmp859:
    00000d65: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000d6c: 	movq	%r15, %rsi
    00000d6f: 	movq	%r12, %rdi
    00000d72: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3442
    00000d77: 	callq	clock@PLT # Offset: 3447
    00000d7c: 	movl	iterations(%rip), %ecx
    00000d82: 	xorl	%r13d, %r13d
    00000d85: 	movq	%rax, start_time(%rip)
    00000d8c: 	testl	%ecx, %ecx
    00000d8e: 	jle	.Ltmp860 # Offset: 3470
.Ltmp863:
    00000d90: 	movq	%rbp, %rax
    00000d93: 	pxor	%xmm0, %xmm0
    00000d97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp861:
    00000da0: 	paddd	(%rax), %xmm0
    00000da4: 	addq	$0x10, %rax
    00000da8: 	cmpq	%rbx, %rax
    00000dab: 	jne	.Ltmp861 # Offset: 3499
    00000dad: 	cvttsd2si	init_value(%rip), %rdx
    00000db6: 	movdqa	%xmm0, %xmm1
    00000dba: 	psrldq	$0x8, %xmm1
    00000dbf: 	paddd	%xmm1, %xmm0
    00000dc3: 	movdqa	%xmm0, %xmm1
    00000dc7: 	psrldq	$0x4, %xmm1
    00000dcc: 	imull	$0x1f40, %edx, %edx
    00000dd2: 	paddd	%xmm1, %xmm0
    00000dd6: 	movd	%xmm0, %eax
    00000dda: 	cmpl	%eax, %edx
    00000ddc: 	je	.Ltmp862 # Offset: 3548
    00000dde: 	movl	current_test(%rip), %edx
    00000de4: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000deb: 	movl	$0x1, %edi
    00000df0: 	xorl	%eax, %eax
    00000df2: 	callq	__printf_chk@PLT # Offset: 3570
    00000df7: 	movl	iterations(%rip), %ecx
.Ltmp862:
    00000dfd: 	addl	$0x1, %r13d
    00000e01: 	cmpl	%ecx, %r13d
    00000e04: 	jl	.Ltmp863 # Offset: 3588
.Ltmp860:
    00000e06: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e0d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000e14: 	subq	$0x20, %rax
    00000e18: 	cmpq	%rax, %r13
    00000e1b: 	je	.Ltmp864 # Offset: 3611
    00000e21: 	leaq	0x10(%r13), %rdi
    00000e25: 	movq	0x68(%rsp), %rcx
    00000e2a: 	movq	%rdi, (%r13)
    00000e2e: 	movq	0x60(%rsp), %rsi
    00000e33: 	movq	%rcx, 0x8(%rsp)
    00000e38: 	movq	%rsi, %rax
    00000e3b: 	movq	%rsi, 0x18(%rsp)
    00000e40: 	addq	%rcx, %rax
    00000e43: 	je	.Ltmp865 # Offset: 3651
    00000e45: 	testq	%rsi, %rsi
    00000e48: 	je	.Ltmp866 # Offset: 3656
.Ltmp865:
    00000e4e: 	movq	0x8(%rsp), %rax
    00000e53: 	movq	%rax, 0x20(%rsp)
    00000e58: 	cmpq	$0xf, %rax
    00000e5c: 	ja	.Ltmp867 # Offset: 3676
    00000e62: 	cmpq	$0x1, 0x8(%rsp)
    00000e68: 	jne	.Ltmp868 # Offset: 3688
    00000e6e: 	movq	0x18(%rsp), %rax
    00000e73: 	movzbl	(%rax), %eax
    00000e76: 	movb	%al, 0x10(%r13)
.Ltmp964:
    00000e7a: 	movq	0x8(%rsp), %rax
    00000e7f: 	movq	%rax, 0x8(%r13)
    00000e83: 	movb	$0x0, (%rdi,%rax)
    00000e87: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e8e: 	addq	$0x20, %rax
    00000e92: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp941:
    00000e99: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ea0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ea7: 	je	.Ltmp869 # Offset: 3751
.Ltmp940:
    00000ead: 	movq	-0x20(%rax), %r13
    00000eb1: 	callq	clock@PLT # Offset: 3761
    00000eb6: 	pxor	%xmm0, %xmm0
    00000eba: 	movq	%rax, end_time(%rip)
    00000ec1: 	movq	%r13, %rdi
    00000ec4: 	subq	start_time(%rip), %rax
    00000ecb: 	cvtsi2sd	%rax, %xmm0
    00000ed0: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ed8: 	callq	_Z13record_resultdPKc # Offset: 3800
    00000edd: 	movq	0x60(%rsp), %rdi
    00000ee2: 	cmpq	%r14, %rdi
    00000ee5: 	je	.Ltmp870 # Offset: 3813
    00000ee7: 	movq	0x70(%rsp), %rax
    00000eec: 	leaq	0x1(%rax), %rsi
    00000ef0: 	callq	_ZdlPvm@PLT # Offset: 3824
.Ltmp870:
    00000ef5: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000efc: 	movq	%r15, %rsi
    00000eff: 	movq	%r12, %rdi
    00000f02: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3842
    00000f07: 	callq	clock@PLT # Offset: 3847
    00000f0c: 	movl	iterations(%rip), %ecx
    00000f12: 	xorl	%r13d, %r13d
    00000f15: 	movq	%rax, start_time(%rip)
    00000f1c: 	testl	%ecx, %ecx
    00000f1e: 	jle	.Ltmp871 # Offset: 3870
.Ltmp874:
    00000f20: 	movq	%rbp, %rax
    00000f23: 	pxor	%xmm0, %xmm0
    00000f27: 	nopw	(%rax,%rax) # Size: 9
.Ltmp872:
    00000f30: 	paddd	(%rax), %xmm0
    00000f34: 	addq	$0x10, %rax
    00000f38: 	cmpq	%rax, %rbx
    00000f3b: 	jne	.Ltmp872 # Offset: 3899
    00000f3d: 	cvttsd2si	init_value(%rip), %rdx
    00000f46: 	movdqa	%xmm0, %xmm1
    00000f4a: 	psrldq	$0x8, %xmm1
    00000f4f: 	paddd	%xmm1, %xmm0
    00000f53: 	movdqa	%xmm0, %xmm1
    00000f57: 	psrldq	$0x4, %xmm1
    00000f5c: 	imull	$0x1f40, %edx, %edx
    00000f62: 	paddd	%xmm1, %xmm0
    00000f66: 	movd	%xmm0, %eax
    00000f6a: 	cmpl	%eax, %edx
    00000f6c: 	je	.Ltmp873 # Offset: 3948
    00000f6e: 	movl	current_test(%rip), %edx
    00000f74: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000f7b: 	movl	$0x1, %edi
    00000f80: 	xorl	%eax, %eax
    00000f82: 	callq	__printf_chk@PLT # Offset: 3970
    00000f87: 	movl	iterations(%rip), %ecx
.Ltmp873:
    00000f8d: 	addl	$0x1, %r13d
    00000f91: 	cmpl	%ecx, %r13d
    00000f94: 	jl	.Ltmp874 # Offset: 3988
.Ltmp871:
    00000f96: 	movq	%r12, %rdi
    00000f99: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3993
    00000f9e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fa5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fac: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fb3: 	je	.Ltmp875 # Offset: 4019
.Ltmp939:
    00000fb9: 	movq	-0x20(%rax), %r13
    00000fbd: 	callq	clock@PLT # Offset: 4029
    00000fc2: 	pxor	%xmm0, %xmm0
    00000fc6: 	movq	%rax, end_time(%rip)
    00000fcd: 	movq	%r13, %rdi
    00000fd0: 	subq	start_time(%rip), %rax
    00000fd7: 	cvtsi2sd	%rax, %xmm0
    00000fdc: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000fe4: 	callq	_Z13record_resultdPKc # Offset: 4068
    00000fe9: 	movq	0x60(%rsp), %rdi
    00000fee: 	cmpq	%r14, %rdi
    00000ff1: 	je	.Ltmp876 # Offset: 4081
    00000ff3: 	movq	0x70(%rsp), %rax
    00000ff8: 	leaq	0x1(%rax), %rsi
    00000ffc: 	callq	_ZdlPvm@PLT # Offset: 4092
.Ltmp876:
    00001001: 	leaq	DATAat0x1a27b(%rip), %rdx
    00001008: 	movq	%r15, %rsi
    0000100b: 	movq	%r12, %rdi
    0000100e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4110
    00001013: 	callq	clock@PLT # Offset: 4115
    00001018: 	movl	iterations(%rip), %ecx
    0000101e: 	xorl	%r13d, %r13d
    00001021: 	movq	%rax, start_time(%rip)
    00001028: 	testl	%ecx, %ecx
    0000102a: 	jle	.Ltmp877 # Offset: 4138
    0000102c: 	nopl	(%rax) # Size: 4
.Ltmp880:
    00001030: 	movq	%rbp, %rax
    00001033: 	pxor	%xmm0, %xmm0
    00001037: 	nopw	(%rax,%rax) # Size: 9
.Ltmp878:
    00001040: 	paddd	(%rax), %xmm0
    00001044: 	addq	$0x10, %rax
    00001048: 	cmpq	%rbx, %rax
    0000104b: 	jne	.Ltmp878 # Offset: 4171
    0000104d: 	cvttsd2si	init_value(%rip), %rdx
    00001056: 	movdqa	%xmm0, %xmm1
    0000105a: 	psrldq	$0x8, %xmm1
    0000105f: 	paddd	%xmm1, %xmm0
    00001063: 	movdqa	%xmm0, %xmm1
    00001067: 	psrldq	$0x4, %xmm1
    0000106c: 	imull	$0x1f40, %edx, %edx
    00001072: 	paddd	%xmm1, %xmm0
    00001076: 	movd	%xmm0, %eax
    0000107a: 	cmpl	%eax, %edx
    0000107c: 	je	.Ltmp879 # Offset: 4220
    0000107e: 	movl	current_test(%rip), %edx
    00001084: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000108b: 	movl	$0x1, %edi
    00001090: 	xorl	%eax, %eax
    00001092: 	callq	__printf_chk@PLT # Offset: 4242
    00001097: 	movl	iterations(%rip), %ecx
.Ltmp879:
    0000109d: 	addl	$0x1, %r13d
    000010a1: 	cmpl	%ecx, %r13d
    000010a4: 	jl	.Ltmp880 # Offset: 4260
.Ltmp877:
    000010a6: 	movq	%r12, %rdi
    000010a9: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4265
    000010ae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010b5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010bc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010c3: 	je	.Ltmp881 # Offset: 4291
.Ltmp938:
    000010c9: 	movq	-0x20(%rax), %r13
    000010cd: 	callq	clock@PLT # Offset: 4301
    000010d2: 	pxor	%xmm0, %xmm0
    000010d6: 	movq	%rax, end_time(%rip)
    000010dd: 	movq	%r13, %rdi
    000010e0: 	subq	start_time(%rip), %rax
    000010e7: 	cvtsi2sd	%rax, %xmm0
    000010ec: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010f4: 	callq	_Z13record_resultdPKc # Offset: 4340
    000010f9: 	movq	0x60(%rsp), %rdi
    000010fe: 	cmpq	%r14, %rdi
    00001101: 	je	.Ltmp882 # Offset: 4353
    00001103: 	movq	0x70(%rsp), %rax
    00001108: 	leaq	0x1(%rax), %rsi
    0000110c: 	callq	_ZdlPvm@PLT # Offset: 4364
.Ltmp882:
    00001111: 	leaq	DATAat0x1a28b(%rip), %rdx
    00001118: 	movq	%r15, %rsi
    0000111b: 	movq	%r12, %rdi
    0000111e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4382
    00001123: 	callq	clock@PLT # Offset: 4387
    00001128: 	movl	iterations(%rip), %ecx
    0000112e: 	xorl	%r13d, %r13d
    00001131: 	movq	%rax, start_time(%rip)
    00001138: 	testl	%ecx, %ecx
    0000113a: 	jle	.Ltmp883 # Offset: 4410
    0000113c: 	nopl	(%rax) # Size: 4
.Ltmp886:
    00001140: 	movq	%rbp, %rax
    00001143: 	pxor	%xmm0, %xmm0
    00001147: 	nopw	(%rax,%rax) # Size: 9
.Ltmp884:
    00001150: 	paddd	(%rax), %xmm0
    00001154: 	addq	$0x10, %rax
    00001158: 	cmpq	%rax, %rbx
    0000115b: 	jne	.Ltmp884 # Offset: 4443
    0000115d: 	cvttsd2si	init_value(%rip), %rdx
    00001166: 	movdqa	%xmm0, %xmm1
    0000116a: 	psrldq	$0x8, %xmm1
    0000116f: 	paddd	%xmm1, %xmm0
    00001173: 	movdqa	%xmm0, %xmm1
    00001177: 	psrldq	$0x4, %xmm1
    0000117c: 	imull	$0x1f40, %edx, %edx
    00001182: 	paddd	%xmm1, %xmm0
    00001186: 	movd	%xmm0, %eax
    0000118a: 	cmpl	%eax, %edx
    0000118c: 	je	.Ltmp885 # Offset: 4492
    0000118e: 	movl	current_test(%rip), %edx
    00001194: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000119b: 	movl	$0x1, %edi
    000011a0: 	xorl	%eax, %eax
    000011a2: 	callq	__printf_chk@PLT # Offset: 4514
    000011a7: 	movl	iterations(%rip), %ecx
.Ltmp885:
    000011ad: 	addl	$0x1, %r13d
    000011b1: 	cmpl	%ecx, %r13d
    000011b4: 	jl	.Ltmp886 # Offset: 4532
.Ltmp883:
    000011b6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011bd: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000011c4: 	subq	$0x20, %rax
    000011c8: 	cmpq	%rax, %r13
    000011cb: 	je	.Ltmp887 # Offset: 4555
    000011d1: 	leaq	0x10(%r13), %rdi
    000011d5: 	movq	0x68(%rsp), %rcx
    000011da: 	movq	%rdi, (%r13)
    000011de: 	movq	0x60(%rsp), %rsi
    000011e3: 	movq	%rcx, 0x8(%rsp)
    000011e8: 	movq	%rsi, %rax
    000011eb: 	movq	%rsi, 0x18(%rsp)
    000011f0: 	addq	%rcx, %rax
    000011f3: 	je	.Ltmp888 # Offset: 4595
    000011f5: 	testq	%rsi, %rsi
    000011f8: 	je	.Ltmp889 # Offset: 4600
.Ltmp888:
    000011fe: 	movq	0x8(%rsp), %rax
    00001203: 	movq	%rax, 0x20(%rsp)
    00001208: 	cmpq	$0xf, %rax
    0000120c: 	ja	.Ltmp890 # Offset: 4620
    00001212: 	cmpq	$0x1, 0x8(%rsp)
    00001218: 	jne	.Ltmp891 # Offset: 4632
    0000121e: 	movq	0x18(%rsp), %rax
    00001223: 	movzbl	(%rax), %eax
    00001226: 	movb	%al, 0x10(%r13)
.Ltmp966:
    0000122a: 	movq	0x8(%rsp), %rax
    0000122f: 	movq	%rax, 0x8(%r13)
    00001233: 	movb	$0x0, (%rdi,%rax)
    00001237: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000123e: 	addq	$0x20, %rax
    00001242: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp937:
    00001249: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001250: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001257: 	je	.Ltmp892 # Offset: 4695
.Ltmp936:
    0000125d: 	movq	-0x20(%rax), %r13
    00001261: 	callq	clock@PLT # Offset: 4705
    00001266: 	pxor	%xmm0, %xmm0
    0000126a: 	movq	%rax, end_time(%rip)
    00001271: 	movq	%r13, %rdi
    00001274: 	subq	start_time(%rip), %rax
    0000127b: 	cvtsi2sd	%rax, %xmm0
    00001280: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001288: 	callq	_Z13record_resultdPKc # Offset: 4744
    0000128d: 	movq	0x60(%rsp), %rdi
    00001292: 	cmpq	%r14, %rdi
    00001295: 	je	.Ltmp893 # Offset: 4757
    00001297: 	movq	0x70(%rsp), %rax
    0000129c: 	leaq	0x1(%rax), %rsi
    000012a0: 	callq	_ZdlPvm@PLT # Offset: 4768
.Ltmp893:
    000012a5: 	leaq	DATAat0x1a29b(%rip), %rdx
    000012ac: 	movq	%r15, %rsi
    000012af: 	movq	%r12, %rdi
    000012b2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4786
    000012b7: 	callq	clock@PLT # Offset: 4791
    000012bc: 	movl	iterations(%rip), %ecx
    000012c2: 	xorl	%r13d, %r13d
    000012c5: 	movq	%rax, start_time(%rip)
    000012cc: 	testl	%ecx, %ecx
    000012ce: 	jle	.Ltmp894 # Offset: 4814
.Ltmp897:
    000012d0: 	movq	%rbp, %rax
    000012d3: 	pxor	%xmm0, %xmm0
    000012d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp895:
    000012e0: 	paddd	(%rax), %xmm0
    000012e4: 	addq	$0x10, %rax
    000012e8: 	cmpq	%rbx, %rax
    000012eb: 	jne	.Ltmp895 # Offset: 4843
    000012ed: 	cvttsd2si	init_value(%rip), %rdx
    000012f6: 	movdqa	%xmm0, %xmm1
    000012fa: 	psrldq	$0x8, %xmm1
    000012ff: 	paddd	%xmm1, %xmm0
    00001303: 	movdqa	%xmm0, %xmm1
    00001307: 	psrldq	$0x4, %xmm1
    0000130c: 	imull	$0x1f40, %edx, %edx
    00001312: 	paddd	%xmm1, %xmm0
    00001316: 	movd	%xmm0, %eax
    0000131a: 	cmpl	%eax, %edx
    0000131c: 	je	.Ltmp896 # Offset: 4892
    0000131e: 	movl	current_test(%rip), %edx
    00001324: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000132b: 	movl	$0x1, %edi
    00001330: 	xorl	%eax, %eax
    00001332: 	callq	__printf_chk@PLT # Offset: 4914
    00001337: 	movl	iterations(%rip), %ecx
.Ltmp896:
    0000133d: 	addl	$0x1, %r13d
    00001341: 	cmpl	%ecx, %r13d
    00001344: 	jl	.Ltmp897 # Offset: 4932
.Ltmp894:
    00001346: 	movq	%r12, %rdi
    00001349: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4937
    0000134e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001355: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000135c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001363: 	je	.Ltmp898 # Offset: 4963
.Ltmp935:
    00001369: 	movq	-0x20(%rax), %r13
    0000136d: 	callq	clock@PLT # Offset: 4973
    00001372: 	pxor	%xmm0, %xmm0
    00001376: 	movq	%rax, end_time(%rip)
    0000137d: 	movq	%r13, %rdi
    00001380: 	subq	start_time(%rip), %rax
    00001387: 	cvtsi2sd	%rax, %xmm0
    0000138c: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001394: 	callq	_Z13record_resultdPKc # Offset: 5012
    00001399: 	movq	0x60(%rsp), %rdi
    0000139e: 	cmpq	%r14, %rdi
    000013a1: 	je	.Ltmp899 # Offset: 5025
    000013a3: 	movq	0x70(%rsp), %rax
    000013a8: 	leaq	0x1(%rax), %rsi
    000013ac: 	callq	_ZdlPvm@PLT # Offset: 5036
.Ltmp899:
    000013b1: 	leaq	DATAat0x1a2af(%rip), %rdx
    000013b8: 	movq	%r15, %rsi
    000013bb: 	movq	%r12, %rdi
    000013be: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5054
    000013c3: 	callq	clock@PLT # Offset: 5059
    000013c8: 	movl	iterations(%rip), %ecx
    000013ce: 	xorl	%r13d, %r13d
    000013d1: 	movq	%rax, start_time(%rip)
    000013d8: 	testl	%ecx, %ecx
    000013da: 	jle	.Ltmp900 # Offset: 5082
    000013dc: 	nopl	(%rax) # Size: 4
.Ltmp903:
    000013e0: 	movq	%rbp, %rax
    000013e3: 	pxor	%xmm0, %xmm0
    000013e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp901:
    000013f0: 	paddd	(%rax), %xmm0
    000013f4: 	addq	$0x10, %rax
    000013f8: 	cmpq	%rax, %rbx
    000013fb: 	jne	.Ltmp901 # Offset: 5115
    000013fd: 	cvttsd2si	init_value(%rip), %rdx
    00001406: 	movdqa	%xmm0, %xmm1
    0000140a: 	psrldq	$0x8, %xmm1
    0000140f: 	paddd	%xmm1, %xmm0
    00001413: 	movdqa	%xmm0, %xmm1
    00001417: 	psrldq	$0x4, %xmm1
    0000141c: 	imull	$0x1f40, %edx, %edx
    00001422: 	paddd	%xmm1, %xmm0
    00001426: 	movd	%xmm0, %eax
    0000142a: 	cmpl	%eax, %edx
    0000142c: 	je	.Ltmp902 # Offset: 5164
    0000142e: 	movl	current_test(%rip), %edx
    00001434: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000143b: 	movl	$0x1, %edi
    00001440: 	xorl	%eax, %eax
    00001442: 	callq	__printf_chk@PLT # Offset: 5186
    00001447: 	movl	iterations(%rip), %ecx
.Ltmp902:
    0000144d: 	addl	$0x1, %r13d
    00001451: 	cmpl	%ecx, %r13d
    00001454: 	jl	.Ltmp903 # Offset: 5204
.Ltmp900:
    00001456: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000145d: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001464: 	subq	$0x20, %rax
    00001468: 	cmpq	%rax, %r13
    0000146b: 	je	.Ltmp904 # Offset: 5227
    00001471: 	leaq	0x10(%r13), %rdi
    00001475: 	movq	0x68(%rsp), %rcx
    0000147a: 	movq	%rdi, (%r13)
    0000147e: 	movq	0x60(%rsp), %rsi
    00001483: 	movq	%rcx, 0x8(%rsp)
    00001488: 	movq	%rsi, %rax
    0000148b: 	movq	%rsi, 0x18(%rsp)
    00001490: 	addq	%rcx, %rax
    00001493: 	je	.Ltmp905 # Offset: 5267
    00001495: 	testq	%rsi, %rsi
    00001498: 	je	.Ltmp906 # Offset: 5272
.Ltmp905:
    0000149e: 	movq	0x8(%rsp), %rax
    000014a3: 	movq	%rax, 0x20(%rsp)
    000014a8: 	cmpq	$0xf, %rax
    000014ac: 	ja	.Ltmp907 # Offset: 5292
    000014b2: 	cmpq	$0x1, 0x8(%rsp)
    000014b8: 	jne	.Ltmp908 # Offset: 5304
    000014be: 	movq	0x18(%rsp), %rax
    000014c3: 	movzbl	(%rax), %eax
    000014c6: 	movb	%al, 0x10(%r13)
.Ltmp961:
    000014ca: 	movq	0x8(%rsp), %rax
    000014cf: 	movq	%rax, 0x8(%r13)
    000014d3: 	movb	$0x0, (%rdi,%rax)
    000014d7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014de: 	addq	$0x20, %rax
    000014e2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp934:
    000014e9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014f0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014f7: 	je	.Ltmp909 # Offset: 5367
.Ltmp933:
    000014fd: 	movq	-0x20(%rax), %r13
    00001501: 	callq	clock@PLT # Offset: 5377
    00001506: 	pxor	%xmm0, %xmm0
    0000150a: 	movq	%rax, end_time(%rip)
    00001511: 	movq	%r13, %rdi
    00001514: 	subq	start_time(%rip), %rax
    0000151b: 	cvtsi2sd	%rax, %xmm0
    00001520: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001528: 	callq	_Z13record_resultdPKc # Offset: 5416
    0000152d: 	movq	0x60(%rsp), %rdi
    00001532: 	cmpq	%r14, %rdi
    00001535: 	je	.Ltmp910 # Offset: 5429
    00001537: 	movq	0x70(%rsp), %rax
    0000153c: 	leaq	0x1(%rax), %rsi
    00001540: 	callq	_ZdlPvm@PLT # Offset: 5440
.Ltmp910:
    00001545: 	leaq	DATAat0x1a2c4(%rip), %rdx
    0000154c: 	movq	%r15, %rsi
    0000154f: 	movq	%r12, %rdi
    00001552: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5458
    00001557: 	callq	clock@PLT # Offset: 5463
    0000155c: 	movl	iterations(%rip), %ecx
    00001562: 	xorl	%r13d, %r13d
    00001565: 	movq	%rax, start_time(%rip)
    0000156c: 	testl	%ecx, %ecx
    0000156e: 	jle	.Ltmp911 # Offset: 5486
.Ltmp914:
    00001570: 	movq	%rbp, %rax
    00001573: 	pxor	%xmm0, %xmm0
    00001577: 	nopw	(%rax,%rax) # Size: 9
.Ltmp912:
    00001580: 	paddd	(%rax), %xmm0
    00001584: 	addq	$0x10, %rax
    00001588: 	cmpq	%rbx, %rax
    0000158b: 	jne	.Ltmp912 # Offset: 5515
    0000158d: 	cvttsd2si	init_value(%rip), %rdx
    00001596: 	movdqa	%xmm0, %xmm1
    0000159a: 	psrldq	$0x8, %xmm1
    0000159f: 	paddd	%xmm1, %xmm0
    000015a3: 	movdqa	%xmm0, %xmm1
    000015a7: 	psrldq	$0x4, %xmm1
    000015ac: 	imull	$0x1f40, %edx, %edx
    000015b2: 	paddd	%xmm1, %xmm0
    000015b6: 	movd	%xmm0, %eax
    000015ba: 	cmpl	%eax, %edx
    000015bc: 	je	.Ltmp913 # Offset: 5564
    000015be: 	movl	current_test(%rip), %edx
    000015c4: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000015cb: 	movl	$0x1, %edi
    000015d0: 	xorl	%eax, %eax
    000015d2: 	callq	__printf_chk@PLT # Offset: 5586
    000015d7: 	movl	iterations(%rip), %ecx
.Ltmp913:
    000015dd: 	addl	$0x1, %r13d
    000015e1: 	cmpl	%ecx, %r13d
    000015e4: 	jl	.Ltmp914 # Offset: 5604
.Ltmp911:
    000015e6: 	movq	%r12, %rdi
    000015e9: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5609
    000015ee: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015f5: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015fc: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001603: 	je	.Ltmp915 # Offset: 5635
.Ltmp932:
    00001609: 	movq	-0x20(%rax), %r13
    0000160d: 	callq	clock@PLT # Offset: 5645
    00001612: 	pxor	%xmm0, %xmm0
    00001616: 	movq	%rax, end_time(%rip)
    0000161d: 	movq	%r13, %rdi
    00001620: 	subq	start_time(%rip), %rax
    00001627: 	cvtsi2sd	%rax, %xmm0
    0000162c: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001634: 	callq	_Z13record_resultdPKc # Offset: 5684
    00001639: 	movq	0x60(%rsp), %rdi
    0000163e: 	cmpq	%r14, %rdi
    00001641: 	je	.Ltmp916 # Offset: 5697
    00001643: 	movq	0x70(%rsp), %rax
    00001648: 	leaq	0x1(%rax), %rsi
    0000164c: 	callq	_ZdlPvm@PLT # Offset: 5708
.Ltmp916:
    00001651: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001658: 	movq	%r15, %rsi
    0000165b: 	movq	%r12, %rdi
    0000165e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5726
    00001663: 	callq	clock@PLT # Offset: 5731
    00001668: 	movl	iterations(%rip), %ecx
    0000166e: 	xorl	%r13d, %r13d
    00001671: 	movq	%rax, start_time(%rip)
    00001678: 	testl	%ecx, %ecx
    0000167a: 	jle	.Ltmp917 # Offset: 5754
    0000167c: 	nopl	(%rax) # Size: 4
.Ltmp920:
    00001680: 	movq	%rbp, %rax
    00001683: 	pxor	%xmm0, %xmm0
    00001687: 	nopw	(%rax,%rax) # Size: 9
.Ltmp918:
    00001690: 	paddd	(%rax), %xmm0
    00001694: 	addq	$0x10, %rax
    00001698: 	cmpq	%rbx, %rax
    0000169b: 	jne	.Ltmp918 # Offset: 5787
    0000169d: 	cvttsd2si	init_value(%rip), %rdx
    000016a6: 	movdqa	%xmm0, %xmm1
    000016aa: 	psrldq	$0x8, %xmm1
    000016af: 	paddd	%xmm1, %xmm0
    000016b3: 	movdqa	%xmm0, %xmm1
    000016b7: 	psrldq	$0x4, %xmm1
    000016bc: 	imull	$0x1f40, %edx, %edx
    000016c2: 	paddd	%xmm1, %xmm0
    000016c6: 	movd	%xmm0, %eax
    000016ca: 	cmpl	%eax, %edx
    000016cc: 	je	.Ltmp919 # Offset: 5836
    000016ce: 	movl	current_test(%rip), %edx
    000016d4: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000016db: 	movl	$0x1, %edi
    000016e0: 	xorl	%eax, %eax
    000016e2: 	callq	__printf_chk@PLT # Offset: 5858
    000016e7: 	movl	iterations(%rip), %ecx
.Ltmp919:
    000016ed: 	addl	$0x1, %r13d
    000016f1: 	cmpl	%ecx, %r13d
    000016f4: 	jl	.Ltmp920 # Offset: 5876
.Ltmp917:
    000016f6: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000016fd: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001704: 	subq	$0x20, %rax
    00001708: 	cmpq	%rax, %rbx
    0000170b: 	je	.Ltmp921 # Offset: 5899
    00001711: 	leaq	0x10(%rbx), %rdi
    00001715: 	movq	0x68(%rsp), %r13
    0000171a: 	movq	%rdi, (%rbx)
    0000171d: 	movq	0x60(%rsp), %rbp
    00001722: 	movq	%rbp, %rax
    00001725: 	addq	%r13, %rax
    00001728: 	je	.Ltmp922 # Offset: 5928
    0000172a: 	testq	%rbp, %rbp
    0000172d: 	je	.Ltmp923 # Offset: 5933
.Ltmp922:
    00001733: 	movq	%r13, 0x20(%rsp)
    00001738: 	cmpq	$0xf, %r13
    0000173c: 	ja	.Ltmp924 # Offset: 5948
    00001742: 	cmpq	$0x1, %r13
    00001746: 	jne	.Ltmp925 # Offset: 5958
    0000174c: 	movzbl	(%rbp), %eax
    00001750: 	movb	%al, 0x10(%rbx)
.Ltmp974:
    00001753: 	movq	%r13, 0x8(%rbx)
    00001757: 	movb	$0x0, (%rdi,%r13)
    0000175c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001763: 	addq	$0x20, %rax
    00001767: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp944:
    0000176e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001775: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000177c: 	je	.Ltmp926 # Offset: 6012
.Ltmp943:
    00001782: 	movq	-0x20(%rax), %rbp
    00001786: 	callq	clock@PLT # Offset: 6022
    0000178b: 	pxor	%xmm0, %xmm0
    0000178f: 	movq	%rax, end_time(%rip)
    00001796: 	movq	%rbp, %rdi
    00001799: 	subq	start_time(%rip), %rax
    000017a0: 	cvtsi2sd	%rax, %xmm0
    000017a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000017ad: 	callq	_Z13record_resultdPKc # Offset: 6061
    000017b2: 	movq	0x60(%rsp), %rdi
    000017b7: 	cmpq	%r14, %rdi
    000017ba: 	je	.Ltmp927 # Offset: 6074
    000017bc: 	movq	0x70(%rsp), %rax
    000017c1: 	leaq	0x1(%rax), %rsi
    000017c5: 	callq	_ZdlPvm@PLT # Offset: 6085
.Ltmp927:
    000017ca: 	leaq	DATAat0x1a2ee(%rip), %rdx
    000017d1: 	movq	%r15, %rsi
    000017d4: 	movq	%r12, %rdi
    000017d7: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6103
    000017dc: 	movl	iterations(%rip), %edx
    000017e2: 	movq	0x60(%rsp), %rdi
    000017e7: 	xorl	%r8d, %r8d
    000017ea: 	xorl	%ecx, %ecx
    000017ec: 	movl	$0x1f40, %esi
    000017f1: 	callq	_Z9summarizePKciiii # Offset: 6129
    000017f6: 	movq	0x60(%rsp), %rdi
    000017fb: 	cmpq	%r14, %rdi
    000017fe: 	je	.Ltmp928 # Offset: 6142
    00001800: 	movq	0x70(%rsp), %rax
    00001805: 	leaq	0x1(%rax), %rsi
    00001809: 	callq	_ZdlPvm@PLT # Offset: 6153
.Ltmp928:
    0000180e: 	movq	0x40(%rsp), %rdi
    00001813: 	cmpq	0x10(%rsp), %rdi
    00001818: 	je	.Ltmp929 # Offset: 6168
    0000181a: 	movq	0x50(%rsp), %rax
    0000181f: 	leaq	0x1(%rax), %rsi
    00001823: 	callq	_ZdlPvm@PLT # Offset: 6179
.Ltmp929:
    00001828: 	movq	0x7d88(%rsp), %rax
    00001830: 	subq	%fs:0x28, %rax
    00001839: 	jne	.Ltmp930 # Offset: 6201
    0000183f: 	addq	$0x7d98, %rsp
    00001846: 	popq	%rbx
    00001847: 	popq	%rbp
    00001848: 	popq	%r12
    0000184a: 	popq	%r13
    0000184c: 	popq	%r14
    0000184e: 	popq	%r15
    00001850: 	retq # Offset: 6224
.Ltmp783:
    00001851: 	movq	(%rsp), %rsi
    00001855: 	xorl	%edx, %edx
    00001857: 	movq	%r13, %rdi
    0000185a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6234
    0000185f: 	movq	%rax, (%r13)
    00001863: 	movq	%rax, %rdi
    00001866: 	movq	0x20(%rsp), %rax
    0000186b: 	movq	%rax, 0x10(%r13)
.Ltmp963:
    0000186f: 	movq	0x8(%rsp), %rsi
    00001874: 	movq	%r14, %rdx
    00001877: 	callq	memcpy@PLT # Offset: 6263
    0000187c: 	movq	0x20(%rsp), %r14
    00001881: 	movq	(%r13), %rdi
    00001885: 	jmp	.Ltmp931 # Offset: 6277
.Ltmp915:
    0000188a: 	movq	-0x8(%rdx), %rax
    0000188e: 	addq	$0x200, %rax
    00001894: 	jmp	.Ltmp932 # Offset: 6292
.Ltmp909:
    00001899: 	movq	-0x8(%rdx), %rax
    0000189d: 	addq	$0x200, %rax
    000018a3: 	jmp	.Ltmp933 # Offset: 6307
.Ltmp904:
    000018a8: 	movq	%r12, %rsi
    000018ab: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018b2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6322
    000018b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018be: 	jmp	.Ltmp934 # Offset: 6334
.Ltmp898:
    000018c3: 	movq	-0x8(%rdx), %rax
    000018c7: 	addq	$0x200, %rax
    000018cd: 	jmp	.Ltmp935 # Offset: 6349
.Ltmp892:
    000018d2: 	movq	-0x8(%rdx), %rax
    000018d6: 	addq	$0x200, %rax
    000018dc: 	jmp	.Ltmp936 # Offset: 6364
.Ltmp887:
    000018e1: 	movq	%r12, %rsi
    000018e4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018eb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6379
    000018f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018f7: 	jmp	.Ltmp937 # Offset: 6391
.Ltmp881:
    000018fc: 	movq	-0x8(%rdx), %rax
    00001900: 	addq	$0x200, %rax
    00001906: 	jmp	.Ltmp938 # Offset: 6406
.Ltmp875:
    0000190b: 	movq	-0x8(%rdx), %rax
    0000190f: 	addq	$0x200, %rax
    00001915: 	jmp	.Ltmp939 # Offset: 6421
.Ltmp869:
    0000191a: 	movq	-0x8(%rdx), %rax
    0000191e: 	addq	$0x200, %rax
    00001924: 	jmp	.Ltmp940 # Offset: 6436
.Ltmp864:
    00001929: 	movq	%r12, %rsi
    0000192c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001933: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6451
    00001938: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000193f: 	jmp	.Ltmp941 # Offset: 6463
.Ltmp780:
    00001944: 	movq	%r12, %rsi
    00001947: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000194e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6478
    00001953: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000195a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001961: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001968: 	jne	.Ltmp942 # Offset: 6504
.Ltmp785:
    0000196e: 	movq	-0x8(%rdx), %rax
    00001972: 	addq	$0x200, %rax
    00001978: 	jmp	.Ltmp942 # Offset: 6520
.Ltmp926:
    0000197d: 	movq	-0x8(%rdx), %rax
    00001981: 	addq	$0x200, %rax
    00001987: 	jmp	.Ltmp943 # Offset: 6535
.Ltmp921:
    0000198c: 	movq	%r12, %rsi
    0000198f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001996: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6550
    0000199b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019a2: 	jmp	.Ltmp944 # Offset: 6562
.Ltmp802:
    000019a7: 	movq	%r12, %rsi
    000019aa: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019b1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6577
    000019b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019bd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019cb: 	jne	.Ltmp945 # Offset: 6603
.Ltmp807:
    000019d1: 	movq	-0x8(%rdx), %rax
    000019d5: 	addq	$0x200, %rax
    000019db: 	jmp	.Ltmp945 # Offset: 6619
.Ltmp796:
    000019e0: 	movq	-0x8(%rdx), %rax
    000019e4: 	addq	$0x200, %rax
    000019ea: 	jmp	.Ltmp946 # Offset: 6634
.Ltmp791:
    000019ef: 	movq	%r12, %rsi
    000019f2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019f9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6649
    000019fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a05: 	jmp	.Ltmp947 # Offset: 6661
.Ltmp858:
    00001a0a: 	movq	-0x8(%rdx), %rax
    00001a0e: 	addq	$0x200, %rax
    00001a14: 	jmp	.Ltmp948 # Offset: 6676
.Ltmp853:
    00001a19: 	movq	%r12, %rsi
    00001a1c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a23: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6691
    00001a28: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a2f: 	jmp	.Ltmp949 # Offset: 6703
.Ltmp847:
    00001a34: 	movq	-0x8(%rdx), %rax
    00001a38: 	addq	$0x200, %rax
    00001a3e: 	jmp	.Ltmp950 # Offset: 6718
.Ltmp841:
    00001a43: 	movq	-0x8(%rdx), %rax
    00001a47: 	addq	$0x200, %rax
    00001a4d: 	jmp	.Ltmp951 # Offset: 6733
.Ltmp835:
    00001a52: 	movq	-0x8(%rdx), %rax
    00001a56: 	addq	$0x200, %rax
    00001a5c: 	jmp	.Ltmp952 # Offset: 6748
.Ltmp830:
    00001a61: 	movq	%r12, %rsi
    00001a64: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a6b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6763
    00001a70: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a77: 	jmp	.Ltmp953 # Offset: 6775
.Ltmp824:
    00001a7c: 	movq	-0x8(%rdx), %rax
    00001a80: 	addq	$0x200, %rax
    00001a86: 	jmp	.Ltmp954 # Offset: 6790
.Ltmp818:
    00001a8b: 	movq	-0x8(%rdx), %rax
    00001a8f: 	addq	$0x200, %rax
    00001a95: 	jmp	.Ltmp955 # Offset: 6805
.Ltmp813:
    00001a9a: 	movq	%r12, %rsi
    00001a9d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001aa4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6820
    00001aa9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ab0: 	jmp	.Ltmp956 # Offset: 6832
.Ltmp834:
    00001ab5: 	cmpq	$0x0, 0x8(%rsp)
    00001abb: 	je	.Ltmp957 # Offset: 6843
    00001ac1: 	jmp	.Ltmp958 # Offset: 6849
    00001ac6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp817:
    00001ad0: 	cmpq	$0x0, 0x8(%rsp)
    00001ad6: 	je	.Ltmp959 # Offset: 6870
    00001adc: 	jmp	.Ltmp960 # Offset: 6876
    00001ae1: 	nopl	(%rax) # Size: 7
.Ltmp908:
    00001ae8: 	cmpq	$0x0, 0x8(%rsp)
    00001aee: 	je	.Ltmp961 # Offset: 6894
    00001af4: 	jmp	.Ltmp962 # Offset: 6900
    00001af9: 	nopl	(%rax) # Size: 7
.Ltmp784:
    00001b00: 	testq	%r14, %r14
    00001b03: 	je	.Ltmp931 # Offset: 6915
    00001b09: 	jmp	.Ltmp963 # Offset: 6921
    00001b0e: 	nop # Size: 2
.Ltmp868:
    00001b10: 	cmpq	$0x0, 0x8(%rsp)
    00001b16: 	je	.Ltmp964 # Offset: 6934
    00001b1c: 	jmp	.Ltmp965 # Offset: 6940
    00001b21: 	nopl	(%rax) # Size: 7
.Ltmp891:
    00001b28: 	cmpq	$0x0, 0x8(%rsp)
    00001b2e: 	je	.Ltmp966 # Offset: 6958
    00001b34: 	jmp	.Ltmp967 # Offset: 6964
    00001b39: 	nopl	(%rax) # Size: 7
.Ltmp795:
    00001b40: 	cmpq	$0x0, 0x8(%rsp)
    00001b46: 	je	.Ltmp968 # Offset: 6982
    00001b4c: 	jmp	.Ltmp969 # Offset: 6988
    00001b51: 	nopl	(%rax) # Size: 7
.Ltmp806:
    00001b58: 	cmpq	$0x0, 0x8(%rsp)
    00001b5e: 	je	.Ltmp970 # Offset: 7006
    00001b64: 	jmp	.Ltmp971 # Offset: 7012
    00001b69: 	nopl	(%rax) # Size: 7
.Ltmp857:
    00001b70: 	cmpq	$0x0, 0x8(%rsp)
    00001b76: 	je	.Ltmp972 # Offset: 7030
    00001b7c: 	jmp	.Ltmp973 # Offset: 7036
    00001b81: 	nopl	(%rax) # Size: 7
.Ltmp925:
    00001b88: 	testq	%r13, %r13
    00001b8b: 	je	.Ltmp974 # Offset: 7051
.Ltmp975:
    00001b91: 	movq	%r13, %rdx
    00001b94: 	movq	%rbp, %rsi
    00001b97: 	callq	memcpy@PLT # Offset: 7063
    00001b9c: 	movq	0x20(%rsp), %r13
    00001ba1: 	movq	(%rbx), %rdi
    00001ba4: 	jmp	.Ltmp974 # Offset: 7076
.Ltmp867:
    00001ba9: 	movq	(%rsp), %rsi
    00001bad: 	xorl	%edx, %edx
    00001baf: 	movq	%r13, %rdi
    00001bb2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7090
    00001bb7: 	movq	%rax, (%r13)
    00001bbb: 	movq	%rax, %rdi
    00001bbe: 	movq	0x20(%rsp), %rax
    00001bc3: 	movq	%rax, 0x10(%r13)
.Ltmp965:
    00001bc7: 	movq	0x8(%rsp), %rdx
    00001bcc: 	movq	0x18(%rsp), %rsi
    00001bd1: 	callq	memcpy@PLT # Offset: 7121
    00001bd6: 	movq	0x20(%rsp), %rax
    00001bdb: 	movq	(%r13), %rdi
    00001bdf: 	movq	%rax, 0x8(%rsp)
    00001be4: 	jmp	.Ltmp964 # Offset: 7140
.Ltmp833:
    00001be9: 	movq	(%rsp), %rsi
    00001bed: 	xorl	%edx, %edx
    00001bef: 	movq	%r13, %rdi
    00001bf2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7154
    00001bf7: 	movq	%rax, (%r13)
    00001bfb: 	movq	%rax, %rdi
    00001bfe: 	movq	0x20(%rsp), %rax
    00001c03: 	movq	%rax, 0x10(%r13)
.Ltmp958:
    00001c07: 	movq	0x8(%rsp), %rdx
    00001c0c: 	movq	0x18(%rsp), %rsi
    00001c11: 	callq	memcpy@PLT # Offset: 7185
    00001c16: 	movq	0x20(%rsp), %rax
    00001c1b: 	movq	(%r13), %rdi
    00001c1f: 	movq	%rax, 0x8(%rsp)
    00001c24: 	jmp	.Ltmp957 # Offset: 7204
.Ltmp856:
    00001c29: 	movq	(%rsp), %rsi
    00001c2d: 	xorl	%edx, %edx
    00001c2f: 	movq	%r13, %rdi
    00001c32: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7218
    00001c37: 	movq	%rax, (%r13)
    00001c3b: 	movq	%rax, %rdi
    00001c3e: 	movq	0x20(%rsp), %rax
    00001c43: 	movq	%rax, 0x10(%r13)
.Ltmp973:
    00001c47: 	movq	0x8(%rsp), %rdx
    00001c4c: 	movq	0x18(%rsp), %rsi
    00001c51: 	callq	memcpy@PLT # Offset: 7249
    00001c56: 	movq	0x20(%rsp), %rax
    00001c5b: 	movq	(%r13), %rdi
    00001c5f: 	movq	%rax, 0x8(%rsp)
    00001c64: 	jmp	.Ltmp972 # Offset: 7268
.Ltmp816:
    00001c69: 	movq	(%rsp), %rsi
    00001c6d: 	xorl	%edx, %edx
    00001c6f: 	movq	%r13, %rdi
    00001c72: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7282
    00001c77: 	movq	%rax, (%r13)
    00001c7b: 	movq	%rax, %rdi
    00001c7e: 	movq	0x20(%rsp), %rax
    00001c83: 	movq	%rax, 0x10(%r13)
.Ltmp960:
    00001c87: 	movq	0x8(%rsp), %rdx
    00001c8c: 	movq	0x18(%rsp), %rsi
    00001c91: 	callq	memcpy@PLT # Offset: 7313
    00001c96: 	movq	0x20(%rsp), %rax
    00001c9b: 	movq	(%r13), %rdi
    00001c9f: 	movq	%rax, 0x8(%rsp)
    00001ca4: 	jmp	.Ltmp959 # Offset: 7332
.Ltmp907:
    00001ca9: 	movq	(%rsp), %rsi
    00001cad: 	xorl	%edx, %edx
    00001caf: 	movq	%r13, %rdi
    00001cb2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7346
    00001cb7: 	movq	%rax, (%r13)
    00001cbb: 	movq	%rax, %rdi
    00001cbe: 	movq	0x20(%rsp), %rax
    00001cc3: 	movq	%rax, 0x10(%r13)
.Ltmp962:
    00001cc7: 	movq	0x8(%rsp), %rdx
    00001ccc: 	movq	0x18(%rsp), %rsi
    00001cd1: 	callq	memcpy@PLT # Offset: 7377
    00001cd6: 	movq	0x20(%rsp), %rax
    00001cdb: 	movq	(%r13), %rdi
    00001cdf: 	movq	%rax, 0x8(%rsp)
    00001ce4: 	jmp	.Ltmp961 # Offset: 7396
.Ltmp890:
    00001ce9: 	movq	(%rsp), %rsi
    00001ced: 	xorl	%edx, %edx
    00001cef: 	movq	%r13, %rdi
    00001cf2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7410
    00001cf7: 	movq	%rax, (%r13)
    00001cfb: 	movq	%rax, %rdi
    00001cfe: 	movq	0x20(%rsp), %rax
    00001d03: 	movq	%rax, 0x10(%r13)
.Ltmp967:
    00001d07: 	movq	0x8(%rsp), %rdx
    00001d0c: 	movq	0x18(%rsp), %rsi
    00001d11: 	callq	memcpy@PLT # Offset: 7441
    00001d16: 	movq	0x20(%rsp), %rax
    00001d1b: 	movq	(%r13), %rdi
    00001d1f: 	movq	%rax, 0x8(%rsp)
    00001d24: 	jmp	.Ltmp966 # Offset: 7460
.Ltmp794:
    00001d29: 	movq	(%rsp), %rsi
    00001d2d: 	xorl	%edx, %edx
    00001d2f: 	movq	%r13, %rdi
    00001d32: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7474
    00001d37: 	movq	%rax, (%r13)
    00001d3b: 	movq	%rax, %rdi
    00001d3e: 	movq	0x20(%rsp), %rax
    00001d43: 	movq	%rax, 0x10(%r13)
.Ltmp969:
    00001d47: 	movq	0x8(%rsp), %rdx
    00001d4c: 	movq	0x18(%rsp), %rsi
    00001d51: 	callq	memcpy@PLT # Offset: 7505
    00001d56: 	movq	0x20(%rsp), %rax
    00001d5b: 	movq	(%r13), %rdi
    00001d5f: 	movq	%rax, 0x8(%rsp)
    00001d64: 	jmp	.Ltmp968 # Offset: 7524
.Ltmp924:
    00001d69: 	movq	(%rsp), %rsi
    00001d6d: 	xorl	%edx, %edx
    00001d6f: 	movq	%rbx, %rdi
    00001d72: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7538
    00001d77: 	movq	%rax, (%rbx)
    00001d7a: 	movq	%rax, %rdi
    00001d7d: 	movq	0x20(%rsp), %rax
    00001d82: 	movq	%rax, 0x10(%rbx)
    00001d86: 	jmp	.Ltmp975 # Offset: 7558
.Ltmp805:
    00001d8b: 	movq	(%rsp), %rsi
    00001d8f: 	xorl	%edx, %edx
    00001d91: 	movq	%r13, %rdi
    00001d94: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7572
    00001d99: 	movq	%rax, (%r13)
    00001d9d: 	movq	%rax, %rdi
    00001da0: 	movq	0x20(%rsp), %rax
    00001da5: 	movq	%rax, 0x10(%r13)
.Ltmp971:
    00001da9: 	movq	0x8(%rsp), %rdx
    00001dae: 	movq	0x18(%rsp), %rsi
    00001db3: 	callq	memcpy@PLT # Offset: 7603
    00001db8: 	movq	0x20(%rsp), %rax
    00001dbd: 	movq	(%r13), %rdi
    00001dc1: 	movq	%rax, 0x8(%rsp)
    00001dc6: 	jmp	.Ltmp970 # Offset: 7622
.Ltmp793:
    00001dcb: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dd2: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7634
.Ltmp804:
    00001dd7: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dde: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7646
.Ltmp815:
    00001de3: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dea: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7658
.Ltmp832:
    00001def: 	leaq	DATAat0x1a158(%rip), %rdi
    00001df6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7670
.Ltmp855:
    00001dfb: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e02: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7682
.Ltmp866:
    00001e07: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e0e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7694
.Ltmp889:
    00001e13: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e1a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7706
.Ltmp906:
    00001e1f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e26: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7718
.Ltmp923:
    00001e2b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e32: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7730
.Ltmp930:
    00001e37: 	callq	__stack_chk_fail@PLT # Offset: 7735
.Ltmp782:
    00001e3c: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e43: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7747
    00001e48: 	endbr64
.Ltmp977:
    00001e4c: 	movq	%rax, %rbp
    00001e4f: 	jmp	.Ltmp976 # Offset: 7759
    00001e51: 	endbr64
    00001e55: 	jmp	.Ltmp977 # Offset: 7765
    00001e57: 	endbr64
    00001e5b: 	jmp	.Ltmp977 # Offset: 7771
    00001e5d: 	endbr64
    00001e61: 	movq	%rax, %rbp
    00001e64: 	jmp	.Ltmp978 # Offset: 7780
    00001e66: 	endbr64
    00001e6a: 	jmp	.Ltmp977 # Offset: 7786
    00001e6c: 	endbr64
    00001e70: 	jmp	.Ltmp977 # Offset: 7792
    00001e72: 	endbr64
    00001e76: 	jmp	.Ltmp977 # Offset: 7798
    00001e78: 	endbr64
    00001e7c: 	jmp	.Ltmp977 # Offset: 7804
    00001e7e: 	endbr64
    00001e82: 	jmp	.Ltmp977 # Offset: 7810
    00001e84: 	endbr64
    00001e88: 	jmp	.Ltmp977 # Offset: 7816
    00001e8a: 	endbr64
    00001e8e: 	jmp	.Ltmp977 # Offset: 7822
    00001e90: 	endbr64
    00001e94: 	jmp	.Ltmp977 # Offset: 7828
.Ltmp976:
    00001e96: 	movq	0x60(%rsp), %rdi
    00001e9b: 	cmpq	%r14, %rdi
    00001e9e: 	je	.Ltmp978 # Offset: 7838
.Ltmp981:
    00001ea0: 	movq	0x70(%rsp), %rax
    00001ea5: 	leaq	0x1(%rax), %rsi
    00001ea9: 	callq	_ZdlPvm@PLT # Offset: 7849
.Ltmp978:
    00001eae: 	movq	0x40(%rsp), %rdi
    00001eb3: 	cmpq	0x10(%rsp), %rdi
    00001eb8: 	je	.Ltmp979 # Offset: 7864
    00001eba: 	movq	0x50(%rsp), %rax
    00001ebf: 	leaq	0x1(%rax), %rsi
    00001ec3: 	callq	_ZdlPvm@PLT # Offset: 7875
.Ltmp979:
    00001ec8: 	movq	%rbp, %rdi
    00001ecb: 	callq	_Unwind_Resume@PLT # Offset: 7883
    00001ed0: 	endbr64
    00001ed4: 	jmp	.Ltmp977 # Offset: 7892
    00001ed9: 	endbr64
    00001edd: 	jmp	.Ltmp977 # Offset: 7901
    00001ee2: 	endbr64
    00001ee6: 	movq	%rax, %rbp
    00001ee9: 	jmp	.Ltmp980 # Offset: 7913
    00001eeb: 	endbr64
    00001eef: 	jmp	.Ltmp977 # Offset: 7919
.Ltmp980:
    00001ef4: 	movq	0x60(%rsp), %rdi
    00001ef9: 	leaq	0x70(%rsp), %rax
    00001efe: 	cmpq	%rax, %rdi
    00001f01: 	jne	.Ltmp981 # Offset: 7937
    00001f03: 	jmp	.Ltmp978 # Offset: 7939
    00001f05: 	endbr64
    00001f09: 	jmp	.Ltmp977 # Offset: 7945
    00001f0e: 	endbr64
    00001f12: 	jmp	.Ltmp977 # Offset: 7954
    00001f17: 	endbr64
    00001f1b: 	jmp	.Ltmp977 # Offset: 7963
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIjEvv"

Binary Function "_Z11TestOneTypeIiEvv" after disassembly {
  Number      : 50
  State       : disassembled
  Address     : 0xada0
  Size        : 0x1f58
  MaxSize     : 0x1f60
  Offset      : 0xada0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIiEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB049:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp982:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp982 # Offset: 37
    00000027: 	subq	$0xd98, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0x7d88(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x20(%rsp), %rsi
    0000005d: 	movaps	%xmm2, 0x20(%rsp)
    00000062: 	leaq	0x80(%rsp), %rbp
    0000006a: 	movq	%rsi, (%rsp)
    0000006e: 	leaq	0x7d80(%rsp), %rbx
    00000076: 	movaps	%xmm3, 0x30(%rsp)
    0000007b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 123
    00000080: 	leaq	0x50(%rsp), %rax
    00000085: 	movb	$0x74, 0x56(%rsp)
    0000008a: 	movq	%rax, 0x10(%rsp)
    0000008f: 	movq	%rax, 0x40(%rsp)
    00000094: 	movl	$0x5f32, %eax
    00000099: 	movw	%ax, 0x54(%rsp)
    0000009e: 	cvttsd2si	init_value(%rip), %eax
    000000a6: 	movl	$0x33746e69, 0x50(%rsp)
    000000ae: 	movq	$0x7, 0x48(%rsp)
    000000b7: 	movb	$0x0, 0x57(%rsp)
    000000bc: 	movd	%eax, %xmm0
    000000c0: 	movq	%rbp, %rax
    000000c3: 	pshufd	$0x0, %xmm0, %xmm0
    000000c8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp983:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rax, %rbx
    000000da: 	jne	.Ltmp983 # Offset: 218
    000000dc: 	leaq	0x60(%rsp), %r12
    000000e1: 	leaq	0x40(%rsp), %r15
    000000e6: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000ed: 	movq	%r15, %rsi
    000000f0: 	movq	%r12, %rdi
    000000f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 243
    000000f8: 	callq	clock@PLT # Offset: 248
    000000fd: 	movl	iterations(%rip), %ecx
    00000103: 	xorl	%r13d, %r13d
    00000106: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000010d: 	movq	%rax, start_time(%rip)
    00000114: 	testl	%ecx, %ecx
    00000116: 	jle	.Ltmp984 # Offset: 278
    00000118: 	nopl	(%rax,%rax) # Size: 8
.Ltmp987:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp985:
    00000130: 	paddd	(%rax), %xmm0
    00000134: 	addq	$0x10, %rax
    00000138: 	cmpq	%rbx, %rax
    0000013b: 	jne	.Ltmp985 # Offset: 315
    0000013d: 	movdqa	%xmm0, %xmm1
    00000141: 	cvttsd2si	init_value(%rip), %edx
    00000149: 	psrldq	$0x8, %xmm1
    0000014e: 	paddd	%xmm1, %xmm0
    00000152: 	movdqa	%xmm0, %xmm1
    00000156: 	psrldq	$0x4, %xmm1
    0000015b: 	imull	$0x1f40, %edx, %edx
    00000161: 	paddd	%xmm1, %xmm0
    00000165: 	movd	%xmm0, %eax
    00000169: 	cmpl	%eax, %edx
    0000016b: 	je	.Ltmp986 # Offset: 363
    0000016d: 	movl	current_test(%rip), %edx
    00000173: 	movq	%r14, %rsi
    00000176: 	movl	$0x1, %edi
    0000017b: 	xorl	%eax, %eax
    0000017d: 	callq	__printf_chk@PLT # Offset: 381
    00000182: 	movl	iterations(%rip), %ecx
.Ltmp986:
    00000188: 	addl	$0x1, %r13d
    0000018c: 	cmpl	%ecx, %r13d
    0000018f: 	jl	.Ltmp987 # Offset: 399
.Ltmp984:
    00000191: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000198: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000019f: 	subq	$0x20, %rax
    000001a3: 	cmpq	%rax, %r13
    000001a6: 	je	.Ltmp988 # Offset: 422
    000001ac: 	leaq	0x10(%r13), %rdi
    000001b0: 	movq	0x68(%rsp), %r14
    000001b5: 	movq	%rdi, (%r13)
    000001b9: 	movq	0x60(%rsp), %rax
    000001be: 	movq	%rax, %rsi
    000001c1: 	movq	%rax, 0x8(%rsp)
    000001c6: 	addq	%r14, %rsi
    000001c9: 	je	.Ltmp989 # Offset: 457
    000001cb: 	testq	%rax, %rax
    000001ce: 	je	.Ltmp990 # Offset: 462
.Ltmp989:
    000001d4: 	movq	%r14, 0x20(%rsp)
    000001d9: 	cmpq	$0xf, %r14
    000001dd: 	ja	.Ltmp991 # Offset: 477
    000001e3: 	cmpq	$0x1, %r14
    000001e7: 	jne	.Ltmp992 # Offset: 487
    000001ed: 	movq	0x8(%rsp), %rax
    000001f2: 	movzbl	(%rax), %eax
    000001f5: 	movb	%al, 0x10(%r13)
.Ltmp1139:
    000001f9: 	movq	%r14, 0x8(%r13)
    000001fd: 	movb	$0x0, (%rdi,%r14)
    00000202: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000209: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000210: 	addq	$0x20, %rax
    00000214: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000021b: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000222: 	je	.Ltmp993 # Offset: 546
.Ltmp1149:
    00000228: 	movq	-0x20(%rax), %r13
    0000022c: 	callq	clock@PLT # Offset: 556
    00000231: 	pxor	%xmm0, %xmm0
    00000235: 	movq	%rax, end_time(%rip)
    0000023c: 	movq	%r13, %rdi
    0000023f: 	subq	start_time(%rip), %rax
    00000246: 	cvtsi2sd	%rax, %xmm0
    0000024b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000253: 	callq	_Z13record_resultdPKc # Offset: 595
    00000258: 	movq	0x60(%rsp), %rdi
    0000025d: 	leaq	0x70(%rsp), %r14
    00000262: 	cmpq	%r14, %rdi
    00000265: 	je	.Ltmp994 # Offset: 613
    00000267: 	movq	0x70(%rsp), %rax
    0000026c: 	leaq	0x1(%rax), %rsi
    00000270: 	callq	_ZdlPvm@PLT # Offset: 624
.Ltmp994:
    00000275: 	leaq	DATAat0x1a1e2(%rip), %rdx
    0000027c: 	movq	%r15, %rsi
    0000027f: 	movq	%r12, %rdi
    00000282: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 642
    00000287: 	callq	clock@PLT # Offset: 647
    0000028c: 	movl	iterations(%rip), %ecx
    00000292: 	xorl	%r13d, %r13d
    00000295: 	movq	%rax, start_time(%rip)
    0000029c: 	testl	%ecx, %ecx
    0000029e: 	jle	.Ltmp995 # Offset: 670
.Ltmp998:
    000002a0: 	movq	%rbp, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp996:
    000002b0: 	paddd	(%rax), %xmm0
    000002b4: 	addq	$0x10, %rax
    000002b8: 	cmpq	%rax, %rbx
    000002bb: 	jne	.Ltmp996 # Offset: 699
    000002bd: 	movdqa	%xmm0, %xmm1
    000002c1: 	cvttsd2si	init_value(%rip), %edx
    000002c9: 	psrldq	$0x8, %xmm1
    000002ce: 	paddd	%xmm1, %xmm0
    000002d2: 	movdqa	%xmm0, %xmm1
    000002d6: 	psrldq	$0x4, %xmm1
    000002db: 	imull	$0x1f40, %edx, %edx
    000002e1: 	paddd	%xmm1, %xmm0
    000002e5: 	movd	%xmm0, %eax
    000002e9: 	cmpl	%eax, %edx
    000002eb: 	je	.Ltmp997 # Offset: 747
    000002ed: 	movl	current_test(%rip), %edx
    000002f3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002fa: 	movl	$0x1, %edi
    000002ff: 	xorl	%eax, %eax
    00000301: 	callq	__printf_chk@PLT # Offset: 769
    00000306: 	movl	iterations(%rip), %ecx
.Ltmp997:
    0000030c: 	addl	$0x1, %r13d
    00000310: 	cmpl	%ecx, %r13d
    00000313: 	jl	.Ltmp998 # Offset: 787
.Ltmp995:
    00000315: 	movq	%r12, %rdi
    00000318: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 792
    0000031d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000324: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000032b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000332: 	je	.Ltmp999 # Offset: 818
.Ltmp1155:
    00000338: 	movq	-0x20(%rax), %r13
    0000033c: 	callq	clock@PLT # Offset: 828
    00000341: 	pxor	%xmm0, %xmm0
    00000345: 	movq	%rax, end_time(%rip)
    0000034c: 	movq	%r13, %rdi
    0000034f: 	subq	start_time(%rip), %rax
    00000356: 	cvtsi2sd	%rax, %xmm0
    0000035b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000363: 	callq	_Z13record_resultdPKc # Offset: 867
    00000368: 	movq	0x60(%rsp), %rdi
    0000036d: 	cmpq	%r14, %rdi
    00000370: 	je	.Ltmp1000 # Offset: 880
    00000372: 	movq	0x70(%rsp), %rax
    00000377: 	leaq	0x1(%rax), %rsi
    0000037b: 	callq	_ZdlPvm@PLT # Offset: 891
.Ltmp1000:
    00000380: 	leaq	DATAat0x1a1ee(%rip), %rdx
    00000387: 	movq	%r15, %rsi
    0000038a: 	movq	%r12, %rdi
    0000038d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 909
    00000392: 	callq	clock@PLT # Offset: 914
    00000397: 	movl	iterations(%rip), %ecx
    0000039d: 	xorl	%r13d, %r13d
    000003a0: 	movq	%rax, start_time(%rip)
    000003a7: 	testl	%ecx, %ecx
    000003a9: 	jle	.Ltmp1001 # Offset: 937
    000003ab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1004:
    000003b0: 	movq	%rbp, %rax
    000003b3: 	pxor	%xmm0, %xmm0
    000003b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1002:
    000003c0: 	paddd	(%rax), %xmm0
    000003c4: 	addq	$0x10, %rax
    000003c8: 	cmpq	%rbx, %rax
    000003cb: 	jne	.Ltmp1002 # Offset: 971
    000003cd: 	movdqa	%xmm0, %xmm1
    000003d1: 	cvttsd2si	init_value(%rip), %edx
    000003d9: 	psrldq	$0x8, %xmm1
    000003de: 	paddd	%xmm1, %xmm0
    000003e2: 	movdqa	%xmm0, %xmm1
    000003e6: 	psrldq	$0x4, %xmm1
    000003eb: 	imull	$0x1f40, %edx, %edx
    000003f1: 	paddd	%xmm1, %xmm0
    000003f5: 	movd	%xmm0, %eax
    000003f9: 	cmpl	%eax, %edx
    000003fb: 	je	.Ltmp1003 # Offset: 1019
    000003fd: 	movl	current_test(%rip), %edx
    00000403: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000040a: 	movl	$0x1, %edi
    0000040f: 	xorl	%eax, %eax
    00000411: 	callq	__printf_chk@PLT # Offset: 1041
    00000416: 	movl	iterations(%rip), %ecx
.Ltmp1003:
    0000041c: 	addl	$0x1, %r13d
    00000420: 	cmpl	%ecx, %r13d
    00000423: 	jl	.Ltmp1004 # Offset: 1059
.Ltmp1001:
    00000425: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000042c: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000433: 	subq	$0x20, %rax
    00000437: 	cmpq	%rax, %r13
    0000043a: 	je	.Ltmp1005 # Offset: 1082
    00000440: 	leaq	0x10(%r13), %rdi
    00000444: 	movq	0x68(%rsp), %rcx
    00000449: 	movq	%rdi, (%r13)
    0000044d: 	movq	0x60(%rsp), %rsi
    00000452: 	movq	%rcx, 0x8(%rsp)
    00000457: 	movq	%rsi, %rax
    0000045a: 	movq	%rsi, 0x18(%rsp)
    0000045f: 	addq	%rcx, %rax
    00000462: 	je	.Ltmp1006 # Offset: 1122
    00000464: 	testq	%rsi, %rsi
    00000467: 	je	.Ltmp1007 # Offset: 1127
.Ltmp1006:
    0000046d: 	movq	0x8(%rsp), %rax
    00000472: 	movq	%rax, 0x20(%rsp)
    00000477: 	cmpq	$0xf, %rax
    0000047b: 	ja	.Ltmp1008 # Offset: 1147
    00000481: 	cmpq	$0x1, 0x8(%rsp)
    00000487: 	jne	.Ltmp1009 # Offset: 1159
    0000048d: 	movq	0x18(%rsp), %rax
    00000492: 	movzbl	(%rax), %eax
    00000495: 	movb	%al, 0x10(%r13)
.Ltmp1175:
    00000499: 	movq	0x8(%rsp), %rax
    0000049e: 	movq	%rax, 0x8(%r13)
    000004a2: 	movb	$0x0, (%rdi,%rax)
    000004a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004ad: 	addq	$0x20, %rax
    000004b1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1154:
    000004b8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004bf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004c6: 	je	.Ltmp1010 # Offset: 1222
.Ltmp1153:
    000004cc: 	movq	-0x20(%rax), %r13
    000004d0: 	callq	clock@PLT # Offset: 1232
    000004d5: 	pxor	%xmm0, %xmm0
    000004d9: 	movq	%rax, end_time(%rip)
    000004e0: 	movq	%r13, %rdi
    000004e3: 	subq	start_time(%rip), %rax
    000004ea: 	cvtsi2sd	%rax, %xmm0
    000004ef: 	divsd	DATAat0x1a318(%rip), %xmm0
    000004f7: 	callq	_Z13record_resultdPKc # Offset: 1271
    000004fc: 	movq	0x60(%rsp), %rdi
    00000501: 	cmpq	%r14, %rdi
    00000504: 	je	.Ltmp1011 # Offset: 1284
    00000506: 	movq	0x70(%rsp), %rax
    0000050b: 	leaq	0x1(%rax), %rsi
    0000050f: 	callq	_ZdlPvm@PLT # Offset: 1295
.Ltmp1011:
    00000514: 	leaq	DATAat0x1a1fb(%rip), %rdx
    0000051b: 	movq	%r15, %rsi
    0000051e: 	movq	%r12, %rdi
    00000521: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1313
    00000526: 	callq	clock@PLT # Offset: 1318
    0000052b: 	movl	iterations(%rip), %ecx
    00000531: 	xorl	%r13d, %r13d
    00000534: 	movq	%rax, start_time(%rip)
    0000053b: 	testl	%ecx, %ecx
    0000053d: 	jle	.Ltmp1012 # Offset: 1341
    0000053f: 	nop # Size: 1
.Ltmp1015:
    00000540: 	movq	%rbp, %rax
    00000543: 	pxor	%xmm0, %xmm0
    00000547: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1013:
    00000550: 	paddd	(%rax), %xmm0
    00000554: 	addq	$0x10, %rax
    00000558: 	cmpq	%rax, %rbx
    0000055b: 	jne	.Ltmp1013 # Offset: 1371
    0000055d: 	movdqa	%xmm0, %xmm1
    00000561: 	cvttsd2si	init_value(%rip), %edx
    00000569: 	psrldq	$0x8, %xmm1
    0000056e: 	paddd	%xmm1, %xmm0
    00000572: 	movdqa	%xmm0, %xmm1
    00000576: 	psrldq	$0x4, %xmm1
    0000057b: 	imull	$0x1f40, %edx, %edx
    00000581: 	paddd	%xmm1, %xmm0
    00000585: 	movd	%xmm0, %eax
    00000589: 	cmpl	%eax, %edx
    0000058b: 	je	.Ltmp1014 # Offset: 1419
    0000058d: 	movl	current_test(%rip), %edx
    00000593: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000059a: 	movl	$0x1, %edi
    0000059f: 	xorl	%eax, %eax
    000005a1: 	callq	__printf_chk@PLT # Offset: 1441
    000005a6: 	movl	iterations(%rip), %ecx
.Ltmp1014:
    000005ac: 	addl	$0x1, %r13d
    000005b0: 	cmpl	%ecx, %r13d
    000005b3: 	jl	.Ltmp1015 # Offset: 1459
.Ltmp1012:
    000005b5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005bc: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000005c3: 	subq	$0x20, %rax
    000005c7: 	cmpq	%rax, %r13
    000005ca: 	je	.Ltmp1016 # Offset: 1482
    000005d0: 	leaq	0x10(%r13), %rdi
    000005d4: 	movq	0x68(%rsp), %rcx
    000005d9: 	movq	%rdi, (%r13)
    000005dd: 	movq	0x60(%rsp), %rsi
    000005e2: 	movq	%rcx, 0x8(%rsp)
    000005e7: 	movq	%rsi, %rax
    000005ea: 	movq	%rsi, 0x18(%rsp)
    000005ef: 	addq	%rcx, %rax
    000005f2: 	je	.Ltmp1017 # Offset: 1522
    000005f4: 	testq	%rsi, %rsi
    000005f7: 	je	.Ltmp1018 # Offset: 1527
.Ltmp1017:
    000005fd: 	movq	0x8(%rsp), %rax
    00000602: 	movq	%rax, 0x20(%rsp)
    00000607: 	cmpq	$0xf, %rax
    0000060b: 	ja	.Ltmp1019 # Offset: 1547
    00000611: 	cmpq	$0x1, 0x8(%rsp)
    00000617: 	jne	.Ltmp1020 # Offset: 1559
    0000061d: 	movq	0x18(%rsp), %rax
    00000622: 	movzbl	(%rax), %eax
    00000625: 	movb	%al, 0x10(%r13)
.Ltmp1164:
    00000629: 	movq	0x8(%rsp), %rax
    0000062e: 	movq	%rax, 0x8(%r13)
    00000632: 	movb	$0x0, (%rdi,%rax)
    00000636: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000063d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000644: 	addq	$0x20, %rax
    00000648: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000064f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000656: 	je	.Ltmp1021 # Offset: 1622
.Ltmp1152:
    0000065c: 	movq	-0x20(%rax), %r13
    00000660: 	callq	clock@PLT # Offset: 1632
    00000665: 	pxor	%xmm0, %xmm0
    00000669: 	movq	%rax, end_time(%rip)
    00000670: 	movq	%r13, %rdi
    00000673: 	subq	start_time(%rip), %rax
    0000067a: 	cvtsi2sd	%rax, %xmm0
    0000067f: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000687: 	callq	_Z13record_resultdPKc # Offset: 1671
    0000068c: 	movq	0x60(%rsp), %rdi
    00000691: 	cmpq	%r14, %rdi
    00000694: 	je	.Ltmp1022 # Offset: 1684
    00000696: 	movq	0x70(%rsp), %rax
    0000069b: 	leaq	0x1(%rax), %rsi
    0000069f: 	callq	_ZdlPvm@PLT # Offset: 1695
.Ltmp1022:
    000006a4: 	leaq	DATAat0x1a208(%rip), %rdx
    000006ab: 	movq	%r15, %rsi
    000006ae: 	movq	%r12, %rdi
    000006b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1713
    000006b6: 	callq	clock@PLT # Offset: 1718
    000006bb: 	movl	iterations(%rip), %ecx
    000006c1: 	xorl	%r13d, %r13d
    000006c4: 	movq	%rax, start_time(%rip)
    000006cb: 	testl	%ecx, %ecx
    000006cd: 	jle	.Ltmp1023 # Offset: 1741
    000006cf: 	nop # Size: 1
.Ltmp1026:
    000006d0: 	movq	%rbp, %rax
    000006d3: 	pxor	%xmm0, %xmm0
    000006d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1024:
    000006e0: 	paddd	(%rax), %xmm0
    000006e4: 	addq	$0x10, %rax
    000006e8: 	cmpq	%rbx, %rax
    000006eb: 	jne	.Ltmp1024 # Offset: 1771
    000006ed: 	movdqa	%xmm0, %xmm1
    000006f1: 	cvttsd2si	init_value(%rip), %edx
    000006f9: 	psrldq	$0x8, %xmm1
    000006fe: 	paddd	%xmm1, %xmm0
    00000702: 	movdqa	%xmm0, %xmm1
    00000706: 	psrldq	$0x4, %xmm1
    0000070b: 	imull	$0x1f40, %edx, %edx
    00000711: 	paddd	%xmm1, %xmm0
    00000715: 	movd	%xmm0, %eax
    00000719: 	cmpl	%eax, %edx
    0000071b: 	je	.Ltmp1025 # Offset: 1819
    0000071d: 	movl	current_test(%rip), %edx
    00000723: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000072a: 	movl	$0x1, %edi
    0000072f: 	xorl	%eax, %eax
    00000731: 	callq	__printf_chk@PLT # Offset: 1841
    00000736: 	movl	iterations(%rip), %ecx
.Ltmp1025:
    0000073c: 	addl	$0x1, %r13d
    00000740: 	cmpl	%ecx, %r13d
    00000743: 	jl	.Ltmp1026 # Offset: 1859
.Ltmp1023:
    00000745: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000074c: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000753: 	subq	$0x20, %rax
    00000757: 	cmpq	%rax, %r13
    0000075a: 	je	.Ltmp1027 # Offset: 1882
    00000760: 	leaq	0x10(%r13), %rdi
    00000764: 	movq	0x68(%rsp), %rcx
    00000769: 	movq	%rdi, (%r13)
    0000076d: 	movq	0x60(%rsp), %rsi
    00000772: 	movq	%rcx, 0x8(%rsp)
    00000777: 	movq	%rsi, %rax
    0000077a: 	movq	%rsi, 0x18(%rsp)
    0000077f: 	addq	%rcx, %rax
    00000782: 	je	.Ltmp1028 # Offset: 1922
    00000784: 	testq	%rsi, %rsi
    00000787: 	je	.Ltmp1029 # Offset: 1927
.Ltmp1028:
    0000078d: 	movq	0x8(%rsp), %rax
    00000792: 	movq	%rax, 0x20(%rsp)
    00000797: 	cmpq	$0xf, %rax
    0000079b: 	ja	.Ltmp1030 # Offset: 1947
    000007a1: 	cmpq	$0x1, 0x8(%rsp)
    000007a7: 	jne	.Ltmp1031 # Offset: 1959
    000007ad: 	movq	0x18(%rsp), %rax
    000007b2: 	movzbl	(%rax), %eax
    000007b5: 	movb	%al, 0x10(%r13)
.Ltmp1167:
    000007b9: 	movq	0x8(%rsp), %rax
    000007be: 	movq	%rax, 0x8(%r13)
    000007c2: 	movb	$0x0, (%rdi,%rax)
    000007c6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007cd: 	addq	$0x20, %rax
    000007d1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1163:
    000007d8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000007df: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007e6: 	je	.Ltmp1032 # Offset: 2022
.Ltmp1162:
    000007ec: 	movq	-0x20(%rax), %r13
    000007f0: 	callq	clock@PLT # Offset: 2032
    000007f5: 	pxor	%xmm0, %xmm0
    000007f9: 	movq	%rax, end_time(%rip)
    00000800: 	movq	%r13, %rdi
    00000803: 	subq	start_time(%rip), %rax
    0000080a: 	cvtsi2sd	%rax, %xmm0
    0000080f: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000817: 	callq	_Z13record_resultdPKc # Offset: 2071
    0000081c: 	movq	0x60(%rsp), %rdi
    00000821: 	cmpq	%r14, %rdi
    00000824: 	je	.Ltmp1033 # Offset: 2084
    00000826: 	movq	0x70(%rsp), %rax
    0000082b: 	leaq	0x1(%rax), %rsi
    0000082f: 	callq	_ZdlPvm@PLT # Offset: 2095
.Ltmp1033:
    00000834: 	leaq	DATAat0x1a215(%rip), %rdx
    0000083b: 	movq	%r15, %rsi
    0000083e: 	movq	%r12, %rdi
    00000841: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2113
    00000846: 	callq	clock@PLT # Offset: 2118
    0000084b: 	movl	iterations(%rip), %ecx
    00000851: 	xorl	%r13d, %r13d
    00000854: 	movq	%rax, start_time(%rip)
    0000085b: 	testl	%ecx, %ecx
    0000085d: 	jle	.Ltmp1034 # Offset: 2141
    0000085f: 	nop # Size: 1
.Ltmp1037:
    00000860: 	movq	%rbp, %rax
    00000863: 	pxor	%xmm0, %xmm0
    00000867: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1035:
    00000870: 	paddd	(%rax), %xmm0
    00000874: 	addq	$0x10, %rax
    00000878: 	cmpq	%rbx, %rax
    0000087b: 	jne	.Ltmp1035 # Offset: 2171
    0000087d: 	movdqa	%xmm0, %xmm1
    00000881: 	cvttsd2si	init_value(%rip), %edx
    00000889: 	psrldq	$0x8, %xmm1
    0000088e: 	paddd	%xmm1, %xmm0
    00000892: 	movdqa	%xmm0, %xmm1
    00000896: 	psrldq	$0x4, %xmm1
    0000089b: 	imull	$0x1f40, %edx, %edx
    000008a1: 	paddd	%xmm1, %xmm0
    000008a5: 	movd	%xmm0, %eax
    000008a9: 	cmpl	%eax, %edx
    000008ab: 	je	.Ltmp1036 # Offset: 2219
    000008ad: 	movl	current_test(%rip), %edx
    000008b3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000008ba: 	movl	$0x1, %edi
    000008bf: 	xorl	%eax, %eax
    000008c1: 	callq	__printf_chk@PLT # Offset: 2241
    000008c6: 	movl	iterations(%rip), %ecx
.Ltmp1036:
    000008cc: 	addl	$0x1, %r13d
    000008d0: 	cmpl	%ecx, %r13d
    000008d3: 	jl	.Ltmp1037 # Offset: 2259
.Ltmp1034:
    000008d5: 	movq	%r12, %rdi
    000008d8: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2264
    000008dd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008e4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008eb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008f2: 	je	.Ltmp1038 # Offset: 2290
.Ltmp1161:
    000008f8: 	movq	-0x20(%rax), %r13
    000008fc: 	callq	clock@PLT # Offset: 2300
    00000901: 	pxor	%xmm0, %xmm0
    00000905: 	movq	%rax, end_time(%rip)
    0000090c: 	movq	%r13, %rdi
    0000090f: 	subq	start_time(%rip), %rax
    00000916: 	cvtsi2sd	%rax, %xmm0
    0000091b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000923: 	callq	_Z13record_resultdPKc # Offset: 2339
    00000928: 	movq	0x60(%rsp), %rdi
    0000092d: 	cmpq	%r14, %rdi
    00000930: 	je	.Ltmp1039 # Offset: 2352
    00000932: 	movq	0x70(%rsp), %rax
    00000937: 	leaq	0x1(%rax), %rsi
    0000093b: 	callq	_ZdlPvm@PLT # Offset: 2363
.Ltmp1039:
    00000940: 	leaq	DATAat0x1a226(%rip), %rdx
    00000947: 	movq	%r15, %rsi
    0000094a: 	movq	%r12, %rdi
    0000094d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2381
    00000952: 	callq	clock@PLT # Offset: 2386
    00000957: 	movl	iterations(%rip), %ecx
    0000095d: 	xorl	%r13d, %r13d
    00000960: 	movq	%rax, start_time(%rip)
    00000967: 	testl	%ecx, %ecx
    00000969: 	jle	.Ltmp1040 # Offset: 2409
    0000096b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1043:
    00000970: 	movq	%rbp, %rax
    00000973: 	pxor	%xmm0, %xmm0
    00000977: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1041:
    00000980: 	paddd	(%rax), %xmm0
    00000984: 	addq	$0x10, %rax
    00000988: 	cmpq	%rbx, %rax
    0000098b: 	jne	.Ltmp1041 # Offset: 2443
    0000098d: 	movdqa	%xmm0, %xmm1
    00000991: 	cvttsd2si	init_value(%rip), %edx
    00000999: 	psrldq	$0x8, %xmm1
    0000099e: 	paddd	%xmm1, %xmm0
    000009a2: 	movdqa	%xmm0, %xmm1
    000009a6: 	psrldq	$0x4, %xmm1
    000009ab: 	imull	$0x1f40, %edx, %edx
    000009b1: 	paddd	%xmm1, %xmm0
    000009b5: 	movd	%xmm0, %eax
    000009b9: 	cmpl	%eax, %edx
    000009bb: 	je	.Ltmp1042 # Offset: 2491
    000009bd: 	movl	current_test(%rip), %edx
    000009c3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000009ca: 	movl	$0x1, %edi
    000009cf: 	xorl	%eax, %eax
    000009d1: 	callq	__printf_chk@PLT # Offset: 2513
    000009d6: 	movl	iterations(%rip), %ecx
.Ltmp1042:
    000009dc: 	addl	$0x1, %r13d
    000009e0: 	cmpl	%ecx, %r13d
    000009e3: 	jl	.Ltmp1043 # Offset: 2531
.Ltmp1040:
    000009e5: 	movq	%r12, %rdi
    000009e8: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2536
    000009ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000009f4: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000009fb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a02: 	je	.Ltmp1044 # Offset: 2562
.Ltmp1160:
    00000a08: 	movq	-0x20(%rax), %r13
    00000a0c: 	callq	clock@PLT # Offset: 2572
    00000a11: 	pxor	%xmm0, %xmm0
    00000a15: 	movq	%rax, end_time(%rip)
    00000a1c: 	movq	%r13, %rdi
    00000a1f: 	subq	start_time(%rip), %rax
    00000a26: 	cvtsi2sd	%rax, %xmm0
    00000a2b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a33: 	callq	_Z13record_resultdPKc # Offset: 2611
    00000a38: 	movq	0x60(%rsp), %rdi
    00000a3d: 	cmpq	%r14, %rdi
    00000a40: 	je	.Ltmp1045 # Offset: 2624
    00000a42: 	movq	0x70(%rsp), %rax
    00000a47: 	leaq	0x1(%rax), %rsi
    00000a4b: 	callq	_ZdlPvm@PLT # Offset: 2635
.Ltmp1045:
    00000a50: 	leaq	DATAat0x1a238(%rip), %rdx
    00000a57: 	movq	%r15, %rsi
    00000a5a: 	movq	%r12, %rdi
    00000a5d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2653
    00000a62: 	callq	clock@PLT # Offset: 2658
    00000a67: 	movl	iterations(%rip), %ecx
    00000a6d: 	xorl	%r13d, %r13d
    00000a70: 	movq	%rax, start_time(%rip)
    00000a77: 	testl	%ecx, %ecx
    00000a79: 	jle	.Ltmp1046 # Offset: 2681
    00000a7b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1049:
    00000a80: 	movq	%rbp, %rax
    00000a83: 	pxor	%xmm0, %xmm0
    00000a87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1047:
    00000a90: 	paddd	(%rax), %xmm0
    00000a94: 	addq	$0x10, %rax
    00000a98: 	cmpq	%rax, %rbx
    00000a9b: 	jne	.Ltmp1047 # Offset: 2715
    00000a9d: 	movdqa	%xmm0, %xmm1
    00000aa1: 	cvttsd2si	init_value(%rip), %edx
    00000aa9: 	psrldq	$0x8, %xmm1
    00000aae: 	paddd	%xmm1, %xmm0
    00000ab2: 	movdqa	%xmm0, %xmm1
    00000ab6: 	psrldq	$0x4, %xmm1
    00000abb: 	imull	$0x1f40, %edx, %edx
    00000ac1: 	paddd	%xmm1, %xmm0
    00000ac5: 	movd	%xmm0, %eax
    00000ac9: 	cmpl	%eax, %edx
    00000acb: 	je	.Ltmp1048 # Offset: 2763
    00000acd: 	movl	current_test(%rip), %edx
    00000ad3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000ada: 	movl	$0x1, %edi
    00000adf: 	xorl	%eax, %eax
    00000ae1: 	callq	__printf_chk@PLT # Offset: 2785
    00000ae6: 	movl	iterations(%rip), %ecx
.Ltmp1048:
    00000aec: 	addl	$0x1, %r13d
    00000af0: 	cmpl	%ecx, %r13d
    00000af3: 	jl	.Ltmp1049 # Offset: 2803
.Ltmp1046:
    00000af5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000afc: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000b03: 	subq	$0x20, %rax
    00000b07: 	cmpq	%rax, %r13
    00000b0a: 	je	.Ltmp1050 # Offset: 2826
    00000b10: 	leaq	0x10(%r13), %rdi
    00000b14: 	movq	0x68(%rsp), %rcx
    00000b19: 	movq	%rdi, (%r13)
    00000b1d: 	movq	0x60(%rsp), %rsi
    00000b22: 	movq	%rcx, 0x8(%rsp)
    00000b27: 	movq	%rsi, %rax
    00000b2a: 	movq	%rsi, 0x18(%rsp)
    00000b2f: 	addq	%rcx, %rax
    00000b32: 	je	.Ltmp1051 # Offset: 2866
    00000b34: 	testq	%rsi, %rsi
    00000b37: 	je	.Ltmp1052 # Offset: 2871
.Ltmp1051:
    00000b3d: 	movq	0x8(%rsp), %rax
    00000b42: 	movq	%rax, 0x20(%rsp)
    00000b47: 	cmpq	$0xf, %rax
    00000b4b: 	ja	.Ltmp1053 # Offset: 2891
    00000b51: 	cmpq	$0x1, 0x8(%rsp)
    00000b57: 	jne	.Ltmp1054 # Offset: 2903
    00000b5d: 	movq	0x18(%rsp), %rax
    00000b62: 	movzbl	(%rax), %eax
    00000b65: 	movb	%al, 0x10(%r13)
.Ltmp1165:
    00000b69: 	movq	0x8(%rsp), %rax
    00000b6e: 	movq	%rax, 0x8(%r13)
    00000b72: 	movb	$0x0, (%rdi,%rax)
    00000b76: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b7d: 	addq	$0x20, %rax
    00000b81: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1159:
    00000b88: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000b8f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b96: 	je	.Ltmp1055 # Offset: 2966
.Ltmp1158:
    00000b9c: 	movq	-0x20(%rax), %r13
    00000ba0: 	callq	clock@PLT # Offset: 2976
    00000ba5: 	pxor	%xmm0, %xmm0
    00000ba9: 	movq	%rax, end_time(%rip)
    00000bb0: 	movq	%r13, %rdi
    00000bb3: 	subq	start_time(%rip), %rax
    00000bba: 	cvtsi2sd	%rax, %xmm0
    00000bbf: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000bc7: 	callq	_Z13record_resultdPKc # Offset: 3015
    00000bcc: 	movq	0x60(%rsp), %rdi
    00000bd1: 	cmpq	%r14, %rdi
    00000bd4: 	je	.Ltmp1056 # Offset: 3028
    00000bd6: 	movq	0x70(%rsp), %rax
    00000bdb: 	leaq	0x1(%rax), %rsi
    00000bdf: 	callq	_ZdlPvm@PLT # Offset: 3039
.Ltmp1056:
    00000be4: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000beb: 	movq	%r15, %rsi
    00000bee: 	movq	%r12, %rdi
    00000bf1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3057
    00000bf6: 	callq	clock@PLT # Offset: 3062
    00000bfb: 	movl	iterations(%rip), %ecx
    00000c01: 	xorl	%r13d, %r13d
    00000c04: 	movq	%rax, start_time(%rip)
    00000c0b: 	testl	%ecx, %ecx
    00000c0d: 	jle	.Ltmp1057 # Offset: 3085
    00000c0f: 	nop # Size: 1
.Ltmp1060:
    00000c10: 	movq	%rbp, %rax
    00000c13: 	pxor	%xmm0, %xmm0
    00000c17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1058:
    00000c20: 	paddd	(%rax), %xmm0
    00000c24: 	addq	$0x10, %rax
    00000c28: 	cmpq	%rbx, %rax
    00000c2b: 	jne	.Ltmp1058 # Offset: 3115
    00000c2d: 	movdqa	%xmm0, %xmm1
    00000c31: 	cvttsd2si	init_value(%rip), %edx
    00000c39: 	psrldq	$0x8, %xmm1
    00000c3e: 	paddd	%xmm1, %xmm0
    00000c42: 	movdqa	%xmm0, %xmm1
    00000c46: 	psrldq	$0x4, %xmm1
    00000c4b: 	imull	$0x1f40, %edx, %edx
    00000c51: 	paddd	%xmm1, %xmm0
    00000c55: 	movd	%xmm0, %eax
    00000c59: 	cmpl	%eax, %edx
    00000c5b: 	je	.Ltmp1059 # Offset: 3163
    00000c5d: 	movl	current_test(%rip), %edx
    00000c63: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000c6a: 	movl	$0x1, %edi
    00000c6f: 	xorl	%eax, %eax
    00000c71: 	callq	__printf_chk@PLT # Offset: 3185
    00000c76: 	movl	iterations(%rip), %ecx
.Ltmp1059:
    00000c7c: 	addl	$0x1, %r13d
    00000c80: 	cmpl	%ecx, %r13d
    00000c83: 	jl	.Ltmp1060 # Offset: 3203
.Ltmp1057:
    00000c85: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c8c: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000c93: 	subq	$0x20, %rax
    00000c97: 	cmpq	%rax, %r13
    00000c9a: 	je	.Ltmp1061 # Offset: 3226
    00000ca0: 	leaq	0x10(%r13), %rdi
    00000ca4: 	movq	0x68(%rsp), %rcx
    00000ca9: 	movq	%rdi, (%r13)
    00000cad: 	movq	0x60(%rsp), %rsi
    00000cb2: 	movq	%rcx, 0x8(%rsp)
    00000cb7: 	movq	%rsi, %rax
    00000cba: 	movq	%rsi, 0x18(%rsp)
    00000cbf: 	addq	%rcx, %rax
    00000cc2: 	je	.Ltmp1062 # Offset: 3266
    00000cc4: 	testq	%rsi, %rsi
    00000cc7: 	je	.Ltmp1063 # Offset: 3271
.Ltmp1062:
    00000ccd: 	movq	0x8(%rsp), %rax
    00000cd2: 	movq	%rax, 0x20(%rsp)
    00000cd7: 	cmpq	$0xf, %rax
    00000cdb: 	ja	.Ltmp1064 # Offset: 3291
    00000ce1: 	cmpq	$0x1, 0x8(%rsp)
    00000ce7: 	jne	.Ltmp1065 # Offset: 3303
    00000ced: 	movq	0x18(%rsp), %rax
    00000cf2: 	movzbl	(%rax), %eax
    00000cf5: 	movb	%al, 0x10(%r13)
.Ltmp1173:
    00000cf9: 	movq	0x8(%rsp), %rax
    00000cfe: 	movq	%rax, 0x8(%r13)
    00000d02: 	movb	$0x0, (%rdi,%rax)
    00000d06: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d0d: 	addq	$0x20, %rax
    00000d11: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1157:
    00000d18: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d1f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d26: 	je	.Ltmp1066 # Offset: 3366
.Ltmp1156:
    00000d2c: 	movq	-0x20(%rax), %r13
    00000d30: 	callq	clock@PLT # Offset: 3376
    00000d35: 	pxor	%xmm0, %xmm0
    00000d39: 	movq	%rax, end_time(%rip)
    00000d40: 	movq	%r13, %rdi
    00000d43: 	subq	start_time(%rip), %rax
    00000d4a: 	cvtsi2sd	%rax, %xmm0
    00000d4f: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d57: 	callq	_Z13record_resultdPKc # Offset: 3415
    00000d5c: 	movq	0x60(%rsp), %rdi
    00000d61: 	cmpq	%r14, %rdi
    00000d64: 	je	.Ltmp1067 # Offset: 3428
    00000d66: 	movq	0x70(%rsp), %rax
    00000d6b: 	leaq	0x1(%rax), %rsi
    00000d6f: 	callq	_ZdlPvm@PLT # Offset: 3439
.Ltmp1067:
    00000d74: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000d7b: 	movq	%r15, %rsi
    00000d7e: 	movq	%r12, %rdi
    00000d81: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3457
    00000d86: 	callq	clock@PLT # Offset: 3462
    00000d8b: 	movl	iterations(%rip), %ecx
    00000d91: 	xorl	%r13d, %r13d
    00000d94: 	movq	%rax, start_time(%rip)
    00000d9b: 	testl	%ecx, %ecx
    00000d9d: 	jle	.Ltmp1068 # Offset: 3485
    00000d9f: 	nop # Size: 1
.Ltmp1071:
    00000da0: 	movq	%rbp, %rax
    00000da3: 	pxor	%xmm0, %xmm0
    00000da7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1069:
    00000db0: 	paddd	(%rax), %xmm0
    00000db4: 	addq	$0x10, %rax
    00000db8: 	cmpq	%rbx, %rax
    00000dbb: 	jne	.Ltmp1069 # Offset: 3515
    00000dbd: 	movdqa	%xmm0, %xmm1
    00000dc1: 	cvttsd2si	init_value(%rip), %edx
    00000dc9: 	psrldq	$0x8, %xmm1
    00000dce: 	paddd	%xmm1, %xmm0
    00000dd2: 	movdqa	%xmm0, %xmm1
    00000dd6: 	psrldq	$0x4, %xmm1
    00000ddb: 	imull	$0x1f40, %edx, %edx
    00000de1: 	paddd	%xmm1, %xmm0
    00000de5: 	movd	%xmm0, %eax
    00000de9: 	cmpl	%eax, %edx
    00000deb: 	je	.Ltmp1070 # Offset: 3563
    00000ded: 	movl	current_test(%rip), %edx
    00000df3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000dfa: 	movl	$0x1, %edi
    00000dff: 	xorl	%eax, %eax
    00000e01: 	callq	__printf_chk@PLT # Offset: 3585
    00000e06: 	movl	iterations(%rip), %ecx
.Ltmp1070:
    00000e0c: 	addl	$0x1, %r13d
    00000e10: 	cmpl	%ecx, %r13d
    00000e13: 	jl	.Ltmp1071 # Offset: 3603
.Ltmp1068:
    00000e15: 	movq	%r12, %rdi
    00000e18: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3608
    00000e1d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e24: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e2b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e32: 	je	.Ltmp1072 # Offset: 3634
.Ltmp1148:
    00000e38: 	movq	-0x20(%rax), %r13
    00000e3c: 	callq	clock@PLT # Offset: 3644
    00000e41: 	pxor	%xmm0, %xmm0
    00000e45: 	movq	%rax, end_time(%rip)
    00000e4c: 	movq	%r13, %rdi
    00000e4f: 	subq	start_time(%rip), %rax
    00000e56: 	cvtsi2sd	%rax, %xmm0
    00000e5b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000e63: 	callq	_Z13record_resultdPKc # Offset: 3683
    00000e68: 	movq	0x60(%rsp), %rdi
    00000e6d: 	cmpq	%r14, %rdi
    00000e70: 	je	.Ltmp1073 # Offset: 3696
    00000e72: 	movq	0x70(%rsp), %rax
    00000e77: 	leaq	0x1(%rax), %rsi
    00000e7b: 	callq	_ZdlPvm@PLT # Offset: 3707
.Ltmp1073:
    00000e80: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000e87: 	movq	%r15, %rsi
    00000e8a: 	movq	%r12, %rdi
    00000e8d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3725
    00000e92: 	callq	clock@PLT # Offset: 3730
    00000e97: 	movl	iterations(%rip), %ecx
    00000e9d: 	xorl	%r13d, %r13d
    00000ea0: 	movq	%rax, start_time(%rip)
    00000ea7: 	testl	%ecx, %ecx
    00000ea9: 	jle	.Ltmp1074 # Offset: 3753
    00000eab: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1077:
    00000eb0: 	movq	%rbp, %rax
    00000eb3: 	pxor	%xmm0, %xmm0
    00000eb7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1075:
    00000ec0: 	paddd	(%rax), %xmm0
    00000ec4: 	addq	$0x10, %rax
    00000ec8: 	cmpq	%rax, %rbx
    00000ecb: 	jne	.Ltmp1075 # Offset: 3787
    00000ecd: 	movdqa	%xmm0, %xmm1
    00000ed1: 	cvttsd2si	init_value(%rip), %edx
    00000ed9: 	psrldq	$0x8, %xmm1
    00000ede: 	paddd	%xmm1, %xmm0
    00000ee2: 	movdqa	%xmm0, %xmm1
    00000ee6: 	psrldq	$0x4, %xmm1
    00000eeb: 	imull	$0x1f40, %edx, %edx
    00000ef1: 	paddd	%xmm1, %xmm0
    00000ef5: 	movd	%xmm0, %eax
    00000ef9: 	cmpl	%eax, %edx
    00000efb: 	je	.Ltmp1076 # Offset: 3835
    00000efd: 	movl	current_test(%rip), %edx
    00000f03: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000f0a: 	movl	$0x1, %edi
    00000f0f: 	xorl	%eax, %eax
    00000f11: 	callq	__printf_chk@PLT # Offset: 3857
    00000f16: 	movl	iterations(%rip), %ecx
.Ltmp1076:
    00000f1c: 	addl	$0x1, %r13d
    00000f20: 	cmpl	%ecx, %r13d
    00000f23: 	jl	.Ltmp1077 # Offset: 3875
.Ltmp1074:
    00000f25: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000f2c: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000f33: 	subq	$0x20, %rax
    00000f37: 	cmpq	%rax, %r13
    00000f3a: 	je	.Ltmp1078 # Offset: 3898
    00000f40: 	leaq	0x10(%r13), %rdi
    00000f44: 	movq	0x68(%rsp), %rcx
    00000f49: 	movq	%rdi, (%r13)
    00000f4d: 	movq	0x60(%rsp), %rsi
    00000f52: 	movq	%rcx, 0x8(%rsp)
    00000f57: 	movq	%rsi, %rax
    00000f5a: 	movq	%rsi, 0x18(%rsp)
    00000f5f: 	addq	%rcx, %rax
    00000f62: 	je	.Ltmp1079 # Offset: 3938
    00000f64: 	testq	%rsi, %rsi
    00000f67: 	je	.Ltmp1080 # Offset: 3943
.Ltmp1079:
    00000f6d: 	movq	0x8(%rsp), %rax
    00000f72: 	movq	%rax, 0x20(%rsp)
    00000f77: 	cmpq	$0xf, %rax
    00000f7b: 	ja	.Ltmp1081 # Offset: 3963
    00000f81: 	cmpq	$0x1, 0x8(%rsp)
    00000f87: 	jne	.Ltmp1082 # Offset: 3975
    00000f8d: 	movq	0x18(%rsp), %rax
    00000f92: 	movzbl	(%rax), %eax
    00000f95: 	movb	%al, 0x10(%r13)
.Ltmp1170:
    00000f99: 	movq	0x8(%rsp), %rax
    00000f9e: 	movq	%rax, 0x8(%r13)
    00000fa2: 	movb	$0x0, (%rdi,%rax)
    00000fa6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fad: 	addq	$0x20, %rax
    00000fb1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1147:
    00000fb8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000fbf: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fc6: 	je	.Ltmp1083 # Offset: 4038
.Ltmp1146:
    00000fcc: 	movq	-0x20(%rax), %r13
    00000fd0: 	callq	clock@PLT # Offset: 4048
    00000fd5: 	pxor	%xmm0, %xmm0
    00000fd9: 	movq	%rax, end_time(%rip)
    00000fe0: 	movq	%r13, %rdi
    00000fe3: 	subq	start_time(%rip), %rax
    00000fea: 	cvtsi2sd	%rax, %xmm0
    00000fef: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ff7: 	callq	_Z13record_resultdPKc # Offset: 4087
    00000ffc: 	movq	0x60(%rsp), %rdi
    00001001: 	cmpq	%r14, %rdi
    00001004: 	je	.Ltmp1084 # Offset: 4100
    00001006: 	movq	0x70(%rsp), %rax
    0000100b: 	leaq	0x1(%rax), %rsi
    0000100f: 	callq	_ZdlPvm@PLT # Offset: 4111
.Ltmp1084:
    00001014: 	leaq	DATAat0x1a27b(%rip), %rdx
    0000101b: 	movq	%r15, %rsi
    0000101e: 	movq	%r12, %rdi
    00001021: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4129
    00001026: 	callq	clock@PLT # Offset: 4134
    0000102b: 	movl	iterations(%rip), %ecx
    00001031: 	xorl	%r13d, %r13d
    00001034: 	movq	%rax, start_time(%rip)
    0000103b: 	testl	%ecx, %ecx
    0000103d: 	jle	.Ltmp1085 # Offset: 4157
    0000103f: 	nop # Size: 1
.Ltmp1088:
    00001040: 	movq	%rbp, %rax
    00001043: 	pxor	%xmm0, %xmm0
    00001047: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1086:
    00001050: 	paddd	(%rax), %xmm0
    00001054: 	addq	$0x10, %rax
    00001058: 	cmpq	%rbx, %rax
    0000105b: 	jne	.Ltmp1086 # Offset: 4187
    0000105d: 	movdqa	%xmm0, %xmm1
    00001061: 	cvttsd2si	init_value(%rip), %edx
    00001069: 	psrldq	$0x8, %xmm1
    0000106e: 	paddd	%xmm1, %xmm0
    00001072: 	movdqa	%xmm0, %xmm1
    00001076: 	psrldq	$0x4, %xmm1
    0000107b: 	imull	$0x1f40, %edx, %edx
    00001081: 	paddd	%xmm1, %xmm0
    00001085: 	movd	%xmm0, %eax
    00001089: 	cmpl	%eax, %edx
    0000108b: 	je	.Ltmp1087 # Offset: 4235
    0000108d: 	movl	current_test(%rip), %edx
    00001093: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000109a: 	movl	$0x1, %edi
    0000109f: 	xorl	%eax, %eax
    000010a1: 	callq	__printf_chk@PLT # Offset: 4257
    000010a6: 	movl	iterations(%rip), %ecx
.Ltmp1087:
    000010ac: 	addl	$0x1, %r13d
    000010b0: 	cmpl	%ecx, %r13d
    000010b3: 	jl	.Ltmp1088 # Offset: 4275
.Ltmp1085:
    000010b5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010bc: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000010c3: 	subq	$0x20, %rax
    000010c7: 	cmpq	%rax, %r13
    000010ca: 	je	.Ltmp1089 # Offset: 4298
    000010d0: 	leaq	0x10(%r13), %rdi
    000010d4: 	movq	0x68(%rsp), %rcx
    000010d9: 	movq	%rdi, (%r13)
    000010dd: 	movq	0x60(%rsp), %rsi
    000010e2: 	movq	%rcx, 0x8(%rsp)
    000010e7: 	movq	%rsi, %rax
    000010ea: 	movq	%rsi, 0x18(%rsp)
    000010ef: 	addq	%rcx, %rax
    000010f2: 	je	.Ltmp1090 # Offset: 4338
    000010f4: 	testq	%rsi, %rsi
    000010f7: 	je	.Ltmp1091 # Offset: 4343
.Ltmp1090:
    000010fd: 	movq	0x8(%rsp), %rax
    00001102: 	movq	%rax, 0x20(%rsp)
    00001107: 	cmpq	$0xf, %rax
    0000110b: 	ja	.Ltmp1092 # Offset: 4363
    00001111: 	cmpq	$0x1, 0x8(%rsp)
    00001117: 	jne	.Ltmp1093 # Offset: 4375
    0000111d: 	movq	0x18(%rsp), %rax
    00001122: 	movzbl	(%rax), %eax
    00001125: 	movb	%al, 0x10(%r13)
.Ltmp1179:
    00001129: 	movq	0x8(%rsp), %rax
    0000112e: 	movq	%rax, 0x8(%r13)
    00001132: 	movb	$0x0, (%rdi,%rax)
    00001136: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000113d: 	addq	$0x20, %rax
    00001141: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1145:
    00001148: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000114f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001156: 	je	.Ltmp1094 # Offset: 4438
.Ltmp1144:
    0000115c: 	movq	-0x20(%rax), %r13
    00001160: 	callq	clock@PLT # Offset: 4448
    00001165: 	pxor	%xmm0, %xmm0
    00001169: 	movq	%rax, end_time(%rip)
    00001170: 	movq	%r13, %rdi
    00001173: 	subq	start_time(%rip), %rax
    0000117a: 	cvtsi2sd	%rax, %xmm0
    0000117f: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001187: 	callq	_Z13record_resultdPKc # Offset: 4487
    0000118c: 	movq	0x60(%rsp), %rdi
    00001191: 	cmpq	%r14, %rdi
    00001194: 	je	.Ltmp1095 # Offset: 4500
    00001196: 	movq	0x70(%rsp), %rax
    0000119b: 	leaq	0x1(%rax), %rsi
    0000119f: 	callq	_ZdlPvm@PLT # Offset: 4511
.Ltmp1095:
    000011a4: 	leaq	DATAat0x1a28b(%rip), %rdx
    000011ab: 	movq	%r15, %rsi
    000011ae: 	movq	%r12, %rdi
    000011b1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4529
    000011b6: 	callq	clock@PLT # Offset: 4534
    000011bb: 	movl	iterations(%rip), %ecx
    000011c1: 	xorl	%r13d, %r13d
    000011c4: 	movq	%rax, start_time(%rip)
    000011cb: 	testl	%ecx, %ecx
    000011cd: 	jle	.Ltmp1096 # Offset: 4557
    000011cf: 	nop # Size: 1
.Ltmp1099:
    000011d0: 	movq	%rbp, %rax
    000011d3: 	pxor	%xmm0, %xmm0
    000011d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1097:
    000011e0: 	paddd	(%rax), %xmm0
    000011e4: 	addq	$0x10, %rax
    000011e8: 	cmpq	%rax, %rbx
    000011eb: 	jne	.Ltmp1097 # Offset: 4587
    000011ed: 	movdqa	%xmm0, %xmm1
    000011f1: 	cvttsd2si	init_value(%rip), %edx
    000011f9: 	psrldq	$0x8, %xmm1
    000011fe: 	paddd	%xmm1, %xmm0
    00001202: 	movdqa	%xmm0, %xmm1
    00001206: 	psrldq	$0x4, %xmm1
    0000120b: 	imull	$0x1f40, %edx, %edx
    00001211: 	paddd	%xmm1, %xmm0
    00001215: 	movd	%xmm0, %eax
    00001219: 	cmpl	%eax, %edx
    0000121b: 	je	.Ltmp1098 # Offset: 4635
    0000121d: 	movl	current_test(%rip), %edx
    00001223: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000122a: 	movl	$0x1, %edi
    0000122f: 	xorl	%eax, %eax
    00001231: 	callq	__printf_chk@PLT # Offset: 4657
    00001236: 	movl	iterations(%rip), %ecx
.Ltmp1098:
    0000123c: 	addl	$0x1, %r13d
    00001240: 	cmpl	%ecx, %r13d
    00001243: 	jl	.Ltmp1099 # Offset: 4675
.Ltmp1096:
    00001245: 	movq	%r12, %rdi
    00001248: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4680
    0000124d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001254: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000125b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001262: 	je	.Ltmp1100 # Offset: 4706
.Ltmp1143:
    00001268: 	movq	-0x20(%rax), %r13
    0000126c: 	callq	clock@PLT # Offset: 4716
    00001271: 	pxor	%xmm0, %xmm0
    00001275: 	movq	%rax, end_time(%rip)
    0000127c: 	movq	%r13, %rdi
    0000127f: 	subq	start_time(%rip), %rax
    00001286: 	cvtsi2sd	%rax, %xmm0
    0000128b: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001293: 	callq	_Z13record_resultdPKc # Offset: 4755
    00001298: 	movq	0x60(%rsp), %rdi
    0000129d: 	cmpq	%r14, %rdi
    000012a0: 	je	.Ltmp1101 # Offset: 4768
    000012a2: 	movq	0x70(%rsp), %rax
    000012a7: 	leaq	0x1(%rax), %rsi
    000012ab: 	callq	_ZdlPvm@PLT # Offset: 4779
.Ltmp1101:
    000012b0: 	leaq	DATAat0x1a29b(%rip), %rdx
    000012b7: 	movq	%r15, %rsi
    000012ba: 	movq	%r12, %rdi
    000012bd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4797
    000012c2: 	callq	clock@PLT # Offset: 4802
    000012c7: 	movl	iterations(%rip), %ecx
    000012cd: 	xorl	%r13d, %r13d
    000012d0: 	movq	%rax, start_time(%rip)
    000012d7: 	testl	%ecx, %ecx
    000012d9: 	jle	.Ltmp1102 # Offset: 4825
    000012db: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1105:
    000012e0: 	movq	%rbp, %rax
    000012e3: 	pxor	%xmm0, %xmm0
    000012e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1103:
    000012f0: 	paddd	(%rax), %xmm0
    000012f4: 	addq	$0x10, %rax
    000012f8: 	cmpq	%rbx, %rax
    000012fb: 	jne	.Ltmp1103 # Offset: 4859
    000012fd: 	movdqa	%xmm0, %xmm1
    00001301: 	cvttsd2si	init_value(%rip), %edx
    00001309: 	psrldq	$0x8, %xmm1
    0000130e: 	paddd	%xmm1, %xmm0
    00001312: 	movdqa	%xmm0, %xmm1
    00001316: 	psrldq	$0x4, %xmm1
    0000131b: 	imull	$0x1f40, %edx, %edx
    00001321: 	paddd	%xmm1, %xmm0
    00001325: 	movd	%xmm0, %eax
    00001329: 	cmpl	%eax, %edx
    0000132b: 	je	.Ltmp1104 # Offset: 4907
    0000132d: 	movl	current_test(%rip), %edx
    00001333: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000133a: 	movl	$0x1, %edi
    0000133f: 	xorl	%eax, %eax
    00001341: 	callq	__printf_chk@PLT # Offset: 4929
    00001346: 	movl	iterations(%rip), %ecx
.Ltmp1104:
    0000134c: 	addl	$0x1, %r13d
    00001350: 	cmpl	%ecx, %r13d
    00001353: 	jl	.Ltmp1105 # Offset: 4947
.Ltmp1102:
    00001355: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000135c: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001363: 	subq	$0x20, %rax
    00001367: 	cmpq	%rax, %r13
    0000136a: 	je	.Ltmp1106 # Offset: 4970
    00001370: 	leaq	0x10(%r13), %rdi
    00001374: 	movq	0x68(%rsp), %rcx
    00001379: 	movq	%rdi, (%r13)
    0000137d: 	movq	0x60(%rsp), %rsi
    00001382: 	movq	%rcx, 0x8(%rsp)
    00001387: 	movq	%rsi, %rax
    0000138a: 	movq	%rsi, 0x18(%rsp)
    0000138f: 	addq	%rcx, %rax
    00001392: 	je	.Ltmp1107 # Offset: 5010
    00001394: 	testq	%rsi, %rsi
    00001397: 	je	.Ltmp1108 # Offset: 5015
.Ltmp1107:
    0000139d: 	movq	0x8(%rsp), %rax
    000013a2: 	movq	%rax, 0x20(%rsp)
    000013a7: 	cmpq	$0xf, %rax
    000013ab: 	ja	.Ltmp1109 # Offset: 5035
    000013b1: 	cmpq	$0x1, 0x8(%rsp)
    000013b7: 	jne	.Ltmp1110 # Offset: 5047
    000013bd: 	movq	0x18(%rsp), %rax
    000013c2: 	movzbl	(%rax), %eax
    000013c5: 	movb	%al, 0x10(%r13)
.Ltmp1169:
    000013c9: 	movq	0x8(%rsp), %rax
    000013ce: 	movq	%rax, 0x8(%r13)
    000013d2: 	movb	$0x0, (%rdi,%rax)
    000013d6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013dd: 	addq	$0x20, %rax
    000013e1: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1142:
    000013e8: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013ef: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013f6: 	je	.Ltmp1111 # Offset: 5110
.Ltmp1141:
    000013fc: 	movq	-0x20(%rax), %r13
    00001400: 	callq	clock@PLT # Offset: 5120
    00001405: 	pxor	%xmm0, %xmm0
    00001409: 	movq	%rax, end_time(%rip)
    00001410: 	movq	%r13, %rdi
    00001413: 	subq	start_time(%rip), %rax
    0000141a: 	cvtsi2sd	%rax, %xmm0
    0000141f: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001427: 	callq	_Z13record_resultdPKc # Offset: 5159
    0000142c: 	movq	0x60(%rsp), %rdi
    00001431: 	cmpq	%r14, %rdi
    00001434: 	je	.Ltmp1112 # Offset: 5172
    00001436: 	movq	0x70(%rsp), %rax
    0000143b: 	leaq	0x1(%rax), %rsi
    0000143f: 	callq	_ZdlPvm@PLT # Offset: 5183
.Ltmp1112:
    00001444: 	leaq	DATAat0x1a2af(%rip), %rdx
    0000144b: 	movq	%r15, %rsi
    0000144e: 	movq	%r12, %rdi
    00001451: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5201
    00001456: 	callq	clock@PLT # Offset: 5206
    0000145b: 	movl	iterations(%rip), %ecx
    00001461: 	xorl	%r13d, %r13d
    00001464: 	movq	%rax, start_time(%rip)
    0000146b: 	testl	%ecx, %ecx
    0000146d: 	jle	.Ltmp1113 # Offset: 5229
    0000146f: 	nop # Size: 1
.Ltmp1116:
    00001470: 	movq	%rbp, %rax
    00001473: 	pxor	%xmm0, %xmm0
    00001477: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1114:
    00001480: 	paddd	(%rax), %xmm0
    00001484: 	addq	$0x10, %rax
    00001488: 	cmpq	%rax, %rbx
    0000148b: 	jne	.Ltmp1114 # Offset: 5259
    0000148d: 	movdqa	%xmm0, %xmm1
    00001491: 	cvttsd2si	init_value(%rip), %edx
    00001499: 	psrldq	$0x8, %xmm1
    0000149e: 	paddd	%xmm1, %xmm0
    000014a2: 	movdqa	%xmm0, %xmm1
    000014a6: 	psrldq	$0x4, %xmm1
    000014ab: 	imull	$0x1f40, %edx, %edx
    000014b1: 	paddd	%xmm1, %xmm0
    000014b5: 	movd	%xmm0, %eax
    000014b9: 	cmpl	%eax, %edx
    000014bb: 	je	.Ltmp1115 # Offset: 5307
    000014bd: 	movl	current_test(%rip), %edx
    000014c3: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000014ca: 	movl	$0x1, %edi
    000014cf: 	xorl	%eax, %eax
    000014d1: 	callq	__printf_chk@PLT # Offset: 5329
    000014d6: 	movl	iterations(%rip), %ecx
.Ltmp1115:
    000014dc: 	addl	$0x1, %r13d
    000014e0: 	cmpl	%ecx, %r13d
    000014e3: 	jl	.Ltmp1116 # Offset: 5347
.Ltmp1113:
    000014e5: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000014ec: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000014f3: 	subq	$0x20, %rax
    000014f7: 	cmpq	%rax, %r13
    000014fa: 	je	.Ltmp1117 # Offset: 5370
    00001500: 	leaq	0x10(%r13), %rdi
    00001504: 	movq	0x68(%rsp), %rcx
    00001509: 	movq	%rdi, (%r13)
    0000150d: 	movq	0x60(%rsp), %rsi
    00001512: 	movq	%rcx, 0x8(%rsp)
    00001517: 	movq	%rsi, %rax
    0000151a: 	movq	%rsi, 0x18(%rsp)
    0000151f: 	addq	%rcx, %rax
    00001522: 	je	.Ltmp1118 # Offset: 5410
    00001524: 	testq	%rsi, %rsi
    00001527: 	je	.Ltmp1119 # Offset: 5415
.Ltmp1118:
    0000152d: 	movq	0x8(%rsp), %rax
    00001532: 	movq	%rax, 0x20(%rsp)
    00001537: 	cmpq	$0xf, %rax
    0000153b: 	ja	.Ltmp1120 # Offset: 5435
    00001541: 	cmpq	$0x1, 0x8(%rsp)
    00001547: 	jne	.Ltmp1121 # Offset: 5447
    0000154d: 	movq	0x18(%rsp), %rax
    00001552: 	movzbl	(%rax), %eax
    00001555: 	movb	%al, 0x10(%r13)
.Ltmp1177:
    00001559: 	movq	0x8(%rsp), %rax
    0000155e: 	movq	%rax, 0x8(%r13)
    00001562: 	movb	$0x0, (%rdi,%rax)
    00001566: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000156d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001574: 	addq	$0x20, %rax
    00001578: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000157f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001586: 	je	.Ltmp1122 # Offset: 5510
.Ltmp1140:
    0000158c: 	movq	-0x20(%rax), %r13
    00001590: 	callq	clock@PLT # Offset: 5520
    00001595: 	pxor	%xmm0, %xmm0
    00001599: 	movq	%rax, end_time(%rip)
    000015a0: 	movq	%r13, %rdi
    000015a3: 	subq	start_time(%rip), %rax
    000015aa: 	cvtsi2sd	%rax, %xmm0
    000015af: 	divsd	DATAat0x1a318(%rip), %xmm0
    000015b7: 	callq	_Z13record_resultdPKc # Offset: 5559
    000015bc: 	movq	0x60(%rsp), %rdi
    000015c1: 	cmpq	%r14, %rdi
    000015c4: 	je	.Ltmp1123 # Offset: 5572
    000015c6: 	movq	0x70(%rsp), %rax
    000015cb: 	leaq	0x1(%rax), %rsi
    000015cf: 	callq	_ZdlPvm@PLT # Offset: 5583
.Ltmp1123:
    000015d4: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000015db: 	movq	%r15, %rsi
    000015de: 	movq	%r12, %rdi
    000015e1: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5601
    000015e6: 	callq	clock@PLT # Offset: 5606
    000015eb: 	movl	iterations(%rip), %ecx
    000015f1: 	xorl	%r13d, %r13d
    000015f4: 	movq	%rax, start_time(%rip)
    000015fb: 	testl	%ecx, %ecx
    000015fd: 	jle	.Ltmp1124 # Offset: 5629
    000015ff: 	nop # Size: 1
.Ltmp1127:
    00001600: 	movq	%rbp, %rax
    00001603: 	pxor	%xmm0, %xmm0
    00001607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1125:
    00001610: 	paddd	(%rax), %xmm0
    00001614: 	addq	$0x10, %rax
    00001618: 	cmpq	%rbx, %rax
    0000161b: 	jne	.Ltmp1125 # Offset: 5659
    0000161d: 	movdqa	%xmm0, %xmm1
    00001621: 	cvttsd2si	init_value(%rip), %edx
    00001629: 	psrldq	$0x8, %xmm1
    0000162e: 	paddd	%xmm1, %xmm0
    00001632: 	movdqa	%xmm0, %xmm1
    00001636: 	psrldq	$0x4, %xmm1
    0000163b: 	imull	$0x1f40, %edx, %edx
    00001641: 	paddd	%xmm1, %xmm0
    00001645: 	movd	%xmm0, %eax
    00001649: 	cmpl	%eax, %edx
    0000164b: 	je	.Ltmp1126 # Offset: 5707
    0000164d: 	movl	current_test(%rip), %edx
    00001653: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000165a: 	movl	$0x1, %edi
    0000165f: 	xorl	%eax, %eax
    00001661: 	callq	__printf_chk@PLT # Offset: 5729
    00001666: 	movl	iterations(%rip), %ecx
.Ltmp1126:
    0000166c: 	addl	$0x1, %r13d
    00001670: 	cmpl	%ecx, %r13d
    00001673: 	jl	.Ltmp1127 # Offset: 5747
.Ltmp1124:
    00001675: 	movq	%r12, %rdi
    00001678: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5752
    0000167d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001684: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000168b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001692: 	je	.Ltmp1128 # Offset: 5778
.Ltmp1151:
    00001698: 	movq	-0x20(%rax), %r13
    0000169c: 	callq	clock@PLT # Offset: 5788
    000016a1: 	pxor	%xmm0, %xmm0
    000016a5: 	movq	%rax, end_time(%rip)
    000016ac: 	movq	%r13, %rdi
    000016af: 	subq	start_time(%rip), %rax
    000016b6: 	cvtsi2sd	%rax, %xmm0
    000016bb: 	divsd	DATAat0x1a318(%rip), %xmm0
    000016c3: 	callq	_Z13record_resultdPKc # Offset: 5827
    000016c8: 	movq	0x60(%rsp), %rdi
    000016cd: 	cmpq	%r14, %rdi
    000016d0: 	je	.Ltmp1129 # Offset: 5840
    000016d2: 	movq	0x70(%rsp), %rax
    000016d7: 	leaq	0x1(%rax), %rsi
    000016db: 	callq	_ZdlPvm@PLT # Offset: 5851
.Ltmp1129:
    000016e0: 	leaq	DATAat0x1a2d9(%rip), %rdx
    000016e7: 	movq	%r15, %rsi
    000016ea: 	movq	%r12, %rdi
    000016ed: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5869
    000016f2: 	callq	clock@PLT # Offset: 5874
    000016f7: 	movl	iterations(%rip), %ecx
    000016fd: 	xorl	%r13d, %r13d
    00001700: 	movq	%rax, start_time(%rip)
    00001707: 	testl	%ecx, %ecx
    00001709: 	jle	.Ltmp1130 # Offset: 5897
    0000170b: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1133:
    00001710: 	movq	%rbp, %rax
    00001713: 	pxor	%xmm0, %xmm0
    00001717: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1131:
    00001720: 	paddd	(%rax), %xmm0
    00001724: 	addq	$0x10, %rax
    00001728: 	cmpq	%rbx, %rax
    0000172b: 	jne	.Ltmp1131 # Offset: 5931
    0000172d: 	movdqa	%xmm0, %xmm1
    00001731: 	cvttsd2si	init_value(%rip), %edx
    00001739: 	psrldq	$0x8, %xmm1
    0000173e: 	paddd	%xmm1, %xmm0
    00001742: 	movdqa	%xmm0, %xmm1
    00001746: 	psrldq	$0x4, %xmm1
    0000174b: 	imull	$0x1f40, %edx, %edx
    00001751: 	paddd	%xmm1, %xmm0
    00001755: 	movd	%xmm0, %eax
    00001759: 	cmpl	%eax, %edx
    0000175b: 	je	.Ltmp1132 # Offset: 5979
    0000175d: 	movl	current_test(%rip), %edx
    00001763: 	leaq	DATAat0x1a1c8(%rip), %rsi
    0000176a: 	movl	$0x1, %edi
    0000176f: 	xorl	%eax, %eax
    00001771: 	callq	__printf_chk@PLT # Offset: 6001
    00001776: 	movl	iterations(%rip), %ecx
.Ltmp1132:
    0000177c: 	addl	$0x1, %r13d
    00001780: 	cmpl	%ecx, %r13d
    00001783: 	jl	.Ltmp1133 # Offset: 6019
.Ltmp1130:
    00001785: 	movq	%r12, %rdi
    00001788: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6024
    0000178d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001794: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000179b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017a2: 	je	.Ltmp1134 # Offset: 6050
.Ltmp1150:
    000017a8: 	movq	-0x20(%rax), %rbp
    000017ac: 	callq	clock@PLT # Offset: 6060
    000017b1: 	pxor	%xmm0, %xmm0
    000017b5: 	movq	%rax, end_time(%rip)
    000017bc: 	movq	%rbp, %rdi
    000017bf: 	subq	start_time(%rip), %rax
    000017c6: 	cvtsi2sd	%rax, %xmm0
    000017cb: 	divsd	DATAat0x1a318(%rip), %xmm0
    000017d3: 	callq	_Z13record_resultdPKc # Offset: 6099
    000017d8: 	movq	0x60(%rsp), %rdi
    000017dd: 	cmpq	%r14, %rdi
    000017e0: 	je	.Ltmp1135 # Offset: 6112
    000017e2: 	movq	0x70(%rsp), %rax
    000017e7: 	leaq	0x1(%rax), %rsi
    000017eb: 	callq	_ZdlPvm@PLT # Offset: 6123
.Ltmp1135:
    000017f0: 	leaq	DATAat0x1a2ee(%rip), %rdx
    000017f7: 	movq	%r15, %rsi
    000017fa: 	movq	%r12, %rdi
    000017fd: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6141
    00001802: 	movl	iterations(%rip), %edx
    00001808: 	movq	0x60(%rsp), %rdi
    0000180d: 	xorl	%r8d, %r8d
    00001810: 	xorl	%ecx, %ecx
    00001812: 	movl	$0x1f40, %esi
    00001817: 	callq	_Z9summarizePKciiii # Offset: 6167
    0000181c: 	movq	0x60(%rsp), %rdi
    00001821: 	cmpq	%r14, %rdi
    00001824: 	je	.Ltmp1136 # Offset: 6180
    00001826: 	movq	0x70(%rsp), %rax
    0000182b: 	leaq	0x1(%rax), %rsi
    0000182f: 	callq	_ZdlPvm@PLT # Offset: 6191
.Ltmp1136:
    00001834: 	movq	0x40(%rsp), %rdi
    00001839: 	cmpq	0x10(%rsp), %rdi
    0000183e: 	je	.Ltmp1137 # Offset: 6206
    00001840: 	movq	0x50(%rsp), %rax
    00001845: 	leaq	0x1(%rax), %rsi
    00001849: 	callq	_ZdlPvm@PLT # Offset: 6217
.Ltmp1137:
    0000184e: 	movq	0x7d88(%rsp), %rax
    00001856: 	subq	%fs:0x28, %rax
    0000185f: 	jne	.Ltmp1138 # Offset: 6239
    00001865: 	addq	$0x7d98, %rsp
    0000186c: 	popq	%rbx
    0000186d: 	popq	%rbp
    0000186e: 	popq	%r12
    00001870: 	popq	%r13
    00001872: 	popq	%r14
    00001874: 	popq	%r15
    00001876: 	retq # Offset: 6262
.Ltmp991:
    00001877: 	movq	(%rsp), %rsi
    0000187b: 	xorl	%edx, %edx
    0000187d: 	movq	%r13, %rdi
    00001880: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6272
    00001885: 	movq	%rax, (%r13)
    00001889: 	movq	%rax, %rdi
    0000188c: 	movq	0x20(%rsp), %rax
    00001891: 	movq	%rax, 0x10(%r13)
.Ltmp1172:
    00001895: 	movq	0x8(%rsp), %rsi
    0000189a: 	movq	%r14, %rdx
    0000189d: 	callq	memcpy@PLT # Offset: 6301
    000018a2: 	movq	0x20(%rsp), %r14
    000018a7: 	movq	(%r13), %rdi
    000018ab: 	jmp	.Ltmp1139 # Offset: 6315
.Ltmp1117:
    000018b0: 	movq	%r12, %rsi
    000018b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6330
    000018bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018c6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000018cd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018d4: 	jne	.Ltmp1140 # Offset: 6356
.Ltmp1122:
    000018da: 	movq	-0x8(%rdx), %rax
    000018de: 	addq	$0x200, %rax
    000018e4: 	jmp	.Ltmp1140 # Offset: 6372
.Ltmp1111:
    000018e9: 	movq	-0x8(%rdx), %rax
    000018ed: 	addq	$0x200, %rax
    000018f3: 	jmp	.Ltmp1141 # Offset: 6387
.Ltmp1106:
    000018f8: 	movq	%r12, %rsi
    000018fb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001902: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6402
    00001907: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000190e: 	jmp	.Ltmp1142 # Offset: 6414
.Ltmp1100:
    00001913: 	movq	-0x8(%rdx), %rax
    00001917: 	addq	$0x200, %rax
    0000191d: 	jmp	.Ltmp1143 # Offset: 6429
.Ltmp1094:
    00001922: 	movq	-0x8(%rdx), %rax
    00001926: 	addq	$0x200, %rax
    0000192c: 	jmp	.Ltmp1144 # Offset: 6444
.Ltmp1089:
    00001931: 	movq	%r12, %rsi
    00001934: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000193b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6459
    00001940: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001947: 	jmp	.Ltmp1145 # Offset: 6471
.Ltmp1083:
    0000194c: 	movq	-0x8(%rdx), %rax
    00001950: 	addq	$0x200, %rax
    00001956: 	jmp	.Ltmp1146 # Offset: 6486
.Ltmp1078:
    0000195b: 	movq	%r12, %rsi
    0000195e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001965: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6501
    0000196a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001971: 	jmp	.Ltmp1147 # Offset: 6513
.Ltmp1072:
    00001976: 	movq	-0x8(%rdx), %rax
    0000197a: 	addq	$0x200, %rax
    00001980: 	jmp	.Ltmp1148 # Offset: 6528
.Ltmp988:
    00001985: 	movq	%r12, %rsi
    00001988: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000198f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6543
    00001994: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000199b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019a2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019a9: 	jne	.Ltmp1149 # Offset: 6569
.Ltmp993:
    000019af: 	movq	-0x8(%rdx), %rax
    000019b3: 	addq	$0x200, %rax
    000019b9: 	jmp	.Ltmp1149 # Offset: 6585
.Ltmp1134:
    000019be: 	movq	-0x8(%rdx), %rax
    000019c2: 	addq	$0x200, %rax
    000019c8: 	jmp	.Ltmp1150 # Offset: 6600
.Ltmp1128:
    000019cd: 	movq	-0x8(%rdx), %rax
    000019d1: 	addq	$0x200, %rax
    000019d7: 	jmp	.Ltmp1151 # Offset: 6615
.Ltmp1016:
    000019dc: 	movq	%r12, %rsi
    000019df: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019e6: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6630
    000019eb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019f2: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019f9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a00: 	jne	.Ltmp1152 # Offset: 6656
.Ltmp1021:
    00001a06: 	movq	-0x8(%rdx), %rax
    00001a0a: 	addq	$0x200, %rax
    00001a10: 	jmp	.Ltmp1152 # Offset: 6672
.Ltmp1010:
    00001a15: 	movq	-0x8(%rdx), %rax
    00001a19: 	addq	$0x200, %rax
    00001a1f: 	jmp	.Ltmp1153 # Offset: 6687
.Ltmp1005:
    00001a24: 	movq	%r12, %rsi
    00001a27: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a2e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6702
    00001a33: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a3a: 	jmp	.Ltmp1154 # Offset: 6714
.Ltmp999:
    00001a3f: 	movq	-0x8(%rdx), %rax
    00001a43: 	addq	$0x200, %rax
    00001a49: 	jmp	.Ltmp1155 # Offset: 6729
.Ltmp1066:
    00001a4e: 	movq	-0x8(%rdx), %rax
    00001a52: 	addq	$0x200, %rax
    00001a58: 	jmp	.Ltmp1156 # Offset: 6744
.Ltmp1061:
    00001a5d: 	movq	%r12, %rsi
    00001a60: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a67: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6759
    00001a6c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a73: 	jmp	.Ltmp1157 # Offset: 6771
.Ltmp1055:
    00001a78: 	movq	-0x8(%rdx), %rax
    00001a7c: 	addq	$0x200, %rax
    00001a82: 	jmp	.Ltmp1158 # Offset: 6786
.Ltmp1050:
    00001a87: 	movq	%r12, %rsi
    00001a8a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a91: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6801
    00001a96: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a9d: 	jmp	.Ltmp1159 # Offset: 6813
.Ltmp1044:
    00001aa2: 	movq	-0x8(%rdx), %rax
    00001aa6: 	addq	$0x200, %rax
    00001aac: 	jmp	.Ltmp1160 # Offset: 6828
.Ltmp1038:
    00001ab1: 	movq	-0x8(%rdx), %rax
    00001ab5: 	addq	$0x200, %rax
    00001abb: 	jmp	.Ltmp1161 # Offset: 6843
.Ltmp1032:
    00001ac0: 	movq	-0x8(%rdx), %rax
    00001ac4: 	addq	$0x200, %rax
    00001aca: 	jmp	.Ltmp1162 # Offset: 6858
.Ltmp1027:
    00001acf: 	movq	%r12, %rsi
    00001ad2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ad9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6873
    00001ade: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ae5: 	jmp	.Ltmp1163 # Offset: 6885
.Ltmp1020:
    00001aea: 	cmpq	$0x0, 0x8(%rsp)
    00001af0: 	je	.Ltmp1164 # Offset: 6896
.Ltmp1180:
    00001af6: 	movq	0x8(%rsp), %rdx
    00001afb: 	movq	0x18(%rsp), %rsi
    00001b00: 	callq	memcpy@PLT # Offset: 6912
    00001b05: 	movq	0x20(%rsp), %rax
    00001b0a: 	movq	(%r13), %rdi
    00001b0e: 	movq	%rax, 0x8(%rsp)
    00001b13: 	jmp	.Ltmp1164 # Offset: 6931
.Ltmp1054:
    00001b18: 	cmpq	$0x0, 0x8(%rsp)
    00001b1e: 	je	.Ltmp1165 # Offset: 6942
    00001b24: 	jmp	.Ltmp1166 # Offset: 6948
    00001b29: 	nopl	(%rax) # Size: 7
.Ltmp1031:
    00001b30: 	cmpq	$0x0, 0x8(%rsp)
    00001b36: 	je	.Ltmp1167 # Offset: 6966
    00001b3c: 	jmp	.Ltmp1168 # Offset: 6972
    00001b41: 	nopl	(%rax) # Size: 7
.Ltmp1110:
    00001b48: 	cmpq	$0x0, 0x8(%rsp)
    00001b4e: 	je	.Ltmp1169 # Offset: 6990
.Ltmp1181:
    00001b54: 	movq	0x8(%rsp), %rdx
    00001b59: 	movq	0x18(%rsp), %rsi
    00001b5e: 	callq	memcpy@PLT # Offset: 7006
    00001b63: 	movq	0x20(%rsp), %rax
    00001b68: 	movq	(%r13), %rdi
    00001b6c: 	movq	%rax, 0x8(%rsp)
    00001b71: 	jmp	.Ltmp1169 # Offset: 7025
.Ltmp1082:
    00001b76: 	cmpq	$0x0, 0x8(%rsp)
    00001b7c: 	je	.Ltmp1170 # Offset: 7036
    00001b82: 	jmp	.Ltmp1171 # Offset: 7042
    00001b87: 	nopw	(%rax,%rax) # Size: 9
.Ltmp992:
    00001b90: 	testq	%r14, %r14
    00001b93: 	je	.Ltmp1139 # Offset: 7059
    00001b99: 	jmp	.Ltmp1172 # Offset: 7065
    00001b9e: 	nop # Size: 2
.Ltmp1065:
    00001ba0: 	cmpq	$0x0, 0x8(%rsp)
    00001ba6: 	je	.Ltmp1173 # Offset: 7078
    00001bac: 	jmp	.Ltmp1174 # Offset: 7084
    00001bae: 	nop # Size: 2
.Ltmp1009:
    00001bb0: 	cmpq	$0x0, 0x8(%rsp)
    00001bb6: 	je	.Ltmp1175 # Offset: 7094
    00001bbc: 	jmp	.Ltmp1176 # Offset: 7100
    00001bc1: 	nopl	(%rax) # Size: 7
.Ltmp1121:
    00001bc8: 	cmpq	$0x0, 0x8(%rsp)
    00001bce: 	je	.Ltmp1177 # Offset: 7118
    00001bd4: 	jmp	.Ltmp1178 # Offset: 7124
    00001bd9: 	nopl	(%rax) # Size: 7
.Ltmp1093:
    00001be0: 	cmpq	$0x0, 0x8(%rsp)
    00001be6: 	je	.Ltmp1179 # Offset: 7142
.Ltmp1182:
    00001bec: 	movq	0x8(%rsp), %rdx
    00001bf1: 	movq	0x18(%rsp), %rsi
    00001bf6: 	callq	memcpy@PLT # Offset: 7158
    00001bfb: 	movq	0x20(%rsp), %rax
    00001c00: 	movq	(%r13), %rdi
    00001c04: 	movq	%rax, 0x8(%rsp)
    00001c09: 	jmp	.Ltmp1179 # Offset: 7177
.Ltmp1064:
    00001c0e: 	movq	(%rsp), %rsi
    00001c12: 	xorl	%edx, %edx
    00001c14: 	movq	%r13, %rdi
    00001c17: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7191
    00001c1c: 	movq	%rax, (%r13)
    00001c20: 	movq	%rax, %rdi
    00001c23: 	movq	0x20(%rsp), %rax
    00001c28: 	movq	%rax, 0x10(%r13)
.Ltmp1174:
    00001c2c: 	movq	0x8(%rsp), %rdx
    00001c31: 	movq	0x18(%rsp), %rsi
    00001c36: 	callq	memcpy@PLT # Offset: 7222
    00001c3b: 	movq	0x20(%rsp), %rax
    00001c40: 	movq	(%r13), %rdi
    00001c44: 	movq	%rax, 0x8(%rsp)
    00001c49: 	jmp	.Ltmp1173 # Offset: 7241
.Ltmp1008:
    00001c4e: 	movq	(%rsp), %rsi
    00001c52: 	xorl	%edx, %edx
    00001c54: 	movq	%r13, %rdi
    00001c57: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7255
    00001c5c: 	movq	%rax, (%r13)
    00001c60: 	movq	%rax, %rdi
    00001c63: 	movq	0x20(%rsp), %rax
    00001c68: 	movq	%rax, 0x10(%r13)
.Ltmp1176:
    00001c6c: 	movq	0x8(%rsp), %rdx
    00001c71: 	movq	0x18(%rsp), %rsi
    00001c76: 	callq	memcpy@PLT # Offset: 7286
    00001c7b: 	movq	0x20(%rsp), %rax
    00001c80: 	movq	(%r13), %rdi
    00001c84: 	movq	%rax, 0x8(%rsp)
    00001c89: 	jmp	.Ltmp1175 # Offset: 7305
.Ltmp1053:
    00001c8e: 	movq	(%rsp), %rsi
    00001c92: 	xorl	%edx, %edx
    00001c94: 	movq	%r13, %rdi
    00001c97: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7319
    00001c9c: 	movq	%rax, (%r13)
    00001ca0: 	movq	%rax, %rdi
    00001ca3: 	movq	0x20(%rsp), %rax
    00001ca8: 	movq	%rax, 0x10(%r13)
.Ltmp1166:
    00001cac: 	movq	0x8(%rsp), %rdx
    00001cb1: 	movq	0x18(%rsp), %rsi
    00001cb6: 	callq	memcpy@PLT # Offset: 7350
    00001cbb: 	movq	0x20(%rsp), %rax
    00001cc0: 	movq	(%r13), %rdi
    00001cc4: 	movq	%rax, 0x8(%rsp)
    00001cc9: 	jmp	.Ltmp1165 # Offset: 7369
.Ltmp1030:
    00001cce: 	movq	(%rsp), %rsi
    00001cd2: 	xorl	%edx, %edx
    00001cd4: 	movq	%r13, %rdi
    00001cd7: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7383
    00001cdc: 	movq	%rax, (%r13)
    00001ce0: 	movq	%rax, %rdi
    00001ce3: 	movq	0x20(%rsp), %rax
    00001ce8: 	movq	%rax, 0x10(%r13)
.Ltmp1168:
    00001cec: 	movq	0x8(%rsp), %rdx
    00001cf1: 	movq	0x18(%rsp), %rsi
    00001cf6: 	callq	memcpy@PLT # Offset: 7414
    00001cfb: 	movq	0x20(%rsp), %rax
    00001d00: 	movq	(%r13), %rdi
    00001d04: 	movq	%rax, 0x8(%rsp)
    00001d09: 	jmp	.Ltmp1167 # Offset: 7433
.Ltmp1081:
    00001d0e: 	movq	(%rsp), %rsi
    00001d12: 	xorl	%edx, %edx
    00001d14: 	movq	%r13, %rdi
    00001d17: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7447
    00001d1c: 	movq	%rax, (%r13)
    00001d20: 	movq	%rax, %rdi
    00001d23: 	movq	0x20(%rsp), %rax
    00001d28: 	movq	%rax, 0x10(%r13)
.Ltmp1171:
    00001d2c: 	movq	0x8(%rsp), %rdx
    00001d31: 	movq	0x18(%rsp), %rsi
    00001d36: 	callq	memcpy@PLT # Offset: 7478
    00001d3b: 	movq	0x20(%rsp), %rax
    00001d40: 	movq	(%r13), %rdi
    00001d44: 	movq	%rax, 0x8(%rsp)
    00001d49: 	jmp	.Ltmp1170 # Offset: 7497
.Ltmp1019:
    00001d4e: 	movq	(%rsp), %rsi
    00001d52: 	xorl	%edx, %edx
    00001d54: 	movq	%r13, %rdi
    00001d57: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7511
    00001d5c: 	movq	%rax, (%r13)
    00001d60: 	movq	%rax, %rdi
    00001d63: 	movq	0x20(%rsp), %rax
    00001d68: 	movq	%rax, 0x10(%r13)
    00001d6c: 	jmp	.Ltmp1180 # Offset: 7532
.Ltmp1109:
    00001d71: 	movq	(%rsp), %rsi
    00001d75: 	xorl	%edx, %edx
    00001d77: 	movq	%r13, %rdi
    00001d7a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7546
    00001d7f: 	movq	%rax, (%r13)
    00001d83: 	movq	%rax, %rdi
    00001d86: 	movq	0x20(%rsp), %rax
    00001d8b: 	movq	%rax, 0x10(%r13)
    00001d8f: 	jmp	.Ltmp1181 # Offset: 7567
.Ltmp1120:
    00001d94: 	movq	(%rsp), %rsi
    00001d98: 	xorl	%edx, %edx
    00001d9a: 	movq	%r13, %rdi
    00001d9d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7581
    00001da2: 	movq	%rax, (%r13)
    00001da6: 	movq	%rax, %rdi
    00001da9: 	movq	0x20(%rsp), %rax
    00001dae: 	movq	%rax, 0x10(%r13)
.Ltmp1178:
    00001db2: 	movq	0x8(%rsp), %rdx
    00001db7: 	movq	0x18(%rsp), %rsi
    00001dbc: 	callq	memcpy@PLT # Offset: 7612
    00001dc1: 	movq	0x20(%rsp), %rax
    00001dc6: 	movq	(%r13), %rdi
    00001dca: 	movq	%rax, 0x8(%rsp)
    00001dcf: 	jmp	.Ltmp1177 # Offset: 7631
.Ltmp1092:
    00001dd4: 	movq	(%rsp), %rsi
    00001dd8: 	xorl	%edx, %edx
    00001dda: 	movq	%r13, %rdi
    00001ddd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7645
    00001de2: 	movq	%rax, (%r13)
    00001de6: 	movq	%rax, %rdi
    00001de9: 	movq	0x20(%rsp), %rax
    00001dee: 	movq	%rax, 0x10(%r13)
    00001df2: 	jmp	.Ltmp1182 # Offset: 7666
.Ltmp1007:
    00001df7: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dfe: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7678
.Ltmp1018:
    00001e03: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e0a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7690
.Ltmp1029:
    00001e0f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e16: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7702
.Ltmp1052:
    00001e1b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e22: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7714
.Ltmp1063:
    00001e27: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e2e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7726
.Ltmp1080:
    00001e33: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e3a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7738
.Ltmp1091:
    00001e3f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e46: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7750
.Ltmp1108:
    00001e4b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e52: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7762
.Ltmp1119:
    00001e57: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e5e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7774
.Ltmp1138:
    00001e63: 	callq	__stack_chk_fail@PLT # Offset: 7779
.Ltmp990:
    00001e68: 	leaq	DATAat0x1a158(%rip), %rdi
    00001e6f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7791
    00001e74: 	endbr64
    00001e78: 	movq	%rax, %rbp
    00001e7b: 	jmp	.Ltmp1183 # Offset: 7803
    00001e7d: 	endbr64
.Ltmp1185:
    00001e81: 	movq	%rax, %rbp
    00001e84: 	jmp	.Ltmp1184 # Offset: 7812
    00001e86: 	endbr64
    00001e8a: 	jmp	.Ltmp1185 # Offset: 7818
.Ltmp1184:
    00001e8c: 	movq	0x60(%rsp), %rdi
    00001e91: 	cmpq	%r14, %rdi
    00001e94: 	je	.Ltmp1183 # Offset: 7828
.Ltmp1188:
    00001e96: 	movq	0x70(%rsp), %rax
    00001e9b: 	leaq	0x1(%rax), %rsi
    00001e9f: 	callq	_ZdlPvm@PLT # Offset: 7839
.Ltmp1183:
    00001ea4: 	movq	0x40(%rsp), %rdi
    00001ea9: 	cmpq	0x10(%rsp), %rdi
    00001eae: 	je	.Ltmp1186 # Offset: 7854
    00001eb0: 	movq	0x50(%rsp), %rax
    00001eb5: 	leaq	0x1(%rax), %rsi
    00001eb9: 	callq	_ZdlPvm@PLT # Offset: 7865
.Ltmp1186:
    00001ebe: 	movq	%rbp, %rdi
    00001ec1: 	callq	_Unwind_Resume@PLT # Offset: 7873
    00001ec6: 	endbr64
    00001eca: 	jmp	.Ltmp1185 # Offset: 7882
    00001ecc: 	endbr64
    00001ed0: 	jmp	.Ltmp1185 # Offset: 7888
    00001ed2: 	endbr64
    00001ed6: 	movq	%rax, %rbp
    00001ed9: 	jmp	.Ltmp1187 # Offset: 7897
    00001edb: 	endbr64
    00001edf: 	jmp	.Ltmp1185 # Offset: 7903
    00001ee1: 	endbr64
    00001ee5: 	jmp	.Ltmp1185 # Offset: 7909
.Ltmp1187:
    00001ee7: 	movq	0x60(%rsp), %rdi
    00001eec: 	leaq	0x70(%rsp), %rax
    00001ef1: 	cmpq	%rax, %rdi
    00001ef4: 	jne	.Ltmp1188 # Offset: 7924
    00001ef6: 	jmp	.Ltmp1183 # Offset: 7926
    00001ef8: 	endbr64
    00001efc: 	jmp	.Ltmp1185 # Offset: 7932
    00001efe: 	endbr64
    00001f02: 	jmp	.Ltmp1185 # Offset: 7938
    00001f07: 	endbr64
    00001f0b: 	jmp	.Ltmp1185 # Offset: 7947
    00001f10: 	endbr64
    00001f14: 	jmp	.Ltmp1185 # Offset: 7956
    00001f19: 	endbr64
    00001f1d: 	jmp	.Ltmp1185 # Offset: 7965
    00001f22: 	endbr64
    00001f26: 	jmp	.Ltmp1185 # Offset: 7974
    00001f2b: 	endbr64
    00001f2f: 	jmp	.Ltmp1185 # Offset: 7983
    00001f34: 	endbr64
    00001f38: 	jmp	.Ltmp1185 # Offset: 7992
    00001f3d: 	endbr64
    00001f41: 	jmp	.Ltmp1185 # Offset: 8001
    00001f46: 	endbr64
    00001f4a: 	jmp	.Ltmp1185 # Offset: 8010
    00001f4f: 	endbr64
    00001f53: 	jmp	.Ltmp1185 # Offset: 8019
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIiEvv"

Binary Function "_Z11TestOneTypeIlEvv" after disassembly {
  Number      : 51
  State       : disassembled
  Address     : 0xcd00
  Size        : 0x1ed1
  MaxSize     : 0x1ee0
  Offset      : 0xcd00
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIlEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB050:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp1189:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1189 # Offset: 37
    00000027: 	subq	$0xa98, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0xfa88(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x20(%rsp), %rsi
    0000005d: 	movaps	%xmm2, 0x20(%rsp)
    00000062: 	leaq	0x80(%rsp), %rbp
    0000006a: 	movq	%rsi, (%rsp)
    0000006e: 	leaq	0xfa80(%rsp), %rbx
    00000076: 	movaps	%xmm3, 0x30(%rsp)
    0000007b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 123
    00000080: 	leaq	0x50(%rsp), %rax
    00000085: 	movb	$0x74, 0x56(%rsp)
    0000008a: 	movq	%rax, 0x10(%rsp)
    0000008f: 	movq	%rax, 0x40(%rsp)
    00000094: 	movl	$0x5f34, %eax
    00000099: 	movw	%ax, 0x54(%rsp)
    0000009e: 	cvttsd2si	init_value(%rip), %rax
    000000a7: 	movl	$0x36746e69, 0x50(%rsp)
    000000af: 	movq	$0x7, 0x48(%rsp)
    000000b8: 	movb	$0x0, 0x57(%rsp)
    000000bd: 	movq	%rax, %xmm0
    000000c2: 	movq	%rbp, %rax
    000000c5: 	punpcklqdq	%xmm0, %xmm0
    000000c9: 	nopl	(%rax) # Size: 7
.Ltmp1190:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rax, %rbx
    000000da: 	jne	.Ltmp1190 # Offset: 218
    000000dc: 	leaq	0x60(%rsp), %r12
    000000e1: 	leaq	0x40(%rsp), %r15
    000000e6: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000ed: 	movq	%r15, %rsi
    000000f0: 	movq	%r12, %rdi
    000000f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 243
    000000f8: 	callq	clock@PLT # Offset: 248
    000000fd: 	movl	iterations(%rip), %ecx
    00000103: 	xorl	%r13d, %r13d
    00000106: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000010d: 	movq	%rax, start_time(%rip)
    00000114: 	testl	%ecx, %ecx
    00000116: 	jle	.Ltmp1191 # Offset: 278
    00000118: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1194:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1192:
    00000130: 	paddq	(%rax), %xmm0
    00000134: 	addq	$0x10, %rax
    00000138: 	cmpq	%rbx, %rax
    0000013b: 	jne	.Ltmp1192 # Offset: 315
    0000013d: 	cvttsd2si	init_value(%rip), %rdx
    00000146: 	movdqa	%xmm0, %xmm1
    0000014a: 	psrldq	$0x8, %xmm1
    0000014f: 	paddq	%xmm1, %xmm0
    00000153: 	movq	%xmm0, %rax
    00000158: 	imulq	$0x1f40, %rdx, %rdx
    0000015f: 	cmpq	%rax, %rdx
    00000162: 	je	.Ltmp1193 # Offset: 354
    00000164: 	movl	current_test(%rip), %edx
    0000016a: 	movq	%r14, %rsi
    0000016d: 	movl	$0x1, %edi
    00000172: 	xorl	%eax, %eax
    00000174: 	callq	__printf_chk@PLT # Offset: 372
    00000179: 	movl	iterations(%rip), %ecx
.Ltmp1193:
    0000017f: 	addl	$0x1, %r13d
    00000183: 	cmpl	%ecx, %r13d
    00000186: 	jl	.Ltmp1194 # Offset: 390
.Ltmp1191:
    00000188: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000018f: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000196: 	subq	$0x20, %rax
    0000019a: 	cmpq	%rax, %r13
    0000019d: 	je	.Ltmp1195 # Offset: 413
    000001a3: 	leaq	0x10(%r13), %rdi
    000001a7: 	movq	0x68(%rsp), %r14
    000001ac: 	movq	%rdi, (%r13)
    000001b0: 	movq	0x60(%rsp), %rax
    000001b5: 	movq	%rax, %rsi
    000001b8: 	movq	%rax, 0x8(%rsp)
    000001bd: 	addq	%r14, %rsi
    000001c0: 	je	.Ltmp1196 # Offset: 448
    000001c2: 	testq	%rax, %rax
    000001c5: 	je	.Ltmp1197 # Offset: 453
.Ltmp1196:
    000001cb: 	movq	%r14, 0x20(%rsp)
    000001d0: 	cmpq	$0xf, %r14
    000001d4: 	ja	.Ltmp1198 # Offset: 468
    000001da: 	cmpq	$0x1, %r14
    000001de: 	jne	.Ltmp1199 # Offset: 478
    000001e4: 	movq	0x8(%rsp), %rax
    000001e9: 	movzbl	(%rax), %eax
    000001ec: 	movb	%al, 0x10(%r13)
.Ltmp1346:
    000001f0: 	movq	%r14, 0x8(%r13)
    000001f4: 	movb	$0x0, (%rdi,%r14)
    000001f9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000200: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000207: 	addq	$0x20, %rax
    0000020b: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000212: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000219: 	je	.Ltmp1200 # Offset: 537
.Ltmp1357:
    0000021f: 	movq	-0x20(%rax), %r13
    00000223: 	callq	clock@PLT # Offset: 547
    00000228: 	pxor	%xmm0, %xmm0
    0000022c: 	movq	%rax, end_time(%rip)
    00000233: 	movq	%r13, %rdi
    00000236: 	subq	start_time(%rip), %rax
    0000023d: 	cvtsi2sd	%rax, %xmm0
    00000242: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000024a: 	callq	_Z13record_resultdPKc # Offset: 586
    0000024f: 	movq	0x60(%rsp), %rdi
    00000254: 	leaq	0x70(%rsp), %r14
    00000259: 	cmpq	%r14, %rdi
    0000025c: 	je	.Ltmp1201 # Offset: 604
    0000025e: 	movq	0x70(%rsp), %rax
    00000263: 	leaq	0x1(%rax), %rsi
    00000267: 	callq	_ZdlPvm@PLT # Offset: 615
.Ltmp1201:
    0000026c: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000273: 	movq	%r15, %rsi
    00000276: 	movq	%r12, %rdi
    00000279: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 633
    0000027e: 	callq	clock@PLT # Offset: 638
    00000283: 	movl	iterations(%rip), %ecx
    00000289: 	xorl	%r13d, %r13d
    0000028c: 	movq	%rax, start_time(%rip)
    00000293: 	testl	%ecx, %ecx
    00000295: 	jle	.Ltmp1202 # Offset: 661
    00000297: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1205:
    000002a0: 	movq	%rbp, %rax
    000002a3: 	pxor	%xmm0, %xmm0
    000002a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1203:
    000002b0: 	paddq	(%rax), %xmm0
    000002b4: 	addq	$0x10, %rax
    000002b8: 	cmpq	%rax, %rbx
    000002bb: 	jne	.Ltmp1203 # Offset: 699
    000002bd: 	cvttsd2si	init_value(%rip), %rdx
    000002c6: 	movdqa	%xmm0, %xmm1
    000002ca: 	psrldq	$0x8, %xmm1
    000002cf: 	paddq	%xmm1, %xmm0
    000002d3: 	movq	%xmm0, %rax
    000002d8: 	imulq	$0x1f40, %rdx, %rdx
    000002df: 	cmpq	%rax, %rdx
    000002e2: 	je	.Ltmp1204 # Offset: 738
    000002e4: 	movl	current_test(%rip), %edx
    000002ea: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002f1: 	movl	$0x1, %edi
    000002f6: 	xorl	%eax, %eax
    000002f8: 	callq	__printf_chk@PLT # Offset: 760
    000002fd: 	movl	iterations(%rip), %ecx
.Ltmp1204:
    00000303: 	addl	$0x1, %r13d
    00000307: 	cmpl	%ecx, %r13d
    0000030a: 	jl	.Ltmp1205 # Offset: 778
.Ltmp1202:
    0000030c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000313: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000031a: 	subq	$0x20, %rax
    0000031e: 	cmpq	%rax, %r13
    00000321: 	je	.Ltmp1206 # Offset: 801
    00000327: 	leaq	0x10(%r13), %rdi
    0000032b: 	movq	0x68(%rsp), %rcx
    00000330: 	movq	%rdi, (%r13)
    00000334: 	movq	0x60(%rsp), %rsi
    00000339: 	movq	%rcx, 0x8(%rsp)
    0000033e: 	movq	%rsi, %rax
    00000341: 	movq	%rsi, 0x18(%rsp)
    00000346: 	addq	%rcx, %rax
    00000349: 	je	.Ltmp1207 # Offset: 841
    0000034b: 	testq	%rsi, %rsi
    0000034e: 	je	.Ltmp1208 # Offset: 846
.Ltmp1207:
    00000354: 	movq	0x8(%rsp), %rax
    00000359: 	movq	%rax, 0x20(%rsp)
    0000035e: 	cmpq	$0xf, %rax
    00000362: 	ja	.Ltmp1209 # Offset: 866
    00000368: 	cmpq	$0x1, 0x8(%rsp)
    0000036e: 	jne	.Ltmp1210 # Offset: 878
    00000374: 	movq	0x18(%rsp), %rax
    00000379: 	movzbl	(%rax), %eax
    0000037c: 	movb	%al, 0x10(%r13)
.Ltmp1380:
    00000380: 	movq	0x8(%rsp), %rax
    00000385: 	movq	%rax, 0x8(%r13)
    00000389: 	movb	$0x0, (%rdi,%rax)
    0000038d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000394: 	addq	$0x20, %rax
    00000398: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1362:
    0000039f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003a6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003ad: 	je	.Ltmp1211 # Offset: 941
.Ltmp1361:
    000003b3: 	movq	-0x20(%rax), %r13
    000003b7: 	callq	clock@PLT # Offset: 951
    000003bc: 	pxor	%xmm0, %xmm0
    000003c0: 	movq	%rax, end_time(%rip)
    000003c7: 	movq	%r13, %rdi
    000003ca: 	subq	start_time(%rip), %rax
    000003d1: 	cvtsi2sd	%rax, %xmm0
    000003d6: 	divsd	DATAat0x1a318(%rip), %xmm0
    000003de: 	callq	_Z13record_resultdPKc # Offset: 990
    000003e3: 	movq	0x60(%rsp), %rdi
    000003e8: 	cmpq	%r14, %rdi
    000003eb: 	je	.Ltmp1212 # Offset: 1003
    000003ed: 	movq	0x70(%rsp), %rax
    000003f2: 	leaq	0x1(%rax), %rsi
    000003f6: 	callq	_ZdlPvm@PLT # Offset: 1014
.Ltmp1212:
    000003fb: 	leaq	DATAat0x1a1ee(%rip), %rdx
    00000402: 	movq	%r15, %rsi
    00000405: 	movq	%r12, %rdi
    00000408: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1032
    0000040d: 	callq	clock@PLT # Offset: 1037
    00000412: 	movl	iterations(%rip), %ecx
    00000418: 	xorl	%r13d, %r13d
    0000041b: 	movq	%rax, start_time(%rip)
    00000422: 	testl	%ecx, %ecx
    00000424: 	jle	.Ltmp1213 # Offset: 1060
    00000426: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1216:
    00000430: 	movq	%rbp, %rax
    00000433: 	pxor	%xmm0, %xmm0
    00000437: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1214:
    00000440: 	paddq	(%rax), %xmm0
    00000444: 	addq	$0x10, %rax
    00000448: 	cmpq	%rbx, %rax
    0000044b: 	jne	.Ltmp1214 # Offset: 1099
    0000044d: 	cvttsd2si	init_value(%rip), %rdx
    00000456: 	movdqa	%xmm0, %xmm1
    0000045a: 	psrldq	$0x8, %xmm1
    0000045f: 	paddq	%xmm1, %xmm0
    00000463: 	movq	%xmm0, %rax
    00000468: 	imulq	$0x1f40, %rdx, %rdx
    0000046f: 	cmpq	%rax, %rdx
    00000472: 	je	.Ltmp1215 # Offset: 1138
    00000474: 	movl	current_test(%rip), %edx
    0000047a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000481: 	movl	$0x1, %edi
    00000486: 	xorl	%eax, %eax
    00000488: 	callq	__printf_chk@PLT # Offset: 1160
    0000048d: 	movl	iterations(%rip), %ecx
.Ltmp1215:
    00000493: 	addl	$0x1, %r13d
    00000497: 	cmpl	%ecx, %r13d
    0000049a: 	jl	.Ltmp1216 # Offset: 1178
.Ltmp1213:
    0000049c: 	movq	%r12, %rdi
    0000049f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1183
    000004a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004ab: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000004b2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004b9: 	je	.Ltmp1217 # Offset: 1209
.Ltmp1360:
    000004bf: 	movq	-0x20(%rax), %r13
    000004c3: 	callq	clock@PLT # Offset: 1219
    000004c8: 	pxor	%xmm0, %xmm0
    000004cc: 	movq	%rax, end_time(%rip)
    000004d3: 	movq	%r13, %rdi
    000004d6: 	subq	start_time(%rip), %rax
    000004dd: 	cvtsi2sd	%rax, %xmm0
    000004e2: 	divsd	DATAat0x1a318(%rip), %xmm0
    000004ea: 	callq	_Z13record_resultdPKc # Offset: 1258
    000004ef: 	movq	0x60(%rsp), %rdi
    000004f4: 	cmpq	%r14, %rdi
    000004f7: 	je	.Ltmp1218 # Offset: 1271
    000004f9: 	movq	0x70(%rsp), %rax
    000004fe: 	leaq	0x1(%rax), %rsi
    00000502: 	callq	_ZdlPvm@PLT # Offset: 1282
.Ltmp1218:
    00000507: 	leaq	DATAat0x1a1fb(%rip), %rdx
    0000050e: 	movq	%r15, %rsi
    00000511: 	movq	%r12, %rdi
    00000514: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1300
    00000519: 	callq	clock@PLT # Offset: 1305
    0000051e: 	movl	iterations(%rip), %ecx
    00000524: 	xorl	%r13d, %r13d
    00000527: 	movq	%rax, start_time(%rip)
    0000052e: 	testl	%ecx, %ecx
    00000530: 	jle	.Ltmp1219 # Offset: 1328
    00000532: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1222:
    00000538: 	movq	%rbp, %rax
    0000053b: 	pxor	%xmm0, %xmm0
    0000053f: 	nop # Size: 1
.Ltmp1220:
    00000540: 	paddq	(%rax), %xmm0
    00000544: 	addq	$0x10, %rax
    00000548: 	cmpq	%rax, %rbx
    0000054b: 	jne	.Ltmp1220 # Offset: 1355
    0000054d: 	cvttsd2si	init_value(%rip), %rdx
    00000556: 	movdqa	%xmm0, %xmm1
    0000055a: 	psrldq	$0x8, %xmm1
    0000055f: 	paddq	%xmm1, %xmm0
    00000563: 	movq	%xmm0, %rax
    00000568: 	imulq	$0x1f40, %rdx, %rdx
    0000056f: 	cmpq	%rax, %rdx
    00000572: 	je	.Ltmp1221 # Offset: 1394
    00000574: 	movl	current_test(%rip), %edx
    0000057a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000581: 	movl	$0x1, %edi
    00000586: 	xorl	%eax, %eax
    00000588: 	callq	__printf_chk@PLT # Offset: 1416
    0000058d: 	movl	iterations(%rip), %ecx
.Ltmp1221:
    00000593: 	addl	$0x1, %r13d
    00000597: 	cmpl	%ecx, %r13d
    0000059a: 	jl	.Ltmp1222 # Offset: 1434
.Ltmp1219:
    0000059c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000005a3: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000005aa: 	subq	$0x20, %rax
    000005ae: 	cmpq	%rax, %r13
    000005b1: 	je	.Ltmp1223 # Offset: 1457
    000005b7: 	leaq	0x10(%r13), %rdi
    000005bb: 	movq	0x68(%rsp), %rcx
    000005c0: 	movq	%rdi, (%r13)
    000005c4: 	movq	0x60(%rsp), %rsi
    000005c9: 	movq	%rcx, 0x8(%rsp)
    000005ce: 	movq	%rsi, %rax
    000005d1: 	movq	%rsi, 0x18(%rsp)
    000005d6: 	addq	%rcx, %rax
    000005d9: 	je	.Ltmp1224 # Offset: 1497
    000005db: 	testq	%rsi, %rsi
    000005de: 	je	.Ltmp1225 # Offset: 1502
.Ltmp1224:
    000005e4: 	movq	0x8(%rsp), %rax
    000005e9: 	movq	%rax, 0x20(%rsp)
    000005ee: 	cmpq	$0xf, %rax
    000005f2: 	ja	.Ltmp1226 # Offset: 1522
    000005f8: 	cmpq	$0x1, 0x8(%rsp)
    000005fe: 	jne	.Ltmp1227 # Offset: 1534
    00000604: 	movq	0x18(%rsp), %rax
    00000609: 	movzbl	(%rax), %eax
    0000060c: 	movb	%al, 0x10(%r13)
.Ltmp1371:
    00000610: 	movq	0x8(%rsp), %rax
    00000615: 	movq	%rax, 0x8(%r13)
    00000619: 	movb	$0x0, (%rdi,%rax)
    0000061d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000624: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000062b: 	addq	$0x20, %rax
    0000062f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000636: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000063d: 	je	.Ltmp1228 # Offset: 1597
.Ltmp1359:
    00000643: 	movq	-0x20(%rax), %r13
    00000647: 	callq	clock@PLT # Offset: 1607
    0000064c: 	pxor	%xmm0, %xmm0
    00000650: 	movq	%rax, end_time(%rip)
    00000657: 	movq	%r13, %rdi
    0000065a: 	subq	start_time(%rip), %rax
    00000661: 	cvtsi2sd	%rax, %xmm0
    00000666: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000066e: 	callq	_Z13record_resultdPKc # Offset: 1646
    00000673: 	movq	0x60(%rsp), %rdi
    00000678: 	cmpq	%r14, %rdi
    0000067b: 	je	.Ltmp1229 # Offset: 1659
    0000067d: 	movq	0x70(%rsp), %rax
    00000682: 	leaq	0x1(%rax), %rsi
    00000686: 	callq	_ZdlPvm@PLT # Offset: 1670
.Ltmp1229:
    0000068b: 	leaq	DATAat0x1a208(%rip), %rdx
    00000692: 	movq	%r15, %rsi
    00000695: 	movq	%r12, %rdi
    00000698: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1688
    0000069d: 	callq	clock@PLT # Offset: 1693
    000006a2: 	movl	iterations(%rip), %ecx
    000006a8: 	xorl	%r13d, %r13d
    000006ab: 	movq	%rax, start_time(%rip)
    000006b2: 	testl	%ecx, %ecx
    000006b4: 	jle	.Ltmp1230 # Offset: 1716
    000006b6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1233:
    000006c0: 	movq	%rbp, %rax
    000006c3: 	pxor	%xmm0, %xmm0
    000006c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1231:
    000006d0: 	paddq	(%rax), %xmm0
    000006d4: 	addq	$0x10, %rax
    000006d8: 	cmpq	%rbx, %rax
    000006db: 	jne	.Ltmp1231 # Offset: 1755
    000006dd: 	cvttsd2si	init_value(%rip), %rdx
    000006e6: 	movdqa	%xmm0, %xmm1
    000006ea: 	psrldq	$0x8, %xmm1
    000006ef: 	paddq	%xmm1, %xmm0
    000006f3: 	movq	%xmm0, %rax
    000006f8: 	imulq	$0x1f40, %rdx, %rdx
    000006ff: 	cmpq	%rax, %rdx
    00000702: 	je	.Ltmp1232 # Offset: 1794
    00000704: 	movl	current_test(%rip), %edx
    0000070a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000711: 	movl	$0x1, %edi
    00000716: 	xorl	%eax, %eax
    00000718: 	callq	__printf_chk@PLT # Offset: 1816
    0000071d: 	movl	iterations(%rip), %ecx
.Ltmp1232:
    00000723: 	addl	$0x1, %r13d
    00000727: 	cmpl	%ecx, %r13d
    0000072a: 	jl	.Ltmp1233 # Offset: 1834
.Ltmp1230:
    0000072c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000733: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000073a: 	subq	$0x20, %rax
    0000073e: 	cmpq	%rax, %r13
    00000741: 	je	.Ltmp1234 # Offset: 1857
    00000747: 	leaq	0x10(%r13), %rdi
    0000074b: 	movq	0x68(%rsp), %rcx
    00000750: 	movq	%rdi, (%r13)
    00000754: 	movq	0x60(%rsp), %rsi
    00000759: 	movq	%rcx, 0x8(%rsp)
    0000075e: 	movq	%rsi, %rax
    00000761: 	movq	%rsi, 0x18(%rsp)
    00000766: 	addq	%rcx, %rax
    00000769: 	je	.Ltmp1235 # Offset: 1897
    0000076b: 	testq	%rsi, %rsi
    0000076e: 	je	.Ltmp1236 # Offset: 1902
.Ltmp1235:
    00000774: 	movq	0x8(%rsp), %rax
    00000779: 	movq	%rax, 0x20(%rsp)
    0000077e: 	cmpq	$0xf, %rax
    00000782: 	ja	.Ltmp1237 # Offset: 1922
    00000788: 	cmpq	$0x1, 0x8(%rsp)
    0000078e: 	jne	.Ltmp1238 # Offset: 1934
    00000794: 	movq	0x18(%rsp), %rax
    00000799: 	movzbl	(%rax), %eax
    0000079c: 	movb	%al, 0x10(%r13)
.Ltmp1374:
    000007a0: 	movq	0x8(%rsp), %rax
    000007a5: 	movq	%rax, 0x8(%r13)
    000007a9: 	movb	$0x0, (%rdi,%rax)
    000007ad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007b4: 	addq	$0x20, %rax
    000007b8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1370:
    000007bf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000007c6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007cd: 	je	.Ltmp1239 # Offset: 1997
.Ltmp1369:
    000007d3: 	movq	-0x20(%rax), %r13
    000007d7: 	callq	clock@PLT # Offset: 2007
    000007dc: 	pxor	%xmm0, %xmm0
    000007e0: 	movq	%rax, end_time(%rip)
    000007e7: 	movq	%r13, %rdi
    000007ea: 	subq	start_time(%rip), %rax
    000007f1: 	cvtsi2sd	%rax, %xmm0
    000007f6: 	divsd	DATAat0x1a318(%rip), %xmm0
    000007fe: 	callq	_Z13record_resultdPKc # Offset: 2046
    00000803: 	movq	0x60(%rsp), %rdi
    00000808: 	cmpq	%r14, %rdi
    0000080b: 	je	.Ltmp1240 # Offset: 2059
    0000080d: 	movq	0x70(%rsp), %rax
    00000812: 	leaq	0x1(%rax), %rsi
    00000816: 	callq	_ZdlPvm@PLT # Offset: 2070
.Ltmp1240:
    0000081b: 	leaq	DATAat0x1a215(%rip), %rdx
    00000822: 	movq	%r15, %rsi
    00000825: 	movq	%r12, %rdi
    00000828: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2088
    0000082d: 	callq	clock@PLT # Offset: 2093
    00000832: 	movl	iterations(%rip), %ecx
    00000838: 	xorl	%r13d, %r13d
    0000083b: 	movq	%rax, start_time(%rip)
    00000842: 	testl	%ecx, %ecx
    00000844: 	jle	.Ltmp1241 # Offset: 2116
    00000846: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1244:
    00000850: 	movq	%rbp, %rax
    00000853: 	pxor	%xmm0, %xmm0
    00000857: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1242:
    00000860: 	paddq	(%rax), %xmm0
    00000864: 	addq	$0x10, %rax
    00000868: 	cmpq	%rbx, %rax
    0000086b: 	jne	.Ltmp1242 # Offset: 2155
    0000086d: 	cvttsd2si	init_value(%rip), %rdx
    00000876: 	movdqa	%xmm0, %xmm1
    0000087a: 	psrldq	$0x8, %xmm1
    0000087f: 	paddq	%xmm1, %xmm0
    00000883: 	movq	%xmm0, %rax
    00000888: 	imulq	$0x1f40, %rdx, %rdx
    0000088f: 	cmpq	%rax, %rdx
    00000892: 	je	.Ltmp1243 # Offset: 2194
    00000894: 	movl	current_test(%rip), %edx
    0000089a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000008a1: 	movl	$0x1, %edi
    000008a6: 	xorl	%eax, %eax
    000008a8: 	callq	__printf_chk@PLT # Offset: 2216
    000008ad: 	movl	iterations(%rip), %ecx
.Ltmp1243:
    000008b3: 	addl	$0x1, %r13d
    000008b7: 	cmpl	%ecx, %r13d
    000008ba: 	jl	.Ltmp1244 # Offset: 2234
.Ltmp1241:
    000008bc: 	movq	%r12, %rdi
    000008bf: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2239
    000008c4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008cb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008d2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008d9: 	je	.Ltmp1245 # Offset: 2265
.Ltmp1368:
    000008df: 	movq	-0x20(%rax), %r13
    000008e3: 	callq	clock@PLT # Offset: 2275
    000008e8: 	pxor	%xmm0, %xmm0
    000008ec: 	movq	%rax, end_time(%rip)
    000008f3: 	movq	%r13, %rdi
    000008f6: 	subq	start_time(%rip), %rax
    000008fd: 	cvtsi2sd	%rax, %xmm0
    00000902: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000090a: 	callq	_Z13record_resultdPKc # Offset: 2314
    0000090f: 	movq	0x60(%rsp), %rdi
    00000914: 	cmpq	%r14, %rdi
    00000917: 	je	.Ltmp1246 # Offset: 2327
    00000919: 	movq	0x70(%rsp), %rax
    0000091e: 	leaq	0x1(%rax), %rsi
    00000922: 	callq	_ZdlPvm@PLT # Offset: 2338
.Ltmp1246:
    00000927: 	leaq	DATAat0x1a226(%rip), %rdx
    0000092e: 	movq	%r15, %rsi
    00000931: 	movq	%r12, %rdi
    00000934: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2356
    00000939: 	callq	clock@PLT # Offset: 2361
    0000093e: 	movl	iterations(%rip), %ecx
    00000944: 	xorl	%r13d, %r13d
    00000947: 	movq	%rax, start_time(%rip)
    0000094e: 	testl	%ecx, %ecx
    00000950: 	jle	.Ltmp1247 # Offset: 2384
    00000952: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1250:
    00000958: 	movq	%rbp, %rax
    0000095b: 	pxor	%xmm0, %xmm0
    0000095f: 	nop # Size: 1
.Ltmp1248:
    00000960: 	paddq	(%rax), %xmm0
    00000964: 	addq	$0x10, %rax
    00000968: 	cmpq	%rbx, %rax
    0000096b: 	jne	.Ltmp1248 # Offset: 2411
    0000096d: 	cvttsd2si	init_value(%rip), %rdx
    00000976: 	movdqa	%xmm0, %xmm1
    0000097a: 	psrldq	$0x8, %xmm1
    0000097f: 	paddq	%xmm1, %xmm0
    00000983: 	movq	%xmm0, %rax
    00000988: 	imulq	$0x1f40, %rdx, %rdx
    0000098f: 	cmpq	%rax, %rdx
    00000992: 	je	.Ltmp1249 # Offset: 2450
    00000994: 	movl	current_test(%rip), %edx
    0000099a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000009a1: 	movl	$0x1, %edi
    000009a6: 	xorl	%eax, %eax
    000009a8: 	callq	__printf_chk@PLT # Offset: 2472
    000009ad: 	movl	iterations(%rip), %ecx
.Ltmp1249:
    000009b3: 	addl	$0x1, %r13d
    000009b7: 	cmpl	%ecx, %r13d
    000009ba: 	jl	.Ltmp1250 # Offset: 2490
.Ltmp1247:
    000009bc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009c3: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000009ca: 	subq	$0x20, %rax
    000009ce: 	cmpq	%rax, %r13
    000009d1: 	je	.Ltmp1251 # Offset: 2513
    000009d7: 	leaq	0x10(%r13), %rdi
    000009db: 	movq	0x68(%rsp), %rcx
    000009e0: 	movq	%rdi, (%r13)
    000009e4: 	movq	0x60(%rsp), %rsi
    000009e9: 	movq	%rcx, 0x8(%rsp)
    000009ee: 	movq	%rsi, %rax
    000009f1: 	movq	%rsi, 0x18(%rsp)
    000009f6: 	addq	%rcx, %rax
    000009f9: 	je	.Ltmp1252 # Offset: 2553
    000009fb: 	testq	%rsi, %rsi
    000009fe: 	je	.Ltmp1253 # Offset: 2558
.Ltmp1252:
    00000a04: 	movq	0x8(%rsp), %rax
    00000a09: 	movq	%rax, 0x20(%rsp)
    00000a0e: 	cmpq	$0xf, %rax
    00000a12: 	ja	.Ltmp1254 # Offset: 2578
    00000a18: 	cmpq	$0x1, 0x8(%rsp)
    00000a1e: 	jne	.Ltmp1255 # Offset: 2590
    00000a24: 	movq	0x18(%rsp), %rax
    00000a29: 	movzbl	(%rax), %eax
    00000a2c: 	movb	%al, 0x10(%r13)
.Ltmp1372:
    00000a30: 	movq	0x8(%rsp), %rax
    00000a35: 	movq	%rax, 0x8(%r13)
    00000a39: 	movb	$0x0, (%rdi,%rax)
    00000a3d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a44: 	addq	$0x20, %rax
    00000a48: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1367:
    00000a4f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a56: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a5d: 	je	.Ltmp1256 # Offset: 2653
.Ltmp1366:
    00000a63: 	movq	-0x20(%rax), %r13
    00000a67: 	callq	clock@PLT # Offset: 2663
    00000a6c: 	pxor	%xmm0, %xmm0
    00000a70: 	movq	%rax, end_time(%rip)
    00000a77: 	movq	%r13, %rdi
    00000a7a: 	subq	start_time(%rip), %rax
    00000a81: 	cvtsi2sd	%rax, %xmm0
    00000a86: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a8e: 	callq	_Z13record_resultdPKc # Offset: 2702
    00000a93: 	movq	0x60(%rsp), %rdi
    00000a98: 	cmpq	%r14, %rdi
    00000a9b: 	je	.Ltmp1257 # Offset: 2715
    00000a9d: 	movq	0x70(%rsp), %rax
    00000aa2: 	leaq	0x1(%rax), %rsi
    00000aa6: 	callq	_ZdlPvm@PLT # Offset: 2726
.Ltmp1257:
    00000aab: 	leaq	DATAat0x1a238(%rip), %rdx
    00000ab2: 	movq	%r15, %rsi
    00000ab5: 	movq	%r12, %rdi
    00000ab8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2744
    00000abd: 	callq	clock@PLT # Offset: 2749
    00000ac2: 	movl	iterations(%rip), %ecx
    00000ac8: 	xorl	%r13d, %r13d
    00000acb: 	movq	%rax, start_time(%rip)
    00000ad2: 	testl	%ecx, %ecx
    00000ad4: 	jle	.Ltmp1258 # Offset: 2772
    00000ad6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1261:
    00000ae0: 	movq	%rbp, %rax
    00000ae3: 	pxor	%xmm0, %xmm0
    00000ae7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1259:
    00000af0: 	paddq	(%rax), %xmm0
    00000af4: 	addq	$0x10, %rax
    00000af8: 	cmpq	%rax, %rbx
    00000afb: 	jne	.Ltmp1259 # Offset: 2811
    00000afd: 	cvttsd2si	init_value(%rip), %rdx
    00000b06: 	movdqa	%xmm0, %xmm1
    00000b0a: 	psrldq	$0x8, %xmm1
    00000b0f: 	paddq	%xmm1, %xmm0
    00000b13: 	movq	%xmm0, %rax
    00000b18: 	imulq	$0x1f40, %rdx, %rdx
    00000b1f: 	cmpq	%rax, %rdx
    00000b22: 	je	.Ltmp1260 # Offset: 2850
    00000b24: 	movl	current_test(%rip), %edx
    00000b2a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000b31: 	movl	$0x1, %edi
    00000b36: 	xorl	%eax, %eax
    00000b38: 	callq	__printf_chk@PLT # Offset: 2872
    00000b3d: 	movl	iterations(%rip), %ecx
.Ltmp1260:
    00000b43: 	addl	$0x1, %r13d
    00000b47: 	cmpl	%ecx, %r13d
    00000b4a: 	jl	.Ltmp1261 # Offset: 2890
.Ltmp1258:
    00000b4c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b53: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000b5a: 	subq	$0x20, %rax
    00000b5e: 	cmpq	%rax, %r13
    00000b61: 	je	.Ltmp1262 # Offset: 2913
    00000b67: 	leaq	0x10(%r13), %rdi
    00000b6b: 	movq	0x68(%rsp), %rcx
    00000b70: 	movq	%rdi, (%r13)
    00000b74: 	movq	0x60(%rsp), %rsi
    00000b79: 	movq	%rcx, 0x8(%rsp)
    00000b7e: 	movq	%rsi, %rax
    00000b81: 	movq	%rsi, 0x18(%rsp)
    00000b86: 	addq	%rcx, %rax
    00000b89: 	je	.Ltmp1263 # Offset: 2953
    00000b8b: 	testq	%rsi, %rsi
    00000b8e: 	je	.Ltmp1264 # Offset: 2958
.Ltmp1263:
    00000b94: 	movq	0x8(%rsp), %rax
    00000b99: 	movq	%rax, 0x20(%rsp)
    00000b9e: 	cmpq	$0xf, %rax
    00000ba2: 	ja	.Ltmp1265 # Offset: 2978
    00000ba8: 	cmpq	$0x1, 0x8(%rsp)
    00000bae: 	jne	.Ltmp1266 # Offset: 2990
    00000bb4: 	movq	0x18(%rsp), %rax
    00000bb9: 	movzbl	(%rax), %eax
    00000bbc: 	movb	%al, 0x10(%r13)
.Ltmp1384:
    00000bc0: 	movq	0x8(%rsp), %rax
    00000bc5: 	movq	%rax, 0x8(%r13)
    00000bc9: 	movb	$0x0, (%rdi,%rax)
    00000bcd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bd4: 	addq	$0x20, %rax
    00000bd8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1365:
    00000bdf: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000be6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bed: 	je	.Ltmp1267 # Offset: 3053
.Ltmp1364:
    00000bf3: 	movq	-0x20(%rax), %r13
    00000bf7: 	callq	clock@PLT # Offset: 3063
    00000bfc: 	pxor	%xmm0, %xmm0
    00000c00: 	movq	%rax, end_time(%rip)
    00000c07: 	movq	%r13, %rdi
    00000c0a: 	subq	start_time(%rip), %rax
    00000c11: 	cvtsi2sd	%rax, %xmm0
    00000c16: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000c1e: 	callq	_Z13record_resultdPKc # Offset: 3102
    00000c23: 	movq	0x60(%rsp), %rdi
    00000c28: 	cmpq	%r14, %rdi
    00000c2b: 	je	.Ltmp1268 # Offset: 3115
    00000c2d: 	movq	0x70(%rsp), %rax
    00000c32: 	leaq	0x1(%rax), %rsi
    00000c36: 	callq	_ZdlPvm@PLT # Offset: 3126
.Ltmp1268:
    00000c3b: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000c42: 	movq	%r15, %rsi
    00000c45: 	movq	%r12, %rdi
    00000c48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3144
    00000c4d: 	callq	clock@PLT # Offset: 3149
    00000c52: 	movl	iterations(%rip), %ecx
    00000c58: 	xorl	%r13d, %r13d
    00000c5b: 	movq	%rax, start_time(%rip)
    00000c62: 	testl	%ecx, %ecx
    00000c64: 	jle	.Ltmp1269 # Offset: 3172
    00000c66: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1272:
    00000c70: 	movq	%rbp, %rax
    00000c73: 	pxor	%xmm0, %xmm0
    00000c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1270:
    00000c80: 	paddq	(%rax), %xmm0
    00000c84: 	addq	$0x10, %rax
    00000c88: 	cmpq	%rbx, %rax
    00000c8b: 	jne	.Ltmp1270 # Offset: 3211
    00000c8d: 	cvttsd2si	init_value(%rip), %rdx
    00000c96: 	movdqa	%xmm0, %xmm1
    00000c9a: 	psrldq	$0x8, %xmm1
    00000c9f: 	paddq	%xmm1, %xmm0
    00000ca3: 	movq	%xmm0, %rax
    00000ca8: 	imulq	$0x1f40, %rdx, %rdx
    00000caf: 	cmpq	%rax, %rdx
    00000cb2: 	je	.Ltmp1271 # Offset: 3250
    00000cb4: 	movl	current_test(%rip), %edx
    00000cba: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000cc1: 	movl	$0x1, %edi
    00000cc6: 	xorl	%eax, %eax
    00000cc8: 	callq	__printf_chk@PLT # Offset: 3272
    00000ccd: 	movl	iterations(%rip), %ecx
.Ltmp1271:
    00000cd3: 	addl	$0x1, %r13d
    00000cd7: 	cmpl	%ecx, %r13d
    00000cda: 	jl	.Ltmp1272 # Offset: 3290
.Ltmp1269:
    00000cdc: 	movq	%r12, %rdi
    00000cdf: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3295
    00000ce4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ceb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000cf2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cf9: 	je	.Ltmp1273 # Offset: 3321
.Ltmp1363:
    00000cff: 	movq	-0x20(%rax), %r13
    00000d03: 	callq	clock@PLT # Offset: 3331
    00000d08: 	pxor	%xmm0, %xmm0
    00000d0c: 	movq	%rax, end_time(%rip)
    00000d13: 	movq	%r13, %rdi
    00000d16: 	subq	start_time(%rip), %rax
    00000d1d: 	cvtsi2sd	%rax, %xmm0
    00000d22: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d2a: 	callq	_Z13record_resultdPKc # Offset: 3370
    00000d2f: 	movq	0x60(%rsp), %rdi
    00000d34: 	cmpq	%r14, %rdi
    00000d37: 	je	.Ltmp1274 # Offset: 3383
    00000d39: 	movq	0x70(%rsp), %rax
    00000d3e: 	leaq	0x1(%rax), %rsi
    00000d42: 	callq	_ZdlPvm@PLT # Offset: 3394
.Ltmp1274:
    00000d47: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000d4e: 	movq	%r15, %rsi
    00000d51: 	movq	%r12, %rdi
    00000d54: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3412
    00000d59: 	callq	clock@PLT # Offset: 3417
    00000d5e: 	movl	iterations(%rip), %ecx
    00000d64: 	xorl	%r13d, %r13d
    00000d67: 	movq	%rax, start_time(%rip)
    00000d6e: 	testl	%ecx, %ecx
    00000d70: 	jle	.Ltmp1275 # Offset: 3440
    00000d72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1278:
    00000d78: 	movq	%rbp, %rax
    00000d7b: 	pxor	%xmm0, %xmm0
    00000d7f: 	nop # Size: 1
.Ltmp1276:
    00000d80: 	paddq	(%rax), %xmm0
    00000d84: 	addq	$0x10, %rax
    00000d88: 	cmpq	%rbx, %rax
    00000d8b: 	jne	.Ltmp1276 # Offset: 3467
    00000d8d: 	cvttsd2si	init_value(%rip), %rdx
    00000d96: 	movdqa	%xmm0, %xmm1
    00000d9a: 	psrldq	$0x8, %xmm1
    00000d9f: 	paddq	%xmm1, %xmm0
    00000da3: 	movq	%xmm0, %rax
    00000da8: 	imulq	$0x1f40, %rdx, %rdx
    00000daf: 	cmpq	%rax, %rdx
    00000db2: 	je	.Ltmp1277 # Offset: 3506
    00000db4: 	movl	current_test(%rip), %edx
    00000dba: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000dc1: 	movl	$0x1, %edi
    00000dc6: 	xorl	%eax, %eax
    00000dc8: 	callq	__printf_chk@PLT # Offset: 3528
    00000dcd: 	movl	iterations(%rip), %ecx
.Ltmp1277:
    00000dd3: 	addl	$0x1, %r13d
    00000dd7: 	cmpl	%ecx, %r13d
    00000dda: 	jl	.Ltmp1278 # Offset: 3546
.Ltmp1275:
    00000ddc: 	movq	%r12, %rdi
    00000ddf: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3551
    00000de4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000deb: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000df2: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000df9: 	je	.Ltmp1279 # Offset: 3577
.Ltmp1356:
    00000dff: 	movq	-0x20(%rax), %r13
    00000e03: 	callq	clock@PLT # Offset: 3587
    00000e08: 	pxor	%xmm0, %xmm0
    00000e0c: 	movq	%rax, end_time(%rip)
    00000e13: 	movq	%r13, %rdi
    00000e16: 	subq	start_time(%rip), %rax
    00000e1d: 	cvtsi2sd	%rax, %xmm0
    00000e22: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000e2a: 	callq	_Z13record_resultdPKc # Offset: 3626
    00000e2f: 	movq	0x60(%rsp), %rdi
    00000e34: 	cmpq	%r14, %rdi
    00000e37: 	je	.Ltmp1280 # Offset: 3639
    00000e39: 	movq	0x70(%rsp), %rax
    00000e3e: 	leaq	0x1(%rax), %rsi
    00000e42: 	callq	_ZdlPvm@PLT # Offset: 3650
.Ltmp1280:
    00000e47: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000e4e: 	movq	%r15, %rsi
    00000e51: 	movq	%r12, %rdi
    00000e54: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3668
    00000e59: 	callq	clock@PLT # Offset: 3673
    00000e5e: 	movl	iterations(%rip), %ecx
    00000e64: 	xorl	%r13d, %r13d
    00000e67: 	movq	%rax, start_time(%rip)
    00000e6e: 	testl	%ecx, %ecx
    00000e70: 	jle	.Ltmp1281 # Offset: 3696
    00000e72: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1284:
    00000e78: 	movq	%rbp, %rax
    00000e7b: 	pxor	%xmm0, %xmm0
    00000e7f: 	nop # Size: 1
.Ltmp1282:
    00000e80: 	paddq	(%rax), %xmm0
    00000e84: 	addq	$0x10, %rax
    00000e88: 	cmpq	%rax, %rbx
    00000e8b: 	jne	.Ltmp1282 # Offset: 3723
    00000e8d: 	cvttsd2si	init_value(%rip), %rdx
    00000e96: 	movdqa	%xmm0, %xmm1
    00000e9a: 	psrldq	$0x8, %xmm1
    00000e9f: 	paddq	%xmm1, %xmm0
    00000ea3: 	movq	%xmm0, %rax
    00000ea8: 	imulq	$0x1f40, %rdx, %rdx
    00000eaf: 	cmpq	%rax, %rdx
    00000eb2: 	je	.Ltmp1283 # Offset: 3762
    00000eb4: 	movl	current_test(%rip), %edx
    00000eba: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000ec1: 	movl	$0x1, %edi
    00000ec6: 	xorl	%eax, %eax
    00000ec8: 	callq	__printf_chk@PLT # Offset: 3784
    00000ecd: 	movl	iterations(%rip), %ecx
.Ltmp1283:
    00000ed3: 	addl	$0x1, %r13d
    00000ed7: 	cmpl	%ecx, %r13d
    00000eda: 	jl	.Ltmp1284 # Offset: 3802
.Ltmp1281:
    00000edc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000ee3: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000eea: 	subq	$0x20, %rax
    00000eee: 	cmpq	%rax, %r13
    00000ef1: 	je	.Ltmp1285 # Offset: 3825
    00000ef7: 	leaq	0x10(%r13), %rdi
    00000efb: 	movq	0x68(%rsp), %rcx
    00000f00: 	movq	%rdi, (%r13)
    00000f04: 	movq	0x60(%rsp), %rsi
    00000f09: 	movq	%rcx, 0x8(%rsp)
    00000f0e: 	movq	%rsi, %rax
    00000f11: 	movq	%rsi, 0x18(%rsp)
    00000f16: 	addq	%rcx, %rax
    00000f19: 	je	.Ltmp1286 # Offset: 3865
    00000f1b: 	testq	%rsi, %rsi
    00000f1e: 	je	.Ltmp1287 # Offset: 3870
.Ltmp1286:
    00000f24: 	movq	0x8(%rsp), %rax
    00000f29: 	movq	%rax, 0x20(%rsp)
    00000f2e: 	cmpq	$0xf, %rax
    00000f32: 	ja	.Ltmp1288 # Offset: 3890
    00000f38: 	cmpq	$0x1, 0x8(%rsp)
    00000f3e: 	jne	.Ltmp1289 # Offset: 3902
    00000f44: 	movq	0x18(%rsp), %rax
    00000f49: 	movzbl	(%rax), %eax
    00000f4c: 	movb	%al, 0x10(%r13)
.Ltmp1379:
    00000f50: 	movq	0x8(%rsp), %rax
    00000f55: 	movq	%rax, 0x8(%r13)
    00000f59: 	movb	$0x0, (%rdi,%rax)
    00000f5d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f64: 	addq	$0x20, %rax
    00000f68: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1355:
    00000f6f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000f76: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f7d: 	je	.Ltmp1290 # Offset: 3965
.Ltmp1354:
    00000f83: 	movq	-0x20(%rax), %r13
    00000f87: 	callq	clock@PLT # Offset: 3975
    00000f8c: 	pxor	%xmm0, %xmm0
    00000f90: 	movq	%rax, end_time(%rip)
    00000f97: 	movq	%r13, %rdi
    00000f9a: 	subq	start_time(%rip), %rax
    00000fa1: 	cvtsi2sd	%rax, %xmm0
    00000fa6: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000fae: 	callq	_Z13record_resultdPKc # Offset: 4014
    00000fb3: 	movq	0x60(%rsp), %rdi
    00000fb8: 	cmpq	%r14, %rdi
    00000fbb: 	je	.Ltmp1291 # Offset: 4027
    00000fbd: 	movq	0x70(%rsp), %rax
    00000fc2: 	leaq	0x1(%rax), %rsi
    00000fc6: 	callq	_ZdlPvm@PLT # Offset: 4038
.Ltmp1291:
    00000fcb: 	leaq	DATAat0x1a27b(%rip), %rdx
    00000fd2: 	movq	%r15, %rsi
    00000fd5: 	movq	%r12, %rdi
    00000fd8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4056
    00000fdd: 	callq	clock@PLT # Offset: 4061
    00000fe2: 	movl	iterations(%rip), %ecx
    00000fe8: 	xorl	%r13d, %r13d
    00000feb: 	movq	%rax, start_time(%rip)
    00000ff2: 	testl	%ecx, %ecx
    00000ff4: 	jle	.Ltmp1292 # Offset: 4084
    00000ff6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1295:
    00001000: 	movq	%rbp, %rax
    00001003: 	pxor	%xmm0, %xmm0
    00001007: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1293:
    00001010: 	paddq	(%rax), %xmm0
    00001014: 	addq	$0x10, %rax
    00001018: 	cmpq	%rbx, %rax
    0000101b: 	jne	.Ltmp1293 # Offset: 4123
    0000101d: 	cvttsd2si	init_value(%rip), %rdx
    00001026: 	movdqa	%xmm0, %xmm1
    0000102a: 	psrldq	$0x8, %xmm1
    0000102f: 	paddq	%xmm1, %xmm0
    00001033: 	movq	%xmm0, %rax
    00001038: 	imulq	$0x1f40, %rdx, %rdx
    0000103f: 	cmpq	%rax, %rdx
    00001042: 	je	.Ltmp1294 # Offset: 4162
    00001044: 	movl	current_test(%rip), %edx
    0000104a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001051: 	movl	$0x1, %edi
    00001056: 	xorl	%eax, %eax
    00001058: 	callq	__printf_chk@PLT # Offset: 4184
    0000105d: 	movl	iterations(%rip), %ecx
.Ltmp1294:
    00001063: 	addl	$0x1, %r13d
    00001067: 	cmpl	%ecx, %r13d
    0000106a: 	jl	.Ltmp1295 # Offset: 4202
.Ltmp1292:
    0000106c: 	movq	%r12, %rdi
    0000106f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4207
    00001074: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000107b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001082: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001089: 	je	.Ltmp1296 # Offset: 4233
.Ltmp1353:
    0000108f: 	movq	-0x20(%rax), %r13
    00001093: 	callq	clock@PLT # Offset: 4243
    00001098: 	pxor	%xmm0, %xmm0
    0000109c: 	movq	%rax, end_time(%rip)
    000010a3: 	movq	%r13, %rdi
    000010a6: 	subq	start_time(%rip), %rax
    000010ad: 	cvtsi2sd	%rax, %xmm0
    000010b2: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010ba: 	callq	_Z13record_resultdPKc # Offset: 4282
    000010bf: 	movq	0x60(%rsp), %rdi
    000010c4: 	cmpq	%r14, %rdi
    000010c7: 	je	.Ltmp1297 # Offset: 4295
    000010c9: 	movq	0x70(%rsp), %rax
    000010ce: 	leaq	0x1(%rax), %rsi
    000010d2: 	callq	_ZdlPvm@PLT # Offset: 4306
.Ltmp1297:
    000010d7: 	leaq	DATAat0x1a28b(%rip), %rdx
    000010de: 	movq	%r15, %rsi
    000010e1: 	movq	%r12, %rdi
    000010e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4324
    000010e9: 	callq	clock@PLT # Offset: 4329
    000010ee: 	movl	iterations(%rip), %ecx
    000010f4: 	xorl	%r13d, %r13d
    000010f7: 	movq	%rax, start_time(%rip)
    000010fe: 	testl	%ecx, %ecx
    00001100: 	jle	.Ltmp1298 # Offset: 4352
    00001102: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1301:
    00001108: 	movq	%rbp, %rax
    0000110b: 	pxor	%xmm0, %xmm0
    0000110f: 	nop # Size: 1
.Ltmp1299:
    00001110: 	paddq	(%rax), %xmm0
    00001114: 	addq	$0x10, %rax
    00001118: 	cmpq	%rax, %rbx
    0000111b: 	jne	.Ltmp1299 # Offset: 4379
    0000111d: 	cvttsd2si	init_value(%rip), %rdx
    00001126: 	movdqa	%xmm0, %xmm1
    0000112a: 	psrldq	$0x8, %xmm1
    0000112f: 	paddq	%xmm1, %xmm0
    00001133: 	movq	%xmm0, %rax
    00001138: 	imulq	$0x1f40, %rdx, %rdx
    0000113f: 	cmpq	%rax, %rdx
    00001142: 	je	.Ltmp1300 # Offset: 4418
    00001144: 	movl	current_test(%rip), %edx
    0000114a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001151: 	movl	$0x1, %edi
    00001156: 	xorl	%eax, %eax
    00001158: 	callq	__printf_chk@PLT # Offset: 4440
    0000115d: 	movl	iterations(%rip), %ecx
.Ltmp1300:
    00001163: 	addl	$0x1, %r13d
    00001167: 	cmpl	%ecx, %r13d
    0000116a: 	jl	.Ltmp1301 # Offset: 4458
.Ltmp1298:
    0000116c: 	movq	%r12, %rdi
    0000116f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4463
    00001174: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000117b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001182: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001189: 	je	.Ltmp1302 # Offset: 4489
.Ltmp1352:
    0000118f: 	movq	-0x20(%rax), %r13
    00001193: 	callq	clock@PLT # Offset: 4499
    00001198: 	pxor	%xmm0, %xmm0
    0000119c: 	movq	%rax, end_time(%rip)
    000011a3: 	movq	%r13, %rdi
    000011a6: 	subq	start_time(%rip), %rax
    000011ad: 	cvtsi2sd	%rax, %xmm0
    000011b2: 	divsd	DATAat0x1a318(%rip), %xmm0
    000011ba: 	callq	_Z13record_resultdPKc # Offset: 4538
    000011bf: 	movq	0x60(%rsp), %rdi
    000011c4: 	cmpq	%r14, %rdi
    000011c7: 	je	.Ltmp1303 # Offset: 4551
    000011c9: 	movq	0x70(%rsp), %rax
    000011ce: 	leaq	0x1(%rax), %rsi
    000011d2: 	callq	_ZdlPvm@PLT # Offset: 4562
.Ltmp1303:
    000011d7: 	leaq	DATAat0x1a29b(%rip), %rdx
    000011de: 	movq	%r15, %rsi
    000011e1: 	movq	%r12, %rdi
    000011e4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4580
    000011e9: 	callq	clock@PLT # Offset: 4585
    000011ee: 	movl	iterations(%rip), %ecx
    000011f4: 	xorl	%r13d, %r13d
    000011f7: 	movq	%rax, start_time(%rip)
    000011fe: 	testl	%ecx, %ecx
    00001200: 	jle	.Ltmp1304 # Offset: 4608
    00001202: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1307:
    00001208: 	movq	%rbp, %rax
    0000120b: 	pxor	%xmm0, %xmm0
    0000120f: 	nop # Size: 1
.Ltmp1305:
    00001210: 	paddq	(%rax), %xmm0
    00001214: 	addq	$0x10, %rax
    00001218: 	cmpq	%rbx, %rax
    0000121b: 	jne	.Ltmp1305 # Offset: 4635
    0000121d: 	cvttsd2si	init_value(%rip), %rdx
    00001226: 	movdqa	%xmm0, %xmm1
    0000122a: 	psrldq	$0x8, %xmm1
    0000122f: 	paddq	%xmm1, %xmm0
    00001233: 	movq	%xmm0, %rax
    00001238: 	imulq	$0x1f40, %rdx, %rdx
    0000123f: 	cmpq	%rax, %rdx
    00001242: 	je	.Ltmp1306 # Offset: 4674
    00001244: 	movl	current_test(%rip), %edx
    0000124a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001251: 	movl	$0x1, %edi
    00001256: 	xorl	%eax, %eax
    00001258: 	callq	__printf_chk@PLT # Offset: 4696
    0000125d: 	movl	iterations(%rip), %ecx
.Ltmp1306:
    00001263: 	addl	$0x1, %r13d
    00001267: 	cmpl	%ecx, %r13d
    0000126a: 	jl	.Ltmp1307 # Offset: 4714
.Ltmp1304:
    0000126c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001273: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000127a: 	subq	$0x20, %rax
    0000127e: 	cmpq	%rax, %r13
    00001281: 	je	.Ltmp1308 # Offset: 4737
    00001287: 	leaq	0x10(%r13), %rdi
    0000128b: 	movq	0x68(%rsp), %rcx
    00001290: 	movq	%rdi, (%r13)
    00001294: 	movq	0x60(%rsp), %rsi
    00001299: 	movq	%rcx, 0x8(%rsp)
    0000129e: 	movq	%rsi, %rax
    000012a1: 	movq	%rsi, 0x18(%rsp)
    000012a6: 	addq	%rcx, %rax
    000012a9: 	je	.Ltmp1309 # Offset: 4777
    000012ab: 	testq	%rsi, %rsi
    000012ae: 	je	.Ltmp1310 # Offset: 4782
.Ltmp1309:
    000012b4: 	movq	0x8(%rsp), %rax
    000012b9: 	movq	%rax, 0x20(%rsp)
    000012be: 	cmpq	$0xf, %rax
    000012c2: 	ja	.Ltmp1311 # Offset: 4802
    000012c8: 	cmpq	$0x1, 0x8(%rsp)
    000012ce: 	jne	.Ltmp1312 # Offset: 4814
    000012d4: 	movq	0x18(%rsp), %rax
    000012d9: 	movzbl	(%rax), %eax
    000012dc: 	movb	%al, 0x10(%r13)
.Ltmp1382:
    000012e0: 	movq	0x8(%rsp), %rax
    000012e5: 	movq	%rax, 0x8(%r13)
    000012e9: 	movb	$0x0, (%rdi,%rax)
    000012ed: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012f4: 	addq	$0x20, %rax
    000012f8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1351:
    000012ff: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001306: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000130d: 	je	.Ltmp1313 # Offset: 4877
.Ltmp1350:
    00001313: 	movq	-0x20(%rax), %r13
    00001317: 	callq	clock@PLT # Offset: 4887
    0000131c: 	pxor	%xmm0, %xmm0
    00001320: 	movq	%rax, end_time(%rip)
    00001327: 	movq	%r13, %rdi
    0000132a: 	subq	start_time(%rip), %rax
    00001331: 	cvtsi2sd	%rax, %xmm0
    00001336: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000133e: 	callq	_Z13record_resultdPKc # Offset: 4926
    00001343: 	movq	0x60(%rsp), %rdi
    00001348: 	cmpq	%r14, %rdi
    0000134b: 	je	.Ltmp1314 # Offset: 4939
    0000134d: 	movq	0x70(%rsp), %rax
    00001352: 	leaq	0x1(%rax), %rsi
    00001356: 	callq	_ZdlPvm@PLT # Offset: 4950
.Ltmp1314:
    0000135b: 	leaq	DATAat0x1a2af(%rip), %rdx
    00001362: 	movq	%r15, %rsi
    00001365: 	movq	%r12, %rdi
    00001368: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4968
    0000136d: 	callq	clock@PLT # Offset: 4973
    00001372: 	movl	iterations(%rip), %ecx
    00001378: 	xorl	%r13d, %r13d
    0000137b: 	movq	%rax, start_time(%rip)
    00001382: 	testl	%ecx, %ecx
    00001384: 	jle	.Ltmp1315 # Offset: 4996
    00001386: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1318:
    00001390: 	movq	%rbp, %rax
    00001393: 	pxor	%xmm0, %xmm0
    00001397: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1316:
    000013a0: 	paddq	(%rax), %xmm0
    000013a4: 	addq	$0x10, %rax
    000013a8: 	cmpq	%rax, %rbx
    000013ab: 	jne	.Ltmp1316 # Offset: 5035
    000013ad: 	cvttsd2si	init_value(%rip), %rdx
    000013b6: 	movdqa	%xmm0, %xmm1
    000013ba: 	psrldq	$0x8, %xmm1
    000013bf: 	paddq	%xmm1, %xmm0
    000013c3: 	movq	%xmm0, %rax
    000013c8: 	imulq	$0x1f40, %rdx, %rdx
    000013cf: 	cmpq	%rax, %rdx
    000013d2: 	je	.Ltmp1317 # Offset: 5074
    000013d4: 	movl	current_test(%rip), %edx
    000013da: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000013e1: 	movl	$0x1, %edi
    000013e6: 	xorl	%eax, %eax
    000013e8: 	callq	__printf_chk@PLT # Offset: 5096
    000013ed: 	movl	iterations(%rip), %ecx
.Ltmp1317:
    000013f3: 	addl	$0x1, %r13d
    000013f7: 	cmpl	%ecx, %r13d
    000013fa: 	jl	.Ltmp1318 # Offset: 5114
.Ltmp1315:
    000013fc: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001403: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000140a: 	subq	$0x20, %rax
    0000140e: 	cmpq	%rax, %r13
    00001411: 	je	.Ltmp1319 # Offset: 5137
    00001417: 	leaq	0x10(%r13), %rdi
    0000141b: 	movq	0x68(%rsp), %rcx
    00001420: 	movq	%rdi, (%r13)
    00001424: 	movq	0x60(%rsp), %rsi
    00001429: 	movq	%rcx, 0x8(%rsp)
    0000142e: 	movq	%rsi, %rax
    00001431: 	movq	%rsi, 0x18(%rsp)
    00001436: 	addq	%rcx, %rax
    00001439: 	je	.Ltmp1320 # Offset: 5177
    0000143b: 	testq	%rsi, %rsi
    0000143e: 	je	.Ltmp1321 # Offset: 5182
.Ltmp1320:
    00001444: 	movq	0x8(%rsp), %rax
    00001449: 	movq	%rax, 0x20(%rsp)
    0000144e: 	cmpq	$0xf, %rax
    00001452: 	ja	.Ltmp1322 # Offset: 5202
    00001458: 	cmpq	$0x1, 0x8(%rsp)
    0000145e: 	jne	.Ltmp1323 # Offset: 5214
    00001464: 	movq	0x18(%rsp), %rax
    00001469: 	movzbl	(%rax), %eax
    0000146c: 	movb	%al, 0x10(%r13)
.Ltmp1376:
    00001470: 	movq	0x8(%rsp), %rax
    00001475: 	movq	%rax, 0x8(%r13)
    00001479: 	movb	$0x0, (%rdi,%rax)
    0000147d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001484: 	addq	$0x20, %rax
    00001488: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1349:
    0000148f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001496: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000149d: 	je	.Ltmp1324 # Offset: 5277
.Ltmp1348:
    000014a3: 	movq	-0x20(%rax), %r13
    000014a7: 	callq	clock@PLT # Offset: 5287
    000014ac: 	pxor	%xmm0, %xmm0
    000014b0: 	movq	%rax, end_time(%rip)
    000014b7: 	movq	%r13, %rdi
    000014ba: 	subq	start_time(%rip), %rax
    000014c1: 	cvtsi2sd	%rax, %xmm0
    000014c6: 	divsd	DATAat0x1a318(%rip), %xmm0
    000014ce: 	callq	_Z13record_resultdPKc # Offset: 5326
    000014d3: 	movq	0x60(%rsp), %rdi
    000014d8: 	cmpq	%r14, %rdi
    000014db: 	je	.Ltmp1325 # Offset: 5339
    000014dd: 	movq	0x70(%rsp), %rax
    000014e2: 	leaq	0x1(%rax), %rsi
    000014e6: 	callq	_ZdlPvm@PLT # Offset: 5350
.Ltmp1325:
    000014eb: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000014f2: 	movq	%r15, %rsi
    000014f5: 	movq	%r12, %rdi
    000014f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5368
    000014fd: 	callq	clock@PLT # Offset: 5373
    00001502: 	movl	iterations(%rip), %ecx
    00001508: 	xorl	%r13d, %r13d
    0000150b: 	movq	%rax, start_time(%rip)
    00001512: 	testl	%ecx, %ecx
    00001514: 	jle	.Ltmp1326 # Offset: 5396
    00001516: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1329:
    00001520: 	movq	%rbp, %rax
    00001523: 	pxor	%xmm0, %xmm0
    00001527: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1327:
    00001530: 	paddq	(%rax), %xmm0
    00001534: 	addq	$0x10, %rax
    00001538: 	cmpq	%rbx, %rax
    0000153b: 	jne	.Ltmp1327 # Offset: 5435
    0000153d: 	cvttsd2si	init_value(%rip), %rdx
    00001546: 	movdqa	%xmm0, %xmm1
    0000154a: 	psrldq	$0x8, %xmm1
    0000154f: 	paddq	%xmm1, %xmm0
    00001553: 	movq	%xmm0, %rax
    00001558: 	imulq	$0x1f40, %rdx, %rdx
    0000155f: 	cmpq	%rax, %rdx
    00001562: 	je	.Ltmp1328 # Offset: 5474
    00001564: 	movl	current_test(%rip), %edx
    0000156a: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001571: 	movl	$0x1, %edi
    00001576: 	xorl	%eax, %eax
    00001578: 	callq	__printf_chk@PLT # Offset: 5496
    0000157d: 	movl	iterations(%rip), %ecx
.Ltmp1328:
    00001583: 	addl	$0x1, %r13d
    00001587: 	cmpl	%ecx, %r13d
    0000158a: 	jl	.Ltmp1329 # Offset: 5514
.Ltmp1326:
    0000158c: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001593: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000159a: 	subq	$0x20, %rax
    0000159e: 	cmpq	%rax, %r13
    000015a1: 	je	.Ltmp1330 # Offset: 5537
    000015a7: 	leaq	0x10(%r13), %rdi
    000015ab: 	movq	0x68(%rsp), %rcx
    000015b0: 	movq	%rdi, (%r13)
    000015b4: 	movq	0x60(%rsp), %rsi
    000015b9: 	movq	%rcx, 0x8(%rsp)
    000015be: 	movq	%rsi, %rax
    000015c1: 	movq	%rsi, 0x18(%rsp)
    000015c6: 	addq	%rcx, %rax
    000015c9: 	je	.Ltmp1331 # Offset: 5577
    000015cb: 	testq	%rsi, %rsi
    000015ce: 	je	.Ltmp1332 # Offset: 5582
.Ltmp1331:
    000015d4: 	movq	0x8(%rsp), %rax
    000015d9: 	movq	%rax, 0x20(%rsp)
    000015de: 	cmpq	$0xf, %rax
    000015e2: 	ja	.Ltmp1333 # Offset: 5602
    000015e8: 	cmpq	$0x1, 0x8(%rsp)
    000015ee: 	jne	.Ltmp1334 # Offset: 5614
    000015f4: 	movq	0x18(%rsp), %rax
    000015f9: 	movzbl	(%rax), %eax
    000015fc: 	movb	%al, 0x10(%r13)
.Ltmp1377:
    00001600: 	movq	0x8(%rsp), %rax
    00001605: 	movq	%rax, 0x8(%r13)
    00001609: 	movb	$0x0, (%rdi,%rax)
    0000160d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001614: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000161b: 	addq	$0x20, %rax
    0000161f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001626: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000162d: 	je	.Ltmp1335 # Offset: 5677
.Ltmp1347:
    00001633: 	movq	-0x20(%rax), %r13
    00001637: 	callq	clock@PLT # Offset: 5687
    0000163c: 	pxor	%xmm0, %xmm0
    00001640: 	movq	%rax, end_time(%rip)
    00001647: 	movq	%r13, %rdi
    0000164a: 	subq	start_time(%rip), %rax
    00001651: 	cvtsi2sd	%rax, %xmm0
    00001656: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000165e: 	callq	_Z13record_resultdPKc # Offset: 5726
    00001663: 	movq	0x60(%rsp), %rdi
    00001668: 	cmpq	%r14, %rdi
    0000166b: 	je	.Ltmp1336 # Offset: 5739
    0000166d: 	movq	0x70(%rsp), %rax
    00001672: 	leaq	0x1(%rax), %rsi
    00001676: 	callq	_ZdlPvm@PLT # Offset: 5750
.Ltmp1336:
    0000167b: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001682: 	movq	%r15, %rsi
    00001685: 	movq	%r12, %rdi
    00001688: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5768
    0000168d: 	callq	clock@PLT # Offset: 5773
    00001692: 	movl	iterations(%rip), %ecx
    00001698: 	xorl	%r13d, %r13d
    0000169b: 	movq	%rax, start_time(%rip)
    000016a2: 	testl	%ecx, %ecx
    000016a4: 	jle	.Ltmp1337 # Offset: 5796
    000016a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1340:
    000016b0: 	movq	%rbp, %rax
    000016b3: 	pxor	%xmm0, %xmm0
    000016b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1338:
    000016c0: 	paddq	(%rax), %xmm0
    000016c4: 	addq	$0x10, %rax
    000016c8: 	cmpq	%rbx, %rax
    000016cb: 	jne	.Ltmp1338 # Offset: 5835
    000016cd: 	cvttsd2si	init_value(%rip), %rdx
    000016d6: 	movdqa	%xmm0, %xmm1
    000016da: 	psrldq	$0x8, %xmm1
    000016df: 	paddq	%xmm1, %xmm0
    000016e3: 	movq	%xmm0, %rax
    000016e8: 	imulq	$0x1f40, %rdx, %rdx
    000016ef: 	cmpq	%rax, %rdx
    000016f2: 	je	.Ltmp1339 # Offset: 5874
    000016f4: 	movl	current_test(%rip), %edx
    000016fa: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001701: 	movl	$0x1, %edi
    00001706: 	xorl	%eax, %eax
    00001708: 	callq	__printf_chk@PLT # Offset: 5896
    0000170d: 	movl	iterations(%rip), %ecx
.Ltmp1339:
    00001713: 	addl	$0x1, %r13d
    00001717: 	cmpl	%ecx, %r13d
    0000171a: 	jl	.Ltmp1340 # Offset: 5914
.Ltmp1337:
    0000171c: 	movq	%r12, %rdi
    0000171f: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5919
    00001724: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000172b: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001732: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001739: 	je	.Ltmp1341 # Offset: 5945
.Ltmp1358:
    0000173f: 	movq	-0x20(%rax), %rbp
    00001743: 	callq	clock@PLT # Offset: 5955
    00001748: 	pxor	%xmm0, %xmm0
    0000174c: 	movq	%rax, end_time(%rip)
    00001753: 	movq	%rbp, %rdi
    00001756: 	subq	start_time(%rip), %rax
    0000175d: 	cvtsi2sd	%rax, %xmm0
    00001762: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000176a: 	callq	_Z13record_resultdPKc # Offset: 5994
    0000176f: 	movq	0x60(%rsp), %rdi
    00001774: 	cmpq	%r14, %rdi
    00001777: 	je	.Ltmp1342 # Offset: 6007
    00001779: 	movq	0x70(%rsp), %rax
    0000177e: 	leaq	0x1(%rax), %rsi
    00001782: 	callq	_ZdlPvm@PLT # Offset: 6018
.Ltmp1342:
    00001787: 	leaq	DATAat0x1a2ee(%rip), %rdx
    0000178e: 	movq	%r15, %rsi
    00001791: 	movq	%r12, %rdi
    00001794: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6036
    00001799: 	movl	iterations(%rip), %edx
    0000179f: 	movq	0x60(%rsp), %rdi
    000017a4: 	xorl	%r8d, %r8d
    000017a7: 	xorl	%ecx, %ecx
    000017a9: 	movl	$0x1f40, %esi
    000017ae: 	callq	_Z9summarizePKciiii # Offset: 6062
    000017b3: 	movq	0x60(%rsp), %rdi
    000017b8: 	cmpq	%r14, %rdi
    000017bb: 	je	.Ltmp1343 # Offset: 6075
    000017bd: 	movq	0x70(%rsp), %rax
    000017c2: 	leaq	0x1(%rax), %rsi
    000017c6: 	callq	_ZdlPvm@PLT # Offset: 6086
.Ltmp1343:
    000017cb: 	movq	0x40(%rsp), %rdi
    000017d0: 	cmpq	0x10(%rsp), %rdi
    000017d5: 	je	.Ltmp1344 # Offset: 6101
    000017d7: 	movq	0x50(%rsp), %rax
    000017dc: 	leaq	0x1(%rax), %rsi
    000017e0: 	callq	_ZdlPvm@PLT # Offset: 6112
.Ltmp1344:
    000017e5: 	movq	0xfa88(%rsp), %rax
    000017ed: 	subq	%fs:0x28, %rax
    000017f6: 	jne	.Ltmp1345 # Offset: 6134
    000017fc: 	addq	$0xfa98, %rsp
    00001803: 	popq	%rbx
    00001804: 	popq	%rbp
    00001805: 	popq	%r12
    00001807: 	popq	%r13
    00001809: 	popq	%r14
    0000180b: 	popq	%r15
    0000180d: 	retq # Offset: 6157
.Ltmp1198:
    0000180e: 	movq	(%rsp), %rsi
    00001812: 	xorl	%edx, %edx
    00001814: 	movq	%r13, %rdi
    00001817: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6167
    0000181c: 	movq	%rax, (%r13)
    00001820: 	movq	%rax, %rdi
    00001823: 	movq	0x20(%rsp), %rax
    00001828: 	movq	%rax, 0x10(%r13)
.Ltmp1383:
    0000182c: 	movq	0x8(%rsp), %rsi
    00001831: 	movq	%r14, %rdx
    00001834: 	callq	memcpy@PLT # Offset: 6196
    00001839: 	movq	0x20(%rsp), %r14
    0000183e: 	movq	(%r13), %rdi
    00001842: 	jmp	.Ltmp1346 # Offset: 6210
.Ltmp1330:
    00001847: 	movq	%r12, %rsi
    0000184a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001851: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6225
    00001856: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000185d: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001864: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000186b: 	jne	.Ltmp1347 # Offset: 6251
.Ltmp1335:
    00001871: 	movq	-0x8(%rdx), %rax
    00001875: 	addq	$0x200, %rax
    0000187b: 	jmp	.Ltmp1347 # Offset: 6267
.Ltmp1324:
    00001880: 	movq	-0x8(%rdx), %rax
    00001884: 	addq	$0x200, %rax
    0000188a: 	jmp	.Ltmp1348 # Offset: 6282
.Ltmp1319:
    0000188f: 	movq	%r12, %rsi
    00001892: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001899: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6297
    0000189e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018a5: 	jmp	.Ltmp1349 # Offset: 6309
.Ltmp1313:
    000018aa: 	movq	-0x8(%rdx), %rax
    000018ae: 	addq	$0x200, %rax
    000018b4: 	jmp	.Ltmp1350 # Offset: 6324
.Ltmp1308:
    000018b9: 	movq	%r12, %rsi
    000018bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000018c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6339
    000018c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018cf: 	jmp	.Ltmp1351 # Offset: 6351
.Ltmp1302:
    000018d4: 	movq	-0x8(%rdx), %rax
    000018d8: 	addq	$0x200, %rax
    000018de: 	jmp	.Ltmp1352 # Offset: 6366
.Ltmp1296:
    000018e3: 	movq	-0x8(%rdx), %rax
    000018e7: 	addq	$0x200, %rax
    000018ed: 	jmp	.Ltmp1353 # Offset: 6381
.Ltmp1290:
    000018f2: 	movq	-0x8(%rdx), %rax
    000018f6: 	addq	$0x200, %rax
    000018fc: 	jmp	.Ltmp1354 # Offset: 6396
.Ltmp1285:
    00001901: 	movq	%r12, %rsi
    00001904: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000190b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6411
    00001910: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001917: 	jmp	.Ltmp1355 # Offset: 6423
.Ltmp1279:
    0000191c: 	movq	-0x8(%rdx), %rax
    00001920: 	addq	$0x200, %rax
    00001926: 	jmp	.Ltmp1356 # Offset: 6438
.Ltmp1195:
    0000192b: 	movq	%r12, %rsi
    0000192e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001935: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6453
    0000193a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001941: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001948: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000194f: 	jne	.Ltmp1357 # Offset: 6479
.Ltmp1200:
    00001955: 	movq	-0x8(%rdx), %rax
    00001959: 	addq	$0x200, %rax
    0000195f: 	jmp	.Ltmp1357 # Offset: 6495
.Ltmp1341:
    00001964: 	movq	-0x8(%rdx), %rax
    00001968: 	addq	$0x200, %rax
    0000196e: 	jmp	.Ltmp1358 # Offset: 6510
.Ltmp1223:
    00001973: 	movq	%r12, %rsi
    00001976: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000197d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6525
    00001982: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001989: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001990: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001997: 	jne	.Ltmp1359 # Offset: 6551
.Ltmp1228:
    0000199d: 	movq	-0x8(%rdx), %rax
    000019a1: 	addq	$0x200, %rax
    000019a7: 	jmp	.Ltmp1359 # Offset: 6567
.Ltmp1217:
    000019ac: 	movq	-0x8(%rdx), %rax
    000019b0: 	addq	$0x200, %rax
    000019b6: 	jmp	.Ltmp1360 # Offset: 6582
.Ltmp1211:
    000019bb: 	movq	-0x8(%rdx), %rax
    000019bf: 	addq	$0x200, %rax
    000019c5: 	jmp	.Ltmp1361 # Offset: 6597
.Ltmp1206:
    000019ca: 	movq	%r12, %rsi
    000019cd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019d4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6612
    000019d9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019e0: 	jmp	.Ltmp1362 # Offset: 6624
.Ltmp1273:
    000019e5: 	movq	-0x8(%rdx), %rax
    000019e9: 	addq	$0x200, %rax
    000019ef: 	jmp	.Ltmp1363 # Offset: 6639
.Ltmp1267:
    000019f4: 	movq	-0x8(%rdx), %rax
    000019f8: 	addq	$0x200, %rax
    000019fe: 	jmp	.Ltmp1364 # Offset: 6654
.Ltmp1262:
    00001a03: 	movq	%r12, %rsi
    00001a06: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a0d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6669
    00001a12: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a19: 	jmp	.Ltmp1365 # Offset: 6681
.Ltmp1256:
    00001a1e: 	movq	-0x8(%rdx), %rax
    00001a22: 	addq	$0x200, %rax
    00001a28: 	jmp	.Ltmp1366 # Offset: 6696
.Ltmp1251:
    00001a2d: 	movq	%r12, %rsi
    00001a30: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a37: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6711
    00001a3c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a43: 	jmp	.Ltmp1367 # Offset: 6723
.Ltmp1245:
    00001a48: 	movq	-0x8(%rdx), %rax
    00001a4c: 	addq	$0x200, %rax
    00001a52: 	jmp	.Ltmp1368 # Offset: 6738
.Ltmp1239:
    00001a57: 	movq	-0x8(%rdx), %rax
    00001a5b: 	addq	$0x200, %rax
    00001a61: 	jmp	.Ltmp1369 # Offset: 6753
.Ltmp1234:
    00001a66: 	movq	%r12, %rsi
    00001a69: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a70: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6768
    00001a75: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a7c: 	jmp	.Ltmp1370 # Offset: 6780
.Ltmp1227:
    00001a81: 	cmpq	$0x0, 0x8(%rsp)
    00001a87: 	je	.Ltmp1371 # Offset: 6791
.Ltmp1386:
    00001a8d: 	movq	0x8(%rsp), %rdx
    00001a92: 	movq	0x18(%rsp), %rsi
    00001a97: 	callq	memcpy@PLT # Offset: 6807
    00001a9c: 	movq	0x20(%rsp), %rax
    00001aa1: 	movq	(%r13), %rdi
    00001aa5: 	movq	%rax, 0x8(%rsp)
    00001aaa: 	jmp	.Ltmp1371 # Offset: 6826
.Ltmp1255:
    00001aaf: 	cmpq	$0x0, 0x8(%rsp)
    00001ab5: 	je	.Ltmp1372 # Offset: 6837
    00001abb: 	jmp	.Ltmp1373 # Offset: 6843
.Ltmp1238:
    00001ac0: 	cmpq	$0x0, 0x8(%rsp)
    00001ac6: 	je	.Ltmp1374 # Offset: 6854
    00001acc: 	jmp	.Ltmp1375 # Offset: 6860
    00001ad1: 	nopl	(%rax) # Size: 7
.Ltmp1323:
    00001ad8: 	cmpq	$0x0, 0x8(%rsp)
    00001ade: 	je	.Ltmp1376 # Offset: 6878
.Ltmp1388:
    00001ae4: 	movq	0x8(%rsp), %rdx
    00001ae9: 	movq	0x18(%rsp), %rsi
    00001aee: 	callq	memcpy@PLT # Offset: 6894
    00001af3: 	movq	0x20(%rsp), %rax
    00001af8: 	movq	(%r13), %rdi
    00001afc: 	movq	%rax, 0x8(%rsp)
    00001b01: 	jmp	.Ltmp1376 # Offset: 6913
.Ltmp1334:
    00001b06: 	cmpq	$0x0, 0x8(%rsp)
    00001b0c: 	je	.Ltmp1377 # Offset: 6924
    00001b12: 	jmp	.Ltmp1378 # Offset: 6930
    00001b17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1289:
    00001b20: 	cmpq	$0x0, 0x8(%rsp)
    00001b26: 	je	.Ltmp1379 # Offset: 6950
.Ltmp1387:
    00001b2c: 	movq	0x8(%rsp), %rdx
    00001b31: 	movq	0x18(%rsp), %rsi
    00001b36: 	callq	memcpy@PLT # Offset: 6966
    00001b3b: 	movq	0x20(%rsp), %rax
    00001b40: 	movq	(%r13), %rdi
    00001b44: 	movq	%rax, 0x8(%rsp)
    00001b49: 	jmp	.Ltmp1379 # Offset: 6985
.Ltmp1210:
    00001b4e: 	cmpq	$0x0, 0x8(%rsp)
    00001b54: 	je	.Ltmp1380 # Offset: 6996
    00001b5a: 	jmp	.Ltmp1381 # Offset: 7002
    00001b5f: 	nop # Size: 1
.Ltmp1312:
    00001b60: 	cmpq	$0x0, 0x8(%rsp)
    00001b66: 	je	.Ltmp1382 # Offset: 7014
.Ltmp1389:
    00001b6c: 	movq	0x8(%rsp), %rdx
    00001b71: 	movq	0x18(%rsp), %rsi
    00001b76: 	callq	memcpy@PLT # Offset: 7030
    00001b7b: 	movq	0x20(%rsp), %rax
    00001b80: 	movq	(%r13), %rdi
    00001b84: 	movq	%rax, 0x8(%rsp)
    00001b89: 	jmp	.Ltmp1382 # Offset: 7049
.Ltmp1199:
    00001b8e: 	testq	%r14, %r14
    00001b91: 	je	.Ltmp1346 # Offset: 7057
    00001b97: 	jmp	.Ltmp1383 # Offset: 7063
    00001b9c: 	nopl	(%rax) # Size: 4
.Ltmp1266:
    00001ba0: 	cmpq	$0x0, 0x8(%rsp)
    00001ba6: 	je	.Ltmp1384 # Offset: 7078
    00001bac: 	jmp	.Ltmp1385 # Offset: 7084
    00001bae: 	nop # Size: 2
.Ltmp1265:
    00001bb0: 	movq	(%rsp), %rsi
    00001bb4: 	xorl	%edx, %edx
    00001bb6: 	movq	%r13, %rdi
    00001bb9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7097
    00001bbe: 	movq	%rax, (%r13)
    00001bc2: 	movq	%rax, %rdi
    00001bc5: 	movq	0x20(%rsp), %rax
    00001bca: 	movq	%rax, 0x10(%r13)
.Ltmp1385:
    00001bce: 	movq	0x8(%rsp), %rdx
    00001bd3: 	movq	0x18(%rsp), %rsi
    00001bd8: 	callq	memcpy@PLT # Offset: 7128
    00001bdd: 	movq	0x20(%rsp), %rax
    00001be2: 	movq	(%r13), %rdi
    00001be6: 	movq	%rax, 0x8(%rsp)
    00001beb: 	jmp	.Ltmp1384 # Offset: 7147
.Ltmp1209:
    00001bf0: 	movq	(%rsp), %rsi
    00001bf4: 	xorl	%edx, %edx
    00001bf6: 	movq	%r13, %rdi
    00001bf9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7161
    00001bfe: 	movq	%rax, (%r13)
    00001c02: 	movq	%rax, %rdi
    00001c05: 	movq	0x20(%rsp), %rax
    00001c0a: 	movq	%rax, 0x10(%r13)
.Ltmp1381:
    00001c0e: 	movq	0x8(%rsp), %rdx
    00001c13: 	movq	0x18(%rsp), %rsi
    00001c18: 	callq	memcpy@PLT # Offset: 7192
    00001c1d: 	movq	0x20(%rsp), %rax
    00001c22: 	movq	(%r13), %rdi
    00001c26: 	movq	%rax, 0x8(%rsp)
    00001c2b: 	jmp	.Ltmp1380 # Offset: 7211
.Ltmp1254:
    00001c30: 	movq	(%rsp), %rsi
    00001c34: 	xorl	%edx, %edx
    00001c36: 	movq	%r13, %rdi
    00001c39: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7225
    00001c3e: 	movq	%rax, (%r13)
    00001c42: 	movq	%rax, %rdi
    00001c45: 	movq	0x20(%rsp), %rax
    00001c4a: 	movq	%rax, 0x10(%r13)
.Ltmp1373:
    00001c4e: 	movq	0x8(%rsp), %rdx
    00001c53: 	movq	0x18(%rsp), %rsi
    00001c58: 	callq	memcpy@PLT # Offset: 7256
    00001c5d: 	movq	0x20(%rsp), %rax
    00001c62: 	movq	(%r13), %rdi
    00001c66: 	movq	%rax, 0x8(%rsp)
    00001c6b: 	jmp	.Ltmp1372 # Offset: 7275
.Ltmp1237:
    00001c70: 	movq	(%rsp), %rsi
    00001c74: 	xorl	%edx, %edx
    00001c76: 	movq	%r13, %rdi
    00001c79: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7289
    00001c7e: 	movq	%rax, (%r13)
    00001c82: 	movq	%rax, %rdi
    00001c85: 	movq	0x20(%rsp), %rax
    00001c8a: 	movq	%rax, 0x10(%r13)
.Ltmp1375:
    00001c8e: 	movq	0x8(%rsp), %rdx
    00001c93: 	movq	0x18(%rsp), %rsi
    00001c98: 	callq	memcpy@PLT # Offset: 7320
    00001c9d: 	movq	0x20(%rsp), %rax
    00001ca2: 	movq	(%r13), %rdi
    00001ca6: 	movq	%rax, 0x8(%rsp)
    00001cab: 	jmp	.Ltmp1374 # Offset: 7339
.Ltmp1333:
    00001cb0: 	movq	(%rsp), %rsi
    00001cb4: 	xorl	%edx, %edx
    00001cb6: 	movq	%r13, %rdi
    00001cb9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7353
    00001cbe: 	movq	%rax, (%r13)
    00001cc2: 	movq	%rax, %rdi
    00001cc5: 	movq	0x20(%rsp), %rax
    00001cca: 	movq	%rax, 0x10(%r13)
.Ltmp1378:
    00001cce: 	movq	0x8(%rsp), %rdx
    00001cd3: 	movq	0x18(%rsp), %rsi
    00001cd8: 	callq	memcpy@PLT # Offset: 7384
    00001cdd: 	movq	0x20(%rsp), %rax
    00001ce2: 	movq	(%r13), %rdi
    00001ce6: 	movq	%rax, 0x8(%rsp)
    00001ceb: 	jmp	.Ltmp1377 # Offset: 7403
.Ltmp1226:
    00001cf0: 	movq	(%rsp), %rsi
    00001cf4: 	xorl	%edx, %edx
    00001cf6: 	movq	%r13, %rdi
    00001cf9: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7417
    00001cfe: 	movq	%rax, (%r13)
    00001d02: 	movq	%rax, %rdi
    00001d05: 	movq	0x20(%rsp), %rax
    00001d0a: 	movq	%rax, 0x10(%r13)
    00001d0e: 	jmp	.Ltmp1386 # Offset: 7438
.Ltmp1288:
    00001d13: 	movq	(%rsp), %rsi
    00001d17: 	xorl	%edx, %edx
    00001d19: 	movq	%r13, %rdi
    00001d1c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7452
    00001d21: 	movq	%rax, (%r13)
    00001d25: 	movq	%rax, %rdi
    00001d28: 	movq	0x20(%rsp), %rax
    00001d2d: 	movq	%rax, 0x10(%r13)
    00001d31: 	jmp	.Ltmp1387 # Offset: 7473
.Ltmp1322:
    00001d36: 	movq	(%rsp), %rsi
    00001d3a: 	xorl	%edx, %edx
    00001d3c: 	movq	%r13, %rdi
    00001d3f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7487
    00001d44: 	movq	%rax, (%r13)
    00001d48: 	movq	%rax, %rdi
    00001d4b: 	movq	0x20(%rsp), %rax
    00001d50: 	movq	%rax, 0x10(%r13)
    00001d54: 	jmp	.Ltmp1388 # Offset: 7508
.Ltmp1311:
    00001d59: 	movq	(%rsp), %rsi
    00001d5d: 	xorl	%edx, %edx
    00001d5f: 	movq	%r13, %rdi
    00001d62: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7522
    00001d67: 	movq	%rax, (%r13)
    00001d6b: 	movq	%rax, %rdi
    00001d6e: 	movq	0x20(%rsp), %rax
    00001d73: 	movq	%rax, 0x10(%r13)
    00001d77: 	jmp	.Ltmp1389 # Offset: 7543
.Ltmp1208:
    00001d7c: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d83: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7555
.Ltmp1225:
    00001d88: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d8f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7567
.Ltmp1236:
    00001d94: 	leaq	DATAat0x1a158(%rip), %rdi
    00001d9b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7579
.Ltmp1253:
    00001da0: 	leaq	DATAat0x1a158(%rip), %rdi
    00001da7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7591
.Ltmp1264:
    00001dac: 	leaq	DATAat0x1a158(%rip), %rdi
    00001db3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7603
.Ltmp1287:
    00001db8: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dbf: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7615
.Ltmp1310:
    00001dc4: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dcb: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7627
.Ltmp1321:
    00001dd0: 	leaq	DATAat0x1a158(%rip), %rdi
    00001dd7: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7639
.Ltmp1332:
    00001ddc: 	leaq	DATAat0x1a158(%rip), %rdi
    00001de3: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7651
.Ltmp1345:
    00001de8: 	callq	__stack_chk_fail@PLT # Offset: 7656
.Ltmp1197:
    00001ded: 	leaq	DATAat0x1a158(%rip), %rdi
    00001df4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7668
    00001df9: 	endbr64
.Ltmp1391:
    00001dfd: 	movq	%rax, %rbp
    00001e00: 	jmp	.Ltmp1390 # Offset: 7680
    00001e02: 	endbr64
    00001e06: 	jmp	.Ltmp1391 # Offset: 7686
    00001e08: 	endbr64
    00001e0c: 	jmp	.Ltmp1391 # Offset: 7692
    00001e0e: 	endbr64
    00001e12: 	movq	%rax, %rbp
    00001e15: 	jmp	.Ltmp1392 # Offset: 7701
    00001e17: 	endbr64
    00001e1b: 	jmp	.Ltmp1391 # Offset: 7707
    00001e1d: 	endbr64
    00001e21: 	jmp	.Ltmp1391 # Offset: 7713
    00001e23: 	endbr64
    00001e27: 	jmp	.Ltmp1391 # Offset: 7719
    00001e29: 	endbr64
    00001e2d: 	jmp	.Ltmp1391 # Offset: 7725
    00001e2f: 	endbr64
    00001e33: 	jmp	.Ltmp1391 # Offset: 7731
    00001e35: 	endbr64
    00001e39: 	jmp	.Ltmp1391 # Offset: 7737
    00001e3b: 	endbr64
    00001e3f: 	jmp	.Ltmp1391 # Offset: 7743
    00001e41: 	endbr64
    00001e45: 	jmp	.Ltmp1391 # Offset: 7749
.Ltmp1390:
    00001e47: 	movq	0x60(%rsp), %rdi
    00001e4c: 	cmpq	%r14, %rdi
    00001e4f: 	je	.Ltmp1392 # Offset: 7759
.Ltmp1395:
    00001e51: 	movq	0x70(%rsp), %rax
    00001e56: 	leaq	0x1(%rax), %rsi
    00001e5a: 	callq	_ZdlPvm@PLT # Offset: 7770
.Ltmp1392:
    00001e5f: 	movq	0x40(%rsp), %rdi
    00001e64: 	cmpq	0x10(%rsp), %rdi
    00001e69: 	je	.Ltmp1393 # Offset: 7785
    00001e6b: 	movq	0x50(%rsp), %rax
    00001e70: 	leaq	0x1(%rax), %rsi
    00001e74: 	callq	_ZdlPvm@PLT # Offset: 7796
.Ltmp1393:
    00001e79: 	movq	%rbp, %rdi
    00001e7c: 	callq	_Unwind_Resume@PLT # Offset: 7804
    00001e81: 	endbr64
    00001e85: 	jmp	.Ltmp1391 # Offset: 7813
    00001e8a: 	endbr64
    00001e8e: 	jmp	.Ltmp1391 # Offset: 7822
    00001e93: 	endbr64
    00001e97: 	movq	%rax, %rbp
    00001e9a: 	jmp	.Ltmp1394 # Offset: 7834
    00001e9c: 	endbr64
    00001ea0: 	jmp	.Ltmp1391 # Offset: 7840
.Ltmp1394:
    00001ea5: 	movq	0x60(%rsp), %rdi
    00001eaa: 	leaq	0x70(%rsp), %rax
    00001eaf: 	cmpq	%rax, %rdi
    00001eb2: 	jne	.Ltmp1395 # Offset: 7858
    00001eb4: 	jmp	.Ltmp1392 # Offset: 7860
    00001eb6: 	endbr64
    00001eba: 	jmp	.Ltmp1391 # Offset: 7866
    00001ebf: 	endbr64
    00001ec3: 	jmp	.Ltmp1391 # Offset: 7875
    00001ec8: 	endbr64
    00001ecc: 	jmp	.Ltmp1391 # Offset: 7884
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIlEvv"

Binary Function "_Z11TestOneTypeItEvv" after disassembly {
  Number      : 52
  State       : disassembled
  Address     : 0xebe0
  Size        : 0x2092
  MaxSize     : 0x20a0
  Offset      : 0xebe0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeItEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB051:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	subq	$0x1000, %rsp
    00000015: 	orq	$0x0, (%rsp)
    0000001a: 	subq	$0x1000, %rsp
    00000021: 	orq	$0x0, (%rsp)
    00000026: 	subq	$0x1000, %rsp
    0000002d: 	orq	$0x0, (%rsp)
    00000032: 	subq	$0xf18, %rsp
    00000039: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000041: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    00000049: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000050: 	movq	%fs:0x28, %rax
    00000059: 	movq	%rax, 0x3f08(%rsp)
    00000061: 	xorl	%eax, %eax
    00000063: 	leaq	0x20(%rsp), %rsi
    00000068: 	movaps	%xmm2, 0x20(%rsp)
    0000006d: 	leaq	0x80(%rsp), %rbp
    00000075: 	movq	%rsi, (%rsp)
    00000079: 	leaq	0x3f00(%rsp), %rbx
    00000081: 	movaps	%xmm3, 0x30(%rsp)
    00000086: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 134
    0000008b: 	leaq	0x50(%rsp), %rax
    00000090: 	movb	$0x0, 0x58(%rsp)
    00000095: 	movq	%rax, 0x10(%rsp)
    0000009a: 	movq	%rax, 0x40(%rsp)
    0000009f: 	movabsq	$0x745f3631746e6975, %rax
    000000a9: 	movq	%rax, 0x50(%rsp)
    000000ae: 	cvttsd2si	init_value(%rip), %eax
    000000b6: 	movq	$0x8, 0x48(%rsp)
    000000bf: 	movd	%eax, %xmm0
    000000c3: 	movq	%rbp, %rax
    000000c6: 	punpcklwd	%xmm0, %xmm0
    000000ca: 	pshufd	$0x0, %xmm0, %xmm0
    000000cf: 	nop # Size: 1
.Ltmp1396:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rax, %rbx
    000000da: 	jne	.Ltmp1396 # Offset: 218
    000000dc: 	leaq	0x60(%rsp), %r12
    000000e1: 	leaq	0x40(%rsp), %r15
    000000e6: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000ed: 	movq	%r15, %rsi
    000000f0: 	movq	%r12, %rdi
    000000f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 243
    000000f8: 	callq	clock@PLT # Offset: 248
    000000fd: 	movl	iterations(%rip), %ecx
    00000103: 	xorl	%r13d, %r13d
    00000106: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000010d: 	movq	%rax, start_time(%rip)
    00000114: 	testl	%ecx, %ecx
    00000116: 	jle	.Ltmp1397 # Offset: 278
    0000011c: 	nopl	(%rax) # Size: 4
.Ltmp1400:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1398:
    00000130: 	paddw	(%rax), %xmm0
    00000134: 	addq	$0x10, %rax
    00000138: 	cmpq	%rbx, %rax
    0000013b: 	jne	.Ltmp1398 # Offset: 315
    0000013d: 	movdqa	%xmm0, %xmm1
    00000141: 	cvttsd2si	init_value(%rip), %eax
    00000149: 	psrldq	$0x8, %xmm1
    0000014e: 	paddw	%xmm1, %xmm0
    00000152: 	movdqa	%xmm0, %xmm1
    00000156: 	psrldq	$0x4, %xmm1
    0000015b: 	imulw	$0x1f40, %ax, %ax
    00000160: 	paddw	%xmm1, %xmm0
    00000164: 	movdqa	%xmm0, %xmm1
    00000168: 	psrldq	$0x2, %xmm1
    0000016d: 	paddw	%xmm1, %xmm0
    00000171: 	pextrw	$0x0, %xmm0, %edx
    00000176: 	cmpw	%dx, %ax
    00000179: 	je	.Ltmp1399 # Offset: 377
    0000017b: 	movl	current_test(%rip), %edx
    00000181: 	movq	%r14, %rsi
    00000184: 	movl	$0x1, %edi
    00000189: 	xorl	%eax, %eax
    0000018b: 	callq	__printf_chk@PLT # Offset: 395
    00000190: 	movl	iterations(%rip), %ecx
.Ltmp1399:
    00000196: 	addl	$0x1, %r13d
    0000019a: 	cmpl	%ecx, %r13d
    0000019d: 	jl	.Ltmp1400 # Offset: 413
.Ltmp1397:
    0000019f: 	movq	%r12, %rdi
    000001a2: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 418
    000001a7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001ae: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001b5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001bc: 	je	.Ltmp1401 # Offset: 444
.Ltmp1564:
    000001c2: 	movq	-0x20(%rax), %r13
    000001c6: 	callq	clock@PLT # Offset: 454
    000001cb: 	pxor	%xmm0, %xmm0
    000001cf: 	movq	%rax, end_time(%rip)
    000001d6: 	movq	%r13, %rdi
    000001d9: 	subq	start_time(%rip), %rax
    000001e0: 	cvtsi2sd	%rax, %xmm0
    000001e5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000001ed: 	callq	_Z13record_resultdPKc # Offset: 493
    000001f2: 	movq	0x60(%rsp), %rdi
    000001f7: 	leaq	0x70(%rsp), %r14
    000001fc: 	cmpq	%r14, %rdi
    000001ff: 	je	.Ltmp1402 # Offset: 511
    00000201: 	movq	0x70(%rsp), %rax
    00000206: 	leaq	0x1(%rax), %rsi
    0000020a: 	callq	_ZdlPvm@PLT # Offset: 522
.Ltmp1402:
    0000020f: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000216: 	movq	%r15, %rsi
    00000219: 	movq	%r12, %rdi
    0000021c: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 540
    00000221: 	callq	clock@PLT # Offset: 545
    00000226: 	movl	iterations(%rip), %ecx
    0000022c: 	xorl	%r13d, %r13d
    0000022f: 	movq	%rax, start_time(%rip)
    00000236: 	testl	%ecx, %ecx
    00000238: 	jle	.Ltmp1403 # Offset: 568
    0000023e: 	nop # Size: 2
.Ltmp1406:
    00000240: 	movq	%rbp, %rax
    00000243: 	pxor	%xmm0, %xmm0
    00000247: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1404:
    00000250: 	paddw	(%rax), %xmm0
    00000254: 	addq	$0x10, %rax
    00000258: 	cmpq	%rax, %rbx
    0000025b: 	jne	.Ltmp1404 # Offset: 603
    0000025d: 	movdqa	%xmm0, %xmm1
    00000261: 	cvttsd2si	init_value(%rip), %eax
    00000269: 	psrldq	$0x8, %xmm1
    0000026e: 	paddw	%xmm1, %xmm0
    00000272: 	movdqa	%xmm0, %xmm1
    00000276: 	psrldq	$0x4, %xmm1
    0000027b: 	imulw	$0x1f40, %ax, %ax
    00000280: 	paddw	%xmm1, %xmm0
    00000284: 	movdqa	%xmm0, %xmm1
    00000288: 	psrldq	$0x2, %xmm1
    0000028d: 	paddw	%xmm1, %xmm0
    00000291: 	pextrw	$0x0, %xmm0, %edx
    00000296: 	cmpw	%dx, %ax
    00000299: 	je	.Ltmp1405 # Offset: 665
    0000029b: 	movl	current_test(%rip), %edx
    000002a1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000002a8: 	movl	$0x1, %edi
    000002ad: 	xorl	%eax, %eax
    000002af: 	callq	__printf_chk@PLT # Offset: 687
    000002b4: 	movl	iterations(%rip), %ecx
.Ltmp1405:
    000002ba: 	addl	$0x1, %r13d
    000002be: 	cmpl	%ecx, %r13d
    000002c1: 	jl	.Ltmp1406 # Offset: 705
.Ltmp1403:
    000002c7: 	movq	%r12, %rdi
    000002ca: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 714
    000002cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000002d6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000002dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000002e4: 	je	.Ltmp1407 # Offset: 740
.Ltmp1553:
    000002ea: 	movq	-0x20(%rax), %r13
    000002ee: 	callq	clock@PLT # Offset: 750
    000002f3: 	pxor	%xmm0, %xmm0
    000002f7: 	movq	%rax, end_time(%rip)
    000002fe: 	movq	%r13, %rdi
    00000301: 	subq	start_time(%rip), %rax
    00000308: 	cvtsi2sd	%rax, %xmm0
    0000030d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000315: 	callq	_Z13record_resultdPKc # Offset: 789
    0000031a: 	movq	0x60(%rsp), %rdi
    0000031f: 	cmpq	%r14, %rdi
    00000322: 	je	.Ltmp1408 # Offset: 802
    00000324: 	movq	0x70(%rsp), %rax
    00000329: 	leaq	0x1(%rax), %rsi
    0000032d: 	callq	_ZdlPvm@PLT # Offset: 813
.Ltmp1408:
    00000332: 	leaq	DATAat0x1a1ee(%rip), %rdx
    00000339: 	movq	%r15, %rsi
    0000033c: 	movq	%r12, %rdi
    0000033f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 831
    00000344: 	callq	clock@PLT # Offset: 836
    00000349: 	movl	iterations(%rip), %ecx
    0000034f: 	xorl	%r13d, %r13d
    00000352: 	movq	%rax, start_time(%rip)
    00000359: 	testl	%ecx, %ecx
    0000035b: 	jle	.Ltmp1409 # Offset: 859
    00000361: 	nopl	(%rax) # Size: 7
.Ltmp1412:
    00000368: 	movq	%rbp, %rax
    0000036b: 	pxor	%xmm0, %xmm0
    0000036f: 	nop # Size: 1
.Ltmp1410:
    00000370: 	paddw	(%rax), %xmm0
    00000374: 	addq	$0x10, %rax
    00000378: 	cmpq	%rbx, %rax
    0000037b: 	jne	.Ltmp1410 # Offset: 891
    0000037d: 	movdqa	%xmm0, %xmm1
    00000381: 	cvttsd2si	init_value(%rip), %eax
    00000389: 	psrldq	$0x8, %xmm1
    0000038e: 	paddw	%xmm1, %xmm0
    00000392: 	movdqa	%xmm0, %xmm1
    00000396: 	psrldq	$0x4, %xmm1
    0000039b: 	imulw	$0x1f40, %ax, %ax
    000003a0: 	paddw	%xmm1, %xmm0
    000003a4: 	movdqa	%xmm0, %xmm1
    000003a8: 	psrldq	$0x2, %xmm1
    000003ad: 	paddw	%xmm1, %xmm0
    000003b1: 	pextrw	$0x0, %xmm0, %edx
    000003b6: 	cmpw	%dx, %ax
    000003b9: 	je	.Ltmp1411 # Offset: 953
    000003bb: 	movl	current_test(%rip), %edx
    000003c1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000003c8: 	movl	$0x1, %edi
    000003cd: 	xorl	%eax, %eax
    000003cf: 	callq	__printf_chk@PLT # Offset: 975
    000003d4: 	movl	iterations(%rip), %ecx
.Ltmp1411:
    000003da: 	addl	$0x1, %r13d
    000003de: 	cmpl	%ecx, %r13d
    000003e1: 	jl	.Ltmp1412 # Offset: 993
.Ltmp1409:
    000003e7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000003ee: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000003f5: 	subq	$0x20, %rax
    000003f9: 	cmpq	%rax, %r13
    000003fc: 	je	.Ltmp1413 # Offset: 1020
    00000402: 	leaq	0x10(%r13), %rdi
    00000406: 	movq	0x68(%rsp), %rcx
    0000040b: 	movq	%rdi, (%r13)
    0000040f: 	movq	0x60(%rsp), %rsi
    00000414: 	movq	%rcx, 0x8(%rsp)
    00000419: 	movq	%rsi, %rax
    0000041c: 	movq	%rsi, 0x18(%rsp)
    00000421: 	addq	%rcx, %rax
    00000424: 	je	.Ltmp1414 # Offset: 1060
    00000426: 	testq	%rsi, %rsi
    00000429: 	je	.Ltmp1415 # Offset: 1065
.Ltmp1414:
    0000042f: 	movq	0x8(%rsp), %rax
    00000434: 	movq	%rax, 0x20(%rsp)
    00000439: 	cmpq	$0xf, %rax
    0000043d: 	ja	.Ltmp1416 # Offset: 1085
    00000443: 	cmpq	$0x1, 0x8(%rsp)
    00000449: 	jne	.Ltmp1417 # Offset: 1097
    0000044f: 	movq	0x18(%rsp), %rax
    00000454: 	movzbl	(%rax), %eax
    00000457: 	movb	%al, 0x10(%r13)
.Ltmp1552:
    0000045b: 	movq	0x8(%rsp), %rax
    00000460: 	movq	%rax, 0x8(%r13)
    00000464: 	movb	$0x0, (%rdi,%rax)
    00000468: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000046f: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000476: 	addq	$0x20, %rax
    0000047a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000481: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000488: 	je	.Ltmp1418 # Offset: 1160
.Ltmp1562:
    0000048e: 	movq	-0x20(%rax), %r13
    00000492: 	callq	clock@PLT # Offset: 1170
    00000497: 	pxor	%xmm0, %xmm0
    0000049b: 	movq	%rax, end_time(%rip)
    000004a2: 	movq	%r13, %rdi
    000004a5: 	subq	start_time(%rip), %rax
    000004ac: 	cvtsi2sd	%rax, %xmm0
    000004b1: 	divsd	DATAat0x1a318(%rip), %xmm0
    000004b9: 	callq	_Z13record_resultdPKc # Offset: 1209
    000004be: 	movq	0x60(%rsp), %rdi
    000004c3: 	cmpq	%r14, %rdi
    000004c6: 	je	.Ltmp1419 # Offset: 1222
    000004c8: 	movq	0x70(%rsp), %rax
    000004cd: 	leaq	0x1(%rax), %rsi
    000004d1: 	callq	_ZdlPvm@PLT # Offset: 1233
.Ltmp1419:
    000004d6: 	leaq	DATAat0x1a1fb(%rip), %rdx
    000004dd: 	movq	%r15, %rsi
    000004e0: 	movq	%r12, %rdi
    000004e3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1251
    000004e8: 	callq	clock@PLT # Offset: 1256
    000004ed: 	movl	iterations(%rip), %ecx
    000004f3: 	xorl	%r13d, %r13d
    000004f6: 	movq	%rax, start_time(%rip)
    000004fd: 	testl	%ecx, %ecx
    000004ff: 	jle	.Ltmp1420 # Offset: 1279
    00000505: 	nopl	(%rax) # Size: 3
.Ltmp1423:
    00000508: 	movq	%rbp, %rax
    0000050b: 	pxor	%xmm0, %xmm0
    0000050f: 	nop # Size: 1
.Ltmp1421:
    00000510: 	paddw	(%rax), %xmm0
    00000514: 	addq	$0x10, %rax
    00000518: 	cmpq	%rax, %rbx
    0000051b: 	jne	.Ltmp1421 # Offset: 1307
    0000051d: 	movdqa	%xmm0, %xmm1
    00000521: 	cvttsd2si	init_value(%rip), %eax
    00000529: 	psrldq	$0x8, %xmm1
    0000052e: 	paddw	%xmm1, %xmm0
    00000532: 	movdqa	%xmm0, %xmm1
    00000536: 	psrldq	$0x4, %xmm1
    0000053b: 	imulw	$0x1f40, %ax, %ax
    00000540: 	paddw	%xmm1, %xmm0
    00000544: 	movdqa	%xmm0, %xmm1
    00000548: 	psrldq	$0x2, %xmm1
    0000054d: 	paddw	%xmm1, %xmm0
    00000551: 	pextrw	$0x0, %xmm0, %edx
    00000556: 	cmpw	%dx, %ax
    00000559: 	je	.Ltmp1422 # Offset: 1369
    0000055b: 	movl	current_test(%rip), %edx
    00000561: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000568: 	movl	$0x1, %edi
    0000056d: 	xorl	%eax, %eax
    0000056f: 	callq	__printf_chk@PLT # Offset: 1391
    00000574: 	movl	iterations(%rip), %ecx
.Ltmp1422:
    0000057a: 	addl	$0x1, %r13d
    0000057e: 	cmpl	%ecx, %r13d
    00000581: 	jl	.Ltmp1423 # Offset: 1409
.Ltmp1420:
    00000583: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000058a: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000591: 	subq	$0x20, %rax
    00000595: 	cmpq	%rax, %r13
    00000598: 	je	.Ltmp1424 # Offset: 1432
    0000059e: 	leaq	0x10(%r13), %rdi
    000005a2: 	movq	0x68(%rsp), %rcx
    000005a7: 	movq	%rdi, (%r13)
    000005ab: 	movq	0x60(%rsp), %rsi
    000005b0: 	movq	%rcx, 0x8(%rsp)
    000005b5: 	movq	%rsi, %rax
    000005b8: 	movq	%rsi, 0x18(%rsp)
    000005bd: 	addq	%rcx, %rax
    000005c0: 	je	.Ltmp1425 # Offset: 1472
    000005c2: 	testq	%rsi, %rsi
    000005c5: 	je	.Ltmp1426 # Offset: 1477
.Ltmp1425:
    000005cb: 	movq	0x8(%rsp), %rax
    000005d0: 	movq	%rax, 0x20(%rsp)
    000005d5: 	cmpq	$0xf, %rax
    000005d9: 	ja	.Ltmp1427 # Offset: 1497
    000005df: 	cmpq	$0x1, 0x8(%rsp)
    000005e5: 	jne	.Ltmp1428 # Offset: 1509
    000005eb: 	movq	0x18(%rsp), %rax
    000005f0: 	movzbl	(%rax), %eax
    000005f3: 	movb	%al, 0x10(%r13)
.Ltmp1577:
    000005f7: 	movq	0x8(%rsp), %rax
    000005fc: 	movq	%rax, 0x8(%r13)
    00000600: 	movb	$0x0, (%rdi,%rax)
    00000604: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000060b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000612: 	addq	$0x20, %rax
    00000616: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000061d: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000624: 	je	.Ltmp1429 # Offset: 1572
.Ltmp1563:
    0000062a: 	movq	-0x20(%rax), %r13
    0000062e: 	callq	clock@PLT # Offset: 1582
    00000633: 	pxor	%xmm0, %xmm0
    00000637: 	movq	%rax, end_time(%rip)
    0000063e: 	movq	%r13, %rdi
    00000641: 	subq	start_time(%rip), %rax
    00000648: 	cvtsi2sd	%rax, %xmm0
    0000064d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000655: 	callq	_Z13record_resultdPKc # Offset: 1621
    0000065a: 	movq	0x60(%rsp), %rdi
    0000065f: 	cmpq	%r14, %rdi
    00000662: 	je	.Ltmp1430 # Offset: 1634
    00000664: 	movq	0x70(%rsp), %rax
    00000669: 	leaq	0x1(%rax), %rsi
    0000066d: 	callq	_ZdlPvm@PLT # Offset: 1645
.Ltmp1430:
    00000672: 	leaq	DATAat0x1a208(%rip), %rdx
    00000679: 	movq	%r15, %rsi
    0000067c: 	movq	%r12, %rdi
    0000067f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1663
    00000684: 	callq	clock@PLT # Offset: 1668
    00000689: 	movl	iterations(%rip), %ecx
    0000068f: 	xorl	%r13d, %r13d
    00000692: 	movq	%rax, start_time(%rip)
    00000699: 	testl	%ecx, %ecx
    0000069b: 	jle	.Ltmp1431 # Offset: 1691
    000006a1: 	nopl	(%rax) # Size: 7
.Ltmp1434:
    000006a8: 	movq	%rbp, %rax
    000006ab: 	pxor	%xmm0, %xmm0
    000006af: 	nop # Size: 1
.Ltmp1432:
    000006b0: 	paddw	(%rax), %xmm0
    000006b4: 	addq	$0x10, %rax
    000006b8: 	cmpq	%rbx, %rax
    000006bb: 	jne	.Ltmp1432 # Offset: 1723
    000006bd: 	movdqa	%xmm0, %xmm1
    000006c1: 	cvttsd2si	init_value(%rip), %eax
    000006c9: 	psrldq	$0x8, %xmm1
    000006ce: 	paddw	%xmm1, %xmm0
    000006d2: 	movdqa	%xmm0, %xmm1
    000006d6: 	psrldq	$0x4, %xmm1
    000006db: 	imulw	$0x1f40, %ax, %ax
    000006e0: 	paddw	%xmm1, %xmm0
    000006e4: 	movdqa	%xmm0, %xmm1
    000006e8: 	psrldq	$0x2, %xmm1
    000006ed: 	paddw	%xmm1, %xmm0
    000006f1: 	pextrw	$0x0, %xmm0, %edx
    000006f6: 	cmpw	%dx, %ax
    000006f9: 	je	.Ltmp1433 # Offset: 1785
    000006fb: 	movl	current_test(%rip), %edx
    00000701: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000708: 	movl	$0x1, %edi
    0000070d: 	xorl	%eax, %eax
    0000070f: 	callq	__printf_chk@PLT # Offset: 1807
    00000714: 	movl	iterations(%rip), %ecx
.Ltmp1433:
    0000071a: 	addl	$0x1, %r13d
    0000071e: 	cmpl	%ecx, %r13d
    00000721: 	jl	.Ltmp1434 # Offset: 1825
.Ltmp1431:
    00000727: 	movq	%r12, %rdi
    0000072a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1834
    0000072f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000736: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000073d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000744: 	je	.Ltmp1435 # Offset: 1860
.Ltmp1576:
    0000074a: 	movq	-0x20(%rax), %r13
    0000074e: 	callq	clock@PLT # Offset: 1870
    00000753: 	pxor	%xmm0, %xmm0
    00000757: 	movq	%rax, end_time(%rip)
    0000075e: 	movq	%r13, %rdi
    00000761: 	subq	start_time(%rip), %rax
    00000768: 	cvtsi2sd	%rax, %xmm0
    0000076d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000775: 	callq	_Z13record_resultdPKc # Offset: 1909
    0000077a: 	movq	0x60(%rsp), %rdi
    0000077f: 	cmpq	%r14, %rdi
    00000782: 	je	.Ltmp1436 # Offset: 1922
    00000784: 	movq	0x70(%rsp), %rax
    00000789: 	leaq	0x1(%rax), %rsi
    0000078d: 	callq	_ZdlPvm@PLT # Offset: 1933
.Ltmp1436:
    00000792: 	leaq	DATAat0x1a215(%rip), %rdx
    00000799: 	movq	%r15, %rsi
    0000079c: 	movq	%r12, %rdi
    0000079f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1951
    000007a4: 	callq	clock@PLT # Offset: 1956
    000007a9: 	movl	iterations(%rip), %ecx
    000007af: 	xorl	%r13d, %r13d
    000007b2: 	movq	%rax, start_time(%rip)
    000007b9: 	testl	%ecx, %ecx
    000007bb: 	jle	.Ltmp1437 # Offset: 1979
    000007c1: 	nopl	(%rax) # Size: 7
.Ltmp1440:
    000007c8: 	movq	%rbp, %rax
    000007cb: 	pxor	%xmm0, %xmm0
    000007cf: 	nop # Size: 1
.Ltmp1438:
    000007d0: 	paddw	(%rax), %xmm0
    000007d4: 	addq	$0x10, %rax
    000007d8: 	cmpq	%rax, %rbx
    000007db: 	jne	.Ltmp1438 # Offset: 2011
    000007dd: 	movdqa	%xmm0, %xmm1
    000007e1: 	cvttsd2si	init_value(%rip), %eax
    000007e9: 	psrldq	$0x8, %xmm1
    000007ee: 	paddw	%xmm1, %xmm0
    000007f2: 	movdqa	%xmm0, %xmm1
    000007f6: 	psrldq	$0x4, %xmm1
    000007fb: 	imulw	$0x1f40, %ax, %ax
    00000800: 	paddw	%xmm1, %xmm0
    00000804: 	movdqa	%xmm0, %xmm1
    00000808: 	psrldq	$0x2, %xmm1
    0000080d: 	paddw	%xmm1, %xmm0
    00000811: 	pextrw	$0x0, %xmm0, %edx
    00000816: 	cmpw	%dx, %ax
    00000819: 	je	.Ltmp1439 # Offset: 2073
    0000081b: 	movl	current_test(%rip), %edx
    00000821: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000828: 	movl	$0x1, %edi
    0000082d: 	xorl	%eax, %eax
    0000082f: 	callq	__printf_chk@PLT # Offset: 2095
    00000834: 	movl	iterations(%rip), %ecx
.Ltmp1439:
    0000083a: 	addl	$0x1, %r13d
    0000083e: 	cmpl	%ecx, %r13d
    00000841: 	jl	.Ltmp1440 # Offset: 2113
.Ltmp1437:
    00000847: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000084e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000855: 	subq	$0x20, %rax
    00000859: 	cmpq	%rax, %r13
    0000085c: 	je	.Ltmp1441 # Offset: 2140
    00000862: 	leaq	0x10(%r13), %rdi
    00000866: 	movq	0x68(%rsp), %rcx
    0000086b: 	movq	%rdi, (%r13)
    0000086f: 	movq	0x60(%rsp), %rsi
    00000874: 	movq	%rcx, 0x8(%rsp)
    00000879: 	movq	%rsi, %rax
    0000087c: 	movq	%rsi, 0x18(%rsp)
    00000881: 	addq	%rcx, %rax
    00000884: 	je	.Ltmp1442 # Offset: 2180
    00000886: 	testq	%rsi, %rsi
    00000889: 	je	.Ltmp1443 # Offset: 2185
.Ltmp1442:
    0000088f: 	movq	0x8(%rsp), %rax
    00000894: 	movq	%rax, 0x20(%rsp)
    00000899: 	cmpq	$0xf, %rax
    0000089d: 	ja	.Ltmp1444 # Offset: 2205
    000008a3: 	cmpq	$0x1, 0x8(%rsp)
    000008a9: 	jne	.Ltmp1445 # Offset: 2217
    000008af: 	movq	0x18(%rsp), %rax
    000008b4: 	movzbl	(%rax), %eax
    000008b7: 	movb	%al, 0x10(%r13)
.Ltmp1580:
    000008bb: 	movq	0x8(%rsp), %rax
    000008c0: 	movq	%rax, 0x8(%r13)
    000008c4: 	movb	$0x0, (%rdi,%rax)
    000008c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008cf: 	addq	$0x20, %rax
    000008d3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1575:
    000008da: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000008e1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008e8: 	je	.Ltmp1446 # Offset: 2280
.Ltmp1574:
    000008ee: 	movq	-0x20(%rax), %r13
    000008f2: 	callq	clock@PLT # Offset: 2290
    000008f7: 	pxor	%xmm0, %xmm0
    000008fb: 	movq	%rax, end_time(%rip)
    00000902: 	movq	%r13, %rdi
    00000905: 	subq	start_time(%rip), %rax
    0000090c: 	cvtsi2sd	%rax, %xmm0
    00000911: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000919: 	callq	_Z13record_resultdPKc # Offset: 2329
    0000091e: 	movq	0x60(%rsp), %rdi
    00000923: 	cmpq	%r14, %rdi
    00000926: 	je	.Ltmp1447 # Offset: 2342
    00000928: 	movq	0x70(%rsp), %rax
    0000092d: 	leaq	0x1(%rax), %rsi
    00000931: 	callq	_ZdlPvm@PLT # Offset: 2353
.Ltmp1447:
    00000936: 	leaq	DATAat0x1a226(%rip), %rdx
    0000093d: 	movq	%r15, %rsi
    00000940: 	movq	%r12, %rdi
    00000943: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2371
    00000948: 	callq	clock@PLT # Offset: 2376
    0000094d: 	movl	iterations(%rip), %ecx
    00000953: 	xorl	%r13d, %r13d
    00000956: 	movq	%rax, start_time(%rip)
    0000095d: 	testl	%ecx, %ecx
    0000095f: 	jle	.Ltmp1448 # Offset: 2399
    00000965: 	nopl	(%rax) # Size: 3
.Ltmp1451:
    00000968: 	movq	%rbp, %rax
    0000096b: 	pxor	%xmm0, %xmm0
    0000096f: 	nop # Size: 1
.Ltmp1449:
    00000970: 	paddw	(%rax), %xmm0
    00000974: 	addq	$0x10, %rax
    00000978: 	cmpq	%rbx, %rax
    0000097b: 	jne	.Ltmp1449 # Offset: 2427
    0000097d: 	movdqa	%xmm0, %xmm1
    00000981: 	cvttsd2si	init_value(%rip), %eax
    00000989: 	psrldq	$0x8, %xmm1
    0000098e: 	paddw	%xmm1, %xmm0
    00000992: 	movdqa	%xmm0, %xmm1
    00000996: 	psrldq	$0x4, %xmm1
    0000099b: 	imulw	$0x1f40, %ax, %ax
    000009a0: 	paddw	%xmm1, %xmm0
    000009a4: 	movdqa	%xmm0, %xmm1
    000009a8: 	psrldq	$0x2, %xmm1
    000009ad: 	paddw	%xmm1, %xmm0
    000009b1: 	pextrw	$0x0, %xmm0, %edx
    000009b6: 	cmpw	%dx, %ax
    000009b9: 	je	.Ltmp1450 # Offset: 2489
    000009bb: 	movl	current_test(%rip), %edx
    000009c1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000009c8: 	movl	$0x1, %edi
    000009cd: 	xorl	%eax, %eax
    000009cf: 	callq	__printf_chk@PLT # Offset: 2511
    000009d4: 	movl	iterations(%rip), %ecx
.Ltmp1450:
    000009da: 	addl	$0x1, %r13d
    000009de: 	cmpl	%ecx, %r13d
    000009e1: 	jl	.Ltmp1451 # Offset: 2529
.Ltmp1448:
    000009e3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009ea: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000009f1: 	subq	$0x20, %rax
    000009f5: 	cmpq	%rax, %r13
    000009f8: 	je	.Ltmp1452 # Offset: 2552
    000009fe: 	leaq	0x10(%r13), %rdi
    00000a02: 	movq	0x68(%rsp), %rcx
    00000a07: 	movq	%rdi, (%r13)
    00000a0b: 	movq	0x60(%rsp), %rsi
    00000a10: 	movq	%rcx, 0x8(%rsp)
    00000a15: 	movq	%rsi, %rax
    00000a18: 	movq	%rsi, 0x18(%rsp)
    00000a1d: 	addq	%rcx, %rax
    00000a20: 	je	.Ltmp1453 # Offset: 2592
    00000a22: 	testq	%rsi, %rsi
    00000a25: 	je	.Ltmp1454 # Offset: 2597
.Ltmp1453:
    00000a2b: 	movq	0x8(%rsp), %rax
    00000a30: 	movq	%rax, 0x20(%rsp)
    00000a35: 	cmpq	$0xf, %rax
    00000a39: 	ja	.Ltmp1455 # Offset: 2617
    00000a3f: 	cmpq	$0x1, 0x8(%rsp)
    00000a45: 	jne	.Ltmp1456 # Offset: 2629
    00000a4b: 	movq	0x18(%rsp), %rax
    00000a50: 	movzbl	(%rax), %eax
    00000a53: 	movb	%al, 0x10(%r13)
.Ltmp1578:
    00000a57: 	movq	0x8(%rsp), %rax
    00000a5c: 	movq	%rax, 0x8(%r13)
    00000a60: 	movb	$0x0, (%rdi,%rax)
    00000a64: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a6b: 	addq	$0x20, %rax
    00000a6f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1573:
    00000a76: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a7d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a84: 	je	.Ltmp1457 # Offset: 2692
.Ltmp1572:
    00000a8a: 	movq	-0x20(%rax), %r13
    00000a8e: 	callq	clock@PLT # Offset: 2702
    00000a93: 	pxor	%xmm0, %xmm0
    00000a97: 	movq	%rax, end_time(%rip)
    00000a9e: 	movq	%r13, %rdi
    00000aa1: 	subq	start_time(%rip), %rax
    00000aa8: 	cvtsi2sd	%rax, %xmm0
    00000aad: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ab5: 	callq	_Z13record_resultdPKc # Offset: 2741
    00000aba: 	movq	0x60(%rsp), %rdi
    00000abf: 	cmpq	%r14, %rdi
    00000ac2: 	je	.Ltmp1458 # Offset: 2754
    00000ac4: 	movq	0x70(%rsp), %rax
    00000ac9: 	leaq	0x1(%rax), %rsi
    00000acd: 	callq	_ZdlPvm@PLT # Offset: 2765
.Ltmp1458:
    00000ad2: 	leaq	DATAat0x1a238(%rip), %rdx
    00000ad9: 	movq	%r15, %rsi
    00000adc: 	movq	%r12, %rdi
    00000adf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2783
    00000ae4: 	callq	clock@PLT # Offset: 2788
    00000ae9: 	movl	iterations(%rip), %ecx
    00000aef: 	xorl	%r13d, %r13d
    00000af2: 	movq	%rax, start_time(%rip)
    00000af9: 	testl	%ecx, %ecx
    00000afb: 	jle	.Ltmp1459 # Offset: 2811
    00000b01: 	nopl	(%rax) # Size: 7
.Ltmp1462:
    00000b08: 	movq	%rbp, %rax
    00000b0b: 	pxor	%xmm0, %xmm0
    00000b0f: 	nop # Size: 1
.Ltmp1460:
    00000b10: 	paddw	(%rax), %xmm0
    00000b14: 	addq	$0x10, %rax
    00000b18: 	cmpq	%rax, %rbx
    00000b1b: 	jne	.Ltmp1460 # Offset: 2843
    00000b1d: 	movdqa	%xmm0, %xmm1
    00000b21: 	cvttsd2si	init_value(%rip), %eax
    00000b29: 	psrldq	$0x8, %xmm1
    00000b2e: 	paddw	%xmm1, %xmm0
    00000b32: 	movdqa	%xmm0, %xmm1
    00000b36: 	psrldq	$0x4, %xmm1
    00000b3b: 	imulw	$0x1f40, %ax, %ax
    00000b40: 	paddw	%xmm1, %xmm0
    00000b44: 	movdqa	%xmm0, %xmm1
    00000b48: 	psrldq	$0x2, %xmm1
    00000b4d: 	paddw	%xmm1, %xmm0
    00000b51: 	pextrw	$0x0, %xmm0, %edx
    00000b56: 	cmpw	%dx, %ax
    00000b59: 	je	.Ltmp1461 # Offset: 2905
    00000b5b: 	movl	current_test(%rip), %edx
    00000b61: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000b68: 	movl	$0x1, %edi
    00000b6d: 	xorl	%eax, %eax
    00000b6f: 	callq	__printf_chk@PLT # Offset: 2927
    00000b74: 	movl	iterations(%rip), %ecx
.Ltmp1461:
    00000b7a: 	addl	$0x1, %r13d
    00000b7e: 	cmpl	%ecx, %r13d
    00000b81: 	jl	.Ltmp1462 # Offset: 2945
.Ltmp1459:
    00000b87: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b8e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000b95: 	subq	$0x20, %rax
    00000b99: 	cmpq	%rax, %r13
    00000b9c: 	je	.Ltmp1463 # Offset: 2972
    00000ba2: 	leaq	0x10(%r13), %rdi
    00000ba6: 	movq	0x68(%rsp), %rcx
    00000bab: 	movq	%rdi, (%r13)
    00000baf: 	movq	0x60(%rsp), %rsi
    00000bb4: 	movq	%rcx, 0x8(%rsp)
    00000bb9: 	movq	%rsi, %rax
    00000bbc: 	movq	%rsi, 0x18(%rsp)
    00000bc1: 	addq	%rcx, %rax
    00000bc4: 	je	.Ltmp1464 # Offset: 3012
    00000bc6: 	testq	%rsi, %rsi
    00000bc9: 	je	.Ltmp1465 # Offset: 3017
.Ltmp1464:
    00000bcf: 	movq	0x8(%rsp), %rax
    00000bd4: 	movq	%rax, 0x20(%rsp)
    00000bd9: 	cmpq	$0xf, %rax
    00000bdd: 	ja	.Ltmp1466 # Offset: 3037
    00000be3: 	cmpq	$0x1, 0x8(%rsp)
    00000be9: 	jne	.Ltmp1467 # Offset: 3049
    00000bef: 	movq	0x18(%rsp), %rax
    00000bf4: 	movzbl	(%rax), %eax
    00000bf7: 	movb	%al, 0x10(%r13)
.Ltmp1592:
    00000bfb: 	movq	0x8(%rsp), %rax
    00000c00: 	movq	%rax, 0x8(%r13)
    00000c04: 	movb	$0x0, (%rdi,%rax)
    00000c08: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000c0f: 	addq	$0x20, %rax
    00000c13: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1571:
    00000c1a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000c21: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000c28: 	je	.Ltmp1468 # Offset: 3112
.Ltmp1570:
    00000c2e: 	movq	-0x20(%rax), %r13
    00000c32: 	callq	clock@PLT # Offset: 3122
    00000c37: 	pxor	%xmm0, %xmm0
    00000c3b: 	movq	%rax, end_time(%rip)
    00000c42: 	movq	%r13, %rdi
    00000c45: 	subq	start_time(%rip), %rax
    00000c4c: 	cvtsi2sd	%rax, %xmm0
    00000c51: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000c59: 	callq	_Z13record_resultdPKc # Offset: 3161
    00000c5e: 	movq	0x60(%rsp), %rdi
    00000c63: 	cmpq	%r14, %rdi
    00000c66: 	je	.Ltmp1469 # Offset: 3174
    00000c68: 	movq	0x70(%rsp), %rax
    00000c6d: 	leaq	0x1(%rax), %rsi
    00000c71: 	callq	_ZdlPvm@PLT # Offset: 3185
.Ltmp1469:
    00000c76: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000c7d: 	movq	%r15, %rsi
    00000c80: 	movq	%r12, %rdi
    00000c83: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3203
    00000c88: 	callq	clock@PLT # Offset: 3208
    00000c8d: 	movl	iterations(%rip), %ecx
    00000c93: 	xorl	%r13d, %r13d
    00000c96: 	movq	%rax, start_time(%rip)
    00000c9d: 	testl	%ecx, %ecx
    00000c9f: 	jle	.Ltmp1470 # Offset: 3231
    00000ca5: 	nopl	(%rax) # Size: 3
.Ltmp1473:
    00000ca8: 	movq	%rbp, %rax
    00000cab: 	pxor	%xmm0, %xmm0
    00000caf: 	nop # Size: 1
.Ltmp1471:
    00000cb0: 	paddw	(%rax), %xmm0
    00000cb4: 	addq	$0x10, %rax
    00000cb8: 	cmpq	%rbx, %rax
    00000cbb: 	jne	.Ltmp1471 # Offset: 3259
    00000cbd: 	movdqa	%xmm0, %xmm1
    00000cc1: 	cvttsd2si	init_value(%rip), %eax
    00000cc9: 	psrldq	$0x8, %xmm1
    00000cce: 	paddw	%xmm1, %xmm0
    00000cd2: 	movdqa	%xmm0, %xmm1
    00000cd6: 	psrldq	$0x4, %xmm1
    00000cdb: 	imulw	$0x1f40, %ax, %ax
    00000ce0: 	paddw	%xmm1, %xmm0
    00000ce4: 	movdqa	%xmm0, %xmm1
    00000ce8: 	psrldq	$0x2, %xmm1
    00000ced: 	paddw	%xmm1, %xmm0
    00000cf1: 	pextrw	$0x0, %xmm0, %edx
    00000cf6: 	cmpw	%dx, %ax
    00000cf9: 	je	.Ltmp1472 # Offset: 3321
    00000cfb: 	movl	current_test(%rip), %edx
    00000d01: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000d08: 	movl	$0x1, %edi
    00000d0d: 	xorl	%eax, %eax
    00000d0f: 	callq	__printf_chk@PLT # Offset: 3343
    00000d14: 	movl	iterations(%rip), %ecx
.Ltmp1472:
    00000d1a: 	addl	$0x1, %r13d
    00000d1e: 	cmpl	%ecx, %r13d
    00000d21: 	jl	.Ltmp1473 # Offset: 3361
.Ltmp1470:
    00000d23: 	movq	%r12, %rdi
    00000d26: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3366
    00000d2b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d32: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000d39: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d40: 	je	.Ltmp1474 # Offset: 3392
.Ltmp1561:
    00000d46: 	movq	-0x20(%rax), %r13
    00000d4a: 	callq	clock@PLT # Offset: 3402
    00000d4f: 	pxor	%xmm0, %xmm0
    00000d53: 	movq	%rax, end_time(%rip)
    00000d5a: 	movq	%r13, %rdi
    00000d5d: 	subq	start_time(%rip), %rax
    00000d64: 	cvtsi2sd	%rax, %xmm0
    00000d69: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d71: 	callq	_Z13record_resultdPKc # Offset: 3441
    00000d76: 	movq	0x60(%rsp), %rdi
    00000d7b: 	cmpq	%r14, %rdi
    00000d7e: 	je	.Ltmp1475 # Offset: 3454
    00000d80: 	movq	0x70(%rsp), %rax
    00000d85: 	leaq	0x1(%rax), %rsi
    00000d89: 	callq	_ZdlPvm@PLT # Offset: 3465
.Ltmp1475:
    00000d8e: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000d95: 	movq	%r15, %rsi
    00000d98: 	movq	%r12, %rdi
    00000d9b: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3483
    00000da0: 	callq	clock@PLT # Offset: 3488
    00000da5: 	movl	iterations(%rip), %ecx
    00000dab: 	xorl	%r13d, %r13d
    00000dae: 	movq	%rax, start_time(%rip)
    00000db5: 	testl	%ecx, %ecx
    00000db7: 	jle	.Ltmp1476 # Offset: 3511
    00000dbd: 	nopl	(%rax) # Size: 3
.Ltmp1479:
    00000dc0: 	movq	%rbp, %rax
    00000dc3: 	pxor	%xmm0, %xmm0
    00000dc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1477:
    00000dd0: 	paddw	(%rax), %xmm0
    00000dd4: 	addq	$0x10, %rax
    00000dd8: 	cmpq	%rbx, %rax
    00000ddb: 	jne	.Ltmp1477 # Offset: 3547
    00000ddd: 	movdqa	%xmm0, %xmm1
    00000de1: 	cvttsd2si	init_value(%rip), %eax
    00000de9: 	psrldq	$0x8, %xmm1
    00000dee: 	paddw	%xmm1, %xmm0
    00000df2: 	movdqa	%xmm0, %xmm1
    00000df6: 	psrldq	$0x4, %xmm1
    00000dfb: 	imulw	$0x1f40, %ax, %ax
    00000e00: 	paddw	%xmm1, %xmm0
    00000e04: 	movdqa	%xmm0, %xmm1
    00000e08: 	psrldq	$0x2, %xmm1
    00000e0d: 	paddw	%xmm1, %xmm0
    00000e11: 	pextrw	$0x0, %xmm0, %edx
    00000e16: 	cmpw	%dx, %ax
    00000e19: 	je	.Ltmp1478 # Offset: 3609
    00000e1b: 	movl	current_test(%rip), %edx
    00000e21: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000e28: 	movl	$0x1, %edi
    00000e2d: 	xorl	%eax, %eax
    00000e2f: 	callq	__printf_chk@PLT # Offset: 3631
    00000e34: 	movl	iterations(%rip), %ecx
.Ltmp1478:
    00000e3a: 	addl	$0x1, %r13d
    00000e3e: 	cmpl	%ecx, %r13d
    00000e41: 	jl	.Ltmp1479 # Offset: 3649
.Ltmp1476:
    00000e47: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e4e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000e55: 	subq	$0x20, %rax
    00000e59: 	cmpq	%rax, %r13
    00000e5c: 	je	.Ltmp1480 # Offset: 3676
    00000e62: 	leaq	0x10(%r13), %rdi
    00000e66: 	movq	0x68(%rsp), %rcx
    00000e6b: 	movq	%rdi, (%r13)
    00000e6f: 	movq	0x60(%rsp), %rsi
    00000e74: 	movq	%rcx, 0x8(%rsp)
    00000e79: 	movq	%rsi, %rax
    00000e7c: 	movq	%rsi, 0x18(%rsp)
    00000e81: 	addq	%rcx, %rax
    00000e84: 	je	.Ltmp1481 # Offset: 3716
    00000e86: 	testq	%rsi, %rsi
    00000e89: 	je	.Ltmp1482 # Offset: 3721
.Ltmp1481:
    00000e8f: 	movq	0x8(%rsp), %rax
    00000e94: 	movq	%rax, 0x20(%rsp)
    00000e99: 	cmpq	$0xf, %rax
    00000e9d: 	ja	.Ltmp1483 # Offset: 3741
    00000ea3: 	cmpq	$0x1, 0x8(%rsp)
    00000ea9: 	jne	.Ltmp1484 # Offset: 3753
    00000eaf: 	movq	0x18(%rsp), %rax
    00000eb4: 	movzbl	(%rax), %eax
    00000eb7: 	movb	%al, 0x10(%r13)
.Ltmp1590:
    00000ebb: 	movq	0x8(%rsp), %rax
    00000ec0: 	movq	%rax, 0x8(%r13)
    00000ec4: 	movb	$0x0, (%rdi,%rax)
    00000ec8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ecf: 	addq	$0x20, %rax
    00000ed3: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1560:
    00000eda: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ee1: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ee8: 	je	.Ltmp1485 # Offset: 3816
.Ltmp1559:
    00000eee: 	movq	-0x20(%rax), %r13
    00000ef2: 	callq	clock@PLT # Offset: 3826
    00000ef7: 	pxor	%xmm0, %xmm0
    00000efb: 	movq	%rax, end_time(%rip)
    00000f02: 	movq	%r13, %rdi
    00000f05: 	subq	start_time(%rip), %rax
    00000f0c: 	cvtsi2sd	%rax, %xmm0
    00000f11: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000f19: 	callq	_Z13record_resultdPKc # Offset: 3865
    00000f1e: 	movq	0x60(%rsp), %rdi
    00000f23: 	cmpq	%r14, %rdi
    00000f26: 	je	.Ltmp1486 # Offset: 3878
    00000f28: 	movq	0x70(%rsp), %rax
    00000f2d: 	leaq	0x1(%rax), %rsi
    00000f31: 	callq	_ZdlPvm@PLT # Offset: 3889
.Ltmp1486:
    00000f36: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000f3d: 	movq	%r15, %rsi
    00000f40: 	movq	%r12, %rdi
    00000f43: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3907
    00000f48: 	callq	clock@PLT # Offset: 3912
    00000f4d: 	movl	iterations(%rip), %ecx
    00000f53: 	xorl	%r13d, %r13d
    00000f56: 	movq	%rax, start_time(%rip)
    00000f5d: 	testl	%ecx, %ecx
    00000f5f: 	jle	.Ltmp1487 # Offset: 3935
    00000f65: 	nopl	(%rax) # Size: 3
.Ltmp1490:
    00000f68: 	movq	%rbp, %rax
    00000f6b: 	pxor	%xmm0, %xmm0
    00000f6f: 	nop # Size: 1
.Ltmp1488:
    00000f70: 	paddw	(%rax), %xmm0
    00000f74: 	addq	$0x10, %rax
    00000f78: 	cmpq	%rax, %rbx
    00000f7b: 	jne	.Ltmp1488 # Offset: 3963
    00000f7d: 	movdqa	%xmm0, %xmm1
    00000f81: 	cvttsd2si	init_value(%rip), %eax
    00000f89: 	psrldq	$0x8, %xmm1
    00000f8e: 	paddw	%xmm1, %xmm0
    00000f92: 	movdqa	%xmm0, %xmm1
    00000f96: 	psrldq	$0x4, %xmm1
    00000f9b: 	imulw	$0x1f40, %ax, %ax
    00000fa0: 	paddw	%xmm1, %xmm0
    00000fa4: 	movdqa	%xmm0, %xmm1
    00000fa8: 	psrldq	$0x2, %xmm1
    00000fad: 	paddw	%xmm1, %xmm0
    00000fb1: 	pextrw	$0x0, %xmm0, %edx
    00000fb6: 	cmpw	%dx, %ax
    00000fb9: 	je	.Ltmp1489 # Offset: 4025
    00000fbb: 	movl	current_test(%rip), %edx
    00000fc1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000fc8: 	movl	$0x1, %edi
    00000fcd: 	xorl	%eax, %eax
    00000fcf: 	callq	__printf_chk@PLT # Offset: 4047
    00000fd4: 	movl	iterations(%rip), %ecx
.Ltmp1489:
    00000fda: 	addl	$0x1, %r13d
    00000fde: 	cmpl	%ecx, %r13d
    00000fe1: 	jl	.Ltmp1490 # Offset: 4065
.Ltmp1487:
    00000fe3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000fea: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000ff1: 	subq	$0x20, %rax
    00000ff5: 	cmpq	%rax, %r13
    00000ff8: 	je	.Ltmp1491 # Offset: 4088
    00000ffe: 	leaq	0x10(%r13), %rdi
    00001002: 	movq	0x68(%rsp), %rcx
    00001007: 	movq	%rdi, (%r13)
    0000100b: 	movq	0x60(%rsp), %rsi
    00001010: 	movq	%rcx, 0x8(%rsp)
    00001015: 	movq	%rsi, %rax
    00001018: 	movq	%rsi, 0x18(%rsp)
    0000101d: 	addq	%rcx, %rax
    00001020: 	je	.Ltmp1492 # Offset: 4128
    00001022: 	testq	%rsi, %rsi
    00001025: 	je	.Ltmp1493 # Offset: 4133
.Ltmp1492:
    0000102b: 	movq	0x8(%rsp), %rax
    00001030: 	movq	%rax, 0x20(%rsp)
    00001035: 	cmpq	$0xf, %rax
    00001039: 	ja	.Ltmp1494 # Offset: 4153
    0000103f: 	cmpq	$0x1, 0x8(%rsp)
    00001045: 	jne	.Ltmp1495 # Offset: 4165
    0000104b: 	movq	0x18(%rsp), %rax
    00001050: 	movzbl	(%rax), %eax
    00001053: 	movb	%al, 0x10(%r13)
.Ltmp1582:
    00001057: 	movq	0x8(%rsp), %rax
    0000105c: 	movq	%rax, 0x8(%r13)
    00001060: 	movb	$0x0, (%rdi,%rax)
    00001064: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000106b: 	addq	$0x20, %rax
    0000106f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1558:
    00001076: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000107d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001084: 	je	.Ltmp1496 # Offset: 4228
.Ltmp1557:
    0000108a: 	movq	-0x20(%rax), %r13
    0000108e: 	callq	clock@PLT # Offset: 4238
    00001093: 	pxor	%xmm0, %xmm0
    00001097: 	movq	%rax, end_time(%rip)
    0000109e: 	movq	%r13, %rdi
    000010a1: 	subq	start_time(%rip), %rax
    000010a8: 	cvtsi2sd	%rax, %xmm0
    000010ad: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010b5: 	callq	_Z13record_resultdPKc # Offset: 4277
    000010ba: 	movq	0x60(%rsp), %rdi
    000010bf: 	cmpq	%r14, %rdi
    000010c2: 	je	.Ltmp1497 # Offset: 4290
    000010c4: 	movq	0x70(%rsp), %rax
    000010c9: 	leaq	0x1(%rax), %rsi
    000010cd: 	callq	_ZdlPvm@PLT # Offset: 4301
.Ltmp1497:
    000010d2: 	leaq	DATAat0x1a27b(%rip), %rdx
    000010d9: 	movq	%r15, %rsi
    000010dc: 	movq	%r12, %rdi
    000010df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4319
    000010e4: 	callq	clock@PLT # Offset: 4324
    000010e9: 	movl	iterations(%rip), %ecx
    000010ef: 	xorl	%r13d, %r13d
    000010f2: 	movq	%rax, start_time(%rip)
    000010f9: 	testl	%ecx, %ecx
    000010fb: 	jle	.Ltmp1498 # Offset: 4347
    00001101: 	nopl	(%rax) # Size: 7
.Ltmp1501:
    00001108: 	movq	%rbp, %rax
    0000110b: 	pxor	%xmm0, %xmm0
    0000110f: 	nop # Size: 1
.Ltmp1499:
    00001110: 	paddw	(%rax), %xmm0
    00001114: 	addq	$0x10, %rax
    00001118: 	cmpq	%rbx, %rax
    0000111b: 	jne	.Ltmp1499 # Offset: 4379
    0000111d: 	movdqa	%xmm0, %xmm1
    00001121: 	cvttsd2si	init_value(%rip), %eax
    00001129: 	psrldq	$0x8, %xmm1
    0000112e: 	paddw	%xmm1, %xmm0
    00001132: 	movdqa	%xmm0, %xmm1
    00001136: 	psrldq	$0x4, %xmm1
    0000113b: 	imulw	$0x1f40, %ax, %ax
    00001140: 	paddw	%xmm1, %xmm0
    00001144: 	movdqa	%xmm0, %xmm1
    00001148: 	psrldq	$0x2, %xmm1
    0000114d: 	paddw	%xmm1, %xmm0
    00001151: 	pextrw	$0x0, %xmm0, %edx
    00001156: 	cmpw	%dx, %ax
    00001159: 	je	.Ltmp1500 # Offset: 4441
    0000115b: 	movl	current_test(%rip), %edx
    00001161: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001168: 	movl	$0x1, %edi
    0000116d: 	xorl	%eax, %eax
    0000116f: 	callq	__printf_chk@PLT # Offset: 4463
    00001174: 	movl	iterations(%rip), %ecx
.Ltmp1500:
    0000117a: 	addl	$0x1, %r13d
    0000117e: 	cmpl	%ecx, %r13d
    00001181: 	jl	.Ltmp1501 # Offset: 4481
.Ltmp1498:
    00001187: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000118e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001195: 	subq	$0x20, %rax
    00001199: 	cmpq	%rax, %r13
    0000119c: 	je	.Ltmp1502 # Offset: 4508
    000011a2: 	leaq	0x10(%r13), %rdi
    000011a6: 	movq	0x68(%rsp), %rcx
    000011ab: 	movq	%rdi, (%r13)
    000011af: 	movq	0x60(%rsp), %rsi
    000011b4: 	movq	%rcx, 0x8(%rsp)
    000011b9: 	movq	%rsi, %rax
    000011bc: 	movq	%rsi, 0x18(%rsp)
    000011c1: 	addq	%rcx, %rax
    000011c4: 	je	.Ltmp1503 # Offset: 4548
    000011c6: 	testq	%rsi, %rsi
    000011c9: 	je	.Ltmp1504 # Offset: 4553
.Ltmp1503:
    000011cf: 	movq	0x8(%rsp), %rax
    000011d4: 	movq	%rax, 0x20(%rsp)
    000011d9: 	cmpq	$0xf, %rax
    000011dd: 	ja	.Ltmp1505 # Offset: 4573
    000011e3: 	cmpq	$0x1, 0x8(%rsp)
    000011e9: 	jne	.Ltmp1506 # Offset: 4585
    000011ef: 	movq	0x18(%rsp), %rax
    000011f4: 	movzbl	(%rax), %eax
    000011f7: 	movb	%al, 0x10(%r13)
.Ltmp1587:
    000011fb: 	movq	0x8(%rsp), %rax
    00001200: 	movq	%rax, 0x8(%r13)
    00001204: 	movb	$0x0, (%rdi,%rax)
    00001208: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000120f: 	addq	$0x20, %rax
    00001213: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1556:
    0000121a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001221: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001228: 	je	.Ltmp1507 # Offset: 4648
.Ltmp1555:
    0000122e: 	movq	-0x20(%rax), %r13
    00001232: 	callq	clock@PLT # Offset: 4658
    00001237: 	pxor	%xmm0, %xmm0
    0000123b: 	movq	%rax, end_time(%rip)
    00001242: 	movq	%r13, %rdi
    00001245: 	subq	start_time(%rip), %rax
    0000124c: 	cvtsi2sd	%rax, %xmm0
    00001251: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001259: 	callq	_Z13record_resultdPKc # Offset: 4697
    0000125e: 	movq	0x60(%rsp), %rdi
    00001263: 	cmpq	%r14, %rdi
    00001266: 	je	.Ltmp1508 # Offset: 4710
    00001268: 	movq	0x70(%rsp), %rax
    0000126d: 	leaq	0x1(%rax), %rsi
    00001271: 	callq	_ZdlPvm@PLT # Offset: 4721
.Ltmp1508:
    00001276: 	leaq	DATAat0x1a28b(%rip), %rdx
    0000127d: 	movq	%r15, %rsi
    00001280: 	movq	%r12, %rdi
    00001283: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4739
    00001288: 	callq	clock@PLT # Offset: 4744
    0000128d: 	movl	iterations(%rip), %ecx
    00001293: 	xorl	%r13d, %r13d
    00001296: 	movq	%rax, start_time(%rip)
    0000129d: 	testl	%ecx, %ecx
    0000129f: 	jle	.Ltmp1509 # Offset: 4767
    000012a5: 	nopl	(%rax) # Size: 3
.Ltmp1512:
    000012a8: 	movq	%rbp, %rax
    000012ab: 	pxor	%xmm0, %xmm0
    000012af: 	nop # Size: 1
.Ltmp1510:
    000012b0: 	paddw	(%rax), %xmm0
    000012b4: 	addq	$0x10, %rax
    000012b8: 	cmpq	%rax, %rbx
    000012bb: 	jne	.Ltmp1510 # Offset: 4795
    000012bd: 	movdqa	%xmm0, %xmm1
    000012c1: 	cvttsd2si	init_value(%rip), %eax
    000012c9: 	psrldq	$0x8, %xmm1
    000012ce: 	paddw	%xmm1, %xmm0
    000012d2: 	movdqa	%xmm0, %xmm1
    000012d6: 	psrldq	$0x4, %xmm1
    000012db: 	imulw	$0x1f40, %ax, %ax
    000012e0: 	paddw	%xmm1, %xmm0
    000012e4: 	movdqa	%xmm0, %xmm1
    000012e8: 	psrldq	$0x2, %xmm1
    000012ed: 	paddw	%xmm1, %xmm0
    000012f1: 	pextrw	$0x0, %xmm0, %edx
    000012f6: 	cmpw	%dx, %ax
    000012f9: 	je	.Ltmp1511 # Offset: 4857
    000012fb: 	movl	current_test(%rip), %edx
    00001301: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001308: 	movl	$0x1, %edi
    0000130d: 	xorl	%eax, %eax
    0000130f: 	callq	__printf_chk@PLT # Offset: 4879
    00001314: 	movl	iterations(%rip), %ecx
.Ltmp1511:
    0000131a: 	addl	$0x1, %r13d
    0000131e: 	cmpl	%ecx, %r13d
    00001321: 	jl	.Ltmp1512 # Offset: 4897
.Ltmp1509:
    00001323: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000132a: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00001331: 	subq	$0x20, %rax
    00001335: 	cmpq	%rax, %r13
    00001338: 	je	.Ltmp1513 # Offset: 4920
    0000133e: 	leaq	0x10(%r13), %rdi
    00001342: 	movq	0x68(%rsp), %rcx
    00001347: 	movq	%rdi, (%r13)
    0000134b: 	movq	0x60(%rsp), %rsi
    00001350: 	movq	%rcx, 0x8(%rsp)
    00001355: 	movq	%rsi, %rax
    00001358: 	movq	%rsi, 0x18(%rsp)
    0000135d: 	addq	%rcx, %rax
    00001360: 	je	.Ltmp1514 # Offset: 4960
    00001362: 	testq	%rsi, %rsi
    00001365: 	je	.Ltmp1515 # Offset: 4965
.Ltmp1514:
    0000136b: 	movq	0x8(%rsp), %rax
    00001370: 	movq	%rax, 0x20(%rsp)
    00001375: 	cmpq	$0xf, %rax
    00001379: 	ja	.Ltmp1516 # Offset: 4985
    0000137f: 	cmpq	$0x1, 0x8(%rsp)
    00001385: 	jne	.Ltmp1517 # Offset: 4997
    0000138b: 	movq	0x18(%rsp), %rax
    00001390: 	movzbl	(%rax), %eax
    00001393: 	movb	%al, 0x10(%r13)
.Ltmp1585:
    00001397: 	movq	0x8(%rsp), %rax
    0000139c: 	movq	%rax, 0x8(%r13)
    000013a0: 	movb	$0x0, (%rdi,%rax)
    000013a4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013ab: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013b2: 	addq	$0x20, %rax
    000013b6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013bd: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000013c4: 	je	.Ltmp1518 # Offset: 5060
.Ltmp1554:
    000013ca: 	movq	-0x20(%rax), %r13
    000013ce: 	callq	clock@PLT # Offset: 5070
    000013d3: 	pxor	%xmm0, %xmm0
    000013d7: 	movq	%rax, end_time(%rip)
    000013de: 	movq	%r13, %rdi
    000013e1: 	subq	start_time(%rip), %rax
    000013e8: 	cvtsi2sd	%rax, %xmm0
    000013ed: 	divsd	DATAat0x1a318(%rip), %xmm0
    000013f5: 	callq	_Z13record_resultdPKc # Offset: 5109
    000013fa: 	movq	0x60(%rsp), %rdi
    000013ff: 	cmpq	%r14, %rdi
    00001402: 	je	.Ltmp1519 # Offset: 5122
    00001404: 	movq	0x70(%rsp), %rax
    00001409: 	leaq	0x1(%rax), %rsi
    0000140d: 	callq	_ZdlPvm@PLT # Offset: 5133
.Ltmp1519:
    00001412: 	leaq	DATAat0x1a29b(%rip), %rdx
    00001419: 	movq	%r15, %rsi
    0000141c: 	movq	%r12, %rdi
    0000141f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5151
    00001424: 	callq	clock@PLT # Offset: 5156
    00001429: 	movl	iterations(%rip), %ecx
    0000142f: 	xorl	%r13d, %r13d
    00001432: 	movq	%rax, start_time(%rip)
    00001439: 	testl	%ecx, %ecx
    0000143b: 	jle	.Ltmp1520 # Offset: 5179
    00001441: 	nopl	(%rax) # Size: 7
.Ltmp1523:
    00001448: 	movq	%rbp, %rax
    0000144b: 	pxor	%xmm0, %xmm0
    0000144f: 	nop # Size: 1
.Ltmp1521:
    00001450: 	paddw	(%rax), %xmm0
    00001454: 	addq	$0x10, %rax
    00001458: 	cmpq	%rbx, %rax
    0000145b: 	jne	.Ltmp1521 # Offset: 5211
    0000145d: 	movdqa	%xmm0, %xmm1
    00001461: 	cvttsd2si	init_value(%rip), %eax
    00001469: 	psrldq	$0x8, %xmm1
    0000146e: 	paddw	%xmm1, %xmm0
    00001472: 	movdqa	%xmm0, %xmm1
    00001476: 	psrldq	$0x4, %xmm1
    0000147b: 	imulw	$0x1f40, %ax, %ax
    00001480: 	paddw	%xmm1, %xmm0
    00001484: 	movdqa	%xmm0, %xmm1
    00001488: 	psrldq	$0x2, %xmm1
    0000148d: 	paddw	%xmm1, %xmm0
    00001491: 	pextrw	$0x0, %xmm0, %edx
    00001496: 	cmpw	%dx, %ax
    00001499: 	je	.Ltmp1522 # Offset: 5273
    0000149b: 	movl	current_test(%rip), %edx
    000014a1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000014a8: 	movl	$0x1, %edi
    000014ad: 	xorl	%eax, %eax
    000014af: 	callq	__printf_chk@PLT # Offset: 5295
    000014b4: 	movl	iterations(%rip), %ecx
.Ltmp1522:
    000014ba: 	addl	$0x1, %r13d
    000014be: 	cmpl	%ecx, %r13d
    000014c1: 	jl	.Ltmp1523 # Offset: 5313
.Ltmp1520:
    000014c7: 	movq	%r12, %rdi
    000014ca: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5322
    000014cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000014d6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000014dd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014e4: 	je	.Ltmp1524 # Offset: 5348
.Ltmp1569:
    000014ea: 	movq	-0x20(%rax), %r13
    000014ee: 	callq	clock@PLT # Offset: 5358
    000014f3: 	pxor	%xmm0, %xmm0
    000014f7: 	movq	%rax, end_time(%rip)
    000014fe: 	movq	%r13, %rdi
    00001501: 	subq	start_time(%rip), %rax
    00001508: 	cvtsi2sd	%rax, %xmm0
    0000150d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001515: 	callq	_Z13record_resultdPKc # Offset: 5397
    0000151a: 	movq	0x60(%rsp), %rdi
    0000151f: 	cmpq	%r14, %rdi
    00001522: 	je	.Ltmp1525 # Offset: 5410
    00001524: 	movq	0x70(%rsp), %rax
    00001529: 	leaq	0x1(%rax), %rsi
    0000152d: 	callq	_ZdlPvm@PLT # Offset: 5421
.Ltmp1525:
    00001532: 	leaq	DATAat0x1a2af(%rip), %rdx
    00001539: 	movq	%r15, %rsi
    0000153c: 	movq	%r12, %rdi
    0000153f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5439
    00001544: 	callq	clock@PLT # Offset: 5444
    00001549: 	movl	iterations(%rip), %ecx
    0000154f: 	xorl	%r13d, %r13d
    00001552: 	movq	%rax, start_time(%rip)
    00001559: 	testl	%ecx, %ecx
    0000155b: 	jle	.Ltmp1526 # Offset: 5467
    00001561: 	nopl	(%rax) # Size: 7
.Ltmp1529:
    00001568: 	movq	%rbp, %rax
    0000156b: 	pxor	%xmm0, %xmm0
    0000156f: 	nop # Size: 1
.Ltmp1527:
    00001570: 	paddw	(%rax), %xmm0
    00001574: 	addq	$0x10, %rax
    00001578: 	cmpq	%rax, %rbx
    0000157b: 	jne	.Ltmp1527 # Offset: 5499
    0000157d: 	movdqa	%xmm0, %xmm1
    00001581: 	cvttsd2si	init_value(%rip), %eax
    00001589: 	psrldq	$0x8, %xmm1
    0000158e: 	paddw	%xmm1, %xmm0
    00001592: 	movdqa	%xmm0, %xmm1
    00001596: 	psrldq	$0x4, %xmm1
    0000159b: 	imulw	$0x1f40, %ax, %ax
    000015a0: 	paddw	%xmm1, %xmm0
    000015a4: 	movdqa	%xmm0, %xmm1
    000015a8: 	psrldq	$0x2, %xmm1
    000015ad: 	paddw	%xmm1, %xmm0
    000015b1: 	pextrw	$0x0, %xmm0, %edx
    000015b6: 	cmpw	%dx, %ax
    000015b9: 	je	.Ltmp1528 # Offset: 5561
    000015bb: 	movl	current_test(%rip), %edx
    000015c1: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000015c8: 	movl	$0x1, %edi
    000015cd: 	xorl	%eax, %eax
    000015cf: 	callq	__printf_chk@PLT # Offset: 5583
    000015d4: 	movl	iterations(%rip), %ecx
.Ltmp1528:
    000015da: 	addl	$0x1, %r13d
    000015de: 	cmpl	%ecx, %r13d
    000015e1: 	jl	.Ltmp1529 # Offset: 5601
.Ltmp1526:
    000015e7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015ee: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000015f5: 	subq	$0x20, %rax
    000015f9: 	cmpq	%rax, %r13
    000015fc: 	je	.Ltmp1530 # Offset: 5628
    00001602: 	leaq	0x10(%r13), %rdi
    00001606: 	movq	0x68(%rsp), %rcx
    0000160b: 	movq	%rdi, (%r13)
    0000160f: 	movq	0x60(%rsp), %rsi
    00001614: 	movq	%rcx, 0x8(%rsp)
    00001619: 	movq	%rsi, %rax
    0000161c: 	movq	%rsi, 0x18(%rsp)
    00001621: 	addq	%rcx, %rax
    00001624: 	je	.Ltmp1531 # Offset: 5668
    00001626: 	testq	%rsi, %rsi
    00001629: 	je	.Ltmp1532 # Offset: 5673
.Ltmp1531:
    0000162f: 	movq	0x8(%rsp), %rax
    00001634: 	movq	%rax, 0x20(%rsp)
    00001639: 	cmpq	$0xf, %rax
    0000163d: 	ja	.Ltmp1533 # Offset: 5693
    00001643: 	cmpq	$0x1, 0x8(%rsp)
    00001649: 	jne	.Ltmp1534 # Offset: 5705
    0000164f: 	movq	0x18(%rsp), %rax
    00001654: 	movzbl	(%rax), %eax
    00001657: 	movb	%al, 0x10(%r13)
.Ltmp1589:
    0000165b: 	movq	0x8(%rsp), %rax
    00001660: 	movq	%rax, 0x8(%r13)
    00001664: 	movb	$0x0, (%rdi,%rax)
    00001668: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000166f: 	addq	$0x20, %rax
    00001673: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1568:
    0000167a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001681: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001688: 	je	.Ltmp1535 # Offset: 5768
.Ltmp1567:
    0000168e: 	movq	-0x20(%rax), %r13
    00001692: 	callq	clock@PLT # Offset: 5778
    00001697: 	pxor	%xmm0, %xmm0
    0000169b: 	movq	%rax, end_time(%rip)
    000016a2: 	movq	%r13, %rdi
    000016a5: 	subq	start_time(%rip), %rax
    000016ac: 	cvtsi2sd	%rax, %xmm0
    000016b1: 	divsd	DATAat0x1a318(%rip), %xmm0
    000016b9: 	callq	_Z13record_resultdPKc # Offset: 5817
    000016be: 	movq	0x60(%rsp), %rdi
    000016c3: 	cmpq	%r14, %rdi
    000016c6: 	je	.Ltmp1536 # Offset: 5830
    000016c8: 	movq	0x70(%rsp), %rax
    000016cd: 	leaq	0x1(%rax), %rsi
    000016d1: 	callq	_ZdlPvm@PLT # Offset: 5841
.Ltmp1536:
    000016d6: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000016dd: 	movq	%r15, %rsi
    000016e0: 	movq	%r12, %rdi
    000016e3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5859
    000016e8: 	callq	clock@PLT # Offset: 5864
    000016ed: 	movl	iterations(%rip), %ecx
    000016f3: 	xorl	%r13d, %r13d
    000016f6: 	movq	%rax, start_time(%rip)
    000016fd: 	testl	%ecx, %ecx
    000016ff: 	jle	.Ltmp1537 # Offset: 5887
    00001705: 	nopl	(%rax) # Size: 3
.Ltmp1540:
    00001708: 	movq	%rbp, %rax
    0000170b: 	pxor	%xmm0, %xmm0
    0000170f: 	nop # Size: 1
.Ltmp1538:
    00001710: 	paddw	(%rax), %xmm0
    00001714: 	addq	$0x10, %rax
    00001718: 	cmpq	%rbx, %rax
    0000171b: 	jne	.Ltmp1538 # Offset: 5915
    0000171d: 	movdqa	%xmm0, %xmm1
    00001721: 	cvttsd2si	init_value(%rip), %eax
    00001729: 	psrldq	$0x8, %xmm1
    0000172e: 	paddw	%xmm1, %xmm0
    00001732: 	movdqa	%xmm0, %xmm1
    00001736: 	psrldq	$0x4, %xmm1
    0000173b: 	imulw	$0x1f40, %ax, %ax
    00001740: 	paddw	%xmm1, %xmm0
    00001744: 	movdqa	%xmm0, %xmm1
    00001748: 	psrldq	$0x2, %xmm1
    0000174d: 	paddw	%xmm1, %xmm0
    00001751: 	pextrw	$0x0, %xmm0, %edx
    00001756: 	cmpw	%dx, %ax
    00001759: 	je	.Ltmp1539 # Offset: 5977
    0000175b: 	movl	current_test(%rip), %edx
    00001761: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001768: 	movl	$0x1, %edi
    0000176d: 	xorl	%eax, %eax
    0000176f: 	callq	__printf_chk@PLT # Offset: 5999
    00001774: 	movl	iterations(%rip), %ecx
.Ltmp1539:
    0000177a: 	addl	$0x1, %r13d
    0000177e: 	cmpl	%ecx, %r13d
    00001781: 	jl	.Ltmp1540 # Offset: 6017
.Ltmp1537:
    00001783: 	movq	%r12, %rdi
    00001786: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6022
    0000178b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001792: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001799: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017a0: 	je	.Ltmp1541 # Offset: 6048
.Ltmp1566:
    000017a6: 	movq	-0x20(%rax), %r13
    000017aa: 	callq	clock@PLT # Offset: 6058
    000017af: 	pxor	%xmm0, %xmm0
    000017b3: 	movq	%rax, end_time(%rip)
    000017ba: 	movq	%r13, %rdi
    000017bd: 	subq	start_time(%rip), %rax
    000017c4: 	cvtsi2sd	%rax, %xmm0
    000017c9: 	divsd	DATAat0x1a318(%rip), %xmm0
    000017d1: 	callq	_Z13record_resultdPKc # Offset: 6097
    000017d6: 	movq	0x60(%rsp), %rdi
    000017db: 	cmpq	%r14, %rdi
    000017de: 	je	.Ltmp1542 # Offset: 6110
    000017e0: 	movq	0x70(%rsp), %rax
    000017e5: 	leaq	0x1(%rax), %rsi
    000017e9: 	callq	_ZdlPvm@PLT # Offset: 6121
.Ltmp1542:
    000017ee: 	leaq	DATAat0x1a2d9(%rip), %rdx
    000017f5: 	movq	%r15, %rsi
    000017f8: 	movq	%r12, %rdi
    000017fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6139
    00001800: 	callq	clock@PLT # Offset: 6144
    00001805: 	movl	iterations(%rip), %ecx
    0000180b: 	xorl	%r13d, %r13d
    0000180e: 	movq	%rax, start_time(%rip)
    00001815: 	testl	%ecx, %ecx
    00001817: 	jle	.Ltmp1543 # Offset: 6167
    0000181d: 	nopl	(%rax) # Size: 3
.Ltmp1546:
    00001820: 	movq	%rbp, %rax
    00001823: 	pxor	%xmm0, %xmm0
    00001827: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1544:
    00001830: 	paddw	(%rax), %xmm0
    00001834: 	addq	$0x10, %rax
    00001838: 	cmpq	%rbx, %rax
    0000183b: 	jne	.Ltmp1544 # Offset: 6203
    0000183d: 	movdqa	%xmm0, %xmm1
    00001841: 	cvttsd2si	init_value(%rip), %eax
    00001849: 	psrldq	$0x8, %xmm1
    0000184e: 	paddw	%xmm1, %xmm0
    00001852: 	movdqa	%xmm0, %xmm1
    00001856: 	psrldq	$0x4, %xmm1
    0000185b: 	imulw	$0x1f40, %ax, %ax
    00001860: 	paddw	%xmm1, %xmm0
    00001864: 	movdqa	%xmm0, %xmm1
    00001868: 	psrldq	$0x2, %xmm1
    0000186d: 	paddw	%xmm1, %xmm0
    00001871: 	pextrw	$0x0, %xmm0, %edx
    00001876: 	cmpw	%dx, %ax
    00001879: 	je	.Ltmp1545 # Offset: 6265
    0000187b: 	movl	current_test(%rip), %edx
    00001881: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001888: 	movl	$0x1, %edi
    0000188d: 	xorl	%eax, %eax
    0000188f: 	callq	__printf_chk@PLT # Offset: 6287
    00001894: 	movl	iterations(%rip), %ecx
.Ltmp1545:
    0000189a: 	addl	$0x1, %r13d
    0000189e: 	cmpl	%ecx, %r13d
    000018a1: 	jl	.Ltmp1546 # Offset: 6305
.Ltmp1543:
    000018a7: 	movq	%r12, %rdi
    000018aa: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6314
    000018af: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000018b6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000018bd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000018c4: 	je	.Ltmp1547 # Offset: 6340
.Ltmp1565:
    000018ca: 	movq	-0x20(%rax), %rbp
    000018ce: 	callq	clock@PLT # Offset: 6350
    000018d3: 	pxor	%xmm0, %xmm0
    000018d7: 	movq	%rax, end_time(%rip)
    000018de: 	movq	%rbp, %rdi
    000018e1: 	subq	start_time(%rip), %rax
    000018e8: 	cvtsi2sd	%rax, %xmm0
    000018ed: 	divsd	DATAat0x1a318(%rip), %xmm0
    000018f5: 	callq	_Z13record_resultdPKc # Offset: 6389
    000018fa: 	movq	0x60(%rsp), %rdi
    000018ff: 	cmpq	%r14, %rdi
    00001902: 	je	.Ltmp1548 # Offset: 6402
    00001904: 	movq	0x70(%rsp), %rax
    00001909: 	leaq	0x1(%rax), %rsi
    0000190d: 	callq	_ZdlPvm@PLT # Offset: 6413
.Ltmp1548:
    00001912: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001919: 	movq	%r15, %rsi
    0000191c: 	movq	%r12, %rdi
    0000191f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6431
    00001924: 	movl	iterations(%rip), %edx
    0000192a: 	movq	0x60(%rsp), %rdi
    0000192f: 	xorl	%r8d, %r8d
    00001932: 	xorl	%ecx, %ecx
    00001934: 	movl	$0x1f40, %esi
    00001939: 	callq	_Z9summarizePKciiii # Offset: 6457
    0000193e: 	movq	0x60(%rsp), %rdi
    00001943: 	cmpq	%r14, %rdi
    00001946: 	je	.Ltmp1549 # Offset: 6470
    00001948: 	movq	0x70(%rsp), %rax
    0000194d: 	leaq	0x1(%rax), %rsi
    00001951: 	callq	_ZdlPvm@PLT # Offset: 6481
.Ltmp1549:
    00001956: 	movq	0x40(%rsp), %rdi
    0000195b: 	cmpq	0x10(%rsp), %rdi
    00001960: 	je	.Ltmp1550 # Offset: 6496
    00001962: 	movq	0x50(%rsp), %rax
    00001967: 	leaq	0x1(%rax), %rsi
    0000196b: 	callq	_ZdlPvm@PLT # Offset: 6507
.Ltmp1550:
    00001970: 	movq	0x3f08(%rsp), %rax
    00001978: 	subq	%fs:0x28, %rax
    00001981: 	jne	.Ltmp1551 # Offset: 6529
    00001987: 	addq	$0x3f18, %rsp
    0000198e: 	popq	%rbx
    0000198f: 	popq	%rbp
    00001990: 	popq	%r12
    00001992: 	popq	%r13
    00001994: 	popq	%r14
    00001996: 	popq	%r15
    00001998: 	retq # Offset: 6552
.Ltmp1416:
    00001999: 	movq	(%rsp), %rsi
    0000199d: 	xorl	%edx, %edx
    0000199f: 	movq	%r13, %rdi
    000019a2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6562
    000019a7: 	movq	%rax, (%r13)
    000019ab: 	movq	%rax, %rdi
    000019ae: 	movq	0x20(%rsp), %rax
    000019b3: 	movq	%rax, 0x10(%r13)
.Ltmp1584:
    000019b7: 	movq	0x8(%rsp), %rdx
    000019bc: 	movq	0x18(%rsp), %rsi
    000019c1: 	callq	memcpy@PLT # Offset: 6593
    000019c6: 	movq	0x20(%rsp), %rax
    000019cb: 	movq	(%r13), %rdi
    000019cf: 	movq	%rax, 0x8(%rsp)
    000019d4: 	jmp	.Ltmp1552 # Offset: 6612
.Ltmp1407:
    000019d9: 	movq	-0x8(%rdx), %rax
    000019dd: 	addq	$0x200, %rax
    000019e3: 	jmp	.Ltmp1553 # Offset: 6627
.Ltmp1513:
    000019e8: 	movq	%r12, %rsi
    000019eb: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000019f2: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6642
    000019f7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000019fe: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001a05: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001a0c: 	jne	.Ltmp1554 # Offset: 6668
.Ltmp1518:
    00001a12: 	movq	-0x8(%rdx), %rax
    00001a16: 	addq	$0x200, %rax
    00001a1c: 	jmp	.Ltmp1554 # Offset: 6684
.Ltmp1507:
    00001a21: 	movq	-0x8(%rdx), %rax
    00001a25: 	addq	$0x200, %rax
    00001a2b: 	jmp	.Ltmp1555 # Offset: 6699
.Ltmp1502:
    00001a30: 	movq	%r12, %rsi
    00001a33: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a3a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6714
    00001a3f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a46: 	jmp	.Ltmp1556 # Offset: 6726
.Ltmp1496:
    00001a4b: 	movq	-0x8(%rdx), %rax
    00001a4f: 	addq	$0x200, %rax
    00001a55: 	jmp	.Ltmp1557 # Offset: 6741
.Ltmp1491:
    00001a5a: 	movq	%r12, %rsi
    00001a5d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a64: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6756
    00001a69: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a70: 	jmp	.Ltmp1558 # Offset: 6768
.Ltmp1485:
    00001a75: 	movq	-0x8(%rdx), %rax
    00001a79: 	addq	$0x200, %rax
    00001a7f: 	jmp	.Ltmp1559 # Offset: 6783
.Ltmp1480:
    00001a84: 	movq	%r12, %rsi
    00001a87: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001a8e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6798
    00001a93: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001a9a: 	jmp	.Ltmp1560 # Offset: 6810
.Ltmp1474:
    00001a9f: 	movq	-0x8(%rdx), %rax
    00001aa3: 	addq	$0x200, %rax
    00001aa9: 	jmp	.Ltmp1561 # Offset: 6825
.Ltmp1413:
    00001aae: 	movq	%r12, %rsi
    00001ab1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ab8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6840
    00001abd: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ac4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001acb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ad2: 	jne	.Ltmp1562 # Offset: 6866
.Ltmp1418:
    00001ad8: 	movq	-0x8(%rdx), %rax
    00001adc: 	addq	$0x200, %rax
    00001ae2: 	jmp	.Ltmp1562 # Offset: 6882
.Ltmp1424:
    00001ae7: 	movq	%r12, %rsi
    00001aea: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001af1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 6897
    00001af6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001afd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b04: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b0b: 	jne	.Ltmp1563 # Offset: 6923
.Ltmp1429:
    00001b11: 	movq	-0x8(%rdx), %rax
    00001b15: 	addq	$0x200, %rax
    00001b1b: 	jmp	.Ltmp1563 # Offset: 6939
.Ltmp1401:
    00001b20: 	movq	-0x8(%rdx), %rax
    00001b24: 	addq	$0x200, %rax
    00001b2a: 	jmp	.Ltmp1564 # Offset: 6954
.Ltmp1547:
    00001b2f: 	movq	-0x8(%rdx), %rax
    00001b33: 	addq	$0x200, %rax
    00001b39: 	jmp	.Ltmp1565 # Offset: 6969
.Ltmp1541:
    00001b3e: 	movq	-0x8(%rdx), %rax
    00001b42: 	addq	$0x200, %rax
    00001b48: 	jmp	.Ltmp1566 # Offset: 6984
.Ltmp1535:
    00001b4d: 	movq	-0x8(%rdx), %rax
    00001b51: 	addq	$0x200, %rax
    00001b57: 	jmp	.Ltmp1567 # Offset: 6999
.Ltmp1530:
    00001b5c: 	movq	%r12, %rsi
    00001b5f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b66: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7014
    00001b6b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b72: 	jmp	.Ltmp1568 # Offset: 7026
.Ltmp1524:
    00001b77: 	movq	-0x8(%rdx), %rax
    00001b7b: 	addq	$0x200, %rax
    00001b81: 	jmp	.Ltmp1569 # Offset: 7041
.Ltmp1468:
    00001b86: 	movq	-0x8(%rdx), %rax
    00001b8a: 	addq	$0x200, %rax
    00001b90: 	jmp	.Ltmp1570 # Offset: 7056
.Ltmp1463:
    00001b95: 	movq	%r12, %rsi
    00001b98: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001b9f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7071
    00001ba4: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bab: 	jmp	.Ltmp1571 # Offset: 7083
.Ltmp1457:
    00001bb0: 	movq	-0x8(%rdx), %rax
    00001bb4: 	addq	$0x200, %rax
    00001bba: 	jmp	.Ltmp1572 # Offset: 7098
.Ltmp1452:
    00001bbf: 	movq	%r12, %rsi
    00001bc2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bc9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7113
    00001bce: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bd5: 	jmp	.Ltmp1573 # Offset: 7125
.Ltmp1446:
    00001bda: 	movq	-0x8(%rdx), %rax
    00001bde: 	addq	$0x200, %rax
    00001be4: 	jmp	.Ltmp1574 # Offset: 7140
.Ltmp1441:
    00001be9: 	movq	%r12, %rsi
    00001bec: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bf3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7155
    00001bf8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bff: 	jmp	.Ltmp1575 # Offset: 7167
.Ltmp1435:
    00001c04: 	movq	-0x8(%rdx), %rax
    00001c08: 	addq	$0x200, %rax
    00001c0e: 	jmp	.Ltmp1576 # Offset: 7182
.Ltmp1428:
    00001c13: 	cmpq	$0x0, 0x8(%rsp)
    00001c19: 	je	.Ltmp1577 # Offset: 7193
.Ltmp1594:
    00001c1f: 	movq	0x8(%rsp), %rdx
    00001c24: 	movq	0x18(%rsp), %rsi
    00001c29: 	callq	memcpy@PLT # Offset: 7209
    00001c2e: 	movq	0x20(%rsp), %rax
    00001c33: 	movq	(%r13), %rdi
    00001c37: 	movq	%rax, 0x8(%rsp)
    00001c3c: 	jmp	.Ltmp1577 # Offset: 7228
.Ltmp1456:
    00001c41: 	cmpq	$0x0, 0x8(%rsp)
    00001c47: 	je	.Ltmp1578 # Offset: 7239
    00001c4d: 	jmp	.Ltmp1579 # Offset: 7245
    00001c52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1445:
    00001c58: 	cmpq	$0x0, 0x8(%rsp)
    00001c5e: 	je	.Ltmp1580 # Offset: 7262
    00001c64: 	jmp	.Ltmp1581 # Offset: 7268
    00001c69: 	nopl	(%rax) # Size: 7
.Ltmp1495:
    00001c70: 	cmpq	$0x0, 0x8(%rsp)
    00001c76: 	je	.Ltmp1582 # Offset: 7286
    00001c7c: 	jmp	.Ltmp1583 # Offset: 7292
    00001c81: 	nopl	(%rax) # Size: 7
.Ltmp1417:
    00001c88: 	cmpq	$0x0, 0x8(%rsp)
    00001c8e: 	je	.Ltmp1552 # Offset: 7310
    00001c94: 	jmp	.Ltmp1584 # Offset: 7316
    00001c99: 	nopl	(%rax) # Size: 7
.Ltmp1517:
    00001ca0: 	cmpq	$0x0, 0x8(%rsp)
    00001ca6: 	je	.Ltmp1585 # Offset: 7334
    00001cac: 	jmp	.Ltmp1586 # Offset: 7340
    00001cb1: 	nopl	(%rax) # Size: 7
.Ltmp1506:
    00001cb8: 	cmpq	$0x0, 0x8(%rsp)
    00001cbe: 	je	.Ltmp1587 # Offset: 7358
    00001cc4: 	jmp	.Ltmp1588 # Offset: 7364
    00001cc9: 	nopl	(%rax) # Size: 7
.Ltmp1534:
    00001cd0: 	cmpq	$0x0, 0x8(%rsp)
    00001cd6: 	je	.Ltmp1589 # Offset: 7382
.Ltmp1595:
    00001cdc: 	movq	0x8(%rsp), %rdx
    00001ce1: 	movq	0x18(%rsp), %rsi
    00001ce6: 	callq	memcpy@PLT # Offset: 7398
    00001ceb: 	movq	0x20(%rsp), %rax
    00001cf0: 	movq	(%r13), %rdi
    00001cf4: 	movq	%rax, 0x8(%rsp)
    00001cf9: 	jmp	.Ltmp1589 # Offset: 7417
.Ltmp1484:
    00001cfe: 	cmpq	$0x0, 0x8(%rsp)
    00001d04: 	je	.Ltmp1590 # Offset: 7428
    00001d0a: 	jmp	.Ltmp1591 # Offset: 7434
    00001d0f: 	nop # Size: 1
.Ltmp1467:
    00001d10: 	cmpq	$0x0, 0x8(%rsp)
    00001d16: 	je	.Ltmp1592 # Offset: 7446
.Ltmp1593:
    00001d1c: 	movq	0x8(%rsp), %rdx
    00001d21: 	movq	0x18(%rsp), %rsi
    00001d26: 	callq	memcpy@PLT # Offset: 7462
    00001d2b: 	movq	0x20(%rsp), %rax
    00001d30: 	movq	(%r13), %rdi
    00001d34: 	movq	%rax, 0x8(%rsp)
    00001d39: 	jmp	.Ltmp1592 # Offset: 7481
.Ltmp1516:
    00001d3e: 	movq	(%rsp), %rsi
    00001d42: 	xorl	%edx, %edx
    00001d44: 	movq	%r13, %rdi
    00001d47: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7495
    00001d4c: 	movq	%rax, (%r13)
    00001d50: 	movq	%rax, %rdi
    00001d53: 	movq	0x20(%rsp), %rax
    00001d58: 	movq	%rax, 0x10(%r13)
.Ltmp1586:
    00001d5c: 	movq	0x8(%rsp), %rdx
    00001d61: 	movq	0x18(%rsp), %rsi
    00001d66: 	callq	memcpy@PLT # Offset: 7526
    00001d6b: 	movq	0x20(%rsp), %rax
    00001d70: 	movq	(%r13), %rdi
    00001d74: 	movq	%rax, 0x8(%rsp)
    00001d79: 	jmp	.Ltmp1585 # Offset: 7545
.Ltmp1466:
    00001d7e: 	movq	(%rsp), %rsi
    00001d82: 	xorl	%edx, %edx
    00001d84: 	movq	%r13, %rdi
    00001d87: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7559
    00001d8c: 	movq	%rax, (%r13)
    00001d90: 	movq	%rax, %rdi
    00001d93: 	movq	0x20(%rsp), %rax
    00001d98: 	movq	%rax, 0x10(%r13)
    00001d9c: 	jmp	.Ltmp1593 # Offset: 7580
.Ltmp1455:
    00001da1: 	movq	(%rsp), %rsi
    00001da5: 	xorl	%edx, %edx
    00001da7: 	movq	%r13, %rdi
    00001daa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7594
    00001daf: 	movq	%rax, (%r13)
    00001db3: 	movq	%rax, %rdi
    00001db6: 	movq	0x20(%rsp), %rax
    00001dbb: 	movq	%rax, 0x10(%r13)
.Ltmp1579:
    00001dbf: 	movq	0x8(%rsp), %rdx
    00001dc4: 	movq	0x18(%rsp), %rsi
    00001dc9: 	callq	memcpy@PLT # Offset: 7625
    00001dce: 	movq	0x20(%rsp), %rax
    00001dd3: 	movq	(%r13), %rdi
    00001dd7: 	movq	%rax, 0x8(%rsp)
    00001ddc: 	jmp	.Ltmp1578 # Offset: 7644
.Ltmp1444:
    00001de1: 	movq	(%rsp), %rsi
    00001de5: 	xorl	%edx, %edx
    00001de7: 	movq	%r13, %rdi
    00001dea: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7658
    00001def: 	movq	%rax, (%r13)
    00001df3: 	movq	%rax, %rdi
    00001df6: 	movq	0x20(%rsp), %rax
    00001dfb: 	movq	%rax, 0x10(%r13)
.Ltmp1581:
    00001dff: 	movq	0x8(%rsp), %rdx
    00001e04: 	movq	0x18(%rsp), %rsi
    00001e09: 	callq	memcpy@PLT # Offset: 7689
    00001e0e: 	movq	0x20(%rsp), %rax
    00001e13: 	movq	(%r13), %rdi
    00001e17: 	movq	%rax, 0x8(%rsp)
    00001e1c: 	jmp	.Ltmp1580 # Offset: 7708
.Ltmp1494:
    00001e21: 	movq	(%rsp), %rsi
    00001e25: 	xorl	%edx, %edx
    00001e27: 	movq	%r13, %rdi
    00001e2a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7722
    00001e2f: 	movq	%rax, (%r13)
    00001e33: 	movq	%rax, %rdi
    00001e36: 	movq	0x20(%rsp), %rax
    00001e3b: 	movq	%rax, 0x10(%r13)
.Ltmp1583:
    00001e3f: 	movq	0x8(%rsp), %rdx
    00001e44: 	movq	0x18(%rsp), %rsi
    00001e49: 	callq	memcpy@PLT # Offset: 7753
    00001e4e: 	movq	0x20(%rsp), %rax
    00001e53: 	movq	(%r13), %rdi
    00001e57: 	movq	%rax, 0x8(%rsp)
    00001e5c: 	jmp	.Ltmp1582 # Offset: 7772
.Ltmp1505:
    00001e61: 	movq	(%rsp), %rsi
    00001e65: 	xorl	%edx, %edx
    00001e67: 	movq	%r13, %rdi
    00001e6a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7786
    00001e6f: 	movq	%rax, (%r13)
    00001e73: 	movq	%rax, %rdi
    00001e76: 	movq	0x20(%rsp), %rax
    00001e7b: 	movq	%rax, 0x10(%r13)
.Ltmp1588:
    00001e7f: 	movq	0x8(%rsp), %rdx
    00001e84: 	movq	0x18(%rsp), %rsi
    00001e89: 	callq	memcpy@PLT # Offset: 7817
    00001e8e: 	movq	0x20(%rsp), %rax
    00001e93: 	movq	(%r13), %rdi
    00001e97: 	movq	%rax, 0x8(%rsp)
    00001e9c: 	jmp	.Ltmp1587 # Offset: 7836
.Ltmp1427:
    00001ea1: 	movq	(%rsp), %rsi
    00001ea5: 	xorl	%edx, %edx
    00001ea7: 	movq	%r13, %rdi
    00001eaa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7850
    00001eaf: 	movq	%rax, (%r13)
    00001eb3: 	movq	%rax, %rdi
    00001eb6: 	movq	0x20(%rsp), %rax
    00001ebb: 	movq	%rax, 0x10(%r13)
    00001ebf: 	jmp	.Ltmp1594 # Offset: 7871
.Ltmp1483:
    00001ec4: 	movq	(%rsp), %rsi
    00001ec8: 	xorl	%edx, %edx
    00001eca: 	movq	%r13, %rdi
    00001ecd: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7885
    00001ed2: 	movq	%rax, (%r13)
    00001ed6: 	movq	%rax, %rdi
    00001ed9: 	movq	0x20(%rsp), %rax
    00001ede: 	movq	%rax, 0x10(%r13)
.Ltmp1591:
    00001ee2: 	movq	0x8(%rsp), %rdx
    00001ee7: 	movq	0x18(%rsp), %rsi
    00001eec: 	callq	memcpy@PLT # Offset: 7916
    00001ef1: 	movq	0x20(%rsp), %rax
    00001ef6: 	movq	(%r13), %rdi
    00001efa: 	movq	%rax, 0x8(%rsp)
    00001eff: 	jmp	.Ltmp1590 # Offset: 7935
.Ltmp1533:
    00001f04: 	movq	(%rsp), %rsi
    00001f08: 	xorl	%edx, %edx
    00001f0a: 	movq	%r13, %rdi
    00001f0d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7949
    00001f12: 	movq	%rax, (%r13)
    00001f16: 	movq	%rax, %rdi
    00001f19: 	movq	0x20(%rsp), %rax
    00001f1e: 	movq	%rax, 0x10(%r13)
    00001f22: 	jmp	.Ltmp1595 # Offset: 7970
.Ltmp1426:
    00001f27: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f2e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7982
.Ltmp1443:
    00001f33: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f3a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 7994
.Ltmp1454:
    00001f3f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f46: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8006
.Ltmp1465:
    00001f4b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f52: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8018
.Ltmp1482:
    00001f57: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f5e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8030
.Ltmp1493:
    00001f63: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f6a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8042
.Ltmp1504:
    00001f6f: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f76: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8054
.Ltmp1515:
    00001f7b: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f82: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8066
.Ltmp1532:
    00001f87: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f8e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8078
.Ltmp1551:
    00001f93: 	callq	__stack_chk_fail@PLT # Offset: 8083
.Ltmp1415:
    00001f98: 	leaq	DATAat0x1a158(%rip), %rdi
    00001f9f: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8095
    00001fa4: 	endbr64
.Ltmp1597:
    00001fa8: 	movq	%rax, %rbp
    00001fab: 	jmp	.Ltmp1596 # Offset: 8107
    00001fb0: 	endbr64
    00001fb4: 	jmp	.Ltmp1597 # Offset: 8116
    00001fb6: 	endbr64
    00001fba: 	jmp	.Ltmp1597 # Offset: 8122
    00001fbc: 	endbr64
    00001fc0: 	jmp	.Ltmp1597 # Offset: 8128
    00001fc2: 	endbr64
    00001fc6: 	jmp	.Ltmp1597 # Offset: 8134
    00001fc8: 	endbr64
    00001fcc: 	movq	%rax, %rbp
    00001fcf: 	jmp	.Ltmp1598 # Offset: 8143
    00001fd1: 	endbr64
    00001fd5: 	movq	%rax, %rbp
    00001fd8: 	jmp	.Ltmp1599 # Offset: 8152
    00001fda: 	endbr64
    00001fde: 	jmp	.Ltmp1597 # Offset: 8158
.Ltmp1598:
    00001fe0: 	movq	0x60(%rsp), %rdi
    00001fe5: 	leaq	0x70(%rsp), %rax
    00001fea: 	cmpq	%rax, %rdi
    00001fed: 	je	.Ltmp1599 # Offset: 8173
.Ltmp1601:
    00001fef: 	movq	0x70(%rsp), %rax
    00001ff4: 	leaq	0x1(%rax), %rsi
    00001ff8: 	callq	_ZdlPvm@PLT # Offset: 8184
.Ltmp1599:
    00001ffd: 	movq	0x40(%rsp), %rdi
    00002002: 	cmpq	0x10(%rsp), %rdi
    00002007: 	je	.Ltmp1600 # Offset: 8199
    00002009: 	movq	0x50(%rsp), %rax
    0000200e: 	leaq	0x1(%rax), %rsi
    00002012: 	callq	_ZdlPvm@PLT # Offset: 8210
.Ltmp1600:
    00002017: 	movq	%rbp, %rdi
    0000201a: 	callq	_Unwind_Resume@PLT # Offset: 8218
    0000201f: 	endbr64
    00002023: 	jmp	.Ltmp1597 # Offset: 8227
    00002025: 	endbr64
    00002029: 	jmp	.Ltmp1597 # Offset: 8233
    0000202e: 	endbr64
    00002032: 	jmp	.Ltmp1597 # Offset: 8242
    00002037: 	endbr64
    0000203b: 	jmp	.Ltmp1597 # Offset: 8251
    00002040: 	endbr64
    00002044: 	jmp	.Ltmp1597 # Offset: 8260
    00002049: 	endbr64
    0000204d: 	jmp	.Ltmp1597 # Offset: 8269
    00002052: 	endbr64
    00002056: 	jmp	.Ltmp1597 # Offset: 8278
    0000205b: 	endbr64
    0000205f: 	jmp	.Ltmp1597 # Offset: 8287
    00002064: 	endbr64
    00002068: 	jmp	.Ltmp1597 # Offset: 8296
    0000206d: 	endbr64
    00002071: 	jmp	.Ltmp1597 # Offset: 8305
    00002076: 	endbr64
    0000207a: 	jmp	.Ltmp1597 # Offset: 8314
.Ltmp1596:
    0000207f: 	movq	0x60(%rsp), %rdi
    00002084: 	cmpq	%r14, %rdi
    00002087: 	jne	.Ltmp1601 # Offset: 8327
    0000208d: 	jmp	.Ltmp1599 # Offset: 8333
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeItEvv"

Binary Function "_Z11TestOneTypeImEvv" after disassembly {
  Number      : 53
  State       : disassembled
  Address     : 0x10c80
  Size        : 0x2218
  MaxSize     : 0x2220
  Offset      : 0x10c80
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeImEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB052:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp1602:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1602 # Offset: 37
    00000027: 	subq	$0xa98, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm2
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0xfa88(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x20(%rsp), %rsi
    0000005d: 	movaps	%xmm2, 0x20(%rsp)
    00000062: 	movq	%rsi, (%rsp)
    00000066: 	movaps	%xmm3, 0x30(%rsp)
    0000006b: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 107
    00000070: 	leaq	0x50(%rsp), %rax
    00000075: 	movb	$0x0, 0x58(%rsp)
    0000007a: 	movsd	init_value(%rip), %xmm0
    00000082: 	comisd	DATAat0x1a328(%rip), %xmm0
    0000008a: 	movq	%rax, 0x10(%rsp)
    0000008f: 	movq	%rax, 0x40(%rsp)
    00000094: 	movabsq	$0x745f3436746e6975, %rax
    0000009e: 	movq	%rax, 0x50(%rsp)
    000000a3: 	movq	$0x8, 0x48(%rsp)
    000000ac: 	jae	.Ltmp1603 # Offset: 172
    000000b2: 	cvttsd2si	%xmm0, %rax
.Ltmp1779:
    000000b7: 	movq	%rax, %xmm0
    000000bc: 	leaq	0x80(%rsp), %rbp
    000000c4: 	leaq	0xfa80(%rsp), %rbx
    000000cc: 	punpcklqdq	%xmm0, %xmm0
    000000d0: 	movq	%rbp, %rax
    000000d3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp1604:
    000000d8: 	movaps	%xmm0, (%rax)
    000000db: 	addq	$0x10, %rax
    000000df: 	cmpq	%rax, %rbx
    000000e2: 	jne	.Ltmp1604 # Offset: 226
    000000e4: 	leaq	0x60(%rsp), %r12
    000000e9: 	leaq	0x40(%rsp), %r15
    000000ee: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000f5: 	movq	%r15, %rsi
    000000f8: 	movq	%r12, %rdi
    000000fb: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 251
    00000100: 	callq	clock@PLT # Offset: 256
    00000105: 	movl	iterations(%rip), %ecx
    0000010b: 	xorl	%r13d, %r13d
    0000010e: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000115: 	movq	%rax, start_time(%rip)
    0000011c: 	testl	%ecx, %ecx
    0000011e: 	jle	.Ltmp1605 # Offset: 286
.Ltmp1609:
    00000120: 	movq	%rbp, %rax
    00000123: 	pxor	%xmm0, %xmm0
    00000127: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1606:
    00000130: 	paddq	(%rax), %xmm0
    00000134: 	addq	$0x10, %rax
    00000138: 	cmpq	%rbx, %rax
    0000013b: 	jne	.Ltmp1606 # Offset: 315
    0000013d: 	movsd	init_value(%rip), %xmm1
    00000145: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000014d: 	jae	.Ltmp1607 # Offset: 333
    00000153: 	cvttsd2si	%xmm1, %rax
.Ltmp1778:
    00000158: 	movdqa	%xmm0, %xmm1
    0000015c: 	imulq	$0x1f40, %rax, %rdx
    00000163: 	psrldq	$0x8, %xmm1
    00000168: 	paddq	%xmm1, %xmm0
    0000016c: 	movq	%xmm0, %rax
    00000171: 	cmpq	%rax, %rdx
    00000174: 	je	.Ltmp1608 # Offset: 372
    00000176: 	movl	current_test(%rip), %edx
    0000017c: 	movq	%r14, %rsi
    0000017f: 	movl	$0x1, %edi
    00000184: 	xorl	%eax, %eax
    00000186: 	callq	__printf_chk@PLT # Offset: 390
    0000018b: 	movl	iterations(%rip), %ecx
.Ltmp1608:
    00000191: 	addl	$0x1, %r13d
    00000195: 	cmpl	%ecx, %r13d
    00000198: 	jl	.Ltmp1609 # Offset: 408
.Ltmp1605:
    0000019a: 	movq	%r12, %rdi
    0000019d: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 413
    000001a2: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001a9: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001b7: 	je	.Ltmp1610 # Offset: 439
.Ltmp1811:
    000001bd: 	movq	-0x20(%rax), %r13
    000001c1: 	callq	clock@PLT # Offset: 449
    000001c6: 	pxor	%xmm0, %xmm0
    000001ca: 	movq	%rax, end_time(%rip)
    000001d1: 	movq	%r13, %rdi
    000001d4: 	subq	start_time(%rip), %rax
    000001db: 	cvtsi2sd	%rax, %xmm0
    000001e0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000001e8: 	callq	_Z13record_resultdPKc # Offset: 488
    000001ed: 	movq	0x60(%rsp), %rdi
    000001f2: 	leaq	0x70(%rsp), %r14
    000001f7: 	cmpq	%r14, %rdi
    000001fa: 	je	.Ltmp1611 # Offset: 506
    000001fc: 	movq	0x70(%rsp), %rax
    00000201: 	leaq	0x1(%rax), %rsi
    00000205: 	callq	_ZdlPvm@PLT # Offset: 517
.Ltmp1611:
    0000020a: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000211: 	movq	%r15, %rsi
    00000214: 	movq	%r12, %rdi
    00000217: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 535
    0000021c: 	callq	clock@PLT # Offset: 540
    00000221: 	movl	iterations(%rip), %ecx
    00000227: 	xorl	%r13d, %r13d
    0000022a: 	movq	%rax, start_time(%rip)
    00000231: 	testl	%ecx, %ecx
    00000233: 	jle	.Ltmp1612 # Offset: 563
    00000235: 	nopl	(%rax) # Size: 3
.Ltmp1616:
    00000238: 	movq	%rbp, %rax
    0000023b: 	pxor	%xmm0, %xmm0
    0000023f: 	nop # Size: 1
.Ltmp1613:
    00000240: 	paddq	(%rax), %xmm0
    00000244: 	addq	$0x10, %rax
    00000248: 	cmpq	%rax, %rbx
    0000024b: 	jne	.Ltmp1613 # Offset: 587
    0000024d: 	movsd	init_value(%rip), %xmm1
    00000255: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000025d: 	jae	.Ltmp1614 # Offset: 605
    00000263: 	cvttsd2si	%xmm1, %rax
.Ltmp1777:
    00000268: 	movdqa	%xmm0, %xmm1
    0000026c: 	imulq	$0x1f40, %rax, %rdx
    00000273: 	psrldq	$0x8, %xmm1
    00000278: 	paddq	%xmm1, %xmm0
    0000027c: 	movq	%xmm0, %rax
    00000281: 	cmpq	%rax, %rdx
    00000284: 	je	.Ltmp1615 # Offset: 644
    00000286: 	movl	current_test(%rip), %edx
    0000028c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000293: 	movl	$0x1, %edi
    00000298: 	xorl	%eax, %eax
    0000029a: 	callq	__printf_chk@PLT # Offset: 666
    0000029f: 	movl	iterations(%rip), %ecx
.Ltmp1615:
    000002a5: 	addl	$0x1, %r13d
    000002a9: 	cmpl	%ecx, %r13d
    000002ac: 	jl	.Ltmp1616 # Offset: 684
.Ltmp1612:
    000002ae: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000002b5: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000002bc: 	subq	$0x20, %rax
    000002c0: 	cmpq	%rax, %r13
    000002c3: 	je	.Ltmp1617 # Offset: 707
    000002c9: 	leaq	0x10(%r13), %rdi
    000002cd: 	movq	0x68(%rsp), %rsi
    000002d2: 	movq	%rdi, (%r13)
    000002d6: 	movq	0x60(%rsp), %rcx
    000002db: 	movq	%rsi, 0x8(%rsp)
    000002e0: 	movq	%rcx, %rax
    000002e3: 	movq	%rcx, 0x18(%rsp)
    000002e8: 	addq	%rsi, %rax
    000002eb: 	je	.Ltmp1618 # Offset: 747
    000002ed: 	testq	%rcx, %rcx
    000002f0: 	je	.Ltmp1619 # Offset: 752
.Ltmp1618:
    000002f6: 	movq	0x8(%rsp), %rax
    000002fb: 	movq	%rax, 0x20(%rsp)
    00000300: 	cmpq	$0xf, %rax
    00000304: 	ja	.Ltmp1620 # Offset: 772
    0000030a: 	cmpq	$0x1, 0x8(%rsp)
    00000310: 	jne	.Ltmp1621 # Offset: 784
    00000316: 	movq	0x18(%rsp), %rax
    0000031b: 	movzbl	(%rax), %eax
    0000031e: 	movb	%al, 0x10(%r13)
.Ltmp1780:
    00000322: 	movq	0x8(%rsp), %rax
    00000327: 	movq	%rax, 0x8(%r13)
    0000032b: 	movb	$0x0, (%rdi,%rax)
    0000032f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000336: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000033d: 	addq	$0x20, %rax
    00000341: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000348: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000034f: 	je	.Ltmp1622 # Offset: 847
.Ltmp1797:
    00000355: 	movq	-0x20(%rax), %r13
    00000359: 	callq	clock@PLT # Offset: 857
    0000035e: 	pxor	%xmm0, %xmm0
    00000362: 	movq	%rax, end_time(%rip)
    00000369: 	movq	%r13, %rdi
    0000036c: 	subq	start_time(%rip), %rax
    00000373: 	cvtsi2sd	%rax, %xmm0
    00000378: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000380: 	callq	_Z13record_resultdPKc # Offset: 896
    00000385: 	movq	0x60(%rsp), %rdi
    0000038a: 	cmpq	%r14, %rdi
    0000038d: 	je	.Ltmp1623 # Offset: 909
    0000038f: 	movq	0x70(%rsp), %rax
    00000394: 	leaq	0x1(%rax), %rsi
    00000398: 	callq	_ZdlPvm@PLT # Offset: 920
.Ltmp1623:
    0000039d: 	leaq	DATAat0x1a1ee(%rip), %rdx
    000003a4: 	movq	%r15, %rsi
    000003a7: 	movq	%r12, %rdi
    000003aa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 938
    000003af: 	callq	clock@PLT # Offset: 943
    000003b4: 	movl	iterations(%rip), %ecx
    000003ba: 	xorl	%r13d, %r13d
    000003bd: 	movq	%rax, start_time(%rip)
    000003c4: 	testl	%ecx, %ecx
    000003c6: 	jle	.Ltmp1624 # Offset: 966
    000003cc: 	nopl	(%rax) # Size: 4
.Ltmp1628:
    000003d0: 	movq	%rbp, %rax
    000003d3: 	pxor	%xmm0, %xmm0
    000003d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1625:
    000003e0: 	paddq	(%rax), %xmm0
    000003e4: 	addq	$0x10, %rax
    000003e8: 	cmpq	%rbx, %rax
    000003eb: 	jne	.Ltmp1625 # Offset: 1003
    000003ed: 	movsd	init_value(%rip), %xmm1
    000003f5: 	comisd	DATAat0x1a328(%rip), %xmm1
    000003fd: 	jae	.Ltmp1626 # Offset: 1021
    00000403: 	cvttsd2si	%xmm1, %rax
.Ltmp1794:
    00000408: 	movdqa	%xmm0, %xmm1
    0000040c: 	imulq	$0x1f40, %rax, %rdx
    00000413: 	psrldq	$0x8, %xmm1
    00000418: 	paddq	%xmm1, %xmm0
    0000041c: 	movq	%xmm0, %rax
    00000421: 	cmpq	%rax, %rdx
    00000424: 	je	.Ltmp1627 # Offset: 1060
    00000426: 	movl	current_test(%rip), %edx
    0000042c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000433: 	movl	$0x1, %edi
    00000438: 	xorl	%eax, %eax
    0000043a: 	callq	__printf_chk@PLT # Offset: 1082
    0000043f: 	movl	iterations(%rip), %ecx
.Ltmp1627:
    00000445: 	addl	$0x1, %r13d
    00000449: 	cmpl	%ecx, %r13d
    0000044c: 	jl	.Ltmp1628 # Offset: 1100
.Ltmp1624:
    0000044e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000455: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000045c: 	subq	$0x20, %rax
    00000460: 	cmpq	%rax, %r13
    00000463: 	je	.Ltmp1629 # Offset: 1123
    00000469: 	leaq	0x10(%r13), %rdi
    0000046d: 	movq	0x68(%rsp), %rsi
    00000472: 	movq	%rdi, (%r13)
    00000476: 	movq	0x60(%rsp), %rcx
    0000047b: 	movq	%rsi, 0x8(%rsp)
    00000480: 	movq	%rcx, %rax
    00000483: 	movq	%rcx, 0x18(%rsp)
    00000488: 	addq	%rsi, %rax
    0000048b: 	je	.Ltmp1630 # Offset: 1163
    0000048d: 	testq	%rcx, %rcx
    00000490: 	je	.Ltmp1631 # Offset: 1168
.Ltmp1630:
    00000496: 	movq	0x8(%rsp), %rax
    0000049b: 	movq	%rax, 0x20(%rsp)
    000004a0: 	cmpq	$0xf, %rax
    000004a4: 	ja	.Ltmp1632 # Offset: 1188
    000004aa: 	cmpq	$0x1, 0x8(%rsp)
    000004b0: 	jne	.Ltmp1633 # Offset: 1200
    000004b6: 	movq	0x18(%rsp), %rax
    000004bb: 	movzbl	(%rax), %eax
    000004be: 	movb	%al, 0x10(%r13)
.Ltmp1834:
    000004c2: 	movq	0x8(%rsp), %rax
    000004c7: 	movq	%rax, 0x8(%r13)
    000004cb: 	movb	$0x0, (%rdi,%rax)
    000004cf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000004d6: 	addq	$0x20, %rax
    000004da: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1810:
    000004e1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000004e8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000004ef: 	je	.Ltmp1634 # Offset: 1263
.Ltmp1803:
    000004f5: 	movq	-0x20(%rax), %r13
    000004f9: 	callq	clock@PLT # Offset: 1273
    000004fe: 	pxor	%xmm0, %xmm0
    00000502: 	movq	%rax, end_time(%rip)
    00000509: 	movq	%r13, %rdi
    0000050c: 	subq	start_time(%rip), %rax
    00000513: 	cvtsi2sd	%rax, %xmm0
    00000518: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000520: 	callq	_Z13record_resultdPKc # Offset: 1312
    00000525: 	movq	0x60(%rsp), %rdi
    0000052a: 	cmpq	%r14, %rdi
    0000052d: 	je	.Ltmp1635 # Offset: 1325
    0000052f: 	movq	0x70(%rsp), %rax
    00000534: 	leaq	0x1(%rax), %rsi
    00000538: 	callq	_ZdlPvm@PLT # Offset: 1336
.Ltmp1635:
    0000053d: 	leaq	DATAat0x1a1fb(%rip), %rdx
    00000544: 	movq	%r15, %rsi
    00000547: 	movq	%r12, %rdi
    0000054a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1354
    0000054f: 	callq	clock@PLT # Offset: 1359
    00000554: 	movl	iterations(%rip), %ecx
    0000055a: 	xorl	%r13d, %r13d
    0000055d: 	movq	%rax, start_time(%rip)
    00000564: 	testl	%ecx, %ecx
    00000566: 	jle	.Ltmp1636 # Offset: 1382
    0000056c: 	nopl	(%rax) # Size: 4
.Ltmp1640:
    00000570: 	movq	%rbp, %rax
    00000573: 	pxor	%xmm0, %xmm0
    00000577: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1637:
    00000580: 	paddq	(%rax), %xmm0
    00000584: 	addq	$0x10, %rax
    00000588: 	cmpq	%rax, %rbx
    0000058b: 	jne	.Ltmp1637 # Offset: 1419
    0000058d: 	movsd	init_value(%rip), %xmm1
    00000595: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000059d: 	jae	.Ltmp1638 # Offset: 1437
    000005a3: 	cvttsd2si	%xmm1, %rax
.Ltmp1789:
    000005a8: 	movdqa	%xmm0, %xmm1
    000005ac: 	imulq	$0x1f40, %rax, %rdx
    000005b3: 	psrldq	$0x8, %xmm1
    000005b8: 	paddq	%xmm1, %xmm0
    000005bc: 	movq	%xmm0, %rax
    000005c1: 	cmpq	%rax, %rdx
    000005c4: 	je	.Ltmp1639 # Offset: 1476
    000005c6: 	movl	current_test(%rip), %edx
    000005cc: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000005d3: 	movl	$0x1, %edi
    000005d8: 	xorl	%eax, %eax
    000005da: 	callq	__printf_chk@PLT # Offset: 1498
    000005df: 	movl	iterations(%rip), %ecx
.Ltmp1639:
    000005e5: 	addl	$0x1, %r13d
    000005e9: 	cmpl	%ecx, %r13d
    000005ec: 	jl	.Ltmp1640 # Offset: 1516
.Ltmp1636:
    000005ee: 	movq	%r12, %rdi
    000005f1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1521
    000005f6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005fd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000604: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000060b: 	je	.Ltmp1641 # Offset: 1547
.Ltmp1796:
    00000611: 	movq	-0x20(%rax), %r13
    00000615: 	callq	clock@PLT # Offset: 1557
    0000061a: 	pxor	%xmm0, %xmm0
    0000061e: 	movq	%rax, end_time(%rip)
    00000625: 	movq	%r13, %rdi
    00000628: 	subq	start_time(%rip), %rax
    0000062f: 	cvtsi2sd	%rax, %xmm0
    00000634: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000063c: 	callq	_Z13record_resultdPKc # Offset: 1596
    00000641: 	movq	0x60(%rsp), %rdi
    00000646: 	cmpq	%r14, %rdi
    00000649: 	je	.Ltmp1642 # Offset: 1609
    0000064b: 	movq	0x70(%rsp), %rax
    00000650: 	leaq	0x1(%rax), %rsi
    00000654: 	callq	_ZdlPvm@PLT # Offset: 1620
.Ltmp1642:
    00000659: 	leaq	DATAat0x1a208(%rip), %rdx
    00000660: 	movq	%r15, %rsi
    00000663: 	movq	%r12, %rdi
    00000666: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1638
    0000066b: 	callq	clock@PLT # Offset: 1643
    00000670: 	movl	iterations(%rip), %ecx
    00000676: 	xorl	%r13d, %r13d
    00000679: 	movq	%rax, start_time(%rip)
    00000680: 	testl	%ecx, %ecx
    00000682: 	jle	.Ltmp1643 # Offset: 1666
    00000684: 	nopl	(%rax) # Size: 4
.Ltmp1647:
    00000688: 	movq	%rbp, %rax
    0000068b: 	pxor	%xmm0, %xmm0
    0000068f: 	nop # Size: 1
.Ltmp1644:
    00000690: 	paddq	(%rax), %xmm0
    00000694: 	addq	$0x10, %rax
    00000698: 	cmpq	%rbx, %rax
    0000069b: 	jne	.Ltmp1644 # Offset: 1691
    0000069d: 	movsd	init_value(%rip), %xmm1
    000006a5: 	comisd	DATAat0x1a328(%rip), %xmm1
    000006ad: 	jae	.Ltmp1645 # Offset: 1709
    000006b3: 	cvttsd2si	%xmm1, %rax
.Ltmp1795:
    000006b8: 	movdqa	%xmm0, %xmm1
    000006bc: 	imulq	$0x1f40, %rax, %rdx
    000006c3: 	psrldq	$0x8, %xmm1
    000006c8: 	paddq	%xmm1, %xmm0
    000006cc: 	movq	%xmm0, %rax
    000006d1: 	cmpq	%rax, %rdx
    000006d4: 	je	.Ltmp1646 # Offset: 1748
    000006d6: 	movl	current_test(%rip), %edx
    000006dc: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000006e3: 	movl	$0x1, %edi
    000006e8: 	xorl	%eax, %eax
    000006ea: 	callq	__printf_chk@PLT # Offset: 1770
    000006ef: 	movl	iterations(%rip), %ecx
.Ltmp1646:
    000006f5: 	addl	$0x1, %r13d
    000006f9: 	cmpl	%ecx, %r13d
    000006fc: 	jl	.Ltmp1647 # Offset: 1788
.Ltmp1643:
    000006fe: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000705: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000070c: 	subq	$0x20, %rax
    00000710: 	cmpq	%rax, %r13
    00000713: 	je	.Ltmp1648 # Offset: 1811
    00000719: 	leaq	0x10(%r13), %rdi
    0000071d: 	movq	0x68(%rsp), %rcx
    00000722: 	movq	%rdi, (%r13)
    00000726: 	movq	0x60(%rsp), %rsi
    0000072b: 	movq	%rcx, 0x8(%rsp)
    00000730: 	movq	%rsi, %rax
    00000733: 	movq	%rsi, 0x18(%rsp)
    00000738: 	addq	%rcx, %rax
    0000073b: 	je	.Ltmp1649 # Offset: 1851
    0000073d: 	testq	%rsi, %rsi
    00000740: 	je	.Ltmp1650 # Offset: 1856
.Ltmp1649:
    00000746: 	movq	0x8(%rsp), %rax
    0000074b: 	movq	%rax, 0x20(%rsp)
    00000750: 	cmpq	$0xf, %rax
    00000754: 	ja	.Ltmp1651 # Offset: 1876
    0000075a: 	cmpq	$0x1, 0x8(%rsp)
    00000760: 	jne	.Ltmp1652 # Offset: 1888
    00000766: 	movq	0x18(%rsp), %rax
    0000076b: 	movzbl	(%rax), %eax
    0000076e: 	movb	%al, 0x10(%r13)
.Ltmp1825:
    00000772: 	movq	0x8(%rsp), %rax
    00000777: 	movq	%rax, 0x8(%r13)
    0000077b: 	movb	$0x0, (%rdi,%rax)
    0000077f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000786: 	addq	$0x20, %rax
    0000078a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1805:
    00000791: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000798: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000079f: 	je	.Ltmp1653 # Offset: 1951
.Ltmp1804:
    000007a5: 	movq	-0x20(%rax), %r13
    000007a9: 	callq	clock@PLT # Offset: 1961
    000007ae: 	pxor	%xmm0, %xmm0
    000007b2: 	movq	%rax, end_time(%rip)
    000007b9: 	movq	%r13, %rdi
    000007bc: 	subq	start_time(%rip), %rax
    000007c3: 	cvtsi2sd	%rax, %xmm0
    000007c8: 	divsd	DATAat0x1a318(%rip), %xmm0
    000007d0: 	callq	_Z13record_resultdPKc # Offset: 2000
    000007d5: 	movq	0x60(%rsp), %rdi
    000007da: 	cmpq	%r14, %rdi
    000007dd: 	je	.Ltmp1654 # Offset: 2013
    000007df: 	movq	0x70(%rsp), %rax
    000007e4: 	leaq	0x1(%rax), %rsi
    000007e8: 	callq	_ZdlPvm@PLT # Offset: 2024
.Ltmp1654:
    000007ed: 	leaq	DATAat0x1a215(%rip), %rdx
    000007f4: 	movq	%r15, %rsi
    000007f7: 	movq	%r12, %rdi
    000007fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2042
    000007ff: 	callq	clock@PLT # Offset: 2047
    00000804: 	movl	iterations(%rip), %ecx
    0000080a: 	xorl	%r13d, %r13d
    0000080d: 	movq	%rax, start_time(%rip)
    00000814: 	testl	%ecx, %ecx
    00000816: 	jle	.Ltmp1655 # Offset: 2070
    0000081c: 	nopl	(%rax) # Size: 4
.Ltmp1659:
    00000820: 	movq	%rbp, %rax
    00000823: 	pxor	%xmm0, %xmm0
    00000827: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1656:
    00000830: 	paddq	(%rax), %xmm0
    00000834: 	addq	$0x10, %rax
    00000838: 	cmpq	%rbx, %rax
    0000083b: 	jne	.Ltmp1656 # Offset: 2107
    0000083d: 	movsd	init_value(%rip), %xmm1
    00000845: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000084d: 	jae	.Ltmp1657 # Offset: 2125
    00000853: 	cvttsd2si	%xmm1, %rax
.Ltmp1793:
    00000858: 	movdqa	%xmm0, %xmm1
    0000085c: 	imulq	$0x1f40, %rax, %rdx
    00000863: 	psrldq	$0x8, %xmm1
    00000868: 	paddq	%xmm1, %xmm0
    0000086c: 	movq	%xmm0, %rax
    00000871: 	cmpq	%rax, %rdx
    00000874: 	je	.Ltmp1658 # Offset: 2164
    00000876: 	movl	current_test(%rip), %edx
    0000087c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000883: 	movl	$0x1, %edi
    00000888: 	xorl	%eax, %eax
    0000088a: 	callq	__printf_chk@PLT # Offset: 2186
    0000088f: 	movl	iterations(%rip), %ecx
.Ltmp1658:
    00000895: 	addl	$0x1, %r13d
    00000899: 	cmpl	%ecx, %r13d
    0000089c: 	jl	.Ltmp1659 # Offset: 2204
.Ltmp1655:
    0000089e: 	movq	%r12, %rdi
    000008a1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2209
    000008a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000008ad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000008b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000008bb: 	je	.Ltmp1660 # Offset: 2235
.Ltmp1809:
    000008c1: 	movq	-0x20(%rax), %r13
    000008c5: 	callq	clock@PLT # Offset: 2245
    000008ca: 	pxor	%xmm0, %xmm0
    000008ce: 	movq	%rax, end_time(%rip)
    000008d5: 	movq	%r13, %rdi
    000008d8: 	subq	start_time(%rip), %rax
    000008df: 	cvtsi2sd	%rax, %xmm0
    000008e4: 	divsd	DATAat0x1a318(%rip), %xmm0
    000008ec: 	callq	_Z13record_resultdPKc # Offset: 2284
    000008f1: 	movq	0x60(%rsp), %rdi
    000008f6: 	cmpq	%r14, %rdi
    000008f9: 	je	.Ltmp1661 # Offset: 2297
    000008fb: 	movq	0x70(%rsp), %rax
    00000900: 	leaq	0x1(%rax), %rsi
    00000904: 	callq	_ZdlPvm@PLT # Offset: 2308
.Ltmp1661:
    00000909: 	leaq	DATAat0x1a226(%rip), %rdx
    00000910: 	movq	%r15, %rsi
    00000913: 	movq	%r12, %rdi
    00000916: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2326
    0000091b: 	callq	clock@PLT # Offset: 2331
    00000920: 	movl	iterations(%rip), %ecx
    00000926: 	xorl	%r13d, %r13d
    00000929: 	movq	%rax, start_time(%rip)
    00000930: 	testl	%ecx, %ecx
    00000932: 	jle	.Ltmp1662 # Offset: 2354
    00000934: 	nopl	(%rax) # Size: 4
.Ltmp1666:
    00000938: 	movq	%rbp, %rax
    0000093b: 	pxor	%xmm0, %xmm0
    0000093f: 	nop # Size: 1
.Ltmp1663:
    00000940: 	paddq	(%rax), %xmm0
    00000944: 	addq	$0x10, %rax
    00000948: 	cmpq	%rbx, %rax
    0000094b: 	jne	.Ltmp1663 # Offset: 2379
    0000094d: 	movsd	init_value(%rip), %xmm1
    00000955: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000095d: 	jae	.Ltmp1664 # Offset: 2397
    00000963: 	cvttsd2si	%xmm1, %rax
.Ltmp1792:
    00000968: 	movdqa	%xmm0, %xmm1
    0000096c: 	imulq	$0x1f40, %rax, %rdx
    00000973: 	psrldq	$0x8, %xmm1
    00000978: 	paddq	%xmm1, %xmm0
    0000097c: 	movq	%xmm0, %rax
    00000981: 	cmpq	%rax, %rdx
    00000984: 	je	.Ltmp1665 # Offset: 2436
    00000986: 	movl	current_test(%rip), %edx
    0000098c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000993: 	movl	$0x1, %edi
    00000998: 	xorl	%eax, %eax
    0000099a: 	callq	__printf_chk@PLT # Offset: 2458
    0000099f: 	movl	iterations(%rip), %ecx
.Ltmp1665:
    000009a5: 	addl	$0x1, %r13d
    000009a9: 	cmpl	%ecx, %r13d
    000009ac: 	jl	.Ltmp1666 # Offset: 2476
.Ltmp1662:
    000009ae: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009b5: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000009bc: 	subq	$0x20, %rax
    000009c0: 	cmpq	%rax, %r13
    000009c3: 	je	.Ltmp1667 # Offset: 2499
    000009c9: 	leaq	0x10(%r13), %rdi
    000009cd: 	movq	0x68(%rsp), %rsi
    000009d2: 	movq	%rdi, (%r13)
    000009d6: 	movq	0x60(%rsp), %rcx
    000009db: 	movq	%rsi, 0x8(%rsp)
    000009e0: 	movq	%rcx, %rax
    000009e3: 	movq	%rcx, 0x18(%rsp)
    000009e8: 	addq	%rsi, %rax
    000009eb: 	je	.Ltmp1668 # Offset: 2539
    000009ed: 	testq	%rcx, %rcx
    000009f0: 	je	.Ltmp1669 # Offset: 2544
.Ltmp1668:
    000009f6: 	movq	0x8(%rsp), %rax
    000009fb: 	movq	%rax, 0x20(%rsp)
    00000a00: 	cmpq	$0xf, %rax
    00000a04: 	ja	.Ltmp1670 # Offset: 2564
    00000a0a: 	cmpq	$0x1, 0x8(%rsp)
    00000a10: 	jne	.Ltmp1671 # Offset: 2576
    00000a16: 	movq	0x18(%rsp), %rax
    00000a1b: 	movzbl	(%rax), %eax
    00000a1e: 	movb	%al, 0x10(%r13)
.Ltmp1831:
    00000a22: 	movq	0x8(%rsp), %rax
    00000a27: 	movq	%rax, 0x8(%r13)
    00000a2b: 	movb	$0x0, (%rdi,%rax)
    00000a2f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a36: 	addq	$0x20, %rax
    00000a3a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1808:
    00000a41: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a48: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a4f: 	je	.Ltmp1672 # Offset: 2639
.Ltmp1802:
    00000a55: 	movq	-0x20(%rax), %r13
    00000a59: 	callq	clock@PLT # Offset: 2649
    00000a5e: 	pxor	%xmm0, %xmm0
    00000a62: 	movq	%rax, end_time(%rip)
    00000a69: 	movq	%r13, %rdi
    00000a6c: 	subq	start_time(%rip), %rax
    00000a73: 	cvtsi2sd	%rax, %xmm0
    00000a78: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a80: 	callq	_Z13record_resultdPKc # Offset: 2688
    00000a85: 	movq	0x60(%rsp), %rdi
    00000a8a: 	cmpq	%r14, %rdi
    00000a8d: 	je	.Ltmp1673 # Offset: 2701
    00000a8f: 	movq	0x70(%rsp), %rax
    00000a94: 	leaq	0x1(%rax), %rsi
    00000a98: 	callq	_ZdlPvm@PLT # Offset: 2712
.Ltmp1673:
    00000a9d: 	leaq	DATAat0x1a238(%rip), %rdx
    00000aa4: 	movq	%r15, %rsi
    00000aa7: 	movq	%r12, %rdi
    00000aaa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2730
    00000aaf: 	callq	clock@PLT # Offset: 2735
    00000ab4: 	movl	iterations(%rip), %ecx
    00000aba: 	xorl	%r13d, %r13d
    00000abd: 	movq	%rax, start_time(%rip)
    00000ac4: 	testl	%ecx, %ecx
    00000ac6: 	jle	.Ltmp1674 # Offset: 2758
    00000acc: 	nopl	(%rax) # Size: 4
.Ltmp1678:
    00000ad0: 	movq	%rbp, %rax
    00000ad3: 	pxor	%xmm0, %xmm0
    00000ad7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1675:
    00000ae0: 	paddq	(%rax), %xmm0
    00000ae4: 	addq	$0x10, %rax
    00000ae8: 	cmpq	%rax, %rbx
    00000aeb: 	jne	.Ltmp1675 # Offset: 2795
    00000aed: 	movsd	init_value(%rip), %xmm1
    00000af5: 	comisd	DATAat0x1a328(%rip), %xmm1
    00000afd: 	jae	.Ltmp1676 # Offset: 2813
    00000b03: 	cvttsd2si	%xmm1, %rax
.Ltmp1786:
    00000b08: 	movdqa	%xmm0, %xmm1
    00000b0c: 	imulq	$0x1f40, %rax, %rdx
    00000b13: 	psrldq	$0x8, %xmm1
    00000b18: 	paddq	%xmm1, %xmm0
    00000b1c: 	movq	%xmm0, %rax
    00000b21: 	cmpq	%rax, %rdx
    00000b24: 	je	.Ltmp1677 # Offset: 2852
    00000b26: 	movl	current_test(%rip), %edx
    00000b2c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000b33: 	movl	$0x1, %edi
    00000b38: 	xorl	%eax, %eax
    00000b3a: 	callq	__printf_chk@PLT # Offset: 2874
    00000b3f: 	movl	iterations(%rip), %ecx
.Ltmp1677:
    00000b45: 	addl	$0x1, %r13d
    00000b49: 	cmpl	%ecx, %r13d
    00000b4c: 	jl	.Ltmp1678 # Offset: 2892
.Ltmp1674:
    00000b4e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000b55: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000b5c: 	subq	$0x20, %rax
    00000b60: 	cmpq	%rax, %r13
    00000b63: 	je	.Ltmp1679 # Offset: 2915
    00000b69: 	leaq	0x10(%r13), %rdi
    00000b6d: 	movq	0x68(%rsp), %rcx
    00000b72: 	movq	%rdi, (%r13)
    00000b76: 	movq	0x60(%rsp), %rsi
    00000b7b: 	movq	%rcx, 0x8(%rsp)
    00000b80: 	movq	%rsi, %rax
    00000b83: 	movq	%rsi, 0x18(%rsp)
    00000b88: 	addq	%rcx, %rax
    00000b8b: 	je	.Ltmp1680 # Offset: 2955
    00000b8d: 	testq	%rsi, %rsi
    00000b90: 	je	.Ltmp1681 # Offset: 2960
.Ltmp1680:
    00000b96: 	movq	0x8(%rsp), %rax
    00000b9b: 	movq	%rax, 0x20(%rsp)
    00000ba0: 	cmpq	$0xf, %rax
    00000ba4: 	ja	.Ltmp1682 # Offset: 2980
    00000baa: 	cmpq	$0x1, 0x8(%rsp)
    00000bb0: 	jne	.Ltmp1683 # Offset: 2992
    00000bb6: 	movq	0x18(%rsp), %rax
    00000bbb: 	movzbl	(%rax), %eax
    00000bbe: 	movb	%al, 0x10(%r13)
.Ltmp1824:
    00000bc2: 	movq	0x8(%rsp), %rax
    00000bc7: 	movq	%rax, 0x8(%r13)
    00000bcb: 	movb	$0x0, (%rdi,%rax)
    00000bcf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000bd6: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000bdd: 	addq	$0x20, %rax
    00000be1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000be8: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000bef: 	je	.Ltmp1684 # Offset: 3055
.Ltmp1801:
    00000bf5: 	movq	-0x20(%rax), %r13
    00000bf9: 	callq	clock@PLT # Offset: 3065
    00000bfe: 	pxor	%xmm0, %xmm0
    00000c02: 	movq	%rax, end_time(%rip)
    00000c09: 	movq	%r13, %rdi
    00000c0c: 	subq	start_time(%rip), %rax
    00000c13: 	cvtsi2sd	%rax, %xmm0
    00000c18: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000c20: 	callq	_Z13record_resultdPKc # Offset: 3104
    00000c25: 	movq	0x60(%rsp), %rdi
    00000c2a: 	cmpq	%r14, %rdi
    00000c2d: 	je	.Ltmp1685 # Offset: 3117
    00000c2f: 	movq	0x70(%rsp), %rax
    00000c34: 	leaq	0x1(%rax), %rsi
    00000c38: 	callq	_ZdlPvm@PLT # Offset: 3128
.Ltmp1685:
    00000c3d: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000c44: 	movq	%r15, %rsi
    00000c47: 	movq	%r12, %rdi
    00000c4a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3146
    00000c4f: 	callq	clock@PLT # Offset: 3151
    00000c54: 	movl	iterations(%rip), %ecx
    00000c5a: 	xorl	%r13d, %r13d
    00000c5d: 	movq	%rax, start_time(%rip)
    00000c64: 	testl	%ecx, %ecx
    00000c66: 	jle	.Ltmp1686 # Offset: 3174
    00000c6c: 	nopl	(%rax) # Size: 4
.Ltmp1690:
    00000c70: 	movq	%rbp, %rax
    00000c73: 	pxor	%xmm0, %xmm0
    00000c77: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1687:
    00000c80: 	paddq	(%rax), %xmm0
    00000c84: 	addq	$0x10, %rax
    00000c88: 	cmpq	%rbx, %rax
    00000c8b: 	jne	.Ltmp1687 # Offset: 3211
    00000c8d: 	movsd	init_value(%rip), %xmm1
    00000c95: 	comisd	DATAat0x1a328(%rip), %xmm1
    00000c9d: 	jae	.Ltmp1688 # Offset: 3229
    00000ca3: 	cvttsd2si	%xmm1, %rax
.Ltmp1785:
    00000ca8: 	movdqa	%xmm0, %xmm1
    00000cac: 	imulq	$0x1f40, %rax, %rdx
    00000cb3: 	psrldq	$0x8, %xmm1
    00000cb8: 	paddq	%xmm1, %xmm0
    00000cbc: 	movq	%xmm0, %rax
    00000cc1: 	cmpq	%rax, %rdx
    00000cc4: 	je	.Ltmp1689 # Offset: 3268
    00000cc6: 	movl	current_test(%rip), %edx
    00000ccc: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000cd3: 	movl	$0x1, %edi
    00000cd8: 	xorl	%eax, %eax
    00000cda: 	callq	__printf_chk@PLT # Offset: 3290
    00000cdf: 	movl	iterations(%rip), %ecx
.Ltmp1689:
    00000ce5: 	addl	$0x1, %r13d
    00000ce9: 	cmpl	%ecx, %r13d
    00000cec: 	jl	.Ltmp1690 # Offset: 3308
.Ltmp1686:
    00000cee: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000cf5: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000cfc: 	subq	$0x20, %rax
    00000d00: 	cmpq	%rax, %r13
    00000d03: 	je	.Ltmp1691 # Offset: 3331
    00000d09: 	leaq	0x10(%r13), %rdi
    00000d0d: 	movq	0x68(%rsp), %rsi
    00000d12: 	movq	%rdi, (%r13)
    00000d16: 	movq	0x60(%rsp), %rcx
    00000d1b: 	movq	%rsi, 0x8(%rsp)
    00000d20: 	movq	%rcx, %rax
    00000d23: 	movq	%rcx, 0x18(%rsp)
    00000d28: 	addq	%rsi, %rax
    00000d2b: 	je	.Ltmp1692 # Offset: 3371
    00000d2d: 	testq	%rcx, %rcx
    00000d30: 	je	.Ltmp1693 # Offset: 3376
.Ltmp1692:
    00000d36: 	movq	0x8(%rsp), %rax
    00000d3b: 	movq	%rax, 0x20(%rsp)
    00000d40: 	cmpq	$0xf, %rax
    00000d44: 	ja	.Ltmp1694 # Offset: 3396
    00000d4a: 	cmpq	$0x1, 0x8(%rsp)
    00000d50: 	jne	.Ltmp1695 # Offset: 3408
    00000d56: 	movq	0x18(%rsp), %rax
    00000d5b: 	movzbl	(%rax), %eax
    00000d5e: 	movb	%al, 0x10(%r13)
.Ltmp1821:
    00000d62: 	movq	0x8(%rsp), %rax
    00000d67: 	movq	%rax, 0x8(%r13)
    00000d6b: 	movb	$0x0, (%rdi,%rax)
    00000d6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d76: 	addq	$0x20, %rax
    00000d7a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1820:
    00000d81: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d88: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d8f: 	je	.Ltmp1696 # Offset: 3471
.Ltmp1819:
    00000d95: 	movq	-0x20(%rax), %r13
    00000d99: 	callq	clock@PLT # Offset: 3481
    00000d9e: 	pxor	%xmm0, %xmm0
    00000da2: 	movq	%rax, end_time(%rip)
    00000da9: 	movq	%r13, %rdi
    00000dac: 	subq	start_time(%rip), %rax
    00000db3: 	cvtsi2sd	%rax, %xmm0
    00000db8: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000dc0: 	callq	_Z13record_resultdPKc # Offset: 3520
    00000dc5: 	movq	0x60(%rsp), %rdi
    00000dca: 	cmpq	%r14, %rdi
    00000dcd: 	je	.Ltmp1697 # Offset: 3533
    00000dcf: 	movq	0x70(%rsp), %rax
    00000dd4: 	leaq	0x1(%rax), %rsi
    00000dd8: 	callq	_ZdlPvm@PLT # Offset: 3544
.Ltmp1697:
    00000ddd: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000de4: 	movq	%r15, %rsi
    00000de7: 	movq	%r12, %rdi
    00000dea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3562
    00000def: 	callq	clock@PLT # Offset: 3567
    00000df4: 	movl	iterations(%rip), %ecx
    00000dfa: 	xorl	%r13d, %r13d
    00000dfd: 	movq	%rax, start_time(%rip)
    00000e04: 	testl	%ecx, %ecx
    00000e06: 	jle	.Ltmp1698 # Offset: 3590
    00000e0c: 	nopl	(%rax) # Size: 4
.Ltmp1702:
    00000e10: 	movq	%rbp, %rax
    00000e13: 	pxor	%xmm0, %xmm0
    00000e17: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1699:
    00000e20: 	paddq	(%rax), %xmm0
    00000e24: 	addq	$0x10, %rax
    00000e28: 	cmpq	%rbx, %rax
    00000e2b: 	jne	.Ltmp1699 # Offset: 3627
    00000e2d: 	movsd	init_value(%rip), %xmm1
    00000e35: 	comisd	DATAat0x1a328(%rip), %xmm1
    00000e3d: 	jae	.Ltmp1700 # Offset: 3645
    00000e43: 	cvttsd2si	%xmm1, %rax
.Ltmp1791:
    00000e48: 	movdqa	%xmm0, %xmm1
    00000e4c: 	imulq	$0x1f40, %rax, %rdx
    00000e53: 	psrldq	$0x8, %xmm1
    00000e58: 	paddq	%xmm1, %xmm0
    00000e5c: 	movq	%xmm0, %rax
    00000e61: 	cmpq	%rax, %rdx
    00000e64: 	je	.Ltmp1701 # Offset: 3684
    00000e66: 	movl	current_test(%rip), %edx
    00000e6c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000e73: 	movl	$0x1, %edi
    00000e78: 	xorl	%eax, %eax
    00000e7a: 	callq	__printf_chk@PLT # Offset: 3706
    00000e7f: 	movl	iterations(%rip), %ecx
.Ltmp1701:
    00000e85: 	addl	$0x1, %r13d
    00000e89: 	cmpl	%ecx, %r13d
    00000e8c: 	jl	.Ltmp1702 # Offset: 3724
.Ltmp1698:
    00000e8e: 	movq	%r12, %rdi
    00000e91: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3729
    00000e96: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e9d: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ea4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eab: 	je	.Ltmp1703 # Offset: 3755
.Ltmp1807:
    00000eb1: 	movq	-0x20(%rax), %r13
    00000eb5: 	callq	clock@PLT # Offset: 3765
    00000eba: 	pxor	%xmm0, %xmm0
    00000ebe: 	movq	%rax, end_time(%rip)
    00000ec5: 	movq	%r13, %rdi
    00000ec8: 	subq	start_time(%rip), %rax
    00000ecf: 	cvtsi2sd	%rax, %xmm0
    00000ed4: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000edc: 	callq	_Z13record_resultdPKc # Offset: 3804
    00000ee1: 	movq	0x60(%rsp), %rdi
    00000ee6: 	cmpq	%r14, %rdi
    00000ee9: 	je	.Ltmp1704 # Offset: 3817
    00000eeb: 	movq	0x70(%rsp), %rax
    00000ef0: 	leaq	0x1(%rax), %rsi
    00000ef4: 	callq	_ZdlPvm@PLT # Offset: 3828
.Ltmp1704:
    00000ef9: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000f00: 	movq	%r15, %rsi
    00000f03: 	movq	%r12, %rdi
    00000f06: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3846
    00000f0b: 	callq	clock@PLT # Offset: 3851
    00000f10: 	movl	iterations(%rip), %ecx
    00000f16: 	xorl	%r13d, %r13d
    00000f19: 	movq	%rax, start_time(%rip)
    00000f20: 	testl	%ecx, %ecx
    00000f22: 	jle	.Ltmp1705 # Offset: 3874
    00000f24: 	nopl	(%rax) # Size: 4
.Ltmp1709:
    00000f28: 	movq	%rbp, %rax
    00000f2b: 	pxor	%xmm0, %xmm0
    00000f2f: 	nop # Size: 1
.Ltmp1706:
    00000f30: 	paddq	(%rax), %xmm0
    00000f34: 	addq	$0x10, %rax
    00000f38: 	cmpq	%rax, %rbx
    00000f3b: 	jne	.Ltmp1706 # Offset: 3899
    00000f3d: 	movsd	init_value(%rip), %xmm1
    00000f45: 	comisd	DATAat0x1a328(%rip), %xmm1
    00000f4d: 	jae	.Ltmp1707 # Offset: 3917
    00000f53: 	cvttsd2si	%xmm1, %rax
.Ltmp1790:
    00000f58: 	movdqa	%xmm0, %xmm1
    00000f5c: 	imulq	$0x1f40, %rax, %rdx
    00000f63: 	psrldq	$0x8, %xmm1
    00000f68: 	paddq	%xmm1, %xmm0
    00000f6c: 	movq	%xmm0, %rax
    00000f71: 	cmpq	%rax, %rdx
    00000f74: 	je	.Ltmp1708 # Offset: 3956
    00000f76: 	movl	current_test(%rip), %edx
    00000f7c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00000f83: 	movl	$0x1, %edi
    00000f88: 	xorl	%eax, %eax
    00000f8a: 	callq	__printf_chk@PLT # Offset: 3978
    00000f8f: 	movl	iterations(%rip), %ecx
.Ltmp1708:
    00000f95: 	addl	$0x1, %r13d
    00000f99: 	cmpl	%ecx, %r13d
    00000f9c: 	jl	.Ltmp1709 # Offset: 3996
.Ltmp1705:
    00000f9e: 	movq	%r12, %rdi
    00000fa1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4001
    00000fa6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000fad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000fb4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000fbb: 	je	.Ltmp1710 # Offset: 4027
.Ltmp1806:
    00000fc1: 	movq	-0x20(%rax), %r13
    00000fc5: 	callq	clock@PLT # Offset: 4037
    00000fca: 	pxor	%xmm0, %xmm0
    00000fce: 	movq	%rax, end_time(%rip)
    00000fd5: 	movq	%r13, %rdi
    00000fd8: 	subq	start_time(%rip), %rax
    00000fdf: 	cvtsi2sd	%rax, %xmm0
    00000fe4: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000fec: 	callq	_Z13record_resultdPKc # Offset: 4076
    00000ff1: 	movq	0x60(%rsp), %rdi
    00000ff6: 	cmpq	%r14, %rdi
    00000ff9: 	je	.Ltmp1711 # Offset: 4089
    00000ffb: 	movq	0x70(%rsp), %rax
    00001000: 	leaq	0x1(%rax), %rsi
    00001004: 	callq	_ZdlPvm@PLT # Offset: 4100
.Ltmp1711:
    00001009: 	leaq	DATAat0x1a27b(%rip), %rdx
    00001010: 	movq	%r15, %rsi
    00001013: 	movq	%r12, %rdi
    00001016: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4118
    0000101b: 	callq	clock@PLT # Offset: 4123
    00001020: 	movl	iterations(%rip), %ecx
    00001026: 	xorl	%r13d, %r13d
    00001029: 	movq	%rax, start_time(%rip)
    00001030: 	testl	%ecx, %ecx
    00001032: 	jle	.Ltmp1712 # Offset: 4146
    00001034: 	nopl	(%rax) # Size: 4
.Ltmp1716:
    00001038: 	movq	%rbp, %rax
    0000103b: 	pxor	%xmm0, %xmm0
    0000103f: 	nop # Size: 1
.Ltmp1713:
    00001040: 	paddq	(%rax), %xmm0
    00001044: 	addq	$0x10, %rax
    00001048: 	cmpq	%rbx, %rax
    0000104b: 	jne	.Ltmp1713 # Offset: 4171
    0000104d: 	movsd	init_value(%rip), %xmm1
    00001055: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000105d: 	jae	.Ltmp1714 # Offset: 4189
    00001063: 	cvttsd2si	%xmm1, %rax
.Ltmp1788:
    00001068: 	movdqa	%xmm0, %xmm1
    0000106c: 	imulq	$0x1f40, %rax, %rdx
    00001073: 	psrldq	$0x8, %xmm1
    00001078: 	paddq	%xmm1, %xmm0
    0000107c: 	movq	%xmm0, %rax
    00001081: 	cmpq	%rax, %rdx
    00001084: 	je	.Ltmp1715 # Offset: 4228
    00001086: 	movl	current_test(%rip), %edx
    0000108c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001093: 	movl	$0x1, %edi
    00001098: 	xorl	%eax, %eax
    0000109a: 	callq	__printf_chk@PLT # Offset: 4250
    0000109f: 	movl	iterations(%rip), %ecx
.Ltmp1715:
    000010a5: 	addl	$0x1, %r13d
    000010a9: 	cmpl	%ecx, %r13d
    000010ac: 	jl	.Ltmp1716 # Offset: 4268
.Ltmp1712:
    000010ae: 	movq	%r12, %rdi
    000010b1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4273
    000010b6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000010bd: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000010c4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000010cb: 	je	.Ltmp1717 # Offset: 4299
.Ltmp1817:
    000010d1: 	movq	-0x20(%rax), %r13
    000010d5: 	callq	clock@PLT # Offset: 4309
    000010da: 	pxor	%xmm0, %xmm0
    000010de: 	movq	%rax, end_time(%rip)
    000010e5: 	movq	%r13, %rdi
    000010e8: 	subq	start_time(%rip), %rax
    000010ef: 	cvtsi2sd	%rax, %xmm0
    000010f4: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010fc: 	callq	_Z13record_resultdPKc # Offset: 4348
    00001101: 	movq	0x60(%rsp), %rdi
    00001106: 	cmpq	%r14, %rdi
    00001109: 	je	.Ltmp1718 # Offset: 4361
    0000110b: 	movq	0x70(%rsp), %rax
    00001110: 	leaq	0x1(%rax), %rsi
    00001114: 	callq	_ZdlPvm@PLT # Offset: 4372
.Ltmp1718:
    00001119: 	leaq	DATAat0x1a28b(%rip), %rdx
    00001120: 	movq	%r15, %rsi
    00001123: 	movq	%r12, %rdi
    00001126: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4390
    0000112b: 	callq	clock@PLT # Offset: 4395
    00001130: 	movl	iterations(%rip), %ecx
    00001136: 	xorl	%r13d, %r13d
    00001139: 	movq	%rax, start_time(%rip)
    00001140: 	testl	%ecx, %ecx
    00001142: 	jle	.Ltmp1719 # Offset: 4418
    00001144: 	nopl	(%rax) # Size: 4
.Ltmp1723:
    00001148: 	movq	%rbp, %rax
    0000114b: 	pxor	%xmm0, %xmm0
    0000114f: 	nop # Size: 1
.Ltmp1720:
    00001150: 	paddq	(%rax), %xmm0
    00001154: 	addq	$0x10, %rax
    00001158: 	cmpq	%rax, %rbx
    0000115b: 	jne	.Ltmp1720 # Offset: 4443
    0000115d: 	movsd	init_value(%rip), %xmm1
    00001165: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000116d: 	jae	.Ltmp1721 # Offset: 4461
    00001173: 	cvttsd2si	%xmm1, %rax
.Ltmp1787:
    00001178: 	movdqa	%xmm0, %xmm1
    0000117c: 	imulq	$0x1f40, %rax, %rdx
    00001183: 	psrldq	$0x8, %xmm1
    00001188: 	paddq	%xmm1, %xmm0
    0000118c: 	movq	%xmm0, %rax
    00001191: 	cmpq	%rax, %rdx
    00001194: 	je	.Ltmp1722 # Offset: 4500
    00001196: 	movl	current_test(%rip), %edx
    0000119c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000011a3: 	movl	$0x1, %edi
    000011a8: 	xorl	%eax, %eax
    000011aa: 	callq	__printf_chk@PLT # Offset: 4522
    000011af: 	movl	iterations(%rip), %ecx
.Ltmp1722:
    000011b5: 	addl	$0x1, %r13d
    000011b9: 	cmpl	%ecx, %r13d
    000011bc: 	jl	.Ltmp1723 # Offset: 4540
.Ltmp1719:
    000011be: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011c5: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000011cc: 	subq	$0x20, %rax
    000011d0: 	cmpq	%rax, %r13
    000011d3: 	je	.Ltmp1724 # Offset: 4563
    000011d9: 	leaq	0x10(%r13), %rdi
    000011dd: 	movq	0x68(%rsp), %rcx
    000011e2: 	movq	%rdi, (%r13)
    000011e6: 	movq	0x60(%rsp), %rsi
    000011eb: 	movq	%rcx, 0x8(%rsp)
    000011f0: 	movq	%rsi, %rax
    000011f3: 	movq	%rsi, 0x18(%rsp)
    000011f8: 	addq	%rcx, %rax
    000011fb: 	je	.Ltmp1725 # Offset: 4603
    000011fd: 	testq	%rsi, %rsi
    00001200: 	je	.Ltmp1726 # Offset: 4608
.Ltmp1725:
    00001206: 	movq	0x8(%rsp), %rax
    0000120b: 	movq	%rax, 0x20(%rsp)
    00001210: 	cmpq	$0xf, %rax
    00001214: 	ja	.Ltmp1727 # Offset: 4628
    0000121a: 	cmpq	$0x1, 0x8(%rsp)
    00001220: 	jne	.Ltmp1728 # Offset: 4640
    00001226: 	movq	0x18(%rsp), %rax
    0000122b: 	movzbl	(%rax), %eax
    0000122e: 	movb	%al, 0x10(%r13)
.Ltmp1827:
    00001232: 	movq	0x8(%rsp), %rax
    00001237: 	movq	%rax, 0x8(%r13)
    0000123b: 	movb	$0x0, (%rdi,%rax)
    0000123f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001246: 	addq	$0x20, %rax
    0000124a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1818:
    00001251: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001258: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000125f: 	je	.Ltmp1729 # Offset: 4703
.Ltmp1800:
    00001265: 	movq	-0x20(%rax), %r13
    00001269: 	callq	clock@PLT # Offset: 4713
    0000126e: 	pxor	%xmm0, %xmm0
    00001272: 	movq	%rax, end_time(%rip)
    00001279: 	movq	%r13, %rdi
    0000127c: 	subq	start_time(%rip), %rax
    00001283: 	cvtsi2sd	%rax, %xmm0
    00001288: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001290: 	callq	_Z13record_resultdPKc # Offset: 4752
    00001295: 	movq	0x60(%rsp), %rdi
    0000129a: 	cmpq	%r14, %rdi
    0000129d: 	je	.Ltmp1730 # Offset: 4765
    0000129f: 	movq	0x70(%rsp), %rax
    000012a4: 	leaq	0x1(%rax), %rsi
    000012a8: 	callq	_ZdlPvm@PLT # Offset: 4776
.Ltmp1730:
    000012ad: 	leaq	DATAat0x1a29b(%rip), %rdx
    000012b4: 	movq	%r15, %rsi
    000012b7: 	movq	%r12, %rdi
    000012ba: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4794
    000012bf: 	callq	clock@PLT # Offset: 4799
    000012c4: 	movl	iterations(%rip), %ecx
    000012ca: 	xorl	%r13d, %r13d
    000012cd: 	movq	%rax, start_time(%rip)
    000012d4: 	testl	%ecx, %ecx
    000012d6: 	jle	.Ltmp1731 # Offset: 4822
    000012dc: 	nopl	(%rax) # Size: 4
.Ltmp1735:
    000012e0: 	movq	%rbp, %rax
    000012e3: 	pxor	%xmm0, %xmm0
    000012e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1732:
    000012f0: 	paddq	(%rax), %xmm0
    000012f4: 	addq	$0x10, %rax
    000012f8: 	cmpq	%rbx, %rax
    000012fb: 	jne	.Ltmp1732 # Offset: 4859
    000012fd: 	movsd	init_value(%rip), %xmm1
    00001305: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000130d: 	jae	.Ltmp1733 # Offset: 4877
    00001313: 	cvttsd2si	%xmm1, %rax
.Ltmp1784:
    00001318: 	movdqa	%xmm0, %xmm1
    0000131c: 	imulq	$0x1f40, %rax, %rdx
    00001323: 	psrldq	$0x8, %xmm1
    00001328: 	paddq	%xmm1, %xmm0
    0000132c: 	movq	%xmm0, %rax
    00001331: 	cmpq	%rax, %rdx
    00001334: 	je	.Ltmp1734 # Offset: 4916
    00001336: 	movl	current_test(%rip), %edx
    0000133c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001343: 	movl	$0x1, %edi
    00001348: 	xorl	%eax, %eax
    0000134a: 	callq	__printf_chk@PLT # Offset: 4938
    0000134f: 	movl	iterations(%rip), %ecx
.Ltmp1734:
    00001355: 	addl	$0x1, %r13d
    00001359: 	cmpl	%ecx, %r13d
    0000135c: 	jl	.Ltmp1735 # Offset: 4956
.Ltmp1731:
    0000135e: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001365: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000136c: 	subq	$0x20, %rax
    00001370: 	cmpq	%rax, %r13
    00001373: 	je	.Ltmp1736 # Offset: 4979
    00001379: 	leaq	0x10(%r13), %rdi
    0000137d: 	movq	0x68(%rsp), %rsi
    00001382: 	movq	%rdi, (%r13)
    00001386: 	movq	0x60(%rsp), %rcx
    0000138b: 	movq	%rsi, 0x8(%rsp)
    00001390: 	movq	%rcx, %rax
    00001393: 	movq	%rcx, 0x18(%rsp)
    00001398: 	addq	%rsi, %rax
    0000139b: 	je	.Ltmp1737 # Offset: 5019
    0000139d: 	testq	%rcx, %rcx
    000013a0: 	je	.Ltmp1738 # Offset: 5024
.Ltmp1737:
    000013a6: 	movq	0x8(%rsp), %rax
    000013ab: 	movq	%rax, 0x20(%rsp)
    000013b0: 	cmpq	$0xf, %rax
    000013b4: 	ja	.Ltmp1739 # Offset: 5044
    000013ba: 	cmpq	$0x1, 0x8(%rsp)
    000013c0: 	jne	.Ltmp1740 # Offset: 5056
    000013c6: 	movq	0x18(%rsp), %rax
    000013cb: 	movzbl	(%rax), %eax
    000013ce: 	movb	%al, 0x10(%r13)
.Ltmp1835:
    000013d2: 	movq	0x8(%rsp), %rax
    000013d7: 	movq	%rax, 0x8(%r13)
    000013db: 	movb	$0x0, (%rdi,%rax)
    000013df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000013e6: 	addq	$0x20, %rax
    000013ea: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1799:
    000013f1: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000013f8: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000013ff: 	je	.Ltmp1741 # Offset: 5119
.Ltmp1798:
    00001405: 	movq	-0x20(%rax), %r13
    00001409: 	callq	clock@PLT # Offset: 5129
    0000140e: 	pxor	%xmm0, %xmm0
    00001412: 	movq	%rax, end_time(%rip)
    00001419: 	movq	%r13, %rdi
    0000141c: 	subq	start_time(%rip), %rax
    00001423: 	cvtsi2sd	%rax, %xmm0
    00001428: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001430: 	callq	_Z13record_resultdPKc # Offset: 5168
    00001435: 	movq	0x60(%rsp), %rdi
    0000143a: 	cmpq	%r14, %rdi
    0000143d: 	je	.Ltmp1742 # Offset: 5181
    0000143f: 	movq	0x70(%rsp), %rax
    00001444: 	leaq	0x1(%rax), %rsi
    00001448: 	callq	_ZdlPvm@PLT # Offset: 5192
.Ltmp1742:
    0000144d: 	leaq	DATAat0x1a2af(%rip), %rdx
    00001454: 	movq	%r15, %rsi
    00001457: 	movq	%r12, %rdi
    0000145a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5210
    0000145f: 	callq	clock@PLT # Offset: 5215
    00001464: 	movl	iterations(%rip), %ecx
    0000146a: 	xorl	%r13d, %r13d
    0000146d: 	movq	%rax, start_time(%rip)
    00001474: 	testl	%ecx, %ecx
    00001476: 	jle	.Ltmp1743 # Offset: 5238
    0000147c: 	nopl	(%rax) # Size: 4
.Ltmp1747:
    00001480: 	movq	%rbp, %rax
    00001483: 	pxor	%xmm0, %xmm0
    00001487: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1744:
    00001490: 	paddq	(%rax), %xmm0
    00001494: 	addq	$0x10, %rax
    00001498: 	cmpq	%rax, %rbx
    0000149b: 	jne	.Ltmp1744 # Offset: 5275
    0000149d: 	movsd	init_value(%rip), %xmm1
    000014a5: 	comisd	DATAat0x1a328(%rip), %xmm1
    000014ad: 	jae	.Ltmp1745 # Offset: 5293
    000014b3: 	cvttsd2si	%xmm1, %rax
.Ltmp1783:
    000014b8: 	movdqa	%xmm0, %xmm1
    000014bc: 	imulq	$0x1f40, %rax, %rdx
    000014c3: 	psrldq	$0x8, %xmm1
    000014c8: 	paddq	%xmm1, %xmm0
    000014cc: 	movq	%xmm0, %rax
    000014d1: 	cmpq	%rax, %rdx
    000014d4: 	je	.Ltmp1746 # Offset: 5332
    000014d6: 	movl	current_test(%rip), %edx
    000014dc: 	leaq	DATAat0x1a1c8(%rip), %rsi
    000014e3: 	movl	$0x1, %edi
    000014e8: 	xorl	%eax, %eax
    000014ea: 	callq	__printf_chk@PLT # Offset: 5354
    000014ef: 	movl	iterations(%rip), %ecx
.Ltmp1746:
    000014f5: 	addl	$0x1, %r13d
    000014f9: 	cmpl	%ecx, %r13d
    000014fc: 	jl	.Ltmp1747 # Offset: 5372
.Ltmp1743:
    000014fe: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001505: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    0000150c: 	subq	$0x20, %rax
    00001510: 	cmpq	%rax, %r13
    00001513: 	je	.Ltmp1748 # Offset: 5395
    00001519: 	leaq	0x10(%r13), %rdi
    0000151d: 	movq	0x68(%rsp), %rcx
    00001522: 	movq	%rdi, (%r13)
    00001526: 	movq	0x60(%rsp), %rsi
    0000152b: 	movq	%rcx, 0x8(%rsp)
    00001530: 	movq	%rsi, %rax
    00001533: 	movq	%rsi, 0x18(%rsp)
    00001538: 	addq	%rcx, %rax
    0000153b: 	je	.Ltmp1749 # Offset: 5435
    0000153d: 	testq	%rsi, %rsi
    00001540: 	je	.Ltmp1750 # Offset: 5440
.Ltmp1749:
    00001546: 	movq	0x8(%rsp), %rax
    0000154b: 	movq	%rax, 0x20(%rsp)
    00001550: 	cmpq	$0xf, %rax
    00001554: 	ja	.Ltmp1751 # Offset: 5460
    0000155a: 	cmpq	$0x1, 0x8(%rsp)
    00001560: 	jne	.Ltmp1752 # Offset: 5472
    00001566: 	movq	0x18(%rsp), %rax
    0000156b: 	movzbl	(%rax), %eax
    0000156e: 	movb	%al, 0x10(%r13)
.Ltmp1822:
    00001572: 	movq	0x8(%rsp), %rax
    00001577: 	movq	%rax, 0x8(%r13)
    0000157b: 	movb	$0x0, (%rdi,%rax)
    0000157f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001586: 	addq	$0x20, %rax
    0000158a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1815:
    00001591: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001598: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000159f: 	je	.Ltmp1753 # Offset: 5535
.Ltmp1814:
    000015a5: 	movq	-0x20(%rax), %r13
    000015a9: 	callq	clock@PLT # Offset: 5545
    000015ae: 	pxor	%xmm0, %xmm0
    000015b2: 	movq	%rax, end_time(%rip)
    000015b9: 	movq	%r13, %rdi
    000015bc: 	subq	start_time(%rip), %rax
    000015c3: 	cvtsi2sd	%rax, %xmm0
    000015c8: 	divsd	DATAat0x1a318(%rip), %xmm0
    000015d0: 	callq	_Z13record_resultdPKc # Offset: 5584
    000015d5: 	movq	0x60(%rsp), %rdi
    000015da: 	cmpq	%r14, %rdi
    000015dd: 	je	.Ltmp1754 # Offset: 5597
    000015df: 	movq	0x70(%rsp), %rax
    000015e4: 	leaq	0x1(%rax), %rsi
    000015e8: 	callq	_ZdlPvm@PLT # Offset: 5608
.Ltmp1754:
    000015ed: 	leaq	DATAat0x1a2c4(%rip), %rdx
    000015f4: 	movq	%r15, %rsi
    000015f7: 	movq	%r12, %rdi
    000015fa: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5626
    000015ff: 	callq	clock@PLT # Offset: 5631
    00001604: 	movl	iterations(%rip), %ecx
    0000160a: 	xorl	%r13d, %r13d
    0000160d: 	movq	%rax, start_time(%rip)
    00001614: 	testl	%ecx, %ecx
    00001616: 	jle	.Ltmp1755 # Offset: 5654
    0000161c: 	nopl	(%rax) # Size: 4
.Ltmp1759:
    00001620: 	movq	%rbp, %rax
    00001623: 	pxor	%xmm0, %xmm0
    00001627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1756:
    00001630: 	paddq	(%rax), %xmm0
    00001634: 	addq	$0x10, %rax
    00001638: 	cmpq	%rbx, %rax
    0000163b: 	jne	.Ltmp1756 # Offset: 5691
    0000163d: 	movsd	init_value(%rip), %xmm1
    00001645: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000164d: 	jae	.Ltmp1757 # Offset: 5709
    00001653: 	cvttsd2si	%xmm1, %rax
.Ltmp1782:
    00001658: 	movdqa	%xmm0, %xmm1
    0000165c: 	imulq	$0x1f40, %rax, %rdx
    00001663: 	psrldq	$0x8, %xmm1
    00001668: 	paddq	%xmm1, %xmm0
    0000166c: 	movq	%xmm0, %rax
    00001671: 	cmpq	%rax, %rdx
    00001674: 	je	.Ltmp1758 # Offset: 5748
    00001676: 	movl	current_test(%rip), %edx
    0000167c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001683: 	movl	$0x1, %edi
    00001688: 	xorl	%eax, %eax
    0000168a: 	callq	__printf_chk@PLT # Offset: 5770
    0000168f: 	movl	iterations(%rip), %ecx
.Ltmp1758:
    00001695: 	addl	$0x1, %r13d
    00001699: 	cmpl	%ecx, %r13d
    0000169c: 	jl	.Ltmp1759 # Offset: 5788
.Ltmp1755:
    0000169e: 	movq	%r12, %rdi
    000016a1: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5793
    000016a6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000016ad: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000016b4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000016bb: 	je	.Ltmp1760 # Offset: 5819
.Ltmp1816:
    000016c1: 	movq	-0x20(%rax), %r13
    000016c5: 	callq	clock@PLT # Offset: 5829
    000016ca: 	pxor	%xmm0, %xmm0
    000016ce: 	movq	%rax, end_time(%rip)
    000016d5: 	movq	%r13, %rdi
    000016d8: 	subq	start_time(%rip), %rax
    000016df: 	cvtsi2sd	%rax, %xmm0
    000016e4: 	divsd	DATAat0x1a318(%rip), %xmm0
    000016ec: 	callq	_Z13record_resultdPKc # Offset: 5868
    000016f1: 	movq	0x60(%rsp), %rdi
    000016f6: 	cmpq	%r14, %rdi
    000016f9: 	je	.Ltmp1761 # Offset: 5881
    000016fb: 	movq	0x70(%rsp), %rax
    00001700: 	leaq	0x1(%rax), %rsi
    00001704: 	callq	_ZdlPvm@PLT # Offset: 5892
.Ltmp1761:
    00001709: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001710: 	movq	%r15, %rsi
    00001713: 	movq	%r12, %rdi
    00001716: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5910
    0000171b: 	callq	clock@PLT # Offset: 5915
    00001720: 	movl	iterations(%rip), %ecx
    00001726: 	xorl	%r13d, %r13d
    00001729: 	movq	%rax, start_time(%rip)
    00001730: 	testl	%ecx, %ecx
    00001732: 	jle	.Ltmp1762 # Offset: 5938
    00001734: 	nopl	(%rax) # Size: 4
.Ltmp1766:
    00001738: 	movq	%rbp, %rax
    0000173b: 	pxor	%xmm0, %xmm0
    0000173f: 	nop # Size: 1
.Ltmp1763:
    00001740: 	paddq	(%rax), %xmm0
    00001744: 	addq	$0x10, %rax
    00001748: 	cmpq	%rbx, %rax
    0000174b: 	jne	.Ltmp1763 # Offset: 5963
    0000174d: 	movsd	init_value(%rip), %xmm1
    00001755: 	comisd	DATAat0x1a328(%rip), %xmm1
    0000175d: 	jae	.Ltmp1764 # Offset: 5981
    00001763: 	cvttsd2si	%xmm1, %rax
.Ltmp1781:
    00001768: 	movdqa	%xmm0, %xmm1
    0000176c: 	imulq	$0x1f40, %rax, %rdx
    00001773: 	psrldq	$0x8, %xmm1
    00001778: 	paddq	%xmm1, %xmm0
    0000177c: 	movq	%xmm0, %rax
    00001781: 	cmpq	%rax, %rdx
    00001784: 	je	.Ltmp1765 # Offset: 6020
    00001786: 	movl	current_test(%rip), %edx
    0000178c: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001793: 	movl	$0x1, %edi
    00001798: 	xorl	%eax, %eax
    0000179a: 	callq	__printf_chk@PLT # Offset: 6042
    0000179f: 	movl	iterations(%rip), %ecx
.Ltmp1765:
    000017a5: 	addl	$0x1, %r13d
    000017a9: 	cmpl	%ecx, %r13d
    000017ac: 	jl	.Ltmp1766 # Offset: 6060
.Ltmp1762:
    000017ae: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000017b5: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    000017bc: 	subq	$0x20, %rax
    000017c0: 	cmpq	%rax, %rbx
    000017c3: 	je	.Ltmp1767 # Offset: 6083
    000017c9: 	leaq	0x10(%rbx), %rdi
    000017cd: 	movq	0x68(%rsp), %r13
    000017d2: 	movq	%rdi, (%rbx)
    000017d5: 	movq	0x60(%rsp), %rbp
    000017da: 	movq	%rbp, %rax
    000017dd: 	addq	%r13, %rax
    000017e0: 	je	.Ltmp1768 # Offset: 6112
    000017e2: 	testq	%rbp, %rbp
    000017e5: 	je	.Ltmp1769 # Offset: 6117
.Ltmp1768:
    000017eb: 	movq	%r13, 0x20(%rsp)
    000017f0: 	cmpq	$0xf, %r13
    000017f4: 	ja	.Ltmp1770 # Offset: 6132
    000017fa: 	cmpq	$0x1, %r13
    000017fe: 	jne	.Ltmp1771 # Offset: 6142
    00001804: 	movzbl	(%rbp), %eax
    00001808: 	movb	%al, 0x10(%rbx)
.Ltmp1829:
    0000180b: 	movq	%r13, 0x8(%rbx)
    0000180f: 	movb	$0x0, (%rdi,%r13)
    00001814: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000181b: 	addq	$0x20, %rax
    0000181f: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp1813:
    00001826: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000182d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001834: 	je	.Ltmp1772 # Offset: 6196
.Ltmp1812:
    0000183a: 	movq	-0x20(%rax), %rbp
    0000183e: 	callq	clock@PLT # Offset: 6206
    00001843: 	pxor	%xmm0, %xmm0
    00001847: 	movq	%rax, end_time(%rip)
    0000184e: 	movq	%rbp, %rdi
    00001851: 	subq	start_time(%rip), %rax
    00001858: 	cvtsi2sd	%rax, %xmm0
    0000185d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001865: 	callq	_Z13record_resultdPKc # Offset: 6245
    0000186a: 	movq	0x60(%rsp), %rdi
    0000186f: 	cmpq	%r14, %rdi
    00001872: 	je	.Ltmp1773 # Offset: 6258
    00001874: 	movq	0x70(%rsp), %rax
    00001879: 	leaq	0x1(%rax), %rsi
    0000187d: 	callq	_ZdlPvm@PLT # Offset: 6269
.Ltmp1773:
    00001882: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001889: 	movq	%r15, %rsi
    0000188c: 	movq	%r12, %rdi
    0000188f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6287
    00001894: 	movl	iterations(%rip), %edx
    0000189a: 	movq	0x60(%rsp), %rdi
    0000189f: 	xorl	%r8d, %r8d
    000018a2: 	xorl	%ecx, %ecx
    000018a4: 	movl	$0x1f40, %esi
    000018a9: 	callq	_Z9summarizePKciiii # Offset: 6313
    000018ae: 	movq	0x60(%rsp), %rdi
    000018b3: 	cmpq	%r14, %rdi
    000018b6: 	je	.Ltmp1774 # Offset: 6326
    000018b8: 	movq	0x70(%rsp), %rax
    000018bd: 	leaq	0x1(%rax), %rsi
    000018c1: 	callq	_ZdlPvm@PLT # Offset: 6337
.Ltmp1774:
    000018c6: 	movq	0x40(%rsp), %rdi
    000018cb: 	cmpq	0x10(%rsp), %rdi
    000018d0: 	je	.Ltmp1775 # Offset: 6352
    000018d2: 	movq	0x50(%rsp), %rax
    000018d7: 	leaq	0x1(%rax), %rsi
    000018db: 	callq	_ZdlPvm@PLT # Offset: 6363
.Ltmp1775:
    000018e0: 	movq	0xfa88(%rsp), %rax
    000018e8: 	subq	%fs:0x28, %rax
    000018f1: 	jne	.Ltmp1776 # Offset: 6385
    000018f7: 	addq	$0xfa98, %rsp
    000018fe: 	popq	%rbx
    000018ff: 	popq	%rbp
    00001900: 	popq	%r12
    00001902: 	popq	%r13
    00001904: 	popq	%r14
    00001906: 	popq	%r15
    00001908: 	retq # Offset: 6408
    00001909: 	nopl	(%rax) # Size: 7
.Ltmp1614:
    00001910: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001918: 	movabsq	$-0x8000000000000000, %rsi
    00001922: 	cvttsd2si	%xmm1, %rax
    00001927: 	xorq	%rsi, %rax
    0000192a: 	jmp	.Ltmp1777 # Offset: 6442
    0000192f: 	nop # Size: 1
.Ltmp1607:
    00001930: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001938: 	movabsq	$-0x8000000000000000, %rsi
    00001942: 	cvttsd2si	%xmm1, %rax
    00001947: 	xorq	%rsi, %rax
    0000194a: 	jmp	.Ltmp1778 # Offset: 6474
.Ltmp1603:
    0000194f: 	subsd	DATAat0x1a328(%rip), %xmm0
    00001957: 	cvttsd2si	%xmm0, %rax
    0000195c: 	btcq	$0x3f, %rax
    00001961: 	jmp	.Ltmp1779 # Offset: 6497
.Ltmp1620:
    00001966: 	movq	(%rsp), %rsi
    0000196a: 	xorl	%edx, %edx
    0000196c: 	movq	%r13, %rdi
    0000196f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 6511
    00001974: 	movq	%rax, (%r13)
    00001978: 	movq	%rax, %rdi
    0000197b: 	movq	0x20(%rsp), %rax
    00001980: 	movq	%rax, 0x10(%r13)
.Ltmp1833:
    00001984: 	movq	0x8(%rsp), %rdx
    00001989: 	movq	0x18(%rsp), %rsi
    0000198e: 	callq	memcpy@PLT # Offset: 6542
    00001993: 	movq	0x20(%rsp), %rax
    00001998: 	movq	(%r13), %rdi
    0000199c: 	movq	%rax, 0x8(%rsp)
    000019a1: 	jmp	.Ltmp1780 # Offset: 6561
    000019a6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1764:
    000019b0: 	subsd	DATAat0x1a328(%rip), %xmm1
    000019b8: 	movabsq	$-0x8000000000000000, %rsi
    000019c2: 	cvttsd2si	%xmm1, %rax
    000019c7: 	xorq	%rsi, %rax
    000019ca: 	jmp	.Ltmp1781 # Offset: 6602
    000019cf: 	nop # Size: 1
.Ltmp1757:
    000019d0: 	subsd	DATAat0x1a328(%rip), %xmm1
    000019d8: 	movabsq	$-0x8000000000000000, %rdi
    000019e2: 	cvttsd2si	%xmm1, %rax
    000019e7: 	xorq	%rdi, %rax
    000019ea: 	jmp	.Ltmp1782 # Offset: 6634
    000019ef: 	nop # Size: 1
.Ltmp1745:
    000019f0: 	subsd	DATAat0x1a328(%rip), %xmm1
    000019f8: 	movabsq	$-0x8000000000000000, %rsi
    00001a02: 	cvttsd2si	%xmm1, %rax
    00001a07: 	xorq	%rsi, %rax
    00001a0a: 	jmp	.Ltmp1783 # Offset: 6666
    00001a0f: 	nop # Size: 1
.Ltmp1733:
    00001a10: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001a18: 	movabsq	$-0x8000000000000000, %rdi
    00001a22: 	cvttsd2si	%xmm1, %rax
    00001a27: 	xorq	%rdi, %rax
    00001a2a: 	jmp	.Ltmp1784 # Offset: 6698
    00001a2f: 	nop # Size: 1
.Ltmp1688:
    00001a30: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001a38: 	movabsq	$-0x8000000000000000, %rsi
    00001a42: 	cvttsd2si	%xmm1, %rax
    00001a47: 	xorq	%rsi, %rax
    00001a4a: 	jmp	.Ltmp1785 # Offset: 6730
    00001a4f: 	nop # Size: 1
.Ltmp1676:
    00001a50: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001a58: 	movabsq	$-0x8000000000000000, %rsi
    00001a62: 	cvttsd2si	%xmm1, %rax
    00001a67: 	xorq	%rsi, %rax
    00001a6a: 	jmp	.Ltmp1786 # Offset: 6762
    00001a6f: 	nop # Size: 1
.Ltmp1721:
    00001a70: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001a78: 	movabsq	$-0x8000000000000000, %rsi
    00001a82: 	cvttsd2si	%xmm1, %rax
    00001a87: 	xorq	%rsi, %rax
    00001a8a: 	jmp	.Ltmp1787 # Offset: 6794
    00001a8f: 	nop # Size: 1
.Ltmp1714:
    00001a90: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001a98: 	movabsq	$-0x8000000000000000, %rdi
    00001aa2: 	cvttsd2si	%xmm1, %rax
    00001aa7: 	xorq	%rdi, %rax
    00001aaa: 	jmp	.Ltmp1788 # Offset: 6826
    00001aaf: 	nop # Size: 1
.Ltmp1638:
    00001ab0: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001ab8: 	movabsq	$-0x8000000000000000, %rsi
    00001ac2: 	cvttsd2si	%xmm1, %rax
    00001ac7: 	xorq	%rsi, %rax
    00001aca: 	jmp	.Ltmp1789 # Offset: 6858
    00001acf: 	nop # Size: 1
.Ltmp1707:
    00001ad0: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001ad8: 	movabsq	$-0x8000000000000000, %rsi
    00001ae2: 	cvttsd2si	%xmm1, %rax
    00001ae7: 	xorq	%rsi, %rax
    00001aea: 	jmp	.Ltmp1790 # Offset: 6890
    00001aef: 	nop # Size: 1
.Ltmp1700:
    00001af0: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001af8: 	movabsq	$-0x8000000000000000, %rsi
    00001b02: 	cvttsd2si	%xmm1, %rax
    00001b07: 	xorq	%rsi, %rax
    00001b0a: 	jmp	.Ltmp1791 # Offset: 6922
    00001b0f: 	nop # Size: 1
.Ltmp1664:
    00001b10: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001b18: 	movabsq	$-0x8000000000000000, %rsi
    00001b22: 	cvttsd2si	%xmm1, %rax
    00001b27: 	xorq	%rsi, %rax
    00001b2a: 	jmp	.Ltmp1792 # Offset: 6954
    00001b2f: 	nop # Size: 1
.Ltmp1657:
    00001b30: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001b38: 	movabsq	$-0x8000000000000000, %rsi
    00001b42: 	cvttsd2si	%xmm1, %rax
    00001b47: 	xorq	%rsi, %rax
    00001b4a: 	jmp	.Ltmp1793 # Offset: 6986
    00001b4f: 	nop # Size: 1
.Ltmp1626:
    00001b50: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001b58: 	movabsq	$-0x8000000000000000, %rsi
    00001b62: 	cvttsd2si	%xmm1, %rax
    00001b67: 	xorq	%rsi, %rax
    00001b6a: 	jmp	.Ltmp1794 # Offset: 7018
    00001b6f: 	nop # Size: 1
.Ltmp1645:
    00001b70: 	subsd	DATAat0x1a328(%rip), %xmm1
    00001b78: 	movabsq	$-0x8000000000000000, %rsi
    00001b82: 	cvttsd2si	%xmm1, %rax
    00001b87: 	xorq	%rsi, %rax
    00001b8a: 	jmp	.Ltmp1795 # Offset: 7050
.Ltmp1641:
    00001b8f: 	movq	-0x8(%rdx), %rax
    00001b93: 	addq	$0x200, %rax
    00001b99: 	jmp	.Ltmp1796 # Offset: 7065
.Ltmp1617:
    00001b9e: 	movq	%r12, %rsi
    00001ba1: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ba8: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7080
    00001bad: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bb4: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001bbb: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001bc2: 	jne	.Ltmp1797 # Offset: 7106
.Ltmp1622:
    00001bc8: 	movq	-0x8(%rdx), %rax
    00001bcc: 	addq	$0x200, %rax
    00001bd2: 	jmp	.Ltmp1797 # Offset: 7122
.Ltmp1741:
    00001bd7: 	movq	-0x8(%rdx), %rax
    00001bdb: 	addq	$0x200, %rax
    00001be1: 	jmp	.Ltmp1798 # Offset: 7137
.Ltmp1736:
    00001be6: 	movq	%r12, %rsi
    00001be9: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001bf0: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7152
    00001bf5: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001bfc: 	jmp	.Ltmp1799 # Offset: 7164
.Ltmp1729:
    00001c01: 	movq	-0x8(%rdx), %rax
    00001c05: 	addq	$0x200, %rax
    00001c0b: 	jmp	.Ltmp1800 # Offset: 7179
.Ltmp1679:
    00001c10: 	movq	%r12, %rsi
    00001c13: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c1a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7194
    00001c1f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c26: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001c2d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001c34: 	jne	.Ltmp1801 # Offset: 7220
.Ltmp1684:
    00001c3a: 	movq	-0x8(%rdx), %rax
    00001c3e: 	addq	$0x200, %rax
    00001c44: 	jmp	.Ltmp1801 # Offset: 7236
.Ltmp1672:
    00001c49: 	movq	-0x8(%rdx), %rax
    00001c4d: 	addq	$0x200, %rax
    00001c53: 	jmp	.Ltmp1802 # Offset: 7251
.Ltmp1634:
    00001c58: 	movq	-0x8(%rdx), %rax
    00001c5c: 	addq	$0x200, %rax
    00001c62: 	jmp	.Ltmp1803 # Offset: 7266
.Ltmp1653:
    00001c67: 	movq	-0x8(%rdx), %rax
    00001c6b: 	addq	$0x200, %rax
    00001c71: 	jmp	.Ltmp1804 # Offset: 7281
.Ltmp1648:
    00001c76: 	movq	%r12, %rsi
    00001c79: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001c80: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7296
    00001c85: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001c8c: 	jmp	.Ltmp1805 # Offset: 7308
.Ltmp1710:
    00001c91: 	movq	-0x8(%rdx), %rax
    00001c95: 	addq	$0x200, %rax
    00001c9b: 	jmp	.Ltmp1806 # Offset: 7323
.Ltmp1703:
    00001ca0: 	movq	-0x8(%rdx), %rax
    00001ca4: 	addq	$0x200, %rax
    00001caa: 	jmp	.Ltmp1807 # Offset: 7338
.Ltmp1667:
    00001caf: 	movq	%r12, %rsi
    00001cb2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001cb9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7353
    00001cbe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cc5: 	jmp	.Ltmp1808 # Offset: 7365
.Ltmp1660:
    00001cca: 	movq	-0x8(%rdx), %rax
    00001cce: 	addq	$0x200, %rax
    00001cd4: 	jmp	.Ltmp1809 # Offset: 7380
.Ltmp1629:
    00001cd9: 	movq	%r12, %rsi
    00001cdc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001ce3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7395
    00001ce8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001cef: 	jmp	.Ltmp1810 # Offset: 7407
.Ltmp1610:
    00001cf4: 	movq	-0x8(%rdx), %rax
    00001cf8: 	addq	$0x200, %rax
    00001cfe: 	jmp	.Ltmp1811 # Offset: 7422
.Ltmp1772:
    00001d03: 	movq	-0x8(%rdx), %rax
    00001d07: 	addq	$0x200, %rax
    00001d0d: 	jmp	.Ltmp1812 # Offset: 7437
.Ltmp1767:
    00001d12: 	movq	%r12, %rsi
    00001d15: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d1c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7452
    00001d21: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d28: 	jmp	.Ltmp1813 # Offset: 7464
.Ltmp1753:
    00001d2d: 	movq	-0x8(%rdx), %rax
    00001d31: 	addq	$0x200, %rax
    00001d37: 	jmp	.Ltmp1814 # Offset: 7479
.Ltmp1748:
    00001d3c: 	movq	%r12, %rsi
    00001d3f: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d46: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7494
    00001d4b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d52: 	jmp	.Ltmp1815 # Offset: 7506
.Ltmp1760:
    00001d57: 	movq	-0x8(%rdx), %rax
    00001d5b: 	addq	$0x200, %rax
    00001d61: 	jmp	.Ltmp1816 # Offset: 7521
.Ltmp1717:
    00001d66: 	movq	-0x8(%rdx), %rax
    00001d6a: 	addq	$0x200, %rax
    00001d70: 	jmp	.Ltmp1817 # Offset: 7536
.Ltmp1724:
    00001d75: 	movq	%r12, %rsi
    00001d78: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001d7f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7551
    00001d84: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d8b: 	jmp	.Ltmp1818 # Offset: 7563
.Ltmp1696:
    00001d90: 	movq	-0x8(%rdx), %rax
    00001d94: 	addq	$0x200, %rax
    00001d9a: 	jmp	.Ltmp1819 # Offset: 7578
.Ltmp1691:
    00001d9f: 	movq	%r12, %rsi
    00001da2: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001da9: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7593
    00001dae: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001db5: 	jmp	.Ltmp1820 # Offset: 7605
.Ltmp1695:
    00001dba: 	cmpq	$0x0, 0x8(%rsp)
    00001dc0: 	je	.Ltmp1821 # Offset: 7616
.Ltmp1838:
    00001dc6: 	movq	0x8(%rsp), %rdx
    00001dcb: 	movq	0x18(%rsp), %rsi
    00001dd0: 	callq	memcpy@PLT # Offset: 7632
    00001dd5: 	movq	0x20(%rsp), %rax
    00001dda: 	movq	(%r13), %rdi
    00001dde: 	movq	%rax, 0x8(%rsp)
    00001de3: 	jmp	.Ltmp1821 # Offset: 7651
.Ltmp1752:
    00001de8: 	cmpq	$0x0, 0x8(%rsp)
    00001dee: 	je	.Ltmp1822 # Offset: 7662
    00001df4: 	jmp	.Ltmp1823 # Offset: 7668
    00001df9: 	nopl	(%rax) # Size: 7
.Ltmp1683:
    00001e00: 	cmpq	$0x0, 0x8(%rsp)
    00001e06: 	je	.Ltmp1824 # Offset: 7686
.Ltmp1839:
    00001e0c: 	movq	0x8(%rsp), %rdx
    00001e11: 	movq	0x18(%rsp), %rsi
    00001e16: 	callq	memcpy@PLT # Offset: 7702
    00001e1b: 	movq	0x20(%rsp), %rax
    00001e20: 	movq	(%r13), %rdi
    00001e24: 	movq	%rax, 0x8(%rsp)
    00001e29: 	jmp	.Ltmp1824 # Offset: 7721
.Ltmp1652:
    00001e2e: 	cmpq	$0x0, 0x8(%rsp)
    00001e34: 	je	.Ltmp1825 # Offset: 7732
    00001e3a: 	jmp	.Ltmp1826 # Offset: 7738
    00001e3f: 	nop # Size: 1
.Ltmp1728:
    00001e40: 	cmpq	$0x0, 0x8(%rsp)
    00001e46: 	je	.Ltmp1827 # Offset: 7750
    00001e4c: 	jmp	.Ltmp1828 # Offset: 7756
    00001e51: 	nopl	(%rax) # Size: 7
.Ltmp1771:
    00001e58: 	testq	%r13, %r13
    00001e5b: 	je	.Ltmp1829 # Offset: 7771
    00001e61: 	jmp	.Ltmp1830 # Offset: 7777
    00001e66: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp1671:
    00001e70: 	cmpq	$0x0, 0x8(%rsp)
    00001e76: 	je	.Ltmp1831 # Offset: 7798
    00001e7c: 	jmp	.Ltmp1832 # Offset: 7804
    00001e81: 	nopl	(%rax) # Size: 7
.Ltmp1621:
    00001e88: 	cmpq	$0x0, 0x8(%rsp)
    00001e8e: 	je	.Ltmp1780 # Offset: 7822
    00001e94: 	jmp	.Ltmp1833 # Offset: 7828
    00001e99: 	nopl	(%rax) # Size: 7
.Ltmp1633:
    00001ea0: 	cmpq	$0x0, 0x8(%rsp)
    00001ea6: 	je	.Ltmp1834 # Offset: 7846
.Ltmp1836:
    00001eac: 	movq	0x8(%rsp), %rdx
    00001eb1: 	movq	0x18(%rsp), %rsi
    00001eb6: 	callq	memcpy@PLT # Offset: 7862
    00001ebb: 	movq	0x20(%rsp), %rax
    00001ec0: 	movq	(%r13), %rdi
    00001ec4: 	movq	%rax, 0x8(%rsp)
    00001ec9: 	jmp	.Ltmp1834 # Offset: 7881
.Ltmp1740:
    00001ece: 	cmpq	$0x0, 0x8(%rsp)
    00001ed4: 	je	.Ltmp1835 # Offset: 7892
.Ltmp1837:
    00001eda: 	movq	0x8(%rsp), %rdx
    00001edf: 	movq	0x18(%rsp), %rsi
    00001ee4: 	callq	memcpy@PLT # Offset: 7908
    00001ee9: 	movq	0x20(%rsp), %rax
    00001eee: 	movq	(%r13), %rdi
    00001ef2: 	movq	%rax, 0x8(%rsp)
    00001ef7: 	jmp	.Ltmp1835 # Offset: 7927
.Ltmp1751:
    00001efc: 	movq	(%rsp), %rsi
    00001f00: 	xorl	%edx, %edx
    00001f02: 	movq	%r13, %rdi
    00001f05: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7941
    00001f0a: 	movq	%rax, (%r13)
    00001f0e: 	movq	%rax, %rdi
    00001f11: 	movq	0x20(%rsp), %rax
    00001f16: 	movq	%rax, 0x10(%r13)
.Ltmp1823:
    00001f1a: 	movq	0x8(%rsp), %rdx
    00001f1f: 	movq	0x18(%rsp), %rsi
    00001f24: 	callq	memcpy@PLT # Offset: 7972
    00001f29: 	movq	0x20(%rsp), %rax
    00001f2e: 	movq	(%r13), %rdi
    00001f32: 	movq	%rax, 0x8(%rsp)
    00001f37: 	jmp	.Ltmp1822 # Offset: 7991
.Ltmp1770:
    00001f3c: 	movq	(%rsp), %rsi
    00001f40: 	xorl	%edx, %edx
    00001f42: 	movq	%rbx, %rdi
    00001f45: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8005
    00001f4a: 	movq	%rax, (%rbx)
    00001f4d: 	movq	%rax, %rdi
    00001f50: 	movq	0x20(%rsp), %rax
    00001f55: 	movq	%rax, 0x10(%rbx)
.Ltmp1830:
    00001f59: 	movq	%r13, %rdx
    00001f5c: 	movq	%rbp, %rsi
    00001f5f: 	callq	memcpy@PLT # Offset: 8031
    00001f64: 	movq	0x20(%rsp), %r13
    00001f69: 	movq	(%rbx), %rdi
    00001f6c: 	jmp	.Ltmp1829 # Offset: 8044
.Ltmp1727:
    00001f71: 	movq	(%rsp), %rsi
    00001f75: 	xorl	%edx, %edx
    00001f77: 	movq	%r13, %rdi
    00001f7a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8058
    00001f7f: 	movq	%rax, (%r13)
    00001f83: 	movq	%rax, %rdi
    00001f86: 	movq	0x20(%rsp), %rax
    00001f8b: 	movq	%rax, 0x10(%r13)
.Ltmp1828:
    00001f8f: 	movq	0x8(%rsp), %rdx
    00001f94: 	movq	0x18(%rsp), %rsi
    00001f99: 	callq	memcpy@PLT # Offset: 8089
    00001f9e: 	movq	0x20(%rsp), %rax
    00001fa3: 	movq	(%r13), %rdi
    00001fa7: 	movq	%rax, 0x8(%rsp)
    00001fac: 	jmp	.Ltmp1827 # Offset: 8108
.Ltmp1670:
    00001fb1: 	movq	(%rsp), %rsi
    00001fb5: 	xorl	%edx, %edx
    00001fb7: 	movq	%r13, %rdi
    00001fba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8122
    00001fbf: 	movq	%rax, (%r13)
    00001fc3: 	movq	%rax, %rdi
    00001fc6: 	movq	0x20(%rsp), %rax
    00001fcb: 	movq	%rax, 0x10(%r13)
.Ltmp1832:
    00001fcf: 	movq	0x8(%rsp), %rdx
    00001fd4: 	movq	0x18(%rsp), %rsi
    00001fd9: 	callq	memcpy@PLT # Offset: 8153
    00001fde: 	movq	0x20(%rsp), %rax
    00001fe3: 	movq	(%r13), %rdi
    00001fe7: 	movq	%rax, 0x8(%rsp)
    00001fec: 	jmp	.Ltmp1831 # Offset: 8172
.Ltmp1632:
    00001ff1: 	movq	(%rsp), %rsi
    00001ff5: 	xorl	%edx, %edx
    00001ff7: 	movq	%r13, %rdi
    00001ffa: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8186
    00001fff: 	movq	%rax, (%r13)
    00002003: 	movq	%rax, %rdi
    00002006: 	movq	0x20(%rsp), %rax
    0000200b: 	movq	%rax, 0x10(%r13)
    0000200f: 	jmp	.Ltmp1836 # Offset: 8207
.Ltmp1651:
    00002014: 	movq	(%rsp), %rsi
    00002018: 	xorl	%edx, %edx
    0000201a: 	movq	%r13, %rdi
    0000201d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8221
    00002022: 	movq	%rax, (%r13)
    00002026: 	movq	%rax, %rdi
    00002029: 	movq	0x20(%rsp), %rax
    0000202e: 	movq	%rax, 0x10(%r13)
.Ltmp1826:
    00002032: 	movq	0x8(%rsp), %rdx
    00002037: 	movq	0x18(%rsp), %rsi
    0000203c: 	callq	memcpy@PLT # Offset: 8252
    00002041: 	movq	0x20(%rsp), %rax
    00002046: 	movq	(%r13), %rdi
    0000204a: 	movq	%rax, 0x8(%rsp)
    0000204f: 	jmp	.Ltmp1825 # Offset: 8271
.Ltmp1739:
    00002054: 	movq	(%rsp), %rsi
    00002058: 	xorl	%edx, %edx
    0000205a: 	movq	%r13, %rdi
    0000205d: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8285
    00002062: 	movq	%rax, (%r13)
    00002066: 	movq	%rax, %rdi
    00002069: 	movq	0x20(%rsp), %rax
    0000206e: 	movq	%rax, 0x10(%r13)
    00002072: 	jmp	.Ltmp1837 # Offset: 8306
.Ltmp1694:
    00002077: 	movq	(%rsp), %rsi
    0000207b: 	xorl	%edx, %edx
    0000207d: 	movq	%r13, %rdi
    00002080: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8320
    00002085: 	movq	%rax, (%r13)
    00002089: 	movq	%rax, %rdi
    0000208c: 	movq	0x20(%rsp), %rax
    00002091: 	movq	%rax, 0x10(%r13)
    00002095: 	jmp	.Ltmp1838 # Offset: 8341
.Ltmp1682:
    0000209a: 	movq	(%rsp), %rsi
    0000209e: 	xorl	%edx, %edx
    000020a0: 	movq	%r13, %rdi
    000020a3: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8355
    000020a8: 	movq	%rax, (%r13)
    000020ac: 	movq	%rax, %rdi
    000020af: 	movq	0x20(%rsp), %rax
    000020b4: 	movq	%rax, 0x10(%r13)
    000020b8: 	jmp	.Ltmp1839 # Offset: 8376
.Ltmp1631:
    000020bd: 	leaq	DATAat0x1a158(%rip), %rdi
    000020c4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8388
.Ltmp1650:
    000020c9: 	leaq	DATAat0x1a158(%rip), %rdi
    000020d0: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8400
.Ltmp1669:
    000020d5: 	leaq	DATAat0x1a158(%rip), %rdi
    000020dc: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8412
.Ltmp1681:
    000020e1: 	leaq	DATAat0x1a158(%rip), %rdi
    000020e8: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8424
.Ltmp1693:
    000020ed: 	leaq	DATAat0x1a158(%rip), %rdi
    000020f4: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8436
.Ltmp1726:
    000020f9: 	leaq	DATAat0x1a158(%rip), %rdi
    00002100: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8448
.Ltmp1738:
    00002105: 	leaq	DATAat0x1a158(%rip), %rdi
    0000210c: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8460
.Ltmp1750:
    00002111: 	leaq	DATAat0x1a158(%rip), %rdi
    00002118: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8472
.Ltmp1769:
    0000211d: 	leaq	DATAat0x1a158(%rip), %rdi
    00002124: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8484
.Ltmp1776:
    00002129: 	callq	__stack_chk_fail@PLT # Offset: 8489
.Ltmp1619:
    0000212e: 	leaq	DATAat0x1a158(%rip), %rdi
    00002135: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8501
    0000213a: 	endbr64
    0000213e: 	movq	%rax, %rbp
    00002141: 	jmp	.Ltmp1840 # Offset: 8513
    00002143: 	endbr64
.Ltmp1842:
    00002147: 	movq	%rax, %rbp
    0000214a: 	jmp	.Ltmp1841 # Offset: 8522
    0000214c: 	endbr64
    00002150: 	jmp	.Ltmp1842 # Offset: 8528
.Ltmp1840:
    00002152: 	movq	0x60(%rsp), %rdi
    00002157: 	leaq	0x70(%rsp), %rax
    0000215c: 	cmpq	%rax, %rdi
    0000215f: 	je	.Ltmp1843 # Offset: 8543
.Ltmp1845:
    00002161: 	movq	0x70(%rsp), %rax
    00002166: 	leaq	0x1(%rax), %rsi
    0000216a: 	callq	_ZdlPvm@PLT # Offset: 8554
.Ltmp1843:
    0000216f: 	movq	0x40(%rsp), %rdi
    00002174: 	cmpq	0x10(%rsp), %rdi
    00002179: 	je	.Ltmp1844 # Offset: 8569
    0000217b: 	movq	0x50(%rsp), %rax
    00002180: 	leaq	0x1(%rax), %rsi
    00002184: 	callq	_ZdlPvm@PLT # Offset: 8580
.Ltmp1844:
    00002189: 	movq	%rbp, %rdi
    0000218c: 	callq	_Unwind_Resume@PLT # Offset: 8588
.Ltmp1841:
    00002191: 	movq	0x60(%rsp), %rdi
    00002196: 	cmpq	%r14, %rdi
    00002199: 	jne	.Ltmp1845 # Offset: 8601
    0000219b: 	jmp	.Ltmp1843 # Offset: 8603
    0000219d: 	endbr64
    000021a1: 	jmp	.Ltmp1842 # Offset: 8609
    000021a3: 	endbr64
    000021a7: 	jmp	.Ltmp1842 # Offset: 8615
    000021a9: 	endbr64
    000021ad: 	jmp	.Ltmp1842 # Offset: 8621
    000021af: 	endbr64
    000021b3: 	jmp	.Ltmp1842 # Offset: 8627
    000021b5: 	endbr64
    000021b9: 	jmp	.Ltmp1842 # Offset: 8633
    000021bb: 	endbr64
    000021bf: 	jmp	.Ltmp1842 # Offset: 8639
    000021c1: 	endbr64
    000021c5: 	jmp	.Ltmp1842 # Offset: 8645
    000021c7: 	endbr64
    000021cb: 	jmp	.Ltmp1842 # Offset: 8651
    000021d0: 	endbr64
    000021d4: 	movq	%rax, %rbp
    000021d7: 	jmp	.Ltmp1843 # Offset: 8663
    000021d9: 	endbr64
    000021dd: 	jmp	.Ltmp1842 # Offset: 8669
    000021e2: 	endbr64
    000021e6: 	jmp	.Ltmp1842 # Offset: 8678
    000021eb: 	endbr64
    000021ef: 	jmp	.Ltmp1842 # Offset: 8687
    000021f4: 	endbr64
    000021f8: 	jmp	.Ltmp1842 # Offset: 8696
    000021fd: 	endbr64
    00002201: 	jmp	.Ltmp1842 # Offset: 8705
    00002206: 	endbr64
    0000220a: 	jmp	.Ltmp1842 # Offset: 8714
    0000220f: 	endbr64
    00002213: 	jmp	.Ltmp1842 # Offset: 8723
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeImEvv"

Binary Function "_Z11TestOneTypeIeEvv" after disassembly {
  Number      : 54
  State       : disassembled
  Address     : 0x12ea0
  Size        : 0x24da
  MaxSize     : 0x24e0
  Offset      : 0x12ea0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIeEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB053:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x1f000(%rsp), %r11
.Ltmp1846:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp1846 # Offset: 37
    00000027: 	subq	$0x4c8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000003d: 	movq	%fs:0x28, %rax
    00000046: 	movq	%rax, 0x1f4b8(%rsp)
    0000004e: 	xorl	%eax, %eax
    00000050: 	movaps	%xmm7, 0x50(%rsp)
    00000055: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm7
    0000005d: 	leaq	0x50(%rsp), %rsi
    00000062: 	movq	%rsi, 0x40(%rsp)
    00000067: 	leaq	0xb0(%rsp), %rbp
    0000006f: 	leaq	0x1f4b0(%rsp), %rbx
    00000077: 	movaps	%xmm7, 0x60(%rsp)
    0000007c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 124
    00000081: 	leaq	0x80(%rsp), %rax
    00000089: 	movb	$0x65, 0x8a(%rsp)
    00000091: 	fldl	init_value(%rip)
    00000097: 	movq	%rax, 0x48(%rsp)
    0000009c: 	movq	%rax, 0x70(%rsp)
    000000a1: 	movabsq	$0x756f6420676e6f6c, %rax
    000000ab: 	movq	$0xb, 0x78(%rsp)
    000000b4: 	movb	$0x0, 0x8b(%rsp)
    000000bc: 	movq	%rax, 0x80(%rsp)
    000000c4: 	movl	$0x6c62, %eax
    000000c9: 	movw	%ax, 0x88(%rsp)
    000000d1: 	movq	%rbp, %rax
    000000d4: 	nopl	(%rax) # Size: 4
.Ltmp1847:
    000000d8: 	addq	$0x10, %rax
    000000dc: 	fld	%st(0)
    000000de: 	fstpt	-0x10(%rax)
    000000e1: 	cmpq	%rbx, %rax
    000000e4: 	jne	.Ltmp1847 # Offset: 228
    000000e6: 	fstp	%st(0)
    000000e8: 	leaq	0x90(%rsp), %r12
    000000f0: 	leaq	0x70(%rsp), %r15
    000000f5: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000fc: 	movq	%r15, %rsi
    000000ff: 	movq	%r12, %rdi
    00000102: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 258
    00000107: 	callq	clock@PLT # Offset: 263
    0000010c: 	movl	iterations(%rip), %edx
    00000112: 	movq	%rax, start_time(%rip)
    00000119: 	testl	%edx, %edx
    0000011b: 	jle	.Ltmp1848 # Offset: 283
    00000121: 	pxor	%xmm7, %xmm7
    00000125: 	xorl	%r13d, %r13d
    00000128: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000012f: 	movss	%xmm7, 0x8(%rsp)
    00000135: 	movss	DATAat0x1a350(%rip), %xmm7
    0000013d: 	movss	%xmm7, 0x10(%rsp)
    00000143: 	movsd	DATAat0x1a330(%rip), %xmm7
    0000014b: 	movsd	%xmm7, 0x18(%rsp)
    00000151: 	movq	DATAat0x1a360(%rip), %xmm7
    00000159: 	movaps	%xmm7, 0x20(%rsp)
    0000015e: 	movsd	DATAat0x1a338(%rip), %xmm7
    00000166: 	movsd	%xmm7, 0x30(%rsp)
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp1853:
    00000170: 	movq	%rbp, %rax
    00000173: 	fldz
    00000175: 	nopl	(%rax) # Size: 3
.Ltmp1849:
    00000178: 	fldt	(%rax)
    0000017a: 	addq	$0x10, %rax
    0000017e: 	faddp	%st, %st(1)
    00000180: 	cmpq	%rax, %rbx
    00000183: 	jne	.Ltmp1849 # Offset: 387
    00000185: 	flds	0x10(%rsp)
    00000189: 	fmull	init_value(%rip)
    0000018f: 	fsubr	%st(1), %st
    00000191: 	fstpl	0x38(%rsp)
    00000195: 	fld	%st(0)
    00000197: 	fabs
    00000199: 	fldl	0x18(%rsp)
    0000019d: 	fxch	%st(1)
    0000019f: 	fcompi	%st(1), %st
    000001a1: 	fstp	%st(0)
    000001a3: 	jbe	.Ltmp1850 # Offset: 419
    000001a5: 	fdivrl	0x38(%rsp)
    000001a9: 	fstpl	0x38(%rsp)
    000001ad: 	jmp	.Ltmp1851 # Offset: 429
    000001af: 	nop # Size: 1
.Ltmp1850:
    000001b0: 	fstp	%st(0)
.Ltmp1851:
    000001b2: 	movsd	0x38(%rsp), %xmm0
    000001b8: 	movsd	0x30(%rsp), %xmm2
    000001be: 	andpd	0x20(%rsp), %xmm0
    000001c4: 	comisd	%xmm0, %xmm2
    000001c8: 	jbe	.Ltmp1852 # Offset: 456
.Ltmp2029:
    000001ce: 	addl	$0x1, %r13d
    000001d2: 	cmpl	%edx, %r13d
    000001d5: 	jl	.Ltmp1853 # Offset: 469
.Ltmp1848:
    000001d7: 	movq	%r12, %rdi
    000001da: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 474
    000001df: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001ed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f4: 	je	.Ltmp1854 # Offset: 500
.Ltmp2050:
    000001fa: 	movq	-0x20(%rax), %r13
    000001fe: 	callq	clock@PLT # Offset: 510
    00000203: 	pxor	%xmm0, %xmm0
    00000207: 	movq	%rax, end_time(%rip)
    0000020e: 	movq	%r13, %rdi
    00000211: 	subq	start_time(%rip), %rax
    00000218: 	cvtsi2sd	%rax, %xmm0
    0000021d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000225: 	callq	_Z13record_resultdPKc # Offset: 549
    0000022a: 	movq	0x90(%rsp), %rdi
    00000232: 	leaq	0xa0(%rsp), %r14
    0000023a: 	cmpq	%r14, %rdi
    0000023d: 	je	.Ltmp1855 # Offset: 573
    0000023f: 	movq	0xa0(%rsp), %rax
    00000247: 	leaq	0x1(%rax), %rsi
    0000024b: 	callq	_ZdlPvm@PLT # Offset: 587
.Ltmp1855:
    00000250: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000257: 	movq	%r15, %rsi
    0000025a: 	movq	%r12, %rdi
    0000025d: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 605
    00000262: 	callq	clock@PLT # Offset: 610
    00000267: 	movl	iterations(%rip), %edx
    0000026d: 	movq	%rax, start_time(%rip)
    00000274: 	testl	%edx, %edx
    00000276: 	jle	.Ltmp1856 # Offset: 630
    0000027c: 	pxor	%xmm7, %xmm7
    00000280: 	movsd	DATAat0x1a330(%rip), %xmm1
    00000288: 	xorl	%r13d, %r13d
    0000028b: 	movq	DATAat0x1a360(%rip), %xmm2
    00000293: 	movsd	DATAat0x1a338(%rip), %xmm3
    0000029b: 	movss	%xmm7, 0x8(%rsp)
    000002a1: 	movss	DATAat0x1a350(%rip), %xmm7
    000002a9: 	movsd	%xmm1, 0x18(%rsp)
    000002af: 	movss	%xmm7, 0x10(%rsp)
    000002b5: 	movaps	%xmm2, 0x20(%rsp)
    000002ba: 	movsd	%xmm3, 0x30(%rsp)
.Ltmp1861:
    000002c0: 	movq	%rbp, %rax
    000002c3: 	fldz
    000002c5: 	nopl	(%rax) # Size: 3
.Ltmp1857:
    000002c8: 	fldt	(%rax)
    000002ca: 	addq	$0x10, %rax
    000002ce: 	faddp	%st, %st(1)
    000002d0: 	cmpq	%rax, %rbx
    000002d3: 	jne	.Ltmp1857 # Offset: 723
    000002d5: 	flds	0x10(%rsp)
    000002d9: 	fmull	init_value(%rip)
    000002df: 	fsubr	%st(1), %st
    000002e1: 	fstpl	0x38(%rsp)
    000002e5: 	fld	%st(0)
    000002e7: 	fabs
    000002e9: 	fldl	0x18(%rsp)
    000002ed: 	fxch	%st(1)
    000002ef: 	fcompi	%st(1), %st
    000002f1: 	fstp	%st(0)
    000002f3: 	jbe	.Ltmp1858 # Offset: 755
    000002f5: 	fdivrl	0x38(%rsp)
    000002f9: 	fstpl	0x38(%rsp)
    000002fd: 	jmp	.Ltmp1859 # Offset: 765
    000002ff: 	nop # Size: 1
.Ltmp1858:
    00000300: 	fstp	%st(0)
.Ltmp1859:
    00000302: 	movsd	0x38(%rsp), %xmm0
    00000308: 	movsd	0x30(%rsp), %xmm4
    0000030e: 	andpd	0x20(%rsp), %xmm0
    00000314: 	comisd	%xmm0, %xmm4
    00000318: 	jbe	.Ltmp1860 # Offset: 792
.Ltmp2028:
    0000031e: 	addl	$0x1, %r13d
    00000322: 	cmpl	%edx, %r13d
    00000325: 	jl	.Ltmp1861 # Offset: 805
.Ltmp1856:
    00000327: 	movq	%r12, %rdi
    0000032a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 810
    0000032f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000336: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000033d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000344: 	je	.Ltmp1862 # Offset: 836
.Ltmp2049:
    0000034a: 	movq	-0x20(%rax), %r13
    0000034e: 	callq	clock@PLT # Offset: 846
    00000353: 	pxor	%xmm0, %xmm0
    00000357: 	movq	%rax, end_time(%rip)
    0000035e: 	movq	%r13, %rdi
    00000361: 	subq	start_time(%rip), %rax
    00000368: 	cvtsi2sd	%rax, %xmm0
    0000036d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000375: 	callq	_Z13record_resultdPKc # Offset: 885
    0000037a: 	movq	0x90(%rsp), %rdi
    00000382: 	cmpq	%r14, %rdi
    00000385: 	je	.Ltmp1863 # Offset: 901
    00000387: 	movq	0xa0(%rsp), %rax
    0000038f: 	leaq	0x1(%rax), %rsi
    00000393: 	callq	_ZdlPvm@PLT # Offset: 915
.Ltmp1863:
    00000398: 	leaq	DATAat0x1a1ee(%rip), %rdx
    0000039f: 	movq	%r15, %rsi
    000003a2: 	movq	%r12, %rdi
    000003a5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 933
    000003aa: 	callq	clock@PLT # Offset: 938
    000003af: 	movl	iterations(%rip), %edx
    000003b5: 	movq	%rax, start_time(%rip)
    000003bc: 	testl	%edx, %edx
    000003be: 	jle	.Ltmp1864 # Offset: 958
    000003c4: 	movss	DATAat0x1a350(%rip), %xmm5
    000003cc: 	pxor	%xmm4, %xmm4
    000003d0: 	xorl	%r13d, %r13d
    000003d3: 	movsd	DATAat0x1a330(%rip), %xmm6
    000003db: 	movq	DATAat0x1a360(%rip), %xmm7
    000003e3: 	movsd	DATAat0x1a338(%rip), %xmm1
    000003eb: 	movss	%xmm4, 0x8(%rsp)
    000003f1: 	movss	%xmm5, 0x10(%rsp)
    000003f7: 	movsd	%xmm6, 0x18(%rsp)
    000003fd: 	movaps	%xmm7, 0x20(%rsp)
    00000402: 	movsd	%xmm1, 0x30(%rsp)
    00000408: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1869:
    00000410: 	movq	%rbp, %rax
    00000413: 	fldz
    00000415: 	nopl	(%rax) # Size: 3
.Ltmp1865:
    00000418: 	fldt	(%rax)
    0000041a: 	addq	$0x10, %rax
    0000041e: 	faddp	%st, %st(1)
    00000420: 	cmpq	%rax, %rbx
    00000423: 	jne	.Ltmp1865 # Offset: 1059
    00000425: 	flds	0x10(%rsp)
    00000429: 	fmull	init_value(%rip)
    0000042f: 	fsubr	%st(1), %st
    00000431: 	fstpl	0x38(%rsp)
    00000435: 	fld	%st(0)
    00000437: 	fabs
    00000439: 	fldl	0x18(%rsp)
    0000043d: 	fxch	%st(1)
    0000043f: 	fcompi	%st(1), %st
    00000441: 	fstp	%st(0)
    00000443: 	jbe	.Ltmp1866 # Offset: 1091
    00000445: 	fdivrl	0x38(%rsp)
    00000449: 	fstpl	0x38(%rsp)
    0000044d: 	jmp	.Ltmp1867 # Offset: 1101
    0000044f: 	nop # Size: 1
.Ltmp1866:
    00000450: 	fstp	%st(0)
.Ltmp1867:
    00000452: 	movsd	0x38(%rsp), %xmm0
    00000458: 	movsd	0x30(%rsp), %xmm6
    0000045e: 	andpd	0x20(%rsp), %xmm0
    00000464: 	comisd	%xmm0, %xmm6
    00000468: 	jbe	.Ltmp1868 # Offset: 1128
.Ltmp2027:
    0000046e: 	addl	$0x1, %r13d
    00000472: 	cmpl	%edx, %r13d
    00000475: 	jl	.Ltmp1869 # Offset: 1141
.Ltmp1864:
    00000477: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000047e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000485: 	subq	$0x20, %rax
    00000489: 	cmpq	%rax, %r13
    0000048c: 	je	.Ltmp1870 # Offset: 1164
    00000492: 	leaq	0x10(%r13), %rdi
    00000496: 	movq	0x98(%rsp), %rsi
    0000049e: 	movq	%rdi, (%r13)
    000004a2: 	movq	0x90(%rsp), %rcx
    000004aa: 	movq	%rsi, 0x8(%rsp)
    000004af: 	movq	%rcx, %rax
    000004b2: 	movq	%rcx, 0x10(%rsp)
    000004b7: 	addq	%rsi, %rax
    000004ba: 	je	.Ltmp1871 # Offset: 1210
    000004bc: 	testq	%rcx, %rcx
    000004bf: 	je	.Ltmp1872 # Offset: 1215
.Ltmp1871:
    000004c5: 	movq	0x8(%rsp), %rax
    000004ca: 	movq	%rax, 0x50(%rsp)
    000004cf: 	cmpq	$0xf, %rax
    000004d3: 	ja	.Ltmp1873 # Offset: 1235
    000004d9: 	cmpq	$0x1, 0x8(%rsp)
    000004df: 	jne	.Ltmp1874 # Offset: 1247
    000004e5: 	movq	0x10(%rsp), %rax
    000004ea: 	movzbl	(%rax), %eax
    000004ed: 	movb	%al, 0x10(%r13)
.Ltmp2030:
    000004f1: 	movq	0x8(%rsp), %rax
    000004f6: 	movq	%rax, 0x8(%r13)
    000004fa: 	movb	$0x0, (%rdi,%rax)
    000004fe: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000505: 	addq	$0x20, %rax
    00000509: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2058:
    00000510: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000517: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000051e: 	je	.Ltmp1875 # Offset: 1310
.Ltmp2057:
    00000524: 	movq	-0x20(%rax), %r13
    00000528: 	callq	clock@PLT # Offset: 1320
    0000052d: 	pxor	%xmm0, %xmm0
    00000531: 	movq	%rax, end_time(%rip)
    00000538: 	movq	%r13, %rdi
    0000053b: 	subq	start_time(%rip), %rax
    00000542: 	cvtsi2sd	%rax, %xmm0
    00000547: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000054f: 	callq	_Z13record_resultdPKc # Offset: 1359
    00000554: 	movq	0x90(%rsp), %rdi
    0000055c: 	cmpq	%r14, %rdi
    0000055f: 	je	.Ltmp1876 # Offset: 1375
    00000561: 	movq	0xa0(%rsp), %rax
    00000569: 	leaq	0x1(%rax), %rsi
    0000056d: 	callq	_ZdlPvm@PLT # Offset: 1389
.Ltmp1876:
    00000572: 	leaq	DATAat0x1a1fb(%rip), %rdx
    00000579: 	movq	%r15, %rsi
    0000057c: 	movq	%r12, %rdi
    0000057f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1407
    00000584: 	callq	clock@PLT # Offset: 1412
    00000589: 	movl	iterations(%rip), %edx
    0000058f: 	movq	%rax, start_time(%rip)
    00000596: 	testl	%edx, %edx
    00000598: 	jle	.Ltmp1877 # Offset: 1432
    0000059e: 	movss	DATAat0x1a350(%rip), %xmm3
    000005a6: 	pxor	%xmm2, %xmm2
    000005aa: 	xorl	%r13d, %r13d
    000005ad: 	movsd	DATAat0x1a330(%rip), %xmm4
    000005b5: 	movq	DATAat0x1a360(%rip), %xmm5
    000005bd: 	movsd	DATAat0x1a338(%rip), %xmm6
    000005c5: 	movss	%xmm2, 0x8(%rsp)
    000005cb: 	movss	%xmm3, 0x10(%rsp)
    000005d1: 	movsd	%xmm4, 0x18(%rsp)
    000005d7: 	movaps	%xmm5, 0x20(%rsp)
    000005dc: 	movsd	%xmm6, 0x30(%rsp)
    000005e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1882:
    000005e8: 	movq	%rbp, %rax
    000005eb: 	fldz
    000005ed: 	nopl	(%rax) # Size: 3
.Ltmp1878:
    000005f0: 	fldt	(%rax)
    000005f2: 	addq	$0x10, %rax
    000005f6: 	faddp	%st, %st(1)
    000005f8: 	cmpq	%rax, %rbx
    000005fb: 	jne	.Ltmp1878 # Offset: 1531
    000005fd: 	flds	0x10(%rsp)
    00000601: 	fmull	init_value(%rip)
    00000607: 	fsubr	%st(1), %st
    00000609: 	fstpl	0x38(%rsp)
    0000060d: 	fld	%st(0)
    0000060f: 	fabs
    00000611: 	fldl	0x18(%rsp)
    00000615: 	fxch	%st(1)
    00000617: 	fcompi	%st(1), %st
    00000619: 	fstp	%st(0)
    0000061b: 	jbe	.Ltmp1879 # Offset: 1563
    0000061d: 	fdivrl	0x38(%rsp)
    00000621: 	fstpl	0x38(%rsp)
    00000625: 	jmp	.Ltmp1880 # Offset: 1573
    00000627: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1879:
    00000630: 	fstp	%st(0)
.Ltmp1880:
    00000632: 	movsd	0x38(%rsp), %xmm0
    00000638: 	movsd	0x30(%rsp), %xmm1
    0000063e: 	andpd	0x20(%rsp), %xmm0
    00000644: 	comisd	%xmm0, %xmm1
    00000648: 	jbe	.Ltmp1881 # Offset: 1608
.Ltmp2036:
    0000064e: 	addl	$0x1, %r13d
    00000652: 	cmpl	%edx, %r13d
    00000655: 	jl	.Ltmp1882 # Offset: 1621
.Ltmp1877:
    00000657: 	movq	%r12, %rdi
    0000065a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1626
    0000065f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000666: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000066d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000674: 	je	.Ltmp1883 # Offset: 1652
.Ltmp2061:
    0000067a: 	movq	-0x20(%rax), %r13
    0000067e: 	callq	clock@PLT # Offset: 1662
    00000683: 	pxor	%xmm0, %xmm0
    00000687: 	movq	%rax, end_time(%rip)
    0000068e: 	movq	%r13, %rdi
    00000691: 	subq	start_time(%rip), %rax
    00000698: 	cvtsi2sd	%rax, %xmm0
    0000069d: 	divsd	DATAat0x1a318(%rip), %xmm0
    000006a5: 	callq	_Z13record_resultdPKc # Offset: 1701
    000006aa: 	movq	0x90(%rsp), %rdi
    000006b2: 	cmpq	%r14, %rdi
    000006b5: 	je	.Ltmp1884 # Offset: 1717
    000006b7: 	movq	0xa0(%rsp), %rax
    000006bf: 	leaq	0x1(%rax), %rsi
    000006c3: 	callq	_ZdlPvm@PLT # Offset: 1731
.Ltmp1884:
    000006c8: 	leaq	DATAat0x1a208(%rip), %rdx
    000006cf: 	movq	%r15, %rsi
    000006d2: 	movq	%r12, %rdi
    000006d5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1749
    000006da: 	callq	clock@PLT # Offset: 1754
    000006df: 	movl	iterations(%rip), %edx
    000006e5: 	movq	%rax, start_time(%rip)
    000006ec: 	testl	%edx, %edx
    000006ee: 	jle	.Ltmp1885 # Offset: 1774
    000006f4: 	movss	DATAat0x1a350(%rip), %xmm1
    000006fc: 	pxor	%xmm7, %xmm7
    00000700: 	xorl	%r13d, %r13d
    00000703: 	movsd	DATAat0x1a330(%rip), %xmm2
    0000070b: 	movq	DATAat0x1a360(%rip), %xmm3
    00000713: 	movsd	DATAat0x1a338(%rip), %xmm4
    0000071b: 	movss	%xmm7, 0x8(%rsp)
    00000721: 	movss	%xmm1, 0x10(%rsp)
    00000727: 	movsd	%xmm2, 0x18(%rsp)
    0000072d: 	movaps	%xmm3, 0x20(%rsp)
    00000732: 	movsd	%xmm4, 0x30(%rsp)
    00000738: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1890:
    00000740: 	movq	%rbp, %rax
    00000743: 	fldz
    00000745: 	nopl	(%rax) # Size: 3
.Ltmp1886:
    00000748: 	fldt	(%rax)
    0000074a: 	addq	$0x10, %rax
    0000074e: 	faddp	%st, %st(1)
    00000750: 	cmpq	%rax, %rbx
    00000753: 	jne	.Ltmp1886 # Offset: 1875
    00000755: 	flds	0x10(%rsp)
    00000759: 	fmull	init_value(%rip)
    0000075f: 	fsubr	%st(1), %st
    00000761: 	fstpl	0x38(%rsp)
    00000765: 	fld	%st(0)
    00000767: 	fabs
    00000769: 	fldl	0x18(%rsp)
    0000076d: 	fxch	%st(1)
    0000076f: 	fcompi	%st(1), %st
    00000771: 	fstp	%st(0)
    00000773: 	jbe	.Ltmp1887 # Offset: 1907
    00000775: 	fdivrl	0x38(%rsp)
    00000779: 	fstpl	0x38(%rsp)
    0000077d: 	jmp	.Ltmp1888 # Offset: 1917
    0000077f: 	nop # Size: 1
.Ltmp1887:
    00000780: 	fstp	%st(0)
.Ltmp1888:
    00000782: 	movsd	0x38(%rsp), %xmm0
    00000788: 	movsd	0x30(%rsp), %xmm3
    0000078e: 	andpd	0x20(%rsp), %xmm0
    00000794: 	comisd	%xmm0, %xmm3
    00000798: 	jbe	.Ltmp1889 # Offset: 1944
.Ltmp2037:
    0000079e: 	addl	$0x1, %r13d
    000007a2: 	cmpl	%edx, %r13d
    000007a5: 	jl	.Ltmp1890 # Offset: 1957
.Ltmp1885:
    000007a7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007ae: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000007b5: 	subq	$0x20, %rax
    000007b9: 	cmpq	%rax, %r13
    000007bc: 	je	.Ltmp1891 # Offset: 1980
    000007c2: 	leaq	0x10(%r13), %rdi
    000007c6: 	movq	0x98(%rsp), %rsi
    000007ce: 	movq	%rdi, (%r13)
    000007d2: 	movq	0x90(%rsp), %rcx
    000007da: 	movq	%rsi, 0x8(%rsp)
    000007df: 	movq	%rcx, %rax
    000007e2: 	movq	%rcx, 0x10(%rsp)
    000007e7: 	addq	%rsi, %rax
    000007ea: 	je	.Ltmp1892 # Offset: 2026
    000007ec: 	testq	%rcx, %rcx
    000007ef: 	je	.Ltmp1893 # Offset: 2031
.Ltmp1892:
    000007f5: 	movq	0x8(%rsp), %rax
    000007fa: 	movq	%rax, 0x50(%rsp)
    000007ff: 	cmpq	$0xf, %rax
    00000803: 	ja	.Ltmp1894 # Offset: 2051
    00000809: 	cmpq	$0x1, 0x8(%rsp)
    0000080f: 	jne	.Ltmp1895 # Offset: 2063
    00000815: 	movq	0x10(%rsp), %rax
    0000081a: 	movzbl	(%rax), %eax
    0000081d: 	movb	%al, 0x10(%r13)
.Ltmp2071:
    00000821: 	movq	0x8(%rsp), %rax
    00000826: 	movq	%rax, 0x8(%r13)
    0000082a: 	movb	$0x0, (%rdi,%rax)
    0000082e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000835: 	addq	$0x20, %rax
    00000839: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2055:
    00000840: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000847: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000084e: 	je	.Ltmp1896 # Offset: 2126
.Ltmp2053:
    00000854: 	movq	-0x20(%rax), %r13
    00000858: 	callq	clock@PLT # Offset: 2136
    0000085d: 	pxor	%xmm0, %xmm0
    00000861: 	movq	%rax, end_time(%rip)
    00000868: 	movq	%r13, %rdi
    0000086b: 	subq	start_time(%rip), %rax
    00000872: 	cvtsi2sd	%rax, %xmm0
    00000877: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000087f: 	callq	_Z13record_resultdPKc # Offset: 2175
    00000884: 	movq	0x90(%rsp), %rdi
    0000088c: 	cmpq	%r14, %rdi
    0000088f: 	je	.Ltmp1897 # Offset: 2191
    00000891: 	movq	0xa0(%rsp), %rax
    00000899: 	leaq	0x1(%rax), %rsi
    0000089d: 	callq	_ZdlPvm@PLT # Offset: 2205
.Ltmp1897:
    000008a2: 	leaq	DATAat0x1a215(%rip), %rdx
    000008a9: 	movq	%r15, %rsi
    000008ac: 	movq	%r12, %rdi
    000008af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2223
    000008b4: 	callq	clock@PLT # Offset: 2228
    000008b9: 	movl	iterations(%rip), %edx
    000008bf: 	movq	%rax, start_time(%rip)
    000008c6: 	testl	%edx, %edx
    000008c8: 	jle	.Ltmp1898 # Offset: 2248
    000008ce: 	movss	DATAat0x1a350(%rip), %xmm6
    000008d6: 	pxor	%xmm5, %xmm5
    000008da: 	xorl	%r13d, %r13d
    000008dd: 	movsd	DATAat0x1a330(%rip), %xmm7
    000008e5: 	movq	DATAat0x1a360(%rip), %xmm1
    000008ed: 	movsd	DATAat0x1a338(%rip), %xmm2
    000008f5: 	movss	%xmm5, 0x8(%rsp)
    000008fb: 	movss	%xmm6, 0x10(%rsp)
    00000901: 	movsd	%xmm7, 0x18(%rsp)
    00000907: 	movaps	%xmm1, 0x20(%rsp)
    0000090c: 	movsd	%xmm2, 0x30(%rsp)
    00000912: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1903:
    00000918: 	movq	%rbp, %rax
    0000091b: 	fldz
    0000091d: 	nopl	(%rax) # Size: 3
.Ltmp1899:
    00000920: 	fldt	(%rax)
    00000922: 	addq	$0x10, %rax
    00000926: 	faddp	%st, %st(1)
    00000928: 	cmpq	%rax, %rbx
    0000092b: 	jne	.Ltmp1899 # Offset: 2347
    0000092d: 	flds	0x10(%rsp)
    00000931: 	fmull	init_value(%rip)
    00000937: 	fsubr	%st(1), %st
    00000939: 	fstpl	0x38(%rsp)
    0000093d: 	fld	%st(0)
    0000093f: 	fabs
    00000941: 	fldl	0x18(%rsp)
    00000945: 	fxch	%st(1)
    00000947: 	fcompi	%st(1), %st
    00000949: 	fstp	%st(0)
    0000094b: 	jbe	.Ltmp1900 # Offset: 2379
    0000094d: 	fdivrl	0x38(%rsp)
    00000951: 	fstpl	0x38(%rsp)
    00000955: 	jmp	.Ltmp1901 # Offset: 2389
    00000957: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1900:
    00000960: 	fstp	%st(0)
.Ltmp1901:
    00000962: 	movsd	0x38(%rsp), %xmm0
    00000968: 	movsd	0x30(%rsp), %xmm5
    0000096e: 	andpd	0x20(%rsp), %xmm0
    00000974: 	comisd	%xmm0, %xmm5
    00000978: 	jbe	.Ltmp1902 # Offset: 2424
.Ltmp2044:
    0000097e: 	addl	$0x1, %r13d
    00000982: 	cmpl	%edx, %r13d
    00000985: 	jl	.Ltmp1903 # Offset: 2437
.Ltmp1898:
    00000987: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000098e: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    00000995: 	subq	$0x20, %rax
    00000999: 	cmpq	%rax, %r13
    0000099c: 	je	.Ltmp1904 # Offset: 2460
    000009a2: 	leaq	0x10(%r13), %rdi
    000009a6: 	movq	0x98(%rsp), %rsi
    000009ae: 	movq	%rdi, (%r13)
    000009b2: 	movq	0x90(%rsp), %rcx
    000009ba: 	movq	%rsi, 0x8(%rsp)
    000009bf: 	movq	%rcx, %rax
    000009c2: 	movq	%rcx, 0x10(%rsp)
    000009c7: 	addq	%rsi, %rax
    000009ca: 	je	.Ltmp1905 # Offset: 2506
    000009cc: 	testq	%rcx, %rcx
    000009cf: 	je	.Ltmp1906 # Offset: 2511
.Ltmp1905:
    000009d5: 	movq	0x8(%rsp), %rax
    000009da: 	movq	%rax, 0x50(%rsp)
    000009df: 	cmpq	$0xf, %rax
    000009e3: 	ja	.Ltmp1907 # Offset: 2531
    000009e9: 	cmpq	$0x1, 0x8(%rsp)
    000009ef: 	jne	.Ltmp1908 # Offset: 2543
    000009f5: 	movq	0x10(%rsp), %rax
    000009fa: 	movzbl	(%rax), %eax
    000009fd: 	movb	%al, 0x10(%r13)
.Ltmp2075:
    00000a01: 	movq	0x8(%rsp), %rax
    00000a06: 	movq	%rax, 0x8(%r13)
    00000a0a: 	movb	$0x0, (%rdi,%rax)
    00000a0e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a15: 	addq	$0x20, %rax
    00000a19: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2052:
    00000a20: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a27: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a2e: 	je	.Ltmp1909 # Offset: 2606
.Ltmp2051:
    00000a34: 	movq	-0x20(%rax), %r13
    00000a38: 	callq	clock@PLT # Offset: 2616
    00000a3d: 	pxor	%xmm0, %xmm0
    00000a41: 	movq	%rax, end_time(%rip)
    00000a48: 	movq	%r13, %rdi
    00000a4b: 	subq	start_time(%rip), %rax
    00000a52: 	cvtsi2sd	%rax, %xmm0
    00000a57: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a5f: 	callq	_Z13record_resultdPKc # Offset: 2655
    00000a64: 	movq	0x90(%rsp), %rdi
    00000a6c: 	cmpq	%r14, %rdi
    00000a6f: 	je	.Ltmp1910 # Offset: 2671
    00000a71: 	movq	0xa0(%rsp), %rax
    00000a79: 	leaq	0x1(%rax), %rsi
    00000a7d: 	callq	_ZdlPvm@PLT # Offset: 2685
.Ltmp1910:
    00000a82: 	leaq	DATAat0x1a226(%rip), %rdx
    00000a89: 	movq	%r15, %rsi
    00000a8c: 	movq	%r12, %rdi
    00000a8f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2703
    00000a94: 	callq	clock@PLT # Offset: 2708
    00000a99: 	movl	iterations(%rip), %edx
    00000a9f: 	movq	%rax, start_time(%rip)
    00000aa6: 	testl	%edx, %edx
    00000aa8: 	jle	.Ltmp1911 # Offset: 2728
    00000aae: 	movss	DATAat0x1a350(%rip), %xmm4
    00000ab6: 	pxor	%xmm3, %xmm3
    00000aba: 	xorl	%r13d, %r13d
    00000abd: 	movsd	DATAat0x1a330(%rip), %xmm5
    00000ac5: 	movq	DATAat0x1a360(%rip), %xmm6
    00000acd: 	movsd	DATAat0x1a338(%rip), %xmm7
    00000ad5: 	movss	%xmm3, 0x8(%rsp)
    00000adb: 	movss	%xmm4, 0x10(%rsp)
    00000ae1: 	movsd	%xmm5, 0x18(%rsp)
    00000ae7: 	movaps	%xmm6, 0x20(%rsp)
    00000aec: 	movsd	%xmm7, 0x30(%rsp)
    00000af2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1916:
    00000af8: 	movq	%rbp, %rax
    00000afb: 	fldz
    00000afd: 	nopl	(%rax) # Size: 3
.Ltmp1912:
    00000b00: 	fldt	(%rax)
    00000b02: 	addq	$0x10, %rax
    00000b06: 	faddp	%st, %st(1)
    00000b08: 	cmpq	%rax, %rbx
    00000b0b: 	jne	.Ltmp1912 # Offset: 2827
    00000b0d: 	flds	0x10(%rsp)
    00000b11: 	fmull	init_value(%rip)
    00000b17: 	fsubr	%st(1), %st
    00000b19: 	fstpl	0x38(%rsp)
    00000b1d: 	fld	%st(0)
    00000b1f: 	fabs
    00000b21: 	fldl	0x18(%rsp)
    00000b25: 	fxch	%st(1)
    00000b27: 	fcompi	%st(1), %st
    00000b29: 	fstp	%st(0)
    00000b2b: 	jbe	.Ltmp1913 # Offset: 2859
    00000b2d: 	fdivrl	0x38(%rsp)
    00000b31: 	fstpl	0x38(%rsp)
    00000b35: 	jmp	.Ltmp1914 # Offset: 2869
    00000b37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1913:
    00000b40: 	fstp	%st(0)
.Ltmp1914:
    00000b42: 	movsd	0x38(%rsp), %xmm0
    00000b48: 	movsd	0x30(%rsp), %xmm7
    00000b4e: 	andpd	0x20(%rsp), %xmm0
    00000b54: 	comisd	%xmm0, %xmm7
    00000b58: 	jbe	.Ltmp1915 # Offset: 2904
.Ltmp2043:
    00000b5e: 	addl	$0x1, %r13d
    00000b62: 	cmpl	%edx, %r13d
    00000b65: 	jl	.Ltmp1916 # Offset: 2917
.Ltmp1911:
    00000b67: 	movq	%r12, %rdi
    00000b6a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2922
    00000b6f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b76: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b7d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b84: 	je	.Ltmp1917 # Offset: 2948
.Ltmp2060:
    00000b8a: 	movq	-0x20(%rax), %r13
    00000b8e: 	callq	clock@PLT # Offset: 2958
    00000b93: 	pxor	%xmm0, %xmm0
    00000b97: 	movq	%rax, end_time(%rip)
    00000b9e: 	movq	%r13, %rdi
    00000ba1: 	subq	start_time(%rip), %rax
    00000ba8: 	cvtsi2sd	%rax, %xmm0
    00000bad: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000bb5: 	callq	_Z13record_resultdPKc # Offset: 2997
    00000bba: 	movq	0x90(%rsp), %rdi
    00000bc2: 	cmpq	%r14, %rdi
    00000bc5: 	je	.Ltmp1918 # Offset: 3013
    00000bc7: 	movq	0xa0(%rsp), %rax
    00000bcf: 	leaq	0x1(%rax), %rsi
    00000bd3: 	callq	_ZdlPvm@PLT # Offset: 3027
.Ltmp1918:
    00000bd8: 	leaq	DATAat0x1a238(%rip), %rdx
    00000bdf: 	movq	%r15, %rsi
    00000be2: 	movq	%r12, %rdi
    00000be5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3045
    00000bea: 	callq	clock@PLT # Offset: 3050
    00000bef: 	movl	iterations(%rip), %edx
    00000bf5: 	movq	%rax, start_time(%rip)
    00000bfc: 	testl	%edx, %edx
    00000bfe: 	jle	.Ltmp1919 # Offset: 3070
    00000c04: 	movss	DATAat0x1a350(%rip), %xmm2
    00000c0c: 	pxor	%xmm1, %xmm1
    00000c10: 	xorl	%r13d, %r13d
    00000c13: 	movsd	DATAat0x1a330(%rip), %xmm3
    00000c1b: 	movq	DATAat0x1a360(%rip), %xmm4
    00000c23: 	movsd	DATAat0x1a338(%rip), %xmm5
    00000c2b: 	movss	%xmm1, 0x8(%rsp)
    00000c31: 	movss	%xmm2, 0x10(%rsp)
    00000c37: 	movsd	%xmm3, 0x18(%rsp)
    00000c3d: 	movaps	%xmm4, 0x20(%rsp)
    00000c42: 	movsd	%xmm5, 0x30(%rsp)
    00000c48: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1924:
    00000c50: 	movq	%rbp, %rax
    00000c53: 	fldz
    00000c55: 	nopl	(%rax) # Size: 3
.Ltmp1920:
    00000c58: 	fldt	(%rax)
    00000c5a: 	addq	$0x10, %rax
    00000c5e: 	faddp	%st, %st(1)
    00000c60: 	cmpq	%rax, %rbx
    00000c63: 	jne	.Ltmp1920 # Offset: 3171
    00000c65: 	flds	0x10(%rsp)
    00000c69: 	fmull	init_value(%rip)
    00000c6f: 	fsubr	%st(1), %st
    00000c71: 	fstpl	0x38(%rsp)
    00000c75: 	fld	%st(0)
    00000c77: 	fabs
    00000c79: 	fldl	0x18(%rsp)
    00000c7d: 	fxch	%st(1)
    00000c7f: 	fcompi	%st(1), %st
    00000c81: 	fstp	%st(0)
    00000c83: 	jbe	.Ltmp1921 # Offset: 3203
    00000c85: 	fdivrl	0x38(%rsp)
    00000c89: 	fstpl	0x38(%rsp)
    00000c8d: 	jmp	.Ltmp1922 # Offset: 3213
    00000c8f: 	nop # Size: 1
.Ltmp1921:
    00000c90: 	fstp	%st(0)
.Ltmp1922:
    00000c92: 	movsd	0x38(%rsp), %xmm0
    00000c98: 	movsd	0x30(%rsp), %xmm2
    00000c9e: 	andpd	0x20(%rsp), %xmm0
    00000ca4: 	comisd	%xmm0, %xmm2
    00000ca8: 	jbe	.Ltmp1923 # Offset: 3240
.Ltmp2040:
    00000cae: 	addl	$0x1, %r13d
    00000cb2: 	cmpl	%edx, %r13d
    00000cb5: 	jl	.Ltmp1924 # Offset: 3253
.Ltmp1919:
    00000cb7: 	movq	%r12, %rdi
    00000cba: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3258
    00000cbf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cc6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ccd: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cd4: 	je	.Ltmp1925 # Offset: 3284
.Ltmp2059:
    00000cda: 	movq	-0x20(%rax), %r13
    00000cde: 	callq	clock@PLT # Offset: 3294
    00000ce3: 	pxor	%xmm0, %xmm0
    00000ce7: 	movq	%rax, end_time(%rip)
    00000cee: 	movq	%r13, %rdi
    00000cf1: 	subq	start_time(%rip), %rax
    00000cf8: 	cvtsi2sd	%rax, %xmm0
    00000cfd: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d05: 	callq	_Z13record_resultdPKc # Offset: 3333
    00000d0a: 	movq	0x90(%rsp), %rdi
    00000d12: 	cmpq	%r14, %rdi
    00000d15: 	je	.Ltmp1926 # Offset: 3349
    00000d17: 	movq	0xa0(%rsp), %rax
    00000d1f: 	leaq	0x1(%rax), %rsi
    00000d23: 	callq	_ZdlPvm@PLT # Offset: 3363
.Ltmp1926:
    00000d28: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000d2f: 	movq	%r15, %rsi
    00000d32: 	movq	%r12, %rdi
    00000d35: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3381
    00000d3a: 	callq	clock@PLT # Offset: 3386
    00000d3f: 	movl	iterations(%rip), %edx
    00000d45: 	movq	%rax, start_time(%rip)
    00000d4c: 	testl	%edx, %edx
    00000d4e: 	jle	.Ltmp1927 # Offset: 3406
    00000d54: 	movss	DATAat0x1a350(%rip), %xmm7
    00000d5c: 	pxor	%xmm6, %xmm6
    00000d60: 	xorl	%r13d, %r13d
    00000d63: 	movsd	DATAat0x1a330(%rip), %xmm1
    00000d6b: 	movq	DATAat0x1a360(%rip), %xmm2
    00000d73: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000d7b: 	movss	%xmm6, 0x8(%rsp)
    00000d81: 	movss	%xmm7, 0x10(%rsp)
    00000d87: 	movsd	%xmm1, 0x18(%rsp)
    00000d8d: 	movaps	%xmm2, 0x20(%rsp)
    00000d92: 	movsd	%xmm3, 0x30(%rsp)
    00000d98: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1932:
    00000da0: 	movq	%rbp, %rax
    00000da3: 	fldz
    00000da5: 	nopl	(%rax) # Size: 3
.Ltmp1928:
    00000da8: 	fldt	(%rax)
    00000daa: 	addq	$0x10, %rax
    00000dae: 	faddp	%st, %st(1)
    00000db0: 	cmpq	%rax, %rbx
    00000db3: 	jne	.Ltmp1928 # Offset: 3507
    00000db5: 	flds	0x10(%rsp)
    00000db9: 	fmull	init_value(%rip)
    00000dbf: 	fsubr	%st(1), %st
    00000dc1: 	fstpl	0x38(%rsp)
    00000dc5: 	fld	%st(0)
    00000dc7: 	fabs
    00000dc9: 	fldl	0x18(%rsp)
    00000dcd: 	fxch	%st(1)
    00000dcf: 	fcompi	%st(1), %st
    00000dd1: 	fstp	%st(0)
    00000dd3: 	jbe	.Ltmp1929 # Offset: 3539
    00000dd5: 	fdivrl	0x38(%rsp)
    00000dd9: 	fstpl	0x38(%rsp)
    00000ddd: 	jmp	.Ltmp1930 # Offset: 3549
    00000ddf: 	nop # Size: 1
.Ltmp1929:
    00000de0: 	fstp	%st(0)
.Ltmp1930:
    00000de2: 	movsd	0x38(%rsp), %xmm0
    00000de8: 	movsd	0x30(%rsp), %xmm4
    00000dee: 	andpd	0x20(%rsp), %xmm0
    00000df4: 	comisd	%xmm0, %xmm4
    00000df8: 	jbe	.Ltmp1931 # Offset: 3576
.Ltmp2039:
    00000dfe: 	addl	$0x1, %r13d
    00000e02: 	cmpl	%edx, %r13d
    00000e05: 	jl	.Ltmp1932 # Offset: 3589
.Ltmp1927:
    00000e07: 	movq	%r12, %rdi
    00000e0a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3594
    00000e0f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000e16: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000e1d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000e24: 	je	.Ltmp1933 # Offset: 3620
.Ltmp2062:
    00000e2a: 	movq	-0x20(%rax), %r13
    00000e2e: 	callq	clock@PLT # Offset: 3630
    00000e33: 	pxor	%xmm0, %xmm0
    00000e37: 	movq	%rax, end_time(%rip)
    00000e3e: 	movq	%r13, %rdi
    00000e41: 	subq	start_time(%rip), %rax
    00000e48: 	cvtsi2sd	%rax, %xmm0
    00000e4d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000e55: 	callq	_Z13record_resultdPKc # Offset: 3669
    00000e5a: 	movq	0x90(%rsp), %rdi
    00000e62: 	cmpq	%r14, %rdi
    00000e65: 	je	.Ltmp1934 # Offset: 3685
    00000e67: 	movq	0xa0(%rsp), %rax
    00000e6f: 	leaq	0x1(%rax), %rsi
    00000e73: 	callq	_ZdlPvm@PLT # Offset: 3699
.Ltmp1934:
    00000e78: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000e7f: 	movq	%r15, %rsi
    00000e82: 	movq	%r12, %rdi
    00000e85: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3717
    00000e8a: 	callq	clock@PLT # Offset: 3722
    00000e8f: 	movl	iterations(%rip), %edx
    00000e95: 	movq	%rax, start_time(%rip)
    00000e9c: 	testl	%edx, %edx
    00000e9e: 	jle	.Ltmp1935 # Offset: 3742
    00000ea4: 	movss	DATAat0x1a350(%rip), %xmm5
    00000eac: 	pxor	%xmm4, %xmm4
    00000eb0: 	xorl	%r13d, %r13d
    00000eb3: 	movsd	DATAat0x1a330(%rip), %xmm6
    00000ebb: 	movq	DATAat0x1a360(%rip), %xmm7
    00000ec3: 	movsd	DATAat0x1a338(%rip), %xmm1
    00000ecb: 	movss	%xmm4, 0x8(%rsp)
    00000ed1: 	movss	%xmm5, 0x10(%rsp)
    00000ed7: 	movsd	%xmm6, 0x18(%rsp)
    00000edd: 	movaps	%xmm7, 0x20(%rsp)
    00000ee2: 	movsd	%xmm1, 0x30(%rsp)
    00000ee8: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1940:
    00000ef0: 	movq	%rbp, %rax
    00000ef3: 	fldz
    00000ef5: 	nopl	(%rax) # Size: 3
.Ltmp1936:
    00000ef8: 	fldt	(%rax)
    00000efa: 	addq	$0x10, %rax
    00000efe: 	faddp	%st, %st(1)
    00000f00: 	cmpq	%rax, %rbx
    00000f03: 	jne	.Ltmp1936 # Offset: 3843
    00000f05: 	flds	0x10(%rsp)
    00000f09: 	fmull	init_value(%rip)
    00000f0f: 	fsubr	%st(1), %st
    00000f11: 	fstpl	0x38(%rsp)
    00000f15: 	fld	%st(0)
    00000f17: 	fabs
    00000f19: 	fldl	0x18(%rsp)
    00000f1d: 	fxch	%st(1)
    00000f1f: 	fcompi	%st(1), %st
    00000f21: 	fstp	%st(0)
    00000f23: 	jbe	.Ltmp1937 # Offset: 3875
    00000f25: 	fdivrl	0x38(%rsp)
    00000f29: 	fstpl	0x38(%rsp)
    00000f2d: 	jmp	.Ltmp1938 # Offset: 3885
    00000f2f: 	nop # Size: 1
.Ltmp1937:
    00000f30: 	fstp	%st(0)
.Ltmp1938:
    00000f32: 	movsd	0x38(%rsp), %xmm0
    00000f38: 	movsd	0x30(%rsp), %xmm6
    00000f3e: 	andpd	0x20(%rsp), %xmm0
    00000f44: 	comisd	%xmm0, %xmm6
    00000f48: 	jbe	.Ltmp1939 # Offset: 3912
.Ltmp2038:
    00000f4e: 	addl	$0x1, %r13d
    00000f52: 	cmpl	%edx, %r13d
    00000f55: 	jl	.Ltmp1940 # Offset: 3925
.Ltmp1935:
    00000f57: 	movq	%r12, %rdi
    00000f5a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3930
    00000f5f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000f66: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000f6d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000f74: 	je	.Ltmp1941 # Offset: 3956
.Ltmp2056:
    00000f7a: 	movq	-0x20(%rax), %r13
    00000f7e: 	callq	clock@PLT # Offset: 3966
    00000f83: 	pxor	%xmm0, %xmm0
    00000f87: 	movq	%rax, end_time(%rip)
    00000f8e: 	movq	%r13, %rdi
    00000f91: 	subq	start_time(%rip), %rax
    00000f98: 	cvtsi2sd	%rax, %xmm0
    00000f9d: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000fa5: 	callq	_Z13record_resultdPKc # Offset: 4005
    00000faa: 	movq	0x90(%rsp), %rdi
    00000fb2: 	cmpq	%r14, %rdi
    00000fb5: 	je	.Ltmp1942 # Offset: 4021
    00000fb7: 	movq	0xa0(%rsp), %rax
    00000fbf: 	leaq	0x1(%rax), %rsi
    00000fc3: 	callq	_ZdlPvm@PLT # Offset: 4035
.Ltmp1942:
    00000fc8: 	leaq	DATAat0x1a26b(%rip), %rdx
    00000fcf: 	movq	%r15, %rsi
    00000fd2: 	movq	%r12, %rdi
    00000fd5: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4053
    00000fda: 	callq	clock@PLT # Offset: 4058
    00000fdf: 	movl	iterations(%rip), %edx
    00000fe5: 	movq	%rax, start_time(%rip)
    00000fec: 	testl	%edx, %edx
    00000fee: 	jle	.Ltmp1943 # Offset: 4078
    00000ff4: 	movss	DATAat0x1a350(%rip), %xmm3
    00000ffc: 	pxor	%xmm2, %xmm2
    00001000: 	xorl	%r13d, %r13d
    00001003: 	movsd	DATAat0x1a330(%rip), %xmm4
    0000100b: 	movq	DATAat0x1a360(%rip), %xmm5
    00001013: 	movsd	DATAat0x1a338(%rip), %xmm6
    0000101b: 	movss	%xmm2, 0x8(%rsp)
    00001021: 	movss	%xmm3, 0x10(%rsp)
    00001027: 	movsd	%xmm4, 0x18(%rsp)
    0000102d: 	movaps	%xmm5, 0x20(%rsp)
    00001032: 	movsd	%xmm6, 0x30(%rsp)
    00001038: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1948:
    00001040: 	movq	%rbp, %rax
    00001043: 	fldz
    00001045: 	nopl	(%rax) # Size: 3
.Ltmp1944:
    00001048: 	fldt	(%rax)
    0000104a: 	addq	$0x10, %rax
    0000104e: 	faddp	%st, %st(1)
    00001050: 	cmpq	%rax, %rbx
    00001053: 	jne	.Ltmp1944 # Offset: 4179
    00001055: 	flds	0x10(%rsp)
    00001059: 	fmull	init_value(%rip)
    0000105f: 	fsubr	%st(1), %st
    00001061: 	fstpl	0x38(%rsp)
    00001065: 	fld	%st(0)
    00001067: 	fabs
    00001069: 	fldl	0x18(%rsp)
    0000106d: 	fxch	%st(1)
    0000106f: 	fcompi	%st(1), %st
    00001071: 	fstp	%st(0)
    00001073: 	jbe	.Ltmp1945 # Offset: 4211
    00001075: 	fdivrl	0x38(%rsp)
    00001079: 	fstpl	0x38(%rsp)
    0000107d: 	jmp	.Ltmp1946 # Offset: 4221
    0000107f: 	nop # Size: 1
.Ltmp1945:
    00001080: 	fstp	%st(0)
.Ltmp1946:
    00001082: 	movsd	0x38(%rsp), %xmm0
    00001088: 	movsd	0x30(%rsp), %xmm1
    0000108e: 	andpd	0x20(%rsp), %xmm0
    00001094: 	comisd	%xmm0, %xmm1
    00001098: 	jbe	.Ltmp1947 # Offset: 4248
.Ltmp2035:
    0000109e: 	addl	$0x1, %r13d
    000010a2: 	cmpl	%edx, %r13d
    000010a5: 	jl	.Ltmp1948 # Offset: 4261
.Ltmp1943:
    000010a7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000010ae: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000010b5: 	subq	$0x20, %rax
    000010b9: 	cmpq	%rax, %r13
    000010bc: 	je	.Ltmp1949 # Offset: 4284
    000010c2: 	leaq	0x10(%r13), %rdi
    000010c6: 	movq	0x98(%rsp), %rsi
    000010ce: 	movq	%rdi, (%r13)
    000010d2: 	movq	0x90(%rsp), %rcx
    000010da: 	movq	%rsi, 0x8(%rsp)
    000010df: 	movq	%rcx, %rax
    000010e2: 	movq	%rcx, 0x10(%rsp)
    000010e7: 	addq	%rsi, %rax
    000010ea: 	je	.Ltmp1950 # Offset: 4330
    000010ec: 	testq	%rcx, %rcx
    000010ef: 	je	.Ltmp1951 # Offset: 4335
.Ltmp1950:
    000010f5: 	movq	0x8(%rsp), %rax
    000010fa: 	movq	%rax, 0x50(%rsp)
    000010ff: 	cmpq	$0xf, %rax
    00001103: 	ja	.Ltmp1952 # Offset: 4355
    00001109: 	cmpq	$0x1, 0x8(%rsp)
    0000110f: 	jne	.Ltmp1953 # Offset: 4367
    00001115: 	movq	0x10(%rsp), %rax
    0000111a: 	movzbl	(%rax), %eax
    0000111d: 	movb	%al, 0x10(%r13)
.Ltmp2074:
    00001121: 	movq	0x8(%rsp), %rax
    00001126: 	movq	%rax, 0x8(%r13)
    0000112a: 	movb	$0x0, (%rdi,%rax)
    0000112e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001135: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000113c: 	addq	$0x20, %rax
    00001140: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001147: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000114e: 	je	.Ltmp1954 # Offset: 4430
.Ltmp2054:
    00001154: 	movq	-0x20(%rax), %r13
    00001158: 	callq	clock@PLT # Offset: 4440
    0000115d: 	pxor	%xmm0, %xmm0
    00001161: 	movq	%rax, end_time(%rip)
    00001168: 	movq	%r13, %rdi
    0000116b: 	subq	start_time(%rip), %rax
    00001172: 	cvtsi2sd	%rax, %xmm0
    00001177: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000117f: 	callq	_Z13record_resultdPKc # Offset: 4479
    00001184: 	movq	0x90(%rsp), %rdi
    0000118c: 	cmpq	%r14, %rdi
    0000118f: 	je	.Ltmp1955 # Offset: 4495
    00001191: 	movq	0xa0(%rsp), %rax
    00001199: 	leaq	0x1(%rax), %rsi
    0000119d: 	callq	_ZdlPvm@PLT # Offset: 4509
.Ltmp1955:
    000011a2: 	leaq	DATAat0x1a27b(%rip), %rdx
    000011a9: 	movq	%r15, %rsi
    000011ac: 	movq	%r12, %rdi
    000011af: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4527
    000011b4: 	callq	clock@PLT # Offset: 4532
    000011b9: 	movl	iterations(%rip), %edx
    000011bf: 	movq	%rax, start_time(%rip)
    000011c6: 	testl	%edx, %edx
    000011c8: 	jle	.Ltmp1956 # Offset: 4552
    000011ce: 	movss	DATAat0x1a350(%rip), %xmm1
    000011d6: 	pxor	%xmm7, %xmm7
    000011da: 	xorl	%r13d, %r13d
    000011dd: 	movsd	DATAat0x1a330(%rip), %xmm2
    000011e5: 	movq	DATAat0x1a360(%rip), %xmm3
    000011ed: 	movsd	DATAat0x1a338(%rip), %xmm4
    000011f5: 	movss	%xmm7, 0x8(%rsp)
    000011fb: 	movss	%xmm1, 0x10(%rsp)
    00001201: 	movsd	%xmm2, 0x18(%rsp)
    00001207: 	movaps	%xmm3, 0x20(%rsp)
    0000120c: 	movsd	%xmm4, 0x30(%rsp)
    00001212: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1961:
    00001218: 	movq	%rbp, %rax
    0000121b: 	fldz
    0000121d: 	nopl	(%rax) # Size: 3
.Ltmp1957:
    00001220: 	fldt	(%rax)
    00001222: 	addq	$0x10, %rax
    00001226: 	faddp	%st, %st(1)
    00001228: 	cmpq	%rax, %rbx
    0000122b: 	jne	.Ltmp1957 # Offset: 4651
    0000122d: 	flds	0x10(%rsp)
    00001231: 	fmull	init_value(%rip)
    00001237: 	fsubr	%st(1), %st
    00001239: 	fstpl	0x38(%rsp)
    0000123d: 	fld	%st(0)
    0000123f: 	fabs
    00001241: 	fldl	0x18(%rsp)
    00001245: 	fxch	%st(1)
    00001247: 	fcompi	%st(1), %st
    00001249: 	fstp	%st(0)
    0000124b: 	jbe	.Ltmp1958 # Offset: 4683
    0000124d: 	fdivrl	0x38(%rsp)
    00001251: 	fstpl	0x38(%rsp)
    00001255: 	jmp	.Ltmp1959 # Offset: 4693
    00001257: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1958:
    00001260: 	fstp	%st(0)
.Ltmp1959:
    00001262: 	movsd	0x38(%rsp), %xmm0
    00001268: 	movsd	0x30(%rsp), %xmm3
    0000126e: 	andpd	0x20(%rsp), %xmm0
    00001274: 	comisd	%xmm0, %xmm3
    00001278: 	jbe	.Ltmp1960 # Offset: 4728
.Ltmp2034:
    0000127e: 	addl	$0x1, %r13d
    00001282: 	cmpl	%edx, %r13d
    00001285: 	jl	.Ltmp1961 # Offset: 4741
.Ltmp1956:
    00001287: 	movq	%r12, %rdi
    0000128a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4746
    0000128f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001296: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000129d: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012a4: 	je	.Ltmp1962 # Offset: 4772
.Ltmp2064:
    000012aa: 	movq	-0x20(%rax), %r13
    000012ae: 	callq	clock@PLT # Offset: 4782
    000012b3: 	pxor	%xmm0, %xmm0
    000012b7: 	movq	%rax, end_time(%rip)
    000012be: 	movq	%r13, %rdi
    000012c1: 	subq	start_time(%rip), %rax
    000012c8: 	cvtsi2sd	%rax, %xmm0
    000012cd: 	divsd	DATAat0x1a318(%rip), %xmm0
    000012d5: 	callq	_Z13record_resultdPKc # Offset: 4821
    000012da: 	movq	0x90(%rsp), %rdi
    000012e2: 	cmpq	%r14, %rdi
    000012e5: 	je	.Ltmp1963 # Offset: 4837
    000012e7: 	movq	0xa0(%rsp), %rax
    000012ef: 	leaq	0x1(%rax), %rsi
    000012f3: 	callq	_ZdlPvm@PLT # Offset: 4851
.Ltmp1963:
    000012f8: 	leaq	DATAat0x1a28b(%rip), %rdx
    000012ff: 	movq	%r15, %rsi
    00001302: 	movq	%r12, %rdi
    00001305: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4869
    0000130a: 	callq	clock@PLT # Offset: 4874
    0000130f: 	movl	iterations(%rip), %edx
    00001315: 	movq	%rax, start_time(%rip)
    0000131c: 	testl	%edx, %edx
    0000131e: 	jle	.Ltmp1964 # Offset: 4894
    00001324: 	movss	DATAat0x1a350(%rip), %xmm6
    0000132c: 	pxor	%xmm5, %xmm5
    00001330: 	xorl	%r13d, %r13d
    00001333: 	movsd	DATAat0x1a330(%rip), %xmm7
    0000133b: 	movq	DATAat0x1a360(%rip), %xmm1
    00001343: 	movsd	DATAat0x1a338(%rip), %xmm2
    0000134b: 	movss	%xmm5, 0x8(%rsp)
    00001351: 	movss	%xmm6, 0x10(%rsp)
    00001357: 	movsd	%xmm7, 0x18(%rsp)
    0000135d: 	movaps	%xmm1, 0x20(%rsp)
    00001362: 	movsd	%xmm2, 0x30(%rsp)
    00001368: 	nopl	(%rax,%rax) # Size: 8
.Ltmp1969:
    00001370: 	movq	%rbp, %rax
    00001373: 	fldz
    00001375: 	nopl	(%rax) # Size: 3
.Ltmp1965:
    00001378: 	fldt	(%rax)
    0000137a: 	addq	$0x10, %rax
    0000137e: 	faddp	%st, %st(1)
    00001380: 	cmpq	%rax, %rbx
    00001383: 	jne	.Ltmp1965 # Offset: 4995
    00001385: 	flds	0x10(%rsp)
    00001389: 	fmull	init_value(%rip)
    0000138f: 	fsubr	%st(1), %st
    00001391: 	fstpl	0x38(%rsp)
    00001395: 	fld	%st(0)
    00001397: 	fabs
    00001399: 	fldl	0x18(%rsp)
    0000139d: 	fxch	%st(1)
    0000139f: 	fcompi	%st(1), %st
    000013a1: 	fstp	%st(0)
    000013a3: 	jbe	.Ltmp1966 # Offset: 5027
    000013a5: 	fdivrl	0x38(%rsp)
    000013a9: 	fstpl	0x38(%rsp)
    000013ad: 	jmp	.Ltmp1967 # Offset: 5037
    000013af: 	nop # Size: 1
.Ltmp1966:
    000013b0: 	fstp	%st(0)
.Ltmp1967:
    000013b2: 	movsd	0x38(%rsp), %xmm0
    000013b8: 	movsd	0x30(%rsp), %xmm5
    000013be: 	andpd	0x20(%rsp), %xmm0
    000013c4: 	comisd	%xmm0, %xmm5
    000013c8: 	jbe	.Ltmp1968 # Offset: 5064
.Ltmp2033:
    000013ce: 	addl	$0x1, %r13d
    000013d2: 	cmpl	%edx, %r13d
    000013d5: 	jl	.Ltmp1969 # Offset: 5077
.Ltmp1964:
    000013d7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013de: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000013e5: 	subq	$0x20, %rax
    000013e9: 	cmpq	%rax, %r13
    000013ec: 	je	.Ltmp1970 # Offset: 5100
    000013f2: 	leaq	0x10(%r13), %rdi
    000013f6: 	movq	0x98(%rsp), %rsi
    000013fe: 	movq	%rdi, (%r13)
    00001402: 	movq	0x90(%rsp), %rcx
    0000140a: 	movq	%rsi, 0x8(%rsp)
    0000140f: 	movq	%rcx, %rax
    00001412: 	movq	%rcx, 0x10(%rsp)
    00001417: 	addq	%rsi, %rax
    0000141a: 	je	.Ltmp1971 # Offset: 5146
    0000141c: 	testq	%rcx, %rcx
    0000141f: 	je	.Ltmp1972 # Offset: 5151
.Ltmp1971:
    00001425: 	movq	0x8(%rsp), %rax
    0000142a: 	movq	%rax, 0x50(%rsp)
    0000142f: 	cmpq	$0xf, %rax
    00001433: 	ja	.Ltmp1973 # Offset: 5171
    00001439: 	cmpq	$0x1, 0x8(%rsp)
    0000143f: 	jne	.Ltmp1974 # Offset: 5183
    00001445: 	movq	0x10(%rsp), %rax
    0000144a: 	movzbl	(%rax), %eax
    0000144d: 	movb	%al, 0x10(%r13)
.Ltmp2077:
    00001451: 	movq	0x8(%rsp), %rax
    00001456: 	movq	%rax, 0x8(%r13)
    0000145a: 	movb	$0x0, (%rdi,%rax)
    0000145e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001465: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000146c: 	addq	$0x20, %rax
    00001470: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001477: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000147e: 	je	.Ltmp1975 # Offset: 5246
.Ltmp2063:
    00001484: 	movq	-0x20(%rax), %r13
    00001488: 	callq	clock@PLT # Offset: 5256
    0000148d: 	pxor	%xmm0, %xmm0
    00001491: 	movq	%rax, end_time(%rip)
    00001498: 	movq	%r13, %rdi
    0000149b: 	subq	start_time(%rip), %rax
    000014a2: 	cvtsi2sd	%rax, %xmm0
    000014a7: 	divsd	DATAat0x1a318(%rip), %xmm0
    000014af: 	callq	_Z13record_resultdPKc # Offset: 5295
    000014b4: 	movq	0x90(%rsp), %rdi
    000014bc: 	cmpq	%r14, %rdi
    000014bf: 	je	.Ltmp1976 # Offset: 5311
    000014c1: 	movq	0xa0(%rsp), %rax
    000014c9: 	leaq	0x1(%rax), %rsi
    000014cd: 	callq	_ZdlPvm@PLT # Offset: 5325
.Ltmp1976:
    000014d2: 	leaq	DATAat0x1a29b(%rip), %rdx
    000014d9: 	movq	%r15, %rsi
    000014dc: 	movq	%r12, %rdi
    000014df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5343
    000014e4: 	callq	clock@PLT # Offset: 5348
    000014e9: 	movl	iterations(%rip), %edx
    000014ef: 	movq	%rax, start_time(%rip)
    000014f6: 	testl	%edx, %edx
    000014f8: 	jle	.Ltmp1977 # Offset: 5368
    000014fe: 	movss	DATAat0x1a350(%rip), %xmm4
    00001506: 	pxor	%xmm3, %xmm3
    0000150a: 	xorl	%r13d, %r13d
    0000150d: 	movsd	DATAat0x1a330(%rip), %xmm5
    00001515: 	movq	DATAat0x1a360(%rip), %xmm6
    0000151d: 	movsd	DATAat0x1a338(%rip), %xmm7
    00001525: 	movss	%xmm3, 0x8(%rsp)
    0000152b: 	movss	%xmm4, 0x10(%rsp)
    00001531: 	movsd	%xmm5, 0x18(%rsp)
    00001537: 	movaps	%xmm6, 0x20(%rsp)
    0000153c: 	movsd	%xmm7, 0x30(%rsp)
    00001542: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1982:
    00001548: 	movq	%rbp, %rax
    0000154b: 	fldz
    0000154d: 	nopl	(%rax) # Size: 3
.Ltmp1978:
    00001550: 	fldt	(%rax)
    00001552: 	addq	$0x10, %rax
    00001556: 	faddp	%st, %st(1)
    00001558: 	cmpq	%rax, %rbx
    0000155b: 	jne	.Ltmp1978 # Offset: 5467
    0000155d: 	flds	0x10(%rsp)
    00001561: 	fmull	init_value(%rip)
    00001567: 	fsubr	%st(1), %st
    00001569: 	fstpl	0x38(%rsp)
    0000156d: 	fld	%st(0)
    0000156f: 	fabs
    00001571: 	fldl	0x18(%rsp)
    00001575: 	fxch	%st(1)
    00001577: 	fcompi	%st(1), %st
    00001579: 	fstp	%st(0)
    0000157b: 	jbe	.Ltmp1979 # Offset: 5499
    0000157d: 	fdivrl	0x38(%rsp)
    00001581: 	fstpl	0x38(%rsp)
    00001585: 	jmp	.Ltmp1980 # Offset: 5509
    00001587: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1979:
    00001590: 	fstp	%st(0)
.Ltmp1980:
    00001592: 	movsd	0x38(%rsp), %xmm0
    00001598: 	movsd	0x30(%rsp), %xmm7
    0000159e: 	andpd	0x20(%rsp), %xmm0
    000015a4: 	comisd	%xmm0, %xmm7
    000015a8: 	jbe	.Ltmp1981 # Offset: 5544
.Ltmp2032:
    000015ae: 	addl	$0x1, %r13d
    000015b2: 	cmpl	%edx, %r13d
    000015b5: 	jl	.Ltmp1982 # Offset: 5557
.Ltmp1977:
    000015b7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015be: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000015c5: 	subq	$0x20, %rax
    000015c9: 	cmpq	%rax, %r13
    000015cc: 	je	.Ltmp1983 # Offset: 5580
    000015d2: 	leaq	0x10(%r13), %rdi
    000015d6: 	movq	0x98(%rsp), %rsi
    000015de: 	movq	%rdi, (%r13)
    000015e2: 	movq	0x90(%rsp), %rcx
    000015ea: 	movq	%rsi, 0x8(%rsp)
    000015ef: 	movq	%rcx, %rax
    000015f2: 	movq	%rcx, 0x10(%rsp)
    000015f7: 	addq	%rsi, %rax
    000015fa: 	je	.Ltmp1984 # Offset: 5626
    000015fc: 	testq	%rcx, %rcx
    000015ff: 	je	.Ltmp1985 # Offset: 5631
.Ltmp1984:
    00001605: 	movq	0x8(%rsp), %rax
    0000160a: 	movq	%rax, 0x50(%rsp)
    0000160f: 	cmpq	$0xf, %rax
    00001613: 	ja	.Ltmp1986 # Offset: 5651
    00001619: 	cmpq	$0x1, 0x8(%rsp)
    0000161f: 	jne	.Ltmp1987 # Offset: 5663
    00001625: 	movq	0x10(%rsp), %rax
    0000162a: 	movzbl	(%rax), %eax
    0000162d: 	movb	%al, 0x10(%r13)
.Ltmp2068:
    00001631: 	movq	0x8(%rsp), %rax
    00001636: 	movq	%rax, 0x8(%r13)
    0000163a: 	movb	$0x0, (%rdi,%rax)
    0000163e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001645: 	addq	$0x20, %rax
    00001649: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2066:
    00001650: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001657: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000165e: 	je	.Ltmp1988 # Offset: 5726
.Ltmp2047:
    00001664: 	movq	-0x20(%rax), %r13
    00001668: 	callq	clock@PLT # Offset: 5736
    0000166d: 	pxor	%xmm0, %xmm0
    00001671: 	movq	%rax, end_time(%rip)
    00001678: 	movq	%r13, %rdi
    0000167b: 	subq	start_time(%rip), %rax
    00001682: 	cvtsi2sd	%rax, %xmm0
    00001687: 	divsd	DATAat0x1a318(%rip), %xmm0
    0000168f: 	callq	_Z13record_resultdPKc # Offset: 5775
    00001694: 	movq	0x90(%rsp), %rdi
    0000169c: 	cmpq	%r14, %rdi
    0000169f: 	je	.Ltmp1989 # Offset: 5791
    000016a1: 	movq	0xa0(%rsp), %rax
    000016a9: 	leaq	0x1(%rax), %rsi
    000016ad: 	callq	_ZdlPvm@PLT # Offset: 5805
.Ltmp1989:
    000016b2: 	leaq	DATAat0x1a2af(%rip), %rdx
    000016b9: 	movq	%r15, %rsi
    000016bc: 	movq	%r12, %rdi
    000016bf: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5823
    000016c4: 	callq	clock@PLT # Offset: 5828
    000016c9: 	movl	iterations(%rip), %edx
    000016cf: 	movq	%rax, start_time(%rip)
    000016d6: 	testl	%edx, %edx
    000016d8: 	jle	.Ltmp1990 # Offset: 5848
    000016de: 	movss	DATAat0x1a350(%rip), %xmm2
    000016e6: 	pxor	%xmm1, %xmm1
    000016ea: 	xorl	%r13d, %r13d
    000016ed: 	movsd	DATAat0x1a330(%rip), %xmm3
    000016f5: 	movq	DATAat0x1a360(%rip), %xmm4
    000016fd: 	movsd	DATAat0x1a338(%rip), %xmm5
    00001705: 	movss	%xmm1, 0x8(%rsp)
    0000170b: 	movss	%xmm2, 0x10(%rsp)
    00001711: 	movsd	%xmm3, 0x18(%rsp)
    00001717: 	movaps	%xmm4, 0x20(%rsp)
    0000171c: 	movsd	%xmm5, 0x30(%rsp)
    00001722: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1995:
    00001728: 	movq	%rbp, %rax
    0000172b: 	fldz
    0000172d: 	nopl	(%rax) # Size: 3
.Ltmp1991:
    00001730: 	fldt	(%rax)
    00001732: 	addq	$0x10, %rax
    00001736: 	faddp	%st, %st(1)
    00001738: 	cmpq	%rax, %rbx
    0000173b: 	jne	.Ltmp1991 # Offset: 5947
    0000173d: 	flds	0x10(%rsp)
    00001741: 	fmull	init_value(%rip)
    00001747: 	fsubr	%st(1), %st
    00001749: 	fstpl	0x38(%rsp)
    0000174d: 	fld	%st(0)
    0000174f: 	fabs
    00001751: 	fldl	0x18(%rsp)
    00001755: 	fxch	%st(1)
    00001757: 	fcompi	%st(1), %st
    00001759: 	fstp	%st(0)
    0000175b: 	jbe	.Ltmp1992 # Offset: 5979
    0000175d: 	fdivrl	0x38(%rsp)
    00001761: 	fstpl	0x38(%rsp)
    00001765: 	jmp	.Ltmp1993 # Offset: 5989
    00001767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp1992:
    00001770: 	fstp	%st(0)
.Ltmp1993:
    00001772: 	movsd	0x38(%rsp), %xmm0
    00001778: 	movsd	0x30(%rsp), %xmm2
    0000177e: 	andpd	0x20(%rsp), %xmm0
    00001784: 	comisd	%xmm0, %xmm2
    00001788: 	jbe	.Ltmp1994 # Offset: 6024
.Ltmp2042:
    0000178e: 	addl	$0x1, %r13d
    00001792: 	cmpl	%edx, %r13d
    00001795: 	jl	.Ltmp1995 # Offset: 6037
.Ltmp1990:
    00001797: 	movq	%r12, %rdi
    0000179a: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6042
    0000179f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017a6: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017b4: 	je	.Ltmp1996 # Offset: 6068
.Ltmp2046:
    000017ba: 	movq	-0x20(%rax), %r13
    000017be: 	callq	clock@PLT # Offset: 6078
    000017c3: 	pxor	%xmm0, %xmm0
    000017c7: 	movq	%rax, end_time(%rip)
    000017ce: 	movq	%r13, %rdi
    000017d1: 	subq	start_time(%rip), %rax
    000017d8: 	cvtsi2sd	%rax, %xmm0
    000017dd: 	divsd	DATAat0x1a318(%rip), %xmm0
    000017e5: 	callq	_Z13record_resultdPKc # Offset: 6117
    000017ea: 	movq	0x90(%rsp), %rdi
    000017f2: 	cmpq	%r14, %rdi
    000017f5: 	je	.Ltmp1997 # Offset: 6133
    000017f7: 	movq	0xa0(%rsp), %rax
    000017ff: 	leaq	0x1(%rax), %rsi
    00001803: 	callq	_ZdlPvm@PLT # Offset: 6147
.Ltmp1997:
    00001808: 	leaq	DATAat0x1a2c4(%rip), %rdx
    0000180f: 	movq	%r15, %rsi
    00001812: 	movq	%r12, %rdi
    00001815: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6165
    0000181a: 	callq	clock@PLT # Offset: 6170
    0000181f: 	movl	iterations(%rip), %edx
    00001825: 	movq	%rax, start_time(%rip)
    0000182c: 	testl	%edx, %edx
    0000182e: 	jle	.Ltmp1998 # Offset: 6190
    00001834: 	movss	DATAat0x1a350(%rip), %xmm7
    0000183c: 	pxor	%xmm6, %xmm6
    00001840: 	xorl	%r13d, %r13d
    00001843: 	movsd	DATAat0x1a330(%rip), %xmm1
    0000184b: 	movq	DATAat0x1a360(%rip), %xmm2
    00001853: 	movsd	DATAat0x1a338(%rip), %xmm3
    0000185b: 	movss	%xmm6, 0x8(%rsp)
    00001861: 	movss	%xmm7, 0x10(%rsp)
    00001867: 	movsd	%xmm1, 0x18(%rsp)
    0000186d: 	movaps	%xmm2, 0x20(%rsp)
    00001872: 	movsd	%xmm3, 0x30(%rsp)
    00001878: 	nopl	(%rax,%rax) # Size: 8
.Ltmp2003:
    00001880: 	movq	%rbp, %rax
    00001883: 	fldz
    00001885: 	nopl	(%rax) # Size: 3
.Ltmp1999:
    00001888: 	fldt	(%rax)
    0000188a: 	addq	$0x10, %rax
    0000188e: 	faddp	%st, %st(1)
    00001890: 	cmpq	%rax, %rbx
    00001893: 	jne	.Ltmp1999 # Offset: 6291
    00001895: 	flds	0x10(%rsp)
    00001899: 	fmull	init_value(%rip)
    0000189f: 	fsubr	%st(1), %st
    000018a1: 	fstpl	0x38(%rsp)
    000018a5: 	fld	%st(0)
    000018a7: 	fabs
    000018a9: 	fldl	0x18(%rsp)
    000018ad: 	fxch	%st(1)
    000018af: 	fcompi	%st(1), %st
    000018b1: 	fstp	%st(0)
    000018b3: 	jbe	.Ltmp2000 # Offset: 6323
    000018b5: 	fdivrl	0x38(%rsp)
    000018b9: 	fstpl	0x38(%rsp)
    000018bd: 	jmp	.Ltmp2001 # Offset: 6333
    000018bf: 	nop # Size: 1
.Ltmp2000:
    000018c0: 	fstp	%st(0)
.Ltmp2001:
    000018c2: 	movsd	0x38(%rsp), %xmm0
    000018c8: 	movsd	0x30(%rsp), %xmm4
    000018ce: 	andpd	0x20(%rsp), %xmm0
    000018d4: 	comisd	%xmm0, %xmm4
    000018d8: 	jbe	.Ltmp2002 # Offset: 6360
.Ltmp2041:
    000018de: 	addl	$0x1, %r13d
    000018e2: 	cmpl	%edx, %r13d
    000018e5: 	jl	.Ltmp2003 # Offset: 6373
.Ltmp1998:
    000018e7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000018ee: 	movq	"_ZL7gLabels/1"+48(%rip), %r13
    000018f5: 	subq	$0x20, %rax
    000018f9: 	cmpq	%rax, %r13
    000018fc: 	je	.Ltmp2004 # Offset: 6396
    00001902: 	leaq	0x10(%r13), %rdi
    00001906: 	movq	0x98(%rsp), %rsi
    0000190e: 	movq	%rdi, (%r13)
    00001912: 	movq	0x90(%rsp), %rcx
    0000191a: 	movq	%rsi, 0x8(%rsp)
    0000191f: 	movq	%rcx, %rax
    00001922: 	movq	%rcx, 0x10(%rsp)
    00001927: 	addq	%rsi, %rax
    0000192a: 	je	.Ltmp2005 # Offset: 6442
    0000192c: 	testq	%rcx, %rcx
    0000192f: 	je	.Ltmp2006 # Offset: 6447
.Ltmp2005:
    00001935: 	movq	0x8(%rsp), %rax
    0000193a: 	movq	%rax, 0x50(%rsp)
    0000193f: 	cmpq	$0xf, %rax
    00001943: 	ja	.Ltmp2007 # Offset: 6467
    00001949: 	cmpq	$0x1, 0x8(%rsp)
    0000194f: 	jne	.Ltmp2008 # Offset: 6479
    00001955: 	movq	0x10(%rsp), %rax
    0000195a: 	movzbl	(%rax), %eax
    0000195d: 	movb	%al, 0x10(%r13)
.Ltmp2072:
    00001961: 	movq	0x8(%rsp), %rax
    00001966: 	movq	%rax, 0x8(%r13)
    0000196a: 	movb	$0x0, (%rdi,%rax)
    0000196e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001975: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000197c: 	addq	$0x20, %rax
    00001980: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001987: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000198e: 	je	.Ltmp2009 # Offset: 6542
.Ltmp2045:
    00001994: 	movq	-0x20(%rax), %r13
    00001998: 	callq	clock@PLT # Offset: 6552
    0000199d: 	pxor	%xmm0, %xmm0
    000019a1: 	movq	%rax, end_time(%rip)
    000019a8: 	movq	%r13, %rdi
    000019ab: 	subq	start_time(%rip), %rax
    000019b2: 	cvtsi2sd	%rax, %xmm0
    000019b7: 	divsd	DATAat0x1a318(%rip), %xmm0
    000019bf: 	callq	_Z13record_resultdPKc # Offset: 6591
    000019c4: 	movq	0x90(%rsp), %rdi
    000019cc: 	cmpq	%r14, %rdi
    000019cf: 	je	.Ltmp2010 # Offset: 6607
    000019d1: 	movq	0xa0(%rsp), %rax
    000019d9: 	leaq	0x1(%rax), %rsi
    000019dd: 	callq	_ZdlPvm@PLT # Offset: 6621
.Ltmp2010:
    000019e2: 	leaq	DATAat0x1a2d9(%rip), %rdx
    000019e9: 	movq	%r15, %rsi
    000019ec: 	movq	%r12, %rdi
    000019ef: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6639
    000019f4: 	callq	clock@PLT # Offset: 6644
    000019f9: 	movl	iterations(%rip), %edx
    000019ff: 	movq	%rax, start_time(%rip)
    00001a06: 	testl	%edx, %edx
    00001a08: 	jle	.Ltmp2011 # Offset: 6664
    00001a0e: 	movss	DATAat0x1a350(%rip), %xmm5
    00001a16: 	pxor	%xmm4, %xmm4
    00001a1a: 	xorl	%r13d, %r13d
    00001a1d: 	movsd	DATAat0x1a330(%rip), %xmm6
    00001a25: 	movq	DATAat0x1a360(%rip), %xmm7
    00001a2d: 	movsd	DATAat0x1a338(%rip), %xmm1
    00001a35: 	movss	%xmm4, 0x8(%rsp)
    00001a3b: 	movss	%xmm5, 0x10(%rsp)
    00001a41: 	movsd	%xmm6, 0x18(%rsp)
    00001a47: 	movaps	%xmm7, 0x20(%rsp)
    00001a4c: 	movsd	%xmm1, 0x30(%rsp)
    00001a52: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2016:
    00001a58: 	movq	%rbp, %rax
    00001a5b: 	fldz
    00001a5d: 	nopl	(%rax) # Size: 3
.Ltmp2012:
    00001a60: 	fldt	(%rax)
    00001a62: 	addq	$0x10, %rax
    00001a66: 	faddp	%st, %st(1)
    00001a68: 	cmpq	%rbx, %rax
    00001a6b: 	jne	.Ltmp2012 # Offset: 6763
    00001a6d: 	flds	0x10(%rsp)
    00001a71: 	fmull	init_value(%rip)
    00001a77: 	fsubr	%st(1), %st
    00001a79: 	fstpl	0x38(%rsp)
    00001a7d: 	fld	%st(0)
    00001a7f: 	fabs
    00001a81: 	fldl	0x18(%rsp)
    00001a85: 	fxch	%st(1)
    00001a87: 	fcompi	%st(1), %st
    00001a89: 	fstp	%st(0)
    00001a8b: 	jbe	.Ltmp2013 # Offset: 6795
    00001a8d: 	fdivrl	0x38(%rsp)
    00001a91: 	fstpl	0x38(%rsp)
    00001a95: 	jmp	.Ltmp2014 # Offset: 6805
    00001a97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2013:
    00001aa0: 	fstp	%st(0)
.Ltmp2014:
    00001aa2: 	movsd	0x38(%rsp), %xmm0
    00001aa8: 	movsd	0x30(%rsp), %xmm6
    00001aae: 	andpd	0x20(%rsp), %xmm0
    00001ab4: 	comisd	%xmm0, %xmm6
    00001ab8: 	jbe	.Ltmp2015 # Offset: 6840
.Ltmp2031:
    00001abe: 	addl	$0x1, %r13d
    00001ac2: 	cmpl	%edx, %r13d
    00001ac5: 	jl	.Ltmp2016 # Offset: 6853
.Ltmp2011:
    00001ac7: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001ace: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001ad5: 	subq	$0x20, %rax
    00001ad9: 	cmpq	%rax, %rbx
    00001adc: 	je	.Ltmp2017 # Offset: 6876
    00001ae2: 	leaq	0x10(%rbx), %rdi
    00001ae6: 	movq	0x98(%rsp), %r13
    00001aee: 	movq	%rdi, (%rbx)
    00001af1: 	movq	0x90(%rsp), %rbp
    00001af9: 	movq	%rbp, %rax
    00001afc: 	addq	%r13, %rax
    00001aff: 	je	.Ltmp2018 # Offset: 6911
    00001b01: 	testq	%rbp, %rbp
    00001b04: 	je	.Ltmp2019 # Offset: 6916
.Ltmp2018:
    00001b0a: 	movq	%r13, 0x50(%rsp)
    00001b0f: 	cmpq	$0xf, %r13
    00001b13: 	ja	.Ltmp2020 # Offset: 6931
    00001b19: 	cmpq	$0x1, %r13
    00001b1d: 	jne	.Ltmp2021 # Offset: 6941
    00001b23: 	movzbl	(%rbp), %eax
    00001b27: 	movb	%al, 0x10(%rbx)
.Ltmp2069:
    00001b2a: 	movq	%r13, 0x8(%rbx)
    00001b2e: 	movb	$0x0, (%rdi,%r13)
    00001b33: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b3a: 	addq	$0x20, %rax
    00001b3e: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2065:
    00001b45: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b4c: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b53: 	je	.Ltmp2022 # Offset: 6995
.Ltmp2048:
    00001b59: 	movq	-0x20(%rax), %rbp
    00001b5d: 	callq	clock@PLT # Offset: 7005
    00001b62: 	pxor	%xmm0, %xmm0
    00001b66: 	movq	%rax, end_time(%rip)
    00001b6d: 	movq	%rbp, %rdi
    00001b70: 	subq	start_time(%rip), %rax
    00001b77: 	cvtsi2sd	%rax, %xmm0
    00001b7c: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001b84: 	callq	_Z13record_resultdPKc # Offset: 7044
    00001b89: 	movq	0x90(%rsp), %rdi
    00001b91: 	cmpq	%r14, %rdi
    00001b94: 	je	.Ltmp2023 # Offset: 7060
    00001b96: 	movq	0xa0(%rsp), %rax
    00001b9e: 	leaq	0x1(%rax), %rsi
    00001ba2: 	callq	_ZdlPvm@PLT # Offset: 7074
.Ltmp2023:
    00001ba7: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001bae: 	movq	%r15, %rsi
    00001bb1: 	movq	%r12, %rdi
    00001bb4: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7092
    00001bb9: 	movl	iterations(%rip), %edx
    00001bbf: 	xorl	%r8d, %r8d
    00001bc2: 	xorl	%ecx, %ecx
    00001bc4: 	movl	$0x1f40, %esi
    00001bc9: 	movq	0x90(%rsp), %rdi
    00001bd1: 	callq	_Z9summarizePKciiii # Offset: 7121
    00001bd6: 	movq	0x90(%rsp), %rdi
    00001bde: 	cmpq	%r14, %rdi
    00001be1: 	je	.Ltmp2024 # Offset: 7137
    00001be3: 	movq	0xa0(%rsp), %rax
    00001beb: 	leaq	0x1(%rax), %rsi
    00001bef: 	callq	_ZdlPvm@PLT # Offset: 7151
.Ltmp2024:
    00001bf4: 	movq	0x70(%rsp), %rdi
    00001bf9: 	cmpq	0x48(%rsp), %rdi
    00001bfe: 	je	.Ltmp2025 # Offset: 7166
    00001c00: 	movq	0x80(%rsp), %rax
    00001c08: 	leaq	0x1(%rax), %rsi
    00001c0c: 	callq	_ZdlPvm@PLT # Offset: 7180
.Ltmp2025:
    00001c11: 	movq	0x1f4b8(%rsp), %rax
    00001c19: 	subq	%fs:0x28, %rax
    00001c22: 	jne	.Ltmp2026 # Offset: 7202
    00001c28: 	addq	$0x1f4c8, %rsp
    00001c2f: 	popq	%rbx
    00001c30: 	popq	%rbp
    00001c31: 	popq	%r12
    00001c33: 	popq	%r13
    00001c35: 	popq	%r14
    00001c37: 	popq	%r15
    00001c39: 	retq # Offset: 7225
    00001c3a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp1868:
    00001c40: 	movl	current_test(%rip), %edx
    00001c46: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001c4d: 	movl	$0x1, %edi
    00001c52: 	xorl	%eax, %eax
    00001c54: 	callq	__printf_chk@PLT # Offset: 7252
    00001c59: 	movl	iterations(%rip), %edx
    00001c5f: 	jmp	.Ltmp2027 # Offset: 7263
    00001c64: 	nopl	(%rax) # Size: 4
.Ltmp1860:
    00001c68: 	movl	current_test(%rip), %edx
    00001c6e: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001c75: 	movl	$0x1, %edi
    00001c7a: 	xorl	%eax, %eax
    00001c7c: 	callq	__printf_chk@PLT # Offset: 7292
    00001c81: 	movl	iterations(%rip), %edx
    00001c87: 	jmp	.Ltmp2028 # Offset: 7303
    00001c8c: 	nopl	(%rax) # Size: 4
.Ltmp1852:
    00001c90: 	movl	current_test(%rip), %edx
    00001c96: 	movq	%r14, %rsi
    00001c99: 	movl	$0x1, %edi
    00001c9e: 	xorl	%eax, %eax
    00001ca0: 	callq	__printf_chk@PLT # Offset: 7328
    00001ca5: 	movl	iterations(%rip), %edx
    00001cab: 	jmp	.Ltmp2029 # Offset: 7339
.Ltmp1873:
    00001cb0: 	movq	0x40(%rsp), %rsi
    00001cb5: 	xorl	%edx, %edx
    00001cb7: 	movq	%r13, %rdi
    00001cba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7354
    00001cbf: 	movq	%rax, (%r13)
    00001cc3: 	movq	%rax, %rdi
    00001cc6: 	movq	0x50(%rsp), %rax
    00001ccb: 	movq	%rax, 0x10(%r13)
.Ltmp2067:
    00001ccf: 	movq	0x8(%rsp), %rdx
    00001cd4: 	movq	0x10(%rsp), %rsi
    00001cd9: 	callq	memcpy@PLT # Offset: 7385
    00001cde: 	movq	0x50(%rsp), %rax
    00001ce3: 	movq	(%r13), %rdi
    00001ce7: 	movq	%rax, 0x8(%rsp)
    00001cec: 	jmp	.Ltmp2030 # Offset: 7404
    00001cf1: 	nopl	(%rax) # Size: 7
.Ltmp2015:
    00001cf8: 	movl	current_test(%rip), %edx
    00001cfe: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001d05: 	movl	$0x1, %edi
    00001d0a: 	xorl	%eax, %eax
    00001d0c: 	callq	__printf_chk@PLT # Offset: 7436
    00001d11: 	movl	iterations(%rip), %edx
    00001d17: 	jmp	.Ltmp2031 # Offset: 7447
    00001d1c: 	nopl	(%rax) # Size: 4
.Ltmp1981:
    00001d20: 	movl	current_test(%rip), %edx
    00001d26: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001d2d: 	movl	$0x1, %edi
    00001d32: 	xorl	%eax, %eax
    00001d34: 	callq	__printf_chk@PLT # Offset: 7476
    00001d39: 	movl	iterations(%rip), %edx
    00001d3f: 	jmp	.Ltmp2032 # Offset: 7487
    00001d44: 	nopl	(%rax) # Size: 4
.Ltmp1968:
    00001d48: 	movl	current_test(%rip), %edx
    00001d4e: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001d55: 	movl	$0x1, %edi
    00001d5a: 	xorl	%eax, %eax
    00001d5c: 	callq	__printf_chk@PLT # Offset: 7516
    00001d61: 	movl	iterations(%rip), %edx
    00001d67: 	jmp	.Ltmp2033 # Offset: 7527
    00001d6c: 	nopl	(%rax) # Size: 4
.Ltmp1960:
    00001d70: 	movl	current_test(%rip), %edx
    00001d76: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001d7d: 	movl	$0x1, %edi
    00001d82: 	xorl	%eax, %eax
    00001d84: 	callq	__printf_chk@PLT # Offset: 7556
    00001d89: 	movl	iterations(%rip), %edx
    00001d8f: 	jmp	.Ltmp2034 # Offset: 7567
    00001d94: 	nopl	(%rax) # Size: 4
.Ltmp1947:
    00001d98: 	movl	current_test(%rip), %edx
    00001d9e: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001da5: 	movl	$0x1, %edi
    00001daa: 	xorl	%eax, %eax
    00001dac: 	callq	__printf_chk@PLT # Offset: 7596
    00001db1: 	movl	iterations(%rip), %edx
    00001db7: 	jmp	.Ltmp2035 # Offset: 7607
    00001dbc: 	nopl	(%rax) # Size: 4
.Ltmp1881:
    00001dc0: 	movl	current_test(%rip), %edx
    00001dc6: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001dcd: 	movl	$0x1, %edi
    00001dd2: 	xorl	%eax, %eax
    00001dd4: 	callq	__printf_chk@PLT # Offset: 7636
    00001dd9: 	movl	iterations(%rip), %edx
    00001ddf: 	jmp	.Ltmp2036 # Offset: 7647
    00001de4: 	nopl	(%rax) # Size: 4
.Ltmp1889:
    00001de8: 	movl	current_test(%rip), %edx
    00001dee: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001df5: 	movl	$0x1, %edi
    00001dfa: 	xorl	%eax, %eax
    00001dfc: 	callq	__printf_chk@PLT # Offset: 7676
    00001e01: 	movl	iterations(%rip), %edx
    00001e07: 	jmp	.Ltmp2037 # Offset: 7687
    00001e0c: 	nopl	(%rax) # Size: 4
.Ltmp1939:
    00001e10: 	movl	current_test(%rip), %edx
    00001e16: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001e1d: 	movl	$0x1, %edi
    00001e22: 	xorl	%eax, %eax
    00001e24: 	callq	__printf_chk@PLT # Offset: 7716
    00001e29: 	movl	iterations(%rip), %edx
    00001e2f: 	jmp	.Ltmp2038 # Offset: 7727
    00001e34: 	nopl	(%rax) # Size: 4
.Ltmp1931:
    00001e38: 	movl	current_test(%rip), %edx
    00001e3e: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001e45: 	movl	$0x1, %edi
    00001e4a: 	xorl	%eax, %eax
    00001e4c: 	callq	__printf_chk@PLT # Offset: 7756
    00001e51: 	movl	iterations(%rip), %edx
    00001e57: 	jmp	.Ltmp2039 # Offset: 7767
    00001e5c: 	nopl	(%rax) # Size: 4
.Ltmp1923:
    00001e60: 	movl	current_test(%rip), %edx
    00001e66: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001e6d: 	movl	$0x1, %edi
    00001e72: 	xorl	%eax, %eax
    00001e74: 	callq	__printf_chk@PLT # Offset: 7796
    00001e79: 	movl	iterations(%rip), %edx
    00001e7f: 	jmp	.Ltmp2040 # Offset: 7807
    00001e84: 	nopl	(%rax) # Size: 4
.Ltmp2002:
    00001e88: 	movl	current_test(%rip), %edx
    00001e8e: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001e95: 	movl	$0x1, %edi
    00001e9a: 	xorl	%eax, %eax
    00001e9c: 	callq	__printf_chk@PLT # Offset: 7836
    00001ea1: 	movl	iterations(%rip), %edx
    00001ea7: 	jmp	.Ltmp2041 # Offset: 7847
    00001eac: 	nopl	(%rax) # Size: 4
.Ltmp1994:
    00001eb0: 	movl	current_test(%rip), %edx
    00001eb6: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001ebd: 	movl	$0x1, %edi
    00001ec2: 	xorl	%eax, %eax
    00001ec4: 	callq	__printf_chk@PLT # Offset: 7876
    00001ec9: 	movl	iterations(%rip), %edx
    00001ecf: 	jmp	.Ltmp2042 # Offset: 7887
    00001ed4: 	nopl	(%rax) # Size: 4
.Ltmp1915:
    00001ed8: 	movl	current_test(%rip), %edx
    00001ede: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001ee5: 	movl	$0x1, %edi
    00001eea: 	xorl	%eax, %eax
    00001eec: 	callq	__printf_chk@PLT # Offset: 7916
    00001ef1: 	movl	iterations(%rip), %edx
    00001ef7: 	jmp	.Ltmp2043 # Offset: 7927
    00001efc: 	nopl	(%rax) # Size: 4
.Ltmp1902:
    00001f00: 	movl	current_test(%rip), %edx
    00001f06: 	leaq	DATAat0x1a1c8(%rip), %rsi
    00001f0d: 	movl	$0x1, %edi
    00001f12: 	xorl	%eax, %eax
    00001f14: 	callq	__printf_chk@PLT # Offset: 7956
    00001f19: 	movl	iterations(%rip), %edx
    00001f1f: 	jmp	.Ltmp2044 # Offset: 7967
.Ltmp2004:
    00001f24: 	movq	%r12, %rsi
    00001f27: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f2e: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7982
    00001f33: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f3a: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001f41: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001f48: 	jne	.Ltmp2045 # Offset: 8008
.Ltmp2009:
    00001f4e: 	movq	-0x8(%rdx), %rax
    00001f52: 	addq	$0x200, %rax
    00001f58: 	jmp	.Ltmp2045 # Offset: 8024
.Ltmp1996:
    00001f5d: 	movq	-0x8(%rdx), %rax
    00001f61: 	addq	$0x200, %rax
    00001f67: 	jmp	.Ltmp2046 # Offset: 8039
.Ltmp1988:
    00001f6c: 	movq	-0x8(%rdx), %rax
    00001f70: 	addq	$0x200, %rax
    00001f76: 	jmp	.Ltmp2047 # Offset: 8054
.Ltmp2022:
    00001f7b: 	movq	-0x8(%rdx), %rax
    00001f7f: 	addq	$0x200, %rax
    00001f85: 	jmp	.Ltmp2048 # Offset: 8069
.Ltmp1862:
    00001f8a: 	movq	-0x8(%rdx), %rax
    00001f8e: 	addq	$0x200, %rax
    00001f94: 	jmp	.Ltmp2049 # Offset: 8084
.Ltmp1854:
    00001f99: 	movq	-0x8(%rdx), %rax
    00001f9d: 	addq	$0x200, %rax
    00001fa3: 	jmp	.Ltmp2050 # Offset: 8099
.Ltmp1909:
    00001fa8: 	movq	-0x8(%rdx), %rax
    00001fac: 	addq	$0x200, %rax
    00001fb2: 	jmp	.Ltmp2051 # Offset: 8114
.Ltmp1904:
    00001fb7: 	movq	%r12, %rsi
    00001fba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fc1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8129
    00001fc6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fcd: 	jmp	.Ltmp2052 # Offset: 8141
.Ltmp1896:
    00001fd2: 	movq	-0x8(%rdx), %rax
    00001fd6: 	addq	$0x200, %rax
    00001fdc: 	jmp	.Ltmp2053 # Offset: 8156
.Ltmp1949:
    00001fe1: 	movq	%r12, %rsi
    00001fe4: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001feb: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8171
    00001ff0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ff7: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001ffe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002005: 	jne	.Ltmp2054 # Offset: 8197
.Ltmp1954:
    0000200b: 	movq	-0x8(%rdx), %rax
    0000200f: 	addq	$0x200, %rax
    00002015: 	jmp	.Ltmp2054 # Offset: 8213
.Ltmp1891:
    0000201a: 	movq	%r12, %rsi
    0000201d: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002024: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8228
    00002029: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002030: 	jmp	.Ltmp2055 # Offset: 8240
.Ltmp1941:
    00002035: 	movq	-0x8(%rdx), %rax
    00002039: 	addq	$0x200, %rax
    0000203f: 	jmp	.Ltmp2056 # Offset: 8255
.Ltmp1875:
    00002044: 	movq	-0x8(%rdx), %rax
    00002048: 	addq	$0x200, %rax
    0000204e: 	jmp	.Ltmp2057 # Offset: 8270
.Ltmp1870:
    00002053: 	movq	%r12, %rsi
    00002056: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000205d: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8285
    00002062: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002069: 	jmp	.Ltmp2058 # Offset: 8297
.Ltmp1925:
    0000206e: 	movq	-0x8(%rdx), %rax
    00002072: 	addq	$0x200, %rax
    00002078: 	jmp	.Ltmp2059 # Offset: 8312
.Ltmp1917:
    0000207d: 	movq	-0x8(%rdx), %rax
    00002081: 	addq	$0x200, %rax
    00002087: 	jmp	.Ltmp2060 # Offset: 8327
.Ltmp1883:
    0000208c: 	movq	-0x8(%rdx), %rax
    00002090: 	addq	$0x200, %rax
    00002096: 	jmp	.Ltmp2061 # Offset: 8342
.Ltmp1933:
    0000209b: 	movq	-0x8(%rdx), %rax
    0000209f: 	addq	$0x200, %rax
    000020a5: 	jmp	.Ltmp2062 # Offset: 8357
.Ltmp1970:
    000020aa: 	movq	%r12, %rsi
    000020ad: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020b4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8372
    000020b9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020c0: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000020c7: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000020ce: 	jne	.Ltmp2063 # Offset: 8398
.Ltmp1975:
    000020d4: 	movq	-0x8(%rdx), %rax
    000020d8: 	addq	$0x200, %rax
    000020de: 	jmp	.Ltmp2063 # Offset: 8414
.Ltmp1962:
    000020e3: 	movq	-0x8(%rdx), %rax
    000020e7: 	addq	$0x200, %rax
    000020ed: 	jmp	.Ltmp2064 # Offset: 8429
.Ltmp2017:
    000020f2: 	movq	%r12, %rsi
    000020f5: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020fc: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8444
    00002101: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002108: 	jmp	.Ltmp2065 # Offset: 8456
.Ltmp1983:
    0000210d: 	movq	%r12, %rsi
    00002110: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002117: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8471
    0000211c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002123: 	jmp	.Ltmp2066 # Offset: 8483
.Ltmp1874:
    00002128: 	cmpq	$0x0, 0x8(%rsp)
    0000212e: 	je	.Ltmp2030 # Offset: 8494
    00002134: 	jmp	.Ltmp2067 # Offset: 8500
    00002139: 	nopl	(%rax) # Size: 7
.Ltmp1987:
    00002140: 	cmpq	$0x0, 0x8(%rsp)
    00002146: 	je	.Ltmp2068 # Offset: 8518
.Ltmp2078:
    0000214c: 	movq	0x8(%rsp), %rdx
    00002151: 	movq	0x10(%rsp), %rsi
    00002156: 	callq	memcpy@PLT # Offset: 8534
    0000215b: 	movq	0x50(%rsp), %rax
    00002160: 	movq	(%r13), %rdi
    00002164: 	movq	%rax, 0x8(%rsp)
    00002169: 	jmp	.Ltmp2068 # Offset: 8553
.Ltmp2021:
    0000216e: 	testq	%r13, %r13
    00002171: 	je	.Ltmp2069 # Offset: 8561
    00002177: 	jmp	.Ltmp2070 # Offset: 8567
    0000217c: 	nopl	(%rax) # Size: 4
.Ltmp1895:
    00002180: 	cmpq	$0x0, 0x8(%rsp)
    00002186: 	je	.Ltmp2071 # Offset: 8582
.Ltmp2079:
    0000218c: 	movq	0x8(%rsp), %rdx
    00002191: 	movq	0x10(%rsp), %rsi
    00002196: 	callq	memcpy@PLT # Offset: 8598
    0000219b: 	movq	0x50(%rsp), %rax
    000021a0: 	movq	(%r13), %rdi
    000021a4: 	movq	%rax, 0x8(%rsp)
    000021a9: 	jmp	.Ltmp2071 # Offset: 8617
.Ltmp2008:
    000021ae: 	cmpq	$0x0, 0x8(%rsp)
    000021b4: 	je	.Ltmp2072 # Offset: 8628
    000021ba: 	jmp	.Ltmp2073 # Offset: 8634
    000021bf: 	nop # Size: 1
.Ltmp1953:
    000021c0: 	cmpq	$0x0, 0x8(%rsp)
    000021c6: 	je	.Ltmp2074 # Offset: 8646
.Ltmp2080:
    000021cc: 	movq	0x8(%rsp), %rdx
    000021d1: 	movq	0x10(%rsp), %rsi
    000021d6: 	callq	memcpy@PLT # Offset: 8662
    000021db: 	movq	0x50(%rsp), %rax
    000021e0: 	movq	(%r13), %rdi
    000021e4: 	movq	%rax, 0x8(%rsp)
    000021e9: 	jmp	.Ltmp2074 # Offset: 8681
.Ltmp1908:
    000021ee: 	cmpq	$0x0, 0x8(%rsp)
    000021f4: 	je	.Ltmp2075 # Offset: 8692
    000021fa: 	jmp	.Ltmp2076 # Offset: 8698
    000021ff: 	nop # Size: 1
.Ltmp1974:
    00002200: 	cmpq	$0x0, 0x8(%rsp)
    00002206: 	je	.Ltmp2077 # Offset: 8710
.Ltmp2081:
    0000220c: 	movq	0x8(%rsp), %rdx
    00002211: 	movq	0x10(%rsp), %rsi
    00002216: 	callq	memcpy@PLT # Offset: 8726
    0000221b: 	movq	0x50(%rsp), %rax
    00002220: 	movq	(%r13), %rdi
    00002224: 	movq	%rax, 0x8(%rsp)
    00002229: 	jmp	.Ltmp2077 # Offset: 8745
.Ltmp2007:
    0000222e: 	movq	0x40(%rsp), %rsi
    00002233: 	xorl	%edx, %edx
    00002235: 	movq	%r13, %rdi
    00002238: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8760
    0000223d: 	movq	%rax, (%r13)
    00002241: 	movq	%rax, %rdi
    00002244: 	movq	0x50(%rsp), %rax
    00002249: 	movq	%rax, 0x10(%r13)
.Ltmp2073:
    0000224d: 	movq	0x8(%rsp), %rdx
    00002252: 	movq	0x10(%rsp), %rsi
    00002257: 	callq	memcpy@PLT # Offset: 8791
    0000225c: 	movq	0x50(%rsp), %rax
    00002261: 	movq	(%r13), %rdi
    00002265: 	movq	%rax, 0x8(%rsp)
    0000226a: 	jmp	.Ltmp2072 # Offset: 8810
.Ltmp1907:
    0000226f: 	movq	0x40(%rsp), %rsi
    00002274: 	xorl	%edx, %edx
    00002276: 	movq	%r13, %rdi
    00002279: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8825
    0000227e: 	movq	%rax, (%r13)
    00002282: 	movq	%rax, %rdi
    00002285: 	movq	0x50(%rsp), %rax
    0000228a: 	movq	%rax, 0x10(%r13)
.Ltmp2076:
    0000228e: 	movq	0x8(%rsp), %rdx
    00002293: 	movq	0x10(%rsp), %rsi
    00002298: 	callq	memcpy@PLT # Offset: 8856
    0000229d: 	movq	0x50(%rsp), %rax
    000022a2: 	movq	(%r13), %rdi
    000022a6: 	movq	%rax, 0x8(%rsp)
    000022ab: 	jmp	.Ltmp2075 # Offset: 8875
.Ltmp1986:
    000022b0: 	movq	0x40(%rsp), %rsi
    000022b5: 	xorl	%edx, %edx
    000022b7: 	movq	%r13, %rdi
    000022ba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8890
    000022bf: 	movq	%rax, (%r13)
    000022c3: 	movq	%rax, %rdi
    000022c6: 	movq	0x50(%rsp), %rax
    000022cb: 	movq	%rax, 0x10(%r13)
    000022cf: 	jmp	.Ltmp2078 # Offset: 8911
.Ltmp1894:
    000022d4: 	movq	0x40(%rsp), %rsi
    000022d9: 	xorl	%edx, %edx
    000022db: 	movq	%r13, %rdi
    000022de: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8926
    000022e3: 	movq	%rax, (%r13)
    000022e7: 	movq	%rax, %rdi
    000022ea: 	movq	0x50(%rsp), %rax
    000022ef: 	movq	%rax, 0x10(%r13)
    000022f3: 	jmp	.Ltmp2079 # Offset: 8947
.Ltmp2020:
    000022f8: 	movq	0x40(%rsp), %rsi
    000022fd: 	xorl	%edx, %edx
    000022ff: 	movq	%rbx, %rdi
    00002302: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8962
    00002307: 	movq	%rax, (%rbx)
    0000230a: 	movq	%rax, %rdi
    0000230d: 	movq	0x50(%rsp), %rax
    00002312: 	movq	%rax, 0x10(%rbx)
.Ltmp2070:
    00002316: 	movq	%r13, %rdx
    00002319: 	movq	%rbp, %rsi
    0000231c: 	callq	memcpy@PLT # Offset: 8988
    00002321: 	movq	0x50(%rsp), %r13
    00002326: 	movq	(%rbx), %rdi
    00002329: 	jmp	.Ltmp2069 # Offset: 9001
.Ltmp1952:
    0000232e: 	movq	0x40(%rsp), %rsi
    00002333: 	xorl	%edx, %edx
    00002335: 	movq	%r13, %rdi
    00002338: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9016
    0000233d: 	movq	%rax, (%r13)
    00002341: 	movq	%rax, %rdi
    00002344: 	movq	0x50(%rsp), %rax
    00002349: 	movq	%rax, 0x10(%r13)
    0000234d: 	jmp	.Ltmp2080 # Offset: 9037
.Ltmp1973:
    00002352: 	movq	0x40(%rsp), %rsi
    00002357: 	xorl	%edx, %edx
    00002359: 	movq	%r13, %rdi
    0000235c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9052
    00002361: 	movq	%rax, (%r13)
    00002365: 	movq	%rax, %rdi
    00002368: 	movq	0x50(%rsp), %rax
    0000236d: 	movq	%rax, 0x10(%r13)
    00002371: 	jmp	.Ltmp2081 # Offset: 9073
.Ltmp1893:
    00002376: 	leaq	DATAat0x1a158(%rip), %rdi
    0000237d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9085
.Ltmp1906:
    00002382: 	leaq	DATAat0x1a158(%rip), %rdi
    00002389: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9097
.Ltmp1951:
    0000238e: 	leaq	DATAat0x1a158(%rip), %rdi
    00002395: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9109
.Ltmp1972:
    0000239a: 	leaq	DATAat0x1a158(%rip), %rdi
    000023a1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9121
.Ltmp1985:
    000023a6: 	leaq	DATAat0x1a158(%rip), %rdi
    000023ad: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9133
.Ltmp2006:
    000023b2: 	leaq	DATAat0x1a158(%rip), %rdi
    000023b9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9145
.Ltmp2019:
    000023be: 	leaq	DATAat0x1a158(%rip), %rdi
    000023c5: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9157
.Ltmp2026:
    000023ca: 	callq	__stack_chk_fail@PLT # Offset: 9162
.Ltmp1872:
    000023cf: 	leaq	DATAat0x1a158(%rip), %rdi
    000023d6: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9174
    000023db: 	endbr64
.Ltmp2087:
    000023df: 	movq	%rax, %rbp
    000023e2: 	jmp	.Ltmp2082 # Offset: 9186
    000023e4: 	endbr64
    000023e8: 	movq	%rax, %rbp
    000023eb: 	jmp	.Ltmp2083 # Offset: 9195
    000023ed: 	endbr64
    000023f1: 	movq	%rax, %rbp
    000023f4: 	jmp	.Ltmp2084 # Offset: 9204
.Ltmp2083:
    000023f6: 	movq	0x90(%rsp), %rdi
    000023fe: 	leaq	0xa0(%rsp), %rax
    00002406: 	cmpq	%rax, %rdi
    00002409: 	je	.Ltmp2084 # Offset: 9225
.Ltmp2086:
    0000240b: 	movq	0xa0(%rsp), %rax
    00002413: 	leaq	0x1(%rax), %rsi
    00002417: 	callq	_ZdlPvm@PLT # Offset: 9239
.Ltmp2084:
    0000241c: 	movq	0x70(%rsp), %rdi
    00002421: 	cmpq	0x48(%rsp), %rdi
    00002426: 	je	.Ltmp2085 # Offset: 9254
    00002428: 	movq	0x80(%rsp), %rax
    00002430: 	leaq	0x1(%rax), %rsi
    00002434: 	callq	_ZdlPvm@PLT # Offset: 9268
.Ltmp2085:
    00002439: 	movq	%rbp, %rdi
    0000243c: 	callq	_Unwind_Resume@PLT # Offset: 9276
.Ltmp2082:
    00002441: 	movq	0x90(%rsp), %rdi
    00002449: 	cmpq	%r14, %rdi
    0000244c: 	jne	.Ltmp2086 # Offset: 9292
    0000244e: 	jmp	.Ltmp2084 # Offset: 9294
    00002450: 	endbr64
    00002454: 	jmp	.Ltmp2087 # Offset: 9300
    00002456: 	endbr64
    0000245a: 	jmp	.Ltmp2087 # Offset: 9306
    0000245c: 	endbr64
    00002460: 	jmp	.Ltmp2087 # Offset: 9312
    00002465: 	endbr64
    00002469: 	jmp	.Ltmp2087 # Offset: 9321
    0000246e: 	endbr64
    00002472: 	jmp	.Ltmp2087 # Offset: 9330
    00002477: 	endbr64
    0000247b: 	jmp	.Ltmp2087 # Offset: 9339
    00002480: 	endbr64
    00002484: 	jmp	.Ltmp2087 # Offset: 9348
    00002489: 	endbr64
    0000248d: 	jmp	.Ltmp2087 # Offset: 9357
    00002492: 	endbr64
    00002496: 	jmp	.Ltmp2087 # Offset: 9366
    0000249b: 	endbr64
    0000249f: 	jmp	.Ltmp2087 # Offset: 9375
    000024a4: 	endbr64
    000024a8: 	jmp	.Ltmp2087 # Offset: 9384
    000024ad: 	endbr64
    000024b1: 	jmp	.Ltmp2087 # Offset: 9393
    000024b6: 	endbr64
    000024ba: 	jmp	.Ltmp2087 # Offset: 9402
    000024bf: 	endbr64
    000024c3: 	jmp	.Ltmp2087 # Offset: 9411
    000024c8: 	endbr64
    000024cc: 	jmp	.Ltmp2087 # Offset: 9420
    000024d1: 	endbr64
    000024d5: 	jmp	.Ltmp2087 # Offset: 9429
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIeEvv"

Binary Function "_Z11TestOneTypeIfEvv" after disassembly {
  Number      : 55
  State       : disassembled
  Address     : 0x15380
  Size        : 0x2759
  MaxSize     : 0x2760
  Offset      : 0x15380
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIfEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB054:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0x7000(%rsp), %r11
.Ltmp2088:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2088 # Offset: 37
    00000027: 	subq	$0xdc8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm6
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0x7db8(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x50(%rsp), %rsi
    0000005d: 	movaps	%xmm7, 0x50(%rsp)
    00000062: 	leaq	0xb0(%rsp), %rbp
    0000006a: 	movq	%rsi, 0x40(%rsp)
    0000006f: 	leaq	0x7db0(%rsp), %rbx
    00000077: 	movaps	%xmm6, 0x60(%rsp)
    0000007c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 124
    00000081: 	movb	$0x74, 0x84(%rsp)
    00000089: 	pxor	%xmm0, %xmm0
    0000008d: 	leaq	0x80(%rsp), %rax
    00000095: 	movb	$0x0, 0x85(%rsp)
    0000009d: 	cvtsd2ss	init_value(%rip), %xmm0
    000000a5: 	shufps	$0x0, %xmm0, %xmm0
    000000a9: 	movl	$0x616f6c66, 0x80(%rsp)
    000000b4: 	movq	$0x5, 0x78(%rsp)
    000000bd: 	movq	%rax, 0x48(%rsp)
    000000c2: 	movq	%rax, 0x70(%rsp)
    000000c7: 	movq	%rbp, %rax
    000000ca: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2089:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp2089 # Offset: 218
    000000dc: 	leaq	0x90(%rsp), %r12
    000000e4: 	leaq	0x70(%rsp), %r15
    000000e9: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000f0: 	movq	%r15, %rsi
    000000f3: 	movq	%r12, %rdi
    000000f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 246
    000000fb: 	callq	clock@PLT # Offset: 251
    00000100: 	movl	iterations(%rip), %edx
    00000106: 	movq	%rax, start_time(%rip)
    0000010d: 	testl	%edx, %edx
    0000010f: 	jle	.Ltmp2090 # Offset: 271
    00000115: 	movss	DATAat0x1a350(%rip), %xmm7
    0000011d: 	pxor	%xmm3, %xmm3
    00000121: 	xorl	%r13d, %r13d
    00000124: 	movsd	DATAat0x1a320(%rip), %xmm6
    0000012c: 	movss	%xmm3, 0x8(%rsp)
    00000132: 	movss	DATAat0x1a370(%rip), %xmm3
    0000013a: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000141: 	movss	%xmm7, 0xc(%rsp)
    00000147: 	movq	DATAat0x1a360(%rip), %xmm7
    0000014f: 	movaps	%xmm3, 0x20(%rsp)
    00000154: 	movsd	DATAat0x1a340(%rip), %xmm3
    0000015c: 	movsd	%xmm6, (%rsp)
    00000161: 	movaps	%xmm7, 0x10(%rsp)
    00000166: 	movsd	%xmm3, 0x30(%rsp)
    0000016c: 	nopl	(%rax) # Size: 4
.Ltmp2094:
    00000170: 	movq	%rbp, %rax
    00000173: 	pxor	%xmm0, %xmm0
    00000177: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2091:
    00000180: 	movaps	(%rax), %xmm2
    00000183: 	addq	$0x10, %rax
    00000187: 	addss	%xmm2, %xmm0
    0000018b: 	movaps	%xmm2, %xmm1
    0000018e: 	shufps	$0x55, %xmm2, %xmm1
    00000192: 	addss	%xmm0, %xmm1
    00000196: 	movaps	%xmm2, %xmm0
    00000199: 	unpckhps	%xmm2, %xmm0
    0000019c: 	shufps	$0xff, %xmm2, %xmm2
    000001a0: 	addss	%xmm1, %xmm0
    000001a4: 	addss	%xmm2, %xmm0
    000001a8: 	cmpq	%rax, %rbx
    000001ab: 	jne	.Ltmp2091 # Offset: 427
    000001ad: 	pxor	%xmm2, %xmm2
    000001b1: 	movaps	0x20(%rsp), %xmm3
    000001b6: 	movaps	%xmm0, %xmm1
    000001b9: 	cvtsd2ss	init_value(%rip), %xmm2
    000001c1: 	mulss	0xc(%rsp), %xmm2
    000001c7: 	andps	%xmm0, %xmm3
    000001ca: 	subss	%xmm2, %xmm1
    000001ce: 	pxor	%xmm2, %xmm2
    000001d2: 	cvtss2sd	%xmm3, %xmm2
    000001d6: 	comisd	(%rsp), %xmm2
    000001db: 	jbe	.Ltmp2092 # Offset: 475
    000001dd: 	divss	%xmm0, %xmm1
.Ltmp2092:
    000001e1: 	movsd	0x30(%rsp), %xmm6
    000001e7: 	cvtss2sd	%xmm1, %xmm1
    000001eb: 	andpd	0x10(%rsp), %xmm1
    000001f1: 	comisd	%xmm1, %xmm6
    000001f5: 	jbe	.Ltmp2093 # Offset: 501
.Ltmp2254:
    000001fb: 	addl	$0x1, %r13d
    000001ff: 	cmpl	%edx, %r13d
    00000202: 	jl	.Ltmp2094 # Offset: 514
.Ltmp2090:
    00000208: 	movq	%r12, %rdi
    0000020b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 523
    00000210: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000217: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000021e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000225: 	je	.Ltmp2095 # Offset: 549
.Ltmp2287:
    0000022b: 	movq	-0x20(%rax), %r13
    0000022f: 	callq	clock@PLT # Offset: 559
    00000234: 	pxor	%xmm0, %xmm0
    00000238: 	movq	%rax, end_time(%rip)
    0000023f: 	movq	%r13, %rdi
    00000242: 	subq	start_time(%rip), %rax
    00000249: 	cvtsi2sd	%rax, %xmm0
    0000024e: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000256: 	callq	_Z13record_resultdPKc # Offset: 598
    0000025b: 	movq	0x90(%rsp), %rdi
    00000263: 	leaq	0xa0(%rsp), %rax
    0000026b: 	movq	%rax, 0x38(%rsp)
    00000270: 	cmpq	%rax, %rdi
    00000273: 	je	.Ltmp2096 # Offset: 627
    00000275: 	movq	0xa0(%rsp), %rax
    0000027d: 	leaq	0x1(%rax), %rsi
    00000281: 	callq	_ZdlPvm@PLT # Offset: 641
.Ltmp2096:
    00000286: 	leaq	DATAat0x1a1e2(%rip), %rdx
    0000028d: 	movq	%r15, %rsi
    00000290: 	movq	%r12, %rdi
    00000293: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 659
    00000298: 	callq	clock@PLT # Offset: 664
    0000029d: 	movl	iterations(%rip), %edx
    000002a3: 	movq	%rax, start_time(%rip)
    000002aa: 	testl	%edx, %edx
    000002ac: 	jle	.Ltmp2097 # Offset: 684
    000002b2: 	movss	DATAat0x1a350(%rip), %xmm7
    000002ba: 	pxor	%xmm6, %xmm6
    000002be: 	xorl	%r13d, %r13d
    000002c1: 	movss	DATAat0x1a370(%rip), %xmm3
    000002c9: 	movss	%xmm6, 0x8(%rsp)
    000002cf: 	movsd	DATAat0x1a320(%rip), %xmm6
    000002d7: 	leaq	DATAat0x1a1c8(%rip), %r14
    000002de: 	movss	%xmm7, 0xc(%rsp)
    000002e4: 	movq	DATAat0x1a360(%rip), %xmm7
    000002ec: 	movaps	%xmm3, 0x20(%rsp)
    000002f1: 	movsd	DATAat0x1a340(%rip), %xmm3
    000002f9: 	movsd	%xmm6, (%rsp)
    000002fe: 	movaps	%xmm7, 0x10(%rsp)
    00000303: 	movsd	%xmm3, 0x30(%rsp)
    00000309: 	nopl	(%rax) # Size: 7
.Ltmp2101:
    00000310: 	movq	%rbp, %rax
    00000313: 	pxor	%xmm0, %xmm0
    00000317: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2098:
    00000320: 	movaps	(%rax), %xmm2
    00000323: 	addq	$0x10, %rax
    00000327: 	addss	%xmm2, %xmm0
    0000032b: 	movaps	%xmm2, %xmm1
    0000032e: 	shufps	$0x55, %xmm2, %xmm1
    00000332: 	addss	%xmm0, %xmm1
    00000336: 	movaps	%xmm2, %xmm0
    00000339: 	unpckhps	%xmm2, %xmm0
    0000033c: 	shufps	$0xff, %xmm2, %xmm2
    00000340: 	addss	%xmm1, %xmm0
    00000344: 	addss	%xmm2, %xmm0
    00000348: 	cmpq	%rbx, %rax
    0000034b: 	jne	.Ltmp2098 # Offset: 843
    0000034d: 	pxor	%xmm2, %xmm2
    00000351: 	movaps	0x20(%rsp), %xmm4
    00000356: 	movaps	%xmm0, %xmm1
    00000359: 	cvtsd2ss	init_value(%rip), %xmm2
    00000361: 	mulss	0xc(%rsp), %xmm2
    00000367: 	andps	%xmm0, %xmm4
    0000036a: 	subss	%xmm2, %xmm1
    0000036e: 	pxor	%xmm2, %xmm2
    00000372: 	cvtss2sd	%xmm4, %xmm2
    00000376: 	comisd	(%rsp), %xmm2
    0000037b: 	jbe	.Ltmp2099 # Offset: 891
    0000037d: 	divss	%xmm0, %xmm1
.Ltmp2099:
    00000381: 	movsd	0x30(%rsp), %xmm5
    00000387: 	cvtss2sd	%xmm1, %xmm1
    0000038b: 	andpd	0x10(%rsp), %xmm1
    00000391: 	comisd	%xmm1, %xmm5
    00000395: 	jbe	.Ltmp2100 # Offset: 917
.Ltmp2253:
    0000039b: 	addl	$0x1, %r13d
    0000039f: 	cmpl	%edx, %r13d
    000003a2: 	jl	.Ltmp2101 # Offset: 930
.Ltmp2097:
    000003a8: 	movq	%r12, %rdi
    000003ab: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 939
    000003b0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003b7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000003be: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003c5: 	je	.Ltmp2102 # Offset: 965
.Ltmp2285:
    000003cb: 	movq	-0x20(%rax), %r13
    000003cf: 	callq	clock@PLT # Offset: 975
    000003d4: 	pxor	%xmm0, %xmm0
    000003d8: 	movq	%rax, end_time(%rip)
    000003df: 	movq	%r13, %rdi
    000003e2: 	subq	start_time(%rip), %rax
    000003e9: 	cvtsi2sd	%rax, %xmm0
    000003ee: 	divsd	DATAat0x1a318(%rip), %xmm0
    000003f6: 	callq	_Z13record_resultdPKc # Offset: 1014
    000003fb: 	movq	0x90(%rsp), %rdi
    00000403: 	cmpq	0x38(%rsp), %rdi
    00000408: 	je	.Ltmp2103 # Offset: 1032
    0000040a: 	movq	0xa0(%rsp), %rax
    00000412: 	leaq	0x1(%rax), %rsi
    00000416: 	callq	_ZdlPvm@PLT # Offset: 1046
.Ltmp2103:
    0000041b: 	leaq	DATAat0x1a1ee(%rip), %rdx
    00000422: 	movq	%r15, %rsi
    00000425: 	movq	%r12, %rdi
    00000428: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1064
    0000042d: 	callq	clock@PLT # Offset: 1069
    00000432: 	movl	iterations(%rip), %edx
    00000438: 	movq	%rax, start_time(%rip)
    0000043f: 	testl	%edx, %edx
    00000441: 	jle	.Ltmp2104 # Offset: 1089
    00000447: 	movss	DATAat0x1a350(%rip), %xmm7
    0000044f: 	pxor	%xmm6, %xmm6
    00000453: 	xorl	%r13d, %r13d
    00000456: 	movss	DATAat0x1a370(%rip), %xmm3
    0000045e: 	movss	%xmm6, 0x8(%rsp)
    00000464: 	movsd	DATAat0x1a320(%rip), %xmm6
    0000046c: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000473: 	movss	%xmm7, 0xc(%rsp)
    00000479: 	movq	DATAat0x1a360(%rip), %xmm7
    00000481: 	movaps	%xmm3, 0x20(%rsp)
    00000486: 	movsd	DATAat0x1a340(%rip), %xmm3
    0000048e: 	movsd	%xmm6, (%rsp)
    00000493: 	movaps	%xmm7, 0x10(%rsp)
    00000498: 	movsd	%xmm3, 0x30(%rsp)
    0000049e: 	nop # Size: 2
.Ltmp2108:
    000004a0: 	movq	%rbp, %rax
    000004a3: 	pxor	%xmm0, %xmm0
    000004a7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2105:
    000004b0: 	movaps	(%rax), %xmm2
    000004b3: 	addq	$0x10, %rax
    000004b7: 	addss	%xmm2, %xmm0
    000004bb: 	movaps	%xmm2, %xmm1
    000004be: 	shufps	$0x55, %xmm2, %xmm1
    000004c2: 	addss	%xmm0, %xmm1
    000004c6: 	movaps	%xmm2, %xmm0
    000004c9: 	unpckhps	%xmm2, %xmm0
    000004cc: 	shufps	$0xff, %xmm2, %xmm2
    000004d0: 	addss	%xmm1, %xmm0
    000004d4: 	addss	%xmm2, %xmm0
    000004d8: 	cmpq	%rbx, %rax
    000004db: 	jne	.Ltmp2105 # Offset: 1243
    000004dd: 	pxor	%xmm2, %xmm2
    000004e1: 	movaps	0x20(%rsp), %xmm5
    000004e6: 	movaps	%xmm0, %xmm1
    000004e9: 	cvtsd2ss	init_value(%rip), %xmm2
    000004f1: 	mulss	0xc(%rsp), %xmm2
    000004f7: 	andps	%xmm0, %xmm5
    000004fa: 	subss	%xmm2, %xmm1
    000004fe: 	pxor	%xmm2, %xmm2
    00000502: 	cvtss2sd	%xmm5, %xmm2
    00000506: 	comisd	(%rsp), %xmm2
    0000050b: 	jbe	.Ltmp2106 # Offset: 1291
    0000050d: 	divss	%xmm0, %xmm1
.Ltmp2106:
    00000511: 	movsd	0x30(%rsp), %xmm4
    00000517: 	cvtss2sd	%xmm1, %xmm1
    0000051b: 	andpd	0x10(%rsp), %xmm1
    00000521: 	comisd	%xmm1, %xmm4
    00000525: 	jbe	.Ltmp2107 # Offset: 1317
.Ltmp2252:
    0000052b: 	addl	$0x1, %r13d
    0000052f: 	cmpl	%edx, %r13d
    00000532: 	jl	.Ltmp2108 # Offset: 1330
.Ltmp2104:
    00000538: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000053f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000546: 	subq	$0x20, %rax
    0000054a: 	cmpq	%rax, %r14
    0000054d: 	je	.Ltmp2109 # Offset: 1357
    00000553: 	leaq	0x10(%r14), %rdi
    00000557: 	movq	0x98(%rsp), %r13
    0000055f: 	movq	%rdi, (%r14)
    00000562: 	movq	0x90(%rsp), %rax
    0000056a: 	movq	%rax, %rcx
    0000056d: 	movq	%rax, (%rsp)
    00000571: 	addq	%r13, %rcx
    00000574: 	je	.Ltmp2110 # Offset: 1396
    00000576: 	testq	%rax, %rax
    00000579: 	je	.Ltmp2111 # Offset: 1401
.Ltmp2110:
    0000057f: 	movq	%r13, 0x50(%rsp)
    00000584: 	cmpq	$0xf, %r13
    00000588: 	ja	.Ltmp2112 # Offset: 1416
    0000058e: 	cmpq	$0x1, %r13
    00000592: 	jne	.Ltmp2113 # Offset: 1426
    00000598: 	movq	(%rsp), %rax
    0000059c: 	movzbl	(%rax), %eax
    0000059f: 	movb	%al, 0x10(%r14)
.Ltmp2255:
    000005a3: 	movq	%r13, 0x8(%r14)
    000005a7: 	movb	$0x0, (%rdi,%r13)
    000005ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000005b3: 	addq	$0x20, %rax
    000005b7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2290:
    000005be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000005c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000005cc: 	je	.Ltmp2114 # Offset: 1484
.Ltmp2289:
    000005d2: 	movq	-0x20(%rax), %r13
    000005d6: 	callq	clock@PLT # Offset: 1494
    000005db: 	pxor	%xmm0, %xmm0
    000005df: 	movq	%rax, end_time(%rip)
    000005e6: 	movq	%r13, %rdi
    000005e9: 	subq	start_time(%rip), %rax
    000005f0: 	cvtsi2sd	%rax, %xmm0
    000005f5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000005fd: 	callq	_Z13record_resultdPKc # Offset: 1533
    00000602: 	movq	0x90(%rsp), %rdi
    0000060a: 	cmpq	0x38(%rsp), %rdi
    0000060f: 	je	.Ltmp2115 # Offset: 1551
    00000611: 	movq	0xa0(%rsp), %rax
    00000619: 	leaq	0x1(%rax), %rsi
    0000061d: 	callq	_ZdlPvm@PLT # Offset: 1565
.Ltmp2115:
    00000622: 	leaq	DATAat0x1a1fb(%rip), %rdx
    00000629: 	movq	%r15, %rsi
    0000062c: 	movq	%r12, %rdi
    0000062f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1583
    00000634: 	callq	clock@PLT # Offset: 1588
    00000639: 	movl	iterations(%rip), %edx
    0000063f: 	movq	%rax, start_time(%rip)
    00000646: 	testl	%edx, %edx
    00000648: 	jle	.Ltmp2116 # Offset: 1608
    0000064e: 	movss	DATAat0x1a350(%rip), %xmm7
    00000656: 	pxor	%xmm6, %xmm6
    0000065a: 	xorl	%r13d, %r13d
    0000065d: 	movss	DATAat0x1a370(%rip), %xmm3
    00000665: 	movss	%xmm6, 0x8(%rsp)
    0000066b: 	movsd	DATAat0x1a320(%rip), %xmm6
    00000673: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000067a: 	movss	%xmm7, 0xc(%rsp)
    00000680: 	movq	DATAat0x1a360(%rip), %xmm7
    00000688: 	movaps	%xmm3, 0x20(%rsp)
    0000068d: 	movsd	DATAat0x1a340(%rip), %xmm3
    00000695: 	movsd	%xmm6, (%rsp)
    0000069a: 	movaps	%xmm7, 0x10(%rsp)
    0000069f: 	movsd	%xmm3, 0x30(%rsp)
    000006a5: 	nopl	(%rax) # Size: 3
.Ltmp2120:
    000006a8: 	movq	%rbp, %rax
    000006ab: 	pxor	%xmm0, %xmm0
    000006af: 	nop # Size: 1
.Ltmp2117:
    000006b0: 	movaps	(%rax), %xmm2
    000006b3: 	addq	$0x10, %rax
    000006b7: 	addss	%xmm2, %xmm0
    000006bb: 	movaps	%xmm2, %xmm1
    000006be: 	shufps	$0x55, %xmm2, %xmm1
    000006c2: 	addss	%xmm0, %xmm1
    000006c6: 	movaps	%xmm2, %xmm0
    000006c9: 	unpckhps	%xmm2, %xmm0
    000006cc: 	shufps	$0xff, %xmm2, %xmm2
    000006d0: 	addss	%xmm1, %xmm0
    000006d4: 	addss	%xmm2, %xmm0
    000006d8: 	cmpq	%rbx, %rax
    000006db: 	jne	.Ltmp2117 # Offset: 1755
    000006dd: 	pxor	%xmm2, %xmm2
    000006e1: 	movaps	0x20(%rsp), %xmm6
    000006e6: 	movaps	%xmm0, %xmm1
    000006e9: 	cvtsd2ss	init_value(%rip), %xmm2
    000006f1: 	mulss	0xc(%rsp), %xmm2
    000006f7: 	andps	%xmm0, %xmm6
    000006fa: 	subss	%xmm2, %xmm1
    000006fe: 	pxor	%xmm2, %xmm2
    00000702: 	cvtss2sd	%xmm6, %xmm2
    00000706: 	comisd	(%rsp), %xmm2
    0000070b: 	jbe	.Ltmp2118 # Offset: 1803
    0000070d: 	divss	%xmm0, %xmm1
.Ltmp2118:
    00000711: 	movsd	0x30(%rsp), %xmm3
    00000717: 	cvtss2sd	%xmm1, %xmm1
    0000071b: 	andpd	0x10(%rsp), %xmm1
    00000721: 	comisd	%xmm1, %xmm3
    00000725: 	jbe	.Ltmp2119 # Offset: 1829
.Ltmp2263:
    0000072b: 	addl	$0x1, %r13d
    0000072f: 	cmpl	%edx, %r13d
    00000732: 	jl	.Ltmp2120 # Offset: 1842
.Ltmp2116:
    00000738: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000073f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000746: 	subq	$0x20, %rax
    0000074a: 	cmpq	%rax, %r14
    0000074d: 	je	.Ltmp2121 # Offset: 1869
    00000753: 	leaq	0x10(%r14), %rdi
    00000757: 	movq	0x98(%rsp), %r13
    0000075f: 	movq	%rdi, (%r14)
    00000762: 	movq	0x90(%rsp), %rax
    0000076a: 	movq	%rax, %rcx
    0000076d: 	movq	%rax, (%rsp)
    00000771: 	addq	%r13, %rcx
    00000774: 	je	.Ltmp2122 # Offset: 1908
    00000776: 	testq	%rax, %rax
    00000779: 	je	.Ltmp2123 # Offset: 1913
.Ltmp2122:
    0000077f: 	movq	%r13, 0x50(%rsp)
    00000784: 	cmpq	$0xf, %r13
    00000788: 	ja	.Ltmp2124 # Offset: 1928
    0000078e: 	cmpq	$0x1, %r13
    00000792: 	jne	.Ltmp2125 # Offset: 1938
    00000798: 	movq	(%rsp), %rax
    0000079c: 	movzbl	(%rax), %eax
    0000079f: 	movb	%al, 0x10(%r14)
.Ltmp2294:
    000007a3: 	movq	%r13, 0x8(%r14)
    000007a7: 	movb	$0x0, (%rdi,%r13)
    000007ac: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000007b3: 	addq	$0x20, %rax
    000007b7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2292:
    000007be: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000007c5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000007cc: 	je	.Ltmp2126 # Offset: 1996
.Ltmp2291:
    000007d2: 	movq	-0x20(%rax), %r13
    000007d6: 	callq	clock@PLT # Offset: 2006
    000007db: 	pxor	%xmm0, %xmm0
    000007df: 	movq	%rax, end_time(%rip)
    000007e6: 	movq	%r13, %rdi
    000007e9: 	subq	start_time(%rip), %rax
    000007f0: 	cvtsi2sd	%rax, %xmm0
    000007f5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000007fd: 	callq	_Z13record_resultdPKc # Offset: 2045
    00000802: 	movq	0x90(%rsp), %rdi
    0000080a: 	cmpq	0x38(%rsp), %rdi
    0000080f: 	je	.Ltmp2127 # Offset: 2063
    00000811: 	movq	0xa0(%rsp), %rax
    00000819: 	leaq	0x1(%rax), %rsi
    0000081d: 	callq	_ZdlPvm@PLT # Offset: 2077
.Ltmp2127:
    00000822: 	leaq	DATAat0x1a208(%rip), %rdx
    00000829: 	movq	%r15, %rsi
    0000082c: 	movq	%r12, %rdi
    0000082f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2095
    00000834: 	callq	clock@PLT # Offset: 2100
    00000839: 	movl	iterations(%rip), %edx
    0000083f: 	movq	%rax, start_time(%rip)
    00000846: 	testl	%edx, %edx
    00000848: 	jle	.Ltmp2128 # Offset: 2120
    0000084e: 	pxor	%xmm6, %xmm6
    00000852: 	movss	DATAat0x1a350(%rip), %xmm4
    0000085a: 	movsd	DATAat0x1a320(%rip), %xmm7
    00000862: 	movss	DATAat0x1a370(%rip), %xmm5
    0000086a: 	movq	DATAat0x1a360(%rip), %xmm3
    00000872: 	movss	%xmm6, 0x8(%rsp)
    00000878: 	xorl	%r13d, %r13d
    0000087b: 	movsd	DATAat0x1a340(%rip), %xmm6
    00000883: 	movss	%xmm4, 0xc(%rsp)
    00000889: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000890: 	movaps	%xmm5, 0x20(%rsp)
    00000895: 	movsd	%xmm7, (%rsp)
    0000089a: 	movaps	%xmm3, 0x10(%rsp)
    0000089f: 	movsd	%xmm6, 0x30(%rsp)
    000008a5: 	nopl	(%rax) # Size: 3
.Ltmp2132:
    000008a8: 	movq	%rbp, %rax
    000008ab: 	pxor	%xmm0, %xmm0
    000008af: 	nop # Size: 1
.Ltmp2129:
    000008b0: 	movaps	(%rax), %xmm2
    000008b3: 	addq	$0x10, %rax
    000008b7: 	addss	%xmm2, %xmm0
    000008bb: 	movaps	%xmm2, %xmm1
    000008be: 	shufps	$0x55, %xmm2, %xmm1
    000008c2: 	addss	%xmm0, %xmm1
    000008c6: 	movaps	%xmm2, %xmm0
    000008c9: 	unpckhps	%xmm2, %xmm0
    000008cc: 	shufps	$0xff, %xmm2, %xmm2
    000008d0: 	addss	%xmm1, %xmm0
    000008d4: 	addss	%xmm2, %xmm0
    000008d8: 	cmpq	%rax, %rbx
    000008db: 	jne	.Ltmp2129 # Offset: 2267
    000008dd: 	pxor	%xmm2, %xmm2
    000008e1: 	movaps	0x20(%rsp), %xmm7
    000008e6: 	movaps	%xmm0, %xmm1
    000008e9: 	cvtsd2ss	init_value(%rip), %xmm2
    000008f1: 	mulss	0xc(%rsp), %xmm2
    000008f7: 	andps	%xmm0, %xmm7
    000008fa: 	subss	%xmm2, %xmm1
    000008fe: 	pxor	%xmm2, %xmm2
    00000902: 	cvtss2sd	%xmm7, %xmm2
    00000906: 	comisd	(%rsp), %xmm2
    0000090b: 	jbe	.Ltmp2130 # Offset: 2315
    0000090d: 	divss	%xmm0, %xmm1
.Ltmp2130:
    00000911: 	movsd	0x30(%rsp), %xmm7
    00000917: 	cvtss2sd	%xmm1, %xmm1
    0000091b: 	andpd	0x10(%rsp), %xmm1
    00000921: 	comisd	%xmm1, %xmm7
    00000925: 	jbe	.Ltmp2131 # Offset: 2341
.Ltmp2269:
    0000092b: 	addl	$0x1, %r13d
    0000092f: 	cmpl	%edx, %r13d
    00000932: 	jl	.Ltmp2132 # Offset: 2354
.Ltmp2128:
    00000938: 	movq	%r12, %rdi
    0000093b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2363
    00000940: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000947: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000094e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000955: 	je	.Ltmp2133 # Offset: 2389
.Ltmp2274:
    0000095b: 	movq	-0x20(%rax), %r13
    0000095f: 	callq	clock@PLT # Offset: 2399
    00000964: 	pxor	%xmm0, %xmm0
    00000968: 	movq	%rax, end_time(%rip)
    0000096f: 	movq	%r13, %rdi
    00000972: 	subq	start_time(%rip), %rax
    00000979: 	cvtsi2sd	%rax, %xmm0
    0000097e: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000986: 	callq	_Z13record_resultdPKc # Offset: 2438
    0000098b: 	movq	0x90(%rsp), %rdi
    00000993: 	cmpq	0x38(%rsp), %rdi
    00000998: 	je	.Ltmp2134 # Offset: 2456
    0000099a: 	movq	0xa0(%rsp), %rax
    000009a2: 	leaq	0x1(%rax), %rsi
    000009a6: 	callq	_ZdlPvm@PLT # Offset: 2470
.Ltmp2134:
    000009ab: 	leaq	DATAat0x1a215(%rip), %rdx
    000009b2: 	movq	%r15, %rsi
    000009b5: 	movq	%r12, %rdi
    000009b8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2488
    000009bd: 	callq	clock@PLT # Offset: 2493
    000009c2: 	movl	iterations(%rip), %edx
    000009c8: 	movq	%rax, start_time(%rip)
    000009cf: 	testl	%edx, %edx
    000009d1: 	jle	.Ltmp2135 # Offset: 2513
    000009d7: 	pxor	%xmm4, %xmm4
    000009db: 	movss	DATAat0x1a350(%rip), %xmm5
    000009e3: 	movsd	DATAat0x1a320(%rip), %xmm3
    000009eb: 	movss	DATAat0x1a370(%rip), %xmm7
    000009f3: 	movq	DATAat0x1a360(%rip), %xmm6
    000009fb: 	movss	%xmm4, 0x8(%rsp)
    00000a01: 	xorl	%r13d, %r13d
    00000a04: 	movsd	DATAat0x1a340(%rip), %xmm4
    00000a0c: 	movss	%xmm5, 0xc(%rsp)
    00000a12: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000a19: 	movaps	%xmm7, 0x20(%rsp)
    00000a1e: 	movsd	%xmm3, (%rsp)
    00000a23: 	movaps	%xmm6, 0x10(%rsp)
    00000a28: 	movsd	%xmm4, 0x30(%rsp)
    00000a2e: 	nop # Size: 2
.Ltmp2139:
    00000a30: 	movq	%rbp, %rax
    00000a33: 	pxor	%xmm0, %xmm0
    00000a37: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2136:
    00000a40: 	movaps	(%rax), %xmm2
    00000a43: 	addq	$0x10, %rax
    00000a47: 	addss	%xmm2, %xmm0
    00000a4b: 	movaps	%xmm2, %xmm1
    00000a4e: 	shufps	$0x55, %xmm2, %xmm1
    00000a52: 	addss	%xmm0, %xmm1
    00000a56: 	movaps	%xmm2, %xmm0
    00000a59: 	unpckhps	%xmm2, %xmm0
    00000a5c: 	shufps	$0xff, %xmm2, %xmm2
    00000a60: 	addss	%xmm1, %xmm0
    00000a64: 	addss	%xmm2, %xmm0
    00000a68: 	cmpq	%rbx, %rax
    00000a6b: 	jne	.Ltmp2136 # Offset: 2667
    00000a6d: 	pxor	%xmm2, %xmm2
    00000a71: 	movaps	0x20(%rsp), %xmm3
    00000a76: 	movaps	%xmm0, %xmm1
    00000a79: 	cvtsd2ss	init_value(%rip), %xmm2
    00000a81: 	mulss	0xc(%rsp), %xmm2
    00000a87: 	andps	%xmm0, %xmm3
    00000a8a: 	subss	%xmm2, %xmm1
    00000a8e: 	pxor	%xmm2, %xmm2
    00000a92: 	cvtss2sd	%xmm3, %xmm2
    00000a96: 	comisd	(%rsp), %xmm2
    00000a9b: 	jbe	.Ltmp2137 # Offset: 2715
    00000a9d: 	divss	%xmm0, %xmm1
.Ltmp2137:
    00000aa1: 	movsd	0x30(%rsp), %xmm6
    00000aa7: 	cvtss2sd	%xmm1, %xmm1
    00000aab: 	andpd	0x10(%rsp), %xmm1
    00000ab1: 	comisd	%xmm1, %xmm6
    00000ab5: 	jbe	.Ltmp2138 # Offset: 2741
.Ltmp2268:
    00000abb: 	addl	$0x1, %r13d
    00000abf: 	cmpl	%edx, %r13d
    00000ac2: 	jl	.Ltmp2139 # Offset: 2754
.Ltmp2135:
    00000ac8: 	movq	%r12, %rdi
    00000acb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2763
    00000ad0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ad7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000ade: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ae5: 	je	.Ltmp2140 # Offset: 2789
.Ltmp2273:
    00000aeb: 	movq	-0x20(%rax), %r13
    00000aef: 	callq	clock@PLT # Offset: 2799
    00000af4: 	pxor	%xmm0, %xmm0
    00000af8: 	movq	%rax, end_time(%rip)
    00000aff: 	movq	%r13, %rdi
    00000b02: 	subq	start_time(%rip), %rax
    00000b09: 	cvtsi2sd	%rax, %xmm0
    00000b0e: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000b16: 	callq	_Z13record_resultdPKc # Offset: 2838
    00000b1b: 	movq	0x90(%rsp), %rdi
    00000b23: 	cmpq	0x38(%rsp), %rdi
    00000b28: 	je	.Ltmp2141 # Offset: 2856
    00000b2a: 	movq	0xa0(%rsp), %rax
    00000b32: 	leaq	0x1(%rax), %rsi
    00000b36: 	callq	_ZdlPvm@PLT # Offset: 2870
.Ltmp2141:
    00000b3b: 	leaq	DATAat0x1a226(%rip), %rdx
    00000b42: 	movq	%r15, %rsi
    00000b45: 	movq	%r12, %rdi
    00000b48: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2888
    00000b4d: 	callq	clock@PLT # Offset: 2893
    00000b52: 	movl	iterations(%rip), %edx
    00000b58: 	movq	%rax, start_time(%rip)
    00000b5f: 	testl	%edx, %edx
    00000b61: 	jle	.Ltmp2142 # Offset: 2913
    00000b67: 	pxor	%xmm5, %xmm5
    00000b6b: 	movss	DATAat0x1a350(%rip), %xmm7
    00000b73: 	movsd	DATAat0x1a320(%rip), %xmm6
    00000b7b: 	movss	DATAat0x1a370(%rip), %xmm3
    00000b83: 	movq	DATAat0x1a360(%rip), %xmm4
    00000b8b: 	movss	%xmm5, 0x8(%rsp)
    00000b91: 	xorl	%r13d, %r13d
    00000b94: 	movsd	DATAat0x1a340(%rip), %xmm5
    00000b9c: 	movss	%xmm7, 0xc(%rsp)
    00000ba2: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000ba9: 	movaps	%xmm3, 0x20(%rsp)
    00000bae: 	movsd	%xmm6, (%rsp)
    00000bb3: 	movaps	%xmm4, 0x10(%rsp)
    00000bb8: 	movsd	%xmm5, 0x30(%rsp)
    00000bbe: 	nop # Size: 2
.Ltmp2146:
    00000bc0: 	movq	%rbp, %rax
    00000bc3: 	pxor	%xmm0, %xmm0
    00000bc7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2143:
    00000bd0: 	movaps	(%rax), %xmm2
    00000bd3: 	addq	$0x10, %rax
    00000bd7: 	addss	%xmm2, %xmm0
    00000bdb: 	movaps	%xmm2, %xmm1
    00000bde: 	shufps	$0x55, %xmm2, %xmm1
    00000be2: 	addss	%xmm0, %xmm1
    00000be6: 	movaps	%xmm2, %xmm0
    00000be9: 	unpckhps	%xmm2, %xmm0
    00000bec: 	shufps	$0xff, %xmm2, %xmm2
    00000bf0: 	addss	%xmm1, %xmm0
    00000bf4: 	addss	%xmm2, %xmm0
    00000bf8: 	cmpq	%rbx, %rax
    00000bfb: 	jne	.Ltmp2143 # Offset: 3067
    00000bfd: 	pxor	%xmm2, %xmm2
    00000c01: 	movaps	0x20(%rsp), %xmm4
    00000c06: 	movaps	%xmm0, %xmm1
    00000c09: 	cvtsd2ss	init_value(%rip), %xmm2
    00000c11: 	mulss	0xc(%rsp), %xmm2
    00000c17: 	andps	%xmm0, %xmm4
    00000c1a: 	subss	%xmm2, %xmm1
    00000c1e: 	pxor	%xmm2, %xmm2
    00000c22: 	cvtss2sd	%xmm4, %xmm2
    00000c26: 	comisd	(%rsp), %xmm2
    00000c2b: 	jbe	.Ltmp2144 # Offset: 3115
    00000c2d: 	divss	%xmm0, %xmm1
.Ltmp2144:
    00000c31: 	movsd	0x30(%rsp), %xmm5
    00000c37: 	cvtss2sd	%xmm1, %xmm1
    00000c3b: 	andpd	0x10(%rsp), %xmm1
    00000c41: 	comisd	%xmm1, %xmm5
    00000c45: 	jbe	.Ltmp2145 # Offset: 3141
.Ltmp2267:
    00000c4b: 	addl	$0x1, %r13d
    00000c4f: 	cmpl	%edx, %r13d
    00000c52: 	jl	.Ltmp2146 # Offset: 3154
.Ltmp2142:
    00000c58: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000c5f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000c66: 	subq	$0x20, %rax
    00000c6a: 	cmpq	%rax, %r14
    00000c6d: 	je	.Ltmp2147 # Offset: 3181
    00000c73: 	leaq	0x10(%r14), %rdi
    00000c77: 	movq	0x98(%rsp), %r13
    00000c7f: 	movq	%rdi, (%r14)
    00000c82: 	movq	0x90(%rsp), %rax
    00000c8a: 	movq	%rax, %rcx
    00000c8d: 	movq	%rax, (%rsp)
    00000c91: 	addq	%r13, %rcx
    00000c94: 	je	.Ltmp2148 # Offset: 3220
    00000c96: 	testq	%rax, %rax
    00000c99: 	je	.Ltmp2149 # Offset: 3225
.Ltmp2148:
    00000c9f: 	movq	%r13, 0x50(%rsp)
    00000ca4: 	cmpq	$0xf, %r13
    00000ca8: 	ja	.Ltmp2150 # Offset: 3240
    00000cae: 	cmpq	$0x1, %r13
    00000cb2: 	jne	.Ltmp2151 # Offset: 3250
    00000cb8: 	movq	(%rsp), %rax
    00000cbc: 	movzbl	(%rax), %eax
    00000cbf: 	movb	%al, 0x10(%r14)
.Ltmp2301:
    00000cc3: 	movq	%r13, 0x8(%r14)
    00000cc7: 	movb	$0x0, (%rdi,%r13)
    00000ccc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000cd3: 	addq	$0x20, %rax
    00000cd7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2277:
    00000cde: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ce5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000cec: 	je	.Ltmp2152 # Offset: 3308
.Ltmp2276:
    00000cf2: 	movq	-0x20(%rax), %r13
    00000cf6: 	callq	clock@PLT # Offset: 3318
    00000cfb: 	pxor	%xmm0, %xmm0
    00000cff: 	movq	%rax, end_time(%rip)
    00000d06: 	movq	%r13, %rdi
    00000d09: 	subq	start_time(%rip), %rax
    00000d10: 	cvtsi2sd	%rax, %xmm0
    00000d15: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d1d: 	callq	_Z13record_resultdPKc # Offset: 3357
    00000d22: 	movq	0x90(%rsp), %rdi
    00000d2a: 	cmpq	0x38(%rsp), %rdi
    00000d2f: 	je	.Ltmp2153 # Offset: 3375
    00000d31: 	movq	0xa0(%rsp), %rax
    00000d39: 	leaq	0x1(%rax), %rsi
    00000d3d: 	callq	_ZdlPvm@PLT # Offset: 3389
.Ltmp2153:
    00000d42: 	leaq	DATAat0x1a238(%rip), %rdx
    00000d49: 	movq	%r15, %rsi
    00000d4c: 	movq	%r12, %rdi
    00000d4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3407
    00000d54: 	callq	clock@PLT # Offset: 3412
    00000d59: 	movl	iterations(%rip), %edx
    00000d5f: 	movq	%rax, start_time(%rip)
    00000d66: 	testl	%edx, %edx
    00000d68: 	jle	.Ltmp2154 # Offset: 3432
    00000d6e: 	pxor	%xmm7, %xmm7
    00000d72: 	movss	DATAat0x1a350(%rip), %xmm3
    00000d7a: 	movsd	DATAat0x1a320(%rip), %xmm4
    00000d82: 	movss	DATAat0x1a370(%rip), %xmm6
    00000d8a: 	movq	DATAat0x1a360(%rip), %xmm5
    00000d92: 	movss	%xmm7, 0x8(%rsp)
    00000d98: 	xorl	%r13d, %r13d
    00000d9b: 	movsd	DATAat0x1a340(%rip), %xmm7
    00000da3: 	movss	%xmm3, 0xc(%rsp)
    00000da9: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000db0: 	movaps	%xmm6, 0x20(%rsp)
    00000db5: 	movsd	%xmm4, (%rsp)
    00000dba: 	movaps	%xmm5, 0x10(%rsp)
    00000dbf: 	movsd	%xmm7, 0x30(%rsp)
    00000dc5: 	nopl	(%rax) # Size: 3
.Ltmp2158:
    00000dc8: 	movq	%rbp, %rax
    00000dcb: 	pxor	%xmm0, %xmm0
    00000dcf: 	nop # Size: 1
.Ltmp2155:
    00000dd0: 	movaps	(%rax), %xmm2
    00000dd3: 	addq	$0x10, %rax
    00000dd7: 	addss	%xmm2, %xmm0
    00000ddb: 	movaps	%xmm2, %xmm1
    00000dde: 	shufps	$0x55, %xmm2, %xmm1
    00000de2: 	addss	%xmm0, %xmm1
    00000de6: 	movaps	%xmm2, %xmm0
    00000de9: 	unpckhps	%xmm2, %xmm0
    00000dec: 	shufps	$0xff, %xmm2, %xmm2
    00000df0: 	addss	%xmm1, %xmm0
    00000df4: 	addss	%xmm2, %xmm0
    00000df8: 	cmpq	%rbx, %rax
    00000dfb: 	jne	.Ltmp2155 # Offset: 3579
    00000dfd: 	pxor	%xmm2, %xmm2
    00000e01: 	movaps	0x20(%rsp), %xmm5
    00000e06: 	movaps	%xmm0, %xmm1
    00000e09: 	cvtsd2ss	init_value(%rip), %xmm2
    00000e11: 	mulss	0xc(%rsp), %xmm2
    00000e17: 	andps	%xmm0, %xmm5
    00000e1a: 	subss	%xmm2, %xmm1
    00000e1e: 	pxor	%xmm2, %xmm2
    00000e22: 	cvtss2sd	%xmm5, %xmm2
    00000e26: 	comisd	(%rsp), %xmm2
    00000e2b: 	jbe	.Ltmp2156 # Offset: 3627
    00000e2d: 	divss	%xmm0, %xmm1
.Ltmp2156:
    00000e31: 	movsd	0x30(%rsp), %xmm4
    00000e37: 	cvtss2sd	%xmm1, %xmm1
    00000e3b: 	andpd	0x10(%rsp), %xmm1
    00000e41: 	comisd	%xmm1, %xmm4
    00000e45: 	jbe	.Ltmp2157 # Offset: 3653
.Ltmp2266:
    00000e4b: 	addl	$0x1, %r13d
    00000e4f: 	cmpl	%edx, %r13d
    00000e52: 	jl	.Ltmp2158 # Offset: 3666
.Ltmp2154:
    00000e58: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000e5f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000e66: 	subq	$0x20, %rax
    00000e6a: 	cmpq	%rax, %r14
    00000e6d: 	je	.Ltmp2159 # Offset: 3693
    00000e73: 	leaq	0x10(%r14), %rdi
    00000e77: 	movq	0x98(%rsp), %r13
    00000e7f: 	movq	%rdi, (%r14)
    00000e82: 	movq	0x90(%rsp), %rax
    00000e8a: 	movq	%rax, %rcx
    00000e8d: 	movq	%rax, (%rsp)
    00000e91: 	addq	%r13, %rcx
    00000e94: 	je	.Ltmp2160 # Offset: 3732
    00000e96: 	testq	%rax, %rax
    00000e99: 	je	.Ltmp2161 # Offset: 3737
.Ltmp2160:
    00000e9f: 	movq	%r13, 0x50(%rsp)
    00000ea4: 	cmpq	$0xf, %r13
    00000ea8: 	ja	.Ltmp2162 # Offset: 3752
    00000eae: 	cmpq	$0x1, %r13
    00000eb2: 	jne	.Ltmp2163 # Offset: 3762
    00000eb8: 	movq	(%rsp), %rax
    00000ebc: 	movzbl	(%rax), %eax
    00000ebf: 	movb	%al, 0x10(%r14)
.Ltmp2296:
    00000ec3: 	movq	%r13, 0x8(%r14)
    00000ec7: 	movb	$0x0, (%rdi,%r13)
    00000ecc: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000ed3: 	addq	$0x20, %rax
    00000ed7: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2275:
    00000ede: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000ee5: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000eec: 	je	.Ltmp2164 # Offset: 3820
.Ltmp2272:
    00000ef2: 	movq	-0x20(%rax), %r13
    00000ef6: 	callq	clock@PLT # Offset: 3830
    00000efb: 	pxor	%xmm0, %xmm0
    00000eff: 	movq	%rax, end_time(%rip)
    00000f06: 	movq	%r13, %rdi
    00000f09: 	subq	start_time(%rip), %rax
    00000f10: 	cvtsi2sd	%rax, %xmm0
    00000f15: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000f1d: 	callq	_Z13record_resultdPKc # Offset: 3869
    00000f22: 	movq	0x90(%rsp), %rdi
    00000f2a: 	cmpq	0x38(%rsp), %rdi
    00000f2f: 	je	.Ltmp2165 # Offset: 3887
    00000f31: 	movq	0xa0(%rsp), %rax
    00000f39: 	leaq	0x1(%rax), %rsi
    00000f3d: 	callq	_ZdlPvm@PLT # Offset: 3901
.Ltmp2165:
    00000f42: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000f49: 	movq	%r15, %rsi
    00000f4c: 	movq	%r12, %rdi
    00000f4f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3919
    00000f54: 	callq	clock@PLT # Offset: 3924
    00000f59: 	movl	iterations(%rip), %edx
    00000f5f: 	movq	%rax, start_time(%rip)
    00000f66: 	testl	%edx, %edx
    00000f68: 	jle	.Ltmp2166 # Offset: 3944
    00000f6e: 	pxor	%xmm3, %xmm3
    00000f72: 	movss	DATAat0x1a350(%rip), %xmm6
    00000f7a: 	movsd	DATAat0x1a320(%rip), %xmm5
    00000f82: 	movss	DATAat0x1a370(%rip), %xmm4
    00000f8a: 	movq	DATAat0x1a360(%rip), %xmm7
    00000f92: 	movss	%xmm3, 0x8(%rsp)
    00000f98: 	xorl	%r13d, %r13d
    00000f9b: 	movsd	DATAat0x1a340(%rip), %xmm3
    00000fa3: 	movss	%xmm6, 0xc(%rsp)
    00000fa9: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000fb0: 	movaps	%xmm4, 0x20(%rsp)
    00000fb5: 	movsd	%xmm5, (%rsp)
    00000fba: 	movaps	%xmm7, 0x10(%rsp)
    00000fbf: 	movsd	%xmm3, 0x30(%rsp)
    00000fc5: 	nopl	(%rax) # Size: 3
.Ltmp2170:
    00000fc8: 	movq	%rbp, %rax
    00000fcb: 	pxor	%xmm0, %xmm0
    00000fcf: 	nop # Size: 1
.Ltmp2167:
    00000fd0: 	movaps	(%rax), %xmm2
    00000fd3: 	addq	$0x10, %rax
    00000fd7: 	addss	%xmm2, %xmm0
    00000fdb: 	movaps	%xmm2, %xmm1
    00000fde: 	shufps	$0x55, %xmm2, %xmm1
    00000fe2: 	addss	%xmm0, %xmm1
    00000fe6: 	movaps	%xmm2, %xmm0
    00000fe9: 	unpckhps	%xmm2, %xmm0
    00000fec: 	shufps	$0xff, %xmm2, %xmm2
    00000ff0: 	addss	%xmm1, %xmm0
    00000ff4: 	addss	%xmm2, %xmm0
    00000ff8: 	cmpq	%rax, %rbx
    00000ffb: 	jne	.Ltmp2167 # Offset: 4091
    00000ffd: 	pxor	%xmm2, %xmm2
    00001001: 	movaps	0x20(%rsp), %xmm6
    00001006: 	movaps	%xmm0, %xmm1
    00001009: 	cvtsd2ss	init_value(%rip), %xmm2
    00001011: 	mulss	0xc(%rsp), %xmm2
    00001017: 	andps	%xmm0, %xmm6
    0000101a: 	subss	%xmm2, %xmm1
    0000101e: 	pxor	%xmm2, %xmm2
    00001022: 	cvtss2sd	%xmm6, %xmm2
    00001026: 	comisd	(%rsp), %xmm2
    0000102b: 	jbe	.Ltmp2168 # Offset: 4139
    0000102d: 	divss	%xmm0, %xmm1
.Ltmp2168:
    00001031: 	movsd	0x30(%rsp), %xmm3
    00001037: 	cvtss2sd	%xmm1, %xmm1
    0000103b: 	andpd	0x10(%rsp), %xmm1
    00001041: 	comisd	%xmm1, %xmm3
    00001045: 	jbe	.Ltmp2169 # Offset: 4165
.Ltmp2265:
    0000104b: 	addl	$0x1, %r13d
    0000104f: 	cmpl	%edx, %r13d
    00001052: 	jl	.Ltmp2170 # Offset: 4178
.Ltmp2166:
    00001058: 	movq	%r12, %rdi
    0000105b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4187
    00001060: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001067: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000106e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001075: 	je	.Ltmp2171 # Offset: 4213
.Ltmp2271:
    0000107b: 	movq	-0x20(%rax), %r13
    0000107f: 	callq	clock@PLT # Offset: 4223
    00001084: 	pxor	%xmm0, %xmm0
    00001088: 	movq	%rax, end_time(%rip)
    0000108f: 	movq	%r13, %rdi
    00001092: 	subq	start_time(%rip), %rax
    00001099: 	cvtsi2sd	%rax, %xmm0
    0000109e: 	divsd	DATAat0x1a318(%rip), %xmm0
    000010a6: 	callq	_Z13record_resultdPKc # Offset: 4262
    000010ab: 	movq	0x90(%rsp), %rdi
    000010b3: 	cmpq	0x38(%rsp), %rdi
    000010b8: 	je	.Ltmp2172 # Offset: 4280
    000010ba: 	movq	0xa0(%rsp), %rax
    000010c2: 	leaq	0x1(%rax), %rsi
    000010c6: 	callq	_ZdlPvm@PLT # Offset: 4294
.Ltmp2172:
    000010cb: 	leaq	DATAat0x1a25c(%rip), %rdx
    000010d2: 	movq	%r15, %rsi
    000010d5: 	movq	%r12, %rdi
    000010d8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4312
    000010dd: 	callq	clock@PLT # Offset: 4317
    000010e2: 	movl	iterations(%rip), %edx
    000010e8: 	movq	%rax, start_time(%rip)
    000010ef: 	testl	%edx, %edx
    000010f1: 	jle	.Ltmp2173 # Offset: 4337
    000010f7: 	pxor	%xmm6, %xmm6
    000010fb: 	movss	DATAat0x1a350(%rip), %xmm4
    00001103: 	movsd	DATAat0x1a320(%rip), %xmm7
    0000110b: 	movss	DATAat0x1a370(%rip), %xmm5
    00001113: 	movq	DATAat0x1a360(%rip), %xmm3
    0000111b: 	movss	%xmm6, 0x8(%rsp)
    00001121: 	xorl	%r13d, %r13d
    00001124: 	movsd	DATAat0x1a340(%rip), %xmm6
    0000112c: 	movss	%xmm4, 0xc(%rsp)
    00001132: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001139: 	movaps	%xmm5, 0x20(%rsp)
    0000113e: 	movsd	%xmm7, (%rsp)
    00001143: 	movaps	%xmm3, 0x10(%rsp)
    00001148: 	movsd	%xmm6, 0x30(%rsp)
    0000114e: 	nop # Size: 2
.Ltmp2177:
    00001150: 	movq	%rbp, %rax
    00001153: 	pxor	%xmm0, %xmm0
    00001157: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2174:
    00001160: 	movaps	(%rax), %xmm2
    00001163: 	addq	$0x10, %rax
    00001167: 	addss	%xmm2, %xmm0
    0000116b: 	movaps	%xmm2, %xmm1
    0000116e: 	shufps	$0x55, %xmm2, %xmm1
    00001172: 	addss	%xmm0, %xmm1
    00001176: 	movaps	%xmm2, %xmm0
    00001179: 	unpckhps	%xmm2, %xmm0
    0000117c: 	shufps	$0xff, %xmm2, %xmm2
    00001180: 	addss	%xmm1, %xmm0
    00001184: 	addss	%xmm2, %xmm0
    00001188: 	cmpq	%rbx, %rax
    0000118b: 	jne	.Ltmp2174 # Offset: 4491
    0000118d: 	pxor	%xmm2, %xmm2
    00001191: 	movaps	0x20(%rsp), %xmm7
    00001196: 	movaps	%xmm0, %xmm1
    00001199: 	cvtsd2ss	init_value(%rip), %xmm2
    000011a1: 	mulss	0xc(%rsp), %xmm2
    000011a7: 	andps	%xmm0, %xmm7
    000011aa: 	subss	%xmm2, %xmm1
    000011ae: 	pxor	%xmm2, %xmm2
    000011b2: 	cvtss2sd	%xmm7, %xmm2
    000011b6: 	comisd	(%rsp), %xmm2
    000011bb: 	jbe	.Ltmp2175 # Offset: 4539
    000011bd: 	divss	%xmm0, %xmm1
.Ltmp2175:
    000011c1: 	movsd	0x30(%rsp), %xmm7
    000011c7: 	cvtss2sd	%xmm1, %xmm1
    000011cb: 	andpd	0x10(%rsp), %xmm1
    000011d1: 	comisd	%xmm1, %xmm7
    000011d5: 	jbe	.Ltmp2176 # Offset: 4565
.Ltmp2262:
    000011db: 	addl	$0x1, %r13d
    000011df: 	cmpl	%edx, %r13d
    000011e2: 	jl	.Ltmp2177 # Offset: 4578
.Ltmp2173:
    000011e8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000011ef: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000011f6: 	subq	$0x20, %rax
    000011fa: 	cmpq	%rax, %r14
    000011fd: 	je	.Ltmp2178 # Offset: 4605
    00001203: 	leaq	0x10(%r14), %rdi
    00001207: 	movq	0x98(%rsp), %r13
    0000120f: 	movq	%rdi, (%r14)
    00001212: 	movq	0x90(%rsp), %rax
    0000121a: 	movq	%rax, %rcx
    0000121d: 	movq	%rax, (%rsp)
    00001221: 	addq	%r13, %rcx
    00001224: 	je	.Ltmp2179 # Offset: 4644
    00001226: 	testq	%rax, %rax
    00001229: 	je	.Ltmp2180 # Offset: 4649
.Ltmp2179:
    0000122f: 	movq	%r13, 0x50(%rsp)
    00001234: 	cmpq	$0xf, %r13
    00001238: 	ja	.Ltmp2181 # Offset: 4664
    0000123e: 	cmpq	$0x1, %r13
    00001242: 	jne	.Ltmp2182 # Offset: 4674
    00001248: 	movq	(%rsp), %rax
    0000124c: 	movzbl	(%rax), %eax
    0000124f: 	movb	%al, 0x10(%r14)
.Ltmp2300:
    00001253: 	movq	%r13, 0x8(%r14)
    00001257: 	movb	$0x0, (%rdi,%r13)
    0000125c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001263: 	addq	$0x20, %rax
    00001267: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2288:
    0000126e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001275: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000127c: 	je	.Ltmp2183 # Offset: 4732
.Ltmp2282:
    00001282: 	movq	-0x20(%rax), %r13
    00001286: 	callq	clock@PLT # Offset: 4742
    0000128b: 	pxor	%xmm0, %xmm0
    0000128f: 	movq	%rax, end_time(%rip)
    00001296: 	movq	%r13, %rdi
    00001299: 	subq	start_time(%rip), %rax
    000012a0: 	cvtsi2sd	%rax, %xmm0
    000012a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000012ad: 	callq	_Z13record_resultdPKc # Offset: 4781
    000012b2: 	movq	0x90(%rsp), %rdi
    000012ba: 	cmpq	0x38(%rsp), %rdi
    000012bf: 	je	.Ltmp2184 # Offset: 4799
    000012c1: 	movq	0xa0(%rsp), %rax
    000012c9: 	leaq	0x1(%rax), %rsi
    000012cd: 	callq	_ZdlPvm@PLT # Offset: 4813
.Ltmp2184:
    000012d2: 	leaq	DATAat0x1a26b(%rip), %rdx
    000012d9: 	movq	%r15, %rsi
    000012dc: 	movq	%r12, %rdi
    000012df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4831
    000012e4: 	callq	clock@PLT # Offset: 4836
    000012e9: 	movl	iterations(%rip), %edx
    000012ef: 	movq	%rax, start_time(%rip)
    000012f6: 	testl	%edx, %edx
    000012f8: 	jle	.Ltmp2185 # Offset: 4856
    000012fe: 	pxor	%xmm4, %xmm4
    00001302: 	movss	DATAat0x1a350(%rip), %xmm5
    0000130a: 	movsd	DATAat0x1a320(%rip), %xmm3
    00001312: 	movss	DATAat0x1a370(%rip), %xmm7
    0000131a: 	movq	DATAat0x1a360(%rip), %xmm6
    00001322: 	movss	%xmm4, 0x8(%rsp)
    00001328: 	xorl	%r13d, %r13d
    0000132b: 	movsd	DATAat0x1a340(%rip), %xmm4
    00001333: 	movss	%xmm5, 0xc(%rsp)
    00001339: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001340: 	movaps	%xmm7, 0x20(%rsp)
    00001345: 	movsd	%xmm3, (%rsp)
    0000134a: 	movaps	%xmm6, 0x10(%rsp)
    0000134f: 	movsd	%xmm4, 0x30(%rsp)
    00001355: 	nopl	(%rax) # Size: 3
.Ltmp2189:
    00001358: 	movq	%rbp, %rax
    0000135b: 	pxor	%xmm0, %xmm0
    0000135f: 	nop # Size: 1
.Ltmp2186:
    00001360: 	movaps	(%rax), %xmm2
    00001363: 	addq	$0x10, %rax
    00001367: 	addss	%xmm2, %xmm0
    0000136b: 	movaps	%xmm2, %xmm1
    0000136e: 	shufps	$0x55, %xmm2, %xmm1
    00001372: 	addss	%xmm0, %xmm1
    00001376: 	movaps	%xmm2, %xmm0
    00001379: 	unpckhps	%xmm2, %xmm0
    0000137c: 	shufps	$0xff, %xmm2, %xmm2
    00001380: 	addss	%xmm1, %xmm0
    00001384: 	addss	%xmm2, %xmm0
    00001388: 	cmpq	%rbx, %rax
    0000138b: 	jne	.Ltmp2186 # Offset: 5003
    0000138d: 	pxor	%xmm2, %xmm2
    00001391: 	movaps	0x20(%rsp), %xmm3
    00001396: 	movaps	%xmm0, %xmm1
    00001399: 	cvtsd2ss	init_value(%rip), %xmm2
    000013a1: 	mulss	0xc(%rsp), %xmm2
    000013a7: 	andps	%xmm0, %xmm3
    000013aa: 	subss	%xmm2, %xmm1
    000013ae: 	pxor	%xmm2, %xmm2
    000013b2: 	cvtss2sd	%xmm3, %xmm2
    000013b6: 	comisd	(%rsp), %xmm2
    000013bb: 	jbe	.Ltmp2187 # Offset: 5051
    000013bd: 	divss	%xmm0, %xmm1
.Ltmp2187:
    000013c1: 	movsd	0x30(%rsp), %xmm6
    000013c7: 	cvtss2sd	%xmm1, %xmm1
    000013cb: 	andpd	0x10(%rsp), %xmm1
    000013d1: 	comisd	%xmm1, %xmm6
    000013d5: 	jbe	.Ltmp2188 # Offset: 5077
.Ltmp2261:
    000013db: 	addl	$0x1, %r13d
    000013df: 	cmpl	%edx, %r13d
    000013e2: 	jl	.Ltmp2189 # Offset: 5090
.Ltmp2185:
    000013e8: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000013ef: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000013f6: 	subq	$0x20, %rax
    000013fa: 	cmpq	%rax, %r14
    000013fd: 	je	.Ltmp2190 # Offset: 5117
    00001403: 	leaq	0x10(%r14), %rdi
    00001407: 	movq	0x98(%rsp), %r13
    0000140f: 	movq	%rdi, (%r14)
    00001412: 	movq	0x90(%rsp), %rax
    0000141a: 	movq	%rax, %rcx
    0000141d: 	movq	%rax, (%rsp)
    00001421: 	addq	%r13, %rcx
    00001424: 	je	.Ltmp2191 # Offset: 5156
    00001426: 	testq	%rax, %rax
    00001429: 	je	.Ltmp2192 # Offset: 5161
.Ltmp2191:
    0000142f: 	movq	%r13, 0x50(%rsp)
    00001434: 	cmpq	$0xf, %r13
    00001438: 	ja	.Ltmp2193 # Offset: 5176
    0000143e: 	cmpq	$0x1, %r13
    00001442: 	jne	.Ltmp2194 # Offset: 5186
    00001448: 	movq	(%rsp), %rax
    0000144c: 	movzbl	(%rax), %eax
    0000144f: 	movb	%al, 0x10(%r14)
.Ltmp2299:
    00001453: 	movq	%r13, 0x8(%r14)
    00001457: 	movb	$0x0, (%rdi,%r13)
    0000145c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001463: 	addq	$0x20, %rax
    00001467: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2283:
    0000146e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001475: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000147c: 	je	.Ltmp2195 # Offset: 5244
.Ltmp2280:
    00001482: 	movq	-0x20(%rax), %r13
    00001486: 	callq	clock@PLT # Offset: 5254
    0000148b: 	pxor	%xmm0, %xmm0
    0000148f: 	movq	%rax, end_time(%rip)
    00001496: 	movq	%r13, %rdi
    00001499: 	subq	start_time(%rip), %rax
    000014a0: 	cvtsi2sd	%rax, %xmm0
    000014a5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000014ad: 	callq	_Z13record_resultdPKc # Offset: 5293
    000014b2: 	movq	0x90(%rsp), %rdi
    000014ba: 	cmpq	0x38(%rsp), %rdi
    000014bf: 	je	.Ltmp2196 # Offset: 5311
    000014c1: 	movq	0xa0(%rsp), %rax
    000014c9: 	leaq	0x1(%rax), %rsi
    000014cd: 	callq	_ZdlPvm@PLT # Offset: 5325
.Ltmp2196:
    000014d2: 	leaq	DATAat0x1a27b(%rip), %rdx
    000014d9: 	movq	%r15, %rsi
    000014dc: 	movq	%r12, %rdi
    000014df: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5343
    000014e4: 	callq	clock@PLT # Offset: 5348
    000014e9: 	movl	iterations(%rip), %edx
    000014ef: 	movq	%rax, start_time(%rip)
    000014f6: 	testl	%edx, %edx
    000014f8: 	jle	.Ltmp2197 # Offset: 5368
    000014fe: 	pxor	%xmm5, %xmm5
    00001502: 	movss	DATAat0x1a350(%rip), %xmm7
    0000150a: 	movsd	DATAat0x1a320(%rip), %xmm6
    00001512: 	movss	DATAat0x1a370(%rip), %xmm3
    0000151a: 	movq	DATAat0x1a360(%rip), %xmm4
    00001522: 	movss	%xmm5, 0x8(%rsp)
    00001528: 	xorl	%r13d, %r13d
    0000152b: 	movsd	DATAat0x1a340(%rip), %xmm5
    00001533: 	movss	%xmm7, 0xc(%rsp)
    00001539: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001540: 	movaps	%xmm3, 0x20(%rsp)
    00001545: 	movsd	%xmm6, (%rsp)
    0000154a: 	movaps	%xmm4, 0x10(%rsp)
    0000154f: 	movsd	%xmm5, 0x30(%rsp)
    00001555: 	nopl	(%rax) # Size: 3
.Ltmp2201:
    00001558: 	movq	%rbp, %rax
    0000155b: 	pxor	%xmm0, %xmm0
    0000155f: 	nop # Size: 1
.Ltmp2198:
    00001560: 	movaps	(%rax), %xmm2
    00001563: 	addq	$0x10, %rax
    00001567: 	addss	%xmm2, %xmm0
    0000156b: 	movaps	%xmm2, %xmm1
    0000156e: 	shufps	$0x55, %xmm2, %xmm1
    00001572: 	addss	%xmm0, %xmm1
    00001576: 	movaps	%xmm2, %xmm0
    00001579: 	unpckhps	%xmm2, %xmm0
    0000157c: 	shufps	$0xff, %xmm2, %xmm2
    00001580: 	addss	%xmm1, %xmm0
    00001584: 	addss	%xmm2, %xmm0
    00001588: 	cmpq	%rbx, %rax
    0000158b: 	jne	.Ltmp2198 # Offset: 5515
    0000158d: 	pxor	%xmm2, %xmm2
    00001591: 	movaps	0x20(%rsp), %xmm4
    00001596: 	movaps	%xmm0, %xmm1
    00001599: 	cvtsd2ss	init_value(%rip), %xmm2
    000015a1: 	mulss	0xc(%rsp), %xmm2
    000015a7: 	andps	%xmm0, %xmm4
    000015aa: 	subss	%xmm2, %xmm1
    000015ae: 	pxor	%xmm2, %xmm2
    000015b2: 	cvtss2sd	%xmm4, %xmm2
    000015b6: 	comisd	(%rsp), %xmm2
    000015bb: 	jbe	.Ltmp2199 # Offset: 5563
    000015bd: 	divss	%xmm0, %xmm1
.Ltmp2199:
    000015c1: 	movsd	0x30(%rsp), %xmm5
    000015c7: 	cvtss2sd	%xmm1, %xmm1
    000015cb: 	andpd	0x10(%rsp), %xmm1
    000015d1: 	comisd	%xmm1, %xmm5
    000015d5: 	jbe	.Ltmp2200 # Offset: 5589
.Ltmp2260:
    000015db: 	addl	$0x1, %r13d
    000015df: 	cmpl	%edx, %r13d
    000015e2: 	jl	.Ltmp2201 # Offset: 5602
.Ltmp2197:
    000015e8: 	movq	%r12, %rdi
    000015eb: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 5611
    000015f0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000015f7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000015fe: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001605: 	je	.Ltmp2202 # Offset: 5637
.Ltmp2281:
    0000160b: 	movq	-0x20(%rax), %r13
    0000160f: 	callq	clock@PLT # Offset: 5647
    00001614: 	pxor	%xmm0, %xmm0
    00001618: 	movq	%rax, end_time(%rip)
    0000161f: 	movq	%r13, %rdi
    00001622: 	subq	start_time(%rip), %rax
    00001629: 	cvtsi2sd	%rax, %xmm0
    0000162e: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001636: 	callq	_Z13record_resultdPKc # Offset: 5686
    0000163b: 	movq	0x90(%rsp), %rdi
    00001643: 	cmpq	0x38(%rsp), %rdi
    00001648: 	je	.Ltmp2203 # Offset: 5704
    0000164a: 	movq	0xa0(%rsp), %rax
    00001652: 	leaq	0x1(%rax), %rsi
    00001656: 	callq	_ZdlPvm@PLT # Offset: 5718
.Ltmp2203:
    0000165b: 	leaq	DATAat0x1a28b(%rip), %rdx
    00001662: 	movq	%r15, %rsi
    00001665: 	movq	%r12, %rdi
    00001668: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5736
    0000166d: 	callq	clock@PLT # Offset: 5741
    00001672: 	movl	iterations(%rip), %edx
    00001678: 	movq	%rax, start_time(%rip)
    0000167f: 	testl	%edx, %edx
    00001681: 	jle	.Ltmp2204 # Offset: 5761
    00001687: 	pxor	%xmm7, %xmm7
    0000168b: 	movss	DATAat0x1a350(%rip), %xmm3
    00001693: 	movsd	DATAat0x1a320(%rip), %xmm4
    0000169b: 	movss	DATAat0x1a370(%rip), %xmm6
    000016a3: 	movq	DATAat0x1a360(%rip), %xmm5
    000016ab: 	movss	%xmm7, 0x8(%rsp)
    000016b1: 	xorl	%r13d, %r13d
    000016b4: 	movsd	DATAat0x1a340(%rip), %xmm7
    000016bc: 	movss	%xmm3, 0xc(%rsp)
    000016c2: 	leaq	DATAat0x1a1c8(%rip), %r14
    000016c9: 	movaps	%xmm6, 0x20(%rsp)
    000016ce: 	movsd	%xmm4, (%rsp)
    000016d3: 	movaps	%xmm5, 0x10(%rsp)
    000016d8: 	movsd	%xmm7, 0x30(%rsp)
    000016de: 	nop # Size: 2
.Ltmp2208:
    000016e0: 	movq	%rbp, %rax
    000016e3: 	pxor	%xmm0, %xmm0
    000016e7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2205:
    000016f0: 	movaps	(%rax), %xmm2
    000016f3: 	addq	$0x10, %rax
    000016f7: 	addss	%xmm2, %xmm0
    000016fb: 	movaps	%xmm2, %xmm1
    000016fe: 	shufps	$0x55, %xmm2, %xmm1
    00001702: 	addss	%xmm0, %xmm1
    00001706: 	movaps	%xmm2, %xmm0
    00001709: 	unpckhps	%xmm2, %xmm0
    0000170c: 	shufps	$0xff, %xmm2, %xmm2
    00001710: 	addss	%xmm1, %xmm0
    00001714: 	addss	%xmm2, %xmm0
    00001718: 	cmpq	%rax, %rbx
    0000171b: 	jne	.Ltmp2205 # Offset: 5915
    0000171d: 	pxor	%xmm2, %xmm2
    00001721: 	movaps	0x20(%rsp), %xmm5
    00001726: 	movaps	%xmm0, %xmm1
    00001729: 	cvtsd2ss	init_value(%rip), %xmm2
    00001731: 	mulss	0xc(%rsp), %xmm2
    00001737: 	andps	%xmm0, %xmm5
    0000173a: 	subss	%xmm2, %xmm1
    0000173e: 	pxor	%xmm2, %xmm2
    00001742: 	cvtss2sd	%xmm5, %xmm2
    00001746: 	comisd	(%rsp), %xmm2
    0000174b: 	jbe	.Ltmp2206 # Offset: 5963
    0000174d: 	divss	%xmm0, %xmm1
.Ltmp2206:
    00001751: 	movsd	0x30(%rsp), %xmm4
    00001757: 	cvtss2sd	%xmm1, %xmm1
    0000175b: 	andpd	0x10(%rsp), %xmm1
    00001761: 	comisd	%xmm1, %xmm4
    00001765: 	jbe	.Ltmp2207 # Offset: 5989
.Ltmp2259:
    0000176b: 	addl	$0x1, %r13d
    0000176f: 	cmpl	%edx, %r13d
    00001772: 	jl	.Ltmp2208 # Offset: 6002
.Ltmp2204:
    00001778: 	movq	%r12, %rdi
    0000177b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6011
    00001780: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001787: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    0000178e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001795: 	je	.Ltmp2209 # Offset: 6037
.Ltmp2279:
    0000179b: 	movq	-0x20(%rax), %r13
    0000179f: 	callq	clock@PLT # Offset: 6047
    000017a4: 	pxor	%xmm0, %xmm0
    000017a8: 	movq	%rax, end_time(%rip)
    000017af: 	movq	%r13, %rdi
    000017b2: 	subq	start_time(%rip), %rax
    000017b9: 	cvtsi2sd	%rax, %xmm0
    000017be: 	divsd	DATAat0x1a318(%rip), %xmm0
    000017c6: 	callq	_Z13record_resultdPKc # Offset: 6086
    000017cb: 	movq	0x90(%rsp), %rdi
    000017d3: 	cmpq	0x38(%rsp), %rdi
    000017d8: 	je	.Ltmp2210 # Offset: 6104
    000017da: 	movq	0xa0(%rsp), %rax
    000017e2: 	leaq	0x1(%rax), %rsi
    000017e6: 	callq	_ZdlPvm@PLT # Offset: 6118
.Ltmp2210:
    000017eb: 	leaq	DATAat0x1a29b(%rip), %rdx
    000017f2: 	movq	%r15, %rsi
    000017f5: 	movq	%r12, %rdi
    000017f8: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6136
    000017fd: 	callq	clock@PLT # Offset: 6141
    00001802: 	movl	iterations(%rip), %edx
    00001808: 	movq	%rax, start_time(%rip)
    0000180f: 	testl	%edx, %edx
    00001811: 	jle	.Ltmp2211 # Offset: 6161
    00001817: 	pxor	%xmm3, %xmm3
    0000181b: 	movss	DATAat0x1a350(%rip), %xmm6
    00001823: 	movsd	DATAat0x1a320(%rip), %xmm5
    0000182b: 	movss	DATAat0x1a370(%rip), %xmm4
    00001833: 	movq	DATAat0x1a360(%rip), %xmm7
    0000183b: 	movss	%xmm3, 0x8(%rsp)
    00001841: 	xorl	%r13d, %r13d
    00001844: 	movsd	DATAat0x1a340(%rip), %xmm3
    0000184c: 	movss	%xmm6, 0xc(%rsp)
    00001852: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001859: 	movaps	%xmm4, 0x20(%rsp)
    0000185e: 	movsd	%xmm5, (%rsp)
    00001863: 	movaps	%xmm7, 0x10(%rsp)
    00001868: 	movsd	%xmm3, 0x30(%rsp)
    0000186e: 	nop # Size: 2
.Ltmp2215:
    00001870: 	movq	%rbp, %rax
    00001873: 	pxor	%xmm0, %xmm0
    00001877: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2212:
    00001880: 	movaps	(%rax), %xmm2
    00001883: 	addq	$0x10, %rax
    00001887: 	addss	%xmm2, %xmm0
    0000188b: 	movaps	%xmm2, %xmm1
    0000188e: 	shufps	$0x55, %xmm2, %xmm1
    00001892: 	addss	%xmm0, %xmm1
    00001896: 	movaps	%xmm2, %xmm0
    00001899: 	unpckhps	%xmm2, %xmm0
    0000189c: 	shufps	$0xff, %xmm2, %xmm2
    000018a0: 	addss	%xmm1, %xmm0
    000018a4: 	addss	%xmm2, %xmm0
    000018a8: 	cmpq	%rbx, %rax
    000018ab: 	jne	.Ltmp2212 # Offset: 6315
    000018ad: 	pxor	%xmm2, %xmm2
    000018b1: 	movaps	0x20(%rsp), %xmm6
    000018b6: 	movaps	%xmm0, %xmm1
    000018b9: 	cvtsd2ss	init_value(%rip), %xmm2
    000018c1: 	mulss	0xc(%rsp), %xmm2
    000018c7: 	andps	%xmm0, %xmm6
    000018ca: 	subss	%xmm2, %xmm1
    000018ce: 	pxor	%xmm2, %xmm2
    000018d2: 	cvtss2sd	%xmm6, %xmm2
    000018d6: 	comisd	(%rsp), %xmm2
    000018db: 	jbe	.Ltmp2213 # Offset: 6363
    000018dd: 	divss	%xmm0, %xmm1
.Ltmp2213:
    000018e1: 	movsd	0x30(%rsp), %xmm3
    000018e7: 	cvtss2sd	%xmm1, %xmm1
    000018eb: 	andpd	0x10(%rsp), %xmm1
    000018f1: 	comisd	%xmm1, %xmm3
    000018f5: 	jbe	.Ltmp2214 # Offset: 6389
.Ltmp2258:
    000018fb: 	addl	$0x1, %r13d
    000018ff: 	cmpl	%edx, %r13d
    00001902: 	jl	.Ltmp2215 # Offset: 6402
.Ltmp2211:
    00001908: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000190f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001916: 	subq	$0x20, %rax
    0000191a: 	cmpq	%rax, %r14
    0000191d: 	je	.Ltmp2216 # Offset: 6429
    00001923: 	leaq	0x10(%r14), %rdi
    00001927: 	movq	0x98(%rsp), %r13
    0000192f: 	movq	%rdi, (%r14)
    00001932: 	movq	0x90(%rsp), %rax
    0000193a: 	movq	%rax, %rcx
    0000193d: 	movq	%rax, (%rsp)
    00001941: 	addq	%r13, %rcx
    00001944: 	je	.Ltmp2217 # Offset: 6468
    00001946: 	testq	%rax, %rax
    00001949: 	je	.Ltmp2218 # Offset: 6473
.Ltmp2217:
    0000194f: 	movq	%r13, 0x50(%rsp)
    00001954: 	cmpq	$0xf, %r13
    00001958: 	ja	.Ltmp2219 # Offset: 6488
    0000195e: 	cmpq	$0x1, %r13
    00001962: 	jne	.Ltmp2220 # Offset: 6498
    00001968: 	movq	(%rsp), %rax
    0000196c: 	movzbl	(%rax), %eax
    0000196f: 	movb	%al, 0x10(%r14)
.Ltmp2303:
    00001973: 	movq	%r13, 0x8(%r14)
    00001977: 	movb	$0x0, (%rdi,%r13)
    0000197c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001983: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000198a: 	addq	$0x20, %rax
    0000198e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001995: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    0000199c: 	je	.Ltmp2221 # Offset: 6556
.Ltmp2278:
    000019a2: 	movq	-0x20(%rax), %r13
    000019a6: 	callq	clock@PLT # Offset: 6566
    000019ab: 	pxor	%xmm0, %xmm0
    000019af: 	movq	%rax, end_time(%rip)
    000019b6: 	movq	%r13, %rdi
    000019b9: 	subq	start_time(%rip), %rax
    000019c0: 	cvtsi2sd	%rax, %xmm0
    000019c5: 	divsd	DATAat0x1a318(%rip), %xmm0
    000019cd: 	callq	_Z13record_resultdPKc # Offset: 6605
    000019d2: 	movq	0x90(%rsp), %rdi
    000019da: 	cmpq	0x38(%rsp), %rdi
    000019df: 	je	.Ltmp2222 # Offset: 6623
    000019e1: 	movq	0xa0(%rsp), %rax
    000019e9: 	leaq	0x1(%rax), %rsi
    000019ed: 	callq	_ZdlPvm@PLT # Offset: 6637
.Ltmp2222:
    000019f2: 	leaq	DATAat0x1a2af(%rip), %rdx
    000019f9: 	movq	%r15, %rsi
    000019fc: 	movq	%r12, %rdi
    000019ff: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6655
    00001a04: 	callq	clock@PLT # Offset: 6660
    00001a09: 	movl	iterations(%rip), %edx
    00001a0f: 	movq	%rax, start_time(%rip)
    00001a16: 	testl	%edx, %edx
    00001a18: 	jle	.Ltmp2223 # Offset: 6680
    00001a1e: 	pxor	%xmm6, %xmm6
    00001a22: 	movss	DATAat0x1a350(%rip), %xmm4
    00001a2a: 	movsd	DATAat0x1a320(%rip), %xmm7
    00001a32: 	movss	DATAat0x1a370(%rip), %xmm5
    00001a3a: 	movq	DATAat0x1a360(%rip), %xmm3
    00001a42: 	movss	%xmm6, 0x8(%rsp)
    00001a48: 	xorl	%r13d, %r13d
    00001a4b: 	movsd	DATAat0x1a340(%rip), %xmm6
    00001a53: 	movss	%xmm4, 0xc(%rsp)
    00001a59: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001a60: 	movaps	%xmm5, 0x20(%rsp)
    00001a65: 	movsd	%xmm7, (%rsp)
    00001a6a: 	movaps	%xmm3, 0x10(%rsp)
    00001a6f: 	movsd	%xmm6, 0x30(%rsp)
    00001a75: 	nopl	(%rax) # Size: 3
.Ltmp2227:
    00001a78: 	movq	%rbp, %rax
    00001a7b: 	pxor	%xmm0, %xmm0
    00001a7f: 	nop # Size: 1
.Ltmp2224:
    00001a80: 	movaps	(%rax), %xmm2
    00001a83: 	addq	$0x10, %rax
    00001a87: 	addss	%xmm2, %xmm0
    00001a8b: 	movaps	%xmm2, %xmm1
    00001a8e: 	shufps	$0x55, %xmm2, %xmm1
    00001a92: 	addss	%xmm0, %xmm1
    00001a96: 	movaps	%xmm2, %xmm0
    00001a99: 	unpckhps	%xmm2, %xmm0
    00001a9c: 	shufps	$0xff, %xmm2, %xmm2
    00001aa0: 	addss	%xmm1, %xmm0
    00001aa4: 	addss	%xmm2, %xmm0
    00001aa8: 	cmpq	%rbx, %rax
    00001aab: 	jne	.Ltmp2224 # Offset: 6827
    00001aad: 	pxor	%xmm2, %xmm2
    00001ab1: 	movaps	0x20(%rsp), %xmm7
    00001ab6: 	movaps	%xmm0, %xmm1
    00001ab9: 	cvtsd2ss	init_value(%rip), %xmm2
    00001ac1: 	mulss	0xc(%rsp), %xmm2
    00001ac7: 	andps	%xmm0, %xmm7
    00001aca: 	subss	%xmm2, %xmm1
    00001ace: 	pxor	%xmm2, %xmm2
    00001ad2: 	cvtss2sd	%xmm7, %xmm2
    00001ad6: 	comisd	(%rsp), %xmm2
    00001adb: 	jbe	.Ltmp2225 # Offset: 6875
    00001add: 	divss	%xmm0, %xmm1
.Ltmp2225:
    00001ae1: 	movsd	0x30(%rsp), %xmm6
    00001ae7: 	cvtss2sd	%xmm1, %xmm1
    00001aeb: 	andpd	0x10(%rsp), %xmm1
    00001af1: 	comisd	%xmm1, %xmm6
    00001af5: 	jbe	.Ltmp2226 # Offset: 6901
.Ltmp2257:
    00001afb: 	addl	$0x1, %r13d
    00001aff: 	cmpl	%edx, %r13d
    00001b02: 	jl	.Ltmp2227 # Offset: 6914
.Ltmp2223:
    00001b08: 	movq	%r12, %rdi
    00001b0b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6923
    00001b10: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b17: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001b1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b25: 	je	.Ltmp2228 # Offset: 6949
.Ltmp2284:
    00001b2b: 	movq	-0x20(%rax), %r13
    00001b2f: 	callq	clock@PLT # Offset: 6959
    00001b34: 	pxor	%xmm0, %xmm0
    00001b38: 	movq	%rax, end_time(%rip)
    00001b3f: 	movq	%r13, %rdi
    00001b42: 	subq	start_time(%rip), %rax
    00001b49: 	cvtsi2sd	%rax, %xmm0
    00001b4e: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001b56: 	callq	_Z13record_resultdPKc # Offset: 6998
    00001b5b: 	movq	0x90(%rsp), %rdi
    00001b63: 	cmpq	0x38(%rsp), %rdi
    00001b68: 	je	.Ltmp2229 # Offset: 7016
    00001b6a: 	movq	0xa0(%rsp), %rax
    00001b72: 	leaq	0x1(%rax), %rsi
    00001b76: 	callq	_ZdlPvm@PLT # Offset: 7030
.Ltmp2229:
    00001b7b: 	leaq	DATAat0x1a2c4(%rip), %rdx
    00001b82: 	movq	%r15, %rsi
    00001b85: 	movq	%r12, %rdi
    00001b88: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7048
    00001b8d: 	callq	clock@PLT # Offset: 7053
    00001b92: 	movl	iterations(%rip), %edx
    00001b98: 	movq	%rax, start_time(%rip)
    00001b9f: 	testl	%edx, %edx
    00001ba1: 	jle	.Ltmp2230 # Offset: 7073
    00001ba7: 	pxor	%xmm4, %xmm4
    00001bab: 	movss	DATAat0x1a350(%rip), %xmm5
    00001bb3: 	movsd	DATAat0x1a320(%rip), %xmm3
    00001bbb: 	movss	DATAat0x1a370(%rip), %xmm7
    00001bc3: 	movq	DATAat0x1a360(%rip), %xmm6
    00001bcb: 	movss	%xmm4, 0x8(%rsp)
    00001bd1: 	xorl	%r13d, %r13d
    00001bd4: 	movsd	DATAat0x1a340(%rip), %xmm4
    00001bdc: 	movss	%xmm5, 0xc(%rsp)
    00001be2: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001be9: 	movaps	%xmm7, 0x20(%rsp)
    00001bee: 	movsd	%xmm3, (%rsp)
    00001bf3: 	movaps	%xmm6, 0x10(%rsp)
    00001bf8: 	movsd	%xmm4, 0x30(%rsp)
    00001bfe: 	nop # Size: 2
.Ltmp2234:
    00001c00: 	movq	%rbp, %rax
    00001c03: 	pxor	%xmm0, %xmm0
    00001c07: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2231:
    00001c10: 	movaps	(%rax), %xmm2
    00001c13: 	addq	$0x10, %rax
    00001c17: 	addss	%xmm2, %xmm0
    00001c1b: 	movaps	%xmm2, %xmm1
    00001c1e: 	shufps	$0x55, %xmm2, %xmm1
    00001c22: 	addss	%xmm0, %xmm1
    00001c26: 	movaps	%xmm2, %xmm0
    00001c29: 	unpckhps	%xmm2, %xmm0
    00001c2c: 	shufps	$0xff, %xmm2, %xmm2
    00001c30: 	addss	%xmm1, %xmm0
    00001c34: 	addss	%xmm2, %xmm0
    00001c38: 	cmpq	%rbx, %rax
    00001c3b: 	jne	.Ltmp2231 # Offset: 7227
    00001c3d: 	pxor	%xmm2, %xmm2
    00001c41: 	movaps	0x20(%rsp), %xmm4
    00001c46: 	movaps	%xmm0, %xmm1
    00001c49: 	cvtsd2ss	init_value(%rip), %xmm2
    00001c51: 	mulss	0xc(%rsp), %xmm2
    00001c57: 	andps	%xmm0, %xmm4
    00001c5a: 	subss	%xmm2, %xmm1
    00001c5e: 	pxor	%xmm2, %xmm2
    00001c62: 	cvtss2sd	%xmm4, %xmm2
    00001c66: 	comisd	(%rsp), %xmm2
    00001c6b: 	jbe	.Ltmp2232 # Offset: 7275
    00001c6d: 	divss	%xmm0, %xmm1
.Ltmp2232:
    00001c71: 	movsd	0x30(%rsp), %xmm7
    00001c77: 	cvtss2sd	%xmm1, %xmm1
    00001c7b: 	andpd	0x10(%rsp), %xmm1
    00001c81: 	comisd	%xmm1, %xmm7
    00001c85: 	jbe	.Ltmp2233 # Offset: 7301
.Ltmp2256:
    00001c8b: 	addl	$0x1, %r13d
    00001c8f: 	cmpl	%edx, %r13d
    00001c92: 	jl	.Ltmp2234 # Offset: 7314
.Ltmp2230:
    00001c98: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001c9f: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001ca6: 	subq	$0x20, %rax
    00001caa: 	cmpq	%rax, %r14
    00001cad: 	je	.Ltmp2235 # Offset: 7341
    00001cb3: 	leaq	0x10(%r14), %rdi
    00001cb7: 	movq	0x98(%rsp), %r13
    00001cbf: 	movq	%rdi, (%r14)
    00001cc2: 	movq	0x90(%rsp), %rax
    00001cca: 	movq	%rax, %rcx
    00001ccd: 	movq	%rax, (%rsp)
    00001cd1: 	addq	%r13, %rcx
    00001cd4: 	je	.Ltmp2236 # Offset: 7380
    00001cd6: 	testq	%rax, %rax
    00001cd9: 	je	.Ltmp2237 # Offset: 7385
.Ltmp2236:
    00001cdf: 	movq	%r13, 0x50(%rsp)
    00001ce4: 	cmpq	$0xf, %r13
    00001ce8: 	ja	.Ltmp2238 # Offset: 7400
    00001cee: 	cmpq	$0x1, %r13
    00001cf2: 	jne	.Ltmp2239 # Offset: 7410
    00001cf8: 	movq	(%rsp), %rax
    00001cfc: 	movzbl	(%rax), %eax
    00001cff: 	movb	%al, 0x10(%r14)
.Ltmp2297:
    00001d03: 	movq	%r13, 0x8(%r14)
    00001d07: 	movb	$0x0, (%rdi,%r13)
    00001d0c: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001d13: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001d1a: 	addq	$0x20, %rax
    00001d1e: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001d25: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00001d2c: 	je	.Ltmp2240 # Offset: 7468
.Ltmp2286:
    00001d32: 	movq	-0x20(%rax), %r13
    00001d36: 	callq	clock@PLT # Offset: 7478
    00001d3b: 	pxor	%xmm0, %xmm0
    00001d3f: 	movq	%rax, end_time(%rip)
    00001d46: 	movq	%r13, %rdi
    00001d49: 	subq	start_time(%rip), %rax
    00001d50: 	cvtsi2sd	%rax, %xmm0
    00001d55: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001d5d: 	callq	_Z13record_resultdPKc # Offset: 7517
    00001d62: 	movq	0x90(%rsp), %rdi
    00001d6a: 	cmpq	0x38(%rsp), %rdi
    00001d6f: 	je	.Ltmp2241 # Offset: 7535
    00001d71: 	movq	0xa0(%rsp), %rax
    00001d79: 	leaq	0x1(%rax), %rsi
    00001d7d: 	callq	_ZdlPvm@PLT # Offset: 7549
.Ltmp2241:
    00001d82: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001d89: 	movq	%r15, %rsi
    00001d8c: 	movq	%r12, %rdi
    00001d8f: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7567
    00001d94: 	callq	clock@PLT # Offset: 7572
    00001d99: 	movl	iterations(%rip), %edx
    00001d9f: 	movq	%rax, start_time(%rip)
    00001da6: 	testl	%edx, %edx
    00001da8: 	jle	.Ltmp2242 # Offset: 7592
    00001dae: 	pxor	%xmm5, %xmm5
    00001db2: 	movss	DATAat0x1a350(%rip), %xmm7
    00001dba: 	movsd	DATAat0x1a320(%rip), %xmm6
    00001dc2: 	movss	DATAat0x1a370(%rip), %xmm3
    00001dca: 	movq	DATAat0x1a360(%rip), %xmm4
    00001dd2: 	movss	%xmm5, 0x8(%rsp)
    00001dd8: 	xorl	%r13d, %r13d
    00001ddb: 	movsd	DATAat0x1a340(%rip), %xmm5
    00001de3: 	movss	%xmm7, 0xc(%rsp)
    00001de9: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001df0: 	movaps	%xmm3, 0x20(%rsp)
    00001df5: 	movsd	%xmm6, (%rsp)
    00001dfa: 	movaps	%xmm4, 0x10(%rsp)
    00001dff: 	movsd	%xmm5, 0x30(%rsp)
    00001e05: 	nopl	(%rax) # Size: 3
.Ltmp2246:
    00001e08: 	movq	%rbp, %rax
    00001e0b: 	pxor	%xmm0, %xmm0
    00001e0f: 	nop # Size: 1
.Ltmp2243:
    00001e10: 	movaps	(%rax), %xmm2
    00001e13: 	addq	$0x10, %rax
    00001e17: 	addss	%xmm2, %xmm0
    00001e1b: 	movaps	%xmm2, %xmm1
    00001e1e: 	shufps	$0x55, %xmm2, %xmm1
    00001e22: 	addss	%xmm0, %xmm1
    00001e26: 	movaps	%xmm2, %xmm0
    00001e29: 	unpckhps	%xmm2, %xmm0
    00001e2c: 	shufps	$0xff, %xmm2, %xmm2
    00001e30: 	addss	%xmm1, %xmm0
    00001e34: 	addss	%xmm2, %xmm0
    00001e38: 	cmpq	%rbx, %rax
    00001e3b: 	jne	.Ltmp2243 # Offset: 7739
    00001e3d: 	pxor	%xmm2, %xmm2
    00001e41: 	movaps	0x20(%rsp), %xmm5
    00001e46: 	movaps	%xmm0, %xmm1
    00001e49: 	cvtsd2ss	init_value(%rip), %xmm2
    00001e51: 	mulss	0xc(%rsp), %xmm2
    00001e57: 	andps	%xmm0, %xmm5
    00001e5a: 	subss	%xmm2, %xmm1
    00001e5e: 	pxor	%xmm2, %xmm2
    00001e62: 	cvtss2sd	%xmm5, %xmm2
    00001e66: 	comisd	(%rsp), %xmm2
    00001e6b: 	jbe	.Ltmp2244 # Offset: 7787
    00001e6d: 	divss	%xmm0, %xmm1
.Ltmp2244:
    00001e71: 	movsd	0x30(%rsp), %xmm5
    00001e77: 	cvtss2sd	%xmm1, %xmm1
    00001e7b: 	andpd	0x10(%rsp), %xmm1
    00001e81: 	comisd	%xmm1, %xmm5
    00001e85: 	jbe	.Ltmp2245 # Offset: 7813
.Ltmp2264:
    00001e8b: 	addl	$0x1, %r13d
    00001e8f: 	cmpl	%edx, %r13d
    00001e92: 	jl	.Ltmp2246 # Offset: 7826
.Ltmp2242:
    00001e98: 	movq	%r12, %rdi
    00001e9b: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 7835
    00001ea0: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ea7: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001eae: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001eb5: 	je	.Ltmp2247 # Offset: 7861
.Ltmp2270:
    00001ebb: 	movq	-0x20(%rax), %rbp
    00001ebf: 	callq	clock@PLT # Offset: 7871
    00001ec4: 	pxor	%xmm0, %xmm0
    00001ec8: 	movq	%rax, end_time(%rip)
    00001ecf: 	movq	%rbp, %rdi
    00001ed2: 	subq	start_time(%rip), %rax
    00001ed9: 	cvtsi2sd	%rax, %xmm0
    00001ede: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001ee6: 	callq	_Z13record_resultdPKc # Offset: 7910
    00001eeb: 	movq	0x90(%rsp), %rdi
    00001ef3: 	cmpq	0x38(%rsp), %rdi
    00001ef8: 	je	.Ltmp2248 # Offset: 7928
    00001efa: 	movq	0xa0(%rsp), %rax
    00001f02: 	leaq	0x1(%rax), %rsi
    00001f06: 	callq	_ZdlPvm@PLT # Offset: 7942
.Ltmp2248:
    00001f0b: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001f12: 	movq	%r15, %rsi
    00001f15: 	movq	%r12, %rdi
    00001f18: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7960
    00001f1d: 	movl	iterations(%rip), %edx
    00001f23: 	xorl	%r8d, %r8d
    00001f26: 	xorl	%ecx, %ecx
    00001f28: 	movl	$0x1f40, %esi
    00001f2d: 	movq	0x90(%rsp), %rdi
    00001f35: 	callq	_Z9summarizePKciiii # Offset: 7989
    00001f3a: 	movq	0x90(%rsp), %rdi
    00001f42: 	cmpq	0x38(%rsp), %rdi
    00001f47: 	je	.Ltmp2249 # Offset: 8007
    00001f49: 	movq	0xa0(%rsp), %rax
    00001f51: 	leaq	0x1(%rax), %rsi
    00001f55: 	callq	_ZdlPvm@PLT # Offset: 8021
.Ltmp2249:
    00001f5a: 	movq	0x70(%rsp), %rdi
    00001f5f: 	cmpq	0x48(%rsp), %rdi
    00001f64: 	je	.Ltmp2250 # Offset: 8036
    00001f66: 	movq	0x80(%rsp), %rax
    00001f6e: 	leaq	0x1(%rax), %rsi
    00001f72: 	callq	_ZdlPvm@PLT # Offset: 8050
.Ltmp2250:
    00001f77: 	movq	0x7db8(%rsp), %rax
    00001f7f: 	subq	%fs:0x28, %rax
    00001f88: 	jne	.Ltmp2251 # Offset: 8072
    00001f8e: 	addq	$0x7dc8, %rsp
    00001f95: 	popq	%rbx
    00001f96: 	popq	%rbp
    00001f97: 	popq	%r12
    00001f99: 	popq	%r13
    00001f9b: 	popq	%r14
    00001f9d: 	popq	%r15
    00001f9f: 	retq # Offset: 8095
.Ltmp2107:
    00001fa0: 	movl	current_test(%rip), %edx
    00001fa6: 	movq	%r14, %rsi
    00001fa9: 	movl	$0x1, %edi
    00001fae: 	xorl	%eax, %eax
    00001fb0: 	callq	__printf_chk@PLT # Offset: 8112
    00001fb5: 	movl	iterations(%rip), %edx
    00001fbb: 	jmp	.Ltmp2252 # Offset: 8123
.Ltmp2100:
    00001fc0: 	movl	current_test(%rip), %edx
    00001fc6: 	movq	%r14, %rsi
    00001fc9: 	movl	$0x1, %edi
    00001fce: 	xorl	%eax, %eax
    00001fd0: 	callq	__printf_chk@PLT # Offset: 8144
    00001fd5: 	movl	iterations(%rip), %edx
    00001fdb: 	jmp	.Ltmp2253 # Offset: 8155
.Ltmp2093:
    00001fe0: 	movl	current_test(%rip), %edx
    00001fe6: 	movq	%r14, %rsi
    00001fe9: 	movl	$0x1, %edi
    00001fee: 	xorl	%eax, %eax
    00001ff0: 	callq	__printf_chk@PLT # Offset: 8176
    00001ff5: 	movl	iterations(%rip), %edx
    00001ffb: 	jmp	.Ltmp2254 # Offset: 8187
.Ltmp2112:
    00002000: 	movq	0x40(%rsp), %rsi
    00002005: 	xorl	%edx, %edx
    00002007: 	movq	%r14, %rdi
    0000200a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8202
    0000200f: 	movq	%rax, (%r14)
    00002012: 	movq	%rax, %rdi
    00002015: 	movq	0x50(%rsp), %rax
    0000201a: 	movq	%rax, 0x10(%r14)
.Ltmp2293:
    0000201e: 	movq	(%rsp), %rsi
    00002022: 	movq	%r13, %rdx
    00002025: 	callq	memcpy@PLT # Offset: 8229
    0000202a: 	movq	0x50(%rsp), %r13
    0000202f: 	movq	(%r14), %rdi
    00002032: 	jmp	.Ltmp2255 # Offset: 8242
    00002037: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2233:
    00002040: 	movl	current_test(%rip), %edx
    00002046: 	movq	%r14, %rsi
    00002049: 	movl	$0x1, %edi
    0000204e: 	xorl	%eax, %eax
    00002050: 	callq	__printf_chk@PLT # Offset: 8272
    00002055: 	movl	iterations(%rip), %edx
    0000205b: 	jmp	.Ltmp2256 # Offset: 8283
.Ltmp2226:
    00002060: 	movl	current_test(%rip), %edx
    00002066: 	movq	%r14, %rsi
    00002069: 	movl	$0x1, %edi
    0000206e: 	xorl	%eax, %eax
    00002070: 	callq	__printf_chk@PLT # Offset: 8304
    00002075: 	movl	iterations(%rip), %edx
    0000207b: 	jmp	.Ltmp2257 # Offset: 8315
.Ltmp2214:
    00002080: 	movl	current_test(%rip), %edx
    00002086: 	movq	%r14, %rsi
    00002089: 	movl	$0x1, %edi
    0000208e: 	xorl	%eax, %eax
    00002090: 	callq	__printf_chk@PLT # Offset: 8336
    00002095: 	movl	iterations(%rip), %edx
    0000209b: 	jmp	.Ltmp2258 # Offset: 8347
.Ltmp2207:
    000020a0: 	movl	current_test(%rip), %edx
    000020a6: 	movq	%r14, %rsi
    000020a9: 	movl	$0x1, %edi
    000020ae: 	xorl	%eax, %eax
    000020b0: 	callq	__printf_chk@PLT # Offset: 8368
    000020b5: 	movl	iterations(%rip), %edx
    000020bb: 	jmp	.Ltmp2259 # Offset: 8379
.Ltmp2200:
    000020c0: 	movl	current_test(%rip), %edx
    000020c6: 	movq	%r14, %rsi
    000020c9: 	movl	$0x1, %edi
    000020ce: 	xorl	%eax, %eax
    000020d0: 	callq	__printf_chk@PLT # Offset: 8400
    000020d5: 	movl	iterations(%rip), %edx
    000020db: 	jmp	.Ltmp2260 # Offset: 8411
.Ltmp2188:
    000020e0: 	movl	current_test(%rip), %edx
    000020e6: 	movq	%r14, %rsi
    000020e9: 	movl	$0x1, %edi
    000020ee: 	xorl	%eax, %eax
    000020f0: 	callq	__printf_chk@PLT # Offset: 8432
    000020f5: 	movl	iterations(%rip), %edx
    000020fb: 	jmp	.Ltmp2261 # Offset: 8443
.Ltmp2176:
    00002100: 	movl	current_test(%rip), %edx
    00002106: 	movq	%r14, %rsi
    00002109: 	movl	$0x1, %edi
    0000210e: 	xorl	%eax, %eax
    00002110: 	callq	__printf_chk@PLT # Offset: 8464
    00002115: 	movl	iterations(%rip), %edx
    0000211b: 	jmp	.Ltmp2262 # Offset: 8475
.Ltmp2119:
    00002120: 	movl	current_test(%rip), %edx
    00002126: 	movq	%r14, %rsi
    00002129: 	movl	$0x1, %edi
    0000212e: 	xorl	%eax, %eax
    00002130: 	callq	__printf_chk@PLT # Offset: 8496
    00002135: 	movl	iterations(%rip), %edx
    0000213b: 	jmp	.Ltmp2263 # Offset: 8507
.Ltmp2245:
    00002140: 	movl	current_test(%rip), %edx
    00002146: 	movq	%r14, %rsi
    00002149: 	movl	$0x1, %edi
    0000214e: 	xorl	%eax, %eax
    00002150: 	callq	__printf_chk@PLT # Offset: 8528
    00002155: 	movl	iterations(%rip), %edx
    0000215b: 	jmp	.Ltmp2264 # Offset: 8539
.Ltmp2169:
    00002160: 	movl	current_test(%rip), %edx
    00002166: 	movq	%r14, %rsi
    00002169: 	movl	$0x1, %edi
    0000216e: 	xorl	%eax, %eax
    00002170: 	callq	__printf_chk@PLT # Offset: 8560
    00002175: 	movl	iterations(%rip), %edx
    0000217b: 	jmp	.Ltmp2265 # Offset: 8571
.Ltmp2157:
    00002180: 	movl	current_test(%rip), %edx
    00002186: 	movq	%r14, %rsi
    00002189: 	movl	$0x1, %edi
    0000218e: 	xorl	%eax, %eax
    00002190: 	callq	__printf_chk@PLT # Offset: 8592
    00002195: 	movl	iterations(%rip), %edx
    0000219b: 	jmp	.Ltmp2266 # Offset: 8603
.Ltmp2145:
    000021a0: 	movl	current_test(%rip), %edx
    000021a6: 	movq	%r14, %rsi
    000021a9: 	movl	$0x1, %edi
    000021ae: 	xorl	%eax, %eax
    000021b0: 	callq	__printf_chk@PLT # Offset: 8624
    000021b5: 	movl	iterations(%rip), %edx
    000021bb: 	jmp	.Ltmp2267 # Offset: 8635
.Ltmp2138:
    000021c0: 	movl	current_test(%rip), %edx
    000021c6: 	movq	%r14, %rsi
    000021c9: 	movl	$0x1, %edi
    000021ce: 	xorl	%eax, %eax
    000021d0: 	callq	__printf_chk@PLT # Offset: 8656
    000021d5: 	movl	iterations(%rip), %edx
    000021db: 	jmp	.Ltmp2268 # Offset: 8667
.Ltmp2131:
    000021e0: 	movl	current_test(%rip), %edx
    000021e6: 	movq	%r14, %rsi
    000021e9: 	movl	$0x1, %edi
    000021ee: 	xorl	%eax, %eax
    000021f0: 	callq	__printf_chk@PLT # Offset: 8688
    000021f5: 	movl	iterations(%rip), %edx
    000021fb: 	jmp	.Ltmp2269 # Offset: 8699
.Ltmp2247:
    00002200: 	movq	-0x8(%rdx), %rax
    00002204: 	addq	$0x200, %rax
    0000220a: 	jmp	.Ltmp2270 # Offset: 8714
.Ltmp2171:
    0000220f: 	movq	-0x8(%rdx), %rax
    00002213: 	addq	$0x200, %rax
    00002219: 	jmp	.Ltmp2271 # Offset: 8729
.Ltmp2164:
    0000221e: 	movq	-0x8(%rdx), %rax
    00002222: 	addq	$0x200, %rax
    00002228: 	jmp	.Ltmp2272 # Offset: 8744
.Ltmp2140:
    0000222d: 	movq	-0x8(%rdx), %rax
    00002231: 	addq	$0x200, %rax
    00002237: 	jmp	.Ltmp2273 # Offset: 8759
.Ltmp2133:
    0000223c: 	movq	-0x8(%rdx), %rax
    00002240: 	addq	$0x200, %rax
    00002246: 	jmp	.Ltmp2274 # Offset: 8774
.Ltmp2159:
    0000224b: 	movq	%r12, %rsi
    0000224e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002255: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8789
    0000225a: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002261: 	jmp	.Ltmp2275 # Offset: 8801
.Ltmp2152:
    00002266: 	movq	-0x8(%rdx), %rax
    0000226a: 	addq	$0x200, %rax
    00002270: 	jmp	.Ltmp2276 # Offset: 8816
.Ltmp2147:
    00002275: 	movq	%r12, %rsi
    00002278: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000227f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8831
    00002284: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000228b: 	jmp	.Ltmp2277 # Offset: 8843
.Ltmp2216:
    00002290: 	movq	%r12, %rsi
    00002293: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000229a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8858
    0000229f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000022a6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000022ad: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000022b4: 	jne	.Ltmp2278 # Offset: 8884
.Ltmp2221:
    000022ba: 	movq	-0x8(%rdx), %rax
    000022be: 	addq	$0x200, %rax
    000022c4: 	jmp	.Ltmp2278 # Offset: 8900
.Ltmp2209:
    000022c9: 	movq	-0x8(%rdx), %rax
    000022cd: 	addq	$0x200, %rax
    000022d3: 	jmp	.Ltmp2279 # Offset: 8915
.Ltmp2195:
    000022d8: 	movq	-0x8(%rdx), %rax
    000022dc: 	addq	$0x200, %rax
    000022e2: 	jmp	.Ltmp2280 # Offset: 8930
.Ltmp2202:
    000022e7: 	movq	-0x8(%rdx), %rax
    000022eb: 	addq	$0x200, %rax
    000022f1: 	jmp	.Ltmp2281 # Offset: 8945
.Ltmp2183:
    000022f6: 	movq	-0x8(%rdx), %rax
    000022fa: 	addq	$0x200, %rax
    00002300: 	jmp	.Ltmp2282 # Offset: 8960
.Ltmp2190:
    00002305: 	movq	%r12, %rsi
    00002308: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000230f: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8975
    00002314: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000231b: 	jmp	.Ltmp2283 # Offset: 8987
.Ltmp2228:
    00002320: 	movq	-0x8(%rdx), %rax
    00002324: 	addq	$0x200, %rax
    0000232a: 	jmp	.Ltmp2284 # Offset: 9002
.Ltmp2102:
    0000232f: 	movq	-0x8(%rdx), %rax
    00002333: 	addq	$0x200, %rax
    00002339: 	jmp	.Ltmp2285 # Offset: 9017
.Ltmp2235:
    0000233e: 	movq	%r12, %rsi
    00002341: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002348: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9032
    0000234d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002354: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    0000235b: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00002362: 	jne	.Ltmp2286 # Offset: 9058
.Ltmp2240:
    00002368: 	movq	-0x8(%rdx), %rax
    0000236c: 	addq	$0x200, %rax
    00002372: 	jmp	.Ltmp2286 # Offset: 9074
.Ltmp2095:
    00002377: 	movq	-0x8(%rdx), %rax
    0000237b: 	addq	$0x200, %rax
    00002381: 	jmp	.Ltmp2287 # Offset: 9089
.Ltmp2178:
    00002386: 	movq	%r12, %rsi
    00002389: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002390: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9104
    00002395: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000239c: 	jmp	.Ltmp2288 # Offset: 9116
.Ltmp2114:
    000023a1: 	movq	-0x8(%rdx), %rax
    000023a5: 	addq	$0x200, %rax
    000023ab: 	jmp	.Ltmp2289 # Offset: 9131
.Ltmp2109:
    000023b0: 	movq	%r12, %rsi
    000023b3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023ba: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9146
    000023bf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023c6: 	jmp	.Ltmp2290 # Offset: 9158
.Ltmp2126:
    000023cb: 	movq	-0x8(%rdx), %rax
    000023cf: 	addq	$0x200, %rax
    000023d5: 	jmp	.Ltmp2291 # Offset: 9173
.Ltmp2121:
    000023da: 	movq	%r12, %rsi
    000023dd: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000023e4: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 9188
    000023e9: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000023f0: 	jmp	.Ltmp2292 # Offset: 9200
.Ltmp2113:
    000023f5: 	testq	%r13, %r13
    000023f8: 	je	.Ltmp2255 # Offset: 9208
    000023fe: 	jmp	.Ltmp2293 # Offset: 9214
    00002403: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2125:
    00002408: 	testq	%r13, %r13
    0000240b: 	je	.Ltmp2294 # Offset: 9227
    00002411: 	jmp	.Ltmp2295 # Offset: 9233
    00002416: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2163:
    00002420: 	testq	%r13, %r13
    00002423: 	je	.Ltmp2296 # Offset: 9251
.Ltmp2304:
    00002429: 	movq	(%rsp), %rsi
    0000242d: 	movq	%r13, %rdx
    00002430: 	callq	memcpy@PLT # Offset: 9264
    00002435: 	movq	0x50(%rsp), %r13
    0000243a: 	movq	(%r14), %rdi
    0000243d: 	jmp	.Ltmp2296 # Offset: 9277
.Ltmp2239:
    00002442: 	testq	%r13, %r13
    00002445: 	je	.Ltmp2297 # Offset: 9285
    0000244b: 	jmp	.Ltmp2298 # Offset: 9291
.Ltmp2194:
    00002450: 	testq	%r13, %r13
    00002453: 	je	.Ltmp2299 # Offset: 9299
.Ltmp2306:
    00002459: 	movq	(%rsp), %rsi
    0000245d: 	movq	%r13, %rdx
    00002460: 	callq	memcpy@PLT # Offset: 9312
    00002465: 	movq	0x50(%rsp), %r13
    0000246a: 	movq	(%r14), %rdi
    0000246d: 	jmp	.Ltmp2299 # Offset: 9325
.Ltmp2182:
    00002472: 	testq	%r13, %r13
    00002475: 	je	.Ltmp2300 # Offset: 9333
.Ltmp2305:
    0000247b: 	movq	(%rsp), %rsi
    0000247f: 	movq	%r13, %rdx
    00002482: 	callq	memcpy@PLT # Offset: 9346
    00002487: 	movq	0x50(%rsp), %r13
    0000248c: 	movq	(%r14), %rdi
    0000248f: 	jmp	.Ltmp2300 # Offset: 9359
.Ltmp2151:
    00002494: 	testq	%r13, %r13
    00002497: 	je	.Ltmp2301 # Offset: 9367
    0000249d: 	jmp	.Ltmp2302 # Offset: 9373
    000024a2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2220:
    000024a8: 	testq	%r13, %r13
    000024ab: 	je	.Ltmp2303 # Offset: 9387
.Ltmp2307:
    000024b1: 	movq	(%rsp), %rsi
    000024b5: 	movq	%r13, %rdx
    000024b8: 	callq	memcpy@PLT # Offset: 9400
    000024bd: 	movq	0x50(%rsp), %r13
    000024c2: 	movq	(%r14), %rdi
    000024c5: 	jmp	.Ltmp2303 # Offset: 9413
.Ltmp2124:
    000024ca: 	movq	0x40(%rsp), %rsi
    000024cf: 	xorl	%edx, %edx
    000024d1: 	movq	%r14, %rdi
    000024d4: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9428
    000024d9: 	movq	%rax, (%r14)
    000024dc: 	movq	%rax, %rdi
    000024df: 	movq	0x50(%rsp), %rax
    000024e4: 	movq	%rax, 0x10(%r14)
.Ltmp2295:
    000024e8: 	movq	(%rsp), %rsi
    000024ec: 	movq	%r13, %rdx
    000024ef: 	callq	memcpy@PLT # Offset: 9455
    000024f4: 	movq	0x50(%rsp), %r13
    000024f9: 	movq	(%r14), %rdi
    000024fc: 	jmp	.Ltmp2294 # Offset: 9468
.Ltmp2162:
    00002501: 	movq	0x40(%rsp), %rsi
    00002506: 	xorl	%edx, %edx
    00002508: 	movq	%r14, %rdi
    0000250b: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9483
    00002510: 	movq	%rax, (%r14)
    00002513: 	movq	%rax, %rdi
    00002516: 	movq	0x50(%rsp), %rax
    0000251b: 	movq	%rax, 0x10(%r14)
    0000251f: 	jmp	.Ltmp2304 # Offset: 9503
.Ltmp2150:
    00002524: 	movq	0x40(%rsp), %rsi
    00002529: 	xorl	%edx, %edx
    0000252b: 	movq	%r14, %rdi
    0000252e: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9518
    00002533: 	movq	%rax, (%r14)
    00002536: 	movq	%rax, %rdi
    00002539: 	movq	0x50(%rsp), %rax
    0000253e: 	movq	%rax, 0x10(%r14)
.Ltmp2302:
    00002542: 	movq	(%rsp), %rsi
    00002546: 	movq	%r13, %rdx
    00002549: 	callq	memcpy@PLT # Offset: 9545
    0000254e: 	movq	0x50(%rsp), %r13
    00002553: 	movq	(%r14), %rdi
    00002556: 	jmp	.Ltmp2301 # Offset: 9558
.Ltmp2238:
    0000255b: 	movq	0x40(%rsp), %rsi
    00002560: 	xorl	%edx, %edx
    00002562: 	movq	%r14, %rdi
    00002565: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9573
    0000256a: 	movq	%rax, (%r14)
    0000256d: 	movq	%rax, %rdi
    00002570: 	movq	0x50(%rsp), %rax
    00002575: 	movq	%rax, 0x10(%r14)
.Ltmp2298:
    00002579: 	movq	(%rsp), %rsi
    0000257d: 	movq	%r13, %rdx
    00002580: 	callq	memcpy@PLT # Offset: 9600
    00002585: 	movq	0x50(%rsp), %r13
    0000258a: 	movq	(%r14), %rdi
    0000258d: 	jmp	.Ltmp2297 # Offset: 9613
.Ltmp2181:
    00002592: 	movq	0x40(%rsp), %rsi
    00002597: 	xorl	%edx, %edx
    00002599: 	movq	%r14, %rdi
    0000259c: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9628
    000025a1: 	movq	%rax, (%r14)
    000025a4: 	movq	%rax, %rdi
    000025a7: 	movq	0x50(%rsp), %rax
    000025ac: 	movq	%rax, 0x10(%r14)
    000025b0: 	jmp	.Ltmp2305 # Offset: 9648
.Ltmp2193:
    000025b5: 	movq	0x40(%rsp), %rsi
    000025ba: 	xorl	%edx, %edx
    000025bc: 	movq	%r14, %rdi
    000025bf: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9663
    000025c4: 	movq	%rax, (%r14)
    000025c7: 	movq	%rax, %rdi
    000025ca: 	movq	0x50(%rsp), %rax
    000025cf: 	movq	%rax, 0x10(%r14)
    000025d3: 	jmp	.Ltmp2306 # Offset: 9683
.Ltmp2219:
    000025d8: 	movq	0x40(%rsp), %rsi
    000025dd: 	xorl	%edx, %edx
    000025df: 	movq	%r14, %rdi
    000025e2: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 9698
    000025e7: 	movq	%rax, (%r14)
    000025ea: 	movq	%rax, %rdi
    000025ed: 	movq	0x50(%rsp), %rax
    000025f2: 	movq	%rax, 0x10(%r14)
    000025f6: 	jmp	.Ltmp2307 # Offset: 9718
.Ltmp2123:
    000025fb: 	leaq	DATAat0x1a158(%rip), %rdi
    00002602: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9730
.Ltmp2149:
    00002607: 	leaq	DATAat0x1a158(%rip), %rdi
    0000260e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9742
.Ltmp2161:
    00002613: 	leaq	DATAat0x1a158(%rip), %rdi
    0000261a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9754
.Ltmp2180:
    0000261f: 	leaq	DATAat0x1a158(%rip), %rdi
    00002626: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9766
.Ltmp2192:
    0000262b: 	leaq	DATAat0x1a158(%rip), %rdi
    00002632: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9778
.Ltmp2218:
    00002637: 	leaq	DATAat0x1a158(%rip), %rdi
    0000263e: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9790
.Ltmp2237:
    00002643: 	leaq	DATAat0x1a158(%rip), %rdi
    0000264a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9802
.Ltmp2251:
    0000264f: 	callq	__stack_chk_fail@PLT # Offset: 9807
.Ltmp2111:
    00002654: 	leaq	DATAat0x1a158(%rip), %rdi
    0000265b: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9819
    00002660: 	endbr64
    00002664: 	movq	%rax, %rbp
    00002667: 	jmp	.Ltmp2308 # Offset: 9831
    00002669: 	endbr64
.Ltmp2310:
    0000266d: 	movq	%rax, %rbp
    00002670: 	jmp	.Ltmp2309 # Offset: 9840
    00002672: 	endbr64
    00002676: 	jmp	.Ltmp2310 # Offset: 9846
.Ltmp2309:
    00002678: 	movq	0x90(%rsp), %rdi
    00002680: 	cmpq	0x38(%rsp), %rdi
    00002685: 	je	.Ltmp2308 # Offset: 9861
.Ltmp2313:
    00002687: 	movq	0xa0(%rsp), %rax
    0000268f: 	leaq	0x1(%rax), %rsi
    00002693: 	callq	_ZdlPvm@PLT # Offset: 9875
.Ltmp2308:
    00002698: 	movq	0x70(%rsp), %rdi
    0000269d: 	cmpq	0x48(%rsp), %rdi
    000026a2: 	je	.Ltmp2311 # Offset: 9890
    000026a4: 	movq	0x80(%rsp), %rax
    000026ac: 	leaq	0x1(%rax), %rsi
    000026b0: 	callq	_ZdlPvm@PLT # Offset: 9904
.Ltmp2311:
    000026b5: 	movq	%rbp, %rdi
    000026b8: 	callq	_Unwind_Resume@PLT # Offset: 9912
    000026bd: 	endbr64
    000026c1: 	movq	%rax, %rbp
    000026c4: 	jmp	.Ltmp2312 # Offset: 9924
    000026c6: 	endbr64
    000026ca: 	jmp	.Ltmp2310 # Offset: 9930
    000026cc: 	endbr64
    000026d0: 	jmp	.Ltmp2310 # Offset: 9936
    000026d2: 	endbr64
    000026d6: 	jmp	.Ltmp2310 # Offset: 9942
    000026d8: 	endbr64
    000026dc: 	jmp	.Ltmp2310 # Offset: 9948
    000026de: 	endbr64
    000026e2: 	jmp	.Ltmp2310 # Offset: 9954
    000026e4: 	endbr64
    000026e8: 	jmp	.Ltmp2310 # Offset: 9960
    000026ea: 	endbr64
    000026ee: 	jmp	.Ltmp2310 # Offset: 9966
    000026f3: 	endbr64
    000026f7: 	jmp	.Ltmp2310 # Offset: 9975
    000026fc: 	endbr64
    00002700: 	jmp	.Ltmp2310 # Offset: 9984
    00002705: 	endbr64
    00002709: 	jmp	.Ltmp2310 # Offset: 9993
    0000270e: 	endbr64
    00002712: 	jmp	.Ltmp2310 # Offset: 10002
    00002717: 	endbr64
    0000271b: 	jmp	.Ltmp2310 # Offset: 10011
    00002720: 	endbr64
    00002724: 	jmp	.Ltmp2310 # Offset: 10020
    00002729: 	endbr64
    0000272d: 	jmp	.Ltmp2310 # Offset: 10029
    00002732: 	endbr64
    00002736: 	jmp	.Ltmp2310 # Offset: 10038
.Ltmp2312:
    0000273b: 	movq	0x90(%rsp), %rdi
    00002743: 	leaq	0xa0(%rsp), %rax
    0000274b: 	cmpq	%rax, %rdi
    0000274e: 	jne	.Ltmp2313 # Offset: 10062
    00002754: 	jmp	.Ltmp2308 # Offset: 10068
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIfEvv"

Binary Function "_Z11TestOneTypeIdEvv" after disassembly {
  Number      : 56
  State       : disassembled
  Address     : 0x17ae0
  Size        : 0x2437
  MaxSize     : 0x2437
  Offset      : 0x17ae0
  Section     : .text
  Orc Section : .local.text._Z11TestOneTypeIdEvv
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB055:
    00000000: 	endbr64
    00000004: 	pushq	%r15
    00000006: 	pushq	%r14
    00000008: 	pushq	%r13
    0000000a: 	pushq	%r12
    0000000c: 	pushq	%rbp
    0000000d: 	pushq	%rbx
    0000000e: 	leaq	-0xf000(%rsp), %r11
.Ltmp2314:
    00000016: 	subq	$0x1000, %rsp
    0000001d: 	orq	$0x0, (%rsp)
    00000022: 	cmpq	%r11, %rsp
    00000025: 	jne	.Ltmp2314 # Offset: 37
    00000027: 	subq	$0xac8, %rsp
    0000002e: 	movdqa	"_ZL7gLabels/1"+16(%rip), %xmm7
    00000036: 	movdqa	"_ZL7gLabels/1"+32(%rip), %xmm3
    0000003e: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00000045: 	movq	%fs:0x28, %rax
    0000004e: 	movq	%rax, 0xfab8(%rsp)
    00000056: 	xorl	%eax, %eax
    00000058: 	leaq	0x50(%rsp), %rsi
    0000005d: 	movaps	%xmm7, 0x50(%rsp)
    00000062: 	leaq	0xb0(%rsp), %rbp
    0000006a: 	movq	%rsi, 0x40(%rsp)
    0000006f: 	leaq	0xfab0(%rsp), %rbx
    00000077: 	movaps	%xmm3, 0x60(%rsp)
    0000007c: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE15_M_erase_at_endESt15_Deque_iteratorIS5_RS5_PS5_E # Offset: 124
    00000081: 	leaq	0x80(%rsp), %rax
    00000089: 	movsd	init_value(%rip), %xmm0
    00000091: 	movl	$0x62756f64, 0x80(%rsp)
    0000009c: 	movq	$0x6, 0x78(%rsp)
    000000a5: 	movb	$0x0, 0x86(%rsp)
    000000ad: 	unpcklpd	%xmm0, %xmm0
    000000b1: 	movq	%rax, 0x48(%rsp)
    000000b6: 	movq	%rax, 0x70(%rsp)
    000000bb: 	movl	$0x656c, %eax
    000000c0: 	movw	%ax, 0x84(%rsp)
    000000c8: 	movq	%rbp, %rax
    000000cb: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2315:
    000000d0: 	movaps	%xmm0, (%rax)
    000000d3: 	addq	$0x10, %rax
    000000d7: 	cmpq	%rbx, %rax
    000000da: 	jne	.Ltmp2315 # Offset: 218
    000000dc: 	leaq	0x90(%rsp), %r12
    000000e4: 	leaq	0x70(%rsp), %r15
    000000e9: 	leaq	DATAat0x1a1d8(%rip), %rdx
    000000f0: 	movq	%r15, %rsi
    000000f3: 	movq	%r12, %rdi
    000000f6: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 246
    000000fb: 	callq	clock@PLT # Offset: 251
    00000100: 	movl	iterations(%rip), %edx
    00000106: 	movq	%rax, start_time(%rip)
    0000010d: 	testl	%edx, %edx
    0000010f: 	jle	.Ltmp2316 # Offset: 271
    00000115: 	movsd	DATAat0x1a348(%rip), %xmm5
    0000011d: 	pxor	%xmm4, %xmm4
    00000121: 	xorl	%r13d, %r13d
    00000124: 	movq	DATAat0x1a360(%rip), %xmm6
    0000012c: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000134: 	movsd	DATAat0x1a338(%rip), %xmm3
    0000013c: 	movsd	%xmm4, 0x18(%rsp)
    00000142: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000149: 	movsd	%xmm5, 0x30(%rsp)
    0000014f: 	movaps	%xmm6, (%rsp)
    00000153: 	movsd	%xmm7, 0x20(%rsp)
    00000159: 	movsd	%xmm3, 0x28(%rsp)
    0000015f: 	nop # Size: 1
.Ltmp2320:
    00000160: 	movq	%rbp, %rax
    00000163: 	pxor	%xmm0, %xmm0
    00000167: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2317:
    00000170: 	movsd	(%rax), %xmm1
    00000174: 	addq	$0x10, %rax
    00000178: 	addsd	%xmm1, %xmm0
    0000017c: 	movsd	-0x8(%rax), %xmm1
    00000181: 	addsd	%xmm1, %xmm0
    00000185: 	cmpq	%rax, %rbx
    00000188: 	jne	.Ltmp2317 # Offset: 392
    0000018a: 	movsd	0x30(%rsp), %xmm2
    00000190: 	movapd	(%rsp), %xmm3
    00000195: 	movapd	%xmm0, %xmm1
    00000199: 	mulsd	init_value(%rip), %xmm2
    000001a1: 	andpd	%xmm0, %xmm3
    000001a5: 	comisd	0x20(%rsp), %xmm3
    000001ab: 	subsd	%xmm2, %xmm1
    000001af: 	jbe	.Ltmp2318 # Offset: 431
    000001b1: 	divsd	%xmm0, %xmm1
.Ltmp2318:
    000001b5: 	andpd	(%rsp), %xmm1
    000001ba: 	movsd	0x28(%rsp), %xmm6
    000001c0: 	comisd	%xmm1, %xmm6
    000001c4: 	jbe	.Ltmp2319 # Offset: 452
.Ltmp2479:
    000001ca: 	addl	$0x1, %r13d
    000001ce: 	cmpl	%edx, %r13d
    000001d1: 	jl	.Ltmp2320 # Offset: 465
.Ltmp2316:
    000001d3: 	movq	%r12, %rdi
    000001d6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 470
    000001db: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000001e2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000001e9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000001f0: 	je	.Ltmp2321 # Offset: 496
.Ltmp2500:
    000001f6: 	movq	-0x20(%rax), %r13
    000001fa: 	callq	clock@PLT # Offset: 506
    000001ff: 	pxor	%xmm0, %xmm0
    00000203: 	movq	%rax, end_time(%rip)
    0000020a: 	movq	%r13, %rdi
    0000020d: 	subq	start_time(%rip), %rax
    00000214: 	cvtsi2sd	%rax, %xmm0
    00000219: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000221: 	callq	_Z13record_resultdPKc # Offset: 545
    00000226: 	movq	0x90(%rsp), %rdi
    0000022e: 	leaq	0xa0(%rsp), %rax
    00000236: 	movq	%rax, 0x38(%rsp)
    0000023b: 	cmpq	%rax, %rdi
    0000023e: 	je	.Ltmp2322 # Offset: 574
    00000240: 	movq	0xa0(%rsp), %rax
    00000248: 	leaq	0x1(%rax), %rsi
    0000024c: 	callq	_ZdlPvm@PLT # Offset: 588
.Ltmp2322:
    00000251: 	leaq	DATAat0x1a1e2(%rip), %rdx
    00000258: 	movq	%r15, %rsi
    0000025b: 	movq	%r12, %rdi
    0000025e: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 606
    00000263: 	callq	clock@PLT # Offset: 611
    00000268: 	movl	iterations(%rip), %edx
    0000026e: 	movq	%rax, start_time(%rip)
    00000275: 	testl	%edx, %edx
    00000277: 	jle	.Ltmp2323 # Offset: 631
    0000027d: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000285: 	pxor	%xmm4, %xmm4
    00000289: 	xorl	%r13d, %r13d
    0000028c: 	movq	DATAat0x1a360(%rip), %xmm6
    00000294: 	movsd	DATAat0x1a330(%rip), %xmm7
    0000029c: 	movsd	DATAat0x1a338(%rip), %xmm3
    000002a4: 	movsd	%xmm4, 0x18(%rsp)
    000002aa: 	leaq	DATAat0x1a1c8(%rip), %r14
    000002b1: 	movsd	%xmm5, 0x30(%rsp)
    000002b7: 	movaps	%xmm6, (%rsp)
    000002bb: 	movsd	%xmm7, 0x20(%rsp)
    000002c1: 	movsd	%xmm3, 0x28(%rsp)
    000002c7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2327:
    000002d0: 	movq	%rbp, %rax
    000002d3: 	pxor	%xmm0, %xmm0
    000002d7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2324:
    000002e0: 	movsd	(%rax), %xmm1
    000002e4: 	addq	$0x10, %rax
    000002e8: 	addsd	%xmm1, %xmm0
    000002ec: 	movsd	-0x8(%rax), %xmm1
    000002f1: 	addsd	%xmm1, %xmm0
    000002f5: 	cmpq	%rbx, %rax
    000002f8: 	jne	.Ltmp2324 # Offset: 760
    000002fa: 	movsd	0x30(%rsp), %xmm2
    00000300: 	movapd	(%rsp), %xmm4
    00000305: 	movapd	%xmm0, %xmm1
    00000309: 	mulsd	init_value(%rip), %xmm2
    00000311: 	andpd	%xmm0, %xmm4
    00000315: 	comisd	0x20(%rsp), %xmm4
    0000031b: 	subsd	%xmm2, %xmm1
    0000031f: 	jbe	.Ltmp2325 # Offset: 799
    00000321: 	divsd	%xmm0, %xmm1
.Ltmp2325:
    00000325: 	andpd	(%rsp), %xmm1
    0000032a: 	movsd	0x28(%rsp), %xmm6
    00000330: 	comisd	%xmm1, %xmm6
    00000334: 	jbe	.Ltmp2326 # Offset: 820
.Ltmp2478:
    0000033a: 	addl	$0x1, %r13d
    0000033e: 	cmpl	%edx, %r13d
    00000341: 	jl	.Ltmp2327 # Offset: 833
.Ltmp2323:
    00000343: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000034a: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000351: 	subq	$0x20, %rax
    00000355: 	cmpq	%rax, %r14
    00000358: 	je	.Ltmp2328 # Offset: 856
    0000035e: 	leaq	0x10(%r14), %rdi
    00000362: 	movq	0x98(%rsp), %r13
    0000036a: 	movq	%rdi, (%r14)
    0000036d: 	movq	0x90(%rsp), %rax
    00000375: 	movq	%rax, %rcx
    00000378: 	movq	%rax, (%rsp)
    0000037c: 	addq	%r13, %rcx
    0000037f: 	je	.Ltmp2329 # Offset: 895
    00000381: 	testq	%rax, %rax
    00000384: 	je	.Ltmp2330 # Offset: 900
.Ltmp2329:
    0000038a: 	movq	%r13, 0x50(%rsp)
    0000038f: 	cmpq	$0xf, %r13
    00000393: 	ja	.Ltmp2331 # Offset: 915
    00000399: 	cmpq	$0x1, %r13
    0000039d: 	jne	.Ltmp2332 # Offset: 925
    000003a3: 	movq	(%rsp), %rax
    000003a7: 	movzbl	(%rax), %eax
    000003aa: 	movb	%al, 0x10(%r14)
.Ltmp2480:
    000003ae: 	movq	%r13, 0x8(%r14)
    000003b2: 	movb	$0x0, (%rdi,%r13)
    000003b7: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000003be: 	addq	$0x20, %rax
    000003c2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2510:
    000003c9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000003d0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000003d7: 	je	.Ltmp2333 # Offset: 983
.Ltmp2508:
    000003dd: 	movq	-0x20(%rax), %r13
    000003e1: 	callq	clock@PLT # Offset: 993
    000003e6: 	pxor	%xmm0, %xmm0
    000003ea: 	movq	%rax, end_time(%rip)
    000003f1: 	movq	%r13, %rdi
    000003f4: 	subq	start_time(%rip), %rax
    000003fb: 	cvtsi2sd	%rax, %xmm0
    00000400: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000408: 	callq	_Z13record_resultdPKc # Offset: 1032
    0000040d: 	movq	0x90(%rsp), %rdi
    00000415: 	cmpq	0x38(%rsp), %rdi
    0000041a: 	je	.Ltmp2334 # Offset: 1050
    0000041c: 	movq	0xa0(%rsp), %rax
    00000424: 	leaq	0x1(%rax), %rsi
    00000428: 	callq	_ZdlPvm@PLT # Offset: 1064
.Ltmp2334:
    0000042d: 	leaq	DATAat0x1a1ee(%rip), %rdx
    00000434: 	movq	%r15, %rsi
    00000437: 	movq	%r12, %rdi
    0000043a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1082
    0000043f: 	callq	clock@PLT # Offset: 1087
    00000444: 	movl	iterations(%rip), %edx
    0000044a: 	movq	%rax, start_time(%rip)
    00000451: 	testl	%edx, %edx
    00000453: 	jle	.Ltmp2335 # Offset: 1107
    00000459: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000461: 	pxor	%xmm4, %xmm4
    00000465: 	xorl	%r13d, %r13d
    00000468: 	movq	DATAat0x1a360(%rip), %xmm6
    00000470: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000478: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000480: 	movsd	%xmm4, 0x18(%rsp)
    00000486: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000048d: 	movsd	%xmm5, 0x30(%rsp)
    00000493: 	movaps	%xmm6, (%rsp)
    00000497: 	movsd	%xmm7, 0x20(%rsp)
    0000049d: 	movsd	%xmm3, 0x28(%rsp)
    000004a3: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2339:
    000004a8: 	movq	%rbp, %rax
    000004ab: 	pxor	%xmm0, %xmm0
    000004af: 	nop # Size: 1
.Ltmp2336:
    000004b0: 	movsd	(%rax), %xmm1
    000004b4: 	addq	$0x10, %rax
    000004b8: 	addsd	%xmm1, %xmm0
    000004bc: 	movsd	-0x8(%rax), %xmm1
    000004c1: 	addsd	%xmm1, %xmm0
    000004c5: 	cmpq	%rbx, %rax
    000004c8: 	jne	.Ltmp2336 # Offset: 1224
    000004ca: 	movsd	0x30(%rsp), %xmm2
    000004d0: 	movapd	(%rsp), %xmm5
    000004d5: 	movapd	%xmm0, %xmm1
    000004d9: 	mulsd	init_value(%rip), %xmm2
    000004e1: 	andpd	%xmm0, %xmm5
    000004e5: 	comisd	0x20(%rsp), %xmm5
    000004eb: 	subsd	%xmm2, %xmm1
    000004ef: 	jbe	.Ltmp2337 # Offset: 1263
    000004f1: 	divsd	%xmm0, %xmm1
.Ltmp2337:
    000004f5: 	andpd	(%rsp), %xmm1
    000004fa: 	movsd	0x28(%rsp), %xmm4
    00000500: 	comisd	%xmm1, %xmm4
    00000504: 	jbe	.Ltmp2338 # Offset: 1284
.Ltmp2491:
    0000050a: 	addl	$0x1, %r13d
    0000050e: 	cmpl	%edx, %r13d
    00000511: 	jl	.Ltmp2339 # Offset: 1297
.Ltmp2335:
    00000513: 	movq	%r12, %rdi
    00000516: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1302
    0000051b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000522: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000529: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000530: 	je	.Ltmp2340 # Offset: 1328
.Ltmp2506:
    00000536: 	movq	-0x20(%rax), %r13
    0000053a: 	callq	clock@PLT # Offset: 1338
    0000053f: 	pxor	%xmm0, %xmm0
    00000543: 	movq	%rax, end_time(%rip)
    0000054a: 	movq	%r13, %rdi
    0000054d: 	subq	start_time(%rip), %rax
    00000554: 	cvtsi2sd	%rax, %xmm0
    00000559: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000561: 	callq	_Z13record_resultdPKc # Offset: 1377
    00000566: 	movq	0x90(%rsp), %rdi
    0000056e: 	cmpq	0x38(%rsp), %rdi
    00000573: 	je	.Ltmp2341 # Offset: 1395
    00000575: 	movq	0xa0(%rsp), %rax
    0000057d: 	leaq	0x1(%rax), %rsi
    00000581: 	callq	_ZdlPvm@PLT # Offset: 1409
.Ltmp2341:
    00000586: 	leaq	DATAat0x1a1fb(%rip), %rdx
    0000058d: 	movq	%r15, %rsi
    00000590: 	movq	%r12, %rdi
    00000593: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1427
    00000598: 	callq	clock@PLT # Offset: 1432
    0000059d: 	movl	iterations(%rip), %edx
    000005a3: 	movq	%rax, start_time(%rip)
    000005aa: 	testl	%edx, %edx
    000005ac: 	jle	.Ltmp2342 # Offset: 1452
    000005b2: 	movsd	DATAat0x1a348(%rip), %xmm5
    000005ba: 	pxor	%xmm4, %xmm4
    000005be: 	xorl	%r13d, %r13d
    000005c1: 	movq	DATAat0x1a360(%rip), %xmm6
    000005c9: 	movsd	DATAat0x1a330(%rip), %xmm7
    000005d1: 	movsd	DATAat0x1a338(%rip), %xmm3
    000005d9: 	movsd	%xmm4, 0x18(%rsp)
    000005df: 	leaq	DATAat0x1a1c8(%rip), %r14
    000005e6: 	movsd	%xmm5, 0x30(%rsp)
    000005ec: 	movaps	%xmm6, (%rsp)
    000005f0: 	movsd	%xmm7, 0x20(%rsp)
    000005f6: 	movsd	%xmm3, 0x28(%rsp)
    000005fc: 	nopl	(%rax) # Size: 4
.Ltmp2346:
    00000600: 	movq	%rbp, %rax
    00000603: 	pxor	%xmm0, %xmm0
    00000607: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2343:
    00000610: 	movsd	(%rax), %xmm1
    00000614: 	addq	$0x10, %rax
    00000618: 	addsd	%xmm1, %xmm0
    0000061c: 	movsd	-0x8(%rax), %xmm1
    00000621: 	addsd	%xmm1, %xmm0
    00000625: 	cmpq	%rbx, %rax
    00000628: 	jne	.Ltmp2343 # Offset: 1576
    0000062a: 	movsd	0x30(%rsp), %xmm2
    00000630: 	movapd	(%rsp), %xmm6
    00000635: 	movapd	%xmm0, %xmm1
    00000639: 	mulsd	init_value(%rip), %xmm2
    00000641: 	andpd	%xmm0, %xmm6
    00000645: 	comisd	0x20(%rsp), %xmm6
    0000064b: 	subsd	%xmm2, %xmm1
    0000064f: 	jbe	.Ltmp2344 # Offset: 1615
    00000651: 	divsd	%xmm0, %xmm1
.Ltmp2344:
    00000655: 	andpd	(%rsp), %xmm1
    0000065a: 	movsd	0x28(%rsp), %xmm7
    00000660: 	comisd	%xmm1, %xmm7
    00000664: 	jbe	.Ltmp2345 # Offset: 1636
.Ltmp2490:
    0000066a: 	addl	$0x1, %r13d
    0000066e: 	cmpl	%edx, %r13d
    00000671: 	jl	.Ltmp2346 # Offset: 1649
.Ltmp2342:
    00000673: 	movq	%r12, %rdi
    00000676: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 1654
    0000067b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000682: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000689: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000690: 	je	.Ltmp2347 # Offset: 1680
.Ltmp2505:
    00000696: 	movq	-0x20(%rax), %r13
    0000069a: 	callq	clock@PLT # Offset: 1690
    0000069f: 	pxor	%xmm0, %xmm0
    000006a3: 	movq	%rax, end_time(%rip)
    000006aa: 	movq	%r13, %rdi
    000006ad: 	subq	start_time(%rip), %rax
    000006b4: 	cvtsi2sd	%rax, %xmm0
    000006b9: 	divsd	DATAat0x1a318(%rip), %xmm0
    000006c1: 	callq	_Z13record_resultdPKc # Offset: 1729
    000006c6: 	movq	0x90(%rsp), %rdi
    000006ce: 	cmpq	0x38(%rsp), %rdi
    000006d3: 	je	.Ltmp2348 # Offset: 1747
    000006d5: 	movq	0xa0(%rsp), %rax
    000006dd: 	leaq	0x1(%rax), %rsi
    000006e1: 	callq	_ZdlPvm@PLT # Offset: 1761
.Ltmp2348:
    000006e6: 	leaq	DATAat0x1a208(%rip), %rdx
    000006ed: 	movq	%r15, %rsi
    000006f0: 	movq	%r12, %rdi
    000006f3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 1779
    000006f8: 	callq	clock@PLT # Offset: 1784
    000006fd: 	movl	iterations(%rip), %edx
    00000703: 	movq	%rax, start_time(%rip)
    0000070a: 	testl	%edx, %edx
    0000070c: 	jle	.Ltmp2349 # Offset: 1804
    00000712: 	movsd	DATAat0x1a348(%rip), %xmm5
    0000071a: 	pxor	%xmm4, %xmm4
    0000071e: 	xorl	%r13d, %r13d
    00000721: 	movq	DATAat0x1a360(%rip), %xmm6
    00000729: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000731: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000739: 	movsd	%xmm4, 0x18(%rsp)
    0000073f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000746: 	movsd	%xmm5, 0x30(%rsp)
    0000074c: 	movaps	%xmm6, (%rsp)
    00000750: 	movsd	%xmm7, 0x20(%rsp)
    00000756: 	movsd	%xmm3, 0x28(%rsp)
    0000075c: 	nopl	(%rax) # Size: 4
.Ltmp2353:
    00000760: 	movq	%rbp, %rax
    00000763: 	pxor	%xmm0, %xmm0
    00000767: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2350:
    00000770: 	movsd	(%rax), %xmm1
    00000774: 	addq	$0x10, %rax
    00000778: 	addsd	%xmm1, %xmm0
    0000077c: 	movsd	-0x8(%rax), %xmm1
    00000781: 	addsd	%xmm1, %xmm0
    00000785: 	cmpq	%rax, %rbx
    00000788: 	jne	.Ltmp2350 # Offset: 1928
    0000078a: 	movsd	0x30(%rsp), %xmm2
    00000790: 	movapd	(%rsp), %xmm7
    00000795: 	movapd	%xmm0, %xmm1
    00000799: 	mulsd	init_value(%rip), %xmm2
    000007a1: 	andpd	%xmm0, %xmm7
    000007a5: 	comisd	0x20(%rsp), %xmm7
    000007ab: 	subsd	%xmm2, %xmm1
    000007af: 	jbe	.Ltmp2351 # Offset: 1967
    000007b1: 	divsd	%xmm0, %xmm1
.Ltmp2351:
    000007b5: 	andpd	(%rsp), %xmm1
    000007ba: 	movsd	0x28(%rsp), %xmm5
    000007c0: 	comisd	%xmm1, %xmm5
    000007c4: 	jbe	.Ltmp2352 # Offset: 1988
.Ltmp2489:
    000007ca: 	addl	$0x1, %r13d
    000007ce: 	cmpl	%edx, %r13d
    000007d1: 	jl	.Ltmp2353 # Offset: 2001
.Ltmp2349:
    000007d3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000007da: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000007e1: 	subq	$0x20, %rax
    000007e5: 	cmpq	%rax, %r14
    000007e8: 	je	.Ltmp2354 # Offset: 2024
    000007ee: 	leaq	0x10(%r14), %rdi
    000007f2: 	movq	0x98(%rsp), %r13
    000007fa: 	movq	%rdi, (%r14)
    000007fd: 	movq	0x90(%rsp), %rax
    00000805: 	movq	%rax, %rcx
    00000808: 	movq	%rax, (%rsp)
    0000080c: 	addq	%r13, %rcx
    0000080f: 	je	.Ltmp2355 # Offset: 2063
    00000811: 	testq	%rax, %rax
    00000814: 	je	.Ltmp2356 # Offset: 2068
.Ltmp2355:
    0000081a: 	movq	%r13, 0x50(%rsp)
    0000081f: 	cmpq	$0xf, %r13
    00000823: 	ja	.Ltmp2357 # Offset: 2083
    00000829: 	cmpq	$0x1, %r13
    0000082d: 	jne	.Ltmp2358 # Offset: 2093
    00000833: 	movq	(%rsp), %rax
    00000837: 	movzbl	(%rax), %eax
    0000083a: 	movb	%al, 0x10(%r14)
.Ltmp2522:
    0000083e: 	movq	%r13, 0x8(%r14)
    00000842: 	movb	$0x0, (%rdi,%r13)
    00000847: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000084e: 	addq	$0x20, %rax
    00000852: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2503:
    00000859: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000860: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000867: 	je	.Ltmp2359 # Offset: 2151
.Ltmp2497:
    0000086d: 	movq	-0x20(%rax), %r13
    00000871: 	callq	clock@PLT # Offset: 2161
    00000876: 	pxor	%xmm0, %xmm0
    0000087a: 	movq	%rax, end_time(%rip)
    00000881: 	movq	%r13, %rdi
    00000884: 	subq	start_time(%rip), %rax
    0000088b: 	cvtsi2sd	%rax, %xmm0
    00000890: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000898: 	callq	_Z13record_resultdPKc # Offset: 2200
    0000089d: 	movq	0x90(%rsp), %rdi
    000008a5: 	cmpq	0x38(%rsp), %rdi
    000008aa: 	je	.Ltmp2360 # Offset: 2218
    000008ac: 	movq	0xa0(%rsp), %rax
    000008b4: 	leaq	0x1(%rax), %rsi
    000008b8: 	callq	_ZdlPvm@PLT # Offset: 2232
.Ltmp2360:
    000008bd: 	leaq	DATAat0x1a215(%rip), %rdx
    000008c4: 	movq	%r15, %rsi
    000008c7: 	movq	%r12, %rdi
    000008ca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2250
    000008cf: 	callq	clock@PLT # Offset: 2255
    000008d4: 	movl	iterations(%rip), %edx
    000008da: 	movq	%rax, start_time(%rip)
    000008e1: 	testl	%edx, %edx
    000008e3: 	jle	.Ltmp2361 # Offset: 2275
    000008e9: 	movsd	DATAat0x1a348(%rip), %xmm5
    000008f1: 	pxor	%xmm4, %xmm4
    000008f5: 	xorl	%r13d, %r13d
    000008f8: 	movq	DATAat0x1a360(%rip), %xmm6
    00000900: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000908: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000910: 	movsd	%xmm4, 0x18(%rsp)
    00000916: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000091d: 	movsd	%xmm5, 0x30(%rsp)
    00000923: 	movaps	%xmm6, (%rsp)
    00000927: 	movsd	%xmm7, 0x20(%rsp)
    0000092d: 	movsd	%xmm3, 0x28(%rsp)
    00000933: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2365:
    00000938: 	movq	%rbp, %rax
    0000093b: 	pxor	%xmm0, %xmm0
    0000093f: 	nop # Size: 1
.Ltmp2362:
    00000940: 	movsd	(%rax), %xmm1
    00000944: 	addq	$0x10, %rax
    00000948: 	addsd	%xmm1, %xmm0
    0000094c: 	movsd	-0x8(%rax), %xmm1
    00000951: 	addsd	%xmm1, %xmm0
    00000955: 	cmpq	%rbx, %rax
    00000958: 	jne	.Ltmp2362 # Offset: 2392
    0000095a: 	movsd	0x30(%rsp), %xmm2
    00000960: 	movapd	(%rsp), %xmm3
    00000965: 	movapd	%xmm0, %xmm1
    00000969: 	mulsd	init_value(%rip), %xmm2
    00000971: 	andpd	%xmm0, %xmm3
    00000975: 	comisd	0x20(%rsp), %xmm3
    0000097b: 	subsd	%xmm2, %xmm1
    0000097f: 	jbe	.Ltmp2363 # Offset: 2431
    00000981: 	divsd	%xmm0, %xmm1
.Ltmp2363:
    00000985: 	andpd	(%rsp), %xmm1
    0000098a: 	movsd	0x28(%rsp), %xmm3
    00000990: 	comisd	%xmm1, %xmm3
    00000994: 	jbe	.Ltmp2364 # Offset: 2452
.Ltmp2495:
    0000099a: 	addl	$0x1, %r13d
    0000099e: 	cmpl	%edx, %r13d
    000009a1: 	jl	.Ltmp2365 # Offset: 2465
.Ltmp2361:
    000009a3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000009aa: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    000009b1: 	subq	$0x20, %rax
    000009b5: 	cmpq	%rax, %r14
    000009b8: 	je	.Ltmp2366 # Offset: 2488
    000009be: 	leaq	0x10(%r14), %rdi
    000009c2: 	movq	0x98(%rsp), %r13
    000009ca: 	movq	%rdi, (%r14)
    000009cd: 	movq	0x90(%rsp), %rax
    000009d5: 	movq	%rax, %rcx
    000009d8: 	movq	%rax, (%rsp)
    000009dc: 	addq	%r13, %rcx
    000009df: 	je	.Ltmp2367 # Offset: 2527
    000009e1: 	testq	%rax, %rax
    000009e4: 	je	.Ltmp2368 # Offset: 2532
.Ltmp2367:
    000009ea: 	movq	%r13, 0x50(%rsp)
    000009ef: 	cmpq	$0xf, %r13
    000009f3: 	ja	.Ltmp2369 # Offset: 2547
    000009f9: 	cmpq	$0x1, %r13
    000009fd: 	jne	.Ltmp2370 # Offset: 2557
    00000a03: 	movq	(%rsp), %rax
    00000a07: 	movzbl	(%rax), %eax
    00000a0a: 	movb	%al, 0x10(%r14)
.Ltmp2526:
    00000a0e: 	movq	%r13, 0x8(%r14)
    00000a12: 	movb	$0x0, (%rdi,%r13)
    00000a17: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000a1e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000a25: 	addq	$0x20, %rax
    00000a29: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000a30: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000a37: 	je	.Ltmp2371 # Offset: 2615
.Ltmp2496:
    00000a3d: 	movq	-0x20(%rax), %r13
    00000a41: 	callq	clock@PLT # Offset: 2625
    00000a46: 	pxor	%xmm0, %xmm0
    00000a4a: 	movq	%rax, end_time(%rip)
    00000a51: 	movq	%r13, %rdi
    00000a54: 	subq	start_time(%rip), %rax
    00000a5b: 	cvtsi2sd	%rax, %xmm0
    00000a60: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000a68: 	callq	_Z13record_resultdPKc # Offset: 2664
    00000a6d: 	movq	0x90(%rsp), %rdi
    00000a75: 	cmpq	0x38(%rsp), %rdi
    00000a7a: 	je	.Ltmp2372 # Offset: 2682
    00000a7c: 	movq	0xa0(%rsp), %rax
    00000a84: 	leaq	0x1(%rax), %rsi
    00000a88: 	callq	_ZdlPvm@PLT # Offset: 2696
.Ltmp2372:
    00000a8d: 	leaq	DATAat0x1a226(%rip), %rdx
    00000a94: 	movq	%r15, %rsi
    00000a97: 	movq	%r12, %rdi
    00000a9a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 2714
    00000a9f: 	callq	clock@PLT # Offset: 2719
    00000aa4: 	movl	iterations(%rip), %edx
    00000aaa: 	movq	%rax, start_time(%rip)
    00000ab1: 	testl	%edx, %edx
    00000ab3: 	jle	.Ltmp2373 # Offset: 2739
    00000ab9: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000ac1: 	pxor	%xmm4, %xmm4
    00000ac5: 	xorl	%r13d, %r13d
    00000ac8: 	movq	DATAat0x1a360(%rip), %xmm6
    00000ad0: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000ad8: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000ae0: 	movsd	%xmm4, 0x18(%rsp)
    00000ae6: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000aed: 	movsd	%xmm5, 0x30(%rsp)
    00000af3: 	movaps	%xmm6, (%rsp)
    00000af7: 	movsd	%xmm7, 0x20(%rsp)
    00000afd: 	movsd	%xmm3, 0x28(%rsp)
    00000b03: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2377:
    00000b08: 	movq	%rbp, %rax
    00000b0b: 	pxor	%xmm0, %xmm0
    00000b0f: 	nop # Size: 1
.Ltmp2374:
    00000b10: 	movsd	(%rax), %xmm1
    00000b14: 	addq	$0x10, %rax
    00000b18: 	addsd	%xmm1, %xmm0
    00000b1c: 	movsd	-0x8(%rax), %xmm1
    00000b21: 	addsd	%xmm1, %xmm0
    00000b25: 	cmpq	%rbx, %rax
    00000b28: 	jne	.Ltmp2374 # Offset: 2856
    00000b2a: 	movsd	0x30(%rsp), %xmm2
    00000b30: 	movapd	(%rsp), %xmm4
    00000b35: 	movapd	%xmm0, %xmm1
    00000b39: 	mulsd	init_value(%rip), %xmm2
    00000b41: 	andpd	%xmm0, %xmm4
    00000b45: 	comisd	0x20(%rsp), %xmm4
    00000b4b: 	subsd	%xmm2, %xmm1
    00000b4f: 	jbe	.Ltmp2375 # Offset: 2895
    00000b51: 	divsd	%xmm0, %xmm1
.Ltmp2375:
    00000b55: 	andpd	(%rsp), %xmm1
    00000b5a: 	movsd	0x28(%rsp), %xmm6
    00000b60: 	comisd	%xmm1, %xmm6
    00000b64: 	jbe	.Ltmp2376 # Offset: 2916
.Ltmp2494:
    00000b6a: 	addl	$0x1, %r13d
    00000b6e: 	cmpl	%edx, %r13d
    00000b71: 	jl	.Ltmp2377 # Offset: 2929
.Ltmp2373:
    00000b73: 	movq	%r12, %rdi
    00000b76: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 2934
    00000b7b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000b82: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000b89: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000b90: 	je	.Ltmp2378 # Offset: 2960
.Ltmp2504:
    00000b96: 	movq	-0x20(%rax), %r13
    00000b9a: 	callq	clock@PLT # Offset: 2970
    00000b9f: 	pxor	%xmm0, %xmm0
    00000ba3: 	movq	%rax, end_time(%rip)
    00000baa: 	movq	%r13, %rdi
    00000bad: 	subq	start_time(%rip), %rax
    00000bb4: 	cvtsi2sd	%rax, %xmm0
    00000bb9: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000bc1: 	callq	_Z13record_resultdPKc # Offset: 3009
    00000bc6: 	movq	0x90(%rsp), %rdi
    00000bce: 	cmpq	0x38(%rsp), %rdi
    00000bd3: 	je	.Ltmp2379 # Offset: 3027
    00000bd5: 	movq	0xa0(%rsp), %rax
    00000bdd: 	leaq	0x1(%rax), %rsi
    00000be1: 	callq	_ZdlPvm@PLT # Offset: 3041
.Ltmp2379:
    00000be6: 	leaq	DATAat0x1a238(%rip), %rdx
    00000bed: 	movq	%r15, %rsi
    00000bf0: 	movq	%r12, %rdi
    00000bf3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3059
    00000bf8: 	callq	clock@PLT # Offset: 3064
    00000bfd: 	movl	iterations(%rip), %edx
    00000c03: 	movq	%rax, start_time(%rip)
    00000c0a: 	testl	%edx, %edx
    00000c0c: 	jle	.Ltmp2380 # Offset: 3084
    00000c12: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000c1a: 	pxor	%xmm4, %xmm4
    00000c1e: 	xorl	%r13d, %r13d
    00000c21: 	movq	DATAat0x1a360(%rip), %xmm6
    00000c29: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000c31: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000c39: 	movsd	%xmm4, 0x18(%rsp)
    00000c3f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000c46: 	movsd	%xmm5, 0x30(%rsp)
    00000c4c: 	movaps	%xmm6, (%rsp)
    00000c50: 	movsd	%xmm7, 0x20(%rsp)
    00000c56: 	movsd	%xmm3, 0x28(%rsp)
    00000c5c: 	nopl	(%rax) # Size: 4
.Ltmp2384:
    00000c60: 	movq	%rbp, %rax
    00000c63: 	pxor	%xmm0, %xmm0
    00000c67: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2381:
    00000c70: 	movsd	(%rax), %xmm1
    00000c74: 	addq	$0x10, %rax
    00000c78: 	addsd	%xmm1, %xmm0
    00000c7c: 	movsd	-0x8(%rax), %xmm1
    00000c81: 	addsd	%xmm1, %xmm0
    00000c85: 	cmpq	%rbx, %rax
    00000c88: 	jne	.Ltmp2381 # Offset: 3208
    00000c8a: 	movsd	0x30(%rsp), %xmm2
    00000c90: 	movapd	(%rsp), %xmm5
    00000c95: 	movapd	%xmm0, %xmm1
    00000c99: 	mulsd	init_value(%rip), %xmm2
    00000ca1: 	andpd	%xmm0, %xmm5
    00000ca5: 	comisd	0x20(%rsp), %xmm5
    00000cab: 	subsd	%xmm2, %xmm1
    00000caf: 	jbe	.Ltmp2382 # Offset: 3247
    00000cb1: 	divsd	%xmm0, %xmm1
.Ltmp2382:
    00000cb5: 	andpd	(%rsp), %xmm1
    00000cba: 	movsd	0x28(%rsp), %xmm4
    00000cc0: 	comisd	%xmm1, %xmm4
    00000cc4: 	jbe	.Ltmp2383 # Offset: 3268
.Ltmp2493:
    00000cca: 	addl	$0x1, %r13d
    00000cce: 	cmpl	%edx, %r13d
    00000cd1: 	jl	.Ltmp2384 # Offset: 3281
.Ltmp2380:
    00000cd3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00000cda: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00000ce1: 	subq	$0x20, %rax
    00000ce5: 	cmpq	%rax, %r14
    00000ce8: 	je	.Ltmp2385 # Offset: 3304
    00000cee: 	leaq	0x10(%r14), %rdi
    00000cf2: 	movq	0x98(%rsp), %r13
    00000cfa: 	movq	%rdi, (%r14)
    00000cfd: 	movq	0x90(%rsp), %rax
    00000d05: 	movq	%rax, %rcx
    00000d08: 	movq	%rax, (%rsp)
    00000d0c: 	addq	%r13, %rcx
    00000d0f: 	je	.Ltmp2386 # Offset: 3343
    00000d11: 	testq	%rax, %rax
    00000d14: 	je	.Ltmp2387 # Offset: 3348
.Ltmp2386:
    00000d1a: 	movq	%r13, 0x50(%rsp)
    00000d1f: 	cmpq	$0xf, %r13
    00000d23: 	ja	.Ltmp2388 # Offset: 3363
    00000d29: 	cmpq	$0x1, %r13
    00000d2d: 	jne	.Ltmp2389 # Offset: 3373
    00000d33: 	movq	(%rsp), %rax
    00000d37: 	movzbl	(%rax), %eax
    00000d3a: 	movb	%al, 0x10(%r14)
.Ltmp2520:
    00000d3e: 	movq	%r13, 0x8(%r14)
    00000d42: 	movb	$0x0, (%rdi,%r13)
    00000d47: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000d4e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000d55: 	addq	$0x20, %rax
    00000d59: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00000d60: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    00000d67: 	je	.Ltmp2390 # Offset: 3431
.Ltmp2507:
    00000d6d: 	movq	-0x20(%rax), %r13
    00000d71: 	callq	clock@PLT # Offset: 3441
    00000d76: 	pxor	%xmm0, %xmm0
    00000d7a: 	movq	%rax, end_time(%rip)
    00000d81: 	movq	%r13, %rdi
    00000d84: 	subq	start_time(%rip), %rax
    00000d8b: 	cvtsi2sd	%rax, %xmm0
    00000d90: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000d98: 	callq	_Z13record_resultdPKc # Offset: 3480
    00000d9d: 	movq	0x90(%rsp), %rdi
    00000da5: 	cmpq	0x38(%rsp), %rdi
    00000daa: 	je	.Ltmp2391 # Offset: 3498
    00000dac: 	movq	0xa0(%rsp), %rax
    00000db4: 	leaq	0x1(%rax), %rsi
    00000db8: 	callq	_ZdlPvm@PLT # Offset: 3512
.Ltmp2391:
    00000dbd: 	leaq	DATAat0x1a24a(%rip), %rdx
    00000dc4: 	movq	%r15, %rsi
    00000dc7: 	movq	%r12, %rdi
    00000dca: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3530
    00000dcf: 	callq	clock@PLT # Offset: 3535
    00000dd4: 	movl	iterations(%rip), %edx
    00000dda: 	movq	%rax, start_time(%rip)
    00000de1: 	testl	%edx, %edx
    00000de3: 	jle	.Ltmp2392 # Offset: 3555
    00000de9: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000df1: 	pxor	%xmm4, %xmm4
    00000df5: 	xorl	%r13d, %r13d
    00000df8: 	movq	DATAat0x1a360(%rip), %xmm6
    00000e00: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000e08: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000e10: 	movsd	%xmm4, 0x18(%rsp)
    00000e16: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000e1d: 	movsd	%xmm5, 0x30(%rsp)
    00000e23: 	movaps	%xmm6, (%rsp)
    00000e27: 	movsd	%xmm7, 0x20(%rsp)
    00000e2d: 	movsd	%xmm3, 0x28(%rsp)
    00000e33: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2396:
    00000e38: 	movq	%rbp, %rax
    00000e3b: 	pxor	%xmm0, %xmm0
    00000e3f: 	nop # Size: 1
.Ltmp2393:
    00000e40: 	movsd	(%rax), %xmm1
    00000e44: 	addq	$0x10, %rax
    00000e48: 	addsd	%xmm1, %xmm0
    00000e4c: 	movsd	-0x8(%rax), %xmm1
    00000e51: 	addsd	%xmm1, %xmm0
    00000e55: 	cmpq	%rax, %rbx
    00000e58: 	jne	.Ltmp2393 # Offset: 3672
    00000e5a: 	movsd	0x30(%rsp), %xmm2
    00000e60: 	movapd	(%rsp), %xmm6
    00000e65: 	movapd	%xmm0, %xmm1
    00000e69: 	mulsd	init_value(%rip), %xmm2
    00000e71: 	andpd	%xmm0, %xmm6
    00000e75: 	comisd	0x20(%rsp), %xmm6
    00000e7b: 	subsd	%xmm2, %xmm1
    00000e7f: 	jbe	.Ltmp2394 # Offset: 3711
    00000e81: 	divsd	%xmm0, %xmm1
.Ltmp2394:
    00000e85: 	andpd	(%rsp), %xmm1
    00000e8a: 	movsd	0x28(%rsp), %xmm7
    00000e90: 	comisd	%xmm1, %xmm7
    00000e94: 	jbe	.Ltmp2395 # Offset: 3732
.Ltmp2492:
    00000e9a: 	addl	$0x1, %r13d
    00000e9e: 	cmpl	%edx, %r13d
    00000ea1: 	jl	.Ltmp2396 # Offset: 3745
.Ltmp2392:
    00000ea3: 	movq	%r12, %rdi
    00000ea6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 3750
    00000eab: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00000eb2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00000eb9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00000ec0: 	je	.Ltmp2397 # Offset: 3776
.Ltmp2509:
    00000ec6: 	movq	-0x20(%rax), %r13
    00000eca: 	callq	clock@PLT # Offset: 3786
    00000ecf: 	pxor	%xmm0, %xmm0
    00000ed3: 	movq	%rax, end_time(%rip)
    00000eda: 	movq	%r13, %rdi
    00000edd: 	subq	start_time(%rip), %rax
    00000ee4: 	cvtsi2sd	%rax, %xmm0
    00000ee9: 	divsd	DATAat0x1a318(%rip), %xmm0
    00000ef1: 	callq	_Z13record_resultdPKc # Offset: 3825
    00000ef6: 	movq	0x90(%rsp), %rdi
    00000efe: 	cmpq	0x38(%rsp), %rdi
    00000f03: 	je	.Ltmp2398 # Offset: 3843
    00000f05: 	movq	0xa0(%rsp), %rax
    00000f0d: 	leaq	0x1(%rax), %rsi
    00000f11: 	callq	_ZdlPvm@PLT # Offset: 3857
.Ltmp2398:
    00000f16: 	leaq	DATAat0x1a25c(%rip), %rdx
    00000f1d: 	movq	%r15, %rsi
    00000f20: 	movq	%r12, %rdi
    00000f23: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 3875
    00000f28: 	callq	clock@PLT # Offset: 3880
    00000f2d: 	movl	iterations(%rip), %edx
    00000f33: 	movq	%rax, start_time(%rip)
    00000f3a: 	testl	%edx, %edx
    00000f3c: 	jle	.Ltmp2399 # Offset: 3900
    00000f42: 	movsd	DATAat0x1a348(%rip), %xmm5
    00000f4a: 	pxor	%xmm4, %xmm4
    00000f4e: 	xorl	%r13d, %r13d
    00000f51: 	movq	DATAat0x1a360(%rip), %xmm6
    00000f59: 	movsd	DATAat0x1a330(%rip), %xmm7
    00000f61: 	movsd	DATAat0x1a338(%rip), %xmm3
    00000f69: 	movsd	%xmm4, 0x18(%rsp)
    00000f6f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00000f76: 	movsd	%xmm5, 0x30(%rsp)
    00000f7c: 	movaps	%xmm6, (%rsp)
    00000f80: 	movsd	%xmm7, 0x20(%rsp)
    00000f86: 	movsd	%xmm3, 0x28(%rsp)
    00000f8c: 	nopl	(%rax) # Size: 4
.Ltmp2403:
    00000f90: 	movq	%rbp, %rax
    00000f93: 	pxor	%xmm0, %xmm0
    00000f97: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2400:
    00000fa0: 	movsd	(%rax), %xmm1
    00000fa4: 	addq	$0x10, %rax
    00000fa8: 	addsd	%xmm1, %xmm0
    00000fac: 	movsd	-0x8(%rax), %xmm1
    00000fb1: 	addsd	%xmm1, %xmm0
    00000fb5: 	cmpq	%rbx, %rax
    00000fb8: 	jne	.Ltmp2400 # Offset: 4024
    00000fba: 	movsd	0x30(%rsp), %xmm2
    00000fc0: 	movapd	(%rsp), %xmm7
    00000fc5: 	movapd	%xmm0, %xmm1
    00000fc9: 	mulsd	init_value(%rip), %xmm2
    00000fd1: 	andpd	%xmm0, %xmm7
    00000fd5: 	comisd	0x20(%rsp), %xmm7
    00000fdb: 	subsd	%xmm2, %xmm1
    00000fdf: 	jbe	.Ltmp2401 # Offset: 4063
    00000fe1: 	divsd	%xmm0, %xmm1
.Ltmp2401:
    00000fe5: 	andpd	(%rsp), %xmm1
    00000fea: 	movsd	0x28(%rsp), %xmm5
    00000ff0: 	comisd	%xmm1, %xmm5
    00000ff4: 	jbe	.Ltmp2402 # Offset: 4084
.Ltmp2488:
    00000ffa: 	addl	$0x1, %r13d
    00000ffe: 	cmpl	%edx, %r13d
    00001001: 	jl	.Ltmp2403 # Offset: 4097
.Ltmp2399:
    00001003: 	movq	%r12, %rdi
    00001006: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4102
    0000100b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001012: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001019: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001020: 	je	.Ltmp2404 # Offset: 4128
.Ltmp2502:
    00001026: 	movq	-0x20(%rax), %r13
    0000102a: 	callq	clock@PLT # Offset: 4138
    0000102f: 	pxor	%xmm0, %xmm0
    00001033: 	movq	%rax, end_time(%rip)
    0000103a: 	movq	%r13, %rdi
    0000103d: 	subq	start_time(%rip), %rax
    00001044: 	cvtsi2sd	%rax, %xmm0
    00001049: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001051: 	callq	_Z13record_resultdPKc # Offset: 4177
    00001056: 	movq	0x90(%rsp), %rdi
    0000105e: 	cmpq	0x38(%rsp), %rdi
    00001063: 	je	.Ltmp2405 # Offset: 4195
    00001065: 	movq	0xa0(%rsp), %rax
    0000106d: 	leaq	0x1(%rax), %rsi
    00001071: 	callq	_ZdlPvm@PLT # Offset: 4209
.Ltmp2405:
    00001076: 	leaq	DATAat0x1a26b(%rip), %rdx
    0000107d: 	movq	%r15, %rsi
    00001080: 	movq	%r12, %rdi
    00001083: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4227
    00001088: 	callq	clock@PLT # Offset: 4232
    0000108d: 	movl	iterations(%rip), %edx
    00001093: 	movq	%rax, start_time(%rip)
    0000109a: 	testl	%edx, %edx
    0000109c: 	jle	.Ltmp2406 # Offset: 4252
    000010a2: 	movsd	DATAat0x1a348(%rip), %xmm5
    000010aa: 	pxor	%xmm4, %xmm4
    000010ae: 	xorl	%r13d, %r13d
    000010b1: 	movq	DATAat0x1a360(%rip), %xmm6
    000010b9: 	movsd	DATAat0x1a330(%rip), %xmm7
    000010c1: 	movsd	DATAat0x1a338(%rip), %xmm3
    000010c9: 	movsd	%xmm4, 0x18(%rsp)
    000010cf: 	leaq	DATAat0x1a1c8(%rip), %r14
    000010d6: 	movsd	%xmm5, 0x30(%rsp)
    000010dc: 	movaps	%xmm6, (%rsp)
    000010e0: 	movsd	%xmm7, 0x20(%rsp)
    000010e6: 	movsd	%xmm3, 0x28(%rsp)
    000010ec: 	nopl	(%rax) # Size: 4
.Ltmp2410:
    000010f0: 	movq	%rbp, %rax
    000010f3: 	pxor	%xmm0, %xmm0
    000010f7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2407:
    00001100: 	movsd	(%rax), %xmm1
    00001104: 	addq	$0x10, %rax
    00001108: 	addsd	%xmm1, %xmm0
    0000110c: 	movsd	-0x8(%rax), %xmm1
    00001111: 	addsd	%xmm1, %xmm0
    00001115: 	cmpq	%rbx, %rax
    00001118: 	jne	.Ltmp2407 # Offset: 4376
    0000111a: 	movsd	0x30(%rsp), %xmm2
    00001120: 	movapd	(%rsp), %xmm3
    00001125: 	movapd	%xmm0, %xmm1
    00001129: 	mulsd	init_value(%rip), %xmm2
    00001131: 	andpd	%xmm0, %xmm3
    00001135: 	comisd	0x20(%rsp), %xmm3
    0000113b: 	subsd	%xmm2, %xmm1
    0000113f: 	jbe	.Ltmp2408 # Offset: 4415
    00001141: 	divsd	%xmm0, %xmm1
.Ltmp2408:
    00001145: 	andpd	(%rsp), %xmm1
    0000114a: 	movsd	0x28(%rsp), %xmm3
    00001150: 	comisd	%xmm1, %xmm3
    00001154: 	jbe	.Ltmp2409 # Offset: 4436
.Ltmp2487:
    0000115a: 	addl	$0x1, %r13d
    0000115e: 	cmpl	%edx, %r13d
    00001161: 	jl	.Ltmp2410 # Offset: 4449
.Ltmp2406:
    00001163: 	movq	%r12, %rdi
    00001166: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4454
    0000116b: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001172: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    00001179: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001180: 	je	.Ltmp2411 # Offset: 4480
.Ltmp2501:
    00001186: 	movq	-0x20(%rax), %r13
    0000118a: 	callq	clock@PLT # Offset: 4490
    0000118f: 	pxor	%xmm0, %xmm0
    00001193: 	movq	%rax, end_time(%rip)
    0000119a: 	movq	%r13, %rdi
    0000119d: 	subq	start_time(%rip), %rax
    000011a4: 	cvtsi2sd	%rax, %xmm0
    000011a9: 	divsd	DATAat0x1a318(%rip), %xmm0
    000011b1: 	callq	_Z13record_resultdPKc # Offset: 4529
    000011b6: 	movq	0x90(%rsp), %rdi
    000011be: 	cmpq	0x38(%rsp), %rdi
    000011c3: 	je	.Ltmp2412 # Offset: 4547
    000011c5: 	movq	0xa0(%rsp), %rax
    000011cd: 	leaq	0x1(%rax), %rsi
    000011d1: 	callq	_ZdlPvm@PLT # Offset: 4561
.Ltmp2412:
    000011d6: 	leaq	DATAat0x1a27b(%rip), %rdx
    000011dd: 	movq	%r15, %rsi
    000011e0: 	movq	%r12, %rdi
    000011e3: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4579
    000011e8: 	callq	clock@PLT # Offset: 4584
    000011ed: 	movl	iterations(%rip), %edx
    000011f3: 	movq	%rax, start_time(%rip)
    000011fa: 	testl	%edx, %edx
    000011fc: 	jle	.Ltmp2413 # Offset: 4604
    00001202: 	movsd	DATAat0x1a348(%rip), %xmm5
    0000120a: 	pxor	%xmm4, %xmm4
    0000120e: 	xorl	%r13d, %r13d
    00001211: 	movq	DATAat0x1a360(%rip), %xmm6
    00001219: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001221: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001229: 	movsd	%xmm4, 0x18(%rsp)
    0000122f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001236: 	movsd	%xmm5, 0x30(%rsp)
    0000123c: 	movaps	%xmm6, (%rsp)
    00001240: 	movsd	%xmm7, 0x20(%rsp)
    00001246: 	movsd	%xmm3, 0x28(%rsp)
    0000124c: 	nopl	(%rax) # Size: 4
.Ltmp2417:
    00001250: 	movq	%rbp, %rax
    00001253: 	pxor	%xmm0, %xmm0
    00001257: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2414:
    00001260: 	movsd	(%rax), %xmm1
    00001264: 	addq	$0x10, %rax
    00001268: 	addsd	%xmm1, %xmm0
    0000126c: 	movsd	-0x8(%rax), %xmm1
    00001271: 	addsd	%xmm1, %xmm0
    00001275: 	cmpq	%rbx, %rax
    00001278: 	jne	.Ltmp2414 # Offset: 4728
    0000127a: 	movsd	0x30(%rsp), %xmm2
    00001280: 	movapd	(%rsp), %xmm4
    00001285: 	movapd	%xmm0, %xmm1
    00001289: 	mulsd	init_value(%rip), %xmm2
    00001291: 	andpd	%xmm0, %xmm4
    00001295: 	comisd	0x20(%rsp), %xmm4
    0000129b: 	subsd	%xmm2, %xmm1
    0000129f: 	jbe	.Ltmp2415 # Offset: 4767
    000012a1: 	divsd	%xmm0, %xmm1
.Ltmp2415:
    000012a5: 	andpd	(%rsp), %xmm1
    000012aa: 	movsd	0x28(%rsp), %xmm6
    000012b0: 	comisd	%xmm1, %xmm6
    000012b4: 	jbe	.Ltmp2416 # Offset: 4788
.Ltmp2486:
    000012ba: 	addl	$0x1, %r13d
    000012be: 	cmpl	%edx, %r13d
    000012c1: 	jl	.Ltmp2417 # Offset: 4801
.Ltmp2413:
    000012c3: 	movq	%r12, %rdi
    000012c6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 4806
    000012cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000012d2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000012d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000012e0: 	je	.Ltmp2418 # Offset: 4832
.Ltmp2512:
    000012e6: 	movq	-0x20(%rax), %r13
    000012ea: 	callq	clock@PLT # Offset: 4842
    000012ef: 	pxor	%xmm0, %xmm0
    000012f3: 	movq	%rax, end_time(%rip)
    000012fa: 	movq	%r13, %rdi
    000012fd: 	subq	start_time(%rip), %rax
    00001304: 	cvtsi2sd	%rax, %xmm0
    00001309: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001311: 	callq	_Z13record_resultdPKc # Offset: 4881
    00001316: 	movq	0x90(%rsp), %rdi
    0000131e: 	cmpq	0x38(%rsp), %rdi
    00001323: 	je	.Ltmp2419 # Offset: 4899
    00001325: 	movq	0xa0(%rsp), %rax
    0000132d: 	leaq	0x1(%rax), %rsi
    00001331: 	callq	_ZdlPvm@PLT # Offset: 4913
.Ltmp2419:
    00001336: 	leaq	DATAat0x1a28b(%rip), %rdx
    0000133d: 	movq	%r15, %rsi
    00001340: 	movq	%r12, %rdi
    00001343: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 4931
    00001348: 	callq	clock@PLT # Offset: 4936
    0000134d: 	movl	iterations(%rip), %edx
    00001353: 	movq	%rax, start_time(%rip)
    0000135a: 	testl	%edx, %edx
    0000135c: 	jle	.Ltmp2420 # Offset: 4956
    00001362: 	movsd	DATAat0x1a348(%rip), %xmm5
    0000136a: 	pxor	%xmm4, %xmm4
    0000136e: 	xorl	%r13d, %r13d
    00001371: 	movq	DATAat0x1a360(%rip), %xmm6
    00001379: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001381: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001389: 	movsd	%xmm4, 0x18(%rsp)
    0000138f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001396: 	movsd	%xmm5, 0x30(%rsp)
    0000139c: 	movaps	%xmm6, (%rsp)
    000013a0: 	movsd	%xmm7, 0x20(%rsp)
    000013a6: 	movsd	%xmm3, 0x28(%rsp)
    000013ac: 	nopl	(%rax) # Size: 4
.Ltmp2424:
    000013b0: 	movq	%rbp, %rax
    000013b3: 	pxor	%xmm0, %xmm0
    000013b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2421:
    000013c0: 	movsd	(%rax), %xmm1
    000013c4: 	addq	$0x10, %rax
    000013c8: 	addsd	%xmm1, %xmm0
    000013cc: 	movsd	-0x8(%rax), %xmm1
    000013d1: 	addsd	%xmm1, %xmm0
    000013d5: 	cmpq	%rax, %rbx
    000013d8: 	jne	.Ltmp2421 # Offset: 5080
    000013da: 	movsd	0x30(%rsp), %xmm2
    000013e0: 	movapd	(%rsp), %xmm5
    000013e5: 	movapd	%xmm0, %xmm1
    000013e9: 	mulsd	init_value(%rip), %xmm2
    000013f1: 	andpd	%xmm0, %xmm5
    000013f5: 	comisd	0x20(%rsp), %xmm5
    000013fb: 	subsd	%xmm2, %xmm1
    000013ff: 	jbe	.Ltmp2422 # Offset: 5119
    00001401: 	divsd	%xmm0, %xmm1
.Ltmp2422:
    00001405: 	andpd	(%rsp), %xmm1
    0000140a: 	movsd	0x28(%rsp), %xmm4
    00001410: 	comisd	%xmm1, %xmm4
    00001414: 	jbe	.Ltmp2423 # Offset: 5140
.Ltmp2485:
    0000141a: 	addl	$0x1, %r13d
    0000141e: 	cmpl	%edx, %r13d
    00001421: 	jl	.Ltmp2424 # Offset: 5153
.Ltmp2420:
    00001423: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000142a: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001431: 	subq	$0x20, %rax
    00001435: 	cmpq	%rax, %r14
    00001438: 	je	.Ltmp2425 # Offset: 5176
    0000143e: 	leaq	0x10(%r14), %rdi
    00001442: 	movq	0x98(%rsp), %r13
    0000144a: 	movq	%rdi, (%r14)
    0000144d: 	movq	0x90(%rsp), %rax
    00001455: 	movq	%rax, %rcx
    00001458: 	movq	%rax, (%rsp)
    0000145c: 	addq	%r13, %rcx
    0000145f: 	je	.Ltmp2426 # Offset: 5215
    00001461: 	testq	%rax, %rax
    00001464: 	je	.Ltmp2427 # Offset: 5220
.Ltmp2426:
    0000146a: 	movq	%r13, 0x50(%rsp)
    0000146f: 	cmpq	$0xf, %r13
    00001473: 	ja	.Ltmp2428 # Offset: 5235
    00001479: 	cmpq	$0x1, %r13
    0000147d: 	jne	.Ltmp2429 # Offset: 5245
    00001483: 	movq	(%rsp), %rax
    00001487: 	movzbl	(%rax), %eax
    0000148a: 	movb	%al, 0x10(%r14)
.Ltmp2524:
    0000148e: 	movq	%r13, 0x8(%r14)
    00001492: 	movb	$0x0, (%rdi,%r13)
    00001497: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000149e: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000014a5: 	addq	$0x20, %rax
    000014a9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000014b0: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
    000014b7: 	je	.Ltmp2430 # Offset: 5303
.Ltmp2511:
    000014bd: 	movq	-0x20(%rax), %r13
    000014c1: 	callq	clock@PLT # Offset: 5313
    000014c6: 	pxor	%xmm0, %xmm0
    000014ca: 	movq	%rax, end_time(%rip)
    000014d1: 	movq	%r13, %rdi
    000014d4: 	subq	start_time(%rip), %rax
    000014db: 	cvtsi2sd	%rax, %xmm0
    000014e0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000014e8: 	callq	_Z13record_resultdPKc # Offset: 5352
    000014ed: 	movq	0x90(%rsp), %rdi
    000014f5: 	cmpq	0x38(%rsp), %rdi
    000014fa: 	je	.Ltmp2431 # Offset: 5370
    000014fc: 	movq	0xa0(%rsp), %rax
    00001504: 	leaq	0x1(%rax), %rsi
    00001508: 	callq	_ZdlPvm@PLT # Offset: 5384
.Ltmp2431:
    0000150d: 	leaq	DATAat0x1a29b(%rip), %rdx
    00001514: 	movq	%r15, %rsi
    00001517: 	movq	%r12, %rdi
    0000151a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5402
    0000151f: 	callq	clock@PLT # Offset: 5407
    00001524: 	movl	iterations(%rip), %edx
    0000152a: 	movq	%rax, start_time(%rip)
    00001531: 	testl	%edx, %edx
    00001533: 	jle	.Ltmp2432 # Offset: 5427
    00001539: 	movsd	DATAat0x1a348(%rip), %xmm5
    00001541: 	pxor	%xmm4, %xmm4
    00001545: 	xorl	%r13d, %r13d
    00001548: 	movq	DATAat0x1a360(%rip), %xmm6
    00001550: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001558: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001560: 	movsd	%xmm4, 0x18(%rsp)
    00001566: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000156d: 	movsd	%xmm5, 0x30(%rsp)
    00001573: 	movaps	%xmm6, (%rsp)
    00001577: 	movsd	%xmm7, 0x20(%rsp)
    0000157d: 	movsd	%xmm3, 0x28(%rsp)
    00001583: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2436:
    00001588: 	movq	%rbp, %rax
    0000158b: 	pxor	%xmm0, %xmm0
    0000158f: 	nop # Size: 1
.Ltmp2433:
    00001590: 	movsd	(%rax), %xmm1
    00001594: 	addq	$0x10, %rax
    00001598: 	addsd	%xmm1, %xmm0
    0000159c: 	movsd	-0x8(%rax), %xmm1
    000015a1: 	addsd	%xmm1, %xmm0
    000015a5: 	cmpq	%rbx, %rax
    000015a8: 	jne	.Ltmp2433 # Offset: 5544
    000015aa: 	movsd	0x30(%rsp), %xmm2
    000015b0: 	movapd	(%rsp), %xmm6
    000015b5: 	movapd	%xmm0, %xmm1
    000015b9: 	mulsd	init_value(%rip), %xmm2
    000015c1: 	andpd	%xmm0, %xmm6
    000015c5: 	comisd	0x20(%rsp), %xmm6
    000015cb: 	subsd	%xmm2, %xmm1
    000015cf: 	jbe	.Ltmp2434 # Offset: 5583
    000015d1: 	divsd	%xmm0, %xmm1
.Ltmp2434:
    000015d5: 	andpd	(%rsp), %xmm1
    000015da: 	movsd	0x28(%rsp), %xmm7
    000015e0: 	comisd	%xmm1, %xmm7
    000015e4: 	jbe	.Ltmp2435 # Offset: 5604
.Ltmp2484:
    000015ea: 	addl	$0x1, %r13d
    000015ee: 	cmpl	%edx, %r13d
    000015f1: 	jl	.Ltmp2436 # Offset: 5617
.Ltmp2432:
    000015f3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    000015fa: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001601: 	subq	$0x20, %rax
    00001605: 	cmpq	%rax, %r14
    00001608: 	je	.Ltmp2437 # Offset: 5640
    0000160e: 	leaq	0x10(%r14), %rdi
    00001612: 	movq	0x98(%rsp), %r13
    0000161a: 	movq	%rdi, (%r14)
    0000161d: 	movq	0x90(%rsp), %rax
    00001625: 	movq	%rax, %rcx
    00001628: 	movq	%rax, (%rsp)
    0000162c: 	addq	%r13, %rcx
    0000162f: 	je	.Ltmp2438 # Offset: 5679
    00001631: 	testq	%rax, %rax
    00001634: 	je	.Ltmp2439 # Offset: 5684
.Ltmp2438:
    0000163a: 	movq	%r13, 0x50(%rsp)
    0000163f: 	cmpq	$0xf, %r13
    00001643: 	ja	.Ltmp2440 # Offset: 5699
    00001649: 	cmpq	$0x1, %r13
    0000164d: 	jne	.Ltmp2441 # Offset: 5709
    00001653: 	movq	(%rsp), %rax
    00001657: 	movzbl	(%rax), %eax
    0000165a: 	movb	%al, 0x10(%r14)
.Ltmp2518:
    0000165e: 	movq	%r13, 0x8(%r14)
    00001662: 	movb	$0x0, (%rdi,%r13)
    00001667: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000166e: 	addq	$0x20, %rax
    00001672: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2517:
    00001679: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001680: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001687: 	je	.Ltmp2442 # Offset: 5767
.Ltmp2516:
    0000168d: 	movq	-0x20(%rax), %r13
    00001691: 	callq	clock@PLT # Offset: 5777
    00001696: 	pxor	%xmm0, %xmm0
    0000169a: 	movq	%rax, end_time(%rip)
    000016a1: 	movq	%r13, %rdi
    000016a4: 	subq	start_time(%rip), %rax
    000016ab: 	cvtsi2sd	%rax, %xmm0
    000016b0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000016b8: 	callq	_Z13record_resultdPKc # Offset: 5816
    000016bd: 	movq	0x90(%rsp), %rdi
    000016c5: 	cmpq	0x38(%rsp), %rdi
    000016ca: 	je	.Ltmp2443 # Offset: 5834
    000016cc: 	movq	0xa0(%rsp), %rax
    000016d4: 	leaq	0x1(%rax), %rsi
    000016d8: 	callq	_ZdlPvm@PLT # Offset: 5848
.Ltmp2443:
    000016dd: 	leaq	DATAat0x1a2af(%rip), %rdx
    000016e4: 	movq	%r15, %rsi
    000016e7: 	movq	%r12, %rdi
    000016ea: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 5866
    000016ef: 	callq	clock@PLT # Offset: 5871
    000016f4: 	movl	iterations(%rip), %edx
    000016fa: 	movq	%rax, start_time(%rip)
    00001701: 	testl	%edx, %edx
    00001703: 	jle	.Ltmp2444 # Offset: 5891
    00001709: 	movsd	DATAat0x1a348(%rip), %xmm5
    00001711: 	pxor	%xmm4, %xmm4
    00001715: 	xorl	%r13d, %r13d
    00001718: 	movq	DATAat0x1a360(%rip), %xmm6
    00001720: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001728: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001730: 	movsd	%xmm4, 0x18(%rsp)
    00001736: 	leaq	DATAat0x1a1c8(%rip), %r14
    0000173d: 	movsd	%xmm5, 0x30(%rsp)
    00001743: 	movaps	%xmm6, (%rsp)
    00001747: 	movsd	%xmm7, 0x20(%rsp)
    0000174d: 	movsd	%xmm3, 0x28(%rsp)
    00001753: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2448:
    00001758: 	movq	%rbp, %rax
    0000175b: 	pxor	%xmm0, %xmm0
    0000175f: 	nop # Size: 1
.Ltmp2445:
    00001760: 	movsd	(%rax), %xmm1
    00001764: 	addq	$0x10, %rax
    00001768: 	addsd	%xmm1, %xmm0
    0000176c: 	movsd	-0x8(%rax), %xmm1
    00001771: 	addsd	%xmm1, %xmm0
    00001775: 	cmpq	%rbx, %rax
    00001778: 	jne	.Ltmp2445 # Offset: 6008
    0000177a: 	movsd	0x30(%rsp), %xmm2
    00001780: 	movapd	(%rsp), %xmm7
    00001785: 	movapd	%xmm0, %xmm1
    00001789: 	mulsd	init_value(%rip), %xmm2
    00001791: 	andpd	%xmm0, %xmm7
    00001795: 	comisd	0x20(%rsp), %xmm7
    0000179b: 	subsd	%xmm2, %xmm1
    0000179f: 	jbe	.Ltmp2446 # Offset: 6047
    000017a1: 	divsd	%xmm0, %xmm1
.Ltmp2446:
    000017a5: 	andpd	(%rsp), %xmm1
    000017aa: 	movsd	0x28(%rsp), %xmm5
    000017b0: 	comisd	%xmm1, %xmm5
    000017b4: 	jbe	.Ltmp2447 # Offset: 6068
.Ltmp2483:
    000017ba: 	addl	$0x1, %r13d
    000017be: 	cmpl	%edx, %r13d
    000017c1: 	jl	.Ltmp2448 # Offset: 6081
.Ltmp2444:
    000017c3: 	movq	%r12, %rdi
    000017c6: 	callq	"_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE9push_backERKS5_.constprop.0/1" # Offset: 6086
    000017cb: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000017d2: 	cmpq	"_ZL7gLabels/1"+56(%rip), %rax
    000017d9: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000017e0: 	je	.Ltmp2449 # Offset: 6112
.Ltmp2515:
    000017e6: 	movq	-0x20(%rax), %r13
    000017ea: 	callq	clock@PLT # Offset: 6122
    000017ef: 	pxor	%xmm0, %xmm0
    000017f3: 	movq	%rax, end_time(%rip)
    000017fa: 	movq	%r13, %rdi
    000017fd: 	subq	start_time(%rip), %rax
    00001804: 	cvtsi2sd	%rax, %xmm0
    00001809: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001811: 	callq	_Z13record_resultdPKc # Offset: 6161
    00001816: 	movq	0x90(%rsp), %rdi
    0000181e: 	cmpq	0x38(%rsp), %rdi
    00001823: 	je	.Ltmp2450 # Offset: 6179
    00001825: 	movq	0xa0(%rsp), %rax
    0000182d: 	leaq	0x1(%rax), %rsi
    00001831: 	callq	_ZdlPvm@PLT # Offset: 6193
.Ltmp2450:
    00001836: 	leaq	DATAat0x1a2c4(%rip), %rdx
    0000183d: 	movq	%r15, %rsi
    00001840: 	movq	%r12, %rdi
    00001843: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6211
    00001848: 	callq	clock@PLT # Offset: 6216
    0000184d: 	movl	iterations(%rip), %edx
    00001853: 	movq	%rax, start_time(%rip)
    0000185a: 	testl	%edx, %edx
    0000185c: 	jle	.Ltmp2451 # Offset: 6236
    00001862: 	movsd	DATAat0x1a348(%rip), %xmm5
    0000186a: 	pxor	%xmm4, %xmm4
    0000186e: 	xorl	%r13d, %r13d
    00001871: 	movq	DATAat0x1a360(%rip), %xmm6
    00001879: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001881: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001889: 	movsd	%xmm4, 0x18(%rsp)
    0000188f: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001896: 	movsd	%xmm5, 0x30(%rsp)
    0000189c: 	movaps	%xmm6, (%rsp)
    000018a0: 	movsd	%xmm7, 0x20(%rsp)
    000018a6: 	movsd	%xmm3, 0x28(%rsp)
    000018ac: 	nopl	(%rax) # Size: 4
.Ltmp2455:
    000018b0: 	movq	%rbp, %rax
    000018b3: 	pxor	%xmm0, %xmm0
    000018b7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2452:
    000018c0: 	movsd	(%rax), %xmm1
    000018c4: 	addq	$0x10, %rax
    000018c8: 	addsd	%xmm1, %xmm0
    000018cc: 	movsd	-0x8(%rax), %xmm1
    000018d1: 	addsd	%xmm1, %xmm0
    000018d5: 	cmpq	%rbx, %rax
    000018d8: 	jne	.Ltmp2452 # Offset: 6360
    000018da: 	movsd	0x30(%rsp), %xmm2
    000018e0: 	movapd	(%rsp), %xmm7
    000018e5: 	movapd	%xmm0, %xmm1
    000018e9: 	mulsd	init_value(%rip), %xmm2
    000018f1: 	andpd	%xmm0, %xmm7
    000018f5: 	comisd	0x20(%rsp), %xmm7
    000018fb: 	subsd	%xmm2, %xmm1
    000018ff: 	jbe	.Ltmp2453 # Offset: 6399
    00001901: 	divsd	%xmm0, %xmm1
.Ltmp2453:
    00001905: 	andpd	(%rsp), %xmm1
    0000190a: 	movsd	0x28(%rsp), %xmm3
    00001910: 	comisd	%xmm1, %xmm3
    00001914: 	jbe	.Ltmp2454 # Offset: 6420
.Ltmp2482:
    0000191a: 	addl	$0x1, %r13d
    0000191e: 	cmpl	%edx, %r13d
    00001921: 	jl	.Ltmp2455 # Offset: 6433
.Ltmp2451:
    00001923: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    0000192a: 	movq	"_ZL7gLabels/1"+48(%rip), %r14
    00001931: 	subq	$0x20, %rax
    00001935: 	cmpq	%rax, %r14
    00001938: 	je	.Ltmp2456 # Offset: 6456
    0000193e: 	leaq	0x10(%r14), %rdi
    00001942: 	movq	0x98(%rsp), %r13
    0000194a: 	movq	%rdi, (%r14)
    0000194d: 	movq	0x90(%rsp), %rax
    00001955: 	movq	%rax, %rcx
    00001958: 	movq	%rax, (%rsp)
    0000195c: 	addq	%r13, %rcx
    0000195f: 	je	.Ltmp2457 # Offset: 6495
    00001961: 	testq	%rax, %rax
    00001964: 	je	.Ltmp2458 # Offset: 6500
.Ltmp2457:
    0000196a: 	movq	%r13, 0x50(%rsp)
    0000196f: 	cmpq	$0xf, %r13
    00001973: 	ja	.Ltmp2459 # Offset: 6515
    00001979: 	cmpq	$0x1, %r13
    0000197d: 	jne	.Ltmp2460 # Offset: 6525
    00001983: 	movq	(%rsp), %rax
    00001987: 	movzbl	(%rax), %eax
    0000198a: 	movb	%al, 0x10(%r14)
.Ltmp2528:
    0000198e: 	movq	%r13, 0x8(%r14)
    00001992: 	movb	$0x0, (%rdi,%r13)
    00001997: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000199e: 	addq	$0x20, %rax
    000019a2: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2514:
    000019a9: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    000019b0: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    000019b7: 	je	.Ltmp2461 # Offset: 6583
.Ltmp2513:
    000019bd: 	movq	-0x20(%rax), %r13
    000019c1: 	callq	clock@PLT # Offset: 6593
    000019c6: 	pxor	%xmm0, %xmm0
    000019ca: 	movq	%rax, end_time(%rip)
    000019d1: 	movq	%r13, %rdi
    000019d4: 	subq	start_time(%rip), %rax
    000019db: 	cvtsi2sd	%rax, %xmm0
    000019e0: 	divsd	DATAat0x1a318(%rip), %xmm0
    000019e8: 	callq	_Z13record_resultdPKc # Offset: 6632
    000019ed: 	movq	0x90(%rsp), %rdi
    000019f5: 	cmpq	0x38(%rsp), %rdi
    000019fa: 	je	.Ltmp2462 # Offset: 6650
    000019fc: 	movq	0xa0(%rsp), %rax
    00001a04: 	leaq	0x1(%rax), %rsi
    00001a08: 	callq	_ZdlPvm@PLT # Offset: 6664
.Ltmp2462:
    00001a0d: 	leaq	DATAat0x1a2d9(%rip), %rdx
    00001a14: 	movq	%r15, %rsi
    00001a17: 	movq	%r12, %rdi
    00001a1a: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 6682
    00001a1f: 	callq	clock@PLT # Offset: 6687
    00001a24: 	movl	iterations(%rip), %edx
    00001a2a: 	movq	%rax, start_time(%rip)
    00001a31: 	testl	%edx, %edx
    00001a33: 	jle	.Ltmp2463 # Offset: 6707
    00001a39: 	movsd	DATAat0x1a348(%rip), %xmm5
    00001a41: 	pxor	%xmm4, %xmm4
    00001a45: 	xorl	%r13d, %r13d
    00001a48: 	movq	DATAat0x1a360(%rip), %xmm6
    00001a50: 	movsd	DATAat0x1a330(%rip), %xmm7
    00001a58: 	movsd	DATAat0x1a338(%rip), %xmm3
    00001a60: 	movsd	%xmm4, 0x18(%rsp)
    00001a66: 	leaq	DATAat0x1a1c8(%rip), %r14
    00001a6d: 	movsd	%xmm5, 0x30(%rsp)
    00001a73: 	movaps	%xmm6, (%rsp)
    00001a77: 	movsd	%xmm7, 0x20(%rsp)
    00001a7d: 	movsd	%xmm3, 0x28(%rsp)
    00001a83: 	nopl	(%rax,%rax) # Size: 5
.Ltmp2467:
    00001a88: 	movq	%rbp, %rax
    00001a8b: 	pxor	%xmm0, %xmm0
    00001a8f: 	nop # Size: 1
.Ltmp2464:
    00001a90: 	movsd	(%rax), %xmm1
    00001a94: 	addq	$0x10, %rax
    00001a98: 	addsd	%xmm1, %xmm0
    00001a9c: 	movsd	-0x8(%rax), %xmm1
    00001aa1: 	addsd	%xmm1, %xmm0
    00001aa5: 	cmpq	%rbx, %rax
    00001aa8: 	jne	.Ltmp2464 # Offset: 6824
    00001aaa: 	movsd	0x30(%rsp), %xmm2
    00001ab0: 	movapd	(%rsp), %xmm3
    00001ab5: 	movapd	%xmm0, %xmm1
    00001ab9: 	mulsd	init_value(%rip), %xmm2
    00001ac1: 	andpd	%xmm0, %xmm3
    00001ac5: 	comisd	0x20(%rsp), %xmm3
    00001acb: 	subsd	%xmm2, %xmm1
    00001acf: 	jbe	.Ltmp2465 # Offset: 6863
    00001ad1: 	divsd	%xmm0, %xmm1
.Ltmp2465:
    00001ad5: 	andpd	(%rsp), %xmm1
    00001ada: 	movsd	0x28(%rsp), %xmm6
    00001ae0: 	comisd	%xmm1, %xmm6
    00001ae4: 	jbe	.Ltmp2466 # Offset: 6884
.Ltmp2481:
    00001aea: 	addl	$0x1, %r13d
    00001aee: 	cmpl	%edx, %r13d
    00001af1: 	jl	.Ltmp2467 # Offset: 6897
.Ltmp2463:
    00001af3: 	movq	"_ZL7gLabels/1"+64(%rip), %rax
    00001afa: 	movq	"_ZL7gLabels/1"+48(%rip), %rbx
    00001b01: 	subq	$0x20, %rax
    00001b05: 	cmpq	%rax, %rbx
    00001b08: 	je	.Ltmp2468 # Offset: 6920
    00001b0e: 	leaq	0x10(%rbx), %rdi
    00001b12: 	movq	0x98(%rsp), %r13
    00001b1a: 	movq	%rdi, (%rbx)
    00001b1d: 	movq	0x90(%rsp), %rbp
    00001b25: 	movq	%rbp, %rax
    00001b28: 	addq	%r13, %rax
    00001b2b: 	je	.Ltmp2469 # Offset: 6955
    00001b2d: 	testq	%rbp, %rbp
    00001b30: 	je	.Ltmp2470 # Offset: 6960
.Ltmp2469:
    00001b36: 	movq	%r13, 0x50(%rsp)
    00001b3b: 	cmpq	$0xf, %r13
    00001b3f: 	ja	.Ltmp2471 # Offset: 6975
    00001b45: 	cmpq	$0x1, %r13
    00001b49: 	jne	.Ltmp2472 # Offset: 6985
    00001b4f: 	movzbl	(%rbp), %eax
    00001b53: 	movb	%al, 0x10(%rbx)
.Ltmp2530:
    00001b56: 	movq	%r13, 0x8(%rbx)
    00001b5a: 	movb	$0x0, (%rdi,%r13)
    00001b5f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001b66: 	addq	$0x20, %rax
    00001b6a: 	movq	%rax, "_ZL7gLabels/1"+48(%rip)
.Ltmp2499:
    00001b71: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001b78: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001b7f: 	je	.Ltmp2473 # Offset: 7039
.Ltmp2498:
    00001b85: 	movq	-0x20(%rax), %rbp
    00001b89: 	callq	clock@PLT # Offset: 7049
    00001b8e: 	pxor	%xmm0, %xmm0
    00001b92: 	movq	%rax, end_time(%rip)
    00001b99: 	movq	%rbp, %rdi
    00001b9c: 	subq	start_time(%rip), %rax
    00001ba3: 	cvtsi2sd	%rax, %xmm0
    00001ba8: 	divsd	DATAat0x1a318(%rip), %xmm0
    00001bb0: 	callq	_Z13record_resultdPKc # Offset: 7088
    00001bb5: 	movq	0x90(%rsp), %rdi
    00001bbd: 	cmpq	0x38(%rsp), %rdi
    00001bc2: 	je	.Ltmp2474 # Offset: 7106
    00001bc4: 	movq	0xa0(%rsp), %rax
    00001bcc: 	leaq	0x1(%rax), %rsi
    00001bd0: 	callq	_ZdlPvm@PLT # Offset: 7120
.Ltmp2474:
    00001bd5: 	leaq	DATAat0x1a2ee(%rip), %rdx
    00001bdc: 	movq	%r15, %rsi
    00001bdf: 	movq	%r12, %rdi
    00001be2: 	callq	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_PKS5_ # Offset: 7138
    00001be7: 	movl	iterations(%rip), %edx
    00001bed: 	xorl	%r8d, %r8d
    00001bf0: 	xorl	%ecx, %ecx
    00001bf2: 	movl	$0x1f40, %esi
    00001bf7: 	movq	0x90(%rsp), %rdi
    00001bff: 	callq	_Z9summarizePKciiii # Offset: 7167
    00001c04: 	movq	0x90(%rsp), %rdi
    00001c0c: 	cmpq	0x38(%rsp), %rdi
    00001c11: 	je	.Ltmp2475 # Offset: 7185
    00001c13: 	movq	0xa0(%rsp), %rax
    00001c1b: 	leaq	0x1(%rax), %rsi
    00001c1f: 	callq	_ZdlPvm@PLT # Offset: 7199
.Ltmp2475:
    00001c24: 	movq	0x70(%rsp), %rdi
    00001c29: 	cmpq	0x48(%rsp), %rdi
    00001c2e: 	je	.Ltmp2476 # Offset: 7214
    00001c30: 	movq	0x80(%rsp), %rax
    00001c38: 	leaq	0x1(%rax), %rsi
    00001c3c: 	callq	_ZdlPvm@PLT # Offset: 7228
.Ltmp2476:
    00001c41: 	movq	0xfab8(%rsp), %rax
    00001c49: 	subq	%fs:0x28, %rax
    00001c52: 	jne	.Ltmp2477 # Offset: 7250
    00001c58: 	addq	$0xfac8, %rsp
    00001c5f: 	popq	%rbx
    00001c60: 	popq	%rbp
    00001c61: 	popq	%r12
    00001c63: 	popq	%r13
    00001c65: 	popq	%r14
    00001c67: 	popq	%r15
    00001c69: 	retq # Offset: 7273
    00001c6a: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2326:
    00001c70: 	movl	current_test(%rip), %edx
    00001c76: 	movq	%r14, %rsi
    00001c79: 	movl	$0x1, %edi
    00001c7e: 	xorl	%eax, %eax
    00001c80: 	callq	__printf_chk@PLT # Offset: 7296
    00001c85: 	movl	iterations(%rip), %edx
    00001c8b: 	jmp	.Ltmp2478 # Offset: 7307
.Ltmp2319:
    00001c90: 	movl	current_test(%rip), %edx
    00001c96: 	movq	%r14, %rsi
    00001c99: 	movl	$0x1, %edi
    00001c9e: 	xorl	%eax, %eax
    00001ca0: 	callq	__printf_chk@PLT # Offset: 7328
    00001ca5: 	movl	iterations(%rip), %edx
    00001cab: 	jmp	.Ltmp2479 # Offset: 7339
.Ltmp2331:
    00001cb0: 	movq	0x40(%rsp), %rsi
    00001cb5: 	xorl	%edx, %edx
    00001cb7: 	movq	%r14, %rdi
    00001cba: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 7354
    00001cbf: 	movq	%rax, (%r14)
    00001cc2: 	movq	%rax, %rdi
    00001cc5: 	movq	0x50(%rsp), %rax
    00001cca: 	movq	%rax, 0x10(%r14)
.Ltmp2531:
    00001cce: 	movq	(%rsp), %rsi
    00001cd2: 	movq	%r13, %rdx
    00001cd5: 	callq	memcpy@PLT # Offset: 7381
    00001cda: 	movq	0x50(%rsp), %r13
    00001cdf: 	movq	(%r14), %rdi
    00001ce2: 	jmp	.Ltmp2480 # Offset: 7394
    00001ce7: 	nopw	(%rax,%rax) # Size: 9
.Ltmp2466:
    00001cf0: 	movl	current_test(%rip), %edx
    00001cf6: 	movq	%r14, %rsi
    00001cf9: 	movl	$0x1, %edi
    00001cfe: 	xorl	%eax, %eax
    00001d00: 	callq	__printf_chk@PLT # Offset: 7424
    00001d05: 	movl	iterations(%rip), %edx
    00001d0b: 	jmp	.Ltmp2481 # Offset: 7435
.Ltmp2454:
    00001d10: 	movl	current_test(%rip), %edx
    00001d16: 	movq	%r14, %rsi
    00001d19: 	movl	$0x1, %edi
    00001d1e: 	xorl	%eax, %eax
    00001d20: 	callq	__printf_chk@PLT # Offset: 7456
    00001d25: 	movl	iterations(%rip), %edx
    00001d2b: 	jmp	.Ltmp2482 # Offset: 7467
.Ltmp2447:
    00001d30: 	movl	current_test(%rip), %edx
    00001d36: 	movq	%r14, %rsi
    00001d39: 	movl	$0x1, %edi
    00001d3e: 	xorl	%eax, %eax
    00001d40: 	callq	__printf_chk@PLT # Offset: 7488
    00001d45: 	movl	iterations(%rip), %edx
    00001d4b: 	jmp	.Ltmp2483 # Offset: 7499
.Ltmp2435:
    00001d50: 	movl	current_test(%rip), %edx
    00001d56: 	movq	%r14, %rsi
    00001d59: 	movl	$0x1, %edi
    00001d5e: 	xorl	%eax, %eax
    00001d60: 	callq	__printf_chk@PLT # Offset: 7520
    00001d65: 	movl	iterations(%rip), %edx
    00001d6b: 	jmp	.Ltmp2484 # Offset: 7531
.Ltmp2423:
    00001d70: 	movl	current_test(%rip), %edx
    00001d76: 	movq	%r14, %rsi
    00001d79: 	movl	$0x1, %edi
    00001d7e: 	xorl	%eax, %eax
    00001d80: 	callq	__printf_chk@PLT # Offset: 7552
    00001d85: 	movl	iterations(%rip), %edx
    00001d8b: 	jmp	.Ltmp2485 # Offset: 7563
.Ltmp2416:
    00001d90: 	movl	current_test(%rip), %edx
    00001d96: 	movq	%r14, %rsi
    00001d99: 	movl	$0x1, %edi
    00001d9e: 	xorl	%eax, %eax
    00001da0: 	callq	__printf_chk@PLT # Offset: 7584
    00001da5: 	movl	iterations(%rip), %edx
    00001dab: 	jmp	.Ltmp2486 # Offset: 7595
.Ltmp2409:
    00001db0: 	movl	current_test(%rip), %edx
    00001db6: 	movq	%r14, %rsi
    00001db9: 	movl	$0x1, %edi
    00001dbe: 	xorl	%eax, %eax
    00001dc0: 	callq	__printf_chk@PLT # Offset: 7616
    00001dc5: 	movl	iterations(%rip), %edx
    00001dcb: 	jmp	.Ltmp2487 # Offset: 7627
.Ltmp2402:
    00001dd0: 	movl	current_test(%rip), %edx
    00001dd6: 	movq	%r14, %rsi
    00001dd9: 	movl	$0x1, %edi
    00001dde: 	xorl	%eax, %eax
    00001de0: 	callq	__printf_chk@PLT # Offset: 7648
    00001de5: 	movl	iterations(%rip), %edx
    00001deb: 	jmp	.Ltmp2488 # Offset: 7659
.Ltmp2352:
    00001df0: 	movl	current_test(%rip), %edx
    00001df6: 	movq	%r14, %rsi
    00001df9: 	movl	$0x1, %edi
    00001dfe: 	xorl	%eax, %eax
    00001e00: 	callq	__printf_chk@PLT # Offset: 7680
    00001e05: 	movl	iterations(%rip), %edx
    00001e0b: 	jmp	.Ltmp2489 # Offset: 7691
.Ltmp2345:
    00001e10: 	movl	current_test(%rip), %edx
    00001e16: 	movq	%r14, %rsi
    00001e19: 	movl	$0x1, %edi
    00001e1e: 	xorl	%eax, %eax
    00001e20: 	callq	__printf_chk@PLT # Offset: 7712
    00001e25: 	movl	iterations(%rip), %edx
    00001e2b: 	jmp	.Ltmp2490 # Offset: 7723
.Ltmp2338:
    00001e30: 	movl	current_test(%rip), %edx
    00001e36: 	movq	%r14, %rsi
    00001e39: 	movl	$0x1, %edi
    00001e3e: 	xorl	%eax, %eax
    00001e40: 	callq	__printf_chk@PLT # Offset: 7744
    00001e45: 	movl	iterations(%rip), %edx
    00001e4b: 	jmp	.Ltmp2491 # Offset: 7755
.Ltmp2395:
    00001e50: 	movl	current_test(%rip), %edx
    00001e56: 	movq	%r14, %rsi
    00001e59: 	movl	$0x1, %edi
    00001e5e: 	xorl	%eax, %eax
    00001e60: 	callq	__printf_chk@PLT # Offset: 7776
    00001e65: 	movl	iterations(%rip), %edx
    00001e6b: 	jmp	.Ltmp2492 # Offset: 7787
.Ltmp2383:
    00001e70: 	movl	current_test(%rip), %edx
    00001e76: 	movq	%r14, %rsi
    00001e79: 	movl	$0x1, %edi
    00001e7e: 	xorl	%eax, %eax
    00001e80: 	callq	__printf_chk@PLT # Offset: 7808
    00001e85: 	movl	iterations(%rip), %edx
    00001e8b: 	jmp	.Ltmp2493 # Offset: 7819
.Ltmp2376:
    00001e90: 	movl	current_test(%rip), %edx
    00001e96: 	movq	%r14, %rsi
    00001e99: 	movl	$0x1, %edi
    00001e9e: 	xorl	%eax, %eax
    00001ea0: 	callq	__printf_chk@PLT # Offset: 7840
    00001ea5: 	movl	iterations(%rip), %edx
    00001eab: 	jmp	.Ltmp2494 # Offset: 7851
.Ltmp2364:
    00001eb0: 	movl	current_test(%rip), %edx
    00001eb6: 	movq	%r14, %rsi
    00001eb9: 	movl	$0x1, %edi
    00001ebe: 	xorl	%eax, %eax
    00001ec0: 	callq	__printf_chk@PLT # Offset: 7872
    00001ec5: 	movl	iterations(%rip), %edx
    00001ecb: 	jmp	.Ltmp2495 # Offset: 7883
.Ltmp2366:
    00001ed0: 	movq	%r12, %rsi
    00001ed3: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001eda: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7898
    00001edf: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001ee6: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001eed: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001ef4: 	jne	.Ltmp2496 # Offset: 7924
.Ltmp2371:
    00001efa: 	movq	-0x8(%rdx), %rax
    00001efe: 	addq	$0x200, %rax
    00001f04: 	jmp	.Ltmp2496 # Offset: 7940
.Ltmp2359:
    00001f09: 	movq	-0x8(%rdx), %rax
    00001f0d: 	addq	$0x200, %rax
    00001f13: 	jmp	.Ltmp2497 # Offset: 7955
.Ltmp2473:
    00001f18: 	movq	-0x8(%rdx), %rax
    00001f1c: 	addq	$0x200, %rax
    00001f22: 	jmp	.Ltmp2498 # Offset: 7970
.Ltmp2468:
    00001f27: 	movq	%r12, %rsi
    00001f2a: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f31: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 7985
    00001f36: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f3d: 	jmp	.Ltmp2499 # Offset: 7997
.Ltmp2321:
    00001f42: 	movq	-0x8(%rdx), %rax
    00001f46: 	addq	$0x200, %rax
    00001f4c: 	jmp	.Ltmp2500 # Offset: 8012
.Ltmp2411:
    00001f51: 	movq	-0x8(%rdx), %rax
    00001f55: 	addq	$0x200, %rax
    00001f5b: 	jmp	.Ltmp2501 # Offset: 8027
.Ltmp2404:
    00001f60: 	movq	-0x8(%rdx), %rax
    00001f64: 	addq	$0x200, %rax
    00001f6a: 	jmp	.Ltmp2502 # Offset: 8042
.Ltmp2354:
    00001f6f: 	movq	%r12, %rsi
    00001f72: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001f79: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8057
    00001f7e: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001f85: 	jmp	.Ltmp2503 # Offset: 8069
.Ltmp2378:
    00001f8a: 	movq	-0x8(%rdx), %rax
    00001f8e: 	addq	$0x200, %rax
    00001f94: 	jmp	.Ltmp2504 # Offset: 8084
.Ltmp2347:
    00001f99: 	movq	-0x8(%rdx), %rax
    00001f9d: 	addq	$0x200, %rax
    00001fa3: 	jmp	.Ltmp2505 # Offset: 8099
.Ltmp2340:
    00001fa8: 	movq	-0x8(%rdx), %rax
    00001fac: 	addq	$0x200, %rax
    00001fb2: 	jmp	.Ltmp2506 # Offset: 8114
.Ltmp2385:
    00001fb7: 	movq	%r12, %rsi
    00001fba: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00001fc1: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8129
    00001fc6: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00001fcd: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00001fd4: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    00001fdb: 	jne	.Ltmp2507 # Offset: 8155
.Ltmp2390:
    00001fe1: 	movq	-0x8(%rdx), %rax
    00001fe5: 	addq	$0x200, %rax
    00001feb: 	jmp	.Ltmp2507 # Offset: 8171
.Ltmp2333:
    00001ff0: 	movq	-0x8(%rdx), %rax
    00001ff4: 	addq	$0x200, %rax
    00001ffa: 	jmp	.Ltmp2508 # Offset: 8186
.Ltmp2397:
    00001fff: 	movq	-0x8(%rdx), %rax
    00002003: 	addq	$0x200, %rax
    00002009: 	jmp	.Ltmp2509 # Offset: 8201
.Ltmp2328:
    0000200e: 	movq	%r12, %rsi
    00002011: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002018: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8216
    0000201d: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002024: 	jmp	.Ltmp2510 # Offset: 8228
.Ltmp2425:
    00002029: 	movq	%r12, %rsi
    0000202c: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    00002033: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8243
    00002038: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    0000203f: 	cmpq	%rax, "_ZL7gLabels/1"+56(%rip)
    00002046: 	movq	"_ZL7gLabels/1"+72(%rip), %rdx
    0000204d: 	jne	.Ltmp2511 # Offset: 8269
.Ltmp2430:
    00002053: 	movq	-0x8(%rdx), %rax
    00002057: 	addq	$0x200, %rax
    0000205d: 	jmp	.Ltmp2511 # Offset: 8285
.Ltmp2418:
    00002062: 	movq	-0x8(%rdx), %rax
    00002066: 	addq	$0x200, %rax
    0000206c: 	jmp	.Ltmp2512 # Offset: 8300
.Ltmp2461:
    00002071: 	movq	-0x8(%rdx), %rax
    00002075: 	addq	$0x200, %rax
    0000207b: 	jmp	.Ltmp2513 # Offset: 8315
.Ltmp2456:
    00002080: 	movq	%r12, %rsi
    00002083: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    0000208a: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8330
    0000208f: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    00002096: 	jmp	.Ltmp2514 # Offset: 8342
.Ltmp2449:
    0000209b: 	movq	-0x8(%rdx), %rax
    0000209f: 	addq	$0x200, %rax
    000020a5: 	jmp	.Ltmp2515 # Offset: 8357
.Ltmp2442:
    000020aa: 	movq	-0x8(%rdx), %rax
    000020ae: 	addq	$0x200, %rax
    000020b4: 	jmp	.Ltmp2516 # Offset: 8372
.Ltmp2437:
    000020b9: 	movq	%r12, %rsi
    000020bc: 	leaq	"_ZL7gLabels/1"(%rip), %rdi
    000020c3: 	callq	_ZNSt5dequeINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE16_M_push_back_auxIJRKS5_EEEvDpOT_ # Offset: 8387
    000020c8: 	movq	"_ZL7gLabels/1"+48(%rip), %rax
    000020cf: 	jmp	.Ltmp2517 # Offset: 8399
.Ltmp2441:
    000020d4: 	testq	%r13, %r13
    000020d7: 	je	.Ltmp2518 # Offset: 8407
    000020dd: 	jmp	.Ltmp2519 # Offset: 8413
    000020e2: 	nopw	(%rax,%rax) # Size: 6
.Ltmp2389:
    000020e8: 	testq	%r13, %r13
    000020eb: 	je	.Ltmp2520 # Offset: 8427
    000020f1: 	jmp	.Ltmp2521 # Offset: 8433
    000020f6: 	nopw	%cs:(%rax,%rax) # Size: 10
.Ltmp2358:
    00002100: 	testq	%r13, %r13
    00002103: 	je	.Ltmp2522 # Offset: 8451
    00002109: 	jmp	.Ltmp2523 # Offset: 8457
    0000210e: 	nop # Size: 2
.Ltmp2429:
    00002110: 	testq	%r13, %r13
    00002113: 	je	.Ltmp2524 # Offset: 8467
    00002119: 	jmp	.Ltmp2525 # Offset: 8473
    0000211e: 	nop # Size: 2
.Ltmp2370:
    00002120: 	testq	%r13, %r13
    00002123: 	je	.Ltmp2526 # Offset: 8483
    00002129: 	jmp	.Ltmp2527 # Offset: 8489
    0000212e: 	nop # Size: 2
.Ltmp2460:
    00002130: 	testq	%r13, %r13
    00002133: 	je	.Ltmp2528 # Offset: 8499
    00002139: 	jmp	.Ltmp2529 # Offset: 8505
    0000213e: 	nop # Size: 2
.Ltmp2472:
    00002140: 	testq	%r13, %r13
    00002143: 	je	.Ltmp2530 # Offset: 8515
.Ltmp2532:
    00002149: 	movq	%r13, %rdx
    0000214c: 	movq	%rbp, %rsi
    0000214f: 	callq	memcpy@PLT # Offset: 8527
    00002154: 	movq	0x50(%rsp), %r13
    00002159: 	movq	(%rbx), %rdi
    0000215c: 	jmp	.Ltmp2530 # Offset: 8540
.Ltmp2332:
    00002161: 	testq	%r13, %r13
    00002164: 	je	.Ltmp2480 # Offset: 8548
    0000216a: 	jmp	.Ltmp2531 # Offset: 8554
    0000216f: 	nop # Size: 1
.Ltmp2440:
    00002170: 	movq	0x40(%rsp), %rsi
    00002175: 	xorl	%edx, %edx
    00002177: 	movq	%r14, %rdi
    0000217a: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8570
    0000217f: 	movq	%rax, (%r14)
    00002182: 	movq	%rax, %rdi
    00002185: 	movq	0x50(%rsp), %rax
    0000218a: 	movq	%rax, 0x10(%r14)
.Ltmp2519:
    0000218e: 	movq	(%rsp), %rsi
    00002192: 	movq	%r13, %rdx
    00002195: 	callq	memcpy@PLT # Offset: 8597
    0000219a: 	movq	0x50(%rsp), %r13
    0000219f: 	movq	(%r14), %rdi
    000021a2: 	jmp	.Ltmp2518 # Offset: 8610
.Ltmp2471:
    000021a7: 	movq	0x40(%rsp), %rsi
    000021ac: 	xorl	%edx, %edx
    000021ae: 	movq	%rbx, %rdi
    000021b1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8625
    000021b6: 	movq	%rax, (%rbx)
    000021b9: 	movq	%rax, %rdi
    000021bc: 	movq	0x50(%rsp), %rax
    000021c1: 	movq	%rax, 0x10(%rbx)
    000021c5: 	jmp	.Ltmp2532 # Offset: 8645
.Ltmp2369:
    000021c7: 	movq	0x40(%rsp), %rsi
    000021cc: 	xorl	%edx, %edx
    000021ce: 	movq	%r14, %rdi
    000021d1: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8657
    000021d6: 	movq	%rax, (%r14)
    000021d9: 	movq	%rax, %rdi
    000021dc: 	movq	0x50(%rsp), %rax
    000021e1: 	movq	%rax, 0x10(%r14)
.Ltmp2527:
    000021e5: 	movq	(%rsp), %rsi
    000021e9: 	movq	%r13, %rdx
    000021ec: 	callq	memcpy@PLT # Offset: 8684
    000021f1: 	movq	0x50(%rsp), %r13
    000021f6: 	movq	(%r14), %rdi
    000021f9: 	jmp	.Ltmp2526 # Offset: 8697
.Ltmp2459:
    000021fe: 	movq	0x40(%rsp), %rsi
    00002203: 	xorl	%edx, %edx
    00002205: 	movq	%r14, %rdi
    00002208: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8712
    0000220d: 	movq	%rax, (%r14)
    00002210: 	movq	%rax, %rdi
    00002213: 	movq	0x50(%rsp), %rax
    00002218: 	movq	%rax, 0x10(%r14)
.Ltmp2529:
    0000221c: 	movq	(%rsp), %rsi
    00002220: 	movq	%r13, %rdx
    00002223: 	callq	memcpy@PLT # Offset: 8739
    00002228: 	movq	0x50(%rsp), %r13
    0000222d: 	movq	(%r14), %rdi
    00002230: 	jmp	.Ltmp2528 # Offset: 8752
.Ltmp2357:
    00002235: 	movq	0x40(%rsp), %rsi
    0000223a: 	xorl	%edx, %edx
    0000223c: 	movq	%r14, %rdi
    0000223f: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8767
    00002244: 	movq	%rax, (%r14)
    00002247: 	movq	%rax, %rdi
    0000224a: 	movq	0x50(%rsp), %rax
    0000224f: 	movq	%rax, 0x10(%r14)
.Ltmp2523:
    00002253: 	movq	(%rsp), %rsi
    00002257: 	movq	%r13, %rdx
    0000225a: 	callq	memcpy@PLT # Offset: 8794
    0000225f: 	movq	0x50(%rsp), %r13
    00002264: 	movq	(%r14), %rdi
    00002267: 	jmp	.Ltmp2522 # Offset: 8807
.Ltmp2388:
    0000226c: 	movq	0x40(%rsp), %rsi
    00002271: 	xorl	%edx, %edx
    00002273: 	movq	%r14, %rdi
    00002276: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8822
    0000227b: 	movq	%rax, (%r14)
    0000227e: 	movq	%rax, %rdi
    00002281: 	movq	0x50(%rsp), %rax
    00002286: 	movq	%rax, 0x10(%r14)
.Ltmp2521:
    0000228a: 	movq	(%rsp), %rsi
    0000228e: 	movq	%r13, %rdx
    00002291: 	callq	memcpy@PLT # Offset: 8849
    00002296: 	movq	0x50(%rsp), %r13
    0000229b: 	movq	(%r14), %rdi
    0000229e: 	jmp	.Ltmp2520 # Offset: 8862
.Ltmp2428:
    000022a3: 	movq	0x40(%rsp), %rsi
    000022a8: 	xorl	%edx, %edx
    000022aa: 	movq	%r14, %rdi
    000022ad: 	callq	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT # Offset: 8877
    000022b2: 	movq	%rax, (%r14)
    000022b5: 	movq	%rax, %rdi
    000022b8: 	movq	0x50(%rsp), %rax
    000022bd: 	movq	%rax, 0x10(%r14)
.Ltmp2525:
    000022c1: 	movq	(%rsp), %rsi
    000022c5: 	movq	%r13, %rdx
    000022c8: 	callq	memcpy@PLT # Offset: 8904
    000022cd: 	movq	0x50(%rsp), %r13
    000022d2: 	movq	(%r14), %rdi
    000022d5: 	jmp	.Ltmp2524 # Offset: 8917
.Ltmp2356:
    000022da: 	leaq	DATAat0x1a158(%rip), %rdi
    000022e1: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8929
.Ltmp2368:
    000022e6: 	leaq	DATAat0x1a158(%rip), %rdi
    000022ed: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8941
.Ltmp2387:
    000022f2: 	leaq	DATAat0x1a158(%rip), %rdi
    000022f9: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8953
.Ltmp2427:
    000022fe: 	leaq	DATAat0x1a158(%rip), %rdi
    00002305: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8965
.Ltmp2439:
    0000230a: 	leaq	DATAat0x1a158(%rip), %rdi
    00002311: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8977
.Ltmp2458:
    00002316: 	leaq	DATAat0x1a158(%rip), %rdi
    0000231d: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 8989
.Ltmp2470:
    00002322: 	leaq	DATAat0x1a158(%rip), %rdi
    00002329: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9001
.Ltmp2477:
    0000232e: 	callq	__stack_chk_fail@PLT # Offset: 9006
.Ltmp2330:
    00002333: 	leaq	DATAat0x1a158(%rip), %rdi
    0000233a: 	callq	_ZSt19__throw_logic_errorPKc@PLT # Offset: 9018
    0000233f: 	endbr64
    00002343: 	movq	%rax, %rbp
    00002346: 	jmp	.Ltmp2533 # Offset: 9030
    00002348: 	endbr64
    0000234c: 	movq	%rax, %rbp
    0000234f: 	jmp	.Ltmp2534 # Offset: 9039
    00002351: 	endbr64
.Ltmp2538:
    00002355: 	movq	%rax, %rbp
    00002358: 	jmp	.Ltmp2535 # Offset: 9048
.Ltmp2533:
    0000235a: 	movq	0x90(%rsp), %rdi
    00002362: 	leaq	0xa0(%rsp), %rax
    0000236a: 	cmpq	%rax, %rdi
    0000236d: 	je	.Ltmp2534 # Offset: 9069
.Ltmp2537:
    0000236f: 	movq	0xa0(%rsp), %rax
    00002377: 	leaq	0x1(%rax), %rsi
    0000237b: 	callq	_ZdlPvm@PLT # Offset: 9083
.Ltmp2534:
    00002380: 	movq	0x70(%rsp), %rdi
    00002385: 	cmpq	0x48(%rsp), %rdi
    0000238a: 	je	.Ltmp2536 # Offset: 9098
    0000238c: 	movq	0x80(%rsp), %rax
    00002394: 	leaq	0x1(%rax), %rsi
    00002398: 	callq	_ZdlPvm@PLT # Offset: 9112
.Ltmp2536:
    0000239d: 	movq	%rbp, %rdi
    000023a0: 	callq	_Unwind_Resume@PLT # Offset: 9120
.Ltmp2535:
    000023a5: 	movq	0x90(%rsp), %rdi
    000023ad: 	cmpq	0x38(%rsp), %rdi
    000023b2: 	jne	.Ltmp2537 # Offset: 9138
    000023b4: 	jmp	.Ltmp2534 # Offset: 9140
    000023b6: 	endbr64
    000023ba: 	jmp	.Ltmp2538 # Offset: 9146
    000023bc: 	endbr64
    000023c0: 	jmp	.Ltmp2538 # Offset: 9152
    000023c2: 	endbr64
    000023c6: 	jmp	.Ltmp2538 # Offset: 9158
    000023c8: 	endbr64
    000023cc: 	jmp	.Ltmp2538 # Offset: 9164
    000023ce: 	endbr64
    000023d2: 	jmp	.Ltmp2538 # Offset: 9170
    000023d4: 	endbr64
    000023d8: 	jmp	.Ltmp2538 # Offset: 9176
    000023dd: 	endbr64
    000023e1: 	jmp	.Ltmp2538 # Offset: 9185
    000023e6: 	endbr64
    000023ea: 	jmp	.Ltmp2538 # Offset: 9194
    000023ef: 	endbr64
    000023f3: 	jmp	.Ltmp2538 # Offset: 9203
    000023f8: 	endbr64
    000023fc: 	jmp	.Ltmp2538 # Offset: 9212
    00002401: 	endbr64
    00002405: 	jmp	.Ltmp2538 # Offset: 9221
    0000240a: 	endbr64
    0000240e: 	jmp	.Ltmp2538 # Offset: 9230
    00002413: 	endbr64
    00002417: 	jmp	.Ltmp2538 # Offset: 9239
    0000241c: 	endbr64
    00002420: 	jmp	.Ltmp2538 # Offset: 9248
    00002425: 	endbr64
    00002429: 	jmp	.Ltmp2538 # Offset: 9257
    0000242e: 	endbr64
    00002432: 	jmp	.Ltmp2538 # Offset: 9266
DWARF CFI Instructions:
    <empty>
End of Function "_Z11TestOneTypeIdEvv"

Binary Function "_fini" after disassembly {
  Number      : 57
  State       : disassembled
  Address     : 0x19f18
  Size        : 0xd
  MaxSize     : 0xd
  Offset      : 0x19f18
  Section     : .fini
  Orc Section : .local.text._fini
  LSDA        : 0x0
  IsSimple    : 1
  IsMultiEntry: 0
  IsSplit     : 0
  BB Count    : 0
}
.LBB056:
    00000000: 	endbr64
    00000004: 	subq	$0x8, %rsp
    00000008: 	addq	$0x8, %rsp
    0000000c: 	retq # Offset: 12
DWARF CFI Instructions:
    <empty>
End of Function "_fini"

BOLT-INFO: 0 out of 58 functions in the binary (0.0%) have non-empty execution profile
BOLT-INFO: 1723 instructions were shortened
BOLT-INFO: removed 284 empty blocks
BOLT-INFO: patched build-id (flipped last bit)
BOLT: 53 out of 85 functions were overwritten.
BOLT-INFO: rewriting .eh_frame_hdr in-place
BOLT-INFO: setting _end to 0x202ad4
